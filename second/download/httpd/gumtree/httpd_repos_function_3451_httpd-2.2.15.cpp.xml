<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/httpd/gumtree/httpd_repos_function_3451_httpd-2.2.15.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">int<pos:position pos:line="1" pos:column="4"/></name></type> <name pos:line="1" pos:column="5">parse_output_file_name<pos:position pos:line="1" pos:column="27"/></name><parameter_list pos:line="1" pos:column="27">(<parameter><decl><type><name pos:line="1" pos:column="28">char<pos:position pos:line="1" pos:column="32"/></name> <modifier pos:line="1" pos:column="33">*<pos:position pos:line="1" pos:column="34"/></modifier></type><name pos:line="1" pos:column="34">arg<pos:position pos:line="1" pos:column="37"/></name></decl></parameter>, <parameter><decl><type><name pos:line="1" pos:column="39">command_t<pos:position pos:line="1" pos:column="48"/></name> <modifier pos:line="1" pos:column="49">*<pos:position pos:line="1" pos:column="50"/></modifier></type><name pos:line="1" pos:column="50">cmd_data<pos:position pos:line="1" pos:column="58"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="59"/></parameter_list>
<block pos:line="2" pos:column="1">{
    <decl_stmt><decl><type><name pos:line="3" pos:column="5">char<pos:position pos:line="3" pos:column="9"/></name> <modifier pos:line="3" pos:column="10">*<pos:position pos:line="3" pos:column="11"/></modifier></type><name pos:line="3" pos:column="11">name<pos:position pos:line="3" pos:column="15"/></name> <init pos:line="3" pos:column="16">= <expr><call><name pos:line="3" pos:column="18">strrchr<pos:position pos:line="3" pos:column="25"/></name><argument_list pos:line="3" pos:column="25">(<argument><expr><name pos:line="3" pos:column="26">arg<pos:position pos:line="3" pos:column="29"/></name></expr></argument>, <argument><expr><literal type="char" pos:line="3" pos:column="31">'/'<pos:position pos:line="3" pos:column="34"/></literal></expr></argument>)<pos:position pos:line="3" pos:column="35"/></argument_list></call></expr></init></decl>;<pos:position pos:line="3" pos:column="36"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="4" pos:column="5">char<pos:position pos:line="4" pos:column="9"/></name> <modifier pos:line="4" pos:column="10">*<pos:position pos:line="4" pos:column="11"/></modifier></type><name pos:line="4" pos:column="11">ext<pos:position pos:line="4" pos:column="14"/></name> <init pos:line="4" pos:column="15">= <expr><call><name pos:line="4" pos:column="17">strrchr<pos:position pos:line="4" pos:column="24"/></name><argument_list pos:line="4" pos:column="24">(<argument><expr><name pos:line="4" pos:column="25">arg<pos:position pos:line="4" pos:column="28"/></name></expr></argument>, <argument><expr><literal type="char" pos:line="4" pos:column="30">'.'<pos:position pos:line="4" pos:column="33"/></literal></expr></argument>)<pos:position pos:line="4" pos:column="34"/></argument_list></call></expr></init></decl>;<pos:position pos:line="4" pos:column="35"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="5" pos:column="5">char<pos:position pos:line="5" pos:column="9"/></name> <modifier pos:line="5" pos:column="10">*<pos:position pos:line="5" pos:column="11"/></modifier></type><name pos:line="5" pos:column="11">newarg<pos:position pos:line="5" pos:column="17"/></name> <init pos:line="5" pos:column="18">= <expr><name pos:line="5" pos:column="20">NULL<pos:position pos:line="5" pos:column="24"/></name></expr></init></decl>;<pos:position pos:line="5" pos:column="25"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="6" pos:column="5">int<pos:position pos:line="6" pos:column="8"/></name></type> <name pos:line="6" pos:column="9">pathlen<pos:position pos:line="6" pos:column="16"/></name></decl>;<pos:position pos:line="6" pos:column="17"/></decl_stmt>

    <expr_stmt><expr><name><name pos:line="8" pos:column="5">cmd_data<pos:position pos:line="8" pos:column="13"/></name><operator pos:line="8" pos:column="13">-&gt;<pos:position pos:line="8" pos:column="18"/></operator><name pos:line="8" pos:column="15">fake_output_name<pos:position pos:line="8" pos:column="31"/></name></name> <operator pos:line="8" pos:column="32">=<pos:position pos:line="8" pos:column="33"/></operator> <name pos:line="8" pos:column="34">arg<pos:position pos:line="8" pos:column="37"/></name></expr>;<pos:position pos:line="8" pos:column="38"/></expr_stmt>

    <if pos:line="10" pos:column="5">if <condition pos:line="10" pos:column="8">(<expr><name pos:line="10" pos:column="9">name<pos:position pos:line="10" pos:column="13"/></name></expr>)<pos:position pos:line="10" pos:column="14"/></condition><then pos:line="10" pos:column="14"> <block pos:line="10" pos:column="15">{
        <expr_stmt><expr><name pos:line="11" pos:column="9">name<pos:position pos:line="11" pos:column="13"/></name><operator pos:line="11" pos:column="13">++<pos:position pos:line="11" pos:column="15"/></operator></expr>;<pos:position pos:line="11" pos:column="16"/></expr_stmt>
    }<pos:position pos:line="12" pos:column="6"/></block></then>
    <else pos:line="13" pos:column="5">else <block pos:line="13" pos:column="10">{
        <expr_stmt><expr><name pos:line="14" pos:column="9">name<pos:position pos:line="14" pos:column="13"/></name> <operator pos:line="14" pos:column="14">=<pos:position pos:line="14" pos:column="15"/></operator> <call><name pos:line="14" pos:column="16">strrchr<pos:position pos:line="14" pos:column="23"/></name><argument_list pos:line="14" pos:column="23">(<argument><expr><name pos:line="14" pos:column="24">arg<pos:position pos:line="14" pos:column="27"/></name></expr></argument>, <argument><expr><literal type="char" pos:line="14" pos:column="29">'\\'<pos:position pos:line="14" pos:column="33"/></literal></expr></argument>)<pos:position pos:line="14" pos:column="34"/></argument_list></call></expr>;<pos:position pos:line="14" pos:column="35"/></expr_stmt>

        <if pos:line="16" pos:column="9">if <condition pos:line="16" pos:column="12">(<expr><name pos:line="16" pos:column="13">name<pos:position pos:line="16" pos:column="17"/></name> <operator pos:line="16" pos:column="18">==<pos:position pos:line="16" pos:column="20"/></operator> <name pos:line="16" pos:column="21">NULL<pos:position pos:line="16" pos:column="25"/></name></expr>)<pos:position pos:line="16" pos:column="26"/></condition><then pos:line="16" pos:column="26"> <block pos:line="16" pos:column="27">{
            <expr_stmt><expr><name pos:line="17" pos:column="13">name<pos:position pos:line="17" pos:column="17"/></name> <operator pos:line="17" pos:column="18">=<pos:position pos:line="17" pos:column="19"/></operator> <name pos:line="17" pos:column="20">arg<pos:position pos:line="17" pos:column="23"/></name></expr>;<pos:position pos:line="17" pos:column="24"/></expr_stmt>
        }<pos:position pos:line="18" pos:column="10"/></block></then>
        <else pos:line="19" pos:column="9">else <block pos:line="19" pos:column="14">{
            <expr_stmt><expr><name pos:line="20" pos:column="13">name<pos:position pos:line="20" pos:column="17"/></name><operator pos:line="20" pos:column="17">++<pos:position pos:line="20" pos:column="19"/></operator></expr>;<pos:position pos:line="20" pos:column="20"/></expr_stmt>
        }<pos:position pos:line="21" pos:column="10"/></block></else></if>
    }<pos:position pos:line="22" pos:column="6"/></block></else></if>

<cpp:ifdef pos:line="24" pos:column="1">#<cpp:directive pos:line="24" pos:column="2">ifdef<pos:position pos:line="24" pos:column="7"/></cpp:directive> <name pos:line="24" pos:column="8">EXE_EXT<pos:position pos:line="24" pos:column="15"/></name></cpp:ifdef>
    <if pos:line="25" pos:column="5">if <condition pos:line="25" pos:column="8">(<expr><operator pos:line="25" pos:column="9">!<pos:position pos:line="25" pos:column="10"/></operator><name pos:line="25" pos:column="10">ext<pos:position pos:line="25" pos:column="13"/></name> <operator pos:line="25" pos:column="14">||<pos:position pos:line="25" pos:column="16"/></operator> <call><name pos:line="25" pos:column="17">strcmp<pos:position pos:line="25" pos:column="23"/></name><argument_list pos:line="25" pos:column="23">(<argument><expr><name pos:line="25" pos:column="24">ext<pos:position pos:line="25" pos:column="27"/></name></expr></argument>, <argument><expr><name pos:line="25" pos:column="29">EXE_EXT<pos:position pos:line="25" pos:column="36"/></name></expr></argument>)<pos:position pos:line="25" pos:column="37"/></argument_list></call> <operator pos:line="25" pos:column="38">==<pos:position pos:line="25" pos:column="40"/></operator> <literal type="number" pos:line="25" pos:column="41">0<pos:position pos:line="25" pos:column="42"/></literal></expr>)<pos:position pos:line="25" pos:column="43"/></condition><then pos:line="25" pos:column="43"> <block pos:line="25" pos:column="44">{
<cpp:else pos:line="26" pos:column="1">#<cpp:directive pos:line="26" pos:column="2">else<pos:position pos:line="26" pos:column="6"/></cpp:directive></cpp:else>
    <if pos:line="27" pos:column="5">if <condition pos:line="27" pos:column="8">(<expr><operator pos:line="27" pos:column="9">!<pos:position pos:line="27" pos:column="10"/></operator><name pos:line="27" pos:column="10">ext<pos:position pos:line="27" pos:column="13"/></name></expr>)<pos:position pos:line="27" pos:column="14"/></condition><then pos:line="27" pos:column="14"> <block pos:line="27" pos:column="15">{
<cpp:endif pos:line="28" pos:column="1">#<cpp:directive pos:line="28" pos:column="2">endif<pos:position pos:line="28" pos:column="7"/></cpp:directive></cpp:endif>
        <expr_stmt><expr><name><name pos:line="29" pos:column="9">cmd_data<pos:position pos:line="29" pos:column="17"/></name><operator pos:line="29" pos:column="17">-&gt;<pos:position pos:line="29" pos:column="22"/></operator><name pos:line="29" pos:column="19">basename<pos:position pos:line="29" pos:column="27"/></name></name> <operator pos:line="29" pos:column="28">=<pos:position pos:line="29" pos:column="29"/></operator> <name pos:line="29" pos:column="30">arg<pos:position pos:line="29" pos:column="33"/></name></expr>;<pos:position pos:line="29" pos:column="34"/></expr_stmt>
        <expr_stmt><expr><name><name pos:line="30" pos:column="9">cmd_data<pos:position pos:line="30" pos:column="17"/></name><operator pos:line="30" pos:column="17">-&gt;<pos:position pos:line="30" pos:column="22"/></operator><name pos:line="30" pos:column="19">output<pos:position pos:line="30" pos:column="25"/></name></name> <operator pos:line="30" pos:column="26">=<pos:position pos:line="30" pos:column="27"/></operator> <name pos:line="30" pos:column="28">otProgram<pos:position pos:line="30" pos:column="37"/></name></expr>;<pos:position pos:line="30" pos:column="38"/></expr_stmt>
<cpp:if pos:line="31" pos:column="1">#<cpp:directive pos:line="31" pos:column="2">if<pos:position pos:line="31" pos:column="4"/></cpp:directive> <expr><call><name pos:line="31" pos:column="5">defined<pos:position pos:line="31" pos:column="12"/></name><argument_list pos:line="31" pos:column="12">(<argument><expr><name pos:line="31" pos:column="13">_OSD_POSIX<pos:position pos:line="31" pos:column="23"/></name></expr></argument>)<pos:position pos:line="31" pos:column="24"/></argument_list></call></expr></cpp:if>
        <expr_stmt><expr><name><name pos:line="32" pos:column="9">cmd_data<pos:position pos:line="32" pos:column="17"/></name><operator pos:line="32" pos:column="17">-&gt;<pos:position pos:line="32" pos:column="22"/></operator><name pos:line="32" pos:column="19">options<pos:position pos:line="32" pos:column="26"/></name><operator pos:line="32" pos:column="26">.<pos:position pos:line="32" pos:column="27"/></operator><name pos:line="32" pos:column="27">pic_mode<pos:position pos:line="32" pos:column="35"/></name></name> <operator pos:line="32" pos:column="36">=<pos:position pos:line="32" pos:column="37"/></operator> <name pos:line="32" pos:column="38">pic_AVOID<pos:position pos:line="32" pos:column="47"/></name></expr>;<pos:position pos:line="32" pos:column="48"/></expr_stmt>
<cpp:endif pos:line="33" pos:column="1">#<cpp:directive pos:line="33" pos:column="2">endif<pos:position pos:line="33" pos:column="7"/></cpp:directive></cpp:endif>
        <expr_stmt><expr><name pos:line="34" pos:column="9">newarg<pos:position pos:line="34" pos:column="15"/></name> <operator pos:line="34" pos:column="16">=<pos:position pos:line="34" pos:column="17"/></operator> <operator pos:line="34" pos:column="18">(<pos:position pos:line="34" pos:column="19"/></operator><name pos:line="34" pos:column="19">char<pos:position pos:line="34" pos:column="23"/></name> <operator pos:line="34" pos:column="24">*<pos:position pos:line="34" pos:column="25"/></operator><operator pos:line="34" pos:column="25">)<pos:position pos:line="34" pos:column="26"/></operator><call><name pos:line="34" pos:column="26">malloc<pos:position pos:line="34" pos:column="32"/></name><argument_list pos:line="34" pos:column="32">(<argument><expr><call><name pos:line="34" pos:column="33">strlen<pos:position pos:line="34" pos:column="39"/></name><argument_list pos:line="34" pos:column="39">(<argument><expr><name pos:line="34" pos:column="40">arg<pos:position pos:line="34" pos:column="43"/></name></expr></argument>)<pos:position pos:line="34" pos:column="44"/></argument_list></call> <operator pos:line="34" pos:column="45">+<pos:position pos:line="34" pos:column="46"/></operator> <literal type="number" pos:line="34" pos:column="47">5<pos:position pos:line="34" pos:column="48"/></literal></expr></argument>)<pos:position pos:line="34" pos:column="49"/></argument_list></call></expr>;<pos:position pos:line="34" pos:column="50"/></expr_stmt>
        <expr_stmt><expr><call><name pos:line="35" pos:column="9">strcpy<pos:position pos:line="35" pos:column="15"/></name><argument_list pos:line="35" pos:column="15">(<argument><expr><name pos:line="35" pos:column="16">newarg<pos:position pos:line="35" pos:column="22"/></name></expr></argument>, <argument><expr><name pos:line="35" pos:column="24">arg<pos:position pos:line="35" pos:column="27"/></name></expr></argument>)<pos:position pos:line="35" pos:column="28"/></argument_list></call></expr>;<pos:position pos:line="35" pos:column="29"/></expr_stmt>
<cpp:ifdef pos:line="36" pos:column="1">#<cpp:directive pos:line="36" pos:column="2">ifdef<pos:position pos:line="36" pos:column="7"/></cpp:directive> <name pos:line="36" pos:column="8">EXE_EXT<pos:position pos:line="36" pos:column="15"/></name></cpp:ifdef>
	<if pos:line="37" pos:column="9">if <condition pos:line="37" pos:column="12">(<expr><operator pos:line="37" pos:column="13">!<pos:position pos:line="37" pos:column="14"/></operator><name pos:line="37" pos:column="14">ext<pos:position pos:line="37" pos:column="17"/></name></expr>)<pos:position pos:line="37" pos:column="18"/></condition><then pos:line="37" pos:column="18"> <block pos:line="37" pos:column="19">{
        <expr_stmt><expr><call><name pos:line="38" pos:column="9">strcat<pos:position pos:line="38" pos:column="15"/></name><argument_list pos:line="38" pos:column="15">(<argument><expr><name pos:line="38" pos:column="16">newarg<pos:position pos:line="38" pos:column="22"/></name></expr></argument>, <argument><expr><name pos:line="38" pos:column="24">EXE_EXT<pos:position pos:line="38" pos:column="31"/></name></expr></argument>)<pos:position pos:line="38" pos:column="32"/></argument_list></call></expr>;<pos:position pos:line="38" pos:column="33"/></expr_stmt>
	}<pos:position pos:line="39" pos:column="10"/></block></then></if>
<cpp:endif pos:line="40" pos:column="1">#<cpp:directive pos:line="40" pos:column="2">endif<pos:position pos:line="40" pos:column="7"/></cpp:directive></cpp:endif>
        <expr_stmt><expr><name><name pos:line="41" pos:column="9">cmd_data<pos:position pos:line="41" pos:column="17"/></name><operator pos:line="41" pos:column="17">-&gt;<pos:position pos:line="41" pos:column="22"/></operator><name pos:line="41" pos:column="19">output_name<pos:position pos:line="41" pos:column="30"/></name></name> <operator pos:line="41" pos:column="31">=<pos:position pos:line="41" pos:column="32"/></operator> <name pos:line="41" pos:column="33">newarg<pos:position pos:line="41" pos:column="39"/></name></expr>;<pos:position pos:line="41" pos:column="40"/></expr_stmt>
        <return pos:line="42" pos:column="9">return <expr><literal type="number" pos:line="42" pos:column="16">1<pos:position pos:line="42" pos:column="17"/></literal></expr>;<pos:position pos:line="42" pos:column="18"/></return>
    }<pos:position pos:line="43" pos:column="6"/></block></then></if>

    <expr_stmt><expr><name pos:line="45" pos:column="5">ext<pos:position pos:line="45" pos:column="8"/></name><operator pos:line="45" pos:column="8">++<pos:position pos:line="45" pos:column="10"/></operator></expr>;<pos:position pos:line="45" pos:column="11"/></expr_stmt>
    <expr_stmt><expr><name pos:line="46" pos:column="5">pathlen<pos:position pos:line="46" pos:column="12"/></name> <operator pos:line="46" pos:column="13">=<pos:position pos:line="46" pos:column="14"/></operator> <name pos:line="46" pos:column="15">name<pos:position pos:line="46" pos:column="19"/></name> <operator pos:line="46" pos:column="20">-<pos:position pos:line="46" pos:column="21"/></operator> <name pos:line="46" pos:column="22">arg<pos:position pos:line="46" pos:column="25"/></name></expr>;<pos:position pos:line="46" pos:column="26"/></expr_stmt>

    <if pos:line="48" pos:column="5">if <condition pos:line="48" pos:column="8">(<expr><call><name pos:line="48" pos:column="9">strcmp<pos:position pos:line="48" pos:column="15"/></name><argument_list pos:line="48" pos:column="15">(<argument><expr><name pos:line="48" pos:column="16">ext<pos:position pos:line="48" pos:column="19"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="48" pos:column="21">"la"<pos:position pos:line="48" pos:column="25"/></literal></expr></argument>)<pos:position pos:line="48" pos:column="26"/></argument_list></call> <operator pos:line="48" pos:column="27">==<pos:position pos:line="48" pos:column="29"/></operator> <literal type="number" pos:line="48" pos:column="30">0<pos:position pos:line="48" pos:column="31"/></literal></expr>)<pos:position pos:line="48" pos:column="32"/></condition><then pos:line="48" pos:column="32"> <block pos:line="48" pos:column="33">{
        <expr_stmt><expr><call><name pos:line="49" pos:column="9">assert<pos:position pos:line="49" pos:column="15"/></name><argument_list pos:line="49" pos:column="15">(<argument><expr><name><name pos:line="49" pos:column="16">cmd_data<pos:position pos:line="49" pos:column="24"/></name><operator pos:line="49" pos:column="24">-&gt;<pos:position pos:line="49" pos:column="29"/></operator><name pos:line="49" pos:column="26">mode<pos:position pos:line="49" pos:column="30"/></name></name> <operator pos:line="49" pos:column="31">==<pos:position pos:line="49" pos:column="33"/></operator> <name pos:line="49" pos:column="34">mLink<pos:position pos:line="49" pos:column="39"/></name></expr></argument>)<pos:position pos:line="49" pos:column="40"/></argument_list></call></expr>;<pos:position pos:line="49" pos:column="41"/></expr_stmt>

        <expr_stmt><expr><name><name pos:line="51" pos:column="9">cmd_data<pos:position pos:line="51" pos:column="17"/></name><operator pos:line="51" pos:column="17">-&gt;<pos:position pos:line="51" pos:column="22"/></operator><name pos:line="51" pos:column="19">basename<pos:position pos:line="51" pos:column="27"/></name></name> <operator pos:line="51" pos:column="28">=<pos:position pos:line="51" pos:column="29"/></operator> <name pos:line="51" pos:column="30">arg<pos:position pos:line="51" pos:column="33"/></name></expr>;<pos:position pos:line="51" pos:column="34"/></expr_stmt>
        <expr_stmt><expr><name><name pos:line="52" pos:column="9">cmd_data<pos:position pos:line="52" pos:column="17"/></name><operator pos:line="52" pos:column="17">-&gt;<pos:position pos:line="52" pos:column="22"/></operator><name pos:line="52" pos:column="19">static_name<pos:position pos:line="52" pos:column="30"/></name><operator pos:line="52" pos:column="30">.<pos:position pos:line="52" pos:column="31"/></operator><name pos:line="52" pos:column="31">normal<pos:position pos:line="52" pos:column="37"/></name></name> <operator pos:line="52" pos:column="38">=<pos:position pos:line="52" pos:column="39"/></operator> <call><name pos:line="52" pos:column="40">gen_library_name<pos:position pos:line="52" pos:column="56"/></name><argument_list pos:line="52" pos:column="56">(<argument><expr><name pos:line="52" pos:column="57">arg<pos:position pos:line="52" pos:column="60"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="52" pos:column="62">0<pos:position pos:line="52" pos:column="63"/></literal></expr></argument>)<pos:position pos:line="52" pos:column="64"/></argument_list></call></expr>;<pos:position pos:line="52" pos:column="65"/></expr_stmt>
        <expr_stmt><expr><name><name pos:line="53" pos:column="9">cmd_data<pos:position pos:line="53" pos:column="17"/></name><operator pos:line="53" pos:column="17">-&gt;<pos:position pos:line="53" pos:column="22"/></operator><name pos:line="53" pos:column="19">shared_name<pos:position pos:line="53" pos:column="30"/></name><operator pos:line="53" pos:column="30">.<pos:position pos:line="53" pos:column="31"/></operator><name pos:line="53" pos:column="31">normal<pos:position pos:line="53" pos:column="37"/></name></name> <operator pos:line="53" pos:column="38">=<pos:position pos:line="53" pos:column="39"/></operator> <call><name pos:line="53" pos:column="40">gen_library_name<pos:position pos:line="53" pos:column="56"/></name><argument_list pos:line="53" pos:column="56">(<argument><expr><name pos:line="53" pos:column="57">arg<pos:position pos:line="53" pos:column="60"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="53" pos:column="62">1<pos:position pos:line="53" pos:column="63"/></literal></expr></argument>)<pos:position pos:line="53" pos:column="64"/></argument_list></call></expr>;<pos:position pos:line="53" pos:column="65"/></expr_stmt>
        <expr_stmt><expr><name><name pos:line="54" pos:column="9">cmd_data<pos:position pos:line="54" pos:column="17"/></name><operator pos:line="54" pos:column="17">-&gt;<pos:position pos:line="54" pos:column="22"/></operator><name pos:line="54" pos:column="19">module_name<pos:position pos:line="54" pos:column="30"/></name><operator pos:line="54" pos:column="30">.<pos:position pos:line="54" pos:column="31"/></operator><name pos:line="54" pos:column="31">normal<pos:position pos:line="54" pos:column="37"/></name></name> <operator pos:line="54" pos:column="38">=<pos:position pos:line="54" pos:column="39"/></operator> <call><name pos:line="54" pos:column="40">gen_library_name<pos:position pos:line="54" pos:column="56"/></name><argument_list pos:line="54" pos:column="56">(<argument><expr><name pos:line="54" pos:column="57">arg<pos:position pos:line="54" pos:column="60"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="54" pos:column="62">2<pos:position pos:line="54" pos:column="63"/></literal></expr></argument>)<pos:position pos:line="54" pos:column="64"/></argument_list></call></expr>;<pos:position pos:line="54" pos:column="65"/></expr_stmt>
        <expr_stmt><expr><name><name pos:line="55" pos:column="9">cmd_data<pos:position pos:line="55" pos:column="17"/></name><operator pos:line="55" pos:column="17">-&gt;<pos:position pos:line="55" pos:column="22"/></operator><name pos:line="55" pos:column="19">static_name<pos:position pos:line="55" pos:column="30"/></name><operator pos:line="55" pos:column="30">.<pos:position pos:line="55" pos:column="31"/></operator><name pos:line="55" pos:column="31">install<pos:position pos:line="55" pos:column="38"/></name></name> <operator pos:line="55" pos:column="39">=<pos:position pos:line="55" pos:column="40"/></operator> <call><name pos:line="55" pos:column="41">gen_install_name<pos:position pos:line="55" pos:column="57"/></name><argument_list pos:line="55" pos:column="57">(<argument><expr><name pos:line="55" pos:column="58">arg<pos:position pos:line="55" pos:column="61"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="55" pos:column="63">0<pos:position pos:line="55" pos:column="64"/></literal></expr></argument>)<pos:position pos:line="55" pos:column="65"/></argument_list></call></expr>;<pos:position pos:line="55" pos:column="66"/></expr_stmt>
        <expr_stmt><expr><name><name pos:line="56" pos:column="9">cmd_data<pos:position pos:line="56" pos:column="17"/></name><operator pos:line="56" pos:column="17">-&gt;<pos:position pos:line="56" pos:column="22"/></operator><name pos:line="56" pos:column="19">shared_name<pos:position pos:line="56" pos:column="30"/></name><operator pos:line="56" pos:column="30">.<pos:position pos:line="56" pos:column="31"/></operator><name pos:line="56" pos:column="31">install<pos:position pos:line="56" pos:column="38"/></name></name> <operator pos:line="56" pos:column="39">=<pos:position pos:line="56" pos:column="40"/></operator> <call><name pos:line="56" pos:column="41">gen_install_name<pos:position pos:line="56" pos:column="57"/></name><argument_list pos:line="56" pos:column="57">(<argument><expr><name pos:line="56" pos:column="58">arg<pos:position pos:line="56" pos:column="61"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="56" pos:column="63">1<pos:position pos:line="56" pos:column="64"/></literal></expr></argument>)<pos:position pos:line="56" pos:column="65"/></argument_list></call></expr>;<pos:position pos:line="56" pos:column="66"/></expr_stmt>
        <expr_stmt><expr><name><name pos:line="57" pos:column="9">cmd_data<pos:position pos:line="57" pos:column="17"/></name><operator pos:line="57" pos:column="17">-&gt;<pos:position pos:line="57" pos:column="22"/></operator><name pos:line="57" pos:column="19">module_name<pos:position pos:line="57" pos:column="30"/></name><operator pos:line="57" pos:column="30">.<pos:position pos:line="57" pos:column="31"/></operator><name pos:line="57" pos:column="31">install<pos:position pos:line="57" pos:column="38"/></name></name> <operator pos:line="57" pos:column="39">=<pos:position pos:line="57" pos:column="40"/></operator> <call><name pos:line="57" pos:column="41">gen_install_name<pos:position pos:line="57" pos:column="57"/></name><argument_list pos:line="57" pos:column="57">(<argument><expr><name pos:line="57" pos:column="58">arg<pos:position pos:line="57" pos:column="61"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="57" pos:column="63">2<pos:position pos:line="57" pos:column="64"/></literal></expr></argument>)<pos:position pos:line="57" pos:column="65"/></argument_list></call></expr>;<pos:position pos:line="57" pos:column="66"/></expr_stmt>

<cpp:ifdef pos:line="59" pos:column="1">#<cpp:directive pos:line="59" pos:column="2">ifdef<pos:position pos:line="59" pos:column="7"/></cpp:directive> <name pos:line="59" pos:column="8">TRUNCATE_DLL_NAME<pos:position pos:line="59" pos:column="25"/></name></cpp:ifdef>
        <if pos:line="60" pos:column="9">if <condition pos:line="60" pos:column="12">(<expr><name pos:line="60" pos:column="13">shared<pos:position pos:line="60" pos:column="19"/></name></expr>)<pos:position pos:line="60" pos:column="20"/></condition><then pos:line="60" pos:column="20"> <block pos:line="60" pos:column="21">{
          <expr_stmt><expr><name pos:line="61" pos:column="11">arg<pos:position pos:line="61" pos:column="14"/></name> <operator pos:line="61" pos:column="15">=<pos:position pos:line="61" pos:column="16"/></operator> <call><name pos:line="61" pos:column="17">truncate_dll_name<pos:position pos:line="61" pos:column="34"/></name><argument_list pos:line="61" pos:column="34">(<argument><expr><name pos:line="61" pos:column="35">arg<pos:position pos:line="61" pos:column="38"/></name></expr></argument>)<pos:position pos:line="61" pos:column="39"/></argument_list></call></expr>;<pos:position pos:line="61" pos:column="40"/></expr_stmt>
        }<pos:position pos:line="62" pos:column="10"/></block></then></if>
<cpp:endif pos:line="63" pos:column="1">#<cpp:directive pos:line="63" pos:column="2">endif<pos:position pos:line="63" pos:column="7"/></cpp:directive></cpp:endif>

        <expr_stmt><expr><name><name pos:line="65" pos:column="9">cmd_data<pos:position pos:line="65" pos:column="17"/></name><operator pos:line="65" pos:column="17">-&gt;<pos:position pos:line="65" pos:column="22"/></operator><name pos:line="65" pos:column="19">output_name<pos:position pos:line="65" pos:column="30"/></name></name> <operator pos:line="65" pos:column="31">=<pos:position pos:line="65" pos:column="32"/></operator> <name pos:line="65" pos:column="33">arg<pos:position pos:line="65" pos:column="36"/></name></expr>;<pos:position pos:line="65" pos:column="37"/></expr_stmt>
        <return pos:line="66" pos:column="9">return <expr><literal type="number" pos:line="66" pos:column="16">1<pos:position pos:line="66" pos:column="17"/></literal></expr>;<pos:position pos:line="66" pos:column="18"/></return>
    }<pos:position pos:line="67" pos:column="6"/></block></then></if>

    <if pos:line="69" pos:column="5">if <condition pos:line="69" pos:column="8">(<expr><call><name pos:line="69" pos:column="9">strcmp<pos:position pos:line="69" pos:column="15"/></name><argument_list pos:line="69" pos:column="15">(<argument><expr><name pos:line="69" pos:column="16">ext<pos:position pos:line="69" pos:column="19"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="69" pos:column="21">"lo"<pos:position pos:line="69" pos:column="25"/></literal></expr></argument>)<pos:position pos:line="69" pos:column="26"/></argument_list></call> <operator pos:line="69" pos:column="27">==<pos:position pos:line="69" pos:column="29"/></operator> <literal type="number" pos:line="69" pos:column="30">0<pos:position pos:line="69" pos:column="31"/></literal></expr>)<pos:position pos:line="69" pos:column="32"/></condition><then pos:line="69" pos:column="32"> <block pos:line="69" pos:column="33">{
        <expr_stmt><expr><name><name pos:line="70" pos:column="9">cmd_data<pos:position pos:line="70" pos:column="17"/></name><operator pos:line="70" pos:column="17">-&gt;<pos:position pos:line="70" pos:column="22"/></operator><name pos:line="70" pos:column="19">basename<pos:position pos:line="70" pos:column="27"/></name></name> <operator pos:line="70" pos:column="28">=<pos:position pos:line="70" pos:column="29"/></operator> <name pos:line="70" pos:column="30">arg<pos:position pos:line="70" pos:column="33"/></name></expr>;<pos:position pos:line="70" pos:column="34"/></expr_stmt>
        <expr_stmt><expr><name><name pos:line="71" pos:column="9">cmd_data<pos:position pos:line="71" pos:column="17"/></name><operator pos:line="71" pos:column="17">-&gt;<pos:position pos:line="71" pos:column="22"/></operator><name pos:line="71" pos:column="19">output<pos:position pos:line="71" pos:column="25"/></name></name> <operator pos:line="71" pos:column="26">=<pos:position pos:line="71" pos:column="27"/></operator> <name pos:line="71" pos:column="28">otObject<pos:position pos:line="71" pos:column="36"/></name></expr>;<pos:position pos:line="71" pos:column="37"/></expr_stmt>
        <expr_stmt><expr><name pos:line="72" pos:column="9">newarg<pos:position pos:line="72" pos:column="15"/></name> <operator pos:line="72" pos:column="16">=<pos:position pos:line="72" pos:column="17"/></operator> <operator pos:line="72" pos:column="18">(<pos:position pos:line="72" pos:column="19"/></operator><name pos:line="72" pos:column="19">char<pos:position pos:line="72" pos:column="23"/></name> <operator pos:line="72" pos:column="24">*<pos:position pos:line="72" pos:column="25"/></operator><operator pos:line="72" pos:column="25">)<pos:position pos:line="72" pos:column="26"/></operator><call><name pos:line="72" pos:column="26">malloc<pos:position pos:line="72" pos:column="32"/></name><argument_list pos:line="72" pos:column="32">(<argument><expr><call><name pos:line="72" pos:column="33">strlen<pos:position pos:line="72" pos:column="39"/></name><argument_list pos:line="72" pos:column="39">(<argument><expr><name pos:line="72" pos:column="40">arg<pos:position pos:line="72" pos:column="43"/></name></expr></argument>)<pos:position pos:line="72" pos:column="44"/></argument_list></call> <operator pos:line="72" pos:column="45">+<pos:position pos:line="72" pos:column="46"/></operator> <literal type="number" pos:line="72" pos:column="47">2<pos:position pos:line="72" pos:column="48"/></literal></expr></argument>)<pos:position pos:line="72" pos:column="49"/></argument_list></call></expr>;<pos:position pos:line="72" pos:column="50"/></expr_stmt>
        <expr_stmt><expr><call><name pos:line="73" pos:column="9">strcpy<pos:position pos:line="73" pos:column="15"/></name><argument_list pos:line="73" pos:column="15">(<argument><expr><name pos:line="73" pos:column="16">newarg<pos:position pos:line="73" pos:column="22"/></name></expr></argument>, <argument><expr><name pos:line="73" pos:column="24">arg<pos:position pos:line="73" pos:column="27"/></name></expr></argument>)<pos:position pos:line="73" pos:column="28"/></argument_list></call></expr>;<pos:position pos:line="73" pos:column="29"/></expr_stmt>
        <expr_stmt><expr><name pos:line="74" pos:column="9">ext<pos:position pos:line="74" pos:column="12"/></name> <operator pos:line="74" pos:column="13">=<pos:position pos:line="74" pos:column="14"/></operator> <call><name pos:line="74" pos:column="15">strrchr<pos:position pos:line="74" pos:column="22"/></name><argument_list pos:line="74" pos:column="22">(<argument><expr><name pos:line="74" pos:column="23">newarg<pos:position pos:line="74" pos:column="29"/></name></expr></argument>, <argument><expr><literal type="char" pos:line="74" pos:column="31">'.'<pos:position pos:line="74" pos:column="34"/></literal></expr></argument>)<pos:position pos:line="74" pos:column="35"/></argument_list></call> <operator pos:line="74" pos:column="36">+<pos:position pos:line="74" pos:column="37"/></operator> <literal type="number" pos:line="74" pos:column="38">1<pos:position pos:line="74" pos:column="39"/></literal></expr>;<pos:position pos:line="74" pos:column="40"/></expr_stmt>
        <expr_stmt><expr><call><name pos:line="75" pos:column="9">strcpy<pos:position pos:line="75" pos:column="15"/></name><argument_list pos:line="75" pos:column="15">(<argument><expr><name pos:line="75" pos:column="16">ext<pos:position pos:line="75" pos:column="19"/></name></expr></argument>, <argument><expr><name pos:line="75" pos:column="21">OBJECT_EXT<pos:position pos:line="75" pos:column="31"/></name></expr></argument>)<pos:position pos:line="75" pos:column="32"/></argument_list></call></expr>;<pos:position pos:line="75" pos:column="33"/></expr_stmt>
        <expr_stmt><expr><name><name pos:line="76" pos:column="9">cmd_data<pos:position pos:line="76" pos:column="17"/></name><operator pos:line="76" pos:column="17">-&gt;<pos:position pos:line="76" pos:column="22"/></operator><name pos:line="76" pos:column="19">output_name<pos:position pos:line="76" pos:column="30"/></name></name> <operator pos:line="76" pos:column="31">=<pos:position pos:line="76" pos:column="32"/></operator> <name pos:line="76" pos:column="33">newarg<pos:position pos:line="76" pos:column="39"/></name></expr>;<pos:position pos:line="76" pos:column="40"/></expr_stmt>
        <return pos:line="77" pos:column="9">return <expr><literal type="number" pos:line="77" pos:column="16">1<pos:position pos:line="77" pos:column="17"/></literal></expr>;<pos:position pos:line="77" pos:column="18"/></return>
    }<pos:position pos:line="78" pos:column="6"/></block></then></if>

    <return pos:line="80" pos:column="5">return <expr><literal type="number" pos:line="80" pos:column="12">0<pos:position pos:line="80" pos:column="13"/></literal></expr>;<pos:position pos:line="80" pos:column="14"/></return>
}<pos:position pos:line="81" pos:column="2"/></block></then></if>

<function><type><name pos:line="83" pos:column="1">void<pos:position pos:line="83" pos:column="5"/></name></type> <name pos:line="83" pos:column="6">parse_args<pos:position pos:line="83" pos:column="16"/></name><parameter_list pos:line="83" pos:column="16">(<parameter><decl><type><name pos:line="83" pos:column="17">int<pos:position pos:line="83" pos:column="20"/></name></type> <name pos:line="83" pos:column="21">argc<pos:position pos:line="83" pos:column="25"/></name></decl></parameter>, <parameter><decl><type><name pos:line="83" pos:column="27">char<pos:position pos:line="83" pos:column="31"/></name> <modifier pos:line="83" pos:column="32">*<pos:position pos:line="83" pos:column="33"/></modifier></type><name><name pos:line="83" pos:column="33">argv<pos:position pos:line="83" pos:column="37"/></name><index pos:line="83" pos:column="37">[]<pos:position pos:line="83" pos:column="39"/></index></name></decl></parameter>, <parameter><decl><type><name pos:line="83" pos:column="41">command_t<pos:position pos:line="83" pos:column="50"/></name> <modifier pos:line="83" pos:column="51">*<pos:position pos:line="83" pos:column="52"/></modifier></type><name pos:line="83" pos:column="52">cmd_data<pos:position pos:line="83" pos:column="60"/></name></decl></parameter>)<pos:position pos:line="83" pos:column="61"/></parameter_list>
<block pos:line="84" pos:column="1">{
    <decl_stmt><decl><type><name pos:line="85" pos:column="5">int<pos:position pos:line="85" pos:column="8"/></name></type> <name pos:line="85" pos:column="9">a<pos:position pos:line="85" pos:column="10"/></name></decl>;<pos:position pos:line="85" pos:column="11"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="86" pos:column="5">char<pos:position pos:line="86" pos:column="9"/></name> <modifier pos:line="86" pos:column="10">*<pos:position pos:line="86" pos:column="11"/></modifier></type><name pos:line="86" pos:column="11">arg<pos:position pos:line="86" pos:column="14"/></name></decl>;<pos:position pos:line="86" pos:column="15"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="87" pos:column="5">int<pos:position pos:line="87" pos:column="8"/></name></type> <name pos:line="87" pos:column="9">argused<pos:position pos:line="87" pos:column="16"/></name></decl>;<pos:position pos:line="87" pos:column="17"/></decl_stmt>

    <for pos:line="89" pos:column="5">for <control pos:line="89" pos:column="9">(<init><expr><name pos:line="89" pos:column="10">a<pos:position pos:line="89" pos:column="11"/></name> <operator pos:line="89" pos:column="12">=<pos:position pos:line="89" pos:column="13"/></operator> <literal type="number" pos:line="89" pos:column="14">1<pos:position pos:line="89" pos:column="15"/></literal></expr>;<pos:position pos:line="89" pos:column="16"/></init> <condition><expr><name pos:line="89" pos:column="17">a<pos:position pos:line="89" pos:column="18"/></name> <operator pos:line="89" pos:column="19">&lt;<pos:position pos:line="89" pos:column="23"/></operator> <name pos:line="89" pos:column="21">argc<pos:position pos:line="89" pos:column="25"/></name></expr>;<pos:position pos:line="89" pos:column="26"/></condition> <incr><expr><name pos:line="89" pos:column="27">a<pos:position pos:line="89" pos:column="28"/></name><operator pos:line="89" pos:column="28">++<pos:position pos:line="89" pos:column="30"/></operator></expr></incr>)<pos:position pos:line="89" pos:column="31"/></control> <block pos:line="89" pos:column="32">{
        <expr_stmt><expr><name pos:line="90" pos:column="9">arg<pos:position pos:line="90" pos:column="12"/></name> <operator pos:line="90" pos:column="13">=<pos:position pos:line="90" pos:column="14"/></operator> <name><name pos:line="90" pos:column="15">argv<pos:position pos:line="90" pos:column="19"/></name><index pos:line="90" pos:column="19">[<expr><name pos:line="90" pos:column="20">a<pos:position pos:line="90" pos:column="21"/></name></expr>]<pos:position pos:line="90" pos:column="22"/></index></name></expr>;<pos:position pos:line="90" pos:column="23"/></expr_stmt>
        <expr_stmt><expr><name pos:line="91" pos:column="9">argused<pos:position pos:line="91" pos:column="16"/></name> <operator pos:line="91" pos:column="17">=<pos:position pos:line="91" pos:column="18"/></operator> <literal type="number" pos:line="91" pos:column="19">1<pos:position pos:line="91" pos:column="20"/></literal></expr>;<pos:position pos:line="91" pos:column="21"/></expr_stmt>

        <if pos:line="93" pos:column="9">if <condition pos:line="93" pos:column="12">(<expr><name><name pos:line="93" pos:column="13">arg<pos:position pos:line="93" pos:column="16"/></name><index pos:line="93" pos:column="16">[<expr><literal type="number" pos:line="93" pos:column="17">0<pos:position pos:line="93" pos:column="18"/></literal></expr>]<pos:position pos:line="93" pos:column="19"/></index></name> <operator pos:line="93" pos:column="20">==<pos:position pos:line="93" pos:column="22"/></operator> <literal type="char" pos:line="93" pos:column="23">'-'<pos:position pos:line="93" pos:column="26"/></literal></expr>)<pos:position pos:line="93" pos:column="27"/></condition><then pos:line="93" pos:column="27"> <block pos:line="93" pos:column="28">{
            <if pos:line="94" pos:column="13">if <condition pos:line="94" pos:column="16">(<expr><name><name pos:line="94" pos:column="17">arg<pos:position pos:line="94" pos:column="20"/></name><index pos:line="94" pos:column="20">[<expr><literal type="number" pos:line="94" pos:column="21">1<pos:position pos:line="94" pos:column="22"/></literal></expr>]<pos:position pos:line="94" pos:column="23"/></index></name> <operator pos:line="94" pos:column="24">==<pos:position pos:line="94" pos:column="26"/></operator> <literal type="char" pos:line="94" pos:column="27">'-'<pos:position pos:line="94" pos:column="30"/></literal></expr>)<pos:position pos:line="94" pos:column="31"/></condition><then pos:line="94" pos:column="31"> <block pos:line="94" pos:column="32">{
                <expr_stmt><expr><name pos:line="95" pos:column="17">argused<pos:position pos:line="95" pos:column="24"/></name> <operator pos:line="95" pos:column="25">=<pos:position pos:line="95" pos:column="26"/></operator> <call><name pos:line="95" pos:column="27">parse_long_opt<pos:position pos:line="95" pos:column="41"/></name><argument_list pos:line="95" pos:column="41">(<argument><expr><name pos:line="95" pos:column="42">arg<pos:position pos:line="95" pos:column="45"/></name> <operator pos:line="95" pos:column="46">+<pos:position pos:line="95" pos:column="47"/></operator> <literal type="number" pos:line="95" pos:column="48">2<pos:position pos:line="95" pos:column="49"/></literal></expr></argument>, <argument><expr><name pos:line="95" pos:column="51">cmd_data<pos:position pos:line="95" pos:column="59"/></name></expr></argument>)<pos:position pos:line="95" pos:column="60"/></argument_list></call></expr>;<pos:position pos:line="95" pos:column="61"/></expr_stmt>
            }<pos:position pos:line="96" pos:column="14"/></block></then>
            <else pos:line="97" pos:column="13">else <block pos:line="97" pos:column="18">{
                <expr_stmt><expr><name pos:line="98" pos:column="17">argused<pos:position pos:line="98" pos:column="24"/></name> <operator pos:line="98" pos:column="25">=<pos:position pos:line="98" pos:column="26"/></operator> <call><name pos:line="98" pos:column="27">parse_short_opt<pos:position pos:line="98" pos:column="42"/></name><argument_list pos:line="98" pos:column="42">(<argument><expr><name pos:line="98" pos:column="43">arg<pos:position pos:line="98" pos:column="46"/></name> <operator pos:line="98" pos:column="47">+<pos:position pos:line="98" pos:column="48"/></operator> <literal type="number" pos:line="98" pos:column="49">1<pos:position pos:line="98" pos:column="50"/></literal></expr></argument>, <argument><expr><name pos:line="98" pos:column="52">cmd_data<pos:position pos:line="98" pos:column="60"/></name></expr></argument>)<pos:position pos:line="98" pos:column="61"/></argument_list></call></expr>;<pos:position pos:line="98" pos:column="62"/></expr_stmt>
            }<pos:position pos:line="99" pos:column="14"/></block></else></if>

            <comment type="block" pos:line="101" pos:column="13">/* We haven't done anything with it yet, try some of the
             * more complicated short opts... */</comment>
            <if pos:line="103" pos:column="13">if <condition pos:line="103" pos:column="16">(<expr><name pos:line="103" pos:column="17">argused<pos:position pos:line="103" pos:column="24"/></name> <operator pos:line="103" pos:column="25">==<pos:position pos:line="103" pos:column="27"/></operator> <literal type="number" pos:line="103" pos:column="28">0<pos:position pos:line="103" pos:column="29"/></literal> <operator pos:line="103" pos:column="30">&amp;&amp;<pos:position pos:line="103" pos:column="40"/></operator> <name pos:line="103" pos:column="33">a<pos:position pos:line="103" pos:column="34"/></name> <operator pos:line="103" pos:column="35">+<pos:position pos:line="103" pos:column="36"/></operator> <literal type="number" pos:line="103" pos:column="37">1<pos:position pos:line="103" pos:column="38"/></literal> <operator pos:line="103" pos:column="39">&lt;<pos:position pos:line="103" pos:column="43"/></operator> <name pos:line="103" pos:column="41">argc<pos:position pos:line="103" pos:column="45"/></name></expr>)<pos:position pos:line="103" pos:column="46"/></condition><then pos:line="103" pos:column="46"> <block pos:line="103" pos:column="47">{
                <if pos:line="104" pos:column="17">if <condition pos:line="104" pos:column="20">(<expr><name><name pos:line="104" pos:column="21">arg<pos:position pos:line="104" pos:column="24"/></name><index pos:line="104" pos:column="24">[<expr><literal type="number" pos:line="104" pos:column="25">1<pos:position pos:line="104" pos:column="26"/></literal></expr>]<pos:position pos:line="104" pos:column="27"/></index></name> <operator pos:line="104" pos:column="28">==<pos:position pos:line="104" pos:column="30"/></operator> <literal type="char" pos:line="104" pos:column="31">'o'<pos:position pos:line="104" pos:column="34"/></literal> <operator pos:line="104" pos:column="35">&amp;&amp;<pos:position pos:line="104" pos:column="45"/></operator> <operator pos:line="104" pos:column="38">!<pos:position pos:line="104" pos:column="39"/></operator><name><name pos:line="104" pos:column="39">arg<pos:position pos:line="104" pos:column="42"/></name><index pos:line="104" pos:column="42">[<expr><literal type="number" pos:line="104" pos:column="43">2<pos:position pos:line="104" pos:column="44"/></literal></expr>]<pos:position pos:line="104" pos:column="45"/></index></name></expr>)<pos:position pos:line="104" pos:column="46"/></condition><then pos:line="104" pos:column="46"> <block pos:line="104" pos:column="47">{
                    <expr_stmt><expr><name pos:line="105" pos:column="21">arg<pos:position pos:line="105" pos:column="24"/></name> <operator pos:line="105" pos:column="25">=<pos:position pos:line="105" pos:column="26"/></operator> <name><name pos:line="105" pos:column="27">argv<pos:position pos:line="105" pos:column="31"/></name><index pos:line="105" pos:column="31">[<expr><operator pos:line="105" pos:column="32">++<pos:position pos:line="105" pos:column="34"/></operator><name pos:line="105" pos:column="34">a<pos:position pos:line="105" pos:column="35"/></name></expr>]<pos:position pos:line="105" pos:column="36"/></index></name></expr>;<pos:position pos:line="105" pos:column="37"/></expr_stmt>
                    <expr_stmt><expr><name pos:line="106" pos:column="21">argused<pos:position pos:line="106" pos:column="28"/></name> <operator pos:line="106" pos:column="29">=<pos:position pos:line="106" pos:column="30"/></operator> <call><name pos:line="106" pos:column="31">parse_output_file_name<pos:position pos:line="106" pos:column="53"/></name><argument_list pos:line="106" pos:column="53">(<argument><expr><name pos:line="106" pos:column="54">arg<pos:position pos:line="106" pos:column="57"/></name></expr></argument>, <argument><expr><name pos:line="106" pos:column="59">cmd_data<pos:position pos:line="106" pos:column="67"/></name></expr></argument>)<pos:position pos:line="106" pos:column="68"/></argument_list></call></expr>;<pos:position pos:line="106" pos:column="69"/></expr_stmt>
                }<pos:position pos:line="107" pos:column="18"/></block></then> <elseif pos:line="107" pos:column="19">else <if pos:line="107" pos:column="24">if <condition pos:line="107" pos:column="27">(<expr><call><name pos:line="107" pos:column="28">strcmp<pos:position pos:line="107" pos:column="34"/></name><argument_list pos:line="107" pos:column="34">(<argument><expr><name pos:line="107" pos:column="35">arg<pos:position pos:line="107" pos:column="38"/></name><operator pos:line="107" pos:column="38">+<pos:position pos:line="107" pos:column="39"/></operator><literal type="number" pos:line="107" pos:column="39">1<pos:position pos:line="107" pos:column="40"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="107" pos:column="42">"MT"<pos:position pos:line="107" pos:column="46"/></literal></expr></argument>)<pos:position pos:line="107" pos:column="47"/></argument_list></call> <operator pos:line="107" pos:column="48">==<pos:position pos:line="107" pos:column="50"/></operator> <literal type="number" pos:line="107" pos:column="51">0<pos:position pos:line="107" pos:column="52"/></literal></expr>)<pos:position pos:line="107" pos:column="53"/></condition><then pos:line="107" pos:column="53"> <block pos:line="107" pos:column="54">{
                    <if pos:line="108" pos:column="21">if <condition pos:line="108" pos:column="24">(<expr><operator pos:line="108" pos:column="25">!<pos:position pos:line="108" pos:column="26"/></operator><name><name pos:line="108" pos:column="26">cmd_data<pos:position pos:line="108" pos:column="34"/></name><operator pos:line="108" pos:column="34">-&gt;<pos:position pos:line="108" pos:column="39"/></operator><name pos:line="108" pos:column="36">options<pos:position pos:line="108" pos:column="43"/></name><operator pos:line="108" pos:column="43">.<pos:position pos:line="108" pos:column="44"/></operator><name pos:line="108" pos:column="44">silent<pos:position pos:line="108" pos:column="50"/></name></name></expr>)<pos:position pos:line="108" pos:column="51"/></condition><then pos:line="108" pos:column="51"> <block pos:line="108" pos:column="52">{
                        <expr_stmt><expr><call><name pos:line="109" pos:column="25">printf<pos:position pos:line="109" pos:column="31"/></name><argument_list pos:line="109" pos:column="31">(<argument><expr><literal type="string" pos:line="109" pos:column="32">"Adding: %s\n"<pos:position pos:line="109" pos:column="46"/></literal></expr></argument>, <argument><expr><name pos:line="109" pos:column="48">arg<pos:position pos:line="109" pos:column="51"/></name></expr></argument>)<pos:position pos:line="109" pos:column="52"/></argument_list></call></expr>;<pos:position pos:line="109" pos:column="53"/></expr_stmt>
                    }<pos:position pos:line="110" pos:column="22"/></block></then></if>
                    <expr_stmt><expr><call><name pos:line="111" pos:column="21">push_count_chars<pos:position pos:line="111" pos:column="37"/></name><argument_list pos:line="111" pos:column="37">(<argument><expr><name><name pos:line="111" pos:column="38">cmd_data<pos:position pos:line="111" pos:column="46"/></name><operator pos:line="111" pos:column="46">-&gt;<pos:position pos:line="111" pos:column="51"/></operator><name pos:line="111" pos:column="48">arglist<pos:position pos:line="111" pos:column="55"/></name></name></expr></argument>, <argument><expr><name pos:line="111" pos:column="57">arg<pos:position pos:line="111" pos:column="60"/></name></expr></argument>)<pos:position pos:line="111" pos:column="61"/></argument_list></call></expr>;<pos:position pos:line="111" pos:column="62"/></expr_stmt>
                    <expr_stmt><expr><name pos:line="112" pos:column="21">arg<pos:position pos:line="112" pos:column="24"/></name> <operator pos:line="112" pos:column="25">=<pos:position pos:line="112" pos:column="26"/></operator> <name><name pos:line="112" pos:column="27">argv<pos:position pos:line="112" pos:column="31"/></name><index pos:line="112" pos:column="31">[<expr><operator pos:line="112" pos:column="32">++<pos:position pos:line="112" pos:column="34"/></operator><name pos:line="112" pos:column="34">a<pos:position pos:line="112" pos:column="35"/></name></expr>]<pos:position pos:line="112" pos:column="36"/></index></name></expr>;<pos:position pos:line="112" pos:column="37"/></expr_stmt>
                    <if pos:line="113" pos:column="21">if <condition pos:line="113" pos:column="24">(<expr><operator pos:line="113" pos:column="25">!<pos:position pos:line="113" pos:column="26"/></operator><name><name pos:line="113" pos:column="26">cmd_data<pos:position pos:line="113" pos:column="34"/></name><operator pos:line="113" pos:column="34">-&gt;<pos:position pos:line="113" pos:column="39"/></operator><name pos:line="113" pos:column="36">options<pos:position pos:line="113" pos:column="43"/></name><operator pos:line="113" pos:column="43">.<pos:position pos:line="113" pos:column="44"/></operator><name pos:line="113" pos:column="44">silent<pos:position pos:line="113" pos:column="50"/></name></name></expr>)<pos:position pos:line="113" pos:column="51"/></condition><then pos:line="113" pos:column="51"> <block pos:line="113" pos:column="52">{
                        <expr_stmt><expr><call><name pos:line="114" pos:column="25">printf<pos:position pos:line="114" pos:column="31"/></name><argument_list pos:line="114" pos:column="31">(<argument><expr><literal type="string" pos:line="114" pos:column="32">" %s\n"<pos:position pos:line="114" pos:column="39"/></literal></expr></argument>, <argument><expr><name pos:line="114" pos:column="41">arg<pos:position pos:line="114" pos:column="44"/></name></expr></argument>)<pos:position pos:line="114" pos:column="45"/></argument_list></call></expr>;<pos:position pos:line="114" pos:column="46"/></expr_stmt>
                    }<pos:position pos:line="115" pos:column="22"/></block></then></if>
                    <expr_stmt><expr><call><name pos:line="116" pos:column="21">push_count_chars<pos:position pos:line="116" pos:column="37"/></name><argument_list pos:line="116" pos:column="37">(<argument><expr><name><name pos:line="116" pos:column="38">cmd_data<pos:position pos:line="116" pos:column="46"/></name><operator pos:line="116" pos:column="46">-&gt;<pos:position pos:line="116" pos:column="51"/></operator><name pos:line="116" pos:column="48">arglist<pos:position pos:line="116" pos:column="55"/></name></name></expr></argument>, <argument><expr><name pos:line="116" pos:column="57">arg<pos:position pos:line="116" pos:column="60"/></name></expr></argument>)<pos:position pos:line="116" pos:column="61"/></argument_list></call></expr>;<pos:position pos:line="116" pos:column="62"/></expr_stmt>
                    <expr_stmt><expr><name pos:line="117" pos:column="21">argused<pos:position pos:line="117" pos:column="28"/></name> <operator pos:line="117" pos:column="29">=<pos:position pos:line="117" pos:column="30"/></operator> <literal type="number" pos:line="117" pos:column="31">1<pos:position pos:line="117" pos:column="32"/></literal></expr>;<pos:position pos:line="117" pos:column="33"/></expr_stmt>
                }<pos:position pos:line="118" pos:column="18"/></block></then></if></elseif> <elseif pos:line="118" pos:column="19">else <if pos:line="118" pos:column="24">if <condition pos:line="118" pos:column="27">(<expr><call><name pos:line="118" pos:column="28">strcmp<pos:position pos:line="118" pos:column="34"/></name><argument_list pos:line="118" pos:column="34">(<argument><expr><name pos:line="118" pos:column="35">arg<pos:position pos:line="118" pos:column="38"/></name><operator pos:line="118" pos:column="38">+<pos:position pos:line="118" pos:column="39"/></operator><literal type="number" pos:line="118" pos:column="39">1<pos:position pos:line="118" pos:column="40"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="118" pos:column="42">"rpath"<pos:position pos:line="118" pos:column="49"/></literal></expr></argument>)<pos:position pos:line="118" pos:column="50"/></argument_list></call> <operator pos:line="118" pos:column="51">==<pos:position pos:line="118" pos:column="53"/></operator> <literal type="number" pos:line="118" pos:column="54">0<pos:position pos:line="118" pos:column="55"/></literal></expr>)<pos:position pos:line="118" pos:column="56"/></condition><then pos:line="118" pos:column="56"> <block pos:line="118" pos:column="57">{
                    <comment type="block" pos:line="119" pos:column="21">/* Aha, we should try to link both! */</comment>
                    <expr_stmt><expr><name><name pos:line="120" pos:column="21">cmd_data<pos:position pos:line="120" pos:column="29"/></name><operator pos:line="120" pos:column="29">-&gt;<pos:position pos:line="120" pos:column="34"/></operator><name pos:line="120" pos:column="31">install_path<pos:position pos:line="120" pos:column="43"/></name></name> <operator pos:line="120" pos:column="44">=<pos:position pos:line="120" pos:column="45"/></operator> <name><name pos:line="120" pos:column="46">argv<pos:position pos:line="120" pos:column="50"/></name><index pos:line="120" pos:column="50">[<expr><operator pos:line="120" pos:column="51">++<pos:position pos:line="120" pos:column="53"/></operator><name pos:line="120" pos:column="53">a<pos:position pos:line="120" pos:column="54"/></name></expr>]<pos:position pos:line="120" pos:column="55"/></index></name></expr>;<pos:position pos:line="120" pos:column="56"/></expr_stmt>
                    <expr_stmt><expr><name pos:line="121" pos:column="21">argused<pos:position pos:line="121" pos:column="28"/></name> <operator pos:line="121" pos:column="29">=<pos:position pos:line="121" pos:column="30"/></operator> <literal type="number" pos:line="121" pos:column="31">1<pos:position pos:line="121" pos:column="32"/></literal></expr>;<pos:position pos:line="121" pos:column="33"/></expr_stmt>
                }<pos:position pos:line="122" pos:column="18"/></block></then></if></elseif> <elseif pos:line="122" pos:column="19">else <if pos:line="122" pos:column="24">if <condition pos:line="122" pos:column="27">(<expr><call><name pos:line="122" pos:column="28">strcmp<pos:position pos:line="122" pos:column="34"/></name><argument_list pos:line="122" pos:column="34">(<argument><expr><name pos:line="122" pos:column="35">arg<pos:position pos:line="122" pos:column="38"/></name><operator pos:line="122" pos:column="38">+<pos:position pos:line="122" pos:column="39"/></operator><literal type="number" pos:line="122" pos:column="39">1<pos:position pos:line="122" pos:column="40"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="122" pos:column="42">"release"<pos:position pos:line="122" pos:column="51"/></literal></expr></argument>)<pos:position pos:line="122" pos:column="52"/></argument_list></call> <operator pos:line="122" pos:column="53">==<pos:position pos:line="122" pos:column="55"/></operator> <literal type="number" pos:line="122" pos:column="56">0<pos:position pos:line="122" pos:column="57"/></literal></expr>)<pos:position pos:line="122" pos:column="58"/></condition><then pos:line="122" pos:column="58"> <block pos:line="122" pos:column="59">{
                    <comment type="block" pos:line="123" pos:column="21">/* Store for later deciphering */</comment>
                    <expr_stmt><expr><name><name pos:line="124" pos:column="21">cmd_data<pos:position pos:line="124" pos:column="29"/></name><operator pos:line="124" pos:column="29">-&gt;<pos:position pos:line="124" pos:column="34"/></operator><name pos:line="124" pos:column="31">version_info<pos:position pos:line="124" pos:column="43"/></name></name> <operator pos:line="124" pos:column="44">=<pos:position pos:line="124" pos:column="45"/></operator> <name><name pos:line="124" pos:column="46">argv<pos:position pos:line="124" pos:column="50"/></name><index pos:line="124" pos:column="50">[<expr><operator pos:line="124" pos:column="51">++<pos:position pos:line="124" pos:column="53"/></operator><name pos:line="124" pos:column="53">a<pos:position pos:line="124" pos:column="54"/></name></expr>]<pos:position pos:line="124" pos:column="55"/></index></name></expr>;<pos:position pos:line="124" pos:column="56"/></expr_stmt>
                    <expr_stmt><expr><name pos:line="125" pos:column="21">argused<pos:position pos:line="125" pos:column="28"/></name> <operator pos:line="125" pos:column="29">=<pos:position pos:line="125" pos:column="30"/></operator> <literal type="number" pos:line="125" pos:column="31">1<pos:position pos:line="125" pos:column="32"/></literal></expr>;<pos:position pos:line="125" pos:column="33"/></expr_stmt>
                }<pos:position pos:line="126" pos:column="18"/></block></then></if></elseif> <elseif pos:line="126" pos:column="19">else <if pos:line="126" pos:column="24">if <condition pos:line="126" pos:column="27">(<expr><call><name pos:line="126" pos:column="28">strcmp<pos:position pos:line="126" pos:column="34"/></name><argument_list pos:line="126" pos:column="34">(<argument><expr><name pos:line="126" pos:column="35">arg<pos:position pos:line="126" pos:column="38"/></name><operator pos:line="126" pos:column="38">+<pos:position pos:line="126" pos:column="39"/></operator><literal type="number" pos:line="126" pos:column="39">1<pos:position pos:line="126" pos:column="40"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="126" pos:column="42">"version-info"<pos:position pos:line="126" pos:column="56"/></literal></expr></argument>)<pos:position pos:line="126" pos:column="57"/></argument_list></call> <operator pos:line="126" pos:column="58">==<pos:position pos:line="126" pos:column="60"/></operator> <literal type="number" pos:line="126" pos:column="61">0<pos:position pos:line="126" pos:column="62"/></literal></expr>)<pos:position pos:line="126" pos:column="63"/></condition><then pos:line="126" pos:column="63"> <block pos:line="126" pos:column="64">{
                    <comment type="block" pos:line="127" pos:column="21">/* Store for later deciphering */</comment>
                    <expr_stmt><expr><name><name pos:line="128" pos:column="21">cmd_data<pos:position pos:line="128" pos:column="29"/></name><operator pos:line="128" pos:column="29">-&gt;<pos:position pos:line="128" pos:column="34"/></operator><name pos:line="128" pos:column="31">version_info<pos:position pos:line="128" pos:column="43"/></name></name> <operator pos:line="128" pos:column="44">=<pos:position pos:line="128" pos:column="45"/></operator> <name><name pos:line="128" pos:column="46">argv<pos:position pos:line="128" pos:column="50"/></name><index pos:line="128" pos:column="50">[<expr><operator pos:line="128" pos:column="51">++<pos:position pos:line="128" pos:column="53"/></operator><name pos:line="128" pos:column="53">a<pos:position pos:line="128" pos:column="54"/></name></expr>]<pos:position pos:line="128" pos:column="55"/></index></name></expr>;<pos:position pos:line="128" pos:column="56"/></expr_stmt>
                    <expr_stmt><expr><name pos:line="129" pos:column="21">argused<pos:position pos:line="129" pos:column="28"/></name> <operator pos:line="129" pos:column="29">=<pos:position pos:line="129" pos:column="30"/></operator> <literal type="number" pos:line="129" pos:column="31">1<pos:position pos:line="129" pos:column="32"/></literal></expr>;<pos:position pos:line="129" pos:column="33"/></expr_stmt>
                }<pos:position pos:line="130" pos:column="18"/></block></then></if></elseif> <elseif pos:line="130" pos:column="19">else <if pos:line="130" pos:column="24">if <condition pos:line="130" pos:column="27">(<expr><call><name pos:line="130" pos:column="28">strcmp<pos:position pos:line="130" pos:column="34"/></name><argument_list pos:line="130" pos:column="34">(<argument><expr><name pos:line="130" pos:column="35">arg<pos:position pos:line="130" pos:column="38"/></name><operator pos:line="130" pos:column="38">+<pos:position pos:line="130" pos:column="39"/></operator><literal type="number" pos:line="130" pos:column="39">1<pos:position pos:line="130" pos:column="40"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="130" pos:column="42">"export-symbols-regex"<pos:position pos:line="130" pos:column="64"/></literal></expr></argument>)<pos:position pos:line="130" pos:column="65"/></argument_list></call> <operator pos:line="130" pos:column="66">==<pos:position pos:line="130" pos:column="68"/></operator> <literal type="number" pos:line="130" pos:column="69">0<pos:position pos:line="130" pos:column="70"/></literal></expr>)<pos:position pos:line="130" pos:column="71"/></condition><then pos:line="130" pos:column="71"> <block pos:line="130" pos:column="72">{
                    <comment type="block" pos:line="131" pos:column="21">/* Skip the argument. */</comment>
                    <expr_stmt><expr><operator pos:line="132" pos:column="21">++<pos:position pos:line="132" pos:column="23"/></operator><name pos:line="132" pos:column="23">a<pos:position pos:line="132" pos:column="24"/></name></expr>;<pos:position pos:line="132" pos:column="25"/></expr_stmt>
                    <expr_stmt><expr><name pos:line="133" pos:column="21">argused<pos:position pos:line="133" pos:column="28"/></name> <operator pos:line="133" pos:column="29">=<pos:position pos:line="133" pos:column="30"/></operator> <literal type="number" pos:line="133" pos:column="31">1<pos:position pos:line="133" pos:column="32"/></literal></expr>;<pos:position pos:line="133" pos:column="33"/></expr_stmt>
                }<pos:position pos:line="134" pos:column="18"/></block></then></if></elseif> <elseif pos:line="134" pos:column="19">else <if pos:line="134" pos:column="24">if <condition pos:line="134" pos:column="27">(<expr><call><name pos:line="134" pos:column="28">strcmp<pos:position pos:line="134" pos:column="34"/></name><argument_list pos:line="134" pos:column="34">(<argument><expr><name pos:line="134" pos:column="35">arg<pos:position pos:line="134" pos:column="38"/></name><operator pos:line="134" pos:column="38">+<pos:position pos:line="134" pos:column="39"/></operator><literal type="number" pos:line="134" pos:column="39">1<pos:position pos:line="134" pos:column="40"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="134" pos:column="42">"release"<pos:position pos:line="134" pos:column="51"/></literal></expr></argument>)<pos:position pos:line="134" pos:column="52"/></argument_list></call> <operator pos:line="134" pos:column="53">==<pos:position pos:line="134" pos:column="55"/></operator> <literal type="number" pos:line="134" pos:column="56">0<pos:position pos:line="134" pos:column="57"/></literal></expr>)<pos:position pos:line="134" pos:column="58"/></condition><then pos:line="134" pos:column="58"> <block pos:line="134" pos:column="59">{
                    <comment type="block" pos:line="135" pos:column="21">/* Skip the argument. */</comment>
                    <expr_stmt><expr><operator pos:line="136" pos:column="21">++<pos:position pos:line="136" pos:column="23"/></operator><name pos:line="136" pos:column="23">a<pos:position pos:line="136" pos:column="24"/></name></expr>;<pos:position pos:line="136" pos:column="25"/></expr_stmt>
                    <expr_stmt><expr><name pos:line="137" pos:column="21">argused<pos:position pos:line="137" pos:column="28"/></name> <operator pos:line="137" pos:column="29">=<pos:position pos:line="137" pos:column="30"/></operator> <literal type="number" pos:line="137" pos:column="31">1<pos:position pos:line="137" pos:column="32"/></literal></expr>;<pos:position pos:line="137" pos:column="33"/></expr_stmt>
                }<pos:position pos:line="138" pos:column="18"/></block></then></if></elseif> <elseif pos:line="138" pos:column="19">else <if pos:line="138" pos:column="24">if <condition pos:line="138" pos:column="27">(<expr><call><name pos:line="138" pos:column="28">strcmp<pos:position pos:line="138" pos:column="34"/></name><argument_list pos:line="138" pos:column="34">(<argument><expr><name pos:line="138" pos:column="35">arg<pos:position pos:line="138" pos:column="38"/></name><operator pos:line="138" pos:column="38">+<pos:position pos:line="138" pos:column="39"/></operator><literal type="number" pos:line="138" pos:column="39">1<pos:position pos:line="138" pos:column="40"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="138" pos:column="42">"undefined"<pos:position pos:line="138" pos:column="53"/></literal></expr></argument>)<pos:position pos:line="138" pos:column="54"/></argument_list></call> <operator pos:line="138" pos:column="55">==<pos:position pos:line="138" pos:column="57"/></operator> <literal type="number" pos:line="138" pos:column="58">0<pos:position pos:line="138" pos:column="59"/></literal></expr>)<pos:position pos:line="138" pos:column="60"/></condition><then pos:line="138" pos:column="60"> <block pos:line="138" pos:column="61">{
                    <expr_stmt><expr><name><name pos:line="139" pos:column="21">cmd_data<pos:position pos:line="139" pos:column="29"/></name><operator pos:line="139" pos:column="29">-&gt;<pos:position pos:line="139" pos:column="34"/></operator><name pos:line="139" pos:column="31">undefined_flag<pos:position pos:line="139" pos:column="45"/></name></name> <operator pos:line="139" pos:column="46">=<pos:position pos:line="139" pos:column="47"/></operator> <name><name pos:line="139" pos:column="48">argv<pos:position pos:line="139" pos:column="52"/></name><index pos:line="139" pos:column="52">[<expr><operator pos:line="139" pos:column="53">++<pos:position pos:line="139" pos:column="55"/></operator><name pos:line="139" pos:column="55">a<pos:position pos:line="139" pos:column="56"/></name></expr>]<pos:position pos:line="139" pos:column="57"/></index></name></expr>;<pos:position pos:line="139" pos:column="58"/></expr_stmt>
                    <expr_stmt><expr><name pos:line="140" pos:column="21">argused<pos:position pos:line="140" pos:column="28"/></name> <operator pos:line="140" pos:column="29">=<pos:position pos:line="140" pos:column="30"/></operator> <literal type="number" pos:line="140" pos:column="31">1<pos:position pos:line="140" pos:column="32"/></literal></expr>;<pos:position pos:line="140" pos:column="33"/></expr_stmt>
                }<pos:position pos:line="141" pos:column="18"/></block></then></if></elseif> <elseif pos:line="141" pos:column="19">else <if pos:line="141" pos:column="24">if <condition pos:line="141" pos:column="27">(<expr><name><name pos:line="141" pos:column="28">arg<pos:position pos:line="141" pos:column="31"/></name><index pos:line="141" pos:column="31">[<expr><literal type="number" pos:line="141" pos:column="32">1<pos:position pos:line="141" pos:column="33"/></literal></expr>]<pos:position pos:line="141" pos:column="34"/></index></name> <operator pos:line="141" pos:column="35">==<pos:position pos:line="141" pos:column="37"/></operator> <literal type="char" pos:line="141" pos:column="38">'R'<pos:position pos:line="141" pos:column="41"/></literal> <operator pos:line="141" pos:column="42">&amp;&amp;<pos:position pos:line="141" pos:column="52"/></operator> <operator pos:line="141" pos:column="45">!<pos:position pos:line="141" pos:column="46"/></operator><name><name pos:line="141" pos:column="46">arg<pos:position pos:line="141" pos:column="49"/></name><index pos:line="141" pos:column="49">[<expr><literal type="number" pos:line="141" pos:column="50">2<pos:position pos:line="141" pos:column="51"/></literal></expr>]<pos:position pos:line="141" pos:column="52"/></index></name></expr>)<pos:position pos:line="141" pos:column="53"/></condition><then pos:line="141" pos:column="53"> <block pos:line="141" pos:column="54">{
                    <comment type="block" pos:line="142" pos:column="21">/* -R dir Add dir to runtime library search path. */</comment>
                    <expr_stmt><expr><call><name pos:line="143" pos:column="21">add_runtimedirlib<pos:position pos:line="143" pos:column="38"/></name><argument_list pos:line="143" pos:column="38">(<argument><expr><name><name pos:line="143" pos:column="39">argv<pos:position pos:line="143" pos:column="43"/></name><index pos:line="143" pos:column="43">[<expr><operator pos:line="143" pos:column="44">++<pos:position pos:line="143" pos:column="46"/></operator><name pos:line="143" pos:column="46">a<pos:position pos:line="143" pos:column="47"/></name></expr>]<pos:position pos:line="143" pos:column="48"/></index></name></expr></argument>, <argument><expr><name pos:line="143" pos:column="50">cmd_data<pos:position pos:line="143" pos:column="58"/></name></expr></argument>)<pos:position pos:line="143" pos:column="59"/></argument_list></call></expr>;<pos:position pos:line="143" pos:column="60"/></expr_stmt>
                    <expr_stmt><expr><name pos:line="144" pos:column="21">argused<pos:position pos:line="144" pos:column="28"/></name> <operator pos:line="144" pos:column="29">=<pos:position pos:line="144" pos:column="30"/></operator> <literal type="number" pos:line="144" pos:column="31">1<pos:position pos:line="144" pos:column="32"/></literal></expr>;<pos:position pos:line="144" pos:column="33"/></expr_stmt>
                }<pos:position pos:line="145" pos:column="18"/></block></then></if></elseif></if>
            }<pos:position pos:line="146" pos:column="14"/></block></then></if>
        }<pos:position pos:line="147" pos:column="10"/></block></then> <else pos:line="147" pos:column="11">else <block pos:line="147" pos:column="16">{
            <expr_stmt><expr><name pos:line="148" pos:column="13">argused<pos:position pos:line="148" pos:column="20"/></name> <operator pos:line="148" pos:column="21">=<pos:position pos:line="148" pos:column="22"/></operator> <call><name pos:line="148" pos:column="23">parse_input_file_name<pos:position pos:line="148" pos:column="44"/></name><argument_list pos:line="148" pos:column="44">(<argument><expr><name pos:line="148" pos:column="45">arg<pos:position pos:line="148" pos:column="48"/></name></expr></argument>, <argument><expr><name pos:line="148" pos:column="50">cmd_data<pos:position pos:line="148" pos:column="58"/></name></expr></argument>)<pos:position pos:line="148" pos:column="59"/></argument_list></call></expr>;<pos:position pos:line="148" pos:column="60"/></expr_stmt>
        }<pos:position pos:line="149" pos:column="10"/></block></else></if>

        <if pos:line="151" pos:column="9">if <condition pos:line="151" pos:column="12">(<expr><operator pos:line="151" pos:column="13">!<pos:position pos:line="151" pos:column="14"/></operator><name pos:line="151" pos:column="14">argused<pos:position pos:line="151" pos:column="21"/></name></expr>)<pos:position pos:line="151" pos:column="22"/></condition><then pos:line="151" pos:column="22"> <block pos:line="151" pos:column="23">{
            <if pos:line="152" pos:column="13">if <condition pos:line="152" pos:column="16">(<expr><operator pos:line="152" pos:column="17">!<pos:position pos:line="152" pos:column="18"/></operator><name><name pos:line="152" pos:column="18">cmd_data<pos:position pos:line="152" pos:column="26"/></name><operator pos:line="152" pos:column="26">-&gt;<pos:position pos:line="152" pos:column="31"/></operator><name pos:line="152" pos:column="28">options<pos:position pos:line="152" pos:column="35"/></name><operator pos:line="152" pos:column="35">.<pos:position pos:line="152" pos:column="36"/></operator><name pos:line="152" pos:column="36">silent<pos:position pos:line="152" pos:column="42"/></name></name></expr>)<pos:position pos:line="152" pos:column="43"/></condition><then pos:line="152" pos:column="43"> <block pos:line="152" pos:column="44">{
                <expr_stmt><expr><call><name pos:line="153" pos:column="17">printf<pos:position pos:line="153" pos:column="23"/></name><argument_list pos:line="153" pos:column="23">(<argument><expr><literal type="string" pos:line="153" pos:column="24">"Adding: %s\n"<pos:position pos:line="153" pos:column="38"/></literal></expr></argument>, <argument><expr><name pos:line="153" pos:column="40">arg<pos:position pos:line="153" pos:column="43"/></name></expr></argument>)<pos:position pos:line="153" pos:column="44"/></argument_list></call></expr>;<pos:position pos:line="153" pos:column="45"/></expr_stmt>
            }<pos:position pos:line="154" pos:column="14"/></block></then></if>
            <expr_stmt><expr><call><name pos:line="155" pos:column="13">push_count_chars<pos:position pos:line="155" pos:column="29"/></name><argument_list pos:line="155" pos:column="29">(<argument><expr><name><name pos:line="155" pos:column="30">cmd_data<pos:position pos:line="155" pos:column="38"/></name><operator pos:line="155" pos:column="38">-&gt;<pos:position pos:line="155" pos:column="43"/></operator><name pos:line="155" pos:column="40">arglist<pos:position pos:line="155" pos:column="47"/></name></name></expr></argument>, <argument><expr><name pos:line="155" pos:column="49">arg<pos:position pos:line="155" pos:column="52"/></name></expr></argument>)<pos:position pos:line="155" pos:column="53"/></argument_list></call></expr>;<pos:position pos:line="155" pos:column="54"/></expr_stmt>
        }<pos:position pos:line="156" pos:column="10"/></block></then></if>
    }<pos:position pos:line="157" pos:column="6"/></block></for>

}<pos:position pos:line="159" pos:column="2"/></block></function>

<cpp:ifdef pos:line="161" pos:column="1">#<cpp:directive pos:line="161" pos:column="2">ifdef<pos:position pos:line="161" pos:column="7"/></cpp:directive> <name pos:line="161" pos:column="8">GEN_EXPORTS<pos:position pos:line="161" pos:column="19"/></name></cpp:ifdef>
<function><type><name pos:line="162" pos:column="1">void<pos:position pos:line="162" pos:column="5"/></name></type> <name pos:line="162" pos:column="6">generate_def_file<pos:position pos:line="162" pos:column="23"/></name><parameter_list pos:line="162" pos:column="23">(<parameter><decl><type><name pos:line="162" pos:column="24">command_t<pos:position pos:line="162" pos:column="33"/></name> <modifier pos:line="162" pos:column="34">*<pos:position pos:line="162" pos:column="35"/></modifier></type><name pos:line="162" pos:column="35">cmd_data<pos:position pos:line="162" pos:column="43"/></name></decl></parameter>)<pos:position pos:line="162" pos:column="44"/></parameter_list>
<block pos:line="163" pos:column="1">{
    <decl_stmt><decl><type><name pos:line="164" pos:column="5">char<pos:position pos:line="164" pos:column="9"/></name></type> <name><name pos:line="164" pos:column="10">def_file<pos:position pos:line="164" pos:column="18"/></name><index pos:line="164" pos:column="18">[<expr><literal type="number" pos:line="164" pos:column="19">1024<pos:position pos:line="164" pos:column="23"/></literal></expr>]<pos:position pos:line="164" pos:column="24"/></index></name></decl>;<pos:position pos:line="164" pos:column="25"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="165" pos:column="5">char<pos:position pos:line="165" pos:column="9"/></name></type> <name><name pos:line="165" pos:column="10">implib_file<pos:position pos:line="165" pos:column="21"/></name><index pos:line="165" pos:column="21">[<expr><literal type="number" pos:line="165" pos:column="22">1024<pos:position pos:line="165" pos:column="26"/></literal></expr>]<pos:position pos:line="165" pos:column="27"/></index></name></decl>;<pos:position pos:line="165" pos:column="28"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="166" pos:column="5">char<pos:position pos:line="166" pos:column="9"/></name> <modifier pos:line="166" pos:column="10">*<pos:position pos:line="166" pos:column="11"/></modifier></type><name pos:line="166" pos:column="11">ext<pos:position pos:line="166" pos:column="14"/></name></decl>;<pos:position pos:line="166" pos:column="15"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="167" pos:column="5">FILE<pos:position pos:line="167" pos:column="9"/></name> <modifier pos:line="167" pos:column="10">*<pos:position pos:line="167" pos:column="11"/></modifier></type><name pos:line="167" pos:column="11">hDef<pos:position pos:line="167" pos:column="15"/></name></decl>;<pos:position pos:line="167" pos:column="16"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="168" pos:column="5">char<pos:position pos:line="168" pos:column="9"/></name> <modifier pos:line="168" pos:column="10">*<pos:position pos:line="168" pos:column="11"/></modifier></type><name><name pos:line="168" pos:column="11">export_args<pos:position pos:line="168" pos:column="22"/></name><index pos:line="168" pos:column="22">[<expr><literal type="number" pos:line="168" pos:column="23">1024<pos:position pos:line="168" pos:column="27"/></literal></expr>]<pos:position pos:line="168" pos:column="28"/></index></name></decl>;<pos:position pos:line="168" pos:column="29"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="169" pos:column="5">int<pos:position pos:line="169" pos:column="8"/></name></type> <name pos:line="169" pos:column="9">num_export_args<pos:position pos:line="169" pos:column="24"/></name> <init pos:line="169" pos:column="25">= <expr><literal type="number" pos:line="169" pos:column="27">0<pos:position pos:line="169" pos:column="28"/></literal></expr></init></decl>;<pos:position pos:line="169" pos:column="29"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="170" pos:column="5">char<pos:position pos:line="170" pos:column="9"/></name> <modifier pos:line="170" pos:column="10">*<pos:position pos:line="170" pos:column="11"/></modifier></type><name pos:line="170" pos:column="11">cmd<pos:position pos:line="170" pos:column="14"/></name></decl>;<pos:position pos:line="170" pos:column="15"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="171" pos:column="5">int<pos:position pos:line="171" pos:column="8"/></name></type> <name pos:line="171" pos:column="9">cmd_size<pos:position pos:line="171" pos:column="17"/></name> <init pos:line="171" pos:column="18">= <expr><literal type="number" pos:line="171" pos:column="20">0<pos:position pos:line="171" pos:column="21"/></literal></expr></init></decl>;<pos:position pos:line="171" pos:column="22"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="172" pos:column="5">int<pos:position pos:line="172" pos:column="8"/></name></type> <name pos:line="172" pos:column="9">a<pos:position pos:line="172" pos:column="10"/></name></decl>;<pos:position pos:line="172" pos:column="11"/></decl_stmt>

    <if pos:line="174" pos:column="5">if <condition pos:line="174" pos:column="8">(<expr><name><name pos:line="174" pos:column="9">cmd_data<pos:position pos:line="174" pos:column="17"/></name><operator pos:line="174" pos:column="17">-&gt;<pos:position pos:line="174" pos:column="22"/></operator><name pos:line="174" pos:column="19">output_name<pos:position pos:line="174" pos:column="30"/></name></name></expr>)<pos:position pos:line="174" pos:column="31"/></condition><then pos:line="174" pos:column="31"> <block pos:line="174" pos:column="32">{
        <expr_stmt><expr><call><name pos:line="175" pos:column="9">strcpy<pos:position pos:line="175" pos:column="15"/></name><argument_list pos:line="175" pos:column="15">(<argument><expr><name pos:line="175" pos:column="16">def_file<pos:position pos:line="175" pos:column="24"/></name></expr></argument>, <argument><expr><name><name pos:line="175" pos:column="26">cmd_data<pos:position pos:line="175" pos:column="34"/></name><operator pos:line="175" pos:column="34">-&gt;<pos:position pos:line="175" pos:column="39"/></operator><name pos:line="175" pos:column="36">output_name<pos:position pos:line="175" pos:column="47"/></name></name></expr></argument>)<pos:position pos:line="175" pos:column="48"/></argument_list></call></expr>;<pos:position pos:line="175" pos:column="49"/></expr_stmt>
        <expr_stmt><expr><call><name pos:line="176" pos:column="9">strcat<pos:position pos:line="176" pos:column="15"/></name><argument_list pos:line="176" pos:column="15">(<argument><expr><name pos:line="176" pos:column="16">def_file<pos:position pos:line="176" pos:column="24"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="176" pos:column="26">".def"<pos:position pos:line="176" pos:column="32"/></literal></expr></argument>)<pos:position pos:line="176" pos:column="33"/></argument_list></call></expr>;<pos:position pos:line="176" pos:column="34"/></expr_stmt>
        <expr_stmt><expr><name pos:line="177" pos:column="9">hDef<pos:position pos:line="177" pos:column="13"/></name> <operator pos:line="177" pos:column="14">=<pos:position pos:line="177" pos:column="15"/></operator> <call><name pos:line="177" pos:column="16">fopen<pos:position pos:line="177" pos:column="21"/></name><argument_list pos:line="177" pos:column="21">(<argument><expr><name pos:line="177" pos:column="22">def_file<pos:position pos:line="177" pos:column="30"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="177" pos:column="32">"w"<pos:position pos:line="177" pos:column="35"/></literal></expr></argument>)<pos:position pos:line="177" pos:column="36"/></argument_list></call></expr>;<pos:position pos:line="177" pos:column="37"/></expr_stmt>

        <if pos:line="179" pos:column="9">if <condition pos:line="179" pos:column="12">(<expr><name pos:line="179" pos:column="13">hDef<pos:position pos:line="179" pos:column="17"/></name> <operator pos:line="179" pos:column="18">!=<pos:position pos:line="179" pos:column="20"/></operator> <name pos:line="179" pos:column="21">NULL<pos:position pos:line="179" pos:column="25"/></name></expr>)<pos:position pos:line="179" pos:column="26"/></condition><then pos:line="179" pos:column="26"> <block pos:line="179" pos:column="27">{
            <expr_stmt><expr><call><name pos:line="180" pos:column="13">fprintf<pos:position pos:line="180" pos:column="20"/></name><argument_list pos:line="180" pos:column="20">(<argument><expr><name pos:line="180" pos:column="21">hDef<pos:position pos:line="180" pos:column="25"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="180" pos:column="27">"LIBRARY '%s' INITINSTANCE\n"<pos:position pos:line="180" pos:column="56"/></literal></expr></argument>, <argument><expr><call><name pos:line="180" pos:column="58">nameof<pos:position pos:line="180" pos:column="64"/></name><argument_list pos:line="180" pos:column="64">(<argument><expr><name><name pos:line="180" pos:column="65">cmd_data<pos:position pos:line="180" pos:column="73"/></name><operator pos:line="180" pos:column="73">-&gt;<pos:position pos:line="180" pos:column="78"/></operator><name pos:line="180" pos:column="75">output_name<pos:position pos:line="180" pos:column="86"/></name></name></expr></argument>)<pos:position pos:line="180" pos:column="87"/></argument_list></call></expr></argument>)<pos:position pos:line="180" pos:column="88"/></argument_list></call></expr>;<pos:position pos:line="180" pos:column="89"/></expr_stmt>
            <expr_stmt><expr><call><name pos:line="181" pos:column="13">fprintf<pos:position pos:line="181" pos:column="20"/></name><argument_list pos:line="181" pos:column="20">(<argument><expr><name pos:line="181" pos:column="21">hDef<pos:position pos:line="181" pos:column="25"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="181" pos:column="27">"DATA NONSHARED\n"<pos:position pos:line="181" pos:column="45"/></literal></expr></argument>)<pos:position pos:line="181" pos:column="46"/></argument_list></call></expr>;<pos:position pos:line="181" pos:column="47"/></expr_stmt>
            <expr_stmt><expr><call><name pos:line="182" pos:column="13">fprintf<pos:position pos:line="182" pos:column="20"/></name><argument_list pos:line="182" pos:column="20">(<argument><expr><name pos:line="182" pos:column="21">hDef<pos:position pos:line="182" pos:column="25"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="182" pos:column="27">"EXPORTS\n"<pos:position pos:line="182" pos:column="38"/></literal></expr></argument>)<pos:position pos:line="182" pos:column="39"/></argument_list></call></expr>;<pos:position pos:line="182" pos:column="40"/></expr_stmt>
            <expr_stmt><expr><call><name pos:line="183" pos:column="13">fclose<pos:position pos:line="183" pos:column="19"/></name><argument_list pos:line="183" pos:column="19">(<argument><expr><name pos:line="183" pos:column="20">hDef<pos:position pos:line="183" pos:column="24"/></name></expr></argument>)<pos:position pos:line="183" pos:column="25"/></argument_list></call></expr>;<pos:position pos:line="183" pos:column="26"/></expr_stmt>

            <for pos:line="185" pos:column="13">for <control pos:line="185" pos:column="17">(<init><expr><name pos:line="185" pos:column="18">a<pos:position pos:line="185" pos:column="19"/></name> <operator pos:line="185" pos:column="20">=<pos:position pos:line="185" pos:column="21"/></operator> <literal type="number" pos:line="185" pos:column="22">0<pos:position pos:line="185" pos:column="23"/></literal></expr>;<pos:position pos:line="185" pos:column="24"/></init> <condition><expr><name pos:line="185" pos:column="25">a<pos:position pos:line="185" pos:column="26"/></name> <operator pos:line="185" pos:column="27">&lt;<pos:position pos:line="185" pos:column="31"/></operator> <name><name pos:line="185" pos:column="29">cmd_data<pos:position pos:line="185" pos:column="37"/></name><operator pos:line="185" pos:column="37">-&gt;<pos:position pos:line="185" pos:column="42"/></operator><name pos:line="185" pos:column="39">num_obj_files<pos:position pos:line="185" pos:column="52"/></name></name></expr>;<pos:position pos:line="185" pos:column="53"/></condition> <incr><expr><name pos:line="185" pos:column="54">a<pos:position pos:line="185" pos:column="55"/></name><operator pos:line="185" pos:column="55">++<pos:position pos:line="185" pos:column="57"/></operator></expr></incr>)<pos:position pos:line="185" pos:column="58"/></control> <block pos:line="185" pos:column="59">{
                <expr_stmt><expr><name pos:line="186" pos:column="17">cmd_size<pos:position pos:line="186" pos:column="25"/></name> <operator pos:line="186" pos:column="26">+=<pos:position pos:line="186" pos:column="28"/></operator> <call><name pos:line="186" pos:column="29">strlen<pos:position pos:line="186" pos:column="35"/></name><argument_list pos:line="186" pos:column="35">(<argument><expr><name><name pos:line="186" pos:column="36">cmd_data<pos:position pos:line="186" pos:column="44"/></name><operator pos:line="186" pos:column="44">-&gt;<pos:position pos:line="186" pos:column="49"/></operator><name pos:line="186" pos:column="46">obj_files<pos:position pos:line="186" pos:column="55"/></name><index pos:line="186" pos:column="55">[<expr><name pos:line="186" pos:column="56">a<pos:position pos:line="186" pos:column="57"/></name></expr>]<pos:position pos:line="186" pos:column="58"/></index></name></expr></argument>)<pos:position pos:line="186" pos:column="59"/></argument_list></call> <operator pos:line="186" pos:column="60">+<pos:position pos:line="186" pos:column="61"/></operator> <literal type="number" pos:line="186" pos:column="62">1<pos:position pos:line="186" pos:column="63"/></literal></expr>;<pos:position pos:line="186" pos:column="64"/></expr_stmt>
            }<pos:position pos:line="187" pos:column="14"/></block></for>

            <expr_stmt><expr><name pos:line="189" pos:column="13">cmd_size<pos:position pos:line="189" pos:column="21"/></name> <operator pos:line="189" pos:column="22">+=<pos:position pos:line="189" pos:column="24"/></operator> <call><name pos:line="189" pos:column="25">strlen<pos:position pos:line="189" pos:column="31"/></name><argument_list pos:line="189" pos:column="31">(<argument><expr><name pos:line="189" pos:column="32">GEN_EXPORTS<pos:position pos:line="189" pos:column="43"/></name></expr></argument>)<pos:position pos:line="189" pos:column="44"/></argument_list></call> <operator pos:line="189" pos:column="45">+<pos:position pos:line="189" pos:column="46"/></operator> <call><name pos:line="189" pos:column="47">strlen<pos:position pos:line="189" pos:column="53"/></name><argument_list pos:line="189" pos:column="53">(<argument><expr><name pos:line="189" pos:column="54">def_file<pos:position pos:line="189" pos:column="62"/></name></expr></argument>)<pos:position pos:line="189" pos:column="63"/></argument_list></call> <operator pos:line="189" pos:column="64">+<pos:position pos:line="189" pos:column="65"/></operator> <literal type="number" pos:line="189" pos:column="66">3<pos:position pos:line="189" pos:column="67"/></literal></expr>;<pos:position pos:line="189" pos:column="68"/></expr_stmt>
            <expr_stmt><expr><name pos:line="190" pos:column="13">cmd<pos:position pos:line="190" pos:column="16"/></name> <operator pos:line="190" pos:column="17">=<pos:position pos:line="190" pos:column="18"/></operator> <operator pos:line="190" pos:column="19">(<pos:position pos:line="190" pos:column="20"/></operator><name pos:line="190" pos:column="20">char<pos:position pos:line="190" pos:column="24"/></name> <operator pos:line="190" pos:column="25">*<pos:position pos:line="190" pos:column="26"/></operator><operator pos:line="190" pos:column="26">)<pos:position pos:line="190" pos:column="27"/></operator><call><name pos:line="190" pos:column="27">malloc<pos:position pos:line="190" pos:column="33"/></name><argument_list pos:line="190" pos:column="33">(<argument><expr><name pos:line="190" pos:column="34">cmd_size<pos:position pos:line="190" pos:column="42"/></name></expr></argument>)<pos:position pos:line="190" pos:column="43"/></argument_list></call></expr>;<pos:position pos:line="190" pos:column="44"/></expr_stmt>
            <expr_stmt><expr><call><name pos:line="191" pos:column="13">strcpy<pos:position pos:line="191" pos:column="19"/></name><argument_list pos:line="191" pos:column="19">(<argument><expr><name pos:line="191" pos:column="20">cmd<pos:position pos:line="191" pos:column="23"/></name></expr></argument>, <argument><expr><name pos:line="191" pos:column="25">GEN_EXPORTS<pos:position pos:line="191" pos:column="36"/></name></expr></argument>)<pos:position pos:line="191" pos:column="37"/></argument_list></call></expr>;<pos:position pos:line="191" pos:column="38"/></expr_stmt>

            <for pos:line="193" pos:column="13">for <control pos:line="193" pos:column="17">(<init><expr><name pos:line="193" pos:column="18">a<pos:position pos:line="193" pos:column="19"/></name><operator pos:line="193" pos:column="19">=<pos:position pos:line="193" pos:column="20"/></operator><literal type="number" pos:line="193" pos:column="20">0<pos:position pos:line="193" pos:column="21"/></literal></expr>;<pos:position pos:line="193" pos:column="22"/></init> <condition><expr><name pos:line="193" pos:column="23">a<pos:position pos:line="193" pos:column="24"/></name> <operator pos:line="193" pos:column="25">&lt;<pos:position pos:line="193" pos:column="29"/></operator> <name><name pos:line="193" pos:column="27">cmd_data<pos:position pos:line="193" pos:column="35"/></name><operator pos:line="193" pos:column="35">-&gt;<pos:position pos:line="193" pos:column="40"/></operator><name pos:line="193" pos:column="37">num_obj_files<pos:position pos:line="193" pos:column="50"/></name></name></expr>;<pos:position pos:line="193" pos:column="51"/></condition> <incr><expr><name pos:line="193" pos:column="52">a<pos:position pos:line="193" pos:column="53"/></name><operator pos:line="193" pos:column="53">++<pos:position pos:line="193" pos:column="55"/></operator></expr></incr>)<pos:position pos:line="193" pos:column="56"/></control> <block pos:line="193" pos:column="57">{
                <expr_stmt><expr><call><name pos:line="194" pos:column="17">strcat<pos:position pos:line="194" pos:column="23"/></name><argument_list pos:line="194" pos:column="23">(<argument><expr><name pos:line="194" pos:column="24">cmd<pos:position pos:line="194" pos:column="27"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="194" pos:column="29">" "<pos:position pos:line="194" pos:column="32"/></literal></expr></argument>)<pos:position pos:line="194" pos:column="33"/></argument_list></call></expr>;<pos:position pos:line="194" pos:column="34"/></expr_stmt>
                <expr_stmt><expr><call><name pos:line="195" pos:column="17">strcat<pos:position pos:line="195" pos:column="23"/></name><argument_list pos:line="195" pos:column="23">(<argument><expr><name pos:line="195" pos:column="24">cmd<pos:position pos:line="195" pos:column="27"/></name></expr></argument>, <argument><expr><name><name pos:line="195" pos:column="29">cmd_data<pos:position pos:line="195" pos:column="37"/></name><operator pos:line="195" pos:column="37">-&gt;<pos:position pos:line="195" pos:column="42"/></operator><name pos:line="195" pos:column="39">obj_files<pos:position pos:line="195" pos:column="48"/></name><index pos:line="195" pos:column="48">[<expr><name pos:line="195" pos:column="49">a<pos:position pos:line="195" pos:column="50"/></name></expr>]<pos:position pos:line="195" pos:column="51"/></index></name></expr></argument> )<pos:position pos:line="195" pos:column="53"/></argument_list></call></expr>;<pos:position pos:line="195" pos:column="54"/></expr_stmt>
            }<pos:position pos:line="196" pos:column="14"/></block></for>

            <expr_stmt><expr><call><name pos:line="198" pos:column="13">strcat<pos:position pos:line="198" pos:column="19"/></name><argument_list pos:line="198" pos:column="19">(<argument><expr><name pos:line="198" pos:column="20">cmd<pos:position pos:line="198" pos:column="23"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="198" pos:column="25">"&gt;&gt;"<pos:position pos:line="198" pos:column="35"/></literal></expr></argument>)<pos:position pos:line="198" pos:column="30"/></argument_list></call></expr>;<pos:position pos:line="198" pos:column="31"/></expr_stmt>
            <expr_stmt><expr><call><name pos:line="199" pos:column="13">strcat<pos:position pos:line="199" pos:column="19"/></name><argument_list pos:line="199" pos:column="19">(<argument><expr><name pos:line="199" pos:column="20">cmd<pos:position pos:line="199" pos:column="23"/></name></expr></argument>, <argument><expr><name pos:line="199" pos:column="25">def_file<pos:position pos:line="199" pos:column="33"/></name></expr></argument>)<pos:position pos:line="199" pos:column="34"/></argument_list></call></expr>;<pos:position pos:line="199" pos:column="35"/></expr_stmt>
            <expr_stmt><expr><call><name pos:line="200" pos:column="13">puts<pos:position pos:line="200" pos:column="17"/></name><argument_list pos:line="200" pos:column="17">(<argument><expr><name pos:line="200" pos:column="18">cmd<pos:position pos:line="200" pos:column="21"/></name></expr></argument>)<pos:position pos:line="200" pos:column="22"/></argument_list></call></expr>;<pos:position pos:line="200" pos:column="23"/></expr_stmt>
            <expr_stmt><expr><name><name pos:line="201" pos:column="13">export_args<pos:position pos:line="201" pos:column="24"/></name><index pos:line="201" pos:column="24">[<expr><name pos:line="201" pos:column="25">num_export_args<pos:position pos:line="201" pos:column="40"/></name><operator pos:line="201" pos:column="40">++<pos:position pos:line="201" pos:column="42"/></operator></expr>]<pos:position pos:line="201" pos:column="43"/></index></name> <operator pos:line="201" pos:column="44">=<pos:position pos:line="201" pos:column="45"/></operator> <name pos:line="201" pos:column="46">SHELL_CMD<pos:position pos:line="201" pos:column="55"/></name></expr>;<pos:position pos:line="201" pos:column="56"/></expr_stmt>
            <expr_stmt><expr><name><name pos:line="202" pos:column="13">export_args<pos:position pos:line="202" pos:column="24"/></name><index pos:line="202" pos:column="24">[<expr><name pos:line="202" pos:column="25">num_export_args<pos:position pos:line="202" pos:column="40"/></name><operator pos:line="202" pos:column="40">++<pos:position pos:line="202" pos:column="42"/></operator></expr>]<pos:position pos:line="202" pos:column="43"/></index></name> <operator pos:line="202" pos:column="44">=<pos:position pos:line="202" pos:column="45"/></operator> <literal type="string" pos:line="202" pos:column="46">"-c"<pos:position pos:line="202" pos:column="50"/></literal></expr>;<pos:position pos:line="202" pos:column="51"/></expr_stmt>
            <expr_stmt><expr><name><name pos:line="203" pos:column="13">export_args<pos:position pos:line="203" pos:column="24"/></name><index pos:line="203" pos:column="24">[<expr><name pos:line="203" pos:column="25">num_export_args<pos:position pos:line="203" pos:column="40"/></name><operator pos:line="203" pos:column="40">++<pos:position pos:line="203" pos:column="42"/></operator></expr>]<pos:position pos:line="203" pos:column="43"/></index></name> <operator pos:line="203" pos:column="44">=<pos:position pos:line="203" pos:column="45"/></operator> <name pos:line="203" pos:column="46">cmd<pos:position pos:line="203" pos:column="49"/></name></expr>;<pos:position pos:line="203" pos:column="50"/></expr_stmt>
            <expr_stmt><expr><name><name pos:line="204" pos:column="13">export_args<pos:position pos:line="204" pos:column="24"/></name><index pos:line="204" pos:column="24">[<expr><name pos:line="204" pos:column="25">num_export_args<pos:position pos:line="204" pos:column="40"/></name><operator pos:line="204" pos:column="40">++<pos:position pos:line="204" pos:column="42"/></operator></expr>]<pos:position pos:line="204" pos:column="43"/></index></name> <operator pos:line="204" pos:column="44">=<pos:position pos:line="204" pos:column="45"/></operator> <name pos:line="204" pos:column="46">NULL<pos:position pos:line="204" pos:column="50"/></name></expr>;<pos:position pos:line="204" pos:column="51"/></expr_stmt>
            <expr_stmt><expr><call><name pos:line="205" pos:column="13">external_spawn<pos:position pos:line="205" pos:column="27"/></name><argument_list pos:line="205" pos:column="27">(<argument><expr><name pos:line="205" pos:column="28">cmd_data<pos:position pos:line="205" pos:column="36"/></name></expr></argument>, <argument><expr><name><name pos:line="205" pos:column="38">export_args<pos:position pos:line="205" pos:column="49"/></name><index pos:line="205" pos:column="49">[<expr><literal type="number" pos:line="205" pos:column="50">0<pos:position pos:line="205" pos:column="51"/></literal></expr>]<pos:position pos:line="205" pos:column="52"/></index></name></expr></argument>, <argument><expr><operator pos:line="205" pos:column="54">(<pos:position pos:line="205" pos:column="55"/></operator><specifier pos:line="205" pos:column="55">const<pos:position pos:line="205" pos:column="60"/></specifier> <name pos:line="205" pos:column="61">char<pos:position pos:line="205" pos:column="65"/></name><operator pos:line="205" pos:column="65">*<pos:position pos:line="205" pos:column="66"/></operator><operator pos:line="205" pos:column="66">*<pos:position pos:line="205" pos:column="67"/></operator><operator pos:line="205" pos:column="67">)<pos:position pos:line="205" pos:column="68"/></operator><name pos:line="205" pos:column="68">export_args<pos:position pos:line="205" pos:column="79"/></name></expr></argument>)<pos:position pos:line="205" pos:column="80"/></argument_list></call></expr>;<pos:position pos:line="205" pos:column="81"/></expr_stmt>
            <expr_stmt><expr><name><name pos:line="206" pos:column="13">cmd_data<pos:position pos:line="206" pos:column="21"/></name><operator pos:line="206" pos:column="21">-&gt;<pos:position pos:line="206" pos:column="26"/></operator><name pos:line="206" pos:column="23">arglist<pos:position pos:line="206" pos:column="30"/></name><index pos:line="206" pos:column="30">[<expr><name><name pos:line="206" pos:column="31">cmd_data<pos:position pos:line="206" pos:column="39"/></name><operator pos:line="206" pos:column="39">-&gt;<pos:position pos:line="206" pos:column="44"/></operator><name pos:line="206" pos:column="41">num_args<pos:position pos:line="206" pos:column="49"/></name></name><operator pos:line="206" pos:column="49">++<pos:position pos:line="206" pos:column="51"/></operator></expr>]<pos:position pos:line="206" pos:column="52"/></index></name> <operator pos:line="206" pos:column="53">=<pos:position pos:line="206" pos:column="54"/></operator> <call><name pos:line="206" pos:column="55">strdup<pos:position pos:line="206" pos:column="61"/></name><argument_list pos:line="206" pos:column="61">(<argument><expr><name pos:line="206" pos:column="62">def_file<pos:position pos:line="206" pos:column="70"/></name></expr></argument>)<pos:position pos:line="206" pos:column="71"/></argument_list></call></expr>;<pos:position pos:line="206" pos:column="72"/></expr_stmt>

            <comment type="block" pos:line="208" pos:column="13">/* Now make an import library for the dll */</comment>
            <expr_stmt><expr><name pos:line="209" pos:column="13">num_export_args<pos:position pos:line="209" pos:column="28"/></name> <operator pos:line="209" pos:column="29">=<pos:position pos:line="209" pos:column="30"/></operator> <literal type="number" pos:line="209" pos:column="31">0<pos:position pos:line="209" pos:column="32"/></literal></expr>;<pos:position pos:line="209" pos:column="33"/></expr_stmt>
            <expr_stmt><expr><name><name pos:line="210" pos:column="13">export_args<pos:position pos:line="210" pos:column="24"/></name><index pos:line="210" pos:column="24">[<expr><name pos:line="210" pos:column="25">num_export_args<pos:position pos:line="210" pos:column="40"/></name><operator pos:line="210" pos:column="40">++<pos:position pos:line="210" pos:column="42"/></operator></expr>]<pos:position pos:line="210" pos:column="43"/></index></name> <operator pos:line="210" pos:column="44">=<pos:position pos:line="210" pos:column="45"/></operator> <name pos:line="210" pos:column="46">DEF2IMPLIB_CMD<pos:position pos:line="210" pos:column="60"/></name></expr>;<pos:position pos:line="210" pos:column="61"/></expr_stmt>
            <expr_stmt><expr><name><name pos:line="211" pos:column="13">export_args<pos:position pos:line="211" pos:column="24"/></name><index pos:line="211" pos:column="24">[<expr><name pos:line="211" pos:column="25">num_export_args<pos:position pos:line="211" pos:column="40"/></name><operator pos:line="211" pos:column="40">++<pos:position pos:line="211" pos:column="42"/></operator></expr>]<pos:position pos:line="211" pos:column="43"/></index></name> <operator pos:line="211" pos:column="44">=<pos:position pos:line="211" pos:column="45"/></operator> <literal type="string" pos:line="211" pos:column="46">"-o"<pos:position pos:line="211" pos:column="50"/></literal></expr>;<pos:position pos:line="211" pos:column="51"/></expr_stmt>

            <expr_stmt><expr><call><name pos:line="213" pos:column="13">strcpy<pos:position pos:line="213" pos:column="19"/></name><argument_list pos:line="213" pos:column="19">(<argument><expr><name pos:line="213" pos:column="20">implib_file<pos:position pos:line="213" pos:column="31"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="213" pos:column="33">".libs/"<pos:position pos:line="213" pos:column="41"/></literal></expr></argument>)<pos:position pos:line="213" pos:column="42"/></argument_list></call></expr>;<pos:position pos:line="213" pos:column="43"/></expr_stmt>
            <expr_stmt><expr><call><name pos:line="214" pos:column="13">strcat<pos:position pos:line="214" pos:column="19"/></name><argument_list pos:line="214" pos:column="19">(<argument><expr><name pos:line="214" pos:column="20">implib_file<pos:position pos:line="214" pos:column="31"/></name></expr></argument>, <argument><expr><name><name pos:line="214" pos:column="33">cmd_data<pos:position pos:line="214" pos:column="41"/></name><operator pos:line="214" pos:column="41">-&gt;<pos:position pos:line="214" pos:column="46"/></operator><name pos:line="214" pos:column="43">basename<pos:position pos:line="214" pos:column="51"/></name></name></expr></argument>)<pos:position pos:line="214" pos:column="52"/></argument_list></call></expr>;<pos:position pos:line="214" pos:column="53"/></expr_stmt>
            <expr_stmt><expr><name pos:line="215" pos:column="13">ext<pos:position pos:line="215" pos:column="16"/></name> <operator pos:line="215" pos:column="17">=<pos:position pos:line="215" pos:column="18"/></operator> <call><name pos:line="215" pos:column="19">strrchr<pos:position pos:line="215" pos:column="26"/></name><argument_list pos:line="215" pos:column="26">(<argument><expr><name pos:line="215" pos:column="27">implib_file<pos:position pos:line="215" pos:column="38"/></name></expr></argument>, <argument><expr><literal type="char" pos:line="215" pos:column="40">'.'<pos:position pos:line="215" pos:column="43"/></literal></expr></argument>)<pos:position pos:line="215" pos:column="44"/></argument_list></call></expr>;<pos:position pos:line="215" pos:column="45"/></expr_stmt>

            <if pos:line="217" pos:column="13">if <condition pos:line="217" pos:column="16">(<expr><name pos:line="217" pos:column="17">ext<pos:position pos:line="217" pos:column="20"/></name></expr>)<pos:position pos:line="217" pos:column="21"/></condition><then pos:line="217" pos:column="21">
                <block type="pseudo"><expr_stmt><expr><operator pos:line="218" pos:column="17">*<pos:position pos:line="218" pos:column="18"/></operator><name pos:line="218" pos:column="18">ext<pos:position pos:line="218" pos:column="21"/></name> <operator pos:line="218" pos:column="22">=<pos:position pos:line="218" pos:column="23"/></operator> <literal type="number" pos:line="218" pos:column="24">0<pos:position pos:line="218" pos:column="25"/></literal></expr>;<pos:position pos:line="218" pos:column="26"/></expr_stmt></block></then></if>

            <expr_stmt><expr><call><name pos:line="220" pos:column="13">strcat<pos:position pos:line="220" pos:column="19"/></name><argument_list pos:line="220" pos:column="19">(<argument><expr><name pos:line="220" pos:column="20">implib_file<pos:position pos:line="220" pos:column="31"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="220" pos:column="33">"."<pos:position pos:line="220" pos:column="36"/></literal></expr></argument>)<pos:position pos:line="220" pos:column="37"/></argument_list></call></expr>;<pos:position pos:line="220" pos:column="38"/></expr_stmt>
            <expr_stmt><expr><call><name pos:line="221" pos:column="13">strcat<pos:position pos:line="221" pos:column="19"/></name><argument_list pos:line="221" pos:column="19">(<argument><expr><name pos:line="221" pos:column="20">implib_file<pos:position pos:line="221" pos:column="31"/></name></expr></argument>, <argument><expr><name pos:line="221" pos:column="33">STATIC_LIB_EXT<pos:position pos:line="221" pos:column="47"/></name></expr></argument>)<pos:position pos:line="221" pos:column="48"/></argument_list></call></expr>;<pos:position pos:line="221" pos:column="49"/></expr_stmt>

            <expr_stmt><expr><name><name pos:line="223" pos:column="13">export_args<pos:position pos:line="223" pos:column="24"/></name><index pos:line="223" pos:column="24">[<expr><name pos:line="223" pos:column="25">num_export_args<pos:position pos:line="223" pos:column="40"/></name><operator pos:line="223" pos:column="40">++<pos:position pos:line="223" pos:column="42"/></operator></expr>]<pos:position pos:line="223" pos:column="43"/></index></name> <operator pos:line="223" pos:column="44">=<pos:position pos:line="223" pos:column="45"/></operator> <name pos:line="223" pos:column="46">implib_file<pos:position pos:line="223" pos:column="57"/></name></expr>;<pos:position pos:line="223" pos:column="58"/></expr_stmt>
            <expr_stmt><expr><name><name pos:line="224" pos:column="13">export_args<pos:position pos:line="224" pos:column="24"/></name><index pos:line="224" pos:column="24">[<expr><name pos:line="224" pos:column="25">num_export_args<pos:position pos:line="224" pos:column="40"/></name><operator pos:line="224" pos:column="40">++<pos:position pos:line="224" pos:column="42"/></operator></expr>]<pos:position pos:line="224" pos:column="43"/></index></name> <operator pos:line="224" pos:column="44">=<pos:position pos:line="224" pos:column="45"/></operator> <name pos:line="224" pos:column="46">def_file<pos:position pos:line="224" pos:column="54"/></name></expr>;<pos:position pos:line="224" pos:column="55"/></expr_stmt>
            <expr_stmt><expr><name><name pos:line="225" pos:column="13">export_args<pos:position pos:line="225" pos:column="24"/></name><index pos:line="225" pos:column="24">[<expr><name pos:line="225" pos:column="25">num_export_args<pos:position pos:line="225" pos:column="40"/></name><operator pos:line="225" pos:column="40">++<pos:position pos:line="225" pos:column="42"/></operator></expr>]<pos:position pos:line="225" pos:column="43"/></index></name> <operator pos:line="225" pos:column="44">=<pos:position pos:line="225" pos:column="45"/></operator> <name pos:line="225" pos:column="46">NULL<pos:position pos:line="225" pos:column="50"/></name></expr>;<pos:position pos:line="225" pos:column="51"/></expr_stmt>
            <expr_stmt><expr><call><name pos:line="226" pos:column="13">external_spawn<pos:position pos:line="226" pos:column="27"/></name><argument_list pos:line="226" pos:column="27">(<argument><expr><name pos:line="226" pos:column="28">cmd_data<pos:position pos:line="226" pos:column="36"/></name></expr></argument>, <argument><expr><name><name pos:line="226" pos:column="38">export_args<pos:position pos:line="226" pos:column="49"/></name><index pos:line="226" pos:column="49">[<expr><literal type="number" pos:line="226" pos:column="50">0<pos:position pos:line="226" pos:column="51"/></literal></expr>]<pos:position pos:line="226" pos:column="52"/></index></name></expr></argument>, <argument><expr><operator pos:line="226" pos:column="54">(<pos:position pos:line="226" pos:column="55"/></operator><specifier pos:line="226" pos:column="55">const<pos:position pos:line="226" pos:column="60"/></specifier> <name pos:line="226" pos:column="61">char<pos:position pos:line="226" pos:column="65"/></name><operator pos:line="226" pos:column="65">*<pos:position pos:line="226" pos:column="66"/></operator><operator pos:line="226" pos:column="66">*<pos:position pos:line="226" pos:column="67"/></operator><operator pos:line="226" pos:column="67">)<pos:position pos:line="226" pos:column="68"/></operator><name pos:line="226" pos:column="68">export_args<pos:position pos:line="226" pos:column="79"/></name></expr></argument>)<pos:position pos:line="226" pos:column="80"/></argument_list></call></expr>;<pos:position pos:line="226" pos:column="81"/></expr_stmt>

        }<pos:position pos:line="228" pos:column="10"/></block></then></if>
    }<pos:position pos:line="229" pos:column="6"/></block></then></if>
}<pos:position pos:line="230" pos:column="2"/></block></function>
<cpp:endif pos:line="231" pos:column="1">#<cpp:directive pos:line="231" pos:column="2">endif<pos:position pos:line="231" pos:column="7"/></cpp:directive></cpp:endif>

<function><type><specifier pos:line="233" pos:column="1">const<pos:position pos:line="233" pos:column="6"/></specifier> <name pos:line="233" pos:column="7">char<pos:position pos:line="233" pos:column="11"/></name><modifier pos:line="233" pos:column="11">*<pos:position pos:line="233" pos:column="12"/></modifier></type> <name pos:line="233" pos:column="13">expand_path<pos:position pos:line="233" pos:column="24"/></name><parameter_list pos:line="233" pos:column="24">(<parameter><decl><type><specifier pos:line="233" pos:column="25">const<pos:position pos:line="233" pos:column="30"/></specifier> <name pos:line="233" pos:column="31">char<pos:position pos:line="233" pos:column="35"/></name> <modifier pos:line="233" pos:column="36">*<pos:position pos:line="233" pos:column="37"/></modifier></type><name pos:line="233" pos:column="37">relpath<pos:position pos:line="233" pos:column="44"/></name></decl></parameter>)<pos:position pos:line="233" pos:column="45"/></parameter_list>
<block pos:line="234" pos:column="1">{
    <decl_stmt><decl><type><name pos:line="235" pos:column="5">char<pos:position pos:line="235" pos:column="9"/></name></type> <name><name pos:line="235" pos:column="10">foo<pos:position pos:line="235" pos:column="13"/></name><index pos:line="235" pos:column="13">[<expr><name pos:line="235" pos:column="14">PATH_MAX<pos:position pos:line="235" pos:column="22"/></name></expr>]<pos:position pos:line="235" pos:column="23"/></index></name></decl>, <modifier pos:line="235" pos:column="25">*<pos:position pos:line="235" pos:column="26"/></modifier><decl><type ref="prev"/><name pos:line="235" pos:column="26">newpath<pos:position pos:line="235" pos:column="33"/></name></decl>;<pos:position pos:line="235" pos:column="34"/></decl_stmt>

    <expr_stmt><expr><call><name pos:line="237" pos:column="5">getcwd<pos:position pos:line="237" pos:column="11"/></name><argument_list pos:line="237" pos:column="11">(<argument><expr><name pos:line="237" pos:column="12">foo<pos:position pos:line="237" pos:column="15"/></name></expr></argument>, <argument><expr><name pos:line="237" pos:column="17">PATH_MAX<pos:position pos:line="237" pos:column="25"/></name><operator pos:line="237" pos:column="25">-<pos:position pos:line="237" pos:column="26"/></operator><literal type="number" pos:line="237" pos:column="26">1<pos:position pos:line="237" pos:column="27"/></literal></expr></argument>)<pos:position pos:line="237" pos:column="28"/></argument_list></call></expr>;<pos:position pos:line="237" pos:column="29"/></expr_stmt>
    <expr_stmt><expr><name pos:line="238" pos:column="5">newpath<pos:position pos:line="238" pos:column="12"/></name> <operator pos:line="238" pos:column="13">=<pos:position pos:line="238" pos:column="14"/></operator> <operator pos:line="238" pos:column="15">(<pos:position pos:line="238" pos:column="16"/></operator><name pos:line="238" pos:column="16">char<pos:position pos:line="238" pos:column="20"/></name><operator pos:line="238" pos:column="20">*<pos:position pos:line="238" pos:column="21"/></operator><operator pos:line="238" pos:column="21">)<pos:position pos:line="238" pos:column="22"/></operator><call><name pos:line="238" pos:column="22">malloc<pos:position pos:line="238" pos:column="28"/></name><argument_list pos:line="238" pos:column="28">(<argument><expr><call><name pos:line="238" pos:column="29">strlen<pos:position pos:line="238" pos:column="35"/></name><argument_list pos:line="238" pos:column="35">(<argument><expr><name pos:line="238" pos:column="36">foo<pos:position pos:line="238" pos:column="39"/></name></expr></argument>)<pos:position pos:line="238" pos:column="40"/></argument_list></call><operator pos:line="238" pos:column="40">+<pos:position pos:line="238" pos:column="41"/></operator><call><name pos:line="238" pos:column="41">strlen<pos:position pos:line="238" pos:column="47"/></name><argument_list pos:line="238" pos:column="47">(<argument><expr><name pos:line="238" pos:column="48">relpath<pos:position pos:line="238" pos:column="55"/></name></expr></argument>)<pos:position pos:line="238" pos:column="56"/></argument_list></call><operator pos:line="238" pos:column="56">+<pos:position pos:line="238" pos:column="57"/></operator><literal type="number" pos:line="238" pos:column="57">2<pos:position pos:line="238" pos:column="58"/></literal></expr></argument>)<pos:position pos:line="238" pos:column="59"/></argument_list></call></expr>;<pos:position pos:line="238" pos:column="60"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="239" pos:column="5">strcat<pos:position pos:line="239" pos:column="11"/></name><argument_list pos:line="239" pos:column="11">(<argument><expr><name pos:line="239" pos:column="12">newpath<pos:position pos:line="239" pos:column="19"/></name></expr></argument>, <argument><expr><name pos:line="239" pos:column="21">foo<pos:position pos:line="239" pos:column="24"/></name></expr></argument>)<pos:position pos:line="239" pos:column="25"/></argument_list></call></expr>;<pos:position pos:line="239" pos:column="26"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="240" pos:column="5">strcat<pos:position pos:line="240" pos:column="11"/></name><argument_list pos:line="240" pos:column="11">(<argument><expr><name pos:line="240" pos:column="12">newpath<pos:position pos:line="240" pos:column="19"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="240" pos:column="21">"/"<pos:position pos:line="240" pos:column="24"/></literal></expr></argument>)<pos:position pos:line="240" pos:column="25"/></argument_list></call></expr>;<pos:position pos:line="240" pos:column="26"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="241" pos:column="5">strcat<pos:position pos:line="241" pos:column="11"/></name><argument_list pos:line="241" pos:column="11">(<argument><expr><name pos:line="241" pos:column="12">newpath<pos:position pos:line="241" pos:column="19"/></name></expr></argument>, <argument><expr><name pos:line="241" pos:column="21">relpath<pos:position pos:line="241" pos:column="28"/></name></expr></argument>)<pos:position pos:line="241" pos:column="29"/></argument_list></call></expr>;<pos:position pos:line="241" pos:column="30"/></expr_stmt>
    <return pos:line="242" pos:column="5">return <expr><name pos:line="242" pos:column="12">newpath<pos:position pos:line="242" pos:column="19"/></name></expr>;<pos:position pos:line="242" pos:column="20"/></return>
}<pos:position pos:line="243" pos:column="2"/></block></function>

<function><type><name pos:line="245" pos:column="1">void<pos:position pos:line="245" pos:column="5"/></name></type> <name pos:line="245" pos:column="6">link_fixup<pos:position pos:line="245" pos:column="16"/></name><parameter_list pos:line="245" pos:column="16">(<parameter><decl><type><name pos:line="245" pos:column="17">command_t<pos:position pos:line="245" pos:column="26"/></name> <modifier pos:line="245" pos:column="27">*<pos:position pos:line="245" pos:column="28"/></modifier></type><name pos:line="245" pos:column="28">c<pos:position pos:line="245" pos:column="29"/></name></decl></parameter>)<pos:position pos:line="245" pos:column="30"/></parameter_list>
<block pos:line="246" pos:column="1">{
    <comment type="block" pos:line="247" pos:column="5">/* If we were passed an -rpath directive, we need to build
     * shared objects too.  Otherwise, we should only create static
     * libraries.
     */</comment>
    <if pos:line="251" pos:column="5">if <condition pos:line="251" pos:column="8">(<expr><operator pos:line="251" pos:column="9">!<pos:position pos:line="251" pos:column="10"/></operator><name><name pos:line="251" pos:column="10">c<pos:position pos:line="251" pos:column="11"/></name><operator pos:line="251" pos:column="11">-&gt;<pos:position pos:line="251" pos:column="16"/></operator><name pos:line="251" pos:column="13">install_path<pos:position pos:line="251" pos:column="25"/></name></name> <operator pos:line="251" pos:column="26">&amp;&amp;<pos:position pos:line="251" pos:column="36"/></operator> <operator pos:line="251" pos:column="29">(<pos:position pos:line="251" pos:column="30"/></operator><name><name pos:line="251" pos:column="30">c<pos:position pos:line="251" pos:column="31"/></name><operator pos:line="251" pos:column="31">-&gt;<pos:position pos:line="251" pos:column="36"/></operator><name pos:line="251" pos:column="33">output<pos:position pos:line="251" pos:column="39"/></name></name> <operator pos:line="251" pos:column="40">==<pos:position pos:line="251" pos:column="42"/></operator> <name pos:line="251" pos:column="43">otDynamicLibraryOnly<pos:position pos:line="251" pos:column="63"/></name> <operator pos:line="251" pos:column="64">||<pos:position pos:line="251" pos:column="66"/></operator>
        <name><name pos:line="252" pos:column="9">c<pos:position pos:line="252" pos:column="10"/></name><operator pos:line="252" pos:column="10">-&gt;<pos:position pos:line="252" pos:column="15"/></operator><name pos:line="252" pos:column="12">output<pos:position pos:line="252" pos:column="18"/></name></name> <operator pos:line="252" pos:column="19">==<pos:position pos:line="252" pos:column="21"/></operator> <name pos:line="252" pos:column="22">otModule<pos:position pos:line="252" pos:column="30"/></name> <operator pos:line="252" pos:column="31">||<pos:position pos:line="252" pos:column="33"/></operator> <name><name pos:line="252" pos:column="34">c<pos:position pos:line="252" pos:column="35"/></name><operator pos:line="252" pos:column="35">-&gt;<pos:position pos:line="252" pos:column="40"/></operator><name pos:line="252" pos:column="37">output<pos:position pos:line="252" pos:column="43"/></name></name> <operator pos:line="252" pos:column="44">==<pos:position pos:line="252" pos:column="46"/></operator> <name pos:line="252" pos:column="47">otLibrary<pos:position pos:line="252" pos:column="56"/></name><operator pos:line="252" pos:column="56">)<pos:position pos:line="252" pos:column="57"/></operator></expr>)<pos:position pos:line="252" pos:column="58"/></condition><then pos:line="252" pos:column="58"> <block pos:line="252" pos:column="59">{
        <expr_stmt><expr><name><name pos:line="253" pos:column="9">c<pos:position pos:line="253" pos:column="10"/></name><operator pos:line="253" pos:column="10">-&gt;<pos:position pos:line="253" pos:column="15"/></operator><name pos:line="253" pos:column="12">output<pos:position pos:line="253" pos:column="18"/></name></name> <operator pos:line="253" pos:column="19">=<pos:position pos:line="253" pos:column="20"/></operator> <name pos:line="253" pos:column="21">otStaticLibraryOnly<pos:position pos:line="253" pos:column="40"/></name></expr>;<pos:position pos:line="253" pos:column="41"/></expr_stmt>
    }<pos:position pos:line="254" pos:column="6"/></block></then></if>

    <if pos:line="256" pos:column="5">if <condition pos:line="256" pos:column="8">(<expr><name><name pos:line="256" pos:column="9">c<pos:position pos:line="256" pos:column="10"/></name><operator pos:line="256" pos:column="10">-&gt;<pos:position pos:line="256" pos:column="15"/></operator><name pos:line="256" pos:column="12">output<pos:position pos:line="256" pos:column="18"/></name></name> <operator pos:line="256" pos:column="19">==<pos:position pos:line="256" pos:column="21"/></operator> <name pos:line="256" pos:column="22">otDynamicLibraryOnly<pos:position pos:line="256" pos:column="42"/></name> <operator pos:line="256" pos:column="43">||<pos:position pos:line="256" pos:column="45"/></operator>
        <name><name pos:line="257" pos:column="9">c<pos:position pos:line="257" pos:column="10"/></name><operator pos:line="257" pos:column="10">-&gt;<pos:position pos:line="257" pos:column="15"/></operator><name pos:line="257" pos:column="12">output<pos:position pos:line="257" pos:column="18"/></name></name> <operator pos:line="257" pos:column="19">==<pos:position pos:line="257" pos:column="21"/></operator> <name pos:line="257" pos:column="22">otModule<pos:position pos:line="257" pos:column="30"/></name> <operator pos:line="257" pos:column="31">||<pos:position pos:line="257" pos:column="33"/></operator>
        <name><name pos:line="258" pos:column="9">c<pos:position pos:line="258" pos:column="10"/></name><operator pos:line="258" pos:column="10">-&gt;<pos:position pos:line="258" pos:column="15"/></operator><name pos:line="258" pos:column="12">output<pos:position pos:line="258" pos:column="18"/></name></name> <operator pos:line="258" pos:column="19">==<pos:position pos:line="258" pos:column="21"/></operator> <name pos:line="258" pos:column="22">otLibrary<pos:position pos:line="258" pos:column="31"/></name></expr>)<pos:position pos:line="258" pos:column="32"/></condition><then pos:line="258" pos:column="32"> <block pos:line="258" pos:column="33">{

        <expr_stmt><expr><call><name pos:line="260" pos:column="9">push_count_chars<pos:position pos:line="260" pos:column="25"/></name><argument_list pos:line="260" pos:column="25">(<argument><expr><name><name pos:line="260" pos:column="26">c<pos:position pos:line="260" pos:column="27"/></name><operator pos:line="260" pos:column="27">-&gt;<pos:position pos:line="260" pos:column="32"/></operator><name pos:line="260" pos:column="29">shared_opts<pos:position pos:line="260" pos:column="40"/></name><operator pos:line="260" pos:column="40">.<pos:position pos:line="260" pos:column="41"/></operator><name pos:line="260" pos:column="41">normal<pos:position pos:line="260" pos:column="47"/></name></name></expr></argument>, <argument><expr><literal type="string" pos:line="260" pos:column="49">"-o"<pos:position pos:line="260" pos:column="53"/></literal></expr></argument>)<pos:position pos:line="260" pos:column="54"/></argument_list></call></expr>;<pos:position pos:line="260" pos:column="55"/></expr_stmt>
        <if pos:line="261" pos:column="9">if <condition pos:line="261" pos:column="12">(<expr><name><name pos:line="261" pos:column="13">c<pos:position pos:line="261" pos:column="14"/></name><operator pos:line="261" pos:column="14">-&gt;<pos:position pos:line="261" pos:column="19"/></operator><name pos:line="261" pos:column="16">output<pos:position pos:line="261" pos:column="22"/></name></name> <operator pos:line="261" pos:column="23">==<pos:position pos:line="261" pos:column="25"/></operator> <name pos:line="261" pos:column="26">otModule<pos:position pos:line="261" pos:column="34"/></name></expr>)<pos:position pos:line="261" pos:column="35"/></condition><then pos:line="261" pos:column="35"> <block pos:line="261" pos:column="36">{
            <expr_stmt><expr><call><name pos:line="262" pos:column="13">push_count_chars<pos:position pos:line="262" pos:column="29"/></name><argument_list pos:line="262" pos:column="29">(<argument><expr><name><name pos:line="262" pos:column="30">c<pos:position pos:line="262" pos:column="31"/></name><operator pos:line="262" pos:column="31">-&gt;<pos:position pos:line="262" pos:column="36"/></operator><name pos:line="262" pos:column="33">shared_opts<pos:position pos:line="262" pos:column="44"/></name><operator pos:line="262" pos:column="44">.<pos:position pos:line="262" pos:column="45"/></operator><name pos:line="262" pos:column="45">normal<pos:position pos:line="262" pos:column="51"/></name></name></expr></argument>, <argument><expr><name><name pos:line="262" pos:column="53">c<pos:position pos:line="262" pos:column="54"/></name><operator pos:line="262" pos:column="54">-&gt;<pos:position pos:line="262" pos:column="59"/></operator><name pos:line="262" pos:column="56">module_name<pos:position pos:line="262" pos:column="67"/></name><operator pos:line="262" pos:column="67">.<pos:position pos:line="262" pos:column="68"/></operator><name pos:line="262" pos:column="68">normal<pos:position pos:line="262" pos:column="74"/></name></name></expr></argument>)<pos:position pos:line="262" pos:column="75"/></argument_list></call></expr>;<pos:position pos:line="262" pos:column="76"/></expr_stmt>
        }<pos:position pos:line="263" pos:column="10"/></block></then>
        <else pos:line="264" pos:column="9">else <block pos:line="264" pos:column="14">{
            <decl_stmt><decl><type><name pos:line="265" pos:column="13">char<pos:position pos:line="265" pos:column="17"/></name> <modifier pos:line="265" pos:column="18">*<pos:position pos:line="265" pos:column="19"/></modifier></type><name pos:line="265" pos:column="19">tmp<pos:position pos:line="265" pos:column="22"/></name></decl>;<pos:position pos:line="265" pos:column="23"/></decl_stmt>
            <expr_stmt><expr><call><name pos:line="266" pos:column="13">push_count_chars<pos:position pos:line="266" pos:column="29"/></name><argument_list pos:line="266" pos:column="29">(<argument><expr><name><name pos:line="266" pos:column="30">c<pos:position pos:line="266" pos:column="31"/></name><operator pos:line="266" pos:column="31">-&gt;<pos:position pos:line="266" pos:column="36"/></operator><name pos:line="266" pos:column="33">shared_opts<pos:position pos:line="266" pos:column="44"/></name><operator pos:line="266" pos:column="44">.<pos:position pos:line="266" pos:column="45"/></operator><name pos:line="266" pos:column="45">normal<pos:position pos:line="266" pos:column="51"/></name></name></expr></argument>, <argument><expr><name><name pos:line="266" pos:column="53">c<pos:position pos:line="266" pos:column="54"/></name><operator pos:line="266" pos:column="54">-&gt;<pos:position pos:line="266" pos:column="59"/></operator><name pos:line="266" pos:column="56">shared_name<pos:position pos:line="266" pos:column="67"/></name><operator pos:line="266" pos:column="67">.<pos:position pos:line="266" pos:column="68"/></operator><name pos:line="266" pos:column="68">normal<pos:position pos:line="266" pos:column="74"/></name></name></expr></argument>)<pos:position pos:line="266" pos:column="75"/></argument_list></call></expr>;<pos:position pos:line="266" pos:column="76"/></expr_stmt>
<cpp:ifdef pos:line="267" pos:column="1">#<cpp:directive pos:line="267" pos:column="2">ifdef<pos:position pos:line="267" pos:column="7"/></cpp:directive> <name pos:line="267" pos:column="8">DYNAMIC_INSTALL_NAME<pos:position pos:line="267" pos:column="28"/></name></cpp:ifdef>
            <expr_stmt><expr><call><name pos:line="268" pos:column="13">push_count_chars<pos:position pos:line="268" pos:column="29"/></name><argument_list pos:line="268" pos:column="29">(<argument><expr><name><name pos:line="268" pos:column="30">c<pos:position pos:line="268" pos:column="31"/></name><operator pos:line="268" pos:column="31">-&gt;<pos:position pos:line="268" pos:column="36"/></operator><name pos:line="268" pos:column="33">shared_opts<pos:position pos:line="268" pos:column="44"/></name><operator pos:line="268" pos:column="44">.<pos:position pos:line="268" pos:column="45"/></operator><name pos:line="268" pos:column="45">normal<pos:position pos:line="268" pos:column="51"/></name></name></expr></argument>, <argument><expr><name pos:line="268" pos:column="53">DYNAMIC_INSTALL_NAME<pos:position pos:line="268" pos:column="73"/></name></expr></argument>)<pos:position pos:line="268" pos:column="74"/></argument_list></call></expr>;<pos:position pos:line="268" pos:column="75"/></expr_stmt>

            <expr_stmt><expr><name pos:line="270" pos:column="13">tmp<pos:position pos:line="270" pos:column="16"/></name> <operator pos:line="270" pos:column="17">=<pos:position pos:line="270" pos:column="18"/></operator> <operator pos:line="270" pos:column="19">(<pos:position pos:line="270" pos:column="20"/></operator><name pos:line="270" pos:column="20">char<pos:position pos:line="270" pos:column="24"/></name><operator pos:line="270" pos:column="24">*<pos:position pos:line="270" pos:column="25"/></operator><operator pos:line="270" pos:column="25">)<pos:position pos:line="270" pos:column="26"/></operator><call><name pos:line="270" pos:column="26">malloc<pos:position pos:line="270" pos:column="32"/></name><argument_list pos:line="270" pos:column="32">(<argument><expr><name pos:line="270" pos:column="33">PATH_MAX<pos:position pos:line="270" pos:column="41"/></name></expr></argument>)<pos:position pos:line="270" pos:column="42"/></argument_list></call></expr>;<pos:position pos:line="270" pos:column="43"/></expr_stmt>
            <expr_stmt><expr><call><name pos:line="271" pos:column="13">strcat<pos:position pos:line="271" pos:column="19"/></name><argument_list pos:line="271" pos:column="19">(<argument><expr><name pos:line="271" pos:column="20">tmp<pos:position pos:line="271" pos:column="23"/></name></expr></argument>, <argument><expr><name><name pos:line="271" pos:column="25">c<pos:position pos:line="271" pos:column="26"/></name><operator pos:line="271" pos:column="26">-&gt;<pos:position pos:line="271" pos:column="31"/></operator><name pos:line="271" pos:column="28">install_path<pos:position pos:line="271" pos:column="40"/></name></name></expr></argument>)<pos:position pos:line="271" pos:column="41"/></argument_list></call></expr>;<pos:position pos:line="271" pos:column="42"/></expr_stmt>
            <expr_stmt><expr><call><name pos:line="272" pos:column="13">strcat<pos:position pos:line="272" pos:column="19"/></name><argument_list pos:line="272" pos:column="19">(<argument><expr><name pos:line="272" pos:column="20">tmp<pos:position pos:line="272" pos:column="23"/></name></expr></argument>, <argument><expr><call><name pos:line="272" pos:column="25">strrchr<pos:position pos:line="272" pos:column="32"/></name><argument_list pos:line="272" pos:column="32">(<argument><expr><name><name pos:line="272" pos:column="33">c<pos:position pos:line="272" pos:column="34"/></name><operator pos:line="272" pos:column="34">-&gt;<pos:position pos:line="272" pos:column="39"/></operator><name pos:line="272" pos:column="36">shared_name<pos:position pos:line="272" pos:column="47"/></name><operator pos:line="272" pos:column="47">.<pos:position pos:line="272" pos:column="48"/></operator><name pos:line="272" pos:column="48">normal<pos:position pos:line="272" pos:column="54"/></name></name></expr></argument>, <argument><expr><literal type="char" pos:line="272" pos:column="56">'/'<pos:position pos:line="272" pos:column="59"/></literal></expr></argument>)<pos:position pos:line="272" pos:column="60"/></argument_list></call></expr></argument>)<pos:position pos:line="272" pos:column="61"/></argument_list></call></expr>;<pos:position pos:line="272" pos:column="62"/></expr_stmt>
            <expr_stmt><expr><call><name pos:line="273" pos:column="13">push_count_chars<pos:position pos:line="273" pos:column="29"/></name><argument_list pos:line="273" pos:column="29">(<argument><expr><name><name pos:line="273" pos:column="30">c<pos:position pos:line="273" pos:column="31"/></name><operator pos:line="273" pos:column="31">-&gt;<pos:position pos:line="273" pos:column="36"/></operator><name pos:line="273" pos:column="33">shared_opts<pos:position pos:line="273" pos:column="44"/></name><operator pos:line="273" pos:column="44">.<pos:position pos:line="273" pos:column="45"/></operator><name pos:line="273" pos:column="45">normal<pos:position pos:line="273" pos:column="51"/></name></name></expr></argument>, <argument><expr><name pos:line="273" pos:column="53">tmp<pos:position pos:line="273" pos:column="56"/></name></expr></argument>)<pos:position pos:line="273" pos:column="57"/></argument_list></call></expr>;<pos:position pos:line="273" pos:column="58"/></expr_stmt>
<cpp:endif pos:line="274" pos:column="1">#<cpp:directive pos:line="274" pos:column="2">endif<pos:position pos:line="274" pos:column="7"/></cpp:directive></cpp:endif>
        }<pos:position pos:line="275" pos:column="10"/></block></else></if>

        <expr_stmt><expr><call><name pos:line="277" pos:column="9">append_count_chars<pos:position pos:line="277" pos:column="27"/></name><argument_list pos:line="277" pos:column="27">(<argument><expr><name><name pos:line="277" pos:column="28">c<pos:position pos:line="277" pos:column="29"/></name><operator pos:line="277" pos:column="29">-&gt;<pos:position pos:line="277" pos:column="34"/></operator><name pos:line="277" pos:column="31">shared_opts<pos:position pos:line="277" pos:column="42"/></name><operator pos:line="277" pos:column="42">.<pos:position pos:line="277" pos:column="43"/></operator><name pos:line="277" pos:column="43">normal<pos:position pos:line="277" pos:column="49"/></name></name></expr></argument>, <argument><expr><name><name pos:line="277" pos:column="51">c<pos:position pos:line="277" pos:column="52"/></name><operator pos:line="277" pos:column="52">-&gt;<pos:position pos:line="277" pos:column="57"/></operator><name pos:line="277" pos:column="54">obj_files<pos:position pos:line="277" pos:column="63"/></name></name></expr></argument>)<pos:position pos:line="277" pos:column="64"/></argument_list></call></expr>;<pos:position pos:line="277" pos:column="65"/></expr_stmt>
        <expr_stmt><expr><call><name pos:line="278" pos:column="9">append_count_chars<pos:position pos:line="278" pos:column="27"/></name><argument_list pos:line="278" pos:column="27">(<argument><expr><name><name pos:line="278" pos:column="28">c<pos:position pos:line="278" pos:column="29"/></name><operator pos:line="278" pos:column="29">-&gt;<pos:position pos:line="278" pos:column="34"/></operator><name pos:line="278" pos:column="31">shared_opts<pos:position pos:line="278" pos:column="42"/></name><operator pos:line="278" pos:column="42">.<pos:position pos:line="278" pos:column="43"/></operator><name pos:line="278" pos:column="43">normal<pos:position pos:line="278" pos:column="49"/></name></name></expr></argument>, <argument><expr><name><name pos:line="278" pos:column="51">c<pos:position pos:line="278" pos:column="52"/></name><operator pos:line="278" pos:column="52">-&gt;<pos:position pos:line="278" pos:column="57"/></operator><name pos:line="278" pos:column="54">shared_opts<pos:position pos:line="278" pos:column="65"/></name><operator pos:line="278" pos:column="65">.<pos:position pos:line="278" pos:column="66"/></operator><name pos:line="278" pos:column="66">dependencies<pos:position pos:line="278" pos:column="78"/></name></name></expr></argument>)<pos:position pos:line="278" pos:column="79"/></argument_list></call></expr>;<pos:position pos:line="278" pos:column="80"/></expr_stmt>

        <if pos:line="280" pos:column="9">if <condition pos:line="280" pos:column="12">(<expr><name><name pos:line="280" pos:column="13">c<pos:position pos:line="280" pos:column="14"/></name><operator pos:line="280" pos:column="14">-&gt;<pos:position pos:line="280" pos:column="19"/></operator><name pos:line="280" pos:column="16">options<pos:position pos:line="280" pos:column="23"/></name><operator pos:line="280" pos:column="23">.<pos:position pos:line="280" pos:column="24"/></operator><name pos:line="280" pos:column="24">export_all<pos:position pos:line="280" pos:column="34"/></name></name></expr>)<pos:position pos:line="280" pos:column="35"/></condition><then pos:line="280" pos:column="35"> <block pos:line="280" pos:column="36">{
<cpp:ifdef pos:line="281" pos:column="1">#<cpp:directive pos:line="281" pos:column="2">ifdef<pos:position pos:line="281" pos:column="7"/></cpp:directive> <name pos:line="281" pos:column="8">GEN_EXPORTS<pos:position pos:line="281" pos:column="19"/></name></cpp:ifdef>
            <expr_stmt><expr><call><name pos:line="282" pos:column="13">generate_def_file<pos:position pos:line="282" pos:column="30"/></name><argument_list pos:line="282" pos:column="30">(<argument><expr><name pos:line="282" pos:column="31">c<pos:position pos:line="282" pos:column="32"/></name></expr></argument>)<pos:position pos:line="282" pos:column="33"/></argument_list></call></expr>;<pos:position pos:line="282" pos:column="34"/></expr_stmt>
<cpp:endif pos:line="283" pos:column="1">#<cpp:directive pos:line="283" pos:column="2">endif<pos:position pos:line="283" pos:column="7"/></cpp:directive></cpp:endif>
        }<pos:position pos:line="284" pos:column="10"/></block></then></if>
    }<pos:position pos:line="285" pos:column="6"/></block></then></if>

    <if pos:line="287" pos:column="5">if <condition pos:line="287" pos:column="8">(<expr><name><name pos:line="287" pos:column="9">c<pos:position pos:line="287" pos:column="10"/></name><operator pos:line="287" pos:column="10">-&gt;<pos:position pos:line="287" pos:column="15"/></operator><name pos:line="287" pos:column="12">output<pos:position pos:line="287" pos:column="18"/></name></name> <operator pos:line="287" pos:column="19">==<pos:position pos:line="287" pos:column="21"/></operator> <name pos:line="287" pos:column="22">otLibrary<pos:position pos:line="287" pos:column="31"/></name> <operator pos:line="287" pos:column="32">||<pos:position pos:line="287" pos:column="34"/></operator> <name><name pos:line="287" pos:column="35">c<pos:position pos:line="287" pos:column="36"/></name><operator pos:line="287" pos:column="36">-&gt;<pos:position pos:line="287" pos:column="41"/></operator><name pos:line="287" pos:column="38">output<pos:position pos:line="287" pos:column="44"/></name></name> <operator pos:line="287" pos:column="45">==<pos:position pos:line="287" pos:column="47"/></operator> <name pos:line="287" pos:column="48">otStaticLibraryOnly<pos:position pos:line="287" pos:column="67"/></name></expr>)<pos:position pos:line="287" pos:column="68"/></condition><then pos:line="287" pos:column="68"> <block pos:line="287" pos:column="69">{
        <expr_stmt><expr><call><name pos:line="288" pos:column="9">push_count_chars<pos:position pos:line="288" pos:column="25"/></name><argument_list pos:line="288" pos:column="25">(<argument><expr><name><name pos:line="288" pos:column="26">c<pos:position pos:line="288" pos:column="27"/></name><operator pos:line="288" pos:column="27">-&gt;<pos:position pos:line="288" pos:column="32"/></operator><name pos:line="288" pos:column="29">static_opts<pos:position pos:line="288" pos:column="40"/></name><operator pos:line="288" pos:column="40">.<pos:position pos:line="288" pos:column="41"/></operator><name pos:line="288" pos:column="41">normal<pos:position pos:line="288" pos:column="47"/></name></name></expr></argument>, <argument><expr><literal type="string" pos:line="288" pos:column="49">"-o"<pos:position pos:line="288" pos:column="53"/></literal></expr></argument>)<pos:position pos:line="288" pos:column="54"/></argument_list></call></expr>;<pos:position pos:line="288" pos:column="55"/></expr_stmt>
        <expr_stmt><expr><call><name pos:line="289" pos:column="9">push_count_chars<pos:position pos:line="289" pos:column="25"/></name><argument_list pos:line="289" pos:column="25">(<argument><expr><name><name pos:line="289" pos:column="26">c<pos:position pos:line="289" pos:column="27"/></name><operator pos:line="289" pos:column="27">-&gt;<pos:position pos:line="289" pos:column="32"/></operator><name pos:line="289" pos:column="29">static_opts<pos:position pos:line="289" pos:column="40"/></name><operator pos:line="289" pos:column="40">.<pos:position pos:line="289" pos:column="41"/></operator><name pos:line="289" pos:column="41">normal<pos:position pos:line="289" pos:column="47"/></name></name></expr></argument>, <argument><expr><name><name pos:line="289" pos:column="49">c<pos:position pos:line="289" pos:column="50"/></name><operator pos:line="289" pos:column="50">-&gt;<pos:position pos:line="289" pos:column="55"/></operator><name pos:line="289" pos:column="52">output_name<pos:position pos:line="289" pos:column="63"/></name></name></expr></argument>)<pos:position pos:line="289" pos:column="64"/></argument_list></call></expr>;<pos:position pos:line="289" pos:column="65"/></expr_stmt>
    }<pos:position pos:line="290" pos:column="6"/></block></then></if>

    <if pos:line="292" pos:column="5">if <condition pos:line="292" pos:column="8">(<expr><name><name pos:line="292" pos:column="9">c<pos:position pos:line="292" pos:column="10"/></name><operator pos:line="292" pos:column="10">-&gt;<pos:position pos:line="292" pos:column="15"/></operator><name pos:line="292" pos:column="12">output<pos:position pos:line="292" pos:column="18"/></name></name> <operator pos:line="292" pos:column="19">==<pos:position pos:line="292" pos:column="21"/></operator> <name pos:line="292" pos:column="22">otProgram<pos:position pos:line="292" pos:column="31"/></name></expr>)<pos:position pos:line="292" pos:column="32"/></condition><then pos:line="292" pos:column="32"> <block pos:line="292" pos:column="33">{
        <if pos:line="293" pos:column="9">if <condition pos:line="293" pos:column="12">(<expr><name><name pos:line="293" pos:column="13">c<pos:position pos:line="293" pos:column="14"/></name><operator pos:line="293" pos:column="14">-&gt;<pos:position pos:line="293" pos:column="19"/></operator><name pos:line="293" pos:column="16">output_name<pos:position pos:line="293" pos:column="27"/></name></name></expr>)<pos:position pos:line="293" pos:column="28"/></condition><then pos:line="293" pos:column="28"> <block pos:line="293" pos:column="29">{
            <expr_stmt><expr><call><name pos:line="294" pos:column="13">push_count_chars<pos:position pos:line="294" pos:column="29"/></name><argument_list pos:line="294" pos:column="29">(<argument><expr><name><name pos:line="294" pos:column="30">c<pos:position pos:line="294" pos:column="31"/></name><operator pos:line="294" pos:column="31">-&gt;<pos:position pos:line="294" pos:column="36"/></operator><name pos:line="294" pos:column="33">arglist<pos:position pos:line="294" pos:column="40"/></name></name></expr></argument>, <argument><expr><literal type="string" pos:line="294" pos:column="42">"-o"<pos:position pos:line="294" pos:column="46"/></literal></expr></argument>)<pos:position pos:line="294" pos:column="47"/></argument_list></call></expr>;<pos:position pos:line="294" pos:column="48"/></expr_stmt>
            <expr_stmt><expr><call><name pos:line="295" pos:column="13">push_count_chars<pos:position pos:line="295" pos:column="29"/></name><argument_list pos:line="295" pos:column="29">(<argument><expr><name><name pos:line="295" pos:column="30">c<pos:position pos:line="295" pos:column="31"/></name><operator pos:line="295" pos:column="31">-&gt;<pos:position pos:line="295" pos:column="36"/></operator><name pos:line="295" pos:column="33">arglist<pos:position pos:line="295" pos:column="40"/></name></name></expr></argument>, <argument><expr><name><name pos:line="295" pos:column="42">c<pos:position pos:line="295" pos:column="43"/></name><operator pos:line="295" pos:column="43">-&gt;<pos:position pos:line="295" pos:column="48"/></operator><name pos:line="295" pos:column="45">output_name<pos:position pos:line="295" pos:column="56"/></name></name></expr></argument>)<pos:position pos:line="295" pos:column="57"/></argument_list></call></expr>;<pos:position pos:line="295" pos:column="58"/></expr_stmt>
            <expr_stmt><expr><call><name pos:line="296" pos:column="13">append_count_chars<pos:position pos:line="296" pos:column="31"/></name><argument_list pos:line="296" pos:column="31">(<argument><expr><name><name pos:line="296" pos:column="32">c<pos:position pos:line="296" pos:column="33"/></name><operator pos:line="296" pos:column="33">-&gt;<pos:position pos:line="296" pos:column="38"/></operator><name pos:line="296" pos:column="35">arglist<pos:position pos:line="296" pos:column="42"/></name></name></expr></argument>, <argument><expr><name><name pos:line="296" pos:column="44">c<pos:position pos:line="296" pos:column="45"/></name><operator pos:line="296" pos:column="45">-&gt;<pos:position pos:line="296" pos:column="50"/></operator><name pos:line="296" pos:column="47">obj_files<pos:position pos:line="296" pos:column="56"/></name></name></expr></argument>)<pos:position pos:line="296" pos:column="57"/></argument_list></call></expr>;<pos:position pos:line="296" pos:column="58"/></expr_stmt>
            <expr_stmt><expr><call><name pos:line="297" pos:column="13">append_count_chars<pos:position pos:line="297" pos:column="31"/></name><argument_list pos:line="297" pos:column="31">(<argument><expr><name><name pos:line="297" pos:column="32">c<pos:position pos:line="297" pos:column="33"/></name><operator pos:line="297" pos:column="33">-&gt;<pos:position pos:line="297" pos:column="38"/></operator><name pos:line="297" pos:column="35">arglist<pos:position pos:line="297" pos:column="42"/></name></name></expr></argument>, <argument><expr><name><name pos:line="297" pos:column="44">c<pos:position pos:line="297" pos:column="45"/></name><operator pos:line="297" pos:column="45">-&gt;<pos:position pos:line="297" pos:column="50"/></operator><name pos:line="297" pos:column="47">shared_opts<pos:position pos:line="297" pos:column="58"/></name><operator pos:line="297" pos:column="58">.<pos:position pos:line="297" pos:column="59"/></operator><name pos:line="297" pos:column="59">dependencies<pos:position pos:line="297" pos:column="71"/></name></name></expr></argument>)<pos:position pos:line="297" pos:column="72"/></argument_list></call></expr>;<pos:position pos:line="297" pos:column="73"/></expr_stmt>
            <expr_stmt><expr><call><name pos:line="298" pos:column="13">add_dynamic_link_opts<pos:position pos:line="298" pos:column="34"/></name><argument_list pos:line="298" pos:column="34">(<argument><expr><name pos:line="298" pos:column="35">c<pos:position pos:line="298" pos:column="36"/></name></expr></argument>, <argument><expr><name><name pos:line="298" pos:column="38">c<pos:position pos:line="298" pos:column="39"/></name><operator pos:line="298" pos:column="39">-&gt;<pos:position pos:line="298" pos:column="44"/></operator><name pos:line="298" pos:column="41">arglist<pos:position pos:line="298" pos:column="48"/></name></name></expr></argument>)<pos:position pos:line="298" pos:column="49"/></argument_list></call></expr>;<pos:position pos:line="298" pos:column="50"/></expr_stmt>
        }<pos:position pos:line="299" pos:column="10"/></block></then></if>
    }<pos:position pos:line="300" pos:column="6"/></block></then></if>
}<pos:position pos:line="301" pos:column="2"/></block></function>

<function><type><name pos:line="303" pos:column="1">void<pos:position pos:line="303" pos:column="5"/></name></type> <name pos:line="303" pos:column="6">post_parse_fixup<pos:position pos:line="303" pos:column="22"/></name><parameter_list pos:line="303" pos:column="22">(<parameter><decl><type><name pos:line="303" pos:column="23">command_t<pos:position pos:line="303" pos:column="32"/></name> <modifier pos:line="303" pos:column="33">*<pos:position pos:line="303" pos:column="34"/></modifier></type><name pos:line="303" pos:column="34">cmd_data<pos:position pos:line="303" pos:column="42"/></name></decl></parameter>)<pos:position pos:line="303" pos:column="43"/></parameter_list>
<block pos:line="304" pos:column="1">{
    <switch pos:line="305" pos:column="5">switch <condition pos:line="305" pos:column="12">(<expr><name><name pos:line="305" pos:column="13">cmd_data<pos:position pos:line="305" pos:column="21"/></name><operator pos:line="305" pos:column="21">-&gt;<pos:position pos:line="305" pos:column="26"/></operator><name pos:line="305" pos:column="23">mode<pos:position pos:line="305" pos:column="27"/></name></name></expr>)<pos:position pos:line="305" pos:column="28"/></condition>
    <block pos:line="306" pos:column="5">{
    <case pos:line="307" pos:column="5">case <expr><name pos:line="307" pos:column="10">mCompile<pos:position pos:line="307" pos:column="18"/></name></expr>:<pos:position pos:line="307" pos:column="19"/></case>
<cpp:ifdef pos:line="308" pos:column="1">#<cpp:directive pos:line="308" pos:column="2">ifdef<pos:position pos:line="308" pos:column="7"/></cpp:directive> <name pos:line="308" pos:column="8">PIC_FLAG<pos:position pos:line="308" pos:column="16"/></name></cpp:ifdef>
        <if pos:line="309" pos:column="9">if <condition pos:line="309" pos:column="12">(<expr><name><name pos:line="309" pos:column="13">cmd_data<pos:position pos:line="309" pos:column="21"/></name><operator pos:line="309" pos:column="21">-&gt;<pos:position pos:line="309" pos:column="26"/></operator><name pos:line="309" pos:column="23">options<pos:position pos:line="309" pos:column="30"/></name><operator pos:line="309" pos:column="30">.<pos:position pos:line="309" pos:column="31"/></operator><name pos:line="309" pos:column="31">pic_mode<pos:position pos:line="309" pos:column="39"/></name></name> <operator pos:line="309" pos:column="40">!=<pos:position pos:line="309" pos:column="42"/></operator> <name pos:line="309" pos:column="43">pic_AVOID<pos:position pos:line="309" pos:column="52"/></name></expr>)<pos:position pos:line="309" pos:column="53"/></condition><then pos:line="309" pos:column="53"> <block pos:line="309" pos:column="54">{
            <expr_stmt><expr><call><name pos:line="310" pos:column="13">push_count_chars<pos:position pos:line="310" pos:column="29"/></name><argument_list pos:line="310" pos:column="29">(<argument><expr><name><name pos:line="310" pos:column="30">cmd_data<pos:position pos:line="310" pos:column="38"/></name><operator pos:line="310" pos:column="38">-&gt;<pos:position pos:line="310" pos:column="43"/></operator><name pos:line="310" pos:column="40">arglist<pos:position pos:line="310" pos:column="47"/></name></name></expr></argument>, <argument><expr><name pos:line="310" pos:column="49">PIC_FLAG<pos:position pos:line="310" pos:column="57"/></name></expr></argument>)<pos:position pos:line="310" pos:column="58"/></argument_list></call></expr>;<pos:position pos:line="310" pos:column="59"/></expr_stmt>
        }<pos:position pos:line="311" pos:column="10"/></block></then></if>
<cpp:endif pos:line="312" pos:column="1">#<cpp:directive pos:line="312" pos:column="2">endif<pos:position pos:line="312" pos:column="7"/></cpp:directive></cpp:endif>
        <if pos:line="313" pos:column="9">if <condition pos:line="313" pos:column="12">(<expr><name><name pos:line="313" pos:column="13">cmd_data<pos:position pos:line="313" pos:column="21"/></name><operator pos:line="313" pos:column="21">-&gt;<pos:position pos:line="313" pos:column="26"/></operator><name pos:line="313" pos:column="23">output_name<pos:position pos:line="313" pos:column="34"/></name></name></expr>)<pos:position pos:line="313" pos:column="35"/></condition><then pos:line="313" pos:column="35"> <block pos:line="313" pos:column="36">{
            <expr_stmt><expr><call><name pos:line="314" pos:column="13">push_count_chars<pos:position pos:line="314" pos:column="29"/></name><argument_list pos:line="314" pos:column="29">(<argument><expr><name><name pos:line="314" pos:column="30">cmd_data<pos:position pos:line="314" pos:column="38"/></name><operator pos:line="314" pos:column="38">-&gt;<pos:position pos:line="314" pos:column="43"/></operator><name pos:line="314" pos:column="40">arglist<pos:position pos:line="314" pos:column="47"/></name></name></expr></argument>, <argument><expr><literal type="string" pos:line="314" pos:column="49">"-o"<pos:position pos:line="314" pos:column="53"/></literal></expr></argument>)<pos:position pos:line="314" pos:column="54"/></argument_list></call></expr>;<pos:position pos:line="314" pos:column="55"/></expr_stmt>
            <expr_stmt><expr><call><name pos:line="315" pos:column="13">push_count_chars<pos:position pos:line="315" pos:column="29"/></name><argument_list pos:line="315" pos:column="29">(<argument><expr><name><name pos:line="315" pos:column="30">cmd_data<pos:position pos:line="315" pos:column="38"/></name><operator pos:line="315" pos:column="38">-&gt;<pos:position pos:line="315" pos:column="43"/></operator><name pos:line="315" pos:column="40">arglist<pos:position pos:line="315" pos:column="47"/></name></name></expr></argument>, <argument><expr><name><name pos:line="315" pos:column="49">cmd_data<pos:position pos:line="315" pos:column="57"/></name><operator pos:line="315" pos:column="57">-&gt;<pos:position pos:line="315" pos:column="62"/></operator><name pos:line="315" pos:column="59">output_name<pos:position pos:line="315" pos:column="70"/></name></name></expr></argument>)<pos:position pos:line="315" pos:column="71"/></argument_list></call></expr>;<pos:position pos:line="315" pos:column="72"/></expr_stmt>
        }<pos:position pos:line="316" pos:column="10"/></block></then></if>
        <break pos:line="317" pos:column="9">break;<pos:position pos:line="317" pos:column="15"/></break>
    <case pos:line="318" pos:column="5">case <expr><name pos:line="318" pos:column="10">mLink<pos:position pos:line="318" pos:column="15"/></name></expr>:<pos:position pos:line="318" pos:column="16"/></case>
        <expr_stmt><expr><call><name pos:line="319" pos:column="9">link_fixup<pos:position pos:line="319" pos:column="19"/></name><argument_list pos:line="319" pos:column="19">(<argument><expr><name pos:line="319" pos:column="20">cmd_data<pos:position pos:line="319" pos:column="28"/></name></expr></argument>)<pos:position pos:line="319" pos:column="29"/></argument_list></call></expr>;<pos:position pos:line="319" pos:column="30"/></expr_stmt>
        <break pos:line="320" pos:column="9">break;<pos:position pos:line="320" pos:column="15"/></break>
    <case pos:line="321" pos:column="5">case <expr><name pos:line="321" pos:column="10">mInstall<pos:position pos:line="321" pos:column="18"/></name></expr>:<pos:position pos:line="321" pos:column="19"/></case>
        <if pos:line="322" pos:column="9">if <condition pos:line="322" pos:column="12">(<expr><name><name pos:line="322" pos:column="13">cmd_data<pos:position pos:line="322" pos:column="21"/></name><operator pos:line="322" pos:column="21">-&gt;<pos:position pos:line="322" pos:column="26"/></operator><name pos:line="322" pos:column="23">output<pos:position pos:line="322" pos:column="29"/></name></name> <operator pos:line="322" pos:column="30">==<pos:position pos:line="322" pos:column="32"/></operator> <name pos:line="322" pos:column="33">otLibrary<pos:position pos:line="322" pos:column="42"/></name></expr>)<pos:position pos:line="322" pos:column="43"/></condition><then pos:line="322" pos:column="43"> <block pos:line="322" pos:column="44">{
            <expr_stmt><expr><call><name pos:line="323" pos:column="13">link_fixup<pos:position pos:line="323" pos:column="23"/></name><argument_list pos:line="323" pos:column="23">(<argument><expr><name pos:line="323" pos:column="24">cmd_data<pos:position pos:line="323" pos:column="32"/></name></expr></argument>)<pos:position pos:line="323" pos:column="33"/></argument_list></call></expr>;<pos:position pos:line="323" pos:column="34"/></expr_stmt>
        }<pos:position pos:line="324" pos:column="10"/></block></then></if>
    <default pos:line="325" pos:column="5">default:<pos:position pos:line="325" pos:column="13"/></default>
        <break pos:line="326" pos:column="9">break;<pos:position pos:line="326" pos:column="15"/></break>
    }<pos:position pos:line="327" pos:column="6"/></block></switch>

<cpp:if pos:line="329" pos:column="1">#<cpp:directive pos:line="329" pos:column="2">if<pos:position pos:line="329" pos:column="4"/></cpp:directive> <expr><name pos:line="329" pos:column="5">USE_OMF<pos:position pos:line="329" pos:column="12"/></name></expr></cpp:if>
    <if pos:line="330" pos:column="5">if <condition pos:line="330" pos:column="8">(<expr><name><name pos:line="330" pos:column="9">cmd_data<pos:position pos:line="330" pos:column="17"/></name><operator pos:line="330" pos:column="17">-&gt;<pos:position pos:line="330" pos:column="22"/></operator><name pos:line="330" pos:column="19">output<pos:position pos:line="330" pos:column="25"/></name></name> <operator pos:line="330" pos:column="26">==<pos:position pos:line="330" pos:column="28"/></operator> <name pos:line="330" pos:column="29">otObject<pos:position pos:line="330" pos:column="37"/></name> <operator pos:line="330" pos:column="38">||<pos:position pos:line="330" pos:column="40"/></operator>
        <name><name pos:line="331" pos:column="9">cmd_data<pos:position pos:line="331" pos:column="17"/></name><operator pos:line="331" pos:column="17">-&gt;<pos:position pos:line="331" pos:column="22"/></operator><name pos:line="331" pos:column="19">output<pos:position pos:line="331" pos:column="25"/></name></name> <operator pos:line="331" pos:column="26">==<pos:position pos:line="331" pos:column="28"/></operator> <name pos:line="331" pos:column="29">otProgram<pos:position pos:line="331" pos:column="38"/></name> <operator pos:line="331" pos:column="39">||<pos:position pos:line="331" pos:column="41"/></operator>
        <name><name pos:line="332" pos:column="9">cmd_data<pos:position pos:line="332" pos:column="17"/></name><operator pos:line="332" pos:column="17">-&gt;<pos:position pos:line="332" pos:column="22"/></operator><name pos:line="332" pos:column="19">output<pos:position pos:line="332" pos:column="25"/></name></name> <operator pos:line="332" pos:column="26">==<pos:position pos:line="332" pos:column="28"/></operator> <name pos:line="332" pos:column="29">otLibrary<pos:position pos:line="332" pos:column="38"/></name> <operator pos:line="332" pos:column="39">||<pos:position pos:line="332" pos:column="41"/></operator>
        <name><name pos:line="333" pos:column="9">cmd_data<pos:position pos:line="333" pos:column="17"/></name><operator pos:line="333" pos:column="17">-&gt;<pos:position pos:line="333" pos:column="22"/></operator><name pos:line="333" pos:column="19">output<pos:position pos:line="333" pos:column="25"/></name></name> <operator pos:line="333" pos:column="26">==<pos:position pos:line="333" pos:column="28"/></operator> <name pos:line="333" pos:column="29">otDynamicLibraryOnly<pos:position pos:line="333" pos:column="49"/></name></expr>)<pos:position pos:line="333" pos:column="50"/></condition><then pos:line="333" pos:column="50"> <block pos:line="333" pos:column="51">{
        <expr_stmt><expr><call><name pos:line="334" pos:column="9">push_count_chars<pos:position pos:line="334" pos:column="25"/></name><argument_list pos:line="334" pos:column="25">(<argument><expr><name><name pos:line="334" pos:column="26">cmd_data<pos:position pos:line="334" pos:column="34"/></name><operator pos:line="334" pos:column="34">-&gt;<pos:position pos:line="334" pos:column="39"/></operator><name pos:line="334" pos:column="36">arglist<pos:position pos:line="334" pos:column="43"/></name></name></expr></argument>, <argument><expr><literal type="string" pos:line="334" pos:column="45">"-Zomf"<pos:position pos:line="334" pos:column="52"/></literal></expr></argument>)<pos:position pos:line="334" pos:column="53"/></argument_list></call></expr>;<pos:position pos:line="334" pos:column="54"/></expr_stmt>
    }<pos:position pos:line="335" pos:column="6"/></block></then></if>
<cpp:endif pos:line="336" pos:column="1">#<cpp:directive pos:line="336" pos:column="2">endif<pos:position pos:line="336" pos:column="7"/></cpp:directive></cpp:endif>

    <if pos:line="338" pos:column="5">if <condition pos:line="338" pos:column="8">(<expr><name><name pos:line="338" pos:column="9">cmd_data<pos:position pos:line="338" pos:column="17"/></name><operator pos:line="338" pos:column="17">-&gt;<pos:position pos:line="338" pos:column="22"/></operator><name pos:line="338" pos:column="19">options<pos:position pos:line="338" pos:column="26"/></name><operator pos:line="338" pos:column="26">.<pos:position pos:line="338" pos:column="27"/></operator><name pos:line="338" pos:column="27">shared<pos:position pos:line="338" pos:column="33"/></name></name> <operator pos:line="338" pos:column="34">&amp;&amp;<pos:position pos:line="338" pos:column="44"/></operator>
            <operator pos:line="339" pos:column="13">(<pos:position pos:line="339" pos:column="14"/></operator><name><name pos:line="339" pos:column="14">cmd_data<pos:position pos:line="339" pos:column="22"/></name><operator pos:line="339" pos:column="22">-&gt;<pos:position pos:line="339" pos:column="27"/></operator><name pos:line="339" pos:column="24">output<pos:position pos:line="339" pos:column="30"/></name></name> <operator pos:line="339" pos:column="31">==<pos:position pos:line="339" pos:column="33"/></operator> <name pos:line="339" pos:column="34">otObject<pos:position pos:line="339" pos:column="42"/></name> <operator pos:line="339" pos:column="43">||<pos:position pos:line="339" pos:column="45"/></operator>
             <name><name pos:line="340" pos:column="14">cmd_data<pos:position pos:line="340" pos:column="22"/></name><operator pos:line="340" pos:column="22">-&gt;<pos:position pos:line="340" pos:column="27"/></operator><name pos:line="340" pos:column="24">output<pos:position pos:line="340" pos:column="30"/></name></name> <operator pos:line="340" pos:column="31">==<pos:position pos:line="340" pos:column="33"/></operator> <name pos:line="340" pos:column="34">otLibrary<pos:position pos:line="340" pos:column="43"/></name> <operator pos:line="340" pos:column="44">||<pos:position pos:line="340" pos:column="46"/></operator>
             <name><name pos:line="341" pos:column="14">cmd_data<pos:position pos:line="341" pos:column="22"/></name><operator pos:line="341" pos:column="22">-&gt;<pos:position pos:line="341" pos:column="27"/></operator><name pos:line="341" pos:column="24">output<pos:position pos:line="341" pos:column="30"/></name></name> <operator pos:line="341" pos:column="31">==<pos:position pos:line="341" pos:column="33"/></operator> <name pos:line="341" pos:column="34">otDynamicLibraryOnly<pos:position pos:line="341" pos:column="54"/></name><operator pos:line="341" pos:column="54">)<pos:position pos:line="341" pos:column="55"/></operator></expr>)<pos:position pos:line="341" pos:column="56"/></condition><then pos:line="341" pos:column="56"> <block pos:line="341" pos:column="57">{
<cpp:ifdef pos:line="342" pos:column="1">#<cpp:directive pos:line="342" pos:column="2">ifdef<pos:position pos:line="342" pos:column="7"/></cpp:directive> <name pos:line="342" pos:column="8">SHARE_SW<pos:position pos:line="342" pos:column="16"/></name></cpp:ifdef>
        <expr_stmt><expr><call><name pos:line="343" pos:column="9">push_count_chars<pos:position pos:line="343" pos:column="25"/></name><argument_list pos:line="343" pos:column="25">(<argument><expr><name><name pos:line="343" pos:column="26">cmd_data<pos:position pos:line="343" pos:column="34"/></name><operator pos:line="343" pos:column="34">-&gt;<pos:position pos:line="343" pos:column="39"/></operator><name pos:line="343" pos:column="36">arglist<pos:position pos:line="343" pos:column="43"/></name></name></expr></argument>, <argument><expr><name pos:line="343" pos:column="45">SHARE_SW<pos:position pos:line="343" pos:column="53"/></name></expr></argument>)<pos:position pos:line="343" pos:column="54"/></argument_list></call></expr>;<pos:position pos:line="343" pos:column="55"/></expr_stmt>
<cpp:endif pos:line="344" pos:column="1">#<cpp:directive pos:line="344" pos:column="2">endif<pos:position pos:line="344" pos:column="7"/></cpp:directive></cpp:endif>
    }<pos:position pos:line="345" pos:column="6"/></block></then></if>
}<pos:position pos:line="346" pos:column="2"/></block></function>

<function><type><name pos:line="348" pos:column="1">int<pos:position pos:line="348" pos:column="4"/></name></type> <name pos:line="348" pos:column="5">run_mode<pos:position pos:line="348" pos:column="13"/></name><parameter_list pos:line="348" pos:column="13">(<parameter><decl><type><name pos:line="348" pos:column="14">command_t<pos:position pos:line="348" pos:column="23"/></name> <modifier pos:line="348" pos:column="24">*<pos:position pos:line="348" pos:column="25"/></modifier></type><name pos:line="348" pos:column="25">cmd_data<pos:position pos:line="348" pos:column="33"/></name></decl></parameter>)<pos:position pos:line="348" pos:column="34"/></parameter_list>
<block pos:line="349" pos:column="1">{
    <decl_stmt><decl><type><name pos:line="350" pos:column="5">int<pos:position pos:line="350" pos:column="8"/></name></type> <name pos:line="350" pos:column="9">rv<pos:position pos:line="350" pos:column="11"/></name></decl>;<pos:position pos:line="350" pos:column="12"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="351" pos:column="5">count_chars<pos:position pos:line="351" pos:column="16"/></name> <modifier pos:line="351" pos:column="17">*<pos:position pos:line="351" pos:column="18"/></modifier></type><name pos:line="351" pos:column="18">cctemp<pos:position pos:line="351" pos:column="24"/></name></decl>;<pos:position pos:line="351" pos:column="25"/></decl_stmt>

    <expr_stmt><expr><name pos:line="353" pos:column="5">cctemp<pos:position pos:line="353" pos:column="11"/></name> <operator pos:line="353" pos:column="12">=<pos:position pos:line="353" pos:column="13"/></operator> <operator pos:line="353" pos:column="14">(<pos:position pos:line="353" pos:column="15"/></operator><name pos:line="353" pos:column="15">count_chars<pos:position pos:line="353" pos:column="26"/></name><operator pos:line="353" pos:column="26">*<pos:position pos:line="353" pos:column="27"/></operator><operator pos:line="353" pos:column="27">)<pos:position pos:line="353" pos:column="28"/></operator><call><name pos:line="353" pos:column="28">malloc<pos:position pos:line="353" pos:column="34"/></name><argument_list pos:line="353" pos:column="34">(<argument><expr><sizeof pos:line="353" pos:column="35">sizeof<argument_list pos:line="353" pos:column="41">(<argument><expr><name pos:line="353" pos:column="42">count_chars<pos:position pos:line="353" pos:column="53"/></name></expr></argument>)<pos:position pos:line="353" pos:column="54"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="353" pos:column="55"/></argument_list></call></expr>;<pos:position pos:line="353" pos:column="56"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="354" pos:column="5">init_count_chars<pos:position pos:line="354" pos:column="21"/></name><argument_list pos:line="354" pos:column="21">(<argument><expr><name pos:line="354" pos:column="22">cctemp<pos:position pos:line="354" pos:column="28"/></name></expr></argument>)<pos:position pos:line="354" pos:column="29"/></argument_list></call></expr>;<pos:position pos:line="354" pos:column="30"/></expr_stmt>

    <switch pos:line="356" pos:column="5">switch <condition pos:line="356" pos:column="12">(<expr><name><name pos:line="356" pos:column="13">cmd_data<pos:position pos:line="356" pos:column="21"/></name><operator pos:line="356" pos:column="21">-&gt;<pos:position pos:line="356" pos:column="26"/></operator><name pos:line="356" pos:column="23">mode<pos:position pos:line="356" pos:column="27"/></name></name></expr>)<pos:position pos:line="356" pos:column="28"/></condition>
    <block pos:line="357" pos:column="5">{
    <case pos:line="358" pos:column="5">case <expr><name pos:line="358" pos:column="10">mCompile<pos:position pos:line="358" pos:column="18"/></name></expr>:<pos:position pos:line="358" pos:column="19"/></case>
        <expr_stmt><expr><name pos:line="359" pos:column="9">rv<pos:position pos:line="359" pos:column="11"/></name> <operator pos:line="359" pos:column="12">=<pos:position pos:line="359" pos:column="13"/></operator> <call><name pos:line="359" pos:column="14">run_command<pos:position pos:line="359" pos:column="25"/></name><argument_list pos:line="359" pos:column="25">(<argument><expr><name pos:line="359" pos:column="26">cmd_data<pos:position pos:line="359" pos:column="34"/></name></expr></argument>, <argument><expr><name><name pos:line="359" pos:column="36">cmd_data<pos:position pos:line="359" pos:column="44"/></name><operator pos:line="359" pos:column="44">-&gt;<pos:position pos:line="359" pos:column="49"/></operator><name pos:line="359" pos:column="46">arglist<pos:position pos:line="359" pos:column="53"/></name></name></expr></argument>)<pos:position pos:line="359" pos:column="54"/></argument_list></call></expr>;<pos:position pos:line="359" pos:column="55"/></expr_stmt>
        <if pos:line="360" pos:column="9">if <condition pos:line="360" pos:column="12">(<expr><name pos:line="360" pos:column="13">rv<pos:position pos:line="360" pos:column="15"/></name></expr>)<pos:position pos:line="360" pos:column="16"/></condition><then pos:line="360" pos:column="16"> <block pos:line="360" pos:column="17">{
            <return pos:line="361" pos:column="13">return <expr><name pos:line="361" pos:column="20">rv<pos:position pos:line="361" pos:column="22"/></name></expr>;<pos:position pos:line="361" pos:column="23"/></return>
        }<pos:position pos:line="362" pos:column="10"/></block></then></if>
        <break pos:line="363" pos:column="9">break;<pos:position pos:line="363" pos:column="15"/></break>
    <case pos:line="364" pos:column="5">case <expr><name pos:line="364" pos:column="10">mInstall<pos:position pos:line="364" pos:column="18"/></name></expr>:<pos:position pos:line="364" pos:column="19"/></case>
        <comment type="block" pos:line="365" pos:column="9">/* Well, we'll assume it's a file going to a directory... */</comment>
        <comment type="block" pos:line="366" pos:column="9">/* For brain-dead install-sh based scripts, we have to repeat
         * the command N-times.  install-sh should die.
         */</comment>
        <if pos:line="369" pos:column="9">if <condition pos:line="369" pos:column="12">(<expr><operator pos:line="369" pos:column="13">!<pos:position pos:line="369" pos:column="14"/></operator><name><name pos:line="369" pos:column="14">cmd_data<pos:position pos:line="369" pos:column="22"/></name><operator pos:line="369" pos:column="22">-&gt;<pos:position pos:line="369" pos:column="27"/></operator><name pos:line="369" pos:column="24">output_name<pos:position pos:line="369" pos:column="35"/></name></name></expr>)<pos:position pos:line="369" pos:column="36"/></condition><then pos:line="369" pos:column="36"> <block pos:line="369" pos:column="37">{
            <expr_stmt><expr><name pos:line="370" pos:column="13">rv<pos:position pos:line="370" pos:column="15"/></name> <operator pos:line="370" pos:column="16">=<pos:position pos:line="370" pos:column="17"/></operator> <call><name pos:line="370" pos:column="18">run_command<pos:position pos:line="370" pos:column="29"/></name><argument_list pos:line="370" pos:column="29">(<argument><expr><name pos:line="370" pos:column="30">cmd_data<pos:position pos:line="370" pos:column="38"/></name></expr></argument>, <argument><expr><name><name pos:line="370" pos:column="40">cmd_data<pos:position pos:line="370" pos:column="48"/></name><operator pos:line="370" pos:column="48">-&gt;<pos:position pos:line="370" pos:column="53"/></operator><name pos:line="370" pos:column="50">arglist<pos:position pos:line="370" pos:column="57"/></name></name></expr></argument>)<pos:position pos:line="370" pos:column="58"/></argument_list></call></expr>;<pos:position pos:line="370" pos:column="59"/></expr_stmt>
            <if pos:line="371" pos:column="13">if <condition pos:line="371" pos:column="16">(<expr><name pos:line="371" pos:column="17">rv<pos:position pos:line="371" pos:column="19"/></name></expr>)<pos:position pos:line="371" pos:column="20"/></condition><then pos:line="371" pos:column="20"> <block pos:line="371" pos:column="21">{
                <return pos:line="372" pos:column="17">return <expr><name pos:line="372" pos:column="24">rv<pos:position pos:line="372" pos:column="26"/></name></expr>;<pos:position pos:line="372" pos:column="27"/></return>
            }<pos:position pos:line="373" pos:column="14"/></block></then></if>
        }<pos:position pos:line="374" pos:column="10"/></block></then></if>
        <if pos:line="375" pos:column="9">if <condition pos:line="375" pos:column="12">(<expr><name><name pos:line="375" pos:column="13">cmd_data<pos:position pos:line="375" pos:column="21"/></name><operator pos:line="375" pos:column="21">-&gt;<pos:position pos:line="375" pos:column="26"/></operator><name pos:line="375" pos:column="23">output_name<pos:position pos:line="375" pos:column="34"/></name></name></expr>)<pos:position pos:line="375" pos:column="35"/></condition><then pos:line="375" pos:column="35"> <block pos:line="375" pos:column="36">{
            <expr_stmt><expr><call><name pos:line="376" pos:column="13">append_count_chars<pos:position pos:line="376" pos:column="31"/></name><argument_list pos:line="376" pos:column="31">(<argument><expr><name pos:line="376" pos:column="32">cctemp<pos:position pos:line="376" pos:column="38"/></name></expr></argument>, <argument><expr><name><name pos:line="376" pos:column="40">cmd_data<pos:position pos:line="376" pos:column="48"/></name><operator pos:line="376" pos:column="48">-&gt;<pos:position pos:line="376" pos:column="53"/></operator><name pos:line="376" pos:column="50">arglist<pos:position pos:line="376" pos:column="57"/></name></name></expr></argument>)<pos:position pos:line="376" pos:column="58"/></argument_list></call></expr>;<pos:position pos:line="376" pos:column="59"/></expr_stmt>
            <expr_stmt><expr><call><name pos:line="377" pos:column="13">insert_count_chars<pos:position pos:line="377" pos:column="31"/></name><argument_list pos:line="377" pos:column="31">(<argument><expr><name pos:line="377" pos:column="32">cctemp<pos:position pos:line="377" pos:column="38"/></name></expr></argument>,
                               <argument><expr><name><name pos:line="378" pos:column="32">cmd_data<pos:position pos:line="378" pos:column="40"/></name><operator pos:line="378" pos:column="40">-&gt;<pos:position pos:line="378" pos:column="45"/></operator><name pos:line="378" pos:column="42">output_name<pos:position pos:line="378" pos:column="53"/></name></name></expr></argument>,
                               <argument><expr><name><name pos:line="379" pos:column="32">cctemp<pos:position pos:line="379" pos:column="38"/></name><operator pos:line="379" pos:column="38">-&gt;<pos:position pos:line="379" pos:column="43"/></operator><name pos:line="379" pos:column="40">num<pos:position pos:line="379" pos:column="43"/></name></name> <operator pos:line="379" pos:column="44">-<pos:position pos:line="379" pos:column="45"/></operator> <literal type="number" pos:line="379" pos:column="46">1<pos:position pos:line="379" pos:column="47"/></literal></expr></argument>)<pos:position pos:line="379" pos:column="48"/></argument_list></call></expr>;<pos:position pos:line="379" pos:column="49"/></expr_stmt>
            <expr_stmt><expr><name pos:line="380" pos:column="13">rv<pos:position pos:line="380" pos:column="15"/></name> <operator pos:line="380" pos:column="16">=<pos:position pos:line="380" pos:column="17"/></operator> <call><name pos:line="380" pos:column="18">run_command<pos:position pos:line="380" pos:column="29"/></name><argument_list pos:line="380" pos:column="29">(<argument><expr><name pos:line="380" pos:column="30">cmd_data<pos:position pos:line="380" pos:column="38"/></name></expr></argument>, <argument><expr><name pos:line="380" pos:column="40">cctemp<pos:position pos:line="380" pos:column="46"/></name></expr></argument>)<pos:position pos:line="380" pos:column="47"/></argument_list></call></expr>;<pos:position pos:line="380" pos:column="48"/></expr_stmt>
            <if pos:line="381" pos:column="13">if <condition pos:line="381" pos:column="16">(<expr><name pos:line="381" pos:column="17">rv<pos:position pos:line="381" pos:column="19"/></name></expr>)<pos:position pos:line="381" pos:column="20"/></condition><then pos:line="381" pos:column="20"> <block pos:line="381" pos:column="21">{
                <return pos:line="382" pos:column="17">return <expr><name pos:line="382" pos:column="24">rv<pos:position pos:line="382" pos:column="26"/></name></expr>;<pos:position pos:line="382" pos:column="27"/></return>
            }<pos:position pos:line="383" pos:column="14"/></block></then></if>
            <expr_stmt><expr><call><name pos:line="384" pos:column="13">clear_count_chars<pos:position pos:line="384" pos:column="30"/></name><argument_list pos:line="384" pos:column="30">(<argument><expr><name pos:line="384" pos:column="31">cctemp<pos:position pos:line="384" pos:column="37"/></name></expr></argument>)<pos:position pos:line="384" pos:column="38"/></argument_list></call></expr>;<pos:position pos:line="384" pos:column="39"/></expr_stmt>
        }<pos:position pos:line="385" pos:column="10"/></block></then></if>
        <if pos:line="386" pos:column="9">if <condition pos:line="386" pos:column="12">(<expr><name><name pos:line="386" pos:column="13">cmd_data<pos:position pos:line="386" pos:column="21"/></name><operator pos:line="386" pos:column="21">-&gt;<pos:position pos:line="386" pos:column="26"/></operator><name pos:line="386" pos:column="23">static_name<pos:position pos:line="386" pos:column="34"/></name><operator pos:line="386" pos:column="34">.<pos:position pos:line="386" pos:column="35"/></operator><name pos:line="386" pos:column="35">install<pos:position pos:line="386" pos:column="42"/></name></name></expr>)<pos:position pos:line="386" pos:column="43"/></condition><then pos:line="386" pos:column="43"> <block pos:line="386" pos:column="44">{
            <expr_stmt><expr><call><name pos:line="387" pos:column="13">append_count_chars<pos:position pos:line="387" pos:column="31"/></name><argument_list pos:line="387" pos:column="31">(<argument><expr><name pos:line="387" pos:column="32">cctemp<pos:position pos:line="387" pos:column="38"/></name></expr></argument>, <argument><expr><name><name pos:line="387" pos:column="40">cmd_data<pos:position pos:line="387" pos:column="48"/></name><operator pos:line="387" pos:column="48">-&gt;<pos:position pos:line="387" pos:column="53"/></operator><name pos:line="387" pos:column="50">arglist<pos:position pos:line="387" pos:column="57"/></name></name></expr></argument>)<pos:position pos:line="387" pos:column="58"/></argument_list></call></expr>;<pos:position pos:line="387" pos:column="59"/></expr_stmt>
            <expr_stmt><expr><call><name pos:line="388" pos:column="13">insert_count_chars<pos:position pos:line="388" pos:column="31"/></name><argument_list pos:line="388" pos:column="31">(<argument><expr><name pos:line="388" pos:column="32">cctemp<pos:position pos:line="388" pos:column="38"/></name></expr></argument>,
                               <argument><expr><name><name pos:line="389" pos:column="32">cmd_data<pos:position pos:line="389" pos:column="40"/></name><operator pos:line="389" pos:column="40">-&gt;<pos:position pos:line="389" pos:column="45"/></operator><name pos:line="389" pos:column="42">static_name<pos:position pos:line="389" pos:column="53"/></name><operator pos:line="389" pos:column="53">.<pos:position pos:line="389" pos:column="54"/></operator><name pos:line="389" pos:column="54">install<pos:position pos:line="389" pos:column="61"/></name></name></expr></argument>,
                               <argument><expr><name><name pos:line="390" pos:column="32">cctemp<pos:position pos:line="390" pos:column="38"/></name><operator pos:line="390" pos:column="38">-&gt;<pos:position pos:line="390" pos:column="43"/></operator><name pos:line="390" pos:column="40">num<pos:position pos:line="390" pos:column="43"/></name></name> <operator pos:line="390" pos:column="44">-<pos:position pos:line="390" pos:column="45"/></operator> <literal type="number" pos:line="390" pos:column="46">1<pos:position pos:line="390" pos:column="47"/></literal></expr></argument>)<pos:position pos:line="390" pos:column="48"/></argument_list></call></expr>;<pos:position pos:line="390" pos:column="49"/></expr_stmt>
            <expr_stmt><expr><name pos:line="391" pos:column="13">rv<pos:position pos:line="391" pos:column="15"/></name> <operator pos:line="391" pos:column="16">=<pos:position pos:line="391" pos:column="17"/></operator> <call><name pos:line="391" pos:column="18">run_command<pos:position pos:line="391" pos:column="29"/></name><argument_list pos:line="391" pos:column="29">(<argument><expr><name pos:line="391" pos:column="30">cmd_data<pos:position pos:line="391" pos:column="38"/></name></expr></argument>, <argument><expr><name pos:line="391" pos:column="40">cctemp<pos:position pos:line="391" pos:column="46"/></name></expr></argument>)<pos:position pos:line="391" pos:column="47"/></argument_list></call></expr>;<pos:position pos:line="391" pos:column="48"/></expr_stmt>
            <if pos:line="392" pos:column="13">if <condition pos:line="392" pos:column="16">(<expr><name pos:line="392" pos:column="17">rv<pos:position pos:line="392" pos:column="19"/></name></expr>)<pos:position pos:line="392" pos:column="20"/></condition><then pos:line="392" pos:column="20"> <block pos:line="392" pos:column="21">{
                <return pos:line="393" pos:column="17">return <expr><name pos:line="393" pos:column="24">rv<pos:position pos:line="393" pos:column="26"/></name></expr>;<pos:position pos:line="393" pos:column="27"/></return>
            }<pos:position pos:line="394" pos:column="14"/></block></then></if>
<cpp:if pos:line="395" pos:column="1">#<cpp:directive pos:line="395" pos:column="2">if<pos:position pos:line="395" pos:column="4"/></cpp:directive> <expr><call><name pos:line="395" pos:column="5">defined<pos:position pos:line="395" pos:column="12"/></name><argument_list pos:line="395" pos:column="12">(<argument><expr><name pos:line="395" pos:column="13">__APPLE__<pos:position pos:line="395" pos:column="22"/></name></expr></argument>)<pos:position pos:line="395" pos:column="23"/></argument_list></call> <operator pos:line="395" pos:column="24">&amp;&amp;<pos:position pos:line="395" pos:column="34"/></operator> <call><name pos:line="395" pos:column="27">defined<pos:position pos:line="395" pos:column="34"/></name><argument_list pos:line="395" pos:column="34">(<argument><expr><name pos:line="395" pos:column="35">RANLIB<pos:position pos:line="395" pos:column="41"/></name></expr></argument>)<pos:position pos:line="395" pos:column="42"/></argument_list></call></expr></cpp:if>
            <comment type="block" pos:line="396" pos:column="13">/* From the Apple libtool(1) manpage on Tiger/10.4:
             * ----
             * With  the way libraries used to be created, errors were possible
             * if the library was modified with ar(1) and  the  table  of
             * contents  was  not updated  by  rerunning ranlib(1).  Thus the
             * link editor, ld, warns when the modification date of a library
             * is more  recent  than  the  creation date  of its table of
             * contents.  Unfortunately, this means that you get the warning
             * even if you only copy the library.
             * ----
             *
             * This means that when we install the static archive, we need to
             * rerun ranlib afterwards.
             */</comment>
            <decl_stmt><decl><type><specifier pos:line="410" pos:column="13">const<pos:position pos:line="410" pos:column="18"/></specifier> <name pos:line="410" pos:column="19">char<pos:position pos:line="410" pos:column="23"/></name> <modifier pos:line="410" pos:column="24">*<pos:position pos:line="410" pos:column="25"/></modifier></type><name><name pos:line="410" pos:column="25">lib_args<pos:position pos:line="410" pos:column="33"/></name><index pos:line="410" pos:column="33">[<expr><literal type="number" pos:line="410" pos:column="34">3<pos:position pos:line="410" pos:column="35"/></literal></expr>]<pos:position pos:line="410" pos:column="36"/></index></name></decl>, <modifier pos:line="410" pos:column="38">*<pos:position pos:line="410" pos:column="39"/></modifier><decl><type ref="prev"/><name pos:line="410" pos:column="39">static_lib_name<pos:position pos:line="410" pos:column="54"/></name></decl>;<pos:position pos:line="410" pos:column="55"/></decl_stmt>
            <decl_stmt><decl><type><name pos:line="411" pos:column="13">char<pos:position pos:line="411" pos:column="17"/></name> <modifier pos:line="411" pos:column="18">*<pos:position pos:line="411" pos:column="19"/></modifier></type><name pos:line="411" pos:column="19">tmp<pos:position pos:line="411" pos:column="22"/></name></decl>;<pos:position pos:line="411" pos:column="23"/></decl_stmt>
            <decl_stmt><decl><type><name pos:line="412" pos:column="13">size_t<pos:position pos:line="412" pos:column="19"/></name></type> <name pos:line="412" pos:column="20">len1<pos:position pos:line="412" pos:column="24"/></name></decl>, <decl><type ref="prev"/><name pos:line="412" pos:column="26">len2<pos:position pos:line="412" pos:column="30"/></name></decl>;<pos:position pos:line="412" pos:column="31"/></decl_stmt>
            <expr_stmt><expr><name pos:line="413" pos:column="13">len1<pos:position pos:line="413" pos:column="17"/></name> <operator pos:line="413" pos:column="18">=<pos:position pos:line="413" pos:column="19"/></operator> <call><name pos:line="413" pos:column="20">strlen<pos:position pos:line="413" pos:column="26"/></name><argument_list pos:line="413" pos:column="26">(<argument><expr><name><name pos:line="413" pos:column="27">cmd_data<pos:position pos:line="413" pos:column="35"/></name><operator pos:line="413" pos:column="35">-&gt;<pos:position pos:line="413" pos:column="40"/></operator><name pos:line="413" pos:column="37">arglist<pos:position pos:line="413" pos:column="44"/></name><operator pos:line="413" pos:column="44">-&gt;<pos:position pos:line="413" pos:column="49"/></operator><name pos:line="413" pos:column="46">vals<pos:position pos:line="413" pos:column="50"/></name><index pos:line="413" pos:column="50">[<expr><name><name pos:line="413" pos:column="51">cmd_data<pos:position pos:line="413" pos:column="59"/></name><operator pos:line="413" pos:column="59">-&gt;<pos:position pos:line="413" pos:column="64"/></operator><name pos:line="413" pos:column="61">arglist<pos:position pos:line="413" pos:column="68"/></name><operator pos:line="413" pos:column="68">-&gt;<pos:position pos:line="413" pos:column="73"/></operator><name pos:line="413" pos:column="70">num<pos:position pos:line="413" pos:column="73"/></name></name> <operator pos:line="413" pos:column="74">-<pos:position pos:line="413" pos:column="75"/></operator> <literal type="number" pos:line="413" pos:column="76">1<pos:position pos:line="413" pos:column="77"/></literal></expr>]<pos:position pos:line="413" pos:column="78"/></index></name></expr></argument>)<pos:position pos:line="413" pos:column="79"/></argument_list></call></expr>;<pos:position pos:line="413" pos:column="80"/></expr_stmt>

            <expr_stmt><expr><name pos:line="415" pos:column="13">static_lib_name<pos:position pos:line="415" pos:column="28"/></name> <operator pos:line="415" pos:column="29">=<pos:position pos:line="415" pos:column="30"/></operator> <call><name pos:line="415" pos:column="31">jlibtool_basename<pos:position pos:line="415" pos:column="48"/></name><argument_list pos:line="415" pos:column="48">(<argument><expr><name><name pos:line="415" pos:column="49">cmd_data<pos:position pos:line="415" pos:column="57"/></name><operator pos:line="415" pos:column="57">-&gt;<pos:position pos:line="415" pos:column="62"/></operator><name pos:line="415" pos:column="59">static_name<pos:position pos:line="415" pos:column="70"/></name><operator pos:line="415" pos:column="70">.<pos:position pos:line="415" pos:column="71"/></operator><name pos:line="415" pos:column="71">install<pos:position pos:line="415" pos:column="78"/></name></name></expr></argument>)<pos:position pos:line="415" pos:column="79"/></argument_list></call></expr>;<pos:position pos:line="415" pos:column="80"/></expr_stmt>
            <expr_stmt><expr><name pos:line="416" pos:column="13">len2<pos:position pos:line="416" pos:column="17"/></name> <operator pos:line="416" pos:column="18">=<pos:position pos:line="416" pos:column="19"/></operator> <call><name pos:line="416" pos:column="20">strlen<pos:position pos:line="416" pos:column="26"/></name><argument_list pos:line="416" pos:column="26">(<argument><expr><name pos:line="416" pos:column="27">static_lib_name<pos:position pos:line="416" pos:column="42"/></name></expr></argument>)<pos:position pos:line="416" pos:column="43"/></argument_list></call></expr>;<pos:position pos:line="416" pos:column="44"/></expr_stmt>

            <expr_stmt><expr><name pos:line="418" pos:column="13">tmp<pos:position pos:line="418" pos:column="16"/></name> <operator pos:line="418" pos:column="17">=<pos:position pos:line="418" pos:column="18"/></operator> <call><name pos:line="418" pos:column="19">malloc<pos:position pos:line="418" pos:column="25"/></name><argument_list pos:line="418" pos:column="25">(<argument><expr><name pos:line="418" pos:column="26">len1<pos:position pos:line="418" pos:column="30"/></name> <operator pos:line="418" pos:column="31">+<pos:position pos:line="418" pos:column="32"/></operator> <name pos:line="418" pos:column="33">len2<pos:position pos:line="418" pos:column="37"/></name> <operator pos:line="418" pos:column="38">+<pos:position pos:line="418" pos:column="39"/></operator> <literal type="number" pos:line="418" pos:column="40">2<pos:position pos:line="418" pos:column="41"/></literal></expr></argument>)<pos:position pos:line="418" pos:column="42"/></argument_list></call></expr>;<pos:position pos:line="418" pos:column="43"/></expr_stmt>

            <expr_stmt><expr><call><name pos:line="420" pos:column="13">snprintf<pos:position pos:line="420" pos:column="21"/></name><argument_list pos:line="420" pos:column="21">(<argument><expr><name pos:line="420" pos:column="22">tmp<pos:position pos:line="420" pos:column="25"/></name></expr></argument>, <argument><expr><name pos:line="420" pos:column="27">len1<pos:position pos:line="420" pos:column="31"/></name> <operator pos:line="420" pos:column="32">+<pos:position pos:line="420" pos:column="33"/></operator> <name pos:line="420" pos:column="34">len2<pos:position pos:line="420" pos:column="38"/></name> <operator pos:line="420" pos:column="39">+<pos:position pos:line="420" pos:column="40"/></operator> <literal type="number" pos:line="420" pos:column="41">2<pos:position pos:line="420" pos:column="42"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="420" pos:column="44">"%s/%s"<pos:position pos:line="420" pos:column="51"/></literal></expr></argument>,
                    <argument><expr><name><name pos:line="421" pos:column="21">cmd_data<pos:position pos:line="421" pos:column="29"/></name><operator pos:line="421" pos:column="29">-&gt;<pos:position pos:line="421" pos:column="34"/></operator><name pos:line="421" pos:column="31">arglist<pos:position pos:line="421" pos:column="38"/></name><operator pos:line="421" pos:column="38">-&gt;<pos:position pos:line="421" pos:column="43"/></operator><name pos:line="421" pos:column="40">vals<pos:position pos:line="421" pos:column="44"/></name><index pos:line="421" pos:column="44">[<expr><name><name pos:line="421" pos:column="45">cmd_data<pos:position pos:line="421" pos:column="53"/></name><operator pos:line="421" pos:column="53">-&gt;<pos:position pos:line="421" pos:column="58"/></operator><name pos:line="421" pos:column="55">arglist<pos:position pos:line="421" pos:column="62"/></name><operator pos:line="421" pos:column="62">-&gt;<pos:position pos:line="421" pos:column="67"/></operator><name pos:line="421" pos:column="64">num<pos:position pos:line="421" pos:column="67"/></name></name> <operator pos:line="421" pos:column="68">-<pos:position pos:line="421" pos:column="69"/></operator> <literal type="number" pos:line="421" pos:column="70">1<pos:position pos:line="421" pos:column="71"/></literal></expr>]<pos:position pos:line="421" pos:column="72"/></index></name></expr></argument>,
                    <argument><expr><name pos:line="422" pos:column="21">static_lib_name<pos:position pos:line="422" pos:column="36"/></name></expr></argument>)<pos:position pos:line="422" pos:column="37"/></argument_list></call></expr>;<pos:position pos:line="422" pos:column="38"/></expr_stmt>

            <expr_stmt><expr><name><name pos:line="424" pos:column="13">lib_args<pos:position pos:line="424" pos:column="21"/></name><index pos:line="424" pos:column="21">[<expr><literal type="number" pos:line="424" pos:column="22">0<pos:position pos:line="424" pos:column="23"/></literal></expr>]<pos:position pos:line="424" pos:column="24"/></index></name> <operator pos:line="424" pos:column="25">=<pos:position pos:line="424" pos:column="26"/></operator> <name pos:line="424" pos:column="27">RANLIB<pos:position pos:line="424" pos:column="33"/></name></expr>;<pos:position pos:line="424" pos:column="34"/></expr_stmt>
            <expr_stmt><expr><name><name pos:line="425" pos:column="13">lib_args<pos:position pos:line="425" pos:column="21"/></name><index pos:line="425" pos:column="21">[<expr><literal type="number" pos:line="425" pos:column="22">1<pos:position pos:line="425" pos:column="23"/></literal></expr>]<pos:position pos:line="425" pos:column="24"/></index></name> <operator pos:line="425" pos:column="25">=<pos:position pos:line="425" pos:column="26"/></operator> <name pos:line="425" pos:column="27">tmp<pos:position pos:line="425" pos:column="30"/></name></expr>;<pos:position pos:line="425" pos:column="31"/></expr_stmt>
            <expr_stmt><expr><name><name pos:line="426" pos:column="13">lib_args<pos:position pos:line="426" pos:column="21"/></name><index pos:line="426" pos:column="21">[<expr><literal type="number" pos:line="426" pos:column="22">2<pos:position pos:line="426" pos:column="23"/></literal></expr>]<pos:position pos:line="426" pos:column="24"/></index></name> <operator pos:line="426" pos:column="25">=<pos:position pos:line="426" pos:column="26"/></operator> <name pos:line="426" pos:column="27">NULL<pos:position pos:line="426" pos:column="31"/></name></expr>;<pos:position pos:line="426" pos:column="32"/></expr_stmt>
            <expr_stmt><expr><call><name pos:line="427" pos:column="13">external_spawn<pos:position pos:line="427" pos:column="27"/></name><argument_list pos:line="427" pos:column="27">(<argument><expr><name pos:line="427" pos:column="28">cmd_data<pos:position pos:line="427" pos:column="36"/></name></expr></argument>, <argument><expr><name pos:line="427" pos:column="38">RANLIB<pos:position pos:line="427" pos:column="44"/></name></expr></argument>, <argument><expr><name pos:line="427" pos:column="46">lib_args<pos:position pos:line="427" pos:column="54"/></name></expr></argument>)<pos:position pos:line="427" pos:column="55"/></argument_list></call></expr>;<pos:position pos:line="427" pos:column="56"/></expr_stmt>
            <expr_stmt><expr><call><name pos:line="428" pos:column="13">free<pos:position pos:line="428" pos:column="17"/></name><argument_list pos:line="428" pos:column="17">(<argument><expr><name pos:line="428" pos:column="18">tmp<pos:position pos:line="428" pos:column="21"/></name></expr></argument>)<pos:position pos:line="428" pos:column="22"/></argument_list></call></expr>;<pos:position pos:line="428" pos:column="23"/></expr_stmt>
<cpp:endif pos:line="429" pos:column="1">#<cpp:directive pos:line="429" pos:column="2">endif<pos:position pos:line="429" pos:column="7"/></cpp:directive></cpp:endif>
            <expr_stmt><expr><call><name pos:line="430" pos:column="13">clear_count_chars<pos:position pos:line="430" pos:column="30"/></name><argument_list pos:line="430" pos:column="30">(<argument><expr><name pos:line="430" pos:column="31">cctemp<pos:position pos:line="430" pos:column="37"/></name></expr></argument>)<pos:position pos:line="430" pos:column="38"/></argument_list></call></expr>;<pos:position pos:line="430" pos:column="39"/></expr_stmt>
        }<pos:position pos:line="431" pos:column="10"/></block></then></if>
        <if pos:line="432" pos:column="9">if <condition pos:line="432" pos:column="12">(<expr><name><name pos:line="432" pos:column="13">cmd_data<pos:position pos:line="432" pos:column="21"/></name><operator pos:line="432" pos:column="21">-&gt;<pos:position pos:line="432" pos:column="26"/></operator><name pos:line="432" pos:column="23">shared_name<pos:position pos:line="432" pos:column="34"/></name><operator pos:line="432" pos:column="34">.<pos:position pos:line="432" pos:column="35"/></operator><name pos:line="432" pos:column="35">install<pos:position pos:line="432" pos:column="42"/></name></name></expr>)<pos:position pos:line="432" pos:column="43"/></condition><then pos:line="432" pos:column="43"> <block pos:line="432" pos:column="44">{
            <expr_stmt><expr><call><name pos:line="433" pos:column="13">append_count_chars<pos:position pos:line="433" pos:column="31"/></name><argument_list pos:line="433" pos:column="31">(<argument><expr><name pos:line="433" pos:column="32">cctemp<pos:position pos:line="433" pos:column="38"/></name></expr></argument>, <argument><expr><name><name pos:line="433" pos:column="40">cmd_data<pos:position pos:line="433" pos:column="48"/></name><operator pos:line="433" pos:column="48">-&gt;<pos:position pos:line="433" pos:column="53"/></operator><name pos:line="433" pos:column="50">arglist<pos:position pos:line="433" pos:column="57"/></name></name></expr></argument>)<pos:position pos:line="433" pos:column="58"/></argument_list></call></expr>;<pos:position pos:line="433" pos:column="59"/></expr_stmt>
            <expr_stmt><expr><call><name pos:line="434" pos:column="13">insert_count_chars<pos:position pos:line="434" pos:column="31"/></name><argument_list pos:line="434" pos:column="31">(<argument><expr><name pos:line="434" pos:column="32">cctemp<pos:position pos:line="434" pos:column="38"/></name></expr></argument>,
                               <argument><expr><name><name pos:line="435" pos:column="32">cmd_data<pos:position pos:line="435" pos:column="40"/></name><operator pos:line="435" pos:column="40">-&gt;<pos:position pos:line="435" pos:column="45"/></operator><name pos:line="435" pos:column="42">shared_name<pos:position pos:line="435" pos:column="53"/></name><operator pos:line="435" pos:column="53">.<pos:position pos:line="435" pos:column="54"/></operator><name pos:line="435" pos:column="54">install<pos:position pos:line="435" pos:column="61"/></name></name></expr></argument>,
                               <argument><expr><name><name pos:line="436" pos:column="32">cctemp<pos:position pos:line="436" pos:column="38"/></name><operator pos:line="436" pos:column="38">-&gt;<pos:position pos:line="436" pos:column="43"/></operator><name pos:line="436" pos:column="40">num<pos:position pos:line="436" pos:column="43"/></name></name> <operator pos:line="436" pos:column="44">-<pos:position pos:line="436" pos:column="45"/></operator> <literal type="number" pos:line="436" pos:column="46">1<pos:position pos:line="436" pos:column="47"/></literal></expr></argument>)<pos:position pos:line="436" pos:column="48"/></argument_list></call></expr>;<pos:position pos:line="436" pos:column="49"/></expr_stmt>
            <expr_stmt><expr><name pos:line="437" pos:column="13">rv<pos:position pos:line="437" pos:column="15"/></name> <operator pos:line="437" pos:column="16">=<pos:position pos:line="437" pos:column="17"/></operator> <call><name pos:line="437" pos:column="18">run_command<pos:position pos:line="437" pos:column="29"/></name><argument_list pos:line="437" pos:column="29">(<argument><expr><name pos:line="437" pos:column="30">cmd_data<pos:position pos:line="437" pos:column="38"/></name></expr></argument>, <argument><expr><name pos:line="437" pos:column="40">cctemp<pos:position pos:line="437" pos:column="46"/></name></expr></argument>)<pos:position pos:line="437" pos:column="47"/></argument_list></call></expr>;<pos:position pos:line="437" pos:column="48"/></expr_stmt>
            <if pos:line="438" pos:column="13">if <condition pos:line="438" pos:column="16">(<expr><name pos:line="438" pos:column="17">rv<pos:position pos:line="438" pos:column="19"/></name></expr>)<pos:position pos:line="438" pos:column="20"/></condition><then pos:line="438" pos:column="20"> <block pos:line="438" pos:column="21">{
                <return pos:line="439" pos:column="17">return <expr><name pos:line="439" pos:column="24">rv<pos:position pos:line="439" pos:column="26"/></name></expr>;<pos:position pos:line="439" pos:column="27"/></return>
            }<pos:position pos:line="440" pos:column="14"/></block></then></if>
            <expr_stmt><expr><call><name pos:line="441" pos:column="13">clear_count_chars<pos:position pos:line="441" pos:column="30"/></name><argument_list pos:line="441" pos:column="30">(<argument><expr><name pos:line="441" pos:column="31">cctemp<pos:position pos:line="441" pos:column="37"/></name></expr></argument>)<pos:position pos:line="441" pos:column="38"/></argument_list></call></expr>;<pos:position pos:line="441" pos:column="39"/></expr_stmt>
        }<pos:position pos:line="442" pos:column="10"/></block></then></if>
        <if pos:line="443" pos:column="9">if <condition pos:line="443" pos:column="12">(<expr><name><name pos:line="443" pos:column="13">cmd_data<pos:position pos:line="443" pos:column="21"/></name><operator pos:line="443" pos:column="21">-&gt;<pos:position pos:line="443" pos:column="26"/></operator><name pos:line="443" pos:column="23">module_name<pos:position pos:line="443" pos:column="34"/></name><operator pos:line="443" pos:column="34">.<pos:position pos:line="443" pos:column="35"/></operator><name pos:line="443" pos:column="35">install<pos:position pos:line="443" pos:column="42"/></name></name></expr>)<pos:position pos:line="443" pos:column="43"/></condition><then pos:line="443" pos:column="43"> <block pos:line="443" pos:column="44">{
            <expr_stmt><expr><call><name pos:line="444" pos:column="13">append_count_chars<pos:position pos:line="444" pos:column="31"/></name><argument_list pos:line="444" pos:column="31">(<argument><expr><name pos:line="444" pos:column="32">cctemp<pos:position pos:line="444" pos:column="38"/></name></expr></argument>, <argument><expr><name><name pos:line="444" pos:column="40">cmd_data<pos:position pos:line="444" pos:column="48"/></name><operator pos:line="444" pos:column="48">-&gt;<pos:position pos:line="444" pos:column="53"/></operator><name pos:line="444" pos:column="50">arglist<pos:position pos:line="444" pos:column="57"/></name></name></expr></argument>)<pos:position pos:line="444" pos:column="58"/></argument_list></call></expr>;<pos:position pos:line="444" pos:column="59"/></expr_stmt>
            <expr_stmt><expr><call><name pos:line="445" pos:column="13">insert_count_chars<pos:position pos:line="445" pos:column="31"/></name><argument_list pos:line="445" pos:column="31">(<argument><expr><name pos:line="445" pos:column="32">cctemp<pos:position pos:line="445" pos:column="38"/></name></expr></argument>,
                               <argument><expr><name><name pos:line="446" pos:column="32">cmd_data<pos:position pos:line="446" pos:column="40"/></name><operator pos:line="446" pos:column="40">-&gt;<pos:position pos:line="446" pos:column="45"/></operator><name pos:line="446" pos:column="42">module_name<pos:position pos:line="446" pos:column="53"/></name><operator pos:line="446" pos:column="53">.<pos:position pos:line="446" pos:column="54"/></operator><name pos:line="446" pos:column="54">install<pos:position pos:line="446" pos:column="61"/></name></name></expr></argument>,
                               <argument><expr><name><name pos:line="447" pos:column="32">cctemp<pos:position pos:line="447" pos:column="38"/></name><operator pos:line="447" pos:column="38">-&gt;<pos:position pos:line="447" pos:column="43"/></operator><name pos:line="447" pos:column="40">num<pos:position pos:line="447" pos:column="43"/></name></name> <operator pos:line="447" pos:column="44">-<pos:position pos:line="447" pos:column="45"/></operator> <literal type="number" pos:line="447" pos:column="46">1<pos:position pos:line="447" pos:column="47"/></literal></expr></argument>)<pos:position pos:line="447" pos:column="48"/></argument_list></call></expr>;<pos:position pos:line="447" pos:column="49"/></expr_stmt>
            <expr_stmt><expr><name pos:line="448" pos:column="13">rv<pos:position pos:line="448" pos:column="15"/></name> <operator pos:line="448" pos:column="16">=<pos:position pos:line="448" pos:column="17"/></operator> <call><name pos:line="448" pos:column="18">run_command<pos:position pos:line="448" pos:column="29"/></name><argument_list pos:line="448" pos:column="29">(<argument><expr><name pos:line="448" pos:column="30">cmd_data<pos:position pos:line="448" pos:column="38"/></name></expr></argument>, <argument><expr><name pos:line="448" pos:column="40">cctemp<pos:position pos:line="448" pos:column="46"/></name></expr></argument>)<pos:position pos:line="448" pos:column="47"/></argument_list></call></expr>;<pos:position pos:line="448" pos:column="48"/></expr_stmt>
            <if pos:line="449" pos:column="13">if <condition pos:line="449" pos:column="16">(<expr><name pos:line="449" pos:column="17">rv<pos:position pos:line="449" pos:column="19"/></name></expr>)<pos:position pos:line="449" pos:column="20"/></condition><then pos:line="449" pos:column="20"> <block pos:line="449" pos:column="21">{
                <return pos:line="450" pos:column="17">return <expr><name pos:line="450" pos:column="24">rv<pos:position pos:line="450" pos:column="26"/></name></expr>;<pos:position pos:line="450" pos:column="27"/></return>
            }<pos:position pos:line="451" pos:column="14"/></block></then></if>
            <expr_stmt><expr><call><name pos:line="452" pos:column="13">clear_count_chars<pos:position pos:line="452" pos:column="30"/></name><argument_list pos:line="452" pos:column="30">(<argument><expr><name pos:line="452" pos:column="31">cctemp<pos:position pos:line="452" pos:column="37"/></name></expr></argument>)<pos:position pos:line="452" pos:column="38"/></argument_list></call></expr>;<pos:position pos:line="452" pos:column="39"/></expr_stmt>
        }<pos:position pos:line="453" pos:column="10"/></block></then></if>
        <break pos:line="454" pos:column="9">break;<pos:position pos:line="454" pos:column="15"/></break>
    <case pos:line="455" pos:column="5">case <expr><name pos:line="455" pos:column="10">mLink<pos:position pos:line="455" pos:column="15"/></name></expr>:<pos:position pos:line="455" pos:column="16"/></case>
        <if pos:line="456" pos:column="9">if <condition pos:line="456" pos:column="12">(<expr><operator pos:line="456" pos:column="13">!<pos:position pos:line="456" pos:column="14"/></operator><name><name pos:line="456" pos:column="14">cmd_data<pos:position pos:line="456" pos:column="22"/></name><operator pos:line="456" pos:column="22">-&gt;<pos:position pos:line="456" pos:column="27"/></operator><name pos:line="456" pos:column="24">options<pos:position pos:line="456" pos:column="31"/></name><operator pos:line="456" pos:column="31">.<pos:position pos:line="456" pos:column="32"/></operator><name pos:line="456" pos:column="32">dry_run<pos:position pos:line="456" pos:column="39"/></name></name></expr>)<pos:position pos:line="456" pos:column="40"/></condition><then pos:line="456" pos:column="40"> <block pos:line="456" pos:column="41">{
            <comment type="block" pos:line="457" pos:column="13">/* Check first to see if the dir already exists! */</comment>
            <expr_stmt><expr><call><name pos:line="458" pos:column="13">safe_mkdir<pos:position pos:line="458" pos:column="23"/></name><argument_list pos:line="458" pos:column="23">(<argument><expr><literal type="string" pos:line="458" pos:column="24">".libs"<pos:position pos:line="458" pos:column="31"/></literal></expr></argument>)<pos:position pos:line="458" pos:column="32"/></argument_list></call></expr>;<pos:position pos:line="458" pos:column="33"/></expr_stmt>
        }<pos:position pos:line="459" pos:column="10"/></block></then></if>

        <if pos:line="461" pos:column="9">if <condition pos:line="461" pos:column="12">(<expr><name><name pos:line="461" pos:column="13">cmd_data<pos:position pos:line="461" pos:column="21"/></name><operator pos:line="461" pos:column="21">-&gt;<pos:position pos:line="461" pos:column="26"/></operator><name pos:line="461" pos:column="23">output<pos:position pos:line="461" pos:column="29"/></name></name> <operator pos:line="461" pos:column="30">==<pos:position pos:line="461" pos:column="32"/></operator> <name pos:line="461" pos:column="33">otStaticLibraryOnly<pos:position pos:line="461" pos:column="52"/></name> <operator pos:line="461" pos:column="53">||<pos:position pos:line="461" pos:column="55"/></operator>
            <name><name pos:line="462" pos:column="13">cmd_data<pos:position pos:line="462" pos:column="21"/></name><operator pos:line="462" pos:column="21">-&gt;<pos:position pos:line="462" pos:column="26"/></operator><name pos:line="462" pos:column="23">output<pos:position pos:line="462" pos:column="29"/></name></name> <operator pos:line="462" pos:column="30">==<pos:position pos:line="462" pos:column="32"/></operator> <name pos:line="462" pos:column="33">otLibrary<pos:position pos:line="462" pos:column="42"/></name></expr>)<pos:position pos:line="462" pos:column="43"/></condition><then pos:line="462" pos:column="43"> <block pos:line="462" pos:column="44">{
<cpp:ifdef pos:line="463" pos:column="1">#<cpp:directive pos:line="463" pos:column="2">ifdef<pos:position pos:line="463" pos:column="7"/></cpp:directive> <name pos:line="463" pos:column="8">RANLIB<pos:position pos:line="463" pos:column="14"/></name></cpp:ifdef>
            <decl_stmt><decl><type><specifier pos:line="464" pos:column="13">const<pos:position pos:line="464" pos:column="18"/></specifier> <name pos:line="464" pos:column="19">char<pos:position pos:line="464" pos:column="23"/></name> <modifier pos:line="464" pos:column="24">*<pos:position pos:line="464" pos:column="25"/></modifier></type><name><name pos:line="464" pos:column="25">lib_args<pos:position pos:line="464" pos:column="33"/></name><index pos:line="464" pos:column="33">[<expr><literal type="number" pos:line="464" pos:column="34">3<pos:position pos:line="464" pos:column="35"/></literal></expr>]<pos:position pos:line="464" pos:column="36"/></index></name></decl>;<pos:position pos:line="464" pos:column="37"/></decl_stmt>
<cpp:endif pos:line="465" pos:column="1">#<cpp:directive pos:line="465" pos:column="2">endif<pos:position pos:line="465" pos:column="7"/></cpp:directive></cpp:endif>
            <comment type="block" pos:line="466" pos:column="13">/* Removes compiler! */</comment>
            <expr_stmt><expr><name><name pos:line="467" pos:column="13">cmd_data<pos:position pos:line="467" pos:column="21"/></name><operator pos:line="467" pos:column="21">-&gt;<pos:position pos:line="467" pos:column="26"/></operator><name pos:line="467" pos:column="23">program<pos:position pos:line="467" pos:column="30"/></name></name> <operator pos:line="467" pos:column="31">=<pos:position pos:line="467" pos:column="32"/></operator> <name pos:line="467" pos:column="33">LIBRARIAN<pos:position pos:line="467" pos:column="42"/></name></expr>;<pos:position pos:line="467" pos:column="43"/></expr_stmt>
            <expr_stmt><expr><call><name pos:line="468" pos:column="13">push_count_chars<pos:position pos:line="468" pos:column="29"/></name><argument_list pos:line="468" pos:column="29">(<argument><expr><name><name pos:line="468" pos:column="30">cmd_data<pos:position pos:line="468" pos:column="38"/></name><operator pos:line="468" pos:column="38">-&gt;<pos:position pos:line="468" pos:column="43"/></operator><name pos:line="468" pos:column="40">program_opts<pos:position pos:line="468" pos:column="52"/></name></name></expr></argument>, <argument><expr><name pos:line="468" pos:column="54">LIBRARIAN_OPTS<pos:position pos:line="468" pos:column="68"/></name></expr></argument>)<pos:position pos:line="468" pos:column="69"/></argument_list></call></expr>;<pos:position pos:line="468" pos:column="70"/></expr_stmt>
            <expr_stmt><expr><call><name pos:line="469" pos:column="13">push_count_chars<pos:position pos:line="469" pos:column="29"/></name><argument_list pos:line="469" pos:column="29">(<argument><expr><name><name pos:line="469" pos:column="30">cmd_data<pos:position pos:line="469" pos:column="38"/></name><operator pos:line="469" pos:column="38">-&gt;<pos:position pos:line="469" pos:column="43"/></operator><name pos:line="469" pos:column="40">program_opts<pos:position pos:line="469" pos:column="52"/></name></name></expr></argument>,
                             <argument><expr><name><name pos:line="470" pos:column="30">cmd_data<pos:position pos:line="470" pos:column="38"/></name><operator pos:line="470" pos:column="38">-&gt;<pos:position pos:line="470" pos:column="43"/></operator><name pos:line="470" pos:column="40">static_name<pos:position pos:line="470" pos:column="51"/></name><operator pos:line="470" pos:column="51">.<pos:position pos:line="470" pos:column="52"/></operator><name pos:line="470" pos:column="52">normal<pos:position pos:line="470" pos:column="58"/></name></name></expr></argument>)<pos:position pos:line="470" pos:column="59"/></argument_list></call></expr>;<pos:position pos:line="470" pos:column="60"/></expr_stmt>

            <expr_stmt><expr><name pos:line="472" pos:column="13">rv<pos:position pos:line="472" pos:column="15"/></name> <operator pos:line="472" pos:column="16">=<pos:position pos:line="472" pos:column="17"/></operator> <call><name pos:line="472" pos:column="18">run_command<pos:position pos:line="472" pos:column="29"/></name><argument_list pos:line="472" pos:column="29">(<argument><expr><name pos:line="472" pos:column="30">cmd_data<pos:position pos:line="472" pos:column="38"/></name></expr></argument>, <argument><expr><name><name pos:line="472" pos:column="40">cmd_data<pos:position pos:line="472" pos:column="48"/></name><operator pos:line="472" pos:column="48">-&gt;<pos:position pos:line="472" pos:column="53"/></operator><name pos:line="472" pos:column="50">obj_files<pos:position pos:line="472" pos:column="59"/></name></name></expr></argument>)<pos:position pos:line="472" pos:column="60"/></argument_list></call></expr>;<pos:position pos:line="472" pos:column="61"/></expr_stmt>
            <if pos:line="473" pos:column="13">if <condition pos:line="473" pos:column="16">(<expr><name pos:line="473" pos:column="17">rv<pos:position pos:line="473" pos:column="19"/></name></expr>)<pos:position pos:line="473" pos:column="20"/></condition><then pos:line="473" pos:column="20"> <block pos:line="473" pos:column="21">{
                <return pos:line="474" pos:column="17">return <expr><name pos:line="474" pos:column="24">rv<pos:position pos:line="474" pos:column="26"/></name></expr>;<pos:position pos:line="474" pos:column="27"/></return>
            }<pos:position pos:line="475" pos:column="14"/></block></then></if>

<cpp:ifdef pos:line="477" pos:column="1">#<cpp:directive pos:line="477" pos:column="2">ifdef<pos:position pos:line="477" pos:column="7"/></cpp:directive> <name pos:line="477" pos:column="8">RANLIB<pos:position pos:line="477" pos:column="14"/></name></cpp:ifdef>
            <expr_stmt><expr><name><name pos:line="478" pos:column="13">lib_args<pos:position pos:line="478" pos:column="21"/></name><index pos:line="478" pos:column="21">[<expr><literal type="number" pos:line="478" pos:column="22">0<pos:position pos:line="478" pos:column="23"/></literal></expr>]<pos:position pos:line="478" pos:column="24"/></index></name> <operator pos:line="478" pos:column="25">=<pos:position pos:line="478" pos:column="26"/></operator> <name pos:line="478" pos:column="27">RANLIB<pos:position pos:line="478" pos:column="33"/></name></expr>;<pos:position pos:line="478" pos:column="34"/></expr_stmt>
            <expr_stmt><expr><name><name pos:line="479" pos:column="13">lib_args<pos:position pos:line="479" pos:column="21"/></name><index pos:line="479" pos:column="21">[<expr><literal type="number" pos:line="479" pos:column="22">1<pos:position pos:line="479" pos:column="23"/></literal></expr>]<pos:position pos:line="479" pos:column="24"/></index></name> <operator pos:line="479" pos:column="25">=<pos:position pos:line="479" pos:column="26"/></operator> <name><name pos:line="479" pos:column="27">cmd_data<pos:position pos:line="479" pos:column="35"/></name><operator pos:line="479" pos:column="35">-&gt;<pos:position pos:line="479" pos:column="40"/></operator><name pos:line="479" pos:column="37">static_name<pos:position pos:line="479" pos:column="48"/></name><operator pos:line="479" pos:column="48">.<pos:position pos:line="479" pos:column="49"/></operator><name pos:line="479" pos:column="49">normal<pos:position pos:line="479" pos:column="55"/></name></name></expr>;<pos:position pos:line="479" pos:column="56"/></expr_stmt>
            <expr_stmt><expr><name><name pos:line="480" pos:column="13">lib_args<pos:position pos:line="480" pos:column="21"/></name><index pos:line="480" pos:column="21">[<expr><literal type="number" pos:line="480" pos:column="22">2<pos:position pos:line="480" pos:column="23"/></literal></expr>]<pos:position pos:line="480" pos:column="24"/></index></name> <operator pos:line="480" pos:column="25">=<pos:position pos:line="480" pos:column="26"/></operator> <name pos:line="480" pos:column="27">NULL<pos:position pos:line="480" pos:column="31"/></name></expr>;<pos:position pos:line="480" pos:column="32"/></expr_stmt>
            <expr_stmt><expr><call><name pos:line="481" pos:column="13">external_spawn<pos:position pos:line="481" pos:column="27"/></name><argument_list pos:line="481" pos:column="27">(<argument><expr><name pos:line="481" pos:column="28">cmd_data<pos:position pos:line="481" pos:column="36"/></name></expr></argument>, <argument><expr><name pos:line="481" pos:column="38">RANLIB<pos:position pos:line="481" pos:column="44"/></name></expr></argument>, <argument><expr><name pos:line="481" pos:column="46">lib_args<pos:position pos:line="481" pos:column="54"/></name></expr></argument>)<pos:position pos:line="481" pos:column="55"/></argument_list></call></expr>;<pos:position pos:line="481" pos:column="56"/></expr_stmt>
<cpp:endif pos:line="482" pos:column="1">#<cpp:directive pos:line="482" pos:column="2">endif<pos:position pos:line="482" pos:column="7"/></cpp:directive></cpp:endif>
        }<pos:position pos:line="483" pos:column="10"/></block></then></if>

        <if pos:line="485" pos:column="9">if <condition pos:line="485" pos:column="12">(<expr><name><name pos:line="485" pos:column="13">cmd_data<pos:position pos:line="485" pos:column="21"/></name><operator pos:line="485" pos:column="21">-&gt;<pos:position pos:line="485" pos:column="26"/></operator><name pos:line="485" pos:column="23">output<pos:position pos:line="485" pos:column="29"/></name></name> <operator pos:line="485" pos:column="30">==<pos:position pos:line="485" pos:column="32"/></operator> <name pos:line="485" pos:column="33">otDynamicLibraryOnly<pos:position pos:line="485" pos:column="53"/></name> <operator pos:line="485" pos:column="54">||<pos:position pos:line="485" pos:column="56"/></operator>
            <name><name pos:line="486" pos:column="13">cmd_data<pos:position pos:line="486" pos:column="21"/></name><operator pos:line="486" pos:column="21">-&gt;<pos:position pos:line="486" pos:column="26"/></operator><name pos:line="486" pos:column="23">output<pos:position pos:line="486" pos:column="29"/></name></name> <operator pos:line="486" pos:column="30">==<pos:position pos:line="486" pos:column="32"/></operator> <name pos:line="486" pos:column="33">otModule<pos:position pos:line="486" pos:column="41"/></name> <operator pos:line="486" pos:column="42">||<pos:position pos:line="486" pos:column="44"/></operator>
            <name><name pos:line="487" pos:column="13">cmd_data<pos:position pos:line="487" pos:column="21"/></name><operator pos:line="487" pos:column="21">-&gt;<pos:position pos:line="487" pos:column="26"/></operator><name pos:line="487" pos:column="23">output<pos:position pos:line="487" pos:column="29"/></name></name> <operator pos:line="487" pos:column="30">==<pos:position pos:line="487" pos:column="32"/></operator> <name pos:line="487" pos:column="33">otLibrary<pos:position pos:line="487" pos:column="42"/></name></expr>)<pos:position pos:line="487" pos:column="43"/></condition><then pos:line="487" pos:column="43"> <block pos:line="487" pos:column="44">{
            <expr_stmt><expr><name><name pos:line="488" pos:column="13">cmd_data<pos:position pos:line="488" pos:column="21"/></name><operator pos:line="488" pos:column="21">-&gt;<pos:position pos:line="488" pos:column="26"/></operator><name pos:line="488" pos:column="23">program<pos:position pos:line="488" pos:column="30"/></name></name> <operator pos:line="488" pos:column="31">=<pos:position pos:line="488" pos:column="32"/></operator> <name pos:line="488" pos:column="33">NULL<pos:position pos:line="488" pos:column="37"/></name></expr>;<pos:position pos:line="488" pos:column="38"/></expr_stmt>
            <expr_stmt><expr><call><name pos:line="489" pos:column="13">clear_count_chars<pos:position pos:line="489" pos:column="30"/></name><argument_list pos:line="489" pos:column="30">(<argument><expr><name><name pos:line="489" pos:column="31">cmd_data<pos:position pos:line="489" pos:column="39"/></name><operator pos:line="489" pos:column="39">-&gt;<pos:position pos:line="489" pos:column="44"/></operator><name pos:line="489" pos:column="41">program_opts<pos:position pos:line="489" pos:column="53"/></name></name></expr></argument>)<pos:position pos:line="489" pos:column="54"/></argument_list></call></expr>;<pos:position pos:line="489" pos:column="55"/></expr_stmt>

            <expr_stmt><expr><call><name pos:line="491" pos:column="13">append_count_chars<pos:position pos:line="491" pos:column="31"/></name><argument_list pos:line="491" pos:column="31">(<argument><expr><name><name pos:line="491" pos:column="32">cmd_data<pos:position pos:line="491" pos:column="40"/></name><operator pos:line="491" pos:column="40">-&gt;<pos:position pos:line="491" pos:column="45"/></operator><name pos:line="491" pos:column="42">program_opts<pos:position pos:line="491" pos:column="54"/></name></name></expr></argument>, <argument><expr><name><name pos:line="491" pos:column="56">cmd_data<pos:position pos:line="491" pos:column="64"/></name><operator pos:line="491" pos:column="64">-&gt;<pos:position pos:line="491" pos:column="69"/></operator><name pos:line="491" pos:column="66">arglist<pos:position pos:line="491" pos:column="73"/></name></name></expr></argument>)<pos:position pos:line="491" pos:column="74"/></argument_list></call></expr>;<pos:position pos:line="491" pos:column="75"/></expr_stmt>
            <if pos:line="492" pos:column="13">if <condition pos:line="492" pos:column="16">(<expr><name><name pos:line="492" pos:column="17">cmd_data<pos:position pos:line="492" pos:column="25"/></name><operator pos:line="492" pos:column="25">-&gt;<pos:position pos:line="492" pos:column="30"/></operator><name pos:line="492" pos:column="27">output<pos:position pos:line="492" pos:column="33"/></name></name> <operator pos:line="492" pos:column="34">==<pos:position pos:line="492" pos:column="36"/></operator> <name pos:line="492" pos:column="37">otModule<pos:position pos:line="492" pos:column="45"/></name></expr>)<pos:position pos:line="492" pos:column="46"/></condition><then pos:line="492" pos:column="46"> <block pos:line="492" pos:column="47">{
<cpp:ifdef pos:line="493" pos:column="1">#<cpp:directive pos:line="493" pos:column="2">ifdef<pos:position pos:line="493" pos:column="7"/></cpp:directive> <name pos:line="493" pos:column="8">MODULE_OPTS<pos:position pos:line="493" pos:column="19"/></name></cpp:ifdef>
                <expr_stmt><expr><call><name pos:line="494" pos:column="17">push_count_chars<pos:position pos:line="494" pos:column="33"/></name><argument_list pos:line="494" pos:column="33">(<argument><expr><name><name pos:line="494" pos:column="34">cmd_data<pos:position pos:line="494" pos:column="42"/></name><operator pos:line="494" pos:column="42">-&gt;<pos:position pos:line="494" pos:column="47"/></operator><name pos:line="494" pos:column="44">program_opts<pos:position pos:line="494" pos:column="56"/></name></name></expr></argument>, <argument><expr><name pos:line="494" pos:column="58">MODULE_OPTS<pos:position pos:line="494" pos:column="69"/></name></expr></argument>)<pos:position pos:line="494" pos:column="70"/></argument_list></call></expr>;<pos:position pos:line="494" pos:column="71"/></expr_stmt>
<cpp:endif pos:line="495" pos:column="1">#<cpp:directive pos:line="495" pos:column="2">endif<pos:position pos:line="495" pos:column="7"/></cpp:directive></cpp:endif>
            }<pos:position pos:line="496" pos:column="14"/></block></then> <else pos:line="496" pos:column="15">else <block pos:line="496" pos:column="20">{
<cpp:ifdef pos:line="497" pos:column="1">#<cpp:directive pos:line="497" pos:column="2">ifdef<pos:position pos:line="497" pos:column="7"/></cpp:directive> <name pos:line="497" pos:column="8">SHARED_OPTS<pos:position pos:line="497" pos:column="19"/></name></cpp:ifdef>
                <expr_stmt><expr><call><name pos:line="498" pos:column="17">push_count_chars<pos:position pos:line="498" pos:column="33"/></name><argument_list pos:line="498" pos:column="33">(<argument><expr><name><name pos:line="498" pos:column="34">cmd_data<pos:position pos:line="498" pos:column="42"/></name><operator pos:line="498" pos:column="42">-&gt;<pos:position pos:line="498" pos:column="47"/></operator><name pos:line="498" pos:column="44">program_opts<pos:position pos:line="498" pos:column="56"/></name></name></expr></argument>, <argument><expr><name pos:line="498" pos:column="58">SHARED_OPTS<pos:position pos:line="498" pos:column="69"/></name></expr></argument>)<pos:position pos:line="498" pos:column="70"/></argument_list></call></expr>;<pos:position pos:line="498" pos:column="71"/></expr_stmt>
<cpp:endif pos:line="499" pos:column="1">#<cpp:directive pos:line="499" pos:column="2">endif<pos:position pos:line="499" pos:column="7"/></cpp:directive></cpp:endif>
<cpp:ifdef pos:line="500" pos:column="1">#<cpp:directive pos:line="500" pos:column="2">ifdef<pos:position pos:line="500" pos:column="7"/></cpp:directive> <name pos:line="500" pos:column="8">dynamic_link_version_func<pos:position pos:line="500" pos:column="33"/></name></cpp:ifdef>
                <expr_stmt><expr><call><name pos:line="501" pos:column="17">push_count_chars<pos:position pos:line="501" pos:column="33"/></name><argument_list pos:line="501" pos:column="33">(<argument><expr><name><name pos:line="501" pos:column="34">cmd_data<pos:position pos:line="501" pos:column="42"/></name><operator pos:line="501" pos:column="42">-&gt;<pos:position pos:line="501" pos:column="47"/></operator><name pos:line="501" pos:column="44">program_opts<pos:position pos:line="501" pos:column="56"/></name></name></expr></argument>,
                             <argument><expr><call><name pos:line="502" pos:column="30">dynamic_link_version_func<pos:position pos:line="502" pos:column="55"/></name><argument_list pos:line="502" pos:column="55">(<argument><expr><name><name pos:line="502" pos:column="56">cmd_data<pos:position pos:line="502" pos:column="64"/></name><operator pos:line="502" pos:column="64">-&gt;<pos:position pos:line="502" pos:column="69"/></operator><name pos:line="502" pos:column="66">version_info<pos:position pos:line="502" pos:column="78"/></name></name></expr></argument>)<pos:position pos:line="502" pos:column="79"/></argument_list></call></expr></argument>)<pos:position pos:line="502" pos:column="80"/></argument_list></call></expr>;<pos:position pos:line="502" pos:column="81"/></expr_stmt>
<cpp:endif pos:line="503" pos:column="1">#<cpp:directive pos:line="503" pos:column="2">endif<pos:position pos:line="503" pos:column="7"/></cpp:directive></cpp:endif>
            }<pos:position pos:line="504" pos:column="14"/></block></else></if>
            <expr_stmt><expr><call><name pos:line="505" pos:column="13">add_dynamic_link_opts<pos:position pos:line="505" pos:column="34"/></name><argument_list pos:line="505" pos:column="34">(<argument><expr><name pos:line="505" pos:column="35">cmd_data<pos:position pos:line="505" pos:column="43"/></name></expr></argument>, <argument><expr><name><name pos:line="505" pos:column="45">cmd_data<pos:position pos:line="505" pos:column="53"/></name><operator pos:line="505" pos:column="53">-&gt;<pos:position pos:line="505" pos:column="58"/></operator><name pos:line="505" pos:column="55">program_opts<pos:position pos:line="505" pos:column="67"/></name></name></expr></argument>)<pos:position pos:line="505" pos:column="68"/></argument_list></call></expr>;<pos:position pos:line="505" pos:column="69"/></expr_stmt>

            <expr_stmt><expr><name pos:line="507" pos:column="13">rv<pos:position pos:line="507" pos:column="15"/></name> <operator pos:line="507" pos:column="16">=<pos:position pos:line="507" pos:column="17"/></operator> <call><name pos:line="507" pos:column="18">run_command<pos:position pos:line="507" pos:column="29"/></name><argument_list pos:line="507" pos:column="29">(<argument><expr><name pos:line="507" pos:column="30">cmd_data<pos:position pos:line="507" pos:column="38"/></name></expr></argument>, <argument><expr><name><name pos:line="507" pos:column="40">cmd_data<pos:position pos:line="507" pos:column="48"/></name><operator pos:line="507" pos:column="48">-&gt;<pos:position pos:line="507" pos:column="53"/></operator><name pos:line="507" pos:column="50">shared_opts<pos:position pos:line="507" pos:column="61"/></name><operator pos:line="507" pos:column="61">.<pos:position pos:line="507" pos:column="62"/></operator><name pos:line="507" pos:column="62">normal<pos:position pos:line="507" pos:column="68"/></name></name></expr></argument>)<pos:position pos:line="507" pos:column="69"/></argument_list></call></expr>;<pos:position pos:line="507" pos:column="70"/></expr_stmt>
            <if pos:line="508" pos:column="13">if <condition pos:line="508" pos:column="16">(<expr><name pos:line="508" pos:column="17">rv<pos:position pos:line="508" pos:column="19"/></name></expr>)<pos:position pos:line="508" pos:column="20"/></condition><then pos:line="508" pos:column="20"> <block pos:line="508" pos:column="21">{
                <return pos:line="509" pos:column="17">return <expr><name pos:line="509" pos:column="24">rv<pos:position pos:line="509" pos:column="26"/></name></expr>;<pos:position pos:line="509" pos:column="27"/></return>
            }<pos:position pos:line="510" pos:column="14"/></block></then></if>
        }<pos:position pos:line="511" pos:column="10"/></block></then></if>
        <if pos:line="512" pos:column="9">if <condition pos:line="512" pos:column="12">(<expr><name><name pos:line="512" pos:column="13">cmd_data<pos:position pos:line="512" pos:column="21"/></name><operator pos:line="512" pos:column="21">-&gt;<pos:position pos:line="512" pos:column="26"/></operator><name pos:line="512" pos:column="23">output<pos:position pos:line="512" pos:column="29"/></name></name> <operator pos:line="512" pos:column="30">==<pos:position pos:line="512" pos:column="32"/></operator> <name pos:line="512" pos:column="33">otProgram<pos:position pos:line="512" pos:column="42"/></name></expr>)<pos:position pos:line="512" pos:column="43"/></condition><then pos:line="512" pos:column="43"> <block pos:line="512" pos:column="44">{
            <expr_stmt><expr><name pos:line="513" pos:column="13">rv<pos:position pos:line="513" pos:column="15"/></name> <operator pos:line="513" pos:column="16">=<pos:position pos:line="513" pos:column="17"/></operator> <call><name pos:line="513" pos:column="18">run_command<pos:position pos:line="513" pos:column="29"/></name><argument_list pos:line="513" pos:column="29">(<argument><expr><name pos:line="513" pos:column="30">cmd_data<pos:position pos:line="513" pos:column="38"/></name></expr></argument>, <argument><expr><name><name pos:line="513" pos:column="40">cmd_data<pos:position pos:line="513" pos:column="48"/></name><operator pos:line="513" pos:column="48">-&gt;<pos:position pos:line="513" pos:column="53"/></operator><name pos:line="513" pos:column="50">arglist<pos:position pos:line="513" pos:column="57"/></name></name></expr></argument>)<pos:position pos:line="513" pos:column="58"/></argument_list></call></expr>;<pos:position pos:line="513" pos:column="59"/></expr_stmt>
            <if pos:line="514" pos:column="13">if <condition pos:line="514" pos:column="16">(<expr><name pos:line="514" pos:column="17">rv<pos:position pos:line="514" pos:column="19"/></name></expr>)<pos:position pos:line="514" pos:column="20"/></condition><then pos:line="514" pos:column="20"> <block pos:line="514" pos:column="21">{
                <return pos:line="515" pos:column="17">return <expr><name pos:line="515" pos:column="24">rv<pos:position pos:line="515" pos:column="26"/></name></expr>;<pos:position pos:line="515" pos:column="27"/></return>
            }<pos:position pos:line="516" pos:column="14"/></block></then></if>
        }<pos:position pos:line="517" pos:column="10"/></block></then></if>
        <break pos:line="518" pos:column="9">break;<pos:position pos:line="518" pos:column="15"/></break>
    <default pos:line="519" pos:column="5">default:<pos:position pos:line="519" pos:column="13"/></default>
        <break pos:line="520" pos:column="9">break;<pos:position pos:line="520" pos:column="15"/></break>
    }<pos:position pos:line="521" pos:column="6"/></block></switch> 

    <return pos:line="523" pos:column="5">return <expr><literal type="number" pos:line="523" pos:column="12">0<pos:position pos:line="523" pos:column="13"/></literal></expr>;<pos:position pos:line="523" pos:column="14"/></return>
}<pos:position pos:line="524" pos:column="2"/></block></function>

<function><type><name pos:line="526" pos:column="1">void<pos:position pos:line="526" pos:column="5"/></name></type> <name pos:line="526" pos:column="6">cleanup_tmp_dir<pos:position pos:line="526" pos:column="21"/></name><parameter_list pos:line="526" pos:column="21">(<parameter><decl><type><specifier pos:line="526" pos:column="22">const<pos:position pos:line="526" pos:column="27"/></specifier> <name pos:line="526" pos:column="28">char<pos:position pos:line="526" pos:column="32"/></name> <modifier pos:line="526" pos:column="33">*<pos:position pos:line="526" pos:column="34"/></modifier></type><name pos:line="526" pos:column="34">dirname<pos:position pos:line="526" pos:column="41"/></name></decl></parameter>)<pos:position pos:line="526" pos:column="42"/></parameter_list>
<block pos:line="527" pos:column="1">{
    <decl_stmt><decl><type><name pos:line="528" pos:column="5">DIR<pos:position pos:line="528" pos:column="8"/></name> <modifier pos:line="528" pos:column="9">*<pos:position pos:line="528" pos:column="10"/></modifier></type><name pos:line="528" pos:column="10">dir<pos:position pos:line="528" pos:column="13"/></name></decl>;<pos:position pos:line="528" pos:column="14"/></decl_stmt>
    <decl_stmt><decl><type><name><name pos:line="529" pos:column="5">struct<pos:position pos:line="529" pos:column="11"/></name> <name pos:line="529" pos:column="12">dirent<pos:position pos:line="529" pos:column="18"/></name></name> <modifier pos:line="529" pos:column="19">*<pos:position pos:line="529" pos:column="20"/></modifier></type><name pos:line="529" pos:column="20">entry<pos:position pos:line="529" pos:column="25"/></name></decl>;<pos:position pos:line="529" pos:column="26"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="530" pos:column="5">char<pos:position pos:line="530" pos:column="9"/></name></type> <name><name pos:line="530" pos:column="10">fullname<pos:position pos:line="530" pos:column="18"/></name><index pos:line="530" pos:column="18">[<expr><literal type="number" pos:line="530" pos:column="19">1024<pos:position pos:line="530" pos:column="23"/></literal></expr>]<pos:position pos:line="530" pos:column="24"/></index></name></decl>;<pos:position pos:line="530" pos:column="25"/></decl_stmt>

    <expr_stmt><expr><name pos:line="532" pos:column="5">dir<pos:position pos:line="532" pos:column="8"/></name> <operator pos:line="532" pos:column="9">=<pos:position pos:line="532" pos:column="10"/></operator> <call><name pos:line="532" pos:column="11">opendir<pos:position pos:line="532" pos:column="18"/></name><argument_list pos:line="532" pos:column="18">(<argument><expr><name pos:line="532" pos:column="19">dirname<pos:position pos:line="532" pos:column="26"/></name></expr></argument>)<pos:position pos:line="532" pos:column="27"/></argument_list></call></expr>;<pos:position pos:line="532" pos:column="28"/></expr_stmt>

    <if pos:line="534" pos:column="5">if <condition pos:line="534" pos:column="8">(<expr><name pos:line="534" pos:column="9">dir<pos:position pos:line="534" pos:column="12"/></name> <operator pos:line="534" pos:column="13">==<pos:position pos:line="534" pos:column="15"/></operator> <name pos:line="534" pos:column="16">NULL<pos:position pos:line="534" pos:column="20"/></name></expr>)<pos:position pos:line="534" pos:column="21"/></condition><then pos:line="534" pos:column="21">
        <block type="pseudo"><return pos:line="535" pos:column="9">return;<pos:position pos:line="535" pos:column="16"/></return></block></then></if>

    <while pos:line="537" pos:column="5">while <condition pos:line="537" pos:column="11">(<expr><operator pos:line="537" pos:column="12">(<pos:position pos:line="537" pos:column="13"/></operator><name pos:line="537" pos:column="13">entry<pos:position pos:line="537" pos:column="18"/></name> <operator pos:line="537" pos:column="19">=<pos:position pos:line="537" pos:column="20"/></operator> <call><name pos:line="537" pos:column="21">readdir<pos:position pos:line="537" pos:column="28"/></name><argument_list pos:line="537" pos:column="28">(<argument><expr><name pos:line="537" pos:column="29">dir<pos:position pos:line="537" pos:column="32"/></name></expr></argument>)<pos:position pos:line="537" pos:column="33"/></argument_list></call><operator pos:line="537" pos:column="33">)<pos:position pos:line="537" pos:column="34"/></operator> <operator pos:line="537" pos:column="35">!=<pos:position pos:line="537" pos:column="37"/></operator> <name pos:line="537" pos:column="38">NULL<pos:position pos:line="537" pos:column="42"/></name></expr>)<pos:position pos:line="537" pos:column="43"/></condition> <block pos:line="537" pos:column="44">{
        <if pos:line="538" pos:column="9">if <condition pos:line="538" pos:column="12">(<expr><name><name pos:line="538" pos:column="13">entry<pos:position pos:line="538" pos:column="18"/></name><operator pos:line="538" pos:column="18">-&gt;<pos:position pos:line="538" pos:column="23"/></operator><name pos:line="538" pos:column="20">d_name<pos:position pos:line="538" pos:column="26"/></name><index pos:line="538" pos:column="26">[<expr><literal type="number" pos:line="538" pos:column="27">0<pos:position pos:line="538" pos:column="28"/></literal></expr>]<pos:position pos:line="538" pos:column="29"/></index></name> <operator pos:line="538" pos:column="30">!=<pos:position pos:line="538" pos:column="32"/></operator> <literal type="char" pos:line="538" pos:column="33">'.'<pos:position pos:line="538" pos:column="36"/></literal></expr>)<pos:position pos:line="538" pos:column="37"/></condition><then pos:line="538" pos:column="37"> <block pos:line="538" pos:column="38">{
            <expr_stmt><expr><call><name pos:line="539" pos:column="13">strcpy<pos:position pos:line="539" pos:column="19"/></name><argument_list pos:line="539" pos:column="19">(<argument><expr><name pos:line="539" pos:column="20">fullname<pos:position pos:line="539" pos:column="28"/></name></expr></argument>, <argument><expr><name pos:line="539" pos:column="30">dirname<pos:position pos:line="539" pos:column="37"/></name></expr></argument>)<pos:position pos:line="539" pos:column="38"/></argument_list></call></expr>;<pos:position pos:line="539" pos:column="39"/></expr_stmt>
            <expr_stmt><expr><call><name pos:line="540" pos:column="13">strcat<pos:position pos:line="540" pos:column="19"/></name><argument_list pos:line="540" pos:column="19">(<argument><expr><name pos:line="540" pos:column="20">fullname<pos:position pos:line="540" pos:column="28"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="540" pos:column="30">"/"<pos:position pos:line="540" pos:column="33"/></literal></expr></argument>)<pos:position pos:line="540" pos:column="34"/></argument_list></call></expr>;<pos:position pos:line="540" pos:column="35"/></expr_stmt>
            <expr_stmt><expr><call><name pos:line="541" pos:column="13">strcat<pos:position pos:line="541" pos:column="19"/></name><argument_list pos:line="541" pos:column="19">(<argument><expr><name pos:line="541" pos:column="20">fullname<pos:position pos:line="541" pos:column="28"/></name></expr></argument>, <argument><expr><name><name pos:line="541" pos:column="30">entry<pos:position pos:line="541" pos:column="35"/></name><operator pos:line="541" pos:column="35">-&gt;<pos:position pos:line="541" pos:column="40"/></operator><name pos:line="541" pos:column="37">d_name<pos:position pos:line="541" pos:column="43"/></name></name></expr></argument>)<pos:position pos:line="541" pos:column="44"/></argument_list></call></expr>;<pos:position pos:line="541" pos:column="45"/></expr_stmt>
            <expr_stmt><expr><call><name pos:line="542" pos:column="13">remove<pos:position pos:line="542" pos:column="19"/></name><argument_list pos:line="542" pos:column="19">(<argument><expr><name pos:line="542" pos:column="20">fullname<pos:position pos:line="542" pos:column="28"/></name></expr></argument>)<pos:position pos:line="542" pos:column="29"/></argument_list></call></expr>;<pos:position pos:line="542" pos:column="30"/></expr_stmt>
        }<pos:position pos:line="543" pos:column="10"/></block></then></if>
    }<pos:position pos:line="544" pos:column="6"/></block></while>

    <expr_stmt><expr><call><name pos:line="546" pos:column="5">rmdir<pos:position pos:line="546" pos:column="10"/></name><argument_list pos:line="546" pos:column="10">(<argument><expr><name pos:line="546" pos:column="11">dirname<pos:position pos:line="546" pos:column="18"/></name></expr></argument>)<pos:position pos:line="546" pos:column="19"/></argument_list></call></expr>;<pos:position pos:line="546" pos:column="20"/></expr_stmt>
}<pos:position pos:line="547" pos:column="2"/></block></function>

<function><type><name pos:line="549" pos:column="1">void<pos:position pos:line="549" pos:column="5"/></name></type> <name pos:line="549" pos:column="6">cleanup_tmp_dirs<pos:position pos:line="549" pos:column="22"/></name><parameter_list pos:line="549" pos:column="22">(<parameter><decl><type><name pos:line="549" pos:column="23">command_t<pos:position pos:line="549" pos:column="32"/></name> <modifier pos:line="549" pos:column="33">*<pos:position pos:line="549" pos:column="34"/></modifier></type><name pos:line="549" pos:column="34">cmd_data<pos:position pos:line="549" pos:column="42"/></name></decl></parameter>)<pos:position pos:line="549" pos:column="43"/></parameter_list>
<block pos:line="550" pos:column="1">{
    <decl_stmt><decl><type><name pos:line="551" pos:column="5">int<pos:position pos:line="551" pos:column="8"/></name></type> <name pos:line="551" pos:column="9">d<pos:position pos:line="551" pos:column="10"/></name></decl>;<pos:position pos:line="551" pos:column="11"/></decl_stmt>

    <for pos:line="553" pos:column="5">for <control pos:line="553" pos:column="9">(<init><expr><name pos:line="553" pos:column="10">d<pos:position pos:line="553" pos:column="11"/></name> <operator pos:line="553" pos:column="12">=<pos:position pos:line="553" pos:column="13"/></operator> <literal type="number" pos:line="553" pos:column="14">0<pos:position pos:line="553" pos:column="15"/></literal></expr>;<pos:position pos:line="553" pos:column="16"/></init> <condition><expr><name pos:line="553" pos:column="17">d<pos:position pos:line="553" pos:column="18"/></name> <operator pos:line="553" pos:column="19">&lt;<pos:position pos:line="553" pos:column="23"/></operator> <name><name pos:line="553" pos:column="21">cmd_data<pos:position pos:line="553" pos:column="29"/></name><operator pos:line="553" pos:column="29">-&gt;<pos:position pos:line="553" pos:column="34"/></operator><name pos:line="553" pos:column="31">tmp_dirs<pos:position pos:line="553" pos:column="39"/></name><operator pos:line="553" pos:column="39">-&gt;<pos:position pos:line="553" pos:column="44"/></operator><name pos:line="553" pos:column="41">num<pos:position pos:line="553" pos:column="44"/></name></name></expr>;<pos:position pos:line="553" pos:column="45"/></condition> <incr><expr><name pos:line="553" pos:column="46">d<pos:position pos:line="553" pos:column="47"/></name><operator pos:line="553" pos:column="47">++<pos:position pos:line="553" pos:column="49"/></operator></expr></incr>)<pos:position pos:line="553" pos:column="50"/></control> <block pos:line="553" pos:column="51">{
        <expr_stmt><expr><call><name pos:line="554" pos:column="9">cleanup_tmp_dir<pos:position pos:line="554" pos:column="24"/></name><argument_list pos:line="554" pos:column="24">(<argument><expr><name><name pos:line="554" pos:column="25">cmd_data<pos:position pos:line="554" pos:column="33"/></name><operator pos:line="554" pos:column="33">-&gt;<pos:position pos:line="554" pos:column="38"/></operator><name pos:line="554" pos:column="35">tmp_dirs<pos:position pos:line="554" pos:column="43"/></name><operator pos:line="554" pos:column="43">-&gt;<pos:position pos:line="554" pos:column="48"/></operator><name pos:line="554" pos:column="45">vals<pos:position pos:line="554" pos:column="49"/></name><index pos:line="554" pos:column="49">[<expr><name pos:line="554" pos:column="50">d<pos:position pos:line="554" pos:column="51"/></name></expr>]<pos:position pos:line="554" pos:column="52"/></index></name></expr></argument>)<pos:position pos:line="554" pos:column="53"/></argument_list></call></expr>;<pos:position pos:line="554" pos:column="54"/></expr_stmt>
    }<pos:position pos:line="555" pos:column="6"/></block></for>
}<pos:position pos:line="556" pos:column="2"/></block></function>

<function><type><name pos:line="558" pos:column="1">int<pos:position pos:line="558" pos:column="4"/></name></type> <name pos:line="558" pos:column="5">ensure_fake_uptodate<pos:position pos:line="558" pos:column="25"/></name><parameter_list pos:line="558" pos:column="25">(<parameter><decl><type><name pos:line="558" pos:column="26">command_t<pos:position pos:line="558" pos:column="35"/></name> <modifier pos:line="558" pos:column="36">*<pos:position pos:line="558" pos:column="37"/></modifier></type><name pos:line="558" pos:column="37">cmd_data<pos:position pos:line="558" pos:column="45"/></name></decl></parameter>)<pos:position pos:line="558" pos:column="46"/></parameter_list>
<block pos:line="559" pos:column="1">{
    <comment type="block" pos:line="560" pos:column="5">/* FIXME: could do the stat/touch here, but nah... */</comment>
    <decl_stmt><decl><type><specifier pos:line="561" pos:column="5">const<pos:position pos:line="561" pos:column="10"/></specifier> <name pos:line="561" pos:column="11">char<pos:position pos:line="561" pos:column="15"/></name> <modifier pos:line="561" pos:column="16">*<pos:position pos:line="561" pos:column="17"/></modifier></type><name><name pos:line="561" pos:column="17">touch_args<pos:position pos:line="561" pos:column="27"/></name><index pos:line="561" pos:column="27">[<expr><literal type="number" pos:line="561" pos:column="28">3<pos:position pos:line="561" pos:column="29"/></literal></expr>]<pos:position pos:line="561" pos:column="30"/></index></name></decl>;<pos:position pos:line="561" pos:column="31"/></decl_stmt>

    <if pos:line="563" pos:column="5">if <condition pos:line="563" pos:column="8">(<expr><name><name pos:line="563" pos:column="9">cmd_data<pos:position pos:line="563" pos:column="17"/></name><operator pos:line="563" pos:column="17">-&gt;<pos:position pos:line="563" pos:column="22"/></operator><name pos:line="563" pos:column="19">mode<pos:position pos:line="563" pos:column="23"/></name></name> <operator pos:line="563" pos:column="24">==<pos:position pos:line="563" pos:column="26"/></operator> <name pos:line="563" pos:column="27">mInstall<pos:position pos:line="563" pos:column="35"/></name></expr>)<pos:position pos:line="563" pos:column="36"/></condition><then pos:line="563" pos:column="36"> <block pos:line="563" pos:column="37">{
        <return pos:line="564" pos:column="9">return <expr><literal type="number" pos:line="564" pos:column="16">0<pos:position pos:line="564" pos:column="17"/></literal></expr>;<pos:position pos:line="564" pos:column="18"/></return>
    }<pos:position pos:line="565" pos:column="6"/></block></then></if>
    <if pos:line="566" pos:column="5">if <condition pos:line="566" pos:column="8">(<expr><operator pos:line="566" pos:column="9">!<pos:position pos:line="566" pos:column="10"/></operator><name><name pos:line="566" pos:column="10">cmd_data<pos:position pos:line="566" pos:column="18"/></name><operator pos:line="566" pos:column="18">-&gt;<pos:position pos:line="566" pos:column="23"/></operator><name pos:line="566" pos:column="20">fake_output_name<pos:position pos:line="566" pos:column="36"/></name></name></expr>)<pos:position pos:line="566" pos:column="37"/></condition><then pos:line="566" pos:column="37"> <block pos:line="566" pos:column="38">{
        <return pos:line="567" pos:column="9">return <expr><literal type="number" pos:line="567" pos:column="16">0<pos:position pos:line="567" pos:column="17"/></literal></expr>;<pos:position pos:line="567" pos:column="18"/></return>
    }<pos:position pos:line="568" pos:column="6"/></block></then></if>

    <expr_stmt><expr><name><name pos:line="570" pos:column="5">touch_args<pos:position pos:line="570" pos:column="15"/></name><index pos:line="570" pos:column="15">[<expr><literal type="number" pos:line="570" pos:column="16">0<pos:position pos:line="570" pos:column="17"/></literal></expr>]<pos:position pos:line="570" pos:column="18"/></index></name> <operator pos:line="570" pos:column="19">=<pos:position pos:line="570" pos:column="20"/></operator> <literal type="string" pos:line="570" pos:column="21">"touch"<pos:position pos:line="570" pos:column="28"/></literal></expr>;<pos:position pos:line="570" pos:column="29"/></expr_stmt>
    <expr_stmt><expr><name><name pos:line="571" pos:column="5">touch_args<pos:position pos:line="571" pos:column="15"/></name><index pos:line="571" pos:column="15">[<expr><literal type="number" pos:line="571" pos:column="16">1<pos:position pos:line="571" pos:column="17"/></literal></expr>]<pos:position pos:line="571" pos:column="18"/></index></name> <operator pos:line="571" pos:column="19">=<pos:position pos:line="571" pos:column="20"/></operator> <name><name pos:line="571" pos:column="21">cmd_data<pos:position pos:line="571" pos:column="29"/></name><operator pos:line="571" pos:column="29">-&gt;<pos:position pos:line="571" pos:column="34"/></operator><name pos:line="571" pos:column="31">fake_output_name<pos:position pos:line="571" pos:column="47"/></name></name></expr>;<pos:position pos:line="571" pos:column="48"/></expr_stmt>
    <expr_stmt><expr><name><name pos:line="572" pos:column="5">touch_args<pos:position pos:line="572" pos:column="15"/></name><index pos:line="572" pos:column="15">[<expr><literal type="number" pos:line="572" pos:column="16">2<pos:position pos:line="572" pos:column="17"/></literal></expr>]<pos:position pos:line="572" pos:column="18"/></index></name> <operator pos:line="572" pos:column="19">=<pos:position pos:line="572" pos:column="20"/></operator> <name pos:line="572" pos:column="21">NULL<pos:position pos:line="572" pos:column="25"/></name></expr>;<pos:position pos:line="572" pos:column="26"/></expr_stmt>
    <return pos:line="573" pos:column="5">return <expr><call><name pos:line="573" pos:column="12">external_spawn<pos:position pos:line="573" pos:column="26"/></name><argument_list pos:line="573" pos:column="26">(<argument><expr><name pos:line="573" pos:column="27">cmd_data<pos:position pos:line="573" pos:column="35"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="573" pos:column="37">"touch"<pos:position pos:line="573" pos:column="44"/></literal></expr></argument>, <argument><expr><name pos:line="573" pos:column="46">touch_args<pos:position pos:line="573" pos:column="56"/></name></expr></argument>)<pos:position pos:line="573" pos:column="57"/></argument_list></call></expr>;<pos:position pos:line="573" pos:column="58"/></return>
}<pos:position pos:line="574" pos:column="2"/></block></function>

<comment type="block" pos:line="576" pos:column="1">/* Store the install path in the *.la file */</comment>
<function><type><name pos:line="577" pos:column="1">int<pos:position pos:line="577" pos:column="4"/></name></type> <name pos:line="577" pos:column="5">add_for_runtime<pos:position pos:line="577" pos:column="20"/></name><parameter_list pos:line="577" pos:column="20">(<parameter><decl><type><name pos:line="577" pos:column="21">command_t<pos:position pos:line="577" pos:column="30"/></name> <modifier pos:line="577" pos:column="31">*<pos:position pos:line="577" pos:column="32"/></modifier></type><name pos:line="577" pos:column="32">cmd_data<pos:position pos:line="577" pos:column="40"/></name></decl></parameter>)<pos:position pos:line="577" pos:column="41"/></parameter_list>
<block pos:line="578" pos:column="1">{
    <if pos:line="579" pos:column="5">if <condition pos:line="579" pos:column="8">(<expr><name><name pos:line="579" pos:column="9">cmd_data<pos:position pos:line="579" pos:column="17"/></name><operator pos:line="579" pos:column="17">-&gt;<pos:position pos:line="579" pos:column="22"/></operator><name pos:line="579" pos:column="19">mode<pos:position pos:line="579" pos:column="23"/></name></name> <operator pos:line="579" pos:column="24">==<pos:position pos:line="579" pos:column="26"/></operator> <name pos:line="579" pos:column="27">mInstall<pos:position pos:line="579" pos:column="35"/></name></expr>)<pos:position pos:line="579" pos:column="36"/></condition><then pos:line="579" pos:column="36"> <block pos:line="579" pos:column="37">{
        <return pos:line="580" pos:column="9">return <expr><literal type="number" pos:line="580" pos:column="16">0<pos:position pos:line="580" pos:column="17"/></literal></expr>;<pos:position pos:line="580" pos:column="18"/></return>
    }<pos:position pos:line="581" pos:column="6"/></block></then></if>
    <if pos:line="582" pos:column="5">if <condition pos:line="582" pos:column="8">(<expr><name><name pos:line="582" pos:column="9">cmd_data<pos:position pos:line="582" pos:column="17"/></name><operator pos:line="582" pos:column="17">-&gt;<pos:position pos:line="582" pos:column="22"/></operator><name pos:line="582" pos:column="19">output<pos:position pos:line="582" pos:column="25"/></name></name> <operator pos:line="582" pos:column="26">==<pos:position pos:line="582" pos:column="28"/></operator> <name pos:line="582" pos:column="29">otDynamicLibraryOnly<pos:position pos:line="582" pos:column="49"/></name> <operator pos:line="582" pos:column="50">||<pos:position pos:line="582" pos:column="52"/></operator>
        <name><name pos:line="583" pos:column="9">cmd_data<pos:position pos:line="583" pos:column="17"/></name><operator pos:line="583" pos:column="17">-&gt;<pos:position pos:line="583" pos:column="22"/></operator><name pos:line="583" pos:column="19">output<pos:position pos:line="583" pos:column="25"/></name></name> <operator pos:line="583" pos:column="26">==<pos:position pos:line="583" pos:column="28"/></operator> <name pos:line="583" pos:column="29">otLibrary<pos:position pos:line="583" pos:column="38"/></name></expr>)<pos:position pos:line="583" pos:column="39"/></condition><then pos:line="583" pos:column="39"> <block pos:line="583" pos:column="40">{
        <decl_stmt><decl><type><name pos:line="584" pos:column="9">FILE<pos:position pos:line="584" pos:column="13"/></name> <modifier pos:line="584" pos:column="14">*<pos:position pos:line="584" pos:column="15"/></modifier></type><name pos:line="584" pos:column="15">f<pos:position pos:line="584" pos:column="16"/></name><init pos:line="584" pos:column="16">=<expr><call><name pos:line="584" pos:column="17">fopen<pos:position pos:line="584" pos:column="22"/></name><argument_list pos:line="584" pos:column="22">(<argument><expr><name><name pos:line="584" pos:column="23">cmd_data<pos:position pos:line="584" pos:column="31"/></name><operator pos:line="584" pos:column="31">-&gt;<pos:position pos:line="584" pos:column="36"/></operator><name pos:line="584" pos:column="33">fake_output_name<pos:position pos:line="584" pos:column="49"/></name></name></expr></argument>,<argument><expr><literal type="string" pos:line="584" pos:column="50">"w"<pos:position pos:line="584" pos:column="53"/></literal></expr></argument>)<pos:position pos:line="584" pos:column="54"/></argument_list></call></expr></init></decl>;<pos:position pos:line="584" pos:column="55"/></decl_stmt>
        <if pos:line="585" pos:column="9">if <condition pos:line="585" pos:column="12">(<expr><name pos:line="585" pos:column="13">f<pos:position pos:line="585" pos:column="14"/></name> <operator pos:line="585" pos:column="15">==<pos:position pos:line="585" pos:column="17"/></operator> <name pos:line="585" pos:column="18">NULL<pos:position pos:line="585" pos:column="22"/></name></expr>)<pos:position pos:line="585" pos:column="23"/></condition><then pos:line="585" pos:column="23"> <block pos:line="585" pos:column="24">{
            <return pos:line="586" pos:column="13">return <expr><operator pos:line="586" pos:column="20">-<pos:position pos:line="586" pos:column="21"/></operator><literal type="number" pos:line="586" pos:column="21">1<pos:position pos:line="586" pos:column="22"/></literal></expr>;<pos:position pos:line="586" pos:column="23"/></return>
        }<pos:position pos:line="587" pos:column="10"/></block></then></if>
        <expr_stmt><expr><call><name pos:line="588" pos:column="9">fprintf<pos:position pos:line="588" pos:column="16"/></name><argument_list pos:line="588" pos:column="16">(<argument><expr><name pos:line="588" pos:column="17">f<pos:position pos:line="588" pos:column="18"/></name></expr></argument>,<argument><expr><literal type="string" pos:line="588" pos:column="19">"%s\n"<pos:position pos:line="588" pos:column="25"/></literal></expr></argument>, <argument><expr><name><name pos:line="588" pos:column="27">cmd_data<pos:position pos:line="588" pos:column="35"/></name><operator pos:line="588" pos:column="35">-&gt;<pos:position pos:line="588" pos:column="40"/></operator><name pos:line="588" pos:column="37">install_path<pos:position pos:line="588" pos:column="49"/></name></name></expr></argument>)<pos:position pos:line="588" pos:column="50"/></argument_list></call></expr>;<pos:position pos:line="588" pos:column="51"/></expr_stmt>
        <expr_stmt><expr><call><name pos:line="589" pos:column="9">fclose<pos:position pos:line="589" pos:column="15"/></name><argument_list pos:line="589" pos:column="15">(<argument><expr><name pos:line="589" pos:column="16">f<pos:position pos:line="589" pos:column="17"/></name></expr></argument>)<pos:position pos:line="589" pos:column="18"/></argument_list></call></expr>;<pos:position pos:line="589" pos:column="19"/></expr_stmt>
        <return pos:line="590" pos:column="9">return<expr><operator pos:line="590" pos:column="15">(<pos:position pos:line="590" pos:column="16"/></operator><literal type="number" pos:line="590" pos:column="16">0<pos:position pos:line="590" pos:column="17"/></literal><operator pos:line="590" pos:column="17">)<pos:position pos:line="590" pos:column="18"/></operator></expr>;<pos:position pos:line="590" pos:column="19"/></return>
    }<pos:position pos:line="591" pos:column="6"/></block></then> <else pos:line="591" pos:column="7">else <block pos:line="591" pos:column="12">{
        <return pos:line="592" pos:column="9">return<expr><operator pos:line="592" pos:column="15">(<pos:position pos:line="592" pos:column="16"/></operator><call><name pos:line="592" pos:column="16">ensure_fake_uptodate<pos:position pos:line="592" pos:column="36"/></name><argument_list pos:line="592" pos:column="36">(<argument><expr><name pos:line="592" pos:column="37">cmd_data<pos:position pos:line="592" pos:column="45"/></name></expr></argument>)<pos:position pos:line="592" pos:column="46"/></argument_list></call><operator pos:line="592" pos:column="46">)<pos:position pos:line="592" pos:column="47"/></operator></expr>;<pos:position pos:line="592" pos:column="48"/></return>
    }<pos:position pos:line="593" pos:column="6"/></block></else></if>
}<pos:position pos:line="594" pos:column="2"/></block></function>

<function><type><name pos:line="596" pos:column="1">int<pos:position pos:line="596" pos:column="4"/></name></type> <name pos:line="596" pos:column="5">main<pos:position pos:line="596" pos:column="9"/></name><parameter_list pos:line="596" pos:column="9">(<parameter><decl><type><name pos:line="596" pos:column="10">int<pos:position pos:line="596" pos:column="13"/></name></type> <name pos:line="596" pos:column="14">argc<pos:position pos:line="596" pos:column="18"/></name></decl></parameter>, <parameter><decl><type><name pos:line="596" pos:column="20">char<pos:position pos:line="596" pos:column="24"/></name> <modifier pos:line="596" pos:column="25">*<pos:position pos:line="596" pos:column="26"/></modifier></type><name><name pos:line="596" pos:column="26">argv<pos:position pos:line="596" pos:column="30"/></name><index pos:line="596" pos:column="30">[]<pos:position pos:line="596" pos:column="32"/></index></name></decl></parameter>)<pos:position pos:line="596" pos:column="33"/></parameter_list>
<block pos:line="597" pos:column="1">{
    <decl_stmt><decl><type><name pos:line="598" pos:column="5">int<pos:position pos:line="598" pos:column="8"/></name></type> <name pos:line="598" pos:column="9">rc<pos:position pos:line="598" pos:column="11"/></name></decl>;<pos:position pos:line="598" pos:column="12"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="599" pos:column="5">command_t<pos:position pos:line="599" pos:column="14"/></name></type> <name pos:line="599" pos:column="15">cmd_data<pos:position pos:line="599" pos:column="23"/></name></decl>;<pos:position pos:line="599" pos:column="24"/></decl_stmt>

    <expr_stmt><expr><call><name pos:line="601" pos:column="5">memset<pos:position pos:line="601" pos:column="11"/></name><argument_list pos:line="601" pos:column="11">(<argument><expr><operator pos:line="601" pos:column="12">&amp;<pos:position pos:line="601" pos:column="17"/></operator><name pos:line="601" pos:column="13">cmd_data<pos:position pos:line="601" pos:column="21"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="601" pos:column="23">0<pos:position pos:line="601" pos:column="24"/></literal></expr></argument>, <argument><expr><sizeof pos:line="601" pos:column="26">sizeof<argument_list pos:line="601" pos:column="32">(<argument><expr><name pos:line="601" pos:column="33">cmd_data<pos:position pos:line="601" pos:column="41"/></name></expr></argument>)<pos:position pos:line="601" pos:column="42"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="601" pos:column="43"/></argument_list></call></expr>;<pos:position pos:line="601" pos:column="44"/></expr_stmt>

    <expr_stmt><expr><name><name pos:line="603" pos:column="5">cmd_data<pos:position pos:line="603" pos:column="13"/></name><operator pos:line="603" pos:column="13">.<pos:position pos:line="603" pos:column="14"/></operator><name pos:line="603" pos:column="14">options<pos:position pos:line="603" pos:column="21"/></name><operator pos:line="603" pos:column="21">.<pos:position pos:line="603" pos:column="22"/></operator><name pos:line="603" pos:column="22">pic_mode<pos:position pos:line="603" pos:column="30"/></name></name> <operator pos:line="603" pos:column="31">=<pos:position pos:line="603" pos:column="32"/></operator> <name pos:line="603" pos:column="33">pic_UNKNOWN<pos:position pos:line="603" pos:column="44"/></name></expr>;<pos:position pos:line="603" pos:column="45"/></expr_stmt>

    <expr_stmt><expr><name><name pos:line="605" pos:column="5">cmd_data<pos:position pos:line="605" pos:column="13"/></name><operator pos:line="605" pos:column="13">.<pos:position pos:line="605" pos:column="14"/></operator><name pos:line="605" pos:column="14">program_opts<pos:position pos:line="605" pos:column="26"/></name></name> <operator pos:line="605" pos:column="27">=<pos:position pos:line="605" pos:column="28"/></operator> <operator pos:line="605" pos:column="29">(<pos:position pos:line="605" pos:column="30"/></operator><name pos:line="605" pos:column="30">count_chars<pos:position pos:line="605" pos:column="41"/></name><operator pos:line="605" pos:column="41">*<pos:position pos:line="605" pos:column="42"/></operator><operator pos:line="605" pos:column="42">)<pos:position pos:line="605" pos:column="43"/></operator><call><name pos:line="605" pos:column="43">malloc<pos:position pos:line="605" pos:column="49"/></name><argument_list pos:line="605" pos:column="49">(<argument><expr><sizeof pos:line="605" pos:column="50">sizeof<argument_list pos:line="605" pos:column="56">(<argument><expr><name pos:line="605" pos:column="57">count_chars<pos:position pos:line="605" pos:column="68"/></name></expr></argument>)<pos:position pos:line="605" pos:column="69"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="605" pos:column="70"/></argument_list></call></expr>;<pos:position pos:line="605" pos:column="71"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="606" pos:column="5">init_count_chars<pos:position pos:line="606" pos:column="21"/></name><argument_list pos:line="606" pos:column="21">(<argument><expr><name><name pos:line="606" pos:column="22">cmd_data<pos:position pos:line="606" pos:column="30"/></name><operator pos:line="606" pos:column="30">.<pos:position pos:line="606" pos:column="31"/></operator><name pos:line="606" pos:column="31">program_opts<pos:position pos:line="606" pos:column="43"/></name></name></expr></argument>)<pos:position pos:line="606" pos:column="44"/></argument_list></call></expr>;<pos:position pos:line="606" pos:column="45"/></expr_stmt>
    <expr_stmt><expr><name><name pos:line="607" pos:column="5">cmd_data<pos:position pos:line="607" pos:column="13"/></name><operator pos:line="607" pos:column="13">.<pos:position pos:line="607" pos:column="14"/></operator><name pos:line="607" pos:column="14">arglist<pos:position pos:line="607" pos:column="21"/></name></name> <operator pos:line="607" pos:column="22">=<pos:position pos:line="607" pos:column="23"/></operator> <operator pos:line="607" pos:column="24">(<pos:position pos:line="607" pos:column="25"/></operator><name pos:line="607" pos:column="25">count_chars<pos:position pos:line="607" pos:column="36"/></name><operator pos:line="607" pos:column="36">*<pos:position pos:line="607" pos:column="37"/></operator><operator pos:line="607" pos:column="37">)<pos:position pos:line="607" pos:column="38"/></operator><call><name pos:line="607" pos:column="38">malloc<pos:position pos:line="607" pos:column="44"/></name><argument_list pos:line="607" pos:column="44">(<argument><expr><sizeof pos:line="607" pos:column="45">sizeof<argument_list pos:line="607" pos:column="51">(<argument><expr><name pos:line="607" pos:column="52">count_chars<pos:position pos:line="607" pos:column="63"/></name></expr></argument>)<pos:position pos:line="607" pos:column="64"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="607" pos:column="65"/></argument_list></call></expr>;<pos:position pos:line="607" pos:column="66"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="608" pos:column="5">init_count_chars<pos:position pos:line="608" pos:column="21"/></name><argument_list pos:line="608" pos:column="21">(<argument><expr><name><name pos:line="608" pos:column="22">cmd_data<pos:position pos:line="608" pos:column="30"/></name><operator pos:line="608" pos:column="30">.<pos:position pos:line="608" pos:column="31"/></operator><name pos:line="608" pos:column="31">arglist<pos:position pos:line="608" pos:column="38"/></name></name></expr></argument>)<pos:position pos:line="608" pos:column="39"/></argument_list></call></expr>;<pos:position pos:line="608" pos:column="40"/></expr_stmt>
    <expr_stmt><expr><name><name pos:line="609" pos:column="5">cmd_data<pos:position pos:line="609" pos:column="13"/></name><operator pos:line="609" pos:column="13">.<pos:position pos:line="609" pos:column="14"/></operator><name pos:line="609" pos:column="14">tmp_dirs<pos:position pos:line="609" pos:column="22"/></name></name> <operator pos:line="609" pos:column="23">=<pos:position pos:line="609" pos:column="24"/></operator> <operator pos:line="609" pos:column="25">(<pos:position pos:line="609" pos:column="26"/></operator><name pos:line="609" pos:column="26">count_chars<pos:position pos:line="609" pos:column="37"/></name><operator pos:line="609" pos:column="37">*<pos:position pos:line="609" pos:column="38"/></operator><operator pos:line="609" pos:column="38">)<pos:position pos:line="609" pos:column="39"/></operator><call><name pos:line="609" pos:column="39">malloc<pos:position pos:line="609" pos:column="45"/></name><argument_list pos:line="609" pos:column="45">(<argument><expr><sizeof pos:line="609" pos:column="46">sizeof<argument_list pos:line="609" pos:column="52">(<argument><expr><name pos:line="609" pos:column="53">count_chars<pos:position pos:line="609" pos:column="64"/></name></expr></argument>)<pos:position pos:line="609" pos:column="65"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="609" pos:column="66"/></argument_list></call></expr>;<pos:position pos:line="609" pos:column="67"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="610" pos:column="5">init_count_chars<pos:position pos:line="610" pos:column="21"/></name><argument_list pos:line="610" pos:column="21">(<argument><expr><name><name pos:line="610" pos:column="22">cmd_data<pos:position pos:line="610" pos:column="30"/></name><operator pos:line="610" pos:column="30">.<pos:position pos:line="610" pos:column="31"/></operator><name pos:line="610" pos:column="31">tmp_dirs<pos:position pos:line="610" pos:column="39"/></name></name></expr></argument>)<pos:position pos:line="610" pos:column="40"/></argument_list></call></expr>;<pos:position pos:line="610" pos:column="41"/></expr_stmt>
    <expr_stmt><expr><name><name pos:line="611" pos:column="5">cmd_data<pos:position pos:line="611" pos:column="13"/></name><operator pos:line="611" pos:column="13">.<pos:position pos:line="611" pos:column="14"/></operator><name pos:line="611" pos:column="14">obj_files<pos:position pos:line="611" pos:column="23"/></name></name> <operator pos:line="611" pos:column="24">=<pos:position pos:line="611" pos:column="25"/></operator> <operator pos:line="611" pos:column="26">(<pos:position pos:line="611" pos:column="27"/></operator><name pos:line="611" pos:column="27">count_chars<pos:position pos:line="611" pos:column="38"/></name><operator pos:line="611" pos:column="38">*<pos:position pos:line="611" pos:column="39"/></operator><operator pos:line="611" pos:column="39">)<pos:position pos:line="611" pos:column="40"/></operator><call><name pos:line="611" pos:column="40">malloc<pos:position pos:line="611" pos:column="46"/></name><argument_list pos:line="611" pos:column="46">(<argument><expr><sizeof pos:line="611" pos:column="47">sizeof<argument_list pos:line="611" pos:column="53">(<argument><expr><name pos:line="611" pos:column="54">count_chars<pos:position pos:line="611" pos:column="65"/></name></expr></argument>)<pos:position pos:line="611" pos:column="66"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="611" pos:column="67"/></argument_list></call></expr>;<pos:position pos:line="611" pos:column="68"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="612" pos:column="5">init_count_chars<pos:position pos:line="612" pos:column="21"/></name><argument_list pos:line="612" pos:column="21">(<argument><expr><name><name pos:line="612" pos:column="22">cmd_data<pos:position pos:line="612" pos:column="30"/></name><operator pos:line="612" pos:column="30">.<pos:position pos:line="612" pos:column="31"/></operator><name pos:line="612" pos:column="31">obj_files<pos:position pos:line="612" pos:column="40"/></name></name></expr></argument>)<pos:position pos:line="612" pos:column="41"/></argument_list></call></expr>;<pos:position pos:line="612" pos:column="42"/></expr_stmt>
    <expr_stmt><expr><name><name pos:line="613" pos:column="5">cmd_data<pos:position pos:line="613" pos:column="13"/></name><operator pos:line="613" pos:column="13">.<pos:position pos:line="613" pos:column="14"/></operator><name pos:line="613" pos:column="14">dep_rpaths<pos:position pos:line="613" pos:column="24"/></name></name> <operator pos:line="613" pos:column="25">=<pos:position pos:line="613" pos:column="26"/></operator> <operator pos:line="613" pos:column="27">(<pos:position pos:line="613" pos:column="28"/></operator><name pos:line="613" pos:column="28">count_chars<pos:position pos:line="613" pos:column="39"/></name><operator pos:line="613" pos:column="39">*<pos:position pos:line="613" pos:column="40"/></operator><operator pos:line="613" pos:column="40">)<pos:position pos:line="613" pos:column="41"/></operator><call><name pos:line="613" pos:column="41">malloc<pos:position pos:line="613" pos:column="47"/></name><argument_list pos:line="613" pos:column="47">(<argument><expr><sizeof pos:line="613" pos:column="48">sizeof<argument_list pos:line="613" pos:column="54">(<argument><expr><name pos:line="613" pos:column="55">count_chars<pos:position pos:line="613" pos:column="66"/></name></expr></argument>)<pos:position pos:line="613" pos:column="67"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="613" pos:column="68"/></argument_list></call></expr>;<pos:position pos:line="613" pos:column="69"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="614" pos:column="5">init_count_chars<pos:position pos:line="614" pos:column="21"/></name><argument_list pos:line="614" pos:column="21">(<argument><expr><name><name pos:line="614" pos:column="22">cmd_data<pos:position pos:line="614" pos:column="30"/></name><operator pos:line="614" pos:column="30">.<pos:position pos:line="614" pos:column="31"/></operator><name pos:line="614" pos:column="31">dep_rpaths<pos:position pos:line="614" pos:column="41"/></name></name></expr></argument>)<pos:position pos:line="614" pos:column="42"/></argument_list></call></expr>;<pos:position pos:line="614" pos:column="43"/></expr_stmt>
    <expr_stmt><expr><name><name pos:line="615" pos:column="5">cmd_data<pos:position pos:line="615" pos:column="13"/></name><operator pos:line="615" pos:column="13">.<pos:position pos:line="615" pos:column="14"/></operator><name pos:line="615" pos:column="14">rpaths<pos:position pos:line="615" pos:column="20"/></name></name> <operator pos:line="615" pos:column="21">=<pos:position pos:line="615" pos:column="22"/></operator> <operator pos:line="615" pos:column="23">(<pos:position pos:line="615" pos:column="24"/></operator><name pos:line="615" pos:column="24">count_chars<pos:position pos:line="615" pos:column="35"/></name><operator pos:line="615" pos:column="35">*<pos:position pos:line="615" pos:column="36"/></operator><operator pos:line="615" pos:column="36">)<pos:position pos:line="615" pos:column="37"/></operator><call><name pos:line="615" pos:column="37">malloc<pos:position pos:line="615" pos:column="43"/></name><argument_list pos:line="615" pos:column="43">(<argument><expr><sizeof pos:line="615" pos:column="44">sizeof<argument_list pos:line="615" pos:column="50">(<argument><expr><name pos:line="615" pos:column="51">count_chars<pos:position pos:line="615" pos:column="62"/></name></expr></argument>)<pos:position pos:line="615" pos:column="63"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="615" pos:column="64"/></argument_list></call></expr>;<pos:position pos:line="615" pos:column="65"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="616" pos:column="5">init_count_chars<pos:position pos:line="616" pos:column="21"/></name><argument_list pos:line="616" pos:column="21">(<argument><expr><name><name pos:line="616" pos:column="22">cmd_data<pos:position pos:line="616" pos:column="30"/></name><operator pos:line="616" pos:column="30">.<pos:position pos:line="616" pos:column="31"/></operator><name pos:line="616" pos:column="31">rpaths<pos:position pos:line="616" pos:column="37"/></name></name></expr></argument>)<pos:position pos:line="616" pos:column="38"/></argument_list></call></expr>;<pos:position pos:line="616" pos:column="39"/></expr_stmt>
    <expr_stmt><expr><name><name pos:line="617" pos:column="5">cmd_data<pos:position pos:line="617" pos:column="13"/></name><operator pos:line="617" pos:column="13">.<pos:position pos:line="617" pos:column="14"/></operator><name pos:line="617" pos:column="14">static_opts<pos:position pos:line="617" pos:column="25"/></name><operator pos:line="617" pos:column="25">.<pos:position pos:line="617" pos:column="26"/></operator><name pos:line="617" pos:column="26">normal<pos:position pos:line="617" pos:column="32"/></name></name> <operator pos:line="617" pos:column="33">=<pos:position pos:line="617" pos:column="34"/></operator> <operator pos:line="617" pos:column="35">(<pos:position pos:line="617" pos:column="36"/></operator><name pos:line="617" pos:column="36">count_chars<pos:position pos:line="617" pos:column="47"/></name><operator pos:line="617" pos:column="47">*<pos:position pos:line="617" pos:column="48"/></operator><operator pos:line="617" pos:column="48">)<pos:position pos:line="617" pos:column="49"/></operator><call><name pos:line="617" pos:column="49">malloc<pos:position pos:line="617" pos:column="55"/></name><argument_list pos:line="617" pos:column="55">(<argument><expr><sizeof pos:line="617" pos:column="56">sizeof<argument_list pos:line="617" pos:column="62">(<argument><expr><name pos:line="617" pos:column="63">count_chars<pos:position pos:line="617" pos:column="74"/></name></expr></argument>)<pos:position pos:line="617" pos:column="75"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="617" pos:column="76"/></argument_list></call></expr>;<pos:position pos:line="617" pos:column="77"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="618" pos:column="5">init_count_chars<pos:position pos:line="618" pos:column="21"/></name><argument_list pos:line="618" pos:column="21">(<argument><expr><name><name pos:line="618" pos:column="22">cmd_data<pos:position pos:line="618" pos:column="30"/></name><operator pos:line="618" pos:column="30">.<pos:position pos:line="618" pos:column="31"/></operator><name pos:line="618" pos:column="31">static_opts<pos:position pos:line="618" pos:column="42"/></name><operator pos:line="618" pos:column="42">.<pos:position pos:line="618" pos:column="43"/></operator><name pos:line="618" pos:column="43">normal<pos:position pos:line="618" pos:column="49"/></name></name></expr></argument>)<pos:position pos:line="618" pos:column="50"/></argument_list></call></expr>;<pos:position pos:line="618" pos:column="51"/></expr_stmt>
    <expr_stmt><expr><name><name pos:line="619" pos:column="5">cmd_data<pos:position pos:line="619" pos:column="13"/></name><operator pos:line="619" pos:column="13">.<pos:position pos:line="619" pos:column="14"/></operator><name pos:line="619" pos:column="14">shared_opts<pos:position pos:line="619" pos:column="25"/></name><operator pos:line="619" pos:column="25">.<pos:position pos:line="619" pos:column="26"/></operator><name pos:line="619" pos:column="26">normal<pos:position pos:line="619" pos:column="32"/></name></name> <operator pos:line="619" pos:column="33">=<pos:position pos:line="619" pos:column="34"/></operator> <operator pos:line="619" pos:column="35">(<pos:position pos:line="619" pos:column="36"/></operator><name pos:line="619" pos:column="36">count_chars<pos:position pos:line="619" pos:column="47"/></name><operator pos:line="619" pos:column="47">*<pos:position pos:line="619" pos:column="48"/></operator><operator pos:line="619" pos:column="48">)<pos:position pos:line="619" pos:column="49"/></operator><call><name pos:line="619" pos:column="49">malloc<pos:position pos:line="619" pos:column="55"/></name><argument_list pos:line="619" pos:column="55">(<argument><expr><sizeof pos:line="619" pos:column="56">sizeof<argument_list pos:line="619" pos:column="62">(<argument><expr><name pos:line="619" pos:column="63">count_chars<pos:position pos:line="619" pos:column="74"/></name></expr></argument>)<pos:position pos:line="619" pos:column="75"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="619" pos:column="76"/></argument_list></call></expr>;<pos:position pos:line="619" pos:column="77"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="620" pos:column="5">init_count_chars<pos:position pos:line="620" pos:column="21"/></name><argument_list pos:line="620" pos:column="21">(<argument><expr><name><name pos:line="620" pos:column="22">cmd_data<pos:position pos:line="620" pos:column="30"/></name><operator pos:line="620" pos:column="30">.<pos:position pos:line="620" pos:column="31"/></operator><name pos:line="620" pos:column="31">shared_opts<pos:position pos:line="620" pos:column="42"/></name><operator pos:line="620" pos:column="42">.<pos:position pos:line="620" pos:column="43"/></operator><name pos:line="620" pos:column="43">normal<pos:position pos:line="620" pos:column="49"/></name></name></expr></argument>)<pos:position pos:line="620" pos:column="50"/></argument_list></call></expr>;<pos:position pos:line="620" pos:column="51"/></expr_stmt>
    <expr_stmt><expr><name><name pos:line="621" pos:column="5">cmd_data<pos:position pos:line="621" pos:column="13"/></name><operator pos:line="621" pos:column="13">.<pos:position pos:line="621" pos:column="14"/></operator><name pos:line="621" pos:column="14">shared_opts<pos:position pos:line="621" pos:column="25"/></name><operator pos:line="621" pos:column="25">.<pos:position pos:line="621" pos:column="26"/></operator><name pos:line="621" pos:column="26">dependencies<pos:position pos:line="621" pos:column="38"/></name></name> <operator pos:line="621" pos:column="39">=<pos:position pos:line="621" pos:column="40"/></operator> <operator pos:line="621" pos:column="41">(<pos:position pos:line="621" pos:column="42"/></operator><name pos:line="621" pos:column="42">count_chars<pos:position pos:line="621" pos:column="53"/></name><operator pos:line="621" pos:column="53">*<pos:position pos:line="621" pos:column="54"/></operator><operator pos:line="621" pos:column="54">)<pos:position pos:line="621" pos:column="55"/></operator><call><name pos:line="621" pos:column="55">malloc<pos:position pos:line="621" pos:column="61"/></name><argument_list pos:line="621" pos:column="61">(<argument><expr><sizeof pos:line="621" pos:column="62">sizeof<argument_list pos:line="621" pos:column="68">(<argument><expr><name pos:line="621" pos:column="69">count_chars<pos:position pos:line="621" pos:column="80"/></name></expr></argument>)<pos:position pos:line="621" pos:column="81"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="621" pos:column="82"/></argument_list></call></expr>;<pos:position pos:line="621" pos:column="83"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="622" pos:column="5">init_count_chars<pos:position pos:line="622" pos:column="21"/></name><argument_list pos:line="622" pos:column="21">(<argument><expr><name><name pos:line="622" pos:column="22">cmd_data<pos:position pos:line="622" pos:column="30"/></name><operator pos:line="622" pos:column="30">.<pos:position pos:line="622" pos:column="31"/></operator><name pos:line="622" pos:column="31">shared_opts<pos:position pos:line="622" pos:column="42"/></name><operator pos:line="622" pos:column="42">.<pos:position pos:line="622" pos:column="43"/></operator><name pos:line="622" pos:column="43">dependencies<pos:position pos:line="622" pos:column="55"/></name></name></expr></argument>)<pos:position pos:line="622" pos:column="56"/></argument_list></call></expr>;<pos:position pos:line="622" pos:column="57"/></expr_stmt>

    <expr_stmt><expr><name><name pos:line="624" pos:column="5">cmd_data<pos:position pos:line="624" pos:column="13"/></name><operator pos:line="624" pos:column="13">.<pos:position pos:line="624" pos:column="14"/></operator><name pos:line="624" pos:column="14">mode<pos:position pos:line="624" pos:column="18"/></name></name> <operator pos:line="624" pos:column="19">=<pos:position pos:line="624" pos:column="20"/></operator> <name pos:line="624" pos:column="21">mUnknown<pos:position pos:line="624" pos:column="29"/></name></expr>;<pos:position pos:line="624" pos:column="30"/></expr_stmt>
    <expr_stmt><expr><name><name pos:line="625" pos:column="5">cmd_data<pos:position pos:line="625" pos:column="13"/></name><operator pos:line="625" pos:column="13">.<pos:position pos:line="625" pos:column="14"/></operator><name pos:line="625" pos:column="14">output<pos:position pos:line="625" pos:column="20"/></name></name> <operator pos:line="625" pos:column="21">=<pos:position pos:line="625" pos:column="22"/></operator> <name pos:line="625" pos:column="23">otGeneral<pos:position pos:line="625" pos:column="32"/></name></expr>;<pos:position pos:line="625" pos:column="33"/></expr_stmt>

    <expr_stmt><expr><call><name pos:line="627" pos:column="5">parse_args<pos:position pos:line="627" pos:column="15"/></name><argument_list pos:line="627" pos:column="15">(<argument><expr><name pos:line="627" pos:column="16">argc<pos:position pos:line="627" pos:column="20"/></name></expr></argument>, <argument><expr><name pos:line="627" pos:column="22">argv<pos:position pos:line="627" pos:column="26"/></name></expr></argument>, <argument><expr><operator pos:line="627" pos:column="28">&amp;<pos:position pos:line="627" pos:column="33"/></operator><name pos:line="627" pos:column="29">cmd_data<pos:position pos:line="627" pos:column="37"/></name></expr></argument>)<pos:position pos:line="627" pos:column="38"/></argument_list></call></expr>;<pos:position pos:line="627" pos:column="39"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="628" pos:column="5">post_parse_fixup<pos:position pos:line="628" pos:column="21"/></name><argument_list pos:line="628" pos:column="21">(<argument><expr><operator pos:line="628" pos:column="22">&amp;<pos:position pos:line="628" pos:column="27"/></operator><name pos:line="628" pos:column="23">cmd_data<pos:position pos:line="628" pos:column="31"/></name></expr></argument>)<pos:position pos:line="628" pos:column="32"/></argument_list></call></expr>;<pos:position pos:line="628" pos:column="33"/></expr_stmt>

    <if pos:line="630" pos:column="5">if <condition pos:line="630" pos:column="8">(<expr><name><name pos:line="630" pos:column="9">cmd_data<pos:position pos:line="630" pos:column="17"/></name><operator pos:line="630" pos:column="17">.<pos:position pos:line="630" pos:column="18"/></operator><name pos:line="630" pos:column="18">mode<pos:position pos:line="630" pos:column="22"/></name></name> <operator pos:line="630" pos:column="23">==<pos:position pos:line="630" pos:column="25"/></operator> <name pos:line="630" pos:column="26">mUnknown<pos:position pos:line="630" pos:column="34"/></name></expr>)<pos:position pos:line="630" pos:column="35"/></condition><then pos:line="630" pos:column="35"> <block pos:line="630" pos:column="36">{
        <expr_stmt><expr><call><name pos:line="631" pos:column="9">exit<pos:position pos:line="631" pos:column="13"/></name><argument_list pos:line="631" pos:column="13">(<argument><expr><literal type="number" pos:line="631" pos:column="14">0<pos:position pos:line="631" pos:column="15"/></literal></expr></argument>)<pos:position pos:line="631" pos:column="16"/></argument_list></call></expr>;<pos:position pos:line="631" pos:column="17"/></expr_stmt>
    }<pos:position pos:line="632" pos:column="6"/></block></then></if>

    <expr_stmt><expr><name pos:line="634" pos:column="5">rc<pos:position pos:line="634" pos:column="7"/></name> <operator pos:line="634" pos:column="8">=<pos:position pos:line="634" pos:column="9"/></operator> <call><name pos:line="634" pos:column="10">run_mode<pos:position pos:line="634" pos:column="18"/></name><argument_list pos:line="634" pos:column="18">(<argument><expr><operator pos:line="634" pos:column="19">&amp;<pos:position pos:line="634" pos:column="24"/></operator><name pos:line="634" pos:column="20">cmd_data<pos:position pos:line="634" pos:column="28"/></name></expr></argument>)<pos:position pos:line="634" pos:column="29"/></argument_list></call></expr>;<pos:position pos:line="634" pos:column="30"/></expr_stmt>

    <if pos:line="636" pos:column="5">if <condition pos:line="636" pos:column="8">(<expr><operator pos:line="636" pos:column="9">!<pos:position pos:line="636" pos:column="10"/></operator><name pos:line="636" pos:column="10">rc<pos:position pos:line="636" pos:column="12"/></name></expr>)<pos:position pos:line="636" pos:column="13"/></condition><then pos:line="636" pos:column="13"> <block pos:line="636" pos:column="14">{
       <expr_stmt><expr><call><name pos:line="637" pos:column="8">add_for_runtime<pos:position pos:line="637" pos:column="23"/></name><argument_list pos:line="637" pos:column="23">(<argument><expr><operator pos:line="637" pos:column="24">&amp;<pos:position pos:line="637" pos:column="29"/></operator><name pos:line="637" pos:column="25">cmd_data<pos:position pos:line="637" pos:column="33"/></name></expr></argument>)<pos:position pos:line="637" pos:column="34"/></argument_list></call></expr>;<pos:position pos:line="637" pos:column="35"/></expr_stmt> 
    }<pos:position pos:line="638" pos:column="6"/></block></then></if>

    <expr_stmt><expr><call><name pos:line="640" pos:column="5">cleanup_tmp_dirs<pos:position pos:line="640" pos:column="21"/></name><argument_list pos:line="640" pos:column="21">(<argument><expr><operator pos:line="640" pos:column="22">&amp;<pos:position pos:line="640" pos:column="27"/></operator><name pos:line="640" pos:column="23">cmd_data<pos:position pos:line="640" pos:column="31"/></name></expr></argument>)<pos:position pos:line="640" pos:column="32"/></argument_list></call></expr>;<pos:position pos:line="640" pos:column="33"/></expr_stmt>
    <return pos:line="641" pos:column="5">return <expr><name pos:line="641" pos:column="12">rc<pos:position pos:line="641" pos:column="14"/></name></expr>;<pos:position pos:line="641" pos:column="15"/></return>
}<pos:position pos:line="642" pos:column="2"/></block></function></block></function></unit>

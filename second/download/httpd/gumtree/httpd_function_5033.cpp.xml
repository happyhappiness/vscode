<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/httpd/gumtree/httpd_function_5033.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">apr_status_t<pos:position pos:line="1" pos:column="20"/></name></type> <name pos:line="1" pos:column="21">init_pollset<pos:position pos:line="1" pos:column="33"/></name><parameter_list pos:line="1" pos:column="33">(<parameter><decl><type><name pos:line="1" pos:column="34">apr_pool_t<pos:position pos:line="1" pos:column="44"/></name> <modifier pos:line="1" pos:column="45">*<pos:position pos:line="1" pos:column="46"/></modifier></type><name pos:line="1" pos:column="46">p<pos:position pos:line="1" pos:column="47"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="48"/></parameter_list>
<block pos:line="2" pos:column="1">{
<cpp:if pos:line="3" pos:column="1">#<cpp:directive pos:line="3" pos:column="2">if<pos:position pos:line="3" pos:column="4"/></cpp:directive> <expr><name pos:line="3" pos:column="5">HAVE_SERF<pos:position pos:line="3" pos:column="14"/></name></expr></cpp:if>
    <decl_stmt><decl><type><name pos:line="4" pos:column="5">s_baton_t<pos:position pos:line="4" pos:column="14"/></name> <modifier pos:line="4" pos:column="15">*<pos:position pos:line="4" pos:column="16"/></modifier></type><name pos:line="4" pos:column="16">baton<pos:position pos:line="4" pos:column="21"/></name> <init pos:line="4" pos:column="22">= <expr><name pos:line="4" pos:column="24">NULL<pos:position pos:line="4" pos:column="28"/></name></expr></init></decl>;<pos:position pos:line="4" pos:column="29"/></decl_stmt>
<cpp:endif pos:line="5" pos:column="1">#<cpp:directive pos:line="5" pos:column="2">endif<pos:position pos:line="5" pos:column="7"/></cpp:directive></cpp:endif>
    <decl_stmt><decl><type><name pos:line="6" pos:column="5">apr_status_t<pos:position pos:line="6" pos:column="17"/></name></type> <name pos:line="6" pos:column="18">rv<pos:position pos:line="6" pos:column="20"/></name></decl>;<pos:position pos:line="6" pos:column="21"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="7" pos:column="5">ap_listen_rec<pos:position pos:line="7" pos:column="18"/></name> <modifier pos:line="7" pos:column="19">*<pos:position pos:line="7" pos:column="20"/></modifier></type><name pos:line="7" pos:column="20">lr<pos:position pos:line="7" pos:column="22"/></name></decl>;<pos:position pos:line="7" pos:column="23"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="8" pos:column="5">listener_poll_type<pos:position pos:line="8" pos:column="23"/></name> <modifier pos:line="8" pos:column="24">*<pos:position pos:line="8" pos:column="25"/></modifier></type><name pos:line="8" pos:column="25">pt<pos:position pos:line="8" pos:column="27"/></name></decl>;<pos:position pos:line="8" pos:column="28"/></decl_stmt>

    <expr_stmt><expr><name pos:line="10" pos:column="5">rv<pos:position pos:line="10" pos:column="7"/></name> <operator pos:line="10" pos:column="8">=<pos:position pos:line="10" pos:column="9"/></operator> <call><name pos:line="10" pos:column="10">apr_thread_mutex_create<pos:position pos:line="10" pos:column="33"/></name><argument_list pos:line="10" pos:column="33">(<argument><expr><operator pos:line="10" pos:column="34">&amp;<pos:position pos:line="10" pos:column="39"/></operator><name pos:line="10" pos:column="35">timeout_mutex<pos:position pos:line="10" pos:column="48"/></name></expr></argument>, <argument><expr><name pos:line="10" pos:column="50">APR_THREAD_MUTEX_DEFAULT<pos:position pos:line="10" pos:column="74"/></name></expr></argument>, <argument><expr><name pos:line="10" pos:column="76">p<pos:position pos:line="10" pos:column="77"/></name></expr></argument>)<pos:position pos:line="10" pos:column="78"/></argument_list></call></expr>;<pos:position pos:line="10" pos:column="79"/></expr_stmt>
    <if pos:line="11" pos:column="5">if <condition pos:line="11" pos:column="8">(<expr><name pos:line="11" pos:column="9">rv<pos:position pos:line="11" pos:column="11"/></name> <operator pos:line="11" pos:column="12">!=<pos:position pos:line="11" pos:column="14"/></operator> <name pos:line="11" pos:column="15">APR_SUCCESS<pos:position pos:line="11" pos:column="26"/></name></expr>)<pos:position pos:line="11" pos:column="27"/></condition><then pos:line="11" pos:column="27"> <block pos:line="11" pos:column="28">{
        <expr_stmt><expr><call><name pos:line="12" pos:column="9">ap_log_error<pos:position pos:line="12" pos:column="21"/></name><argument_list pos:line="12" pos:column="21">(<argument><expr><name pos:line="12" pos:column="22">APLOG_MARK<pos:position pos:line="12" pos:column="32"/></name></expr></argument>, <argument><expr><name pos:line="12" pos:column="34">APLOG_ERR<pos:position pos:line="12" pos:column="43"/></name></expr></argument>, <argument><expr><name pos:line="12" pos:column="45">rv<pos:position pos:line="12" pos:column="47"/></name></expr></argument>, <argument><expr><name pos:line="12" pos:column="49">ap_server_conf<pos:position pos:line="12" pos:column="63"/></name></expr></argument>,
                     <argument><expr><literal type="string" pos:line="13" pos:column="22">"creation of the timeout mutex failed."<pos:position pos:line="13" pos:column="61"/></literal></expr></argument>)<pos:position pos:line="13" pos:column="62"/></argument_list></call></expr>;<pos:position pos:line="13" pos:column="63"/></expr_stmt>
        <return pos:line="14" pos:column="9">return <expr><name pos:line="14" pos:column="16">rv<pos:position pos:line="14" pos:column="18"/></name></expr>;<pos:position pos:line="14" pos:column="19"/></return>
    }<pos:position pos:line="15" pos:column="6"/></block></then></if>

    <expr_stmt><expr><call><name pos:line="17" pos:column="5">APR_RING_INIT<pos:position pos:line="17" pos:column="18"/></name><argument_list pos:line="17" pos:column="18">(<argument><expr><operator pos:line="17" pos:column="19">&amp;<pos:position pos:line="17" pos:column="24"/></operator><name pos:line="17" pos:column="20">timeout_head<pos:position pos:line="17" pos:column="32"/></name></expr></argument>, <argument><expr><name pos:line="17" pos:column="34">conn_state_t<pos:position pos:line="17" pos:column="46"/></name></expr></argument>, <argument><expr><name pos:line="17" pos:column="48">timeout_list<pos:position pos:line="17" pos:column="60"/></name></expr></argument>)<pos:position pos:line="17" pos:column="61"/></argument_list></call></expr>;<pos:position pos:line="17" pos:column="62"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="18" pos:column="5">APR_RING_INIT<pos:position pos:line="18" pos:column="18"/></name><argument_list pos:line="18" pos:column="18">(<argument><expr><operator pos:line="18" pos:column="19">&amp;<pos:position pos:line="18" pos:column="24"/></operator><name pos:line="18" pos:column="20">keepalive_timeout_head<pos:position pos:line="18" pos:column="42"/></name></expr></argument>, <argument><expr><name pos:line="18" pos:column="44">conn_state_t<pos:position pos:line="18" pos:column="56"/></name></expr></argument>, <argument><expr><name pos:line="18" pos:column="58">timeout_list<pos:position pos:line="18" pos:column="70"/></name></expr></argument>)<pos:position pos:line="18" pos:column="71"/></argument_list></call></expr>;<pos:position pos:line="18" pos:column="72"/></expr_stmt>

    <comment type="block" pos:line="20" pos:column="5">/* Create the main pollset */</comment>
    <expr_stmt><expr><name pos:line="21" pos:column="5">rv<pos:position pos:line="21" pos:column="7"/></name> <operator pos:line="21" pos:column="8">=<pos:position pos:line="21" pos:column="9"/></operator> <call><name pos:line="21" pos:column="10">apr_pollset_create<pos:position pos:line="21" pos:column="28"/></name><argument_list pos:line="21" pos:column="28">(<argument><expr><operator pos:line="21" pos:column="29">&amp;<pos:position pos:line="21" pos:column="34"/></operator><name pos:line="21" pos:column="30">event_pollset<pos:position pos:line="21" pos:column="43"/></name></expr></argument>,
                            <argument><expr><name pos:line="22" pos:column="29">threads_per_child<pos:position pos:line="22" pos:column="46"/></name></expr></argument>,
                            <argument><expr><name pos:line="23" pos:column="29">p<pos:position pos:line="23" pos:column="30"/></name></expr></argument>, <argument><expr><name pos:line="23" pos:column="32">APR_POLLSET_THREADSAFE<pos:position pos:line="23" pos:column="54"/></name> <operator pos:line="23" pos:column="55">|<pos:position pos:line="23" pos:column="56"/></operator> <name pos:line="23" pos:column="57">APR_POLLSET_NOCOPY<pos:position pos:line="23" pos:column="75"/></name></expr></argument>)<pos:position pos:line="23" pos:column="76"/></argument_list></call></expr>;<pos:position pos:line="23" pos:column="77"/></expr_stmt>
    <if pos:line="24" pos:column="5">if <condition pos:line="24" pos:column="8">(<expr><name pos:line="24" pos:column="9">rv<pos:position pos:line="24" pos:column="11"/></name> <operator pos:line="24" pos:column="12">!=<pos:position pos:line="24" pos:column="14"/></operator> <name pos:line="24" pos:column="15">APR_SUCCESS<pos:position pos:line="24" pos:column="26"/></name></expr>)<pos:position pos:line="24" pos:column="27"/></condition><then pos:line="24" pos:column="27"> <block pos:line="24" pos:column="28">{
        <expr_stmt><expr><call><name pos:line="25" pos:column="9">ap_log_error<pos:position pos:line="25" pos:column="21"/></name><argument_list pos:line="25" pos:column="21">(<argument><expr><name pos:line="25" pos:column="22">APLOG_MARK<pos:position pos:line="25" pos:column="32"/></name></expr></argument>, <argument><expr><name pos:line="25" pos:column="34">APLOG_ERR<pos:position pos:line="25" pos:column="43"/></name></expr></argument>, <argument><expr><name pos:line="25" pos:column="45">rv<pos:position pos:line="25" pos:column="47"/></name></expr></argument>, <argument><expr><name pos:line="25" pos:column="49">ap_server_conf<pos:position pos:line="25" pos:column="63"/></name></expr></argument>,
                     <argument><expr><literal type="string" pos:line="26" pos:column="22">"apr_pollset_create with Thread Safety failed."<pos:position pos:line="26" pos:column="69"/></literal></expr></argument>)<pos:position pos:line="26" pos:column="70"/></argument_list></call></expr>;<pos:position pos:line="26" pos:column="71"/></expr_stmt>
        <return pos:line="27" pos:column="9">return <expr><name pos:line="27" pos:column="16">rv<pos:position pos:line="27" pos:column="18"/></name></expr>;<pos:position pos:line="27" pos:column="19"/></return>
    }<pos:position pos:line="28" pos:column="6"/></block></then></if>

    <for pos:line="30" pos:column="5">for <control pos:line="30" pos:column="9">(<init><expr><name pos:line="30" pos:column="10">lr<pos:position pos:line="30" pos:column="12"/></name> <operator pos:line="30" pos:column="13">=<pos:position pos:line="30" pos:column="14"/></operator> <name pos:line="30" pos:column="15">ap_listeners<pos:position pos:line="30" pos:column="27"/></name></expr>;<pos:position pos:line="30" pos:column="28"/></init> <condition><expr><name pos:line="30" pos:column="29">lr<pos:position pos:line="30" pos:column="31"/></name> <operator pos:line="30" pos:column="32">!=<pos:position pos:line="30" pos:column="34"/></operator> <name pos:line="30" pos:column="35">NULL<pos:position pos:line="30" pos:column="39"/></name></expr>;<pos:position pos:line="30" pos:column="40"/></condition> <incr><expr><name pos:line="30" pos:column="41">lr<pos:position pos:line="30" pos:column="43"/></name> <operator pos:line="30" pos:column="44">=<pos:position pos:line="30" pos:column="45"/></operator> <name><name pos:line="30" pos:column="46">lr<pos:position pos:line="30" pos:column="48"/></name><operator pos:line="30" pos:column="48">-&gt;<pos:position pos:line="30" pos:column="53"/></operator><name pos:line="30" pos:column="50">next<pos:position pos:line="30" pos:column="54"/></name></name></expr></incr>)<pos:position pos:line="30" pos:column="55"/></control> <block pos:line="30" pos:column="56">{
        <decl_stmt><decl><type><name pos:line="31" pos:column="9">apr_pollfd_t<pos:position pos:line="31" pos:column="21"/></name> <modifier pos:line="31" pos:column="22">*<pos:position pos:line="31" pos:column="23"/></modifier></type><name pos:line="31" pos:column="23">pfd<pos:position pos:line="31" pos:column="26"/></name> <init pos:line="31" pos:column="27">= <expr><call><name pos:line="31" pos:column="29">apr_palloc<pos:position pos:line="31" pos:column="39"/></name><argument_list pos:line="31" pos:column="39">(<argument><expr><name pos:line="31" pos:column="40">p<pos:position pos:line="31" pos:column="41"/></name></expr></argument>, <argument><expr><sizeof pos:line="31" pos:column="43">sizeof<argument_list pos:line="31" pos:column="49">(<argument><expr><operator pos:line="31" pos:column="50">*<pos:position pos:line="31" pos:column="51"/></operator><name pos:line="31" pos:column="51">pfd<pos:position pos:line="31" pos:column="54"/></name></expr></argument>)<pos:position pos:line="31" pos:column="55"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="31" pos:column="56"/></argument_list></call></expr></init></decl>;<pos:position pos:line="31" pos:column="57"/></decl_stmt>
        <expr_stmt><expr><name pos:line="32" pos:column="9">pt<pos:position pos:line="32" pos:column="11"/></name> <operator pos:line="32" pos:column="12">=<pos:position pos:line="32" pos:column="13"/></operator> <call><name pos:line="32" pos:column="14">apr_pcalloc<pos:position pos:line="32" pos:column="25"/></name><argument_list pos:line="32" pos:column="25">(<argument><expr><name pos:line="32" pos:column="26">p<pos:position pos:line="32" pos:column="27"/></name></expr></argument>, <argument><expr><sizeof pos:line="32" pos:column="29">sizeof<argument_list pos:line="32" pos:column="35">(<argument><expr><operator pos:line="32" pos:column="36">*<pos:position pos:line="32" pos:column="37"/></operator><name pos:line="32" pos:column="37">pt<pos:position pos:line="32" pos:column="39"/></name></expr></argument>)<pos:position pos:line="32" pos:column="40"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="32" pos:column="41"/></argument_list></call></expr>;<pos:position pos:line="32" pos:column="42"/></expr_stmt>
        <expr_stmt><expr><name><name pos:line="33" pos:column="9">pfd<pos:position pos:line="33" pos:column="12"/></name><operator pos:line="33" pos:column="12">-&gt;<pos:position pos:line="33" pos:column="17"/></operator><name pos:line="33" pos:column="14">desc_type<pos:position pos:line="33" pos:column="23"/></name></name> <operator pos:line="33" pos:column="24">=<pos:position pos:line="33" pos:column="25"/></operator> <name pos:line="33" pos:column="26">APR_POLL_SOCKET<pos:position pos:line="33" pos:column="41"/></name></expr>;<pos:position pos:line="33" pos:column="42"/></expr_stmt>
        <expr_stmt><expr><name><name pos:line="34" pos:column="9">pfd<pos:position pos:line="34" pos:column="12"/></name><operator pos:line="34" pos:column="12">-&gt;<pos:position pos:line="34" pos:column="17"/></operator><name pos:line="34" pos:column="14">desc<pos:position pos:line="34" pos:column="18"/></name><operator pos:line="34" pos:column="18">.<pos:position pos:line="34" pos:column="19"/></operator><name pos:line="34" pos:column="19">s<pos:position pos:line="34" pos:column="20"/></name></name> <operator pos:line="34" pos:column="21">=<pos:position pos:line="34" pos:column="22"/></operator> <name><name pos:line="34" pos:column="23">lr<pos:position pos:line="34" pos:column="25"/></name><operator pos:line="34" pos:column="25">-&gt;<pos:position pos:line="34" pos:column="30"/></operator><name pos:line="34" pos:column="27">sd<pos:position pos:line="34" pos:column="29"/></name></name></expr>;<pos:position pos:line="34" pos:column="30"/></expr_stmt>
        <expr_stmt><expr><name><name pos:line="35" pos:column="9">pfd<pos:position pos:line="35" pos:column="12"/></name><operator pos:line="35" pos:column="12">-&gt;<pos:position pos:line="35" pos:column="17"/></operator><name pos:line="35" pos:column="14">reqevents<pos:position pos:line="35" pos:column="23"/></name></name> <operator pos:line="35" pos:column="24">=<pos:position pos:line="35" pos:column="25"/></operator> <name pos:line="35" pos:column="26">APR_POLLIN<pos:position pos:line="35" pos:column="36"/></name></expr>;<pos:position pos:line="35" pos:column="37"/></expr_stmt>

        <expr_stmt><expr><name><name pos:line="37" pos:column="9">pt<pos:position pos:line="37" pos:column="11"/></name><operator pos:line="37" pos:column="11">-&gt;<pos:position pos:line="37" pos:column="16"/></operator><name pos:line="37" pos:column="13">type<pos:position pos:line="37" pos:column="17"/></name></name> <operator pos:line="37" pos:column="18">=<pos:position pos:line="37" pos:column="19"/></operator> <name pos:line="37" pos:column="20">PT_ACCEPT<pos:position pos:line="37" pos:column="29"/></name></expr>;<pos:position pos:line="37" pos:column="30"/></expr_stmt>
        <expr_stmt><expr><name><name pos:line="38" pos:column="9">pt<pos:position pos:line="38" pos:column="11"/></name><operator pos:line="38" pos:column="11">-&gt;<pos:position pos:line="38" pos:column="16"/></operator><name pos:line="38" pos:column="13">baton<pos:position pos:line="38" pos:column="18"/></name></name> <operator pos:line="38" pos:column="19">=<pos:position pos:line="38" pos:column="20"/></operator> <name pos:line="38" pos:column="21">lr<pos:position pos:line="38" pos:column="23"/></name></expr>;<pos:position pos:line="38" pos:column="24"/></expr_stmt>

        <expr_stmt><expr><name><name pos:line="40" pos:column="9">pfd<pos:position pos:line="40" pos:column="12"/></name><operator pos:line="40" pos:column="12">-&gt;<pos:position pos:line="40" pos:column="17"/></operator><name pos:line="40" pos:column="14">client_data<pos:position pos:line="40" pos:column="25"/></name></name> <operator pos:line="40" pos:column="26">=<pos:position pos:line="40" pos:column="27"/></operator> <name pos:line="40" pos:column="28">pt<pos:position pos:line="40" pos:column="30"/></name></expr>;<pos:position pos:line="40" pos:column="31"/></expr_stmt>

        <expr_stmt><expr><call><name pos:line="42" pos:column="9">apr_socket_opt_set<pos:position pos:line="42" pos:column="27"/></name><argument_list pos:line="42" pos:column="27">(<argument><expr><name><name pos:line="42" pos:column="28">pfd<pos:position pos:line="42" pos:column="31"/></name><operator pos:line="42" pos:column="31">-&gt;<pos:position pos:line="42" pos:column="36"/></operator><name pos:line="42" pos:column="33">desc<pos:position pos:line="42" pos:column="37"/></name><operator pos:line="42" pos:column="37">.<pos:position pos:line="42" pos:column="38"/></operator><name pos:line="42" pos:column="38">s<pos:position pos:line="42" pos:column="39"/></name></name></expr></argument>, <argument><expr><name pos:line="42" pos:column="41">APR_SO_NONBLOCK<pos:position pos:line="42" pos:column="56"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="42" pos:column="58">1<pos:position pos:line="42" pos:column="59"/></literal></expr></argument>)<pos:position pos:line="42" pos:column="60"/></argument_list></call></expr>;<pos:position pos:line="42" pos:column="61"/></expr_stmt>
        <expr_stmt><expr><call><name pos:line="43" pos:column="9">apr_pollset_add<pos:position pos:line="43" pos:column="24"/></name><argument_list pos:line="43" pos:column="24">(<argument><expr><name pos:line="43" pos:column="25">event_pollset<pos:position pos:line="43" pos:column="38"/></name></expr></argument>, <argument><expr><name pos:line="43" pos:column="40">pfd<pos:position pos:line="43" pos:column="43"/></name></expr></argument>)<pos:position pos:line="43" pos:column="44"/></argument_list></call></expr>;<pos:position pos:line="43" pos:column="45"/></expr_stmt>

        <expr_stmt><expr><name><name pos:line="45" pos:column="9">lr<pos:position pos:line="45" pos:column="11"/></name><operator pos:line="45" pos:column="11">-&gt;<pos:position pos:line="45" pos:column="16"/></operator><name pos:line="45" pos:column="13">accept_func<pos:position pos:line="45" pos:column="24"/></name></name> <operator pos:line="45" pos:column="25">=<pos:position pos:line="45" pos:column="26"/></operator> <name pos:line="45" pos:column="27">ap_unixd_accept<pos:position pos:line="45" pos:column="42"/></name></expr>;<pos:position pos:line="45" pos:column="43"/></expr_stmt>
    }<pos:position pos:line="46" pos:column="6"/></block></for>

<cpp:if pos:line="48" pos:column="1">#<cpp:directive pos:line="48" pos:column="2">if<pos:position pos:line="48" pos:column="4"/></cpp:directive> <expr><name pos:line="48" pos:column="5">HAVE_SERF<pos:position pos:line="48" pos:column="14"/></name></expr></cpp:if>
    <expr_stmt><expr><name pos:line="49" pos:column="5">baton<pos:position pos:line="49" pos:column="10"/></name> <operator pos:line="49" pos:column="11">=<pos:position pos:line="49" pos:column="12"/></operator> <call><name pos:line="49" pos:column="13">apr_pcalloc<pos:position pos:line="49" pos:column="24"/></name><argument_list pos:line="49" pos:column="24">(<argument><expr><name pos:line="49" pos:column="25">p<pos:position pos:line="49" pos:column="26"/></name></expr></argument>, <argument><expr><sizeof pos:line="49" pos:column="28">sizeof<argument_list pos:line="49" pos:column="34">(<argument><expr><operator pos:line="49" pos:column="35">*<pos:position pos:line="49" pos:column="36"/></operator><name pos:line="49" pos:column="36">baton<pos:position pos:line="49" pos:column="41"/></name></expr></argument>)<pos:position pos:line="49" pos:column="42"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="49" pos:column="43"/></argument_list></call></expr>;<pos:position pos:line="49" pos:column="44"/></expr_stmt>
    <expr_stmt><expr><name><name pos:line="50" pos:column="5">baton<pos:position pos:line="50" pos:column="10"/></name><operator pos:line="50" pos:column="10">-&gt;<pos:position pos:line="50" pos:column="15"/></operator><name pos:line="50" pos:column="12">pollset<pos:position pos:line="50" pos:column="19"/></name></name> <operator pos:line="50" pos:column="20">=<pos:position pos:line="50" pos:column="21"/></operator> <name pos:line="50" pos:column="22">event_pollset<pos:position pos:line="50" pos:column="35"/></name></expr>;<pos:position pos:line="50" pos:column="36"/></expr_stmt>
    <comment type="block" pos:line="51" pos:column="5">/* TODO: subpools, threads, reuse, etc.  -- currently use malloc() inside :( */</comment>
    <expr_stmt><expr><name><name pos:line="52" pos:column="5">baton<pos:position pos:line="52" pos:column="10"/></name><operator pos:line="52" pos:column="10">-&gt;<pos:position pos:line="52" pos:column="15"/></operator><name pos:line="52" pos:column="12">pool<pos:position pos:line="52" pos:column="16"/></name></name> <operator pos:line="52" pos:column="17">=<pos:position pos:line="52" pos:column="18"/></operator> <name pos:line="52" pos:column="19">p<pos:position pos:line="52" pos:column="20"/></name></expr>;<pos:position pos:line="52" pos:column="21"/></expr_stmt>

    <expr_stmt><expr><name pos:line="54" pos:column="5">g_serf<pos:position pos:line="54" pos:column="11"/></name> <operator pos:line="54" pos:column="12">=<pos:position pos:line="54" pos:column="13"/></operator> <call><name pos:line="54" pos:column="14">serf_context_create_ex<pos:position pos:line="54" pos:column="36"/></name><argument_list pos:line="54" pos:column="36">(<argument><expr><name pos:line="54" pos:column="37">baton<pos:position pos:line="54" pos:column="42"/></name></expr></argument>,
                                    <argument><expr><name pos:line="55" pos:column="37">s_socket_add<pos:position pos:line="55" pos:column="49"/></name></expr></argument>,
                                    <argument><expr><name pos:line="56" pos:column="37">s_socket_remove<pos:position pos:line="56" pos:column="52"/></name></expr></argument>, <argument><expr><name pos:line="56" pos:column="54">p<pos:position pos:line="56" pos:column="55"/></name></expr></argument>)<pos:position pos:line="56" pos:column="56"/></argument_list></call></expr>;<pos:position pos:line="56" pos:column="57"/></expr_stmt>

    <expr_stmt><expr><call><name pos:line="58" pos:column="5">ap_register_provider<pos:position pos:line="58" pos:column="25"/></name><argument_list pos:line="58" pos:column="25">(<argument><expr><name pos:line="58" pos:column="26">p<pos:position pos:line="58" pos:column="27"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="58" pos:column="29">"mpm_serf"<pos:position pos:line="58" pos:column="39"/></literal></expr></argument>,
                         <argument><expr><literal type="string" pos:line="59" pos:column="26">"instance"<pos:position pos:line="59" pos:column="36"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="59" pos:column="38">"0"<pos:position pos:line="59" pos:column="41"/></literal></expr></argument>, <argument><expr><name pos:line="59" pos:column="43">g_serf<pos:position pos:line="59" pos:column="49"/></name></expr></argument>)<pos:position pos:line="59" pos:column="50"/></argument_list></call></expr>;<pos:position pos:line="59" pos:column="51"/></expr_stmt>

<cpp:endif pos:line="61" pos:column="1">#<cpp:directive pos:line="61" pos:column="2">endif<pos:position pos:line="61" pos:column="7"/></cpp:directive></cpp:endif>

    <return pos:line="63" pos:column="5">return <expr><name pos:line="63" pos:column="12">APR_SUCCESS<pos:position pos:line="63" pos:column="23"/></name></expr>;<pos:position pos:line="63" pos:column="24"/></return>
}<pos:position pos:line="64" pos:column="2"/></block></function></unit>

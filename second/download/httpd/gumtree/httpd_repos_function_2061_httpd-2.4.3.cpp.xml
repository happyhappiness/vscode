<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/httpd/gumtree/httpd_repos_function_2061_httpd-2.4.3.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">apr_status_t<pos:position pos:line="1" pos:column="13"/></name></type> <name pos:line="1" pos:column="14">sed_eval_file<pos:position pos:line="1" pos:column="27"/></name><parameter_list pos:line="1" pos:column="27">(<parameter><decl><type><name pos:line="1" pos:column="28">sed_eval_t<pos:position pos:line="1" pos:column="38"/></name> <modifier pos:line="1" pos:column="39">*<pos:position pos:line="1" pos:column="40"/></modifier></type><name pos:line="1" pos:column="40">eval<pos:position pos:line="1" pos:column="44"/></name></decl></parameter>, <parameter><decl><type><name pos:line="1" pos:column="46">apr_file_t<pos:position pos:line="1" pos:column="56"/></name> <modifier pos:line="1" pos:column="57">*<pos:position pos:line="1" pos:column="58"/></modifier></type><name pos:line="1" pos:column="58">fin<pos:position pos:line="1" pos:column="61"/></name></decl></parameter>, <parameter><decl><type><name pos:line="1" pos:column="63">void<pos:position pos:line="1" pos:column="67"/></name> <modifier pos:line="1" pos:column="68">*<pos:position pos:line="1" pos:column="69"/></modifier></type><name pos:line="1" pos:column="69">fout<pos:position pos:line="1" pos:column="73"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="74"/></parameter_list>
<block pos:line="2" pos:column="1">{
    <for pos:line="3" pos:column="5">for <control pos:line="3" pos:column="9">(<init pos:line="3" pos:column="10">;<pos:position pos:line="3" pos:column="11"/></init><condition pos:line="3" pos:column="11">;<pos:position pos:line="3" pos:column="12"/></condition><incr/>)<pos:position pos:line="3" pos:column="13"/></control> <block pos:line="3" pos:column="14">{
        <decl_stmt><decl><type><name pos:line="4" pos:column="9">char<pos:position pos:line="4" pos:column="13"/></name></type> <name><name pos:line="4" pos:column="14">buf<pos:position pos:line="4" pos:column="17"/></name><index pos:line="4" pos:column="17">[<expr><literal type="number" pos:line="4" pos:column="18">1024<pos:position pos:line="4" pos:column="22"/></literal></expr>]<pos:position pos:line="4" pos:column="23"/></index></name></decl>;<pos:position pos:line="4" pos:column="24"/></decl_stmt>
        <decl_stmt><decl><type><name pos:line="5" pos:column="9">apr_size_t<pos:position pos:line="5" pos:column="19"/></name></type> <name pos:line="5" pos:column="20">read_bytes<pos:position pos:line="5" pos:column="30"/></name> <init pos:line="5" pos:column="31">= <expr><literal type="number" pos:line="5" pos:column="33">0<pos:position pos:line="5" pos:column="34"/></literal></expr></init></decl>;<pos:position pos:line="5" pos:column="35"/></decl_stmt>

        <expr_stmt><expr><name pos:line="7" pos:column="9">read_bytes<pos:position pos:line="7" pos:column="19"/></name> <operator pos:line="7" pos:column="20">=<pos:position pos:line="7" pos:column="21"/></operator> <sizeof pos:line="7" pos:column="22">sizeof<argument_list pos:line="7" pos:column="28">(<argument><expr><name pos:line="7" pos:column="29">buf<pos:position pos:line="7" pos:column="32"/></name></expr></argument>)<pos:position pos:line="7" pos:column="33"/></argument_list></sizeof></expr>;<pos:position pos:line="7" pos:column="34"/></expr_stmt>
        <if pos:line="8" pos:column="9">if <condition pos:line="8" pos:column="12">(<expr><call><name pos:line="8" pos:column="13">apr_file_read<pos:position pos:line="8" pos:column="26"/></name><argument_list pos:line="8" pos:column="26">(<argument><expr><name pos:line="8" pos:column="27">fin<pos:position pos:line="8" pos:column="30"/></name></expr></argument>, <argument><expr><name pos:line="8" pos:column="32">buf<pos:position pos:line="8" pos:column="35"/></name></expr></argument>, <argument><expr><operator pos:line="8" pos:column="37">&amp;<pos:position pos:line="8" pos:column="42"/></operator><name pos:line="8" pos:column="38">read_bytes<pos:position pos:line="8" pos:column="48"/></name></expr></argument>)<pos:position pos:line="8" pos:column="49"/></argument_list></call> <operator pos:line="8" pos:column="50">!=<pos:position pos:line="8" pos:column="52"/></operator> <name pos:line="8" pos:column="53">APR_SUCCESS<pos:position pos:line="8" pos:column="64"/></name></expr>)<pos:position pos:line="8" pos:column="65"/></condition><then pos:line="8" pos:column="65">
            <block type="pseudo"><break pos:line="9" pos:column="13">break;<pos:position pos:line="9" pos:column="19"/></break></block></then></if>

        <if pos:line="11" pos:column="9">if <condition pos:line="11" pos:column="12">(<expr><call><name pos:line="11" pos:column="13">sed_eval_buffer<pos:position pos:line="11" pos:column="28"/></name><argument_list pos:line="11" pos:column="28">(<argument><expr><name pos:line="11" pos:column="29">eval<pos:position pos:line="11" pos:column="33"/></name></expr></argument>, <argument><expr><name pos:line="11" pos:column="35">buf<pos:position pos:line="11" pos:column="38"/></name></expr></argument>, <argument><expr><name pos:line="11" pos:column="40">read_bytes<pos:position pos:line="11" pos:column="50"/></name></expr></argument>, <argument><expr><name pos:line="11" pos:column="52">fout<pos:position pos:line="11" pos:column="56"/></name></expr></argument>)<pos:position pos:line="11" pos:column="57"/></argument_list></call> <operator pos:line="11" pos:column="58">!=<pos:position pos:line="11" pos:column="60"/></operator> <name pos:line="11" pos:column="61">APR_SUCCESS<pos:position pos:line="11" pos:column="72"/></name></expr>)<pos:position pos:line="11" pos:column="73"/></condition><then pos:line="11" pos:column="73">
            <block type="pseudo"><return pos:line="12" pos:column="13">return <expr><name pos:line="12" pos:column="20">APR_EGENERAL<pos:position pos:line="12" pos:column="32"/></name></expr>;<pos:position pos:line="12" pos:column="33"/></return></block></then></if>

        <if pos:line="14" pos:column="9">if <condition pos:line="14" pos:column="12">(<expr><name><name pos:line="14" pos:column="13">eval<pos:position pos:line="14" pos:column="17"/></name><operator pos:line="14" pos:column="17">-&gt;<pos:position pos:line="14" pos:column="22"/></operator><name pos:line="14" pos:column="19">quitflag<pos:position pos:line="14" pos:column="27"/></name></name></expr>)<pos:position pos:line="14" pos:column="28"/></condition><then pos:line="14" pos:column="28">
            <block type="pseudo"><return pos:line="15" pos:column="13">return <expr><name pos:line="15" pos:column="20">APR_SUCCESS<pos:position pos:line="15" pos:column="31"/></name></expr>;<pos:position pos:line="15" pos:column="32"/></return></block></then></if>
    }<pos:position pos:line="16" pos:column="6"/></block></for>

    <return pos:line="18" pos:column="5">return <expr><call><name pos:line="18" pos:column="12">sed_finalize_eval<pos:position pos:line="18" pos:column="29"/></name><argument_list pos:line="18" pos:column="29">(<argument><expr><name pos:line="18" pos:column="30">eval<pos:position pos:line="18" pos:column="34"/></name></expr></argument>, <argument><expr><name pos:line="18" pos:column="36">fout<pos:position pos:line="18" pos:column="40"/></name></expr></argument>)<pos:position pos:line="18" pos:column="41"/></argument_list></call></expr>;<pos:position pos:line="18" pos:column="42"/></return>
}<pos:position pos:line="19" pos:column="2"/></block></function></unit>

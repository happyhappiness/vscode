<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/httpd/gumtree/httpd_function_5250.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">int<pos:position pos:line="1" pos:column="11"/></name></type> <name pos:line="1" pos:column="12">send_handles_to_child<pos:position pos:line="1" pos:column="33"/></name><parameter_list pos:line="1" pos:column="33">(<parameter><decl><type><name pos:line="1" pos:column="34">apr_pool_t<pos:position pos:line="1" pos:column="44"/></name> <modifier pos:line="1" pos:column="45">*<pos:position pos:line="1" pos:column="46"/></modifier></type><name pos:line="1" pos:column="46">p<pos:position pos:line="1" pos:column="47"/></name></decl></parameter>,
                                 <parameter><decl><type><name pos:line="2" pos:column="34">HANDLE<pos:position pos:line="2" pos:column="40"/></name></type> <name pos:line="2" pos:column="41">child_ready_event<pos:position pos:line="2" pos:column="58"/></name></decl></parameter>,
                                 <parameter><decl><type><name pos:line="3" pos:column="34">HANDLE<pos:position pos:line="3" pos:column="40"/></name></type> <name pos:line="3" pos:column="41">child_exit_event<pos:position pos:line="3" pos:column="57"/></name></decl></parameter>,
                                 <parameter><decl><type><name pos:line="4" pos:column="34">apr_proc_mutex_t<pos:position pos:line="4" pos:column="50"/></name> <modifier pos:line="4" pos:column="51">*<pos:position pos:line="4" pos:column="52"/></modifier></type><name pos:line="4" pos:column="52">child_start_mutex<pos:position pos:line="4" pos:column="69"/></name></decl></parameter>,
                                 <parameter><decl><type><name pos:line="5" pos:column="34">apr_shm_t<pos:position pos:line="5" pos:column="43"/></name> <modifier pos:line="5" pos:column="44">*<pos:position pos:line="5" pos:column="45"/></modifier></type><name pos:line="5" pos:column="45">scoreboard_shm<pos:position pos:line="5" pos:column="59"/></name></decl></parameter>,
                                 <parameter><decl><type><name pos:line="6" pos:column="34">HANDLE<pos:position pos:line="6" pos:column="40"/></name></type> <name pos:line="6" pos:column="41">hProcess<pos:position pos:line="6" pos:column="49"/></name></decl></parameter>,
                                 <parameter><decl><type><name pos:line="7" pos:column="34">apr_file_t<pos:position pos:line="7" pos:column="44"/></name> <modifier pos:line="7" pos:column="45">*<pos:position pos:line="7" pos:column="46"/></modifier></type><name pos:line="7" pos:column="46">child_in<pos:position pos:line="7" pos:column="54"/></name></decl></parameter>)<pos:position pos:line="7" pos:column="55"/></parameter_list>
<block pos:line="8" pos:column="1">{
    <decl_stmt><decl><type><name pos:line="9" pos:column="5">apr_status_t<pos:position pos:line="9" pos:column="17"/></name></type> <name pos:line="9" pos:column="18">rv<pos:position pos:line="9" pos:column="20"/></name></decl>;<pos:position pos:line="9" pos:column="21"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="10" pos:column="5">HANDLE<pos:position pos:line="10" pos:column="11"/></name></type> <name pos:line="10" pos:column="12">hCurrentProcess<pos:position pos:line="10" pos:column="27"/></name> <init pos:line="10" pos:column="28">= <expr><call><name pos:line="10" pos:column="30">GetCurrentProcess<pos:position pos:line="10" pos:column="47"/></name><argument_list pos:line="10" pos:column="47">()<pos:position pos:line="10" pos:column="49"/></argument_list></call></expr></init></decl>;<pos:position pos:line="10" pos:column="50"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="11" pos:column="5">HANDLE<pos:position pos:line="11" pos:column="11"/></name></type> <name pos:line="11" pos:column="12">hDup<pos:position pos:line="11" pos:column="16"/></name></decl>;<pos:position pos:line="11" pos:column="17"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="12" pos:column="5">HANDLE<pos:position pos:line="12" pos:column="11"/></name></type> <name pos:line="12" pos:column="12">os_start<pos:position pos:line="12" pos:column="20"/></name></decl>;<pos:position pos:line="12" pos:column="21"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="13" pos:column="5">HANDLE<pos:position pos:line="13" pos:column="11"/></name></type> <name pos:line="13" pos:column="12">hScore<pos:position pos:line="13" pos:column="18"/></name></decl>;<pos:position pos:line="13" pos:column="19"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="14" pos:column="5">apr_size_t<pos:position pos:line="14" pos:column="15"/></name></type> <name pos:line="14" pos:column="16">BytesWritten<pos:position pos:line="14" pos:column="28"/></name></decl>;<pos:position pos:line="14" pos:column="29"/></decl_stmt>

    <if pos:line="16" pos:column="5">if <condition pos:line="16" pos:column="8">(<expr><operator pos:line="16" pos:column="9">!<pos:position pos:line="16" pos:column="10"/></operator><call><name pos:line="16" pos:column="10">DuplicateHandle<pos:position pos:line="16" pos:column="25"/></name><argument_list pos:line="16" pos:column="25">(<argument><expr><name pos:line="16" pos:column="26">hCurrentProcess<pos:position pos:line="16" pos:column="41"/></name></expr></argument>, <argument><expr><name pos:line="16" pos:column="43">child_ready_event<pos:position pos:line="16" pos:column="60"/></name></expr></argument>, <argument><expr><name pos:line="16" pos:column="62">hProcess<pos:position pos:line="16" pos:column="70"/></name></expr></argument>, <argument><expr><operator pos:line="16" pos:column="72">&amp;<pos:position pos:line="16" pos:column="77"/></operator><name pos:line="16" pos:column="73">hDup<pos:position pos:line="16" pos:column="77"/></name></expr></argument>,
        <argument><expr><name pos:line="17" pos:column="9">EVENT_MODIFY_STATE<pos:position pos:line="17" pos:column="27"/></name> <operator pos:line="17" pos:column="28">|<pos:position pos:line="17" pos:column="29"/></operator> <name pos:line="17" pos:column="30">SYNCHRONIZE<pos:position pos:line="17" pos:column="41"/></name></expr></argument>, <argument><expr><name pos:line="17" pos:column="43">FALSE<pos:position pos:line="17" pos:column="48"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="17" pos:column="50">0<pos:position pos:line="17" pos:column="51"/></literal></expr></argument>)<pos:position pos:line="17" pos:column="52"/></argument_list></call></expr>)<pos:position pos:line="17" pos:column="53"/></condition><then pos:line="17" pos:column="53"> <block pos:line="17" pos:column="54">{
        <expr_stmt><expr><call><name pos:line="18" pos:column="9">ap_log_error<pos:position pos:line="18" pos:column="21"/></name><argument_list pos:line="18" pos:column="21">(<argument><expr><name pos:line="18" pos:column="22">APLOG_MARK<pos:position pos:line="18" pos:column="32"/></name></expr></argument>, <argument><expr><name pos:line="18" pos:column="34">APLOG_CRIT<pos:position pos:line="18" pos:column="44"/></name></expr></argument>, <argument><expr><call><name pos:line="18" pos:column="46">apr_get_os_error<pos:position pos:line="18" pos:column="62"/></name><argument_list pos:line="18" pos:column="62">()<pos:position pos:line="18" pos:column="64"/></argument_list></call></expr></argument>, <argument><expr><name pos:line="18" pos:column="66">ap_server_conf<pos:position pos:line="18" pos:column="80"/></name></expr></argument>,
                     <argument><expr><literal type="string" pos:line="19" pos:column="22">"Parent: Unable to duplicate the ready event handle for the child"<pos:position pos:line="19" pos:column="88"/></literal></expr></argument>)<pos:position pos:line="19" pos:column="89"/></argument_list></call></expr>;<pos:position pos:line="19" pos:column="90"/></expr_stmt>
        <return pos:line="20" pos:column="9">return <expr><operator pos:line="20" pos:column="16">-<pos:position pos:line="20" pos:column="17"/></operator><literal type="number" pos:line="20" pos:column="17">1<pos:position pos:line="20" pos:column="18"/></literal></expr>;<pos:position pos:line="20" pos:column="19"/></return>
    }<pos:position pos:line="21" pos:column="6"/></block></then></if>
    <if pos:line="22" pos:column="5">if <condition pos:line="22" pos:column="8">(<expr><operator pos:line="22" pos:column="9">(<pos:position pos:line="22" pos:column="10"/></operator><name pos:line="22" pos:column="10">rv<pos:position pos:line="22" pos:column="12"/></name> <operator pos:line="22" pos:column="13">=<pos:position pos:line="22" pos:column="14"/></operator> <call><name pos:line="22" pos:column="15">apr_file_write_full<pos:position pos:line="22" pos:column="34"/></name><argument_list pos:line="22" pos:column="34">(<argument><expr><name pos:line="22" pos:column="35">child_in<pos:position pos:line="22" pos:column="43"/></name></expr></argument>, <argument><expr><operator pos:line="22" pos:column="45">&amp;<pos:position pos:line="22" pos:column="50"/></operator><name pos:line="22" pos:column="46">hDup<pos:position pos:line="22" pos:column="50"/></name></expr></argument>, <argument><expr><sizeof pos:line="22" pos:column="52">sizeof<argument_list pos:line="22" pos:column="58">(<argument><expr><name pos:line="22" pos:column="59">hDup<pos:position pos:line="22" pos:column="63"/></name></expr></argument>)<pos:position pos:line="22" pos:column="64"/></argument_list></sizeof></expr></argument>, <argument><expr><operator pos:line="22" pos:column="66">&amp;<pos:position pos:line="22" pos:column="71"/></operator><name pos:line="22" pos:column="67">BytesWritten<pos:position pos:line="22" pos:column="79"/></name></expr></argument>)<pos:position pos:line="22" pos:column="80"/></argument_list></call><operator pos:line="22" pos:column="80">)<pos:position pos:line="22" pos:column="81"/></operator>
            <operator pos:line="23" pos:column="13">!=<pos:position pos:line="23" pos:column="15"/></operator> <name pos:line="23" pos:column="16">APR_SUCCESS<pos:position pos:line="23" pos:column="27"/></name></expr>)<pos:position pos:line="23" pos:column="28"/></condition><then pos:line="23" pos:column="28"> <block pos:line="23" pos:column="29">{
        <expr_stmt><expr><call><name pos:line="24" pos:column="9">ap_log_error<pos:position pos:line="24" pos:column="21"/></name><argument_list pos:line="24" pos:column="21">(<argument><expr><name pos:line="24" pos:column="22">APLOG_MARK<pos:position pos:line="24" pos:column="32"/></name></expr></argument>, <argument><expr><name pos:line="24" pos:column="34">APLOG_CRIT<pos:position pos:line="24" pos:column="44"/></name></expr></argument>, <argument><expr><name pos:line="24" pos:column="46">rv<pos:position pos:line="24" pos:column="48"/></name></expr></argument>, <argument><expr><name pos:line="24" pos:column="50">ap_server_conf<pos:position pos:line="24" pos:column="64"/></name></expr></argument>,
                     <argument><expr><literal type="string" pos:line="25" pos:column="22">"Parent: Unable to send the exit event handle to the child"<pos:position pos:line="25" pos:column="81"/></literal></expr></argument>)<pos:position pos:line="25" pos:column="82"/></argument_list></call></expr>;<pos:position pos:line="25" pos:column="83"/></expr_stmt>
        <return pos:line="26" pos:column="9">return <expr><operator pos:line="26" pos:column="16">-<pos:position pos:line="26" pos:column="17"/></operator><literal type="number" pos:line="26" pos:column="17">1<pos:position pos:line="26" pos:column="18"/></literal></expr>;<pos:position pos:line="26" pos:column="19"/></return>
    }<pos:position pos:line="27" pos:column="6"/></block></then></if>
    <if pos:line="28" pos:column="5">if <condition pos:line="28" pos:column="8">(<expr><operator pos:line="28" pos:column="9">!<pos:position pos:line="28" pos:column="10"/></operator><call><name pos:line="28" pos:column="10">DuplicateHandle<pos:position pos:line="28" pos:column="25"/></name><argument_list pos:line="28" pos:column="25">(<argument><expr><name pos:line="28" pos:column="26">hCurrentProcess<pos:position pos:line="28" pos:column="41"/></name></expr></argument>, <argument><expr><name pos:line="28" pos:column="43">child_exit_event<pos:position pos:line="28" pos:column="59"/></name></expr></argument>, <argument><expr><name pos:line="28" pos:column="61">hProcess<pos:position pos:line="28" pos:column="69"/></name></expr></argument>, <argument><expr><operator pos:line="28" pos:column="71">&amp;<pos:position pos:line="28" pos:column="76"/></operator><name pos:line="28" pos:column="72">hDup<pos:position pos:line="28" pos:column="76"/></name></expr></argument>,
                         <argument><expr><name pos:line="29" pos:column="26">EVENT_MODIFY_STATE<pos:position pos:line="29" pos:column="44"/></name> <operator pos:line="29" pos:column="45">|<pos:position pos:line="29" pos:column="46"/></operator> <name pos:line="29" pos:column="47">SYNCHRONIZE<pos:position pos:line="29" pos:column="58"/></name></expr></argument>, <argument><expr><name pos:line="29" pos:column="60">FALSE<pos:position pos:line="29" pos:column="65"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="29" pos:column="67">0<pos:position pos:line="29" pos:column="68"/></literal></expr></argument>)<pos:position pos:line="29" pos:column="69"/></argument_list></call></expr>)<pos:position pos:line="29" pos:column="70"/></condition><then pos:line="29" pos:column="70"> <block pos:line="29" pos:column="71">{
        <expr_stmt><expr><call><name pos:line="30" pos:column="9">ap_log_error<pos:position pos:line="30" pos:column="21"/></name><argument_list pos:line="30" pos:column="21">(<argument><expr><name pos:line="30" pos:column="22">APLOG_MARK<pos:position pos:line="30" pos:column="32"/></name></expr></argument>, <argument><expr><name pos:line="30" pos:column="34">APLOG_CRIT<pos:position pos:line="30" pos:column="44"/></name></expr></argument>, <argument><expr><call><name pos:line="30" pos:column="46">apr_get_os_error<pos:position pos:line="30" pos:column="62"/></name><argument_list pos:line="30" pos:column="62">()<pos:position pos:line="30" pos:column="64"/></argument_list></call></expr></argument>, <argument><expr><name pos:line="30" pos:column="66">ap_server_conf<pos:position pos:line="30" pos:column="80"/></name></expr></argument>,
                     <argument><expr><literal type="string" pos:line="31" pos:column="22">"Parent: Unable to duplicate the exit event handle for the child"<pos:position pos:line="31" pos:column="87"/></literal></expr></argument>)<pos:position pos:line="31" pos:column="88"/></argument_list></call></expr>;<pos:position pos:line="31" pos:column="89"/></expr_stmt>
        <return pos:line="32" pos:column="9">return <expr><operator pos:line="32" pos:column="16">-<pos:position pos:line="32" pos:column="17"/></operator><literal type="number" pos:line="32" pos:column="17">1<pos:position pos:line="32" pos:column="18"/></literal></expr>;<pos:position pos:line="32" pos:column="19"/></return>
    }<pos:position pos:line="33" pos:column="6"/></block></then></if>
    <if pos:line="34" pos:column="5">if <condition pos:line="34" pos:column="8">(<expr><operator pos:line="34" pos:column="9">(<pos:position pos:line="34" pos:column="10"/></operator><name pos:line="34" pos:column="10">rv<pos:position pos:line="34" pos:column="12"/></name> <operator pos:line="34" pos:column="13">=<pos:position pos:line="34" pos:column="14"/></operator> <call><name pos:line="34" pos:column="15">apr_file_write_full<pos:position pos:line="34" pos:column="34"/></name><argument_list pos:line="34" pos:column="34">(<argument><expr><name pos:line="34" pos:column="35">child_in<pos:position pos:line="34" pos:column="43"/></name></expr></argument>, <argument><expr><operator pos:line="34" pos:column="45">&amp;<pos:position pos:line="34" pos:column="50"/></operator><name pos:line="34" pos:column="46">hDup<pos:position pos:line="34" pos:column="50"/></name></expr></argument>, <argument><expr><sizeof pos:line="34" pos:column="52">sizeof<argument_list pos:line="34" pos:column="58">(<argument><expr><name pos:line="34" pos:column="59">hDup<pos:position pos:line="34" pos:column="63"/></name></expr></argument>)<pos:position pos:line="34" pos:column="64"/></argument_list></sizeof></expr></argument>, <argument><expr><operator pos:line="34" pos:column="66">&amp;<pos:position pos:line="34" pos:column="71"/></operator><name pos:line="34" pos:column="67">BytesWritten<pos:position pos:line="34" pos:column="79"/></name></expr></argument>)<pos:position pos:line="34" pos:column="80"/></argument_list></call><operator pos:line="34" pos:column="80">)<pos:position pos:line="34" pos:column="81"/></operator>
            <operator pos:line="35" pos:column="13">!=<pos:position pos:line="35" pos:column="15"/></operator> <name pos:line="35" pos:column="16">APR_SUCCESS<pos:position pos:line="35" pos:column="27"/></name></expr>)<pos:position pos:line="35" pos:column="28"/></condition><then pos:line="35" pos:column="28"> <block pos:line="35" pos:column="29">{
        <expr_stmt><expr><call><name pos:line="36" pos:column="9">ap_log_error<pos:position pos:line="36" pos:column="21"/></name><argument_list pos:line="36" pos:column="21">(<argument><expr><name pos:line="36" pos:column="22">APLOG_MARK<pos:position pos:line="36" pos:column="32"/></name></expr></argument>, <argument><expr><name pos:line="36" pos:column="34">APLOG_CRIT<pos:position pos:line="36" pos:column="44"/></name></expr></argument>, <argument><expr><name pos:line="36" pos:column="46">rv<pos:position pos:line="36" pos:column="48"/></name></expr></argument>, <argument><expr><name pos:line="36" pos:column="50">ap_server_conf<pos:position pos:line="36" pos:column="64"/></name></expr></argument>,
                     <argument><expr><literal type="string" pos:line="37" pos:column="22">"Parent: Unable to send the exit event handle to the child"<pos:position pos:line="37" pos:column="81"/></literal></expr></argument>)<pos:position pos:line="37" pos:column="82"/></argument_list></call></expr>;<pos:position pos:line="37" pos:column="83"/></expr_stmt>
        <return pos:line="38" pos:column="9">return <expr><operator pos:line="38" pos:column="16">-<pos:position pos:line="38" pos:column="17"/></operator><literal type="number" pos:line="38" pos:column="17">1<pos:position pos:line="38" pos:column="18"/></literal></expr>;<pos:position pos:line="38" pos:column="19"/></return>
    }<pos:position pos:line="39" pos:column="6"/></block></then></if>
    <if pos:line="40" pos:column="5">if <condition pos:line="40" pos:column="8">(<expr><operator pos:line="40" pos:column="9">(<pos:position pos:line="40" pos:column="10"/></operator><name pos:line="40" pos:column="10">rv<pos:position pos:line="40" pos:column="12"/></name> <operator pos:line="40" pos:column="13">=<pos:position pos:line="40" pos:column="14"/></operator> <call><name pos:line="40" pos:column="15">apr_os_proc_mutex_get<pos:position pos:line="40" pos:column="36"/></name><argument_list pos:line="40" pos:column="36">(<argument><expr><operator pos:line="40" pos:column="37">&amp;<pos:position pos:line="40" pos:column="42"/></operator><name pos:line="40" pos:column="38">os_start<pos:position pos:line="40" pos:column="46"/></name></expr></argument>, <argument><expr><name pos:line="40" pos:column="48">child_start_mutex<pos:position pos:line="40" pos:column="65"/></name></expr></argument>)<pos:position pos:line="40" pos:column="66"/></argument_list></call><operator pos:line="40" pos:column="66">)<pos:position pos:line="40" pos:column="67"/></operator> <operator pos:line="40" pos:column="68">!=<pos:position pos:line="40" pos:column="70"/></operator> <name pos:line="40" pos:column="71">APR_SUCCESS<pos:position pos:line="40" pos:column="82"/></name></expr>)<pos:position pos:line="40" pos:column="83"/></condition><then pos:line="40" pos:column="83"> <block pos:line="40" pos:column="84">{
        <expr_stmt><expr><call><name pos:line="41" pos:column="9">ap_log_error<pos:position pos:line="41" pos:column="21"/></name><argument_list pos:line="41" pos:column="21">(<argument><expr><name pos:line="41" pos:column="22">APLOG_MARK<pos:position pos:line="41" pos:column="32"/></name></expr></argument>, <argument><expr><name pos:line="41" pos:column="34">APLOG_CRIT<pos:position pos:line="41" pos:column="44"/></name></expr></argument>, <argument><expr><name pos:line="41" pos:column="46">rv<pos:position pos:line="41" pos:column="48"/></name></expr></argument>, <argument><expr><name pos:line="41" pos:column="50">ap_server_conf<pos:position pos:line="41" pos:column="64"/></name></expr></argument>,
                     <argument><expr><literal type="string" pos:line="42" pos:column="22">"Parent: Unable to retrieve the start mutex for the child"<pos:position pos:line="42" pos:column="80"/></literal></expr></argument>)<pos:position pos:line="42" pos:column="81"/></argument_list></call></expr>;<pos:position pos:line="42" pos:column="82"/></expr_stmt>
        <return pos:line="43" pos:column="9">return <expr><operator pos:line="43" pos:column="16">-<pos:position pos:line="43" pos:column="17"/></operator><literal type="number" pos:line="43" pos:column="17">1<pos:position pos:line="43" pos:column="18"/></literal></expr>;<pos:position pos:line="43" pos:column="19"/></return>
    }<pos:position pos:line="44" pos:column="6"/></block></then></if>
    <if pos:line="45" pos:column="5">if <condition pos:line="45" pos:column="8">(<expr><operator pos:line="45" pos:column="9">!<pos:position pos:line="45" pos:column="10"/></operator><call><name pos:line="45" pos:column="10">DuplicateHandle<pos:position pos:line="45" pos:column="25"/></name><argument_list pos:line="45" pos:column="25">(<argument><expr><name pos:line="45" pos:column="26">hCurrentProcess<pos:position pos:line="45" pos:column="41"/></name></expr></argument>, <argument><expr><name pos:line="45" pos:column="43">os_start<pos:position pos:line="45" pos:column="51"/></name></expr></argument>, <argument><expr><name pos:line="45" pos:column="53">hProcess<pos:position pos:line="45" pos:column="61"/></name></expr></argument>, <argument><expr><operator pos:line="45" pos:column="63">&amp;<pos:position pos:line="45" pos:column="68"/></operator><name pos:line="45" pos:column="64">hDup<pos:position pos:line="45" pos:column="68"/></name></expr></argument>,
                         <argument><expr><name pos:line="46" pos:column="26">SYNCHRONIZE<pos:position pos:line="46" pos:column="37"/></name></expr></argument>, <argument><expr><name pos:line="46" pos:column="39">FALSE<pos:position pos:line="46" pos:column="44"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="46" pos:column="46">0<pos:position pos:line="46" pos:column="47"/></literal></expr></argument>)<pos:position pos:line="46" pos:column="48"/></argument_list></call></expr>)<pos:position pos:line="46" pos:column="49"/></condition><then pos:line="46" pos:column="49"> <block pos:line="46" pos:column="50">{
        <expr_stmt><expr><call><name pos:line="47" pos:column="9">ap_log_error<pos:position pos:line="47" pos:column="21"/></name><argument_list pos:line="47" pos:column="21">(<argument><expr><name pos:line="47" pos:column="22">APLOG_MARK<pos:position pos:line="47" pos:column="32"/></name></expr></argument>, <argument><expr><name pos:line="47" pos:column="34">APLOG_CRIT<pos:position pos:line="47" pos:column="44"/></name></expr></argument>, <argument><expr><call><name pos:line="47" pos:column="46">apr_get_os_error<pos:position pos:line="47" pos:column="62"/></name><argument_list pos:line="47" pos:column="62">()<pos:position pos:line="47" pos:column="64"/></argument_list></call></expr></argument>, <argument><expr><name pos:line="47" pos:column="66">ap_server_conf<pos:position pos:line="47" pos:column="80"/></name></expr></argument>,
                     <argument><expr><literal type="string" pos:line="48" pos:column="22">"Parent: Unable to duplicate the start mutex to the child"<pos:position pos:line="48" pos:column="80"/></literal></expr></argument>)<pos:position pos:line="48" pos:column="81"/></argument_list></call></expr>;<pos:position pos:line="48" pos:column="82"/></expr_stmt>
        <return pos:line="49" pos:column="9">return <expr><operator pos:line="49" pos:column="16">-<pos:position pos:line="49" pos:column="17"/></operator><literal type="number" pos:line="49" pos:column="17">1<pos:position pos:line="49" pos:column="18"/></literal></expr>;<pos:position pos:line="49" pos:column="19"/></return>
    }<pos:position pos:line="50" pos:column="6"/></block></then></if>
    <if pos:line="51" pos:column="5">if <condition pos:line="51" pos:column="8">(<expr><operator pos:line="51" pos:column="9">(<pos:position pos:line="51" pos:column="10"/></operator><name pos:line="51" pos:column="10">rv<pos:position pos:line="51" pos:column="12"/></name> <operator pos:line="51" pos:column="13">=<pos:position pos:line="51" pos:column="14"/></operator> <call><name pos:line="51" pos:column="15">apr_file_write_full<pos:position pos:line="51" pos:column="34"/></name><argument_list pos:line="51" pos:column="34">(<argument><expr><name pos:line="51" pos:column="35">child_in<pos:position pos:line="51" pos:column="43"/></name></expr></argument>, <argument><expr><operator pos:line="51" pos:column="45">&amp;<pos:position pos:line="51" pos:column="50"/></operator><name pos:line="51" pos:column="46">hDup<pos:position pos:line="51" pos:column="50"/></name></expr></argument>, <argument><expr><sizeof pos:line="51" pos:column="52">sizeof<argument_list pos:line="51" pos:column="58">(<argument><expr><name pos:line="51" pos:column="59">hDup<pos:position pos:line="51" pos:column="63"/></name></expr></argument>)<pos:position pos:line="51" pos:column="64"/></argument_list></sizeof></expr></argument>, <argument><expr><operator pos:line="51" pos:column="66">&amp;<pos:position pos:line="51" pos:column="71"/></operator><name pos:line="51" pos:column="67">BytesWritten<pos:position pos:line="51" pos:column="79"/></name></expr></argument>)<pos:position pos:line="51" pos:column="80"/></argument_list></call><operator pos:line="51" pos:column="80">)<pos:position pos:line="51" pos:column="81"/></operator>
            <operator pos:line="52" pos:column="13">!=<pos:position pos:line="52" pos:column="15"/></operator> <name pos:line="52" pos:column="16">APR_SUCCESS<pos:position pos:line="52" pos:column="27"/></name></expr>)<pos:position pos:line="52" pos:column="28"/></condition><then pos:line="52" pos:column="28"> <block pos:line="52" pos:column="29">{
        <expr_stmt><expr><call><name pos:line="53" pos:column="9">ap_log_error<pos:position pos:line="53" pos:column="21"/></name><argument_list pos:line="53" pos:column="21">(<argument><expr><name pos:line="53" pos:column="22">APLOG_MARK<pos:position pos:line="53" pos:column="32"/></name></expr></argument>, <argument><expr><name pos:line="53" pos:column="34">APLOG_CRIT<pos:position pos:line="53" pos:column="44"/></name></expr></argument>, <argument><expr><name pos:line="53" pos:column="46">rv<pos:position pos:line="53" pos:column="48"/></name></expr></argument>, <argument><expr><name pos:line="53" pos:column="50">ap_server_conf<pos:position pos:line="53" pos:column="64"/></name></expr></argument>,
                     <argument><expr><literal type="string" pos:line="54" pos:column="22">"Parent: Unable to send the start mutex to the child"<pos:position pos:line="54" pos:column="75"/></literal></expr></argument>)<pos:position pos:line="54" pos:column="76"/></argument_list></call></expr>;<pos:position pos:line="54" pos:column="77"/></expr_stmt>
        <return pos:line="55" pos:column="9">return <expr><operator pos:line="55" pos:column="16">-<pos:position pos:line="55" pos:column="17"/></operator><literal type="number" pos:line="55" pos:column="17">1<pos:position pos:line="55" pos:column="18"/></literal></expr>;<pos:position pos:line="55" pos:column="19"/></return>
    }<pos:position pos:line="56" pos:column="6"/></block></then></if>
    <if pos:line="57" pos:column="5">if <condition pos:line="57" pos:column="8">(<expr><operator pos:line="57" pos:column="9">(<pos:position pos:line="57" pos:column="10"/></operator><name pos:line="57" pos:column="10">rv<pos:position pos:line="57" pos:column="12"/></name> <operator pos:line="57" pos:column="13">=<pos:position pos:line="57" pos:column="14"/></operator> <call><name pos:line="57" pos:column="15">apr_os_shm_get<pos:position pos:line="57" pos:column="29"/></name><argument_list pos:line="57" pos:column="29">(<argument><expr><operator pos:line="57" pos:column="30">&amp;<pos:position pos:line="57" pos:column="35"/></operator><name pos:line="57" pos:column="31">hScore<pos:position pos:line="57" pos:column="37"/></name></expr></argument>, <argument><expr><name pos:line="57" pos:column="39">scoreboard_shm<pos:position pos:line="57" pos:column="53"/></name></expr></argument>)<pos:position pos:line="57" pos:column="54"/></argument_list></call><operator pos:line="57" pos:column="54">)<pos:position pos:line="57" pos:column="55"/></operator> <operator pos:line="57" pos:column="56">!=<pos:position pos:line="57" pos:column="58"/></operator> <name pos:line="57" pos:column="59">APR_SUCCESS<pos:position pos:line="57" pos:column="70"/></name></expr>)<pos:position pos:line="57" pos:column="71"/></condition><then pos:line="57" pos:column="71"> <block pos:line="57" pos:column="72">{
        <expr_stmt><expr><call><name pos:line="58" pos:column="9">ap_log_error<pos:position pos:line="58" pos:column="21"/></name><argument_list pos:line="58" pos:column="21">(<argument><expr><name pos:line="58" pos:column="22">APLOG_MARK<pos:position pos:line="58" pos:column="32"/></name></expr></argument>, <argument><expr><name pos:line="58" pos:column="34">APLOG_CRIT<pos:position pos:line="58" pos:column="44"/></name></expr></argument>, <argument><expr><name pos:line="58" pos:column="46">rv<pos:position pos:line="58" pos:column="48"/></name></expr></argument>, <argument><expr><name pos:line="58" pos:column="50">ap_server_conf<pos:position pos:line="58" pos:column="64"/></name></expr></argument>,
                     <argument><expr><literal type="string" pos:line="59" pos:column="22">"Parent: Unable to retrieve the scoreboard handle for the child"<pos:position pos:line="59" pos:column="86"/></literal></expr></argument>)<pos:position pos:line="59" pos:column="87"/></argument_list></call></expr>;<pos:position pos:line="59" pos:column="88"/></expr_stmt>
        <return pos:line="60" pos:column="9">return <expr><operator pos:line="60" pos:column="16">-<pos:position pos:line="60" pos:column="17"/></operator><literal type="number" pos:line="60" pos:column="17">1<pos:position pos:line="60" pos:column="18"/></literal></expr>;<pos:position pos:line="60" pos:column="19"/></return>
    }<pos:position pos:line="61" pos:column="6"/></block></then></if>
    <if pos:line="62" pos:column="5">if <condition pos:line="62" pos:column="8">(<expr><operator pos:line="62" pos:column="9">!<pos:position pos:line="62" pos:column="10"/></operator><call><name pos:line="62" pos:column="10">DuplicateHandle<pos:position pos:line="62" pos:column="25"/></name><argument_list pos:line="62" pos:column="25">(<argument><expr><name pos:line="62" pos:column="26">hCurrentProcess<pos:position pos:line="62" pos:column="41"/></name></expr></argument>, <argument><expr><name pos:line="62" pos:column="43">hScore<pos:position pos:line="62" pos:column="49"/></name></expr></argument>, <argument><expr><name pos:line="62" pos:column="51">hProcess<pos:position pos:line="62" pos:column="59"/></name></expr></argument>, <argument><expr><operator pos:line="62" pos:column="61">&amp;<pos:position pos:line="62" pos:column="66"/></operator><name pos:line="62" pos:column="62">hDup<pos:position pos:line="62" pos:column="66"/></name></expr></argument>,
                         <argument><expr><name pos:line="63" pos:column="26">FILE_MAP_READ<pos:position pos:line="63" pos:column="39"/></name> <operator pos:line="63" pos:column="40">|<pos:position pos:line="63" pos:column="41"/></operator> <name pos:line="63" pos:column="42">FILE_MAP_WRITE<pos:position pos:line="63" pos:column="56"/></name></expr></argument>, <argument><expr><name pos:line="63" pos:column="58">FALSE<pos:position pos:line="63" pos:column="63"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="63" pos:column="65">0<pos:position pos:line="63" pos:column="66"/></literal></expr></argument>)<pos:position pos:line="63" pos:column="67"/></argument_list></call></expr>)<pos:position pos:line="63" pos:column="68"/></condition><then pos:line="63" pos:column="68"> <block pos:line="63" pos:column="69">{
        <expr_stmt><expr><call><name pos:line="64" pos:column="9">ap_log_error<pos:position pos:line="64" pos:column="21"/></name><argument_list pos:line="64" pos:column="21">(<argument><expr><name pos:line="64" pos:column="22">APLOG_MARK<pos:position pos:line="64" pos:column="32"/></name></expr></argument>, <argument><expr><name pos:line="64" pos:column="34">APLOG_CRIT<pos:position pos:line="64" pos:column="44"/></name></expr></argument>, <argument><expr><call><name pos:line="64" pos:column="46">apr_get_os_error<pos:position pos:line="64" pos:column="62"/></name><argument_list pos:line="64" pos:column="62">()<pos:position pos:line="64" pos:column="64"/></argument_list></call></expr></argument>, <argument><expr><name pos:line="64" pos:column="66">ap_server_conf<pos:position pos:line="64" pos:column="80"/></name></expr></argument>,
                     <argument><expr><literal type="string" pos:line="65" pos:column="22">"Parent: Unable to duplicate the scoreboard handle to the child"<pos:position pos:line="65" pos:column="86"/></literal></expr></argument>)<pos:position pos:line="65" pos:column="87"/></argument_list></call></expr>;<pos:position pos:line="65" pos:column="88"/></expr_stmt>
        <return pos:line="66" pos:column="9">return <expr><operator pos:line="66" pos:column="16">-<pos:position pos:line="66" pos:column="17"/></operator><literal type="number" pos:line="66" pos:column="17">1<pos:position pos:line="66" pos:column="18"/></literal></expr>;<pos:position pos:line="66" pos:column="19"/></return>
    }<pos:position pos:line="67" pos:column="6"/></block></then></if>
    <if pos:line="68" pos:column="5">if <condition pos:line="68" pos:column="8">(<expr><operator pos:line="68" pos:column="9">(<pos:position pos:line="68" pos:column="10"/></operator><name pos:line="68" pos:column="10">rv<pos:position pos:line="68" pos:column="12"/></name> <operator pos:line="68" pos:column="13">=<pos:position pos:line="68" pos:column="14"/></operator> <call><name pos:line="68" pos:column="15">apr_file_write_full<pos:position pos:line="68" pos:column="34"/></name><argument_list pos:line="68" pos:column="34">(<argument><expr><name pos:line="68" pos:column="35">child_in<pos:position pos:line="68" pos:column="43"/></name></expr></argument>, <argument><expr><operator pos:line="68" pos:column="45">&amp;<pos:position pos:line="68" pos:column="50"/></operator><name pos:line="68" pos:column="46">hDup<pos:position pos:line="68" pos:column="50"/></name></expr></argument>, <argument><expr><sizeof pos:line="68" pos:column="52">sizeof<argument_list pos:line="68" pos:column="58">(<argument><expr><name pos:line="68" pos:column="59">hDup<pos:position pos:line="68" pos:column="63"/></name></expr></argument>)<pos:position pos:line="68" pos:column="64"/></argument_list></sizeof></expr></argument>, <argument><expr><operator pos:line="68" pos:column="66">&amp;<pos:position pos:line="68" pos:column="71"/></operator><name pos:line="68" pos:column="67">BytesWritten<pos:position pos:line="68" pos:column="79"/></name></expr></argument>)<pos:position pos:line="68" pos:column="80"/></argument_list></call><operator pos:line="68" pos:column="80">)<pos:position pos:line="68" pos:column="81"/></operator>
            <operator pos:line="69" pos:column="13">!=<pos:position pos:line="69" pos:column="15"/></operator> <name pos:line="69" pos:column="16">APR_SUCCESS<pos:position pos:line="69" pos:column="27"/></name></expr>)<pos:position pos:line="69" pos:column="28"/></condition><then pos:line="69" pos:column="28"> <block pos:line="69" pos:column="29">{
        <expr_stmt><expr><call><name pos:line="70" pos:column="9">ap_log_error<pos:position pos:line="70" pos:column="21"/></name><argument_list pos:line="70" pos:column="21">(<argument><expr><name pos:line="70" pos:column="22">APLOG_MARK<pos:position pos:line="70" pos:column="32"/></name></expr></argument>, <argument><expr><name pos:line="70" pos:column="34">APLOG_CRIT<pos:position pos:line="70" pos:column="44"/></name></expr></argument>, <argument><expr><name pos:line="70" pos:column="46">rv<pos:position pos:line="70" pos:column="48"/></name></expr></argument>, <argument><expr><name pos:line="70" pos:column="50">ap_server_conf<pos:position pos:line="70" pos:column="64"/></name></expr></argument>,
                     <argument><expr><literal type="string" pos:line="71" pos:column="22">"Parent: Unable to send the scoreboard handle to the child"<pos:position pos:line="71" pos:column="81"/></literal></expr></argument>)<pos:position pos:line="71" pos:column="82"/></argument_list></call></expr>;<pos:position pos:line="71" pos:column="83"/></expr_stmt>
        <return pos:line="72" pos:column="9">return <expr><operator pos:line="72" pos:column="16">-<pos:position pos:line="72" pos:column="17"/></operator><literal type="number" pos:line="72" pos:column="17">1<pos:position pos:line="72" pos:column="18"/></literal></expr>;<pos:position pos:line="72" pos:column="19"/></return>
    }<pos:position pos:line="73" pos:column="6"/></block></then></if>

    <expr_stmt><expr><call><name pos:line="75" pos:column="5">ap_log_error<pos:position pos:line="75" pos:column="17"/></name><argument_list pos:line="75" pos:column="17">(<argument><expr><name pos:line="75" pos:column="18">APLOG_MARK<pos:position pos:line="75" pos:column="28"/></name></expr></argument>, <argument><expr><name pos:line="75" pos:column="30">APLOG_DEBUG<pos:position pos:line="75" pos:column="41"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="75" pos:column="43">0<pos:position pos:line="75" pos:column="44"/></literal></expr></argument>, <argument><expr><name pos:line="75" pos:column="46">ap_server_conf<pos:position pos:line="75" pos:column="60"/></name></expr></argument>,
                 <argument><expr><literal type="string" pos:line="76" pos:column="18">"Parent: Sent the scoreboard to the child"<pos:position pos:line="76" pos:column="60"/></literal></expr></argument>)<pos:position pos:line="76" pos:column="61"/></argument_list></call></expr>;<pos:position pos:line="76" pos:column="62"/></expr_stmt>
    <return pos:line="77" pos:column="5">return <expr><literal type="number" pos:line="77" pos:column="12">0<pos:position pos:line="77" pos:column="13"/></literal></expr>;<pos:position pos:line="77" pos:column="14"/></return>
}<pos:position pos:line="78" pos:column="2"/></block></function></unit>

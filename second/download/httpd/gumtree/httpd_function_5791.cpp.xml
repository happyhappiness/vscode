<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/httpd/gumtree/httpd_function_5791.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">apr_status_t<pos:position pos:line="1" pos:column="13"/></name></type> <name pos:line="1" pos:column="14">h2_conn_io_flush<pos:position pos:line="1" pos:column="30"/></name><parameter_list pos:line="1" pos:column="30">(<parameter><decl><type><name pos:line="1" pos:column="31">h2_conn_io<pos:position pos:line="1" pos:column="41"/></name> <modifier pos:line="1" pos:column="42">*<pos:position pos:line="1" pos:column="43"/></modifier></type><name pos:line="1" pos:column="43">io<pos:position pos:line="1" pos:column="45"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="46"/></parameter_list>
<block pos:line="2" pos:column="1">{
    <if pos:line="3" pos:column="5">if <condition pos:line="3" pos:column="8">(<expr><name><name pos:line="3" pos:column="9">io<pos:position pos:line="3" pos:column="11"/></name><operator pos:line="3" pos:column="11">-&gt;<pos:position pos:line="3" pos:column="16"/></operator><name pos:line="3" pos:column="13">unflushed<pos:position pos:line="3" pos:column="22"/></name></name></expr>)<pos:position pos:line="3" pos:column="23"/></condition><then pos:line="3" pos:column="23"> <block pos:line="3" pos:column="24">{
        <decl_stmt><decl><type><name pos:line="4" pos:column="9">apr_status_t<pos:position pos:line="4" pos:column="21"/></name></type> <name pos:line="4" pos:column="22">status<pos:position pos:line="4" pos:column="28"/></name></decl>;<pos:position pos:line="4" pos:column="29"/></decl_stmt> 
        <if pos:line="5" pos:column="9">if <condition pos:line="5" pos:column="12">(<expr><name><name pos:line="5" pos:column="13">io<pos:position pos:line="5" pos:column="15"/></name><operator pos:line="5" pos:column="15">-&gt;<pos:position pos:line="5" pos:column="20"/></operator><name pos:line="5" pos:column="17">buflen<pos:position pos:line="5" pos:column="23"/></name></name> <operator pos:line="5" pos:column="24">&gt;<pos:position pos:line="5" pos:column="28"/></operator> <literal type="number" pos:line="5" pos:column="26">0<pos:position pos:line="5" pos:column="27"/></literal></expr>)<pos:position pos:line="5" pos:column="28"/></condition><then pos:line="5" pos:column="28"> <block pos:line="5" pos:column="29">{
            <expr_stmt><expr><call><name pos:line="6" pos:column="13">ap_log_cerror<pos:position pos:line="6" pos:column="26"/></name><argument_list pos:line="6" pos:column="26">(<argument><expr><name pos:line="6" pos:column="27">APLOG_MARK<pos:position pos:line="6" pos:column="37"/></name></expr></argument>, <argument><expr><name pos:line="6" pos:column="39">APLOG_TRACE1<pos:position pos:line="6" pos:column="51"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="6" pos:column="53">0<pos:position pos:line="6" pos:column="54"/></literal></expr></argument>, <argument><expr><name><name pos:line="6" pos:column="56">io<pos:position pos:line="6" pos:column="58"/></name><operator pos:line="6" pos:column="58">-&gt;<pos:position pos:line="6" pos:column="63"/></operator><name pos:line="6" pos:column="60">connection<pos:position pos:line="6" pos:column="70"/></name></name></expr></argument>,
                          <argument><expr><literal type="string" pos:line="7" pos:column="27">"h2_conn_io: flush, flushing %ld bytes"<pos:position pos:line="7" pos:column="66"/></literal></expr></argument>, <argument><expr><operator pos:line="7" pos:column="68">(<pos:position pos:line="7" pos:column="69"/></operator><name pos:line="7" pos:column="69">long<pos:position pos:line="7" pos:column="73"/></name><operator pos:line="7" pos:column="73">)<pos:position pos:line="7" pos:column="74"/></operator><name><name pos:line="7" pos:column="74">io<pos:position pos:line="7" pos:column="76"/></name><operator pos:line="7" pos:column="76">-&gt;<pos:position pos:line="7" pos:column="81"/></operator><name pos:line="7" pos:column="78">buflen<pos:position pos:line="7" pos:column="84"/></name></name></expr></argument>)<pos:position pos:line="7" pos:column="85"/></argument_list></call></expr>;<pos:position pos:line="7" pos:column="86"/></expr_stmt>
            <expr_stmt><expr><call><name pos:line="8" pos:column="13">bucketeer_buffer<pos:position pos:line="8" pos:column="29"/></name><argument_list pos:line="8" pos:column="29">(<argument><expr><name pos:line="8" pos:column="30">io<pos:position pos:line="8" pos:column="32"/></name></expr></argument>)<pos:position pos:line="8" pos:column="33"/></argument_list></call></expr>;<pos:position pos:line="8" pos:column="34"/></expr_stmt>
            <expr_stmt><expr><name><name pos:line="9" pos:column="13">io<pos:position pos:line="9" pos:column="15"/></name><operator pos:line="9" pos:column="15">-&gt;<pos:position pos:line="9" pos:column="20"/></operator><name pos:line="9" pos:column="17">buflen<pos:position pos:line="9" pos:column="23"/></name></name> <operator pos:line="9" pos:column="24">=<pos:position pos:line="9" pos:column="25"/></operator> <literal type="number" pos:line="9" pos:column="26">0<pos:position pos:line="9" pos:column="27"/></literal></expr>;<pos:position pos:line="9" pos:column="28"/></expr_stmt>
        }<pos:position pos:line="10" pos:column="10"/></block></then></if>
        <comment type="block" pos:line="11" pos:column="9">/* Append flush.
         */</comment>
        <expr_stmt><expr><call><name pos:line="13" pos:column="9">APR_BRIGADE_INSERT_TAIL<pos:position pos:line="13" pos:column="32"/></name><argument_list pos:line="13" pos:column="32">(<argument><expr><name><name pos:line="13" pos:column="33">io<pos:position pos:line="13" pos:column="35"/></name><operator pos:line="13" pos:column="35">-&gt;<pos:position pos:line="13" pos:column="40"/></operator><name pos:line="13" pos:column="37">output<pos:position pos:line="13" pos:column="43"/></name></name></expr></argument>,
                                <argument><expr><call><name pos:line="14" pos:column="33">apr_bucket_flush_create<pos:position pos:line="14" pos:column="56"/></name><argument_list pos:line="14" pos:column="56">(<argument><expr><name><name pos:line="14" pos:column="57">io<pos:position pos:line="14" pos:column="59"/></name><operator pos:line="14" pos:column="59">-&gt;<pos:position pos:line="14" pos:column="64"/></operator><name pos:line="14" pos:column="61">output<pos:position pos:line="14" pos:column="67"/></name><operator pos:line="14" pos:column="67">-&gt;<pos:position pos:line="14" pos:column="72"/></operator><name pos:line="14" pos:column="69">bucket_alloc<pos:position pos:line="14" pos:column="81"/></name></name></expr></argument>)<pos:position pos:line="14" pos:column="82"/></argument_list></call></expr></argument>)<pos:position pos:line="14" pos:column="83"/></argument_list></call></expr>;<pos:position pos:line="14" pos:column="84"/></expr_stmt>
        
        <comment type="block" pos:line="16" pos:column="9">/* Send it out through installed filters (TLS) to the client */</comment>
        <expr_stmt><expr><name pos:line="17" pos:column="9">status<pos:position pos:line="17" pos:column="15"/></name> <operator pos:line="17" pos:column="16">=<pos:position pos:line="17" pos:column="17"/></operator> <call><name pos:line="17" pos:column="18">flush_out<pos:position pos:line="17" pos:column="27"/></name><argument_list pos:line="17" pos:column="27">(<argument><expr><name><name pos:line="17" pos:column="28">io<pos:position pos:line="17" pos:column="30"/></name><operator pos:line="17" pos:column="30">-&gt;<pos:position pos:line="17" pos:column="35"/></operator><name pos:line="17" pos:column="32">output<pos:position pos:line="17" pos:column="38"/></name></name></expr></argument>, <argument><expr><name pos:line="17" pos:column="40">io<pos:position pos:line="17" pos:column="42"/></name></expr></argument>)<pos:position pos:line="17" pos:column="43"/></argument_list></call></expr>;<pos:position pos:line="17" pos:column="44"/></expr_stmt>
        
        <if pos:line="19" pos:column="9">if <condition pos:line="19" pos:column="12">(<expr><name pos:line="19" pos:column="13">status<pos:position pos:line="19" pos:column="19"/></name> <operator pos:line="19" pos:column="20">==<pos:position pos:line="19" pos:column="22"/></operator> <name pos:line="19" pos:column="23">APR_SUCCESS<pos:position pos:line="19" pos:column="34"/></name></expr>)<pos:position pos:line="19" pos:column="35"/></condition><then pos:line="19" pos:column="35"> <block pos:line="19" pos:column="36">{
            <comment type="block" pos:line="20" pos:column="13">/* These are all fine and no reason for concern. Everything else
             * is interesting. */</comment>
            <expr_stmt><expr><name><name pos:line="22" pos:column="13">io<pos:position pos:line="22" pos:column="15"/></name><operator pos:line="22" pos:column="15">-&gt;<pos:position pos:line="22" pos:column="20"/></operator><name pos:line="22" pos:column="17">unflushed<pos:position pos:line="22" pos:column="26"/></name></name> <operator pos:line="22" pos:column="27">=<pos:position pos:line="22" pos:column="28"/></operator> <literal type="number" pos:line="22" pos:column="29">0<pos:position pos:line="22" pos:column="30"/></literal></expr>;<pos:position pos:line="22" pos:column="31"/></expr_stmt>
        }<pos:position pos:line="23" pos:column="10"/></block></then>
        <else pos:line="24" pos:column="9">else <block pos:line="24" pos:column="14">{
            <expr_stmt><expr><call><name pos:line="25" pos:column="13">ap_log_cerror<pos:position pos:line="25" pos:column="26"/></name><argument_list pos:line="25" pos:column="26">(<argument><expr><name pos:line="25" pos:column="27">APLOG_MARK<pos:position pos:line="25" pos:column="37"/></name></expr></argument>, <argument><expr><name pos:line="25" pos:column="39">APLOG_DEBUG<pos:position pos:line="25" pos:column="50"/></name></expr></argument>, <argument><expr><name pos:line="25" pos:column="52">status<pos:position pos:line="25" pos:column="58"/></name></expr></argument>, <argument><expr><name><name pos:line="25" pos:column="60">io<pos:position pos:line="25" pos:column="62"/></name><operator pos:line="25" pos:column="62">-&gt;<pos:position pos:line="25" pos:column="67"/></operator><name pos:line="25" pos:column="64">connection<pos:position pos:line="25" pos:column="74"/></name></name></expr></argument>,
                          <argument><expr><literal type="string" pos:line="26" pos:column="27">"h2_conn_io: flush error"<pos:position pos:line="26" pos:column="52"/></literal></expr></argument>)<pos:position pos:line="26" pos:column="53"/></argument_list></call></expr>;<pos:position pos:line="26" pos:column="54"/></expr_stmt>
        }<pos:position pos:line="27" pos:column="10"/></block></else></if>
        
        <return pos:line="29" pos:column="9">return <expr><name pos:line="29" pos:column="16">status<pos:position pos:line="29" pos:column="22"/></name></expr>;<pos:position pos:line="29" pos:column="23"/></return>
    }<pos:position pos:line="30" pos:column="6"/></block></then></if>
    <return pos:line="31" pos:column="5">return <expr><name pos:line="31" pos:column="12">APR_SUCCESS<pos:position pos:line="31" pos:column="23"/></name></expr>;<pos:position pos:line="31" pos:column="24"/></return>
}<pos:position pos:line="32" pos:column="2"/></block></function></unit>

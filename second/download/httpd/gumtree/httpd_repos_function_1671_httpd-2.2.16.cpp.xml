<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/httpd/gumtree/httpd_repos_function_1671_httpd-2.2.16.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">void<pos:position pos:line="1" pos:column="12"/></name></type> <name pos:line="1" pos:column="13">debug_dump_tree<pos:position pos:line="1" pos:column="28"/></name><parameter_list pos:line="1" pos:column="28">(<parameter><decl><type><name pos:line="1" pos:column="29">include_ctx_t<pos:position pos:line="1" pos:column="42"/></name> <modifier pos:line="1" pos:column="43">*<pos:position pos:line="1" pos:column="44"/></modifier></type><name pos:line="1" pos:column="44">ctx<pos:position pos:line="1" pos:column="47"/></name></decl></parameter>, <parameter><decl><type><name pos:line="1" pos:column="49">parse_node_t<pos:position pos:line="1" pos:column="61"/></name> <modifier pos:line="1" pos:column="62">*<pos:position pos:line="1" pos:column="63"/></modifier></type><name pos:line="1" pos:column="63">root<pos:position pos:line="1" pos:column="67"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="68"/></parameter_list>
<block pos:line="2" pos:column="1">{
    <decl_stmt><decl><type><name pos:line="3" pos:column="5">parse_node_t<pos:position pos:line="3" pos:column="17"/></name> <modifier pos:line="3" pos:column="18">*<pos:position pos:line="3" pos:column="19"/></modifier></type><name pos:line="3" pos:column="19">current<pos:position pos:line="3" pos:column="26"/></name></decl>;<pos:position pos:line="3" pos:column="27"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="4" pos:column="5">char<pos:position pos:line="4" pos:column="9"/></name> <modifier pos:line="4" pos:column="10">*<pos:position pos:line="4" pos:column="11"/></modifier></type><name pos:line="4" pos:column="11">is<pos:position pos:line="4" pos:column="13"/></name></decl>;<pos:position pos:line="4" pos:column="14"/></decl_stmt>

    <if pos:line="6" pos:column="5">if <condition pos:line="6" pos:column="8">(<expr><operator pos:line="6" pos:column="9">!<pos:position pos:line="6" pos:column="10"/></operator><name pos:line="6" pos:column="10">root<pos:position pos:line="6" pos:column="14"/></name></expr>)<pos:position pos:line="6" pos:column="15"/></condition><then pos:line="6" pos:column="15"> <block pos:line="6" pos:column="16">{
        <expr_stmt><expr><call><name pos:line="7" pos:column="9">debug_printf<pos:position pos:line="7" pos:column="21"/></name><argument_list pos:line="7" pos:column="21">(<argument><expr><name pos:line="7" pos:column="22">ctx<pos:position pos:line="7" pos:column="25"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="7" pos:column="27">"     -- Parse Tree empty --\n\n"<pos:position pos:line="7" pos:column="60"/></literal></expr></argument>)<pos:position pos:line="7" pos:column="61"/></argument_list></call></expr>;<pos:position pos:line="7" pos:column="62"/></expr_stmt>
        <return pos:line="8" pos:column="9">return;<pos:position pos:line="8" pos:column="16"/></return>
    }<pos:position pos:line="9" pos:column="6"/></block></then></if>

    <expr_stmt><expr><call><name pos:line="11" pos:column="5">debug_printf<pos:position pos:line="11" pos:column="17"/></name><argument_list pos:line="11" pos:column="17">(<argument><expr><name pos:line="11" pos:column="18">ctx<pos:position pos:line="11" pos:column="21"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="11" pos:column="23">"     ----- Parse Tree -----\n"<pos:position pos:line="11" pos:column="54"/></literal></expr></argument>)<pos:position pos:line="11" pos:column="55"/></argument_list></call></expr>;<pos:position pos:line="11" pos:column="56"/></expr_stmt>
    <expr_stmt><expr><name pos:line="12" pos:column="5">current<pos:position pos:line="12" pos:column="12"/></name> <operator pos:line="12" pos:column="13">=<pos:position pos:line="12" pos:column="14"/></operator> <name pos:line="12" pos:column="15">root<pos:position pos:line="12" pos:column="19"/></name></expr>;<pos:position pos:line="12" pos:column="20"/></expr_stmt>
    <expr_stmt><expr><name pos:line="13" pos:column="5">is<pos:position pos:line="13" pos:column="7"/></name> <operator pos:line="13" pos:column="8">=<pos:position pos:line="13" pos:column="9"/></operator> <literal type="string" pos:line="13" pos:column="10">"     "<pos:position pos:line="13" pos:column="17"/></literal></expr>;<pos:position pos:line="13" pos:column="18"/></expr_stmt>

    <while pos:line="15" pos:column="5">while <condition pos:line="15" pos:column="11">(<expr><name pos:line="15" pos:column="12">current<pos:position pos:line="15" pos:column="19"/></name></expr>)<pos:position pos:line="15" pos:column="20"/></condition> <block pos:line="15" pos:column="21">{
        <switch pos:line="16" pos:column="9">switch <condition pos:line="16" pos:column="16">(<expr><name><name pos:line="16" pos:column="17">current<pos:position pos:line="16" pos:column="24"/></name><operator pos:line="16" pos:column="24">-&gt;<pos:position pos:line="16" pos:column="29"/></operator><name pos:line="16" pos:column="26">token<pos:position pos:line="16" pos:column="31"/></name><operator pos:line="16" pos:column="31">.<pos:position pos:line="16" pos:column="32"/></operator><name pos:line="16" pos:column="32">type<pos:position pos:line="16" pos:column="36"/></name></name></expr>)<pos:position pos:line="16" pos:column="37"/></condition> <block pos:line="16" pos:column="38">{
        <case pos:line="17" pos:column="9">case <expr><name pos:line="17" pos:column="14">TOKEN_STRING<pos:position pos:line="17" pos:column="26"/></name></expr>:<pos:position pos:line="17" pos:column="27"/></case>
        <case pos:line="18" pos:column="9">case <expr><name pos:line="18" pos:column="14">TOKEN_RE<pos:position pos:line="18" pos:column="22"/></name></expr>:<pos:position pos:line="18" pos:column="23"/></case>
            <expr_stmt><expr><call><name pos:line="19" pos:column="13">debug_printf<pos:position pos:line="19" pos:column="25"/></name><argument_list pos:line="19" pos:column="25">(<argument><expr><name pos:line="19" pos:column="26">ctx<pos:position pos:line="19" pos:column="29"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="19" pos:column="31">"%s%s (%s)\n"<pos:position pos:line="19" pos:column="44"/></literal></expr></argument>, <argument><expr><name pos:line="19" pos:column="46">is<pos:position pos:line="19" pos:column="48"/></name></expr></argument>, <argument><expr><name><name pos:line="19" pos:column="50">current<pos:position pos:line="19" pos:column="57"/></name><operator pos:line="19" pos:column="57">-&gt;<pos:position pos:line="19" pos:column="62"/></operator><name pos:line="19" pos:column="59">token<pos:position pos:line="19" pos:column="64"/></name><operator pos:line="19" pos:column="64">.<pos:position pos:line="19" pos:column="65"/></operator><name pos:line="19" pos:column="65">s<pos:position pos:line="19" pos:column="66"/></name></name></expr></argument>,
                         <argument><expr><name><name pos:line="20" pos:column="26">current<pos:position pos:line="20" pos:column="33"/></name><operator pos:line="20" pos:column="33">-&gt;<pos:position pos:line="20" pos:column="38"/></operator><name pos:line="20" pos:column="35">token<pos:position pos:line="20" pos:column="40"/></name><operator pos:line="20" pos:column="40">.<pos:position pos:line="20" pos:column="41"/></operator><name pos:line="20" pos:column="41">value<pos:position pos:line="20" pos:column="46"/></name></name></expr></argument>)<pos:position pos:line="20" pos:column="47"/></argument_list></call></expr>;<pos:position pos:line="20" pos:column="48"/></expr_stmt>
            <expr_stmt><expr><name><name pos:line="21" pos:column="13">current<pos:position pos:line="21" pos:column="20"/></name><operator pos:line="21" pos:column="20">-&gt;<pos:position pos:line="21" pos:column="25"/></operator><name pos:line="21" pos:column="22">dump_done<pos:position pos:line="21" pos:column="31"/></name></name> <operator pos:line="21" pos:column="32">=<pos:position pos:line="21" pos:column="33"/></operator> <literal type="number" pos:line="21" pos:column="34">1<pos:position pos:line="21" pos:column="35"/></literal></expr>;<pos:position pos:line="21" pos:column="36"/></expr_stmt>
            <expr_stmt><expr><name pos:line="22" pos:column="13">current<pos:position pos:line="22" pos:column="20"/></name> <operator pos:line="22" pos:column="21">=<pos:position pos:line="22" pos:column="22"/></operator> <name><name pos:line="22" pos:column="23">current<pos:position pos:line="22" pos:column="30"/></name><operator pos:line="22" pos:column="30">-&gt;<pos:position pos:line="22" pos:column="35"/></operator><name pos:line="22" pos:column="32">parent<pos:position pos:line="22" pos:column="38"/></name></name></expr>;<pos:position pos:line="22" pos:column="39"/></expr_stmt>
            <continue pos:line="23" pos:column="13">continue;<pos:position pos:line="23" pos:column="22"/></continue>

        <case pos:line="25" pos:column="9">case <expr><name pos:line="25" pos:column="14">TOKEN_NOT<pos:position pos:line="25" pos:column="23"/></name></expr>:<pos:position pos:line="25" pos:column="24"/></case>
        <case pos:line="26" pos:column="9">case <expr><name pos:line="26" pos:column="14">TOKEN_GROUP<pos:position pos:line="26" pos:column="25"/></name></expr>:<pos:position pos:line="26" pos:column="26"/></case>
        <case pos:line="27" pos:column="9">case <expr><name pos:line="27" pos:column="14">TOKEN_RBRACE<pos:position pos:line="27" pos:column="26"/></name></expr>:<pos:position pos:line="27" pos:column="27"/></case>
        <case pos:line="28" pos:column="9">case <expr><name pos:line="28" pos:column="14">TOKEN_LBRACE<pos:position pos:line="28" pos:column="26"/></name></expr>:<pos:position pos:line="28" pos:column="27"/></case>
            <if pos:line="29" pos:column="13">if <condition pos:line="29" pos:column="16">(<expr><operator pos:line="29" pos:column="17">!<pos:position pos:line="29" pos:column="18"/></operator><name><name pos:line="29" pos:column="18">current<pos:position pos:line="29" pos:column="25"/></name><operator pos:line="29" pos:column="25">-&gt;<pos:position pos:line="29" pos:column="30"/></operator><name pos:line="29" pos:column="27">dump_done<pos:position pos:line="29" pos:column="36"/></name></name></expr>)<pos:position pos:line="29" pos:column="37"/></condition><then pos:line="29" pos:column="37"> <block pos:line="29" pos:column="38">{
                <expr_stmt><expr><call><name pos:line="30" pos:column="17">debug_printf<pos:position pos:line="30" pos:column="29"/></name><argument_list pos:line="30" pos:column="29">(<argument><expr><name pos:line="30" pos:column="30">ctx<pos:position pos:line="30" pos:column="33"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="30" pos:column="35">"%s%s\n"<pos:position pos:line="30" pos:column="43"/></literal></expr></argument>, <argument><expr><name pos:line="30" pos:column="45">is<pos:position pos:line="30" pos:column="47"/></name></expr></argument>, <argument><expr><name><name pos:line="30" pos:column="49">current<pos:position pos:line="30" pos:column="56"/></name><operator pos:line="30" pos:column="56">-&gt;<pos:position pos:line="30" pos:column="61"/></operator><name pos:line="30" pos:column="58">token<pos:position pos:line="30" pos:column="63"/></name><operator pos:line="30" pos:column="63">.<pos:position pos:line="30" pos:column="64"/></operator><name pos:line="30" pos:column="64">s<pos:position pos:line="30" pos:column="65"/></name></name></expr></argument>)<pos:position pos:line="30" pos:column="66"/></argument_list></call></expr>;<pos:position pos:line="30" pos:column="67"/></expr_stmt>
                <expr_stmt><expr><name pos:line="31" pos:column="17">is<pos:position pos:line="31" pos:column="19"/></name> <operator pos:line="31" pos:column="20">=<pos:position pos:line="31" pos:column="21"/></operator> <call><name pos:line="31" pos:column="22">apr_pstrcat<pos:position pos:line="31" pos:column="33"/></name><argument_list pos:line="31" pos:column="33">(<argument><expr><name><name pos:line="31" pos:column="34">ctx<pos:position pos:line="31" pos:column="37"/></name><operator pos:line="31" pos:column="37">-&gt;<pos:position pos:line="31" pos:column="42"/></operator><name pos:line="31" pos:column="39">dpool<pos:position pos:line="31" pos:column="44"/></name></name></expr></argument>, <argument><expr><name pos:line="31" pos:column="46">is<pos:position pos:line="31" pos:column="48"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="31" pos:column="50">"    "<pos:position pos:line="31" pos:column="56"/></literal></expr></argument>, <argument><expr><name pos:line="31" pos:column="58">NULL<pos:position pos:line="31" pos:column="62"/></name></expr></argument>)<pos:position pos:line="31" pos:column="63"/></argument_list></call></expr>;<pos:position pos:line="31" pos:column="64"/></expr_stmt>
                <expr_stmt><expr><name><name pos:line="32" pos:column="17">current<pos:position pos:line="32" pos:column="24"/></name><operator pos:line="32" pos:column="24">-&gt;<pos:position pos:line="32" pos:column="29"/></operator><name pos:line="32" pos:column="26">dump_done<pos:position pos:line="32" pos:column="35"/></name></name> <operator pos:line="32" pos:column="36">=<pos:position pos:line="32" pos:column="37"/></operator> <literal type="number" pos:line="32" pos:column="38">1<pos:position pos:line="32" pos:column="39"/></literal></expr>;<pos:position pos:line="32" pos:column="40"/></expr_stmt>
            }<pos:position pos:line="33" pos:column="14"/></block></then></if>

            <macro><name pos:line="35" pos:column="13">DUMP__CHILD<pos:position pos:line="35" pos:column="24"/></name><argument_list pos:line="35" pos:column="24">(<argument pos:line="35" pos:column="25">ctx<pos:position pos:line="35" pos:column="28"/></argument>, <argument pos:line="35" pos:column="30">is<pos:position pos:line="35" pos:column="32"/></argument>, <argument pos:line="35" pos:column="34">current<pos:position pos:line="35" pos:column="41"/></argument>, <argument pos:line="35" pos:column="43">right<pos:position pos:line="35" pos:column="48"/></argument>)<pos:position pos:line="35" pos:column="49"/></argument_list></macro>

            <if pos:line="37" pos:column="13">if <condition pos:line="37" pos:column="16">(<expr><operator pos:line="37" pos:column="17">!<pos:position pos:line="37" pos:column="18"/></operator><name><name pos:line="37" pos:column="18">current<pos:position pos:line="37" pos:column="25"/></name><operator pos:line="37" pos:column="25">-&gt;<pos:position pos:line="37" pos:column="30"/></operator><name pos:line="37" pos:column="27">right<pos:position pos:line="37" pos:column="32"/></name></name> <operator pos:line="37" pos:column="33">||<pos:position pos:line="37" pos:column="35"/></operator> <name><name pos:line="37" pos:column="36">current<pos:position pos:line="37" pos:column="43"/></name><operator pos:line="37" pos:column="43">-&gt;<pos:position pos:line="37" pos:column="48"/></operator><name pos:line="37" pos:column="45">right<pos:position pos:line="37" pos:column="50"/></name><operator pos:line="37" pos:column="50">-&gt;<pos:position pos:line="37" pos:column="55"/></operator><name pos:line="37" pos:column="52">dump_done<pos:position pos:line="37" pos:column="61"/></name></name></expr>)<pos:position pos:line="37" pos:column="62"/></condition><then pos:line="37" pos:column="62"> <block pos:line="37" pos:column="63">{
                <expr_stmt><expr><name pos:line="38" pos:column="17">is<pos:position pos:line="38" pos:column="19"/></name> <operator pos:line="38" pos:column="20">=<pos:position pos:line="38" pos:column="21"/></operator> <call><name pos:line="38" pos:column="22">apr_pstrmemdup<pos:position pos:line="38" pos:column="36"/></name><argument_list pos:line="38" pos:column="36">(<argument><expr><name><name pos:line="38" pos:column="37">ctx<pos:position pos:line="38" pos:column="40"/></name><operator pos:line="38" pos:column="40">-&gt;<pos:position pos:line="38" pos:column="45"/></operator><name pos:line="38" pos:column="42">dpool<pos:position pos:line="38" pos:column="47"/></name></name></expr></argument>, <argument><expr><name pos:line="38" pos:column="49">is<pos:position pos:line="38" pos:column="51"/></name></expr></argument>, <argument><expr><call><name pos:line="38" pos:column="53">strlen<pos:position pos:line="38" pos:column="59"/></name><argument_list pos:line="38" pos:column="59">(<argument><expr><name pos:line="38" pos:column="60">is<pos:position pos:line="38" pos:column="62"/></name></expr></argument>)<pos:position pos:line="38" pos:column="63"/></argument_list></call> <operator pos:line="38" pos:column="64">-<pos:position pos:line="38" pos:column="65"/></operator> <literal type="number" pos:line="38" pos:column="66">4<pos:position pos:line="38" pos:column="67"/></literal></expr></argument>)<pos:position pos:line="38" pos:column="68"/></argument_list></call></expr>;<pos:position pos:line="38" pos:column="69"/></expr_stmt>
                <if pos:line="39" pos:column="17">if <condition pos:line="39" pos:column="20">(<expr><name><name pos:line="39" pos:column="21">current<pos:position pos:line="39" pos:column="28"/></name><operator pos:line="39" pos:column="28">-&gt;<pos:position pos:line="39" pos:column="33"/></operator><name pos:line="39" pos:column="30">right<pos:position pos:line="39" pos:column="35"/></name></name></expr>)<pos:position pos:line="39" pos:column="36"/></condition><then pos:line="39" pos:column="36"> <block type="pseudo"><expr_stmt><expr><name><name pos:line="39" pos:column="37">current<pos:position pos:line="39" pos:column="44"/></name><operator pos:line="39" pos:column="44">-&gt;<pos:position pos:line="39" pos:column="49"/></operator><name pos:line="39" pos:column="46">right<pos:position pos:line="39" pos:column="51"/></name><operator pos:line="39" pos:column="51">-&gt;<pos:position pos:line="39" pos:column="56"/></operator><name pos:line="39" pos:column="53">dump_done<pos:position pos:line="39" pos:column="62"/></name></name> <operator pos:line="39" pos:column="63">=<pos:position pos:line="39" pos:column="64"/></operator> <literal type="number" pos:line="39" pos:column="65">0<pos:position pos:line="39" pos:column="66"/></literal></expr>;<pos:position pos:line="39" pos:column="67"/></expr_stmt></block></then></if>
                <expr_stmt><expr><name pos:line="40" pos:column="17">current<pos:position pos:line="40" pos:column="24"/></name> <operator pos:line="40" pos:column="25">=<pos:position pos:line="40" pos:column="26"/></operator> <name><name pos:line="40" pos:column="27">current<pos:position pos:line="40" pos:column="34"/></name><operator pos:line="40" pos:column="34">-&gt;<pos:position pos:line="40" pos:column="39"/></operator><name pos:line="40" pos:column="36">parent<pos:position pos:line="40" pos:column="42"/></name></name></expr>;<pos:position pos:line="40" pos:column="43"/></expr_stmt>
            }<pos:position pos:line="41" pos:column="14"/></block></then></if>
            <continue pos:line="42" pos:column="13">continue;<pos:position pos:line="42" pos:column="22"/></continue>

        <default pos:line="44" pos:column="9">default:<pos:position pos:line="44" pos:column="17"/></default>
            <if pos:line="45" pos:column="13">if <condition pos:line="45" pos:column="16">(<expr><operator pos:line="45" pos:column="17">!<pos:position pos:line="45" pos:column="18"/></operator><name><name pos:line="45" pos:column="18">current<pos:position pos:line="45" pos:column="25"/></name><operator pos:line="45" pos:column="25">-&gt;<pos:position pos:line="45" pos:column="30"/></operator><name pos:line="45" pos:column="27">dump_done<pos:position pos:line="45" pos:column="36"/></name></name></expr>)<pos:position pos:line="45" pos:column="37"/></condition><then pos:line="45" pos:column="37"> <block pos:line="45" pos:column="38">{
                <expr_stmt><expr><call><name pos:line="46" pos:column="17">debug_printf<pos:position pos:line="46" pos:column="29"/></name><argument_list pos:line="46" pos:column="29">(<argument><expr><name pos:line="46" pos:column="30">ctx<pos:position pos:line="46" pos:column="33"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="46" pos:column="35">"%s%s\n"<pos:position pos:line="46" pos:column="43"/></literal></expr></argument>, <argument><expr><name pos:line="46" pos:column="45">is<pos:position pos:line="46" pos:column="47"/></name></expr></argument>, <argument><expr><name><name pos:line="46" pos:column="49">current<pos:position pos:line="46" pos:column="56"/></name><operator pos:line="46" pos:column="56">-&gt;<pos:position pos:line="46" pos:column="61"/></operator><name pos:line="46" pos:column="58">token<pos:position pos:line="46" pos:column="63"/></name><operator pos:line="46" pos:column="63">.<pos:position pos:line="46" pos:column="64"/></operator><name pos:line="46" pos:column="64">s<pos:position pos:line="46" pos:column="65"/></name></name></expr></argument>)<pos:position pos:line="46" pos:column="66"/></argument_list></call></expr>;<pos:position pos:line="46" pos:column="67"/></expr_stmt>
                <expr_stmt><expr><name pos:line="47" pos:column="17">is<pos:position pos:line="47" pos:column="19"/></name> <operator pos:line="47" pos:column="20">=<pos:position pos:line="47" pos:column="21"/></operator> <call><name pos:line="47" pos:column="22">apr_pstrcat<pos:position pos:line="47" pos:column="33"/></name><argument_list pos:line="47" pos:column="33">(<argument><expr><name><name pos:line="47" pos:column="34">ctx<pos:position pos:line="47" pos:column="37"/></name><operator pos:line="47" pos:column="37">-&gt;<pos:position pos:line="47" pos:column="42"/></operator><name pos:line="47" pos:column="39">dpool<pos:position pos:line="47" pos:column="44"/></name></name></expr></argument>, <argument><expr><name pos:line="47" pos:column="46">is<pos:position pos:line="47" pos:column="48"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="47" pos:column="50">"    "<pos:position pos:line="47" pos:column="56"/></literal></expr></argument>, <argument><expr><name pos:line="47" pos:column="58">NULL<pos:position pos:line="47" pos:column="62"/></name></expr></argument>)<pos:position pos:line="47" pos:column="63"/></argument_list></call></expr>;<pos:position pos:line="47" pos:column="64"/></expr_stmt>
                <expr_stmt><expr><name><name pos:line="48" pos:column="17">current<pos:position pos:line="48" pos:column="24"/></name><operator pos:line="48" pos:column="24">-&gt;<pos:position pos:line="48" pos:column="29"/></operator><name pos:line="48" pos:column="26">dump_done<pos:position pos:line="48" pos:column="35"/></name></name> <operator pos:line="48" pos:column="36">=<pos:position pos:line="48" pos:column="37"/></operator> <literal type="number" pos:line="48" pos:column="38">1<pos:position pos:line="48" pos:column="39"/></literal></expr>;<pos:position pos:line="48" pos:column="40"/></expr_stmt>
            }<pos:position pos:line="49" pos:column="14"/></block></then></if>

            <macro><name pos:line="51" pos:column="13">DUMP__CHILD<pos:position pos:line="51" pos:column="24"/></name><argument_list pos:line="51" pos:column="24">(<argument pos:line="51" pos:column="25">ctx<pos:position pos:line="51" pos:column="28"/></argument>, <argument pos:line="51" pos:column="30">is<pos:position pos:line="51" pos:column="32"/></argument>, <argument pos:line="51" pos:column="34">current<pos:position pos:line="51" pos:column="41"/></argument>, <argument pos:line="51" pos:column="43">left<pos:position pos:line="51" pos:column="47"/></argument>)<pos:position pos:line="51" pos:column="48"/></argument_list></macro>
            <macro><name pos:line="52" pos:column="13">DUMP__CHILD<pos:position pos:line="52" pos:column="24"/></name><argument_list pos:line="52" pos:column="24">(<argument pos:line="52" pos:column="25">ctx<pos:position pos:line="52" pos:column="28"/></argument>, <argument pos:line="52" pos:column="30">is<pos:position pos:line="52" pos:column="32"/></argument>, <argument pos:line="52" pos:column="34">current<pos:position pos:line="52" pos:column="41"/></argument>, <argument pos:line="52" pos:column="43">right<pos:position pos:line="52" pos:column="48"/></argument>)<pos:position pos:line="52" pos:column="49"/></argument_list></macro>

            <if pos:line="54" pos:column="13">if <condition pos:line="54" pos:column="16">(<expr><operator pos:line="54" pos:column="17">(<pos:position pos:line="54" pos:column="18"/></operator><operator pos:line="54" pos:column="18">!<pos:position pos:line="54" pos:column="19"/></operator><name><name pos:line="54" pos:column="19">current<pos:position pos:line="54" pos:column="26"/></name><operator pos:line="54" pos:column="26">-&gt;<pos:position pos:line="54" pos:column="31"/></operator><name pos:line="54" pos:column="28">left<pos:position pos:line="54" pos:column="32"/></name></name> <operator pos:line="54" pos:column="33">||<pos:position pos:line="54" pos:column="35"/></operator> <name><name pos:line="54" pos:column="36">current<pos:position pos:line="54" pos:column="43"/></name><operator pos:line="54" pos:column="43">-&gt;<pos:position pos:line="54" pos:column="48"/></operator><name pos:line="54" pos:column="45">left<pos:position pos:line="54" pos:column="49"/></name><operator pos:line="54" pos:column="49">-&gt;<pos:position pos:line="54" pos:column="54"/></operator><name pos:line="54" pos:column="51">dump_done<pos:position pos:line="54" pos:column="60"/></name></name><operator pos:line="54" pos:column="60">)<pos:position pos:line="54" pos:column="61"/></operator> <operator pos:line="54" pos:column="62">&amp;&amp;<pos:position pos:line="54" pos:column="72"/></operator>
                <operator pos:line="55" pos:column="17">(<pos:position pos:line="55" pos:column="18"/></operator><operator pos:line="55" pos:column="18">!<pos:position pos:line="55" pos:column="19"/></operator><name><name pos:line="55" pos:column="19">current<pos:position pos:line="55" pos:column="26"/></name><operator pos:line="55" pos:column="26">-&gt;<pos:position pos:line="55" pos:column="31"/></operator><name pos:line="55" pos:column="28">right<pos:position pos:line="55" pos:column="33"/></name></name> <operator pos:line="55" pos:column="34">||<pos:position pos:line="55" pos:column="36"/></operator> <name><name pos:line="55" pos:column="37">current<pos:position pos:line="55" pos:column="44"/></name><operator pos:line="55" pos:column="44">-&gt;<pos:position pos:line="55" pos:column="49"/></operator><name pos:line="55" pos:column="46">right<pos:position pos:line="55" pos:column="51"/></name><operator pos:line="55" pos:column="51">-&gt;<pos:position pos:line="55" pos:column="56"/></operator><name pos:line="55" pos:column="53">dump_done<pos:position pos:line="55" pos:column="62"/></name></name><operator pos:line="55" pos:column="62">)<pos:position pos:line="55" pos:column="63"/></operator></expr>)<pos:position pos:line="55" pos:column="64"/></condition><then pos:line="55" pos:column="64"> <block pos:line="55" pos:column="65">{

                <expr_stmt><expr><name pos:line="57" pos:column="17">is<pos:position pos:line="57" pos:column="19"/></name> <operator pos:line="57" pos:column="20">=<pos:position pos:line="57" pos:column="21"/></operator> <call><name pos:line="57" pos:column="22">apr_pstrmemdup<pos:position pos:line="57" pos:column="36"/></name><argument_list pos:line="57" pos:column="36">(<argument><expr><name><name pos:line="57" pos:column="37">ctx<pos:position pos:line="57" pos:column="40"/></name><operator pos:line="57" pos:column="40">-&gt;<pos:position pos:line="57" pos:column="45"/></operator><name pos:line="57" pos:column="42">dpool<pos:position pos:line="57" pos:column="47"/></name></name></expr></argument>, <argument><expr><name pos:line="57" pos:column="49">is<pos:position pos:line="57" pos:column="51"/></name></expr></argument>, <argument><expr><call><name pos:line="57" pos:column="53">strlen<pos:position pos:line="57" pos:column="59"/></name><argument_list pos:line="57" pos:column="59">(<argument><expr><name pos:line="57" pos:column="60">is<pos:position pos:line="57" pos:column="62"/></name></expr></argument>)<pos:position pos:line="57" pos:column="63"/></argument_list></call> <operator pos:line="57" pos:column="64">-<pos:position pos:line="57" pos:column="65"/></operator> <literal type="number" pos:line="57" pos:column="66">4<pos:position pos:line="57" pos:column="67"/></literal></expr></argument>)<pos:position pos:line="57" pos:column="68"/></argument_list></call></expr>;<pos:position pos:line="57" pos:column="69"/></expr_stmt>
                <if pos:line="58" pos:column="17">if <condition pos:line="58" pos:column="20">(<expr><name><name pos:line="58" pos:column="21">current<pos:position pos:line="58" pos:column="28"/></name><operator pos:line="58" pos:column="28">-&gt;<pos:position pos:line="58" pos:column="33"/></operator><name pos:line="58" pos:column="30">left<pos:position pos:line="58" pos:column="34"/></name></name></expr>)<pos:position pos:line="58" pos:column="35"/></condition><then pos:line="58" pos:column="35"> <block type="pseudo"><expr_stmt><expr><name><name pos:line="58" pos:column="36">current<pos:position pos:line="58" pos:column="43"/></name><operator pos:line="58" pos:column="43">-&gt;<pos:position pos:line="58" pos:column="48"/></operator><name pos:line="58" pos:column="45">left<pos:position pos:line="58" pos:column="49"/></name><operator pos:line="58" pos:column="49">-&gt;<pos:position pos:line="58" pos:column="54"/></operator><name pos:line="58" pos:column="51">dump_done<pos:position pos:line="58" pos:column="60"/></name></name> <operator pos:line="58" pos:column="61">=<pos:position pos:line="58" pos:column="62"/></operator> <literal type="number" pos:line="58" pos:column="63">0<pos:position pos:line="58" pos:column="64"/></literal></expr>;<pos:position pos:line="58" pos:column="65"/></expr_stmt></block></then></if>
                <if pos:line="59" pos:column="17">if <condition pos:line="59" pos:column="20">(<expr><name><name pos:line="59" pos:column="21">current<pos:position pos:line="59" pos:column="28"/></name><operator pos:line="59" pos:column="28">-&gt;<pos:position pos:line="59" pos:column="33"/></operator><name pos:line="59" pos:column="30">right<pos:position pos:line="59" pos:column="35"/></name></name></expr>)<pos:position pos:line="59" pos:column="36"/></condition><then pos:line="59" pos:column="36"> <block type="pseudo"><expr_stmt><expr><name><name pos:line="59" pos:column="37">current<pos:position pos:line="59" pos:column="44"/></name><operator pos:line="59" pos:column="44">-&gt;<pos:position pos:line="59" pos:column="49"/></operator><name pos:line="59" pos:column="46">right<pos:position pos:line="59" pos:column="51"/></name><operator pos:line="59" pos:column="51">-&gt;<pos:position pos:line="59" pos:column="56"/></operator><name pos:line="59" pos:column="53">dump_done<pos:position pos:line="59" pos:column="62"/></name></name> <operator pos:line="59" pos:column="63">=<pos:position pos:line="59" pos:column="64"/></operator> <literal type="number" pos:line="59" pos:column="65">0<pos:position pos:line="59" pos:column="66"/></literal></expr>;<pos:position pos:line="59" pos:column="67"/></expr_stmt></block></then></if>
                <expr_stmt><expr><name pos:line="60" pos:column="17">current<pos:position pos:line="60" pos:column="24"/></name> <operator pos:line="60" pos:column="25">=<pos:position pos:line="60" pos:column="26"/></operator> <name><name pos:line="60" pos:column="27">current<pos:position pos:line="60" pos:column="34"/></name><operator pos:line="60" pos:column="34">-&gt;<pos:position pos:line="60" pos:column="39"/></operator><name pos:line="60" pos:column="36">parent<pos:position pos:line="60" pos:column="42"/></name></name></expr>;<pos:position pos:line="60" pos:column="43"/></expr_stmt>
            }<pos:position pos:line="61" pos:column="14"/></block></then></if>
            <continue pos:line="62" pos:column="13">continue;<pos:position pos:line="62" pos:column="22"/></continue>
        }<pos:position pos:line="63" pos:column="10"/></block></switch>
    }<pos:position pos:line="64" pos:column="6"/></block></while>

    <comment type="block" pos:line="66" pos:column="5">/* it is possible to call this function within the parser loop, to see
     * how the tree is built. That way, we must cleanup after us to dump
     * always the whole tree
     */</comment>
    <expr_stmt><expr><name><name pos:line="70" pos:column="5">root<pos:position pos:line="70" pos:column="9"/></name><operator pos:line="70" pos:column="9">-&gt;<pos:position pos:line="70" pos:column="14"/></operator><name pos:line="70" pos:column="11">dump_done<pos:position pos:line="70" pos:column="20"/></name></name> <operator pos:line="70" pos:column="21">=<pos:position pos:line="70" pos:column="22"/></operator> <literal type="number" pos:line="70" pos:column="23">0<pos:position pos:line="70" pos:column="24"/></literal></expr>;<pos:position pos:line="70" pos:column="25"/></expr_stmt>
    <if pos:line="71" pos:column="5">if <condition pos:line="71" pos:column="8">(<expr><name><name pos:line="71" pos:column="9">root<pos:position pos:line="71" pos:column="13"/></name><operator pos:line="71" pos:column="13">-&gt;<pos:position pos:line="71" pos:column="18"/></operator><name pos:line="71" pos:column="15">left<pos:position pos:line="71" pos:column="19"/></name></name></expr>)<pos:position pos:line="71" pos:column="20"/></condition><then pos:line="71" pos:column="20"> <block type="pseudo"><expr_stmt><expr><name><name pos:line="71" pos:column="21">root<pos:position pos:line="71" pos:column="25"/></name><operator pos:line="71" pos:column="25">-&gt;<pos:position pos:line="71" pos:column="30"/></operator><name pos:line="71" pos:column="27">left<pos:position pos:line="71" pos:column="31"/></name><operator pos:line="71" pos:column="31">-&gt;<pos:position pos:line="71" pos:column="36"/></operator><name pos:line="71" pos:column="33">dump_done<pos:position pos:line="71" pos:column="42"/></name></name> <operator pos:line="71" pos:column="43">=<pos:position pos:line="71" pos:column="44"/></operator> <literal type="number" pos:line="71" pos:column="45">0<pos:position pos:line="71" pos:column="46"/></literal></expr>;<pos:position pos:line="71" pos:column="47"/></expr_stmt></block></then></if>
    <if pos:line="72" pos:column="5">if <condition pos:line="72" pos:column="8">(<expr><name><name pos:line="72" pos:column="9">root<pos:position pos:line="72" pos:column="13"/></name><operator pos:line="72" pos:column="13">-&gt;<pos:position pos:line="72" pos:column="18"/></operator><name pos:line="72" pos:column="15">right<pos:position pos:line="72" pos:column="20"/></name></name></expr>)<pos:position pos:line="72" pos:column="21"/></condition><then pos:line="72" pos:column="21"> <block type="pseudo"><expr_stmt><expr><name><name pos:line="72" pos:column="22">root<pos:position pos:line="72" pos:column="26"/></name><operator pos:line="72" pos:column="26">-&gt;<pos:position pos:line="72" pos:column="31"/></operator><name pos:line="72" pos:column="28">right<pos:position pos:line="72" pos:column="33"/></name><operator pos:line="72" pos:column="33">-&gt;<pos:position pos:line="72" pos:column="38"/></operator><name pos:line="72" pos:column="35">dump_done<pos:position pos:line="72" pos:column="44"/></name></name> <operator pos:line="72" pos:column="45">=<pos:position pos:line="72" pos:column="46"/></operator> <literal type="number" pos:line="72" pos:column="47">0<pos:position pos:line="72" pos:column="48"/></literal></expr>;<pos:position pos:line="72" pos:column="49"/></expr_stmt></block></then></if>

    <expr_stmt><expr><call><name pos:line="74" pos:column="5">debug_printf<pos:position pos:line="74" pos:column="17"/></name><argument_list pos:line="74" pos:column="17">(<argument><expr><name pos:line="74" pos:column="18">ctx<pos:position pos:line="74" pos:column="21"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="74" pos:column="23">"     --- End Parse Tree ---\n\n"<pos:position pos:line="74" pos:column="56"/></literal></expr></argument>)<pos:position pos:line="74" pos:column="57"/></argument_list></call></expr>;<pos:position pos:line="74" pos:column="58"/></expr_stmt>

    <return pos:line="76" pos:column="5">return;<pos:position pos:line="76" pos:column="12"/></return>
}<pos:position pos:line="77" pos:column="2"/></block></function></unit>

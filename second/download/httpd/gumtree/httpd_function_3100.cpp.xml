<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/httpd/gumtree/httpd_function_3100.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">int<pos:position pos:line="1" pos:column="11"/></name></type> <name pos:line="1" pos:column="12">get_basic_auth<pos:position pos:line="1" pos:column="26"/></name><parameter_list pos:line="1" pos:column="26">(<parameter><decl><type><name pos:line="1" pos:column="27">request_rec<pos:position pos:line="1" pos:column="38"/></name> <modifier pos:line="1" pos:column="39">*<pos:position pos:line="1" pos:column="40"/></modifier></type><name pos:line="1" pos:column="40">r<pos:position pos:line="1" pos:column="41"/></name></decl></parameter>, <parameter><decl><type><specifier pos:line="1" pos:column="43">const<pos:position pos:line="1" pos:column="48"/></specifier> <name pos:line="1" pos:column="49">char<pos:position pos:line="1" pos:column="53"/></name> <modifier pos:line="1" pos:column="54">*<pos:position pos:line="1" pos:column="55"/></modifier><modifier pos:line="1" pos:column="55">*<pos:position pos:line="1" pos:column="56"/></modifier></type><name pos:line="1" pos:column="56">user<pos:position pos:line="1" pos:column="60"/></name></decl></parameter>,
                          <parameter><decl><type><specifier pos:line="2" pos:column="27">const<pos:position pos:line="2" pos:column="32"/></specifier> <name pos:line="2" pos:column="33">char<pos:position pos:line="2" pos:column="37"/></name> <modifier pos:line="2" pos:column="38">*<pos:position pos:line="2" pos:column="39"/></modifier><modifier pos:line="2" pos:column="39">*<pos:position pos:line="2" pos:column="40"/></modifier></type><name pos:line="2" pos:column="40">pw<pos:position pos:line="2" pos:column="42"/></name></decl></parameter>)<pos:position pos:line="2" pos:column="43"/></parameter_list>
<block pos:line="3" pos:column="1">{
    <decl_stmt><decl><type><specifier pos:line="4" pos:column="5">const<pos:position pos:line="4" pos:column="10"/></specifier> <name pos:line="4" pos:column="11">char<pos:position pos:line="4" pos:column="15"/></name> <modifier pos:line="4" pos:column="16">*<pos:position pos:line="4" pos:column="17"/></modifier></type><name pos:line="4" pos:column="17">auth_line<pos:position pos:line="4" pos:column="26"/></name></decl>;<pos:position pos:line="4" pos:column="27"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="5" pos:column="5">char<pos:position pos:line="5" pos:column="9"/></name> <modifier pos:line="5" pos:column="10">*<pos:position pos:line="5" pos:column="11"/></modifier></type><name pos:line="5" pos:column="11">decoded_line<pos:position pos:line="5" pos:column="23"/></name></decl>;<pos:position pos:line="5" pos:column="24"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="6" pos:column="5">int<pos:position pos:line="6" pos:column="8"/></name></type> <name pos:line="6" pos:column="9">length<pos:position pos:line="6" pos:column="15"/></name></decl>;<pos:position pos:line="6" pos:column="16"/></decl_stmt>

    <comment type="block" pos:line="8" pos:column="5">/* Get the appropriate header */</comment>
    <expr_stmt><expr><name pos:line="9" pos:column="5">auth_line<pos:position pos:line="9" pos:column="14"/></name> <operator pos:line="9" pos:column="15">=<pos:position pos:line="9" pos:column="16"/></operator> <call><name pos:line="9" pos:column="17">apr_table_get<pos:position pos:line="9" pos:column="30"/></name><argument_list pos:line="9" pos:column="30">(<argument><expr><name><name pos:line="9" pos:column="31">r<pos:position pos:line="9" pos:column="32"/></name><operator pos:line="9" pos:column="32">-&gt;<pos:position pos:line="9" pos:column="37"/></operator><name pos:line="9" pos:column="34">headers_in<pos:position pos:line="9" pos:column="44"/></name></name></expr></argument>, <argument><expr><ternary><condition><expr><operator pos:line="9" pos:column="46">(<pos:position pos:line="9" pos:column="47"/></operator><name pos:line="9" pos:column="47">PROXYREQ_PROXY<pos:position pos:line="9" pos:column="61"/></name> <operator pos:line="9" pos:column="62">==<pos:position pos:line="9" pos:column="64"/></operator> <name><name pos:line="9" pos:column="65">r<pos:position pos:line="9" pos:column="66"/></name><operator pos:line="9" pos:column="66">-&gt;<pos:position pos:line="9" pos:column="71"/></operator><name pos:line="9" pos:column="68">proxyreq<pos:position pos:line="9" pos:column="76"/></name></name><operator pos:line="9" pos:column="76">)<pos:position pos:line="9" pos:column="77"/></operator></expr>
                                              ?<pos:position pos:line="10" pos:column="48"/></condition><then pos:line="10" pos:column="48"> <expr><literal type="string" pos:line="10" pos:column="49">"Proxy-Authorization"<pos:position pos:line="10" pos:column="70"/></literal></expr>
                                              <pos:position pos:line="11" pos:column="47"/></then><else pos:line="11" pos:column="47">: <expr><literal type="string" pos:line="11" pos:column="49">"Authorization"<pos:position pos:line="11" pos:column="64"/></literal></expr></else></ternary></expr></argument>)<pos:position pos:line="11" pos:column="65"/></argument_list></call></expr>;<pos:position pos:line="11" pos:column="66"/></expr_stmt>

    <if pos:line="13" pos:column="5">if <condition pos:line="13" pos:column="8">(<expr><operator pos:line="13" pos:column="9">!<pos:position pos:line="13" pos:column="10"/></operator><name pos:line="13" pos:column="10">auth_line<pos:position pos:line="13" pos:column="19"/></name></expr>)<pos:position pos:line="13" pos:column="20"/></condition><then pos:line="13" pos:column="20"> <block pos:line="13" pos:column="21">{
        <expr_stmt><expr><call><name pos:line="14" pos:column="9">note_basic_auth_failure<pos:position pos:line="14" pos:column="32"/></name><argument_list pos:line="14" pos:column="32">(<argument><expr><name pos:line="14" pos:column="33">r<pos:position pos:line="14" pos:column="34"/></name></expr></argument>)<pos:position pos:line="14" pos:column="35"/></argument_list></call></expr>;<pos:position pos:line="14" pos:column="36"/></expr_stmt>
        <return pos:line="15" pos:column="9">return <expr><name pos:line="15" pos:column="16">HTTP_UNAUTHORIZED<pos:position pos:line="15" pos:column="33"/></name></expr>;<pos:position pos:line="15" pos:column="34"/></return>
    }<pos:position pos:line="16" pos:column="6"/></block></then></if>

    <if pos:line="18" pos:column="5">if <condition pos:line="18" pos:column="8">(<expr><call><name pos:line="18" pos:column="9">strcasecmp<pos:position pos:line="18" pos:column="19"/></name><argument_list pos:line="18" pos:column="19">(<argument><expr><call><name pos:line="18" pos:column="20">ap_getword<pos:position pos:line="18" pos:column="30"/></name><argument_list pos:line="18" pos:column="30">(<argument><expr><name><name pos:line="18" pos:column="31">r<pos:position pos:line="18" pos:column="32"/></name><operator pos:line="18" pos:column="32">-&gt;<pos:position pos:line="18" pos:column="37"/></operator><name pos:line="18" pos:column="34">pool<pos:position pos:line="18" pos:column="38"/></name></name></expr></argument>, <argument><expr><operator pos:line="18" pos:column="40">&amp;<pos:position pos:line="18" pos:column="45"/></operator><name pos:line="18" pos:column="41">auth_line<pos:position pos:line="18" pos:column="50"/></name></expr></argument>, <argument><expr><literal type="char" pos:line="18" pos:column="52">' '<pos:position pos:line="18" pos:column="55"/></literal></expr></argument>)<pos:position pos:line="18" pos:column="56"/></argument_list></call></expr></argument>, <argument><expr><literal type="string" pos:line="18" pos:column="58">"Basic"<pos:position pos:line="18" pos:column="65"/></literal></expr></argument>)<pos:position pos:line="18" pos:column="66"/></argument_list></call></expr>)<pos:position pos:line="18" pos:column="67"/></condition><then pos:line="18" pos:column="67"> <block pos:line="18" pos:column="68">{
        <comment type="block" pos:line="19" pos:column="9">/* Client tried to authenticate using wrong auth scheme */</comment>
        <expr_stmt><expr><call><name pos:line="20" pos:column="9">ap_log_rerror<pos:position pos:line="20" pos:column="22"/></name><argument_list pos:line="20" pos:column="22">(<argument><expr><name pos:line="20" pos:column="23">APLOG_MARK<pos:position pos:line="20" pos:column="33"/></name></expr></argument>, <argument><expr><name pos:line="20" pos:column="35">APLOG_ERR<pos:position pos:line="20" pos:column="44"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="20" pos:column="46">0<pos:position pos:line="20" pos:column="47"/></literal></expr></argument>, <argument><expr><name pos:line="20" pos:column="49">r<pos:position pos:line="20" pos:column="50"/></name></expr></argument>,
                      <argument><expr><literal type="string" pos:line="21" pos:column="23">"client used wrong authentication scheme: %s"<pos:position pos:line="21" pos:column="68"/></literal></expr></argument>, <argument><expr><name><name pos:line="21" pos:column="70">r<pos:position pos:line="21" pos:column="71"/></name><operator pos:line="21" pos:column="71">-&gt;<pos:position pos:line="21" pos:column="76"/></operator><name pos:line="21" pos:column="73">uri<pos:position pos:line="21" pos:column="76"/></name></name></expr></argument>)<pos:position pos:line="21" pos:column="77"/></argument_list></call></expr>;<pos:position pos:line="21" pos:column="78"/></expr_stmt>
        <expr_stmt><expr><call><name pos:line="22" pos:column="9">note_basic_auth_failure<pos:position pos:line="22" pos:column="32"/></name><argument_list pos:line="22" pos:column="32">(<argument><expr><name pos:line="22" pos:column="33">r<pos:position pos:line="22" pos:column="34"/></name></expr></argument>)<pos:position pos:line="22" pos:column="35"/></argument_list></call></expr>;<pos:position pos:line="22" pos:column="36"/></expr_stmt>
        <return pos:line="23" pos:column="9">return <expr><name pos:line="23" pos:column="16">HTTP_UNAUTHORIZED<pos:position pos:line="23" pos:column="33"/></name></expr>;<pos:position pos:line="23" pos:column="34"/></return>
    }<pos:position pos:line="24" pos:column="6"/></block></then></if>

    <comment type="block" pos:line="26" pos:column="5">/* Skip leading spaces. */</comment>
    <while pos:line="27" pos:column="5">while <condition pos:line="27" pos:column="11">(<expr><call><name pos:line="27" pos:column="12">apr_isspace<pos:position pos:line="27" pos:column="23"/></name><argument_list pos:line="27" pos:column="23">(<argument><expr><operator pos:line="27" pos:column="24">*<pos:position pos:line="27" pos:column="25"/></operator><name pos:line="27" pos:column="25">auth_line<pos:position pos:line="27" pos:column="34"/></name></expr></argument>)<pos:position pos:line="27" pos:column="35"/></argument_list></call></expr>)<pos:position pos:line="27" pos:column="36"/></condition> <block pos:line="27" pos:column="37">{
        <expr_stmt><expr><name pos:line="28" pos:column="9">auth_line<pos:position pos:line="28" pos:column="18"/></name><operator pos:line="28" pos:column="18">++<pos:position pos:line="28" pos:column="20"/></operator></expr>;<pos:position pos:line="28" pos:column="21"/></expr_stmt>
    }<pos:position pos:line="29" pos:column="6"/></block></while>

    <expr_stmt><expr><name pos:line="31" pos:column="5">decoded_line<pos:position pos:line="31" pos:column="17"/></name> <operator pos:line="31" pos:column="18">=<pos:position pos:line="31" pos:column="19"/></operator> <call><name pos:line="31" pos:column="20">apr_palloc<pos:position pos:line="31" pos:column="30"/></name><argument_list pos:line="31" pos:column="30">(<argument><expr><name><name pos:line="31" pos:column="31">r<pos:position pos:line="31" pos:column="32"/></name><operator pos:line="31" pos:column="32">-&gt;<pos:position pos:line="31" pos:column="37"/></operator><name pos:line="31" pos:column="34">pool<pos:position pos:line="31" pos:column="38"/></name></name></expr></argument>, <argument><expr><call><name pos:line="31" pos:column="40">apr_base64_decode_len<pos:position pos:line="31" pos:column="61"/></name><argument_list pos:line="31" pos:column="61">(<argument><expr><name pos:line="31" pos:column="62">auth_line<pos:position pos:line="31" pos:column="71"/></name></expr></argument>)<pos:position pos:line="31" pos:column="72"/></argument_list></call> <operator pos:line="31" pos:column="73">+<pos:position pos:line="31" pos:column="74"/></operator> <literal type="number" pos:line="31" pos:column="75">1<pos:position pos:line="31" pos:column="76"/></literal></expr></argument>)<pos:position pos:line="31" pos:column="77"/></argument_list></call></expr>;<pos:position pos:line="31" pos:column="78"/></expr_stmt>
    <expr_stmt><expr><name pos:line="32" pos:column="5">length<pos:position pos:line="32" pos:column="11"/></name> <operator pos:line="32" pos:column="12">=<pos:position pos:line="32" pos:column="13"/></operator> <call><name pos:line="32" pos:column="14">apr_base64_decode<pos:position pos:line="32" pos:column="31"/></name><argument_list pos:line="32" pos:column="31">(<argument><expr><name pos:line="32" pos:column="32">decoded_line<pos:position pos:line="32" pos:column="44"/></name></expr></argument>, <argument><expr><name pos:line="32" pos:column="46">auth_line<pos:position pos:line="32" pos:column="55"/></name></expr></argument>)<pos:position pos:line="32" pos:column="56"/></argument_list></call></expr>;<pos:position pos:line="32" pos:column="57"/></expr_stmt>
    <comment type="block" pos:line="33" pos:column="5">/* Null-terminate the string. */</comment>
    <expr_stmt><expr><name><name pos:line="34" pos:column="5">decoded_line<pos:position pos:line="34" pos:column="17"/></name><index pos:line="34" pos:column="17">[<expr><name pos:line="34" pos:column="18">length<pos:position pos:line="34" pos:column="24"/></name></expr>]<pos:position pos:line="34" pos:column="25"/></index></name> <operator pos:line="34" pos:column="26">=<pos:position pos:line="34" pos:column="27"/></operator> <literal type="char" pos:line="34" pos:column="28">'\0'<pos:position pos:line="34" pos:column="32"/></literal></expr>;<pos:position pos:line="34" pos:column="33"/></expr_stmt>

    <expr_stmt><expr><operator pos:line="36" pos:column="5">*<pos:position pos:line="36" pos:column="6"/></operator><name pos:line="36" pos:column="6">user<pos:position pos:line="36" pos:column="10"/></name> <operator pos:line="36" pos:column="11">=<pos:position pos:line="36" pos:column="12"/></operator> <call><name pos:line="36" pos:column="13">ap_getword_nulls<pos:position pos:line="36" pos:column="29"/></name><argument_list pos:line="36" pos:column="29">(<argument><expr><name><name pos:line="36" pos:column="30">r<pos:position pos:line="36" pos:column="31"/></name><operator pos:line="36" pos:column="31">-&gt;<pos:position pos:line="36" pos:column="36"/></operator><name pos:line="36" pos:column="33">pool<pos:position pos:line="36" pos:column="37"/></name></name></expr></argument>, <argument><expr><operator pos:line="36" pos:column="39">(<pos:position pos:line="36" pos:column="40"/></operator><specifier pos:line="36" pos:column="40">const<pos:position pos:line="36" pos:column="45"/></specifier> <name pos:line="36" pos:column="46">char<pos:position pos:line="36" pos:column="50"/></name><operator pos:line="36" pos:column="50">*<pos:position pos:line="36" pos:column="51"/></operator><operator pos:line="36" pos:column="51">*<pos:position pos:line="36" pos:column="52"/></operator><operator pos:line="36" pos:column="52">)<pos:position pos:line="36" pos:column="53"/></operator><operator pos:line="36" pos:column="53">&amp;<pos:position pos:line="36" pos:column="58"/></operator><name pos:line="36" pos:column="54">decoded_line<pos:position pos:line="36" pos:column="66"/></name></expr></argument>, <argument><expr><literal type="char" pos:line="36" pos:column="68">':'<pos:position pos:line="36" pos:column="71"/></literal></expr></argument>)<pos:position pos:line="36" pos:column="72"/></argument_list></call></expr>;<pos:position pos:line="36" pos:column="73"/></expr_stmt>
    <expr_stmt><expr><operator pos:line="37" pos:column="5">*<pos:position pos:line="37" pos:column="6"/></operator><name pos:line="37" pos:column="6">pw<pos:position pos:line="37" pos:column="8"/></name> <operator pos:line="37" pos:column="9">=<pos:position pos:line="37" pos:column="10"/></operator> <name pos:line="37" pos:column="11">decoded_line<pos:position pos:line="37" pos:column="23"/></name></expr>;<pos:position pos:line="37" pos:column="24"/></expr_stmt>

    <comment type="block" pos:line="39" pos:column="5">/* set the user, even though the user is unauthenticated at this point */</comment>
    <expr_stmt><expr><name><name pos:line="40" pos:column="5">r<pos:position pos:line="40" pos:column="6"/></name><operator pos:line="40" pos:column="6">-&gt;<pos:position pos:line="40" pos:column="11"/></operator><name pos:line="40" pos:column="8">user<pos:position pos:line="40" pos:column="12"/></name></name> <operator pos:line="40" pos:column="13">=<pos:position pos:line="40" pos:column="14"/></operator> <operator pos:line="40" pos:column="15">(<pos:position pos:line="40" pos:column="16"/></operator><name pos:line="40" pos:column="16">char<pos:position pos:line="40" pos:column="20"/></name> <operator pos:line="40" pos:column="21">*<pos:position pos:line="40" pos:column="22"/></operator><operator pos:line="40" pos:column="22">)<pos:position pos:line="40" pos:column="23"/></operator> <operator pos:line="40" pos:column="24">*<pos:position pos:line="40" pos:column="25"/></operator><name pos:line="40" pos:column="25">user<pos:position pos:line="40" pos:column="29"/></name></expr>;<pos:position pos:line="40" pos:column="30"/></expr_stmt>

    <return pos:line="42" pos:column="5">return <expr><name pos:line="42" pos:column="12">OK<pos:position pos:line="42" pos:column="14"/></name></expr>;<pos:position pos:line="42" pos:column="15"/></return>
}<pos:position pos:line="43" pos:column="2"/></block></function></unit>

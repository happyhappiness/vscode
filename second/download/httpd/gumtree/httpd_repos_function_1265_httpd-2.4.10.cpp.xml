<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/httpd/gumtree/httpd_repos_function_1265_httpd-2.4.10.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">int<pos:position pos:line="1" pos:column="11"/></name></type> <name pos:line="1" pos:column="12">file_cache_handler<pos:position pos:line="1" pos:column="30"/></name><parameter_list pos:line="1" pos:column="30">(<parameter><decl><type><name pos:line="1" pos:column="31">request_rec<pos:position pos:line="1" pos:column="42"/></name> <modifier pos:line="1" pos:column="43">*<pos:position pos:line="1" pos:column="44"/></modifier></type><name pos:line="1" pos:column="44">r<pos:position pos:line="1" pos:column="45"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="46"/></parameter_list>
<block pos:line="2" pos:column="1">{
    <decl_stmt><decl><type><name pos:line="3" pos:column="5">a_file<pos:position pos:line="3" pos:column="11"/></name> <modifier pos:line="3" pos:column="12">*<pos:position pos:line="3" pos:column="13"/></modifier></type><name pos:line="3" pos:column="13">match<pos:position pos:line="3" pos:column="18"/></name></decl>;<pos:position pos:line="3" pos:column="19"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="4" pos:column="5">int<pos:position pos:line="4" pos:column="8"/></name></type> <name pos:line="4" pos:column="9">errstatus<pos:position pos:line="4" pos:column="18"/></name></decl>;<pos:position pos:line="4" pos:column="19"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="5" pos:column="5">int<pos:position pos:line="5" pos:column="8"/></name></type> <name pos:line="5" pos:column="9">rc<pos:position pos:line="5" pos:column="11"/></name> <init pos:line="5" pos:column="12">= <expr><name pos:line="5" pos:column="14">OK<pos:position pos:line="5" pos:column="16"/></name></expr></init></decl>;<pos:position pos:line="5" pos:column="17"/></decl_stmt>

    <comment type="block" pos:line="7" pos:column="5">/* XXX: not sure if this is right yet
     * see comment in http_core.c:default_handler
     */</comment>
    <if pos:line="10" pos:column="5">if <condition pos:line="10" pos:column="8">(<expr><call><name pos:line="10" pos:column="9">ap_strcmp_match<pos:position pos:line="10" pos:column="24"/></name><argument_list pos:line="10" pos:column="24">(<argument><expr><name><name pos:line="10" pos:column="25">r<pos:position pos:line="10" pos:column="26"/></name><operator pos:line="10" pos:column="26">-&gt;<pos:position pos:line="10" pos:column="31"/></operator><name pos:line="10" pos:column="28">handler<pos:position pos:line="10" pos:column="35"/></name></name></expr></argument>, <argument><expr><literal type="string" pos:line="10" pos:column="37">"*/*"<pos:position pos:line="10" pos:column="42"/></literal></expr></argument>)<pos:position pos:line="10" pos:column="43"/></argument_list></call></expr>)<pos:position pos:line="10" pos:column="44"/></condition><then pos:line="10" pos:column="44"> <block pos:line="10" pos:column="45">{
        <return pos:line="11" pos:column="9">return <expr><name pos:line="11" pos:column="16">DECLINED<pos:position pos:line="11" pos:column="24"/></name></expr>;<pos:position pos:line="11" pos:column="25"/></return>
    }<pos:position pos:line="12" pos:column="6"/></block></then></if>

    <comment type="block" pos:line="14" pos:column="5">/* we don't handle anything but GET */</comment>
    <if pos:line="15" pos:column="5">if <condition pos:line="15" pos:column="8">(<expr><name><name pos:line="15" pos:column="9">r<pos:position pos:line="15" pos:column="10"/></name><operator pos:line="15" pos:column="10">-&gt;<pos:position pos:line="15" pos:column="15"/></operator><name pos:line="15" pos:column="12">method_number<pos:position pos:line="15" pos:column="25"/></name></name> <operator pos:line="15" pos:column="26">!=<pos:position pos:line="15" pos:column="28"/></operator> <name pos:line="15" pos:column="29">M_GET<pos:position pos:line="15" pos:column="34"/></name></expr>)<pos:position pos:line="15" pos:column="35"/></condition><then pos:line="15" pos:column="35"> <block type="pseudo"><return pos:line="15" pos:column="36">return <expr><name pos:line="15" pos:column="43">DECLINED<pos:position pos:line="15" pos:column="51"/></name></expr>;<pos:position pos:line="15" pos:column="52"/></return></block></then></if>

    <comment type="block" pos:line="17" pos:column="5">/* did xlat phase find the file? */</comment>
    <expr_stmt><expr><name pos:line="18" pos:column="5">match<pos:position pos:line="18" pos:column="10"/></name> <operator pos:line="18" pos:column="11">=<pos:position pos:line="18" pos:column="12"/></operator> <call><name pos:line="18" pos:column="13">ap_get_module_config<pos:position pos:line="18" pos:column="33"/></name><argument_list pos:line="18" pos:column="33">(<argument><expr><name><name pos:line="18" pos:column="34">r<pos:position pos:line="18" pos:column="35"/></name><operator pos:line="18" pos:column="35">-&gt;<pos:position pos:line="18" pos:column="40"/></operator><name pos:line="18" pos:column="37">request_config<pos:position pos:line="18" pos:column="51"/></name></name></expr></argument>, <argument><expr><operator pos:line="18" pos:column="53">&amp;<pos:position pos:line="18" pos:column="58"/></operator><name pos:line="18" pos:column="54">file_cache_module<pos:position pos:line="18" pos:column="71"/></name></expr></argument>)<pos:position pos:line="18" pos:column="72"/></argument_list></call></expr>;<pos:position pos:line="18" pos:column="73"/></expr_stmt>

    <if pos:line="20" pos:column="5">if <condition pos:line="20" pos:column="8">(<expr><name pos:line="20" pos:column="9">match<pos:position pos:line="20" pos:column="14"/></name> <operator pos:line="20" pos:column="15">==<pos:position pos:line="20" pos:column="17"/></operator> <name pos:line="20" pos:column="18">NULL<pos:position pos:line="20" pos:column="22"/></name></expr>)<pos:position pos:line="20" pos:column="23"/></condition><then pos:line="20" pos:column="23"> <block pos:line="20" pos:column="24">{
        <return pos:line="21" pos:column="9">return <expr><name pos:line="21" pos:column="16">DECLINED<pos:position pos:line="21" pos:column="24"/></name></expr>;<pos:position pos:line="21" pos:column="25"/></return>
    }<pos:position pos:line="22" pos:column="6"/></block></then></if>

    <comment type="block" pos:line="24" pos:column="5">/* note that we would handle GET on this resource */</comment>
    <expr_stmt><expr><name><name pos:line="25" pos:column="5">r<pos:position pos:line="25" pos:column="6"/></name><operator pos:line="25" pos:column="6">-&gt;<pos:position pos:line="25" pos:column="11"/></operator><name pos:line="25" pos:column="8">allowed<pos:position pos:line="25" pos:column="15"/></name></name> <operator pos:line="25" pos:column="16">|=<pos:position pos:line="25" pos:column="18"/></operator> <operator pos:line="25" pos:column="19">(<pos:position pos:line="25" pos:column="20"/></operator><name pos:line="25" pos:column="20">AP_METHOD_BIT<pos:position pos:line="25" pos:column="33"/></name> <operator pos:line="25" pos:column="34">&lt;&lt;<pos:position pos:line="25" pos:column="42"/></operator> <name pos:line="25" pos:column="37">M_GET<pos:position pos:line="25" pos:column="42"/></name><operator pos:line="25" pos:column="42">)<pos:position pos:line="25" pos:column="43"/></operator></expr>;<pos:position pos:line="25" pos:column="44"/></expr_stmt>

    <comment type="block" pos:line="27" pos:column="5">/* This handler has no use for a request body (yet), but we still
     * need to read and discard it if the client sent one.
     */</comment>
    <if pos:line="30" pos:column="5">if <condition pos:line="30" pos:column="8">(<expr><operator pos:line="30" pos:column="9">(<pos:position pos:line="30" pos:column="10"/></operator><name pos:line="30" pos:column="10">errstatus<pos:position pos:line="30" pos:column="19"/></name> <operator pos:line="30" pos:column="20">=<pos:position pos:line="30" pos:column="21"/></operator> <call><name pos:line="30" pos:column="22">ap_discard_request_body<pos:position pos:line="30" pos:column="45"/></name><argument_list pos:line="30" pos:column="45">(<argument><expr><name pos:line="30" pos:column="46">r<pos:position pos:line="30" pos:column="47"/></name></expr></argument>)<pos:position pos:line="30" pos:column="48"/></argument_list></call><operator pos:line="30" pos:column="48">)<pos:position pos:line="30" pos:column="49"/></operator> <operator pos:line="30" pos:column="50">!=<pos:position pos:line="30" pos:column="52"/></operator> <name pos:line="30" pos:column="53">OK<pos:position pos:line="30" pos:column="55"/></name></expr>)<pos:position pos:line="30" pos:column="56"/></condition><then pos:line="30" pos:column="56">
        <block type="pseudo"><return pos:line="31" pos:column="9">return <expr><name pos:line="31" pos:column="16">errstatus<pos:position pos:line="31" pos:column="25"/></name></expr>;<pos:position pos:line="31" pos:column="26"/></return></block></then></if>

    <expr_stmt><expr><call><name pos:line="33" pos:column="5">ap_update_mtime<pos:position pos:line="33" pos:column="20"/></name><argument_list pos:line="33" pos:column="20">(<argument><expr><name pos:line="33" pos:column="21">r<pos:position pos:line="33" pos:column="22"/></name></expr></argument>, <argument><expr><name><name pos:line="33" pos:column="24">match<pos:position pos:line="33" pos:column="29"/></name><operator pos:line="33" pos:column="29">-&gt;<pos:position pos:line="33" pos:column="34"/></operator><name pos:line="33" pos:column="31">finfo<pos:position pos:line="33" pos:column="36"/></name><operator pos:line="33" pos:column="36">.<pos:position pos:line="33" pos:column="37"/></operator><name pos:line="33" pos:column="37">mtime<pos:position pos:line="33" pos:column="42"/></name></name></expr></argument>)<pos:position pos:line="33" pos:column="43"/></argument_list></call></expr>;<pos:position pos:line="33" pos:column="44"/></expr_stmt>

    <comment type="block" pos:line="35" pos:column="5">/* ap_set_last_modified() always converts the file mtime to a string
     * which is slow.  Accelerate the common case.
     * ap_set_last_modified(r);
     */</comment>
    <block pos:line="39" pos:column="5">{
        <decl_stmt><decl><type><name pos:line="40" pos:column="9">apr_time_t<pos:position pos:line="40" pos:column="19"/></name></type> <name pos:line="40" pos:column="20">mod_time<pos:position pos:line="40" pos:column="28"/></name></decl>;<pos:position pos:line="40" pos:column="29"/></decl_stmt>
        <decl_stmt><decl><type><name pos:line="41" pos:column="9">char<pos:position pos:line="41" pos:column="13"/></name> <modifier pos:line="41" pos:column="14">*<pos:position pos:line="41" pos:column="15"/></modifier></type><name pos:line="41" pos:column="15">datestr<pos:position pos:line="41" pos:column="22"/></name></decl>;<pos:position pos:line="41" pos:column="23"/></decl_stmt>

        <expr_stmt><expr><name pos:line="43" pos:column="9">mod_time<pos:position pos:line="43" pos:column="17"/></name> <operator pos:line="43" pos:column="18">=<pos:position pos:line="43" pos:column="19"/></operator> <call><name pos:line="43" pos:column="20">ap_rationalize_mtime<pos:position pos:line="43" pos:column="40"/></name><argument_list pos:line="43" pos:column="40">(<argument><expr><name pos:line="43" pos:column="41">r<pos:position pos:line="43" pos:column="42"/></name></expr></argument>, <argument><expr><name><name pos:line="43" pos:column="44">r<pos:position pos:line="43" pos:column="45"/></name><operator pos:line="43" pos:column="45">-&gt;<pos:position pos:line="43" pos:column="50"/></operator><name pos:line="43" pos:column="47">mtime<pos:position pos:line="43" pos:column="52"/></name></name></expr></argument>)<pos:position pos:line="43" pos:column="53"/></argument_list></call></expr>;<pos:position pos:line="43" pos:column="54"/></expr_stmt>
        <if pos:line="44" pos:column="9">if <condition pos:line="44" pos:column="12">(<expr><name pos:line="44" pos:column="13">mod_time<pos:position pos:line="44" pos:column="21"/></name> <operator pos:line="44" pos:column="22">==<pos:position pos:line="44" pos:column="24"/></operator> <name><name pos:line="44" pos:column="25">match<pos:position pos:line="44" pos:column="30"/></name><operator pos:line="44" pos:column="30">-&gt;<pos:position pos:line="44" pos:column="35"/></operator><name pos:line="44" pos:column="32">finfo<pos:position pos:line="44" pos:column="37"/></name><operator pos:line="44" pos:column="37">.<pos:position pos:line="44" pos:column="38"/></operator><name pos:line="44" pos:column="38">mtime<pos:position pos:line="44" pos:column="43"/></name></name></expr>)<pos:position pos:line="44" pos:column="44"/></condition><then pos:line="44" pos:column="44">
            <block type="pseudo"><expr_stmt><expr><name pos:line="45" pos:column="13">datestr<pos:position pos:line="45" pos:column="20"/></name> <operator pos:line="45" pos:column="21">=<pos:position pos:line="45" pos:column="22"/></operator> <name><name pos:line="45" pos:column="23">match<pos:position pos:line="45" pos:column="28"/></name><operator pos:line="45" pos:column="28">-&gt;<pos:position pos:line="45" pos:column="33"/></operator><name pos:line="45" pos:column="30">mtimestr<pos:position pos:line="45" pos:column="38"/></name></name></expr>;<pos:position pos:line="45" pos:column="39"/></expr_stmt></block></then>
        <else pos:line="46" pos:column="9">else <block pos:line="46" pos:column="14">{
            <expr_stmt><expr><name pos:line="47" pos:column="13">datestr<pos:position pos:line="47" pos:column="20"/></name> <operator pos:line="47" pos:column="21">=<pos:position pos:line="47" pos:column="22"/></operator> <call><name pos:line="47" pos:column="23">apr_palloc<pos:position pos:line="47" pos:column="33"/></name><argument_list pos:line="47" pos:column="33">(<argument><expr><name><name pos:line="47" pos:column="34">r<pos:position pos:line="47" pos:column="35"/></name><operator pos:line="47" pos:column="35">-&gt;<pos:position pos:line="47" pos:column="40"/></operator><name pos:line="47" pos:column="37">pool<pos:position pos:line="47" pos:column="41"/></name></name></expr></argument>, <argument><expr><name pos:line="47" pos:column="43">APR_RFC822_DATE_LEN<pos:position pos:line="47" pos:column="62"/></name></expr></argument>)<pos:position pos:line="47" pos:column="63"/></argument_list></call></expr>;<pos:position pos:line="47" pos:column="64"/></expr_stmt>
            <expr_stmt><expr><call><name pos:line="48" pos:column="13">apr_rfc822_date<pos:position pos:line="48" pos:column="28"/></name><argument_list pos:line="48" pos:column="28">(<argument><expr><name pos:line="48" pos:column="29">datestr<pos:position pos:line="48" pos:column="36"/></name></expr></argument>, <argument><expr><name pos:line="48" pos:column="38">mod_time<pos:position pos:line="48" pos:column="46"/></name></expr></argument>)<pos:position pos:line="48" pos:column="47"/></argument_list></call></expr>;<pos:position pos:line="48" pos:column="48"/></expr_stmt>
        }<pos:position pos:line="49" pos:column="10"/></block></else></if>
        <expr_stmt><expr><call><name pos:line="50" pos:column="9">apr_table_setn<pos:position pos:line="50" pos:column="23"/></name><argument_list pos:line="50" pos:column="23">(<argument><expr><name><name pos:line="50" pos:column="24">r<pos:position pos:line="50" pos:column="25"/></name><operator pos:line="50" pos:column="25">-&gt;<pos:position pos:line="50" pos:column="30"/></operator><name pos:line="50" pos:column="27">headers_out<pos:position pos:line="50" pos:column="38"/></name></name></expr></argument>, <argument><expr><literal type="string" pos:line="50" pos:column="40">"Last-Modified"<pos:position pos:line="50" pos:column="55"/></literal></expr></argument>, <argument><expr><name pos:line="50" pos:column="57">datestr<pos:position pos:line="50" pos:column="64"/></name></expr></argument>)<pos:position pos:line="50" pos:column="65"/></argument_list></call></expr>;<pos:position pos:line="50" pos:column="66"/></expr_stmt>
    }<pos:position pos:line="51" pos:column="6"/></block>

    <comment type="block" pos:line="53" pos:column="5">/* ap_set_content_length() always converts the same number and never
     * returns an error.  Accelerate it.
     */</comment>
    <expr_stmt><expr><name><name pos:line="56" pos:column="5">r<pos:position pos:line="56" pos:column="6"/></name><operator pos:line="56" pos:column="6">-&gt;<pos:position pos:line="56" pos:column="11"/></operator><name pos:line="56" pos:column="8">clength<pos:position pos:line="56" pos:column="15"/></name></name> <operator pos:line="56" pos:column="16">=<pos:position pos:line="56" pos:column="17"/></operator> <name><name pos:line="56" pos:column="18">match<pos:position pos:line="56" pos:column="23"/></name><operator pos:line="56" pos:column="23">-&gt;<pos:position pos:line="56" pos:column="28"/></operator><name pos:line="56" pos:column="25">finfo<pos:position pos:line="56" pos:column="30"/></name><operator pos:line="56" pos:column="30">.<pos:position pos:line="56" pos:column="31"/></operator><name pos:line="56" pos:column="31">size<pos:position pos:line="56" pos:column="35"/></name></name></expr>;<pos:position pos:line="56" pos:column="36"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="57" pos:column="5">apr_table_setn<pos:position pos:line="57" pos:column="19"/></name><argument_list pos:line="57" pos:column="19">(<argument><expr><name><name pos:line="57" pos:column="20">r<pos:position pos:line="57" pos:column="21"/></name><operator pos:line="57" pos:column="21">-&gt;<pos:position pos:line="57" pos:column="26"/></operator><name pos:line="57" pos:column="23">headers_out<pos:position pos:line="57" pos:column="34"/></name></name></expr></argument>, <argument><expr><literal type="string" pos:line="57" pos:column="36">"Content-Length"<pos:position pos:line="57" pos:column="52"/></literal></expr></argument>, <argument><expr><name><name pos:line="57" pos:column="54">match<pos:position pos:line="57" pos:column="59"/></name><operator pos:line="57" pos:column="59">-&gt;<pos:position pos:line="57" pos:column="64"/></operator><name pos:line="57" pos:column="61">sizestr<pos:position pos:line="57" pos:column="68"/></name></name></expr></argument>)<pos:position pos:line="57" pos:column="69"/></argument_list></call></expr>;<pos:position pos:line="57" pos:column="70"/></expr_stmt>

    <expr_stmt><expr><call><name pos:line="59" pos:column="5">ap_set_etag<pos:position pos:line="59" pos:column="16"/></name><argument_list pos:line="59" pos:column="16">(<argument><expr><name pos:line="59" pos:column="17">r<pos:position pos:line="59" pos:column="18"/></name></expr></argument>)<pos:position pos:line="59" pos:column="19"/></argument_list></call></expr>;<pos:position pos:line="59" pos:column="20"/></expr_stmt>
    <if pos:line="60" pos:column="5">if <condition pos:line="60" pos:column="8">(<expr><operator pos:line="60" pos:column="9">(<pos:position pos:line="60" pos:column="10"/></operator><name pos:line="60" pos:column="10">errstatus<pos:position pos:line="60" pos:column="19"/></name> <operator pos:line="60" pos:column="20">=<pos:position pos:line="60" pos:column="21"/></operator> <call><name pos:line="60" pos:column="22">ap_meets_conditions<pos:position pos:line="60" pos:column="41"/></name><argument_list pos:line="60" pos:column="41">(<argument><expr><name pos:line="60" pos:column="42">r<pos:position pos:line="60" pos:column="43"/></name></expr></argument>)<pos:position pos:line="60" pos:column="44"/></argument_list></call><operator pos:line="60" pos:column="44">)<pos:position pos:line="60" pos:column="45"/></operator> <operator pos:line="60" pos:column="46">!=<pos:position pos:line="60" pos:column="48"/></operator> <name pos:line="60" pos:column="49">OK<pos:position pos:line="60" pos:column="51"/></name></expr>)<pos:position pos:line="60" pos:column="52"/></condition><then pos:line="60" pos:column="52"> <block pos:line="60" pos:column="53">{
       <return pos:line="61" pos:column="8">return <expr><name pos:line="61" pos:column="15">errstatus<pos:position pos:line="61" pos:column="24"/></name></expr>;<pos:position pos:line="61" pos:column="25"/></return>
    }<pos:position pos:line="62" pos:column="6"/></block></then></if>

    <comment type="block" pos:line="64" pos:column="5">/* Call appropriate handler */</comment>
    <if pos:line="65" pos:column="5">if <condition pos:line="65" pos:column="8">(<expr><operator pos:line="65" pos:column="9">!<pos:position pos:line="65" pos:column="10"/></operator><name><name pos:line="65" pos:column="10">r<pos:position pos:line="65" pos:column="11"/></name><operator pos:line="65" pos:column="11">-&gt;<pos:position pos:line="65" pos:column="16"/></operator><name pos:line="65" pos:column="13">header_only<pos:position pos:line="65" pos:column="24"/></name></name></expr>)<pos:position pos:line="65" pos:column="25"/></condition><then pos:line="65" pos:column="25"> <block pos:line="65" pos:column="26">{
        <if pos:line="66" pos:column="9">if <condition pos:line="66" pos:column="12">(<expr><name><name pos:line="66" pos:column="13">match<pos:position pos:line="66" pos:column="18"/></name><operator pos:line="66" pos:column="18">-&gt;<pos:position pos:line="66" pos:column="23"/></operator><name pos:line="66" pos:column="20">is_mmapped<pos:position pos:line="66" pos:column="30"/></name></name> <operator pos:line="66" pos:column="31">==<pos:position pos:line="66" pos:column="33"/></operator> <name pos:line="66" pos:column="34">TRUE<pos:position pos:line="66" pos:column="38"/></name></expr>)<pos:position pos:line="66" pos:column="39"/></condition><then pos:line="66" pos:column="39">
            <block type="pseudo"><expr_stmt><expr><name pos:line="67" pos:column="13">rc<pos:position pos:line="67" pos:column="15"/></name> <operator pos:line="67" pos:column="16">=<pos:position pos:line="67" pos:column="17"/></operator> <call><name pos:line="67" pos:column="18">mmap_handler<pos:position pos:line="67" pos:column="30"/></name><argument_list pos:line="67" pos:column="30">(<argument><expr><name pos:line="67" pos:column="31">r<pos:position pos:line="67" pos:column="32"/></name></expr></argument>, <argument><expr><name pos:line="67" pos:column="34">match<pos:position pos:line="67" pos:column="39"/></name></expr></argument>)<pos:position pos:line="67" pos:column="40"/></argument_list></call></expr>;<pos:position pos:line="67" pos:column="41"/></expr_stmt></block></then>
        <else pos:line="68" pos:column="9">else
            <block type="pseudo"><expr_stmt><expr><name pos:line="69" pos:column="13">rc<pos:position pos:line="69" pos:column="15"/></name> <operator pos:line="69" pos:column="16">=<pos:position pos:line="69" pos:column="17"/></operator> <call><name pos:line="69" pos:column="18">sendfile_handler<pos:position pos:line="69" pos:column="34"/></name><argument_list pos:line="69" pos:column="34">(<argument><expr><name pos:line="69" pos:column="35">r<pos:position pos:line="69" pos:column="36"/></name></expr></argument>, <argument><expr><name pos:line="69" pos:column="38">match<pos:position pos:line="69" pos:column="43"/></name></expr></argument>)<pos:position pos:line="69" pos:column="44"/></argument_list></call></expr>;<pos:position pos:line="69" pos:column="45"/></expr_stmt></block></else></if>
    }<pos:position pos:line="70" pos:column="6"/></block></then></if>

    <return pos:line="72" pos:column="5">return <expr><name pos:line="72" pos:column="12">rc<pos:position pos:line="72" pos:column="14"/></name></expr>;<pos:position pos:line="72" pos:column="15"/></return>
}<pos:position pos:line="73" pos:column="2"/></block></function></unit>

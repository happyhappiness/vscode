<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/httpd/gumtree/httpd_function_4968.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">apr_status_t<pos:position pos:line="1" pos:column="20"/></name></type> <name pos:line="1" pos:column="21">sendfile_nonblocking<pos:position pos:line="1" pos:column="41"/></name><parameter_list pos:line="1" pos:column="41">(<parameter><decl><type><name pos:line="1" pos:column="42">apr_socket_t<pos:position pos:line="1" pos:column="54"/></name> <modifier pos:line="1" pos:column="55">*<pos:position pos:line="1" pos:column="56"/></modifier></type><name pos:line="1" pos:column="56">s<pos:position pos:line="1" pos:column="57"/></name></decl></parameter>,
                                         <parameter><decl><type><name pos:line="2" pos:column="42">apr_bucket<pos:position pos:line="2" pos:column="52"/></name> <modifier pos:line="2" pos:column="53">*<pos:position pos:line="2" pos:column="54"/></modifier></type><name pos:line="2" pos:column="54">bucket<pos:position pos:line="2" pos:column="60"/></name></decl></parameter>,
                                         <parameter><decl><type><name pos:line="3" pos:column="42">apr_size_t<pos:position pos:line="3" pos:column="52"/></name> <modifier pos:line="3" pos:column="53">*<pos:position pos:line="3" pos:column="54"/></modifier></type><name pos:line="3" pos:column="54">cumulative_bytes_written<pos:position pos:line="3" pos:column="78"/></name></decl></parameter>,
                                         <parameter><decl><type><name pos:line="4" pos:column="42">conn_rec<pos:position pos:line="4" pos:column="50"/></name> <modifier pos:line="4" pos:column="51">*<pos:position pos:line="4" pos:column="52"/></modifier></type><name pos:line="4" pos:column="52">c<pos:position pos:line="4" pos:column="53"/></name></decl></parameter>)<pos:position pos:line="4" pos:column="54"/></parameter_list>
<block pos:line="5" pos:column="1">{
    <decl_stmt><decl><type><name pos:line="6" pos:column="5">apr_status_t<pos:position pos:line="6" pos:column="17"/></name></type> <name pos:line="6" pos:column="18">rv<pos:position pos:line="6" pos:column="20"/></name> <init pos:line="6" pos:column="21">= <expr><name pos:line="6" pos:column="23">APR_SUCCESS<pos:position pos:line="6" pos:column="34"/></name></expr></init></decl>;<pos:position pos:line="6" pos:column="35"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="7" pos:column="5">apr_bucket_file<pos:position pos:line="7" pos:column="20"/></name> <modifier pos:line="7" pos:column="21">*<pos:position pos:line="7" pos:column="22"/></modifier></type><name pos:line="7" pos:column="22">file_bucket<pos:position pos:line="7" pos:column="33"/></name></decl>;<pos:position pos:line="7" pos:column="34"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="8" pos:column="5">apr_file_t<pos:position pos:line="8" pos:column="15"/></name> <modifier pos:line="8" pos:column="16">*<pos:position pos:line="8" pos:column="17"/></modifier></type><name pos:line="8" pos:column="17">fd<pos:position pos:line="8" pos:column="19"/></name></decl>;<pos:position pos:line="8" pos:column="20"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="9" pos:column="5">apr_size_t<pos:position pos:line="9" pos:column="15"/></name></type> <name pos:line="9" pos:column="16">file_length<pos:position pos:line="9" pos:column="27"/></name></decl>;<pos:position pos:line="9" pos:column="28"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="10" pos:column="5">apr_off_t<pos:position pos:line="10" pos:column="14"/></name></type> <name pos:line="10" pos:column="15">file_offset<pos:position pos:line="10" pos:column="26"/></name></decl>;<pos:position pos:line="10" pos:column="27"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="11" pos:column="5">apr_size_t<pos:position pos:line="11" pos:column="15"/></name></type> <name pos:line="11" pos:column="16">bytes_written<pos:position pos:line="11" pos:column="29"/></name> <init pos:line="11" pos:column="30">= <expr><literal type="number" pos:line="11" pos:column="32">0<pos:position pos:line="11" pos:column="33"/></literal></expr></init></decl>;<pos:position pos:line="11" pos:column="34"/></decl_stmt>

    <if pos:line="13" pos:column="5">if <condition pos:line="13" pos:column="8">(<expr><operator pos:line="13" pos:column="9">!<pos:position pos:line="13" pos:column="10"/></operator><call><name pos:line="13" pos:column="10">APR_BUCKET_IS_FILE<pos:position pos:line="13" pos:column="28"/></name><argument_list pos:line="13" pos:column="28">(<argument><expr><name pos:line="13" pos:column="29">bucket<pos:position pos:line="13" pos:column="35"/></name></expr></argument>)<pos:position pos:line="13" pos:column="36"/></argument_list></call></expr>)<pos:position pos:line="13" pos:column="37"/></condition><then pos:line="13" pos:column="37"> <block pos:line="13" pos:column="38">{
        <expr_stmt><expr><call><name pos:line="14" pos:column="9">ap_log_error<pos:position pos:line="14" pos:column="21"/></name><argument_list pos:line="14" pos:column="21">(<argument><expr><name pos:line="14" pos:column="22">APLOG_MARK<pos:position pos:line="14" pos:column="32"/></name></expr></argument>, <argument><expr><name pos:line="14" pos:column="34">APLOG_ERR<pos:position pos:line="14" pos:column="43"/></name></expr></argument>, <argument><expr><name pos:line="14" pos:column="45">rv<pos:position pos:line="14" pos:column="47"/></name></expr></argument>, <argument><expr><name><name pos:line="14" pos:column="49">c<pos:position pos:line="14" pos:column="50"/></name><operator pos:line="14" pos:column="50">-&gt;<pos:position pos:line="14" pos:column="55"/></operator><name pos:line="14" pos:column="52">base_server<pos:position pos:line="14" pos:column="63"/></name></name></expr></argument>,
                     <argument><expr><literal type="string" pos:line="15" pos:column="22">"core_filter: sendfile_nonblocking: "<pos:position pos:line="15" pos:column="59"/></literal>
                     <literal type="string" pos:line="16" pos:column="22">"this should never happen"<pos:position pos:line="16" pos:column="48"/></literal></expr></argument>)<pos:position pos:line="16" pos:column="49"/></argument_list></call></expr>;<pos:position pos:line="16" pos:column="50"/></expr_stmt>
        <return pos:line="17" pos:column="9">return <expr><name pos:line="17" pos:column="16">APR_EGENERAL<pos:position pos:line="17" pos:column="28"/></name></expr>;<pos:position pos:line="17" pos:column="29"/></return>
    }<pos:position pos:line="18" pos:column="6"/></block></then></if>
    <expr_stmt><expr><name pos:line="19" pos:column="5">file_bucket<pos:position pos:line="19" pos:column="16"/></name> <operator pos:line="19" pos:column="17">=<pos:position pos:line="19" pos:column="18"/></operator> <operator pos:line="19" pos:column="19">(<pos:position pos:line="19" pos:column="20"/></operator><name pos:line="19" pos:column="20">apr_bucket_file<pos:position pos:line="19" pos:column="35"/></name> <operator pos:line="19" pos:column="36">*<pos:position pos:line="19" pos:column="37"/></operator><operator pos:line="19" pos:column="37">)<pos:position pos:line="19" pos:column="38"/></operator><operator pos:line="19" pos:column="38">(<pos:position pos:line="19" pos:column="39"/></operator><name><name pos:line="19" pos:column="39">bucket<pos:position pos:line="19" pos:column="45"/></name><operator pos:line="19" pos:column="45">-&gt;<pos:position pos:line="19" pos:column="50"/></operator><name pos:line="19" pos:column="47">data<pos:position pos:line="19" pos:column="51"/></name></name><operator pos:line="19" pos:column="51">)<pos:position pos:line="19" pos:column="52"/></operator></expr>;<pos:position pos:line="19" pos:column="53"/></expr_stmt>
    <expr_stmt><expr><name pos:line="20" pos:column="5">fd<pos:position pos:line="20" pos:column="7"/></name> <operator pos:line="20" pos:column="8">=<pos:position pos:line="20" pos:column="9"/></operator> <name><name pos:line="20" pos:column="10">file_bucket<pos:position pos:line="20" pos:column="21"/></name><operator pos:line="20" pos:column="21">-&gt;<pos:position pos:line="20" pos:column="26"/></operator><name pos:line="20" pos:column="23">fd<pos:position pos:line="20" pos:column="25"/></name></name></expr>;<pos:position pos:line="20" pos:column="26"/></expr_stmt>
    <expr_stmt><expr><name pos:line="21" pos:column="5">file_length<pos:position pos:line="21" pos:column="16"/></name> <operator pos:line="21" pos:column="17">=<pos:position pos:line="21" pos:column="18"/></operator> <name><name pos:line="21" pos:column="19">bucket<pos:position pos:line="21" pos:column="25"/></name><operator pos:line="21" pos:column="25">-&gt;<pos:position pos:line="21" pos:column="30"/></operator><name pos:line="21" pos:column="27">length<pos:position pos:line="21" pos:column="33"/></name></name></expr>;<pos:position pos:line="21" pos:column="34"/></expr_stmt>
    <expr_stmt><expr><name pos:line="22" pos:column="5">file_offset<pos:position pos:line="22" pos:column="16"/></name> <operator pos:line="22" pos:column="17">=<pos:position pos:line="22" pos:column="18"/></operator> <name><name pos:line="22" pos:column="19">bucket<pos:position pos:line="22" pos:column="25"/></name><operator pos:line="22" pos:column="25">-&gt;<pos:position pos:line="22" pos:column="30"/></operator><name pos:line="22" pos:column="27">start<pos:position pos:line="22" pos:column="32"/></name></name></expr>;<pos:position pos:line="22" pos:column="33"/></expr_stmt>

    <if pos:line="24" pos:column="5">if <condition pos:line="24" pos:column="8">(<expr><name pos:line="24" pos:column="9">bytes_written<pos:position pos:line="24" pos:column="22"/></name> <operator pos:line="24" pos:column="23">&lt;<pos:position pos:line="24" pos:column="27"/></operator> <name pos:line="24" pos:column="25">file_length<pos:position pos:line="24" pos:column="36"/></name></expr>)<pos:position pos:line="24" pos:column="37"/></condition><then pos:line="24" pos:column="37"> <block pos:line="24" pos:column="38">{
        <decl_stmt><decl><type><name pos:line="25" pos:column="9">apr_size_t<pos:position pos:line="25" pos:column="19"/></name></type> <name pos:line="25" pos:column="20">n<pos:position pos:line="25" pos:column="21"/></name> <init pos:line="25" pos:column="22">= <expr><name pos:line="25" pos:column="24">file_length<pos:position pos:line="25" pos:column="35"/></name> <operator pos:line="25" pos:column="36">-<pos:position pos:line="25" pos:column="37"/></operator> <name pos:line="25" pos:column="38">bytes_written<pos:position pos:line="25" pos:column="51"/></name></expr></init></decl>;<pos:position pos:line="25" pos:column="52"/></decl_stmt>
        <decl_stmt><decl><type><name pos:line="26" pos:column="9">apr_status_t<pos:position pos:line="26" pos:column="21"/></name></type> <name pos:line="26" pos:column="22">arv<pos:position pos:line="26" pos:column="25"/></name></decl>;<pos:position pos:line="26" pos:column="26"/></decl_stmt>
        <decl_stmt><decl><type><name pos:line="27" pos:column="9">apr_interval_time_t<pos:position pos:line="27" pos:column="28"/></name></type> <name pos:line="27" pos:column="29">old_timeout<pos:position pos:line="27" pos:column="40"/></name></decl>;<pos:position pos:line="27" pos:column="41"/></decl_stmt>

        <expr_stmt><expr><name pos:line="29" pos:column="9">arv<pos:position pos:line="29" pos:column="12"/></name> <operator pos:line="29" pos:column="13">=<pos:position pos:line="29" pos:column="14"/></operator> <call><name pos:line="29" pos:column="15">apr_socket_timeout_get<pos:position pos:line="29" pos:column="37"/></name><argument_list pos:line="29" pos:column="37">(<argument><expr><name pos:line="29" pos:column="38">s<pos:position pos:line="29" pos:column="39"/></name></expr></argument>, <argument><expr><operator pos:line="29" pos:column="41">&amp;<pos:position pos:line="29" pos:column="46"/></operator><name pos:line="29" pos:column="42">old_timeout<pos:position pos:line="29" pos:column="53"/></name></expr></argument>)<pos:position pos:line="29" pos:column="54"/></argument_list></call></expr>;<pos:position pos:line="29" pos:column="55"/></expr_stmt>
        <if pos:line="30" pos:column="9">if <condition pos:line="30" pos:column="12">(<expr><name pos:line="30" pos:column="13">arv<pos:position pos:line="30" pos:column="16"/></name> <operator pos:line="30" pos:column="17">!=<pos:position pos:line="30" pos:column="19"/></operator> <name pos:line="30" pos:column="20">APR_SUCCESS<pos:position pos:line="30" pos:column="31"/></name></expr>)<pos:position pos:line="30" pos:column="32"/></condition><then pos:line="30" pos:column="32"> <block pos:line="30" pos:column="33">{
            <return pos:line="31" pos:column="13">return <expr><name pos:line="31" pos:column="20">arv<pos:position pos:line="31" pos:column="23"/></name></expr>;<pos:position pos:line="31" pos:column="24"/></return>
        }<pos:position pos:line="32" pos:column="10"/></block></then></if>
        <expr_stmt><expr><name pos:line="33" pos:column="9">arv<pos:position pos:line="33" pos:column="12"/></name> <operator pos:line="33" pos:column="13">=<pos:position pos:line="33" pos:column="14"/></operator> <call><name pos:line="33" pos:column="15">apr_socket_timeout_set<pos:position pos:line="33" pos:column="37"/></name><argument_list pos:line="33" pos:column="37">(<argument><expr><name pos:line="33" pos:column="38">s<pos:position pos:line="33" pos:column="39"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="33" pos:column="41">0<pos:position pos:line="33" pos:column="42"/></literal></expr></argument>)<pos:position pos:line="33" pos:column="43"/></argument_list></call></expr>;<pos:position pos:line="33" pos:column="44"/></expr_stmt>
        <if pos:line="34" pos:column="9">if <condition pos:line="34" pos:column="12">(<expr><name pos:line="34" pos:column="13">arv<pos:position pos:line="34" pos:column="16"/></name> <operator pos:line="34" pos:column="17">!=<pos:position pos:line="34" pos:column="19"/></operator> <name pos:line="34" pos:column="20">APR_SUCCESS<pos:position pos:line="34" pos:column="31"/></name></expr>)<pos:position pos:line="34" pos:column="32"/></condition><then pos:line="34" pos:column="32"> <block pos:line="34" pos:column="33">{
            <return pos:line="35" pos:column="13">return <expr><name pos:line="35" pos:column="20">arv<pos:position pos:line="35" pos:column="23"/></name></expr>;<pos:position pos:line="35" pos:column="24"/></return>
        }<pos:position pos:line="36" pos:column="10"/></block></then></if>
        <expr_stmt><expr><name pos:line="37" pos:column="9">rv<pos:position pos:line="37" pos:column="11"/></name> <operator pos:line="37" pos:column="12">=<pos:position pos:line="37" pos:column="13"/></operator> <call><name pos:line="37" pos:column="14">apr_socket_sendfile<pos:position pos:line="37" pos:column="33"/></name><argument_list pos:line="37" pos:column="33">(<argument><expr><name pos:line="37" pos:column="34">s<pos:position pos:line="37" pos:column="35"/></name></expr></argument>, <argument><expr><name pos:line="37" pos:column="37">fd<pos:position pos:line="37" pos:column="39"/></name></expr></argument>, <argument><expr><name pos:line="37" pos:column="41">NULL<pos:position pos:line="37" pos:column="45"/></name></expr></argument>, <argument><expr><operator pos:line="37" pos:column="47">&amp;<pos:position pos:line="37" pos:column="52"/></operator><name pos:line="37" pos:column="48">file_offset<pos:position pos:line="37" pos:column="59"/></name></expr></argument>, <argument><expr><operator pos:line="37" pos:column="61">&amp;<pos:position pos:line="37" pos:column="66"/></operator><name pos:line="37" pos:column="62">n<pos:position pos:line="37" pos:column="63"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="37" pos:column="65">0<pos:position pos:line="37" pos:column="66"/></literal></expr></argument>)<pos:position pos:line="37" pos:column="67"/></argument_list></call></expr>;<pos:position pos:line="37" pos:column="68"/></expr_stmt>
        <if pos:line="38" pos:column="9">if <condition pos:line="38" pos:column="12">(<expr><name pos:line="38" pos:column="13">rv<pos:position pos:line="38" pos:column="15"/></name> <operator pos:line="38" pos:column="16">==<pos:position pos:line="38" pos:column="18"/></operator> <name pos:line="38" pos:column="19">APR_SUCCESS<pos:position pos:line="38" pos:column="30"/></name></expr>)<pos:position pos:line="38" pos:column="31"/></condition><then pos:line="38" pos:column="31"> <block pos:line="38" pos:column="32">{
            <expr_stmt><expr><name pos:line="39" pos:column="13">bytes_written<pos:position pos:line="39" pos:column="26"/></name> <operator pos:line="39" pos:column="27">+=<pos:position pos:line="39" pos:column="29"/></operator> <name pos:line="39" pos:column="30">n<pos:position pos:line="39" pos:column="31"/></name></expr>;<pos:position pos:line="39" pos:column="32"/></expr_stmt>
            <expr_stmt><expr><name pos:line="40" pos:column="13">file_offset<pos:position pos:line="40" pos:column="24"/></name> <operator pos:line="40" pos:column="25">+=<pos:position pos:line="40" pos:column="27"/></operator> <name pos:line="40" pos:column="28">n<pos:position pos:line="40" pos:column="29"/></name></expr>;<pos:position pos:line="40" pos:column="30"/></expr_stmt>
        }<pos:position pos:line="41" pos:column="10"/></block></then></if>
        <expr_stmt><expr><name pos:line="42" pos:column="9">arv<pos:position pos:line="42" pos:column="12"/></name> <operator pos:line="42" pos:column="13">=<pos:position pos:line="42" pos:column="14"/></operator> <call><name pos:line="42" pos:column="15">apr_socket_timeout_set<pos:position pos:line="42" pos:column="37"/></name><argument_list pos:line="42" pos:column="37">(<argument><expr><name pos:line="42" pos:column="38">s<pos:position pos:line="42" pos:column="39"/></name></expr></argument>, <argument><expr><name pos:line="42" pos:column="41">old_timeout<pos:position pos:line="42" pos:column="52"/></name></expr></argument>)<pos:position pos:line="42" pos:column="53"/></argument_list></call></expr>;<pos:position pos:line="42" pos:column="54"/></expr_stmt>
        <if pos:line="43" pos:column="9">if <condition pos:line="43" pos:column="12">(<expr><operator pos:line="43" pos:column="13">(<pos:position pos:line="43" pos:column="14"/></operator><name pos:line="43" pos:column="14">arv<pos:position pos:line="43" pos:column="17"/></name> <operator pos:line="43" pos:column="18">!=<pos:position pos:line="43" pos:column="20"/></operator> <name pos:line="43" pos:column="21">APR_SUCCESS<pos:position pos:line="43" pos:column="32"/></name><operator pos:line="43" pos:column="32">)<pos:position pos:line="43" pos:column="33"/></operator> <operator pos:line="43" pos:column="34">&amp;&amp;<pos:position pos:line="43" pos:column="44"/></operator> <operator pos:line="43" pos:column="37">(<pos:position pos:line="43" pos:column="38"/></operator><name pos:line="43" pos:column="38">rv<pos:position pos:line="43" pos:column="40"/></name> <operator pos:line="43" pos:column="41">==<pos:position pos:line="43" pos:column="43"/></operator> <name pos:line="43" pos:column="44">APR_SUCCESS<pos:position pos:line="43" pos:column="55"/></name><operator pos:line="43" pos:column="55">)<pos:position pos:line="43" pos:column="56"/></operator></expr>)<pos:position pos:line="43" pos:column="57"/></condition><then pos:line="43" pos:column="57"> <block pos:line="43" pos:column="58">{
            <expr_stmt><expr><name pos:line="44" pos:column="13">rv<pos:position pos:line="44" pos:column="15"/></name> <operator pos:line="44" pos:column="16">=<pos:position pos:line="44" pos:column="17"/></operator> <name pos:line="44" pos:column="18">arv<pos:position pos:line="44" pos:column="21"/></name></expr>;<pos:position pos:line="44" pos:column="22"/></expr_stmt>
        }<pos:position pos:line="45" pos:column="10"/></block></then></if>
    }<pos:position pos:line="46" pos:column="6"/></block></then></if>
    <if pos:line="47" pos:column="5">if <condition pos:line="47" pos:column="8">(<expr><operator pos:line="47" pos:column="9">(<pos:position pos:line="47" pos:column="10"/></operator><name pos:line="47" pos:column="10">ap__logio_add_bytes_out<pos:position pos:line="47" pos:column="33"/></name> <operator pos:line="47" pos:column="34">!=<pos:position pos:line="47" pos:column="36"/></operator> <name pos:line="47" pos:column="37">NULL<pos:position pos:line="47" pos:column="41"/></name><operator pos:line="47" pos:column="41">)<pos:position pos:line="47" pos:column="42"/></operator> <operator pos:line="47" pos:column="43">&amp;&amp;<pos:position pos:line="47" pos:column="53"/></operator> <operator pos:line="47" pos:column="46">(<pos:position pos:line="47" pos:column="47"/></operator><name pos:line="47" pos:column="47">bytes_written<pos:position pos:line="47" pos:column="60"/></name> <operator pos:line="47" pos:column="61">&gt;<pos:position pos:line="47" pos:column="65"/></operator> <literal type="number" pos:line="47" pos:column="63">0<pos:position pos:line="47" pos:column="64"/></literal><operator pos:line="47" pos:column="64">)<pos:position pos:line="47" pos:column="65"/></operator></expr>)<pos:position pos:line="47" pos:column="66"/></condition><then pos:line="47" pos:column="66"> <block pos:line="47" pos:column="67">{
        <expr_stmt><expr><call><name pos:line="48" pos:column="9">ap__logio_add_bytes_out<pos:position pos:line="48" pos:column="32"/></name><argument_list pos:line="48" pos:column="32">(<argument><expr><name pos:line="48" pos:column="33">c<pos:position pos:line="48" pos:column="34"/></name></expr></argument>, <argument><expr><name pos:line="48" pos:column="36">bytes_written<pos:position pos:line="48" pos:column="49"/></name></expr></argument>)<pos:position pos:line="48" pos:column="50"/></argument_list></call></expr>;<pos:position pos:line="48" pos:column="51"/></expr_stmt>
    }<pos:position pos:line="49" pos:column="6"/></block></then></if>
    <expr_stmt><expr><operator pos:line="50" pos:column="5">*<pos:position pos:line="50" pos:column="6"/></operator><name pos:line="50" pos:column="6">cumulative_bytes_written<pos:position pos:line="50" pos:column="30"/></name> <operator pos:line="50" pos:column="31">+=<pos:position pos:line="50" pos:column="33"/></operator> <name pos:line="50" pos:column="34">bytes_written<pos:position pos:line="50" pos:column="47"/></name></expr>;<pos:position pos:line="50" pos:column="48"/></expr_stmt>
    <if pos:line="51" pos:column="5">if <condition pos:line="51" pos:column="8">(<expr><operator pos:line="51" pos:column="9">(<pos:position pos:line="51" pos:column="10"/></operator><name pos:line="51" pos:column="10">bytes_written<pos:position pos:line="51" pos:column="23"/></name> <operator pos:line="51" pos:column="24">&lt;<pos:position pos:line="51" pos:column="28"/></operator> <name pos:line="51" pos:column="26">file_length<pos:position pos:line="51" pos:column="37"/></name><operator pos:line="51" pos:column="37">)<pos:position pos:line="51" pos:column="38"/></operator> <operator pos:line="51" pos:column="39">&amp;&amp;<pos:position pos:line="51" pos:column="49"/></operator> <operator pos:line="51" pos:column="42">(<pos:position pos:line="51" pos:column="43"/></operator><name pos:line="51" pos:column="43">bytes_written<pos:position pos:line="51" pos:column="56"/></name> <operator pos:line="51" pos:column="57">&gt;<pos:position pos:line="51" pos:column="61"/></operator> <literal type="number" pos:line="51" pos:column="59">0<pos:position pos:line="51" pos:column="60"/></literal><operator pos:line="51" pos:column="60">)<pos:position pos:line="51" pos:column="61"/></operator></expr>)<pos:position pos:line="51" pos:column="62"/></condition><then pos:line="51" pos:column="62"> <block pos:line="51" pos:column="63">{
        <expr_stmt><expr><call><name pos:line="52" pos:column="9">apr_bucket_split<pos:position pos:line="52" pos:column="25"/></name><argument_list pos:line="52" pos:column="25">(<argument><expr><name pos:line="52" pos:column="26">bucket<pos:position pos:line="52" pos:column="32"/></name></expr></argument>, <argument><expr><name pos:line="52" pos:column="34">bytes_written<pos:position pos:line="52" pos:column="47"/></name></expr></argument>)<pos:position pos:line="52" pos:column="48"/></argument_list></call></expr>;<pos:position pos:line="52" pos:column="49"/></expr_stmt>
        <expr_stmt><expr><call><name pos:line="53" pos:column="9">APR_BUCKET_REMOVE<pos:position pos:line="53" pos:column="26"/></name><argument_list pos:line="53" pos:column="26">(<argument><expr><name pos:line="53" pos:column="27">bucket<pos:position pos:line="53" pos:column="33"/></name></expr></argument>)<pos:position pos:line="53" pos:column="34"/></argument_list></call></expr>;<pos:position pos:line="53" pos:column="35"/></expr_stmt>
        <expr_stmt><expr><call><name pos:line="54" pos:column="9">apr_bucket_destroy<pos:position pos:line="54" pos:column="27"/></name><argument_list pos:line="54" pos:column="27">(<argument><expr><name pos:line="54" pos:column="28">bucket<pos:position pos:line="54" pos:column="34"/></name></expr></argument>)<pos:position pos:line="54" pos:column="35"/></argument_list></call></expr>;<pos:position pos:line="54" pos:column="36"/></expr_stmt>
    }<pos:position pos:line="55" pos:column="6"/></block></then>
    <elseif pos:line="56" pos:column="5">else <if pos:line="56" pos:column="10">if <condition pos:line="56" pos:column="13">(<expr><name pos:line="56" pos:column="14">bytes_written<pos:position pos:line="56" pos:column="27"/></name> <operator pos:line="56" pos:column="28">==<pos:position pos:line="56" pos:column="30"/></operator> <name pos:line="56" pos:column="31">file_length<pos:position pos:line="56" pos:column="42"/></name></expr>)<pos:position pos:line="56" pos:column="43"/></condition><then pos:line="56" pos:column="43"> <block pos:line="56" pos:column="44">{
        <expr_stmt><expr><call><name pos:line="57" pos:column="9">APR_BUCKET_REMOVE<pos:position pos:line="57" pos:column="26"/></name><argument_list pos:line="57" pos:column="26">(<argument><expr><name pos:line="57" pos:column="27">bucket<pos:position pos:line="57" pos:column="33"/></name></expr></argument>)<pos:position pos:line="57" pos:column="34"/></argument_list></call></expr>;<pos:position pos:line="57" pos:column="35"/></expr_stmt>
        <expr_stmt><expr><call><name pos:line="58" pos:column="9">apr_bucket_destroy<pos:position pos:line="58" pos:column="27"/></name><argument_list pos:line="58" pos:column="27">(<argument><expr><name pos:line="58" pos:column="28">bucket<pos:position pos:line="58" pos:column="34"/></name></expr></argument>)<pos:position pos:line="58" pos:column="35"/></argument_list></call></expr>;<pos:position pos:line="58" pos:column="36"/></expr_stmt>
    }<pos:position pos:line="59" pos:column="6"/></block></then></if></elseif></if>
    <return pos:line="60" pos:column="5">return <expr><name pos:line="60" pos:column="12">rv<pos:position pos:line="60" pos:column="14"/></name></expr>;<pos:position pos:line="60" pos:column="15"/></return>
}<pos:position pos:line="61" pos:column="2"/></block></function></unit>

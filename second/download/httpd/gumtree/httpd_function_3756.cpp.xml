<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/httpd/gumtree/httpd_function_3756.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">apr_size_t<pos:position pos:line="1" pos:column="18"/></name></type> <name pos:line="1" pos:column="19">find_directive<pos:position pos:line="1" pos:column="33"/></name><parameter_list pos:line="1" pos:column="33">(<parameter><decl><type><name pos:line="1" pos:column="34">include_ctx_t<pos:position pos:line="1" pos:column="47"/></name> <modifier pos:line="1" pos:column="48">*<pos:position pos:line="1" pos:column="49"/></modifier></type><name pos:line="1" pos:column="49">ctx<pos:position pos:line="1" pos:column="52"/></name></decl></parameter>, <parameter><decl><type><specifier pos:line="1" pos:column="54">const<pos:position pos:line="1" pos:column="59"/></specifier> <name pos:line="1" pos:column="60">char<pos:position pos:line="1" pos:column="64"/></name> <modifier pos:line="1" pos:column="65">*<pos:position pos:line="1" pos:column="66"/></modifier></type><name pos:line="1" pos:column="66">data<pos:position pos:line="1" pos:column="70"/></name></decl></parameter>,
                                 <parameter><decl><type><name pos:line="2" pos:column="34">apr_size_t<pos:position pos:line="2" pos:column="44"/></name></type> <name pos:line="2" pos:column="45">len<pos:position pos:line="2" pos:column="48"/></name></decl></parameter>, <parameter><decl><type><name pos:line="2" pos:column="50">char<pos:position pos:line="2" pos:column="54"/></name> <modifier pos:line="2" pos:column="55">*<pos:position pos:line="2" pos:column="56"/></modifier><modifier pos:line="2" pos:column="56">*<pos:position pos:line="2" pos:column="57"/></modifier><modifier pos:line="2" pos:column="57">*<pos:position pos:line="2" pos:column="58"/></modifier></type><name pos:line="2" pos:column="58">store<pos:position pos:line="2" pos:column="63"/></name></decl></parameter>,
                                 <parameter><decl><type><name pos:line="3" pos:column="34">apr_size_t<pos:position pos:line="3" pos:column="44"/></name> <modifier pos:line="3" pos:column="45">*<pos:position pos:line="3" pos:column="46"/></modifier><modifier pos:line="3" pos:column="46">*<pos:position pos:line="3" pos:column="47"/></modifier></type><name pos:line="3" pos:column="47">store_len<pos:position pos:line="3" pos:column="56"/></name></decl></parameter>)<pos:position pos:line="3" pos:column="57"/></parameter_list>
<block pos:line="4" pos:column="1">{
    <decl_stmt><decl><type><name><name pos:line="5" pos:column="5">struct<pos:position pos:line="5" pos:column="11"/></name> <name pos:line="5" pos:column="12">ssi_internal_ctx<pos:position pos:line="5" pos:column="28"/></name></name> <modifier pos:line="5" pos:column="29">*<pos:position pos:line="5" pos:column="30"/></modifier></type><name pos:line="5" pos:column="30">intern<pos:position pos:line="5" pos:column="36"/></name> <init pos:line="5" pos:column="37">= <expr><name><name pos:line="5" pos:column="39">ctx<pos:position pos:line="5" pos:column="42"/></name><operator pos:line="5" pos:column="42">-&gt;<pos:position pos:line="5" pos:column="47"/></operator><name pos:line="5" pos:column="44">intern<pos:position pos:line="5" pos:column="50"/></name></name></expr></init></decl>;<pos:position pos:line="5" pos:column="51"/></decl_stmt>
    <decl_stmt><decl><type><specifier pos:line="6" pos:column="5">const<pos:position pos:line="6" pos:column="10"/></specifier> <name pos:line="6" pos:column="11">char<pos:position pos:line="6" pos:column="15"/></name> <modifier pos:line="6" pos:column="16">*<pos:position pos:line="6" pos:column="17"/></modifier></type><name pos:line="6" pos:column="17">p<pos:position pos:line="6" pos:column="18"/></name> <init pos:line="6" pos:column="19">= <expr><name pos:line="6" pos:column="21">data<pos:position pos:line="6" pos:column="25"/></name></expr></init></decl>;<pos:position pos:line="6" pos:column="26"/></decl_stmt>
    <decl_stmt><decl><type><specifier pos:line="7" pos:column="5">const<pos:position pos:line="7" pos:column="10"/></specifier> <name pos:line="7" pos:column="11">char<pos:position pos:line="7" pos:column="15"/></name> <modifier pos:line="7" pos:column="16">*<pos:position pos:line="7" pos:column="17"/></modifier></type><name pos:line="7" pos:column="17">ep<pos:position pos:line="7" pos:column="19"/></name> <init pos:line="7" pos:column="20">= <expr><name pos:line="7" pos:column="22">data<pos:position pos:line="7" pos:column="26"/></name> <operator pos:line="7" pos:column="27">+<pos:position pos:line="7" pos:column="28"/></operator> <name pos:line="7" pos:column="29">len<pos:position pos:line="7" pos:column="32"/></name></expr></init></decl>;<pos:position pos:line="7" pos:column="33"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="8" pos:column="5">apr_size_t<pos:position pos:line="8" pos:column="15"/></name></type> <name pos:line="8" pos:column="16">pos<pos:position pos:line="8" pos:column="19"/></name></decl>;<pos:position pos:line="8" pos:column="20"/></decl_stmt>

    <switch pos:line="10" pos:column="5">switch <condition pos:line="10" pos:column="12">(<expr><name><name pos:line="10" pos:column="13">intern<pos:position pos:line="10" pos:column="19"/></name><operator pos:line="10" pos:column="19">-&gt;<pos:position pos:line="10" pos:column="24"/></operator><name pos:line="10" pos:column="21">state<pos:position pos:line="10" pos:column="26"/></name></name></expr>)<pos:position pos:line="10" pos:column="27"/></condition> <block pos:line="10" pos:column="28">{
    <case pos:line="11" pos:column="5">case <expr><name pos:line="11" pos:column="10">PARSE_DIRECTIVE<pos:position pos:line="11" pos:column="25"/></name></expr>:<pos:position pos:line="11" pos:column="26"/></case>
        <while pos:line="12" pos:column="9">while <condition pos:line="12" pos:column="15">(<expr><name pos:line="12" pos:column="16">p<pos:position pos:line="12" pos:column="17"/></name> <operator pos:line="12" pos:column="18">&lt;<pos:position pos:line="12" pos:column="22"/></operator> <name pos:line="12" pos:column="20">ep<pos:position pos:line="12" pos:column="22"/></name> <operator pos:line="12" pos:column="23">&amp;&amp;<pos:position pos:line="12" pos:column="33"/></operator> <operator pos:line="12" pos:column="26">!<pos:position pos:line="12" pos:column="27"/></operator><call><name pos:line="12" pos:column="27">apr_isspace<pos:position pos:line="12" pos:column="38"/></name><argument_list pos:line="12" pos:column="38">(<argument><expr><operator pos:line="12" pos:column="39">*<pos:position pos:line="12" pos:column="40"/></operator><name pos:line="12" pos:column="40">p<pos:position pos:line="12" pos:column="41"/></name></expr></argument>)<pos:position pos:line="12" pos:column="42"/></argument_list></call></expr>)<pos:position pos:line="12" pos:column="43"/></condition> <block pos:line="12" pos:column="44">{
            <comment type="block" pos:line="13" pos:column="13">/* we have to consider the case of missing space between directive
             * and end_seq (be somewhat lenient), e.g. &lt;!--#printenv--&gt;
             */</comment>
            <if pos:line="16" pos:column="13">if <condition pos:line="16" pos:column="16">(<expr><operator pos:line="16" pos:column="17">*<pos:position pos:line="16" pos:column="18"/></operator><name pos:line="16" pos:column="18">p<pos:position pos:line="16" pos:column="19"/></name> <operator pos:line="16" pos:column="20">==<pos:position pos:line="16" pos:column="22"/></operator> <operator pos:line="16" pos:column="23">*<pos:position pos:line="16" pos:column="24"/></operator><name><name pos:line="16" pos:column="24">intern<pos:position pos:line="16" pos:column="30"/></name><operator pos:line="16" pos:column="30">-&gt;<pos:position pos:line="16" pos:column="35"/></operator><name pos:line="16" pos:column="32">end_seq<pos:position pos:line="16" pos:column="39"/></name></name></expr>)<pos:position pos:line="16" pos:column="40"/></condition><then pos:line="16" pos:column="40"> <block pos:line="16" pos:column="41">{
                <expr_stmt><expr><name><name pos:line="17" pos:column="17">intern<pos:position pos:line="17" pos:column="23"/></name><operator pos:line="17" pos:column="23">-&gt;<pos:position pos:line="17" pos:column="28"/></operator><name pos:line="17" pos:column="25">state<pos:position pos:line="17" pos:column="30"/></name></name> <operator pos:line="17" pos:column="31">=<pos:position pos:line="17" pos:column="32"/></operator> <name pos:line="17" pos:column="33">PARSE_DIRECTIVE_TAIL<pos:position pos:line="17" pos:column="53"/></name></expr>;<pos:position pos:line="17" pos:column="54"/></expr_stmt>
                <expr_stmt><expr><name><name pos:line="18" pos:column="17">intern<pos:position pos:line="18" pos:column="23"/></name><operator pos:line="18" pos:column="23">-&gt;<pos:position pos:line="18" pos:column="28"/></operator><name pos:line="18" pos:column="25">parse_pos<pos:position pos:line="18" pos:column="34"/></name></name> <operator pos:line="18" pos:column="35">=<pos:position pos:line="18" pos:column="36"/></operator> <literal type="number" pos:line="18" pos:column="37">1<pos:position pos:line="18" pos:column="38"/></literal></expr>;<pos:position pos:line="18" pos:column="39"/></expr_stmt>
                <expr_stmt><expr><operator pos:line="19" pos:column="17">++<pos:position pos:line="19" pos:column="19"/></operator><name pos:line="19" pos:column="19">p<pos:position pos:line="19" pos:column="20"/></name></expr>;<pos:position pos:line="19" pos:column="21"/></expr_stmt>
                <return pos:line="20" pos:column="17">return <expr><operator pos:line="20" pos:column="24">(<pos:position pos:line="20" pos:column="25"/></operator><name pos:line="20" pos:column="25">p<pos:position pos:line="20" pos:column="26"/></name> <operator pos:line="20" pos:column="27">-<pos:position pos:line="20" pos:column="28"/></operator> <name pos:line="20" pos:column="29">data<pos:position pos:line="20" pos:column="33"/></name><operator pos:line="20" pos:column="33">)<pos:position pos:line="20" pos:column="34"/></operator></expr>;<pos:position pos:line="20" pos:column="35"/></return>
            }<pos:position pos:line="21" pos:column="14"/></block></then></if>
            <expr_stmt><expr><operator pos:line="22" pos:column="13">++<pos:position pos:line="22" pos:column="15"/></operator><name pos:line="22" pos:column="15">p<pos:position pos:line="22" pos:column="16"/></name></expr>;<pos:position pos:line="22" pos:column="17"/></expr_stmt>
        }<pos:position pos:line="23" pos:column="10"/></block></while>

        <if pos:line="25" pos:column="9">if <condition pos:line="25" pos:column="12">(<expr><name pos:line="25" pos:column="13">p<pos:position pos:line="25" pos:column="14"/></name> <operator pos:line="25" pos:column="15">&lt;<pos:position pos:line="25" pos:column="19"/></operator> <name pos:line="25" pos:column="17">ep<pos:position pos:line="25" pos:column="19"/></name></expr>)<pos:position pos:line="25" pos:column="20"/></condition><then pos:line="25" pos:column="20"> <block pos:line="25" pos:column="21">{ <comment type="block" pos:line="25" pos:column="23">/* found delimiter whitespace */</comment>
            <expr_stmt><expr><name><name pos:line="26" pos:column="13">intern<pos:position pos:line="26" pos:column="19"/></name><operator pos:line="26" pos:column="19">-&gt;<pos:position pos:line="26" pos:column="24"/></operator><name pos:line="26" pos:column="21">state<pos:position pos:line="26" pos:column="26"/></name></name> <operator pos:line="26" pos:column="27">=<pos:position pos:line="26" pos:column="28"/></operator> <name pos:line="26" pos:column="29">PARSE_DIRECTIVE_POSTNAME<pos:position pos:line="26" pos:column="53"/></name></expr>;<pos:position pos:line="26" pos:column="54"/></expr_stmt>
            <expr_stmt><expr><operator pos:line="27" pos:column="13">*<pos:position pos:line="27" pos:column="14"/></operator><name pos:line="27" pos:column="14">store<pos:position pos:line="27" pos:column="19"/></name> <operator pos:line="27" pos:column="20">=<pos:position pos:line="27" pos:column="21"/></operator> <operator pos:line="27" pos:column="22">&amp;<pos:position pos:line="27" pos:column="27"/></operator><name><name pos:line="27" pos:column="23">intern<pos:position pos:line="27" pos:column="29"/></name><operator pos:line="27" pos:column="29">-&gt;<pos:position pos:line="27" pos:column="34"/></operator><name pos:line="27" pos:column="31">directive<pos:position pos:line="27" pos:column="40"/></name></name></expr>;<pos:position pos:line="27" pos:column="41"/></expr_stmt>
            <expr_stmt><expr><operator pos:line="28" pos:column="13">*<pos:position pos:line="28" pos:column="14"/></operator><name pos:line="28" pos:column="14">store_len<pos:position pos:line="28" pos:column="23"/></name> <operator pos:line="28" pos:column="24">=<pos:position pos:line="28" pos:column="25"/></operator> <operator pos:line="28" pos:column="26">&amp;<pos:position pos:line="28" pos:column="31"/></operator><name><name pos:line="28" pos:column="27">intern<pos:position pos:line="28" pos:column="33"/></name><operator pos:line="28" pos:column="33">-&gt;<pos:position pos:line="28" pos:column="38"/></operator><name pos:line="28" pos:column="35">directive_len<pos:position pos:line="28" pos:column="48"/></name></name></expr>;<pos:position pos:line="28" pos:column="49"/></expr_stmt>
        }<pos:position pos:line="29" pos:column="10"/></block></then></if>

        <break pos:line="31" pos:column="9">break;<pos:position pos:line="31" pos:column="15"/></break>

    <case pos:line="33" pos:column="5">case <expr><name pos:line="33" pos:column="10">PARSE_DIRECTIVE_TAIL<pos:position pos:line="33" pos:column="30"/></name></expr>:<pos:position pos:line="33" pos:column="31"/></case>
        <expr_stmt><expr><name pos:line="34" pos:column="9">pos<pos:position pos:line="34" pos:column="12"/></name> <operator pos:line="34" pos:column="13">=<pos:position pos:line="34" pos:column="14"/></operator> <name><name pos:line="34" pos:column="15">intern<pos:position pos:line="34" pos:column="21"/></name><operator pos:line="34" pos:column="21">-&gt;<pos:position pos:line="34" pos:column="26"/></operator><name pos:line="34" pos:column="23">parse_pos<pos:position pos:line="34" pos:column="32"/></name></name></expr>;<pos:position pos:line="34" pos:column="33"/></expr_stmt>

        <while pos:line="36" pos:column="9">while <condition pos:line="36" pos:column="15">(<expr><name pos:line="36" pos:column="16">p<pos:position pos:line="36" pos:column="17"/></name> <operator pos:line="36" pos:column="18">&lt;<pos:position pos:line="36" pos:column="22"/></operator> <name pos:line="36" pos:column="20">ep<pos:position pos:line="36" pos:column="22"/></name> <operator pos:line="36" pos:column="23">&amp;&amp;<pos:position pos:line="36" pos:column="33"/></operator> <name pos:line="36" pos:column="26">pos<pos:position pos:line="36" pos:column="29"/></name> <operator pos:line="36" pos:column="30">&lt;<pos:position pos:line="36" pos:column="34"/></operator> <name><name pos:line="36" pos:column="32">intern<pos:position pos:line="36" pos:column="38"/></name><operator pos:line="36" pos:column="38">-&gt;<pos:position pos:line="36" pos:column="43"/></operator><name pos:line="36" pos:column="40">end_seq_len<pos:position pos:line="36" pos:column="51"/></name></name> <operator pos:line="36" pos:column="52">&amp;&amp;<pos:position pos:line="36" pos:column="62"/></operator>
               <operator pos:line="37" pos:column="16">*<pos:position pos:line="37" pos:column="17"/></operator><name pos:line="37" pos:column="17">p<pos:position pos:line="37" pos:column="18"/></name> <operator pos:line="37" pos:column="19">==<pos:position pos:line="37" pos:column="21"/></operator> <name><name pos:line="37" pos:column="22">intern<pos:position pos:line="37" pos:column="28"/></name><operator pos:line="37" pos:column="28">-&gt;<pos:position pos:line="37" pos:column="33"/></operator><name pos:line="37" pos:column="30">end_seq<pos:position pos:line="37" pos:column="37"/></name><index pos:line="37" pos:column="37">[<expr><name pos:line="37" pos:column="38">pos<pos:position pos:line="37" pos:column="41"/></name></expr>]<pos:position pos:line="37" pos:column="42"/></index></name></expr>)<pos:position pos:line="37" pos:column="43"/></condition> <block pos:line="37" pos:column="44">{
            <expr_stmt><expr><operator pos:line="38" pos:column="13">++<pos:position pos:line="38" pos:column="15"/></operator><name pos:line="38" pos:column="15">p<pos:position pos:line="38" pos:column="16"/></name></expr>;<pos:position pos:line="38" pos:column="17"/></expr_stmt>
            <expr_stmt><expr><operator pos:line="39" pos:column="13">++<pos:position pos:line="39" pos:column="15"/></operator><name pos:line="39" pos:column="15">pos<pos:position pos:line="39" pos:column="18"/></name></expr>;<pos:position pos:line="39" pos:column="19"/></expr_stmt>
        }<pos:position pos:line="40" pos:column="10"/></block></while>

        <comment type="block" pos:line="42" pos:column="9">/* full match, we're done */</comment>
        <if pos:line="43" pos:column="9">if <condition pos:line="43" pos:column="12">(<expr><name pos:line="43" pos:column="13">pos<pos:position pos:line="43" pos:column="16"/></name> <operator pos:line="43" pos:column="17">==<pos:position pos:line="43" pos:column="19"/></operator> <name><name pos:line="43" pos:column="20">intern<pos:position pos:line="43" pos:column="26"/></name><operator pos:line="43" pos:column="26">-&gt;<pos:position pos:line="43" pos:column="31"/></operator><name pos:line="43" pos:column="28">end_seq_len<pos:position pos:line="43" pos:column="39"/></name></name></expr>)<pos:position pos:line="43" pos:column="40"/></condition><then pos:line="43" pos:column="40"> <block pos:line="43" pos:column="41">{
            <expr_stmt><expr><name><name pos:line="44" pos:column="13">intern<pos:position pos:line="44" pos:column="19"/></name><operator pos:line="44" pos:column="19">-&gt;<pos:position pos:line="44" pos:column="24"/></operator><name pos:line="44" pos:column="21">state<pos:position pos:line="44" pos:column="26"/></name></name> <operator pos:line="44" pos:column="27">=<pos:position pos:line="44" pos:column="28"/></operator> <name pos:line="44" pos:column="29">PARSE_DIRECTIVE_POSTTAIL<pos:position pos:line="44" pos:column="53"/></name></expr>;<pos:position pos:line="44" pos:column="54"/></expr_stmt>
            <expr_stmt><expr><operator pos:line="45" pos:column="13">*<pos:position pos:line="45" pos:column="14"/></operator><name pos:line="45" pos:column="14">store<pos:position pos:line="45" pos:column="19"/></name> <operator pos:line="45" pos:column="20">=<pos:position pos:line="45" pos:column="21"/></operator> <operator pos:line="45" pos:column="22">&amp;<pos:position pos:line="45" pos:column="27"/></operator><name><name pos:line="45" pos:column="23">intern<pos:position pos:line="45" pos:column="29"/></name><operator pos:line="45" pos:column="29">-&gt;<pos:position pos:line="45" pos:column="34"/></operator><name pos:line="45" pos:column="31">directive<pos:position pos:line="45" pos:column="40"/></name></name></expr>;<pos:position pos:line="45" pos:column="41"/></expr_stmt>
            <expr_stmt><expr><operator pos:line="46" pos:column="13">*<pos:position pos:line="46" pos:column="14"/></operator><name pos:line="46" pos:column="14">store_len<pos:position pos:line="46" pos:column="23"/></name> <operator pos:line="46" pos:column="24">=<pos:position pos:line="46" pos:column="25"/></operator> <operator pos:line="46" pos:column="26">&amp;<pos:position pos:line="46" pos:column="31"/></operator><name><name pos:line="46" pos:column="27">intern<pos:position pos:line="46" pos:column="33"/></name><operator pos:line="46" pos:column="33">-&gt;<pos:position pos:line="46" pos:column="38"/></operator><name pos:line="46" pos:column="35">directive_len<pos:position pos:line="46" pos:column="48"/></name></name></expr>;<pos:position pos:line="46" pos:column="49"/></expr_stmt>
            <break pos:line="47" pos:column="13">break;<pos:position pos:line="47" pos:column="19"/></break>
        }<pos:position pos:line="48" pos:column="10"/></block></then></if>

        <comment type="block" pos:line="50" pos:column="9">/* partial match, the buffer is too small to match fully */</comment>
        <if pos:line="51" pos:column="9">if <condition pos:line="51" pos:column="12">(<expr><name pos:line="51" pos:column="13">p<pos:position pos:line="51" pos:column="14"/></name> <operator pos:line="51" pos:column="15">==<pos:position pos:line="51" pos:column="17"/></operator> <name pos:line="51" pos:column="18">ep<pos:position pos:line="51" pos:column="20"/></name></expr>)<pos:position pos:line="51" pos:column="21"/></condition><then pos:line="51" pos:column="21"> <block pos:line="51" pos:column="22">{
            <expr_stmt><expr><name><name pos:line="52" pos:column="13">intern<pos:position pos:line="52" pos:column="19"/></name><operator pos:line="52" pos:column="19">-&gt;<pos:position pos:line="52" pos:column="24"/></operator><name pos:line="52" pos:column="21">parse_pos<pos:position pos:line="52" pos:column="30"/></name></name> <operator pos:line="52" pos:column="31">=<pos:position pos:line="52" pos:column="32"/></operator> <name pos:line="52" pos:column="33">pos<pos:position pos:line="52" pos:column="36"/></name></expr>;<pos:position pos:line="52" pos:column="37"/></expr_stmt>
            <break pos:line="53" pos:column="13">break;<pos:position pos:line="53" pos:column="19"/></break>
        }<pos:position pos:line="54" pos:column="10"/></block></then></if>

        <comment type="block" pos:line="56" pos:column="9">/* no match. continue normal parsing */</comment>
        <expr_stmt><expr><name><name pos:line="57" pos:column="9">intern<pos:position pos:line="57" pos:column="15"/></name><operator pos:line="57" pos:column="15">-&gt;<pos:position pos:line="57" pos:column="20"/></operator><name pos:line="57" pos:column="17">state<pos:position pos:line="57" pos:column="22"/></name></name> <operator pos:line="57" pos:column="23">=<pos:position pos:line="57" pos:column="24"/></operator> <name pos:line="57" pos:column="25">PARSE_DIRECTIVE<pos:position pos:line="57" pos:column="40"/></name></expr>;<pos:position pos:line="57" pos:column="41"/></expr_stmt>
        <return pos:line="58" pos:column="9">return <expr><literal type="number" pos:line="58" pos:column="16">0<pos:position pos:line="58" pos:column="17"/></literal></expr>;<pos:position pos:line="58" pos:column="18"/></return>

    <case pos:line="60" pos:column="5">case <expr><name pos:line="60" pos:column="10">PARSE_DIRECTIVE_POSTTAIL<pos:position pos:line="60" pos:column="34"/></name></expr>:<pos:position pos:line="60" pos:column="35"/></case>
        <expr_stmt><expr><name><name pos:line="61" pos:column="9">intern<pos:position pos:line="61" pos:column="15"/></name><operator pos:line="61" pos:column="15">-&gt;<pos:position pos:line="61" pos:column="20"/></operator><name pos:line="61" pos:column="17">state<pos:position pos:line="61" pos:column="22"/></name></name> <operator pos:line="61" pos:column="23">=<pos:position pos:line="61" pos:column="24"/></operator> <name pos:line="61" pos:column="25">PARSE_EXECUTE<pos:position pos:line="61" pos:column="38"/></name></expr>;<pos:position pos:line="61" pos:column="39"/></expr_stmt>
        <expr_stmt><expr><name><name pos:line="62" pos:column="9">intern<pos:position pos:line="62" pos:column="15"/></name><operator pos:line="62" pos:column="15">-&gt;<pos:position pos:line="62" pos:column="20"/></operator><name pos:line="62" pos:column="17">directive_len<pos:position pos:line="62" pos:column="30"/></name></name> <operator pos:line="62" pos:column="31">-=<pos:position pos:line="62" pos:column="33"/></operator> <name><name pos:line="62" pos:column="34">intern<pos:position pos:line="62" pos:column="40"/></name><operator pos:line="62" pos:column="40">-&gt;<pos:position pos:line="62" pos:column="45"/></operator><name pos:line="62" pos:column="42">end_seq_len<pos:position pos:line="62" pos:column="53"/></name></name></expr>;<pos:position pos:line="62" pos:column="54"/></expr_stmt>
        <comment type="block" pos:line="63" pos:column="9">/* continue immediately with the next state */</comment>

    <case pos:line="65" pos:column="5">case <expr><name pos:line="65" pos:column="10">PARSE_DIRECTIVE_POSTNAME<pos:position pos:line="65" pos:column="34"/></name></expr>:<pos:position pos:line="65" pos:column="35"/></case>
        <if pos:line="66" pos:column="9">if <condition pos:line="66" pos:column="12">(<expr><name pos:line="66" pos:column="13">PARSE_DIRECTIVE_POSTNAME<pos:position pos:line="66" pos:column="37"/></name> <operator pos:line="66" pos:column="38">==<pos:position pos:line="66" pos:column="40"/></operator> <name><name pos:line="66" pos:column="41">intern<pos:position pos:line="66" pos:column="47"/></name><operator pos:line="66" pos:column="47">-&gt;<pos:position pos:line="66" pos:column="52"/></operator><name pos:line="66" pos:column="49">state<pos:position pos:line="66" pos:column="54"/></name></name></expr>)<pos:position pos:line="66" pos:column="55"/></condition><then pos:line="66" pos:column="55"> <block pos:line="66" pos:column="56">{
            <expr_stmt><expr><name><name pos:line="67" pos:column="13">intern<pos:position pos:line="67" pos:column="19"/></name><operator pos:line="67" pos:column="19">-&gt;<pos:position pos:line="67" pos:column="24"/></operator><name pos:line="67" pos:column="21">state<pos:position pos:line="67" pos:column="26"/></name></name> <operator pos:line="67" pos:column="27">=<pos:position pos:line="67" pos:column="28"/></operator> <name pos:line="67" pos:column="29">PARSE_PRE_ARG<pos:position pos:line="67" pos:column="42"/></name></expr>;<pos:position pos:line="67" pos:column="43"/></expr_stmt>
        }<pos:position pos:line="68" pos:column="10"/></block></then></if>
        <expr_stmt><expr><name><name pos:line="69" pos:column="9">ctx<pos:position pos:line="69" pos:column="12"/></name><operator pos:line="69" pos:column="12">-&gt;<pos:position pos:line="69" pos:column="17"/></operator><name pos:line="69" pos:column="14">argc<pos:position pos:line="69" pos:column="18"/></name></name> <operator pos:line="69" pos:column="19">=<pos:position pos:line="69" pos:column="20"/></operator> <literal type="number" pos:line="69" pos:column="21">0<pos:position pos:line="69" pos:column="22"/></literal></expr>;<pos:position pos:line="69" pos:column="23"/></expr_stmt>
        <expr_stmt><expr><name><name pos:line="70" pos:column="9">intern<pos:position pos:line="70" pos:column="15"/></name><operator pos:line="70" pos:column="15">-&gt;<pos:position pos:line="70" pos:column="20"/></operator><name pos:line="70" pos:column="17">argv<pos:position pos:line="70" pos:column="21"/></name></name> <operator pos:line="70" pos:column="22">=<pos:position pos:line="70" pos:column="23"/></operator> <name pos:line="70" pos:column="24">NULL<pos:position pos:line="70" pos:column="28"/></name></expr>;<pos:position pos:line="70" pos:column="29"/></expr_stmt>

        <if pos:line="72" pos:column="9">if <condition pos:line="72" pos:column="12">(<expr><operator pos:line="72" pos:column="13">!<pos:position pos:line="72" pos:column="14"/></operator><name><name pos:line="72" pos:column="14">intern<pos:position pos:line="72" pos:column="20"/></name><operator pos:line="72" pos:column="20">-&gt;<pos:position pos:line="72" pos:column="25"/></operator><name pos:line="72" pos:column="22">directive_len<pos:position pos:line="72" pos:column="35"/></name></name></expr>)<pos:position pos:line="72" pos:column="36"/></condition><then pos:line="72" pos:column="36"> <block pos:line="72" pos:column="37">{
            <expr_stmt><expr><name><name pos:line="73" pos:column="13">intern<pos:position pos:line="73" pos:column="19"/></name><operator pos:line="73" pos:column="19">-&gt;<pos:position pos:line="73" pos:column="24"/></operator><name pos:line="73" pos:column="21">error<pos:position pos:line="73" pos:column="26"/></name></name> <operator pos:line="73" pos:column="27">=<pos:position pos:line="73" pos:column="28"/></operator> <literal type="number" pos:line="73" pos:column="29">1<pos:position pos:line="73" pos:column="30"/></literal></expr>;<pos:position pos:line="73" pos:column="31"/></expr_stmt>
            <expr_stmt><expr><call><name pos:line="74" pos:column="13">ap_log_rerror<pos:position pos:line="74" pos:column="26"/></name><argument_list pos:line="74" pos:column="26">(<argument><expr><name pos:line="74" pos:column="27">APLOG_MARK<pos:position pos:line="74" pos:column="37"/></name></expr></argument>, <argument><expr><name pos:line="74" pos:column="39">APLOG_ERR<pos:position pos:line="74" pos:column="48"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="74" pos:column="50">0<pos:position pos:line="74" pos:column="51"/></literal></expr></argument>, <argument><expr><name><name pos:line="74" pos:column="53">intern<pos:position pos:line="74" pos:column="59"/></name><operator pos:line="74" pos:column="59">-&gt;<pos:position pos:line="74" pos:column="64"/></operator><name pos:line="74" pos:column="61">r<pos:position pos:line="74" pos:column="62"/></name></name></expr></argument>, <argument><expr><literal type="string" pos:line="74" pos:column="64">"missing "<pos:position pos:line="74" pos:column="74"/></literal>
                          <literal type="string" pos:line="75" pos:column="27">"directive name in parsed document %s"<pos:position pos:line="75" pos:column="65"/></literal></expr></argument>,
                          <argument><expr><name><name pos:line="76" pos:column="27">intern<pos:position pos:line="76" pos:column="33"/></name><operator pos:line="76" pos:column="33">-&gt;<pos:position pos:line="76" pos:column="38"/></operator><name pos:line="76" pos:column="35">r<pos:position pos:line="76" pos:column="36"/></name><operator pos:line="76" pos:column="36">-&gt;<pos:position pos:line="76" pos:column="41"/></operator><name pos:line="76" pos:column="38">filename<pos:position pos:line="76" pos:column="46"/></name></name></expr></argument>)<pos:position pos:line="76" pos:column="47"/></argument_list></call></expr>;<pos:position pos:line="76" pos:column="48"/></expr_stmt>
        }<pos:position pos:line="77" pos:column="10"/></block></then>
        <else pos:line="78" pos:column="9">else <block pos:line="78" pos:column="14">{
            <decl_stmt><decl><type><name pos:line="79" pos:column="13">char<pos:position pos:line="79" pos:column="17"/></name> <modifier pos:line="79" pos:column="18">*<pos:position pos:line="79" pos:column="19"/></modifier></type><name pos:line="79" pos:column="19">sp<pos:position pos:line="79" pos:column="21"/></name> <init pos:line="79" pos:column="22">= <expr><name><name pos:line="79" pos:column="24">intern<pos:position pos:line="79" pos:column="30"/></name><operator pos:line="79" pos:column="30">-&gt;<pos:position pos:line="79" pos:column="35"/></operator><name pos:line="79" pos:column="32">directive<pos:position pos:line="79" pos:column="41"/></name></name></expr></init></decl>;<pos:position pos:line="79" pos:column="42"/></decl_stmt>
            <decl_stmt><decl><type><name pos:line="80" pos:column="13">char<pos:position pos:line="80" pos:column="17"/></name> <modifier pos:line="80" pos:column="18">*<pos:position pos:line="80" pos:column="19"/></modifier></type><name pos:line="80" pos:column="19">sep<pos:position pos:line="80" pos:column="22"/></name> <init pos:line="80" pos:column="23">= <expr><name><name pos:line="80" pos:column="25">intern<pos:position pos:line="80" pos:column="31"/></name><operator pos:line="80" pos:column="31">-&gt;<pos:position pos:line="80" pos:column="36"/></operator><name pos:line="80" pos:column="33">directive<pos:position pos:line="80" pos:column="42"/></name></name> <operator pos:line="80" pos:column="43">+<pos:position pos:line="80" pos:column="44"/></operator> <name><name pos:line="80" pos:column="45">intern<pos:position pos:line="80" pos:column="51"/></name><operator pos:line="80" pos:column="51">-&gt;<pos:position pos:line="80" pos:column="56"/></operator><name pos:line="80" pos:column="53">directive_len<pos:position pos:line="80" pos:column="66"/></name></name></expr></init></decl>;<pos:position pos:line="80" pos:column="67"/></decl_stmt>

            <comment type="block" pos:line="82" pos:column="13">/* normalize directive name */</comment>
            <for pos:line="83" pos:column="13">for <control pos:line="83" pos:column="17">(<init pos:line="83" pos:column="18">;<pos:position pos:line="83" pos:column="19"/></init> <condition><expr><name pos:line="83" pos:column="20">sp<pos:position pos:line="83" pos:column="22"/></name> <operator pos:line="83" pos:column="23">&lt;<pos:position pos:line="83" pos:column="27"/></operator> <name pos:line="83" pos:column="25">sep<pos:position pos:line="83" pos:column="28"/></name></expr>;<pos:position pos:line="83" pos:column="29"/></condition> <incr><expr><operator pos:line="83" pos:column="30">++<pos:position pos:line="83" pos:column="32"/></operator><name pos:line="83" pos:column="32">sp<pos:position pos:line="83" pos:column="34"/></name></expr></incr>)<pos:position pos:line="83" pos:column="35"/></control> <block pos:line="83" pos:column="36">{
                <expr_stmt><expr><operator pos:line="84" pos:column="17">*<pos:position pos:line="84" pos:column="18"/></operator><name pos:line="84" pos:column="18">sp<pos:position pos:line="84" pos:column="20"/></name> <operator pos:line="84" pos:column="21">=<pos:position pos:line="84" pos:column="22"/></operator> <call><name pos:line="84" pos:column="23">apr_tolower<pos:position pos:line="84" pos:column="34"/></name><argument_list pos:line="84" pos:column="34">(<argument><expr><operator pos:line="84" pos:column="35">*<pos:position pos:line="84" pos:column="36"/></operator><name pos:line="84" pos:column="36">sp<pos:position pos:line="84" pos:column="38"/></name></expr></argument>)<pos:position pos:line="84" pos:column="39"/></argument_list></call></expr>;<pos:position pos:line="84" pos:column="40"/></expr_stmt>
            }<pos:position pos:line="85" pos:column="14"/></block></for>
        }<pos:position pos:line="86" pos:column="10"/></block></else></if>

        <return pos:line="88" pos:column="9">return <expr><literal type="number" pos:line="88" pos:column="16">0<pos:position pos:line="88" pos:column="17"/></literal></expr>;<pos:position pos:line="88" pos:column="18"/></return>

    <default pos:line="90" pos:column="5">default:<pos:position pos:line="90" pos:column="13"/></default>
        <comment type="block" pos:line="91" pos:column="9">/* get a rid of a gcc warning about unhandled enumerations */</comment>
        <break pos:line="92" pos:column="9">break;<pos:position pos:line="92" pos:column="15"/></break>
    }<pos:position pos:line="93" pos:column="6"/></block></switch>

    <return pos:line="95" pos:column="5">return <expr><operator pos:line="95" pos:column="12">(<pos:position pos:line="95" pos:column="13"/></operator><name pos:line="95" pos:column="13">p<pos:position pos:line="95" pos:column="14"/></name> <operator pos:line="95" pos:column="15">-<pos:position pos:line="95" pos:column="16"/></operator> <name pos:line="95" pos:column="17">data<pos:position pos:line="95" pos:column="21"/></name><operator pos:line="95" pos:column="21">)<pos:position pos:line="95" pos:column="22"/></operator></expr>;<pos:position pos:line="95" pos:column="23"/></return>
}<pos:position pos:line="96" pos:column="2"/></block></function></unit>

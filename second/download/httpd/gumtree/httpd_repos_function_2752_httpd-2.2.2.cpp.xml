<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/httpd/gumtree/httpd_repos_function_2752_httpd-2.2.2.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name><name pos:line="1" pos:column="8">enum<pos:position pos:line="1" pos:column="12"/></name> <name pos:line="1" pos:column="13">XML_Error<pos:position pos:line="1" pos:column="22"/></name></name></type>
<name pos:line="2" pos:column="1">handleUnknownEncoding<pos:position pos:line="2" pos:column="22"/></name><parameter_list pos:line="2" pos:column="22">(<parameter><decl><type><name pos:line="2" pos:column="23">XML_Parser<pos:position pos:line="2" pos:column="33"/></name></type> <name pos:line="2" pos:column="34">parser<pos:position pos:line="2" pos:column="40"/></name></decl></parameter>, <parameter><decl><type><specifier pos:line="2" pos:column="42">const<pos:position pos:line="2" pos:column="47"/></specifier> <name pos:line="2" pos:column="48">XML_Char<pos:position pos:line="2" pos:column="56"/></name> <modifier pos:line="2" pos:column="57">*<pos:position pos:line="2" pos:column="58"/></modifier></type><name pos:line="2" pos:column="58">encodingName<pos:position pos:line="2" pos:column="70"/></name></decl></parameter>)<pos:position pos:line="2" pos:column="71"/></parameter_list>
<block pos:line="3" pos:column="1">{
  <if pos:line="4" pos:column="3">if <condition pos:line="4" pos:column="6">(<expr><name pos:line="4" pos:column="7">unknownEncodingHandler<pos:position pos:line="4" pos:column="29"/></name></expr>)<pos:position pos:line="4" pos:column="30"/></condition><then pos:line="4" pos:column="30"> <block pos:line="4" pos:column="31">{
    <decl_stmt><decl><type><name pos:line="5" pos:column="5">XML_Encoding<pos:position pos:line="5" pos:column="17"/></name></type> <name pos:line="5" pos:column="18">info<pos:position pos:line="5" pos:column="22"/></name></decl>;<pos:position pos:line="5" pos:column="23"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="6" pos:column="5">int<pos:position pos:line="6" pos:column="8"/></name></type> <name pos:line="6" pos:column="9">i<pos:position pos:line="6" pos:column="10"/></name></decl>;<pos:position pos:line="6" pos:column="11"/></decl_stmt>
    <for pos:line="7" pos:column="5">for <control pos:line="7" pos:column="9">(<init><expr><name pos:line="7" pos:column="10">i<pos:position pos:line="7" pos:column="11"/></name> <operator pos:line="7" pos:column="12">=<pos:position pos:line="7" pos:column="13"/></operator> <literal type="number" pos:line="7" pos:column="14">0<pos:position pos:line="7" pos:column="15"/></literal></expr>;<pos:position pos:line="7" pos:column="16"/></init> <condition><expr><name pos:line="7" pos:column="17">i<pos:position pos:line="7" pos:column="18"/></name> <operator pos:line="7" pos:column="19">&lt;<pos:position pos:line="7" pos:column="23"/></operator> <literal type="number" pos:line="7" pos:column="21">256<pos:position pos:line="7" pos:column="24"/></literal></expr>;<pos:position pos:line="7" pos:column="25"/></condition> <incr><expr><name pos:line="7" pos:column="26">i<pos:position pos:line="7" pos:column="27"/></name><operator pos:line="7" pos:column="27">++<pos:position pos:line="7" pos:column="29"/></operator></expr></incr>)<pos:position pos:line="7" pos:column="30"/></control>
      <block type="pseudo"><expr_stmt><expr><name><name pos:line="8" pos:column="7">info<pos:position pos:line="8" pos:column="11"/></name><operator pos:line="8" pos:column="11">.<pos:position pos:line="8" pos:column="12"/></operator><name pos:line="8" pos:column="12">map<pos:position pos:line="8" pos:column="15"/></name><index pos:line="8" pos:column="15">[<expr><name pos:line="8" pos:column="16">i<pos:position pos:line="8" pos:column="17"/></name></expr>]<pos:position pos:line="8" pos:column="18"/></index></name> <operator pos:line="8" pos:column="19">=<pos:position pos:line="8" pos:column="20"/></operator> <operator pos:line="8" pos:column="21">-<pos:position pos:line="8" pos:column="22"/></operator><literal type="number" pos:line="8" pos:column="22">1<pos:position pos:line="8" pos:column="23"/></literal></expr>;<pos:position pos:line="8" pos:column="24"/></expr_stmt></block></for>
    <expr_stmt><expr><name><name pos:line="9" pos:column="5">info<pos:position pos:line="9" pos:column="9"/></name><operator pos:line="9" pos:column="9">.<pos:position pos:line="9" pos:column="10"/></operator><name pos:line="9" pos:column="10">convert<pos:position pos:line="9" pos:column="17"/></name></name> <operator pos:line="9" pos:column="18">=<pos:position pos:line="9" pos:column="19"/></operator> <literal type="number" pos:line="9" pos:column="20">0<pos:position pos:line="9" pos:column="21"/></literal></expr>;<pos:position pos:line="9" pos:column="22"/></expr_stmt>
    <expr_stmt><expr><name><name pos:line="10" pos:column="5">info<pos:position pos:line="10" pos:column="9"/></name><operator pos:line="10" pos:column="9">.<pos:position pos:line="10" pos:column="10"/></operator><name pos:line="10" pos:column="10">data<pos:position pos:line="10" pos:column="14"/></name></name> <operator pos:line="10" pos:column="15">=<pos:position pos:line="10" pos:column="16"/></operator> <literal type="number" pos:line="10" pos:column="17">0<pos:position pos:line="10" pos:column="18"/></literal></expr>;<pos:position pos:line="10" pos:column="19"/></expr_stmt>
    <expr_stmt><expr><name><name pos:line="11" pos:column="5">info<pos:position pos:line="11" pos:column="9"/></name><operator pos:line="11" pos:column="9">.<pos:position pos:line="11" pos:column="10"/></operator><name pos:line="11" pos:column="10">release<pos:position pos:line="11" pos:column="17"/></name></name> <operator pos:line="11" pos:column="18">=<pos:position pos:line="11" pos:column="19"/></operator> <literal type="number" pos:line="11" pos:column="20">0<pos:position pos:line="11" pos:column="21"/></literal></expr>;<pos:position pos:line="11" pos:column="22"/></expr_stmt>
    <if pos:line="12" pos:column="5">if <condition pos:line="12" pos:column="8">(<expr><call><name pos:line="12" pos:column="9">unknownEncodingHandler<pos:position pos:line="12" pos:column="31"/></name><argument_list pos:line="12" pos:column="31">(<argument><expr><name pos:line="12" pos:column="32">unknownEncodingHandlerData<pos:position pos:line="12" pos:column="58"/></name></expr></argument>, <argument><expr><name pos:line="12" pos:column="60">encodingName<pos:position pos:line="12" pos:column="72"/></name></expr></argument>, <argument><expr><operator pos:line="12" pos:column="74">&amp;<pos:position pos:line="12" pos:column="79"/></operator><name pos:line="12" pos:column="75">info<pos:position pos:line="12" pos:column="79"/></name></expr></argument>)<pos:position pos:line="12" pos:column="80"/></argument_list></call></expr>)<pos:position pos:line="12" pos:column="81"/></condition><then pos:line="12" pos:column="81"> <block pos:line="12" pos:column="82">{
      <decl_stmt><decl><type><name pos:line="13" pos:column="7">ENCODING<pos:position pos:line="13" pos:column="15"/></name> <modifier pos:line="13" pos:column="16">*<pos:position pos:line="13" pos:column="17"/></modifier></type><name pos:line="13" pos:column="17">enc<pos:position pos:line="13" pos:column="20"/></name></decl>;<pos:position pos:line="13" pos:column="21"/></decl_stmt>
      <expr_stmt><expr><name pos:line="14" pos:column="7">unknownEncodingMem<pos:position pos:line="14" pos:column="25"/></name> <operator pos:line="14" pos:column="26">=<pos:position pos:line="14" pos:column="27"/></operator> <call><name pos:line="14" pos:column="28">MALLOC<pos:position pos:line="14" pos:column="34"/></name><argument_list pos:line="14" pos:column="34">(<argument><expr><call><name pos:line="14" pos:column="35">XmlSizeOfUnknownEncoding<pos:position pos:line="14" pos:column="59"/></name><argument_list pos:line="14" pos:column="59">()<pos:position pos:line="14" pos:column="61"/></argument_list></call></expr></argument>)<pos:position pos:line="14" pos:column="62"/></argument_list></call></expr>;<pos:position pos:line="14" pos:column="63"/></expr_stmt>
      <if pos:line="15" pos:column="7">if <condition pos:line="15" pos:column="10">(<expr><operator pos:line="15" pos:column="11">!<pos:position pos:line="15" pos:column="12"/></operator><name pos:line="15" pos:column="12">unknownEncodingMem<pos:position pos:line="15" pos:column="30"/></name></expr>)<pos:position pos:line="15" pos:column="31"/></condition><then pos:line="15" pos:column="31"> <block pos:line="15" pos:column="32">{
	<if pos:line="16" pos:column="9">if <condition pos:line="16" pos:column="12">(<expr><name><name pos:line="16" pos:column="13">info<pos:position pos:line="16" pos:column="17"/></name><operator pos:line="16" pos:column="17">.<pos:position pos:line="16" pos:column="18"/></operator><name pos:line="16" pos:column="18">release<pos:position pos:line="16" pos:column="25"/></name></name></expr>)<pos:position pos:line="16" pos:column="26"/></condition><then pos:line="16" pos:column="26">
	  <block type="pseudo"><expr_stmt><expr><call><name><name pos:line="17" pos:column="11">info<pos:position pos:line="17" pos:column="15"/></name><operator pos:line="17" pos:column="15">.<pos:position pos:line="17" pos:column="16"/></operator><name pos:line="17" pos:column="16">release<pos:position pos:line="17" pos:column="23"/></name></name><argument_list pos:line="17" pos:column="23">(<argument><expr><name><name pos:line="17" pos:column="24">info<pos:position pos:line="17" pos:column="28"/></name><operator pos:line="17" pos:column="28">.<pos:position pos:line="17" pos:column="29"/></operator><name pos:line="17" pos:column="29">data<pos:position pos:line="17" pos:column="33"/></name></name></expr></argument>)<pos:position pos:line="17" pos:column="34"/></argument_list></call></expr>;<pos:position pos:line="17" pos:column="35"/></expr_stmt></block></then></if>
	<return pos:line="18" pos:column="9">return <expr><name pos:line="18" pos:column="16">XML_ERROR_NO_MEMORY<pos:position pos:line="18" pos:column="35"/></name></expr>;<pos:position pos:line="18" pos:column="36"/></return>
      }<pos:position pos:line="19" pos:column="8"/></block></then></if>
      <expr_stmt><expr><name pos:line="20" pos:column="7">enc<pos:position pos:line="20" pos:column="10"/></name> <operator pos:line="20" pos:column="11">=<pos:position pos:line="20" pos:column="12"/></operator> <operator pos:line="20" pos:column="13">(<pos:position pos:line="20" pos:column="14"/></operator><ternary><condition><expr><name pos:line="20" pos:column="14">ns<pos:position pos:line="20" pos:column="16"/></name></expr>
	     ?<pos:position pos:line="21" pos:column="15"/></condition><then pos:line="21" pos:column="15"> <expr><name pos:line="21" pos:column="16">XmlInitUnknownEncodingNS<pos:position pos:line="21" pos:column="40"/></name></expr>
	     <pos:position pos:line="22" pos:column="7"/></then><else pos:line="22" pos:column="14">: <expr><name pos:line="22" pos:column="16">XmlInitUnknownEncoding<pos:position pos:line="22" pos:column="38"/></name></expr></else></ternary><operator pos:line="22" pos:column="38">)<pos:position pos:line="22" pos:column="39"/></operator><operator pos:line="22" pos:column="39">(<pos:position pos:line="22" pos:column="40"/></operator><name pos:line="22" pos:column="40">unknownEncodingMem<pos:position pos:line="22" pos:column="58"/></name><operator pos:line="22" pos:column="58">,<pos:position pos:line="22" pos:column="59"/></operator>
				       <name><name pos:line="23" pos:column="40">info<pos:position pos:line="23" pos:column="44"/></name><operator pos:line="23" pos:column="44">.<pos:position pos:line="23" pos:column="45"/></operator><name pos:line="23" pos:column="45">map<pos:position pos:line="23" pos:column="48"/></name></name><operator pos:line="23" pos:column="48">,<pos:position pos:line="23" pos:column="49"/></operator>
				       <name><name pos:line="24" pos:column="40">info<pos:position pos:line="24" pos:column="44"/></name><operator pos:line="24" pos:column="44">.<pos:position pos:line="24" pos:column="45"/></operator><name pos:line="24" pos:column="45">convert<pos:position pos:line="24" pos:column="52"/></name></name><operator pos:line="24" pos:column="52">,<pos:position pos:line="24" pos:column="53"/></operator>
				       <name><name pos:line="25" pos:column="40">info<pos:position pos:line="25" pos:column="44"/></name><operator pos:line="25" pos:column="44">.<pos:position pos:line="25" pos:column="45"/></operator><name pos:line="25" pos:column="45">data<pos:position pos:line="25" pos:column="49"/></name></name><operator pos:line="25" pos:column="49">)<pos:position pos:line="25" pos:column="50"/></operator></expr>;<pos:position pos:line="25" pos:column="51"/></expr_stmt>
      <if pos:line="26" pos:column="7">if <condition pos:line="26" pos:column="10">(<expr><name pos:line="26" pos:column="11">enc<pos:position pos:line="26" pos:column="14"/></name></expr>)<pos:position pos:line="26" pos:column="15"/></condition><then pos:line="26" pos:column="15"> <block pos:line="26" pos:column="16">{
	<expr_stmt><expr><name pos:line="27" pos:column="9">unknownEncodingData<pos:position pos:line="27" pos:column="28"/></name> <operator pos:line="27" pos:column="29">=<pos:position pos:line="27" pos:column="30"/></operator> <name><name pos:line="27" pos:column="31">info<pos:position pos:line="27" pos:column="35"/></name><operator pos:line="27" pos:column="35">.<pos:position pos:line="27" pos:column="36"/></operator><name pos:line="27" pos:column="36">data<pos:position pos:line="27" pos:column="40"/></name></name></expr>;<pos:position pos:line="27" pos:column="41"/></expr_stmt>
	<expr_stmt><expr><name pos:line="28" pos:column="9">unknownEncodingRelease<pos:position pos:line="28" pos:column="31"/></name> <operator pos:line="28" pos:column="32">=<pos:position pos:line="28" pos:column="33"/></operator> <name><name pos:line="28" pos:column="34">info<pos:position pos:line="28" pos:column="38"/></name><operator pos:line="28" pos:column="38">.<pos:position pos:line="28" pos:column="39"/></operator><name pos:line="28" pos:column="39">release<pos:position pos:line="28" pos:column="46"/></name></name></expr>;<pos:position pos:line="28" pos:column="47"/></expr_stmt>
	<expr_stmt><expr><name pos:line="29" pos:column="9">encoding<pos:position pos:line="29" pos:column="17"/></name> <operator pos:line="29" pos:column="18">=<pos:position pos:line="29" pos:column="19"/></operator> <name pos:line="29" pos:column="20">enc<pos:position pos:line="29" pos:column="23"/></name></expr>;<pos:position pos:line="29" pos:column="24"/></expr_stmt>
	<return pos:line="30" pos:column="9">return <expr><name pos:line="30" pos:column="16">XML_ERROR_NONE<pos:position pos:line="30" pos:column="30"/></name></expr>;<pos:position pos:line="30" pos:column="31"/></return>
      }<pos:position pos:line="31" pos:column="8"/></block></then></if>
    }<pos:position pos:line="32" pos:column="6"/></block></then></if>
    <if pos:line="33" pos:column="5">if <condition pos:line="33" pos:column="8">(<expr><name><name pos:line="33" pos:column="9">info<pos:position pos:line="33" pos:column="13"/></name><operator pos:line="33" pos:column="13">.<pos:position pos:line="33" pos:column="14"/></operator><name pos:line="33" pos:column="14">release<pos:position pos:line="33" pos:column="21"/></name></name></expr>)<pos:position pos:line="33" pos:column="22"/></condition><then pos:line="33" pos:column="22">
      <block type="pseudo"><expr_stmt><expr><call><name><name pos:line="34" pos:column="7">info<pos:position pos:line="34" pos:column="11"/></name><operator pos:line="34" pos:column="11">.<pos:position pos:line="34" pos:column="12"/></operator><name pos:line="34" pos:column="12">release<pos:position pos:line="34" pos:column="19"/></name></name><argument_list pos:line="34" pos:column="19">(<argument><expr><name><name pos:line="34" pos:column="20">info<pos:position pos:line="34" pos:column="24"/></name><operator pos:line="34" pos:column="24">.<pos:position pos:line="34" pos:column="25"/></operator><name pos:line="34" pos:column="25">data<pos:position pos:line="34" pos:column="29"/></name></name></expr></argument>)<pos:position pos:line="34" pos:column="30"/></argument_list></call></expr>;<pos:position pos:line="34" pos:column="31"/></expr_stmt></block></then></if>
  }<pos:position pos:line="35" pos:column="4"/></block></then></if>
  <return pos:line="36" pos:column="3">return <expr><name pos:line="36" pos:column="10">XML_ERROR_UNKNOWN_ENCODING<pos:position pos:line="36" pos:column="36"/></name></expr>;<pos:position pos:line="36" pos:column="37"/></return>
}<pos:position pos:line="37" pos:column="2"/></block></function></unit>

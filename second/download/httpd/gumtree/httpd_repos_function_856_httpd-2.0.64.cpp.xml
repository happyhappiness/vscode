<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/httpd/gumtree/httpd_repos_function_856_httpd-2.0.64.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">char<pos:position pos:line="1" pos:column="12"/></name> <modifier pos:line="1" pos:column="13">*<pos:position pos:line="1" pos:column="14"/></modifier></type><name pos:line="1" pos:column="14">ssl_var_lookup_ssl<pos:position pos:line="1" pos:column="32"/></name><parameter_list pos:line="1" pos:column="32">(<parameter><decl><type><name pos:line="1" pos:column="33">apr_pool_t<pos:position pos:line="1" pos:column="43"/></name> <modifier pos:line="1" pos:column="44">*<pos:position pos:line="1" pos:column="45"/></modifier></type><name pos:line="1" pos:column="45">p<pos:position pos:line="1" pos:column="46"/></name></decl></parameter>, <parameter><decl><type><name pos:line="1" pos:column="48">conn_rec<pos:position pos:line="1" pos:column="56"/></name> <modifier pos:line="1" pos:column="57">*<pos:position pos:line="1" pos:column="58"/></modifier></type><name pos:line="1" pos:column="58">c<pos:position pos:line="1" pos:column="59"/></name></decl></parameter>, <parameter><decl><type><name pos:line="1" pos:column="61">char<pos:position pos:line="1" pos:column="65"/></name> <modifier pos:line="1" pos:column="66">*<pos:position pos:line="1" pos:column="67"/></modifier></type><name pos:line="1" pos:column="67">var<pos:position pos:line="1" pos:column="70"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="71"/></parameter_list>
<block pos:line="2" pos:column="1">{
    <decl_stmt><decl><type><name pos:line="3" pos:column="5">SSLConnRec<pos:position pos:line="3" pos:column="15"/></name> <modifier pos:line="3" pos:column="16">*<pos:position pos:line="3" pos:column="17"/></modifier></type><name pos:line="3" pos:column="17">sslconn<pos:position pos:line="3" pos:column="24"/></name> <init pos:line="3" pos:column="25">= <expr><call><name pos:line="3" pos:column="27">myConnConfig<pos:position pos:line="3" pos:column="39"/></name><argument_list pos:line="3" pos:column="39">(<argument><expr><name pos:line="3" pos:column="40">c<pos:position pos:line="3" pos:column="41"/></name></expr></argument>)<pos:position pos:line="3" pos:column="42"/></argument_list></call></expr></init></decl>;<pos:position pos:line="3" pos:column="43"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="4" pos:column="5">char<pos:position pos:line="4" pos:column="9"/></name> <modifier pos:line="4" pos:column="10">*<pos:position pos:line="4" pos:column="11"/></modifier></type><name pos:line="4" pos:column="11">result<pos:position pos:line="4" pos:column="17"/></name></decl>;<pos:position pos:line="4" pos:column="18"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="5" pos:column="5">X509<pos:position pos:line="5" pos:column="9"/></name> <modifier pos:line="5" pos:column="10">*<pos:position pos:line="5" pos:column="11"/></modifier></type><name pos:line="5" pos:column="11">xs<pos:position pos:line="5" pos:column="13"/></name></decl>;<pos:position pos:line="5" pos:column="14"/></decl_stmt>
    <expr_stmt><expr><call><name pos:line="6" pos:column="5">STACK_OF<pos:position pos:line="6" pos:column="13"/></name><argument_list pos:line="6" pos:column="13">(<argument><expr><name pos:line="6" pos:column="14">X509<pos:position pos:line="6" pos:column="18"/></name></expr></argument>)<pos:position pos:line="6" pos:column="19"/></argument_list></call> <operator pos:line="6" pos:column="20">*<pos:position pos:line="6" pos:column="21"/></operator><name pos:line="6" pos:column="21">sk<pos:position pos:line="6" pos:column="23"/></name></expr>;<pos:position pos:line="6" pos:column="24"/></expr_stmt>
    <decl_stmt><decl><type><name pos:line="7" pos:column="5">SSL<pos:position pos:line="7" pos:column="8"/></name> <modifier pos:line="7" pos:column="9">*<pos:position pos:line="7" pos:column="10"/></modifier></type><name pos:line="7" pos:column="10">ssl<pos:position pos:line="7" pos:column="13"/></name></decl>;<pos:position pos:line="7" pos:column="14"/></decl_stmt>

    <expr_stmt><expr><name pos:line="9" pos:column="5">result<pos:position pos:line="9" pos:column="11"/></name> <operator pos:line="9" pos:column="12">=<pos:position pos:line="9" pos:column="13"/></operator> <name pos:line="9" pos:column="14">NULL<pos:position pos:line="9" pos:column="18"/></name></expr>;<pos:position pos:line="9" pos:column="19"/></expr_stmt>

    <expr_stmt><expr><name pos:line="11" pos:column="5">ssl<pos:position pos:line="11" pos:column="8"/></name> <operator pos:line="11" pos:column="9">=<pos:position pos:line="11" pos:column="10"/></operator> <name><name pos:line="11" pos:column="11">sslconn<pos:position pos:line="11" pos:column="18"/></name><operator pos:line="11" pos:column="18">-&gt;<pos:position pos:line="11" pos:column="23"/></operator><name pos:line="11" pos:column="20">ssl<pos:position pos:line="11" pos:column="23"/></name></name></expr>;<pos:position pos:line="11" pos:column="24"/></expr_stmt>
    <if pos:line="12" pos:column="5">if <condition pos:line="12" pos:column="8">(<expr><call><name pos:line="12" pos:column="9">strlen<pos:position pos:line="12" pos:column="15"/></name><argument_list pos:line="12" pos:column="15">(<argument><expr><name pos:line="12" pos:column="16">var<pos:position pos:line="12" pos:column="19"/></name></expr></argument>)<pos:position pos:line="12" pos:column="20"/></argument_list></call> <operator pos:line="12" pos:column="21">&gt;<pos:position pos:line="12" pos:column="25"/></operator> <literal type="number" pos:line="12" pos:column="23">8<pos:position pos:line="12" pos:column="24"/></literal> <operator pos:line="12" pos:column="25">&amp;&amp;<pos:position pos:line="12" pos:column="35"/></operator> <call><name pos:line="12" pos:column="28">strcEQn<pos:position pos:line="12" pos:column="35"/></name><argument_list pos:line="12" pos:column="35">(<argument><expr><name pos:line="12" pos:column="36">var<pos:position pos:line="12" pos:column="39"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="12" pos:column="41">"VERSION_"<pos:position pos:line="12" pos:column="51"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="12" pos:column="53">8<pos:position pos:line="12" pos:column="54"/></literal></expr></argument>)<pos:position pos:line="12" pos:column="55"/></argument_list></call></expr>)<pos:position pos:line="12" pos:column="56"/></condition><then pos:line="12" pos:column="56"> <block pos:line="12" pos:column="57">{
        <expr_stmt><expr><name pos:line="13" pos:column="9">result<pos:position pos:line="13" pos:column="15"/></name> <operator pos:line="13" pos:column="16">=<pos:position pos:line="13" pos:column="17"/></operator> <call><name pos:line="13" pos:column="18">ssl_var_lookup_ssl_version<pos:position pos:line="13" pos:column="44"/></name><argument_list pos:line="13" pos:column="44">(<argument><expr><name><name pos:line="13" pos:column="45">c<pos:position pos:line="13" pos:column="46"/></name><operator pos:line="13" pos:column="46">-&gt;<pos:position pos:line="13" pos:column="51"/></operator><name pos:line="13" pos:column="48">base_server<pos:position pos:line="13" pos:column="59"/></name><operator pos:line="13" pos:column="59">-&gt;<pos:position pos:line="13" pos:column="64"/></operator><name pos:line="13" pos:column="61">process<pos:position pos:line="13" pos:column="68"/></name><operator pos:line="13" pos:column="68">-&gt;<pos:position pos:line="13" pos:column="73"/></operator><name pos:line="13" pos:column="70">pool<pos:position pos:line="13" pos:column="74"/></name></name></expr></argument>,
                                            <argument><expr><name pos:line="14" pos:column="45">p<pos:position pos:line="14" pos:column="46"/></name></expr></argument>, <argument><expr><name pos:line="14" pos:column="48">var<pos:position pos:line="14" pos:column="51"/></name><operator pos:line="14" pos:column="51">+<pos:position pos:line="14" pos:column="52"/></operator><literal type="number" pos:line="14" pos:column="52">8<pos:position pos:line="14" pos:column="53"/></literal></expr></argument>)<pos:position pos:line="14" pos:column="54"/></argument_list></call></expr>;<pos:position pos:line="14" pos:column="55"/></expr_stmt>
    }<pos:position pos:line="15" pos:column="6"/></block></then>
    <elseif pos:line="16" pos:column="5">else <if pos:line="16" pos:column="10">if <condition pos:line="16" pos:column="13">(<expr><name pos:line="16" pos:column="14">ssl<pos:position pos:line="16" pos:column="17"/></name> <operator pos:line="16" pos:column="18">!=<pos:position pos:line="16" pos:column="20"/></operator> <name pos:line="16" pos:column="21">NULL<pos:position pos:line="16" pos:column="25"/></name> <operator pos:line="16" pos:column="26">&amp;&amp;<pos:position pos:line="16" pos:column="36"/></operator> <call><name pos:line="16" pos:column="29">strcEQ<pos:position pos:line="16" pos:column="35"/></name><argument_list pos:line="16" pos:column="35">(<argument><expr><name pos:line="16" pos:column="36">var<pos:position pos:line="16" pos:column="39"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="16" pos:column="41">"PROTOCOL"<pos:position pos:line="16" pos:column="51"/></literal></expr></argument>)<pos:position pos:line="16" pos:column="52"/></argument_list></call></expr>)<pos:position pos:line="16" pos:column="53"/></condition><then pos:line="16" pos:column="53"> <block pos:line="16" pos:column="54">{
        <expr_stmt><expr><name pos:line="17" pos:column="9">result<pos:position pos:line="17" pos:column="15"/></name> <operator pos:line="17" pos:column="16">=<pos:position pos:line="17" pos:column="17"/></operator> <operator pos:line="17" pos:column="18">(<pos:position pos:line="17" pos:column="19"/></operator><name pos:line="17" pos:column="19">char<pos:position pos:line="17" pos:column="23"/></name> <operator pos:line="17" pos:column="24">*<pos:position pos:line="17" pos:column="25"/></operator><operator pos:line="17" pos:column="25">)<pos:position pos:line="17" pos:column="26"/></operator><call><name pos:line="17" pos:column="26">SSL_get_version<pos:position pos:line="17" pos:column="41"/></name><argument_list pos:line="17" pos:column="41">(<argument><expr><name pos:line="17" pos:column="42">ssl<pos:position pos:line="17" pos:column="45"/></name></expr></argument>)<pos:position pos:line="17" pos:column="46"/></argument_list></call></expr>;<pos:position pos:line="17" pos:column="47"/></expr_stmt>
    }<pos:position pos:line="18" pos:column="6"/></block></then></if></elseif>
    <elseif pos:line="19" pos:column="5">else <if pos:line="19" pos:column="10">if <condition pos:line="19" pos:column="13">(<expr><name pos:line="19" pos:column="14">ssl<pos:position pos:line="19" pos:column="17"/></name> <operator pos:line="19" pos:column="18">!=<pos:position pos:line="19" pos:column="20"/></operator> <name pos:line="19" pos:column="21">NULL<pos:position pos:line="19" pos:column="25"/></name> <operator pos:line="19" pos:column="26">&amp;&amp;<pos:position pos:line="19" pos:column="36"/></operator> <call><name pos:line="19" pos:column="29">strcEQ<pos:position pos:line="19" pos:column="35"/></name><argument_list pos:line="19" pos:column="35">(<argument><expr><name pos:line="19" pos:column="36">var<pos:position pos:line="19" pos:column="39"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="19" pos:column="41">"SESSION_ID"<pos:position pos:line="19" pos:column="53"/></literal></expr></argument>)<pos:position pos:line="19" pos:column="54"/></argument_list></call></expr>)<pos:position pos:line="19" pos:column="55"/></condition><then pos:line="19" pos:column="55"> <block pos:line="19" pos:column="56">{
        <decl_stmt><decl><type><name pos:line="20" pos:column="9">char<pos:position pos:line="20" pos:column="13"/></name></type> <name><name pos:line="20" pos:column="14">buf<pos:position pos:line="20" pos:column="17"/></name><index pos:line="20" pos:column="17">[<expr><name pos:line="20" pos:column="18">SSL_SESSION_ID_STRING_LEN<pos:position pos:line="20" pos:column="43"/></name></expr>]<pos:position pos:line="20" pos:column="44"/></index></name></decl>;<pos:position pos:line="20" pos:column="45"/></decl_stmt>
        <decl_stmt><decl><type><name pos:line="21" pos:column="9">SSL_SESSION<pos:position pos:line="21" pos:column="20"/></name> <modifier pos:line="21" pos:column="21">*<pos:position pos:line="21" pos:column="22"/></modifier></type><name pos:line="21" pos:column="22">pSession<pos:position pos:line="21" pos:column="30"/></name> <init pos:line="21" pos:column="31">= <expr><call><name pos:line="21" pos:column="33">SSL_get_session<pos:position pos:line="21" pos:column="48"/></name><argument_list pos:line="21" pos:column="48">(<argument><expr><name pos:line="21" pos:column="49">ssl<pos:position pos:line="21" pos:column="52"/></name></expr></argument>)<pos:position pos:line="21" pos:column="53"/></argument_list></call></expr></init></decl>;<pos:position pos:line="21" pos:column="54"/></decl_stmt>
        <if pos:line="22" pos:column="9">if <condition pos:line="22" pos:column="12">(<expr><name pos:line="22" pos:column="13">pSession<pos:position pos:line="22" pos:column="21"/></name></expr>)<pos:position pos:line="22" pos:column="22"/></condition><then pos:line="22" pos:column="22"> <block pos:line="22" pos:column="23">{
            <expr_stmt><expr><name pos:line="23" pos:column="13">result<pos:position pos:line="23" pos:column="19"/></name> <operator pos:line="23" pos:column="20">=<pos:position pos:line="23" pos:column="21"/></operator> <call><name pos:line="23" pos:column="22">apr_pstrdup<pos:position pos:line="23" pos:column="33"/></name><argument_list pos:line="23" pos:column="33">(<argument><expr><name pos:line="23" pos:column="34">p<pos:position pos:line="23" pos:column="35"/></name></expr></argument>, <argument><expr><call><name pos:line="23" pos:column="37">SSL_SESSION_id2sz<pos:position pos:line="23" pos:column="54"/></name><argument_list pos:line="23" pos:column="54">(
                                     <argument><expr><call><name pos:line="24" pos:column="38">SSL_SESSION_get_session_id<pos:position pos:line="24" pos:column="64"/></name><argument_list pos:line="24" pos:column="64">(<argument><expr><name pos:line="24" pos:column="65">pSession<pos:position pos:line="24" pos:column="73"/></name></expr></argument>)<pos:position pos:line="24" pos:column="74"/></argument_list></call></expr></argument>,
                                     <argument><expr><call><name pos:line="25" pos:column="38">SSL_SESSION_get_session_id_length<pos:position pos:line="25" pos:column="71"/></name><argument_list pos:line="25" pos:column="71">(<argument><expr><name pos:line="25" pos:column="72">pSession<pos:position pos:line="25" pos:column="80"/></name></expr></argument>)<pos:position pos:line="25" pos:column="81"/></argument_list></call></expr></argument>,
                                     <argument><expr><name pos:line="26" pos:column="38">buf<pos:position pos:line="26" pos:column="41"/></name></expr></argument>, <argument><expr><sizeof pos:line="26" pos:column="43">sizeof<argument_list pos:line="26" pos:column="49">(<argument><expr><name pos:line="26" pos:column="50">buf<pos:position pos:line="26" pos:column="53"/></name></expr></argument>)<pos:position pos:line="26" pos:column="54"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="26" pos:column="55"/></argument_list></call></expr></argument>)<pos:position pos:line="26" pos:column="56"/></argument_list></call></expr>;<pos:position pos:line="26" pos:column="57"/></expr_stmt>
        }<pos:position pos:line="27" pos:column="10"/></block></then></if>
    }<pos:position pos:line="28" pos:column="6"/></block></then></if></elseif>
    <elseif pos:line="29" pos:column="5">else <if pos:line="29" pos:column="10">if <condition pos:line="29" pos:column="13">(<expr><name pos:line="29" pos:column="14">ssl<pos:position pos:line="29" pos:column="17"/></name> <operator pos:line="29" pos:column="18">!=<pos:position pos:line="29" pos:column="20"/></operator> <name pos:line="29" pos:column="21">NULL<pos:position pos:line="29" pos:column="25"/></name> <operator pos:line="29" pos:column="26">&amp;&amp;<pos:position pos:line="29" pos:column="36"/></operator> <call><name pos:line="29" pos:column="29">strlen<pos:position pos:line="29" pos:column="35"/></name><argument_list pos:line="29" pos:column="35">(<argument><expr><name pos:line="29" pos:column="36">var<pos:position pos:line="29" pos:column="39"/></name></expr></argument>)<pos:position pos:line="29" pos:column="40"/></argument_list></call> <operator pos:line="29" pos:column="41">&gt;=<pos:position pos:line="29" pos:column="46"/></operator> <literal type="number" pos:line="29" pos:column="44">6<pos:position pos:line="29" pos:column="45"/></literal> <operator pos:line="29" pos:column="46">&amp;&amp;<pos:position pos:line="29" pos:column="56"/></operator> <call><name pos:line="29" pos:column="49">strcEQn<pos:position pos:line="29" pos:column="56"/></name><argument_list pos:line="29" pos:column="56">(<argument><expr><name pos:line="29" pos:column="57">var<pos:position pos:line="29" pos:column="60"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="29" pos:column="62">"CIPHER"<pos:position pos:line="29" pos:column="70"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="29" pos:column="72">6<pos:position pos:line="29" pos:column="73"/></literal></expr></argument>)<pos:position pos:line="29" pos:column="74"/></argument_list></call></expr>)<pos:position pos:line="29" pos:column="75"/></condition><then pos:line="29" pos:column="75"> <block pos:line="29" pos:column="76">{
        <expr_stmt><expr><name pos:line="30" pos:column="9">result<pos:position pos:line="30" pos:column="15"/></name> <operator pos:line="30" pos:column="16">=<pos:position pos:line="30" pos:column="17"/></operator> <call><name pos:line="30" pos:column="18">ssl_var_lookup_ssl_cipher<pos:position pos:line="30" pos:column="43"/></name><argument_list pos:line="30" pos:column="43">(<argument><expr><name pos:line="30" pos:column="44">p<pos:position pos:line="30" pos:column="45"/></name></expr></argument>, <argument><expr><name pos:line="30" pos:column="47">c<pos:position pos:line="30" pos:column="48"/></name></expr></argument>, <argument><expr><name pos:line="30" pos:column="50">var<pos:position pos:line="30" pos:column="53"/></name><operator pos:line="30" pos:column="53">+<pos:position pos:line="30" pos:column="54"/></operator><literal type="number" pos:line="30" pos:column="54">6<pos:position pos:line="30" pos:column="55"/></literal></expr></argument>)<pos:position pos:line="30" pos:column="56"/></argument_list></call></expr>;<pos:position pos:line="30" pos:column="57"/></expr_stmt>
    }<pos:position pos:line="31" pos:column="6"/></block></then></if></elseif>
    <elseif pos:line="32" pos:column="5">else <if pos:line="32" pos:column="10">if <condition pos:line="32" pos:column="13">(<expr><name pos:line="32" pos:column="14">ssl<pos:position pos:line="32" pos:column="17"/></name> <operator pos:line="32" pos:column="18">!=<pos:position pos:line="32" pos:column="20"/></operator> <name pos:line="32" pos:column="21">NULL<pos:position pos:line="32" pos:column="25"/></name> <operator pos:line="32" pos:column="26">&amp;&amp;<pos:position pos:line="32" pos:column="36"/></operator> <call><name pos:line="32" pos:column="29">strlen<pos:position pos:line="32" pos:column="35"/></name><argument_list pos:line="32" pos:column="35">(<argument><expr><name pos:line="32" pos:column="36">var<pos:position pos:line="32" pos:column="39"/></name></expr></argument>)<pos:position pos:line="32" pos:column="40"/></argument_list></call> <operator pos:line="32" pos:column="41">&gt;<pos:position pos:line="32" pos:column="45"/></operator> <literal type="number" pos:line="32" pos:column="43">18<pos:position pos:line="32" pos:column="45"/></literal> <operator pos:line="32" pos:column="46">&amp;&amp;<pos:position pos:line="32" pos:column="56"/></operator> <call><name pos:line="32" pos:column="49">strcEQn<pos:position pos:line="32" pos:column="56"/></name><argument_list pos:line="32" pos:column="56">(<argument><expr><name pos:line="32" pos:column="57">var<pos:position pos:line="32" pos:column="60"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="32" pos:column="62">"CLIENT_CERT_CHAIN_"<pos:position pos:line="32" pos:column="82"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="32" pos:column="84">18<pos:position pos:line="32" pos:column="86"/></literal></expr></argument>)<pos:position pos:line="32" pos:column="87"/></argument_list></call></expr>)<pos:position pos:line="32" pos:column="88"/></condition><then pos:line="32" pos:column="88"> <block pos:line="32" pos:column="89">{
        <expr_stmt><expr><name pos:line="33" pos:column="9">sk<pos:position pos:line="33" pos:column="11"/></name> <operator pos:line="33" pos:column="12">=<pos:position pos:line="33" pos:column="13"/></operator> <call><name pos:line="33" pos:column="14">SSL_get_peer_cert_chain<pos:position pos:line="33" pos:column="37"/></name><argument_list pos:line="33" pos:column="37">(<argument><expr><name pos:line="33" pos:column="38">ssl<pos:position pos:line="33" pos:column="41"/></name></expr></argument>)<pos:position pos:line="33" pos:column="42"/></argument_list></call></expr>;<pos:position pos:line="33" pos:column="43"/></expr_stmt>
        <expr_stmt><expr><name pos:line="34" pos:column="9">result<pos:position pos:line="34" pos:column="15"/></name> <operator pos:line="34" pos:column="16">=<pos:position pos:line="34" pos:column="17"/></operator> <call><name pos:line="34" pos:column="18">ssl_var_lookup_ssl_cert_chain<pos:position pos:line="34" pos:column="47"/></name><argument_list pos:line="34" pos:column="47">(<argument><expr><name pos:line="34" pos:column="48">p<pos:position pos:line="34" pos:column="49"/></name></expr></argument>, <argument><expr><name pos:line="34" pos:column="51">sk<pos:position pos:line="34" pos:column="53"/></name></expr></argument>, <argument><expr><name pos:line="34" pos:column="55">var<pos:position pos:line="34" pos:column="58"/></name><operator pos:line="34" pos:column="58">+<pos:position pos:line="34" pos:column="59"/></operator><literal type="number" pos:line="34" pos:column="59">18<pos:position pos:line="34" pos:column="61"/></literal></expr></argument>)<pos:position pos:line="34" pos:column="62"/></argument_list></call></expr>;<pos:position pos:line="34" pos:column="63"/></expr_stmt>
    }<pos:position pos:line="35" pos:column="6"/></block></then></if></elseif>
    <elseif pos:line="36" pos:column="5">else <if pos:line="36" pos:column="10">if <condition pos:line="36" pos:column="13">(<expr><name pos:line="36" pos:column="14">ssl<pos:position pos:line="36" pos:column="17"/></name> <operator pos:line="36" pos:column="18">!=<pos:position pos:line="36" pos:column="20"/></operator> <name pos:line="36" pos:column="21">NULL<pos:position pos:line="36" pos:column="25"/></name> <operator pos:line="36" pos:column="26">&amp;&amp;<pos:position pos:line="36" pos:column="36"/></operator> <call><name pos:line="36" pos:column="29">strcEQ<pos:position pos:line="36" pos:column="35"/></name><argument_list pos:line="36" pos:column="35">(<argument><expr><name pos:line="36" pos:column="36">var<pos:position pos:line="36" pos:column="39"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="36" pos:column="41">"CLIENT_VERIFY"<pos:position pos:line="36" pos:column="56"/></literal></expr></argument>)<pos:position pos:line="36" pos:column="57"/></argument_list></call></expr>)<pos:position pos:line="36" pos:column="58"/></condition><then pos:line="36" pos:column="58"> <block pos:line="36" pos:column="59">{
        <expr_stmt><expr><name pos:line="37" pos:column="9">result<pos:position pos:line="37" pos:column="15"/></name> <operator pos:line="37" pos:column="16">=<pos:position pos:line="37" pos:column="17"/></operator> <call><name pos:line="37" pos:column="18">ssl_var_lookup_ssl_cert_verify<pos:position pos:line="37" pos:column="48"/></name><argument_list pos:line="37" pos:column="48">(<argument><expr><name pos:line="37" pos:column="49">p<pos:position pos:line="37" pos:column="50"/></name></expr></argument>, <argument><expr><name pos:line="37" pos:column="52">c<pos:position pos:line="37" pos:column="53"/></name></expr></argument>)<pos:position pos:line="37" pos:column="54"/></argument_list></call></expr>;<pos:position pos:line="37" pos:column="55"/></expr_stmt>
    }<pos:position pos:line="38" pos:column="6"/></block></then></if></elseif>
    <elseif pos:line="39" pos:column="5">else <if pos:line="39" pos:column="10">if <condition pos:line="39" pos:column="13">(<expr><name pos:line="39" pos:column="14">ssl<pos:position pos:line="39" pos:column="17"/></name> <operator pos:line="39" pos:column="18">!=<pos:position pos:line="39" pos:column="20"/></operator> <name pos:line="39" pos:column="21">NULL<pos:position pos:line="39" pos:column="25"/></name> <operator pos:line="39" pos:column="26">&amp;&amp;<pos:position pos:line="39" pos:column="36"/></operator> <call><name pos:line="39" pos:column="29">strlen<pos:position pos:line="39" pos:column="35"/></name><argument_list pos:line="39" pos:column="35">(<argument><expr><name pos:line="39" pos:column="36">var<pos:position pos:line="39" pos:column="39"/></name></expr></argument>)<pos:position pos:line="39" pos:column="40"/></argument_list></call> <operator pos:line="39" pos:column="41">&gt;<pos:position pos:line="39" pos:column="45"/></operator> <literal type="number" pos:line="39" pos:column="43">7<pos:position pos:line="39" pos:column="44"/></literal> <operator pos:line="39" pos:column="45">&amp;&amp;<pos:position pos:line="39" pos:column="55"/></operator> <call><name pos:line="39" pos:column="48">strcEQn<pos:position pos:line="39" pos:column="55"/></name><argument_list pos:line="39" pos:column="55">(<argument><expr><name pos:line="39" pos:column="56">var<pos:position pos:line="39" pos:column="59"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="39" pos:column="61">"CLIENT_"<pos:position pos:line="39" pos:column="70"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="39" pos:column="72">7<pos:position pos:line="39" pos:column="73"/></literal></expr></argument>)<pos:position pos:line="39" pos:column="74"/></argument_list></call></expr>)<pos:position pos:line="39" pos:column="75"/></condition><then pos:line="39" pos:column="75"> <block pos:line="39" pos:column="76">{
        <if pos:line="40" pos:column="9">if <condition pos:line="40" pos:column="12">(<expr><operator pos:line="40" pos:column="13">(<pos:position pos:line="40" pos:column="14"/></operator><name pos:line="40" pos:column="14">xs<pos:position pos:line="40" pos:column="16"/></name> <operator pos:line="40" pos:column="17">=<pos:position pos:line="40" pos:column="18"/></operator> <call><name pos:line="40" pos:column="19">SSL_get_peer_certificate<pos:position pos:line="40" pos:column="43"/></name><argument_list pos:line="40" pos:column="43">(<argument><expr><name pos:line="40" pos:column="44">ssl<pos:position pos:line="40" pos:column="47"/></name></expr></argument>)<pos:position pos:line="40" pos:column="48"/></argument_list></call><operator pos:line="40" pos:column="48">)<pos:position pos:line="40" pos:column="49"/></operator> <operator pos:line="40" pos:column="50">!=<pos:position pos:line="40" pos:column="52"/></operator> <name pos:line="40" pos:column="53">NULL<pos:position pos:line="40" pos:column="57"/></name></expr>)<pos:position pos:line="40" pos:column="58"/></condition><then pos:line="40" pos:column="58"> <block pos:line="40" pos:column="59">{
            <expr_stmt><expr><name pos:line="41" pos:column="13">result<pos:position pos:line="41" pos:column="19"/></name> <operator pos:line="41" pos:column="20">=<pos:position pos:line="41" pos:column="21"/></operator> <call><name pos:line="41" pos:column="22">ssl_var_lookup_ssl_cert<pos:position pos:line="41" pos:column="45"/></name><argument_list pos:line="41" pos:column="45">(<argument><expr><name pos:line="41" pos:column="46">p<pos:position pos:line="41" pos:column="47"/></name></expr></argument>, <argument><expr><name pos:line="41" pos:column="49">xs<pos:position pos:line="41" pos:column="51"/></name></expr></argument>, <argument><expr><name pos:line="41" pos:column="53">var<pos:position pos:line="41" pos:column="56"/></name><operator pos:line="41" pos:column="56">+<pos:position pos:line="41" pos:column="57"/></operator><literal type="number" pos:line="41" pos:column="57">7<pos:position pos:line="41" pos:column="58"/></literal></expr></argument>)<pos:position pos:line="41" pos:column="59"/></argument_list></call></expr>;<pos:position pos:line="41" pos:column="60"/></expr_stmt>
            <expr_stmt><expr><call><name pos:line="42" pos:column="13">X509_free<pos:position pos:line="42" pos:column="22"/></name><argument_list pos:line="42" pos:column="22">(<argument><expr><name pos:line="42" pos:column="23">xs<pos:position pos:line="42" pos:column="25"/></name></expr></argument>)<pos:position pos:line="42" pos:column="26"/></argument_list></call></expr>;<pos:position pos:line="42" pos:column="27"/></expr_stmt>
        }<pos:position pos:line="43" pos:column="10"/></block></then></if>
    }<pos:position pos:line="44" pos:column="6"/></block></then></if></elseif>
    <elseif pos:line="45" pos:column="5">else <if pos:line="45" pos:column="10">if <condition pos:line="45" pos:column="13">(<expr><name pos:line="45" pos:column="14">ssl<pos:position pos:line="45" pos:column="17"/></name> <operator pos:line="45" pos:column="18">!=<pos:position pos:line="45" pos:column="20"/></operator> <name pos:line="45" pos:column="21">NULL<pos:position pos:line="45" pos:column="25"/></name> <operator pos:line="45" pos:column="26">&amp;&amp;<pos:position pos:line="45" pos:column="36"/></operator> <call><name pos:line="45" pos:column="29">strlen<pos:position pos:line="45" pos:column="35"/></name><argument_list pos:line="45" pos:column="35">(<argument><expr><name pos:line="45" pos:column="36">var<pos:position pos:line="45" pos:column="39"/></name></expr></argument>)<pos:position pos:line="45" pos:column="40"/></argument_list></call> <operator pos:line="45" pos:column="41">&gt;<pos:position pos:line="45" pos:column="45"/></operator> <literal type="number" pos:line="45" pos:column="43">7<pos:position pos:line="45" pos:column="44"/></literal> <operator pos:line="45" pos:column="45">&amp;&amp;<pos:position pos:line="45" pos:column="55"/></operator> <call><name pos:line="45" pos:column="48">strcEQn<pos:position pos:line="45" pos:column="55"/></name><argument_list pos:line="45" pos:column="55">(<argument><expr><name pos:line="45" pos:column="56">var<pos:position pos:line="45" pos:column="59"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="45" pos:column="61">"SERVER_"<pos:position pos:line="45" pos:column="70"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="45" pos:column="72">7<pos:position pos:line="45" pos:column="73"/></literal></expr></argument>)<pos:position pos:line="45" pos:column="74"/></argument_list></call></expr>)<pos:position pos:line="45" pos:column="75"/></condition><then pos:line="45" pos:column="75"> <block pos:line="45" pos:column="76">{
        <if pos:line="46" pos:column="9">if <condition pos:line="46" pos:column="12">(<expr><operator pos:line="46" pos:column="13">(<pos:position pos:line="46" pos:column="14"/></operator><name pos:line="46" pos:column="14">xs<pos:position pos:line="46" pos:column="16"/></name> <operator pos:line="46" pos:column="17">=<pos:position pos:line="46" pos:column="18"/></operator> <call><name pos:line="46" pos:column="19">SSL_get_certificate<pos:position pos:line="46" pos:column="38"/></name><argument_list pos:line="46" pos:column="38">(<argument><expr><name pos:line="46" pos:column="39">ssl<pos:position pos:line="46" pos:column="42"/></name></expr></argument>)<pos:position pos:line="46" pos:column="43"/></argument_list></call><operator pos:line="46" pos:column="43">)<pos:position pos:line="46" pos:column="44"/></operator> <operator pos:line="46" pos:column="45">!=<pos:position pos:line="46" pos:column="47"/></operator> <name pos:line="46" pos:column="48">NULL<pos:position pos:line="46" pos:column="52"/></name></expr>)<pos:position pos:line="46" pos:column="53"/></condition><then pos:line="46" pos:column="53">
            <block type="pseudo"><expr_stmt><expr><name pos:line="47" pos:column="13">result<pos:position pos:line="47" pos:column="19"/></name> <operator pos:line="47" pos:column="20">=<pos:position pos:line="47" pos:column="21"/></operator> <call><name pos:line="47" pos:column="22">ssl_var_lookup_ssl_cert<pos:position pos:line="47" pos:column="45"/></name><argument_list pos:line="47" pos:column="45">(<argument><expr><name pos:line="47" pos:column="46">p<pos:position pos:line="47" pos:column="47"/></name></expr></argument>, <argument><expr><name pos:line="47" pos:column="49">xs<pos:position pos:line="47" pos:column="51"/></name></expr></argument>, <argument><expr><name pos:line="47" pos:column="53">var<pos:position pos:line="47" pos:column="56"/></name><operator pos:line="47" pos:column="56">+<pos:position pos:line="47" pos:column="57"/></operator><literal type="number" pos:line="47" pos:column="57">7<pos:position pos:line="47" pos:column="58"/></literal></expr></argument>)<pos:position pos:line="47" pos:column="59"/></argument_list></call></expr>;<pos:position pos:line="47" pos:column="60"/></expr_stmt></block></then></if>
    }<pos:position pos:line="48" pos:column="6"/></block></then></if></elseif>
    <elseif pos:line="49" pos:column="5">else <if pos:line="49" pos:column="10">if <condition pos:line="49" pos:column="13">(<expr><name pos:line="49" pos:column="14">ssl<pos:position pos:line="49" pos:column="17"/></name> <operator pos:line="49" pos:column="18">!=<pos:position pos:line="49" pos:column="20"/></operator> <name pos:line="49" pos:column="21">NULL<pos:position pos:line="49" pos:column="25"/></name> <operator pos:line="49" pos:column="26">&amp;&amp;<pos:position pos:line="49" pos:column="36"/></operator> <call><name pos:line="49" pos:column="29">strcEQ<pos:position pos:line="49" pos:column="35"/></name><argument_list pos:line="49" pos:column="35">(<argument><expr><name pos:line="49" pos:column="36">var<pos:position pos:line="49" pos:column="39"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="49" pos:column="41">"SECURE_RENEG"<pos:position pos:line="49" pos:column="55"/></literal></expr></argument>)<pos:position pos:line="49" pos:column="56"/></argument_list></call></expr>)<pos:position pos:line="49" pos:column="57"/></condition><then pos:line="49" pos:column="57"> <block pos:line="49" pos:column="58">{
        <decl_stmt><decl><type><name pos:line="50" pos:column="9">int<pos:position pos:line="50" pos:column="12"/></name></type> <name pos:line="50" pos:column="13">flag<pos:position pos:line="50" pos:column="17"/></name> <init pos:line="50" pos:column="18">= <expr><literal type="number" pos:line="50" pos:column="20">0<pos:position pos:line="50" pos:column="21"/></literal></expr></init></decl>;<pos:position pos:line="50" pos:column="22"/></decl_stmt>
<cpp:ifdef pos:line="51" pos:column="1">#<cpp:directive pos:line="51" pos:column="2">ifdef<pos:position pos:line="51" pos:column="7"/></cpp:directive> <name pos:line="51" pos:column="8">SSL_get_secure_renegotiation_support<pos:position pos:line="51" pos:column="44"/></name></cpp:ifdef>
        <expr_stmt><expr><name pos:line="52" pos:column="9">flag<pos:position pos:line="52" pos:column="13"/></name> <operator pos:line="52" pos:column="14">=<pos:position pos:line="52" pos:column="15"/></operator> <call><name pos:line="52" pos:column="16">SSL_get_secure_renegotiation_support<pos:position pos:line="52" pos:column="52"/></name><argument_list pos:line="52" pos:column="52">(<argument><expr><name pos:line="52" pos:column="53">ssl<pos:position pos:line="52" pos:column="56"/></name></expr></argument>)<pos:position pos:line="52" pos:column="57"/></argument_list></call></expr>;<pos:position pos:line="52" pos:column="58"/></expr_stmt>
<cpp:endif pos:line="53" pos:column="1">#<cpp:directive pos:line="53" pos:column="2">endif<pos:position pos:line="53" pos:column="7"/></cpp:directive></cpp:endif>
        <expr_stmt><expr><name pos:line="54" pos:column="9">result<pos:position pos:line="54" pos:column="15"/></name> <operator pos:line="54" pos:column="16">=<pos:position pos:line="54" pos:column="17"/></operator> <call><name pos:line="54" pos:column="18">apr_pstrdup<pos:position pos:line="54" pos:column="29"/></name><argument_list pos:line="54" pos:column="29">(<argument><expr><name pos:line="54" pos:column="30">p<pos:position pos:line="54" pos:column="31"/></name></expr></argument>, <argument><expr><ternary><condition><expr><name pos:line="54" pos:column="33">flag<pos:position pos:line="54" pos:column="37"/></name></expr> ?<pos:position pos:line="54" pos:column="39"/></condition><then pos:line="54" pos:column="39"> <expr><literal type="string" pos:line="54" pos:column="40">"true"<pos:position pos:line="54" pos:column="46"/></literal></expr> <pos:position pos:line="54" pos:column="47"/></then><else pos:line="54" pos:column="47">: <expr><literal type="string" pos:line="54" pos:column="49">"false"<pos:position pos:line="54" pos:column="56"/></literal></expr></else></ternary></expr></argument>)<pos:position pos:line="54" pos:column="57"/></argument_list></call></expr>;<pos:position pos:line="54" pos:column="58"/></expr_stmt>
    }<pos:position pos:line="55" pos:column="6"/></block></then></if></elseif></if>

    <return pos:line="57" pos:column="5">return <expr><name pos:line="57" pos:column="12">result<pos:position pos:line="57" pos:column="18"/></name></expr>;<pos:position pos:line="57" pos:column="19"/></return>
}<pos:position pos:line="58" pos:column="2"/></block></function></unit>

<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/httpd/gumtree/httpd_repos_function_2916_httpd-2.3.6.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><specifier pos:line="1" pos:column="8">const<pos:position pos:line="1" pos:column="13"/></specifier> <name pos:line="1" pos:column="14">char<pos:position pos:line="1" pos:column="18"/></name> <modifier pos:line="1" pos:column="19">*<pos:position pos:line="1" pos:column="20"/></modifier></type><name pos:line="1" pos:column="20">get_mutex_filename<pos:position pos:line="1" pos:column="38"/></name><parameter_list pos:line="1" pos:column="38">(<parameter><decl><type><name pos:line="1" pos:column="39">apr_pool_t<pos:position pos:line="1" pos:column="49"/></name> <modifier pos:line="1" pos:column="50">*<pos:position pos:line="1" pos:column="51"/></modifier></type><name pos:line="1" pos:column="51">p<pos:position pos:line="1" pos:column="52"/></name></decl></parameter>, <parameter><decl><type><name pos:line="1" pos:column="54">mutex_cfg_t<pos:position pos:line="1" pos:column="65"/></name> <modifier pos:line="1" pos:column="66">*<pos:position pos:line="1" pos:column="67"/></modifier></type><name pos:line="1" pos:column="67">mxcfg<pos:position pos:line="1" pos:column="72"/></name></decl></parameter>,
                                      <parameter><decl><type><specifier pos:line="2" pos:column="39">const<pos:position pos:line="2" pos:column="44"/></specifier> <name pos:line="2" pos:column="45">char<pos:position pos:line="2" pos:column="49"/></name> <modifier pos:line="2" pos:column="50">*<pos:position pos:line="2" pos:column="51"/></modifier></type><name pos:line="2" pos:column="51">type<pos:position pos:line="2" pos:column="55"/></name></decl></parameter>,
                                      <parameter><decl><type><specifier pos:line="3" pos:column="39">const<pos:position pos:line="3" pos:column="44"/></specifier> <name pos:line="3" pos:column="45">char<pos:position pos:line="3" pos:column="49"/></name> <modifier pos:line="3" pos:column="50">*<pos:position pos:line="3" pos:column="51"/></modifier></type><name pos:line="3" pos:column="51">instance_id<pos:position pos:line="3" pos:column="62"/></name></decl></parameter>)<pos:position pos:line="3" pos:column="63"/></parameter_list>
<block pos:line="4" pos:column="1">{
    <decl_stmt><decl><type><specifier pos:line="5" pos:column="5">const<pos:position pos:line="5" pos:column="10"/></specifier> <name pos:line="5" pos:column="11">char<pos:position pos:line="5" pos:column="15"/></name> <modifier pos:line="5" pos:column="16">*<pos:position pos:line="5" pos:column="17"/></modifier></type><name pos:line="5" pos:column="17">pid_suffix<pos:position pos:line="5" pos:column="27"/></name> <init pos:line="5" pos:column="28">= <expr><literal type="string" pos:line="5" pos:column="30">""<pos:position pos:line="5" pos:column="32"/></literal></expr></init></decl>;<pos:position pos:line="5" pos:column="33"/></decl_stmt>

    <if pos:line="7" pos:column="5">if <condition pos:line="7" pos:column="8">(<expr><operator pos:line="7" pos:column="9">!<pos:position pos:line="7" pos:column="10"/></operator><call><name pos:line="7" pos:column="10">mutex_needs_file<pos:position pos:line="7" pos:column="26"/></name><argument_list pos:line="7" pos:column="26">(<argument><expr><name><name pos:line="7" pos:column="27">mxcfg<pos:position pos:line="7" pos:column="32"/></name><operator pos:line="7" pos:column="32">-&gt;<pos:position pos:line="7" pos:column="37"/></operator><name pos:line="7" pos:column="34">mech<pos:position pos:line="7" pos:column="38"/></name></name></expr></argument>)<pos:position pos:line="7" pos:column="39"/></argument_list></call></expr>)<pos:position pos:line="7" pos:column="40"/></condition><then pos:line="7" pos:column="40"> <block pos:line="7" pos:column="41">{
        <return pos:line="8" pos:column="9">return <expr><name pos:line="8" pos:column="16">NULL<pos:position pos:line="8" pos:column="20"/></name></expr>;<pos:position pos:line="8" pos:column="21"/></return>
    }<pos:position pos:line="9" pos:column="6"/></block></then></if>

<cpp:if pos:line="11" pos:column="1">#<cpp:directive pos:line="11" pos:column="2">if<pos:position pos:line="11" pos:column="4"/></cpp:directive> <expr><name pos:line="11" pos:column="5">HAVE_UNISTD_H<pos:position pos:line="11" pos:column="18"/></name></expr></cpp:if>
    <if pos:line="12" pos:column="5">if <condition pos:line="12" pos:column="8">(<expr><operator pos:line="12" pos:column="9">!<pos:position pos:line="12" pos:column="10"/></operator><name><name pos:line="12" pos:column="10">mxcfg<pos:position pos:line="12" pos:column="15"/></name><operator pos:line="12" pos:column="15">-&gt;<pos:position pos:line="12" pos:column="20"/></operator><name pos:line="12" pos:column="17">omit_pid<pos:position pos:line="12" pos:column="25"/></name></name></expr>)<pos:position pos:line="12" pos:column="26"/></condition><then pos:line="12" pos:column="26"> <block pos:line="12" pos:column="27">{
        <expr_stmt><expr><name pos:line="13" pos:column="9">pid_suffix<pos:position pos:line="13" pos:column="19"/></name> <operator pos:line="13" pos:column="20">=<pos:position pos:line="13" pos:column="21"/></operator> <call><name pos:line="13" pos:column="22">apr_psprintf<pos:position pos:line="13" pos:column="34"/></name><argument_list pos:line="13" pos:column="34">(<argument><expr><name pos:line="13" pos:column="35">p<pos:position pos:line="13" pos:column="36"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="13" pos:column="38">".%"<pos:position pos:line="13" pos:column="42"/></literal> <name pos:line="13" pos:column="43">APR_PID_T_FMT<pos:position pos:line="13" pos:column="56"/></name></expr></argument>, <argument><expr><call><name pos:line="13" pos:column="58">getpid<pos:position pos:line="13" pos:column="64"/></name><argument_list pos:line="13" pos:column="64">()<pos:position pos:line="13" pos:column="66"/></argument_list></call></expr></argument>)<pos:position pos:line="13" pos:column="67"/></argument_list></call></expr>;<pos:position pos:line="13" pos:column="68"/></expr_stmt>
    }<pos:position pos:line="14" pos:column="6"/></block></then></if>
<cpp:endif pos:line="15" pos:column="1">#<cpp:directive pos:line="15" pos:column="2">endif<pos:position pos:line="15" pos:column="7"/></cpp:directive></cpp:endif>

    <return pos:line="17" pos:column="5">return <expr><call><name pos:line="17" pos:column="12">ap_server_root_relative<pos:position pos:line="17" pos:column="35"/></name><argument_list pos:line="17" pos:column="35">(<argument><expr><name pos:line="17" pos:column="36">p<pos:position pos:line="17" pos:column="37"/></name></expr></argument>,
                                   <argument><expr><call><name pos:line="18" pos:column="36">apr_pstrcat<pos:position pos:line="18" pos:column="47"/></name><argument_list pos:line="18" pos:column="47">(<argument><expr><name pos:line="18" pos:column="48">p<pos:position pos:line="18" pos:column="49"/></name></expr></argument>,
                                               <argument><expr><name><name pos:line="19" pos:column="48">mxcfg<pos:position pos:line="19" pos:column="53"/></name><operator pos:line="19" pos:column="53">-&gt;<pos:position pos:line="19" pos:column="58"/></operator><name pos:line="19" pos:column="55">dir<pos:position pos:line="19" pos:column="58"/></name></name></expr></argument>,
                                               <argument><expr><literal type="string" pos:line="20" pos:column="48">"/"<pos:position pos:line="20" pos:column="51"/></literal></expr></argument>,
                                               <argument><expr><name pos:line="21" pos:column="48">type<pos:position pos:line="21" pos:column="52"/></name></expr></argument>,
                                               <argument><expr><ternary><condition><expr><name pos:line="22" pos:column="48">instance_id<pos:position pos:line="22" pos:column="59"/></name></expr> ?<pos:position pos:line="22" pos:column="61"/></condition><then pos:line="22" pos:column="61"> <expr><literal type="string" pos:line="22" pos:column="62">"-"<pos:position pos:line="22" pos:column="65"/></literal></expr> <pos:position pos:line="22" pos:column="66"/></then><else pos:line="22" pos:column="66">: <expr><literal type="string" pos:line="22" pos:column="68">""<pos:position pos:line="22" pos:column="70"/></literal></expr></else></ternary></expr></argument>,
                                               <argument><expr><ternary><condition><expr><name pos:line="23" pos:column="48">instance_id<pos:position pos:line="23" pos:column="59"/></name></expr> ?<pos:position pos:line="23" pos:column="61"/></condition><then pos:line="23" pos:column="61"> <expr><name pos:line="23" pos:column="62">instance_id<pos:position pos:line="23" pos:column="73"/></name></expr> <pos:position pos:line="23" pos:column="74"/></then><else pos:line="23" pos:column="74">: <expr><literal type="string" pos:line="23" pos:column="76">""<pos:position pos:line="23" pos:column="78"/></literal></expr></else></ternary></expr></argument>,
                                               <argument><expr><name pos:line="24" pos:column="48">pid_suffix<pos:position pos:line="24" pos:column="58"/></name></expr></argument>,
                                               <argument><expr><name pos:line="25" pos:column="48">NULL<pos:position pos:line="25" pos:column="52"/></name></expr></argument>)<pos:position pos:line="25" pos:column="53"/></argument_list></call></expr></argument>)<pos:position pos:line="25" pos:column="54"/></argument_list></call></expr>;<pos:position pos:line="25" pos:column="55"/></return>
}<pos:position pos:line="26" pos:column="2"/></block></function></unit>

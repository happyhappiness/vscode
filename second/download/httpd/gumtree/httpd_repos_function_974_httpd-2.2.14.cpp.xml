<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/httpd/gumtree/httpd_repos_function_974_httpd-2.2.14.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">void<pos:position pos:line="1" pos:column="12"/></name></type> <name pos:line="1" pos:column="13">tokens_to_array<pos:position pos:line="1" pos:column="28"/></name><parameter_list pos:line="1" pos:column="28">(<parameter><decl><type><name pos:line="1" pos:column="29">apr_pool_t<pos:position pos:line="1" pos:column="39"/></name> <modifier pos:line="1" pos:column="40">*<pos:position pos:line="1" pos:column="41"/></modifier></type><name pos:line="1" pos:column="41">p<pos:position pos:line="1" pos:column="42"/></name></decl></parameter>, <parameter><decl><type><specifier pos:line="1" pos:column="44">const<pos:position pos:line="1" pos:column="49"/></specifier> <name pos:line="1" pos:column="50">char<pos:position pos:line="1" pos:column="54"/></name> <modifier pos:line="1" pos:column="55">*<pos:position pos:line="1" pos:column="56"/></modifier></type><name pos:line="1" pos:column="56">data<pos:position pos:line="1" pos:column="60"/></name></decl></parameter>,
                            <parameter><decl><type><name pos:line="2" pos:column="29">apr_array_header_t<pos:position pos:line="2" pos:column="47"/></name> <modifier pos:line="2" pos:column="48">*<pos:position pos:line="2" pos:column="49"/></modifier></type><name pos:line="2" pos:column="49">arr<pos:position pos:line="2" pos:column="52"/></name></decl></parameter>)<pos:position pos:line="2" pos:column="53"/></parameter_list>
<block pos:line="3" pos:column="1">{
    <decl_stmt><decl><type><name pos:line="4" pos:column="5">char<pos:position pos:line="4" pos:column="9"/></name> <modifier pos:line="4" pos:column="10">*<pos:position pos:line="4" pos:column="11"/></modifier></type><name pos:line="4" pos:column="11">token<pos:position pos:line="4" pos:column="16"/></name></decl>;<pos:position pos:line="4" pos:column="17"/></decl_stmt>

    <while pos:line="6" pos:column="5">while <condition pos:line="6" pos:column="11">(<expr><operator pos:line="6" pos:column="12">(<pos:position pos:line="6" pos:column="13"/></operator><name pos:line="6" pos:column="13">token<pos:position pos:line="6" pos:column="18"/></name> <operator pos:line="6" pos:column="19">=<pos:position pos:line="6" pos:column="20"/></operator> <call><name pos:line="6" pos:column="21">ap_get_list_item<pos:position pos:line="6" pos:column="37"/></name><argument_list pos:line="6" pos:column="37">(<argument><expr><name pos:line="6" pos:column="38">p<pos:position pos:line="6" pos:column="39"/></name></expr></argument>, <argument><expr><operator pos:line="6" pos:column="41">&amp;<pos:position pos:line="6" pos:column="46"/></operator><name pos:line="6" pos:column="42">data<pos:position pos:line="6" pos:column="46"/></name></expr></argument>)<pos:position pos:line="6" pos:column="47"/></argument_list></call><operator pos:line="6" pos:column="47">)<pos:position pos:line="6" pos:column="48"/></operator> <operator pos:line="6" pos:column="49">!=<pos:position pos:line="6" pos:column="51"/></operator> <name pos:line="6" pos:column="52">NULL<pos:position pos:line="6" pos:column="56"/></name></expr>)<pos:position pos:line="6" pos:column="57"/></condition> <block pos:line="6" pos:column="58">{
        <expr_stmt><expr><operator pos:line="7" pos:column="9">*<pos:position pos:line="7" pos:column="10"/></operator><operator pos:line="7" pos:column="10">(<pos:position pos:line="7" pos:column="11"/></operator><operator pos:line="7" pos:column="11">(<pos:position pos:line="7" pos:column="12"/></operator><specifier pos:line="7" pos:column="12">const<pos:position pos:line="7" pos:column="17"/></specifier> <name pos:line="7" pos:column="18">char<pos:position pos:line="7" pos:column="22"/></name> <operator pos:line="7" pos:column="23">*<pos:position pos:line="7" pos:column="24"/></operator><operator pos:line="7" pos:column="24">*<pos:position pos:line="7" pos:column="25"/></operator><operator pos:line="7" pos:column="25">)<pos:position pos:line="7" pos:column="26"/></operator> <call><name pos:line="7" pos:column="27">apr_array_push<pos:position pos:line="7" pos:column="41"/></name><argument_list pos:line="7" pos:column="41">(<argument><expr><name pos:line="7" pos:column="42">arr<pos:position pos:line="7" pos:column="45"/></name></expr></argument>)<pos:position pos:line="7" pos:column="46"/></argument_list></call><operator pos:line="7" pos:column="46">)<pos:position pos:line="7" pos:column="47"/></operator> <operator pos:line="7" pos:column="48">=<pos:position pos:line="7" pos:column="49"/></operator> <name pos:line="7" pos:column="50">token<pos:position pos:line="7" pos:column="55"/></name></expr>;<pos:position pos:line="7" pos:column="56"/></expr_stmt>
    }<pos:position pos:line="8" pos:column="6"/></block></while>

    <comment type="block" pos:line="10" pos:column="5">/* Sort it so that "Vary: A, B" and "Vary: B, A" are stored the same. */</comment>
    <expr_stmt><expr><call><name pos:line="11" pos:column="5">qsort<pos:position pos:line="11" pos:column="10"/></name><argument_list pos:line="11" pos:column="10">(<argument><expr><operator pos:line="11" pos:column="11">(<pos:position pos:line="11" pos:column="12"/></operator><name pos:line="11" pos:column="12">void<pos:position pos:line="11" pos:column="16"/></name> <operator pos:line="11" pos:column="17">*<pos:position pos:line="11" pos:column="18"/></operator><operator pos:line="11" pos:column="18">)<pos:position pos:line="11" pos:column="19"/></operator> <name><name pos:line="11" pos:column="20">arr<pos:position pos:line="11" pos:column="23"/></name><operator pos:line="11" pos:column="23">-&gt;<pos:position pos:line="11" pos:column="28"/></operator><name pos:line="11" pos:column="25">elts<pos:position pos:line="11" pos:column="29"/></name></name></expr></argument>, <argument><expr><name><name pos:line="11" pos:column="31">arr<pos:position pos:line="11" pos:column="34"/></name><operator pos:line="11" pos:column="34">-&gt;<pos:position pos:line="11" pos:column="39"/></operator><name pos:line="11" pos:column="36">nelts<pos:position pos:line="11" pos:column="41"/></name></name></expr></argument>,
         <argument><expr><sizeof pos:line="12" pos:column="10">sizeof<argument_list pos:line="12" pos:column="16">(<argument><expr><name pos:line="12" pos:column="17">char<pos:position pos:line="12" pos:column="21"/></name> <operator pos:line="12" pos:column="22">*<pos:position pos:line="12" pos:column="23"/></operator></expr></argument>)<pos:position pos:line="12" pos:column="24"/></argument_list></sizeof></expr></argument>, <argument><expr><name pos:line="12" pos:column="26">array_alphasort<pos:position pos:line="12" pos:column="41"/></name></expr></argument>)<pos:position pos:line="12" pos:column="42"/></argument_list></call></expr>;<pos:position pos:line="12" pos:column="43"/></expr_stmt>
}<pos:position pos:line="13" pos:column="2"/></block></function></unit>

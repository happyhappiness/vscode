<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/httpd/gumtree/httpd_repos_function_3148_httpd-2.2.19.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><specifier pos:line="1" pos:column="8">const<pos:position pos:line="1" pos:column="13"/></specifier> <name pos:line="1" pos:column="14">XML_Char<pos:position pos:line="1" pos:column="22"/></name> <modifier pos:line="1" pos:column="23">*<pos:position pos:line="1" pos:column="24"/></modifier></type>
<name pos:line="2" pos:column="1">getContext<pos:position pos:line="2" pos:column="11"/></name><parameter_list pos:line="2" pos:column="11">(<parameter><decl><type><name pos:line="2" pos:column="12">XML_Parser<pos:position pos:line="2" pos:column="22"/></name></type> <name pos:line="2" pos:column="23">parser<pos:position pos:line="2" pos:column="29"/></name></decl></parameter>)<pos:position pos:line="2" pos:column="30"/></parameter_list>
<block pos:line="3" pos:column="1">{
  <decl_stmt><decl><type><name pos:line="4" pos:column="3">DTD<pos:position pos:line="4" pos:column="6"/></name> <modifier pos:line="4" pos:column="7">*<pos:position pos:line="4" pos:column="8"/></modifier> <specifier pos:line="4" pos:column="9">const<pos:position pos:line="4" pos:column="14"/></specifier></type> <name pos:line="4" pos:column="15">dtd<pos:position pos:line="4" pos:column="18"/></name> <init pos:line="4" pos:column="19">= <expr><name pos:line="4" pos:column="21">_dtd<pos:position pos:line="4" pos:column="25"/></name></expr></init></decl>;<pos:position pos:line="4" pos:column="26"/></decl_stmt>  <comment type="block" pos:line="4" pos:column="28">/* save one level of indirection */</comment>
  <decl_stmt><decl><type><name pos:line="5" pos:column="3">HASH_TABLE_ITER<pos:position pos:line="5" pos:column="18"/></name></type> <name pos:line="5" pos:column="19">iter<pos:position pos:line="5" pos:column="23"/></name></decl>;<pos:position pos:line="5" pos:column="24"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="6" pos:column="3">XML_Bool<pos:position pos:line="6" pos:column="11"/></name></type> <name pos:line="6" pos:column="12">needSep<pos:position pos:line="6" pos:column="19"/></name> <init pos:line="6" pos:column="20">= <expr><name pos:line="6" pos:column="22">XML_FALSE<pos:position pos:line="6" pos:column="31"/></name></expr></init></decl>;<pos:position pos:line="6" pos:column="32"/></decl_stmt>

  <if pos:line="8" pos:column="3">if <condition pos:line="8" pos:column="6">(<expr><name><name pos:line="8" pos:column="7">dtd<pos:position pos:line="8" pos:column="10"/></name><operator pos:line="8" pos:column="10">-&gt;<pos:position pos:line="8" pos:column="15"/></operator><name pos:line="8" pos:column="12">defaultPrefix<pos:position pos:line="8" pos:column="25"/></name><operator pos:line="8" pos:column="25">.<pos:position pos:line="8" pos:column="26"/></operator><name pos:line="8" pos:column="26">binding<pos:position pos:line="8" pos:column="33"/></name></name></expr>)<pos:position pos:line="8" pos:column="34"/></condition><then pos:line="8" pos:column="34"> <block pos:line="8" pos:column="35">{
    <decl_stmt><decl><type><name pos:line="9" pos:column="5">int<pos:position pos:line="9" pos:column="8"/></name></type> <name pos:line="9" pos:column="9">i<pos:position pos:line="9" pos:column="10"/></name></decl>;<pos:position pos:line="9" pos:column="11"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="10" pos:column="5">int<pos:position pos:line="10" pos:column="8"/></name></type> <name pos:line="10" pos:column="9">len<pos:position pos:line="10" pos:column="12"/></name></decl>;<pos:position pos:line="10" pos:column="13"/></decl_stmt>
    <if pos:line="11" pos:column="5">if <condition pos:line="11" pos:column="8">(<expr><operator pos:line="11" pos:column="9">!<pos:position pos:line="11" pos:column="10"/></operator><call><name pos:line="11" pos:column="10">poolAppendChar<pos:position pos:line="11" pos:column="24"/></name><argument_list pos:line="11" pos:column="24">(<argument><expr><operator pos:line="11" pos:column="25">&amp;<pos:position pos:line="11" pos:column="30"/></operator><name pos:line="11" pos:column="26">tempPool<pos:position pos:line="11" pos:column="34"/></name></expr></argument>, <argument><expr><call><name pos:line="11" pos:column="36">XML_T<pos:position pos:line="11" pos:column="41"/></name><argument_list pos:line="11" pos:column="41">(<argument><expr><literal type="char" pos:line="11" pos:column="42">'='<pos:position pos:line="11" pos:column="45"/></literal></expr></argument>)<pos:position pos:line="11" pos:column="46"/></argument_list></call></expr></argument>)<pos:position pos:line="11" pos:column="47"/></argument_list></call></expr>)<pos:position pos:line="11" pos:column="48"/></condition><then pos:line="11" pos:column="48">
      <block type="pseudo"><return pos:line="12" pos:column="7">return <expr><name pos:line="12" pos:column="14">NULL<pos:position pos:line="12" pos:column="18"/></name></expr>;<pos:position pos:line="12" pos:column="19"/></return></block></then></if>
    <expr_stmt><expr><name pos:line="13" pos:column="5">len<pos:position pos:line="13" pos:column="8"/></name> <operator pos:line="13" pos:column="9">=<pos:position pos:line="13" pos:column="10"/></operator> <name><name pos:line="13" pos:column="11">dtd<pos:position pos:line="13" pos:column="14"/></name><operator pos:line="13" pos:column="14">-&gt;<pos:position pos:line="13" pos:column="19"/></operator><name pos:line="13" pos:column="16">defaultPrefix<pos:position pos:line="13" pos:column="29"/></name><operator pos:line="13" pos:column="29">.<pos:position pos:line="13" pos:column="30"/></operator><name pos:line="13" pos:column="30">binding<pos:position pos:line="13" pos:column="37"/></name><operator pos:line="13" pos:column="37">-&gt;<pos:position pos:line="13" pos:column="42"/></operator><name pos:line="13" pos:column="39">uriLen<pos:position pos:line="13" pos:column="45"/></name></name></expr>;<pos:position pos:line="13" pos:column="46"/></expr_stmt>
    <if pos:line="14" pos:column="5">if <condition pos:line="14" pos:column="8">(<expr><name pos:line="14" pos:column="9">namespaceSeparator<pos:position pos:line="14" pos:column="27"/></name> <operator pos:line="14" pos:column="28">!=<pos:position pos:line="14" pos:column="30"/></operator> <call><name pos:line="14" pos:column="31">XML_T<pos:position pos:line="14" pos:column="36"/></name><argument_list pos:line="14" pos:column="36">(<argument><expr><literal type="char" pos:line="14" pos:column="37">'\0'<pos:position pos:line="14" pos:column="41"/></literal></expr></argument>)<pos:position pos:line="14" pos:column="42"/></argument_list></call></expr>)<pos:position pos:line="14" pos:column="43"/></condition><then pos:line="14" pos:column="43">
      <block type="pseudo"><expr_stmt><expr><name pos:line="15" pos:column="7">len<pos:position pos:line="15" pos:column="10"/></name><operator pos:line="15" pos:column="10">--<pos:position pos:line="15" pos:column="12"/></operator></expr>;<pos:position pos:line="15" pos:column="13"/></expr_stmt></block></then></if>
    <for pos:line="16" pos:column="5">for <control pos:line="16" pos:column="9">(<init><expr><name pos:line="16" pos:column="10">i<pos:position pos:line="16" pos:column="11"/></name> <operator pos:line="16" pos:column="12">=<pos:position pos:line="16" pos:column="13"/></operator> <literal type="number" pos:line="16" pos:column="14">0<pos:position pos:line="16" pos:column="15"/></literal></expr>;<pos:position pos:line="16" pos:column="16"/></init> <condition><expr><name pos:line="16" pos:column="17">i<pos:position pos:line="16" pos:column="18"/></name> <operator pos:line="16" pos:column="19">&lt;<pos:position pos:line="16" pos:column="23"/></operator> <name pos:line="16" pos:column="21">len<pos:position pos:line="16" pos:column="24"/></name></expr>;<pos:position pos:line="16" pos:column="25"/></condition> <incr><expr><name pos:line="16" pos:column="26">i<pos:position pos:line="16" pos:column="27"/></name><operator pos:line="16" pos:column="27">++<pos:position pos:line="16" pos:column="29"/></operator></expr></incr>)<pos:position pos:line="16" pos:column="30"/></control>
      <block type="pseudo"><if pos:line="17" pos:column="7">if <condition pos:line="17" pos:column="10">(<expr><operator pos:line="17" pos:column="11">!<pos:position pos:line="17" pos:column="12"/></operator><call><name pos:line="17" pos:column="12">poolAppendChar<pos:position pos:line="17" pos:column="26"/></name><argument_list pos:line="17" pos:column="26">(<argument><expr><operator pos:line="17" pos:column="27">&amp;<pos:position pos:line="17" pos:column="32"/></operator><name pos:line="17" pos:column="28">tempPool<pos:position pos:line="17" pos:column="36"/></name></expr></argument>, <argument><expr><name><name pos:line="17" pos:column="38">dtd<pos:position pos:line="17" pos:column="41"/></name><operator pos:line="17" pos:column="41">-&gt;<pos:position pos:line="17" pos:column="46"/></operator><name pos:line="17" pos:column="43">defaultPrefix<pos:position pos:line="17" pos:column="56"/></name><operator pos:line="17" pos:column="56">.<pos:position pos:line="17" pos:column="57"/></operator><name pos:line="17" pos:column="57">binding<pos:position pos:line="17" pos:column="64"/></name><operator pos:line="17" pos:column="64">-&gt;<pos:position pos:line="17" pos:column="69"/></operator><name pos:line="17" pos:column="66">uri<pos:position pos:line="17" pos:column="69"/></name><index pos:line="17" pos:column="69">[<expr><name pos:line="17" pos:column="70">i<pos:position pos:line="17" pos:column="71"/></name></expr>]<pos:position pos:line="17" pos:column="72"/></index></name></expr></argument>)<pos:position pos:line="17" pos:column="73"/></argument_list></call></expr>)<pos:position pos:line="17" pos:column="74"/></condition><then pos:line="17" pos:column="74">
        <block type="pseudo"><return pos:line="18" pos:column="9">return <expr><name pos:line="18" pos:column="16">NULL<pos:position pos:line="18" pos:column="20"/></name></expr>;<pos:position pos:line="18" pos:column="21"/></return></block></then></if></block></for>
    <expr_stmt><expr><name pos:line="19" pos:column="5">needSep<pos:position pos:line="19" pos:column="12"/></name> <operator pos:line="19" pos:column="13">=<pos:position pos:line="19" pos:column="14"/></operator> <name pos:line="19" pos:column="15">XML_TRUE<pos:position pos:line="19" pos:column="23"/></name></expr>;<pos:position pos:line="19" pos:column="24"/></expr_stmt>
  }<pos:position pos:line="20" pos:column="4"/></block></then></if>

  <expr_stmt><expr><call><name pos:line="22" pos:column="3">hashTableIterInit<pos:position pos:line="22" pos:column="20"/></name><argument_list pos:line="22" pos:column="20">(<argument><expr><operator pos:line="22" pos:column="21">&amp;<pos:position pos:line="22" pos:column="26"/></operator><name pos:line="22" pos:column="22">iter<pos:position pos:line="22" pos:column="26"/></name></expr></argument>, <argument><expr><operator pos:line="22" pos:column="28">&amp;<pos:position pos:line="22" pos:column="33"/></operator><operator pos:line="22" pos:column="29">(<pos:position pos:line="22" pos:column="30"/></operator><name><name pos:line="22" pos:column="30">dtd<pos:position pos:line="22" pos:column="33"/></name><operator pos:line="22" pos:column="33">-&gt;<pos:position pos:line="22" pos:column="38"/></operator><name pos:line="22" pos:column="35">prefixes<pos:position pos:line="22" pos:column="43"/></name></name><operator pos:line="22" pos:column="43">)<pos:position pos:line="22" pos:column="44"/></operator></expr></argument>)<pos:position pos:line="22" pos:column="45"/></argument_list></call></expr>;<pos:position pos:line="22" pos:column="46"/></expr_stmt>
  <for pos:line="23" pos:column="3">for <control pos:line="23" pos:column="7">(<init pos:line="23" pos:column="8">;<pos:position pos:line="23" pos:column="9"/></init><condition pos:line="23" pos:column="9">;<pos:position pos:line="23" pos:column="10"/></condition><incr/>)<pos:position pos:line="23" pos:column="11"/></control> <block pos:line="23" pos:column="12">{
    <decl_stmt><decl><type><name pos:line="24" pos:column="5">int<pos:position pos:line="24" pos:column="8"/></name></type> <name pos:line="24" pos:column="9">i<pos:position pos:line="24" pos:column="10"/></name></decl>;<pos:position pos:line="24" pos:column="11"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="25" pos:column="5">int<pos:position pos:line="25" pos:column="8"/></name></type> <name pos:line="25" pos:column="9">len<pos:position pos:line="25" pos:column="12"/></name></decl>;<pos:position pos:line="25" pos:column="13"/></decl_stmt>
    <decl_stmt><decl><type><specifier pos:line="26" pos:column="5">const<pos:position pos:line="26" pos:column="10"/></specifier> <name pos:line="26" pos:column="11">XML_Char<pos:position pos:line="26" pos:column="19"/></name> <modifier pos:line="26" pos:column="20">*<pos:position pos:line="26" pos:column="21"/></modifier></type><name pos:line="26" pos:column="21">s<pos:position pos:line="26" pos:column="22"/></name></decl>;<pos:position pos:line="26" pos:column="23"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="27" pos:column="5">PREFIX<pos:position pos:line="27" pos:column="11"/></name> <modifier pos:line="27" pos:column="12">*<pos:position pos:line="27" pos:column="13"/></modifier></type><name pos:line="27" pos:column="13">prefix<pos:position pos:line="27" pos:column="19"/></name> <init pos:line="27" pos:column="20">= <expr><operator pos:line="27" pos:column="22">(<pos:position pos:line="27" pos:column="23"/></operator><name pos:line="27" pos:column="23">PREFIX<pos:position pos:line="27" pos:column="29"/></name> <operator pos:line="27" pos:column="30">*<pos:position pos:line="27" pos:column="31"/></operator><operator pos:line="27" pos:column="31">)<pos:position pos:line="27" pos:column="32"/></operator><call><name pos:line="27" pos:column="32">hashTableIterNext<pos:position pos:line="27" pos:column="49"/></name><argument_list pos:line="27" pos:column="49">(<argument><expr><operator pos:line="27" pos:column="50">&amp;<pos:position pos:line="27" pos:column="55"/></operator><name pos:line="27" pos:column="51">iter<pos:position pos:line="27" pos:column="55"/></name></expr></argument>)<pos:position pos:line="27" pos:column="56"/></argument_list></call></expr></init></decl>;<pos:position pos:line="27" pos:column="57"/></decl_stmt>
    <if pos:line="28" pos:column="5">if <condition pos:line="28" pos:column="8">(<expr><operator pos:line="28" pos:column="9">!<pos:position pos:line="28" pos:column="10"/></operator><name pos:line="28" pos:column="10">prefix<pos:position pos:line="28" pos:column="16"/></name></expr>)<pos:position pos:line="28" pos:column="17"/></condition><then pos:line="28" pos:column="17">
      <block type="pseudo"><break pos:line="29" pos:column="7">break;<pos:position pos:line="29" pos:column="13"/></break></block></then></if>
    <if pos:line="30" pos:column="5">if <condition pos:line="30" pos:column="8">(<expr><operator pos:line="30" pos:column="9">!<pos:position pos:line="30" pos:column="10"/></operator><name><name pos:line="30" pos:column="10">prefix<pos:position pos:line="30" pos:column="16"/></name><operator pos:line="30" pos:column="16">-&gt;<pos:position pos:line="30" pos:column="21"/></operator><name pos:line="30" pos:column="18">binding<pos:position pos:line="30" pos:column="25"/></name></name></expr>)<pos:position pos:line="30" pos:column="26"/></condition><then pos:line="30" pos:column="26">
      <block type="pseudo"><continue pos:line="31" pos:column="7">continue;<pos:position pos:line="31" pos:column="16"/></continue></block></then></if>
    <if pos:line="32" pos:column="5">if <condition pos:line="32" pos:column="8">(<expr><name pos:line="32" pos:column="9">needSep<pos:position pos:line="32" pos:column="16"/></name> <operator pos:line="32" pos:column="17">&amp;&amp;<pos:position pos:line="32" pos:column="27"/></operator> <operator pos:line="32" pos:column="20">!<pos:position pos:line="32" pos:column="21"/></operator><call><name pos:line="32" pos:column="21">poolAppendChar<pos:position pos:line="32" pos:column="35"/></name><argument_list pos:line="32" pos:column="35">(<argument><expr><operator pos:line="32" pos:column="36">&amp;<pos:position pos:line="32" pos:column="41"/></operator><name pos:line="32" pos:column="37">tempPool<pos:position pos:line="32" pos:column="45"/></name></expr></argument>, <argument><expr><name pos:line="32" pos:column="47">CONTEXT_SEP<pos:position pos:line="32" pos:column="58"/></name></expr></argument>)<pos:position pos:line="32" pos:column="59"/></argument_list></call></expr>)<pos:position pos:line="32" pos:column="60"/></condition><then pos:line="32" pos:column="60">
      <block type="pseudo"><return pos:line="33" pos:column="7">return <expr><name pos:line="33" pos:column="14">NULL<pos:position pos:line="33" pos:column="18"/></name></expr>;<pos:position pos:line="33" pos:column="19"/></return></block></then></if>
    <for pos:line="34" pos:column="5">for <control pos:line="34" pos:column="9">(<init><expr><name pos:line="34" pos:column="10">s<pos:position pos:line="34" pos:column="11"/></name> <operator pos:line="34" pos:column="12">=<pos:position pos:line="34" pos:column="13"/></operator> <name><name pos:line="34" pos:column="14">prefix<pos:position pos:line="34" pos:column="20"/></name><operator pos:line="34" pos:column="20">-&gt;<pos:position pos:line="34" pos:column="25"/></operator><name pos:line="34" pos:column="22">name<pos:position pos:line="34" pos:column="26"/></name></name></expr>;<pos:position pos:line="34" pos:column="27"/></init> <condition><expr><operator pos:line="34" pos:column="28">*<pos:position pos:line="34" pos:column="29"/></operator><name pos:line="34" pos:column="29">s<pos:position pos:line="34" pos:column="30"/></name></expr>;<pos:position pos:line="34" pos:column="31"/></condition> <incr><expr><name pos:line="34" pos:column="32">s<pos:position pos:line="34" pos:column="33"/></name><operator pos:line="34" pos:column="33">++<pos:position pos:line="34" pos:column="35"/></operator></expr></incr>)<pos:position pos:line="34" pos:column="36"/></control>
      <block type="pseudo"><if pos:line="35" pos:column="7">if <condition pos:line="35" pos:column="10">(<expr><operator pos:line="35" pos:column="11">!<pos:position pos:line="35" pos:column="12"/></operator><call><name pos:line="35" pos:column="12">poolAppendChar<pos:position pos:line="35" pos:column="26"/></name><argument_list pos:line="35" pos:column="26">(<argument><expr><operator pos:line="35" pos:column="27">&amp;<pos:position pos:line="35" pos:column="32"/></operator><name pos:line="35" pos:column="28">tempPool<pos:position pos:line="35" pos:column="36"/></name></expr></argument>, <argument><expr><operator pos:line="35" pos:column="38">*<pos:position pos:line="35" pos:column="39"/></operator><name pos:line="35" pos:column="39">s<pos:position pos:line="35" pos:column="40"/></name></expr></argument>)<pos:position pos:line="35" pos:column="41"/></argument_list></call></expr>)<pos:position pos:line="35" pos:column="42"/></condition><then pos:line="35" pos:column="42">
        <block type="pseudo"><return pos:line="36" pos:column="9">return <expr><name pos:line="36" pos:column="16">NULL<pos:position pos:line="36" pos:column="20"/></name></expr>;<pos:position pos:line="36" pos:column="21"/></return></block></then></if></block></for>
    <if pos:line="37" pos:column="5">if <condition pos:line="37" pos:column="8">(<expr><operator pos:line="37" pos:column="9">!<pos:position pos:line="37" pos:column="10"/></operator><call><name pos:line="37" pos:column="10">poolAppendChar<pos:position pos:line="37" pos:column="24"/></name><argument_list pos:line="37" pos:column="24">(<argument><expr><operator pos:line="37" pos:column="25">&amp;<pos:position pos:line="37" pos:column="30"/></operator><name pos:line="37" pos:column="26">tempPool<pos:position pos:line="37" pos:column="34"/></name></expr></argument>, <argument><expr><call><name pos:line="37" pos:column="36">XML_T<pos:position pos:line="37" pos:column="41"/></name><argument_list pos:line="37" pos:column="41">(<argument><expr><literal type="char" pos:line="37" pos:column="42">'='<pos:position pos:line="37" pos:column="45"/></literal></expr></argument>)<pos:position pos:line="37" pos:column="46"/></argument_list></call></expr></argument>)<pos:position pos:line="37" pos:column="47"/></argument_list></call></expr>)<pos:position pos:line="37" pos:column="48"/></condition><then pos:line="37" pos:column="48">
      <block type="pseudo"><return pos:line="38" pos:column="7">return <expr><name pos:line="38" pos:column="14">NULL<pos:position pos:line="38" pos:column="18"/></name></expr>;<pos:position pos:line="38" pos:column="19"/></return></block></then></if>
    <expr_stmt><expr><name pos:line="39" pos:column="5">len<pos:position pos:line="39" pos:column="8"/></name> <operator pos:line="39" pos:column="9">=<pos:position pos:line="39" pos:column="10"/></operator> <name><name pos:line="39" pos:column="11">prefix<pos:position pos:line="39" pos:column="17"/></name><operator pos:line="39" pos:column="17">-&gt;<pos:position pos:line="39" pos:column="22"/></operator><name pos:line="39" pos:column="19">binding<pos:position pos:line="39" pos:column="26"/></name><operator pos:line="39" pos:column="26">-&gt;<pos:position pos:line="39" pos:column="31"/></operator><name pos:line="39" pos:column="28">uriLen<pos:position pos:line="39" pos:column="34"/></name></name></expr>;<pos:position pos:line="39" pos:column="35"/></expr_stmt>
    <if pos:line="40" pos:column="5">if <condition pos:line="40" pos:column="8">(<expr><name pos:line="40" pos:column="9">namespaceSeparator<pos:position pos:line="40" pos:column="27"/></name> <operator pos:line="40" pos:column="28">!=<pos:position pos:line="40" pos:column="30"/></operator> <call><name pos:line="40" pos:column="31">XML_T<pos:position pos:line="40" pos:column="36"/></name><argument_list pos:line="40" pos:column="36">(<argument><expr><literal type="char" pos:line="40" pos:column="37">'\0'<pos:position pos:line="40" pos:column="41"/></literal></expr></argument>)<pos:position pos:line="40" pos:column="42"/></argument_list></call></expr>)<pos:position pos:line="40" pos:column="43"/></condition><then pos:line="40" pos:column="43">
      <block type="pseudo"><expr_stmt><expr><name pos:line="41" pos:column="7">len<pos:position pos:line="41" pos:column="10"/></name><operator pos:line="41" pos:column="10">--<pos:position pos:line="41" pos:column="12"/></operator></expr>;<pos:position pos:line="41" pos:column="13"/></expr_stmt></block></then></if>
    <for pos:line="42" pos:column="5">for <control pos:line="42" pos:column="9">(<init><expr><name pos:line="42" pos:column="10">i<pos:position pos:line="42" pos:column="11"/></name> <operator pos:line="42" pos:column="12">=<pos:position pos:line="42" pos:column="13"/></operator> <literal type="number" pos:line="42" pos:column="14">0<pos:position pos:line="42" pos:column="15"/></literal></expr>;<pos:position pos:line="42" pos:column="16"/></init> <condition><expr><name pos:line="42" pos:column="17">i<pos:position pos:line="42" pos:column="18"/></name> <operator pos:line="42" pos:column="19">&lt;<pos:position pos:line="42" pos:column="23"/></operator> <name pos:line="42" pos:column="21">len<pos:position pos:line="42" pos:column="24"/></name></expr>;<pos:position pos:line="42" pos:column="25"/></condition> <incr><expr><name pos:line="42" pos:column="26">i<pos:position pos:line="42" pos:column="27"/></name><operator pos:line="42" pos:column="27">++<pos:position pos:line="42" pos:column="29"/></operator></expr></incr>)<pos:position pos:line="42" pos:column="30"/></control>
      <block type="pseudo"><if pos:line="43" pos:column="7">if <condition pos:line="43" pos:column="10">(<expr><operator pos:line="43" pos:column="11">!<pos:position pos:line="43" pos:column="12"/></operator><call><name pos:line="43" pos:column="12">poolAppendChar<pos:position pos:line="43" pos:column="26"/></name><argument_list pos:line="43" pos:column="26">(<argument><expr><operator pos:line="43" pos:column="27">&amp;<pos:position pos:line="43" pos:column="32"/></operator><name pos:line="43" pos:column="28">tempPool<pos:position pos:line="43" pos:column="36"/></name></expr></argument>, <argument><expr><name><name pos:line="43" pos:column="38">prefix<pos:position pos:line="43" pos:column="44"/></name><operator pos:line="43" pos:column="44">-&gt;<pos:position pos:line="43" pos:column="49"/></operator><name pos:line="43" pos:column="46">binding<pos:position pos:line="43" pos:column="53"/></name><operator pos:line="43" pos:column="53">-&gt;<pos:position pos:line="43" pos:column="58"/></operator><name pos:line="43" pos:column="55">uri<pos:position pos:line="43" pos:column="58"/></name><index pos:line="43" pos:column="58">[<expr><name pos:line="43" pos:column="59">i<pos:position pos:line="43" pos:column="60"/></name></expr>]<pos:position pos:line="43" pos:column="61"/></index></name></expr></argument>)<pos:position pos:line="43" pos:column="62"/></argument_list></call></expr>)<pos:position pos:line="43" pos:column="63"/></condition><then pos:line="43" pos:column="63">
        <block type="pseudo"><return pos:line="44" pos:column="9">return <expr><name pos:line="44" pos:column="16">NULL<pos:position pos:line="44" pos:column="20"/></name></expr>;<pos:position pos:line="44" pos:column="21"/></return></block></then></if></block></for>
    <expr_stmt><expr><name pos:line="45" pos:column="5">needSep<pos:position pos:line="45" pos:column="12"/></name> <operator pos:line="45" pos:column="13">=<pos:position pos:line="45" pos:column="14"/></operator> <name pos:line="45" pos:column="15">XML_TRUE<pos:position pos:line="45" pos:column="23"/></name></expr>;<pos:position pos:line="45" pos:column="24"/></expr_stmt>
  }<pos:position pos:line="46" pos:column="4"/></block></for>


  <expr_stmt><expr><call><name pos:line="49" pos:column="3">hashTableIterInit<pos:position pos:line="49" pos:column="20"/></name><argument_list pos:line="49" pos:column="20">(<argument><expr><operator pos:line="49" pos:column="21">&amp;<pos:position pos:line="49" pos:column="26"/></operator><name pos:line="49" pos:column="22">iter<pos:position pos:line="49" pos:column="26"/></name></expr></argument>, <argument><expr><operator pos:line="49" pos:column="28">&amp;<pos:position pos:line="49" pos:column="33"/></operator><operator pos:line="49" pos:column="29">(<pos:position pos:line="49" pos:column="30"/></operator><name><name pos:line="49" pos:column="30">dtd<pos:position pos:line="49" pos:column="33"/></name><operator pos:line="49" pos:column="33">-&gt;<pos:position pos:line="49" pos:column="38"/></operator><name pos:line="49" pos:column="35">generalEntities<pos:position pos:line="49" pos:column="50"/></name></name><operator pos:line="49" pos:column="50">)<pos:position pos:line="49" pos:column="51"/></operator></expr></argument>)<pos:position pos:line="49" pos:column="52"/></argument_list></call></expr>;<pos:position pos:line="49" pos:column="53"/></expr_stmt>
  <for pos:line="50" pos:column="3">for <control pos:line="50" pos:column="7">(<init pos:line="50" pos:column="8">;<pos:position pos:line="50" pos:column="9"/></init><condition pos:line="50" pos:column="9">;<pos:position pos:line="50" pos:column="10"/></condition><incr/>)<pos:position pos:line="50" pos:column="11"/></control> <block pos:line="50" pos:column="12">{
    <decl_stmt><decl><type><specifier pos:line="51" pos:column="5">const<pos:position pos:line="51" pos:column="10"/></specifier> <name pos:line="51" pos:column="11">XML_Char<pos:position pos:line="51" pos:column="19"/></name> <modifier pos:line="51" pos:column="20">*<pos:position pos:line="51" pos:column="21"/></modifier></type><name pos:line="51" pos:column="21">s<pos:position pos:line="51" pos:column="22"/></name></decl>;<pos:position pos:line="51" pos:column="23"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="52" pos:column="5">ENTITY<pos:position pos:line="52" pos:column="11"/></name> <modifier pos:line="52" pos:column="12">*<pos:position pos:line="52" pos:column="13"/></modifier></type><name pos:line="52" pos:column="13">e<pos:position pos:line="52" pos:column="14"/></name> <init pos:line="52" pos:column="15">= <expr><operator pos:line="52" pos:column="17">(<pos:position pos:line="52" pos:column="18"/></operator><name pos:line="52" pos:column="18">ENTITY<pos:position pos:line="52" pos:column="24"/></name> <operator pos:line="52" pos:column="25">*<pos:position pos:line="52" pos:column="26"/></operator><operator pos:line="52" pos:column="26">)<pos:position pos:line="52" pos:column="27"/></operator><call><name pos:line="52" pos:column="27">hashTableIterNext<pos:position pos:line="52" pos:column="44"/></name><argument_list pos:line="52" pos:column="44">(<argument><expr><operator pos:line="52" pos:column="45">&amp;<pos:position pos:line="52" pos:column="50"/></operator><name pos:line="52" pos:column="46">iter<pos:position pos:line="52" pos:column="50"/></name></expr></argument>)<pos:position pos:line="52" pos:column="51"/></argument_list></call></expr></init></decl>;<pos:position pos:line="52" pos:column="52"/></decl_stmt>
    <if pos:line="53" pos:column="5">if <condition pos:line="53" pos:column="8">(<expr><operator pos:line="53" pos:column="9">!<pos:position pos:line="53" pos:column="10"/></operator><name pos:line="53" pos:column="10">e<pos:position pos:line="53" pos:column="11"/></name></expr>)<pos:position pos:line="53" pos:column="12"/></condition><then pos:line="53" pos:column="12">
      <block type="pseudo"><break pos:line="54" pos:column="7">break;<pos:position pos:line="54" pos:column="13"/></break></block></then></if>
    <if pos:line="55" pos:column="5">if <condition pos:line="55" pos:column="8">(<expr><operator pos:line="55" pos:column="9">!<pos:position pos:line="55" pos:column="10"/></operator><name><name pos:line="55" pos:column="10">e<pos:position pos:line="55" pos:column="11"/></name><operator pos:line="55" pos:column="11">-&gt;<pos:position pos:line="55" pos:column="16"/></operator><name pos:line="55" pos:column="13">open<pos:position pos:line="55" pos:column="17"/></name></name></expr>)<pos:position pos:line="55" pos:column="18"/></condition><then pos:line="55" pos:column="18">
      <block type="pseudo"><continue pos:line="56" pos:column="7">continue;<pos:position pos:line="56" pos:column="16"/></continue></block></then></if>
    <if pos:line="57" pos:column="5">if <condition pos:line="57" pos:column="8">(<expr><name pos:line="57" pos:column="9">needSep<pos:position pos:line="57" pos:column="16"/></name> <operator pos:line="57" pos:column="17">&amp;&amp;<pos:position pos:line="57" pos:column="27"/></operator> <operator pos:line="57" pos:column="20">!<pos:position pos:line="57" pos:column="21"/></operator><call><name pos:line="57" pos:column="21">poolAppendChar<pos:position pos:line="57" pos:column="35"/></name><argument_list pos:line="57" pos:column="35">(<argument><expr><operator pos:line="57" pos:column="36">&amp;<pos:position pos:line="57" pos:column="41"/></operator><name pos:line="57" pos:column="37">tempPool<pos:position pos:line="57" pos:column="45"/></name></expr></argument>, <argument><expr><name pos:line="57" pos:column="47">CONTEXT_SEP<pos:position pos:line="57" pos:column="58"/></name></expr></argument>)<pos:position pos:line="57" pos:column="59"/></argument_list></call></expr>)<pos:position pos:line="57" pos:column="60"/></condition><then pos:line="57" pos:column="60">
      <block type="pseudo"><return pos:line="58" pos:column="7">return <expr><name pos:line="58" pos:column="14">NULL<pos:position pos:line="58" pos:column="18"/></name></expr>;<pos:position pos:line="58" pos:column="19"/></return></block></then></if>
    <for pos:line="59" pos:column="5">for <control pos:line="59" pos:column="9">(<init><expr><name pos:line="59" pos:column="10">s<pos:position pos:line="59" pos:column="11"/></name> <operator pos:line="59" pos:column="12">=<pos:position pos:line="59" pos:column="13"/></operator> <name><name pos:line="59" pos:column="14">e<pos:position pos:line="59" pos:column="15"/></name><operator pos:line="59" pos:column="15">-&gt;<pos:position pos:line="59" pos:column="20"/></operator><name pos:line="59" pos:column="17">name<pos:position pos:line="59" pos:column="21"/></name></name></expr>;<pos:position pos:line="59" pos:column="22"/></init> <condition><expr><operator pos:line="59" pos:column="23">*<pos:position pos:line="59" pos:column="24"/></operator><name pos:line="59" pos:column="24">s<pos:position pos:line="59" pos:column="25"/></name></expr>;<pos:position pos:line="59" pos:column="26"/></condition> <incr><expr><name pos:line="59" pos:column="27">s<pos:position pos:line="59" pos:column="28"/></name><operator pos:line="59" pos:column="28">++<pos:position pos:line="59" pos:column="30"/></operator></expr></incr>)<pos:position pos:line="59" pos:column="31"/></control>
      <block type="pseudo"><if pos:line="60" pos:column="7">if <condition pos:line="60" pos:column="10">(<expr><operator pos:line="60" pos:column="11">!<pos:position pos:line="60" pos:column="12"/></operator><call><name pos:line="60" pos:column="12">poolAppendChar<pos:position pos:line="60" pos:column="26"/></name><argument_list pos:line="60" pos:column="26">(<argument><expr><operator pos:line="60" pos:column="27">&amp;<pos:position pos:line="60" pos:column="32"/></operator><name pos:line="60" pos:column="28">tempPool<pos:position pos:line="60" pos:column="36"/></name></expr></argument>, <argument><expr><operator pos:line="60" pos:column="38">*<pos:position pos:line="60" pos:column="39"/></operator><name pos:line="60" pos:column="39">s<pos:position pos:line="60" pos:column="40"/></name></expr></argument>)<pos:position pos:line="60" pos:column="41"/></argument_list></call></expr>)<pos:position pos:line="60" pos:column="42"/></condition><then pos:line="60" pos:column="42">
        <block type="pseudo"><return pos:line="61" pos:column="9">return <expr><literal type="number" pos:line="61" pos:column="16">0<pos:position pos:line="61" pos:column="17"/></literal></expr>;<pos:position pos:line="61" pos:column="18"/></return></block></then></if></block></for>
    <expr_stmt><expr><name pos:line="62" pos:column="5">needSep<pos:position pos:line="62" pos:column="12"/></name> <operator pos:line="62" pos:column="13">=<pos:position pos:line="62" pos:column="14"/></operator> <name pos:line="62" pos:column="15">XML_TRUE<pos:position pos:line="62" pos:column="23"/></name></expr>;<pos:position pos:line="62" pos:column="24"/></expr_stmt>
  }<pos:position pos:line="63" pos:column="4"/></block></for>

  <if pos:line="65" pos:column="3">if <condition pos:line="65" pos:column="6">(<expr><operator pos:line="65" pos:column="7">!<pos:position pos:line="65" pos:column="8"/></operator><call><name pos:line="65" pos:column="8">poolAppendChar<pos:position pos:line="65" pos:column="22"/></name><argument_list pos:line="65" pos:column="22">(<argument><expr><operator pos:line="65" pos:column="23">&amp;<pos:position pos:line="65" pos:column="28"/></operator><name pos:line="65" pos:column="24">tempPool<pos:position pos:line="65" pos:column="32"/></name></expr></argument>, <argument><expr><call><name pos:line="65" pos:column="34">XML_T<pos:position pos:line="65" pos:column="39"/></name><argument_list pos:line="65" pos:column="39">(<argument><expr><literal type="char" pos:line="65" pos:column="40">'\0'<pos:position pos:line="65" pos:column="44"/></literal></expr></argument>)<pos:position pos:line="65" pos:column="45"/></argument_list></call></expr></argument>)<pos:position pos:line="65" pos:column="46"/></argument_list></call></expr>)<pos:position pos:line="65" pos:column="47"/></condition><then pos:line="65" pos:column="47">
    <block type="pseudo"><return pos:line="66" pos:column="5">return <expr><name pos:line="66" pos:column="12">NULL<pos:position pos:line="66" pos:column="16"/></name></expr>;<pos:position pos:line="66" pos:column="17"/></return></block></then></if>
  <return pos:line="67" pos:column="3">return <expr><name><name pos:line="67" pos:column="10">tempPool<pos:position pos:line="67" pos:column="18"/></name><operator pos:line="67" pos:column="18">.<pos:position pos:line="67" pos:column="19"/></operator><name pos:line="67" pos:column="19">start<pos:position pos:line="67" pos:column="24"/></name></name></expr>;<pos:position pos:line="67" pos:column="25"/></return>
}<pos:position pos:line="68" pos:column="2"/></block></function></unit>

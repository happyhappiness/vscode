<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/httpd/gumtree/httpd_function_2077.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">DH<pos:position pos:line="1" pos:column="3"/></name> <modifier pos:line="1" pos:column="4">*<pos:position pos:line="1" pos:column="5"/></modifier></type><name pos:line="1" pos:column="5">ssl_callback_TmpDH<pos:position pos:line="1" pos:column="23"/></name><parameter_list pos:line="1" pos:column="23">(<parameter><decl><type><name pos:line="1" pos:column="24">SSL<pos:position pos:line="1" pos:column="27"/></name> <modifier pos:line="1" pos:column="28">*<pos:position pos:line="1" pos:column="29"/></modifier></type><name pos:line="1" pos:column="29">ssl<pos:position pos:line="1" pos:column="32"/></name></decl></parameter>, <parameter><decl><type><name pos:line="1" pos:column="34">int<pos:position pos:line="1" pos:column="37"/></name></type> <name pos:line="1" pos:column="38">export<pos:position pos:line="1" pos:column="44"/></name></decl></parameter>, <parameter><decl><type><name pos:line="1" pos:column="46">int<pos:position pos:line="1" pos:column="49"/></name></type> <name pos:line="1" pos:column="50">keylen<pos:position pos:line="1" pos:column="56"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="57"/></parameter_list>
<block pos:line="2" pos:column="1">{
    <decl_stmt><decl><type><name pos:line="3" pos:column="5">conn_rec<pos:position pos:line="3" pos:column="13"/></name> <modifier pos:line="3" pos:column="14">*<pos:position pos:line="3" pos:column="15"/></modifier></type><name pos:line="3" pos:column="15">c<pos:position pos:line="3" pos:column="16"/></name> <init pos:line="3" pos:column="17">= <expr><operator pos:line="3" pos:column="19">(<pos:position pos:line="3" pos:column="20"/></operator><name pos:line="3" pos:column="20">conn_rec<pos:position pos:line="3" pos:column="28"/></name> <operator pos:line="3" pos:column="29">*<pos:position pos:line="3" pos:column="30"/></operator><operator pos:line="3" pos:column="30">)<pos:position pos:line="3" pos:column="31"/></operator><call><name pos:line="3" pos:column="31">SSL_get_app_data<pos:position pos:line="3" pos:column="47"/></name><argument_list pos:line="3" pos:column="47">(<argument><expr><name pos:line="3" pos:column="48">ssl<pos:position pos:line="3" pos:column="51"/></name></expr></argument>)<pos:position pos:line="3" pos:column="52"/></argument_list></call></expr></init></decl>;<pos:position pos:line="3" pos:column="53"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="4" pos:column="5">EVP_PKEY<pos:position pos:line="4" pos:column="13"/></name> <modifier pos:line="4" pos:column="14">*<pos:position pos:line="4" pos:column="15"/></modifier></type><name pos:line="4" pos:column="15">pkey<pos:position pos:line="4" pos:column="19"/></name></decl>;<pos:position pos:line="4" pos:column="20"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="5" pos:column="5">int<pos:position pos:line="5" pos:column="8"/></name></type> <name pos:line="5" pos:column="9">type<pos:position pos:line="5" pos:column="13"/></name></decl>;<pos:position pos:line="5" pos:column="14"/></decl_stmt>

    <expr_stmt><expr><call><name pos:line="7" pos:column="5">ap_log_cerror<pos:position pos:line="7" pos:column="18"/></name><argument_list pos:line="7" pos:column="18">(<argument><expr><name pos:line="7" pos:column="19">APLOG_MARK<pos:position pos:line="7" pos:column="29"/></name></expr></argument>, <argument><expr><name pos:line="7" pos:column="31">APLOG_DEBUG<pos:position pos:line="7" pos:column="42"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="7" pos:column="44">0<pos:position pos:line="7" pos:column="45"/></literal></expr></argument>, <argument><expr><name pos:line="7" pos:column="47">c<pos:position pos:line="7" pos:column="48"/></name></expr></argument>,
                  <argument><expr><literal type="string" pos:line="8" pos:column="19">"handing out built-in DH parameters for %d-bit "<pos:position pos:line="8" pos:column="67"/></literal>
                  <literal type="string" pos:line="9" pos:column="19">"authenticated connection"<pos:position pos:line="9" pos:column="45"/></literal></expr></argument>, <argument><expr><name pos:line="9" pos:column="47">keylen<pos:position pos:line="9" pos:column="53"/></name></expr></argument>)<pos:position pos:line="9" pos:column="54"/></argument_list></call></expr>;<pos:position pos:line="9" pos:column="55"/></expr_stmt>

<cpp:ifdef pos:line="11" pos:column="1">#<cpp:directive pos:line="11" pos:column="2">ifdef<pos:position pos:line="11" pos:column="7"/></cpp:directive> <name pos:line="11" pos:column="8">SSL_CERT_SET_SERVER<pos:position pos:line="11" pos:column="27"/></name></cpp:ifdef>
    <comment type="block" pos:line="12" pos:column="5">/*
     * When multiple certs/keys are configured for the SSL_CTX: make sure
     * that we get the private key which is indeed used for the current
     * SSL connection (available in OpenSSL 1.0.2 or later only)
     */</comment>
    <expr_stmt><expr><call><name pos:line="17" pos:column="5">SSL_set_current_cert<pos:position pos:line="17" pos:column="25"/></name><argument_list pos:line="17" pos:column="25">(<argument><expr><name pos:line="17" pos:column="26">ssl<pos:position pos:line="17" pos:column="29"/></name></expr></argument>, <argument><expr><name pos:line="17" pos:column="31">SSL_CERT_SET_SERVER<pos:position pos:line="17" pos:column="50"/></name></expr></argument>)<pos:position pos:line="17" pos:column="51"/></argument_list></call></expr>;<pos:position pos:line="17" pos:column="52"/></expr_stmt>
<cpp:endif pos:line="18" pos:column="1">#<cpp:directive pos:line="18" pos:column="2">endif<pos:position pos:line="18" pos:column="7"/></cpp:directive></cpp:endif>
    <expr_stmt><expr><name pos:line="19" pos:column="5">pkey<pos:position pos:line="19" pos:column="9"/></name> <operator pos:line="19" pos:column="10">=<pos:position pos:line="19" pos:column="11"/></operator> <call><name pos:line="19" pos:column="12">SSL_get_privatekey<pos:position pos:line="19" pos:column="30"/></name><argument_list pos:line="19" pos:column="30">(<argument><expr><name pos:line="19" pos:column="31">ssl<pos:position pos:line="19" pos:column="34"/></name></expr></argument>)<pos:position pos:line="19" pos:column="35"/></argument_list></call></expr>;<pos:position pos:line="19" pos:column="36"/></expr_stmt>
    <expr_stmt><expr><name pos:line="20" pos:column="5">type<pos:position pos:line="20" pos:column="9"/></name> <operator pos:line="20" pos:column="10">=<pos:position pos:line="20" pos:column="11"/></operator> <ternary><condition><expr><name pos:line="20" pos:column="12">pkey<pos:position pos:line="20" pos:column="16"/></name></expr> ?<pos:position pos:line="20" pos:column="18"/></condition><then pos:line="20" pos:column="18"> <expr><call><name pos:line="20" pos:column="19">EVP_PKEY_type<pos:position pos:line="20" pos:column="32"/></name><argument_list pos:line="20" pos:column="32">(<argument><expr><name><name pos:line="20" pos:column="33">pkey<pos:position pos:line="20" pos:column="37"/></name><operator pos:line="20" pos:column="37">-&gt;<pos:position pos:line="20" pos:column="42"/></operator><name pos:line="20" pos:column="39">type<pos:position pos:line="20" pos:column="43"/></name></name></expr></argument>)<pos:position pos:line="20" pos:column="44"/></argument_list></call></expr> <pos:position pos:line="20" pos:column="45"/></then><else pos:line="20" pos:column="45">: <expr><name pos:line="20" pos:column="47">EVP_PKEY_NONE<pos:position pos:line="20" pos:column="60"/></name></expr></else></ternary></expr>;<pos:position pos:line="20" pos:column="61"/></expr_stmt>

    <comment type="block" pos:line="22" pos:column="5">/*
     * OpenSSL will call us with either keylen == 512 or keylen == 1024
     * (see the definition of SSL_EXPORT_PKEYLENGTH in ssl_locl.h).
     * Adjust the DH parameter length according to the size of the
     * RSA/DSA private key used for the current connection, and always
     * use at least 1024-bit parameters.
     * Note: This may cause interoperability issues with implementations
     * which limit their DH support to 1024 bit - e.g. Java 7 and earlier.
     * In this case, SSLCertificateFile can be used to specify fixed
     * 1024-bit DH parameters (with the effect that OpenSSL skips this
     * callback).
     */</comment>
    <if pos:line="34" pos:column="5">if <condition pos:line="34" pos:column="8">(<expr><operator pos:line="34" pos:column="9">(<pos:position pos:line="34" pos:column="10"/></operator><name pos:line="34" pos:column="10">type<pos:position pos:line="34" pos:column="14"/></name> <operator pos:line="34" pos:column="15">==<pos:position pos:line="34" pos:column="17"/></operator> <name pos:line="34" pos:column="18">EVP_PKEY_RSA<pos:position pos:line="34" pos:column="30"/></name><operator pos:line="34" pos:column="30">)<pos:position pos:line="34" pos:column="31"/></operator> <operator pos:line="34" pos:column="32">||<pos:position pos:line="34" pos:column="34"/></operator> <operator pos:line="34" pos:column="35">(<pos:position pos:line="34" pos:column="36"/></operator><name pos:line="34" pos:column="36">type<pos:position pos:line="34" pos:column="40"/></name> <operator pos:line="34" pos:column="41">==<pos:position pos:line="34" pos:column="43"/></operator> <name pos:line="34" pos:column="44">EVP_PKEY_DSA<pos:position pos:line="34" pos:column="56"/></name><operator pos:line="34" pos:column="56">)<pos:position pos:line="34" pos:column="57"/></operator></expr>)<pos:position pos:line="34" pos:column="58"/></condition><then pos:line="34" pos:column="58"> <block pos:line="34" pos:column="59">{
        <expr_stmt><expr><name pos:line="35" pos:column="9">keylen<pos:position pos:line="35" pos:column="15"/></name> <operator pos:line="35" pos:column="16">=<pos:position pos:line="35" pos:column="17"/></operator> <call><name pos:line="35" pos:column="18">EVP_PKEY_bits<pos:position pos:line="35" pos:column="31"/></name><argument_list pos:line="35" pos:column="31">(<argument><expr><name pos:line="35" pos:column="32">pkey<pos:position pos:line="35" pos:column="36"/></name></expr></argument>)<pos:position pos:line="35" pos:column="37"/></argument_list></call></expr>;<pos:position pos:line="35" pos:column="38"/></expr_stmt>
    }<pos:position pos:line="36" pos:column="6"/></block></then></if>

    <return pos:line="38" pos:column="5">return <expr><call><name pos:line="38" pos:column="12">ssl_dh_GetTmpParam<pos:position pos:line="38" pos:column="30"/></name><argument_list pos:line="38" pos:column="30">(<argument><expr><name pos:line="38" pos:column="31">keylen<pos:position pos:line="38" pos:column="37"/></name></expr></argument>)<pos:position pos:line="38" pos:column="38"/></argument_list></call></expr>;<pos:position pos:line="38" pos:column="39"/></return>
}<pos:position pos:line="39" pos:column="2"/></block></function></unit>

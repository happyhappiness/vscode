<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/httpd/gumtree/httpd_repos_function_3243_httpd-2.0.55.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">BOOL<pos:position pos:line="1" pos:column="12"/></name></type>
<name pos:line="2" pos:column="1">compile_branch<pos:position pos:line="2" pos:column="15"/></name><parameter_list pos:line="2" pos:column="15">(<parameter><decl><type><name pos:line="2" pos:column="16">int<pos:position pos:line="2" pos:column="19"/></name></type> <name pos:line="2" pos:column="20">options<pos:position pos:line="2" pos:column="27"/></name></decl></parameter>, <parameter><decl><type><name pos:line="2" pos:column="29">int<pos:position pos:line="2" pos:column="32"/></name> <modifier pos:line="2" pos:column="33">*<pos:position pos:line="2" pos:column="34"/></modifier></type><name pos:line="2" pos:column="34">brackets<pos:position pos:line="2" pos:column="42"/></name></decl></parameter>, <parameter><decl><type><name pos:line="2" pos:column="44">uschar<pos:position pos:line="2" pos:column="50"/></name> <modifier pos:line="2" pos:column="51">*<pos:position pos:line="2" pos:column="52"/></modifier><modifier pos:line="2" pos:column="52">*<pos:position pos:line="2" pos:column="53"/></modifier></type><name pos:line="2" pos:column="53">codeptr<pos:position pos:line="2" pos:column="60"/></name></decl></parameter>,
  <parameter><decl><type><specifier pos:line="3" pos:column="3">const<pos:position pos:line="3" pos:column="8"/></specifier> <name pos:line="3" pos:column="9">uschar<pos:position pos:line="3" pos:column="15"/></name> <modifier pos:line="3" pos:column="16">*<pos:position pos:line="3" pos:column="17"/></modifier><modifier pos:line="3" pos:column="17">*<pos:position pos:line="3" pos:column="18"/></modifier></type><name pos:line="3" pos:column="18">ptrptr<pos:position pos:line="3" pos:column="24"/></name></decl></parameter>, <parameter><decl><type><specifier pos:line="3" pos:column="26">const<pos:position pos:line="3" pos:column="31"/></specifier> <name pos:line="3" pos:column="32">char<pos:position pos:line="3" pos:column="36"/></name> <modifier pos:line="3" pos:column="37">*<pos:position pos:line="3" pos:column="38"/></modifier><modifier pos:line="3" pos:column="38">*<pos:position pos:line="3" pos:column="39"/></modifier></type><name pos:line="3" pos:column="39">errorptr<pos:position pos:line="3" pos:column="47"/></name></decl></parameter>, <parameter><decl><type><name pos:line="3" pos:column="49">int<pos:position pos:line="3" pos:column="52"/></name> <modifier pos:line="3" pos:column="53">*<pos:position pos:line="3" pos:column="54"/></modifier></type><name pos:line="3" pos:column="54">optchanged<pos:position pos:line="3" pos:column="64"/></name></decl></parameter>,
  <parameter><decl><type><name pos:line="4" pos:column="3">int<pos:position pos:line="4" pos:column="6"/></name> <modifier pos:line="4" pos:column="7">*<pos:position pos:line="4" pos:column="8"/></modifier></type><name pos:line="4" pos:column="8">reqchar<pos:position pos:line="4" pos:column="15"/></name></decl></parameter>, <parameter><decl><type><name pos:line="4" pos:column="17">int<pos:position pos:line="4" pos:column="20"/></name> <modifier pos:line="4" pos:column="21">*<pos:position pos:line="4" pos:column="22"/></modifier></type><name pos:line="4" pos:column="22">countlits<pos:position pos:line="4" pos:column="31"/></name></decl></parameter>, <parameter><decl><type><name pos:line="4" pos:column="33">compile_data<pos:position pos:line="4" pos:column="45"/></name> <modifier pos:line="4" pos:column="46">*<pos:position pos:line="4" pos:column="47"/></modifier></type><name pos:line="4" pos:column="47">cd<pos:position pos:line="4" pos:column="49"/></name></decl></parameter>)<pos:position pos:line="4" pos:column="50"/></parameter_list>
<block pos:line="5" pos:column="1">{
<decl_stmt><decl><type><name pos:line="6" pos:column="1">int<pos:position pos:line="6" pos:column="4"/></name></type> <name pos:line="6" pos:column="5">repeat_type<pos:position pos:line="6" pos:column="16"/></name></decl>, <decl><type ref="prev"/><name pos:line="6" pos:column="18">op_type<pos:position pos:line="6" pos:column="25"/></name></decl>;<pos:position pos:line="6" pos:column="26"/></decl_stmt>
<decl_stmt><decl><type><name pos:line="7" pos:column="1">int<pos:position pos:line="7" pos:column="4"/></name></type> <name pos:line="7" pos:column="5">repeat_min<pos:position pos:line="7" pos:column="15"/></name></decl>, <decl><type ref="prev"/><name pos:line="7" pos:column="17">repeat_max<pos:position pos:line="7" pos:column="27"/></name></decl>;<pos:position pos:line="7" pos:column="28"/></decl_stmt>
<decl_stmt><decl><type><name pos:line="8" pos:column="1">int<pos:position pos:line="8" pos:column="4"/></name></type> <name pos:line="8" pos:column="5">bravalue<pos:position pos:line="8" pos:column="13"/></name></decl>, <decl><type ref="prev"/><name pos:line="8" pos:column="15">length<pos:position pos:line="8" pos:column="21"/></name></decl>;<pos:position pos:line="8" pos:column="22"/></decl_stmt>
<decl_stmt><decl><type><name pos:line="9" pos:column="1">int<pos:position pos:line="9" pos:column="4"/></name></type> <name pos:line="9" pos:column="5">greedy_default<pos:position pos:line="9" pos:column="19"/></name></decl>, <decl><type ref="prev"/><name pos:line="9" pos:column="21">greedy_non_default<pos:position pos:line="9" pos:column="39"/></name></decl>;<pos:position pos:line="9" pos:column="40"/></decl_stmt>
<decl_stmt><decl><type><name pos:line="10" pos:column="1">int<pos:position pos:line="10" pos:column="4"/></name></type> <name pos:line="10" pos:column="5">prevreqchar<pos:position pos:line="10" pos:column="16"/></name></decl>;<pos:position pos:line="10" pos:column="17"/></decl_stmt>
<decl_stmt><decl><type><name pos:line="11" pos:column="1">int<pos:position pos:line="11" pos:column="4"/></name></type> <name pos:line="11" pos:column="5">condcount<pos:position pos:line="11" pos:column="14"/></name> <init pos:line="11" pos:column="15">= <expr><literal type="number" pos:line="11" pos:column="17">0<pos:position pos:line="11" pos:column="18"/></literal></expr></init></decl>;<pos:position pos:line="11" pos:column="19"/></decl_stmt>
<decl_stmt><decl><type><name pos:line="12" pos:column="1">int<pos:position pos:line="12" pos:column="4"/></name></type> <name pos:line="12" pos:column="5">subcountlits<pos:position pos:line="12" pos:column="17"/></name> <init pos:line="12" pos:column="18">= <expr><literal type="number" pos:line="12" pos:column="20">0<pos:position pos:line="12" pos:column="21"/></literal></expr></init></decl>;<pos:position pos:line="12" pos:column="22"/></decl_stmt>
<decl_stmt><decl><type><specifier pos:line="13" pos:column="1">register<pos:position pos:line="13" pos:column="9"/></specifier> <name pos:line="13" pos:column="10">int<pos:position pos:line="13" pos:column="13"/></name></type> <name pos:line="13" pos:column="14">c<pos:position pos:line="13" pos:column="15"/></name></decl>;<pos:position pos:line="13" pos:column="16"/></decl_stmt>
<decl_stmt><decl><type><specifier pos:line="14" pos:column="1">register<pos:position pos:line="14" pos:column="9"/></specifier> <name pos:line="14" pos:column="10">uschar<pos:position pos:line="14" pos:column="16"/></name> <modifier pos:line="14" pos:column="17">*<pos:position pos:line="14" pos:column="18"/></modifier></type><name pos:line="14" pos:column="18">code<pos:position pos:line="14" pos:column="22"/></name> <init pos:line="14" pos:column="23">= <expr><operator pos:line="14" pos:column="25">*<pos:position pos:line="14" pos:column="26"/></operator><name pos:line="14" pos:column="26">codeptr<pos:position pos:line="14" pos:column="33"/></name></expr></init></decl>;<pos:position pos:line="14" pos:column="34"/></decl_stmt>
<decl_stmt><decl><type><name pos:line="15" pos:column="1">uschar<pos:position pos:line="15" pos:column="7"/></name> <modifier pos:line="15" pos:column="8">*<pos:position pos:line="15" pos:column="9"/></modifier></type><name pos:line="15" pos:column="9">tempcode<pos:position pos:line="15" pos:column="17"/></name></decl>;<pos:position pos:line="15" pos:column="18"/></decl_stmt>
<decl_stmt><decl><type><specifier pos:line="16" pos:column="1">const<pos:position pos:line="16" pos:column="6"/></specifier> <name pos:line="16" pos:column="7">uschar<pos:position pos:line="16" pos:column="13"/></name> <modifier pos:line="16" pos:column="14">*<pos:position pos:line="16" pos:column="15"/></modifier></type><name pos:line="16" pos:column="15">ptr<pos:position pos:line="16" pos:column="18"/></name> <init pos:line="16" pos:column="19">= <expr><operator pos:line="16" pos:column="21">*<pos:position pos:line="16" pos:column="22"/></operator><name pos:line="16" pos:column="22">ptrptr<pos:position pos:line="16" pos:column="28"/></name></expr></init></decl>;<pos:position pos:line="16" pos:column="29"/></decl_stmt>
<decl_stmt><decl><type><specifier pos:line="17" pos:column="1">const<pos:position pos:line="17" pos:column="6"/></specifier> <name pos:line="17" pos:column="7">uschar<pos:position pos:line="17" pos:column="13"/></name> <modifier pos:line="17" pos:column="14">*<pos:position pos:line="17" pos:column="15"/></modifier></type><name pos:line="17" pos:column="15">tempptr<pos:position pos:line="17" pos:column="22"/></name></decl>;<pos:position pos:line="17" pos:column="23"/></decl_stmt>
<decl_stmt><decl><type><name pos:line="18" pos:column="1">uschar<pos:position pos:line="18" pos:column="7"/></name> <modifier pos:line="18" pos:column="8">*<pos:position pos:line="18" pos:column="9"/></modifier></type><name pos:line="18" pos:column="9">previous<pos:position pos:line="18" pos:column="17"/></name> <init pos:line="18" pos:column="18">= <expr><name pos:line="18" pos:column="20">NULL<pos:position pos:line="18" pos:column="24"/></name></expr></init></decl>;<pos:position pos:line="18" pos:column="25"/></decl_stmt>
<decl_stmt><decl><type><name pos:line="19" pos:column="1">uschar<pos:position pos:line="19" pos:column="7"/></name> <name><name pos:line="19" pos:column="8">class<pos:position pos:line="19" pos:column="13"/></name></name>[32]<pos:position pos:line="19" pos:column="17"/></type></decl>;<pos:position pos:line="19" pos:column="18"/></decl_stmt>

<comment type="block" pos:line="21" pos:column="1">/* Set up the default and non-default settings for greediness */</comment>

<expr_stmt><expr><name pos:line="23" pos:column="1">greedy_default<pos:position pos:line="23" pos:column="15"/></name> <operator pos:line="23" pos:column="16">=<pos:position pos:line="23" pos:column="17"/></operator> <operator pos:line="23" pos:column="18">(<pos:position pos:line="23" pos:column="19"/></operator><operator pos:line="23" pos:column="19">(<pos:position pos:line="23" pos:column="20"/></operator><name pos:line="23" pos:column="20">options<pos:position pos:line="23" pos:column="27"/></name> <operator pos:line="23" pos:column="28">&amp;<pos:position pos:line="23" pos:column="33"/></operator> <name pos:line="23" pos:column="30">PCRE_UNGREEDY<pos:position pos:line="23" pos:column="43"/></name><operator pos:line="23" pos:column="43">)<pos:position pos:line="23" pos:column="44"/></operator> <operator pos:line="23" pos:column="45">!=<pos:position pos:line="23" pos:column="47"/></operator> <literal type="number" pos:line="23" pos:column="48">0<pos:position pos:line="23" pos:column="49"/></literal><operator pos:line="23" pos:column="49">)<pos:position pos:line="23" pos:column="50"/></operator></expr>;<pos:position pos:line="23" pos:column="51"/></expr_stmt>
<expr_stmt><expr><name pos:line="24" pos:column="1">greedy_non_default<pos:position pos:line="24" pos:column="19"/></name> <operator pos:line="24" pos:column="20">=<pos:position pos:line="24" pos:column="21"/></operator> <name pos:line="24" pos:column="22">greedy_default<pos:position pos:line="24" pos:column="36"/></name> <operator pos:line="24" pos:column="37">^<pos:position pos:line="24" pos:column="38"/></operator> <literal type="number" pos:line="24" pos:column="39">1<pos:position pos:line="24" pos:column="40"/></literal></expr>;<pos:position pos:line="24" pos:column="41"/></expr_stmt>

<comment type="block" pos:line="26" pos:column="1">/* Initialize no required char, and count of literals */</comment>

<expr_stmt><expr><operator pos:line="28" pos:column="1">*<pos:position pos:line="28" pos:column="2"/></operator><name pos:line="28" pos:column="2">reqchar<pos:position pos:line="28" pos:column="9"/></name> <operator pos:line="28" pos:column="10">=<pos:position pos:line="28" pos:column="11"/></operator> <name pos:line="28" pos:column="12">prevreqchar<pos:position pos:line="28" pos:column="23"/></name> <operator pos:line="28" pos:column="24">=<pos:position pos:line="28" pos:column="25"/></operator> <operator pos:line="28" pos:column="26">-<pos:position pos:line="28" pos:column="27"/></operator><literal type="number" pos:line="28" pos:column="27">1<pos:position pos:line="28" pos:column="28"/></literal></expr>;<pos:position pos:line="28" pos:column="29"/></expr_stmt>
<expr_stmt><expr><operator pos:line="29" pos:column="1">*<pos:position pos:line="29" pos:column="2"/></operator><name pos:line="29" pos:column="2">countlits<pos:position pos:line="29" pos:column="11"/></name> <operator pos:line="29" pos:column="12">=<pos:position pos:line="29" pos:column="13"/></operator> <literal type="number" pos:line="29" pos:column="14">0<pos:position pos:line="29" pos:column="15"/></literal></expr>;<pos:position pos:line="29" pos:column="16"/></expr_stmt>

<comment type="block" pos:line="31" pos:column="1">/* Switch on next character until the end of the branch */</comment>

<for pos:line="33" pos:column="1">for <control pos:line="33" pos:column="5">(<init pos:line="33" pos:column="6">;<pos:position pos:line="33" pos:column="7"/></init><condition pos:line="33" pos:column="7">;<pos:position pos:line="33" pos:column="8"/></condition> <incr><expr><name pos:line="33" pos:column="9">ptr<pos:position pos:line="33" pos:column="12"/></name><operator pos:line="33" pos:column="12">++<pos:position pos:line="33" pos:column="14"/></operator></expr></incr>)<pos:position pos:line="33" pos:column="15"/></control>
  <block pos:line="34" pos:column="3">{
  <decl_stmt><decl><type><name pos:line="35" pos:column="3">BOOL<pos:position pos:line="35" pos:column="7"/></name></type> <name pos:line="35" pos:column="8">negate_class<pos:position pos:line="35" pos:column="20"/></name></decl>;<pos:position pos:line="35" pos:column="21"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="36" pos:column="3">int<pos:position pos:line="36" pos:column="6"/></name></type> <name pos:line="36" pos:column="7">class_charcount<pos:position pos:line="36" pos:column="22"/></name></decl>;<pos:position pos:line="36" pos:column="23"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="37" pos:column="3">int<pos:position pos:line="37" pos:column="6"/></name></type> <name pos:line="37" pos:column="7">class_lastchar<pos:position pos:line="37" pos:column="21"/></name></decl>;<pos:position pos:line="37" pos:column="22"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="38" pos:column="3">int<pos:position pos:line="38" pos:column="6"/></name></type> <name pos:line="38" pos:column="7">newoptions<pos:position pos:line="38" pos:column="17"/></name></decl>;<pos:position pos:line="38" pos:column="18"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="39" pos:column="3">int<pos:position pos:line="39" pos:column="6"/></name></type> <name pos:line="39" pos:column="7">skipbytes<pos:position pos:line="39" pos:column="16"/></name></decl>;<pos:position pos:line="39" pos:column="17"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="40" pos:column="3">int<pos:position pos:line="40" pos:column="6"/></name></type> <name pos:line="40" pos:column="7">subreqchar<pos:position pos:line="40" pos:column="17"/></name></decl>;<pos:position pos:line="40" pos:column="18"/></decl_stmt>

  <expr_stmt><expr><name pos:line="42" pos:column="3">c<pos:position pos:line="42" pos:column="4"/></name> <operator pos:line="42" pos:column="5">=<pos:position pos:line="42" pos:column="6"/></operator> <operator pos:line="42" pos:column="7">*<pos:position pos:line="42" pos:column="8"/></operator><name pos:line="42" pos:column="8">ptr<pos:position pos:line="42" pos:column="11"/></name></expr>;<pos:position pos:line="42" pos:column="12"/></expr_stmt>
  <if pos:line="43" pos:column="3">if <condition pos:line="43" pos:column="6">(<expr><operator pos:line="43" pos:column="7">(<pos:position pos:line="43" pos:column="8"/></operator><name pos:line="43" pos:column="8">options<pos:position pos:line="43" pos:column="15"/></name> <operator pos:line="43" pos:column="16">&amp;<pos:position pos:line="43" pos:column="21"/></operator> <name pos:line="43" pos:column="18">PCRE_EXTENDED<pos:position pos:line="43" pos:column="31"/></name><operator pos:line="43" pos:column="31">)<pos:position pos:line="43" pos:column="32"/></operator> <operator pos:line="43" pos:column="33">!=<pos:position pos:line="43" pos:column="35"/></operator> <literal type="number" pos:line="43" pos:column="36">0<pos:position pos:line="43" pos:column="37"/></literal></expr>)<pos:position pos:line="43" pos:column="38"/></condition><then pos:line="43" pos:column="38">
    <block pos:line="44" pos:column="5">{
    <if pos:line="45" pos:column="5">if <condition pos:line="45" pos:column="8">(<expr><operator pos:line="45" pos:column="9">(<pos:position pos:line="45" pos:column="10"/></operator><name><name pos:line="45" pos:column="10">cd<pos:position pos:line="45" pos:column="12"/></name><operator pos:line="45" pos:column="12">-&gt;<pos:position pos:line="45" pos:column="17"/></operator><name pos:line="45" pos:column="14">ctypes<pos:position pos:line="45" pos:column="20"/></name><index pos:line="45" pos:column="20">[<expr><name pos:line="45" pos:column="21">c<pos:position pos:line="45" pos:column="22"/></name></expr>]<pos:position pos:line="45" pos:column="23"/></index></name> <operator pos:line="45" pos:column="24">&amp;<pos:position pos:line="45" pos:column="29"/></operator> <name pos:line="45" pos:column="26">ctype_space<pos:position pos:line="45" pos:column="37"/></name><operator pos:line="45" pos:column="37">)<pos:position pos:line="45" pos:column="38"/></operator> <operator pos:line="45" pos:column="39">!=<pos:position pos:line="45" pos:column="41"/></operator> <literal type="number" pos:line="45" pos:column="42">0<pos:position pos:line="45" pos:column="43"/></literal></expr>)<pos:position pos:line="45" pos:column="44"/></condition><then pos:line="45" pos:column="44"> <block type="pseudo"><continue pos:line="45" pos:column="45">continue;<pos:position pos:line="45" pos:column="54"/></continue></block></then></if>
    <if pos:line="46" pos:column="5">if <condition pos:line="46" pos:column="8">(<expr><name pos:line="46" pos:column="9">c<pos:position pos:line="46" pos:column="10"/></name> <operator pos:line="46" pos:column="11">==<pos:position pos:line="46" pos:column="13"/></operator> <literal type="char" pos:line="46" pos:column="14">'#'<pos:position pos:line="46" pos:column="17"/></literal></expr>)<pos:position pos:line="46" pos:column="18"/></condition><then pos:line="46" pos:column="18">
      <block pos:line="47" pos:column="7">{
      <comment type="block" pos:line="48" pos:column="7">/* The space before the ; is to avoid a warning on a silly compiler
      on the Macintosh. */</comment>
      <while pos:line="50" pos:column="7">while <condition pos:line="50" pos:column="13">(<expr><operator pos:line="50" pos:column="14">(<pos:position pos:line="50" pos:column="15"/></operator><name pos:line="50" pos:column="15">c<pos:position pos:line="50" pos:column="16"/></name> <operator pos:line="50" pos:column="17">=<pos:position pos:line="50" pos:column="18"/></operator> <operator pos:line="50" pos:column="19">*<pos:position pos:line="50" pos:column="20"/></operator><operator pos:line="50" pos:column="20">(<pos:position pos:line="50" pos:column="21"/></operator><operator pos:line="50" pos:column="21">++<pos:position pos:line="50" pos:column="23"/></operator><name pos:line="50" pos:column="23">ptr<pos:position pos:line="50" pos:column="26"/></name><operator pos:line="50" pos:column="26">)<pos:position pos:line="50" pos:column="27"/></operator><operator pos:line="50" pos:column="27">)<pos:position pos:line="50" pos:column="28"/></operator> <operator pos:line="50" pos:column="29">!=<pos:position pos:line="50" pos:column="31"/></operator> <literal type="number" pos:line="50" pos:column="32">0<pos:position pos:line="50" pos:column="33"/></literal> <operator pos:line="50" pos:column="34">&amp;&amp;<pos:position pos:line="50" pos:column="44"/></operator> <name pos:line="50" pos:column="37">c<pos:position pos:line="50" pos:column="38"/></name> <operator pos:line="50" pos:column="39">!=<pos:position pos:line="50" pos:column="41"/></operator> <name pos:line="50" pos:column="42">NEWLINE<pos:position pos:line="50" pos:column="49"/></name></expr>)<pos:position pos:line="50" pos:column="50"/></condition> <block type="pseudo"><empty_stmt pos:line="50" pos:column="51">;<pos:position pos:line="50" pos:column="52"/></empty_stmt></block></while>
      <continue pos:line="51" pos:column="7">continue;<pos:position pos:line="51" pos:column="16"/></continue>
      }<pos:position pos:line="52" pos:column="8"/></block></then></if>
    }<pos:position pos:line="53" pos:column="6"/></block></then></if>

  <switch pos:line="55" pos:column="3">switch<condition pos:line="55" pos:column="9">(<expr><name pos:line="55" pos:column="10">c<pos:position pos:line="55" pos:column="11"/></name></expr>)<pos:position pos:line="55" pos:column="12"/></condition>
    <block pos:line="56" pos:column="5">{
    <comment type="block" pos:line="57" pos:column="5">/* The branch terminates at end of string, |, or ). */</comment>

    <case pos:line="59" pos:column="5">case <expr><literal type="number" pos:line="59" pos:column="10">0<pos:position pos:line="59" pos:column="11"/></literal></expr>:<pos:position pos:line="59" pos:column="12"/></case>
    <case pos:line="60" pos:column="5">case <expr><literal type="char" pos:line="60" pos:column="10">'|'<pos:position pos:line="60" pos:column="13"/></literal></expr>:<pos:position pos:line="60" pos:column="14"/></case>
    <case pos:line="61" pos:column="5">case <expr><literal type="char" pos:line="61" pos:column="10">')'<pos:position pos:line="61" pos:column="13"/></literal></expr>:<pos:position pos:line="61" pos:column="14"/></case>
    <expr_stmt><expr><operator pos:line="62" pos:column="5">*<pos:position pos:line="62" pos:column="6"/></operator><name pos:line="62" pos:column="6">codeptr<pos:position pos:line="62" pos:column="13"/></name> <operator pos:line="62" pos:column="14">=<pos:position pos:line="62" pos:column="15"/></operator> <name pos:line="62" pos:column="16">code<pos:position pos:line="62" pos:column="20"/></name></expr>;<pos:position pos:line="62" pos:column="21"/></expr_stmt>
    <expr_stmt><expr><operator pos:line="63" pos:column="5">*<pos:position pos:line="63" pos:column="6"/></operator><name pos:line="63" pos:column="6">ptrptr<pos:position pos:line="63" pos:column="12"/></name> <operator pos:line="63" pos:column="13">=<pos:position pos:line="63" pos:column="14"/></operator> <name pos:line="63" pos:column="15">ptr<pos:position pos:line="63" pos:column="18"/></name></expr>;<pos:position pos:line="63" pos:column="19"/></expr_stmt>
    <return pos:line="64" pos:column="5">return <expr><name pos:line="64" pos:column="12">TRUE<pos:position pos:line="64" pos:column="16"/></name></expr>;<pos:position pos:line="64" pos:column="17"/></return>

    <comment type="block" pos:line="66" pos:column="5">/* Handle single-character metacharacters */</comment>

    <case pos:line="68" pos:column="5">case <expr><literal type="char" pos:line="68" pos:column="10">'^'<pos:position pos:line="68" pos:column="13"/></literal></expr>:<pos:position pos:line="68" pos:column="14"/></case>
    <expr_stmt><expr><name pos:line="69" pos:column="5">previous<pos:position pos:line="69" pos:column="13"/></name> <operator pos:line="69" pos:column="14">=<pos:position pos:line="69" pos:column="15"/></operator> <name pos:line="69" pos:column="16">NULL<pos:position pos:line="69" pos:column="20"/></name></expr>;<pos:position pos:line="69" pos:column="21"/></expr_stmt>
    <expr_stmt><expr><operator pos:line="70" pos:column="5">*<pos:position pos:line="70" pos:column="6"/></operator><name pos:line="70" pos:column="6">code<pos:position pos:line="70" pos:column="10"/></name><operator pos:line="70" pos:column="10">++<pos:position pos:line="70" pos:column="12"/></operator> <operator pos:line="70" pos:column="13">=<pos:position pos:line="70" pos:column="14"/></operator> <name pos:line="70" pos:column="15">OP_CIRC<pos:position pos:line="70" pos:column="22"/></name></expr>;<pos:position pos:line="70" pos:column="23"/></expr_stmt>
    <break pos:line="71" pos:column="5">break;<pos:position pos:line="71" pos:column="11"/></break>

    <case pos:line="73" pos:column="5">case <expr><literal type="char" pos:line="73" pos:column="10">'$'<pos:position pos:line="73" pos:column="13"/></literal></expr>:<pos:position pos:line="73" pos:column="14"/></case>
    <expr_stmt><expr><name pos:line="74" pos:column="5">previous<pos:position pos:line="74" pos:column="13"/></name> <operator pos:line="74" pos:column="14">=<pos:position pos:line="74" pos:column="15"/></operator> <name pos:line="74" pos:column="16">NULL<pos:position pos:line="74" pos:column="20"/></name></expr>;<pos:position pos:line="74" pos:column="21"/></expr_stmt>
    <expr_stmt><expr><operator pos:line="75" pos:column="5">*<pos:position pos:line="75" pos:column="6"/></operator><name pos:line="75" pos:column="6">code<pos:position pos:line="75" pos:column="10"/></name><operator pos:line="75" pos:column="10">++<pos:position pos:line="75" pos:column="12"/></operator> <operator pos:line="75" pos:column="13">=<pos:position pos:line="75" pos:column="14"/></operator> <name pos:line="75" pos:column="15">OP_DOLL<pos:position pos:line="75" pos:column="22"/></name></expr>;<pos:position pos:line="75" pos:column="23"/></expr_stmt>
    <break pos:line="76" pos:column="5">break;<pos:position pos:line="76" pos:column="11"/></break>

    <case pos:line="78" pos:column="5">case <expr><literal type="char" pos:line="78" pos:column="10">'.'<pos:position pos:line="78" pos:column="13"/></literal></expr>:<pos:position pos:line="78" pos:column="14"/></case>
    <expr_stmt><expr><name pos:line="79" pos:column="5">previous<pos:position pos:line="79" pos:column="13"/></name> <operator pos:line="79" pos:column="14">=<pos:position pos:line="79" pos:column="15"/></operator> <name pos:line="79" pos:column="16">code<pos:position pos:line="79" pos:column="20"/></name></expr>;<pos:position pos:line="79" pos:column="21"/></expr_stmt>
    <expr_stmt><expr><operator pos:line="80" pos:column="5">*<pos:position pos:line="80" pos:column="6"/></operator><name pos:line="80" pos:column="6">code<pos:position pos:line="80" pos:column="10"/></name><operator pos:line="80" pos:column="10">++<pos:position pos:line="80" pos:column="12"/></operator> <operator pos:line="80" pos:column="13">=<pos:position pos:line="80" pos:column="14"/></operator> <name pos:line="80" pos:column="15">OP_ANY<pos:position pos:line="80" pos:column="21"/></name></expr>;<pos:position pos:line="80" pos:column="22"/></expr_stmt>
    <break pos:line="81" pos:column="5">break;<pos:position pos:line="81" pos:column="11"/></break>

    <comment type="block" pos:line="83" pos:column="5">/* Character classes. These always build a 32-byte bitmap of the permitted
    characters, except in the special case where there is only one character.
    For negated classes, we build the map as usual, then invert it at the end.
    */</comment>

    <case pos:line="88" pos:column="5">case <expr><literal type="char" pos:line="88" pos:column="10">'['<pos:position pos:line="88" pos:column="13"/></literal></expr>:<pos:position pos:line="88" pos:column="14"/></case>
    <expr_stmt><expr><name pos:line="89" pos:column="5">previous<pos:position pos:line="89" pos:column="13"/></name> <operator pos:line="89" pos:column="14">=<pos:position pos:line="89" pos:column="15"/></operator> <name pos:line="89" pos:column="16">code<pos:position pos:line="89" pos:column="20"/></name></expr>;<pos:position pos:line="89" pos:column="21"/></expr_stmt>
    <expr_stmt><expr><operator pos:line="90" pos:column="5">*<pos:position pos:line="90" pos:column="6"/></operator><name pos:line="90" pos:column="6">code<pos:position pos:line="90" pos:column="10"/></name><operator pos:line="90" pos:column="10">++<pos:position pos:line="90" pos:column="12"/></operator> <operator pos:line="90" pos:column="13">=<pos:position pos:line="90" pos:column="14"/></operator> <name pos:line="90" pos:column="15">OP_CLASS<pos:position pos:line="90" pos:column="23"/></name></expr>;<pos:position pos:line="90" pos:column="24"/></expr_stmt>

    <comment type="block" pos:line="92" pos:column="5">/* If the first character is '^', set the negation flag and skip it. */</comment>

    <if pos:line="94" pos:column="5">if <condition pos:line="94" pos:column="8">(<expr><operator pos:line="94" pos:column="9">(<pos:position pos:line="94" pos:column="10"/></operator><name pos:line="94" pos:column="10">c<pos:position pos:line="94" pos:column="11"/></name> <operator pos:line="94" pos:column="12">=<pos:position pos:line="94" pos:column="13"/></operator> <operator pos:line="94" pos:column="14">*<pos:position pos:line="94" pos:column="15"/></operator><operator pos:line="94" pos:column="15">(<pos:position pos:line="94" pos:column="16"/></operator><operator pos:line="94" pos:column="16">++<pos:position pos:line="94" pos:column="18"/></operator><name pos:line="94" pos:column="18">ptr<pos:position pos:line="94" pos:column="21"/></name><operator pos:line="94" pos:column="21">)<pos:position pos:line="94" pos:column="22"/></operator><operator pos:line="94" pos:column="22">)<pos:position pos:line="94" pos:column="23"/></operator> <operator pos:line="94" pos:column="24">==<pos:position pos:line="94" pos:column="26"/></operator> <literal type="char" pos:line="94" pos:column="27">'^'<pos:position pos:line="94" pos:column="30"/></literal></expr>)<pos:position pos:line="94" pos:column="31"/></condition><then pos:line="94" pos:column="31">
      <block pos:line="95" pos:column="7">{
      <expr_stmt><expr><name pos:line="96" pos:column="7">negate_class<pos:position pos:line="96" pos:column="19"/></name> <operator pos:line="96" pos:column="20">=<pos:position pos:line="96" pos:column="21"/></operator> <name pos:line="96" pos:column="22">TRUE<pos:position pos:line="96" pos:column="26"/></name></expr>;<pos:position pos:line="96" pos:column="27"/></expr_stmt>
      <expr_stmt><expr><name pos:line="97" pos:column="7">c<pos:position pos:line="97" pos:column="8"/></name> <operator pos:line="97" pos:column="9">=<pos:position pos:line="97" pos:column="10"/></operator> <operator pos:line="97" pos:column="11">*<pos:position pos:line="97" pos:column="12"/></operator><operator pos:line="97" pos:column="12">(<pos:position pos:line="97" pos:column="13"/></operator><operator pos:line="97" pos:column="13">++<pos:position pos:line="97" pos:column="15"/></operator><name pos:line="97" pos:column="15">ptr<pos:position pos:line="97" pos:column="18"/></name><operator pos:line="97" pos:column="18">)<pos:position pos:line="97" pos:column="19"/></operator></expr>;<pos:position pos:line="97" pos:column="20"/></expr_stmt>
      }<pos:position pos:line="98" pos:column="8"/></block></then>
    <else pos:line="99" pos:column="5">else <block type="pseudo"><expr_stmt><expr><name pos:line="99" pos:column="10">negate_class<pos:position pos:line="99" pos:column="22"/></name> <operator pos:line="99" pos:column="23">=<pos:position pos:line="99" pos:column="24"/></operator> <name pos:line="99" pos:column="25">FALSE<pos:position pos:line="99" pos:column="30"/></name></expr>;<pos:position pos:line="99" pos:column="31"/></expr_stmt></block></else></if>

    <comment type="block" pos:line="101" pos:column="5">/* Keep a count of chars so that we can optimize the case of just a single
    character. */</comment>

    <expr_stmt><expr><name pos:line="104" pos:column="5">class_charcount<pos:position pos:line="104" pos:column="20"/></name> <operator pos:line="104" pos:column="21">=<pos:position pos:line="104" pos:column="22"/></operator> <literal type="number" pos:line="104" pos:column="23">0<pos:position pos:line="104" pos:column="24"/></literal></expr>;<pos:position pos:line="104" pos:column="25"/></expr_stmt>
    <expr_stmt><expr><name pos:line="105" pos:column="5">class_lastchar<pos:position pos:line="105" pos:column="19"/></name> <operator pos:line="105" pos:column="20">=<pos:position pos:line="105" pos:column="21"/></operator> <operator pos:line="105" pos:column="22">-<pos:position pos:line="105" pos:column="23"/></operator><literal type="number" pos:line="105" pos:column="23">1<pos:position pos:line="105" pos:column="24"/></literal></expr>;<pos:position pos:line="105" pos:column="25"/></expr_stmt>

    <comment type="block" pos:line="107" pos:column="5">/* Initialize the 32-char bit map to all zeros. We have to build the
    map in a temporary bit of store, in case the class contains only 1
    character, because in that case the compiled code doesn't use the
    bit map. */</comment>

    <expr_stmt><expr><call><name pos:line="112" pos:column="5">memset<pos:position pos:line="112" pos:column="11"/></name><argument_list pos:line="112" pos:column="11">(<argument><expr><name pos:line="112" pos:column="12">class<pos:position pos:line="112" pos:column="17"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="112" pos:column="19">0<pos:position pos:line="112" pos:column="20"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="112" pos:column="22">32<pos:position pos:line="112" pos:column="24"/></literal> <operator pos:line="112" pos:column="25">*<pos:position pos:line="112" pos:column="26"/></operator> <sizeof pos:line="112" pos:column="27">sizeof<argument_list pos:line="112" pos:column="33">(<argument><expr><name pos:line="112" pos:column="34">uschar<pos:position pos:line="112" pos:column="40"/></name></expr></argument>)<pos:position pos:line="112" pos:column="41"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="112" pos:column="42"/></argument_list></call></expr>;<pos:position pos:line="112" pos:column="43"/></expr_stmt>

    <comment type="block" pos:line="114" pos:column="5">/* Process characters until ] is reached. By writing this as a "do" it
    means that an initial ] is taken as a data character. */</comment>

    <do pos:line="117" pos:column="5">do
      <block pos:line="118" pos:column="7">{
      <if pos:line="119" pos:column="7">if <condition pos:line="119" pos:column="10">(<expr><name pos:line="119" pos:column="11">c<pos:position pos:line="119" pos:column="12"/></name> <operator pos:line="119" pos:column="13">==<pos:position pos:line="119" pos:column="15"/></operator> <literal type="number" pos:line="119" pos:column="16">0<pos:position pos:line="119" pos:column="17"/></literal></expr>)<pos:position pos:line="119" pos:column="18"/></condition><then pos:line="119" pos:column="18">
        <block pos:line="120" pos:column="9">{
        <expr_stmt><expr><operator pos:line="121" pos:column="9">*<pos:position pos:line="121" pos:column="10"/></operator><name pos:line="121" pos:column="10">errorptr<pos:position pos:line="121" pos:column="18"/></name> <operator pos:line="121" pos:column="19">=<pos:position pos:line="121" pos:column="20"/></operator> <name pos:line="121" pos:column="21">ERR6<pos:position pos:line="121" pos:column="25"/></name></expr>;<pos:position pos:line="121" pos:column="26"/></expr_stmt>
        <goto pos:line="122" pos:column="9">goto <name pos:line="122" pos:column="14">FAILED<pos:position pos:line="122" pos:column="20"/></name>;<pos:position pos:line="122" pos:column="21"/></goto>
        }<pos:position pos:line="123" pos:column="10"/></block></then></if>

      <comment type="block" pos:line="125" pos:column="7">/* Handle POSIX class names. Perl allows a negation extension of the
      form [:^name]. A square bracket that doesn't match the syntax is
      treated as a literal. We also recognize the POSIX constructions
      [.ch.] and [=ch=] ("collating elements") and fault them, as Perl
      5.6 does. */</comment>

      <if pos:line="131" pos:column="7">if <condition pos:line="131" pos:column="10">(<expr><name pos:line="131" pos:column="11">c<pos:position pos:line="131" pos:column="12"/></name> <operator pos:line="131" pos:column="13">==<pos:position pos:line="131" pos:column="15"/></operator> <literal type="char" pos:line="131" pos:column="16">'['<pos:position pos:line="131" pos:column="19"/></literal> <operator pos:line="131" pos:column="20">&amp;&amp;<pos:position pos:line="131" pos:column="30"/></operator>
          <operator pos:line="132" pos:column="11">(<pos:position pos:line="132" pos:column="12"/></operator><name><name pos:line="132" pos:column="12">ptr<pos:position pos:line="132" pos:column="15"/></name><index pos:line="132" pos:column="15">[<expr><literal type="number" pos:line="132" pos:column="16">1<pos:position pos:line="132" pos:column="17"/></literal></expr>]<pos:position pos:line="132" pos:column="18"/></index></name> <operator pos:line="132" pos:column="19">==<pos:position pos:line="132" pos:column="21"/></operator> <literal type="char" pos:line="132" pos:column="22">':'<pos:position pos:line="132" pos:column="25"/></literal> <operator pos:line="132" pos:column="26">||<pos:position pos:line="132" pos:column="28"/></operator> <name><name pos:line="132" pos:column="29">ptr<pos:position pos:line="132" pos:column="32"/></name><index pos:line="132" pos:column="32">[<expr><literal type="number" pos:line="132" pos:column="33">1<pos:position pos:line="132" pos:column="34"/></literal></expr>]<pos:position pos:line="132" pos:column="35"/></index></name> <operator pos:line="132" pos:column="36">==<pos:position pos:line="132" pos:column="38"/></operator> <literal type="char" pos:line="132" pos:column="39">'.'<pos:position pos:line="132" pos:column="42"/></literal> <operator pos:line="132" pos:column="43">||<pos:position pos:line="132" pos:column="45"/></operator> <name><name pos:line="132" pos:column="46">ptr<pos:position pos:line="132" pos:column="49"/></name><index pos:line="132" pos:column="49">[<expr><literal type="number" pos:line="132" pos:column="50">1<pos:position pos:line="132" pos:column="51"/></literal></expr>]<pos:position pos:line="132" pos:column="52"/></index></name> <operator pos:line="132" pos:column="53">==<pos:position pos:line="132" pos:column="55"/></operator> <literal type="char" pos:line="132" pos:column="56">'='<pos:position pos:line="132" pos:column="59"/></literal><operator pos:line="132" pos:column="59">)<pos:position pos:line="132" pos:column="60"/></operator> <operator pos:line="132" pos:column="61">&amp;&amp;<pos:position pos:line="132" pos:column="71"/></operator>
          <call><name pos:line="133" pos:column="11">check_posix_syntax<pos:position pos:line="133" pos:column="29"/></name><argument_list pos:line="133" pos:column="29">(<argument><expr><name pos:line="133" pos:column="30">ptr<pos:position pos:line="133" pos:column="33"/></name></expr></argument>, <argument><expr><operator pos:line="133" pos:column="35">&amp;<pos:position pos:line="133" pos:column="40"/></operator><name pos:line="133" pos:column="36">tempptr<pos:position pos:line="133" pos:column="43"/></name></expr></argument>, <argument><expr><name pos:line="133" pos:column="45">cd<pos:position pos:line="133" pos:column="47"/></name></expr></argument>)<pos:position pos:line="133" pos:column="48"/></argument_list></call></expr>)<pos:position pos:line="133" pos:column="49"/></condition><then pos:line="133" pos:column="49">
        <block pos:line="134" pos:column="9">{
        <decl_stmt><decl><type><name pos:line="135" pos:column="9">BOOL<pos:position pos:line="135" pos:column="13"/></name></type> <name pos:line="135" pos:column="14">local_negate<pos:position pos:line="135" pos:column="26"/></name> <init pos:line="135" pos:column="27">= <expr><name pos:line="135" pos:column="29">FALSE<pos:position pos:line="135" pos:column="34"/></name></expr></init></decl>;<pos:position pos:line="135" pos:column="35"/></decl_stmt>
        <decl_stmt><decl><type><name pos:line="136" pos:column="9">int<pos:position pos:line="136" pos:column="12"/></name></type> <name pos:line="136" pos:column="13">posix_class<pos:position pos:line="136" pos:column="24"/></name></decl>, <decl><type ref="prev"/><name pos:line="136" pos:column="26">i<pos:position pos:line="136" pos:column="27"/></name></decl>;<pos:position pos:line="136" pos:column="28"/></decl_stmt>
        <decl_stmt><decl><type><specifier pos:line="137" pos:column="9">register<pos:position pos:line="137" pos:column="17"/></specifier> <specifier pos:line="137" pos:column="18">const<pos:position pos:line="137" pos:column="23"/></specifier> <name pos:line="137" pos:column="24">uschar<pos:position pos:line="137" pos:column="30"/></name> <modifier pos:line="137" pos:column="31">*<pos:position pos:line="137" pos:column="32"/></modifier></type><name pos:line="137" pos:column="32">cbits<pos:position pos:line="137" pos:column="37"/></name> <init pos:line="137" pos:column="38">= <expr><name><name pos:line="137" pos:column="40">cd<pos:position pos:line="137" pos:column="42"/></name><operator pos:line="137" pos:column="42">-&gt;<pos:position pos:line="137" pos:column="47"/></operator><name pos:line="137" pos:column="44">cbits<pos:position pos:line="137" pos:column="49"/></name></name></expr></init></decl>;<pos:position pos:line="137" pos:column="50"/></decl_stmt>

        <if pos:line="139" pos:column="9">if <condition pos:line="139" pos:column="12">(<expr><name><name pos:line="139" pos:column="13">ptr<pos:position pos:line="139" pos:column="16"/></name><index pos:line="139" pos:column="16">[<expr><literal type="number" pos:line="139" pos:column="17">1<pos:position pos:line="139" pos:column="18"/></literal></expr>]<pos:position pos:line="139" pos:column="19"/></index></name> <operator pos:line="139" pos:column="20">!=<pos:position pos:line="139" pos:column="22"/></operator> <literal type="char" pos:line="139" pos:column="23">':'<pos:position pos:line="139" pos:column="26"/></literal></expr>)<pos:position pos:line="139" pos:column="27"/></condition><then pos:line="139" pos:column="27">
          <block pos:line="140" pos:column="11">{
          <expr_stmt><expr><operator pos:line="141" pos:column="11">*<pos:position pos:line="141" pos:column="12"/></operator><name pos:line="141" pos:column="12">errorptr<pos:position pos:line="141" pos:column="20"/></name> <operator pos:line="141" pos:column="21">=<pos:position pos:line="141" pos:column="22"/></operator> <name pos:line="141" pos:column="23">ERR31<pos:position pos:line="141" pos:column="28"/></name></expr>;<pos:position pos:line="141" pos:column="29"/></expr_stmt>
          <goto pos:line="142" pos:column="11">goto <name pos:line="142" pos:column="16">FAILED<pos:position pos:line="142" pos:column="22"/></name>;<pos:position pos:line="142" pos:column="23"/></goto>
          }<pos:position pos:line="143" pos:column="12"/></block></then></if>

        <expr_stmt><expr><name pos:line="145" pos:column="9">ptr<pos:position pos:line="145" pos:column="12"/></name> <operator pos:line="145" pos:column="13">+=<pos:position pos:line="145" pos:column="15"/></operator> <literal type="number" pos:line="145" pos:column="16">2<pos:position pos:line="145" pos:column="17"/></literal></expr>;<pos:position pos:line="145" pos:column="18"/></expr_stmt>
        <if pos:line="146" pos:column="9">if <condition pos:line="146" pos:column="12">(<expr><operator pos:line="146" pos:column="13">*<pos:position pos:line="146" pos:column="14"/></operator><name pos:line="146" pos:column="14">ptr<pos:position pos:line="146" pos:column="17"/></name> <operator pos:line="146" pos:column="18">==<pos:position pos:line="146" pos:column="20"/></operator> <literal type="char" pos:line="146" pos:column="21">'^'<pos:position pos:line="146" pos:column="24"/></literal></expr>)<pos:position pos:line="146" pos:column="25"/></condition><then pos:line="146" pos:column="25">
          <block pos:line="147" pos:column="11">{
          <expr_stmt><expr><name pos:line="148" pos:column="11">local_negate<pos:position pos:line="148" pos:column="23"/></name> <operator pos:line="148" pos:column="24">=<pos:position pos:line="148" pos:column="25"/></operator> <name pos:line="148" pos:column="26">TRUE<pos:position pos:line="148" pos:column="30"/></name></expr>;<pos:position pos:line="148" pos:column="31"/></expr_stmt>
          <expr_stmt><expr><name pos:line="149" pos:column="11">ptr<pos:position pos:line="149" pos:column="14"/></name><operator pos:line="149" pos:column="14">++<pos:position pos:line="149" pos:column="16"/></operator></expr>;<pos:position pos:line="149" pos:column="17"/></expr_stmt>
          }<pos:position pos:line="150" pos:column="12"/></block></then></if>

        <expr_stmt><expr><name pos:line="152" pos:column="9">posix_class<pos:position pos:line="152" pos:column="20"/></name> <operator pos:line="152" pos:column="21">=<pos:position pos:line="152" pos:column="22"/></operator> <call><name pos:line="152" pos:column="23">check_posix_name<pos:position pos:line="152" pos:column="39"/></name><argument_list pos:line="152" pos:column="39">(<argument><expr><name pos:line="152" pos:column="40">ptr<pos:position pos:line="152" pos:column="43"/></name></expr></argument>, <argument><expr><name pos:line="152" pos:column="45">tempptr<pos:position pos:line="152" pos:column="52"/></name> <operator pos:line="152" pos:column="53">-<pos:position pos:line="152" pos:column="54"/></operator> <name pos:line="152" pos:column="55">ptr<pos:position pos:line="152" pos:column="58"/></name></expr></argument>)<pos:position pos:line="152" pos:column="59"/></argument_list></call></expr>;<pos:position pos:line="152" pos:column="60"/></expr_stmt>
        <if pos:line="153" pos:column="9">if <condition pos:line="153" pos:column="12">(<expr><name pos:line="153" pos:column="13">posix_class<pos:position pos:line="153" pos:column="24"/></name> <operator pos:line="153" pos:column="25">&lt;<pos:position pos:line="153" pos:column="29"/></operator> <literal type="number" pos:line="153" pos:column="27">0<pos:position pos:line="153" pos:column="28"/></literal></expr>)<pos:position pos:line="153" pos:column="29"/></condition><then pos:line="153" pos:column="29">
          <block pos:line="154" pos:column="11">{
          <expr_stmt><expr><operator pos:line="155" pos:column="11">*<pos:position pos:line="155" pos:column="12"/></operator><name pos:line="155" pos:column="12">errorptr<pos:position pos:line="155" pos:column="20"/></name> <operator pos:line="155" pos:column="21">=<pos:position pos:line="155" pos:column="22"/></operator> <name pos:line="155" pos:column="23">ERR30<pos:position pos:line="155" pos:column="28"/></name></expr>;<pos:position pos:line="155" pos:column="29"/></expr_stmt>
          <goto pos:line="156" pos:column="11">goto <name pos:line="156" pos:column="16">FAILED<pos:position pos:line="156" pos:column="22"/></name>;<pos:position pos:line="156" pos:column="23"/></goto>
          }<pos:position pos:line="157" pos:column="12"/></block></then></if>

        <comment type="block" pos:line="159" pos:column="9">/* If matching is caseless, upper and lower are converted to
        alpha. This relies on the fact that the class table starts with
        alpha, lower, upper as the first 3 entries. */</comment>

        <if pos:line="163" pos:column="9">if <condition pos:line="163" pos:column="12">(<expr><operator pos:line="163" pos:column="13">(<pos:position pos:line="163" pos:column="14"/></operator><name pos:line="163" pos:column="14">options<pos:position pos:line="163" pos:column="21"/></name> <operator pos:line="163" pos:column="22">&amp;<pos:position pos:line="163" pos:column="27"/></operator> <name pos:line="163" pos:column="24">PCRE_CASELESS<pos:position pos:line="163" pos:column="37"/></name><operator pos:line="163" pos:column="37">)<pos:position pos:line="163" pos:column="38"/></operator> <operator pos:line="163" pos:column="39">!=<pos:position pos:line="163" pos:column="41"/></operator> <literal type="number" pos:line="163" pos:column="42">0<pos:position pos:line="163" pos:column="43"/></literal> <operator pos:line="163" pos:column="44">&amp;&amp;<pos:position pos:line="163" pos:column="54"/></operator> <name pos:line="163" pos:column="47">posix_class<pos:position pos:line="163" pos:column="58"/></name> <operator pos:line="163" pos:column="59">&lt;=<pos:position pos:line="163" pos:column="64"/></operator> <literal type="number" pos:line="163" pos:column="62">2<pos:position pos:line="163" pos:column="63"/></literal></expr>)<pos:position pos:line="163" pos:column="64"/></condition><then pos:line="163" pos:column="64">
          <block type="pseudo"><expr_stmt><expr><name pos:line="164" pos:column="11">posix_class<pos:position pos:line="164" pos:column="22"/></name> <operator pos:line="164" pos:column="23">=<pos:position pos:line="164" pos:column="24"/></operator> <literal type="number" pos:line="164" pos:column="25">0<pos:position pos:line="164" pos:column="26"/></literal></expr>;<pos:position pos:line="164" pos:column="27"/></expr_stmt></block></then></if>

        <comment type="block" pos:line="166" pos:column="9">/* Or into the map we are building up to 3 of the static class
        tables, or their negations. */</comment>

        <expr_stmt><expr><name pos:line="169" pos:column="9">posix_class<pos:position pos:line="169" pos:column="20"/></name> <operator pos:line="169" pos:column="21">*=<pos:position pos:line="169" pos:column="23"/></operator> <literal type="number" pos:line="169" pos:column="24">3<pos:position pos:line="169" pos:column="25"/></literal></expr>;<pos:position pos:line="169" pos:column="26"/></expr_stmt>
        <for pos:line="170" pos:column="9">for <control pos:line="170" pos:column="13">(<init><expr><name pos:line="170" pos:column="14">i<pos:position pos:line="170" pos:column="15"/></name> <operator pos:line="170" pos:column="16">=<pos:position pos:line="170" pos:column="17"/></operator> <literal type="number" pos:line="170" pos:column="18">0<pos:position pos:line="170" pos:column="19"/></literal></expr>;<pos:position pos:line="170" pos:column="20"/></init> <condition><expr><name pos:line="170" pos:column="21">i<pos:position pos:line="170" pos:column="22"/></name> <operator pos:line="170" pos:column="23">&lt;<pos:position pos:line="170" pos:column="27"/></operator> <literal type="number" pos:line="170" pos:column="25">3<pos:position pos:line="170" pos:column="26"/></literal></expr>;<pos:position pos:line="170" pos:column="27"/></condition> <incr><expr><name pos:line="170" pos:column="28">i<pos:position pos:line="170" pos:column="29"/></name><operator pos:line="170" pos:column="29">++<pos:position pos:line="170" pos:column="31"/></operator></expr></incr>)<pos:position pos:line="170" pos:column="32"/></control>
          <block pos:line="171" pos:column="11">{
          <decl_stmt><decl><type><name pos:line="172" pos:column="11">int<pos:position pos:line="172" pos:column="14"/></name></type> <name pos:line="172" pos:column="15">taboffset<pos:position pos:line="172" pos:column="24"/></name> <init pos:line="172" pos:column="25">= <expr><name><name pos:line="172" pos:column="27">posix_class_maps<pos:position pos:line="172" pos:column="43"/></name><index pos:line="172" pos:column="43">[<expr><name pos:line="172" pos:column="44">posix_class<pos:position pos:line="172" pos:column="55"/></name> <operator pos:line="172" pos:column="56">+<pos:position pos:line="172" pos:column="57"/></operator> <name pos:line="172" pos:column="58">i<pos:position pos:line="172" pos:column="59"/></name></expr>]<pos:position pos:line="172" pos:column="60"/></index></name></expr></init></decl>;<pos:position pos:line="172" pos:column="61"/></decl_stmt>
          <if pos:line="173" pos:column="11">if <condition pos:line="173" pos:column="14">(<expr><name pos:line="173" pos:column="15">taboffset<pos:position pos:line="173" pos:column="24"/></name> <operator pos:line="173" pos:column="25">&lt;<pos:position pos:line="173" pos:column="29"/></operator> <literal type="number" pos:line="173" pos:column="27">0<pos:position pos:line="173" pos:column="28"/></literal></expr>)<pos:position pos:line="173" pos:column="29"/></condition><then pos:line="173" pos:column="29"> <block type="pseudo"><break pos:line="173" pos:column="30">break;<pos:position pos:line="173" pos:column="36"/></break></block></then></if>
          <if pos:line="174" pos:column="11">if <condition pos:line="174" pos:column="14">(<expr><name pos:line="174" pos:column="15">local_negate<pos:position pos:line="174" pos:column="27"/></name></expr>)<pos:position pos:line="174" pos:column="28"/></condition><then pos:line="174" pos:column="28">
            <block type="pseudo"><for pos:line="175" pos:column="13">for <control pos:line="175" pos:column="17">(<init><expr><name pos:line="175" pos:column="18">c<pos:position pos:line="175" pos:column="19"/></name> <operator pos:line="175" pos:column="20">=<pos:position pos:line="175" pos:column="21"/></operator> <literal type="number" pos:line="175" pos:column="22">0<pos:position pos:line="175" pos:column="23"/></literal></expr>;<pos:position pos:line="175" pos:column="24"/></init> <condition><expr><name pos:line="175" pos:column="25">c<pos:position pos:line="175" pos:column="26"/></name> <operator pos:line="175" pos:column="27">&lt;<pos:position pos:line="175" pos:column="31"/></operator> <literal type="number" pos:line="175" pos:column="29">32<pos:position pos:line="175" pos:column="31"/></literal></expr>;<pos:position pos:line="175" pos:column="32"/></condition> <incr><expr><name pos:line="175" pos:column="33">c<pos:position pos:line="175" pos:column="34"/></name><operator pos:line="175" pos:column="34">++<pos:position pos:line="175" pos:column="36"/></operator></expr></incr>)<pos:position pos:line="175" pos:column="37"/></control> <block type="pseudo"><expr_stmt><expr><name><name pos:line="175" pos:column="38">class<pos:position pos:line="175" pos:column="43"/></name><index pos:line="175" pos:column="43">[<expr><name pos:line="175" pos:column="44">c<pos:position pos:line="175" pos:column="45"/></name></expr>]<pos:position pos:line="175" pos:column="46"/></index></name> <operator pos:line="175" pos:column="47">|=<pos:position pos:line="175" pos:column="49"/></operator> <operator pos:line="175" pos:column="50">~<pos:position pos:line="175" pos:column="51"/></operator><name><name pos:line="175" pos:column="51">cbits<pos:position pos:line="175" pos:column="56"/></name><index pos:line="175" pos:column="56">[<expr><name pos:line="175" pos:column="57">c<pos:position pos:line="175" pos:column="58"/></name><operator pos:line="175" pos:column="58">+<pos:position pos:line="175" pos:column="59"/></operator><name pos:line="175" pos:column="59">taboffset<pos:position pos:line="175" pos:column="68"/></name></expr>]<pos:position pos:line="175" pos:column="69"/></index></name></expr>;<pos:position pos:line="175" pos:column="70"/></expr_stmt></block></for></block></then>
          <else pos:line="176" pos:column="11">else
            <block type="pseudo"><for pos:line="177" pos:column="13">for <control pos:line="177" pos:column="17">(<init><expr><name pos:line="177" pos:column="18">c<pos:position pos:line="177" pos:column="19"/></name> <operator pos:line="177" pos:column="20">=<pos:position pos:line="177" pos:column="21"/></operator> <literal type="number" pos:line="177" pos:column="22">0<pos:position pos:line="177" pos:column="23"/></literal></expr>;<pos:position pos:line="177" pos:column="24"/></init> <condition><expr><name pos:line="177" pos:column="25">c<pos:position pos:line="177" pos:column="26"/></name> <operator pos:line="177" pos:column="27">&lt;<pos:position pos:line="177" pos:column="31"/></operator> <literal type="number" pos:line="177" pos:column="29">32<pos:position pos:line="177" pos:column="31"/></literal></expr>;<pos:position pos:line="177" pos:column="32"/></condition> <incr><expr><name pos:line="177" pos:column="33">c<pos:position pos:line="177" pos:column="34"/></name><operator pos:line="177" pos:column="34">++<pos:position pos:line="177" pos:column="36"/></operator></expr></incr>)<pos:position pos:line="177" pos:column="37"/></control> <block type="pseudo"><expr_stmt><expr><name><name pos:line="177" pos:column="38">class<pos:position pos:line="177" pos:column="43"/></name><index pos:line="177" pos:column="43">[<expr><name pos:line="177" pos:column="44">c<pos:position pos:line="177" pos:column="45"/></name></expr>]<pos:position pos:line="177" pos:column="46"/></index></name> <operator pos:line="177" pos:column="47">|=<pos:position pos:line="177" pos:column="49"/></operator> <name><name pos:line="177" pos:column="50">cbits<pos:position pos:line="177" pos:column="55"/></name><index pos:line="177" pos:column="55">[<expr><name pos:line="177" pos:column="56">c<pos:position pos:line="177" pos:column="57"/></name><operator pos:line="177" pos:column="57">+<pos:position pos:line="177" pos:column="58"/></operator><name pos:line="177" pos:column="58">taboffset<pos:position pos:line="177" pos:column="67"/></name></expr>]<pos:position pos:line="177" pos:column="68"/></index></name></expr>;<pos:position pos:line="177" pos:column="69"/></expr_stmt></block></for></block></else></if>
          }<pos:position pos:line="178" pos:column="12"/></block></for>

        <expr_stmt><expr><name pos:line="180" pos:column="9">ptr<pos:position pos:line="180" pos:column="12"/></name> <operator pos:line="180" pos:column="13">=<pos:position pos:line="180" pos:column="14"/></operator> <name pos:line="180" pos:column="15">tempptr<pos:position pos:line="180" pos:column="22"/></name> <operator pos:line="180" pos:column="23">+<pos:position pos:line="180" pos:column="24"/></operator> <literal type="number" pos:line="180" pos:column="25">1<pos:position pos:line="180" pos:column="26"/></literal></expr>;<pos:position pos:line="180" pos:column="27"/></expr_stmt>
        <expr_stmt><expr><name pos:line="181" pos:column="9">class_charcount<pos:position pos:line="181" pos:column="24"/></name> <operator pos:line="181" pos:column="25">=<pos:position pos:line="181" pos:column="26"/></operator> <literal type="number" pos:line="181" pos:column="27">10<pos:position pos:line="181" pos:column="29"/></literal></expr>;<pos:position pos:line="181" pos:column="30"/></expr_stmt>  <comment type="block" pos:line="181" pos:column="32">/* Set &gt; 1; assumes more than 1 per class */</comment>
        <continue pos:line="182" pos:column="9">continue;<pos:position pos:line="182" pos:column="18"/></continue>
        }<pos:position pos:line="183" pos:column="10"/></block></then></if>

      <comment type="block" pos:line="185" pos:column="7">/* Backslash may introduce a single character, or it may introduce one
      of the specials, which just set a flag. Escaped items are checked for
      validity in the pre-compiling pass. The sequence \b is a special case.
      Inside a class (and only there) it is treated as backspace. Elsewhere
      it marks a word boundary. Other escapes have preset maps ready to
      or into the one we are building. We assume they have more than one
      character in them, so set class_count bigger than one. */</comment>

      <if pos:line="193" pos:column="7">if <condition pos:line="193" pos:column="10">(<expr><name pos:line="193" pos:column="11">c<pos:position pos:line="193" pos:column="12"/></name> <operator pos:line="193" pos:column="13">==<pos:position pos:line="193" pos:column="15"/></operator> <literal type="char" pos:line="193" pos:column="16">'\\'<pos:position pos:line="193" pos:column="20"/></literal></expr>)<pos:position pos:line="193" pos:column="21"/></condition><then pos:line="193" pos:column="21">
        <block pos:line="194" pos:column="9">{
        <expr_stmt><expr><name pos:line="195" pos:column="9">c<pos:position pos:line="195" pos:column="10"/></name> <operator pos:line="195" pos:column="11">=<pos:position pos:line="195" pos:column="12"/></operator> <call><name pos:line="195" pos:column="13">check_escape<pos:position pos:line="195" pos:column="25"/></name><argument_list pos:line="195" pos:column="25">(<argument><expr><operator pos:line="195" pos:column="26">&amp;<pos:position pos:line="195" pos:column="31"/></operator><name pos:line="195" pos:column="27">ptr<pos:position pos:line="195" pos:column="30"/></name></expr></argument>, <argument><expr><name pos:line="195" pos:column="32">errorptr<pos:position pos:line="195" pos:column="40"/></name></expr></argument>, <argument><expr><operator pos:line="195" pos:column="42">*<pos:position pos:line="195" pos:column="43"/></operator><name pos:line="195" pos:column="43">brackets<pos:position pos:line="195" pos:column="51"/></name></expr></argument>, <argument><expr><name pos:line="195" pos:column="53">options<pos:position pos:line="195" pos:column="60"/></name></expr></argument>, <argument><expr><name pos:line="195" pos:column="62">TRUE<pos:position pos:line="195" pos:column="66"/></name></expr></argument>, <argument><expr><name pos:line="195" pos:column="68">cd<pos:position pos:line="195" pos:column="70"/></name></expr></argument>)<pos:position pos:line="195" pos:column="71"/></argument_list></call></expr>;<pos:position pos:line="195" pos:column="72"/></expr_stmt>
        <if pos:line="196" pos:column="9">if <condition pos:line="196" pos:column="12">(<expr><operator pos:line="196" pos:column="13">-<pos:position pos:line="196" pos:column="14"/></operator><name pos:line="196" pos:column="14">c<pos:position pos:line="196" pos:column="15"/></name> <operator pos:line="196" pos:column="16">==<pos:position pos:line="196" pos:column="18"/></operator> <name pos:line="196" pos:column="19">ESC_b<pos:position pos:line="196" pos:column="24"/></name></expr>)<pos:position pos:line="196" pos:column="25"/></condition><then pos:line="196" pos:column="25"> <block type="pseudo"><expr_stmt><expr><name pos:line="196" pos:column="26">c<pos:position pos:line="196" pos:column="27"/></name> <operator pos:line="196" pos:column="28">=<pos:position pos:line="196" pos:column="29"/></operator> <literal type="char" pos:line="196" pos:column="30">'\b'<pos:position pos:line="196" pos:column="34"/></literal></expr>;<pos:position pos:line="196" pos:column="35"/></expr_stmt></block></then>
        <elseif pos:line="197" pos:column="9">else <if pos:line="197" pos:column="14">if <condition pos:line="197" pos:column="17">(<expr><name pos:line="197" pos:column="18">c<pos:position pos:line="197" pos:column="19"/></name> <operator pos:line="197" pos:column="20">&lt;<pos:position pos:line="197" pos:column="24"/></operator> <literal type="number" pos:line="197" pos:column="22">0<pos:position pos:line="197" pos:column="23"/></literal></expr>)<pos:position pos:line="197" pos:column="24"/></condition><then pos:line="197" pos:column="24">
          <block pos:line="198" pos:column="11">{
          <decl_stmt><decl><type><specifier pos:line="199" pos:column="11">register<pos:position pos:line="199" pos:column="19"/></specifier> <specifier pos:line="199" pos:column="20">const<pos:position pos:line="199" pos:column="25"/></specifier> <name pos:line="199" pos:column="26">uschar<pos:position pos:line="199" pos:column="32"/></name> <modifier pos:line="199" pos:column="33">*<pos:position pos:line="199" pos:column="34"/></modifier></type><name pos:line="199" pos:column="34">cbits<pos:position pos:line="199" pos:column="39"/></name> <init pos:line="199" pos:column="40">= <expr><name><name pos:line="199" pos:column="42">cd<pos:position pos:line="199" pos:column="44"/></name><operator pos:line="199" pos:column="44">-&gt;<pos:position pos:line="199" pos:column="49"/></operator><name pos:line="199" pos:column="46">cbits<pos:position pos:line="199" pos:column="51"/></name></name></expr></init></decl>;<pos:position pos:line="199" pos:column="52"/></decl_stmt>
          <expr_stmt><expr><name pos:line="200" pos:column="11">class_charcount<pos:position pos:line="200" pos:column="26"/></name> <operator pos:line="200" pos:column="27">=<pos:position pos:line="200" pos:column="28"/></operator> <literal type="number" pos:line="200" pos:column="29">10<pos:position pos:line="200" pos:column="31"/></literal></expr>;<pos:position pos:line="200" pos:column="32"/></expr_stmt>
          <switch pos:line="201" pos:column="11">switch <condition pos:line="201" pos:column="18">(<expr><operator pos:line="201" pos:column="19">-<pos:position pos:line="201" pos:column="20"/></operator><name pos:line="201" pos:column="20">c<pos:position pos:line="201" pos:column="21"/></name></expr>)<pos:position pos:line="201" pos:column="22"/></condition>
            <block pos:line="202" pos:column="13">{
            <case pos:line="203" pos:column="13">case <expr><name pos:line="203" pos:column="18">ESC_d<pos:position pos:line="203" pos:column="23"/></name></expr>:<pos:position pos:line="203" pos:column="24"/></case>
            <for pos:line="204" pos:column="13">for <control pos:line="204" pos:column="17">(<init><expr><name pos:line="204" pos:column="18">c<pos:position pos:line="204" pos:column="19"/></name> <operator pos:line="204" pos:column="20">=<pos:position pos:line="204" pos:column="21"/></operator> <literal type="number" pos:line="204" pos:column="22">0<pos:position pos:line="204" pos:column="23"/></literal></expr>;<pos:position pos:line="204" pos:column="24"/></init> <condition><expr><name pos:line="204" pos:column="25">c<pos:position pos:line="204" pos:column="26"/></name> <operator pos:line="204" pos:column="27">&lt;<pos:position pos:line="204" pos:column="31"/></operator> <literal type="number" pos:line="204" pos:column="29">32<pos:position pos:line="204" pos:column="31"/></literal></expr>;<pos:position pos:line="204" pos:column="32"/></condition> <incr><expr><name pos:line="204" pos:column="33">c<pos:position pos:line="204" pos:column="34"/></name><operator pos:line="204" pos:column="34">++<pos:position pos:line="204" pos:column="36"/></operator></expr></incr>)<pos:position pos:line="204" pos:column="37"/></control> <block type="pseudo"><expr_stmt><expr><name><name pos:line="204" pos:column="38">class<pos:position pos:line="204" pos:column="43"/></name><index pos:line="204" pos:column="43">[<expr><name pos:line="204" pos:column="44">c<pos:position pos:line="204" pos:column="45"/></name></expr>]<pos:position pos:line="204" pos:column="46"/></index></name> <operator pos:line="204" pos:column="47">|=<pos:position pos:line="204" pos:column="49"/></operator> <name><name pos:line="204" pos:column="50">cbits<pos:position pos:line="204" pos:column="55"/></name><index pos:line="204" pos:column="55">[<expr><name pos:line="204" pos:column="56">c<pos:position pos:line="204" pos:column="57"/></name><operator pos:line="204" pos:column="57">+<pos:position pos:line="204" pos:column="58"/></operator><name pos:line="204" pos:column="58">cbit_digit<pos:position pos:line="204" pos:column="68"/></name></expr>]<pos:position pos:line="204" pos:column="69"/></index></name></expr>;<pos:position pos:line="204" pos:column="70"/></expr_stmt></block></for>
            <continue pos:line="205" pos:column="13">continue;<pos:position pos:line="205" pos:column="22"/></continue>

            <case pos:line="207" pos:column="13">case <expr><name pos:line="207" pos:column="18">ESC_D<pos:position pos:line="207" pos:column="23"/></name></expr>:<pos:position pos:line="207" pos:column="24"/></case>
            <for pos:line="208" pos:column="13">for <control pos:line="208" pos:column="17">(<init><expr><name pos:line="208" pos:column="18">c<pos:position pos:line="208" pos:column="19"/></name> <operator pos:line="208" pos:column="20">=<pos:position pos:line="208" pos:column="21"/></operator> <literal type="number" pos:line="208" pos:column="22">0<pos:position pos:line="208" pos:column="23"/></literal></expr>;<pos:position pos:line="208" pos:column="24"/></init> <condition><expr><name pos:line="208" pos:column="25">c<pos:position pos:line="208" pos:column="26"/></name> <operator pos:line="208" pos:column="27">&lt;<pos:position pos:line="208" pos:column="31"/></operator> <literal type="number" pos:line="208" pos:column="29">32<pos:position pos:line="208" pos:column="31"/></literal></expr>;<pos:position pos:line="208" pos:column="32"/></condition> <incr><expr><name pos:line="208" pos:column="33">c<pos:position pos:line="208" pos:column="34"/></name><operator pos:line="208" pos:column="34">++<pos:position pos:line="208" pos:column="36"/></operator></expr></incr>)<pos:position pos:line="208" pos:column="37"/></control> <block type="pseudo"><expr_stmt><expr><name><name pos:line="208" pos:column="38">class<pos:position pos:line="208" pos:column="43"/></name><index pos:line="208" pos:column="43">[<expr><name pos:line="208" pos:column="44">c<pos:position pos:line="208" pos:column="45"/></name></expr>]<pos:position pos:line="208" pos:column="46"/></index></name> <operator pos:line="208" pos:column="47">|=<pos:position pos:line="208" pos:column="49"/></operator> <operator pos:line="208" pos:column="50">~<pos:position pos:line="208" pos:column="51"/></operator><name><name pos:line="208" pos:column="51">cbits<pos:position pos:line="208" pos:column="56"/></name><index pos:line="208" pos:column="56">[<expr><name pos:line="208" pos:column="57">c<pos:position pos:line="208" pos:column="58"/></name><operator pos:line="208" pos:column="58">+<pos:position pos:line="208" pos:column="59"/></operator><name pos:line="208" pos:column="59">cbit_digit<pos:position pos:line="208" pos:column="69"/></name></expr>]<pos:position pos:line="208" pos:column="70"/></index></name></expr>;<pos:position pos:line="208" pos:column="71"/></expr_stmt></block></for>
            <continue pos:line="209" pos:column="13">continue;<pos:position pos:line="209" pos:column="22"/></continue>

            <case pos:line="211" pos:column="13">case <expr><name pos:line="211" pos:column="18">ESC_w<pos:position pos:line="211" pos:column="23"/></name></expr>:<pos:position pos:line="211" pos:column="24"/></case>
            <for pos:line="212" pos:column="13">for <control pos:line="212" pos:column="17">(<init><expr><name pos:line="212" pos:column="18">c<pos:position pos:line="212" pos:column="19"/></name> <operator pos:line="212" pos:column="20">=<pos:position pos:line="212" pos:column="21"/></operator> <literal type="number" pos:line="212" pos:column="22">0<pos:position pos:line="212" pos:column="23"/></literal></expr>;<pos:position pos:line="212" pos:column="24"/></init> <condition><expr><name pos:line="212" pos:column="25">c<pos:position pos:line="212" pos:column="26"/></name> <operator pos:line="212" pos:column="27">&lt;<pos:position pos:line="212" pos:column="31"/></operator> <literal type="number" pos:line="212" pos:column="29">32<pos:position pos:line="212" pos:column="31"/></literal></expr>;<pos:position pos:line="212" pos:column="32"/></condition> <incr><expr><name pos:line="212" pos:column="33">c<pos:position pos:line="212" pos:column="34"/></name><operator pos:line="212" pos:column="34">++<pos:position pos:line="212" pos:column="36"/></operator></expr></incr>)<pos:position pos:line="212" pos:column="37"/></control> <block type="pseudo"><expr_stmt><expr><name><name pos:line="212" pos:column="38">class<pos:position pos:line="212" pos:column="43"/></name><index pos:line="212" pos:column="43">[<expr><name pos:line="212" pos:column="44">c<pos:position pos:line="212" pos:column="45"/></name></expr>]<pos:position pos:line="212" pos:column="46"/></index></name> <operator pos:line="212" pos:column="47">|=<pos:position pos:line="212" pos:column="49"/></operator> <name><name pos:line="212" pos:column="50">cbits<pos:position pos:line="212" pos:column="55"/></name><index pos:line="212" pos:column="55">[<expr><name pos:line="212" pos:column="56">c<pos:position pos:line="212" pos:column="57"/></name><operator pos:line="212" pos:column="57">+<pos:position pos:line="212" pos:column="58"/></operator><name pos:line="212" pos:column="58">cbit_word<pos:position pos:line="212" pos:column="67"/></name></expr>]<pos:position pos:line="212" pos:column="68"/></index></name></expr>;<pos:position pos:line="212" pos:column="69"/></expr_stmt></block></for>
            <continue pos:line="213" pos:column="13">continue;<pos:position pos:line="213" pos:column="22"/></continue>

            <case pos:line="215" pos:column="13">case <expr><name pos:line="215" pos:column="18">ESC_W<pos:position pos:line="215" pos:column="23"/></name></expr>:<pos:position pos:line="215" pos:column="24"/></case>
            <for pos:line="216" pos:column="13">for <control pos:line="216" pos:column="17">(<init><expr><name pos:line="216" pos:column="18">c<pos:position pos:line="216" pos:column="19"/></name> <operator pos:line="216" pos:column="20">=<pos:position pos:line="216" pos:column="21"/></operator> <literal type="number" pos:line="216" pos:column="22">0<pos:position pos:line="216" pos:column="23"/></literal></expr>;<pos:position pos:line="216" pos:column="24"/></init> <condition><expr><name pos:line="216" pos:column="25">c<pos:position pos:line="216" pos:column="26"/></name> <operator pos:line="216" pos:column="27">&lt;<pos:position pos:line="216" pos:column="31"/></operator> <literal type="number" pos:line="216" pos:column="29">32<pos:position pos:line="216" pos:column="31"/></literal></expr>;<pos:position pos:line="216" pos:column="32"/></condition> <incr><expr><name pos:line="216" pos:column="33">c<pos:position pos:line="216" pos:column="34"/></name><operator pos:line="216" pos:column="34">++<pos:position pos:line="216" pos:column="36"/></operator></expr></incr>)<pos:position pos:line="216" pos:column="37"/></control> <block type="pseudo"><expr_stmt><expr><name><name pos:line="216" pos:column="38">class<pos:position pos:line="216" pos:column="43"/></name><index pos:line="216" pos:column="43">[<expr><name pos:line="216" pos:column="44">c<pos:position pos:line="216" pos:column="45"/></name></expr>]<pos:position pos:line="216" pos:column="46"/></index></name> <operator pos:line="216" pos:column="47">|=<pos:position pos:line="216" pos:column="49"/></operator> <operator pos:line="216" pos:column="50">~<pos:position pos:line="216" pos:column="51"/></operator><name><name pos:line="216" pos:column="51">cbits<pos:position pos:line="216" pos:column="56"/></name><index pos:line="216" pos:column="56">[<expr><name pos:line="216" pos:column="57">c<pos:position pos:line="216" pos:column="58"/></name><operator pos:line="216" pos:column="58">+<pos:position pos:line="216" pos:column="59"/></operator><name pos:line="216" pos:column="59">cbit_word<pos:position pos:line="216" pos:column="68"/></name></expr>]<pos:position pos:line="216" pos:column="69"/></index></name></expr>;<pos:position pos:line="216" pos:column="70"/></expr_stmt></block></for>
            <continue pos:line="217" pos:column="13">continue;<pos:position pos:line="217" pos:column="22"/></continue>

            <case pos:line="219" pos:column="13">case <expr><name pos:line="219" pos:column="18">ESC_s<pos:position pos:line="219" pos:column="23"/></name></expr>:<pos:position pos:line="219" pos:column="24"/></case>
            <for pos:line="220" pos:column="13">for <control pos:line="220" pos:column="17">(<init><expr><name pos:line="220" pos:column="18">c<pos:position pos:line="220" pos:column="19"/></name> <operator pos:line="220" pos:column="20">=<pos:position pos:line="220" pos:column="21"/></operator> <literal type="number" pos:line="220" pos:column="22">0<pos:position pos:line="220" pos:column="23"/></literal></expr>;<pos:position pos:line="220" pos:column="24"/></init> <condition><expr><name pos:line="220" pos:column="25">c<pos:position pos:line="220" pos:column="26"/></name> <operator pos:line="220" pos:column="27">&lt;<pos:position pos:line="220" pos:column="31"/></operator> <literal type="number" pos:line="220" pos:column="29">32<pos:position pos:line="220" pos:column="31"/></literal></expr>;<pos:position pos:line="220" pos:column="32"/></condition> <incr><expr><name pos:line="220" pos:column="33">c<pos:position pos:line="220" pos:column="34"/></name><operator pos:line="220" pos:column="34">++<pos:position pos:line="220" pos:column="36"/></operator></expr></incr>)<pos:position pos:line="220" pos:column="37"/></control> <block type="pseudo"><expr_stmt><expr><name><name pos:line="220" pos:column="38">class<pos:position pos:line="220" pos:column="43"/></name><index pos:line="220" pos:column="43">[<expr><name pos:line="220" pos:column="44">c<pos:position pos:line="220" pos:column="45"/></name></expr>]<pos:position pos:line="220" pos:column="46"/></index></name> <operator pos:line="220" pos:column="47">|=<pos:position pos:line="220" pos:column="49"/></operator> <name><name pos:line="220" pos:column="50">cbits<pos:position pos:line="220" pos:column="55"/></name><index pos:line="220" pos:column="55">[<expr><name pos:line="220" pos:column="56">c<pos:position pos:line="220" pos:column="57"/></name><operator pos:line="220" pos:column="57">+<pos:position pos:line="220" pos:column="58"/></operator><name pos:line="220" pos:column="58">cbit_space<pos:position pos:line="220" pos:column="68"/></name></expr>]<pos:position pos:line="220" pos:column="69"/></index></name></expr>;<pos:position pos:line="220" pos:column="70"/></expr_stmt></block></for>
            <continue pos:line="221" pos:column="13">continue;<pos:position pos:line="221" pos:column="22"/></continue>

            <case pos:line="223" pos:column="13">case <expr><name pos:line="223" pos:column="18">ESC_S<pos:position pos:line="223" pos:column="23"/></name></expr>:<pos:position pos:line="223" pos:column="24"/></case>
            <for pos:line="224" pos:column="13">for <control pos:line="224" pos:column="17">(<init><expr><name pos:line="224" pos:column="18">c<pos:position pos:line="224" pos:column="19"/></name> <operator pos:line="224" pos:column="20">=<pos:position pos:line="224" pos:column="21"/></operator> <literal type="number" pos:line="224" pos:column="22">0<pos:position pos:line="224" pos:column="23"/></literal></expr>;<pos:position pos:line="224" pos:column="24"/></init> <condition><expr><name pos:line="224" pos:column="25">c<pos:position pos:line="224" pos:column="26"/></name> <operator pos:line="224" pos:column="27">&lt;<pos:position pos:line="224" pos:column="31"/></operator> <literal type="number" pos:line="224" pos:column="29">32<pos:position pos:line="224" pos:column="31"/></literal></expr>;<pos:position pos:line="224" pos:column="32"/></condition> <incr><expr><name pos:line="224" pos:column="33">c<pos:position pos:line="224" pos:column="34"/></name><operator pos:line="224" pos:column="34">++<pos:position pos:line="224" pos:column="36"/></operator></expr></incr>)<pos:position pos:line="224" pos:column="37"/></control> <block type="pseudo"><expr_stmt><expr><name><name pos:line="224" pos:column="38">class<pos:position pos:line="224" pos:column="43"/></name><index pos:line="224" pos:column="43">[<expr><name pos:line="224" pos:column="44">c<pos:position pos:line="224" pos:column="45"/></name></expr>]<pos:position pos:line="224" pos:column="46"/></index></name> <operator pos:line="224" pos:column="47">|=<pos:position pos:line="224" pos:column="49"/></operator> <operator pos:line="224" pos:column="50">~<pos:position pos:line="224" pos:column="51"/></operator><name><name pos:line="224" pos:column="51">cbits<pos:position pos:line="224" pos:column="56"/></name><index pos:line="224" pos:column="56">[<expr><name pos:line="224" pos:column="57">c<pos:position pos:line="224" pos:column="58"/></name><operator pos:line="224" pos:column="58">+<pos:position pos:line="224" pos:column="59"/></operator><name pos:line="224" pos:column="59">cbit_space<pos:position pos:line="224" pos:column="69"/></name></expr>]<pos:position pos:line="224" pos:column="70"/></index></name></expr>;<pos:position pos:line="224" pos:column="71"/></expr_stmt></block></for>
            <continue pos:line="225" pos:column="13">continue;<pos:position pos:line="225" pos:column="22"/></continue>

            <default pos:line="227" pos:column="13">default:<pos:position pos:line="227" pos:column="21"/></default>
            <expr_stmt><expr><operator pos:line="228" pos:column="13">*<pos:position pos:line="228" pos:column="14"/></operator><name pos:line="228" pos:column="14">errorptr<pos:position pos:line="228" pos:column="22"/></name> <operator pos:line="228" pos:column="23">=<pos:position pos:line="228" pos:column="24"/></operator> <name pos:line="228" pos:column="25">ERR7<pos:position pos:line="228" pos:column="29"/></name></expr>;<pos:position pos:line="228" pos:column="30"/></expr_stmt>
            <goto pos:line="229" pos:column="13">goto <name pos:line="229" pos:column="18">FAILED<pos:position pos:line="229" pos:column="24"/></name>;<pos:position pos:line="229" pos:column="25"/></goto>
            }<pos:position pos:line="230" pos:column="14"/></block></switch>
          }<pos:position pos:line="231" pos:column="12"/></block></then></if></elseif></if>

        <comment type="block" pos:line="233" pos:column="9">/* Fall through if single character, but don't at present allow
        chars &gt; 255 in UTF-8 mode. */</comment>

<cpp:ifdef pos:line="236" pos:column="1">#<cpp:directive pos:line="236" pos:column="2">ifdef<pos:position pos:line="236" pos:column="7"/></cpp:directive> <name pos:line="236" pos:column="8">SUPPORT_UTF8<pos:position pos:line="236" pos:column="20"/></name></cpp:ifdef>
        <if pos:line="237" pos:column="9">if <condition pos:line="237" pos:column="12">(<expr><name pos:line="237" pos:column="13">c<pos:position pos:line="237" pos:column="14"/></name> <operator pos:line="237" pos:column="15">&gt;<pos:position pos:line="237" pos:column="19"/></operator> <literal type="number" pos:line="237" pos:column="17">255<pos:position pos:line="237" pos:column="20"/></literal></expr>)<pos:position pos:line="237" pos:column="21"/></condition><then pos:line="237" pos:column="21">
          <block pos:line="238" pos:column="11">{
          <expr_stmt><expr><operator pos:line="239" pos:column="11">*<pos:position pos:line="239" pos:column="12"/></operator><name pos:line="239" pos:column="12">errorptr<pos:position pos:line="239" pos:column="20"/></name> <operator pos:line="239" pos:column="21">=<pos:position pos:line="239" pos:column="22"/></operator> <name pos:line="239" pos:column="23">ERR33<pos:position pos:line="239" pos:column="28"/></name></expr>;<pos:position pos:line="239" pos:column="29"/></expr_stmt>
          <goto pos:line="240" pos:column="11">goto <name pos:line="240" pos:column="16">FAILED<pos:position pos:line="240" pos:column="22"/></name>;<pos:position pos:line="240" pos:column="23"/></goto>
          }<pos:position pos:line="241" pos:column="12"/></block></then></if>
<cpp:endif pos:line="242" pos:column="1">#<cpp:directive pos:line="242" pos:column="2">endif<pos:position pos:line="242" pos:column="7"/></cpp:directive></cpp:endif>
        }<pos:position pos:line="243" pos:column="10"/></block></then></if>

      <comment type="block" pos:line="245" pos:column="7">/* A single character may be followed by '-' to form a range. However,
      Perl does not permit ']' to be the end of the range. A '-' character
      here is treated as a literal. */</comment>

      <if pos:line="249" pos:column="7">if <condition pos:line="249" pos:column="10">(<expr><name><name pos:line="249" pos:column="11">ptr<pos:position pos:line="249" pos:column="14"/></name><index pos:line="249" pos:column="14">[<expr><literal type="number" pos:line="249" pos:column="15">1<pos:position pos:line="249" pos:column="16"/></literal></expr>]<pos:position pos:line="249" pos:column="17"/></index></name> <operator pos:line="249" pos:column="18">==<pos:position pos:line="249" pos:column="20"/></operator> <literal type="char" pos:line="249" pos:column="21">'-'<pos:position pos:line="249" pos:column="24"/></literal> <operator pos:line="249" pos:column="25">&amp;&amp;<pos:position pos:line="249" pos:column="35"/></operator> <name><name pos:line="249" pos:column="28">ptr<pos:position pos:line="249" pos:column="31"/></name><index pos:line="249" pos:column="31">[<expr><literal type="number" pos:line="249" pos:column="32">2<pos:position pos:line="249" pos:column="33"/></literal></expr>]<pos:position pos:line="249" pos:column="34"/></index></name> <operator pos:line="249" pos:column="35">!=<pos:position pos:line="249" pos:column="37"/></operator> <literal type="char" pos:line="249" pos:column="38">']'<pos:position pos:line="249" pos:column="41"/></literal></expr>)<pos:position pos:line="249" pos:column="42"/></condition><then pos:line="249" pos:column="42">
        <block pos:line="250" pos:column="9">{
        <decl_stmt><decl><type><name pos:line="251" pos:column="9">int<pos:position pos:line="251" pos:column="12"/></name></type> <name pos:line="251" pos:column="13">d<pos:position pos:line="251" pos:column="14"/></name></decl>;<pos:position pos:line="251" pos:column="15"/></decl_stmt>
        <expr_stmt><expr><name pos:line="252" pos:column="9">ptr<pos:position pos:line="252" pos:column="12"/></name> <operator pos:line="252" pos:column="13">+=<pos:position pos:line="252" pos:column="15"/></operator> <literal type="number" pos:line="252" pos:column="16">2<pos:position pos:line="252" pos:column="17"/></literal></expr>;<pos:position pos:line="252" pos:column="18"/></expr_stmt>
        <expr_stmt><expr><name pos:line="253" pos:column="9">d<pos:position pos:line="253" pos:column="10"/></name> <operator pos:line="253" pos:column="11">=<pos:position pos:line="253" pos:column="12"/></operator> <operator pos:line="253" pos:column="13">*<pos:position pos:line="253" pos:column="14"/></operator><name pos:line="253" pos:column="14">ptr<pos:position pos:line="253" pos:column="17"/></name></expr>;<pos:position pos:line="253" pos:column="18"/></expr_stmt>

        <if pos:line="255" pos:column="9">if <condition pos:line="255" pos:column="12">(<expr><name pos:line="255" pos:column="13">d<pos:position pos:line="255" pos:column="14"/></name> <operator pos:line="255" pos:column="15">==<pos:position pos:line="255" pos:column="17"/></operator> <literal type="number" pos:line="255" pos:column="18">0<pos:position pos:line="255" pos:column="19"/></literal></expr>)<pos:position pos:line="255" pos:column="20"/></condition><then pos:line="255" pos:column="20">
          <block pos:line="256" pos:column="11">{
          <expr_stmt><expr><operator pos:line="257" pos:column="11">*<pos:position pos:line="257" pos:column="12"/></operator><name pos:line="257" pos:column="12">errorptr<pos:position pos:line="257" pos:column="20"/></name> <operator pos:line="257" pos:column="21">=<pos:position pos:line="257" pos:column="22"/></operator> <name pos:line="257" pos:column="23">ERR6<pos:position pos:line="257" pos:column="27"/></name></expr>;<pos:position pos:line="257" pos:column="28"/></expr_stmt>
          <goto pos:line="258" pos:column="11">goto <name pos:line="258" pos:column="16">FAILED<pos:position pos:line="258" pos:column="22"/></name>;<pos:position pos:line="258" pos:column="23"/></goto>
          }<pos:position pos:line="259" pos:column="12"/></block></then></if>

        <comment type="block" pos:line="261" pos:column="9">/* The second part of a range can be a single-character escape, but
        not any of the other escapes. Perl 5.6 treats a hyphen as a literal
        in such circumstances. */</comment>

        <if pos:line="265" pos:column="9">if <condition pos:line="265" pos:column="12">(<expr><name pos:line="265" pos:column="13">d<pos:position pos:line="265" pos:column="14"/></name> <operator pos:line="265" pos:column="15">==<pos:position pos:line="265" pos:column="17"/></operator> <literal type="char" pos:line="265" pos:column="18">'\\'<pos:position pos:line="265" pos:column="22"/></literal></expr>)<pos:position pos:line="265" pos:column="23"/></condition><then pos:line="265" pos:column="23">
          <block pos:line="266" pos:column="11">{
          <decl_stmt><decl><type><specifier pos:line="267" pos:column="11">const<pos:position pos:line="267" pos:column="16"/></specifier> <name pos:line="267" pos:column="17">uschar<pos:position pos:line="267" pos:column="23"/></name> <modifier pos:line="267" pos:column="24">*<pos:position pos:line="267" pos:column="25"/></modifier></type><name pos:line="267" pos:column="25">oldptr<pos:position pos:line="267" pos:column="31"/></name> <init pos:line="267" pos:column="32">= <expr><name pos:line="267" pos:column="34">ptr<pos:position pos:line="267" pos:column="37"/></name></expr></init></decl>;<pos:position pos:line="267" pos:column="38"/></decl_stmt>
          <expr_stmt><expr><name pos:line="268" pos:column="11">d<pos:position pos:line="268" pos:column="12"/></name> <operator pos:line="268" pos:column="13">=<pos:position pos:line="268" pos:column="14"/></operator> <call><name pos:line="268" pos:column="15">check_escape<pos:position pos:line="268" pos:column="27"/></name><argument_list pos:line="268" pos:column="27">(<argument><expr><operator pos:line="268" pos:column="28">&amp;<pos:position pos:line="268" pos:column="33"/></operator><name pos:line="268" pos:column="29">ptr<pos:position pos:line="268" pos:column="32"/></name></expr></argument>, <argument><expr><name pos:line="268" pos:column="34">errorptr<pos:position pos:line="268" pos:column="42"/></name></expr></argument>, <argument><expr><operator pos:line="268" pos:column="44">*<pos:position pos:line="268" pos:column="45"/></operator><name pos:line="268" pos:column="45">brackets<pos:position pos:line="268" pos:column="53"/></name></expr></argument>, <argument><expr><name pos:line="268" pos:column="55">options<pos:position pos:line="268" pos:column="62"/></name></expr></argument>, <argument><expr><name pos:line="268" pos:column="64">TRUE<pos:position pos:line="268" pos:column="68"/></name></expr></argument>, <argument><expr><name pos:line="268" pos:column="70">cd<pos:position pos:line="268" pos:column="72"/></name></expr></argument>)<pos:position pos:line="268" pos:column="73"/></argument_list></call></expr>;<pos:position pos:line="268" pos:column="74"/></expr_stmt>

<cpp:ifdef pos:line="270" pos:column="1">#<cpp:directive pos:line="270" pos:column="2">ifdef<pos:position pos:line="270" pos:column="7"/></cpp:directive> <name pos:line="270" pos:column="8">SUPPORT_UTF8<pos:position pos:line="270" pos:column="20"/></name></cpp:ifdef>
          <if pos:line="271" pos:column="11">if <condition pos:line="271" pos:column="14">(<expr><name pos:line="271" pos:column="15">d<pos:position pos:line="271" pos:column="16"/></name> <operator pos:line="271" pos:column="17">&gt;<pos:position pos:line="271" pos:column="21"/></operator> <literal type="number" pos:line="271" pos:column="19">255<pos:position pos:line="271" pos:column="22"/></literal></expr>)<pos:position pos:line="271" pos:column="23"/></condition><then pos:line="271" pos:column="23">
            <block pos:line="272" pos:column="13">{
            <expr_stmt><expr><operator pos:line="273" pos:column="13">*<pos:position pos:line="273" pos:column="14"/></operator><name pos:line="273" pos:column="14">errorptr<pos:position pos:line="273" pos:column="22"/></name> <operator pos:line="273" pos:column="23">=<pos:position pos:line="273" pos:column="24"/></operator> <name pos:line="273" pos:column="25">ERR33<pos:position pos:line="273" pos:column="30"/></name></expr>;<pos:position pos:line="273" pos:column="31"/></expr_stmt>
            <goto pos:line="274" pos:column="13">goto <name pos:line="274" pos:column="18">FAILED<pos:position pos:line="274" pos:column="24"/></name>;<pos:position pos:line="274" pos:column="25"/></goto>
            }<pos:position pos:line="275" pos:column="14"/></block></then></if>
<cpp:endif pos:line="276" pos:column="1">#<cpp:directive pos:line="276" pos:column="2">endif<pos:position pos:line="276" pos:column="7"/></cpp:directive></cpp:endif>
          <comment type="block" pos:line="277" pos:column="11">/* \b is backslash; any other special means the '-' was literal */</comment>

          <if pos:line="279" pos:column="11">if <condition pos:line="279" pos:column="14">(<expr><name pos:line="279" pos:column="15">d<pos:position pos:line="279" pos:column="16"/></name> <operator pos:line="279" pos:column="17">&lt;<pos:position pos:line="279" pos:column="21"/></operator> <literal type="number" pos:line="279" pos:column="19">0<pos:position pos:line="279" pos:column="20"/></literal></expr>)<pos:position pos:line="279" pos:column="21"/></condition><then pos:line="279" pos:column="21">
            <block pos:line="280" pos:column="13">{
            <if pos:line="281" pos:column="13">if <condition pos:line="281" pos:column="16">(<expr><name pos:line="281" pos:column="17">d<pos:position pos:line="281" pos:column="18"/></name> <operator pos:line="281" pos:column="19">==<pos:position pos:line="281" pos:column="21"/></operator> <operator pos:line="281" pos:column="22">-<pos:position pos:line="281" pos:column="23"/></operator><name pos:line="281" pos:column="23">ESC_b<pos:position pos:line="281" pos:column="28"/></name></expr>)<pos:position pos:line="281" pos:column="29"/></condition><then pos:line="281" pos:column="29"> <block type="pseudo"><expr_stmt><expr><name pos:line="281" pos:column="30">d<pos:position pos:line="281" pos:column="31"/></name> <operator pos:line="281" pos:column="32">=<pos:position pos:line="281" pos:column="33"/></operator> <literal type="char" pos:line="281" pos:column="34">'\b'<pos:position pos:line="281" pos:column="38"/></literal></expr>;<pos:position pos:line="281" pos:column="39"/></expr_stmt></block></then> <else pos:line="281" pos:column="40">else
              <block pos:line="282" pos:column="15">{
              <expr_stmt><expr><name pos:line="283" pos:column="15">ptr<pos:position pos:line="283" pos:column="18"/></name> <operator pos:line="283" pos:column="19">=<pos:position pos:line="283" pos:column="20"/></operator> <name pos:line="283" pos:column="21">oldptr<pos:position pos:line="283" pos:column="27"/></name> <operator pos:line="283" pos:column="28">-<pos:position pos:line="283" pos:column="29"/></operator> <literal type="number" pos:line="283" pos:column="30">2<pos:position pos:line="283" pos:column="31"/></literal></expr>;<pos:position pos:line="283" pos:column="32"/></expr_stmt>
              <goto pos:line="284" pos:column="15">goto <name pos:line="284" pos:column="20">SINGLE_CHARACTER<pos:position pos:line="284" pos:column="36"/></name>;<pos:position pos:line="284" pos:column="37"/></goto>  <comment type="block" pos:line="284" pos:column="39">/* A few lines below */</comment>
              }<pos:position pos:line="285" pos:column="16"/></block></else></if>
            }<pos:position pos:line="286" pos:column="14"/></block></then></if>
          }<pos:position pos:line="287" pos:column="12"/></block></then></if>

        <if pos:line="289" pos:column="9">if <condition pos:line="289" pos:column="12">(<expr><name pos:line="289" pos:column="13">d<pos:position pos:line="289" pos:column="14"/></name> <operator pos:line="289" pos:column="15">&lt;<pos:position pos:line="289" pos:column="19"/></operator> <name pos:line="289" pos:column="17">c<pos:position pos:line="289" pos:column="18"/></name></expr>)<pos:position pos:line="289" pos:column="19"/></condition><then pos:line="289" pos:column="19">
          <block pos:line="290" pos:column="11">{
          <expr_stmt><expr><operator pos:line="291" pos:column="11">*<pos:position pos:line="291" pos:column="12"/></operator><name pos:line="291" pos:column="12">errorptr<pos:position pos:line="291" pos:column="20"/></name> <operator pos:line="291" pos:column="21">=<pos:position pos:line="291" pos:column="22"/></operator> <name pos:line="291" pos:column="23">ERR8<pos:position pos:line="291" pos:column="27"/></name></expr>;<pos:position pos:line="291" pos:column="28"/></expr_stmt>
          <goto pos:line="292" pos:column="11">goto <name pos:line="292" pos:column="16">FAILED<pos:position pos:line="292" pos:column="22"/></name>;<pos:position pos:line="292" pos:column="23"/></goto>
          }<pos:position pos:line="293" pos:column="12"/></block></then></if>

        <for pos:line="295" pos:column="9">for <control pos:line="295" pos:column="13">(<init pos:line="295" pos:column="14">;<pos:position pos:line="295" pos:column="15"/></init> <condition><expr><name pos:line="295" pos:column="16">c<pos:position pos:line="295" pos:column="17"/></name> <operator pos:line="295" pos:column="18">&lt;=<pos:position pos:line="295" pos:column="23"/></operator> <name pos:line="295" pos:column="21">d<pos:position pos:line="295" pos:column="22"/></name></expr>;<pos:position pos:line="295" pos:column="23"/></condition> <incr><expr><name pos:line="295" pos:column="24">c<pos:position pos:line="295" pos:column="25"/></name><operator pos:line="295" pos:column="25">++<pos:position pos:line="295" pos:column="27"/></operator></expr></incr>)<pos:position pos:line="295" pos:column="28"/></control>
          <block pos:line="296" pos:column="11">{
          <expr_stmt><expr><name><name pos:line="297" pos:column="11">class<pos:position pos:line="297" pos:column="16"/></name><index pos:line="297" pos:column="16">[<expr><name pos:line="297" pos:column="17">c<pos:position pos:line="297" pos:column="18"/></name><operator pos:line="297" pos:column="18">/<pos:position pos:line="297" pos:column="19"/></operator><literal type="number" pos:line="297" pos:column="19">8<pos:position pos:line="297" pos:column="20"/></literal></expr>]<pos:position pos:line="297" pos:column="21"/></index></name> <operator pos:line="297" pos:column="22">|=<pos:position pos:line="297" pos:column="24"/></operator> <operator pos:line="297" pos:column="25">(<pos:position pos:line="297" pos:column="26"/></operator><literal type="number" pos:line="297" pos:column="26">1<pos:position pos:line="297" pos:column="27"/></literal> <operator pos:line="297" pos:column="28">&lt;&lt;<pos:position pos:line="297" pos:column="36"/></operator> <operator pos:line="297" pos:column="31">(<pos:position pos:line="297" pos:column="32"/></operator><name pos:line="297" pos:column="32">c<pos:position pos:line="297" pos:column="33"/></name><operator pos:line="297" pos:column="33">&amp;<pos:position pos:line="297" pos:column="38"/></operator><literal type="number" pos:line="297" pos:column="34">7<pos:position pos:line="297" pos:column="35"/></literal><operator pos:line="297" pos:column="35">)<pos:position pos:line="297" pos:column="36"/></operator><operator pos:line="297" pos:column="36">)<pos:position pos:line="297" pos:column="37"/></operator></expr>;<pos:position pos:line="297" pos:column="38"/></expr_stmt>
          <if pos:line="298" pos:column="11">if <condition pos:line="298" pos:column="14">(<expr><operator pos:line="298" pos:column="15">(<pos:position pos:line="298" pos:column="16"/></operator><name pos:line="298" pos:column="16">options<pos:position pos:line="298" pos:column="23"/></name> <operator pos:line="298" pos:column="24">&amp;<pos:position pos:line="298" pos:column="29"/></operator> <name pos:line="298" pos:column="26">PCRE_CASELESS<pos:position pos:line="298" pos:column="39"/></name><operator pos:line="298" pos:column="39">)<pos:position pos:line="298" pos:column="40"/></operator> <operator pos:line="298" pos:column="41">!=<pos:position pos:line="298" pos:column="43"/></operator> <literal type="number" pos:line="298" pos:column="44">0<pos:position pos:line="298" pos:column="45"/></literal></expr>)<pos:position pos:line="298" pos:column="46"/></condition><then pos:line="298" pos:column="46">
            <block pos:line="299" pos:column="13">{
            <decl_stmt><decl><type><name pos:line="300" pos:column="13">int<pos:position pos:line="300" pos:column="16"/></name></type> <name pos:line="300" pos:column="17">uc<pos:position pos:line="300" pos:column="19"/></name> <init pos:line="300" pos:column="20">= <expr><name><name pos:line="300" pos:column="22">cd<pos:position pos:line="300" pos:column="24"/></name><operator pos:line="300" pos:column="24">-&gt;<pos:position pos:line="300" pos:column="29"/></operator><name pos:line="300" pos:column="26">fcc<pos:position pos:line="300" pos:column="29"/></name><index pos:line="300" pos:column="29">[<expr><name pos:line="300" pos:column="30">c<pos:position pos:line="300" pos:column="31"/></name></expr>]<pos:position pos:line="300" pos:column="32"/></index></name></expr></init></decl>;<pos:position pos:line="300" pos:column="33"/></decl_stmt>           <comment type="block" pos:line="300" pos:column="44">/* flip case */</comment>
            <expr_stmt><expr><name><name pos:line="301" pos:column="13">class<pos:position pos:line="301" pos:column="18"/></name><index pos:line="301" pos:column="18">[<expr><name pos:line="301" pos:column="19">uc<pos:position pos:line="301" pos:column="21"/></name><operator pos:line="301" pos:column="21">/<pos:position pos:line="301" pos:column="22"/></operator><literal type="number" pos:line="301" pos:column="22">8<pos:position pos:line="301" pos:column="23"/></literal></expr>]<pos:position pos:line="301" pos:column="24"/></index></name> <operator pos:line="301" pos:column="25">|=<pos:position pos:line="301" pos:column="27"/></operator> <operator pos:line="301" pos:column="28">(<pos:position pos:line="301" pos:column="29"/></operator><literal type="number" pos:line="301" pos:column="29">1<pos:position pos:line="301" pos:column="30"/></literal> <operator pos:line="301" pos:column="31">&lt;&lt;<pos:position pos:line="301" pos:column="39"/></operator> <operator pos:line="301" pos:column="34">(<pos:position pos:line="301" pos:column="35"/></operator><name pos:line="301" pos:column="35">uc<pos:position pos:line="301" pos:column="37"/></name><operator pos:line="301" pos:column="37">&amp;<pos:position pos:line="301" pos:column="42"/></operator><literal type="number" pos:line="301" pos:column="38">7<pos:position pos:line="301" pos:column="39"/></literal><operator pos:line="301" pos:column="39">)<pos:position pos:line="301" pos:column="40"/></operator><operator pos:line="301" pos:column="40">)<pos:position pos:line="301" pos:column="41"/></operator></expr>;<pos:position pos:line="301" pos:column="42"/></expr_stmt>
            }<pos:position pos:line="302" pos:column="14"/></block></then></if>
          <expr_stmt><expr><name pos:line="303" pos:column="11">class_charcount<pos:position pos:line="303" pos:column="26"/></name><operator pos:line="303" pos:column="26">++<pos:position pos:line="303" pos:column="28"/></operator></expr>;<pos:position pos:line="303" pos:column="29"/></expr_stmt>                <comment type="block" pos:line="303" pos:column="45">/* in case a one-char range */</comment>
          <expr_stmt><expr><name pos:line="304" pos:column="11">class_lastchar<pos:position pos:line="304" pos:column="25"/></name> <operator pos:line="304" pos:column="26">=<pos:position pos:line="304" pos:column="27"/></operator> <name pos:line="304" pos:column="28">c<pos:position pos:line="304" pos:column="29"/></name></expr>;<pos:position pos:line="304" pos:column="30"/></expr_stmt>
          }<pos:position pos:line="305" pos:column="12"/></block></for>
        <continue pos:line="306" pos:column="9">continue;<pos:position pos:line="306" pos:column="18"/></continue>   <comment type="block" pos:line="306" pos:column="21">/* Go get the next char in the class */</comment>
        }<pos:position pos:line="307" pos:column="10"/></block></then></if>

      <comment type="block" pos:line="309" pos:column="7">/* Handle a lone single character - we can get here for a normal
      non-escape char, or after \ that introduces a single character. */</comment>

      <label><name pos:line="312" pos:column="7">SINGLE_CHARACTER<pos:position pos:line="312" pos:column="23"/></name>:<pos:position pos:line="312" pos:column="24"/></label>

      <expr_stmt><expr><name><name pos:line="314" pos:column="7">class<pos:position pos:line="314" pos:column="12"/></name> <index pos:line="314" pos:column="13">[<expr><name pos:line="314" pos:column="14">c<pos:position pos:line="314" pos:column="15"/></name><operator pos:line="314" pos:column="15">/<pos:position pos:line="314" pos:column="16"/></operator><literal type="number" pos:line="314" pos:column="16">8<pos:position pos:line="314" pos:column="17"/></literal></expr>]<pos:position pos:line="314" pos:column="18"/></index></name> <operator pos:line="314" pos:column="19">|=<pos:position pos:line="314" pos:column="21"/></operator> <operator pos:line="314" pos:column="22">(<pos:position pos:line="314" pos:column="23"/></operator><literal type="number" pos:line="314" pos:column="23">1<pos:position pos:line="314" pos:column="24"/></literal> <operator pos:line="314" pos:column="25">&lt;&lt;<pos:position pos:line="314" pos:column="33"/></operator> <operator pos:line="314" pos:column="28">(<pos:position pos:line="314" pos:column="29"/></operator><name pos:line="314" pos:column="29">c<pos:position pos:line="314" pos:column="30"/></name><operator pos:line="314" pos:column="30">&amp;<pos:position pos:line="314" pos:column="35"/></operator><literal type="number" pos:line="314" pos:column="31">7<pos:position pos:line="314" pos:column="32"/></literal><operator pos:line="314" pos:column="32">)<pos:position pos:line="314" pos:column="33"/></operator><operator pos:line="314" pos:column="33">)<pos:position pos:line="314" pos:column="34"/></operator></expr>;<pos:position pos:line="314" pos:column="35"/></expr_stmt>
      <if pos:line="315" pos:column="7">if <condition pos:line="315" pos:column="10">(<expr><operator pos:line="315" pos:column="11">(<pos:position pos:line="315" pos:column="12"/></operator><name pos:line="315" pos:column="12">options<pos:position pos:line="315" pos:column="19"/></name> <operator pos:line="315" pos:column="20">&amp;<pos:position pos:line="315" pos:column="25"/></operator> <name pos:line="315" pos:column="22">PCRE_CASELESS<pos:position pos:line="315" pos:column="35"/></name><operator pos:line="315" pos:column="35">)<pos:position pos:line="315" pos:column="36"/></operator> <operator pos:line="315" pos:column="37">!=<pos:position pos:line="315" pos:column="39"/></operator> <literal type="number" pos:line="315" pos:column="40">0<pos:position pos:line="315" pos:column="41"/></literal></expr>)<pos:position pos:line="315" pos:column="42"/></condition><then pos:line="315" pos:column="42">
        <block pos:line="316" pos:column="9">{
        <expr_stmt><expr><name pos:line="317" pos:column="9">c<pos:position pos:line="317" pos:column="10"/></name> <operator pos:line="317" pos:column="11">=<pos:position pos:line="317" pos:column="12"/></operator> <name><name pos:line="317" pos:column="13">cd<pos:position pos:line="317" pos:column="15"/></name><operator pos:line="317" pos:column="15">-&gt;<pos:position pos:line="317" pos:column="20"/></operator><name pos:line="317" pos:column="17">fcc<pos:position pos:line="317" pos:column="20"/></name><index pos:line="317" pos:column="20">[<expr><name pos:line="317" pos:column="21">c<pos:position pos:line="317" pos:column="22"/></name></expr>]<pos:position pos:line="317" pos:column="23"/></index></name></expr>;<pos:position pos:line="317" pos:column="24"/></expr_stmt>   <comment type="block" pos:line="317" pos:column="27">/* flip case */</comment>
        <expr_stmt><expr><name><name pos:line="318" pos:column="9">class<pos:position pos:line="318" pos:column="14"/></name><index pos:line="318" pos:column="14">[<expr><name pos:line="318" pos:column="15">c<pos:position pos:line="318" pos:column="16"/></name><operator pos:line="318" pos:column="16">/<pos:position pos:line="318" pos:column="17"/></operator><literal type="number" pos:line="318" pos:column="17">8<pos:position pos:line="318" pos:column="18"/></literal></expr>]<pos:position pos:line="318" pos:column="19"/></index></name> <operator pos:line="318" pos:column="20">|=<pos:position pos:line="318" pos:column="22"/></operator> <operator pos:line="318" pos:column="23">(<pos:position pos:line="318" pos:column="24"/></operator><literal type="number" pos:line="318" pos:column="24">1<pos:position pos:line="318" pos:column="25"/></literal> <operator pos:line="318" pos:column="26">&lt;&lt;<pos:position pos:line="318" pos:column="34"/></operator> <operator pos:line="318" pos:column="29">(<pos:position pos:line="318" pos:column="30"/></operator><name pos:line="318" pos:column="30">c<pos:position pos:line="318" pos:column="31"/></name><operator pos:line="318" pos:column="31">&amp;<pos:position pos:line="318" pos:column="36"/></operator><literal type="number" pos:line="318" pos:column="32">7<pos:position pos:line="318" pos:column="33"/></literal><operator pos:line="318" pos:column="33">)<pos:position pos:line="318" pos:column="34"/></operator><operator pos:line="318" pos:column="34">)<pos:position pos:line="318" pos:column="35"/></operator></expr>;<pos:position pos:line="318" pos:column="36"/></expr_stmt>
        }<pos:position pos:line="319" pos:column="10"/></block></then></if>
      <expr_stmt><expr><name pos:line="320" pos:column="7">class_charcount<pos:position pos:line="320" pos:column="22"/></name><operator pos:line="320" pos:column="22">++<pos:position pos:line="320" pos:column="24"/></operator></expr>;<pos:position pos:line="320" pos:column="25"/></expr_stmt>
      <expr_stmt><expr><name pos:line="321" pos:column="7">class_lastchar<pos:position pos:line="321" pos:column="21"/></name> <operator pos:line="321" pos:column="22">=<pos:position pos:line="321" pos:column="23"/></operator> <name pos:line="321" pos:column="24">c<pos:position pos:line="321" pos:column="25"/></name></expr>;<pos:position pos:line="321" pos:column="26"/></expr_stmt>
      }<pos:position pos:line="322" pos:column="8"/></block>

    <comment type="block" pos:line="324" pos:column="5">/* Loop until ']' reached; the check for end of string happens inside the
    loop. This "while" is the end of the "do" above. */</comment>

    while <condition pos:line="327" pos:column="11">(<expr><operator pos:line="327" pos:column="12">(<pos:position pos:line="327" pos:column="13"/></operator><name pos:line="327" pos:column="13">c<pos:position pos:line="327" pos:column="14"/></name> <operator pos:line="327" pos:column="15">=<pos:position pos:line="327" pos:column="16"/></operator> <operator pos:line="327" pos:column="17">*<pos:position pos:line="327" pos:column="18"/></operator><operator pos:line="327" pos:column="18">(<pos:position pos:line="327" pos:column="19"/></operator><operator pos:line="327" pos:column="19">++<pos:position pos:line="327" pos:column="21"/></operator><name pos:line="327" pos:column="21">ptr<pos:position pos:line="327" pos:column="24"/></name><operator pos:line="327" pos:column="24">)<pos:position pos:line="327" pos:column="25"/></operator><operator pos:line="327" pos:column="25">)<pos:position pos:line="327" pos:column="26"/></operator> <operator pos:line="327" pos:column="27">!=<pos:position pos:line="327" pos:column="29"/></operator> <literal type="char" pos:line="327" pos:column="30">']'<pos:position pos:line="327" pos:column="33"/></literal></expr>)<pos:position pos:line="327" pos:column="34"/></condition>;<pos:position pos:line="327" pos:column="35"/></do>

    <comment type="block" pos:line="329" pos:column="5">/* If class_charcount is 1 and class_lastchar is not negative, we saw
    precisely one character. This doesn't need the whole 32-byte bit map.
    We turn it into a 1-character OP_CHAR if it's positive, or OP_NOT if
    it's negative. */</comment>

    <if pos:line="334" pos:column="5">if <condition pos:line="334" pos:column="8">(<expr><name pos:line="334" pos:column="9">class_charcount<pos:position pos:line="334" pos:column="24"/></name> <operator pos:line="334" pos:column="25">==<pos:position pos:line="334" pos:column="27"/></operator> <literal type="number" pos:line="334" pos:column="28">1<pos:position pos:line="334" pos:column="29"/></literal> <operator pos:line="334" pos:column="30">&amp;&amp;<pos:position pos:line="334" pos:column="40"/></operator> <name pos:line="334" pos:column="33">class_lastchar<pos:position pos:line="334" pos:column="47"/></name> <operator pos:line="334" pos:column="48">&gt;=<pos:position pos:line="334" pos:column="53"/></operator> <literal type="number" pos:line="334" pos:column="51">0<pos:position pos:line="334" pos:column="52"/></literal></expr>)<pos:position pos:line="334" pos:column="53"/></condition><then pos:line="334" pos:column="53">
      <block pos:line="335" pos:column="7">{
      <if pos:line="336" pos:column="7">if <condition pos:line="336" pos:column="10">(<expr><name pos:line="336" pos:column="11">negate_class<pos:position pos:line="336" pos:column="23"/></name></expr>)<pos:position pos:line="336" pos:column="24"/></condition><then pos:line="336" pos:column="24">
        <block pos:line="337" pos:column="9">{
        <expr_stmt><expr><name><name pos:line="338" pos:column="9">code<pos:position pos:line="338" pos:column="13"/></name><index pos:line="338" pos:column="13">[<expr><operator pos:line="338" pos:column="14">-<pos:position pos:line="338" pos:column="15"/></operator><literal type="number" pos:line="338" pos:column="15">1<pos:position pos:line="338" pos:column="16"/></literal></expr>]<pos:position pos:line="338" pos:column="17"/></index></name> <operator pos:line="338" pos:column="18">=<pos:position pos:line="338" pos:column="19"/></operator> <name pos:line="338" pos:column="20">OP_NOT<pos:position pos:line="338" pos:column="26"/></name></expr>;<pos:position pos:line="338" pos:column="27"/></expr_stmt>
        }<pos:position pos:line="339" pos:column="10"/></block></then>
      <else pos:line="340" pos:column="7">else
        <block pos:line="341" pos:column="9">{
        <expr_stmt><expr><name><name pos:line="342" pos:column="9">code<pos:position pos:line="342" pos:column="13"/></name><index pos:line="342" pos:column="13">[<expr><operator pos:line="342" pos:column="14">-<pos:position pos:line="342" pos:column="15"/></operator><literal type="number" pos:line="342" pos:column="15">1<pos:position pos:line="342" pos:column="16"/></literal></expr>]<pos:position pos:line="342" pos:column="17"/></index></name> <operator pos:line="342" pos:column="18">=<pos:position pos:line="342" pos:column="19"/></operator> <name pos:line="342" pos:column="20">OP_CHARS<pos:position pos:line="342" pos:column="28"/></name></expr>;<pos:position pos:line="342" pos:column="29"/></expr_stmt>
        <expr_stmt><expr><operator pos:line="343" pos:column="9">*<pos:position pos:line="343" pos:column="10"/></operator><name pos:line="343" pos:column="10">code<pos:position pos:line="343" pos:column="14"/></name><operator pos:line="343" pos:column="14">++<pos:position pos:line="343" pos:column="16"/></operator> <operator pos:line="343" pos:column="17">=<pos:position pos:line="343" pos:column="18"/></operator> <literal type="number" pos:line="343" pos:column="19">1<pos:position pos:line="343" pos:column="20"/></literal></expr>;<pos:position pos:line="343" pos:column="21"/></expr_stmt>
        }<pos:position pos:line="344" pos:column="10"/></block></else></if>
      <expr_stmt><expr><operator pos:line="345" pos:column="7">*<pos:position pos:line="345" pos:column="8"/></operator><name pos:line="345" pos:column="8">code<pos:position pos:line="345" pos:column="12"/></name><operator pos:line="345" pos:column="12">++<pos:position pos:line="345" pos:column="14"/></operator> <operator pos:line="345" pos:column="15">=<pos:position pos:line="345" pos:column="16"/></operator> <name pos:line="345" pos:column="17">class_lastchar<pos:position pos:line="345" pos:column="31"/></name></expr>;<pos:position pos:line="345" pos:column="32"/></expr_stmt>
      }<pos:position pos:line="346" pos:column="8"/></block></then>

    <comment type="block" pos:line="348" pos:column="5">/* Otherwise, negate the 32-byte map if necessary, and copy it into
    the code vector. */</comment>

    <else pos:line="351" pos:column="5">else
      <block pos:line="352" pos:column="7">{
      <if pos:line="353" pos:column="7">if <condition pos:line="353" pos:column="10">(<expr><name pos:line="353" pos:column="11">negate_class<pos:position pos:line="353" pos:column="23"/></name></expr>)<pos:position pos:line="353" pos:column="24"/></condition><then pos:line="353" pos:column="24">
        <block type="pseudo"><for pos:line="354" pos:column="9">for <control pos:line="354" pos:column="13">(<init><expr><name pos:line="354" pos:column="14">c<pos:position pos:line="354" pos:column="15"/></name> <operator pos:line="354" pos:column="16">=<pos:position pos:line="354" pos:column="17"/></operator> <literal type="number" pos:line="354" pos:column="18">0<pos:position pos:line="354" pos:column="19"/></literal></expr>;<pos:position pos:line="354" pos:column="20"/></init> <condition><expr><name pos:line="354" pos:column="21">c<pos:position pos:line="354" pos:column="22"/></name> <operator pos:line="354" pos:column="23">&lt;<pos:position pos:line="354" pos:column="27"/></operator> <literal type="number" pos:line="354" pos:column="25">32<pos:position pos:line="354" pos:column="27"/></literal></expr>;<pos:position pos:line="354" pos:column="28"/></condition> <incr><expr><name pos:line="354" pos:column="29">c<pos:position pos:line="354" pos:column="30"/></name><operator pos:line="354" pos:column="30">++<pos:position pos:line="354" pos:column="32"/></operator></expr></incr>)<pos:position pos:line="354" pos:column="33"/></control> <block type="pseudo"><expr_stmt><expr><name><name pos:line="354" pos:column="34">code<pos:position pos:line="354" pos:column="38"/></name><index pos:line="354" pos:column="38">[<expr><name pos:line="354" pos:column="39">c<pos:position pos:line="354" pos:column="40"/></name></expr>]<pos:position pos:line="354" pos:column="41"/></index></name> <operator pos:line="354" pos:column="42">=<pos:position pos:line="354" pos:column="43"/></operator> <operator pos:line="354" pos:column="44">~<pos:position pos:line="354" pos:column="45"/></operator><name><name pos:line="354" pos:column="45">class<pos:position pos:line="354" pos:column="50"/></name><index pos:line="354" pos:column="50">[<expr><name pos:line="354" pos:column="51">c<pos:position pos:line="354" pos:column="52"/></name></expr>]<pos:position pos:line="354" pos:column="53"/></index></name></expr>;<pos:position pos:line="354" pos:column="54"/></expr_stmt></block></for></block></then>
      <else pos:line="355" pos:column="7">else
        <block type="pseudo"><expr_stmt><expr><call><name pos:line="356" pos:column="9">memcpy<pos:position pos:line="356" pos:column="15"/></name><argument_list pos:line="356" pos:column="15">(<argument><expr><name pos:line="356" pos:column="16">code<pos:position pos:line="356" pos:column="20"/></name></expr></argument>, <argument><expr><name pos:line="356" pos:column="22">class<pos:position pos:line="356" pos:column="27"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="356" pos:column="29">32<pos:position pos:line="356" pos:column="31"/></literal></expr></argument>)<pos:position pos:line="356" pos:column="32"/></argument_list></call></expr>;<pos:position pos:line="356" pos:column="33"/></expr_stmt></block></else></if>
      <expr_stmt><expr><name pos:line="357" pos:column="7">code<pos:position pos:line="357" pos:column="11"/></name> <operator pos:line="357" pos:column="12">+=<pos:position pos:line="357" pos:column="14"/></operator> <literal type="number" pos:line="357" pos:column="15">32<pos:position pos:line="357" pos:column="17"/></literal></expr>;<pos:position pos:line="357" pos:column="18"/></expr_stmt>
      }<pos:position pos:line="358" pos:column="8"/></block></else></if>
    <break pos:line="359" pos:column="5">break;<pos:position pos:line="359" pos:column="11"/></break>

    <comment type="block" pos:line="361" pos:column="5">/* Various kinds of repeat */</comment>

    <case pos:line="363" pos:column="5">case <expr><literal type="char" pos:line="363" pos:column="10">'{'<pos:position pos:line="363" pos:column="13"/></literal></expr>:<pos:position pos:line="363" pos:column="14"/></case>
    <if pos:line="364" pos:column="5">if <condition pos:line="364" pos:column="8">(<expr><operator pos:line="364" pos:column="9">!<pos:position pos:line="364" pos:column="10"/></operator><call><name pos:line="364" pos:column="10">is_counted_repeat<pos:position pos:line="364" pos:column="27"/></name><argument_list pos:line="364" pos:column="27">(<argument><expr><name pos:line="364" pos:column="28">ptr<pos:position pos:line="364" pos:column="31"/></name><operator pos:line="364" pos:column="31">+<pos:position pos:line="364" pos:column="32"/></operator><literal type="number" pos:line="364" pos:column="32">1<pos:position pos:line="364" pos:column="33"/></literal></expr></argument>, <argument><expr><name pos:line="364" pos:column="35">cd<pos:position pos:line="364" pos:column="37"/></name></expr></argument>)<pos:position pos:line="364" pos:column="38"/></argument_list></call></expr>)<pos:position pos:line="364" pos:column="39"/></condition><then pos:line="364" pos:column="39"> <block type="pseudo"><goto pos:line="364" pos:column="40">goto <name pos:line="364" pos:column="45">NORMAL_CHAR<pos:position pos:line="364" pos:column="56"/></name>;<pos:position pos:line="364" pos:column="57"/></goto></block></then></if>
    <expr_stmt><expr><name pos:line="365" pos:column="5">ptr<pos:position pos:line="365" pos:column="8"/></name> <operator pos:line="365" pos:column="9">=<pos:position pos:line="365" pos:column="10"/></operator> <call><name pos:line="365" pos:column="11">read_repeat_counts<pos:position pos:line="365" pos:column="29"/></name><argument_list pos:line="365" pos:column="29">(<argument><expr><name pos:line="365" pos:column="30">ptr<pos:position pos:line="365" pos:column="33"/></name><operator pos:line="365" pos:column="33">+<pos:position pos:line="365" pos:column="34"/></operator><literal type="number" pos:line="365" pos:column="34">1<pos:position pos:line="365" pos:column="35"/></literal></expr></argument>, <argument><expr><operator pos:line="365" pos:column="37">&amp;<pos:position pos:line="365" pos:column="42"/></operator><name pos:line="365" pos:column="38">repeat_min<pos:position pos:line="365" pos:column="48"/></name></expr></argument>, <argument><expr><operator pos:line="365" pos:column="50">&amp;<pos:position pos:line="365" pos:column="55"/></operator><name pos:line="365" pos:column="51">repeat_max<pos:position pos:line="365" pos:column="61"/></name></expr></argument>, <argument><expr><name pos:line="365" pos:column="63">errorptr<pos:position pos:line="365" pos:column="71"/></name></expr></argument>, <argument><expr><name pos:line="365" pos:column="73">cd<pos:position pos:line="365" pos:column="75"/></name></expr></argument>)<pos:position pos:line="365" pos:column="76"/></argument_list></call></expr>;<pos:position pos:line="365" pos:column="77"/></expr_stmt>
    <if pos:line="366" pos:column="5">if <condition pos:line="366" pos:column="8">(<expr><operator pos:line="366" pos:column="9">*<pos:position pos:line="366" pos:column="10"/></operator><name pos:line="366" pos:column="10">errorptr<pos:position pos:line="366" pos:column="18"/></name> <operator pos:line="366" pos:column="19">!=<pos:position pos:line="366" pos:column="21"/></operator> <name pos:line="366" pos:column="22">NULL<pos:position pos:line="366" pos:column="26"/></name></expr>)<pos:position pos:line="366" pos:column="27"/></condition><then pos:line="366" pos:column="27"> <block type="pseudo"><goto pos:line="366" pos:column="28">goto <name pos:line="366" pos:column="33">FAILED<pos:position pos:line="366" pos:column="39"/></name>;<pos:position pos:line="366" pos:column="40"/></goto></block></then></if>
    <goto pos:line="367" pos:column="5">goto <name pos:line="367" pos:column="10">REPEAT<pos:position pos:line="367" pos:column="16"/></name>;<pos:position pos:line="367" pos:column="17"/></goto>

    <case pos:line="369" pos:column="5">case <expr><literal type="char" pos:line="369" pos:column="10">'*'<pos:position pos:line="369" pos:column="13"/></literal></expr>:<pos:position pos:line="369" pos:column="14"/></case>
    <expr_stmt><expr><name pos:line="370" pos:column="5">repeat_min<pos:position pos:line="370" pos:column="15"/></name> <operator pos:line="370" pos:column="16">=<pos:position pos:line="370" pos:column="17"/></operator> <literal type="number" pos:line="370" pos:column="18">0<pos:position pos:line="370" pos:column="19"/></literal></expr>;<pos:position pos:line="370" pos:column="20"/></expr_stmt>
    <expr_stmt><expr><name pos:line="371" pos:column="5">repeat_max<pos:position pos:line="371" pos:column="15"/></name> <operator pos:line="371" pos:column="16">=<pos:position pos:line="371" pos:column="17"/></operator> <operator pos:line="371" pos:column="18">-<pos:position pos:line="371" pos:column="19"/></operator><literal type="number" pos:line="371" pos:column="19">1<pos:position pos:line="371" pos:column="20"/></literal></expr>;<pos:position pos:line="371" pos:column="21"/></expr_stmt>
    <goto pos:line="372" pos:column="5">goto <name pos:line="372" pos:column="10">REPEAT<pos:position pos:line="372" pos:column="16"/></name>;<pos:position pos:line="372" pos:column="17"/></goto>

    <case pos:line="374" pos:column="5">case <expr><literal type="char" pos:line="374" pos:column="10">'+'<pos:position pos:line="374" pos:column="13"/></literal></expr>:<pos:position pos:line="374" pos:column="14"/></case>
    <expr_stmt><expr><name pos:line="375" pos:column="5">repeat_min<pos:position pos:line="375" pos:column="15"/></name> <operator pos:line="375" pos:column="16">=<pos:position pos:line="375" pos:column="17"/></operator> <literal type="number" pos:line="375" pos:column="18">1<pos:position pos:line="375" pos:column="19"/></literal></expr>;<pos:position pos:line="375" pos:column="20"/></expr_stmt>
    <expr_stmt><expr><name pos:line="376" pos:column="5">repeat_max<pos:position pos:line="376" pos:column="15"/></name> <operator pos:line="376" pos:column="16">=<pos:position pos:line="376" pos:column="17"/></operator> <operator pos:line="376" pos:column="18">-<pos:position pos:line="376" pos:column="19"/></operator><literal type="number" pos:line="376" pos:column="19">1<pos:position pos:line="376" pos:column="20"/></literal></expr>;<pos:position pos:line="376" pos:column="21"/></expr_stmt>
    <goto pos:line="377" pos:column="5">goto <name pos:line="377" pos:column="10">REPEAT<pos:position pos:line="377" pos:column="16"/></name>;<pos:position pos:line="377" pos:column="17"/></goto>

    <case pos:line="379" pos:column="5">case <expr><literal type="char" pos:line="379" pos:column="10">'?'<pos:position pos:line="379" pos:column="13"/></literal></expr>:<pos:position pos:line="379" pos:column="14"/></case>
    <expr_stmt><expr><name pos:line="380" pos:column="5">repeat_min<pos:position pos:line="380" pos:column="15"/></name> <operator pos:line="380" pos:column="16">=<pos:position pos:line="380" pos:column="17"/></operator> <literal type="number" pos:line="380" pos:column="18">0<pos:position pos:line="380" pos:column="19"/></literal></expr>;<pos:position pos:line="380" pos:column="20"/></expr_stmt>
    <expr_stmt><expr><name pos:line="381" pos:column="5">repeat_max<pos:position pos:line="381" pos:column="15"/></name> <operator pos:line="381" pos:column="16">=<pos:position pos:line="381" pos:column="17"/></operator> <literal type="number" pos:line="381" pos:column="18">1<pos:position pos:line="381" pos:column="19"/></literal></expr>;<pos:position pos:line="381" pos:column="20"/></expr_stmt>

    <label><name pos:line="383" pos:column="5">REPEAT<pos:position pos:line="383" pos:column="11"/></name>:<pos:position pos:line="383" pos:column="12"/></label>
    <if pos:line="384" pos:column="5">if <condition pos:line="384" pos:column="8">(<expr><name pos:line="384" pos:column="9">previous<pos:position pos:line="384" pos:column="17"/></name> <operator pos:line="384" pos:column="18">==<pos:position pos:line="384" pos:column="20"/></operator> <name pos:line="384" pos:column="21">NULL<pos:position pos:line="384" pos:column="25"/></name></expr>)<pos:position pos:line="384" pos:column="26"/></condition><then pos:line="384" pos:column="26">
      <block pos:line="385" pos:column="7">{
      <expr_stmt><expr><operator pos:line="386" pos:column="7">*<pos:position pos:line="386" pos:column="8"/></operator><name pos:line="386" pos:column="8">errorptr<pos:position pos:line="386" pos:column="16"/></name> <operator pos:line="386" pos:column="17">=<pos:position pos:line="386" pos:column="18"/></operator> <name pos:line="386" pos:column="19">ERR9<pos:position pos:line="386" pos:column="23"/></name></expr>;<pos:position pos:line="386" pos:column="24"/></expr_stmt>
      <goto pos:line="387" pos:column="7">goto <name pos:line="387" pos:column="12">FAILED<pos:position pos:line="387" pos:column="18"/></name>;<pos:position pos:line="387" pos:column="19"/></goto>
      }<pos:position pos:line="388" pos:column="8"/></block></then></if>

    <comment type="block" pos:line="390" pos:column="5">/* If the next character is '?' this is a minimizing repeat, by default,
    but if PCRE_UNGREEDY is set, it works the other way round. Advance to the
    next character. */</comment>

    <if pos:line="394" pos:column="5">if <condition pos:line="394" pos:column="8">(<expr><name><name pos:line="394" pos:column="9">ptr<pos:position pos:line="394" pos:column="12"/></name><index pos:line="394" pos:column="12">[<expr><literal type="number" pos:line="394" pos:column="13">1<pos:position pos:line="394" pos:column="14"/></literal></expr>]<pos:position pos:line="394" pos:column="15"/></index></name> <operator pos:line="394" pos:column="16">==<pos:position pos:line="394" pos:column="18"/></operator> <literal type="char" pos:line="394" pos:column="19">'?'<pos:position pos:line="394" pos:column="22"/></literal></expr>)<pos:position pos:line="394" pos:column="23"/></condition><then pos:line="394" pos:column="23">
      <block pos:line="395" pos:column="7">{ <expr_stmt><expr><name pos:line="395" pos:column="9">repeat_type<pos:position pos:line="395" pos:column="20"/></name> <operator pos:line="395" pos:column="21">=<pos:position pos:line="395" pos:column="22"/></operator> <name pos:line="395" pos:column="23">greedy_non_default<pos:position pos:line="395" pos:column="41"/></name></expr>;<pos:position pos:line="395" pos:column="42"/></expr_stmt> <expr_stmt><expr><name pos:line="395" pos:column="43">ptr<pos:position pos:line="395" pos:column="46"/></name><operator pos:line="395" pos:column="46">++<pos:position pos:line="395" pos:column="48"/></operator></expr>;<pos:position pos:line="395" pos:column="49"/></expr_stmt> }<pos:position pos:line="395" pos:column="51"/></block></then>
    <else pos:line="396" pos:column="5">else <block type="pseudo"><expr_stmt><expr><name pos:line="396" pos:column="10">repeat_type<pos:position pos:line="396" pos:column="21"/></name> <operator pos:line="396" pos:column="22">=<pos:position pos:line="396" pos:column="23"/></operator> <name pos:line="396" pos:column="24">greedy_default<pos:position pos:line="396" pos:column="38"/></name></expr>;<pos:position pos:line="396" pos:column="39"/></expr_stmt></block></else></if>

    <comment type="block" pos:line="398" pos:column="5">/* If previous was a string of characters, chop off the last one and use it
    as the subject of the repeat. If there was only one character, we can
    abolish the previous item altogether. A repeat with a zero minimum wipes
    out any reqchar setting, backing up to the previous value. We must also
    adjust the countlits value. */</comment>

    <if pos:line="404" pos:column="5">if <condition pos:line="404" pos:column="8">(<expr><operator pos:line="404" pos:column="9">*<pos:position pos:line="404" pos:column="10"/></operator><name pos:line="404" pos:column="10">previous<pos:position pos:line="404" pos:column="18"/></name> <operator pos:line="404" pos:column="19">==<pos:position pos:line="404" pos:column="21"/></operator> <name pos:line="404" pos:column="22">OP_CHARS<pos:position pos:line="404" pos:column="30"/></name></expr>)<pos:position pos:line="404" pos:column="31"/></condition><then pos:line="404" pos:column="31">
      <block pos:line="405" pos:column="7">{
      <decl_stmt><decl><type><name pos:line="406" pos:column="7">int<pos:position pos:line="406" pos:column="10"/></name></type> <name pos:line="406" pos:column="11">len<pos:position pos:line="406" pos:column="14"/></name> <init pos:line="406" pos:column="15">= <expr><name><name pos:line="406" pos:column="17">previous<pos:position pos:line="406" pos:column="25"/></name><index pos:line="406" pos:column="25">[<expr><literal type="number" pos:line="406" pos:column="26">1<pos:position pos:line="406" pos:column="27"/></literal></expr>]<pos:position pos:line="406" pos:column="28"/></index></name></expr></init></decl>;<pos:position pos:line="406" pos:column="29"/></decl_stmt>

      <if pos:line="408" pos:column="7">if <condition pos:line="408" pos:column="10">(<expr><name pos:line="408" pos:column="11">repeat_min<pos:position pos:line="408" pos:column="21"/></name> <operator pos:line="408" pos:column="22">==<pos:position pos:line="408" pos:column="24"/></operator> <literal type="number" pos:line="408" pos:column="25">0<pos:position pos:line="408" pos:column="26"/></literal></expr>)<pos:position pos:line="408" pos:column="27"/></condition><then pos:line="408" pos:column="27"> <block type="pseudo"><expr_stmt><expr><operator pos:line="408" pos:column="28">*<pos:position pos:line="408" pos:column="29"/></operator><name pos:line="408" pos:column="29">reqchar<pos:position pos:line="408" pos:column="36"/></name> <operator pos:line="408" pos:column="37">=<pos:position pos:line="408" pos:column="38"/></operator> <name pos:line="408" pos:column="39">prevreqchar<pos:position pos:line="408" pos:column="50"/></name></expr>;<pos:position pos:line="408" pos:column="51"/></expr_stmt></block></then></if>
      <expr_stmt><expr><operator pos:line="409" pos:column="7">*<pos:position pos:line="409" pos:column="8"/></operator><name pos:line="409" pos:column="8">countlits<pos:position pos:line="409" pos:column="17"/></name> <operator pos:line="409" pos:column="18">+=<pos:position pos:line="409" pos:column="20"/></operator> <name pos:line="409" pos:column="21">repeat_min<pos:position pos:line="409" pos:column="31"/></name> <operator pos:line="409" pos:column="32">-<pos:position pos:line="409" pos:column="33"/></operator> <literal type="number" pos:line="409" pos:column="34">1<pos:position pos:line="409" pos:column="35"/></literal></expr>;<pos:position pos:line="409" pos:column="36"/></expr_stmt>

      <if pos:line="411" pos:column="7">if <condition pos:line="411" pos:column="10">(<expr><name pos:line="411" pos:column="11">len<pos:position pos:line="411" pos:column="14"/></name> <operator pos:line="411" pos:column="15">==<pos:position pos:line="411" pos:column="17"/></operator> <literal type="number" pos:line="411" pos:column="18">1<pos:position pos:line="411" pos:column="19"/></literal></expr>)<pos:position pos:line="411" pos:column="20"/></condition><then pos:line="411" pos:column="20">
        <block pos:line="412" pos:column="9">{
        <expr_stmt><expr><name pos:line="413" pos:column="9">c<pos:position pos:line="413" pos:column="10"/></name> <operator pos:line="413" pos:column="11">=<pos:position pos:line="413" pos:column="12"/></operator> <name><name pos:line="413" pos:column="13">previous<pos:position pos:line="413" pos:column="21"/></name><index pos:line="413" pos:column="21">[<expr><literal type="number" pos:line="413" pos:column="22">2<pos:position pos:line="413" pos:column="23"/></literal></expr>]<pos:position pos:line="413" pos:column="24"/></index></name></expr>;<pos:position pos:line="413" pos:column="25"/></expr_stmt>
        <expr_stmt><expr><name pos:line="414" pos:column="9">code<pos:position pos:line="414" pos:column="13"/></name> <operator pos:line="414" pos:column="14">=<pos:position pos:line="414" pos:column="15"/></operator> <name pos:line="414" pos:column="16">previous<pos:position pos:line="414" pos:column="24"/></name></expr>;<pos:position pos:line="414" pos:column="25"/></expr_stmt>
        }<pos:position pos:line="415" pos:column="10"/></block></then>
      <else pos:line="416" pos:column="7">else
        <block pos:line="417" pos:column="9">{
        <expr_stmt><expr><name pos:line="418" pos:column="9">c<pos:position pos:line="418" pos:column="10"/></name> <operator pos:line="418" pos:column="11">=<pos:position pos:line="418" pos:column="12"/></operator> <name><name pos:line="418" pos:column="13">previous<pos:position pos:line="418" pos:column="21"/></name><index pos:line="418" pos:column="21">[<expr><name pos:line="418" pos:column="22">len<pos:position pos:line="418" pos:column="25"/></name><operator pos:line="418" pos:column="25">+<pos:position pos:line="418" pos:column="26"/></operator><literal type="number" pos:line="418" pos:column="26">1<pos:position pos:line="418" pos:column="27"/></literal></expr>]<pos:position pos:line="418" pos:column="28"/></index></name></expr>;<pos:position pos:line="418" pos:column="29"/></expr_stmt>
        <expr_stmt><expr><name><name pos:line="419" pos:column="9">previous<pos:position pos:line="419" pos:column="17"/></name><index pos:line="419" pos:column="17">[<expr><literal type="number" pos:line="419" pos:column="18">1<pos:position pos:line="419" pos:column="19"/></literal></expr>]<pos:position pos:line="419" pos:column="20"/></index></name><operator pos:line="419" pos:column="20">--<pos:position pos:line="419" pos:column="22"/></operator></expr>;<pos:position pos:line="419" pos:column="23"/></expr_stmt>
        <expr_stmt><expr><name pos:line="420" pos:column="9">code<pos:position pos:line="420" pos:column="13"/></name><operator pos:line="420" pos:column="13">--<pos:position pos:line="420" pos:column="15"/></operator></expr>;<pos:position pos:line="420" pos:column="16"/></expr_stmt>
        }<pos:position pos:line="421" pos:column="10"/></block></else></if>
      <expr_stmt><expr><name pos:line="422" pos:column="7">op_type<pos:position pos:line="422" pos:column="14"/></name> <operator pos:line="422" pos:column="15">=<pos:position pos:line="422" pos:column="16"/></operator> <literal type="number" pos:line="422" pos:column="17">0<pos:position pos:line="422" pos:column="18"/></literal></expr>;<pos:position pos:line="422" pos:column="19"/></expr_stmt>                 <comment type="block" pos:line="422" pos:column="36">/* Use single-char op codes */</comment>
      <goto pos:line="423" pos:column="7">goto <name pos:line="423" pos:column="12">OUTPUT_SINGLE_REPEAT<pos:position pos:line="423" pos:column="32"/></name>;<pos:position pos:line="423" pos:column="33"/></goto>   <comment type="block" pos:line="423" pos:column="36">/* Code shared with single character types */</comment>
      }<pos:position pos:line="424" pos:column="8"/></block></then>

    <comment type="block" pos:line="426" pos:column="5">/* If previous was a single negated character ([^a] or similar), we use
    one of the special opcodes, replacing it. The code is shared with single-
    character repeats by adding a suitable offset into repeat_type. */</comment>

    <elseif pos:line="430" pos:column="5">else <if pos:line="430" pos:column="10">if <condition pos:line="430" pos:column="13">(<expr><operator pos:line="430" pos:column="14">(<pos:position pos:line="430" pos:column="15"/></operator><name pos:line="430" pos:column="15">int<pos:position pos:line="430" pos:column="18"/></name><operator pos:line="430" pos:column="18">)<pos:position pos:line="430" pos:column="19"/></operator><operator pos:line="430" pos:column="19">*<pos:position pos:line="430" pos:column="20"/></operator><name pos:line="430" pos:column="20">previous<pos:position pos:line="430" pos:column="28"/></name> <operator pos:line="430" pos:column="29">==<pos:position pos:line="430" pos:column="31"/></operator> <name pos:line="430" pos:column="32">OP_NOT<pos:position pos:line="430" pos:column="38"/></name></expr>)<pos:position pos:line="430" pos:column="39"/></condition><then pos:line="430" pos:column="39">
      <block pos:line="431" pos:column="7">{
      <expr_stmt><expr><name pos:line="432" pos:column="7">op_type<pos:position pos:line="432" pos:column="14"/></name> <operator pos:line="432" pos:column="15">=<pos:position pos:line="432" pos:column="16"/></operator> <name pos:line="432" pos:column="17">OP_NOTSTAR<pos:position pos:line="432" pos:column="27"/></name> <operator pos:line="432" pos:column="28">-<pos:position pos:line="432" pos:column="29"/></operator> <name pos:line="432" pos:column="30">OP_STAR<pos:position pos:line="432" pos:column="37"/></name></expr>;<pos:position pos:line="432" pos:column="38"/></expr_stmt>  <comment type="block" pos:line="432" pos:column="40">/* Use "not" opcodes */</comment>
      <expr_stmt><expr><name pos:line="433" pos:column="7">c<pos:position pos:line="433" pos:column="8"/></name> <operator pos:line="433" pos:column="9">=<pos:position pos:line="433" pos:column="10"/></operator> <name><name pos:line="433" pos:column="11">previous<pos:position pos:line="433" pos:column="19"/></name><index pos:line="433" pos:column="19">[<expr><literal type="number" pos:line="433" pos:column="20">1<pos:position pos:line="433" pos:column="21"/></literal></expr>]<pos:position pos:line="433" pos:column="22"/></index></name></expr>;<pos:position pos:line="433" pos:column="23"/></expr_stmt>
      <expr_stmt><expr><name pos:line="434" pos:column="7">code<pos:position pos:line="434" pos:column="11"/></name> <operator pos:line="434" pos:column="12">=<pos:position pos:line="434" pos:column="13"/></operator> <name pos:line="434" pos:column="14">previous<pos:position pos:line="434" pos:column="22"/></name></expr>;<pos:position pos:line="434" pos:column="23"/></expr_stmt>
      <goto pos:line="435" pos:column="7">goto <name pos:line="435" pos:column="12">OUTPUT_SINGLE_REPEAT<pos:position pos:line="435" pos:column="32"/></name>;<pos:position pos:line="435" pos:column="33"/></goto>
      }<pos:position pos:line="436" pos:column="8"/></block></then></if></elseif>

    <comment type="block" pos:line="438" pos:column="5">/* If previous was a character type match (\d or similar), abolish it and
    create a suitable repeat item. The code is shared with single-character
    repeats by adding a suitable offset into repeat_type. */</comment>

    <elseif pos:line="442" pos:column="5">else <if pos:line="442" pos:column="10">if <condition pos:line="442" pos:column="13">(<expr><operator pos:line="442" pos:column="14">(<pos:position pos:line="442" pos:column="15"/></operator><name pos:line="442" pos:column="15">int<pos:position pos:line="442" pos:column="18"/></name><operator pos:line="442" pos:column="18">)<pos:position pos:line="442" pos:column="19"/></operator><operator pos:line="442" pos:column="19">*<pos:position pos:line="442" pos:column="20"/></operator><name pos:line="442" pos:column="20">previous<pos:position pos:line="442" pos:column="28"/></name> <operator pos:line="442" pos:column="29">&lt;<pos:position pos:line="442" pos:column="33"/></operator> <name pos:line="442" pos:column="31">OP_EODN<pos:position pos:line="442" pos:column="38"/></name> <operator pos:line="442" pos:column="39">||<pos:position pos:line="442" pos:column="41"/></operator> <operator pos:line="442" pos:column="42">*<pos:position pos:line="442" pos:column="43"/></operator><name pos:line="442" pos:column="43">previous<pos:position pos:line="442" pos:column="51"/></name> <operator pos:line="442" pos:column="52">==<pos:position pos:line="442" pos:column="54"/></operator> <name pos:line="442" pos:column="55">OP_ANY<pos:position pos:line="442" pos:column="61"/></name></expr>)<pos:position pos:line="442" pos:column="62"/></condition><then pos:line="442" pos:column="62">
      <block pos:line="443" pos:column="7">{
      <expr_stmt><expr><name pos:line="444" pos:column="7">op_type<pos:position pos:line="444" pos:column="14"/></name> <operator pos:line="444" pos:column="15">=<pos:position pos:line="444" pos:column="16"/></operator> <name pos:line="444" pos:column="17">OP_TYPESTAR<pos:position pos:line="444" pos:column="28"/></name> <operator pos:line="444" pos:column="29">-<pos:position pos:line="444" pos:column="30"/></operator> <name pos:line="444" pos:column="31">OP_STAR<pos:position pos:line="444" pos:column="38"/></name></expr>;<pos:position pos:line="444" pos:column="39"/></expr_stmt>  <comment type="block" pos:line="444" pos:column="41">/* Use type opcodes */</comment>
      <expr_stmt><expr><name pos:line="445" pos:column="7">c<pos:position pos:line="445" pos:column="8"/></name> <operator pos:line="445" pos:column="9">=<pos:position pos:line="445" pos:column="10"/></operator> <operator pos:line="445" pos:column="11">*<pos:position pos:line="445" pos:column="12"/></operator><name pos:line="445" pos:column="12">previous<pos:position pos:line="445" pos:column="20"/></name></expr>;<pos:position pos:line="445" pos:column="21"/></expr_stmt>
      <expr_stmt><expr><name pos:line="446" pos:column="7">code<pos:position pos:line="446" pos:column="11"/></name> <operator pos:line="446" pos:column="12">=<pos:position pos:line="446" pos:column="13"/></operator> <name pos:line="446" pos:column="14">previous<pos:position pos:line="446" pos:column="22"/></name></expr>;<pos:position pos:line="446" pos:column="23"/></expr_stmt>

      <label><name pos:line="448" pos:column="7">OUTPUT_SINGLE_REPEAT<pos:position pos:line="448" pos:column="27"/></name>:<pos:position pos:line="448" pos:column="28"/></label>

      <comment type="block" pos:line="450" pos:column="7">/* If the maximum is zero then the minimum must also be zero; Perl allows
      this case, so we do too - by simply omitting the item altogether. */</comment>

      <if pos:line="453" pos:column="7">if <condition pos:line="453" pos:column="10">(<expr><name pos:line="453" pos:column="11">repeat_max<pos:position pos:line="453" pos:column="21"/></name> <operator pos:line="453" pos:column="22">==<pos:position pos:line="453" pos:column="24"/></operator> <literal type="number" pos:line="453" pos:column="25">0<pos:position pos:line="453" pos:column="26"/></literal></expr>)<pos:position pos:line="453" pos:column="27"/></condition><then pos:line="453" pos:column="27"> <block type="pseudo"><goto pos:line="453" pos:column="28">goto <name pos:line="453" pos:column="33">END_REPEAT<pos:position pos:line="453" pos:column="43"/></name>;<pos:position pos:line="453" pos:column="44"/></goto></block></then></if>

      <comment type="block" pos:line="455" pos:column="7">/* Combine the op_type with the repeat_type */</comment>

      <expr_stmt><expr><name pos:line="457" pos:column="7">repeat_type<pos:position pos:line="457" pos:column="18"/></name> <operator pos:line="457" pos:column="19">+=<pos:position pos:line="457" pos:column="21"/></operator> <name pos:line="457" pos:column="22">op_type<pos:position pos:line="457" pos:column="29"/></name></expr>;<pos:position pos:line="457" pos:column="30"/></expr_stmt>

      <comment type="block" pos:line="459" pos:column="7">/* A minimum of zero is handled either as the special case * or ?, or as
      an UPTO, with the maximum given. */</comment>

      <if pos:line="462" pos:column="7">if <condition pos:line="462" pos:column="10">(<expr><name pos:line="462" pos:column="11">repeat_min<pos:position pos:line="462" pos:column="21"/></name> <operator pos:line="462" pos:column="22">==<pos:position pos:line="462" pos:column="24"/></operator> <literal type="number" pos:line="462" pos:column="25">0<pos:position pos:line="462" pos:column="26"/></literal></expr>)<pos:position pos:line="462" pos:column="27"/></condition><then pos:line="462" pos:column="27">
        <block pos:line="463" pos:column="9">{
        <if pos:line="464" pos:column="9">if <condition pos:line="464" pos:column="12">(<expr><name pos:line="464" pos:column="13">repeat_max<pos:position pos:line="464" pos:column="23"/></name> <operator pos:line="464" pos:column="24">==<pos:position pos:line="464" pos:column="26"/></operator> <operator pos:line="464" pos:column="27">-<pos:position pos:line="464" pos:column="28"/></operator><literal type="number" pos:line="464" pos:column="28">1<pos:position pos:line="464" pos:column="29"/></literal></expr>)<pos:position pos:line="464" pos:column="30"/></condition><then pos:line="464" pos:column="30"> <block type="pseudo"><expr_stmt><expr><operator pos:line="464" pos:column="31">*<pos:position pos:line="464" pos:column="32"/></operator><name pos:line="464" pos:column="32">code<pos:position pos:line="464" pos:column="36"/></name><operator pos:line="464" pos:column="36">++<pos:position pos:line="464" pos:column="38"/></operator> <operator pos:line="464" pos:column="39">=<pos:position pos:line="464" pos:column="40"/></operator> <name pos:line="464" pos:column="41">OP_STAR<pos:position pos:line="464" pos:column="48"/></name> <operator pos:line="464" pos:column="49">+<pos:position pos:line="464" pos:column="50"/></operator> <name pos:line="464" pos:column="51">repeat_type<pos:position pos:line="464" pos:column="62"/></name></expr>;<pos:position pos:line="464" pos:column="63"/></expr_stmt></block></then>
          <elseif pos:line="465" pos:column="11">else <if pos:line="465" pos:column="16">if <condition pos:line="465" pos:column="19">(<expr><name pos:line="465" pos:column="20">repeat_max<pos:position pos:line="465" pos:column="30"/></name> <operator pos:line="465" pos:column="31">==<pos:position pos:line="465" pos:column="33"/></operator> <literal type="number" pos:line="465" pos:column="34">1<pos:position pos:line="465" pos:column="35"/></literal></expr>)<pos:position pos:line="465" pos:column="36"/></condition><then pos:line="465" pos:column="36"> <block type="pseudo"><expr_stmt><expr><operator pos:line="465" pos:column="37">*<pos:position pos:line="465" pos:column="38"/></operator><name pos:line="465" pos:column="38">code<pos:position pos:line="465" pos:column="42"/></name><operator pos:line="465" pos:column="42">++<pos:position pos:line="465" pos:column="44"/></operator> <operator pos:line="465" pos:column="45">=<pos:position pos:line="465" pos:column="46"/></operator> <name pos:line="465" pos:column="47">OP_QUERY<pos:position pos:line="465" pos:column="55"/></name> <operator pos:line="465" pos:column="56">+<pos:position pos:line="465" pos:column="57"/></operator> <name pos:line="465" pos:column="58">repeat_type<pos:position pos:line="465" pos:column="69"/></name></expr>;<pos:position pos:line="465" pos:column="70"/></expr_stmt></block></then></if></elseif>
        <else pos:line="466" pos:column="9">else
          <block pos:line="467" pos:column="11">{
          <expr_stmt><expr><operator pos:line="468" pos:column="11">*<pos:position pos:line="468" pos:column="12"/></operator><name pos:line="468" pos:column="12">code<pos:position pos:line="468" pos:column="16"/></name><operator pos:line="468" pos:column="16">++<pos:position pos:line="468" pos:column="18"/></operator> <operator pos:line="468" pos:column="19">=<pos:position pos:line="468" pos:column="20"/></operator> <name pos:line="468" pos:column="21">OP_UPTO<pos:position pos:line="468" pos:column="28"/></name> <operator pos:line="468" pos:column="29">+<pos:position pos:line="468" pos:column="30"/></operator> <name pos:line="468" pos:column="31">repeat_type<pos:position pos:line="468" pos:column="42"/></name></expr>;<pos:position pos:line="468" pos:column="43"/></expr_stmt>
          <expr_stmt><expr><operator pos:line="469" pos:column="11">*<pos:position pos:line="469" pos:column="12"/></operator><name pos:line="469" pos:column="12">code<pos:position pos:line="469" pos:column="16"/></name><operator pos:line="469" pos:column="16">++<pos:position pos:line="469" pos:column="18"/></operator> <operator pos:line="469" pos:column="19">=<pos:position pos:line="469" pos:column="20"/></operator> <name pos:line="469" pos:column="21">repeat_max<pos:position pos:line="469" pos:column="31"/></name> <operator pos:line="469" pos:column="32">&gt;&gt;<pos:position pos:line="469" pos:column="37"/></operator> <literal type="number" pos:line="469" pos:column="35">8<pos:position pos:line="469" pos:column="36"/></literal></expr>;<pos:position pos:line="469" pos:column="37"/></expr_stmt>
          <expr_stmt><expr><operator pos:line="470" pos:column="11">*<pos:position pos:line="470" pos:column="12"/></operator><name pos:line="470" pos:column="12">code<pos:position pos:line="470" pos:column="16"/></name><operator pos:line="470" pos:column="16">++<pos:position pos:line="470" pos:column="18"/></operator> <operator pos:line="470" pos:column="19">=<pos:position pos:line="470" pos:column="20"/></operator> <operator pos:line="470" pos:column="21">(<pos:position pos:line="470" pos:column="22"/></operator><name pos:line="470" pos:column="22">repeat_max<pos:position pos:line="470" pos:column="32"/></name> <operator pos:line="470" pos:column="33">&amp;<pos:position pos:line="470" pos:column="38"/></operator> <literal type="number" pos:line="470" pos:column="35">255<pos:position pos:line="470" pos:column="38"/></literal><operator pos:line="470" pos:column="38">)<pos:position pos:line="470" pos:column="39"/></operator></expr>;<pos:position pos:line="470" pos:column="40"/></expr_stmt>
          }<pos:position pos:line="471" pos:column="12"/></block></else></if>
        }<pos:position pos:line="472" pos:column="10"/></block></then>

      <comment type="block" pos:line="474" pos:column="7">/* The case {1,} is handled as the special case + */</comment>

      <elseif pos:line="476" pos:column="7">else <if pos:line="476" pos:column="12">if <condition pos:line="476" pos:column="15">(<expr><name pos:line="476" pos:column="16">repeat_min<pos:position pos:line="476" pos:column="26"/></name> <operator pos:line="476" pos:column="27">==<pos:position pos:line="476" pos:column="29"/></operator> <literal type="number" pos:line="476" pos:column="30">1<pos:position pos:line="476" pos:column="31"/></literal> <operator pos:line="476" pos:column="32">&amp;&amp;<pos:position pos:line="476" pos:column="42"/></operator> <name pos:line="476" pos:column="35">repeat_max<pos:position pos:line="476" pos:column="45"/></name> <operator pos:line="476" pos:column="46">==<pos:position pos:line="476" pos:column="48"/></operator> <operator pos:line="476" pos:column="49">-<pos:position pos:line="476" pos:column="50"/></operator><literal type="number" pos:line="476" pos:column="50">1<pos:position pos:line="476" pos:column="51"/></literal></expr>)<pos:position pos:line="476" pos:column="52"/></condition><then pos:line="476" pos:column="52">
        <block type="pseudo"><expr_stmt><expr><operator pos:line="477" pos:column="9">*<pos:position pos:line="477" pos:column="10"/></operator><name pos:line="477" pos:column="10">code<pos:position pos:line="477" pos:column="14"/></name><operator pos:line="477" pos:column="14">++<pos:position pos:line="477" pos:column="16"/></operator> <operator pos:line="477" pos:column="17">=<pos:position pos:line="477" pos:column="18"/></operator> <name pos:line="477" pos:column="19">OP_PLUS<pos:position pos:line="477" pos:column="26"/></name> <operator pos:line="477" pos:column="27">+<pos:position pos:line="477" pos:column="28"/></operator> <name pos:line="477" pos:column="29">repeat_type<pos:position pos:line="477" pos:column="40"/></name></expr>;<pos:position pos:line="477" pos:column="41"/></expr_stmt></block></then></if></elseif>

      <comment type="block" pos:line="479" pos:column="7">/* The case {n,n} is just an EXACT, while the general case {n,m} is
      handled as an EXACT followed by an UPTO. An EXACT of 1 is optimized. */</comment>

      <else pos:line="482" pos:column="7">else
        <block pos:line="483" pos:column="9">{
        <if pos:line="484" pos:column="9">if <condition pos:line="484" pos:column="12">(<expr><name pos:line="484" pos:column="13">repeat_min<pos:position pos:line="484" pos:column="23"/></name> <operator pos:line="484" pos:column="24">!=<pos:position pos:line="484" pos:column="26"/></operator> <literal type="number" pos:line="484" pos:column="27">1<pos:position pos:line="484" pos:column="28"/></literal></expr>)<pos:position pos:line="484" pos:column="29"/></condition><then pos:line="484" pos:column="29">
          <block pos:line="485" pos:column="11">{
          <expr_stmt><expr><operator pos:line="486" pos:column="11">*<pos:position pos:line="486" pos:column="12"/></operator><name pos:line="486" pos:column="12">code<pos:position pos:line="486" pos:column="16"/></name><operator pos:line="486" pos:column="16">++<pos:position pos:line="486" pos:column="18"/></operator> <operator pos:line="486" pos:column="19">=<pos:position pos:line="486" pos:column="20"/></operator> <name pos:line="486" pos:column="21">OP_EXACT<pos:position pos:line="486" pos:column="29"/></name> <operator pos:line="486" pos:column="30">+<pos:position pos:line="486" pos:column="31"/></operator> <name pos:line="486" pos:column="32">op_type<pos:position pos:line="486" pos:column="39"/></name></expr>;<pos:position pos:line="486" pos:column="40"/></expr_stmt>  <comment type="block" pos:line="486" pos:column="42">/* NB EXACT doesn't have repeat_type */</comment>
          <expr_stmt><expr><operator pos:line="487" pos:column="11">*<pos:position pos:line="487" pos:column="12"/></operator><name pos:line="487" pos:column="12">code<pos:position pos:line="487" pos:column="16"/></name><operator pos:line="487" pos:column="16">++<pos:position pos:line="487" pos:column="18"/></operator> <operator pos:line="487" pos:column="19">=<pos:position pos:line="487" pos:column="20"/></operator> <name pos:line="487" pos:column="21">repeat_min<pos:position pos:line="487" pos:column="31"/></name> <operator pos:line="487" pos:column="32">&gt;&gt;<pos:position pos:line="487" pos:column="37"/></operator> <literal type="number" pos:line="487" pos:column="35">8<pos:position pos:line="487" pos:column="36"/></literal></expr>;<pos:position pos:line="487" pos:column="37"/></expr_stmt>
          <expr_stmt><expr><operator pos:line="488" pos:column="11">*<pos:position pos:line="488" pos:column="12"/></operator><name pos:line="488" pos:column="12">code<pos:position pos:line="488" pos:column="16"/></name><operator pos:line="488" pos:column="16">++<pos:position pos:line="488" pos:column="18"/></operator> <operator pos:line="488" pos:column="19">=<pos:position pos:line="488" pos:column="20"/></operator> <operator pos:line="488" pos:column="21">(<pos:position pos:line="488" pos:column="22"/></operator><name pos:line="488" pos:column="22">repeat_min<pos:position pos:line="488" pos:column="32"/></name> <operator pos:line="488" pos:column="33">&amp;<pos:position pos:line="488" pos:column="38"/></operator> <literal type="number" pos:line="488" pos:column="35">255<pos:position pos:line="488" pos:column="38"/></literal><operator pos:line="488" pos:column="38">)<pos:position pos:line="488" pos:column="39"/></operator></expr>;<pos:position pos:line="488" pos:column="40"/></expr_stmt>
          }<pos:position pos:line="489" pos:column="12"/></block></then>

        <comment type="block" pos:line="491" pos:column="9">/* If the mininum is 1 and the previous item was a character string,
        we either have to put back the item that got cancelled if the string
        length was 1, or add the character back onto the end of a longer
        string. For a character type nothing need be done; it will just get
        put back naturally. Note that the final character is always going to
        get added below. */</comment>

        <elseif pos:line="498" pos:column="9">else <if pos:line="498" pos:column="14">if <condition pos:line="498" pos:column="17">(<expr><operator pos:line="498" pos:column="18">*<pos:position pos:line="498" pos:column="19"/></operator><name pos:line="498" pos:column="19">previous<pos:position pos:line="498" pos:column="27"/></name> <operator pos:line="498" pos:column="28">==<pos:position pos:line="498" pos:column="30"/></operator> <name pos:line="498" pos:column="31">OP_CHARS<pos:position pos:line="498" pos:column="39"/></name></expr>)<pos:position pos:line="498" pos:column="40"/></condition><then pos:line="498" pos:column="40">
          <block pos:line="499" pos:column="11">{
          <if pos:line="500" pos:column="11">if <condition pos:line="500" pos:column="14">(<expr><name pos:line="500" pos:column="15">code<pos:position pos:line="500" pos:column="19"/></name> <operator pos:line="500" pos:column="20">==<pos:position pos:line="500" pos:column="22"/></operator> <name pos:line="500" pos:column="23">previous<pos:position pos:line="500" pos:column="31"/></name></expr>)<pos:position pos:line="500" pos:column="32"/></condition><then pos:line="500" pos:column="32"> <block type="pseudo"><expr_stmt><expr><name pos:line="500" pos:column="33">code<pos:position pos:line="500" pos:column="37"/></name> <operator pos:line="500" pos:column="38">+=<pos:position pos:line="500" pos:column="40"/></operator> <literal type="number" pos:line="500" pos:column="41">2<pos:position pos:line="500" pos:column="42"/></literal></expr>;<pos:position pos:line="500" pos:column="43"/></expr_stmt></block></then> <else pos:line="500" pos:column="44">else <block type="pseudo"><expr_stmt><expr><name><name pos:line="500" pos:column="49">previous<pos:position pos:line="500" pos:column="57"/></name><index pos:line="500" pos:column="57">[<expr><literal type="number" pos:line="500" pos:column="58">1<pos:position pos:line="500" pos:column="59"/></literal></expr>]<pos:position pos:line="500" pos:column="60"/></index></name><operator pos:line="500" pos:column="60">++<pos:position pos:line="500" pos:column="62"/></operator></expr>;<pos:position pos:line="500" pos:column="63"/></expr_stmt></block></else></if>
          }<pos:position pos:line="501" pos:column="12"/></block></then></if></elseif>

        <comment type="block" pos:line="503" pos:column="9">/*  For a single negated character we also have to put back the
        item that got cancelled. */</comment>

        <elseif pos:line="506" pos:column="9">else <if pos:line="506" pos:column="14">if <condition pos:line="506" pos:column="17">(<expr><operator pos:line="506" pos:column="18">*<pos:position pos:line="506" pos:column="19"/></operator><name pos:line="506" pos:column="19">previous<pos:position pos:line="506" pos:column="27"/></name> <operator pos:line="506" pos:column="28">==<pos:position pos:line="506" pos:column="30"/></operator> <name pos:line="506" pos:column="31">OP_NOT<pos:position pos:line="506" pos:column="37"/></name></expr>)<pos:position pos:line="506" pos:column="38"/></condition><then pos:line="506" pos:column="38"> <block type="pseudo"><expr_stmt><expr><name pos:line="506" pos:column="39">code<pos:position pos:line="506" pos:column="43"/></name><operator pos:line="506" pos:column="43">++<pos:position pos:line="506" pos:column="45"/></operator></expr>;<pos:position pos:line="506" pos:column="46"/></expr_stmt></block></then></if></elseif></if>

        <comment type="block" pos:line="508" pos:column="9">/* If the maximum is unlimited, insert an OP_STAR. */</comment>

        <if pos:line="510" pos:column="9">if <condition pos:line="510" pos:column="12">(<expr><name pos:line="510" pos:column="13">repeat_max<pos:position pos:line="510" pos:column="23"/></name> <operator pos:line="510" pos:column="24">&lt;<pos:position pos:line="510" pos:column="28"/></operator> <literal type="number" pos:line="510" pos:column="26">0<pos:position pos:line="510" pos:column="27"/></literal></expr>)<pos:position pos:line="510" pos:column="28"/></condition><then pos:line="510" pos:column="28">
          <block pos:line="511" pos:column="11">{
          <expr_stmt><expr><operator pos:line="512" pos:column="11">*<pos:position pos:line="512" pos:column="12"/></operator><name pos:line="512" pos:column="12">code<pos:position pos:line="512" pos:column="16"/></name><operator pos:line="512" pos:column="16">++<pos:position pos:line="512" pos:column="18"/></operator> <operator pos:line="512" pos:column="19">=<pos:position pos:line="512" pos:column="20"/></operator> <name pos:line="512" pos:column="21">c<pos:position pos:line="512" pos:column="22"/></name></expr>;<pos:position pos:line="512" pos:column="23"/></expr_stmt>
          <expr_stmt><expr><operator pos:line="513" pos:column="11">*<pos:position pos:line="513" pos:column="12"/></operator><name pos:line="513" pos:column="12">code<pos:position pos:line="513" pos:column="16"/></name><operator pos:line="513" pos:column="16">++<pos:position pos:line="513" pos:column="18"/></operator> <operator pos:line="513" pos:column="19">=<pos:position pos:line="513" pos:column="20"/></operator> <name pos:line="513" pos:column="21">OP_STAR<pos:position pos:line="513" pos:column="28"/></name> <operator pos:line="513" pos:column="29">+<pos:position pos:line="513" pos:column="30"/></operator> <name pos:line="513" pos:column="31">repeat_type<pos:position pos:line="513" pos:column="42"/></name></expr>;<pos:position pos:line="513" pos:column="43"/></expr_stmt>
          }<pos:position pos:line="514" pos:column="12"/></block></then>

        <comment type="block" pos:line="516" pos:column="9">/* Else insert an UPTO if the max is greater than the min. */</comment>

        <elseif pos:line="518" pos:column="9">else <if pos:line="518" pos:column="14">if <condition pos:line="518" pos:column="17">(<expr><name pos:line="518" pos:column="18">repeat_max<pos:position pos:line="518" pos:column="28"/></name> <operator pos:line="518" pos:column="29">!=<pos:position pos:line="518" pos:column="31"/></operator> <name pos:line="518" pos:column="32">repeat_min<pos:position pos:line="518" pos:column="42"/></name></expr>)<pos:position pos:line="518" pos:column="43"/></condition><then pos:line="518" pos:column="43">
          <block pos:line="519" pos:column="11">{
          <expr_stmt><expr><operator pos:line="520" pos:column="11">*<pos:position pos:line="520" pos:column="12"/></operator><name pos:line="520" pos:column="12">code<pos:position pos:line="520" pos:column="16"/></name><operator pos:line="520" pos:column="16">++<pos:position pos:line="520" pos:column="18"/></operator> <operator pos:line="520" pos:column="19">=<pos:position pos:line="520" pos:column="20"/></operator> <name pos:line="520" pos:column="21">c<pos:position pos:line="520" pos:column="22"/></name></expr>;<pos:position pos:line="520" pos:column="23"/></expr_stmt>
          <expr_stmt><expr><name pos:line="521" pos:column="11">repeat_max<pos:position pos:line="521" pos:column="21"/></name> <operator pos:line="521" pos:column="22">-=<pos:position pos:line="521" pos:column="24"/></operator> <name pos:line="521" pos:column="25">repeat_min<pos:position pos:line="521" pos:column="35"/></name></expr>;<pos:position pos:line="521" pos:column="36"/></expr_stmt>
          <expr_stmt><expr><operator pos:line="522" pos:column="11">*<pos:position pos:line="522" pos:column="12"/></operator><name pos:line="522" pos:column="12">code<pos:position pos:line="522" pos:column="16"/></name><operator pos:line="522" pos:column="16">++<pos:position pos:line="522" pos:column="18"/></operator> <operator pos:line="522" pos:column="19">=<pos:position pos:line="522" pos:column="20"/></operator> <name pos:line="522" pos:column="21">OP_UPTO<pos:position pos:line="522" pos:column="28"/></name> <operator pos:line="522" pos:column="29">+<pos:position pos:line="522" pos:column="30"/></operator> <name pos:line="522" pos:column="31">repeat_type<pos:position pos:line="522" pos:column="42"/></name></expr>;<pos:position pos:line="522" pos:column="43"/></expr_stmt>
          <expr_stmt><expr><operator pos:line="523" pos:column="11">*<pos:position pos:line="523" pos:column="12"/></operator><name pos:line="523" pos:column="12">code<pos:position pos:line="523" pos:column="16"/></name><operator pos:line="523" pos:column="16">++<pos:position pos:line="523" pos:column="18"/></operator> <operator pos:line="523" pos:column="19">=<pos:position pos:line="523" pos:column="20"/></operator> <name pos:line="523" pos:column="21">repeat_max<pos:position pos:line="523" pos:column="31"/></name> <operator pos:line="523" pos:column="32">&gt;&gt;<pos:position pos:line="523" pos:column="37"/></operator> <literal type="number" pos:line="523" pos:column="35">8<pos:position pos:line="523" pos:column="36"/></literal></expr>;<pos:position pos:line="523" pos:column="37"/></expr_stmt>
          <expr_stmt><expr><operator pos:line="524" pos:column="11">*<pos:position pos:line="524" pos:column="12"/></operator><name pos:line="524" pos:column="12">code<pos:position pos:line="524" pos:column="16"/></name><operator pos:line="524" pos:column="16">++<pos:position pos:line="524" pos:column="18"/></operator> <operator pos:line="524" pos:column="19">=<pos:position pos:line="524" pos:column="20"/></operator> <operator pos:line="524" pos:column="21">(<pos:position pos:line="524" pos:column="22"/></operator><name pos:line="524" pos:column="22">repeat_max<pos:position pos:line="524" pos:column="32"/></name> <operator pos:line="524" pos:column="33">&amp;<pos:position pos:line="524" pos:column="38"/></operator> <literal type="number" pos:line="524" pos:column="35">255<pos:position pos:line="524" pos:column="38"/></literal><operator pos:line="524" pos:column="38">)<pos:position pos:line="524" pos:column="39"/></operator></expr>;<pos:position pos:line="524" pos:column="40"/></expr_stmt>
          }<pos:position pos:line="525" pos:column="12"/></block></then></if></elseif></if>
        }<pos:position pos:line="526" pos:column="10"/></block></else></if>

      <comment type="block" pos:line="528" pos:column="7">/* The character or character type itself comes last in all cases. */</comment>

      <expr_stmt><expr><operator pos:line="530" pos:column="7">*<pos:position pos:line="530" pos:column="8"/></operator><name pos:line="530" pos:column="8">code<pos:position pos:line="530" pos:column="12"/></name><operator pos:line="530" pos:column="12">++<pos:position pos:line="530" pos:column="14"/></operator> <operator pos:line="530" pos:column="15">=<pos:position pos:line="530" pos:column="16"/></operator> <name pos:line="530" pos:column="17">c<pos:position pos:line="530" pos:column="18"/></name></expr>;<pos:position pos:line="530" pos:column="19"/></expr_stmt>
      }<pos:position pos:line="531" pos:column="8"/></block></then></if></elseif>

    <comment type="block" pos:line="533" pos:column="5">/* If previous was a character class or a back reference, we put the repeat
    stuff after it, but just skip the item if the repeat was {0,0}. */</comment>

    <elseif pos:line="536" pos:column="5">else <if pos:line="536" pos:column="10">if <condition pos:line="536" pos:column="13">(<expr><operator pos:line="536" pos:column="14">*<pos:position pos:line="536" pos:column="15"/></operator><name pos:line="536" pos:column="15">previous<pos:position pos:line="536" pos:column="23"/></name> <operator pos:line="536" pos:column="24">==<pos:position pos:line="536" pos:column="26"/></operator> <name pos:line="536" pos:column="27">OP_CLASS<pos:position pos:line="536" pos:column="35"/></name> <operator pos:line="536" pos:column="36">||<pos:position pos:line="536" pos:column="38"/></operator> <operator pos:line="536" pos:column="39">*<pos:position pos:line="536" pos:column="40"/></operator><name pos:line="536" pos:column="40">previous<pos:position pos:line="536" pos:column="48"/></name> <operator pos:line="536" pos:column="49">==<pos:position pos:line="536" pos:column="51"/></operator> <name pos:line="536" pos:column="52">OP_REF<pos:position pos:line="536" pos:column="58"/></name></expr>)<pos:position pos:line="536" pos:column="59"/></condition><then pos:line="536" pos:column="59">
      <block pos:line="537" pos:column="7">{
      <if pos:line="538" pos:column="7">if <condition pos:line="538" pos:column="10">(<expr><name pos:line="538" pos:column="11">repeat_max<pos:position pos:line="538" pos:column="21"/></name> <operator pos:line="538" pos:column="22">==<pos:position pos:line="538" pos:column="24"/></operator> <literal type="number" pos:line="538" pos:column="25">0<pos:position pos:line="538" pos:column="26"/></literal></expr>)<pos:position pos:line="538" pos:column="27"/></condition><then pos:line="538" pos:column="27">
        <block pos:line="539" pos:column="9">{
        <expr_stmt><expr><name pos:line="540" pos:column="9">code<pos:position pos:line="540" pos:column="13"/></name> <operator pos:line="540" pos:column="14">=<pos:position pos:line="540" pos:column="15"/></operator> <name pos:line="540" pos:column="16">previous<pos:position pos:line="540" pos:column="24"/></name></expr>;<pos:position pos:line="540" pos:column="25"/></expr_stmt>
        <goto pos:line="541" pos:column="9">goto <name pos:line="541" pos:column="14">END_REPEAT<pos:position pos:line="541" pos:column="24"/></name>;<pos:position pos:line="541" pos:column="25"/></goto>
        }<pos:position pos:line="542" pos:column="10"/></block></then></if>
      <if pos:line="543" pos:column="7">if <condition pos:line="543" pos:column="10">(<expr><name pos:line="543" pos:column="11">repeat_min<pos:position pos:line="543" pos:column="21"/></name> <operator pos:line="543" pos:column="22">==<pos:position pos:line="543" pos:column="24"/></operator> <literal type="number" pos:line="543" pos:column="25">0<pos:position pos:line="543" pos:column="26"/></literal> <operator pos:line="543" pos:column="27">&amp;&amp;<pos:position pos:line="543" pos:column="37"/></operator> <name pos:line="543" pos:column="30">repeat_max<pos:position pos:line="543" pos:column="40"/></name> <operator pos:line="543" pos:column="41">==<pos:position pos:line="543" pos:column="43"/></operator> <operator pos:line="543" pos:column="44">-<pos:position pos:line="543" pos:column="45"/></operator><literal type="number" pos:line="543" pos:column="45">1<pos:position pos:line="543" pos:column="46"/></literal></expr>)<pos:position pos:line="543" pos:column="47"/></condition><then pos:line="543" pos:column="47">
        <block type="pseudo"><expr_stmt><expr><operator pos:line="544" pos:column="9">*<pos:position pos:line="544" pos:column="10"/></operator><name pos:line="544" pos:column="10">code<pos:position pos:line="544" pos:column="14"/></name><operator pos:line="544" pos:column="14">++<pos:position pos:line="544" pos:column="16"/></operator> <operator pos:line="544" pos:column="17">=<pos:position pos:line="544" pos:column="18"/></operator> <name pos:line="544" pos:column="19">OP_CRSTAR<pos:position pos:line="544" pos:column="28"/></name> <operator pos:line="544" pos:column="29">+<pos:position pos:line="544" pos:column="30"/></operator> <name pos:line="544" pos:column="31">repeat_type<pos:position pos:line="544" pos:column="42"/></name></expr>;<pos:position pos:line="544" pos:column="43"/></expr_stmt></block></then>
      <elseif pos:line="545" pos:column="7">else <if pos:line="545" pos:column="12">if <condition pos:line="545" pos:column="15">(<expr><name pos:line="545" pos:column="16">repeat_min<pos:position pos:line="545" pos:column="26"/></name> <operator pos:line="545" pos:column="27">==<pos:position pos:line="545" pos:column="29"/></operator> <literal type="number" pos:line="545" pos:column="30">1<pos:position pos:line="545" pos:column="31"/></literal> <operator pos:line="545" pos:column="32">&amp;&amp;<pos:position pos:line="545" pos:column="42"/></operator> <name pos:line="545" pos:column="35">repeat_max<pos:position pos:line="545" pos:column="45"/></name> <operator pos:line="545" pos:column="46">==<pos:position pos:line="545" pos:column="48"/></operator> <operator pos:line="545" pos:column="49">-<pos:position pos:line="545" pos:column="50"/></operator><literal type="number" pos:line="545" pos:column="50">1<pos:position pos:line="545" pos:column="51"/></literal></expr>)<pos:position pos:line="545" pos:column="52"/></condition><then pos:line="545" pos:column="52">
        <block type="pseudo"><expr_stmt><expr><operator pos:line="546" pos:column="9">*<pos:position pos:line="546" pos:column="10"/></operator><name pos:line="546" pos:column="10">code<pos:position pos:line="546" pos:column="14"/></name><operator pos:line="546" pos:column="14">++<pos:position pos:line="546" pos:column="16"/></operator> <operator pos:line="546" pos:column="17">=<pos:position pos:line="546" pos:column="18"/></operator> <name pos:line="546" pos:column="19">OP_CRPLUS<pos:position pos:line="546" pos:column="28"/></name> <operator pos:line="546" pos:column="29">+<pos:position pos:line="546" pos:column="30"/></operator> <name pos:line="546" pos:column="31">repeat_type<pos:position pos:line="546" pos:column="42"/></name></expr>;<pos:position pos:line="546" pos:column="43"/></expr_stmt></block></then></if></elseif>
      <elseif pos:line="547" pos:column="7">else <if pos:line="547" pos:column="12">if <condition pos:line="547" pos:column="15">(<expr><name pos:line="547" pos:column="16">repeat_min<pos:position pos:line="547" pos:column="26"/></name> <operator pos:line="547" pos:column="27">==<pos:position pos:line="547" pos:column="29"/></operator> <literal type="number" pos:line="547" pos:column="30">0<pos:position pos:line="547" pos:column="31"/></literal> <operator pos:line="547" pos:column="32">&amp;&amp;<pos:position pos:line="547" pos:column="42"/></operator> <name pos:line="547" pos:column="35">repeat_max<pos:position pos:line="547" pos:column="45"/></name> <operator pos:line="547" pos:column="46">==<pos:position pos:line="547" pos:column="48"/></operator> <literal type="number" pos:line="547" pos:column="49">1<pos:position pos:line="547" pos:column="50"/></literal></expr>)<pos:position pos:line="547" pos:column="51"/></condition><then pos:line="547" pos:column="51">
        <block type="pseudo"><expr_stmt><expr><operator pos:line="548" pos:column="9">*<pos:position pos:line="548" pos:column="10"/></operator><name pos:line="548" pos:column="10">code<pos:position pos:line="548" pos:column="14"/></name><operator pos:line="548" pos:column="14">++<pos:position pos:line="548" pos:column="16"/></operator> <operator pos:line="548" pos:column="17">=<pos:position pos:line="548" pos:column="18"/></operator> <name pos:line="548" pos:column="19">OP_CRQUERY<pos:position pos:line="548" pos:column="29"/></name> <operator pos:line="548" pos:column="30">+<pos:position pos:line="548" pos:column="31"/></operator> <name pos:line="548" pos:column="32">repeat_type<pos:position pos:line="548" pos:column="43"/></name></expr>;<pos:position pos:line="548" pos:column="44"/></expr_stmt></block></then></if></elseif>
      <else pos:line="549" pos:column="7">else
        <block pos:line="550" pos:column="9">{
        <expr_stmt><expr><operator pos:line="551" pos:column="9">*<pos:position pos:line="551" pos:column="10"/></operator><name pos:line="551" pos:column="10">code<pos:position pos:line="551" pos:column="14"/></name><operator pos:line="551" pos:column="14">++<pos:position pos:line="551" pos:column="16"/></operator> <operator pos:line="551" pos:column="17">=<pos:position pos:line="551" pos:column="18"/></operator> <name pos:line="551" pos:column="19">OP_CRRANGE<pos:position pos:line="551" pos:column="29"/></name> <operator pos:line="551" pos:column="30">+<pos:position pos:line="551" pos:column="31"/></operator> <name pos:line="551" pos:column="32">repeat_type<pos:position pos:line="551" pos:column="43"/></name></expr>;<pos:position pos:line="551" pos:column="44"/></expr_stmt>
        <expr_stmt><expr><operator pos:line="552" pos:column="9">*<pos:position pos:line="552" pos:column="10"/></operator><name pos:line="552" pos:column="10">code<pos:position pos:line="552" pos:column="14"/></name><operator pos:line="552" pos:column="14">++<pos:position pos:line="552" pos:column="16"/></operator> <operator pos:line="552" pos:column="17">=<pos:position pos:line="552" pos:column="18"/></operator> <name pos:line="552" pos:column="19">repeat_min<pos:position pos:line="552" pos:column="29"/></name> <operator pos:line="552" pos:column="30">&gt;&gt;<pos:position pos:line="552" pos:column="35"/></operator> <literal type="number" pos:line="552" pos:column="33">8<pos:position pos:line="552" pos:column="34"/></literal></expr>;<pos:position pos:line="552" pos:column="35"/></expr_stmt>
        <expr_stmt><expr><operator pos:line="553" pos:column="9">*<pos:position pos:line="553" pos:column="10"/></operator><name pos:line="553" pos:column="10">code<pos:position pos:line="553" pos:column="14"/></name><operator pos:line="553" pos:column="14">++<pos:position pos:line="553" pos:column="16"/></operator> <operator pos:line="553" pos:column="17">=<pos:position pos:line="553" pos:column="18"/></operator> <name pos:line="553" pos:column="19">repeat_min<pos:position pos:line="553" pos:column="29"/></name> <operator pos:line="553" pos:column="30">&amp;<pos:position pos:line="553" pos:column="35"/></operator> <literal type="number" pos:line="553" pos:column="32">255<pos:position pos:line="553" pos:column="35"/></literal></expr>;<pos:position pos:line="553" pos:column="36"/></expr_stmt>
        <if pos:line="554" pos:column="9">if <condition pos:line="554" pos:column="12">(<expr><name pos:line="554" pos:column="13">repeat_max<pos:position pos:line="554" pos:column="23"/></name> <operator pos:line="554" pos:column="24">==<pos:position pos:line="554" pos:column="26"/></operator> <operator pos:line="554" pos:column="27">-<pos:position pos:line="554" pos:column="28"/></operator><literal type="number" pos:line="554" pos:column="28">1<pos:position pos:line="554" pos:column="29"/></literal></expr>)<pos:position pos:line="554" pos:column="30"/></condition><then pos:line="554" pos:column="30"> <block type="pseudo"><expr_stmt><expr><name pos:line="554" pos:column="31">repeat_max<pos:position pos:line="554" pos:column="41"/></name> <operator pos:line="554" pos:column="42">=<pos:position pos:line="554" pos:column="43"/></operator> <literal type="number" pos:line="554" pos:column="44">0<pos:position pos:line="554" pos:column="45"/></literal></expr>;<pos:position pos:line="554" pos:column="46"/></expr_stmt></block></then></if>  <comment type="block" pos:line="554" pos:column="48">/* 2-byte encoding for max */</comment>
        <expr_stmt><expr><operator pos:line="555" pos:column="9">*<pos:position pos:line="555" pos:column="10"/></operator><name pos:line="555" pos:column="10">code<pos:position pos:line="555" pos:column="14"/></name><operator pos:line="555" pos:column="14">++<pos:position pos:line="555" pos:column="16"/></operator> <operator pos:line="555" pos:column="17">=<pos:position pos:line="555" pos:column="18"/></operator> <name pos:line="555" pos:column="19">repeat_max<pos:position pos:line="555" pos:column="29"/></name> <operator pos:line="555" pos:column="30">&gt;&gt;<pos:position pos:line="555" pos:column="35"/></operator> <literal type="number" pos:line="555" pos:column="33">8<pos:position pos:line="555" pos:column="34"/></literal></expr>;<pos:position pos:line="555" pos:column="35"/></expr_stmt>
        <expr_stmt><expr><operator pos:line="556" pos:column="9">*<pos:position pos:line="556" pos:column="10"/></operator><name pos:line="556" pos:column="10">code<pos:position pos:line="556" pos:column="14"/></name><operator pos:line="556" pos:column="14">++<pos:position pos:line="556" pos:column="16"/></operator> <operator pos:line="556" pos:column="17">=<pos:position pos:line="556" pos:column="18"/></operator> <name pos:line="556" pos:column="19">repeat_max<pos:position pos:line="556" pos:column="29"/></name> <operator pos:line="556" pos:column="30">&amp;<pos:position pos:line="556" pos:column="35"/></operator> <literal type="number" pos:line="556" pos:column="32">255<pos:position pos:line="556" pos:column="35"/></literal></expr>;<pos:position pos:line="556" pos:column="36"/></expr_stmt>
        }<pos:position pos:line="557" pos:column="10"/></block></else></if>
      }<pos:position pos:line="558" pos:column="8"/></block></then></if></elseif>

    <comment type="block" pos:line="560" pos:column="5">/* If previous was a bracket group, we may have to replicate it in certain
    cases. */</comment>

    <elseif pos:line="563" pos:column="5">else <if pos:line="563" pos:column="10">if <condition pos:line="563" pos:column="13">(<expr><operator pos:line="563" pos:column="14">(<pos:position pos:line="563" pos:column="15"/></operator><name pos:line="563" pos:column="15">int<pos:position pos:line="563" pos:column="18"/></name><operator pos:line="563" pos:column="18">)<pos:position pos:line="563" pos:column="19"/></operator><operator pos:line="563" pos:column="19">*<pos:position pos:line="563" pos:column="20"/></operator><name pos:line="563" pos:column="20">previous<pos:position pos:line="563" pos:column="28"/></name> <operator pos:line="563" pos:column="29">&gt;=<pos:position pos:line="563" pos:column="34"/></operator> <name pos:line="563" pos:column="32">OP_BRA<pos:position pos:line="563" pos:column="38"/></name> <operator pos:line="563" pos:column="39">||<pos:position pos:line="563" pos:column="41"/></operator> <operator pos:line="563" pos:column="42">(<pos:position pos:line="563" pos:column="43"/></operator><name pos:line="563" pos:column="43">int<pos:position pos:line="563" pos:column="46"/></name><operator pos:line="563" pos:column="46">)<pos:position pos:line="563" pos:column="47"/></operator><operator pos:line="563" pos:column="47">*<pos:position pos:line="563" pos:column="48"/></operator><name pos:line="563" pos:column="48">previous<pos:position pos:line="563" pos:column="56"/></name> <operator pos:line="563" pos:column="57">==<pos:position pos:line="563" pos:column="59"/></operator> <name pos:line="563" pos:column="60">OP_ONCE<pos:position pos:line="563" pos:column="67"/></name> <operator pos:line="563" pos:column="68">||<pos:position pos:line="563" pos:column="70"/></operator>
             <operator pos:line="564" pos:column="14">(<pos:position pos:line="564" pos:column="15"/></operator><name pos:line="564" pos:column="15">int<pos:position pos:line="564" pos:column="18"/></name><operator pos:line="564" pos:column="18">)<pos:position pos:line="564" pos:column="19"/></operator><operator pos:line="564" pos:column="19">*<pos:position pos:line="564" pos:column="20"/></operator><name pos:line="564" pos:column="20">previous<pos:position pos:line="564" pos:column="28"/></name> <operator pos:line="564" pos:column="29">==<pos:position pos:line="564" pos:column="31"/></operator> <name pos:line="564" pos:column="32">OP_COND<pos:position pos:line="564" pos:column="39"/></name></expr>)<pos:position pos:line="564" pos:column="40"/></condition><then pos:line="564" pos:column="40">
      <block pos:line="565" pos:column="7">{
      <decl_stmt><decl><type><specifier pos:line="566" pos:column="7">register<pos:position pos:line="566" pos:column="15"/></specifier> <name pos:line="566" pos:column="16">int<pos:position pos:line="566" pos:column="19"/></name></type> <name pos:line="566" pos:column="20">i<pos:position pos:line="566" pos:column="21"/></name></decl>;<pos:position pos:line="566" pos:column="22"/></decl_stmt>
      <decl_stmt><decl><type><name pos:line="567" pos:column="7">int<pos:position pos:line="567" pos:column="10"/></name></type> <name pos:line="567" pos:column="11">ketoffset<pos:position pos:line="567" pos:column="20"/></name> <init pos:line="567" pos:column="21">= <expr><literal type="number" pos:line="567" pos:column="23">0<pos:position pos:line="567" pos:column="24"/></literal></expr></init></decl>;<pos:position pos:line="567" pos:column="25"/></decl_stmt>
      <decl_stmt><decl><type><name pos:line="568" pos:column="7">int<pos:position pos:line="568" pos:column="10"/></name></type> <name pos:line="568" pos:column="11">len<pos:position pos:line="568" pos:column="14"/></name> <init pos:line="568" pos:column="15">= <expr><name pos:line="568" pos:column="17">code<pos:position pos:line="568" pos:column="21"/></name> <operator pos:line="568" pos:column="22">-<pos:position pos:line="568" pos:column="23"/></operator> <name pos:line="568" pos:column="24">previous<pos:position pos:line="568" pos:column="32"/></name></expr></init></decl>;<pos:position pos:line="568" pos:column="33"/></decl_stmt>
      <decl_stmt><decl><type><name pos:line="569" pos:column="7">uschar<pos:position pos:line="569" pos:column="13"/></name> <modifier pos:line="569" pos:column="14">*<pos:position pos:line="569" pos:column="15"/></modifier></type><name pos:line="569" pos:column="15">bralink<pos:position pos:line="569" pos:column="22"/></name> <init pos:line="569" pos:column="23">= <expr><name pos:line="569" pos:column="25">NULL<pos:position pos:line="569" pos:column="29"/></name></expr></init></decl>;<pos:position pos:line="569" pos:column="30"/></decl_stmt>

      <comment type="block" pos:line="571" pos:column="7">/* If the maximum repeat count is unlimited, find the end of the bracket
      by scanning through from the start, and compute the offset back to it
      from the current code pointer. There may be an OP_OPT setting following
      the final KET, so we can't find the end just by going back from the code
      pointer. */</comment>

      <if pos:line="577" pos:column="7">if <condition pos:line="577" pos:column="10">(<expr><name pos:line="577" pos:column="11">repeat_max<pos:position pos:line="577" pos:column="21"/></name> <operator pos:line="577" pos:column="22">==<pos:position pos:line="577" pos:column="24"/></operator> <operator pos:line="577" pos:column="25">-<pos:position pos:line="577" pos:column="26"/></operator><literal type="number" pos:line="577" pos:column="26">1<pos:position pos:line="577" pos:column="27"/></literal></expr>)<pos:position pos:line="577" pos:column="28"/></condition><then pos:line="577" pos:column="28">
        <block pos:line="578" pos:column="9">{
        <decl_stmt><decl><type><specifier pos:line="579" pos:column="9">register<pos:position pos:line="579" pos:column="17"/></specifier> <name pos:line="579" pos:column="18">uschar<pos:position pos:line="579" pos:column="24"/></name> <modifier pos:line="579" pos:column="25">*<pos:position pos:line="579" pos:column="26"/></modifier></type><name pos:line="579" pos:column="26">ket<pos:position pos:line="579" pos:column="29"/></name> <init pos:line="579" pos:column="30">= <expr><name pos:line="579" pos:column="32">previous<pos:position pos:line="579" pos:column="40"/></name></expr></init></decl>;<pos:position pos:line="579" pos:column="41"/></decl_stmt>
        <do pos:line="580" pos:column="9">do <block type="pseudo"><expr_stmt><expr><name pos:line="580" pos:column="12">ket<pos:position pos:line="580" pos:column="15"/></name> <operator pos:line="580" pos:column="16">+=<pos:position pos:line="580" pos:column="18"/></operator> <operator pos:line="580" pos:column="19">(<pos:position pos:line="580" pos:column="20"/></operator><name><name pos:line="580" pos:column="20">ket<pos:position pos:line="580" pos:column="23"/></name><index pos:line="580" pos:column="23">[<expr><literal type="number" pos:line="580" pos:column="24">1<pos:position pos:line="580" pos:column="25"/></literal></expr>]<pos:position pos:line="580" pos:column="26"/></index></name> <operator pos:line="580" pos:column="27">&lt;&lt;<pos:position pos:line="580" pos:column="35"/></operator> <literal type="number" pos:line="580" pos:column="30">8<pos:position pos:line="580" pos:column="31"/></literal><operator pos:line="580" pos:column="31">)<pos:position pos:line="580" pos:column="32"/></operator> <operator pos:line="580" pos:column="33">+<pos:position pos:line="580" pos:column="34"/></operator> <name><name pos:line="580" pos:column="35">ket<pos:position pos:line="580" pos:column="38"/></name><index pos:line="580" pos:column="38">[<expr><literal type="number" pos:line="580" pos:column="39">2<pos:position pos:line="580" pos:column="40"/></literal></expr>]<pos:position pos:line="580" pos:column="41"/></index></name></expr>;<pos:position pos:line="580" pos:column="42"/></expr_stmt></block> while <condition pos:line="580" pos:column="49">(<expr><operator pos:line="580" pos:column="50">*<pos:position pos:line="580" pos:column="51"/></operator><name pos:line="580" pos:column="51">ket<pos:position pos:line="580" pos:column="54"/></name> <operator pos:line="580" pos:column="55">!=<pos:position pos:line="580" pos:column="57"/></operator> <name pos:line="580" pos:column="58">OP_KET<pos:position pos:line="580" pos:column="64"/></name></expr>)<pos:position pos:line="580" pos:column="65"/></condition>;<pos:position pos:line="580" pos:column="66"/></do>
        <expr_stmt><expr><name pos:line="581" pos:column="9">ketoffset<pos:position pos:line="581" pos:column="18"/></name> <operator pos:line="581" pos:column="19">=<pos:position pos:line="581" pos:column="20"/></operator> <name pos:line="581" pos:column="21">code<pos:position pos:line="581" pos:column="25"/></name> <operator pos:line="581" pos:column="26">-<pos:position pos:line="581" pos:column="27"/></operator> <name pos:line="581" pos:column="28">ket<pos:position pos:line="581" pos:column="31"/></name></expr>;<pos:position pos:line="581" pos:column="32"/></expr_stmt>
        }<pos:position pos:line="582" pos:column="10"/></block></then></if>

      <comment type="block" pos:line="584" pos:column="7">/* The case of a zero minimum is special because of the need to stick
      OP_BRAZERO in front of it, and because the group appears once in the
      data, whereas in other cases it appears the minimum number of times. For
      this reason, it is simplest to treat this case separately, as otherwise
      the code gets far too messy. There are several special subcases when the
      minimum is zero. */</comment>

      <if pos:line="591" pos:column="7">if <condition pos:line="591" pos:column="10">(<expr><name pos:line="591" pos:column="11">repeat_min<pos:position pos:line="591" pos:column="21"/></name> <operator pos:line="591" pos:column="22">==<pos:position pos:line="591" pos:column="24"/></operator> <literal type="number" pos:line="591" pos:column="25">0<pos:position pos:line="591" pos:column="26"/></literal></expr>)<pos:position pos:line="591" pos:column="27"/></condition><then pos:line="591" pos:column="27">
        <block pos:line="592" pos:column="9">{
        <comment type="block" pos:line="593" pos:column="9">/* If we set up a required char from the bracket, we must back off
        to the previous value and reset the countlits value too. */</comment>

        <if pos:line="596" pos:column="9">if <condition pos:line="596" pos:column="12">(<expr><name pos:line="596" pos:column="13">subcountlits<pos:position pos:line="596" pos:column="25"/></name> <operator pos:line="596" pos:column="26">&gt;<pos:position pos:line="596" pos:column="30"/></operator> <literal type="number" pos:line="596" pos:column="28">0<pos:position pos:line="596" pos:column="29"/></literal></expr>)<pos:position pos:line="596" pos:column="30"/></condition><then pos:line="596" pos:column="30">
          <block pos:line="597" pos:column="11">{
          <expr_stmt><expr><operator pos:line="598" pos:column="11">*<pos:position pos:line="598" pos:column="12"/></operator><name pos:line="598" pos:column="12">reqchar<pos:position pos:line="598" pos:column="19"/></name> <operator pos:line="598" pos:column="20">=<pos:position pos:line="598" pos:column="21"/></operator> <name pos:line="598" pos:column="22">prevreqchar<pos:position pos:line="598" pos:column="33"/></name></expr>;<pos:position pos:line="598" pos:column="34"/></expr_stmt>
          <expr_stmt><expr><operator pos:line="599" pos:column="11">*<pos:position pos:line="599" pos:column="12"/></operator><name pos:line="599" pos:column="12">countlits<pos:position pos:line="599" pos:column="21"/></name> <operator pos:line="599" pos:column="22">-=<pos:position pos:line="599" pos:column="24"/></operator> <name pos:line="599" pos:column="25">subcountlits<pos:position pos:line="599" pos:column="37"/></name></expr>;<pos:position pos:line="599" pos:column="38"/></expr_stmt>
          }<pos:position pos:line="600" pos:column="12"/></block></then></if>

        <comment type="block" pos:line="602" pos:column="9">/* If the maximum is also zero, we just omit the group from the output
        altogether. */</comment>

        <if pos:line="605" pos:column="9">if <condition pos:line="605" pos:column="12">(<expr><name pos:line="605" pos:column="13">repeat_max<pos:position pos:line="605" pos:column="23"/></name> <operator pos:line="605" pos:column="24">==<pos:position pos:line="605" pos:column="26"/></operator> <literal type="number" pos:line="605" pos:column="27">0<pos:position pos:line="605" pos:column="28"/></literal></expr>)<pos:position pos:line="605" pos:column="29"/></condition><then pos:line="605" pos:column="29">
          <block pos:line="606" pos:column="11">{
          <expr_stmt><expr><name pos:line="607" pos:column="11">code<pos:position pos:line="607" pos:column="15"/></name> <operator pos:line="607" pos:column="16">=<pos:position pos:line="607" pos:column="17"/></operator> <name pos:line="607" pos:column="18">previous<pos:position pos:line="607" pos:column="26"/></name></expr>;<pos:position pos:line="607" pos:column="27"/></expr_stmt>
          <goto pos:line="608" pos:column="11">goto <name pos:line="608" pos:column="16">END_REPEAT<pos:position pos:line="608" pos:column="26"/></name>;<pos:position pos:line="608" pos:column="27"/></goto>
          }<pos:position pos:line="609" pos:column="12"/></block></then></if>

        <comment type="block" pos:line="611" pos:column="9">/* If the maximum is 1 or unlimited, we just have to stick in the
        BRAZERO and do no more at this point. */</comment>

        <if pos:line="614" pos:column="9">if <condition pos:line="614" pos:column="12">(<expr><name pos:line="614" pos:column="13">repeat_max<pos:position pos:line="614" pos:column="23"/></name> <operator pos:line="614" pos:column="24">&lt;=<pos:position pos:line="614" pos:column="29"/></operator> <literal type="number" pos:line="614" pos:column="27">1<pos:position pos:line="614" pos:column="28"/></literal></expr>)<pos:position pos:line="614" pos:column="29"/></condition><then pos:line="614" pos:column="29">
          <block pos:line="615" pos:column="11">{
          <expr_stmt><expr><call><name pos:line="616" pos:column="11">memmove<pos:position pos:line="616" pos:column="18"/></name><argument_list pos:line="616" pos:column="18">(<argument><expr><name pos:line="616" pos:column="19">previous<pos:position pos:line="616" pos:column="27"/></name><operator pos:line="616" pos:column="27">+<pos:position pos:line="616" pos:column="28"/></operator><literal type="number" pos:line="616" pos:column="28">1<pos:position pos:line="616" pos:column="29"/></literal></expr></argument>, <argument><expr><name pos:line="616" pos:column="31">previous<pos:position pos:line="616" pos:column="39"/></name></expr></argument>, <argument><expr><name pos:line="616" pos:column="41">len<pos:position pos:line="616" pos:column="44"/></name></expr></argument>)<pos:position pos:line="616" pos:column="45"/></argument_list></call></expr>;<pos:position pos:line="616" pos:column="46"/></expr_stmt>
          <expr_stmt><expr><name pos:line="617" pos:column="11">code<pos:position pos:line="617" pos:column="15"/></name><operator pos:line="617" pos:column="15">++<pos:position pos:line="617" pos:column="17"/></operator></expr>;<pos:position pos:line="617" pos:column="18"/></expr_stmt>
          <expr_stmt><expr><operator pos:line="618" pos:column="11">*<pos:position pos:line="618" pos:column="12"/></operator><name pos:line="618" pos:column="12">previous<pos:position pos:line="618" pos:column="20"/></name><operator pos:line="618" pos:column="20">++<pos:position pos:line="618" pos:column="22"/></operator> <operator pos:line="618" pos:column="23">=<pos:position pos:line="618" pos:column="24"/></operator> <name pos:line="618" pos:column="25">OP_BRAZERO<pos:position pos:line="618" pos:column="35"/></name> <operator pos:line="618" pos:column="36">+<pos:position pos:line="618" pos:column="37"/></operator> <name pos:line="618" pos:column="38">repeat_type<pos:position pos:line="618" pos:column="49"/></name></expr>;<pos:position pos:line="618" pos:column="50"/></expr_stmt>
          }<pos:position pos:line="619" pos:column="12"/></block></then>

        <comment type="block" pos:line="621" pos:column="9">/* If the maximum is greater than 1 and limited, we have to replicate
        in a nested fashion, sticking OP_BRAZERO before each set of brackets.
        The first one has to be handled carefully because it's the original
        copy, which has to be moved up. The remainder can be handled by code
        that is common with the non-zero minimum case below. We just have to
        adjust the value or repeat_max, since one less copy is required. */</comment>

        <else pos:line="628" pos:column="9">else
          <block pos:line="629" pos:column="11">{
          <decl_stmt><decl><type><name pos:line="630" pos:column="11">int<pos:position pos:line="630" pos:column="14"/></name></type> <name pos:line="630" pos:column="15">offset<pos:position pos:line="630" pos:column="21"/></name></decl>;<pos:position pos:line="630" pos:column="22"/></decl_stmt>
          <expr_stmt><expr><call><name pos:line="631" pos:column="11">memmove<pos:position pos:line="631" pos:column="18"/></name><argument_list pos:line="631" pos:column="18">(<argument><expr><name pos:line="631" pos:column="19">previous<pos:position pos:line="631" pos:column="27"/></name><operator pos:line="631" pos:column="27">+<pos:position pos:line="631" pos:column="28"/></operator><literal type="number" pos:line="631" pos:column="28">4<pos:position pos:line="631" pos:column="29"/></literal></expr></argument>, <argument><expr><name pos:line="631" pos:column="31">previous<pos:position pos:line="631" pos:column="39"/></name></expr></argument>, <argument><expr><name pos:line="631" pos:column="41">len<pos:position pos:line="631" pos:column="44"/></name></expr></argument>)<pos:position pos:line="631" pos:column="45"/></argument_list></call></expr>;<pos:position pos:line="631" pos:column="46"/></expr_stmt>
          <expr_stmt><expr><name pos:line="632" pos:column="11">code<pos:position pos:line="632" pos:column="15"/></name> <operator pos:line="632" pos:column="16">+=<pos:position pos:line="632" pos:column="18"/></operator> <literal type="number" pos:line="632" pos:column="19">4<pos:position pos:line="632" pos:column="20"/></literal></expr>;<pos:position pos:line="632" pos:column="21"/></expr_stmt>
          <expr_stmt><expr><operator pos:line="633" pos:column="11">*<pos:position pos:line="633" pos:column="12"/></operator><name pos:line="633" pos:column="12">previous<pos:position pos:line="633" pos:column="20"/></name><operator pos:line="633" pos:column="20">++<pos:position pos:line="633" pos:column="22"/></operator> <operator pos:line="633" pos:column="23">=<pos:position pos:line="633" pos:column="24"/></operator> <name pos:line="633" pos:column="25">OP_BRAZERO<pos:position pos:line="633" pos:column="35"/></name> <operator pos:line="633" pos:column="36">+<pos:position pos:line="633" pos:column="37"/></operator> <name pos:line="633" pos:column="38">repeat_type<pos:position pos:line="633" pos:column="49"/></name></expr>;<pos:position pos:line="633" pos:column="50"/></expr_stmt>
          <expr_stmt><expr><operator pos:line="634" pos:column="11">*<pos:position pos:line="634" pos:column="12"/></operator><name pos:line="634" pos:column="12">previous<pos:position pos:line="634" pos:column="20"/></name><operator pos:line="634" pos:column="20">++<pos:position pos:line="634" pos:column="22"/></operator> <operator pos:line="634" pos:column="23">=<pos:position pos:line="634" pos:column="24"/></operator> <name pos:line="634" pos:column="25">OP_BRA<pos:position pos:line="634" pos:column="31"/></name></expr>;<pos:position pos:line="634" pos:column="32"/></expr_stmt>

          <comment type="block" pos:line="636" pos:column="11">/* We chain together the bracket offset fields that have to be
          filled in later when the ends of the brackets are reached. */</comment>

          <expr_stmt><expr><name pos:line="639" pos:column="11">offset<pos:position pos:line="639" pos:column="17"/></name> <operator pos:line="639" pos:column="18">=<pos:position pos:line="639" pos:column="19"/></operator> <ternary><condition><expr><operator pos:line="639" pos:column="20">(<pos:position pos:line="639" pos:column="21"/></operator><name pos:line="639" pos:column="21">bralink<pos:position pos:line="639" pos:column="28"/></name> <operator pos:line="639" pos:column="29">==<pos:position pos:line="639" pos:column="31"/></operator> <name pos:line="639" pos:column="32">NULL<pos:position pos:line="639" pos:column="36"/></name><operator pos:line="639" pos:column="36">)<pos:position pos:line="639" pos:column="37"/></operator></expr>?<pos:position pos:line="639" pos:column="38"/></condition><then pos:line="639" pos:column="38"> <expr><literal type="number" pos:line="639" pos:column="39">0<pos:position pos:line="639" pos:column="40"/></literal></expr> <pos:position pos:line="639" pos:column="41"/></then><else pos:line="639" pos:column="41">: <expr><name pos:line="639" pos:column="43">previous<pos:position pos:line="639" pos:column="51"/></name> <operator pos:line="639" pos:column="52">-<pos:position pos:line="639" pos:column="53"/></operator> <name pos:line="639" pos:column="54">bralink<pos:position pos:line="639" pos:column="61"/></name></expr></else></ternary></expr>;<pos:position pos:line="639" pos:column="62"/></expr_stmt>
          <expr_stmt><expr><name pos:line="640" pos:column="11">bralink<pos:position pos:line="640" pos:column="18"/></name> <operator pos:line="640" pos:column="19">=<pos:position pos:line="640" pos:column="20"/></operator> <name pos:line="640" pos:column="21">previous<pos:position pos:line="640" pos:column="29"/></name></expr>;<pos:position pos:line="640" pos:column="30"/></expr_stmt>
          <expr_stmt><expr><operator pos:line="641" pos:column="11">*<pos:position pos:line="641" pos:column="12"/></operator><name pos:line="641" pos:column="12">previous<pos:position pos:line="641" pos:column="20"/></name><operator pos:line="641" pos:column="20">++<pos:position pos:line="641" pos:column="22"/></operator> <operator pos:line="641" pos:column="23">=<pos:position pos:line="641" pos:column="24"/></operator> <name pos:line="641" pos:column="25">offset<pos:position pos:line="641" pos:column="31"/></name> <operator pos:line="641" pos:column="32">&gt;&gt;<pos:position pos:line="641" pos:column="37"/></operator> <literal type="number" pos:line="641" pos:column="35">8<pos:position pos:line="641" pos:column="36"/></literal></expr>;<pos:position pos:line="641" pos:column="37"/></expr_stmt>
          <expr_stmt><expr><operator pos:line="642" pos:column="11">*<pos:position pos:line="642" pos:column="12"/></operator><name pos:line="642" pos:column="12">previous<pos:position pos:line="642" pos:column="20"/></name><operator pos:line="642" pos:column="20">++<pos:position pos:line="642" pos:column="22"/></operator> <operator pos:line="642" pos:column="23">=<pos:position pos:line="642" pos:column="24"/></operator> <name pos:line="642" pos:column="25">offset<pos:position pos:line="642" pos:column="31"/></name> <operator pos:line="642" pos:column="32">&amp;<pos:position pos:line="642" pos:column="37"/></operator> <literal type="number" pos:line="642" pos:column="34">255<pos:position pos:line="642" pos:column="37"/></literal></expr>;<pos:position pos:line="642" pos:column="38"/></expr_stmt>
          }<pos:position pos:line="643" pos:column="12"/></block></else></if>

        <expr_stmt><expr><name pos:line="645" pos:column="9">repeat_max<pos:position pos:line="645" pos:column="19"/></name><operator pos:line="645" pos:column="19">--<pos:position pos:line="645" pos:column="21"/></operator></expr>;<pos:position pos:line="645" pos:column="22"/></expr_stmt>
        }<pos:position pos:line="646" pos:column="10"/></block></then>

      <comment type="block" pos:line="648" pos:column="7">/* If the minimum is greater than zero, replicate the group as many
      times as necessary, and adjust the maximum to the number of subsequent
      copies that we need. */</comment>

      <else pos:line="652" pos:column="7">else
        <block pos:line="653" pos:column="9">{
        <for pos:line="654" pos:column="9">for <control pos:line="654" pos:column="13">(<init><expr><name pos:line="654" pos:column="14">i<pos:position pos:line="654" pos:column="15"/></name> <operator pos:line="654" pos:column="16">=<pos:position pos:line="654" pos:column="17"/></operator> <literal type="number" pos:line="654" pos:column="18">1<pos:position pos:line="654" pos:column="19"/></literal></expr>;<pos:position pos:line="654" pos:column="20"/></init> <condition><expr><name pos:line="654" pos:column="21">i<pos:position pos:line="654" pos:column="22"/></name> <operator pos:line="654" pos:column="23">&lt;<pos:position pos:line="654" pos:column="27"/></operator> <name pos:line="654" pos:column="25">repeat_min<pos:position pos:line="654" pos:column="35"/></name></expr>;<pos:position pos:line="654" pos:column="36"/></condition> <incr><expr><name pos:line="654" pos:column="37">i<pos:position pos:line="654" pos:column="38"/></name><operator pos:line="654" pos:column="38">++<pos:position pos:line="654" pos:column="40"/></operator></expr></incr>)<pos:position pos:line="654" pos:column="41"/></control>
          <block pos:line="655" pos:column="11">{
          <expr_stmt><expr><call><name pos:line="656" pos:column="11">memcpy<pos:position pos:line="656" pos:column="17"/></name><argument_list pos:line="656" pos:column="17">(<argument><expr><name pos:line="656" pos:column="18">code<pos:position pos:line="656" pos:column="22"/></name></expr></argument>, <argument><expr><name pos:line="656" pos:column="24">previous<pos:position pos:line="656" pos:column="32"/></name></expr></argument>, <argument><expr><name pos:line="656" pos:column="34">len<pos:position pos:line="656" pos:column="37"/></name></expr></argument>)<pos:position pos:line="656" pos:column="38"/></argument_list></call></expr>;<pos:position pos:line="656" pos:column="39"/></expr_stmt>
          <expr_stmt><expr><name pos:line="657" pos:column="11">code<pos:position pos:line="657" pos:column="15"/></name> <operator pos:line="657" pos:column="16">+=<pos:position pos:line="657" pos:column="18"/></operator> <name pos:line="657" pos:column="19">len<pos:position pos:line="657" pos:column="22"/></name></expr>;<pos:position pos:line="657" pos:column="23"/></expr_stmt>
          }<pos:position pos:line="658" pos:column="12"/></block></for>
        <if pos:line="659" pos:column="9">if <condition pos:line="659" pos:column="12">(<expr><name pos:line="659" pos:column="13">repeat_max<pos:position pos:line="659" pos:column="23"/></name> <operator pos:line="659" pos:column="24">&gt;<pos:position pos:line="659" pos:column="28"/></operator> <literal type="number" pos:line="659" pos:column="26">0<pos:position pos:line="659" pos:column="27"/></literal></expr>)<pos:position pos:line="659" pos:column="28"/></condition><then pos:line="659" pos:column="28"> <block type="pseudo"><expr_stmt><expr><name pos:line="659" pos:column="29">repeat_max<pos:position pos:line="659" pos:column="39"/></name> <operator pos:line="659" pos:column="40">-=<pos:position pos:line="659" pos:column="42"/></operator> <name pos:line="659" pos:column="43">repeat_min<pos:position pos:line="659" pos:column="53"/></name></expr>;<pos:position pos:line="659" pos:column="54"/></expr_stmt></block></then></if>
        }<pos:position pos:line="660" pos:column="10"/></block></else></if>

      <comment type="block" pos:line="662" pos:column="7">/* This code is common to both the zero and non-zero minimum cases. If
      the maximum is limited, it replicates the group in a nested fashion,
      remembering the bracket starts on a stack. In the case of a zero minimum,
      the first one was set up above. In all cases the repeat_max now specifies
      the number of additional copies needed. */</comment>

      <if pos:line="668" pos:column="7">if <condition pos:line="668" pos:column="10">(<expr><name pos:line="668" pos:column="11">repeat_max<pos:position pos:line="668" pos:column="21"/></name> <operator pos:line="668" pos:column="22">&gt;=<pos:position pos:line="668" pos:column="27"/></operator> <literal type="number" pos:line="668" pos:column="25">0<pos:position pos:line="668" pos:column="26"/></literal></expr>)<pos:position pos:line="668" pos:column="27"/></condition><then pos:line="668" pos:column="27">
        <block pos:line="669" pos:column="9">{
        <for pos:line="670" pos:column="9">for <control pos:line="670" pos:column="13">(<init><expr><name pos:line="670" pos:column="14">i<pos:position pos:line="670" pos:column="15"/></name> <operator pos:line="670" pos:column="16">=<pos:position pos:line="670" pos:column="17"/></operator> <name pos:line="670" pos:column="18">repeat_max<pos:position pos:line="670" pos:column="28"/></name> <operator pos:line="670" pos:column="29">-<pos:position pos:line="670" pos:column="30"/></operator> <literal type="number" pos:line="670" pos:column="31">1<pos:position pos:line="670" pos:column="32"/></literal></expr>;<pos:position pos:line="670" pos:column="33"/></init> <condition><expr><name pos:line="670" pos:column="34">i<pos:position pos:line="670" pos:column="35"/></name> <operator pos:line="670" pos:column="36">&gt;=<pos:position pos:line="670" pos:column="41"/></operator> <literal type="number" pos:line="670" pos:column="39">0<pos:position pos:line="670" pos:column="40"/></literal></expr>;<pos:position pos:line="670" pos:column="41"/></condition> <incr><expr><name pos:line="670" pos:column="42">i<pos:position pos:line="670" pos:column="43"/></name><operator pos:line="670" pos:column="43">--<pos:position pos:line="670" pos:column="45"/></operator></expr></incr>)<pos:position pos:line="670" pos:column="46"/></control>
          <block pos:line="671" pos:column="11">{
          <expr_stmt><expr><operator pos:line="672" pos:column="11">*<pos:position pos:line="672" pos:column="12"/></operator><name pos:line="672" pos:column="12">code<pos:position pos:line="672" pos:column="16"/></name><operator pos:line="672" pos:column="16">++<pos:position pos:line="672" pos:column="18"/></operator> <operator pos:line="672" pos:column="19">=<pos:position pos:line="672" pos:column="20"/></operator> <name pos:line="672" pos:column="21">OP_BRAZERO<pos:position pos:line="672" pos:column="31"/></name> <operator pos:line="672" pos:column="32">+<pos:position pos:line="672" pos:column="33"/></operator> <name pos:line="672" pos:column="34">repeat_type<pos:position pos:line="672" pos:column="45"/></name></expr>;<pos:position pos:line="672" pos:column="46"/></expr_stmt>

          <comment type="block" pos:line="674" pos:column="11">/* All but the final copy start a new nesting, maintaining the
          chain of brackets outstanding. */</comment>

          <if pos:line="677" pos:column="11">if <condition pos:line="677" pos:column="14">(<expr><name pos:line="677" pos:column="15">i<pos:position pos:line="677" pos:column="16"/></name> <operator pos:line="677" pos:column="17">!=<pos:position pos:line="677" pos:column="19"/></operator> <literal type="number" pos:line="677" pos:column="20">0<pos:position pos:line="677" pos:column="21"/></literal></expr>)<pos:position pos:line="677" pos:column="22"/></condition><then pos:line="677" pos:column="22">
            <block pos:line="678" pos:column="13">{
            <decl_stmt><decl><type><name pos:line="679" pos:column="13">int<pos:position pos:line="679" pos:column="16"/></name></type> <name pos:line="679" pos:column="17">offset<pos:position pos:line="679" pos:column="23"/></name></decl>;<pos:position pos:line="679" pos:column="24"/></decl_stmt>
            <expr_stmt><expr><operator pos:line="680" pos:column="13">*<pos:position pos:line="680" pos:column="14"/></operator><name pos:line="680" pos:column="14">code<pos:position pos:line="680" pos:column="18"/></name><operator pos:line="680" pos:column="18">++<pos:position pos:line="680" pos:column="20"/></operator> <operator pos:line="680" pos:column="21">=<pos:position pos:line="680" pos:column="22"/></operator> <name pos:line="680" pos:column="23">OP_BRA<pos:position pos:line="680" pos:column="29"/></name></expr>;<pos:position pos:line="680" pos:column="30"/></expr_stmt>
            <expr_stmt><expr><name pos:line="681" pos:column="13">offset<pos:position pos:line="681" pos:column="19"/></name> <operator pos:line="681" pos:column="20">=<pos:position pos:line="681" pos:column="21"/></operator> <ternary><condition><expr><operator pos:line="681" pos:column="22">(<pos:position pos:line="681" pos:column="23"/></operator><name pos:line="681" pos:column="23">bralink<pos:position pos:line="681" pos:column="30"/></name> <operator pos:line="681" pos:column="31">==<pos:position pos:line="681" pos:column="33"/></operator> <name pos:line="681" pos:column="34">NULL<pos:position pos:line="681" pos:column="38"/></name><operator pos:line="681" pos:column="38">)<pos:position pos:line="681" pos:column="39"/></operator></expr>?<pos:position pos:line="681" pos:column="40"/></condition><then pos:line="681" pos:column="40"> <expr><literal type="number" pos:line="681" pos:column="41">0<pos:position pos:line="681" pos:column="42"/></literal></expr> <pos:position pos:line="681" pos:column="43"/></then><else pos:line="681" pos:column="43">: <expr><name pos:line="681" pos:column="45">code<pos:position pos:line="681" pos:column="49"/></name> <operator pos:line="681" pos:column="50">-<pos:position pos:line="681" pos:column="51"/></operator> <name pos:line="681" pos:column="52">bralink<pos:position pos:line="681" pos:column="59"/></name></expr></else></ternary></expr>;<pos:position pos:line="681" pos:column="60"/></expr_stmt>
            <expr_stmt><expr><name pos:line="682" pos:column="13">bralink<pos:position pos:line="682" pos:column="20"/></name> <operator pos:line="682" pos:column="21">=<pos:position pos:line="682" pos:column="22"/></operator> <name pos:line="682" pos:column="23">code<pos:position pos:line="682" pos:column="27"/></name></expr>;<pos:position pos:line="682" pos:column="28"/></expr_stmt>
            <expr_stmt><expr><operator pos:line="683" pos:column="13">*<pos:position pos:line="683" pos:column="14"/></operator><name pos:line="683" pos:column="14">code<pos:position pos:line="683" pos:column="18"/></name><operator pos:line="683" pos:column="18">++<pos:position pos:line="683" pos:column="20"/></operator> <operator pos:line="683" pos:column="21">=<pos:position pos:line="683" pos:column="22"/></operator> <name pos:line="683" pos:column="23">offset<pos:position pos:line="683" pos:column="29"/></name> <operator pos:line="683" pos:column="30">&gt;&gt;<pos:position pos:line="683" pos:column="35"/></operator> <literal type="number" pos:line="683" pos:column="33">8<pos:position pos:line="683" pos:column="34"/></literal></expr>;<pos:position pos:line="683" pos:column="35"/></expr_stmt>
            <expr_stmt><expr><operator pos:line="684" pos:column="13">*<pos:position pos:line="684" pos:column="14"/></operator><name pos:line="684" pos:column="14">code<pos:position pos:line="684" pos:column="18"/></name><operator pos:line="684" pos:column="18">++<pos:position pos:line="684" pos:column="20"/></operator> <operator pos:line="684" pos:column="21">=<pos:position pos:line="684" pos:column="22"/></operator> <name pos:line="684" pos:column="23">offset<pos:position pos:line="684" pos:column="29"/></name> <operator pos:line="684" pos:column="30">&amp;<pos:position pos:line="684" pos:column="35"/></operator> <literal type="number" pos:line="684" pos:column="32">255<pos:position pos:line="684" pos:column="35"/></literal></expr>;<pos:position pos:line="684" pos:column="36"/></expr_stmt>
            }<pos:position pos:line="685" pos:column="14"/></block></then></if>

          <expr_stmt><expr><call><name pos:line="687" pos:column="11">memcpy<pos:position pos:line="687" pos:column="17"/></name><argument_list pos:line="687" pos:column="17">(<argument><expr><name pos:line="687" pos:column="18">code<pos:position pos:line="687" pos:column="22"/></name></expr></argument>, <argument><expr><name pos:line="687" pos:column="24">previous<pos:position pos:line="687" pos:column="32"/></name></expr></argument>, <argument><expr><name pos:line="687" pos:column="34">len<pos:position pos:line="687" pos:column="37"/></name></expr></argument>)<pos:position pos:line="687" pos:column="38"/></argument_list></call></expr>;<pos:position pos:line="687" pos:column="39"/></expr_stmt>
          <expr_stmt><expr><name pos:line="688" pos:column="11">code<pos:position pos:line="688" pos:column="15"/></name> <operator pos:line="688" pos:column="16">+=<pos:position pos:line="688" pos:column="18"/></operator> <name pos:line="688" pos:column="19">len<pos:position pos:line="688" pos:column="22"/></name></expr>;<pos:position pos:line="688" pos:column="23"/></expr_stmt>
          }<pos:position pos:line="689" pos:column="12"/></block></for>

        <comment type="block" pos:line="691" pos:column="9">/* Now chain through the pending brackets, and fill in their length
        fields (which are holding the chain links pro tem). */</comment>

        <while pos:line="694" pos:column="9">while <condition pos:line="694" pos:column="15">(<expr><name pos:line="694" pos:column="16">bralink<pos:position pos:line="694" pos:column="23"/></name> <operator pos:line="694" pos:column="24">!=<pos:position pos:line="694" pos:column="26"/></operator> <name pos:line="694" pos:column="27">NULL<pos:position pos:line="694" pos:column="31"/></name></expr>)<pos:position pos:line="694" pos:column="32"/></condition>
          <block pos:line="695" pos:column="11">{
          <decl_stmt><decl><type><name pos:line="696" pos:column="11">int<pos:position pos:line="696" pos:column="14"/></name></type> <name pos:line="696" pos:column="15">oldlinkoffset<pos:position pos:line="696" pos:column="28"/></name></decl>;<pos:position pos:line="696" pos:column="29"/></decl_stmt>
          <decl_stmt><decl><type><name pos:line="697" pos:column="11">int<pos:position pos:line="697" pos:column="14"/></name></type> <name pos:line="697" pos:column="15">offset<pos:position pos:line="697" pos:column="21"/></name> <init pos:line="697" pos:column="22">= <expr><name pos:line="697" pos:column="24">code<pos:position pos:line="697" pos:column="28"/></name> <operator pos:line="697" pos:column="29">-<pos:position pos:line="697" pos:column="30"/></operator> <name pos:line="697" pos:column="31">bralink<pos:position pos:line="697" pos:column="38"/></name> <operator pos:line="697" pos:column="39">+<pos:position pos:line="697" pos:column="40"/></operator> <literal type="number" pos:line="697" pos:column="41">1<pos:position pos:line="697" pos:column="42"/></literal></expr></init></decl>;<pos:position pos:line="697" pos:column="43"/></decl_stmt>
          <decl_stmt><decl><type><name pos:line="698" pos:column="11">uschar<pos:position pos:line="698" pos:column="17"/></name> <modifier pos:line="698" pos:column="18">*<pos:position pos:line="698" pos:column="19"/></modifier></type><name pos:line="698" pos:column="19">bra<pos:position pos:line="698" pos:column="22"/></name> <init pos:line="698" pos:column="23">= <expr><name pos:line="698" pos:column="25">code<pos:position pos:line="698" pos:column="29"/></name> <operator pos:line="698" pos:column="30">-<pos:position pos:line="698" pos:column="31"/></operator> <name pos:line="698" pos:column="32">offset<pos:position pos:line="698" pos:column="38"/></name></expr></init></decl>;<pos:position pos:line="698" pos:column="39"/></decl_stmt>
          <expr_stmt><expr><name pos:line="699" pos:column="11">oldlinkoffset<pos:position pos:line="699" pos:column="24"/></name> <operator pos:line="699" pos:column="25">=<pos:position pos:line="699" pos:column="26"/></operator> <operator pos:line="699" pos:column="27">(<pos:position pos:line="699" pos:column="28"/></operator><name><name pos:line="699" pos:column="28">bra<pos:position pos:line="699" pos:column="31"/></name><index pos:line="699" pos:column="31">[<expr><literal type="number" pos:line="699" pos:column="32">1<pos:position pos:line="699" pos:column="33"/></literal></expr>]<pos:position pos:line="699" pos:column="34"/></index></name> <operator pos:line="699" pos:column="35">&lt;&lt;<pos:position pos:line="699" pos:column="43"/></operator> <literal type="number" pos:line="699" pos:column="38">8<pos:position pos:line="699" pos:column="39"/></literal><operator pos:line="699" pos:column="39">)<pos:position pos:line="699" pos:column="40"/></operator> <operator pos:line="699" pos:column="41">+<pos:position pos:line="699" pos:column="42"/></operator> <name><name pos:line="699" pos:column="43">bra<pos:position pos:line="699" pos:column="46"/></name><index pos:line="699" pos:column="46">[<expr><literal type="number" pos:line="699" pos:column="47">2<pos:position pos:line="699" pos:column="48"/></literal></expr>]<pos:position pos:line="699" pos:column="49"/></index></name></expr>;<pos:position pos:line="699" pos:column="50"/></expr_stmt>
          <expr_stmt><expr><name pos:line="700" pos:column="11">bralink<pos:position pos:line="700" pos:column="18"/></name> <operator pos:line="700" pos:column="19">=<pos:position pos:line="700" pos:column="20"/></operator> <ternary><condition><expr><operator pos:line="700" pos:column="21">(<pos:position pos:line="700" pos:column="22"/></operator><name pos:line="700" pos:column="22">oldlinkoffset<pos:position pos:line="700" pos:column="35"/></name> <operator pos:line="700" pos:column="36">==<pos:position pos:line="700" pos:column="38"/></operator> <literal type="number" pos:line="700" pos:column="39">0<pos:position pos:line="700" pos:column="40"/></literal><operator pos:line="700" pos:column="40">)<pos:position pos:line="700" pos:column="41"/></operator></expr>?<pos:position pos:line="700" pos:column="42"/></condition><then pos:line="700" pos:column="42"> <expr><name pos:line="700" pos:column="43">NULL<pos:position pos:line="700" pos:column="47"/></name></expr> <pos:position pos:line="700" pos:column="48"/></then><else pos:line="700" pos:column="48">: <expr><name pos:line="700" pos:column="50">bralink<pos:position pos:line="700" pos:column="57"/></name> <operator pos:line="700" pos:column="58">-<pos:position pos:line="700" pos:column="59"/></operator> <name pos:line="700" pos:column="60">oldlinkoffset<pos:position pos:line="700" pos:column="73"/></name></expr></else></ternary></expr>;<pos:position pos:line="700" pos:column="74"/></expr_stmt>
          <expr_stmt><expr><operator pos:line="701" pos:column="11">*<pos:position pos:line="701" pos:column="12"/></operator><name pos:line="701" pos:column="12">code<pos:position pos:line="701" pos:column="16"/></name><operator pos:line="701" pos:column="16">++<pos:position pos:line="701" pos:column="18"/></operator> <operator pos:line="701" pos:column="19">=<pos:position pos:line="701" pos:column="20"/></operator> <name pos:line="701" pos:column="21">OP_KET<pos:position pos:line="701" pos:column="27"/></name></expr>;<pos:position pos:line="701" pos:column="28"/></expr_stmt>
          <expr_stmt><expr><operator pos:line="702" pos:column="11">*<pos:position pos:line="702" pos:column="12"/></operator><name pos:line="702" pos:column="12">code<pos:position pos:line="702" pos:column="16"/></name><operator pos:line="702" pos:column="16">++<pos:position pos:line="702" pos:column="18"/></operator> <operator pos:line="702" pos:column="19">=<pos:position pos:line="702" pos:column="20"/></operator> <name><name pos:line="702" pos:column="21">bra<pos:position pos:line="702" pos:column="24"/></name><index pos:line="702" pos:column="24">[<expr><literal type="number" pos:line="702" pos:column="25">1<pos:position pos:line="702" pos:column="26"/></literal></expr>]<pos:position pos:line="702" pos:column="27"/></index></name> <operator pos:line="702" pos:column="28">=<pos:position pos:line="702" pos:column="29"/></operator> <name pos:line="702" pos:column="30">offset<pos:position pos:line="702" pos:column="36"/></name> <operator pos:line="702" pos:column="37">&gt;&gt;<pos:position pos:line="702" pos:column="42"/></operator> <literal type="number" pos:line="702" pos:column="40">8<pos:position pos:line="702" pos:column="41"/></literal></expr>;<pos:position pos:line="702" pos:column="42"/></expr_stmt>
          <expr_stmt><expr><operator pos:line="703" pos:column="11">*<pos:position pos:line="703" pos:column="12"/></operator><name pos:line="703" pos:column="12">code<pos:position pos:line="703" pos:column="16"/></name><operator pos:line="703" pos:column="16">++<pos:position pos:line="703" pos:column="18"/></operator> <operator pos:line="703" pos:column="19">=<pos:position pos:line="703" pos:column="20"/></operator> <name><name pos:line="703" pos:column="21">bra<pos:position pos:line="703" pos:column="24"/></name><index pos:line="703" pos:column="24">[<expr><literal type="number" pos:line="703" pos:column="25">2<pos:position pos:line="703" pos:column="26"/></literal></expr>]<pos:position pos:line="703" pos:column="27"/></index></name> <operator pos:line="703" pos:column="28">=<pos:position pos:line="703" pos:column="29"/></operator> <operator pos:line="703" pos:column="30">(<pos:position pos:line="703" pos:column="31"/></operator><name pos:line="703" pos:column="31">offset<pos:position pos:line="703" pos:column="37"/></name> <operator pos:line="703" pos:column="38">&amp;<pos:position pos:line="703" pos:column="43"/></operator> <literal type="number" pos:line="703" pos:column="40">255<pos:position pos:line="703" pos:column="43"/></literal><operator pos:line="703" pos:column="43">)<pos:position pos:line="703" pos:column="44"/></operator></expr>;<pos:position pos:line="703" pos:column="45"/></expr_stmt>
          }<pos:position pos:line="704" pos:column="12"/></block></while>
        }<pos:position pos:line="705" pos:column="10"/></block></then>

      <comment type="block" pos:line="707" pos:column="7">/* If the maximum is unlimited, set a repeater in the final copy. We
      can't just offset backwards from the current code point, because we
      don't know if there's been an options resetting after the ket. The
      correct offset was computed above. */</comment>

      <else pos:line="712" pos:column="7">else <block type="pseudo"><expr_stmt><expr><name><name pos:line="712" pos:column="12">code<pos:position pos:line="712" pos:column="16"/></name><index pos:line="712" pos:column="16">[<expr><operator pos:line="712" pos:column="17">-<pos:position pos:line="712" pos:column="18"/></operator><name pos:line="712" pos:column="18">ketoffset<pos:position pos:line="712" pos:column="27"/></name></expr>]<pos:position pos:line="712" pos:column="28"/></index></name> <operator pos:line="712" pos:column="29">=<pos:position pos:line="712" pos:column="30"/></operator> <name pos:line="712" pos:column="31">OP_KETRMAX<pos:position pos:line="712" pos:column="41"/></name> <operator pos:line="712" pos:column="42">+<pos:position pos:line="712" pos:column="43"/></operator> <name pos:line="712" pos:column="44">repeat_type<pos:position pos:line="712" pos:column="55"/></name></expr>;<pos:position pos:line="712" pos:column="56"/></expr_stmt></block></else></if>
      }<pos:position pos:line="713" pos:column="8"/></block></then></if></elseif>

    <comment type="block" pos:line="715" pos:column="5">/* Else there's some kind of shambles */</comment>

    <else pos:line="717" pos:column="5">else
      <block pos:line="718" pos:column="7">{
      <expr_stmt><expr><operator pos:line="719" pos:column="7">*<pos:position pos:line="719" pos:column="8"/></operator><name pos:line="719" pos:column="8">errorptr<pos:position pos:line="719" pos:column="16"/></name> <operator pos:line="719" pos:column="17">=<pos:position pos:line="719" pos:column="18"/></operator> <name pos:line="719" pos:column="19">ERR11<pos:position pos:line="719" pos:column="24"/></name></expr>;<pos:position pos:line="719" pos:column="25"/></expr_stmt>
      <goto pos:line="720" pos:column="7">goto <name pos:line="720" pos:column="12">FAILED<pos:position pos:line="720" pos:column="18"/></name>;<pos:position pos:line="720" pos:column="19"/></goto>
      }<pos:position pos:line="721" pos:column="8"/></block></else></if>

    <comment type="block" pos:line="723" pos:column="5">/* In all case we no longer have a previous item. */</comment>

    <label><name pos:line="725" pos:column="5">END_REPEAT<pos:position pos:line="725" pos:column="15"/></name>:<pos:position pos:line="725" pos:column="16"/></label>
    <expr_stmt><expr><name pos:line="726" pos:column="5">previous<pos:position pos:line="726" pos:column="13"/></name> <operator pos:line="726" pos:column="14">=<pos:position pos:line="726" pos:column="15"/></operator> <name pos:line="726" pos:column="16">NULL<pos:position pos:line="726" pos:column="20"/></name></expr>;<pos:position pos:line="726" pos:column="21"/></expr_stmt>
    <break pos:line="727" pos:column="5">break;<pos:position pos:line="727" pos:column="11"/></break>


    <comment type="block" pos:line="730" pos:column="5">/* Start of nested bracket sub-expression, or comment or lookahead or
    lookbehind or option setting or condition. First deal with special things
    that can come after a bracket; all are introduced by ?, and the appearance
    of any of them means that this is not a referencing group. They were
    checked for validity in the first pass over the string, so we don't have to
    check for syntax errors here.  */</comment>

    <case pos:line="737" pos:column="5">case <expr><literal type="char" pos:line="737" pos:column="10">'('<pos:position pos:line="737" pos:column="13"/></literal></expr>:<pos:position pos:line="737" pos:column="14"/></case>
    <expr_stmt><expr><name pos:line="738" pos:column="5">newoptions<pos:position pos:line="738" pos:column="15"/></name> <operator pos:line="738" pos:column="16">=<pos:position pos:line="738" pos:column="17"/></operator> <name pos:line="738" pos:column="18">options<pos:position pos:line="738" pos:column="25"/></name></expr>;<pos:position pos:line="738" pos:column="26"/></expr_stmt>
    <expr_stmt><expr><name pos:line="739" pos:column="5">skipbytes<pos:position pos:line="739" pos:column="14"/></name> <operator pos:line="739" pos:column="15">=<pos:position pos:line="739" pos:column="16"/></operator> <literal type="number" pos:line="739" pos:column="17">0<pos:position pos:line="739" pos:column="18"/></literal></expr>;<pos:position pos:line="739" pos:column="19"/></expr_stmt>

    <if pos:line="741" pos:column="5">if <condition pos:line="741" pos:column="8">(<expr><operator pos:line="741" pos:column="9">*<pos:position pos:line="741" pos:column="10"/></operator><operator pos:line="741" pos:column="10">(<pos:position pos:line="741" pos:column="11"/></operator><operator pos:line="741" pos:column="11">++<pos:position pos:line="741" pos:column="13"/></operator><name pos:line="741" pos:column="13">ptr<pos:position pos:line="741" pos:column="16"/></name><operator pos:line="741" pos:column="16">)<pos:position pos:line="741" pos:column="17"/></operator> <operator pos:line="741" pos:column="18">==<pos:position pos:line="741" pos:column="20"/></operator> <literal type="char" pos:line="741" pos:column="21">'?'<pos:position pos:line="741" pos:column="24"/></literal></expr>)<pos:position pos:line="741" pos:column="25"/></condition><then pos:line="741" pos:column="25">
      <block pos:line="742" pos:column="7">{
      <decl_stmt><decl><type><name pos:line="743" pos:column="7">int<pos:position pos:line="743" pos:column="10"/></name></type> <name pos:line="743" pos:column="11">set<pos:position pos:line="743" pos:column="14"/></name></decl>, <decl><type ref="prev"/><name pos:line="743" pos:column="16">unset<pos:position pos:line="743" pos:column="21"/></name></decl>;<pos:position pos:line="743" pos:column="22"/></decl_stmt>
      <decl_stmt><decl><type><name pos:line="744" pos:column="7">int<pos:position pos:line="744" pos:column="10"/></name> <modifier pos:line="744" pos:column="11">*<pos:position pos:line="744" pos:column="12"/></modifier></type><name pos:line="744" pos:column="12">optset<pos:position pos:line="744" pos:column="18"/></name></decl>;<pos:position pos:line="744" pos:column="19"/></decl_stmt>

      <switch pos:line="746" pos:column="7">switch <condition pos:line="746" pos:column="14">(<expr><operator pos:line="746" pos:column="15">*<pos:position pos:line="746" pos:column="16"/></operator><operator pos:line="746" pos:column="16">(<pos:position pos:line="746" pos:column="17"/></operator><operator pos:line="746" pos:column="17">++<pos:position pos:line="746" pos:column="19"/></operator><name pos:line="746" pos:column="19">ptr<pos:position pos:line="746" pos:column="22"/></name><operator pos:line="746" pos:column="22">)<pos:position pos:line="746" pos:column="23"/></operator></expr>)<pos:position pos:line="746" pos:column="24"/></condition>
        <block pos:line="747" pos:column="9">{
        <case pos:line="748" pos:column="9">case <expr><literal type="char" pos:line="748" pos:column="14">'#'<pos:position pos:line="748" pos:column="17"/></literal></expr>:<pos:position pos:line="748" pos:column="18"/></case>                 <comment type="block" pos:line="748" pos:column="35">/* Comment; skip to ket */</comment>
        <expr_stmt><expr><name pos:line="749" pos:column="9">ptr<pos:position pos:line="749" pos:column="12"/></name><operator pos:line="749" pos:column="12">++<pos:position pos:line="749" pos:column="14"/></operator></expr>;<pos:position pos:line="749" pos:column="15"/></expr_stmt>
        <while pos:line="750" pos:column="9">while <condition pos:line="750" pos:column="15">(<expr><operator pos:line="750" pos:column="16">*<pos:position pos:line="750" pos:column="17"/></operator><name pos:line="750" pos:column="17">ptr<pos:position pos:line="750" pos:column="20"/></name> <operator pos:line="750" pos:column="21">!=<pos:position pos:line="750" pos:column="23"/></operator> <literal type="char" pos:line="750" pos:column="24">')'<pos:position pos:line="750" pos:column="27"/></literal></expr>)<pos:position pos:line="750" pos:column="28"/></condition> <block type="pseudo"><expr_stmt><expr><name pos:line="750" pos:column="29">ptr<pos:position pos:line="750" pos:column="32"/></name><operator pos:line="750" pos:column="32">++<pos:position pos:line="750" pos:column="34"/></operator></expr>;<pos:position pos:line="750" pos:column="35"/></expr_stmt></block></while>
        <continue pos:line="751" pos:column="9">continue;<pos:position pos:line="751" pos:column="18"/></continue>

        <case pos:line="753" pos:column="9">case <expr><literal type="char" pos:line="753" pos:column="14">':'<pos:position pos:line="753" pos:column="17"/></literal></expr>:<pos:position pos:line="753" pos:column="18"/></case>                 <comment type="block" pos:line="753" pos:column="35">/* Non-extracting bracket */</comment>
        <expr_stmt><expr><name pos:line="754" pos:column="9">bravalue<pos:position pos:line="754" pos:column="17"/></name> <operator pos:line="754" pos:column="18">=<pos:position pos:line="754" pos:column="19"/></operator> <name pos:line="754" pos:column="20">OP_BRA<pos:position pos:line="754" pos:column="26"/></name></expr>;<pos:position pos:line="754" pos:column="27"/></expr_stmt>
        <expr_stmt><expr><name pos:line="755" pos:column="9">ptr<pos:position pos:line="755" pos:column="12"/></name><operator pos:line="755" pos:column="12">++<pos:position pos:line="755" pos:column="14"/></operator></expr>;<pos:position pos:line="755" pos:column="15"/></expr_stmt>
        <break pos:line="756" pos:column="9">break;<pos:position pos:line="756" pos:column="15"/></break>

        <case pos:line="758" pos:column="9">case <expr><literal type="char" pos:line="758" pos:column="14">'('<pos:position pos:line="758" pos:column="17"/></literal></expr>:<pos:position pos:line="758" pos:column="18"/></case>
        <expr_stmt><expr><name pos:line="759" pos:column="9">bravalue<pos:position pos:line="759" pos:column="17"/></name> <operator pos:line="759" pos:column="18">=<pos:position pos:line="759" pos:column="19"/></operator> <name pos:line="759" pos:column="20">OP_COND<pos:position pos:line="759" pos:column="27"/></name></expr>;<pos:position pos:line="759" pos:column="28"/></expr_stmt>       <comment type="block" pos:line="759" pos:column="35">/* Conditional group */</comment>
        <if pos:line="760" pos:column="9">if <condition pos:line="760" pos:column="12">(<expr><operator pos:line="760" pos:column="13">(<pos:position pos:line="760" pos:column="14"/></operator><name><name pos:line="760" pos:column="14">cd<pos:position pos:line="760" pos:column="16"/></name><operator pos:line="760" pos:column="16">-&gt;<pos:position pos:line="760" pos:column="21"/></operator><name pos:line="760" pos:column="18">ctypes<pos:position pos:line="760" pos:column="24"/></name><index pos:line="760" pos:column="24">[<expr><operator pos:line="760" pos:column="25">*<pos:position pos:line="760" pos:column="26"/></operator><operator pos:line="760" pos:column="26">(<pos:position pos:line="760" pos:column="27"/></operator><operator pos:line="760" pos:column="27">++<pos:position pos:line="760" pos:column="29"/></operator><name pos:line="760" pos:column="29">ptr<pos:position pos:line="760" pos:column="32"/></name><operator pos:line="760" pos:column="32">)<pos:position pos:line="760" pos:column="33"/></operator></expr>]<pos:position pos:line="760" pos:column="34"/></index></name> <operator pos:line="760" pos:column="35">&amp;<pos:position pos:line="760" pos:column="40"/></operator> <name pos:line="760" pos:column="37">ctype_digit<pos:position pos:line="760" pos:column="48"/></name><operator pos:line="760" pos:column="48">)<pos:position pos:line="760" pos:column="49"/></operator> <operator pos:line="760" pos:column="50">!=<pos:position pos:line="760" pos:column="52"/></operator> <literal type="number" pos:line="760" pos:column="53">0<pos:position pos:line="760" pos:column="54"/></literal></expr>)<pos:position pos:line="760" pos:column="55"/></condition><then pos:line="760" pos:column="55">
          <block pos:line="761" pos:column="11">{
          <decl_stmt><decl><type><name pos:line="762" pos:column="11">int<pos:position pos:line="762" pos:column="14"/></name></type> <name pos:line="762" pos:column="15">condref<pos:position pos:line="762" pos:column="22"/></name> <init pos:line="762" pos:column="23">= <expr><operator pos:line="762" pos:column="25">*<pos:position pos:line="762" pos:column="26"/></operator><name pos:line="762" pos:column="26">ptr<pos:position pos:line="762" pos:column="29"/></name> <operator pos:line="762" pos:column="30">-<pos:position pos:line="762" pos:column="31"/></operator> <literal type="char" pos:line="762" pos:column="32">'0'<pos:position pos:line="762" pos:column="35"/></literal></expr></init></decl>;<pos:position pos:line="762" pos:column="36"/></decl_stmt>
          <while pos:line="763" pos:column="11">while <condition pos:line="763" pos:column="17">(<expr><operator pos:line="763" pos:column="18">*<pos:position pos:line="763" pos:column="19"/></operator><operator pos:line="763" pos:column="19">(<pos:position pos:line="763" pos:column="20"/></operator><operator pos:line="763" pos:column="20">++<pos:position pos:line="763" pos:column="22"/></operator><name pos:line="763" pos:column="22">ptr<pos:position pos:line="763" pos:column="25"/></name><operator pos:line="763" pos:column="25">)<pos:position pos:line="763" pos:column="26"/></operator> <operator pos:line="763" pos:column="27">!=<pos:position pos:line="763" pos:column="29"/></operator> <literal type="char" pos:line="763" pos:column="30">')'<pos:position pos:line="763" pos:column="33"/></literal></expr>)<pos:position pos:line="763" pos:column="34"/></condition> <block type="pseudo"><expr_stmt><expr><name pos:line="763" pos:column="35">condref<pos:position pos:line="763" pos:column="42"/></name> <operator pos:line="763" pos:column="43">=<pos:position pos:line="763" pos:column="44"/></operator> <name pos:line="763" pos:column="45">condref<pos:position pos:line="763" pos:column="52"/></name><operator pos:line="763" pos:column="52">*<pos:position pos:line="763" pos:column="53"/></operator><literal type="number" pos:line="763" pos:column="53">10<pos:position pos:line="763" pos:column="55"/></literal> <operator pos:line="763" pos:column="56">+<pos:position pos:line="763" pos:column="57"/></operator> <operator pos:line="763" pos:column="58">*<pos:position pos:line="763" pos:column="59"/></operator><name pos:line="763" pos:column="59">ptr<pos:position pos:line="763" pos:column="62"/></name> <operator pos:line="763" pos:column="63">-<pos:position pos:line="763" pos:column="64"/></operator> <literal type="char" pos:line="763" pos:column="65">'0'<pos:position pos:line="763" pos:column="68"/></literal></expr>;<pos:position pos:line="763" pos:column="69"/></expr_stmt></block></while>
          <if pos:line="764" pos:column="11">if <condition pos:line="764" pos:column="14">(<expr><name pos:line="764" pos:column="15">condref<pos:position pos:line="764" pos:column="22"/></name> <operator pos:line="764" pos:column="23">==<pos:position pos:line="764" pos:column="25"/></operator> <literal type="number" pos:line="764" pos:column="26">0<pos:position pos:line="764" pos:column="27"/></literal></expr>)<pos:position pos:line="764" pos:column="28"/></condition><then pos:line="764" pos:column="28">
            <block pos:line="765" pos:column="13">{
            <expr_stmt><expr><operator pos:line="766" pos:column="13">*<pos:position pos:line="766" pos:column="14"/></operator><name pos:line="766" pos:column="14">errorptr<pos:position pos:line="766" pos:column="22"/></name> <operator pos:line="766" pos:column="23">=<pos:position pos:line="766" pos:column="24"/></operator> <name pos:line="766" pos:column="25">ERR35<pos:position pos:line="766" pos:column="30"/></name></expr>;<pos:position pos:line="766" pos:column="31"/></expr_stmt>
            <goto pos:line="767" pos:column="13">goto <name pos:line="767" pos:column="18">FAILED<pos:position pos:line="767" pos:column="24"/></name>;<pos:position pos:line="767" pos:column="25"/></goto>
            }<pos:position pos:line="768" pos:column="14"/></block></then></if>
          <expr_stmt><expr><name pos:line="769" pos:column="11">ptr<pos:position pos:line="769" pos:column="14"/></name><operator pos:line="769" pos:column="14">++<pos:position pos:line="769" pos:column="16"/></operator></expr>;<pos:position pos:line="769" pos:column="17"/></expr_stmt>
          <expr_stmt><expr><name><name pos:line="770" pos:column="11">code<pos:position pos:line="770" pos:column="15"/></name><index pos:line="770" pos:column="15">[<expr><literal type="number" pos:line="770" pos:column="16">3<pos:position pos:line="770" pos:column="17"/></literal></expr>]<pos:position pos:line="770" pos:column="18"/></index></name> <operator pos:line="770" pos:column="19">=<pos:position pos:line="770" pos:column="20"/></operator> <name pos:line="770" pos:column="21">OP_CREF<pos:position pos:line="770" pos:column="28"/></name></expr>;<pos:position pos:line="770" pos:column="29"/></expr_stmt>
          <expr_stmt><expr><name><name pos:line="771" pos:column="11">code<pos:position pos:line="771" pos:column="15"/></name><index pos:line="771" pos:column="15">[<expr><literal type="number" pos:line="771" pos:column="16">4<pos:position pos:line="771" pos:column="17"/></literal></expr>]<pos:position pos:line="771" pos:column="18"/></index></name> <operator pos:line="771" pos:column="19">=<pos:position pos:line="771" pos:column="20"/></operator> <name pos:line="771" pos:column="21">condref<pos:position pos:line="771" pos:column="28"/></name> <operator pos:line="771" pos:column="29">&gt;&gt;<pos:position pos:line="771" pos:column="34"/></operator> <literal type="number" pos:line="771" pos:column="32">8<pos:position pos:line="771" pos:column="33"/></literal></expr>;<pos:position pos:line="771" pos:column="34"/></expr_stmt>
          <expr_stmt><expr><name><name pos:line="772" pos:column="11">code<pos:position pos:line="772" pos:column="15"/></name><index pos:line="772" pos:column="15">[<expr><literal type="number" pos:line="772" pos:column="16">5<pos:position pos:line="772" pos:column="17"/></literal></expr>]<pos:position pos:line="772" pos:column="18"/></index></name> <operator pos:line="772" pos:column="19">=<pos:position pos:line="772" pos:column="20"/></operator> <name pos:line="772" pos:column="21">condref<pos:position pos:line="772" pos:column="28"/></name> <operator pos:line="772" pos:column="29">&amp;<pos:position pos:line="772" pos:column="34"/></operator> <literal type="number" pos:line="772" pos:column="31">255<pos:position pos:line="772" pos:column="34"/></literal></expr>;<pos:position pos:line="772" pos:column="35"/></expr_stmt>
          <expr_stmt><expr><name pos:line="773" pos:column="11">skipbytes<pos:position pos:line="773" pos:column="20"/></name> <operator pos:line="773" pos:column="21">=<pos:position pos:line="773" pos:column="22"/></operator> <literal type="number" pos:line="773" pos:column="23">3<pos:position pos:line="773" pos:column="24"/></literal></expr>;<pos:position pos:line="773" pos:column="25"/></expr_stmt>
          }<pos:position pos:line="774" pos:column="12"/></block></then>
        <else pos:line="775" pos:column="9">else <block type="pseudo"><expr_stmt><expr><name pos:line="775" pos:column="14">ptr<pos:position pos:line="775" pos:column="17"/></name><operator pos:line="775" pos:column="17">--<pos:position pos:line="775" pos:column="19"/></operator></expr>;<pos:position pos:line="775" pos:column="20"/></expr_stmt></block></else></if>
        <break pos:line="776" pos:column="9">break;<pos:position pos:line="776" pos:column="15"/></break>

        <case pos:line="778" pos:column="9">case <expr><literal type="char" pos:line="778" pos:column="14">'='<pos:position pos:line="778" pos:column="17"/></literal></expr>:<pos:position pos:line="778" pos:column="18"/></case>                 <comment type="block" pos:line="778" pos:column="35">/* Positive lookahead */</comment>
        <expr_stmt><expr><name pos:line="779" pos:column="9">bravalue<pos:position pos:line="779" pos:column="17"/></name> <operator pos:line="779" pos:column="18">=<pos:position pos:line="779" pos:column="19"/></operator> <name pos:line="779" pos:column="20">OP_ASSERT<pos:position pos:line="779" pos:column="29"/></name></expr>;<pos:position pos:line="779" pos:column="30"/></expr_stmt>
        <expr_stmt><expr><name pos:line="780" pos:column="9">ptr<pos:position pos:line="780" pos:column="12"/></name><operator pos:line="780" pos:column="12">++<pos:position pos:line="780" pos:column="14"/></operator></expr>;<pos:position pos:line="780" pos:column="15"/></expr_stmt>
        <break pos:line="781" pos:column="9">break;<pos:position pos:line="781" pos:column="15"/></break>

        <case pos:line="783" pos:column="9">case <expr><literal type="char" pos:line="783" pos:column="14">'!'<pos:position pos:line="783" pos:column="17"/></literal></expr>:<pos:position pos:line="783" pos:column="18"/></case>                 <comment type="block" pos:line="783" pos:column="35">/* Negative lookahead */</comment>
        <expr_stmt><expr><name pos:line="784" pos:column="9">bravalue<pos:position pos:line="784" pos:column="17"/></name> <operator pos:line="784" pos:column="18">=<pos:position pos:line="784" pos:column="19"/></operator> <name pos:line="784" pos:column="20">OP_ASSERT_NOT<pos:position pos:line="784" pos:column="33"/></name></expr>;<pos:position pos:line="784" pos:column="34"/></expr_stmt>
        <expr_stmt><expr><name pos:line="785" pos:column="9">ptr<pos:position pos:line="785" pos:column="12"/></name><operator pos:line="785" pos:column="12">++<pos:position pos:line="785" pos:column="14"/></operator></expr>;<pos:position pos:line="785" pos:column="15"/></expr_stmt>
        <break pos:line="786" pos:column="9">break;<pos:position pos:line="786" pos:column="15"/></break>

        <case pos:line="788" pos:column="9">case <expr><literal type="char" pos:line="788" pos:column="14">'&lt;'<pos:position pos:line="788" pos:column="20"/></literal></expr>:<pos:position pos:line="788" pos:column="18"/></case>                 <comment type="block" pos:line="788" pos:column="35">/* Lookbehinds */</comment>
        <switch pos:line="789" pos:column="9">switch <condition pos:line="789" pos:column="16">(<expr><operator pos:line="789" pos:column="17">*<pos:position pos:line="789" pos:column="18"/></operator><operator pos:line="789" pos:column="18">(<pos:position pos:line="789" pos:column="19"/></operator><operator pos:line="789" pos:column="19">++<pos:position pos:line="789" pos:column="21"/></operator><name pos:line="789" pos:column="21">ptr<pos:position pos:line="789" pos:column="24"/></name><operator pos:line="789" pos:column="24">)<pos:position pos:line="789" pos:column="25"/></operator></expr>)<pos:position pos:line="789" pos:column="26"/></condition>
          <block pos:line="790" pos:column="11">{
          <case pos:line="791" pos:column="11">case <expr><literal type="char" pos:line="791" pos:column="16">'='<pos:position pos:line="791" pos:column="19"/></literal></expr>:<pos:position pos:line="791" pos:column="20"/></case>               <comment type="block" pos:line="791" pos:column="35">/* Positive lookbehind */</comment>
          <expr_stmt><expr><name pos:line="792" pos:column="11">bravalue<pos:position pos:line="792" pos:column="19"/></name> <operator pos:line="792" pos:column="20">=<pos:position pos:line="792" pos:column="21"/></operator> <name pos:line="792" pos:column="22">OP_ASSERTBACK<pos:position pos:line="792" pos:column="35"/></name></expr>;<pos:position pos:line="792" pos:column="36"/></expr_stmt>
          <expr_stmt><expr><name pos:line="793" pos:column="11">ptr<pos:position pos:line="793" pos:column="14"/></name><operator pos:line="793" pos:column="14">++<pos:position pos:line="793" pos:column="16"/></operator></expr>;<pos:position pos:line="793" pos:column="17"/></expr_stmt>
          <break pos:line="794" pos:column="11">break;<pos:position pos:line="794" pos:column="17"/></break>

          <case pos:line="796" pos:column="11">case <expr><literal type="char" pos:line="796" pos:column="16">'!'<pos:position pos:line="796" pos:column="19"/></literal></expr>:<pos:position pos:line="796" pos:column="20"/></case>               <comment type="block" pos:line="796" pos:column="35">/* Negative lookbehind */</comment>
          <expr_stmt><expr><name pos:line="797" pos:column="11">bravalue<pos:position pos:line="797" pos:column="19"/></name> <operator pos:line="797" pos:column="20">=<pos:position pos:line="797" pos:column="21"/></operator> <name pos:line="797" pos:column="22">OP_ASSERTBACK_NOT<pos:position pos:line="797" pos:column="39"/></name></expr>;<pos:position pos:line="797" pos:column="40"/></expr_stmt>
          <expr_stmt><expr><name pos:line="798" pos:column="11">ptr<pos:position pos:line="798" pos:column="14"/></name><operator pos:line="798" pos:column="14">++<pos:position pos:line="798" pos:column="16"/></operator></expr>;<pos:position pos:line="798" pos:column="17"/></expr_stmt>
          <break pos:line="799" pos:column="11">break;<pos:position pos:line="799" pos:column="17"/></break>

          <default pos:line="801" pos:column="11">default:<pos:position pos:line="801" pos:column="19"/></default>                <comment type="block" pos:line="801" pos:column="35">/* Syntax error */</comment>
          <expr_stmt><expr><operator pos:line="802" pos:column="11">*<pos:position pos:line="802" pos:column="12"/></operator><name pos:line="802" pos:column="12">errorptr<pos:position pos:line="802" pos:column="20"/></name> <operator pos:line="802" pos:column="21">=<pos:position pos:line="802" pos:column="22"/></operator> <name pos:line="802" pos:column="23">ERR24<pos:position pos:line="802" pos:column="28"/></name></expr>;<pos:position pos:line="802" pos:column="29"/></expr_stmt>
          <goto pos:line="803" pos:column="11">goto <name pos:line="803" pos:column="16">FAILED<pos:position pos:line="803" pos:column="22"/></name>;<pos:position pos:line="803" pos:column="23"/></goto>
          }<pos:position pos:line="804" pos:column="12"/></block></switch>
        <break pos:line="805" pos:column="9">break;<pos:position pos:line="805" pos:column="15"/></break>

        <case pos:line="807" pos:column="9">case <expr><literal type="char" pos:line="807" pos:column="14">'&gt;'<pos:position pos:line="807" pos:column="20"/></literal></expr>:<pos:position pos:line="807" pos:column="18"/></case>                 <comment type="block" pos:line="807" pos:column="35">/* One-time brackets */</comment>
        <expr_stmt><expr><name pos:line="808" pos:column="9">bravalue<pos:position pos:line="808" pos:column="17"/></name> <operator pos:line="808" pos:column="18">=<pos:position pos:line="808" pos:column="19"/></operator> <name pos:line="808" pos:column="20">OP_ONCE<pos:position pos:line="808" pos:column="27"/></name></expr>;<pos:position pos:line="808" pos:column="28"/></expr_stmt>
        <expr_stmt><expr><name pos:line="809" pos:column="9">ptr<pos:position pos:line="809" pos:column="12"/></name><operator pos:line="809" pos:column="12">++<pos:position pos:line="809" pos:column="14"/></operator></expr>;<pos:position pos:line="809" pos:column="15"/></expr_stmt>
        <break pos:line="810" pos:column="9">break;<pos:position pos:line="810" pos:column="15"/></break>

        <case pos:line="812" pos:column="9">case <expr><literal type="char" pos:line="812" pos:column="14">'R'<pos:position pos:line="812" pos:column="17"/></literal></expr>:<pos:position pos:line="812" pos:column="18"/></case>                 <comment type="block" pos:line="812" pos:column="35">/* Pattern recursion */</comment>
        <expr_stmt><expr><operator pos:line="813" pos:column="9">*<pos:position pos:line="813" pos:column="10"/></operator><name pos:line="813" pos:column="10">code<pos:position pos:line="813" pos:column="14"/></name><operator pos:line="813" pos:column="14">++<pos:position pos:line="813" pos:column="16"/></operator> <operator pos:line="813" pos:column="17">=<pos:position pos:line="813" pos:column="18"/></operator> <name pos:line="813" pos:column="19">OP_RECURSE<pos:position pos:line="813" pos:column="29"/></name></expr>;<pos:position pos:line="813" pos:column="30"/></expr_stmt>
        <expr_stmt><expr><name pos:line="814" pos:column="9">ptr<pos:position pos:line="814" pos:column="12"/></name><operator pos:line="814" pos:column="12">++<pos:position pos:line="814" pos:column="14"/></operator></expr>;<pos:position pos:line="814" pos:column="15"/></expr_stmt>
        <continue pos:line="815" pos:column="9">continue;<pos:position pos:line="815" pos:column="18"/></continue>

        <default pos:line="817" pos:column="9">default:<pos:position pos:line="817" pos:column="17"/></default>                  <comment type="block" pos:line="817" pos:column="35">/* Option setting */</comment>
        <expr_stmt><expr><name pos:line="818" pos:column="9">set<pos:position pos:line="818" pos:column="12"/></name> <operator pos:line="818" pos:column="13">=<pos:position pos:line="818" pos:column="14"/></operator> <name pos:line="818" pos:column="15">unset<pos:position pos:line="818" pos:column="20"/></name> <operator pos:line="818" pos:column="21">=<pos:position pos:line="818" pos:column="22"/></operator> <literal type="number" pos:line="818" pos:column="23">0<pos:position pos:line="818" pos:column="24"/></literal></expr>;<pos:position pos:line="818" pos:column="25"/></expr_stmt>
        <expr_stmt><expr><name pos:line="819" pos:column="9">optset<pos:position pos:line="819" pos:column="15"/></name> <operator pos:line="819" pos:column="16">=<pos:position pos:line="819" pos:column="17"/></operator> <operator pos:line="819" pos:column="18">&amp;<pos:position pos:line="819" pos:column="23"/></operator><name pos:line="819" pos:column="19">set<pos:position pos:line="819" pos:column="22"/></name></expr>;<pos:position pos:line="819" pos:column="23"/></expr_stmt>

        <while pos:line="821" pos:column="9">while <condition pos:line="821" pos:column="15">(<expr><operator pos:line="821" pos:column="16">*<pos:position pos:line="821" pos:column="17"/></operator><name pos:line="821" pos:column="17">ptr<pos:position pos:line="821" pos:column="20"/></name> <operator pos:line="821" pos:column="21">!=<pos:position pos:line="821" pos:column="23"/></operator> <literal type="char" pos:line="821" pos:column="24">')'<pos:position pos:line="821" pos:column="27"/></literal> <operator pos:line="821" pos:column="28">&amp;&amp;<pos:position pos:line="821" pos:column="38"/></operator> <operator pos:line="821" pos:column="31">*<pos:position pos:line="821" pos:column="32"/></operator><name pos:line="821" pos:column="32">ptr<pos:position pos:line="821" pos:column="35"/></name> <operator pos:line="821" pos:column="36">!=<pos:position pos:line="821" pos:column="38"/></operator> <literal type="char" pos:line="821" pos:column="39">':'<pos:position pos:line="821" pos:column="42"/></literal></expr>)<pos:position pos:line="821" pos:column="43"/></condition>
          <block pos:line="822" pos:column="11">{
          <switch pos:line="823" pos:column="11">switch <condition pos:line="823" pos:column="18">(<expr><operator pos:line="823" pos:column="19">*<pos:position pos:line="823" pos:column="20"/></operator><name pos:line="823" pos:column="20">ptr<pos:position pos:line="823" pos:column="23"/></name><operator pos:line="823" pos:column="23">++<pos:position pos:line="823" pos:column="25"/></operator></expr>)<pos:position pos:line="823" pos:column="26"/></condition>
            <block pos:line="824" pos:column="13">{
            <case pos:line="825" pos:column="13">case <expr><literal type="char" pos:line="825" pos:column="18">'-'<pos:position pos:line="825" pos:column="21"/></literal></expr>:<pos:position pos:line="825" pos:column="22"/></case> <expr_stmt><expr><name pos:line="825" pos:column="23">optset<pos:position pos:line="825" pos:column="29"/></name> <operator pos:line="825" pos:column="30">=<pos:position pos:line="825" pos:column="31"/></operator> <operator pos:line="825" pos:column="32">&amp;<pos:position pos:line="825" pos:column="37"/></operator><name pos:line="825" pos:column="33">unset<pos:position pos:line="825" pos:column="38"/></name></expr>;<pos:position pos:line="825" pos:column="39"/></expr_stmt> <break pos:line="825" pos:column="40">break;<pos:position pos:line="825" pos:column="46"/></break>

            <case pos:line="827" pos:column="13">case <expr><literal type="char" pos:line="827" pos:column="18">'i'<pos:position pos:line="827" pos:column="21"/></literal></expr>:<pos:position pos:line="827" pos:column="22"/></case> <expr_stmt><expr><operator pos:line="827" pos:column="23">*<pos:position pos:line="827" pos:column="24"/></operator><name pos:line="827" pos:column="24">optset<pos:position pos:line="827" pos:column="30"/></name> <operator pos:line="827" pos:column="31">|=<pos:position pos:line="827" pos:column="33"/></operator> <name pos:line="827" pos:column="34">PCRE_CASELESS<pos:position pos:line="827" pos:column="47"/></name></expr>;<pos:position pos:line="827" pos:column="48"/></expr_stmt> <break pos:line="827" pos:column="49">break;<pos:position pos:line="827" pos:column="55"/></break>
            <case pos:line="828" pos:column="13">case <expr><literal type="char" pos:line="828" pos:column="18">'m'<pos:position pos:line="828" pos:column="21"/></literal></expr>:<pos:position pos:line="828" pos:column="22"/></case> <expr_stmt><expr><operator pos:line="828" pos:column="23">*<pos:position pos:line="828" pos:column="24"/></operator><name pos:line="828" pos:column="24">optset<pos:position pos:line="828" pos:column="30"/></name> <operator pos:line="828" pos:column="31">|=<pos:position pos:line="828" pos:column="33"/></operator> <name pos:line="828" pos:column="34">PCRE_MULTILINE<pos:position pos:line="828" pos:column="48"/></name></expr>;<pos:position pos:line="828" pos:column="49"/></expr_stmt> <break pos:line="828" pos:column="50">break;<pos:position pos:line="828" pos:column="56"/></break>
            <case pos:line="829" pos:column="13">case <expr><literal type="char" pos:line="829" pos:column="18">'s'<pos:position pos:line="829" pos:column="21"/></literal></expr>:<pos:position pos:line="829" pos:column="22"/></case> <expr_stmt><expr><operator pos:line="829" pos:column="23">*<pos:position pos:line="829" pos:column="24"/></operator><name pos:line="829" pos:column="24">optset<pos:position pos:line="829" pos:column="30"/></name> <operator pos:line="829" pos:column="31">|=<pos:position pos:line="829" pos:column="33"/></operator> <name pos:line="829" pos:column="34">PCRE_DOTALL<pos:position pos:line="829" pos:column="45"/></name></expr>;<pos:position pos:line="829" pos:column="46"/></expr_stmt> <break pos:line="829" pos:column="47">break;<pos:position pos:line="829" pos:column="53"/></break>
            <case pos:line="830" pos:column="13">case <expr><literal type="char" pos:line="830" pos:column="18">'x'<pos:position pos:line="830" pos:column="21"/></literal></expr>:<pos:position pos:line="830" pos:column="22"/></case> <expr_stmt><expr><operator pos:line="830" pos:column="23">*<pos:position pos:line="830" pos:column="24"/></operator><name pos:line="830" pos:column="24">optset<pos:position pos:line="830" pos:column="30"/></name> <operator pos:line="830" pos:column="31">|=<pos:position pos:line="830" pos:column="33"/></operator> <name pos:line="830" pos:column="34">PCRE_EXTENDED<pos:position pos:line="830" pos:column="47"/></name></expr>;<pos:position pos:line="830" pos:column="48"/></expr_stmt> <break pos:line="830" pos:column="49">break;<pos:position pos:line="830" pos:column="55"/></break>
            <case pos:line="831" pos:column="13">case <expr><literal type="char" pos:line="831" pos:column="18">'U'<pos:position pos:line="831" pos:column="21"/></literal></expr>:<pos:position pos:line="831" pos:column="22"/></case> <expr_stmt><expr><operator pos:line="831" pos:column="23">*<pos:position pos:line="831" pos:column="24"/></operator><name pos:line="831" pos:column="24">optset<pos:position pos:line="831" pos:column="30"/></name> <operator pos:line="831" pos:column="31">|=<pos:position pos:line="831" pos:column="33"/></operator> <name pos:line="831" pos:column="34">PCRE_UNGREEDY<pos:position pos:line="831" pos:column="47"/></name></expr>;<pos:position pos:line="831" pos:column="48"/></expr_stmt> <break pos:line="831" pos:column="49">break;<pos:position pos:line="831" pos:column="55"/></break>
            <case pos:line="832" pos:column="13">case <expr><literal type="char" pos:line="832" pos:column="18">'X'<pos:position pos:line="832" pos:column="21"/></literal></expr>:<pos:position pos:line="832" pos:column="22"/></case> <expr_stmt><expr><operator pos:line="832" pos:column="23">*<pos:position pos:line="832" pos:column="24"/></operator><name pos:line="832" pos:column="24">optset<pos:position pos:line="832" pos:column="30"/></name> <operator pos:line="832" pos:column="31">|=<pos:position pos:line="832" pos:column="33"/></operator> <name pos:line="832" pos:column="34">PCRE_EXTRA<pos:position pos:line="832" pos:column="44"/></name></expr>;<pos:position pos:line="832" pos:column="45"/></expr_stmt> <break pos:line="832" pos:column="46">break;<pos:position pos:line="832" pos:column="52"/></break>

            <default pos:line="834" pos:column="13">default:<pos:position pos:line="834" pos:column="21"/></default>
            <expr_stmt><expr><operator pos:line="835" pos:column="13">*<pos:position pos:line="835" pos:column="14"/></operator><name pos:line="835" pos:column="14">errorptr<pos:position pos:line="835" pos:column="22"/></name> <operator pos:line="835" pos:column="23">=<pos:position pos:line="835" pos:column="24"/></operator> <name pos:line="835" pos:column="25">ERR12<pos:position pos:line="835" pos:column="30"/></name></expr>;<pos:position pos:line="835" pos:column="31"/></expr_stmt>
            <goto pos:line="836" pos:column="13">goto <name pos:line="836" pos:column="18">FAILED<pos:position pos:line="836" pos:column="24"/></name>;<pos:position pos:line="836" pos:column="25"/></goto>
            }<pos:position pos:line="837" pos:column="14"/></block></switch>
          }<pos:position pos:line="838" pos:column="12"/></block></while>

        <comment type="block" pos:line="840" pos:column="9">/* Set up the changed option bits, but don't change anything yet. */</comment>

        <expr_stmt><expr><name pos:line="842" pos:column="9">newoptions<pos:position pos:line="842" pos:column="19"/></name> <operator pos:line="842" pos:column="20">=<pos:position pos:line="842" pos:column="21"/></operator> <operator pos:line="842" pos:column="22">(<pos:position pos:line="842" pos:column="23"/></operator><name pos:line="842" pos:column="23">options<pos:position pos:line="842" pos:column="30"/></name> <operator pos:line="842" pos:column="31">|<pos:position pos:line="842" pos:column="32"/></operator> <name pos:line="842" pos:column="33">set<pos:position pos:line="842" pos:column="36"/></name><operator pos:line="842" pos:column="36">)<pos:position pos:line="842" pos:column="37"/></operator> <operator pos:line="842" pos:column="38">&amp;<pos:position pos:line="842" pos:column="43"/></operator> <operator pos:line="842" pos:column="40">(<pos:position pos:line="842" pos:column="41"/></operator><operator pos:line="842" pos:column="41">~<pos:position pos:line="842" pos:column="42"/></operator><name pos:line="842" pos:column="42">unset<pos:position pos:line="842" pos:column="47"/></name><operator pos:line="842" pos:column="47">)<pos:position pos:line="842" pos:column="48"/></operator></expr>;<pos:position pos:line="842" pos:column="49"/></expr_stmt>

        <comment type="block" pos:line="844" pos:column="9">/* If the options ended with ')' this is not the start of a nested
        group with option changes, so the options change at this level. At top
        level there is nothing else to be done (the options will in fact have
        been set from the start of compiling as a result of the first pass) but
        at an inner level we must compile code to change the ims options if
        necessary, and pass the new setting back so that it can be put at the
        start of any following branches, and when this group ends, a resetting
        item can be compiled. */</comment>

        <if pos:line="853" pos:column="9">if <condition pos:line="853" pos:column="12">(<expr><operator pos:line="853" pos:column="13">*<pos:position pos:line="853" pos:column="14"/></operator><name pos:line="853" pos:column="14">ptr<pos:position pos:line="853" pos:column="17"/></name> <operator pos:line="853" pos:column="18">==<pos:position pos:line="853" pos:column="20"/></operator> <literal type="char" pos:line="853" pos:column="21">')'<pos:position pos:line="853" pos:column="24"/></literal></expr>)<pos:position pos:line="853" pos:column="25"/></condition><then pos:line="853" pos:column="25">
          <block pos:line="854" pos:column="11">{
          <if pos:line="855" pos:column="11">if <condition pos:line="855" pos:column="14">(<expr><operator pos:line="855" pos:column="15">(<pos:position pos:line="855" pos:column="16"/></operator><name pos:line="855" pos:column="16">options<pos:position pos:line="855" pos:column="23"/></name> <operator pos:line="855" pos:column="24">&amp;<pos:position pos:line="855" pos:column="29"/></operator> <name pos:line="855" pos:column="26">PCRE_INGROUP<pos:position pos:line="855" pos:column="38"/></name><operator pos:line="855" pos:column="38">)<pos:position pos:line="855" pos:column="39"/></operator> <operator pos:line="855" pos:column="40">!=<pos:position pos:line="855" pos:column="42"/></operator> <literal type="number" pos:line="855" pos:column="43">0<pos:position pos:line="855" pos:column="44"/></literal> <operator pos:line="855" pos:column="45">&amp;&amp;<pos:position pos:line="855" pos:column="55"/></operator>
              <operator pos:line="856" pos:column="15">(<pos:position pos:line="856" pos:column="16"/></operator><name pos:line="856" pos:column="16">options<pos:position pos:line="856" pos:column="23"/></name> <operator pos:line="856" pos:column="24">&amp;<pos:position pos:line="856" pos:column="29"/></operator> <name pos:line="856" pos:column="26">PCRE_IMS<pos:position pos:line="856" pos:column="34"/></name><operator pos:line="856" pos:column="34">)<pos:position pos:line="856" pos:column="35"/></operator> <operator pos:line="856" pos:column="36">!=<pos:position pos:line="856" pos:column="38"/></operator> <operator pos:line="856" pos:column="39">(<pos:position pos:line="856" pos:column="40"/></operator><name pos:line="856" pos:column="40">newoptions<pos:position pos:line="856" pos:column="50"/></name> <operator pos:line="856" pos:column="51">&amp;<pos:position pos:line="856" pos:column="56"/></operator> <name pos:line="856" pos:column="53">PCRE_IMS<pos:position pos:line="856" pos:column="61"/></name><operator pos:line="856" pos:column="61">)<pos:position pos:line="856" pos:column="62"/></operator></expr>)<pos:position pos:line="856" pos:column="63"/></condition><then pos:line="856" pos:column="63">
            <block pos:line="857" pos:column="13">{
            <expr_stmt><expr><operator pos:line="858" pos:column="13">*<pos:position pos:line="858" pos:column="14"/></operator><name pos:line="858" pos:column="14">code<pos:position pos:line="858" pos:column="18"/></name><operator pos:line="858" pos:column="18">++<pos:position pos:line="858" pos:column="20"/></operator> <operator pos:line="858" pos:column="21">=<pos:position pos:line="858" pos:column="22"/></operator> <name pos:line="858" pos:column="23">OP_OPT<pos:position pos:line="858" pos:column="29"/></name></expr>;<pos:position pos:line="858" pos:column="30"/></expr_stmt>
            <expr_stmt><expr><operator pos:line="859" pos:column="13">*<pos:position pos:line="859" pos:column="14"/></operator><name pos:line="859" pos:column="14">code<pos:position pos:line="859" pos:column="18"/></name><operator pos:line="859" pos:column="18">++<pos:position pos:line="859" pos:column="20"/></operator> <operator pos:line="859" pos:column="21">=<pos:position pos:line="859" pos:column="22"/></operator> <operator pos:line="859" pos:column="23">*<pos:position pos:line="859" pos:column="24"/></operator><name pos:line="859" pos:column="24">optchanged<pos:position pos:line="859" pos:column="34"/></name> <operator pos:line="859" pos:column="35">=<pos:position pos:line="859" pos:column="36"/></operator> <name pos:line="859" pos:column="37">newoptions<pos:position pos:line="859" pos:column="47"/></name> <operator pos:line="859" pos:column="48">&amp;<pos:position pos:line="859" pos:column="53"/></operator> <name pos:line="859" pos:column="50">PCRE_IMS<pos:position pos:line="859" pos:column="58"/></name></expr>;<pos:position pos:line="859" pos:column="59"/></expr_stmt>
            }<pos:position pos:line="860" pos:column="14"/></block></then></if>
          <expr_stmt><expr><name pos:line="861" pos:column="11">options<pos:position pos:line="861" pos:column="18"/></name> <operator pos:line="861" pos:column="19">=<pos:position pos:line="861" pos:column="20"/></operator> <name pos:line="861" pos:column="21">newoptions<pos:position pos:line="861" pos:column="31"/></name></expr>;<pos:position pos:line="861" pos:column="32"/></expr_stmt>  <comment type="block" pos:line="861" pos:column="34">/* Change options at this level */</comment>
          <expr_stmt><expr><name pos:line="862" pos:column="11">previous<pos:position pos:line="862" pos:column="19"/></name> <operator pos:line="862" pos:column="20">=<pos:position pos:line="862" pos:column="21"/></operator> <name pos:line="862" pos:column="22">NULL<pos:position pos:line="862" pos:column="26"/></name></expr>;<pos:position pos:line="862" pos:column="27"/></expr_stmt>       <comment type="block" pos:line="862" pos:column="34">/* This item can't be repeated */</comment>
          <continue pos:line="863" pos:column="11">continue;<pos:position pos:line="863" pos:column="20"/></continue>              <comment type="block" pos:line="863" pos:column="34">/* It is complete */</comment>
          }<pos:position pos:line="864" pos:column="12"/></block></then></if>

        <comment type="block" pos:line="866" pos:column="9">/* If the options ended with ':' we are heading into a nested group
        with possible change of options. Such groups are non-capturing and are
        not assertions of any kind. All we need to do is skip over the ':';
        the newoptions value is handled below. */</comment>

        <expr_stmt><expr><name pos:line="871" pos:column="9">bravalue<pos:position pos:line="871" pos:column="17"/></name> <operator pos:line="871" pos:column="18">=<pos:position pos:line="871" pos:column="19"/></operator> <name pos:line="871" pos:column="20">OP_BRA<pos:position pos:line="871" pos:column="26"/></name></expr>;<pos:position pos:line="871" pos:column="27"/></expr_stmt>
        <expr_stmt><expr><name pos:line="872" pos:column="9">ptr<pos:position pos:line="872" pos:column="12"/></name><operator pos:line="872" pos:column="12">++<pos:position pos:line="872" pos:column="14"/></operator></expr>;<pos:position pos:line="872" pos:column="15"/></expr_stmt>
        }<pos:position pos:line="873" pos:column="10"/></block></switch>
      }<pos:position pos:line="874" pos:column="8"/></block></then>

    <comment type="block" pos:line="876" pos:column="5">/* Else we have a referencing group; adjust the opcode. If the bracket
    number is greater than EXTRACT_BASIC_MAX, we set the opcode one higher, and
    arrange for the true number to follow later, in an OP_BRANUMBER item. */</comment>

    <else pos:line="880" pos:column="5">else
      <block pos:line="881" pos:column="7">{
      <if pos:line="882" pos:column="7">if <condition pos:line="882" pos:column="10">(<expr><operator pos:line="882" pos:column="11">++<pos:position pos:line="882" pos:column="13"/></operator><operator pos:line="882" pos:column="13">(<pos:position pos:line="882" pos:column="14"/></operator><operator pos:line="882" pos:column="14">*<pos:position pos:line="882" pos:column="15"/></operator><name pos:line="882" pos:column="15">brackets<pos:position pos:line="882" pos:column="23"/></name><operator pos:line="882" pos:column="23">)<pos:position pos:line="882" pos:column="24"/></operator> <operator pos:line="882" pos:column="25">&gt;<pos:position pos:line="882" pos:column="29"/></operator> <name pos:line="882" pos:column="27">EXTRACT_BASIC_MAX<pos:position pos:line="882" pos:column="44"/></name></expr>)<pos:position pos:line="882" pos:column="45"/></condition><then pos:line="882" pos:column="45">
        <block pos:line="883" pos:column="9">{
        <expr_stmt><expr><name pos:line="884" pos:column="9">bravalue<pos:position pos:line="884" pos:column="17"/></name> <operator pos:line="884" pos:column="18">=<pos:position pos:line="884" pos:column="19"/></operator> <name pos:line="884" pos:column="20">OP_BRA<pos:position pos:line="884" pos:column="26"/></name> <operator pos:line="884" pos:column="27">+<pos:position pos:line="884" pos:column="28"/></operator> <name pos:line="884" pos:column="29">EXTRACT_BASIC_MAX<pos:position pos:line="884" pos:column="46"/></name> <operator pos:line="884" pos:column="47">+<pos:position pos:line="884" pos:column="48"/></operator> <literal type="number" pos:line="884" pos:column="49">1<pos:position pos:line="884" pos:column="50"/></literal></expr>;<pos:position pos:line="884" pos:column="51"/></expr_stmt>
        <expr_stmt><expr><name><name pos:line="885" pos:column="9">code<pos:position pos:line="885" pos:column="13"/></name><index pos:line="885" pos:column="13">[<expr><literal type="number" pos:line="885" pos:column="14">3<pos:position pos:line="885" pos:column="15"/></literal></expr>]<pos:position pos:line="885" pos:column="16"/></index></name> <operator pos:line="885" pos:column="17">=<pos:position pos:line="885" pos:column="18"/></operator> <name pos:line="885" pos:column="19">OP_BRANUMBER<pos:position pos:line="885" pos:column="31"/></name></expr>;<pos:position pos:line="885" pos:column="32"/></expr_stmt>
        <expr_stmt><expr><name><name pos:line="886" pos:column="9">code<pos:position pos:line="886" pos:column="13"/></name><index pos:line="886" pos:column="13">[<expr><literal type="number" pos:line="886" pos:column="14">4<pos:position pos:line="886" pos:column="15"/></literal></expr>]<pos:position pos:line="886" pos:column="16"/></index></name> <operator pos:line="886" pos:column="17">=<pos:position pos:line="886" pos:column="18"/></operator> <operator pos:line="886" pos:column="19">*<pos:position pos:line="886" pos:column="20"/></operator><name pos:line="886" pos:column="20">brackets<pos:position pos:line="886" pos:column="28"/></name> <operator pos:line="886" pos:column="29">&gt;&gt;<pos:position pos:line="886" pos:column="34"/></operator> <literal type="number" pos:line="886" pos:column="32">8<pos:position pos:line="886" pos:column="33"/></literal></expr>;<pos:position pos:line="886" pos:column="34"/></expr_stmt>
        <expr_stmt><expr><name><name pos:line="887" pos:column="9">code<pos:position pos:line="887" pos:column="13"/></name><index pos:line="887" pos:column="13">[<expr><literal type="number" pos:line="887" pos:column="14">5<pos:position pos:line="887" pos:column="15"/></literal></expr>]<pos:position pos:line="887" pos:column="16"/></index></name> <operator pos:line="887" pos:column="17">=<pos:position pos:line="887" pos:column="18"/></operator> <operator pos:line="887" pos:column="19">*<pos:position pos:line="887" pos:column="20"/></operator><name pos:line="887" pos:column="20">brackets<pos:position pos:line="887" pos:column="28"/></name> <operator pos:line="887" pos:column="29">&amp;<pos:position pos:line="887" pos:column="34"/></operator> <literal type="number" pos:line="887" pos:column="31">255<pos:position pos:line="887" pos:column="34"/></literal></expr>;<pos:position pos:line="887" pos:column="35"/></expr_stmt>
        <expr_stmt><expr><name pos:line="888" pos:column="9">skipbytes<pos:position pos:line="888" pos:column="18"/></name> <operator pos:line="888" pos:column="19">=<pos:position pos:line="888" pos:column="20"/></operator> <literal type="number" pos:line="888" pos:column="21">3<pos:position pos:line="888" pos:column="22"/></literal></expr>;<pos:position pos:line="888" pos:column="23"/></expr_stmt>
        }<pos:position pos:line="889" pos:column="10"/></block></then>
      <else pos:line="890" pos:column="7">else <block type="pseudo"><expr_stmt><expr><name pos:line="890" pos:column="12">bravalue<pos:position pos:line="890" pos:column="20"/></name> <operator pos:line="890" pos:column="21">=<pos:position pos:line="890" pos:column="22"/></operator> <name pos:line="890" pos:column="23">OP_BRA<pos:position pos:line="890" pos:column="29"/></name> <operator pos:line="890" pos:column="30">+<pos:position pos:line="890" pos:column="31"/></operator> <operator pos:line="890" pos:column="32">*<pos:position pos:line="890" pos:column="33"/></operator><name pos:line="890" pos:column="33">brackets<pos:position pos:line="890" pos:column="41"/></name></expr>;<pos:position pos:line="890" pos:column="42"/></expr_stmt></block></else></if>
      }<pos:position pos:line="891" pos:column="8"/></block></else></if>

    <comment type="block" pos:line="893" pos:column="5">/* Process nested bracketed re. Assertions may not be repeated, but other
    kinds can be. We copy code into a non-register variable in order to be able
    to pass its address because some compilers complain otherwise. Pass in a
    new setting for the ims options if they have changed. */</comment>

    <expr_stmt><expr><name pos:line="898" pos:column="5">previous<pos:position pos:line="898" pos:column="13"/></name> <operator pos:line="898" pos:column="14">=<pos:position pos:line="898" pos:column="15"/></operator> <ternary><condition><expr><operator pos:line="898" pos:column="16">(<pos:position pos:line="898" pos:column="17"/></operator><name pos:line="898" pos:column="17">bravalue<pos:position pos:line="898" pos:column="25"/></name> <operator pos:line="898" pos:column="26">&gt;=<pos:position pos:line="898" pos:column="31"/></operator> <name pos:line="898" pos:column="29">OP_ONCE<pos:position pos:line="898" pos:column="36"/></name><operator pos:line="898" pos:column="36">)<pos:position pos:line="898" pos:column="37"/></operator></expr>?<pos:position pos:line="898" pos:column="38"/></condition><then pos:line="898" pos:column="38"> <expr><name pos:line="898" pos:column="39">code<pos:position pos:line="898" pos:column="43"/></name></expr> <pos:position pos:line="898" pos:column="44"/></then><else pos:line="898" pos:column="44">: <expr><name pos:line="898" pos:column="46">NULL<pos:position pos:line="898" pos:column="50"/></name></expr></else></ternary></expr>;<pos:position pos:line="898" pos:column="51"/></expr_stmt>
    <expr_stmt><expr><operator pos:line="899" pos:column="5">*<pos:position pos:line="899" pos:column="6"/></operator><name pos:line="899" pos:column="6">code<pos:position pos:line="899" pos:column="10"/></name> <operator pos:line="899" pos:column="11">=<pos:position pos:line="899" pos:column="12"/></operator> <name pos:line="899" pos:column="13">bravalue<pos:position pos:line="899" pos:column="21"/></name></expr>;<pos:position pos:line="899" pos:column="22"/></expr_stmt>
    <expr_stmt><expr><name pos:line="900" pos:column="5">tempcode<pos:position pos:line="900" pos:column="13"/></name> <operator pos:line="900" pos:column="14">=<pos:position pos:line="900" pos:column="15"/></operator> <name pos:line="900" pos:column="16">code<pos:position pos:line="900" pos:column="20"/></name></expr>;<pos:position pos:line="900" pos:column="21"/></expr_stmt>

    <if pos:line="902" pos:column="5">if <condition pos:line="902" pos:column="8">(<expr><operator pos:line="902" pos:column="9">!<pos:position pos:line="902" pos:column="10"/></operator><call><name pos:line="902" pos:column="10">compile_regex<pos:position pos:line="902" pos:column="23"/></name><argument_list pos:line="902" pos:column="23">(
         <argument><expr><name pos:line="903" pos:column="10">options<pos:position pos:line="903" pos:column="17"/></name> <operator pos:line="903" pos:column="18">|<pos:position pos:line="903" pos:column="19"/></operator> <name pos:line="903" pos:column="20">PCRE_INGROUP<pos:position pos:line="903" pos:column="32"/></name></expr></argument>,       <comment type="block" pos:line="903" pos:column="40">/* Set for all nested groups */</comment>
         <argument><expr><ternary><condition><expr><operator pos:line="904" pos:column="10">(<pos:position pos:line="904" pos:column="11"/></operator><operator pos:line="904" pos:column="11">(<pos:position pos:line="904" pos:column="12"/></operator><name pos:line="904" pos:column="12">options<pos:position pos:line="904" pos:column="19"/></name> <operator pos:line="904" pos:column="20">&amp;<pos:position pos:line="904" pos:column="25"/></operator> <name pos:line="904" pos:column="22">PCRE_IMS<pos:position pos:line="904" pos:column="30"/></name><operator pos:line="904" pos:column="30">)<pos:position pos:line="904" pos:column="31"/></operator> <operator pos:line="904" pos:column="32">!=<pos:position pos:line="904" pos:column="34"/></operator> <operator pos:line="904" pos:column="35">(<pos:position pos:line="904" pos:column="36"/></operator><name pos:line="904" pos:column="36">newoptions<pos:position pos:line="904" pos:column="46"/></name> <operator pos:line="904" pos:column="47">&amp;<pos:position pos:line="904" pos:column="52"/></operator> <name pos:line="904" pos:column="49">PCRE_IMS<pos:position pos:line="904" pos:column="57"/></name><operator pos:line="904" pos:column="57">)<pos:position pos:line="904" pos:column="58"/></operator><operator pos:line="904" pos:column="58">)<pos:position pos:line="904" pos:column="59"/></operator></expr>?<pos:position pos:line="904" pos:column="60"/></condition><then pos:line="904" pos:column="60">
           <expr><name pos:line="905" pos:column="12">newoptions<pos:position pos:line="905" pos:column="22"/></name> <operator pos:line="905" pos:column="23">&amp;<pos:position pos:line="905" pos:column="28"/></operator> <name pos:line="905" pos:column="25">PCRE_IMS<pos:position pos:line="905" pos:column="33"/></name></expr> <pos:position pos:line="905" pos:column="34"/></then><else pos:line="905" pos:column="34">: <expr><operator pos:line="905" pos:column="36">-<pos:position pos:line="905" pos:column="37"/></operator><literal type="number" pos:line="905" pos:column="37">1<pos:position pos:line="905" pos:column="38"/></literal></expr></else></ternary></expr></argument>, <comment type="block" pos:line="905" pos:column="40">/* Pass ims options if changed */</comment>
         <argument><expr><name pos:line="906" pos:column="10">brackets<pos:position pos:line="906" pos:column="18"/></name></expr></argument>,                     <comment type="block" pos:line="906" pos:column="40">/* Extracting bracket count */</comment>
         <argument><expr><operator pos:line="907" pos:column="10">&amp;<pos:position pos:line="907" pos:column="15"/></operator><name pos:line="907" pos:column="11">tempcode<pos:position pos:line="907" pos:column="19"/></name></expr></argument>,                    <comment type="block" pos:line="907" pos:column="40">/* Where to put code (updated) */</comment>
         <argument><expr><operator pos:line="908" pos:column="10">&amp;<pos:position pos:line="908" pos:column="15"/></operator><name pos:line="908" pos:column="11">ptr<pos:position pos:line="908" pos:column="14"/></name></expr></argument>,                         <comment type="block" pos:line="908" pos:column="40">/* Input pointer (updated) */</comment>
         <argument><expr><name pos:line="909" pos:column="10">errorptr<pos:position pos:line="909" pos:column="18"/></name></expr></argument>,                     <comment type="block" pos:line="909" pos:column="40">/* Where to put an error message */</comment>
         <argument><expr><operator pos:line="910" pos:column="10">(<pos:position pos:line="910" pos:column="11"/></operator><name pos:line="910" pos:column="11">bravalue<pos:position pos:line="910" pos:column="19"/></name> <operator pos:line="910" pos:column="20">==<pos:position pos:line="910" pos:column="22"/></operator> <name pos:line="910" pos:column="23">OP_ASSERTBACK<pos:position pos:line="910" pos:column="36"/></name> <operator pos:line="910" pos:column="37">||<pos:position pos:line="910" pos:column="39"/></operator>
          <name pos:line="911" pos:column="11">bravalue<pos:position pos:line="911" pos:column="19"/></name> <operator pos:line="911" pos:column="20">==<pos:position pos:line="911" pos:column="22"/></operator> <name pos:line="911" pos:column="23">OP_ASSERTBACK_NOT<pos:position pos:line="911" pos:column="40"/></name><operator pos:line="911" pos:column="40">)<pos:position pos:line="911" pos:column="41"/></operator></expr></argument>, <comment type="block" pos:line="911" pos:column="43">/* TRUE if back assert */</comment>
         <argument><expr><name pos:line="912" pos:column="10">skipbytes<pos:position pos:line="912" pos:column="19"/></name></expr></argument>,                    <comment type="block" pos:line="912" pos:column="40">/* Skip over OP_COND/OP_BRANUMBER */</comment>
         <argument><expr><operator pos:line="913" pos:column="10">&amp;<pos:position pos:line="913" pos:column="15"/></operator><name pos:line="913" pos:column="11">subreqchar<pos:position pos:line="913" pos:column="21"/></name></expr></argument>,                  <comment type="block" pos:line="913" pos:column="40">/* For possible last char */</comment>
         <argument><expr><operator pos:line="914" pos:column="10">&amp;<pos:position pos:line="914" pos:column="15"/></operator><name pos:line="914" pos:column="11">subcountlits<pos:position pos:line="914" pos:column="23"/></name></expr></argument>,                <comment type="block" pos:line="914" pos:column="40">/* For literal count */</comment>
         <argument><expr><name pos:line="915" pos:column="10">cd<pos:position pos:line="915" pos:column="12"/></name></expr></argument>)<pos:position pos:line="915" pos:column="13"/></argument_list></call></expr>)<pos:position pos:line="915" pos:column="14"/></condition><then pos:line="915" pos:column="14">                          <comment type="block" pos:line="915" pos:column="40">/* Tables block */</comment>
      <block type="pseudo"><goto pos:line="916" pos:column="7">goto <name pos:line="916" pos:column="12">FAILED<pos:position pos:line="916" pos:column="18"/></name>;<pos:position pos:line="916" pos:column="19"/></goto></block></then>

    <comment type="block" pos:line="918" pos:column="5">/* At the end of compiling, code is still pointing to the start of the
    group, while tempcode has been updated to point past the end of the group
    and any option resetting that may follow it. The pattern pointer (ptr)
    is on the bracket. */</comment>

    <comment type="block" pos:line="923" pos:column="5">/* If this is a conditional bracket, check that there are no more than
    two branches in the group. */</comment>

    <elseif pos:line="926" pos:column="5">else <if pos:line="926" pos:column="10">if <condition pos:line="926" pos:column="13">(<expr><name pos:line="926" pos:column="14">bravalue<pos:position pos:line="926" pos:column="22"/></name> <operator pos:line="926" pos:column="23">==<pos:position pos:line="926" pos:column="25"/></operator> <name pos:line="926" pos:column="26">OP_COND<pos:position pos:line="926" pos:column="33"/></name></expr>)<pos:position pos:line="926" pos:column="34"/></condition><then pos:line="926" pos:column="34">
      <block pos:line="927" pos:column="7">{
      <decl_stmt><decl><type><name pos:line="928" pos:column="7">uschar<pos:position pos:line="928" pos:column="13"/></name> <modifier pos:line="928" pos:column="14">*<pos:position pos:line="928" pos:column="15"/></modifier></type><name pos:line="928" pos:column="15">tc<pos:position pos:line="928" pos:column="17"/></name> <init pos:line="928" pos:column="18">= <expr><name pos:line="928" pos:column="20">code<pos:position pos:line="928" pos:column="24"/></name></expr></init></decl>;<pos:position pos:line="928" pos:column="25"/></decl_stmt>
      <expr_stmt><expr><name pos:line="929" pos:column="7">condcount<pos:position pos:line="929" pos:column="16"/></name> <operator pos:line="929" pos:column="17">=<pos:position pos:line="929" pos:column="18"/></operator> <literal type="number" pos:line="929" pos:column="19">0<pos:position pos:line="929" pos:column="20"/></literal></expr>;<pos:position pos:line="929" pos:column="21"/></expr_stmt>

      <do pos:line="931" pos:column="7">do <block pos:line="931" pos:column="10">{
         <expr_stmt><expr><name pos:line="932" pos:column="10">condcount<pos:position pos:line="932" pos:column="19"/></name><operator pos:line="932" pos:column="19">++<pos:position pos:line="932" pos:column="21"/></operator></expr>;<pos:position pos:line="932" pos:column="22"/></expr_stmt>
         <expr_stmt><expr><name pos:line="933" pos:column="10">tc<pos:position pos:line="933" pos:column="12"/></name> <operator pos:line="933" pos:column="13">+=<pos:position pos:line="933" pos:column="15"/></operator> <operator pos:line="933" pos:column="16">(<pos:position pos:line="933" pos:column="17"/></operator><name><name pos:line="933" pos:column="17">tc<pos:position pos:line="933" pos:column="19"/></name><index pos:line="933" pos:column="19">[<expr><literal type="number" pos:line="933" pos:column="20">1<pos:position pos:line="933" pos:column="21"/></literal></expr>]<pos:position pos:line="933" pos:column="22"/></index></name> <operator pos:line="933" pos:column="23">&lt;&lt;<pos:position pos:line="933" pos:column="31"/></operator> <literal type="number" pos:line="933" pos:column="26">8<pos:position pos:line="933" pos:column="27"/></literal><operator pos:line="933" pos:column="27">)<pos:position pos:line="933" pos:column="28"/></operator> <operator pos:line="933" pos:column="29">|<pos:position pos:line="933" pos:column="30"/></operator> <name><name pos:line="933" pos:column="31">tc<pos:position pos:line="933" pos:column="33"/></name><index pos:line="933" pos:column="33">[<expr><literal type="number" pos:line="933" pos:column="34">2<pos:position pos:line="933" pos:column="35"/></literal></expr>]<pos:position pos:line="933" pos:column="36"/></index></name></expr>;<pos:position pos:line="933" pos:column="37"/></expr_stmt>
         }<pos:position pos:line="934" pos:column="11"/></block>
      while <condition pos:line="935" pos:column="13">(<expr><operator pos:line="935" pos:column="14">*<pos:position pos:line="935" pos:column="15"/></operator><name pos:line="935" pos:column="15">tc<pos:position pos:line="935" pos:column="17"/></name> <operator pos:line="935" pos:column="18">!=<pos:position pos:line="935" pos:column="20"/></operator> <name pos:line="935" pos:column="21">OP_KET<pos:position pos:line="935" pos:column="27"/></name></expr>)<pos:position pos:line="935" pos:column="28"/></condition>;<pos:position pos:line="935" pos:column="29"/></do>

      <if pos:line="937" pos:column="7">if <condition pos:line="937" pos:column="10">(<expr><name pos:line="937" pos:column="11">condcount<pos:position pos:line="937" pos:column="20"/></name> <operator pos:line="937" pos:column="21">&gt;<pos:position pos:line="937" pos:column="25"/></operator> <literal type="number" pos:line="937" pos:column="23">2<pos:position pos:line="937" pos:column="24"/></literal></expr>)<pos:position pos:line="937" pos:column="25"/></condition><then pos:line="937" pos:column="25">
        <block pos:line="938" pos:column="9">{
        <expr_stmt><expr><operator pos:line="939" pos:column="9">*<pos:position pos:line="939" pos:column="10"/></operator><name pos:line="939" pos:column="10">errorptr<pos:position pos:line="939" pos:column="18"/></name> <operator pos:line="939" pos:column="19">=<pos:position pos:line="939" pos:column="20"/></operator> <name pos:line="939" pos:column="21">ERR27<pos:position pos:line="939" pos:column="26"/></name></expr>;<pos:position pos:line="939" pos:column="27"/></expr_stmt>
        <goto pos:line="940" pos:column="9">goto <name pos:line="940" pos:column="14">FAILED<pos:position pos:line="940" pos:column="20"/></name>;<pos:position pos:line="940" pos:column="21"/></goto>
        }<pos:position pos:line="941" pos:column="10"/></block></then></if>
      }<pos:position pos:line="942" pos:column="8"/></block></then></if></elseif></if>

    <comment type="block" pos:line="944" pos:column="5">/* Handle updating of the required character. If the subpattern didn't
    set one, leave it as it was. Otherwise, update it for normal brackets of
    all kinds, forward assertions, and conditions with two branches. Don't
    update the literal count for forward assertions, however. If the bracket
    is followed by a quantifier with zero repeat, we have to back off. Hence
    the definition of prevreqchar and subcountlits outside the main loop so
    that they can be accessed for the back off. */</comment>

    <if pos:line="952" pos:column="5">if <condition pos:line="952" pos:column="8">(<expr><name pos:line="952" pos:column="9">subreqchar<pos:position pos:line="952" pos:column="19"/></name> <operator pos:line="952" pos:column="20">&gt;<pos:position pos:line="952" pos:column="24"/></operator> <literal type="number" pos:line="952" pos:column="22">0<pos:position pos:line="952" pos:column="23"/></literal> <operator pos:line="952" pos:column="24">&amp;&amp;<pos:position pos:line="952" pos:column="34"/></operator>
         <operator pos:line="953" pos:column="10">(<pos:position pos:line="953" pos:column="11"/></operator><name pos:line="953" pos:column="11">bravalue<pos:position pos:line="953" pos:column="19"/></name> <operator pos:line="953" pos:column="20">&gt;=<pos:position pos:line="953" pos:column="25"/></operator> <name pos:line="953" pos:column="23">OP_BRA<pos:position pos:line="953" pos:column="29"/></name> <operator pos:line="953" pos:column="30">||<pos:position pos:line="953" pos:column="32"/></operator> <name pos:line="953" pos:column="33">bravalue<pos:position pos:line="953" pos:column="41"/></name> <operator pos:line="953" pos:column="42">==<pos:position pos:line="953" pos:column="44"/></operator> <name pos:line="953" pos:column="45">OP_ONCE<pos:position pos:line="953" pos:column="52"/></name> <operator pos:line="953" pos:column="53">||<pos:position pos:line="953" pos:column="55"/></operator> <name pos:line="953" pos:column="56">bravalue<pos:position pos:line="953" pos:column="64"/></name> <operator pos:line="953" pos:column="65">==<pos:position pos:line="953" pos:column="67"/></operator> <name pos:line="953" pos:column="68">OP_ASSERT<pos:position pos:line="953" pos:column="77"/></name> <operator pos:line="953" pos:column="78">||<pos:position pos:line="953" pos:column="80"/></operator>
         <operator pos:line="954" pos:column="10">(<pos:position pos:line="954" pos:column="11"/></operator><name pos:line="954" pos:column="11">bravalue<pos:position pos:line="954" pos:column="19"/></name> <operator pos:line="954" pos:column="20">==<pos:position pos:line="954" pos:column="22"/></operator> <name pos:line="954" pos:column="23">OP_COND<pos:position pos:line="954" pos:column="30"/></name> <operator pos:line="954" pos:column="31">&amp;&amp;<pos:position pos:line="954" pos:column="41"/></operator> <name pos:line="954" pos:column="34">condcount<pos:position pos:line="954" pos:column="43"/></name> <operator pos:line="954" pos:column="44">==<pos:position pos:line="954" pos:column="46"/></operator> <literal type="number" pos:line="954" pos:column="47">2<pos:position pos:line="954" pos:column="48"/></literal><operator pos:line="954" pos:column="48">)<pos:position pos:line="954" pos:column="49"/></operator><operator pos:line="954" pos:column="49">)<pos:position pos:line="954" pos:column="50"/></operator></expr>)<pos:position pos:line="954" pos:column="51"/></condition><then pos:line="954" pos:column="51">
      <block pos:line="955" pos:column="7">{
      <expr_stmt><expr><name pos:line="956" pos:column="7">prevreqchar<pos:position pos:line="956" pos:column="18"/></name> <operator pos:line="956" pos:column="19">=<pos:position pos:line="956" pos:column="20"/></operator> <operator pos:line="956" pos:column="21">*<pos:position pos:line="956" pos:column="22"/></operator><name pos:line="956" pos:column="22">reqchar<pos:position pos:line="956" pos:column="29"/></name></expr>;<pos:position pos:line="956" pos:column="30"/></expr_stmt>
      <expr_stmt><expr><operator pos:line="957" pos:column="7">*<pos:position pos:line="957" pos:column="8"/></operator><name pos:line="957" pos:column="8">reqchar<pos:position pos:line="957" pos:column="15"/></name> <operator pos:line="957" pos:column="16">=<pos:position pos:line="957" pos:column="17"/></operator> <name pos:line="957" pos:column="18">subreqchar<pos:position pos:line="957" pos:column="28"/></name></expr>;<pos:position pos:line="957" pos:column="29"/></expr_stmt>
      <if pos:line="958" pos:column="7">if <condition pos:line="958" pos:column="10">(<expr><name pos:line="958" pos:column="11">bravalue<pos:position pos:line="958" pos:column="19"/></name> <operator pos:line="958" pos:column="20">!=<pos:position pos:line="958" pos:column="22"/></operator> <name pos:line="958" pos:column="23">OP_ASSERT<pos:position pos:line="958" pos:column="32"/></name></expr>)<pos:position pos:line="958" pos:column="33"/></condition><then pos:line="958" pos:column="33"> <block type="pseudo"><expr_stmt><expr><operator pos:line="958" pos:column="34">*<pos:position pos:line="958" pos:column="35"/></operator><name pos:line="958" pos:column="35">countlits<pos:position pos:line="958" pos:column="44"/></name> <operator pos:line="958" pos:column="45">+=<pos:position pos:line="958" pos:column="47"/></operator> <name pos:line="958" pos:column="48">subcountlits<pos:position pos:line="958" pos:column="60"/></name></expr>;<pos:position pos:line="958" pos:column="61"/></expr_stmt></block></then></if>
      }<pos:position pos:line="959" pos:column="8"/></block></then></if>

    <comment type="block" pos:line="961" pos:column="5">/* Now update the main code pointer to the end of the group. */</comment>

    <expr_stmt><expr><name pos:line="963" pos:column="5">code<pos:position pos:line="963" pos:column="9"/></name> <operator pos:line="963" pos:column="10">=<pos:position pos:line="963" pos:column="11"/></operator> <name pos:line="963" pos:column="12">tempcode<pos:position pos:line="963" pos:column="20"/></name></expr>;<pos:position pos:line="963" pos:column="21"/></expr_stmt>

    <comment type="block" pos:line="965" pos:column="5">/* Error if hit end of pattern */</comment>

    <if pos:line="967" pos:column="5">if <condition pos:line="967" pos:column="8">(<expr><operator pos:line="967" pos:column="9">*<pos:position pos:line="967" pos:column="10"/></operator><name pos:line="967" pos:column="10">ptr<pos:position pos:line="967" pos:column="13"/></name> <operator pos:line="967" pos:column="14">!=<pos:position pos:line="967" pos:column="16"/></operator> <literal type="char" pos:line="967" pos:column="17">')'<pos:position pos:line="967" pos:column="20"/></literal></expr>)<pos:position pos:line="967" pos:column="21"/></condition><then pos:line="967" pos:column="21">
      <block pos:line="968" pos:column="7">{
      <expr_stmt><expr><operator pos:line="969" pos:column="7">*<pos:position pos:line="969" pos:column="8"/></operator><name pos:line="969" pos:column="8">errorptr<pos:position pos:line="969" pos:column="16"/></name> <operator pos:line="969" pos:column="17">=<pos:position pos:line="969" pos:column="18"/></operator> <name pos:line="969" pos:column="19">ERR14<pos:position pos:line="969" pos:column="24"/></name></expr>;<pos:position pos:line="969" pos:column="25"/></expr_stmt>
      <goto pos:line="970" pos:column="7">goto <name pos:line="970" pos:column="12">FAILED<pos:position pos:line="970" pos:column="18"/></name>;<pos:position pos:line="970" pos:column="19"/></goto>
      }<pos:position pos:line="971" pos:column="8"/></block></then></if>
    <break pos:line="972" pos:column="5">break;<pos:position pos:line="972" pos:column="11"/></break>

    <comment type="block" pos:line="974" pos:column="5">/* Check \ for being a real metacharacter; if not, fall through and handle
    it as a data character at the start of a string. Escape items are checked
    for validity in the pre-compiling pass. */</comment>

    <case pos:line="978" pos:column="5">case <expr><literal type="char" pos:line="978" pos:column="10">'\\'<pos:position pos:line="978" pos:column="14"/></literal></expr>:<pos:position pos:line="978" pos:column="15"/></case>
    <expr_stmt><expr><name pos:line="979" pos:column="5">tempptr<pos:position pos:line="979" pos:column="12"/></name> <operator pos:line="979" pos:column="13">=<pos:position pos:line="979" pos:column="14"/></operator> <name pos:line="979" pos:column="15">ptr<pos:position pos:line="979" pos:column="18"/></name></expr>;<pos:position pos:line="979" pos:column="19"/></expr_stmt>
    <expr_stmt><expr><name pos:line="980" pos:column="5">c<pos:position pos:line="980" pos:column="6"/></name> <operator pos:line="980" pos:column="7">=<pos:position pos:line="980" pos:column="8"/></operator> <call><name pos:line="980" pos:column="9">check_escape<pos:position pos:line="980" pos:column="21"/></name><argument_list pos:line="980" pos:column="21">(<argument><expr><operator pos:line="980" pos:column="22">&amp;<pos:position pos:line="980" pos:column="27"/></operator><name pos:line="980" pos:column="23">ptr<pos:position pos:line="980" pos:column="26"/></name></expr></argument>, <argument><expr><name pos:line="980" pos:column="28">errorptr<pos:position pos:line="980" pos:column="36"/></name></expr></argument>, <argument><expr><operator pos:line="980" pos:column="38">*<pos:position pos:line="980" pos:column="39"/></operator><name pos:line="980" pos:column="39">brackets<pos:position pos:line="980" pos:column="47"/></name></expr></argument>, <argument><expr><name pos:line="980" pos:column="49">options<pos:position pos:line="980" pos:column="56"/></name></expr></argument>, <argument><expr><name pos:line="980" pos:column="58">FALSE<pos:position pos:line="980" pos:column="63"/></name></expr></argument>, <argument><expr><name pos:line="980" pos:column="65">cd<pos:position pos:line="980" pos:column="67"/></name></expr></argument>)<pos:position pos:line="980" pos:column="68"/></argument_list></call></expr>;<pos:position pos:line="980" pos:column="69"/></expr_stmt>

    <comment type="block" pos:line="982" pos:column="5">/* Handle metacharacters introduced by \. For ones like \d, the ESC_ values
    are arranged to be the negation of the corresponding OP_values. For the
    back references, the values are ESC_REF plus the reference number. Only
    back references and those types that consume a character may be repeated.
    We can test for values between ESC_b and ESC_Z for the latter; this may
    have to change if any new ones are ever created. */</comment>

    <if pos:line="989" pos:column="5">if <condition pos:line="989" pos:column="8">(<expr><name pos:line="989" pos:column="9">c<pos:position pos:line="989" pos:column="10"/></name> <operator pos:line="989" pos:column="11">&lt;<pos:position pos:line="989" pos:column="15"/></operator> <literal type="number" pos:line="989" pos:column="13">0<pos:position pos:line="989" pos:column="14"/></literal></expr>)<pos:position pos:line="989" pos:column="15"/></condition><then pos:line="989" pos:column="15">
      <block pos:line="990" pos:column="7">{
      <if pos:line="991" pos:column="7">if <condition pos:line="991" pos:column="10">(<expr><operator pos:line="991" pos:column="11">-<pos:position pos:line="991" pos:column="12"/></operator><name pos:line="991" pos:column="12">c<pos:position pos:line="991" pos:column="13"/></name> <operator pos:line="991" pos:column="14">&gt;=<pos:position pos:line="991" pos:column="19"/></operator> <name pos:line="991" pos:column="17">ESC_REF<pos:position pos:line="991" pos:column="24"/></name></expr>)<pos:position pos:line="991" pos:column="25"/></condition><then pos:line="991" pos:column="25">
        <block pos:line="992" pos:column="9">{
        <decl_stmt><decl><type><name pos:line="993" pos:column="9">int<pos:position pos:line="993" pos:column="12"/></name></type> <name pos:line="993" pos:column="13">number<pos:position pos:line="993" pos:column="19"/></name> <init pos:line="993" pos:column="20">= <expr><operator pos:line="993" pos:column="22">-<pos:position pos:line="993" pos:column="23"/></operator><name pos:line="993" pos:column="23">c<pos:position pos:line="993" pos:column="24"/></name> <operator pos:line="993" pos:column="25">-<pos:position pos:line="993" pos:column="26"/></operator> <name pos:line="993" pos:column="27">ESC_REF<pos:position pos:line="993" pos:column="34"/></name></expr></init></decl>;<pos:position pos:line="993" pos:column="35"/></decl_stmt>
        <expr_stmt><expr><name pos:line="994" pos:column="9">previous<pos:position pos:line="994" pos:column="17"/></name> <operator pos:line="994" pos:column="18">=<pos:position pos:line="994" pos:column="19"/></operator> <name pos:line="994" pos:column="20">code<pos:position pos:line="994" pos:column="24"/></name></expr>;<pos:position pos:line="994" pos:column="25"/></expr_stmt>
        <expr_stmt><expr><operator pos:line="995" pos:column="9">*<pos:position pos:line="995" pos:column="10"/></operator><name pos:line="995" pos:column="10">code<pos:position pos:line="995" pos:column="14"/></name><operator pos:line="995" pos:column="14">++<pos:position pos:line="995" pos:column="16"/></operator> <operator pos:line="995" pos:column="17">=<pos:position pos:line="995" pos:column="18"/></operator> <name pos:line="995" pos:column="19">OP_REF<pos:position pos:line="995" pos:column="25"/></name></expr>;<pos:position pos:line="995" pos:column="26"/></expr_stmt>
        <expr_stmt><expr><operator pos:line="996" pos:column="9">*<pos:position pos:line="996" pos:column="10"/></operator><name pos:line="996" pos:column="10">code<pos:position pos:line="996" pos:column="14"/></name><operator pos:line="996" pos:column="14">++<pos:position pos:line="996" pos:column="16"/></operator> <operator pos:line="996" pos:column="17">=<pos:position pos:line="996" pos:column="18"/></operator> <name pos:line="996" pos:column="19">number<pos:position pos:line="996" pos:column="25"/></name> <operator pos:line="996" pos:column="26">&gt;&gt;<pos:position pos:line="996" pos:column="31"/></operator> <literal type="number" pos:line="996" pos:column="29">8<pos:position pos:line="996" pos:column="30"/></literal></expr>;<pos:position pos:line="996" pos:column="31"/></expr_stmt>
        <expr_stmt><expr><operator pos:line="997" pos:column="9">*<pos:position pos:line="997" pos:column="10"/></operator><name pos:line="997" pos:column="10">code<pos:position pos:line="997" pos:column="14"/></name><operator pos:line="997" pos:column="14">++<pos:position pos:line="997" pos:column="16"/></operator> <operator pos:line="997" pos:column="17">=<pos:position pos:line="997" pos:column="18"/></operator> <name pos:line="997" pos:column="19">number<pos:position pos:line="997" pos:column="25"/></name> <operator pos:line="997" pos:column="26">&amp;<pos:position pos:line="997" pos:column="31"/></operator> <literal type="number" pos:line="997" pos:column="28">255<pos:position pos:line="997" pos:column="31"/></literal></expr>;<pos:position pos:line="997" pos:column="32"/></expr_stmt>
        }<pos:position pos:line="998" pos:column="10"/></block></then>
      <else pos:line="999" pos:column="7">else
        <block pos:line="1000" pos:column="9">{
        <expr_stmt><expr><name pos:line="1001" pos:column="9">previous<pos:position pos:line="1001" pos:column="17"/></name> <operator pos:line="1001" pos:column="18">=<pos:position pos:line="1001" pos:column="19"/></operator> <ternary><condition><expr><operator pos:line="1001" pos:column="20">(<pos:position pos:line="1001" pos:column="21"/></operator><operator pos:line="1001" pos:column="21">-<pos:position pos:line="1001" pos:column="22"/></operator><name pos:line="1001" pos:column="22">c<pos:position pos:line="1001" pos:column="23"/></name> <operator pos:line="1001" pos:column="24">&gt;<pos:position pos:line="1001" pos:column="28"/></operator> <name pos:line="1001" pos:column="26">ESC_b<pos:position pos:line="1001" pos:column="31"/></name> <operator pos:line="1001" pos:column="32">&amp;&amp;<pos:position pos:line="1001" pos:column="42"/></operator> <operator pos:line="1001" pos:column="35">-<pos:position pos:line="1001" pos:column="36"/></operator><name pos:line="1001" pos:column="36">c<pos:position pos:line="1001" pos:column="37"/></name> <operator pos:line="1001" pos:column="38">&lt;<pos:position pos:line="1001" pos:column="42"/></operator> <name pos:line="1001" pos:column="40">ESC_Z<pos:position pos:line="1001" pos:column="45"/></name><operator pos:line="1001" pos:column="45">)<pos:position pos:line="1001" pos:column="46"/></operator></expr>?<pos:position pos:line="1001" pos:column="47"/></condition><then pos:line="1001" pos:column="47"> <expr><name pos:line="1001" pos:column="48">code<pos:position pos:line="1001" pos:column="52"/></name></expr> <pos:position pos:line="1001" pos:column="53"/></then><else pos:line="1001" pos:column="53">: <expr><name pos:line="1001" pos:column="55">NULL<pos:position pos:line="1001" pos:column="59"/></name></expr></else></ternary></expr>;<pos:position pos:line="1001" pos:column="60"/></expr_stmt>
        <expr_stmt><expr><operator pos:line="1002" pos:column="9">*<pos:position pos:line="1002" pos:column="10"/></operator><name pos:line="1002" pos:column="10">code<pos:position pos:line="1002" pos:column="14"/></name><operator pos:line="1002" pos:column="14">++<pos:position pos:line="1002" pos:column="16"/></operator> <operator pos:line="1002" pos:column="17">=<pos:position pos:line="1002" pos:column="18"/></operator> <operator pos:line="1002" pos:column="19">-<pos:position pos:line="1002" pos:column="20"/></operator><name pos:line="1002" pos:column="20">c<pos:position pos:line="1002" pos:column="21"/></name></expr>;<pos:position pos:line="1002" pos:column="22"/></expr_stmt>
        }<pos:position pos:line="1003" pos:column="10"/></block></else></if>
      <continue pos:line="1004" pos:column="7">continue;<pos:position pos:line="1004" pos:column="16"/></continue>
      }<pos:position pos:line="1005" pos:column="8"/></block></then></if>

    <comment type="block" pos:line="1007" pos:column="5">/* Data character: reset and fall through */</comment>

    <expr_stmt><expr><name pos:line="1009" pos:column="5">ptr<pos:position pos:line="1009" pos:column="8"/></name> <operator pos:line="1009" pos:column="9">=<pos:position pos:line="1009" pos:column="10"/></operator> <name pos:line="1009" pos:column="11">tempptr<pos:position pos:line="1009" pos:column="18"/></name></expr>;<pos:position pos:line="1009" pos:column="19"/></expr_stmt>
    <expr_stmt><expr><name pos:line="1010" pos:column="5">c<pos:position pos:line="1010" pos:column="6"/></name> <operator pos:line="1010" pos:column="7">=<pos:position pos:line="1010" pos:column="8"/></operator> <literal type="char" pos:line="1010" pos:column="9">'\\'<pos:position pos:line="1010" pos:column="13"/></literal></expr>;<pos:position pos:line="1010" pos:column="14"/></expr_stmt>

    <comment type="block" pos:line="1012" pos:column="5">/* Handle a run of data characters until a metacharacter is encountered.
    The first character is guaranteed not to be whitespace or # when the
    extended flag is set. */</comment>

    <label><name pos:line="1016" pos:column="5">NORMAL_CHAR<pos:position pos:line="1016" pos:column="16"/></name>:<pos:position pos:line="1016" pos:column="17"/></label>
    <default pos:line="1017" pos:column="5">default:<pos:position pos:line="1017" pos:column="13"/></default>
    <expr_stmt><expr><name pos:line="1018" pos:column="5">previous<pos:position pos:line="1018" pos:column="13"/></name> <operator pos:line="1018" pos:column="14">=<pos:position pos:line="1018" pos:column="15"/></operator> <name pos:line="1018" pos:column="16">code<pos:position pos:line="1018" pos:column="20"/></name></expr>;<pos:position pos:line="1018" pos:column="21"/></expr_stmt>
    <expr_stmt><expr><operator pos:line="1019" pos:column="5">*<pos:position pos:line="1019" pos:column="6"/></operator><name pos:line="1019" pos:column="6">code<pos:position pos:line="1019" pos:column="10"/></name> <operator pos:line="1019" pos:column="11">=<pos:position pos:line="1019" pos:column="12"/></operator> <name pos:line="1019" pos:column="13">OP_CHARS<pos:position pos:line="1019" pos:column="21"/></name></expr>;<pos:position pos:line="1019" pos:column="22"/></expr_stmt>
    <expr_stmt><expr><name pos:line="1020" pos:column="5">code<pos:position pos:line="1020" pos:column="9"/></name> <operator pos:line="1020" pos:column="10">+=<pos:position pos:line="1020" pos:column="12"/></operator> <literal type="number" pos:line="1020" pos:column="13">2<pos:position pos:line="1020" pos:column="14"/></literal></expr>;<pos:position pos:line="1020" pos:column="15"/></expr_stmt>
    <expr_stmt><expr><name pos:line="1021" pos:column="5">length<pos:position pos:line="1021" pos:column="11"/></name> <operator pos:line="1021" pos:column="12">=<pos:position pos:line="1021" pos:column="13"/></operator> <literal type="number" pos:line="1021" pos:column="14">0<pos:position pos:line="1021" pos:column="15"/></literal></expr>;<pos:position pos:line="1021" pos:column="16"/></expr_stmt>

    <do pos:line="1023" pos:column="5">do
      <block pos:line="1024" pos:column="7">{
      <if pos:line="1025" pos:column="7">if <condition pos:line="1025" pos:column="10">(<expr><operator pos:line="1025" pos:column="11">(<pos:position pos:line="1025" pos:column="12"/></operator><name pos:line="1025" pos:column="12">options<pos:position pos:line="1025" pos:column="19"/></name> <operator pos:line="1025" pos:column="20">&amp;<pos:position pos:line="1025" pos:column="25"/></operator> <name pos:line="1025" pos:column="22">PCRE_EXTENDED<pos:position pos:line="1025" pos:column="35"/></name><operator pos:line="1025" pos:column="35">)<pos:position pos:line="1025" pos:column="36"/></operator> <operator pos:line="1025" pos:column="37">!=<pos:position pos:line="1025" pos:column="39"/></operator> <literal type="number" pos:line="1025" pos:column="40">0<pos:position pos:line="1025" pos:column="41"/></literal></expr>)<pos:position pos:line="1025" pos:column="42"/></condition><then pos:line="1025" pos:column="42">
        <block pos:line="1026" pos:column="9">{
        <if pos:line="1027" pos:column="9">if <condition pos:line="1027" pos:column="12">(<expr><operator pos:line="1027" pos:column="13">(<pos:position pos:line="1027" pos:column="14"/></operator><name><name pos:line="1027" pos:column="14">cd<pos:position pos:line="1027" pos:column="16"/></name><operator pos:line="1027" pos:column="16">-&gt;<pos:position pos:line="1027" pos:column="21"/></operator><name pos:line="1027" pos:column="18">ctypes<pos:position pos:line="1027" pos:column="24"/></name><index pos:line="1027" pos:column="24">[<expr><name pos:line="1027" pos:column="25">c<pos:position pos:line="1027" pos:column="26"/></name></expr>]<pos:position pos:line="1027" pos:column="27"/></index></name> <operator pos:line="1027" pos:column="28">&amp;<pos:position pos:line="1027" pos:column="33"/></operator> <name pos:line="1027" pos:column="30">ctype_space<pos:position pos:line="1027" pos:column="41"/></name><operator pos:line="1027" pos:column="41">)<pos:position pos:line="1027" pos:column="42"/></operator> <operator pos:line="1027" pos:column="43">!=<pos:position pos:line="1027" pos:column="45"/></operator> <literal type="number" pos:line="1027" pos:column="46">0<pos:position pos:line="1027" pos:column="47"/></literal></expr>)<pos:position pos:line="1027" pos:column="48"/></condition><then pos:line="1027" pos:column="48"> <block type="pseudo"><continue pos:line="1027" pos:column="49">continue;<pos:position pos:line="1027" pos:column="58"/></continue></block></then></if>
        <if pos:line="1028" pos:column="9">if <condition pos:line="1028" pos:column="12">(<expr><name pos:line="1028" pos:column="13">c<pos:position pos:line="1028" pos:column="14"/></name> <operator pos:line="1028" pos:column="15">==<pos:position pos:line="1028" pos:column="17"/></operator> <literal type="char" pos:line="1028" pos:column="18">'#'<pos:position pos:line="1028" pos:column="21"/></literal></expr>)<pos:position pos:line="1028" pos:column="22"/></condition><then pos:line="1028" pos:column="22">
          <block pos:line="1029" pos:column="11">{
          <comment type="block" pos:line="1030" pos:column="11">/* The space before the ; is to avoid a warning on a silly compiler
          on the Macintosh. */</comment>
          <while pos:line="1032" pos:column="11">while <condition pos:line="1032" pos:column="17">(<expr><operator pos:line="1032" pos:column="18">(<pos:position pos:line="1032" pos:column="19"/></operator><name pos:line="1032" pos:column="19">c<pos:position pos:line="1032" pos:column="20"/></name> <operator pos:line="1032" pos:column="21">=<pos:position pos:line="1032" pos:column="22"/></operator> <operator pos:line="1032" pos:column="23">*<pos:position pos:line="1032" pos:column="24"/></operator><operator pos:line="1032" pos:column="24">(<pos:position pos:line="1032" pos:column="25"/></operator><operator pos:line="1032" pos:column="25">++<pos:position pos:line="1032" pos:column="27"/></operator><name pos:line="1032" pos:column="27">ptr<pos:position pos:line="1032" pos:column="30"/></name><operator pos:line="1032" pos:column="30">)<pos:position pos:line="1032" pos:column="31"/></operator><operator pos:line="1032" pos:column="31">)<pos:position pos:line="1032" pos:column="32"/></operator> <operator pos:line="1032" pos:column="33">!=<pos:position pos:line="1032" pos:column="35"/></operator> <literal type="number" pos:line="1032" pos:column="36">0<pos:position pos:line="1032" pos:column="37"/></literal> <operator pos:line="1032" pos:column="38">&amp;&amp;<pos:position pos:line="1032" pos:column="48"/></operator> <name pos:line="1032" pos:column="41">c<pos:position pos:line="1032" pos:column="42"/></name> <operator pos:line="1032" pos:column="43">!=<pos:position pos:line="1032" pos:column="45"/></operator> <name pos:line="1032" pos:column="46">NEWLINE<pos:position pos:line="1032" pos:column="53"/></name></expr>)<pos:position pos:line="1032" pos:column="54"/></condition> <block type="pseudo"><empty_stmt pos:line="1032" pos:column="55">;<pos:position pos:line="1032" pos:column="56"/></empty_stmt></block></while>
          <if pos:line="1033" pos:column="11">if <condition pos:line="1033" pos:column="14">(<expr><name pos:line="1033" pos:column="15">c<pos:position pos:line="1033" pos:column="16"/></name> <operator pos:line="1033" pos:column="17">==<pos:position pos:line="1033" pos:column="19"/></operator> <literal type="number" pos:line="1033" pos:column="20">0<pos:position pos:line="1033" pos:column="21"/></literal></expr>)<pos:position pos:line="1033" pos:column="22"/></condition><then pos:line="1033" pos:column="22"> <block type="pseudo"><break pos:line="1033" pos:column="23">break;<pos:position pos:line="1033" pos:column="29"/></break></block></then></if>
          <continue pos:line="1034" pos:column="11">continue;<pos:position pos:line="1034" pos:column="20"/></continue>
          }<pos:position pos:line="1035" pos:column="12"/></block></then></if>
        }<pos:position pos:line="1036" pos:column="10"/></block></then></if>

      <comment type="block" pos:line="1038" pos:column="7">/* Backslash may introduce a data char or a metacharacter. Escaped items
      are checked for validity in the pre-compiling pass. Stop the string
      before a metaitem. */</comment>

      <if pos:line="1042" pos:column="7">if <condition pos:line="1042" pos:column="10">(<expr><name pos:line="1042" pos:column="11">c<pos:position pos:line="1042" pos:column="12"/></name> <operator pos:line="1042" pos:column="13">==<pos:position pos:line="1042" pos:column="15"/></operator> <literal type="char" pos:line="1042" pos:column="16">'\\'<pos:position pos:line="1042" pos:column="20"/></literal></expr>)<pos:position pos:line="1042" pos:column="21"/></condition><then pos:line="1042" pos:column="21">
        <block pos:line="1043" pos:column="9">{
        <expr_stmt><expr><name pos:line="1044" pos:column="9">tempptr<pos:position pos:line="1044" pos:column="16"/></name> <operator pos:line="1044" pos:column="17">=<pos:position pos:line="1044" pos:column="18"/></operator> <name pos:line="1044" pos:column="19">ptr<pos:position pos:line="1044" pos:column="22"/></name></expr>;<pos:position pos:line="1044" pos:column="23"/></expr_stmt>
        <expr_stmt><expr><name pos:line="1045" pos:column="9">c<pos:position pos:line="1045" pos:column="10"/></name> <operator pos:line="1045" pos:column="11">=<pos:position pos:line="1045" pos:column="12"/></operator> <call><name pos:line="1045" pos:column="13">check_escape<pos:position pos:line="1045" pos:column="25"/></name><argument_list pos:line="1045" pos:column="25">(<argument><expr><operator pos:line="1045" pos:column="26">&amp;<pos:position pos:line="1045" pos:column="31"/></operator><name pos:line="1045" pos:column="27">ptr<pos:position pos:line="1045" pos:column="30"/></name></expr></argument>, <argument><expr><name pos:line="1045" pos:column="32">errorptr<pos:position pos:line="1045" pos:column="40"/></name></expr></argument>, <argument><expr><operator pos:line="1045" pos:column="42">*<pos:position pos:line="1045" pos:column="43"/></operator><name pos:line="1045" pos:column="43">brackets<pos:position pos:line="1045" pos:column="51"/></name></expr></argument>, <argument><expr><name pos:line="1045" pos:column="53">options<pos:position pos:line="1045" pos:column="60"/></name></expr></argument>, <argument><expr><name pos:line="1045" pos:column="62">FALSE<pos:position pos:line="1045" pos:column="67"/></name></expr></argument>, <argument><expr><name pos:line="1045" pos:column="69">cd<pos:position pos:line="1045" pos:column="71"/></name></expr></argument>)<pos:position pos:line="1045" pos:column="72"/></argument_list></call></expr>;<pos:position pos:line="1045" pos:column="73"/></expr_stmt>
        <if pos:line="1046" pos:column="9">if <condition pos:line="1046" pos:column="12">(<expr><name pos:line="1046" pos:column="13">c<pos:position pos:line="1046" pos:column="14"/></name> <operator pos:line="1046" pos:column="15">&lt;<pos:position pos:line="1046" pos:column="19"/></operator> <literal type="number" pos:line="1046" pos:column="17">0<pos:position pos:line="1046" pos:column="18"/></literal></expr>)<pos:position pos:line="1046" pos:column="19"/></condition><then pos:line="1046" pos:column="19"> <block pos:line="1046" pos:column="20">{ <expr_stmt><expr><name pos:line="1046" pos:column="22">ptr<pos:position pos:line="1046" pos:column="25"/></name> <operator pos:line="1046" pos:column="26">=<pos:position pos:line="1046" pos:column="27"/></operator> <name pos:line="1046" pos:column="28">tempptr<pos:position pos:line="1046" pos:column="35"/></name></expr>;<pos:position pos:line="1046" pos:column="36"/></expr_stmt> <break pos:line="1046" pos:column="37">break;<pos:position pos:line="1046" pos:column="43"/></break> }<pos:position pos:line="1046" pos:column="45"/></block></then></if>

        <comment type="block" pos:line="1048" pos:column="9">/* If a character is &gt; 127 in UTF-8 mode, we have to turn it into
        two or more characters in the UTF-8 encoding. */</comment>

<cpp:ifdef pos:line="1051" pos:column="1">#<cpp:directive pos:line="1051" pos:column="2">ifdef<pos:position pos:line="1051" pos:column="7"/></cpp:directive> <name pos:line="1051" pos:column="8">SUPPORT_UTF8<pos:position pos:line="1051" pos:column="20"/></name></cpp:ifdef>
        <if pos:line="1052" pos:column="9">if <condition pos:line="1052" pos:column="12">(<expr><name pos:line="1052" pos:column="13">c<pos:position pos:line="1052" pos:column="14"/></name> <operator pos:line="1052" pos:column="15">&gt;<pos:position pos:line="1052" pos:column="19"/></operator> <literal type="number" pos:line="1052" pos:column="17">127<pos:position pos:line="1052" pos:column="20"/></literal> <operator pos:line="1052" pos:column="21">&amp;&amp;<pos:position pos:line="1052" pos:column="31"/></operator> <operator pos:line="1052" pos:column="24">(<pos:position pos:line="1052" pos:column="25"/></operator><name pos:line="1052" pos:column="25">options<pos:position pos:line="1052" pos:column="32"/></name> <operator pos:line="1052" pos:column="33">&amp;<pos:position pos:line="1052" pos:column="38"/></operator> <name pos:line="1052" pos:column="35">PCRE_UTF8<pos:position pos:line="1052" pos:column="44"/></name><operator pos:line="1052" pos:column="44">)<pos:position pos:line="1052" pos:column="45"/></operator> <operator pos:line="1052" pos:column="46">!=<pos:position pos:line="1052" pos:column="48"/></operator> <literal type="number" pos:line="1052" pos:column="49">0<pos:position pos:line="1052" pos:column="50"/></literal></expr>)<pos:position pos:line="1052" pos:column="51"/></condition><then pos:line="1052" pos:column="51">
          <block pos:line="1053" pos:column="11">{
          <decl_stmt><decl><type><name pos:line="1054" pos:column="11">uschar<pos:position pos:line="1054" pos:column="17"/></name></type> <name><name pos:line="1054" pos:column="18">buffer<pos:position pos:line="1054" pos:column="24"/></name><index pos:line="1054" pos:column="24">[<expr><literal type="number" pos:line="1054" pos:column="25">8<pos:position pos:line="1054" pos:column="26"/></literal></expr>]<pos:position pos:line="1054" pos:column="27"/></index></name></decl>;<pos:position pos:line="1054" pos:column="28"/></decl_stmt>
          <decl_stmt><decl><type><name pos:line="1055" pos:column="11">int<pos:position pos:line="1055" pos:column="14"/></name></type> <name pos:line="1055" pos:column="15">len<pos:position pos:line="1055" pos:column="18"/></name> <init pos:line="1055" pos:column="19">= <expr><call><name pos:line="1055" pos:column="21">ord2utf8<pos:position pos:line="1055" pos:column="29"/></name><argument_list pos:line="1055" pos:column="29">(<argument><expr><name pos:line="1055" pos:column="30">c<pos:position pos:line="1055" pos:column="31"/></name></expr></argument>, <argument><expr><name pos:line="1055" pos:column="33">buffer<pos:position pos:line="1055" pos:column="39"/></name></expr></argument>)<pos:position pos:line="1055" pos:column="40"/></argument_list></call></expr></init></decl>;<pos:position pos:line="1055" pos:column="41"/></decl_stmt>
          <for pos:line="1056" pos:column="11">for <control pos:line="1056" pos:column="15">(<init><expr><name pos:line="1056" pos:column="16">c<pos:position pos:line="1056" pos:column="17"/></name> <operator pos:line="1056" pos:column="18">=<pos:position pos:line="1056" pos:column="19"/></operator> <literal type="number" pos:line="1056" pos:column="20">0<pos:position pos:line="1056" pos:column="21"/></literal></expr>;<pos:position pos:line="1056" pos:column="22"/></init> <condition><expr><name pos:line="1056" pos:column="23">c<pos:position pos:line="1056" pos:column="24"/></name> <operator pos:line="1056" pos:column="25">&lt;<pos:position pos:line="1056" pos:column="29"/></operator> <name pos:line="1056" pos:column="27">len<pos:position pos:line="1056" pos:column="30"/></name></expr>;<pos:position pos:line="1056" pos:column="31"/></condition> <incr><expr><name pos:line="1056" pos:column="32">c<pos:position pos:line="1056" pos:column="33"/></name><operator pos:line="1056" pos:column="33">++<pos:position pos:line="1056" pos:column="35"/></operator></expr></incr>)<pos:position pos:line="1056" pos:column="36"/></control> <block type="pseudo"><expr_stmt><expr><operator pos:line="1056" pos:column="37">*<pos:position pos:line="1056" pos:column="38"/></operator><name pos:line="1056" pos:column="38">code<pos:position pos:line="1056" pos:column="42"/></name><operator pos:line="1056" pos:column="42">++<pos:position pos:line="1056" pos:column="44"/></operator> <operator pos:line="1056" pos:column="45">=<pos:position pos:line="1056" pos:column="46"/></operator> <name><name pos:line="1056" pos:column="47">buffer<pos:position pos:line="1056" pos:column="53"/></name><index pos:line="1056" pos:column="53">[<expr><name pos:line="1056" pos:column="54">c<pos:position pos:line="1056" pos:column="55"/></name></expr>]<pos:position pos:line="1056" pos:column="56"/></index></name></expr>;<pos:position pos:line="1056" pos:column="57"/></expr_stmt></block></for>
          <expr_stmt><expr><name pos:line="1057" pos:column="11">length<pos:position pos:line="1057" pos:column="17"/></name> <operator pos:line="1057" pos:column="18">+=<pos:position pos:line="1057" pos:column="20"/></operator> <name pos:line="1057" pos:column="21">len<pos:position pos:line="1057" pos:column="24"/></name></expr>;<pos:position pos:line="1057" pos:column="25"/></expr_stmt>
          <continue pos:line="1058" pos:column="11">continue;<pos:position pos:line="1058" pos:column="20"/></continue>
          }<pos:position pos:line="1059" pos:column="12"/></block></then></if>
<cpp:endif pos:line="1060" pos:column="1">#<cpp:directive pos:line="1060" pos:column="2">endif<pos:position pos:line="1060" pos:column="7"/></cpp:directive></cpp:endif>
        }<pos:position pos:line="1061" pos:column="10"/></block></then></if>

      <comment type="block" pos:line="1063" pos:column="7">/* Ordinary character or single-char escape */</comment>

      <expr_stmt><expr><operator pos:line="1065" pos:column="7">*<pos:position pos:line="1065" pos:column="8"/></operator><name pos:line="1065" pos:column="8">code<pos:position pos:line="1065" pos:column="12"/></name><operator pos:line="1065" pos:column="12">++<pos:position pos:line="1065" pos:column="14"/></operator> <operator pos:line="1065" pos:column="15">=<pos:position pos:line="1065" pos:column="16"/></operator> <name pos:line="1065" pos:column="17">c<pos:position pos:line="1065" pos:column="18"/></name></expr>;<pos:position pos:line="1065" pos:column="19"/></expr_stmt>
      <expr_stmt><expr><name pos:line="1066" pos:column="7">length<pos:position pos:line="1066" pos:column="13"/></name><operator pos:line="1066" pos:column="13">++<pos:position pos:line="1066" pos:column="15"/></operator></expr>;<pos:position pos:line="1066" pos:column="16"/></expr_stmt>
      }<pos:position pos:line="1067" pos:column="8"/></block>

    <comment type="block" pos:line="1069" pos:column="5">/* This "while" is the end of the "do" above. */</comment>

    while <condition pos:line="1071" pos:column="11">(<expr><name pos:line="1071" pos:column="12">length<pos:position pos:line="1071" pos:column="18"/></name> <operator pos:line="1071" pos:column="19">&lt;<pos:position pos:line="1071" pos:column="23"/></operator> <name pos:line="1071" pos:column="21">MAXLIT<pos:position pos:line="1071" pos:column="27"/></name> <operator pos:line="1071" pos:column="28">&amp;&amp;<pos:position pos:line="1071" pos:column="38"/></operator> <operator pos:line="1071" pos:column="31">(<pos:position pos:line="1071" pos:column="32"/></operator><name><name pos:line="1071" pos:column="32">cd<pos:position pos:line="1071" pos:column="34"/></name><operator pos:line="1071" pos:column="34">-&gt;<pos:position pos:line="1071" pos:column="39"/></operator><name pos:line="1071" pos:column="36">ctypes<pos:position pos:line="1071" pos:column="42"/></name><index pos:line="1071" pos:column="42">[<expr><name pos:line="1071" pos:column="43">c<pos:position pos:line="1071" pos:column="44"/></name> <operator pos:line="1071" pos:column="45">=<pos:position pos:line="1071" pos:column="46"/></operator> <operator pos:line="1071" pos:column="47">*<pos:position pos:line="1071" pos:column="48"/></operator><operator pos:line="1071" pos:column="48">(<pos:position pos:line="1071" pos:column="49"/></operator><operator pos:line="1071" pos:column="49">++<pos:position pos:line="1071" pos:column="51"/></operator><name pos:line="1071" pos:column="51">ptr<pos:position pos:line="1071" pos:column="54"/></name><operator pos:line="1071" pos:column="54">)<pos:position pos:line="1071" pos:column="55"/></operator></expr>]<pos:position pos:line="1071" pos:column="56"/></index></name> <operator pos:line="1071" pos:column="57">&amp;<pos:position pos:line="1071" pos:column="62"/></operator> <name pos:line="1071" pos:column="59">ctype_meta<pos:position pos:line="1071" pos:column="69"/></name><operator pos:line="1071" pos:column="69">)<pos:position pos:line="1071" pos:column="70"/></operator> <operator pos:line="1071" pos:column="71">==<pos:position pos:line="1071" pos:column="73"/></operator> <literal type="number" pos:line="1071" pos:column="74">0<pos:position pos:line="1071" pos:column="75"/></literal></expr>)<pos:position pos:line="1071" pos:column="76"/></condition>;<pos:position pos:line="1071" pos:column="77"/></do>

    <comment type="block" pos:line="1073" pos:column="5">/* Update the last character and the count of literals */</comment>

    <expr_stmt><expr><name pos:line="1075" pos:column="5">prevreqchar<pos:position pos:line="1075" pos:column="16"/></name> <operator pos:line="1075" pos:column="17">=<pos:position pos:line="1075" pos:column="18"/></operator> <ternary><condition><expr><operator pos:line="1075" pos:column="19">(<pos:position pos:line="1075" pos:column="20"/></operator><name pos:line="1075" pos:column="20">length<pos:position pos:line="1075" pos:column="26"/></name> <operator pos:line="1075" pos:column="27">&gt;<pos:position pos:line="1075" pos:column="31"/></operator> <literal type="number" pos:line="1075" pos:column="29">1<pos:position pos:line="1075" pos:column="30"/></literal><operator pos:line="1075" pos:column="30">)<pos:position pos:line="1075" pos:column="31"/></operator></expr>?<pos:position pos:line="1075" pos:column="32"/></condition><then pos:line="1075" pos:column="32"> <expr><name><name pos:line="1075" pos:column="33">code<pos:position pos:line="1075" pos:column="37"/></name><index pos:line="1075" pos:column="37">[<expr><operator pos:line="1075" pos:column="38">-<pos:position pos:line="1075" pos:column="39"/></operator><literal type="number" pos:line="1075" pos:column="39">2<pos:position pos:line="1075" pos:column="40"/></literal></expr>]<pos:position pos:line="1075" pos:column="41"/></index></name></expr> <pos:position pos:line="1075" pos:column="42"/></then><else pos:line="1075" pos:column="42">: <expr><operator pos:line="1075" pos:column="44">*<pos:position pos:line="1075" pos:column="45"/></operator><name pos:line="1075" pos:column="45">reqchar<pos:position pos:line="1075" pos:column="52"/></name></expr></else></ternary></expr>;<pos:position pos:line="1075" pos:column="53"/></expr_stmt>
    <expr_stmt><expr><operator pos:line="1076" pos:column="5">*<pos:position pos:line="1076" pos:column="6"/></operator><name pos:line="1076" pos:column="6">reqchar<pos:position pos:line="1076" pos:column="13"/></name> <operator pos:line="1076" pos:column="14">=<pos:position pos:line="1076" pos:column="15"/></operator> <name><name pos:line="1076" pos:column="16">code<pos:position pos:line="1076" pos:column="20"/></name><index pos:line="1076" pos:column="20">[<expr><operator pos:line="1076" pos:column="21">-<pos:position pos:line="1076" pos:column="22"/></operator><literal type="number" pos:line="1076" pos:column="22">1<pos:position pos:line="1076" pos:column="23"/></literal></expr>]<pos:position pos:line="1076" pos:column="24"/></index></name></expr>;<pos:position pos:line="1076" pos:column="25"/></expr_stmt>
    <expr_stmt><expr><operator pos:line="1077" pos:column="5">*<pos:position pos:line="1077" pos:column="6"/></operator><name pos:line="1077" pos:column="6">countlits<pos:position pos:line="1077" pos:column="15"/></name> <operator pos:line="1077" pos:column="16">+=<pos:position pos:line="1077" pos:column="18"/></operator> <name pos:line="1077" pos:column="19">length<pos:position pos:line="1077" pos:column="25"/></name></expr>;<pos:position pos:line="1077" pos:column="26"/></expr_stmt>

    <comment type="block" pos:line="1079" pos:column="5">/* Compute the length and set it in the data vector, and advance to
    the next state. */</comment>

    <expr_stmt><expr><name><name pos:line="1082" pos:column="5">previous<pos:position pos:line="1082" pos:column="13"/></name><index pos:line="1082" pos:column="13">[<expr><literal type="number" pos:line="1082" pos:column="14">1<pos:position pos:line="1082" pos:column="15"/></literal></expr>]<pos:position pos:line="1082" pos:column="16"/></index></name> <operator pos:line="1082" pos:column="17">=<pos:position pos:line="1082" pos:column="18"/></operator> <name pos:line="1082" pos:column="19">length<pos:position pos:line="1082" pos:column="25"/></name></expr>;<pos:position pos:line="1082" pos:column="26"/></expr_stmt>
    <if pos:line="1083" pos:column="5">if <condition pos:line="1083" pos:column="8">(<expr><name pos:line="1083" pos:column="9">length<pos:position pos:line="1083" pos:column="15"/></name> <operator pos:line="1083" pos:column="16">&lt;<pos:position pos:line="1083" pos:column="20"/></operator> <name pos:line="1083" pos:column="18">MAXLIT<pos:position pos:line="1083" pos:column="24"/></name></expr>)<pos:position pos:line="1083" pos:column="25"/></condition><then pos:line="1083" pos:column="25"> <block type="pseudo"><expr_stmt><expr><name pos:line="1083" pos:column="26">ptr<pos:position pos:line="1083" pos:column="29"/></name><operator pos:line="1083" pos:column="29">--<pos:position pos:line="1083" pos:column="31"/></operator></expr>;<pos:position pos:line="1083" pos:column="32"/></expr_stmt></block></then></if>
    <break pos:line="1084" pos:column="5">break;<pos:position pos:line="1084" pos:column="11"/></break>
    }<pos:position pos:line="1085" pos:column="6"/></block></switch>
  }<pos:position pos:line="1086" pos:column="4"/></block></for>                   <comment type="block" pos:line="1086" pos:column="23">/* end of big loop */</comment>

<comment type="block" pos:line="1088" pos:column="1">/* Control never reaches here by falling through, only by a goto for all the
error states. Pass back the position in the pattern so that it can be displayed
to the user for diagnosing the error. */</comment>

<label><name pos:line="1092" pos:column="1">FAILED<pos:position pos:line="1092" pos:column="7"/></name>:<pos:position pos:line="1092" pos:column="8"/></label>
<expr_stmt><expr><operator pos:line="1093" pos:column="1">*<pos:position pos:line="1093" pos:column="2"/></operator><name pos:line="1093" pos:column="2">ptrptr<pos:position pos:line="1093" pos:column="8"/></name> <operator pos:line="1093" pos:column="9">=<pos:position pos:line="1093" pos:column="10"/></operator> <name pos:line="1093" pos:column="11">ptr<pos:position pos:line="1093" pos:column="14"/></name></expr>;<pos:position pos:line="1093" pos:column="15"/></expr_stmt>
<return pos:line="1094" pos:column="1">return <expr><name pos:line="1094" pos:column="8">FALSE<pos:position pos:line="1094" pos:column="13"/></name></expr>;<pos:position pos:line="1094" pos:column="14"/></return>
}<pos:position pos:line="1095" pos:column="2"/></block></function></unit>

<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/httpd/gumtree/httpd_repos_function_678_httpd-2.2.19.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">BOOL<pos:position pos:line="1" pos:column="12"/></name></type> <name pos:line="1" pos:column="13">ssl_expr_eval_comp<pos:position pos:line="1" pos:column="31"/></name><parameter_list pos:line="1" pos:column="31">(<parameter><decl><type><name pos:line="1" pos:column="32">request_rec<pos:position pos:line="1" pos:column="43"/></name> <modifier pos:line="1" pos:column="44">*<pos:position pos:line="1" pos:column="45"/></modifier></type><name pos:line="1" pos:column="45">r<pos:position pos:line="1" pos:column="46"/></name></decl></parameter>, <parameter><decl><type><name pos:line="1" pos:column="48">ssl_expr<pos:position pos:line="1" pos:column="56"/></name> <modifier pos:line="1" pos:column="57">*<pos:position pos:line="1" pos:column="58"/></modifier></type><name pos:line="1" pos:column="58">node<pos:position pos:line="1" pos:column="62"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="63"/></parameter_list>
<block pos:line="2" pos:column="1">{
    <switch pos:line="3" pos:column="5">switch <condition pos:line="3" pos:column="12">(<expr><name><name pos:line="3" pos:column="13">node<pos:position pos:line="3" pos:column="17"/></name><operator pos:line="3" pos:column="17">-&gt;<pos:position pos:line="3" pos:column="22"/></operator><name pos:line="3" pos:column="19">node_op<pos:position pos:line="3" pos:column="26"/></name></name></expr>)<pos:position pos:line="3" pos:column="27"/></condition> <block pos:line="3" pos:column="28">{
        <case pos:line="4" pos:column="9">case <expr><name pos:line="4" pos:column="14">op_EQ<pos:position pos:line="4" pos:column="19"/></name></expr>:<pos:position pos:line="4" pos:column="20"/></case> <block pos:line="4" pos:column="21">{
            <decl_stmt><decl><type><name pos:line="5" pos:column="13">ssl_expr<pos:position pos:line="5" pos:column="21"/></name> <modifier pos:line="5" pos:column="22">*<pos:position pos:line="5" pos:column="23"/></modifier></type><name pos:line="5" pos:column="23">e1<pos:position pos:line="5" pos:column="25"/></name> <init pos:line="5" pos:column="26">= <expr><operator pos:line="5" pos:column="28">(<pos:position pos:line="5" pos:column="29"/></operator><name pos:line="5" pos:column="29">ssl_expr<pos:position pos:line="5" pos:column="37"/></name> <operator pos:line="5" pos:column="38">*<pos:position pos:line="5" pos:column="39"/></operator><operator pos:line="5" pos:column="39">)<pos:position pos:line="5" pos:column="40"/></operator><name><name pos:line="5" pos:column="40">node<pos:position pos:line="5" pos:column="44"/></name><operator pos:line="5" pos:column="44">-&gt;<pos:position pos:line="5" pos:column="49"/></operator><name pos:line="5" pos:column="46">node_arg1<pos:position pos:line="5" pos:column="55"/></name></name></expr></init></decl>;<pos:position pos:line="5" pos:column="56"/></decl_stmt>
            <decl_stmt><decl><type><name pos:line="6" pos:column="13">ssl_expr<pos:position pos:line="6" pos:column="21"/></name> <modifier pos:line="6" pos:column="22">*<pos:position pos:line="6" pos:column="23"/></modifier></type><name pos:line="6" pos:column="23">e2<pos:position pos:line="6" pos:column="25"/></name> <init pos:line="6" pos:column="26">= <expr><operator pos:line="6" pos:column="28">(<pos:position pos:line="6" pos:column="29"/></operator><name pos:line="6" pos:column="29">ssl_expr<pos:position pos:line="6" pos:column="37"/></name> <operator pos:line="6" pos:column="38">*<pos:position pos:line="6" pos:column="39"/></operator><operator pos:line="6" pos:column="39">)<pos:position pos:line="6" pos:column="40"/></operator><name><name pos:line="6" pos:column="40">node<pos:position pos:line="6" pos:column="44"/></name><operator pos:line="6" pos:column="44">-&gt;<pos:position pos:line="6" pos:column="49"/></operator><name pos:line="6" pos:column="46">node_arg2<pos:position pos:line="6" pos:column="55"/></name></name></expr></init></decl>;<pos:position pos:line="6" pos:column="56"/></decl_stmt>
            <return pos:line="7" pos:column="13">return <expr><operator pos:line="7" pos:column="20">(<pos:position pos:line="7" pos:column="21"/></operator><call><name pos:line="7" pos:column="21">strcmp<pos:position pos:line="7" pos:column="27"/></name><argument_list pos:line="7" pos:column="27">(<argument><expr><call><name pos:line="7" pos:column="28">ssl_expr_eval_word<pos:position pos:line="7" pos:column="46"/></name><argument_list pos:line="7" pos:column="46">(<argument><expr><name pos:line="7" pos:column="47">r<pos:position pos:line="7" pos:column="48"/></name></expr></argument>, <argument><expr><name pos:line="7" pos:column="50">e1<pos:position pos:line="7" pos:column="52"/></name></expr></argument>)<pos:position pos:line="7" pos:column="53"/></argument_list></call></expr></argument>, <argument><expr><call><name pos:line="7" pos:column="55">ssl_expr_eval_word<pos:position pos:line="7" pos:column="73"/></name><argument_list pos:line="7" pos:column="73">(<argument><expr><name pos:line="7" pos:column="74">r<pos:position pos:line="7" pos:column="75"/></name></expr></argument>, <argument><expr><name pos:line="7" pos:column="77">e2<pos:position pos:line="7" pos:column="79"/></name></expr></argument>)<pos:position pos:line="7" pos:column="80"/></argument_list></call></expr></argument>)<pos:position pos:line="7" pos:column="81"/></argument_list></call> <operator pos:line="7" pos:column="82">==<pos:position pos:line="7" pos:column="84"/></operator> <literal type="number" pos:line="7" pos:column="85">0<pos:position pos:line="7" pos:column="86"/></literal><operator pos:line="7" pos:column="86">)<pos:position pos:line="7" pos:column="87"/></operator></expr>;<pos:position pos:line="7" pos:column="88"/></return>
        }<pos:position pos:line="8" pos:column="10"/></block>
        <case pos:line="9" pos:column="9">case <expr><name pos:line="9" pos:column="14">op_NE<pos:position pos:line="9" pos:column="19"/></name></expr>:<pos:position pos:line="9" pos:column="20"/></case> <block pos:line="9" pos:column="21">{
            <decl_stmt><decl><type><name pos:line="10" pos:column="13">ssl_expr<pos:position pos:line="10" pos:column="21"/></name> <modifier pos:line="10" pos:column="22">*<pos:position pos:line="10" pos:column="23"/></modifier></type><name pos:line="10" pos:column="23">e1<pos:position pos:line="10" pos:column="25"/></name> <init pos:line="10" pos:column="26">= <expr><operator pos:line="10" pos:column="28">(<pos:position pos:line="10" pos:column="29"/></operator><name pos:line="10" pos:column="29">ssl_expr<pos:position pos:line="10" pos:column="37"/></name> <operator pos:line="10" pos:column="38">*<pos:position pos:line="10" pos:column="39"/></operator><operator pos:line="10" pos:column="39">)<pos:position pos:line="10" pos:column="40"/></operator><name><name pos:line="10" pos:column="40">node<pos:position pos:line="10" pos:column="44"/></name><operator pos:line="10" pos:column="44">-&gt;<pos:position pos:line="10" pos:column="49"/></operator><name pos:line="10" pos:column="46">node_arg1<pos:position pos:line="10" pos:column="55"/></name></name></expr></init></decl>;<pos:position pos:line="10" pos:column="56"/></decl_stmt>
            <decl_stmt><decl><type><name pos:line="11" pos:column="13">ssl_expr<pos:position pos:line="11" pos:column="21"/></name> <modifier pos:line="11" pos:column="22">*<pos:position pos:line="11" pos:column="23"/></modifier></type><name pos:line="11" pos:column="23">e2<pos:position pos:line="11" pos:column="25"/></name> <init pos:line="11" pos:column="26">= <expr><operator pos:line="11" pos:column="28">(<pos:position pos:line="11" pos:column="29"/></operator><name pos:line="11" pos:column="29">ssl_expr<pos:position pos:line="11" pos:column="37"/></name> <operator pos:line="11" pos:column="38">*<pos:position pos:line="11" pos:column="39"/></operator><operator pos:line="11" pos:column="39">)<pos:position pos:line="11" pos:column="40"/></operator><name><name pos:line="11" pos:column="40">node<pos:position pos:line="11" pos:column="44"/></name><operator pos:line="11" pos:column="44">-&gt;<pos:position pos:line="11" pos:column="49"/></operator><name pos:line="11" pos:column="46">node_arg2<pos:position pos:line="11" pos:column="55"/></name></name></expr></init></decl>;<pos:position pos:line="11" pos:column="56"/></decl_stmt>
            <return pos:line="12" pos:column="13">return <expr><operator pos:line="12" pos:column="20">(<pos:position pos:line="12" pos:column="21"/></operator><call><name pos:line="12" pos:column="21">strcmp<pos:position pos:line="12" pos:column="27"/></name><argument_list pos:line="12" pos:column="27">(<argument><expr><call><name pos:line="12" pos:column="28">ssl_expr_eval_word<pos:position pos:line="12" pos:column="46"/></name><argument_list pos:line="12" pos:column="46">(<argument><expr><name pos:line="12" pos:column="47">r<pos:position pos:line="12" pos:column="48"/></name></expr></argument>, <argument><expr><name pos:line="12" pos:column="50">e1<pos:position pos:line="12" pos:column="52"/></name></expr></argument>)<pos:position pos:line="12" pos:column="53"/></argument_list></call></expr></argument>, <argument><expr><call><name pos:line="12" pos:column="55">ssl_expr_eval_word<pos:position pos:line="12" pos:column="73"/></name><argument_list pos:line="12" pos:column="73">(<argument><expr><name pos:line="12" pos:column="74">r<pos:position pos:line="12" pos:column="75"/></name></expr></argument>, <argument><expr><name pos:line="12" pos:column="77">e2<pos:position pos:line="12" pos:column="79"/></name></expr></argument>)<pos:position pos:line="12" pos:column="80"/></argument_list></call></expr></argument>)<pos:position pos:line="12" pos:column="81"/></argument_list></call> <operator pos:line="12" pos:column="82">!=<pos:position pos:line="12" pos:column="84"/></operator> <literal type="number" pos:line="12" pos:column="85">0<pos:position pos:line="12" pos:column="86"/></literal><operator pos:line="12" pos:column="86">)<pos:position pos:line="12" pos:column="87"/></operator></expr>;<pos:position pos:line="12" pos:column="88"/></return>
        }<pos:position pos:line="13" pos:column="10"/></block>
        <case pos:line="14" pos:column="9">case <expr><name pos:line="14" pos:column="14">op_LT<pos:position pos:line="14" pos:column="19"/></name></expr>:<pos:position pos:line="14" pos:column="20"/></case> <block pos:line="14" pos:column="21">{
            <decl_stmt><decl><type><name pos:line="15" pos:column="13">ssl_expr<pos:position pos:line="15" pos:column="21"/></name> <modifier pos:line="15" pos:column="22">*<pos:position pos:line="15" pos:column="23"/></modifier></type><name pos:line="15" pos:column="23">e1<pos:position pos:line="15" pos:column="25"/></name> <init pos:line="15" pos:column="26">= <expr><operator pos:line="15" pos:column="28">(<pos:position pos:line="15" pos:column="29"/></operator><name pos:line="15" pos:column="29">ssl_expr<pos:position pos:line="15" pos:column="37"/></name> <operator pos:line="15" pos:column="38">*<pos:position pos:line="15" pos:column="39"/></operator><operator pos:line="15" pos:column="39">)<pos:position pos:line="15" pos:column="40"/></operator><name><name pos:line="15" pos:column="40">node<pos:position pos:line="15" pos:column="44"/></name><operator pos:line="15" pos:column="44">-&gt;<pos:position pos:line="15" pos:column="49"/></operator><name pos:line="15" pos:column="46">node_arg1<pos:position pos:line="15" pos:column="55"/></name></name></expr></init></decl>;<pos:position pos:line="15" pos:column="56"/></decl_stmt>
            <decl_stmt><decl><type><name pos:line="16" pos:column="13">ssl_expr<pos:position pos:line="16" pos:column="21"/></name> <modifier pos:line="16" pos:column="22">*<pos:position pos:line="16" pos:column="23"/></modifier></type><name pos:line="16" pos:column="23">e2<pos:position pos:line="16" pos:column="25"/></name> <init pos:line="16" pos:column="26">= <expr><operator pos:line="16" pos:column="28">(<pos:position pos:line="16" pos:column="29"/></operator><name pos:line="16" pos:column="29">ssl_expr<pos:position pos:line="16" pos:column="37"/></name> <operator pos:line="16" pos:column="38">*<pos:position pos:line="16" pos:column="39"/></operator><operator pos:line="16" pos:column="39">)<pos:position pos:line="16" pos:column="40"/></operator><name><name pos:line="16" pos:column="40">node<pos:position pos:line="16" pos:column="44"/></name><operator pos:line="16" pos:column="44">-&gt;<pos:position pos:line="16" pos:column="49"/></operator><name pos:line="16" pos:column="46">node_arg2<pos:position pos:line="16" pos:column="55"/></name></name></expr></init></decl>;<pos:position pos:line="16" pos:column="56"/></decl_stmt>
            <return pos:line="17" pos:column="13">return <expr><operator pos:line="17" pos:column="20">(<pos:position pos:line="17" pos:column="21"/></operator><call><name pos:line="17" pos:column="21">ssl_expr_eval_strcmplex<pos:position pos:line="17" pos:column="44"/></name><argument_list pos:line="17" pos:column="44">(<argument><expr><call><name pos:line="17" pos:column="45">ssl_expr_eval_word<pos:position pos:line="17" pos:column="63"/></name><argument_list pos:line="17" pos:column="63">(<argument><expr><name pos:line="17" pos:column="64">r<pos:position pos:line="17" pos:column="65"/></name></expr></argument>, <argument><expr><name pos:line="17" pos:column="67">e1<pos:position pos:line="17" pos:column="69"/></name></expr></argument>)<pos:position pos:line="17" pos:column="70"/></argument_list></call></expr></argument>, <argument><expr><call><name pos:line="17" pos:column="72">ssl_expr_eval_word<pos:position pos:line="17" pos:column="90"/></name><argument_list pos:line="17" pos:column="90">(<argument><expr><name pos:line="17" pos:column="91">r<pos:position pos:line="17" pos:column="92"/></name></expr></argument>, <argument><expr><name pos:line="17" pos:column="94">e2<pos:position pos:line="17" pos:column="96"/></name></expr></argument>)<pos:position pos:line="17" pos:column="97"/></argument_list></call></expr></argument>)<pos:position pos:line="17" pos:column="98"/></argument_list></call> <operator pos:line="17" pos:column="99">&lt;<pos:position pos:line="17" pos:column="103"/></operator>  <literal type="number" pos:line="17" pos:column="102">0<pos:position pos:line="17" pos:column="103"/></literal><operator pos:line="17" pos:column="103">)<pos:position pos:line="17" pos:column="104"/></operator></expr>;<pos:position pos:line="17" pos:column="105"/></return>
        }<pos:position pos:line="18" pos:column="10"/></block>
        <case pos:line="19" pos:column="9">case <expr><name pos:line="19" pos:column="14">op_LE<pos:position pos:line="19" pos:column="19"/></name></expr>:<pos:position pos:line="19" pos:column="20"/></case> <block pos:line="19" pos:column="21">{
            <decl_stmt><decl><type><name pos:line="20" pos:column="13">ssl_expr<pos:position pos:line="20" pos:column="21"/></name> <modifier pos:line="20" pos:column="22">*<pos:position pos:line="20" pos:column="23"/></modifier></type><name pos:line="20" pos:column="23">e1<pos:position pos:line="20" pos:column="25"/></name> <init pos:line="20" pos:column="26">= <expr><operator pos:line="20" pos:column="28">(<pos:position pos:line="20" pos:column="29"/></operator><name pos:line="20" pos:column="29">ssl_expr<pos:position pos:line="20" pos:column="37"/></name> <operator pos:line="20" pos:column="38">*<pos:position pos:line="20" pos:column="39"/></operator><operator pos:line="20" pos:column="39">)<pos:position pos:line="20" pos:column="40"/></operator><name><name pos:line="20" pos:column="40">node<pos:position pos:line="20" pos:column="44"/></name><operator pos:line="20" pos:column="44">-&gt;<pos:position pos:line="20" pos:column="49"/></operator><name pos:line="20" pos:column="46">node_arg1<pos:position pos:line="20" pos:column="55"/></name></name></expr></init></decl>;<pos:position pos:line="20" pos:column="56"/></decl_stmt>
            <decl_stmt><decl><type><name pos:line="21" pos:column="13">ssl_expr<pos:position pos:line="21" pos:column="21"/></name> <modifier pos:line="21" pos:column="22">*<pos:position pos:line="21" pos:column="23"/></modifier></type><name pos:line="21" pos:column="23">e2<pos:position pos:line="21" pos:column="25"/></name> <init pos:line="21" pos:column="26">= <expr><operator pos:line="21" pos:column="28">(<pos:position pos:line="21" pos:column="29"/></operator><name pos:line="21" pos:column="29">ssl_expr<pos:position pos:line="21" pos:column="37"/></name> <operator pos:line="21" pos:column="38">*<pos:position pos:line="21" pos:column="39"/></operator><operator pos:line="21" pos:column="39">)<pos:position pos:line="21" pos:column="40"/></operator><name><name pos:line="21" pos:column="40">node<pos:position pos:line="21" pos:column="44"/></name><operator pos:line="21" pos:column="44">-&gt;<pos:position pos:line="21" pos:column="49"/></operator><name pos:line="21" pos:column="46">node_arg2<pos:position pos:line="21" pos:column="55"/></name></name></expr></init></decl>;<pos:position pos:line="21" pos:column="56"/></decl_stmt>
            <return pos:line="22" pos:column="13">return <expr><operator pos:line="22" pos:column="20">(<pos:position pos:line="22" pos:column="21"/></operator><call><name pos:line="22" pos:column="21">ssl_expr_eval_strcmplex<pos:position pos:line="22" pos:column="44"/></name><argument_list pos:line="22" pos:column="44">(<argument><expr><call><name pos:line="22" pos:column="45">ssl_expr_eval_word<pos:position pos:line="22" pos:column="63"/></name><argument_list pos:line="22" pos:column="63">(<argument><expr><name pos:line="22" pos:column="64">r<pos:position pos:line="22" pos:column="65"/></name></expr></argument>, <argument><expr><name pos:line="22" pos:column="67">e1<pos:position pos:line="22" pos:column="69"/></name></expr></argument>)<pos:position pos:line="22" pos:column="70"/></argument_list></call></expr></argument>, <argument><expr><call><name pos:line="22" pos:column="72">ssl_expr_eval_word<pos:position pos:line="22" pos:column="90"/></name><argument_list pos:line="22" pos:column="90">(<argument><expr><name pos:line="22" pos:column="91">r<pos:position pos:line="22" pos:column="92"/></name></expr></argument>, <argument><expr><name pos:line="22" pos:column="94">e2<pos:position pos:line="22" pos:column="96"/></name></expr></argument>)<pos:position pos:line="22" pos:column="97"/></argument_list></call></expr></argument>)<pos:position pos:line="22" pos:column="98"/></argument_list></call> <operator pos:line="22" pos:column="99">&lt;=<pos:position pos:line="22" pos:column="104"/></operator> <literal type="number" pos:line="22" pos:column="102">0<pos:position pos:line="22" pos:column="103"/></literal><operator pos:line="22" pos:column="103">)<pos:position pos:line="22" pos:column="104"/></operator></expr>;<pos:position pos:line="22" pos:column="105"/></return>
        }<pos:position pos:line="23" pos:column="10"/></block>
        <case pos:line="24" pos:column="9">case <expr><name pos:line="24" pos:column="14">op_GT<pos:position pos:line="24" pos:column="19"/></name></expr>:<pos:position pos:line="24" pos:column="20"/></case> <block pos:line="24" pos:column="21">{
            <decl_stmt><decl><type><name pos:line="25" pos:column="13">ssl_expr<pos:position pos:line="25" pos:column="21"/></name> <modifier pos:line="25" pos:column="22">*<pos:position pos:line="25" pos:column="23"/></modifier></type><name pos:line="25" pos:column="23">e1<pos:position pos:line="25" pos:column="25"/></name> <init pos:line="25" pos:column="26">= <expr><operator pos:line="25" pos:column="28">(<pos:position pos:line="25" pos:column="29"/></operator><name pos:line="25" pos:column="29">ssl_expr<pos:position pos:line="25" pos:column="37"/></name> <operator pos:line="25" pos:column="38">*<pos:position pos:line="25" pos:column="39"/></operator><operator pos:line="25" pos:column="39">)<pos:position pos:line="25" pos:column="40"/></operator><name><name pos:line="25" pos:column="40">node<pos:position pos:line="25" pos:column="44"/></name><operator pos:line="25" pos:column="44">-&gt;<pos:position pos:line="25" pos:column="49"/></operator><name pos:line="25" pos:column="46">node_arg1<pos:position pos:line="25" pos:column="55"/></name></name></expr></init></decl>;<pos:position pos:line="25" pos:column="56"/></decl_stmt>
            <decl_stmt><decl><type><name pos:line="26" pos:column="13">ssl_expr<pos:position pos:line="26" pos:column="21"/></name> <modifier pos:line="26" pos:column="22">*<pos:position pos:line="26" pos:column="23"/></modifier></type><name pos:line="26" pos:column="23">e2<pos:position pos:line="26" pos:column="25"/></name> <init pos:line="26" pos:column="26">= <expr><operator pos:line="26" pos:column="28">(<pos:position pos:line="26" pos:column="29"/></operator><name pos:line="26" pos:column="29">ssl_expr<pos:position pos:line="26" pos:column="37"/></name> <operator pos:line="26" pos:column="38">*<pos:position pos:line="26" pos:column="39"/></operator><operator pos:line="26" pos:column="39">)<pos:position pos:line="26" pos:column="40"/></operator><name><name pos:line="26" pos:column="40">node<pos:position pos:line="26" pos:column="44"/></name><operator pos:line="26" pos:column="44">-&gt;<pos:position pos:line="26" pos:column="49"/></operator><name pos:line="26" pos:column="46">node_arg2<pos:position pos:line="26" pos:column="55"/></name></name></expr></init></decl>;<pos:position pos:line="26" pos:column="56"/></decl_stmt>
            <return pos:line="27" pos:column="13">return <expr><operator pos:line="27" pos:column="20">(<pos:position pos:line="27" pos:column="21"/></operator><call><name pos:line="27" pos:column="21">ssl_expr_eval_strcmplex<pos:position pos:line="27" pos:column="44"/></name><argument_list pos:line="27" pos:column="44">(<argument><expr><call><name pos:line="27" pos:column="45">ssl_expr_eval_word<pos:position pos:line="27" pos:column="63"/></name><argument_list pos:line="27" pos:column="63">(<argument><expr><name pos:line="27" pos:column="64">r<pos:position pos:line="27" pos:column="65"/></name></expr></argument>, <argument><expr><name pos:line="27" pos:column="67">e1<pos:position pos:line="27" pos:column="69"/></name></expr></argument>)<pos:position pos:line="27" pos:column="70"/></argument_list></call></expr></argument>, <argument><expr><call><name pos:line="27" pos:column="72">ssl_expr_eval_word<pos:position pos:line="27" pos:column="90"/></name><argument_list pos:line="27" pos:column="90">(<argument><expr><name pos:line="27" pos:column="91">r<pos:position pos:line="27" pos:column="92"/></name></expr></argument>, <argument><expr><name pos:line="27" pos:column="94">e2<pos:position pos:line="27" pos:column="96"/></name></expr></argument>)<pos:position pos:line="27" pos:column="97"/></argument_list></call></expr></argument>)<pos:position pos:line="27" pos:column="98"/></argument_list></call> <operator pos:line="27" pos:column="99">&gt;<pos:position pos:line="27" pos:column="103"/></operator>  <literal type="number" pos:line="27" pos:column="102">0<pos:position pos:line="27" pos:column="103"/></literal><operator pos:line="27" pos:column="103">)<pos:position pos:line="27" pos:column="104"/></operator></expr>;<pos:position pos:line="27" pos:column="105"/></return>
        }<pos:position pos:line="28" pos:column="10"/></block>
        <case pos:line="29" pos:column="9">case <expr><name pos:line="29" pos:column="14">op_GE<pos:position pos:line="29" pos:column="19"/></name></expr>:<pos:position pos:line="29" pos:column="20"/></case> <block pos:line="29" pos:column="21">{
            <decl_stmt><decl><type><name pos:line="30" pos:column="13">ssl_expr<pos:position pos:line="30" pos:column="21"/></name> <modifier pos:line="30" pos:column="22">*<pos:position pos:line="30" pos:column="23"/></modifier></type><name pos:line="30" pos:column="23">e1<pos:position pos:line="30" pos:column="25"/></name> <init pos:line="30" pos:column="26">= <expr><operator pos:line="30" pos:column="28">(<pos:position pos:line="30" pos:column="29"/></operator><name pos:line="30" pos:column="29">ssl_expr<pos:position pos:line="30" pos:column="37"/></name> <operator pos:line="30" pos:column="38">*<pos:position pos:line="30" pos:column="39"/></operator><operator pos:line="30" pos:column="39">)<pos:position pos:line="30" pos:column="40"/></operator><name><name pos:line="30" pos:column="40">node<pos:position pos:line="30" pos:column="44"/></name><operator pos:line="30" pos:column="44">-&gt;<pos:position pos:line="30" pos:column="49"/></operator><name pos:line="30" pos:column="46">node_arg1<pos:position pos:line="30" pos:column="55"/></name></name></expr></init></decl>;<pos:position pos:line="30" pos:column="56"/></decl_stmt>
            <decl_stmt><decl><type><name pos:line="31" pos:column="13">ssl_expr<pos:position pos:line="31" pos:column="21"/></name> <modifier pos:line="31" pos:column="22">*<pos:position pos:line="31" pos:column="23"/></modifier></type><name pos:line="31" pos:column="23">e2<pos:position pos:line="31" pos:column="25"/></name> <init pos:line="31" pos:column="26">= <expr><operator pos:line="31" pos:column="28">(<pos:position pos:line="31" pos:column="29"/></operator><name pos:line="31" pos:column="29">ssl_expr<pos:position pos:line="31" pos:column="37"/></name> <operator pos:line="31" pos:column="38">*<pos:position pos:line="31" pos:column="39"/></operator><operator pos:line="31" pos:column="39">)<pos:position pos:line="31" pos:column="40"/></operator><name><name pos:line="31" pos:column="40">node<pos:position pos:line="31" pos:column="44"/></name><operator pos:line="31" pos:column="44">-&gt;<pos:position pos:line="31" pos:column="49"/></operator><name pos:line="31" pos:column="46">node_arg2<pos:position pos:line="31" pos:column="55"/></name></name></expr></init></decl>;<pos:position pos:line="31" pos:column="56"/></decl_stmt>
            <return pos:line="32" pos:column="13">return <expr><operator pos:line="32" pos:column="20">(<pos:position pos:line="32" pos:column="21"/></operator><call><name pos:line="32" pos:column="21">ssl_expr_eval_strcmplex<pos:position pos:line="32" pos:column="44"/></name><argument_list pos:line="32" pos:column="44">(<argument><expr><call><name pos:line="32" pos:column="45">ssl_expr_eval_word<pos:position pos:line="32" pos:column="63"/></name><argument_list pos:line="32" pos:column="63">(<argument><expr><name pos:line="32" pos:column="64">r<pos:position pos:line="32" pos:column="65"/></name></expr></argument>, <argument><expr><name pos:line="32" pos:column="67">e1<pos:position pos:line="32" pos:column="69"/></name></expr></argument>)<pos:position pos:line="32" pos:column="70"/></argument_list></call></expr></argument>, <argument><expr><call><name pos:line="32" pos:column="72">ssl_expr_eval_word<pos:position pos:line="32" pos:column="90"/></name><argument_list pos:line="32" pos:column="90">(<argument><expr><name pos:line="32" pos:column="91">r<pos:position pos:line="32" pos:column="92"/></name></expr></argument>, <argument><expr><name pos:line="32" pos:column="94">e2<pos:position pos:line="32" pos:column="96"/></name></expr></argument>)<pos:position pos:line="32" pos:column="97"/></argument_list></call></expr></argument>)<pos:position pos:line="32" pos:column="98"/></argument_list></call> <operator pos:line="32" pos:column="99">&gt;=<pos:position pos:line="32" pos:column="104"/></operator> <literal type="number" pos:line="32" pos:column="102">0<pos:position pos:line="32" pos:column="103"/></literal><operator pos:line="32" pos:column="103">)<pos:position pos:line="32" pos:column="104"/></operator></expr>;<pos:position pos:line="32" pos:column="105"/></return>
        }<pos:position pos:line="33" pos:column="10"/></block>
        <case pos:line="34" pos:column="9">case <expr><name pos:line="34" pos:column="14">op_IN<pos:position pos:line="34" pos:column="19"/></name></expr>:<pos:position pos:line="34" pos:column="20"/></case> <block pos:line="34" pos:column="21">{
            <decl_stmt><decl><type><name pos:line="35" pos:column="13">ssl_expr<pos:position pos:line="35" pos:column="21"/></name> <modifier pos:line="35" pos:column="22">*<pos:position pos:line="35" pos:column="23"/></modifier></type><name pos:line="35" pos:column="23">e1<pos:position pos:line="35" pos:column="25"/></name> <init pos:line="35" pos:column="26">= <expr><operator pos:line="35" pos:column="28">(<pos:position pos:line="35" pos:column="29"/></operator><name pos:line="35" pos:column="29">ssl_expr<pos:position pos:line="35" pos:column="37"/></name> <operator pos:line="35" pos:column="38">*<pos:position pos:line="35" pos:column="39"/></operator><operator pos:line="35" pos:column="39">)<pos:position pos:line="35" pos:column="40"/></operator><name><name pos:line="35" pos:column="40">node<pos:position pos:line="35" pos:column="44"/></name><operator pos:line="35" pos:column="44">-&gt;<pos:position pos:line="35" pos:column="49"/></operator><name pos:line="35" pos:column="46">node_arg1<pos:position pos:line="35" pos:column="55"/></name></name></expr></init></decl>;<pos:position pos:line="35" pos:column="56"/></decl_stmt>
            <decl_stmt><decl><type><name pos:line="36" pos:column="13">ssl_expr<pos:position pos:line="36" pos:column="21"/></name> <modifier pos:line="36" pos:column="22">*<pos:position pos:line="36" pos:column="23"/></modifier></type><name pos:line="36" pos:column="23">e2<pos:position pos:line="36" pos:column="25"/></name> <init pos:line="36" pos:column="26">= <expr><operator pos:line="36" pos:column="28">(<pos:position pos:line="36" pos:column="29"/></operator><name pos:line="36" pos:column="29">ssl_expr<pos:position pos:line="36" pos:column="37"/></name> <operator pos:line="36" pos:column="38">*<pos:position pos:line="36" pos:column="39"/></operator><operator pos:line="36" pos:column="39">)<pos:position pos:line="36" pos:column="40"/></operator><name><name pos:line="36" pos:column="40">node<pos:position pos:line="36" pos:column="44"/></name><operator pos:line="36" pos:column="44">-&gt;<pos:position pos:line="36" pos:column="49"/></operator><name pos:line="36" pos:column="46">node_arg2<pos:position pos:line="36" pos:column="55"/></name></name></expr></init></decl>;<pos:position pos:line="36" pos:column="56"/></decl_stmt>
            <decl_stmt><decl><type><name pos:line="37" pos:column="13">ssl_expr<pos:position pos:line="37" pos:column="21"/></name> <modifier pos:line="37" pos:column="22">*<pos:position pos:line="37" pos:column="23"/></modifier></type><name pos:line="37" pos:column="23">e3<pos:position pos:line="37" pos:column="25"/></name></decl>;<pos:position pos:line="37" pos:column="26"/></decl_stmt>
            <decl_stmt><decl><type><name pos:line="38" pos:column="13">char<pos:position pos:line="38" pos:column="17"/></name> <modifier pos:line="38" pos:column="18">*<pos:position pos:line="38" pos:column="19"/></modifier></type><name pos:line="38" pos:column="19">w1<pos:position pos:line="38" pos:column="21"/></name> <init pos:line="38" pos:column="22">= <expr><call><name pos:line="38" pos:column="24">ssl_expr_eval_word<pos:position pos:line="38" pos:column="42"/></name><argument_list pos:line="38" pos:column="42">(<argument><expr><name pos:line="38" pos:column="43">r<pos:position pos:line="38" pos:column="44"/></name></expr></argument>, <argument><expr><name pos:line="38" pos:column="46">e1<pos:position pos:line="38" pos:column="48"/></name></expr></argument>)<pos:position pos:line="38" pos:column="49"/></argument_list></call></expr></init></decl>;<pos:position pos:line="38" pos:column="50"/></decl_stmt>
            <decl_stmt><decl><type><name pos:line="39" pos:column="13">BOOL<pos:position pos:line="39" pos:column="17"/></name></type> <name pos:line="39" pos:column="18">found<pos:position pos:line="39" pos:column="23"/></name> <init pos:line="39" pos:column="24">= <expr><name pos:line="39" pos:column="26">FALSE<pos:position pos:line="39" pos:column="31"/></name></expr></init></decl>;<pos:position pos:line="39" pos:column="32"/></decl_stmt>
            <do pos:line="40" pos:column="13">do <block pos:line="40" pos:column="16">{
                <decl_stmt><decl><type><name pos:line="41" pos:column="17">ssl_expr_node_op<pos:position pos:line="41" pos:column="33"/></name></type> <name pos:line="41" pos:column="34">op<pos:position pos:line="41" pos:column="36"/></name> <init pos:line="41" pos:column="37">= <expr><name><name pos:line="41" pos:column="39">e2<pos:position pos:line="41" pos:column="41"/></name><operator pos:line="41" pos:column="41">-&gt;<pos:position pos:line="41" pos:column="46"/></operator><name pos:line="41" pos:column="43">node_op<pos:position pos:line="41" pos:column="50"/></name></name></expr></init></decl>;<pos:position pos:line="41" pos:column="51"/></decl_stmt>
                <expr_stmt><expr><name pos:line="42" pos:column="17">e3<pos:position pos:line="42" pos:column="19"/></name> <operator pos:line="42" pos:column="20">=<pos:position pos:line="42" pos:column="21"/></operator> <operator pos:line="42" pos:column="22">(<pos:position pos:line="42" pos:column="23"/></operator><name pos:line="42" pos:column="23">ssl_expr<pos:position pos:line="42" pos:column="31"/></name> <operator pos:line="42" pos:column="32">*<pos:position pos:line="42" pos:column="33"/></operator><operator pos:line="42" pos:column="33">)<pos:position pos:line="42" pos:column="34"/></operator><name><name pos:line="42" pos:column="34">e2<pos:position pos:line="42" pos:column="36"/></name><operator pos:line="42" pos:column="36">-&gt;<pos:position pos:line="42" pos:column="41"/></operator><name pos:line="42" pos:column="38">node_arg1<pos:position pos:line="42" pos:column="47"/></name></name></expr>;<pos:position pos:line="42" pos:column="48"/></expr_stmt>
                <expr_stmt><expr><name pos:line="43" pos:column="17">e2<pos:position pos:line="43" pos:column="19"/></name> <operator pos:line="43" pos:column="20">=<pos:position pos:line="43" pos:column="21"/></operator> <operator pos:line="43" pos:column="22">(<pos:position pos:line="43" pos:column="23"/></operator><name pos:line="43" pos:column="23">ssl_expr<pos:position pos:line="43" pos:column="31"/></name> <operator pos:line="43" pos:column="32">*<pos:position pos:line="43" pos:column="33"/></operator><operator pos:line="43" pos:column="33">)<pos:position pos:line="43" pos:column="34"/></operator><name><name pos:line="43" pos:column="34">e2<pos:position pos:line="43" pos:column="36"/></name><operator pos:line="43" pos:column="36">-&gt;<pos:position pos:line="43" pos:column="41"/></operator><name pos:line="43" pos:column="38">node_arg2<pos:position pos:line="43" pos:column="47"/></name></name></expr>;<pos:position pos:line="43" pos:column="48"/></expr_stmt>

                <if pos:line="45" pos:column="17">if <condition pos:line="45" pos:column="20">(<expr><name pos:line="45" pos:column="21">op<pos:position pos:line="45" pos:column="23"/></name> <operator pos:line="45" pos:column="24">==<pos:position pos:line="45" pos:column="26"/></operator> <name pos:line="45" pos:column="27">op_OidListElement<pos:position pos:line="45" pos:column="44"/></name></expr>)<pos:position pos:line="45" pos:column="45"/></condition><then pos:line="45" pos:column="45"> <block pos:line="45" pos:column="46">{
                    <decl_stmt><decl><type><name pos:line="46" pos:column="21">char<pos:position pos:line="46" pos:column="25"/></name> <modifier pos:line="46" pos:column="26">*<pos:position pos:line="46" pos:column="27"/></modifier></type><name pos:line="46" pos:column="27">w3<pos:position pos:line="46" pos:column="29"/></name> <init pos:line="46" pos:column="30">= <expr><call><name pos:line="46" pos:column="32">ssl_expr_eval_word<pos:position pos:line="46" pos:column="50"/></name><argument_list pos:line="46" pos:column="50">(<argument><expr><name pos:line="46" pos:column="51">r<pos:position pos:line="46" pos:column="52"/></name></expr></argument>, <argument><expr><name pos:line="46" pos:column="54">e3<pos:position pos:line="46" pos:column="56"/></name></expr></argument>)<pos:position pos:line="46" pos:column="57"/></argument_list></call></expr></init></decl>;<pos:position pos:line="46" pos:column="58"/></decl_stmt>

                    <expr_stmt><expr><name pos:line="48" pos:column="21">found<pos:position pos:line="48" pos:column="26"/></name> <operator pos:line="48" pos:column="27">=<pos:position pos:line="48" pos:column="28"/></operator> <call><name pos:line="48" pos:column="29">ssl_expr_eval_oid<pos:position pos:line="48" pos:column="46"/></name><argument_list pos:line="48" pos:column="46">(<argument><expr><name pos:line="48" pos:column="47">r<pos:position pos:line="48" pos:column="48"/></name></expr></argument>, <argument><expr><name pos:line="48" pos:column="50">w1<pos:position pos:line="48" pos:column="52"/></name></expr></argument>, <argument><expr><name pos:line="48" pos:column="54">w3<pos:position pos:line="48" pos:column="56"/></name></expr></argument>)<pos:position pos:line="48" pos:column="57"/></argument_list></call></expr>;<pos:position pos:line="48" pos:column="58"/></expr_stmt>

                    <comment type="block" pos:line="50" pos:column="21">/* There will be no more nodes on the list, so the result is authoritative */</comment>
                    <break pos:line="51" pos:column="21">break;<pos:position pos:line="51" pos:column="27"/></break>
                }<pos:position pos:line="52" pos:column="18"/></block></then></if>

                <if pos:line="54" pos:column="17">if <condition pos:line="54" pos:column="20">(<expr><call><name pos:line="54" pos:column="21">strcmp<pos:position pos:line="54" pos:column="27"/></name><argument_list pos:line="54" pos:column="27">(<argument><expr><name pos:line="54" pos:column="28">w1<pos:position pos:line="54" pos:column="30"/></name></expr></argument>, <argument><expr><call><name pos:line="54" pos:column="32">ssl_expr_eval_word<pos:position pos:line="54" pos:column="50"/></name><argument_list pos:line="54" pos:column="50">(<argument><expr><name pos:line="54" pos:column="51">r<pos:position pos:line="54" pos:column="52"/></name></expr></argument>, <argument><expr><name pos:line="54" pos:column="54">e3<pos:position pos:line="54" pos:column="56"/></name></expr></argument>)<pos:position pos:line="54" pos:column="57"/></argument_list></call></expr></argument>)<pos:position pos:line="54" pos:column="58"/></argument_list></call> <operator pos:line="54" pos:column="59">==<pos:position pos:line="54" pos:column="61"/></operator> <literal type="number" pos:line="54" pos:column="62">0<pos:position pos:line="54" pos:column="63"/></literal></expr>)<pos:position pos:line="54" pos:column="64"/></condition><then pos:line="54" pos:column="64"> <block pos:line="54" pos:column="65">{
                    <expr_stmt><expr><name pos:line="55" pos:column="21">found<pos:position pos:line="55" pos:column="26"/></name> <operator pos:line="55" pos:column="27">=<pos:position pos:line="55" pos:column="28"/></operator> <name pos:line="55" pos:column="29">TRUE<pos:position pos:line="55" pos:column="33"/></name></expr>;<pos:position pos:line="55" pos:column="34"/></expr_stmt>
                    <break pos:line="56" pos:column="21">break;<pos:position pos:line="56" pos:column="27"/></break>
                }<pos:position pos:line="57" pos:column="18"/></block></then></if>
            }<pos:position pos:line="58" pos:column="14"/></block> while <condition pos:line="58" pos:column="21">(<expr><name pos:line="58" pos:column="22">e2<pos:position pos:line="58" pos:column="24"/></name> <operator pos:line="58" pos:column="25">!=<pos:position pos:line="58" pos:column="27"/></operator> <name pos:line="58" pos:column="28">NULL<pos:position pos:line="58" pos:column="32"/></name></expr>)<pos:position pos:line="58" pos:column="33"/></condition>;<pos:position pos:line="58" pos:column="34"/></do>
            <return pos:line="59" pos:column="13">return <expr><name pos:line="59" pos:column="20">found<pos:position pos:line="59" pos:column="25"/></name></expr>;<pos:position pos:line="59" pos:column="26"/></return>
        }<pos:position pos:line="60" pos:column="10"/></block>
        <case pos:line="61" pos:column="9">case <expr><name pos:line="61" pos:column="14">op_REG<pos:position pos:line="61" pos:column="20"/></name></expr>:<pos:position pos:line="61" pos:column="21"/></case> <block pos:line="61" pos:column="22">{
            <decl_stmt><decl><type><name pos:line="62" pos:column="13">ssl_expr<pos:position pos:line="62" pos:column="21"/></name> <modifier pos:line="62" pos:column="22">*<pos:position pos:line="62" pos:column="23"/></modifier></type><name pos:line="62" pos:column="23">e1<pos:position pos:line="62" pos:column="25"/></name></decl>;<pos:position pos:line="62" pos:column="26"/></decl_stmt>
            <decl_stmt><decl><type><name pos:line="63" pos:column="13">ssl_expr<pos:position pos:line="63" pos:column="21"/></name> <modifier pos:line="63" pos:column="22">*<pos:position pos:line="63" pos:column="23"/></modifier></type><name pos:line="63" pos:column="23">e2<pos:position pos:line="63" pos:column="25"/></name></decl>;<pos:position pos:line="63" pos:column="26"/></decl_stmt>
            <decl_stmt><decl><type><name pos:line="64" pos:column="13">char<pos:position pos:line="64" pos:column="17"/></name> <modifier pos:line="64" pos:column="18">*<pos:position pos:line="64" pos:column="19"/></modifier></type><name pos:line="64" pos:column="19">word<pos:position pos:line="64" pos:column="23"/></name></decl>;<pos:position pos:line="64" pos:column="24"/></decl_stmt>
            <decl_stmt><decl><type><name pos:line="65" pos:column="13">ap_regex_t<pos:position pos:line="65" pos:column="23"/></name> <modifier pos:line="65" pos:column="24">*<pos:position pos:line="65" pos:column="25"/></modifier></type><name pos:line="65" pos:column="25">regex<pos:position pos:line="65" pos:column="30"/></name></decl>;<pos:position pos:line="65" pos:column="31"/></decl_stmt>

            <expr_stmt><expr><name pos:line="67" pos:column="13">e1<pos:position pos:line="67" pos:column="15"/></name> <operator pos:line="67" pos:column="16">=<pos:position pos:line="67" pos:column="17"/></operator> <operator pos:line="67" pos:column="18">(<pos:position pos:line="67" pos:column="19"/></operator><name pos:line="67" pos:column="19">ssl_expr<pos:position pos:line="67" pos:column="27"/></name> <operator pos:line="67" pos:column="28">*<pos:position pos:line="67" pos:column="29"/></operator><operator pos:line="67" pos:column="29">)<pos:position pos:line="67" pos:column="30"/></operator><name><name pos:line="67" pos:column="30">node<pos:position pos:line="67" pos:column="34"/></name><operator pos:line="67" pos:column="34">-&gt;<pos:position pos:line="67" pos:column="39"/></operator><name pos:line="67" pos:column="36">node_arg1<pos:position pos:line="67" pos:column="45"/></name></name></expr>;<pos:position pos:line="67" pos:column="46"/></expr_stmt>
            <expr_stmt><expr><name pos:line="68" pos:column="13">e2<pos:position pos:line="68" pos:column="15"/></name> <operator pos:line="68" pos:column="16">=<pos:position pos:line="68" pos:column="17"/></operator> <operator pos:line="68" pos:column="18">(<pos:position pos:line="68" pos:column="19"/></operator><name pos:line="68" pos:column="19">ssl_expr<pos:position pos:line="68" pos:column="27"/></name> <operator pos:line="68" pos:column="28">*<pos:position pos:line="68" pos:column="29"/></operator><operator pos:line="68" pos:column="29">)<pos:position pos:line="68" pos:column="30"/></operator><name><name pos:line="68" pos:column="30">node<pos:position pos:line="68" pos:column="34"/></name><operator pos:line="68" pos:column="34">-&gt;<pos:position pos:line="68" pos:column="39"/></operator><name pos:line="68" pos:column="36">node_arg2<pos:position pos:line="68" pos:column="45"/></name></name></expr>;<pos:position pos:line="68" pos:column="46"/></expr_stmt>
            <expr_stmt><expr><name pos:line="69" pos:column="13">word<pos:position pos:line="69" pos:column="17"/></name> <operator pos:line="69" pos:column="18">=<pos:position pos:line="69" pos:column="19"/></operator> <call><name pos:line="69" pos:column="20">ssl_expr_eval_word<pos:position pos:line="69" pos:column="38"/></name><argument_list pos:line="69" pos:column="38">(<argument><expr><name pos:line="69" pos:column="39">r<pos:position pos:line="69" pos:column="40"/></name></expr></argument>, <argument><expr><name pos:line="69" pos:column="42">e1<pos:position pos:line="69" pos:column="44"/></name></expr></argument>)<pos:position pos:line="69" pos:column="45"/></argument_list></call></expr>;<pos:position pos:line="69" pos:column="46"/></expr_stmt>
            <expr_stmt><expr><name pos:line="70" pos:column="13">regex<pos:position pos:line="70" pos:column="18"/></name> <operator pos:line="70" pos:column="19">=<pos:position pos:line="70" pos:column="20"/></operator> <operator pos:line="70" pos:column="21">(<pos:position pos:line="70" pos:column="22"/></operator><name pos:line="70" pos:column="22">ap_regex_t<pos:position pos:line="70" pos:column="32"/></name> <operator pos:line="70" pos:column="33">*<pos:position pos:line="70" pos:column="34"/></operator><operator pos:line="70" pos:column="34">)<pos:position pos:line="70" pos:column="35"/></operator><operator pos:line="70" pos:column="35">(<pos:position pos:line="70" pos:column="36"/></operator><name><name pos:line="70" pos:column="36">e2<pos:position pos:line="70" pos:column="38"/></name><operator pos:line="70" pos:column="38">-&gt;<pos:position pos:line="70" pos:column="43"/></operator><name pos:line="70" pos:column="40">node_arg1<pos:position pos:line="70" pos:column="49"/></name></name><operator pos:line="70" pos:column="49">)<pos:position pos:line="70" pos:column="50"/></operator></expr>;<pos:position pos:line="70" pos:column="51"/></expr_stmt>
            <return pos:line="71" pos:column="13">return <expr><operator pos:line="71" pos:column="20">(<pos:position pos:line="71" pos:column="21"/></operator><call><name pos:line="71" pos:column="21">ap_regexec<pos:position pos:line="71" pos:column="31"/></name><argument_list pos:line="71" pos:column="31">(<argument><expr><name pos:line="71" pos:column="32">regex<pos:position pos:line="71" pos:column="37"/></name></expr></argument>, <argument><expr><name pos:line="71" pos:column="39">word<pos:position pos:line="71" pos:column="43"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="71" pos:column="45">0<pos:position pos:line="71" pos:column="46"/></literal></expr></argument>, <argument><expr><name pos:line="71" pos:column="48">NULL<pos:position pos:line="71" pos:column="52"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="71" pos:column="54">0<pos:position pos:line="71" pos:column="55"/></literal></expr></argument>)<pos:position pos:line="71" pos:column="56"/></argument_list></call> <operator pos:line="71" pos:column="57">==<pos:position pos:line="71" pos:column="59"/></operator> <literal type="number" pos:line="71" pos:column="60">0<pos:position pos:line="71" pos:column="61"/></literal><operator pos:line="71" pos:column="61">)<pos:position pos:line="71" pos:column="62"/></operator></expr>;<pos:position pos:line="71" pos:column="63"/></return>
        }<pos:position pos:line="72" pos:column="10"/></block>
        <case pos:line="73" pos:column="9">case <expr><name pos:line="73" pos:column="14">op_NRE<pos:position pos:line="73" pos:column="20"/></name></expr>:<pos:position pos:line="73" pos:column="21"/></case> <block pos:line="73" pos:column="22">{
            <decl_stmt><decl><type><name pos:line="74" pos:column="13">ssl_expr<pos:position pos:line="74" pos:column="21"/></name> <modifier pos:line="74" pos:column="22">*<pos:position pos:line="74" pos:column="23"/></modifier></type><name pos:line="74" pos:column="23">e1<pos:position pos:line="74" pos:column="25"/></name></decl>;<pos:position pos:line="74" pos:column="26"/></decl_stmt>
            <decl_stmt><decl><type><name pos:line="75" pos:column="13">ssl_expr<pos:position pos:line="75" pos:column="21"/></name> <modifier pos:line="75" pos:column="22">*<pos:position pos:line="75" pos:column="23"/></modifier></type><name pos:line="75" pos:column="23">e2<pos:position pos:line="75" pos:column="25"/></name></decl>;<pos:position pos:line="75" pos:column="26"/></decl_stmt>
            <decl_stmt><decl><type><name pos:line="76" pos:column="13">char<pos:position pos:line="76" pos:column="17"/></name> <modifier pos:line="76" pos:column="18">*<pos:position pos:line="76" pos:column="19"/></modifier></type><name pos:line="76" pos:column="19">word<pos:position pos:line="76" pos:column="23"/></name></decl>;<pos:position pos:line="76" pos:column="24"/></decl_stmt>
            <decl_stmt><decl><type><name pos:line="77" pos:column="13">ap_regex_t<pos:position pos:line="77" pos:column="23"/></name> <modifier pos:line="77" pos:column="24">*<pos:position pos:line="77" pos:column="25"/></modifier></type><name pos:line="77" pos:column="25">regex<pos:position pos:line="77" pos:column="30"/></name></decl>;<pos:position pos:line="77" pos:column="31"/></decl_stmt>

            <expr_stmt><expr><name pos:line="79" pos:column="13">e1<pos:position pos:line="79" pos:column="15"/></name> <operator pos:line="79" pos:column="16">=<pos:position pos:line="79" pos:column="17"/></operator> <operator pos:line="79" pos:column="18">(<pos:position pos:line="79" pos:column="19"/></operator><name pos:line="79" pos:column="19">ssl_expr<pos:position pos:line="79" pos:column="27"/></name> <operator pos:line="79" pos:column="28">*<pos:position pos:line="79" pos:column="29"/></operator><operator pos:line="79" pos:column="29">)<pos:position pos:line="79" pos:column="30"/></operator><name><name pos:line="79" pos:column="30">node<pos:position pos:line="79" pos:column="34"/></name><operator pos:line="79" pos:column="34">-&gt;<pos:position pos:line="79" pos:column="39"/></operator><name pos:line="79" pos:column="36">node_arg1<pos:position pos:line="79" pos:column="45"/></name></name></expr>;<pos:position pos:line="79" pos:column="46"/></expr_stmt>
            <expr_stmt><expr><name pos:line="80" pos:column="13">e2<pos:position pos:line="80" pos:column="15"/></name> <operator pos:line="80" pos:column="16">=<pos:position pos:line="80" pos:column="17"/></operator> <operator pos:line="80" pos:column="18">(<pos:position pos:line="80" pos:column="19"/></operator><name pos:line="80" pos:column="19">ssl_expr<pos:position pos:line="80" pos:column="27"/></name> <operator pos:line="80" pos:column="28">*<pos:position pos:line="80" pos:column="29"/></operator><operator pos:line="80" pos:column="29">)<pos:position pos:line="80" pos:column="30"/></operator><name><name pos:line="80" pos:column="30">node<pos:position pos:line="80" pos:column="34"/></name><operator pos:line="80" pos:column="34">-&gt;<pos:position pos:line="80" pos:column="39"/></operator><name pos:line="80" pos:column="36">node_arg2<pos:position pos:line="80" pos:column="45"/></name></name></expr>;<pos:position pos:line="80" pos:column="46"/></expr_stmt>
            <expr_stmt><expr><name pos:line="81" pos:column="13">word<pos:position pos:line="81" pos:column="17"/></name> <operator pos:line="81" pos:column="18">=<pos:position pos:line="81" pos:column="19"/></operator> <call><name pos:line="81" pos:column="20">ssl_expr_eval_word<pos:position pos:line="81" pos:column="38"/></name><argument_list pos:line="81" pos:column="38">(<argument><expr><name pos:line="81" pos:column="39">r<pos:position pos:line="81" pos:column="40"/></name></expr></argument>, <argument><expr><name pos:line="81" pos:column="42">e1<pos:position pos:line="81" pos:column="44"/></name></expr></argument>)<pos:position pos:line="81" pos:column="45"/></argument_list></call></expr>;<pos:position pos:line="81" pos:column="46"/></expr_stmt>
            <expr_stmt><expr><name pos:line="82" pos:column="13">regex<pos:position pos:line="82" pos:column="18"/></name> <operator pos:line="82" pos:column="19">=<pos:position pos:line="82" pos:column="20"/></operator> <operator pos:line="82" pos:column="21">(<pos:position pos:line="82" pos:column="22"/></operator><name pos:line="82" pos:column="22">ap_regex_t<pos:position pos:line="82" pos:column="32"/></name> <operator pos:line="82" pos:column="33">*<pos:position pos:line="82" pos:column="34"/></operator><operator pos:line="82" pos:column="34">)<pos:position pos:line="82" pos:column="35"/></operator><operator pos:line="82" pos:column="35">(<pos:position pos:line="82" pos:column="36"/></operator><name><name pos:line="82" pos:column="36">e2<pos:position pos:line="82" pos:column="38"/></name><operator pos:line="82" pos:column="38">-&gt;<pos:position pos:line="82" pos:column="43"/></operator><name pos:line="82" pos:column="40">node_arg1<pos:position pos:line="82" pos:column="49"/></name></name><operator pos:line="82" pos:column="49">)<pos:position pos:line="82" pos:column="50"/></operator></expr>;<pos:position pos:line="82" pos:column="51"/></expr_stmt>
            <return pos:line="83" pos:column="13">return <expr><operator pos:line="83" pos:column="20">!<pos:position pos:line="83" pos:column="21"/></operator><operator pos:line="83" pos:column="21">(<pos:position pos:line="83" pos:column="22"/></operator><call><name pos:line="83" pos:column="22">ap_regexec<pos:position pos:line="83" pos:column="32"/></name><argument_list pos:line="83" pos:column="32">(<argument><expr><name pos:line="83" pos:column="33">regex<pos:position pos:line="83" pos:column="38"/></name></expr></argument>, <argument><expr><name pos:line="83" pos:column="40">word<pos:position pos:line="83" pos:column="44"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="83" pos:column="46">0<pos:position pos:line="83" pos:column="47"/></literal></expr></argument>, <argument><expr><name pos:line="83" pos:column="49">NULL<pos:position pos:line="83" pos:column="53"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="83" pos:column="55">0<pos:position pos:line="83" pos:column="56"/></literal></expr></argument>)<pos:position pos:line="83" pos:column="57"/></argument_list></call> <operator pos:line="83" pos:column="58">==<pos:position pos:line="83" pos:column="60"/></operator> <literal type="number" pos:line="83" pos:column="61">0<pos:position pos:line="83" pos:column="62"/></literal><operator pos:line="83" pos:column="62">)<pos:position pos:line="83" pos:column="63"/></operator></expr>;<pos:position pos:line="83" pos:column="64"/></return>
        }<pos:position pos:line="84" pos:column="10"/></block>
        <default pos:line="85" pos:column="9">default:<pos:position pos:line="85" pos:column="17"/></default> <block pos:line="85" pos:column="18">{
            <expr_stmt><expr><name pos:line="86" pos:column="13">ssl_expr_error<pos:position pos:line="86" pos:column="27"/></name> <operator pos:line="86" pos:column="28">=<pos:position pos:line="86" pos:column="29"/></operator> <literal type="string" pos:line="86" pos:column="30">"Internal evaluation error: Unknown expression node"<pos:position pos:line="86" pos:column="82"/></literal></expr>;<pos:position pos:line="86" pos:column="83"/></expr_stmt>
            <return pos:line="87" pos:column="13">return <expr><name pos:line="87" pos:column="20">FALSE<pos:position pos:line="87" pos:column="25"/></name></expr>;<pos:position pos:line="87" pos:column="26"/></return>
        }<pos:position pos:line="88" pos:column="10"/></block>
    }<pos:position pos:line="89" pos:column="6"/></block></switch>
}<pos:position pos:line="90" pos:column="2"/></block></function></unit>

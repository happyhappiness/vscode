<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/httpd/gumtree/httpd_repos_function_1148_httpd-2.0.43.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">int<pos:position pos:line="1" pos:column="11"/></name></type> <name pos:line="1" pos:column="12">cgid_init<pos:position pos:line="1" pos:column="21"/></name><parameter_list pos:line="1" pos:column="21">(<parameter><decl><type><name pos:line="1" pos:column="22">apr_pool_t<pos:position pos:line="1" pos:column="32"/></name> <modifier pos:line="1" pos:column="33">*<pos:position pos:line="1" pos:column="34"/></modifier></type><name pos:line="1" pos:column="34">p<pos:position pos:line="1" pos:column="35"/></name></decl></parameter>, <parameter><decl><type><name pos:line="1" pos:column="37">apr_pool_t<pos:position pos:line="1" pos:column="47"/></name> <modifier pos:line="1" pos:column="48">*<pos:position pos:line="1" pos:column="49"/></modifier></type><name pos:line="1" pos:column="49">plog<pos:position pos:line="1" pos:column="53"/></name></decl></parameter>, <parameter><decl><type><name pos:line="1" pos:column="55">apr_pool_t<pos:position pos:line="1" pos:column="65"/></name> <modifier pos:line="1" pos:column="66">*<pos:position pos:line="1" pos:column="67"/></modifier></type><name pos:line="1" pos:column="67">ptemp<pos:position pos:line="1" pos:column="72"/></name></decl></parameter>, 
                      <parameter><decl><type><name pos:line="2" pos:column="23">server_rec<pos:position pos:line="2" pos:column="33"/></name> <modifier pos:line="2" pos:column="34">*<pos:position pos:line="2" pos:column="35"/></modifier></type><name pos:line="2" pos:column="35">main_server<pos:position pos:line="2" pos:column="46"/></name></decl></parameter>)<pos:position pos:line="2" pos:column="47"/></parameter_list> 
<block pos:line="3" pos:column="1">{ 
    <decl_stmt><decl><type><name pos:line="4" pos:column="5">apr_proc_t<pos:position pos:line="4" pos:column="15"/></name> <modifier pos:line="4" pos:column="16">*<pos:position pos:line="4" pos:column="17"/></modifier></type><name pos:line="4" pos:column="17">procnew<pos:position pos:line="4" pos:column="24"/></name></decl>;<pos:position pos:line="4" pos:column="25"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="5" pos:column="5">void<pos:position pos:line="5" pos:column="9"/></name> <modifier pos:line="5" pos:column="10">*<pos:position pos:line="5" pos:column="11"/></modifier></type><name pos:line="5" pos:column="11">data<pos:position pos:line="5" pos:column="15"/></name></decl>;<pos:position pos:line="5" pos:column="16"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="6" pos:column="5">int<pos:position pos:line="6" pos:column="8"/></name></type> <name pos:line="6" pos:column="9">first_time<pos:position pos:line="6" pos:column="19"/></name> <init pos:line="6" pos:column="20">= <expr><literal type="number" pos:line="6" pos:column="22">0<pos:position pos:line="6" pos:column="23"/></literal></expr></init></decl>;<pos:position pos:line="6" pos:column="24"/></decl_stmt>
    <decl_stmt><decl><type><specifier pos:line="7" pos:column="5">const<pos:position pos:line="7" pos:column="10"/></specifier> <name pos:line="7" pos:column="11">char<pos:position pos:line="7" pos:column="15"/></name> <modifier pos:line="7" pos:column="16">*<pos:position pos:line="7" pos:column="17"/></modifier></type><name pos:line="7" pos:column="17">userdata_key<pos:position pos:line="7" pos:column="29"/></name> <init pos:line="7" pos:column="30">= <expr><literal type="string" pos:line="7" pos:column="32">"cgid_init"<pos:position pos:line="7" pos:column="43"/></literal></expr></init></decl>;<pos:position pos:line="7" pos:column="44"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="8" pos:column="5">module<pos:position pos:line="8" pos:column="11"/></name> <modifier pos:line="8" pos:column="12">*<pos:position pos:line="8" pos:column="13"/></modifier><modifier pos:line="8" pos:column="13">*<pos:position pos:line="8" pos:column="14"/></modifier></type><name pos:line="8" pos:column="14">m<pos:position pos:line="8" pos:column="15"/></name></decl>;<pos:position pos:line="8" pos:column="16"/></decl_stmt>

    <expr_stmt><expr><call><name pos:line="10" pos:column="5">apr_pool_userdata_get<pos:position pos:line="10" pos:column="26"/></name><argument_list pos:line="10" pos:column="26">(<argument><expr><operator pos:line="10" pos:column="27">&amp;<pos:position pos:line="10" pos:column="32"/></operator><name pos:line="10" pos:column="28">data<pos:position pos:line="10" pos:column="32"/></name></expr></argument>, <argument><expr><name pos:line="10" pos:column="34">userdata_key<pos:position pos:line="10" pos:column="46"/></name></expr></argument>, <argument><expr><name><name pos:line="10" pos:column="48">main_server<pos:position pos:line="10" pos:column="59"/></name><operator pos:line="10" pos:column="59">-&gt;<pos:position pos:line="10" pos:column="64"/></operator><name pos:line="10" pos:column="61">process<pos:position pos:line="10" pos:column="68"/></name><operator pos:line="10" pos:column="68">-&gt;<pos:position pos:line="10" pos:column="73"/></operator><name pos:line="10" pos:column="70">pool<pos:position pos:line="10" pos:column="74"/></name></name></expr></argument>)<pos:position pos:line="10" pos:column="75"/></argument_list></call></expr>;<pos:position pos:line="10" pos:column="76"/></expr_stmt>
    <if pos:line="11" pos:column="5">if <condition pos:line="11" pos:column="8">(<expr><operator pos:line="11" pos:column="9">!<pos:position pos:line="11" pos:column="10"/></operator><name pos:line="11" pos:column="10">data<pos:position pos:line="11" pos:column="14"/></name></expr>)<pos:position pos:line="11" pos:column="15"/></condition><then pos:line="11" pos:column="15"> <block pos:line="11" pos:column="16">{
        <expr_stmt><expr><name pos:line="12" pos:column="9">first_time<pos:position pos:line="12" pos:column="19"/></name> <operator pos:line="12" pos:column="20">=<pos:position pos:line="12" pos:column="21"/></operator> <literal type="number" pos:line="12" pos:column="22">1<pos:position pos:line="12" pos:column="23"/></literal></expr>;<pos:position pos:line="12" pos:column="24"/></expr_stmt>
        <expr_stmt><expr><call><name pos:line="13" pos:column="9">apr_pool_userdata_set<pos:position pos:line="13" pos:column="30"/></name><argument_list pos:line="13" pos:column="30">(<argument><expr><operator pos:line="13" pos:column="31">(<pos:position pos:line="13" pos:column="32"/></operator><specifier pos:line="13" pos:column="32">const<pos:position pos:line="13" pos:column="37"/></specifier> <name pos:line="13" pos:column="38">void<pos:position pos:line="13" pos:column="42"/></name> <operator pos:line="13" pos:column="43">*<pos:position pos:line="13" pos:column="44"/></operator><operator pos:line="13" pos:column="44">)<pos:position pos:line="13" pos:column="45"/></operator><literal type="number" pos:line="13" pos:column="45">1<pos:position pos:line="13" pos:column="46"/></literal></expr></argument>, <argument><expr><name pos:line="13" pos:column="48">userdata_key<pos:position pos:line="13" pos:column="60"/></name></expr></argument>,
                         <argument><expr><name pos:line="14" pos:column="26">apr_pool_cleanup_null<pos:position pos:line="14" pos:column="47"/></name></expr></argument>, <argument><expr><name><name pos:line="14" pos:column="49">main_server<pos:position pos:line="14" pos:column="60"/></name><operator pos:line="14" pos:column="60">-&gt;<pos:position pos:line="14" pos:column="65"/></operator><name pos:line="14" pos:column="62">process<pos:position pos:line="14" pos:column="69"/></name><operator pos:line="14" pos:column="69">-&gt;<pos:position pos:line="14" pos:column="74"/></operator><name pos:line="14" pos:column="71">pool<pos:position pos:line="14" pos:column="75"/></name></name></expr></argument>)<pos:position pos:line="14" pos:column="76"/></argument_list></call></expr>;<pos:position pos:line="14" pos:column="77"/></expr_stmt>
    }<pos:position pos:line="15" pos:column="6"/></block></then></if>

    <if pos:line="17" pos:column="5">if <condition pos:line="17" pos:column="8">(<expr><operator pos:line="17" pos:column="9">!<pos:position pos:line="17" pos:column="10"/></operator><name pos:line="17" pos:column="10">first_time<pos:position pos:line="17" pos:column="20"/></name></expr>)<pos:position pos:line="17" pos:column="21"/></condition><then pos:line="17" pos:column="21"> <block pos:line="17" pos:column="22">{
        <expr_stmt><expr><name pos:line="18" pos:column="9">total_modules<pos:position pos:line="18" pos:column="22"/></name> <operator pos:line="18" pos:column="23">=<pos:position pos:line="18" pos:column="24"/></operator> <literal type="number" pos:line="18" pos:column="25">0<pos:position pos:line="18" pos:column="26"/></literal></expr>;<pos:position pos:line="18" pos:column="27"/></expr_stmt>
        <for pos:line="19" pos:column="9">for <control pos:line="19" pos:column="13">(<init><expr><name pos:line="19" pos:column="14">m<pos:position pos:line="19" pos:column="15"/></name> <operator pos:line="19" pos:column="16">=<pos:position pos:line="19" pos:column="17"/></operator> <name pos:line="19" pos:column="18">ap_preloaded_modules<pos:position pos:line="19" pos:column="38"/></name></expr>;<pos:position pos:line="19" pos:column="39"/></init> <condition><expr><operator pos:line="19" pos:column="40">*<pos:position pos:line="19" pos:column="41"/></operator><name pos:line="19" pos:column="41">m<pos:position pos:line="19" pos:column="42"/></name> <operator pos:line="19" pos:column="43">!=<pos:position pos:line="19" pos:column="45"/></operator> <name pos:line="19" pos:column="46">NULL<pos:position pos:line="19" pos:column="50"/></name></expr>;<pos:position pos:line="19" pos:column="51"/></condition> <incr><expr><name pos:line="19" pos:column="52">m<pos:position pos:line="19" pos:column="53"/></name><operator pos:line="19" pos:column="53">++<pos:position pos:line="19" pos:column="55"/></operator></expr></incr>)<pos:position pos:line="19" pos:column="56"/></control>
            <block type="pseudo"><expr_stmt><expr><name pos:line="20" pos:column="13">total_modules<pos:position pos:line="20" pos:column="26"/></name><operator pos:line="20" pos:column="26">++<pos:position pos:line="20" pos:column="28"/></operator></expr>;<pos:position pos:line="20" pos:column="29"/></expr_stmt></block></for>

        <expr_stmt><expr><name pos:line="22" pos:column="9">daemon_should_exit<pos:position pos:line="22" pos:column="27"/></name> <operator pos:line="22" pos:column="28">=<pos:position pos:line="22" pos:column="29"/></operator> <literal type="number" pos:line="22" pos:column="30">0<pos:position pos:line="22" pos:column="31"/></literal></expr>;<pos:position pos:line="22" pos:column="32"/></expr_stmt> <comment type="block" pos:line="22" pos:column="33">/* clear setting from previous generation */</comment>
        <if pos:line="23" pos:column="9">if <condition pos:line="23" pos:column="12">(<expr><operator pos:line="23" pos:column="13">(<pos:position pos:line="23" pos:column="14"/></operator><name pos:line="23" pos:column="14">daemon_pid<pos:position pos:line="23" pos:column="24"/></name> <operator pos:line="23" pos:column="25">=<pos:position pos:line="23" pos:column="26"/></operator> <call><name pos:line="23" pos:column="27">fork<pos:position pos:line="23" pos:column="31"/></name><argument_list pos:line="23" pos:column="31">()<pos:position pos:line="23" pos:column="33"/></argument_list></call><operator pos:line="23" pos:column="33">)<pos:position pos:line="23" pos:column="34"/></operator> <operator pos:line="23" pos:column="35">&lt;<pos:position pos:line="23" pos:column="39"/></operator> <literal type="number" pos:line="23" pos:column="37">0<pos:position pos:line="23" pos:column="38"/></literal></expr>)<pos:position pos:line="23" pos:column="39"/></condition><then pos:line="23" pos:column="39"> <block pos:line="23" pos:column="40">{
            <expr_stmt><expr><call><name pos:line="24" pos:column="13">ap_log_error<pos:position pos:line="24" pos:column="25"/></name><argument_list pos:line="24" pos:column="25">(<argument><expr><name pos:line="24" pos:column="26">APLOG_MARK<pos:position pos:line="24" pos:column="36"/></name></expr></argument>, <argument><expr><name pos:line="24" pos:column="38">APLOG_ERR<pos:position pos:line="24" pos:column="47"/></name></expr></argument>, <argument><expr><name pos:line="24" pos:column="49">errno<pos:position pos:line="24" pos:column="54"/></name></expr></argument>, <argument><expr><name pos:line="24" pos:column="56">main_server<pos:position pos:line="24" pos:column="67"/></name></expr></argument>, 
                         <argument><expr><literal type="string" pos:line="25" pos:column="26">"mod_cgid: Couldn't spawn cgid daemon process"<pos:position pos:line="25" pos:column="72"/></literal></expr></argument>)<pos:position pos:line="25" pos:column="73"/></argument_list></call></expr>;<pos:position pos:line="25" pos:column="74"/></expr_stmt> 
            <return pos:line="26" pos:column="13">return <expr><name pos:line="26" pos:column="20">DECLINED<pos:position pos:line="26" pos:column="28"/></name></expr>;<pos:position pos:line="26" pos:column="29"/></return>
        }<pos:position pos:line="27" pos:column="10"/></block></then>
        <elseif pos:line="28" pos:column="9">else <if pos:line="28" pos:column="14">if <condition pos:line="28" pos:column="17">(<expr><name pos:line="28" pos:column="18">daemon_pid<pos:position pos:line="28" pos:column="28"/></name> <operator pos:line="28" pos:column="29">==<pos:position pos:line="28" pos:column="31"/></operator> <literal type="number" pos:line="28" pos:column="32">0<pos:position pos:line="28" pos:column="33"/></literal></expr>)<pos:position pos:line="28" pos:column="34"/></condition><then pos:line="28" pos:column="34"> <block pos:line="28" pos:column="35">{
            <expr_stmt><expr><call><name pos:line="29" pos:column="13">apr_pool_create<pos:position pos:line="29" pos:column="28"/></name><argument_list pos:line="29" pos:column="28">(<argument><expr><operator pos:line="29" pos:column="29">&amp;<pos:position pos:line="29" pos:column="34"/></operator><name pos:line="29" pos:column="30">pcgi<pos:position pos:line="29" pos:column="34"/></name></expr></argument>, <argument><expr><name pos:line="29" pos:column="36">p<pos:position pos:line="29" pos:column="37"/></name></expr></argument>)<pos:position pos:line="29" pos:column="38"/></argument_list></call></expr>;<pos:position pos:line="29" pos:column="39"/></expr_stmt> 
            <expr_stmt><expr><call><name pos:line="30" pos:column="13">cgid_server<pos:position pos:line="30" pos:column="24"/></name><argument_list pos:line="30" pos:column="24">(<argument><expr><name pos:line="30" pos:column="25">main_server<pos:position pos:line="30" pos:column="36"/></name></expr></argument>)<pos:position pos:line="30" pos:column="37"/></argument_list></call></expr>;<pos:position pos:line="30" pos:column="38"/></expr_stmt>
            <expr_stmt><expr><call><name pos:line="31" pos:column="13">exit<pos:position pos:line="31" pos:column="17"/></name><argument_list pos:line="31" pos:column="17">(<argument><expr><operator pos:line="31" pos:column="18">-<pos:position pos:line="31" pos:column="19"/></operator><literal type="number" pos:line="31" pos:column="19">1<pos:position pos:line="31" pos:column="20"/></literal></expr></argument>)<pos:position pos:line="31" pos:column="21"/></argument_list></call></expr>;<pos:position pos:line="31" pos:column="22"/></expr_stmt>
        }<pos:position pos:line="32" pos:column="10"/></block></then></if></elseif></if> 
        <expr_stmt><expr><name pos:line="33" pos:column="9">procnew<pos:position pos:line="33" pos:column="16"/></name> <operator pos:line="33" pos:column="17">=<pos:position pos:line="33" pos:column="18"/></operator> <call><name pos:line="33" pos:column="19">apr_pcalloc<pos:position pos:line="33" pos:column="30"/></name><argument_list pos:line="33" pos:column="30">(<argument><expr><name pos:line="33" pos:column="31">p<pos:position pos:line="33" pos:column="32"/></name></expr></argument>, <argument><expr><sizeof pos:line="33" pos:column="34">sizeof<argument_list pos:line="33" pos:column="40">(<argument><expr><operator pos:line="33" pos:column="41">*<pos:position pos:line="33" pos:column="42"/></operator><name pos:line="33" pos:column="42">procnew<pos:position pos:line="33" pos:column="49"/></name></expr></argument>)<pos:position pos:line="33" pos:column="50"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="33" pos:column="51"/></argument_list></call></expr>;<pos:position pos:line="33" pos:column="52"/></expr_stmt>
        <expr_stmt><expr><name><name pos:line="34" pos:column="9">procnew<pos:position pos:line="34" pos:column="16"/></name><operator pos:line="34" pos:column="16">-&gt;<pos:position pos:line="34" pos:column="21"/></operator><name pos:line="34" pos:column="18">pid<pos:position pos:line="34" pos:column="21"/></name></name> <operator pos:line="34" pos:column="22">=<pos:position pos:line="34" pos:column="23"/></operator> <name pos:line="34" pos:column="24">daemon_pid<pos:position pos:line="34" pos:column="34"/></name></expr>;<pos:position pos:line="34" pos:column="35"/></expr_stmt>
        <expr_stmt><expr><name><name pos:line="35" pos:column="9">procnew<pos:position pos:line="35" pos:column="16"/></name><operator pos:line="35" pos:column="16">-&gt;<pos:position pos:line="35" pos:column="21"/></operator><name pos:line="35" pos:column="18">err<pos:position pos:line="35" pos:column="21"/></name></name> <operator pos:line="35" pos:column="22">=<pos:position pos:line="35" pos:column="23"/></operator> <name><name pos:line="35" pos:column="24">procnew<pos:position pos:line="35" pos:column="31"/></name><operator pos:line="35" pos:column="31">-&gt;<pos:position pos:line="35" pos:column="36"/></operator><name pos:line="35" pos:column="33">in<pos:position pos:line="35" pos:column="35"/></name></name> <operator pos:line="35" pos:column="36">=<pos:position pos:line="35" pos:column="37"/></operator> <name><name pos:line="35" pos:column="38">procnew<pos:position pos:line="35" pos:column="45"/></name><operator pos:line="35" pos:column="45">-&gt;<pos:position pos:line="35" pos:column="50"/></operator><name pos:line="35" pos:column="47">out<pos:position pos:line="35" pos:column="50"/></name></name> <operator pos:line="35" pos:column="51">=<pos:position pos:line="35" pos:column="52"/></operator> <name pos:line="35" pos:column="53">NULL<pos:position pos:line="35" pos:column="57"/></name></expr>;<pos:position pos:line="35" pos:column="58"/></expr_stmt>
        <expr_stmt><expr><call><name pos:line="36" pos:column="9">apr_pool_note_subprocess<pos:position pos:line="36" pos:column="33"/></name><argument_list pos:line="36" pos:column="33">(<argument><expr><name pos:line="36" pos:column="34">p<pos:position pos:line="36" pos:column="35"/></name></expr></argument>, <argument><expr><name pos:line="36" pos:column="37">procnew<pos:position pos:line="36" pos:column="44"/></name></expr></argument>, <argument><expr><name pos:line="36" pos:column="46">APR_KILL_AFTER_TIMEOUT<pos:position pos:line="36" pos:column="68"/></name></expr></argument>)<pos:position pos:line="36" pos:column="69"/></argument_list></call></expr>;<pos:position pos:line="36" pos:column="70"/></expr_stmt>
<cpp:if pos:line="37" pos:column="1">#<cpp:directive pos:line="37" pos:column="2">if<pos:position pos:line="37" pos:column="4"/></cpp:directive> <expr><name pos:line="37" pos:column="5">APR_HAS_OTHER_CHILD<pos:position pos:line="37" pos:column="24"/></name></expr></cpp:if>
        <expr_stmt><expr><call><name pos:line="38" pos:column="9">apr_proc_other_child_register<pos:position pos:line="38" pos:column="38"/></name><argument_list pos:line="38" pos:column="38">(<argument><expr><name pos:line="38" pos:column="39">procnew<pos:position pos:line="38" pos:column="46"/></name></expr></argument>, <argument><expr><name pos:line="38" pos:column="48">cgid_maint<pos:position pos:line="38" pos:column="58"/></name></expr></argument>, <argument><expr><operator pos:line="38" pos:column="60">&amp;<pos:position pos:line="38" pos:column="65"/></operator><name><name pos:line="38" pos:column="61">procnew<pos:position pos:line="38" pos:column="68"/></name><operator pos:line="38" pos:column="68">-&gt;<pos:position pos:line="38" pos:column="73"/></operator><name pos:line="38" pos:column="70">pid<pos:position pos:line="38" pos:column="73"/></name></name></expr></argument>, <argument><expr><name pos:line="38" pos:column="75">NULL<pos:position pos:line="38" pos:column="79"/></name></expr></argument>, <argument><expr><name pos:line="38" pos:column="81">p<pos:position pos:line="38" pos:column="82"/></name></expr></argument>)<pos:position pos:line="38" pos:column="83"/></argument_list></call></expr>;<pos:position pos:line="38" pos:column="84"/></expr_stmt>
<cpp:endif pos:line="39" pos:column="1">#<cpp:directive pos:line="39" pos:column="2">endif<pos:position pos:line="39" pos:column="7"/></cpp:directive></cpp:endif>

        <expr_stmt><expr><name pos:line="41" pos:column="9">cgid_pfn_reg_with_ssi<pos:position pos:line="41" pos:column="30"/></name> <operator pos:line="41" pos:column="31">=<pos:position pos:line="41" pos:column="32"/></operator> <call><name pos:line="41" pos:column="33">APR_RETRIEVE_OPTIONAL_FN<pos:position pos:line="41" pos:column="57"/></name><argument_list pos:line="41" pos:column="57">(<argument><expr><name pos:line="41" pos:column="58">ap_register_include_handler<pos:position pos:line="41" pos:column="85"/></name></expr></argument>)<pos:position pos:line="41" pos:column="86"/></argument_list></call></expr>;<pos:position pos:line="41" pos:column="87"/></expr_stmt>
        <expr_stmt><expr><name pos:line="42" pos:column="9">cgid_pfn_gtv<pos:position pos:line="42" pos:column="21"/></name>          <operator pos:line="42" pos:column="31">=<pos:position pos:line="42" pos:column="32"/></operator> <call><name pos:line="42" pos:column="33">APR_RETRIEVE_OPTIONAL_FN<pos:position pos:line="42" pos:column="57"/></name><argument_list pos:line="42" pos:column="57">(<argument><expr><name pos:line="42" pos:column="58">ap_ssi_get_tag_and_value<pos:position pos:line="42" pos:column="82"/></name></expr></argument>)<pos:position pos:line="42" pos:column="83"/></argument_list></call></expr>;<pos:position pos:line="42" pos:column="84"/></expr_stmt>
        <expr_stmt><expr><name pos:line="43" pos:column="9">cgid_pfn_ps<pos:position pos:line="43" pos:column="20"/></name>           <operator pos:line="43" pos:column="31">=<pos:position pos:line="43" pos:column="32"/></operator> <call><name pos:line="43" pos:column="33">APR_RETRIEVE_OPTIONAL_FN<pos:position pos:line="43" pos:column="57"/></name><argument_list pos:line="43" pos:column="57">(<argument><expr><name pos:line="43" pos:column="58">ap_ssi_parse_string<pos:position pos:line="43" pos:column="77"/></name></expr></argument>)<pos:position pos:line="43" pos:column="78"/></argument_list></call></expr>;<pos:position pos:line="43" pos:column="79"/></expr_stmt>

        <if pos:line="45" pos:column="9">if <condition pos:line="45" pos:column="12">(<expr><operator pos:line="45" pos:column="13">(<pos:position pos:line="45" pos:column="14"/></operator><name pos:line="45" pos:column="14">cgid_pfn_reg_with_ssi<pos:position pos:line="45" pos:column="35"/></name><operator pos:line="45" pos:column="35">)<pos:position pos:line="45" pos:column="36"/></operator> <operator pos:line="45" pos:column="37">&amp;&amp;<pos:position pos:line="45" pos:column="47"/></operator> <operator pos:line="45" pos:column="40">(<pos:position pos:line="45" pos:column="41"/></operator><name pos:line="45" pos:column="41">cgid_pfn_gtv<pos:position pos:line="45" pos:column="53"/></name><operator pos:line="45" pos:column="53">)<pos:position pos:line="45" pos:column="54"/></operator> <operator pos:line="45" pos:column="55">&amp;&amp;<pos:position pos:line="45" pos:column="65"/></operator> <operator pos:line="45" pos:column="58">(<pos:position pos:line="45" pos:column="59"/></operator><name pos:line="45" pos:column="59">cgid_pfn_ps<pos:position pos:line="45" pos:column="70"/></name><operator pos:line="45" pos:column="70">)<pos:position pos:line="45" pos:column="71"/></operator></expr>)<pos:position pos:line="45" pos:column="72"/></condition><then pos:line="45" pos:column="72"> <block pos:line="45" pos:column="73">{
            <comment type="block" pos:line="46" pos:column="13">/* Required by mod_include filter. This is how mod_cgid registers
             *   with mod_include to provide processing of the exec directive.
             */</comment>
            <expr_stmt><expr><call><name pos:line="49" pos:column="13">cgid_pfn_reg_with_ssi<pos:position pos:line="49" pos:column="34"/></name><argument_list pos:line="49" pos:column="34">(<argument><expr><literal type="string" pos:line="49" pos:column="35">"exec"<pos:position pos:line="49" pos:column="41"/></literal></expr></argument>, <argument><expr><name pos:line="49" pos:column="43">handle_exec<pos:position pos:line="49" pos:column="54"/></name></expr></argument>)<pos:position pos:line="49" pos:column="55"/></argument_list></call></expr>;<pos:position pos:line="49" pos:column="56"/></expr_stmt>
        }<pos:position pos:line="50" pos:column="10"/></block></then></if>
    }<pos:position pos:line="51" pos:column="6"/></block></then></if>
    <return pos:line="52" pos:column="5">return <expr><name pos:line="52" pos:column="12">OK<pos:position pos:line="52" pos:column="14"/></name></expr>;<pos:position pos:line="52" pos:column="15"/></return>
}<pos:position pos:line="53" pos:column="2"/></block></function></unit>

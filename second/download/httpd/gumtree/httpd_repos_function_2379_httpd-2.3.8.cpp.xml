<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/httpd/gumtree/httpd_repos_function_2379_httpd-2.3.8.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><specifier pos:line="1" pos:column="8">const<pos:position pos:line="1" pos:column="13"/></specifier> <name pos:line="1" pos:column="14">char<pos:position pos:line="1" pos:column="18"/></name> <modifier pos:line="1" pos:column="19">*<pos:position pos:line="1" pos:column="20"/></modifier></type><name pos:line="1" pos:column="20">set_interpreter_source<pos:position pos:line="1" pos:column="42"/></name><parameter_list pos:line="1" pos:column="42">(<parameter><decl><type><name pos:line="1" pos:column="43">cmd_parms<pos:position pos:line="1" pos:column="52"/></name> <modifier pos:line="1" pos:column="53">*<pos:position pos:line="1" pos:column="54"/></modifier></type><name pos:line="1" pos:column="54">cmd<pos:position pos:line="1" pos:column="57"/></name></decl></parameter>, <parameter><decl><type><name pos:line="1" pos:column="59">void<pos:position pos:line="1" pos:column="63"/></name> <modifier pos:line="1" pos:column="64">*<pos:position pos:line="1" pos:column="65"/></modifier></type><name pos:line="1" pos:column="65">dv<pos:position pos:line="1" pos:column="67"/></name></decl></parameter>,
                                          <parameter><decl><type><name pos:line="2" pos:column="43">char<pos:position pos:line="2" pos:column="47"/></name> <modifier pos:line="2" pos:column="48">*<pos:position pos:line="2" pos:column="49"/></modifier></type><name pos:line="2" pos:column="49">arg<pos:position pos:line="2" pos:column="52"/></name></decl></parameter>)<pos:position pos:line="2" pos:column="53"/></parameter_list>
<block pos:line="3" pos:column="1">{
    <decl_stmt><decl><type><name pos:line="4" pos:column="5">win32_dir_conf<pos:position pos:line="4" pos:column="19"/></name> <modifier pos:line="4" pos:column="20">*<pos:position pos:line="4" pos:column="21"/></modifier></type><name pos:line="4" pos:column="21">d<pos:position pos:line="4" pos:column="22"/></name> <init pos:line="4" pos:column="23">= <expr><operator pos:line="4" pos:column="25">(<pos:position pos:line="4" pos:column="26"/></operator><name pos:line="4" pos:column="26">win32_dir_conf<pos:position pos:line="4" pos:column="40"/></name> <operator pos:line="4" pos:column="41">*<pos:position pos:line="4" pos:column="42"/></operator><operator pos:line="4" pos:column="42">)<pos:position pos:line="4" pos:column="43"/></operator><name pos:line="4" pos:column="43">dv<pos:position pos:line="4" pos:column="45"/></name></expr></init></decl>;<pos:position pos:line="4" pos:column="46"/></decl_stmt>
    <if pos:line="5" pos:column="5">if <condition pos:line="5" pos:column="8">(<expr><operator pos:line="5" pos:column="9">!<pos:position pos:line="5" pos:column="10"/></operator><call><name pos:line="5" pos:column="10">strcasecmp<pos:position pos:line="5" pos:column="20"/></name><argument_list pos:line="5" pos:column="20">(<argument><expr><name pos:line="5" pos:column="21">arg<pos:position pos:line="5" pos:column="24"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="5" pos:column="26">"registry"<pos:position pos:line="5" pos:column="36"/></literal></expr></argument>)<pos:position pos:line="5" pos:column="37"/></argument_list></call></expr>)<pos:position pos:line="5" pos:column="38"/></condition><then pos:line="5" pos:column="38"> <block pos:line="5" pos:column="39">{
        <expr_stmt><expr><name><name pos:line="6" pos:column="9">d<pos:position pos:line="6" pos:column="10"/></name><operator pos:line="6" pos:column="10">-&gt;<pos:position pos:line="6" pos:column="15"/></operator><name pos:line="6" pos:column="12">script_interpreter_source<pos:position pos:line="6" pos:column="37"/></name></name> <operator pos:line="6" pos:column="38">=<pos:position pos:line="6" pos:column="39"/></operator> <name pos:line="6" pos:column="40">INTERPRETER_SOURCE_REGISTRY<pos:position pos:line="6" pos:column="67"/></name></expr>;<pos:position pos:line="6" pos:column="68"/></expr_stmt>
    }<pos:position pos:line="7" pos:column="6"/></block></then>
    <elseif pos:line="8" pos:column="5">else <if pos:line="8" pos:column="10">if <condition pos:line="8" pos:column="13">(<expr><operator pos:line="8" pos:column="14">!<pos:position pos:line="8" pos:column="15"/></operator><call><name pos:line="8" pos:column="15">strcasecmp<pos:position pos:line="8" pos:column="25"/></name><argument_list pos:line="8" pos:column="25">(<argument><expr><name pos:line="8" pos:column="26">arg<pos:position pos:line="8" pos:column="29"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="8" pos:column="31">"registry-strict"<pos:position pos:line="8" pos:column="48"/></literal></expr></argument>)<pos:position pos:line="8" pos:column="49"/></argument_list></call></expr>)<pos:position pos:line="8" pos:column="50"/></condition><then pos:line="8" pos:column="50"> <block pos:line="8" pos:column="51">{
        <expr_stmt><expr><name><name pos:line="9" pos:column="9">d<pos:position pos:line="9" pos:column="10"/></name><operator pos:line="9" pos:column="10">-&gt;<pos:position pos:line="9" pos:column="15"/></operator><name pos:line="9" pos:column="12">script_interpreter_source<pos:position pos:line="9" pos:column="37"/></name></name> <operator pos:line="9" pos:column="38">=<pos:position pos:line="9" pos:column="39"/></operator> <name pos:line="9" pos:column="40">INTERPRETER_SOURCE_REGISTRY_STRICT<pos:position pos:line="9" pos:column="74"/></name></expr>;<pos:position pos:line="9" pos:column="75"/></expr_stmt>
    }<pos:position pos:line="10" pos:column="6"/></block></then></if></elseif>
    <elseif pos:line="11" pos:column="5">else <if pos:line="11" pos:column="10">if <condition pos:line="11" pos:column="13">(<expr><operator pos:line="11" pos:column="14">!<pos:position pos:line="11" pos:column="15"/></operator><call><name pos:line="11" pos:column="15">strcasecmp<pos:position pos:line="11" pos:column="25"/></name><argument_list pos:line="11" pos:column="25">(<argument><expr><name pos:line="11" pos:column="26">arg<pos:position pos:line="11" pos:column="29"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="11" pos:column="31">"script"<pos:position pos:line="11" pos:column="39"/></literal></expr></argument>)<pos:position pos:line="11" pos:column="40"/></argument_list></call></expr>)<pos:position pos:line="11" pos:column="41"/></condition><then pos:line="11" pos:column="41"> <block pos:line="11" pos:column="42">{
        <expr_stmt><expr><name><name pos:line="12" pos:column="9">d<pos:position pos:line="12" pos:column="10"/></name><operator pos:line="12" pos:column="10">-&gt;<pos:position pos:line="12" pos:column="15"/></operator><name pos:line="12" pos:column="12">script_interpreter_source<pos:position pos:line="12" pos:column="37"/></name></name> <operator pos:line="12" pos:column="38">=<pos:position pos:line="12" pos:column="39"/></operator> <name pos:line="12" pos:column="40">INTERPRETER_SOURCE_SHEBANG<pos:position pos:line="12" pos:column="66"/></name></expr>;<pos:position pos:line="12" pos:column="67"/></expr_stmt>
    }<pos:position pos:line="13" pos:column="6"/></block></then></if></elseif>
    <else pos:line="14" pos:column="5">else <block pos:line="14" pos:column="10">{
        <return pos:line="15" pos:column="9">return <expr><call><name pos:line="15" pos:column="16">apr_pstrcat<pos:position pos:line="15" pos:column="27"/></name><argument_list pos:line="15" pos:column="27">(<argument><expr><name><name pos:line="15" pos:column="28">cmd<pos:position pos:line="15" pos:column="31"/></name><operator pos:line="15" pos:column="31">-&gt;<pos:position pos:line="15" pos:column="36"/></operator><name pos:line="15" pos:column="33">temp_pool<pos:position pos:line="15" pos:column="42"/></name></name></expr></argument>, <argument><expr><literal type="string" pos:line="15" pos:column="44">"ScriptInterpreterSource \""<pos:position pos:line="15" pos:column="72"/></literal></expr></argument>, <argument><expr><name pos:line="15" pos:column="74">arg<pos:position pos:line="15" pos:column="77"/></name></expr></argument>,
                           <argument><expr><literal type="string" pos:line="16" pos:column="28">"\" must be \"registry\", \"registry-strict\" or "<pos:position pos:line="16" pos:column="78"/></literal>
                           <literal type="string" pos:line="17" pos:column="28">"\"script\""<pos:position pos:line="17" pos:column="40"/></literal></expr></argument>, <argument><expr><name pos:line="17" pos:column="42">NULL<pos:position pos:line="17" pos:column="46"/></name></expr></argument>)<pos:position pos:line="17" pos:column="47"/></argument_list></call></expr>;<pos:position pos:line="17" pos:column="48"/></return>
    }<pos:position pos:line="18" pos:column="6"/></block></else></if>
    <return pos:line="19" pos:column="5">return <expr><name pos:line="19" pos:column="12">NULL<pos:position pos:line="19" pos:column="16"/></name></expr>;<pos:position pos:line="19" pos:column="17"/></return>
}<pos:position pos:line="20" pos:column="2"/></block></function></unit>

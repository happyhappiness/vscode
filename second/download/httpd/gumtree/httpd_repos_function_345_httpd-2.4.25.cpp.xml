<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/httpd/gumtree/httpd_repos_function_345_httpd-2.4.25.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">int<pos:position pos:line="1" pos:column="11"/></name></type> <name pos:line="1" pos:column="12">dav_get_overwrite<pos:position pos:line="1" pos:column="29"/></name><parameter_list pos:line="1" pos:column="29">(<parameter><decl><type><name pos:line="1" pos:column="30">request_rec<pos:position pos:line="1" pos:column="41"/></name> <modifier pos:line="1" pos:column="42">*<pos:position pos:line="1" pos:column="43"/></modifier></type><name pos:line="1" pos:column="43">r<pos:position pos:line="1" pos:column="44"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="45"/></parameter_list>
<block pos:line="2" pos:column="1">{
    <decl_stmt><decl><type><specifier pos:line="3" pos:column="5">const<pos:position pos:line="3" pos:column="10"/></specifier> <name pos:line="3" pos:column="11">char<pos:position pos:line="3" pos:column="15"/></name> <modifier pos:line="3" pos:column="16">*<pos:position pos:line="3" pos:column="17"/></modifier></type><name pos:line="3" pos:column="17">overwrite<pos:position pos:line="3" pos:column="26"/></name> <init pos:line="3" pos:column="27">= <expr><call><name pos:line="3" pos:column="29">apr_table_get<pos:position pos:line="3" pos:column="42"/></name><argument_list pos:line="3" pos:column="42">(<argument><expr><name><name pos:line="3" pos:column="43">r<pos:position pos:line="3" pos:column="44"/></name><operator pos:line="3" pos:column="44">-&gt;<pos:position pos:line="3" pos:column="49"/></operator><name pos:line="3" pos:column="46">headers_in<pos:position pos:line="3" pos:column="56"/></name></name></expr></argument>, <argument><expr><literal type="string" pos:line="3" pos:column="58">"Overwrite"<pos:position pos:line="3" pos:column="69"/></literal></expr></argument>)<pos:position pos:line="3" pos:column="70"/></argument_list></call></expr></init></decl>;<pos:position pos:line="3" pos:column="71"/></decl_stmt>

    <if pos:line="5" pos:column="5">if <condition pos:line="5" pos:column="8">(<expr><name pos:line="5" pos:column="9">overwrite<pos:position pos:line="5" pos:column="18"/></name> <operator pos:line="5" pos:column="19">==<pos:position pos:line="5" pos:column="21"/></operator> <name pos:line="5" pos:column="22">NULL<pos:position pos:line="5" pos:column="26"/></name></expr>)<pos:position pos:line="5" pos:column="27"/></condition><then pos:line="5" pos:column="27"> <block pos:line="5" pos:column="28">{
        <return pos:line="6" pos:column="9">return <expr><literal type="number" pos:line="6" pos:column="16">1<pos:position pos:line="6" pos:column="17"/></literal></expr>;<pos:position pos:line="6" pos:column="18"/></return> <comment type="block" pos:line="6" pos:column="19">/* default is "T" */</comment>
    }<pos:position pos:line="7" pos:column="6"/></block></then></if>

    <if pos:line="9" pos:column="5">if <condition pos:line="9" pos:column="8">(<expr><operator pos:line="9" pos:column="9">(<pos:position pos:line="9" pos:column="10"/></operator><operator pos:line="9" pos:column="10">*<pos:position pos:line="9" pos:column="11"/></operator><name pos:line="9" pos:column="11">overwrite<pos:position pos:line="9" pos:column="20"/></name> <operator pos:line="9" pos:column="21">==<pos:position pos:line="9" pos:column="23"/></operator> <literal type="char" pos:line="9" pos:column="24">'F'<pos:position pos:line="9" pos:column="27"/></literal> <operator pos:line="9" pos:column="28">||<pos:position pos:line="9" pos:column="30"/></operator> <operator pos:line="9" pos:column="31">*<pos:position pos:line="9" pos:column="32"/></operator><name pos:line="9" pos:column="32">overwrite<pos:position pos:line="9" pos:column="41"/></name> <operator pos:line="9" pos:column="42">==<pos:position pos:line="9" pos:column="44"/></operator> <literal type="char" pos:line="9" pos:column="45">'f'<pos:position pos:line="9" pos:column="48"/></literal><operator pos:line="9" pos:column="48">)<pos:position pos:line="9" pos:column="49"/></operator> <operator pos:line="9" pos:column="50">&amp;&amp;<pos:position pos:line="9" pos:column="60"/></operator> <name><name pos:line="9" pos:column="53">overwrite<pos:position pos:line="9" pos:column="62"/></name><index pos:line="9" pos:column="62">[<expr><literal type="number" pos:line="9" pos:column="63">1<pos:position pos:line="9" pos:column="64"/></literal></expr>]<pos:position pos:line="9" pos:column="65"/></index></name> <operator pos:line="9" pos:column="66">==<pos:position pos:line="9" pos:column="68"/></operator> <literal type="char" pos:line="9" pos:column="69">'\0'<pos:position pos:line="9" pos:column="73"/></literal></expr>)<pos:position pos:line="9" pos:column="74"/></condition><then pos:line="9" pos:column="74"> <block pos:line="9" pos:column="75">{
        <return pos:line="10" pos:column="9">return <expr><literal type="number" pos:line="10" pos:column="16">0<pos:position pos:line="10" pos:column="17"/></literal></expr>;<pos:position pos:line="10" pos:column="18"/></return>
    }<pos:position pos:line="11" pos:column="6"/></block></then></if>

    <if pos:line="13" pos:column="5">if <condition pos:line="13" pos:column="8">(<expr><operator pos:line="13" pos:column="9">(<pos:position pos:line="13" pos:column="10"/></operator><operator pos:line="13" pos:column="10">*<pos:position pos:line="13" pos:column="11"/></operator><name pos:line="13" pos:column="11">overwrite<pos:position pos:line="13" pos:column="20"/></name> <operator pos:line="13" pos:column="21">==<pos:position pos:line="13" pos:column="23"/></operator> <literal type="char" pos:line="13" pos:column="24">'T'<pos:position pos:line="13" pos:column="27"/></literal> <operator pos:line="13" pos:column="28">||<pos:position pos:line="13" pos:column="30"/></operator> <operator pos:line="13" pos:column="31">*<pos:position pos:line="13" pos:column="32"/></operator><name pos:line="13" pos:column="32">overwrite<pos:position pos:line="13" pos:column="41"/></name> <operator pos:line="13" pos:column="42">==<pos:position pos:line="13" pos:column="44"/></operator> <literal type="char" pos:line="13" pos:column="45">'t'<pos:position pos:line="13" pos:column="48"/></literal><operator pos:line="13" pos:column="48">)<pos:position pos:line="13" pos:column="49"/></operator> <operator pos:line="13" pos:column="50">&amp;&amp;<pos:position pos:line="13" pos:column="60"/></operator> <name><name pos:line="13" pos:column="53">overwrite<pos:position pos:line="13" pos:column="62"/></name><index pos:line="13" pos:column="62">[<expr><literal type="number" pos:line="13" pos:column="63">1<pos:position pos:line="13" pos:column="64"/></literal></expr>]<pos:position pos:line="13" pos:column="65"/></index></name> <operator pos:line="13" pos:column="66">==<pos:position pos:line="13" pos:column="68"/></operator> <literal type="char" pos:line="13" pos:column="69">'\0'<pos:position pos:line="13" pos:column="73"/></literal></expr>)<pos:position pos:line="13" pos:column="74"/></condition><then pos:line="13" pos:column="74"> <block pos:line="13" pos:column="75">{
        <return pos:line="14" pos:column="9">return <expr><literal type="number" pos:line="14" pos:column="16">1<pos:position pos:line="14" pos:column="17"/></literal></expr>;<pos:position pos:line="14" pos:column="18"/></return>
    }<pos:position pos:line="15" pos:column="6"/></block></then></if>

    <comment type="block" pos:line="17" pos:column="5">/* The caller will return an HTTP_BAD_REQUEST. This will augment the
     * default message that Apache provides. */</comment>
    <expr_stmt><expr><call><name pos:line="19" pos:column="5">ap_log_rerror<pos:position pos:line="19" pos:column="18"/></name><argument_list pos:line="19" pos:column="18">(<argument><expr><name pos:line="19" pos:column="19">APLOG_MARK<pos:position pos:line="19" pos:column="29"/></name></expr></argument>, <argument><expr><name pos:line="19" pos:column="31">APLOG_ERR<pos:position pos:line="19" pos:column="40"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="19" pos:column="42">0<pos:position pos:line="19" pos:column="43"/></literal></expr></argument>, <argument><expr><name pos:line="19" pos:column="45">r<pos:position pos:line="19" pos:column="46"/></name></expr></argument>, <argument><expr><call><name pos:line="19" pos:column="48">APLOGNO<pos:position pos:line="19" pos:column="55"/></name><argument_list pos:line="19" pos:column="55">(<argument><expr><literal type="number" pos:line="19" pos:column="56">00581<pos:position pos:line="19" pos:column="61"/></literal></expr></argument>)<pos:position pos:line="19" pos:column="62"/></argument_list></call>
                  <literal type="string" pos:line="20" pos:column="19">"An invalid Overwrite header was specified."<pos:position pos:line="20" pos:column="63"/></literal></expr></argument>)<pos:position pos:line="20" pos:column="64"/></argument_list></call></expr>;<pos:position pos:line="20" pos:column="65"/></expr_stmt>
    <return pos:line="21" pos:column="5">return <expr><operator pos:line="21" pos:column="12">-<pos:position pos:line="21" pos:column="13"/></operator><literal type="number" pos:line="21" pos:column="13">1<pos:position pos:line="21" pos:column="14"/></literal></expr>;<pos:position pos:line="21" pos:column="15"/></return>
}<pos:position pos:line="22" pos:column="2"/></block></function></unit>

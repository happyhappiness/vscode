<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/httpd/gumtree/httpd_function_269.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">int<pos:position pos:line="1" pos:column="11"/></name></type> <name pos:line="1" pos:column="12">piped_log_spawn<pos:position pos:line="1" pos:column="27"/></name><parameter_list pos:line="1" pos:column="27">(<parameter><decl><type><name pos:line="1" pos:column="28">piped_log<pos:position pos:line="1" pos:column="37"/></name> <modifier pos:line="1" pos:column="38">*<pos:position pos:line="1" pos:column="39"/></modifier></type><name pos:line="1" pos:column="39">pl<pos:position pos:line="1" pos:column="41"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="42"/></parameter_list>
<block pos:line="2" pos:column="1">{
    <decl_stmt><decl><type><name pos:line="3" pos:column="5">int<pos:position pos:line="3" pos:column="8"/></name></type> <name pos:line="3" pos:column="9">rc<pos:position pos:line="3" pos:column="11"/></name> <init pos:line="3" pos:column="12">= <expr><literal type="number" pos:line="3" pos:column="14">0<pos:position pos:line="3" pos:column="15"/></literal></expr></init></decl>;<pos:position pos:line="3" pos:column="16"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="4" pos:column="5">apr_procattr_t<pos:position pos:line="4" pos:column="19"/></name> <modifier pos:line="4" pos:column="20">*<pos:position pos:line="4" pos:column="21"/></modifier></type><name pos:line="4" pos:column="21">procattr<pos:position pos:line="4" pos:column="29"/></name></decl>;<pos:position pos:line="4" pos:column="30"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="5" pos:column="5">apr_proc_t<pos:position pos:line="5" pos:column="15"/></name> <modifier pos:line="5" pos:column="16">*<pos:position pos:line="5" pos:column="17"/></modifier></type><name pos:line="5" pos:column="17">procnew<pos:position pos:line="5" pos:column="24"/></name> <init pos:line="5" pos:column="25">= <expr><name pos:line="5" pos:column="27">NULL<pos:position pos:line="5" pos:column="31"/></name></expr></init></decl>;<pos:position pos:line="5" pos:column="32"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="6" pos:column="5">apr_status_t<pos:position pos:line="6" pos:column="17"/></name></type> <name pos:line="6" pos:column="18">status<pos:position pos:line="6" pos:column="24"/></name></decl>;<pos:position pos:line="6" pos:column="25"/></decl_stmt>

    <if pos:line="8" pos:column="5">if <condition pos:line="8" pos:column="8">(<expr><operator pos:line="8" pos:column="9">(<pos:position pos:line="8" pos:column="10"/></operator><operator pos:line="8" pos:column="10">(<pos:position pos:line="8" pos:column="11"/></operator><name pos:line="8" pos:column="11">status<pos:position pos:line="8" pos:column="17"/></name> <operator pos:line="8" pos:column="18">=<pos:position pos:line="8" pos:column="19"/></operator> <call><name pos:line="8" pos:column="20">apr_procattr_create<pos:position pos:line="8" pos:column="39"/></name><argument_list pos:line="8" pos:column="39">(<argument><expr><operator pos:line="8" pos:column="40">&amp;<pos:position pos:line="8" pos:column="45"/></operator><name pos:line="8" pos:column="41">procattr<pos:position pos:line="8" pos:column="49"/></name></expr></argument>, <argument><expr><name><name pos:line="8" pos:column="51">pl<pos:position pos:line="8" pos:column="53"/></name><operator pos:line="8" pos:column="53">-&gt;<pos:position pos:line="8" pos:column="58"/></operator><name pos:line="8" pos:column="55">p<pos:position pos:line="8" pos:column="56"/></name></name></expr></argument>)<pos:position pos:line="8" pos:column="57"/></argument_list></call><operator pos:line="8" pos:column="57">)<pos:position pos:line="8" pos:column="58"/></operator> <operator pos:line="8" pos:column="59">!=<pos:position pos:line="8" pos:column="61"/></operator> <name pos:line="8" pos:column="62">APR_SUCCESS<pos:position pos:line="8" pos:column="73"/></name><operator pos:line="8" pos:column="73">)<pos:position pos:line="8" pos:column="74"/></operator> <operator pos:line="8" pos:column="75">||<pos:position pos:line="8" pos:column="77"/></operator>
        <operator pos:line="9" pos:column="9">(<pos:position pos:line="9" pos:column="10"/></operator><operator pos:line="9" pos:column="10">(<pos:position pos:line="9" pos:column="11"/></operator><name pos:line="9" pos:column="11">status<pos:position pos:line="9" pos:column="17"/></name> <operator pos:line="9" pos:column="18">=<pos:position pos:line="9" pos:column="19"/></operator> <call><name pos:line="9" pos:column="20">apr_procattr_child_in_set<pos:position pos:line="9" pos:column="45"/></name><argument_list pos:line="9" pos:column="45">(<argument><expr><name pos:line="9" pos:column="46">procattr<pos:position pos:line="9" pos:column="54"/></name></expr></argument>,
                                             <argument><expr><call><name pos:line="10" pos:column="46">ap_piped_log_read_fd<pos:position pos:line="10" pos:column="66"/></name><argument_list pos:line="10" pos:column="66">(<argument><expr><name pos:line="10" pos:column="67">pl<pos:position pos:line="10" pos:column="69"/></name></expr></argument>)<pos:position pos:line="10" pos:column="70"/></argument_list></call></expr></argument>,
                                             <argument><expr><call><name pos:line="11" pos:column="46">ap_piped_log_write_fd<pos:position pos:line="11" pos:column="67"/></name><argument_list pos:line="11" pos:column="67">(<argument><expr><name pos:line="11" pos:column="68">pl<pos:position pos:line="11" pos:column="70"/></name></expr></argument>)<pos:position pos:line="11" pos:column="71"/></argument_list></call></expr></argument>)<pos:position pos:line="11" pos:column="72"/></argument_list></call><operator pos:line="11" pos:column="72">)<pos:position pos:line="11" pos:column="73"/></operator>
        <operator pos:line="12" pos:column="9">!=<pos:position pos:line="12" pos:column="11"/></operator> <name pos:line="12" pos:column="12">APR_SUCCESS<pos:position pos:line="12" pos:column="23"/></name><operator pos:line="12" pos:column="23">)<pos:position pos:line="12" pos:column="24"/></operator> <operator pos:line="12" pos:column="25">||<pos:position pos:line="12" pos:column="27"/></operator>
        <operator pos:line="13" pos:column="9">(<pos:position pos:line="13" pos:column="10"/></operator><operator pos:line="13" pos:column="10">(<pos:position pos:line="13" pos:column="11"/></operator><name pos:line="13" pos:column="11">status<pos:position pos:line="13" pos:column="17"/></name> <operator pos:line="13" pos:column="18">=<pos:position pos:line="13" pos:column="19"/></operator> <call><name pos:line="13" pos:column="20">apr_procattr_child_errfn_set<pos:position pos:line="13" pos:column="48"/></name><argument_list pos:line="13" pos:column="48">(<argument><expr><name pos:line="13" pos:column="49">procattr<pos:position pos:line="13" pos:column="57"/></name></expr></argument>, <argument><expr><name pos:line="13" pos:column="59">log_child_errfn<pos:position pos:line="13" pos:column="74"/></name></expr></argument>)<pos:position pos:line="13" pos:column="75"/></argument_list></call><operator pos:line="13" pos:column="75">)<pos:position pos:line="13" pos:column="76"/></operator>
         <operator pos:line="14" pos:column="10">!=<pos:position pos:line="14" pos:column="12"/></operator> <name pos:line="14" pos:column="13">APR_SUCCESS<pos:position pos:line="14" pos:column="24"/></name><operator pos:line="14" pos:column="24">)<pos:position pos:line="14" pos:column="25"/></operator> <operator pos:line="14" pos:column="26">||<pos:position pos:line="14" pos:column="28"/></operator>
        <operator pos:line="15" pos:column="9">(<pos:position pos:line="15" pos:column="10"/></operator><operator pos:line="15" pos:column="10">(<pos:position pos:line="15" pos:column="11"/></operator><name pos:line="15" pos:column="11">status<pos:position pos:line="15" pos:column="17"/></name> <operator pos:line="15" pos:column="18">=<pos:position pos:line="15" pos:column="19"/></operator> <call><name pos:line="15" pos:column="20">apr_procattr_error_check_set<pos:position pos:line="15" pos:column="48"/></name><argument_list pos:line="15" pos:column="48">(<argument><expr><name pos:line="15" pos:column="49">procattr<pos:position pos:line="15" pos:column="57"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="15" pos:column="59">1<pos:position pos:line="15" pos:column="60"/></literal></expr></argument>)<pos:position pos:line="15" pos:column="61"/></argument_list></call><operator pos:line="15" pos:column="61">)<pos:position pos:line="15" pos:column="62"/></operator> <operator pos:line="15" pos:column="63">!=<pos:position pos:line="15" pos:column="65"/></operator> <name pos:line="15" pos:column="66">APR_SUCCESS<pos:position pos:line="15" pos:column="77"/></name><operator pos:line="15" pos:column="77">)<pos:position pos:line="15" pos:column="78"/></operator></expr>)<pos:position pos:line="15" pos:column="79"/></condition><then pos:line="15" pos:column="79"> <block pos:line="15" pos:column="80">{
        <decl_stmt><decl><type><name pos:line="16" pos:column="9">char<pos:position pos:line="16" pos:column="13"/></name></type> <name><name pos:line="16" pos:column="14">buf<pos:position pos:line="16" pos:column="17"/></name><index pos:line="16" pos:column="17">[<expr><literal type="number" pos:line="16" pos:column="18">120<pos:position pos:line="16" pos:column="21"/></literal></expr>]<pos:position pos:line="16" pos:column="22"/></index></name></decl>;<pos:position pos:line="16" pos:column="23"/></decl_stmt>
        <comment type="block" pos:line="17" pos:column="9">/* Something bad happened, give up and go away. */</comment>
        <expr_stmt><expr><call><name pos:line="18" pos:column="9">ap_log_error<pos:position pos:line="18" pos:column="21"/></name><argument_list pos:line="18" pos:column="21">(<argument><expr><name pos:line="18" pos:column="22">APLOG_MARK<pos:position pos:line="18" pos:column="32"/></name></expr></argument>, <argument><expr><name pos:line="18" pos:column="34">APLOG_STARTUP<pos:position pos:line="18" pos:column="47"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="18" pos:column="49">0<pos:position pos:line="18" pos:column="50"/></literal></expr></argument>, <argument><expr><name pos:line="18" pos:column="52">NULL<pos:position pos:line="18" pos:column="56"/></name></expr></argument>,
                     <argument><expr><literal type="string" pos:line="19" pos:column="22">"piped_log_spawn: unable to setup child process '%s': %s"<pos:position pos:line="19" pos:column="79"/></literal></expr></argument>,
                     <argument><expr><name><name pos:line="20" pos:column="22">pl<pos:position pos:line="20" pos:column="24"/></name><operator pos:line="20" pos:column="24">-&gt;<pos:position pos:line="20" pos:column="29"/></operator><name pos:line="20" pos:column="26">program<pos:position pos:line="20" pos:column="33"/></name></name></expr></argument>, <argument><expr><call><name pos:line="20" pos:column="35">apr_strerror<pos:position pos:line="20" pos:column="47"/></name><argument_list pos:line="20" pos:column="47">(<argument><expr><name pos:line="20" pos:column="48">status<pos:position pos:line="20" pos:column="54"/></name></expr></argument>, <argument><expr><name pos:line="20" pos:column="56">buf<pos:position pos:line="20" pos:column="59"/></name></expr></argument>, <argument><expr><sizeof pos:line="20" pos:column="61">sizeof<argument_list pos:line="20" pos:column="67">(<argument><expr><name pos:line="20" pos:column="68">buf<pos:position pos:line="20" pos:column="71"/></name></expr></argument>)<pos:position pos:line="20" pos:column="72"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="20" pos:column="73"/></argument_list></call></expr></argument>)<pos:position pos:line="20" pos:column="74"/></argument_list></call></expr>;<pos:position pos:line="20" pos:column="75"/></expr_stmt>
        <expr_stmt><expr><name pos:line="21" pos:column="9">rc<pos:position pos:line="21" pos:column="11"/></name> <operator pos:line="21" pos:column="12">=<pos:position pos:line="21" pos:column="13"/></operator> <operator pos:line="21" pos:column="14">-<pos:position pos:line="21" pos:column="15"/></operator><literal type="number" pos:line="21" pos:column="15">1<pos:position pos:line="21" pos:column="16"/></literal></expr>;<pos:position pos:line="21" pos:column="17"/></expr_stmt>
    }<pos:position pos:line="22" pos:column="6"/></block></then>
    <else pos:line="23" pos:column="5">else <block pos:line="23" pos:column="10">{
        <decl_stmt><decl><type><name pos:line="24" pos:column="9">char<pos:position pos:line="24" pos:column="13"/></name> <modifier pos:line="24" pos:column="14">*<pos:position pos:line="24" pos:column="15"/></modifier><modifier pos:line="24" pos:column="15">*<pos:position pos:line="24" pos:column="16"/></modifier></type><name pos:line="24" pos:column="16">args<pos:position pos:line="24" pos:column="20"/></name></decl>;<pos:position pos:line="24" pos:column="21"/></decl_stmt>
        <decl_stmt><decl><type><specifier pos:line="25" pos:column="9">const<pos:position pos:line="25" pos:column="14"/></specifier> <name pos:line="25" pos:column="15">char<pos:position pos:line="25" pos:column="19"/></name> <modifier pos:line="25" pos:column="20">*<pos:position pos:line="25" pos:column="21"/></modifier></type><name pos:line="25" pos:column="21">pname<pos:position pos:line="25" pos:column="26"/></name></decl>;<pos:position pos:line="25" pos:column="27"/></decl_stmt>

        <expr_stmt><expr><call><name pos:line="27" pos:column="9">apr_tokenize_to_argv<pos:position pos:line="27" pos:column="29"/></name><argument_list pos:line="27" pos:column="29">(<argument><expr><name><name pos:line="27" pos:column="30">pl<pos:position pos:line="27" pos:column="32"/></name><operator pos:line="27" pos:column="32">-&gt;<pos:position pos:line="27" pos:column="37"/></operator><name pos:line="27" pos:column="34">program<pos:position pos:line="27" pos:column="41"/></name></name></expr></argument>, <argument><expr><operator pos:line="27" pos:column="43">&amp;<pos:position pos:line="27" pos:column="48"/></operator><name pos:line="27" pos:column="44">args<pos:position pos:line="27" pos:column="48"/></name></expr></argument>, <argument><expr><name><name pos:line="27" pos:column="50">pl<pos:position pos:line="27" pos:column="52"/></name><operator pos:line="27" pos:column="52">-&gt;<pos:position pos:line="27" pos:column="57"/></operator><name pos:line="27" pos:column="54">p<pos:position pos:line="27" pos:column="55"/></name></name></expr></argument>)<pos:position pos:line="27" pos:column="56"/></argument_list></call></expr>;<pos:position pos:line="27" pos:column="57"/></expr_stmt>
        <expr_stmt><expr><name pos:line="28" pos:column="9">pname<pos:position pos:line="28" pos:column="14"/></name> <operator pos:line="28" pos:column="15">=<pos:position pos:line="28" pos:column="16"/></operator> <call><name pos:line="28" pos:column="17">apr_pstrdup<pos:position pos:line="28" pos:column="28"/></name><argument_list pos:line="28" pos:column="28">(<argument><expr><name><name pos:line="28" pos:column="29">pl<pos:position pos:line="28" pos:column="31"/></name><operator pos:line="28" pos:column="31">-&gt;<pos:position pos:line="28" pos:column="36"/></operator><name pos:line="28" pos:column="33">p<pos:position pos:line="28" pos:column="34"/></name></name></expr></argument>, <argument><expr><name><name pos:line="28" pos:column="36">args<pos:position pos:line="28" pos:column="40"/></name><index pos:line="28" pos:column="40">[<expr><literal type="number" pos:line="28" pos:column="41">0<pos:position pos:line="28" pos:column="42"/></literal></expr>]<pos:position pos:line="28" pos:column="43"/></index></name></expr></argument>)<pos:position pos:line="28" pos:column="44"/></argument_list></call></expr>;<pos:position pos:line="28" pos:column="45"/></expr_stmt>
        <expr_stmt><expr><name pos:line="29" pos:column="9">procnew<pos:position pos:line="29" pos:column="16"/></name> <operator pos:line="29" pos:column="17">=<pos:position pos:line="29" pos:column="18"/></operator> <call><name pos:line="29" pos:column="19">apr_pcalloc<pos:position pos:line="29" pos:column="30"/></name><argument_list pos:line="29" pos:column="30">(<argument><expr><name><name pos:line="29" pos:column="31">pl<pos:position pos:line="29" pos:column="33"/></name><operator pos:line="29" pos:column="33">-&gt;<pos:position pos:line="29" pos:column="38"/></operator><name pos:line="29" pos:column="35">p<pos:position pos:line="29" pos:column="36"/></name></name></expr></argument>, <argument><expr><sizeof pos:line="29" pos:column="38">sizeof<argument_list pos:line="29" pos:column="44">(<argument><expr><name pos:line="29" pos:column="45">apr_proc_t<pos:position pos:line="29" pos:column="55"/></name></expr></argument>)<pos:position pos:line="29" pos:column="56"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="29" pos:column="57"/></argument_list></call></expr>;<pos:position pos:line="29" pos:column="58"/></expr_stmt>
        <expr_stmt><expr><name pos:line="30" pos:column="9">status<pos:position pos:line="30" pos:column="15"/></name> <operator pos:line="30" pos:column="16">=<pos:position pos:line="30" pos:column="17"/></operator> <call><name pos:line="30" pos:column="18">apr_proc_create<pos:position pos:line="30" pos:column="33"/></name><argument_list pos:line="30" pos:column="33">(<argument><expr><name pos:line="30" pos:column="34">procnew<pos:position pos:line="30" pos:column="41"/></name></expr></argument>, <argument><expr><name pos:line="30" pos:column="43">pname<pos:position pos:line="30" pos:column="48"/></name></expr></argument>, <argument><expr><operator pos:line="30" pos:column="50">(<pos:position pos:line="30" pos:column="51"/></operator><specifier pos:line="30" pos:column="51">const<pos:position pos:line="30" pos:column="56"/></specifier> <name pos:line="30" pos:column="57">char<pos:position pos:line="30" pos:column="61"/></name> <operator pos:line="30" pos:column="62">*<pos:position pos:line="30" pos:column="63"/></operator> <specifier pos:line="30" pos:column="64">const<pos:position pos:line="30" pos:column="69"/></specifier> <operator pos:line="30" pos:column="70">*<pos:position pos:line="30" pos:column="71"/></operator><operator pos:line="30" pos:column="71">)<pos:position pos:line="30" pos:column="72"/></operator> <name pos:line="30" pos:column="73">args<pos:position pos:line="30" pos:column="77"/></name></expr></argument>,
                                 <argument><expr><name pos:line="31" pos:column="34">NULL<pos:position pos:line="31" pos:column="38"/></name></expr></argument>, <argument><expr><name pos:line="31" pos:column="40">procattr<pos:position pos:line="31" pos:column="48"/></name></expr></argument>, <argument><expr><name><name pos:line="31" pos:column="50">pl<pos:position pos:line="31" pos:column="52"/></name><operator pos:line="31" pos:column="52">-&gt;<pos:position pos:line="31" pos:column="57"/></operator><name pos:line="31" pos:column="54">p<pos:position pos:line="31" pos:column="55"/></name></name></expr></argument>)<pos:position pos:line="31" pos:column="56"/></argument_list></call></expr>;<pos:position pos:line="31" pos:column="57"/></expr_stmt>

        <if pos:line="33" pos:column="9">if <condition pos:line="33" pos:column="12">(<expr><name pos:line="33" pos:column="13">status<pos:position pos:line="33" pos:column="19"/></name> <operator pos:line="33" pos:column="20">==<pos:position pos:line="33" pos:column="22"/></operator> <name pos:line="33" pos:column="23">APR_SUCCESS<pos:position pos:line="33" pos:column="34"/></name></expr>)<pos:position pos:line="33" pos:column="35"/></condition><then pos:line="33" pos:column="35"> <block pos:line="33" pos:column="36">{
            <expr_stmt><expr><name><name pos:line="34" pos:column="13">pl<pos:position pos:line="34" pos:column="15"/></name><operator pos:line="34" pos:column="15">-&gt;<pos:position pos:line="34" pos:column="20"/></operator><name pos:line="34" pos:column="17">pid<pos:position pos:line="34" pos:column="20"/></name></name> <operator pos:line="34" pos:column="21">=<pos:position pos:line="34" pos:column="22"/></operator> <name pos:line="34" pos:column="23">procnew<pos:position pos:line="34" pos:column="30"/></name></expr>;<pos:position pos:line="34" pos:column="31"/></expr_stmt>
            <expr_stmt><expr><call><name pos:line="35" pos:column="13">ap_piped_log_write_fd<pos:position pos:line="35" pos:column="34"/></name><argument_list pos:line="35" pos:column="34">(<argument><expr><name pos:line="35" pos:column="35">pl<pos:position pos:line="35" pos:column="37"/></name></expr></argument>)<pos:position pos:line="35" pos:column="38"/></argument_list></call> <operator pos:line="35" pos:column="39">=<pos:position pos:line="35" pos:column="40"/></operator> <name><name pos:line="35" pos:column="41">procnew<pos:position pos:line="35" pos:column="48"/></name><operator pos:line="35" pos:column="48">-&gt;<pos:position pos:line="35" pos:column="53"/></operator><name pos:line="35" pos:column="50">in<pos:position pos:line="35" pos:column="52"/></name></name></expr>;<pos:position pos:line="35" pos:column="53"/></expr_stmt>
            <expr_stmt><expr><call><name pos:line="36" pos:column="13">apr_proc_other_child_register<pos:position pos:line="36" pos:column="42"/></name><argument_list pos:line="36" pos:column="42">(<argument><expr><name pos:line="36" pos:column="43">procnew<pos:position pos:line="36" pos:column="50"/></name></expr></argument>, <argument><expr><name pos:line="36" pos:column="52">piped_log_maintenance<pos:position pos:line="36" pos:column="73"/></name></expr></argument>, <argument><expr><name pos:line="36" pos:column="75">pl<pos:position pos:line="36" pos:column="77"/></name></expr></argument>,
                                          <argument><expr><call><name pos:line="37" pos:column="43">ap_piped_log_write_fd<pos:position pos:line="37" pos:column="64"/></name><argument_list pos:line="37" pos:column="64">(<argument><expr><name pos:line="37" pos:column="65">pl<pos:position pos:line="37" pos:column="67"/></name></expr></argument>)<pos:position pos:line="37" pos:column="68"/></argument_list></call></expr></argument>, <argument><expr><name><name pos:line="37" pos:column="70">pl<pos:position pos:line="37" pos:column="72"/></name><operator pos:line="37" pos:column="72">-&gt;<pos:position pos:line="37" pos:column="77"/></operator><name pos:line="37" pos:column="74">p<pos:position pos:line="37" pos:column="75"/></name></name></expr></argument>)<pos:position pos:line="37" pos:column="76"/></argument_list></call></expr>;<pos:position pos:line="37" pos:column="77"/></expr_stmt>
        }<pos:position pos:line="38" pos:column="10"/></block></then>
        <else pos:line="39" pos:column="9">else <block pos:line="39" pos:column="14">{
            <decl_stmt><decl><type><name pos:line="40" pos:column="13">char<pos:position pos:line="40" pos:column="17"/></name></type> <name><name pos:line="40" pos:column="18">buf<pos:position pos:line="40" pos:column="21"/></name><index pos:line="40" pos:column="21">[<expr><literal type="number" pos:line="40" pos:column="22">120<pos:position pos:line="40" pos:column="25"/></literal></expr>]<pos:position pos:line="40" pos:column="26"/></index></name></decl>;<pos:position pos:line="40" pos:column="27"/></decl_stmt>
            <comment type="block" pos:line="41" pos:column="13">/* Something bad happened, give up and go away. */</comment>
            <expr_stmt><expr><call><name pos:line="42" pos:column="13">ap_log_error<pos:position pos:line="42" pos:column="25"/></name><argument_list pos:line="42" pos:column="25">(<argument><expr><name pos:line="42" pos:column="26">APLOG_MARK<pos:position pos:line="42" pos:column="36"/></name></expr></argument>, <argument><expr><name pos:line="42" pos:column="38">APLOG_STARTUP<pos:position pos:line="42" pos:column="51"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="42" pos:column="53">0<pos:position pos:line="42" pos:column="54"/></literal></expr></argument>, <argument><expr><name pos:line="42" pos:column="56">NULL<pos:position pos:line="42" pos:column="60"/></name></expr></argument>,
                         <argument><expr><literal type="string" pos:line="43" pos:column="26">"unable to start piped log program '%s': %s"<pos:position pos:line="43" pos:column="70"/></literal></expr></argument>,
                         <argument><expr><name><name pos:line="44" pos:column="26">pl<pos:position pos:line="44" pos:column="28"/></name><operator pos:line="44" pos:column="28">-&gt;<pos:position pos:line="44" pos:column="33"/></operator><name pos:line="44" pos:column="30">program<pos:position pos:line="44" pos:column="37"/></name></name></expr></argument>, <argument><expr><call><name pos:line="44" pos:column="39">apr_strerror<pos:position pos:line="44" pos:column="51"/></name><argument_list pos:line="44" pos:column="51">(<argument><expr><name pos:line="44" pos:column="52">status<pos:position pos:line="44" pos:column="58"/></name></expr></argument>, <argument><expr><name pos:line="44" pos:column="60">buf<pos:position pos:line="44" pos:column="63"/></name></expr></argument>, <argument><expr><sizeof pos:line="44" pos:column="65">sizeof<argument_list pos:line="44" pos:column="71">(<argument><expr><name pos:line="44" pos:column="72">buf<pos:position pos:line="44" pos:column="75"/></name></expr></argument>)<pos:position pos:line="44" pos:column="76"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="44" pos:column="77"/></argument_list></call></expr></argument>)<pos:position pos:line="44" pos:column="78"/></argument_list></call></expr>;<pos:position pos:line="44" pos:column="79"/></expr_stmt>
            <expr_stmt><expr><name pos:line="45" pos:column="13">rc<pos:position pos:line="45" pos:column="15"/></name> <operator pos:line="45" pos:column="16">=<pos:position pos:line="45" pos:column="17"/></operator> <operator pos:line="45" pos:column="18">-<pos:position pos:line="45" pos:column="19"/></operator><literal type="number" pos:line="45" pos:column="19">1<pos:position pos:line="45" pos:column="20"/></literal></expr>;<pos:position pos:line="45" pos:column="21"/></expr_stmt>
        }<pos:position pos:line="46" pos:column="10"/></block></else></if>
    }<pos:position pos:line="47" pos:column="6"/></block></else></if>

    <return pos:line="49" pos:column="5">return <expr><name pos:line="49" pos:column="12">rc<pos:position pos:line="49" pos:column="14"/></name></expr>;<pos:position pos:line="49" pos:column="15"/></return>
}<pos:position pos:line="50" pos:column="2"/></block></function></unit>

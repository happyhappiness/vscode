<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/httpd/gumtree/httpd_repos_function_3842_httpd-2.2.34.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">void<pos:position pos:line="1" pos:column="5"/></name></type> <name pos:line="1" pos:column="6">apr_signal_init<pos:position pos:line="1" pos:column="21"/></name><parameter_list pos:line="1" pos:column="21">(<parameter><decl><type><name pos:line="1" pos:column="22">apr_pool_t<pos:position pos:line="1" pos:column="32"/></name> <modifier pos:line="1" pos:column="33">*<pos:position pos:line="1" pos:column="34"/></modifier></type><name pos:line="1" pos:column="34">pglobal<pos:position pos:line="1" pos:column="41"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="42"/></parameter_list>
<block pos:line="2" pos:column="1">{
    <decl_stmt><decl><type><name pos:line="3" pos:column="5">int<pos:position pos:line="3" pos:column="8"/></name></type> <name pos:line="3" pos:column="9">sig<pos:position pos:line="3" pos:column="12"/></name></decl>;<pos:position pos:line="3" pos:column="13"/></decl_stmt>

    <expr_stmt><expr><call><name pos:line="5" pos:column="5">store_desc<pos:position pos:line="5" pos:column="15"/></name><argument_list pos:line="5" pos:column="15">(<argument><expr><literal type="number" pos:line="5" pos:column="16">0<pos:position pos:line="5" pos:column="17"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="5" pos:column="19">"Signal 0"<pos:position pos:line="5" pos:column="29"/></literal></expr></argument>)<pos:position pos:line="5" pos:column="30"/></argument_list></call></expr>;<pos:position pos:line="5" pos:column="31"/></expr_stmt>

<cpp:ifdef pos:line="7" pos:column="1">#<cpp:directive pos:line="7" pos:column="2">ifdef<pos:position pos:line="7" pos:column="7"/></cpp:directive> <name pos:line="7" pos:column="8">SIGHUP<pos:position pos:line="7" pos:column="14"/></name></cpp:ifdef>
    <expr_stmt><expr><call><name pos:line="8" pos:column="5">store_desc<pos:position pos:line="8" pos:column="15"/></name><argument_list pos:line="8" pos:column="15">(<argument><expr><name pos:line="8" pos:column="16">SIGHUP<pos:position pos:line="8" pos:column="22"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="8" pos:column="24">"Hangup"<pos:position pos:line="8" pos:column="32"/></literal></expr></argument>)<pos:position pos:line="8" pos:column="33"/></argument_list></call></expr>;<pos:position pos:line="8" pos:column="34"/></expr_stmt>
<cpp:endif pos:line="9" pos:column="1">#<cpp:directive pos:line="9" pos:column="2">endif<pos:position pos:line="9" pos:column="7"/></cpp:directive></cpp:endif>
<cpp:ifdef pos:line="10" pos:column="1">#<cpp:directive pos:line="10" pos:column="2">ifdef<pos:position pos:line="10" pos:column="7"/></cpp:directive> <name pos:line="10" pos:column="8">SIGINT<pos:position pos:line="10" pos:column="14"/></name></cpp:ifdef>
    <expr_stmt><expr><call><name pos:line="11" pos:column="5">store_desc<pos:position pos:line="11" pos:column="15"/></name><argument_list pos:line="11" pos:column="15">(<argument><expr><name pos:line="11" pos:column="16">SIGINT<pos:position pos:line="11" pos:column="22"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="11" pos:column="24">"Interrupt"<pos:position pos:line="11" pos:column="35"/></literal></expr></argument>)<pos:position pos:line="11" pos:column="36"/></argument_list></call></expr>;<pos:position pos:line="11" pos:column="37"/></expr_stmt>
<cpp:endif pos:line="12" pos:column="1">#<cpp:directive pos:line="12" pos:column="2">endif<pos:position pos:line="12" pos:column="7"/></cpp:directive></cpp:endif>
<cpp:ifdef pos:line="13" pos:column="1">#<cpp:directive pos:line="13" pos:column="2">ifdef<pos:position pos:line="13" pos:column="7"/></cpp:directive> <name pos:line="13" pos:column="8">SIGQUIT<pos:position pos:line="13" pos:column="15"/></name></cpp:ifdef>
    <expr_stmt><expr><call><name pos:line="14" pos:column="5">store_desc<pos:position pos:line="14" pos:column="15"/></name><argument_list pos:line="14" pos:column="15">(<argument><expr><name pos:line="14" pos:column="16">SIGQUIT<pos:position pos:line="14" pos:column="23"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="14" pos:column="25">"Quit"<pos:position pos:line="14" pos:column="31"/></literal></expr></argument>)<pos:position pos:line="14" pos:column="32"/></argument_list></call></expr>;<pos:position pos:line="14" pos:column="33"/></expr_stmt>
<cpp:endif pos:line="15" pos:column="1">#<cpp:directive pos:line="15" pos:column="2">endif<pos:position pos:line="15" pos:column="7"/></cpp:directive></cpp:endif>
<cpp:ifdef pos:line="16" pos:column="1">#<cpp:directive pos:line="16" pos:column="2">ifdef<pos:position pos:line="16" pos:column="7"/></cpp:directive> <name pos:line="16" pos:column="8">SIGILL<pos:position pos:line="16" pos:column="14"/></name></cpp:ifdef>
    <expr_stmt><expr><call><name pos:line="17" pos:column="5">store_desc<pos:position pos:line="17" pos:column="15"/></name><argument_list pos:line="17" pos:column="15">(<argument><expr><name pos:line="17" pos:column="16">SIGILL<pos:position pos:line="17" pos:column="22"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="17" pos:column="24">"Illegal instruction"<pos:position pos:line="17" pos:column="45"/></literal></expr></argument>)<pos:position pos:line="17" pos:column="46"/></argument_list></call></expr>;<pos:position pos:line="17" pos:column="47"/></expr_stmt>
<cpp:endif pos:line="18" pos:column="1">#<cpp:directive pos:line="18" pos:column="2">endif<pos:position pos:line="18" pos:column="7"/></cpp:directive></cpp:endif>
<cpp:ifdef pos:line="19" pos:column="1">#<cpp:directive pos:line="19" pos:column="2">ifdef<pos:position pos:line="19" pos:column="7"/></cpp:directive> <name pos:line="19" pos:column="8">SIGTRAP<pos:position pos:line="19" pos:column="15"/></name></cpp:ifdef>
    <expr_stmt><expr><call><name pos:line="20" pos:column="5">store_desc<pos:position pos:line="20" pos:column="15"/></name><argument_list pos:line="20" pos:column="15">(<argument><expr><name pos:line="20" pos:column="16">SIGTRAP<pos:position pos:line="20" pos:column="23"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="20" pos:column="25">"Trace/BPT trap"<pos:position pos:line="20" pos:column="41"/></literal></expr></argument>)<pos:position pos:line="20" pos:column="42"/></argument_list></call></expr>;<pos:position pos:line="20" pos:column="43"/></expr_stmt>
<cpp:endif pos:line="21" pos:column="1">#<cpp:directive pos:line="21" pos:column="2">endif<pos:position pos:line="21" pos:column="7"/></cpp:directive></cpp:endif>
<cpp:ifdef pos:line="22" pos:column="1">#<cpp:directive pos:line="22" pos:column="2">ifdef<pos:position pos:line="22" pos:column="7"/></cpp:directive> <name pos:line="22" pos:column="8">SIGIOT<pos:position pos:line="22" pos:column="14"/></name></cpp:ifdef>
    <expr_stmt><expr><call><name pos:line="23" pos:column="5">store_desc<pos:position pos:line="23" pos:column="15"/></name><argument_list pos:line="23" pos:column="15">(<argument><expr><name pos:line="23" pos:column="16">SIGIOT<pos:position pos:line="23" pos:column="22"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="23" pos:column="24">"IOT instruction"<pos:position pos:line="23" pos:column="41"/></literal></expr></argument>)<pos:position pos:line="23" pos:column="42"/></argument_list></call></expr>;<pos:position pos:line="23" pos:column="43"/></expr_stmt>
<cpp:endif pos:line="24" pos:column="1">#<cpp:directive pos:line="24" pos:column="2">endif<pos:position pos:line="24" pos:column="7"/></cpp:directive></cpp:endif>
<cpp:ifdef pos:line="25" pos:column="1">#<cpp:directive pos:line="25" pos:column="2">ifdef<pos:position pos:line="25" pos:column="7"/></cpp:directive> <name pos:line="25" pos:column="8">SIGABRT<pos:position pos:line="25" pos:column="15"/></name></cpp:ifdef>
    <expr_stmt><expr><call><name pos:line="26" pos:column="5">store_desc<pos:position pos:line="26" pos:column="15"/></name><argument_list pos:line="26" pos:column="15">(<argument><expr><name pos:line="26" pos:column="16">SIGABRT<pos:position pos:line="26" pos:column="23"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="26" pos:column="25">"Abort"<pos:position pos:line="26" pos:column="32"/></literal></expr></argument>)<pos:position pos:line="26" pos:column="33"/></argument_list></call></expr>;<pos:position pos:line="26" pos:column="34"/></expr_stmt>
<cpp:endif pos:line="27" pos:column="1">#<cpp:directive pos:line="27" pos:column="2">endif<pos:position pos:line="27" pos:column="7"/></cpp:directive></cpp:endif>
<cpp:ifdef pos:line="28" pos:column="1">#<cpp:directive pos:line="28" pos:column="2">ifdef<pos:position pos:line="28" pos:column="7"/></cpp:directive> <name pos:line="28" pos:column="8">SIGEMT<pos:position pos:line="28" pos:column="14"/></name></cpp:ifdef>
    <expr_stmt><expr><call><name pos:line="29" pos:column="5">store_desc<pos:position pos:line="29" pos:column="15"/></name><argument_list pos:line="29" pos:column="15">(<argument><expr><name pos:line="29" pos:column="16">SIGEMT<pos:position pos:line="29" pos:column="22"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="29" pos:column="24">"Emulator trap"<pos:position pos:line="29" pos:column="39"/></literal></expr></argument>)<pos:position pos:line="29" pos:column="40"/></argument_list></call></expr>;<pos:position pos:line="29" pos:column="41"/></expr_stmt>
<cpp:endif pos:line="30" pos:column="1">#<cpp:directive pos:line="30" pos:column="2">endif<pos:position pos:line="30" pos:column="7"/></cpp:directive></cpp:endif>
<cpp:ifdef pos:line="31" pos:column="1">#<cpp:directive pos:line="31" pos:column="2">ifdef<pos:position pos:line="31" pos:column="7"/></cpp:directive> <name pos:line="31" pos:column="8">SIGFPE<pos:position pos:line="31" pos:column="14"/></name></cpp:ifdef>
    <expr_stmt><expr><call><name pos:line="32" pos:column="5">store_desc<pos:position pos:line="32" pos:column="15"/></name><argument_list pos:line="32" pos:column="15">(<argument><expr><name pos:line="32" pos:column="16">SIGFPE<pos:position pos:line="32" pos:column="22"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="32" pos:column="24">"Arithmetic exception"<pos:position pos:line="32" pos:column="46"/></literal></expr></argument>)<pos:position pos:line="32" pos:column="47"/></argument_list></call></expr>;<pos:position pos:line="32" pos:column="48"/></expr_stmt>
<cpp:endif pos:line="33" pos:column="1">#<cpp:directive pos:line="33" pos:column="2">endif<pos:position pos:line="33" pos:column="7"/></cpp:directive></cpp:endif>
<cpp:ifdef pos:line="34" pos:column="1">#<cpp:directive pos:line="34" pos:column="2">ifdef<pos:position pos:line="34" pos:column="7"/></cpp:directive> <name pos:line="34" pos:column="8">SIGKILL<pos:position pos:line="34" pos:column="15"/></name></cpp:ifdef>
    <expr_stmt><expr><call><name pos:line="35" pos:column="5">store_desc<pos:position pos:line="35" pos:column="15"/></name><argument_list pos:line="35" pos:column="15">(<argument><expr><name pos:line="35" pos:column="16">SIGKILL<pos:position pos:line="35" pos:column="23"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="35" pos:column="25">"Killed"<pos:position pos:line="35" pos:column="33"/></literal></expr></argument>)<pos:position pos:line="35" pos:column="34"/></argument_list></call></expr>;<pos:position pos:line="35" pos:column="35"/></expr_stmt>
<cpp:endif pos:line="36" pos:column="1">#<cpp:directive pos:line="36" pos:column="2">endif<pos:position pos:line="36" pos:column="7"/></cpp:directive></cpp:endif>
<cpp:ifdef pos:line="37" pos:column="1">#<cpp:directive pos:line="37" pos:column="2">ifdef<pos:position pos:line="37" pos:column="7"/></cpp:directive> <name pos:line="37" pos:column="8">SIGBUS<pos:position pos:line="37" pos:column="14"/></name></cpp:ifdef>
    <expr_stmt><expr><call><name pos:line="38" pos:column="5">store_desc<pos:position pos:line="38" pos:column="15"/></name><argument_list pos:line="38" pos:column="15">(<argument><expr><name pos:line="38" pos:column="16">SIGBUS<pos:position pos:line="38" pos:column="22"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="38" pos:column="24">"Bus error"<pos:position pos:line="38" pos:column="35"/></literal></expr></argument>)<pos:position pos:line="38" pos:column="36"/></argument_list></call></expr>;<pos:position pos:line="38" pos:column="37"/></expr_stmt>
<cpp:endif pos:line="39" pos:column="1">#<cpp:directive pos:line="39" pos:column="2">endif<pos:position pos:line="39" pos:column="7"/></cpp:directive></cpp:endif>
<cpp:ifdef pos:line="40" pos:column="1">#<cpp:directive pos:line="40" pos:column="2">ifdef<pos:position pos:line="40" pos:column="7"/></cpp:directive> <name pos:line="40" pos:column="8">SIGSEGV<pos:position pos:line="40" pos:column="15"/></name></cpp:ifdef>
    <expr_stmt><expr><call><name pos:line="41" pos:column="5">store_desc<pos:position pos:line="41" pos:column="15"/></name><argument_list pos:line="41" pos:column="15">(<argument><expr><name pos:line="41" pos:column="16">SIGSEGV<pos:position pos:line="41" pos:column="23"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="41" pos:column="25">"Segmentation fault"<pos:position pos:line="41" pos:column="45"/></literal></expr></argument>)<pos:position pos:line="41" pos:column="46"/></argument_list></call></expr>;<pos:position pos:line="41" pos:column="47"/></expr_stmt>
<cpp:endif pos:line="42" pos:column="1">#<cpp:directive pos:line="42" pos:column="2">endif<pos:position pos:line="42" pos:column="7"/></cpp:directive></cpp:endif>
<cpp:ifdef pos:line="43" pos:column="1">#<cpp:directive pos:line="43" pos:column="2">ifdef<pos:position pos:line="43" pos:column="7"/></cpp:directive> <name pos:line="43" pos:column="8">SIGSYS<pos:position pos:line="43" pos:column="14"/></name></cpp:ifdef>
    <expr_stmt><expr><call><name pos:line="44" pos:column="5">store_desc<pos:position pos:line="44" pos:column="15"/></name><argument_list pos:line="44" pos:column="15">(<argument><expr><name pos:line="44" pos:column="16">SIGSYS<pos:position pos:line="44" pos:column="22"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="44" pos:column="24">"Bad system call"<pos:position pos:line="44" pos:column="41"/></literal></expr></argument>)<pos:position pos:line="44" pos:column="42"/></argument_list></call></expr>;<pos:position pos:line="44" pos:column="43"/></expr_stmt>
<cpp:endif pos:line="45" pos:column="1">#<cpp:directive pos:line="45" pos:column="2">endif<pos:position pos:line="45" pos:column="7"/></cpp:directive></cpp:endif>
<cpp:ifdef pos:line="46" pos:column="1">#<cpp:directive pos:line="46" pos:column="2">ifdef<pos:position pos:line="46" pos:column="7"/></cpp:directive> <name pos:line="46" pos:column="8">SIGPIPE<pos:position pos:line="46" pos:column="15"/></name></cpp:ifdef>
    <expr_stmt><expr><call><name pos:line="47" pos:column="5">store_desc<pos:position pos:line="47" pos:column="15"/></name><argument_list pos:line="47" pos:column="15">(<argument><expr><name pos:line="47" pos:column="16">SIGPIPE<pos:position pos:line="47" pos:column="23"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="47" pos:column="25">"Broken pipe"<pos:position pos:line="47" pos:column="38"/></literal></expr></argument>)<pos:position pos:line="47" pos:column="39"/></argument_list></call></expr>;<pos:position pos:line="47" pos:column="40"/></expr_stmt>
<cpp:endif pos:line="48" pos:column="1">#<cpp:directive pos:line="48" pos:column="2">endif<pos:position pos:line="48" pos:column="7"/></cpp:directive></cpp:endif>
<cpp:ifdef pos:line="49" pos:column="1">#<cpp:directive pos:line="49" pos:column="2">ifdef<pos:position pos:line="49" pos:column="7"/></cpp:directive> <name pos:line="49" pos:column="8">SIGALRM<pos:position pos:line="49" pos:column="15"/></name></cpp:ifdef>
    <expr_stmt><expr><call><name pos:line="50" pos:column="5">store_desc<pos:position pos:line="50" pos:column="15"/></name><argument_list pos:line="50" pos:column="15">(<argument><expr><name pos:line="50" pos:column="16">SIGALRM<pos:position pos:line="50" pos:column="23"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="50" pos:column="25">"Alarm clock"<pos:position pos:line="50" pos:column="38"/></literal></expr></argument>)<pos:position pos:line="50" pos:column="39"/></argument_list></call></expr>;<pos:position pos:line="50" pos:column="40"/></expr_stmt>
<cpp:endif pos:line="51" pos:column="1">#<cpp:directive pos:line="51" pos:column="2">endif<pos:position pos:line="51" pos:column="7"/></cpp:directive></cpp:endif>
<cpp:ifdef pos:line="52" pos:column="1">#<cpp:directive pos:line="52" pos:column="2">ifdef<pos:position pos:line="52" pos:column="7"/></cpp:directive> <name pos:line="52" pos:column="8">SIGTERM<pos:position pos:line="52" pos:column="15"/></name></cpp:ifdef>
    <expr_stmt><expr><call><name pos:line="53" pos:column="5">store_desc<pos:position pos:line="53" pos:column="15"/></name><argument_list pos:line="53" pos:column="15">(<argument><expr><name pos:line="53" pos:column="16">SIGTERM<pos:position pos:line="53" pos:column="23"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="53" pos:column="25">"Terminated"<pos:position pos:line="53" pos:column="37"/></literal></expr></argument>)<pos:position pos:line="53" pos:column="38"/></argument_list></call></expr>;<pos:position pos:line="53" pos:column="39"/></expr_stmt>
<cpp:endif pos:line="54" pos:column="1">#<cpp:directive pos:line="54" pos:column="2">endif<pos:position pos:line="54" pos:column="7"/></cpp:directive></cpp:endif>
<cpp:ifdef pos:line="55" pos:column="1">#<cpp:directive pos:line="55" pos:column="2">ifdef<pos:position pos:line="55" pos:column="7"/></cpp:directive> <name pos:line="55" pos:column="8">SIGUSR1<pos:position pos:line="55" pos:column="15"/></name></cpp:ifdef>
    <expr_stmt><expr><call><name pos:line="56" pos:column="5">store_desc<pos:position pos:line="56" pos:column="15"/></name><argument_list pos:line="56" pos:column="15">(<argument><expr><name pos:line="56" pos:column="16">SIGUSR1<pos:position pos:line="56" pos:column="23"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="56" pos:column="25">"User defined signal 1"<pos:position pos:line="56" pos:column="48"/></literal></expr></argument>)<pos:position pos:line="56" pos:column="49"/></argument_list></call></expr>;<pos:position pos:line="56" pos:column="50"/></expr_stmt>
<cpp:endif pos:line="57" pos:column="1">#<cpp:directive pos:line="57" pos:column="2">endif<pos:position pos:line="57" pos:column="7"/></cpp:directive></cpp:endif>
<cpp:ifdef pos:line="58" pos:column="1">#<cpp:directive pos:line="58" pos:column="2">ifdef<pos:position pos:line="58" pos:column="7"/></cpp:directive> <name pos:line="58" pos:column="8">SIGUSR2<pos:position pos:line="58" pos:column="15"/></name></cpp:ifdef>
    <expr_stmt><expr><call><name pos:line="59" pos:column="5">store_desc<pos:position pos:line="59" pos:column="15"/></name><argument_list pos:line="59" pos:column="15">(<argument><expr><name pos:line="59" pos:column="16">SIGUSR2<pos:position pos:line="59" pos:column="23"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="59" pos:column="25">"User defined signal 2"<pos:position pos:line="59" pos:column="48"/></literal></expr></argument>)<pos:position pos:line="59" pos:column="49"/></argument_list></call></expr>;<pos:position pos:line="59" pos:column="50"/></expr_stmt>
<cpp:endif pos:line="60" pos:column="1">#<cpp:directive pos:line="60" pos:column="2">endif<pos:position pos:line="60" pos:column="7"/></cpp:directive></cpp:endif>
<cpp:ifdef pos:line="61" pos:column="1">#<cpp:directive pos:line="61" pos:column="2">ifdef<pos:position pos:line="61" pos:column="7"/></cpp:directive> <name pos:line="61" pos:column="8">SIGCLD<pos:position pos:line="61" pos:column="14"/></name></cpp:ifdef>
    <expr_stmt><expr><call><name pos:line="62" pos:column="5">store_desc<pos:position pos:line="62" pos:column="15"/></name><argument_list pos:line="62" pos:column="15">(<argument><expr><name pos:line="62" pos:column="16">SIGCLD<pos:position pos:line="62" pos:column="22"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="62" pos:column="24">"Child status change"<pos:position pos:line="62" pos:column="45"/></literal></expr></argument>)<pos:position pos:line="62" pos:column="46"/></argument_list></call></expr>;<pos:position pos:line="62" pos:column="47"/></expr_stmt>
<cpp:endif pos:line="63" pos:column="1">#<cpp:directive pos:line="63" pos:column="2">endif<pos:position pos:line="63" pos:column="7"/></cpp:directive></cpp:endif>
<cpp:ifdef pos:line="64" pos:column="1">#<cpp:directive pos:line="64" pos:column="2">ifdef<pos:position pos:line="64" pos:column="7"/></cpp:directive> <name pos:line="64" pos:column="8">SIGCHLD<pos:position pos:line="64" pos:column="15"/></name></cpp:ifdef>
    <expr_stmt><expr><call><name pos:line="65" pos:column="5">store_desc<pos:position pos:line="65" pos:column="15"/></name><argument_list pos:line="65" pos:column="15">(<argument><expr><name pos:line="65" pos:column="16">SIGCHLD<pos:position pos:line="65" pos:column="23"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="65" pos:column="25">"Child status change"<pos:position pos:line="65" pos:column="46"/></literal></expr></argument>)<pos:position pos:line="65" pos:column="47"/></argument_list></call></expr>;<pos:position pos:line="65" pos:column="48"/></expr_stmt>
<cpp:endif pos:line="66" pos:column="1">#<cpp:directive pos:line="66" pos:column="2">endif<pos:position pos:line="66" pos:column="7"/></cpp:directive></cpp:endif>
<cpp:ifdef pos:line="67" pos:column="1">#<cpp:directive pos:line="67" pos:column="2">ifdef<pos:position pos:line="67" pos:column="7"/></cpp:directive> <name pos:line="67" pos:column="8">SIGPWR<pos:position pos:line="67" pos:column="14"/></name></cpp:ifdef>
    <expr_stmt><expr><call><name pos:line="68" pos:column="5">store_desc<pos:position pos:line="68" pos:column="15"/></name><argument_list pos:line="68" pos:column="15">(<argument><expr><name pos:line="68" pos:column="16">SIGPWR<pos:position pos:line="68" pos:column="22"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="68" pos:column="24">"Power-fail restart"<pos:position pos:line="68" pos:column="44"/></literal></expr></argument>)<pos:position pos:line="68" pos:column="45"/></argument_list></call></expr>;<pos:position pos:line="68" pos:column="46"/></expr_stmt>
<cpp:endif pos:line="69" pos:column="1">#<cpp:directive pos:line="69" pos:column="2">endif<pos:position pos:line="69" pos:column="7"/></cpp:directive></cpp:endif>
<cpp:ifdef pos:line="70" pos:column="1">#<cpp:directive pos:line="70" pos:column="2">ifdef<pos:position pos:line="70" pos:column="7"/></cpp:directive> <name pos:line="70" pos:column="8">SIGWINCH<pos:position pos:line="70" pos:column="16"/></name></cpp:ifdef>
    <expr_stmt><expr><call><name pos:line="71" pos:column="5">store_desc<pos:position pos:line="71" pos:column="15"/></name><argument_list pos:line="71" pos:column="15">(<argument><expr><name pos:line="71" pos:column="16">SIGWINCH<pos:position pos:line="71" pos:column="24"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="71" pos:column="26">"Window changed"<pos:position pos:line="71" pos:column="42"/></literal></expr></argument>)<pos:position pos:line="71" pos:column="43"/></argument_list></call></expr>;<pos:position pos:line="71" pos:column="44"/></expr_stmt>
<cpp:endif pos:line="72" pos:column="1">#<cpp:directive pos:line="72" pos:column="2">endif<pos:position pos:line="72" pos:column="7"/></cpp:directive></cpp:endif>
<cpp:ifdef pos:line="73" pos:column="1">#<cpp:directive pos:line="73" pos:column="2">ifdef<pos:position pos:line="73" pos:column="7"/></cpp:directive> <name pos:line="73" pos:column="8">SIGURG<pos:position pos:line="73" pos:column="14"/></name></cpp:ifdef>
    <expr_stmt><expr><call><name pos:line="74" pos:column="5">store_desc<pos:position pos:line="74" pos:column="15"/></name><argument_list pos:line="74" pos:column="15">(<argument><expr><name pos:line="74" pos:column="16">SIGURG<pos:position pos:line="74" pos:column="22"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="74" pos:column="24">"urgent socket condition"<pos:position pos:line="74" pos:column="49"/></literal></expr></argument>)<pos:position pos:line="74" pos:column="50"/></argument_list></call></expr>;<pos:position pos:line="74" pos:column="51"/></expr_stmt>
<cpp:endif pos:line="75" pos:column="1">#<cpp:directive pos:line="75" pos:column="2">endif<pos:position pos:line="75" pos:column="7"/></cpp:directive></cpp:endif>
<cpp:ifdef pos:line="76" pos:column="1">#<cpp:directive pos:line="76" pos:column="2">ifdef<pos:position pos:line="76" pos:column="7"/></cpp:directive> <name pos:line="76" pos:column="8">SIGPOLL<pos:position pos:line="76" pos:column="15"/></name></cpp:ifdef>
    <expr_stmt><expr><call><name pos:line="77" pos:column="5">store_desc<pos:position pos:line="77" pos:column="15"/></name><argument_list pos:line="77" pos:column="15">(<argument><expr><name pos:line="77" pos:column="16">SIGPOLL<pos:position pos:line="77" pos:column="23"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="77" pos:column="25">"Pollable event occurred"<pos:position pos:line="77" pos:column="50"/></literal></expr></argument>)<pos:position pos:line="77" pos:column="51"/></argument_list></call></expr>;<pos:position pos:line="77" pos:column="52"/></expr_stmt>
<cpp:endif pos:line="78" pos:column="1">#<cpp:directive pos:line="78" pos:column="2">endif<pos:position pos:line="78" pos:column="7"/></cpp:directive></cpp:endif>
<cpp:ifdef pos:line="79" pos:column="1">#<cpp:directive pos:line="79" pos:column="2">ifdef<pos:position pos:line="79" pos:column="7"/></cpp:directive> <name pos:line="79" pos:column="8">SIGIO<pos:position pos:line="79" pos:column="13"/></name></cpp:ifdef>
    <expr_stmt><expr><call><name pos:line="80" pos:column="5">store_desc<pos:position pos:line="80" pos:column="15"/></name><argument_list pos:line="80" pos:column="15">(<argument><expr><name pos:line="80" pos:column="16">SIGIO<pos:position pos:line="80" pos:column="21"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="80" pos:column="23">"socket I/O possible"<pos:position pos:line="80" pos:column="44"/></literal></expr></argument>)<pos:position pos:line="80" pos:column="45"/></argument_list></call></expr>;<pos:position pos:line="80" pos:column="46"/></expr_stmt>
<cpp:endif pos:line="81" pos:column="1">#<cpp:directive pos:line="81" pos:column="2">endif<pos:position pos:line="81" pos:column="7"/></cpp:directive></cpp:endif>
<cpp:ifdef pos:line="82" pos:column="1">#<cpp:directive pos:line="82" pos:column="2">ifdef<pos:position pos:line="82" pos:column="7"/></cpp:directive> <name pos:line="82" pos:column="8">SIGSTOP<pos:position pos:line="82" pos:column="15"/></name></cpp:ifdef>
    <expr_stmt><expr><call><name pos:line="83" pos:column="5">store_desc<pos:position pos:line="83" pos:column="15"/></name><argument_list pos:line="83" pos:column="15">(<argument><expr><name pos:line="83" pos:column="16">SIGSTOP<pos:position pos:line="83" pos:column="23"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="83" pos:column="25">"Stopped (signal)"<pos:position pos:line="83" pos:column="43"/></literal></expr></argument>)<pos:position pos:line="83" pos:column="44"/></argument_list></call></expr>;<pos:position pos:line="83" pos:column="45"/></expr_stmt>
<cpp:endif pos:line="84" pos:column="1">#<cpp:directive pos:line="84" pos:column="2">endif<pos:position pos:line="84" pos:column="7"/></cpp:directive></cpp:endif>
<cpp:ifdef pos:line="85" pos:column="1">#<cpp:directive pos:line="85" pos:column="2">ifdef<pos:position pos:line="85" pos:column="7"/></cpp:directive> <name pos:line="85" pos:column="8">SIGTSTP<pos:position pos:line="85" pos:column="15"/></name></cpp:ifdef>
    <expr_stmt><expr><call><name pos:line="86" pos:column="5">store_desc<pos:position pos:line="86" pos:column="15"/></name><argument_list pos:line="86" pos:column="15">(<argument><expr><name pos:line="86" pos:column="16">SIGTSTP<pos:position pos:line="86" pos:column="23"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="86" pos:column="25">"Stopped"<pos:position pos:line="86" pos:column="34"/></literal></expr></argument>)<pos:position pos:line="86" pos:column="35"/></argument_list></call></expr>;<pos:position pos:line="86" pos:column="36"/></expr_stmt>
<cpp:endif pos:line="87" pos:column="1">#<cpp:directive pos:line="87" pos:column="2">endif<pos:position pos:line="87" pos:column="7"/></cpp:directive></cpp:endif>
<cpp:ifdef pos:line="88" pos:column="1">#<cpp:directive pos:line="88" pos:column="2">ifdef<pos:position pos:line="88" pos:column="7"/></cpp:directive> <name pos:line="88" pos:column="8">SIGCONT<pos:position pos:line="88" pos:column="15"/></name></cpp:ifdef>
    <expr_stmt><expr><call><name pos:line="89" pos:column="5">store_desc<pos:position pos:line="89" pos:column="15"/></name><argument_list pos:line="89" pos:column="15">(<argument><expr><name pos:line="89" pos:column="16">SIGCONT<pos:position pos:line="89" pos:column="23"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="89" pos:column="25">"Continued"<pos:position pos:line="89" pos:column="36"/></literal></expr></argument>)<pos:position pos:line="89" pos:column="37"/></argument_list></call></expr>;<pos:position pos:line="89" pos:column="38"/></expr_stmt>
<cpp:endif pos:line="90" pos:column="1">#<cpp:directive pos:line="90" pos:column="2">endif<pos:position pos:line="90" pos:column="7"/></cpp:directive></cpp:endif>
<cpp:ifdef pos:line="91" pos:column="1">#<cpp:directive pos:line="91" pos:column="2">ifdef<pos:position pos:line="91" pos:column="7"/></cpp:directive> <name pos:line="91" pos:column="8">SIGTTIN<pos:position pos:line="91" pos:column="15"/></name></cpp:ifdef>
    <expr_stmt><expr><call><name pos:line="92" pos:column="5">store_desc<pos:position pos:line="92" pos:column="15"/></name><argument_list pos:line="92" pos:column="15">(<argument><expr><name pos:line="92" pos:column="16">SIGTTIN<pos:position pos:line="92" pos:column="23"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="92" pos:column="25">"Stopped (tty input)"<pos:position pos:line="92" pos:column="46"/></literal></expr></argument>)<pos:position pos:line="92" pos:column="47"/></argument_list></call></expr>;<pos:position pos:line="92" pos:column="48"/></expr_stmt>
<cpp:endif pos:line="93" pos:column="1">#<cpp:directive pos:line="93" pos:column="2">endif<pos:position pos:line="93" pos:column="7"/></cpp:directive></cpp:endif>
<cpp:ifdef pos:line="94" pos:column="1">#<cpp:directive pos:line="94" pos:column="2">ifdef<pos:position pos:line="94" pos:column="7"/></cpp:directive> <name pos:line="94" pos:column="8">SIGTTOU<pos:position pos:line="94" pos:column="15"/></name></cpp:ifdef>
    <expr_stmt><expr><call><name pos:line="95" pos:column="5">store_desc<pos:position pos:line="95" pos:column="15"/></name><argument_list pos:line="95" pos:column="15">(<argument><expr><name pos:line="95" pos:column="16">SIGTTOU<pos:position pos:line="95" pos:column="23"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="95" pos:column="25">"Stopped (tty output)"<pos:position pos:line="95" pos:column="47"/></literal></expr></argument>)<pos:position pos:line="95" pos:column="48"/></argument_list></call></expr>;<pos:position pos:line="95" pos:column="49"/></expr_stmt>
<cpp:endif pos:line="96" pos:column="1">#<cpp:directive pos:line="96" pos:column="2">endif<pos:position pos:line="96" pos:column="7"/></cpp:directive></cpp:endif>
<cpp:ifdef pos:line="97" pos:column="1">#<cpp:directive pos:line="97" pos:column="2">ifdef<pos:position pos:line="97" pos:column="7"/></cpp:directive> <name pos:line="97" pos:column="8">SIGVTALRM<pos:position pos:line="97" pos:column="17"/></name></cpp:ifdef>
    <expr_stmt><expr><call><name pos:line="98" pos:column="5">store_desc<pos:position pos:line="98" pos:column="15"/></name><argument_list pos:line="98" pos:column="15">(<argument><expr><name pos:line="98" pos:column="16">SIGVTALRM<pos:position pos:line="98" pos:column="25"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="98" pos:column="27">"virtual timer expired"<pos:position pos:line="98" pos:column="50"/></literal></expr></argument>)<pos:position pos:line="98" pos:column="51"/></argument_list></call></expr>;<pos:position pos:line="98" pos:column="52"/></expr_stmt>
<cpp:endif pos:line="99" pos:column="1">#<cpp:directive pos:line="99" pos:column="2">endif<pos:position pos:line="99" pos:column="7"/></cpp:directive></cpp:endif>
<cpp:ifdef pos:line="100" pos:column="1">#<cpp:directive pos:line="100" pos:column="2">ifdef<pos:position pos:line="100" pos:column="7"/></cpp:directive> <name pos:line="100" pos:column="8">SIGPROF<pos:position pos:line="100" pos:column="15"/></name></cpp:ifdef>
    <expr_stmt><expr><call><name pos:line="101" pos:column="5">store_desc<pos:position pos:line="101" pos:column="15"/></name><argument_list pos:line="101" pos:column="15">(<argument><expr><name pos:line="101" pos:column="16">SIGPROF<pos:position pos:line="101" pos:column="23"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="101" pos:column="25">"profiling timer expired"<pos:position pos:line="101" pos:column="50"/></literal></expr></argument>)<pos:position pos:line="101" pos:column="51"/></argument_list></call></expr>;<pos:position pos:line="101" pos:column="52"/></expr_stmt>
<cpp:endif pos:line="102" pos:column="1">#<cpp:directive pos:line="102" pos:column="2">endif<pos:position pos:line="102" pos:column="7"/></cpp:directive></cpp:endif>
<cpp:ifdef pos:line="103" pos:column="1">#<cpp:directive pos:line="103" pos:column="2">ifdef<pos:position pos:line="103" pos:column="7"/></cpp:directive> <name pos:line="103" pos:column="8">SIGXCPU<pos:position pos:line="103" pos:column="15"/></name></cpp:ifdef>
    <expr_stmt><expr><call><name pos:line="104" pos:column="5">store_desc<pos:position pos:line="104" pos:column="15"/></name><argument_list pos:line="104" pos:column="15">(<argument><expr><name pos:line="104" pos:column="16">SIGXCPU<pos:position pos:line="104" pos:column="23"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="104" pos:column="25">"exceeded cpu limit"<pos:position pos:line="104" pos:column="45"/></literal></expr></argument>)<pos:position pos:line="104" pos:column="46"/></argument_list></call></expr>;<pos:position pos:line="104" pos:column="47"/></expr_stmt>
<cpp:endif pos:line="105" pos:column="1">#<cpp:directive pos:line="105" pos:column="2">endif<pos:position pos:line="105" pos:column="7"/></cpp:directive></cpp:endif>
<cpp:ifdef pos:line="106" pos:column="1">#<cpp:directive pos:line="106" pos:column="2">ifdef<pos:position pos:line="106" pos:column="7"/></cpp:directive> <name pos:line="106" pos:column="8">SIGXFSZ<pos:position pos:line="106" pos:column="15"/></name></cpp:ifdef>
    <expr_stmt><expr><call><name pos:line="107" pos:column="5">store_desc<pos:position pos:line="107" pos:column="15"/></name><argument_list pos:line="107" pos:column="15">(<argument><expr><name pos:line="107" pos:column="16">SIGXFSZ<pos:position pos:line="107" pos:column="23"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="107" pos:column="25">"exceeded file size limit"<pos:position pos:line="107" pos:column="51"/></literal></expr></argument>)<pos:position pos:line="107" pos:column="52"/></argument_list></call></expr>;<pos:position pos:line="107" pos:column="53"/></expr_stmt>
<cpp:endif pos:line="108" pos:column="1">#<cpp:directive pos:line="108" pos:column="2">endif<pos:position pos:line="108" pos:column="7"/></cpp:directive></cpp:endif>

    <for pos:line="110" pos:column="5">for <control pos:line="110" pos:column="9">(<init><expr><name pos:line="110" pos:column="10">sig<pos:position pos:line="110" pos:column="13"/></name> <operator pos:line="110" pos:column="14">=<pos:position pos:line="110" pos:column="15"/></operator> <literal type="number" pos:line="110" pos:column="16">0<pos:position pos:line="110" pos:column="17"/></literal></expr>;<pos:position pos:line="110" pos:column="18"/></init> <condition><expr><name pos:line="110" pos:column="19">sig<pos:position pos:line="110" pos:column="22"/></name> <operator pos:line="110" pos:column="23">&lt;<pos:position pos:line="110" pos:column="27"/></operator> <name pos:line="110" pos:column="25">APR_NUMSIG<pos:position pos:line="110" pos:column="35"/></name></expr>;<pos:position pos:line="110" pos:column="36"/></condition> <incr><expr><operator pos:line="110" pos:column="37">++<pos:position pos:line="110" pos:column="39"/></operator><name pos:line="110" pos:column="39">sig<pos:position pos:line="110" pos:column="42"/></name></expr></incr>)<pos:position pos:line="110" pos:column="43"/></control>
        <block type="pseudo"><if pos:line="111" pos:column="9">if <condition pos:line="111" pos:column="12">(<expr><name><name pos:line="111" pos:column="13">signal_description<pos:position pos:line="111" pos:column="31"/></name><index pos:line="111" pos:column="31">[<expr><name pos:line="111" pos:column="32">sig<pos:position pos:line="111" pos:column="35"/></name></expr>]<pos:position pos:line="111" pos:column="36"/></index></name> <operator pos:line="111" pos:column="37">==<pos:position pos:line="111" pos:column="39"/></operator> <name pos:line="111" pos:column="40">NULL<pos:position pos:line="111" pos:column="44"/></name></expr>)<pos:position pos:line="111" pos:column="45"/></condition><then pos:line="111" pos:column="45">
            <block type="pseudo"><expr_stmt><expr><name><name pos:line="112" pos:column="13">signal_description<pos:position pos:line="112" pos:column="31"/></name><index pos:line="112" pos:column="31">[<expr><name pos:line="112" pos:column="32">sig<pos:position pos:line="112" pos:column="35"/></name></expr>]<pos:position pos:line="112" pos:column="36"/></index></name> <operator pos:line="112" pos:column="37">=<pos:position pos:line="112" pos:column="38"/></operator> <call><name pos:line="112" pos:column="39">apr_psprintf<pos:position pos:line="112" pos:column="51"/></name><argument_list pos:line="112" pos:column="51">(<argument><expr><name pos:line="112" pos:column="52">pglobal<pos:position pos:line="112" pos:column="59"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="112" pos:column="61">"signal #%d"<pos:position pos:line="112" pos:column="73"/></literal></expr></argument>, <argument><expr><name pos:line="112" pos:column="75">sig<pos:position pos:line="112" pos:column="78"/></name></expr></argument>)<pos:position pos:line="112" pos:column="79"/></argument_list></call></expr>;<pos:position pos:line="112" pos:column="80"/></expr_stmt></block></then></if></block></for>
}<pos:position pos:line="113" pos:column="2"/></block></function></unit>

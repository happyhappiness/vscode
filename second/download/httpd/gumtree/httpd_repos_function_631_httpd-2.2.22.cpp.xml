<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/httpd/gumtree/httpd_repos_function_631_httpd-2.2.22.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">int<pos:position pos:line="1" pos:column="4"/></name></type> <name pos:line="1" pos:column="5">ssl_init_FindCAList_X509NameCmp<pos:position pos:line="1" pos:column="36"/></name><parameter_list pos:line="1" pos:column="36">(<parameter><decl><type><name pos:line="1" pos:column="37">char<pos:position pos:line="1" pos:column="41"/></name> <modifier pos:line="1" pos:column="42">*<pos:position pos:line="1" pos:column="43"/></modifier><modifier pos:line="1" pos:column="43">*<pos:position pos:line="1" pos:column="44"/></modifier></type><name pos:line="1" pos:column="44">a<pos:position pos:line="1" pos:column="45"/></name></decl></parameter>, <parameter><decl><type><name pos:line="1" pos:column="47">char<pos:position pos:line="1" pos:column="51"/></name> <modifier pos:line="1" pos:column="52">*<pos:position pos:line="1" pos:column="53"/></modifier><modifier pos:line="1" pos:column="53">*<pos:position pos:line="1" pos:column="54"/></modifier></type><name pos:line="1" pos:column="54">b<pos:position pos:line="1" pos:column="55"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="56"/></parameter_list>
<block pos:line="2" pos:column="1">{
    <return pos:line="3" pos:column="5">return<expr><operator pos:line="3" pos:column="11">(<pos:position pos:line="3" pos:column="12"/></operator><call><name pos:line="3" pos:column="12">X509_NAME_cmp<pos:position pos:line="3" pos:column="25"/></name><argument_list pos:line="3" pos:column="25">(<argument><expr><operator pos:line="3" pos:column="26">(<pos:position pos:line="3" pos:column="27"/></operator><name pos:line="3" pos:column="27">void<pos:position pos:line="3" pos:column="31"/></name><operator pos:line="3" pos:column="31">*<pos:position pos:line="3" pos:column="32"/></operator><operator pos:line="3" pos:column="32">)<pos:position pos:line="3" pos:column="33"/></operator><operator pos:line="3" pos:column="33">*<pos:position pos:line="3" pos:column="34"/></operator><name pos:line="3" pos:column="34">a<pos:position pos:line="3" pos:column="35"/></name></expr></argument>, <argument><expr><operator pos:line="3" pos:column="37">(<pos:position pos:line="3" pos:column="38"/></operator><name pos:line="3" pos:column="38">void<pos:position pos:line="3" pos:column="42"/></name><operator pos:line="3" pos:column="42">*<pos:position pos:line="3" pos:column="43"/></operator><operator pos:line="3" pos:column="43">)<pos:position pos:line="3" pos:column="44"/></operator><operator pos:line="3" pos:column="44">*<pos:position pos:line="3" pos:column="45"/></operator><name pos:line="3" pos:column="45">b<pos:position pos:line="3" pos:column="46"/></name></expr></argument>)<pos:position pos:line="3" pos:column="47"/></argument_list></call><operator pos:line="3" pos:column="47">)<pos:position pos:line="3" pos:column="48"/></operator></expr>;<pos:position pos:line="3" pos:column="49"/></return>
}<pos:position pos:line="4" pos:column="2"/></block></function></unit>

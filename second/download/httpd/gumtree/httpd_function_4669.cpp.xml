<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/httpd/gumtree/httpd_function_4669.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">void<pos:position pos:line="1" pos:column="12"/></name></type> <name pos:line="1" pos:column="13">ssl_init_ctx_cert_chain<pos:position pos:line="1" pos:column="36"/></name><parameter_list pos:line="1" pos:column="36">(<parameter><decl><type><name pos:line="1" pos:column="37">server_rec<pos:position pos:line="1" pos:column="47"/></name> <modifier pos:line="1" pos:column="48">*<pos:position pos:line="1" pos:column="49"/></modifier></type><name pos:line="1" pos:column="49">s<pos:position pos:line="1" pos:column="50"/></name></decl></parameter>,
                                    <parameter><decl><type><name pos:line="2" pos:column="37">apr_pool_t<pos:position pos:line="2" pos:column="47"/></name> <modifier pos:line="2" pos:column="48">*<pos:position pos:line="2" pos:column="49"/></modifier></type><name pos:line="2" pos:column="49">p<pos:position pos:line="2" pos:column="50"/></name></decl></parameter>,
                                    <parameter><decl><type><name pos:line="3" pos:column="37">apr_pool_t<pos:position pos:line="3" pos:column="47"/></name> <modifier pos:line="3" pos:column="48">*<pos:position pos:line="3" pos:column="49"/></modifier></type><name pos:line="3" pos:column="49">ptemp<pos:position pos:line="3" pos:column="54"/></name></decl></parameter>,
                                    <parameter><decl><type><name pos:line="4" pos:column="37">modssl_ctx_t<pos:position pos:line="4" pos:column="49"/></name> <modifier pos:line="4" pos:column="50">*<pos:position pos:line="4" pos:column="51"/></modifier></type><name pos:line="4" pos:column="51">mctx<pos:position pos:line="4" pos:column="55"/></name></decl></parameter>)<pos:position pos:line="4" pos:column="56"/></parameter_list>
<block pos:line="5" pos:column="1">{
    <decl_stmt><decl><type><name pos:line="6" pos:column="5">BOOL<pos:position pos:line="6" pos:column="9"/></name></type> <name pos:line="6" pos:column="10">skip_first<pos:position pos:line="6" pos:column="20"/></name> <init pos:line="6" pos:column="21">= <expr><name pos:line="6" pos:column="23">FALSE<pos:position pos:line="6" pos:column="28"/></name></expr></init></decl>;<pos:position pos:line="6" pos:column="29"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="7" pos:column="5">int<pos:position pos:line="7" pos:column="8"/></name></type> <name pos:line="7" pos:column="9">i<pos:position pos:line="7" pos:column="10"/></name></decl>, <decl><type ref="prev"/><name pos:line="7" pos:column="12">n<pos:position pos:line="7" pos:column="13"/></name></decl>;<pos:position pos:line="7" pos:column="14"/></decl_stmt>
    <decl_stmt><decl><type><specifier pos:line="8" pos:column="5">const<pos:position pos:line="8" pos:column="10"/></specifier> <name pos:line="8" pos:column="11">char<pos:position pos:line="8" pos:column="15"/></name> <modifier pos:line="8" pos:column="16">*<pos:position pos:line="8" pos:column="17"/></modifier></type><name pos:line="8" pos:column="17">chain<pos:position pos:line="8" pos:column="22"/></name> <init pos:line="8" pos:column="23">= <expr><name><name pos:line="8" pos:column="25">mctx<pos:position pos:line="8" pos:column="29"/></name><operator pos:line="8" pos:column="29">-&gt;<pos:position pos:line="8" pos:column="34"/></operator><name pos:line="8" pos:column="31">cert_chain<pos:position pos:line="8" pos:column="41"/></name></name></expr></init></decl>;<pos:position pos:line="8" pos:column="42"/></decl_stmt>

    <if pos:line="10" pos:column="5">if <condition pos:line="10" pos:column="8">(<expr><name><name pos:line="10" pos:column="9">mctx<pos:position pos:line="10" pos:column="13"/></name><operator pos:line="10" pos:column="13">-&gt;<pos:position pos:line="10" pos:column="18"/></operator><name pos:line="10" pos:column="15">pkcs7<pos:position pos:line="10" pos:column="20"/></name></name></expr>)<pos:position pos:line="10" pos:column="21"/></condition><then pos:line="10" pos:column="21"> <block pos:line="10" pos:column="22">{
        <expr_stmt><expr><call><name pos:line="11" pos:column="9">ssl_init_ctx_pkcs7_cert_chain<pos:position pos:line="11" pos:column="38"/></name><argument_list pos:line="11" pos:column="38">(<argument><expr><name pos:line="11" pos:column="39">s<pos:position pos:line="11" pos:column="40"/></name></expr></argument>, <argument><expr><name pos:line="11" pos:column="42">mctx<pos:position pos:line="11" pos:column="46"/></name></expr></argument>)<pos:position pos:line="11" pos:column="47"/></argument_list></call></expr>;<pos:position pos:line="11" pos:column="48"/></expr_stmt>
        <return pos:line="12" pos:column="9">return;<pos:position pos:line="12" pos:column="16"/></return>
    }<pos:position pos:line="13" pos:column="6"/></block></then></if>

    <comment type="block" pos:line="15" pos:column="5">/*
     * Optionally configure extra server certificate chain certificates.
     * This is usually done by OpenSSL automatically when one of the
     * server cert issuers are found under SSLCACertificatePath or in
     * SSLCACertificateFile. But because these are intended for client
     * authentication it can conflict. For instance when you use a
     * Global ID server certificate you've to send out the intermediate
     * CA certificate, too. When you would just configure this with
     * SSLCACertificateFile and also use client authentication mod_ssl
     * would accept all clients also issued by this CA. Obviously this
     * isn't what we want in this situation. So this feature here exists
     * to allow one to explicity configure CA certificates which are
     * used only for the server certificate chain.
     */</comment>
    <if pos:line="29" pos:column="5">if <condition pos:line="29" pos:column="8">(<expr><operator pos:line="29" pos:column="9">!<pos:position pos:line="29" pos:column="10"/></operator><name pos:line="29" pos:column="10">chain<pos:position pos:line="29" pos:column="15"/></name></expr>)<pos:position pos:line="29" pos:column="16"/></condition><then pos:line="29" pos:column="16"> <block pos:line="29" pos:column="17">{
        <return pos:line="30" pos:column="9">return;<pos:position pos:line="30" pos:column="16"/></return>
    }<pos:position pos:line="31" pos:column="6"/></block></then></if>

    <for pos:line="33" pos:column="5">for <control pos:line="33" pos:column="9">(<init><expr><name pos:line="33" pos:column="10">i<pos:position pos:line="33" pos:column="11"/></name> <operator pos:line="33" pos:column="12">=<pos:position pos:line="33" pos:column="13"/></operator> <literal type="number" pos:line="33" pos:column="14">0<pos:position pos:line="33" pos:column="15"/></literal></expr>;<pos:position pos:line="33" pos:column="16"/></init> <condition><expr><operator pos:line="33" pos:column="17">(<pos:position pos:line="33" pos:column="18"/></operator><name pos:line="33" pos:column="18">i<pos:position pos:line="33" pos:column="19"/></name> <operator pos:line="33" pos:column="20">&lt;<pos:position pos:line="33" pos:column="24"/></operator> <name pos:line="33" pos:column="22">SSL_AIDX_MAX<pos:position pos:line="33" pos:column="34"/></name><operator pos:line="33" pos:column="34">)<pos:position pos:line="33" pos:column="35"/></operator> <operator pos:line="33" pos:column="36">&amp;&amp;<pos:position pos:line="33" pos:column="46"/></operator> <name><name pos:line="33" pos:column="39">mctx<pos:position pos:line="33" pos:column="43"/></name><operator pos:line="33" pos:column="43">-&gt;<pos:position pos:line="33" pos:column="48"/></operator><name pos:line="33" pos:column="45">pks<pos:position pos:line="33" pos:column="48"/></name><operator pos:line="33" pos:column="48">-&gt;<pos:position pos:line="33" pos:column="53"/></operator><name pos:line="33" pos:column="50">cert_files<pos:position pos:line="33" pos:column="60"/></name><index pos:line="33" pos:column="60">[<expr><name pos:line="33" pos:column="61">i<pos:position pos:line="33" pos:column="62"/></name></expr>]<pos:position pos:line="33" pos:column="63"/></index></name></expr>;<pos:position pos:line="33" pos:column="64"/></condition> <incr><expr><name pos:line="33" pos:column="65">i<pos:position pos:line="33" pos:column="66"/></name><operator pos:line="33" pos:column="66">++<pos:position pos:line="33" pos:column="68"/></operator></expr></incr>)<pos:position pos:line="33" pos:column="69"/></control> <block pos:line="33" pos:column="70">{
        <if pos:line="34" pos:column="9">if <condition pos:line="34" pos:column="12">(<expr><call><name pos:line="34" pos:column="13">strEQ<pos:position pos:line="34" pos:column="18"/></name><argument_list pos:line="34" pos:column="18">(<argument><expr><name><name pos:line="34" pos:column="19">mctx<pos:position pos:line="34" pos:column="23"/></name><operator pos:line="34" pos:column="23">-&gt;<pos:position pos:line="34" pos:column="28"/></operator><name pos:line="34" pos:column="25">pks<pos:position pos:line="34" pos:column="28"/></name><operator pos:line="34" pos:column="28">-&gt;<pos:position pos:line="34" pos:column="33"/></operator><name pos:line="34" pos:column="30">cert_files<pos:position pos:line="34" pos:column="40"/></name><index pos:line="34" pos:column="40">[<expr><name pos:line="34" pos:column="41">i<pos:position pos:line="34" pos:column="42"/></name></expr>]<pos:position pos:line="34" pos:column="43"/></index></name></expr></argument>, <argument><expr><name pos:line="34" pos:column="45">chain<pos:position pos:line="34" pos:column="50"/></name></expr></argument>)<pos:position pos:line="34" pos:column="51"/></argument_list></call></expr>)<pos:position pos:line="34" pos:column="52"/></condition><then pos:line="34" pos:column="52"> <block pos:line="34" pos:column="53">{
            <expr_stmt><expr><name pos:line="35" pos:column="13">skip_first<pos:position pos:line="35" pos:column="23"/></name> <operator pos:line="35" pos:column="24">=<pos:position pos:line="35" pos:column="25"/></operator> <name pos:line="35" pos:column="26">TRUE<pos:position pos:line="35" pos:column="30"/></name></expr>;<pos:position pos:line="35" pos:column="31"/></expr_stmt>
            <break pos:line="36" pos:column="13">break;<pos:position pos:line="36" pos:column="19"/></break>
        }<pos:position pos:line="37" pos:column="10"/></block></then></if>
    }<pos:position pos:line="38" pos:column="6"/></block></for>

    <expr_stmt><expr><name pos:line="40" pos:column="5">n<pos:position pos:line="40" pos:column="6"/></name> <operator pos:line="40" pos:column="7">=<pos:position pos:line="40" pos:column="8"/></operator> <call><name pos:line="40" pos:column="9">SSL_CTX_use_certificate_chain<pos:position pos:line="40" pos:column="38"/></name><argument_list pos:line="40" pos:column="38">(<argument><expr><name><name pos:line="40" pos:column="39">mctx<pos:position pos:line="40" pos:column="43"/></name><operator pos:line="40" pos:column="43">-&gt;<pos:position pos:line="40" pos:column="48"/></operator><name pos:line="40" pos:column="45">ssl_ctx<pos:position pos:line="40" pos:column="52"/></name></name></expr></argument>,
                                      <argument><expr><operator pos:line="41" pos:column="39">(<pos:position pos:line="41" pos:column="40"/></operator><name pos:line="41" pos:column="40">char<pos:position pos:line="41" pos:column="44"/></name> <operator pos:line="41" pos:column="45">*<pos:position pos:line="41" pos:column="46"/></operator><operator pos:line="41" pos:column="46">)<pos:position pos:line="41" pos:column="47"/></operator><name pos:line="41" pos:column="47">chain<pos:position pos:line="41" pos:column="52"/></name></expr></argument>,
                                      <argument><expr><name pos:line="42" pos:column="39">skip_first<pos:position pos:line="42" pos:column="49"/></name></expr></argument>, <argument><expr><name pos:line="42" pos:column="51">NULL<pos:position pos:line="42" pos:column="55"/></name></expr></argument>)<pos:position pos:line="42" pos:column="56"/></argument_list></call></expr>;<pos:position pos:line="42" pos:column="57"/></expr_stmt>
    <if pos:line="43" pos:column="5">if <condition pos:line="43" pos:column="8">(<expr><name pos:line="43" pos:column="9">n<pos:position pos:line="43" pos:column="10"/></name> <operator pos:line="43" pos:column="11">&lt;<pos:position pos:line="43" pos:column="15"/></operator> <literal type="number" pos:line="43" pos:column="13">0<pos:position pos:line="43" pos:column="14"/></literal></expr>)<pos:position pos:line="43" pos:column="15"/></condition><then pos:line="43" pos:column="15"> <block pos:line="43" pos:column="16">{
        <expr_stmt><expr><call><name pos:line="44" pos:column="9">ap_log_error<pos:position pos:line="44" pos:column="21"/></name><argument_list pos:line="44" pos:column="21">(<argument><expr><name pos:line="44" pos:column="22">APLOG_MARK<pos:position pos:line="44" pos:column="32"/></name></expr></argument>, <argument><expr><name pos:line="44" pos:column="34">APLOG_ERR<pos:position pos:line="44" pos:column="43"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="44" pos:column="45">0<pos:position pos:line="44" pos:column="46"/></literal></expr></argument>, <argument><expr><name pos:line="44" pos:column="48">s<pos:position pos:line="44" pos:column="49"/></name></expr></argument>,
                <argument><expr><literal type="string" pos:line="45" pos:column="17">"Failed to configure CA certificate chain!"<pos:position pos:line="45" pos:column="60"/></literal></expr></argument>)<pos:position pos:line="45" pos:column="61"/></argument_list></call></expr>;<pos:position pos:line="45" pos:column="62"/></expr_stmt>
        <expr_stmt><expr><call><name pos:line="46" pos:column="9">ssl_die<pos:position pos:line="46" pos:column="16"/></name><argument_list pos:line="46" pos:column="16">()<pos:position pos:line="46" pos:column="18"/></argument_list></call></expr>;<pos:position pos:line="46" pos:column="19"/></expr_stmt>
    }<pos:position pos:line="47" pos:column="6"/></block></then></if>

    <expr_stmt><expr><call><name pos:line="49" pos:column="5">ap_log_error<pos:position pos:line="49" pos:column="17"/></name><argument_list pos:line="49" pos:column="17">(<argument><expr><name pos:line="49" pos:column="18">APLOG_MARK<pos:position pos:line="49" pos:column="28"/></name></expr></argument>, <argument><expr><name pos:line="49" pos:column="30">APLOG_DEBUG<pos:position pos:line="49" pos:column="41"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="49" pos:column="43">0<pos:position pos:line="49" pos:column="44"/></literal></expr></argument>, <argument><expr><name pos:line="49" pos:column="46">s<pos:position pos:line="49" pos:column="47"/></name></expr></argument>,
                 <argument><expr><literal type="string" pos:line="50" pos:column="18">"Configuring server certificate chain "<pos:position pos:line="50" pos:column="57"/></literal>
                 <literal type="string" pos:line="51" pos:column="18">"(%d CA certificate%s)"<pos:position pos:line="51" pos:column="41"/></literal></expr></argument>,
                 <argument><expr><name pos:line="52" pos:column="18">n<pos:position pos:line="52" pos:column="19"/></name></expr></argument>, <argument><expr><ternary><condition><expr><name pos:line="52" pos:column="21">n<pos:position pos:line="52" pos:column="22"/></name> <operator pos:line="52" pos:column="23">==<pos:position pos:line="52" pos:column="25"/></operator> <literal type="number" pos:line="52" pos:column="26">1<pos:position pos:line="52" pos:column="27"/></literal></expr> ?<pos:position pos:line="52" pos:column="29"/></condition><then pos:line="52" pos:column="29"> <expr><literal type="string" pos:line="52" pos:column="30">""<pos:position pos:line="52" pos:column="32"/></literal></expr> <pos:position pos:line="52" pos:column="33"/></then><else pos:line="52" pos:column="33">: <expr><literal type="string" pos:line="52" pos:column="35">"s"<pos:position pos:line="52" pos:column="38"/></literal></expr></else></ternary></expr></argument>)<pos:position pos:line="52" pos:column="39"/></argument_list></call></expr>;<pos:position pos:line="52" pos:column="40"/></expr_stmt>
}<pos:position pos:line="53" pos:column="2"/></block></function></unit>

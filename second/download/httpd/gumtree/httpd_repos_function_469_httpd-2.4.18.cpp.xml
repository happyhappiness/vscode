<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/httpd/gumtree/httpd_repos_function_469_httpd-2.4.18.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">int<pos:position pos:line="1" pos:column="11"/></name></type> <name pos:line="1" pos:column="12">open_log<pos:position pos:line="1" pos:column="20"/></name><parameter_list pos:line="1" pos:column="20">(<parameter><decl><type><name pos:line="1" pos:column="21">server_rec<pos:position pos:line="1" pos:column="31"/></name> <modifier pos:line="1" pos:column="32">*<pos:position pos:line="1" pos:column="33"/></modifier></type><name pos:line="1" pos:column="33">s<pos:position pos:line="1" pos:column="34"/></name></decl></parameter>, <parameter><decl><type><name pos:line="1" pos:column="36">apr_pool_t<pos:position pos:line="1" pos:column="46"/></name> <modifier pos:line="1" pos:column="47">*<pos:position pos:line="1" pos:column="48"/></modifier></type><name pos:line="1" pos:column="48">p<pos:position pos:line="1" pos:column="49"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="50"/></parameter_list>
<block pos:line="2" pos:column="1">{
    <decl_stmt><decl><type><name pos:line="3" pos:column="5">fcfg<pos:position pos:line="3" pos:column="9"/></name> <modifier pos:line="3" pos:column="10">*<pos:position pos:line="3" pos:column="11"/></modifier></type><name pos:line="3" pos:column="11">cfg<pos:position pos:line="3" pos:column="14"/></name> <init pos:line="3" pos:column="15">= <expr><call><name pos:line="3" pos:column="17">ap_get_module_config<pos:position pos:line="3" pos:column="37"/></name><argument_list pos:line="3" pos:column="37">(<argument><expr><name><name pos:line="3" pos:column="38">s<pos:position pos:line="3" pos:column="39"/></name><operator pos:line="3" pos:column="39">-&gt;<pos:position pos:line="3" pos:column="44"/></operator><name pos:line="3" pos:column="41">module_config<pos:position pos:line="3" pos:column="54"/></name></name></expr></argument>, <argument><expr><operator pos:line="3" pos:column="56">&amp;<pos:position pos:line="3" pos:column="61"/></operator><name pos:line="3" pos:column="57">log_forensic_module<pos:position pos:line="3" pos:column="76"/></name></expr></argument>)<pos:position pos:line="3" pos:column="77"/></argument_list></call></expr></init></decl>;<pos:position pos:line="3" pos:column="78"/></decl_stmt>

    <if pos:line="5" pos:column="5">if <condition pos:line="5" pos:column="8">(<expr><operator pos:line="5" pos:column="9">!<pos:position pos:line="5" pos:column="10"/></operator><name><name pos:line="5" pos:column="10">cfg<pos:position pos:line="5" pos:column="13"/></name><operator pos:line="5" pos:column="13">-&gt;<pos:position pos:line="5" pos:column="18"/></operator><name pos:line="5" pos:column="15">logname<pos:position pos:line="5" pos:column="22"/></name></name> <operator pos:line="5" pos:column="23">||<pos:position pos:line="5" pos:column="25"/></operator> <name><name pos:line="5" pos:column="26">cfg<pos:position pos:line="5" pos:column="29"/></name><operator pos:line="5" pos:column="29">-&gt;<pos:position pos:line="5" pos:column="34"/></operator><name pos:line="5" pos:column="31">fd<pos:position pos:line="5" pos:column="33"/></name></name></expr>)<pos:position pos:line="5" pos:column="34"/></condition><then pos:line="5" pos:column="34">
        <block type="pseudo"><return pos:line="6" pos:column="9">return <expr><literal type="number" pos:line="6" pos:column="16">1<pos:position pos:line="6" pos:column="17"/></literal></expr>;<pos:position pos:line="6" pos:column="18"/></return></block></then></if>

    <if pos:line="8" pos:column="5">if <condition pos:line="8" pos:column="8">(<expr><operator pos:line="8" pos:column="9">*<pos:position pos:line="8" pos:column="10"/></operator><name><name pos:line="8" pos:column="10">cfg<pos:position pos:line="8" pos:column="13"/></name><operator pos:line="8" pos:column="13">-&gt;<pos:position pos:line="8" pos:column="18"/></operator><name pos:line="8" pos:column="15">logname<pos:position pos:line="8" pos:column="22"/></name></name> <operator pos:line="8" pos:column="23">==<pos:position pos:line="8" pos:column="25"/></operator> <literal type="char" pos:line="8" pos:column="26">'|'<pos:position pos:line="8" pos:column="29"/></literal></expr>)<pos:position pos:line="8" pos:column="30"/></condition><then pos:line="8" pos:column="30"> <block pos:line="8" pos:column="31">{
        <decl_stmt><decl><type><name pos:line="9" pos:column="9">piped_log<pos:position pos:line="9" pos:column="18"/></name> <modifier pos:line="9" pos:column="19">*<pos:position pos:line="9" pos:column="20"/></modifier></type><name pos:line="9" pos:column="20">pl<pos:position pos:line="9" pos:column="22"/></name></decl>;<pos:position pos:line="9" pos:column="23"/></decl_stmt>
        <decl_stmt><decl><type><specifier pos:line="10" pos:column="9">const<pos:position pos:line="10" pos:column="14"/></specifier> <name pos:line="10" pos:column="15">char<pos:position pos:line="10" pos:column="19"/></name> <modifier pos:line="10" pos:column="20">*<pos:position pos:line="10" pos:column="21"/></modifier></type><name pos:line="10" pos:column="21">pname<pos:position pos:line="10" pos:column="26"/></name> <init pos:line="10" pos:column="27">= <expr><call><name pos:line="10" pos:column="29">ap_server_root_relative<pos:position pos:line="10" pos:column="52"/></name><argument_list pos:line="10" pos:column="52">(<argument><expr><name pos:line="10" pos:column="53">p<pos:position pos:line="10" pos:column="54"/></name></expr></argument>, <argument><expr><name><name pos:line="10" pos:column="56">cfg<pos:position pos:line="10" pos:column="59"/></name><operator pos:line="10" pos:column="59">-&gt;<pos:position pos:line="10" pos:column="64"/></operator><name pos:line="10" pos:column="61">logname<pos:position pos:line="10" pos:column="68"/></name></name> <operator pos:line="10" pos:column="69">+<pos:position pos:line="10" pos:column="70"/></operator> <literal type="number" pos:line="10" pos:column="71">1<pos:position pos:line="10" pos:column="72"/></literal></expr></argument>)<pos:position pos:line="10" pos:column="73"/></argument_list></call></expr></init></decl>;<pos:position pos:line="10" pos:column="74"/></decl_stmt>

        <expr_stmt><expr><name pos:line="12" pos:column="9">pl<pos:position pos:line="12" pos:column="11"/></name> <operator pos:line="12" pos:column="12">=<pos:position pos:line="12" pos:column="13"/></operator> <call><name pos:line="12" pos:column="14">ap_open_piped_log<pos:position pos:line="12" pos:column="31"/></name><argument_list pos:line="12" pos:column="31">(<argument><expr><name pos:line="12" pos:column="32">p<pos:position pos:line="12" pos:column="33"/></name></expr></argument>, <argument><expr><name pos:line="12" pos:column="35">pname<pos:position pos:line="12" pos:column="40"/></name></expr></argument>)<pos:position pos:line="12" pos:column="41"/></argument_list></call></expr>;<pos:position pos:line="12" pos:column="42"/></expr_stmt>
        <if pos:line="13" pos:column="9">if <condition pos:line="13" pos:column="12">(<expr><name pos:line="13" pos:column="13">pl<pos:position pos:line="13" pos:column="15"/></name> <operator pos:line="13" pos:column="16">==<pos:position pos:line="13" pos:column="18"/></operator> <name pos:line="13" pos:column="19">NULL<pos:position pos:line="13" pos:column="23"/></name></expr>)<pos:position pos:line="13" pos:column="24"/></condition><then pos:line="13" pos:column="24"> <block pos:line="13" pos:column="25">{
            <expr_stmt><expr><call><name pos:line="14" pos:column="13">ap_log_error<pos:position pos:line="14" pos:column="25"/></name><argument_list pos:line="14" pos:column="25">(<argument><expr><name pos:line="14" pos:column="26">APLOG_MARK<pos:position pos:line="14" pos:column="36"/></name></expr></argument>, <argument><expr><name pos:line="14" pos:column="38">APLOG_ERR<pos:position pos:line="14" pos:column="47"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="14" pos:column="49">0<pos:position pos:line="14" pos:column="50"/></literal></expr></argument>, <argument><expr><name pos:line="14" pos:column="52">s<pos:position pos:line="14" pos:column="53"/></name></expr></argument>, <argument><expr><call><name pos:line="14" pos:column="55">APLOGNO<pos:position pos:line="14" pos:column="62"/></name><argument_list pos:line="14" pos:column="62">(<argument><expr><literal type="number" pos:line="14" pos:column="63">00650<pos:position pos:line="14" pos:column="68"/></literal></expr></argument>)<pos:position pos:line="14" pos:column="69"/></argument_list></call>
                         <literal type="string" pos:line="15" pos:column="26">"couldn't spawn forensic log pipe %s"<pos:position pos:line="15" pos:column="63"/></literal></expr></argument>, <argument><expr><name><name pos:line="15" pos:column="65">cfg<pos:position pos:line="15" pos:column="68"/></name><operator pos:line="15" pos:column="68">-&gt;<pos:position pos:line="15" pos:column="73"/></operator><name pos:line="15" pos:column="70">logname<pos:position pos:line="15" pos:column="77"/></name></name></expr></argument>)<pos:position pos:line="15" pos:column="78"/></argument_list></call></expr>;<pos:position pos:line="15" pos:column="79"/></expr_stmt>
            <return pos:line="16" pos:column="13">return <expr><literal type="number" pos:line="16" pos:column="20">0<pos:position pos:line="16" pos:column="21"/></literal></expr>;<pos:position pos:line="16" pos:column="22"/></return>
        }<pos:position pos:line="17" pos:column="10"/></block></then></if>
        <expr_stmt><expr><name><name pos:line="18" pos:column="9">cfg<pos:position pos:line="18" pos:column="12"/></name><operator pos:line="18" pos:column="12">-&gt;<pos:position pos:line="18" pos:column="17"/></operator><name pos:line="18" pos:column="14">fd<pos:position pos:line="18" pos:column="16"/></name></name> <operator pos:line="18" pos:column="17">=<pos:position pos:line="18" pos:column="18"/></operator> <call><name pos:line="18" pos:column="19">ap_piped_log_write_fd<pos:position pos:line="18" pos:column="40"/></name><argument_list pos:line="18" pos:column="40">(<argument><expr><name pos:line="18" pos:column="41">pl<pos:position pos:line="18" pos:column="43"/></name></expr></argument>)<pos:position pos:line="18" pos:column="44"/></argument_list></call></expr>;<pos:position pos:line="18" pos:column="45"/></expr_stmt>
    }<pos:position pos:line="19" pos:column="6"/></block></then>
    <else pos:line="20" pos:column="5">else <block pos:line="20" pos:column="10">{
        <decl_stmt><decl><type><specifier pos:line="21" pos:column="9">const<pos:position pos:line="21" pos:column="14"/></specifier> <name pos:line="21" pos:column="15">char<pos:position pos:line="21" pos:column="19"/></name> <modifier pos:line="21" pos:column="20">*<pos:position pos:line="21" pos:column="21"/></modifier></type><name pos:line="21" pos:column="21">fname<pos:position pos:line="21" pos:column="26"/></name> <init pos:line="21" pos:column="27">= <expr><call><name pos:line="21" pos:column="29">ap_server_root_relative<pos:position pos:line="21" pos:column="52"/></name><argument_list pos:line="21" pos:column="52">(<argument><expr><name pos:line="21" pos:column="53">p<pos:position pos:line="21" pos:column="54"/></name></expr></argument>, <argument><expr><name><name pos:line="21" pos:column="56">cfg<pos:position pos:line="21" pos:column="59"/></name><operator pos:line="21" pos:column="59">-&gt;<pos:position pos:line="21" pos:column="64"/></operator><name pos:line="21" pos:column="61">logname<pos:position pos:line="21" pos:column="68"/></name></name></expr></argument>)<pos:position pos:line="21" pos:column="69"/></argument_list></call></expr></init></decl>;<pos:position pos:line="21" pos:column="70"/></decl_stmt>
        <decl_stmt><decl><type><name pos:line="22" pos:column="9">apr_status_t<pos:position pos:line="22" pos:column="21"/></name></type> <name pos:line="22" pos:column="22">rv<pos:position pos:line="22" pos:column="24"/></name></decl>;<pos:position pos:line="22" pos:column="25"/></decl_stmt>

        <if pos:line="24" pos:column="9">if <condition pos:line="24" pos:column="12">(<expr><operator pos:line="24" pos:column="13">(<pos:position pos:line="24" pos:column="14"/></operator><name pos:line="24" pos:column="14">rv<pos:position pos:line="24" pos:column="16"/></name> <operator pos:line="24" pos:column="17">=<pos:position pos:line="24" pos:column="18"/></operator> <call><name pos:line="24" pos:column="19">apr_file_open<pos:position pos:line="24" pos:column="32"/></name><argument_list pos:line="24" pos:column="32">(<argument><expr><operator pos:line="24" pos:column="33">&amp;<pos:position pos:line="24" pos:column="38"/></operator><name><name pos:line="24" pos:column="34">cfg<pos:position pos:line="24" pos:column="37"/></name><operator pos:line="24" pos:column="37">-&gt;<pos:position pos:line="24" pos:column="42"/></operator><name pos:line="24" pos:column="39">fd<pos:position pos:line="24" pos:column="41"/></name></name></expr></argument>, <argument><expr><name pos:line="24" pos:column="43">fname<pos:position pos:line="24" pos:column="48"/></name></expr></argument>,
                                <argument><expr><name pos:line="25" pos:column="33">APR_WRITE<pos:position pos:line="25" pos:column="42"/></name> <operator pos:line="25" pos:column="43">|<pos:position pos:line="25" pos:column="44"/></operator> <name pos:line="25" pos:column="45">APR_APPEND<pos:position pos:line="25" pos:column="55"/></name> <operator pos:line="25" pos:column="56">|<pos:position pos:line="25" pos:column="57"/></operator> <name pos:line="25" pos:column="58">APR_CREATE<pos:position pos:line="25" pos:column="68"/></name></expr></argument>,
                                <argument><expr><name pos:line="26" pos:column="33">APR_OS_DEFAULT<pos:position pos:line="26" pos:column="47"/></name></expr></argument>, <argument><expr><name pos:line="26" pos:column="49">p<pos:position pos:line="26" pos:column="50"/></name></expr></argument>)<pos:position pos:line="26" pos:column="51"/></argument_list></call><operator pos:line="26" pos:column="51">)<pos:position pos:line="26" pos:column="52"/></operator> <operator pos:line="26" pos:column="53">!=<pos:position pos:line="26" pos:column="55"/></operator> <name pos:line="26" pos:column="56">APR_SUCCESS<pos:position pos:line="26" pos:column="67"/></name></expr>)<pos:position pos:line="26" pos:column="68"/></condition><then pos:line="26" pos:column="68"> <block pos:line="26" pos:column="69">{
            <expr_stmt><expr><call><name pos:line="27" pos:column="13">ap_log_error<pos:position pos:line="27" pos:column="25"/></name><argument_list pos:line="27" pos:column="25">(<argument><expr><name pos:line="27" pos:column="26">APLOG_MARK<pos:position pos:line="27" pos:column="36"/></name></expr></argument>, <argument><expr><name pos:line="27" pos:column="38">APLOG_ERR<pos:position pos:line="27" pos:column="47"/></name></expr></argument>, <argument><expr><name pos:line="27" pos:column="49">rv<pos:position pos:line="27" pos:column="51"/></name></expr></argument>, <argument><expr><name pos:line="27" pos:column="53">s<pos:position pos:line="27" pos:column="54"/></name></expr></argument>, <argument><expr><call><name pos:line="27" pos:column="56">APLOGNO<pos:position pos:line="27" pos:column="63"/></name><argument_list pos:line="27" pos:column="63">(<argument><expr><literal type="number" pos:line="27" pos:column="64">00651<pos:position pos:line="27" pos:column="69"/></literal></expr></argument>)<pos:position pos:line="27" pos:column="70"/></argument_list></call>
                         <literal type="string" pos:line="28" pos:column="26">"could not open forensic log file %s."<pos:position pos:line="28" pos:column="64"/></literal></expr></argument>, <argument><expr><name pos:line="28" pos:column="66">fname<pos:position pos:line="28" pos:column="71"/></name></expr></argument>)<pos:position pos:line="28" pos:column="72"/></argument_list></call></expr>;<pos:position pos:line="28" pos:column="73"/></expr_stmt>
            <return pos:line="29" pos:column="13">return <expr><literal type="number" pos:line="29" pos:column="20">0<pos:position pos:line="29" pos:column="21"/></literal></expr>;<pos:position pos:line="29" pos:column="22"/></return>
        }<pos:position pos:line="30" pos:column="10"/></block></then></if>
    }<pos:position pos:line="31" pos:column="6"/></block></else></if>

    <return pos:line="33" pos:column="5">return <expr><literal type="number" pos:line="33" pos:column="12">1<pos:position pos:line="33" pos:column="13"/></literal></expr>;<pos:position pos:line="33" pos:column="14"/></return>
}<pos:position pos:line="34" pos:column="2"/></block></function></unit>

<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/httpd/gumtree/httpd_repos_function_1188_httpd-2.2.16.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">int<pos:position pos:line="1" pos:column="11"/></name></type> <name pos:line="1" pos:column="12">apply_rewrite_cond<pos:position pos:line="1" pos:column="30"/></name><parameter_list pos:line="1" pos:column="30">(<parameter><decl><type><name pos:line="1" pos:column="31">rewritecond_entry<pos:position pos:line="1" pos:column="48"/></name> <modifier pos:line="1" pos:column="49">*<pos:position pos:line="1" pos:column="50"/></modifier></type><name pos:line="1" pos:column="50">p<pos:position pos:line="1" pos:column="51"/></name></decl></parameter>, <parameter><decl><type><name pos:line="1" pos:column="53">rewrite_ctx<pos:position pos:line="1" pos:column="64"/></name> <modifier pos:line="1" pos:column="65">*<pos:position pos:line="1" pos:column="66"/></modifier></type><name pos:line="1" pos:column="66">ctx<pos:position pos:line="1" pos:column="69"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="70"/></parameter_list>
<block pos:line="2" pos:column="1">{
    <decl_stmt><decl><type><name pos:line="3" pos:column="5">char<pos:position pos:line="3" pos:column="9"/></name> <modifier pos:line="3" pos:column="10">*<pos:position pos:line="3" pos:column="11"/></modifier></type><name pos:line="3" pos:column="11">input<pos:position pos:line="3" pos:column="16"/></name> <init pos:line="3" pos:column="17">= <expr><call><name pos:line="3" pos:column="19">do_expand<pos:position pos:line="3" pos:column="28"/></name><argument_list pos:line="3" pos:column="28">(<argument><expr><name><name pos:line="3" pos:column="29">p<pos:position pos:line="3" pos:column="30"/></name><operator pos:line="3" pos:column="30">-&gt;<pos:position pos:line="3" pos:column="35"/></operator><name pos:line="3" pos:column="32">input<pos:position pos:line="3" pos:column="37"/></name></name></expr></argument>, <argument><expr><name pos:line="3" pos:column="39">ctx<pos:position pos:line="3" pos:column="42"/></name></expr></argument>, <argument><expr><name pos:line="3" pos:column="44">NULL<pos:position pos:line="3" pos:column="48"/></name></expr></argument>)<pos:position pos:line="3" pos:column="49"/></argument_list></call></expr></init></decl>;<pos:position pos:line="3" pos:column="50"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="4" pos:column="5">apr_finfo_t<pos:position pos:line="4" pos:column="16"/></name></type> <name pos:line="4" pos:column="17">sb<pos:position pos:line="4" pos:column="19"/></name></decl>;<pos:position pos:line="4" pos:column="20"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="5" pos:column="5">request_rec<pos:position pos:line="5" pos:column="16"/></name> <modifier pos:line="5" pos:column="17">*<pos:position pos:line="5" pos:column="18"/></modifier></type><name pos:line="5" pos:column="18">rsub<pos:position pos:line="5" pos:column="22"/></name></decl>, <modifier pos:line="5" pos:column="24">*<pos:position pos:line="5" pos:column="25"/></modifier><decl><type ref="prev"/><name pos:line="5" pos:column="25">r<pos:position pos:line="5" pos:column="26"/></name> <init pos:line="5" pos:column="27">= <expr><name><name pos:line="5" pos:column="29">ctx<pos:position pos:line="5" pos:column="32"/></name><operator pos:line="5" pos:column="32">-&gt;<pos:position pos:line="5" pos:column="37"/></operator><name pos:line="5" pos:column="34">r<pos:position pos:line="5" pos:column="35"/></name></name></expr></init></decl>;<pos:position pos:line="5" pos:column="36"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="6" pos:column="5">ap_regmatch_t<pos:position pos:line="6" pos:column="18"/></name></type> <name><name pos:line="6" pos:column="19">regmatch<pos:position pos:line="6" pos:column="27"/></name><index pos:line="6" pos:column="27">[<expr><name pos:line="6" pos:column="28">AP_MAX_REG_MATCH<pos:position pos:line="6" pos:column="44"/></name></expr>]<pos:position pos:line="6" pos:column="45"/></index></name></decl>;<pos:position pos:line="6" pos:column="46"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="7" pos:column="5">int<pos:position pos:line="7" pos:column="8"/></name></type> <name pos:line="7" pos:column="9">rc<pos:position pos:line="7" pos:column="11"/></name> <init pos:line="7" pos:column="12">= <expr><literal type="number" pos:line="7" pos:column="14">0<pos:position pos:line="7" pos:column="15"/></literal></expr></init></decl>;<pos:position pos:line="7" pos:column="16"/></decl_stmt>

    <switch pos:line="9" pos:column="5">switch <condition pos:line="9" pos:column="12">(<expr><name><name pos:line="9" pos:column="13">p<pos:position pos:line="9" pos:column="14"/></name><operator pos:line="9" pos:column="14">-&gt;<pos:position pos:line="9" pos:column="19"/></operator><name pos:line="9" pos:column="16">ptype<pos:position pos:line="9" pos:column="21"/></name></name></expr>)<pos:position pos:line="9" pos:column="22"/></condition> <block pos:line="9" pos:column="23">{
    <case pos:line="10" pos:column="5">case <expr><name pos:line="10" pos:column="10">CONDPAT_FILE_EXISTS<pos:position pos:line="10" pos:column="29"/></name></expr>:<pos:position pos:line="10" pos:column="30"/></case>
        <if pos:line="11" pos:column="9">if <condition pos:line="11" pos:column="12">(   <expr><call><name pos:line="11" pos:column="16">apr_stat<pos:position pos:line="11" pos:column="24"/></name><argument_list pos:line="11" pos:column="24">(<argument><expr><operator pos:line="11" pos:column="25">&amp;<pos:position pos:line="11" pos:column="30"/></operator><name pos:line="11" pos:column="26">sb<pos:position pos:line="11" pos:column="28"/></name></expr></argument>, <argument><expr><name pos:line="11" pos:column="30">input<pos:position pos:line="11" pos:column="35"/></name></expr></argument>, <argument><expr><name pos:line="11" pos:column="37">APR_FINFO_MIN<pos:position pos:line="11" pos:column="50"/></name></expr></argument>, <argument><expr><name><name pos:line="11" pos:column="52">r<pos:position pos:line="11" pos:column="53"/></name><operator pos:line="11" pos:column="53">-&gt;<pos:position pos:line="11" pos:column="58"/></operator><name pos:line="11" pos:column="55">pool<pos:position pos:line="11" pos:column="59"/></name></name></expr></argument>)<pos:position pos:line="11" pos:column="60"/></argument_list></call> <operator pos:line="11" pos:column="61">==<pos:position pos:line="11" pos:column="63"/></operator> <name pos:line="11" pos:column="64">APR_SUCCESS<pos:position pos:line="11" pos:column="75"/></name>
            <operator pos:line="12" pos:column="13">&amp;&amp;<pos:position pos:line="12" pos:column="23"/></operator> <name><name pos:line="12" pos:column="16">sb<pos:position pos:line="12" pos:column="18"/></name><operator pos:line="12" pos:column="18">.<pos:position pos:line="12" pos:column="19"/></operator><name pos:line="12" pos:column="19">filetype<pos:position pos:line="12" pos:column="27"/></name></name> <operator pos:line="12" pos:column="28">==<pos:position pos:line="12" pos:column="30"/></operator> <name pos:line="12" pos:column="31">APR_REG<pos:position pos:line="12" pos:column="38"/></name></expr>)<pos:position pos:line="12" pos:column="39"/></condition><then pos:line="12" pos:column="39"> <block pos:line="12" pos:column="40">{
            <expr_stmt><expr><name pos:line="13" pos:column="13">rc<pos:position pos:line="13" pos:column="15"/></name> <operator pos:line="13" pos:column="16">=<pos:position pos:line="13" pos:column="17"/></operator> <literal type="number" pos:line="13" pos:column="18">1<pos:position pos:line="13" pos:column="19"/></literal></expr>;<pos:position pos:line="13" pos:column="20"/></expr_stmt>
        }<pos:position pos:line="14" pos:column="10"/></block></then></if>
        <break pos:line="15" pos:column="9">break;<pos:position pos:line="15" pos:column="15"/></break>

    <case pos:line="17" pos:column="5">case <expr><name pos:line="17" pos:column="10">CONDPAT_FILE_SIZE<pos:position pos:line="17" pos:column="27"/></name></expr>:<pos:position pos:line="17" pos:column="28"/></case>
        <if pos:line="18" pos:column="9">if <condition pos:line="18" pos:column="12">(   <expr><call><name pos:line="18" pos:column="16">apr_stat<pos:position pos:line="18" pos:column="24"/></name><argument_list pos:line="18" pos:column="24">(<argument><expr><operator pos:line="18" pos:column="25">&amp;<pos:position pos:line="18" pos:column="30"/></operator><name pos:line="18" pos:column="26">sb<pos:position pos:line="18" pos:column="28"/></name></expr></argument>, <argument><expr><name pos:line="18" pos:column="30">input<pos:position pos:line="18" pos:column="35"/></name></expr></argument>, <argument><expr><name pos:line="18" pos:column="37">APR_FINFO_MIN<pos:position pos:line="18" pos:column="50"/></name></expr></argument>, <argument><expr><name><name pos:line="18" pos:column="52">r<pos:position pos:line="18" pos:column="53"/></name><operator pos:line="18" pos:column="53">-&gt;<pos:position pos:line="18" pos:column="58"/></operator><name pos:line="18" pos:column="55">pool<pos:position pos:line="18" pos:column="59"/></name></name></expr></argument>)<pos:position pos:line="18" pos:column="60"/></argument_list></call> <operator pos:line="18" pos:column="61">==<pos:position pos:line="18" pos:column="63"/></operator> <name pos:line="18" pos:column="64">APR_SUCCESS<pos:position pos:line="18" pos:column="75"/></name>
            <operator pos:line="19" pos:column="13">&amp;&amp;<pos:position pos:line="19" pos:column="23"/></operator> <name><name pos:line="19" pos:column="16">sb<pos:position pos:line="19" pos:column="18"/></name><operator pos:line="19" pos:column="18">.<pos:position pos:line="19" pos:column="19"/></operator><name pos:line="19" pos:column="19">filetype<pos:position pos:line="19" pos:column="27"/></name></name> <operator pos:line="19" pos:column="28">==<pos:position pos:line="19" pos:column="30"/></operator> <name pos:line="19" pos:column="31">APR_REG<pos:position pos:line="19" pos:column="38"/></name> <operator pos:line="19" pos:column="39">&amp;&amp;<pos:position pos:line="19" pos:column="49"/></operator> <name><name pos:line="19" pos:column="42">sb<pos:position pos:line="19" pos:column="44"/></name><operator pos:line="19" pos:column="44">.<pos:position pos:line="19" pos:column="45"/></operator><name pos:line="19" pos:column="45">size<pos:position pos:line="19" pos:column="49"/></name></name> <operator pos:line="19" pos:column="50">&gt;<pos:position pos:line="19" pos:column="54"/></operator> <literal type="number" pos:line="19" pos:column="52">0<pos:position pos:line="19" pos:column="53"/></literal></expr>)<pos:position pos:line="19" pos:column="54"/></condition><then pos:line="19" pos:column="54"> <block pos:line="19" pos:column="55">{
            <expr_stmt><expr><name pos:line="20" pos:column="13">rc<pos:position pos:line="20" pos:column="15"/></name> <operator pos:line="20" pos:column="16">=<pos:position pos:line="20" pos:column="17"/></operator> <literal type="number" pos:line="20" pos:column="18">1<pos:position pos:line="20" pos:column="19"/></literal></expr>;<pos:position pos:line="20" pos:column="20"/></expr_stmt>
        }<pos:position pos:line="21" pos:column="10"/></block></then></if>
        <break pos:line="22" pos:column="9">break;<pos:position pos:line="22" pos:column="15"/></break>

    <case pos:line="24" pos:column="5">case <expr><name pos:line="24" pos:column="10">CONDPAT_FILE_LINK<pos:position pos:line="24" pos:column="27"/></name></expr>:<pos:position pos:line="24" pos:column="28"/></case>
<cpp:if pos:line="25" pos:column="1">#<cpp:directive pos:line="25" pos:column="2">if<pos:position pos:line="25" pos:column="4"/></cpp:directive> <expr><operator pos:line="25" pos:column="5">!<pos:position pos:line="25" pos:column="6"/></operator><call><name pos:line="25" pos:column="6">defined<pos:position pos:line="25" pos:column="13"/></name><argument_list pos:line="25" pos:column="13">(<argument><expr><name pos:line="25" pos:column="14">OS2<pos:position pos:line="25" pos:column="17"/></name></expr></argument>)<pos:position pos:line="25" pos:column="18"/></argument_list></call></expr></cpp:if>
        <if pos:line="26" pos:column="9">if <condition pos:line="26" pos:column="12">(   <expr><call><name pos:line="26" pos:column="16">apr_stat<pos:position pos:line="26" pos:column="24"/></name><argument_list pos:line="26" pos:column="24">(<argument><expr><operator pos:line="26" pos:column="25">&amp;<pos:position pos:line="26" pos:column="30"/></operator><name pos:line="26" pos:column="26">sb<pos:position pos:line="26" pos:column="28"/></name></expr></argument>, <argument><expr><name pos:line="26" pos:column="30">input<pos:position pos:line="26" pos:column="35"/></name></expr></argument>, <argument><expr><name pos:line="26" pos:column="37">APR_FINFO_MIN<pos:position pos:line="26" pos:column="50"/></name> <operator pos:line="26" pos:column="51">|<pos:position pos:line="26" pos:column="52"/></operator> <name pos:line="26" pos:column="53">APR_FINFO_LINK<pos:position pos:line="26" pos:column="67"/></name></expr></argument>,
                        <argument><expr><name><name pos:line="27" pos:column="25">r<pos:position pos:line="27" pos:column="26"/></name><operator pos:line="27" pos:column="26">-&gt;<pos:position pos:line="27" pos:column="31"/></operator><name pos:line="27" pos:column="28">pool<pos:position pos:line="27" pos:column="32"/></name></name></expr></argument>)<pos:position pos:line="27" pos:column="33"/></argument_list></call> <operator pos:line="27" pos:column="34">==<pos:position pos:line="27" pos:column="36"/></operator> <name pos:line="27" pos:column="37">APR_SUCCESS<pos:position pos:line="27" pos:column="48"/></name>
            <operator pos:line="28" pos:column="13">&amp;&amp;<pos:position pos:line="28" pos:column="23"/></operator> <name><name pos:line="28" pos:column="16">sb<pos:position pos:line="28" pos:column="18"/></name><operator pos:line="28" pos:column="18">.<pos:position pos:line="28" pos:column="19"/></operator><name pos:line="28" pos:column="19">filetype<pos:position pos:line="28" pos:column="27"/></name></name> <operator pos:line="28" pos:column="28">==<pos:position pos:line="28" pos:column="30"/></operator> <name pos:line="28" pos:column="31">APR_LNK<pos:position pos:line="28" pos:column="38"/></name></expr>)<pos:position pos:line="28" pos:column="39"/></condition><then pos:line="28" pos:column="39"> <block pos:line="28" pos:column="40">{
            <expr_stmt><expr><name pos:line="29" pos:column="13">rc<pos:position pos:line="29" pos:column="15"/></name> <operator pos:line="29" pos:column="16">=<pos:position pos:line="29" pos:column="17"/></operator> <literal type="number" pos:line="29" pos:column="18">1<pos:position pos:line="29" pos:column="19"/></literal></expr>;<pos:position pos:line="29" pos:column="20"/></expr_stmt>
        }<pos:position pos:line="30" pos:column="10"/></block></then></if>
<cpp:endif pos:line="31" pos:column="1">#<cpp:directive pos:line="31" pos:column="2">endif<pos:position pos:line="31" pos:column="7"/></cpp:directive></cpp:endif>
        <break pos:line="32" pos:column="9">break;<pos:position pos:line="32" pos:column="15"/></break>

    <case pos:line="34" pos:column="5">case <expr><name pos:line="34" pos:column="10">CONDPAT_FILE_DIR<pos:position pos:line="34" pos:column="26"/></name></expr>:<pos:position pos:line="34" pos:column="27"/></case>
        <if pos:line="35" pos:column="9">if <condition pos:line="35" pos:column="12">(   <expr><call><name pos:line="35" pos:column="16">apr_stat<pos:position pos:line="35" pos:column="24"/></name><argument_list pos:line="35" pos:column="24">(<argument><expr><operator pos:line="35" pos:column="25">&amp;<pos:position pos:line="35" pos:column="30"/></operator><name pos:line="35" pos:column="26">sb<pos:position pos:line="35" pos:column="28"/></name></expr></argument>, <argument><expr><name pos:line="35" pos:column="30">input<pos:position pos:line="35" pos:column="35"/></name></expr></argument>, <argument><expr><name pos:line="35" pos:column="37">APR_FINFO_MIN<pos:position pos:line="35" pos:column="50"/></name></expr></argument>, <argument><expr><name><name pos:line="35" pos:column="52">r<pos:position pos:line="35" pos:column="53"/></name><operator pos:line="35" pos:column="53">-&gt;<pos:position pos:line="35" pos:column="58"/></operator><name pos:line="35" pos:column="55">pool<pos:position pos:line="35" pos:column="59"/></name></name></expr></argument>)<pos:position pos:line="35" pos:column="60"/></argument_list></call> <operator pos:line="35" pos:column="61">==<pos:position pos:line="35" pos:column="63"/></operator> <name pos:line="35" pos:column="64">APR_SUCCESS<pos:position pos:line="35" pos:column="75"/></name>
            <operator pos:line="36" pos:column="13">&amp;&amp;<pos:position pos:line="36" pos:column="23"/></operator> <name><name pos:line="36" pos:column="16">sb<pos:position pos:line="36" pos:column="18"/></name><operator pos:line="36" pos:column="18">.<pos:position pos:line="36" pos:column="19"/></operator><name pos:line="36" pos:column="19">filetype<pos:position pos:line="36" pos:column="27"/></name></name> <operator pos:line="36" pos:column="28">==<pos:position pos:line="36" pos:column="30"/></operator> <name pos:line="36" pos:column="31">APR_DIR<pos:position pos:line="36" pos:column="38"/></name></expr>)<pos:position pos:line="36" pos:column="39"/></condition><then pos:line="36" pos:column="39"> <block pos:line="36" pos:column="40">{
            <expr_stmt><expr><name pos:line="37" pos:column="13">rc<pos:position pos:line="37" pos:column="15"/></name> <operator pos:line="37" pos:column="16">=<pos:position pos:line="37" pos:column="17"/></operator> <literal type="number" pos:line="37" pos:column="18">1<pos:position pos:line="37" pos:column="19"/></literal></expr>;<pos:position pos:line="37" pos:column="20"/></expr_stmt>
        }<pos:position pos:line="38" pos:column="10"/></block></then></if>
        <break pos:line="39" pos:column="9">break;<pos:position pos:line="39" pos:column="15"/></break>

    <case pos:line="41" pos:column="5">case <expr><name pos:line="41" pos:column="10">CONDPAT_FILE_XBIT<pos:position pos:line="41" pos:column="27"/></name></expr>:<pos:position pos:line="41" pos:column="28"/></case>
        <if pos:line="42" pos:column="9">if <condition pos:line="42" pos:column="12">(   <expr><call><name pos:line="42" pos:column="16">apr_stat<pos:position pos:line="42" pos:column="24"/></name><argument_list pos:line="42" pos:column="24">(<argument><expr><operator pos:line="42" pos:column="25">&amp;<pos:position pos:line="42" pos:column="30"/></operator><name pos:line="42" pos:column="26">sb<pos:position pos:line="42" pos:column="28"/></name></expr></argument>, <argument><expr><name pos:line="42" pos:column="30">input<pos:position pos:line="42" pos:column="35"/></name></expr></argument>, <argument><expr><name pos:line="42" pos:column="37">APR_FINFO_PROT<pos:position pos:line="42" pos:column="51"/></name></expr></argument>, <argument><expr><name><name pos:line="42" pos:column="53">r<pos:position pos:line="42" pos:column="54"/></name><operator pos:line="42" pos:column="54">-&gt;<pos:position pos:line="42" pos:column="59"/></operator><name pos:line="42" pos:column="56">pool<pos:position pos:line="42" pos:column="60"/></name></name></expr></argument>)<pos:position pos:line="42" pos:column="61"/></argument_list></call> <operator pos:line="42" pos:column="62">==<pos:position pos:line="42" pos:column="64"/></operator> <name pos:line="42" pos:column="65">APR_SUCCESS<pos:position pos:line="42" pos:column="76"/></name>
            <operator pos:line="43" pos:column="13">&amp;&amp;<pos:position pos:line="43" pos:column="23"/></operator> <operator pos:line="43" pos:column="16">(<pos:position pos:line="43" pos:column="17"/></operator><name><name pos:line="43" pos:column="17">sb<pos:position pos:line="43" pos:column="19"/></name><operator pos:line="43" pos:column="19">.<pos:position pos:line="43" pos:column="20"/></operator><name pos:line="43" pos:column="20">protection<pos:position pos:line="43" pos:column="30"/></name></name> <operator pos:line="43" pos:column="31">&amp;<pos:position pos:line="43" pos:column="36"/></operator> <operator pos:line="43" pos:column="33">(<pos:position pos:line="43" pos:column="34"/></operator><name pos:line="43" pos:column="34">APR_UEXECUTE<pos:position pos:line="43" pos:column="46"/></name> <operator pos:line="43" pos:column="47">|<pos:position pos:line="43" pos:column="48"/></operator> <name pos:line="43" pos:column="49">APR_GEXECUTE<pos:position pos:line="43" pos:column="61"/></name> <operator pos:line="43" pos:column="62">|<pos:position pos:line="43" pos:column="63"/></operator> <name pos:line="43" pos:column="64">APR_WEXECUTE<pos:position pos:line="43" pos:column="76"/></name><operator pos:line="43" pos:column="76">)<pos:position pos:line="43" pos:column="77"/></operator><operator pos:line="43" pos:column="77">)<pos:position pos:line="43" pos:column="78"/></operator></expr>)<pos:position pos:line="43" pos:column="79"/></condition><then pos:line="43" pos:column="79"> <block pos:line="43" pos:column="80">{
            <expr_stmt><expr><name pos:line="44" pos:column="13">rc<pos:position pos:line="44" pos:column="15"/></name> <operator pos:line="44" pos:column="16">=<pos:position pos:line="44" pos:column="17"/></operator> <literal type="number" pos:line="44" pos:column="18">1<pos:position pos:line="44" pos:column="19"/></literal></expr>;<pos:position pos:line="44" pos:column="20"/></expr_stmt>
        }<pos:position pos:line="45" pos:column="10"/></block></then></if>
        <break pos:line="46" pos:column="9">break;<pos:position pos:line="46" pos:column="15"/></break>

    <case pos:line="48" pos:column="5">case <expr><name pos:line="48" pos:column="10">CONDPAT_LU_URL<pos:position pos:line="48" pos:column="24"/></name></expr>:<pos:position pos:line="48" pos:column="25"/></case>
        <if pos:line="49" pos:column="9">if <condition pos:line="49" pos:column="12">(<expr><operator pos:line="49" pos:column="13">*<pos:position pos:line="49" pos:column="14"/></operator><name pos:line="49" pos:column="14">input<pos:position pos:line="49" pos:column="19"/></name> <operator pos:line="49" pos:column="20">&amp;&amp;<pos:position pos:line="49" pos:column="30"/></operator> <call><name pos:line="49" pos:column="23">subreq_ok<pos:position pos:line="49" pos:column="32"/></name><argument_list pos:line="49" pos:column="32">(<argument><expr><name pos:line="49" pos:column="33">r<pos:position pos:line="49" pos:column="34"/></name></expr></argument>)<pos:position pos:line="49" pos:column="35"/></argument_list></call></expr>)<pos:position pos:line="49" pos:column="36"/></condition><then pos:line="49" pos:column="36"> <block pos:line="49" pos:column="37">{
            <expr_stmt><expr><name pos:line="50" pos:column="13">rsub<pos:position pos:line="50" pos:column="17"/></name> <operator pos:line="50" pos:column="18">=<pos:position pos:line="50" pos:column="19"/></operator> <call><name pos:line="50" pos:column="20">ap_sub_req_lookup_uri<pos:position pos:line="50" pos:column="41"/></name><argument_list pos:line="50" pos:column="41">(<argument><expr><name pos:line="50" pos:column="42">input<pos:position pos:line="50" pos:column="47"/></name></expr></argument>, <argument><expr><name pos:line="50" pos:column="49">r<pos:position pos:line="50" pos:column="50"/></name></expr></argument>, <argument><expr><name pos:line="50" pos:column="52">NULL<pos:position pos:line="50" pos:column="56"/></name></expr></argument>)<pos:position pos:line="50" pos:column="57"/></argument_list></call></expr>;<pos:position pos:line="50" pos:column="58"/></expr_stmt>
            <if pos:line="51" pos:column="13">if <condition pos:line="51" pos:column="16">(<expr><name><name pos:line="51" pos:column="17">rsub<pos:position pos:line="51" pos:column="21"/></name><operator pos:line="51" pos:column="21">-&gt;<pos:position pos:line="51" pos:column="26"/></operator><name pos:line="51" pos:column="23">status<pos:position pos:line="51" pos:column="29"/></name></name> <operator pos:line="51" pos:column="30">&lt;<pos:position pos:line="51" pos:column="34"/></operator> <literal type="number" pos:line="51" pos:column="32">400<pos:position pos:line="51" pos:column="35"/></literal></expr>)<pos:position pos:line="51" pos:column="36"/></condition><then pos:line="51" pos:column="36"> <block pos:line="51" pos:column="37">{
                <expr_stmt><expr><name pos:line="52" pos:column="17">rc<pos:position pos:line="52" pos:column="19"/></name> <operator pos:line="52" pos:column="20">=<pos:position pos:line="52" pos:column="21"/></operator> <literal type="number" pos:line="52" pos:column="22">1<pos:position pos:line="52" pos:column="23"/></literal></expr>;<pos:position pos:line="52" pos:column="24"/></expr_stmt>
            }<pos:position pos:line="53" pos:column="14"/></block></then></if>
            <expr_stmt><expr><call><name pos:line="54" pos:column="13">rewritelog<pos:position pos:line="54" pos:column="23"/></name><argument_list pos:line="54" pos:column="23">(<argument><expr><operator pos:line="54" pos:column="24">(<pos:position pos:line="54" pos:column="25"/></operator><name pos:line="54" pos:column="25">r<pos:position pos:line="54" pos:column="26"/></name><operator pos:line="54" pos:column="26">,<pos:position pos:line="54" pos:column="27"/></operator> <literal type="number" pos:line="54" pos:column="28">5<pos:position pos:line="54" pos:column="29"/></literal><operator pos:line="54" pos:column="29">,<pos:position pos:line="54" pos:column="30"/></operator> <name pos:line="54" pos:column="31">NULL<pos:position pos:line="54" pos:column="35"/></name><operator pos:line="54" pos:column="35">,<pos:position pos:line="54" pos:column="36"/></operator> <literal type="string" pos:line="54" pos:column="37">"RewriteCond URI (-U) check: "<pos:position pos:line="54" pos:column="67"/></literal>
                        <literal type="string" pos:line="55" pos:column="25">"path=%s -&gt; status=%d"<pos:position pos:line="55" pos:column="50"/></literal><operator pos:line="55" pos:column="47">,<pos:position pos:line="55" pos:column="48"/></operator> <name pos:line="55" pos:column="49">input<pos:position pos:line="55" pos:column="54"/></name><operator pos:line="55" pos:column="54">,<pos:position pos:line="55" pos:column="55"/></operator> <name><name pos:line="55" pos:column="56">rsub<pos:position pos:line="55" pos:column="60"/></name><operator pos:line="55" pos:column="60">-&gt;<pos:position pos:line="55" pos:column="65"/></operator><name pos:line="55" pos:column="62">status<pos:position pos:line="55" pos:column="68"/></name></name><operator pos:line="55" pos:column="68">)<pos:position pos:line="55" pos:column="69"/></operator></expr></argument>)<pos:position pos:line="55" pos:column="70"/></argument_list></call></expr>;<pos:position pos:line="55" pos:column="71"/></expr_stmt>
            <expr_stmt><expr><call><name pos:line="56" pos:column="13">ap_destroy_sub_req<pos:position pos:line="56" pos:column="31"/></name><argument_list pos:line="56" pos:column="31">(<argument><expr><name pos:line="56" pos:column="32">rsub<pos:position pos:line="56" pos:column="36"/></name></expr></argument>)<pos:position pos:line="56" pos:column="37"/></argument_list></call></expr>;<pos:position pos:line="56" pos:column="38"/></expr_stmt>
        }<pos:position pos:line="57" pos:column="10"/></block></then></if>
        <break pos:line="58" pos:column="9">break;<pos:position pos:line="58" pos:column="15"/></break>

    <case pos:line="60" pos:column="5">case <expr><name pos:line="60" pos:column="10">CONDPAT_LU_FILE<pos:position pos:line="60" pos:column="25"/></name></expr>:<pos:position pos:line="60" pos:column="26"/></case>
        <if pos:line="61" pos:column="9">if <condition pos:line="61" pos:column="12">(<expr><operator pos:line="61" pos:column="13">*<pos:position pos:line="61" pos:column="14"/></operator><name pos:line="61" pos:column="14">input<pos:position pos:line="61" pos:column="19"/></name> <operator pos:line="61" pos:column="20">&amp;&amp;<pos:position pos:line="61" pos:column="30"/></operator> <call><name pos:line="61" pos:column="23">subreq_ok<pos:position pos:line="61" pos:column="32"/></name><argument_list pos:line="61" pos:column="32">(<argument><expr><name pos:line="61" pos:column="33">r<pos:position pos:line="61" pos:column="34"/></name></expr></argument>)<pos:position pos:line="61" pos:column="35"/></argument_list></call></expr>)<pos:position pos:line="61" pos:column="36"/></condition><then pos:line="61" pos:column="36"> <block pos:line="61" pos:column="37">{
            <expr_stmt><expr><name pos:line="62" pos:column="13">rsub<pos:position pos:line="62" pos:column="17"/></name> <operator pos:line="62" pos:column="18">=<pos:position pos:line="62" pos:column="19"/></operator> <call><name pos:line="62" pos:column="20">ap_sub_req_lookup_file<pos:position pos:line="62" pos:column="42"/></name><argument_list pos:line="62" pos:column="42">(<argument><expr><name pos:line="62" pos:column="43">input<pos:position pos:line="62" pos:column="48"/></name></expr></argument>, <argument><expr><name pos:line="62" pos:column="50">r<pos:position pos:line="62" pos:column="51"/></name></expr></argument>, <argument><expr><name pos:line="62" pos:column="53">NULL<pos:position pos:line="62" pos:column="57"/></name></expr></argument>)<pos:position pos:line="62" pos:column="58"/></argument_list></call></expr>;<pos:position pos:line="62" pos:column="59"/></expr_stmt>
            <if pos:line="63" pos:column="13">if <condition pos:line="63" pos:column="16">(<expr><name><name pos:line="63" pos:column="17">rsub<pos:position pos:line="63" pos:column="21"/></name><operator pos:line="63" pos:column="21">-&gt;<pos:position pos:line="63" pos:column="26"/></operator><name pos:line="63" pos:column="23">status<pos:position pos:line="63" pos:column="29"/></name></name> <operator pos:line="63" pos:column="30">&lt;<pos:position pos:line="63" pos:column="34"/></operator> <literal type="number" pos:line="63" pos:column="32">300<pos:position pos:line="63" pos:column="35"/></literal> <operator pos:line="63" pos:column="36">&amp;&amp;<pos:position pos:line="63" pos:column="46"/></operator>
                <comment type="block" pos:line="64" pos:column="17">/* double-check that file exists since default result is 200 */</comment>
                <call><name pos:line="65" pos:column="17">apr_stat<pos:position pos:line="65" pos:column="25"/></name><argument_list pos:line="65" pos:column="25">(<argument><expr><operator pos:line="65" pos:column="26">&amp;<pos:position pos:line="65" pos:column="31"/></operator><name pos:line="65" pos:column="27">sb<pos:position pos:line="65" pos:column="29"/></name></expr></argument>, <argument><expr><name><name pos:line="65" pos:column="31">rsub<pos:position pos:line="65" pos:column="35"/></name><operator pos:line="65" pos:column="35">-&gt;<pos:position pos:line="65" pos:column="40"/></operator><name pos:line="65" pos:column="37">filename<pos:position pos:line="65" pos:column="45"/></name></name></expr></argument>, <argument><expr><name pos:line="65" pos:column="47">APR_FINFO_MIN<pos:position pos:line="65" pos:column="60"/></name></expr></argument>,
                         <argument><expr><name><name pos:line="66" pos:column="26">r<pos:position pos:line="66" pos:column="27"/></name><operator pos:line="66" pos:column="27">-&gt;<pos:position pos:line="66" pos:column="32"/></operator><name pos:line="66" pos:column="29">pool<pos:position pos:line="66" pos:column="33"/></name></name></expr></argument>)<pos:position pos:line="66" pos:column="34"/></argument_list></call> <operator pos:line="66" pos:column="35">==<pos:position pos:line="66" pos:column="37"/></operator> <name pos:line="66" pos:column="38">APR_SUCCESS<pos:position pos:line="66" pos:column="49"/></name></expr>)<pos:position pos:line="66" pos:column="50"/></condition><then pos:line="66" pos:column="50"> <block pos:line="66" pos:column="51">{
                <expr_stmt><expr><name pos:line="67" pos:column="17">rc<pos:position pos:line="67" pos:column="19"/></name> <operator pos:line="67" pos:column="20">=<pos:position pos:line="67" pos:column="21"/></operator> <literal type="number" pos:line="67" pos:column="22">1<pos:position pos:line="67" pos:column="23"/></literal></expr>;<pos:position pos:line="67" pos:column="24"/></expr_stmt>
            }<pos:position pos:line="68" pos:column="14"/></block></then></if>
            <expr_stmt><expr><call><name pos:line="69" pos:column="13">rewritelog<pos:position pos:line="69" pos:column="23"/></name><argument_list pos:line="69" pos:column="23">(<argument><expr><operator pos:line="69" pos:column="24">(<pos:position pos:line="69" pos:column="25"/></operator><name pos:line="69" pos:column="25">r<pos:position pos:line="69" pos:column="26"/></name><operator pos:line="69" pos:column="26">,<pos:position pos:line="69" pos:column="27"/></operator> <literal type="number" pos:line="69" pos:column="28">5<pos:position pos:line="69" pos:column="29"/></literal><operator pos:line="69" pos:column="29">,<pos:position pos:line="69" pos:column="30"/></operator> <name pos:line="69" pos:column="31">NULL<pos:position pos:line="69" pos:column="35"/></name><operator pos:line="69" pos:column="35">,<pos:position pos:line="69" pos:column="36"/></operator> <literal type="string" pos:line="69" pos:column="37">"RewriteCond file (-F) check: path=%s "<pos:position pos:line="69" pos:column="76"/></literal>
                        <literal type="string" pos:line="70" pos:column="25">"-&gt; file=%s status=%d"<pos:position pos:line="70" pos:column="50"/></literal><operator pos:line="70" pos:column="47">,<pos:position pos:line="70" pos:column="48"/></operator> <name pos:line="70" pos:column="49">input<pos:position pos:line="70" pos:column="54"/></name><operator pos:line="70" pos:column="54">,<pos:position pos:line="70" pos:column="55"/></operator> <name><name pos:line="70" pos:column="56">rsub<pos:position pos:line="70" pos:column="60"/></name><operator pos:line="70" pos:column="60">-&gt;<pos:position pos:line="70" pos:column="65"/></operator><name pos:line="70" pos:column="62">filename<pos:position pos:line="70" pos:column="70"/></name></name><operator pos:line="70" pos:column="70">,<pos:position pos:line="70" pos:column="71"/></operator>
                        <name><name pos:line="71" pos:column="25">rsub<pos:position pos:line="71" pos:column="29"/></name><operator pos:line="71" pos:column="29">-&gt;<pos:position pos:line="71" pos:column="34"/></operator><name pos:line="71" pos:column="31">status<pos:position pos:line="71" pos:column="37"/></name></name><operator pos:line="71" pos:column="37">)<pos:position pos:line="71" pos:column="38"/></operator></expr></argument>)<pos:position pos:line="71" pos:column="39"/></argument_list></call></expr>;<pos:position pos:line="71" pos:column="40"/></expr_stmt>
            <expr_stmt><expr><call><name pos:line="72" pos:column="13">ap_destroy_sub_req<pos:position pos:line="72" pos:column="31"/></name><argument_list pos:line="72" pos:column="31">(<argument><expr><name pos:line="72" pos:column="32">rsub<pos:position pos:line="72" pos:column="36"/></name></expr></argument>)<pos:position pos:line="72" pos:column="37"/></argument_list></call></expr>;<pos:position pos:line="72" pos:column="38"/></expr_stmt>
        }<pos:position pos:line="73" pos:column="10"/></block></then></if>
        <break pos:line="74" pos:column="9">break;<pos:position pos:line="74" pos:column="15"/></break>

    <case pos:line="76" pos:column="5">case <expr><name pos:line="76" pos:column="10">CONDPAT_STR_GT<pos:position pos:line="76" pos:column="24"/></name></expr>:<pos:position pos:line="76" pos:column="25"/></case>
        <expr_stmt><expr><name pos:line="77" pos:column="9">rc<pos:position pos:line="77" pos:column="11"/></name> <operator pos:line="77" pos:column="12">=<pos:position pos:line="77" pos:column="13"/></operator> <ternary><condition><expr><operator pos:line="77" pos:column="14">(<pos:position pos:line="77" pos:column="15"/></operator><call><name pos:line="77" pos:column="15">compare_lexicography<pos:position pos:line="77" pos:column="35"/></name><argument_list pos:line="77" pos:column="35">(<argument><expr><name pos:line="77" pos:column="36">input<pos:position pos:line="77" pos:column="41"/></name></expr></argument>, <argument><expr><name><name pos:line="77" pos:column="43">p<pos:position pos:line="77" pos:column="44"/></name><operator pos:line="77" pos:column="44">-&gt;<pos:position pos:line="77" pos:column="49"/></operator><name pos:line="77" pos:column="46">pattern<pos:position pos:line="77" pos:column="53"/></name></name><operator pos:line="77" pos:column="53">+<pos:position pos:line="77" pos:column="54"/></operator><literal type="number" pos:line="77" pos:column="54">1<pos:position pos:line="77" pos:column="55"/></literal></expr></argument>)<pos:position pos:line="77" pos:column="56"/></argument_list></call> <operator pos:line="77" pos:column="57">==<pos:position pos:line="77" pos:column="59"/></operator> <literal type="number" pos:line="77" pos:column="60">1<pos:position pos:line="77" pos:column="61"/></literal><operator pos:line="77" pos:column="61">)<pos:position pos:line="77" pos:column="62"/></operator></expr> ?<pos:position pos:line="77" pos:column="64"/></condition><then pos:line="77" pos:column="64"> <expr><literal type="number" pos:line="77" pos:column="65">1<pos:position pos:line="77" pos:column="66"/></literal></expr> <pos:position pos:line="77" pos:column="67"/></then><else pos:line="77" pos:column="67">: <expr><literal type="number" pos:line="77" pos:column="69">0<pos:position pos:line="77" pos:column="70"/></literal></expr></else></ternary></expr>;<pos:position pos:line="77" pos:column="71"/></expr_stmt>
        <break pos:line="78" pos:column="9">break;<pos:position pos:line="78" pos:column="15"/></break>

    <case pos:line="80" pos:column="5">case <expr><name pos:line="80" pos:column="10">CONDPAT_STR_LT<pos:position pos:line="80" pos:column="24"/></name></expr>:<pos:position pos:line="80" pos:column="25"/></case>
        <expr_stmt><expr><name pos:line="81" pos:column="9">rc<pos:position pos:line="81" pos:column="11"/></name> <operator pos:line="81" pos:column="12">=<pos:position pos:line="81" pos:column="13"/></operator> <ternary><condition><expr><operator pos:line="81" pos:column="14">(<pos:position pos:line="81" pos:column="15"/></operator><call><name pos:line="81" pos:column="15">compare_lexicography<pos:position pos:line="81" pos:column="35"/></name><argument_list pos:line="81" pos:column="35">(<argument><expr><name pos:line="81" pos:column="36">input<pos:position pos:line="81" pos:column="41"/></name></expr></argument>, <argument><expr><name><name pos:line="81" pos:column="43">p<pos:position pos:line="81" pos:column="44"/></name><operator pos:line="81" pos:column="44">-&gt;<pos:position pos:line="81" pos:column="49"/></operator><name pos:line="81" pos:column="46">pattern<pos:position pos:line="81" pos:column="53"/></name></name><operator pos:line="81" pos:column="53">+<pos:position pos:line="81" pos:column="54"/></operator><literal type="number" pos:line="81" pos:column="54">1<pos:position pos:line="81" pos:column="55"/></literal></expr></argument>)<pos:position pos:line="81" pos:column="56"/></argument_list></call> <operator pos:line="81" pos:column="57">==<pos:position pos:line="81" pos:column="59"/></operator> <operator pos:line="81" pos:column="60">-<pos:position pos:line="81" pos:column="61"/></operator><literal type="number" pos:line="81" pos:column="61">1<pos:position pos:line="81" pos:column="62"/></literal><operator pos:line="81" pos:column="62">)<pos:position pos:line="81" pos:column="63"/></operator></expr> ?<pos:position pos:line="81" pos:column="65"/></condition><then pos:line="81" pos:column="65"> <expr><literal type="number" pos:line="81" pos:column="66">1<pos:position pos:line="81" pos:column="67"/></literal></expr> <pos:position pos:line="81" pos:column="68"/></then><else pos:line="81" pos:column="68">: <expr><literal type="number" pos:line="81" pos:column="70">0<pos:position pos:line="81" pos:column="71"/></literal></expr></else></ternary></expr>;<pos:position pos:line="81" pos:column="72"/></expr_stmt>
        <break pos:line="82" pos:column="9">break;<pos:position pos:line="82" pos:column="15"/></break>

    <case pos:line="84" pos:column="5">case <expr><name pos:line="84" pos:column="10">CONDPAT_STR_EQ<pos:position pos:line="84" pos:column="24"/></name></expr>:<pos:position pos:line="84" pos:column="25"/></case>
        <if pos:line="85" pos:column="9">if <condition pos:line="85" pos:column="12">(<expr><name><name pos:line="85" pos:column="13">p<pos:position pos:line="85" pos:column="14"/></name><operator pos:line="85" pos:column="14">-&gt;<pos:position pos:line="85" pos:column="19"/></operator><name pos:line="85" pos:column="16">flags<pos:position pos:line="85" pos:column="21"/></name></name> <operator pos:line="85" pos:column="22">&amp;<pos:position pos:line="85" pos:column="27"/></operator> <name pos:line="85" pos:column="24">CONDFLAG_NOCASE<pos:position pos:line="85" pos:column="39"/></name></expr>)<pos:position pos:line="85" pos:column="40"/></condition><then pos:line="85" pos:column="40"> <block pos:line="85" pos:column="41">{
            <expr_stmt><expr><name pos:line="86" pos:column="13">rc<pos:position pos:line="86" pos:column="15"/></name> <operator pos:line="86" pos:column="16">=<pos:position pos:line="86" pos:column="17"/></operator> <operator pos:line="86" pos:column="18">!<pos:position pos:line="86" pos:column="19"/></operator><call><name pos:line="86" pos:column="19">strcasecmp<pos:position pos:line="86" pos:column="29"/></name><argument_list pos:line="86" pos:column="29">(<argument><expr><name pos:line="86" pos:column="30">input<pos:position pos:line="86" pos:column="35"/></name></expr></argument>, <argument><expr><name><name pos:line="86" pos:column="37">p<pos:position pos:line="86" pos:column="38"/></name><operator pos:line="86" pos:column="38">-&gt;<pos:position pos:line="86" pos:column="43"/></operator><name pos:line="86" pos:column="40">pattern<pos:position pos:line="86" pos:column="47"/></name></name></expr></argument>)<pos:position pos:line="86" pos:column="48"/></argument_list></call></expr>;<pos:position pos:line="86" pos:column="49"/></expr_stmt>
        }<pos:position pos:line="87" pos:column="10"/></block></then>
        <else pos:line="88" pos:column="9">else <block pos:line="88" pos:column="14">{
            <expr_stmt><expr><name pos:line="89" pos:column="13">rc<pos:position pos:line="89" pos:column="15"/></name> <operator pos:line="89" pos:column="16">=<pos:position pos:line="89" pos:column="17"/></operator> <operator pos:line="89" pos:column="18">!<pos:position pos:line="89" pos:column="19"/></operator><call><name pos:line="89" pos:column="19">strcmp<pos:position pos:line="89" pos:column="25"/></name><argument_list pos:line="89" pos:column="25">(<argument><expr><name pos:line="89" pos:column="26">input<pos:position pos:line="89" pos:column="31"/></name></expr></argument>, <argument><expr><name><name pos:line="89" pos:column="33">p<pos:position pos:line="89" pos:column="34"/></name><operator pos:line="89" pos:column="34">-&gt;<pos:position pos:line="89" pos:column="39"/></operator><name pos:line="89" pos:column="36">pattern<pos:position pos:line="89" pos:column="43"/></name></name></expr></argument>)<pos:position pos:line="89" pos:column="44"/></argument_list></call></expr>;<pos:position pos:line="89" pos:column="45"/></expr_stmt>
        }<pos:position pos:line="90" pos:column="10"/></block></else></if>
        <break pos:line="91" pos:column="9">break;<pos:position pos:line="91" pos:column="15"/></break>

    <default pos:line="93" pos:column="5">default:<pos:position pos:line="93" pos:column="13"/></default>
        <comment type="block" pos:line="94" pos:column="9">/* it is really a regexp pattern, so apply it */</comment>
        <expr_stmt><expr><name pos:line="95" pos:column="9">rc<pos:position pos:line="95" pos:column="11"/></name> <operator pos:line="95" pos:column="12">=<pos:position pos:line="95" pos:column="13"/></operator> <operator pos:line="95" pos:column="14">!<pos:position pos:line="95" pos:column="15"/></operator><call><name pos:line="95" pos:column="15">ap_regexec<pos:position pos:line="95" pos:column="25"/></name><argument_list pos:line="95" pos:column="25">(<argument><expr><name><name pos:line="95" pos:column="26">p<pos:position pos:line="95" pos:column="27"/></name><operator pos:line="95" pos:column="27">-&gt;<pos:position pos:line="95" pos:column="32"/></operator><name pos:line="95" pos:column="29">regexp<pos:position pos:line="95" pos:column="35"/></name></name></expr></argument>, <argument><expr><name pos:line="95" pos:column="37">input<pos:position pos:line="95" pos:column="42"/></name></expr></argument>, <argument><expr><name pos:line="95" pos:column="44">AP_MAX_REG_MATCH<pos:position pos:line="95" pos:column="60"/></name></expr></argument>, <argument><expr><name pos:line="95" pos:column="62">regmatch<pos:position pos:line="95" pos:column="70"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="95" pos:column="72">0<pos:position pos:line="95" pos:column="73"/></literal></expr></argument>)<pos:position pos:line="95" pos:column="74"/></argument_list></call></expr>;<pos:position pos:line="95" pos:column="75"/></expr_stmt>

        <comment type="block" pos:line="97" pos:column="9">/* update briRC backref info */</comment>
        <if pos:line="98" pos:column="9">if <condition pos:line="98" pos:column="12">(<expr><name pos:line="98" pos:column="13">rc<pos:position pos:line="98" pos:column="15"/></name> <operator pos:line="98" pos:column="16">&amp;&amp;<pos:position pos:line="98" pos:column="26"/></operator> <operator pos:line="98" pos:column="19">!<pos:position pos:line="98" pos:column="20"/></operator><operator pos:line="98" pos:column="20">(<pos:position pos:line="98" pos:column="21"/></operator><name><name pos:line="98" pos:column="21">p<pos:position pos:line="98" pos:column="22"/></name><operator pos:line="98" pos:column="22">-&gt;<pos:position pos:line="98" pos:column="27"/></operator><name pos:line="98" pos:column="24">flags<pos:position pos:line="98" pos:column="29"/></name></name> <operator pos:line="98" pos:column="30">&amp;<pos:position pos:line="98" pos:column="35"/></operator> <name pos:line="98" pos:column="32">CONDFLAG_NOTMATCH<pos:position pos:line="98" pos:column="49"/></name><operator pos:line="98" pos:column="49">)<pos:position pos:line="98" pos:column="50"/></operator></expr>)<pos:position pos:line="98" pos:column="51"/></condition><then pos:line="98" pos:column="51"> <block pos:line="98" pos:column="52">{
            <expr_stmt><expr><name><name pos:line="99" pos:column="13">ctx<pos:position pos:line="99" pos:column="16"/></name><operator pos:line="99" pos:column="16">-&gt;<pos:position pos:line="99" pos:column="21"/></operator><name pos:line="99" pos:column="18">briRC<pos:position pos:line="99" pos:column="23"/></name><operator pos:line="99" pos:column="23">.<pos:position pos:line="99" pos:column="24"/></operator><name pos:line="99" pos:column="24">source<pos:position pos:line="99" pos:column="30"/></name></name> <operator pos:line="99" pos:column="31">=<pos:position pos:line="99" pos:column="32"/></operator> <name pos:line="99" pos:column="33">input<pos:position pos:line="99" pos:column="38"/></name></expr>;<pos:position pos:line="99" pos:column="39"/></expr_stmt>
            <expr_stmt><expr><name><name pos:line="100" pos:column="13">ctx<pos:position pos:line="100" pos:column="16"/></name><operator pos:line="100" pos:column="16">-&gt;<pos:position pos:line="100" pos:column="21"/></operator><name pos:line="100" pos:column="18">briRC<pos:position pos:line="100" pos:column="23"/></name><operator pos:line="100" pos:column="23">.<pos:position pos:line="100" pos:column="24"/></operator><name pos:line="100" pos:column="24">nsub<pos:position pos:line="100" pos:column="28"/></name></name>   <operator pos:line="100" pos:column="31">=<pos:position pos:line="100" pos:column="32"/></operator> <name><name pos:line="100" pos:column="33">p<pos:position pos:line="100" pos:column="34"/></name><operator pos:line="100" pos:column="34">-&gt;<pos:position pos:line="100" pos:column="39"/></operator><name pos:line="100" pos:column="36">regexp<pos:position pos:line="100" pos:column="42"/></name><operator pos:line="100" pos:column="42">-&gt;<pos:position pos:line="100" pos:column="47"/></operator><name pos:line="100" pos:column="44">re_nsub<pos:position pos:line="100" pos:column="51"/></name></name></expr>;<pos:position pos:line="100" pos:column="52"/></expr_stmt>
            <expr_stmt><expr><call><name pos:line="101" pos:column="13">memcpy<pos:position pos:line="101" pos:column="19"/></name><argument_list pos:line="101" pos:column="19">(<argument><expr><name><name pos:line="101" pos:column="20">ctx<pos:position pos:line="101" pos:column="23"/></name><operator pos:line="101" pos:column="23">-&gt;<pos:position pos:line="101" pos:column="28"/></operator><name pos:line="101" pos:column="25">briRC<pos:position pos:line="101" pos:column="30"/></name><operator pos:line="101" pos:column="30">.<pos:position pos:line="101" pos:column="31"/></operator><name pos:line="101" pos:column="31">regmatch<pos:position pos:line="101" pos:column="39"/></name></name></expr></argument>, <argument><expr><name pos:line="101" pos:column="41">regmatch<pos:position pos:line="101" pos:column="49"/></name></expr></argument>, <argument><expr><sizeof pos:line="101" pos:column="51">sizeof<argument_list pos:line="101" pos:column="57">(<argument><expr><name pos:line="101" pos:column="58">regmatch<pos:position pos:line="101" pos:column="66"/></name></expr></argument>)<pos:position pos:line="101" pos:column="67"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="101" pos:column="68"/></argument_list></call></expr>;<pos:position pos:line="101" pos:column="69"/></expr_stmt>
        }<pos:position pos:line="102" pos:column="10"/></block></then></if>
        <break pos:line="103" pos:column="9">break;<pos:position pos:line="103" pos:column="15"/></break>
    }<pos:position pos:line="104" pos:column="6"/></block></switch>

    <if pos:line="106" pos:column="5">if <condition pos:line="106" pos:column="8">(<expr><name><name pos:line="106" pos:column="9">p<pos:position pos:line="106" pos:column="10"/></name><operator pos:line="106" pos:column="10">-&gt;<pos:position pos:line="106" pos:column="15"/></operator><name pos:line="106" pos:column="12">flags<pos:position pos:line="106" pos:column="17"/></name></name> <operator pos:line="106" pos:column="18">&amp;<pos:position pos:line="106" pos:column="23"/></operator> <name pos:line="106" pos:column="20">CONDFLAG_NOTMATCH<pos:position pos:line="106" pos:column="37"/></name></expr>)<pos:position pos:line="106" pos:column="38"/></condition><then pos:line="106" pos:column="38"> <block pos:line="106" pos:column="39">{
        <expr_stmt><expr><name pos:line="107" pos:column="9">rc<pos:position pos:line="107" pos:column="11"/></name> <operator pos:line="107" pos:column="12">=<pos:position pos:line="107" pos:column="13"/></operator> <operator pos:line="107" pos:column="14">!<pos:position pos:line="107" pos:column="15"/></operator><name pos:line="107" pos:column="15">rc<pos:position pos:line="107" pos:column="17"/></name></expr>;<pos:position pos:line="107" pos:column="18"/></expr_stmt>
    }<pos:position pos:line="108" pos:column="6"/></block></then></if>

    <expr_stmt><expr><call><name pos:line="110" pos:column="5">rewritelog<pos:position pos:line="110" pos:column="15"/></name><argument_list pos:line="110" pos:column="15">(<argument><expr><operator pos:line="110" pos:column="16">(<pos:position pos:line="110" pos:column="17"/></operator><name pos:line="110" pos:column="17">r<pos:position pos:line="110" pos:column="18"/></name><operator pos:line="110" pos:column="18">,<pos:position pos:line="110" pos:column="19"/></operator> <literal type="number" pos:line="110" pos:column="20">4<pos:position pos:line="110" pos:column="21"/></literal><operator pos:line="110" pos:column="21">,<pos:position pos:line="110" pos:column="22"/></operator> <name><name pos:line="110" pos:column="23">ctx<pos:position pos:line="110" pos:column="26"/></name><operator pos:line="110" pos:column="26">-&gt;<pos:position pos:line="110" pos:column="31"/></operator><name pos:line="110" pos:column="28">perdir<pos:position pos:line="110" pos:column="34"/></name></name><operator pos:line="110" pos:column="34">,<pos:position pos:line="110" pos:column="35"/></operator> <literal type="string" pos:line="110" pos:column="36">"RewriteCond: input='%s' pattern='%s%s%s'%s "<pos:position pos:line="110" pos:column="81"/></literal>
                <literal type="string" pos:line="111" pos:column="17">"=&gt; %s"<pos:position pos:line="111" pos:column="27"/></literal><operator pos:line="111" pos:column="24">,<pos:position pos:line="111" pos:column="25"/></operator> <name pos:line="111" pos:column="26">input<pos:position pos:line="111" pos:column="31"/></name><operator pos:line="111" pos:column="31">,<pos:position pos:line="111" pos:column="32"/></operator> <ternary><condition><expr><operator pos:line="111" pos:column="33">(<pos:position pos:line="111" pos:column="34"/></operator><name><name pos:line="111" pos:column="34">p<pos:position pos:line="111" pos:column="35"/></name><operator pos:line="111" pos:column="35">-&gt;<pos:position pos:line="111" pos:column="40"/></operator><name pos:line="111" pos:column="37">flags<pos:position pos:line="111" pos:column="42"/></name></name> <operator pos:line="111" pos:column="43">&amp;<pos:position pos:line="111" pos:column="48"/></operator> <name pos:line="111" pos:column="45">CONDFLAG_NOTMATCH<pos:position pos:line="111" pos:column="62"/></name><operator pos:line="111" pos:column="62">)<pos:position pos:line="111" pos:column="63"/></operator></expr> ?<pos:position pos:line="111" pos:column="65"/></condition><then pos:line="111" pos:column="65"> <expr><literal type="string" pos:line="111" pos:column="66">"!"<pos:position pos:line="111" pos:column="69"/></literal></expr> <pos:position pos:line="111" pos:column="70"/></then><else pos:line="111" pos:column="70">: <expr><literal type="string" pos:line="111" pos:column="72">""<pos:position pos:line="111" pos:column="74"/></literal></expr></else></ternary><operator pos:line="111" pos:column="74">,<pos:position pos:line="111" pos:column="75"/></operator>
                <ternary><condition><expr><operator pos:line="112" pos:column="17">(<pos:position pos:line="112" pos:column="18"/></operator><name><name pos:line="112" pos:column="18">p<pos:position pos:line="112" pos:column="19"/></name><operator pos:line="112" pos:column="19">-&gt;<pos:position pos:line="112" pos:column="24"/></operator><name pos:line="112" pos:column="21">ptype<pos:position pos:line="112" pos:column="26"/></name></name> <operator pos:line="112" pos:column="27">==<pos:position pos:line="112" pos:column="29"/></operator> <name pos:line="112" pos:column="30">CONDPAT_STR_EQ<pos:position pos:line="112" pos:column="44"/></name><operator pos:line="112" pos:column="44">)<pos:position pos:line="112" pos:column="45"/></operator></expr> ?<pos:position pos:line="112" pos:column="47"/></condition><then pos:line="112" pos:column="47"> <expr><literal type="string" pos:line="112" pos:column="48">"="<pos:position pos:line="112" pos:column="51"/></literal></expr> <pos:position pos:line="112" pos:column="52"/></then><else pos:line="112" pos:column="52">: <expr><literal type="string" pos:line="112" pos:column="54">""<pos:position pos:line="112" pos:column="56"/></literal></expr></else></ternary><operator pos:line="112" pos:column="56">,<pos:position pos:line="112" pos:column="57"/></operator> <name><name pos:line="112" pos:column="58">p<pos:position pos:line="112" pos:column="59"/></name><operator pos:line="112" pos:column="59">-&gt;<pos:position pos:line="112" pos:column="64"/></operator><name pos:line="112" pos:column="61">pattern<pos:position pos:line="112" pos:column="68"/></name></name><operator pos:line="112" pos:column="68">,<pos:position pos:line="112" pos:column="69"/></operator>
                <ternary><condition><expr><operator pos:line="113" pos:column="17">(<pos:position pos:line="113" pos:column="18"/></operator><name><name pos:line="113" pos:column="18">p<pos:position pos:line="113" pos:column="19"/></name><operator pos:line="113" pos:column="19">-&gt;<pos:position pos:line="113" pos:column="24"/></operator><name pos:line="113" pos:column="21">flags<pos:position pos:line="113" pos:column="26"/></name></name> <operator pos:line="113" pos:column="27">&amp;<pos:position pos:line="113" pos:column="32"/></operator> <name pos:line="113" pos:column="29">CONDFLAG_NOCASE<pos:position pos:line="113" pos:column="44"/></name><operator pos:line="113" pos:column="44">)<pos:position pos:line="113" pos:column="45"/></operator></expr> ?<pos:position pos:line="113" pos:column="47"/></condition><then pos:line="113" pos:column="47"> <expr><literal type="string" pos:line="113" pos:column="48">" [NC]"<pos:position pos:line="113" pos:column="55"/></literal></expr> <pos:position pos:line="113" pos:column="56"/></then><else pos:line="113" pos:column="56">: <expr><literal type="string" pos:line="113" pos:column="58">""<pos:position pos:line="113" pos:column="60"/></literal></expr></else></ternary><operator pos:line="113" pos:column="60">,<pos:position pos:line="113" pos:column="61"/></operator>
                <ternary><condition><expr><name pos:line="114" pos:column="17">rc<pos:position pos:line="114" pos:column="19"/></name></expr> ?<pos:position pos:line="114" pos:column="21"/></condition><then pos:line="114" pos:column="21"> <expr><literal type="string" pos:line="114" pos:column="22">"matched"<pos:position pos:line="114" pos:column="31"/></literal></expr> <pos:position pos:line="114" pos:column="32"/></then><else pos:line="114" pos:column="32">: <expr><literal type="string" pos:line="114" pos:column="34">"not-matched"<pos:position pos:line="114" pos:column="47"/></literal></expr></else></ternary><operator pos:line="114" pos:column="47">)<pos:position pos:line="114" pos:column="48"/></operator></expr></argument>)<pos:position pos:line="114" pos:column="49"/></argument_list></call></expr>;<pos:position pos:line="114" pos:column="50"/></expr_stmt>

    <return pos:line="116" pos:column="5">return <expr><name pos:line="116" pos:column="12">rc<pos:position pos:line="116" pos:column="14"/></name></expr>;<pos:position pos:line="116" pos:column="15"/></return>
}<pos:position pos:line="117" pos:column="2"/></block></function></unit>

<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/httpd/gumtree/httpd_function_6949.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">apr_status_t<pos:position pos:line="1" pos:column="13"/></name></type> <name pos:line="1" pos:column="14">h2_workers_register<pos:position pos:line="1" pos:column="33"/></name><parameter_list pos:line="1" pos:column="33">(<parameter><decl><type><name pos:line="1" pos:column="34">h2_workers<pos:position pos:line="1" pos:column="44"/></name> <modifier pos:line="1" pos:column="45">*<pos:position pos:line="1" pos:column="46"/></modifier></type><name pos:line="1" pos:column="46">workers<pos:position pos:line="1" pos:column="53"/></name></decl></parameter>, <parameter><decl><type><name><name pos:line="1" pos:column="55">struct<pos:position pos:line="1" pos:column="61"/></name> <name pos:line="1" pos:column="62">h2_mplx<pos:position pos:line="1" pos:column="69"/></name></name> <modifier pos:line="1" pos:column="70">*<pos:position pos:line="1" pos:column="71"/></modifier></type><name pos:line="1" pos:column="71">m<pos:position pos:line="1" pos:column="72"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="73"/></parameter_list>
<block pos:line="2" pos:column="1">{
    <decl_stmt><decl><type><name pos:line="3" pos:column="5">apr_status_t<pos:position pos:line="3" pos:column="17"/></name></type> <name pos:line="3" pos:column="18">status<pos:position pos:line="3" pos:column="24"/></name> <init pos:line="3" pos:column="25">= <expr><call><name pos:line="3" pos:column="27">apr_thread_mutex_lock<pos:position pos:line="3" pos:column="48"/></name><argument_list pos:line="3" pos:column="48">(<argument><expr><name><name pos:line="3" pos:column="49">workers<pos:position pos:line="3" pos:column="56"/></name><operator pos:line="3" pos:column="56">-&gt;<pos:position pos:line="3" pos:column="61"/></operator><name pos:line="3" pos:column="58">lock<pos:position pos:line="3" pos:column="62"/></name></name></expr></argument>)<pos:position pos:line="3" pos:column="63"/></argument_list></call></expr></init></decl>;<pos:position pos:line="3" pos:column="64"/></decl_stmt>
    <if pos:line="4" pos:column="5">if <condition pos:line="4" pos:column="8">(<expr><name pos:line="4" pos:column="9">status<pos:position pos:line="4" pos:column="15"/></name> <operator pos:line="4" pos:column="16">==<pos:position pos:line="4" pos:column="18"/></operator> <name pos:line="4" pos:column="19">APR_SUCCESS<pos:position pos:line="4" pos:column="30"/></name></expr>)<pos:position pos:line="4" pos:column="31"/></condition><then pos:line="4" pos:column="31"> <block pos:line="4" pos:column="32">{
        <expr_stmt><expr><call><name pos:line="5" pos:column="9">ap_log_error<pos:position pos:line="5" pos:column="21"/></name><argument_list pos:line="5" pos:column="21">(<argument><expr><name pos:line="5" pos:column="22">APLOG_MARK<pos:position pos:line="5" pos:column="32"/></name></expr></argument>, <argument><expr><name pos:line="5" pos:column="34">APLOG_TRACE3<pos:position pos:line="5" pos:column="46"/></name></expr></argument>, <argument><expr><name pos:line="5" pos:column="48">status<pos:position pos:line="5" pos:column="54"/></name></expr></argument>, <argument><expr><name><name pos:line="5" pos:column="56">workers<pos:position pos:line="5" pos:column="63"/></name><operator pos:line="5" pos:column="63">-&gt;<pos:position pos:line="5" pos:column="68"/></operator><name pos:line="5" pos:column="65">s<pos:position pos:line="5" pos:column="66"/></name></name></expr></argument>,
                     <argument><expr><literal type="string" pos:line="6" pos:column="22">"h2_workers: register mplx(%ld), idle=%d"<pos:position pos:line="6" pos:column="63"/></literal></expr></argument>, 
                     <argument><expr><name><name pos:line="7" pos:column="22">m<pos:position pos:line="7" pos:column="23"/></name><operator pos:line="7" pos:column="23">-&gt;<pos:position pos:line="7" pos:column="28"/></operator><name pos:line="7" pos:column="25">id<pos:position pos:line="7" pos:column="27"/></name></name></expr></argument>, <argument><expr><name><name pos:line="7" pos:column="29">workers<pos:position pos:line="7" pos:column="36"/></name><operator pos:line="7" pos:column="36">-&gt;<pos:position pos:line="7" pos:column="41"/></operator><name pos:line="7" pos:column="38">idle_workers<pos:position pos:line="7" pos:column="50"/></name></name></expr></argument>)<pos:position pos:line="7" pos:column="51"/></argument_list></call></expr>;<pos:position pos:line="7" pos:column="52"/></expr_stmt>
        <if pos:line="8" pos:column="9">if <condition pos:line="8" pos:column="12">(<expr><call><name pos:line="8" pos:column="13">in_list<pos:position pos:line="8" pos:column="20"/></name><argument_list pos:line="8" pos:column="20">(<argument><expr><name pos:line="8" pos:column="21">workers<pos:position pos:line="8" pos:column="28"/></name></expr></argument>, <argument><expr><name pos:line="8" pos:column="30">m<pos:position pos:line="8" pos:column="31"/></name></expr></argument>)<pos:position pos:line="8" pos:column="32"/></argument_list></call></expr>)<pos:position pos:line="8" pos:column="33"/></condition><then pos:line="8" pos:column="33"> <block pos:line="8" pos:column="34">{
            <expr_stmt><expr><name pos:line="9" pos:column="13">status<pos:position pos:line="9" pos:column="19"/></name> <operator pos:line="9" pos:column="20">=<pos:position pos:line="9" pos:column="21"/></operator> <name pos:line="9" pos:column="22">APR_EAGAIN<pos:position pos:line="9" pos:column="32"/></name></expr>;<pos:position pos:line="9" pos:column="33"/></expr_stmt>
        }<pos:position pos:line="10" pos:column="10"/></block></then>
        <else pos:line="11" pos:column="9">else <block pos:line="11" pos:column="14">{
            <expr_stmt><expr><call><name pos:line="12" pos:column="13">H2_MPLX_LIST_INSERT_TAIL<pos:position pos:line="12" pos:column="37"/></name><argument_list pos:line="12" pos:column="37">(<argument><expr><operator pos:line="12" pos:column="38">&amp;<pos:position pos:line="12" pos:column="43"/></operator><name><name pos:line="12" pos:column="39">workers<pos:position pos:line="12" pos:column="46"/></name><operator pos:line="12" pos:column="46">-&gt;<pos:position pos:line="12" pos:column="51"/></operator><name pos:line="12" pos:column="48">mplxs<pos:position pos:line="12" pos:column="53"/></name></name></expr></argument>, <argument><expr><name pos:line="12" pos:column="55">m<pos:position pos:line="12" pos:column="56"/></name></expr></argument>)<pos:position pos:line="12" pos:column="57"/></argument_list></call></expr>;<pos:position pos:line="12" pos:column="58"/></expr_stmt>
            <expr_stmt><expr><operator pos:line="13" pos:column="13">++<pos:position pos:line="13" pos:column="15"/></operator><name><name pos:line="13" pos:column="15">workers<pos:position pos:line="13" pos:column="22"/></name><operator pos:line="13" pos:column="22">-&gt;<pos:position pos:line="13" pos:column="27"/></operator><name pos:line="13" pos:column="24">mplx_count<pos:position pos:line="13" pos:column="34"/></name></name></expr>;<pos:position pos:line="13" pos:column="35"/></expr_stmt>
            <expr_stmt><expr><name pos:line="14" pos:column="13">status<pos:position pos:line="14" pos:column="19"/></name> <operator pos:line="14" pos:column="20">=<pos:position pos:line="14" pos:column="21"/></operator> <name pos:line="14" pos:column="22">APR_SUCCESS<pos:position pos:line="14" pos:column="33"/></name></expr>;<pos:position pos:line="14" pos:column="34"/></expr_stmt>
        }<pos:position pos:line="15" pos:column="10"/></block></else></if>
        
        <if pos:line="17" pos:column="9">if <condition pos:line="17" pos:column="12">(<expr><name><name pos:line="17" pos:column="13">workers<pos:position pos:line="17" pos:column="20"/></name><operator pos:line="17" pos:column="20">-&gt;<pos:position pos:line="17" pos:column="25"/></operator><name pos:line="17" pos:column="22">idle_workers<pos:position pos:line="17" pos:column="34"/></name></name> <operator pos:line="17" pos:column="35">&gt;<pos:position pos:line="17" pos:column="39"/></operator> <literal type="number" pos:line="17" pos:column="37">0<pos:position pos:line="17" pos:column="38"/></literal></expr>)<pos:position pos:line="17" pos:column="39"/></condition><then pos:line="17" pos:column="39"> <block pos:line="17" pos:column="40">{ 
            <expr_stmt><expr><call><name pos:line="18" pos:column="13">apr_thread_cond_signal<pos:position pos:line="18" pos:column="35"/></name><argument_list pos:line="18" pos:column="35">(<argument><expr><name><name pos:line="18" pos:column="36">workers<pos:position pos:line="18" pos:column="43"/></name><operator pos:line="18" pos:column="43">-&gt;<pos:position pos:line="18" pos:column="48"/></operator><name pos:line="18" pos:column="45">mplx_added<pos:position pos:line="18" pos:column="55"/></name></name></expr></argument>)<pos:position pos:line="18" pos:column="56"/></argument_list></call></expr>;<pos:position pos:line="18" pos:column="57"/></expr_stmt>
        }<pos:position pos:line="19" pos:column="10"/></block></then>
        <elseif pos:line="20" pos:column="9">else <if pos:line="20" pos:column="14">if <condition pos:line="20" pos:column="17">(<expr><name pos:line="20" pos:column="18">status<pos:position pos:line="20" pos:column="24"/></name> <operator pos:line="20" pos:column="25">==<pos:position pos:line="20" pos:column="27"/></operator> <name pos:line="20" pos:column="28">APR_SUCCESS<pos:position pos:line="20" pos:column="39"/></name> 
                 <operator pos:line="21" pos:column="18">&amp;&amp;<pos:position pos:line="21" pos:column="28"/></operator> <name><name pos:line="21" pos:column="21">workers<pos:position pos:line="21" pos:column="28"/></name><operator pos:line="21" pos:column="28">-&gt;<pos:position pos:line="21" pos:column="33"/></operator><name pos:line="21" pos:column="30">worker_count<pos:position pos:line="21" pos:column="42"/></name></name> <operator pos:line="21" pos:column="43">&lt;<pos:position pos:line="21" pos:column="47"/></operator> <name><name pos:line="21" pos:column="45">workers<pos:position pos:line="21" pos:column="52"/></name><operator pos:line="21" pos:column="52">-&gt;<pos:position pos:line="21" pos:column="57"/></operator><name pos:line="21" pos:column="54">max_workers<pos:position pos:line="21" pos:column="65"/></name></name></expr>)<pos:position pos:line="21" pos:column="66"/></condition><then pos:line="21" pos:column="66"> <block pos:line="21" pos:column="67">{
            <expr_stmt><expr><call><name pos:line="22" pos:column="13">ap_log_error<pos:position pos:line="22" pos:column="25"/></name><argument_list pos:line="22" pos:column="25">(<argument><expr><name pos:line="22" pos:column="26">APLOG_MARK<pos:position pos:line="22" pos:column="36"/></name></expr></argument>, <argument><expr><name pos:line="22" pos:column="38">APLOG_TRACE3<pos:position pos:line="22" pos:column="50"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="22" pos:column="52">0<pos:position pos:line="22" pos:column="53"/></literal></expr></argument>, <argument><expr><name><name pos:line="22" pos:column="55">workers<pos:position pos:line="22" pos:column="62"/></name><operator pos:line="22" pos:column="62">-&gt;<pos:position pos:line="22" pos:column="67"/></operator><name pos:line="22" pos:column="64">s<pos:position pos:line="22" pos:column="65"/></name></name></expr></argument>,
                         <argument><expr><literal type="string" pos:line="23" pos:column="26">"h2_workers: got %d worker, adding 1"<pos:position pos:line="23" pos:column="63"/></literal></expr></argument>, 
                         <argument><expr><name><name pos:line="24" pos:column="26">workers<pos:position pos:line="24" pos:column="33"/></name><operator pos:line="24" pos:column="33">-&gt;<pos:position pos:line="24" pos:column="38"/></operator><name pos:line="24" pos:column="35">worker_count<pos:position pos:line="24" pos:column="47"/></name></name></expr></argument>)<pos:position pos:line="24" pos:column="48"/></argument_list></call></expr>;<pos:position pos:line="24" pos:column="49"/></expr_stmt>
            <expr_stmt><expr><call><name pos:line="25" pos:column="13">add_worker<pos:position pos:line="25" pos:column="23"/></name><argument_list pos:line="25" pos:column="23">(<argument><expr><name pos:line="25" pos:column="24">workers<pos:position pos:line="25" pos:column="31"/></name></expr></argument>)<pos:position pos:line="25" pos:column="32"/></argument_list></call></expr>;<pos:position pos:line="25" pos:column="33"/></expr_stmt>
        }<pos:position pos:line="26" pos:column="10"/></block></then></if></elseif></if>
        <expr_stmt><expr><call><name pos:line="27" pos:column="9">apr_thread_mutex_unlock<pos:position pos:line="27" pos:column="32"/></name><argument_list pos:line="27" pos:column="32">(<argument><expr><name><name pos:line="27" pos:column="33">workers<pos:position pos:line="27" pos:column="40"/></name><operator pos:line="27" pos:column="40">-&gt;<pos:position pos:line="27" pos:column="45"/></operator><name pos:line="27" pos:column="42">lock<pos:position pos:line="27" pos:column="46"/></name></name></expr></argument>)<pos:position pos:line="27" pos:column="47"/></argument_list></call></expr>;<pos:position pos:line="27" pos:column="48"/></expr_stmt>
    }<pos:position pos:line="28" pos:column="6"/></block></then></if>
    <return pos:line="29" pos:column="5">return <expr><name pos:line="29" pos:column="12">status<pos:position pos:line="29" pos:column="18"/></name></expr>;<pos:position pos:line="29" pos:column="19"/></return>
}<pos:position pos:line="30" pos:column="2"/></block></function></unit>

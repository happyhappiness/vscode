<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/httpd/gumtree/httpd_repos_function_1673_httpd-2.4.6.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">void<pos:position pos:line="1" pos:column="12"/></name></type> <name pos:line="1" pos:column="13">do_emit_plain<pos:position pos:line="1" pos:column="26"/></name><parameter_list pos:line="1" pos:column="26">(<parameter><decl><type><name pos:line="1" pos:column="27">request_rec<pos:position pos:line="1" pos:column="38"/></name> <modifier pos:line="1" pos:column="39">*<pos:position pos:line="1" pos:column="40"/></modifier></type><name pos:line="1" pos:column="40">r<pos:position pos:line="1" pos:column="41"/></name></decl></parameter>, <parameter><decl><type><name pos:line="1" pos:column="43">apr_file_t<pos:position pos:line="1" pos:column="53"/></name> <modifier pos:line="1" pos:column="54">*<pos:position pos:line="1" pos:column="55"/></modifier></type><name pos:line="1" pos:column="55">f<pos:position pos:line="1" pos:column="56"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="57"/></parameter_list>
<block pos:line="2" pos:column="1">{
    <decl_stmt><decl><type><name pos:line="3" pos:column="5">char<pos:position pos:line="3" pos:column="9"/></name></type> <name><name pos:line="3" pos:column="10">buf<pos:position pos:line="3" pos:column="13"/></name><index pos:line="3" pos:column="13">[<expr><name pos:line="3" pos:column="14">AP_IOBUFSIZE<pos:position pos:line="3" pos:column="26"/></name> <operator pos:line="3" pos:column="27">+<pos:position pos:line="3" pos:column="28"/></operator> <literal type="number" pos:line="3" pos:column="29">1<pos:position pos:line="3" pos:column="30"/></literal></expr>]<pos:position pos:line="3" pos:column="31"/></index></name></decl>;<pos:position pos:line="3" pos:column="32"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="4" pos:column="5">int<pos:position pos:line="4" pos:column="8"/></name></type> <name pos:line="4" pos:column="9">ch<pos:position pos:line="4" pos:column="11"/></name></decl>;<pos:position pos:line="4" pos:column="12"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="5" pos:column="5">apr_size_t<pos:position pos:line="5" pos:column="15"/></name></type> <name pos:line="5" pos:column="16">i<pos:position pos:line="5" pos:column="17"/></name></decl>, <decl><type ref="prev"/><name pos:line="5" pos:column="19">c<pos:position pos:line="5" pos:column="20"/></name></decl>, <decl><type ref="prev"/><name pos:line="5" pos:column="22">n<pos:position pos:line="5" pos:column="23"/></name></decl>;<pos:position pos:line="5" pos:column="24"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="6" pos:column="5">apr_status_t<pos:position pos:line="6" pos:column="17"/></name></type> <name pos:line="6" pos:column="18">rv<pos:position pos:line="6" pos:column="20"/></name></decl>;<pos:position pos:line="6" pos:column="21"/></decl_stmt>

    <expr_stmt><expr><call><name pos:line="8" pos:column="5">ap_rputs<pos:position pos:line="8" pos:column="13"/></name><argument_list pos:line="8" pos:column="13">(<argument><expr><literal type="string" pos:line="8" pos:column="14">"&lt;pre&gt;\n"<pos:position pos:line="8" pos:column="29"/></literal></expr></argument>, <argument><expr><name pos:line="8" pos:column="25">r<pos:position pos:line="8" pos:column="26"/></name></expr></argument>)<pos:position pos:line="8" pos:column="27"/></argument_list></call></expr>;<pos:position pos:line="8" pos:column="28"/></expr_stmt>
    <while pos:line="9" pos:column="5">while <condition pos:line="9" pos:column="11">(<expr><operator pos:line="9" pos:column="12">!<pos:position pos:line="9" pos:column="13"/></operator><call><name pos:line="9" pos:column="13">apr_file_eof<pos:position pos:line="9" pos:column="25"/></name><argument_list pos:line="9" pos:column="25">(<argument><expr><name pos:line="9" pos:column="26">f<pos:position pos:line="9" pos:column="27"/></name></expr></argument>)<pos:position pos:line="9" pos:column="28"/></argument_list></call></expr>)<pos:position pos:line="9" pos:column="29"/></condition> <block pos:line="9" pos:column="30">{
        <do pos:line="10" pos:column="9">do <block pos:line="10" pos:column="12">{
            <expr_stmt><expr><name pos:line="11" pos:column="13">n<pos:position pos:line="11" pos:column="14"/></name> <operator pos:line="11" pos:column="15">=<pos:position pos:line="11" pos:column="16"/></operator> <sizeof pos:line="11" pos:column="17">sizeof<argument_list pos:line="11" pos:column="23">(<argument><expr><name pos:line="11" pos:column="24">char<pos:position pos:line="11" pos:column="28"/></name></expr></argument>)<pos:position pos:line="11" pos:column="29"/></argument_list></sizeof> <operator pos:line="11" pos:column="30">*<pos:position pos:line="11" pos:column="31"/></operator> <name pos:line="11" pos:column="32">AP_IOBUFSIZE<pos:position pos:line="11" pos:column="44"/></name></expr>;<pos:position pos:line="11" pos:column="45"/></expr_stmt>
            <expr_stmt><expr><name pos:line="12" pos:column="13">rv<pos:position pos:line="12" pos:column="15"/></name> <operator pos:line="12" pos:column="16">=<pos:position pos:line="12" pos:column="17"/></operator> <call><name pos:line="12" pos:column="18">apr_file_read<pos:position pos:line="12" pos:column="31"/></name><argument_list pos:line="12" pos:column="31">(<argument><expr><name pos:line="12" pos:column="32">f<pos:position pos:line="12" pos:column="33"/></name></expr></argument>, <argument><expr><name pos:line="12" pos:column="35">buf<pos:position pos:line="12" pos:column="38"/></name></expr></argument>, <argument><expr><operator pos:line="12" pos:column="40">&amp;<pos:position pos:line="12" pos:column="45"/></operator><name pos:line="12" pos:column="41">n<pos:position pos:line="12" pos:column="42"/></name></expr></argument>)<pos:position pos:line="12" pos:column="43"/></argument_list></call></expr>;<pos:position pos:line="12" pos:column="44"/></expr_stmt>
        }<pos:position pos:line="13" pos:column="10"/></block> while <condition pos:line="13" pos:column="17">(<expr><call><name pos:line="13" pos:column="18">APR_STATUS_IS_EINTR<pos:position pos:line="13" pos:column="37"/></name><argument_list pos:line="13" pos:column="37">(<argument><expr><name pos:line="13" pos:column="38">rv<pos:position pos:line="13" pos:column="40"/></name></expr></argument>)<pos:position pos:line="13" pos:column="41"/></argument_list></call></expr>)<pos:position pos:line="13" pos:column="42"/></condition>;<pos:position pos:line="13" pos:column="43"/></do>
        <if pos:line="14" pos:column="9">if <condition pos:line="14" pos:column="12">(<expr><name pos:line="14" pos:column="13">n<pos:position pos:line="14" pos:column="14"/></name> <operator pos:line="14" pos:column="15">==<pos:position pos:line="14" pos:column="17"/></operator> <literal type="number" pos:line="14" pos:column="18">0<pos:position pos:line="14" pos:column="19"/></literal> <operator pos:line="14" pos:column="20">||<pos:position pos:line="14" pos:column="22"/></operator> <name pos:line="14" pos:column="23">rv<pos:position pos:line="14" pos:column="25"/></name> <operator pos:line="14" pos:column="26">!=<pos:position pos:line="14" pos:column="28"/></operator> <name pos:line="14" pos:column="29">APR_SUCCESS<pos:position pos:line="14" pos:column="40"/></name></expr>)<pos:position pos:line="14" pos:column="41"/></condition><then pos:line="14" pos:column="41"> <block pos:line="14" pos:column="42">{
            <comment type="block" pos:line="15" pos:column="13">/* ###: better error here? */</comment>
            <break pos:line="16" pos:column="13">break;<pos:position pos:line="16" pos:column="19"/></break>
        }<pos:position pos:line="17" pos:column="10"/></block></then></if>
        <expr_stmt><expr><name><name pos:line="18" pos:column="9">buf<pos:position pos:line="18" pos:column="12"/></name><index pos:line="18" pos:column="12">[<expr><name pos:line="18" pos:column="13">n<pos:position pos:line="18" pos:column="14"/></name></expr>]<pos:position pos:line="18" pos:column="15"/></index></name> <operator pos:line="18" pos:column="16">=<pos:position pos:line="18" pos:column="17"/></operator> <literal type="char" pos:line="18" pos:column="18">'\0'<pos:position pos:line="18" pos:column="22"/></literal></expr>;<pos:position pos:line="18" pos:column="23"/></expr_stmt>
        <expr_stmt><expr><name pos:line="19" pos:column="9">c<pos:position pos:line="19" pos:column="10"/></name> <operator pos:line="19" pos:column="11">=<pos:position pos:line="19" pos:column="12"/></operator> <literal type="number" pos:line="19" pos:column="13">0<pos:position pos:line="19" pos:column="14"/></literal></expr>;<pos:position pos:line="19" pos:column="15"/></expr_stmt>
        <while pos:line="20" pos:column="9">while <condition pos:line="20" pos:column="15">(<expr><name pos:line="20" pos:column="16">c<pos:position pos:line="20" pos:column="17"/></name> <operator pos:line="20" pos:column="18">&lt;<pos:position pos:line="20" pos:column="22"/></operator> <name pos:line="20" pos:column="20">n<pos:position pos:line="20" pos:column="21"/></name></expr>)<pos:position pos:line="20" pos:column="22"/></condition> <block pos:line="20" pos:column="23">{
            <for pos:line="21" pos:column="13">for <control pos:line="21" pos:column="17">(<init><expr><name pos:line="21" pos:column="18">i<pos:position pos:line="21" pos:column="19"/></name> <operator pos:line="21" pos:column="20">=<pos:position pos:line="21" pos:column="21"/></operator> <name pos:line="21" pos:column="22">c<pos:position pos:line="21" pos:column="23"/></name></expr>;<pos:position pos:line="21" pos:column="24"/></init> <condition><expr><name pos:line="21" pos:column="25">i<pos:position pos:line="21" pos:column="26"/></name> <operator pos:line="21" pos:column="27">&lt;<pos:position pos:line="21" pos:column="31"/></operator> <name pos:line="21" pos:column="29">n<pos:position pos:line="21" pos:column="30"/></name></expr>;<pos:position pos:line="21" pos:column="31"/></condition> <incr><expr><name pos:line="21" pos:column="32">i<pos:position pos:line="21" pos:column="33"/></name><operator pos:line="21" pos:column="33">++<pos:position pos:line="21" pos:column="35"/></operator></expr></incr>)<pos:position pos:line="21" pos:column="36"/></control> <block pos:line="21" pos:column="37">{
                <if pos:line="22" pos:column="17">if <condition pos:line="22" pos:column="20">(<expr><name><name pos:line="22" pos:column="21">buf<pos:position pos:line="22" pos:column="24"/></name><index pos:line="22" pos:column="24">[<expr><name pos:line="22" pos:column="25">i<pos:position pos:line="22" pos:column="26"/></name></expr>]<pos:position pos:line="22" pos:column="27"/></index></name> <operator pos:line="22" pos:column="28">==<pos:position pos:line="22" pos:column="30"/></operator> <literal type="char" pos:line="22" pos:column="31">'&lt;'<pos:position pos:line="22" pos:column="37"/></literal> <operator pos:line="22" pos:column="35">||<pos:position pos:line="22" pos:column="37"/></operator> <name><name pos:line="22" pos:column="38">buf<pos:position pos:line="22" pos:column="41"/></name><index pos:line="22" pos:column="41">[<expr><name pos:line="22" pos:column="42">i<pos:position pos:line="22" pos:column="43"/></name></expr>]<pos:position pos:line="22" pos:column="44"/></index></name> <operator pos:line="22" pos:column="45">==<pos:position pos:line="22" pos:column="47"/></operator> <literal type="char" pos:line="22" pos:column="48">'&gt;'<pos:position pos:line="22" pos:column="54"/></literal> <operator pos:line="22" pos:column="52">||<pos:position pos:line="22" pos:column="54"/></operator> <name><name pos:line="22" pos:column="55">buf<pos:position pos:line="22" pos:column="58"/></name><index pos:line="22" pos:column="58">[<expr><name pos:line="22" pos:column="59">i<pos:position pos:line="22" pos:column="60"/></name></expr>]<pos:position pos:line="22" pos:column="61"/></index></name> <operator pos:line="22" pos:column="62">==<pos:position pos:line="22" pos:column="64"/></operator> <literal type="char" pos:line="22" pos:column="65">'&amp;'<pos:position pos:line="22" pos:column="72"/></literal></expr>)<pos:position pos:line="22" pos:column="69"/></condition><then pos:line="22" pos:column="69"> <block pos:line="22" pos:column="70">{
                    <break pos:line="23" pos:column="21">break;<pos:position pos:line="23" pos:column="27"/></break>
                }<pos:position pos:line="24" pos:column="18"/></block></then></if>
            }<pos:position pos:line="25" pos:column="14"/></block></for>
            <expr_stmt><expr><name pos:line="26" pos:column="13">ch<pos:position pos:line="26" pos:column="15"/></name> <operator pos:line="26" pos:column="16">=<pos:position pos:line="26" pos:column="17"/></operator> <name><name pos:line="26" pos:column="18">buf<pos:position pos:line="26" pos:column="21"/></name><index pos:line="26" pos:column="21">[<expr><name pos:line="26" pos:column="22">i<pos:position pos:line="26" pos:column="23"/></name></expr>]<pos:position pos:line="26" pos:column="24"/></index></name></expr>;<pos:position pos:line="26" pos:column="25"/></expr_stmt>
            <expr_stmt><expr><name><name pos:line="27" pos:column="13">buf<pos:position pos:line="27" pos:column="16"/></name><index pos:line="27" pos:column="16">[<expr><name pos:line="27" pos:column="17">i<pos:position pos:line="27" pos:column="18"/></name></expr>]<pos:position pos:line="27" pos:column="19"/></index></name> <operator pos:line="27" pos:column="20">=<pos:position pos:line="27" pos:column="21"/></operator> <literal type="char" pos:line="27" pos:column="22">'\0'<pos:position pos:line="27" pos:column="26"/></literal></expr>;<pos:position pos:line="27" pos:column="27"/></expr_stmt>
            <expr_stmt><expr><call><name pos:line="28" pos:column="13">ap_rputs<pos:position pos:line="28" pos:column="21"/></name><argument_list pos:line="28" pos:column="21">(<argument><expr><operator pos:line="28" pos:column="22">&amp;<pos:position pos:line="28" pos:column="27"/></operator><name><name pos:line="28" pos:column="23">buf<pos:position pos:line="28" pos:column="26"/></name><index pos:line="28" pos:column="26">[<expr><name pos:line="28" pos:column="27">c<pos:position pos:line="28" pos:column="28"/></name></expr>]<pos:position pos:line="28" pos:column="29"/></index></name></expr></argument>, <argument><expr><name pos:line="28" pos:column="31">r<pos:position pos:line="28" pos:column="32"/></name></expr></argument>)<pos:position pos:line="28" pos:column="33"/></argument_list></call></expr>;<pos:position pos:line="28" pos:column="34"/></expr_stmt>
            <if pos:line="29" pos:column="13">if <condition pos:line="29" pos:column="16">(<expr><name pos:line="29" pos:column="17">ch<pos:position pos:line="29" pos:column="19"/></name> <operator pos:line="29" pos:column="20">==<pos:position pos:line="29" pos:column="22"/></operator> <literal type="char" pos:line="29" pos:column="23">'&lt;'<pos:position pos:line="29" pos:column="29"/></literal></expr>)<pos:position pos:line="29" pos:column="27"/></condition><then pos:line="29" pos:column="27"> <block pos:line="29" pos:column="28">{
                <expr_stmt><expr><call><name pos:line="30" pos:column="17">ap_rputs<pos:position pos:line="30" pos:column="25"/></name><argument_list pos:line="30" pos:column="25">(<argument><expr><literal type="string" pos:line="30" pos:column="26">"&amp;lt;"<pos:position pos:line="30" pos:column="36"/></literal></expr></argument>, <argument><expr><name pos:line="30" pos:column="34">r<pos:position pos:line="30" pos:column="35"/></name></expr></argument>)<pos:position pos:line="30" pos:column="36"/></argument_list></call></expr>;<pos:position pos:line="30" pos:column="37"/></expr_stmt>
            }<pos:position pos:line="31" pos:column="14"/></block></then>
            <elseif pos:line="32" pos:column="13">else <if pos:line="32" pos:column="18">if <condition pos:line="32" pos:column="21">(<expr><name pos:line="32" pos:column="22">ch<pos:position pos:line="32" pos:column="24"/></name> <operator pos:line="32" pos:column="25">==<pos:position pos:line="32" pos:column="27"/></operator> <literal type="char" pos:line="32" pos:column="28">'&gt;'<pos:position pos:line="32" pos:column="34"/></literal></expr>)<pos:position pos:line="32" pos:column="32"/></condition><then pos:line="32" pos:column="32"> <block pos:line="32" pos:column="33">{
                <expr_stmt><expr><call><name pos:line="33" pos:column="17">ap_rputs<pos:position pos:line="33" pos:column="25"/></name><argument_list pos:line="33" pos:column="25">(<argument><expr><literal type="string" pos:line="33" pos:column="26">"&amp;gt;"<pos:position pos:line="33" pos:column="36"/></literal></expr></argument>, <argument><expr><name pos:line="33" pos:column="34">r<pos:position pos:line="33" pos:column="35"/></name></expr></argument>)<pos:position pos:line="33" pos:column="36"/></argument_list></call></expr>;<pos:position pos:line="33" pos:column="37"/></expr_stmt>
            }<pos:position pos:line="34" pos:column="14"/></block></then></if></elseif>
            <elseif pos:line="35" pos:column="13">else <if pos:line="35" pos:column="18">if <condition pos:line="35" pos:column="21">(<expr><name pos:line="35" pos:column="22">ch<pos:position pos:line="35" pos:column="24"/></name> <operator pos:line="35" pos:column="25">==<pos:position pos:line="35" pos:column="27"/></operator> <literal type="char" pos:line="35" pos:column="28">'&amp;'<pos:position pos:line="35" pos:column="35"/></literal></expr>)<pos:position pos:line="35" pos:column="32"/></condition><then pos:line="35" pos:column="32"> <block pos:line="35" pos:column="33">{
                <expr_stmt><expr><call><name pos:line="36" pos:column="17">ap_rputs<pos:position pos:line="36" pos:column="25"/></name><argument_list pos:line="36" pos:column="25">(<argument><expr><literal type="string" pos:line="36" pos:column="26">"&amp;amp;"<pos:position pos:line="36" pos:column="37"/></literal></expr></argument>, <argument><expr><name pos:line="36" pos:column="35">r<pos:position pos:line="36" pos:column="36"/></name></expr></argument>)<pos:position pos:line="36" pos:column="37"/></argument_list></call></expr>;<pos:position pos:line="36" pos:column="38"/></expr_stmt>
            }<pos:position pos:line="37" pos:column="14"/></block></then></if></elseif></if>
            <expr_stmt><expr><name pos:line="38" pos:column="13">c<pos:position pos:line="38" pos:column="14"/></name> <operator pos:line="38" pos:column="15">=<pos:position pos:line="38" pos:column="16"/></operator> <name pos:line="38" pos:column="17">i<pos:position pos:line="38" pos:column="18"/></name> <operator pos:line="38" pos:column="19">+<pos:position pos:line="38" pos:column="20"/></operator> <literal type="number" pos:line="38" pos:column="21">1<pos:position pos:line="38" pos:column="22"/></literal></expr>;<pos:position pos:line="38" pos:column="23"/></expr_stmt>
        }<pos:position pos:line="39" pos:column="10"/></block></while>
    }<pos:position pos:line="40" pos:column="6"/></block></while>
    <expr_stmt><expr><call><name pos:line="41" pos:column="5">ap_rputs<pos:position pos:line="41" pos:column="13"/></name><argument_list pos:line="41" pos:column="13">(<argument><expr><literal type="string" pos:line="41" pos:column="14">"&lt;/pre&gt;\n"<pos:position pos:line="41" pos:column="30"/></literal></expr></argument>, <argument><expr><name pos:line="41" pos:column="26">r<pos:position pos:line="41" pos:column="27"/></name></expr></argument>)<pos:position pos:line="41" pos:column="28"/></argument_list></call></expr>;<pos:position pos:line="41" pos:column="29"/></expr_stmt>
}<pos:position pos:line="42" pos:column="2"/></block></function></unit>

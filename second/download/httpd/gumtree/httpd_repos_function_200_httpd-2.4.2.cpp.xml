<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/httpd/gumtree/httpd_repos_function_200_httpd-2.4.2.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">dav_error<pos:position pos:line="1" pos:column="17"/></name> <modifier pos:line="1" pos:column="18">*<pos:position pos:line="1" pos:column="19"/></modifier></type> <name pos:line="1" pos:column="20">dav_generic_refresh_locks<pos:position pos:line="1" pos:column="45"/></name><parameter_list pos:line="1" pos:column="45">(<parameter><decl><type><name pos:line="1" pos:column="46">dav_lockdb<pos:position pos:line="1" pos:column="56"/></name> <modifier pos:line="1" pos:column="57">*<pos:position pos:line="1" pos:column="58"/></modifier></type><name pos:line="1" pos:column="58">lockdb<pos:position pos:line="1" pos:column="64"/></name></decl></parameter>,
                                             <parameter><decl><type><specifier pos:line="2" pos:column="46">const<pos:position pos:line="2" pos:column="51"/></specifier> <name pos:line="2" pos:column="52">dav_resource<pos:position pos:line="2" pos:column="64"/></name> <modifier pos:line="2" pos:column="65">*<pos:position pos:line="2" pos:column="66"/></modifier></type><name pos:line="2" pos:column="66">resource<pos:position pos:line="2" pos:column="74"/></name></decl></parameter>,
                                             <parameter><decl><type><specifier pos:line="3" pos:column="46">const<pos:position pos:line="3" pos:column="51"/></specifier> <name pos:line="3" pos:column="52">dav_locktoken_list<pos:position pos:line="3" pos:column="70"/></name> <modifier pos:line="3" pos:column="71">*<pos:position pos:line="3" pos:column="72"/></modifier></type><name pos:line="3" pos:column="72">ltl<pos:position pos:line="3" pos:column="75"/></name></decl></parameter>,
                                             <parameter><decl><type><name pos:line="4" pos:column="46">time_t<pos:position pos:line="4" pos:column="52"/></name></type> <name pos:line="4" pos:column="53">new_time<pos:position pos:line="4" pos:column="61"/></name></decl></parameter>,
                                             <parameter><decl><type><name pos:line="5" pos:column="46">dav_lock<pos:position pos:line="5" pos:column="54"/></name> <modifier pos:line="5" pos:column="55">*<pos:position pos:line="5" pos:column="56"/></modifier><modifier pos:line="5" pos:column="56">*<pos:position pos:line="5" pos:column="57"/></modifier></type><name pos:line="5" pos:column="57">locks<pos:position pos:line="5" pos:column="62"/></name></decl></parameter>)<pos:position pos:line="5" pos:column="63"/></parameter_list>
<block pos:line="6" pos:column="1">{
    <decl_stmt><decl><type><name pos:line="7" pos:column="5">dav_error<pos:position pos:line="7" pos:column="14"/></name> <modifier pos:line="7" pos:column="15">*<pos:position pos:line="7" pos:column="16"/></modifier></type><name pos:line="7" pos:column="16">err<pos:position pos:line="7" pos:column="19"/></name></decl>;<pos:position pos:line="7" pos:column="20"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="8" pos:column="5">apr_datum_t<pos:position pos:line="8" pos:column="16"/></name></type> <name pos:line="8" pos:column="17">key<pos:position pos:line="8" pos:column="20"/></name></decl>;<pos:position pos:line="8" pos:column="21"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="9" pos:column="5">dav_lock_discovery<pos:position pos:line="9" pos:column="23"/></name> <modifier pos:line="9" pos:column="24">*<pos:position pos:line="9" pos:column="25"/></modifier></type><name pos:line="9" pos:column="25">dp<pos:position pos:line="9" pos:column="27"/></name></decl>;<pos:position pos:line="9" pos:column="28"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="10" pos:column="5">dav_lock_discovery<pos:position pos:line="10" pos:column="23"/></name> <modifier pos:line="10" pos:column="24">*<pos:position pos:line="10" pos:column="25"/></modifier></type><name pos:line="10" pos:column="25">dp_scan<pos:position pos:line="10" pos:column="32"/></name></decl>;<pos:position pos:line="10" pos:column="33"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="11" pos:column="5">dav_lock_indirect<pos:position pos:line="11" pos:column="22"/></name> <modifier pos:line="11" pos:column="23">*<pos:position pos:line="11" pos:column="24"/></modifier></type><name pos:line="11" pos:column="24">ip<pos:position pos:line="11" pos:column="26"/></name></decl>;<pos:position pos:line="11" pos:column="27"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="12" pos:column="5">int<pos:position pos:line="12" pos:column="8"/></name></type> <name pos:line="12" pos:column="9">dirty<pos:position pos:line="12" pos:column="14"/></name> <init pos:line="12" pos:column="15">= <expr><literal type="number" pos:line="12" pos:column="17">0<pos:position pos:line="12" pos:column="18"/></literal></expr></init></decl>;<pos:position pos:line="12" pos:column="19"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="13" pos:column="5">dav_lock<pos:position pos:line="13" pos:column="13"/></name> <modifier pos:line="13" pos:column="14">*<pos:position pos:line="13" pos:column="15"/></modifier></type><name pos:line="13" pos:column="15">newlock<pos:position pos:line="13" pos:column="22"/></name></decl>;<pos:position pos:line="13" pos:column="23"/></decl_stmt>

    <expr_stmt><expr><operator pos:line="15" pos:column="5">*<pos:position pos:line="15" pos:column="6"/></operator><name pos:line="15" pos:column="6">locks<pos:position pos:line="15" pos:column="11"/></name> <operator pos:line="15" pos:column="12">=<pos:position pos:line="15" pos:column="13"/></operator> <name pos:line="15" pos:column="14">NULL<pos:position pos:line="15" pos:column="18"/></name></expr>;<pos:position pos:line="15" pos:column="19"/></expr_stmt>

    <expr_stmt><expr><name pos:line="17" pos:column="5">key<pos:position pos:line="17" pos:column="8"/></name> <operator pos:line="17" pos:column="9">=<pos:position pos:line="17" pos:column="10"/></operator> <call><name pos:line="17" pos:column="11">dav_generic_build_key<pos:position pos:line="17" pos:column="32"/></name><argument_list pos:line="17" pos:column="32">(<argument><expr><name><name pos:line="17" pos:column="33">lockdb<pos:position pos:line="17" pos:column="39"/></name><operator pos:line="17" pos:column="39">-&gt;<pos:position pos:line="17" pos:column="44"/></operator><name pos:line="17" pos:column="41">info<pos:position pos:line="17" pos:column="45"/></name><operator pos:line="17" pos:column="45">-&gt;<pos:position pos:line="17" pos:column="50"/></operator><name pos:line="17" pos:column="47">pool<pos:position pos:line="17" pos:column="51"/></name></name></expr></argument>, <argument><expr><name pos:line="17" pos:column="53">resource<pos:position pos:line="17" pos:column="61"/></name></expr></argument>)<pos:position pos:line="17" pos:column="62"/></argument_list></call></expr>;<pos:position pos:line="17" pos:column="63"/></expr_stmt>
    <if pos:line="18" pos:column="5">if <condition pos:line="18" pos:column="8">(<expr><operator pos:line="18" pos:column="9">(<pos:position pos:line="18" pos:column="10"/></operator><name pos:line="18" pos:column="10">err<pos:position pos:line="18" pos:column="13"/></name> <operator pos:line="18" pos:column="14">=<pos:position pos:line="18" pos:column="15"/></operator> <call><name pos:line="18" pos:column="16">dav_generic_load_lock_record<pos:position pos:line="18" pos:column="44"/></name><argument_list pos:line="18" pos:column="44">(<argument><expr><name pos:line="18" pos:column="45">lockdb<pos:position pos:line="18" pos:column="51"/></name></expr></argument>, <argument><expr><name pos:line="18" pos:column="53">key<pos:position pos:line="18" pos:column="56"/></name></expr></argument>, <argument><expr><name pos:line="18" pos:column="58">DAV_CREATE_LIST<pos:position pos:line="18" pos:column="73"/></name></expr></argument>,
                                            <argument><expr><operator pos:line="19" pos:column="45">&amp;<pos:position pos:line="19" pos:column="50"/></operator><name pos:line="19" pos:column="46">dp<pos:position pos:line="19" pos:column="48"/></name></expr></argument>, <argument><expr><operator pos:line="19" pos:column="50">&amp;<pos:position pos:line="19" pos:column="55"/></operator><name pos:line="19" pos:column="51">ip<pos:position pos:line="19" pos:column="53"/></name></expr></argument>)<pos:position pos:line="19" pos:column="54"/></argument_list></call><operator pos:line="19" pos:column="54">)<pos:position pos:line="19" pos:column="55"/></operator> <operator pos:line="19" pos:column="56">!=<pos:position pos:line="19" pos:column="58"/></operator> <name pos:line="19" pos:column="59">NULL<pos:position pos:line="19" pos:column="63"/></name></expr>)<pos:position pos:line="19" pos:column="64"/></condition><then pos:line="19" pos:column="64"> <block pos:line="19" pos:column="65">{
        <comment type="block" pos:line="20" pos:column="9">/* ### maybe add in a higher-level description */</comment>
        <return pos:line="21" pos:column="9">return <expr><name pos:line="21" pos:column="16">err<pos:position pos:line="21" pos:column="19"/></name></expr>;<pos:position pos:line="21" pos:column="20"/></return>
    }<pos:position pos:line="22" pos:column="6"/></block></then></if>

    <comment type="block" pos:line="24" pos:column="5">/* ### we should be refreshing direct AND (resolved) indirect locks! */</comment>

    <comment type="block" pos:line="26" pos:column="5">/* refresh all of the direct locks on this resource */</comment>
    <for pos:line="27" pos:column="5">for <control pos:line="27" pos:column="9">(<init><expr><name pos:line="27" pos:column="10">dp_scan<pos:position pos:line="27" pos:column="17"/></name> <operator pos:line="27" pos:column="18">=<pos:position pos:line="27" pos:column="19"/></operator> <name pos:line="27" pos:column="20">dp<pos:position pos:line="27" pos:column="22"/></name></expr>;<pos:position pos:line="27" pos:column="23"/></init> <condition><expr><name pos:line="27" pos:column="24">dp_scan<pos:position pos:line="27" pos:column="31"/></name> <operator pos:line="27" pos:column="32">!=<pos:position pos:line="27" pos:column="34"/></operator> <name pos:line="27" pos:column="35">NULL<pos:position pos:line="27" pos:column="39"/></name></expr>;<pos:position pos:line="27" pos:column="40"/></condition> <incr><expr><name pos:line="27" pos:column="41">dp_scan<pos:position pos:line="27" pos:column="48"/></name> <operator pos:line="27" pos:column="49">=<pos:position pos:line="27" pos:column="50"/></operator> <name><name pos:line="27" pos:column="51">dp_scan<pos:position pos:line="27" pos:column="58"/></name><operator pos:line="27" pos:column="58">-&gt;<pos:position pos:line="27" pos:column="63"/></operator><name pos:line="27" pos:column="60">next<pos:position pos:line="27" pos:column="64"/></name></name></expr></incr>)<pos:position pos:line="27" pos:column="65"/></control> <block pos:line="27" pos:column="66">{
        <if pos:line="28" pos:column="9">if <condition pos:line="28" pos:column="12">(<expr><call><name pos:line="28" pos:column="13">dav_generic_do_refresh<pos:position pos:line="28" pos:column="35"/></name><argument_list pos:line="28" pos:column="35">(<argument><expr><name pos:line="28" pos:column="36">dp_scan<pos:position pos:line="28" pos:column="43"/></name></expr></argument>, <argument><expr><name pos:line="28" pos:column="45">ltl<pos:position pos:line="28" pos:column="48"/></name></expr></argument>, <argument><expr><name pos:line="28" pos:column="50">new_time<pos:position pos:line="28" pos:column="58"/></name></expr></argument>)<pos:position pos:line="28" pos:column="59"/></argument_list></call></expr>)<pos:position pos:line="28" pos:column="60"/></condition><then pos:line="28" pos:column="60"> <block pos:line="28" pos:column="61">{
            <comment type="block" pos:line="29" pos:column="13">/* the lock was refreshed. return the lock. */</comment>
            <expr_stmt><expr><name pos:line="30" pos:column="13">newlock<pos:position pos:line="30" pos:column="20"/></name> <operator pos:line="30" pos:column="21">=<pos:position pos:line="30" pos:column="22"/></operator> <call><name pos:line="30" pos:column="23">dav_generic_alloc_lock<pos:position pos:line="30" pos:column="45"/></name><argument_list pos:line="30" pos:column="45">(<argument><expr><name pos:line="30" pos:column="46">lockdb<pos:position pos:line="30" pos:column="52"/></name></expr></argument>, <argument><expr><name pos:line="30" pos:column="54">key<pos:position pos:line="30" pos:column="57"/></name></expr></argument>, <argument><expr><name><name pos:line="30" pos:column="59">dp_scan<pos:position pos:line="30" pos:column="66"/></name><operator pos:line="30" pos:column="66">-&gt;<pos:position pos:line="30" pos:column="71"/></operator><name pos:line="30" pos:column="68">locktoken<pos:position pos:line="30" pos:column="77"/></name></name></expr></argument>)<pos:position pos:line="30" pos:column="78"/></argument_list></call></expr>;<pos:position pos:line="30" pos:column="79"/></expr_stmt>
            <expr_stmt><expr><name><name pos:line="31" pos:column="13">newlock<pos:position pos:line="31" pos:column="20"/></name><operator pos:line="31" pos:column="20">-&gt;<pos:position pos:line="31" pos:column="25"/></operator><name pos:line="31" pos:column="22">is_locknull<pos:position pos:line="31" pos:column="33"/></name></name> <operator pos:line="31" pos:column="34">=<pos:position pos:line="31" pos:column="35"/></operator> <operator pos:line="31" pos:column="36">!<pos:position pos:line="31" pos:column="37"/></operator><name><name pos:line="31" pos:column="37">resource<pos:position pos:line="31" pos:column="45"/></name><operator pos:line="31" pos:column="45">-&gt;<pos:position pos:line="31" pos:column="50"/></operator><name pos:line="31" pos:column="47">exists<pos:position pos:line="31" pos:column="53"/></name></name></expr>;<pos:position pos:line="31" pos:column="54"/></expr_stmt>
            <expr_stmt><expr><name><name pos:line="32" pos:column="13">newlock<pos:position pos:line="32" pos:column="20"/></name><operator pos:line="32" pos:column="20">-&gt;<pos:position pos:line="32" pos:column="25"/></operator><name pos:line="32" pos:column="22">scope<pos:position pos:line="32" pos:column="27"/></name></name> <operator pos:line="32" pos:column="28">=<pos:position pos:line="32" pos:column="29"/></operator> <name><name pos:line="32" pos:column="30">dp_scan<pos:position pos:line="32" pos:column="37"/></name><operator pos:line="32" pos:column="37">-&gt;<pos:position pos:line="32" pos:column="42"/></operator><name pos:line="32" pos:column="39">f<pos:position pos:line="32" pos:column="40"/></name><operator pos:line="32" pos:column="40">.<pos:position pos:line="32" pos:column="41"/></operator><name pos:line="32" pos:column="41">scope<pos:position pos:line="32" pos:column="46"/></name></name></expr>;<pos:position pos:line="32" pos:column="47"/></expr_stmt>
            <expr_stmt><expr><name><name pos:line="33" pos:column="13">newlock<pos:position pos:line="33" pos:column="20"/></name><operator pos:line="33" pos:column="20">-&gt;<pos:position pos:line="33" pos:column="25"/></operator><name pos:line="33" pos:column="22">type<pos:position pos:line="33" pos:column="26"/></name></name> <operator pos:line="33" pos:column="27">=<pos:position pos:line="33" pos:column="28"/></operator> <name><name pos:line="33" pos:column="29">dp_scan<pos:position pos:line="33" pos:column="36"/></name><operator pos:line="33" pos:column="36">-&gt;<pos:position pos:line="33" pos:column="41"/></operator><name pos:line="33" pos:column="38">f<pos:position pos:line="33" pos:column="39"/></name><operator pos:line="33" pos:column="39">.<pos:position pos:line="33" pos:column="40"/></operator><name pos:line="33" pos:column="40">type<pos:position pos:line="33" pos:column="44"/></name></name></expr>;<pos:position pos:line="33" pos:column="45"/></expr_stmt>
            <expr_stmt><expr><name><name pos:line="34" pos:column="13">newlock<pos:position pos:line="34" pos:column="20"/></name><operator pos:line="34" pos:column="20">-&gt;<pos:position pos:line="34" pos:column="25"/></operator><name pos:line="34" pos:column="22">depth<pos:position pos:line="34" pos:column="27"/></name></name> <operator pos:line="34" pos:column="28">=<pos:position pos:line="34" pos:column="29"/></operator> <name><name pos:line="34" pos:column="30">dp_scan<pos:position pos:line="34" pos:column="37"/></name><operator pos:line="34" pos:column="37">-&gt;<pos:position pos:line="34" pos:column="42"/></operator><name pos:line="34" pos:column="39">f<pos:position pos:line="34" pos:column="40"/></name><operator pos:line="34" pos:column="40">.<pos:position pos:line="34" pos:column="41"/></operator><name pos:line="34" pos:column="41">depth<pos:position pos:line="34" pos:column="46"/></name></name></expr>;<pos:position pos:line="34" pos:column="47"/></expr_stmt>
            <expr_stmt><expr><name><name pos:line="35" pos:column="13">newlock<pos:position pos:line="35" pos:column="20"/></name><operator pos:line="35" pos:column="20">-&gt;<pos:position pos:line="35" pos:column="25"/></operator><name pos:line="35" pos:column="22">timeout<pos:position pos:line="35" pos:column="29"/></name></name> <operator pos:line="35" pos:column="30">=<pos:position pos:line="35" pos:column="31"/></operator> <name><name pos:line="35" pos:column="32">dp_scan<pos:position pos:line="35" pos:column="39"/></name><operator pos:line="35" pos:column="39">-&gt;<pos:position pos:line="35" pos:column="44"/></operator><name pos:line="35" pos:column="41">f<pos:position pos:line="35" pos:column="42"/></name><operator pos:line="35" pos:column="42">.<pos:position pos:line="35" pos:column="43"/></operator><name pos:line="35" pos:column="43">timeout<pos:position pos:line="35" pos:column="50"/></name></name></expr>;<pos:position pos:line="35" pos:column="51"/></expr_stmt>
            <expr_stmt><expr><name><name pos:line="36" pos:column="13">newlock<pos:position pos:line="36" pos:column="20"/></name><operator pos:line="36" pos:column="20">-&gt;<pos:position pos:line="36" pos:column="25"/></operator><name pos:line="36" pos:column="22">owner<pos:position pos:line="36" pos:column="27"/></name></name> <operator pos:line="36" pos:column="28">=<pos:position pos:line="36" pos:column="29"/></operator> <name><name pos:line="36" pos:column="30">dp_scan<pos:position pos:line="36" pos:column="37"/></name><operator pos:line="36" pos:column="37">-&gt;<pos:position pos:line="36" pos:column="42"/></operator><name pos:line="36" pos:column="39">owner<pos:position pos:line="36" pos:column="44"/></name></name></expr>;<pos:position pos:line="36" pos:column="45"/></expr_stmt>
            <expr_stmt><expr><name><name pos:line="37" pos:column="13">newlock<pos:position pos:line="37" pos:column="20"/></name><operator pos:line="37" pos:column="20">-&gt;<pos:position pos:line="37" pos:column="25"/></operator><name pos:line="37" pos:column="22">auth_user<pos:position pos:line="37" pos:column="31"/></name></name> <operator pos:line="37" pos:column="32">=<pos:position pos:line="37" pos:column="33"/></operator> <name><name pos:line="37" pos:column="34">dp_scan<pos:position pos:line="37" pos:column="41"/></name><operator pos:line="37" pos:column="41">-&gt;<pos:position pos:line="37" pos:column="46"/></operator><name pos:line="37" pos:column="43">auth_user<pos:position pos:line="37" pos:column="52"/></name></name></expr>;<pos:position pos:line="37" pos:column="53"/></expr_stmt>

            <expr_stmt><expr><name><name pos:line="39" pos:column="13">newlock<pos:position pos:line="39" pos:column="20"/></name><operator pos:line="39" pos:column="20">-&gt;<pos:position pos:line="39" pos:column="25"/></operator><name pos:line="39" pos:column="22">next<pos:position pos:line="39" pos:column="26"/></name></name> <operator pos:line="39" pos:column="27">=<pos:position pos:line="39" pos:column="28"/></operator> <operator pos:line="39" pos:column="29">*<pos:position pos:line="39" pos:column="30"/></operator><name pos:line="39" pos:column="30">locks<pos:position pos:line="39" pos:column="35"/></name></expr>;<pos:position pos:line="39" pos:column="36"/></expr_stmt>
            <expr_stmt><expr><operator pos:line="40" pos:column="13">*<pos:position pos:line="40" pos:column="14"/></operator><name pos:line="40" pos:column="14">locks<pos:position pos:line="40" pos:column="19"/></name> <operator pos:line="40" pos:column="20">=<pos:position pos:line="40" pos:column="21"/></operator> <name pos:line="40" pos:column="22">newlock<pos:position pos:line="40" pos:column="29"/></name></expr>;<pos:position pos:line="40" pos:column="30"/></expr_stmt>

            <expr_stmt><expr><name pos:line="42" pos:column="13">dirty<pos:position pos:line="42" pos:column="18"/></name> <operator pos:line="42" pos:column="19">=<pos:position pos:line="42" pos:column="20"/></operator> <literal type="number" pos:line="42" pos:column="21">1<pos:position pos:line="42" pos:column="22"/></literal></expr>;<pos:position pos:line="42" pos:column="23"/></expr_stmt>
        }<pos:position pos:line="43" pos:column="10"/></block></then></if>
    }<pos:position pos:line="44" pos:column="6"/></block></for>

    <comment type="block" pos:line="46" pos:column="5">/* if we refreshed any locks, then save them back. */</comment>
    <if pos:line="47" pos:column="5">if <condition pos:line="47" pos:column="8">(<expr><name pos:line="47" pos:column="9">dirty<pos:position pos:line="47" pos:column="14"/></name>
        <operator pos:line="48" pos:column="9">&amp;&amp;<pos:position pos:line="48" pos:column="19"/></operator> <operator pos:line="48" pos:column="12">(<pos:position pos:line="48" pos:column="13"/></operator><name pos:line="48" pos:column="13">err<pos:position pos:line="48" pos:column="16"/></name> <operator pos:line="48" pos:column="17">=<pos:position pos:line="48" pos:column="18"/></operator> <call><name pos:line="48" pos:column="19">dav_generic_save_lock_record<pos:position pos:line="48" pos:column="47"/></name><argument_list pos:line="48" pos:column="47">(<argument><expr><name pos:line="48" pos:column="48">lockdb<pos:position pos:line="48" pos:column="54"/></name></expr></argument>, <argument><expr><name pos:line="48" pos:column="56">key<pos:position pos:line="48" pos:column="59"/></name></expr></argument>, <argument><expr><name pos:line="48" pos:column="61">dp<pos:position pos:line="48" pos:column="63"/></name></expr></argument>, <argument><expr><name pos:line="48" pos:column="65">ip<pos:position pos:line="48" pos:column="67"/></name></expr></argument>)<pos:position pos:line="48" pos:column="68"/></argument_list></call><operator pos:line="48" pos:column="68">)<pos:position pos:line="48" pos:column="69"/></operator> <operator pos:line="48" pos:column="70">!=<pos:position pos:line="48" pos:column="72"/></operator> <name pos:line="48" pos:column="73">NULL<pos:position pos:line="48" pos:column="77"/></name></expr>)<pos:position pos:line="48" pos:column="78"/></condition><then pos:line="48" pos:column="78"> <block pos:line="48" pos:column="79">{
        <comment type="block" pos:line="49" pos:column="9">/* ### maybe add in a higher-level description */</comment>
        <return pos:line="50" pos:column="9">return <expr><name pos:line="50" pos:column="16">err<pos:position pos:line="50" pos:column="19"/></name></expr>;<pos:position pos:line="50" pos:column="20"/></return>
    }<pos:position pos:line="51" pos:column="6"/></block></then></if>

    <comment type="block" pos:line="53" pos:column="5">/* for each indirect lock, find its direct lock and refresh it. */</comment>
    <for pos:line="54" pos:column="5">for <control pos:line="54" pos:column="9">(<init pos:line="54" pos:column="10">;<pos:position pos:line="54" pos:column="11"/></init> <condition><expr><name pos:line="54" pos:column="12">ip<pos:position pos:line="54" pos:column="14"/></name> <operator pos:line="54" pos:column="15">!=<pos:position pos:line="54" pos:column="17"/></operator> <name pos:line="54" pos:column="18">NULL<pos:position pos:line="54" pos:column="22"/></name></expr>;<pos:position pos:line="54" pos:column="23"/></condition> <incr><expr><name pos:line="54" pos:column="24">ip<pos:position pos:line="54" pos:column="26"/></name> <operator pos:line="54" pos:column="27">=<pos:position pos:line="54" pos:column="28"/></operator> <name><name pos:line="54" pos:column="29">ip<pos:position pos:line="54" pos:column="31"/></name><operator pos:line="54" pos:column="31">-&gt;<pos:position pos:line="54" pos:column="36"/></operator><name pos:line="54" pos:column="33">next<pos:position pos:line="54" pos:column="37"/></name></name></expr></incr>)<pos:position pos:line="54" pos:column="38"/></control> <block pos:line="54" pos:column="39">{
        <decl_stmt><decl><type><name pos:line="55" pos:column="9">dav_lock_discovery<pos:position pos:line="55" pos:column="27"/></name> <modifier pos:line="55" pos:column="28">*<pos:position pos:line="55" pos:column="29"/></modifier></type><name pos:line="55" pos:column="29">ref_dp<pos:position pos:line="55" pos:column="35"/></name></decl>;<pos:position pos:line="55" pos:column="36"/></decl_stmt>
        <decl_stmt><decl><type><name pos:line="56" pos:column="9">dav_lock_indirect<pos:position pos:line="56" pos:column="26"/></name> <modifier pos:line="56" pos:column="27">*<pos:position pos:line="56" pos:column="28"/></modifier></type><name pos:line="56" pos:column="28">ref_ip<pos:position pos:line="56" pos:column="34"/></name></decl>;<pos:position pos:line="56" pos:column="35"/></decl_stmt>

        <if pos:line="58" pos:column="9">if <condition pos:line="58" pos:column="12">(<expr><operator pos:line="58" pos:column="13">(<pos:position pos:line="58" pos:column="14"/></operator><name pos:line="58" pos:column="14">err<pos:position pos:line="58" pos:column="17"/></name> <operator pos:line="58" pos:column="18">=<pos:position pos:line="58" pos:column="19"/></operator> <call><name pos:line="58" pos:column="20">dav_generic_resolve<pos:position pos:line="58" pos:column="39"/></name><argument_list pos:line="58" pos:column="39">(<argument><expr><name pos:line="58" pos:column="40">lockdb<pos:position pos:line="58" pos:column="46"/></name></expr></argument>, <argument><expr><name pos:line="58" pos:column="48">ip<pos:position pos:line="58" pos:column="50"/></name></expr></argument>, <argument><expr><operator pos:line="58" pos:column="52">&amp;<pos:position pos:line="58" pos:column="57"/></operator><name pos:line="58" pos:column="53">dp_scan<pos:position pos:line="58" pos:column="60"/></name></expr></argument>,
                                       <argument><expr><operator pos:line="59" pos:column="40">&amp;<pos:position pos:line="59" pos:column="45"/></operator><name pos:line="59" pos:column="41">ref_dp<pos:position pos:line="59" pos:column="47"/></name></expr></argument>, <argument><expr><operator pos:line="59" pos:column="49">&amp;<pos:position pos:line="59" pos:column="54"/></operator><name pos:line="59" pos:column="50">ref_ip<pos:position pos:line="59" pos:column="56"/></name></expr></argument>)<pos:position pos:line="59" pos:column="57"/></argument_list></call><operator pos:line="59" pos:column="57">)<pos:position pos:line="59" pos:column="58"/></operator> <operator pos:line="59" pos:column="59">!=<pos:position pos:line="59" pos:column="61"/></operator> <name pos:line="59" pos:column="62">NULL<pos:position pos:line="59" pos:column="66"/></name></expr>)<pos:position pos:line="59" pos:column="67"/></condition><then pos:line="59" pos:column="67"> <block pos:line="59" pos:column="68">{
            <comment type="block" pos:line="60" pos:column="13">/* ### push a higher-level desc? */</comment>
            <return pos:line="61" pos:column="13">return <expr><name pos:line="61" pos:column="20">err<pos:position pos:line="61" pos:column="23"/></name></expr>;<pos:position pos:line="61" pos:column="24"/></return>
        }<pos:position pos:line="62" pos:column="10"/></block></then></if>
        <if pos:line="63" pos:column="9">if <condition pos:line="63" pos:column="12">(<expr><call><name pos:line="63" pos:column="13">dav_generic_do_refresh<pos:position pos:line="63" pos:column="35"/></name><argument_list pos:line="63" pos:column="35">(<argument><expr><name pos:line="63" pos:column="36">dp_scan<pos:position pos:line="63" pos:column="43"/></name></expr></argument>, <argument><expr><name pos:line="63" pos:column="45">ltl<pos:position pos:line="63" pos:column="48"/></name></expr></argument>, <argument><expr><name pos:line="63" pos:column="50">new_time<pos:position pos:line="63" pos:column="58"/></name></expr></argument>)<pos:position pos:line="63" pos:column="59"/></argument_list></call></expr>)<pos:position pos:line="63" pos:column="60"/></condition><then pos:line="63" pos:column="60"> <block pos:line="63" pos:column="61">{
            <comment type="block" pos:line="64" pos:column="13">/* the lock was refreshed. return the lock. */</comment>
            <expr_stmt><expr><name pos:line="65" pos:column="13">newlock<pos:position pos:line="65" pos:column="20"/></name> <operator pos:line="65" pos:column="21">=<pos:position pos:line="65" pos:column="22"/></operator> <call><name pos:line="65" pos:column="23">dav_generic_alloc_lock<pos:position pos:line="65" pos:column="45"/></name><argument_list pos:line="65" pos:column="45">(<argument><expr><name pos:line="65" pos:column="46">lockdb<pos:position pos:line="65" pos:column="52"/></name></expr></argument>, <argument><expr><name><name pos:line="65" pos:column="54">ip<pos:position pos:line="65" pos:column="56"/></name><operator pos:line="65" pos:column="56">-&gt;<pos:position pos:line="65" pos:column="61"/></operator><name pos:line="65" pos:column="58">key<pos:position pos:line="65" pos:column="61"/></name></name></expr></argument>, <argument><expr><name><name pos:line="65" pos:column="63">dp<pos:position pos:line="65" pos:column="65"/></name><operator pos:line="65" pos:column="65">-&gt;<pos:position pos:line="65" pos:column="70"/></operator><name pos:line="65" pos:column="67">locktoken<pos:position pos:line="65" pos:column="76"/></name></name></expr></argument>)<pos:position pos:line="65" pos:column="77"/></argument_list></call></expr>;<pos:position pos:line="65" pos:column="78"/></expr_stmt>
            <expr_stmt><expr><name><name pos:line="66" pos:column="13">newlock<pos:position pos:line="66" pos:column="20"/></name><operator pos:line="66" pos:column="20">-&gt;<pos:position pos:line="66" pos:column="25"/></operator><name pos:line="66" pos:column="22">is_locknull<pos:position pos:line="66" pos:column="33"/></name></name> <operator pos:line="66" pos:column="34">=<pos:position pos:line="66" pos:column="35"/></operator> <operator pos:line="66" pos:column="36">!<pos:position pos:line="66" pos:column="37"/></operator><name><name pos:line="66" pos:column="37">resource<pos:position pos:line="66" pos:column="45"/></name><operator pos:line="66" pos:column="45">-&gt;<pos:position pos:line="66" pos:column="50"/></operator><name pos:line="66" pos:column="47">exists<pos:position pos:line="66" pos:column="53"/></name></name></expr>;<pos:position pos:line="66" pos:column="54"/></expr_stmt>
            <expr_stmt><expr><name><name pos:line="67" pos:column="13">newlock<pos:position pos:line="67" pos:column="20"/></name><operator pos:line="67" pos:column="20">-&gt;<pos:position pos:line="67" pos:column="25"/></operator><name pos:line="67" pos:column="22">scope<pos:position pos:line="67" pos:column="27"/></name></name> <operator pos:line="67" pos:column="28">=<pos:position pos:line="67" pos:column="29"/></operator> <name><name pos:line="67" pos:column="30">dp<pos:position pos:line="67" pos:column="32"/></name><operator pos:line="67" pos:column="32">-&gt;<pos:position pos:line="67" pos:column="37"/></operator><name pos:line="67" pos:column="34">f<pos:position pos:line="67" pos:column="35"/></name><operator pos:line="67" pos:column="35">.<pos:position pos:line="67" pos:column="36"/></operator><name pos:line="67" pos:column="36">scope<pos:position pos:line="67" pos:column="41"/></name></name></expr>;<pos:position pos:line="67" pos:column="42"/></expr_stmt>
            <expr_stmt><expr><name><name pos:line="68" pos:column="13">newlock<pos:position pos:line="68" pos:column="20"/></name><operator pos:line="68" pos:column="20">-&gt;<pos:position pos:line="68" pos:column="25"/></operator><name pos:line="68" pos:column="22">type<pos:position pos:line="68" pos:column="26"/></name></name> <operator pos:line="68" pos:column="27">=<pos:position pos:line="68" pos:column="28"/></operator> <name><name pos:line="68" pos:column="29">dp<pos:position pos:line="68" pos:column="31"/></name><operator pos:line="68" pos:column="31">-&gt;<pos:position pos:line="68" pos:column="36"/></operator><name pos:line="68" pos:column="33">f<pos:position pos:line="68" pos:column="34"/></name><operator pos:line="68" pos:column="34">.<pos:position pos:line="68" pos:column="35"/></operator><name pos:line="68" pos:column="35">type<pos:position pos:line="68" pos:column="39"/></name></name></expr>;<pos:position pos:line="68" pos:column="40"/></expr_stmt>
            <expr_stmt><expr><name><name pos:line="69" pos:column="13">newlock<pos:position pos:line="69" pos:column="20"/></name><operator pos:line="69" pos:column="20">-&gt;<pos:position pos:line="69" pos:column="25"/></operator><name pos:line="69" pos:column="22">depth<pos:position pos:line="69" pos:column="27"/></name></name> <operator pos:line="69" pos:column="28">=<pos:position pos:line="69" pos:column="29"/></operator> <name><name pos:line="69" pos:column="30">dp<pos:position pos:line="69" pos:column="32"/></name><operator pos:line="69" pos:column="32">-&gt;<pos:position pos:line="69" pos:column="37"/></operator><name pos:line="69" pos:column="34">f<pos:position pos:line="69" pos:column="35"/></name><operator pos:line="69" pos:column="35">.<pos:position pos:line="69" pos:column="36"/></operator><name pos:line="69" pos:column="36">depth<pos:position pos:line="69" pos:column="41"/></name></name></expr>;<pos:position pos:line="69" pos:column="42"/></expr_stmt>
            <expr_stmt><expr><name><name pos:line="70" pos:column="13">newlock<pos:position pos:line="70" pos:column="20"/></name><operator pos:line="70" pos:column="20">-&gt;<pos:position pos:line="70" pos:column="25"/></operator><name pos:line="70" pos:column="22">timeout<pos:position pos:line="70" pos:column="29"/></name></name> <operator pos:line="70" pos:column="30">=<pos:position pos:line="70" pos:column="31"/></operator> <name><name pos:line="70" pos:column="32">dp<pos:position pos:line="70" pos:column="34"/></name><operator pos:line="70" pos:column="34">-&gt;<pos:position pos:line="70" pos:column="39"/></operator><name pos:line="70" pos:column="36">f<pos:position pos:line="70" pos:column="37"/></name><operator pos:line="70" pos:column="37">.<pos:position pos:line="70" pos:column="38"/></operator><name pos:line="70" pos:column="38">timeout<pos:position pos:line="70" pos:column="45"/></name></name></expr>;<pos:position pos:line="70" pos:column="46"/></expr_stmt>
            <expr_stmt><expr><name><name pos:line="71" pos:column="13">newlock<pos:position pos:line="71" pos:column="20"/></name><operator pos:line="71" pos:column="20">-&gt;<pos:position pos:line="71" pos:column="25"/></operator><name pos:line="71" pos:column="22">owner<pos:position pos:line="71" pos:column="27"/></name></name> <operator pos:line="71" pos:column="28">=<pos:position pos:line="71" pos:column="29"/></operator> <name><name pos:line="71" pos:column="30">dp<pos:position pos:line="71" pos:column="32"/></name><operator pos:line="71" pos:column="32">-&gt;<pos:position pos:line="71" pos:column="37"/></operator><name pos:line="71" pos:column="34">owner<pos:position pos:line="71" pos:column="39"/></name></name></expr>;<pos:position pos:line="71" pos:column="40"/></expr_stmt>
            <expr_stmt><expr><name><name pos:line="72" pos:column="13">newlock<pos:position pos:line="72" pos:column="20"/></name><operator pos:line="72" pos:column="20">-&gt;<pos:position pos:line="72" pos:column="25"/></operator><name pos:line="72" pos:column="22">auth_user<pos:position pos:line="72" pos:column="31"/></name></name> <operator pos:line="72" pos:column="32">=<pos:position pos:line="72" pos:column="33"/></operator> <name><name pos:line="72" pos:column="34">dp_scan<pos:position pos:line="72" pos:column="41"/></name><operator pos:line="72" pos:column="41">-&gt;<pos:position pos:line="72" pos:column="46"/></operator><name pos:line="72" pos:column="43">auth_user<pos:position pos:line="72" pos:column="52"/></name></name></expr>;<pos:position pos:line="72" pos:column="53"/></expr_stmt>

            <expr_stmt><expr><name><name pos:line="74" pos:column="13">newlock<pos:position pos:line="74" pos:column="20"/></name><operator pos:line="74" pos:column="20">-&gt;<pos:position pos:line="74" pos:column="25"/></operator><name pos:line="74" pos:column="22">next<pos:position pos:line="74" pos:column="26"/></name></name> <operator pos:line="74" pos:column="27">=<pos:position pos:line="74" pos:column="28"/></operator> <operator pos:line="74" pos:column="29">*<pos:position pos:line="74" pos:column="30"/></operator><name pos:line="74" pos:column="30">locks<pos:position pos:line="74" pos:column="35"/></name></expr>;<pos:position pos:line="74" pos:column="36"/></expr_stmt>
            <expr_stmt><expr><operator pos:line="75" pos:column="13">*<pos:position pos:line="75" pos:column="14"/></operator><name pos:line="75" pos:column="14">locks<pos:position pos:line="75" pos:column="19"/></name> <operator pos:line="75" pos:column="20">=<pos:position pos:line="75" pos:column="21"/></operator> <name pos:line="75" pos:column="22">newlock<pos:position pos:line="75" pos:column="29"/></name></expr>;<pos:position pos:line="75" pos:column="30"/></expr_stmt>

            <comment type="block" pos:line="77" pos:column="13">/* save the (resolved) direct lock back */</comment>
            <if pos:line="78" pos:column="13">if <condition pos:line="78" pos:column="16">(<expr><operator pos:line="78" pos:column="17">(<pos:position pos:line="78" pos:column="18"/></operator><name pos:line="78" pos:column="18">err<pos:position pos:line="78" pos:column="21"/></name> <operator pos:line="78" pos:column="22">=<pos:position pos:line="78" pos:column="23"/></operator> <call><name pos:line="78" pos:column="24">dav_generic_save_lock_record<pos:position pos:line="78" pos:column="52"/></name><argument_list pos:line="78" pos:column="52">(<argument><expr><name pos:line="78" pos:column="53">lockdb<pos:position pos:line="78" pos:column="59"/></name></expr></argument>, <argument><expr><name><name pos:line="78" pos:column="61">ip<pos:position pos:line="78" pos:column="63"/></name><operator pos:line="78" pos:column="63">-&gt;<pos:position pos:line="78" pos:column="68"/></operator><name pos:line="78" pos:column="65">key<pos:position pos:line="78" pos:column="68"/></name></name></expr></argument>, <argument><expr><name pos:line="78" pos:column="70">ref_dp<pos:position pos:line="78" pos:column="76"/></name></expr></argument>,
                                                    <argument><expr><name pos:line="79" pos:column="53">ref_ip<pos:position pos:line="79" pos:column="59"/></name></expr></argument>)<pos:position pos:line="79" pos:column="60"/></argument_list></call><operator pos:line="79" pos:column="60">)<pos:position pos:line="79" pos:column="61"/></operator> <operator pos:line="79" pos:column="62">!=<pos:position pos:line="79" pos:column="64"/></operator> <name pos:line="79" pos:column="65">NULL<pos:position pos:line="79" pos:column="69"/></name></expr>)<pos:position pos:line="79" pos:column="70"/></condition><then pos:line="79" pos:column="70"> <block pos:line="79" pos:column="71">{
                <comment type="block" pos:line="80" pos:column="17">/* ### push a higher-level desc? */</comment>
                <return pos:line="81" pos:column="17">return <expr><name pos:line="81" pos:column="24">err<pos:position pos:line="81" pos:column="27"/></name></expr>;<pos:position pos:line="81" pos:column="28"/></return>
            }<pos:position pos:line="82" pos:column="14"/></block></then></if>
        }<pos:position pos:line="83" pos:column="10"/></block></then></if>
    }<pos:position pos:line="84" pos:column="6"/></block></for>

    <return pos:line="86" pos:column="5">return <expr><name pos:line="86" pos:column="12">NULL<pos:position pos:line="86" pos:column="16"/></name></expr>;<pos:position pos:line="86" pos:column="17"/></return>
}<pos:position pos:line="87" pos:column="2"/></block></function></unit>

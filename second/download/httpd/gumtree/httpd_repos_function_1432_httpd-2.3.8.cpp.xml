<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/httpd/gumtree/httpd_repos_function_1432_httpd-2.3.8.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">void<pos:position pos:line="1" pos:column="12"/></name></type> <name pos:line="1" pos:column="13">wd_register_hooks<pos:position pos:line="1" pos:column="30"/></name><parameter_list pos:line="1" pos:column="30">(<parameter><decl><type><name pos:line="1" pos:column="31">apr_pool_t<pos:position pos:line="1" pos:column="41"/></name> <modifier pos:line="1" pos:column="42">*<pos:position pos:line="1" pos:column="43"/></modifier></type><name pos:line="1" pos:column="43">p<pos:position pos:line="1" pos:column="44"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="45"/></parameter_list>
<block pos:line="2" pos:column="1">{

    <comment type="block" pos:line="4" pos:column="5">/* Only the mpm_winnt has child init hook handler.
     * Make sure that we are called after the mpm child init handler
     * initializes.
     */</comment>
    <decl_stmt><decl><specifier pos:line="8" pos:column="5">static<pos:position pos:line="8" pos:column="11"/></specifier> <type><specifier pos:line="8" pos:column="12">const<pos:position pos:line="8" pos:column="17"/></specifier> <name pos:line="8" pos:column="18">char<pos:position pos:line="8" pos:column="22"/></name> <modifier pos:line="8" pos:column="23">*<pos:position pos:line="8" pos:column="24"/></modifier><specifier pos:line="8" pos:column="24">const<pos:position pos:line="8" pos:column="29"/></specifier></type> <name><name pos:line="8" pos:column="30">after_mpm<pos:position pos:line="8" pos:column="39"/></name><index pos:line="8" pos:column="39">[]<pos:position pos:line="8" pos:column="41"/></index></name>      <init pos:line="8" pos:column="47">= <expr><block pos:line="8" pos:column="49">{ <expr><literal type="string" pos:line="8" pos:column="51">"mpm_winnt.c"<pos:position pos:line="8" pos:column="64"/></literal></expr>, <expr><name pos:line="8" pos:column="66">NULL<pos:position pos:line="8" pos:column="70"/></name></expr>}<pos:position pos:line="8" pos:column="71"/></block></expr></init></decl>;<pos:position pos:line="8" pos:column="72"/></decl_stmt>

    <comment type="block" pos:line="10" pos:column="5">/* Pre config handling
     */</comment>
    <expr_stmt><expr><call><name pos:line="12" pos:column="5">ap_hook_pre_config<pos:position pos:line="12" pos:column="23"/></name><argument_list pos:line="12" pos:column="23">(<argument><expr><name pos:line="12" pos:column="24">wd_pre_config_hook<pos:position pos:line="12" pos:column="42"/></name></expr></argument>,
                       <argument><expr><name pos:line="13" pos:column="24">NULL<pos:position pos:line="13" pos:column="28"/></name></expr></argument>,
                       <argument><expr><name pos:line="14" pos:column="24">NULL<pos:position pos:line="14" pos:column="28"/></name></expr></argument>,
                       <argument><expr><name pos:line="15" pos:column="24">APR_HOOK_FIRST<pos:position pos:line="15" pos:column="38"/></name></expr></argument>)<pos:position pos:line="15" pos:column="39"/></argument_list></call></expr>;<pos:position pos:line="15" pos:column="40"/></expr_stmt>

    <comment type="block" pos:line="17" pos:column="5">/* Post config handling
     */</comment>
    <expr_stmt><expr><call><name pos:line="19" pos:column="5">ap_hook_post_config<pos:position pos:line="19" pos:column="24"/></name><argument_list pos:line="19" pos:column="24">(<argument><expr><name pos:line="19" pos:column="25">wd_post_config_hook<pos:position pos:line="19" pos:column="44"/></name></expr></argument>,
                        <argument><expr><name pos:line="20" pos:column="25">NULL<pos:position pos:line="20" pos:column="29"/></name></expr></argument>,
                        <argument><expr><name pos:line="21" pos:column="25">NULL<pos:position pos:line="21" pos:column="29"/></name></expr></argument>,
                        <argument><expr><name pos:line="22" pos:column="25">APR_HOOK_LAST<pos:position pos:line="22" pos:column="38"/></name></expr></argument>)<pos:position pos:line="22" pos:column="39"/></argument_list></call></expr>;<pos:position pos:line="22" pos:column="40"/></expr_stmt>

    <comment type="block" pos:line="24" pos:column="5">/* Child init hook
     */</comment>
    <expr_stmt><expr><call><name pos:line="26" pos:column="5">ap_hook_child_init<pos:position pos:line="26" pos:column="23"/></name><argument_list pos:line="26" pos:column="23">(<argument><expr><name pos:line="26" pos:column="24">wd_child_init_hook<pos:position pos:line="26" pos:column="42"/></name></expr></argument>,
                       <argument><expr><name pos:line="27" pos:column="24">after_mpm<pos:position pos:line="27" pos:column="33"/></name></expr></argument>,
                       <argument><expr><name pos:line="28" pos:column="24">NULL<pos:position pos:line="28" pos:column="28"/></name></expr></argument>,
                       <argument><expr><name pos:line="29" pos:column="24">APR_HOOK_MIDDLE<pos:position pos:line="29" pos:column="39"/></name></expr></argument>)<pos:position pos:line="29" pos:column="40"/></argument_list></call></expr>;<pos:position pos:line="29" pos:column="41"/></expr_stmt>

    <expr_stmt><expr><call><name pos:line="31" pos:column="5">APR_REGISTER_OPTIONAL_FN<pos:position pos:line="31" pos:column="29"/></name><argument_list pos:line="31" pos:column="29">(<argument><expr><name pos:line="31" pos:column="30">ap_watchdog_get_instance<pos:position pos:line="31" pos:column="54"/></name></expr></argument>)<pos:position pos:line="31" pos:column="55"/></argument_list></call></expr>;<pos:position pos:line="31" pos:column="56"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="32" pos:column="5">APR_REGISTER_OPTIONAL_FN<pos:position pos:line="32" pos:column="29"/></name><argument_list pos:line="32" pos:column="29">(<argument><expr><name pos:line="32" pos:column="30">ap_watchdog_register_callback<pos:position pos:line="32" pos:column="59"/></name></expr></argument>)<pos:position pos:line="32" pos:column="60"/></argument_list></call></expr>;<pos:position pos:line="32" pos:column="61"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="33" pos:column="5">APR_REGISTER_OPTIONAL_FN<pos:position pos:line="33" pos:column="29"/></name><argument_list pos:line="33" pos:column="29">(<argument><expr><name pos:line="33" pos:column="30">ap_watchdog_set_callback_interval<pos:position pos:line="33" pos:column="63"/></name></expr></argument>)<pos:position pos:line="33" pos:column="64"/></argument_list></call></expr>;<pos:position pos:line="33" pos:column="65"/></expr_stmt>
}<pos:position pos:line="34" pos:column="2"/></block></function></unit>

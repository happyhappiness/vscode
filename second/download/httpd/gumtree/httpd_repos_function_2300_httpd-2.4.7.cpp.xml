<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/httpd/gumtree/httpd_repos_function_2300_httpd-2.4.7.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><specifier pos:line="1" pos:column="8">const<pos:position pos:line="1" pos:column="13"/></specifier> <name pos:line="1" pos:column="14">char<pos:position pos:line="1" pos:column="18"/></name> <modifier pos:line="1" pos:column="19">*<pos:position pos:line="1" pos:column="20"/></modifier></type><name pos:line="1" pos:column="20">filter_bytype<pos:position pos:line="1" pos:column="33"/></name><parameter_list pos:line="1" pos:column="33">(<parameter><decl><type><name pos:line="1" pos:column="34">cmd_parms<pos:position pos:line="1" pos:column="43"/></name> <modifier pos:line="1" pos:column="44">*<pos:position pos:line="1" pos:column="45"/></modifier></type><name pos:line="1" pos:column="45">cmd<pos:position pos:line="1" pos:column="48"/></name></decl></parameter>, <parameter><decl><type><name pos:line="1" pos:column="50">void<pos:position pos:line="1" pos:column="54"/></name> <modifier pos:line="1" pos:column="55">*<pos:position pos:line="1" pos:column="56"/></modifier></type><name pos:line="1" pos:column="56">CFG<pos:position pos:line="1" pos:column="59"/></name></decl></parameter>,
                                 <parameter><decl><type><name pos:line="2" pos:column="34">int<pos:position pos:line="2" pos:column="37"/></name></type> <name pos:line="2" pos:column="38">argc<pos:position pos:line="2" pos:column="42"/></name></decl></parameter>, <parameter><decl><type><name pos:line="2" pos:column="44">char<pos:position pos:line="2" pos:column="48"/></name> <modifier pos:line="2" pos:column="49">*<pos:position pos:line="2" pos:column="50"/></modifier><specifier pos:line="2" pos:column="50">const<pos:position pos:line="2" pos:column="55"/></specifier></type> <name><name pos:line="2" pos:column="56">argv<pos:position pos:line="2" pos:column="60"/></name><index pos:line="2" pos:column="60">[]<pos:position pos:line="2" pos:column="62"/></index></name></decl></parameter>)<pos:position pos:line="2" pos:column="63"/></parameter_list>
<block pos:line="3" pos:column="1">{
    <comment type="block" pos:line="4" pos:column="5">/* back compatibility, need to parse multiple components in filter name */</comment>
    <decl_stmt><decl><type><name pos:line="5" pos:column="5">char<pos:position pos:line="5" pos:column="9"/></name> <modifier pos:line="5" pos:column="10">*<pos:position pos:line="5" pos:column="11"/></modifier></type><name pos:line="5" pos:column="11">pname<pos:position pos:line="5" pos:column="16"/></name></decl>;<pos:position pos:line="5" pos:column="17"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="6" pos:column="5">char<pos:position pos:line="6" pos:column="9"/></name> <modifier pos:line="6" pos:column="10">*<pos:position pos:line="6" pos:column="11"/></modifier></type><name pos:line="6" pos:column="11">strtok_state<pos:position pos:line="6" pos:column="23"/></name> <init pos:line="6" pos:column="24">= <expr><name pos:line="6" pos:column="26">NULL<pos:position pos:line="6" pos:column="30"/></name></expr></init></decl>;<pos:position pos:line="6" pos:column="31"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="7" pos:column="5">char<pos:position pos:line="7" pos:column="9"/></name> <modifier pos:line="7" pos:column="10">*<pos:position pos:line="7" pos:column="11"/></modifier></type><name pos:line="7" pos:column="11">name<pos:position pos:line="7" pos:column="15"/></name></decl>;<pos:position pos:line="7" pos:column="16"/></decl_stmt>
    <decl_stmt><decl><type><specifier pos:line="8" pos:column="5">const<pos:position pos:line="8" pos:column="10"/></specifier> <name pos:line="8" pos:column="11">char<pos:position pos:line="8" pos:column="15"/></name> <modifier pos:line="8" pos:column="16">*<pos:position pos:line="8" pos:column="17"/></modifier><modifier pos:line="8" pos:column="17">*<pos:position pos:line="8" pos:column="18"/></modifier></type><name pos:line="8" pos:column="18">types<pos:position pos:line="8" pos:column="23"/></name></decl>;<pos:position pos:line="8" pos:column="24"/></decl_stmt>
    <decl_stmt><decl><type><specifier pos:line="9" pos:column="5">const<pos:position pos:line="9" pos:column="10"/></specifier> <name pos:line="9" pos:column="11">char<pos:position pos:line="9" pos:column="15"/></name> <modifier pos:line="9" pos:column="16">*<pos:position pos:line="9" pos:column="17"/></modifier></type><name pos:line="9" pos:column="17">rv<pos:position pos:line="9" pos:column="19"/></name> <init pos:line="9" pos:column="20">= <expr><name pos:line="9" pos:column="22">NULL<pos:position pos:line="9" pos:column="26"/></name></expr></init></decl>;<pos:position pos:line="9" pos:column="27"/></decl_stmt>
    <if pos:line="10" pos:column="5">if <condition pos:line="10" pos:column="8">(<expr><name pos:line="10" pos:column="9">argc<pos:position pos:line="10" pos:column="13"/></name> <operator pos:line="10" pos:column="14">&lt;<pos:position pos:line="10" pos:column="18"/></operator> <literal type="number" pos:line="10" pos:column="16">2<pos:position pos:line="10" pos:column="17"/></literal></expr>)<pos:position pos:line="10" pos:column="18"/></condition><then pos:line="10" pos:column="18">
        <block type="pseudo"><return pos:line="11" pos:column="9">return <expr><literal type="string" pos:line="11" pos:column="16">"AddOutputFilterByType requires at least two arguments"<pos:position pos:line="11" pos:column="71"/></literal></expr>;<pos:position pos:line="11" pos:column="72"/></return></block></then></if>
    <expr_stmt><expr><name pos:line="12" pos:column="5">name<pos:position pos:line="12" pos:column="9"/></name> <operator pos:line="12" pos:column="10">=<pos:position pos:line="12" pos:column="11"/></operator> <call><name pos:line="12" pos:column="12">apr_pstrdup<pos:position pos:line="12" pos:column="23"/></name><argument_list pos:line="12" pos:column="23">(<argument><expr><name><name pos:line="12" pos:column="24">cmd<pos:position pos:line="12" pos:column="27"/></name><operator pos:line="12" pos:column="27">-&gt;<pos:position pos:line="12" pos:column="32"/></operator><name pos:line="12" pos:column="29">temp_pool<pos:position pos:line="12" pos:column="38"/></name></name></expr></argument>, <argument><expr><name><name pos:line="12" pos:column="40">argv<pos:position pos:line="12" pos:column="44"/></name><index pos:line="12" pos:column="44">[<expr><literal type="number" pos:line="12" pos:column="45">0<pos:position pos:line="12" pos:column="46"/></literal></expr>]<pos:position pos:line="12" pos:column="47"/></index></name></expr></argument>)<pos:position pos:line="12" pos:column="48"/></argument_list></call></expr>;<pos:position pos:line="12" pos:column="49"/></expr_stmt>
    <expr_stmt><expr><name pos:line="13" pos:column="5">types<pos:position pos:line="13" pos:column="10"/></name> <operator pos:line="13" pos:column="11">=<pos:position pos:line="13" pos:column="12"/></operator> <call><name pos:line="13" pos:column="13">apr_palloc<pos:position pos:line="13" pos:column="23"/></name><argument_list pos:line="13" pos:column="23">(<argument><expr><name><name pos:line="13" pos:column="24">cmd<pos:position pos:line="13" pos:column="27"/></name><operator pos:line="13" pos:column="27">-&gt;<pos:position pos:line="13" pos:column="32"/></operator><name pos:line="13" pos:column="29">pool<pos:position pos:line="13" pos:column="33"/></name></name></expr></argument>, <argument><expr><name pos:line="13" pos:column="35">argc<pos:position pos:line="13" pos:column="39"/></name> <operator pos:line="13" pos:column="40">*<pos:position pos:line="13" pos:column="41"/></operator> <sizeof pos:line="13" pos:column="42">sizeof<argument_list pos:line="13" pos:column="48">(<argument><expr><name pos:line="13" pos:column="49">char<pos:position pos:line="13" pos:column="53"/></name> <operator pos:line="13" pos:column="54">*<pos:position pos:line="13" pos:column="55"/></operator></expr></argument>)<pos:position pos:line="13" pos:column="56"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="13" pos:column="57"/></argument_list></call></expr>;<pos:position pos:line="13" pos:column="58"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="14" pos:column="5">memcpy<pos:position pos:line="14" pos:column="11"/></name><argument_list pos:line="14" pos:column="11">(<argument><expr><name pos:line="14" pos:column="12">types<pos:position pos:line="14" pos:column="17"/></name></expr></argument>, <argument><expr><operator pos:line="14" pos:column="19">&amp;<pos:position pos:line="14" pos:column="24"/></operator><name><name pos:line="14" pos:column="20">argv<pos:position pos:line="14" pos:column="24"/></name><index pos:line="14" pos:column="24">[<expr><literal type="number" pos:line="14" pos:column="25">1<pos:position pos:line="14" pos:column="26"/></literal></expr>]<pos:position pos:line="14" pos:column="27"/></index></name></expr></argument>, <argument><expr><operator pos:line="14" pos:column="29">(<pos:position pos:line="14" pos:column="30"/></operator><name pos:line="14" pos:column="30">argc<pos:position pos:line="14" pos:column="34"/></name> <operator pos:line="14" pos:column="35">-<pos:position pos:line="14" pos:column="36"/></operator> <literal type="number" pos:line="14" pos:column="37">1<pos:position pos:line="14" pos:column="38"/></literal><operator pos:line="14" pos:column="38">)<pos:position pos:line="14" pos:column="39"/></operator> <operator pos:line="14" pos:column="40">*<pos:position pos:line="14" pos:column="41"/></operator> <sizeof pos:line="14" pos:column="42">sizeof<argument_list pos:line="14" pos:column="48">(<argument><expr><name pos:line="14" pos:column="49">char<pos:position pos:line="14" pos:column="53"/></name> <operator pos:line="14" pos:column="54">*<pos:position pos:line="14" pos:column="55"/></operator></expr></argument>)<pos:position pos:line="14" pos:column="56"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="14" pos:column="57"/></argument_list></call></expr>;<pos:position pos:line="14" pos:column="58"/></expr_stmt>
    <expr_stmt><expr><name><name pos:line="15" pos:column="5">types<pos:position pos:line="15" pos:column="10"/></name><index pos:line="15" pos:column="10">[<expr><name pos:line="15" pos:column="11">argc<pos:position pos:line="15" pos:column="15"/></name><operator pos:line="15" pos:column="15">-<pos:position pos:line="15" pos:column="16"/></operator><literal type="number" pos:line="15" pos:column="16">1<pos:position pos:line="15" pos:column="17"/></literal></expr>]<pos:position pos:line="15" pos:column="18"/></index></name> <operator pos:line="15" pos:column="19">=<pos:position pos:line="15" pos:column="20"/></operator> <name pos:line="15" pos:column="21">NULL<pos:position pos:line="15" pos:column="25"/></name></expr>;<pos:position pos:line="15" pos:column="26"/></expr_stmt>
    <for pos:line="16" pos:column="5">for <control pos:line="16" pos:column="9">(<init><expr><name pos:line="16" pos:column="10">pname<pos:position pos:line="16" pos:column="15"/></name> <operator pos:line="16" pos:column="16">=<pos:position pos:line="16" pos:column="17"/></operator> <call><name pos:line="16" pos:column="18">apr_strtok<pos:position pos:line="16" pos:column="28"/></name><argument_list pos:line="16" pos:column="28">(<argument><expr><name pos:line="16" pos:column="29">name<pos:position pos:line="16" pos:column="33"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="16" pos:column="35">";"<pos:position pos:line="16" pos:column="38"/></literal></expr></argument>, <argument><expr><operator pos:line="16" pos:column="40">&amp;<pos:position pos:line="16" pos:column="45"/></operator><name pos:line="16" pos:column="41">strtok_state<pos:position pos:line="16" pos:column="53"/></name></expr></argument>)<pos:position pos:line="16" pos:column="54"/></argument_list></call></expr>;<pos:position pos:line="16" pos:column="55"/></init>
         <condition><expr><name pos:line="17" pos:column="10">pname<pos:position pos:line="17" pos:column="15"/></name> <operator pos:line="17" pos:column="16">!=<pos:position pos:line="17" pos:column="18"/></operator> <name pos:line="17" pos:column="19">NULL<pos:position pos:line="17" pos:column="23"/></name> <operator pos:line="17" pos:column="24">&amp;&amp;<pos:position pos:line="17" pos:column="34"/></operator> <name pos:line="17" pos:column="27">rv<pos:position pos:line="17" pos:column="29"/></name> <operator pos:line="17" pos:column="30">==<pos:position pos:line="17" pos:column="32"/></operator> <name pos:line="17" pos:column="33">NULL<pos:position pos:line="17" pos:column="37"/></name></expr>;<pos:position pos:line="17" pos:column="38"/></condition>
         <incr><expr><name pos:line="18" pos:column="10">pname<pos:position pos:line="18" pos:column="15"/></name> <operator pos:line="18" pos:column="16">=<pos:position pos:line="18" pos:column="17"/></operator> <call><name pos:line="18" pos:column="18">apr_strtok<pos:position pos:line="18" pos:column="28"/></name><argument_list pos:line="18" pos:column="28">(<argument><expr><name pos:line="18" pos:column="29">NULL<pos:position pos:line="18" pos:column="33"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="18" pos:column="35">";"<pos:position pos:line="18" pos:column="38"/></literal></expr></argument>, <argument><expr><operator pos:line="18" pos:column="40">&amp;<pos:position pos:line="18" pos:column="45"/></operator><name pos:line="18" pos:column="41">strtok_state<pos:position pos:line="18" pos:column="53"/></name></expr></argument>)<pos:position pos:line="18" pos:column="54"/></argument_list></call></expr></incr>)<pos:position pos:line="18" pos:column="55"/></control> <block pos:line="18" pos:column="56">{
        <expr_stmt><expr><name pos:line="19" pos:column="9">rv<pos:position pos:line="19" pos:column="11"/></name> <operator pos:line="19" pos:column="12">=<pos:position pos:line="19" pos:column="13"/></operator> <call><name pos:line="19" pos:column="14">filter_bytype1<pos:position pos:line="19" pos:column="28"/></name><argument_list pos:line="19" pos:column="28">(<argument><expr><name pos:line="19" pos:column="29">cmd<pos:position pos:line="19" pos:column="32"/></name></expr></argument>, <argument><expr><name pos:line="19" pos:column="34">CFG<pos:position pos:line="19" pos:column="37"/></name></expr></argument>, <argument><expr><name pos:line="19" pos:column="39">pname<pos:position pos:line="19" pos:column="44"/></name></expr></argument>, <argument><expr><name pos:line="19" pos:column="46">types<pos:position pos:line="19" pos:column="51"/></name></expr></argument>)<pos:position pos:line="19" pos:column="52"/></argument_list></call></expr>;<pos:position pos:line="19" pos:column="53"/></expr_stmt>
    }<pos:position pos:line="20" pos:column="6"/></block></for>
    <return pos:line="21" pos:column="5">return <expr><name pos:line="21" pos:column="12">rv<pos:position pos:line="21" pos:column="14"/></name></expr>;<pos:position pos:line="21" pos:column="15"/></return>
}<pos:position pos:line="22" pos:column="2"/></block></function></unit>

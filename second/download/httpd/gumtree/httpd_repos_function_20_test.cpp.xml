<function xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position"><type><specifier pos:line="295" pos:column="1">const<pos:position pos:line="295" pos:column="6"/></specifier> <name pos:line="295" pos:column="7">void<pos:position pos:line="295" pos:column="11"/></name> <modifier pos:line="295" pos:column="12">*<pos:position pos:line="295" pos:column="13"/></modifier></type><name pos:line="295" pos:column="13">detach_commit_buffer<pos:position pos:line="295" pos:column="33"/></name><parameter_list pos:line="295" pos:column="33">(<parameter><decl><type><name><name pos:line="295" pos:column="34">struct<pos:position pos:line="295" pos:column="40"/></name> <name pos:line="295" pos:column="41">commit<pos:position pos:line="295" pos:column="47"/></name></name> <modifier pos:line="295" pos:column="48">*<pos:position pos:line="295" pos:column="49"/></modifier></type><name pos:line="295" pos:column="49">commit<pos:position pos:line="295" pos:column="55"/></name></decl></parameter>, <parameter><decl><type><name pos:line="295" pos:column="57">unsigned<pos:position pos:line="295" pos:column="65"/></name> <name pos:line="295" pos:column="66">long<pos:position pos:line="295" pos:column="70"/></name> <modifier pos:line="295" pos:column="71">*<pos:position pos:line="295" pos:column="72"/></modifier></type><name pos:line="295" pos:column="72">sizep<pos:position pos:line="295" pos:column="77"/></name></decl></parameter>)<pos:position pos:line="295" pos:column="78"/></parameter_list>
<block pos:line="296" pos:column="1">{
	<decl_stmt><decl><type><name><name pos:line="297" pos:column="9">struct<pos:position pos:line="297" pos:column="15"/></name> <name pos:line="297" pos:column="16">commit_buffer<pos:position pos:line="297" pos:column="29"/></name></name> <modifier pos:line="297" pos:column="30">*<pos:position pos:line="297" pos:column="31"/></modifier></type><name pos:line="297" pos:column="31">v<pos:position pos:line="297" pos:column="32"/></name> <init pos:line="297" pos:column="33">= <expr><call><name pos:line="297" pos:column="35">buffer_slab_peek<pos:position pos:line="297" pos:column="51"/></name><argument_list pos:line="297" pos:column="51">(<argument><expr><operator pos:line="297" pos:column="52">&amp;<pos:position pos:line="297" pos:column="57"/></operator><name pos:line="297" pos:column="53">buffer_slab<pos:position pos:line="297" pos:column="64"/></name></expr></argument>, <argument><expr><name pos:line="297" pos:column="66">commit<pos:position pos:line="297" pos:column="72"/></name></expr></argument>)<pos:position pos:line="297" pos:column="73"/></argument_list></call></expr></init></decl>;<pos:position pos:line="297" pos:column="74"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="298" pos:column="9">void<pos:position pos:line="298" pos:column="13"/></name> <modifier pos:line="298" pos:column="14">*<pos:position pos:line="298" pos:column="15"/></modifier></type><name pos:line="298" pos:column="15">ret<pos:position pos:line="298" pos:column="18"/></name></decl>;<pos:position pos:line="298" pos:column="19"/></decl_stmt>

	<if pos:line="300" pos:column="9">if <condition pos:line="300" pos:column="12">(<expr><operator pos:line="300" pos:column="13">!<pos:position pos:line="300" pos:column="14"/></operator><name pos:line="300" pos:column="14">v<pos:position pos:line="300" pos:column="15"/></name></expr>)<pos:position pos:line="300" pos:column="16"/></condition><then pos:line="300" pos:column="16"> <block pos:line="300" pos:column="17">{
		<if pos:line="301" pos:column="17">if <condition pos:line="301" pos:column="20">(<expr><name pos:line="301" pos:column="21">sizep<pos:position pos:line="301" pos:column="26"/></name></expr>)<pos:position pos:line="301" pos:column="27"/></condition><then pos:line="301" pos:column="27">
			<block type="pseudo"><expr_stmt><expr><operator pos:line="302" pos:column="25">*<pos:position pos:line="302" pos:column="26"/></operator><name pos:line="302" pos:column="26">sizep<pos:position pos:line="302" pos:column="31"/></name> <operator pos:line="302" pos:column="32">=<pos:position pos:line="302" pos:column="33"/></operator> <literal type="number" pos:line="302" pos:column="34">0<pos:position pos:line="302" pos:column="35"/></literal></expr>;<pos:position pos:line="302" pos:column="36"/></expr_stmt></block></then></if>
		<return pos:line="303" pos:column="17">return <expr><name pos:line="303" pos:column="24">NULL<pos:position pos:line="303" pos:column="28"/></name></expr>;<pos:position pos:line="303" pos:column="29"/></return>
	}<pos:position pos:line="304" pos:column="10"/></block></then></if>
	<expr_stmt><expr><name pos:line="305" pos:column="9">ret<pos:position pos:line="305" pos:column="12"/></name> <operator pos:line="305" pos:column="13">=<pos:position pos:line="305" pos:column="14"/></operator> <name><name pos:line="305" pos:column="15">v<pos:position pos:line="305" pos:column="16"/></name><operator pos:line="305" pos:column="16">-&gt;<pos:position pos:line="305" pos:column="21"/></operator><name pos:line="305" pos:column="18">buffer<pos:position pos:line="305" pos:column="24"/></name></name></expr>;<pos:position pos:line="305" pos:column="25"/></expr_stmt>
	<if pos:line="306" pos:column="9">if <condition pos:line="306" pos:column="12">(<expr><name pos:line="306" pos:column="13">sizep<pos:position pos:line="306" pos:column="18"/></name></expr>)<pos:position pos:line="306" pos:column="19"/></condition><then pos:line="306" pos:column="19">
		<block type="pseudo"><expr_stmt><expr><operator pos:line="307" pos:column="17">*<pos:position pos:line="307" pos:column="18"/></operator><name pos:line="307" pos:column="18">sizep<pos:position pos:line="307" pos:column="23"/></name> <operator pos:line="307" pos:column="24">=<pos:position pos:line="307" pos:column="25"/></operator> <name><name pos:line="307" pos:column="26">v<pos:position pos:line="307" pos:column="27"/></name><operator pos:line="307" pos:column="27">-&gt;<pos:position pos:line="307" pos:column="32"/></operator><name pos:line="307" pos:column="29">size<pos:position pos:line="307" pos:column="33"/></name></name></expr>;<pos:position pos:line="307" pos:column="34"/></expr_stmt></block></then></if>

	<expr_stmt><expr><name><name pos:line="309" pos:column="9">v<pos:position pos:line="309" pos:column="10"/></name><operator pos:line="309" pos:column="10">-&gt;<pos:position pos:line="309" pos:column="15"/></operator><name pos:line="309" pos:column="12">buffer<pos:position pos:line="309" pos:column="18"/></name></name> <operator pos:line="309" pos:column="19">=<pos:position pos:line="309" pos:column="20"/></operator> <name pos:line="309" pos:column="21">NULL<pos:position pos:line="309" pos:column="25"/></name></expr>;<pos:position pos:line="309" pos:column="26"/></expr_stmt>
	<expr_stmt><expr><name><name pos:line="310" pos:column="9">v<pos:position pos:line="310" pos:column="10"/></name><operator pos:line="310" pos:column="10">-&gt;<pos:position pos:line="310" pos:column="15"/></operator><name pos:line="310" pos:column="12">size<pos:position pos:line="310" pos:column="16"/></name></name> <operator pos:line="310" pos:column="17">=<pos:position pos:line="310" pos:column="18"/></operator> <literal type="number" pos:line="310" pos:column="19">0<pos:position pos:line="310" pos:column="20"/></literal></expr>;<pos:position pos:line="310" pos:column="21"/></expr_stmt>
	<return pos:line="311" pos:column="9">return <expr><name pos:line="311" pos:column="16">ret<pos:position pos:line="311" pos:column="19"/></name></expr>;<pos:position pos:line="311" pos:column="20"/></return>
}<pos:position pos:line="312" pos:column="2"/></block></function>


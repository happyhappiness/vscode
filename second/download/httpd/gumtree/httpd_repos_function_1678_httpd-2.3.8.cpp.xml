<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/httpd/gumtree/httpd_repos_function_1678_httpd-2.3.8.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><specifier pos:line="1" pos:column="8">const<pos:position pos:line="1" pos:column="13"/></specifier> <name pos:line="1" pos:column="14">char<pos:position pos:line="1" pos:column="18"/></name><modifier pos:line="1" pos:column="18">*<pos:position pos:line="1" pos:column="19"/></modifier></type> <name pos:line="1" pos:column="20">static_config_check<pos:position pos:line="1" pos:column="39"/></name><parameter_list pos:line="1" pos:column="39">(<parameter><decl><type><name pos:line="1" pos:column="40">void<pos:position pos:line="1" pos:column="44"/></name> <modifier pos:line="1" pos:column="45">*<pos:position pos:line="1" pos:column="46"/></modifier></type><name pos:line="1" pos:column="46">baton<pos:position pos:line="1" pos:column="51"/></name></decl></parameter>,
                                   <parameter><decl><type><name pos:line="2" pos:column="36">cmd_parms<pos:position pos:line="2" pos:column="45"/></name> <modifier pos:line="2" pos:column="46">*<pos:position pos:line="2" pos:column="47"/></modifier></type><name pos:line="2" pos:column="47">cmd<pos:position pos:line="2" pos:column="50"/></name></decl></parameter>,
                                   <parameter><decl><type><name pos:line="3" pos:column="36">apr_table_t<pos:position pos:line="3" pos:column="47"/></name> <modifier pos:line="3" pos:column="48">*<pos:position pos:line="3" pos:column="49"/></modifier></type><name pos:line="3" pos:column="49">params<pos:position pos:line="3" pos:column="55"/></name></decl></parameter>)<pos:position pos:line="3" pos:column="56"/></parameter_list>
<block pos:line="4" pos:column="1">{
    <decl_stmt><decl><type><name pos:line="5" pos:column="5">hb_table_baton_t<pos:position pos:line="5" pos:column="21"/></name></type> <name pos:line="5" pos:column="22">b<pos:position pos:line="5" pos:column="23"/></name></decl>;<pos:position pos:line="5" pos:column="24"/></decl_stmt>
    
    <if pos:line="7" pos:column="5">if <condition pos:line="7" pos:column="8">(<expr><call><name pos:line="7" pos:column="9">apr_is_empty_table<pos:position pos:line="7" pos:column="27"/></name><argument_list pos:line="7" pos:column="27">(<argument><expr><name pos:line="7" pos:column="28">params<pos:position pos:line="7" pos:column="34"/></name></expr></argument>)<pos:position pos:line="7" pos:column="35"/></argument_list></call></expr>)<pos:position pos:line="7" pos:column="36"/></condition><then pos:line="7" pos:column="36"> <block pos:line="7" pos:column="37">{
        <return pos:line="8" pos:column="9">return <expr><literal type="string" pos:line="8" pos:column="16">"SerfCluster Static requires at least a host list."<pos:position pos:line="8" pos:column="67"/></literal></expr>;<pos:position pos:line="8" pos:column="68"/></return>
    }<pos:position pos:line="9" pos:column="6"/></block></then></if>
    
    <expr_stmt><expr><name><name pos:line="11" pos:column="5">b<pos:position pos:line="11" pos:column="6"/></name><operator pos:line="11" pos:column="6">.<pos:position pos:line="11" pos:column="7"/></operator><name pos:line="11" pos:column="7">p<pos:position pos:line="11" pos:column="8"/></name></name> <operator pos:line="11" pos:column="9">=<pos:position pos:line="11" pos:column="10"/></operator> <name><name pos:line="11" pos:column="11">cmd<pos:position pos:line="11" pos:column="14"/></name><operator pos:line="11" pos:column="14">-&gt;<pos:position pos:line="11" pos:column="19"/></operator><name pos:line="11" pos:column="16">pool<pos:position pos:line="11" pos:column="20"/></name></name></expr>;<pos:position pos:line="11" pos:column="21"/></expr_stmt>
    <expr_stmt><expr><name><name pos:line="12" pos:column="5">b<pos:position pos:line="12" pos:column="6"/></name><operator pos:line="12" pos:column="6">.<pos:position pos:line="12" pos:column="7"/></operator><name pos:line="12" pos:column="7">msg<pos:position pos:line="12" pos:column="10"/></name></name> <operator pos:line="12" pos:column="11">=<pos:position pos:line="12" pos:column="12"/></operator> <name pos:line="12" pos:column="13">NULL<pos:position pos:line="12" pos:column="17"/></name></expr>;<pos:position pos:line="12" pos:column="18"/></expr_stmt>
    
    <expr_stmt><expr><call><name pos:line="14" pos:column="5">apr_table_do<pos:position pos:line="14" pos:column="17"/></name><argument_list pos:line="14" pos:column="17">(<argument><expr><name pos:line="14" pos:column="18">static_table_check<pos:position pos:line="14" pos:column="36"/></name></expr></argument>, <argument><expr><operator pos:line="14" pos:column="38">&amp;<pos:position pos:line="14" pos:column="43"/></operator><name pos:line="14" pos:column="39">b<pos:position pos:line="14" pos:column="40"/></name></expr></argument>, <argument><expr><name pos:line="14" pos:column="42">params<pos:position pos:line="14" pos:column="48"/></name></expr></argument>, <argument><expr><name pos:line="14" pos:column="50">NULL<pos:position pos:line="14" pos:column="54"/></name></expr></argument>)<pos:position pos:line="14" pos:column="55"/></argument_list></call></expr>;<pos:position pos:line="14" pos:column="56"/></expr_stmt>
    
    <if pos:line="16" pos:column="5">if <condition pos:line="16" pos:column="8">(<expr><name><name pos:line="16" pos:column="9">b<pos:position pos:line="16" pos:column="10"/></name><operator pos:line="16" pos:column="10">.<pos:position pos:line="16" pos:column="11"/></operator><name pos:line="16" pos:column="11">msg<pos:position pos:line="16" pos:column="14"/></name></name></expr>)<pos:position pos:line="16" pos:column="15"/></condition><then pos:line="16" pos:column="15"> <block pos:line="16" pos:column="16">{
        <return pos:line="17" pos:column="9">return <expr><name><name pos:line="17" pos:column="16">b<pos:position pos:line="17" pos:column="17"/></name><operator pos:line="17" pos:column="17">.<pos:position pos:line="17" pos:column="18"/></operator><name pos:line="17" pos:column="18">msg<pos:position pos:line="17" pos:column="21"/></name></name></expr>;<pos:position pos:line="17" pos:column="22"/></return>
    }<pos:position pos:line="18" pos:column="6"/></block></then></if>
    
    <if pos:line="20" pos:column="5">if <condition pos:line="20" pos:column="8">(<expr><call><name pos:line="20" pos:column="9">apr_table_get<pos:position pos:line="20" pos:column="22"/></name><argument_list pos:line="20" pos:column="22">(<argument><expr><name pos:line="20" pos:column="23">params<pos:position pos:line="20" pos:column="29"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="20" pos:column="31">"hosts"<pos:position pos:line="20" pos:column="38"/></literal></expr></argument>)<pos:position pos:line="20" pos:column="39"/></argument_list></call> <operator pos:line="20" pos:column="40">==<pos:position pos:line="20" pos:column="42"/></operator> <name pos:line="20" pos:column="43">NULL<pos:position pos:line="20" pos:column="47"/></name></expr>)<pos:position pos:line="20" pos:column="48"/></condition><then pos:line="20" pos:column="48"> <block pos:line="20" pos:column="49">{
        <return pos:line="21" pos:column="9">return <expr><literal type="string" pos:line="21" pos:column="16">"SerfCluster Static requires at least a hosts parameter"<pos:position pos:line="21" pos:column="72"/></literal></expr>;<pos:position pos:line="21" pos:column="73"/></return>
    }<pos:position pos:line="22" pos:column="6"/></block></then></if>
    <return pos:line="23" pos:column="5">return <expr><name pos:line="23" pos:column="12">NULL<pos:position pos:line="23" pos:column="16"/></name></expr>;<pos:position pos:line="23" pos:column="17"/></return>
}<pos:position pos:line="24" pos:column="2"/></block></function></unit>

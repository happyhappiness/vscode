<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/httpd/gumtree/httpd_repos_function_2051_httpd-2.4.3.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">void<pos:position pos:line="1" pos:column="12"/></name></type> <name pos:line="1" pos:column="13">appendmem_to_linebuf<pos:position pos:line="1" pos:column="33"/></name><parameter_list pos:line="1" pos:column="33">(<parameter><decl><type><name pos:line="1" pos:column="34">sed_eval_t<pos:position pos:line="1" pos:column="44"/></name> <modifier pos:line="1" pos:column="45">*<pos:position pos:line="1" pos:column="46"/></modifier></type><name pos:line="1" pos:column="46">eval<pos:position pos:line="1" pos:column="50"/></name></decl></parameter>, <parameter><decl><type><specifier pos:line="1" pos:column="52">const<pos:position pos:line="1" pos:column="57"/></specifier> <name pos:line="1" pos:column="58">char<pos:position pos:line="1" pos:column="62"/></name><modifier pos:line="1" pos:column="62">*<pos:position pos:line="1" pos:column="63"/></modifier></type> <name pos:line="1" pos:column="64">sz<pos:position pos:line="1" pos:column="66"/></name></decl></parameter>, <parameter><decl><type><name pos:line="1" pos:column="68">int<pos:position pos:line="1" pos:column="71"/></name></type> <name pos:line="1" pos:column="72">len<pos:position pos:line="1" pos:column="75"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="76"/></parameter_list>
<block pos:line="2" pos:column="1">{
    <decl_stmt><decl><type><name pos:line="3" pos:column="5">unsigned<pos:position pos:line="3" pos:column="13"/></name> <name pos:line="3" pos:column="14">int<pos:position pos:line="3" pos:column="17"/></name></type> <name pos:line="3" pos:column="18">reqsize<pos:position pos:line="3" pos:column="25"/></name> <init pos:line="3" pos:column="26">= <expr><operator pos:line="3" pos:column="28">(<pos:position pos:line="3" pos:column="29"/></operator><name><name pos:line="3" pos:column="29">eval<pos:position pos:line="3" pos:column="33"/></name><operator pos:line="3" pos:column="33">-&gt;<pos:position pos:line="3" pos:column="38"/></operator><name pos:line="3" pos:column="35">lspend<pos:position pos:line="3" pos:column="41"/></name></name> <operator pos:line="3" pos:column="42">-<pos:position pos:line="3" pos:column="43"/></operator> <name><name pos:line="3" pos:column="44">eval<pos:position pos:line="3" pos:column="48"/></name><operator pos:line="3" pos:column="48">-&gt;<pos:position pos:line="3" pos:column="53"/></operator><name pos:line="3" pos:column="50">linebuf<pos:position pos:line="3" pos:column="57"/></name></name><operator pos:line="3" pos:column="57">)<pos:position pos:line="3" pos:column="58"/></operator> <operator pos:line="3" pos:column="59">+<pos:position pos:line="3" pos:column="60"/></operator> <name pos:line="3" pos:column="61">len<pos:position pos:line="3" pos:column="64"/></name></expr></init></decl>;<pos:position pos:line="3" pos:column="65"/></decl_stmt>
    <if pos:line="4" pos:column="5">if <condition pos:line="4" pos:column="8">(<expr><name><name pos:line="4" pos:column="9">eval<pos:position pos:line="4" pos:column="13"/></name><operator pos:line="4" pos:column="13">-&gt;<pos:position pos:line="4" pos:column="18"/></operator><name pos:line="4" pos:column="15">lsize<pos:position pos:line="4" pos:column="20"/></name></name> <operator pos:line="4" pos:column="21">&lt;<pos:position pos:line="4" pos:column="25"/></operator> <name pos:line="4" pos:column="23">reqsize<pos:position pos:line="4" pos:column="30"/></name></expr>)<pos:position pos:line="4" pos:column="31"/></condition><then pos:line="4" pos:column="31"> <block pos:line="4" pos:column="32">{
        <expr_stmt><expr><call><name pos:line="5" pos:column="9">grow_line_buffer<pos:position pos:line="5" pos:column="25"/></name><argument_list pos:line="5" pos:column="25">(<argument><expr><name pos:line="5" pos:column="26">eval<pos:position pos:line="5" pos:column="30"/></name></expr></argument>, <argument><expr><name pos:line="5" pos:column="32">reqsize<pos:position pos:line="5" pos:column="39"/></name></expr></argument>)<pos:position pos:line="5" pos:column="40"/></argument_list></call></expr>;<pos:position pos:line="5" pos:column="41"/></expr_stmt>
    }<pos:position pos:line="6" pos:column="6"/></block></then></if>
    <expr_stmt><expr><call><name pos:line="7" pos:column="5">memcpy<pos:position pos:line="7" pos:column="11"/></name><argument_list pos:line="7" pos:column="11">(<argument><expr><name><name pos:line="7" pos:column="12">eval<pos:position pos:line="7" pos:column="16"/></name><operator pos:line="7" pos:column="16">-&gt;<pos:position pos:line="7" pos:column="21"/></operator><name pos:line="7" pos:column="18">lspend<pos:position pos:line="7" pos:column="24"/></name></name></expr></argument>, <argument><expr><name pos:line="7" pos:column="26">sz<pos:position pos:line="7" pos:column="28"/></name></expr></argument>, <argument><expr><name pos:line="7" pos:column="30">len<pos:position pos:line="7" pos:column="33"/></name></expr></argument>)<pos:position pos:line="7" pos:column="34"/></argument_list></call></expr>;<pos:position pos:line="7" pos:column="35"/></expr_stmt>
    <expr_stmt><expr><name><name pos:line="8" pos:column="5">eval<pos:position pos:line="8" pos:column="9"/></name><operator pos:line="8" pos:column="9">-&gt;<pos:position pos:line="8" pos:column="14"/></operator><name pos:line="8" pos:column="11">lspend<pos:position pos:line="8" pos:column="17"/></name></name> <operator pos:line="8" pos:column="18">+=<pos:position pos:line="8" pos:column="20"/></operator> <name pos:line="8" pos:column="21">len<pos:position pos:line="8" pos:column="24"/></name></expr>;<pos:position pos:line="8" pos:column="25"/></expr_stmt>
}<pos:position pos:line="9" pos:column="2"/></block></function></unit>

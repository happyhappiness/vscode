<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/httpd/gumtree/httpd_function_4981.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">int<pos:position pos:line="1" pos:column="11"/></name></type> <name pos:line="1" pos:column="12">open_listeners<pos:position pos:line="1" pos:column="26"/></name><parameter_list pos:line="1" pos:column="26">(<parameter><decl><type><name pos:line="1" pos:column="27">apr_pool_t<pos:position pos:line="1" pos:column="37"/></name> <modifier pos:line="1" pos:column="38">*<pos:position pos:line="1" pos:column="39"/></modifier></type><name pos:line="1" pos:column="39">pool<pos:position pos:line="1" pos:column="43"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="44"/></parameter_list>
<block pos:line="2" pos:column="1">{
    <decl_stmt><decl><type><name pos:line="3" pos:column="5">ap_listen_rec<pos:position pos:line="3" pos:column="18"/></name> <modifier pos:line="3" pos:column="19">*<pos:position pos:line="3" pos:column="20"/></modifier></type><name pos:line="3" pos:column="20">lr<pos:position pos:line="3" pos:column="22"/></name></decl>;<pos:position pos:line="3" pos:column="23"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="4" pos:column="5">ap_listen_rec<pos:position pos:line="4" pos:column="18"/></name> <modifier pos:line="4" pos:column="19">*<pos:position pos:line="4" pos:column="20"/></modifier></type><name pos:line="4" pos:column="20">next<pos:position pos:line="4" pos:column="24"/></name></decl>;<pos:position pos:line="4" pos:column="25"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="5" pos:column="5">ap_listen_rec<pos:position pos:line="5" pos:column="18"/></name> <modifier pos:line="5" pos:column="19">*<pos:position pos:line="5" pos:column="20"/></modifier></type><name pos:line="5" pos:column="20">previous<pos:position pos:line="5" pos:column="28"/></name></decl>;<pos:position pos:line="5" pos:column="29"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="6" pos:column="5">int<pos:position pos:line="6" pos:column="8"/></name></type> <name pos:line="6" pos:column="9">num_open<pos:position pos:line="6" pos:column="17"/></name></decl>;<pos:position pos:line="6" pos:column="18"/></decl_stmt>
    <decl_stmt><decl><type><specifier pos:line="7" pos:column="5">const<pos:position pos:line="7" pos:column="10"/></specifier> <name pos:line="7" pos:column="11">char<pos:position pos:line="7" pos:column="15"/></name> <modifier pos:line="7" pos:column="16">*<pos:position pos:line="7" pos:column="17"/></modifier></type><name pos:line="7" pos:column="17">userdata_key<pos:position pos:line="7" pos:column="29"/></name> <init pos:line="7" pos:column="30">= <expr><literal type="string" pos:line="7" pos:column="32">"ap_open_listeners"<pos:position pos:line="7" pos:column="51"/></literal></expr></init></decl>;<pos:position pos:line="7" pos:column="52"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="8" pos:column="5">void<pos:position pos:line="8" pos:column="9"/></name> <modifier pos:line="8" pos:column="10">*<pos:position pos:line="8" pos:column="11"/></modifier></type><name pos:line="8" pos:column="11">data<pos:position pos:line="8" pos:column="15"/></name></decl>;<pos:position pos:line="8" pos:column="16"/></decl_stmt>
<cpp:if pos:line="9" pos:column="1">#<cpp:directive pos:line="9" pos:column="2">if<pos:position pos:line="9" pos:column="4"/></cpp:directive> <expr><name pos:line="9" pos:column="5">AP_NONBLOCK_WHEN_MULTI_LISTEN<pos:position pos:line="9" pos:column="34"/></name></expr></cpp:if>
    <decl_stmt><decl><type><name pos:line="10" pos:column="5">int<pos:position pos:line="10" pos:column="8"/></name></type> <name pos:line="10" pos:column="9">use_nonblock<pos:position pos:line="10" pos:column="21"/></name></decl>;<pos:position pos:line="10" pos:column="22"/></decl_stmt>
<cpp:endif pos:line="11" pos:column="1">#<cpp:directive pos:line="11" pos:column="2">endif<pos:position pos:line="11" pos:column="7"/></cpp:directive></cpp:endif>

    <comment type="block" pos:line="13" pos:column="5">/* Don't allocate a default listener.  If we need to listen to a
     * port, then the user needs to have a Listen directive in their
     * config file.
     */</comment>
    <expr_stmt><expr><name pos:line="17" pos:column="5">num_open<pos:position pos:line="17" pos:column="13"/></name> <operator pos:line="17" pos:column="14">=<pos:position pos:line="17" pos:column="15"/></operator> <literal type="number" pos:line="17" pos:column="16">0<pos:position pos:line="17" pos:column="17"/></literal></expr>;<pos:position pos:line="17" pos:column="18"/></expr_stmt>
    <expr_stmt><expr><name pos:line="18" pos:column="5">previous<pos:position pos:line="18" pos:column="13"/></name> <operator pos:line="18" pos:column="14">=<pos:position pos:line="18" pos:column="15"/></operator> <name pos:line="18" pos:column="16">NULL<pos:position pos:line="18" pos:column="20"/></name></expr>;<pos:position pos:line="18" pos:column="21"/></expr_stmt>
    <for pos:line="19" pos:column="5">for <control pos:line="19" pos:column="9">(<init><expr><name pos:line="19" pos:column="10">lr<pos:position pos:line="19" pos:column="12"/></name> <operator pos:line="19" pos:column="13">=<pos:position pos:line="19" pos:column="14"/></operator> <name pos:line="19" pos:column="15">ap_listeners<pos:position pos:line="19" pos:column="27"/></name></expr>;<pos:position pos:line="19" pos:column="28"/></init> <condition><expr><name pos:line="19" pos:column="29">lr<pos:position pos:line="19" pos:column="31"/></name></expr>;<pos:position pos:line="19" pos:column="32"/></condition> <incr><expr><name pos:line="19" pos:column="33">previous<pos:position pos:line="19" pos:column="41"/></name> <operator pos:line="19" pos:column="42">=<pos:position pos:line="19" pos:column="43"/></operator> <name pos:line="19" pos:column="44">lr<pos:position pos:line="19" pos:column="46"/></name></expr><operator pos:line="19" pos:column="46">,<pos:position pos:line="19" pos:column="47"/></operator> <expr><name pos:line="19" pos:column="48">lr<pos:position pos:line="19" pos:column="50"/></name> <operator pos:line="19" pos:column="51">=<pos:position pos:line="19" pos:column="52"/></operator> <name><name pos:line="19" pos:column="53">lr<pos:position pos:line="19" pos:column="55"/></name><operator pos:line="19" pos:column="55">-&gt;<pos:position pos:line="19" pos:column="60"/></operator><name pos:line="19" pos:column="57">next<pos:position pos:line="19" pos:column="61"/></name></name></expr></incr>)<pos:position pos:line="19" pos:column="62"/></control> <block pos:line="19" pos:column="63">{
        <if pos:line="20" pos:column="9">if <condition pos:line="20" pos:column="12">(<expr><name><name pos:line="20" pos:column="13">lr<pos:position pos:line="20" pos:column="15"/></name><operator pos:line="20" pos:column="15">-&gt;<pos:position pos:line="20" pos:column="20"/></operator><name pos:line="20" pos:column="17">active<pos:position pos:line="20" pos:column="23"/></name></name></expr>)<pos:position pos:line="20" pos:column="24"/></condition><then pos:line="20" pos:column="24"> <block pos:line="20" pos:column="25">{
            <expr_stmt><expr><operator pos:line="21" pos:column="13">++<pos:position pos:line="21" pos:column="15"/></operator><name pos:line="21" pos:column="15">num_open<pos:position pos:line="21" pos:column="23"/></name></expr>;<pos:position pos:line="21" pos:column="24"/></expr_stmt>
        }<pos:position pos:line="22" pos:column="10"/></block></then>
        <else pos:line="23" pos:column="9">else <block pos:line="23" pos:column="14">{
<cpp:if pos:line="24" pos:column="1">#<cpp:directive pos:line="24" pos:column="2">if<pos:position pos:line="24" pos:column="4"/></cpp:directive> <expr><name pos:line="24" pos:column="5">APR_HAVE_IPV6<pos:position pos:line="24" pos:column="18"/></name></expr></cpp:if>
            <decl_stmt><decl><type><name pos:line="25" pos:column="13">ap_listen_rec<pos:position pos:line="25" pos:column="26"/></name> <modifier pos:line="25" pos:column="27">*<pos:position pos:line="25" pos:column="28"/></modifier></type><name pos:line="25" pos:column="28">cur<pos:position pos:line="25" pos:column="31"/></name></decl>;<pos:position pos:line="25" pos:column="32"/></decl_stmt>
            <decl_stmt><decl><type><name pos:line="26" pos:column="13">int<pos:position pos:line="26" pos:column="16"/></name></type> <name pos:line="26" pos:column="17">v6only_setting<pos:position pos:line="26" pos:column="31"/></name></decl>;<pos:position pos:line="26" pos:column="32"/></decl_stmt>
            <decl_stmt><decl><type><name pos:line="27" pos:column="13">int<pos:position pos:line="27" pos:column="16"/></name></type> <name pos:line="27" pos:column="17">skip<pos:position pos:line="27" pos:column="21"/></name> <init pos:line="27" pos:column="22">= <expr><literal type="number" pos:line="27" pos:column="24">0<pos:position pos:line="27" pos:column="25"/></literal></expr></init></decl>;<pos:position pos:line="27" pos:column="26"/></decl_stmt>

            <comment type="block" pos:line="29" pos:column="13">/* If we have the unspecified IPv4 address (0.0.0.0) and
             * the unspecified IPv6 address (::) is next, we need to
             * swap the order of these in the list. We always try to
             * bind to IPv6 first, then IPv4, since an IPv6 socket
             * might be able to receive IPv4 packets if V6ONLY is not
             * enabled, but never the other way around.
             * Note: In some configurations, the unspecified IPv6 address
             * could be even later in the list.  This logic only corrects
             * the situation where it is next in the list, such as when
             * apr_sockaddr_info_get() returns an IPv4 and an IPv6 address,
             * in that order.
             */</comment>
            <if pos:line="41" pos:column="13">if <condition pos:line="41" pos:column="16">(<expr><name><name pos:line="41" pos:column="17">lr<pos:position pos:line="41" pos:column="19"/></name><operator pos:line="41" pos:column="19">-&gt;<pos:position pos:line="41" pos:column="24"/></operator><name pos:line="41" pos:column="21">next<pos:position pos:line="41" pos:column="25"/></name></name> <operator pos:line="41" pos:column="26">!=<pos:position pos:line="41" pos:column="28"/></operator> <name pos:line="41" pos:column="29">NULL<pos:position pos:line="41" pos:column="33"/></name>
                <operator pos:line="42" pos:column="17">&amp;&amp;<pos:position pos:line="42" pos:column="27"/></operator> <call><name pos:line="42" pos:column="20">IS_INADDR_ANY<pos:position pos:line="42" pos:column="33"/></name><argument_list pos:line="42" pos:column="33">(<argument><expr><name><name pos:line="42" pos:column="34">lr<pos:position pos:line="42" pos:column="36"/></name><operator pos:line="42" pos:column="36">-&gt;<pos:position pos:line="42" pos:column="41"/></operator><name pos:line="42" pos:column="38">bind_addr<pos:position pos:line="42" pos:column="47"/></name></name></expr></argument>)<pos:position pos:line="42" pos:column="48"/></argument_list></call>
                <operator pos:line="43" pos:column="17">&amp;&amp;<pos:position pos:line="43" pos:column="27"/></operator> <name><name pos:line="43" pos:column="20">lr<pos:position pos:line="43" pos:column="22"/></name><operator pos:line="43" pos:column="22">-&gt;<pos:position pos:line="43" pos:column="27"/></operator><name pos:line="43" pos:column="24">bind_addr<pos:position pos:line="43" pos:column="33"/></name><operator pos:line="43" pos:column="33">-&gt;<pos:position pos:line="43" pos:column="38"/></operator><name pos:line="43" pos:column="35">port<pos:position pos:line="43" pos:column="39"/></name></name> <operator pos:line="43" pos:column="40">==<pos:position pos:line="43" pos:column="42"/></operator> <name><name pos:line="43" pos:column="43">lr<pos:position pos:line="43" pos:column="45"/></name><operator pos:line="43" pos:column="45">-&gt;<pos:position pos:line="43" pos:column="50"/></operator><name pos:line="43" pos:column="47">next<pos:position pos:line="43" pos:column="51"/></name><operator pos:line="43" pos:column="51">-&gt;<pos:position pos:line="43" pos:column="56"/></operator><name pos:line="43" pos:column="53">bind_addr<pos:position pos:line="43" pos:column="62"/></name><operator pos:line="43" pos:column="62">-&gt;<pos:position pos:line="43" pos:column="67"/></operator><name pos:line="43" pos:column="64">port<pos:position pos:line="43" pos:column="68"/></name></name>
                <operator pos:line="44" pos:column="17">&amp;&amp;<pos:position pos:line="44" pos:column="27"/></operator> <call><name pos:line="44" pos:column="20">IS_IN6ADDR_ANY<pos:position pos:line="44" pos:column="34"/></name><argument_list pos:line="44" pos:column="34">(<argument><expr><name><name pos:line="44" pos:column="35">lr<pos:position pos:line="44" pos:column="37"/></name><operator pos:line="44" pos:column="37">-&gt;<pos:position pos:line="44" pos:column="42"/></operator><name pos:line="44" pos:column="39">next<pos:position pos:line="44" pos:column="43"/></name><operator pos:line="44" pos:column="43">-&gt;<pos:position pos:line="44" pos:column="48"/></operator><name pos:line="44" pos:column="45">bind_addr<pos:position pos:line="44" pos:column="54"/></name></name></expr></argument>)<pos:position pos:line="44" pos:column="55"/></argument_list></call></expr>)<pos:position pos:line="44" pos:column="56"/></condition><then pos:line="44" pos:column="56"> <block pos:line="44" pos:column="57">{
                <comment type="block" pos:line="45" pos:column="17">/* Exchange lr and lr-&gt;next */</comment>
                <expr_stmt><expr><name pos:line="46" pos:column="17">next<pos:position pos:line="46" pos:column="21"/></name> <operator pos:line="46" pos:column="22">=<pos:position pos:line="46" pos:column="23"/></operator> <name><name pos:line="46" pos:column="24">lr<pos:position pos:line="46" pos:column="26"/></name><operator pos:line="46" pos:column="26">-&gt;<pos:position pos:line="46" pos:column="31"/></operator><name pos:line="46" pos:column="28">next<pos:position pos:line="46" pos:column="32"/></name></name></expr>;<pos:position pos:line="46" pos:column="33"/></expr_stmt>
                <expr_stmt><expr><name><name pos:line="47" pos:column="17">lr<pos:position pos:line="47" pos:column="19"/></name><operator pos:line="47" pos:column="19">-&gt;<pos:position pos:line="47" pos:column="24"/></operator><name pos:line="47" pos:column="21">next<pos:position pos:line="47" pos:column="25"/></name></name> <operator pos:line="47" pos:column="26">=<pos:position pos:line="47" pos:column="27"/></operator> <name><name pos:line="47" pos:column="28">next<pos:position pos:line="47" pos:column="32"/></name><operator pos:line="47" pos:column="32">-&gt;<pos:position pos:line="47" pos:column="37"/></operator><name pos:line="47" pos:column="34">next<pos:position pos:line="47" pos:column="38"/></name></name></expr>;<pos:position pos:line="47" pos:column="39"/></expr_stmt>
                <expr_stmt><expr><name><name pos:line="48" pos:column="17">next<pos:position pos:line="48" pos:column="21"/></name><operator pos:line="48" pos:column="21">-&gt;<pos:position pos:line="48" pos:column="26"/></operator><name pos:line="48" pos:column="23">next<pos:position pos:line="48" pos:column="27"/></name></name> <operator pos:line="48" pos:column="28">=<pos:position pos:line="48" pos:column="29"/></operator> <name pos:line="48" pos:column="30">lr<pos:position pos:line="48" pos:column="32"/></name></expr>;<pos:position pos:line="48" pos:column="33"/></expr_stmt>
                <if pos:line="49" pos:column="17">if <condition pos:line="49" pos:column="20">(<expr><name pos:line="49" pos:column="21">previous<pos:position pos:line="49" pos:column="29"/></name></expr>)<pos:position pos:line="49" pos:column="30"/></condition><then pos:line="49" pos:column="30"> <block pos:line="49" pos:column="31">{
                    <expr_stmt><expr><name><name pos:line="50" pos:column="21">previous<pos:position pos:line="50" pos:column="29"/></name><operator pos:line="50" pos:column="29">-&gt;<pos:position pos:line="50" pos:column="34"/></operator><name pos:line="50" pos:column="31">next<pos:position pos:line="50" pos:column="35"/></name></name> <operator pos:line="50" pos:column="36">=<pos:position pos:line="50" pos:column="37"/></operator> <name pos:line="50" pos:column="38">next<pos:position pos:line="50" pos:column="42"/></name></expr>;<pos:position pos:line="50" pos:column="43"/></expr_stmt>
                }<pos:position pos:line="51" pos:column="18"/></block></then>
                <else pos:line="52" pos:column="17">else <block pos:line="52" pos:column="22">{
                    <expr_stmt><expr><name pos:line="53" pos:column="21">ap_listeners<pos:position pos:line="53" pos:column="33"/></name> <operator pos:line="53" pos:column="34">=<pos:position pos:line="53" pos:column="35"/></operator> <name pos:line="53" pos:column="36">next<pos:position pos:line="53" pos:column="40"/></name></expr>;<pos:position pos:line="53" pos:column="41"/></expr_stmt>
                }<pos:position pos:line="54" pos:column="18"/></block></else></if>
                <expr_stmt><expr><name pos:line="55" pos:column="17">lr<pos:position pos:line="55" pos:column="19"/></name> <operator pos:line="55" pos:column="20">=<pos:position pos:line="55" pos:column="21"/></operator> <name pos:line="55" pos:column="22">next<pos:position pos:line="55" pos:column="26"/></name></expr>;<pos:position pos:line="55" pos:column="27"/></expr_stmt>
            }<pos:position pos:line="56" pos:column="14"/></block></then></if>

            <comment type="block" pos:line="58" pos:column="13">/* If we are trying to bind to 0.0.0.0 and a previous listener
             * was :: on the same port and in turn that socket does not have
             * the IPV6_V6ONLY flag set; we must skip the current attempt to
             * listen (which would generate an error). IPv4 will be handled
             * on the established IPv6 socket.
             */</comment>
            <if pos:line="64" pos:column="13">if <condition pos:line="64" pos:column="16">(<expr><call><name pos:line="64" pos:column="17">IS_INADDR_ANY<pos:position pos:line="64" pos:column="30"/></name><argument_list pos:line="64" pos:column="30">(<argument><expr><name><name pos:line="64" pos:column="31">lr<pos:position pos:line="64" pos:column="33"/></name><operator pos:line="64" pos:column="33">-&gt;<pos:position pos:line="64" pos:column="38"/></operator><name pos:line="64" pos:column="35">bind_addr<pos:position pos:line="64" pos:column="44"/></name></name></expr></argument>)<pos:position pos:line="64" pos:column="45"/></argument_list></call></expr>)<pos:position pos:line="64" pos:column="46"/></condition><then pos:line="64" pos:column="46"> <block pos:line="64" pos:column="47">{
                <for pos:line="65" pos:column="17">for <control pos:line="65" pos:column="21">(<init><expr><name pos:line="65" pos:column="22">cur<pos:position pos:line="65" pos:column="25"/></name> <operator pos:line="65" pos:column="26">=<pos:position pos:line="65" pos:column="27"/></operator> <name pos:line="65" pos:column="28">ap_listeners<pos:position pos:line="65" pos:column="40"/></name></expr>;<pos:position pos:line="65" pos:column="41"/></init> <condition><expr><name pos:line="65" pos:column="42">cur<pos:position pos:line="65" pos:column="45"/></name> <operator pos:line="65" pos:column="46">!=<pos:position pos:line="65" pos:column="48"/></operator> <name pos:line="65" pos:column="49">lr<pos:position pos:line="65" pos:column="51"/></name></expr>;<pos:position pos:line="65" pos:column="52"/></condition> <incr><expr><name pos:line="65" pos:column="53">cur<pos:position pos:line="65" pos:column="56"/></name> <operator pos:line="65" pos:column="57">=<pos:position pos:line="65" pos:column="58"/></operator> <name><name pos:line="65" pos:column="59">cur<pos:position pos:line="65" pos:column="62"/></name><operator pos:line="65" pos:column="62">-&gt;<pos:position pos:line="65" pos:column="67"/></operator><name pos:line="65" pos:column="64">next<pos:position pos:line="65" pos:column="68"/></name></name></expr></incr>)<pos:position pos:line="65" pos:column="69"/></control> <block pos:line="65" pos:column="70">{
                    <if pos:line="66" pos:column="21">if <condition pos:line="66" pos:column="24">(<expr><name><name pos:line="66" pos:column="25">lr<pos:position pos:line="66" pos:column="27"/></name><operator pos:line="66" pos:column="27">-&gt;<pos:position pos:line="66" pos:column="32"/></operator><name pos:line="66" pos:column="29">bind_addr<pos:position pos:line="66" pos:column="38"/></name><operator pos:line="66" pos:column="38">-&gt;<pos:position pos:line="66" pos:column="43"/></operator><name pos:line="66" pos:column="40">port<pos:position pos:line="66" pos:column="44"/></name></name> <operator pos:line="66" pos:column="45">==<pos:position pos:line="66" pos:column="47"/></operator> <name><name pos:line="66" pos:column="48">cur<pos:position pos:line="66" pos:column="51"/></name><operator pos:line="66" pos:column="51">-&gt;<pos:position pos:line="66" pos:column="56"/></operator><name pos:line="66" pos:column="53">bind_addr<pos:position pos:line="66" pos:column="62"/></name><operator pos:line="66" pos:column="62">-&gt;<pos:position pos:line="66" pos:column="67"/></operator><name pos:line="66" pos:column="64">port<pos:position pos:line="66" pos:column="68"/></name></name>
                        <operator pos:line="67" pos:column="25">&amp;&amp;<pos:position pos:line="67" pos:column="35"/></operator> <call><name pos:line="67" pos:column="28">IS_IN6ADDR_ANY<pos:position pos:line="67" pos:column="42"/></name><argument_list pos:line="67" pos:column="42">(<argument><expr><name><name pos:line="67" pos:column="43">cur<pos:position pos:line="67" pos:column="46"/></name><operator pos:line="67" pos:column="46">-&gt;<pos:position pos:line="67" pos:column="51"/></operator><name pos:line="67" pos:column="48">bind_addr<pos:position pos:line="67" pos:column="57"/></name></name></expr></argument>)<pos:position pos:line="67" pos:column="58"/></argument_list></call>
                        <operator pos:line="68" pos:column="25">&amp;&amp;<pos:position pos:line="68" pos:column="35"/></operator> <call><name pos:line="68" pos:column="28">apr_socket_opt_get<pos:position pos:line="68" pos:column="46"/></name><argument_list pos:line="68" pos:column="46">(<argument><expr><name><name pos:line="68" pos:column="47">cur<pos:position pos:line="68" pos:column="50"/></name><operator pos:line="68" pos:column="50">-&gt;<pos:position pos:line="68" pos:column="55"/></operator><name pos:line="68" pos:column="52">sd<pos:position pos:line="68" pos:column="54"/></name></name></expr></argument>, <argument><expr><name pos:line="68" pos:column="56">APR_IPV6_V6ONLY<pos:position pos:line="68" pos:column="71"/></name></expr></argument>,
                                              <argument><expr><operator pos:line="69" pos:column="47">&amp;<pos:position pos:line="69" pos:column="52"/></operator><name pos:line="69" pos:column="48">v6only_setting<pos:position pos:line="69" pos:column="62"/></name></expr></argument>)<pos:position pos:line="69" pos:column="63"/></argument_list></call> <operator pos:line="69" pos:column="64">==<pos:position pos:line="69" pos:column="66"/></operator> <name pos:line="69" pos:column="67">APR_SUCCESS<pos:position pos:line="69" pos:column="78"/></name>
                        <operator pos:line="70" pos:column="25">&amp;&amp;<pos:position pos:line="70" pos:column="35"/></operator> <name pos:line="70" pos:column="28">v6only_setting<pos:position pos:line="70" pos:column="42"/></name> <operator pos:line="70" pos:column="43">==<pos:position pos:line="70" pos:column="45"/></operator> <literal type="number" pos:line="70" pos:column="46">0<pos:position pos:line="70" pos:column="47"/></literal></expr>)<pos:position pos:line="70" pos:column="48"/></condition><then pos:line="70" pos:column="48"> <block pos:line="70" pos:column="49">{

                        <comment type="block" pos:line="72" pos:column="25">/* Remove the current listener from the list */</comment>
                        <expr_stmt><expr><name><name pos:line="73" pos:column="25">previous<pos:position pos:line="73" pos:column="33"/></name><operator pos:line="73" pos:column="33">-&gt;<pos:position pos:line="73" pos:column="38"/></operator><name pos:line="73" pos:column="35">next<pos:position pos:line="73" pos:column="39"/></name></name> <operator pos:line="73" pos:column="40">=<pos:position pos:line="73" pos:column="41"/></operator> <name><name pos:line="73" pos:column="42">lr<pos:position pos:line="73" pos:column="44"/></name><operator pos:line="73" pos:column="44">-&gt;<pos:position pos:line="73" pos:column="49"/></operator><name pos:line="73" pos:column="46">next<pos:position pos:line="73" pos:column="50"/></name></name></expr>;<pos:position pos:line="73" pos:column="51"/></expr_stmt>
                        <expr_stmt><expr><name pos:line="74" pos:column="25">lr<pos:position pos:line="74" pos:column="27"/></name> <operator pos:line="74" pos:column="28">=<pos:position pos:line="74" pos:column="29"/></operator> <name pos:line="74" pos:column="30">previous<pos:position pos:line="74" pos:column="38"/></name></expr>;<pos:position pos:line="74" pos:column="39"/></expr_stmt> <comment type="block" pos:line="74" pos:column="40">/* maintain current value of previous after
                                        * post-loop expression is evaluated
                                        */</comment>
                        <expr_stmt><expr><name pos:line="77" pos:column="25">skip<pos:position pos:line="77" pos:column="29"/></name> <operator pos:line="77" pos:column="30">=<pos:position pos:line="77" pos:column="31"/></operator> <literal type="number" pos:line="77" pos:column="32">1<pos:position pos:line="77" pos:column="33"/></literal></expr>;<pos:position pos:line="77" pos:column="34"/></expr_stmt>
                        <break pos:line="78" pos:column="25">break;<pos:position pos:line="78" pos:column="31"/></break>
                    }<pos:position pos:line="79" pos:column="22"/></block></then></if>
                }<pos:position pos:line="80" pos:column="18"/></block></for>
                <if pos:line="81" pos:column="17">if <condition pos:line="81" pos:column="20">(<expr><name pos:line="81" pos:column="21">skip<pos:position pos:line="81" pos:column="25"/></name></expr>)<pos:position pos:line="81" pos:column="26"/></condition><then pos:line="81" pos:column="26"> <block pos:line="81" pos:column="27">{
                    <continue pos:line="82" pos:column="21">continue;<pos:position pos:line="82" pos:column="30"/></continue>
                }<pos:position pos:line="83" pos:column="18"/></block></then></if>
            }<pos:position pos:line="84" pos:column="14"/></block></then></if>
<cpp:endif pos:line="85" pos:column="1">#<cpp:directive pos:line="85" pos:column="2">endif<pos:position pos:line="85" pos:column="7"/></cpp:directive></cpp:endif>
            <if pos:line="86" pos:column="13">if <condition pos:line="86" pos:column="16">(<expr><call><name pos:line="86" pos:column="17">make_sock<pos:position pos:line="86" pos:column="26"/></name><argument_list pos:line="86" pos:column="26">(<argument><expr><name pos:line="86" pos:column="27">pool<pos:position pos:line="86" pos:column="31"/></name></expr></argument>, <argument><expr><name pos:line="86" pos:column="33">lr<pos:position pos:line="86" pos:column="35"/></name></expr></argument>)<pos:position pos:line="86" pos:column="36"/></argument_list></call> <operator pos:line="86" pos:column="37">==<pos:position pos:line="86" pos:column="39"/></operator> <name pos:line="86" pos:column="40">APR_SUCCESS<pos:position pos:line="86" pos:column="51"/></name></expr>)<pos:position pos:line="86" pos:column="52"/></condition><then pos:line="86" pos:column="52"> <block pos:line="86" pos:column="53">{
                <expr_stmt><expr><operator pos:line="87" pos:column="17">++<pos:position pos:line="87" pos:column="19"/></operator><name pos:line="87" pos:column="19">num_open<pos:position pos:line="87" pos:column="27"/></name></expr>;<pos:position pos:line="87" pos:column="28"/></expr_stmt>
            }<pos:position pos:line="88" pos:column="14"/></block></then>
            <else pos:line="89" pos:column="13">else <block pos:line="89" pos:column="18">{
<cpp:if pos:line="90" pos:column="1">#<cpp:directive pos:line="90" pos:column="2">if<pos:position pos:line="90" pos:column="4"/></cpp:directive> <expr><name pos:line="90" pos:column="5">APR_HAVE_IPV6<pos:position pos:line="90" pos:column="18"/></name></expr></cpp:if>
                <comment type="block" pos:line="91" pos:column="17">/* If we tried to bind to ::, and the next listener is
                 * on 0.0.0.0 with the same port, don't give a fatal
                 * error. The user will still get a warning from make_sock
                 * though.
                 */</comment>
                <if pos:line="96" pos:column="17">if <condition pos:line="96" pos:column="20">(<expr><name><name pos:line="96" pos:column="21">lr<pos:position pos:line="96" pos:column="23"/></name><operator pos:line="96" pos:column="23">-&gt;<pos:position pos:line="96" pos:column="28"/></operator><name pos:line="96" pos:column="25">next<pos:position pos:line="96" pos:column="29"/></name></name> <operator pos:line="96" pos:column="30">!=<pos:position pos:line="96" pos:column="32"/></operator> <name pos:line="96" pos:column="33">NULL<pos:position pos:line="96" pos:column="37"/></name>
                    <operator pos:line="97" pos:column="21">&amp;&amp;<pos:position pos:line="97" pos:column="31"/></operator> <call><name pos:line="97" pos:column="24">IS_IN6ADDR_ANY<pos:position pos:line="97" pos:column="38"/></name><argument_list pos:line="97" pos:column="38">(<argument><expr><name><name pos:line="97" pos:column="39">lr<pos:position pos:line="97" pos:column="41"/></name><operator pos:line="97" pos:column="41">-&gt;<pos:position pos:line="97" pos:column="46"/></operator><name pos:line="97" pos:column="43">bind_addr<pos:position pos:line="97" pos:column="52"/></name></name></expr></argument>)<pos:position pos:line="97" pos:column="53"/></argument_list></call>
                    <operator pos:line="98" pos:column="21">&amp;&amp;<pos:position pos:line="98" pos:column="31"/></operator> <name><name pos:line="98" pos:column="24">lr<pos:position pos:line="98" pos:column="26"/></name><operator pos:line="98" pos:column="26">-&gt;<pos:position pos:line="98" pos:column="31"/></operator><name pos:line="98" pos:column="28">bind_addr<pos:position pos:line="98" pos:column="37"/></name><operator pos:line="98" pos:column="37">-&gt;<pos:position pos:line="98" pos:column="42"/></operator><name pos:line="98" pos:column="39">port<pos:position pos:line="98" pos:column="43"/></name></name> <operator pos:line="98" pos:column="44">==<pos:position pos:line="98" pos:column="46"/></operator> <name><name pos:line="98" pos:column="47">lr<pos:position pos:line="98" pos:column="49"/></name><operator pos:line="98" pos:column="49">-&gt;<pos:position pos:line="98" pos:column="54"/></operator><name pos:line="98" pos:column="51">next<pos:position pos:line="98" pos:column="55"/></name><operator pos:line="98" pos:column="55">-&gt;<pos:position pos:line="98" pos:column="60"/></operator><name pos:line="98" pos:column="57">bind_addr<pos:position pos:line="98" pos:column="66"/></name><operator pos:line="98" pos:column="66">-&gt;<pos:position pos:line="98" pos:column="71"/></operator><name pos:line="98" pos:column="68">port<pos:position pos:line="98" pos:column="72"/></name></name>
                    <operator pos:line="99" pos:column="21">&amp;&amp;<pos:position pos:line="99" pos:column="31"/></operator> <call><name pos:line="99" pos:column="24">IS_INADDR_ANY<pos:position pos:line="99" pos:column="37"/></name><argument_list pos:line="99" pos:column="37">(<argument><expr><name><name pos:line="99" pos:column="38">lr<pos:position pos:line="99" pos:column="40"/></name><operator pos:line="99" pos:column="40">-&gt;<pos:position pos:line="99" pos:column="45"/></operator><name pos:line="99" pos:column="42">next<pos:position pos:line="99" pos:column="46"/></name><operator pos:line="99" pos:column="46">-&gt;<pos:position pos:line="99" pos:column="51"/></operator><name pos:line="99" pos:column="48">bind_addr<pos:position pos:line="99" pos:column="57"/></name></name></expr></argument>)<pos:position pos:line="99" pos:column="58"/></argument_list></call></expr>)<pos:position pos:line="99" pos:column="59"/></condition><then pos:line="99" pos:column="59"> <block pos:line="99" pos:column="60">{

                    <comment type="block" pos:line="101" pos:column="21">/* Remove the current listener from the list */</comment>
                    <if pos:line="102" pos:column="21">if <condition pos:line="102" pos:column="24">(<expr><name pos:line="102" pos:column="25">previous<pos:position pos:line="102" pos:column="33"/></name></expr>)<pos:position pos:line="102" pos:column="34"/></condition><then pos:line="102" pos:column="34"> <block pos:line="102" pos:column="35">{
                        <expr_stmt><expr><name><name pos:line="103" pos:column="25">previous<pos:position pos:line="103" pos:column="33"/></name><operator pos:line="103" pos:column="33">-&gt;<pos:position pos:line="103" pos:column="38"/></operator><name pos:line="103" pos:column="35">next<pos:position pos:line="103" pos:column="39"/></name></name> <operator pos:line="103" pos:column="40">=<pos:position pos:line="103" pos:column="41"/></operator> <name><name pos:line="103" pos:column="42">lr<pos:position pos:line="103" pos:column="44"/></name><operator pos:line="103" pos:column="44">-&gt;<pos:position pos:line="103" pos:column="49"/></operator><name pos:line="103" pos:column="46">next<pos:position pos:line="103" pos:column="50"/></name></name></expr>;<pos:position pos:line="103" pos:column="51"/></expr_stmt>
                    }<pos:position pos:line="104" pos:column="22"/></block></then>
                    <else pos:line="105" pos:column="21">else <block pos:line="105" pos:column="26">{
                        <expr_stmt><expr><name pos:line="106" pos:column="25">ap_listeners<pos:position pos:line="106" pos:column="37"/></name> <operator pos:line="106" pos:column="38">=<pos:position pos:line="106" pos:column="39"/></operator> <name><name pos:line="106" pos:column="40">lr<pos:position pos:line="106" pos:column="42"/></name><operator pos:line="106" pos:column="42">-&gt;<pos:position pos:line="106" pos:column="47"/></operator><name pos:line="106" pos:column="44">next<pos:position pos:line="106" pos:column="48"/></name></name></expr>;<pos:position pos:line="106" pos:column="49"/></expr_stmt>
                    }<pos:position pos:line="107" pos:column="22"/></block></else></if>

                    <comment type="block" pos:line="109" pos:column="21">/* Although we've removed ourselves from the list,
                     * we need to make sure that the next iteration won't
                     * consider "previous" a working IPv6 '::' socket.
                     * Changing the family is enough to make sure the
                     * conditions before make_sock() fail.
                     */</comment>
                    <expr_stmt><expr><name><name pos:line="115" pos:column="21">lr<pos:position pos:line="115" pos:column="23"/></name><operator pos:line="115" pos:column="23">-&gt;<pos:position pos:line="115" pos:column="28"/></operator><name pos:line="115" pos:column="25">bind_addr<pos:position pos:line="115" pos:column="34"/></name><operator pos:line="115" pos:column="34">-&gt;<pos:position pos:line="115" pos:column="39"/></operator><name pos:line="115" pos:column="36">family<pos:position pos:line="115" pos:column="42"/></name></name> <operator pos:line="115" pos:column="43">=<pos:position pos:line="115" pos:column="44"/></operator> <name pos:line="115" pos:column="45">AF_INET<pos:position pos:line="115" pos:column="52"/></name></expr>;<pos:position pos:line="115" pos:column="53"/></expr_stmt>

                    <continue pos:line="117" pos:column="21">continue;<pos:position pos:line="117" pos:column="30"/></continue>
                }<pos:position pos:line="118" pos:column="18"/></block></then></if>
<cpp:endif pos:line="119" pos:column="1">#<cpp:directive pos:line="119" pos:column="2">endif<pos:position pos:line="119" pos:column="7"/></cpp:directive></cpp:endif>
                <comment type="block" pos:line="120" pos:column="17">/* fatal error */</comment>
                <return pos:line="121" pos:column="17">return <expr><operator pos:line="121" pos:column="24">-<pos:position pos:line="121" pos:column="25"/></operator><literal type="number" pos:line="121" pos:column="25">1<pos:position pos:line="121" pos:column="26"/></literal></expr>;<pos:position pos:line="121" pos:column="27"/></return>
            }<pos:position pos:line="122" pos:column="14"/></block></else></if>
        }<pos:position pos:line="123" pos:column="10"/></block></else></if>
    }<pos:position pos:line="124" pos:column="6"/></block></for>

    <comment type="block" pos:line="126" pos:column="5">/* close the old listeners */</comment>
    <for pos:line="127" pos:column="5">for <control pos:line="127" pos:column="9">(<init><expr><name pos:line="127" pos:column="10">lr<pos:position pos:line="127" pos:column="12"/></name> <operator pos:line="127" pos:column="13">=<pos:position pos:line="127" pos:column="14"/></operator> <name pos:line="127" pos:column="15">old_listeners<pos:position pos:line="127" pos:column="28"/></name></expr>;<pos:position pos:line="127" pos:column="29"/></init> <condition><expr><name pos:line="127" pos:column="30">lr<pos:position pos:line="127" pos:column="32"/></name></expr>;<pos:position pos:line="127" pos:column="33"/></condition> <incr><expr><name pos:line="127" pos:column="34">lr<pos:position pos:line="127" pos:column="36"/></name> <operator pos:line="127" pos:column="37">=<pos:position pos:line="127" pos:column="38"/></operator> <name pos:line="127" pos:column="39">next<pos:position pos:line="127" pos:column="43"/></name></expr></incr>)<pos:position pos:line="127" pos:column="44"/></control> <block pos:line="127" pos:column="45">{
        <expr_stmt><expr><call><name pos:line="128" pos:column="9">apr_socket_close<pos:position pos:line="128" pos:column="25"/></name><argument_list pos:line="128" pos:column="25">(<argument><expr><name><name pos:line="128" pos:column="26">lr<pos:position pos:line="128" pos:column="28"/></name><operator pos:line="128" pos:column="28">-&gt;<pos:position pos:line="128" pos:column="33"/></operator><name pos:line="128" pos:column="30">sd<pos:position pos:line="128" pos:column="32"/></name></name></expr></argument>)<pos:position pos:line="128" pos:column="33"/></argument_list></call></expr>;<pos:position pos:line="128" pos:column="34"/></expr_stmt>
        <expr_stmt><expr><name><name pos:line="129" pos:column="9">lr<pos:position pos:line="129" pos:column="11"/></name><operator pos:line="129" pos:column="11">-&gt;<pos:position pos:line="129" pos:column="16"/></operator><name pos:line="129" pos:column="13">active<pos:position pos:line="129" pos:column="19"/></name></name> <operator pos:line="129" pos:column="20">=<pos:position pos:line="129" pos:column="21"/></operator> <literal type="number" pos:line="129" pos:column="22">0<pos:position pos:line="129" pos:column="23"/></literal></expr>;<pos:position pos:line="129" pos:column="24"/></expr_stmt>
        <expr_stmt><expr><name pos:line="130" pos:column="9">next<pos:position pos:line="130" pos:column="13"/></name> <operator pos:line="130" pos:column="14">=<pos:position pos:line="130" pos:column="15"/></operator> <name><name pos:line="130" pos:column="16">lr<pos:position pos:line="130" pos:column="18"/></name><operator pos:line="130" pos:column="18">-&gt;<pos:position pos:line="130" pos:column="23"/></operator><name pos:line="130" pos:column="20">next<pos:position pos:line="130" pos:column="24"/></name></name></expr>;<pos:position pos:line="130" pos:column="25"/></expr_stmt>
    }<pos:position pos:line="131" pos:column="6"/></block></for>
    <expr_stmt><expr><name pos:line="132" pos:column="5">old_listeners<pos:position pos:line="132" pos:column="18"/></name> <operator pos:line="132" pos:column="19">=<pos:position pos:line="132" pos:column="20"/></operator> <name pos:line="132" pos:column="21">NULL<pos:position pos:line="132" pos:column="25"/></name></expr>;<pos:position pos:line="132" pos:column="26"/></expr_stmt>

<cpp:if pos:line="134" pos:column="1">#<cpp:directive pos:line="134" pos:column="2">if<pos:position pos:line="134" pos:column="4"/></cpp:directive> <expr><name pos:line="134" pos:column="5">AP_NONBLOCK_WHEN_MULTI_LISTEN<pos:position pos:line="134" pos:column="34"/></name></expr></cpp:if>
    <comment type="block" pos:line="135" pos:column="5">/* if multiple listening sockets, make them non-blocking so that
     * if select()/poll() reports readability for a reset connection that
     * is already forgotten about by the time we call accept, we won't
     * be hung until another connection arrives on that port
     */</comment>
    <expr_stmt><expr><name pos:line="140" pos:column="5">use_nonblock<pos:position pos:line="140" pos:column="17"/></name> <operator pos:line="140" pos:column="18">=<pos:position pos:line="140" pos:column="19"/></operator> <operator pos:line="140" pos:column="20">(<pos:position pos:line="140" pos:column="21"/></operator><name pos:line="140" pos:column="21">ap_listeners<pos:position pos:line="140" pos:column="33"/></name> <operator pos:line="140" pos:column="34">&amp;&amp;<pos:position pos:line="140" pos:column="44"/></operator> <name><name pos:line="140" pos:column="37">ap_listeners<pos:position pos:line="140" pos:column="49"/></name><operator pos:line="140" pos:column="49">-&gt;<pos:position pos:line="140" pos:column="54"/></operator><name pos:line="140" pos:column="51">next<pos:position pos:line="140" pos:column="55"/></name></name><operator pos:line="140" pos:column="55">)<pos:position pos:line="140" pos:column="56"/></operator></expr>;<pos:position pos:line="140" pos:column="57"/></expr_stmt>
    <for pos:line="141" pos:column="5">for <control pos:line="141" pos:column="9">(<init><expr><name pos:line="141" pos:column="10">lr<pos:position pos:line="141" pos:column="12"/></name> <operator pos:line="141" pos:column="13">=<pos:position pos:line="141" pos:column="14"/></operator> <name pos:line="141" pos:column="15">ap_listeners<pos:position pos:line="141" pos:column="27"/></name></expr>;<pos:position pos:line="141" pos:column="28"/></init> <condition><expr><name pos:line="141" pos:column="29">lr<pos:position pos:line="141" pos:column="31"/></name></expr>;<pos:position pos:line="141" pos:column="32"/></condition> <incr><expr><name pos:line="141" pos:column="33">lr<pos:position pos:line="141" pos:column="35"/></name> <operator pos:line="141" pos:column="36">=<pos:position pos:line="141" pos:column="37"/></operator> <name><name pos:line="141" pos:column="38">lr<pos:position pos:line="141" pos:column="40"/></name><operator pos:line="141" pos:column="40">-&gt;<pos:position pos:line="141" pos:column="45"/></operator><name pos:line="141" pos:column="42">next<pos:position pos:line="141" pos:column="46"/></name></name></expr></incr>)<pos:position pos:line="141" pos:column="47"/></control> <block pos:line="141" pos:column="48">{
        <decl_stmt><decl><type><name pos:line="142" pos:column="9">apr_status_t<pos:position pos:line="142" pos:column="21"/></name></type> <name pos:line="142" pos:column="22">status<pos:position pos:line="142" pos:column="28"/></name></decl>;<pos:position pos:line="142" pos:column="29"/></decl_stmt>

        <expr_stmt><expr><name pos:line="144" pos:column="9">status<pos:position pos:line="144" pos:column="15"/></name> <operator pos:line="144" pos:column="16">=<pos:position pos:line="144" pos:column="17"/></operator> <call><name pos:line="144" pos:column="18">apr_socket_opt_set<pos:position pos:line="144" pos:column="36"/></name><argument_list pos:line="144" pos:column="36">(<argument><expr><name><name pos:line="144" pos:column="37">lr<pos:position pos:line="144" pos:column="39"/></name><operator pos:line="144" pos:column="39">-&gt;<pos:position pos:line="144" pos:column="44"/></operator><name pos:line="144" pos:column="41">sd<pos:position pos:line="144" pos:column="43"/></name></name></expr></argument>, <argument><expr><name pos:line="144" pos:column="45">APR_SO_NONBLOCK<pos:position pos:line="144" pos:column="60"/></name></expr></argument>, <argument><expr><name pos:line="144" pos:column="62">use_nonblock<pos:position pos:line="144" pos:column="74"/></name></expr></argument>)<pos:position pos:line="144" pos:column="75"/></argument_list></call></expr>;<pos:position pos:line="144" pos:column="76"/></expr_stmt>
        <if pos:line="145" pos:column="9">if <condition pos:line="145" pos:column="12">(<expr><name pos:line="145" pos:column="13">status<pos:position pos:line="145" pos:column="19"/></name> <operator pos:line="145" pos:column="20">!=<pos:position pos:line="145" pos:column="22"/></operator> <name pos:line="145" pos:column="23">APR_SUCCESS<pos:position pos:line="145" pos:column="34"/></name></expr>)<pos:position pos:line="145" pos:column="35"/></condition><then pos:line="145" pos:column="35"> <block pos:line="145" pos:column="36">{
            <expr_stmt><expr><call><name pos:line="146" pos:column="13">ap_log_perror<pos:position pos:line="146" pos:column="26"/></name><argument_list pos:line="146" pos:column="26">(<argument><expr><name pos:line="146" pos:column="27">APLOG_MARK<pos:position pos:line="146" pos:column="37"/></name></expr></argument>, <argument><expr><name pos:line="146" pos:column="39">APLOG_STARTUP<pos:position pos:line="146" pos:column="52"/></name><operator pos:line="146" pos:column="52">|<pos:position pos:line="146" pos:column="53"/></operator><name pos:line="146" pos:column="53">APLOG_ERR<pos:position pos:line="146" pos:column="62"/></name></expr></argument>, <argument><expr><name pos:line="146" pos:column="64">status<pos:position pos:line="146" pos:column="70"/></name></expr></argument>, <argument><expr><name pos:line="146" pos:column="72">pool<pos:position pos:line="146" pos:column="76"/></name></expr></argument>,
                          <argument><expr><literal type="string" pos:line="147" pos:column="27">"unable to control socket non-blocking status"<pos:position pos:line="147" pos:column="73"/></literal></expr></argument>)<pos:position pos:line="147" pos:column="74"/></argument_list></call></expr>;<pos:position pos:line="147" pos:column="75"/></expr_stmt>
            <return pos:line="148" pos:column="13">return <expr><operator pos:line="148" pos:column="20">-<pos:position pos:line="148" pos:column="21"/></operator><literal type="number" pos:line="148" pos:column="21">1<pos:position pos:line="148" pos:column="22"/></literal></expr>;<pos:position pos:line="148" pos:column="23"/></return>
        }<pos:position pos:line="149" pos:column="10"/></block></then></if>
    }<pos:position pos:line="150" pos:column="6"/></block></for>
<cpp:endif pos:line="151" pos:column="1">#<cpp:directive pos:line="151" pos:column="2">endif<pos:position pos:line="151" pos:column="7"/></cpp:directive></cpp:endif> <comment type="block" pos:line="151" pos:column="8">/* AP_NONBLOCK_WHEN_MULTI_LISTEN */</comment>

    <comment type="block" pos:line="153" pos:column="5">/* we come through here on both passes of the open logs phase
     * only register the cleanup once... otherwise we try to close
     * listening sockets twice when cleaning up prior to exec
     */</comment>
    <expr_stmt><expr><call><name pos:line="157" pos:column="5">apr_pool_userdata_get<pos:position pos:line="157" pos:column="26"/></name><argument_list pos:line="157" pos:column="26">(<argument><expr><operator pos:line="157" pos:column="27">&amp;<pos:position pos:line="157" pos:column="32"/></operator><name pos:line="157" pos:column="28">data<pos:position pos:line="157" pos:column="32"/></name></expr></argument>, <argument><expr><name pos:line="157" pos:column="34">userdata_key<pos:position pos:line="157" pos:column="46"/></name></expr></argument>, <argument><expr><name pos:line="157" pos:column="48">pool<pos:position pos:line="157" pos:column="52"/></name></expr></argument>)<pos:position pos:line="157" pos:column="53"/></argument_list></call></expr>;<pos:position pos:line="157" pos:column="54"/></expr_stmt>
    <if pos:line="158" pos:column="5">if <condition pos:line="158" pos:column="8">(<expr><operator pos:line="158" pos:column="9">!<pos:position pos:line="158" pos:column="10"/></operator><name pos:line="158" pos:column="10">data<pos:position pos:line="158" pos:column="14"/></name></expr>)<pos:position pos:line="158" pos:column="15"/></condition><then pos:line="158" pos:column="15"> <block pos:line="158" pos:column="16">{
        <expr_stmt><expr><call><name pos:line="159" pos:column="9">apr_pool_userdata_set<pos:position pos:line="159" pos:column="30"/></name><argument_list pos:line="159" pos:column="30">(<argument><expr><operator pos:line="159" pos:column="31">(<pos:position pos:line="159" pos:column="32"/></operator><specifier pos:line="159" pos:column="32">const<pos:position pos:line="159" pos:column="37"/></specifier> <name pos:line="159" pos:column="38">void<pos:position pos:line="159" pos:column="42"/></name> <operator pos:line="159" pos:column="43">*<pos:position pos:line="159" pos:column="44"/></operator><operator pos:line="159" pos:column="44">)<pos:position pos:line="159" pos:column="45"/></operator><literal type="number" pos:line="159" pos:column="45">1<pos:position pos:line="159" pos:column="46"/></literal></expr></argument>, <argument><expr><name pos:line="159" pos:column="48">userdata_key<pos:position pos:line="159" pos:column="60"/></name></expr></argument>,
                              <argument><expr><name pos:line="160" pos:column="31">apr_pool_cleanup_null<pos:position pos:line="160" pos:column="52"/></name></expr></argument>, <argument><expr><name pos:line="160" pos:column="54">pool<pos:position pos:line="160" pos:column="58"/></name></expr></argument>)<pos:position pos:line="160" pos:column="59"/></argument_list></call></expr>;<pos:position pos:line="160" pos:column="60"/></expr_stmt>
        <expr_stmt><expr><call><name pos:line="161" pos:column="9">apr_pool_cleanup_register<pos:position pos:line="161" pos:column="34"/></name><argument_list pos:line="161" pos:column="34">(<argument><expr><name pos:line="161" pos:column="35">pool<pos:position pos:line="161" pos:column="39"/></name></expr></argument>, <argument><expr><name pos:line="161" pos:column="41">NULL<pos:position pos:line="161" pos:column="45"/></name></expr></argument>, <argument><expr><name pos:line="161" pos:column="47">apr_pool_cleanup_null<pos:position pos:line="161" pos:column="68"/></name></expr></argument>,
                                  <argument><expr><name pos:line="162" pos:column="35">close_listeners_on_exec<pos:position pos:line="162" pos:column="58"/></name></expr></argument>)<pos:position pos:line="162" pos:column="59"/></argument_list></call></expr>;<pos:position pos:line="162" pos:column="60"/></expr_stmt>
    }<pos:position pos:line="163" pos:column="6"/></block></then></if>

    <return pos:line="165" pos:column="5">return <expr><ternary><condition><expr><name pos:line="165" pos:column="12">num_open<pos:position pos:line="165" pos:column="20"/></name></expr> ?<pos:position pos:line="165" pos:column="22"/></condition><then pos:line="165" pos:column="22"> <expr><literal type="number" pos:line="165" pos:column="23">0<pos:position pos:line="165" pos:column="24"/></literal></expr> <pos:position pos:line="165" pos:column="25"/></then><else pos:line="165" pos:column="25">: <expr><operator pos:line="165" pos:column="27">-<pos:position pos:line="165" pos:column="28"/></operator><literal type="number" pos:line="165" pos:column="28">1<pos:position pos:line="165" pos:column="29"/></literal></expr></else></ternary></expr>;<pos:position pos:line="165" pos:column="30"/></return>
}<pos:position pos:line="166" pos:column="2"/></block></function></unit>

<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/httpd/gumtree/httpd_function_3620.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">int<pos:position pos:line="1" pos:column="11"/></name></type> <name pos:line="1" pos:column="12">dav_method_update<pos:position pos:line="1" pos:column="29"/></name><parameter_list pos:line="1" pos:column="29">(<parameter><decl><type><name pos:line="1" pos:column="30">request_rec<pos:position pos:line="1" pos:column="41"/></name> <modifier pos:line="1" pos:column="42">*<pos:position pos:line="1" pos:column="43"/></modifier></type><name pos:line="1" pos:column="43">r<pos:position pos:line="1" pos:column="44"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="45"/></parameter_list>
<block pos:line="2" pos:column="1">{
    <decl_stmt><decl><type><name pos:line="3" pos:column="5">dav_resource<pos:position pos:line="3" pos:column="17"/></name> <modifier pos:line="3" pos:column="18">*<pos:position pos:line="3" pos:column="19"/></modifier></type><name pos:line="3" pos:column="19">resource<pos:position pos:line="3" pos:column="27"/></name></decl>;<pos:position pos:line="3" pos:column="28"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="4" pos:column="5">dav_resource<pos:position pos:line="4" pos:column="17"/></name> <modifier pos:line="4" pos:column="18">*<pos:position pos:line="4" pos:column="19"/></modifier></type><name pos:line="4" pos:column="19">version<pos:position pos:line="4" pos:column="26"/></name> <init pos:line="4" pos:column="27">= <expr><name pos:line="4" pos:column="29">NULL<pos:position pos:line="4" pos:column="33"/></name></expr></init></decl>;<pos:position pos:line="4" pos:column="34"/></decl_stmt>
    <decl_stmt><decl><type><specifier pos:line="5" pos:column="5">const<pos:position pos:line="5" pos:column="10"/></specifier> <name pos:line="5" pos:column="11">dav_hooks_vsn<pos:position pos:line="5" pos:column="24"/></name> <modifier pos:line="5" pos:column="25">*<pos:position pos:line="5" pos:column="26"/></modifier></type><name pos:line="5" pos:column="26">vsn_hooks<pos:position pos:line="5" pos:column="35"/></name> <init pos:line="5" pos:column="36">= <expr><call><name pos:line="5" pos:column="38">DAV_GET_HOOKS_VSN<pos:position pos:line="5" pos:column="55"/></name><argument_list pos:line="5" pos:column="55">(<argument><expr><name pos:line="5" pos:column="56">r<pos:position pos:line="5" pos:column="57"/></name></expr></argument>)<pos:position pos:line="5" pos:column="58"/></argument_list></call></expr></init></decl>;<pos:position pos:line="5" pos:column="59"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="6" pos:column="5">apr_xml_doc<pos:position pos:line="6" pos:column="16"/></name> <modifier pos:line="6" pos:column="17">*<pos:position pos:line="6" pos:column="18"/></modifier></type><name pos:line="6" pos:column="18">doc<pos:position pos:line="6" pos:column="21"/></name></decl>;<pos:position pos:line="6" pos:column="22"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="7" pos:column="5">apr_xml_elem<pos:position pos:line="7" pos:column="17"/></name> <modifier pos:line="7" pos:column="18">*<pos:position pos:line="7" pos:column="19"/></modifier></type><name pos:line="7" pos:column="19">child<pos:position pos:line="7" pos:column="24"/></name></decl>;<pos:position pos:line="7" pos:column="25"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="8" pos:column="5">int<pos:position pos:line="8" pos:column="8"/></name></type> <name pos:line="8" pos:column="9">is_label<pos:position pos:line="8" pos:column="17"/></name> <init pos:line="8" pos:column="18">= <expr><literal type="number" pos:line="8" pos:column="20">0<pos:position pos:line="8" pos:column="21"/></literal></expr></init></decl>;<pos:position pos:line="8" pos:column="22"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="9" pos:column="5">int<pos:position pos:line="9" pos:column="8"/></name></type> <name pos:line="9" pos:column="9">depth<pos:position pos:line="9" pos:column="14"/></name></decl>;<pos:position pos:line="9" pos:column="15"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="10" pos:column="5">int<pos:position pos:line="10" pos:column="8"/></name></type> <name pos:line="10" pos:column="9">result<pos:position pos:line="10" pos:column="15"/></name></decl>;<pos:position pos:line="10" pos:column="16"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="11" pos:column="5">apr_size_t<pos:position pos:line="11" pos:column="15"/></name></type> <name pos:line="11" pos:column="16">tsize<pos:position pos:line="11" pos:column="21"/></name></decl>;<pos:position pos:line="11" pos:column="22"/></decl_stmt>
    <decl_stmt><decl><type><specifier pos:line="12" pos:column="5">const<pos:position pos:line="12" pos:column="10"/></specifier> <name pos:line="12" pos:column="11">char<pos:position pos:line="12" pos:column="15"/></name> <modifier pos:line="12" pos:column="16">*<pos:position pos:line="12" pos:column="17"/></modifier></type><name pos:line="12" pos:column="17">target<pos:position pos:line="12" pos:column="23"/></name></decl>;<pos:position pos:line="12" pos:column="24"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="13" pos:column="5">dav_response<pos:position pos:line="13" pos:column="17"/></name> <modifier pos:line="13" pos:column="18">*<pos:position pos:line="13" pos:column="19"/></modifier></type><name pos:line="13" pos:column="19">multi_response<pos:position pos:line="13" pos:column="33"/></name></decl>;<pos:position pos:line="13" pos:column="34"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="14" pos:column="5">dav_error<pos:position pos:line="14" pos:column="14"/></name> <modifier pos:line="14" pos:column="15">*<pos:position pos:line="14" pos:column="16"/></modifier></type><name pos:line="14" pos:column="16">err<pos:position pos:line="14" pos:column="19"/></name></decl>;<pos:position pos:line="14" pos:column="20"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="15" pos:column="5">dav_lookup_result<pos:position pos:line="15" pos:column="22"/></name></type> <name pos:line="15" pos:column="23">lookup<pos:position pos:line="15" pos:column="29"/></name></decl>;<pos:position pos:line="15" pos:column="30"/></decl_stmt>

    <comment type="block" pos:line="17" pos:column="5">/* If no versioning provider, or UPDATE not supported,
     * decline the request */</comment>
    <if pos:line="19" pos:column="5">if <condition pos:line="19" pos:column="8">(<expr><name pos:line="19" pos:column="9">vsn_hooks<pos:position pos:line="19" pos:column="18"/></name> <operator pos:line="19" pos:column="19">==<pos:position pos:line="19" pos:column="21"/></operator> <name pos:line="19" pos:column="22">NULL<pos:position pos:line="19" pos:column="26"/></name> <operator pos:line="19" pos:column="27">||<pos:position pos:line="19" pos:column="29"/></operator> <name><name pos:line="19" pos:column="30">vsn_hooks<pos:position pos:line="19" pos:column="39"/></name><operator pos:line="19" pos:column="39">-&gt;<pos:position pos:line="19" pos:column="44"/></operator><name pos:line="19" pos:column="41">update<pos:position pos:line="19" pos:column="47"/></name></name> <operator pos:line="19" pos:column="48">==<pos:position pos:line="19" pos:column="50"/></operator> <name pos:line="19" pos:column="51">NULL<pos:position pos:line="19" pos:column="55"/></name></expr>)<pos:position pos:line="19" pos:column="56"/></condition><then pos:line="19" pos:column="56">
        <block type="pseudo"><return pos:line="20" pos:column="9">return <expr><name pos:line="20" pos:column="16">DECLINED<pos:position pos:line="20" pos:column="24"/></name></expr>;<pos:position pos:line="20" pos:column="25"/></return></block></then></if>

    <if pos:line="22" pos:column="5">if <condition pos:line="22" pos:column="8">(<expr><operator pos:line="22" pos:column="9">(<pos:position pos:line="22" pos:column="10"/></operator><name pos:line="22" pos:column="10">depth<pos:position pos:line="22" pos:column="15"/></name> <operator pos:line="22" pos:column="16">=<pos:position pos:line="22" pos:column="17"/></operator> <call><name pos:line="22" pos:column="18">dav_get_depth<pos:position pos:line="22" pos:column="31"/></name><argument_list pos:line="22" pos:column="31">(<argument><expr><name pos:line="22" pos:column="32">r<pos:position pos:line="22" pos:column="33"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="22" pos:column="35">0<pos:position pos:line="22" pos:column="36"/></literal></expr></argument>)<pos:position pos:line="22" pos:column="37"/></argument_list></call><operator pos:line="22" pos:column="37">)<pos:position pos:line="22" pos:column="38"/></operator> <operator pos:line="22" pos:column="39">&lt;<pos:position pos:line="22" pos:column="43"/></operator> <literal type="number" pos:line="22" pos:column="41">0<pos:position pos:line="22" pos:column="42"/></literal></expr>)<pos:position pos:line="22" pos:column="43"/></condition><then pos:line="22" pos:column="43"> <block pos:line="22" pos:column="44">{
        <comment type="block" pos:line="23" pos:column="9">/* dav_get_depth() supplies additional information for the
         * default message. */</comment>
        <return pos:line="25" pos:column="9">return <expr><name pos:line="25" pos:column="16">HTTP_BAD_REQUEST<pos:position pos:line="25" pos:column="32"/></name></expr>;<pos:position pos:line="25" pos:column="33"/></return>
    }<pos:position pos:line="26" pos:column="6"/></block></then></if>

    <comment type="block" pos:line="28" pos:column="5">/* parse the request body */</comment>
    <if pos:line="29" pos:column="5">if <condition pos:line="29" pos:column="8">(<expr><operator pos:line="29" pos:column="9">(<pos:position pos:line="29" pos:column="10"/></operator><name pos:line="29" pos:column="10">result<pos:position pos:line="29" pos:column="16"/></name> <operator pos:line="29" pos:column="17">=<pos:position pos:line="29" pos:column="18"/></operator> <call><name pos:line="29" pos:column="19">ap_xml_parse_input<pos:position pos:line="29" pos:column="37"/></name><argument_list pos:line="29" pos:column="37">(<argument><expr><name pos:line="29" pos:column="38">r<pos:position pos:line="29" pos:column="39"/></name></expr></argument>, <argument><expr><operator pos:line="29" pos:column="41">&amp;<pos:position pos:line="29" pos:column="46"/></operator><name pos:line="29" pos:column="42">doc<pos:position pos:line="29" pos:column="45"/></name></expr></argument>)<pos:position pos:line="29" pos:column="46"/></argument_list></call><operator pos:line="29" pos:column="46">)<pos:position pos:line="29" pos:column="47"/></operator> <operator pos:line="29" pos:column="48">!=<pos:position pos:line="29" pos:column="50"/></operator> <name pos:line="29" pos:column="51">OK<pos:position pos:line="29" pos:column="53"/></name></expr>)<pos:position pos:line="29" pos:column="54"/></condition><then pos:line="29" pos:column="54"> <block pos:line="29" pos:column="55">{
        <return pos:line="30" pos:column="9">return <expr><name pos:line="30" pos:column="16">result<pos:position pos:line="30" pos:column="22"/></name></expr>;<pos:position pos:line="30" pos:column="23"/></return>
    }<pos:position pos:line="31" pos:column="6"/></block></then></if>

    <if pos:line="33" pos:column="5">if <condition pos:line="33" pos:column="8">(<expr><name pos:line="33" pos:column="9">doc<pos:position pos:line="33" pos:column="12"/></name> <operator pos:line="33" pos:column="13">==<pos:position pos:line="33" pos:column="15"/></operator> <name pos:line="33" pos:column="16">NULL<pos:position pos:line="33" pos:column="20"/></name> <operator pos:line="33" pos:column="21">||<pos:position pos:line="33" pos:column="23"/></operator> <operator pos:line="33" pos:column="24">!<pos:position pos:line="33" pos:column="25"/></operator><call><name pos:line="33" pos:column="25">dav_validate_root<pos:position pos:line="33" pos:column="42"/></name><argument_list pos:line="33" pos:column="42">(<argument><expr><name pos:line="33" pos:column="43">doc<pos:position pos:line="33" pos:column="46"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="33" pos:column="48">"update"<pos:position pos:line="33" pos:column="56"/></literal></expr></argument>)<pos:position pos:line="33" pos:column="57"/></argument_list></call></expr>)<pos:position pos:line="33" pos:column="58"/></condition><then pos:line="33" pos:column="58"> <block pos:line="33" pos:column="59">{
        <comment type="block" pos:line="34" pos:column="9">/* This supplies additional information for the default message. */</comment>
        <expr_stmt><expr><call><name pos:line="35" pos:column="9">ap_log_rerror<pos:position pos:line="35" pos:column="22"/></name><argument_list pos:line="35" pos:column="22">(<argument><expr><name pos:line="35" pos:column="23">APLOG_MARK<pos:position pos:line="35" pos:column="33"/></name></expr></argument>, <argument><expr><name pos:line="35" pos:column="35">APLOG_ERR<pos:position pos:line="35" pos:column="44"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="35" pos:column="46">0<pos:position pos:line="35" pos:column="47"/></literal></expr></argument>, <argument><expr><name pos:line="35" pos:column="49">r<pos:position pos:line="35" pos:column="50"/></name></expr></argument>,
                      <argument><expr><literal type="string" pos:line="36" pos:column="23">"The request body does not contain "<pos:position pos:line="36" pos:column="59"/></literal>
                      <literal type="string" pos:line="37" pos:column="23">"an \"update\" element."<pos:position pos:line="37" pos:column="47"/></literal></expr></argument>)<pos:position pos:line="37" pos:column="48"/></argument_list></call></expr>;<pos:position pos:line="37" pos:column="49"/></expr_stmt>
        <return pos:line="38" pos:column="9">return <expr><name pos:line="38" pos:column="16">HTTP_BAD_REQUEST<pos:position pos:line="38" pos:column="32"/></name></expr>;<pos:position pos:line="38" pos:column="33"/></return>
    }<pos:position pos:line="39" pos:column="6"/></block></then></if>

    <comment type="block" pos:line="41" pos:column="5">/* check for label-name or version element, but not both */</comment>
    <if pos:line="42" pos:column="5">if <condition pos:line="42" pos:column="8">(<expr><operator pos:line="42" pos:column="9">(<pos:position pos:line="42" pos:column="10"/></operator><name pos:line="42" pos:column="10">child<pos:position pos:line="42" pos:column="15"/></name> <operator pos:line="42" pos:column="16">=<pos:position pos:line="42" pos:column="17"/></operator> <call><name pos:line="42" pos:column="18">dav_find_child<pos:position pos:line="42" pos:column="32"/></name><argument_list pos:line="42" pos:column="32">(<argument><expr><name><name pos:line="42" pos:column="33">doc<pos:position pos:line="42" pos:column="36"/></name><operator pos:line="42" pos:column="36">-&gt;<pos:position pos:line="42" pos:column="41"/></operator><name pos:line="42" pos:column="38">root<pos:position pos:line="42" pos:column="42"/></name></name></expr></argument>, <argument><expr><literal type="string" pos:line="42" pos:column="44">"label-name"<pos:position pos:line="42" pos:column="56"/></literal></expr></argument>)<pos:position pos:line="42" pos:column="57"/></argument_list></call><operator pos:line="42" pos:column="57">)<pos:position pos:line="42" pos:column="58"/></operator> <operator pos:line="42" pos:column="59">!=<pos:position pos:line="42" pos:column="61"/></operator> <name pos:line="42" pos:column="62">NULL<pos:position pos:line="42" pos:column="66"/></name></expr>)<pos:position pos:line="42" pos:column="67"/></condition><then pos:line="42" pos:column="67">
        <block type="pseudo"><expr_stmt><expr><name pos:line="43" pos:column="9">is_label<pos:position pos:line="43" pos:column="17"/></name> <operator pos:line="43" pos:column="18">=<pos:position pos:line="43" pos:column="19"/></operator> <literal type="number" pos:line="43" pos:column="20">1<pos:position pos:line="43" pos:column="21"/></literal></expr>;<pos:position pos:line="43" pos:column="22"/></expr_stmt></block></then>
    <elseif pos:line="44" pos:column="5">else <if pos:line="44" pos:column="10">if <condition pos:line="44" pos:column="13">(<expr><operator pos:line="44" pos:column="14">(<pos:position pos:line="44" pos:column="15"/></operator><name pos:line="44" pos:column="15">child<pos:position pos:line="44" pos:column="20"/></name> <operator pos:line="44" pos:column="21">=<pos:position pos:line="44" pos:column="22"/></operator> <call><name pos:line="44" pos:column="23">dav_find_child<pos:position pos:line="44" pos:column="37"/></name><argument_list pos:line="44" pos:column="37">(<argument><expr><name><name pos:line="44" pos:column="38">doc<pos:position pos:line="44" pos:column="41"/></name><operator pos:line="44" pos:column="41">-&gt;<pos:position pos:line="44" pos:column="46"/></operator><name pos:line="44" pos:column="43">root<pos:position pos:line="44" pos:column="47"/></name></name></expr></argument>, <argument><expr><literal type="string" pos:line="44" pos:column="49">"version"<pos:position pos:line="44" pos:column="58"/></literal></expr></argument>)<pos:position pos:line="44" pos:column="59"/></argument_list></call><operator pos:line="44" pos:column="59">)<pos:position pos:line="44" pos:column="60"/></operator> <operator pos:line="44" pos:column="61">!=<pos:position pos:line="44" pos:column="63"/></operator> <name pos:line="44" pos:column="64">NULL<pos:position pos:line="44" pos:column="68"/></name></expr>)<pos:position pos:line="44" pos:column="69"/></condition><then pos:line="44" pos:column="69"> <block pos:line="44" pos:column="70">{
        <comment type="block" pos:line="45" pos:column="9">/* get the href element */</comment>
        <if pos:line="46" pos:column="9">if <condition pos:line="46" pos:column="12">(<expr><operator pos:line="46" pos:column="13">(<pos:position pos:line="46" pos:column="14"/></operator><name pos:line="46" pos:column="14">child<pos:position pos:line="46" pos:column="19"/></name> <operator pos:line="46" pos:column="20">=<pos:position pos:line="46" pos:column="21"/></operator> <call><name pos:line="46" pos:column="22">dav_find_child<pos:position pos:line="46" pos:column="36"/></name><argument_list pos:line="46" pos:column="36">(<argument><expr><name pos:line="46" pos:column="37">child<pos:position pos:line="46" pos:column="42"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="46" pos:column="44">"href"<pos:position pos:line="46" pos:column="50"/></literal></expr></argument>)<pos:position pos:line="46" pos:column="51"/></argument_list></call><operator pos:line="46" pos:column="51">)<pos:position pos:line="46" pos:column="52"/></operator> <operator pos:line="46" pos:column="53">==<pos:position pos:line="46" pos:column="55"/></operator> <name pos:line="46" pos:column="56">NULL<pos:position pos:line="46" pos:column="60"/></name></expr>)<pos:position pos:line="46" pos:column="61"/></condition><then pos:line="46" pos:column="61"> <block pos:line="46" pos:column="62">{
            <expr_stmt><expr><call><name pos:line="47" pos:column="13">ap_log_rerror<pos:position pos:line="47" pos:column="26"/></name><argument_list pos:line="47" pos:column="26">(<argument><expr><name pos:line="47" pos:column="27">APLOG_MARK<pos:position pos:line="47" pos:column="37"/></name></expr></argument>, <argument><expr><name pos:line="47" pos:column="39">APLOG_ERR<pos:position pos:line="47" pos:column="48"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="47" pos:column="50">0<pos:position pos:line="47" pos:column="51"/></literal></expr></argument>, <argument><expr><name pos:line="47" pos:column="53">r<pos:position pos:line="47" pos:column="54"/></name></expr></argument>,
                          <argument><expr><literal type="string" pos:line="48" pos:column="27">"The version element does not contain "<pos:position pos:line="48" pos:column="66"/></literal>
                          <literal type="string" pos:line="49" pos:column="27">"an \"href\" element."<pos:position pos:line="49" pos:column="49"/></literal></expr></argument>)<pos:position pos:line="49" pos:column="50"/></argument_list></call></expr>;<pos:position pos:line="49" pos:column="51"/></expr_stmt>
            <return pos:line="50" pos:column="13">return <expr><name pos:line="50" pos:column="20">HTTP_BAD_REQUEST<pos:position pos:line="50" pos:column="36"/></name></expr>;<pos:position pos:line="50" pos:column="37"/></return>
        }<pos:position pos:line="51" pos:column="10"/></block></then></if>
    }<pos:position pos:line="52" pos:column="6"/></block></then></if></elseif>
    <else pos:line="53" pos:column="5">else <block pos:line="53" pos:column="10">{
        <expr_stmt><expr><call><name pos:line="54" pos:column="9">ap_log_rerror<pos:position pos:line="54" pos:column="22"/></name><argument_list pos:line="54" pos:column="22">(<argument><expr><name pos:line="54" pos:column="23">APLOG_MARK<pos:position pos:line="54" pos:column="33"/></name></expr></argument>, <argument><expr><name pos:line="54" pos:column="35">APLOG_ERR<pos:position pos:line="54" pos:column="44"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="54" pos:column="46">0<pos:position pos:line="54" pos:column="47"/></literal></expr></argument>, <argument><expr><name pos:line="54" pos:column="49">r<pos:position pos:line="54" pos:column="50"/></name></expr></argument>,
                      <argument><expr><literal type="string" pos:line="55" pos:column="23">"The \"update\" element does not contain "<pos:position pos:line="55" pos:column="65"/></literal>
                      <literal type="string" pos:line="56" pos:column="23">"a \"label-name\" or \"version\" element."<pos:position pos:line="56" pos:column="65"/></literal></expr></argument>)<pos:position pos:line="56" pos:column="66"/></argument_list></call></expr>;<pos:position pos:line="56" pos:column="67"/></expr_stmt>
        <return pos:line="57" pos:column="9">return <expr><name pos:line="57" pos:column="16">HTTP_BAD_REQUEST<pos:position pos:line="57" pos:column="32"/></name></expr>;<pos:position pos:line="57" pos:column="33"/></return>
    }<pos:position pos:line="58" pos:column="6"/></block></else></if>

    <comment type="block" pos:line="60" pos:column="5">/* a depth greater than zero is only allowed for a label */</comment>
    <if pos:line="61" pos:column="5">if <condition pos:line="61" pos:column="8">(<expr><operator pos:line="61" pos:column="9">!<pos:position pos:line="61" pos:column="10"/></operator><name pos:line="61" pos:column="10">is_label<pos:position pos:line="61" pos:column="18"/></name> <operator pos:line="61" pos:column="19">&amp;&amp;<pos:position pos:line="61" pos:column="29"/></operator> <name pos:line="61" pos:column="22">depth<pos:position pos:line="61" pos:column="27"/></name> <operator pos:line="61" pos:column="28">!=<pos:position pos:line="61" pos:column="30"/></operator> <literal type="number" pos:line="61" pos:column="31">0<pos:position pos:line="61" pos:column="32"/></literal></expr>)<pos:position pos:line="61" pos:column="33"/></condition><then pos:line="61" pos:column="33"> <block pos:line="61" pos:column="34">{
        <expr_stmt><expr><call><name pos:line="62" pos:column="9">ap_log_rerror<pos:position pos:line="62" pos:column="22"/></name><argument_list pos:line="62" pos:column="22">(<argument><expr><name pos:line="62" pos:column="23">APLOG_MARK<pos:position pos:line="62" pos:column="33"/></name></expr></argument>, <argument><expr><name pos:line="62" pos:column="35">APLOG_ERR<pos:position pos:line="62" pos:column="44"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="62" pos:column="46">0<pos:position pos:line="62" pos:column="47"/></literal></expr></argument>, <argument><expr><name pos:line="62" pos:column="49">r<pos:position pos:line="62" pos:column="50"/></name></expr></argument>,
                      <argument><expr><literal type="string" pos:line="63" pos:column="23">"Depth must be zero for UPDATE with a version"<pos:position pos:line="63" pos:column="69"/></literal></expr></argument>)<pos:position pos:line="63" pos:column="70"/></argument_list></call></expr>;<pos:position pos:line="63" pos:column="71"/></expr_stmt>
        <return pos:line="64" pos:column="9">return <expr><name pos:line="64" pos:column="16">HTTP_BAD_REQUEST<pos:position pos:line="64" pos:column="32"/></name></expr>;<pos:position pos:line="64" pos:column="33"/></return>
    }<pos:position pos:line="65" pos:column="6"/></block></then></if>

    <comment type="block" pos:line="67" pos:column="5">/* get the target value (a label or a version URI) */</comment>
    <expr_stmt><expr><call><name pos:line="68" pos:column="5">apr_xml_to_text<pos:position pos:line="68" pos:column="20"/></name><argument_list pos:line="68" pos:column="20">(<argument><expr><name><name pos:line="68" pos:column="21">r<pos:position pos:line="68" pos:column="22"/></name><operator pos:line="68" pos:column="22">-&gt;<pos:position pos:line="68" pos:column="27"/></operator><name pos:line="68" pos:column="24">pool<pos:position pos:line="68" pos:column="28"/></name></name></expr></argument>, <argument><expr><name pos:line="68" pos:column="30">child<pos:position pos:line="68" pos:column="35"/></name></expr></argument>, <argument><expr><name pos:line="68" pos:column="37">APR_XML_X2T_INNER<pos:position pos:line="68" pos:column="54"/></name></expr></argument>, <argument><expr><name pos:line="68" pos:column="56">NULL<pos:position pos:line="68" pos:column="60"/></name></expr></argument>, <argument><expr><name pos:line="68" pos:column="62">NULL<pos:position pos:line="68" pos:column="66"/></name></expr></argument>,
                    <argument><expr><operator pos:line="69" pos:column="21">&amp;<pos:position pos:line="69" pos:column="26"/></operator><name pos:line="69" pos:column="22">target<pos:position pos:line="69" pos:column="28"/></name></expr></argument>, <argument><expr><operator pos:line="69" pos:column="30">&amp;<pos:position pos:line="69" pos:column="35"/></operator><name pos:line="69" pos:column="31">tsize<pos:position pos:line="69" pos:column="36"/></name></expr></argument>)<pos:position pos:line="69" pos:column="37"/></argument_list></call></expr>;<pos:position pos:line="69" pos:column="38"/></expr_stmt>
    <if pos:line="70" pos:column="5">if <condition pos:line="70" pos:column="8">(<expr><name pos:line="70" pos:column="9">tsize<pos:position pos:line="70" pos:column="14"/></name> <operator pos:line="70" pos:column="15">==<pos:position pos:line="70" pos:column="17"/></operator> <literal type="number" pos:line="70" pos:column="18">0<pos:position pos:line="70" pos:column="19"/></literal></expr>)<pos:position pos:line="70" pos:column="20"/></condition><then pos:line="70" pos:column="20"> <block pos:line="70" pos:column="21">{
        <expr_stmt><expr><call><name pos:line="71" pos:column="9">ap_log_rerror<pos:position pos:line="71" pos:column="22"/></name><argument_list pos:line="71" pos:column="22">(<argument><expr><name pos:line="71" pos:column="23">APLOG_MARK<pos:position pos:line="71" pos:column="33"/></name></expr></argument>, <argument><expr><name pos:line="71" pos:column="35">APLOG_ERR<pos:position pos:line="71" pos:column="44"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="71" pos:column="46">0<pos:position pos:line="71" pos:column="47"/></literal></expr></argument>, <argument><expr><name pos:line="71" pos:column="49">r<pos:position pos:line="71" pos:column="50"/></name></expr></argument>,
                      <argument><expr><literal type="string" pos:line="72" pos:column="23">"A \"label-name\" or \"href\" element does not contain "<pos:position pos:line="72" pos:column="79"/></literal>
                      <literal type="string" pos:line="73" pos:column="23">"any content."<pos:position pos:line="73" pos:column="37"/></literal></expr></argument>)<pos:position pos:line="73" pos:column="38"/></argument_list></call></expr>;<pos:position pos:line="73" pos:column="39"/></expr_stmt>
        <return pos:line="74" pos:column="9">return <expr><name pos:line="74" pos:column="16">HTTP_BAD_REQUEST<pos:position pos:line="74" pos:column="32"/></name></expr>;<pos:position pos:line="74" pos:column="33"/></return>
    }<pos:position pos:line="75" pos:column="6"/></block></then></if>

    <comment type="block" pos:line="77" pos:column="5">/* Ask repository module to resolve the resource */</comment>
    <expr_stmt><expr><name pos:line="78" pos:column="5">err<pos:position pos:line="78" pos:column="8"/></name> <operator pos:line="78" pos:column="9">=<pos:position pos:line="78" pos:column="10"/></operator> <call><name pos:line="78" pos:column="11">dav_get_resource<pos:position pos:line="78" pos:column="27"/></name><argument_list pos:line="78" pos:column="27">(<argument><expr><name pos:line="78" pos:column="28">r<pos:position pos:line="78" pos:column="29"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="78" pos:column="31">0<pos:position pos:line="78" pos:column="32"/></literal></expr></argument> <comment type="block" pos:line="78" pos:column="33">/* label_allowed */</comment>, <argument><expr><literal type="number" pos:line="78" pos:column="54">0<pos:position pos:line="78" pos:column="55"/></literal></expr></argument> <comment type="block" pos:line="78" pos:column="56">/* use_checked_in */</comment>,
                           <argument><expr><operator pos:line="79" pos:column="28">&amp;<pos:position pos:line="79" pos:column="33"/></operator><name pos:line="79" pos:column="29">resource<pos:position pos:line="79" pos:column="37"/></name></expr></argument>)<pos:position pos:line="79" pos:column="38"/></argument_list></call></expr>;<pos:position pos:line="79" pos:column="39"/></expr_stmt>
    <if pos:line="80" pos:column="5">if <condition pos:line="80" pos:column="8">(<expr><name pos:line="80" pos:column="9">err<pos:position pos:line="80" pos:column="12"/></name> <operator pos:line="80" pos:column="13">!=<pos:position pos:line="80" pos:column="15"/></operator> <name pos:line="80" pos:column="16">NULL<pos:position pos:line="80" pos:column="20"/></name></expr>)<pos:position pos:line="80" pos:column="21"/></condition><then pos:line="80" pos:column="21">
        <block type="pseudo"><return pos:line="81" pos:column="9">return <expr><call><name pos:line="81" pos:column="16">dav_handle_err<pos:position pos:line="81" pos:column="30"/></name><argument_list pos:line="81" pos:column="30">(<argument><expr><name pos:line="81" pos:column="31">r<pos:position pos:line="81" pos:column="32"/></name></expr></argument>, <argument><expr><name pos:line="81" pos:column="34">err<pos:position pos:line="81" pos:column="37"/></name></expr></argument>, <argument><expr><name pos:line="81" pos:column="39">NULL<pos:position pos:line="81" pos:column="43"/></name></expr></argument>)<pos:position pos:line="81" pos:column="44"/></argument_list></call></expr>;<pos:position pos:line="81" pos:column="45"/></return></block></then></if>

    <if pos:line="83" pos:column="5">if <condition pos:line="83" pos:column="8">(<expr><operator pos:line="83" pos:column="9">!<pos:position pos:line="83" pos:column="10"/></operator><name><name pos:line="83" pos:column="10">resource<pos:position pos:line="83" pos:column="18"/></name><operator pos:line="83" pos:column="18">-&gt;<pos:position pos:line="83" pos:column="23"/></operator><name pos:line="83" pos:column="20">exists<pos:position pos:line="83" pos:column="26"/></name></name></expr>)<pos:position pos:line="83" pos:column="27"/></condition><then pos:line="83" pos:column="27"> <block pos:line="83" pos:column="28">{
        <comment type="block" pos:line="84" pos:column="9">/* Apache will supply a default error for this. */</comment>
        <return pos:line="85" pos:column="9">return <expr><name pos:line="85" pos:column="16">HTTP_NOT_FOUND<pos:position pos:line="85" pos:column="30"/></name></expr>;<pos:position pos:line="85" pos:column="31"/></return>
    }<pos:position pos:line="86" pos:column="6"/></block></then></if>

    <comment type="block" pos:line="88" pos:column="5">/* ### need a general mechanism for reporting precondition violations
     * ### (should be returning XML document for 403/409 responses)
     */</comment>
    <if pos:line="91" pos:column="5">if <condition pos:line="91" pos:column="8">(<expr><name><name pos:line="91" pos:column="9">resource<pos:position pos:line="91" pos:column="17"/></name><operator pos:line="91" pos:column="17">-&gt;<pos:position pos:line="91" pos:column="22"/></operator><name pos:line="91" pos:column="19">type<pos:position pos:line="91" pos:column="23"/></name></name> <operator pos:line="91" pos:column="24">!=<pos:position pos:line="91" pos:column="26"/></operator> <name pos:line="91" pos:column="27">DAV_RESOURCE_TYPE_REGULAR<pos:position pos:line="91" pos:column="52"/></name>
        <operator pos:line="92" pos:column="9">||<pos:position pos:line="92" pos:column="11"/></operator> <operator pos:line="92" pos:column="12">!<pos:position pos:line="92" pos:column="13"/></operator><name><name pos:line="92" pos:column="13">resource<pos:position pos:line="92" pos:column="21"/></name><operator pos:line="92" pos:column="21">-&gt;<pos:position pos:line="92" pos:column="26"/></operator><name pos:line="92" pos:column="23">versioned<pos:position pos:line="92" pos:column="32"/></name></name> <operator pos:line="92" pos:column="33">||<pos:position pos:line="92" pos:column="35"/></operator> <name><name pos:line="92" pos:column="36">resource<pos:position pos:line="92" pos:column="44"/></name><operator pos:line="92" pos:column="44">-&gt;<pos:position pos:line="92" pos:column="49"/></operator><name pos:line="92" pos:column="46">working<pos:position pos:line="92" pos:column="53"/></name></name></expr>)<pos:position pos:line="92" pos:column="54"/></condition><then pos:line="92" pos:column="54"> <block pos:line="92" pos:column="55">{
        <return pos:line="93" pos:column="9">return <expr><call><name pos:line="93" pos:column="16">dav_error_response<pos:position pos:line="93" pos:column="34"/></name><argument_list pos:line="93" pos:column="34">(<argument><expr><name pos:line="93" pos:column="35">r<pos:position pos:line="93" pos:column="36"/></name></expr></argument>, <argument><expr><name pos:line="93" pos:column="38">HTTP_CONFLICT<pos:position pos:line="93" pos:column="51"/></name></expr></argument>,
                                  <argument><expr><literal type="string" pos:line="94" pos:column="35">"&lt;DAV:must-be-checked-in-version-controlled-resource&gt;"<pos:position pos:line="94" pos:column="95"/></literal></expr></argument>)<pos:position pos:line="94" pos:column="90"/></argument_list></call></expr>;<pos:position pos:line="94" pos:column="91"/></return>
    }<pos:position pos:line="95" pos:column="6"/></block></then></if>

    <comment type="block" pos:line="97" pos:column="5">/* if target is a version, resolve the version resource */</comment>
    <comment type="block" pos:line="98" pos:column="5">/* ### dav_lookup_uri only allows absolute URIs; is that OK? */</comment>
    <if pos:line="99" pos:column="5">if <condition pos:line="99" pos:column="8">(<expr><operator pos:line="99" pos:column="9">!<pos:position pos:line="99" pos:column="10"/></operator><name pos:line="99" pos:column="10">is_label<pos:position pos:line="99" pos:column="18"/></name></expr>)<pos:position pos:line="99" pos:column="19"/></condition><then pos:line="99" pos:column="19"> <block pos:line="99" pos:column="20">{
        <expr_stmt><expr><name pos:line="100" pos:column="9">lookup<pos:position pos:line="100" pos:column="15"/></name> <operator pos:line="100" pos:column="16">=<pos:position pos:line="100" pos:column="17"/></operator> <call><name pos:line="100" pos:column="18">dav_lookup_uri<pos:position pos:line="100" pos:column="32"/></name><argument_list pos:line="100" pos:column="32">(<argument><expr><name pos:line="100" pos:column="33">target<pos:position pos:line="100" pos:column="39"/></name></expr></argument>, <argument><expr><name pos:line="100" pos:column="41">r<pos:position pos:line="100" pos:column="42"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="100" pos:column="44">0<pos:position pos:line="100" pos:column="45"/></literal></expr></argument> <comment type="block" pos:line="100" pos:column="46">/* must_be_absolute */</comment>)<pos:position pos:line="100" pos:column="69"/></argument_list></call></expr>;<pos:position pos:line="100" pos:column="70"/></expr_stmt>
        <if pos:line="101" pos:column="9">if <condition pos:line="101" pos:column="12">(<expr><name><name pos:line="101" pos:column="13">lookup<pos:position pos:line="101" pos:column="19"/></name><operator pos:line="101" pos:column="19">.<pos:position pos:line="101" pos:column="20"/></operator><name pos:line="101" pos:column="20">rnew<pos:position pos:line="101" pos:column="24"/></name></name> <operator pos:line="101" pos:column="25">==<pos:position pos:line="101" pos:column="27"/></operator> <name pos:line="101" pos:column="28">NULL<pos:position pos:line="101" pos:column="32"/></name></expr>)<pos:position pos:line="101" pos:column="33"/></condition><then pos:line="101" pos:column="33"> <block pos:line="101" pos:column="34">{
            <if pos:line="102" pos:column="13">if <condition pos:line="102" pos:column="16">(<expr><name><name pos:line="102" pos:column="17">lookup<pos:position pos:line="102" pos:column="23"/></name><operator pos:line="102" pos:column="23">.<pos:position pos:line="102" pos:column="24"/></operator><name pos:line="102" pos:column="24">err<pos:position pos:line="102" pos:column="27"/></name><operator pos:line="102" pos:column="27">.<pos:position pos:line="102" pos:column="28"/></operator><name pos:line="102" pos:column="28">status<pos:position pos:line="102" pos:column="34"/></name></name> <operator pos:line="102" pos:column="35">==<pos:position pos:line="102" pos:column="37"/></operator> <name pos:line="102" pos:column="38">HTTP_BAD_REQUEST<pos:position pos:line="102" pos:column="54"/></name></expr>)<pos:position pos:line="102" pos:column="55"/></condition><then pos:line="102" pos:column="55"> <block pos:line="102" pos:column="56">{
                <comment type="block" pos:line="103" pos:column="17">/* This supplies additional information for the default message. */</comment>
                <expr_stmt><expr><call><name pos:line="104" pos:column="17">ap_log_rerror<pos:position pos:line="104" pos:column="30"/></name><argument_list pos:line="104" pos:column="30">(<argument><expr><name pos:line="104" pos:column="31">APLOG_MARK<pos:position pos:line="104" pos:column="41"/></name></expr></argument>, <argument><expr><name pos:line="104" pos:column="43">APLOG_ERR<pos:position pos:line="104" pos:column="52"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="104" pos:column="54">0<pos:position pos:line="104" pos:column="55"/></literal></expr></argument>, <argument><expr><name pos:line="104" pos:column="57">r<pos:position pos:line="104" pos:column="58"/></name></expr></argument>,
                              <argument><expr><literal type="string" pos:line="105" pos:column="31">"%s"<pos:position pos:line="105" pos:column="35"/></literal></expr></argument>, <argument><expr><name><name pos:line="105" pos:column="37">lookup<pos:position pos:line="105" pos:column="43"/></name><operator pos:line="105" pos:column="43">.<pos:position pos:line="105" pos:column="44"/></operator><name pos:line="105" pos:column="44">err<pos:position pos:line="105" pos:column="47"/></name><operator pos:line="105" pos:column="47">.<pos:position pos:line="105" pos:column="48"/></operator><name pos:line="105" pos:column="48">desc<pos:position pos:line="105" pos:column="52"/></name></name></expr></argument>)<pos:position pos:line="105" pos:column="53"/></argument_list></call></expr>;<pos:position pos:line="105" pos:column="54"/></expr_stmt>
                <return pos:line="106" pos:column="17">return <expr><name pos:line="106" pos:column="24">HTTP_BAD_REQUEST<pos:position pos:line="106" pos:column="40"/></name></expr>;<pos:position pos:line="106" pos:column="41"/></return>
            }<pos:position pos:line="107" pos:column="14"/></block></then></if>

            <comment type="block" pos:line="109" pos:column="13">/* ### this assumes that dav_lookup_uri() only generates a status
             * ### that Apache can provide a status line for!! */</comment>

            <return pos:line="112" pos:column="13">return <expr><call><name pos:line="112" pos:column="20">dav_error_response<pos:position pos:line="112" pos:column="38"/></name><argument_list pos:line="112" pos:column="38">(<argument><expr><name pos:line="112" pos:column="39">r<pos:position pos:line="112" pos:column="40"/></name></expr></argument>, <argument><expr><name><name pos:line="112" pos:column="42">lookup<pos:position pos:line="112" pos:column="48"/></name><operator pos:line="112" pos:column="48">.<pos:position pos:line="112" pos:column="49"/></operator><name pos:line="112" pos:column="49">err<pos:position pos:line="112" pos:column="52"/></name><operator pos:line="112" pos:column="52">.<pos:position pos:line="112" pos:column="53"/></operator><name pos:line="112" pos:column="53">status<pos:position pos:line="112" pos:column="59"/></name></name></expr></argument>, <argument><expr><name><name pos:line="112" pos:column="61">lookup<pos:position pos:line="112" pos:column="67"/></name><operator pos:line="112" pos:column="67">.<pos:position pos:line="112" pos:column="68"/></operator><name pos:line="112" pos:column="68">err<pos:position pos:line="112" pos:column="71"/></name><operator pos:line="112" pos:column="71">.<pos:position pos:line="112" pos:column="72"/></operator><name pos:line="112" pos:column="72">desc<pos:position pos:line="112" pos:column="76"/></name></name></expr></argument>)<pos:position pos:line="112" pos:column="77"/></argument_list></call></expr>;<pos:position pos:line="112" pos:column="78"/></return>
        }<pos:position pos:line="113" pos:column="10"/></block></then></if>
        <if pos:line="114" pos:column="9">if <condition pos:line="114" pos:column="12">(<expr><name><name pos:line="114" pos:column="13">lookup<pos:position pos:line="114" pos:column="19"/></name><operator pos:line="114" pos:column="19">.<pos:position pos:line="114" pos:column="20"/></operator><name pos:line="114" pos:column="20">rnew<pos:position pos:line="114" pos:column="24"/></name><operator pos:line="114" pos:column="24">-&gt;<pos:position pos:line="114" pos:column="29"/></operator><name pos:line="114" pos:column="26">status<pos:position pos:line="114" pos:column="32"/></name></name> <operator pos:line="114" pos:column="33">!=<pos:position pos:line="114" pos:column="35"/></operator> <name pos:line="114" pos:column="36">HTTP_OK<pos:position pos:line="114" pos:column="43"/></name></expr>)<pos:position pos:line="114" pos:column="44"/></condition><then pos:line="114" pos:column="44"> <block pos:line="114" pos:column="45">{
            <comment type="block" pos:line="115" pos:column="13">/* ### how best to report this... */</comment>
            <return pos:line="116" pos:column="13">return <expr><call><name pos:line="116" pos:column="20">dav_error_response<pos:position pos:line="116" pos:column="38"/></name><argument_list pos:line="116" pos:column="38">(<argument><expr><name pos:line="116" pos:column="39">r<pos:position pos:line="116" pos:column="40"/></name></expr></argument>, <argument><expr><name><name pos:line="116" pos:column="42">lookup<pos:position pos:line="116" pos:column="48"/></name><operator pos:line="116" pos:column="48">.<pos:position pos:line="116" pos:column="49"/></operator><name pos:line="116" pos:column="49">rnew<pos:position pos:line="116" pos:column="53"/></name><operator pos:line="116" pos:column="53">-&gt;<pos:position pos:line="116" pos:column="58"/></operator><name pos:line="116" pos:column="55">status<pos:position pos:line="116" pos:column="61"/></name></name></expr></argument>,
                                      <argument><expr><literal type="string" pos:line="117" pos:column="39">"Version URI had an error."<pos:position pos:line="117" pos:column="66"/></literal></expr></argument>)<pos:position pos:line="117" pos:column="67"/></argument_list></call></expr>;<pos:position pos:line="117" pos:column="68"/></return>
        }<pos:position pos:line="118" pos:column="10"/></block></then></if>

        <comment type="block" pos:line="120" pos:column="9">/* resolve version resource */</comment>
        <expr_stmt><expr><name pos:line="121" pos:column="9">err<pos:position pos:line="121" pos:column="12"/></name> <operator pos:line="121" pos:column="13">=<pos:position pos:line="121" pos:column="14"/></operator> <call><name pos:line="121" pos:column="15">dav_get_resource<pos:position pos:line="121" pos:column="31"/></name><argument_list pos:line="121" pos:column="31">(<argument><expr><name><name pos:line="121" pos:column="32">lookup<pos:position pos:line="121" pos:column="38"/></name><operator pos:line="121" pos:column="38">.<pos:position pos:line="121" pos:column="39"/></operator><name pos:line="121" pos:column="39">rnew<pos:position pos:line="121" pos:column="43"/></name></name></expr></argument>, <argument><expr><literal type="number" pos:line="121" pos:column="45">0<pos:position pos:line="121" pos:column="46"/></literal></expr></argument> <comment type="block" pos:line="121" pos:column="47">/* label_allowed */</comment>,
                               <argument><expr><literal type="number" pos:line="122" pos:column="32">0<pos:position pos:line="122" pos:column="33"/></literal></expr></argument> <comment type="block" pos:line="122" pos:column="34">/* use_checked_in */</comment>, <argument><expr><operator pos:line="122" pos:column="56">&amp;<pos:position pos:line="122" pos:column="61"/></operator><name pos:line="122" pos:column="57">version<pos:position pos:line="122" pos:column="64"/></name></expr></argument>)<pos:position pos:line="122" pos:column="65"/></argument_list></call></expr>;<pos:position pos:line="122" pos:column="66"/></expr_stmt>
        <if pos:line="123" pos:column="9">if <condition pos:line="123" pos:column="12">(<expr><name pos:line="123" pos:column="13">err<pos:position pos:line="123" pos:column="16"/></name> <operator pos:line="123" pos:column="17">!=<pos:position pos:line="123" pos:column="19"/></operator> <name pos:line="123" pos:column="20">NULL<pos:position pos:line="123" pos:column="24"/></name></expr>)<pos:position pos:line="123" pos:column="25"/></condition><then pos:line="123" pos:column="25">
            <block type="pseudo"><return pos:line="124" pos:column="13">return <expr><call><name pos:line="124" pos:column="20">dav_handle_err<pos:position pos:line="124" pos:column="34"/></name><argument_list pos:line="124" pos:column="34">(<argument><expr><name pos:line="124" pos:column="35">r<pos:position pos:line="124" pos:column="36"/></name></expr></argument>, <argument><expr><name pos:line="124" pos:column="38">err<pos:position pos:line="124" pos:column="41"/></name></expr></argument>, <argument><expr><name pos:line="124" pos:column="43">NULL<pos:position pos:line="124" pos:column="47"/></name></expr></argument>)<pos:position pos:line="124" pos:column="48"/></argument_list></call></expr>;<pos:position pos:line="124" pos:column="49"/></return></block></then></if>

        <comment type="block" pos:line="126" pos:column="9">/* NULL out target, since we're using a version resource */</comment>
        <expr_stmt><expr><name pos:line="127" pos:column="9">target<pos:position pos:line="127" pos:column="15"/></name> <operator pos:line="127" pos:column="16">=<pos:position pos:line="127" pos:column="17"/></operator> <name pos:line="127" pos:column="18">NULL<pos:position pos:line="127" pos:column="22"/></name></expr>;<pos:position pos:line="127" pos:column="23"/></expr_stmt>
    }<pos:position pos:line="128" pos:column="6"/></block></then></if>

    <comment type="block" pos:line="130" pos:column="5">/* do the UPDATE operation */</comment>
    <expr_stmt><expr><name pos:line="131" pos:column="5">err<pos:position pos:line="131" pos:column="8"/></name> <operator pos:line="131" pos:column="9">=<pos:position pos:line="131" pos:column="10"/></operator> <call pos:line="131" pos:column="11">(<modifier pos:line="131" pos:column="12">*<pos:position pos:line="131" pos:column="13"/></modifier><name><name pos:line="131" pos:column="13">vsn_hooks<pos:position pos:line="131" pos:column="22"/></name><operator pos:line="131" pos:column="22">-&gt;<pos:position pos:line="131" pos:column="27"/></operator><name pos:line="131" pos:column="24">update<pos:position pos:line="131" pos:column="30"/></name></name>)<argument_list pos:line="131" pos:column="31">(<argument><expr><name pos:line="131" pos:column="32">resource<pos:position pos:line="131" pos:column="40"/></name></expr></argument>, <argument><expr><name pos:line="131" pos:column="42">version<pos:position pos:line="131" pos:column="49"/></name></expr></argument>, <argument><expr><name pos:line="131" pos:column="51">target<pos:position pos:line="131" pos:column="57"/></name></expr></argument>, <argument><expr><name pos:line="131" pos:column="59">depth<pos:position pos:line="131" pos:column="64"/></name></expr></argument>, <argument><expr><operator pos:line="131" pos:column="66">&amp;<pos:position pos:line="131" pos:column="71"/></operator><name pos:line="131" pos:column="67">multi_response<pos:position pos:line="131" pos:column="81"/></name></expr></argument>)<pos:position pos:line="131" pos:column="82"/></argument_list></call></expr>;<pos:position pos:line="131" pos:column="83"/></expr_stmt>

    <if pos:line="133" pos:column="5">if <condition pos:line="133" pos:column="8">(<expr><name pos:line="133" pos:column="9">err<pos:position pos:line="133" pos:column="12"/></name> <operator pos:line="133" pos:column="13">!=<pos:position pos:line="133" pos:column="15"/></operator> <name pos:line="133" pos:column="16">NULL<pos:position pos:line="133" pos:column="20"/></name></expr>)<pos:position pos:line="133" pos:column="21"/></condition><then pos:line="133" pos:column="21"> <block pos:line="133" pos:column="22">{
        <expr_stmt><expr><name pos:line="134" pos:column="9">err<pos:position pos:line="134" pos:column="12"/></name> <operator pos:line="134" pos:column="13">=<pos:position pos:line="134" pos:column="14"/></operator> <call><name pos:line="134" pos:column="15">dav_push_error<pos:position pos:line="134" pos:column="29"/></name><argument_list pos:line="134" pos:column="29">(<argument><expr><name><name pos:line="134" pos:column="30">r<pos:position pos:line="134" pos:column="31"/></name><operator pos:line="134" pos:column="31">-&gt;<pos:position pos:line="134" pos:column="36"/></operator><name pos:line="134" pos:column="33">pool<pos:position pos:line="134" pos:column="37"/></name></name></expr></argument>, <argument><expr><name><name pos:line="134" pos:column="39">err<pos:position pos:line="134" pos:column="42"/></name><operator pos:line="134" pos:column="42">-&gt;<pos:position pos:line="134" pos:column="47"/></operator><name pos:line="134" pos:column="44">status<pos:position pos:line="134" pos:column="50"/></name></name></expr></argument>, <argument><expr><literal type="number" pos:line="134" pos:column="52">0<pos:position pos:line="134" pos:column="53"/></literal></expr></argument>,
                             <argument><expr><call><name pos:line="135" pos:column="30">apr_psprintf<pos:position pos:line="135" pos:column="42"/></name><argument_list pos:line="135" pos:column="42">(<argument><expr><name><name pos:line="135" pos:column="43">r<pos:position pos:line="135" pos:column="44"/></name><operator pos:line="135" pos:column="44">-&gt;<pos:position pos:line="135" pos:column="49"/></operator><name pos:line="135" pos:column="46">pool<pos:position pos:line="135" pos:column="50"/></name></name></expr></argument>,
                                          <argument><expr><literal type="string" pos:line="136" pos:column="43">"Could not UPDATE %s."<pos:position pos:line="136" pos:column="65"/></literal></expr></argument>,
                                          <argument><expr><call><name pos:line="137" pos:column="43">ap_escape_html<pos:position pos:line="137" pos:column="57"/></name><argument_list pos:line="137" pos:column="57">(<argument><expr><name><name pos:line="137" pos:column="58">r<pos:position pos:line="137" pos:column="59"/></name><operator pos:line="137" pos:column="59">-&gt;<pos:position pos:line="137" pos:column="64"/></operator><name pos:line="137" pos:column="61">pool<pos:position pos:line="137" pos:column="65"/></name></name></expr></argument>, <argument><expr><name><name pos:line="137" pos:column="67">r<pos:position pos:line="137" pos:column="68"/></name><operator pos:line="137" pos:column="68">-&gt;<pos:position pos:line="137" pos:column="73"/></operator><name pos:line="137" pos:column="70">uri<pos:position pos:line="137" pos:column="73"/></name></name></expr></argument>)<pos:position pos:line="137" pos:column="74"/></argument_list></call></expr></argument>)<pos:position pos:line="137" pos:column="75"/></argument_list></call></expr></argument>,
                             <argument><expr><name pos:line="138" pos:column="30">err<pos:position pos:line="138" pos:column="33"/></name></expr></argument>)<pos:position pos:line="138" pos:column="34"/></argument_list></call></expr>;<pos:position pos:line="138" pos:column="35"/></expr_stmt>
        <return pos:line="139" pos:column="9">return <expr><call><name pos:line="139" pos:column="16">dav_handle_err<pos:position pos:line="139" pos:column="30"/></name><argument_list pos:line="139" pos:column="30">(<argument><expr><name pos:line="139" pos:column="31">r<pos:position pos:line="139" pos:column="32"/></name></expr></argument>, <argument><expr><name pos:line="139" pos:column="34">err<pos:position pos:line="139" pos:column="37"/></name></expr></argument>, <argument><expr><name pos:line="139" pos:column="39">multi_response<pos:position pos:line="139" pos:column="53"/></name></expr></argument>)<pos:position pos:line="139" pos:column="54"/></argument_list></call></expr>;<pos:position pos:line="139" pos:column="55"/></return>
    }<pos:position pos:line="140" pos:column="6"/></block></then></if>

    <comment type="block" pos:line="142" pos:column="5">/* set the Cache-Control header, per the spec */</comment>
    <expr_stmt><expr><call><name pos:line="143" pos:column="5">apr_table_setn<pos:position pos:line="143" pos:column="19"/></name><argument_list pos:line="143" pos:column="19">(<argument><expr><name><name pos:line="143" pos:column="20">r<pos:position pos:line="143" pos:column="21"/></name><operator pos:line="143" pos:column="21">-&gt;<pos:position pos:line="143" pos:column="26"/></operator><name pos:line="143" pos:column="23">headers_out<pos:position pos:line="143" pos:column="34"/></name></name></expr></argument>, <argument><expr><literal type="string" pos:line="143" pos:column="36">"Cache-Control"<pos:position pos:line="143" pos:column="51"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="143" pos:column="53">"no-cache"<pos:position pos:line="143" pos:column="63"/></literal></expr></argument>)<pos:position pos:line="143" pos:column="64"/></argument_list></call></expr>;<pos:position pos:line="143" pos:column="65"/></expr_stmt>

    <comment type="block" pos:line="145" pos:column="5">/* no body */</comment>
    <expr_stmt><expr><call><name pos:line="146" pos:column="5">ap_set_content_length<pos:position pos:line="146" pos:column="26"/></name><argument_list pos:line="146" pos:column="26">(<argument><expr><name pos:line="146" pos:column="27">r<pos:position pos:line="146" pos:column="28"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="146" pos:column="30">0<pos:position pos:line="146" pos:column="31"/></literal></expr></argument>)<pos:position pos:line="146" pos:column="32"/></argument_list></call></expr>;<pos:position pos:line="146" pos:column="33"/></expr_stmt>

    <return pos:line="148" pos:column="5">return <expr><name pos:line="148" pos:column="12">DONE<pos:position pos:line="148" pos:column="16"/></name></expr>;<pos:position pos:line="148" pos:column="17"/></return>
}<pos:position pos:line="149" pos:column="2"/></block></function></unit>

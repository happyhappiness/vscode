<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/httpd/gumtree/httpd_repos_function_3577_httpd-2.2.3.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">int<pos:position pos:line="1" pos:column="11"/></name></type>
<name pos:line="2" pos:column="1">check_posix_name<pos:position pos:line="2" pos:column="17"/></name><parameter_list pos:line="2" pos:column="17">(<parameter><decl><type><specifier pos:line="2" pos:column="18">const<pos:position pos:line="2" pos:column="23"/></specifier> <name pos:line="2" pos:column="24">uschar<pos:position pos:line="2" pos:column="30"/></name> <modifier pos:line="2" pos:column="31">*<pos:position pos:line="2" pos:column="32"/></modifier></type><name pos:line="2" pos:column="32">ptr<pos:position pos:line="2" pos:column="35"/></name></decl></parameter>, <parameter><decl><type><name pos:line="2" pos:column="37">int<pos:position pos:line="2" pos:column="40"/></name></type> <name pos:line="2" pos:column="41">len<pos:position pos:line="2" pos:column="44"/></name></decl></parameter>)<pos:position pos:line="2" pos:column="45"/></parameter_list>
<block pos:line="3" pos:column="1">{
<decl_stmt><decl><type><specifier pos:line="4" pos:column="1">register<pos:position pos:line="4" pos:column="9"/></specifier> <name pos:line="4" pos:column="10">int<pos:position pos:line="4" pos:column="13"/></name></type> <name pos:line="4" pos:column="14">yield<pos:position pos:line="4" pos:column="19"/></name> <init pos:line="4" pos:column="20">= <expr><literal type="number" pos:line="4" pos:column="22">0<pos:position pos:line="4" pos:column="23"/></literal></expr></init></decl>;<pos:position pos:line="4" pos:column="24"/></decl_stmt>
<while pos:line="5" pos:column="1">while <condition pos:line="5" pos:column="7">(<expr><name><name pos:line="5" pos:column="8">posix_name_lengths<pos:position pos:line="5" pos:column="26"/></name><index pos:line="5" pos:column="26">[<expr><name pos:line="5" pos:column="27">yield<pos:position pos:line="5" pos:column="32"/></name></expr>]<pos:position pos:line="5" pos:column="33"/></index></name> <operator pos:line="5" pos:column="34">!=<pos:position pos:line="5" pos:column="36"/></operator> <literal type="number" pos:line="5" pos:column="37">0<pos:position pos:line="5" pos:column="38"/></literal></expr>)<pos:position pos:line="5" pos:column="39"/></condition>
  <block pos:line="6" pos:column="3">{
  <if pos:line="7" pos:column="3">if <condition pos:line="7" pos:column="6">(<expr><name pos:line="7" pos:column="7">len<pos:position pos:line="7" pos:column="10"/></name> <operator pos:line="7" pos:column="11">==<pos:position pos:line="7" pos:column="13"/></operator> <name><name pos:line="7" pos:column="14">posix_name_lengths<pos:position pos:line="7" pos:column="32"/></name><index pos:line="7" pos:column="32">[<expr><name pos:line="7" pos:column="33">yield<pos:position pos:line="7" pos:column="38"/></name></expr>]<pos:position pos:line="7" pos:column="39"/></index></name> <operator pos:line="7" pos:column="40">&amp;&amp;<pos:position pos:line="7" pos:column="50"/></operator>
    <call><name pos:line="8" pos:column="5">strncmp<pos:position pos:line="8" pos:column="12"/></name><argument_list pos:line="8" pos:column="12">(<argument><expr><operator pos:line="8" pos:column="13">(<pos:position pos:line="8" pos:column="14"/></operator><specifier pos:line="8" pos:column="14">const<pos:position pos:line="8" pos:column="19"/></specifier> <name pos:line="8" pos:column="20">char<pos:position pos:line="8" pos:column="24"/></name> <operator pos:line="8" pos:column="25">*<pos:position pos:line="8" pos:column="26"/></operator><operator pos:line="8" pos:column="26">)<pos:position pos:line="8" pos:column="27"/></operator><name pos:line="8" pos:column="27">ptr<pos:position pos:line="8" pos:column="30"/></name></expr></argument>, <argument><expr><name><name pos:line="8" pos:column="32">posix_names<pos:position pos:line="8" pos:column="43"/></name><index pos:line="8" pos:column="43">[<expr><name pos:line="8" pos:column="44">yield<pos:position pos:line="8" pos:column="49"/></name></expr>]<pos:position pos:line="8" pos:column="50"/></index></name></expr></argument>, <argument><expr><name pos:line="8" pos:column="52">len<pos:position pos:line="8" pos:column="55"/></name></expr></argument>)<pos:position pos:line="8" pos:column="56"/></argument_list></call> <operator pos:line="8" pos:column="57">==<pos:position pos:line="8" pos:column="59"/></operator> <literal type="number" pos:line="8" pos:column="60">0<pos:position pos:line="8" pos:column="61"/></literal></expr>)<pos:position pos:line="8" pos:column="62"/></condition><then pos:line="8" pos:column="62"> <block type="pseudo"><return pos:line="8" pos:column="63">return <expr><name pos:line="8" pos:column="70">yield<pos:position pos:line="8" pos:column="75"/></name></expr>;<pos:position pos:line="8" pos:column="76"/></return></block></then></if>
  <expr_stmt><expr><name pos:line="9" pos:column="3">yield<pos:position pos:line="9" pos:column="8"/></name><operator pos:line="9" pos:column="8">++<pos:position pos:line="9" pos:column="10"/></operator></expr>;<pos:position pos:line="9" pos:column="11"/></expr_stmt>
  }<pos:position pos:line="10" pos:column="4"/></block></while>
<return pos:line="11" pos:column="1">return <expr><operator pos:line="11" pos:column="8">-<pos:position pos:line="11" pos:column="9"/></operator><literal type="number" pos:line="11" pos:column="9">1<pos:position pos:line="11" pos:column="10"/></literal></expr>;<pos:position pos:line="11" pos:column="11"/></return>
}<pos:position pos:line="12" pos:column="2"/></block></function></unit>

<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/httpd/gumtree/httpd_function_7040.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">int<pos:position pos:line="1" pos:column="11"/></name></type> <name pos:line="1" pos:column="12">initialize_tables<pos:position pos:line="1" pos:column="29"/></name><parameter_list pos:line="1" pos:column="29">(<parameter><decl><type><name pos:line="1" pos:column="30">server_rec<pos:position pos:line="1" pos:column="40"/></name> <modifier pos:line="1" pos:column="41">*<pos:position pos:line="1" pos:column="42"/></modifier></type><name pos:line="1" pos:column="42">s<pos:position pos:line="1" pos:column="43"/></name></decl></parameter>, <parameter><decl><type><name pos:line="1" pos:column="45">apr_pool_t<pos:position pos:line="1" pos:column="55"/></name> <modifier pos:line="1" pos:column="56">*<pos:position pos:line="1" pos:column="57"/></modifier></type><name pos:line="1" pos:column="57">ctx<pos:position pos:line="1" pos:column="60"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="61"/></parameter_list>
<block pos:line="2" pos:column="1">{
    <decl_stmt><decl><type><name pos:line="3" pos:column="5">unsigned<pos:position pos:line="3" pos:column="13"/></name> <name pos:line="3" pos:column="14">long<pos:position pos:line="3" pos:column="18"/></name></type> <name pos:line="3" pos:column="19">idx<pos:position pos:line="3" pos:column="22"/></name></decl>;<pos:position pos:line="3" pos:column="23"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="4" pos:column="5">apr_status_t<pos:position pos:line="4" pos:column="17"/></name></type>   <name pos:line="4" pos:column="20">sts<pos:position pos:line="4" pos:column="23"/></name></decl>;<pos:position pos:line="4" pos:column="24"/></decl_stmt>
    <decl_stmt><decl><type><specifier pos:line="5" pos:column="5">const<pos:position pos:line="5" pos:column="10"/></specifier> <name pos:line="5" pos:column="11">char<pos:position pos:line="5" pos:column="15"/></name> <modifier pos:line="5" pos:column="16">*<pos:position pos:line="5" pos:column="17"/></modifier></type><name pos:line="5" pos:column="17">tempdir<pos:position pos:line="5" pos:column="24"/></name></decl>;<pos:position pos:line="5" pos:column="25"/></decl_stmt>

    <comment type="block" pos:line="7" pos:column="5">/* set up client list */</comment>

    <expr_stmt><expr><name pos:line="9" pos:column="5">sts<pos:position pos:line="9" pos:column="8"/></name> <operator pos:line="9" pos:column="9">=<pos:position pos:line="9" pos:column="10"/></operator> <call><name pos:line="9" pos:column="11">apr_temp_dir_get<pos:position pos:line="9" pos:column="27"/></name><argument_list pos:line="9" pos:column="27">(<argument><expr><operator pos:line="9" pos:column="28">&amp;<pos:position pos:line="9" pos:column="33"/></operator><name pos:line="9" pos:column="29">tempdir<pos:position pos:line="9" pos:column="36"/></name></expr></argument>, <argument><expr><name pos:line="9" pos:column="38">ctx<pos:position pos:line="9" pos:column="41"/></name></expr></argument>)<pos:position pos:line="9" pos:column="42"/></argument_list></call></expr>;<pos:position pos:line="9" pos:column="43"/></expr_stmt>
    <if pos:line="10" pos:column="5">if <condition pos:line="10" pos:column="8">(<expr><name pos:line="10" pos:column="9">APR_SUCCESS<pos:position pos:line="10" pos:column="20"/></name> <operator pos:line="10" pos:column="21">!=<pos:position pos:line="10" pos:column="23"/></operator> <name pos:line="10" pos:column="24">sts<pos:position pos:line="10" pos:column="27"/></name></expr>)<pos:position pos:line="10" pos:column="28"/></condition><then pos:line="10" pos:column="28"> <block pos:line="10" pos:column="29">{
        <expr_stmt><expr><call><name pos:line="11" pos:column="9">ap_log_error<pos:position pos:line="11" pos:column="21"/></name><argument_list pos:line="11" pos:column="21">(<argument><expr><name pos:line="11" pos:column="22">APLOG_MARK<pos:position pos:line="11" pos:column="32"/></name></expr></argument>, <argument><expr><name pos:line="11" pos:column="34">APLOG_ERR<pos:position pos:line="11" pos:column="43"/></name></expr></argument>, <argument><expr><name pos:line="11" pos:column="45">sts<pos:position pos:line="11" pos:column="48"/></name></expr></argument>, <argument><expr><name pos:line="11" pos:column="50">s<pos:position pos:line="11" pos:column="51"/></name></expr></argument>, <argument><expr><call><name pos:line="11" pos:column="53">APLOGNO<pos:position pos:line="11" pos:column="60"/></name><argument_list pos:line="11" pos:column="60">(<argument><expr><literal type="number" pos:line="11" pos:column="61">01761<pos:position pos:line="11" pos:column="66"/></literal></expr></argument>)<pos:position pos:line="11" pos:column="67"/></argument_list></call>
                     <literal type="string" pos:line="12" pos:column="22">"Failed to find temporary directory"<pos:position pos:line="12" pos:column="58"/></literal></expr></argument>)<pos:position pos:line="12" pos:column="59"/></argument_list></call></expr>;<pos:position pos:line="12" pos:column="60"/></expr_stmt>
        <expr_stmt><expr><call><name pos:line="13" pos:column="9">log_error_and_cleanup<pos:position pos:line="13" pos:column="30"/></name><argument_list pos:line="13" pos:column="30">(<argument><expr><literal type="string" pos:line="13" pos:column="31">"failed to find temp dir"<pos:position pos:line="13" pos:column="56"/></literal></expr></argument>, <argument><expr><name pos:line="13" pos:column="58">sts<pos:position pos:line="13" pos:column="61"/></name></expr></argument>, <argument><expr><name pos:line="13" pos:column="63">s<pos:position pos:line="13" pos:column="64"/></name></expr></argument>)<pos:position pos:line="13" pos:column="65"/></argument_list></call></expr>;<pos:position pos:line="13" pos:column="66"/></expr_stmt>
        <return pos:line="14" pos:column="9">return <expr><name pos:line="14" pos:column="16">HTTP_INTERNAL_SERVER_ERROR<pos:position pos:line="14" pos:column="42"/></name></expr>;<pos:position pos:line="14" pos:column="43"/></return>
    }<pos:position pos:line="15" pos:column="6"/></block></then></if>

    <comment type="block" pos:line="17" pos:column="5">/* Create the shared memory segment */</comment>

    <comment type="block" pos:line="19" pos:column="5">/*
     * Create a unique filename using our pid. This information is
     * stashed in the global variable so the children inherit it.
     */</comment>
    <expr_stmt><expr><name pos:line="23" pos:column="5">client_shm_filename<pos:position pos:line="23" pos:column="24"/></name> <operator pos:line="23" pos:column="25">=<pos:position pos:line="23" pos:column="26"/></operator> <call><name pos:line="23" pos:column="27">apr_psprintf<pos:position pos:line="23" pos:column="39"/></name><argument_list pos:line="23" pos:column="39">(<argument><expr><name pos:line="23" pos:column="40">ctx<pos:position pos:line="23" pos:column="43"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="23" pos:column="45">"%s/authdigest_shm.%"<pos:position pos:line="23" pos:column="66"/></literal><name pos:line="23" pos:column="66">APR_PID_T_FMT<pos:position pos:line="23" pos:column="79"/></name></expr></argument>, <argument><expr><name pos:line="23" pos:column="81">tempdir<pos:position pos:line="23" pos:column="88"/></name></expr></argument>,
                                       <argument><expr><call><name pos:line="24" pos:column="40">getpid<pos:position pos:line="24" pos:column="46"/></name><argument_list pos:line="24" pos:column="46">()<pos:position pos:line="24" pos:column="48"/></argument_list></call></expr></argument>)<pos:position pos:line="24" pos:column="49"/></argument_list></call></expr>;<pos:position pos:line="24" pos:column="50"/></expr_stmt>

    <comment type="block" pos:line="26" pos:column="5">/* Now create that segment */</comment>
    <expr_stmt><expr><name pos:line="27" pos:column="5">sts<pos:position pos:line="27" pos:column="8"/></name> <operator pos:line="27" pos:column="9">=<pos:position pos:line="27" pos:column="10"/></operator> <call><name pos:line="27" pos:column="11">apr_shm_create<pos:position pos:line="27" pos:column="25"/></name><argument_list pos:line="27" pos:column="25">(<argument><expr><operator pos:line="27" pos:column="26">&amp;<pos:position pos:line="27" pos:column="31"/></operator><name pos:line="27" pos:column="27">client_shm<pos:position pos:line="27" pos:column="37"/></name></expr></argument>, <argument><expr><name pos:line="27" pos:column="39">shmem_size<pos:position pos:line="27" pos:column="49"/></name></expr></argument>,
                        <argument><expr><name pos:line="28" pos:column="25">client_shm_filename<pos:position pos:line="28" pos:column="44"/></name></expr></argument>, <argument><expr><name pos:line="28" pos:column="46">ctx<pos:position pos:line="28" pos:column="49"/></name></expr></argument>)<pos:position pos:line="28" pos:column="50"/></argument_list></call></expr>;<pos:position pos:line="28" pos:column="51"/></expr_stmt>
    <if pos:line="29" pos:column="5">if <condition pos:line="29" pos:column="8">(<expr><name pos:line="29" pos:column="9">APR_SUCCESS<pos:position pos:line="29" pos:column="20"/></name> <operator pos:line="29" pos:column="21">!=<pos:position pos:line="29" pos:column="23"/></operator> <name pos:line="29" pos:column="24">sts<pos:position pos:line="29" pos:column="27"/></name></expr>)<pos:position pos:line="29" pos:column="28"/></condition><then pos:line="29" pos:column="28"> <block pos:line="29" pos:column="29">{
        <expr_stmt><expr><call><name pos:line="30" pos:column="9">ap_log_error<pos:position pos:line="30" pos:column="21"/></name><argument_list pos:line="30" pos:column="21">(<argument><expr><name pos:line="30" pos:column="22">APLOG_MARK<pos:position pos:line="30" pos:column="32"/></name></expr></argument>, <argument><expr><name pos:line="30" pos:column="34">APLOG_ERR<pos:position pos:line="30" pos:column="43"/></name></expr></argument>, <argument><expr><name pos:line="30" pos:column="45">sts<pos:position pos:line="30" pos:column="48"/></name></expr></argument>, <argument><expr><name pos:line="30" pos:column="50">s<pos:position pos:line="30" pos:column="51"/></name></expr></argument>, <argument><expr><call><name pos:line="30" pos:column="53">APLOGNO<pos:position pos:line="30" pos:column="60"/></name><argument_list pos:line="30" pos:column="60">(<argument><expr><literal type="number" pos:line="30" pos:column="61">01762<pos:position pos:line="30" pos:column="66"/></literal></expr></argument>)<pos:position pos:line="30" pos:column="67"/></argument_list></call>
                     <literal type="string" pos:line="31" pos:column="22">"Failed to create shared memory segment on file %s"<pos:position pos:line="31" pos:column="73"/></literal></expr></argument>,
                     <argument><expr><name pos:line="32" pos:column="22">client_shm_filename<pos:position pos:line="32" pos:column="41"/></name></expr></argument>)<pos:position pos:line="32" pos:column="42"/></argument_list></call></expr>;<pos:position pos:line="32" pos:column="43"/></expr_stmt>
        <expr_stmt><expr><call><name pos:line="33" pos:column="9">log_error_and_cleanup<pos:position pos:line="33" pos:column="30"/></name><argument_list pos:line="33" pos:column="30">(<argument><expr><literal type="string" pos:line="33" pos:column="31">"failed to initialize shm"<pos:position pos:line="33" pos:column="57"/></literal></expr></argument>, <argument><expr><name pos:line="33" pos:column="59">sts<pos:position pos:line="33" pos:column="62"/></name></expr></argument>, <argument><expr><name pos:line="33" pos:column="64">s<pos:position pos:line="33" pos:column="65"/></name></expr></argument>)<pos:position pos:line="33" pos:column="66"/></argument_list></call></expr>;<pos:position pos:line="33" pos:column="67"/></expr_stmt>
        <return pos:line="34" pos:column="9">return <expr><name pos:line="34" pos:column="16">HTTP_INTERNAL_SERVER_ERROR<pos:position pos:line="34" pos:column="42"/></name></expr>;<pos:position pos:line="34" pos:column="43"/></return>
    }<pos:position pos:line="35" pos:column="6"/></block></then></if>

    <expr_stmt><expr><name pos:line="37" pos:column="5">sts<pos:position pos:line="37" pos:column="8"/></name> <operator pos:line="37" pos:column="9">=<pos:position pos:line="37" pos:column="10"/></operator> <call><name pos:line="37" pos:column="11">apr_rmm_init<pos:position pos:line="37" pos:column="23"/></name><argument_list pos:line="37" pos:column="23">(<argument><expr><operator pos:line="37" pos:column="24">&amp;<pos:position pos:line="37" pos:column="29"/></operator><name pos:line="37" pos:column="25">client_rmm<pos:position pos:line="37" pos:column="35"/></name></expr></argument>,
                       <argument><expr><name pos:line="38" pos:column="24">NULL<pos:position pos:line="38" pos:column="28"/></name></expr></argument>, <comment type="block" pos:line="38" pos:column="30">/* no lock, we'll do the locking ourselves */</comment>
                       <argument><expr><call><name pos:line="39" pos:column="24">apr_shm_baseaddr_get<pos:position pos:line="39" pos:column="44"/></name><argument_list pos:line="39" pos:column="44">(<argument><expr><name pos:line="39" pos:column="45">client_shm<pos:position pos:line="39" pos:column="55"/></name></expr></argument>)<pos:position pos:line="39" pos:column="56"/></argument_list></call></expr></argument>,
                       <argument><expr><name pos:line="40" pos:column="24">shmem_size<pos:position pos:line="40" pos:column="34"/></name></expr></argument>, <argument><expr><name pos:line="40" pos:column="36">ctx<pos:position pos:line="40" pos:column="39"/></name></expr></argument>)<pos:position pos:line="40" pos:column="40"/></argument_list></call></expr>;<pos:position pos:line="40" pos:column="41"/></expr_stmt>
    <if pos:line="41" pos:column="5">if <condition pos:line="41" pos:column="8">(<expr><name pos:line="41" pos:column="9">sts<pos:position pos:line="41" pos:column="12"/></name> <operator pos:line="41" pos:column="13">!=<pos:position pos:line="41" pos:column="15"/></operator> <name pos:line="41" pos:column="16">APR_SUCCESS<pos:position pos:line="41" pos:column="27"/></name></expr>)<pos:position pos:line="41" pos:column="28"/></condition><then pos:line="41" pos:column="28"> <block pos:line="41" pos:column="29">{
        <expr_stmt><expr><call><name pos:line="42" pos:column="9">log_error_and_cleanup<pos:position pos:line="42" pos:column="30"/></name><argument_list pos:line="42" pos:column="30">(<argument><expr><literal type="string" pos:line="42" pos:column="31">"failed to initialize rmm"<pos:position pos:line="42" pos:column="57"/></literal></expr></argument>, <argument><expr><name pos:line="42" pos:column="59">sts<pos:position pos:line="42" pos:column="62"/></name></expr></argument>, <argument><expr><name pos:line="42" pos:column="64">s<pos:position pos:line="42" pos:column="65"/></name></expr></argument>)<pos:position pos:line="42" pos:column="66"/></argument_list></call></expr>;<pos:position pos:line="42" pos:column="67"/></expr_stmt>
        <return pos:line="43" pos:column="9">return <expr><operator pos:line="43" pos:column="16">!<pos:position pos:line="43" pos:column="17"/></operator><name pos:line="43" pos:column="17">OK<pos:position pos:line="43" pos:column="19"/></name></expr>;<pos:position pos:line="43" pos:column="20"/></return>
    }<pos:position pos:line="44" pos:column="6"/></block></then></if>

    <expr_stmt><expr><name pos:line="46" pos:column="5">client_list<pos:position pos:line="46" pos:column="16"/></name> <operator pos:line="46" pos:column="17">=<pos:position pos:line="46" pos:column="18"/></operator> <call><name pos:line="46" pos:column="19">apr_rmm_addr_get<pos:position pos:line="46" pos:column="35"/></name><argument_list pos:line="46" pos:column="35">(<argument><expr><name pos:line="46" pos:column="36">client_rmm<pos:position pos:line="46" pos:column="46"/></name></expr></argument>, <argument><expr><call><name pos:line="46" pos:column="48">apr_rmm_malloc<pos:position pos:line="46" pos:column="62"/></name><argument_list pos:line="46" pos:column="62">(<argument><expr><name pos:line="46" pos:column="63">client_rmm<pos:position pos:line="46" pos:column="73"/></name></expr></argument>, <argument><expr><sizeof pos:line="46" pos:column="75">sizeof<argument_list pos:line="46" pos:column="81">(<argument><expr><operator pos:line="46" pos:column="82">*<pos:position pos:line="46" pos:column="83"/></operator><name pos:line="46" pos:column="83">client_list<pos:position pos:line="46" pos:column="94"/></name></expr></argument>)<pos:position pos:line="46" pos:column="95"/></argument_list></sizeof> <operator pos:line="46" pos:column="96">+<pos:position pos:line="46" pos:column="97"/></operator>
                                                          <sizeof pos:line="47" pos:column="59">sizeof<argument_list pos:line="47" pos:column="65">(<argument><expr><name pos:line="47" pos:column="66">client_entry<pos:position pos:line="47" pos:column="78"/></name><operator pos:line="47" pos:column="78">*<pos:position pos:line="47" pos:column="79"/></operator></expr></argument>)<pos:position pos:line="47" pos:column="80"/></argument_list></sizeof><operator pos:line="47" pos:column="80">*<pos:position pos:line="47" pos:column="81"/></operator><name pos:line="47" pos:column="81">num_buckets<pos:position pos:line="47" pos:column="92"/></name></expr></argument>)<pos:position pos:line="47" pos:column="93"/></argument_list></call></expr></argument>)<pos:position pos:line="47" pos:column="94"/></argument_list></call></expr>;<pos:position pos:line="47" pos:column="95"/></expr_stmt>
    <if pos:line="48" pos:column="5">if <condition pos:line="48" pos:column="8">(<expr><operator pos:line="48" pos:column="9">!<pos:position pos:line="48" pos:column="10"/></operator><name pos:line="48" pos:column="10">client_list<pos:position pos:line="48" pos:column="21"/></name></expr>)<pos:position pos:line="48" pos:column="22"/></condition><then pos:line="48" pos:column="22"> <block pos:line="48" pos:column="23">{
        <expr_stmt><expr><call><name pos:line="49" pos:column="9">log_error_and_cleanup<pos:position pos:line="49" pos:column="30"/></name><argument_list pos:line="49" pos:column="30">(<argument><expr><literal type="string" pos:line="49" pos:column="31">"failed to allocate shared memory"<pos:position pos:line="49" pos:column="65"/></literal></expr></argument>, <argument><expr><operator pos:line="49" pos:column="67">-<pos:position pos:line="49" pos:column="68"/></operator><literal type="number" pos:line="49" pos:column="68">1<pos:position pos:line="49" pos:column="69"/></literal></expr></argument>, <argument><expr><name pos:line="49" pos:column="71">s<pos:position pos:line="49" pos:column="72"/></name></expr></argument>)<pos:position pos:line="49" pos:column="73"/></argument_list></call></expr>;<pos:position pos:line="49" pos:column="74"/></expr_stmt>
        <return pos:line="50" pos:column="9">return <expr><operator pos:line="50" pos:column="16">!<pos:position pos:line="50" pos:column="17"/></operator><name pos:line="50" pos:column="17">OK<pos:position pos:line="50" pos:column="19"/></name></expr>;<pos:position pos:line="50" pos:column="20"/></return>
    }<pos:position pos:line="51" pos:column="6"/></block></then></if>
    <expr_stmt><expr><name><name pos:line="52" pos:column="5">client_list<pos:position pos:line="52" pos:column="16"/></name><operator pos:line="52" pos:column="16">-&gt;<pos:position pos:line="52" pos:column="21"/></operator><name pos:line="52" pos:column="18">table<pos:position pos:line="52" pos:column="23"/></name></name> <operator pos:line="52" pos:column="24">=<pos:position pos:line="52" pos:column="25"/></operator> <operator pos:line="52" pos:column="26">(<pos:position pos:line="52" pos:column="27"/></operator><name pos:line="52" pos:column="27">client_entry<pos:position pos:line="52" pos:column="39"/></name><operator pos:line="52" pos:column="39">*<pos:position pos:line="52" pos:column="40"/></operator><operator pos:line="52" pos:column="40">*<pos:position pos:line="52" pos:column="41"/></operator><operator pos:line="52" pos:column="41">)<pos:position pos:line="52" pos:column="42"/></operator> <operator pos:line="52" pos:column="43">(<pos:position pos:line="52" pos:column="44"/></operator><name pos:line="52" pos:column="44">client_list<pos:position pos:line="52" pos:column="55"/></name> <operator pos:line="52" pos:column="56">+<pos:position pos:line="52" pos:column="57"/></operator> <literal type="number" pos:line="52" pos:column="58">1<pos:position pos:line="52" pos:column="59"/></literal><operator pos:line="52" pos:column="59">)<pos:position pos:line="52" pos:column="60"/></operator></expr>;<pos:position pos:line="52" pos:column="61"/></expr_stmt>
    <for pos:line="53" pos:column="5">for <control pos:line="53" pos:column="9">(<init><expr><name pos:line="53" pos:column="10">idx<pos:position pos:line="53" pos:column="13"/></name> <operator pos:line="53" pos:column="14">=<pos:position pos:line="53" pos:column="15"/></operator> <literal type="number" pos:line="53" pos:column="16">0<pos:position pos:line="53" pos:column="17"/></literal></expr>;<pos:position pos:line="53" pos:column="18"/></init> <condition><expr><name pos:line="53" pos:column="19">idx<pos:position pos:line="53" pos:column="22"/></name> <operator pos:line="53" pos:column="23">&lt;<pos:position pos:line="53" pos:column="27"/></operator> <name pos:line="53" pos:column="25">num_buckets<pos:position pos:line="53" pos:column="36"/></name></expr>;<pos:position pos:line="53" pos:column="37"/></condition> <incr><expr><name pos:line="53" pos:column="38">idx<pos:position pos:line="53" pos:column="41"/></name><operator pos:line="53" pos:column="41">++<pos:position pos:line="53" pos:column="43"/></operator></expr></incr>)<pos:position pos:line="53" pos:column="44"/></control> <block pos:line="53" pos:column="45">{
        <expr_stmt><expr><name><name pos:line="54" pos:column="9">client_list<pos:position pos:line="54" pos:column="20"/></name><operator pos:line="54" pos:column="20">-&gt;<pos:position pos:line="54" pos:column="25"/></operator><name pos:line="54" pos:column="22">table<pos:position pos:line="54" pos:column="27"/></name><index pos:line="54" pos:column="27">[<expr><name pos:line="54" pos:column="28">idx<pos:position pos:line="54" pos:column="31"/></name></expr>]<pos:position pos:line="54" pos:column="32"/></index></name> <operator pos:line="54" pos:column="33">=<pos:position pos:line="54" pos:column="34"/></operator> <name pos:line="54" pos:column="35">NULL<pos:position pos:line="54" pos:column="39"/></name></expr>;<pos:position pos:line="54" pos:column="40"/></expr_stmt>
    }<pos:position pos:line="55" pos:column="6"/></block></for>
    <expr_stmt><expr><name><name pos:line="56" pos:column="5">client_list<pos:position pos:line="56" pos:column="16"/></name><operator pos:line="56" pos:column="16">-&gt;<pos:position pos:line="56" pos:column="21"/></operator><name pos:line="56" pos:column="18">tbl_len<pos:position pos:line="56" pos:column="25"/></name></name>     <operator pos:line="56" pos:column="30">=<pos:position pos:line="56" pos:column="31"/></operator> <name pos:line="56" pos:column="32">num_buckets<pos:position pos:line="56" pos:column="43"/></name></expr>;<pos:position pos:line="56" pos:column="44"/></expr_stmt>
    <expr_stmt><expr><name><name pos:line="57" pos:column="5">client_list<pos:position pos:line="57" pos:column="16"/></name><operator pos:line="57" pos:column="16">-&gt;<pos:position pos:line="57" pos:column="21"/></operator><name pos:line="57" pos:column="18">num_entries<pos:position pos:line="57" pos:column="29"/></name></name> <operator pos:line="57" pos:column="30">=<pos:position pos:line="57" pos:column="31"/></operator> <literal type="number" pos:line="57" pos:column="32">0<pos:position pos:line="57" pos:column="33"/></literal></expr>;<pos:position pos:line="57" pos:column="34"/></expr_stmt>

    <expr_stmt><expr><name pos:line="59" pos:column="5">sts<pos:position pos:line="59" pos:column="8"/></name> <operator pos:line="59" pos:column="9">=<pos:position pos:line="59" pos:column="10"/></operator> <call><name pos:line="59" pos:column="11">ap_global_mutex_create<pos:position pos:line="59" pos:column="33"/></name><argument_list pos:line="59" pos:column="33">(<argument><expr><operator pos:line="59" pos:column="34">&amp;<pos:position pos:line="59" pos:column="39"/></operator><name pos:line="59" pos:column="35">client_lock<pos:position pos:line="59" pos:column="46"/></name></expr></argument>, <argument><expr><name pos:line="59" pos:column="48">NULL<pos:position pos:line="59" pos:column="52"/></name></expr></argument>, <argument><expr><name pos:line="59" pos:column="54">client_mutex_type<pos:position pos:line="59" pos:column="71"/></name></expr></argument>, <argument><expr><name pos:line="59" pos:column="73">NULL<pos:position pos:line="59" pos:column="77"/></name></expr></argument>,
                                 <argument><expr><name pos:line="60" pos:column="34">s<pos:position pos:line="60" pos:column="35"/></name></expr></argument>, <argument><expr><name pos:line="60" pos:column="37">ctx<pos:position pos:line="60" pos:column="40"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="60" pos:column="42">0<pos:position pos:line="60" pos:column="43"/></literal></expr></argument>)<pos:position pos:line="60" pos:column="44"/></argument_list></call></expr>;<pos:position pos:line="60" pos:column="45"/></expr_stmt>
    <if pos:line="61" pos:column="5">if <condition pos:line="61" pos:column="8">(<expr><name pos:line="61" pos:column="9">sts<pos:position pos:line="61" pos:column="12"/></name> <operator pos:line="61" pos:column="13">!=<pos:position pos:line="61" pos:column="15"/></operator> <name pos:line="61" pos:column="16">APR_SUCCESS<pos:position pos:line="61" pos:column="27"/></name></expr>)<pos:position pos:line="61" pos:column="28"/></condition><then pos:line="61" pos:column="28"> <block pos:line="61" pos:column="29">{
        <expr_stmt><expr><call><name pos:line="62" pos:column="9">log_error_and_cleanup<pos:position pos:line="62" pos:column="30"/></name><argument_list pos:line="62" pos:column="30">(<argument><expr><literal type="string" pos:line="62" pos:column="31">"failed to create lock (client_lock)"<pos:position pos:line="62" pos:column="68"/></literal></expr></argument>, <argument><expr><name pos:line="62" pos:column="70">sts<pos:position pos:line="62" pos:column="73"/></name></expr></argument>, <argument><expr><name pos:line="62" pos:column="75">s<pos:position pos:line="62" pos:column="76"/></name></expr></argument>)<pos:position pos:line="62" pos:column="77"/></argument_list></call></expr>;<pos:position pos:line="62" pos:column="78"/></expr_stmt>
        <return pos:line="63" pos:column="9">return <expr><operator pos:line="63" pos:column="16">!<pos:position pos:line="63" pos:column="17"/></operator><name pos:line="63" pos:column="17">OK<pos:position pos:line="63" pos:column="19"/></name></expr>;<pos:position pos:line="63" pos:column="20"/></return>
    }<pos:position pos:line="64" pos:column="6"/></block></then></if>


    <comment type="block" pos:line="67" pos:column="5">/* setup opaque */</comment>

    <expr_stmt><expr><name pos:line="69" pos:column="5">opaque_cntr<pos:position pos:line="69" pos:column="16"/></name> <operator pos:line="69" pos:column="17">=<pos:position pos:line="69" pos:column="18"/></operator> <call><name pos:line="69" pos:column="19">apr_rmm_addr_get<pos:position pos:line="69" pos:column="35"/></name><argument_list pos:line="69" pos:column="35">(<argument><expr><name pos:line="69" pos:column="36">client_rmm<pos:position pos:line="69" pos:column="46"/></name></expr></argument>, <argument><expr><call><name pos:line="69" pos:column="48">apr_rmm_malloc<pos:position pos:line="69" pos:column="62"/></name><argument_list pos:line="69" pos:column="62">(<argument><expr><name pos:line="69" pos:column="63">client_rmm<pos:position pos:line="69" pos:column="73"/></name></expr></argument>, <argument><expr><sizeof pos:line="69" pos:column="75">sizeof<argument_list pos:line="69" pos:column="81">(<argument><expr><operator pos:line="69" pos:column="82">*<pos:position pos:line="69" pos:column="83"/></operator><name pos:line="69" pos:column="83">opaque_cntr<pos:position pos:line="69" pos:column="94"/></name></expr></argument>)<pos:position pos:line="69" pos:column="95"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="69" pos:column="96"/></argument_list></call></expr></argument>)<pos:position pos:line="69" pos:column="97"/></argument_list></call></expr>;<pos:position pos:line="69" pos:column="98"/></expr_stmt>
    <if pos:line="70" pos:column="5">if <condition pos:line="70" pos:column="8">(<expr><name pos:line="70" pos:column="9">opaque_cntr<pos:position pos:line="70" pos:column="20"/></name> <operator pos:line="70" pos:column="21">==<pos:position pos:line="70" pos:column="23"/></operator> <name pos:line="70" pos:column="24">NULL<pos:position pos:line="70" pos:column="28"/></name></expr>)<pos:position pos:line="70" pos:column="29"/></condition><then pos:line="70" pos:column="29"> <block pos:line="70" pos:column="30">{
        <expr_stmt><expr><call><name pos:line="71" pos:column="9">log_error_and_cleanup<pos:position pos:line="71" pos:column="30"/></name><argument_list pos:line="71" pos:column="30">(<argument><expr><literal type="string" pos:line="71" pos:column="31">"failed to allocate shared memory"<pos:position pos:line="71" pos:column="65"/></literal></expr></argument>, <argument><expr><operator pos:line="71" pos:column="67">-<pos:position pos:line="71" pos:column="68"/></operator><literal type="number" pos:line="71" pos:column="68">1<pos:position pos:line="71" pos:column="69"/></literal></expr></argument>, <argument><expr><name pos:line="71" pos:column="71">s<pos:position pos:line="71" pos:column="72"/></name></expr></argument>)<pos:position pos:line="71" pos:column="73"/></argument_list></call></expr>;<pos:position pos:line="71" pos:column="74"/></expr_stmt>
        <return pos:line="72" pos:column="9">return <expr><operator pos:line="72" pos:column="16">!<pos:position pos:line="72" pos:column="17"/></operator><name pos:line="72" pos:column="17">OK<pos:position pos:line="72" pos:column="19"/></name></expr>;<pos:position pos:line="72" pos:column="20"/></return>
    }<pos:position pos:line="73" pos:column="6"/></block></then></if>
    <expr_stmt><expr><operator pos:line="74" pos:column="5">*<pos:position pos:line="74" pos:column="6"/></operator><name pos:line="74" pos:column="6">opaque_cntr<pos:position pos:line="74" pos:column="17"/></name> <operator pos:line="74" pos:column="18">=<pos:position pos:line="74" pos:column="19"/></operator> <literal type="number" pos:line="74" pos:column="20">1UL<pos:position pos:line="74" pos:column="23"/></literal></expr>;<pos:position pos:line="74" pos:column="24"/></expr_stmt>

    <expr_stmt><expr><name pos:line="76" pos:column="5">sts<pos:position pos:line="76" pos:column="8"/></name> <operator pos:line="76" pos:column="9">=<pos:position pos:line="76" pos:column="10"/></operator> <call><name pos:line="76" pos:column="11">ap_global_mutex_create<pos:position pos:line="76" pos:column="33"/></name><argument_list pos:line="76" pos:column="33">(<argument><expr><operator pos:line="76" pos:column="34">&amp;<pos:position pos:line="76" pos:column="39"/></operator><name pos:line="76" pos:column="35">opaque_lock<pos:position pos:line="76" pos:column="46"/></name></expr></argument>, <argument><expr><name pos:line="76" pos:column="48">NULL<pos:position pos:line="76" pos:column="52"/></name></expr></argument>, <argument><expr><name pos:line="76" pos:column="54">opaque_mutex_type<pos:position pos:line="76" pos:column="71"/></name></expr></argument>, <argument><expr><name pos:line="76" pos:column="73">NULL<pos:position pos:line="76" pos:column="77"/></name></expr></argument>,
                                 <argument><expr><name pos:line="77" pos:column="34">s<pos:position pos:line="77" pos:column="35"/></name></expr></argument>, <argument><expr><name pos:line="77" pos:column="37">ctx<pos:position pos:line="77" pos:column="40"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="77" pos:column="42">0<pos:position pos:line="77" pos:column="43"/></literal></expr></argument>)<pos:position pos:line="77" pos:column="44"/></argument_list></call></expr>;<pos:position pos:line="77" pos:column="45"/></expr_stmt>
    <if pos:line="78" pos:column="5">if <condition pos:line="78" pos:column="8">(<expr><name pos:line="78" pos:column="9">sts<pos:position pos:line="78" pos:column="12"/></name> <operator pos:line="78" pos:column="13">!=<pos:position pos:line="78" pos:column="15"/></operator> <name pos:line="78" pos:column="16">APR_SUCCESS<pos:position pos:line="78" pos:column="27"/></name></expr>)<pos:position pos:line="78" pos:column="28"/></condition><then pos:line="78" pos:column="28"> <block pos:line="78" pos:column="29">{
        <expr_stmt><expr><call><name pos:line="79" pos:column="9">log_error_and_cleanup<pos:position pos:line="79" pos:column="30"/></name><argument_list pos:line="79" pos:column="30">(<argument><expr><literal type="string" pos:line="79" pos:column="31">"failed to create lock (opaque_lock)"<pos:position pos:line="79" pos:column="68"/></literal></expr></argument>, <argument><expr><name pos:line="79" pos:column="70">sts<pos:position pos:line="79" pos:column="73"/></name></expr></argument>, <argument><expr><name pos:line="79" pos:column="75">s<pos:position pos:line="79" pos:column="76"/></name></expr></argument>)<pos:position pos:line="79" pos:column="77"/></argument_list></call></expr>;<pos:position pos:line="79" pos:column="78"/></expr_stmt>
        <return pos:line="80" pos:column="9">return <expr><operator pos:line="80" pos:column="16">!<pos:position pos:line="80" pos:column="17"/></operator><name pos:line="80" pos:column="17">OK<pos:position pos:line="80" pos:column="19"/></name></expr>;<pos:position pos:line="80" pos:column="20"/></return>
    }<pos:position pos:line="81" pos:column="6"/></block></then></if>


    <comment type="block" pos:line="84" pos:column="5">/* setup one-time-nonce counter */</comment>

    <expr_stmt><expr><name pos:line="86" pos:column="5">otn_counter<pos:position pos:line="86" pos:column="16"/></name> <operator pos:line="86" pos:column="17">=<pos:position pos:line="86" pos:column="18"/></operator> <call><name pos:line="86" pos:column="19">apr_rmm_addr_get<pos:position pos:line="86" pos:column="35"/></name><argument_list pos:line="86" pos:column="35">(<argument><expr><name pos:line="86" pos:column="36">client_rmm<pos:position pos:line="86" pos:column="46"/></name></expr></argument>, <argument><expr><call><name pos:line="86" pos:column="48">apr_rmm_malloc<pos:position pos:line="86" pos:column="62"/></name><argument_list pos:line="86" pos:column="62">(<argument><expr><name pos:line="86" pos:column="63">client_rmm<pos:position pos:line="86" pos:column="73"/></name></expr></argument>, <argument><expr><sizeof pos:line="86" pos:column="75">sizeof<argument_list pos:line="86" pos:column="81">(<argument><expr><operator pos:line="86" pos:column="82">*<pos:position pos:line="86" pos:column="83"/></operator><name pos:line="86" pos:column="83">otn_counter<pos:position pos:line="86" pos:column="94"/></name></expr></argument>)<pos:position pos:line="86" pos:column="95"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="86" pos:column="96"/></argument_list></call></expr></argument>)<pos:position pos:line="86" pos:column="97"/></argument_list></call></expr>;<pos:position pos:line="86" pos:column="98"/></expr_stmt>
    <if pos:line="87" pos:column="5">if <condition pos:line="87" pos:column="8">(<expr><name pos:line="87" pos:column="9">otn_counter<pos:position pos:line="87" pos:column="20"/></name> <operator pos:line="87" pos:column="21">==<pos:position pos:line="87" pos:column="23"/></operator> <name pos:line="87" pos:column="24">NULL<pos:position pos:line="87" pos:column="28"/></name></expr>)<pos:position pos:line="87" pos:column="29"/></condition><then pos:line="87" pos:column="29"> <block pos:line="87" pos:column="30">{
        <expr_stmt><expr><call><name pos:line="88" pos:column="9">log_error_and_cleanup<pos:position pos:line="88" pos:column="30"/></name><argument_list pos:line="88" pos:column="30">(<argument><expr><literal type="string" pos:line="88" pos:column="31">"failed to allocate shared memory"<pos:position pos:line="88" pos:column="65"/></literal></expr></argument>, <argument><expr><operator pos:line="88" pos:column="67">-<pos:position pos:line="88" pos:column="68"/></operator><literal type="number" pos:line="88" pos:column="68">1<pos:position pos:line="88" pos:column="69"/></literal></expr></argument>, <argument><expr><name pos:line="88" pos:column="71">s<pos:position pos:line="88" pos:column="72"/></name></expr></argument>)<pos:position pos:line="88" pos:column="73"/></argument_list></call></expr>;<pos:position pos:line="88" pos:column="74"/></expr_stmt>
        <return pos:line="89" pos:column="9">return <expr><operator pos:line="89" pos:column="16">!<pos:position pos:line="89" pos:column="17"/></operator><name pos:line="89" pos:column="17">OK<pos:position pos:line="89" pos:column="19"/></name></expr>;<pos:position pos:line="89" pos:column="20"/></return>
    }<pos:position pos:line="90" pos:column="6"/></block></then></if>
    <expr_stmt><expr><operator pos:line="91" pos:column="5">*<pos:position pos:line="91" pos:column="6"/></operator><name pos:line="91" pos:column="6">otn_counter<pos:position pos:line="91" pos:column="17"/></name> <operator pos:line="91" pos:column="18">=<pos:position pos:line="91" pos:column="19"/></operator> <literal type="number" pos:line="91" pos:column="20">0<pos:position pos:line="91" pos:column="21"/></literal></expr>;<pos:position pos:line="91" pos:column="22"/></expr_stmt>
    <comment type="block" pos:line="92" pos:column="5">/* no lock here */</comment>


    <comment type="block" pos:line="95" pos:column="5">/* success */</comment>
    <return pos:line="96" pos:column="5">return <expr><name pos:line="96" pos:column="12">OK<pos:position pos:line="96" pos:column="14"/></name></expr>;<pos:position pos:line="96" pos:column="15"/></return>
}<pos:position pos:line="97" pos:column="2"/></block></function></unit>

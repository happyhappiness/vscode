<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/httpd/gumtree/httpd_repos_function_2557_httpd-2.0.65.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name><name pos:line="1" pos:column="8">enum<pos:position pos:line="1" pos:column="12"/></name> <name pos:line="1" pos:column="13">XML_Error<pos:position pos:line="1" pos:column="22"/></name></name> <name pos:line="1" pos:column="23">PTRCALL<pos:position pos:line="1" pos:column="30"/></name></type>
<name pos:line="2" pos:column="1">contentProcessor<pos:position pos:line="2" pos:column="17"/></name><parameter_list pos:line="2" pos:column="17">(<parameter><decl><type><name pos:line="2" pos:column="18">XML_Parser<pos:position pos:line="2" pos:column="28"/></name></type> <name pos:line="2" pos:column="29">parser<pos:position pos:line="2" pos:column="35"/></name></decl></parameter>,
                 <parameter><decl><type><specifier pos:line="3" pos:column="18">const<pos:position pos:line="3" pos:column="23"/></specifier> <name pos:line="3" pos:column="24">char<pos:position pos:line="3" pos:column="28"/></name> <modifier pos:line="3" pos:column="29">*<pos:position pos:line="3" pos:column="30"/></modifier></type><name pos:line="3" pos:column="30">start<pos:position pos:line="3" pos:column="35"/></name></decl></parameter>,
                 <parameter><decl><type><specifier pos:line="4" pos:column="18">const<pos:position pos:line="4" pos:column="23"/></specifier> <name pos:line="4" pos:column="24">char<pos:position pos:line="4" pos:column="28"/></name> <modifier pos:line="4" pos:column="29">*<pos:position pos:line="4" pos:column="30"/></modifier></type><name pos:line="4" pos:column="30">end<pos:position pos:line="4" pos:column="33"/></name></decl></parameter>,
                 <parameter><decl><type><specifier pos:line="5" pos:column="18">const<pos:position pos:line="5" pos:column="23"/></specifier> <name pos:line="5" pos:column="24">char<pos:position pos:line="5" pos:column="28"/></name> <modifier pos:line="5" pos:column="29">*<pos:position pos:line="5" pos:column="30"/></modifier><modifier pos:line="5" pos:column="30">*<pos:position pos:line="5" pos:column="31"/></modifier></type><name pos:line="5" pos:column="31">endPtr<pos:position pos:line="5" pos:column="37"/></name></decl></parameter>)<pos:position pos:line="5" pos:column="38"/></parameter_list>
<block pos:line="6" pos:column="1">{
  <decl_stmt><decl><type><name><name pos:line="7" pos:column="3">enum<pos:position pos:line="7" pos:column="7"/></name> <name pos:line="7" pos:column="8">XML_Error<pos:position pos:line="7" pos:column="17"/></name></name></type> <name pos:line="7" pos:column="18">result<pos:position pos:line="7" pos:column="24"/></name> <init pos:line="7" pos:column="25">=
    <expr><call><name pos:line="8" pos:column="5">doContent<pos:position pos:line="8" pos:column="14"/></name><argument_list pos:line="8" pos:column="14">(<argument><expr><name pos:line="8" pos:column="15">parser<pos:position pos:line="8" pos:column="21"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="8" pos:column="23">0<pos:position pos:line="8" pos:column="24"/></literal></expr></argument>, <argument><expr><name pos:line="8" pos:column="26">encoding<pos:position pos:line="8" pos:column="34"/></name></expr></argument>, <argument><expr><name pos:line="8" pos:column="36">start<pos:position pos:line="8" pos:column="41"/></name></expr></argument>, <argument><expr><name pos:line="8" pos:column="43">end<pos:position pos:line="8" pos:column="46"/></name></expr></argument>, <argument><expr><name pos:line="8" pos:column="48">endPtr<pos:position pos:line="8" pos:column="54"/></name></expr></argument>)<pos:position pos:line="8" pos:column="55"/></argument_list></call></expr></init></decl>;<pos:position pos:line="8" pos:column="56"/></decl_stmt>
  <if pos:line="9" pos:column="3">if <condition pos:line="9" pos:column="6">(<expr><name pos:line="9" pos:column="7">result<pos:position pos:line="9" pos:column="13"/></name> <operator pos:line="9" pos:column="14">!=<pos:position pos:line="9" pos:column="16"/></operator> <name pos:line="9" pos:column="17">XML_ERROR_NONE<pos:position pos:line="9" pos:column="31"/></name></expr>)<pos:position pos:line="9" pos:column="32"/></condition><then pos:line="9" pos:column="32">
    <block type="pseudo"><return pos:line="10" pos:column="5">return <expr><name pos:line="10" pos:column="12">result<pos:position pos:line="10" pos:column="18"/></name></expr>;<pos:position pos:line="10" pos:column="19"/></return></block></then></if>
  <if pos:line="11" pos:column="3">if <condition pos:line="11" pos:column="6">(<expr><operator pos:line="11" pos:column="7">!<pos:position pos:line="11" pos:column="8"/></operator><call><name pos:line="11" pos:column="8">storeRawNames<pos:position pos:line="11" pos:column="21"/></name><argument_list pos:line="11" pos:column="21">(<argument><expr><name pos:line="11" pos:column="22">parser<pos:position pos:line="11" pos:column="28"/></name></expr></argument>)<pos:position pos:line="11" pos:column="29"/></argument_list></call></expr>)<pos:position pos:line="11" pos:column="30"/></condition><then pos:line="11" pos:column="30">
    <block type="pseudo"><return pos:line="12" pos:column="5">return <expr><name pos:line="12" pos:column="12">XML_ERROR_NO_MEMORY<pos:position pos:line="12" pos:column="31"/></name></expr>;<pos:position pos:line="12" pos:column="32"/></return></block></then></if>
  <return pos:line="13" pos:column="3">return <expr><name pos:line="13" pos:column="10">result<pos:position pos:line="13" pos:column="16"/></name></expr>;<pos:position pos:line="13" pos:column="17"/></return>
}<pos:position pos:line="14" pos:column="2"/></block></function></unit>

<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/httpd/gumtree/httpd_repos_function_3623_httpd-2.2.14.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">void<pos:position pos:line="1" pos:column="5"/></name></type> <name pos:line="1" pos:column="6">apr__SHA512_Update<pos:position pos:line="1" pos:column="24"/></name><parameter_list pos:line="1" pos:column="24">(<parameter><decl><type><name pos:line="1" pos:column="25">SHA512_CTX<pos:position pos:line="1" pos:column="35"/></name><modifier pos:line="1" pos:column="35">*<pos:position pos:line="1" pos:column="36"/></modifier></type> <name pos:line="1" pos:column="37">context<pos:position pos:line="1" pos:column="44"/></name></decl></parameter>, <parameter><decl><type><specifier pos:line="1" pos:column="46">const<pos:position pos:line="1" pos:column="51"/></specifier> <name pos:line="1" pos:column="52">sha2_byte<pos:position pos:line="1" pos:column="61"/></name> <modifier pos:line="1" pos:column="62">*<pos:position pos:line="1" pos:column="63"/></modifier></type><name pos:line="1" pos:column="63">data<pos:position pos:line="1" pos:column="67"/></name></decl></parameter>, <parameter><decl><type><name pos:line="1" pos:column="69">size_t<pos:position pos:line="1" pos:column="75"/></name></type> <name pos:line="1" pos:column="76">len<pos:position pos:line="1" pos:column="79"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="80"/></parameter_list> <block pos:line="1" pos:column="81">{
        <decl_stmt><decl><type><name pos:line="2" pos:column="9">unsigned<pos:position pos:line="2" pos:column="17"/></name> <name pos:line="2" pos:column="18">int<pos:position pos:line="2" pos:column="21"/></name></type>    <name pos:line="2" pos:column="25">freespace<pos:position pos:line="2" pos:column="34"/></name></decl>, <decl><type ref="prev"/><name pos:line="2" pos:column="36">usedspace<pos:position pos:line="2" pos:column="45"/></name></decl>;<pos:position pos:line="2" pos:column="46"/></decl_stmt>

        <if pos:line="4" pos:column="9">if <condition pos:line="4" pos:column="12">(<expr><name pos:line="4" pos:column="13">len<pos:position pos:line="4" pos:column="16"/></name> <operator pos:line="4" pos:column="17">==<pos:position pos:line="4" pos:column="19"/></operator> <literal type="number" pos:line="4" pos:column="20">0<pos:position pos:line="4" pos:column="21"/></literal></expr>)<pos:position pos:line="4" pos:column="22"/></condition><then pos:line="4" pos:column="22"> <block pos:line="4" pos:column="23">{
                <comment type="block" pos:line="5" pos:column="17">/* Calling with no data is valid - we do nothing */</comment>
                <return pos:line="6" pos:column="17">return;<pos:position pos:line="6" pos:column="24"/></return>
        }<pos:position pos:line="7" pos:column="10"/></block></then></if>

        <comment type="block" pos:line="9" pos:column="9">/* Sanity check: */</comment>
        <expr_stmt><expr><call><name pos:line="10" pos:column="9">assert<pos:position pos:line="10" pos:column="15"/></name><argument_list pos:line="10" pos:column="15">(<argument><expr><name pos:line="10" pos:column="16">context<pos:position pos:line="10" pos:column="23"/></name> <operator pos:line="10" pos:column="24">!=<pos:position pos:line="10" pos:column="26"/></operator> <operator pos:line="10" pos:column="27">(<pos:position pos:line="10" pos:column="28"/></operator><name pos:line="10" pos:column="28">SHA512_CTX<pos:position pos:line="10" pos:column="38"/></name><operator pos:line="10" pos:column="38">*<pos:position pos:line="10" pos:column="39"/></operator><operator pos:line="10" pos:column="39">)<pos:position pos:line="10" pos:column="40"/></operator><literal type="number" pos:line="10" pos:column="40">0<pos:position pos:line="10" pos:column="41"/></literal> <operator pos:line="10" pos:column="42">&amp;&amp;<pos:position pos:line="10" pos:column="52"/></operator> <name pos:line="10" pos:column="45">data<pos:position pos:line="10" pos:column="49"/></name> <operator pos:line="10" pos:column="50">!=<pos:position pos:line="10" pos:column="52"/></operator> <operator pos:line="10" pos:column="53">(<pos:position pos:line="10" pos:column="54"/></operator><name pos:line="10" pos:column="54">sha2_byte<pos:position pos:line="10" pos:column="63"/></name><operator pos:line="10" pos:column="63">*<pos:position pos:line="10" pos:column="64"/></operator><operator pos:line="10" pos:column="64">)<pos:position pos:line="10" pos:column="65"/></operator><literal type="number" pos:line="10" pos:column="65">0<pos:position pos:line="10" pos:column="66"/></literal></expr></argument>)<pos:position pos:line="10" pos:column="67"/></argument_list></call></expr>;<pos:position pos:line="10" pos:column="68"/></expr_stmt>

        <expr_stmt><expr><name pos:line="12" pos:column="9">usedspace<pos:position pos:line="12" pos:column="18"/></name> <operator pos:line="12" pos:column="19">=<pos:position pos:line="12" pos:column="20"/></operator> <call pos:line="12" pos:column="21">(<name pos:line="12" pos:column="22">unsigned<pos:position pos:line="12" pos:column="30"/></name> <name pos:line="12" pos:column="31">int<pos:position pos:line="12" pos:column="34"/></name>)<argument_list pos:line="12" pos:column="35">(<argument><expr><operator pos:line="12" pos:column="36">(<pos:position pos:line="12" pos:column="37"/></operator><name><name pos:line="12" pos:column="37">context<pos:position pos:line="12" pos:column="44"/></name><operator pos:line="12" pos:column="44">-&gt;<pos:position pos:line="12" pos:column="49"/></operator><name pos:line="12" pos:column="46">bitcount<pos:position pos:line="12" pos:column="54"/></name><index pos:line="12" pos:column="54">[<expr><literal type="number" pos:line="12" pos:column="55">0<pos:position pos:line="12" pos:column="56"/></literal></expr>]<pos:position pos:line="12" pos:column="57"/></index></name> <operator pos:line="12" pos:column="58">&gt;&gt;<pos:position pos:line="12" pos:column="63"/></operator> <literal type="number" pos:line="12" pos:column="61">3<pos:position pos:line="12" pos:column="62"/></literal><operator pos:line="12" pos:column="62">)<pos:position pos:line="12" pos:column="63"/></operator> 
                                 <operator pos:line="13" pos:column="34">%<pos:position pos:line="13" pos:column="35"/></operator> <name pos:line="13" pos:column="36">SHA512_BLOCK_LENGTH<pos:position pos:line="13" pos:column="55"/></name></expr></argument>)<pos:position pos:line="13" pos:column="56"/></argument_list></call></expr>;<pos:position pos:line="13" pos:column="57"/></expr_stmt>
        <if pos:line="14" pos:column="9">if <condition pos:line="14" pos:column="12">(<expr><name pos:line="14" pos:column="13">usedspace<pos:position pos:line="14" pos:column="22"/></name> <operator pos:line="14" pos:column="23">&gt;<pos:position pos:line="14" pos:column="27"/></operator> <literal type="number" pos:line="14" pos:column="25">0<pos:position pos:line="14" pos:column="26"/></literal></expr>)<pos:position pos:line="14" pos:column="27"/></condition><then pos:line="14" pos:column="27"> <block pos:line="14" pos:column="28">{
                <comment type="block" pos:line="15" pos:column="17">/* Calculate how much free space is available in the buffer */</comment>
                <expr_stmt><expr><name pos:line="16" pos:column="17">freespace<pos:position pos:line="16" pos:column="26"/></name> <operator pos:line="16" pos:column="27">=<pos:position pos:line="16" pos:column="28"/></operator> <name pos:line="16" pos:column="29">SHA512_BLOCK_LENGTH<pos:position pos:line="16" pos:column="48"/></name> <operator pos:line="16" pos:column="49">-<pos:position pos:line="16" pos:column="50"/></operator> <name pos:line="16" pos:column="51">usedspace<pos:position pos:line="16" pos:column="60"/></name></expr>;<pos:position pos:line="16" pos:column="61"/></expr_stmt>

                <if pos:line="18" pos:column="17">if <condition pos:line="18" pos:column="20">(<expr><name pos:line="18" pos:column="21">len<pos:position pos:line="18" pos:column="24"/></name> <operator pos:line="18" pos:column="25">&gt;=<pos:position pos:line="18" pos:column="30"/></operator> <name pos:line="18" pos:column="28">freespace<pos:position pos:line="18" pos:column="37"/></name></expr>)<pos:position pos:line="18" pos:column="38"/></condition><then pos:line="18" pos:column="38"> <block pos:line="18" pos:column="39">{
                        <comment type="block" pos:line="19" pos:column="25">/* Fill the buffer completely and process it */</comment>
                        <expr_stmt><expr><call><name pos:line="20" pos:column="25">MEMCPY_BCOPY<pos:position pos:line="20" pos:column="37"/></name><argument_list pos:line="20" pos:column="37">(<argument><expr><operator pos:line="20" pos:column="38">&amp;<pos:position pos:line="20" pos:column="43"/></operator><name><name pos:line="20" pos:column="39">context<pos:position pos:line="20" pos:column="46"/></name><operator pos:line="20" pos:column="46">-&gt;<pos:position pos:line="20" pos:column="51"/></operator><name pos:line="20" pos:column="48">buffer<pos:position pos:line="20" pos:column="54"/></name><index pos:line="20" pos:column="54">[<expr><name pos:line="20" pos:column="55">usedspace<pos:position pos:line="20" pos:column="64"/></name></expr>]<pos:position pos:line="20" pos:column="65"/></index></name></expr></argument>, <argument><expr><name pos:line="20" pos:column="67">data<pos:position pos:line="20" pos:column="71"/></name></expr></argument>, <argument><expr><name pos:line="20" pos:column="73">freespace<pos:position pos:line="20" pos:column="82"/></name></expr></argument>)<pos:position pos:line="20" pos:column="83"/></argument_list></call></expr>;<pos:position pos:line="20" pos:column="84"/></expr_stmt>
                        <expr_stmt><expr><call><name pos:line="21" pos:column="25">ADDINC128<pos:position pos:line="21" pos:column="34"/></name><argument_list pos:line="21" pos:column="34">(<argument><expr><name><name pos:line="21" pos:column="35">context<pos:position pos:line="21" pos:column="42"/></name><operator pos:line="21" pos:column="42">-&gt;<pos:position pos:line="21" pos:column="47"/></operator><name pos:line="21" pos:column="44">bitcount<pos:position pos:line="21" pos:column="52"/></name></name></expr></argument>, <argument><expr><name pos:line="21" pos:column="54">freespace<pos:position pos:line="21" pos:column="63"/></name> <operator pos:line="21" pos:column="64">&lt;&lt;<pos:position pos:line="21" pos:column="72"/></operator> <literal type="number" pos:line="21" pos:column="67">3<pos:position pos:line="21" pos:column="68"/></literal></expr></argument>)<pos:position pos:line="21" pos:column="69"/></argument_list></call></expr>;<pos:position pos:line="21" pos:column="70"/></expr_stmt>
                        <expr_stmt><expr><name pos:line="22" pos:column="25">len<pos:position pos:line="22" pos:column="28"/></name> <operator pos:line="22" pos:column="29">-=<pos:position pos:line="22" pos:column="31"/></operator> <name pos:line="22" pos:column="32">freespace<pos:position pos:line="22" pos:column="41"/></name></expr>;<pos:position pos:line="22" pos:column="42"/></expr_stmt>
                        <expr_stmt><expr><name pos:line="23" pos:column="25">data<pos:position pos:line="23" pos:column="29"/></name> <operator pos:line="23" pos:column="30">+=<pos:position pos:line="23" pos:column="32"/></operator> <name pos:line="23" pos:column="33">freespace<pos:position pos:line="23" pos:column="42"/></name></expr>;<pos:position pos:line="23" pos:column="43"/></expr_stmt>
                        <expr_stmt><expr><call><name pos:line="24" pos:column="25">apr__SHA512_Transform<pos:position pos:line="24" pos:column="46"/></name><argument_list pos:line="24" pos:column="46">(<argument><expr><name pos:line="24" pos:column="47">context<pos:position pos:line="24" pos:column="54"/></name></expr></argument>, <argument><expr><operator pos:line="24" pos:column="56">(<pos:position pos:line="24" pos:column="57"/></operator><name pos:line="24" pos:column="57">sha2_word64<pos:position pos:line="24" pos:column="68"/></name><operator pos:line="24" pos:column="68">*<pos:position pos:line="24" pos:column="69"/></operator><operator pos:line="24" pos:column="69">)<pos:position pos:line="24" pos:column="70"/></operator><name><name pos:line="24" pos:column="70">context<pos:position pos:line="24" pos:column="77"/></name><operator pos:line="24" pos:column="77">-&gt;<pos:position pos:line="24" pos:column="82"/></operator><name pos:line="24" pos:column="79">buffer<pos:position pos:line="24" pos:column="85"/></name></name></expr></argument>)<pos:position pos:line="24" pos:column="86"/></argument_list></call></expr>;<pos:position pos:line="24" pos:column="87"/></expr_stmt>
                }<pos:position pos:line="25" pos:column="18"/></block></then> <else pos:line="25" pos:column="19">else <block pos:line="25" pos:column="24">{
                        <comment type="block" pos:line="26" pos:column="25">/* The buffer is not yet full */</comment>
                        <expr_stmt><expr><call><name pos:line="27" pos:column="25">MEMCPY_BCOPY<pos:position pos:line="27" pos:column="37"/></name><argument_list pos:line="27" pos:column="37">(<argument><expr><operator pos:line="27" pos:column="38">&amp;<pos:position pos:line="27" pos:column="43"/></operator><name><name pos:line="27" pos:column="39">context<pos:position pos:line="27" pos:column="46"/></name><operator pos:line="27" pos:column="46">-&gt;<pos:position pos:line="27" pos:column="51"/></operator><name pos:line="27" pos:column="48">buffer<pos:position pos:line="27" pos:column="54"/></name><index pos:line="27" pos:column="54">[<expr><name pos:line="27" pos:column="55">usedspace<pos:position pos:line="27" pos:column="64"/></name></expr>]<pos:position pos:line="27" pos:column="65"/></index></name></expr></argument>, <argument><expr><name pos:line="27" pos:column="67">data<pos:position pos:line="27" pos:column="71"/></name></expr></argument>, <argument><expr><name pos:line="27" pos:column="73">len<pos:position pos:line="27" pos:column="76"/></name></expr></argument>)<pos:position pos:line="27" pos:column="77"/></argument_list></call></expr>;<pos:position pos:line="27" pos:column="78"/></expr_stmt>
                        <expr_stmt><expr><call><name pos:line="28" pos:column="25">ADDINC128<pos:position pos:line="28" pos:column="34"/></name><argument_list pos:line="28" pos:column="34">(<argument><expr><name><name pos:line="28" pos:column="35">context<pos:position pos:line="28" pos:column="42"/></name><operator pos:line="28" pos:column="42">-&gt;<pos:position pos:line="28" pos:column="47"/></operator><name pos:line="28" pos:column="44">bitcount<pos:position pos:line="28" pos:column="52"/></name></name></expr></argument>, <argument><expr><name pos:line="28" pos:column="54">len<pos:position pos:line="28" pos:column="57"/></name> <operator pos:line="28" pos:column="58">&lt;&lt;<pos:position pos:line="28" pos:column="66"/></operator> <literal type="number" pos:line="28" pos:column="61">3<pos:position pos:line="28" pos:column="62"/></literal></expr></argument>)<pos:position pos:line="28" pos:column="63"/></argument_list></call></expr>;<pos:position pos:line="28" pos:column="64"/></expr_stmt>
                        <comment type="block" pos:line="29" pos:column="25">/* Clean up: */</comment>
                        <expr_stmt><expr><name pos:line="30" pos:column="25">usedspace<pos:position pos:line="30" pos:column="34"/></name> <operator pos:line="30" pos:column="35">=<pos:position pos:line="30" pos:column="36"/></operator> <name pos:line="30" pos:column="37">freespace<pos:position pos:line="30" pos:column="46"/></name> <operator pos:line="30" pos:column="47">=<pos:position pos:line="30" pos:column="48"/></operator> <literal type="number" pos:line="30" pos:column="49">0<pos:position pos:line="30" pos:column="50"/></literal></expr>;<pos:position pos:line="30" pos:column="51"/></expr_stmt>
                        <return pos:line="31" pos:column="25">return;<pos:position pos:line="31" pos:column="32"/></return>
                }<pos:position pos:line="32" pos:column="18"/></block></else></if>
        }<pos:position pos:line="33" pos:column="10"/></block></then></if>
        <while pos:line="34" pos:column="9">while <condition pos:line="34" pos:column="15">(<expr><name pos:line="34" pos:column="16">len<pos:position pos:line="34" pos:column="19"/></name> <operator pos:line="34" pos:column="20">&gt;=<pos:position pos:line="34" pos:column="25"/></operator> <name pos:line="34" pos:column="23">SHA512_BLOCK_LENGTH<pos:position pos:line="34" pos:column="42"/></name></expr>)<pos:position pos:line="34" pos:column="43"/></condition> <block pos:line="34" pos:column="44">{
                <comment type="block" pos:line="35" pos:column="17">/* Process as many complete blocks as we can */</comment>
                <expr_stmt><expr><call><name pos:line="36" pos:column="17">apr__SHA512_Transform<pos:position pos:line="36" pos:column="38"/></name><argument_list pos:line="36" pos:column="38">(<argument><expr><name pos:line="36" pos:column="39">context<pos:position pos:line="36" pos:column="46"/></name></expr></argument>, <argument><expr><operator pos:line="36" pos:column="48">(<pos:position pos:line="36" pos:column="49"/></operator><name pos:line="36" pos:column="49">sha2_word64<pos:position pos:line="36" pos:column="60"/></name><operator pos:line="36" pos:column="60">*<pos:position pos:line="36" pos:column="61"/></operator><operator pos:line="36" pos:column="61">)<pos:position pos:line="36" pos:column="62"/></operator><name pos:line="36" pos:column="62">data<pos:position pos:line="36" pos:column="66"/></name></expr></argument>)<pos:position pos:line="36" pos:column="67"/></argument_list></call></expr>;<pos:position pos:line="36" pos:column="68"/></expr_stmt>
                <expr_stmt><expr><call><name pos:line="37" pos:column="17">ADDINC128<pos:position pos:line="37" pos:column="26"/></name><argument_list pos:line="37" pos:column="26">(<argument><expr><name><name pos:line="37" pos:column="27">context<pos:position pos:line="37" pos:column="34"/></name><operator pos:line="37" pos:column="34">-&gt;<pos:position pos:line="37" pos:column="39"/></operator><name pos:line="37" pos:column="36">bitcount<pos:position pos:line="37" pos:column="44"/></name></name></expr></argument>, <argument><expr><name pos:line="37" pos:column="46">SHA512_BLOCK_LENGTH<pos:position pos:line="37" pos:column="65"/></name> <operator pos:line="37" pos:column="66">&lt;&lt;<pos:position pos:line="37" pos:column="74"/></operator> <literal type="number" pos:line="37" pos:column="69">3<pos:position pos:line="37" pos:column="70"/></literal></expr></argument>)<pos:position pos:line="37" pos:column="71"/></argument_list></call></expr>;<pos:position pos:line="37" pos:column="72"/></expr_stmt>
                <expr_stmt><expr><name pos:line="38" pos:column="17">len<pos:position pos:line="38" pos:column="20"/></name> <operator pos:line="38" pos:column="21">-=<pos:position pos:line="38" pos:column="23"/></operator> <name pos:line="38" pos:column="24">SHA512_BLOCK_LENGTH<pos:position pos:line="38" pos:column="43"/></name></expr>;<pos:position pos:line="38" pos:column="44"/></expr_stmt>
                <expr_stmt><expr><name pos:line="39" pos:column="17">data<pos:position pos:line="39" pos:column="21"/></name> <operator pos:line="39" pos:column="22">+=<pos:position pos:line="39" pos:column="24"/></operator> <name pos:line="39" pos:column="25">SHA512_BLOCK_LENGTH<pos:position pos:line="39" pos:column="44"/></name></expr>;<pos:position pos:line="39" pos:column="45"/></expr_stmt>
        }<pos:position pos:line="40" pos:column="10"/></block></while>
        <if pos:line="41" pos:column="9">if <condition pos:line="41" pos:column="12">(<expr><name pos:line="41" pos:column="13">len<pos:position pos:line="41" pos:column="16"/></name> <operator pos:line="41" pos:column="17">&gt;<pos:position pos:line="41" pos:column="21"/></operator> <literal type="number" pos:line="41" pos:column="19">0<pos:position pos:line="41" pos:column="20"/></literal></expr>)<pos:position pos:line="41" pos:column="21"/></condition><then pos:line="41" pos:column="21"> <block pos:line="41" pos:column="22">{
                <comment type="block" pos:line="42" pos:column="17">/* There's left-overs, so save 'em */</comment>
                <expr_stmt><expr><call><name pos:line="43" pos:column="17">MEMCPY_BCOPY<pos:position pos:line="43" pos:column="29"/></name><argument_list pos:line="43" pos:column="29">(<argument><expr><name><name pos:line="43" pos:column="30">context<pos:position pos:line="43" pos:column="37"/></name><operator pos:line="43" pos:column="37">-&gt;<pos:position pos:line="43" pos:column="42"/></operator><name pos:line="43" pos:column="39">buffer<pos:position pos:line="43" pos:column="45"/></name></name></expr></argument>, <argument><expr><name pos:line="43" pos:column="47">data<pos:position pos:line="43" pos:column="51"/></name></expr></argument>, <argument><expr><name pos:line="43" pos:column="53">len<pos:position pos:line="43" pos:column="56"/></name></expr></argument>)<pos:position pos:line="43" pos:column="57"/></argument_list></call></expr>;<pos:position pos:line="43" pos:column="58"/></expr_stmt>
                <expr_stmt><expr><call><name pos:line="44" pos:column="17">ADDINC128<pos:position pos:line="44" pos:column="26"/></name><argument_list pos:line="44" pos:column="26">(<argument><expr><name><name pos:line="44" pos:column="27">context<pos:position pos:line="44" pos:column="34"/></name><operator pos:line="44" pos:column="34">-&gt;<pos:position pos:line="44" pos:column="39"/></operator><name pos:line="44" pos:column="36">bitcount<pos:position pos:line="44" pos:column="44"/></name></name></expr></argument>, <argument><expr><name pos:line="44" pos:column="46">len<pos:position pos:line="44" pos:column="49"/></name> <operator pos:line="44" pos:column="50">&lt;&lt;<pos:position pos:line="44" pos:column="58"/></operator> <literal type="number" pos:line="44" pos:column="53">3<pos:position pos:line="44" pos:column="54"/></literal></expr></argument>)<pos:position pos:line="44" pos:column="55"/></argument_list></call></expr>;<pos:position pos:line="44" pos:column="56"/></expr_stmt>
        }<pos:position pos:line="45" pos:column="10"/></block></then></if>
        <comment type="block" pos:line="46" pos:column="9">/* Clean up: */</comment>
        <expr_stmt><expr><name pos:line="47" pos:column="9">usedspace<pos:position pos:line="47" pos:column="18"/></name> <operator pos:line="47" pos:column="19">=<pos:position pos:line="47" pos:column="20"/></operator> <name pos:line="47" pos:column="21">freespace<pos:position pos:line="47" pos:column="30"/></name> <operator pos:line="47" pos:column="31">=<pos:position pos:line="47" pos:column="32"/></operator> <literal type="number" pos:line="47" pos:column="33">0<pos:position pos:line="47" pos:column="34"/></literal></expr>;<pos:position pos:line="47" pos:column="35"/></expr_stmt>
}<pos:position pos:line="48" pos:column="2"/></block></function></unit>

<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/httpd/gumtree/httpd_repos_function_1156_httpd-2.2.14.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">apr_status_t<pos:position pos:line="1" pos:column="20"/></name></type> <name pos:line="1" pos:column="21">rewritelock_remove<pos:position pos:line="1" pos:column="39"/></name><parameter_list pos:line="1" pos:column="39">(<parameter><decl><type><name pos:line="1" pos:column="40">void<pos:position pos:line="1" pos:column="44"/></name> <modifier pos:line="1" pos:column="45">*<pos:position pos:line="1" pos:column="46"/></modifier></type><name pos:line="1" pos:column="46">data<pos:position pos:line="1" pos:column="50"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="51"/></parameter_list>
<block pos:line="2" pos:column="1">{
    <comment type="block" pos:line="3" pos:column="5">/* only operate if a lockfile is used */</comment>
    <if pos:line="4" pos:column="5">if <condition pos:line="4" pos:column="8">(<expr><name pos:line="4" pos:column="9">lockname<pos:position pos:line="4" pos:column="17"/></name> <operator pos:line="4" pos:column="18">==<pos:position pos:line="4" pos:column="20"/></operator> <name pos:line="4" pos:column="21">NULL<pos:position pos:line="4" pos:column="25"/></name> <operator pos:line="4" pos:column="26">||<pos:position pos:line="4" pos:column="28"/></operator> <operator pos:line="4" pos:column="29">*<pos:position pos:line="4" pos:column="30"/></operator><operator pos:line="4" pos:column="30">(<pos:position pos:line="4" pos:column="31"/></operator><name pos:line="4" pos:column="31">lockname<pos:position pos:line="4" pos:column="39"/></name><operator pos:line="4" pos:column="39">)<pos:position pos:line="4" pos:column="40"/></operator> <operator pos:line="4" pos:column="41">==<pos:position pos:line="4" pos:column="43"/></operator> <literal type="char" pos:line="4" pos:column="44">'\0'<pos:position pos:line="4" pos:column="48"/></literal></expr>)<pos:position pos:line="4" pos:column="49"/></condition><then pos:line="4" pos:column="49"> <block pos:line="4" pos:column="50">{
        <return pos:line="5" pos:column="9">return <expr><name pos:line="5" pos:column="16">APR_SUCCESS<pos:position pos:line="5" pos:column="27"/></name></expr>;<pos:position pos:line="5" pos:column="28"/></return>
    }<pos:position pos:line="6" pos:column="6"/></block></then></if>

    <comment type="block" pos:line="8" pos:column="5">/* destroy the rewritelock */</comment>
    <expr_stmt><expr><call><name pos:line="9" pos:column="5">apr_global_mutex_destroy<pos:position pos:line="9" pos:column="29"/></name> <argument_list pos:line="9" pos:column="30">(<argument><expr><name pos:line="9" pos:column="31">rewrite_mapr_lock_acquire<pos:position pos:line="9" pos:column="56"/></name></expr></argument>)<pos:position pos:line="9" pos:column="57"/></argument_list></call></expr>;<pos:position pos:line="9" pos:column="58"/></expr_stmt>
    <expr_stmt><expr><name pos:line="10" pos:column="5">rewrite_mapr_lock_acquire<pos:position pos:line="10" pos:column="30"/></name> <operator pos:line="10" pos:column="31">=<pos:position pos:line="10" pos:column="32"/></operator> <name pos:line="10" pos:column="33">NULL<pos:position pos:line="10" pos:column="37"/></name></expr>;<pos:position pos:line="10" pos:column="38"/></expr_stmt>
    <expr_stmt><expr><name pos:line="11" pos:column="5">lockname<pos:position pos:line="11" pos:column="13"/></name> <operator pos:line="11" pos:column="14">=<pos:position pos:line="11" pos:column="15"/></operator> <name pos:line="11" pos:column="16">NULL<pos:position pos:line="11" pos:column="20"/></name></expr>;<pos:position pos:line="11" pos:column="21"/></expr_stmt>
    <return pos:line="12" pos:column="5">return<expr><operator pos:line="12" pos:column="11">(<pos:position pos:line="12" pos:column="12"/></operator><literal type="number" pos:line="12" pos:column="12">0<pos:position pos:line="12" pos:column="13"/></literal><operator pos:line="12" pos:column="13">)<pos:position pos:line="12" pos:column="14"/></operator></expr>;<pos:position pos:line="12" pos:column="15"/></return>
}<pos:position pos:line="13" pos:column="2"/></block></function></unit>

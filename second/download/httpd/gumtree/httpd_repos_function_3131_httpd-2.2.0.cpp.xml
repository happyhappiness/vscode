<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/httpd/gumtree/httpd_repos_function_3131_httpd-2.2.0.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">apr_status_t<pos:position pos:line="1" pos:column="20"/></name></type> <name pos:line="1" pos:column="21">proc_mutex_choose_method<pos:position pos:line="1" pos:column="45"/></name><parameter_list pos:line="1" pos:column="45">(<parameter><decl><type><name pos:line="1" pos:column="46">apr_proc_mutex_t<pos:position pos:line="1" pos:column="62"/></name> <modifier pos:line="1" pos:column="63">*<pos:position pos:line="1" pos:column="64"/></modifier></type><name pos:line="1" pos:column="64">new_mutex<pos:position pos:line="1" pos:column="73"/></name></decl></parameter>, <parameter><decl><type><name pos:line="1" pos:column="75">apr_lockmech_e<pos:position pos:line="1" pos:column="89"/></name></type> <name pos:line="1" pos:column="90">mech<pos:position pos:line="1" pos:column="94"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="95"/></parameter_list>
<block pos:line="2" pos:column="1">{
    <switch pos:line="3" pos:column="5">switch <condition pos:line="3" pos:column="12">(<expr><name pos:line="3" pos:column="13">mech<pos:position pos:line="3" pos:column="17"/></name></expr>)<pos:position pos:line="3" pos:column="18"/></condition> <block pos:line="3" pos:column="19">{
    <case pos:line="4" pos:column="5">case <expr><name pos:line="4" pos:column="10">APR_LOCK_FCNTL<pos:position pos:line="4" pos:column="24"/></name></expr>:<pos:position pos:line="4" pos:column="25"/></case>
<cpp:if pos:line="5" pos:column="1">#<cpp:directive pos:line="5" pos:column="2">if<pos:position pos:line="5" pos:column="4"/></cpp:directive> <expr><name pos:line="5" pos:column="5">APR_HAS_FCNTL_SERIALIZE<pos:position pos:line="5" pos:column="28"/></name></expr></cpp:if>
        <expr_stmt><expr><name><name pos:line="6" pos:column="9">new_mutex<pos:position pos:line="6" pos:column="18"/></name><operator pos:line="6" pos:column="18">-&gt;<pos:position pos:line="6" pos:column="23"/></operator><name pos:line="6" pos:column="20">inter_meth<pos:position pos:line="6" pos:column="30"/></name></name> <operator pos:line="6" pos:column="31">=<pos:position pos:line="6" pos:column="32"/></operator> <operator pos:line="6" pos:column="33">&amp;<pos:position pos:line="6" pos:column="38"/></operator><name pos:line="6" pos:column="34">mutex_fcntl_methods<pos:position pos:line="6" pos:column="53"/></name></expr>;<pos:position pos:line="6" pos:column="54"/></expr_stmt>
<cpp:else pos:line="7" pos:column="1">#<cpp:directive pos:line="7" pos:column="2">else<pos:position pos:line="7" pos:column="6"/></cpp:directive></cpp:else>
        <return pos:line="8" pos:column="9">return <expr><name pos:line="8" pos:column="16">APR_ENOTIMPL<pos:position pos:line="8" pos:column="28"/></name></expr>;<pos:position pos:line="8" pos:column="29"/></return>
<cpp:endif pos:line="9" pos:column="1">#<cpp:directive pos:line="9" pos:column="2">endif<pos:position pos:line="9" pos:column="7"/></cpp:directive></cpp:endif>
        <break pos:line="10" pos:column="9">break;<pos:position pos:line="10" pos:column="15"/></break>
    <case pos:line="11" pos:column="5">case <expr><name pos:line="11" pos:column="10">APR_LOCK_FLOCK<pos:position pos:line="11" pos:column="24"/></name></expr>:<pos:position pos:line="11" pos:column="25"/></case>
<cpp:if pos:line="12" pos:column="1">#<cpp:directive pos:line="12" pos:column="2">if<pos:position pos:line="12" pos:column="4"/></cpp:directive> <expr><name pos:line="12" pos:column="5">APR_HAS_FLOCK_SERIALIZE<pos:position pos:line="12" pos:column="28"/></name></expr></cpp:if>
        <expr_stmt><expr><name><name pos:line="13" pos:column="9">new_mutex<pos:position pos:line="13" pos:column="18"/></name><operator pos:line="13" pos:column="18">-&gt;<pos:position pos:line="13" pos:column="23"/></operator><name pos:line="13" pos:column="20">inter_meth<pos:position pos:line="13" pos:column="30"/></name></name> <operator pos:line="13" pos:column="31">=<pos:position pos:line="13" pos:column="32"/></operator> <operator pos:line="13" pos:column="33">&amp;<pos:position pos:line="13" pos:column="38"/></operator><name pos:line="13" pos:column="34">mutex_flock_methods<pos:position pos:line="13" pos:column="53"/></name></expr>;<pos:position pos:line="13" pos:column="54"/></expr_stmt>
<cpp:else pos:line="14" pos:column="1">#<cpp:directive pos:line="14" pos:column="2">else<pos:position pos:line="14" pos:column="6"/></cpp:directive></cpp:else>
        <return pos:line="15" pos:column="9">return <expr><name pos:line="15" pos:column="16">APR_ENOTIMPL<pos:position pos:line="15" pos:column="28"/></name></expr>;<pos:position pos:line="15" pos:column="29"/></return>
<cpp:endif pos:line="16" pos:column="1">#<cpp:directive pos:line="16" pos:column="2">endif<pos:position pos:line="16" pos:column="7"/></cpp:directive></cpp:endif>
        <break pos:line="17" pos:column="9">break;<pos:position pos:line="17" pos:column="15"/></break>
    <case pos:line="18" pos:column="5">case <expr><name pos:line="18" pos:column="10">APR_LOCK_SYSVSEM<pos:position pos:line="18" pos:column="26"/></name></expr>:<pos:position pos:line="18" pos:column="27"/></case>
<cpp:if pos:line="19" pos:column="1">#<cpp:directive pos:line="19" pos:column="2">if<pos:position pos:line="19" pos:column="4"/></cpp:directive> <expr><name pos:line="19" pos:column="5">APR_HAS_SYSVSEM_SERIALIZE<pos:position pos:line="19" pos:column="30"/></name></expr></cpp:if>
        <expr_stmt><expr><name><name pos:line="20" pos:column="9">new_mutex<pos:position pos:line="20" pos:column="18"/></name><operator pos:line="20" pos:column="18">-&gt;<pos:position pos:line="20" pos:column="23"/></operator><name pos:line="20" pos:column="20">inter_meth<pos:position pos:line="20" pos:column="30"/></name></name> <operator pos:line="20" pos:column="31">=<pos:position pos:line="20" pos:column="32"/></operator> <operator pos:line="20" pos:column="33">&amp;<pos:position pos:line="20" pos:column="38"/></operator><name pos:line="20" pos:column="34">mutex_sysv_methods<pos:position pos:line="20" pos:column="52"/></name></expr>;<pos:position pos:line="20" pos:column="53"/></expr_stmt>
<cpp:else pos:line="21" pos:column="1">#<cpp:directive pos:line="21" pos:column="2">else<pos:position pos:line="21" pos:column="6"/></cpp:directive></cpp:else>
        <return pos:line="22" pos:column="9">return <expr><name pos:line="22" pos:column="16">APR_ENOTIMPL<pos:position pos:line="22" pos:column="28"/></name></expr>;<pos:position pos:line="22" pos:column="29"/></return>
<cpp:endif pos:line="23" pos:column="1">#<cpp:directive pos:line="23" pos:column="2">endif<pos:position pos:line="23" pos:column="7"/></cpp:directive></cpp:endif>
        <break pos:line="24" pos:column="9">break;<pos:position pos:line="24" pos:column="15"/></break>
    <case pos:line="25" pos:column="5">case <expr><name pos:line="25" pos:column="10">APR_LOCK_POSIXSEM<pos:position pos:line="25" pos:column="27"/></name></expr>:<pos:position pos:line="25" pos:column="28"/></case>
<cpp:if pos:line="26" pos:column="1">#<cpp:directive pos:line="26" pos:column="2">if<pos:position pos:line="26" pos:column="4"/></cpp:directive> <expr><name pos:line="26" pos:column="5">APR_HAS_POSIXSEM_SERIALIZE<pos:position pos:line="26" pos:column="31"/></name></expr></cpp:if>
        <expr_stmt><expr><name><name pos:line="27" pos:column="9">new_mutex<pos:position pos:line="27" pos:column="18"/></name><operator pos:line="27" pos:column="18">-&gt;<pos:position pos:line="27" pos:column="23"/></operator><name pos:line="27" pos:column="20">inter_meth<pos:position pos:line="27" pos:column="30"/></name></name> <operator pos:line="27" pos:column="31">=<pos:position pos:line="27" pos:column="32"/></operator> <operator pos:line="27" pos:column="33">&amp;<pos:position pos:line="27" pos:column="38"/></operator><name pos:line="27" pos:column="34">mutex_posixsem_methods<pos:position pos:line="27" pos:column="56"/></name></expr>;<pos:position pos:line="27" pos:column="57"/></expr_stmt>
<cpp:else pos:line="28" pos:column="1">#<cpp:directive pos:line="28" pos:column="2">else<pos:position pos:line="28" pos:column="6"/></cpp:directive></cpp:else>
        <return pos:line="29" pos:column="9">return <expr><name pos:line="29" pos:column="16">APR_ENOTIMPL<pos:position pos:line="29" pos:column="28"/></name></expr>;<pos:position pos:line="29" pos:column="29"/></return>
<cpp:endif pos:line="30" pos:column="1">#<cpp:directive pos:line="30" pos:column="2">endif<pos:position pos:line="30" pos:column="7"/></cpp:directive></cpp:endif>
        <break pos:line="31" pos:column="9">break;<pos:position pos:line="31" pos:column="15"/></break>
    <case pos:line="32" pos:column="5">case <expr><name pos:line="32" pos:column="10">APR_LOCK_PROC_PTHREAD<pos:position pos:line="32" pos:column="31"/></name></expr>:<pos:position pos:line="32" pos:column="32"/></case>
<cpp:if pos:line="33" pos:column="1">#<cpp:directive pos:line="33" pos:column="2">if<pos:position pos:line="33" pos:column="4"/></cpp:directive> <expr><name pos:line="33" pos:column="5">APR_HAS_PROC_PTHREAD_SERIALIZE<pos:position pos:line="33" pos:column="35"/></name></expr></cpp:if>
        <expr_stmt><expr><name><name pos:line="34" pos:column="9">new_mutex<pos:position pos:line="34" pos:column="18"/></name><operator pos:line="34" pos:column="18">-&gt;<pos:position pos:line="34" pos:column="23"/></operator><name pos:line="34" pos:column="20">inter_meth<pos:position pos:line="34" pos:column="30"/></name></name> <operator pos:line="34" pos:column="31">=<pos:position pos:line="34" pos:column="32"/></operator> <operator pos:line="34" pos:column="33">&amp;<pos:position pos:line="34" pos:column="38"/></operator><name pos:line="34" pos:column="34">mutex_proc_pthread_methods<pos:position pos:line="34" pos:column="60"/></name></expr>;<pos:position pos:line="34" pos:column="61"/></expr_stmt>
<cpp:else pos:line="35" pos:column="1">#<cpp:directive pos:line="35" pos:column="2">else<pos:position pos:line="35" pos:column="6"/></cpp:directive></cpp:else>
        <return pos:line="36" pos:column="9">return <expr><name pos:line="36" pos:column="16">APR_ENOTIMPL<pos:position pos:line="36" pos:column="28"/></name></expr>;<pos:position pos:line="36" pos:column="29"/></return>
<cpp:endif pos:line="37" pos:column="1">#<cpp:directive pos:line="37" pos:column="2">endif<pos:position pos:line="37" pos:column="7"/></cpp:directive></cpp:endif>
        <break pos:line="38" pos:column="9">break;<pos:position pos:line="38" pos:column="15"/></break>
    <case pos:line="39" pos:column="5">case <expr><name pos:line="39" pos:column="10">APR_LOCK_DEFAULT<pos:position pos:line="39" pos:column="26"/></name></expr>:<pos:position pos:line="39" pos:column="27"/></case>
<cpp:if pos:line="40" pos:column="1">#<cpp:directive pos:line="40" pos:column="2">if<pos:position pos:line="40" pos:column="4"/></cpp:directive> <expr><name pos:line="40" pos:column="5">APR_USE_FLOCK_SERIALIZE<pos:position pos:line="40" pos:column="28"/></name></expr></cpp:if>
        <expr_stmt><expr><name><name pos:line="41" pos:column="9">new_mutex<pos:position pos:line="41" pos:column="18"/></name><operator pos:line="41" pos:column="18">-&gt;<pos:position pos:line="41" pos:column="23"/></operator><name pos:line="41" pos:column="20">inter_meth<pos:position pos:line="41" pos:column="30"/></name></name> <operator pos:line="41" pos:column="31">=<pos:position pos:line="41" pos:column="32"/></operator> <operator pos:line="41" pos:column="33">&amp;<pos:position pos:line="41" pos:column="38"/></operator><name pos:line="41" pos:column="34">mutex_flock_methods<pos:position pos:line="41" pos:column="53"/></name></expr>;<pos:position pos:line="41" pos:column="54"/></expr_stmt>
<cpp:elif pos:line="42" pos:column="1">#<cpp:directive pos:line="42" pos:column="2">elif<pos:position pos:line="42" pos:column="6"/></cpp:directive> <expr><name pos:line="42" pos:column="7">APR_USE_SYSVSEM_SERIALIZE<pos:position pos:line="42" pos:column="32"/></name></expr></cpp:elif>
        <expr_stmt><expr><name><name pos:line="43" pos:column="9">new_mutex<pos:position pos:line="43" pos:column="18"/></name><operator pos:line="43" pos:column="18">-&gt;<pos:position pos:line="43" pos:column="23"/></operator><name pos:line="43" pos:column="20">inter_meth<pos:position pos:line="43" pos:column="30"/></name></name> <operator pos:line="43" pos:column="31">=<pos:position pos:line="43" pos:column="32"/></operator> <operator pos:line="43" pos:column="33">&amp;<pos:position pos:line="43" pos:column="38"/></operator><name pos:line="43" pos:column="34">mutex_sysv_methods<pos:position pos:line="43" pos:column="52"/></name></expr>;<pos:position pos:line="43" pos:column="53"/></expr_stmt>
<cpp:elif pos:line="44" pos:column="1">#<cpp:directive pos:line="44" pos:column="2">elif<pos:position pos:line="44" pos:column="6"/></cpp:directive> <expr><name pos:line="44" pos:column="7">APR_USE_FCNTL_SERIALIZE<pos:position pos:line="44" pos:column="30"/></name></expr></cpp:elif>
        <expr_stmt><expr><name><name pos:line="45" pos:column="9">new_mutex<pos:position pos:line="45" pos:column="18"/></name><operator pos:line="45" pos:column="18">-&gt;<pos:position pos:line="45" pos:column="23"/></operator><name pos:line="45" pos:column="20">inter_meth<pos:position pos:line="45" pos:column="30"/></name></name> <operator pos:line="45" pos:column="31">=<pos:position pos:line="45" pos:column="32"/></operator> <operator pos:line="45" pos:column="33">&amp;<pos:position pos:line="45" pos:column="38"/></operator><name pos:line="45" pos:column="34">mutex_fcntl_methods<pos:position pos:line="45" pos:column="53"/></name></expr>;<pos:position pos:line="45" pos:column="54"/></expr_stmt>
<cpp:elif pos:line="46" pos:column="1">#<cpp:directive pos:line="46" pos:column="2">elif<pos:position pos:line="46" pos:column="6"/></cpp:directive> <expr><name pos:line="46" pos:column="7">APR_USE_PROC_PTHREAD_SERIALIZE<pos:position pos:line="46" pos:column="37"/></name></expr></cpp:elif>
        <expr_stmt><expr><name><name pos:line="47" pos:column="9">new_mutex<pos:position pos:line="47" pos:column="18"/></name><operator pos:line="47" pos:column="18">-&gt;<pos:position pos:line="47" pos:column="23"/></operator><name pos:line="47" pos:column="20">inter_meth<pos:position pos:line="47" pos:column="30"/></name></name> <operator pos:line="47" pos:column="31">=<pos:position pos:line="47" pos:column="32"/></operator> <operator pos:line="47" pos:column="33">&amp;<pos:position pos:line="47" pos:column="38"/></operator><name pos:line="47" pos:column="34">mutex_proc_pthread_methods<pos:position pos:line="47" pos:column="60"/></name></expr>;<pos:position pos:line="47" pos:column="61"/></expr_stmt>
<cpp:elif pos:line="48" pos:column="1">#<cpp:directive pos:line="48" pos:column="2">elif<pos:position pos:line="48" pos:column="6"/></cpp:directive> <expr><name pos:line="48" pos:column="7">APR_USE_POSIXSEM_SERIALIZE<pos:position pos:line="48" pos:column="33"/></name></expr></cpp:elif>
        <expr_stmt><expr><name><name pos:line="49" pos:column="9">new_mutex<pos:position pos:line="49" pos:column="18"/></name><operator pos:line="49" pos:column="18">-&gt;<pos:position pos:line="49" pos:column="23"/></operator><name pos:line="49" pos:column="20">inter_meth<pos:position pos:line="49" pos:column="30"/></name></name> <operator pos:line="49" pos:column="31">=<pos:position pos:line="49" pos:column="32"/></operator> <operator pos:line="49" pos:column="33">&amp;<pos:position pos:line="49" pos:column="38"/></operator><name pos:line="49" pos:column="34">mutex_posixsem_methods<pos:position pos:line="49" pos:column="56"/></name></expr>;<pos:position pos:line="49" pos:column="57"/></expr_stmt>
<cpp:else pos:line="50" pos:column="1">#<cpp:directive pos:line="50" pos:column="2">else<pos:position pos:line="50" pos:column="6"/></cpp:directive></cpp:else>
        <return pos:line="51" pos:column="9">return <expr><name pos:line="51" pos:column="16">APR_ENOTIMPL<pos:position pos:line="51" pos:column="28"/></name></expr>;<pos:position pos:line="51" pos:column="29"/></return>
<cpp:endif pos:line="52" pos:column="1">#<cpp:directive pos:line="52" pos:column="2">endif<pos:position pos:line="52" pos:column="7"/></cpp:directive></cpp:endif>
        <break pos:line="53" pos:column="9">break;<pos:position pos:line="53" pos:column="15"/></break>
    <default pos:line="54" pos:column="5">default:<pos:position pos:line="54" pos:column="13"/></default>
        <return pos:line="55" pos:column="9">return <expr><name pos:line="55" pos:column="16">APR_ENOTIMPL<pos:position pos:line="55" pos:column="28"/></name></expr>;<pos:position pos:line="55" pos:column="29"/></return>
    }<pos:position pos:line="56" pos:column="6"/></block></switch>
    <return pos:line="57" pos:column="5">return <expr><name pos:line="57" pos:column="12">APR_SUCCESS<pos:position pos:line="57" pos:column="23"/></name></expr>;<pos:position pos:line="57" pos:column="24"/></return>
}<pos:position pos:line="58" pos:column="2"/></block></function></unit>

<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/httpd/gumtree/httpd_function_6770.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">apr_status_t<pos:position pos:line="1" pos:column="13"/></name></type> <name pos:line="1" pos:column="14">h2_filter_core_input<pos:position pos:line="1" pos:column="34"/></name><parameter_list pos:line="1" pos:column="34">(<parameter><decl><type><name pos:line="1" pos:column="35">ap_filter_t<pos:position pos:line="1" pos:column="46"/></name><modifier pos:line="1" pos:column="46">*<pos:position pos:line="1" pos:column="47"/></modifier></type> <name pos:line="1" pos:column="48">f<pos:position pos:line="1" pos:column="49"/></name></decl></parameter>,
                                  <parameter><decl><type><name pos:line="2" pos:column="35">apr_bucket_brigade<pos:position pos:line="2" pos:column="53"/></name><modifier pos:line="2" pos:column="53">*<pos:position pos:line="2" pos:column="54"/></modifier></type> <name pos:line="2" pos:column="55">brigade<pos:position pos:line="2" pos:column="62"/></name></decl></parameter>,
                                  <parameter><decl><type><name pos:line="3" pos:column="35">ap_input_mode_t<pos:position pos:line="3" pos:column="50"/></name></type> <name pos:line="3" pos:column="51">mode<pos:position pos:line="3" pos:column="55"/></name></decl></parameter>,
                                  <parameter><decl><type><name pos:line="4" pos:column="35">apr_read_type_e<pos:position pos:line="4" pos:column="50"/></name></type> <name pos:line="4" pos:column="51">block<pos:position pos:line="4" pos:column="56"/></name></decl></parameter>,
                                  <parameter><decl><type><name pos:line="5" pos:column="35">apr_off_t<pos:position pos:line="5" pos:column="44"/></name></type> <name pos:line="5" pos:column="45">readbytes<pos:position pos:line="5" pos:column="54"/></name></decl></parameter>)<pos:position pos:line="5" pos:column="55"/></parameter_list> 
<block pos:line="6" pos:column="1">{
    <decl_stmt><decl><type><name pos:line="7" pos:column="5">h2_filter_cin<pos:position pos:line="7" pos:column="18"/></name> <modifier pos:line="7" pos:column="19">*<pos:position pos:line="7" pos:column="20"/></modifier></type><name pos:line="7" pos:column="20">cin<pos:position pos:line="7" pos:column="23"/></name> <init pos:line="7" pos:column="24">= <expr><name><name pos:line="7" pos:column="26">f<pos:position pos:line="7" pos:column="27"/></name><operator pos:line="7" pos:column="27">-&gt;<pos:position pos:line="7" pos:column="32"/></operator><name pos:line="7" pos:column="29">ctx<pos:position pos:line="7" pos:column="32"/></name></name></expr></init></decl>;<pos:position pos:line="7" pos:column="33"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="8" pos:column="5">apr_status_t<pos:position pos:line="8" pos:column="17"/></name></type> <name pos:line="8" pos:column="18">status<pos:position pos:line="8" pos:column="24"/></name> <init pos:line="8" pos:column="25">= <expr><name pos:line="8" pos:column="27">APR_SUCCESS<pos:position pos:line="8" pos:column="38"/></name></expr></init></decl>;<pos:position pos:line="8" pos:column="39"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="9" pos:column="5">apr_interval_time_t<pos:position pos:line="9" pos:column="24"/></name></type> <name pos:line="9" pos:column="25">saved_timeout<pos:position pos:line="9" pos:column="38"/></name> <init pos:line="9" pos:column="39">= <expr><name pos:line="9" pos:column="41">UNSET<pos:position pos:line="9" pos:column="46"/></name></expr></init></decl>;<pos:position pos:line="9" pos:column="47"/></decl_stmt>
    
    <expr_stmt><expr><call><name pos:line="11" pos:column="5">ap_log_cerror<pos:position pos:line="11" pos:column="18"/></name><argument_list pos:line="11" pos:column="18">(<argument><expr><name pos:line="11" pos:column="19">APLOG_MARK<pos:position pos:line="11" pos:column="29"/></name></expr></argument>, <argument><expr><name pos:line="11" pos:column="31">APLOG_TRACE1<pos:position pos:line="11" pos:column="43"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="11" pos:column="45">0<pos:position pos:line="11" pos:column="46"/></literal></expr></argument>, <argument><expr><name><name pos:line="11" pos:column="48">f<pos:position pos:line="11" pos:column="49"/></name><operator pos:line="11" pos:column="49">-&gt;<pos:position pos:line="11" pos:column="54"/></operator><name pos:line="11" pos:column="51">c<pos:position pos:line="11" pos:column="52"/></name></name></expr></argument>,
                  <argument><expr><literal type="string" pos:line="12" pos:column="19">"core_input(%ld): read, %s, mode=%d, readbytes=%ld"<pos:position pos:line="12" pos:column="70"/></literal></expr></argument>, 
                  <argument><expr><operator pos:line="13" pos:column="19">(<pos:position pos:line="13" pos:column="20"/></operator><name pos:line="13" pos:column="20">long<pos:position pos:line="13" pos:column="24"/></name><operator pos:line="13" pos:column="24">)<pos:position pos:line="13" pos:column="25"/></operator><name><name pos:line="13" pos:column="25">f<pos:position pos:line="13" pos:column="26"/></name><operator pos:line="13" pos:column="26">-&gt;<pos:position pos:line="13" pos:column="31"/></operator><name pos:line="13" pos:column="28">c<pos:position pos:line="13" pos:column="29"/></name><operator pos:line="13" pos:column="29">-&gt;<pos:position pos:line="13" pos:column="34"/></operator><name pos:line="13" pos:column="31">id<pos:position pos:line="13" pos:column="33"/></name></name></expr></argument>, <argument><expr><ternary><condition><expr><operator pos:line="13" pos:column="35">(<pos:position pos:line="13" pos:column="36"/></operator><name pos:line="13" pos:column="36">block<pos:position pos:line="13" pos:column="41"/></name> <operator pos:line="13" pos:column="42">==<pos:position pos:line="13" pos:column="44"/></operator> <name pos:line="13" pos:column="45">APR_BLOCK_READ<pos:position pos:line="13" pos:column="59"/></name><operator pos:line="13" pos:column="59">)<pos:position pos:line="13" pos:column="60"/></operator></expr>?<pos:position pos:line="13" pos:column="61"/></condition><then pos:line="13" pos:column="61"> <expr><literal type="string" pos:line="13" pos:column="62">"BLOCK_READ"<pos:position pos:line="13" pos:column="74"/></literal></expr> <pos:position pos:line="13" pos:column="75"/></then><else pos:line="13" pos:column="75">: <expr><literal type="string" pos:line="13" pos:column="77">"NONBLOCK_READ"<pos:position pos:line="13" pos:column="92"/></literal></expr></else></ternary></expr></argument>, 
                  <argument><expr><name pos:line="14" pos:column="19">mode<pos:position pos:line="14" pos:column="23"/></name></expr></argument>, <argument><expr><operator pos:line="14" pos:column="25">(<pos:position pos:line="14" pos:column="26"/></operator><name pos:line="14" pos:column="26">long<pos:position pos:line="14" pos:column="30"/></name><operator pos:line="14" pos:column="30">)<pos:position pos:line="14" pos:column="31"/></operator><name pos:line="14" pos:column="31">readbytes<pos:position pos:line="14" pos:column="40"/></name></expr></argument>)<pos:position pos:line="14" pos:column="41"/></argument_list></call></expr>;<pos:position pos:line="14" pos:column="42"/></expr_stmt>
    
    <if pos:line="16" pos:column="5">if <condition pos:line="16" pos:column="8">(<expr><name pos:line="16" pos:column="9">mode<pos:position pos:line="16" pos:column="13"/></name> <operator pos:line="16" pos:column="14">==<pos:position pos:line="16" pos:column="16"/></operator> <name pos:line="16" pos:column="17">AP_MODE_INIT<pos:position pos:line="16" pos:column="29"/></name> <operator pos:line="16" pos:column="30">||<pos:position pos:line="16" pos:column="32"/></operator> <name pos:line="16" pos:column="33">mode<pos:position pos:line="16" pos:column="37"/></name> <operator pos:line="16" pos:column="38">==<pos:position pos:line="16" pos:column="40"/></operator> <name pos:line="16" pos:column="41">AP_MODE_SPECULATIVE<pos:position pos:line="16" pos:column="60"/></name></expr>)<pos:position pos:line="16" pos:column="61"/></condition><then pos:line="16" pos:column="61"> <block pos:line="16" pos:column="62">{
        <return pos:line="17" pos:column="9">return <expr><call><name pos:line="17" pos:column="16">ap_get_brigade<pos:position pos:line="17" pos:column="30"/></name><argument_list pos:line="17" pos:column="30">(<argument><expr><name><name pos:line="17" pos:column="31">f<pos:position pos:line="17" pos:column="32"/></name><operator pos:line="17" pos:column="32">-&gt;<pos:position pos:line="17" pos:column="37"/></operator><name pos:line="17" pos:column="34">next<pos:position pos:line="17" pos:column="38"/></name></name></expr></argument>, <argument><expr><name pos:line="17" pos:column="40">brigade<pos:position pos:line="17" pos:column="47"/></name></expr></argument>, <argument><expr><name pos:line="17" pos:column="49">mode<pos:position pos:line="17" pos:column="53"/></name></expr></argument>, <argument><expr><name pos:line="17" pos:column="55">block<pos:position pos:line="17" pos:column="60"/></name></expr></argument>, <argument><expr><name pos:line="17" pos:column="62">readbytes<pos:position pos:line="17" pos:column="71"/></name></expr></argument>)<pos:position pos:line="17" pos:column="72"/></argument_list></call></expr>;<pos:position pos:line="17" pos:column="73"/></return>
    }<pos:position pos:line="18" pos:column="6"/></block></then></if>
    
    <if pos:line="20" pos:column="5">if <condition pos:line="20" pos:column="8">(<expr><name pos:line="20" pos:column="9">mode<pos:position pos:line="20" pos:column="13"/></name> <operator pos:line="20" pos:column="14">!=<pos:position pos:line="20" pos:column="16"/></operator> <name pos:line="20" pos:column="17">AP_MODE_READBYTES<pos:position pos:line="20" pos:column="34"/></name></expr>)<pos:position pos:line="20" pos:column="35"/></condition><then pos:line="20" pos:column="35"> <block pos:line="20" pos:column="36">{
        <return pos:line="21" pos:column="9">return <expr><ternary><condition><expr><operator pos:line="21" pos:column="16">(<pos:position pos:line="21" pos:column="17"/></operator><name pos:line="21" pos:column="17">block<pos:position pos:line="21" pos:column="22"/></name> <operator pos:line="21" pos:column="23">==<pos:position pos:line="21" pos:column="25"/></operator> <name pos:line="21" pos:column="26">APR_BLOCK_READ<pos:position pos:line="21" pos:column="40"/></name><operator pos:line="21" pos:column="40">)<pos:position pos:line="21" pos:column="41"/></operator></expr>?<pos:position pos:line="21" pos:column="42"/></condition><then pos:line="21" pos:column="42"> <expr><name pos:line="21" pos:column="43">APR_SUCCESS<pos:position pos:line="21" pos:column="54"/></name></expr> <pos:position pos:line="21" pos:column="55"/></then><else pos:line="21" pos:column="55">: <expr><name pos:line="21" pos:column="57">APR_EAGAIN<pos:position pos:line="21" pos:column="67"/></name></expr></else></ternary></expr>;<pos:position pos:line="21" pos:column="68"/></return>
    }<pos:position pos:line="22" pos:column="6"/></block></then></if>
    
    <if pos:line="24" pos:column="5">if <condition pos:line="24" pos:column="8">(<expr><operator pos:line="24" pos:column="9">!<pos:position pos:line="24" pos:column="10"/></operator><name><name pos:line="24" pos:column="10">cin<pos:position pos:line="24" pos:column="13"/></name><operator pos:line="24" pos:column="13">-&gt;<pos:position pos:line="24" pos:column="18"/></operator><name pos:line="24" pos:column="15">bb<pos:position pos:line="24" pos:column="17"/></name></name></expr>)<pos:position pos:line="24" pos:column="18"/></condition><then pos:line="24" pos:column="18"> <block pos:line="24" pos:column="19">{
        <expr_stmt><expr><name><name pos:line="25" pos:column="9">cin<pos:position pos:line="25" pos:column="12"/></name><operator pos:line="25" pos:column="12">-&gt;<pos:position pos:line="25" pos:column="17"/></operator><name pos:line="25" pos:column="14">bb<pos:position pos:line="25" pos:column="16"/></name></name> <operator pos:line="25" pos:column="17">=<pos:position pos:line="25" pos:column="18"/></operator> <call><name pos:line="25" pos:column="19">apr_brigade_create<pos:position pos:line="25" pos:column="37"/></name><argument_list pos:line="25" pos:column="37">(<argument><expr><name><name pos:line="25" pos:column="38">cin<pos:position pos:line="25" pos:column="41"/></name><operator pos:line="25" pos:column="41">-&gt;<pos:position pos:line="25" pos:column="46"/></operator><name pos:line="25" pos:column="43">pool<pos:position pos:line="25" pos:column="47"/></name></name></expr></argument>, <argument><expr><name><name pos:line="25" pos:column="49">f<pos:position pos:line="25" pos:column="50"/></name><operator pos:line="25" pos:column="50">-&gt;<pos:position pos:line="25" pos:column="55"/></operator><name pos:line="25" pos:column="52">c<pos:position pos:line="25" pos:column="53"/></name><operator pos:line="25" pos:column="53">-&gt;<pos:position pos:line="25" pos:column="58"/></operator><name pos:line="25" pos:column="55">bucket_alloc<pos:position pos:line="25" pos:column="67"/></name></name></expr></argument>)<pos:position pos:line="25" pos:column="68"/></argument_list></call></expr>;<pos:position pos:line="25" pos:column="69"/></expr_stmt>
    }<pos:position pos:line="26" pos:column="6"/></block></then></if>

    <if pos:line="28" pos:column="5">if <condition pos:line="28" pos:column="8">(<expr><operator pos:line="28" pos:column="9">!<pos:position pos:line="28" pos:column="10"/></operator><name><name pos:line="28" pos:column="10">cin<pos:position pos:line="28" pos:column="13"/></name><operator pos:line="28" pos:column="13">-&gt;<pos:position pos:line="28" pos:column="18"/></operator><name pos:line="28" pos:column="15">socket<pos:position pos:line="28" pos:column="21"/></name></name></expr>)<pos:position pos:line="28" pos:column="22"/></condition><then pos:line="28" pos:column="22"> <block pos:line="28" pos:column="23">{
        <expr_stmt><expr><name><name pos:line="29" pos:column="9">cin<pos:position pos:line="29" pos:column="12"/></name><operator pos:line="29" pos:column="12">-&gt;<pos:position pos:line="29" pos:column="17"/></operator><name pos:line="29" pos:column="14">socket<pos:position pos:line="29" pos:column="20"/></name></name> <operator pos:line="29" pos:column="21">=<pos:position pos:line="29" pos:column="22"/></operator> <call><name pos:line="29" pos:column="23">ap_get_conn_socket<pos:position pos:line="29" pos:column="41"/></name><argument_list pos:line="29" pos:column="41">(<argument><expr><name><name pos:line="29" pos:column="42">f<pos:position pos:line="29" pos:column="43"/></name><operator pos:line="29" pos:column="43">-&gt;<pos:position pos:line="29" pos:column="48"/></operator><name pos:line="29" pos:column="45">c<pos:position pos:line="29" pos:column="46"/></name></name></expr></argument>)<pos:position pos:line="29" pos:column="47"/></argument_list></call></expr>;<pos:position pos:line="29" pos:column="48"/></expr_stmt>
    }<pos:position pos:line="30" pos:column="6"/></block></then></if>
    
    <expr_stmt><expr><name><name pos:line="32" pos:column="5">cin<pos:position pos:line="32" pos:column="8"/></name><operator pos:line="32" pos:column="8">-&gt;<pos:position pos:line="32" pos:column="13"/></operator><name pos:line="32" pos:column="10">start_read<pos:position pos:line="32" pos:column="20"/></name></name> <operator pos:line="32" pos:column="21">=<pos:position pos:line="32" pos:column="22"/></operator> <call><name pos:line="32" pos:column="23">apr_time_now<pos:position pos:line="32" pos:column="35"/></name><argument_list pos:line="32" pos:column="35">()<pos:position pos:line="32" pos:column="37"/></argument_list></call></expr>;<pos:position pos:line="32" pos:column="38"/></expr_stmt>
    <if pos:line="33" pos:column="5">if <condition pos:line="33" pos:column="8">(<expr><call><name pos:line="33" pos:column="9">APR_BRIGADE_EMPTY<pos:position pos:line="33" pos:column="26"/></name><argument_list pos:line="33" pos:column="26">(<argument><expr><name><name pos:line="33" pos:column="27">cin<pos:position pos:line="33" pos:column="30"/></name><operator pos:line="33" pos:column="30">-&gt;<pos:position pos:line="33" pos:column="35"/></operator><name pos:line="33" pos:column="32">bb<pos:position pos:line="33" pos:column="34"/></name></name></expr></argument>)<pos:position pos:line="33" pos:column="35"/></argument_list></call></expr>)<pos:position pos:line="33" pos:column="36"/></condition><then pos:line="33" pos:column="36"> <block pos:line="33" pos:column="37">{
        <comment type="block" pos:line="34" pos:column="9">/* We only do a blocking read when we have no streams to process. So,
         * in httpd scoreboard lingo, we are in a KEEPALIVE connection state.
         * When reading non-blocking, we do have streams to process and update
         * child with NULL request. That way, any current request information
         * in the scoreboard is preserved.
         */</comment>
        <if pos:line="40" pos:column="9">if <condition pos:line="40" pos:column="12">(<expr><name pos:line="40" pos:column="13">block<pos:position pos:line="40" pos:column="18"/></name> <operator pos:line="40" pos:column="19">==<pos:position pos:line="40" pos:column="21"/></operator> <name pos:line="40" pos:column="22">APR_BLOCK_READ<pos:position pos:line="40" pos:column="36"/></name></expr>)<pos:position pos:line="40" pos:column="37"/></condition><then pos:line="40" pos:column="37"> <block pos:line="40" pos:column="38">{
            <if pos:line="41" pos:column="13">if <condition pos:line="41" pos:column="16">(<expr><name><name pos:line="41" pos:column="17">cin<pos:position pos:line="41" pos:column="20"/></name><operator pos:line="41" pos:column="20">-&gt;<pos:position pos:line="41" pos:column="25"/></operator><name pos:line="41" pos:column="22">timeout<pos:position pos:line="41" pos:column="29"/></name></name> <operator pos:line="41" pos:column="30">&gt;<pos:position pos:line="41" pos:column="34"/></operator> <literal type="number" pos:line="41" pos:column="32">0<pos:position pos:line="41" pos:column="33"/></literal></expr>)<pos:position pos:line="41" pos:column="34"/></condition><then pos:line="41" pos:column="34"> <block pos:line="41" pos:column="35">{
                <expr_stmt><expr><call><name pos:line="42" pos:column="17">apr_socket_timeout_get<pos:position pos:line="42" pos:column="39"/></name><argument_list pos:line="42" pos:column="39">(<argument><expr><name><name pos:line="42" pos:column="40">cin<pos:position pos:line="42" pos:column="43"/></name><operator pos:line="42" pos:column="43">-&gt;<pos:position pos:line="42" pos:column="48"/></operator><name pos:line="42" pos:column="45">socket<pos:position pos:line="42" pos:column="51"/></name></name></expr></argument>, <argument><expr><operator pos:line="42" pos:column="53">&amp;<pos:position pos:line="42" pos:column="58"/></operator><name pos:line="42" pos:column="54">saved_timeout<pos:position pos:line="42" pos:column="67"/></name></expr></argument>)<pos:position pos:line="42" pos:column="68"/></argument_list></call></expr>;<pos:position pos:line="42" pos:column="69"/></expr_stmt>
                <expr_stmt><expr><call><name pos:line="43" pos:column="17">apr_socket_timeout_set<pos:position pos:line="43" pos:column="39"/></name><argument_list pos:line="43" pos:column="39">(<argument><expr><name><name pos:line="43" pos:column="40">cin<pos:position pos:line="43" pos:column="43"/></name><operator pos:line="43" pos:column="43">-&gt;<pos:position pos:line="43" pos:column="48"/></operator><name pos:line="43" pos:column="45">socket<pos:position pos:line="43" pos:column="51"/></name></name></expr></argument>, <argument><expr><name><name pos:line="43" pos:column="53">cin<pos:position pos:line="43" pos:column="56"/></name><operator pos:line="43" pos:column="56">-&gt;<pos:position pos:line="43" pos:column="61"/></operator><name pos:line="43" pos:column="58">timeout<pos:position pos:line="43" pos:column="65"/></name></name></expr></argument>)<pos:position pos:line="43" pos:column="66"/></argument_list></call></expr>;<pos:position pos:line="43" pos:column="67"/></expr_stmt>
            }<pos:position pos:line="44" pos:column="14"/></block></then></if>
        }<pos:position pos:line="45" pos:column="10"/></block></then></if>
        <expr_stmt><expr><name pos:line="46" pos:column="9">status<pos:position pos:line="46" pos:column="15"/></name> <operator pos:line="46" pos:column="16">=<pos:position pos:line="46" pos:column="17"/></operator> <call><name pos:line="46" pos:column="18">ap_get_brigade<pos:position pos:line="46" pos:column="32"/></name><argument_list pos:line="46" pos:column="32">(<argument><expr><name><name pos:line="46" pos:column="33">f<pos:position pos:line="46" pos:column="34"/></name><operator pos:line="46" pos:column="34">-&gt;<pos:position pos:line="46" pos:column="39"/></operator><name pos:line="46" pos:column="36">next<pos:position pos:line="46" pos:column="40"/></name></name></expr></argument>, <argument><expr><name><name pos:line="46" pos:column="42">cin<pos:position pos:line="46" pos:column="45"/></name><operator pos:line="46" pos:column="45">-&gt;<pos:position pos:line="46" pos:column="50"/></operator><name pos:line="46" pos:column="47">bb<pos:position pos:line="46" pos:column="49"/></name></name></expr></argument>, <argument><expr><name pos:line="46" pos:column="51">AP_MODE_READBYTES<pos:position pos:line="46" pos:column="68"/></name></expr></argument>,
                                <argument><expr><name pos:line="47" pos:column="33">block<pos:position pos:line="47" pos:column="38"/></name></expr></argument>, <argument><expr><name pos:line="47" pos:column="40">readbytes<pos:position pos:line="47" pos:column="49"/></name></expr></argument>)<pos:position pos:line="47" pos:column="50"/></argument_list></call></expr>;<pos:position pos:line="47" pos:column="51"/></expr_stmt>
        <if pos:line="48" pos:column="9">if <condition pos:line="48" pos:column="12">(<expr><name pos:line="48" pos:column="13">saved_timeout<pos:position pos:line="48" pos:column="26"/></name> <operator pos:line="48" pos:column="27">!=<pos:position pos:line="48" pos:column="29"/></operator> <name pos:line="48" pos:column="30">UNSET<pos:position pos:line="48" pos:column="35"/></name></expr>)<pos:position pos:line="48" pos:column="36"/></condition><then pos:line="48" pos:column="36"> <block pos:line="48" pos:column="37">{
            <expr_stmt><expr><call><name pos:line="49" pos:column="13">apr_socket_timeout_set<pos:position pos:line="49" pos:column="35"/></name><argument_list pos:line="49" pos:column="35">(<argument><expr><name><name pos:line="49" pos:column="36">cin<pos:position pos:line="49" pos:column="39"/></name><operator pos:line="49" pos:column="39">-&gt;<pos:position pos:line="49" pos:column="44"/></operator><name pos:line="49" pos:column="41">socket<pos:position pos:line="49" pos:column="47"/></name></name></expr></argument>, <argument><expr><name pos:line="49" pos:column="49">saved_timeout<pos:position pos:line="49" pos:column="62"/></name></expr></argument>)<pos:position pos:line="49" pos:column="63"/></argument_list></call></expr>;<pos:position pos:line="49" pos:column="64"/></expr_stmt>
        }<pos:position pos:line="50" pos:column="10"/></block></then></if>
    }<pos:position pos:line="51" pos:column="6"/></block></then></if>
    
    <switch pos:line="53" pos:column="5">switch <condition pos:line="53" pos:column="12">(<expr><name pos:line="53" pos:column="13">status<pos:position pos:line="53" pos:column="19"/></name></expr>)<pos:position pos:line="53" pos:column="20"/></condition> <block pos:line="53" pos:column="21">{
        <case pos:line="54" pos:column="9">case <expr><name pos:line="54" pos:column="14">APR_SUCCESS<pos:position pos:line="54" pos:column="25"/></name></expr>:<pos:position pos:line="54" pos:column="26"/></case>
            <expr_stmt><expr><name pos:line="55" pos:column="13">status<pos:position pos:line="55" pos:column="19"/></name> <operator pos:line="55" pos:column="20">=<pos:position pos:line="55" pos:column="21"/></operator> <call><name pos:line="55" pos:column="22">consume_brigade<pos:position pos:line="55" pos:column="37"/></name><argument_list pos:line="55" pos:column="37">(<argument><expr><name pos:line="55" pos:column="38">cin<pos:position pos:line="55" pos:column="41"/></name></expr></argument>, <argument><expr><name><name pos:line="55" pos:column="43">cin<pos:position pos:line="55" pos:column="46"/></name><operator pos:line="55" pos:column="46">-&gt;<pos:position pos:line="55" pos:column="51"/></operator><name pos:line="55" pos:column="48">bb<pos:position pos:line="55" pos:column="50"/></name></name></expr></argument>, <argument><expr><name pos:line="55" pos:column="52">block<pos:position pos:line="55" pos:column="57"/></name></expr></argument>)<pos:position pos:line="55" pos:column="58"/></argument_list></call></expr>;<pos:position pos:line="55" pos:column="59"/></expr_stmt>
            <break pos:line="56" pos:column="13">break;<pos:position pos:line="56" pos:column="19"/></break>
        <case pos:line="57" pos:column="9">case <expr><name pos:line="57" pos:column="14">APR_EOF<pos:position pos:line="57" pos:column="21"/></name></expr>:<pos:position pos:line="57" pos:column="22"/></case>
        <case pos:line="58" pos:column="9">case <expr><name pos:line="58" pos:column="14">APR_EAGAIN<pos:position pos:line="58" pos:column="24"/></name></expr>:<pos:position pos:line="58" pos:column="25"/></case>
        <case pos:line="59" pos:column="9">case <expr><name pos:line="59" pos:column="14">APR_TIMEUP<pos:position pos:line="59" pos:column="24"/></name></expr>:<pos:position pos:line="59" pos:column="25"/></case>
            <expr_stmt><expr><call><name pos:line="60" pos:column="13">ap_log_cerror<pos:position pos:line="60" pos:column="26"/></name><argument_list pos:line="60" pos:column="26">(<argument><expr><name pos:line="60" pos:column="27">APLOG_MARK<pos:position pos:line="60" pos:column="37"/></name></expr></argument>, <argument><expr><name pos:line="60" pos:column="39">APLOG_TRACE1<pos:position pos:line="60" pos:column="51"/></name></expr></argument>, <argument><expr><name pos:line="60" pos:column="53">status<pos:position pos:line="60" pos:column="59"/></name></expr></argument>, <argument><expr><name><name pos:line="60" pos:column="61">f<pos:position pos:line="60" pos:column="62"/></name><operator pos:line="60" pos:column="62">-&gt;<pos:position pos:line="60" pos:column="67"/></operator><name pos:line="60" pos:column="64">c<pos:position pos:line="60" pos:column="65"/></name></name></expr></argument>,
                          <argument><expr><literal type="string" pos:line="61" pos:column="27">"core_input(%ld): read"<pos:position pos:line="61" pos:column="50"/></literal></expr></argument>, <argument><expr><operator pos:line="61" pos:column="52">(<pos:position pos:line="61" pos:column="53"/></operator><name pos:line="61" pos:column="53">long<pos:position pos:line="61" pos:column="57"/></name><operator pos:line="61" pos:column="57">)<pos:position pos:line="61" pos:column="58"/></operator><name><name pos:line="61" pos:column="58">f<pos:position pos:line="61" pos:column="59"/></name><operator pos:line="61" pos:column="59">-&gt;<pos:position pos:line="61" pos:column="64"/></operator><name pos:line="61" pos:column="61">c<pos:position pos:line="61" pos:column="62"/></name><operator pos:line="61" pos:column="62">-&gt;<pos:position pos:line="61" pos:column="67"/></operator><name pos:line="61" pos:column="64">id<pos:position pos:line="61" pos:column="66"/></name></name></expr></argument>)<pos:position pos:line="61" pos:column="67"/></argument_list></call></expr>;<pos:position pos:line="61" pos:column="68"/></expr_stmt>
            <break pos:line="62" pos:column="13">break;<pos:position pos:line="62" pos:column="19"/></break>
        <default pos:line="63" pos:column="9">default:<pos:position pos:line="63" pos:column="17"/></default>
            <expr_stmt><expr><call><name pos:line="64" pos:column="13">ap_log_cerror<pos:position pos:line="64" pos:column="26"/></name><argument_list pos:line="64" pos:column="26">(<argument><expr><name pos:line="64" pos:column="27">APLOG_MARK<pos:position pos:line="64" pos:column="37"/></name></expr></argument>, <argument><expr><name pos:line="64" pos:column="39">APLOG_DEBUG<pos:position pos:line="64" pos:column="50"/></name></expr></argument>, <argument><expr><name pos:line="64" pos:column="52">status<pos:position pos:line="64" pos:column="58"/></name></expr></argument>, <argument><expr><name><name pos:line="64" pos:column="60">f<pos:position pos:line="64" pos:column="61"/></name><operator pos:line="64" pos:column="61">-&gt;<pos:position pos:line="64" pos:column="66"/></operator><name pos:line="64" pos:column="63">c<pos:position pos:line="64" pos:column="64"/></name></name></expr></argument>, <argument><expr><call><name pos:line="64" pos:column="66">APLOGNO<pos:position pos:line="64" pos:column="73"/></name><argument_list pos:line="64" pos:column="73">(<argument><expr><literal type="number" pos:line="64" pos:column="74">03046<pos:position pos:line="64" pos:column="79"/></literal></expr></argument>)<pos:position pos:line="64" pos:column="80"/></argument_list></call>
                          <literal type="string" pos:line="65" pos:column="27">"h2_conn_io: error reading"<pos:position pos:line="65" pos:column="54"/></literal></expr></argument>)<pos:position pos:line="65" pos:column="55"/></argument_list></call></expr>;<pos:position pos:line="65" pos:column="56"/></expr_stmt>
            <break pos:line="66" pos:column="13">break;<pos:position pos:line="66" pos:column="19"/></break>
    }<pos:position pos:line="67" pos:column="6"/></block></switch>
    <return pos:line="68" pos:column="5">return <expr><name pos:line="68" pos:column="12">status<pos:position pos:line="68" pos:column="18"/></name></expr>;<pos:position pos:line="68" pos:column="19"/></return>
}<pos:position pos:line="69" pos:column="2"/></block></function></unit>

<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/httpd/gumtree/httpd_repos_function_2622_httpd-2.2.17.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">apr_status_t<pos:position pos:line="1" pos:column="20"/></name></type> <name pos:line="1" pos:column="21">vt_db_fetch<pos:position pos:line="1" pos:column="32"/></name><parameter_list pos:line="1" pos:column="32">(<parameter><decl><type><name pos:line="1" pos:column="33">apr_dbm_t<pos:position pos:line="1" pos:column="42"/></name> <modifier pos:line="1" pos:column="43">*<pos:position pos:line="1" pos:column="44"/></modifier></type><name pos:line="1" pos:column="44">dbm<pos:position pos:line="1" pos:column="47"/></name></decl></parameter>, <parameter><decl><type><name pos:line="1" pos:column="49">apr_datum_t<pos:position pos:line="1" pos:column="60"/></name></type> <name pos:line="1" pos:column="61">key<pos:position pos:line="1" pos:column="64"/></name></decl></parameter>,
                                <parameter><decl><type><name pos:line="2" pos:column="33">apr_datum_t<pos:position pos:line="2" pos:column="44"/></name> <modifier pos:line="2" pos:column="45">*<pos:position pos:line="2" pos:column="46"/></modifier></type> <name pos:line="2" pos:column="47">pvalue<pos:position pos:line="2" pos:column="53"/></name></decl></parameter>)<pos:position pos:line="2" pos:column="54"/></parameter_list>
<block pos:line="3" pos:column="1">{
    <decl_stmt><decl><type><name pos:line="4" pos:column="5">DBT<pos:position pos:line="4" pos:column="8"/></name></type> <name pos:line="4" pos:column="9">ckey<pos:position pos:line="4" pos:column="13"/></name> <init pos:line="4" pos:column="14">= <expr><block pos:line="4" pos:column="16">{ <expr><literal type="number" pos:line="4" pos:column="18">0<pos:position pos:line="4" pos:column="19"/></literal></expr> }<pos:position pos:line="4" pos:column="21"/></block></expr></init></decl>;<pos:position pos:line="4" pos:column="22"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="5" pos:column="5">DBT<pos:position pos:line="5" pos:column="8"/></name></type> <name pos:line="5" pos:column="9">rd<pos:position pos:line="5" pos:column="11"/></name> <init pos:line="5" pos:column="12">= <expr><block pos:line="5" pos:column="14">{ <expr><literal type="number" pos:line="5" pos:column="16">0<pos:position pos:line="5" pos:column="17"/></literal></expr> }<pos:position pos:line="5" pos:column="19"/></block></expr></init></decl>;<pos:position pos:line="5" pos:column="20"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="6" pos:column="5">int<pos:position pos:line="6" pos:column="8"/></name></type> <name pos:line="6" pos:column="9">dberr<pos:position pos:line="6" pos:column="14"/></name></decl>;<pos:position pos:line="6" pos:column="15"/></decl_stmt>

    <expr_stmt><expr><name><name pos:line="8" pos:column="5">ckey<pos:position pos:line="8" pos:column="9"/></name><operator pos:line="8" pos:column="9">.<pos:position pos:line="8" pos:column="10"/></operator><name pos:line="8" pos:column="10">data<pos:position pos:line="8" pos:column="14"/></name></name> <operator pos:line="8" pos:column="15">=<pos:position pos:line="8" pos:column="16"/></operator> <name><name pos:line="8" pos:column="17">key<pos:position pos:line="8" pos:column="20"/></name><operator pos:line="8" pos:column="20">.<pos:position pos:line="8" pos:column="21"/></operator><name pos:line="8" pos:column="21">dptr<pos:position pos:line="8" pos:column="25"/></name></name></expr>;<pos:position pos:line="8" pos:column="26"/></expr_stmt>
    <expr_stmt><expr><name><name pos:line="9" pos:column="5">ckey<pos:position pos:line="9" pos:column="9"/></name><operator pos:line="9" pos:column="9">.<pos:position pos:line="9" pos:column="10"/></operator><name pos:line="9" pos:column="10">size<pos:position pos:line="9" pos:column="14"/></name></name> <operator pos:line="9" pos:column="15">=<pos:position pos:line="9" pos:column="16"/></operator> <name><name pos:line="9" pos:column="17">key<pos:position pos:line="9" pos:column="20"/></name><operator pos:line="9" pos:column="20">.<pos:position pos:line="9" pos:column="21"/></operator><name pos:line="9" pos:column="21">dsize<pos:position pos:line="9" pos:column="26"/></name></name></expr>;<pos:position pos:line="9" pos:column="27"/></expr_stmt>

    <expr_stmt><expr><name pos:line="11" pos:column="5">dberr<pos:position pos:line="11" pos:column="10"/></name> <operator pos:line="11" pos:column="11">=<pos:position pos:line="11" pos:column="12"/></operator> <call><name pos:line="11" pos:column="13">do_fetch<pos:position pos:line="11" pos:column="21"/></name><argument_list pos:line="11" pos:column="21">(<argument><expr><call><name pos:line="11" pos:column="22">GET_BDB<pos:position pos:line="11" pos:column="29"/></name><argument_list pos:line="11" pos:column="29">(<argument><expr><name><name pos:line="11" pos:column="30">dbm<pos:position pos:line="11" pos:column="33"/></name><operator pos:line="11" pos:column="33">-&gt;<pos:position pos:line="11" pos:column="38"/></operator><name pos:line="11" pos:column="35">file<pos:position pos:line="11" pos:column="39"/></name></name></expr></argument>)<pos:position pos:line="11" pos:column="40"/></argument_list></call></expr></argument>, <argument><expr><name pos:line="11" pos:column="42">ckey<pos:position pos:line="11" pos:column="46"/></name></expr></argument>, <argument><expr><name pos:line="11" pos:column="48">rd<pos:position pos:line="11" pos:column="50"/></name></expr></argument>)<pos:position pos:line="11" pos:column="51"/></argument_list></call></expr>;<pos:position pos:line="11" pos:column="52"/></expr_stmt>

    <comment type="block" pos:line="13" pos:column="5">/* "not found" is not an error. return zero'd value. */</comment>
    <if pos:line="14" pos:column="5">if <condition pos:line="14" pos:column="8">(<expr><name pos:line="14" pos:column="9">dberr<pos:position pos:line="14" pos:column="14"/></name> <operator pos:line="14" pos:column="15">==<pos:position pos:line="14" pos:column="17"/></operator>
<cpp:if pos:line="15" pos:column="1">#<cpp:directive pos:line="15" pos:column="2">if<pos:position pos:line="15" pos:column="4"/></cpp:directive> <expr><name pos:line="15" pos:column="5">DB_VER<pos:position pos:line="15" pos:column="11"/></name> <operator pos:line="15" pos:column="12">==<pos:position pos:line="15" pos:column="14"/></operator> <literal type="number" pos:line="15" pos:column="15">1<pos:position pos:line="15" pos:column="16"/></literal></expr></cpp:if>
        <name pos:line="16" pos:column="9">RET_SPECIAL<pos:position pos:line="16" pos:column="20"/></name>
<cpp:else pos:line="17" pos:column="1">#<cpp:directive pos:line="17" pos:column="2">else<pos:position pos:line="17" pos:column="6"/></cpp:directive></cpp:else>
        <name pos:line="18" pos:column="9">DB_NOTFOUND<pos:position pos:line="18" pos:column="20"/></name></expr>
<cpp:endif pos:line="19" pos:column="1">#<cpp:directive pos:line="19" pos:column="2">endif<pos:position pos:line="19" pos:column="7"/></cpp:directive></cpp:endif>
        )<pos:position pos:line="20" pos:column="10"/></condition><then pos:line="20" pos:column="10"> <block pos:line="20" pos:column="11">{
        <expr_stmt><expr><call><name pos:line="21" pos:column="9">memset<pos:position pos:line="21" pos:column="15"/></name><argument_list pos:line="21" pos:column="15">(<argument><expr><operator pos:line="21" pos:column="16">&amp;<pos:position pos:line="21" pos:column="21"/></operator><name pos:line="21" pos:column="17">rd<pos:position pos:line="21" pos:column="19"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="21" pos:column="21">0<pos:position pos:line="21" pos:column="22"/></literal></expr></argument>, <argument><expr><sizeof pos:line="21" pos:column="24">sizeof<argument_list pos:line="21" pos:column="30">(<argument><expr><name pos:line="21" pos:column="31">rd<pos:position pos:line="21" pos:column="33"/></name></expr></argument>)<pos:position pos:line="21" pos:column="34"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="21" pos:column="35"/></argument_list></call></expr>;<pos:position pos:line="21" pos:column="36"/></expr_stmt>
        <expr_stmt><expr><name pos:line="22" pos:column="9">dberr<pos:position pos:line="22" pos:column="14"/></name> <operator pos:line="22" pos:column="15">=<pos:position pos:line="22" pos:column="16"/></operator> <literal type="number" pos:line="22" pos:column="17">0<pos:position pos:line="22" pos:column="18"/></literal></expr>;<pos:position pos:line="22" pos:column="19"/></expr_stmt>
    }<pos:position pos:line="23" pos:column="6"/></block></then></if>

    <expr_stmt><expr><name><name pos:line="25" pos:column="5">pvalue<pos:position pos:line="25" pos:column="11"/></name><operator pos:line="25" pos:column="11">-&gt;<pos:position pos:line="25" pos:column="16"/></operator><name pos:line="25" pos:column="13">dptr<pos:position pos:line="25" pos:column="17"/></name></name> <operator pos:line="25" pos:column="18">=<pos:position pos:line="25" pos:column="19"/></operator> <name><name pos:line="25" pos:column="20">rd<pos:position pos:line="25" pos:column="22"/></name><operator pos:line="25" pos:column="22">.<pos:position pos:line="25" pos:column="23"/></operator><name pos:line="25" pos:column="23">data<pos:position pos:line="25" pos:column="27"/></name></name></expr>;<pos:position pos:line="25" pos:column="28"/></expr_stmt>
    <expr_stmt><expr><name><name pos:line="26" pos:column="5">pvalue<pos:position pos:line="26" pos:column="11"/></name><operator pos:line="26" pos:column="11">-&gt;<pos:position pos:line="26" pos:column="16"/></operator><name pos:line="26" pos:column="13">dsize<pos:position pos:line="26" pos:column="18"/></name></name> <operator pos:line="26" pos:column="19">=<pos:position pos:line="26" pos:column="20"/></operator> <name><name pos:line="26" pos:column="21">rd<pos:position pos:line="26" pos:column="23"/></name><operator pos:line="26" pos:column="23">.<pos:position pos:line="26" pos:column="24"/></operator><name pos:line="26" pos:column="24">size<pos:position pos:line="26" pos:column="28"/></name></name></expr>;<pos:position pos:line="26" pos:column="29"/></expr_stmt>

    <comment type="block" pos:line="28" pos:column="5">/* store the error info into DBM, and return a status code. Also, note
       that *pvalue should have been cleared on error. */</comment>
    <return pos:line="30" pos:column="5">return <expr><call><name pos:line="30" pos:column="12">set_error<pos:position pos:line="30" pos:column="21"/></name><argument_list pos:line="30" pos:column="21">(<argument><expr><name pos:line="30" pos:column="22">dbm<pos:position pos:line="30" pos:column="25"/></name></expr></argument>, <argument><expr><call><name pos:line="30" pos:column="27">db2s<pos:position pos:line="30" pos:column="31"/></name><argument_list pos:line="30" pos:column="31">(<argument><expr><name pos:line="30" pos:column="32">dberr<pos:position pos:line="30" pos:column="37"/></name></expr></argument>)<pos:position pos:line="30" pos:column="38"/></argument_list></call></expr></argument>)<pos:position pos:line="30" pos:column="39"/></argument_list></call></expr>;<pos:position pos:line="30" pos:column="40"/></return>
}<pos:position pos:line="31" pos:column="2"/></block></function></unit>

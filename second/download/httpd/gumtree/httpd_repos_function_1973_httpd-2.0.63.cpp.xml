<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/httpd/gumtree/httpd_repos_function_1973_httpd-2.0.63.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">int<pos:position pos:line="1" pos:column="11"/></name></type> <name pos:line="1" pos:column="12">core_create_req<pos:position pos:line="1" pos:column="27"/></name><parameter_list pos:line="1" pos:column="27">(<parameter><decl><type><name pos:line="1" pos:column="28">request_rec<pos:position pos:line="1" pos:column="39"/></name> <modifier pos:line="1" pos:column="40">*<pos:position pos:line="1" pos:column="41"/></modifier></type><name pos:line="1" pos:column="41">r<pos:position pos:line="1" pos:column="42"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="43"/></parameter_list>
<block pos:line="2" pos:column="1">{
    <comment type="block" pos:line="3" pos:column="5">/* Alloc the config struct and the array of request notes in
     * a single block for efficiency
     */</comment>
    <decl_stmt><decl><type><name pos:line="6" pos:column="5">core_request_config<pos:position pos:line="6" pos:column="24"/></name> <modifier pos:line="6" pos:column="25">*<pos:position pos:line="6" pos:column="26"/></modifier></type><name pos:line="6" pos:column="26">req_cfg<pos:position pos:line="6" pos:column="33"/></name></decl>;<pos:position pos:line="6" pos:column="34"/></decl_stmt>

    <expr_stmt><expr><name pos:line="8" pos:column="5">req_cfg<pos:position pos:line="8" pos:column="12"/></name> <operator pos:line="8" pos:column="13">=<pos:position pos:line="8" pos:column="14"/></operator> <call><name pos:line="8" pos:column="15">apr_pcalloc<pos:position pos:line="8" pos:column="26"/></name><argument_list pos:line="8" pos:column="26">(<argument><expr><name><name pos:line="8" pos:column="27">r<pos:position pos:line="8" pos:column="28"/></name><operator pos:line="8" pos:column="28">-&gt;<pos:position pos:line="8" pos:column="33"/></operator><name pos:line="8" pos:column="30">pool<pos:position pos:line="8" pos:column="34"/></name></name></expr></argument>, <argument><expr><sizeof pos:line="8" pos:column="36">sizeof<argument_list pos:line="8" pos:column="42">(<argument><expr><name pos:line="8" pos:column="43">core_request_config<pos:position pos:line="8" pos:column="62"/></name></expr></argument>)<pos:position pos:line="8" pos:column="63"/></argument_list></sizeof> <operator pos:line="8" pos:column="64">+<pos:position pos:line="8" pos:column="65"/></operator>
                          <sizeof pos:line="9" pos:column="27">sizeof<argument_list pos:line="9" pos:column="33">(<argument><expr><name pos:line="9" pos:column="34">void<pos:position pos:line="9" pos:column="38"/></name> <operator pos:line="9" pos:column="39">*<pos:position pos:line="9" pos:column="40"/></operator></expr></argument>)<pos:position pos:line="9" pos:column="41"/></argument_list></sizeof> <operator pos:line="9" pos:column="42">*<pos:position pos:line="9" pos:column="43"/></operator> <name pos:line="9" pos:column="44">num_request_notes<pos:position pos:line="9" pos:column="61"/></name></expr></argument>)<pos:position pos:line="9" pos:column="62"/></argument_list></call></expr>;<pos:position pos:line="9" pos:column="63"/></expr_stmt>
    <expr_stmt><expr><name><name pos:line="10" pos:column="5">req_cfg<pos:position pos:line="10" pos:column="12"/></name><operator pos:line="10" pos:column="12">-&gt;<pos:position pos:line="10" pos:column="17"/></operator><name pos:line="10" pos:column="14">notes<pos:position pos:line="10" pos:column="19"/></name></name> <operator pos:line="10" pos:column="20">=<pos:position pos:line="10" pos:column="21"/></operator> <operator pos:line="10" pos:column="22">(<pos:position pos:line="10" pos:column="23"/></operator><name pos:line="10" pos:column="23">void<pos:position pos:line="10" pos:column="27"/></name> <operator pos:line="10" pos:column="28">*<pos:position pos:line="10" pos:column="29"/></operator><operator pos:line="10" pos:column="29">*<pos:position pos:line="10" pos:column="30"/></operator><operator pos:line="10" pos:column="30">)<pos:position pos:line="10" pos:column="31"/></operator><operator pos:line="10" pos:column="31">(<pos:position pos:line="10" pos:column="32"/></operator><operator pos:line="10" pos:column="32">(<pos:position pos:line="10" pos:column="33"/></operator><name pos:line="10" pos:column="33">char<pos:position pos:line="10" pos:column="37"/></name> <operator pos:line="10" pos:column="38">*<pos:position pos:line="10" pos:column="39"/></operator><operator pos:line="10" pos:column="39">)<pos:position pos:line="10" pos:column="40"/></operator><name pos:line="10" pos:column="40">req_cfg<pos:position pos:line="10" pos:column="47"/></name> <operator pos:line="10" pos:column="48">+<pos:position pos:line="10" pos:column="49"/></operator> <sizeof pos:line="10" pos:column="50">sizeof<argument_list pos:line="10" pos:column="56">(<argument><expr><name pos:line="10" pos:column="57">core_request_config<pos:position pos:line="10" pos:column="76"/></name></expr></argument>)<pos:position pos:line="10" pos:column="77"/></argument_list></sizeof><operator pos:line="10" pos:column="77">)<pos:position pos:line="10" pos:column="78"/></operator></expr>;<pos:position pos:line="10" pos:column="79"/></expr_stmt>

    <comment type="block" pos:line="12" pos:column="5">/* ### temporarily enable script delivery as the default */</comment>
    <expr_stmt><expr><name><name pos:line="13" pos:column="5">req_cfg<pos:position pos:line="13" pos:column="12"/></name><operator pos:line="13" pos:column="12">-&gt;<pos:position pos:line="13" pos:column="17"/></operator><name pos:line="13" pos:column="14">deliver_script<pos:position pos:line="13" pos:column="28"/></name></name> <operator pos:line="13" pos:column="29">=<pos:position pos:line="13" pos:column="30"/></operator> <literal type="number" pos:line="13" pos:column="31">1<pos:position pos:line="13" pos:column="32"/></literal></expr>;<pos:position pos:line="13" pos:column="33"/></expr_stmt>

    <if pos:line="15" pos:column="5">if <condition pos:line="15" pos:column="8">(<expr><name><name pos:line="15" pos:column="9">r<pos:position pos:line="15" pos:column="10"/></name><operator pos:line="15" pos:column="10">-&gt;<pos:position pos:line="15" pos:column="15"/></operator><name pos:line="15" pos:column="12">main<pos:position pos:line="15" pos:column="16"/></name></name></expr>)<pos:position pos:line="15" pos:column="17"/></condition><then pos:line="15" pos:column="17"> <block pos:line="15" pos:column="18">{
        <decl_stmt><decl><type><name pos:line="16" pos:column="9">core_request_config<pos:position pos:line="16" pos:column="28"/></name> <modifier pos:line="16" pos:column="29">*<pos:position pos:line="16" pos:column="30"/></modifier></type><name pos:line="16" pos:column="30">main_req_cfg<pos:position pos:line="16" pos:column="42"/></name> <init pos:line="16" pos:column="43">= <expr><operator pos:line="16" pos:column="45">(<pos:position pos:line="16" pos:column="46"/></operator><name pos:line="16" pos:column="46">core_request_config<pos:position pos:line="16" pos:column="65"/></name> <operator pos:line="16" pos:column="66">*<pos:position pos:line="16" pos:column="67"/></operator><operator pos:line="16" pos:column="67">)<pos:position pos:line="16" pos:column="68"/></operator>
            <call><name pos:line="17" pos:column="13">ap_get_module_config<pos:position pos:line="17" pos:column="33"/></name><argument_list pos:line="17" pos:column="33">(<argument><expr><name><name pos:line="17" pos:column="34">r<pos:position pos:line="17" pos:column="35"/></name><operator pos:line="17" pos:column="35">-&gt;<pos:position pos:line="17" pos:column="40"/></operator><name pos:line="17" pos:column="37">main<pos:position pos:line="17" pos:column="41"/></name><operator pos:line="17" pos:column="41">-&gt;<pos:position pos:line="17" pos:column="46"/></operator><name pos:line="17" pos:column="43">request_config<pos:position pos:line="17" pos:column="57"/></name></name></expr></argument>, <argument><expr><operator pos:line="17" pos:column="59">&amp;<pos:position pos:line="17" pos:column="64"/></operator><name pos:line="17" pos:column="60">core_module<pos:position pos:line="17" pos:column="71"/></name></expr></argument>)<pos:position pos:line="17" pos:column="72"/></argument_list></call></expr></init></decl>;<pos:position pos:line="17" pos:column="73"/></decl_stmt>
        <expr_stmt><expr><name><name pos:line="18" pos:column="9">req_cfg<pos:position pos:line="18" pos:column="16"/></name><operator pos:line="18" pos:column="16">-&gt;<pos:position pos:line="18" pos:column="21"/></operator><name pos:line="18" pos:column="18">bb<pos:position pos:line="18" pos:column="20"/></name></name> <operator pos:line="18" pos:column="21">=<pos:position pos:line="18" pos:column="22"/></operator> <name><name pos:line="18" pos:column="23">main_req_cfg<pos:position pos:line="18" pos:column="35"/></name><operator pos:line="18" pos:column="35">-&gt;<pos:position pos:line="18" pos:column="40"/></operator><name pos:line="18" pos:column="37">bb<pos:position pos:line="18" pos:column="39"/></name></name></expr>;<pos:position pos:line="18" pos:column="40"/></expr_stmt>
    }<pos:position pos:line="19" pos:column="6"/></block></then>
    <else pos:line="20" pos:column="5">else <block pos:line="20" pos:column="10">{
        <expr_stmt><expr><name><name pos:line="21" pos:column="9">req_cfg<pos:position pos:line="21" pos:column="16"/></name><operator pos:line="21" pos:column="16">-&gt;<pos:position pos:line="21" pos:column="21"/></operator><name pos:line="21" pos:column="18">bb<pos:position pos:line="21" pos:column="20"/></name></name> <operator pos:line="21" pos:column="21">=<pos:position pos:line="21" pos:column="22"/></operator> <call><name pos:line="21" pos:column="23">apr_brigade_create<pos:position pos:line="21" pos:column="41"/></name><argument_list pos:line="21" pos:column="41">(<argument><expr><name><name pos:line="21" pos:column="42">r<pos:position pos:line="21" pos:column="43"/></name><operator pos:line="21" pos:column="43">-&gt;<pos:position pos:line="21" pos:column="48"/></operator><name pos:line="21" pos:column="45">pool<pos:position pos:line="21" pos:column="49"/></name></name></expr></argument>, <argument><expr><name><name pos:line="21" pos:column="51">r<pos:position pos:line="21" pos:column="52"/></name><operator pos:line="21" pos:column="52">-&gt;<pos:position pos:line="21" pos:column="57"/></operator><name pos:line="21" pos:column="54">connection<pos:position pos:line="21" pos:column="64"/></name><operator pos:line="21" pos:column="64">-&gt;<pos:position pos:line="21" pos:column="69"/></operator><name pos:line="21" pos:column="66">bucket_alloc<pos:position pos:line="21" pos:column="78"/></name></name></expr></argument>)<pos:position pos:line="21" pos:column="79"/></argument_list></call></expr>;<pos:position pos:line="21" pos:column="80"/></expr_stmt>
        <if pos:line="22" pos:column="9">if <condition pos:line="22" pos:column="12">(<expr><operator pos:line="22" pos:column="13">!<pos:position pos:line="22" pos:column="14"/></operator><name><name pos:line="22" pos:column="14">r<pos:position pos:line="22" pos:column="15"/></name><operator pos:line="22" pos:column="15">-&gt;<pos:position pos:line="22" pos:column="20"/></operator><name pos:line="22" pos:column="17">prev<pos:position pos:line="22" pos:column="21"/></name></name></expr>)<pos:position pos:line="22" pos:column="22"/></condition><then pos:line="22" pos:column="22"> <block pos:line="22" pos:column="23">{
            <expr_stmt><expr><call><name pos:line="23" pos:column="13">ap_add_input_filter_handle<pos:position pos:line="23" pos:column="39"/></name><argument_list pos:line="23" pos:column="39">(<argument><expr><name pos:line="23" pos:column="40">ap_net_time_filter_handle<pos:position pos:line="23" pos:column="65"/></name></expr></argument>,
                                       <argument><expr><name pos:line="24" pos:column="40">NULL<pos:position pos:line="24" pos:column="44"/></name></expr></argument>, <argument><expr><name pos:line="24" pos:column="46">r<pos:position pos:line="24" pos:column="47"/></name></expr></argument>, <argument><expr><name><name pos:line="24" pos:column="49">r<pos:position pos:line="24" pos:column="50"/></name><operator pos:line="24" pos:column="50">-&gt;<pos:position pos:line="24" pos:column="55"/></operator><name pos:line="24" pos:column="52">connection<pos:position pos:line="24" pos:column="62"/></name></name></expr></argument>)<pos:position pos:line="24" pos:column="63"/></argument_list></call></expr>;<pos:position pos:line="24" pos:column="64"/></expr_stmt>
        }<pos:position pos:line="25" pos:column="10"/></block></then></if>
    }<pos:position pos:line="26" pos:column="6"/></block></else></if>

    <expr_stmt><expr><call><name pos:line="28" pos:column="5">ap_set_module_config<pos:position pos:line="28" pos:column="25"/></name><argument_list pos:line="28" pos:column="25">(<argument><expr><name><name pos:line="28" pos:column="26">r<pos:position pos:line="28" pos:column="27"/></name><operator pos:line="28" pos:column="27">-&gt;<pos:position pos:line="28" pos:column="32"/></operator><name pos:line="28" pos:column="29">request_config<pos:position pos:line="28" pos:column="43"/></name></name></expr></argument>, <argument><expr><operator pos:line="28" pos:column="45">&amp;<pos:position pos:line="28" pos:column="50"/></operator><name pos:line="28" pos:column="46">core_module<pos:position pos:line="28" pos:column="57"/></name></expr></argument>, <argument><expr><name pos:line="28" pos:column="59">req_cfg<pos:position pos:line="28" pos:column="66"/></name></expr></argument>)<pos:position pos:line="28" pos:column="67"/></argument_list></call></expr>;<pos:position pos:line="28" pos:column="68"/></expr_stmt>

    <comment type="block" pos:line="30" pos:column="5">/* Begin by presuming any module can make its own path_info assumptions,
     * until some module interjects and changes the value.
     */</comment>
    <expr_stmt><expr><name><name pos:line="33" pos:column="5">r<pos:position pos:line="33" pos:column="6"/></name><operator pos:line="33" pos:column="6">-&gt;<pos:position pos:line="33" pos:column="11"/></operator><name pos:line="33" pos:column="8">used_path_info<pos:position pos:line="33" pos:column="22"/></name></name> <operator pos:line="33" pos:column="23">=<pos:position pos:line="33" pos:column="24"/></operator> <name pos:line="33" pos:column="25">AP_REQ_DEFAULT_PATH_INFO<pos:position pos:line="33" pos:column="49"/></name></expr>;<pos:position pos:line="33" pos:column="50"/></expr_stmt>

    <return pos:line="35" pos:column="5">return <expr><name pos:line="35" pos:column="12">OK<pos:position pos:line="35" pos:column="14"/></name></expr>;<pos:position pos:line="35" pos:column="15"/></return>
}<pos:position pos:line="36" pos:column="2"/></block></function></unit>

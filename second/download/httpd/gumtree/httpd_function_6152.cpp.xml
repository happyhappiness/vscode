<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/httpd/gumtree/httpd_function_6152.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">apr_status_t<pos:position pos:line="1" pos:column="20"/></name></type> <name pos:line="1" pos:column="21">open_response<pos:position pos:line="1" pos:column="34"/></name><parameter_list pos:line="1" pos:column="34">(<parameter><decl><type><name pos:line="1" pos:column="35">h2_task_output<pos:position pos:line="1" pos:column="49"/></name> <modifier pos:line="1" pos:column="50">*<pos:position pos:line="1" pos:column="51"/></modifier></type><name pos:line="1" pos:column="51">output<pos:position pos:line="1" pos:column="57"/></name></decl></parameter>, <parameter><decl><type><name pos:line="1" pos:column="59">ap_filter_t<pos:position pos:line="1" pos:column="70"/></name> <modifier pos:line="1" pos:column="71">*<pos:position pos:line="1" pos:column="72"/></modifier></type><name pos:line="1" pos:column="72">f<pos:position pos:line="1" pos:column="73"/></name></decl></parameter>,
                                  <parameter><decl><type><name pos:line="2" pos:column="35">apr_bucket_brigade<pos:position pos:line="2" pos:column="53"/></name> <modifier pos:line="2" pos:column="54">*<pos:position pos:line="2" pos:column="55"/></modifier></type><name pos:line="2" pos:column="55">bb<pos:position pos:line="2" pos:column="57"/></name></decl></parameter>, <parameter><decl><type><specifier pos:line="2" pos:column="59">const<pos:position pos:line="2" pos:column="64"/></specifier> <name pos:line="2" pos:column="65">char<pos:position pos:line="2" pos:column="69"/></name> <modifier pos:line="2" pos:column="70">*<pos:position pos:line="2" pos:column="71"/></modifier></type><name pos:line="2" pos:column="71">caller<pos:position pos:line="2" pos:column="77"/></name></decl></parameter>)<pos:position pos:line="2" pos:column="78"/></parameter_list>
<block pos:line="3" pos:column="1">{
    <decl_stmt><decl><type><name pos:line="4" pos:column="5">h2_response<pos:position pos:line="4" pos:column="16"/></name> <modifier pos:line="4" pos:column="17">*<pos:position pos:line="4" pos:column="18"/></modifier></type><name pos:line="4" pos:column="18">response<pos:position pos:line="4" pos:column="26"/></name></decl>;<pos:position pos:line="4" pos:column="27"/></decl_stmt>
    <expr_stmt><expr><name pos:line="5" pos:column="5">response<pos:position pos:line="5" pos:column="13"/></name> <operator pos:line="5" pos:column="14">=<pos:position pos:line="5" pos:column="15"/></operator> <call><name pos:line="5" pos:column="16">h2_from_h1_get_response<pos:position pos:line="5" pos:column="39"/></name><argument_list pos:line="5" pos:column="39">(<argument><expr><name><name pos:line="5" pos:column="40">output<pos:position pos:line="5" pos:column="46"/></name><operator pos:line="5" pos:column="46">-&gt;<pos:position pos:line="5" pos:column="51"/></operator><name pos:line="5" pos:column="48">from_h1<pos:position pos:line="5" pos:column="55"/></name></name></expr></argument>)<pos:position pos:line="5" pos:column="56"/></argument_list></call></expr>;<pos:position pos:line="5" pos:column="57"/></expr_stmt>
    <if pos:line="6" pos:column="5">if <condition pos:line="6" pos:column="8">(<expr><operator pos:line="6" pos:column="9">!<pos:position pos:line="6" pos:column="10"/></operator><name pos:line="6" pos:column="10">response<pos:position pos:line="6" pos:column="18"/></name></expr>)<pos:position pos:line="6" pos:column="19"/></condition><then pos:line="6" pos:column="19"> <block pos:line="6" pos:column="20">{
        <if pos:line="7" pos:column="9">if <condition pos:line="7" pos:column="12">(<expr><name pos:line="7" pos:column="13">f<pos:position pos:line="7" pos:column="14"/></name></expr>)<pos:position pos:line="7" pos:column="15"/></condition><then pos:line="7" pos:column="15"> <block pos:line="7" pos:column="16">{
            <comment type="block" pos:line="8" pos:column="13">/* This happens currently when ap_die(status, r) is invoked
             * by a read request filter. */</comment>
            <expr_stmt><expr><call><name pos:line="10" pos:column="13">ap_log_cerror<pos:position pos:line="10" pos:column="26"/></name><argument_list pos:line="10" pos:column="26">(<argument><expr><name pos:line="10" pos:column="27">APLOG_MARK<pos:position pos:line="10" pos:column="37"/></name></expr></argument>, <argument><expr><name pos:line="10" pos:column="39">APLOG_INFO<pos:position pos:line="10" pos:column="49"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="10" pos:column="51">0<pos:position pos:line="10" pos:column="52"/></literal></expr></argument>, <argument><expr><name><name pos:line="10" pos:column="54">output<pos:position pos:line="10" pos:column="60"/></name><operator pos:line="10" pos:column="60">-&gt;<pos:position pos:line="10" pos:column="65"/></operator><name pos:line="10" pos:column="62">task<pos:position pos:line="10" pos:column="66"/></name><operator pos:line="10" pos:column="66">-&gt;<pos:position pos:line="10" pos:column="71"/></operator><name pos:line="10" pos:column="68">c<pos:position pos:line="10" pos:column="69"/></name></name></expr></argument>, <argument><expr><call><name pos:line="10" pos:column="71">APLOGNO<pos:position pos:line="10" pos:column="78"/></name><argument_list pos:line="10" pos:column="78">(<argument><expr><literal type="number" pos:line="10" pos:column="79">03204<pos:position pos:line="10" pos:column="84"/></literal></expr></argument>)<pos:position pos:line="10" pos:column="85"/></argument_list></call>
                          <literal type="string" pos:line="11" pos:column="27">"h2_task_output(%s): write without response by %s "<pos:position pos:line="11" pos:column="78"/></literal>
                          <literal type="string" pos:line="12" pos:column="27">"for %s %s %s"<pos:position pos:line="12" pos:column="41"/></literal></expr></argument>,
                          <argument><expr><name><name pos:line="13" pos:column="27">output<pos:position pos:line="13" pos:column="33"/></name><operator pos:line="13" pos:column="33">-&gt;<pos:position pos:line="13" pos:column="38"/></operator><name pos:line="13" pos:column="35">task<pos:position pos:line="13" pos:column="39"/></name><operator pos:line="13" pos:column="39">-&gt;<pos:position pos:line="13" pos:column="44"/></operator><name pos:line="13" pos:column="41">id<pos:position pos:line="13" pos:column="43"/></name></name></expr></argument>, <argument><expr><name pos:line="13" pos:column="45">caller<pos:position pos:line="13" pos:column="51"/></name></expr></argument>, 
                          <argument><expr><name><name pos:line="14" pos:column="27">output<pos:position pos:line="14" pos:column="33"/></name><operator pos:line="14" pos:column="33">-&gt;<pos:position pos:line="14" pos:column="38"/></operator><name pos:line="14" pos:column="35">task<pos:position pos:line="14" pos:column="39"/></name><operator pos:line="14" pos:column="39">-&gt;<pos:position pos:line="14" pos:column="44"/></operator><name pos:line="14" pos:column="41">request<pos:position pos:line="14" pos:column="48"/></name><operator pos:line="14" pos:column="48">-&gt;<pos:position pos:line="14" pos:column="53"/></operator><name pos:line="14" pos:column="50">method<pos:position pos:line="14" pos:column="56"/></name></name></expr></argument>, 
                          <argument><expr><name><name pos:line="15" pos:column="27">output<pos:position pos:line="15" pos:column="33"/></name><operator pos:line="15" pos:column="33">-&gt;<pos:position pos:line="15" pos:column="38"/></operator><name pos:line="15" pos:column="35">task<pos:position pos:line="15" pos:column="39"/></name><operator pos:line="15" pos:column="39">-&gt;<pos:position pos:line="15" pos:column="44"/></operator><name pos:line="15" pos:column="41">request<pos:position pos:line="15" pos:column="48"/></name><operator pos:line="15" pos:column="48">-&gt;<pos:position pos:line="15" pos:column="53"/></operator><name pos:line="15" pos:column="50">authority<pos:position pos:line="15" pos:column="59"/></name></name></expr></argument>, 
                          <argument><expr><name><name pos:line="16" pos:column="27">output<pos:position pos:line="16" pos:column="33"/></name><operator pos:line="16" pos:column="33">-&gt;<pos:position pos:line="16" pos:column="38"/></operator><name pos:line="16" pos:column="35">task<pos:position pos:line="16" pos:column="39"/></name><operator pos:line="16" pos:column="39">-&gt;<pos:position pos:line="16" pos:column="44"/></operator><name pos:line="16" pos:column="41">request<pos:position pos:line="16" pos:column="48"/></name><operator pos:line="16" pos:column="48">-&gt;<pos:position pos:line="16" pos:column="53"/></operator><name pos:line="16" pos:column="50">path<pos:position pos:line="16" pos:column="54"/></name></name></expr></argument>)<pos:position pos:line="16" pos:column="55"/></argument_list></call></expr>;<pos:position pos:line="16" pos:column="56"/></expr_stmt>
            <expr_stmt><expr><name><name pos:line="17" pos:column="13">output<pos:position pos:line="17" pos:column="19"/></name><operator pos:line="17" pos:column="19">-&gt;<pos:position pos:line="17" pos:column="24"/></operator><name pos:line="17" pos:column="21">task<pos:position pos:line="17" pos:column="25"/></name><operator pos:line="17" pos:column="25">-&gt;<pos:position pos:line="17" pos:column="30"/></operator><name pos:line="17" pos:column="27">c<pos:position pos:line="17" pos:column="28"/></name><operator pos:line="17" pos:column="28">-&gt;<pos:position pos:line="17" pos:column="33"/></operator><name pos:line="17" pos:column="30">aborted<pos:position pos:line="17" pos:column="37"/></name></name> <operator pos:line="17" pos:column="38">=<pos:position pos:line="17" pos:column="39"/></operator> <literal type="number" pos:line="17" pos:column="40">1<pos:position pos:line="17" pos:column="41"/></literal></expr>;<pos:position pos:line="17" pos:column="42"/></expr_stmt>
        }<pos:position pos:line="18" pos:column="10"/></block></then></if>
        <if pos:line="19" pos:column="9">if <condition pos:line="19" pos:column="12">(<expr><name><name pos:line="19" pos:column="13">output<pos:position pos:line="19" pos:column="19"/></name><operator pos:line="19" pos:column="19">-&gt;<pos:position pos:line="19" pos:column="24"/></operator><name pos:line="19" pos:column="21">task<pos:position pos:line="19" pos:column="25"/></name><operator pos:line="19" pos:column="25">-&gt;<pos:position pos:line="19" pos:column="30"/></operator><name pos:line="19" pos:column="27">io<pos:position pos:line="19" pos:column="29"/></name></name></expr>)<pos:position pos:line="19" pos:column="30"/></condition><then pos:line="19" pos:column="30"> <block pos:line="19" pos:column="31">{
            <expr_stmt><expr><call><name pos:line="20" pos:column="13">apr_thread_cond_broadcast<pos:position pos:line="20" pos:column="38"/></name><argument_list pos:line="20" pos:column="38">(<argument><expr><name><name pos:line="20" pos:column="39">output<pos:position pos:line="20" pos:column="45"/></name><operator pos:line="20" pos:column="45">-&gt;<pos:position pos:line="20" pos:column="50"/></operator><name pos:line="20" pos:column="47">task<pos:position pos:line="20" pos:column="51"/></name><operator pos:line="20" pos:column="51">-&gt;<pos:position pos:line="20" pos:column="56"/></operator><name pos:line="20" pos:column="53">io<pos:position pos:line="20" pos:column="55"/></name></name></expr></argument>)<pos:position pos:line="20" pos:column="56"/></argument_list></call></expr>;<pos:position pos:line="20" pos:column="57"/></expr_stmt>
        }<pos:position pos:line="21" pos:column="10"/></block></then></if>
        <return pos:line="22" pos:column="9">return <expr><name pos:line="22" pos:column="16">APR_ECONNABORTED<pos:position pos:line="22" pos:column="32"/></name></expr>;<pos:position pos:line="22" pos:column="33"/></return>
    }<pos:position pos:line="23" pos:column="6"/></block></then></if>
    
    <if pos:line="25" pos:column="5">if <condition pos:line="25" pos:column="8">(<expr><name pos:line="25" pos:column="9">h2_task_logio_add_bytes_out<pos:position pos:line="25" pos:column="36"/></name></expr>)<pos:position pos:line="25" pos:column="37"/></condition><then pos:line="25" pos:column="37"> <block pos:line="25" pos:column="38">{
        <comment type="block" pos:line="26" pos:column="9">/* count headers as if we'd do a HTTP/1.1 serialization */</comment>
        <expr_stmt><expr><name><name pos:line="27" pos:column="9">output<pos:position pos:line="27" pos:column="15"/></name><operator pos:line="27" pos:column="15">-&gt;<pos:position pos:line="27" pos:column="20"/></operator><name pos:line="27" pos:column="17">written<pos:position pos:line="27" pos:column="24"/></name></name> <operator pos:line="27" pos:column="25">=<pos:position pos:line="27" pos:column="26"/></operator> <call><name pos:line="27" pos:column="27">h2_util_table_bytes<pos:position pos:line="27" pos:column="46"/></name><argument_list pos:line="27" pos:column="46">(<argument><expr><name><name pos:line="27" pos:column="47">response<pos:position pos:line="27" pos:column="55"/></name><operator pos:line="27" pos:column="55">-&gt;<pos:position pos:line="27" pos:column="60"/></operator><name pos:line="27" pos:column="57">headers<pos:position pos:line="27" pos:column="64"/></name></name></expr></argument>, <argument><expr><literal type="number" pos:line="27" pos:column="66">3<pos:position pos:line="27" pos:column="67"/></literal></expr></argument>)<pos:position pos:line="27" pos:column="68"/></argument_list></call><operator pos:line="27" pos:column="68">+<pos:position pos:line="27" pos:column="69"/></operator><literal type="number" pos:line="27" pos:column="69">1<pos:position pos:line="27" pos:column="70"/></literal></expr>;<pos:position pos:line="27" pos:column="71"/></expr_stmt>
        <expr_stmt><expr><call><name pos:line="28" pos:column="9">h2_task_logio_add_bytes_out<pos:position pos:line="28" pos:column="36"/></name><argument_list pos:line="28" pos:column="36">(<argument><expr><name><name pos:line="28" pos:column="37">output<pos:position pos:line="28" pos:column="43"/></name><operator pos:line="28" pos:column="43">-&gt;<pos:position pos:line="28" pos:column="48"/></operator><name pos:line="28" pos:column="45">task<pos:position pos:line="28" pos:column="49"/></name><operator pos:line="28" pos:column="49">-&gt;<pos:position pos:line="28" pos:column="54"/></operator><name pos:line="28" pos:column="51">c<pos:position pos:line="28" pos:column="52"/></name></name></expr></argument>, <argument><expr><name><name pos:line="28" pos:column="54">output<pos:position pos:line="28" pos:column="60"/></name><operator pos:line="28" pos:column="60">-&gt;<pos:position pos:line="28" pos:column="65"/></operator><name pos:line="28" pos:column="62">written<pos:position pos:line="28" pos:column="69"/></name></name></expr></argument>)<pos:position pos:line="28" pos:column="70"/></argument_list></call></expr>;<pos:position pos:line="28" pos:column="71"/></expr_stmt>
    }<pos:position pos:line="29" pos:column="6"/></block></then></if>
    <expr_stmt><expr><call><name pos:line="30" pos:column="5">ap_log_cerror<pos:position pos:line="30" pos:column="18"/></name><argument_list pos:line="30" pos:column="18">(<argument><expr><name pos:line="30" pos:column="19">APLOG_MARK<pos:position pos:line="30" pos:column="29"/></name></expr></argument>, <argument><expr><name pos:line="30" pos:column="31">APLOG_DEBUG<pos:position pos:line="30" pos:column="42"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="30" pos:column="44">0<pos:position pos:line="30" pos:column="45"/></literal></expr></argument>, <argument><expr><name><name pos:line="30" pos:column="47">output<pos:position pos:line="30" pos:column="53"/></name><operator pos:line="30" pos:column="53">-&gt;<pos:position pos:line="30" pos:column="58"/></operator><name pos:line="30" pos:column="55">task<pos:position pos:line="30" pos:column="59"/></name><operator pos:line="30" pos:column="59">-&gt;<pos:position pos:line="30" pos:column="64"/></operator><name pos:line="30" pos:column="61">c<pos:position pos:line="30" pos:column="62"/></name></name></expr></argument>, <argument><expr><call><name pos:line="30" pos:column="64">APLOGNO<pos:position pos:line="30" pos:column="71"/></name><argument_list pos:line="30" pos:column="71">(<argument><expr><literal type="number" pos:line="30" pos:column="72">03348<pos:position pos:line="30" pos:column="77"/></literal></expr></argument>)<pos:position pos:line="30" pos:column="78"/></argument_list></call>
                  <literal type="string" pos:line="31" pos:column="19">"h2_task(%s): open response to %s %s %s"<pos:position pos:line="31" pos:column="59"/></literal></expr></argument>,
                  <argument><expr><name><name pos:line="32" pos:column="19">output<pos:position pos:line="32" pos:column="25"/></name><operator pos:line="32" pos:column="25">-&gt;<pos:position pos:line="32" pos:column="30"/></operator><name pos:line="32" pos:column="27">task<pos:position pos:line="32" pos:column="31"/></name><operator pos:line="32" pos:column="31">-&gt;<pos:position pos:line="32" pos:column="36"/></operator><name pos:line="32" pos:column="33">id<pos:position pos:line="32" pos:column="35"/></name></name></expr></argument>, <argument><expr><name><name pos:line="32" pos:column="37">output<pos:position pos:line="32" pos:column="43"/></name><operator pos:line="32" pos:column="43">-&gt;<pos:position pos:line="32" pos:column="48"/></operator><name pos:line="32" pos:column="45">task<pos:position pos:line="32" pos:column="49"/></name><operator pos:line="32" pos:column="49">-&gt;<pos:position pos:line="32" pos:column="54"/></operator><name pos:line="32" pos:column="51">request<pos:position pos:line="32" pos:column="58"/></name><operator pos:line="32" pos:column="58">-&gt;<pos:position pos:line="32" pos:column="63"/></operator><name pos:line="32" pos:column="60">method<pos:position pos:line="32" pos:column="66"/></name></name></expr></argument>, 
                  <argument><expr><name><name pos:line="33" pos:column="19">output<pos:position pos:line="33" pos:column="25"/></name><operator pos:line="33" pos:column="25">-&gt;<pos:position pos:line="33" pos:column="30"/></operator><name pos:line="33" pos:column="27">task<pos:position pos:line="33" pos:column="31"/></name><operator pos:line="33" pos:column="31">-&gt;<pos:position pos:line="33" pos:column="36"/></operator><name pos:line="33" pos:column="33">request<pos:position pos:line="33" pos:column="40"/></name><operator pos:line="33" pos:column="40">-&gt;<pos:position pos:line="33" pos:column="45"/></operator><name pos:line="33" pos:column="42">authority<pos:position pos:line="33" pos:column="51"/></name></name></expr></argument>, 
                  <argument><expr><name><name pos:line="34" pos:column="19">output<pos:position pos:line="34" pos:column="25"/></name><operator pos:line="34" pos:column="25">-&gt;<pos:position pos:line="34" pos:column="30"/></operator><name pos:line="34" pos:column="27">task<pos:position pos:line="34" pos:column="31"/></name><operator pos:line="34" pos:column="31">-&gt;<pos:position pos:line="34" pos:column="36"/></operator><name pos:line="34" pos:column="33">request<pos:position pos:line="34" pos:column="40"/></name><operator pos:line="34" pos:column="40">-&gt;<pos:position pos:line="34" pos:column="45"/></operator><name pos:line="34" pos:column="42">path<pos:position pos:line="34" pos:column="46"/></name></name></expr></argument>)<pos:position pos:line="34" pos:column="47"/></argument_list></call></expr>;<pos:position pos:line="34" pos:column="48"/></expr_stmt>
    <return pos:line="35" pos:column="5">return <expr><call><name pos:line="35" pos:column="12">h2_mplx_out_open<pos:position pos:line="35" pos:column="28"/></name><argument_list pos:line="35" pos:column="28">(<argument><expr><name><name pos:line="35" pos:column="29">output<pos:position pos:line="35" pos:column="35"/></name><operator pos:line="35" pos:column="35">-&gt;<pos:position pos:line="35" pos:column="40"/></operator><name pos:line="35" pos:column="37">task<pos:position pos:line="35" pos:column="41"/></name><operator pos:line="35" pos:column="41">-&gt;<pos:position pos:line="35" pos:column="46"/></operator><name pos:line="35" pos:column="43">mplx<pos:position pos:line="35" pos:column="47"/></name></name></expr></argument>, <argument><expr><name><name pos:line="35" pos:column="49">output<pos:position pos:line="35" pos:column="55"/></name><operator pos:line="35" pos:column="55">-&gt;<pos:position pos:line="35" pos:column="60"/></operator><name pos:line="35" pos:column="57">task<pos:position pos:line="35" pos:column="61"/></name><operator pos:line="35" pos:column="61">-&gt;<pos:position pos:line="35" pos:column="66"/></operator><name pos:line="35" pos:column="63">stream_id<pos:position pos:line="35" pos:column="72"/></name></name></expr></argument>, 
                            <argument><expr><name pos:line="36" pos:column="29">response<pos:position pos:line="36" pos:column="37"/></name></expr></argument>, <argument><expr><name pos:line="36" pos:column="39">f<pos:position pos:line="36" pos:column="40"/></name></expr></argument>, <argument><expr><name pos:line="36" pos:column="42">bb<pos:position pos:line="36" pos:column="44"/></name></expr></argument>, <argument><expr><name><name pos:line="36" pos:column="46">output<pos:position pos:line="36" pos:column="52"/></name><operator pos:line="36" pos:column="52">-&gt;<pos:position pos:line="36" pos:column="57"/></operator><name pos:line="36" pos:column="54">task<pos:position pos:line="36" pos:column="58"/></name><operator pos:line="36" pos:column="58">-&gt;<pos:position pos:line="36" pos:column="63"/></operator><name pos:line="36" pos:column="60">io<pos:position pos:line="36" pos:column="62"/></name></name></expr></argument>)<pos:position pos:line="36" pos:column="63"/></argument_list></call></expr>;<pos:position pos:line="36" pos:column="64"/></return>
}<pos:position pos:line="37" pos:column="2"/></block></function></unit>

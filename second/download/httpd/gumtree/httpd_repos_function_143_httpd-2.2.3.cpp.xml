<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/httpd/gumtree/httpd_repos_function_143_httpd-2.2.3.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">BOOL<pos:position pos:line="1" pos:column="5"/></name></type> <name pos:line="1" pos:column="6">GetApacheServicesStatus<pos:position pos:line="1" pos:column="29"/></name><parameter_list pos:line="1" pos:column="29">()<pos:position pos:line="1" pos:column="31"/></parameter_list>
<block pos:line="2" pos:column="1">{
    <decl_stmt><decl><type><name pos:line="3" pos:column="5">CHAR<pos:position pos:line="3" pos:column="9"/></name></type> <name><name pos:line="3" pos:column="10">szKey<pos:position pos:line="3" pos:column="15"/></name><index pos:line="3" pos:column="15">[<expr><name pos:line="3" pos:column="16">MAX_PATH<pos:position pos:line="3" pos:column="24"/></name></expr>]<pos:position pos:line="3" pos:column="25"/></index></name></decl>;<pos:position pos:line="3" pos:column="26"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="4" pos:column="5">CHAR<pos:position pos:line="4" pos:column="9"/></name></type> <name><name pos:line="4" pos:column="10">achKey<pos:position pos:line="4" pos:column="16"/></name><index pos:line="4" pos:column="16">[<expr><name pos:line="4" pos:column="17">MAX_PATH<pos:position pos:line="4" pos:column="25"/></name></expr>]<pos:position pos:line="4" pos:column="26"/></index></name></decl>;<pos:position pos:line="4" pos:column="27"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="5" pos:column="5">CHAR<pos:position pos:line="5" pos:column="9"/></name></type> <name><name pos:line="5" pos:column="10">szImagePath<pos:position pos:line="5" pos:column="21"/></name><index pos:line="5" pos:column="21">[<expr><name pos:line="5" pos:column="22">MAX_PATH<pos:position pos:line="5" pos:column="30"/></name></expr>]<pos:position pos:line="5" pos:column="31"/></index></name></decl>;<pos:position pos:line="5" pos:column="32"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="6" pos:column="5">CHAR<pos:position pos:line="6" pos:column="9"/></name></type> <name><name pos:line="6" pos:column="10">szBuf<pos:position pos:line="6" pos:column="15"/></name><index pos:line="6" pos:column="15">[<expr><name pos:line="6" pos:column="16">MAX_PATH<pos:position pos:line="6" pos:column="24"/></name></expr>]<pos:position pos:line="6" pos:column="25"/></index></name></decl>;<pos:position pos:line="6" pos:column="26"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="7" pos:column="5">CHAR<pos:position pos:line="7" pos:column="9"/></name></type> <name><name pos:line="7" pos:column="10">szTmp<pos:position pos:line="7" pos:column="15"/></name><index pos:line="7" pos:column="15">[<expr><name pos:line="7" pos:column="16">MAX_PATH<pos:position pos:line="7" pos:column="24"/></name></expr>]<pos:position pos:line="7" pos:column="25"/></index></name></decl>;<pos:position pos:line="7" pos:column="26"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="8" pos:column="5">HKEY<pos:position pos:line="8" pos:column="9"/></name></type> <name pos:line="8" pos:column="10">hKey<pos:position pos:line="8" pos:column="14"/></name></decl>, <decl><type ref="prev"/><name pos:line="8" pos:column="16">hSubKey<pos:position pos:line="8" pos:column="23"/></name></decl>, <decl><type ref="prev"/><name pos:line="8" pos:column="25">hKeyRemote<pos:position pos:line="8" pos:column="35"/></name></decl>;<pos:position pos:line="8" pos:column="36"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="9" pos:column="5">DWORD<pos:position pos:line="9" pos:column="10"/></name></type> <name pos:line="9" pos:column="11">retCode<pos:position pos:line="9" pos:column="18"/></name></decl>, <decl><type ref="prev"/><name pos:line="9" pos:column="20">rv<pos:position pos:line="9" pos:column="22"/></name></decl>, <decl><type ref="prev"/><name pos:line="9" pos:column="24">dwKeyType<pos:position pos:line="9" pos:column="33"/></name></decl>;<pos:position pos:line="9" pos:column="34"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="10" pos:column="5">DWORD<pos:position pos:line="10" pos:column="10"/></name></type> <name pos:line="10" pos:column="11">dwBufLen<pos:position pos:line="10" pos:column="19"/></name> <init pos:line="10" pos:column="20">= <expr><name pos:line="10" pos:column="22">MAX_PATH<pos:position pos:line="10" pos:column="30"/></name></expr></init></decl>;<pos:position pos:line="10" pos:column="31"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="11" pos:column="5">int<pos:position pos:line="11" pos:column="8"/></name></type> <name pos:line="11" pos:column="9">i<pos:position pos:line="11" pos:column="10"/></name></decl>, <decl><type ref="prev"/><name pos:line="11" pos:column="12">stPos<pos:position pos:line="11" pos:column="17"/></name> <init pos:line="11" pos:column="18">= <expr><literal type="number" pos:line="11" pos:column="20">0<pos:position pos:line="11" pos:column="21"/></literal></expr></init></decl>;<pos:position pos:line="11" pos:column="22"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="12" pos:column="5">int<pos:position pos:line="12" pos:column="8"/></name></type> <name pos:line="12" pos:column="9">computers<pos:position pos:line="12" pos:column="18"/></name> <init pos:line="12" pos:column="19">= <expr><literal type="number" pos:line="12" pos:column="21">0<pos:position pos:line="12" pos:column="22"/></literal></expr></init></decl>;<pos:position pos:line="12" pos:column="23"/></decl_stmt>

    <expr_stmt><expr><name pos:line="14" pos:column="5">g_bRescanServices<pos:position pos:line="14" pos:column="22"/></name> <operator pos:line="14" pos:column="23">=<pos:position pos:line="14" pos:column="24"/></operator> <name pos:line="14" pos:column="25">FALSE<pos:position pos:line="14" pos:column="30"/></name></expr>;<pos:position pos:line="14" pos:column="31"/></expr_stmt>

    <expr_stmt><expr><call><name pos:line="16" pos:column="5">am_ClearServicesSt<pos:position pos:line="16" pos:column="23"/></name><argument_list pos:line="16" pos:column="23">()<pos:position pos:line="16" pos:column="25"/></argument_list></call></expr>;<pos:position pos:line="16" pos:column="26"/></expr_stmt>
    <while pos:line="17" pos:column="5">while <condition pos:line="17" pos:column="11">(<expr><name><name pos:line="17" pos:column="12">g_stComputers<pos:position pos:line="17" pos:column="25"/></name><index pos:line="17" pos:column="25">[<expr><name pos:line="17" pos:column="26">computers<pos:position pos:line="17" pos:column="35"/></name></expr>]<pos:position pos:line="17" pos:column="36"/></index></name><operator pos:line="17" pos:column="36">.<pos:position pos:line="17" pos:column="37"/></operator><name pos:line="17" pos:column="37">szComputerName<pos:position pos:line="17" pos:column="51"/></name> <operator pos:line="17" pos:column="52">!=<pos:position pos:line="17" pos:column="54"/></operator> <name pos:line="17" pos:column="55">NULL<pos:position pos:line="17" pos:column="59"/></name></expr>)<pos:position pos:line="17" pos:column="60"/></condition> <block pos:line="17" pos:column="61">{
        <expr_stmt><expr><name pos:line="18" pos:column="9">hKeyRemote<pos:position pos:line="18" pos:column="19"/></name> <operator pos:line="18" pos:column="20">=<pos:position pos:line="18" pos:column="21"/></operator> <name><name pos:line="18" pos:column="22">g_stComputers<pos:position pos:line="18" pos:column="35"/></name><index pos:line="18" pos:column="35">[<expr><name pos:line="18" pos:column="36">computers<pos:position pos:line="18" pos:column="45"/></name></expr>]<pos:position pos:line="18" pos:column="46"/></index></name><operator pos:line="18" pos:column="46">.<pos:position pos:line="18" pos:column="47"/></operator><name pos:line="18" pos:column="47">hRegistry<pos:position pos:line="18" pos:column="56"/></name></expr>;<pos:position pos:line="18" pos:column="57"/></expr_stmt>
        <expr_stmt><expr><name pos:line="19" pos:column="9">retCode<pos:position pos:line="19" pos:column="16"/></name> <operator pos:line="19" pos:column="17">=<pos:position pos:line="19" pos:column="18"/></operator> <call><name pos:line="19" pos:column="19">RegOpenKeyEx<pos:position pos:line="19" pos:column="31"/></name><argument_list pos:line="19" pos:column="31">(<argument><expr><name pos:line="19" pos:column="32">hKeyRemote<pos:position pos:line="19" pos:column="42"/></name></expr></argument>,
                               <argument><expr><literal type="string" pos:line="20" pos:column="32">"System\\CurrentControlSet\\Services\\"<pos:position pos:line="20" pos:column="71"/></literal></expr></argument>,
                               <argument><expr><literal type="number" pos:line="21" pos:column="32">0<pos:position pos:line="21" pos:column="33"/></literal></expr></argument>, <argument><expr><name pos:line="21" pos:column="35">KEY_READ<pos:position pos:line="21" pos:column="43"/></name></expr></argument>, <argument><expr><operator pos:line="21" pos:column="45">&amp;<pos:position pos:line="21" pos:column="50"/></operator><name pos:line="21" pos:column="46">hKey<pos:position pos:line="21" pos:column="50"/></name></expr></argument>)<pos:position pos:line="21" pos:column="51"/></argument_list></call></expr>;<pos:position pos:line="21" pos:column="52"/></expr_stmt>
        <if pos:line="22" pos:column="9">if <condition pos:line="22" pos:column="12">(<expr><name pos:line="22" pos:column="13">retCode<pos:position pos:line="22" pos:column="20"/></name> <operator pos:line="22" pos:column="21">!=<pos:position pos:line="22" pos:column="23"/></operator> <name pos:line="22" pos:column="24">ERROR_SUCCESS<pos:position pos:line="22" pos:column="37"/></name></expr>)<pos:position pos:line="22" pos:column="38"/></condition><then pos:line="22" pos:column="38">
        <block pos:line="23" pos:column="9">{
            <expr_stmt><expr><call><name pos:line="24" pos:column="13">ErrorMessage<pos:position pos:line="24" pos:column="25"/></name><argument_list pos:line="24" pos:column="25">(<argument><expr><name pos:line="24" pos:column="26">NULL<pos:position pos:line="24" pos:column="30"/></name></expr></argument>, <argument><expr><name pos:line="24" pos:column="32">FALSE<pos:position pos:line="24" pos:column="37"/></name></expr></argument>)<pos:position pos:line="24" pos:column="38"/></argument_list></call></expr>;<pos:position pos:line="24" pos:column="39"/></expr_stmt>
            <return pos:line="25" pos:column="13">return <expr><name pos:line="25" pos:column="20">FALSE<pos:position pos:line="25" pos:column="25"/></name></expr>;<pos:position pos:line="25" pos:column="26"/></return>
        }<pos:position pos:line="26" pos:column="10"/></block></then></if>
        <for pos:line="27" pos:column="9">for <control pos:line="27" pos:column="13">(<init><expr><name pos:line="27" pos:column="14">i<pos:position pos:line="27" pos:column="15"/></name> <operator pos:line="27" pos:column="16">=<pos:position pos:line="27" pos:column="17"/></operator> <literal type="number" pos:line="27" pos:column="18">0<pos:position pos:line="27" pos:column="19"/></literal></expr><operator pos:line="27" pos:column="19">,<pos:position pos:line="27" pos:column="20"/></operator> <expr><name pos:line="27" pos:column="21">retCode<pos:position pos:line="27" pos:column="28"/></name> <operator pos:line="27" pos:column="29">=<pos:position pos:line="27" pos:column="30"/></operator> <name pos:line="27" pos:column="31">ERROR_SUCCESS<pos:position pos:line="27" pos:column="44"/></name></expr>;<pos:position pos:line="27" pos:column="45"/></init> <condition><expr><name pos:line="27" pos:column="46">retCode<pos:position pos:line="27" pos:column="53"/></name> <operator pos:line="27" pos:column="54">==<pos:position pos:line="27" pos:column="56"/></operator> <name pos:line="27" pos:column="57">ERROR_SUCCESS<pos:position pos:line="27" pos:column="70"/></name></expr>;<pos:position pos:line="27" pos:column="71"/></condition> <incr><expr><name pos:line="27" pos:column="72">i<pos:position pos:line="27" pos:column="73"/></name><operator pos:line="27" pos:column="73">++<pos:position pos:line="27" pos:column="75"/></operator></expr></incr>)<pos:position pos:line="27" pos:column="76"/></control>
        <block pos:line="28" pos:column="9">{
            <expr_stmt><expr><name pos:line="29" pos:column="13">retCode<pos:position pos:line="29" pos:column="20"/></name> <operator pos:line="29" pos:column="21">=<pos:position pos:line="29" pos:column="22"/></operator> <call><name pos:line="29" pos:column="23">RegEnumKey<pos:position pos:line="29" pos:column="33"/></name><argument_list pos:line="29" pos:column="33">(<argument><expr><name pos:line="29" pos:column="34">hKey<pos:position pos:line="29" pos:column="38"/></name></expr></argument>, <argument><expr><name pos:line="29" pos:column="40">i<pos:position pos:line="29" pos:column="41"/></name></expr></argument>, <argument><expr><name pos:line="29" pos:column="43">achKey<pos:position pos:line="29" pos:column="49"/></name></expr></argument>, <argument><expr><name pos:line="29" pos:column="51">MAX_PATH<pos:position pos:line="29" pos:column="59"/></name></expr></argument>)<pos:position pos:line="29" pos:column="60"/></argument_list></call></expr>;<pos:position pos:line="29" pos:column="61"/></expr_stmt>
            <if pos:line="30" pos:column="13">if <condition pos:line="30" pos:column="16">(<expr><name pos:line="30" pos:column="17">retCode<pos:position pos:line="30" pos:column="24"/></name> <operator pos:line="30" pos:column="25">==<pos:position pos:line="30" pos:column="27"/></operator> <name pos:line="30" pos:column="28">ERROR_SUCCESS<pos:position pos:line="30" pos:column="41"/></name></expr>)<pos:position pos:line="30" pos:column="42"/></condition><then pos:line="30" pos:column="42">
            <block pos:line="31" pos:column="13">{
                <expr_stmt><expr><call><name pos:line="32" pos:column="17">lstrcpy<pos:position pos:line="32" pos:column="24"/></name><argument_list pos:line="32" pos:column="24">(<argument><expr><name pos:line="32" pos:column="25">szKey<pos:position pos:line="32" pos:column="30"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="32" pos:column="32">"System\\CurrentControlSet\\Services\\"<pos:position pos:line="32" pos:column="71"/></literal></expr></argument>)<pos:position pos:line="32" pos:column="72"/></argument_list></call></expr>;<pos:position pos:line="32" pos:column="73"/></expr_stmt>
                <expr_stmt><expr><call><name pos:line="33" pos:column="17">lstrcat<pos:position pos:line="33" pos:column="24"/></name><argument_list pos:line="33" pos:column="24">(<argument><expr><name pos:line="33" pos:column="25">szKey<pos:position pos:line="33" pos:column="30"/></name></expr></argument>, <argument><expr><name pos:line="33" pos:column="32">achKey<pos:position pos:line="33" pos:column="38"/></name></expr></argument>)<pos:position pos:line="33" pos:column="39"/></argument_list></call></expr>;<pos:position pos:line="33" pos:column="40"/></expr_stmt>

                <if pos:line="35" pos:column="17">if <condition pos:line="35" pos:column="20">(<expr><call><name pos:line="35" pos:column="21">RegOpenKeyEx<pos:position pos:line="35" pos:column="33"/></name><argument_list pos:line="35" pos:column="33">(<argument><expr><name pos:line="35" pos:column="34">hKeyRemote<pos:position pos:line="35" pos:column="44"/></name></expr></argument>, <argument><expr><name pos:line="35" pos:column="46">szKey<pos:position pos:line="35" pos:column="51"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="35" pos:column="53">0<pos:position pos:line="35" pos:column="54"/></literal></expr></argument>,
                                 <argument><expr><name pos:line="36" pos:column="34">KEY_QUERY_VALUE<pos:position pos:line="36" pos:column="49"/></name></expr></argument>, <argument><expr><operator pos:line="36" pos:column="51">&amp;<pos:position pos:line="36" pos:column="56"/></operator><name pos:line="36" pos:column="52">hSubKey<pos:position pos:line="36" pos:column="59"/></name></expr></argument>)<pos:position pos:line="36" pos:column="60"/></argument_list></call> <operator pos:line="36" pos:column="61">==<pos:position pos:line="36" pos:column="63"/></operator> <name pos:line="36" pos:column="64">ERROR_SUCCESS<pos:position pos:line="36" pos:column="77"/></name></expr>)<pos:position pos:line="36" pos:column="78"/></condition><then pos:line="36" pos:column="78">
                <block pos:line="37" pos:column="17">{
                    <expr_stmt><expr><name pos:line="38" pos:column="21">dwBufLen<pos:position pos:line="38" pos:column="29"/></name> <operator pos:line="38" pos:column="30">=<pos:position pos:line="38" pos:column="31"/></operator> <name pos:line="38" pos:column="32">MAX_PATH<pos:position pos:line="38" pos:column="40"/></name></expr>;<pos:position pos:line="38" pos:column="41"/></expr_stmt>
                    <expr_stmt><expr><name pos:line="39" pos:column="21">rv<pos:position pos:line="39" pos:column="23"/></name> <operator pos:line="39" pos:column="24">=<pos:position pos:line="39" pos:column="25"/></operator> <call><name pos:line="39" pos:column="26">RegQueryValueEx<pos:position pos:line="39" pos:column="41"/></name><argument_list pos:line="39" pos:column="41">(<argument><expr><name pos:line="39" pos:column="42">hSubKey<pos:position pos:line="39" pos:column="49"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="39" pos:column="51">"ImagePath"<pos:position pos:line="39" pos:column="62"/></literal></expr></argument>, <argument><expr><name pos:line="39" pos:column="64">NULL<pos:position pos:line="39" pos:column="68"/></name></expr></argument>,
                                         <argument><expr><operator pos:line="40" pos:column="42">&amp;<pos:position pos:line="40" pos:column="47"/></operator><name pos:line="40" pos:column="43">dwKeyType<pos:position pos:line="40" pos:column="52"/></name></expr></argument>, <argument><expr><name pos:line="40" pos:column="54">szImagePath<pos:position pos:line="40" pos:column="65"/></name></expr></argument>, <argument><expr><operator pos:line="40" pos:column="67">&amp;<pos:position pos:line="40" pos:column="72"/></operator><name pos:line="40" pos:column="68">dwBufLen<pos:position pos:line="40" pos:column="76"/></name></expr></argument>)<pos:position pos:line="40" pos:column="77"/></argument_list></call></expr>;<pos:position pos:line="40" pos:column="78"/></expr_stmt>

                    <if pos:line="42" pos:column="21">if <condition pos:line="42" pos:column="24">(<expr><name pos:line="42" pos:column="25">rv<pos:position pos:line="42" pos:column="27"/></name> <operator pos:line="42" pos:column="28">==<pos:position pos:line="42" pos:column="30"/></operator> <name pos:line="42" pos:column="31">ERROR_SUCCESS<pos:position pos:line="42" pos:column="44"/></name>
                            <operator pos:line="43" pos:column="29">&amp;&amp;<pos:position pos:line="43" pos:column="39"/></operator> <operator pos:line="43" pos:column="32">(<pos:position pos:line="43" pos:column="33"/></operator><name pos:line="43" pos:column="33">dwKeyType<pos:position pos:line="43" pos:column="42"/></name> <operator pos:line="43" pos:column="43">==<pos:position pos:line="43" pos:column="45"/></operator> <name pos:line="43" pos:column="46">REG_SZ<pos:position pos:line="43" pos:column="52"/></name>
                             <operator pos:line="44" pos:column="30">||<pos:position pos:line="44" pos:column="32"/></operator> <name pos:line="44" pos:column="33">dwKeyType<pos:position pos:line="44" pos:column="42"/></name> <operator pos:line="44" pos:column="43">==<pos:position pos:line="44" pos:column="45"/></operator> <name pos:line="44" pos:column="46">REG_EXPAND_SZ<pos:position pos:line="44" pos:column="59"/></name><operator pos:line="44" pos:column="59">)<pos:position pos:line="44" pos:column="60"/></operator>
                            <operator pos:line="45" pos:column="29">&amp;&amp;<pos:position pos:line="45" pos:column="39"/></operator> <name pos:line="45" pos:column="32">dwBufLen<pos:position pos:line="45" pos:column="40"/></name></expr>)<pos:position pos:line="45" pos:column="41"/></condition><then pos:line="45" pos:column="41">
                    <block pos:line="46" pos:column="21">{
                        <expr_stmt><expr><call><name pos:line="47" pos:column="25">lstrcpy<pos:position pos:line="47" pos:column="32"/></name><argument_list pos:line="47" pos:column="32">(<argument><expr><name pos:line="47" pos:column="33">szBuf<pos:position pos:line="47" pos:column="38"/></name></expr></argument>, <argument><expr><name pos:line="47" pos:column="40">szImagePath<pos:position pos:line="47" pos:column="51"/></name></expr></argument>)<pos:position pos:line="47" pos:column="52"/></argument_list></call></expr>;<pos:position pos:line="47" pos:column="53"/></expr_stmt>
                        <expr_stmt><expr><call><name pos:line="48" pos:column="25">CharLower<pos:position pos:line="48" pos:column="34"/></name><argument_list pos:line="48" pos:column="34">(<argument><expr><name pos:line="48" pos:column="35">szBuf<pos:position pos:line="48" pos:column="40"/></name></expr></argument>)<pos:position pos:line="48" pos:column="41"/></argument_list></call></expr>;<pos:position pos:line="48" pos:column="42"/></expr_stmt>
                        <comment type="block" pos:line="49" pos:column="25">/* the service name could be httpd*.exe or Apache*.exe */</comment>
                        <if pos:line="50" pos:column="25">if <condition pos:line="50" pos:column="28">(<expr><operator pos:line="50" pos:column="29">(<pos:position pos:line="50" pos:column="30"/></operator><operator pos:line="50" pos:column="30">(<pos:position pos:line="50" pos:column="31"/></operator><call><name pos:line="50" pos:column="31">strstr<pos:position pos:line="50" pos:column="37"/></name><argument_list pos:line="50" pos:column="37">(<argument><expr><name pos:line="50" pos:column="38">szBuf<pos:position pos:line="50" pos:column="43"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="50" pos:column="45">"\\apache"<pos:position pos:line="50" pos:column="55"/></literal></expr></argument>)<pos:position pos:line="50" pos:column="56"/></argument_list></call> <operator pos:line="50" pos:column="57">!=<pos:position pos:line="50" pos:column="59"/></operator> <name pos:line="50" pos:column="60">NULL<pos:position pos:line="50" pos:column="64"/></name><operator pos:line="50" pos:column="64">)<pos:position pos:line="50" pos:column="65"/></operator>
                             <operator pos:line="51" pos:column="30">||<pos:position pos:line="51" pos:column="32"/></operator> <operator pos:line="51" pos:column="33">(<pos:position pos:line="51" pos:column="34"/></operator><call><name pos:line="51" pos:column="34">strstr<pos:position pos:line="51" pos:column="40"/></name><argument_list pos:line="51" pos:column="40">(<argument><expr><name pos:line="51" pos:column="41">szBuf<pos:position pos:line="51" pos:column="46"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="51" pos:column="48">"\\httpd"<pos:position pos:line="51" pos:column="57"/></literal></expr></argument>)<pos:position pos:line="51" pos:column="58"/></argument_list></call> <operator pos:line="51" pos:column="59">!=<pos:position pos:line="51" pos:column="61"/></operator> <name pos:line="51" pos:column="62">NULL<pos:position pos:line="51" pos:column="66"/></name><operator pos:line="51" pos:column="66">)<pos:position pos:line="51" pos:column="67"/></operator><operator pos:line="51" pos:column="67">)<pos:position pos:line="51" pos:column="68"/></operator>
                                <operator pos:line="52" pos:column="33">&amp;&amp;<pos:position pos:line="52" pos:column="43"/></operator> <call><name pos:line="52" pos:column="36">strstr<pos:position pos:line="52" pos:column="42"/></name><argument_list pos:line="52" pos:column="42">(<argument><expr><name pos:line="52" pos:column="43">szBuf<pos:position pos:line="52" pos:column="48"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="52" pos:column="50">".exe"<pos:position pos:line="52" pos:column="56"/></literal></expr></argument>)<pos:position pos:line="52" pos:column="57"/></argument_list></call>
                                <operator pos:line="53" pos:column="33">&amp;&amp;<pos:position pos:line="53" pos:column="43"/></operator> <operator pos:line="53" pos:column="36">(<pos:position pos:line="53" pos:column="37"/></operator><call><name pos:line="53" pos:column="37">strstr<pos:position pos:line="53" pos:column="43"/></name><argument_list pos:line="53" pos:column="43">(<argument><expr><name pos:line="53" pos:column="44">szBuf<pos:position pos:line="53" pos:column="49"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="53" pos:column="51">"--ntservice"<pos:position pos:line="53" pos:column="64"/></literal></expr></argument>)<pos:position pos:line="53" pos:column="65"/></argument_list></call> <operator pos:line="53" pos:column="66">!=<pos:position pos:line="53" pos:column="68"/></operator> <name pos:line="53" pos:column="69">NULL<pos:position pos:line="53" pos:column="73"/></name>
                                       <operator pos:line="54" pos:column="40">||<pos:position pos:line="54" pos:column="42"/></operator> <call><name pos:line="54" pos:column="43">strstr<pos:position pos:line="54" pos:column="49"/></name><argument_list pos:line="54" pos:column="49">(<argument><expr><name pos:line="54" pos:column="50">szBuf<pos:position pos:line="54" pos:column="55"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="54" pos:column="57">"-k "<pos:position pos:line="54" pos:column="62"/></literal></expr></argument>)<pos:position pos:line="54" pos:column="63"/></argument_list></call> <operator pos:line="54" pos:column="64">!=<pos:position pos:line="54" pos:column="66"/></operator> <name pos:line="54" pos:column="67">NULL<pos:position pos:line="54" pos:column="71"/></name><operator pos:line="54" pos:column="71">)<pos:position pos:line="54" pos:column="72"/></operator></expr>)<pos:position pos:line="54" pos:column="73"/></condition><then pos:line="54" pos:column="73">
                        <block pos:line="55" pos:column="25">{
                            <expr_stmt><expr><name><name pos:line="56" pos:column="29">g_stServices<pos:position pos:line="56" pos:column="41"/></name><index pos:line="56" pos:column="41">[<expr><name pos:line="56" pos:column="42">stPos<pos:position pos:line="56" pos:column="47"/></name></expr>]<pos:position pos:line="56" pos:column="48"/></index></name><operator pos:line="56" pos:column="48">.<pos:position pos:line="56" pos:column="49"/></operator><name pos:line="56" pos:column="49">szServiceName<pos:position pos:line="56" pos:column="62"/></name> <operator pos:line="56" pos:column="63">=<pos:position pos:line="56" pos:column="64"/></operator> <call><name pos:line="56" pos:column="65">strdup<pos:position pos:line="56" pos:column="71"/></name><argument_list pos:line="56" pos:column="71">(<argument><expr><name pos:line="56" pos:column="72">achKey<pos:position pos:line="56" pos:column="78"/></name></expr></argument>)<pos:position pos:line="56" pos:column="79"/></argument_list></call></expr>;<pos:position pos:line="56" pos:column="80"/></expr_stmt>
                            <expr_stmt><expr><name><name pos:line="57" pos:column="29">g_stServices<pos:position pos:line="57" pos:column="41"/></name><index pos:line="57" pos:column="41">[<expr><name pos:line="57" pos:column="42">stPos<pos:position pos:line="57" pos:column="47"/></name></expr>]<pos:position pos:line="57" pos:column="48"/></index></name><operator pos:line="57" pos:column="48">.<pos:position pos:line="57" pos:column="49"/></operator><name pos:line="57" pos:column="49">szImagePath<pos:position pos:line="57" pos:column="60"/></name> <operator pos:line="57" pos:column="61">=<pos:position pos:line="57" pos:column="62"/></operator>
                                                           <call><name pos:line="58" pos:column="60">strdup<pos:position pos:line="58" pos:column="66"/></name><argument_list pos:line="58" pos:column="66">(<argument><expr><name pos:line="58" pos:column="67">szImagePath<pos:position pos:line="58" pos:column="78"/></name></expr></argument>)<pos:position pos:line="58" pos:column="79"/></argument_list></call></expr>;<pos:position pos:line="58" pos:column="80"/></expr_stmt>
                            <expr_stmt><expr><name><name pos:line="59" pos:column="29">g_stServices<pos:position pos:line="59" pos:column="41"/></name><index pos:line="59" pos:column="41">[<expr><name pos:line="59" pos:column="42">stPos<pos:position pos:line="59" pos:column="47"/></name></expr>]<pos:position pos:line="59" pos:column="48"/></index></name><operator pos:line="59" pos:column="48">.<pos:position pos:line="59" pos:column="49"/></operator><name pos:line="59" pos:column="49">szComputerName<pos:position pos:line="59" pos:column="63"/></name> <operator pos:line="59" pos:column="64">=<pos:position pos:line="59" pos:column="65"/></operator>
                               <call><name pos:line="60" pos:column="32">strdup<pos:position pos:line="60" pos:column="38"/></name><argument_list pos:line="60" pos:column="38">(<argument><expr><name><name pos:line="60" pos:column="39">g_stComputers<pos:position pos:line="60" pos:column="52"/></name><index pos:line="60" pos:column="52">[<expr><name pos:line="60" pos:column="53">computers<pos:position pos:line="60" pos:column="62"/></name></expr>]<pos:position pos:line="60" pos:column="63"/></index></name><operator pos:line="60" pos:column="63">.<pos:position pos:line="60" pos:column="64"/></operator><name pos:line="60" pos:column="64">szComputerName<pos:position pos:line="60" pos:column="78"/></name></expr></argument>)<pos:position pos:line="60" pos:column="79"/></argument_list></call></expr>;<pos:position pos:line="60" pos:column="80"/></expr_stmt>
                            <expr_stmt><expr><name pos:line="61" pos:column="29">dwBufLen<pos:position pos:line="61" pos:column="37"/></name> <operator pos:line="61" pos:column="38">=<pos:position pos:line="61" pos:column="39"/></operator> <name pos:line="61" pos:column="40">MAX_PATH<pos:position pos:line="61" pos:column="48"/></name></expr>;<pos:position pos:line="61" pos:column="49"/></expr_stmt>
                            <if pos:line="62" pos:column="29">if <condition pos:line="62" pos:column="32">(<expr><call><name pos:line="62" pos:column="33">RegQueryValueEx<pos:position pos:line="62" pos:column="48"/></name><argument_list pos:line="62" pos:column="48">(<argument><expr><name pos:line="62" pos:column="49">hSubKey<pos:position pos:line="62" pos:column="56"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="62" pos:column="58">"Description"<pos:position pos:line="62" pos:column="71"/></literal></expr></argument>, <argument><expr><name pos:line="62" pos:column="73">NULL<pos:position pos:line="62" pos:column="77"/></name></expr></argument>,
                                                <argument><expr><operator pos:line="63" pos:column="49">&amp;<pos:position pos:line="63" pos:column="54"/></operator><name pos:line="63" pos:column="50">dwKeyType<pos:position pos:line="63" pos:column="59"/></name></expr></argument>, <argument><expr><name pos:line="63" pos:column="61">szBuf<pos:position pos:line="63" pos:column="66"/></name></expr></argument>, <argument><expr><operator pos:line="63" pos:column="68">&amp;<pos:position pos:line="63" pos:column="73"/></operator><name pos:line="63" pos:column="69">dwBufLen<pos:position pos:line="63" pos:column="77"/></name></expr></argument>)<pos:position pos:line="63" pos:column="78"/></argument_list></call>
                                    <operator pos:line="64" pos:column="37">==<pos:position pos:line="64" pos:column="39"/></operator> <name pos:line="64" pos:column="40">ERROR_SUCCESS<pos:position pos:line="64" pos:column="53"/></name></expr>)<pos:position pos:line="64" pos:column="54"/></condition><then pos:line="64" pos:column="54"> <block pos:line="64" pos:column="55">{
                                <expr_stmt><expr><name><name pos:line="65" pos:column="33">g_stServices<pos:position pos:line="65" pos:column="45"/></name><index pos:line="65" pos:column="45">[<expr><name pos:line="65" pos:column="46">stPos<pos:position pos:line="65" pos:column="51"/></name></expr>]<pos:position pos:line="65" pos:column="52"/></index></name><operator pos:line="65" pos:column="52">.<pos:position pos:line="65" pos:column="53"/></operator><name pos:line="65" pos:column="53">szDescription<pos:position pos:line="65" pos:column="66"/></name> <operator pos:line="65" pos:column="67">=<pos:position pos:line="65" pos:column="68"/></operator>
                                                                 <call><name pos:line="66" pos:column="66">strdup<pos:position pos:line="66" pos:column="72"/></name><argument_list pos:line="66" pos:column="72">(<argument><expr><name pos:line="66" pos:column="73">szBuf<pos:position pos:line="66" pos:column="78"/></name></expr></argument>)<pos:position pos:line="66" pos:column="79"/></argument_list></call></expr>;<pos:position pos:line="66" pos:column="80"/></expr_stmt>
                            }<pos:position pos:line="67" pos:column="30"/></block></then></if>
                            <expr_stmt><expr><name pos:line="68" pos:column="29">dwBufLen<pos:position pos:line="68" pos:column="37"/></name> <operator pos:line="68" pos:column="38">=<pos:position pos:line="68" pos:column="39"/></operator> <name pos:line="68" pos:column="40">MAX_PATH<pos:position pos:line="68" pos:column="48"/></name></expr>;<pos:position pos:line="68" pos:column="49"/></expr_stmt>
                            <if pos:line="69" pos:column="29">if <condition pos:line="69" pos:column="32">(<expr><call><name pos:line="69" pos:column="33">RegQueryValueEx<pos:position pos:line="69" pos:column="48"/></name><argument_list pos:line="69" pos:column="48">(<argument><expr><name pos:line="69" pos:column="49">hSubKey<pos:position pos:line="69" pos:column="56"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="69" pos:column="58">"DisplayName"<pos:position pos:line="69" pos:column="71"/></literal></expr></argument>, <argument><expr><name pos:line="69" pos:column="73">NULL<pos:position pos:line="69" pos:column="77"/></name></expr></argument>,
                                                <argument><expr><operator pos:line="70" pos:column="49">&amp;<pos:position pos:line="70" pos:column="54"/></operator><name pos:line="70" pos:column="50">dwKeyType<pos:position pos:line="70" pos:column="59"/></name></expr></argument>, <argument><expr><name pos:line="70" pos:column="61">szBuf<pos:position pos:line="70" pos:column="66"/></name></expr></argument>, <argument><expr><operator pos:line="70" pos:column="68">&amp;<pos:position pos:line="70" pos:column="73"/></operator><name pos:line="70" pos:column="69">dwBufLen<pos:position pos:line="70" pos:column="77"/></name></expr></argument>)<pos:position pos:line="70" pos:column="78"/></argument_list></call>
                                    <operator pos:line="71" pos:column="37">==<pos:position pos:line="71" pos:column="39"/></operator> <name pos:line="71" pos:column="40">ERROR_SUCCESS<pos:position pos:line="71" pos:column="53"/></name></expr>)<pos:position pos:line="71" pos:column="54"/></condition><then pos:line="71" pos:column="54">
                            <block pos:line="72" pos:column="29">{
                                <if pos:line="73" pos:column="33">if <condition pos:line="73" pos:column="36">(<expr><call><name pos:line="73" pos:column="37">strcmp<pos:position pos:line="73" pos:column="43"/></name><argument_list pos:line="73" pos:column="43">(<argument><expr><name><name pos:line="73" pos:column="44">g_stComputers<pos:position pos:line="73" pos:column="57"/></name><index pos:line="73" pos:column="57">[<expr><name pos:line="73" pos:column="58">computers<pos:position pos:line="73" pos:column="67"/></name></expr>]<pos:position pos:line="73" pos:column="68"/></index></name>
                                        <operator pos:line="74" pos:column="41">.<pos:position pos:line="74" pos:column="42"/></operator><name pos:line="74" pos:column="42">szComputerName<pos:position pos:line="74" pos:column="56"/></name></expr></argument>, <argument><expr><name pos:line="74" pos:column="58">g_szLocalHost<pos:position pos:line="74" pos:column="71"/></name></expr></argument>)<pos:position pos:line="74" pos:column="72"/></argument_list></call> <operator pos:line="74" pos:column="73">!=<pos:position pos:line="74" pos:column="75"/></operator> <literal type="number" pos:line="74" pos:column="76">0<pos:position pos:line="74" pos:column="77"/></literal></expr>)<pos:position pos:line="74" pos:column="78"/></condition><then pos:line="74" pos:column="78">
                                <block pos:line="75" pos:column="33">{
                                    <expr_stmt><expr><call><name pos:line="76" pos:column="37">strcpy<pos:position pos:line="76" pos:column="43"/></name><argument_list pos:line="76" pos:column="43">(<argument><expr><name pos:line="76" pos:column="44">szTmp<pos:position pos:line="76" pos:column="49"/></name></expr></argument>, <argument><expr><name><name pos:line="76" pos:column="51">g_stComputers<pos:position pos:line="76" pos:column="64"/></name><index pos:line="76" pos:column="64">[<expr><name pos:line="76" pos:column="65">computers<pos:position pos:line="76" pos:column="74"/></name></expr>]<pos:position pos:line="76" pos:column="75"/></index></name>
                                                      <operator pos:line="77" pos:column="55">.<pos:position pos:line="77" pos:column="56"/></operator><name pos:line="77" pos:column="56">szComputerName<pos:position pos:line="77" pos:column="70"/></name> <operator pos:line="77" pos:column="71">+<pos:position pos:line="77" pos:column="72"/></operator> <literal type="number" pos:line="77" pos:column="73">2<pos:position pos:line="77" pos:column="74"/></literal></expr></argument>)<pos:position pos:line="77" pos:column="75"/></argument_list></call></expr>;<pos:position pos:line="77" pos:column="76"/></expr_stmt>
                                    <expr_stmt><expr><call><name pos:line="78" pos:column="37">strcat<pos:position pos:line="78" pos:column="43"/></name><argument_list pos:line="78" pos:column="43">(<argument><expr><name pos:line="78" pos:column="44">szTmp<pos:position pos:line="78" pos:column="49"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="78" pos:column="51">"@"<pos:position pos:line="78" pos:column="54"/></literal></expr></argument>)<pos:position pos:line="78" pos:column="55"/></argument_list></call></expr>;<pos:position pos:line="78" pos:column="56"/></expr_stmt>
                                    <expr_stmt><expr><call><name pos:line="79" pos:column="37">strcat<pos:position pos:line="79" pos:column="43"/></name><argument_list pos:line="79" pos:column="43">(<argument><expr><name pos:line="79" pos:column="44">szTmp<pos:position pos:line="79" pos:column="49"/></name></expr></argument>, <argument><expr><name pos:line="79" pos:column="51">szBuf<pos:position pos:line="79" pos:column="56"/></name></expr></argument>)<pos:position pos:line="79" pos:column="57"/></argument_list></call></expr>;<pos:position pos:line="79" pos:column="58"/></expr_stmt>
                                }<pos:position pos:line="80" pos:column="34"/></block></then>
                                <else pos:line="81" pos:column="33">else <block pos:line="81" pos:column="38">{
                                    <expr_stmt><expr><call><name pos:line="82" pos:column="37">strcpy<pos:position pos:line="82" pos:column="43"/></name><argument_list pos:line="82" pos:column="43">(<argument><expr><name pos:line="82" pos:column="44">szTmp<pos:position pos:line="82" pos:column="49"/></name></expr></argument>, <argument><expr><name pos:line="82" pos:column="51">szBuf<pos:position pos:line="82" pos:column="56"/></name></expr></argument>)<pos:position pos:line="82" pos:column="57"/></argument_list></call></expr>;<pos:position pos:line="82" pos:column="58"/></expr_stmt>
                                }<pos:position pos:line="83" pos:column="34"/></block></else></if>
                                <expr_stmt><expr><name><name pos:line="84" pos:column="33">g_stServices<pos:position pos:line="84" pos:column="45"/></name><index pos:line="84" pos:column="45">[<expr><name pos:line="84" pos:column="46">stPos<pos:position pos:line="84" pos:column="51"/></name></expr>]<pos:position pos:line="84" pos:column="52"/></index></name><operator pos:line="84" pos:column="52">.<pos:position pos:line="84" pos:column="53"/></operator><name pos:line="84" pos:column="53">szDisplayName<pos:position pos:line="84" pos:column="66"/></name>
                                                        <operator pos:line="85" pos:column="57">=<pos:position pos:line="85" pos:column="58"/></operator> <call><name pos:line="85" pos:column="59">strdup<pos:position pos:line="85" pos:column="65"/></name><argument_list pos:line="85" pos:column="65">(<argument><expr><name pos:line="85" pos:column="66">szTmp<pos:position pos:line="85" pos:column="71"/></name></expr></argument>)<pos:position pos:line="85" pos:column="72"/></argument_list></call></expr>;<pos:position pos:line="85" pos:column="73"/></expr_stmt>

                            }<pos:position pos:line="87" pos:column="30"/></block></then></if>
                            <expr_stmt><expr><operator pos:line="88" pos:column="29">++<pos:position pos:line="88" pos:column="31"/></operator><name pos:line="88" pos:column="31">stPos<pos:position pos:line="88" pos:column="36"/></name></expr>;<pos:position pos:line="88" pos:column="37"/></expr_stmt>
                            <if pos:line="89" pos:column="29">if <condition pos:line="89" pos:column="32">(<expr><name pos:line="89" pos:column="33">stPos<pos:position pos:line="89" pos:column="38"/></name> <operator pos:line="89" pos:column="39">&gt;=<pos:position pos:line="89" pos:column="44"/></operator> <name pos:line="89" pos:column="42">MAX_APACHE_SERVICES<pos:position pos:line="89" pos:column="61"/></name></expr>)<pos:position pos:line="89" pos:column="62"/></condition><then pos:line="89" pos:column="62"> <block pos:line="89" pos:column="63">{
                                <expr_stmt><expr><name pos:line="90" pos:column="33">retCode<pos:position pos:line="90" pos:column="40"/></name> <operator pos:line="90" pos:column="41">=<pos:position pos:line="90" pos:column="42"/></operator> <operator pos:line="90" pos:column="43">!<pos:position pos:line="90" pos:column="44"/></operator><name pos:line="90" pos:column="44">ERROR_SUCCESS<pos:position pos:line="90" pos:column="57"/></name></expr>;<pos:position pos:line="90" pos:column="58"/></expr_stmt>
                            }<pos:position pos:line="91" pos:column="30"/></block></then></if>
                        }<pos:position pos:line="92" pos:column="26"/></block></then></if>
                    }<pos:position pos:line="93" pos:column="22"/></block></then></if>
                    <expr_stmt><expr><call><name pos:line="94" pos:column="21">RegCloseKey<pos:position pos:line="94" pos:column="32"/></name><argument_list pos:line="94" pos:column="32">(<argument><expr><name pos:line="94" pos:column="33">hSubKey<pos:position pos:line="94" pos:column="40"/></name></expr></argument>)<pos:position pos:line="94" pos:column="41"/></argument_list></call></expr>;<pos:position pos:line="94" pos:column="42"/></expr_stmt>
                }<pos:position pos:line="95" pos:column="18"/></block></then></if>
            }<pos:position pos:line="96" pos:column="14"/></block></then></if>
        }<pos:position pos:line="97" pos:column="10"/></block></for>
        <expr_stmt><expr><operator pos:line="98" pos:column="9">++<pos:position pos:line="98" pos:column="11"/></operator><name pos:line="98" pos:column="11">computers<pos:position pos:line="98" pos:column="20"/></name></expr>;<pos:position pos:line="98" pos:column="21"/></expr_stmt>
    }<pos:position pos:line="99" pos:column="6"/></block></while>
    <expr_stmt><expr><call><name pos:line="100" pos:column="5">RegCloseKey<pos:position pos:line="100" pos:column="16"/></name><argument_list pos:line="100" pos:column="16">(<argument><expr><name pos:line="100" pos:column="17">hKey<pos:position pos:line="100" pos:column="21"/></name></expr></argument>)<pos:position pos:line="100" pos:column="22"/></argument_list></call></expr>;<pos:position pos:line="100" pos:column="23"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="101" pos:column="5">FindRunningServices<pos:position pos:line="101" pos:column="24"/></name><argument_list pos:line="101" pos:column="24">()<pos:position pos:line="101" pos:column="26"/></argument_list></call></expr>;<pos:position pos:line="101" pos:column="27"/></expr_stmt>
    <return pos:line="102" pos:column="5">return <expr><name pos:line="102" pos:column="12">TRUE<pos:position pos:line="102" pos:column="16"/></name></expr>;<pos:position pos:line="102" pos:column="17"/></return>
}<pos:position pos:line="103" pos:column="2"/></block></function></unit>

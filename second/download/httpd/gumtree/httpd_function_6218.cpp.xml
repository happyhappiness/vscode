<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/httpd/gumtree/httpd_function_6218.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">int<pos:position pos:line="1" pos:column="11"/></name></type> <name pos:line="1" pos:column="12">proxy_connect_transfer<pos:position pos:line="1" pos:column="34"/></name><parameter_list pos:line="1" pos:column="34">(<parameter><decl><type><name pos:line="1" pos:column="35">request_rec<pos:position pos:line="1" pos:column="46"/></name> <modifier pos:line="1" pos:column="47">*<pos:position pos:line="1" pos:column="48"/></modifier></type><name pos:line="1" pos:column="48">r<pos:position pos:line="1" pos:column="49"/></name></decl></parameter>, <parameter><decl><type><name pos:line="1" pos:column="51">conn_rec<pos:position pos:line="1" pos:column="59"/></name> <modifier pos:line="1" pos:column="60">*<pos:position pos:line="1" pos:column="61"/></modifier></type><name pos:line="1" pos:column="61">c_i<pos:position pos:line="1" pos:column="64"/></name></decl></parameter>, <parameter><decl><type><name pos:line="1" pos:column="66">conn_rec<pos:position pos:line="1" pos:column="74"/></name> <modifier pos:line="1" pos:column="75">*<pos:position pos:line="1" pos:column="76"/></modifier></type><name pos:line="1" pos:column="76">c_o<pos:position pos:line="1" pos:column="79"/></name></decl></parameter>,
                                  <parameter><decl><type><name pos:line="2" pos:column="35">apr_bucket_brigade<pos:position pos:line="2" pos:column="53"/></name> <modifier pos:line="2" pos:column="54">*<pos:position pos:line="2" pos:column="55"/></modifier></type><name pos:line="2" pos:column="55">bb<pos:position pos:line="2" pos:column="57"/></name></decl></parameter>, <parameter><decl><type><name pos:line="2" pos:column="59">char<pos:position pos:line="2" pos:column="63"/></name> <modifier pos:line="2" pos:column="64">*<pos:position pos:line="2" pos:column="65"/></modifier></type><name pos:line="2" pos:column="65">name<pos:position pos:line="2" pos:column="69"/></name></decl></parameter>)<pos:position pos:line="2" pos:column="70"/></parameter_list>
<block pos:line="3" pos:column="1">{
    <decl_stmt><decl><type><name pos:line="4" pos:column="5">int<pos:position pos:line="4" pos:column="8"/></name></type> <name pos:line="4" pos:column="9">rv<pos:position pos:line="4" pos:column="11"/></name></decl>;<pos:position pos:line="4" pos:column="12"/></decl_stmt>
<cpp:ifdef pos:line="5" pos:column="1">#<cpp:directive pos:line="5" pos:column="2">ifdef<pos:position pos:line="5" pos:column="7"/></cpp:directive> <name pos:line="5" pos:column="8">DEBUGGING<pos:position pos:line="5" pos:column="17"/></name></cpp:ifdef>
    <decl_stmt><decl><type><name pos:line="6" pos:column="5">apr_off_t<pos:position pos:line="6" pos:column="14"/></name></type> <name pos:line="6" pos:column="15">len<pos:position pos:line="6" pos:column="18"/></name></decl>;<pos:position pos:line="6" pos:column="19"/></decl_stmt>
<cpp:endif pos:line="7" pos:column="1">#<cpp:directive pos:line="7" pos:column="2">endif<pos:position pos:line="7" pos:column="7"/></cpp:directive></cpp:endif>

    <do pos:line="9" pos:column="5">do <block pos:line="9" pos:column="8">{
        <expr_stmt><expr><call><name pos:line="10" pos:column="9">apr_brigade_cleanup<pos:position pos:line="10" pos:column="28"/></name><argument_list pos:line="10" pos:column="28">(<argument><expr><name pos:line="10" pos:column="29">bb<pos:position pos:line="10" pos:column="31"/></name></expr></argument>)<pos:position pos:line="10" pos:column="32"/></argument_list></call></expr>;<pos:position pos:line="10" pos:column="33"/></expr_stmt>
        <expr_stmt><expr><name pos:line="11" pos:column="9">rv<pos:position pos:line="11" pos:column="11"/></name> <operator pos:line="11" pos:column="12">=<pos:position pos:line="11" pos:column="13"/></operator> <call><name pos:line="11" pos:column="14">ap_get_brigade<pos:position pos:line="11" pos:column="28"/></name><argument_list pos:line="11" pos:column="28">(<argument><expr><name><name pos:line="11" pos:column="29">c_i<pos:position pos:line="11" pos:column="32"/></name><operator pos:line="11" pos:column="32">-&gt;<pos:position pos:line="11" pos:column="37"/></operator><name pos:line="11" pos:column="34">input_filters<pos:position pos:line="11" pos:column="47"/></name></name></expr></argument>, <argument><expr><name pos:line="11" pos:column="49">bb<pos:position pos:line="11" pos:column="51"/></name></expr></argument>, <argument><expr><name pos:line="11" pos:column="53">AP_MODE_READBYTES<pos:position pos:line="11" pos:column="70"/></name></expr></argument>,
                            <argument><expr><name pos:line="12" pos:column="29">APR_NONBLOCK_READ<pos:position pos:line="12" pos:column="46"/></name></expr></argument>, <argument><expr><name pos:line="12" pos:column="48">CONN_BLKSZ<pos:position pos:line="12" pos:column="58"/></name></expr></argument>)<pos:position pos:line="12" pos:column="59"/></argument_list></call></expr>;<pos:position pos:line="12" pos:column="60"/></expr_stmt>
        <if pos:line="13" pos:column="9">if <condition pos:line="13" pos:column="12">(<expr><name pos:line="13" pos:column="13">rv<pos:position pos:line="13" pos:column="15"/></name> <operator pos:line="13" pos:column="16">==<pos:position pos:line="13" pos:column="18"/></operator> <name pos:line="13" pos:column="19">APR_SUCCESS<pos:position pos:line="13" pos:column="30"/></name></expr>)<pos:position pos:line="13" pos:column="31"/></condition><then pos:line="13" pos:column="31"> <block pos:line="13" pos:column="32">{
            <if pos:line="14" pos:column="13">if <condition pos:line="14" pos:column="16">(<expr><name><name pos:line="14" pos:column="17">c_o<pos:position pos:line="14" pos:column="20"/></name><operator pos:line="14" pos:column="20">-&gt;<pos:position pos:line="14" pos:column="25"/></operator><name pos:line="14" pos:column="22">aborted<pos:position pos:line="14" pos:column="29"/></name></name></expr>)<pos:position pos:line="14" pos:column="30"/></condition><then pos:line="14" pos:column="30">
                <block type="pseudo"><return pos:line="15" pos:column="17">return <expr><name pos:line="15" pos:column="24">APR_EPIPE<pos:position pos:line="15" pos:column="33"/></name></expr>;<pos:position pos:line="15" pos:column="34"/></return></block></then></if>
            <if pos:line="16" pos:column="13">if <condition pos:line="16" pos:column="16">(<expr><call><name pos:line="16" pos:column="17">APR_BRIGADE_EMPTY<pos:position pos:line="16" pos:column="34"/></name><argument_list pos:line="16" pos:column="34">(<argument><expr><name pos:line="16" pos:column="35">bb<pos:position pos:line="16" pos:column="37"/></name></expr></argument>)<pos:position pos:line="16" pos:column="38"/></argument_list></call></expr>)<pos:position pos:line="16" pos:column="39"/></condition><then pos:line="16" pos:column="39">
                <block type="pseudo"><break pos:line="17" pos:column="17">break;<pos:position pos:line="17" pos:column="23"/></break></block></then></if>
<cpp:ifdef pos:line="18" pos:column="1">#<cpp:directive pos:line="18" pos:column="2">ifdef<pos:position pos:line="18" pos:column="7"/></cpp:directive> <name pos:line="18" pos:column="8">DEBUGGING<pos:position pos:line="18" pos:column="17"/></name></cpp:ifdef>
            <expr_stmt><expr><name pos:line="19" pos:column="13">len<pos:position pos:line="19" pos:column="16"/></name> <operator pos:line="19" pos:column="17">=<pos:position pos:line="19" pos:column="18"/></operator> <operator pos:line="19" pos:column="19">-<pos:position pos:line="19" pos:column="20"/></operator><literal type="number" pos:line="19" pos:column="20">1<pos:position pos:line="19" pos:column="21"/></literal></expr>;<pos:position pos:line="19" pos:column="22"/></expr_stmt>
            <expr_stmt><expr><call><name pos:line="20" pos:column="13">apr_brigade_length<pos:position pos:line="20" pos:column="31"/></name><argument_list pos:line="20" pos:column="31">(<argument><expr><name pos:line="20" pos:column="32">bb<pos:position pos:line="20" pos:column="34"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="20" pos:column="36">0<pos:position pos:line="20" pos:column="37"/></literal></expr></argument>, <argument><expr><operator pos:line="20" pos:column="39">&amp;<pos:position pos:line="20" pos:column="44"/></operator><name pos:line="20" pos:column="40">len<pos:position pos:line="20" pos:column="43"/></name></expr></argument>)<pos:position pos:line="20" pos:column="44"/></argument_list></call></expr>;<pos:position pos:line="20" pos:column="45"/></expr_stmt>
            <expr_stmt><expr><call><name pos:line="21" pos:column="13">ap_log_rerror<pos:position pos:line="21" pos:column="26"/></name><argument_list pos:line="21" pos:column="26">(<argument><expr><name pos:line="21" pos:column="27">APLOG_MARK<pos:position pos:line="21" pos:column="37"/></name></expr></argument>, <argument><expr><name pos:line="21" pos:column="39">APLOG_DEBUG<pos:position pos:line="21" pos:column="50"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="21" pos:column="52">0<pos:position pos:line="21" pos:column="53"/></literal></expr></argument>, <argument><expr><name pos:line="21" pos:column="55">r<pos:position pos:line="21" pos:column="56"/></name></expr></argument>, <argument><expr><call><name pos:line="21" pos:column="58">APLOGNO<pos:position pos:line="21" pos:column="65"/></name><argument_list pos:line="21" pos:column="65">(<argument><expr><literal type="number" pos:line="21" pos:column="66">01016<pos:position pos:line="21" pos:column="71"/></literal></expr></argument>)<pos:position pos:line="21" pos:column="72"/></argument_list></call>
                          <literal type="string" pos:line="22" pos:column="27">"read %"<pos:position pos:line="22" pos:column="35"/></literal> <name pos:line="22" pos:column="36">APR_OFF_T_FMT<pos:position pos:line="22" pos:column="49"/></name>
                          <literal type="string" pos:line="23" pos:column="27">" bytes from %s"<pos:position pos:line="23" pos:column="43"/></literal></expr></argument>, <argument><expr><name pos:line="23" pos:column="45">len<pos:position pos:line="23" pos:column="48"/></name></expr></argument>, <argument><expr><name pos:line="23" pos:column="50">name<pos:position pos:line="23" pos:column="54"/></name></expr></argument>)<pos:position pos:line="23" pos:column="55"/></argument_list></call></expr>;<pos:position pos:line="23" pos:column="56"/></expr_stmt>
<cpp:endif pos:line="24" pos:column="1">#<cpp:directive pos:line="24" pos:column="2">endif<pos:position pos:line="24" pos:column="7"/></cpp:directive></cpp:endif>
            <expr_stmt><expr><name pos:line="25" pos:column="13">rv<pos:position pos:line="25" pos:column="15"/></name> <operator pos:line="25" pos:column="16">=<pos:position pos:line="25" pos:column="17"/></operator> <call><name pos:line="25" pos:column="18">ap_pass_brigade<pos:position pos:line="25" pos:column="33"/></name><argument_list pos:line="25" pos:column="33">(<argument><expr><name><name pos:line="25" pos:column="34">c_o<pos:position pos:line="25" pos:column="37"/></name><operator pos:line="25" pos:column="37">-&gt;<pos:position pos:line="25" pos:column="42"/></operator><name pos:line="25" pos:column="39">output_filters<pos:position pos:line="25" pos:column="53"/></name></name></expr></argument>, <argument><expr><name pos:line="25" pos:column="55">bb<pos:position pos:line="25" pos:column="57"/></name></expr></argument>)<pos:position pos:line="25" pos:column="58"/></argument_list></call></expr>;<pos:position pos:line="25" pos:column="59"/></expr_stmt>
            <if pos:line="26" pos:column="13">if <condition pos:line="26" pos:column="16">(<expr><name pos:line="26" pos:column="17">rv<pos:position pos:line="26" pos:column="19"/></name> <operator pos:line="26" pos:column="20">==<pos:position pos:line="26" pos:column="22"/></operator> <name pos:line="26" pos:column="23">APR_SUCCESS<pos:position pos:line="26" pos:column="34"/></name></expr>)<pos:position pos:line="26" pos:column="35"/></condition><then pos:line="26" pos:column="35"> <block pos:line="26" pos:column="36">{
                <expr_stmt><expr><call><name pos:line="27" pos:column="17">ap_fflush<pos:position pos:line="27" pos:column="26"/></name><argument_list pos:line="27" pos:column="26">(<argument><expr><name><name pos:line="27" pos:column="27">c_o<pos:position pos:line="27" pos:column="30"/></name><operator pos:line="27" pos:column="30">-&gt;<pos:position pos:line="27" pos:column="35"/></operator><name pos:line="27" pos:column="32">output_filters<pos:position pos:line="27" pos:column="46"/></name></name></expr></argument>, <argument><expr><name pos:line="27" pos:column="48">bb<pos:position pos:line="27" pos:column="50"/></name></expr></argument>)<pos:position pos:line="27" pos:column="51"/></argument_list></call></expr>;<pos:position pos:line="27" pos:column="52"/></expr_stmt>
            }<pos:position pos:line="28" pos:column="14"/></block></then>
            <else pos:line="29" pos:column="13">else <block pos:line="29" pos:column="18">{
                <expr_stmt><expr><call><name pos:line="30" pos:column="17">ap_log_rerror<pos:position pos:line="30" pos:column="30"/></name><argument_list pos:line="30" pos:column="30">(<argument><expr><name pos:line="30" pos:column="31">APLOG_MARK<pos:position pos:line="30" pos:column="41"/></name></expr></argument>, <argument><expr><name pos:line="30" pos:column="43">APLOG_ERR<pos:position pos:line="30" pos:column="52"/></name></expr></argument>, <argument><expr><name pos:line="30" pos:column="54">rv<pos:position pos:line="30" pos:column="56"/></name></expr></argument>, <argument><expr><name pos:line="30" pos:column="58">r<pos:position pos:line="30" pos:column="59"/></name></expr></argument>, <argument><expr><call><name pos:line="30" pos:column="61">APLOGNO<pos:position pos:line="30" pos:column="68"/></name><argument_list pos:line="30" pos:column="68">(<argument><expr><literal type="number" pos:line="30" pos:column="69">01017<pos:position pos:line="30" pos:column="74"/></literal></expr></argument>)<pos:position pos:line="30" pos:column="75"/></argument_list></call>
                              <literal type="string" pos:line="31" pos:column="31">"error on %s - ap_pass_brigade"<pos:position pos:line="31" pos:column="62"/></literal></expr></argument>,
                              <argument><expr><name pos:line="32" pos:column="31">name<pos:position pos:line="32" pos:column="35"/></name></expr></argument>)<pos:position pos:line="32" pos:column="36"/></argument_list></call></expr>;<pos:position pos:line="32" pos:column="37"/></expr_stmt>
            }<pos:position pos:line="33" pos:column="14"/></block></else></if>
        }<pos:position pos:line="34" pos:column="10"/></block></then> <elseif pos:line="34" pos:column="11">else <if pos:line="34" pos:column="16">if <condition pos:line="34" pos:column="19">(<expr><operator pos:line="34" pos:column="20">!<pos:position pos:line="34" pos:column="21"/></operator><call><name pos:line="34" pos:column="21">APR_STATUS_IS_EAGAIN<pos:position pos:line="34" pos:column="41"/></name><argument_list pos:line="34" pos:column="41">(<argument><expr><name pos:line="34" pos:column="42">rv<pos:position pos:line="34" pos:column="44"/></name></expr></argument>)<pos:position pos:line="34" pos:column="45"/></argument_list></call></expr>)<pos:position pos:line="34" pos:column="46"/></condition><then pos:line="34" pos:column="46"> <block pos:line="34" pos:column="47">{
            <expr_stmt><expr><call><name pos:line="35" pos:column="13">ap_log_rerror<pos:position pos:line="35" pos:column="26"/></name><argument_list pos:line="35" pos:column="26">(<argument><expr><name pos:line="35" pos:column="27">APLOG_MARK<pos:position pos:line="35" pos:column="37"/></name></expr></argument>, <argument><expr><name pos:line="35" pos:column="39">APLOG_DEBUG<pos:position pos:line="35" pos:column="50"/></name></expr></argument>, <argument><expr><name pos:line="35" pos:column="52">rv<pos:position pos:line="35" pos:column="54"/></name></expr></argument>, <argument><expr><name pos:line="35" pos:column="56">r<pos:position pos:line="35" pos:column="57"/></name></expr></argument>, <argument><expr><call><name pos:line="35" pos:column="59">APLOGNO<pos:position pos:line="35" pos:column="66"/></name><argument_list pos:line="35" pos:column="66">(<argument><expr><literal type="number" pos:line="35" pos:column="67">01018<pos:position pos:line="35" pos:column="72"/></literal></expr></argument>)<pos:position pos:line="35" pos:column="73"/></argument_list></call>
                          <literal type="string" pos:line="36" pos:column="27">"error on %s - ap_get_brigade"<pos:position pos:line="36" pos:column="57"/></literal></expr></argument>,
                          <argument><expr><name pos:line="37" pos:column="27">name<pos:position pos:line="37" pos:column="31"/></name></expr></argument>)<pos:position pos:line="37" pos:column="32"/></argument_list></call></expr>;<pos:position pos:line="37" pos:column="33"/></expr_stmt>
        }<pos:position pos:line="38" pos:column="10"/></block></then></if></elseif></if>
    }<pos:position pos:line="39" pos:column="6"/></block> while <condition pos:line="39" pos:column="13">(<expr><name pos:line="39" pos:column="14">rv<pos:position pos:line="39" pos:column="16"/></name> <operator pos:line="39" pos:column="17">==<pos:position pos:line="39" pos:column="19"/></operator> <name pos:line="39" pos:column="20">APR_SUCCESS<pos:position pos:line="39" pos:column="31"/></name></expr>)<pos:position pos:line="39" pos:column="32"/></condition>;<pos:position pos:line="39" pos:column="33"/></do>

    <if pos:line="41" pos:column="5">if <condition pos:line="41" pos:column="8">(<expr><call><name pos:line="41" pos:column="9">APR_STATUS_IS_EAGAIN<pos:position pos:line="41" pos:column="29"/></name><argument_list pos:line="41" pos:column="29">(<argument><expr><name pos:line="41" pos:column="30">rv<pos:position pos:line="41" pos:column="32"/></name></expr></argument>)<pos:position pos:line="41" pos:column="33"/></argument_list></call></expr>)<pos:position pos:line="41" pos:column="34"/></condition><then pos:line="41" pos:column="34"> <block pos:line="41" pos:column="35">{
        <expr_stmt><expr><name pos:line="42" pos:column="9">rv<pos:position pos:line="42" pos:column="11"/></name> <operator pos:line="42" pos:column="12">=<pos:position pos:line="42" pos:column="13"/></operator> <name pos:line="42" pos:column="14">APR_SUCCESS<pos:position pos:line="42" pos:column="25"/></name></expr>;<pos:position pos:line="42" pos:column="26"/></expr_stmt>
    }<pos:position pos:line="43" pos:column="6"/></block></then></if>
    <return pos:line="44" pos:column="5">return <expr><name pos:line="44" pos:column="12">rv<pos:position pos:line="44" pos:column="14"/></name></expr>;<pos:position pos:line="44" pos:column="15"/></return>
}<pos:position pos:line="45" pos:column="2"/></block></function></unit>

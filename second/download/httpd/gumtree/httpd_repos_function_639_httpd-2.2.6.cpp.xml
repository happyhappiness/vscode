<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/httpd/gumtree/httpd_repos_function_639_httpd-2.2.6.cpp" pos:tabs="8"><decl_stmt><decl><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">void<pos:position pos:line="1" pos:column="12"/></name> <modifier pos:line="1" pos:column="13">*<pos:position pos:line="1" pos:column="14"/></modifier></type><name pos:line="1" pos:column="14">yy_flex_alloc<pos:position pos:line="1" pos:column="27"/></name><argument_list pos:line="1" pos:column="27">( <argument><expr><name pos:line="1" pos:column="29">yy_size_t<pos:position pos:line="1" pos:column="38"/></name> <name pos:line="1" pos:column="39">size<pos:position pos:line="1" pos:column="43"/></name></expr></argument> )<pos:position pos:line="1" pos:column="45"/></argument_list>
<cpp:else pos:line="2" pos:column="1">#<cpp:directive pos:line="2" pos:column="2">else<pos:position pos:line="2" pos:column="6"/></cpp:directive></cpp:else>
static <name pos:line="3" pos:column="8">void<pos:position pos:line="3" pos:column="12"/></name> <modifier pos:line="3" pos:column="13">*<pos:position pos:line="3" pos:column="14"/></modifier><name pos:line="3" pos:column="14">yy_flex_alloc<pos:position pos:line="3" pos:column="27"/></name><argument_list pos:line="3" pos:column="27">( <argument><expr><name pos:line="3" pos:column="29">size<pos:position pos:line="3" pos:column="33"/></name></expr></argument> )<pos:position pos:line="3" pos:column="35"/></argument_list>
<name pos:line="4" pos:column="1">yy_size_t<pos:position pos:line="4" pos:column="10"/></name> <name pos:line="4" pos:column="11">size<pos:position pos:line="4" pos:column="15"/></name></decl>;<pos:position pos:line="4" pos:column="16"/></decl_stmt>
<cpp:endif pos:line="5" pos:column="1">#<cpp:directive pos:line="5" pos:column="2">endif<pos:position pos:line="5" pos:column="7"/></cpp:directive></cpp:endif>
        <block pos:line="6" pos:column="9">{
        <return pos:line="7" pos:column="9">return <expr><operator pos:line="7" pos:column="16">(<pos:position pos:line="7" pos:column="17"/></operator><name pos:line="7" pos:column="17">void<pos:position pos:line="7" pos:column="21"/></name> <operator pos:line="7" pos:column="22">*<pos:position pos:line="7" pos:column="23"/></operator><operator pos:line="7" pos:column="23">)<pos:position pos:line="7" pos:column="24"/></operator> <call><name pos:line="7" pos:column="25">malloc<pos:position pos:line="7" pos:column="31"/></name><argument_list pos:line="7" pos:column="31">( <argument><expr><name pos:line="7" pos:column="33">size<pos:position pos:line="7" pos:column="37"/></name></expr></argument> )<pos:position pos:line="7" pos:column="39"/></argument_list></call></expr>;<pos:position pos:line="7" pos:column="40"/></return>
        }<pos:position pos:line="8" pos:column="10"/></block></unit>

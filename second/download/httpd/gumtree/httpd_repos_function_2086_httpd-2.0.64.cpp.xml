<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/httpd/gumtree/httpd_repos_function_2086_httpd-2.0.64.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">void<pos:position pos:line="1" pos:column="12"/></name></type> <name pos:line="1" pos:column="13">set_service_description<pos:position pos:line="1" pos:column="36"/></name><parameter_list pos:line="1" pos:column="36">(<parameter><decl><type><name pos:line="1" pos:column="37">void<pos:position pos:line="1" pos:column="41"/></name></type></decl></parameter>)<pos:position pos:line="1" pos:column="42"/></parameter_list>
<block pos:line="2" pos:column="1">{
    <decl_stmt><decl><type><specifier pos:line="3" pos:column="5">const<pos:position pos:line="3" pos:column="10"/></specifier> <name pos:line="3" pos:column="11">char<pos:position pos:line="3" pos:column="15"/></name> <modifier pos:line="3" pos:column="16">*<pos:position pos:line="3" pos:column="17"/></modifier></type><name pos:line="3" pos:column="17">full_description<pos:position pos:line="3" pos:column="33"/></name></decl>;<pos:position pos:line="3" pos:column="34"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="4" pos:column="5">SC_HANDLE<pos:position pos:line="4" pos:column="14"/></name></type> <name pos:line="4" pos:column="15">schSCManager<pos:position pos:line="4" pos:column="27"/></name></decl>;<pos:position pos:line="4" pos:column="28"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="5" pos:column="5">BOOL<pos:position pos:line="5" pos:column="9"/></name></type> <name pos:line="5" pos:column="10">ret<pos:position pos:line="5" pos:column="13"/></name> <init pos:line="5" pos:column="14">= <expr><literal type="number" pos:line="5" pos:column="16">0<pos:position pos:line="5" pos:column="17"/></literal></expr></init></decl>;<pos:position pos:line="5" pos:column="18"/></decl_stmt>

    <comment type="block" pos:line="7" pos:column="5">/* Nothing to do if we are a console
     */</comment>
    <if pos:line="9" pos:column="5">if <condition pos:line="9" pos:column="8">(<expr><operator pos:line="9" pos:column="9">!<pos:position pos:line="9" pos:column="10"/></operator><name pos:line="9" pos:column="10">mpm_service_name<pos:position pos:line="9" pos:column="26"/></name></expr>)<pos:position pos:line="9" pos:column="27"/></condition><then pos:line="9" pos:column="27">
        <block type="pseudo"><return pos:line="10" pos:column="9">return;<pos:position pos:line="10" pos:column="16"/></return></block></then></if>

    <comment type="block" pos:line="12" pos:column="5">/* Time to fix up the description, upon each successful restart
     */</comment>
    <expr_stmt><expr><name pos:line="14" pos:column="5">full_description<pos:position pos:line="14" pos:column="21"/></name> <operator pos:line="14" pos:column="22">=<pos:position pos:line="14" pos:column="23"/></operator> <call><name pos:line="14" pos:column="24">ap_get_server_version<pos:position pos:line="14" pos:column="45"/></name><argument_list pos:line="14" pos:column="45">()<pos:position pos:line="14" pos:column="47"/></argument_list></call></expr>;<pos:position pos:line="14" pos:column="48"/></expr_stmt>

    <if pos:line="16" pos:column="5">if <condition pos:line="16" pos:column="8">(<expr><operator pos:line="16" pos:column="9">(<pos:position pos:line="16" pos:column="10"/></operator><name><name pos:line="16" pos:column="10">osver<pos:position pos:line="16" pos:column="15"/></name><operator pos:line="16" pos:column="15">.<pos:position pos:line="16" pos:column="16"/></operator><name pos:line="16" pos:column="16">dwPlatformId<pos:position pos:line="16" pos:column="28"/></name></name> <operator pos:line="16" pos:column="29">==<pos:position pos:line="16" pos:column="31"/></operator> <name pos:line="16" pos:column="32">VER_PLATFORM_WIN32_NT<pos:position pos:line="16" pos:column="53"/></name><operator pos:line="16" pos:column="53">)<pos:position pos:line="16" pos:column="54"/></operator> 
          <operator pos:line="17" pos:column="11">&amp;&amp;<pos:position pos:line="17" pos:column="21"/></operator> <operator pos:line="17" pos:column="14">(<pos:position pos:line="17" pos:column="15"/></operator><name><name pos:line="17" pos:column="15">osver<pos:position pos:line="17" pos:column="20"/></name><operator pos:line="17" pos:column="20">.<pos:position pos:line="17" pos:column="21"/></operator><name pos:line="17" pos:column="21">dwMajorVersion<pos:position pos:line="17" pos:column="35"/></name></name> <operator pos:line="17" pos:column="36">&gt;<pos:position pos:line="17" pos:column="40"/></operator> <literal type="number" pos:line="17" pos:column="38">4<pos:position pos:line="17" pos:column="39"/></literal><operator pos:line="17" pos:column="39">)<pos:position pos:line="17" pos:column="40"/></operator> 
          <operator pos:line="18" pos:column="11">&amp;&amp;<pos:position pos:line="18" pos:column="21"/></operator> <operator pos:line="18" pos:column="14">(<pos:position pos:line="18" pos:column="15"/></operator><name pos:line="18" pos:column="15">ChangeServiceConfig2<pos:position pos:line="18" pos:column="35"/></name><operator pos:line="18" pos:column="35">)<pos:position pos:line="18" pos:column="36"/></operator>
          <operator pos:line="19" pos:column="11">&amp;&amp;<pos:position pos:line="19" pos:column="21"/></operator> <operator pos:line="19" pos:column="14">(<pos:position pos:line="19" pos:column="15"/></operator><name pos:line="19" pos:column="15">schSCManager<pos:position pos:line="19" pos:column="27"/></name> <operator pos:line="19" pos:column="28">=<pos:position pos:line="19" pos:column="29"/></operator> <call><name pos:line="19" pos:column="30">OpenSCManager<pos:position pos:line="19" pos:column="43"/></name><argument_list pos:line="19" pos:column="43">(<argument><expr><name pos:line="19" pos:column="44">NULL<pos:position pos:line="19" pos:column="48"/></name></expr></argument>, <argument><expr><name pos:line="19" pos:column="50">NULL<pos:position pos:line="19" pos:column="54"/></name></expr></argument>, <argument><expr><name pos:line="19" pos:column="56">SC_MANAGER_CONNECT<pos:position pos:line="19" pos:column="74"/></name></expr></argument>)<pos:position pos:line="19" pos:column="75"/></argument_list></call><operator pos:line="19" pos:column="75">)<pos:position pos:line="19" pos:column="76"/></operator></expr>)<pos:position pos:line="19" pos:column="77"/></condition><then pos:line="19" pos:column="77">
    <block pos:line="20" pos:column="5">{    
        <decl_stmt><decl><type><name pos:line="21" pos:column="9">SC_HANDLE<pos:position pos:line="21" pos:column="18"/></name></type> <name pos:line="21" pos:column="19">schService<pos:position pos:line="21" pos:column="29"/></name> <init pos:line="21" pos:column="30">= <expr><call><name pos:line="21" pos:column="32">OpenService<pos:position pos:line="21" pos:column="43"/></name><argument_list pos:line="21" pos:column="43">(<argument><expr><name pos:line="21" pos:column="44">schSCManager<pos:position pos:line="21" pos:column="56"/></name></expr></argument>, <argument><expr><name pos:line="21" pos:column="58">mpm_service_name<pos:position pos:line="21" pos:column="74"/></name></expr></argument>,
                                           <argument><expr><name pos:line="22" pos:column="44">SERVICE_CHANGE_CONFIG<pos:position pos:line="22" pos:column="65"/></name></expr></argument>)<pos:position pos:line="22" pos:column="66"/></argument_list></call></expr></init></decl>;<pos:position pos:line="22" pos:column="67"/></decl_stmt>
        <if pos:line="23" pos:column="9">if <condition pos:line="23" pos:column="12">(<expr><name pos:line="23" pos:column="13">schService<pos:position pos:line="23" pos:column="23"/></name></expr>)<pos:position pos:line="23" pos:column="24"/></condition><then pos:line="23" pos:column="24"> <block pos:line="23" pos:column="25">{
            <comment type="block" pos:line="24" pos:column="13">/* Cast is necessary, ChangeServiceConfig2 handles multiple
             * object types, some volatile, some not.
             */</comment>
            <comment type="block" pos:line="27" pos:column="13">/* ###: utf-ize */</comment>
            <if pos:line="28" pos:column="13">if <condition pos:line="28" pos:column="16">(<expr><call><name pos:line="28" pos:column="17">ChangeServiceConfig2<pos:position pos:line="28" pos:column="37"/></name><argument_list pos:line="28" pos:column="37">(<argument><expr><name pos:line="28" pos:column="38">schService<pos:position pos:line="28" pos:column="48"/></name></expr></argument>,
                                     <argument><expr><literal type="number" pos:line="29" pos:column="38">1<pos:position pos:line="29" pos:column="39"/></literal></expr></argument> <comment type="block" pos:line="29" pos:column="40">/* SERVICE_CONFIG_DESCRIPTION */</comment>,
                                     <argument><expr><operator pos:line="30" pos:column="38">(<pos:position pos:line="30" pos:column="39"/></operator><name pos:line="30" pos:column="39">LPVOID<pos:position pos:line="30" pos:column="45"/></name><operator pos:line="30" pos:column="45">)<pos:position pos:line="30" pos:column="46"/></operator> <operator pos:line="30" pos:column="47">&amp;<pos:position pos:line="30" pos:column="52"/></operator><name pos:line="30" pos:column="48">full_description<pos:position pos:line="30" pos:column="64"/></name></expr></argument>)<pos:position pos:line="30" pos:column="65"/></argument_list></call></expr>)<pos:position pos:line="30" pos:column="66"/></condition><then pos:line="30" pos:column="66"> <block pos:line="30" pos:column="67">{
                <expr_stmt><expr><name pos:line="31" pos:column="17">full_description<pos:position pos:line="31" pos:column="33"/></name> <operator pos:line="31" pos:column="34">=<pos:position pos:line="31" pos:column="35"/></operator> <name pos:line="31" pos:column="36">NULL<pos:position pos:line="31" pos:column="40"/></name></expr>;<pos:position pos:line="31" pos:column="41"/></expr_stmt>
            }<pos:position pos:line="32" pos:column="14"/></block></then></if>
            <expr_stmt><expr><call><name pos:line="33" pos:column="13">CloseServiceHandle<pos:position pos:line="33" pos:column="31"/></name><argument_list pos:line="33" pos:column="31">(<argument><expr><name pos:line="33" pos:column="32">schService<pos:position pos:line="33" pos:column="42"/></name></expr></argument>)<pos:position pos:line="33" pos:column="43"/></argument_list></call></expr>;<pos:position pos:line="33" pos:column="44"/></expr_stmt>
        }<pos:position pos:line="34" pos:column="10"/></block></then></if>
        <expr_stmt><expr><call><name pos:line="35" pos:column="9">CloseServiceHandle<pos:position pos:line="35" pos:column="27"/></name><argument_list pos:line="35" pos:column="27">(<argument><expr><name pos:line="35" pos:column="28">schSCManager<pos:position pos:line="35" pos:column="40"/></name></expr></argument>)<pos:position pos:line="35" pos:column="41"/></argument_list></call></expr>;<pos:position pos:line="35" pos:column="42"/></expr_stmt>
    }<pos:position pos:line="36" pos:column="6"/></block></then></if>

    <if pos:line="38" pos:column="5">if <condition pos:line="38" pos:column="8">(<expr><name pos:line="38" pos:column="9">full_description<pos:position pos:line="38" pos:column="25"/></name></expr>)<pos:position pos:line="38" pos:column="26"/></condition><then pos:line="38" pos:column="26"> 
    <block pos:line="39" pos:column="5">{
        <decl_stmt><decl><type><name pos:line="40" pos:column="9">char<pos:position pos:line="40" pos:column="13"/></name></type> <name><name pos:line="40" pos:column="14">szPath<pos:position pos:line="40" pos:column="20"/></name><index pos:line="40" pos:column="20">[<expr><name pos:line="40" pos:column="21">MAX_PATH<pos:position pos:line="40" pos:column="29"/></name></expr>]<pos:position pos:line="40" pos:column="30"/></index></name></decl>;<pos:position pos:line="40" pos:column="31"/></decl_stmt>
        <decl_stmt><decl><type><name pos:line="41" pos:column="9">ap_regkey_t<pos:position pos:line="41" pos:column="20"/></name> <modifier pos:line="41" pos:column="21">*<pos:position pos:line="41" pos:column="22"/></modifier></type><name pos:line="41" pos:column="22">svckey<pos:position pos:line="41" pos:column="28"/></name></decl>;<pos:position pos:line="41" pos:column="29"/></decl_stmt>
        <decl_stmt><decl><type><name pos:line="42" pos:column="9">apr_status_t<pos:position pos:line="42" pos:column="21"/></name></type> <name pos:line="42" pos:column="22">rv<pos:position pos:line="42" pos:column="24"/></name></decl>;<pos:position pos:line="42" pos:column="25"/></decl_stmt>

        <comment type="block" pos:line="44" pos:column="9">/* Find the Service key that Monitor Applications iterate */</comment>
        <expr_stmt><expr><call><name pos:line="45" pos:column="9">apr_snprintf<pos:position pos:line="45" pos:column="21"/></name><argument_list pos:line="45" pos:column="21">(<argument><expr><name pos:line="45" pos:column="22">szPath<pos:position pos:line="45" pos:column="28"/></name></expr></argument>, <argument><expr><sizeof pos:line="45" pos:column="30">sizeof<argument_list pos:line="45" pos:column="36">(<argument><expr><name pos:line="45" pos:column="37">szPath<pos:position pos:line="45" pos:column="43"/></name></expr></argument>)<pos:position pos:line="45" pos:column="44"/></argument_list></sizeof></expr></argument>, 
                     <argument><expr><literal type="string" pos:line="46" pos:column="22">"SYSTEM\\CurrentControlSet\\Services\\%s"<pos:position pos:line="46" pos:column="63"/></literal></expr></argument>, 
                     <argument><expr><name pos:line="47" pos:column="22">mpm_service_name<pos:position pos:line="47" pos:column="38"/></name></expr></argument>)<pos:position pos:line="47" pos:column="39"/></argument_list></call></expr>;<pos:position pos:line="47" pos:column="40"/></expr_stmt>
        <expr_stmt><expr><name pos:line="48" pos:column="9">rv<pos:position pos:line="48" pos:column="11"/></name> <operator pos:line="48" pos:column="12">=<pos:position pos:line="48" pos:column="13"/></operator> <call><name pos:line="48" pos:column="14">ap_regkey_open<pos:position pos:line="48" pos:column="28"/></name><argument_list pos:line="48" pos:column="28">(<argument><expr><operator pos:line="48" pos:column="29">&amp;<pos:position pos:line="48" pos:column="34"/></operator><name pos:line="48" pos:column="30">svckey<pos:position pos:line="48" pos:column="36"/></name></expr></argument>, <argument><expr><name pos:line="48" pos:column="38">AP_REGKEY_LOCAL_MACHINE<pos:position pos:line="48" pos:column="61"/></name></expr></argument>, <argument><expr><name pos:line="48" pos:column="63">szPath<pos:position pos:line="48" pos:column="69"/></name></expr></argument>,
                            <argument><expr><name pos:line="49" pos:column="29">APR_READ<pos:position pos:line="49" pos:column="37"/></name> <operator pos:line="49" pos:column="38">|<pos:position pos:line="49" pos:column="39"/></operator> <name pos:line="49" pos:column="40">APR_WRITE<pos:position pos:line="49" pos:column="49"/></name></expr></argument>, <argument><expr><name pos:line="49" pos:column="51">pconf<pos:position pos:line="49" pos:column="56"/></name></expr></argument>)<pos:position pos:line="49" pos:column="57"/></argument_list></call></expr>;<pos:position pos:line="49" pos:column="58"/></expr_stmt>
        <if pos:line="50" pos:column="9">if <condition pos:line="50" pos:column="12">(<expr><name pos:line="50" pos:column="13">rv<pos:position pos:line="50" pos:column="15"/></name> <operator pos:line="50" pos:column="16">!=<pos:position pos:line="50" pos:column="18"/></operator> <name pos:line="50" pos:column="19">APR_SUCCESS<pos:position pos:line="50" pos:column="30"/></name></expr>)<pos:position pos:line="50" pos:column="31"/></condition><then pos:line="50" pos:column="31"> <block pos:line="50" pos:column="32">{
            <return pos:line="51" pos:column="13">return;<pos:position pos:line="51" pos:column="20"/></return>
        }<pos:position pos:line="52" pos:column="10"/></block></then></if>
        <comment type="block" pos:line="53" pos:column="9">/* Attempt to set the Description value for our service */</comment>
        <expr_stmt><expr><call><name pos:line="54" pos:column="9">ap_regkey_value_set<pos:position pos:line="54" pos:column="28"/></name><argument_list pos:line="54" pos:column="28">(<argument><expr><name pos:line="54" pos:column="29">svckey<pos:position pos:line="54" pos:column="35"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="54" pos:column="37">"Description"<pos:position pos:line="54" pos:column="50"/></literal></expr></argument>, <argument><expr><name pos:line="54" pos:column="52">full_description<pos:position pos:line="54" pos:column="68"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="54" pos:column="70">0<pos:position pos:line="54" pos:column="71"/></literal></expr></argument>, <argument><expr><name pos:line="54" pos:column="73">pconf<pos:position pos:line="54" pos:column="78"/></name></expr></argument>)<pos:position pos:line="54" pos:column="79"/></argument_list></call></expr>;<pos:position pos:line="54" pos:column="80"/></expr_stmt>
        <expr_stmt><expr><call><name pos:line="55" pos:column="9">ap_regkey_close<pos:position pos:line="55" pos:column="24"/></name><argument_list pos:line="55" pos:column="24">(<argument><expr><name pos:line="55" pos:column="25">svckey<pos:position pos:line="55" pos:column="31"/></name></expr></argument>)<pos:position pos:line="55" pos:column="32"/></argument_list></call></expr>;<pos:position pos:line="55" pos:column="33"/></expr_stmt>
    }<pos:position pos:line="56" pos:column="6"/></block></then></if>
}<pos:position pos:line="57" pos:column="2"/></block></function></unit>

<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/httpd/gumtree/httpd_repos_function_3527_httpd-2.4.12.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">DWORD<pos:position pos:line="1" pos:column="13"/></name> <name pos:line="1" pos:column="14">WINAPI<pos:position pos:line="1" pos:column="20"/></name></type> <name pos:line="1" pos:column="21">service_nt_dispatch_thread<pos:position pos:line="1" pos:column="47"/></name><parameter_list pos:line="1" pos:column="47">(<parameter><decl><type><name pos:line="1" pos:column="48">LPVOID<pos:position pos:line="1" pos:column="54"/></name></type> <name pos:line="1" pos:column="55">nada<pos:position pos:line="1" pos:column="59"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="60"/></parameter_list>
 <block pos:line="2" pos:column="2">{
<cpp:if pos:line="3" pos:column="1">#<cpp:directive pos:line="3" pos:column="2">if<pos:position pos:line="3" pos:column="4"/></cpp:directive> <expr><name pos:line="3" pos:column="5">APR_HAS_UNICODE_FS<pos:position pos:line="3" pos:column="23"/></name></expr></cpp:if>
    <decl_stmt><decl><type><name pos:line="4" pos:column="5">SERVICE_TABLE_ENTRYW<pos:position pos:line="4" pos:column="25"/></name></type> <name><name pos:line="4" pos:column="26">dispatchTable_w<pos:position pos:line="4" pos:column="41"/></name><index pos:line="4" pos:column="41">[]<pos:position pos:line="4" pos:column="43"/></index></name> <init pos:line="4" pos:column="44">=
    <expr><block pos:line="5" pos:column="5">{
        <expr><block pos:line="6" pos:column="9">{ <expr><literal type="string" pos:line="6" pos:column="11">L""<pos:position pos:line="6" pos:column="14"/></literal></expr>, <expr><name pos:line="6" pos:column="16">service_nt_main_fn_w<pos:position pos:line="6" pos:column="36"/></name></expr> }<pos:position pos:line="6" pos:column="38"/></block></expr>,
        <expr><block pos:line="7" pos:column="9">{ <expr><name pos:line="7" pos:column="11">NULL<pos:position pos:line="7" pos:column="15"/></name></expr>, <expr><name pos:line="7" pos:column="17">NULL<pos:position pos:line="7" pos:column="21"/></name></expr> }<pos:position pos:line="7" pos:column="23"/></block></expr>
    }<pos:position pos:line="8" pos:column="6"/></block></expr></init></decl>;<pos:position pos:line="8" pos:column="7"/></decl_stmt>
<cpp:endif pos:line="9" pos:column="1">#<cpp:directive pos:line="9" pos:column="2">endif<pos:position pos:line="9" pos:column="7"/></cpp:directive></cpp:endif> <comment type="block" pos:line="9" pos:column="8">/* APR_HAS_UNICODE_FS */</comment>
<cpp:if pos:line="10" pos:column="1">#<cpp:directive pos:line="10" pos:column="2">if<pos:position pos:line="10" pos:column="4"/></cpp:directive> <expr><name pos:line="10" pos:column="5">APR_HAS_ANSI_FS<pos:position pos:line="10" pos:column="20"/></name></expr></cpp:if>
    <decl_stmt><decl><type><name pos:line="11" pos:column="5">SERVICE_TABLE_ENTRYA<pos:position pos:line="11" pos:column="25"/></name></type> <name><name pos:line="11" pos:column="26">dispatchTable<pos:position pos:line="11" pos:column="39"/></name><index pos:line="11" pos:column="39">[]<pos:position pos:line="11" pos:column="41"/></index></name> <init pos:line="11" pos:column="42">=
    <expr><block pos:line="12" pos:column="5">{
        <expr><block pos:line="13" pos:column="9">{ <expr><literal type="string" pos:line="13" pos:column="11">""<pos:position pos:line="13" pos:column="13"/></literal></expr>, <expr><name pos:line="13" pos:column="15">service_nt_main_fn<pos:position pos:line="13" pos:column="33"/></name></expr> }<pos:position pos:line="13" pos:column="35"/></block></expr>,
        <expr><block pos:line="14" pos:column="9">{ <expr><name pos:line="14" pos:column="11">NULL<pos:position pos:line="14" pos:column="15"/></name></expr>, <expr><name pos:line="14" pos:column="17">NULL<pos:position pos:line="14" pos:column="21"/></name></expr> }<pos:position pos:line="14" pos:column="23"/></block></expr>
    }<pos:position pos:line="15" pos:column="6"/></block></expr></init></decl>;<pos:position pos:line="15" pos:column="7"/></decl_stmt>
<cpp:endif pos:line="16" pos:column="1">#<cpp:directive pos:line="16" pos:column="2">endif<pos:position pos:line="16" pos:column="7"/></cpp:directive></cpp:endif>
    <decl_stmt><decl><type><name pos:line="17" pos:column="5">apr_status_t<pos:position pos:line="17" pos:column="17"/></name></type> <name pos:line="17" pos:column="18">rv<pos:position pos:line="17" pos:column="20"/></name></decl>;<pos:position pos:line="17" pos:column="21"/></decl_stmt>
 
<cpp:if pos:line="19" pos:column="1">#<cpp:directive pos:line="19" pos:column="2">if<pos:position pos:line="19" pos:column="4"/></cpp:directive> <expr><name pos:line="19" pos:column="5">APR_HAS_UNICODE_FS<pos:position pos:line="19" pos:column="23"/></name></expr></cpp:if>
    <decl_stmt><decl><type><name pos:line="20" pos:column="5">IF_WIN_OS_IS_UNICODE<pos:position pos:line="20" pos:column="25"/></name></type>
        <name pos:line="21" pos:column="9">rv<pos:position pos:line="21" pos:column="11"/></name> <init pos:line="21" pos:column="12">= <expr><call><name pos:line="21" pos:column="14">StartServiceCtrlDispatcherW<pos:position pos:line="21" pos:column="41"/></name><argument_list pos:line="21" pos:column="41">(<argument><expr><name pos:line="21" pos:column="42">dispatchTable_w<pos:position pos:line="21" pos:column="57"/></name></expr></argument>)<pos:position pos:line="21" pos:column="58"/></argument_list></call></expr></init></decl>;<pos:position pos:line="21" pos:column="59"/></decl_stmt>
<cpp:endif pos:line="22" pos:column="1">#<cpp:directive pos:line="22" pos:column="2">endif<pos:position pos:line="22" pos:column="7"/></cpp:directive></cpp:endif>
<cpp:if pos:line="23" pos:column="1">#<cpp:directive pos:line="23" pos:column="2">if<pos:position pos:line="23" pos:column="4"/></cpp:directive> <expr><name pos:line="23" pos:column="5">APR_HAS_ANSI_FS<pos:position pos:line="23" pos:column="20"/></name></expr></cpp:if>
    <decl_stmt><decl><type><name pos:line="24" pos:column="5">ELSE_WIN_OS_IS_ANSI<pos:position pos:line="24" pos:column="24"/></name></type>
         <name pos:line="25" pos:column="10">rv<pos:position pos:line="25" pos:column="12"/></name> <init pos:line="25" pos:column="13">= <expr><call><name pos:line="25" pos:column="15">StartServiceCtrlDispatcherA<pos:position pos:line="25" pos:column="42"/></name><argument_list pos:line="25" pos:column="42">(<argument><expr><name pos:line="25" pos:column="43">dispatchTable<pos:position pos:line="25" pos:column="56"/></name></expr></argument>)<pos:position pos:line="25" pos:column="57"/></argument_list></call></expr></init></decl>;<pos:position pos:line="25" pos:column="58"/></decl_stmt>
<cpp:endif pos:line="26" pos:column="1">#<cpp:directive pos:line="26" pos:column="2">endif<pos:position pos:line="26" pos:column="7"/></cpp:directive></cpp:endif>
    <if pos:line="27" pos:column="5">if <condition pos:line="27" pos:column="8">(<expr><name pos:line="27" pos:column="9">rv<pos:position pos:line="27" pos:column="11"/></name></expr>)<pos:position pos:line="27" pos:column="12"/></condition><then pos:line="27" pos:column="12"> <block pos:line="27" pos:column="13">{
        <expr_stmt><expr><name pos:line="28" pos:column="9">rv<pos:position pos:line="28" pos:column="11"/></name> <operator pos:line="28" pos:column="12">=<pos:position pos:line="28" pos:column="13"/></operator> <name pos:line="28" pos:column="14">APR_SUCCESS<pos:position pos:line="28" pos:column="25"/></name></expr>;<pos:position pos:line="28" pos:column="26"/></expr_stmt>
    }<pos:position pos:line="29" pos:column="6"/></block></then>
    <else pos:line="30" pos:column="5">else <block pos:line="30" pos:column="10">{
        <comment type="block" pos:line="31" pos:column="9">/* This is a genuine failure of the SCM. */</comment>
        <expr_stmt><expr><name pos:line="32" pos:column="9">rv<pos:position pos:line="32" pos:column="11"/></name> <operator pos:line="32" pos:column="12">=<pos:position pos:line="32" pos:column="13"/></operator> <call><name pos:line="32" pos:column="14">apr_get_os_error<pos:position pos:line="32" pos:column="30"/></name><argument_list pos:line="32" pos:column="30">()<pos:position pos:line="32" pos:column="32"/></argument_list></call></expr>;<pos:position pos:line="32" pos:column="33"/></expr_stmt>
        <expr_stmt><expr><call><name pos:line="33" pos:column="9">ap_log_error<pos:position pos:line="33" pos:column="21"/></name><argument_list pos:line="33" pos:column="21">(<argument><expr><name pos:line="33" pos:column="22">APLOG_MARK<pos:position pos:line="33" pos:column="32"/></name></expr></argument>, <argument><expr><name pos:line="33" pos:column="34">APLOG_ERR<pos:position pos:line="33" pos:column="43"/></name> <operator pos:line="33" pos:column="44">|<pos:position pos:line="33" pos:column="45"/></operator> <name pos:line="33" pos:column="46">APLOG_STARTUP<pos:position pos:line="33" pos:column="59"/></name></expr></argument>, <argument><expr><name pos:line="33" pos:column="61">rv<pos:position pos:line="33" pos:column="63"/></name></expr></argument>, <argument><expr><name pos:line="33" pos:column="65">NULL<pos:position pos:line="33" pos:column="69"/></name></expr></argument>,
                     <argument><expr><call><name pos:line="34" pos:column="22">APLOGNO<pos:position pos:line="34" pos:column="29"/></name><argument_list pos:line="34" pos:column="29">(<argument><expr><literal type="number" pos:line="34" pos:column="30">00366<pos:position pos:line="34" pos:column="35"/></literal></expr></argument>)<pos:position pos:line="34" pos:column="36"/></argument_list></call> <literal type="string" pos:line="34" pos:column="37">"Error starting Windows service control "<pos:position pos:line="34" pos:column="78"/></literal>
                     <literal type="string" pos:line="35" pos:column="22">"dispatcher"<pos:position pos:line="35" pos:column="34"/></literal></expr></argument>)<pos:position pos:line="35" pos:column="35"/></argument_list></call></expr>;<pos:position pos:line="35" pos:column="36"/></expr_stmt>
    }<pos:position pos:line="36" pos:column="6"/></block></else></if>
    <return pos:line="37" pos:column="5">return <expr><operator pos:line="37" pos:column="12">(<pos:position pos:line="37" pos:column="13"/></operator><name pos:line="37" pos:column="13">rv<pos:position pos:line="37" pos:column="15"/></name><operator pos:line="37" pos:column="15">)<pos:position pos:line="37" pos:column="16"/></operator></expr>;<pos:position pos:line="37" pos:column="17"/></return>
}<pos:position pos:line="38" pos:column="2"/></block></function></unit>

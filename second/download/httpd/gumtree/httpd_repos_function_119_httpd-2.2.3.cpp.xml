<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/httpd/gumtree/httpd_repos_function_119_httpd-2.2.3.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">DWORD<pos:position pos:line="1" pos:column="6"/></name> <name pos:line="1" pos:column="7">WINAPI<pos:position pos:line="1" pos:column="13"/></name></type> <name pos:line="1" pos:column="14">feedback<pos:position pos:line="1" pos:column="22"/></name><parameter_list pos:line="1" pos:column="22">(<parameter><decl><type><name pos:line="1" pos:column="23">LPVOID<pos:position pos:line="1" pos:column="29"/></name></type> <name pos:line="1" pos:column="30">arg<pos:position pos:line="1" pos:column="33"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="34"/></parameter_list>
<block pos:line="2" pos:column="1">{
    <decl_stmt><decl><type><name pos:line="3" pos:column="5">feedback_args_t<pos:position pos:line="3" pos:column="20"/></name> <modifier pos:line="3" pos:column="21">*<pos:position pos:line="3" pos:column="22"/></modifier></type><name pos:line="3" pos:column="22">feed<pos:position pos:line="3" pos:column="26"/></name> <init pos:line="3" pos:column="27">= <expr><operator pos:line="3" pos:column="29">(<pos:position pos:line="3" pos:column="30"/></operator><name pos:line="3" pos:column="30">feedback_args_t<pos:position pos:line="3" pos:column="45"/></name><operator pos:line="3" pos:column="45">*<pos:position pos:line="3" pos:column="46"/></operator><operator pos:line="3" pos:column="46">)<pos:position pos:line="3" pos:column="47"/></operator><name pos:line="3" pos:column="47">arg<pos:position pos:line="3" pos:column="50"/></name></expr></init></decl>;<pos:position pos:line="3" pos:column="51"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="4" pos:column="5">char<pos:position pos:line="4" pos:column="9"/></name> <modifier pos:line="4" pos:column="10">*<pos:position pos:line="4" pos:column="11"/></modifier></type><name><name pos:line="4" pos:column="11">str<pos:position pos:line="4" pos:column="14"/></name><index pos:line="4" pos:column="14">[<expr><literal type="number" pos:line="4" pos:column="15">1024<pos:position pos:line="4" pos:column="19"/></literal></expr>]<pos:position pos:line="4" pos:column="20"/></index></name></decl>;<pos:position pos:line="4" pos:column="21"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="5" pos:column="5">DWORD<pos:position pos:line="5" pos:column="10"/></name></type> <name pos:line="5" pos:column="11">len<pos:position pos:line="5" pos:column="14"/></name></decl>;<pos:position pos:line="5" pos:column="15"/></decl_stmt>

    <while pos:line="7" pos:column="5">while <condition pos:line="7" pos:column="11">(<expr><call><name pos:line="7" pos:column="12">ReadFile<pos:position pos:line="7" pos:column="20"/></name><argument_list pos:line="7" pos:column="20">(<argument><expr><name><name pos:line="7" pos:column="21">feed<pos:position pos:line="7" pos:column="25"/></name><operator pos:line="7" pos:column="25">-&gt;<pos:position pos:line="7" pos:column="30"/></operator><name pos:line="7" pos:column="27">in<pos:position pos:line="7" pos:column="29"/></name></name></expr></argument>, <argument><expr><name pos:line="7" pos:column="31">str<pos:position pos:line="7" pos:column="34"/></name></expr></argument>, <argument><expr><sizeof pos:line="7" pos:column="36">sizeof<argument_list pos:line="7" pos:column="42">(<argument><expr><name pos:line="7" pos:column="43">str<pos:position pos:line="7" pos:column="46"/></name></expr></argument>)<pos:position pos:line="7" pos:column="47"/></argument_list></sizeof></expr></argument>, <argument><expr><operator pos:line="7" pos:column="49">&amp;<pos:position pos:line="7" pos:column="54"/></operator><name pos:line="7" pos:column="50">len<pos:position pos:line="7" pos:column="53"/></name></expr></argument>, <argument><expr><name pos:line="7" pos:column="55">NULL<pos:position pos:line="7" pos:column="59"/></name></expr></argument>)<pos:position pos:line="7" pos:column="60"/></argument_list></call></expr>)<pos:position pos:line="7" pos:column="61"/></condition>
        <block type="pseudo"><if pos:line="8" pos:column="9">if <condition pos:line="8" pos:column="12">(<expr><operator pos:line="8" pos:column="13">!<pos:position pos:line="8" pos:column="14"/></operator><name pos:line="8" pos:column="14">len<pos:position pos:line="8" pos:column="17"/></name> <operator pos:line="8" pos:column="18">||<pos:position pos:line="8" pos:column="20"/></operator> <operator pos:line="8" pos:column="21">!<pos:position pos:line="8" pos:column="22"/></operator><call><name pos:line="8" pos:column="22">WriteFile<pos:position pos:line="8" pos:column="31"/></name><argument_list pos:line="8" pos:column="31">(<argument><expr><name><name pos:line="8" pos:column="32">feed<pos:position pos:line="8" pos:column="36"/></name><operator pos:line="8" pos:column="36">-&gt;<pos:position pos:line="8" pos:column="41"/></operator><name pos:line="8" pos:column="38">out<pos:position pos:line="8" pos:column="41"/></name></name></expr></argument>, <argument><expr><name pos:line="8" pos:column="43">str<pos:position pos:line="8" pos:column="46"/></name></expr></argument>, <argument><expr><name pos:line="8" pos:column="48">len<pos:position pos:line="8" pos:column="51"/></name></expr></argument>, <argument><expr><operator pos:line="8" pos:column="53">&amp;<pos:position pos:line="8" pos:column="58"/></operator><name pos:line="8" pos:column="54">len<pos:position pos:line="8" pos:column="57"/></name></expr></argument>, <argument><expr><name pos:line="8" pos:column="59">NULL<pos:position pos:line="8" pos:column="63"/></name></expr></argument>)<pos:position pos:line="8" pos:column="64"/></argument_list></call></expr>)<pos:position pos:line="8" pos:column="65"/></condition><then pos:line="8" pos:column="65">
            <block type="pseudo"><break pos:line="9" pos:column="13">break;<pos:position pos:line="9" pos:column="19"/></break></block></then></if></block></while>

    <expr_stmt><expr><call><name pos:line="11" pos:column="5">printerr<pos:position pos:line="11" pos:column="13"/></name><argument_list pos:line="11" pos:column="13">(<argument><expr><literal type="string" pos:line="11" pos:column="14">"[EOF] from Console (%d)\n"<pos:position pos:line="11" pos:column="41"/></literal></expr></argument>, <argument><expr><call><name pos:line="11" pos:column="43">GetLastError<pos:position pos:line="11" pos:column="55"/></name><argument_list pos:line="11" pos:column="55">()<pos:position pos:line="11" pos:column="57"/></argument_list></call></expr></argument>)<pos:position pos:line="11" pos:column="58"/></argument_list></call></expr>;<pos:position pos:line="11" pos:column="59"/></expr_stmt>

    <return pos:line="13" pos:column="5">return <expr><literal type="number" pos:line="13" pos:column="12">0<pos:position pos:line="13" pos:column="13"/></literal></expr>;<pos:position pos:line="13" pos:column="14"/></return>
}<pos:position pos:line="14" pos:column="2"/></block></function></unit>

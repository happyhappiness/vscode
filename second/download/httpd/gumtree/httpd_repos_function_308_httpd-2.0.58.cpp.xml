<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/httpd/gumtree/httpd_repos_function_308_httpd-2.0.58.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">apr_text<pos:position pos:line="1" pos:column="16"/></name> <modifier pos:line="1" pos:column="17">*<pos:position pos:line="1" pos:column="18"/></modifier></type> <name pos:line="1" pos:column="19">dav_failed_proppatch<pos:position pos:line="1" pos:column="39"/></name><parameter_list pos:line="1" pos:column="39">(<parameter><decl><type><name pos:line="1" pos:column="40">apr_pool_t<pos:position pos:line="1" pos:column="50"/></name> <modifier pos:line="1" pos:column="51">*<pos:position pos:line="1" pos:column="52"/></modifier></type><name pos:line="1" pos:column="52">p<pos:position pos:line="1" pos:column="53"/></name></decl></parameter>,
                                      <parameter><decl><type><name pos:line="2" pos:column="39">apr_array_header_t<pos:position pos:line="2" pos:column="57"/></name> <modifier pos:line="2" pos:column="58">*<pos:position pos:line="2" pos:column="59"/></modifier></type><name pos:line="2" pos:column="59">prop_ctx<pos:position pos:line="2" pos:column="67"/></name></decl></parameter>)<pos:position pos:line="2" pos:column="68"/></parameter_list>
<block pos:line="3" pos:column="1">{
    <decl_stmt><decl><type><name pos:line="4" pos:column="5">apr_text_header<pos:position pos:line="4" pos:column="20"/></name></type> <name pos:line="4" pos:column="21">hdr<pos:position pos:line="4" pos:column="24"/></name> <init pos:line="4" pos:column="25">= <expr><block pos:line="4" pos:column="27">{ <expr><literal type="number" pos:line="4" pos:column="29">0<pos:position pos:line="4" pos:column="30"/></literal></expr> }<pos:position pos:line="4" pos:column="32"/></block></expr></init></decl>;<pos:position pos:line="4" pos:column="33"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="5" pos:column="5">int<pos:position pos:line="5" pos:column="8"/></name></type> <name pos:line="5" pos:column="9">i<pos:position pos:line="5" pos:column="10"/></name> <init pos:line="5" pos:column="11">= <expr><name><name pos:line="5" pos:column="13">prop_ctx<pos:position pos:line="5" pos:column="21"/></name><operator pos:line="5" pos:column="21">-&gt;<pos:position pos:line="5" pos:column="26"/></operator><name pos:line="5" pos:column="23">nelts<pos:position pos:line="5" pos:column="28"/></name></name></expr></init></decl>;<pos:position pos:line="5" pos:column="29"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="6" pos:column="5">dav_prop_ctx<pos:position pos:line="6" pos:column="17"/></name> <modifier pos:line="6" pos:column="18">*<pos:position pos:line="6" pos:column="19"/></modifier></type><name pos:line="6" pos:column="19">ctx<pos:position pos:line="6" pos:column="22"/></name> <init pos:line="6" pos:column="23">= <expr><operator pos:line="6" pos:column="25">(<pos:position pos:line="6" pos:column="26"/></operator><name pos:line="6" pos:column="26">dav_prop_ctx<pos:position pos:line="6" pos:column="38"/></name> <operator pos:line="6" pos:column="39">*<pos:position pos:line="6" pos:column="40"/></operator><operator pos:line="6" pos:column="40">)<pos:position pos:line="6" pos:column="41"/></operator><name><name pos:line="6" pos:column="41">prop_ctx<pos:position pos:line="6" pos:column="49"/></name><operator pos:line="6" pos:column="49">-&gt;<pos:position pos:line="6" pos:column="54"/></operator><name pos:line="6" pos:column="51">elts<pos:position pos:line="6" pos:column="55"/></name></name></expr></init></decl>;<pos:position pos:line="6" pos:column="56"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="7" pos:column="5">dav_error<pos:position pos:line="7" pos:column="14"/></name> <modifier pos:line="7" pos:column="15">*<pos:position pos:line="7" pos:column="16"/></modifier></type><name pos:line="7" pos:column="16">err424_set<pos:position pos:line="7" pos:column="26"/></name> <init pos:line="7" pos:column="27">= <expr><name pos:line="7" pos:column="29">NULL<pos:position pos:line="7" pos:column="33"/></name></expr></init></decl>;<pos:position pos:line="7" pos:column="34"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="8" pos:column="5">dav_error<pos:position pos:line="8" pos:column="14"/></name> <modifier pos:line="8" pos:column="15">*<pos:position pos:line="8" pos:column="16"/></modifier></type><name pos:line="8" pos:column="16">err424_delete<pos:position pos:line="8" pos:column="29"/></name> <init pos:line="8" pos:column="30">= <expr><name pos:line="8" pos:column="32">NULL<pos:position pos:line="8" pos:column="36"/></name></expr></init></decl>;<pos:position pos:line="8" pos:column="37"/></decl_stmt>
    <decl_stmt><decl><type><specifier pos:line="9" pos:column="5">const<pos:position pos:line="9" pos:column="10"/></specifier> <name pos:line="9" pos:column="11">char<pos:position pos:line="9" pos:column="15"/></name> <modifier pos:line="9" pos:column="16">*<pos:position pos:line="9" pos:column="17"/></modifier></type><name pos:line="9" pos:column="17">s<pos:position pos:line="9" pos:column="18"/></name></decl>;<pos:position pos:line="9" pos:column="19"/></decl_stmt>

    <comment type="block" pos:line="11" pos:column="5">/* ### might be nice to sort by status code and description */</comment>

    <for pos:line="13" pos:column="5">for <control pos:line="13" pos:column="9">( <init pos:line="13" pos:column="11">;<pos:position pos:line="13" pos:column="12"/></init> <condition><expr><name pos:line="13" pos:column="13">i<pos:position pos:line="13" pos:column="14"/></name><operator pos:line="13" pos:column="14">--<pos:position pos:line="13" pos:column="16"/></operator> <operator pos:line="13" pos:column="17">&gt;<pos:position pos:line="13" pos:column="21"/></operator> <literal type="number" pos:line="13" pos:column="19">0<pos:position pos:line="13" pos:column="20"/></literal></expr>;<pos:position pos:line="13" pos:column="21"/></condition> <incr><expr><operator pos:line="13" pos:column="22">++<pos:position pos:line="13" pos:column="24"/></operator><name pos:line="13" pos:column="24">ctx<pos:position pos:line="13" pos:column="27"/></name></expr></incr> )<pos:position pos:line="13" pos:column="29"/></control> <block pos:line="13" pos:column="30">{
        <expr_stmt><expr><call><name pos:line="14" pos:column="9">apr_text_append<pos:position pos:line="14" pos:column="24"/></name><argument_list pos:line="14" pos:column="24">(<argument><expr><name pos:line="14" pos:column="25">p<pos:position pos:line="14" pos:column="26"/></name></expr></argument>, <argument><expr><operator pos:line="14" pos:column="28">&amp;<pos:position pos:line="14" pos:column="33"/></operator><name pos:line="14" pos:column="29">hdr<pos:position pos:line="14" pos:column="32"/></name></expr></argument>,
                        <argument><expr><literal type="string" pos:line="15" pos:column="25">"&lt;D:propstat&gt;"<pos:position pos:line="15" pos:column="45"/></literal> <name pos:line="15" pos:column="40">DEBUG_CR<pos:position pos:line="15" pos:column="48"/></name>
                        <literal type="string" pos:line="16" pos:column="25">"&lt;D:prop&gt;"<pos:position pos:line="16" pos:column="41"/></literal></expr></argument>)<pos:position pos:line="16" pos:column="36"/></argument_list></call></expr>;<pos:position pos:line="16" pos:column="37"/></expr_stmt>
        <expr_stmt><expr><call><name pos:line="17" pos:column="9">apr_text_append<pos:position pos:line="17" pos:column="24"/></name><argument_list pos:line="17" pos:column="24">(<argument><expr><name pos:line="17" pos:column="25">p<pos:position pos:line="17" pos:column="26"/></name></expr></argument>, <argument><expr><operator pos:line="17" pos:column="28">&amp;<pos:position pos:line="17" pos:column="33"/></operator><name pos:line="17" pos:column="29">hdr<pos:position pos:line="17" pos:column="32"/></name></expr></argument>, <argument><expr><call><name pos:line="17" pos:column="34">apr_xml_empty_elem<pos:position pos:line="17" pos:column="52"/></name><argument_list pos:line="17" pos:column="52">(<argument><expr><name pos:line="17" pos:column="53">p<pos:position pos:line="17" pos:column="54"/></name></expr></argument>, <argument><expr><name><name pos:line="17" pos:column="56">ctx<pos:position pos:line="17" pos:column="59"/></name><operator pos:line="17" pos:column="59">-&gt;<pos:position pos:line="17" pos:column="64"/></operator><name pos:line="17" pos:column="61">prop<pos:position pos:line="17" pos:column="65"/></name></name></expr></argument>)<pos:position pos:line="17" pos:column="66"/></argument_list></call></expr></argument>)<pos:position pos:line="17" pos:column="67"/></argument_list></call></expr>;<pos:position pos:line="17" pos:column="68"/></expr_stmt>
        <expr_stmt><expr><call><name pos:line="18" pos:column="9">apr_text_append<pos:position pos:line="18" pos:column="24"/></name><argument_list pos:line="18" pos:column="24">(<argument><expr><name pos:line="18" pos:column="25">p<pos:position pos:line="18" pos:column="26"/></name></expr></argument>, <argument><expr><operator pos:line="18" pos:column="28">&amp;<pos:position pos:line="18" pos:column="33"/></operator><name pos:line="18" pos:column="29">hdr<pos:position pos:line="18" pos:column="32"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="18" pos:column="34">"&lt;/D:prop&gt;"<pos:position pos:line="18" pos:column="51"/></literal> <name pos:line="18" pos:column="46">DEBUG_CR<pos:position pos:line="18" pos:column="54"/></name></expr></argument>)<pos:position pos:line="18" pos:column="55"/></argument_list></call></expr>;<pos:position pos:line="18" pos:column="56"/></expr_stmt>

        <if pos:line="20" pos:column="9">if <condition pos:line="20" pos:column="12">(<expr><name><name pos:line="20" pos:column="13">ctx<pos:position pos:line="20" pos:column="16"/></name><operator pos:line="20" pos:column="16">-&gt;<pos:position pos:line="20" pos:column="21"/></operator><name pos:line="20" pos:column="18">err<pos:position pos:line="20" pos:column="21"/></name></name> <operator pos:line="20" pos:column="22">==<pos:position pos:line="20" pos:column="24"/></operator> <name pos:line="20" pos:column="25">NULL<pos:position pos:line="20" pos:column="29"/></name></expr>)<pos:position pos:line="20" pos:column="30"/></condition><then pos:line="20" pos:column="30"> <block pos:line="20" pos:column="31">{
            <comment type="block" pos:line="21" pos:column="13">/* nothing was assigned here yet, so make it a 424 */</comment>

            <if pos:line="23" pos:column="13">if <condition pos:line="23" pos:column="16">(<expr><name><name pos:line="23" pos:column="17">ctx<pos:position pos:line="23" pos:column="20"/></name><operator pos:line="23" pos:column="20">-&gt;<pos:position pos:line="23" pos:column="25"/></operator><name pos:line="23" pos:column="22">operation<pos:position pos:line="23" pos:column="31"/></name></name> <operator pos:line="23" pos:column="32">==<pos:position pos:line="23" pos:column="34"/></operator> <name pos:line="23" pos:column="35">DAV_PROP_OP_SET<pos:position pos:line="23" pos:column="50"/></name></expr>)<pos:position pos:line="23" pos:column="51"/></condition><then pos:line="23" pos:column="51"> <block pos:line="23" pos:column="52">{
                <if pos:line="24" pos:column="17">if <condition pos:line="24" pos:column="20">(<expr><name pos:line="24" pos:column="21">err424_set<pos:position pos:line="24" pos:column="31"/></name> <operator pos:line="24" pos:column="32">==<pos:position pos:line="24" pos:column="34"/></operator> <name pos:line="24" pos:column="35">NULL<pos:position pos:line="24" pos:column="39"/></name></expr>)<pos:position pos:line="24" pos:column="40"/></condition><then pos:line="24" pos:column="40">
                    <block type="pseudo"><expr_stmt><expr><name pos:line="25" pos:column="21">err424_set<pos:position pos:line="25" pos:column="31"/></name> <operator pos:line="25" pos:column="32">=<pos:position pos:line="25" pos:column="33"/></operator> <call><name pos:line="25" pos:column="34">dav_new_error<pos:position pos:line="25" pos:column="47"/></name><argument_list pos:line="25" pos:column="47">(<argument><expr><name pos:line="25" pos:column="48">p<pos:position pos:line="25" pos:column="49"/></name></expr></argument>, <argument><expr><name pos:line="25" pos:column="51">HTTP_FAILED_DEPENDENCY<pos:position pos:line="25" pos:column="73"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="25" pos:column="75">0<pos:position pos:line="25" pos:column="76"/></literal></expr></argument>,
                                               <argument><expr><literal type="string" pos:line="26" pos:column="48">"Attempted DAV:set operation "<pos:position pos:line="26" pos:column="78"/></literal>
                                               <literal type="string" pos:line="27" pos:column="48">"could not be completed due "<pos:position pos:line="27" pos:column="77"/></literal>
                                               <literal type="string" pos:line="28" pos:column="48">"to other errors."<pos:position pos:line="28" pos:column="66"/></literal></expr></argument>)<pos:position pos:line="28" pos:column="67"/></argument_list></call></expr>;<pos:position pos:line="28" pos:column="68"/></expr_stmt></block></then></if>
                <expr_stmt><expr><name><name pos:line="29" pos:column="17">ctx<pos:position pos:line="29" pos:column="20"/></name><operator pos:line="29" pos:column="20">-&gt;<pos:position pos:line="29" pos:column="25"/></operator><name pos:line="29" pos:column="22">err<pos:position pos:line="29" pos:column="25"/></name></name> <operator pos:line="29" pos:column="26">=<pos:position pos:line="29" pos:column="27"/></operator> <name pos:line="29" pos:column="28">err424_set<pos:position pos:line="29" pos:column="38"/></name></expr>;<pos:position pos:line="29" pos:column="39"/></expr_stmt>
            }<pos:position pos:line="30" pos:column="14"/></block></then>
            <elseif pos:line="31" pos:column="13">else <if pos:line="31" pos:column="18">if <condition pos:line="31" pos:column="21">(<expr><name><name pos:line="31" pos:column="22">ctx<pos:position pos:line="31" pos:column="25"/></name><operator pos:line="31" pos:column="25">-&gt;<pos:position pos:line="31" pos:column="30"/></operator><name pos:line="31" pos:column="27">operation<pos:position pos:line="31" pos:column="36"/></name></name> <operator pos:line="31" pos:column="37">==<pos:position pos:line="31" pos:column="39"/></operator> <name pos:line="31" pos:column="40">DAV_PROP_OP_DELETE<pos:position pos:line="31" pos:column="58"/></name></expr>)<pos:position pos:line="31" pos:column="59"/></condition><then pos:line="31" pos:column="59"> <block pos:line="31" pos:column="60">{
                <if pos:line="32" pos:column="17">if <condition pos:line="32" pos:column="20">(<expr><name pos:line="32" pos:column="21">err424_delete<pos:position pos:line="32" pos:column="34"/></name> <operator pos:line="32" pos:column="35">==<pos:position pos:line="32" pos:column="37"/></operator> <name pos:line="32" pos:column="38">NULL<pos:position pos:line="32" pos:column="42"/></name></expr>)<pos:position pos:line="32" pos:column="43"/></condition><then pos:line="32" pos:column="43">
                    <block type="pseudo"><expr_stmt><expr><name pos:line="33" pos:column="21">err424_delete<pos:position pos:line="33" pos:column="34"/></name> <operator pos:line="33" pos:column="35">=<pos:position pos:line="33" pos:column="36"/></operator> <call><name pos:line="33" pos:column="37">dav_new_error<pos:position pos:line="33" pos:column="50"/></name><argument_list pos:line="33" pos:column="50">(<argument><expr><name pos:line="33" pos:column="51">p<pos:position pos:line="33" pos:column="52"/></name></expr></argument>, <argument><expr><name pos:line="33" pos:column="54">HTTP_FAILED_DEPENDENCY<pos:position pos:line="33" pos:column="76"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="33" pos:column="78">0<pos:position pos:line="33" pos:column="79"/></literal></expr></argument>,
                                                  <argument><expr><literal type="string" pos:line="34" pos:column="51">"Attempted DAV:remove "<pos:position pos:line="34" pos:column="74"/></literal>
                                                  <literal type="string" pos:line="35" pos:column="51">"operation could not be "<pos:position pos:line="35" pos:column="76"/></literal>
                                                  <literal type="string" pos:line="36" pos:column="51">"completed due to other "<pos:position pos:line="36" pos:column="76"/></literal>
                                                  <literal type="string" pos:line="37" pos:column="51">"errors."<pos:position pos:line="37" pos:column="60"/></literal></expr></argument>)<pos:position pos:line="37" pos:column="61"/></argument_list></call></expr>;<pos:position pos:line="37" pos:column="62"/></expr_stmt></block></then></if>
                <expr_stmt><expr><name><name pos:line="38" pos:column="17">ctx<pos:position pos:line="38" pos:column="20"/></name><operator pos:line="38" pos:column="20">-&gt;<pos:position pos:line="38" pos:column="25"/></operator><name pos:line="38" pos:column="22">err<pos:position pos:line="38" pos:column="25"/></name></name> <operator pos:line="38" pos:column="26">=<pos:position pos:line="38" pos:column="27"/></operator> <name pos:line="38" pos:column="28">err424_delete<pos:position pos:line="38" pos:column="41"/></name></expr>;<pos:position pos:line="38" pos:column="42"/></expr_stmt>
            }<pos:position pos:line="39" pos:column="14"/></block></then></if></elseif></if>
        }<pos:position pos:line="40" pos:column="10"/></block></then></if>

        <expr_stmt><expr><name pos:line="42" pos:column="9">s<pos:position pos:line="42" pos:column="10"/></name> <operator pos:line="42" pos:column="11">=<pos:position pos:line="42" pos:column="12"/></operator> <call><name pos:line="42" pos:column="13">apr_psprintf<pos:position pos:line="42" pos:column="25"/></name><argument_list pos:line="42" pos:column="25">(<argument><expr><name pos:line="42" pos:column="26">p<pos:position pos:line="42" pos:column="27"/></name></expr></argument>,
                         <argument><expr><literal type="string" pos:line="43" pos:column="26">"&lt;D:status&gt;"<pos:position pos:line="43" pos:column="44"/></literal>
                         <literal type="string" pos:line="44" pos:column="26">"HTTP/1.1 %d (status)"<pos:position pos:line="44" pos:column="48"/></literal>
                         <literal type="string" pos:line="45" pos:column="26">"&lt;/D:status&gt;"<pos:position pos:line="45" pos:column="45"/></literal> <name pos:line="45" pos:column="40">DEBUG_CR<pos:position pos:line="45" pos:column="48"/></name></expr></argument>,
                         <argument><expr><name><name pos:line="46" pos:column="26">ctx<pos:position pos:line="46" pos:column="29"/></name><operator pos:line="46" pos:column="29">-&gt;<pos:position pos:line="46" pos:column="34"/></operator><name pos:line="46" pos:column="31">err<pos:position pos:line="46" pos:column="34"/></name><operator pos:line="46" pos:column="34">-&gt;<pos:position pos:line="46" pos:column="39"/></operator><name pos:line="46" pos:column="36">status<pos:position pos:line="46" pos:column="42"/></name></name></expr></argument>)<pos:position pos:line="46" pos:column="43"/></argument_list></call></expr>;<pos:position pos:line="46" pos:column="44"/></expr_stmt>
        <expr_stmt><expr><call><name pos:line="47" pos:column="9">apr_text_append<pos:position pos:line="47" pos:column="24"/></name><argument_list pos:line="47" pos:column="24">(<argument><expr><name pos:line="47" pos:column="25">p<pos:position pos:line="47" pos:column="26"/></name></expr></argument>, <argument><expr><operator pos:line="47" pos:column="28">&amp;<pos:position pos:line="47" pos:column="33"/></operator><name pos:line="47" pos:column="29">hdr<pos:position pos:line="47" pos:column="32"/></name></expr></argument>, <argument><expr><name pos:line="47" pos:column="34">s<pos:position pos:line="47" pos:column="35"/></name></expr></argument>)<pos:position pos:line="47" pos:column="36"/></argument_list></call></expr>;<pos:position pos:line="47" pos:column="37"/></expr_stmt>

        <comment type="block" pos:line="49" pos:column="9">/* ### we should use compute_desc if necessary... */</comment>
        <if pos:line="50" pos:column="9">if <condition pos:line="50" pos:column="12">(<expr><name><name pos:line="50" pos:column="13">ctx<pos:position pos:line="50" pos:column="16"/></name><operator pos:line="50" pos:column="16">-&gt;<pos:position pos:line="50" pos:column="21"/></operator><name pos:line="50" pos:column="18">err<pos:position pos:line="50" pos:column="21"/></name><operator pos:line="50" pos:column="21">-&gt;<pos:position pos:line="50" pos:column="26"/></operator><name pos:line="50" pos:column="23">desc<pos:position pos:line="50" pos:column="27"/></name></name> <operator pos:line="50" pos:column="28">!=<pos:position pos:line="50" pos:column="30"/></operator> <name pos:line="50" pos:column="31">NULL<pos:position pos:line="50" pos:column="35"/></name></expr>)<pos:position pos:line="50" pos:column="36"/></condition><then pos:line="50" pos:column="36"> <block pos:line="50" pos:column="37">{
            <expr_stmt><expr><call><name pos:line="51" pos:column="13">apr_text_append<pos:position pos:line="51" pos:column="28"/></name><argument_list pos:line="51" pos:column="28">(<argument><expr><name pos:line="51" pos:column="29">p<pos:position pos:line="51" pos:column="30"/></name></expr></argument>, <argument><expr><operator pos:line="51" pos:column="32">&amp;<pos:position pos:line="51" pos:column="37"/></operator><name pos:line="51" pos:column="33">hdr<pos:position pos:line="51" pos:column="36"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="51" pos:column="38">"&lt;D:responsedescription&gt;"<pos:position pos:line="51" pos:column="69"/></literal> <name pos:line="51" pos:column="64">DEBUG_CR<pos:position pos:line="51" pos:column="72"/></name></expr></argument>)<pos:position pos:line="51" pos:column="73"/></argument_list></call></expr>;<pos:position pos:line="51" pos:column="74"/></expr_stmt>
            <expr_stmt><expr><call><name pos:line="52" pos:column="13">apr_text_append<pos:position pos:line="52" pos:column="28"/></name><argument_list pos:line="52" pos:column="28">(<argument><expr><name pos:line="52" pos:column="29">p<pos:position pos:line="52" pos:column="30"/></name></expr></argument>, <argument><expr><operator pos:line="52" pos:column="32">&amp;<pos:position pos:line="52" pos:column="37"/></operator><name pos:line="52" pos:column="33">hdr<pos:position pos:line="52" pos:column="36"/></name></expr></argument>, <argument><expr><name><name pos:line="52" pos:column="38">ctx<pos:position pos:line="52" pos:column="41"/></name><operator pos:line="52" pos:column="41">-&gt;<pos:position pos:line="52" pos:column="46"/></operator><name pos:line="52" pos:column="43">err<pos:position pos:line="52" pos:column="46"/></name><operator pos:line="52" pos:column="46">-&gt;<pos:position pos:line="52" pos:column="51"/></operator><name pos:line="52" pos:column="48">desc<pos:position pos:line="52" pos:column="52"/></name></name></expr></argument>)<pos:position pos:line="52" pos:column="53"/></argument_list></call></expr>;<pos:position pos:line="52" pos:column="54"/></expr_stmt>
            <expr_stmt><expr><call><name pos:line="53" pos:column="13">apr_text_append<pos:position pos:line="53" pos:column="28"/></name><argument_list pos:line="53" pos:column="28">(<argument><expr><name pos:line="53" pos:column="29">p<pos:position pos:line="53" pos:column="30"/></name></expr></argument>, <argument><expr><operator pos:line="53" pos:column="32">&amp;<pos:position pos:line="53" pos:column="37"/></operator><name pos:line="53" pos:column="33">hdr<pos:position pos:line="53" pos:column="36"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="53" pos:column="38">"&lt;/D:responsedescription&gt;"<pos:position pos:line="53" pos:column="70"/></literal> <name pos:line="53" pos:column="65">DEBUG_CR<pos:position pos:line="53" pos:column="73"/></name></expr></argument>)<pos:position pos:line="53" pos:column="74"/></argument_list></call></expr>;<pos:position pos:line="53" pos:column="75"/></expr_stmt>
        }<pos:position pos:line="54" pos:column="10"/></block></then></if>

        <expr_stmt><expr><call><name pos:line="56" pos:column="9">apr_text_append<pos:position pos:line="56" pos:column="24"/></name><argument_list pos:line="56" pos:column="24">(<argument><expr><name pos:line="56" pos:column="25">p<pos:position pos:line="56" pos:column="26"/></name></expr></argument>, <argument><expr><operator pos:line="56" pos:column="28">&amp;<pos:position pos:line="56" pos:column="33"/></operator><name pos:line="56" pos:column="29">hdr<pos:position pos:line="56" pos:column="32"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="56" pos:column="34">"&lt;/D:propstat&gt;"<pos:position pos:line="56" pos:column="55"/></literal> <name pos:line="56" pos:column="50">DEBUG_CR<pos:position pos:line="56" pos:column="58"/></name></expr></argument>)<pos:position pos:line="56" pos:column="59"/></argument_list></call></expr>;<pos:position pos:line="56" pos:column="60"/></expr_stmt>
    }<pos:position pos:line="57" pos:column="6"/></block></for>

    <return pos:line="59" pos:column="5">return <expr><name><name pos:line="59" pos:column="12">hdr<pos:position pos:line="59" pos:column="15"/></name><operator pos:line="59" pos:column="15">.<pos:position pos:line="59" pos:column="16"/></operator><name pos:line="59" pos:column="16">first<pos:position pos:line="59" pos:column="21"/></name></name></expr>;<pos:position pos:line="59" pos:column="22"/></return>
}<pos:position pos:line="60" pos:column="2"/></block></function></unit>

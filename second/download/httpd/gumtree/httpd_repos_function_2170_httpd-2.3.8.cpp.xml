<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/httpd/gumtree/httpd_repos_function_2170_httpd-2.3.8.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">int<pos:position pos:line="1" pos:column="11"/></name></type> <name pos:line="1" pos:column="12">post_config<pos:position pos:line="1" pos:column="23"/></name><parameter_list pos:line="1" pos:column="23">(<parameter><decl><type><name pos:line="1" pos:column="24">apr_pool_t<pos:position pos:line="1" pos:column="34"/></name> <modifier pos:line="1" pos:column="35">*<pos:position pos:line="1" pos:column="36"/></modifier></type><name pos:line="1" pos:column="36">p<pos:position pos:line="1" pos:column="37"/></name></decl></parameter>, <parameter><decl><type><name pos:line="1" pos:column="39">apr_pool_t<pos:position pos:line="1" pos:column="49"/></name> <modifier pos:line="1" pos:column="50">*<pos:position pos:line="1" pos:column="51"/></modifier></type><name pos:line="1" pos:column="51">plog<pos:position pos:line="1" pos:column="55"/></name></decl></parameter>, <parameter><decl><type><name pos:line="1" pos:column="57">apr_pool_t<pos:position pos:line="1" pos:column="67"/></name> <modifier pos:line="1" pos:column="68">*<pos:position pos:line="1" pos:column="69"/></modifier></type><name pos:line="1" pos:column="69">ptemp<pos:position pos:line="1" pos:column="74"/></name></decl></parameter>,
                       <parameter><decl><type><name pos:line="2" pos:column="24">server_rec<pos:position pos:line="2" pos:column="34"/></name> <modifier pos:line="2" pos:column="35">*<pos:position pos:line="2" pos:column="36"/></modifier></type><name pos:line="2" pos:column="36">s<pos:position pos:line="2" pos:column="37"/></name></decl></parameter>)<pos:position pos:line="2" pos:column="38"/></parameter_list>
<block pos:line="3" pos:column="1">{
    <decl_stmt><decl><type><name pos:line="4" pos:column="5">void<pos:position pos:line="4" pos:column="9"/></name> <modifier pos:line="4" pos:column="10">*<pos:position pos:line="4" pos:column="11"/></modifier></type><name pos:line="4" pos:column="11">data<pos:position pos:line="4" pos:column="15"/></name></decl>;<pos:position pos:line="4" pos:column="16"/></decl_stmt>
    <decl_stmt><decl><type><specifier pos:line="5" pos:column="5">const<pos:position pos:line="5" pos:column="10"/></specifier> <name pos:line="5" pos:column="11">char<pos:position pos:line="5" pos:column="15"/></name> <modifier pos:line="5" pos:column="16">*<pos:position pos:line="5" pos:column="17"/></modifier></type><name pos:line="5" pos:column="17">userdata_key<pos:position pos:line="5" pos:column="29"/></name> <init pos:line="5" pos:column="30">= <expr><literal type="string" pos:line="5" pos:column="32">"slotmem_shm_post_config"<pos:position pos:line="5" pos:column="57"/></literal></expr></init></decl>;<pos:position pos:line="5" pos:column="58"/></decl_stmt>

    <expr_stmt><expr><call><name pos:line="7" pos:column="5">apr_pool_userdata_get<pos:position pos:line="7" pos:column="26"/></name><argument_list pos:line="7" pos:column="26">(<argument><expr><operator pos:line="7" pos:column="27">&amp;<pos:position pos:line="7" pos:column="32"/></operator><name pos:line="7" pos:column="28">data<pos:position pos:line="7" pos:column="32"/></name></expr></argument>, <argument><expr><name pos:line="7" pos:column="34">userdata_key<pos:position pos:line="7" pos:column="46"/></name></expr></argument>, <argument><expr><name><name pos:line="7" pos:column="48">s<pos:position pos:line="7" pos:column="49"/></name><operator pos:line="7" pos:column="49">-&gt;<pos:position pos:line="7" pos:column="54"/></operator><name pos:line="7" pos:column="51">process<pos:position pos:line="7" pos:column="58"/></name><operator pos:line="7" pos:column="58">-&gt;<pos:position pos:line="7" pos:column="63"/></operator><name pos:line="7" pos:column="60">pool<pos:position pos:line="7" pos:column="64"/></name></name></expr></argument>)<pos:position pos:line="7" pos:column="65"/></argument_list></call></expr>;<pos:position pos:line="7" pos:column="66"/></expr_stmt>
    <if pos:line="8" pos:column="5">if <condition pos:line="8" pos:column="8">(<expr><operator pos:line="8" pos:column="9">!<pos:position pos:line="8" pos:column="10"/></operator><name pos:line="8" pos:column="10">data<pos:position pos:line="8" pos:column="14"/></name></expr>)<pos:position pos:line="8" pos:column="15"/></condition><then pos:line="8" pos:column="15"> <block pos:line="8" pos:column="16">{
        <expr_stmt><expr><call><name pos:line="9" pos:column="9">apr_pool_userdata_set<pos:position pos:line="9" pos:column="30"/></name><argument_list pos:line="9" pos:column="30">(<argument><expr><operator pos:line="9" pos:column="31">(<pos:position pos:line="9" pos:column="32"/></operator><specifier pos:line="9" pos:column="32">const<pos:position pos:line="9" pos:column="37"/></specifier> <name pos:line="9" pos:column="38">void<pos:position pos:line="9" pos:column="42"/></name> <operator pos:line="9" pos:column="43">*<pos:position pos:line="9" pos:column="44"/></operator><operator pos:line="9" pos:column="44">)<pos:position pos:line="9" pos:column="45"/></operator><literal type="number" pos:line="9" pos:column="45">1<pos:position pos:line="9" pos:column="46"/></literal></expr></argument>, <argument><expr><name pos:line="9" pos:column="48">userdata_key<pos:position pos:line="9" pos:column="60"/></name></expr></argument>,
                               <argument><expr><name pos:line="10" pos:column="32">apr_pool_cleanup_null<pos:position pos:line="10" pos:column="53"/></name></expr></argument>, <argument><expr><name><name pos:line="10" pos:column="55">s<pos:position pos:line="10" pos:column="56"/></name><operator pos:line="10" pos:column="56">-&gt;<pos:position pos:line="10" pos:column="61"/></operator><name pos:line="10" pos:column="58">process<pos:position pos:line="10" pos:column="65"/></name><operator pos:line="10" pos:column="65">-&gt;<pos:position pos:line="10" pos:column="70"/></operator><name pos:line="10" pos:column="67">pool<pos:position pos:line="10" pos:column="71"/></name></name></expr></argument>)<pos:position pos:line="10" pos:column="72"/></argument_list></call></expr>;<pos:position pos:line="10" pos:column="73"/></expr_stmt>
        <return pos:line="11" pos:column="9">return <expr><name pos:line="11" pos:column="16">OK<pos:position pos:line="11" pos:column="18"/></name></expr>;<pos:position pos:line="11" pos:column="19"/></return>
    }<pos:position pos:line="12" pos:column="6"/></block></then></if>

    <expr_stmt><expr><call><name pos:line="14" pos:column="5">slotmem_shm_initialize_cleanup<pos:position pos:line="14" pos:column="35"/></name><argument_list pos:line="14" pos:column="35">(<argument><expr><name pos:line="14" pos:column="36">p<pos:position pos:line="14" pos:column="37"/></name></expr></argument>)<pos:position pos:line="14" pos:column="38"/></argument_list></call></expr>;<pos:position pos:line="14" pos:column="39"/></expr_stmt>
    <return pos:line="15" pos:column="5">return <expr><name pos:line="15" pos:column="12">OK<pos:position pos:line="15" pos:column="14"/></name></expr>;<pos:position pos:line="15" pos:column="15"/></return>
}<pos:position pos:line="16" pos:column="2"/></block></function></unit>

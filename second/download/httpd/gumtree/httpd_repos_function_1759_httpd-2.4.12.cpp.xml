<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/httpd/gumtree/httpd_repos_function_1759_httpd-2.4.12.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">int<pos:position pos:line="1" pos:column="11"/></name></type> <name pos:line="1" pos:column="12">connect_to_daemon<pos:position pos:line="1" pos:column="29"/></name><parameter_list pos:line="1" pos:column="29">(<parameter><decl><type><name pos:line="1" pos:column="30">int<pos:position pos:line="1" pos:column="33"/></name> <modifier pos:line="1" pos:column="34">*<pos:position pos:line="1" pos:column="35"/></modifier></type><name pos:line="1" pos:column="35">sdptr<pos:position pos:line="1" pos:column="40"/></name></decl></parameter>, <parameter><decl><type><name pos:line="1" pos:column="42">request_rec<pos:position pos:line="1" pos:column="53"/></name> <modifier pos:line="1" pos:column="54">*<pos:position pos:line="1" pos:column="55"/></modifier></type><name pos:line="1" pos:column="55">r<pos:position pos:line="1" pos:column="56"/></name></decl></parameter>,
                             <parameter><decl><type><name pos:line="2" pos:column="30">cgid_server_conf<pos:position pos:line="2" pos:column="46"/></name> <modifier pos:line="2" pos:column="47">*<pos:position pos:line="2" pos:column="48"/></modifier></type><name pos:line="2" pos:column="48">conf<pos:position pos:line="2" pos:column="52"/></name></decl></parameter>)<pos:position pos:line="2" pos:column="53"/></parameter_list>
<block pos:line="3" pos:column="1">{
    <decl_stmt><decl><type><name pos:line="4" pos:column="5">int<pos:position pos:line="4" pos:column="8"/></name></type> <name pos:line="4" pos:column="9">sd<pos:position pos:line="4" pos:column="11"/></name></decl>;<pos:position pos:line="4" pos:column="12"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="5" pos:column="5">int<pos:position pos:line="5" pos:column="8"/></name></type> <name pos:line="5" pos:column="9">connect_tries<pos:position pos:line="5" pos:column="22"/></name></decl>;<pos:position pos:line="5" pos:column="23"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="6" pos:column="5">apr_interval_time_t<pos:position pos:line="6" pos:column="24"/></name></type> <name pos:line="6" pos:column="25">sliding_timer<pos:position pos:line="6" pos:column="38"/></name></decl>;<pos:position pos:line="6" pos:column="39"/></decl_stmt>

    <expr_stmt><expr><name pos:line="8" pos:column="5">connect_tries<pos:position pos:line="8" pos:column="18"/></name> <operator pos:line="8" pos:column="19">=<pos:position pos:line="8" pos:column="20"/></operator> <literal type="number" pos:line="8" pos:column="21">0<pos:position pos:line="8" pos:column="22"/></literal></expr>;<pos:position pos:line="8" pos:column="23"/></expr_stmt>
    <expr_stmt><expr><name pos:line="9" pos:column="5">sliding_timer<pos:position pos:line="9" pos:column="18"/></name> <operator pos:line="9" pos:column="19">=<pos:position pos:line="9" pos:column="20"/></operator> <literal type="number" pos:line="9" pos:column="21">100000<pos:position pos:line="9" pos:column="27"/></literal></expr>;<pos:position pos:line="9" pos:column="28"/></expr_stmt> <comment type="block" pos:line="9" pos:column="29">/* 100 milliseconds */</comment>
    <while pos:line="10" pos:column="5">while <condition pos:line="10" pos:column="11">(<expr><literal type="number" pos:line="10" pos:column="12">1<pos:position pos:line="10" pos:column="13"/></literal></expr>)<pos:position pos:line="10" pos:column="14"/></condition> <block pos:line="10" pos:column="15">{
        <expr_stmt><expr><operator pos:line="11" pos:column="9">++<pos:position pos:line="11" pos:column="11"/></operator><name pos:line="11" pos:column="11">connect_tries<pos:position pos:line="11" pos:column="24"/></name></expr>;<pos:position pos:line="11" pos:column="25"/></expr_stmt>
        <if pos:line="12" pos:column="9">if <condition pos:line="12" pos:column="12">(<expr><operator pos:line="12" pos:column="13">(<pos:position pos:line="12" pos:column="14"/></operator><name pos:line="12" pos:column="14">sd<pos:position pos:line="12" pos:column="16"/></name> <operator pos:line="12" pos:column="17">=<pos:position pos:line="12" pos:column="18"/></operator> <call><name pos:line="12" pos:column="19">socket<pos:position pos:line="12" pos:column="25"/></name><argument_list pos:line="12" pos:column="25">(<argument><expr><name pos:line="12" pos:column="26">AF_UNIX<pos:position pos:line="12" pos:column="33"/></name></expr></argument>, <argument><expr><name pos:line="12" pos:column="35">SOCK_STREAM<pos:position pos:line="12" pos:column="46"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="12" pos:column="48">0<pos:position pos:line="12" pos:column="49"/></literal></expr></argument>)<pos:position pos:line="12" pos:column="50"/></argument_list></call><operator pos:line="12" pos:column="50">)<pos:position pos:line="12" pos:column="51"/></operator> <operator pos:line="12" pos:column="52">&lt;<pos:position pos:line="12" pos:column="56"/></operator> <literal type="number" pos:line="12" pos:column="54">0<pos:position pos:line="12" pos:column="55"/></literal></expr>)<pos:position pos:line="12" pos:column="56"/></condition><then pos:line="12" pos:column="56"> <block pos:line="12" pos:column="57">{
            <return pos:line="13" pos:column="13">return <expr><call><name pos:line="13" pos:column="20">log_scripterror<pos:position pos:line="13" pos:column="35"/></name><argument_list pos:line="13" pos:column="35">(<argument><expr><name pos:line="13" pos:column="36">r<pos:position pos:line="13" pos:column="37"/></name></expr></argument>, <argument><expr><name pos:line="13" pos:column="39">conf<pos:position pos:line="13" pos:column="43"/></name></expr></argument>, <argument><expr><name pos:line="13" pos:column="45">HTTP_INTERNAL_SERVER_ERROR<pos:position pos:line="13" pos:column="71"/></name></expr></argument>, <argument><expr><name pos:line="13" pos:column="73">errno<pos:position pos:line="13" pos:column="78"/></name></expr></argument>,
                                   <argument><expr><call><name pos:line="14" pos:column="36">APLOGNO<pos:position pos:line="14" pos:column="43"/></name><argument_list pos:line="14" pos:column="43">(<argument><expr><literal type="number" pos:line="14" pos:column="44">01255<pos:position pos:line="14" pos:column="49"/></literal></expr></argument>)<pos:position pos:line="14" pos:column="50"/></argument_list></call> <literal type="string" pos:line="14" pos:column="51">"unable to create socket to cgi daemon"<pos:position pos:line="14" pos:column="90"/></literal></expr></argument>)<pos:position pos:line="14" pos:column="91"/></argument_list></call></expr>;<pos:position pos:line="14" pos:column="92"/></return>
        }<pos:position pos:line="15" pos:column="10"/></block></then></if>
        <if pos:line="16" pos:column="9">if <condition pos:line="16" pos:column="12">(<expr><call><name pos:line="16" pos:column="13">connect<pos:position pos:line="16" pos:column="20"/></name><argument_list pos:line="16" pos:column="20">(<argument><expr><name pos:line="16" pos:column="21">sd<pos:position pos:line="16" pos:column="23"/></name></expr></argument>, <argument><expr><operator pos:line="16" pos:column="25">(<pos:position pos:line="16" pos:column="26"/></operator>struct <name pos:line="16" pos:column="33">sockaddr<pos:position pos:line="16" pos:column="41"/></name> <operator pos:line="16" pos:column="42">*<pos:position pos:line="16" pos:column="43"/></operator><operator pos:line="16" pos:column="43">)<pos:position pos:line="16" pos:column="44"/></operator><name pos:line="16" pos:column="44">server_addr<pos:position pos:line="16" pos:column="55"/></name></expr></argument>, <argument><expr><name pos:line="16" pos:column="57">server_addr_len<pos:position pos:line="16" pos:column="72"/></name></expr></argument>)<pos:position pos:line="16" pos:column="73"/></argument_list></call> <operator pos:line="16" pos:column="74">&lt;<pos:position pos:line="16" pos:column="78"/></operator> <literal type="number" pos:line="16" pos:column="76">0<pos:position pos:line="16" pos:column="77"/></literal></expr>)<pos:position pos:line="16" pos:column="78"/></condition><then pos:line="16" pos:column="78"> <block pos:line="16" pos:column="79">{
            <if pos:line="17" pos:column="13">if <condition pos:line="17" pos:column="16">(<expr><name pos:line="17" pos:column="17">errno<pos:position pos:line="17" pos:column="22"/></name> <operator pos:line="17" pos:column="23">==<pos:position pos:line="17" pos:column="25"/></operator> <name pos:line="17" pos:column="26">ECONNREFUSED<pos:position pos:line="17" pos:column="38"/></name> <operator pos:line="17" pos:column="39">&amp;&amp;<pos:position pos:line="17" pos:column="49"/></operator> <name pos:line="17" pos:column="42">connect_tries<pos:position pos:line="17" pos:column="55"/></name> <operator pos:line="17" pos:column="56">&lt;<pos:position pos:line="17" pos:column="60"/></operator> <name pos:line="17" pos:column="58">DEFAULT_CONNECT_ATTEMPTS<pos:position pos:line="17" pos:column="82"/></name></expr>)<pos:position pos:line="17" pos:column="83"/></condition><then pos:line="17" pos:column="83"> <block pos:line="17" pos:column="84">{
                <expr_stmt><expr><call><name pos:line="18" pos:column="17">ap_log_rerror<pos:position pos:line="18" pos:column="30"/></name><argument_list pos:line="18" pos:column="30">(<argument><expr><name pos:line="18" pos:column="31">APLOG_MARK<pos:position pos:line="18" pos:column="41"/></name></expr></argument>, <argument><expr><name pos:line="18" pos:column="43">APLOG_DEBUG<pos:position pos:line="18" pos:column="54"/></name></expr></argument>, <argument><expr><name pos:line="18" pos:column="56">errno<pos:position pos:line="18" pos:column="61"/></name></expr></argument>, <argument><expr><name pos:line="18" pos:column="63">r<pos:position pos:line="18" pos:column="64"/></name></expr></argument>, <argument><expr><call><name pos:line="18" pos:column="66">APLOGNO<pos:position pos:line="18" pos:column="73"/></name><argument_list pos:line="18" pos:column="73">(<argument><expr><literal type="number" pos:line="18" pos:column="74">01256<pos:position pos:line="18" pos:column="79"/></literal></expr></argument>)<pos:position pos:line="18" pos:column="80"/></argument_list></call>
                              <literal type="string" pos:line="19" pos:column="31">"connect #%d to cgi daemon failed, sleeping before retry"<pos:position pos:line="19" pos:column="88"/></literal></expr></argument>,
                              <argument><expr><name pos:line="20" pos:column="31">connect_tries<pos:position pos:line="20" pos:column="44"/></name></expr></argument>)<pos:position pos:line="20" pos:column="45"/></argument_list></call></expr>;<pos:position pos:line="20" pos:column="46"/></expr_stmt>
                <expr_stmt><expr><call><name pos:line="21" pos:column="17">close<pos:position pos:line="21" pos:column="22"/></name><argument_list pos:line="21" pos:column="22">(<argument><expr><name pos:line="21" pos:column="23">sd<pos:position pos:line="21" pos:column="25"/></name></expr></argument>)<pos:position pos:line="21" pos:column="26"/></argument_list></call></expr>;<pos:position pos:line="21" pos:column="27"/></expr_stmt>
                <expr_stmt><expr><call><name pos:line="22" pos:column="17">apr_sleep<pos:position pos:line="22" pos:column="26"/></name><argument_list pos:line="22" pos:column="26">(<argument><expr><name pos:line="22" pos:column="27">sliding_timer<pos:position pos:line="22" pos:column="40"/></name></expr></argument>)<pos:position pos:line="22" pos:column="41"/></argument_list></call></expr>;<pos:position pos:line="22" pos:column="42"/></expr_stmt>
                <if pos:line="23" pos:column="17">if <condition pos:line="23" pos:column="20">(<expr><name pos:line="23" pos:column="21">sliding_timer<pos:position pos:line="23" pos:column="34"/></name> <operator pos:line="23" pos:column="35">&lt;<pos:position pos:line="23" pos:column="39"/></operator> <call><name pos:line="23" pos:column="37">apr_time_from_sec<pos:position pos:line="23" pos:column="54"/></name><argument_list pos:line="23" pos:column="54">(<argument><expr><literal type="number" pos:line="23" pos:column="55">2<pos:position pos:line="23" pos:column="56"/></literal></expr></argument>)<pos:position pos:line="23" pos:column="57"/></argument_list></call></expr>)<pos:position pos:line="23" pos:column="58"/></condition><then pos:line="23" pos:column="58"> <block pos:line="23" pos:column="59">{
                    <expr_stmt><expr><name pos:line="24" pos:column="21">sliding_timer<pos:position pos:line="24" pos:column="34"/></name> <operator pos:line="24" pos:column="35">*=<pos:position pos:line="24" pos:column="37"/></operator> <literal type="number" pos:line="24" pos:column="38">2<pos:position pos:line="24" pos:column="39"/></literal></expr>;<pos:position pos:line="24" pos:column="40"/></expr_stmt>
                }<pos:position pos:line="25" pos:column="18"/></block></then></if>
            }<pos:position pos:line="26" pos:column="14"/></block></then>
            <else pos:line="27" pos:column="13">else <block pos:line="27" pos:column="18">{
                <expr_stmt><expr><call><name pos:line="28" pos:column="17">close<pos:position pos:line="28" pos:column="22"/></name><argument_list pos:line="28" pos:column="22">(<argument><expr><name pos:line="28" pos:column="23">sd<pos:position pos:line="28" pos:column="25"/></name></expr></argument>)<pos:position pos:line="28" pos:column="26"/></argument_list></call></expr>;<pos:position pos:line="28" pos:column="27"/></expr_stmt>
                <return pos:line="29" pos:column="17">return <expr><call><name pos:line="29" pos:column="24">log_scripterror<pos:position pos:line="29" pos:column="39"/></name><argument_list pos:line="29" pos:column="39">(<argument><expr><name pos:line="29" pos:column="40">r<pos:position pos:line="29" pos:column="41"/></name></expr></argument>, <argument><expr><name pos:line="29" pos:column="43">conf<pos:position pos:line="29" pos:column="47"/></name></expr></argument>, <argument><expr><name pos:line="29" pos:column="49">HTTP_SERVICE_UNAVAILABLE<pos:position pos:line="29" pos:column="73"/></name></expr></argument>, <argument><expr><name pos:line="29" pos:column="75">errno<pos:position pos:line="29" pos:column="80"/></name></expr></argument>, <argument><expr><call><name pos:line="29" pos:column="82">APLOGNO<pos:position pos:line="29" pos:column="89"/></name><argument_list pos:line="29" pos:column="89">(<argument><expr><literal type="number" pos:line="29" pos:column="90">01257<pos:position pos:line="29" pos:column="95"/></literal></expr></argument>)<pos:position pos:line="29" pos:column="96"/></argument_list></call>
                                       <literal type="string" pos:line="30" pos:column="40">"unable to connect to cgi daemon after multiple tries"<pos:position pos:line="30" pos:column="94"/></literal></expr></argument>)<pos:position pos:line="30" pos:column="95"/></argument_list></call></expr>;<pos:position pos:line="30" pos:column="96"/></return>
            }<pos:position pos:line="31" pos:column="14"/></block></else></if>
        }<pos:position pos:line="32" pos:column="10"/></block></then>
        <else pos:line="33" pos:column="9">else <block pos:line="33" pos:column="14">{
            <expr_stmt><expr><call><name pos:line="34" pos:column="13">apr_pool_cleanup_register<pos:position pos:line="34" pos:column="38"/></name><argument_list pos:line="34" pos:column="38">(<argument><expr><name><name pos:line="34" pos:column="39">r<pos:position pos:line="34" pos:column="40"/></name><operator pos:line="34" pos:column="40">-&gt;<pos:position pos:line="34" pos:column="45"/></operator><name pos:line="34" pos:column="42">pool<pos:position pos:line="34" pos:column="46"/></name></name></expr></argument>, <argument><expr><operator pos:line="34" pos:column="48">(<pos:position pos:line="34" pos:column="49"/></operator><name pos:line="34" pos:column="49">void<pos:position pos:line="34" pos:column="53"/></name> <operator pos:line="34" pos:column="54">*<pos:position pos:line="34" pos:column="55"/></operator><operator pos:line="34" pos:column="55">)<pos:position pos:line="34" pos:column="56"/></operator><operator pos:line="34" pos:column="56">(<pos:position pos:line="34" pos:column="57"/></operator><operator pos:line="34" pos:column="57">(<pos:position pos:line="34" pos:column="58"/></operator><name pos:line="34" pos:column="58">long<pos:position pos:line="34" pos:column="62"/></name><operator pos:line="34" pos:column="62">)<pos:position pos:line="34" pos:column="63"/></operator><name pos:line="34" pos:column="63">sd<pos:position pos:line="34" pos:column="65"/></name><operator pos:line="34" pos:column="65">)<pos:position pos:line="34" pos:column="66"/></operator></expr></argument>,
                                      <argument><expr><name pos:line="35" pos:column="39">close_unix_socket<pos:position pos:line="35" pos:column="56"/></name></expr></argument>, <argument><expr><name pos:line="35" pos:column="58">apr_pool_cleanup_null<pos:position pos:line="35" pos:column="79"/></name></expr></argument>)<pos:position pos:line="35" pos:column="80"/></argument_list></call></expr>;<pos:position pos:line="35" pos:column="81"/></expr_stmt>
            <break pos:line="36" pos:column="13">break;<pos:position pos:line="36" pos:column="19"/></break> <comment type="block" pos:line="36" pos:column="20">/* we got connected! */</comment>
        }<pos:position pos:line="37" pos:column="10"/></block></else></if>
        <comment type="block" pos:line="38" pos:column="9">/* gotta try again, but make sure the cgid daemon is still around */</comment>
        <if pos:line="39" pos:column="9">if <condition pos:line="39" pos:column="12">(<expr><call><name pos:line="39" pos:column="13">kill<pos:position pos:line="39" pos:column="17"/></name><argument_list pos:line="39" pos:column="17">(<argument><expr><name pos:line="39" pos:column="18">daemon_pid<pos:position pos:line="39" pos:column="28"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="39" pos:column="30">0<pos:position pos:line="39" pos:column="31"/></literal></expr></argument>)<pos:position pos:line="39" pos:column="32"/></argument_list></call> <operator pos:line="39" pos:column="33">!=<pos:position pos:line="39" pos:column="35"/></operator> <literal type="number" pos:line="39" pos:column="36">0<pos:position pos:line="39" pos:column="37"/></literal></expr>)<pos:position pos:line="39" pos:column="38"/></condition><then pos:line="39" pos:column="38"> <block pos:line="39" pos:column="39">{
            <return pos:line="40" pos:column="13">return <expr><call><name pos:line="40" pos:column="20">log_scripterror<pos:position pos:line="40" pos:column="35"/></name><argument_list pos:line="40" pos:column="35">(<argument><expr><name pos:line="40" pos:column="36">r<pos:position pos:line="40" pos:column="37"/></name></expr></argument>, <argument><expr><name pos:line="40" pos:column="39">conf<pos:position pos:line="40" pos:column="43"/></name></expr></argument>, <argument><expr><name pos:line="40" pos:column="45">HTTP_SERVICE_UNAVAILABLE<pos:position pos:line="40" pos:column="69"/></name></expr></argument>, <argument><expr><name pos:line="40" pos:column="71">errno<pos:position pos:line="40" pos:column="76"/></name></expr></argument>, <argument><expr><call><name pos:line="40" pos:column="78">APLOGNO<pos:position pos:line="40" pos:column="85"/></name><argument_list pos:line="40" pos:column="85">(<argument><expr><literal type="number" pos:line="40" pos:column="86">01258<pos:position pos:line="40" pos:column="91"/></literal></expr></argument>)<pos:position pos:line="40" pos:column="92"/></argument_list></call>
                                   <literal type="string" pos:line="41" pos:column="36">"cgid daemon is gone; is Apache terminating?"<pos:position pos:line="41" pos:column="81"/></literal></expr></argument>)<pos:position pos:line="41" pos:column="82"/></argument_list></call></expr>;<pos:position pos:line="41" pos:column="83"/></return>
        }<pos:position pos:line="42" pos:column="10"/></block></then></if>
    }<pos:position pos:line="43" pos:column="6"/></block></while>
    <expr_stmt><expr><operator pos:line="44" pos:column="5">*<pos:position pos:line="44" pos:column="6"/></operator><name pos:line="44" pos:column="6">sdptr<pos:position pos:line="44" pos:column="11"/></name> <operator pos:line="44" pos:column="12">=<pos:position pos:line="44" pos:column="13"/></operator> <name pos:line="44" pos:column="14">sd<pos:position pos:line="44" pos:column="16"/></name></expr>;<pos:position pos:line="44" pos:column="17"/></expr_stmt>
    <return pos:line="45" pos:column="5">return <expr><name pos:line="45" pos:column="12">OK<pos:position pos:line="45" pos:column="14"/></name></expr>;<pos:position pos:line="45" pos:column="15"/></return>
}<pos:position pos:line="46" pos:column="2"/></block></function></unit>

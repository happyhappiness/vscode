<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/httpd/gumtree/httpd_repos_function_2074_httpd-2.4.10.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">int<pos:position pos:line="1" pos:column="11"/></name></type> <name pos:line="1" pos:column="12">ap_proxy_wstunnel_request<pos:position pos:line="1" pos:column="37"/></name><parameter_list pos:line="1" pos:column="37">(<parameter><decl><type><name pos:line="1" pos:column="38">apr_pool_t<pos:position pos:line="1" pos:column="48"/></name> <modifier pos:line="1" pos:column="49">*<pos:position pos:line="1" pos:column="50"/></modifier></type><name pos:line="1" pos:column="50">p<pos:position pos:line="1" pos:column="51"/></name></decl></parameter>, <parameter><decl><type><name pos:line="1" pos:column="53">request_rec<pos:position pos:line="1" pos:column="64"/></name> <modifier pos:line="1" pos:column="65">*<pos:position pos:line="1" pos:column="66"/></modifier></type><name pos:line="1" pos:column="66">r<pos:position pos:line="1" pos:column="67"/></name></decl></parameter>,
                                <parameter><decl><type><name pos:line="2" pos:column="33">proxy_conn_rec<pos:position pos:line="2" pos:column="47"/></name> <modifier pos:line="2" pos:column="48">*<pos:position pos:line="2" pos:column="49"/></modifier></type><name pos:line="2" pos:column="49">conn<pos:position pos:line="2" pos:column="53"/></name></decl></parameter>,
                                <parameter><decl><type><name pos:line="3" pos:column="33">proxy_worker<pos:position pos:line="3" pos:column="45"/></name> <modifier pos:line="3" pos:column="46">*<pos:position pos:line="3" pos:column="47"/></modifier></type><name pos:line="3" pos:column="47">worker<pos:position pos:line="3" pos:column="53"/></name></decl></parameter>,
                                <parameter><decl><type><name pos:line="4" pos:column="33">proxy_server_conf<pos:position pos:line="4" pos:column="50"/></name> <modifier pos:line="4" pos:column="51">*<pos:position pos:line="4" pos:column="52"/></modifier></type><name pos:line="4" pos:column="52">conf<pos:position pos:line="4" pos:column="56"/></name></decl></parameter>,
                                <parameter><decl><type><name pos:line="5" pos:column="33">apr_uri_t<pos:position pos:line="5" pos:column="42"/></name> <modifier pos:line="5" pos:column="43">*<pos:position pos:line="5" pos:column="44"/></modifier></type><name pos:line="5" pos:column="44">uri<pos:position pos:line="5" pos:column="47"/></name></decl></parameter>,
                                <parameter><decl><type><name pos:line="6" pos:column="33">char<pos:position pos:line="6" pos:column="37"/></name> <modifier pos:line="6" pos:column="38">*<pos:position pos:line="6" pos:column="39"/></modifier></type><name pos:line="6" pos:column="39">url<pos:position pos:line="6" pos:column="42"/></name></decl></parameter>, <parameter><decl><type><name pos:line="6" pos:column="44">char<pos:position pos:line="6" pos:column="48"/></name> <modifier pos:line="6" pos:column="49">*<pos:position pos:line="6" pos:column="50"/></modifier></type><name pos:line="6" pos:column="50">server_portstr<pos:position pos:line="6" pos:column="64"/></name></decl></parameter>)<pos:position pos:line="6" pos:column="65"/></parameter_list>
<block pos:line="7" pos:column="1">{
    <decl_stmt><decl><type><name pos:line="8" pos:column="5">apr_status_t<pos:position pos:line="8" pos:column="17"/></name></type> <name pos:line="8" pos:column="18">rv<pos:position pos:line="8" pos:column="20"/></name> <init pos:line="8" pos:column="21">= <expr><name pos:line="8" pos:column="23">APR_SUCCESS<pos:position pos:line="8" pos:column="34"/></name></expr></init></decl>;<pos:position pos:line="8" pos:column="35"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="9" pos:column="5">apr_pollset_t<pos:position pos:line="9" pos:column="18"/></name> <modifier pos:line="9" pos:column="19">*<pos:position pos:line="9" pos:column="20"/></modifier></type><name pos:line="9" pos:column="20">pollset<pos:position pos:line="9" pos:column="27"/></name></decl>;<pos:position pos:line="9" pos:column="28"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="10" pos:column="5">apr_pollfd_t<pos:position pos:line="10" pos:column="17"/></name></type> <name pos:line="10" pos:column="18">pollfd<pos:position pos:line="10" pos:column="24"/></name></decl>;<pos:position pos:line="10" pos:column="25"/></decl_stmt>
    <decl_stmt><decl><type><specifier pos:line="11" pos:column="5">const<pos:position pos:line="11" pos:column="10"/></specifier> <name pos:line="11" pos:column="11">apr_pollfd_t<pos:position pos:line="11" pos:column="23"/></name> <modifier pos:line="11" pos:column="24">*<pos:position pos:line="11" pos:column="25"/></modifier></type><name pos:line="11" pos:column="25">signalled<pos:position pos:line="11" pos:column="34"/></name></decl>;<pos:position pos:line="11" pos:column="35"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="12" pos:column="5">apr_int32_t<pos:position pos:line="12" pos:column="16"/></name></type> <name pos:line="12" pos:column="17">pollcnt<pos:position pos:line="12" pos:column="24"/></name></decl>, <decl><type ref="prev"/><name pos:line="12" pos:column="26">pi<pos:position pos:line="12" pos:column="28"/></name></decl>;<pos:position pos:line="12" pos:column="29"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="13" pos:column="5">apr_int16_t<pos:position pos:line="13" pos:column="16"/></name></type> <name pos:line="13" pos:column="17">pollevent<pos:position pos:line="13" pos:column="26"/></name></decl>;<pos:position pos:line="13" pos:column="27"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="14" pos:column="5">conn_rec<pos:position pos:line="14" pos:column="13"/></name> <modifier pos:line="14" pos:column="14">*<pos:position pos:line="14" pos:column="15"/></modifier></type><name pos:line="14" pos:column="15">c<pos:position pos:line="14" pos:column="16"/></name> <init pos:line="14" pos:column="17">= <expr><name><name pos:line="14" pos:column="19">r<pos:position pos:line="14" pos:column="20"/></name><operator pos:line="14" pos:column="20">-&gt;<pos:position pos:line="14" pos:column="25"/></operator><name pos:line="14" pos:column="22">connection<pos:position pos:line="14" pos:column="32"/></name></name></expr></init></decl>;<pos:position pos:line="14" pos:column="33"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="15" pos:column="5">apr_socket_t<pos:position pos:line="15" pos:column="17"/></name> <modifier pos:line="15" pos:column="18">*<pos:position pos:line="15" pos:column="19"/></modifier></type><name pos:line="15" pos:column="19">sock<pos:position pos:line="15" pos:column="23"/></name> <init pos:line="15" pos:column="24">= <expr><name><name pos:line="15" pos:column="26">conn<pos:position pos:line="15" pos:column="30"/></name><operator pos:line="15" pos:column="30">-&gt;<pos:position pos:line="15" pos:column="35"/></operator><name pos:line="15" pos:column="32">sock<pos:position pos:line="15" pos:column="36"/></name></name></expr></init></decl>;<pos:position pos:line="15" pos:column="37"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="16" pos:column="5">conn_rec<pos:position pos:line="16" pos:column="13"/></name> <modifier pos:line="16" pos:column="14">*<pos:position pos:line="16" pos:column="15"/></modifier></type><name pos:line="16" pos:column="15">backconn<pos:position pos:line="16" pos:column="23"/></name> <init pos:line="16" pos:column="24">= <expr><name><name pos:line="16" pos:column="26">conn<pos:position pos:line="16" pos:column="30"/></name><operator pos:line="16" pos:column="30">-&gt;<pos:position pos:line="16" pos:column="35"/></operator><name pos:line="16" pos:column="32">connection<pos:position pos:line="16" pos:column="42"/></name></name></expr></init></decl>;<pos:position pos:line="16" pos:column="43"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="17" pos:column="5">char<pos:position pos:line="17" pos:column="9"/></name> <modifier pos:line="17" pos:column="10">*<pos:position pos:line="17" pos:column="11"/></modifier></type><name pos:line="17" pos:column="11">buf<pos:position pos:line="17" pos:column="14"/></name></decl>;<pos:position pos:line="17" pos:column="15"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="18" pos:column="5">apr_bucket_brigade<pos:position pos:line="18" pos:column="23"/></name> <modifier pos:line="18" pos:column="24">*<pos:position pos:line="18" pos:column="25"/></modifier></type><name pos:line="18" pos:column="25">header_brigade<pos:position pos:line="18" pos:column="39"/></name></decl>;<pos:position pos:line="18" pos:column="40"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="19" pos:column="5">apr_bucket<pos:position pos:line="19" pos:column="15"/></name> <modifier pos:line="19" pos:column="16">*<pos:position pos:line="19" pos:column="17"/></modifier></type><name pos:line="19" pos:column="17">e<pos:position pos:line="19" pos:column="18"/></name></decl>;<pos:position pos:line="19" pos:column="19"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="20" pos:column="5">char<pos:position pos:line="20" pos:column="9"/></name> <modifier pos:line="20" pos:column="10">*<pos:position pos:line="20" pos:column="11"/></modifier></type><name pos:line="20" pos:column="11">old_cl_val<pos:position pos:line="20" pos:column="21"/></name> <init pos:line="20" pos:column="22">= <expr><name pos:line="20" pos:column="24">NULL<pos:position pos:line="20" pos:column="28"/></name></expr></init></decl>;<pos:position pos:line="20" pos:column="29"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="21" pos:column="5">char<pos:position pos:line="21" pos:column="9"/></name> <modifier pos:line="21" pos:column="10">*<pos:position pos:line="21" pos:column="11"/></modifier></type><name pos:line="21" pos:column="11">old_te_val<pos:position pos:line="21" pos:column="21"/></name> <init pos:line="21" pos:column="22">= <expr><name pos:line="21" pos:column="24">NULL<pos:position pos:line="21" pos:column="28"/></name></expr></init></decl>;<pos:position pos:line="21" pos:column="29"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="22" pos:column="5">apr_bucket_brigade<pos:position pos:line="22" pos:column="23"/></name> <modifier pos:line="22" pos:column="24">*<pos:position pos:line="22" pos:column="25"/></modifier></type><name pos:line="22" pos:column="25">bb<pos:position pos:line="22" pos:column="27"/></name> <init pos:line="22" pos:column="28">= <expr><call><name pos:line="22" pos:column="30">apr_brigade_create<pos:position pos:line="22" pos:column="48"/></name><argument_list pos:line="22" pos:column="48">(<argument><expr><name pos:line="22" pos:column="49">p<pos:position pos:line="22" pos:column="50"/></name></expr></argument>, <argument><expr><name><name pos:line="22" pos:column="52">c<pos:position pos:line="22" pos:column="53"/></name><operator pos:line="22" pos:column="53">-&gt;<pos:position pos:line="22" pos:column="58"/></operator><name pos:line="22" pos:column="55">bucket_alloc<pos:position pos:line="22" pos:column="67"/></name></name></expr></argument>)<pos:position pos:line="22" pos:column="68"/></argument_list></call></expr></init></decl>;<pos:position pos:line="22" pos:column="69"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="23" pos:column="5">apr_socket_t<pos:position pos:line="23" pos:column="17"/></name> <modifier pos:line="23" pos:column="18">*<pos:position pos:line="23" pos:column="19"/></modifier></type><name pos:line="23" pos:column="19">client_socket<pos:position pos:line="23" pos:column="32"/></name> <init pos:line="23" pos:column="33">= <expr><call><name pos:line="23" pos:column="35">ap_get_conn_socket<pos:position pos:line="23" pos:column="53"/></name><argument_list pos:line="23" pos:column="53">(<argument><expr><name pos:line="23" pos:column="54">c<pos:position pos:line="23" pos:column="55"/></name></expr></argument>)<pos:position pos:line="23" pos:column="56"/></argument_list></call></expr></init></decl>;<pos:position pos:line="23" pos:column="57"/></decl_stmt>

    <expr_stmt><expr><name pos:line="25" pos:column="5">header_brigade<pos:position pos:line="25" pos:column="19"/></name> <operator pos:line="25" pos:column="20">=<pos:position pos:line="25" pos:column="21"/></operator> <call><name pos:line="25" pos:column="22">apr_brigade_create<pos:position pos:line="25" pos:column="40"/></name><argument_list pos:line="25" pos:column="40">(<argument><expr><name pos:line="25" pos:column="41">p<pos:position pos:line="25" pos:column="42"/></name></expr></argument>, <argument><expr><name><name pos:line="25" pos:column="44">backconn<pos:position pos:line="25" pos:column="52"/></name><operator pos:line="25" pos:column="52">-&gt;<pos:position pos:line="25" pos:column="57"/></operator><name pos:line="25" pos:column="54">bucket_alloc<pos:position pos:line="25" pos:column="66"/></name></name></expr></argument>)<pos:position pos:line="25" pos:column="67"/></argument_list></call></expr>;<pos:position pos:line="25" pos:column="68"/></expr_stmt>

    <expr_stmt><expr><call><name pos:line="27" pos:column="5">ap_log_rerror<pos:position pos:line="27" pos:column="18"/></name><argument_list pos:line="27" pos:column="18">(<argument><expr><name pos:line="27" pos:column="19">APLOG_MARK<pos:position pos:line="27" pos:column="29"/></name></expr></argument>, <argument><expr><name pos:line="27" pos:column="31">APLOG_TRACE2<pos:position pos:line="27" pos:column="43"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="27" pos:column="45">0<pos:position pos:line="27" pos:column="46"/></literal></expr></argument>, <argument><expr><name pos:line="27" pos:column="48">r<pos:position pos:line="27" pos:column="49"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="27" pos:column="51">"sending request"<pos:position pos:line="27" pos:column="68"/></literal></expr></argument>)<pos:position pos:line="27" pos:column="69"/></argument_list></call></expr>;<pos:position pos:line="27" pos:column="70"/></expr_stmt>

    <expr_stmt><expr><name pos:line="29" pos:column="5">rv<pos:position pos:line="29" pos:column="7"/></name> <operator pos:line="29" pos:column="8">=<pos:position pos:line="29" pos:column="9"/></operator> <call><name pos:line="29" pos:column="10">ap_proxy_create_hdrbrgd<pos:position pos:line="29" pos:column="33"/></name><argument_list pos:line="29" pos:column="33">(<argument><expr><name pos:line="29" pos:column="34">p<pos:position pos:line="29" pos:column="35"/></name></expr></argument>, <argument><expr><name pos:line="29" pos:column="37">header_brigade<pos:position pos:line="29" pos:column="51"/></name></expr></argument>, <argument><expr><name pos:line="29" pos:column="53">r<pos:position pos:line="29" pos:column="54"/></name></expr></argument>, <argument><expr><name pos:line="29" pos:column="56">conn<pos:position pos:line="29" pos:column="60"/></name></expr></argument>,
                                 <argument><expr><name pos:line="30" pos:column="34">worker<pos:position pos:line="30" pos:column="40"/></name></expr></argument>, <argument><expr><name pos:line="30" pos:column="42">conf<pos:position pos:line="30" pos:column="46"/></name></expr></argument>, <argument><expr><name pos:line="30" pos:column="48">uri<pos:position pos:line="30" pos:column="51"/></name></expr></argument>, <argument><expr><name pos:line="30" pos:column="53">url<pos:position pos:line="30" pos:column="56"/></name></expr></argument>, <argument><expr><name pos:line="30" pos:column="58">server_portstr<pos:position pos:line="30" pos:column="72"/></name></expr></argument>,
                                 <argument><expr><operator pos:line="31" pos:column="34">&amp;<pos:position pos:line="31" pos:column="39"/></operator><name pos:line="31" pos:column="35">old_cl_val<pos:position pos:line="31" pos:column="45"/></name></expr></argument>, <argument><expr><operator pos:line="31" pos:column="47">&amp;<pos:position pos:line="31" pos:column="52"/></operator><name pos:line="31" pos:column="48">old_te_val<pos:position pos:line="31" pos:column="58"/></name></expr></argument>)<pos:position pos:line="31" pos:column="59"/></argument_list></call></expr>;<pos:position pos:line="31" pos:column="60"/></expr_stmt>
    <if pos:line="32" pos:column="5">if <condition pos:line="32" pos:column="8">(<expr><name pos:line="32" pos:column="9">rv<pos:position pos:line="32" pos:column="11"/></name> <operator pos:line="32" pos:column="12">!=<pos:position pos:line="32" pos:column="14"/></operator> <name pos:line="32" pos:column="15">OK<pos:position pos:line="32" pos:column="17"/></name></expr>)<pos:position pos:line="32" pos:column="18"/></condition><then pos:line="32" pos:column="18"> <block pos:line="32" pos:column="19">{
        <return pos:line="33" pos:column="9">return <expr><name pos:line="33" pos:column="16">rv<pos:position pos:line="33" pos:column="18"/></name></expr>;<pos:position pos:line="33" pos:column="19"/></return>
    }<pos:position pos:line="34" pos:column="6"/></block></then></if>

    <expr_stmt><expr><name pos:line="36" pos:column="5">buf<pos:position pos:line="36" pos:column="8"/></name> <operator pos:line="36" pos:column="9">=<pos:position pos:line="36" pos:column="10"/></operator> <call><name pos:line="36" pos:column="11">apr_pstrcat<pos:position pos:line="36" pos:column="22"/></name><argument_list pos:line="36" pos:column="22">(<argument><expr><name pos:line="36" pos:column="23">p<pos:position pos:line="36" pos:column="24"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="36" pos:column="26">"Upgrade: WebSocket"<pos:position pos:line="36" pos:column="46"/></literal></expr></argument>, <argument><expr><name pos:line="36" pos:column="48">CRLF<pos:position pos:line="36" pos:column="52"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="36" pos:column="54">"Connection: Upgrade"<pos:position pos:line="36" pos:column="75"/></literal></expr></argument>, <argument><expr><name pos:line="36" pos:column="77">CRLF<pos:position pos:line="36" pos:column="81"/></name></expr></argument>, <argument><expr><name pos:line="36" pos:column="83">CRLF<pos:position pos:line="36" pos:column="87"/></name></expr></argument>, <argument><expr><name pos:line="36" pos:column="89">NULL<pos:position pos:line="36" pos:column="93"/></name></expr></argument>)<pos:position pos:line="36" pos:column="94"/></argument_list></call></expr>;<pos:position pos:line="36" pos:column="95"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="37" pos:column="5">ap_xlate_proto_to_ascii<pos:position pos:line="37" pos:column="28"/></name><argument_list pos:line="37" pos:column="28">(<argument><expr><name pos:line="37" pos:column="29">buf<pos:position pos:line="37" pos:column="32"/></name></expr></argument>, <argument><expr><call><name pos:line="37" pos:column="34">strlen<pos:position pos:line="37" pos:column="40"/></name><argument_list pos:line="37" pos:column="40">(<argument><expr><name pos:line="37" pos:column="41">buf<pos:position pos:line="37" pos:column="44"/></name></expr></argument>)<pos:position pos:line="37" pos:column="45"/></argument_list></call></expr></argument>)<pos:position pos:line="37" pos:column="46"/></argument_list></call></expr>;<pos:position pos:line="37" pos:column="47"/></expr_stmt>
    <expr_stmt><expr><name pos:line="38" pos:column="5">e<pos:position pos:line="38" pos:column="6"/></name> <operator pos:line="38" pos:column="7">=<pos:position pos:line="38" pos:column="8"/></operator> <call><name pos:line="38" pos:column="9">apr_bucket_pool_create<pos:position pos:line="38" pos:column="31"/></name><argument_list pos:line="38" pos:column="31">(<argument><expr><name pos:line="38" pos:column="32">buf<pos:position pos:line="38" pos:column="35"/></name></expr></argument>, <argument><expr><call><name pos:line="38" pos:column="37">strlen<pos:position pos:line="38" pos:column="43"/></name><argument_list pos:line="38" pos:column="43">(<argument><expr><name pos:line="38" pos:column="44">buf<pos:position pos:line="38" pos:column="47"/></name></expr></argument>)<pos:position pos:line="38" pos:column="48"/></argument_list></call></expr></argument>, <argument><expr><name pos:line="38" pos:column="50">p<pos:position pos:line="38" pos:column="51"/></name></expr></argument>, <argument><expr><name><name pos:line="38" pos:column="53">c<pos:position pos:line="38" pos:column="54"/></name><operator pos:line="38" pos:column="54">-&gt;<pos:position pos:line="38" pos:column="59"/></operator><name pos:line="38" pos:column="56">bucket_alloc<pos:position pos:line="38" pos:column="68"/></name></name></expr></argument>)<pos:position pos:line="38" pos:column="69"/></argument_list></call></expr>;<pos:position pos:line="38" pos:column="70"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="39" pos:column="5">APR_BRIGADE_INSERT_TAIL<pos:position pos:line="39" pos:column="28"/></name><argument_list pos:line="39" pos:column="28">(<argument><expr><name pos:line="39" pos:column="29">header_brigade<pos:position pos:line="39" pos:column="43"/></name></expr></argument>, <argument><expr><name pos:line="39" pos:column="45">e<pos:position pos:line="39" pos:column="46"/></name></expr></argument>)<pos:position pos:line="39" pos:column="47"/></argument_list></call></expr>;<pos:position pos:line="39" pos:column="48"/></expr_stmt>

    <if pos:line="41" pos:column="5">if <condition pos:line="41" pos:column="8">(<expr><operator pos:line="41" pos:column="9">(<pos:position pos:line="41" pos:column="10"/></operator><name pos:line="41" pos:column="10">rv<pos:position pos:line="41" pos:column="12"/></name> <operator pos:line="41" pos:column="13">=<pos:position pos:line="41" pos:column="14"/></operator> <call><name pos:line="41" pos:column="15">ap_proxy_pass_brigade<pos:position pos:line="41" pos:column="36"/></name><argument_list pos:line="41" pos:column="36">(<argument><expr><name><name pos:line="41" pos:column="37">c<pos:position pos:line="41" pos:column="38"/></name><operator pos:line="41" pos:column="38">-&gt;<pos:position pos:line="41" pos:column="43"/></operator><name pos:line="41" pos:column="40">bucket_alloc<pos:position pos:line="41" pos:column="52"/></name></name></expr></argument>, <argument><expr><name pos:line="41" pos:column="54">r<pos:position pos:line="41" pos:column="55"/></name></expr></argument>, <argument><expr><name pos:line="41" pos:column="57">conn<pos:position pos:line="41" pos:column="61"/></name></expr></argument>, <argument><expr><name pos:line="41" pos:column="63">backconn<pos:position pos:line="41" pos:column="71"/></name></expr></argument>,
                                    <argument><expr><name pos:line="42" pos:column="37">header_brigade<pos:position pos:line="42" pos:column="51"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="42" pos:column="53">1<pos:position pos:line="42" pos:column="54"/></literal></expr></argument>)<pos:position pos:line="42" pos:column="55"/></argument_list></call><operator pos:line="42" pos:column="55">)<pos:position pos:line="42" pos:column="56"/></operator> <operator pos:line="42" pos:column="57">!=<pos:position pos:line="42" pos:column="59"/></operator> <name pos:line="42" pos:column="60">OK<pos:position pos:line="42" pos:column="62"/></name></expr>)<pos:position pos:line="42" pos:column="63"/></condition><then pos:line="42" pos:column="63">
        <block type="pseudo"><return pos:line="43" pos:column="9">return <expr><name pos:line="43" pos:column="16">rv<pos:position pos:line="43" pos:column="18"/></name></expr>;<pos:position pos:line="43" pos:column="19"/></return></block></then></if>

    <expr_stmt><expr><call><name pos:line="45" pos:column="5">ap_log_rerror<pos:position pos:line="45" pos:column="18"/></name><argument_list pos:line="45" pos:column="18">(<argument><expr><name pos:line="45" pos:column="19">APLOG_MARK<pos:position pos:line="45" pos:column="29"/></name></expr></argument>, <argument><expr><name pos:line="45" pos:column="31">APLOG_TRACE2<pos:position pos:line="45" pos:column="43"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="45" pos:column="45">0<pos:position pos:line="45" pos:column="46"/></literal></expr></argument>, <argument><expr><name pos:line="45" pos:column="48">r<pos:position pos:line="45" pos:column="49"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="45" pos:column="51">"setting up poll()"<pos:position pos:line="45" pos:column="70"/></literal></expr></argument>)<pos:position pos:line="45" pos:column="71"/></argument_list></call></expr>;<pos:position pos:line="45" pos:column="72"/></expr_stmt>

    <if pos:line="47" pos:column="5">if <condition pos:line="47" pos:column="8">(<expr><operator pos:line="47" pos:column="9">(<pos:position pos:line="47" pos:column="10"/></operator><name pos:line="47" pos:column="10">rv<pos:position pos:line="47" pos:column="12"/></name> <operator pos:line="47" pos:column="13">=<pos:position pos:line="47" pos:column="14"/></operator> <call><name pos:line="47" pos:column="15">apr_pollset_create<pos:position pos:line="47" pos:column="33"/></name><argument_list pos:line="47" pos:column="33">(<argument><expr><operator pos:line="47" pos:column="34">&amp;<pos:position pos:line="47" pos:column="39"/></operator><name pos:line="47" pos:column="35">pollset<pos:position pos:line="47" pos:column="42"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="47" pos:column="44">2<pos:position pos:line="47" pos:column="45"/></literal></expr></argument>, <argument><expr><name pos:line="47" pos:column="47">p<pos:position pos:line="47" pos:column="48"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="47" pos:column="50">0<pos:position pos:line="47" pos:column="51"/></literal></expr></argument>)<pos:position pos:line="47" pos:column="52"/></argument_list></call><operator pos:line="47" pos:column="52">)<pos:position pos:line="47" pos:column="53"/></operator> <operator pos:line="47" pos:column="54">!=<pos:position pos:line="47" pos:column="56"/></operator> <name pos:line="47" pos:column="57">APR_SUCCESS<pos:position pos:line="47" pos:column="68"/></name></expr>)<pos:position pos:line="47" pos:column="69"/></condition><then pos:line="47" pos:column="69"> <block pos:line="47" pos:column="70">{
        <expr_stmt><expr><call><name pos:line="48" pos:column="9">ap_log_rerror<pos:position pos:line="48" pos:column="22"/></name><argument_list pos:line="48" pos:column="22">(<argument><expr><name pos:line="48" pos:column="23">APLOG_MARK<pos:position pos:line="48" pos:column="33"/></name></expr></argument>, <argument><expr><name pos:line="48" pos:column="35">APLOG_ERR<pos:position pos:line="48" pos:column="44"/></name></expr></argument>, <argument><expr><name pos:line="48" pos:column="46">rv<pos:position pos:line="48" pos:column="48"/></name></expr></argument>, <argument><expr><name pos:line="48" pos:column="50">r<pos:position pos:line="48" pos:column="51"/></name></expr></argument>, <argument><expr><call><name pos:line="48" pos:column="53">APLOGNO<pos:position pos:line="48" pos:column="60"/></name><argument_list pos:line="48" pos:column="60">(<argument><expr><literal type="number" pos:line="48" pos:column="61">02443<pos:position pos:line="48" pos:column="66"/></literal></expr></argument>)<pos:position pos:line="48" pos:column="67"/></argument_list></call>
                      <literal type="string" pos:line="49" pos:column="23">"error apr_pollset_create()"<pos:position pos:line="49" pos:column="51"/></literal></expr></argument>)<pos:position pos:line="49" pos:column="52"/></argument_list></call></expr>;<pos:position pos:line="49" pos:column="53"/></expr_stmt>
        <return pos:line="50" pos:column="9">return <expr><name pos:line="50" pos:column="16">HTTP_INTERNAL_SERVER_ERROR<pos:position pos:line="50" pos:column="42"/></name></expr>;<pos:position pos:line="50" pos:column="43"/></return>
    }<pos:position pos:line="51" pos:column="6"/></block></then></if>

<cpp:if pos:line="53" pos:column="1">#<cpp:directive pos:line="53" pos:column="2">if<pos:position pos:line="53" pos:column="4"/></cpp:directive> <expr><literal type="number" pos:line="53" pos:column="5">0<pos:position pos:line="53" pos:column="6"/></literal></expr></cpp:if>
    apr_socket_opt_set(sock, APR_SO_NONBLOCK, 1);
    apr_socket_opt_set(sock, APR_SO_KEEPALIVE, 1);
    apr_socket_opt_set(client_socket, APR_SO_NONBLOCK, 1);
    apr_socket_opt_set(client_socket, APR_SO_KEEPALIVE, 1);
<cpp:endif pos:line="58" pos:column="1">#<cpp:directive pos:line="58" pos:column="2">endif<pos:position pos:line="58" pos:column="7"/></cpp:directive></cpp:endif>

    <expr_stmt><expr><name><name pos:line="60" pos:column="5">pollfd<pos:position pos:line="60" pos:column="11"/></name><operator pos:line="60" pos:column="11">.<pos:position pos:line="60" pos:column="12"/></operator><name pos:line="60" pos:column="12">p<pos:position pos:line="60" pos:column="13"/></name></name> <operator pos:line="60" pos:column="14">=<pos:position pos:line="60" pos:column="15"/></operator> <name pos:line="60" pos:column="16">p<pos:position pos:line="60" pos:column="17"/></name></expr>;<pos:position pos:line="60" pos:column="18"/></expr_stmt>
    <expr_stmt><expr><name><name pos:line="61" pos:column="5">pollfd<pos:position pos:line="61" pos:column="11"/></name><operator pos:line="61" pos:column="11">.<pos:position pos:line="61" pos:column="12"/></operator><name pos:line="61" pos:column="12">desc_type<pos:position pos:line="61" pos:column="21"/></name></name> <operator pos:line="61" pos:column="22">=<pos:position pos:line="61" pos:column="23"/></operator> <name pos:line="61" pos:column="24">APR_POLL_SOCKET<pos:position pos:line="61" pos:column="39"/></name></expr>;<pos:position pos:line="61" pos:column="40"/></expr_stmt>
    <expr_stmt><expr><name><name pos:line="62" pos:column="5">pollfd<pos:position pos:line="62" pos:column="11"/></name><operator pos:line="62" pos:column="11">.<pos:position pos:line="62" pos:column="12"/></operator><name pos:line="62" pos:column="12">reqevents<pos:position pos:line="62" pos:column="21"/></name></name> <operator pos:line="62" pos:column="22">=<pos:position pos:line="62" pos:column="23"/></operator> <name pos:line="62" pos:column="24">APR_POLLIN<pos:position pos:line="62" pos:column="34"/></name> <operator pos:line="62" pos:column="35">|<pos:position pos:line="62" pos:column="36"/></operator> <name pos:line="62" pos:column="37">APR_POLLHUP<pos:position pos:line="62" pos:column="48"/></name></expr>;<pos:position pos:line="62" pos:column="49"/></expr_stmt>
    <expr_stmt><expr><name><name pos:line="63" pos:column="5">pollfd<pos:position pos:line="63" pos:column="11"/></name><operator pos:line="63" pos:column="11">.<pos:position pos:line="63" pos:column="12"/></operator><name pos:line="63" pos:column="12">desc<pos:position pos:line="63" pos:column="16"/></name><operator pos:line="63" pos:column="16">.<pos:position pos:line="63" pos:column="17"/></operator><name pos:line="63" pos:column="17">s<pos:position pos:line="63" pos:column="18"/></name></name> <operator pos:line="63" pos:column="19">=<pos:position pos:line="63" pos:column="20"/></operator> <name pos:line="63" pos:column="21">sock<pos:position pos:line="63" pos:column="25"/></name></expr>;<pos:position pos:line="63" pos:column="26"/></expr_stmt>
    <expr_stmt><expr><name><name pos:line="64" pos:column="5">pollfd<pos:position pos:line="64" pos:column="11"/></name><operator pos:line="64" pos:column="11">.<pos:position pos:line="64" pos:column="12"/></operator><name pos:line="64" pos:column="12">client_data<pos:position pos:line="64" pos:column="23"/></name></name> <operator pos:line="64" pos:column="24">=<pos:position pos:line="64" pos:column="25"/></operator> <name pos:line="64" pos:column="26">NULL<pos:position pos:line="64" pos:column="30"/></name></expr>;<pos:position pos:line="64" pos:column="31"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="65" pos:column="5">apr_pollset_add<pos:position pos:line="65" pos:column="20"/></name><argument_list pos:line="65" pos:column="20">(<argument><expr><name pos:line="65" pos:column="21">pollset<pos:position pos:line="65" pos:column="28"/></name></expr></argument>, <argument><expr><operator pos:line="65" pos:column="30">&amp;<pos:position pos:line="65" pos:column="35"/></operator><name pos:line="65" pos:column="31">pollfd<pos:position pos:line="65" pos:column="37"/></name></expr></argument>)<pos:position pos:line="65" pos:column="38"/></argument_list></call></expr>;<pos:position pos:line="65" pos:column="39"/></expr_stmt>

    <expr_stmt><expr><name><name pos:line="67" pos:column="5">pollfd<pos:position pos:line="67" pos:column="11"/></name><operator pos:line="67" pos:column="11">.<pos:position pos:line="67" pos:column="12"/></operator><name pos:line="67" pos:column="12">desc<pos:position pos:line="67" pos:column="16"/></name><operator pos:line="67" pos:column="16">.<pos:position pos:line="67" pos:column="17"/></operator><name pos:line="67" pos:column="17">s<pos:position pos:line="67" pos:column="18"/></name></name> <operator pos:line="67" pos:column="19">=<pos:position pos:line="67" pos:column="20"/></operator> <name pos:line="67" pos:column="21">client_socket<pos:position pos:line="67" pos:column="34"/></name></expr>;<pos:position pos:line="67" pos:column="35"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="68" pos:column="5">apr_pollset_add<pos:position pos:line="68" pos:column="20"/></name><argument_list pos:line="68" pos:column="20">(<argument><expr><name pos:line="68" pos:column="21">pollset<pos:position pos:line="68" pos:column="28"/></name></expr></argument>, <argument><expr><operator pos:line="68" pos:column="30">&amp;<pos:position pos:line="68" pos:column="35"/></operator><name pos:line="68" pos:column="31">pollfd<pos:position pos:line="68" pos:column="37"/></name></expr></argument>)<pos:position pos:line="68" pos:column="38"/></argument_list></call></expr>;<pos:position pos:line="68" pos:column="39"/></expr_stmt>

    <expr_stmt><expr><call><name pos:line="70" pos:column="5">remove_reqtimeout<pos:position pos:line="70" pos:column="22"/></name><argument_list pos:line="70" pos:column="22">(<argument><expr><name><name pos:line="70" pos:column="23">c<pos:position pos:line="70" pos:column="24"/></name><operator pos:line="70" pos:column="24">-&gt;<pos:position pos:line="70" pos:column="29"/></operator><name pos:line="70" pos:column="26">input_filters<pos:position pos:line="70" pos:column="39"/></name></name></expr></argument>)<pos:position pos:line="70" pos:column="40"/></argument_list></call></expr>;<pos:position pos:line="70" pos:column="41"/></expr_stmt>

    <expr_stmt><expr><name><name pos:line="72" pos:column="5">r<pos:position pos:line="72" pos:column="6"/></name><operator pos:line="72" pos:column="6">-&gt;<pos:position pos:line="72" pos:column="11"/></operator><name pos:line="72" pos:column="8">output_filters<pos:position pos:line="72" pos:column="22"/></name></name> <operator pos:line="72" pos:column="23">=<pos:position pos:line="72" pos:column="24"/></operator> <name><name pos:line="72" pos:column="25">c<pos:position pos:line="72" pos:column="26"/></name><operator pos:line="72" pos:column="26">-&gt;<pos:position pos:line="72" pos:column="31"/></operator><name pos:line="72" pos:column="28">output_filters<pos:position pos:line="72" pos:column="42"/></name></name></expr>;<pos:position pos:line="72" pos:column="43"/></expr_stmt>
    <expr_stmt><expr><name><name pos:line="73" pos:column="5">r<pos:position pos:line="73" pos:column="6"/></name><operator pos:line="73" pos:column="6">-&gt;<pos:position pos:line="73" pos:column="11"/></operator><name pos:line="73" pos:column="8">proto_output_filters<pos:position pos:line="73" pos:column="28"/></name></name> <operator pos:line="73" pos:column="29">=<pos:position pos:line="73" pos:column="30"/></operator> <name><name pos:line="73" pos:column="31">c<pos:position pos:line="73" pos:column="32"/></name><operator pos:line="73" pos:column="32">-&gt;<pos:position pos:line="73" pos:column="37"/></operator><name pos:line="73" pos:column="34">output_filters<pos:position pos:line="73" pos:column="48"/></name></name></expr>;<pos:position pos:line="73" pos:column="49"/></expr_stmt>
    <expr_stmt><expr><name><name pos:line="74" pos:column="5">r<pos:position pos:line="74" pos:column="6"/></name><operator pos:line="74" pos:column="6">-&gt;<pos:position pos:line="74" pos:column="11"/></operator><name pos:line="74" pos:column="8">input_filters<pos:position pos:line="74" pos:column="21"/></name></name> <operator pos:line="74" pos:column="22">=<pos:position pos:line="74" pos:column="23"/></operator> <name><name pos:line="74" pos:column="24">c<pos:position pos:line="74" pos:column="25"/></name><operator pos:line="74" pos:column="25">-&gt;<pos:position pos:line="74" pos:column="30"/></operator><name pos:line="74" pos:column="27">input_filters<pos:position pos:line="74" pos:column="40"/></name></name></expr>;<pos:position pos:line="74" pos:column="41"/></expr_stmt>
    <expr_stmt><expr><name><name pos:line="75" pos:column="5">r<pos:position pos:line="75" pos:column="6"/></name><operator pos:line="75" pos:column="6">-&gt;<pos:position pos:line="75" pos:column="11"/></operator><name pos:line="75" pos:column="8">proto_input_filters<pos:position pos:line="75" pos:column="27"/></name></name> <operator pos:line="75" pos:column="28">=<pos:position pos:line="75" pos:column="29"/></operator> <name><name pos:line="75" pos:column="30">c<pos:position pos:line="75" pos:column="31"/></name><operator pos:line="75" pos:column="31">-&gt;<pos:position pos:line="75" pos:column="36"/></operator><name pos:line="75" pos:column="33">input_filters<pos:position pos:line="75" pos:column="46"/></name></name></expr>;<pos:position pos:line="75" pos:column="47"/></expr_stmt>

    <comment type="block" pos:line="77" pos:column="5">/* This handler should take care of the entire connection; make it so that
     * nothing else is attempted on the connection after returning. */</comment>
    <expr_stmt><expr><name><name pos:line="79" pos:column="5">c<pos:position pos:line="79" pos:column="6"/></name><operator pos:line="79" pos:column="6">-&gt;<pos:position pos:line="79" pos:column="11"/></operator><name pos:line="79" pos:column="8">keepalive<pos:position pos:line="79" pos:column="17"/></name></name> <operator pos:line="79" pos:column="18">=<pos:position pos:line="79" pos:column="19"/></operator> <name pos:line="79" pos:column="20">AP_CONN_CLOSE<pos:position pos:line="79" pos:column="33"/></name></expr>;<pos:position pos:line="79" pos:column="34"/></expr_stmt>

    <while pos:line="81" pos:column="5">while <condition pos:line="81" pos:column="11">(<expr><literal type="number" pos:line="81" pos:column="12">1<pos:position pos:line="81" pos:column="13"/></literal></expr>)<pos:position pos:line="81" pos:column="14"/></condition> <block pos:line="81" pos:column="15">{ <comment type="block" pos:line="81" pos:column="17">/* Infinite loop until error (one side closes the connection) */</comment>
        <if pos:line="82" pos:column="9">if <condition pos:line="82" pos:column="12">(<expr><operator pos:line="82" pos:column="13">(<pos:position pos:line="82" pos:column="14"/></operator><name pos:line="82" pos:column="14">rv<pos:position pos:line="82" pos:column="16"/></name> <operator pos:line="82" pos:column="17">=<pos:position pos:line="82" pos:column="18"/></operator> <call><name pos:line="82" pos:column="19">apr_pollset_poll<pos:position pos:line="82" pos:column="35"/></name><argument_list pos:line="82" pos:column="35">(<argument><expr><name pos:line="82" pos:column="36">pollset<pos:position pos:line="82" pos:column="43"/></name></expr></argument>, <argument><expr><operator pos:line="82" pos:column="45">-<pos:position pos:line="82" pos:column="46"/></operator><literal type="number" pos:line="82" pos:column="46">1<pos:position pos:line="82" pos:column="47"/></literal></expr></argument>, <argument><expr><operator pos:line="82" pos:column="49">&amp;<pos:position pos:line="82" pos:column="54"/></operator><name pos:line="82" pos:column="50">pollcnt<pos:position pos:line="82" pos:column="57"/></name></expr></argument>, <argument><expr><operator pos:line="82" pos:column="59">&amp;<pos:position pos:line="82" pos:column="64"/></operator><name pos:line="82" pos:column="60">signalled<pos:position pos:line="82" pos:column="69"/></name></expr></argument>)<pos:position pos:line="82" pos:column="70"/></argument_list></call><operator pos:line="82" pos:column="70">)<pos:position pos:line="82" pos:column="71"/></operator>
            <operator pos:line="83" pos:column="13">!=<pos:position pos:line="83" pos:column="15"/></operator> <name pos:line="83" pos:column="16">APR_SUCCESS<pos:position pos:line="83" pos:column="27"/></name></expr>)<pos:position pos:line="83" pos:column="28"/></condition><then pos:line="83" pos:column="28"> <block pos:line="83" pos:column="29">{
            <if pos:line="84" pos:column="13">if <condition pos:line="84" pos:column="16">(<expr><call><name pos:line="84" pos:column="17">APR_STATUS_IS_EINTR<pos:position pos:line="84" pos:column="36"/></name><argument_list pos:line="84" pos:column="36">(<argument><expr><name pos:line="84" pos:column="37">rv<pos:position pos:line="84" pos:column="39"/></name></expr></argument>)<pos:position pos:line="84" pos:column="40"/></argument_list></call></expr>)<pos:position pos:line="84" pos:column="41"/></condition><then pos:line="84" pos:column="41"> <block pos:line="84" pos:column="42">{
                <continue pos:line="85" pos:column="17">continue;<pos:position pos:line="85" pos:column="26"/></continue>
            }<pos:position pos:line="86" pos:column="14"/></block></then></if>
            <expr_stmt><expr><call><name pos:line="87" pos:column="13">ap_log_rerror<pos:position pos:line="87" pos:column="26"/></name><argument_list pos:line="87" pos:column="26">(<argument><expr><name pos:line="87" pos:column="27">APLOG_MARK<pos:position pos:line="87" pos:column="37"/></name></expr></argument>, <argument><expr><name pos:line="87" pos:column="39">APLOG_ERR<pos:position pos:line="87" pos:column="48"/></name></expr></argument>, <argument><expr><name pos:line="87" pos:column="50">rv<pos:position pos:line="87" pos:column="52"/></name></expr></argument>, <argument><expr><name pos:line="87" pos:column="54">r<pos:position pos:line="87" pos:column="55"/></name></expr></argument>, <argument><expr><call><name pos:line="87" pos:column="57">APLOGNO<pos:position pos:line="87" pos:column="64"/></name><argument_list pos:line="87" pos:column="64">(<argument><expr><literal type="number" pos:line="87" pos:column="65">02444<pos:position pos:line="87" pos:column="70"/></literal></expr></argument>)<pos:position pos:line="87" pos:column="71"/></argument_list></call> <literal type="string" pos:line="87" pos:column="72">"error apr_poll()"<pos:position pos:line="87" pos:column="90"/></literal></expr></argument>)<pos:position pos:line="87" pos:column="91"/></argument_list></call></expr>;<pos:position pos:line="87" pos:column="92"/></expr_stmt>
            <return pos:line="88" pos:column="13">return <expr><name pos:line="88" pos:column="20">HTTP_INTERNAL_SERVER_ERROR<pos:position pos:line="88" pos:column="46"/></name></expr>;<pos:position pos:line="88" pos:column="47"/></return>
        }<pos:position pos:line="89" pos:column="10"/></block></then></if>
        <expr_stmt><expr><call><name pos:line="90" pos:column="9">ap_log_rerror<pos:position pos:line="90" pos:column="22"/></name><argument_list pos:line="90" pos:column="22">(<argument><expr><name pos:line="90" pos:column="23">APLOG_MARK<pos:position pos:line="90" pos:column="33"/></name></expr></argument>, <argument><expr><name pos:line="90" pos:column="35">APLOG_TRACE1<pos:position pos:line="90" pos:column="47"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="90" pos:column="49">0<pos:position pos:line="90" pos:column="50"/></literal></expr></argument>, <argument><expr><name pos:line="90" pos:column="52">r<pos:position pos:line="90" pos:column="53"/></name></expr></argument>, <argument><expr><call><name pos:line="90" pos:column="55">APLOGNO<pos:position pos:line="90" pos:column="62"/></name><argument_list pos:line="90" pos:column="62">(<argument><expr><literal type="number" pos:line="90" pos:column="63">02445<pos:position pos:line="90" pos:column="68"/></literal></expr></argument>)<pos:position pos:line="90" pos:column="69"/></argument_list></call>
                      <literal type="string" pos:line="91" pos:column="23">"woke from poll(), i=%d"<pos:position pos:line="91" pos:column="47"/></literal></expr></argument>, <argument><expr><name pos:line="91" pos:column="49">pollcnt<pos:position pos:line="91" pos:column="56"/></name></expr></argument>)<pos:position pos:line="91" pos:column="57"/></argument_list></call></expr>;<pos:position pos:line="91" pos:column="58"/></expr_stmt>

        <for pos:line="93" pos:column="9">for <control pos:line="93" pos:column="13">(<init><expr><name pos:line="93" pos:column="14">pi<pos:position pos:line="93" pos:column="16"/></name> <operator pos:line="93" pos:column="17">=<pos:position pos:line="93" pos:column="18"/></operator> <literal type="number" pos:line="93" pos:column="19">0<pos:position pos:line="93" pos:column="20"/></literal></expr>;<pos:position pos:line="93" pos:column="21"/></init> <condition><expr><name pos:line="93" pos:column="22">pi<pos:position pos:line="93" pos:column="24"/></name> <operator pos:line="93" pos:column="25">&lt;<pos:position pos:line="93" pos:column="29"/></operator> <name pos:line="93" pos:column="27">pollcnt<pos:position pos:line="93" pos:column="34"/></name></expr>;<pos:position pos:line="93" pos:column="35"/></condition> <incr><expr><name pos:line="93" pos:column="36">pi<pos:position pos:line="93" pos:column="38"/></name><operator pos:line="93" pos:column="38">++<pos:position pos:line="93" pos:column="40"/></operator></expr></incr>)<pos:position pos:line="93" pos:column="41"/></control> <block pos:line="93" pos:column="42">{
            <decl_stmt><decl><type><specifier pos:line="94" pos:column="13">const<pos:position pos:line="94" pos:column="18"/></specifier> <name pos:line="94" pos:column="19">apr_pollfd_t<pos:position pos:line="94" pos:column="31"/></name> <modifier pos:line="94" pos:column="32">*<pos:position pos:line="94" pos:column="33"/></modifier></type><name pos:line="94" pos:column="33">cur<pos:position pos:line="94" pos:column="36"/></name> <init pos:line="94" pos:column="37">= <expr><operator pos:line="94" pos:column="39">&amp;<pos:position pos:line="94" pos:column="44"/></operator><name><name pos:line="94" pos:column="40">signalled<pos:position pos:line="94" pos:column="49"/></name><index pos:line="94" pos:column="49">[<expr><name pos:line="94" pos:column="50">pi<pos:position pos:line="94" pos:column="52"/></name></expr>]<pos:position pos:line="94" pos:column="53"/></index></name></expr></init></decl>;<pos:position pos:line="94" pos:column="54"/></decl_stmt>

            <if pos:line="96" pos:column="13">if <condition pos:line="96" pos:column="16">(<expr><name><name pos:line="96" pos:column="17">cur<pos:position pos:line="96" pos:column="20"/></name><operator pos:line="96" pos:column="20">-&gt;<pos:position pos:line="96" pos:column="25"/></operator><name pos:line="96" pos:column="22">desc<pos:position pos:line="96" pos:column="26"/></name><operator pos:line="96" pos:column="26">.<pos:position pos:line="96" pos:column="27"/></operator><name pos:line="96" pos:column="27">s<pos:position pos:line="96" pos:column="28"/></name></name> <operator pos:line="96" pos:column="29">==<pos:position pos:line="96" pos:column="31"/></operator> <name pos:line="96" pos:column="32">sock<pos:position pos:line="96" pos:column="36"/></name></expr>)<pos:position pos:line="96" pos:column="37"/></condition><then pos:line="96" pos:column="37"> <block pos:line="96" pos:column="38">{
                <expr_stmt><expr><name pos:line="97" pos:column="17">pollevent<pos:position pos:line="97" pos:column="26"/></name> <operator pos:line="97" pos:column="27">=<pos:position pos:line="97" pos:column="28"/></operator> <name><name pos:line="97" pos:column="29">cur<pos:position pos:line="97" pos:column="32"/></name><operator pos:line="97" pos:column="32">-&gt;<pos:position pos:line="97" pos:column="37"/></operator><name pos:line="97" pos:column="34">rtnevents<pos:position pos:line="97" pos:column="43"/></name></name></expr>;<pos:position pos:line="97" pos:column="44"/></expr_stmt>
                <if pos:line="98" pos:column="17">if <condition pos:line="98" pos:column="20">(<expr><name pos:line="98" pos:column="21">pollevent<pos:position pos:line="98" pos:column="30"/></name> <operator pos:line="98" pos:column="31">&amp;<pos:position pos:line="98" pos:column="36"/></operator> <operator pos:line="98" pos:column="33">(<pos:position pos:line="98" pos:column="34"/></operator><name pos:line="98" pos:column="34">APR_POLLIN<pos:position pos:line="98" pos:column="44"/></name> <operator pos:line="98" pos:column="45">|<pos:position pos:line="98" pos:column="46"/></operator> <name pos:line="98" pos:column="47">APR_POLLHUP<pos:position pos:line="98" pos:column="58"/></name><operator pos:line="98" pos:column="58">)<pos:position pos:line="98" pos:column="59"/></operator></expr>)<pos:position pos:line="98" pos:column="60"/></condition><then pos:line="98" pos:column="60"> <block pos:line="98" pos:column="61">{
                    <expr_stmt><expr><call><name pos:line="99" pos:column="21">ap_log_rerror<pos:position pos:line="99" pos:column="34"/></name><argument_list pos:line="99" pos:column="34">(<argument><expr><name pos:line="99" pos:column="35">APLOG_MARK<pos:position pos:line="99" pos:column="45"/></name></expr></argument>, <argument><expr><name pos:line="99" pos:column="47">APLOG_TRACE1<pos:position pos:line="99" pos:column="59"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="99" pos:column="61">0<pos:position pos:line="99" pos:column="62"/></literal></expr></argument>, <argument><expr><name pos:line="99" pos:column="64">r<pos:position pos:line="99" pos:column="65"/></name></expr></argument>, <argument><expr><call><name pos:line="99" pos:column="67">APLOGNO<pos:position pos:line="99" pos:column="74"/></name><argument_list pos:line="99" pos:column="74">(<argument><expr><literal type="number" pos:line="99" pos:column="75">02446<pos:position pos:line="99" pos:column="80"/></literal></expr></argument>)<pos:position pos:line="99" pos:column="81"/></argument_list></call>
                                  <literal type="string" pos:line="100" pos:column="35">"sock was readable"<pos:position pos:line="100" pos:column="54"/></literal></expr></argument>)<pos:position pos:line="100" pos:column="55"/></argument_list></call></expr>;<pos:position pos:line="100" pos:column="56"/></expr_stmt>
                    <expr_stmt><expr><name pos:line="101" pos:column="21">rv<pos:position pos:line="101" pos:column="23"/></name> <operator pos:line="101" pos:column="24">=<pos:position pos:line="101" pos:column="25"/></operator> <call><name pos:line="101" pos:column="26">proxy_wstunnel_transfer<pos:position pos:line="101" pos:column="49"/></name><argument_list pos:line="101" pos:column="49">(<argument><expr><name pos:line="101" pos:column="50">r<pos:position pos:line="101" pos:column="51"/></name></expr></argument>, <argument><expr><name pos:line="101" pos:column="53">backconn<pos:position pos:line="101" pos:column="61"/></name></expr></argument>, <argument><expr><name pos:line="101" pos:column="63">c<pos:position pos:line="101" pos:column="64"/></name></expr></argument>, <argument><expr><name pos:line="101" pos:column="66">bb<pos:position pos:line="101" pos:column="68"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="101" pos:column="70">"sock"<pos:position pos:line="101" pos:column="76"/></literal></expr></argument>)<pos:position pos:line="101" pos:column="77"/></argument_list></call></expr>;<pos:position pos:line="101" pos:column="78"/></expr_stmt>
                }<pos:position pos:line="102" pos:column="18"/></block></then>
                <elseif pos:line="103" pos:column="17">else <if pos:line="103" pos:column="22">if <condition pos:line="103" pos:column="25">(<expr><name pos:line="103" pos:column="26">pollevent<pos:position pos:line="103" pos:column="35"/></name> <operator pos:line="103" pos:column="36">&amp;<pos:position pos:line="103" pos:column="41"/></operator> <name pos:line="103" pos:column="38">APR_POLLERR<pos:position pos:line="103" pos:column="49"/></name></expr>)<pos:position pos:line="103" pos:column="50"/></condition><then pos:line="103" pos:column="50"> <block pos:line="103" pos:column="51">{
                    <expr_stmt><expr><name pos:line="104" pos:column="21">rv<pos:position pos:line="104" pos:column="23"/></name> <operator pos:line="104" pos:column="24">=<pos:position pos:line="104" pos:column="25"/></operator> <name pos:line="104" pos:column="26">APR_EPIPE<pos:position pos:line="104" pos:column="35"/></name></expr>;<pos:position pos:line="104" pos:column="36"/></expr_stmt>
                    <expr_stmt><expr><call><name pos:line="105" pos:column="21">ap_log_rerror<pos:position pos:line="105" pos:column="34"/></name><argument_list pos:line="105" pos:column="34">(<argument><expr><name pos:line="105" pos:column="35">APLOG_MARK<pos:position pos:line="105" pos:column="45"/></name></expr></argument>, <argument><expr><name pos:line="105" pos:column="47">APLOG_NOTICE<pos:position pos:line="105" pos:column="59"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="105" pos:column="61">0<pos:position pos:line="105" pos:column="62"/></literal></expr></argument>, <argument><expr><name pos:line="105" pos:column="64">r<pos:position pos:line="105" pos:column="65"/></name></expr></argument>, <argument><expr><call><name pos:line="105" pos:column="67">APLOGNO<pos:position pos:line="105" pos:column="74"/></name><argument_list pos:line="105" pos:column="74">(<argument><expr><literal type="number" pos:line="105" pos:column="75">02447<pos:position pos:line="105" pos:column="80"/></literal></expr></argument>)<pos:position pos:line="105" pos:column="81"/></argument_list></call>
                            <literal type="string" pos:line="106" pos:column="29">"error on backconn"<pos:position pos:line="106" pos:column="48"/></literal></expr></argument>)<pos:position pos:line="106" pos:column="49"/></argument_list></call></expr>;<pos:position pos:line="106" pos:column="50"/></expr_stmt>
                }<pos:position pos:line="107" pos:column="18"/></block></then></if></elseif>
                <else pos:line="108" pos:column="17">else <block pos:line="108" pos:column="22">{ 
                    <expr_stmt><expr><name pos:line="109" pos:column="21">rv<pos:position pos:line="109" pos:column="23"/></name> <operator pos:line="109" pos:column="24">=<pos:position pos:line="109" pos:column="25"/></operator> <name pos:line="109" pos:column="26">APR_EGENERAL<pos:position pos:line="109" pos:column="38"/></name></expr>;<pos:position pos:line="109" pos:column="39"/></expr_stmt>
                    <expr_stmt><expr><call><name pos:line="110" pos:column="21">ap_log_rerror<pos:position pos:line="110" pos:column="34"/></name><argument_list pos:line="110" pos:column="34">(<argument><expr><name pos:line="110" pos:column="35">APLOG_MARK<pos:position pos:line="110" pos:column="45"/></name></expr></argument>, <argument><expr><name pos:line="110" pos:column="47">APLOG_NOTICE<pos:position pos:line="110" pos:column="59"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="110" pos:column="61">0<pos:position pos:line="110" pos:column="62"/></literal></expr></argument>, <argument><expr><name pos:line="110" pos:column="64">r<pos:position pos:line="110" pos:column="65"/></name></expr></argument>, <argument><expr><call><name pos:line="110" pos:column="67">APLOGNO<pos:position pos:line="110" pos:column="74"/></name><argument_list pos:line="110" pos:column="74">(<argument><expr><literal type="number" pos:line="110" pos:column="75">02605<pos:position pos:line="110" pos:column="80"/></literal></expr></argument>)<pos:position pos:line="110" pos:column="81"/></argument_list></call>
                            <literal type="string" pos:line="111" pos:column="29">"unknown event on backconn %d"<pos:position pos:line="111" pos:column="59"/></literal></expr></argument>, <argument><expr><name pos:line="111" pos:column="61">pollevent<pos:position pos:line="111" pos:column="70"/></name></expr></argument>)<pos:position pos:line="111" pos:column="71"/></argument_list></call></expr>;<pos:position pos:line="111" pos:column="72"/></expr_stmt>
                }<pos:position pos:line="112" pos:column="18"/></block></else></if>
            }<pos:position pos:line="113" pos:column="14"/></block></then>
            <elseif pos:line="114" pos:column="13">else <if pos:line="114" pos:column="18">if <condition pos:line="114" pos:column="21">(<expr><name><name pos:line="114" pos:column="22">cur<pos:position pos:line="114" pos:column="25"/></name><operator pos:line="114" pos:column="25">-&gt;<pos:position pos:line="114" pos:column="30"/></operator><name pos:line="114" pos:column="27">desc<pos:position pos:line="114" pos:column="31"/></name><operator pos:line="114" pos:column="31">.<pos:position pos:line="114" pos:column="32"/></operator><name pos:line="114" pos:column="32">s<pos:position pos:line="114" pos:column="33"/></name></name> <operator pos:line="114" pos:column="34">==<pos:position pos:line="114" pos:column="36"/></operator> <name pos:line="114" pos:column="37">client_socket<pos:position pos:line="114" pos:column="50"/></name></expr>)<pos:position pos:line="114" pos:column="51"/></condition><then pos:line="114" pos:column="51"> <block pos:line="114" pos:column="52">{
                <expr_stmt><expr><name pos:line="115" pos:column="17">pollevent<pos:position pos:line="115" pos:column="26"/></name> <operator pos:line="115" pos:column="27">=<pos:position pos:line="115" pos:column="28"/></operator> <name><name pos:line="115" pos:column="29">cur<pos:position pos:line="115" pos:column="32"/></name><operator pos:line="115" pos:column="32">-&gt;<pos:position pos:line="115" pos:column="37"/></operator><name pos:line="115" pos:column="34">rtnevents<pos:position pos:line="115" pos:column="43"/></name></name></expr>;<pos:position pos:line="115" pos:column="44"/></expr_stmt>
                <if pos:line="116" pos:column="17">if <condition pos:line="116" pos:column="20">(<expr><name pos:line="116" pos:column="21">pollevent<pos:position pos:line="116" pos:column="30"/></name> <operator pos:line="116" pos:column="31">&amp;<pos:position pos:line="116" pos:column="36"/></operator> <operator pos:line="116" pos:column="33">(<pos:position pos:line="116" pos:column="34"/></operator><name pos:line="116" pos:column="34">APR_POLLIN<pos:position pos:line="116" pos:column="44"/></name> <operator pos:line="116" pos:column="45">|<pos:position pos:line="116" pos:column="46"/></operator> <name pos:line="116" pos:column="47">APR_POLLHUP<pos:position pos:line="116" pos:column="58"/></name><operator pos:line="116" pos:column="58">)<pos:position pos:line="116" pos:column="59"/></operator></expr>)<pos:position pos:line="116" pos:column="60"/></condition><then pos:line="116" pos:column="60"> <block pos:line="116" pos:column="61">{
                    <expr_stmt><expr><call><name pos:line="117" pos:column="21">ap_log_rerror<pos:position pos:line="117" pos:column="34"/></name><argument_list pos:line="117" pos:column="34">(<argument><expr><name pos:line="117" pos:column="35">APLOG_MARK<pos:position pos:line="117" pos:column="45"/></name></expr></argument>, <argument><expr><name pos:line="117" pos:column="47">APLOG_TRACE1<pos:position pos:line="117" pos:column="59"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="117" pos:column="61">0<pos:position pos:line="117" pos:column="62"/></literal></expr></argument>, <argument><expr><name pos:line="117" pos:column="64">r<pos:position pos:line="117" pos:column="65"/></name></expr></argument>, <argument><expr><call><name pos:line="117" pos:column="67">APLOGNO<pos:position pos:line="117" pos:column="74"/></name><argument_list pos:line="117" pos:column="74">(<argument><expr><literal type="number" pos:line="117" pos:column="75">02448<pos:position pos:line="117" pos:column="80"/></literal></expr></argument>)<pos:position pos:line="117" pos:column="81"/></argument_list></call>
                                  <literal type="string" pos:line="118" pos:column="35">"client was readable"<pos:position pos:line="118" pos:column="56"/></literal></expr></argument>)<pos:position pos:line="118" pos:column="57"/></argument_list></call></expr>;<pos:position pos:line="118" pos:column="58"/></expr_stmt>
                    <expr_stmt><expr><name pos:line="119" pos:column="21">rv<pos:position pos:line="119" pos:column="23"/></name> <operator pos:line="119" pos:column="24">=<pos:position pos:line="119" pos:column="25"/></operator> <call><name pos:line="119" pos:column="26">proxy_wstunnel_transfer<pos:position pos:line="119" pos:column="49"/></name><argument_list pos:line="119" pos:column="49">(<argument><expr><name pos:line="119" pos:column="50">r<pos:position pos:line="119" pos:column="51"/></name></expr></argument>, <argument><expr><name pos:line="119" pos:column="53">c<pos:position pos:line="119" pos:column="54"/></name></expr></argument>, <argument><expr><name pos:line="119" pos:column="56">backconn<pos:position pos:line="119" pos:column="64"/></name></expr></argument>, <argument><expr><name pos:line="119" pos:column="66">bb<pos:position pos:line="119" pos:column="68"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="119" pos:column="70">"client"<pos:position pos:line="119" pos:column="78"/></literal></expr></argument>)<pos:position pos:line="119" pos:column="79"/></argument_list></call></expr>;<pos:position pos:line="119" pos:column="80"/></expr_stmt>
                }<pos:position pos:line="120" pos:column="18"/></block></then>
                <elseif pos:line="121" pos:column="17">else <if pos:line="121" pos:column="22">if <condition pos:line="121" pos:column="25">(<expr><name pos:line="121" pos:column="26">pollevent<pos:position pos:line="121" pos:column="35"/></name> <operator pos:line="121" pos:column="36">&amp;<pos:position pos:line="121" pos:column="41"/></operator> <name pos:line="121" pos:column="38">APR_POLLERR<pos:position pos:line="121" pos:column="49"/></name></expr>)<pos:position pos:line="121" pos:column="50"/></condition><then pos:line="121" pos:column="50"> <block pos:line="121" pos:column="51">{
                    <expr_stmt><expr><name pos:line="122" pos:column="21">rv<pos:position pos:line="122" pos:column="23"/></name> <operator pos:line="122" pos:column="24">=<pos:position pos:line="122" pos:column="25"/></operator> <name pos:line="122" pos:column="26">APR_EPIPE<pos:position pos:line="122" pos:column="35"/></name></expr>;<pos:position pos:line="122" pos:column="36"/></expr_stmt>
                    <expr_stmt><expr><name><name pos:line="123" pos:column="21">c<pos:position pos:line="123" pos:column="22"/></name><operator pos:line="123" pos:column="22">-&gt;<pos:position pos:line="123" pos:column="27"/></operator><name pos:line="123" pos:column="24">aborted<pos:position pos:line="123" pos:column="31"/></name></name> <operator pos:line="123" pos:column="32">=<pos:position pos:line="123" pos:column="33"/></operator> <literal type="number" pos:line="123" pos:column="34">1<pos:position pos:line="123" pos:column="35"/></literal></expr>;<pos:position pos:line="123" pos:column="36"/></expr_stmt>
                    <expr_stmt><expr><call><name pos:line="124" pos:column="21">ap_log_rerror<pos:position pos:line="124" pos:column="34"/></name><argument_list pos:line="124" pos:column="34">(<argument><expr><name pos:line="124" pos:column="35">APLOG_MARK<pos:position pos:line="124" pos:column="45"/></name></expr></argument>, <argument><expr><name pos:line="124" pos:column="47">APLOG_TRACE1<pos:position pos:line="124" pos:column="59"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="124" pos:column="61">0<pos:position pos:line="124" pos:column="62"/></literal></expr></argument>, <argument><expr><name pos:line="124" pos:column="64">r<pos:position pos:line="124" pos:column="65"/></name></expr></argument>, <argument><expr><call><name pos:line="124" pos:column="67">APLOGNO<pos:position pos:line="124" pos:column="74"/></name><argument_list pos:line="124" pos:column="74">(<argument><expr><literal type="number" pos:line="124" pos:column="75">02607<pos:position pos:line="124" pos:column="80"/></literal></expr></argument>)<pos:position pos:line="124" pos:column="81"/></argument_list></call>
                            <literal type="string" pos:line="125" pos:column="29">"error on client conn"<pos:position pos:line="125" pos:column="51"/></literal></expr></argument>)<pos:position pos:line="125" pos:column="52"/></argument_list></call></expr>;<pos:position pos:line="125" pos:column="53"/></expr_stmt>
                }<pos:position pos:line="126" pos:column="18"/></block></then></if></elseif>
                <else pos:line="127" pos:column="17">else <block pos:line="127" pos:column="22">{ 
                    <expr_stmt><expr><name pos:line="128" pos:column="21">rv<pos:position pos:line="128" pos:column="23"/></name> <operator pos:line="128" pos:column="24">=<pos:position pos:line="128" pos:column="25"/></operator> <name pos:line="128" pos:column="26">APR_EGENERAL<pos:position pos:line="128" pos:column="38"/></name></expr>;<pos:position pos:line="128" pos:column="39"/></expr_stmt>
                    <expr_stmt><expr><call><name pos:line="129" pos:column="21">ap_log_rerror<pos:position pos:line="129" pos:column="34"/></name><argument_list pos:line="129" pos:column="34">(<argument><expr><name pos:line="129" pos:column="35">APLOG_MARK<pos:position pos:line="129" pos:column="45"/></name></expr></argument>, <argument><expr><name pos:line="129" pos:column="47">APLOG_NOTICE<pos:position pos:line="129" pos:column="59"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="129" pos:column="61">0<pos:position pos:line="129" pos:column="62"/></literal></expr></argument>, <argument><expr><name pos:line="129" pos:column="64">r<pos:position pos:line="129" pos:column="65"/></name></expr></argument>, <argument><expr><call><name pos:line="129" pos:column="67">APLOGNO<pos:position pos:line="129" pos:column="74"/></name><argument_list pos:line="129" pos:column="74">(<argument><expr><literal type="number" pos:line="129" pos:column="75">02606<pos:position pos:line="129" pos:column="80"/></literal></expr></argument>)<pos:position pos:line="129" pos:column="81"/></argument_list></call>
                            <literal type="string" pos:line="130" pos:column="29">"unknown event on client conn %d"<pos:position pos:line="130" pos:column="62"/></literal></expr></argument>, <argument><expr><name pos:line="130" pos:column="64">pollevent<pos:position pos:line="130" pos:column="73"/></name></expr></argument>)<pos:position pos:line="130" pos:column="74"/></argument_list></call></expr>;<pos:position pos:line="130" pos:column="75"/></expr_stmt>
                }<pos:position pos:line="131" pos:column="18"/></block></else></if>
            }<pos:position pos:line="132" pos:column="14"/></block></then></if></elseif>
            <else pos:line="133" pos:column="13">else <block pos:line="133" pos:column="18">{
                <expr_stmt><expr><name pos:line="134" pos:column="17">rv<pos:position pos:line="134" pos:column="19"/></name> <operator pos:line="134" pos:column="20">=<pos:position pos:line="134" pos:column="21"/></operator> <name pos:line="134" pos:column="22">APR_EBADF<pos:position pos:line="134" pos:column="31"/></name></expr>;<pos:position pos:line="134" pos:column="32"/></expr_stmt>
                <expr_stmt><expr><call><name pos:line="135" pos:column="17">ap_log_rerror<pos:position pos:line="135" pos:column="30"/></name><argument_list pos:line="135" pos:column="30">(<argument><expr><name pos:line="135" pos:column="31">APLOG_MARK<pos:position pos:line="135" pos:column="41"/></name></expr></argument>, <argument><expr><name pos:line="135" pos:column="43">APLOG_INFO<pos:position pos:line="135" pos:column="53"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="135" pos:column="55">0<pos:position pos:line="135" pos:column="56"/></literal></expr></argument>, <argument><expr><name pos:line="135" pos:column="58">r<pos:position pos:line="135" pos:column="59"/></name></expr></argument>, <argument><expr><call><name pos:line="135" pos:column="61">APLOGNO<pos:position pos:line="135" pos:column="68"/></name><argument_list pos:line="135" pos:column="68">(<argument><expr><literal type="number" pos:line="135" pos:column="69">02449<pos:position pos:line="135" pos:column="74"/></literal></expr></argument>)<pos:position pos:line="135" pos:column="75"/></argument_list></call>
                              <literal type="string" pos:line="136" pos:column="31">"unknown socket in pollset"<pos:position pos:line="136" pos:column="58"/></literal></expr></argument>)<pos:position pos:line="136" pos:column="59"/></argument_list></call></expr>;<pos:position pos:line="136" pos:column="60"/></expr_stmt>
            }<pos:position pos:line="137" pos:column="14"/></block></else></if>

        }<pos:position pos:line="139" pos:column="10"/></block></for>
        <if pos:line="140" pos:column="9">if <condition pos:line="140" pos:column="12">(<expr><name pos:line="140" pos:column="13">rv<pos:position pos:line="140" pos:column="15"/></name> <operator pos:line="140" pos:column="16">!=<pos:position pos:line="140" pos:column="18"/></operator> <name pos:line="140" pos:column="19">APR_SUCCESS<pos:position pos:line="140" pos:column="30"/></name></expr>)<pos:position pos:line="140" pos:column="31"/></condition><then pos:line="140" pos:column="31"> <block pos:line="140" pos:column="32">{
            <break pos:line="141" pos:column="13">break;<pos:position pos:line="141" pos:column="19"/></break>
        }<pos:position pos:line="142" pos:column="10"/></block></then></if>
    }<pos:position pos:line="143" pos:column="6"/></block></while>

    <expr_stmt><expr><call><name pos:line="145" pos:column="5">ap_log_rerror<pos:position pos:line="145" pos:column="18"/></name><argument_list pos:line="145" pos:column="18">(<argument><expr><name pos:line="145" pos:column="19">APLOG_MARK<pos:position pos:line="145" pos:column="29"/></name></expr></argument>, <argument><expr><name pos:line="145" pos:column="31">APLOG_TRACE2<pos:position pos:line="145" pos:column="43"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="145" pos:column="45">0<pos:position pos:line="145" pos:column="46"/></literal></expr></argument>, <argument><expr><name pos:line="145" pos:column="48">r<pos:position pos:line="145" pos:column="49"/></name></expr></argument>,
                  <argument><expr><literal type="string" pos:line="146" pos:column="19">"finished with poll() - cleaning up"<pos:position pos:line="146" pos:column="55"/></literal></expr></argument>)<pos:position pos:line="146" pos:column="56"/></argument_list></call></expr>;<pos:position pos:line="146" pos:column="57"/></expr_stmt>

    <return pos:line="148" pos:column="5">return <expr><name pos:line="148" pos:column="12">OK<pos:position pos:line="148" pos:column="14"/></name></expr>;<pos:position pos:line="148" pos:column="15"/></return>
}<pos:position pos:line="149" pos:column="2"/></block></function></unit>

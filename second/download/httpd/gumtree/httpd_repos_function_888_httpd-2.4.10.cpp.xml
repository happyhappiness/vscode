<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/httpd/gumtree/httpd_repos_function_888_httpd-2.4.10.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">void<pos:position pos:line="1" pos:column="5"/></name></type> <name pos:line="1" pos:column="6">ssl_log_ssl_error<pos:position pos:line="1" pos:column="23"/></name><parameter_list pos:line="1" pos:column="23">(<parameter><decl><type><specifier pos:line="1" pos:column="24">const<pos:position pos:line="1" pos:column="29"/></specifier> <name pos:line="1" pos:column="30">char<pos:position pos:line="1" pos:column="34"/></name> <modifier pos:line="1" pos:column="35">*<pos:position pos:line="1" pos:column="36"/></modifier></type><name pos:line="1" pos:column="36">file<pos:position pos:line="1" pos:column="40"/></name></decl></parameter>, <parameter><decl><type><name pos:line="1" pos:column="42">int<pos:position pos:line="1" pos:column="45"/></name></type> <name pos:line="1" pos:column="46">line<pos:position pos:line="1" pos:column="50"/></name></decl></parameter>, <parameter><decl><type><name pos:line="1" pos:column="52">int<pos:position pos:line="1" pos:column="55"/></name></type> <name pos:line="1" pos:column="56">level<pos:position pos:line="1" pos:column="61"/></name></decl></parameter>, <parameter><decl><type><name pos:line="1" pos:column="63">server_rec<pos:position pos:line="1" pos:column="73"/></name> <modifier pos:line="1" pos:column="74">*<pos:position pos:line="1" pos:column="75"/></modifier></type><name pos:line="1" pos:column="75">s<pos:position pos:line="1" pos:column="76"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="77"/></parameter_list>
<block pos:line="2" pos:column="1">{
    <decl_stmt><decl><type><name pos:line="3" pos:column="5">unsigned<pos:position pos:line="3" pos:column="13"/></name> <name pos:line="3" pos:column="14">long<pos:position pos:line="3" pos:column="18"/></name></type> <name pos:line="3" pos:column="19">e<pos:position pos:line="3" pos:column="20"/></name></decl>;<pos:position pos:line="3" pos:column="21"/></decl_stmt>
    <decl_stmt><decl><type><specifier pos:line="4" pos:column="5">const<pos:position pos:line="4" pos:column="10"/></specifier> <name pos:line="4" pos:column="11">char<pos:position pos:line="4" pos:column="15"/></name> <modifier pos:line="4" pos:column="16">*<pos:position pos:line="4" pos:column="17"/></modifier></type><name pos:line="4" pos:column="17">data<pos:position pos:line="4" pos:column="21"/></name></decl>;<pos:position pos:line="4" pos:column="22"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="5" pos:column="5">int<pos:position pos:line="5" pos:column="8"/></name></type> <name pos:line="5" pos:column="9">flags<pos:position pos:line="5" pos:column="14"/></name></decl>;<pos:position pos:line="5" pos:column="15"/></decl_stmt>

    <while pos:line="7" pos:column="5">while <condition pos:line="7" pos:column="11">(<expr><operator pos:line="7" pos:column="12">(<pos:position pos:line="7" pos:column="13"/></operator><name pos:line="7" pos:column="13">e<pos:position pos:line="7" pos:column="14"/></name> <operator pos:line="7" pos:column="15">=<pos:position pos:line="7" pos:column="16"/></operator> <call><name pos:line="7" pos:column="17">ERR_peek_error_line_data<pos:position pos:line="7" pos:column="41"/></name><argument_list pos:line="7" pos:column="41">(<argument><expr><name pos:line="7" pos:column="42">NULL<pos:position pos:line="7" pos:column="46"/></name></expr></argument>, <argument><expr><name pos:line="7" pos:column="48">NULL<pos:position pos:line="7" pos:column="52"/></name></expr></argument>, <argument><expr><operator pos:line="7" pos:column="54">&amp;<pos:position pos:line="7" pos:column="59"/></operator><name pos:line="7" pos:column="55">data<pos:position pos:line="7" pos:column="59"/></name></expr></argument>, <argument><expr><operator pos:line="7" pos:column="61">&amp;<pos:position pos:line="7" pos:column="66"/></operator><name pos:line="7" pos:column="62">flags<pos:position pos:line="7" pos:column="67"/></name></expr></argument>)<pos:position pos:line="7" pos:column="68"/></argument_list></call><operator pos:line="7" pos:column="68">)<pos:position pos:line="7" pos:column="69"/></operator></expr>)<pos:position pos:line="7" pos:column="70"/></condition> <block pos:line="7" pos:column="71">{
        <decl_stmt><decl><type><specifier pos:line="8" pos:column="9">const<pos:position pos:line="8" pos:column="14"/></specifier> <name pos:line="8" pos:column="15">char<pos:position pos:line="8" pos:column="19"/></name> <modifier pos:line="8" pos:column="20">*<pos:position pos:line="8" pos:column="21"/></modifier></type><name pos:line="8" pos:column="21">annotation<pos:position pos:line="8" pos:column="31"/></name></decl>;<pos:position pos:line="8" pos:column="32"/></decl_stmt>
        <decl_stmt><decl><type><name pos:line="9" pos:column="9">char<pos:position pos:line="9" pos:column="13"/></name></type> <name><name pos:line="9" pos:column="14">err<pos:position pos:line="9" pos:column="17"/></name><index pos:line="9" pos:column="17">[<expr><literal type="number" pos:line="9" pos:column="18">256<pos:position pos:line="9" pos:column="21"/></literal></expr>]<pos:position pos:line="9" pos:column="22"/></index></name></decl>;<pos:position pos:line="9" pos:column="23"/></decl_stmt>

        <if pos:line="11" pos:column="9">if <condition pos:line="11" pos:column="12">(<expr><operator pos:line="11" pos:column="13">!<pos:position pos:line="11" pos:column="14"/></operator><operator pos:line="11" pos:column="14">(<pos:position pos:line="11" pos:column="15"/></operator><name pos:line="11" pos:column="15">flags<pos:position pos:line="11" pos:column="20"/></name> <operator pos:line="11" pos:column="21">&amp;<pos:position pos:line="11" pos:column="26"/></operator> <name pos:line="11" pos:column="23">ERR_TXT_STRING<pos:position pos:line="11" pos:column="37"/></name><operator pos:line="11" pos:column="37">)<pos:position pos:line="11" pos:column="38"/></operator></expr>)<pos:position pos:line="11" pos:column="39"/></condition><then pos:line="11" pos:column="39"> <block pos:line="11" pos:column="40">{
            <expr_stmt><expr><name pos:line="12" pos:column="13">data<pos:position pos:line="12" pos:column="17"/></name> <operator pos:line="12" pos:column="18">=<pos:position pos:line="12" pos:column="19"/></operator> <name pos:line="12" pos:column="20">NULL<pos:position pos:line="12" pos:column="24"/></name></expr>;<pos:position pos:line="12" pos:column="25"/></expr_stmt>
        }<pos:position pos:line="13" pos:column="10"/></block></then></if>

        <expr_stmt><expr><call><name pos:line="15" pos:column="9">ERR_error_string_n<pos:position pos:line="15" pos:column="27"/></name><argument_list pos:line="15" pos:column="27">(<argument><expr><name pos:line="15" pos:column="28">e<pos:position pos:line="15" pos:column="29"/></name></expr></argument>, <argument><expr><name pos:line="15" pos:column="31">err<pos:position pos:line="15" pos:column="34"/></name></expr></argument>, <argument><expr><sizeof pos:line="15" pos:column="36">sizeof <name pos:line="15" pos:column="43">err<pos:position pos:line="15" pos:column="46"/></name></sizeof></expr></argument>)<pos:position pos:line="15" pos:column="47"/></argument_list></call></expr>;<pos:position pos:line="15" pos:column="48"/></expr_stmt>
        <expr_stmt><expr><name pos:line="16" pos:column="9">annotation<pos:position pos:line="16" pos:column="19"/></name> <operator pos:line="16" pos:column="20">=<pos:position pos:line="16" pos:column="21"/></operator> <call><name pos:line="16" pos:column="22">ssl_log_annotation<pos:position pos:line="16" pos:column="40"/></name><argument_list pos:line="16" pos:column="40">(<argument><expr><name pos:line="16" pos:column="41">err<pos:position pos:line="16" pos:column="44"/></name></expr></argument>)<pos:position pos:line="16" pos:column="45"/></argument_list></call></expr>;<pos:position pos:line="16" pos:column="46"/></expr_stmt>

        <expr_stmt><expr><call><name pos:line="18" pos:column="9">ap_log_error<pos:position pos:line="18" pos:column="21"/></name><argument_list pos:line="18" pos:column="21">(<argument><expr><name pos:line="18" pos:column="22">file<pos:position pos:line="18" pos:column="26"/></name></expr></argument>, <argument><expr><name pos:line="18" pos:column="28">line<pos:position pos:line="18" pos:column="32"/></name></expr></argument>, <argument><expr><name pos:line="18" pos:column="34">APLOG_MODULE_INDEX<pos:position pos:line="18" pos:column="52"/></name></expr></argument>, <argument><expr><name pos:line="18" pos:column="54">level<pos:position pos:line="18" pos:column="59"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="18" pos:column="61">0<pos:position pos:line="18" pos:column="62"/></literal></expr></argument>, <argument><expr><name pos:line="18" pos:column="64">s<pos:position pos:line="18" pos:column="65"/></name></expr></argument>,
                     <argument><expr><literal type="string" pos:line="19" pos:column="22">"SSL Library Error: %s%s%s%s%s%s"<pos:position pos:line="19" pos:column="55"/></literal></expr></argument>,
                     <comment type="block" pos:line="20" pos:column="22">/* %s */</comment>
                     <argument><expr><name pos:line="21" pos:column="22">err<pos:position pos:line="21" pos:column="25"/></name></expr></argument>,
                     <comment type="block" pos:line="22" pos:column="22">/* %s%s%s */</comment>
                     <argument><expr><ternary><condition><expr><name pos:line="23" pos:column="22">data<pos:position pos:line="23" pos:column="26"/></name></expr> ?<pos:position pos:line="23" pos:column="28"/></condition><then pos:line="23" pos:column="28"> <expr><literal type="string" pos:line="23" pos:column="29">" ("<pos:position pos:line="23" pos:column="33"/></literal></expr> <pos:position pos:line="23" pos:column="34"/></then><else pos:line="23" pos:column="34">: <expr><literal type="string" pos:line="23" pos:column="36">""<pos:position pos:line="23" pos:column="38"/></literal></expr></else></ternary></expr></argument>, <argument><expr><ternary><condition><expr><name pos:line="23" pos:column="40">data<pos:position pos:line="23" pos:column="44"/></name></expr> ?<pos:position pos:line="23" pos:column="46"/></condition><then pos:line="23" pos:column="46"> <expr><name pos:line="23" pos:column="47">data<pos:position pos:line="23" pos:column="51"/></name></expr> <pos:position pos:line="23" pos:column="52"/></then><else pos:line="23" pos:column="52">: <expr><literal type="string" pos:line="23" pos:column="54">""<pos:position pos:line="23" pos:column="56"/></literal></expr></else></ternary></expr></argument>, <argument><expr><ternary><condition><expr><name pos:line="23" pos:column="58">data<pos:position pos:line="23" pos:column="62"/></name></expr> ?<pos:position pos:line="23" pos:column="64"/></condition><then pos:line="23" pos:column="64"> <expr><literal type="string" pos:line="23" pos:column="65">")"<pos:position pos:line="23" pos:column="68"/></literal></expr> <pos:position pos:line="23" pos:column="69"/></then><else pos:line="23" pos:column="69">: <expr><literal type="string" pos:line="23" pos:column="71">""<pos:position pos:line="23" pos:column="73"/></literal></expr></else></ternary></expr></argument>,
                     <comment type="block" pos:line="24" pos:column="22">/* %s%s */</comment>
                     <argument><expr><ternary><condition><expr><name pos:line="25" pos:column="22">annotation<pos:position pos:line="25" pos:column="32"/></name></expr> ?<pos:position pos:line="25" pos:column="34"/></condition><then pos:line="25" pos:column="34"> <expr><literal type="string" pos:line="25" pos:column="35">" -- "<pos:position pos:line="25" pos:column="41"/></literal></expr> <pos:position pos:line="25" pos:column="42"/></then><else pos:line="25" pos:column="42">: <expr><literal type="string" pos:line="25" pos:column="44">""<pos:position pos:line="25" pos:column="46"/></literal></expr></else></ternary></expr></argument>,
                     <argument><expr><ternary><condition><expr><name pos:line="26" pos:column="22">annotation<pos:position pos:line="26" pos:column="32"/></name></expr> ?<pos:position pos:line="26" pos:column="34"/></condition><then pos:line="26" pos:column="34"> <expr><name pos:line="26" pos:column="35">annotation<pos:position pos:line="26" pos:column="45"/></name></expr> <pos:position pos:line="26" pos:column="46"/></then><else pos:line="26" pos:column="46">: <expr><literal type="string" pos:line="26" pos:column="48">""<pos:position pos:line="26" pos:column="50"/></literal></expr></else></ternary></expr></argument>)<pos:position pos:line="26" pos:column="51"/></argument_list></call></expr>;<pos:position pos:line="26" pos:column="52"/></expr_stmt>

        <comment type="block" pos:line="28" pos:column="9">/* Pop the error off the stack: */</comment>
        <expr_stmt><expr><call><name pos:line="29" pos:column="9">ERR_get_error<pos:position pos:line="29" pos:column="22"/></name><argument_list pos:line="29" pos:column="22">()<pos:position pos:line="29" pos:column="24"/></argument_list></call></expr>;<pos:position pos:line="29" pos:column="25"/></expr_stmt>
    }<pos:position pos:line="30" pos:column="6"/></block></while>
}<pos:position pos:line="31" pos:column="2"/></block></function></unit>

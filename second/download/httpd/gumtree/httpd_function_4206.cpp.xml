<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/httpd/gumtree/httpd_function_4206.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">int<pos:position pos:line="1" pos:column="11"/></name></type> <name pos:line="1" pos:column="12">ap_proxy_ajp_request<pos:position pos:line="1" pos:column="32"/></name><parameter_list pos:line="1" pos:column="32">(<parameter><decl><type><name pos:line="1" pos:column="33">apr_pool_t<pos:position pos:line="1" pos:column="43"/></name> <modifier pos:line="1" pos:column="44">*<pos:position pos:line="1" pos:column="45"/></modifier></type><name pos:line="1" pos:column="45">p<pos:position pos:line="1" pos:column="46"/></name></decl></parameter>, <parameter><decl><type><name pos:line="1" pos:column="48">request_rec<pos:position pos:line="1" pos:column="59"/></name> <modifier pos:line="1" pos:column="60">*<pos:position pos:line="1" pos:column="61"/></modifier></type><name pos:line="1" pos:column="61">r<pos:position pos:line="1" pos:column="62"/></name></decl></parameter>,
                                <parameter><decl><type><name pos:line="2" pos:column="33">proxy_conn_rec<pos:position pos:line="2" pos:column="47"/></name> <modifier pos:line="2" pos:column="48">*<pos:position pos:line="2" pos:column="49"/></modifier></type><name pos:line="2" pos:column="49">conn<pos:position pos:line="2" pos:column="53"/></name></decl></parameter>,
                                <parameter><decl><type><name pos:line="3" pos:column="33">conn_rec<pos:position pos:line="3" pos:column="41"/></name> <modifier pos:line="3" pos:column="42">*<pos:position pos:line="3" pos:column="43"/></modifier></type><name pos:line="3" pos:column="43">origin<pos:position pos:line="3" pos:column="49"/></name></decl></parameter>,
                                <parameter><decl><type><name pos:line="4" pos:column="33">proxy_dir_conf<pos:position pos:line="4" pos:column="47"/></name> <modifier pos:line="4" pos:column="48">*<pos:position pos:line="4" pos:column="49"/></modifier></type><name pos:line="4" pos:column="49">conf<pos:position pos:line="4" pos:column="53"/></name></decl></parameter>,
                                <parameter><decl><type><name pos:line="5" pos:column="33">apr_uri_t<pos:position pos:line="5" pos:column="42"/></name> <modifier pos:line="5" pos:column="43">*<pos:position pos:line="5" pos:column="44"/></modifier></type><name pos:line="5" pos:column="44">uri<pos:position pos:line="5" pos:column="47"/></name></decl></parameter>,
                                <parameter><decl><type><name pos:line="6" pos:column="33">char<pos:position pos:line="6" pos:column="37"/></name> <modifier pos:line="6" pos:column="38">*<pos:position pos:line="6" pos:column="39"/></modifier></type><name pos:line="6" pos:column="39">url<pos:position pos:line="6" pos:column="42"/></name></decl></parameter>, <parameter><decl><type><name pos:line="6" pos:column="44">char<pos:position pos:line="6" pos:column="48"/></name> <modifier pos:line="6" pos:column="49">*<pos:position pos:line="6" pos:column="50"/></modifier></type><name pos:line="6" pos:column="50">server_portstr<pos:position pos:line="6" pos:column="64"/></name></decl></parameter>)<pos:position pos:line="6" pos:column="65"/></parameter_list>
<block pos:line="7" pos:column="1">{
    <decl_stmt><decl><type><name pos:line="8" pos:column="5">apr_status_t<pos:position pos:line="8" pos:column="17"/></name></type> <name pos:line="8" pos:column="18">status<pos:position pos:line="8" pos:column="24"/></name></decl>;<pos:position pos:line="8" pos:column="25"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="9" pos:column="5">int<pos:position pos:line="9" pos:column="8"/></name></type> <name pos:line="9" pos:column="9">result<pos:position pos:line="9" pos:column="15"/></name></decl>;<pos:position pos:line="9" pos:column="16"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="10" pos:column="5">apr_bucket<pos:position pos:line="10" pos:column="15"/></name> <modifier pos:line="10" pos:column="16">*<pos:position pos:line="10" pos:column="17"/></modifier></type><name pos:line="10" pos:column="17">e<pos:position pos:line="10" pos:column="18"/></name></decl>;<pos:position pos:line="10" pos:column="19"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="11" pos:column="5">apr_bucket_brigade<pos:position pos:line="11" pos:column="23"/></name> <modifier pos:line="11" pos:column="24">*<pos:position pos:line="11" pos:column="25"/></modifier></type><name pos:line="11" pos:column="25">input_brigade<pos:position pos:line="11" pos:column="38"/></name></decl>;<pos:position pos:line="11" pos:column="39"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="12" pos:column="5">apr_bucket_brigade<pos:position pos:line="12" pos:column="23"/></name> <modifier pos:line="12" pos:column="24">*<pos:position pos:line="12" pos:column="25"/></modifier></type><name pos:line="12" pos:column="25">output_brigade<pos:position pos:line="12" pos:column="39"/></name></decl>;<pos:position pos:line="12" pos:column="40"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="13" pos:column="5">ajp_msg_t<pos:position pos:line="13" pos:column="14"/></name> <modifier pos:line="13" pos:column="15">*<pos:position pos:line="13" pos:column="16"/></modifier></type><name pos:line="13" pos:column="16">msg<pos:position pos:line="13" pos:column="19"/></name></decl>;<pos:position pos:line="13" pos:column="20"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="14" pos:column="5">apr_size_t<pos:position pos:line="14" pos:column="15"/></name></type> <name pos:line="14" pos:column="16">bufsiz<pos:position pos:line="14" pos:column="22"/></name> <init pos:line="14" pos:column="23">= <expr><literal type="number" pos:line="14" pos:column="25">0<pos:position pos:line="14" pos:column="26"/></literal></expr></init></decl>;<pos:position pos:line="14" pos:column="27"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="15" pos:column="5">char<pos:position pos:line="15" pos:column="9"/></name> <modifier pos:line="15" pos:column="10">*<pos:position pos:line="15" pos:column="11"/></modifier></type><name pos:line="15" pos:column="11">buff<pos:position pos:line="15" pos:column="15"/></name></decl>;<pos:position pos:line="15" pos:column="16"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="16" pos:column="5">char<pos:position pos:line="16" pos:column="9"/></name> <modifier pos:line="16" pos:column="10">*<pos:position pos:line="16" pos:column="11"/></modifier></type><name pos:line="16" pos:column="11">send_body_chunk_buff<pos:position pos:line="16" pos:column="31"/></name></decl>;<pos:position pos:line="16" pos:column="32"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="17" pos:column="5">apr_uint16_t<pos:position pos:line="17" pos:column="17"/></name></type> <name pos:line="17" pos:column="18">size<pos:position pos:line="17" pos:column="22"/></name></decl>;<pos:position pos:line="17" pos:column="23"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="18" pos:column="5">apr_byte_t<pos:position pos:line="18" pos:column="15"/></name></type> <name pos:line="18" pos:column="16">conn_reuse<pos:position pos:line="18" pos:column="26"/></name> <init pos:line="18" pos:column="27">= <expr><literal type="number" pos:line="18" pos:column="29">0<pos:position pos:line="18" pos:column="30"/></literal></expr></init></decl>;<pos:position pos:line="18" pos:column="31"/></decl_stmt>
    <decl_stmt><decl><type><specifier pos:line="19" pos:column="5">const<pos:position pos:line="19" pos:column="10"/></specifier> <name pos:line="19" pos:column="11">char<pos:position pos:line="19" pos:column="15"/></name> <modifier pos:line="19" pos:column="16">*<pos:position pos:line="19" pos:column="17"/></modifier></type><name pos:line="19" pos:column="17">tenc<pos:position pos:line="19" pos:column="21"/></name></decl>;<pos:position pos:line="19" pos:column="22"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="20" pos:column="5">int<pos:position pos:line="20" pos:column="8"/></name></type> <name pos:line="20" pos:column="9">havebody<pos:position pos:line="20" pos:column="17"/></name> <init pos:line="20" pos:column="18">= <expr><literal type="number" pos:line="20" pos:column="20">1<pos:position pos:line="20" pos:column="21"/></literal></expr></init></decl>;<pos:position pos:line="20" pos:column="22"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="21" pos:column="5">int<pos:position pos:line="21" pos:column="8"/></name></type> <name pos:line="21" pos:column="9">output_failed<pos:position pos:line="21" pos:column="22"/></name> <init pos:line="21" pos:column="23">= <expr><literal type="number" pos:line="21" pos:column="25">0<pos:position pos:line="21" pos:column="26"/></literal></expr></init></decl>;<pos:position pos:line="21" pos:column="27"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="22" pos:column="5">int<pos:position pos:line="22" pos:column="8"/></name></type> <name pos:line="22" pos:column="9">backend_failed<pos:position pos:line="22" pos:column="23"/></name> <init pos:line="22" pos:column="24">= <expr><literal type="number" pos:line="22" pos:column="26">0<pos:position pos:line="22" pos:column="27"/></literal></expr></init></decl>;<pos:position pos:line="22" pos:column="28"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="23" pos:column="5">apr_off_t<pos:position pos:line="23" pos:column="14"/></name></type> <name pos:line="23" pos:column="15">bb_len<pos:position pos:line="23" pos:column="21"/></name></decl>;<pos:position pos:line="23" pos:column="22"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="24" pos:column="5">int<pos:position pos:line="24" pos:column="8"/></name></type> <name pos:line="24" pos:column="9">data_sent<pos:position pos:line="24" pos:column="18"/></name> <init pos:line="24" pos:column="19">= <expr><literal type="number" pos:line="24" pos:column="21">0<pos:position pos:line="24" pos:column="22"/></literal></expr></init></decl>;<pos:position pos:line="24" pos:column="23"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="25" pos:column="5">int<pos:position pos:line="25" pos:column="8"/></name></type> <name pos:line="25" pos:column="9">request_ended<pos:position pos:line="25" pos:column="22"/></name> <init pos:line="25" pos:column="23">= <expr><literal type="number" pos:line="25" pos:column="25">0<pos:position pos:line="25" pos:column="26"/></literal></expr></init></decl>;<pos:position pos:line="25" pos:column="27"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="26" pos:column="5">int<pos:position pos:line="26" pos:column="8"/></name></type> <name pos:line="26" pos:column="9">headers_sent<pos:position pos:line="26" pos:column="21"/></name> <init pos:line="26" pos:column="22">= <expr><literal type="number" pos:line="26" pos:column="24">0<pos:position pos:line="26" pos:column="25"/></literal></expr></init></decl>;<pos:position pos:line="26" pos:column="26"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="27" pos:column="5">int<pos:position pos:line="27" pos:column="8"/></name></type> <name pos:line="27" pos:column="9">rv<pos:position pos:line="27" pos:column="11"/></name> <init pos:line="27" pos:column="12">= <expr><literal type="number" pos:line="27" pos:column="14">0<pos:position pos:line="27" pos:column="15"/></literal></expr></init></decl>;<pos:position pos:line="27" pos:column="16"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="28" pos:column="5">apr_int32_t<pos:position pos:line="28" pos:column="16"/></name></type> <name pos:line="28" pos:column="17">conn_poll_fd<pos:position pos:line="28" pos:column="29"/></name></decl>;<pos:position pos:line="28" pos:column="30"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="29" pos:column="5">apr_pollfd_t<pos:position pos:line="29" pos:column="17"/></name> <modifier pos:line="29" pos:column="18">*<pos:position pos:line="29" pos:column="19"/></modifier></type><name pos:line="29" pos:column="19">conn_poll<pos:position pos:line="29" pos:column="28"/></name></decl>;<pos:position pos:line="29" pos:column="29"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="30" pos:column="5">proxy_server_conf<pos:position pos:line="30" pos:column="22"/></name> <modifier pos:line="30" pos:column="23">*<pos:position pos:line="30" pos:column="24"/></modifier></type><name pos:line="30" pos:column="24">psf<pos:position pos:line="30" pos:column="27"/></name> <init pos:line="30" pos:column="28">=
    <expr><call><name pos:line="31" pos:column="5">ap_get_module_config<pos:position pos:line="31" pos:column="25"/></name><argument_list pos:line="31" pos:column="25">(<argument><expr><name><name pos:line="31" pos:column="26">r<pos:position pos:line="31" pos:column="27"/></name><operator pos:line="31" pos:column="27">-&gt;<pos:position pos:line="31" pos:column="32"/></operator><name pos:line="31" pos:column="29">server<pos:position pos:line="31" pos:column="35"/></name><operator pos:line="31" pos:column="35">-&gt;<pos:position pos:line="31" pos:column="40"/></operator><name pos:line="31" pos:column="37">module_config<pos:position pos:line="31" pos:column="50"/></name></name></expr></argument>, <argument><expr><operator pos:line="31" pos:column="52">&amp;<pos:position pos:line="31" pos:column="57"/></operator><name pos:line="31" pos:column="53">proxy_module<pos:position pos:line="31" pos:column="65"/></name></expr></argument>)<pos:position pos:line="31" pos:column="66"/></argument_list></call></expr></init></decl>;<pos:position pos:line="31" pos:column="67"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="32" pos:column="5">apr_size_t<pos:position pos:line="32" pos:column="15"/></name></type> <name pos:line="32" pos:column="16">maxsize<pos:position pos:line="32" pos:column="23"/></name> <init pos:line="32" pos:column="24">= <expr><name pos:line="32" pos:column="26">AJP_MSG_BUFFER_SZ<pos:position pos:line="32" pos:column="43"/></name></expr></init></decl>;<pos:position pos:line="32" pos:column="44"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="33" pos:column="5">int<pos:position pos:line="33" pos:column="8"/></name></type> <name pos:line="33" pos:column="9">send_body<pos:position pos:line="33" pos:column="18"/></name> <init pos:line="33" pos:column="19">= <expr><literal type="number" pos:line="33" pos:column="21">0<pos:position pos:line="33" pos:column="22"/></literal></expr></init></decl>;<pos:position pos:line="33" pos:column="23"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="34" pos:column="5">apr_off_t<pos:position pos:line="34" pos:column="14"/></name></type> <name pos:line="34" pos:column="15">content_length<pos:position pos:line="34" pos:column="29"/></name> <init pos:line="34" pos:column="30">= <expr><literal type="number" pos:line="34" pos:column="32">0<pos:position pos:line="34" pos:column="33"/></literal></expr></init></decl>;<pos:position pos:line="34" pos:column="34"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="35" pos:column="5">int<pos:position pos:line="35" pos:column="8"/></name></type> <name pos:line="35" pos:column="9">original_status<pos:position pos:line="35" pos:column="24"/></name> <init pos:line="35" pos:column="25">= <expr><name><name pos:line="35" pos:column="27">r<pos:position pos:line="35" pos:column="28"/></name><operator pos:line="35" pos:column="28">-&gt;<pos:position pos:line="35" pos:column="33"/></operator><name pos:line="35" pos:column="30">status<pos:position pos:line="35" pos:column="36"/></name></name></expr></init></decl>;<pos:position pos:line="35" pos:column="37"/></decl_stmt>
    <decl_stmt><decl><type><specifier pos:line="36" pos:column="5">const<pos:position pos:line="36" pos:column="10"/></specifier> <name pos:line="36" pos:column="11">char<pos:position pos:line="36" pos:column="15"/></name> <modifier pos:line="36" pos:column="16">*<pos:position pos:line="36" pos:column="17"/></modifier></type><name pos:line="36" pos:column="17">original_status_line<pos:position pos:line="36" pos:column="37"/></name> <init pos:line="36" pos:column="38">= <expr><name><name pos:line="36" pos:column="40">r<pos:position pos:line="36" pos:column="41"/></name><operator pos:line="36" pos:column="41">-&gt;<pos:position pos:line="36" pos:column="46"/></operator><name pos:line="36" pos:column="43">status_line<pos:position pos:line="36" pos:column="54"/></name></name></expr></init></decl>;<pos:position pos:line="36" pos:column="55"/></decl_stmt>

    <if pos:line="38" pos:column="5">if <condition pos:line="38" pos:column="8">(<expr><name><name pos:line="38" pos:column="9">psf<pos:position pos:line="38" pos:column="12"/></name><operator pos:line="38" pos:column="12">-&gt;<pos:position pos:line="38" pos:column="17"/></operator><name pos:line="38" pos:column="14">io_buffer_size_set<pos:position pos:line="38" pos:column="32"/></name></name></expr>)<pos:position pos:line="38" pos:column="33"/></condition><then pos:line="38" pos:column="33">
       <block type="pseudo"><expr_stmt><expr><name pos:line="39" pos:column="8">maxsize<pos:position pos:line="39" pos:column="15"/></name> <operator pos:line="39" pos:column="16">=<pos:position pos:line="39" pos:column="17"/></operator> <name><name pos:line="39" pos:column="18">psf<pos:position pos:line="39" pos:column="21"/></name><operator pos:line="39" pos:column="21">-&gt;<pos:position pos:line="39" pos:column="26"/></operator><name pos:line="39" pos:column="23">io_buffer_size<pos:position pos:line="39" pos:column="37"/></name></name></expr>;<pos:position pos:line="39" pos:column="38"/></expr_stmt></block></then></if>
    <if pos:line="40" pos:column="5">if <condition pos:line="40" pos:column="8">(<expr><name pos:line="40" pos:column="9">maxsize<pos:position pos:line="40" pos:column="16"/></name> <operator pos:line="40" pos:column="17">&gt;<pos:position pos:line="40" pos:column="21"/></operator> <name pos:line="40" pos:column="19">AJP_MAX_BUFFER_SZ<pos:position pos:line="40" pos:column="36"/></name></expr>)<pos:position pos:line="40" pos:column="37"/></condition><then pos:line="40" pos:column="37">
       <block type="pseudo"><expr_stmt><expr><name pos:line="41" pos:column="8">maxsize<pos:position pos:line="41" pos:column="15"/></name> <operator pos:line="41" pos:column="16">=<pos:position pos:line="41" pos:column="17"/></operator> <name pos:line="41" pos:column="18">AJP_MAX_BUFFER_SZ<pos:position pos:line="41" pos:column="35"/></name></expr>;<pos:position pos:line="41" pos:column="36"/></expr_stmt></block></then>
    <elseif pos:line="42" pos:column="5">else <if pos:line="42" pos:column="10">if <condition pos:line="42" pos:column="13">(<expr><name pos:line="42" pos:column="14">maxsize<pos:position pos:line="42" pos:column="21"/></name> <operator pos:line="42" pos:column="22">&lt;<pos:position pos:line="42" pos:column="26"/></operator> <name pos:line="42" pos:column="24">AJP_MSG_BUFFER_SZ<pos:position pos:line="42" pos:column="41"/></name></expr>)<pos:position pos:line="42" pos:column="42"/></condition><then pos:line="42" pos:column="42">
       <block type="pseudo"><expr_stmt><expr><name pos:line="43" pos:column="8">maxsize<pos:position pos:line="43" pos:column="15"/></name> <operator pos:line="43" pos:column="16">=<pos:position pos:line="43" pos:column="17"/></operator> <name pos:line="43" pos:column="18">AJP_MSG_BUFFER_SZ<pos:position pos:line="43" pos:column="35"/></name></expr>;<pos:position pos:line="43" pos:column="36"/></expr_stmt></block></then></if></elseif></if>
    <expr_stmt><expr><name pos:line="44" pos:column="5">maxsize<pos:position pos:line="44" pos:column="12"/></name> <operator pos:line="44" pos:column="13">=<pos:position pos:line="44" pos:column="14"/></operator> <call><name pos:line="44" pos:column="15">APR_ALIGN<pos:position pos:line="44" pos:column="24"/></name><argument_list pos:line="44" pos:column="24">(<argument><expr><name pos:line="44" pos:column="25">maxsize<pos:position pos:line="44" pos:column="32"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="44" pos:column="34">1024<pos:position pos:line="44" pos:column="38"/></literal></expr></argument>)<pos:position pos:line="44" pos:column="39"/></argument_list></call></expr>;<pos:position pos:line="44" pos:column="40"/></expr_stmt>

    <comment type="block" pos:line="46" pos:column="5">/*
     * Send the AJP request to the remote server
     */</comment>

    <comment type="block" pos:line="50" pos:column="5">/* send request headers */</comment>
    <expr_stmt><expr><name pos:line="51" pos:column="5">status<pos:position pos:line="51" pos:column="11"/></name> <operator pos:line="51" pos:column="12">=<pos:position pos:line="51" pos:column="13"/></operator> <call><name pos:line="51" pos:column="14">ajp_send_header<pos:position pos:line="51" pos:column="29"/></name><argument_list pos:line="51" pos:column="29">(<argument><expr><name><name pos:line="51" pos:column="30">conn<pos:position pos:line="51" pos:column="34"/></name><operator pos:line="51" pos:column="34">-&gt;<pos:position pos:line="51" pos:column="39"/></operator><name pos:line="51" pos:column="36">sock<pos:position pos:line="51" pos:column="40"/></name></name></expr></argument>, <argument><expr><name pos:line="51" pos:column="42">r<pos:position pos:line="51" pos:column="43"/></name></expr></argument>, <argument><expr><name pos:line="51" pos:column="45">maxsize<pos:position pos:line="51" pos:column="52"/></name></expr></argument>, <argument><expr><name pos:line="51" pos:column="54">uri<pos:position pos:line="51" pos:column="57"/></name></expr></argument>)<pos:position pos:line="51" pos:column="58"/></argument_list></call></expr>;<pos:position pos:line="51" pos:column="59"/></expr_stmt>
    <if pos:line="52" pos:column="5">if <condition pos:line="52" pos:column="8">(<expr><name pos:line="52" pos:column="9">status<pos:position pos:line="52" pos:column="15"/></name> <operator pos:line="52" pos:column="16">!=<pos:position pos:line="52" pos:column="18"/></operator> <name pos:line="52" pos:column="19">APR_SUCCESS<pos:position pos:line="52" pos:column="30"/></name></expr>)<pos:position pos:line="52" pos:column="31"/></condition><then pos:line="52" pos:column="31"> <block pos:line="52" pos:column="32">{
        <expr_stmt><expr><name><name pos:line="53" pos:column="9">conn<pos:position pos:line="53" pos:column="13"/></name><operator pos:line="53" pos:column="13">-&gt;<pos:position pos:line="53" pos:column="18"/></operator><name pos:line="53" pos:column="15">close<pos:position pos:line="53" pos:column="20"/></name></name><operator pos:line="53" pos:column="20">++<pos:position pos:line="53" pos:column="22"/></operator></expr>;<pos:position pos:line="53" pos:column="23"/></expr_stmt>
        <expr_stmt><expr><call><name pos:line="54" pos:column="9">ap_log_rerror<pos:position pos:line="54" pos:column="22"/></name><argument_list pos:line="54" pos:column="22">(<argument><expr><name pos:line="54" pos:column="23">APLOG_MARK<pos:position pos:line="54" pos:column="33"/></name></expr></argument>, <argument><expr><name pos:line="54" pos:column="35">APLOG_ERR<pos:position pos:line="54" pos:column="44"/></name></expr></argument>, <argument><expr><name pos:line="54" pos:column="46">status<pos:position pos:line="54" pos:column="52"/></name></expr></argument>, <argument><expr><name pos:line="54" pos:column="54">r<pos:position pos:line="54" pos:column="55"/></name></expr></argument>, <argument><expr><call><name pos:line="54" pos:column="57">APLOGNO<pos:position pos:line="54" pos:column="64"/></name><argument_list pos:line="54" pos:column="64">(<argument><expr><literal type="number" pos:line="54" pos:column="65">00868<pos:position pos:line="54" pos:column="70"/></literal></expr></argument>)<pos:position pos:line="54" pos:column="71"/></argument_list></call>
                      <literal type="string" pos:line="55" pos:column="23">"request failed to %pI (%s)"<pos:position pos:line="55" pos:column="51"/></literal></expr></argument>,
                      <argument><expr><name><name pos:line="56" pos:column="23">conn<pos:position pos:line="56" pos:column="27"/></name><operator pos:line="56" pos:column="27">-&gt;<pos:position pos:line="56" pos:column="32"/></operator><name pos:line="56" pos:column="29">worker<pos:position pos:line="56" pos:column="35"/></name><operator pos:line="56" pos:column="35">-&gt;<pos:position pos:line="56" pos:column="40"/></operator><name pos:line="56" pos:column="37">cp<pos:position pos:line="56" pos:column="39"/></name><operator pos:line="56" pos:column="39">-&gt;<pos:position pos:line="56" pos:column="44"/></operator><name pos:line="56" pos:column="41">addr<pos:position pos:line="56" pos:column="45"/></name></name></expr></argument>,
                      <argument><expr><name><name pos:line="57" pos:column="23">conn<pos:position pos:line="57" pos:column="27"/></name><operator pos:line="57" pos:column="27">-&gt;<pos:position pos:line="57" pos:column="32"/></operator><name pos:line="57" pos:column="29">worker<pos:position pos:line="57" pos:column="35"/></name><operator pos:line="57" pos:column="35">-&gt;<pos:position pos:line="57" pos:column="40"/></operator><name pos:line="57" pos:column="37">s<pos:position pos:line="57" pos:column="38"/></name><operator pos:line="57" pos:column="38">-&gt;<pos:position pos:line="57" pos:column="43"/></operator><name pos:line="57" pos:column="40">hostname<pos:position pos:line="57" pos:column="48"/></name></name></expr></argument>)<pos:position pos:line="57" pos:column="49"/></argument_list></call></expr>;<pos:position pos:line="57" pos:column="50"/></expr_stmt>
        <if pos:line="58" pos:column="9">if <condition pos:line="58" pos:column="12">(<expr><name pos:line="58" pos:column="13">status<pos:position pos:line="58" pos:column="19"/></name> <operator pos:line="58" pos:column="20">==<pos:position pos:line="58" pos:column="22"/></operator> <name pos:line="58" pos:column="23">AJP_EOVERFLOW<pos:position pos:line="58" pos:column="36"/></name></expr>)<pos:position pos:line="58" pos:column="37"/></condition><then pos:line="58" pos:column="37">
            <block type="pseudo"><return pos:line="59" pos:column="13">return <expr><name pos:line="59" pos:column="20">HTTP_BAD_REQUEST<pos:position pos:line="59" pos:column="36"/></name></expr>;<pos:position pos:line="59" pos:column="37"/></return></block></then>
        <elseif pos:line="60" pos:column="9">else <if pos:line="60" pos:column="14">if  <condition pos:line="60" pos:column="18">(<expr><name pos:line="60" pos:column="19">status<pos:position pos:line="60" pos:column="25"/></name> <operator pos:line="60" pos:column="26">==<pos:position pos:line="60" pos:column="28"/></operator> <name pos:line="60" pos:column="29">AJP_EBAD_METHOD<pos:position pos:line="60" pos:column="44"/></name></expr>)<pos:position pos:line="60" pos:column="45"/></condition><then pos:line="60" pos:column="45"> <block pos:line="60" pos:column="46">{
            <return pos:line="61" pos:column="13">return <expr><name pos:line="61" pos:column="20">HTTP_NOT_IMPLEMENTED<pos:position pos:line="61" pos:column="40"/></name></expr>;<pos:position pos:line="61" pos:column="41"/></return>
        }<pos:position pos:line="62" pos:column="10"/></block></then></if></elseif> <else pos:line="62" pos:column="11">else <block pos:line="62" pos:column="16">{
            <comment type="block" pos:line="63" pos:column="13">/*
             * This is only non fatal when the method is idempotent. In this
             * case we can dare to retry it with a different worker if we are
             * a balancer member.
             */</comment>
            <if pos:line="68" pos:column="13">if <condition pos:line="68" pos:column="16">(<expr><call><name pos:line="68" pos:column="17">is_idempotent<pos:position pos:line="68" pos:column="30"/></name><argument_list pos:line="68" pos:column="30">(<argument><expr><name pos:line="68" pos:column="31">r<pos:position pos:line="68" pos:column="32"/></name></expr></argument>)<pos:position pos:line="68" pos:column="33"/></argument_list></call> <operator pos:line="68" pos:column="34">==<pos:position pos:line="68" pos:column="36"/></operator> <name pos:line="68" pos:column="37">METHOD_IDEMPOTENT<pos:position pos:line="68" pos:column="54"/></name></expr>)<pos:position pos:line="68" pos:column="55"/></condition><then pos:line="68" pos:column="55"> <block pos:line="68" pos:column="56">{
                <return pos:line="69" pos:column="17">return <expr><name pos:line="69" pos:column="24">HTTP_SERVICE_UNAVAILABLE<pos:position pos:line="69" pos:column="48"/></name></expr>;<pos:position pos:line="69" pos:column="49"/></return>
            }<pos:position pos:line="70" pos:column="14"/></block></then></if>
            <return pos:line="71" pos:column="13">return <expr><name pos:line="71" pos:column="20">HTTP_INTERNAL_SERVER_ERROR<pos:position pos:line="71" pos:column="46"/></name></expr>;<pos:position pos:line="71" pos:column="47"/></return>
        }<pos:position pos:line="72" pos:column="10"/></block></else></if>
    }<pos:position pos:line="73" pos:column="6"/></block></then></if>

    <comment type="block" pos:line="75" pos:column="5">/* allocate an AJP message to store the data of the buckets */</comment>
    <expr_stmt><expr><name pos:line="76" pos:column="5">bufsiz<pos:position pos:line="76" pos:column="11"/></name> <operator pos:line="76" pos:column="12">=<pos:position pos:line="76" pos:column="13"/></operator> <name pos:line="76" pos:column="14">maxsize<pos:position pos:line="76" pos:column="21"/></name></expr>;<pos:position pos:line="76" pos:column="22"/></expr_stmt>
    <expr_stmt><expr><name pos:line="77" pos:column="5">status<pos:position pos:line="77" pos:column="11"/></name> <operator pos:line="77" pos:column="12">=<pos:position pos:line="77" pos:column="13"/></operator> <call><name pos:line="77" pos:column="14">ajp_alloc_data_msg<pos:position pos:line="77" pos:column="32"/></name><argument_list pos:line="77" pos:column="32">(<argument><expr><name><name pos:line="77" pos:column="33">r<pos:position pos:line="77" pos:column="34"/></name><operator pos:line="77" pos:column="34">-&gt;<pos:position pos:line="77" pos:column="39"/></operator><name pos:line="77" pos:column="36">pool<pos:position pos:line="77" pos:column="40"/></name></name></expr></argument>, <argument><expr><operator pos:line="77" pos:column="42">&amp;<pos:position pos:line="77" pos:column="47"/></operator><name pos:line="77" pos:column="43">buff<pos:position pos:line="77" pos:column="47"/></name></expr></argument>, <argument><expr><operator pos:line="77" pos:column="49">&amp;<pos:position pos:line="77" pos:column="54"/></operator><name pos:line="77" pos:column="50">bufsiz<pos:position pos:line="77" pos:column="56"/></name></expr></argument>, <argument><expr><operator pos:line="77" pos:column="58">&amp;<pos:position pos:line="77" pos:column="63"/></operator><name pos:line="77" pos:column="59">msg<pos:position pos:line="77" pos:column="62"/></name></expr></argument>)<pos:position pos:line="77" pos:column="63"/></argument_list></call></expr>;<pos:position pos:line="77" pos:column="64"/></expr_stmt>
    <if pos:line="78" pos:column="5">if <condition pos:line="78" pos:column="8">(<expr><name pos:line="78" pos:column="9">status<pos:position pos:line="78" pos:column="15"/></name> <operator pos:line="78" pos:column="16">!=<pos:position pos:line="78" pos:column="18"/></operator> <name pos:line="78" pos:column="19">APR_SUCCESS<pos:position pos:line="78" pos:column="30"/></name></expr>)<pos:position pos:line="78" pos:column="31"/></condition><then pos:line="78" pos:column="31"> <block pos:line="78" pos:column="32">{
        <comment type="block" pos:line="79" pos:column="9">/* We had a failure: Close connection to backend */</comment>
        <expr_stmt><expr><name><name pos:line="80" pos:column="9">conn<pos:position pos:line="80" pos:column="13"/></name><operator pos:line="80" pos:column="13">-&gt;<pos:position pos:line="80" pos:column="18"/></operator><name pos:line="80" pos:column="15">close<pos:position pos:line="80" pos:column="20"/></name></name><operator pos:line="80" pos:column="20">++<pos:position pos:line="80" pos:column="22"/></operator></expr>;<pos:position pos:line="80" pos:column="23"/></expr_stmt>
        <expr_stmt><expr><call><name pos:line="81" pos:column="9">ap_log_rerror<pos:position pos:line="81" pos:column="22"/></name><argument_list pos:line="81" pos:column="22">(<argument><expr><name pos:line="81" pos:column="23">APLOG_MARK<pos:position pos:line="81" pos:column="33"/></name></expr></argument>, <argument><expr><name pos:line="81" pos:column="35">APLOG_DEBUG<pos:position pos:line="81" pos:column="46"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="81" pos:column="48">0<pos:position pos:line="81" pos:column="49"/></literal></expr></argument>, <argument><expr><name pos:line="81" pos:column="51">r<pos:position pos:line="81" pos:column="52"/></name></expr></argument>, <argument><expr><call><name pos:line="81" pos:column="54">APLOGNO<pos:position pos:line="81" pos:column="61"/></name><argument_list pos:line="81" pos:column="61">(<argument><expr><literal type="number" pos:line="81" pos:column="62">00869<pos:position pos:line="81" pos:column="67"/></literal></expr></argument>)<pos:position pos:line="81" pos:column="68"/></argument_list></call>
                      <literal type="string" pos:line="82" pos:column="23">"ajp_alloc_data_msg failed"<pos:position pos:line="82" pos:column="50"/></literal></expr></argument>)<pos:position pos:line="82" pos:column="51"/></argument_list></call></expr>;<pos:position pos:line="82" pos:column="52"/></expr_stmt>
        <return pos:line="83" pos:column="9">return <expr><name pos:line="83" pos:column="16">HTTP_INTERNAL_SERVER_ERROR<pos:position pos:line="83" pos:column="42"/></name></expr>;<pos:position pos:line="83" pos:column="43"/></return>
    }<pos:position pos:line="84" pos:column="6"/></block></then></if>

    <comment type="block" pos:line="86" pos:column="5">/* read the first bloc of data */</comment>
    <expr_stmt><expr><name pos:line="87" pos:column="5">input_brigade<pos:position pos:line="87" pos:column="18"/></name> <operator pos:line="87" pos:column="19">=<pos:position pos:line="87" pos:column="20"/></operator> <call><name pos:line="87" pos:column="21">apr_brigade_create<pos:position pos:line="87" pos:column="39"/></name><argument_list pos:line="87" pos:column="39">(<argument><expr><name pos:line="87" pos:column="40">p<pos:position pos:line="87" pos:column="41"/></name></expr></argument>, <argument><expr><name><name pos:line="87" pos:column="43">r<pos:position pos:line="87" pos:column="44"/></name><operator pos:line="87" pos:column="44">-&gt;<pos:position pos:line="87" pos:column="49"/></operator><name pos:line="87" pos:column="46">connection<pos:position pos:line="87" pos:column="56"/></name><operator pos:line="87" pos:column="56">-&gt;<pos:position pos:line="87" pos:column="61"/></operator><name pos:line="87" pos:column="58">bucket_alloc<pos:position pos:line="87" pos:column="70"/></name></name></expr></argument>)<pos:position pos:line="87" pos:column="71"/></argument_list></call></expr>;<pos:position pos:line="87" pos:column="72"/></expr_stmt>
    <expr_stmt><expr><name pos:line="88" pos:column="5">tenc<pos:position pos:line="88" pos:column="9"/></name> <operator pos:line="88" pos:column="10">=<pos:position pos:line="88" pos:column="11"/></operator> <call><name pos:line="88" pos:column="12">apr_table_get<pos:position pos:line="88" pos:column="25"/></name><argument_list pos:line="88" pos:column="25">(<argument><expr><name><name pos:line="88" pos:column="26">r<pos:position pos:line="88" pos:column="27"/></name><operator pos:line="88" pos:column="27">-&gt;<pos:position pos:line="88" pos:column="32"/></operator><name pos:line="88" pos:column="29">headers_in<pos:position pos:line="88" pos:column="39"/></name></name></expr></argument>, <argument><expr><literal type="string" pos:line="88" pos:column="41">"Transfer-Encoding"<pos:position pos:line="88" pos:column="60"/></literal></expr></argument>)<pos:position pos:line="88" pos:column="61"/></argument_list></call></expr>;<pos:position pos:line="88" pos:column="62"/></expr_stmt>
    <if pos:line="89" pos:column="5">if <condition pos:line="89" pos:column="8">(<expr><name pos:line="89" pos:column="9">tenc<pos:position pos:line="89" pos:column="13"/></name> <operator pos:line="89" pos:column="14">&amp;&amp;<pos:position pos:line="89" pos:column="24"/></operator> <operator pos:line="89" pos:column="17">(<pos:position pos:line="89" pos:column="18"/></operator><call><name pos:line="89" pos:column="18">strcasecmp<pos:position pos:line="89" pos:column="28"/></name><argument_list pos:line="89" pos:column="28">(<argument><expr><name pos:line="89" pos:column="29">tenc<pos:position pos:line="89" pos:column="33"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="89" pos:column="35">"chunked"<pos:position pos:line="89" pos:column="44"/></literal></expr></argument>)<pos:position pos:line="89" pos:column="45"/></argument_list></call> <operator pos:line="89" pos:column="46">==<pos:position pos:line="89" pos:column="48"/></operator> <literal type="number" pos:line="89" pos:column="49">0<pos:position pos:line="89" pos:column="50"/></literal><operator pos:line="89" pos:column="50">)<pos:position pos:line="89" pos:column="51"/></operator></expr>)<pos:position pos:line="89" pos:column="52"/></condition><then pos:line="89" pos:column="52"> <block pos:line="89" pos:column="53">{
        <comment type="block" pos:line="90" pos:column="9">/* The AJP protocol does not want body data yet */</comment>
        <expr_stmt><expr><call><name pos:line="91" pos:column="9">ap_log_rerror<pos:position pos:line="91" pos:column="22"/></name><argument_list pos:line="91" pos:column="22">(<argument><expr><name pos:line="91" pos:column="23">APLOG_MARK<pos:position pos:line="91" pos:column="33"/></name></expr></argument>, <argument><expr><name pos:line="91" pos:column="35">APLOG_DEBUG<pos:position pos:line="91" pos:column="46"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="91" pos:column="48">0<pos:position pos:line="91" pos:column="49"/></literal></expr></argument>, <argument><expr><name pos:line="91" pos:column="51">r<pos:position pos:line="91" pos:column="52"/></name></expr></argument>, <argument><expr><call><name pos:line="91" pos:column="54">APLOGNO<pos:position pos:line="91" pos:column="61"/></name><argument_list pos:line="91" pos:column="61">(<argument><expr><literal type="number" pos:line="91" pos:column="62">00870<pos:position pos:line="91" pos:column="67"/></literal></expr></argument>)<pos:position pos:line="91" pos:column="68"/></argument_list></call> <literal type="string" pos:line="91" pos:column="69">"request is chunked"<pos:position pos:line="91" pos:column="89"/></literal></expr></argument>)<pos:position pos:line="91" pos:column="90"/></argument_list></call></expr>;<pos:position pos:line="91" pos:column="91"/></expr_stmt>
    }<pos:position pos:line="92" pos:column="6"/></block></then> <else pos:line="92" pos:column="7">else <block pos:line="92" pos:column="12">{
        <comment type="block" pos:line="93" pos:column="9">/* Get client provided Content-Length header */</comment>
        <expr_stmt><expr><name pos:line="94" pos:column="9">content_length<pos:position pos:line="94" pos:column="23"/></name> <operator pos:line="94" pos:column="24">=<pos:position pos:line="94" pos:column="25"/></operator> <call><name pos:line="94" pos:column="26">get_content_length<pos:position pos:line="94" pos:column="44"/></name><argument_list pos:line="94" pos:column="44">(<argument><expr><name pos:line="94" pos:column="45">r<pos:position pos:line="94" pos:column="46"/></name></expr></argument>)<pos:position pos:line="94" pos:column="47"/></argument_list></call></expr>;<pos:position pos:line="94" pos:column="48"/></expr_stmt>
        <expr_stmt><expr><name pos:line="95" pos:column="9">status<pos:position pos:line="95" pos:column="15"/></name> <operator pos:line="95" pos:column="16">=<pos:position pos:line="95" pos:column="17"/></operator> <call><name pos:line="95" pos:column="18">ap_get_brigade<pos:position pos:line="95" pos:column="32"/></name><argument_list pos:line="95" pos:column="32">(<argument><expr><name><name pos:line="95" pos:column="33">r<pos:position pos:line="95" pos:column="34"/></name><operator pos:line="95" pos:column="34">-&gt;<pos:position pos:line="95" pos:column="39"/></operator><name pos:line="95" pos:column="36">input_filters<pos:position pos:line="95" pos:column="49"/></name></name></expr></argument>, <argument><expr><name pos:line="95" pos:column="51">input_brigade<pos:position pos:line="95" pos:column="64"/></name></expr></argument>,
                                <argument><expr><name pos:line="96" pos:column="33">AP_MODE_READBYTES<pos:position pos:line="96" pos:column="50"/></name></expr></argument>, <argument><expr><name pos:line="96" pos:column="52">APR_BLOCK_READ<pos:position pos:line="96" pos:column="66"/></name></expr></argument>,
                                <argument><expr><name pos:line="97" pos:column="33">maxsize<pos:position pos:line="97" pos:column="40"/></name> <operator pos:line="97" pos:column="41">-<pos:position pos:line="97" pos:column="42"/></operator> <name pos:line="97" pos:column="43">AJP_HEADER_SZ<pos:position pos:line="97" pos:column="56"/></name></expr></argument>)<pos:position pos:line="97" pos:column="57"/></argument_list></call></expr>;<pos:position pos:line="97" pos:column="58"/></expr_stmt>

        <if pos:line="99" pos:column="9">if <condition pos:line="99" pos:column="12">(<expr><name pos:line="99" pos:column="13">status<pos:position pos:line="99" pos:column="19"/></name> <operator pos:line="99" pos:column="20">!=<pos:position pos:line="99" pos:column="22"/></operator> <name pos:line="99" pos:column="23">APR_SUCCESS<pos:position pos:line="99" pos:column="34"/></name></expr>)<pos:position pos:line="99" pos:column="35"/></condition><then pos:line="99" pos:column="35"> <block pos:line="99" pos:column="36">{
            <comment type="block" pos:line="100" pos:column="13">/* We had a failure: Close connection to backend */</comment>
            <expr_stmt><expr><name><name pos:line="101" pos:column="13">conn<pos:position pos:line="101" pos:column="17"/></name><operator pos:line="101" pos:column="17">-&gt;<pos:position pos:line="101" pos:column="22"/></operator><name pos:line="101" pos:column="19">close<pos:position pos:line="101" pos:column="24"/></name></name><operator pos:line="101" pos:column="24">++<pos:position pos:line="101" pos:column="26"/></operator></expr>;<pos:position pos:line="101" pos:column="27"/></expr_stmt>
            <expr_stmt><expr><call><name pos:line="102" pos:column="13">ap_log_rerror<pos:position pos:line="102" pos:column="26"/></name><argument_list pos:line="102" pos:column="26">(<argument><expr><name pos:line="102" pos:column="27">APLOG_MARK<pos:position pos:line="102" pos:column="37"/></name></expr></argument>, <argument><expr><name pos:line="102" pos:column="39">APLOG_DEBUG<pos:position pos:line="102" pos:column="50"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="102" pos:column="52">0<pos:position pos:line="102" pos:column="53"/></literal></expr></argument>, <argument><expr><name pos:line="102" pos:column="55">r<pos:position pos:line="102" pos:column="56"/></name></expr></argument>, <argument><expr><call><name pos:line="102" pos:column="58">APLOGNO<pos:position pos:line="102" pos:column="65"/></name><argument_list pos:line="102" pos:column="65">(<argument><expr><literal type="number" pos:line="102" pos:column="66">00871<pos:position pos:line="102" pos:column="71"/></literal></expr></argument>)<pos:position pos:line="102" pos:column="72"/></argument_list></call>
                          <literal type="string" pos:line="103" pos:column="27">"ap_get_brigade failed"<pos:position pos:line="103" pos:column="50"/></literal></expr></argument>)<pos:position pos:line="103" pos:column="51"/></argument_list></call></expr>;<pos:position pos:line="103" pos:column="52"/></expr_stmt>
            <expr_stmt><expr><call><name pos:line="104" pos:column="13">apr_brigade_destroy<pos:position pos:line="104" pos:column="32"/></name><argument_list pos:line="104" pos:column="32">(<argument><expr><name pos:line="104" pos:column="33">input_brigade<pos:position pos:line="104" pos:column="46"/></name></expr></argument>)<pos:position pos:line="104" pos:column="47"/></argument_list></call></expr>;<pos:position pos:line="104" pos:column="48"/></expr_stmt>
            <return pos:line="105" pos:column="13">return <expr><name pos:line="105" pos:column="20">HTTP_BAD_REQUEST<pos:position pos:line="105" pos:column="36"/></name></expr>;<pos:position pos:line="105" pos:column="37"/></return>
        }<pos:position pos:line="106" pos:column="10"/></block></then></if>

        <comment type="block" pos:line="108" pos:column="9">/* have something */</comment>
        <if pos:line="109" pos:column="9">if <condition pos:line="109" pos:column="12">(<expr><call><name pos:line="109" pos:column="13">APR_BUCKET_IS_EOS<pos:position pos:line="109" pos:column="30"/></name><argument_list pos:line="109" pos:column="30">(<argument><expr><call><name pos:line="109" pos:column="31">APR_BRIGADE_LAST<pos:position pos:line="109" pos:column="47"/></name><argument_list pos:line="109" pos:column="47">(<argument><expr><name pos:line="109" pos:column="48">input_brigade<pos:position pos:line="109" pos:column="61"/></name></expr></argument>)<pos:position pos:line="109" pos:column="62"/></argument_list></call></expr></argument>)<pos:position pos:line="109" pos:column="63"/></argument_list></call></expr>)<pos:position pos:line="109" pos:column="64"/></condition><then pos:line="109" pos:column="64"> <block pos:line="109" pos:column="65">{
            <expr_stmt><expr><call><name pos:line="110" pos:column="13">ap_log_rerror<pos:position pos:line="110" pos:column="26"/></name><argument_list pos:line="110" pos:column="26">(<argument><expr><name pos:line="110" pos:column="27">APLOG_MARK<pos:position pos:line="110" pos:column="37"/></name></expr></argument>, <argument><expr><name pos:line="110" pos:column="39">APLOG_DEBUG<pos:position pos:line="110" pos:column="50"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="110" pos:column="52">0<pos:position pos:line="110" pos:column="53"/></literal></expr></argument>, <argument><expr><name pos:line="110" pos:column="55">r<pos:position pos:line="110" pos:column="56"/></name></expr></argument>, <argument><expr><call><name pos:line="110" pos:column="58">APLOGNO<pos:position pos:line="110" pos:column="65"/></name><argument_list pos:line="110" pos:column="65">(<argument><expr><literal type="number" pos:line="110" pos:column="66">00872<pos:position pos:line="110" pos:column="71"/></literal></expr></argument>)<pos:position pos:line="110" pos:column="72"/></argument_list></call> <literal type="string" pos:line="110" pos:column="73">"APR_BUCKET_IS_EOS"<pos:position pos:line="110" pos:column="92"/></literal></expr></argument>)<pos:position pos:line="110" pos:column="93"/></argument_list></call></expr>;<pos:position pos:line="110" pos:column="94"/></expr_stmt>
        }<pos:position pos:line="111" pos:column="10"/></block></then></if>

        <comment type="block" pos:line="113" pos:column="9">/* Try to send something */</comment>
        <expr_stmt><expr><call><name pos:line="114" pos:column="9">ap_log_rerror<pos:position pos:line="114" pos:column="22"/></name><argument_list pos:line="114" pos:column="22">(<argument><expr><name pos:line="114" pos:column="23">APLOG_MARK<pos:position pos:line="114" pos:column="33"/></name></expr></argument>, <argument><expr><name pos:line="114" pos:column="35">APLOG_DEBUG<pos:position pos:line="114" pos:column="46"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="114" pos:column="48">0<pos:position pos:line="114" pos:column="49"/></literal></expr></argument>, <argument><expr><name pos:line="114" pos:column="51">r<pos:position pos:line="114" pos:column="52"/></name></expr></argument>, <argument><expr><call><name pos:line="114" pos:column="54">APLOGNO<pos:position pos:line="114" pos:column="61"/></name><argument_list pos:line="114" pos:column="61">(<argument><expr><literal type="number" pos:line="114" pos:column="62">00873<pos:position pos:line="114" pos:column="67"/></literal></expr></argument>)<pos:position pos:line="114" pos:column="68"/></argument_list></call>
                      <literal type="string" pos:line="115" pos:column="23">"data to read (max %"<pos:position pos:line="115" pos:column="44"/></literal> <name pos:line="115" pos:column="45">APR_SIZE_T_FMT<pos:position pos:line="115" pos:column="59"/></name>
                      <literal type="string" pos:line="116" pos:column="23">" at %"<pos:position pos:line="116" pos:column="30"/></literal> <name pos:line="116" pos:column="31">APR_SIZE_T_FMT<pos:position pos:line="116" pos:column="45"/></name> <literal type="string" pos:line="116" pos:column="46">")"<pos:position pos:line="116" pos:column="49"/></literal></expr></argument>, <argument><expr><name pos:line="116" pos:column="51">bufsiz<pos:position pos:line="116" pos:column="57"/></name></expr></argument>, <argument><expr><name><name pos:line="116" pos:column="59">msg<pos:position pos:line="116" pos:column="62"/></name><operator pos:line="116" pos:column="62">-&gt;<pos:position pos:line="116" pos:column="67"/></operator><name pos:line="116" pos:column="64">pos<pos:position pos:line="116" pos:column="67"/></name></name></expr></argument>)<pos:position pos:line="116" pos:column="68"/></argument_list></call></expr>;<pos:position pos:line="116" pos:column="69"/></expr_stmt>

        <expr_stmt><expr><name pos:line="118" pos:column="9">status<pos:position pos:line="118" pos:column="15"/></name> <operator pos:line="118" pos:column="16">=<pos:position pos:line="118" pos:column="17"/></operator> <call><name pos:line="118" pos:column="18">apr_brigade_flatten<pos:position pos:line="118" pos:column="37"/></name><argument_list pos:line="118" pos:column="37">(<argument><expr><name pos:line="118" pos:column="38">input_brigade<pos:position pos:line="118" pos:column="51"/></name></expr></argument>, <argument><expr><name pos:line="118" pos:column="53">buff<pos:position pos:line="118" pos:column="57"/></name></expr></argument>, <argument><expr><operator pos:line="118" pos:column="59">&amp;<pos:position pos:line="118" pos:column="64"/></operator><name pos:line="118" pos:column="60">bufsiz<pos:position pos:line="118" pos:column="66"/></name></expr></argument>)<pos:position pos:line="118" pos:column="67"/></argument_list></call></expr>;<pos:position pos:line="118" pos:column="68"/></expr_stmt>
        <if pos:line="119" pos:column="9">if <condition pos:line="119" pos:column="12">(<expr><name pos:line="119" pos:column="13">status<pos:position pos:line="119" pos:column="19"/></name> <operator pos:line="119" pos:column="20">!=<pos:position pos:line="119" pos:column="22"/></operator> <name pos:line="119" pos:column="23">APR_SUCCESS<pos:position pos:line="119" pos:column="34"/></name></expr>)<pos:position pos:line="119" pos:column="35"/></condition><then pos:line="119" pos:column="35"> <block pos:line="119" pos:column="36">{
            <comment type="block" pos:line="120" pos:column="13">/* We had a failure: Close connection to backend */</comment>
            <expr_stmt><expr><name><name pos:line="121" pos:column="13">conn<pos:position pos:line="121" pos:column="17"/></name><operator pos:line="121" pos:column="17">-&gt;<pos:position pos:line="121" pos:column="22"/></operator><name pos:line="121" pos:column="19">close<pos:position pos:line="121" pos:column="24"/></name></name><operator pos:line="121" pos:column="24">++<pos:position pos:line="121" pos:column="26"/></operator></expr>;<pos:position pos:line="121" pos:column="27"/></expr_stmt>
            <expr_stmt><expr><call><name pos:line="122" pos:column="13">apr_brigade_destroy<pos:position pos:line="122" pos:column="32"/></name><argument_list pos:line="122" pos:column="32">(<argument><expr><name pos:line="122" pos:column="33">input_brigade<pos:position pos:line="122" pos:column="46"/></name></expr></argument>)<pos:position pos:line="122" pos:column="47"/></argument_list></call></expr>;<pos:position pos:line="122" pos:column="48"/></expr_stmt>
            <expr_stmt><expr><call><name pos:line="123" pos:column="13">ap_log_rerror<pos:position pos:line="123" pos:column="26"/></name><argument_list pos:line="123" pos:column="26">(<argument><expr><name pos:line="123" pos:column="27">APLOG_MARK<pos:position pos:line="123" pos:column="37"/></name></expr></argument>, <argument><expr><name pos:line="123" pos:column="39">APLOG_ERR<pos:position pos:line="123" pos:column="48"/></name></expr></argument>, <argument><expr><name pos:line="123" pos:column="50">status<pos:position pos:line="123" pos:column="56"/></name></expr></argument>, <argument><expr><name pos:line="123" pos:column="58">r<pos:position pos:line="123" pos:column="59"/></name></expr></argument>, <argument><expr><call><name pos:line="123" pos:column="61">APLOGNO<pos:position pos:line="123" pos:column="68"/></name><argument_list pos:line="123" pos:column="68">(<argument><expr><literal type="number" pos:line="123" pos:column="69">00874<pos:position pos:line="123" pos:column="74"/></literal></expr></argument>)<pos:position pos:line="123" pos:column="75"/></argument_list></call>
                          <literal type="string" pos:line="124" pos:column="27">"apr_brigade_flatten"<pos:position pos:line="124" pos:column="48"/></literal></expr></argument>)<pos:position pos:line="124" pos:column="49"/></argument_list></call></expr>;<pos:position pos:line="124" pos:column="50"/></expr_stmt>
            <return pos:line="125" pos:column="13">return <expr><name pos:line="125" pos:column="20">HTTP_INTERNAL_SERVER_ERROR<pos:position pos:line="125" pos:column="46"/></name></expr>;<pos:position pos:line="125" pos:column="47"/></return>
        }<pos:position pos:line="126" pos:column="10"/></block></then></if>
        <expr_stmt><expr><call><name pos:line="127" pos:column="9">apr_brigade_cleanup<pos:position pos:line="127" pos:column="28"/></name><argument_list pos:line="127" pos:column="28">(<argument><expr><name pos:line="127" pos:column="29">input_brigade<pos:position pos:line="127" pos:column="42"/></name></expr></argument>)<pos:position pos:line="127" pos:column="43"/></argument_list></call></expr>;<pos:position pos:line="127" pos:column="44"/></expr_stmt>

        <expr_stmt><expr><call><name pos:line="129" pos:column="9">ap_log_rerror<pos:position pos:line="129" pos:column="22"/></name><argument_list pos:line="129" pos:column="22">(<argument><expr><name pos:line="129" pos:column="23">APLOG_MARK<pos:position pos:line="129" pos:column="33"/></name></expr></argument>, <argument><expr><name pos:line="129" pos:column="35">APLOG_DEBUG<pos:position pos:line="129" pos:column="46"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="129" pos:column="48">0<pos:position pos:line="129" pos:column="49"/></literal></expr></argument>, <argument><expr><name pos:line="129" pos:column="51">r<pos:position pos:line="129" pos:column="52"/></name></expr></argument>, <argument><expr><call><name pos:line="129" pos:column="54">APLOGNO<pos:position pos:line="129" pos:column="61"/></name><argument_list pos:line="129" pos:column="61">(<argument><expr><literal type="number" pos:line="129" pos:column="62">00875<pos:position pos:line="129" pos:column="67"/></literal></expr></argument>)<pos:position pos:line="129" pos:column="68"/></argument_list></call>
                      <literal type="string" pos:line="130" pos:column="23">"got %"<pos:position pos:line="130" pos:column="30"/></literal> <name pos:line="130" pos:column="31">APR_SIZE_T_FMT<pos:position pos:line="130" pos:column="45"/></name> <literal type="string" pos:line="130" pos:column="46">" bytes of data"<pos:position pos:line="130" pos:column="62"/></literal></expr></argument>, <argument><expr><name pos:line="130" pos:column="64">bufsiz<pos:position pos:line="130" pos:column="70"/></name></expr></argument>)<pos:position pos:line="130" pos:column="71"/></argument_list></call></expr>;<pos:position pos:line="130" pos:column="72"/></expr_stmt>
        <if pos:line="131" pos:column="9">if <condition pos:line="131" pos:column="12">(<expr><name pos:line="131" pos:column="13">bufsiz<pos:position pos:line="131" pos:column="19"/></name> <operator pos:line="131" pos:column="20">&gt;<pos:position pos:line="131" pos:column="24"/></operator> <literal type="number" pos:line="131" pos:column="22">0<pos:position pos:line="131" pos:column="23"/></literal></expr>)<pos:position pos:line="131" pos:column="24"/></condition><then pos:line="131" pos:column="24"> <block pos:line="131" pos:column="25">{
            <expr_stmt><expr><name pos:line="132" pos:column="13">status<pos:position pos:line="132" pos:column="19"/></name> <operator pos:line="132" pos:column="20">=<pos:position pos:line="132" pos:column="21"/></operator> <call><name pos:line="132" pos:column="22">ajp_send_data_msg<pos:position pos:line="132" pos:column="39"/></name><argument_list pos:line="132" pos:column="39">(<argument><expr><name><name pos:line="132" pos:column="40">conn<pos:position pos:line="132" pos:column="44"/></name><operator pos:line="132" pos:column="44">-&gt;<pos:position pos:line="132" pos:column="49"/></operator><name pos:line="132" pos:column="46">sock<pos:position pos:line="132" pos:column="50"/></name></name></expr></argument>, <argument><expr><name pos:line="132" pos:column="52">msg<pos:position pos:line="132" pos:column="55"/></name></expr></argument>, <argument><expr><name pos:line="132" pos:column="57">bufsiz<pos:position pos:line="132" pos:column="63"/></name></expr></argument>)<pos:position pos:line="132" pos:column="64"/></argument_list></call></expr>;<pos:position pos:line="132" pos:column="65"/></expr_stmt>
            <expr_stmt><expr><call><name pos:line="133" pos:column="13">ajp_msg_log<pos:position pos:line="133" pos:column="24"/></name><argument_list pos:line="133" pos:column="24">(<argument><expr><name pos:line="133" pos:column="25">r<pos:position pos:line="133" pos:column="26"/></name></expr></argument>, <argument><expr><name pos:line="133" pos:column="28">msg<pos:position pos:line="133" pos:column="31"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="133" pos:column="33">"First ajp_send_data_msg: ajp_ilink_send packet dump"<pos:position pos:line="133" pos:column="86"/></literal></expr></argument>)<pos:position pos:line="133" pos:column="87"/></argument_list></call></expr>;<pos:position pos:line="133" pos:column="88"/></expr_stmt>
            <if pos:line="134" pos:column="13">if <condition pos:line="134" pos:column="16">(<expr><name pos:line="134" pos:column="17">status<pos:position pos:line="134" pos:column="23"/></name> <operator pos:line="134" pos:column="24">!=<pos:position pos:line="134" pos:column="26"/></operator> <name pos:line="134" pos:column="27">APR_SUCCESS<pos:position pos:line="134" pos:column="38"/></name></expr>)<pos:position pos:line="134" pos:column="39"/></condition><then pos:line="134" pos:column="39"> <block pos:line="134" pos:column="40">{
                <comment type="block" pos:line="135" pos:column="17">/* We had a failure: Close connection to backend */</comment>
                <expr_stmt><expr><name><name pos:line="136" pos:column="17">conn<pos:position pos:line="136" pos:column="21"/></name><operator pos:line="136" pos:column="21">-&gt;<pos:position pos:line="136" pos:column="26"/></operator><name pos:line="136" pos:column="23">close<pos:position pos:line="136" pos:column="28"/></name></name><operator pos:line="136" pos:column="28">++<pos:position pos:line="136" pos:column="30"/></operator></expr>;<pos:position pos:line="136" pos:column="31"/></expr_stmt>
                <expr_stmt><expr><call><name pos:line="137" pos:column="17">apr_brigade_destroy<pos:position pos:line="137" pos:column="36"/></name><argument_list pos:line="137" pos:column="36">(<argument><expr><name pos:line="137" pos:column="37">input_brigade<pos:position pos:line="137" pos:column="50"/></name></expr></argument>)<pos:position pos:line="137" pos:column="51"/></argument_list></call></expr>;<pos:position pos:line="137" pos:column="52"/></expr_stmt>
                <expr_stmt><expr><call><name pos:line="138" pos:column="17">ap_log_rerror<pos:position pos:line="138" pos:column="30"/></name><argument_list pos:line="138" pos:column="30">(<argument><expr><name pos:line="138" pos:column="31">APLOG_MARK<pos:position pos:line="138" pos:column="41"/></name></expr></argument>, <argument><expr><name pos:line="138" pos:column="43">APLOG_ERR<pos:position pos:line="138" pos:column="52"/></name></expr></argument>, <argument><expr><name pos:line="138" pos:column="54">status<pos:position pos:line="138" pos:column="60"/></name></expr></argument>, <argument><expr><name pos:line="138" pos:column="62">r<pos:position pos:line="138" pos:column="63"/></name></expr></argument>, <argument><expr><call><name pos:line="138" pos:column="65">APLOGNO<pos:position pos:line="138" pos:column="72"/></name><argument_list pos:line="138" pos:column="72">(<argument><expr><literal type="number" pos:line="138" pos:column="73">00876<pos:position pos:line="138" pos:column="78"/></literal></expr></argument>)<pos:position pos:line="138" pos:column="79"/></argument_list></call>
                              <literal type="string" pos:line="139" pos:column="31">"send failed to %pI (%s)"<pos:position pos:line="139" pos:column="56"/></literal></expr></argument>,
                              <argument><expr><name><name pos:line="140" pos:column="31">conn<pos:position pos:line="140" pos:column="35"/></name><operator pos:line="140" pos:column="35">-&gt;<pos:position pos:line="140" pos:column="40"/></operator><name pos:line="140" pos:column="37">worker<pos:position pos:line="140" pos:column="43"/></name><operator pos:line="140" pos:column="43">-&gt;<pos:position pos:line="140" pos:column="48"/></operator><name pos:line="140" pos:column="45">cp<pos:position pos:line="140" pos:column="47"/></name><operator pos:line="140" pos:column="47">-&gt;<pos:position pos:line="140" pos:column="52"/></operator><name pos:line="140" pos:column="49">addr<pos:position pos:line="140" pos:column="53"/></name></name></expr></argument>,
                              <argument><expr><name><name pos:line="141" pos:column="31">conn<pos:position pos:line="141" pos:column="35"/></name><operator pos:line="141" pos:column="35">-&gt;<pos:position pos:line="141" pos:column="40"/></operator><name pos:line="141" pos:column="37">worker<pos:position pos:line="141" pos:column="43"/></name><operator pos:line="141" pos:column="43">-&gt;<pos:position pos:line="141" pos:column="48"/></operator><name pos:line="141" pos:column="45">s<pos:position pos:line="141" pos:column="46"/></name><operator pos:line="141" pos:column="46">-&gt;<pos:position pos:line="141" pos:column="51"/></operator><name pos:line="141" pos:column="48">hostname<pos:position pos:line="141" pos:column="56"/></name></name></expr></argument>)<pos:position pos:line="141" pos:column="57"/></argument_list></call></expr>;<pos:position pos:line="141" pos:column="58"/></expr_stmt>
                <comment type="block" pos:line="142" pos:column="17">/*
                 * It is fatal when we failed to send a (part) of the request
                 * body.
                 */</comment>
                <return pos:line="146" pos:column="17">return <expr><name pos:line="146" pos:column="24">HTTP_INTERNAL_SERVER_ERROR<pos:position pos:line="146" pos:column="50"/></name></expr>;<pos:position pos:line="146" pos:column="51"/></return>
            }<pos:position pos:line="147" pos:column="14"/></block></then></if>
            <expr_stmt><expr><name><name pos:line="148" pos:column="13">conn<pos:position pos:line="148" pos:column="17"/></name><operator pos:line="148" pos:column="17">-&gt;<pos:position pos:line="148" pos:column="22"/></operator><name pos:line="148" pos:column="19">worker<pos:position pos:line="148" pos:column="25"/></name><operator pos:line="148" pos:column="25">-&gt;<pos:position pos:line="148" pos:column="30"/></operator><name pos:line="148" pos:column="27">s<pos:position pos:line="148" pos:column="28"/></name><operator pos:line="148" pos:column="28">-&gt;<pos:position pos:line="148" pos:column="33"/></operator><name pos:line="148" pos:column="30">transferred<pos:position pos:line="148" pos:column="41"/></name></name> <operator pos:line="148" pos:column="42">+=<pos:position pos:line="148" pos:column="44"/></operator> <name pos:line="148" pos:column="45">bufsiz<pos:position pos:line="148" pos:column="51"/></name></expr>;<pos:position pos:line="148" pos:column="52"/></expr_stmt>
            <expr_stmt><expr><name pos:line="149" pos:column="13">send_body<pos:position pos:line="149" pos:column="22"/></name> <operator pos:line="149" pos:column="23">=<pos:position pos:line="149" pos:column="24"/></operator> <literal type="number" pos:line="149" pos:column="25">1<pos:position pos:line="149" pos:column="26"/></literal></expr>;<pos:position pos:line="149" pos:column="27"/></expr_stmt>
        }<pos:position pos:line="150" pos:column="10"/></block></then>
        <elseif pos:line="151" pos:column="9">else <if pos:line="151" pos:column="14">if <condition pos:line="151" pos:column="17">(<expr><name pos:line="151" pos:column="18">content_length<pos:position pos:line="151" pos:column="32"/></name> <operator pos:line="151" pos:column="33">&gt;<pos:position pos:line="151" pos:column="37"/></operator> <literal type="number" pos:line="151" pos:column="35">0<pos:position pos:line="151" pos:column="36"/></literal></expr>)<pos:position pos:line="151" pos:column="37"/></condition><then pos:line="151" pos:column="37"> <block pos:line="151" pos:column="38">{
            <expr_stmt><expr><call><name pos:line="152" pos:column="13">ap_log_rerror<pos:position pos:line="152" pos:column="26"/></name><argument_list pos:line="152" pos:column="26">(<argument><expr><name pos:line="152" pos:column="27">APLOG_MARK<pos:position pos:line="152" pos:column="37"/></name></expr></argument>, <argument><expr><name pos:line="152" pos:column="39">APLOG_ERR<pos:position pos:line="152" pos:column="48"/></name></expr></argument>, <argument><expr><name pos:line="152" pos:column="50">status<pos:position pos:line="152" pos:column="56"/></name></expr></argument>, <argument><expr><name pos:line="152" pos:column="58">r<pos:position pos:line="152" pos:column="59"/></name></expr></argument>, <argument><expr><call><name pos:line="152" pos:column="61">APLOGNO<pos:position pos:line="152" pos:column="68"/></name><argument_list pos:line="152" pos:column="68">(<argument><expr><literal type="number" pos:line="152" pos:column="69">00877<pos:position pos:line="152" pos:column="74"/></literal></expr></argument>)<pos:position pos:line="152" pos:column="75"/></argument_list></call>
                          <literal type="string" pos:line="153" pos:column="27">"read zero bytes, expecting"<pos:position pos:line="153" pos:column="55"/></literal>
                          <literal type="string" pos:line="154" pos:column="27">" %"<pos:position pos:line="154" pos:column="31"/></literal> <name pos:line="154" pos:column="32">APR_OFF_T_FMT<pos:position pos:line="154" pos:column="45"/></name> <literal type="string" pos:line="154" pos:column="46">" bytes"<pos:position pos:line="154" pos:column="54"/></literal></expr></argument>,
                          <argument><expr><name pos:line="155" pos:column="27">content_length<pos:position pos:line="155" pos:column="41"/></name></expr></argument>)<pos:position pos:line="155" pos:column="42"/></argument_list></call></expr>;<pos:position pos:line="155" pos:column="43"/></expr_stmt>
            <comment type="block" pos:line="156" pos:column="13">/*
             * We can only get here if the client closed the connection
             * to us without sending the body.
             * Now the connection is in the wrong state on the backend.
             * Sending an empty data msg doesn't help either as it does
             * not move this connection to the correct state on the backend
             * for later resusage by the next request again.
             * Close it to clean things up.
             */</comment>
            <expr_stmt><expr><name><name pos:line="165" pos:column="13">conn<pos:position pos:line="165" pos:column="17"/></name><operator pos:line="165" pos:column="17">-&gt;<pos:position pos:line="165" pos:column="22"/></operator><name pos:line="165" pos:column="19">close<pos:position pos:line="165" pos:column="24"/></name></name><operator pos:line="165" pos:column="24">++<pos:position pos:line="165" pos:column="26"/></operator></expr>;<pos:position pos:line="165" pos:column="27"/></expr_stmt>
            <return pos:line="166" pos:column="13">return <expr><name pos:line="166" pos:column="20">HTTP_BAD_REQUEST<pos:position pos:line="166" pos:column="36"/></name></expr>;<pos:position pos:line="166" pos:column="37"/></return>
        }<pos:position pos:line="167" pos:column="10"/></block></then></if></elseif></if>
    }<pos:position pos:line="168" pos:column="6"/></block></else></if>

    <comment type="block" pos:line="170" pos:column="5">/* read the response */</comment>
    <expr_stmt><expr><name><name pos:line="171" pos:column="5">conn<pos:position pos:line="171" pos:column="9"/></name><operator pos:line="171" pos:column="9">-&gt;<pos:position pos:line="171" pos:column="14"/></operator><name pos:line="171" pos:column="11">data<pos:position pos:line="171" pos:column="15"/></name></name> <operator pos:line="171" pos:column="16">=<pos:position pos:line="171" pos:column="17"/></operator> <name pos:line="171" pos:column="18">NULL<pos:position pos:line="171" pos:column="22"/></name></expr>;<pos:position pos:line="171" pos:column="23"/></expr_stmt>
    <expr_stmt><expr><name pos:line="172" pos:column="5">status<pos:position pos:line="172" pos:column="11"/></name> <operator pos:line="172" pos:column="12">=<pos:position pos:line="172" pos:column="13"/></operator> <call><name pos:line="172" pos:column="14">ajp_read_header<pos:position pos:line="172" pos:column="29"/></name><argument_list pos:line="172" pos:column="29">(<argument><expr><name><name pos:line="172" pos:column="30">conn<pos:position pos:line="172" pos:column="34"/></name><operator pos:line="172" pos:column="34">-&gt;<pos:position pos:line="172" pos:column="39"/></operator><name pos:line="172" pos:column="36">sock<pos:position pos:line="172" pos:column="40"/></name></name></expr></argument>, <argument><expr><name pos:line="172" pos:column="42">r<pos:position pos:line="172" pos:column="43"/></name></expr></argument>, <argument><expr><name pos:line="172" pos:column="45">maxsize<pos:position pos:line="172" pos:column="52"/></name></expr></argument>,
                             <argument><expr><operator pos:line="173" pos:column="30">(<pos:position pos:line="173" pos:column="31"/></operator><name pos:line="173" pos:column="31">ajp_msg_t<pos:position pos:line="173" pos:column="40"/></name> <operator pos:line="173" pos:column="41">*<pos:position pos:line="173" pos:column="42"/></operator><operator pos:line="173" pos:column="42">*<pos:position pos:line="173" pos:column="43"/></operator><operator pos:line="173" pos:column="43">)<pos:position pos:line="173" pos:column="44"/></operator><operator pos:line="173" pos:column="44">&amp;<pos:position pos:line="173" pos:column="49"/></operator><operator pos:line="173" pos:column="45">(<pos:position pos:line="173" pos:column="46"/></operator><name><name pos:line="173" pos:column="46">conn<pos:position pos:line="173" pos:column="50"/></name><operator pos:line="173" pos:column="50">-&gt;<pos:position pos:line="173" pos:column="55"/></operator><name pos:line="173" pos:column="52">data<pos:position pos:line="173" pos:column="56"/></name></name><operator pos:line="173" pos:column="56">)<pos:position pos:line="173" pos:column="57"/></operator></expr></argument>)<pos:position pos:line="173" pos:column="58"/></argument_list></call></expr>;<pos:position pos:line="173" pos:column="59"/></expr_stmt>
    <if pos:line="174" pos:column="5">if <condition pos:line="174" pos:column="8">(<expr><name pos:line="174" pos:column="9">status<pos:position pos:line="174" pos:column="15"/></name> <operator pos:line="174" pos:column="16">!=<pos:position pos:line="174" pos:column="18"/></operator> <name pos:line="174" pos:column="19">APR_SUCCESS<pos:position pos:line="174" pos:column="30"/></name></expr>)<pos:position pos:line="174" pos:column="31"/></condition><then pos:line="174" pos:column="31"> <block pos:line="174" pos:column="32">{
        <comment type="block" pos:line="175" pos:column="9">/* We had a failure: Close connection to backend */</comment>
        <expr_stmt><expr><name><name pos:line="176" pos:column="9">conn<pos:position pos:line="176" pos:column="13"/></name><operator pos:line="176" pos:column="13">-&gt;<pos:position pos:line="176" pos:column="18"/></operator><name pos:line="176" pos:column="15">close<pos:position pos:line="176" pos:column="20"/></name></name><operator pos:line="176" pos:column="20">++<pos:position pos:line="176" pos:column="22"/></operator></expr>;<pos:position pos:line="176" pos:column="23"/></expr_stmt>
        <expr_stmt><expr><call><name pos:line="177" pos:column="9">apr_brigade_destroy<pos:position pos:line="177" pos:column="28"/></name><argument_list pos:line="177" pos:column="28">(<argument><expr><name pos:line="177" pos:column="29">input_brigade<pos:position pos:line="177" pos:column="42"/></name></expr></argument>)<pos:position pos:line="177" pos:column="43"/></argument_list></call></expr>;<pos:position pos:line="177" pos:column="44"/></expr_stmt>
        <expr_stmt><expr><call><name pos:line="178" pos:column="9">ap_log_rerror<pos:position pos:line="178" pos:column="22"/></name><argument_list pos:line="178" pos:column="22">(<argument><expr><name pos:line="178" pos:column="23">APLOG_MARK<pos:position pos:line="178" pos:column="33"/></name></expr></argument>, <argument><expr><name pos:line="178" pos:column="35">APLOG_ERR<pos:position pos:line="178" pos:column="44"/></name></expr></argument>, <argument><expr><name pos:line="178" pos:column="46">status<pos:position pos:line="178" pos:column="52"/></name></expr></argument>, <argument><expr><name pos:line="178" pos:column="54">r<pos:position pos:line="178" pos:column="55"/></name></expr></argument>, <argument><expr><call><name pos:line="178" pos:column="57">APLOGNO<pos:position pos:line="178" pos:column="64"/></name><argument_list pos:line="178" pos:column="64">(<argument><expr><literal type="number" pos:line="178" pos:column="65">00878<pos:position pos:line="178" pos:column="70"/></literal></expr></argument>)<pos:position pos:line="178" pos:column="71"/></argument_list></call>
                      <literal type="string" pos:line="179" pos:column="23">"read response failed from %pI (%s)"<pos:position pos:line="179" pos:column="59"/></literal></expr></argument>,
                      <argument><expr><name><name pos:line="180" pos:column="23">conn<pos:position pos:line="180" pos:column="27"/></name><operator pos:line="180" pos:column="27">-&gt;<pos:position pos:line="180" pos:column="32"/></operator><name pos:line="180" pos:column="29">worker<pos:position pos:line="180" pos:column="35"/></name><operator pos:line="180" pos:column="35">-&gt;<pos:position pos:line="180" pos:column="40"/></operator><name pos:line="180" pos:column="37">cp<pos:position pos:line="180" pos:column="39"/></name><operator pos:line="180" pos:column="39">-&gt;<pos:position pos:line="180" pos:column="44"/></operator><name pos:line="180" pos:column="41">addr<pos:position pos:line="180" pos:column="45"/></name></name></expr></argument>,
                      <argument><expr><name><name pos:line="181" pos:column="23">conn<pos:position pos:line="181" pos:column="27"/></name><operator pos:line="181" pos:column="27">-&gt;<pos:position pos:line="181" pos:column="32"/></operator><name pos:line="181" pos:column="29">worker<pos:position pos:line="181" pos:column="35"/></name><operator pos:line="181" pos:column="35">-&gt;<pos:position pos:line="181" pos:column="40"/></operator><name pos:line="181" pos:column="37">s<pos:position pos:line="181" pos:column="38"/></name><operator pos:line="181" pos:column="38">-&gt;<pos:position pos:line="181" pos:column="43"/></operator><name pos:line="181" pos:column="40">hostname<pos:position pos:line="181" pos:column="48"/></name></name></expr></argument>)<pos:position pos:line="181" pos:column="49"/></argument_list></call></expr>;<pos:position pos:line="181" pos:column="50"/></expr_stmt>

        <comment type="block" pos:line="183" pos:column="9">/* If we had a successful cping/cpong and then a timeout
         * we assume it is a request that cause a back-end timeout,
         * but doesn't affect the whole worker.
         */</comment>
        <if pos:line="187" pos:column="9">if <condition pos:line="187" pos:column="12">(<expr><call><name pos:line="187" pos:column="13">APR_STATUS_IS_TIMEUP<pos:position pos:line="187" pos:column="33"/></name><argument_list pos:line="187" pos:column="33">(<argument><expr><name pos:line="187" pos:column="34">status<pos:position pos:line="187" pos:column="40"/></name></expr></argument>)<pos:position pos:line="187" pos:column="41"/></argument_list></call> <operator pos:line="187" pos:column="42">&amp;&amp;<pos:position pos:line="187" pos:column="52"/></operator> <name><name pos:line="187" pos:column="45">conn<pos:position pos:line="187" pos:column="49"/></name><operator pos:line="187" pos:column="49">-&gt;<pos:position pos:line="187" pos:column="54"/></operator><name pos:line="187" pos:column="51">worker<pos:position pos:line="187" pos:column="57"/></name><operator pos:line="187" pos:column="57">-&gt;<pos:position pos:line="187" pos:column="62"/></operator><name pos:line="187" pos:column="59">s<pos:position pos:line="187" pos:column="60"/></name><operator pos:line="187" pos:column="60">-&gt;<pos:position pos:line="187" pos:column="65"/></operator><name pos:line="187" pos:column="62">ping_timeout_set<pos:position pos:line="187" pos:column="78"/></name></name></expr>)<pos:position pos:line="187" pos:column="79"/></condition><then pos:line="187" pos:column="79"> <block pos:line="187" pos:column="80">{
            <return pos:line="188" pos:column="13">return <expr><name pos:line="188" pos:column="20">HTTP_GATEWAY_TIME_OUT<pos:position pos:line="188" pos:column="41"/></name></expr>;<pos:position pos:line="188" pos:column="42"/></return>
        }<pos:position pos:line="189" pos:column="10"/></block></then></if>

        <comment type="block" pos:line="191" pos:column="9">/*
         * This is only non fatal when we have not sent (parts) of a possible
         * request body so far (we do not store it and thus cannot send it
         * again) and the method is idempotent. In this case we can dare to
         * retry it with a different worker if we are a balancer member.
         */</comment>
        <if pos:line="197" pos:column="9">if <condition pos:line="197" pos:column="12">(<expr><operator pos:line="197" pos:column="13">!<pos:position pos:line="197" pos:column="14"/></operator><name pos:line="197" pos:column="14">send_body<pos:position pos:line="197" pos:column="23"/></name> <operator pos:line="197" pos:column="24">&amp;&amp;<pos:position pos:line="197" pos:column="34"/></operator> <operator pos:line="197" pos:column="27">(<pos:position pos:line="197" pos:column="28"/></operator><call><name pos:line="197" pos:column="28">is_idempotent<pos:position pos:line="197" pos:column="41"/></name><argument_list pos:line="197" pos:column="41">(<argument><expr><name pos:line="197" pos:column="42">r<pos:position pos:line="197" pos:column="43"/></name></expr></argument>)<pos:position pos:line="197" pos:column="44"/></argument_list></call> <operator pos:line="197" pos:column="45">==<pos:position pos:line="197" pos:column="47"/></operator> <name pos:line="197" pos:column="48">METHOD_IDEMPOTENT<pos:position pos:line="197" pos:column="65"/></name><operator pos:line="197" pos:column="65">)<pos:position pos:line="197" pos:column="66"/></operator></expr>)<pos:position pos:line="197" pos:column="67"/></condition><then pos:line="197" pos:column="67"> <block pos:line="197" pos:column="68">{
            <return pos:line="198" pos:column="13">return <expr><name pos:line="198" pos:column="20">HTTP_SERVICE_UNAVAILABLE<pos:position pos:line="198" pos:column="44"/></name></expr>;<pos:position pos:line="198" pos:column="45"/></return>
        }<pos:position pos:line="199" pos:column="10"/></block></then></if>
        <return pos:line="200" pos:column="9">return <expr><name pos:line="200" pos:column="16">HTTP_INTERNAL_SERVER_ERROR<pos:position pos:line="200" pos:column="42"/></name></expr>;<pos:position pos:line="200" pos:column="43"/></return>
    }<pos:position pos:line="201" pos:column="6"/></block></then></if>
    <comment type="block" pos:line="202" pos:column="5">/* parse the reponse */</comment>
    <expr_stmt><expr><name pos:line="203" pos:column="5">result<pos:position pos:line="203" pos:column="11"/></name> <operator pos:line="203" pos:column="12">=<pos:position pos:line="203" pos:column="13"/></operator> <call><name pos:line="203" pos:column="14">ajp_parse_type<pos:position pos:line="203" pos:column="28"/></name><argument_list pos:line="203" pos:column="28">(<argument><expr><name pos:line="203" pos:column="29">r<pos:position pos:line="203" pos:column="30"/></name></expr></argument>, <argument><expr><name><name pos:line="203" pos:column="32">conn<pos:position pos:line="203" pos:column="36"/></name><operator pos:line="203" pos:column="36">-&gt;<pos:position pos:line="203" pos:column="41"/></operator><name pos:line="203" pos:column="38">data<pos:position pos:line="203" pos:column="42"/></name></name></expr></argument>)<pos:position pos:line="203" pos:column="43"/></argument_list></call></expr>;<pos:position pos:line="203" pos:column="44"/></expr_stmt>
    <expr_stmt><expr><name pos:line="204" pos:column="5">output_brigade<pos:position pos:line="204" pos:column="19"/></name> <operator pos:line="204" pos:column="20">=<pos:position pos:line="204" pos:column="21"/></operator> <call><name pos:line="204" pos:column="22">apr_brigade_create<pos:position pos:line="204" pos:column="40"/></name><argument_list pos:line="204" pos:column="40">(<argument><expr><name pos:line="204" pos:column="41">p<pos:position pos:line="204" pos:column="42"/></name></expr></argument>, <argument><expr><name><name pos:line="204" pos:column="44">r<pos:position pos:line="204" pos:column="45"/></name><operator pos:line="204" pos:column="45">-&gt;<pos:position pos:line="204" pos:column="50"/></operator><name pos:line="204" pos:column="47">connection<pos:position pos:line="204" pos:column="57"/></name><operator pos:line="204" pos:column="57">-&gt;<pos:position pos:line="204" pos:column="62"/></operator><name pos:line="204" pos:column="59">bucket_alloc<pos:position pos:line="204" pos:column="71"/></name></name></expr></argument>)<pos:position pos:line="204" pos:column="72"/></argument_list></call></expr>;<pos:position pos:line="204" pos:column="73"/></expr_stmt>

    <comment type="block" pos:line="206" pos:column="5">/*
     * Prepare apr_pollfd_t struct for possible later check if there is currently
     * data available from the backend (do not flush response to client)
     * or not (flush response to client)
     */</comment>
    <expr_stmt><expr><name pos:line="211" pos:column="5">conn_poll<pos:position pos:line="211" pos:column="14"/></name> <operator pos:line="211" pos:column="15">=<pos:position pos:line="211" pos:column="16"/></operator> <call><name pos:line="211" pos:column="17">apr_pcalloc<pos:position pos:line="211" pos:column="28"/></name><argument_list pos:line="211" pos:column="28">(<argument><expr><name pos:line="211" pos:column="29">p<pos:position pos:line="211" pos:column="30"/></name></expr></argument>, <argument><expr><sizeof pos:line="211" pos:column="32">sizeof<argument_list pos:line="211" pos:column="38">(<argument><expr><name pos:line="211" pos:column="39">apr_pollfd_t<pos:position pos:line="211" pos:column="51"/></name></expr></argument>)<pos:position pos:line="211" pos:column="52"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="211" pos:column="53"/></argument_list></call></expr>;<pos:position pos:line="211" pos:column="54"/></expr_stmt>
    <expr_stmt><expr><name><name pos:line="212" pos:column="5">conn_poll<pos:position pos:line="212" pos:column="14"/></name><operator pos:line="212" pos:column="14">-&gt;<pos:position pos:line="212" pos:column="19"/></operator><name pos:line="212" pos:column="16">reqevents<pos:position pos:line="212" pos:column="25"/></name></name> <operator pos:line="212" pos:column="26">=<pos:position pos:line="212" pos:column="27"/></operator> <name pos:line="212" pos:column="28">APR_POLLIN<pos:position pos:line="212" pos:column="38"/></name></expr>;<pos:position pos:line="212" pos:column="39"/></expr_stmt>
    <expr_stmt><expr><name><name pos:line="213" pos:column="5">conn_poll<pos:position pos:line="213" pos:column="14"/></name><operator pos:line="213" pos:column="14">-&gt;<pos:position pos:line="213" pos:column="19"/></operator><name pos:line="213" pos:column="16">desc_type<pos:position pos:line="213" pos:column="25"/></name></name> <operator pos:line="213" pos:column="26">=<pos:position pos:line="213" pos:column="27"/></operator> <name pos:line="213" pos:column="28">APR_POLL_SOCKET<pos:position pos:line="213" pos:column="43"/></name></expr>;<pos:position pos:line="213" pos:column="44"/></expr_stmt>
    <expr_stmt><expr><name><name pos:line="214" pos:column="5">conn_poll<pos:position pos:line="214" pos:column="14"/></name><operator pos:line="214" pos:column="14">-&gt;<pos:position pos:line="214" pos:column="19"/></operator><name pos:line="214" pos:column="16">desc<pos:position pos:line="214" pos:column="20"/></name><operator pos:line="214" pos:column="20">.<pos:position pos:line="214" pos:column="21"/></operator><name pos:line="214" pos:column="21">s<pos:position pos:line="214" pos:column="22"/></name></name> <operator pos:line="214" pos:column="23">=<pos:position pos:line="214" pos:column="24"/></operator> <name><name pos:line="214" pos:column="25">conn<pos:position pos:line="214" pos:column="29"/></name><operator pos:line="214" pos:column="29">-&gt;<pos:position pos:line="214" pos:column="34"/></operator><name pos:line="214" pos:column="31">sock<pos:position pos:line="214" pos:column="35"/></name></name></expr>;<pos:position pos:line="214" pos:column="36"/></expr_stmt>

    <expr_stmt><expr><name pos:line="216" pos:column="5">bufsiz<pos:position pos:line="216" pos:column="11"/></name> <operator pos:line="216" pos:column="12">=<pos:position pos:line="216" pos:column="13"/></operator> <name pos:line="216" pos:column="14">maxsize<pos:position pos:line="216" pos:column="21"/></name></expr>;<pos:position pos:line="216" pos:column="22"/></expr_stmt>
    <for pos:line="217" pos:column="5">for <control pos:line="217" pos:column="9">(<init pos:line="217" pos:column="10">;<pos:position pos:line="217" pos:column="11"/></init><condition pos:line="217" pos:column="11">;<pos:position pos:line="217" pos:column="12"/></condition><incr/>)<pos:position pos:line="217" pos:column="13"/></control> <block pos:line="217" pos:column="14">{
        <switch pos:line="218" pos:column="9">switch <condition pos:line="218" pos:column="16">(<expr><name pos:line="218" pos:column="17">result<pos:position pos:line="218" pos:column="23"/></name></expr>)<pos:position pos:line="218" pos:column="24"/></condition> <block pos:line="218" pos:column="25">{
            <case pos:line="219" pos:column="13">case <expr><name pos:line="219" pos:column="18">CMD_AJP13_GET_BODY_CHUNK<pos:position pos:line="219" pos:column="42"/></name></expr>:<pos:position pos:line="219" pos:column="43"/></case>
                <if pos:line="220" pos:column="17">if <condition pos:line="220" pos:column="20">(<expr><name pos:line="220" pos:column="21">havebody<pos:position pos:line="220" pos:column="29"/></name></expr>)<pos:position pos:line="220" pos:column="30"/></condition><then pos:line="220" pos:column="30"> <block pos:line="220" pos:column="31">{
                    <if pos:line="221" pos:column="21">if <condition pos:line="221" pos:column="24">(<expr><call><name pos:line="221" pos:column="25">APR_BUCKET_IS_EOS<pos:position pos:line="221" pos:column="42"/></name><argument_list pos:line="221" pos:column="42">(<argument><expr><call><name pos:line="221" pos:column="43">APR_BRIGADE_LAST<pos:position pos:line="221" pos:column="59"/></name><argument_list pos:line="221" pos:column="59">(<argument><expr><name pos:line="221" pos:column="60">input_brigade<pos:position pos:line="221" pos:column="73"/></name></expr></argument>)<pos:position pos:line="221" pos:column="74"/></argument_list></call></expr></argument>)<pos:position pos:line="221" pos:column="75"/></argument_list></call></expr>)<pos:position pos:line="221" pos:column="76"/></condition><then pos:line="221" pos:column="76"> <block pos:line="221" pos:column="77">{
                        <comment type="block" pos:line="222" pos:column="25">/* This is the end */</comment>
                        <expr_stmt><expr><name pos:line="223" pos:column="25">bufsiz<pos:position pos:line="223" pos:column="31"/></name> <operator pos:line="223" pos:column="32">=<pos:position pos:line="223" pos:column="33"/></operator> <literal type="number" pos:line="223" pos:column="34">0<pos:position pos:line="223" pos:column="35"/></literal></expr>;<pos:position pos:line="223" pos:column="36"/></expr_stmt>
                        <expr_stmt><expr><name pos:line="224" pos:column="25">havebody<pos:position pos:line="224" pos:column="33"/></name> <operator pos:line="224" pos:column="34">=<pos:position pos:line="224" pos:column="35"/></operator> <literal type="number" pos:line="224" pos:column="36">0<pos:position pos:line="224" pos:column="37"/></literal></expr>;<pos:position pos:line="224" pos:column="38"/></expr_stmt>
                        <expr_stmt><expr><call><name pos:line="225" pos:column="25">ap_log_rerror<pos:position pos:line="225" pos:column="38"/></name><argument_list pos:line="225" pos:column="38">(<argument><expr><name pos:line="225" pos:column="39">APLOG_MARK<pos:position pos:line="225" pos:column="49"/></name></expr></argument>, <argument><expr><name pos:line="225" pos:column="51">APLOG_DEBUG<pos:position pos:line="225" pos:column="62"/></name></expr></argument>, <argument><expr><name pos:line="225" pos:column="64">status<pos:position pos:line="225" pos:column="70"/></name></expr></argument>, <argument><expr><name pos:line="225" pos:column="72">r<pos:position pos:line="225" pos:column="73"/></name></expr></argument>, <argument><expr><call><name pos:line="225" pos:column="75">APLOGNO<pos:position pos:line="225" pos:column="82"/></name><argument_list pos:line="225" pos:column="82">(<argument><expr><literal type="number" pos:line="225" pos:column="83">00879<pos:position pos:line="225" pos:column="88"/></literal></expr></argument>)<pos:position pos:line="225" pos:column="89"/></argument_list></call>
                                      <literal type="string" pos:line="226" pos:column="39">"APR_BUCKET_IS_EOS"<pos:position pos:line="226" pos:column="58"/></literal></expr></argument>)<pos:position pos:line="226" pos:column="59"/></argument_list></call></expr>;<pos:position pos:line="226" pos:column="60"/></expr_stmt>
                    }<pos:position pos:line="227" pos:column="22"/></block></then> <else pos:line="227" pos:column="23">else <block pos:line="227" pos:column="28">{
                        <expr_stmt><expr><name pos:line="228" pos:column="25">status<pos:position pos:line="228" pos:column="31"/></name> <operator pos:line="228" pos:column="32">=<pos:position pos:line="228" pos:column="33"/></operator> <call><name pos:line="228" pos:column="34">ap_get_brigade<pos:position pos:line="228" pos:column="48"/></name><argument_list pos:line="228" pos:column="48">(<argument><expr><name><name pos:line="228" pos:column="49">r<pos:position pos:line="228" pos:column="50"/></name><operator pos:line="228" pos:column="50">-&gt;<pos:position pos:line="228" pos:column="55"/></operator><name pos:line="228" pos:column="52">input_filters<pos:position pos:line="228" pos:column="65"/></name></name></expr></argument>, <argument><expr><name pos:line="228" pos:column="67">input_brigade<pos:position pos:line="228" pos:column="80"/></name></expr></argument>,
                                                <argument><expr><name pos:line="229" pos:column="49">AP_MODE_READBYTES<pos:position pos:line="229" pos:column="66"/></name></expr></argument>,
                                                <argument><expr><name pos:line="230" pos:column="49">APR_BLOCK_READ<pos:position pos:line="230" pos:column="63"/></name></expr></argument>,
                                                <argument><expr><name pos:line="231" pos:column="49">maxsize<pos:position pos:line="231" pos:column="56"/></name> <operator pos:line="231" pos:column="57">-<pos:position pos:line="231" pos:column="58"/></operator> <name pos:line="231" pos:column="59">AJP_HEADER_SZ<pos:position pos:line="231" pos:column="72"/></name></expr></argument>)<pos:position pos:line="231" pos:column="73"/></argument_list></call></expr>;<pos:position pos:line="231" pos:column="74"/></expr_stmt>
                        <if pos:line="232" pos:column="25">if <condition pos:line="232" pos:column="28">(<expr><name pos:line="232" pos:column="29">status<pos:position pos:line="232" pos:column="35"/></name> <operator pos:line="232" pos:column="36">!=<pos:position pos:line="232" pos:column="38"/></operator> <name pos:line="232" pos:column="39">APR_SUCCESS<pos:position pos:line="232" pos:column="50"/></name></expr>)<pos:position pos:line="232" pos:column="51"/></condition><then pos:line="232" pos:column="51"> <block pos:line="232" pos:column="52">{
                            <expr_stmt><expr><call><name pos:line="233" pos:column="29">ap_log_rerror<pos:position pos:line="233" pos:column="42"/></name><argument_list pos:line="233" pos:column="42">(<argument><expr><name pos:line="233" pos:column="43">APLOG_MARK<pos:position pos:line="233" pos:column="53"/></name></expr></argument>, <argument><expr><name pos:line="233" pos:column="55">APLOG_DEBUG<pos:position pos:line="233" pos:column="66"/></name></expr></argument>, <argument><expr><name pos:line="233" pos:column="68">status<pos:position pos:line="233" pos:column="74"/></name></expr></argument>, <argument><expr><name pos:line="233" pos:column="76">r<pos:position pos:line="233" pos:column="77"/></name></expr></argument>, <argument><expr><call><name pos:line="233" pos:column="79">APLOGNO<pos:position pos:line="233" pos:column="86"/></name><argument_list pos:line="233" pos:column="86">(<argument><expr><literal type="number" pos:line="233" pos:column="87">00880<pos:position pos:line="233" pos:column="92"/></literal></expr></argument>)<pos:position pos:line="233" pos:column="93"/></argument_list></call>
                                          <literal type="string" pos:line="234" pos:column="43">"ap_get_brigade failed"<pos:position pos:line="234" pos:column="66"/></literal></expr></argument>)<pos:position pos:line="234" pos:column="67"/></argument_list></call></expr>;<pos:position pos:line="234" pos:column="68"/></expr_stmt>
                            <expr_stmt><expr><name pos:line="235" pos:column="29">output_failed<pos:position pos:line="235" pos:column="42"/></name> <operator pos:line="235" pos:column="43">=<pos:position pos:line="235" pos:column="44"/></operator> <literal type="number" pos:line="235" pos:column="45">1<pos:position pos:line="235" pos:column="46"/></literal></expr>;<pos:position pos:line="235" pos:column="47"/></expr_stmt>
                            <break pos:line="236" pos:column="29">break;<pos:position pos:line="236" pos:column="35"/></break>
                        }<pos:position pos:line="237" pos:column="26"/></block></then></if>
                        <expr_stmt><expr><name pos:line="238" pos:column="25">bufsiz<pos:position pos:line="238" pos:column="31"/></name> <operator pos:line="238" pos:column="32">=<pos:position pos:line="238" pos:column="33"/></operator> <name pos:line="238" pos:column="34">maxsize<pos:position pos:line="238" pos:column="41"/></name></expr>;<pos:position pos:line="238" pos:column="42"/></expr_stmt>
                        <expr_stmt><expr><name pos:line="239" pos:column="25">status<pos:position pos:line="239" pos:column="31"/></name> <operator pos:line="239" pos:column="32">=<pos:position pos:line="239" pos:column="33"/></operator> <call><name pos:line="239" pos:column="34">apr_brigade_flatten<pos:position pos:line="239" pos:column="53"/></name><argument_list pos:line="239" pos:column="53">(<argument><expr><name pos:line="239" pos:column="54">input_brigade<pos:position pos:line="239" pos:column="67"/></name></expr></argument>, <argument><expr><name pos:line="239" pos:column="69">buff<pos:position pos:line="239" pos:column="73"/></name></expr></argument>,
                                                     <argument><expr><operator pos:line="240" pos:column="54">&amp;<pos:position pos:line="240" pos:column="59"/></operator><name pos:line="240" pos:column="55">bufsiz<pos:position pos:line="240" pos:column="61"/></name></expr></argument>)<pos:position pos:line="240" pos:column="62"/></argument_list></call></expr>;<pos:position pos:line="240" pos:column="63"/></expr_stmt>
                        <expr_stmt><expr><call><name pos:line="241" pos:column="25">apr_brigade_cleanup<pos:position pos:line="241" pos:column="44"/></name><argument_list pos:line="241" pos:column="44">(<argument><expr><name pos:line="241" pos:column="45">input_brigade<pos:position pos:line="241" pos:column="58"/></name></expr></argument>)<pos:position pos:line="241" pos:column="59"/></argument_list></call></expr>;<pos:position pos:line="241" pos:column="60"/></expr_stmt>
                        <if pos:line="242" pos:column="25">if <condition pos:line="242" pos:column="28">(<expr><name pos:line="242" pos:column="29">status<pos:position pos:line="242" pos:column="35"/></name> <operator pos:line="242" pos:column="36">!=<pos:position pos:line="242" pos:column="38"/></operator> <name pos:line="242" pos:column="39">APR_SUCCESS<pos:position pos:line="242" pos:column="50"/></name></expr>)<pos:position pos:line="242" pos:column="51"/></condition><then pos:line="242" pos:column="51"> <block pos:line="242" pos:column="52">{
                            <expr_stmt><expr><call><name pos:line="243" pos:column="29">ap_log_rerror<pos:position pos:line="243" pos:column="42"/></name><argument_list pos:line="243" pos:column="42">(<argument><expr><name pos:line="243" pos:column="43">APLOG_MARK<pos:position pos:line="243" pos:column="53"/></name></expr></argument>, <argument><expr><name pos:line="243" pos:column="55">APLOG_DEBUG<pos:position pos:line="243" pos:column="66"/></name></expr></argument>, <argument><expr><name pos:line="243" pos:column="68">status<pos:position pos:line="243" pos:column="74"/></name></expr></argument>, <argument><expr><name pos:line="243" pos:column="76">r<pos:position pos:line="243" pos:column="77"/></name></expr></argument>, <argument><expr><call><name pos:line="243" pos:column="79">APLOGNO<pos:position pos:line="243" pos:column="86"/></name><argument_list pos:line="243" pos:column="86">(<argument><expr><literal type="number" pos:line="243" pos:column="87">00881<pos:position pos:line="243" pos:column="92"/></literal></expr></argument>)<pos:position pos:line="243" pos:column="93"/></argument_list></call>
                                         <literal type="string" pos:line="244" pos:column="42">"apr_brigade_flatten failed"<pos:position pos:line="244" pos:column="70"/></literal></expr></argument>)<pos:position pos:line="244" pos:column="71"/></argument_list></call></expr>;<pos:position pos:line="244" pos:column="72"/></expr_stmt>
                            <expr_stmt><expr><name pos:line="245" pos:column="29">output_failed<pos:position pos:line="245" pos:column="42"/></name> <operator pos:line="245" pos:column="43">=<pos:position pos:line="245" pos:column="44"/></operator> <literal type="number" pos:line="245" pos:column="45">1<pos:position pos:line="245" pos:column="46"/></literal></expr>;<pos:position pos:line="245" pos:column="47"/></expr_stmt>
                            <break pos:line="246" pos:column="29">break;<pos:position pos:line="246" pos:column="35"/></break>
                        }<pos:position pos:line="247" pos:column="26"/></block></then></if>
                    }<pos:position pos:line="248" pos:column="22"/></block></else></if>

                    <expr_stmt><expr><call><name pos:line="250" pos:column="21">ajp_msg_reset<pos:position pos:line="250" pos:column="34"/></name><argument_list pos:line="250" pos:column="34">(<argument><expr><name pos:line="250" pos:column="35">msg<pos:position pos:line="250" pos:column="38"/></name></expr></argument>)<pos:position pos:line="250" pos:column="39"/></argument_list></call></expr>;<pos:position pos:line="250" pos:column="40"/></expr_stmt>
                    <comment type="block" pos:line="251" pos:column="21">/* will go in ajp_send_data_msg */</comment>
                    <expr_stmt><expr><name pos:line="252" pos:column="21">status<pos:position pos:line="252" pos:column="27"/></name> <operator pos:line="252" pos:column="28">=<pos:position pos:line="252" pos:column="29"/></operator> <call><name pos:line="252" pos:column="30">ajp_send_data_msg<pos:position pos:line="252" pos:column="47"/></name><argument_list pos:line="252" pos:column="47">(<argument><expr><name><name pos:line="252" pos:column="48">conn<pos:position pos:line="252" pos:column="52"/></name><operator pos:line="252" pos:column="52">-&gt;<pos:position pos:line="252" pos:column="57"/></operator><name pos:line="252" pos:column="54">sock<pos:position pos:line="252" pos:column="58"/></name></name></expr></argument>, <argument><expr><name pos:line="252" pos:column="60">msg<pos:position pos:line="252" pos:column="63"/></name></expr></argument>, <argument><expr><name pos:line="252" pos:column="65">bufsiz<pos:position pos:line="252" pos:column="71"/></name></expr></argument>)<pos:position pos:line="252" pos:column="72"/></argument_list></call></expr>;<pos:position pos:line="252" pos:column="73"/></expr_stmt>
                    <expr_stmt><expr><call><name pos:line="253" pos:column="21">ajp_msg_log<pos:position pos:line="253" pos:column="32"/></name><argument_list pos:line="253" pos:column="32">(<argument><expr><name pos:line="253" pos:column="33">r<pos:position pos:line="253" pos:column="34"/></name></expr></argument>, <argument><expr><name pos:line="253" pos:column="36">msg<pos:position pos:line="253" pos:column="39"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="253" pos:column="41">"ajp_send_data_msg after CMD_AJP13_GET_BODY_CHUNK: ajp_ilink_send packet dump"<pos:position pos:line="253" pos:column="119"/></literal></expr></argument>)<pos:position pos:line="253" pos:column="120"/></argument_list></call></expr>;<pos:position pos:line="253" pos:column="121"/></expr_stmt>
                    <if pos:line="254" pos:column="21">if <condition pos:line="254" pos:column="24">(<expr><name pos:line="254" pos:column="25">status<pos:position pos:line="254" pos:column="31"/></name> <operator pos:line="254" pos:column="32">!=<pos:position pos:line="254" pos:column="34"/></operator> <name pos:line="254" pos:column="35">APR_SUCCESS<pos:position pos:line="254" pos:column="46"/></name></expr>)<pos:position pos:line="254" pos:column="47"/></condition><then pos:line="254" pos:column="47"> <block pos:line="254" pos:column="48">{
                        <expr_stmt><expr><call><name pos:line="255" pos:column="25">ap_log_rerror<pos:position pos:line="255" pos:column="38"/></name><argument_list pos:line="255" pos:column="38">(<argument><expr><name pos:line="255" pos:column="39">APLOG_MARK<pos:position pos:line="255" pos:column="49"/></name></expr></argument>, <argument><expr><name pos:line="255" pos:column="51">APLOG_DEBUG<pos:position pos:line="255" pos:column="62"/></name></expr></argument>, <argument><expr><name pos:line="255" pos:column="64">status<pos:position pos:line="255" pos:column="70"/></name></expr></argument>, <argument><expr><name pos:line="255" pos:column="72">r<pos:position pos:line="255" pos:column="73"/></name></expr></argument>, <argument><expr><call><name pos:line="255" pos:column="75">APLOGNO<pos:position pos:line="255" pos:column="82"/></name><argument_list pos:line="255" pos:column="82">(<argument><expr><literal type="number" pos:line="255" pos:column="83">00882<pos:position pos:line="255" pos:column="88"/></literal></expr></argument>)<pos:position pos:line="255" pos:column="89"/></argument_list></call>
                                      <literal type="string" pos:line="256" pos:column="39">"ajp_send_data_msg failed"<pos:position pos:line="256" pos:column="65"/></literal></expr></argument>)<pos:position pos:line="256" pos:column="66"/></argument_list></call></expr>;<pos:position pos:line="256" pos:column="67"/></expr_stmt>
                        <expr_stmt><expr><name pos:line="257" pos:column="25">backend_failed<pos:position pos:line="257" pos:column="39"/></name> <operator pos:line="257" pos:column="40">=<pos:position pos:line="257" pos:column="41"/></operator> <literal type="number" pos:line="257" pos:column="42">1<pos:position pos:line="257" pos:column="43"/></literal></expr>;<pos:position pos:line="257" pos:column="44"/></expr_stmt>
                        <break pos:line="258" pos:column="25">break;<pos:position pos:line="258" pos:column="31"/></break>
                    }<pos:position pos:line="259" pos:column="22"/></block></then></if>
                    <expr_stmt><expr><name><name pos:line="260" pos:column="21">conn<pos:position pos:line="260" pos:column="25"/></name><operator pos:line="260" pos:column="25">-&gt;<pos:position pos:line="260" pos:column="30"/></operator><name pos:line="260" pos:column="27">worker<pos:position pos:line="260" pos:column="33"/></name><operator pos:line="260" pos:column="33">-&gt;<pos:position pos:line="260" pos:column="38"/></operator><name pos:line="260" pos:column="35">s<pos:position pos:line="260" pos:column="36"/></name><operator pos:line="260" pos:column="36">-&gt;<pos:position pos:line="260" pos:column="41"/></operator><name pos:line="260" pos:column="38">transferred<pos:position pos:line="260" pos:column="49"/></name></name> <operator pos:line="260" pos:column="50">+=<pos:position pos:line="260" pos:column="52"/></operator> <name pos:line="260" pos:column="53">bufsiz<pos:position pos:line="260" pos:column="59"/></name></expr>;<pos:position pos:line="260" pos:column="60"/></expr_stmt>
                }<pos:position pos:line="261" pos:column="18"/></block></then> <else pos:line="261" pos:column="19">else <block pos:line="261" pos:column="24">{
                    <comment type="block" pos:line="262" pos:column="21">/*
                     * something is wrong TC asks for more body but we are
                     * already at the end of the body data
                     */</comment>
                    <expr_stmt><expr><call><name pos:line="266" pos:column="21">ap_log_rerror<pos:position pos:line="266" pos:column="34"/></name><argument_list pos:line="266" pos:column="34">(<argument><expr><name pos:line="266" pos:column="35">APLOG_MARK<pos:position pos:line="266" pos:column="45"/></name></expr></argument>, <argument><expr><name pos:line="266" pos:column="47">APLOG_DEBUG<pos:position pos:line="266" pos:column="58"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="266" pos:column="60">0<pos:position pos:line="266" pos:column="61"/></literal></expr></argument>, <argument><expr><name pos:line="266" pos:column="63">r<pos:position pos:line="266" pos:column="64"/></name></expr></argument>, <argument><expr><call><name pos:line="266" pos:column="66">APLOGNO<pos:position pos:line="266" pos:column="73"/></name><argument_list pos:line="266" pos:column="73">(<argument><expr><literal type="number" pos:line="266" pos:column="74">00883<pos:position pos:line="266" pos:column="79"/></literal></expr></argument>)<pos:position pos:line="266" pos:column="80"/></argument_list></call>
                                  <literal type="string" pos:line="267" pos:column="35">"ap_proxy_ajp_request error read after end"<pos:position pos:line="267" pos:column="78"/></literal></expr></argument>)<pos:position pos:line="267" pos:column="79"/></argument_list></call></expr>;<pos:position pos:line="267" pos:column="80"/></expr_stmt>
                    <expr_stmt><expr><name pos:line="268" pos:column="21">backend_failed<pos:position pos:line="268" pos:column="35"/></name> <operator pos:line="268" pos:column="36">=<pos:position pos:line="268" pos:column="37"/></operator> <literal type="number" pos:line="268" pos:column="38">1<pos:position pos:line="268" pos:column="39"/></literal></expr>;<pos:position pos:line="268" pos:column="40"/></expr_stmt>
                }<pos:position pos:line="269" pos:column="18"/></block></else></if>
                <break pos:line="270" pos:column="17">break;<pos:position pos:line="270" pos:column="23"/></break>
            <case pos:line="271" pos:column="13">case <expr><name pos:line="271" pos:column="18">CMD_AJP13_SEND_HEADERS<pos:position pos:line="271" pos:column="40"/></name></expr>:<pos:position pos:line="271" pos:column="41"/></case>
                <if pos:line="272" pos:column="17">if <condition pos:line="272" pos:column="20">(<expr><name pos:line="272" pos:column="21">headers_sent<pos:position pos:line="272" pos:column="33"/></name></expr>)<pos:position pos:line="272" pos:column="34"/></condition><then pos:line="272" pos:column="34"> <block pos:line="272" pos:column="35">{
                    <comment type="block" pos:line="273" pos:column="21">/* Do not send anything to the client.
                     * Backend already send us the headers.
                     */</comment>
                    <expr_stmt><expr><name pos:line="276" pos:column="21">backend_failed<pos:position pos:line="276" pos:column="35"/></name> <operator pos:line="276" pos:column="36">=<pos:position pos:line="276" pos:column="37"/></operator> <literal type="number" pos:line="276" pos:column="38">1<pos:position pos:line="276" pos:column="39"/></literal></expr>;<pos:position pos:line="276" pos:column="40"/></expr_stmt>
                    <expr_stmt><expr><call><name pos:line="277" pos:column="21">ap_log_rerror<pos:position pos:line="277" pos:column="34"/></name><argument_list pos:line="277" pos:column="34">(<argument><expr><name pos:line="277" pos:column="35">APLOG_MARK<pos:position pos:line="277" pos:column="45"/></name></expr></argument>, <argument><expr><name pos:line="277" pos:column="47">APLOG_DEBUG<pos:position pos:line="277" pos:column="58"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="277" pos:column="60">0<pos:position pos:line="277" pos:column="61"/></literal></expr></argument>, <argument><expr><name pos:line="277" pos:column="63">r<pos:position pos:line="277" pos:column="64"/></name></expr></argument>, <argument><expr><call><name pos:line="277" pos:column="66">APLOGNO<pos:position pos:line="277" pos:column="73"/></name><argument_list pos:line="277" pos:column="73">(<argument><expr><literal type="number" pos:line="277" pos:column="74">00884<pos:position pos:line="277" pos:column="79"/></literal></expr></argument>)<pos:position pos:line="277" pos:column="80"/></argument_list></call>
                                  <literal type="string" pos:line="278" pos:column="35">"Backend sent headers twice."<pos:position pos:line="278" pos:column="64"/></literal></expr></argument>)<pos:position pos:line="278" pos:column="65"/></argument_list></call></expr>;<pos:position pos:line="278" pos:column="66"/></expr_stmt>
                    <break pos:line="279" pos:column="21">break;<pos:position pos:line="279" pos:column="27"/></break>
                }<pos:position pos:line="280" pos:column="18"/></block></then></if>
                <comment type="block" pos:line="281" pos:column="17">/* AJP13_SEND_HEADERS: process them */</comment>
                <expr_stmt><expr><name pos:line="282" pos:column="17">status<pos:position pos:line="282" pos:column="23"/></name> <operator pos:line="282" pos:column="24">=<pos:position pos:line="282" pos:column="25"/></operator> <call><name pos:line="282" pos:column="26">ajp_parse_header<pos:position pos:line="282" pos:column="42"/></name><argument_list pos:line="282" pos:column="42">(<argument><expr><name pos:line="282" pos:column="43">r<pos:position pos:line="282" pos:column="44"/></name></expr></argument>, <argument><expr><name pos:line="282" pos:column="46">conf<pos:position pos:line="282" pos:column="50"/></name></expr></argument>, <argument><expr><name><name pos:line="282" pos:column="52">conn<pos:position pos:line="282" pos:column="56"/></name><operator pos:line="282" pos:column="56">-&gt;<pos:position pos:line="282" pos:column="61"/></operator><name pos:line="282" pos:column="58">data<pos:position pos:line="282" pos:column="62"/></name></name></expr></argument>)<pos:position pos:line="282" pos:column="63"/></argument_list></call></expr>;<pos:position pos:line="282" pos:column="64"/></expr_stmt>
                <if pos:line="283" pos:column="17">if <condition pos:line="283" pos:column="20">(<expr><name pos:line="283" pos:column="21">status<pos:position pos:line="283" pos:column="27"/></name> <operator pos:line="283" pos:column="28">!=<pos:position pos:line="283" pos:column="30"/></operator> <name pos:line="283" pos:column="31">APR_SUCCESS<pos:position pos:line="283" pos:column="42"/></name></expr>)<pos:position pos:line="283" pos:column="43"/></condition><then pos:line="283" pos:column="43"> <block pos:line="283" pos:column="44">{
                    <expr_stmt><expr><name pos:line="284" pos:column="21">backend_failed<pos:position pos:line="284" pos:column="35"/></name> <operator pos:line="284" pos:column="36">=<pos:position pos:line="284" pos:column="37"/></operator> <literal type="number" pos:line="284" pos:column="38">1<pos:position pos:line="284" pos:column="39"/></literal></expr>;<pos:position pos:line="284" pos:column="40"/></expr_stmt>
                }<pos:position pos:line="285" pos:column="18"/></block></then>
                <elseif pos:line="286" pos:column="17">else <if pos:line="286" pos:column="22">if <condition pos:line="286" pos:column="25">(<expr><operator pos:line="286" pos:column="26">(<pos:position pos:line="286" pos:column="27"/></operator><name><name pos:line="286" pos:column="27">r<pos:position pos:line="286" pos:column="28"/></name><operator pos:line="286" pos:column="28">-&gt;<pos:position pos:line="286" pos:column="33"/></operator><name pos:line="286" pos:column="30">status<pos:position pos:line="286" pos:column="36"/></name></name> <operator pos:line="286" pos:column="37">==<pos:position pos:line="286" pos:column="39"/></operator> <literal type="number" pos:line="286" pos:column="40">401<pos:position pos:line="286" pos:column="43"/></literal><operator pos:line="286" pos:column="43">)<pos:position pos:line="286" pos:column="44"/></operator> <operator pos:line="286" pos:column="45">&amp;&amp;<pos:position pos:line="286" pos:column="55"/></operator> <name><name pos:line="286" pos:column="48">conf<pos:position pos:line="286" pos:column="52"/></name><operator pos:line="286" pos:column="52">-&gt;<pos:position pos:line="286" pos:column="57"/></operator><name pos:line="286" pos:column="54">error_override<pos:position pos:line="286" pos:column="68"/></name></name></expr>)<pos:position pos:line="286" pos:column="69"/></condition><then pos:line="286" pos:column="69"> <block pos:line="286" pos:column="70">{
                    <decl_stmt><decl><type><specifier pos:line="287" pos:column="21">const<pos:position pos:line="287" pos:column="26"/></specifier> <name pos:line="287" pos:column="27">char<pos:position pos:line="287" pos:column="31"/></name> <modifier pos:line="287" pos:column="32">*<pos:position pos:line="287" pos:column="33"/></modifier></type><name pos:line="287" pos:column="33">buf<pos:position pos:line="287" pos:column="36"/></name></decl>;<pos:position pos:line="287" pos:column="37"/></decl_stmt>
                    <decl_stmt><decl><type><specifier pos:line="288" pos:column="21">const<pos:position pos:line="288" pos:column="26"/></specifier> <name pos:line="288" pos:column="27">char<pos:position pos:line="288" pos:column="31"/></name> <modifier pos:line="288" pos:column="32">*<pos:position pos:line="288" pos:column="33"/></modifier></type><name pos:line="288" pos:column="33">wa<pos:position pos:line="288" pos:column="35"/></name> <init pos:line="288" pos:column="36">= <expr><literal type="string" pos:line="288" pos:column="38">"WWW-Authenticate"<pos:position pos:line="288" pos:column="56"/></literal></expr></init></decl>;<pos:position pos:line="288" pos:column="57"/></decl_stmt>
                    <if pos:line="289" pos:column="21">if <condition pos:line="289" pos:column="24">(<expr><operator pos:line="289" pos:column="25">(<pos:position pos:line="289" pos:column="26"/></operator><name pos:line="289" pos:column="26">buf<pos:position pos:line="289" pos:column="29"/></name> <operator pos:line="289" pos:column="30">=<pos:position pos:line="289" pos:column="31"/></operator> <call><name pos:line="289" pos:column="32">apr_table_get<pos:position pos:line="289" pos:column="45"/></name><argument_list pos:line="289" pos:column="45">(<argument><expr><name><name pos:line="289" pos:column="46">r<pos:position pos:line="289" pos:column="47"/></name><operator pos:line="289" pos:column="47">-&gt;<pos:position pos:line="289" pos:column="52"/></operator><name pos:line="289" pos:column="49">headers_out<pos:position pos:line="289" pos:column="60"/></name></name></expr></argument>, <argument><expr><name pos:line="289" pos:column="62">wa<pos:position pos:line="289" pos:column="64"/></name></expr></argument>)<pos:position pos:line="289" pos:column="65"/></argument_list></call><operator pos:line="289" pos:column="65">)<pos:position pos:line="289" pos:column="66"/></operator></expr>)<pos:position pos:line="289" pos:column="67"/></condition><then pos:line="289" pos:column="67"> <block pos:line="289" pos:column="68">{
                        <expr_stmt><expr><call><name pos:line="290" pos:column="25">apr_table_set<pos:position pos:line="290" pos:column="38"/></name><argument_list pos:line="290" pos:column="38">(<argument><expr><name><name pos:line="290" pos:column="39">r<pos:position pos:line="290" pos:column="40"/></name><operator pos:line="290" pos:column="40">-&gt;<pos:position pos:line="290" pos:column="45"/></operator><name pos:line="290" pos:column="42">err_headers_out<pos:position pos:line="290" pos:column="57"/></name></name></expr></argument>, <argument><expr><name pos:line="290" pos:column="59">wa<pos:position pos:line="290" pos:column="61"/></name></expr></argument>, <argument><expr><name pos:line="290" pos:column="63">buf<pos:position pos:line="290" pos:column="66"/></name></expr></argument>)<pos:position pos:line="290" pos:column="67"/></argument_list></call></expr>;<pos:position pos:line="290" pos:column="68"/></expr_stmt>
                    }<pos:position pos:line="291" pos:column="22"/></block></then> <else pos:line="291" pos:column="23">else <block pos:line="291" pos:column="28">{
                        <expr_stmt><expr><call><name pos:line="292" pos:column="25">ap_log_rerror<pos:position pos:line="292" pos:column="38"/></name><argument_list pos:line="292" pos:column="38">(<argument><expr><name pos:line="292" pos:column="39">APLOG_MARK<pos:position pos:line="292" pos:column="49"/></name></expr></argument>, <argument><expr><name pos:line="292" pos:column="51">APLOG_DEBUG<pos:position pos:line="292" pos:column="62"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="292" pos:column="64">0<pos:position pos:line="292" pos:column="65"/></literal></expr></argument>, <argument><expr><name pos:line="292" pos:column="67">r<pos:position pos:line="292" pos:column="68"/></name></expr></argument>, <argument><expr><call><name pos:line="292" pos:column="70">APLOGNO<pos:position pos:line="292" pos:column="77"/></name><argument_list pos:line="292" pos:column="77">(<argument><expr><literal type="number" pos:line="292" pos:column="78">00885<pos:position pos:line="292" pos:column="83"/></literal></expr></argument>)<pos:position pos:line="292" pos:column="84"/></argument_list></call>
                                      <literal type="string" pos:line="293" pos:column="39">"ap_proxy_ajp_request: origin server "<pos:position pos:line="293" pos:column="77"/></literal>
                                      <literal type="string" pos:line="294" pos:column="39">"sent 401 without WWW-Authenticate header"<pos:position pos:line="294" pos:column="81"/></literal></expr></argument>)<pos:position pos:line="294" pos:column="82"/></argument_list></call></expr>;<pos:position pos:line="294" pos:column="83"/></expr_stmt>
                    }<pos:position pos:line="295" pos:column="22"/></block></else></if>
                }<pos:position pos:line="296" pos:column="18"/></block></then></if></elseif></if>
                <expr_stmt><expr><name pos:line="297" pos:column="17">headers_sent<pos:position pos:line="297" pos:column="29"/></name> <operator pos:line="297" pos:column="30">=<pos:position pos:line="297" pos:column="31"/></operator> <literal type="number" pos:line="297" pos:column="32">1<pos:position pos:line="297" pos:column="33"/></literal></expr>;<pos:position pos:line="297" pos:column="34"/></expr_stmt>
                <break pos:line="298" pos:column="17">break;<pos:position pos:line="298" pos:column="23"/></break>
            <case pos:line="299" pos:column="13">case <expr><name pos:line="299" pos:column="18">CMD_AJP13_SEND_BODY_CHUNK<pos:position pos:line="299" pos:column="43"/></name></expr>:<pos:position pos:line="299" pos:column="44"/></case>
                <comment type="block" pos:line="300" pos:column="17">/* AJP13_SEND_BODY_CHUNK: piece of data */</comment>
                <expr_stmt><expr><name pos:line="301" pos:column="17">status<pos:position pos:line="301" pos:column="23"/></name> <operator pos:line="301" pos:column="24">=<pos:position pos:line="301" pos:column="25"/></operator> <call><name pos:line="301" pos:column="26">ajp_parse_data<pos:position pos:line="301" pos:column="40"/></name><argument_list pos:line="301" pos:column="40">(<argument><expr><name pos:line="301" pos:column="41">r<pos:position pos:line="301" pos:column="42"/></name></expr></argument>, <argument><expr><name><name pos:line="301" pos:column="44">conn<pos:position pos:line="301" pos:column="48"/></name><operator pos:line="301" pos:column="48">-&gt;<pos:position pos:line="301" pos:column="53"/></operator><name pos:line="301" pos:column="50">data<pos:position pos:line="301" pos:column="54"/></name></name></expr></argument>, <argument><expr><operator pos:line="301" pos:column="56">&amp;<pos:position pos:line="301" pos:column="61"/></operator><name pos:line="301" pos:column="57">size<pos:position pos:line="301" pos:column="61"/></name></expr></argument>, <argument><expr><operator pos:line="301" pos:column="63">&amp;<pos:position pos:line="301" pos:column="68"/></operator><name pos:line="301" pos:column="64">send_body_chunk_buff<pos:position pos:line="301" pos:column="84"/></name></expr></argument>)<pos:position pos:line="301" pos:column="85"/></argument_list></call></expr>;<pos:position pos:line="301" pos:column="86"/></expr_stmt>
                <if pos:line="302" pos:column="17">if <condition pos:line="302" pos:column="20">(<expr><name pos:line="302" pos:column="21">status<pos:position pos:line="302" pos:column="27"/></name> <operator pos:line="302" pos:column="28">==<pos:position pos:line="302" pos:column="30"/></operator> <name pos:line="302" pos:column="31">APR_SUCCESS<pos:position pos:line="302" pos:column="42"/></name></expr>)<pos:position pos:line="302" pos:column="43"/></condition><then pos:line="302" pos:column="43"> <block pos:line="302" pos:column="44">{
                    <comment type="block" pos:line="303" pos:column="21">/* If we are overriding the errors, we can't put the content
                     * of the page into the brigade.
                     */</comment>
                    <if pos:line="306" pos:column="21">if <condition pos:line="306" pos:column="24">(<expr><operator pos:line="306" pos:column="25">!<pos:position pos:line="306" pos:column="26"/></operator><name><name pos:line="306" pos:column="26">conf<pos:position pos:line="306" pos:column="30"/></name><operator pos:line="306" pos:column="30">-&gt;<pos:position pos:line="306" pos:column="35"/></operator><name pos:line="306" pos:column="32">error_override<pos:position pos:line="306" pos:column="46"/></name></name> <operator pos:line="306" pos:column="47">||<pos:position pos:line="306" pos:column="49"/></operator> <operator pos:line="306" pos:column="50">!<pos:position pos:line="306" pos:column="51"/></operator><call><name pos:line="306" pos:column="51">ap_is_HTTP_ERROR<pos:position pos:line="306" pos:column="67"/></name><argument_list pos:line="306" pos:column="67">(<argument><expr><name><name pos:line="306" pos:column="68">r<pos:position pos:line="306" pos:column="69"/></name><operator pos:line="306" pos:column="69">-&gt;<pos:position pos:line="306" pos:column="74"/></operator><name pos:line="306" pos:column="71">status<pos:position pos:line="306" pos:column="77"/></name></name></expr></argument>)<pos:position pos:line="306" pos:column="78"/></argument_list></call></expr>)<pos:position pos:line="306" pos:column="79"/></condition><then pos:line="306" pos:column="79"> <block pos:line="306" pos:column="80">{
                        <comment type="block" pos:line="307" pos:column="25">/* AJP13_SEND_BODY_CHUNK with zero length
                         * is explicit flush message
                         */</comment>
                        <if pos:line="310" pos:column="25">if <condition pos:line="310" pos:column="28">(<expr><name pos:line="310" pos:column="29">size<pos:position pos:line="310" pos:column="33"/></name> <operator pos:line="310" pos:column="34">==<pos:position pos:line="310" pos:column="36"/></operator> <literal type="number" pos:line="310" pos:column="37">0<pos:position pos:line="310" pos:column="38"/></literal></expr>)<pos:position pos:line="310" pos:column="39"/></condition><then pos:line="310" pos:column="39"> <block pos:line="310" pos:column="40">{
                            <if pos:line="311" pos:column="29">if <condition pos:line="311" pos:column="32">(<expr><name pos:line="311" pos:column="33">headers_sent<pos:position pos:line="311" pos:column="45"/></name></expr>)<pos:position pos:line="311" pos:column="46"/></condition><then pos:line="311" pos:column="46"> <block pos:line="311" pos:column="47">{
                                <expr_stmt><expr><name pos:line="312" pos:column="33">e<pos:position pos:line="312" pos:column="34"/></name> <operator pos:line="312" pos:column="35">=<pos:position pos:line="312" pos:column="36"/></operator> <call><name pos:line="312" pos:column="37">apr_bucket_flush_create<pos:position pos:line="312" pos:column="60"/></name><argument_list pos:line="312" pos:column="60">(<argument><expr><name><name pos:line="312" pos:column="61">r<pos:position pos:line="312" pos:column="62"/></name><operator pos:line="312" pos:column="62">-&gt;<pos:position pos:line="312" pos:column="67"/></operator><name pos:line="312" pos:column="64">connection<pos:position pos:line="312" pos:column="74"/></name><operator pos:line="312" pos:column="74">-&gt;<pos:position pos:line="312" pos:column="79"/></operator><name pos:line="312" pos:column="76">bucket_alloc<pos:position pos:line="312" pos:column="88"/></name></name></expr></argument>)<pos:position pos:line="312" pos:column="89"/></argument_list></call></expr>;<pos:position pos:line="312" pos:column="90"/></expr_stmt>
                                <expr_stmt><expr><call><name pos:line="313" pos:column="33">APR_BRIGADE_INSERT_TAIL<pos:position pos:line="313" pos:column="56"/></name><argument_list pos:line="313" pos:column="56">(<argument><expr><name pos:line="313" pos:column="57">output_brigade<pos:position pos:line="313" pos:column="71"/></name></expr></argument>, <argument><expr><name pos:line="313" pos:column="73">e<pos:position pos:line="313" pos:column="74"/></name></expr></argument>)<pos:position pos:line="313" pos:column="75"/></argument_list></call></expr>;<pos:position pos:line="313" pos:column="76"/></expr_stmt>
                            }<pos:position pos:line="314" pos:column="30"/></block></then>
                            <else pos:line="315" pos:column="29">else <block pos:line="315" pos:column="34">{
                                <expr_stmt><expr><call><name pos:line="316" pos:column="33">ap_log_rerror<pos:position pos:line="316" pos:column="46"/></name><argument_list pos:line="316" pos:column="46">(<argument><expr><name pos:line="316" pos:column="47">APLOG_MARK<pos:position pos:line="316" pos:column="57"/></name></expr></argument>, <argument><expr><name pos:line="316" pos:column="59">APLOG_DEBUG<pos:position pos:line="316" pos:column="70"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="316" pos:column="72">0<pos:position pos:line="316" pos:column="73"/></literal></expr></argument>, <argument><expr><name pos:line="316" pos:column="75">r<pos:position pos:line="316" pos:column="76"/></name></expr></argument>, <argument><expr><call><name pos:line="316" pos:column="78">APLOGNO<pos:position pos:line="316" pos:column="85"/></name><argument_list pos:line="316" pos:column="85">(<argument><expr><literal type="number" pos:line="316" pos:column="86">00886<pos:position pos:line="316" pos:column="91"/></literal></expr></argument>)<pos:position pos:line="316" pos:column="92"/></argument_list></call>
                                              <literal type="string" pos:line="317" pos:column="47">"Ignoring flush message "<pos:position pos:line="317" pos:column="72"/></literal>
                                              <literal type="string" pos:line="318" pos:column="47">"received before headers"<pos:position pos:line="318" pos:column="72"/></literal></expr></argument>)<pos:position pos:line="318" pos:column="73"/></argument_list></call></expr>;<pos:position pos:line="318" pos:column="74"/></expr_stmt>
                            }<pos:position pos:line="319" pos:column="30"/></block></else></if>
                        }<pos:position pos:line="320" pos:column="26"/></block></then>
                        <else pos:line="321" pos:column="25">else <block pos:line="321" pos:column="30">{
                            <decl_stmt><decl><type><name pos:line="322" pos:column="29">apr_status_t<pos:position pos:line="322" pos:column="41"/></name></type> <name pos:line="322" pos:column="42">rv<pos:position pos:line="322" pos:column="44"/></name></decl>;<pos:position pos:line="322" pos:column="45"/></decl_stmt>

                            <comment type="block" pos:line="324" pos:column="29">/* Handle the case where the error document is itself reverse
                             * proxied and was successful. We must maintain any previous
                             * error status so that an underlying error (eg HTTP_NOT_FOUND)
                             * doesn't become an HTTP_OK.
                             */</comment>
                            <if pos:line="329" pos:column="29">if <condition pos:line="329" pos:column="32">(<expr><name><name pos:line="329" pos:column="33">conf<pos:position pos:line="329" pos:column="37"/></name><operator pos:line="329" pos:column="37">-&gt;<pos:position pos:line="329" pos:column="42"/></operator><name pos:line="329" pos:column="39">error_override<pos:position pos:line="329" pos:column="53"/></name></name> <operator pos:line="329" pos:column="54">&amp;&amp;<pos:position pos:line="329" pos:column="64"/></operator> <operator pos:line="329" pos:column="57">!<pos:position pos:line="329" pos:column="58"/></operator><call><name pos:line="329" pos:column="58">ap_is_HTTP_ERROR<pos:position pos:line="329" pos:column="74"/></name><argument_list pos:line="329" pos:column="74">(<argument><expr><name><name pos:line="329" pos:column="75">r<pos:position pos:line="329" pos:column="76"/></name><operator pos:line="329" pos:column="76">-&gt;<pos:position pos:line="329" pos:column="81"/></operator><name pos:line="329" pos:column="78">status<pos:position pos:line="329" pos:column="84"/></name></name></expr></argument>)<pos:position pos:line="329" pos:column="85"/></argument_list></call>
                                    <operator pos:line="330" pos:column="37">&amp;&amp;<pos:position pos:line="330" pos:column="47"/></operator> <call><name pos:line="330" pos:column="40">ap_is_HTTP_ERROR<pos:position pos:line="330" pos:column="56"/></name><argument_list pos:line="330" pos:column="56">(<argument><expr><name pos:line="330" pos:column="57">original_status<pos:position pos:line="330" pos:column="72"/></name></expr></argument>)<pos:position pos:line="330" pos:column="73"/></argument_list></call></expr>)<pos:position pos:line="330" pos:column="74"/></condition><then pos:line="330" pos:column="74"> <block pos:line="330" pos:column="75">{
                                <expr_stmt><expr><name><name pos:line="331" pos:column="33">r<pos:position pos:line="331" pos:column="34"/></name><operator pos:line="331" pos:column="34">-&gt;<pos:position pos:line="331" pos:column="39"/></operator><name pos:line="331" pos:column="36">status<pos:position pos:line="331" pos:column="42"/></name></name> <operator pos:line="331" pos:column="43">=<pos:position pos:line="331" pos:column="44"/></operator> <name pos:line="331" pos:column="45">original_status<pos:position pos:line="331" pos:column="60"/></name></expr>;<pos:position pos:line="331" pos:column="61"/></expr_stmt>
                                <expr_stmt><expr><name><name pos:line="332" pos:column="33">r<pos:position pos:line="332" pos:column="34"/></name><operator pos:line="332" pos:column="34">-&gt;<pos:position pos:line="332" pos:column="39"/></operator><name pos:line="332" pos:column="36">status_line<pos:position pos:line="332" pos:column="47"/></name></name> <operator pos:line="332" pos:column="48">=<pos:position pos:line="332" pos:column="49"/></operator> <name pos:line="332" pos:column="50">original_status_line<pos:position pos:line="332" pos:column="70"/></name></expr>;<pos:position pos:line="332" pos:column="71"/></expr_stmt>
                            }<pos:position pos:line="333" pos:column="30"/></block></then></if>

                            <expr_stmt><expr><name pos:line="335" pos:column="29">e<pos:position pos:line="335" pos:column="30"/></name> <operator pos:line="335" pos:column="31">=<pos:position pos:line="335" pos:column="32"/></operator> <call><name pos:line="335" pos:column="33">apr_bucket_transient_create<pos:position pos:line="335" pos:column="60"/></name><argument_list pos:line="335" pos:column="60">(<argument><expr><name pos:line="335" pos:column="61">send_body_chunk_buff<pos:position pos:line="335" pos:column="81"/></name></expr></argument>, <argument><expr><name pos:line="335" pos:column="83">size<pos:position pos:line="335" pos:column="87"/></name></expr></argument>,
                                                        <argument><expr><name><name pos:line="336" pos:column="57">r<pos:position pos:line="336" pos:column="58"/></name><operator pos:line="336" pos:column="58">-&gt;<pos:position pos:line="336" pos:column="63"/></operator><name pos:line="336" pos:column="60">connection<pos:position pos:line="336" pos:column="70"/></name><operator pos:line="336" pos:column="70">-&gt;<pos:position pos:line="336" pos:column="75"/></operator><name pos:line="336" pos:column="72">bucket_alloc<pos:position pos:line="336" pos:column="84"/></name></name></expr></argument>)<pos:position pos:line="336" pos:column="85"/></argument_list></call></expr>;<pos:position pos:line="336" pos:column="86"/></expr_stmt>
                            <expr_stmt><expr><call><name pos:line="337" pos:column="29">APR_BRIGADE_INSERT_TAIL<pos:position pos:line="337" pos:column="52"/></name><argument_list pos:line="337" pos:column="52">(<argument><expr><name pos:line="337" pos:column="53">output_brigade<pos:position pos:line="337" pos:column="67"/></name></expr></argument>, <argument><expr><name pos:line="337" pos:column="69">e<pos:position pos:line="337" pos:column="70"/></name></expr></argument>)<pos:position pos:line="337" pos:column="71"/></argument_list></call></expr>;<pos:position pos:line="337" pos:column="72"/></expr_stmt>

                            <if pos:line="339" pos:column="29">if <condition pos:line="339" pos:column="32">(<expr><operator pos:line="339" pos:column="33">(<pos:position pos:line="339" pos:column="34"/></operator><name><name pos:line="339" pos:column="34">conn<pos:position pos:line="339" pos:column="38"/></name><operator pos:line="339" pos:column="38">-&gt;<pos:position pos:line="339" pos:column="43"/></operator><name pos:line="339" pos:column="40">worker<pos:position pos:line="339" pos:column="46"/></name><operator pos:line="339" pos:column="46">-&gt;<pos:position pos:line="339" pos:column="51"/></operator><name pos:line="339" pos:column="48">s<pos:position pos:line="339" pos:column="49"/></name><operator pos:line="339" pos:column="49">-&gt;<pos:position pos:line="339" pos:column="54"/></operator><name pos:line="339" pos:column="51">flush_packets<pos:position pos:line="339" pos:column="64"/></name></name> <operator pos:line="339" pos:column="65">==<pos:position pos:line="339" pos:column="67"/></operator> <name pos:line="339" pos:column="68">flush_on<pos:position pos:line="339" pos:column="76"/></name><operator pos:line="339" pos:column="76">)<pos:position pos:line="339" pos:column="77"/></operator> <operator pos:line="339" pos:column="78">||<pos:position pos:line="339" pos:column="80"/></operator>
                                <operator pos:line="340" pos:column="33">(<pos:position pos:line="340" pos:column="34"/></operator><operator pos:line="340" pos:column="34">(<pos:position pos:line="340" pos:column="35"/></operator><name><name pos:line="340" pos:column="35">conn<pos:position pos:line="340" pos:column="39"/></name><operator pos:line="340" pos:column="39">-&gt;<pos:position pos:line="340" pos:column="44"/></operator><name pos:line="340" pos:column="41">worker<pos:position pos:line="340" pos:column="47"/></name><operator pos:line="340" pos:column="47">-&gt;<pos:position pos:line="340" pos:column="52"/></operator><name pos:line="340" pos:column="49">s<pos:position pos:line="340" pos:column="50"/></name><operator pos:line="340" pos:column="50">-&gt;<pos:position pos:line="340" pos:column="55"/></operator><name pos:line="340" pos:column="52">flush_packets<pos:position pos:line="340" pos:column="65"/></name></name> <operator pos:line="340" pos:column="66">==<pos:position pos:line="340" pos:column="68"/></operator> <name pos:line="340" pos:column="69">flush_auto<pos:position pos:line="340" pos:column="79"/></name><operator pos:line="340" pos:column="79">)<pos:position pos:line="340" pos:column="80"/></operator> <operator pos:line="340" pos:column="81">&amp;&amp;<pos:position pos:line="340" pos:column="91"/></operator>
                                <operator pos:line="341" pos:column="33">(<pos:position pos:line="341" pos:column="34"/></operator><operator pos:line="341" pos:column="34">(<pos:position pos:line="341" pos:column="35"/></operator><name pos:line="341" pos:column="35">rv<pos:position pos:line="341" pos:column="37"/></name> <operator pos:line="341" pos:column="38">=<pos:position pos:line="341" pos:column="39"/></operator> <call><name pos:line="341" pos:column="40">apr_poll<pos:position pos:line="341" pos:column="48"/></name><argument_list pos:line="341" pos:column="48">(<argument><expr><name pos:line="341" pos:column="49">conn_poll<pos:position pos:line="341" pos:column="58"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="341" pos:column="60">1<pos:position pos:line="341" pos:column="61"/></literal></expr></argument>, <argument><expr><operator pos:line="341" pos:column="63">&amp;<pos:position pos:line="341" pos:column="68"/></operator><name pos:line="341" pos:column="64">conn_poll_fd<pos:position pos:line="341" pos:column="76"/></name></expr></argument>,
                                                 <argument><expr><name><name pos:line="342" pos:column="50">conn<pos:position pos:line="342" pos:column="54"/></name><operator pos:line="342" pos:column="54">-&gt;<pos:position pos:line="342" pos:column="59"/></operator><name pos:line="342" pos:column="56">worker<pos:position pos:line="342" pos:column="62"/></name><operator pos:line="342" pos:column="62">-&gt;<pos:position pos:line="342" pos:column="67"/></operator><name pos:line="342" pos:column="64">s<pos:position pos:line="342" pos:column="65"/></name><operator pos:line="342" pos:column="65">-&gt;<pos:position pos:line="342" pos:column="70"/></operator><name pos:line="342" pos:column="67">flush_wait<pos:position pos:line="342" pos:column="77"/></name></name></expr></argument>)<pos:position pos:line="342" pos:column="78"/></argument_list></call><operator pos:line="342" pos:column="78">)<pos:position pos:line="342" pos:column="79"/></operator>
                                                 <operator pos:line="343" pos:column="50">!=<pos:position pos:line="343" pos:column="52"/></operator> <name pos:line="343" pos:column="53">APR_SUCCESS<pos:position pos:line="343" pos:column="64"/></name><operator pos:line="343" pos:column="64">)<pos:position pos:line="343" pos:column="65"/></operator> <operator pos:line="343" pos:column="66">&amp;&amp;<pos:position pos:line="343" pos:column="76"/></operator>
                                  <call><name pos:line="344" pos:column="35">APR_STATUS_IS_TIMEUP<pos:position pos:line="344" pos:column="55"/></name><argument_list pos:line="344" pos:column="55">(<argument><expr><name pos:line="344" pos:column="56">rv<pos:position pos:line="344" pos:column="58"/></name></expr></argument>)<pos:position pos:line="344" pos:column="59"/></argument_list></call><operator pos:line="344" pos:column="59">)<pos:position pos:line="344" pos:column="60"/></operator></expr>)<pos:position pos:line="344" pos:column="61"/></condition><then pos:line="344" pos:column="61"> <block pos:line="344" pos:column="62">{
                                <expr_stmt><expr><name pos:line="345" pos:column="33">e<pos:position pos:line="345" pos:column="34"/></name> <operator pos:line="345" pos:column="35">=<pos:position pos:line="345" pos:column="36"/></operator> <call><name pos:line="345" pos:column="37">apr_bucket_flush_create<pos:position pos:line="345" pos:column="60"/></name><argument_list pos:line="345" pos:column="60">(<argument><expr><name><name pos:line="345" pos:column="61">r<pos:position pos:line="345" pos:column="62"/></name><operator pos:line="345" pos:column="62">-&gt;<pos:position pos:line="345" pos:column="67"/></operator><name pos:line="345" pos:column="64">connection<pos:position pos:line="345" pos:column="74"/></name><operator pos:line="345" pos:column="74">-&gt;<pos:position pos:line="345" pos:column="79"/></operator><name pos:line="345" pos:column="76">bucket_alloc<pos:position pos:line="345" pos:column="88"/></name></name></expr></argument>)<pos:position pos:line="345" pos:column="89"/></argument_list></call></expr>;<pos:position pos:line="345" pos:column="90"/></expr_stmt>
                                <expr_stmt><expr><call><name pos:line="346" pos:column="33">APR_BRIGADE_INSERT_TAIL<pos:position pos:line="346" pos:column="56"/></name><argument_list pos:line="346" pos:column="56">(<argument><expr><name pos:line="346" pos:column="57">output_brigade<pos:position pos:line="346" pos:column="71"/></name></expr></argument>, <argument><expr><name pos:line="346" pos:column="73">e<pos:position pos:line="346" pos:column="74"/></name></expr></argument>)<pos:position pos:line="346" pos:column="75"/></argument_list></call></expr>;<pos:position pos:line="346" pos:column="76"/></expr_stmt>
                            }<pos:position pos:line="347" pos:column="30"/></block></then></if>
                            <expr_stmt><expr><call><name pos:line="348" pos:column="29">apr_brigade_length<pos:position pos:line="348" pos:column="47"/></name><argument_list pos:line="348" pos:column="47">(<argument><expr><name pos:line="348" pos:column="48">output_brigade<pos:position pos:line="348" pos:column="62"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="348" pos:column="64">0<pos:position pos:line="348" pos:column="65"/></literal></expr></argument>, <argument><expr><operator pos:line="348" pos:column="67">&amp;<pos:position pos:line="348" pos:column="72"/></operator><name pos:line="348" pos:column="68">bb_len<pos:position pos:line="348" pos:column="74"/></name></expr></argument>)<pos:position pos:line="348" pos:column="75"/></argument_list></call></expr>;<pos:position pos:line="348" pos:column="76"/></expr_stmt>
                            <if pos:line="349" pos:column="29">if <condition pos:line="349" pos:column="32">(<expr><name pos:line="349" pos:column="33">bb_len<pos:position pos:line="349" pos:column="39"/></name> <operator pos:line="349" pos:column="40">!=<pos:position pos:line="349" pos:column="42"/></operator> <operator pos:line="349" pos:column="43">-<pos:position pos:line="349" pos:column="44"/></operator><literal type="number" pos:line="349" pos:column="44">1<pos:position pos:line="349" pos:column="45"/></literal></expr>)<pos:position pos:line="349" pos:column="46"/></condition><then pos:line="349" pos:column="46">
                                <block type="pseudo"><expr_stmt><expr><name><name pos:line="350" pos:column="33">conn<pos:position pos:line="350" pos:column="37"/></name><operator pos:line="350" pos:column="37">-&gt;<pos:position pos:line="350" pos:column="42"/></operator><name pos:line="350" pos:column="39">worker<pos:position pos:line="350" pos:column="45"/></name><operator pos:line="350" pos:column="45">-&gt;<pos:position pos:line="350" pos:column="50"/></operator><name pos:line="350" pos:column="47">s<pos:position pos:line="350" pos:column="48"/></name><operator pos:line="350" pos:column="48">-&gt;<pos:position pos:line="350" pos:column="53"/></operator><name pos:line="350" pos:column="50">read<pos:position pos:line="350" pos:column="54"/></name></name> <operator pos:line="350" pos:column="55">+=<pos:position pos:line="350" pos:column="57"/></operator> <name pos:line="350" pos:column="58">bb_len<pos:position pos:line="350" pos:column="64"/></name></expr>;<pos:position pos:line="350" pos:column="65"/></expr_stmt></block></then></if>
                        }<pos:position pos:line="351" pos:column="26"/></block></else></if>
                        <if pos:line="352" pos:column="25">if <condition pos:line="352" pos:column="28">(<expr><name pos:line="352" pos:column="29">headers_sent<pos:position pos:line="352" pos:column="41"/></name></expr>)<pos:position pos:line="352" pos:column="42"/></condition><then pos:line="352" pos:column="42"> <block pos:line="352" pos:column="43">{
                            <if pos:line="353" pos:column="29">if <condition pos:line="353" pos:column="32">(<expr><call><name pos:line="353" pos:column="33">ap_pass_brigade<pos:position pos:line="353" pos:column="48"/></name><argument_list pos:line="353" pos:column="48">(<argument><expr><name><name pos:line="353" pos:column="49">r<pos:position pos:line="353" pos:column="50"/></name><operator pos:line="353" pos:column="50">-&gt;<pos:position pos:line="353" pos:column="55"/></operator><name pos:line="353" pos:column="52">output_filters<pos:position pos:line="353" pos:column="66"/></name></name></expr></argument>,
                                                <argument><expr><name pos:line="354" pos:column="49">output_brigade<pos:position pos:line="354" pos:column="63"/></name></expr></argument>)<pos:position pos:line="354" pos:column="64"/></argument_list></call> <operator pos:line="354" pos:column="65">!=<pos:position pos:line="354" pos:column="67"/></operator> <name pos:line="354" pos:column="68">APR_SUCCESS<pos:position pos:line="354" pos:column="79"/></name></expr>)<pos:position pos:line="354" pos:column="80"/></condition><then pos:line="354" pos:column="80"> <block pos:line="354" pos:column="81">{
                                <expr_stmt><expr><call><name pos:line="355" pos:column="33">ap_log_rerror<pos:position pos:line="355" pos:column="46"/></name><argument_list pos:line="355" pos:column="46">(<argument><expr><name pos:line="355" pos:column="47">APLOG_MARK<pos:position pos:line="355" pos:column="57"/></name></expr></argument>, <argument><expr><name pos:line="355" pos:column="59">APLOG_DEBUG<pos:position pos:line="355" pos:column="70"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="355" pos:column="72">0<pos:position pos:line="355" pos:column="73"/></literal></expr></argument>, <argument><expr><name pos:line="355" pos:column="75">r<pos:position pos:line="355" pos:column="76"/></name></expr></argument>, <argument><expr><call><name pos:line="355" pos:column="78">APLOGNO<pos:position pos:line="355" pos:column="85"/></name><argument_list pos:line="355" pos:column="85">(<argument><expr><literal type="number" pos:line="355" pos:column="86">00887<pos:position pos:line="355" pos:column="91"/></literal></expr></argument>)<pos:position pos:line="355" pos:column="92"/></argument_list></call>
                                              <literal type="string" pos:line="356" pos:column="47">"error processing body.%s"<pos:position pos:line="356" pos:column="73"/></literal></expr></argument>,
                                              <argument><expr><ternary><condition><expr><name><name pos:line="357" pos:column="47">r<pos:position pos:line="357" pos:column="48"/></name><operator pos:line="357" pos:column="48">-&gt;<pos:position pos:line="357" pos:column="53"/></operator><name pos:line="357" pos:column="50">connection<pos:position pos:line="357" pos:column="60"/></name><operator pos:line="357" pos:column="60">-&gt;<pos:position pos:line="357" pos:column="65"/></operator><name pos:line="357" pos:column="62">aborted<pos:position pos:line="357" pos:column="69"/></name></name></expr> ?<pos:position pos:line="357" pos:column="71"/></condition><then pos:line="357" pos:column="71">
                                              <expr><literal type="string" pos:line="358" pos:column="47">" Client aborted connection."<pos:position pos:line="358" pos:column="76"/></literal></expr> <pos:position pos:line="358" pos:column="77"/></then><else pos:line="358" pos:column="77">: <expr><literal type="string" pos:line="358" pos:column="79">""<pos:position pos:line="358" pos:column="81"/></literal></expr></else></ternary></expr></argument>)<pos:position pos:line="358" pos:column="82"/></argument_list></call></expr>;<pos:position pos:line="358" pos:column="83"/></expr_stmt>
                                <expr_stmt><expr><name pos:line="359" pos:column="33">output_failed<pos:position pos:line="359" pos:column="46"/></name> <operator pos:line="359" pos:column="47">=<pos:position pos:line="359" pos:column="48"/></operator> <literal type="number" pos:line="359" pos:column="49">1<pos:position pos:line="359" pos:column="50"/></literal></expr>;<pos:position pos:line="359" pos:column="51"/></expr_stmt>
                            }<pos:position pos:line="360" pos:column="30"/></block></then></if>
                            <expr_stmt><expr><name pos:line="361" pos:column="29">data_sent<pos:position pos:line="361" pos:column="38"/></name> <operator pos:line="361" pos:column="39">=<pos:position pos:line="361" pos:column="40"/></operator> <literal type="number" pos:line="361" pos:column="41">1<pos:position pos:line="361" pos:column="42"/></literal></expr>;<pos:position pos:line="361" pos:column="43"/></expr_stmt>
                            <expr_stmt><expr><call><name pos:line="362" pos:column="29">apr_brigade_cleanup<pos:position pos:line="362" pos:column="48"/></name><argument_list pos:line="362" pos:column="48">(<argument><expr><name pos:line="362" pos:column="49">output_brigade<pos:position pos:line="362" pos:column="63"/></name></expr></argument>)<pos:position pos:line="362" pos:column="64"/></argument_list></call></expr>;<pos:position pos:line="362" pos:column="65"/></expr_stmt>
                        }<pos:position pos:line="363" pos:column="26"/></block></then></if>
                    }<pos:position pos:line="364" pos:column="22"/></block></then></if>
                }<pos:position pos:line="365" pos:column="18"/></block></then>
                <else pos:line="366" pos:column="17">else <block pos:line="366" pos:column="22">{
                    <expr_stmt><expr><name pos:line="367" pos:column="21">backend_failed<pos:position pos:line="367" pos:column="35"/></name> <operator pos:line="367" pos:column="36">=<pos:position pos:line="367" pos:column="37"/></operator> <literal type="number" pos:line="367" pos:column="38">1<pos:position pos:line="367" pos:column="39"/></literal></expr>;<pos:position pos:line="367" pos:column="40"/></expr_stmt>
                }<pos:position pos:line="368" pos:column="18"/></block></else></if>
                <break pos:line="369" pos:column="17">break;<pos:position pos:line="369" pos:column="23"/></break>
            <case pos:line="370" pos:column="13">case <expr><name pos:line="370" pos:column="18">CMD_AJP13_END_RESPONSE<pos:position pos:line="370" pos:column="40"/></name></expr>:<pos:position pos:line="370" pos:column="41"/></case>
                <comment type="block" pos:line="371" pos:column="17">/* If we are overriding the errors, we must not send anything to
                 * the client, especially as the brigade already contains headers.
                 * So do nothing here, and it will be cleaned up below.
                 */</comment>
                <expr_stmt><expr><name pos:line="375" pos:column="17">status<pos:position pos:line="375" pos:column="23"/></name> <operator pos:line="375" pos:column="24">=<pos:position pos:line="375" pos:column="25"/></operator> <call><name pos:line="375" pos:column="26">ajp_parse_reuse<pos:position pos:line="375" pos:column="41"/></name><argument_list pos:line="375" pos:column="41">(<argument><expr><name pos:line="375" pos:column="42">r<pos:position pos:line="375" pos:column="43"/></name></expr></argument>, <argument><expr><name><name pos:line="375" pos:column="45">conn<pos:position pos:line="375" pos:column="49"/></name><operator pos:line="375" pos:column="49">-&gt;<pos:position pos:line="375" pos:column="54"/></operator><name pos:line="375" pos:column="51">data<pos:position pos:line="375" pos:column="55"/></name></name></expr></argument>, <argument><expr><operator pos:line="375" pos:column="57">&amp;<pos:position pos:line="375" pos:column="62"/></operator><name pos:line="375" pos:column="58">conn_reuse<pos:position pos:line="375" pos:column="68"/></name></expr></argument>)<pos:position pos:line="375" pos:column="69"/></argument_list></call></expr>;<pos:position pos:line="375" pos:column="70"/></expr_stmt>
                <if pos:line="376" pos:column="17">if <condition pos:line="376" pos:column="20">(<expr><name pos:line="376" pos:column="21">status<pos:position pos:line="376" pos:column="27"/></name> <operator pos:line="376" pos:column="28">!=<pos:position pos:line="376" pos:column="30"/></operator> <name pos:line="376" pos:column="31">APR_SUCCESS<pos:position pos:line="376" pos:column="42"/></name></expr>)<pos:position pos:line="376" pos:column="43"/></condition><then pos:line="376" pos:column="43"> <block pos:line="376" pos:column="44">{
                    <expr_stmt><expr><name pos:line="377" pos:column="21">backend_failed<pos:position pos:line="377" pos:column="35"/></name> <operator pos:line="377" pos:column="36">=<pos:position pos:line="377" pos:column="37"/></operator> <literal type="number" pos:line="377" pos:column="38">1<pos:position pos:line="377" pos:column="39"/></literal></expr>;<pos:position pos:line="377" pos:column="40"/></expr_stmt>
                }<pos:position pos:line="378" pos:column="18"/></block></then></if>
                <if pos:line="379" pos:column="17">if <condition pos:line="379" pos:column="20">(<expr><operator pos:line="379" pos:column="21">!<pos:position pos:line="379" pos:column="22"/></operator><name><name pos:line="379" pos:column="22">conf<pos:position pos:line="379" pos:column="26"/></name><operator pos:line="379" pos:column="26">-&gt;<pos:position pos:line="379" pos:column="31"/></operator><name pos:line="379" pos:column="28">error_override<pos:position pos:line="379" pos:column="42"/></name></name> <operator pos:line="379" pos:column="43">||<pos:position pos:line="379" pos:column="45"/></operator> <operator pos:line="379" pos:column="46">!<pos:position pos:line="379" pos:column="47"/></operator><call><name pos:line="379" pos:column="47">ap_is_HTTP_ERROR<pos:position pos:line="379" pos:column="63"/></name><argument_list pos:line="379" pos:column="63">(<argument><expr><name><name pos:line="379" pos:column="64">r<pos:position pos:line="379" pos:column="65"/></name><operator pos:line="379" pos:column="65">-&gt;<pos:position pos:line="379" pos:column="70"/></operator><name pos:line="379" pos:column="67">status<pos:position pos:line="379" pos:column="73"/></name></name></expr></argument>)<pos:position pos:line="379" pos:column="74"/></argument_list></call></expr>)<pos:position pos:line="379" pos:column="75"/></condition><then pos:line="379" pos:column="75"> <block pos:line="379" pos:column="76">{
                    <expr_stmt><expr><name pos:line="380" pos:column="21">e<pos:position pos:line="380" pos:column="22"/></name> <operator pos:line="380" pos:column="23">=<pos:position pos:line="380" pos:column="24"/></operator> <call><name pos:line="380" pos:column="25">apr_bucket_eos_create<pos:position pos:line="380" pos:column="46"/></name><argument_list pos:line="380" pos:column="46">(<argument><expr><name><name pos:line="380" pos:column="47">r<pos:position pos:line="380" pos:column="48"/></name><operator pos:line="380" pos:column="48">-&gt;<pos:position pos:line="380" pos:column="53"/></operator><name pos:line="380" pos:column="50">connection<pos:position pos:line="380" pos:column="60"/></name><operator pos:line="380" pos:column="60">-&gt;<pos:position pos:line="380" pos:column="65"/></operator><name pos:line="380" pos:column="62">bucket_alloc<pos:position pos:line="380" pos:column="74"/></name></name></expr></argument>)<pos:position pos:line="380" pos:column="75"/></argument_list></call></expr>;<pos:position pos:line="380" pos:column="76"/></expr_stmt>
                    <expr_stmt><expr><call><name pos:line="381" pos:column="21">APR_BRIGADE_INSERT_TAIL<pos:position pos:line="381" pos:column="44"/></name><argument_list pos:line="381" pos:column="44">(<argument><expr><name pos:line="381" pos:column="45">output_brigade<pos:position pos:line="381" pos:column="59"/></name></expr></argument>, <argument><expr><name pos:line="381" pos:column="61">e<pos:position pos:line="381" pos:column="62"/></name></expr></argument>)<pos:position pos:line="381" pos:column="63"/></argument_list></call></expr>;<pos:position pos:line="381" pos:column="64"/></expr_stmt>
                    <if pos:line="382" pos:column="21">if <condition pos:line="382" pos:column="24">(<expr><call><name pos:line="382" pos:column="25">ap_pass_brigade<pos:position pos:line="382" pos:column="40"/></name><argument_list pos:line="382" pos:column="40">(<argument><expr><name><name pos:line="382" pos:column="41">r<pos:position pos:line="382" pos:column="42"/></name><operator pos:line="382" pos:column="42">-&gt;<pos:position pos:line="382" pos:column="47"/></operator><name pos:line="382" pos:column="44">output_filters<pos:position pos:line="382" pos:column="58"/></name></name></expr></argument>,
                                        <argument><expr><name pos:line="383" pos:column="41">output_brigade<pos:position pos:line="383" pos:column="55"/></name></expr></argument>)<pos:position pos:line="383" pos:column="56"/></argument_list></call> <operator pos:line="383" pos:column="57">!=<pos:position pos:line="383" pos:column="59"/></operator> <name pos:line="383" pos:column="60">APR_SUCCESS<pos:position pos:line="383" pos:column="71"/></name></expr>)<pos:position pos:line="383" pos:column="72"/></condition><then pos:line="383" pos:column="72"> <block pos:line="383" pos:column="73">{
                        <expr_stmt><expr><call><name pos:line="384" pos:column="25">ap_log_rerror<pos:position pos:line="384" pos:column="38"/></name><argument_list pos:line="384" pos:column="38">(<argument><expr><name pos:line="384" pos:column="39">APLOG_MARK<pos:position pos:line="384" pos:column="49"/></name></expr></argument>, <argument><expr><name pos:line="384" pos:column="51">APLOG_DEBUG<pos:position pos:line="384" pos:column="62"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="384" pos:column="64">0<pos:position pos:line="384" pos:column="65"/></literal></expr></argument>, <argument><expr><name pos:line="384" pos:column="67">r<pos:position pos:line="384" pos:column="68"/></name></expr></argument>, <argument><expr><call><name pos:line="384" pos:column="70">APLOGNO<pos:position pos:line="384" pos:column="77"/></name><argument_list pos:line="384" pos:column="77">(<argument><expr><literal type="number" pos:line="384" pos:column="78">00888<pos:position pos:line="384" pos:column="83"/></literal></expr></argument>)<pos:position pos:line="384" pos:column="84"/></argument_list></call>
                                      <literal type="string" pos:line="385" pos:column="39">"error processing end"<pos:position pos:line="385" pos:column="61"/></literal></expr></argument>)<pos:position pos:line="385" pos:column="62"/></argument_list></call></expr>;<pos:position pos:line="385" pos:column="63"/></expr_stmt>
                        <expr_stmt><expr><name pos:line="386" pos:column="25">output_failed<pos:position pos:line="386" pos:column="38"/></name> <operator pos:line="386" pos:column="39">=<pos:position pos:line="386" pos:column="40"/></operator> <literal type="number" pos:line="386" pos:column="41">1<pos:position pos:line="386" pos:column="42"/></literal></expr>;<pos:position pos:line="386" pos:column="43"/></expr_stmt>
                    }<pos:position pos:line="387" pos:column="22"/></block></then></if>
                    <comment type="block" pos:line="388" pos:column="21">/* XXX: what about flush here? See mod_jk */</comment>
                    <expr_stmt><expr><name pos:line="389" pos:column="21">data_sent<pos:position pos:line="389" pos:column="30"/></name> <operator pos:line="389" pos:column="31">=<pos:position pos:line="389" pos:column="32"/></operator> <literal type="number" pos:line="389" pos:column="33">1<pos:position pos:line="389" pos:column="34"/></literal></expr>;<pos:position pos:line="389" pos:column="35"/></expr_stmt>
                }<pos:position pos:line="390" pos:column="18"/></block></then></if>
                <expr_stmt><expr><name pos:line="391" pos:column="17">request_ended<pos:position pos:line="391" pos:column="30"/></name> <operator pos:line="391" pos:column="31">=<pos:position pos:line="391" pos:column="32"/></operator> <literal type="number" pos:line="391" pos:column="33">1<pos:position pos:line="391" pos:column="34"/></literal></expr>;<pos:position pos:line="391" pos:column="35"/></expr_stmt>
                <break pos:line="392" pos:column="17">break;<pos:position pos:line="392" pos:column="23"/></break>
            <default pos:line="393" pos:column="13">default:<pos:position pos:line="393" pos:column="21"/></default>
                <expr_stmt><expr><name pos:line="394" pos:column="17">backend_failed<pos:position pos:line="394" pos:column="31"/></name> <operator pos:line="394" pos:column="32">=<pos:position pos:line="394" pos:column="33"/></operator> <literal type="number" pos:line="394" pos:column="34">1<pos:position pos:line="394" pos:column="35"/></literal></expr>;<pos:position pos:line="394" pos:column="36"/></expr_stmt>
                <break pos:line="395" pos:column="17">break;<pos:position pos:line="395" pos:column="23"/></break>
        }<pos:position pos:line="396" pos:column="10"/></block></switch>

        <comment type="block" pos:line="398" pos:column="9">/*
         * If connection has been aborted by client: Stop working.
         * Nevertheless, we regard our operation so far as a success:
         * So reset output_failed to 0 and set result to CMD_AJP13_END_RESPONSE
         * But: Close this connection to the backend.
         */</comment>
        <if pos:line="404" pos:column="9">if <condition pos:line="404" pos:column="12">(<expr><name><name pos:line="404" pos:column="13">r<pos:position pos:line="404" pos:column="14"/></name><operator pos:line="404" pos:column="14">-&gt;<pos:position pos:line="404" pos:column="19"/></operator><name pos:line="404" pos:column="16">connection<pos:position pos:line="404" pos:column="26"/></name><operator pos:line="404" pos:column="26">-&gt;<pos:position pos:line="404" pos:column="31"/></operator><name pos:line="404" pos:column="28">aborted<pos:position pos:line="404" pos:column="35"/></name></name></expr>)<pos:position pos:line="404" pos:column="36"/></condition><then pos:line="404" pos:column="36"> <block pos:line="404" pos:column="37">{
            <expr_stmt><expr><name><name pos:line="405" pos:column="13">conn<pos:position pos:line="405" pos:column="17"/></name><operator pos:line="405" pos:column="17">-&gt;<pos:position pos:line="405" pos:column="22"/></operator><name pos:line="405" pos:column="19">close<pos:position pos:line="405" pos:column="24"/></name></name><operator pos:line="405" pos:column="24">++<pos:position pos:line="405" pos:column="26"/></operator></expr>;<pos:position pos:line="405" pos:column="27"/></expr_stmt>
            <expr_stmt><expr><name pos:line="406" pos:column="13">output_failed<pos:position pos:line="406" pos:column="26"/></name> <operator pos:line="406" pos:column="27">=<pos:position pos:line="406" pos:column="28"/></operator> <literal type="number" pos:line="406" pos:column="29">0<pos:position pos:line="406" pos:column="30"/></literal></expr>;<pos:position pos:line="406" pos:column="31"/></expr_stmt>
            <expr_stmt><expr><name pos:line="407" pos:column="13">result<pos:position pos:line="407" pos:column="19"/></name> <operator pos:line="407" pos:column="20">=<pos:position pos:line="407" pos:column="21"/></operator> <name pos:line="407" pos:column="22">CMD_AJP13_END_RESPONSE<pos:position pos:line="407" pos:column="44"/></name></expr>;<pos:position pos:line="407" pos:column="45"/></expr_stmt>
            <expr_stmt><expr><name pos:line="408" pos:column="13">request_ended<pos:position pos:line="408" pos:column="26"/></name> <operator pos:line="408" pos:column="27">=<pos:position pos:line="408" pos:column="28"/></operator> <literal type="number" pos:line="408" pos:column="29">1<pos:position pos:line="408" pos:column="30"/></literal></expr>;<pos:position pos:line="408" pos:column="31"/></expr_stmt>
        }<pos:position pos:line="409" pos:column="10"/></block></then></if>

        <comment type="block" pos:line="411" pos:column="9">/*
         * We either have finished successfully or we failed.
         * So bail out
         */</comment>
        <if pos:line="415" pos:column="9">if <condition pos:line="415" pos:column="12">(<expr><operator pos:line="415" pos:column="13">(<pos:position pos:line="415" pos:column="14"/></operator><name pos:line="415" pos:column="14">result<pos:position pos:line="415" pos:column="20"/></name> <operator pos:line="415" pos:column="21">==<pos:position pos:line="415" pos:column="23"/></operator> <name pos:line="415" pos:column="24">CMD_AJP13_END_RESPONSE<pos:position pos:line="415" pos:column="46"/></name><operator pos:line="415" pos:column="46">)<pos:position pos:line="415" pos:column="47"/></operator> <operator pos:line="415" pos:column="48">||<pos:position pos:line="415" pos:column="50"/></operator> <name pos:line="415" pos:column="51">backend_failed<pos:position pos:line="415" pos:column="65"/></name>
            <operator pos:line="416" pos:column="13">||<pos:position pos:line="416" pos:column="15"/></operator> <name pos:line="416" pos:column="16">output_failed<pos:position pos:line="416" pos:column="29"/></name></expr>)<pos:position pos:line="416" pos:column="30"/></condition><then pos:line="416" pos:column="30">
            <block type="pseudo"><break pos:line="417" pos:column="13">break;<pos:position pos:line="417" pos:column="19"/></break></block></then></if>

        <comment type="block" pos:line="419" pos:column="9">/* read the response */</comment>
        <expr_stmt><expr><name pos:line="420" pos:column="9">status<pos:position pos:line="420" pos:column="15"/></name> <operator pos:line="420" pos:column="16">=<pos:position pos:line="420" pos:column="17"/></operator> <call><name pos:line="420" pos:column="18">ajp_read_header<pos:position pos:line="420" pos:column="33"/></name><argument_list pos:line="420" pos:column="33">(<argument><expr><name><name pos:line="420" pos:column="34">conn<pos:position pos:line="420" pos:column="38"/></name><operator pos:line="420" pos:column="38">-&gt;<pos:position pos:line="420" pos:column="43"/></operator><name pos:line="420" pos:column="40">sock<pos:position pos:line="420" pos:column="44"/></name></name></expr></argument>, <argument><expr><name pos:line="420" pos:column="46">r<pos:position pos:line="420" pos:column="47"/></name></expr></argument>, <argument><expr><name pos:line="420" pos:column="49">maxsize<pos:position pos:line="420" pos:column="56"/></name></expr></argument>,
                                 <argument><expr><operator pos:line="421" pos:column="34">(<pos:position pos:line="421" pos:column="35"/></operator><name pos:line="421" pos:column="35">ajp_msg_t<pos:position pos:line="421" pos:column="44"/></name> <operator pos:line="421" pos:column="45">*<pos:position pos:line="421" pos:column="46"/></operator><operator pos:line="421" pos:column="46">*<pos:position pos:line="421" pos:column="47"/></operator><operator pos:line="421" pos:column="47">)<pos:position pos:line="421" pos:column="48"/></operator><operator pos:line="421" pos:column="48">&amp;<pos:position pos:line="421" pos:column="53"/></operator><operator pos:line="421" pos:column="49">(<pos:position pos:line="421" pos:column="50"/></operator><name><name pos:line="421" pos:column="50">conn<pos:position pos:line="421" pos:column="54"/></name><operator pos:line="421" pos:column="54">-&gt;<pos:position pos:line="421" pos:column="59"/></operator><name pos:line="421" pos:column="56">data<pos:position pos:line="421" pos:column="60"/></name></name><operator pos:line="421" pos:column="60">)<pos:position pos:line="421" pos:column="61"/></operator></expr></argument>)<pos:position pos:line="421" pos:column="62"/></argument_list></call></expr>;<pos:position pos:line="421" pos:column="63"/></expr_stmt>
        <if pos:line="422" pos:column="9">if <condition pos:line="422" pos:column="12">(<expr><name pos:line="422" pos:column="13">status<pos:position pos:line="422" pos:column="19"/></name> <operator pos:line="422" pos:column="20">!=<pos:position pos:line="422" pos:column="22"/></operator> <name pos:line="422" pos:column="23">APR_SUCCESS<pos:position pos:line="422" pos:column="34"/></name></expr>)<pos:position pos:line="422" pos:column="35"/></condition><then pos:line="422" pos:column="35"> <block pos:line="422" pos:column="36">{
            <expr_stmt><expr><name pos:line="423" pos:column="13">backend_failed<pos:position pos:line="423" pos:column="27"/></name> <operator pos:line="423" pos:column="28">=<pos:position pos:line="423" pos:column="29"/></operator> <literal type="number" pos:line="423" pos:column="30">1<pos:position pos:line="423" pos:column="31"/></literal></expr>;<pos:position pos:line="423" pos:column="32"/></expr_stmt>
            <expr_stmt><expr><call><name pos:line="424" pos:column="13">ap_log_rerror<pos:position pos:line="424" pos:column="26"/></name><argument_list pos:line="424" pos:column="26">(<argument><expr><name pos:line="424" pos:column="27">APLOG_MARK<pos:position pos:line="424" pos:column="37"/></name></expr></argument>, <argument><expr><name pos:line="424" pos:column="39">APLOG_DEBUG<pos:position pos:line="424" pos:column="50"/></name></expr></argument>, <argument><expr><name pos:line="424" pos:column="52">status<pos:position pos:line="424" pos:column="58"/></name></expr></argument>, <argument><expr><name pos:line="424" pos:column="60">r<pos:position pos:line="424" pos:column="61"/></name></expr></argument>, <argument><expr><call><name pos:line="424" pos:column="63">APLOGNO<pos:position pos:line="424" pos:column="70"/></name><argument_list pos:line="424" pos:column="70">(<argument><expr><literal type="number" pos:line="424" pos:column="71">00889<pos:position pos:line="424" pos:column="76"/></literal></expr></argument>)<pos:position pos:line="424" pos:column="77"/></argument_list></call>
                          <literal type="string" pos:line="425" pos:column="27">"ajp_read_header failed"<pos:position pos:line="425" pos:column="51"/></literal></expr></argument>)<pos:position pos:line="425" pos:column="52"/></argument_list></call></expr>;<pos:position pos:line="425" pos:column="53"/></expr_stmt>
            <break pos:line="426" pos:column="13">break;<pos:position pos:line="426" pos:column="19"/></break>
        }<pos:position pos:line="427" pos:column="10"/></block></then></if>
        <expr_stmt><expr><name pos:line="428" pos:column="9">result<pos:position pos:line="428" pos:column="15"/></name> <operator pos:line="428" pos:column="16">=<pos:position pos:line="428" pos:column="17"/></operator> <call><name pos:line="428" pos:column="18">ajp_parse_type<pos:position pos:line="428" pos:column="32"/></name><argument_list pos:line="428" pos:column="32">(<argument><expr><name pos:line="428" pos:column="33">r<pos:position pos:line="428" pos:column="34"/></name></expr></argument>, <argument><expr><name><name pos:line="428" pos:column="36">conn<pos:position pos:line="428" pos:column="40"/></name><operator pos:line="428" pos:column="40">-&gt;<pos:position pos:line="428" pos:column="45"/></operator><name pos:line="428" pos:column="42">data<pos:position pos:line="428" pos:column="46"/></name></name></expr></argument>)<pos:position pos:line="428" pos:column="47"/></argument_list></call></expr>;<pos:position pos:line="428" pos:column="48"/></expr_stmt>
    }<pos:position pos:line="429" pos:column="6"/></block></for>
    <expr_stmt><expr><call><name pos:line="430" pos:column="5">apr_brigade_destroy<pos:position pos:line="430" pos:column="24"/></name><argument_list pos:line="430" pos:column="24">(<argument><expr><name pos:line="430" pos:column="25">input_brigade<pos:position pos:line="430" pos:column="38"/></name></expr></argument>)<pos:position pos:line="430" pos:column="39"/></argument_list></call></expr>;<pos:position pos:line="430" pos:column="40"/></expr_stmt>

    <comment type="block" pos:line="432" pos:column="5">/*
     * Clear output_brigade to remove possible buckets that remained there
     * after an error.
     */</comment>
    <expr_stmt><expr><call><name pos:line="436" pos:column="5">apr_brigade_cleanup<pos:position pos:line="436" pos:column="24"/></name><argument_list pos:line="436" pos:column="24">(<argument><expr><name pos:line="436" pos:column="25">output_brigade<pos:position pos:line="436" pos:column="39"/></name></expr></argument>)<pos:position pos:line="436" pos:column="40"/></argument_list></call></expr>;<pos:position pos:line="436" pos:column="41"/></expr_stmt>

    <if pos:line="438" pos:column="5">if <condition pos:line="438" pos:column="8">(<expr><name pos:line="438" pos:column="9">backend_failed<pos:position pos:line="438" pos:column="23"/></name> <operator pos:line="438" pos:column="24">||<pos:position pos:line="438" pos:column="26"/></operator> <name pos:line="438" pos:column="27">output_failed<pos:position pos:line="438" pos:column="40"/></name></expr>)<pos:position pos:line="438" pos:column="41"/></condition><then pos:line="438" pos:column="41"> <block pos:line="438" pos:column="42">{
        <expr_stmt><expr><call><name pos:line="439" pos:column="9">ap_log_rerror<pos:position pos:line="439" pos:column="22"/></name><argument_list pos:line="439" pos:column="22">(<argument><expr><name pos:line="439" pos:column="23">APLOG_MARK<pos:position pos:line="439" pos:column="33"/></name></expr></argument>, <argument><expr><name pos:line="439" pos:column="35">APLOG_DEBUG<pos:position pos:line="439" pos:column="46"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="439" pos:column="48">0<pos:position pos:line="439" pos:column="49"/></literal></expr></argument>, <argument><expr><name pos:line="439" pos:column="51">r<pos:position pos:line="439" pos:column="52"/></name></expr></argument>, <argument><expr><call><name pos:line="439" pos:column="54">APLOGNO<pos:position pos:line="439" pos:column="61"/></name><argument_list pos:line="439" pos:column="61">(<argument><expr><literal type="number" pos:line="439" pos:column="62">00890<pos:position pos:line="439" pos:column="67"/></literal></expr></argument>)<pos:position pos:line="439" pos:column="68"/></argument_list></call>
                      <literal type="string" pos:line="440" pos:column="23">"Processing of request failed backend: %i, "<pos:position pos:line="440" pos:column="67"/></literal>
                      <literal type="string" pos:line="441" pos:column="23">"output: %i"<pos:position pos:line="441" pos:column="35"/></literal></expr></argument>, <argument><expr><name pos:line="441" pos:column="37">backend_failed<pos:position pos:line="441" pos:column="51"/></name></expr></argument>, <argument><expr><name pos:line="441" pos:column="53">output_failed<pos:position pos:line="441" pos:column="66"/></name></expr></argument>)<pos:position pos:line="441" pos:column="67"/></argument_list></call></expr>;<pos:position pos:line="441" pos:column="68"/></expr_stmt>
        <comment type="block" pos:line="442" pos:column="9">/* We had a failure: Close connection to backend */</comment>
        <expr_stmt><expr><name><name pos:line="443" pos:column="9">conn<pos:position pos:line="443" pos:column="13"/></name><operator pos:line="443" pos:column="13">-&gt;<pos:position pos:line="443" pos:column="18"/></operator><name pos:line="443" pos:column="15">close<pos:position pos:line="443" pos:column="20"/></name></name><operator pos:line="443" pos:column="20">++<pos:position pos:line="443" pos:column="22"/></operator></expr>;<pos:position pos:line="443" pos:column="23"/></expr_stmt>
        <comment type="block" pos:line="444" pos:column="9">/* Return DONE to avoid error messages being added to the stream */</comment>
        <if pos:line="445" pos:column="9">if <condition pos:line="445" pos:column="12">(<expr><name pos:line="445" pos:column="13">data_sent<pos:position pos:line="445" pos:column="22"/></name></expr>)<pos:position pos:line="445" pos:column="23"/></condition><then pos:line="445" pos:column="23"> <block pos:line="445" pos:column="24">{
            <expr_stmt><expr><name pos:line="446" pos:column="13">rv<pos:position pos:line="446" pos:column="15"/></name> <operator pos:line="446" pos:column="16">=<pos:position pos:line="446" pos:column="17"/></operator> <name pos:line="446" pos:column="18">DONE<pos:position pos:line="446" pos:column="22"/></name></expr>;<pos:position pos:line="446" pos:column="23"/></expr_stmt>
        }<pos:position pos:line="447" pos:column="10"/></block></then></if>
    }<pos:position pos:line="448" pos:column="6"/></block></then>
    <elseif pos:line="449" pos:column="5">else <if pos:line="449" pos:column="10">if <condition pos:line="449" pos:column="13">(<expr><operator pos:line="449" pos:column="14">!<pos:position pos:line="449" pos:column="15"/></operator><name pos:line="449" pos:column="15">request_ended<pos:position pos:line="449" pos:column="28"/></name></expr>)<pos:position pos:line="449" pos:column="29"/></condition><then pos:line="449" pos:column="29"> <block pos:line="449" pos:column="30">{
        <expr_stmt><expr><call><name pos:line="450" pos:column="9">ap_log_rerror<pos:position pos:line="450" pos:column="22"/></name><argument_list pos:line="450" pos:column="22">(<argument><expr><name pos:line="450" pos:column="23">APLOG_MARK<pos:position pos:line="450" pos:column="33"/></name></expr></argument>, <argument><expr><name pos:line="450" pos:column="35">APLOG_DEBUG<pos:position pos:line="450" pos:column="46"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="450" pos:column="48">0<pos:position pos:line="450" pos:column="49"/></literal></expr></argument>, <argument><expr><name pos:line="450" pos:column="51">r<pos:position pos:line="450" pos:column="52"/></name></expr></argument>, <argument><expr><call><name pos:line="450" pos:column="54">APLOGNO<pos:position pos:line="450" pos:column="61"/></name><argument_list pos:line="450" pos:column="61">(<argument><expr><literal type="number" pos:line="450" pos:column="62">00891<pos:position pos:line="450" pos:column="67"/></literal></expr></argument>)<pos:position pos:line="450" pos:column="68"/></argument_list></call>
                      <literal type="string" pos:line="451" pos:column="23">"Processing of request didn't terminate cleanly"<pos:position pos:line="451" pos:column="71"/></literal></expr></argument>)<pos:position pos:line="451" pos:column="72"/></argument_list></call></expr>;<pos:position pos:line="451" pos:column="73"/></expr_stmt>
        <comment type="block" pos:line="452" pos:column="9">/* We had a failure: Close connection to backend */</comment>
        <expr_stmt><expr><name><name pos:line="453" pos:column="9">conn<pos:position pos:line="453" pos:column="13"/></name><operator pos:line="453" pos:column="13">-&gt;<pos:position pos:line="453" pos:column="18"/></operator><name pos:line="453" pos:column="15">close<pos:position pos:line="453" pos:column="20"/></name></name><operator pos:line="453" pos:column="20">++<pos:position pos:line="453" pos:column="22"/></operator></expr>;<pos:position pos:line="453" pos:column="23"/></expr_stmt>
        <expr_stmt><expr><name pos:line="454" pos:column="9">backend_failed<pos:position pos:line="454" pos:column="23"/></name> <operator pos:line="454" pos:column="24">=<pos:position pos:line="454" pos:column="25"/></operator> <literal type="number" pos:line="454" pos:column="26">1<pos:position pos:line="454" pos:column="27"/></literal></expr>;<pos:position pos:line="454" pos:column="28"/></expr_stmt>
        <comment type="block" pos:line="455" pos:column="9">/* Return DONE to avoid error messages being added to the stream */</comment>
        <if pos:line="456" pos:column="9">if <condition pos:line="456" pos:column="12">(<expr><name pos:line="456" pos:column="13">data_sent<pos:position pos:line="456" pos:column="22"/></name></expr>)<pos:position pos:line="456" pos:column="23"/></condition><then pos:line="456" pos:column="23"> <block pos:line="456" pos:column="24">{
            <expr_stmt><expr><name pos:line="457" pos:column="13">rv<pos:position pos:line="457" pos:column="15"/></name> <operator pos:line="457" pos:column="16">=<pos:position pos:line="457" pos:column="17"/></operator> <name pos:line="457" pos:column="18">DONE<pos:position pos:line="457" pos:column="22"/></name></expr>;<pos:position pos:line="457" pos:column="23"/></expr_stmt>
        }<pos:position pos:line="458" pos:column="10"/></block></then></if>
    }<pos:position pos:line="459" pos:column="6"/></block></then></if></elseif>
    <elseif pos:line="460" pos:column="5">else <if pos:line="460" pos:column="10">if <condition pos:line="460" pos:column="13">(<expr><operator pos:line="460" pos:column="14">!<pos:position pos:line="460" pos:column="15"/></operator><name pos:line="460" pos:column="15">conn_reuse<pos:position pos:line="460" pos:column="25"/></name></expr>)<pos:position pos:line="460" pos:column="26"/></condition><then pos:line="460" pos:column="26"> <block pos:line="460" pos:column="27">{
        <comment type="block" pos:line="461" pos:column="9">/* Our backend signalled connection close */</comment>
        <expr_stmt><expr><name><name pos:line="462" pos:column="9">conn<pos:position pos:line="462" pos:column="13"/></name><operator pos:line="462" pos:column="13">-&gt;<pos:position pos:line="462" pos:column="18"/></operator><name pos:line="462" pos:column="15">close<pos:position pos:line="462" pos:column="20"/></name></name><operator pos:line="462" pos:column="20">++<pos:position pos:line="462" pos:column="22"/></operator></expr>;<pos:position pos:line="462" pos:column="23"/></expr_stmt>
    }<pos:position pos:line="463" pos:column="6"/></block></then></if></elseif>
    <else pos:line="464" pos:column="5">else <block pos:line="464" pos:column="10">{
        <expr_stmt><expr><call><name pos:line="465" pos:column="9">ap_log_rerror<pos:position pos:line="465" pos:column="22"/></name><argument_list pos:line="465" pos:column="22">(<argument><expr><name pos:line="465" pos:column="23">APLOG_MARK<pos:position pos:line="465" pos:column="33"/></name></expr></argument>, <argument><expr><name pos:line="465" pos:column="35">APLOG_DEBUG<pos:position pos:line="465" pos:column="46"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="465" pos:column="48">0<pos:position pos:line="465" pos:column="49"/></literal></expr></argument>, <argument><expr><name pos:line="465" pos:column="51">r<pos:position pos:line="465" pos:column="52"/></name></expr></argument>, <argument><expr><call><name pos:line="465" pos:column="54">APLOGNO<pos:position pos:line="465" pos:column="61"/></name><argument_list pos:line="465" pos:column="61">(<argument><expr><literal type="number" pos:line="465" pos:column="62">00892<pos:position pos:line="465" pos:column="67"/></literal></expr></argument>)<pos:position pos:line="465" pos:column="68"/></argument_list></call>
                      <literal type="string" pos:line="466" pos:column="23">"got response from %pI (%s)"<pos:position pos:line="466" pos:column="51"/></literal></expr></argument>,
                      <argument><expr><name><name pos:line="467" pos:column="23">conn<pos:position pos:line="467" pos:column="27"/></name><operator pos:line="467" pos:column="27">-&gt;<pos:position pos:line="467" pos:column="32"/></operator><name pos:line="467" pos:column="29">worker<pos:position pos:line="467" pos:column="35"/></name><operator pos:line="467" pos:column="35">-&gt;<pos:position pos:line="467" pos:column="40"/></operator><name pos:line="467" pos:column="37">cp<pos:position pos:line="467" pos:column="39"/></name><operator pos:line="467" pos:column="39">-&gt;<pos:position pos:line="467" pos:column="44"/></operator><name pos:line="467" pos:column="41">addr<pos:position pos:line="467" pos:column="45"/></name></name></expr></argument>,
                      <argument><expr><name><name pos:line="468" pos:column="23">conn<pos:position pos:line="468" pos:column="27"/></name><operator pos:line="468" pos:column="27">-&gt;<pos:position pos:line="468" pos:column="32"/></operator><name pos:line="468" pos:column="29">worker<pos:position pos:line="468" pos:column="35"/></name><operator pos:line="468" pos:column="35">-&gt;<pos:position pos:line="468" pos:column="40"/></operator><name pos:line="468" pos:column="37">s<pos:position pos:line="468" pos:column="38"/></name><operator pos:line="468" pos:column="38">-&gt;<pos:position pos:line="468" pos:column="43"/></operator><name pos:line="468" pos:column="40">hostname<pos:position pos:line="468" pos:column="48"/></name></name></expr></argument>)<pos:position pos:line="468" pos:column="49"/></argument_list></call></expr>;<pos:position pos:line="468" pos:column="50"/></expr_stmt>

        <if pos:line="470" pos:column="9">if <condition pos:line="470" pos:column="12">(<expr><name><name pos:line="470" pos:column="13">conf<pos:position pos:line="470" pos:column="17"/></name><operator pos:line="470" pos:column="17">-&gt;<pos:position pos:line="470" pos:column="22"/></operator><name pos:line="470" pos:column="19">error_override<pos:position pos:line="470" pos:column="33"/></name></name> <operator pos:line="470" pos:column="34">&amp;&amp;<pos:position pos:line="470" pos:column="44"/></operator> <call><name pos:line="470" pos:column="37">ap_is_HTTP_ERROR<pos:position pos:line="470" pos:column="53"/></name><argument_list pos:line="470" pos:column="53">(<argument><expr><name><name pos:line="470" pos:column="54">r<pos:position pos:line="470" pos:column="55"/></name><operator pos:line="470" pos:column="55">-&gt;<pos:position pos:line="470" pos:column="60"/></operator><name pos:line="470" pos:column="57">status<pos:position pos:line="470" pos:column="63"/></name></name></expr></argument>)<pos:position pos:line="470" pos:column="64"/></argument_list></call></expr>)<pos:position pos:line="470" pos:column="65"/></condition><then pos:line="470" pos:column="65"> <block pos:line="470" pos:column="66">{
            <comment type="block" pos:line="471" pos:column="13">/* clear r-&gt;status for override error, otherwise ErrorDocument
             * thinks that this is a recursive error, and doesn't find the
             * custom error page
             */</comment>
            <expr_stmt><expr><name pos:line="475" pos:column="13">rv<pos:position pos:line="475" pos:column="15"/></name> <operator pos:line="475" pos:column="16">=<pos:position pos:line="475" pos:column="17"/></operator> <name><name pos:line="475" pos:column="18">r<pos:position pos:line="475" pos:column="19"/></name><operator pos:line="475" pos:column="19">-&gt;<pos:position pos:line="475" pos:column="24"/></operator><name pos:line="475" pos:column="21">status<pos:position pos:line="475" pos:column="27"/></name></name></expr>;<pos:position pos:line="475" pos:column="28"/></expr_stmt>
            <expr_stmt><expr><name><name pos:line="476" pos:column="13">r<pos:position pos:line="476" pos:column="14"/></name><operator pos:line="476" pos:column="14">-&gt;<pos:position pos:line="476" pos:column="19"/></operator><name pos:line="476" pos:column="16">status<pos:position pos:line="476" pos:column="22"/></name></name> <operator pos:line="476" pos:column="23">=<pos:position pos:line="476" pos:column="24"/></operator> <name pos:line="476" pos:column="25">HTTP_OK<pos:position pos:line="476" pos:column="32"/></name></expr>;<pos:position pos:line="476" pos:column="33"/></expr_stmt>
        }<pos:position pos:line="477" pos:column="10"/></block></then>
        <else pos:line="478" pos:column="9">else <block pos:line="478" pos:column="14">{
            <expr_stmt><expr><name pos:line="479" pos:column="13">rv<pos:position pos:line="479" pos:column="15"/></name> <operator pos:line="479" pos:column="16">=<pos:position pos:line="479" pos:column="17"/></operator> <name pos:line="479" pos:column="18">OK<pos:position pos:line="479" pos:column="20"/></name></expr>;<pos:position pos:line="479" pos:column="21"/></expr_stmt>
        }<pos:position pos:line="480" pos:column="10"/></block></else></if>
    }<pos:position pos:line="481" pos:column="6"/></block></else></if>

    <if pos:line="483" pos:column="5">if <condition pos:line="483" pos:column="8">(<expr><name pos:line="483" pos:column="9">backend_failed<pos:position pos:line="483" pos:column="23"/></name></expr>)<pos:position pos:line="483" pos:column="24"/></condition><then pos:line="483" pos:column="24"> <block pos:line="483" pos:column="25">{
        <expr_stmt><expr><call><name pos:line="484" pos:column="9">ap_log_rerror<pos:position pos:line="484" pos:column="22"/></name><argument_list pos:line="484" pos:column="22">(<argument><expr><name pos:line="484" pos:column="23">APLOG_MARK<pos:position pos:line="484" pos:column="33"/></name></expr></argument>, <argument><expr><name pos:line="484" pos:column="35">APLOG_ERR<pos:position pos:line="484" pos:column="44"/></name></expr></argument>, <argument><expr><name pos:line="484" pos:column="46">status<pos:position pos:line="484" pos:column="52"/></name></expr></argument>, <argument><expr><name pos:line="484" pos:column="54">r<pos:position pos:line="484" pos:column="55"/></name></expr></argument>, <argument><expr><call><name pos:line="484" pos:column="57">APLOGNO<pos:position pos:line="484" pos:column="64"/></name><argument_list pos:line="484" pos:column="64">(<argument><expr><literal type="number" pos:line="484" pos:column="65">00893<pos:position pos:line="484" pos:column="70"/></literal></expr></argument>)<pos:position pos:line="484" pos:column="71"/></argument_list></call>
                      <literal type="string" pos:line="485" pos:column="23">"dialog to %pI (%s) failed"<pos:position pos:line="485" pos:column="50"/></literal></expr></argument>,
                      <argument><expr><name><name pos:line="486" pos:column="23">conn<pos:position pos:line="486" pos:column="27"/></name><operator pos:line="486" pos:column="27">-&gt;<pos:position pos:line="486" pos:column="32"/></operator><name pos:line="486" pos:column="29">worker<pos:position pos:line="486" pos:column="35"/></name><operator pos:line="486" pos:column="35">-&gt;<pos:position pos:line="486" pos:column="40"/></operator><name pos:line="486" pos:column="37">cp<pos:position pos:line="486" pos:column="39"/></name><operator pos:line="486" pos:column="39">-&gt;<pos:position pos:line="486" pos:column="44"/></operator><name pos:line="486" pos:column="41">addr<pos:position pos:line="486" pos:column="45"/></name></name></expr></argument>,
                      <argument><expr><name><name pos:line="487" pos:column="23">conn<pos:position pos:line="487" pos:column="27"/></name><operator pos:line="487" pos:column="27">-&gt;<pos:position pos:line="487" pos:column="32"/></operator><name pos:line="487" pos:column="29">worker<pos:position pos:line="487" pos:column="35"/></name><operator pos:line="487" pos:column="35">-&gt;<pos:position pos:line="487" pos:column="40"/></operator><name pos:line="487" pos:column="37">s<pos:position pos:line="487" pos:column="38"/></name><operator pos:line="487" pos:column="38">-&gt;<pos:position pos:line="487" pos:column="43"/></operator><name pos:line="487" pos:column="40">hostname<pos:position pos:line="487" pos:column="48"/></name></name></expr></argument>)<pos:position pos:line="487" pos:column="49"/></argument_list></call></expr>;<pos:position pos:line="487" pos:column="50"/></expr_stmt>
        <comment type="block" pos:line="488" pos:column="9">/*
         * If we already send data, signal a broken backend connection
         * upwards in the chain.
         */</comment>
        <if pos:line="492" pos:column="9">if <condition pos:line="492" pos:column="12">(<expr><name pos:line="492" pos:column="13">data_sent<pos:position pos:line="492" pos:column="22"/></name></expr>)<pos:position pos:line="492" pos:column="23"/></condition><then pos:line="492" pos:column="23"> <block pos:line="492" pos:column="24">{
            <expr_stmt><expr><call><name pos:line="493" pos:column="13">ap_proxy_backend_broke<pos:position pos:line="493" pos:column="35"/></name><argument_list pos:line="493" pos:column="35">(<argument><expr><name pos:line="493" pos:column="36">r<pos:position pos:line="493" pos:column="37"/></name></expr></argument>, <argument><expr><name pos:line="493" pos:column="39">output_brigade<pos:position pos:line="493" pos:column="53"/></name></expr></argument>)<pos:position pos:line="493" pos:column="54"/></argument_list></call></expr>;<pos:position pos:line="493" pos:column="55"/></expr_stmt>
        }<pos:position pos:line="494" pos:column="10"/></block></then> <elseif pos:line="494" pos:column="11">else <if pos:line="494" pos:column="16">if <condition pos:line="494" pos:column="19">(<expr><operator pos:line="494" pos:column="20">!<pos:position pos:line="494" pos:column="21"/></operator><name pos:line="494" pos:column="21">send_body<pos:position pos:line="494" pos:column="30"/></name> <operator pos:line="494" pos:column="31">&amp;&amp;<pos:position pos:line="494" pos:column="41"/></operator> <operator pos:line="494" pos:column="34">(<pos:position pos:line="494" pos:column="35"/></operator><call><name pos:line="494" pos:column="35">is_idempotent<pos:position pos:line="494" pos:column="48"/></name><argument_list pos:line="494" pos:column="48">(<argument><expr><name pos:line="494" pos:column="49">r<pos:position pos:line="494" pos:column="50"/></name></expr></argument>)<pos:position pos:line="494" pos:column="51"/></argument_list></call> <operator pos:line="494" pos:column="52">==<pos:position pos:line="494" pos:column="54"/></operator> <name pos:line="494" pos:column="55">METHOD_IDEMPOTENT<pos:position pos:line="494" pos:column="72"/></name><operator pos:line="494" pos:column="72">)<pos:position pos:line="494" pos:column="73"/></operator></expr>)<pos:position pos:line="494" pos:column="74"/></condition><then pos:line="494" pos:column="74"> <block pos:line="494" pos:column="75">{
            <comment type="block" pos:line="495" pos:column="13">/*
             * This is only non fatal when we have not send (parts) of a possible
             * request body so far (we do not store it and thus cannot send it
             * again) and the method is idempotent. In this case we can dare to
             * retry it with a different worker if we are a balancer member.
             */</comment>
            <expr_stmt><expr><name pos:line="501" pos:column="13">rv<pos:position pos:line="501" pos:column="15"/></name> <operator pos:line="501" pos:column="16">=<pos:position pos:line="501" pos:column="17"/></operator> <name pos:line="501" pos:column="18">HTTP_SERVICE_UNAVAILABLE<pos:position pos:line="501" pos:column="42"/></name></expr>;<pos:position pos:line="501" pos:column="43"/></expr_stmt>
        }<pos:position pos:line="502" pos:column="10"/></block></then></if></elseif> <else pos:line="502" pos:column="11">else <block pos:line="502" pos:column="16">{
            <expr_stmt><expr><name pos:line="503" pos:column="13">rv<pos:position pos:line="503" pos:column="15"/></name> <operator pos:line="503" pos:column="16">=<pos:position pos:line="503" pos:column="17"/></operator> <name pos:line="503" pos:column="18">HTTP_INTERNAL_SERVER_ERROR<pos:position pos:line="503" pos:column="44"/></name></expr>;<pos:position pos:line="503" pos:column="45"/></expr_stmt>
        }<pos:position pos:line="504" pos:column="10"/></block></else></if>
    }<pos:position pos:line="505" pos:column="6"/></block></then></if>

    <comment type="block" pos:line="507" pos:column="5">/*
     * Ensure that we sent an EOS bucket thru the filter chain, if we already
     * have sent some data. Maybe ap_proxy_backend_broke was called and added
     * one to the brigade already (no longer making it empty). So we should
     * not do this in this case.
     */</comment>
    <if pos:line="513" pos:column="5">if <condition pos:line="513" pos:column="8">(<expr><name pos:line="513" pos:column="9">data_sent<pos:position pos:line="513" pos:column="18"/></name> <operator pos:line="513" pos:column="19">&amp;&amp;<pos:position pos:line="513" pos:column="29"/></operator> <operator pos:line="513" pos:column="22">!<pos:position pos:line="513" pos:column="23"/></operator><name><name pos:line="513" pos:column="23">r<pos:position pos:line="513" pos:column="24"/></name><operator pos:line="513" pos:column="24">-&gt;<pos:position pos:line="513" pos:column="29"/></operator><name pos:line="513" pos:column="26">eos_sent<pos:position pos:line="513" pos:column="34"/></name></name> <operator pos:line="513" pos:column="35">&amp;&amp;<pos:position pos:line="513" pos:column="45"/></operator> <call><name pos:line="513" pos:column="38">APR_BRIGADE_EMPTY<pos:position pos:line="513" pos:column="55"/></name><argument_list pos:line="513" pos:column="55">(<argument><expr><name pos:line="513" pos:column="56">output_brigade<pos:position pos:line="513" pos:column="70"/></name></expr></argument>)<pos:position pos:line="513" pos:column="71"/></argument_list></call></expr>)<pos:position pos:line="513" pos:column="72"/></condition><then pos:line="513" pos:column="72"> <block pos:line="513" pos:column="73">{
        <expr_stmt><expr><name pos:line="514" pos:column="9">e<pos:position pos:line="514" pos:column="10"/></name> <operator pos:line="514" pos:column="11">=<pos:position pos:line="514" pos:column="12"/></operator> <call><name pos:line="514" pos:column="13">apr_bucket_eos_create<pos:position pos:line="514" pos:column="34"/></name><argument_list pos:line="514" pos:column="34">(<argument><expr><name><name pos:line="514" pos:column="35">r<pos:position pos:line="514" pos:column="36"/></name><operator pos:line="514" pos:column="36">-&gt;<pos:position pos:line="514" pos:column="41"/></operator><name pos:line="514" pos:column="38">connection<pos:position pos:line="514" pos:column="48"/></name><operator pos:line="514" pos:column="48">-&gt;<pos:position pos:line="514" pos:column="53"/></operator><name pos:line="514" pos:column="50">bucket_alloc<pos:position pos:line="514" pos:column="62"/></name></name></expr></argument>)<pos:position pos:line="514" pos:column="63"/></argument_list></call></expr>;<pos:position pos:line="514" pos:column="64"/></expr_stmt>
        <expr_stmt><expr><call><name pos:line="515" pos:column="9">APR_BRIGADE_INSERT_TAIL<pos:position pos:line="515" pos:column="32"/></name><argument_list pos:line="515" pos:column="32">(<argument><expr><name pos:line="515" pos:column="33">output_brigade<pos:position pos:line="515" pos:column="47"/></name></expr></argument>, <argument><expr><name pos:line="515" pos:column="49">e<pos:position pos:line="515" pos:column="50"/></name></expr></argument>)<pos:position pos:line="515" pos:column="51"/></argument_list></call></expr>;<pos:position pos:line="515" pos:column="52"/></expr_stmt>
    }<pos:position pos:line="516" pos:column="6"/></block></then></if>

    <comment type="block" pos:line="518" pos:column="5">/* If we have added something to the brigade above, send it */</comment>
    <if pos:line="519" pos:column="5">if <condition pos:line="519" pos:column="8">(<expr><operator pos:line="519" pos:column="9">!<pos:position pos:line="519" pos:column="10"/></operator><call><name pos:line="519" pos:column="10">APR_BRIGADE_EMPTY<pos:position pos:line="519" pos:column="27"/></name><argument_list pos:line="519" pos:column="27">(<argument><expr><name pos:line="519" pos:column="28">output_brigade<pos:position pos:line="519" pos:column="42"/></name></expr></argument>)<pos:position pos:line="519" pos:column="43"/></argument_list></call></expr>)<pos:position pos:line="519" pos:column="44"/></condition><then pos:line="519" pos:column="44">
        <block type="pseudo"><expr_stmt><expr><call><name pos:line="520" pos:column="9">ap_pass_brigade<pos:position pos:line="520" pos:column="24"/></name><argument_list pos:line="520" pos:column="24">(<argument><expr><name><name pos:line="520" pos:column="25">r<pos:position pos:line="520" pos:column="26"/></name><operator pos:line="520" pos:column="26">-&gt;<pos:position pos:line="520" pos:column="31"/></operator><name pos:line="520" pos:column="28">output_filters<pos:position pos:line="520" pos:column="42"/></name></name></expr></argument>, <argument><expr><name pos:line="520" pos:column="44">output_brigade<pos:position pos:line="520" pos:column="58"/></name></expr></argument>)<pos:position pos:line="520" pos:column="59"/></argument_list></call></expr>;<pos:position pos:line="520" pos:column="60"/></expr_stmt></block></then></if>

    <expr_stmt><expr><call><name pos:line="522" pos:column="5">apr_brigade_destroy<pos:position pos:line="522" pos:column="24"/></name><argument_list pos:line="522" pos:column="24">(<argument><expr><name pos:line="522" pos:column="25">output_brigade<pos:position pos:line="522" pos:column="39"/></name></expr></argument>)<pos:position pos:line="522" pos:column="40"/></argument_list></call></expr>;<pos:position pos:line="522" pos:column="41"/></expr_stmt>

    <if pos:line="524" pos:column="5">if <condition pos:line="524" pos:column="8">(<expr><call><name pos:line="524" pos:column="9">apr_table_get<pos:position pos:line="524" pos:column="22"/></name><argument_list pos:line="524" pos:column="22">(<argument><expr><name><name pos:line="524" pos:column="23">r<pos:position pos:line="524" pos:column="24"/></name><operator pos:line="524" pos:column="24">-&gt;<pos:position pos:line="524" pos:column="29"/></operator><name pos:line="524" pos:column="26">subprocess_env<pos:position pos:line="524" pos:column="40"/></name></name></expr></argument>, <argument><expr><literal type="string" pos:line="524" pos:column="42">"proxy-nokeepalive"<pos:position pos:line="524" pos:column="61"/></literal></expr></argument>)<pos:position pos:line="524" pos:column="62"/></argument_list></call></expr>)<pos:position pos:line="524" pos:column="63"/></condition><then pos:line="524" pos:column="63"> <block pos:line="524" pos:column="64">{
        <expr_stmt><expr><name><name pos:line="525" pos:column="9">conn<pos:position pos:line="525" pos:column="13"/></name><operator pos:line="525" pos:column="13">-&gt;<pos:position pos:line="525" pos:column="18"/></operator><name pos:line="525" pos:column="15">close<pos:position pos:line="525" pos:column="20"/></name></name><operator pos:line="525" pos:column="20">++<pos:position pos:line="525" pos:column="22"/></operator></expr>;<pos:position pos:line="525" pos:column="23"/></expr_stmt>
    }<pos:position pos:line="526" pos:column="6"/></block></then></if>

    <return pos:line="528" pos:column="5">return <expr><name pos:line="528" pos:column="12">rv<pos:position pos:line="528" pos:column="14"/></name></expr>;<pos:position pos:line="528" pos:column="15"/></return>
}<pos:position pos:line="529" pos:column="2"/></block></function></unit>

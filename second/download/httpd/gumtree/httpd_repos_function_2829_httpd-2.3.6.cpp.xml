<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/httpd/gumtree/httpd_repos_function_2829_httpd-2.3.6.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><specifier pos:line="1" pos:column="8">const<pos:position pos:line="1" pos:column="13"/></specifier> <name pos:line="1" pos:column="14">char<pos:position pos:line="1" pos:column="18"/></name> <modifier pos:line="1" pos:column="19">*<pos:position pos:line="1" pos:column="20"/></modifier></type><name pos:line="1" pos:column="20">set_allow_opts<pos:position pos:line="1" pos:column="34"/></name><parameter_list pos:line="1" pos:column="34">(<parameter><decl><type><name pos:line="1" pos:column="35">cmd_parms<pos:position pos:line="1" pos:column="44"/></name> <modifier pos:line="1" pos:column="45">*<pos:position pos:line="1" pos:column="46"/></modifier></type><name pos:line="1" pos:column="46">cmd<pos:position pos:line="1" pos:column="49"/></name></decl></parameter>, <parameter><decl><type><name pos:line="1" pos:column="51">allow_options_t<pos:position pos:line="1" pos:column="66"/></name> <modifier pos:line="1" pos:column="67">*<pos:position pos:line="1" pos:column="68"/></modifier></type><name pos:line="1" pos:column="68">opts<pos:position pos:line="1" pos:column="72"/></name></decl></parameter>,
                                  <parameter><decl><type><specifier pos:line="2" pos:column="35">const<pos:position pos:line="2" pos:column="40"/></specifier> <name pos:line="2" pos:column="41">char<pos:position pos:line="2" pos:column="45"/></name> <modifier pos:line="2" pos:column="46">*<pos:position pos:line="2" pos:column="47"/></modifier></type><name pos:line="2" pos:column="47">l<pos:position pos:line="2" pos:column="48"/></name></decl></parameter>)<pos:position pos:line="2" pos:column="49"/></parameter_list>
<block pos:line="3" pos:column="1">{
    <decl_stmt><decl><type><name pos:line="4" pos:column="5">allow_options_t<pos:position pos:line="4" pos:column="20"/></name></type> <name pos:line="4" pos:column="21">opt<pos:position pos:line="4" pos:column="24"/></name></decl>;<pos:position pos:line="4" pos:column="25"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="5" pos:column="5">int<pos:position pos:line="5" pos:column="8"/></name></type> <name pos:line="5" pos:column="9">first<pos:position pos:line="5" pos:column="14"/></name> <init pos:line="5" pos:column="15">= <expr><literal type="number" pos:line="5" pos:column="17">1<pos:position pos:line="5" pos:column="18"/></literal></expr></init></decl>;<pos:position pos:line="5" pos:column="19"/></decl_stmt>

    <decl_stmt><decl><type><name pos:line="7" pos:column="5">char<pos:position pos:line="7" pos:column="9"/></name> <modifier pos:line="7" pos:column="10">*<pos:position pos:line="7" pos:column="11"/></modifier></type><name pos:line="7" pos:column="11">w<pos:position pos:line="7" pos:column="12"/></name></decl>, <modifier pos:line="7" pos:column="14">*<pos:position pos:line="7" pos:column="15"/></modifier><decl><type ref="prev"/><name pos:line="7" pos:column="15">p<pos:position pos:line="7" pos:column="16"/></name> <init pos:line="7" pos:column="17">= <expr><operator pos:line="7" pos:column="19">(<pos:position pos:line="7" pos:column="20"/></operator><name pos:line="7" pos:column="20">char<pos:position pos:line="7" pos:column="24"/></name> <operator pos:line="7" pos:column="25">*<pos:position pos:line="7" pos:column="26"/></operator><operator pos:line="7" pos:column="26">)<pos:position pos:line="7" pos:column="27"/></operator> <name pos:line="7" pos:column="28">l<pos:position pos:line="7" pos:column="29"/></name></expr></init></decl>;<pos:position pos:line="7" pos:column="30"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="8" pos:column="5">char<pos:position pos:line="8" pos:column="9"/></name> <modifier pos:line="8" pos:column="10">*<pos:position pos:line="8" pos:column="11"/></modifier></type><name pos:line="8" pos:column="11">tok_state<pos:position pos:line="8" pos:column="20"/></name></decl>;<pos:position pos:line="8" pos:column="21"/></decl_stmt>

    <while pos:line="10" pos:column="5">while <condition pos:line="10" pos:column="11">(<expr><operator pos:line="10" pos:column="12">(<pos:position pos:line="10" pos:column="13"/></operator><name pos:line="10" pos:column="13">w<pos:position pos:line="10" pos:column="14"/></name> <operator pos:line="10" pos:column="15">=<pos:position pos:line="10" pos:column="16"/></operator> <call><name pos:line="10" pos:column="17">apr_strtok<pos:position pos:line="10" pos:column="27"/></name><argument_list pos:line="10" pos:column="27">(<argument><expr><name pos:line="10" pos:column="28">p<pos:position pos:line="10" pos:column="29"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="10" pos:column="31">","<pos:position pos:line="10" pos:column="34"/></literal></expr></argument>, <argument><expr><operator pos:line="10" pos:column="36">&amp;<pos:position pos:line="10" pos:column="41"/></operator><name pos:line="10" pos:column="37">tok_state<pos:position pos:line="10" pos:column="46"/></name></expr></argument>)<pos:position pos:line="10" pos:column="47"/></argument_list></call><operator pos:line="10" pos:column="47">)<pos:position pos:line="10" pos:column="48"/></operator> <operator pos:line="10" pos:column="49">!=<pos:position pos:line="10" pos:column="51"/></operator> <name pos:line="10" pos:column="52">NULL<pos:position pos:line="10" pos:column="56"/></name></expr>)<pos:position pos:line="10" pos:column="57"/></condition> <block pos:line="10" pos:column="58">{

        <if pos:line="12" pos:column="9">if <condition pos:line="12" pos:column="12">(<expr><name pos:line="12" pos:column="13">first<pos:position pos:line="12" pos:column="18"/></name></expr>)<pos:position pos:line="12" pos:column="19"/></condition><then pos:line="12" pos:column="19"> <block pos:line="12" pos:column="20">{
            <expr_stmt><expr><name pos:line="13" pos:column="13">p<pos:position pos:line="13" pos:column="14"/></name> <operator pos:line="13" pos:column="15">=<pos:position pos:line="13" pos:column="16"/></operator> <name pos:line="13" pos:column="17">NULL<pos:position pos:line="13" pos:column="21"/></name></expr>;<pos:position pos:line="13" pos:column="22"/></expr_stmt>
            <expr_stmt><expr><operator pos:line="14" pos:column="13">*<pos:position pos:line="14" pos:column="14"/></operator><name pos:line="14" pos:column="14">opts<pos:position pos:line="14" pos:column="18"/></name> <operator pos:line="14" pos:column="19">=<pos:position pos:line="14" pos:column="20"/></operator> <name pos:line="14" pos:column="21">OPT_NONE<pos:position pos:line="14" pos:column="29"/></name></expr>;<pos:position pos:line="14" pos:column="30"/></expr_stmt>
            <expr_stmt><expr><name pos:line="15" pos:column="13">first<pos:position pos:line="15" pos:column="18"/></name> <operator pos:line="15" pos:column="19">=<pos:position pos:line="15" pos:column="20"/></operator> <literal type="number" pos:line="15" pos:column="21">0<pos:position pos:line="15" pos:column="22"/></literal></expr>;<pos:position pos:line="15" pos:column="23"/></expr_stmt>
        }<pos:position pos:line="16" pos:column="10"/></block></then></if>

        <if pos:line="18" pos:column="9">if <condition pos:line="18" pos:column="12">(<expr><operator pos:line="18" pos:column="13">!<pos:position pos:line="18" pos:column="14"/></operator><call><name pos:line="18" pos:column="14">strcasecmp<pos:position pos:line="18" pos:column="24"/></name><argument_list pos:line="18" pos:column="24">(<argument><expr><name pos:line="18" pos:column="25">w<pos:position pos:line="18" pos:column="26"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="18" pos:column="28">"Indexes"<pos:position pos:line="18" pos:column="37"/></literal></expr></argument>)<pos:position pos:line="18" pos:column="38"/></argument_list></call></expr>)<pos:position pos:line="18" pos:column="39"/></condition><then pos:line="18" pos:column="39"> <block pos:line="18" pos:column="40">{
            <expr_stmt><expr><name pos:line="19" pos:column="13">opt<pos:position pos:line="19" pos:column="16"/></name> <operator pos:line="19" pos:column="17">=<pos:position pos:line="19" pos:column="18"/></operator> <name pos:line="19" pos:column="19">OPT_INDEXES<pos:position pos:line="19" pos:column="30"/></name></expr>;<pos:position pos:line="19" pos:column="31"/></expr_stmt>
        }<pos:position pos:line="20" pos:column="10"/></block></then>
        <elseif pos:line="21" pos:column="9">else <if pos:line="21" pos:column="14">if <condition pos:line="21" pos:column="17">(<expr><operator pos:line="21" pos:column="18">!<pos:position pos:line="21" pos:column="19"/></operator><call><name pos:line="21" pos:column="19">strcasecmp<pos:position pos:line="21" pos:column="29"/></name><argument_list pos:line="21" pos:column="29">(<argument><expr><name pos:line="21" pos:column="30">w<pos:position pos:line="21" pos:column="31"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="21" pos:column="33">"Includes"<pos:position pos:line="21" pos:column="43"/></literal></expr></argument>)<pos:position pos:line="21" pos:column="44"/></argument_list></call></expr>)<pos:position pos:line="21" pos:column="45"/></condition><then pos:line="21" pos:column="45"> <block pos:line="21" pos:column="46">{
            <comment type="block" pos:line="22" pos:column="13">/* If Includes is permitted, both Includes and
             * IncludesNOEXEC may be changed. */</comment>
            <expr_stmt><expr><name pos:line="24" pos:column="13">opt<pos:position pos:line="24" pos:column="16"/></name> <operator pos:line="24" pos:column="17">=<pos:position pos:line="24" pos:column="18"/></operator> <operator pos:line="24" pos:column="19">(<pos:position pos:line="24" pos:column="20"/></operator><name pos:line="24" pos:column="20">OPT_INCLUDES<pos:position pos:line="24" pos:column="32"/></name> <operator pos:line="24" pos:column="33">|<pos:position pos:line="24" pos:column="34"/></operator> <name pos:line="24" pos:column="35">OPT_INC_WITH_EXEC<pos:position pos:line="24" pos:column="52"/></name><operator pos:line="24" pos:column="52">)<pos:position pos:line="24" pos:column="53"/></operator></expr>;<pos:position pos:line="24" pos:column="54"/></expr_stmt>
        }<pos:position pos:line="25" pos:column="10"/></block></then></if></elseif>
        <elseif pos:line="26" pos:column="9">else <if pos:line="26" pos:column="14">if <condition pos:line="26" pos:column="17">(<expr><operator pos:line="26" pos:column="18">!<pos:position pos:line="26" pos:column="19"/></operator><call><name pos:line="26" pos:column="19">strcasecmp<pos:position pos:line="26" pos:column="29"/></name><argument_list pos:line="26" pos:column="29">(<argument><expr><name pos:line="26" pos:column="30">w<pos:position pos:line="26" pos:column="31"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="26" pos:column="33">"IncludesNOEXEC"<pos:position pos:line="26" pos:column="49"/></literal></expr></argument>)<pos:position pos:line="26" pos:column="50"/></argument_list></call></expr>)<pos:position pos:line="26" pos:column="51"/></condition><then pos:line="26" pos:column="51"> <block pos:line="26" pos:column="52">{
            <expr_stmt><expr><name pos:line="27" pos:column="13">opt<pos:position pos:line="27" pos:column="16"/></name> <operator pos:line="27" pos:column="17">=<pos:position pos:line="27" pos:column="18"/></operator> <name pos:line="27" pos:column="19">OPT_INCLUDES<pos:position pos:line="27" pos:column="31"/></name></expr>;<pos:position pos:line="27" pos:column="32"/></expr_stmt>
        }<pos:position pos:line="28" pos:column="10"/></block></then></if></elseif>
        <elseif pos:line="29" pos:column="9">else <if pos:line="29" pos:column="14">if <condition pos:line="29" pos:column="17">(<expr><operator pos:line="29" pos:column="18">!<pos:position pos:line="29" pos:column="19"/></operator><call><name pos:line="29" pos:column="19">strcasecmp<pos:position pos:line="29" pos:column="29"/></name><argument_list pos:line="29" pos:column="29">(<argument><expr><name pos:line="29" pos:column="30">w<pos:position pos:line="29" pos:column="31"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="29" pos:column="33">"FollowSymLinks"<pos:position pos:line="29" pos:column="49"/></literal></expr></argument>)<pos:position pos:line="29" pos:column="50"/></argument_list></call></expr>)<pos:position pos:line="29" pos:column="51"/></condition><then pos:line="29" pos:column="51"> <block pos:line="29" pos:column="52">{
            <expr_stmt><expr><name pos:line="30" pos:column="13">opt<pos:position pos:line="30" pos:column="16"/></name> <operator pos:line="30" pos:column="17">=<pos:position pos:line="30" pos:column="18"/></operator> <name pos:line="30" pos:column="19">OPT_SYM_LINKS<pos:position pos:line="30" pos:column="32"/></name></expr>;<pos:position pos:line="30" pos:column="33"/></expr_stmt>
        }<pos:position pos:line="31" pos:column="10"/></block></then></if></elseif>
        <elseif pos:line="32" pos:column="9">else <if pos:line="32" pos:column="14">if <condition pos:line="32" pos:column="17">(<expr><operator pos:line="32" pos:column="18">!<pos:position pos:line="32" pos:column="19"/></operator><call><name pos:line="32" pos:column="19">strcasecmp<pos:position pos:line="32" pos:column="29"/></name><argument_list pos:line="32" pos:column="29">(<argument><expr><name pos:line="32" pos:column="30">w<pos:position pos:line="32" pos:column="31"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="32" pos:column="33">"SymLinksIfOwnerMatch"<pos:position pos:line="32" pos:column="55"/></literal></expr></argument>)<pos:position pos:line="32" pos:column="56"/></argument_list></call></expr>)<pos:position pos:line="32" pos:column="57"/></condition><then pos:line="32" pos:column="57"> <block pos:line="32" pos:column="58">{
            <expr_stmt><expr><name pos:line="33" pos:column="13">opt<pos:position pos:line="33" pos:column="16"/></name> <operator pos:line="33" pos:column="17">=<pos:position pos:line="33" pos:column="18"/></operator> <name pos:line="33" pos:column="19">OPT_SYM_OWNER<pos:position pos:line="33" pos:column="32"/></name></expr>;<pos:position pos:line="33" pos:column="33"/></expr_stmt>
        }<pos:position pos:line="34" pos:column="10"/></block></then></if></elseif>
        <elseif pos:line="35" pos:column="9">else <if pos:line="35" pos:column="14">if <condition pos:line="35" pos:column="17">(<expr><operator pos:line="35" pos:column="18">!<pos:position pos:line="35" pos:column="19"/></operator><call><name pos:line="35" pos:column="19">strcasecmp<pos:position pos:line="35" pos:column="29"/></name><argument_list pos:line="35" pos:column="29">(<argument><expr><name pos:line="35" pos:column="30">w<pos:position pos:line="35" pos:column="31"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="35" pos:column="33">"ExecCGI"<pos:position pos:line="35" pos:column="42"/></literal></expr></argument>)<pos:position pos:line="35" pos:column="43"/></argument_list></call></expr>)<pos:position pos:line="35" pos:column="44"/></condition><then pos:line="35" pos:column="44"> <block pos:line="35" pos:column="45">{
            <expr_stmt><expr><name pos:line="36" pos:column="13">opt<pos:position pos:line="36" pos:column="16"/></name> <operator pos:line="36" pos:column="17">=<pos:position pos:line="36" pos:column="18"/></operator> <name pos:line="36" pos:column="19">OPT_EXECCGI<pos:position pos:line="36" pos:column="30"/></name></expr>;<pos:position pos:line="36" pos:column="31"/></expr_stmt>
        }<pos:position pos:line="37" pos:column="10"/></block></then></if></elseif>
        <elseif pos:line="38" pos:column="9">else <if pos:line="38" pos:column="14">if <condition pos:line="38" pos:column="17">(<expr><operator pos:line="38" pos:column="18">!<pos:position pos:line="38" pos:column="19"/></operator><call><name pos:line="38" pos:column="19">strcasecmp<pos:position pos:line="38" pos:column="29"/></name><argument_list pos:line="38" pos:column="29">(<argument><expr><name pos:line="38" pos:column="30">w<pos:position pos:line="38" pos:column="31"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="38" pos:column="33">"MultiViews"<pos:position pos:line="38" pos:column="45"/></literal></expr></argument>)<pos:position pos:line="38" pos:column="46"/></argument_list></call></expr>)<pos:position pos:line="38" pos:column="47"/></condition><then pos:line="38" pos:column="47"> <block pos:line="38" pos:column="48">{
            <expr_stmt><expr><name pos:line="39" pos:column="13">opt<pos:position pos:line="39" pos:column="16"/></name> <operator pos:line="39" pos:column="17">=<pos:position pos:line="39" pos:column="18"/></operator> <name pos:line="39" pos:column="19">OPT_MULTI<pos:position pos:line="39" pos:column="28"/></name></expr>;<pos:position pos:line="39" pos:column="29"/></expr_stmt>
        }<pos:position pos:line="40" pos:column="10"/></block></then></if></elseif>
        <elseif pos:line="41" pos:column="9">else <if pos:line="41" pos:column="14">if <condition pos:line="41" pos:column="17">(<expr><operator pos:line="41" pos:column="18">!<pos:position pos:line="41" pos:column="19"/></operator><call><name pos:line="41" pos:column="19">strcasecmp<pos:position pos:line="41" pos:column="29"/></name><argument_list pos:line="41" pos:column="29">(<argument><expr><name pos:line="41" pos:column="30">w<pos:position pos:line="41" pos:column="31"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="41" pos:column="33">"RunScripts"<pos:position pos:line="41" pos:column="45"/></literal></expr></argument>)<pos:position pos:line="41" pos:column="46"/></argument_list></call></expr>)<pos:position pos:line="41" pos:column="47"/></condition><then pos:line="41" pos:column="47"> <block pos:line="41" pos:column="48">{ <comment type="block" pos:line="41" pos:column="50">/* AI backcompat. Yuck */</comment>
            <expr_stmt><expr><name pos:line="42" pos:column="13">opt<pos:position pos:line="42" pos:column="16"/></name> <operator pos:line="42" pos:column="17">=<pos:position pos:line="42" pos:column="18"/></operator> <name pos:line="42" pos:column="19">OPT_MULTI<pos:position pos:line="42" pos:column="28"/></name><operator pos:line="42" pos:column="28">|<pos:position pos:line="42" pos:column="29"/></operator><name pos:line="42" pos:column="29">OPT_EXECCGI<pos:position pos:line="42" pos:column="40"/></name></expr>;<pos:position pos:line="42" pos:column="41"/></expr_stmt>
        }<pos:position pos:line="43" pos:column="10"/></block></then></if></elseif>
        <elseif pos:line="44" pos:column="9">else <if pos:line="44" pos:column="14">if <condition pos:line="44" pos:column="17">(<expr><operator pos:line="44" pos:column="18">!<pos:position pos:line="44" pos:column="19"/></operator><call><name pos:line="44" pos:column="19">strcasecmp<pos:position pos:line="44" pos:column="29"/></name><argument_list pos:line="44" pos:column="29">(<argument><expr><name pos:line="44" pos:column="30">w<pos:position pos:line="44" pos:column="31"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="44" pos:column="33">"None"<pos:position pos:line="44" pos:column="39"/></literal></expr></argument>)<pos:position pos:line="44" pos:column="40"/></argument_list></call></expr>)<pos:position pos:line="44" pos:column="41"/></condition><then pos:line="44" pos:column="41"> <block pos:line="44" pos:column="42">{
            <expr_stmt><expr><name pos:line="45" pos:column="13">opt<pos:position pos:line="45" pos:column="16"/></name> <operator pos:line="45" pos:column="17">=<pos:position pos:line="45" pos:column="18"/></operator> <name pos:line="45" pos:column="19">OPT_NONE<pos:position pos:line="45" pos:column="27"/></name></expr>;<pos:position pos:line="45" pos:column="28"/></expr_stmt>
        }<pos:position pos:line="46" pos:column="10"/></block></then></if></elseif>
        <elseif pos:line="47" pos:column="9">else <if pos:line="47" pos:column="14">if <condition pos:line="47" pos:column="17">(<expr><operator pos:line="47" pos:column="18">!<pos:position pos:line="47" pos:column="19"/></operator><call><name pos:line="47" pos:column="19">strcasecmp<pos:position pos:line="47" pos:column="29"/></name><argument_list pos:line="47" pos:column="29">(<argument><expr><name pos:line="47" pos:column="30">w<pos:position pos:line="47" pos:column="31"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="47" pos:column="33">"All"<pos:position pos:line="47" pos:column="38"/></literal></expr></argument>)<pos:position pos:line="47" pos:column="39"/></argument_list></call></expr>)<pos:position pos:line="47" pos:column="40"/></condition><then pos:line="47" pos:column="40"> <block pos:line="47" pos:column="41">{
            <expr_stmt><expr><name pos:line="48" pos:column="13">opt<pos:position pos:line="48" pos:column="16"/></name> <operator pos:line="48" pos:column="17">=<pos:position pos:line="48" pos:column="18"/></operator> <name pos:line="48" pos:column="19">OPT_ALL<pos:position pos:line="48" pos:column="26"/></name></expr>;<pos:position pos:line="48" pos:column="27"/></expr_stmt>
        }<pos:position pos:line="49" pos:column="10"/></block></then></if></elseif>
        <else pos:line="50" pos:column="9">else <block pos:line="50" pos:column="14">{
            <return pos:line="51" pos:column="13">return <expr><call><name pos:line="51" pos:column="20">apr_pstrcat<pos:position pos:line="51" pos:column="31"/></name><argument_list pos:line="51" pos:column="31">(<argument><expr><name><name pos:line="51" pos:column="32">cmd<pos:position pos:line="51" pos:column="35"/></name><operator pos:line="51" pos:column="35">-&gt;<pos:position pos:line="51" pos:column="40"/></operator><name pos:line="51" pos:column="37">pool<pos:position pos:line="51" pos:column="41"/></name></name></expr></argument>, <argument><expr><literal type="string" pos:line="51" pos:column="43">"Illegal option "<pos:position pos:line="51" pos:column="60"/></literal></expr></argument>, <argument><expr><name pos:line="51" pos:column="62">w<pos:position pos:line="51" pos:column="63"/></name></expr></argument>, <argument><expr><name pos:line="51" pos:column="65">NULL<pos:position pos:line="51" pos:column="69"/></name></expr></argument>)<pos:position pos:line="51" pos:column="70"/></argument_list></call></expr>;<pos:position pos:line="51" pos:column="71"/></return>
        }<pos:position pos:line="52" pos:column="10"/></block></else></if>

        <expr_stmt><expr><operator pos:line="54" pos:column="9">*<pos:position pos:line="54" pos:column="10"/></operator><name pos:line="54" pos:column="10">opts<pos:position pos:line="54" pos:column="14"/></name> <operator pos:line="54" pos:column="15">|=<pos:position pos:line="54" pos:column="17"/></operator> <name pos:line="54" pos:column="18">opt<pos:position pos:line="54" pos:column="21"/></name></expr>;<pos:position pos:line="54" pos:column="22"/></expr_stmt>
    }<pos:position pos:line="55" pos:column="6"/></block></while>

    <expr_stmt><expr><operator pos:line="57" pos:column="5">(<pos:position pos:line="57" pos:column="6"/></operator><operator pos:line="57" pos:column="6">*<pos:position pos:line="57" pos:column="7"/></operator><name pos:line="57" pos:column="7">opts<pos:position pos:line="57" pos:column="11"/></name><operator pos:line="57" pos:column="11">)<pos:position pos:line="57" pos:column="12"/></operator> <operator pos:line="57" pos:column="13">&amp;=<pos:position pos:line="57" pos:column="19"/></operator> <operator pos:line="57" pos:column="16">(<pos:position pos:line="57" pos:column="17"/></operator><operator pos:line="57" pos:column="17">~<pos:position pos:line="57" pos:column="18"/></operator><name pos:line="57" pos:column="18">OPT_UNSET<pos:position pos:line="57" pos:column="27"/></name><operator pos:line="57" pos:column="27">)<pos:position pos:line="57" pos:column="28"/></operator></expr>;<pos:position pos:line="57" pos:column="29"/></expr_stmt>

    <return pos:line="59" pos:column="5">return <expr><name pos:line="59" pos:column="12">NULL<pos:position pos:line="59" pos:column="16"/></name></expr>;<pos:position pos:line="59" pos:column="17"/></return>
}<pos:position pos:line="60" pos:column="2"/></block></function></unit>

<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/httpd/gumtree/httpd_function_61.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">int<pos:position pos:line="1" pos:column="11"/></name></type> <name pos:line="1" pos:column="12">cache_in_filter<pos:position pos:line="1" pos:column="27"/></name><parameter_list pos:line="1" pos:column="27">(<parameter><decl><type><name pos:line="1" pos:column="28">ap_filter_t<pos:position pos:line="1" pos:column="39"/></name> <modifier pos:line="1" pos:column="40">*<pos:position pos:line="1" pos:column="41"/></modifier></type><name pos:line="1" pos:column="41">f<pos:position pos:line="1" pos:column="42"/></name></decl></parameter>, <parameter><decl><type><name pos:line="1" pos:column="44">apr_bucket_brigade<pos:position pos:line="1" pos:column="62"/></name> <modifier pos:line="1" pos:column="63">*<pos:position pos:line="1" pos:column="64"/></modifier></type><name pos:line="1" pos:column="64">in<pos:position pos:line="1" pos:column="66"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="67"/></parameter_list>
<block pos:line="2" pos:column="1">{
    <decl_stmt><decl><type><name pos:line="3" pos:column="5">int<pos:position pos:line="3" pos:column="8"/></name></type> <name pos:line="3" pos:column="9">rv<pos:position pos:line="3" pos:column="11"/></name></decl>;<pos:position pos:line="3" pos:column="12"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="4" pos:column="5">request_rec<pos:position pos:line="4" pos:column="16"/></name> <modifier pos:line="4" pos:column="17">*<pos:position pos:line="4" pos:column="18"/></modifier></type><name pos:line="4" pos:column="18">r<pos:position pos:line="4" pos:column="19"/></name> <init pos:line="4" pos:column="20">= <expr><name><name pos:line="4" pos:column="22">f<pos:position pos:line="4" pos:column="23"/></name><operator pos:line="4" pos:column="23">-&gt;<pos:position pos:line="4" pos:column="28"/></operator><name pos:line="4" pos:column="25">r<pos:position pos:line="4" pos:column="26"/></name></name></expr></init></decl>;<pos:position pos:line="4" pos:column="27"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="5" pos:column="5">char<pos:position pos:line="5" pos:column="9"/></name> <modifier pos:line="5" pos:column="10">*<pos:position pos:line="5" pos:column="11"/></modifier></type><name pos:line="5" pos:column="11">url<pos:position pos:line="5" pos:column="14"/></name> <init pos:line="5" pos:column="15">= <expr><name><name pos:line="5" pos:column="17">r<pos:position pos:line="5" pos:column="18"/></name><operator pos:line="5" pos:column="18">-&gt;<pos:position pos:line="5" pos:column="23"/></operator><name pos:line="5" pos:column="20">unparsed_uri<pos:position pos:line="5" pos:column="32"/></name></name></expr></init></decl>;<pos:position pos:line="5" pos:column="33"/></decl_stmt>
    <decl_stmt><decl><type><specifier pos:line="6" pos:column="5">const<pos:position pos:line="6" pos:column="10"/></specifier> <name pos:line="6" pos:column="11">char<pos:position pos:line="6" pos:column="15"/></name> <modifier pos:line="6" pos:column="16">*<pos:position pos:line="6" pos:column="17"/></modifier></type><name pos:line="6" pos:column="17">cc_out<pos:position pos:line="6" pos:column="23"/></name> <init pos:line="6" pos:column="24">= <expr><call><name pos:line="6" pos:column="26">apr_table_get<pos:position pos:line="6" pos:column="39"/></name><argument_list pos:line="6" pos:column="39">(<argument><expr><name><name pos:line="6" pos:column="40">r<pos:position pos:line="6" pos:column="41"/></name><operator pos:line="6" pos:column="41">-&gt;<pos:position pos:line="6" pos:column="46"/></operator><name pos:line="6" pos:column="43">headers_out<pos:position pos:line="6" pos:column="54"/></name></name></expr></argument>, <argument><expr><literal type="string" pos:line="6" pos:column="56">"Cache-Control"<pos:position pos:line="6" pos:column="71"/></literal></expr></argument>)<pos:position pos:line="6" pos:column="72"/></argument_list></call></expr></init></decl>;<pos:position pos:line="6" pos:column="73"/></decl_stmt>
    <decl_stmt><decl><type><specifier pos:line="7" pos:column="5">const<pos:position pos:line="7" pos:column="10"/></specifier> <name pos:line="7" pos:column="11">char<pos:position pos:line="7" pos:column="15"/></name> <modifier pos:line="7" pos:column="16">*<pos:position pos:line="7" pos:column="17"/></modifier></type><name pos:line="7" pos:column="17">exps<pos:position pos:line="7" pos:column="21"/></name></decl>, <modifier pos:line="7" pos:column="23">*<pos:position pos:line="7" pos:column="24"/></modifier><decl><type ref="prev"/><name pos:line="7" pos:column="24">lastmods<pos:position pos:line="7" pos:column="32"/></name></decl>, <modifier pos:line="7" pos:column="34">*<pos:position pos:line="7" pos:column="35"/></modifier><decl><type ref="prev"/><name pos:line="7" pos:column="35">dates<pos:position pos:line="7" pos:column="40"/></name></decl>, <modifier pos:line="7" pos:column="42">*<pos:position pos:line="7" pos:column="43"/></modifier><decl><type ref="prev"/><name pos:line="7" pos:column="43">etag<pos:position pos:line="7" pos:column="47"/></name></decl>;<pos:position pos:line="7" pos:column="48"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="8" pos:column="5">apr_time_t<pos:position pos:line="8" pos:column="15"/></name></type> <name pos:line="8" pos:column="16">exp<pos:position pos:line="8" pos:column="19"/></name></decl>, <decl><type ref="prev"/><name pos:line="8" pos:column="21">date<pos:position pos:line="8" pos:column="25"/></name></decl>, <decl><type ref="prev"/><name pos:line="8" pos:column="27">lastmod<pos:position pos:line="8" pos:column="34"/></name></decl>, <decl><type ref="prev"/><name pos:line="8" pos:column="36">now<pos:position pos:line="8" pos:column="39"/></name></decl>;<pos:position pos:line="8" pos:column="40"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="9" pos:column="5">apr_off_t<pos:position pos:line="9" pos:column="14"/></name></type> <name pos:line="9" pos:column="15">size<pos:position pos:line="9" pos:column="19"/></name></decl>;<pos:position pos:line="9" pos:column="20"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="10" pos:column="5">cache_info<pos:position pos:line="10" pos:column="15"/></name> <modifier pos:line="10" pos:column="16">*<pos:position pos:line="10" pos:column="17"/></modifier></type><name pos:line="10" pos:column="17">info<pos:position pos:line="10" pos:column="21"/></name></decl>;<pos:position pos:line="10" pos:column="22"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="11" pos:column="5">void<pos:position pos:line="11" pos:column="9"/></name> <modifier pos:line="11" pos:column="10">*<pos:position pos:line="11" pos:column="11"/></modifier></type><name pos:line="11" pos:column="11">sconf<pos:position pos:line="11" pos:column="16"/></name> <init pos:line="11" pos:column="17">= <expr><name><name pos:line="11" pos:column="19">r<pos:position pos:line="11" pos:column="20"/></name><operator pos:line="11" pos:column="20">-&gt;<pos:position pos:line="11" pos:column="25"/></operator><name pos:line="11" pos:column="22">server<pos:position pos:line="11" pos:column="28"/></name><operator pos:line="11" pos:column="28">-&gt;<pos:position pos:line="11" pos:column="33"/></operator><name pos:line="11" pos:column="30">module_config<pos:position pos:line="11" pos:column="43"/></name></name></expr></init></decl>;<pos:position pos:line="11" pos:column="44"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="12" pos:column="5">cache_server_conf<pos:position pos:line="12" pos:column="22"/></name> <modifier pos:line="12" pos:column="23">*<pos:position pos:line="12" pos:column="24"/></modifier></type><name pos:line="12" pos:column="24">conf<pos:position pos:line="12" pos:column="28"/></name> <init pos:line="12" pos:column="29">=
        <expr><operator pos:line="13" pos:column="9">(<pos:position pos:line="13" pos:column="10"/></operator><name pos:line="13" pos:column="10">cache_server_conf<pos:position pos:line="13" pos:column="27"/></name> <operator pos:line="13" pos:column="28">*<pos:position pos:line="13" pos:column="29"/></operator><operator pos:line="13" pos:column="29">)<pos:position pos:line="13" pos:column="30"/></operator> <call><name pos:line="13" pos:column="31">ap_get_module_config<pos:position pos:line="13" pos:column="51"/></name><argument_list pos:line="13" pos:column="51">(<argument><expr><name pos:line="13" pos:column="52">sconf<pos:position pos:line="13" pos:column="57"/></name></expr></argument>, <argument><expr><operator pos:line="13" pos:column="59">&amp;<pos:position pos:line="13" pos:column="64"/></operator><name pos:line="13" pos:column="60">cache_module<pos:position pos:line="13" pos:column="72"/></name></expr></argument>)<pos:position pos:line="13" pos:column="73"/></argument_list></call></expr></init></decl>;<pos:position pos:line="13" pos:column="74"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="14" pos:column="5">void<pos:position pos:line="14" pos:column="9"/></name> <modifier pos:line="14" pos:column="10">*<pos:position pos:line="14" pos:column="11"/></modifier></type><name pos:line="14" pos:column="11">scache<pos:position pos:line="14" pos:column="17"/></name> <init pos:line="14" pos:column="18">= <expr><name><name pos:line="14" pos:column="20">r<pos:position pos:line="14" pos:column="21"/></name><operator pos:line="14" pos:column="21">-&gt;<pos:position pos:line="14" pos:column="26"/></operator><name pos:line="14" pos:column="23">request_config<pos:position pos:line="14" pos:column="37"/></name></name></expr></init></decl>;<pos:position pos:line="14" pos:column="38"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="15" pos:column="5">cache_request_rec<pos:position pos:line="15" pos:column="22"/></name> <modifier pos:line="15" pos:column="23">*<pos:position pos:line="15" pos:column="24"/></modifier></type><name pos:line="15" pos:column="24">cache<pos:position pos:line="15" pos:column="29"/></name> <init pos:line="15" pos:column="30">=
        <expr><operator pos:line="16" pos:column="9">(<pos:position pos:line="16" pos:column="10"/></operator><name pos:line="16" pos:column="10">cache_request_rec<pos:position pos:line="16" pos:column="27"/></name> <operator pos:line="16" pos:column="28">*<pos:position pos:line="16" pos:column="29"/></operator><operator pos:line="16" pos:column="29">)<pos:position pos:line="16" pos:column="30"/></operator> <call><name pos:line="16" pos:column="31">ap_get_module_config<pos:position pos:line="16" pos:column="51"/></name><argument_list pos:line="16" pos:column="51">(<argument><expr><name pos:line="16" pos:column="52">scache<pos:position pos:line="16" pos:column="58"/></name></expr></argument>, <argument><expr><operator pos:line="16" pos:column="60">&amp;<pos:position pos:line="16" pos:column="65"/></operator><name pos:line="16" pos:column="61">cache_module<pos:position pos:line="16" pos:column="73"/></name></expr></argument>)<pos:position pos:line="16" pos:column="74"/></argument_list></call></expr></init></decl>;<pos:position pos:line="16" pos:column="75"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="17" pos:column="5">apr_bucket<pos:position pos:line="17" pos:column="15"/></name> <modifier pos:line="17" pos:column="16">*<pos:position pos:line="17" pos:column="17"/></modifier></type><name pos:line="17" pos:column="17">split_point<pos:position pos:line="17" pos:column="28"/></name> <init pos:line="17" pos:column="29">= <expr><name pos:line="17" pos:column="31">NULL<pos:position pos:line="17" pos:column="35"/></name></expr></init></decl>;<pos:position pos:line="17" pos:column="36"/></decl_stmt>


    <expr_stmt><expr><call><name pos:line="20" pos:column="5">ap_log_error<pos:position pos:line="20" pos:column="17"/></name><argument_list pos:line="20" pos:column="17">(<argument><expr><name pos:line="20" pos:column="18">APLOG_MARK<pos:position pos:line="20" pos:column="28"/></name></expr></argument>, <argument><expr><name pos:line="20" pos:column="30">APLOG_DEBUG<pos:position pos:line="20" pos:column="41"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="20" pos:column="43">0<pos:position pos:line="20" pos:column="44"/></literal></expr></argument>, <argument><expr><name><name pos:line="20" pos:column="46">f<pos:position pos:line="20" pos:column="47"/></name><operator pos:line="20" pos:column="47">-&gt;<pos:position pos:line="20" pos:column="52"/></operator><name pos:line="20" pos:column="49">r<pos:position pos:line="20" pos:column="50"/></name><operator pos:line="20" pos:column="50">-&gt;<pos:position pos:line="20" pos:column="55"/></operator><name pos:line="20" pos:column="52">server<pos:position pos:line="20" pos:column="58"/></name></name></expr></argument>,
                 <argument><expr><literal type="string" pos:line="21" pos:column="18">"cache: running CACHE_IN filter"<pos:position pos:line="21" pos:column="50"/></literal></expr></argument>)<pos:position pos:line="21" pos:column="51"/></argument_list></call></expr>;<pos:position pos:line="21" pos:column="52"/></expr_stmt>

    <comment type="block" pos:line="23" pos:column="5">/* check first whether running this filter has any point or not */</comment>
    <if pos:line="24" pos:column="5">if<condition pos:line="24" pos:column="7">(<expr><name><name pos:line="24" pos:column="8">r<pos:position pos:line="24" pos:column="9"/></name><operator pos:line="24" pos:column="9">-&gt;<pos:position pos:line="24" pos:column="14"/></operator><name pos:line="24" pos:column="11">no_cache<pos:position pos:line="24" pos:column="19"/></name></name></expr>)<pos:position pos:line="24" pos:column="20"/></condition><then pos:line="24" pos:column="20"> <block pos:line="24" pos:column="21">{
        <expr_stmt><expr><call><name pos:line="25" pos:column="9">ap_remove_output_filter<pos:position pos:line="25" pos:column="32"/></name><argument_list pos:line="25" pos:column="32">(<argument><expr><name pos:line="25" pos:column="33">f<pos:position pos:line="25" pos:column="34"/></name></expr></argument>)<pos:position pos:line="25" pos:column="35"/></argument_list></call></expr>;<pos:position pos:line="25" pos:column="36"/></expr_stmt>
        <return pos:line="26" pos:column="9">return <expr><call><name pos:line="26" pos:column="16">ap_pass_brigade<pos:position pos:line="26" pos:column="31"/></name><argument_list pos:line="26" pos:column="31">(<argument><expr><name><name pos:line="26" pos:column="32">f<pos:position pos:line="26" pos:column="33"/></name><operator pos:line="26" pos:column="33">-&gt;<pos:position pos:line="26" pos:column="38"/></operator><name pos:line="26" pos:column="35">next<pos:position pos:line="26" pos:column="39"/></name></name></expr></argument>, <argument><expr><name pos:line="26" pos:column="41">in<pos:position pos:line="26" pos:column="43"/></name></expr></argument>)<pos:position pos:line="26" pos:column="44"/></argument_list></call></expr>;<pos:position pos:line="26" pos:column="45"/></return>
    }<pos:position pos:line="27" pos:column="6"/></block></then></if>

    <comment type="block" pos:line="29" pos:column="5">/* make space for the per request config 
     * We hit this code path when CACHE_IN has been installed by someone
     * other than the cache handler
     */</comment>
    <if pos:line="33" pos:column="5">if <condition pos:line="33" pos:column="8">(<expr><operator pos:line="33" pos:column="9">!<pos:position pos:line="33" pos:column="10"/></operator><name pos:line="33" pos:column="10">cache<pos:position pos:line="33" pos:column="15"/></name></expr>)<pos:position pos:line="33" pos:column="16"/></condition><then pos:line="33" pos:column="16"> <block pos:line="33" pos:column="17">{
        <expr_stmt><expr><name pos:line="34" pos:column="9">cache<pos:position pos:line="34" pos:column="14"/></name> <operator pos:line="34" pos:column="15">=<pos:position pos:line="34" pos:column="16"/></operator> <call><name pos:line="34" pos:column="17">apr_pcalloc<pos:position pos:line="34" pos:column="28"/></name><argument_list pos:line="34" pos:column="28">(<argument><expr><name><name pos:line="34" pos:column="29">r<pos:position pos:line="34" pos:column="30"/></name><operator pos:line="34" pos:column="30">-&gt;<pos:position pos:line="34" pos:column="35"/></operator><name pos:line="34" pos:column="32">pool<pos:position pos:line="34" pos:column="36"/></name></name></expr></argument>, <argument><expr><sizeof pos:line="34" pos:column="38">sizeof<argument_list pos:line="34" pos:column="44">(<argument><expr><name pos:line="34" pos:column="45">cache_request_rec<pos:position pos:line="34" pos:column="62"/></name></expr></argument>)<pos:position pos:line="34" pos:column="63"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="34" pos:column="64"/></argument_list></call></expr>;<pos:position pos:line="34" pos:column="65"/></expr_stmt>
        <expr_stmt><expr><call><name pos:line="35" pos:column="9">ap_set_module_config<pos:position pos:line="35" pos:column="29"/></name><argument_list pos:line="35" pos:column="29">(<argument><expr><name><name pos:line="35" pos:column="30">r<pos:position pos:line="35" pos:column="31"/></name><operator pos:line="35" pos:column="31">-&gt;<pos:position pos:line="35" pos:column="36"/></operator><name pos:line="35" pos:column="33">request_config<pos:position pos:line="35" pos:column="47"/></name></name></expr></argument>, <argument><expr><operator pos:line="35" pos:column="49">&amp;<pos:position pos:line="35" pos:column="54"/></operator><name pos:line="35" pos:column="50">cache_module<pos:position pos:line="35" pos:column="62"/></name></expr></argument>, <argument><expr><name pos:line="35" pos:column="64">cache<pos:position pos:line="35" pos:column="69"/></name></expr></argument>)<pos:position pos:line="35" pos:column="70"/></argument_list></call></expr>;<pos:position pos:line="35" pos:column="71"/></expr_stmt>
    }<pos:position pos:line="36" pos:column="6"/></block></then></if>

    <comment type="block" pos:line="38" pos:column="5">/* If we've previously processed and set aside part of this
     * response, skip the cacheability checks
     */</comment>
    <if pos:line="41" pos:column="5">if <condition pos:line="41" pos:column="8">(<expr><name><name pos:line="41" pos:column="9">cache<pos:position pos:line="41" pos:column="14"/></name><operator pos:line="41" pos:column="14">-&gt;<pos:position pos:line="41" pos:column="19"/></operator><name pos:line="41" pos:column="16">saved_brigade<pos:position pos:line="41" pos:column="29"/></name></name> <operator pos:line="41" pos:column="30">!=<pos:position pos:line="41" pos:column="32"/></operator> <name pos:line="41" pos:column="33">NULL<pos:position pos:line="41" pos:column="37"/></name></expr>)<pos:position pos:line="41" pos:column="38"/></condition><then pos:line="41" pos:column="38"> <block pos:line="41" pos:column="39">{
        <expr_stmt><expr><name pos:line="42" pos:column="9">exp<pos:position pos:line="42" pos:column="12"/></name> <operator pos:line="42" pos:column="13">=<pos:position pos:line="42" pos:column="14"/></operator> <name><name pos:line="42" pos:column="15">cache<pos:position pos:line="42" pos:column="20"/></name><operator pos:line="42" pos:column="20">-&gt;<pos:position pos:line="42" pos:column="25"/></operator><name pos:line="42" pos:column="22">exp<pos:position pos:line="42" pos:column="25"/></name></name></expr>;<pos:position pos:line="42" pos:column="26"/></expr_stmt>
        <expr_stmt><expr><name pos:line="43" pos:column="9">lastmod<pos:position pos:line="43" pos:column="16"/></name> <operator pos:line="43" pos:column="17">=<pos:position pos:line="43" pos:column="18"/></operator> <name><name pos:line="43" pos:column="19">cache<pos:position pos:line="43" pos:column="24"/></name><operator pos:line="43" pos:column="24">-&gt;<pos:position pos:line="43" pos:column="29"/></operator><name pos:line="43" pos:column="26">lastmod<pos:position pos:line="43" pos:column="33"/></name></name></expr>;<pos:position pos:line="43" pos:column="34"/></expr_stmt>
        <expr_stmt><expr><name pos:line="44" pos:column="9">info<pos:position pos:line="44" pos:column="13"/></name> <operator pos:line="44" pos:column="14">=<pos:position pos:line="44" pos:column="15"/></operator> <name><name pos:line="44" pos:column="16">cache<pos:position pos:line="44" pos:column="21"/></name><operator pos:line="44" pos:column="21">-&gt;<pos:position pos:line="44" pos:column="26"/></operator><name pos:line="44" pos:column="23">info<pos:position pos:line="44" pos:column="27"/></name></name></expr>;<pos:position pos:line="44" pos:column="28"/></expr_stmt>
    }<pos:position pos:line="45" pos:column="6"/></block></then>
    <else pos:line="46" pos:column="5">else <block pos:line="46" pos:column="10">{

        <comment type="block" pos:line="48" pos:column="9">/*
         * Pass Data to Cache
         * ------------------
         * This section passes the brigades into the cache modules, but only
         * if the setup section (see below) is complete.
         */</comment>

        <comment type="block" pos:line="55" pos:column="9">/* have we already run the cachability check and set up the
         * cached file handle? 
         */</comment>
        <if pos:line="58" pos:column="9">if <condition pos:line="58" pos:column="12">(<expr><name><name pos:line="58" pos:column="13">cache<pos:position pos:line="58" pos:column="18"/></name><operator pos:line="58" pos:column="18">-&gt;<pos:position pos:line="58" pos:column="23"/></operator><name pos:line="58" pos:column="20">in_checked<pos:position pos:line="58" pos:column="30"/></name></name></expr>)<pos:position pos:line="58" pos:column="31"/></condition><then pos:line="58" pos:column="31"> <block pos:line="58" pos:column="32">{
            <comment type="block" pos:line="59" pos:column="13">/* pass the brigades into the cache, then pass them
             * up the filter stack
             */</comment>
            <expr_stmt><expr><name pos:line="62" pos:column="13">rv<pos:position pos:line="62" pos:column="15"/></name> <operator pos:line="62" pos:column="16">=<pos:position pos:line="62" pos:column="17"/></operator> <call><name pos:line="62" pos:column="18">cache_write_entity_body<pos:position pos:line="62" pos:column="41"/></name><argument_list pos:line="62" pos:column="41">(<argument><expr><name><name pos:line="62" pos:column="42">cache<pos:position pos:line="62" pos:column="47"/></name><operator pos:line="62" pos:column="47">-&gt;<pos:position pos:line="62" pos:column="52"/></operator><name pos:line="62" pos:column="49">handle<pos:position pos:line="62" pos:column="55"/></name></name></expr></argument>, <argument><expr><name pos:line="62" pos:column="57">r<pos:position pos:line="62" pos:column="58"/></name></expr></argument>, <argument><expr><name pos:line="62" pos:column="60">in<pos:position pos:line="62" pos:column="62"/></name></expr></argument>)<pos:position pos:line="62" pos:column="63"/></argument_list></call></expr>;<pos:position pos:line="62" pos:column="64"/></expr_stmt>
            <if pos:line="63" pos:column="13">if <condition pos:line="63" pos:column="16">(<expr><name pos:line="63" pos:column="17">rv<pos:position pos:line="63" pos:column="19"/></name> <operator pos:line="63" pos:column="20">!=<pos:position pos:line="63" pos:column="22"/></operator> <name pos:line="63" pos:column="23">APR_SUCCESS<pos:position pos:line="63" pos:column="34"/></name></expr>)<pos:position pos:line="63" pos:column="35"/></condition><then pos:line="63" pos:column="35"> <block pos:line="63" pos:column="36">{
                <expr_stmt><expr><call><name pos:line="64" pos:column="17">ap_remove_output_filter<pos:position pos:line="64" pos:column="40"/></name><argument_list pos:line="64" pos:column="40">(<argument><expr><name pos:line="64" pos:column="41">f<pos:position pos:line="64" pos:column="42"/></name></expr></argument>)<pos:position pos:line="64" pos:column="43"/></argument_list></call></expr>;<pos:position pos:line="64" pos:column="44"/></expr_stmt>
            }<pos:position pos:line="65" pos:column="14"/></block></then></if>
            <return pos:line="66" pos:column="13">return <expr><call><name pos:line="66" pos:column="20">ap_pass_brigade<pos:position pos:line="66" pos:column="35"/></name><argument_list pos:line="66" pos:column="35">(<argument><expr><name><name pos:line="66" pos:column="36">f<pos:position pos:line="66" pos:column="37"/></name><operator pos:line="66" pos:column="37">-&gt;<pos:position pos:line="66" pos:column="42"/></operator><name pos:line="66" pos:column="39">next<pos:position pos:line="66" pos:column="43"/></name></name></expr></argument>, <argument><expr><name pos:line="66" pos:column="45">in<pos:position pos:line="66" pos:column="47"/></name></expr></argument>)<pos:position pos:line="66" pos:column="48"/></argument_list></call></expr>;<pos:position pos:line="66" pos:column="49"/></return>
        }<pos:position pos:line="67" pos:column="10"/></block></then></if>

        <comment type="block" pos:line="69" pos:column="9">/*
         * Setup Data in Cache
         * -------------------
         * This section opens the cache entity and sets various caching
         * parameters, and decides whether this URL should be cached at
         * all. This section is* run before the above section.
         */</comment>
        <expr_stmt><expr><name pos:line="76" pos:column="9">info<pos:position pos:line="76" pos:column="13"/></name> <operator pos:line="76" pos:column="14">=<pos:position pos:line="76" pos:column="15"/></operator> <call><name pos:line="76" pos:column="16">apr_pcalloc<pos:position pos:line="76" pos:column="27"/></name><argument_list pos:line="76" pos:column="27">(<argument><expr><name><name pos:line="76" pos:column="28">r<pos:position pos:line="76" pos:column="29"/></name><operator pos:line="76" pos:column="29">-&gt;<pos:position pos:line="76" pos:column="34"/></operator><name pos:line="76" pos:column="31">pool<pos:position pos:line="76" pos:column="35"/></name></name></expr></argument>, <argument><expr><sizeof pos:line="76" pos:column="37">sizeof<argument_list pos:line="76" pos:column="43">(<argument><expr><name pos:line="76" pos:column="44">cache_info<pos:position pos:line="76" pos:column="54"/></name></expr></argument>)<pos:position pos:line="76" pos:column="55"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="76" pos:column="56"/></argument_list></call></expr>;<pos:position pos:line="76" pos:column="57"/></expr_stmt>

        <comment type="block" pos:line="78" pos:column="9">/* read expiry date; if a bad date, then leave it so the client can
         * read it 
         */</comment>
        <expr_stmt><expr><name pos:line="81" pos:column="9">exps<pos:position pos:line="81" pos:column="13"/></name> <operator pos:line="81" pos:column="14">=<pos:position pos:line="81" pos:column="15"/></operator> <call><name pos:line="81" pos:column="16">apr_table_get<pos:position pos:line="81" pos:column="29"/></name><argument_list pos:line="81" pos:column="29">(<argument><expr><name><name pos:line="81" pos:column="30">r<pos:position pos:line="81" pos:column="31"/></name><operator pos:line="81" pos:column="31">-&gt;<pos:position pos:line="81" pos:column="36"/></operator><name pos:line="81" pos:column="33">headers_out<pos:position pos:line="81" pos:column="44"/></name></name></expr></argument>, <argument><expr><literal type="string" pos:line="81" pos:column="46">"Expires"<pos:position pos:line="81" pos:column="55"/></literal></expr></argument>)<pos:position pos:line="81" pos:column="56"/></argument_list></call></expr>;<pos:position pos:line="81" pos:column="57"/></expr_stmt>
        <if pos:line="82" pos:column="9">if <condition pos:line="82" pos:column="12">(<expr><name pos:line="82" pos:column="13">exps<pos:position pos:line="82" pos:column="17"/></name> <operator pos:line="82" pos:column="18">!=<pos:position pos:line="82" pos:column="20"/></operator> <name pos:line="82" pos:column="21">NULL<pos:position pos:line="82" pos:column="25"/></name></expr>)<pos:position pos:line="82" pos:column="26"/></condition><then pos:line="82" pos:column="26"> <block pos:line="82" pos:column="27">{
            <if pos:line="83" pos:column="13">if <condition pos:line="83" pos:column="16">(<expr><name pos:line="83" pos:column="17">APR_DATE_BAD<pos:position pos:line="83" pos:column="29"/></name> <operator pos:line="83" pos:column="30">==<pos:position pos:line="83" pos:column="32"/></operator> <operator pos:line="83" pos:column="33">(<pos:position pos:line="83" pos:column="34"/></operator><name pos:line="83" pos:column="34">exp<pos:position pos:line="83" pos:column="37"/></name> <operator pos:line="83" pos:column="38">=<pos:position pos:line="83" pos:column="39"/></operator> <call><name pos:line="83" pos:column="40">apr_date_parse_http<pos:position pos:line="83" pos:column="59"/></name><argument_list pos:line="83" pos:column="59">(<argument><expr><name pos:line="83" pos:column="60">exps<pos:position pos:line="83" pos:column="64"/></name></expr></argument>)<pos:position pos:line="83" pos:column="65"/></argument_list></call><operator pos:line="83" pos:column="65">)<pos:position pos:line="83" pos:column="66"/></operator></expr>)<pos:position pos:line="83" pos:column="67"/></condition><then pos:line="83" pos:column="67"> <block pos:line="83" pos:column="68">{
                <expr_stmt><expr><name pos:line="84" pos:column="17">exps<pos:position pos:line="84" pos:column="21"/></name> <operator pos:line="84" pos:column="22">=<pos:position pos:line="84" pos:column="23"/></operator> <name pos:line="84" pos:column="24">NULL<pos:position pos:line="84" pos:column="28"/></name></expr>;<pos:position pos:line="84" pos:column="29"/></expr_stmt>
            }<pos:position pos:line="85" pos:column="14"/></block></then></if>
        }<pos:position pos:line="86" pos:column="10"/></block></then>
        <else pos:line="87" pos:column="9">else <block pos:line="87" pos:column="14">{
            <expr_stmt><expr><name pos:line="88" pos:column="13">exp<pos:position pos:line="88" pos:column="16"/></name> <operator pos:line="88" pos:column="17">=<pos:position pos:line="88" pos:column="18"/></operator> <name pos:line="88" pos:column="19">APR_DATE_BAD<pos:position pos:line="88" pos:column="31"/></name></expr>;<pos:position pos:line="88" pos:column="32"/></expr_stmt>
        }<pos:position pos:line="89" pos:column="10"/></block></else></if>

        <comment type="block" pos:line="91" pos:column="9">/* read the last-modified date; if the date is bad, then delete it */</comment>
        <expr_stmt><expr><name pos:line="92" pos:column="9">lastmods<pos:position pos:line="92" pos:column="17"/></name> <operator pos:line="92" pos:column="18">=<pos:position pos:line="92" pos:column="19"/></operator> <call><name pos:line="92" pos:column="20">apr_table_get<pos:position pos:line="92" pos:column="33"/></name><argument_list pos:line="92" pos:column="33">(<argument><expr><name><name pos:line="92" pos:column="34">r<pos:position pos:line="92" pos:column="35"/></name><operator pos:line="92" pos:column="35">-&gt;<pos:position pos:line="92" pos:column="40"/></operator><name pos:line="92" pos:column="37">headers_out<pos:position pos:line="92" pos:column="48"/></name></name></expr></argument>, <argument><expr><literal type="string" pos:line="92" pos:column="50">"Last-Modified"<pos:position pos:line="92" pos:column="65"/></literal></expr></argument>)<pos:position pos:line="92" pos:column="66"/></argument_list></call></expr>;<pos:position pos:line="92" pos:column="67"/></expr_stmt>
        <if pos:line="93" pos:column="9">if <condition pos:line="93" pos:column="12">(<expr><name pos:line="93" pos:column="13">lastmods<pos:position pos:line="93" pos:column="21"/></name> <operator pos:line="93" pos:column="22">!=<pos:position pos:line="93" pos:column="24"/></operator> <name pos:line="93" pos:column="25">NULL<pos:position pos:line="93" pos:column="29"/></name></expr>)<pos:position pos:line="93" pos:column="30"/></condition><then pos:line="93" pos:column="30"> <block pos:line="93" pos:column="31">{
            <if pos:line="94" pos:column="13">if <condition pos:line="94" pos:column="16">(<expr><name pos:line="94" pos:column="17">APR_DATE_BAD<pos:position pos:line="94" pos:column="29"/></name> <operator pos:line="94" pos:column="30">==<pos:position pos:line="94" pos:column="32"/></operator> <operator pos:line="94" pos:column="33">(<pos:position pos:line="94" pos:column="34"/></operator><name pos:line="94" pos:column="34">lastmod<pos:position pos:line="94" pos:column="41"/></name> <operator pos:line="94" pos:column="42">=<pos:position pos:line="94" pos:column="43"/></operator> <call><name pos:line="94" pos:column="44">apr_date_parse_http<pos:position pos:line="94" pos:column="63"/></name><argument_list pos:line="94" pos:column="63">(<argument><expr><name pos:line="94" pos:column="64">lastmods<pos:position pos:line="94" pos:column="72"/></name></expr></argument>)<pos:position pos:line="94" pos:column="73"/></argument_list></call><operator pos:line="94" pos:column="73">)<pos:position pos:line="94" pos:column="74"/></operator></expr>)<pos:position pos:line="94" pos:column="75"/></condition><then pos:line="94" pos:column="75"> <block pos:line="94" pos:column="76">{
                <expr_stmt><expr><name pos:line="95" pos:column="17">lastmods<pos:position pos:line="95" pos:column="25"/></name> <operator pos:line="95" pos:column="26">=<pos:position pos:line="95" pos:column="27"/></operator> <name pos:line="95" pos:column="28">NULL<pos:position pos:line="95" pos:column="32"/></name></expr>;<pos:position pos:line="95" pos:column="33"/></expr_stmt>
            }<pos:position pos:line="96" pos:column="14"/></block></then></if>
        }<pos:position pos:line="97" pos:column="10"/></block></then>
        <else pos:line="98" pos:column="9">else <block pos:line="98" pos:column="14">{
            <expr_stmt><expr><name pos:line="99" pos:column="13">lastmod<pos:position pos:line="99" pos:column="20"/></name> <operator pos:line="99" pos:column="21">=<pos:position pos:line="99" pos:column="22"/></operator> <name pos:line="99" pos:column="23">APR_DATE_BAD<pos:position pos:line="99" pos:column="35"/></name></expr>;<pos:position pos:line="99" pos:column="36"/></expr_stmt>
        }<pos:position pos:line="100" pos:column="10"/></block></else></if>

        <comment type="block" pos:line="102" pos:column="9">/* read the etag from the entity */</comment>
        <expr_stmt><expr><name pos:line="103" pos:column="9">etag<pos:position pos:line="103" pos:column="13"/></name> <operator pos:line="103" pos:column="14">=<pos:position pos:line="103" pos:column="15"/></operator> <call><name pos:line="103" pos:column="16">apr_table_get<pos:position pos:line="103" pos:column="29"/></name><argument_list pos:line="103" pos:column="29">(<argument><expr><name><name pos:line="103" pos:column="30">r<pos:position pos:line="103" pos:column="31"/></name><operator pos:line="103" pos:column="31">-&gt;<pos:position pos:line="103" pos:column="36"/></operator><name pos:line="103" pos:column="33">headers_out<pos:position pos:line="103" pos:column="44"/></name></name></expr></argument>, <argument><expr><literal type="string" pos:line="103" pos:column="46">"Etag"<pos:position pos:line="103" pos:column="52"/></literal></expr></argument>)<pos:position pos:line="103" pos:column="53"/></argument_list></call></expr>;<pos:position pos:line="103" pos:column="54"/></expr_stmt>

        <comment type="block" pos:line="105" pos:column="9">/*
         * what responses should we not cache?
         *
         * At this point we decide based on the response headers whether it
         * is appropriate _NOT_ to cache the data from the server. There are
         * a whole lot of conditions that prevent us from caching this data.
         * They are tested here one by one to be clear and unambiguous. 
         */</comment>

        <comment type="block" pos:line="114" pos:column="9">/* RFC2616 13.4 we are allowed to cache 200, 203, 206, 300, 301 or 410
         * We don't cache 206, because we don't (yet) cache partial responses.
         * We include 304 Not Modified here too as this is the origin server
         * telling us to serve the cached copy.
         */</comment>
        <if pos:line="119" pos:column="9">if <condition pos:line="119" pos:column="12">(<expr><operator pos:line="119" pos:column="13">(<pos:position pos:line="119" pos:column="14"/></operator><name><name pos:line="119" pos:column="14">r<pos:position pos:line="119" pos:column="15"/></name><operator pos:line="119" pos:column="15">-&gt;<pos:position pos:line="119" pos:column="20"/></operator><name pos:line="119" pos:column="17">status<pos:position pos:line="119" pos:column="23"/></name></name> <operator pos:line="119" pos:column="24">!=<pos:position pos:line="119" pos:column="26"/></operator> <name pos:line="119" pos:column="27">HTTP_OK<pos:position pos:line="119" pos:column="34"/></name> <operator pos:line="119" pos:column="35">&amp;&amp;<pos:position pos:line="119" pos:column="45"/></operator> <name><name pos:line="119" pos:column="38">r<pos:position pos:line="119" pos:column="39"/></name><operator pos:line="119" pos:column="39">-&gt;<pos:position pos:line="119" pos:column="44"/></operator><name pos:line="119" pos:column="41">status<pos:position pos:line="119" pos:column="47"/></name></name> <operator pos:line="119" pos:column="48">!=<pos:position pos:line="119" pos:column="50"/></operator> <name pos:line="119" pos:column="51">HTTP_NON_AUTHORITATIVE<pos:position pos:line="119" pos:column="73"/></name>
             <operator pos:line="120" pos:column="14">&amp;&amp;<pos:position pos:line="120" pos:column="24"/></operator> <name><name pos:line="120" pos:column="17">r<pos:position pos:line="120" pos:column="18"/></name><operator pos:line="120" pos:column="18">-&gt;<pos:position pos:line="120" pos:column="23"/></operator><name pos:line="120" pos:column="20">status<pos:position pos:line="120" pos:column="26"/></name></name> <operator pos:line="120" pos:column="27">!=<pos:position pos:line="120" pos:column="29"/></operator> <name pos:line="120" pos:column="30">HTTP_MULTIPLE_CHOICES<pos:position pos:line="120" pos:column="51"/></name>
             <operator pos:line="121" pos:column="14">&amp;&amp;<pos:position pos:line="121" pos:column="24"/></operator> <name><name pos:line="121" pos:column="17">r<pos:position pos:line="121" pos:column="18"/></name><operator pos:line="121" pos:column="18">-&gt;<pos:position pos:line="121" pos:column="23"/></operator><name pos:line="121" pos:column="20">status<pos:position pos:line="121" pos:column="26"/></name></name> <operator pos:line="121" pos:column="27">!=<pos:position pos:line="121" pos:column="29"/></operator> <name pos:line="121" pos:column="30">HTTP_MOVED_PERMANENTLY<pos:position pos:line="121" pos:column="52"/></name>
             <operator pos:line="122" pos:column="14">&amp;&amp;<pos:position pos:line="122" pos:column="24"/></operator> <name><name pos:line="122" pos:column="17">r<pos:position pos:line="122" pos:column="18"/></name><operator pos:line="122" pos:column="18">-&gt;<pos:position pos:line="122" pos:column="23"/></operator><name pos:line="122" pos:column="20">status<pos:position pos:line="122" pos:column="26"/></name></name> <operator pos:line="122" pos:column="27">!=<pos:position pos:line="122" pos:column="29"/></operator> <name pos:line="122" pos:column="30">HTTP_NOT_MODIFIED<pos:position pos:line="122" pos:column="47"/></name><operator pos:line="122" pos:column="47">)<pos:position pos:line="122" pos:column="48"/></operator>
            <comment type="block" pos:line="123" pos:column="13">/* if a broken Expires header is present, don't cache it */</comment>
            <operator pos:line="124" pos:column="13">||<pos:position pos:line="124" pos:column="15"/></operator> <operator pos:line="124" pos:column="16">(<pos:position pos:line="124" pos:column="17"/></operator><name pos:line="124" pos:column="17">exps<pos:position pos:line="124" pos:column="21"/></name> <operator pos:line="124" pos:column="22">!=<pos:position pos:line="124" pos:column="24"/></operator> <name pos:line="124" pos:column="25">NULL<pos:position pos:line="124" pos:column="29"/></name> <operator pos:line="124" pos:column="30">&amp;&amp;<pos:position pos:line="124" pos:column="40"/></operator> <name pos:line="124" pos:column="33">exp<pos:position pos:line="124" pos:column="36"/></name> <operator pos:line="124" pos:column="37">==<pos:position pos:line="124" pos:column="39"/></operator> <name pos:line="124" pos:column="40">APR_DATE_BAD<pos:position pos:line="124" pos:column="52"/></name><operator pos:line="124" pos:column="52">)<pos:position pos:line="124" pos:column="53"/></operator>
            <comment type="block" pos:line="125" pos:column="13">/* if query string present but no expiration time, don't cache it
             * (RFC 2616/13.9)
             */</comment>
            <operator pos:line="128" pos:column="13">||<pos:position pos:line="128" pos:column="15"/></operator> <operator pos:line="128" pos:column="16">(<pos:position pos:line="128" pos:column="17"/></operator><name><name pos:line="128" pos:column="17">r<pos:position pos:line="128" pos:column="18"/></name><operator pos:line="128" pos:column="18">-&gt;<pos:position pos:line="128" pos:column="23"/></operator><name pos:line="128" pos:column="20">args<pos:position pos:line="128" pos:column="24"/></name></name> <operator pos:line="128" pos:column="25">&amp;&amp;<pos:position pos:line="128" pos:column="35"/></operator> <name pos:line="128" pos:column="28">exps<pos:position pos:line="128" pos:column="32"/></name> <operator pos:line="128" pos:column="33">==<pos:position pos:line="128" pos:column="35"/></operator> <name pos:line="128" pos:column="36">NULL<pos:position pos:line="128" pos:column="40"/></name><operator pos:line="128" pos:column="40">)<pos:position pos:line="128" pos:column="41"/></operator>
            <comment type="block" pos:line="129" pos:column="13">/* if the server said 304 Not Modified but we have no cache
             * file - pass this untouched to the user agent, it's not for us.
             */</comment>
            <operator pos:line="132" pos:column="13">||<pos:position pos:line="132" pos:column="15"/></operator> <operator pos:line="132" pos:column="16">(<pos:position pos:line="132" pos:column="17"/></operator><name><name pos:line="132" pos:column="17">r<pos:position pos:line="132" pos:column="18"/></name><operator pos:line="132" pos:column="18">-&gt;<pos:position pos:line="132" pos:column="23"/></operator><name pos:line="132" pos:column="20">status<pos:position pos:line="132" pos:column="26"/></name></name> <operator pos:line="132" pos:column="27">==<pos:position pos:line="132" pos:column="29"/></operator> <name pos:line="132" pos:column="30">HTTP_NOT_MODIFIED<pos:position pos:line="132" pos:column="47"/></name> <operator pos:line="132" pos:column="48">&amp;&amp;<pos:position pos:line="132" pos:column="58"/></operator> <operator pos:line="132" pos:column="51">(<pos:position pos:line="132" pos:column="52"/></operator><name pos:line="132" pos:column="52">NULL<pos:position pos:line="132" pos:column="56"/></name> <operator pos:line="132" pos:column="57">==<pos:position pos:line="132" pos:column="59"/></operator> <name><name pos:line="132" pos:column="60">cache<pos:position pos:line="132" pos:column="65"/></name><operator pos:line="132" pos:column="65">-&gt;<pos:position pos:line="132" pos:column="70"/></operator><name pos:line="132" pos:column="67">handle<pos:position pos:line="132" pos:column="73"/></name></name><operator pos:line="132" pos:column="73">)<pos:position pos:line="132" pos:column="74"/></operator><operator pos:line="132" pos:column="74">)<pos:position pos:line="132" pos:column="75"/></operator>
            <comment type="block" pos:line="133" pos:column="13">/* 200 OK response from HTTP/1.0 and up without a Last-Modified
             * header/Etag 
             */</comment>
            <comment type="block" pos:line="136" pos:column="13">/* XXX mod-include clears last_modified/expires/etags - this
             * is why we have an optional function for a key-gen ;-) 
             */</comment>
            <operator pos:line="139" pos:column="13">||<pos:position pos:line="139" pos:column="15"/></operator> <operator pos:line="139" pos:column="16">(<pos:position pos:line="139" pos:column="17"/></operator><name><name pos:line="139" pos:column="17">r<pos:position pos:line="139" pos:column="18"/></name><operator pos:line="139" pos:column="18">-&gt;<pos:position pos:line="139" pos:column="23"/></operator><name pos:line="139" pos:column="20">status<pos:position pos:line="139" pos:column="26"/></name></name> <operator pos:line="139" pos:column="27">==<pos:position pos:line="139" pos:column="29"/></operator> <name pos:line="139" pos:column="30">HTTP_OK<pos:position pos:line="139" pos:column="37"/></name> <operator pos:line="139" pos:column="38">&amp;&amp;<pos:position pos:line="139" pos:column="48"/></operator> <name pos:line="139" pos:column="41">lastmods<pos:position pos:line="139" pos:column="49"/></name> <operator pos:line="139" pos:column="50">==<pos:position pos:line="139" pos:column="52"/></operator> <name pos:line="139" pos:column="53">NULL<pos:position pos:line="139" pos:column="57"/></name> <operator pos:line="139" pos:column="58">&amp;&amp;<pos:position pos:line="139" pos:column="68"/></operator> <name pos:line="139" pos:column="61">etag<pos:position pos:line="139" pos:column="65"/></name> <operator pos:line="139" pos:column="66">==<pos:position pos:line="139" pos:column="68"/></operator> <name pos:line="139" pos:column="69">NULL<pos:position pos:line="139" pos:column="73"/></name> 
                <operator pos:line="140" pos:column="17">&amp;&amp;<pos:position pos:line="140" pos:column="27"/></operator> <operator pos:line="140" pos:column="20">(<pos:position pos:line="140" pos:column="21"/></operator><name><name pos:line="140" pos:column="21">conf<pos:position pos:line="140" pos:column="25"/></name><operator pos:line="140" pos:column="25">-&gt;<pos:position pos:line="140" pos:column="30"/></operator><name pos:line="140" pos:column="27">no_last_mod_ignore<pos:position pos:line="140" pos:column="45"/></name></name> <operator pos:line="140" pos:column="46">==<pos:position pos:line="140" pos:column="48"/></operator><literal type="number" pos:line="140" pos:column="48">0<pos:position pos:line="140" pos:column="49"/></literal><operator pos:line="140" pos:column="49">)<pos:position pos:line="140" pos:column="50"/></operator><operator pos:line="140" pos:column="50">)<pos:position pos:line="140" pos:column="51"/></operator>
            <comment type="block" pos:line="141" pos:column="13">/* HEAD requests */</comment>
            <operator pos:line="142" pos:column="13">||<pos:position pos:line="142" pos:column="15"/></operator> <name><name pos:line="142" pos:column="16">r<pos:position pos:line="142" pos:column="17"/></name><operator pos:line="142" pos:column="17">-&gt;<pos:position pos:line="142" pos:column="22"/></operator><name pos:line="142" pos:column="19">header_only<pos:position pos:line="142" pos:column="30"/></name></name>
            <comment type="block" pos:line="143" pos:column="13">/* RFC2616 14.9.2 Cache-Control: no-store response
             * indicating do not cache, or stop now if you are
             * trying to cache it */</comment>
            <operator pos:line="146" pos:column="13">||<pos:position pos:line="146" pos:column="15"/></operator> <call><name pos:line="146" pos:column="16">ap_cache_liststr<pos:position pos:line="146" pos:column="32"/></name><argument_list pos:line="146" pos:column="32">(<argument><expr><name pos:line="146" pos:column="33">cc_out<pos:position pos:line="146" pos:column="39"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="146" pos:column="41">"no-store"<pos:position pos:line="146" pos:column="51"/></literal></expr></argument>, <argument><expr><name pos:line="146" pos:column="53">NULL<pos:position pos:line="146" pos:column="57"/></name></expr></argument>)<pos:position pos:line="146" pos:column="58"/></argument_list></call>
            <comment type="block" pos:line="147" pos:column="13">/* RFC2616 14.9.1 Cache-Control: private
             * this object is marked for this user's eyes only. Behave
             * as a tunnel.
             */</comment>
            <operator pos:line="151" pos:column="13">||<pos:position pos:line="151" pos:column="15"/></operator> <call><name pos:line="151" pos:column="16">ap_cache_liststr<pos:position pos:line="151" pos:column="32"/></name><argument_list pos:line="151" pos:column="32">(<argument><expr><name pos:line="151" pos:column="33">cc_out<pos:position pos:line="151" pos:column="39"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="151" pos:column="41">"private"<pos:position pos:line="151" pos:column="50"/></literal></expr></argument>, <argument><expr><name pos:line="151" pos:column="52">NULL<pos:position pos:line="151" pos:column="56"/></name></expr></argument>)<pos:position pos:line="151" pos:column="57"/></argument_list></call>
            <comment type="block" pos:line="152" pos:column="13">/* RFC2616 14.8 Authorisation:
             * if authorisation is included in the request, we don't cache,
             * but we can cache if the following exceptions are true:
             * 1) If Cache-Control: s-maxage is included
             * 2) If Cache-Control: must-revalidate is included
             * 3) If Cache-Control: public is included
             */</comment>
            <operator pos:line="159" pos:column="13">||<pos:position pos:line="159" pos:column="15"/></operator> <operator pos:line="159" pos:column="16">(<pos:position pos:line="159" pos:column="17"/></operator><call><name pos:line="159" pos:column="17">apr_table_get<pos:position pos:line="159" pos:column="30"/></name><argument_list pos:line="159" pos:column="30">(<argument><expr><name><name pos:line="159" pos:column="31">r<pos:position pos:line="159" pos:column="32"/></name><operator pos:line="159" pos:column="32">-&gt;<pos:position pos:line="159" pos:column="37"/></operator><name pos:line="159" pos:column="34">headers_in<pos:position pos:line="159" pos:column="44"/></name></name></expr></argument>, <argument><expr><literal type="string" pos:line="159" pos:column="46">"Authorization"<pos:position pos:line="159" pos:column="61"/></literal></expr></argument>)<pos:position pos:line="159" pos:column="62"/></argument_list></call> <operator pos:line="159" pos:column="63">!=<pos:position pos:line="159" pos:column="65"/></operator> <name pos:line="159" pos:column="66">NULL<pos:position pos:line="159" pos:column="70"/></name>
                <operator pos:line="160" pos:column="17">&amp;&amp;<pos:position pos:line="160" pos:column="27"/></operator> <operator pos:line="160" pos:column="20">!<pos:position pos:line="160" pos:column="21"/></operator><operator pos:line="160" pos:column="21">(<pos:position pos:line="160" pos:column="22"/></operator><call><name pos:line="160" pos:column="22">ap_cache_liststr<pos:position pos:line="160" pos:column="38"/></name><argument_list pos:line="160" pos:column="38">(<argument><expr><name pos:line="160" pos:column="39">cc_out<pos:position pos:line="160" pos:column="45"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="160" pos:column="47">"s-maxage"<pos:position pos:line="160" pos:column="57"/></literal></expr></argument>, <argument><expr><name pos:line="160" pos:column="59">NULL<pos:position pos:line="160" pos:column="63"/></name></expr></argument>)<pos:position pos:line="160" pos:column="64"/></argument_list></call>
                     <operator pos:line="161" pos:column="22">||<pos:position pos:line="161" pos:column="24"/></operator> <call><name pos:line="161" pos:column="25">ap_cache_liststr<pos:position pos:line="161" pos:column="41"/></name><argument_list pos:line="161" pos:column="41">(<argument><expr><name pos:line="161" pos:column="42">cc_out<pos:position pos:line="161" pos:column="48"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="161" pos:column="50">"must-revalidate"<pos:position pos:line="161" pos:column="67"/></literal></expr></argument>, <argument><expr><name pos:line="161" pos:column="69">NULL<pos:position pos:line="161" pos:column="73"/></name></expr></argument>)<pos:position pos:line="161" pos:column="74"/></argument_list></call>
                     <operator pos:line="162" pos:column="22">||<pos:position pos:line="162" pos:column="24"/></operator> <call><name pos:line="162" pos:column="25">ap_cache_liststr<pos:position pos:line="162" pos:column="41"/></name><argument_list pos:line="162" pos:column="41">(<argument><expr><name pos:line="162" pos:column="42">cc_out<pos:position pos:line="162" pos:column="48"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="162" pos:column="50">"public"<pos:position pos:line="162" pos:column="58"/></literal></expr></argument>, <argument><expr><name pos:line="162" pos:column="60">NULL<pos:position pos:line="162" pos:column="64"/></name></expr></argument>)<pos:position pos:line="162" pos:column="65"/></argument_list></call><operator pos:line="162" pos:column="65">)<pos:position pos:line="162" pos:column="66"/></operator><operator pos:line="162" pos:column="66">)<pos:position pos:line="162" pos:column="67"/></operator>
            <comment type="block" pos:line="163" pos:column="13">/* or we've been asked not to cache it above */</comment>
            <operator pos:line="164" pos:column="13">||<pos:position pos:line="164" pos:column="15"/></operator> <name><name pos:line="164" pos:column="16">r<pos:position pos:line="164" pos:column="17"/></name><operator pos:line="164" pos:column="17">-&gt;<pos:position pos:line="164" pos:column="22"/></operator><name pos:line="164" pos:column="19">no_cache<pos:position pos:line="164" pos:column="27"/></name></name></expr>)<pos:position pos:line="164" pos:column="28"/></condition><then pos:line="164" pos:column="28"> <block pos:line="164" pos:column="29">{

            <expr_stmt><expr><call><name pos:line="166" pos:column="13">ap_log_error<pos:position pos:line="166" pos:column="25"/></name><argument_list pos:line="166" pos:column="25">(<argument><expr><name pos:line="166" pos:column="26">APLOG_MARK<pos:position pos:line="166" pos:column="36"/></name></expr></argument>, <argument><expr><name pos:line="166" pos:column="38">APLOG_DEBUG<pos:position pos:line="166" pos:column="49"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="166" pos:column="51">0<pos:position pos:line="166" pos:column="52"/></literal></expr></argument>, <argument><expr><name><name pos:line="166" pos:column="54">r<pos:position pos:line="166" pos:column="55"/></name><operator pos:line="166" pos:column="55">-&gt;<pos:position pos:line="166" pos:column="60"/></operator><name pos:line="166" pos:column="57">server<pos:position pos:line="166" pos:column="63"/></name></name></expr></argument>,
                         <argument><expr><literal type="string" pos:line="167" pos:column="26">"cache: response is not cachable"<pos:position pos:line="167" pos:column="59"/></literal></expr></argument>)<pos:position pos:line="167" pos:column="60"/></argument_list></call></expr>;<pos:position pos:line="167" pos:column="61"/></expr_stmt>

            <comment type="block" pos:line="169" pos:column="13">/* remove this object from the cache 
             * BillS Asks.. Why do we need to make this call to remove_url?
             * leave it in for now..
             */</comment>
            <expr_stmt><expr><call><name pos:line="173" pos:column="13">cache_remove_url<pos:position pos:line="173" pos:column="29"/></name><argument_list pos:line="173" pos:column="29">(<argument><expr><name pos:line="173" pos:column="30">r<pos:position pos:line="173" pos:column="31"/></name></expr></argument>, <argument><expr><name><name pos:line="173" pos:column="33">cache<pos:position pos:line="173" pos:column="38"/></name><operator pos:line="173" pos:column="38">-&gt;<pos:position pos:line="173" pos:column="43"/></operator><name pos:line="173" pos:column="40">types<pos:position pos:line="173" pos:column="45"/></name></name></expr></argument>, <argument><expr><name pos:line="173" pos:column="47">url<pos:position pos:line="173" pos:column="50"/></name></expr></argument>)<pos:position pos:line="173" pos:column="51"/></argument_list></call></expr>;<pos:position pos:line="173" pos:column="52"/></expr_stmt>

            <comment type="block" pos:line="175" pos:column="13">/* remove this filter from the chain */</comment>
            <expr_stmt><expr><call><name pos:line="176" pos:column="13">ap_remove_output_filter<pos:position pos:line="176" pos:column="36"/></name><argument_list pos:line="176" pos:column="36">(<argument><expr><name pos:line="176" pos:column="37">f<pos:position pos:line="176" pos:column="38"/></name></expr></argument>)<pos:position pos:line="176" pos:column="39"/></argument_list></call></expr>;<pos:position pos:line="176" pos:column="40"/></expr_stmt>

            <comment type="block" pos:line="178" pos:column="13">/* ship the data up the stack */</comment>
            <return pos:line="179" pos:column="13">return <expr><call><name pos:line="179" pos:column="20">ap_pass_brigade<pos:position pos:line="179" pos:column="35"/></name><argument_list pos:line="179" pos:column="35">(<argument><expr><name><name pos:line="179" pos:column="36">f<pos:position pos:line="179" pos:column="37"/></name><operator pos:line="179" pos:column="37">-&gt;<pos:position pos:line="179" pos:column="42"/></operator><name pos:line="179" pos:column="39">next<pos:position pos:line="179" pos:column="43"/></name></name></expr></argument>, <argument><expr><name pos:line="179" pos:column="45">in<pos:position pos:line="179" pos:column="47"/></name></expr></argument>)<pos:position pos:line="179" pos:column="48"/></argument_list></call></expr>;<pos:position pos:line="179" pos:column="49"/></return>
        }<pos:position pos:line="180" pos:column="10"/></block></then></if>
        <expr_stmt><expr><name><name pos:line="181" pos:column="9">cache<pos:position pos:line="181" pos:column="14"/></name><operator pos:line="181" pos:column="14">-&gt;<pos:position pos:line="181" pos:column="19"/></operator><name pos:line="181" pos:column="16">in_checked<pos:position pos:line="181" pos:column="26"/></name></name> <operator pos:line="181" pos:column="27">=<pos:position pos:line="181" pos:column="28"/></operator> <literal type="number" pos:line="181" pos:column="29">1<pos:position pos:line="181" pos:column="30"/></literal></expr>;<pos:position pos:line="181" pos:column="31"/></expr_stmt>
    }<pos:position pos:line="182" pos:column="6"/></block></else></if> <comment type="block" pos:line="182" pos:column="7">/* if cache-&gt;saved_brigade==NULL */</comment>

    <comment type="block" pos:line="184" pos:column="5">/* Set the content length if known.  We almost certainly do NOT want to
     * cache streams with unknown content lengths in the in-memory cache.
     * Streams with unknown content length should be first cached in the
     * file system. If they are withing acceptable limits, then they can be 
     * moved to the in-memory cache.
     */</comment>
    <block pos:line="190" pos:column="5">{
        <decl_stmt><decl><type><specifier pos:line="191" pos:column="9">const<pos:position pos:line="191" pos:column="14"/></specifier> <name pos:line="191" pos:column="15">char<pos:position pos:line="191" pos:column="19"/></name><modifier pos:line="191" pos:column="19">*<pos:position pos:line="191" pos:column="20"/></modifier></type> <name pos:line="191" pos:column="21">cl<pos:position pos:line="191" pos:column="23"/></name></decl>;<pos:position pos:line="191" pos:column="24"/></decl_stmt>
        <expr_stmt><expr><name pos:line="192" pos:column="9">cl<pos:position pos:line="192" pos:column="11"/></name> <operator pos:line="192" pos:column="12">=<pos:position pos:line="192" pos:column="13"/></operator> <call><name pos:line="192" pos:column="14">apr_table_get<pos:position pos:line="192" pos:column="27"/></name><argument_list pos:line="192" pos:column="27">(<argument><expr><name><name pos:line="192" pos:column="28">r<pos:position pos:line="192" pos:column="29"/></name><operator pos:line="192" pos:column="29">-&gt;<pos:position pos:line="192" pos:column="34"/></operator><name pos:line="192" pos:column="31">headers_out<pos:position pos:line="192" pos:column="42"/></name></name></expr></argument>, <argument><expr><literal type="string" pos:line="192" pos:column="44">"Content-Length"<pos:position pos:line="192" pos:column="60"/></literal></expr></argument>)<pos:position pos:line="192" pos:column="61"/></argument_list></call></expr>;<pos:position pos:line="192" pos:column="62"/></expr_stmt>
        <if pos:line="193" pos:column="9">if <condition pos:line="193" pos:column="12">(<expr><name pos:line="193" pos:column="13">cl<pos:position pos:line="193" pos:column="15"/></name></expr>)<pos:position pos:line="193" pos:column="16"/></condition><then pos:line="193" pos:column="16"> <block pos:line="193" pos:column="17">{
            <expr_stmt><expr><name pos:line="194" pos:column="13">size<pos:position pos:line="194" pos:column="17"/></name> <operator pos:line="194" pos:column="18">=<pos:position pos:line="194" pos:column="19"/></operator> <call><name pos:line="194" pos:column="20">apr_atoi64<pos:position pos:line="194" pos:column="30"/></name><argument_list pos:line="194" pos:column="30">(<argument><expr><name pos:line="194" pos:column="31">cl<pos:position pos:line="194" pos:column="33"/></name></expr></argument>)<pos:position pos:line="194" pos:column="34"/></argument_list></call></expr>;<pos:position pos:line="194" pos:column="35"/></expr_stmt>
        }<pos:position pos:line="195" pos:column="10"/></block></then>
        <else pos:line="196" pos:column="9">else <block pos:line="196" pos:column="14">{

            <comment type="block" pos:line="198" pos:column="13">/* if we don't get the content-length, see if we have all the 
             * buckets and use their length to calculate the size 
             */</comment>
            <decl_stmt><decl><type><name pos:line="201" pos:column="13">apr_bucket<pos:position pos:line="201" pos:column="23"/></name> <modifier pos:line="201" pos:column="24">*<pos:position pos:line="201" pos:column="25"/></modifier></type><name pos:line="201" pos:column="25">e<pos:position pos:line="201" pos:column="26"/></name></decl>;<pos:position pos:line="201" pos:column="27"/></decl_stmt>
            <decl_stmt><decl><type><name pos:line="202" pos:column="13">int<pos:position pos:line="202" pos:column="16"/></name></type> <name pos:line="202" pos:column="17">all_buckets_here<pos:position pos:line="202" pos:column="33"/></name><init pos:line="202" pos:column="33">=<expr><literal type="number" pos:line="202" pos:column="34">0<pos:position pos:line="202" pos:column="35"/></literal></expr></init></decl>;<pos:position pos:line="202" pos:column="36"/></decl_stmt>
            <decl_stmt><decl><type><name pos:line="203" pos:column="13">int<pos:position pos:line="203" pos:column="16"/></name></type> <name pos:line="203" pos:column="17">unresolved_length<pos:position pos:line="203" pos:column="34"/></name> <init pos:line="203" pos:column="35">= <expr><literal type="number" pos:line="203" pos:column="37">0<pos:position pos:line="203" pos:column="38"/></literal></expr></init></decl>;<pos:position pos:line="203" pos:column="39"/></decl_stmt>
            <expr_stmt><expr><name pos:line="204" pos:column="13">size<pos:position pos:line="204" pos:column="17"/></name><operator pos:line="204" pos:column="17">=<pos:position pos:line="204" pos:column="18"/></operator><literal type="number" pos:line="204" pos:column="18">0<pos:position pos:line="204" pos:column="19"/></literal></expr>;<pos:position pos:line="204" pos:column="20"/></expr_stmt>
            <macro><name pos:line="205" pos:column="13">APR_BRIGADE_FOREACH<pos:position pos:line="205" pos:column="32"/></name><argument_list pos:line="205" pos:column="32">(<argument pos:line="205" pos:column="33">e<pos:position pos:line="205" pos:column="34"/></argument>, <argument pos:line="205" pos:column="36">in<pos:position pos:line="205" pos:column="38"/></argument>)<pos:position pos:line="205" pos:column="39"/></argument_list></macro> <block pos:line="205" pos:column="40">{
                <if pos:line="206" pos:column="17">if <condition pos:line="206" pos:column="20">(<expr><call><name pos:line="206" pos:column="21">APR_BUCKET_IS_EOS<pos:position pos:line="206" pos:column="38"/></name><argument_list pos:line="206" pos:column="38">(<argument><expr><name pos:line="206" pos:column="39">e<pos:position pos:line="206" pos:column="40"/></name></expr></argument>)<pos:position pos:line="206" pos:column="41"/></argument_list></call></expr>)<pos:position pos:line="206" pos:column="42"/></condition><then pos:line="206" pos:column="42"> <block pos:line="206" pos:column="43">{
                    <expr_stmt><expr><name pos:line="207" pos:column="21">all_buckets_here<pos:position pos:line="207" pos:column="37"/></name><operator pos:line="207" pos:column="37">=<pos:position pos:line="207" pos:column="38"/></operator><literal type="number" pos:line="207" pos:column="38">1<pos:position pos:line="207" pos:column="39"/></literal></expr>;<pos:position pos:line="207" pos:column="40"/></expr_stmt>
                    <break pos:line="208" pos:column="21">break;<pos:position pos:line="208" pos:column="27"/></break>
                }<pos:position pos:line="209" pos:column="18"/></block></then></if>
                <if pos:line="210" pos:column="17">if <condition pos:line="210" pos:column="20">(<expr><call><name pos:line="210" pos:column="21">APR_BUCKET_IS_FLUSH<pos:position pos:line="210" pos:column="40"/></name><argument_list pos:line="210" pos:column="40">(<argument><expr><name pos:line="210" pos:column="41">e<pos:position pos:line="210" pos:column="42"/></name></expr></argument>)<pos:position pos:line="210" pos:column="43"/></argument_list></call></expr>)<pos:position pos:line="210" pos:column="44"/></condition><then pos:line="210" pos:column="44"> <block pos:line="210" pos:column="45">{
                    <expr_stmt><expr><name pos:line="211" pos:column="21">unresolved_length<pos:position pos:line="211" pos:column="38"/></name> <operator pos:line="211" pos:column="39">=<pos:position pos:line="211" pos:column="40"/></operator> <literal type="number" pos:line="211" pos:column="41">1<pos:position pos:line="211" pos:column="42"/></literal></expr>;<pos:position pos:line="211" pos:column="43"/></expr_stmt>
                    <continue pos:line="212" pos:column="21">continue;<pos:position pos:line="212" pos:column="30"/></continue>
                }<pos:position pos:line="213" pos:column="18"/></block></then></if>
                <if pos:line="214" pos:column="17">if <condition pos:line="214" pos:column="20">(<expr><name><name pos:line="214" pos:column="21">e<pos:position pos:line="214" pos:column="22"/></name><operator pos:line="214" pos:column="22">-&gt;<pos:position pos:line="214" pos:column="27"/></operator><name pos:line="214" pos:column="24">length<pos:position pos:line="214" pos:column="30"/></name></name> <operator pos:line="214" pos:column="31">&lt;<pos:position pos:line="214" pos:column="35"/></operator> <literal type="number" pos:line="214" pos:column="33">0<pos:position pos:line="214" pos:column="34"/></literal></expr>)<pos:position pos:line="214" pos:column="35"/></condition><then pos:line="214" pos:column="35"> <block pos:line="214" pos:column="36">{
                    <break pos:line="215" pos:column="21">break;<pos:position pos:line="215" pos:column="27"/></break>
                }<pos:position pos:line="216" pos:column="18"/></block></then></if>
                <expr_stmt><expr><name pos:line="217" pos:column="17">size<pos:position pos:line="217" pos:column="21"/></name> <operator pos:line="217" pos:column="22">+=<pos:position pos:line="217" pos:column="24"/></operator> <name><name pos:line="217" pos:column="25">e<pos:position pos:line="217" pos:column="26"/></name><operator pos:line="217" pos:column="26">-&gt;<pos:position pos:line="217" pos:column="31"/></operator><name pos:line="217" pos:column="28">length<pos:position pos:line="217" pos:column="34"/></name></name></expr>;<pos:position pos:line="217" pos:column="35"/></expr_stmt>
            }<pos:position pos:line="218" pos:column="14"/></block>

            <if pos:line="220" pos:column="13">if <condition pos:line="220" pos:column="16">(<expr><operator pos:line="220" pos:column="17">!<pos:position pos:line="220" pos:column="18"/></operator><name pos:line="220" pos:column="18">all_buckets_here<pos:position pos:line="220" pos:column="34"/></name></expr>)<pos:position pos:line="220" pos:column="35"/></condition><then pos:line="220" pos:column="35"> <block pos:line="220" pos:column="36">{
                <comment type="block" pos:line="221" pos:column="17">/* Attempt to set aside a copy of a partial response
                 * in hopes of caching it once the rest of the response
                 * is available.  There are special cases in which we
                 * don't try to set aside the content, though:
                 *   1. The brigade contains at least one bucket of
                 *      unknown length, such as a pipe or socket bucket.
                 *   2. The size of the response exceeds the limit set
                 *      by the CacheMaxStreamingBuffer  directive.
                 */</comment>
                <if pos:line="230" pos:column="17">if <condition pos:line="230" pos:column="20">(<expr><name pos:line="230" pos:column="21">unresolved_length<pos:position pos:line="230" pos:column="38"/></name> <operator pos:line="230" pos:column="39">||<pos:position pos:line="230" pos:column="41"/></operator>
                    <operator pos:line="231" pos:column="21">(<pos:position pos:line="231" pos:column="22"/></operator><name><name pos:line="231" pos:column="22">cache<pos:position pos:line="231" pos:column="27"/></name><operator pos:line="231" pos:column="27">-&gt;<pos:position pos:line="231" pos:column="32"/></operator><name pos:line="231" pos:column="29">saved_size<pos:position pos:line="231" pos:column="39"/></name></name> <operator pos:line="231" pos:column="40">+<pos:position pos:line="231" pos:column="41"/></operator> <name pos:line="231" pos:column="42">size<pos:position pos:line="231" pos:column="46"/></name> <operator pos:line="231" pos:column="47">&gt;<pos:position pos:line="231" pos:column="51"/></operator>
                     <name><name pos:line="232" pos:column="22">conf<pos:position pos:line="232" pos:column="26"/></name><operator pos:line="232" pos:column="26">-&gt;<pos:position pos:line="232" pos:column="31"/></operator><name pos:line="232" pos:column="28">max_streaming_buffer_size<pos:position pos:line="232" pos:column="53"/></name></name><operator pos:line="232" pos:column="53">)<pos:position pos:line="232" pos:column="54"/></operator></expr>)<pos:position pos:line="232" pos:column="55"/></condition><then pos:line="232" pos:column="55"> <block pos:line="232" pos:column="56">{

                    <expr_stmt><expr><call><name pos:line="234" pos:column="21">ap_log_error<pos:position pos:line="234" pos:column="33"/></name><argument_list pos:line="234" pos:column="33">(<argument><expr><name pos:line="234" pos:column="34">APLOG_MARK<pos:position pos:line="234" pos:column="44"/></name></expr></argument>, <argument><expr><name pos:line="234" pos:column="46">APLOG_DEBUG<pos:position pos:line="234" pos:column="57"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="234" pos:column="59">0<pos:position pos:line="234" pos:column="60"/></literal></expr></argument>, <argument><expr><name><name pos:line="234" pos:column="62">r<pos:position pos:line="234" pos:column="63"/></name><operator pos:line="234" pos:column="63">-&gt;<pos:position pos:line="234" pos:column="68"/></operator><name pos:line="234" pos:column="65">server<pos:position pos:line="234" pos:column="71"/></name></name></expr></argument>,
                                 <argument><expr><literal type="string" pos:line="235" pos:column="34">"cache: not caching streamed response for "<pos:position pos:line="235" pos:column="77"/></literal>
                                 <literal type="string" pos:line="236" pos:column="34">"%s because length %s"<pos:position pos:line="236" pos:column="56"/></literal></expr></argument>, <argument><expr><name pos:line="236" pos:column="58">url<pos:position pos:line="236" pos:column="61"/></name></expr></argument>,
                                 <argument><expr><operator pos:line="237" pos:column="34">(<pos:position pos:line="237" pos:column="35"/></operator><ternary><condition><expr><name pos:line="237" pos:column="35">unresolved_length<pos:position pos:line="237" pos:column="52"/></name></expr> ?<pos:position pos:line="237" pos:column="54"/></condition><then pos:line="237" pos:column="54">
                                  <expr><literal type="string" pos:line="238" pos:column="35">"cannot be determined"<pos:position pos:line="238" pos:column="57"/></literal></expr> <pos:position pos:line="238" pos:column="58"/></then><else pos:line="238" pos:column="58">:
                                  <expr><literal type="string" pos:line="239" pos:column="35">"&gt; CacheMaxStreamingBuffer"<pos:position pos:line="239" pos:column="65"/></literal></expr></else></ternary><operator pos:line="239" pos:column="62">)<pos:position pos:line="239" pos:column="63"/></operator></expr></argument>)<pos:position pos:line="239" pos:column="64"/></argument_list></call></expr>;<pos:position pos:line="239" pos:column="65"/></expr_stmt>

                    <if pos:line="241" pos:column="21">if <condition pos:line="241" pos:column="24">(<expr><name><name pos:line="241" pos:column="25">cache<pos:position pos:line="241" pos:column="30"/></name><operator pos:line="241" pos:column="30">-&gt;<pos:position pos:line="241" pos:column="35"/></operator><name pos:line="241" pos:column="32">saved_brigade<pos:position pos:line="241" pos:column="45"/></name></name> <operator pos:line="241" pos:column="46">!=<pos:position pos:line="241" pos:column="48"/></operator> <name pos:line="241" pos:column="49">NULL<pos:position pos:line="241" pos:column="53"/></name></expr>)<pos:position pos:line="241" pos:column="54"/></condition><then pos:line="241" pos:column="54"> <block pos:line="241" pos:column="55">{
                        <expr_stmt><expr><call><name pos:line="242" pos:column="25">apr_brigade_destroy<pos:position pos:line="242" pos:column="44"/></name><argument_list pos:line="242" pos:column="44">(<argument><expr><name><name pos:line="242" pos:column="45">cache<pos:position pos:line="242" pos:column="50"/></name><operator pos:line="242" pos:column="50">-&gt;<pos:position pos:line="242" pos:column="55"/></operator><name pos:line="242" pos:column="52">saved_brigade<pos:position pos:line="242" pos:column="65"/></name></name></expr></argument>)<pos:position pos:line="242" pos:column="66"/></argument_list></call></expr>;<pos:position pos:line="242" pos:column="67"/></expr_stmt>
                        <expr_stmt><expr><name><name pos:line="243" pos:column="25">cache<pos:position pos:line="243" pos:column="30"/></name><operator pos:line="243" pos:column="30">-&gt;<pos:position pos:line="243" pos:column="35"/></operator><name pos:line="243" pos:column="32">saved_brigade<pos:position pos:line="243" pos:column="45"/></name></name> <operator pos:line="243" pos:column="46">=<pos:position pos:line="243" pos:column="47"/></operator> <name pos:line="243" pos:column="48">NULL<pos:position pos:line="243" pos:column="52"/></name></expr>;<pos:position pos:line="243" pos:column="53"/></expr_stmt>
                        <expr_stmt><expr><name><name pos:line="244" pos:column="25">cache<pos:position pos:line="244" pos:column="30"/></name><operator pos:line="244" pos:column="30">-&gt;<pos:position pos:line="244" pos:column="35"/></operator><name pos:line="244" pos:column="32">saved_size<pos:position pos:line="244" pos:column="42"/></name></name> <operator pos:line="244" pos:column="43">=<pos:position pos:line="244" pos:column="44"/></operator> <literal type="number" pos:line="244" pos:column="45">0<pos:position pos:line="244" pos:column="46"/></literal></expr>;<pos:position pos:line="244" pos:column="47"/></expr_stmt>
                    }<pos:position pos:line="245" pos:column="22"/></block></then></if>
                    <expr_stmt><expr><call><name pos:line="246" pos:column="21">ap_remove_output_filter<pos:position pos:line="246" pos:column="44"/></name><argument_list pos:line="246" pos:column="44">(<argument><expr><name pos:line="246" pos:column="45">f<pos:position pos:line="246" pos:column="46"/></name></expr></argument>)<pos:position pos:line="246" pos:column="47"/></argument_list></call></expr>;<pos:position pos:line="246" pos:column="48"/></expr_stmt>
                    <return pos:line="247" pos:column="21">return <expr><call><name pos:line="247" pos:column="28">ap_pass_brigade<pos:position pos:line="247" pos:column="43"/></name><argument_list pos:line="247" pos:column="43">(<argument><expr><name><name pos:line="247" pos:column="44">f<pos:position pos:line="247" pos:column="45"/></name><operator pos:line="247" pos:column="45">-&gt;<pos:position pos:line="247" pos:column="50"/></operator><name pos:line="247" pos:column="47">next<pos:position pos:line="247" pos:column="51"/></name></name></expr></argument>, <argument><expr><name pos:line="247" pos:column="53">in<pos:position pos:line="247" pos:column="55"/></name></expr></argument>)<pos:position pos:line="247" pos:column="56"/></argument_list></call></expr>;<pos:position pos:line="247" pos:column="57"/></return>
                }<pos:position pos:line="248" pos:column="18"/></block></then></if>

                <comment type="block" pos:line="250" pos:column="17">/* Add a copy of the new brigade's buckets to the
                 * saved brigade.  The reason for the copy is so
                 * that we can output the new buckets immediately,
                 * rather than having to buffer up the entire
                 * response before sending anything.
                 */</comment>
                <if pos:line="256" pos:column="17">if <condition pos:line="256" pos:column="20">(<expr><name><name pos:line="256" pos:column="21">cache<pos:position pos:line="256" pos:column="26"/></name><operator pos:line="256" pos:column="26">-&gt;<pos:position pos:line="256" pos:column="31"/></operator><name pos:line="256" pos:column="28">saved_brigade<pos:position pos:line="256" pos:column="41"/></name></name> <operator pos:line="256" pos:column="42">==<pos:position pos:line="256" pos:column="44"/></operator> <name pos:line="256" pos:column="45">NULL<pos:position pos:line="256" pos:column="49"/></name></expr>)<pos:position pos:line="256" pos:column="50"/></condition><then pos:line="256" pos:column="50"> <block pos:line="256" pos:column="51">{
                    <expr_stmt><expr><name><name pos:line="257" pos:column="21">cache<pos:position pos:line="257" pos:column="26"/></name><operator pos:line="257" pos:column="26">-&gt;<pos:position pos:line="257" pos:column="31"/></operator><name pos:line="257" pos:column="28">saved_brigade<pos:position pos:line="257" pos:column="41"/></name></name> <operator pos:line="257" pos:column="42">=<pos:position pos:line="257" pos:column="43"/></operator>
                        <call><name pos:line="258" pos:column="25">apr_brigade_create<pos:position pos:line="258" pos:column="43"/></name><argument_list pos:line="258" pos:column="43">(<argument><expr><name><name pos:line="258" pos:column="44">r<pos:position pos:line="258" pos:column="45"/></name><operator pos:line="258" pos:column="45">-&gt;<pos:position pos:line="258" pos:column="50"/></operator><name pos:line="258" pos:column="47">pool<pos:position pos:line="258" pos:column="51"/></name></name></expr></argument>,
                                           <argument><expr><name><name pos:line="259" pos:column="44">r<pos:position pos:line="259" pos:column="45"/></name><operator pos:line="259" pos:column="45">-&gt;<pos:position pos:line="259" pos:column="50"/></operator><name pos:line="259" pos:column="47">connection<pos:position pos:line="259" pos:column="57"/></name><operator pos:line="259" pos:column="57">-&gt;<pos:position pos:line="259" pos:column="62"/></operator><name pos:line="259" pos:column="59">bucket_alloc<pos:position pos:line="259" pos:column="71"/></name></name></expr></argument>)<pos:position pos:line="259" pos:column="72"/></argument_list></call></expr>;<pos:position pos:line="259" pos:column="73"/></expr_stmt>
                    <expr_stmt><expr><name><name pos:line="260" pos:column="21">cache<pos:position pos:line="260" pos:column="26"/></name><operator pos:line="260" pos:column="26">-&gt;<pos:position pos:line="260" pos:column="31"/></operator><name pos:line="260" pos:column="28">exp<pos:position pos:line="260" pos:column="31"/></name></name> <operator pos:line="260" pos:column="32">=<pos:position pos:line="260" pos:column="33"/></operator> <name pos:line="260" pos:column="34">exp<pos:position pos:line="260" pos:column="37"/></name></expr>;<pos:position pos:line="260" pos:column="38"/></expr_stmt>
                    <expr_stmt><expr><name><name pos:line="261" pos:column="21">cache<pos:position pos:line="261" pos:column="26"/></name><operator pos:line="261" pos:column="26">-&gt;<pos:position pos:line="261" pos:column="31"/></operator><name pos:line="261" pos:column="28">lastmod<pos:position pos:line="261" pos:column="35"/></name></name> <operator pos:line="261" pos:column="36">=<pos:position pos:line="261" pos:column="37"/></operator> <name pos:line="261" pos:column="38">lastmod<pos:position pos:line="261" pos:column="45"/></name></expr>;<pos:position pos:line="261" pos:column="46"/></expr_stmt>
                    <expr_stmt><expr><name><name pos:line="262" pos:column="21">cache<pos:position pos:line="262" pos:column="26"/></name><operator pos:line="262" pos:column="26">-&gt;<pos:position pos:line="262" pos:column="31"/></operator><name pos:line="262" pos:column="28">info<pos:position pos:line="262" pos:column="32"/></name></name> <operator pos:line="262" pos:column="33">=<pos:position pos:line="262" pos:column="34"/></operator> <name pos:line="262" pos:column="35">info<pos:position pos:line="262" pos:column="39"/></name></expr>;<pos:position pos:line="262" pos:column="40"/></expr_stmt>
                }<pos:position pos:line="263" pos:column="18"/></block></then></if>
                <macro><name pos:line="264" pos:column="17">APR_BRIGADE_FOREACH<pos:position pos:line="264" pos:column="36"/></name><argument_list pos:line="264" pos:column="36">(<argument pos:line="264" pos:column="37">e<pos:position pos:line="264" pos:column="38"/></argument>, <argument pos:line="264" pos:column="40">in<pos:position pos:line="264" pos:column="42"/></argument>)<pos:position pos:line="264" pos:column="43"/></argument_list></macro> <block pos:line="264" pos:column="44">{
                    <decl_stmt><decl><type><name pos:line="265" pos:column="21">apr_bucket<pos:position pos:line="265" pos:column="31"/></name> <modifier pos:line="265" pos:column="32">*<pos:position pos:line="265" pos:column="33"/></modifier></type><name pos:line="265" pos:column="33">copy<pos:position pos:line="265" pos:column="37"/></name></decl>;<pos:position pos:line="265" pos:column="38"/></decl_stmt>
                    <expr_stmt><expr><name pos:line="266" pos:column="21">rv<pos:position pos:line="266" pos:column="23"/></name> <operator pos:line="266" pos:column="24">=<pos:position pos:line="266" pos:column="25"/></operator> <call><name pos:line="266" pos:column="26">apr_bucket_copy<pos:position pos:line="266" pos:column="41"/></name><argument_list pos:line="266" pos:column="41">(<argument><expr><name pos:line="266" pos:column="42">e<pos:position pos:line="266" pos:column="43"/></name></expr></argument>, <argument><expr><operator pos:line="266" pos:column="45">&amp;<pos:position pos:line="266" pos:column="50"/></operator><name pos:line="266" pos:column="46">copy<pos:position pos:line="266" pos:column="50"/></name></expr></argument>)<pos:position pos:line="266" pos:column="51"/></argument_list></call></expr>;<pos:position pos:line="266" pos:column="52"/></expr_stmt>
                    <if pos:line="267" pos:column="21">if <condition pos:line="267" pos:column="24">(<expr><name pos:line="267" pos:column="25">rv<pos:position pos:line="267" pos:column="27"/></name> <operator pos:line="267" pos:column="28">==<pos:position pos:line="267" pos:column="30"/></operator> <name pos:line="267" pos:column="31">APR_ENOTIMPL<pos:position pos:line="267" pos:column="43"/></name></expr>)<pos:position pos:line="267" pos:column="44"/></condition><then pos:line="267" pos:column="44"> <block pos:line="267" pos:column="45">{
                        <decl_stmt><decl><type><specifier pos:line="268" pos:column="25">const<pos:position pos:line="268" pos:column="30"/></specifier> <name pos:line="268" pos:column="31">char<pos:position pos:line="268" pos:column="35"/></name> <modifier pos:line="268" pos:column="36">*<pos:position pos:line="268" pos:column="37"/></modifier></type><name pos:line="268" pos:column="37">str<pos:position pos:line="268" pos:column="40"/></name></decl>;<pos:position pos:line="268" pos:column="41"/></decl_stmt>
                        <decl_stmt><decl><type><name pos:line="269" pos:column="25">apr_size_t<pos:position pos:line="269" pos:column="35"/></name></type> <name pos:line="269" pos:column="36">len<pos:position pos:line="269" pos:column="39"/></name></decl>;<pos:position pos:line="269" pos:column="40"/></decl_stmt>

                        <comment type="block" pos:line="271" pos:column="25">/* This takes care of uncopyable buckets. */</comment>
                        <expr_stmt><expr><name pos:line="272" pos:column="25">rv<pos:position pos:line="272" pos:column="27"/></name> <operator pos:line="272" pos:column="28">=<pos:position pos:line="272" pos:column="29"/></operator> <call><name pos:line="272" pos:column="30">apr_bucket_read<pos:position pos:line="272" pos:column="45"/></name><argument_list pos:line="272" pos:column="45">(<argument><expr><name pos:line="272" pos:column="46">e<pos:position pos:line="272" pos:column="47"/></name></expr></argument>, <argument><expr><operator pos:line="272" pos:column="49">&amp;<pos:position pos:line="272" pos:column="54"/></operator><name pos:line="272" pos:column="50">str<pos:position pos:line="272" pos:column="53"/></name></expr></argument>, <argument><expr><operator pos:line="272" pos:column="55">&amp;<pos:position pos:line="272" pos:column="60"/></operator><name pos:line="272" pos:column="56">len<pos:position pos:line="272" pos:column="59"/></name></expr></argument>, <argument><expr><name pos:line="272" pos:column="61">APR_BLOCK_READ<pos:position pos:line="272" pos:column="75"/></name></expr></argument>)<pos:position pos:line="272" pos:column="76"/></argument_list></call></expr>;<pos:position pos:line="272" pos:column="77"/></expr_stmt>
                        <if pos:line="273" pos:column="25">if <condition pos:line="273" pos:column="28">(<expr><operator pos:line="273" pos:column="29">(<pos:position pos:line="273" pos:column="30"/></operator><name pos:line="273" pos:column="30">rv<pos:position pos:line="273" pos:column="32"/></name> <operator pos:line="273" pos:column="33">==<pos:position pos:line="273" pos:column="35"/></operator> <name pos:line="273" pos:column="36">APR_SUCCESS<pos:position pos:line="273" pos:column="47"/></name><operator pos:line="273" pos:column="47">)<pos:position pos:line="273" pos:column="48"/></operator> <operator pos:line="273" pos:column="49">&amp;&amp;<pos:position pos:line="273" pos:column="59"/></operator>
                            <operator pos:line="274" pos:column="29">(<pos:position pos:line="274" pos:column="30"/></operator><name><name pos:line="274" pos:column="30">cache<pos:position pos:line="274" pos:column="35"/></name><operator pos:line="274" pos:column="35">-&gt;<pos:position pos:line="274" pos:column="40"/></operator><name pos:line="274" pos:column="37">saved_size<pos:position pos:line="274" pos:column="47"/></name></name> <operator pos:line="274" pos:column="48">+<pos:position pos:line="274" pos:column="49"/></operator> <name pos:line="274" pos:column="50">len<pos:position pos:line="274" pos:column="53"/></name> <operator pos:line="274" pos:column="54">&lt;=<pos:position pos:line="274" pos:column="59"/></operator>
                                        <name><name pos:line="275" pos:column="41">conf<pos:position pos:line="275" pos:column="45"/></name><operator pos:line="275" pos:column="45">-&gt;<pos:position pos:line="275" pos:column="50"/></operator><name pos:line="275" pos:column="47">max_streaming_buffer_size<pos:position pos:line="275" pos:column="72"/></name></name><operator pos:line="275" pos:column="72">)<pos:position pos:line="275" pos:column="73"/></operator></expr>)<pos:position pos:line="275" pos:column="74"/></condition><then pos:line="275" pos:column="74"> <block pos:line="275" pos:column="75">{
                            <expr_stmt><expr><name pos:line="276" pos:column="29">rv<pos:position pos:line="276" pos:column="31"/></name> <operator pos:line="276" pos:column="32">=<pos:position pos:line="276" pos:column="33"/></operator> <call><name pos:line="276" pos:column="34">apr_bucket_copy<pos:position pos:line="276" pos:column="49"/></name><argument_list pos:line="276" pos:column="49">(<argument><expr><name pos:line="276" pos:column="50">e<pos:position pos:line="276" pos:column="51"/></name></expr></argument>, <argument><expr><operator pos:line="276" pos:column="53">&amp;<pos:position pos:line="276" pos:column="58"/></operator><name pos:line="276" pos:column="54">copy<pos:position pos:line="276" pos:column="58"/></name></expr></argument>)<pos:position pos:line="276" pos:column="59"/></argument_list></call></expr>;<pos:position pos:line="276" pos:column="60"/></expr_stmt>
                        }<pos:position pos:line="277" pos:column="26"/></block></then></if>

                        <if pos:line="279" pos:column="25">if <condition pos:line="279" pos:column="28">(<expr><operator pos:line="279" pos:column="29">(<pos:position pos:line="279" pos:column="30"/></operator><name pos:line="279" pos:column="30">rv<pos:position pos:line="279" pos:column="32"/></name> <operator pos:line="279" pos:column="33">!=<pos:position pos:line="279" pos:column="35"/></operator> <name pos:line="279" pos:column="36">APR_SUCCESS<pos:position pos:line="279" pos:column="47"/></name><operator pos:line="279" pos:column="47">)<pos:position pos:line="279" pos:column="48"/></operator> <operator pos:line="279" pos:column="49">||<pos:position pos:line="279" pos:column="51"/></operator>
                            <operator pos:line="280" pos:column="29">(<pos:position pos:line="280" pos:column="30"/></operator><name><name pos:line="280" pos:column="30">cache<pos:position pos:line="280" pos:column="35"/></name><operator pos:line="280" pos:column="35">-&gt;<pos:position pos:line="280" pos:column="40"/></operator><name pos:line="280" pos:column="37">saved_size<pos:position pos:line="280" pos:column="47"/></name></name> <operator pos:line="280" pos:column="48">+<pos:position pos:line="280" pos:column="49"/></operator> <name pos:line="280" pos:column="50">len<pos:position pos:line="280" pos:column="53"/></name> <operator pos:line="280" pos:column="54">&gt;<pos:position pos:line="280" pos:column="58"/></operator>
                                        <name><name pos:line="281" pos:column="41">conf<pos:position pos:line="281" pos:column="45"/></name><operator pos:line="281" pos:column="45">-&gt;<pos:position pos:line="281" pos:column="50"/></operator><name pos:line="281" pos:column="47">max_streaming_buffer_size<pos:position pos:line="281" pos:column="72"/></name></name><operator pos:line="281" pos:column="72">)<pos:position pos:line="281" pos:column="73"/></operator></expr>)<pos:position pos:line="281" pos:column="74"/></condition><then><block pos:line="281" pos:column="74">{
                            <expr_stmt><expr><call><name pos:line="282" pos:column="29">ap_log_error<pos:position pos:line="282" pos:column="41"/></name><argument_list pos:line="282" pos:column="41">(<argument><expr><name pos:line="282" pos:column="42">APLOG_MARK<pos:position pos:line="282" pos:column="52"/></name></expr></argument>, <argument><expr><name pos:line="282" pos:column="54">APLOG_DEBUG<pos:position pos:line="282" pos:column="65"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="282" pos:column="67">0<pos:position pos:line="282" pos:column="68"/></literal></expr></argument>, <argument><expr><name><name pos:line="282" pos:column="70">r<pos:position pos:line="282" pos:column="71"/></name><operator pos:line="282" pos:column="71">-&gt;<pos:position pos:line="282" pos:column="76"/></operator><name pos:line="282" pos:column="73">server<pos:position pos:line="282" pos:column="79"/></name></name></expr></argument>,
                                         <argument><expr><literal type="string" pos:line="283" pos:column="42">"cache: not caching streamed response for "<pos:position pos:line="283" pos:column="85"/></literal>
                                         <literal type="string" pos:line="284" pos:column="42">"%s because length %s"<pos:position pos:line="284" pos:column="64"/></literal></expr></argument>, <argument><expr><name pos:line="284" pos:column="66">url<pos:position pos:line="284" pos:column="69"/></name></expr></argument>,
                                          <argument><expr><literal type="string" pos:line="285" pos:column="43">"&gt; CacheMaxStreamingBuffer"<pos:position pos:line="285" pos:column="73"/></literal></expr></argument>)<pos:position pos:line="285" pos:column="71"/></argument_list></call></expr>;<pos:position pos:line="285" pos:column="72"/></expr_stmt>

                            <if pos:line="287" pos:column="29">if <condition pos:line="287" pos:column="32">(<expr><name><name pos:line="287" pos:column="33">cache<pos:position pos:line="287" pos:column="38"/></name><operator pos:line="287" pos:column="38">-&gt;<pos:position pos:line="287" pos:column="43"/></operator><name pos:line="287" pos:column="40">saved_brigade<pos:position pos:line="287" pos:column="53"/></name></name> <operator pos:line="287" pos:column="54">!=<pos:position pos:line="287" pos:column="56"/></operator> <name pos:line="287" pos:column="57">NULL<pos:position pos:line="287" pos:column="61"/></name></expr>)<pos:position pos:line="287" pos:column="62"/></condition><then pos:line="287" pos:column="62"> <block pos:line="287" pos:column="63">{
                                <expr_stmt><expr><call><name pos:line="288" pos:column="33">apr_brigade_destroy<pos:position pos:line="288" pos:column="52"/></name><argument_list pos:line="288" pos:column="52">(<argument><expr><name><name pos:line="288" pos:column="53">cache<pos:position pos:line="288" pos:column="58"/></name><operator pos:line="288" pos:column="58">-&gt;<pos:position pos:line="288" pos:column="63"/></operator><name pos:line="288" pos:column="60">saved_brigade<pos:position pos:line="288" pos:column="73"/></name></name></expr></argument>)<pos:position pos:line="288" pos:column="74"/></argument_list></call></expr>;<pos:position pos:line="288" pos:column="75"/></expr_stmt>
                                <expr_stmt><expr><name><name pos:line="289" pos:column="33">cache<pos:position pos:line="289" pos:column="38"/></name><operator pos:line="289" pos:column="38">-&gt;<pos:position pos:line="289" pos:column="43"/></operator><name pos:line="289" pos:column="40">saved_brigade<pos:position pos:line="289" pos:column="53"/></name></name> <operator pos:line="289" pos:column="54">=<pos:position pos:line="289" pos:column="55"/></operator> <name pos:line="289" pos:column="56">NULL<pos:position pos:line="289" pos:column="60"/></name></expr>;<pos:position pos:line="289" pos:column="61"/></expr_stmt>
                                <expr_stmt><expr><name><name pos:line="290" pos:column="33">cache<pos:position pos:line="290" pos:column="38"/></name><operator pos:line="290" pos:column="38">-&gt;<pos:position pos:line="290" pos:column="43"/></operator><name pos:line="290" pos:column="40">saved_size<pos:position pos:line="290" pos:column="50"/></name></name> <operator pos:line="290" pos:column="51">=<pos:position pos:line="290" pos:column="52"/></operator> <literal type="number" pos:line="290" pos:column="53">0<pos:position pos:line="290" pos:column="54"/></literal></expr>;<pos:position pos:line="290" pos:column="55"/></expr_stmt>
                            }<pos:position pos:line="291" pos:column="30"/></block></then></if>
                            <expr_stmt><expr><call><name pos:line="292" pos:column="29">ap_remove_output_filter<pos:position pos:line="292" pos:column="52"/></name><argument_list pos:line="292" pos:column="52">(<argument><expr><name pos:line="292" pos:column="53">f<pos:position pos:line="292" pos:column="54"/></name></expr></argument>)<pos:position pos:line="292" pos:column="55"/></argument_list></call></expr>;<pos:position pos:line="292" pos:column="56"/></expr_stmt>
                            <return pos:line="293" pos:column="29">return <expr><call><name pos:line="293" pos:column="36">ap_pass_brigade<pos:position pos:line="293" pos:column="51"/></name><argument_list pos:line="293" pos:column="51">(<argument><expr><name><name pos:line="293" pos:column="52">f<pos:position pos:line="293" pos:column="53"/></name><operator pos:line="293" pos:column="53">-&gt;<pos:position pos:line="293" pos:column="58"/></operator><name pos:line="293" pos:column="55">next<pos:position pos:line="293" pos:column="59"/></name></name></expr></argument>, <argument><expr><name pos:line="293" pos:column="61">in<pos:position pos:line="293" pos:column="63"/></name></expr></argument>)<pos:position pos:line="293" pos:column="64"/></argument_list></call></expr>;<pos:position pos:line="293" pos:column="65"/></return>
                        }<pos:position pos:line="294" pos:column="26"/></block></then></if>
                    }<pos:position pos:line="295" pos:column="22"/></block></then></if>
                    <expr_stmt><expr><call><name pos:line="296" pos:column="21">APR_BRIGADE_INSERT_TAIL<pos:position pos:line="296" pos:column="44"/></name><argument_list pos:line="296" pos:column="44">(<argument><expr><name><name pos:line="296" pos:column="45">cache<pos:position pos:line="296" pos:column="50"/></name><operator pos:line="296" pos:column="50">-&gt;<pos:position pos:line="296" pos:column="55"/></operator><name pos:line="296" pos:column="52">saved_brigade<pos:position pos:line="296" pos:column="65"/></name></name></expr></argument>, <argument><expr><name pos:line="296" pos:column="67">copy<pos:position pos:line="296" pos:column="71"/></name></expr></argument>)<pos:position pos:line="296" pos:column="72"/></argument_list></call></expr>;<pos:position pos:line="296" pos:column="73"/></expr_stmt>
                }<pos:position pos:line="297" pos:column="18"/></block>
                <expr_stmt><expr><name><name pos:line="298" pos:column="17">cache<pos:position pos:line="298" pos:column="22"/></name><operator pos:line="298" pos:column="22">-&gt;<pos:position pos:line="298" pos:column="27"/></operator><name pos:line="298" pos:column="24">saved_size<pos:position pos:line="298" pos:column="34"/></name></name> <operator pos:line="298" pos:column="35">+=<pos:position pos:line="298" pos:column="37"/></operator> <name pos:line="298" pos:column="38">size<pos:position pos:line="298" pos:column="42"/></name></expr>;<pos:position pos:line="298" pos:column="43"/></expr_stmt>
                <expr_stmt><expr><call><name pos:line="299" pos:column="17">ap_log_error<pos:position pos:line="299" pos:column="29"/></name><argument_list pos:line="299" pos:column="29">(<argument><expr><name pos:line="299" pos:column="30">APLOG_MARK<pos:position pos:line="299" pos:column="40"/></name></expr></argument>, <argument><expr><name pos:line="299" pos:column="42">APLOG_DEBUG<pos:position pos:line="299" pos:column="53"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="299" pos:column="55">0<pos:position pos:line="299" pos:column="56"/></literal></expr></argument>, <argument><expr><name><name pos:line="299" pos:column="58">r<pos:position pos:line="299" pos:column="59"/></name><operator pos:line="299" pos:column="59">-&gt;<pos:position pos:line="299" pos:column="64"/></operator><name pos:line="299" pos:column="61">server<pos:position pos:line="299" pos:column="67"/></name></name></expr></argument>,
                             <argument><expr><literal type="string" pos:line="300" pos:column="30">"cache: Response length still unknown, setting "<pos:position pos:line="300" pos:column="78"/></literal>
                             <literal type="string" pos:line="301" pos:column="30">"aside content for url: %s"<pos:position pos:line="301" pos:column="57"/></literal></expr></argument>, <argument><expr><name pos:line="301" pos:column="59">url<pos:position pos:line="301" pos:column="62"/></name></expr></argument>)<pos:position pos:line="301" pos:column="63"/></argument_list></call></expr>;<pos:position pos:line="301" pos:column="64"/></expr_stmt>

                <return pos:line="303" pos:column="17">return <expr><call><name pos:line="303" pos:column="24">ap_pass_brigade<pos:position pos:line="303" pos:column="39"/></name><argument_list pos:line="303" pos:column="39">(<argument><expr><name><name pos:line="303" pos:column="40">f<pos:position pos:line="303" pos:column="41"/></name><operator pos:line="303" pos:column="41">-&gt;<pos:position pos:line="303" pos:column="46"/></operator><name pos:line="303" pos:column="43">next<pos:position pos:line="303" pos:column="47"/></name></name></expr></argument>, <argument><expr><name pos:line="303" pos:column="49">in<pos:position pos:line="303" pos:column="51"/></name></expr></argument>)<pos:position pos:line="303" pos:column="52"/></argument_list></call></expr>;<pos:position pos:line="303" pos:column="53"/></return>
            }<pos:position pos:line="304" pos:column="14"/></block></then>
            <else pos:line="305" pos:column="13">else <block pos:line="305" pos:column="18">{
                <comment type="block" pos:line="306" pos:column="17">/* Now that we've seen an EOS, it's appropriate
                 * to try caching the response.  If any content
                 * has been copied into cache-&gt;saved_brigade in
                 * previous passes through this filter, the
                 * content placed in the cache must be the
                 * concatenation of the saved brigade and the
                 * current brigade.
                 */</comment>
                <if pos:line="314" pos:column="17">if <condition pos:line="314" pos:column="20">(<expr><name><name pos:line="314" pos:column="21">cache<pos:position pos:line="314" pos:column="26"/></name><operator pos:line="314" pos:column="26">-&gt;<pos:position pos:line="314" pos:column="31"/></operator><name pos:line="314" pos:column="28">saved_brigade<pos:position pos:line="314" pos:column="41"/></name></name> <operator pos:line="314" pos:column="42">!=<pos:position pos:line="314" pos:column="44"/></operator> <name pos:line="314" pos:column="45">NULL<pos:position pos:line="314" pos:column="49"/></name></expr>)<pos:position pos:line="314" pos:column="50"/></condition><then pos:line="314" pos:column="50"> <block pos:line="314" pos:column="51">{
                    <expr_stmt><expr><name pos:line="315" pos:column="21">split_point<pos:position pos:line="315" pos:column="32"/></name> <operator pos:line="315" pos:column="33">=<pos:position pos:line="315" pos:column="34"/></operator> <call><name pos:line="315" pos:column="35">APR_BRIGADE_FIRST<pos:position pos:line="315" pos:column="52"/></name><argument_list pos:line="315" pos:column="52">(<argument><expr><name pos:line="315" pos:column="53">in<pos:position pos:line="315" pos:column="55"/></name></expr></argument>)<pos:position pos:line="315" pos:column="56"/></argument_list></call></expr>;<pos:position pos:line="315" pos:column="57"/></expr_stmt>
                    <expr_stmt><expr><call><name pos:line="316" pos:column="21">APR_BRIGADE_CONCAT<pos:position pos:line="316" pos:column="39"/></name><argument_list pos:line="316" pos:column="39">(<argument><expr><name><name pos:line="316" pos:column="40">cache<pos:position pos:line="316" pos:column="45"/></name><operator pos:line="316" pos:column="45">-&gt;<pos:position pos:line="316" pos:column="50"/></operator><name pos:line="316" pos:column="47">saved_brigade<pos:position pos:line="316" pos:column="60"/></name></name></expr></argument>, <argument><expr><name pos:line="316" pos:column="62">in<pos:position pos:line="316" pos:column="64"/></name></expr></argument>)<pos:position pos:line="316" pos:column="65"/></argument_list></call></expr>;<pos:position pos:line="316" pos:column="66"/></expr_stmt>
                    <expr_stmt><expr><name pos:line="317" pos:column="21">in<pos:position pos:line="317" pos:column="23"/></name> <operator pos:line="317" pos:column="24">=<pos:position pos:line="317" pos:column="25"/></operator> <name><name pos:line="317" pos:column="26">cache<pos:position pos:line="317" pos:column="31"/></name><operator pos:line="317" pos:column="31">-&gt;<pos:position pos:line="317" pos:column="36"/></operator><name pos:line="317" pos:column="33">saved_brigade<pos:position pos:line="317" pos:column="46"/></name></name></expr>;<pos:position pos:line="317" pos:column="47"/></expr_stmt>
                    <expr_stmt><expr><name pos:line="318" pos:column="21">size<pos:position pos:line="318" pos:column="25"/></name> <operator pos:line="318" pos:column="26">+=<pos:position pos:line="318" pos:column="28"/></operator> <name><name pos:line="318" pos:column="29">cache<pos:position pos:line="318" pos:column="34"/></name><operator pos:line="318" pos:column="34">-&gt;<pos:position pos:line="318" pos:column="39"/></operator><name pos:line="318" pos:column="36">saved_size<pos:position pos:line="318" pos:column="46"/></name></name></expr>;<pos:position pos:line="318" pos:column="47"/></expr_stmt>
                }<pos:position pos:line="319" pos:column="18"/></block></then></if>
            }<pos:position pos:line="320" pos:column="14"/></block></else></if>
        }<pos:position pos:line="321" pos:column="10"/></block></else></if>
    }<pos:position pos:line="322" pos:column="6"/></block>

    <comment type="block" pos:line="324" pos:column="5">/* It's safe to cache the response.
     *
     * There are two possiblities at this point:
     * - cache-&gt;handle == NULL. In this case there is no previously
     * cached entity anywhere on the system. We must create a brand
     * new entity and store the response in it.
     * - cache-&gt;handle != NULL. In this case there is a stale
     * entity in the system which needs to be replaced by new
     * content (unless the result was 304 Not Modified, which means
     * the cached entity is actually fresh, and we should update
     * the headers).
     */</comment>
    <comment type="block" pos:line="336" pos:column="5">/* no cache handle, create a new entity */</comment>
    <if pos:line="337" pos:column="5">if <condition pos:line="337" pos:column="8">(<expr><operator pos:line="337" pos:column="9">!<pos:position pos:line="337" pos:column="10"/></operator><name><name pos:line="337" pos:column="10">cache<pos:position pos:line="337" pos:column="15"/></name><operator pos:line="337" pos:column="15">-&gt;<pos:position pos:line="337" pos:column="20"/></operator><name pos:line="337" pos:column="17">handle<pos:position pos:line="337" pos:column="23"/></name></name></expr>)<pos:position pos:line="337" pos:column="24"/></condition><then pos:line="337" pos:column="24"> <block pos:line="337" pos:column="25">{
        <expr_stmt><expr><name pos:line="338" pos:column="9">rv<pos:position pos:line="338" pos:column="11"/></name> <operator pos:line="338" pos:column="12">=<pos:position pos:line="338" pos:column="13"/></operator> <call><name pos:line="338" pos:column="14">cache_create_entity<pos:position pos:line="338" pos:column="33"/></name><argument_list pos:line="338" pos:column="33">(<argument><expr><name pos:line="338" pos:column="34">r<pos:position pos:line="338" pos:column="35"/></name></expr></argument>, <argument><expr><name><name pos:line="338" pos:column="37">cache<pos:position pos:line="338" pos:column="42"/></name><operator pos:line="338" pos:column="42">-&gt;<pos:position pos:line="338" pos:column="47"/></operator><name pos:line="338" pos:column="44">types<pos:position pos:line="338" pos:column="49"/></name></name></expr></argument>, <argument><expr><name pos:line="338" pos:column="51">url<pos:position pos:line="338" pos:column="54"/></name></expr></argument>, <argument><expr><name pos:line="338" pos:column="56">size<pos:position pos:line="338" pos:column="60"/></name></expr></argument>)<pos:position pos:line="338" pos:column="61"/></argument_list></call></expr>;<pos:position pos:line="338" pos:column="62"/></expr_stmt>
    }<pos:position pos:line="339" pos:column="6"/></block></then>
    <comment type="block" pos:line="340" pos:column="5">/* pre-existing cache handle and 304, make entity fresh */</comment>
    <elseif pos:line="341" pos:column="5">else <if pos:line="341" pos:column="10">if <condition pos:line="341" pos:column="13">(<expr><name><name pos:line="341" pos:column="14">r<pos:position pos:line="341" pos:column="15"/></name><operator pos:line="341" pos:column="15">-&gt;<pos:position pos:line="341" pos:column="20"/></operator><name pos:line="341" pos:column="17">status<pos:position pos:line="341" pos:column="23"/></name></name> <operator pos:line="341" pos:column="24">==<pos:position pos:line="341" pos:column="26"/></operator> <name pos:line="341" pos:column="27">HTTP_NOT_MODIFIED<pos:position pos:line="341" pos:column="44"/></name></expr>)<pos:position pos:line="341" pos:column="45"/></condition><then pos:line="341" pos:column="45"> <block pos:line="341" pos:column="46">{
        <comment type="block" pos:line="342" pos:column="9">/* update headers */</comment>

        <comment type="block" pos:line="344" pos:column="9">/* remove this filter ??? */</comment>

        <comment type="block" pos:line="346" pos:column="9">/* XXX is this right?  we must set rv to something other than OK 
         * in this path
         */</comment>
        <expr_stmt><expr><name pos:line="349" pos:column="9">rv<pos:position pos:line="349" pos:column="11"/></name> <operator pos:line="349" pos:column="12">=<pos:position pos:line="349" pos:column="13"/></operator> <name pos:line="349" pos:column="14">HTTP_NOT_MODIFIED<pos:position pos:line="349" pos:column="31"/></name></expr>;<pos:position pos:line="349" pos:column="32"/></expr_stmt>
    }<pos:position pos:line="350" pos:column="6"/></block></then></if></elseif>
    <comment type="block" pos:line="351" pos:column="5">/* pre-existing cache handle and new entity, replace entity
     * with this one
     */</comment>
    <else pos:line="354" pos:column="5">else <block pos:line="354" pos:column="10">{
        <expr_stmt><expr><call><name pos:line="355" pos:column="9">cache_remove_entity<pos:position pos:line="355" pos:column="28"/></name><argument_list pos:line="355" pos:column="28">(<argument><expr><name pos:line="355" pos:column="29">r<pos:position pos:line="355" pos:column="30"/></name></expr></argument>, <argument><expr><name><name pos:line="355" pos:column="32">cache<pos:position pos:line="355" pos:column="37"/></name><operator pos:line="355" pos:column="37">-&gt;<pos:position pos:line="355" pos:column="42"/></operator><name pos:line="355" pos:column="39">types<pos:position pos:line="355" pos:column="44"/></name></name></expr></argument>, <argument><expr><name><name pos:line="355" pos:column="46">cache<pos:position pos:line="355" pos:column="51"/></name><operator pos:line="355" pos:column="51">-&gt;<pos:position pos:line="355" pos:column="56"/></operator><name pos:line="355" pos:column="53">handle<pos:position pos:line="355" pos:column="59"/></name></name></expr></argument>)<pos:position pos:line="355" pos:column="60"/></argument_list></call></expr>;<pos:position pos:line="355" pos:column="61"/></expr_stmt>
        <expr_stmt><expr><name pos:line="356" pos:column="9">rv<pos:position pos:line="356" pos:column="11"/></name> <operator pos:line="356" pos:column="12">=<pos:position pos:line="356" pos:column="13"/></operator> <call><name pos:line="356" pos:column="14">cache_create_entity<pos:position pos:line="356" pos:column="33"/></name><argument_list pos:line="356" pos:column="33">(<argument><expr><name pos:line="356" pos:column="34">r<pos:position pos:line="356" pos:column="35"/></name></expr></argument>, <argument><expr><name><name pos:line="356" pos:column="37">cache<pos:position pos:line="356" pos:column="42"/></name><operator pos:line="356" pos:column="42">-&gt;<pos:position pos:line="356" pos:column="47"/></operator><name pos:line="356" pos:column="44">types<pos:position pos:line="356" pos:column="49"/></name></name></expr></argument>, <argument><expr><name pos:line="356" pos:column="51">url<pos:position pos:line="356" pos:column="54"/></name></expr></argument>, <argument><expr><name pos:line="356" pos:column="56">size<pos:position pos:line="356" pos:column="60"/></name></expr></argument>)<pos:position pos:line="356" pos:column="61"/></argument_list></call></expr>;<pos:position pos:line="356" pos:column="62"/></expr_stmt>
    }<pos:position pos:line="357" pos:column="6"/></block></else></if>
    
    <if pos:line="359" pos:column="5">if <condition pos:line="359" pos:column="8">(<expr><name pos:line="359" pos:column="9">rv<pos:position pos:line="359" pos:column="11"/></name> <operator pos:line="359" pos:column="12">!=<pos:position pos:line="359" pos:column="14"/></operator> <name pos:line="359" pos:column="15">OK<pos:position pos:line="359" pos:column="17"/></name></expr>)<pos:position pos:line="359" pos:column="18"/></condition><then pos:line="359" pos:column="18"> <block pos:line="359" pos:column="19">{
        <comment type="block" pos:line="360" pos:column="9">/* Caching layer declined the opportunity to cache the response */</comment>
        <expr_stmt><expr><call><name pos:line="361" pos:column="9">ap_remove_output_filter<pos:position pos:line="361" pos:column="32"/></name><argument_list pos:line="361" pos:column="32">(<argument><expr><name pos:line="361" pos:column="33">f<pos:position pos:line="361" pos:column="34"/></name></expr></argument>)<pos:position pos:line="361" pos:column="35"/></argument_list></call></expr>;<pos:position pos:line="361" pos:column="36"/></expr_stmt>
        <if pos:line="362" pos:column="9">if <condition pos:line="362" pos:column="12">(<expr><name pos:line="362" pos:column="13">split_point<pos:position pos:line="362" pos:column="24"/></name></expr>)<pos:position pos:line="362" pos:column="25"/></condition><then pos:line="362" pos:column="25"> <block pos:line="362" pos:column="26">{
            <decl_stmt><decl><type><name pos:line="363" pos:column="13">apr_bucket_brigade<pos:position pos:line="363" pos:column="31"/></name> <modifier pos:line="363" pos:column="32">*<pos:position pos:line="363" pos:column="33"/></modifier></type><name pos:line="363" pos:column="33">already_sent<pos:position pos:line="363" pos:column="45"/></name> <init pos:line="363" pos:column="46">= <expr><name pos:line="363" pos:column="48">in<pos:position pos:line="363" pos:column="50"/></name></expr></init></decl>;<pos:position pos:line="363" pos:column="51"/></decl_stmt>
            <expr_stmt><expr><name pos:line="364" pos:column="13">in<pos:position pos:line="364" pos:column="15"/></name> <operator pos:line="364" pos:column="16">=<pos:position pos:line="364" pos:column="17"/></operator> <call><name pos:line="364" pos:column="18">apr_brigade_split<pos:position pos:line="364" pos:column="35"/></name><argument_list pos:line="364" pos:column="35">(<argument><expr><name pos:line="364" pos:column="36">in<pos:position pos:line="364" pos:column="38"/></name></expr></argument>, <argument><expr><name pos:line="364" pos:column="40">split_point<pos:position pos:line="364" pos:column="51"/></name></expr></argument>)<pos:position pos:line="364" pos:column="52"/></argument_list></call></expr>;<pos:position pos:line="364" pos:column="53"/></expr_stmt>
            <expr_stmt><expr><call><name pos:line="365" pos:column="13">apr_brigade_destroy<pos:position pos:line="365" pos:column="32"/></name><argument_list pos:line="365" pos:column="32">(<argument><expr><name pos:line="365" pos:column="33">already_sent<pos:position pos:line="365" pos:column="45"/></name></expr></argument>)<pos:position pos:line="365" pos:column="46"/></argument_list></call></expr>;<pos:position pos:line="365" pos:column="47"/></expr_stmt>
        }<pos:position pos:line="366" pos:column="10"/></block></then></if>
        <return pos:line="367" pos:column="9">return <expr><call><name pos:line="367" pos:column="16">ap_pass_brigade<pos:position pos:line="367" pos:column="31"/></name><argument_list pos:line="367" pos:column="31">(<argument><expr><name><name pos:line="367" pos:column="32">f<pos:position pos:line="367" pos:column="33"/></name><operator pos:line="367" pos:column="33">-&gt;<pos:position pos:line="367" pos:column="38"/></operator><name pos:line="367" pos:column="35">next<pos:position pos:line="367" pos:column="39"/></name></name></expr></argument>, <argument><expr><name pos:line="367" pos:column="41">in<pos:position pos:line="367" pos:column="43"/></name></expr></argument>)<pos:position pos:line="367" pos:column="44"/></argument_list></call></expr>;<pos:position pos:line="367" pos:column="45"/></return>
    }<pos:position pos:line="368" pos:column="6"/></block></then></if>

    <expr_stmt><expr><call><name pos:line="370" pos:column="5">ap_log_error<pos:position pos:line="370" pos:column="17"/></name><argument_list pos:line="370" pos:column="17">(<argument><expr><name pos:line="370" pos:column="18">APLOG_MARK<pos:position pos:line="370" pos:column="28"/></name></expr></argument>, <argument><expr><name pos:line="370" pos:column="30">APLOG_DEBUG<pos:position pos:line="370" pos:column="41"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="370" pos:column="43">0<pos:position pos:line="370" pos:column="44"/></literal></expr></argument>, <argument><expr><name><name pos:line="370" pos:column="46">r<pos:position pos:line="370" pos:column="47"/></name><operator pos:line="370" pos:column="47">-&gt;<pos:position pos:line="370" pos:column="52"/></operator><name pos:line="370" pos:column="49">server<pos:position pos:line="370" pos:column="55"/></name></name></expr></argument>,
                 <argument><expr><literal type="string" pos:line="371" pos:column="18">"cache: Caching url: %s"<pos:position pos:line="371" pos:column="42"/></literal></expr></argument>, <argument><expr><name pos:line="371" pos:column="44">url<pos:position pos:line="371" pos:column="47"/></name></expr></argument>)<pos:position pos:line="371" pos:column="48"/></argument_list></call></expr>;<pos:position pos:line="371" pos:column="49"/></expr_stmt>

    <comment type="block" pos:line="373" pos:column="5">/*
     * We now want to update the cache file header information with
     * the new date, last modified, expire and content length and write
     * it away to our cache file. First, we determine these values from
     * the response, using heuristics if appropriate.
     *
     * In addition, we make HTTP/1.1 age calculations and write them away
     * too.
     */</comment>

    <comment type="block" pos:line="383" pos:column="5">/* Read the date. Generate one if one is not supplied */</comment>
    <expr_stmt><expr><name pos:line="384" pos:column="5">dates<pos:position pos:line="384" pos:column="10"/></name> <operator pos:line="384" pos:column="11">=<pos:position pos:line="384" pos:column="12"/></operator> <call><name pos:line="384" pos:column="13">apr_table_get<pos:position pos:line="384" pos:column="26"/></name><argument_list pos:line="384" pos:column="26">(<argument><expr><name><name pos:line="384" pos:column="27">r<pos:position pos:line="384" pos:column="28"/></name><operator pos:line="384" pos:column="28">-&gt;<pos:position pos:line="384" pos:column="33"/></operator><name pos:line="384" pos:column="30">headers_out<pos:position pos:line="384" pos:column="41"/></name></name></expr></argument>, <argument><expr><literal type="string" pos:line="384" pos:column="43">"Date"<pos:position pos:line="384" pos:column="49"/></literal></expr></argument>)<pos:position pos:line="384" pos:column="50"/></argument_list></call></expr>;<pos:position pos:line="384" pos:column="51"/></expr_stmt>
    <if pos:line="385" pos:column="5">if <condition pos:line="385" pos:column="8">(<expr><name pos:line="385" pos:column="9">dates<pos:position pos:line="385" pos:column="14"/></name> <operator pos:line="385" pos:column="15">!=<pos:position pos:line="385" pos:column="17"/></operator> <name pos:line="385" pos:column="18">NULL<pos:position pos:line="385" pos:column="22"/></name></expr>)<pos:position pos:line="385" pos:column="23"/></condition><then pos:line="385" pos:column="23"> <block pos:line="385" pos:column="24">{
        <expr_stmt><expr><name><name pos:line="386" pos:column="9">info<pos:position pos:line="386" pos:column="13"/></name><operator pos:line="386" pos:column="13">-&gt;<pos:position pos:line="386" pos:column="18"/></operator><name pos:line="386" pos:column="15">date<pos:position pos:line="386" pos:column="19"/></name></name> <operator pos:line="386" pos:column="20">=<pos:position pos:line="386" pos:column="21"/></operator> <call><name pos:line="386" pos:column="22">apr_date_parse_http<pos:position pos:line="386" pos:column="41"/></name><argument_list pos:line="386" pos:column="41">(<argument><expr><name pos:line="386" pos:column="42">dates<pos:position pos:line="386" pos:column="47"/></name></expr></argument>)<pos:position pos:line="386" pos:column="48"/></argument_list></call></expr>;<pos:position pos:line="386" pos:column="49"/></expr_stmt>
    }<pos:position pos:line="387" pos:column="6"/></block></then>
    <else pos:line="388" pos:column="5">else <block pos:line="388" pos:column="10">{
        <expr_stmt><expr><name><name pos:line="389" pos:column="9">info<pos:position pos:line="389" pos:column="13"/></name><operator pos:line="389" pos:column="13">-&gt;<pos:position pos:line="389" pos:column="18"/></operator><name pos:line="389" pos:column="15">date<pos:position pos:line="389" pos:column="19"/></name></name> <operator pos:line="389" pos:column="20">=<pos:position pos:line="389" pos:column="21"/></operator> <name pos:line="389" pos:column="22">APR_DATE_BAD<pos:position pos:line="389" pos:column="34"/></name></expr>;<pos:position pos:line="389" pos:column="35"/></expr_stmt>
    }<pos:position pos:line="390" pos:column="6"/></block></else></if>

    <expr_stmt><expr><name pos:line="392" pos:column="5">now<pos:position pos:line="392" pos:column="8"/></name> <operator pos:line="392" pos:column="9">=<pos:position pos:line="392" pos:column="10"/></operator> <call><name pos:line="392" pos:column="11">apr_time_now<pos:position pos:line="392" pos:column="23"/></name><argument_list pos:line="392" pos:column="23">()<pos:position pos:line="392" pos:column="25"/></argument_list></call></expr>;<pos:position pos:line="392" pos:column="26"/></expr_stmt>
    <if pos:line="393" pos:column="5">if <condition pos:line="393" pos:column="8">(<expr><name><name pos:line="393" pos:column="9">info<pos:position pos:line="393" pos:column="13"/></name><operator pos:line="393" pos:column="13">-&gt;<pos:position pos:line="393" pos:column="18"/></operator><name pos:line="393" pos:column="15">date<pos:position pos:line="393" pos:column="19"/></name></name> <operator pos:line="393" pos:column="20">==<pos:position pos:line="393" pos:column="22"/></operator> <name pos:line="393" pos:column="23">APR_DATE_BAD<pos:position pos:line="393" pos:column="35"/></name></expr>)<pos:position pos:line="393" pos:column="36"/></condition><then pos:line="393" pos:column="36"> <block pos:line="393" pos:column="37">{  <comment type="block" pos:line="393" pos:column="40">/* No, or bad date */</comment>
        <decl_stmt><decl><type><name pos:line="394" pos:column="9">char<pos:position pos:line="394" pos:column="13"/></name> <modifier pos:line="394" pos:column="14">*<pos:position pos:line="394" pos:column="15"/></modifier></type><name pos:line="394" pos:column="15">dates<pos:position pos:line="394" pos:column="20"/></name></decl>;<pos:position pos:line="394" pos:column="21"/></decl_stmt>
        <comment type="block" pos:line="395" pos:column="9">/* no date header! */</comment>
        <comment type="block" pos:line="396" pos:column="9">/* add one; N.B. use the time _now_ rather than when we were checking
         * the cache 
         */</comment>
        <expr_stmt><expr><name pos:line="399" pos:column="9">date<pos:position pos:line="399" pos:column="13"/></name> <operator pos:line="399" pos:column="14">=<pos:position pos:line="399" pos:column="15"/></operator> <name pos:line="399" pos:column="16">now<pos:position pos:line="399" pos:column="19"/></name></expr>;<pos:position pos:line="399" pos:column="20"/></expr_stmt>
        <expr_stmt><expr><name pos:line="400" pos:column="9">dates<pos:position pos:line="400" pos:column="14"/></name> <operator pos:line="400" pos:column="15">=<pos:position pos:line="400" pos:column="16"/></operator> <call><name pos:line="400" pos:column="17">apr_pcalloc<pos:position pos:line="400" pos:column="28"/></name><argument_list pos:line="400" pos:column="28">(<argument><expr><name><name pos:line="400" pos:column="29">r<pos:position pos:line="400" pos:column="30"/></name><operator pos:line="400" pos:column="30">-&gt;<pos:position pos:line="400" pos:column="35"/></operator><name pos:line="400" pos:column="32">pool<pos:position pos:line="400" pos:column="36"/></name></name></expr></argument>, <argument><expr><name pos:line="400" pos:column="38">MAX_STRING_LEN<pos:position pos:line="400" pos:column="52"/></name></expr></argument>)<pos:position pos:line="400" pos:column="53"/></argument_list></call></expr>;<pos:position pos:line="400" pos:column="54"/></expr_stmt>
        <expr_stmt><expr><call><name pos:line="401" pos:column="9">apr_rfc822_date<pos:position pos:line="401" pos:column="24"/></name><argument_list pos:line="401" pos:column="24">(<argument><expr><name pos:line="401" pos:column="25">dates<pos:position pos:line="401" pos:column="30"/></name></expr></argument>, <argument><expr><name pos:line="401" pos:column="32">now<pos:position pos:line="401" pos:column="35"/></name></expr></argument>)<pos:position pos:line="401" pos:column="36"/></argument_list></call></expr>;<pos:position pos:line="401" pos:column="37"/></expr_stmt>
        <expr_stmt><expr><call><name pos:line="402" pos:column="9">apr_table_set<pos:position pos:line="402" pos:column="22"/></name><argument_list pos:line="402" pos:column="22">(<argument><expr><name><name pos:line="402" pos:column="23">r<pos:position pos:line="402" pos:column="24"/></name><operator pos:line="402" pos:column="24">-&gt;<pos:position pos:line="402" pos:column="29"/></operator><name pos:line="402" pos:column="26">headers_out<pos:position pos:line="402" pos:column="37"/></name></name></expr></argument>, <argument><expr><literal type="string" pos:line="402" pos:column="39">"Date"<pos:position pos:line="402" pos:column="45"/></literal></expr></argument>, <argument><expr><name pos:line="402" pos:column="47">dates<pos:position pos:line="402" pos:column="52"/></name></expr></argument>)<pos:position pos:line="402" pos:column="53"/></argument_list></call></expr>;<pos:position pos:line="402" pos:column="54"/></expr_stmt>
        <expr_stmt><expr><call><name pos:line="403" pos:column="9">ap_log_error<pos:position pos:line="403" pos:column="21"/></name><argument_list pos:line="403" pos:column="21">(<argument><expr><name pos:line="403" pos:column="22">APLOG_MARK<pos:position pos:line="403" pos:column="32"/></name></expr></argument>, <argument><expr><name pos:line="403" pos:column="34">APLOG_DEBUG<pos:position pos:line="403" pos:column="45"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="403" pos:column="47">0<pos:position pos:line="403" pos:column="48"/></literal></expr></argument>, <argument><expr><name><name pos:line="403" pos:column="50">r<pos:position pos:line="403" pos:column="51"/></name><operator pos:line="403" pos:column="51">-&gt;<pos:position pos:line="403" pos:column="56"/></operator><name pos:line="403" pos:column="53">server<pos:position pos:line="403" pos:column="59"/></name></name></expr></argument>,
                     <argument><expr><literal type="string" pos:line="404" pos:column="22">"cache: Added date header"<pos:position pos:line="404" pos:column="48"/></literal></expr></argument>)<pos:position pos:line="404" pos:column="49"/></argument_list></call></expr>;<pos:position pos:line="404" pos:column="50"/></expr_stmt>
        <expr_stmt><expr><name><name pos:line="405" pos:column="9">info<pos:position pos:line="405" pos:column="13"/></name><operator pos:line="405" pos:column="13">-&gt;<pos:position pos:line="405" pos:column="18"/></operator><name pos:line="405" pos:column="15">date<pos:position pos:line="405" pos:column="19"/></name></name> <operator pos:line="405" pos:column="20">=<pos:position pos:line="405" pos:column="21"/></operator> <name pos:line="405" pos:column="22">date<pos:position pos:line="405" pos:column="26"/></name></expr>;<pos:position pos:line="405" pos:column="27"/></expr_stmt>
    }<pos:position pos:line="406" pos:column="6"/></block></then>
    <else pos:line="407" pos:column="5">else <block pos:line="407" pos:column="10">{
        <expr_stmt><expr><name pos:line="408" pos:column="9">date<pos:position pos:line="408" pos:column="13"/></name> <operator pos:line="408" pos:column="14">=<pos:position pos:line="408" pos:column="15"/></operator> <name><name pos:line="408" pos:column="16">info<pos:position pos:line="408" pos:column="20"/></name><operator pos:line="408" pos:column="20">-&gt;<pos:position pos:line="408" pos:column="25"/></operator><name pos:line="408" pos:column="22">date<pos:position pos:line="408" pos:column="26"/></name></name></expr>;<pos:position pos:line="408" pos:column="27"/></expr_stmt>
    }<pos:position pos:line="409" pos:column="6"/></block></else></if>

    <comment type="block" pos:line="411" pos:column="5">/* set response_time for HTTP/1.1 age calculations */</comment>
    <expr_stmt><expr><name><name pos:line="412" pos:column="5">info<pos:position pos:line="412" pos:column="9"/></name><operator pos:line="412" pos:column="9">-&gt;<pos:position pos:line="412" pos:column="14"/></operator><name pos:line="412" pos:column="11">response_time<pos:position pos:line="412" pos:column="24"/></name></name> <operator pos:line="412" pos:column="25">=<pos:position pos:line="412" pos:column="26"/></operator> <name pos:line="412" pos:column="27">now<pos:position pos:line="412" pos:column="30"/></name></expr>;<pos:position pos:line="412" pos:column="31"/></expr_stmt>

    <comment type="block" pos:line="414" pos:column="5">/* get the request time */</comment>
    <expr_stmt><expr><name><name pos:line="415" pos:column="5">info<pos:position pos:line="415" pos:column="9"/></name><operator pos:line="415" pos:column="9">-&gt;<pos:position pos:line="415" pos:column="14"/></operator><name pos:line="415" pos:column="11">request_time<pos:position pos:line="415" pos:column="23"/></name></name> <operator pos:line="415" pos:column="24">=<pos:position pos:line="415" pos:column="25"/></operator> <name><name pos:line="415" pos:column="26">r<pos:position pos:line="415" pos:column="27"/></name><operator pos:line="415" pos:column="27">-&gt;<pos:position pos:line="415" pos:column="32"/></operator><name pos:line="415" pos:column="29">request_time<pos:position pos:line="415" pos:column="41"/></name></name></expr>;<pos:position pos:line="415" pos:column="42"/></expr_stmt>

    <comment type="block" pos:line="417" pos:column="5">/* check last-modified date */</comment>
    <comment type="block" pos:line="418" pos:column="5">/* XXX FIXME we're referencing date on a path where we didn't set it */</comment>
    <if pos:line="419" pos:column="5">if <condition pos:line="419" pos:column="8">(<expr><name pos:line="419" pos:column="9">lastmod<pos:position pos:line="419" pos:column="16"/></name> <operator pos:line="419" pos:column="17">!=<pos:position pos:line="419" pos:column="19"/></operator> <name pos:line="419" pos:column="20">APR_DATE_BAD<pos:position pos:line="419" pos:column="32"/></name> <operator pos:line="419" pos:column="33">&amp;&amp;<pos:position pos:line="419" pos:column="43"/></operator> <name pos:line="419" pos:column="36">lastmod<pos:position pos:line="419" pos:column="43"/></name> <operator pos:line="419" pos:column="44">&gt;<pos:position pos:line="419" pos:column="48"/></operator> <name pos:line="419" pos:column="46">date<pos:position pos:line="419" pos:column="50"/></name></expr>)<pos:position pos:line="419" pos:column="51"/></condition><then pos:line="419" pos:column="51"> <block pos:line="419" pos:column="52">{
        <comment type="block" pos:line="420" pos:column="9">/* if it's in the future, then replace by date */</comment>
        <expr_stmt><expr><name pos:line="421" pos:column="9">lastmod<pos:position pos:line="421" pos:column="16"/></name> <operator pos:line="421" pos:column="17">=<pos:position pos:line="421" pos:column="18"/></operator> <name pos:line="421" pos:column="19">date<pos:position pos:line="421" pos:column="23"/></name></expr>;<pos:position pos:line="421" pos:column="24"/></expr_stmt>
        <expr_stmt><expr><name pos:line="422" pos:column="9">lastmods<pos:position pos:line="422" pos:column="17"/></name> <operator pos:line="422" pos:column="18">=<pos:position pos:line="422" pos:column="19"/></operator> <name pos:line="422" pos:column="20">dates<pos:position pos:line="422" pos:column="25"/></name></expr>;<pos:position pos:line="422" pos:column="26"/></expr_stmt>
        <expr_stmt><expr><call><name pos:line="423" pos:column="9">ap_log_error<pos:position pos:line="423" pos:column="21"/></name><argument_list pos:line="423" pos:column="21">(<argument><expr><name pos:line="423" pos:column="22">APLOG_MARK<pos:position pos:line="423" pos:column="32"/></name></expr></argument>, <argument><expr><name pos:line="423" pos:column="34">APLOG_DEBUG<pos:position pos:line="423" pos:column="45"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="423" pos:column="47">0<pos:position pos:line="423" pos:column="48"/></literal></expr></argument>, 
                     <argument><expr><name><name pos:line="424" pos:column="22">r<pos:position pos:line="424" pos:column="23"/></name><operator pos:line="424" pos:column="23">-&gt;<pos:position pos:line="424" pos:column="28"/></operator><name pos:line="424" pos:column="25">server<pos:position pos:line="424" pos:column="31"/></name></name></expr></argument>,
                     <argument><expr><literal type="string" pos:line="425" pos:column="22">"cache: Last modified is in the future, "<pos:position pos:line="425" pos:column="63"/></literal>
                     <literal type="string" pos:line="426" pos:column="22">"replacing with now"<pos:position pos:line="426" pos:column="42"/></literal></expr></argument>)<pos:position pos:line="426" pos:column="43"/></argument_list></call></expr>;<pos:position pos:line="426" pos:column="44"/></expr_stmt>
    }<pos:position pos:line="427" pos:column="6"/></block></then></if>
    <expr_stmt><expr><name><name pos:line="428" pos:column="5">info<pos:position pos:line="428" pos:column="9"/></name><operator pos:line="428" pos:column="9">-&gt;<pos:position pos:line="428" pos:column="14"/></operator><name pos:line="428" pos:column="11">lastmod<pos:position pos:line="428" pos:column="18"/></name></name> <operator pos:line="428" pos:column="19">=<pos:position pos:line="428" pos:column="20"/></operator> <name pos:line="428" pos:column="21">lastmod<pos:position pos:line="428" pos:column="28"/></name></expr>;<pos:position pos:line="428" pos:column="29"/></expr_stmt>

    <comment type="block" pos:line="430" pos:column="5">/* if no expiry date then
     *   if lastmod
     *      expiry date = now + min((date - lastmod) * factor, maxexpire)
     *   else
     *      expire date = now + defaultexpire
     */</comment>
    <if pos:line="436" pos:column="5">if <condition pos:line="436" pos:column="8">(<expr><name pos:line="436" pos:column="9">exp<pos:position pos:line="436" pos:column="12"/></name> <operator pos:line="436" pos:column="13">==<pos:position pos:line="436" pos:column="15"/></operator> <name pos:line="436" pos:column="16">APR_DATE_BAD<pos:position pos:line="436" pos:column="28"/></name></expr>)<pos:position pos:line="436" pos:column="29"/></condition><then pos:line="436" pos:column="29"> <block pos:line="436" pos:column="30">{
        <if pos:line="437" pos:column="9">if <condition pos:line="437" pos:column="12">(<expr><name pos:line="437" pos:column="13">lastmod<pos:position pos:line="437" pos:column="20"/></name> <operator pos:line="437" pos:column="21">!=<pos:position pos:line="437" pos:column="23"/></operator> <name pos:line="437" pos:column="24">APR_DATE_BAD<pos:position pos:line="437" pos:column="36"/></name></expr>)<pos:position pos:line="437" pos:column="37"/></condition><then pos:line="437" pos:column="37"> <block pos:line="437" pos:column="38">{
            <decl_stmt><decl><type><name pos:line="438" pos:column="13">apr_time_t<pos:position pos:line="438" pos:column="23"/></name></type> <name pos:line="438" pos:column="24">x<pos:position pos:line="438" pos:column="25"/></name> <init pos:line="438" pos:column="26">= <expr><call pos:line="438" pos:column="28">(<name pos:line="438" pos:column="29">apr_time_t<pos:position pos:line="438" pos:column="39"/></name>) <argument_list pos:line="438" pos:column="41">(<argument><expr><operator pos:line="438" pos:column="42">(<pos:position pos:line="438" pos:column="43"/></operator><name pos:line="438" pos:column="43">date<pos:position pos:line="438" pos:column="47"/></name> <operator pos:line="438" pos:column="48">-<pos:position pos:line="438" pos:column="49"/></operator> <name pos:line="438" pos:column="50">lastmod<pos:position pos:line="438" pos:column="57"/></name><operator pos:line="438" pos:column="57">)<pos:position pos:line="438" pos:column="58"/></operator> <operator pos:line="438" pos:column="59">*<pos:position pos:line="438" pos:column="60"/></operator> <name><name pos:line="438" pos:column="61">conf<pos:position pos:line="438" pos:column="65"/></name><operator pos:line="438" pos:column="65">-&gt;<pos:position pos:line="438" pos:column="70"/></operator><name pos:line="438" pos:column="67">factor<pos:position pos:line="438" pos:column="73"/></name></name></expr></argument>)<pos:position pos:line="438" pos:column="74"/></argument_list></call></expr></init></decl>;<pos:position pos:line="438" pos:column="75"/></decl_stmt>
            <if pos:line="439" pos:column="13">if <condition pos:line="439" pos:column="16">(<expr><name pos:line="439" pos:column="17">x<pos:position pos:line="439" pos:column="18"/></name> <operator pos:line="439" pos:column="19">&gt;<pos:position pos:line="439" pos:column="23"/></operator> <name><name pos:line="439" pos:column="21">conf<pos:position pos:line="439" pos:column="25"/></name><operator pos:line="439" pos:column="25">-&gt;<pos:position pos:line="439" pos:column="30"/></operator><name pos:line="439" pos:column="27">maxex<pos:position pos:line="439" pos:column="32"/></name></name></expr>)<pos:position pos:line="439" pos:column="33"/></condition><then pos:line="439" pos:column="33"> <block pos:line="439" pos:column="34">{
                <expr_stmt><expr><name pos:line="440" pos:column="17">x<pos:position pos:line="440" pos:column="18"/></name> <operator pos:line="440" pos:column="19">=<pos:position pos:line="440" pos:column="20"/></operator> <name><name pos:line="440" pos:column="21">conf<pos:position pos:line="440" pos:column="25"/></name><operator pos:line="440" pos:column="25">-&gt;<pos:position pos:line="440" pos:column="30"/></operator><name pos:line="440" pos:column="27">maxex<pos:position pos:line="440" pos:column="32"/></name></name></expr>;<pos:position pos:line="440" pos:column="33"/></expr_stmt>
            }<pos:position pos:line="441" pos:column="14"/></block></then></if>
            <expr_stmt><expr><name pos:line="442" pos:column="13">exp<pos:position pos:line="442" pos:column="16"/></name> <operator pos:line="442" pos:column="17">=<pos:position pos:line="442" pos:column="18"/></operator> <name pos:line="442" pos:column="19">now<pos:position pos:line="442" pos:column="22"/></name> <operator pos:line="442" pos:column="23">+<pos:position pos:line="442" pos:column="24"/></operator> <name pos:line="442" pos:column="25">x<pos:position pos:line="442" pos:column="26"/></name></expr>;<pos:position pos:line="442" pos:column="27"/></expr_stmt>
        }<pos:position pos:line="443" pos:column="10"/></block></then>
        <else pos:line="444" pos:column="9">else <block pos:line="444" pos:column="14">{
            <expr_stmt><expr><name pos:line="445" pos:column="13">exp<pos:position pos:line="445" pos:column="16"/></name> <operator pos:line="445" pos:column="17">=<pos:position pos:line="445" pos:column="18"/></operator> <name pos:line="445" pos:column="19">now<pos:position pos:line="445" pos:column="22"/></name> <operator pos:line="445" pos:column="23">+<pos:position pos:line="445" pos:column="24"/></operator> <name><name pos:line="445" pos:column="25">conf<pos:position pos:line="445" pos:column="29"/></name><operator pos:line="445" pos:column="29">-&gt;<pos:position pos:line="445" pos:column="34"/></operator><name pos:line="445" pos:column="31">defex<pos:position pos:line="445" pos:column="36"/></name></name></expr>;<pos:position pos:line="445" pos:column="37"/></expr_stmt>
        }<pos:position pos:line="446" pos:column="10"/></block></else></if>
    }<pos:position pos:line="447" pos:column="6"/></block></then></if>
    <expr_stmt><expr><name><name pos:line="448" pos:column="5">info<pos:position pos:line="448" pos:column="9"/></name><operator pos:line="448" pos:column="9">-&gt;<pos:position pos:line="448" pos:column="14"/></operator><name pos:line="448" pos:column="11">expire<pos:position pos:line="448" pos:column="17"/></name></name> <operator pos:line="448" pos:column="18">=<pos:position pos:line="448" pos:column="19"/></operator> <name pos:line="448" pos:column="20">exp<pos:position pos:line="448" pos:column="23"/></name></expr>;<pos:position pos:line="448" pos:column="24"/></expr_stmt>

    <expr_stmt><expr><name><name pos:line="450" pos:column="5">info<pos:position pos:line="450" pos:column="9"/></name><operator pos:line="450" pos:column="9">-&gt;<pos:position pos:line="450" pos:column="14"/></operator><name pos:line="450" pos:column="11">content_type<pos:position pos:line="450" pos:column="23"/></name></name> <operator pos:line="450" pos:column="24">=<pos:position pos:line="450" pos:column="25"/></operator> <call><name pos:line="450" pos:column="26">apr_pstrdup<pos:position pos:line="450" pos:column="37"/></name><argument_list pos:line="450" pos:column="37">(<argument><expr><name><name pos:line="450" pos:column="38">r<pos:position pos:line="450" pos:column="39"/></name><operator pos:line="450" pos:column="39">-&gt;<pos:position pos:line="450" pos:column="44"/></operator><name pos:line="450" pos:column="41">pool<pos:position pos:line="450" pos:column="45"/></name></name></expr></argument>, <argument><expr><name><name pos:line="450" pos:column="47">r<pos:position pos:line="450" pos:column="48"/></name><operator pos:line="450" pos:column="48">-&gt;<pos:position pos:line="450" pos:column="53"/></operator><name pos:line="450" pos:column="50">content_type<pos:position pos:line="450" pos:column="62"/></name></name></expr></argument>)<pos:position pos:line="450" pos:column="63"/></argument_list></call></expr>;<pos:position pos:line="450" pos:column="64"/></expr_stmt>
    <expr_stmt><expr><name><name pos:line="451" pos:column="5">info<pos:position pos:line="451" pos:column="9"/></name><operator pos:line="451" pos:column="9">-&gt;<pos:position pos:line="451" pos:column="14"/></operator><name pos:line="451" pos:column="11">filename<pos:position pos:line="451" pos:column="19"/></name></name> <operator pos:line="451" pos:column="20">=<pos:position pos:line="451" pos:column="21"/></operator> <call><name pos:line="451" pos:column="22">apr_pstrdup<pos:position pos:line="451" pos:column="33"/></name><argument_list pos:line="451" pos:column="33">(<argument><expr><name><name pos:line="451" pos:column="34">r<pos:position pos:line="451" pos:column="35"/></name><operator pos:line="451" pos:column="35">-&gt;<pos:position pos:line="451" pos:column="40"/></operator><name pos:line="451" pos:column="37">pool<pos:position pos:line="451" pos:column="41"/></name></name></expr></argument>, <argument><expr><name><name pos:line="451" pos:column="43">r<pos:position pos:line="451" pos:column="44"/></name><operator pos:line="451" pos:column="44">-&gt;<pos:position pos:line="451" pos:column="49"/></operator><name pos:line="451" pos:column="46">filename<pos:position pos:line="451" pos:column="54"/></name></name></expr></argument> )<pos:position pos:line="451" pos:column="56"/></argument_list></call></expr>;<pos:position pos:line="451" pos:column="57"/></expr_stmt>

    <comment type="block" pos:line="453" pos:column="5">/*
     * Write away header information to cache.
     */</comment>
    <expr_stmt><expr><name pos:line="456" pos:column="5">rv<pos:position pos:line="456" pos:column="7"/></name> <operator pos:line="456" pos:column="8">=<pos:position pos:line="456" pos:column="9"/></operator> <call><name pos:line="456" pos:column="10">cache_write_entity_headers<pos:position pos:line="456" pos:column="36"/></name><argument_list pos:line="456" pos:column="36">(<argument><expr><name><name pos:line="456" pos:column="37">cache<pos:position pos:line="456" pos:column="42"/></name><operator pos:line="456" pos:column="42">-&gt;<pos:position pos:line="456" pos:column="47"/></operator><name pos:line="456" pos:column="44">handle<pos:position pos:line="456" pos:column="50"/></name></name></expr></argument>, <argument><expr><name pos:line="456" pos:column="52">r<pos:position pos:line="456" pos:column="53"/></name></expr></argument>, <argument><expr><name pos:line="456" pos:column="55">info<pos:position pos:line="456" pos:column="59"/></name></expr></argument>)<pos:position pos:line="456" pos:column="60"/></argument_list></call></expr>;<pos:position pos:line="456" pos:column="61"/></expr_stmt>
    <if pos:line="457" pos:column="5">if <condition pos:line="457" pos:column="8">(<expr><name pos:line="457" pos:column="9">rv<pos:position pos:line="457" pos:column="11"/></name> <operator pos:line="457" pos:column="12">==<pos:position pos:line="457" pos:column="14"/></operator> <name pos:line="457" pos:column="15">APR_SUCCESS<pos:position pos:line="457" pos:column="26"/></name></expr>)<pos:position pos:line="457" pos:column="27"/></condition><then pos:line="457" pos:column="27"> <block pos:line="457" pos:column="28">{
        <expr_stmt><expr><name pos:line="458" pos:column="9">rv<pos:position pos:line="458" pos:column="11"/></name> <operator pos:line="458" pos:column="12">=<pos:position pos:line="458" pos:column="13"/></operator> <call><name pos:line="458" pos:column="14">cache_write_entity_body<pos:position pos:line="458" pos:column="37"/></name><argument_list pos:line="458" pos:column="37">(<argument><expr><name><name pos:line="458" pos:column="38">cache<pos:position pos:line="458" pos:column="43"/></name><operator pos:line="458" pos:column="43">-&gt;<pos:position pos:line="458" pos:column="48"/></operator><name pos:line="458" pos:column="45">handle<pos:position pos:line="458" pos:column="51"/></name></name></expr></argument>, <argument><expr><name pos:line="458" pos:column="53">r<pos:position pos:line="458" pos:column="54"/></name></expr></argument>, <argument><expr><name pos:line="458" pos:column="56">in<pos:position pos:line="458" pos:column="58"/></name></expr></argument>)<pos:position pos:line="458" pos:column="59"/></argument_list></call></expr>;<pos:position pos:line="458" pos:column="60"/></expr_stmt>
    }<pos:position pos:line="459" pos:column="6"/></block></then></if>
    <if pos:line="460" pos:column="5">if <condition pos:line="460" pos:column="8">(<expr><name pos:line="460" pos:column="9">rv<pos:position pos:line="460" pos:column="11"/></name> <operator pos:line="460" pos:column="12">!=<pos:position pos:line="460" pos:column="14"/></operator> <name pos:line="460" pos:column="15">APR_SUCCESS<pos:position pos:line="460" pos:column="26"/></name></expr>)<pos:position pos:line="460" pos:column="27"/></condition><then pos:line="460" pos:column="27"> <block pos:line="460" pos:column="28">{
        <expr_stmt><expr><call><name pos:line="461" pos:column="9">ap_remove_output_filter<pos:position pos:line="461" pos:column="32"/></name><argument_list pos:line="461" pos:column="32">(<argument><expr><name pos:line="461" pos:column="33">f<pos:position pos:line="461" pos:column="34"/></name></expr></argument>)<pos:position pos:line="461" pos:column="35"/></argument_list></call></expr>;<pos:position pos:line="461" pos:column="36"/></expr_stmt>
    }<pos:position pos:line="462" pos:column="6"/></block></then></if>
    <if pos:line="463" pos:column="5">if <condition pos:line="463" pos:column="8">(<expr><name pos:line="463" pos:column="9">split_point<pos:position pos:line="463" pos:column="20"/></name></expr>)<pos:position pos:line="463" pos:column="21"/></condition><then pos:line="463" pos:column="21"> <block pos:line="463" pos:column="22">{
        <decl_stmt><decl><type><name pos:line="464" pos:column="9">apr_bucket_brigade<pos:position pos:line="464" pos:column="27"/></name> <modifier pos:line="464" pos:column="28">*<pos:position pos:line="464" pos:column="29"/></modifier></type><name pos:line="464" pos:column="29">already_sent<pos:position pos:line="464" pos:column="41"/></name> <init pos:line="464" pos:column="42">= <expr><name pos:line="464" pos:column="44">in<pos:position pos:line="464" pos:column="46"/></name></expr></init></decl>;<pos:position pos:line="464" pos:column="47"/></decl_stmt>
        <expr_stmt><expr><name pos:line="465" pos:column="9">in<pos:position pos:line="465" pos:column="11"/></name> <operator pos:line="465" pos:column="12">=<pos:position pos:line="465" pos:column="13"/></operator> <call><name pos:line="465" pos:column="14">apr_brigade_split<pos:position pos:line="465" pos:column="31"/></name><argument_list pos:line="465" pos:column="31">(<argument><expr><name pos:line="465" pos:column="32">in<pos:position pos:line="465" pos:column="34"/></name></expr></argument>, <argument><expr><name pos:line="465" pos:column="36">split_point<pos:position pos:line="465" pos:column="47"/></name></expr></argument>)<pos:position pos:line="465" pos:column="48"/></argument_list></call></expr>;<pos:position pos:line="465" pos:column="49"/></expr_stmt>
        <expr_stmt><expr><call><name pos:line="466" pos:column="9">apr_brigade_destroy<pos:position pos:line="466" pos:column="28"/></name><argument_list pos:line="466" pos:column="28">(<argument><expr><name pos:line="466" pos:column="29">already_sent<pos:position pos:line="466" pos:column="41"/></name></expr></argument>)<pos:position pos:line="466" pos:column="42"/></argument_list></call></expr>;<pos:position pos:line="466" pos:column="43"/></expr_stmt>
    }<pos:position pos:line="467" pos:column="6"/></block></then></if>
    <return pos:line="468" pos:column="5">return <expr><call><name pos:line="468" pos:column="12">ap_pass_brigade<pos:position pos:line="468" pos:column="27"/></name><argument_list pos:line="468" pos:column="27">(<argument><expr><name><name pos:line="468" pos:column="28">f<pos:position pos:line="468" pos:column="29"/></name><operator pos:line="468" pos:column="29">-&gt;<pos:position pos:line="468" pos:column="34"/></operator><name pos:line="468" pos:column="31">next<pos:position pos:line="468" pos:column="35"/></name></name></expr></argument>, <argument><expr><name pos:line="468" pos:column="37">in<pos:position pos:line="468" pos:column="39"/></name></expr></argument>)<pos:position pos:line="468" pos:column="40"/></argument_list></call></expr>;<pos:position pos:line="468" pos:column="41"/></return>
}<pos:position pos:line="469" pos:column="2"/></block></function></unit>

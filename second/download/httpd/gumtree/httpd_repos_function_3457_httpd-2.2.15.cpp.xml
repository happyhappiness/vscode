<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/httpd/gumtree/httpd_repos_function_3457_httpd-2.2.15.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">int<pos:position pos:line="1" pos:column="4"/></name></type> <name pos:line="1" pos:column="5">run_mode<pos:position pos:line="1" pos:column="13"/></name><parameter_list pos:line="1" pos:column="13">(<parameter><decl><type><name pos:line="1" pos:column="14">command_t<pos:position pos:line="1" pos:column="23"/></name> <modifier pos:line="1" pos:column="24">*<pos:position pos:line="1" pos:column="25"/></modifier></type><name pos:line="1" pos:column="25">cmd_data<pos:position pos:line="1" pos:column="33"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="34"/></parameter_list>
<block pos:line="2" pos:column="1">{
    <decl_stmt><decl><type><name pos:line="3" pos:column="5">int<pos:position pos:line="3" pos:column="8"/></name></type> <name pos:line="3" pos:column="9">rv<pos:position pos:line="3" pos:column="11"/></name></decl>;<pos:position pos:line="3" pos:column="12"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="4" pos:column="5">count_chars<pos:position pos:line="4" pos:column="16"/></name> <modifier pos:line="4" pos:column="17">*<pos:position pos:line="4" pos:column="18"/></modifier></type><name pos:line="4" pos:column="18">cctemp<pos:position pos:line="4" pos:column="24"/></name></decl>;<pos:position pos:line="4" pos:column="25"/></decl_stmt>

    <expr_stmt><expr><name pos:line="6" pos:column="5">cctemp<pos:position pos:line="6" pos:column="11"/></name> <operator pos:line="6" pos:column="12">=<pos:position pos:line="6" pos:column="13"/></operator> <operator pos:line="6" pos:column="14">(<pos:position pos:line="6" pos:column="15"/></operator><name pos:line="6" pos:column="15">count_chars<pos:position pos:line="6" pos:column="26"/></name><operator pos:line="6" pos:column="26">*<pos:position pos:line="6" pos:column="27"/></operator><operator pos:line="6" pos:column="27">)<pos:position pos:line="6" pos:column="28"/></operator><call><name pos:line="6" pos:column="28">malloc<pos:position pos:line="6" pos:column="34"/></name><argument_list pos:line="6" pos:column="34">(<argument><expr><sizeof pos:line="6" pos:column="35">sizeof<argument_list pos:line="6" pos:column="41">(<argument><expr><name pos:line="6" pos:column="42">count_chars<pos:position pos:line="6" pos:column="53"/></name></expr></argument>)<pos:position pos:line="6" pos:column="54"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="6" pos:column="55"/></argument_list></call></expr>;<pos:position pos:line="6" pos:column="56"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="7" pos:column="5">init_count_chars<pos:position pos:line="7" pos:column="21"/></name><argument_list pos:line="7" pos:column="21">(<argument><expr><name pos:line="7" pos:column="22">cctemp<pos:position pos:line="7" pos:column="28"/></name></expr></argument>)<pos:position pos:line="7" pos:column="29"/></argument_list></call></expr>;<pos:position pos:line="7" pos:column="30"/></expr_stmt>

    <switch pos:line="9" pos:column="5">switch <condition pos:line="9" pos:column="12">(<expr><name><name pos:line="9" pos:column="13">cmd_data<pos:position pos:line="9" pos:column="21"/></name><operator pos:line="9" pos:column="21">-&gt;<pos:position pos:line="9" pos:column="26"/></operator><name pos:line="9" pos:column="23">mode<pos:position pos:line="9" pos:column="27"/></name></name></expr>)<pos:position pos:line="9" pos:column="28"/></condition>
    <block pos:line="10" pos:column="5">{
    <case pos:line="11" pos:column="5">case <expr><name pos:line="11" pos:column="10">mCompile<pos:position pos:line="11" pos:column="18"/></name></expr>:<pos:position pos:line="11" pos:column="19"/></case>
        <expr_stmt><expr><name pos:line="12" pos:column="9">rv<pos:position pos:line="12" pos:column="11"/></name> <operator pos:line="12" pos:column="12">=<pos:position pos:line="12" pos:column="13"/></operator> <call><name pos:line="12" pos:column="14">run_command<pos:position pos:line="12" pos:column="25"/></name><argument_list pos:line="12" pos:column="25">(<argument><expr><name pos:line="12" pos:column="26">cmd_data<pos:position pos:line="12" pos:column="34"/></name></expr></argument>, <argument><expr><name><name pos:line="12" pos:column="36">cmd_data<pos:position pos:line="12" pos:column="44"/></name><operator pos:line="12" pos:column="44">-&gt;<pos:position pos:line="12" pos:column="49"/></operator><name pos:line="12" pos:column="46">arglist<pos:position pos:line="12" pos:column="53"/></name></name></expr></argument>)<pos:position pos:line="12" pos:column="54"/></argument_list></call></expr>;<pos:position pos:line="12" pos:column="55"/></expr_stmt>
        <if pos:line="13" pos:column="9">if <condition pos:line="13" pos:column="12">(<expr><name pos:line="13" pos:column="13">rv<pos:position pos:line="13" pos:column="15"/></name></expr>)<pos:position pos:line="13" pos:column="16"/></condition><then pos:line="13" pos:column="16"> <block pos:line="13" pos:column="17">{
            <return pos:line="14" pos:column="13">return <expr><name pos:line="14" pos:column="20">rv<pos:position pos:line="14" pos:column="22"/></name></expr>;<pos:position pos:line="14" pos:column="23"/></return>
        }<pos:position pos:line="15" pos:column="10"/></block></then></if>
        <break pos:line="16" pos:column="9">break;<pos:position pos:line="16" pos:column="15"/></break>
    <case pos:line="17" pos:column="5">case <expr><name pos:line="17" pos:column="10">mInstall<pos:position pos:line="17" pos:column="18"/></name></expr>:<pos:position pos:line="17" pos:column="19"/></case>
        <comment type="block" pos:line="18" pos:column="9">/* Well, we'll assume it's a file going to a directory... */</comment>
        <comment type="block" pos:line="19" pos:column="9">/* For brain-dead install-sh based scripts, we have to repeat
         * the command N-times.  install-sh should die.
         */</comment>
        <if pos:line="22" pos:column="9">if <condition pos:line="22" pos:column="12">(<expr><operator pos:line="22" pos:column="13">!<pos:position pos:line="22" pos:column="14"/></operator><name><name pos:line="22" pos:column="14">cmd_data<pos:position pos:line="22" pos:column="22"/></name><operator pos:line="22" pos:column="22">-&gt;<pos:position pos:line="22" pos:column="27"/></operator><name pos:line="22" pos:column="24">output_name<pos:position pos:line="22" pos:column="35"/></name></name></expr>)<pos:position pos:line="22" pos:column="36"/></condition><then pos:line="22" pos:column="36"> <block pos:line="22" pos:column="37">{
            <expr_stmt><expr><name pos:line="23" pos:column="13">rv<pos:position pos:line="23" pos:column="15"/></name> <operator pos:line="23" pos:column="16">=<pos:position pos:line="23" pos:column="17"/></operator> <call><name pos:line="23" pos:column="18">run_command<pos:position pos:line="23" pos:column="29"/></name><argument_list pos:line="23" pos:column="29">(<argument><expr><name pos:line="23" pos:column="30">cmd_data<pos:position pos:line="23" pos:column="38"/></name></expr></argument>, <argument><expr><name><name pos:line="23" pos:column="40">cmd_data<pos:position pos:line="23" pos:column="48"/></name><operator pos:line="23" pos:column="48">-&gt;<pos:position pos:line="23" pos:column="53"/></operator><name pos:line="23" pos:column="50">arglist<pos:position pos:line="23" pos:column="57"/></name></name></expr></argument>)<pos:position pos:line="23" pos:column="58"/></argument_list></call></expr>;<pos:position pos:line="23" pos:column="59"/></expr_stmt>
            <if pos:line="24" pos:column="13">if <condition pos:line="24" pos:column="16">(<expr><name pos:line="24" pos:column="17">rv<pos:position pos:line="24" pos:column="19"/></name></expr>)<pos:position pos:line="24" pos:column="20"/></condition><then pos:line="24" pos:column="20"> <block pos:line="24" pos:column="21">{
                <return pos:line="25" pos:column="17">return <expr><name pos:line="25" pos:column="24">rv<pos:position pos:line="25" pos:column="26"/></name></expr>;<pos:position pos:line="25" pos:column="27"/></return>
            }<pos:position pos:line="26" pos:column="14"/></block></then></if>
        }<pos:position pos:line="27" pos:column="10"/></block></then></if>
        <if pos:line="28" pos:column="9">if <condition pos:line="28" pos:column="12">(<expr><name><name pos:line="28" pos:column="13">cmd_data<pos:position pos:line="28" pos:column="21"/></name><operator pos:line="28" pos:column="21">-&gt;<pos:position pos:line="28" pos:column="26"/></operator><name pos:line="28" pos:column="23">output_name<pos:position pos:line="28" pos:column="34"/></name></name></expr>)<pos:position pos:line="28" pos:column="35"/></condition><then pos:line="28" pos:column="35"> <block pos:line="28" pos:column="36">{
            <expr_stmt><expr><call><name pos:line="29" pos:column="13">append_count_chars<pos:position pos:line="29" pos:column="31"/></name><argument_list pos:line="29" pos:column="31">(<argument><expr><name pos:line="29" pos:column="32">cctemp<pos:position pos:line="29" pos:column="38"/></name></expr></argument>, <argument><expr><name><name pos:line="29" pos:column="40">cmd_data<pos:position pos:line="29" pos:column="48"/></name><operator pos:line="29" pos:column="48">-&gt;<pos:position pos:line="29" pos:column="53"/></operator><name pos:line="29" pos:column="50">arglist<pos:position pos:line="29" pos:column="57"/></name></name></expr></argument>)<pos:position pos:line="29" pos:column="58"/></argument_list></call></expr>;<pos:position pos:line="29" pos:column="59"/></expr_stmt>
            <expr_stmt><expr><call><name pos:line="30" pos:column="13">insert_count_chars<pos:position pos:line="30" pos:column="31"/></name><argument_list pos:line="30" pos:column="31">(<argument><expr><name pos:line="30" pos:column="32">cctemp<pos:position pos:line="30" pos:column="38"/></name></expr></argument>,
                               <argument><expr><name><name pos:line="31" pos:column="32">cmd_data<pos:position pos:line="31" pos:column="40"/></name><operator pos:line="31" pos:column="40">-&gt;<pos:position pos:line="31" pos:column="45"/></operator><name pos:line="31" pos:column="42">output_name<pos:position pos:line="31" pos:column="53"/></name></name></expr></argument>,
                               <argument><expr><name><name pos:line="32" pos:column="32">cctemp<pos:position pos:line="32" pos:column="38"/></name><operator pos:line="32" pos:column="38">-&gt;<pos:position pos:line="32" pos:column="43"/></operator><name pos:line="32" pos:column="40">num<pos:position pos:line="32" pos:column="43"/></name></name> <operator pos:line="32" pos:column="44">-<pos:position pos:line="32" pos:column="45"/></operator> <literal type="number" pos:line="32" pos:column="46">1<pos:position pos:line="32" pos:column="47"/></literal></expr></argument>)<pos:position pos:line="32" pos:column="48"/></argument_list></call></expr>;<pos:position pos:line="32" pos:column="49"/></expr_stmt>
            <expr_stmt><expr><name pos:line="33" pos:column="13">rv<pos:position pos:line="33" pos:column="15"/></name> <operator pos:line="33" pos:column="16">=<pos:position pos:line="33" pos:column="17"/></operator> <call><name pos:line="33" pos:column="18">run_command<pos:position pos:line="33" pos:column="29"/></name><argument_list pos:line="33" pos:column="29">(<argument><expr><name pos:line="33" pos:column="30">cmd_data<pos:position pos:line="33" pos:column="38"/></name></expr></argument>, <argument><expr><name pos:line="33" pos:column="40">cctemp<pos:position pos:line="33" pos:column="46"/></name></expr></argument>)<pos:position pos:line="33" pos:column="47"/></argument_list></call></expr>;<pos:position pos:line="33" pos:column="48"/></expr_stmt>
            <if pos:line="34" pos:column="13">if <condition pos:line="34" pos:column="16">(<expr><name pos:line="34" pos:column="17">rv<pos:position pos:line="34" pos:column="19"/></name></expr>)<pos:position pos:line="34" pos:column="20"/></condition><then pos:line="34" pos:column="20"> <block pos:line="34" pos:column="21">{
                <return pos:line="35" pos:column="17">return <expr><name pos:line="35" pos:column="24">rv<pos:position pos:line="35" pos:column="26"/></name></expr>;<pos:position pos:line="35" pos:column="27"/></return>
            }<pos:position pos:line="36" pos:column="14"/></block></then></if>
            <expr_stmt><expr><call><name pos:line="37" pos:column="13">clear_count_chars<pos:position pos:line="37" pos:column="30"/></name><argument_list pos:line="37" pos:column="30">(<argument><expr><name pos:line="37" pos:column="31">cctemp<pos:position pos:line="37" pos:column="37"/></name></expr></argument>)<pos:position pos:line="37" pos:column="38"/></argument_list></call></expr>;<pos:position pos:line="37" pos:column="39"/></expr_stmt>
        }<pos:position pos:line="38" pos:column="10"/></block></then></if>
        <if pos:line="39" pos:column="9">if <condition pos:line="39" pos:column="12">(<expr><name><name pos:line="39" pos:column="13">cmd_data<pos:position pos:line="39" pos:column="21"/></name><operator pos:line="39" pos:column="21">-&gt;<pos:position pos:line="39" pos:column="26"/></operator><name pos:line="39" pos:column="23">static_name<pos:position pos:line="39" pos:column="34"/></name><operator pos:line="39" pos:column="34">.<pos:position pos:line="39" pos:column="35"/></operator><name pos:line="39" pos:column="35">install<pos:position pos:line="39" pos:column="42"/></name></name></expr>)<pos:position pos:line="39" pos:column="43"/></condition><then pos:line="39" pos:column="43"> <block pos:line="39" pos:column="44">{
            <expr_stmt><expr><call><name pos:line="40" pos:column="13">append_count_chars<pos:position pos:line="40" pos:column="31"/></name><argument_list pos:line="40" pos:column="31">(<argument><expr><name pos:line="40" pos:column="32">cctemp<pos:position pos:line="40" pos:column="38"/></name></expr></argument>, <argument><expr><name><name pos:line="40" pos:column="40">cmd_data<pos:position pos:line="40" pos:column="48"/></name><operator pos:line="40" pos:column="48">-&gt;<pos:position pos:line="40" pos:column="53"/></operator><name pos:line="40" pos:column="50">arglist<pos:position pos:line="40" pos:column="57"/></name></name></expr></argument>)<pos:position pos:line="40" pos:column="58"/></argument_list></call></expr>;<pos:position pos:line="40" pos:column="59"/></expr_stmt>
            <expr_stmt><expr><call><name pos:line="41" pos:column="13">insert_count_chars<pos:position pos:line="41" pos:column="31"/></name><argument_list pos:line="41" pos:column="31">(<argument><expr><name pos:line="41" pos:column="32">cctemp<pos:position pos:line="41" pos:column="38"/></name></expr></argument>,
                               <argument><expr><name><name pos:line="42" pos:column="32">cmd_data<pos:position pos:line="42" pos:column="40"/></name><operator pos:line="42" pos:column="40">-&gt;<pos:position pos:line="42" pos:column="45"/></operator><name pos:line="42" pos:column="42">static_name<pos:position pos:line="42" pos:column="53"/></name><operator pos:line="42" pos:column="53">.<pos:position pos:line="42" pos:column="54"/></operator><name pos:line="42" pos:column="54">install<pos:position pos:line="42" pos:column="61"/></name></name></expr></argument>,
                               <argument><expr><name><name pos:line="43" pos:column="32">cctemp<pos:position pos:line="43" pos:column="38"/></name><operator pos:line="43" pos:column="38">-&gt;<pos:position pos:line="43" pos:column="43"/></operator><name pos:line="43" pos:column="40">num<pos:position pos:line="43" pos:column="43"/></name></name> <operator pos:line="43" pos:column="44">-<pos:position pos:line="43" pos:column="45"/></operator> <literal type="number" pos:line="43" pos:column="46">1<pos:position pos:line="43" pos:column="47"/></literal></expr></argument>)<pos:position pos:line="43" pos:column="48"/></argument_list></call></expr>;<pos:position pos:line="43" pos:column="49"/></expr_stmt>
            <expr_stmt><expr><name pos:line="44" pos:column="13">rv<pos:position pos:line="44" pos:column="15"/></name> <operator pos:line="44" pos:column="16">=<pos:position pos:line="44" pos:column="17"/></operator> <call><name pos:line="44" pos:column="18">run_command<pos:position pos:line="44" pos:column="29"/></name><argument_list pos:line="44" pos:column="29">(<argument><expr><name pos:line="44" pos:column="30">cmd_data<pos:position pos:line="44" pos:column="38"/></name></expr></argument>, <argument><expr><name pos:line="44" pos:column="40">cctemp<pos:position pos:line="44" pos:column="46"/></name></expr></argument>)<pos:position pos:line="44" pos:column="47"/></argument_list></call></expr>;<pos:position pos:line="44" pos:column="48"/></expr_stmt>
            <if pos:line="45" pos:column="13">if <condition pos:line="45" pos:column="16">(<expr><name pos:line="45" pos:column="17">rv<pos:position pos:line="45" pos:column="19"/></name></expr>)<pos:position pos:line="45" pos:column="20"/></condition><then pos:line="45" pos:column="20"> <block pos:line="45" pos:column="21">{
                <return pos:line="46" pos:column="17">return <expr><name pos:line="46" pos:column="24">rv<pos:position pos:line="46" pos:column="26"/></name></expr>;<pos:position pos:line="46" pos:column="27"/></return>
            }<pos:position pos:line="47" pos:column="14"/></block></then></if>
<cpp:if pos:line="48" pos:column="1">#<cpp:directive pos:line="48" pos:column="2">if<pos:position pos:line="48" pos:column="4"/></cpp:directive> <expr><call><name pos:line="48" pos:column="5">defined<pos:position pos:line="48" pos:column="12"/></name><argument_list pos:line="48" pos:column="12">(<argument><expr><name pos:line="48" pos:column="13">__APPLE__<pos:position pos:line="48" pos:column="22"/></name></expr></argument>)<pos:position pos:line="48" pos:column="23"/></argument_list></call> <operator pos:line="48" pos:column="24">&amp;&amp;<pos:position pos:line="48" pos:column="34"/></operator> <call><name pos:line="48" pos:column="27">defined<pos:position pos:line="48" pos:column="34"/></name><argument_list pos:line="48" pos:column="34">(<argument><expr><name pos:line="48" pos:column="35">RANLIB<pos:position pos:line="48" pos:column="41"/></name></expr></argument>)<pos:position pos:line="48" pos:column="42"/></argument_list></call></expr></cpp:if>
            <comment type="block" pos:line="49" pos:column="13">/* From the Apple libtool(1) manpage on Tiger/10.4:
             * ----
             * With  the way libraries used to be created, errors were possible
             * if the library was modified with ar(1) and  the  table  of
             * contents  was  not updated  by  rerunning ranlib(1).  Thus the
             * link editor, ld, warns when the modification date of a library
             * is more  recent  than  the  creation date  of its table of
             * contents.  Unfortunately, this means that you get the warning
             * even if you only copy the library.
             * ----
             *
             * This means that when we install the static archive, we need to
             * rerun ranlib afterwards.
             */</comment>
            <decl_stmt><decl><type><specifier pos:line="63" pos:column="13">const<pos:position pos:line="63" pos:column="18"/></specifier> <name pos:line="63" pos:column="19">char<pos:position pos:line="63" pos:column="23"/></name> <modifier pos:line="63" pos:column="24">*<pos:position pos:line="63" pos:column="25"/></modifier></type><name><name pos:line="63" pos:column="25">lib_args<pos:position pos:line="63" pos:column="33"/></name><index pos:line="63" pos:column="33">[<expr><literal type="number" pos:line="63" pos:column="34">3<pos:position pos:line="63" pos:column="35"/></literal></expr>]<pos:position pos:line="63" pos:column="36"/></index></name></decl>, <modifier pos:line="63" pos:column="38">*<pos:position pos:line="63" pos:column="39"/></modifier><decl><type ref="prev"/><name pos:line="63" pos:column="39">static_lib_name<pos:position pos:line="63" pos:column="54"/></name></decl>;<pos:position pos:line="63" pos:column="55"/></decl_stmt>
            <decl_stmt><decl><type><name pos:line="64" pos:column="13">char<pos:position pos:line="64" pos:column="17"/></name> <modifier pos:line="64" pos:column="18">*<pos:position pos:line="64" pos:column="19"/></modifier></type><name pos:line="64" pos:column="19">tmp<pos:position pos:line="64" pos:column="22"/></name></decl>;<pos:position pos:line="64" pos:column="23"/></decl_stmt>
            <decl_stmt><decl><type><name pos:line="65" pos:column="13">size_t<pos:position pos:line="65" pos:column="19"/></name></type> <name pos:line="65" pos:column="20">len1<pos:position pos:line="65" pos:column="24"/></name></decl>, <decl><type ref="prev"/><name pos:line="65" pos:column="26">len2<pos:position pos:line="65" pos:column="30"/></name></decl>;<pos:position pos:line="65" pos:column="31"/></decl_stmt>
            <expr_stmt><expr><name pos:line="66" pos:column="13">len1<pos:position pos:line="66" pos:column="17"/></name> <operator pos:line="66" pos:column="18">=<pos:position pos:line="66" pos:column="19"/></operator> <call><name pos:line="66" pos:column="20">strlen<pos:position pos:line="66" pos:column="26"/></name><argument_list pos:line="66" pos:column="26">(<argument><expr><name><name pos:line="66" pos:column="27">cmd_data<pos:position pos:line="66" pos:column="35"/></name><operator pos:line="66" pos:column="35">-&gt;<pos:position pos:line="66" pos:column="40"/></operator><name pos:line="66" pos:column="37">arglist<pos:position pos:line="66" pos:column="44"/></name><operator pos:line="66" pos:column="44">-&gt;<pos:position pos:line="66" pos:column="49"/></operator><name pos:line="66" pos:column="46">vals<pos:position pos:line="66" pos:column="50"/></name><index pos:line="66" pos:column="50">[<expr><name><name pos:line="66" pos:column="51">cmd_data<pos:position pos:line="66" pos:column="59"/></name><operator pos:line="66" pos:column="59">-&gt;<pos:position pos:line="66" pos:column="64"/></operator><name pos:line="66" pos:column="61">arglist<pos:position pos:line="66" pos:column="68"/></name><operator pos:line="66" pos:column="68">-&gt;<pos:position pos:line="66" pos:column="73"/></operator><name pos:line="66" pos:column="70">num<pos:position pos:line="66" pos:column="73"/></name></name> <operator pos:line="66" pos:column="74">-<pos:position pos:line="66" pos:column="75"/></operator> <literal type="number" pos:line="66" pos:column="76">1<pos:position pos:line="66" pos:column="77"/></literal></expr>]<pos:position pos:line="66" pos:column="78"/></index></name></expr></argument>)<pos:position pos:line="66" pos:column="79"/></argument_list></call></expr>;<pos:position pos:line="66" pos:column="80"/></expr_stmt>

            <expr_stmt><expr><name pos:line="68" pos:column="13">static_lib_name<pos:position pos:line="68" pos:column="28"/></name> <operator pos:line="68" pos:column="29">=<pos:position pos:line="68" pos:column="30"/></operator> <call><name pos:line="68" pos:column="31">jlibtool_basename<pos:position pos:line="68" pos:column="48"/></name><argument_list pos:line="68" pos:column="48">(<argument><expr><name><name pos:line="68" pos:column="49">cmd_data<pos:position pos:line="68" pos:column="57"/></name><operator pos:line="68" pos:column="57">-&gt;<pos:position pos:line="68" pos:column="62"/></operator><name pos:line="68" pos:column="59">static_name<pos:position pos:line="68" pos:column="70"/></name><operator pos:line="68" pos:column="70">.<pos:position pos:line="68" pos:column="71"/></operator><name pos:line="68" pos:column="71">install<pos:position pos:line="68" pos:column="78"/></name></name></expr></argument>)<pos:position pos:line="68" pos:column="79"/></argument_list></call></expr>;<pos:position pos:line="68" pos:column="80"/></expr_stmt>
            <expr_stmt><expr><name pos:line="69" pos:column="13">len2<pos:position pos:line="69" pos:column="17"/></name> <operator pos:line="69" pos:column="18">=<pos:position pos:line="69" pos:column="19"/></operator> <call><name pos:line="69" pos:column="20">strlen<pos:position pos:line="69" pos:column="26"/></name><argument_list pos:line="69" pos:column="26">(<argument><expr><name pos:line="69" pos:column="27">static_lib_name<pos:position pos:line="69" pos:column="42"/></name></expr></argument>)<pos:position pos:line="69" pos:column="43"/></argument_list></call></expr>;<pos:position pos:line="69" pos:column="44"/></expr_stmt>

            <expr_stmt><expr><name pos:line="71" pos:column="13">tmp<pos:position pos:line="71" pos:column="16"/></name> <operator pos:line="71" pos:column="17">=<pos:position pos:line="71" pos:column="18"/></operator> <call><name pos:line="71" pos:column="19">malloc<pos:position pos:line="71" pos:column="25"/></name><argument_list pos:line="71" pos:column="25">(<argument><expr><name pos:line="71" pos:column="26">len1<pos:position pos:line="71" pos:column="30"/></name> <operator pos:line="71" pos:column="31">+<pos:position pos:line="71" pos:column="32"/></operator> <name pos:line="71" pos:column="33">len2<pos:position pos:line="71" pos:column="37"/></name> <operator pos:line="71" pos:column="38">+<pos:position pos:line="71" pos:column="39"/></operator> <literal type="number" pos:line="71" pos:column="40">2<pos:position pos:line="71" pos:column="41"/></literal></expr></argument>)<pos:position pos:line="71" pos:column="42"/></argument_list></call></expr>;<pos:position pos:line="71" pos:column="43"/></expr_stmt>

            <expr_stmt><expr><call><name pos:line="73" pos:column="13">snprintf<pos:position pos:line="73" pos:column="21"/></name><argument_list pos:line="73" pos:column="21">(<argument><expr><name pos:line="73" pos:column="22">tmp<pos:position pos:line="73" pos:column="25"/></name></expr></argument>, <argument><expr><name pos:line="73" pos:column="27">len1<pos:position pos:line="73" pos:column="31"/></name> <operator pos:line="73" pos:column="32">+<pos:position pos:line="73" pos:column="33"/></operator> <name pos:line="73" pos:column="34">len2<pos:position pos:line="73" pos:column="38"/></name> <operator pos:line="73" pos:column="39">+<pos:position pos:line="73" pos:column="40"/></operator> <literal type="number" pos:line="73" pos:column="41">2<pos:position pos:line="73" pos:column="42"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="73" pos:column="44">"%s/%s"<pos:position pos:line="73" pos:column="51"/></literal></expr></argument>,
                    <argument><expr><name><name pos:line="74" pos:column="21">cmd_data<pos:position pos:line="74" pos:column="29"/></name><operator pos:line="74" pos:column="29">-&gt;<pos:position pos:line="74" pos:column="34"/></operator><name pos:line="74" pos:column="31">arglist<pos:position pos:line="74" pos:column="38"/></name><operator pos:line="74" pos:column="38">-&gt;<pos:position pos:line="74" pos:column="43"/></operator><name pos:line="74" pos:column="40">vals<pos:position pos:line="74" pos:column="44"/></name><index pos:line="74" pos:column="44">[<expr><name><name pos:line="74" pos:column="45">cmd_data<pos:position pos:line="74" pos:column="53"/></name><operator pos:line="74" pos:column="53">-&gt;<pos:position pos:line="74" pos:column="58"/></operator><name pos:line="74" pos:column="55">arglist<pos:position pos:line="74" pos:column="62"/></name><operator pos:line="74" pos:column="62">-&gt;<pos:position pos:line="74" pos:column="67"/></operator><name pos:line="74" pos:column="64">num<pos:position pos:line="74" pos:column="67"/></name></name> <operator pos:line="74" pos:column="68">-<pos:position pos:line="74" pos:column="69"/></operator> <literal type="number" pos:line="74" pos:column="70">1<pos:position pos:line="74" pos:column="71"/></literal></expr>]<pos:position pos:line="74" pos:column="72"/></index></name></expr></argument>,
                    <argument><expr><name pos:line="75" pos:column="21">static_lib_name<pos:position pos:line="75" pos:column="36"/></name></expr></argument>)<pos:position pos:line="75" pos:column="37"/></argument_list></call></expr>;<pos:position pos:line="75" pos:column="38"/></expr_stmt>

            <expr_stmt><expr><name><name pos:line="77" pos:column="13">lib_args<pos:position pos:line="77" pos:column="21"/></name><index pos:line="77" pos:column="21">[<expr><literal type="number" pos:line="77" pos:column="22">0<pos:position pos:line="77" pos:column="23"/></literal></expr>]<pos:position pos:line="77" pos:column="24"/></index></name> <operator pos:line="77" pos:column="25">=<pos:position pos:line="77" pos:column="26"/></operator> <name pos:line="77" pos:column="27">RANLIB<pos:position pos:line="77" pos:column="33"/></name></expr>;<pos:position pos:line="77" pos:column="34"/></expr_stmt>
            <expr_stmt><expr><name><name pos:line="78" pos:column="13">lib_args<pos:position pos:line="78" pos:column="21"/></name><index pos:line="78" pos:column="21">[<expr><literal type="number" pos:line="78" pos:column="22">1<pos:position pos:line="78" pos:column="23"/></literal></expr>]<pos:position pos:line="78" pos:column="24"/></index></name> <operator pos:line="78" pos:column="25">=<pos:position pos:line="78" pos:column="26"/></operator> <name pos:line="78" pos:column="27">tmp<pos:position pos:line="78" pos:column="30"/></name></expr>;<pos:position pos:line="78" pos:column="31"/></expr_stmt>
            <expr_stmt><expr><name><name pos:line="79" pos:column="13">lib_args<pos:position pos:line="79" pos:column="21"/></name><index pos:line="79" pos:column="21">[<expr><literal type="number" pos:line="79" pos:column="22">2<pos:position pos:line="79" pos:column="23"/></literal></expr>]<pos:position pos:line="79" pos:column="24"/></index></name> <operator pos:line="79" pos:column="25">=<pos:position pos:line="79" pos:column="26"/></operator> <name pos:line="79" pos:column="27">NULL<pos:position pos:line="79" pos:column="31"/></name></expr>;<pos:position pos:line="79" pos:column="32"/></expr_stmt>
            <expr_stmt><expr><call><name pos:line="80" pos:column="13">external_spawn<pos:position pos:line="80" pos:column="27"/></name><argument_list pos:line="80" pos:column="27">(<argument><expr><name pos:line="80" pos:column="28">cmd_data<pos:position pos:line="80" pos:column="36"/></name></expr></argument>, <argument><expr><name pos:line="80" pos:column="38">RANLIB<pos:position pos:line="80" pos:column="44"/></name></expr></argument>, <argument><expr><name pos:line="80" pos:column="46">lib_args<pos:position pos:line="80" pos:column="54"/></name></expr></argument>)<pos:position pos:line="80" pos:column="55"/></argument_list></call></expr>;<pos:position pos:line="80" pos:column="56"/></expr_stmt>
            <expr_stmt><expr><call><name pos:line="81" pos:column="13">free<pos:position pos:line="81" pos:column="17"/></name><argument_list pos:line="81" pos:column="17">(<argument><expr><name pos:line="81" pos:column="18">tmp<pos:position pos:line="81" pos:column="21"/></name></expr></argument>)<pos:position pos:line="81" pos:column="22"/></argument_list></call></expr>;<pos:position pos:line="81" pos:column="23"/></expr_stmt>
<cpp:endif pos:line="82" pos:column="1">#<cpp:directive pos:line="82" pos:column="2">endif<pos:position pos:line="82" pos:column="7"/></cpp:directive></cpp:endif>
            <expr_stmt><expr><call><name pos:line="83" pos:column="13">clear_count_chars<pos:position pos:line="83" pos:column="30"/></name><argument_list pos:line="83" pos:column="30">(<argument><expr><name pos:line="83" pos:column="31">cctemp<pos:position pos:line="83" pos:column="37"/></name></expr></argument>)<pos:position pos:line="83" pos:column="38"/></argument_list></call></expr>;<pos:position pos:line="83" pos:column="39"/></expr_stmt>
        }<pos:position pos:line="84" pos:column="10"/></block></then></if>
        <if pos:line="85" pos:column="9">if <condition pos:line="85" pos:column="12">(<expr><name><name pos:line="85" pos:column="13">cmd_data<pos:position pos:line="85" pos:column="21"/></name><operator pos:line="85" pos:column="21">-&gt;<pos:position pos:line="85" pos:column="26"/></operator><name pos:line="85" pos:column="23">shared_name<pos:position pos:line="85" pos:column="34"/></name><operator pos:line="85" pos:column="34">.<pos:position pos:line="85" pos:column="35"/></operator><name pos:line="85" pos:column="35">install<pos:position pos:line="85" pos:column="42"/></name></name></expr>)<pos:position pos:line="85" pos:column="43"/></condition><then pos:line="85" pos:column="43"> <block pos:line="85" pos:column="44">{
            <expr_stmt><expr><call><name pos:line="86" pos:column="13">append_count_chars<pos:position pos:line="86" pos:column="31"/></name><argument_list pos:line="86" pos:column="31">(<argument><expr><name pos:line="86" pos:column="32">cctemp<pos:position pos:line="86" pos:column="38"/></name></expr></argument>, <argument><expr><name><name pos:line="86" pos:column="40">cmd_data<pos:position pos:line="86" pos:column="48"/></name><operator pos:line="86" pos:column="48">-&gt;<pos:position pos:line="86" pos:column="53"/></operator><name pos:line="86" pos:column="50">arglist<pos:position pos:line="86" pos:column="57"/></name></name></expr></argument>)<pos:position pos:line="86" pos:column="58"/></argument_list></call></expr>;<pos:position pos:line="86" pos:column="59"/></expr_stmt>
            <expr_stmt><expr><call><name pos:line="87" pos:column="13">insert_count_chars<pos:position pos:line="87" pos:column="31"/></name><argument_list pos:line="87" pos:column="31">(<argument><expr><name pos:line="87" pos:column="32">cctemp<pos:position pos:line="87" pos:column="38"/></name></expr></argument>,
                               <argument><expr><name><name pos:line="88" pos:column="32">cmd_data<pos:position pos:line="88" pos:column="40"/></name><operator pos:line="88" pos:column="40">-&gt;<pos:position pos:line="88" pos:column="45"/></operator><name pos:line="88" pos:column="42">shared_name<pos:position pos:line="88" pos:column="53"/></name><operator pos:line="88" pos:column="53">.<pos:position pos:line="88" pos:column="54"/></operator><name pos:line="88" pos:column="54">install<pos:position pos:line="88" pos:column="61"/></name></name></expr></argument>,
                               <argument><expr><name><name pos:line="89" pos:column="32">cctemp<pos:position pos:line="89" pos:column="38"/></name><operator pos:line="89" pos:column="38">-&gt;<pos:position pos:line="89" pos:column="43"/></operator><name pos:line="89" pos:column="40">num<pos:position pos:line="89" pos:column="43"/></name></name> <operator pos:line="89" pos:column="44">-<pos:position pos:line="89" pos:column="45"/></operator> <literal type="number" pos:line="89" pos:column="46">1<pos:position pos:line="89" pos:column="47"/></literal></expr></argument>)<pos:position pos:line="89" pos:column="48"/></argument_list></call></expr>;<pos:position pos:line="89" pos:column="49"/></expr_stmt>
            <expr_stmt><expr><name pos:line="90" pos:column="13">rv<pos:position pos:line="90" pos:column="15"/></name> <operator pos:line="90" pos:column="16">=<pos:position pos:line="90" pos:column="17"/></operator> <call><name pos:line="90" pos:column="18">run_command<pos:position pos:line="90" pos:column="29"/></name><argument_list pos:line="90" pos:column="29">(<argument><expr><name pos:line="90" pos:column="30">cmd_data<pos:position pos:line="90" pos:column="38"/></name></expr></argument>, <argument><expr><name pos:line="90" pos:column="40">cctemp<pos:position pos:line="90" pos:column="46"/></name></expr></argument>)<pos:position pos:line="90" pos:column="47"/></argument_list></call></expr>;<pos:position pos:line="90" pos:column="48"/></expr_stmt>
            <if pos:line="91" pos:column="13">if <condition pos:line="91" pos:column="16">(<expr><name pos:line="91" pos:column="17">rv<pos:position pos:line="91" pos:column="19"/></name></expr>)<pos:position pos:line="91" pos:column="20"/></condition><then pos:line="91" pos:column="20"> <block pos:line="91" pos:column="21">{
                <return pos:line="92" pos:column="17">return <expr><name pos:line="92" pos:column="24">rv<pos:position pos:line="92" pos:column="26"/></name></expr>;<pos:position pos:line="92" pos:column="27"/></return>
            }<pos:position pos:line="93" pos:column="14"/></block></then></if>
            <expr_stmt><expr><call><name pos:line="94" pos:column="13">clear_count_chars<pos:position pos:line="94" pos:column="30"/></name><argument_list pos:line="94" pos:column="30">(<argument><expr><name pos:line="94" pos:column="31">cctemp<pos:position pos:line="94" pos:column="37"/></name></expr></argument>)<pos:position pos:line="94" pos:column="38"/></argument_list></call></expr>;<pos:position pos:line="94" pos:column="39"/></expr_stmt>
        }<pos:position pos:line="95" pos:column="10"/></block></then></if>
        <if pos:line="96" pos:column="9">if <condition pos:line="96" pos:column="12">(<expr><name><name pos:line="96" pos:column="13">cmd_data<pos:position pos:line="96" pos:column="21"/></name><operator pos:line="96" pos:column="21">-&gt;<pos:position pos:line="96" pos:column="26"/></operator><name pos:line="96" pos:column="23">module_name<pos:position pos:line="96" pos:column="34"/></name><operator pos:line="96" pos:column="34">.<pos:position pos:line="96" pos:column="35"/></operator><name pos:line="96" pos:column="35">install<pos:position pos:line="96" pos:column="42"/></name></name></expr>)<pos:position pos:line="96" pos:column="43"/></condition><then pos:line="96" pos:column="43"> <block pos:line="96" pos:column="44">{
            <expr_stmt><expr><call><name pos:line="97" pos:column="13">append_count_chars<pos:position pos:line="97" pos:column="31"/></name><argument_list pos:line="97" pos:column="31">(<argument><expr><name pos:line="97" pos:column="32">cctemp<pos:position pos:line="97" pos:column="38"/></name></expr></argument>, <argument><expr><name><name pos:line="97" pos:column="40">cmd_data<pos:position pos:line="97" pos:column="48"/></name><operator pos:line="97" pos:column="48">-&gt;<pos:position pos:line="97" pos:column="53"/></operator><name pos:line="97" pos:column="50">arglist<pos:position pos:line="97" pos:column="57"/></name></name></expr></argument>)<pos:position pos:line="97" pos:column="58"/></argument_list></call></expr>;<pos:position pos:line="97" pos:column="59"/></expr_stmt>
            <expr_stmt><expr><call><name pos:line="98" pos:column="13">insert_count_chars<pos:position pos:line="98" pos:column="31"/></name><argument_list pos:line="98" pos:column="31">(<argument><expr><name pos:line="98" pos:column="32">cctemp<pos:position pos:line="98" pos:column="38"/></name></expr></argument>,
                               <argument><expr><name><name pos:line="99" pos:column="32">cmd_data<pos:position pos:line="99" pos:column="40"/></name><operator pos:line="99" pos:column="40">-&gt;<pos:position pos:line="99" pos:column="45"/></operator><name pos:line="99" pos:column="42">module_name<pos:position pos:line="99" pos:column="53"/></name><operator pos:line="99" pos:column="53">.<pos:position pos:line="99" pos:column="54"/></operator><name pos:line="99" pos:column="54">install<pos:position pos:line="99" pos:column="61"/></name></name></expr></argument>,
                               <argument><expr><name><name pos:line="100" pos:column="32">cctemp<pos:position pos:line="100" pos:column="38"/></name><operator pos:line="100" pos:column="38">-&gt;<pos:position pos:line="100" pos:column="43"/></operator><name pos:line="100" pos:column="40">num<pos:position pos:line="100" pos:column="43"/></name></name> <operator pos:line="100" pos:column="44">-<pos:position pos:line="100" pos:column="45"/></operator> <literal type="number" pos:line="100" pos:column="46">1<pos:position pos:line="100" pos:column="47"/></literal></expr></argument>)<pos:position pos:line="100" pos:column="48"/></argument_list></call></expr>;<pos:position pos:line="100" pos:column="49"/></expr_stmt>
            <expr_stmt><expr><name pos:line="101" pos:column="13">rv<pos:position pos:line="101" pos:column="15"/></name> <operator pos:line="101" pos:column="16">=<pos:position pos:line="101" pos:column="17"/></operator> <call><name pos:line="101" pos:column="18">run_command<pos:position pos:line="101" pos:column="29"/></name><argument_list pos:line="101" pos:column="29">(<argument><expr><name pos:line="101" pos:column="30">cmd_data<pos:position pos:line="101" pos:column="38"/></name></expr></argument>, <argument><expr><name pos:line="101" pos:column="40">cctemp<pos:position pos:line="101" pos:column="46"/></name></expr></argument>)<pos:position pos:line="101" pos:column="47"/></argument_list></call></expr>;<pos:position pos:line="101" pos:column="48"/></expr_stmt>
            <if pos:line="102" pos:column="13">if <condition pos:line="102" pos:column="16">(<expr><name pos:line="102" pos:column="17">rv<pos:position pos:line="102" pos:column="19"/></name></expr>)<pos:position pos:line="102" pos:column="20"/></condition><then pos:line="102" pos:column="20"> <block pos:line="102" pos:column="21">{
                <return pos:line="103" pos:column="17">return <expr><name pos:line="103" pos:column="24">rv<pos:position pos:line="103" pos:column="26"/></name></expr>;<pos:position pos:line="103" pos:column="27"/></return>
            }<pos:position pos:line="104" pos:column="14"/></block></then></if>
            <expr_stmt><expr><call><name pos:line="105" pos:column="13">clear_count_chars<pos:position pos:line="105" pos:column="30"/></name><argument_list pos:line="105" pos:column="30">(<argument><expr><name pos:line="105" pos:column="31">cctemp<pos:position pos:line="105" pos:column="37"/></name></expr></argument>)<pos:position pos:line="105" pos:column="38"/></argument_list></call></expr>;<pos:position pos:line="105" pos:column="39"/></expr_stmt>
        }<pos:position pos:line="106" pos:column="10"/></block></then></if>
        <break pos:line="107" pos:column="9">break;<pos:position pos:line="107" pos:column="15"/></break>
    <case pos:line="108" pos:column="5">case <expr><name pos:line="108" pos:column="10">mLink<pos:position pos:line="108" pos:column="15"/></name></expr>:<pos:position pos:line="108" pos:column="16"/></case>
        <if pos:line="109" pos:column="9">if <condition pos:line="109" pos:column="12">(<expr><operator pos:line="109" pos:column="13">!<pos:position pos:line="109" pos:column="14"/></operator><name><name pos:line="109" pos:column="14">cmd_data<pos:position pos:line="109" pos:column="22"/></name><operator pos:line="109" pos:column="22">-&gt;<pos:position pos:line="109" pos:column="27"/></operator><name pos:line="109" pos:column="24">options<pos:position pos:line="109" pos:column="31"/></name><operator pos:line="109" pos:column="31">.<pos:position pos:line="109" pos:column="32"/></operator><name pos:line="109" pos:column="32">dry_run<pos:position pos:line="109" pos:column="39"/></name></name></expr>)<pos:position pos:line="109" pos:column="40"/></condition><then pos:line="109" pos:column="40"> <block pos:line="109" pos:column="41">{
            <comment type="block" pos:line="110" pos:column="13">/* Check first to see if the dir already exists! */</comment>
            <expr_stmt><expr><call><name pos:line="111" pos:column="13">safe_mkdir<pos:position pos:line="111" pos:column="23"/></name><argument_list pos:line="111" pos:column="23">(<argument><expr><literal type="string" pos:line="111" pos:column="24">".libs"<pos:position pos:line="111" pos:column="31"/></literal></expr></argument>)<pos:position pos:line="111" pos:column="32"/></argument_list></call></expr>;<pos:position pos:line="111" pos:column="33"/></expr_stmt>
        }<pos:position pos:line="112" pos:column="10"/></block></then></if>

        <if pos:line="114" pos:column="9">if <condition pos:line="114" pos:column="12">(<expr><name><name pos:line="114" pos:column="13">cmd_data<pos:position pos:line="114" pos:column="21"/></name><operator pos:line="114" pos:column="21">-&gt;<pos:position pos:line="114" pos:column="26"/></operator><name pos:line="114" pos:column="23">output<pos:position pos:line="114" pos:column="29"/></name></name> <operator pos:line="114" pos:column="30">==<pos:position pos:line="114" pos:column="32"/></operator> <name pos:line="114" pos:column="33">otStaticLibraryOnly<pos:position pos:line="114" pos:column="52"/></name> <operator pos:line="114" pos:column="53">||<pos:position pos:line="114" pos:column="55"/></operator>
            <name><name pos:line="115" pos:column="13">cmd_data<pos:position pos:line="115" pos:column="21"/></name><operator pos:line="115" pos:column="21">-&gt;<pos:position pos:line="115" pos:column="26"/></operator><name pos:line="115" pos:column="23">output<pos:position pos:line="115" pos:column="29"/></name></name> <operator pos:line="115" pos:column="30">==<pos:position pos:line="115" pos:column="32"/></operator> <name pos:line="115" pos:column="33">otLibrary<pos:position pos:line="115" pos:column="42"/></name></expr>)<pos:position pos:line="115" pos:column="43"/></condition><then pos:line="115" pos:column="43"> <block pos:line="115" pos:column="44">{
<cpp:ifdef pos:line="116" pos:column="1">#<cpp:directive pos:line="116" pos:column="2">ifdef<pos:position pos:line="116" pos:column="7"/></cpp:directive> <name pos:line="116" pos:column="8">RANLIB<pos:position pos:line="116" pos:column="14"/></name></cpp:ifdef>
            <decl_stmt><decl><type><specifier pos:line="117" pos:column="13">const<pos:position pos:line="117" pos:column="18"/></specifier> <name pos:line="117" pos:column="19">char<pos:position pos:line="117" pos:column="23"/></name> <modifier pos:line="117" pos:column="24">*<pos:position pos:line="117" pos:column="25"/></modifier></type><name><name pos:line="117" pos:column="25">lib_args<pos:position pos:line="117" pos:column="33"/></name><index pos:line="117" pos:column="33">[<expr><literal type="number" pos:line="117" pos:column="34">3<pos:position pos:line="117" pos:column="35"/></literal></expr>]<pos:position pos:line="117" pos:column="36"/></index></name></decl>;<pos:position pos:line="117" pos:column="37"/></decl_stmt>
<cpp:endif pos:line="118" pos:column="1">#<cpp:directive pos:line="118" pos:column="2">endif<pos:position pos:line="118" pos:column="7"/></cpp:directive></cpp:endif>
            <comment type="block" pos:line="119" pos:column="13">/* Removes compiler! */</comment>
            <expr_stmt><expr><name><name pos:line="120" pos:column="13">cmd_data<pos:position pos:line="120" pos:column="21"/></name><operator pos:line="120" pos:column="21">-&gt;<pos:position pos:line="120" pos:column="26"/></operator><name pos:line="120" pos:column="23">program<pos:position pos:line="120" pos:column="30"/></name></name> <operator pos:line="120" pos:column="31">=<pos:position pos:line="120" pos:column="32"/></operator> <name pos:line="120" pos:column="33">LIBRARIAN<pos:position pos:line="120" pos:column="42"/></name></expr>;<pos:position pos:line="120" pos:column="43"/></expr_stmt>
            <expr_stmt><expr><call><name pos:line="121" pos:column="13">push_count_chars<pos:position pos:line="121" pos:column="29"/></name><argument_list pos:line="121" pos:column="29">(<argument><expr><name><name pos:line="121" pos:column="30">cmd_data<pos:position pos:line="121" pos:column="38"/></name><operator pos:line="121" pos:column="38">-&gt;<pos:position pos:line="121" pos:column="43"/></operator><name pos:line="121" pos:column="40">program_opts<pos:position pos:line="121" pos:column="52"/></name></name></expr></argument>, <argument><expr><name pos:line="121" pos:column="54">LIBRARIAN_OPTS<pos:position pos:line="121" pos:column="68"/></name></expr></argument>)<pos:position pos:line="121" pos:column="69"/></argument_list></call></expr>;<pos:position pos:line="121" pos:column="70"/></expr_stmt>
            <expr_stmt><expr><call><name pos:line="122" pos:column="13">push_count_chars<pos:position pos:line="122" pos:column="29"/></name><argument_list pos:line="122" pos:column="29">(<argument><expr><name><name pos:line="122" pos:column="30">cmd_data<pos:position pos:line="122" pos:column="38"/></name><operator pos:line="122" pos:column="38">-&gt;<pos:position pos:line="122" pos:column="43"/></operator><name pos:line="122" pos:column="40">program_opts<pos:position pos:line="122" pos:column="52"/></name></name></expr></argument>,
                             <argument><expr><name><name pos:line="123" pos:column="30">cmd_data<pos:position pos:line="123" pos:column="38"/></name><operator pos:line="123" pos:column="38">-&gt;<pos:position pos:line="123" pos:column="43"/></operator><name pos:line="123" pos:column="40">static_name<pos:position pos:line="123" pos:column="51"/></name><operator pos:line="123" pos:column="51">.<pos:position pos:line="123" pos:column="52"/></operator><name pos:line="123" pos:column="52">normal<pos:position pos:line="123" pos:column="58"/></name></name></expr></argument>)<pos:position pos:line="123" pos:column="59"/></argument_list></call></expr>;<pos:position pos:line="123" pos:column="60"/></expr_stmt>

            <expr_stmt><expr><name pos:line="125" pos:column="13">rv<pos:position pos:line="125" pos:column="15"/></name> <operator pos:line="125" pos:column="16">=<pos:position pos:line="125" pos:column="17"/></operator> <call><name pos:line="125" pos:column="18">run_command<pos:position pos:line="125" pos:column="29"/></name><argument_list pos:line="125" pos:column="29">(<argument><expr><name pos:line="125" pos:column="30">cmd_data<pos:position pos:line="125" pos:column="38"/></name></expr></argument>, <argument><expr><name><name pos:line="125" pos:column="40">cmd_data<pos:position pos:line="125" pos:column="48"/></name><operator pos:line="125" pos:column="48">-&gt;<pos:position pos:line="125" pos:column="53"/></operator><name pos:line="125" pos:column="50">obj_files<pos:position pos:line="125" pos:column="59"/></name></name></expr></argument>)<pos:position pos:line="125" pos:column="60"/></argument_list></call></expr>;<pos:position pos:line="125" pos:column="61"/></expr_stmt>
            <if pos:line="126" pos:column="13">if <condition pos:line="126" pos:column="16">(<expr><name pos:line="126" pos:column="17">rv<pos:position pos:line="126" pos:column="19"/></name></expr>)<pos:position pos:line="126" pos:column="20"/></condition><then pos:line="126" pos:column="20"> <block pos:line="126" pos:column="21">{
                <return pos:line="127" pos:column="17">return <expr><name pos:line="127" pos:column="24">rv<pos:position pos:line="127" pos:column="26"/></name></expr>;<pos:position pos:line="127" pos:column="27"/></return>
            }<pos:position pos:line="128" pos:column="14"/></block></then></if>

<cpp:ifdef pos:line="130" pos:column="1">#<cpp:directive pos:line="130" pos:column="2">ifdef<pos:position pos:line="130" pos:column="7"/></cpp:directive> <name pos:line="130" pos:column="8">RANLIB<pos:position pos:line="130" pos:column="14"/></name></cpp:ifdef>
            <expr_stmt><expr><name><name pos:line="131" pos:column="13">lib_args<pos:position pos:line="131" pos:column="21"/></name><index pos:line="131" pos:column="21">[<expr><literal type="number" pos:line="131" pos:column="22">0<pos:position pos:line="131" pos:column="23"/></literal></expr>]<pos:position pos:line="131" pos:column="24"/></index></name> <operator pos:line="131" pos:column="25">=<pos:position pos:line="131" pos:column="26"/></operator> <name pos:line="131" pos:column="27">RANLIB<pos:position pos:line="131" pos:column="33"/></name></expr>;<pos:position pos:line="131" pos:column="34"/></expr_stmt>
            <expr_stmt><expr><name><name pos:line="132" pos:column="13">lib_args<pos:position pos:line="132" pos:column="21"/></name><index pos:line="132" pos:column="21">[<expr><literal type="number" pos:line="132" pos:column="22">1<pos:position pos:line="132" pos:column="23"/></literal></expr>]<pos:position pos:line="132" pos:column="24"/></index></name> <operator pos:line="132" pos:column="25">=<pos:position pos:line="132" pos:column="26"/></operator> <name><name pos:line="132" pos:column="27">cmd_data<pos:position pos:line="132" pos:column="35"/></name><operator pos:line="132" pos:column="35">-&gt;<pos:position pos:line="132" pos:column="40"/></operator><name pos:line="132" pos:column="37">static_name<pos:position pos:line="132" pos:column="48"/></name><operator pos:line="132" pos:column="48">.<pos:position pos:line="132" pos:column="49"/></operator><name pos:line="132" pos:column="49">normal<pos:position pos:line="132" pos:column="55"/></name></name></expr>;<pos:position pos:line="132" pos:column="56"/></expr_stmt>
            <expr_stmt><expr><name><name pos:line="133" pos:column="13">lib_args<pos:position pos:line="133" pos:column="21"/></name><index pos:line="133" pos:column="21">[<expr><literal type="number" pos:line="133" pos:column="22">2<pos:position pos:line="133" pos:column="23"/></literal></expr>]<pos:position pos:line="133" pos:column="24"/></index></name> <operator pos:line="133" pos:column="25">=<pos:position pos:line="133" pos:column="26"/></operator> <name pos:line="133" pos:column="27">NULL<pos:position pos:line="133" pos:column="31"/></name></expr>;<pos:position pos:line="133" pos:column="32"/></expr_stmt>
            <expr_stmt><expr><call><name pos:line="134" pos:column="13">external_spawn<pos:position pos:line="134" pos:column="27"/></name><argument_list pos:line="134" pos:column="27">(<argument><expr><name pos:line="134" pos:column="28">cmd_data<pos:position pos:line="134" pos:column="36"/></name></expr></argument>, <argument><expr><name pos:line="134" pos:column="38">RANLIB<pos:position pos:line="134" pos:column="44"/></name></expr></argument>, <argument><expr><name pos:line="134" pos:column="46">lib_args<pos:position pos:line="134" pos:column="54"/></name></expr></argument>)<pos:position pos:line="134" pos:column="55"/></argument_list></call></expr>;<pos:position pos:line="134" pos:column="56"/></expr_stmt>
<cpp:endif pos:line="135" pos:column="1">#<cpp:directive pos:line="135" pos:column="2">endif<pos:position pos:line="135" pos:column="7"/></cpp:directive></cpp:endif>
        }<pos:position pos:line="136" pos:column="10"/></block></then></if>

        <if pos:line="138" pos:column="9">if <condition pos:line="138" pos:column="12">(<expr><name><name pos:line="138" pos:column="13">cmd_data<pos:position pos:line="138" pos:column="21"/></name><operator pos:line="138" pos:column="21">-&gt;<pos:position pos:line="138" pos:column="26"/></operator><name pos:line="138" pos:column="23">output<pos:position pos:line="138" pos:column="29"/></name></name> <operator pos:line="138" pos:column="30">==<pos:position pos:line="138" pos:column="32"/></operator> <name pos:line="138" pos:column="33">otDynamicLibraryOnly<pos:position pos:line="138" pos:column="53"/></name> <operator pos:line="138" pos:column="54">||<pos:position pos:line="138" pos:column="56"/></operator>
            <name><name pos:line="139" pos:column="13">cmd_data<pos:position pos:line="139" pos:column="21"/></name><operator pos:line="139" pos:column="21">-&gt;<pos:position pos:line="139" pos:column="26"/></operator><name pos:line="139" pos:column="23">output<pos:position pos:line="139" pos:column="29"/></name></name> <operator pos:line="139" pos:column="30">==<pos:position pos:line="139" pos:column="32"/></operator> <name pos:line="139" pos:column="33">otModule<pos:position pos:line="139" pos:column="41"/></name> <operator pos:line="139" pos:column="42">||<pos:position pos:line="139" pos:column="44"/></operator>
            <name><name pos:line="140" pos:column="13">cmd_data<pos:position pos:line="140" pos:column="21"/></name><operator pos:line="140" pos:column="21">-&gt;<pos:position pos:line="140" pos:column="26"/></operator><name pos:line="140" pos:column="23">output<pos:position pos:line="140" pos:column="29"/></name></name> <operator pos:line="140" pos:column="30">==<pos:position pos:line="140" pos:column="32"/></operator> <name pos:line="140" pos:column="33">otLibrary<pos:position pos:line="140" pos:column="42"/></name></expr>)<pos:position pos:line="140" pos:column="43"/></condition><then pos:line="140" pos:column="43"> <block pos:line="140" pos:column="44">{
            <expr_stmt><expr><name><name pos:line="141" pos:column="13">cmd_data<pos:position pos:line="141" pos:column="21"/></name><operator pos:line="141" pos:column="21">-&gt;<pos:position pos:line="141" pos:column="26"/></operator><name pos:line="141" pos:column="23">program<pos:position pos:line="141" pos:column="30"/></name></name> <operator pos:line="141" pos:column="31">=<pos:position pos:line="141" pos:column="32"/></operator> <name pos:line="141" pos:column="33">NULL<pos:position pos:line="141" pos:column="37"/></name></expr>;<pos:position pos:line="141" pos:column="38"/></expr_stmt>
            <expr_stmt><expr><call><name pos:line="142" pos:column="13">clear_count_chars<pos:position pos:line="142" pos:column="30"/></name><argument_list pos:line="142" pos:column="30">(<argument><expr><name><name pos:line="142" pos:column="31">cmd_data<pos:position pos:line="142" pos:column="39"/></name><operator pos:line="142" pos:column="39">-&gt;<pos:position pos:line="142" pos:column="44"/></operator><name pos:line="142" pos:column="41">program_opts<pos:position pos:line="142" pos:column="53"/></name></name></expr></argument>)<pos:position pos:line="142" pos:column="54"/></argument_list></call></expr>;<pos:position pos:line="142" pos:column="55"/></expr_stmt>

            <expr_stmt><expr><call><name pos:line="144" pos:column="13">append_count_chars<pos:position pos:line="144" pos:column="31"/></name><argument_list pos:line="144" pos:column="31">(<argument><expr><name><name pos:line="144" pos:column="32">cmd_data<pos:position pos:line="144" pos:column="40"/></name><operator pos:line="144" pos:column="40">-&gt;<pos:position pos:line="144" pos:column="45"/></operator><name pos:line="144" pos:column="42">program_opts<pos:position pos:line="144" pos:column="54"/></name></name></expr></argument>, <argument><expr><name><name pos:line="144" pos:column="56">cmd_data<pos:position pos:line="144" pos:column="64"/></name><operator pos:line="144" pos:column="64">-&gt;<pos:position pos:line="144" pos:column="69"/></operator><name pos:line="144" pos:column="66">arglist<pos:position pos:line="144" pos:column="73"/></name></name></expr></argument>)<pos:position pos:line="144" pos:column="74"/></argument_list></call></expr>;<pos:position pos:line="144" pos:column="75"/></expr_stmt>
            <if pos:line="145" pos:column="13">if <condition pos:line="145" pos:column="16">(<expr><name><name pos:line="145" pos:column="17">cmd_data<pos:position pos:line="145" pos:column="25"/></name><operator pos:line="145" pos:column="25">-&gt;<pos:position pos:line="145" pos:column="30"/></operator><name pos:line="145" pos:column="27">output<pos:position pos:line="145" pos:column="33"/></name></name> <operator pos:line="145" pos:column="34">==<pos:position pos:line="145" pos:column="36"/></operator> <name pos:line="145" pos:column="37">otModule<pos:position pos:line="145" pos:column="45"/></name></expr>)<pos:position pos:line="145" pos:column="46"/></condition><then pos:line="145" pos:column="46"> <block pos:line="145" pos:column="47">{
<cpp:ifdef pos:line="146" pos:column="1">#<cpp:directive pos:line="146" pos:column="2">ifdef<pos:position pos:line="146" pos:column="7"/></cpp:directive> <name pos:line="146" pos:column="8">MODULE_OPTS<pos:position pos:line="146" pos:column="19"/></name></cpp:ifdef>
                <expr_stmt><expr><call><name pos:line="147" pos:column="17">push_count_chars<pos:position pos:line="147" pos:column="33"/></name><argument_list pos:line="147" pos:column="33">(<argument><expr><name><name pos:line="147" pos:column="34">cmd_data<pos:position pos:line="147" pos:column="42"/></name><operator pos:line="147" pos:column="42">-&gt;<pos:position pos:line="147" pos:column="47"/></operator><name pos:line="147" pos:column="44">program_opts<pos:position pos:line="147" pos:column="56"/></name></name></expr></argument>, <argument><expr><name pos:line="147" pos:column="58">MODULE_OPTS<pos:position pos:line="147" pos:column="69"/></name></expr></argument>)<pos:position pos:line="147" pos:column="70"/></argument_list></call></expr>;<pos:position pos:line="147" pos:column="71"/></expr_stmt>
<cpp:endif pos:line="148" pos:column="1">#<cpp:directive pos:line="148" pos:column="2">endif<pos:position pos:line="148" pos:column="7"/></cpp:directive></cpp:endif>
            }<pos:position pos:line="149" pos:column="14"/></block></then> <else pos:line="149" pos:column="15">else <block pos:line="149" pos:column="20">{
<cpp:ifdef pos:line="150" pos:column="1">#<cpp:directive pos:line="150" pos:column="2">ifdef<pos:position pos:line="150" pos:column="7"/></cpp:directive> <name pos:line="150" pos:column="8">SHARED_OPTS<pos:position pos:line="150" pos:column="19"/></name></cpp:ifdef>
                <expr_stmt><expr><call><name pos:line="151" pos:column="17">push_count_chars<pos:position pos:line="151" pos:column="33"/></name><argument_list pos:line="151" pos:column="33">(<argument><expr><name><name pos:line="151" pos:column="34">cmd_data<pos:position pos:line="151" pos:column="42"/></name><operator pos:line="151" pos:column="42">-&gt;<pos:position pos:line="151" pos:column="47"/></operator><name pos:line="151" pos:column="44">program_opts<pos:position pos:line="151" pos:column="56"/></name></name></expr></argument>, <argument><expr><name pos:line="151" pos:column="58">SHARED_OPTS<pos:position pos:line="151" pos:column="69"/></name></expr></argument>)<pos:position pos:line="151" pos:column="70"/></argument_list></call></expr>;<pos:position pos:line="151" pos:column="71"/></expr_stmt>
<cpp:endif pos:line="152" pos:column="1">#<cpp:directive pos:line="152" pos:column="2">endif<pos:position pos:line="152" pos:column="7"/></cpp:directive></cpp:endif>
<cpp:ifdef pos:line="153" pos:column="1">#<cpp:directive pos:line="153" pos:column="2">ifdef<pos:position pos:line="153" pos:column="7"/></cpp:directive> <name pos:line="153" pos:column="8">dynamic_link_version_func<pos:position pos:line="153" pos:column="33"/></name></cpp:ifdef>
                <expr_stmt><expr><call><name pos:line="154" pos:column="17">push_count_chars<pos:position pos:line="154" pos:column="33"/></name><argument_list pos:line="154" pos:column="33">(<argument><expr><name><name pos:line="154" pos:column="34">cmd_data<pos:position pos:line="154" pos:column="42"/></name><operator pos:line="154" pos:column="42">-&gt;<pos:position pos:line="154" pos:column="47"/></operator><name pos:line="154" pos:column="44">program_opts<pos:position pos:line="154" pos:column="56"/></name></name></expr></argument>,
                             <argument><expr><call><name pos:line="155" pos:column="30">dynamic_link_version_func<pos:position pos:line="155" pos:column="55"/></name><argument_list pos:line="155" pos:column="55">(<argument><expr><name><name pos:line="155" pos:column="56">cmd_data<pos:position pos:line="155" pos:column="64"/></name><operator pos:line="155" pos:column="64">-&gt;<pos:position pos:line="155" pos:column="69"/></operator><name pos:line="155" pos:column="66">version_info<pos:position pos:line="155" pos:column="78"/></name></name></expr></argument>)<pos:position pos:line="155" pos:column="79"/></argument_list></call></expr></argument>)<pos:position pos:line="155" pos:column="80"/></argument_list></call></expr>;<pos:position pos:line="155" pos:column="81"/></expr_stmt>
<cpp:endif pos:line="156" pos:column="1">#<cpp:directive pos:line="156" pos:column="2">endif<pos:position pos:line="156" pos:column="7"/></cpp:directive></cpp:endif>
            }<pos:position pos:line="157" pos:column="14"/></block></else></if>
            <expr_stmt><expr><call><name pos:line="158" pos:column="13">add_dynamic_link_opts<pos:position pos:line="158" pos:column="34"/></name><argument_list pos:line="158" pos:column="34">(<argument><expr><name pos:line="158" pos:column="35">cmd_data<pos:position pos:line="158" pos:column="43"/></name></expr></argument>, <argument><expr><name><name pos:line="158" pos:column="45">cmd_data<pos:position pos:line="158" pos:column="53"/></name><operator pos:line="158" pos:column="53">-&gt;<pos:position pos:line="158" pos:column="58"/></operator><name pos:line="158" pos:column="55">program_opts<pos:position pos:line="158" pos:column="67"/></name></name></expr></argument>)<pos:position pos:line="158" pos:column="68"/></argument_list></call></expr>;<pos:position pos:line="158" pos:column="69"/></expr_stmt>

            <expr_stmt><expr><name pos:line="160" pos:column="13">rv<pos:position pos:line="160" pos:column="15"/></name> <operator pos:line="160" pos:column="16">=<pos:position pos:line="160" pos:column="17"/></operator> <call><name pos:line="160" pos:column="18">run_command<pos:position pos:line="160" pos:column="29"/></name><argument_list pos:line="160" pos:column="29">(<argument><expr><name pos:line="160" pos:column="30">cmd_data<pos:position pos:line="160" pos:column="38"/></name></expr></argument>, <argument><expr><name><name pos:line="160" pos:column="40">cmd_data<pos:position pos:line="160" pos:column="48"/></name><operator pos:line="160" pos:column="48">-&gt;<pos:position pos:line="160" pos:column="53"/></operator><name pos:line="160" pos:column="50">shared_opts<pos:position pos:line="160" pos:column="61"/></name><operator pos:line="160" pos:column="61">.<pos:position pos:line="160" pos:column="62"/></operator><name pos:line="160" pos:column="62">normal<pos:position pos:line="160" pos:column="68"/></name></name></expr></argument>)<pos:position pos:line="160" pos:column="69"/></argument_list></call></expr>;<pos:position pos:line="160" pos:column="70"/></expr_stmt>
            <if pos:line="161" pos:column="13">if <condition pos:line="161" pos:column="16">(<expr><name pos:line="161" pos:column="17">rv<pos:position pos:line="161" pos:column="19"/></name></expr>)<pos:position pos:line="161" pos:column="20"/></condition><then pos:line="161" pos:column="20"> <block pos:line="161" pos:column="21">{
                <return pos:line="162" pos:column="17">return <expr><name pos:line="162" pos:column="24">rv<pos:position pos:line="162" pos:column="26"/></name></expr>;<pos:position pos:line="162" pos:column="27"/></return>
            }<pos:position pos:line="163" pos:column="14"/></block></then></if>
        }<pos:position pos:line="164" pos:column="10"/></block></then></if>
        <if pos:line="165" pos:column="9">if <condition pos:line="165" pos:column="12">(<expr><name><name pos:line="165" pos:column="13">cmd_data<pos:position pos:line="165" pos:column="21"/></name><operator pos:line="165" pos:column="21">-&gt;<pos:position pos:line="165" pos:column="26"/></operator><name pos:line="165" pos:column="23">output<pos:position pos:line="165" pos:column="29"/></name></name> <operator pos:line="165" pos:column="30">==<pos:position pos:line="165" pos:column="32"/></operator> <name pos:line="165" pos:column="33">otProgram<pos:position pos:line="165" pos:column="42"/></name></expr>)<pos:position pos:line="165" pos:column="43"/></condition><then pos:line="165" pos:column="43"> <block pos:line="165" pos:column="44">{
            <expr_stmt><expr><name pos:line="166" pos:column="13">rv<pos:position pos:line="166" pos:column="15"/></name> <operator pos:line="166" pos:column="16">=<pos:position pos:line="166" pos:column="17"/></operator> <call><name pos:line="166" pos:column="18">run_command<pos:position pos:line="166" pos:column="29"/></name><argument_list pos:line="166" pos:column="29">(<argument><expr><name pos:line="166" pos:column="30">cmd_data<pos:position pos:line="166" pos:column="38"/></name></expr></argument>, <argument><expr><name><name pos:line="166" pos:column="40">cmd_data<pos:position pos:line="166" pos:column="48"/></name><operator pos:line="166" pos:column="48">-&gt;<pos:position pos:line="166" pos:column="53"/></operator><name pos:line="166" pos:column="50">arglist<pos:position pos:line="166" pos:column="57"/></name></name></expr></argument>)<pos:position pos:line="166" pos:column="58"/></argument_list></call></expr>;<pos:position pos:line="166" pos:column="59"/></expr_stmt>
            <if pos:line="167" pos:column="13">if <condition pos:line="167" pos:column="16">(<expr><name pos:line="167" pos:column="17">rv<pos:position pos:line="167" pos:column="19"/></name></expr>)<pos:position pos:line="167" pos:column="20"/></condition><then pos:line="167" pos:column="20"> <block pos:line="167" pos:column="21">{
                <return pos:line="168" pos:column="17">return <expr><name pos:line="168" pos:column="24">rv<pos:position pos:line="168" pos:column="26"/></name></expr>;<pos:position pos:line="168" pos:column="27"/></return>
            }<pos:position pos:line="169" pos:column="14"/></block></then></if>
        }<pos:position pos:line="170" pos:column="10"/></block></then></if>
        <break pos:line="171" pos:column="9">break;<pos:position pos:line="171" pos:column="15"/></break>
    <default pos:line="172" pos:column="5">default:<pos:position pos:line="172" pos:column="13"/></default>
        <break pos:line="173" pos:column="9">break;<pos:position pos:line="173" pos:column="15"/></break>
    }<pos:position pos:line="174" pos:column="6"/></block></switch> 

    <return pos:line="176" pos:column="5">return <expr><literal type="number" pos:line="176" pos:column="12">0<pos:position pos:line="176" pos:column="13"/></literal></expr>;<pos:position pos:line="176" pos:column="14"/></return>
}<pos:position pos:line="177" pos:column="2"/></block></function></unit>

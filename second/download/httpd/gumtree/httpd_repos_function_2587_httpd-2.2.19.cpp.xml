<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/httpd/gumtree/httpd_repos_function_2587_httpd-2.2.19.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">void<pos:position pos:line="1" pos:column="12"/></name></type> <name pos:line="1" pos:column="13">server_maintenance<pos:position pos:line="1" pos:column="31"/></name><parameter_list pos:line="1" pos:column="31">(<parameter><decl><type><name pos:line="1" pos:column="32">void<pos:position pos:line="1" pos:column="36"/></name> <modifier pos:line="1" pos:column="37">*<pos:position pos:line="1" pos:column="38"/></modifier></type><name pos:line="1" pos:column="38">vpArg<pos:position pos:line="1" pos:column="43"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="44"/></parameter_list>
<block pos:line="2" pos:column="1">{
    <decl_stmt><decl><type><name pos:line="3" pos:column="5">int<pos:position pos:line="3" pos:column="8"/></name></type> <name pos:line="3" pos:column="9">num_idle<pos:position pos:line="3" pos:column="17"/></name></decl>, <decl><type ref="prev"/><name pos:line="3" pos:column="19">num_needed<pos:position pos:line="3" pos:column="29"/></name></decl>;<pos:position pos:line="3" pos:column="30"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="4" pos:column="5">ULONG<pos:position pos:line="4" pos:column="10"/></name></type> <name pos:line="4" pos:column="11">num_pending<pos:position pos:line="4" pos:column="22"/></name> <init pos:line="4" pos:column="23">= <expr><literal type="number" pos:line="4" pos:column="25">0<pos:position pos:line="4" pos:column="26"/></literal></expr></init></decl>;<pos:position pos:line="4" pos:column="27"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="5" pos:column="5">int<pos:position pos:line="5" pos:column="8"/></name></type> <name pos:line="5" pos:column="9">threadnum<pos:position pos:line="5" pos:column="18"/></name></decl>;<pos:position pos:line="5" pos:column="19"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="6" pos:column="5">HQUEUE<pos:position pos:line="6" pos:column="11"/></name></type> <name pos:line="6" pos:column="12">workq<pos:position pos:line="6" pos:column="17"/></name></decl>;<pos:position pos:line="6" pos:column="18"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="7" pos:column="5">ULONG<pos:position pos:line="7" pos:column="10"/></name></type> <name pos:line="7" pos:column="11">rc<pos:position pos:line="7" pos:column="13"/></name></decl>;<pos:position pos:line="7" pos:column="14"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="8" pos:column="5">PID<pos:position pos:line="8" pos:column="8"/></name></type> <name pos:line="8" pos:column="9">owner<pos:position pos:line="8" pos:column="14"/></name></decl>;<pos:position pos:line="8" pos:column="15"/></decl_stmt>

    <expr_stmt><expr><name pos:line="10" pos:column="5">rc<pos:position pos:line="10" pos:column="7"/></name> <operator pos:line="10" pos:column="8">=<pos:position pos:line="10" pos:column="9"/></operator> <call><name pos:line="10" pos:column="10">DosOpenQueue<pos:position pos:line="10" pos:column="22"/></name><argument_list pos:line="10" pos:column="22">(<argument><expr><operator pos:line="10" pos:column="23">&amp;<pos:position pos:line="10" pos:column="28"/></operator><name pos:line="10" pos:column="24">owner<pos:position pos:line="10" pos:column="29"/></name></expr></argument>, <argument><expr><operator pos:line="10" pos:column="31">&amp;<pos:position pos:line="10" pos:column="36"/></operator><name pos:line="10" pos:column="32">workq<pos:position pos:line="10" pos:column="37"/></name></expr></argument>,
                      <argument><expr><call><name pos:line="11" pos:column="23">apr_psprintf<pos:position pos:line="11" pos:column="35"/></name><argument_list pos:line="11" pos:column="35">(<argument><expr><name pos:line="11" pos:column="36">pchild<pos:position pos:line="11" pos:column="42"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="11" pos:column="44">"/queues/httpd/work.%d"<pos:position pos:line="11" pos:column="67"/></literal></expr></argument>, <argument><expr><call><name pos:line="11" pos:column="69">getpid<pos:position pos:line="11" pos:column="75"/></name><argument_list pos:line="11" pos:column="75">()<pos:position pos:line="11" pos:column="77"/></argument_list></call></expr></argument>)<pos:position pos:line="11" pos:column="78"/></argument_list></call></expr></argument>)<pos:position pos:line="11" pos:column="79"/></argument_list></call></expr>;<pos:position pos:line="11" pos:column="80"/></expr_stmt>

    <if pos:line="13" pos:column="5">if <condition pos:line="13" pos:column="8">(<expr><name pos:line="13" pos:column="9">rc<pos:position pos:line="13" pos:column="11"/></name></expr>)<pos:position pos:line="13" pos:column="12"/></condition><then pos:line="13" pos:column="12"> <block pos:line="13" pos:column="13">{
        <expr_stmt><expr><call><name pos:line="14" pos:column="9">ap_log_error<pos:position pos:line="14" pos:column="21"/></name><argument_list pos:line="14" pos:column="21">(<argument><expr><name pos:line="14" pos:column="22">APLOG_MARK<pos:position pos:line="14" pos:column="32"/></name></expr></argument>, <argument><expr><name pos:line="14" pos:column="34">APLOG_ERR<pos:position pos:line="14" pos:column="43"/></name></expr></argument>, <argument><expr><call><name pos:line="14" pos:column="45">APR_FROM_OS_ERROR<pos:position pos:line="14" pos:column="62"/></name><argument_list pos:line="14" pos:column="62">(<argument><expr><name pos:line="14" pos:column="63">rc<pos:position pos:line="14" pos:column="65"/></name></expr></argument>)<pos:position pos:line="14" pos:column="66"/></argument_list></call></expr></argument>, <argument><expr><name pos:line="14" pos:column="68">ap_server_conf<pos:position pos:line="14" pos:column="82"/></name></expr></argument>,
                     <argument><expr><literal type="string" pos:line="15" pos:column="22">"unable to open work queue in maintenance thread"<pos:position pos:line="15" pos:column="71"/></literal></expr></argument>)<pos:position pos:line="15" pos:column="72"/></argument_list></call></expr>;<pos:position pos:line="15" pos:column="73"/></expr_stmt>
        <return pos:line="16" pos:column="9">return;<pos:position pos:line="16" pos:column="16"/></return>
    }<pos:position pos:line="17" pos:column="6"/></block></then></if>

    <do pos:line="19" pos:column="5">do <block pos:line="19" pos:column="8">{
        <for pos:line="20" pos:column="9">for <control pos:line="20" pos:column="13">(<init><expr><name pos:line="20" pos:column="14">num_idle<pos:position pos:line="20" pos:column="22"/></name><operator pos:line="20" pos:column="22">=<pos:position pos:line="20" pos:column="23"/></operator><literal type="number" pos:line="20" pos:column="23">0<pos:position pos:line="20" pos:column="24"/></literal></expr><operator pos:line="20" pos:column="24">,<pos:position pos:line="20" pos:column="25"/></operator> <expr><name pos:line="20" pos:column="26">threadnum<pos:position pos:line="20" pos:column="35"/></name><operator pos:line="20" pos:column="35">=<pos:position pos:line="20" pos:column="36"/></operator><literal type="number" pos:line="20" pos:column="36">0<pos:position pos:line="20" pos:column="37"/></literal></expr>;<pos:position pos:line="20" pos:column="38"/></init> <condition><expr><name pos:line="20" pos:column="39">threadnum<pos:position pos:line="20" pos:column="48"/></name> <operator pos:line="20" pos:column="49">&lt;<pos:position pos:line="20" pos:column="53"/></operator> <name pos:line="20" pos:column="51">HARD_THREAD_LIMIT<pos:position pos:line="20" pos:column="68"/></name></expr>;<pos:position pos:line="20" pos:column="69"/></condition> <incr><expr><name pos:line="20" pos:column="70">threadnum<pos:position pos:line="20" pos:column="79"/></name><operator pos:line="20" pos:column="79">++<pos:position pos:line="20" pos:column="81"/></operator></expr></incr>)<pos:position pos:line="20" pos:column="82"/></control> <block pos:line="20" pos:column="83">{
            <expr_stmt><expr><name pos:line="21" pos:column="13">num_idle<pos:position pos:line="21" pos:column="21"/></name> <operator pos:line="21" pos:column="22">+=<pos:position pos:line="21" pos:column="24"/></operator> <name><name pos:line="21" pos:column="25">ap_scoreboard_image<pos:position pos:line="21" pos:column="44"/></name><operator pos:line="21" pos:column="44">-&gt;<pos:position pos:line="21" pos:column="49"/></operator><name pos:line="21" pos:column="46">servers<pos:position pos:line="21" pos:column="53"/></name><index pos:line="21" pos:column="53">[<expr><name pos:line="21" pos:column="54">child_slot<pos:position pos:line="21" pos:column="64"/></name></expr>]<pos:position pos:line="21" pos:column="65"/></index><index pos:line="21" pos:column="65">[<expr><name pos:line="21" pos:column="66">threadnum<pos:position pos:line="21" pos:column="75"/></name></expr>]<pos:position pos:line="21" pos:column="76"/></index></name><operator pos:line="21" pos:column="76">.<pos:position pos:line="21" pos:column="77"/></operator><name pos:line="21" pos:column="77">status<pos:position pos:line="21" pos:column="83"/></name> <operator pos:line="21" pos:column="84">==<pos:position pos:line="21" pos:column="86"/></operator> <name pos:line="21" pos:column="87">SERVER_READY<pos:position pos:line="21" pos:column="99"/></name></expr>;<pos:position pos:line="21" pos:column="100"/></expr_stmt>
        }<pos:position pos:line="22" pos:column="10"/></block></for>

        <expr_stmt><expr><call><name pos:line="24" pos:column="9">DosQueryQueue<pos:position pos:line="24" pos:column="22"/></name><argument_list pos:line="24" pos:column="22">(<argument><expr><name pos:line="24" pos:column="23">workq<pos:position pos:line="24" pos:column="28"/></name></expr></argument>, <argument><expr><operator pos:line="24" pos:column="30">&amp;<pos:position pos:line="24" pos:column="35"/></operator><name pos:line="24" pos:column="31">num_pending<pos:position pos:line="24" pos:column="42"/></name></expr></argument>)<pos:position pos:line="24" pos:column="43"/></argument_list></call></expr>;<pos:position pos:line="24" pos:column="44"/></expr_stmt>
        <expr_stmt><expr><name pos:line="25" pos:column="9">num_needed<pos:position pos:line="25" pos:column="19"/></name> <operator pos:line="25" pos:column="20">=<pos:position pos:line="25" pos:column="21"/></operator> <name pos:line="25" pos:column="22">ap_min_spare_threads<pos:position pos:line="25" pos:column="42"/></name> <operator pos:line="25" pos:column="43">-<pos:position pos:line="25" pos:column="44"/></operator> <name pos:line="25" pos:column="45">num_idle<pos:position pos:line="25" pos:column="53"/></name> <operator pos:line="25" pos:column="54">+<pos:position pos:line="25" pos:column="55"/></operator> <name pos:line="25" pos:column="56">num_pending<pos:position pos:line="25" pos:column="67"/></name></expr>;<pos:position pos:line="25" pos:column="68"/></expr_stmt>

        <if pos:line="27" pos:column="9">if <condition pos:line="27" pos:column="12">(<expr><name pos:line="27" pos:column="13">num_needed<pos:position pos:line="27" pos:column="23"/></name> <operator pos:line="27" pos:column="24">&gt;<pos:position pos:line="27" pos:column="28"/></operator> <literal type="number" pos:line="27" pos:column="26">0<pos:position pos:line="27" pos:column="27"/></literal></expr>)<pos:position pos:line="27" pos:column="28"/></condition><then pos:line="27" pos:column="28"> <block pos:line="27" pos:column="29">{
            <for pos:line="28" pos:column="13">for <control pos:line="28" pos:column="17">(<init><expr><name pos:line="28" pos:column="18">threadnum<pos:position pos:line="28" pos:column="27"/></name><operator pos:line="28" pos:column="27">=<pos:position pos:line="28" pos:column="28"/></operator><literal type="number" pos:line="28" pos:column="28">0<pos:position pos:line="28" pos:column="29"/></literal></expr>;<pos:position pos:line="28" pos:column="30"/></init> <condition><expr><name pos:line="28" pos:column="31">threadnum<pos:position pos:line="28" pos:column="40"/></name> <operator pos:line="28" pos:column="41">&lt;<pos:position pos:line="28" pos:column="45"/></operator> <name pos:line="28" pos:column="43">num_needed<pos:position pos:line="28" pos:column="53"/></name></expr>;<pos:position pos:line="28" pos:column="54"/></condition> <incr><expr><name pos:line="28" pos:column="55">threadnum<pos:position pos:line="28" pos:column="64"/></name><operator pos:line="28" pos:column="64">++<pos:position pos:line="28" pos:column="66"/></operator></expr></incr>)<pos:position pos:line="28" pos:column="67"/></control> <block pos:line="28" pos:column="68">{
                <expr_stmt><expr><call><name pos:line="29" pos:column="17">add_worker<pos:position pos:line="29" pos:column="27"/></name><argument_list pos:line="29" pos:column="27">()<pos:position pos:line="29" pos:column="29"/></argument_list></call></expr>;<pos:position pos:line="29" pos:column="30"/></expr_stmt>
            }<pos:position pos:line="30" pos:column="14"/></block></for>
        }<pos:position pos:line="31" pos:column="10"/></block></then></if>

        <if pos:line="33" pos:column="9">if <condition pos:line="33" pos:column="12">(<expr><name pos:line="33" pos:column="13">num_idle<pos:position pos:line="33" pos:column="21"/></name> <operator pos:line="33" pos:column="22">-<pos:position pos:line="33" pos:column="23"/></operator> <name pos:line="33" pos:column="24">num_pending<pos:position pos:line="33" pos:column="35"/></name> <operator pos:line="33" pos:column="36">&gt;<pos:position pos:line="33" pos:column="40"/></operator> <name pos:line="33" pos:column="38">ap_max_spare_threads<pos:position pos:line="33" pos:column="58"/></name></expr>)<pos:position pos:line="33" pos:column="59"/></condition><then pos:line="33" pos:column="59"> <block pos:line="33" pos:column="60">{
            <expr_stmt><expr><call><name pos:line="34" pos:column="13">DosWriteQueue<pos:position pos:line="34" pos:column="26"/></name><argument_list pos:line="34" pos:column="26">(<argument><expr><name pos:line="34" pos:column="27">workq<pos:position pos:line="34" pos:column="32"/></name></expr></argument>, <argument><expr><name pos:line="34" pos:column="34">WORKTYPE_EXIT<pos:position pos:line="34" pos:column="47"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="34" pos:column="49">0<pos:position pos:line="34" pos:column="50"/></literal></expr></argument>, <argument><expr><name pos:line="34" pos:column="52">NULL<pos:position pos:line="34" pos:column="56"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="34" pos:column="58">0<pos:position pos:line="34" pos:column="59"/></literal></expr></argument>)<pos:position pos:line="34" pos:column="60"/></argument_list></call></expr>;<pos:position pos:line="34" pos:column="61"/></expr_stmt>
        }<pos:position pos:line="35" pos:column="10"/></block></then></if>
    }<pos:position pos:line="36" pos:column="6"/></block> while <condition pos:line="36" pos:column="13">(<expr><call><name pos:line="36" pos:column="14">DosWaitEventSem<pos:position pos:line="36" pos:column="29"/></name><argument_list pos:line="36" pos:column="29">(<argument><expr><name pos:line="36" pos:column="30">shutdown_event<pos:position pos:line="36" pos:column="44"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="36" pos:column="46">500<pos:position pos:line="36" pos:column="49"/></literal></expr></argument>)<pos:position pos:line="36" pos:column="50"/></argument_list></call> <operator pos:line="36" pos:column="51">==<pos:position pos:line="36" pos:column="53"/></operator> <name pos:line="36" pos:column="54">ERROR_TIMEOUT<pos:position pos:line="36" pos:column="67"/></name></expr>)<pos:position pos:line="36" pos:column="68"/></condition>;<pos:position pos:line="36" pos:column="69"/></do>
}<pos:position pos:line="37" pos:column="2"/></block></function></unit>

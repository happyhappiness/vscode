<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/httpd/gumtree/httpd_repos_function_3234_httpd-2.2.23.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">void<pos:position pos:line="1" pos:column="12"/></name> <name pos:line="1" pos:column="13">PTRCALL<pos:position pos:line="1" pos:column="20"/></name></type>
<name pos:line="2" pos:column="1">latin1_toUtf8<pos:position pos:line="2" pos:column="14"/></name><parameter_list pos:line="2" pos:column="14">(<parameter><decl><type><specifier pos:line="2" pos:column="15">const<pos:position pos:line="2" pos:column="20"/></specifier> <name pos:line="2" pos:column="21">ENCODING<pos:position pos:line="2" pos:column="29"/></name> <modifier pos:line="2" pos:column="30">*<pos:position pos:line="2" pos:column="31"/></modifier></type><name pos:line="2" pos:column="31">enc<pos:position pos:line="2" pos:column="34"/></name></decl></parameter>,
              <parameter><decl><type><specifier pos:line="3" pos:column="15">const<pos:position pos:line="3" pos:column="20"/></specifier> <name pos:line="3" pos:column="21">char<pos:position pos:line="3" pos:column="25"/></name> <modifier pos:line="3" pos:column="26">*<pos:position pos:line="3" pos:column="27"/></modifier><modifier pos:line="3" pos:column="27">*<pos:position pos:line="3" pos:column="28"/></modifier></type><name pos:line="3" pos:column="28">fromP<pos:position pos:line="3" pos:column="33"/></name></decl></parameter>, <parameter><decl><type><specifier pos:line="3" pos:column="35">const<pos:position pos:line="3" pos:column="40"/></specifier> <name pos:line="3" pos:column="41">char<pos:position pos:line="3" pos:column="45"/></name> <modifier pos:line="3" pos:column="46">*<pos:position pos:line="3" pos:column="47"/></modifier></type><name pos:line="3" pos:column="47">fromLim<pos:position pos:line="3" pos:column="54"/></name></decl></parameter>,
              <parameter><decl><type><name pos:line="4" pos:column="15">char<pos:position pos:line="4" pos:column="19"/></name> <modifier pos:line="4" pos:column="20">*<pos:position pos:line="4" pos:column="21"/></modifier><modifier pos:line="4" pos:column="21">*<pos:position pos:line="4" pos:column="22"/></modifier></type><name pos:line="4" pos:column="22">toP<pos:position pos:line="4" pos:column="25"/></name></decl></parameter>, <parameter><decl><type><specifier pos:line="4" pos:column="27">const<pos:position pos:line="4" pos:column="32"/></specifier> <name pos:line="4" pos:column="33">char<pos:position pos:line="4" pos:column="37"/></name> <modifier pos:line="4" pos:column="38">*<pos:position pos:line="4" pos:column="39"/></modifier></type><name pos:line="4" pos:column="39">toLim<pos:position pos:line="4" pos:column="44"/></name></decl></parameter>)<pos:position pos:line="4" pos:column="45"/></parameter_list>
<block pos:line="5" pos:column="1">{
  <for pos:line="6" pos:column="3">for <control pos:line="6" pos:column="7">(<init pos:line="6" pos:column="8">;<pos:position pos:line="6" pos:column="9"/></init><condition pos:line="6" pos:column="9">;<pos:position pos:line="6" pos:column="10"/></condition><incr/>)<pos:position pos:line="6" pos:column="11"/></control> <block pos:line="6" pos:column="12">{
    <decl_stmt><decl><type><name pos:line="7" pos:column="5">unsigned<pos:position pos:line="7" pos:column="13"/></name> <name pos:line="7" pos:column="14">char<pos:position pos:line="7" pos:column="18"/></name></type> <name pos:line="7" pos:column="19">c<pos:position pos:line="7" pos:column="20"/></name></decl>;<pos:position pos:line="7" pos:column="21"/></decl_stmt>
    <if pos:line="8" pos:column="5">if <condition pos:line="8" pos:column="8">(<expr><operator pos:line="8" pos:column="9">*<pos:position pos:line="8" pos:column="10"/></operator><name pos:line="8" pos:column="10">fromP<pos:position pos:line="8" pos:column="15"/></name> <operator pos:line="8" pos:column="16">==<pos:position pos:line="8" pos:column="18"/></operator> <name pos:line="8" pos:column="19">fromLim<pos:position pos:line="8" pos:column="26"/></name></expr>)<pos:position pos:line="8" pos:column="27"/></condition><then pos:line="8" pos:column="27">
      <block type="pseudo"><break pos:line="9" pos:column="7">break;<pos:position pos:line="9" pos:column="13"/></break></block></then></if>
    <expr_stmt><expr><name pos:line="10" pos:column="5">c<pos:position pos:line="10" pos:column="6"/></name> <operator pos:line="10" pos:column="7">=<pos:position pos:line="10" pos:column="8"/></operator> <operator pos:line="10" pos:column="9">(<pos:position pos:line="10" pos:column="10"/></operator><name pos:line="10" pos:column="10">unsigned<pos:position pos:line="10" pos:column="18"/></name> <name pos:line="10" pos:column="19">char<pos:position pos:line="10" pos:column="23"/></name><operator pos:line="10" pos:column="23">)<pos:position pos:line="10" pos:column="24"/></operator><operator pos:line="10" pos:column="24">*<pos:position pos:line="10" pos:column="25"/></operator><operator pos:line="10" pos:column="25">*<pos:position pos:line="10" pos:column="26"/></operator><name pos:line="10" pos:column="26">fromP<pos:position pos:line="10" pos:column="31"/></name></expr>;<pos:position pos:line="10" pos:column="32"/></expr_stmt>
    <if pos:line="11" pos:column="5">if <condition pos:line="11" pos:column="8">(<expr><name pos:line="11" pos:column="9">c<pos:position pos:line="11" pos:column="10"/></name> <operator pos:line="11" pos:column="11">&amp;<pos:position pos:line="11" pos:column="16"/></operator> <literal type="number" pos:line="11" pos:column="13">0x80<pos:position pos:line="11" pos:column="17"/></literal></expr>)<pos:position pos:line="11" pos:column="18"/></condition><then pos:line="11" pos:column="18"> <block pos:line="11" pos:column="19">{
      <if pos:line="12" pos:column="7">if <condition pos:line="12" pos:column="10">(<expr><name pos:line="12" pos:column="11">toLim<pos:position pos:line="12" pos:column="16"/></name> <operator pos:line="12" pos:column="17">-<pos:position pos:line="12" pos:column="18"/></operator> <operator pos:line="12" pos:column="19">*<pos:position pos:line="12" pos:column="20"/></operator><name pos:line="12" pos:column="20">toP<pos:position pos:line="12" pos:column="23"/></name> <operator pos:line="12" pos:column="24">&lt;<pos:position pos:line="12" pos:column="28"/></operator> <literal type="number" pos:line="12" pos:column="26">2<pos:position pos:line="12" pos:column="27"/></literal></expr>)<pos:position pos:line="12" pos:column="28"/></condition><then pos:line="12" pos:column="28">
        <block type="pseudo"><break pos:line="13" pos:column="9">break;<pos:position pos:line="13" pos:column="15"/></break></block></then></if>
      <expr_stmt><expr><operator pos:line="14" pos:column="7">*<pos:position pos:line="14" pos:column="8"/></operator><operator pos:line="14" pos:column="8">(<pos:position pos:line="14" pos:column="9"/></operator><operator pos:line="14" pos:column="9">*<pos:position pos:line="14" pos:column="10"/></operator><name pos:line="14" pos:column="10">toP<pos:position pos:line="14" pos:column="13"/></name><operator pos:line="14" pos:column="13">)<pos:position pos:line="14" pos:column="14"/></operator><operator pos:line="14" pos:column="14">++<pos:position pos:line="14" pos:column="16"/></operator> <operator pos:line="14" pos:column="17">=<pos:position pos:line="14" pos:column="18"/></operator> <call pos:line="14" pos:column="19">(<name pos:line="14" pos:column="20">char<pos:position pos:line="14" pos:column="24"/></name>)<argument_list pos:line="14" pos:column="25">(<argument><expr><operator pos:line="14" pos:column="26">(<pos:position pos:line="14" pos:column="27"/></operator><name pos:line="14" pos:column="27">c<pos:position pos:line="14" pos:column="28"/></name> <operator pos:line="14" pos:column="29">&gt;&gt;<pos:position pos:line="14" pos:column="34"/></operator> <literal type="number" pos:line="14" pos:column="32">6<pos:position pos:line="14" pos:column="33"/></literal><operator pos:line="14" pos:column="33">)<pos:position pos:line="14" pos:column="34"/></operator> <operator pos:line="14" pos:column="35">|<pos:position pos:line="14" pos:column="36"/></operator> <name pos:line="14" pos:column="37">UTF8_cval2<pos:position pos:line="14" pos:column="47"/></name></expr></argument>)<pos:position pos:line="14" pos:column="48"/></argument_list></call></expr>;<pos:position pos:line="14" pos:column="49"/></expr_stmt>
      <expr_stmt><expr><operator pos:line="15" pos:column="7">*<pos:position pos:line="15" pos:column="8"/></operator><operator pos:line="15" pos:column="8">(<pos:position pos:line="15" pos:column="9"/></operator><operator pos:line="15" pos:column="9">*<pos:position pos:line="15" pos:column="10"/></operator><name pos:line="15" pos:column="10">toP<pos:position pos:line="15" pos:column="13"/></name><operator pos:line="15" pos:column="13">)<pos:position pos:line="15" pos:column="14"/></operator><operator pos:line="15" pos:column="14">++<pos:position pos:line="15" pos:column="16"/></operator> <operator pos:line="15" pos:column="17">=<pos:position pos:line="15" pos:column="18"/></operator> <call pos:line="15" pos:column="19">(<name pos:line="15" pos:column="20">char<pos:position pos:line="15" pos:column="24"/></name>)<argument_list pos:line="15" pos:column="25">(<argument><expr><operator pos:line="15" pos:column="26">(<pos:position pos:line="15" pos:column="27"/></operator><name pos:line="15" pos:column="27">c<pos:position pos:line="15" pos:column="28"/></name> <operator pos:line="15" pos:column="29">&amp;<pos:position pos:line="15" pos:column="34"/></operator> <literal type="number" pos:line="15" pos:column="31">0x3f<pos:position pos:line="15" pos:column="35"/></literal><operator pos:line="15" pos:column="35">)<pos:position pos:line="15" pos:column="36"/></operator> <operator pos:line="15" pos:column="37">|<pos:position pos:line="15" pos:column="38"/></operator> <literal type="number" pos:line="15" pos:column="39">0x80<pos:position pos:line="15" pos:column="43"/></literal></expr></argument>)<pos:position pos:line="15" pos:column="44"/></argument_list></call></expr>;<pos:position pos:line="15" pos:column="45"/></expr_stmt>
      <expr_stmt><expr><operator pos:line="16" pos:column="7">(<pos:position pos:line="16" pos:column="8"/></operator><operator pos:line="16" pos:column="8">*<pos:position pos:line="16" pos:column="9"/></operator><name pos:line="16" pos:column="9">fromP<pos:position pos:line="16" pos:column="14"/></name><operator pos:line="16" pos:column="14">)<pos:position pos:line="16" pos:column="15"/></operator><operator pos:line="16" pos:column="15">++<pos:position pos:line="16" pos:column="17"/></operator></expr>;<pos:position pos:line="16" pos:column="18"/></expr_stmt>
    }<pos:position pos:line="17" pos:column="6"/></block></then>
    <else pos:line="18" pos:column="5">else <block pos:line="18" pos:column="10">{
      <if pos:line="19" pos:column="7">if <condition pos:line="19" pos:column="10">(<expr><operator pos:line="19" pos:column="11">*<pos:position pos:line="19" pos:column="12"/></operator><name pos:line="19" pos:column="12">toP<pos:position pos:line="19" pos:column="15"/></name> <operator pos:line="19" pos:column="16">==<pos:position pos:line="19" pos:column="18"/></operator> <name pos:line="19" pos:column="19">toLim<pos:position pos:line="19" pos:column="24"/></name></expr>)<pos:position pos:line="19" pos:column="25"/></condition><then pos:line="19" pos:column="25">
        <block type="pseudo"><break pos:line="20" pos:column="9">break;<pos:position pos:line="20" pos:column="15"/></break></block></then></if>
      <expr_stmt><expr><operator pos:line="21" pos:column="7">*<pos:position pos:line="21" pos:column="8"/></operator><operator pos:line="21" pos:column="8">(<pos:position pos:line="21" pos:column="9"/></operator><operator pos:line="21" pos:column="9">*<pos:position pos:line="21" pos:column="10"/></operator><name pos:line="21" pos:column="10">toP<pos:position pos:line="21" pos:column="13"/></name><operator pos:line="21" pos:column="13">)<pos:position pos:line="21" pos:column="14"/></operator><operator pos:line="21" pos:column="14">++<pos:position pos:line="21" pos:column="16"/></operator> <operator pos:line="21" pos:column="17">=<pos:position pos:line="21" pos:column="18"/></operator> <operator pos:line="21" pos:column="19">*<pos:position pos:line="21" pos:column="20"/></operator><operator pos:line="21" pos:column="20">(<pos:position pos:line="21" pos:column="21"/></operator><operator pos:line="21" pos:column="21">*<pos:position pos:line="21" pos:column="22"/></operator><name pos:line="21" pos:column="22">fromP<pos:position pos:line="21" pos:column="27"/></name><operator pos:line="21" pos:column="27">)<pos:position pos:line="21" pos:column="28"/></operator><operator pos:line="21" pos:column="28">++<pos:position pos:line="21" pos:column="30"/></operator></expr>;<pos:position pos:line="21" pos:column="31"/></expr_stmt>
    }<pos:position pos:line="22" pos:column="6"/></block></else></if>
  }<pos:position pos:line="23" pos:column="4"/></block></for>
}<pos:position pos:line="24" pos:column="2"/></block></function></unit>

<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/httpd/gumtree/httpd_repos_function_3449_httpd-2.2.19.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">char<pos:position pos:line="1" pos:column="5"/></name> <modifier pos:line="1" pos:column="6">*<pos:position pos:line="1" pos:column="7"/></modifier></type><name pos:line="1" pos:column="7">shell_esc<pos:position pos:line="1" pos:column="16"/></name><parameter_list pos:line="1" pos:column="16">(<parameter><decl><type><specifier pos:line="1" pos:column="17">const<pos:position pos:line="1" pos:column="22"/></specifier> <name pos:line="1" pos:column="23">char<pos:position pos:line="1" pos:column="27"/></name> <modifier pos:line="1" pos:column="28">*<pos:position pos:line="1" pos:column="29"/></modifier></type><name pos:line="1" pos:column="29">str<pos:position pos:line="1" pos:column="32"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="33"/></parameter_list>
<block pos:line="2" pos:column="1">{
    <decl_stmt><decl><type><name pos:line="3" pos:column="5">int<pos:position pos:line="3" pos:column="8"/></name></type> <name pos:line="3" pos:column="9">in_quote<pos:position pos:line="3" pos:column="17"/></name> <init pos:line="3" pos:column="18">= <expr><literal type="number" pos:line="3" pos:column="20">0<pos:position pos:line="3" pos:column="21"/></literal></expr></init></decl>;<pos:position pos:line="3" pos:column="22"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="4" pos:column="5">char<pos:position pos:line="4" pos:column="9"/></name> <modifier pos:line="4" pos:column="10">*<pos:position pos:line="4" pos:column="11"/></modifier></type><name pos:line="4" pos:column="11">cmd<pos:position pos:line="4" pos:column="14"/></name></decl>;<pos:position pos:line="4" pos:column="15"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="5" pos:column="5">unsigned<pos:position pos:line="5" pos:column="13"/></name> <name pos:line="5" pos:column="14">char<pos:position pos:line="5" pos:column="18"/></name> <modifier pos:line="5" pos:column="19">*<pos:position pos:line="5" pos:column="20"/></modifier></type><name pos:line="5" pos:column="20">d<pos:position pos:line="5" pos:column="21"/></name></decl>;<pos:position pos:line="5" pos:column="22"/></decl_stmt>
    <decl_stmt><decl><type><specifier pos:line="6" pos:column="5">const<pos:position pos:line="6" pos:column="10"/></specifier> <name pos:line="6" pos:column="11">unsigned<pos:position pos:line="6" pos:column="19"/></name> <name pos:line="6" pos:column="20">char<pos:position pos:line="6" pos:column="24"/></name> <modifier pos:line="6" pos:column="25">*<pos:position pos:line="6" pos:column="26"/></modifier></type><name pos:line="6" pos:column="26">s<pos:position pos:line="6" pos:column="27"/></name></decl>;<pos:position pos:line="6" pos:column="28"/></decl_stmt>

    <expr_stmt><expr><name pos:line="8" pos:column="5">cmd<pos:position pos:line="8" pos:column="8"/></name> <operator pos:line="8" pos:column="9">=<pos:position pos:line="8" pos:column="10"/></operator> <operator pos:line="8" pos:column="11">(<pos:position pos:line="8" pos:column="12"/></operator><name pos:line="8" pos:column="12">char<pos:position pos:line="8" pos:column="16"/></name> <operator pos:line="8" pos:column="17">*<pos:position pos:line="8" pos:column="18"/></operator><operator pos:line="8" pos:column="18">)<pos:position pos:line="8" pos:column="19"/></operator><call><name pos:line="8" pos:column="19">malloc<pos:position pos:line="8" pos:column="25"/></name><argument_list pos:line="8" pos:column="25">(<argument><expr><literal type="number" pos:line="8" pos:column="26">2<pos:position pos:line="8" pos:column="27"/></literal> <operator pos:line="8" pos:column="28">*<pos:position pos:line="8" pos:column="29"/></operator> <call><name pos:line="8" pos:column="30">strlen<pos:position pos:line="8" pos:column="36"/></name><argument_list pos:line="8" pos:column="36">(<argument><expr><name pos:line="8" pos:column="37">str<pos:position pos:line="8" pos:column="40"/></name></expr></argument>)<pos:position pos:line="8" pos:column="41"/></argument_list></call> <operator pos:line="8" pos:column="42">+<pos:position pos:line="8" pos:column="43"/></operator> <literal type="number" pos:line="8" pos:column="44">3<pos:position pos:line="8" pos:column="45"/></literal></expr></argument>)<pos:position pos:line="8" pos:column="46"/></argument_list></call></expr>;<pos:position pos:line="8" pos:column="47"/></expr_stmt>
    <expr_stmt><expr><name pos:line="9" pos:column="5">d<pos:position pos:line="9" pos:column="6"/></name> <operator pos:line="9" pos:column="7">=<pos:position pos:line="9" pos:column="8"/></operator> <operator pos:line="9" pos:column="9">(<pos:position pos:line="9" pos:column="10"/></operator><name pos:line="9" pos:column="10">unsigned<pos:position pos:line="9" pos:column="18"/></name> <name pos:line="9" pos:column="19">char<pos:position pos:line="9" pos:column="23"/></name> <operator pos:line="9" pos:column="24">*<pos:position pos:line="9" pos:column="25"/></operator><operator pos:line="9" pos:column="25">)<pos:position pos:line="9" pos:column="26"/></operator><name pos:line="9" pos:column="26">cmd<pos:position pos:line="9" pos:column="29"/></name></expr>;<pos:position pos:line="9" pos:column="30"/></expr_stmt>
    <expr_stmt><expr><name pos:line="10" pos:column="5">s<pos:position pos:line="10" pos:column="6"/></name> <operator pos:line="10" pos:column="7">=<pos:position pos:line="10" pos:column="8"/></operator> <operator pos:line="10" pos:column="9">(<pos:position pos:line="10" pos:column="10"/></operator><specifier pos:line="10" pos:column="10">const<pos:position pos:line="10" pos:column="15"/></specifier> <name pos:line="10" pos:column="16">unsigned<pos:position pos:line="10" pos:column="24"/></name> <name pos:line="10" pos:column="25">char<pos:position pos:line="10" pos:column="29"/></name> <operator pos:line="10" pos:column="30">*<pos:position pos:line="10" pos:column="31"/></operator><operator pos:line="10" pos:column="31">)<pos:position pos:line="10" pos:column="32"/></operator><name pos:line="10" pos:column="32">str<pos:position pos:line="10" pos:column="35"/></name></expr>;<pos:position pos:line="10" pos:column="36"/></expr_stmt>

<cpp:ifdef pos:line="12" pos:column="1">#<cpp:directive pos:line="12" pos:column="2">ifdef<pos:position pos:line="12" pos:column="7"/></cpp:directive> <name pos:line="12" pos:column="8">__MINGW32__<pos:position pos:line="12" pos:column="19"/></name></cpp:ifdef>
    <expr_stmt><expr><operator pos:line="13" pos:column="5">*<pos:position pos:line="13" pos:column="6"/></operator><name pos:line="13" pos:column="6">d<pos:position pos:line="13" pos:column="7"/></name><operator pos:line="13" pos:column="7">++<pos:position pos:line="13" pos:column="9"/></operator> <operator pos:line="13" pos:column="10">=<pos:position pos:line="13" pos:column="11"/></operator> <literal type="char" pos:line="13" pos:column="12">'\"'<pos:position pos:line="13" pos:column="16"/></literal></expr>;<pos:position pos:line="13" pos:column="17"/></expr_stmt>
<cpp:endif pos:line="14" pos:column="1">#<cpp:directive pos:line="14" pos:column="2">endif<pos:position pos:line="14" pos:column="7"/></cpp:directive></cpp:endif>

    <for pos:line="16" pos:column="5">for <control pos:line="16" pos:column="9">(<init pos:line="16" pos:column="10">;<pos:position pos:line="16" pos:column="11"/></init> <condition><expr><operator pos:line="16" pos:column="12">*<pos:position pos:line="16" pos:column="13"/></operator><name pos:line="16" pos:column="13">s<pos:position pos:line="16" pos:column="14"/></name></expr>;<pos:position pos:line="16" pos:column="15"/></condition> <incr><expr><operator pos:line="16" pos:column="16">++<pos:position pos:line="16" pos:column="18"/></operator><name pos:line="16" pos:column="18">s<pos:position pos:line="16" pos:column="19"/></name></expr></incr>)<pos:position pos:line="16" pos:column="20"/></control> <block pos:line="16" pos:column="21">{
        <if pos:line="17" pos:column="9">if <condition pos:line="17" pos:column="12">(<expr><operator pos:line="17" pos:column="13">*<pos:position pos:line="17" pos:column="14"/></operator><name pos:line="17" pos:column="14">s<pos:position pos:line="17" pos:column="15"/></name> <operator pos:line="17" pos:column="16">==<pos:position pos:line="17" pos:column="18"/></operator> <literal type="char" pos:line="17" pos:column="19">'"'<pos:position pos:line="17" pos:column="22"/></literal></expr>)<pos:position pos:line="17" pos:column="23"/></condition><then pos:line="17" pos:column="23"> <block pos:line="17" pos:column="24">{
            <expr_stmt><expr><operator pos:line="18" pos:column="13">*<pos:position pos:line="18" pos:column="14"/></operator><name pos:line="18" pos:column="14">d<pos:position pos:line="18" pos:column="15"/></name><operator pos:line="18" pos:column="15">++<pos:position pos:line="18" pos:column="17"/></operator> <operator pos:line="18" pos:column="18">=<pos:position pos:line="18" pos:column="19"/></operator> <literal type="char" pos:line="18" pos:column="20">'\\'<pos:position pos:line="18" pos:column="24"/></literal></expr>;<pos:position pos:line="18" pos:column="25"/></expr_stmt>
            <expr_stmt><expr><name pos:line="19" pos:column="13">in_quote<pos:position pos:line="19" pos:column="21"/></name><operator pos:line="19" pos:column="21">++<pos:position pos:line="19" pos:column="23"/></operator></expr>;<pos:position pos:line="19" pos:column="24"/></expr_stmt>
        }<pos:position pos:line="20" pos:column="10"/></block></then>
        <elseif pos:line="21" pos:column="9">else <if pos:line="21" pos:column="14">if <condition pos:line="21" pos:column="17">(<expr><operator pos:line="21" pos:column="18">*<pos:position pos:line="21" pos:column="19"/></operator><name pos:line="21" pos:column="19">s<pos:position pos:line="21" pos:column="20"/></name> <operator pos:line="21" pos:column="21">==<pos:position pos:line="21" pos:column="23"/></operator> <literal type="char" pos:line="21" pos:column="24">'\\'<pos:position pos:line="21" pos:column="28"/></literal> <operator pos:line="21" pos:column="29">||<pos:position pos:line="21" pos:column="31"/></operator> <operator pos:line="21" pos:column="32">(<pos:position pos:line="21" pos:column="33"/></operator><operator pos:line="21" pos:column="33">*<pos:position pos:line="21" pos:column="34"/></operator><name pos:line="21" pos:column="34">s<pos:position pos:line="21" pos:column="35"/></name> <operator pos:line="21" pos:column="36">==<pos:position pos:line="21" pos:column="38"/></operator> <literal type="char" pos:line="21" pos:column="39">' '<pos:position pos:line="21" pos:column="42"/></literal> <operator pos:line="21" pos:column="43">&amp;&amp;<pos:position pos:line="21" pos:column="53"/></operator> <operator pos:line="21" pos:column="46">(<pos:position pos:line="21" pos:column="47"/></operator><name pos:line="21" pos:column="47">in_quote<pos:position pos:line="21" pos:column="55"/></name> <operator pos:line="21" pos:column="56">%<pos:position pos:line="21" pos:column="57"/></operator> <literal type="number" pos:line="21" pos:column="58">2<pos:position pos:line="21" pos:column="59"/></literal><operator pos:line="21" pos:column="59">)<pos:position pos:line="21" pos:column="60"/></operator><operator pos:line="21" pos:column="60">)<pos:position pos:line="21" pos:column="61"/></operator></expr>)<pos:position pos:line="21" pos:column="62"/></condition><then pos:line="21" pos:column="62"> <block pos:line="21" pos:column="63">{
            <expr_stmt><expr><operator pos:line="22" pos:column="13">*<pos:position pos:line="22" pos:column="14"/></operator><name pos:line="22" pos:column="14">d<pos:position pos:line="22" pos:column="15"/></name><operator pos:line="22" pos:column="15">++<pos:position pos:line="22" pos:column="17"/></operator> <operator pos:line="22" pos:column="18">=<pos:position pos:line="22" pos:column="19"/></operator> <literal type="char" pos:line="22" pos:column="20">'\\'<pos:position pos:line="22" pos:column="24"/></literal></expr>;<pos:position pos:line="22" pos:column="25"/></expr_stmt>
        }<pos:position pos:line="23" pos:column="10"/></block></then></if></elseif></if>
        <expr_stmt><expr><operator pos:line="24" pos:column="9">*<pos:position pos:line="24" pos:column="10"/></operator><name pos:line="24" pos:column="10">d<pos:position pos:line="24" pos:column="11"/></name><operator pos:line="24" pos:column="11">++<pos:position pos:line="24" pos:column="13"/></operator> <operator pos:line="24" pos:column="14">=<pos:position pos:line="24" pos:column="15"/></operator> <operator pos:line="24" pos:column="16">*<pos:position pos:line="24" pos:column="17"/></operator><name pos:line="24" pos:column="17">s<pos:position pos:line="24" pos:column="18"/></name></expr>;<pos:position pos:line="24" pos:column="19"/></expr_stmt>
    }<pos:position pos:line="25" pos:column="6"/></block></for>

<cpp:ifdef pos:line="27" pos:column="1">#<cpp:directive pos:line="27" pos:column="2">ifdef<pos:position pos:line="27" pos:column="7"/></cpp:directive> <name pos:line="27" pos:column="8">__MINGW32__<pos:position pos:line="27" pos:column="19"/></name></cpp:ifdef>
    <expr_stmt><expr><operator pos:line="28" pos:column="5">*<pos:position pos:line="28" pos:column="6"/></operator><name pos:line="28" pos:column="6">d<pos:position pos:line="28" pos:column="7"/></name><operator pos:line="28" pos:column="7">++<pos:position pos:line="28" pos:column="9"/></operator> <operator pos:line="28" pos:column="10">=<pos:position pos:line="28" pos:column="11"/></operator> <literal type="char" pos:line="28" pos:column="12">'\"'<pos:position pos:line="28" pos:column="16"/></literal></expr>;<pos:position pos:line="28" pos:column="17"/></expr_stmt>
<cpp:endif pos:line="29" pos:column="1">#<cpp:directive pos:line="29" pos:column="2">endif<pos:position pos:line="29" pos:column="7"/></cpp:directive></cpp:endif>

    <expr_stmt><expr><operator pos:line="31" pos:column="5">*<pos:position pos:line="31" pos:column="6"/></operator><name pos:line="31" pos:column="6">d<pos:position pos:line="31" pos:column="7"/></name> <operator pos:line="31" pos:column="8">=<pos:position pos:line="31" pos:column="9"/></operator> <literal type="char" pos:line="31" pos:column="10">'\0'<pos:position pos:line="31" pos:column="14"/></literal></expr>;<pos:position pos:line="31" pos:column="15"/></expr_stmt>
    <return pos:line="32" pos:column="5">return <expr><name pos:line="32" pos:column="12">cmd<pos:position pos:line="32" pos:column="15"/></name></expr>;<pos:position pos:line="32" pos:column="16"/></return>
}<pos:position pos:line="33" pos:column="2"/></block></function></unit>

<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/httpd/gumtree/httpd_repos_function_3886_httpd-2.2.11.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">int<pos:position pos:line="1" pos:column="11"/></name></type>
<name pos:line="2" pos:column="1">print_char<pos:position pos:line="2" pos:column="11"/></name><parameter_list pos:line="2" pos:column="11">(<parameter><decl><type><name pos:line="2" pos:column="12">FILE<pos:position pos:line="2" pos:column="16"/></name> <modifier pos:line="2" pos:column="17">*<pos:position pos:line="2" pos:column="18"/></modifier></type><name pos:line="2" pos:column="18">f<pos:position pos:line="2" pos:column="19"/></name></decl></parameter>, <parameter><decl><type><name pos:line="2" pos:column="21">uschar<pos:position pos:line="2" pos:column="27"/></name> <modifier pos:line="2" pos:column="28">*<pos:position pos:line="2" pos:column="29"/></modifier></type><name pos:line="2" pos:column="29">ptr<pos:position pos:line="2" pos:column="32"/></name></decl></parameter>, <parameter><decl><type><name pos:line="2" pos:column="34">BOOL<pos:position pos:line="2" pos:column="38"/></name></type> <name pos:line="2" pos:column="39">utf8<pos:position pos:line="2" pos:column="43"/></name></decl></parameter>)<pos:position pos:line="2" pos:column="44"/></parameter_list>
<block pos:line="3" pos:column="1">{
<decl_stmt><decl><type><name pos:line="4" pos:column="1">int<pos:position pos:line="4" pos:column="4"/></name></type> <name pos:line="4" pos:column="5">c<pos:position pos:line="4" pos:column="6"/></name> <init pos:line="4" pos:column="7">= <expr><operator pos:line="4" pos:column="9">*<pos:position pos:line="4" pos:column="10"/></operator><name pos:line="4" pos:column="10">ptr<pos:position pos:line="4" pos:column="13"/></name></expr></init></decl>;<pos:position pos:line="4" pos:column="14"/></decl_stmt>

<if pos:line="6" pos:column="1">if <condition pos:line="6" pos:column="4">(<expr><operator pos:line="6" pos:column="5">!<pos:position pos:line="6" pos:column="6"/></operator><name pos:line="6" pos:column="6">utf8<pos:position pos:line="6" pos:column="10"/></name> <operator pos:line="6" pos:column="11">||<pos:position pos:line="6" pos:column="13"/></operator> <operator pos:line="6" pos:column="14">(<pos:position pos:line="6" pos:column="15"/></operator><name pos:line="6" pos:column="15">c<pos:position pos:line="6" pos:column="16"/></name> <operator pos:line="6" pos:column="17">&amp;<pos:position pos:line="6" pos:column="22"/></operator> <literal type="number" pos:line="6" pos:column="19">0xc0<pos:position pos:line="6" pos:column="23"/></literal><operator pos:line="6" pos:column="23">)<pos:position pos:line="6" pos:column="24"/></operator> <operator pos:line="6" pos:column="25">!=<pos:position pos:line="6" pos:column="27"/></operator> <literal type="number" pos:line="6" pos:column="28">0xc0<pos:position pos:line="6" pos:column="32"/></literal></expr>)<pos:position pos:line="6" pos:column="33"/></condition><then pos:line="6" pos:column="33">
  <block pos:line="7" pos:column="3">{
  <if pos:line="8" pos:column="3">if <condition pos:line="8" pos:column="6">(<expr><call><name pos:line="8" pos:column="7">isprint<pos:position pos:line="8" pos:column="14"/></name><argument_list pos:line="8" pos:column="14">(<argument><expr><name pos:line="8" pos:column="15">c<pos:position pos:line="8" pos:column="16"/></name></expr></argument>)<pos:position pos:line="8" pos:column="17"/></argument_list></call></expr>)<pos:position pos:line="8" pos:column="18"/></condition><then pos:line="8" pos:column="18"> <block type="pseudo"><expr_stmt><expr><call><name pos:line="8" pos:column="19">fprintf<pos:position pos:line="8" pos:column="26"/></name><argument_list pos:line="8" pos:column="26">(<argument><expr><name pos:line="8" pos:column="27">f<pos:position pos:line="8" pos:column="28"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="8" pos:column="30">"%c"<pos:position pos:line="8" pos:column="34"/></literal></expr></argument>, <argument><expr><name pos:line="8" pos:column="36">c<pos:position pos:line="8" pos:column="37"/></name></expr></argument>)<pos:position pos:line="8" pos:column="38"/></argument_list></call></expr>;<pos:position pos:line="8" pos:column="39"/></expr_stmt></block></then> <else pos:line="8" pos:column="40">else <block type="pseudo"><expr_stmt><expr><call><name pos:line="8" pos:column="45">fprintf<pos:position pos:line="8" pos:column="52"/></name><argument_list pos:line="8" pos:column="52">(<argument><expr><name pos:line="8" pos:column="53">f<pos:position pos:line="8" pos:column="54"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="8" pos:column="56">"\\x%02x"<pos:position pos:line="8" pos:column="65"/></literal></expr></argument>, <argument><expr><name pos:line="8" pos:column="67">c<pos:position pos:line="8" pos:column="68"/></name></expr></argument>)<pos:position pos:line="8" pos:column="69"/></argument_list></call></expr>;<pos:position pos:line="8" pos:column="70"/></expr_stmt></block></else></if>
  <return pos:line="9" pos:column="3">return <expr><literal type="number" pos:line="9" pos:column="10">0<pos:position pos:line="9" pos:column="11"/></literal></expr>;<pos:position pos:line="9" pos:column="12"/></return>
  }<pos:position pos:line="10" pos:column="4"/></block></then>
<else pos:line="11" pos:column="1">else
  <block pos:line="12" pos:column="3">{
  <decl_stmt><decl><type><name pos:line="13" pos:column="3">int<pos:position pos:line="13" pos:column="6"/></name></type> <name pos:line="13" pos:column="7">i<pos:position pos:line="13" pos:column="8"/></name></decl>;<pos:position pos:line="13" pos:column="9"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="14" pos:column="3">int<pos:position pos:line="14" pos:column="6"/></name></type> <name pos:line="14" pos:column="7">a<pos:position pos:line="14" pos:column="8"/></name> <init pos:line="14" pos:column="9">= <expr><name><name pos:line="14" pos:column="11">utf8_t4<pos:position pos:line="14" pos:column="18"/></name><index pos:line="14" pos:column="18">[<expr><name pos:line="14" pos:column="19">c<pos:position pos:line="14" pos:column="20"/></name> <operator pos:line="14" pos:column="21">&amp;<pos:position pos:line="14" pos:column="26"/></operator> <literal type="number" pos:line="14" pos:column="23">0x3f<pos:position pos:line="14" pos:column="27"/></literal></expr>]<pos:position pos:line="14" pos:column="28"/></index></name></expr></init></decl>;<pos:position pos:line="14" pos:column="29"/></decl_stmt>  <comment type="block" pos:line="14" pos:column="31">/* Number of additional bytes */</comment>
  <decl_stmt><decl><type><name pos:line="15" pos:column="3">int<pos:position pos:line="15" pos:column="6"/></name></type> <name pos:line="15" pos:column="7">s<pos:position pos:line="15" pos:column="8"/></name> <init pos:line="15" pos:column="9">= <expr><literal type="number" pos:line="15" pos:column="11">6<pos:position pos:line="15" pos:column="12"/></literal><operator pos:line="15" pos:column="12">*<pos:position pos:line="15" pos:column="13"/></operator><name pos:line="15" pos:column="13">a<pos:position pos:line="15" pos:column="14"/></name></expr></init></decl>;<pos:position pos:line="15" pos:column="15"/></decl_stmt>
  <expr_stmt><expr><name pos:line="16" pos:column="3">c<pos:position pos:line="16" pos:column="4"/></name> <operator pos:line="16" pos:column="5">=<pos:position pos:line="16" pos:column="6"/></operator> <operator pos:line="16" pos:column="7">(<pos:position pos:line="16" pos:column="8"/></operator><name pos:line="16" pos:column="8">c<pos:position pos:line="16" pos:column="9"/></name> <operator pos:line="16" pos:column="10">&amp;<pos:position pos:line="16" pos:column="15"/></operator> <name><name pos:line="16" pos:column="12">utf8_t3<pos:position pos:line="16" pos:column="19"/></name><index pos:line="16" pos:column="19">[<expr><name pos:line="16" pos:column="20">a<pos:position pos:line="16" pos:column="21"/></name></expr>]<pos:position pos:line="16" pos:column="22"/></index></name><operator pos:line="16" pos:column="22">)<pos:position pos:line="16" pos:column="23"/></operator> <operator pos:line="16" pos:column="24">&lt;&lt;<pos:position pos:line="16" pos:column="32"/></operator> <name pos:line="16" pos:column="27">s<pos:position pos:line="16" pos:column="28"/></name></expr>;<pos:position pos:line="16" pos:column="29"/></expr_stmt>
  <for pos:line="17" pos:column="3">for <control pos:line="17" pos:column="7">(<init><expr><name pos:line="17" pos:column="8">i<pos:position pos:line="17" pos:column="9"/></name> <operator pos:line="17" pos:column="10">=<pos:position pos:line="17" pos:column="11"/></operator> <literal type="number" pos:line="17" pos:column="12">1<pos:position pos:line="17" pos:column="13"/></literal></expr>;<pos:position pos:line="17" pos:column="14"/></init> <condition><expr><name pos:line="17" pos:column="15">i<pos:position pos:line="17" pos:column="16"/></name> <operator pos:line="17" pos:column="17">&lt;=<pos:position pos:line="17" pos:column="22"/></operator> <name pos:line="17" pos:column="20">a<pos:position pos:line="17" pos:column="21"/></name></expr>;<pos:position pos:line="17" pos:column="22"/></condition> <incr><expr><name pos:line="17" pos:column="23">i<pos:position pos:line="17" pos:column="24"/></name><operator pos:line="17" pos:column="24">++<pos:position pos:line="17" pos:column="26"/></operator></expr></incr>)<pos:position pos:line="17" pos:column="27"/></control>
    <block pos:line="18" pos:column="5">{
    <comment type="block" pos:line="19" pos:column="5">/* This is a check for malformed UTF-8; it should only occur if the sanity
    check has been turned off. Rather than swallow random bytes, just stop if
    we hit a bad one. Print it with \X instead of \x as an indication. */</comment>

    <if pos:line="23" pos:column="5">if <condition pos:line="23" pos:column="8">(<expr><operator pos:line="23" pos:column="9">(<pos:position pos:line="23" pos:column="10"/></operator><name><name pos:line="23" pos:column="10">ptr<pos:position pos:line="23" pos:column="13"/></name><index pos:line="23" pos:column="13">[<expr><name pos:line="23" pos:column="14">i<pos:position pos:line="23" pos:column="15"/></name></expr>]<pos:position pos:line="23" pos:column="16"/></index></name> <operator pos:line="23" pos:column="17">&amp;<pos:position pos:line="23" pos:column="22"/></operator> <literal type="number" pos:line="23" pos:column="19">0xc0<pos:position pos:line="23" pos:column="23"/></literal><operator pos:line="23" pos:column="23">)<pos:position pos:line="23" pos:column="24"/></operator> <operator pos:line="23" pos:column="25">!=<pos:position pos:line="23" pos:column="27"/></operator> <literal type="number" pos:line="23" pos:column="28">0x80<pos:position pos:line="23" pos:column="32"/></literal></expr>)<pos:position pos:line="23" pos:column="33"/></condition><then pos:line="23" pos:column="33">
      <block pos:line="24" pos:column="7">{
      <expr_stmt><expr><call><name pos:line="25" pos:column="7">fprintf<pos:position pos:line="25" pos:column="14"/></name><argument_list pos:line="25" pos:column="14">(<argument><expr><name pos:line="25" pos:column="15">f<pos:position pos:line="25" pos:column="16"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="25" pos:column="18">"\\X{%x}"<pos:position pos:line="25" pos:column="27"/></literal></expr></argument>, <argument><expr><name pos:line="25" pos:column="29">c<pos:position pos:line="25" pos:column="30"/></name></expr></argument>)<pos:position pos:line="25" pos:column="31"/></argument_list></call></expr>;<pos:position pos:line="25" pos:column="32"/></expr_stmt>
      <return pos:line="26" pos:column="7">return <expr><name pos:line="26" pos:column="14">i<pos:position pos:line="26" pos:column="15"/></name> <operator pos:line="26" pos:column="16">-<pos:position pos:line="26" pos:column="17"/></operator> <literal type="number" pos:line="26" pos:column="18">1<pos:position pos:line="26" pos:column="19"/></literal></expr>;<pos:position pos:line="26" pos:column="20"/></return>
      }<pos:position pos:line="27" pos:column="8"/></block></then></if>

    <comment type="block" pos:line="29" pos:column="5">/* The byte is OK */</comment>

    <expr_stmt><expr><name pos:line="31" pos:column="5">s<pos:position pos:line="31" pos:column="6"/></name> <operator pos:line="31" pos:column="7">-=<pos:position pos:line="31" pos:column="9"/></operator> <literal type="number" pos:line="31" pos:column="10">6<pos:position pos:line="31" pos:column="11"/></literal></expr>;<pos:position pos:line="31" pos:column="12"/></expr_stmt>
    <expr_stmt><expr><name pos:line="32" pos:column="5">c<pos:position pos:line="32" pos:column="6"/></name> <operator pos:line="32" pos:column="7">|=<pos:position pos:line="32" pos:column="9"/></operator> <operator pos:line="32" pos:column="10">(<pos:position pos:line="32" pos:column="11"/></operator><name><name pos:line="32" pos:column="11">ptr<pos:position pos:line="32" pos:column="14"/></name><index pos:line="32" pos:column="14">[<expr><name pos:line="32" pos:column="15">i<pos:position pos:line="32" pos:column="16"/></name></expr>]<pos:position pos:line="32" pos:column="17"/></index></name> <operator pos:line="32" pos:column="18">&amp;<pos:position pos:line="32" pos:column="23"/></operator> <literal type="number" pos:line="32" pos:column="20">0x3f<pos:position pos:line="32" pos:column="24"/></literal><operator pos:line="32" pos:column="24">)<pos:position pos:line="32" pos:column="25"/></operator> <operator pos:line="32" pos:column="26">&lt;&lt;<pos:position pos:line="32" pos:column="34"/></operator> <name pos:line="32" pos:column="29">s<pos:position pos:line="32" pos:column="30"/></name></expr>;<pos:position pos:line="32" pos:column="31"/></expr_stmt>
    }<pos:position pos:line="33" pos:column="6"/></block></for>
  <if pos:line="34" pos:column="3">if <condition pos:line="34" pos:column="6">(<expr><name pos:line="34" pos:column="7">c<pos:position pos:line="34" pos:column="8"/></name> <operator pos:line="34" pos:column="9">&lt;<pos:position pos:line="34" pos:column="13"/></operator> <literal type="number" pos:line="34" pos:column="11">128<pos:position pos:line="34" pos:column="14"/></literal></expr>)<pos:position pos:line="34" pos:column="15"/></condition><then pos:line="34" pos:column="15"> <block type="pseudo"><expr_stmt><expr><call><name pos:line="34" pos:column="16">fprintf<pos:position pos:line="34" pos:column="23"/></name><argument_list pos:line="34" pos:column="23">(<argument><expr><name pos:line="34" pos:column="24">f<pos:position pos:line="34" pos:column="25"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="34" pos:column="27">"\\x%02x"<pos:position pos:line="34" pos:column="36"/></literal></expr></argument>, <argument><expr><name pos:line="34" pos:column="38">c<pos:position pos:line="34" pos:column="39"/></name></expr></argument>)<pos:position pos:line="34" pos:column="40"/></argument_list></call></expr>;<pos:position pos:line="34" pos:column="41"/></expr_stmt></block></then> <else pos:line="34" pos:column="42">else <block type="pseudo"><expr_stmt><expr><call><name pos:line="34" pos:column="47">fprintf<pos:position pos:line="34" pos:column="54"/></name><argument_list pos:line="34" pos:column="54">(<argument><expr><name pos:line="34" pos:column="55">f<pos:position pos:line="34" pos:column="56"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="34" pos:column="58">"\\x{%x}"<pos:position pos:line="34" pos:column="67"/></literal></expr></argument>, <argument><expr><name pos:line="34" pos:column="69">c<pos:position pos:line="34" pos:column="70"/></name></expr></argument>)<pos:position pos:line="34" pos:column="71"/></argument_list></call></expr>;<pos:position pos:line="34" pos:column="72"/></expr_stmt></block></else></if>
  <return pos:line="35" pos:column="3">return <expr><name pos:line="35" pos:column="10">a<pos:position pos:line="35" pos:column="11"/></name></expr>;<pos:position pos:line="35" pos:column="12"/></return>
  }<pos:position pos:line="36" pos:column="4"/></block></else></if>
}<pos:position pos:line="37" pos:column="2"/></block></function></unit>

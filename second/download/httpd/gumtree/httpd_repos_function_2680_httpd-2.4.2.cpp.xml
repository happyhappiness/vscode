<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/httpd/gumtree/httpd_repos_function_2680_httpd-2.4.2.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">int<pos:position pos:line="1" pos:column="11"/></name></type> <name pos:line="1" pos:column="12">add_auth_info<pos:position pos:line="1" pos:column="25"/></name><parameter_list pos:line="1" pos:column="25">(<parameter><decl><type><name pos:line="1" pos:column="26">request_rec<pos:position pos:line="1" pos:column="37"/></name> <modifier pos:line="1" pos:column="38">*<pos:position pos:line="1" pos:column="39"/></modifier></type><name pos:line="1" pos:column="39">r<pos:position pos:line="1" pos:column="40"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="41"/></parameter_list>
<block pos:line="2" pos:column="1">{
    <decl_stmt><decl><type><specifier pos:line="3" pos:column="5">const<pos:position pos:line="3" pos:column="10"/></specifier> <name pos:line="3" pos:column="11">digest_config_rec<pos:position pos:line="3" pos:column="28"/></name> <modifier pos:line="3" pos:column="29">*<pos:position pos:line="3" pos:column="30"/></modifier></type><name pos:line="3" pos:column="30">conf<pos:position pos:line="3" pos:column="34"/></name> <init pos:line="3" pos:column="35">=
                <expr><operator pos:line="4" pos:column="17">(<pos:position pos:line="4" pos:column="18"/></operator><name pos:line="4" pos:column="18">digest_config_rec<pos:position pos:line="4" pos:column="35"/></name> <operator pos:line="4" pos:column="36">*<pos:position pos:line="4" pos:column="37"/></operator><operator pos:line="4" pos:column="37">)<pos:position pos:line="4" pos:column="38"/></operator> <call><name pos:line="4" pos:column="39">ap_get_module_config<pos:position pos:line="4" pos:column="59"/></name><argument_list pos:line="4" pos:column="59">(<argument><expr><name><name pos:line="4" pos:column="60">r<pos:position pos:line="4" pos:column="61"/></name><operator pos:line="4" pos:column="61">-&gt;<pos:position pos:line="4" pos:column="66"/></operator><name pos:line="4" pos:column="63">per_dir_config<pos:position pos:line="4" pos:column="77"/></name></name></expr></argument>,
                                                           <argument><expr><operator pos:line="5" pos:column="60">&amp;<pos:position pos:line="5" pos:column="65"/></operator><name pos:line="5" pos:column="61">auth_digest_module<pos:position pos:line="5" pos:column="79"/></name></expr></argument>)<pos:position pos:line="5" pos:column="80"/></argument_list></call></expr></init></decl>;<pos:position pos:line="5" pos:column="81"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="6" pos:column="5">digest_header_rec<pos:position pos:line="6" pos:column="22"/></name> <modifier pos:line="6" pos:column="23">*<pos:position pos:line="6" pos:column="24"/></modifier></type><name pos:line="6" pos:column="24">resp<pos:position pos:line="6" pos:column="28"/></name> <init pos:line="6" pos:column="29">=
                <expr><operator pos:line="7" pos:column="17">(<pos:position pos:line="7" pos:column="18"/></operator><name pos:line="7" pos:column="18">digest_header_rec<pos:position pos:line="7" pos:column="35"/></name> <operator pos:line="7" pos:column="36">*<pos:position pos:line="7" pos:column="37"/></operator><operator pos:line="7" pos:column="37">)<pos:position pos:line="7" pos:column="38"/></operator> <call><name pos:line="7" pos:column="39">ap_get_module_config<pos:position pos:line="7" pos:column="59"/></name><argument_list pos:line="7" pos:column="59">(<argument><expr><name><name pos:line="7" pos:column="60">r<pos:position pos:line="7" pos:column="61"/></name><operator pos:line="7" pos:column="61">-&gt;<pos:position pos:line="7" pos:column="66"/></operator><name pos:line="7" pos:column="63">request_config<pos:position pos:line="7" pos:column="77"/></name></name></expr></argument>,
                                                           <argument><expr><operator pos:line="8" pos:column="60">&amp;<pos:position pos:line="8" pos:column="65"/></operator><name pos:line="8" pos:column="61">auth_digest_module<pos:position pos:line="8" pos:column="79"/></name></expr></argument>)<pos:position pos:line="8" pos:column="80"/></argument_list></call></expr></init></decl>;<pos:position pos:line="8" pos:column="81"/></decl_stmt>
    <decl_stmt><decl><type><specifier pos:line="9" pos:column="5">const<pos:position pos:line="9" pos:column="10"/></specifier> <name pos:line="9" pos:column="11">char<pos:position pos:line="9" pos:column="15"/></name> <modifier pos:line="9" pos:column="16">*<pos:position pos:line="9" pos:column="17"/></modifier></type><name pos:line="9" pos:column="17">ai<pos:position pos:line="9" pos:column="19"/></name> <init pos:line="9" pos:column="20">= <expr><name pos:line="9" pos:column="22">NULL<pos:position pos:line="9" pos:column="26"/></name></expr></init></decl>, <modifier pos:line="9" pos:column="28">*<pos:position pos:line="9" pos:column="29"/></modifier><decl><type ref="prev"/><name pos:line="9" pos:column="29">nextnonce<pos:position pos:line="9" pos:column="38"/></name> <init pos:line="9" pos:column="39">= <expr><literal type="string" pos:line="9" pos:column="41">""<pos:position pos:line="9" pos:column="43"/></literal></expr></init></decl>;<pos:position pos:line="9" pos:column="44"/></decl_stmt>

    <if pos:line="11" pos:column="5">if <condition pos:line="11" pos:column="8">(<expr><name pos:line="11" pos:column="9">resp<pos:position pos:line="11" pos:column="13"/></name> <operator pos:line="11" pos:column="14">==<pos:position pos:line="11" pos:column="16"/></operator> <name pos:line="11" pos:column="17">NULL<pos:position pos:line="11" pos:column="21"/></name> <operator pos:line="11" pos:column="22">||<pos:position pos:line="11" pos:column="24"/></operator> <operator pos:line="11" pos:column="25">!<pos:position pos:line="11" pos:column="26"/></operator><name><name pos:line="11" pos:column="26">resp<pos:position pos:line="11" pos:column="30"/></name><operator pos:line="11" pos:column="30">-&gt;<pos:position pos:line="11" pos:column="35"/></operator><name pos:line="11" pos:column="32">needed_auth<pos:position pos:line="11" pos:column="43"/></name></name> <operator pos:line="11" pos:column="44">||<pos:position pos:line="11" pos:column="46"/></operator> <name pos:line="11" pos:column="47">conf<pos:position pos:line="11" pos:column="51"/></name> <operator pos:line="11" pos:column="52">==<pos:position pos:line="11" pos:column="54"/></operator> <name pos:line="11" pos:column="55">NULL<pos:position pos:line="11" pos:column="59"/></name></expr>)<pos:position pos:line="11" pos:column="60"/></condition><then pos:line="11" pos:column="60"> <block pos:line="11" pos:column="61">{
        <return pos:line="12" pos:column="9">return <expr><name pos:line="12" pos:column="16">OK<pos:position pos:line="12" pos:column="18"/></name></expr>;<pos:position pos:line="12" pos:column="19"/></return>
    }<pos:position pos:line="13" pos:column="6"/></block></then></if>

    <comment type="block" pos:line="15" pos:column="5">/* 2069-style entity-digest is not supported (it's too hard, and
     * there are no clients which support 2069 but not 2617). */</comment>

    <comment type="block" pos:line="18" pos:column="5">/* setup nextnonce
     */</comment>
    <if pos:line="20" pos:column="5">if <condition pos:line="20" pos:column="8">(<expr><name><name pos:line="20" pos:column="9">conf<pos:position pos:line="20" pos:column="13"/></name><operator pos:line="20" pos:column="13">-&gt;<pos:position pos:line="20" pos:column="18"/></operator><name pos:line="20" pos:column="15">nonce_lifetime<pos:position pos:line="20" pos:column="29"/></name></name> <operator pos:line="20" pos:column="30">&gt;<pos:position pos:line="20" pos:column="34"/></operator> <literal type="number" pos:line="20" pos:column="32">0<pos:position pos:line="20" pos:column="33"/></literal></expr>)<pos:position pos:line="20" pos:column="34"/></condition><then pos:line="20" pos:column="34"> <block pos:line="20" pos:column="35">{
        <comment type="block" pos:line="21" pos:column="9">/* send nextnonce if current nonce will expire in less than 30 secs */</comment>
        <if pos:line="22" pos:column="9">if <condition pos:line="22" pos:column="12">(<expr><operator pos:line="22" pos:column="13">(<pos:position pos:line="22" pos:column="14"/></operator><name><name pos:line="22" pos:column="14">r<pos:position pos:line="22" pos:column="15"/></name><operator pos:line="22" pos:column="15">-&gt;<pos:position pos:line="22" pos:column="20"/></operator><name pos:line="22" pos:column="17">request_time<pos:position pos:line="22" pos:column="29"/></name></name> <operator pos:line="22" pos:column="30">-<pos:position pos:line="22" pos:column="31"/></operator> <name><name pos:line="22" pos:column="32">resp<pos:position pos:line="22" pos:column="36"/></name><operator pos:line="22" pos:column="36">-&gt;<pos:position pos:line="22" pos:column="41"/></operator><name pos:line="22" pos:column="38">nonce_time<pos:position pos:line="22" pos:column="48"/></name></name><operator pos:line="22" pos:column="48">)<pos:position pos:line="22" pos:column="49"/></operator> <operator pos:line="22" pos:column="50">&gt;<pos:position pos:line="22" pos:column="54"/></operator> <operator pos:line="22" pos:column="52">(<pos:position pos:line="22" pos:column="53"/></operator><name><name pos:line="22" pos:column="53">conf<pos:position pos:line="22" pos:column="57"/></name><operator pos:line="22" pos:column="57">-&gt;<pos:position pos:line="22" pos:column="62"/></operator><name pos:line="22" pos:column="59">nonce_lifetime<pos:position pos:line="22" pos:column="73"/></name></name><operator pos:line="22" pos:column="73">-<pos:position pos:line="22" pos:column="74"/></operator><name pos:line="22" pos:column="74">NEXTNONCE_DELTA<pos:position pos:line="22" pos:column="89"/></name><operator pos:line="22" pos:column="89">)<pos:position pos:line="22" pos:column="90"/></operator></expr>)<pos:position pos:line="22" pos:column="91"/></condition><then pos:line="22" pos:column="91"> <block pos:line="22" pos:column="92">{
            <expr_stmt><expr><name pos:line="23" pos:column="13">nextnonce<pos:position pos:line="23" pos:column="22"/></name> <operator pos:line="23" pos:column="23">=<pos:position pos:line="23" pos:column="24"/></operator> <call><name pos:line="23" pos:column="25">apr_pstrcat<pos:position pos:line="23" pos:column="36"/></name><argument_list pos:line="23" pos:column="36">(<argument><expr><name><name pos:line="23" pos:column="37">r<pos:position pos:line="23" pos:column="38"/></name><operator pos:line="23" pos:column="38">-&gt;<pos:position pos:line="23" pos:column="43"/></operator><name pos:line="23" pos:column="40">pool<pos:position pos:line="23" pos:column="44"/></name></name></expr></argument>, <argument><expr><literal type="string" pos:line="23" pos:column="46">", nextnonce=\""<pos:position pos:line="23" pos:column="62"/></literal></expr></argument>,
                                   <argument><expr><call><name pos:line="24" pos:column="36">gen_nonce<pos:position pos:line="24" pos:column="45"/></name><argument_list pos:line="24" pos:column="45">(<argument><expr><name><name pos:line="24" pos:column="46">r<pos:position pos:line="24" pos:column="47"/></name><operator pos:line="24" pos:column="47">-&gt;<pos:position pos:line="24" pos:column="52"/></operator><name pos:line="24" pos:column="49">pool<pos:position pos:line="24" pos:column="53"/></name></name></expr></argument>, <argument><expr><name><name pos:line="24" pos:column="55">r<pos:position pos:line="24" pos:column="56"/></name><operator pos:line="24" pos:column="56">-&gt;<pos:position pos:line="24" pos:column="61"/></operator><name pos:line="24" pos:column="58">request_time<pos:position pos:line="24" pos:column="70"/></name></name></expr></argument>,
                                             <argument><expr><name><name pos:line="25" pos:column="46">resp<pos:position pos:line="25" pos:column="50"/></name><operator pos:line="25" pos:column="50">-&gt;<pos:position pos:line="25" pos:column="55"/></operator><name pos:line="25" pos:column="52">opaque<pos:position pos:line="25" pos:column="58"/></name></name></expr></argument>, <argument><expr><name><name pos:line="25" pos:column="60">r<pos:position pos:line="25" pos:column="61"/></name><operator pos:line="25" pos:column="61">-&gt;<pos:position pos:line="25" pos:column="66"/></operator><name pos:line="25" pos:column="63">server<pos:position pos:line="25" pos:column="69"/></name></name></expr></argument>, <argument><expr><name pos:line="25" pos:column="71">conf<pos:position pos:line="25" pos:column="75"/></name></expr></argument>)<pos:position pos:line="25" pos:column="76"/></argument_list></call></expr></argument>,
                                   <argument><expr><literal type="string" pos:line="26" pos:column="36">"\""<pos:position pos:line="26" pos:column="40"/></literal></expr></argument>, <argument><expr><name pos:line="26" pos:column="42">NULL<pos:position pos:line="26" pos:column="46"/></name></expr></argument>)<pos:position pos:line="26" pos:column="47"/></argument_list></call></expr>;<pos:position pos:line="26" pos:column="48"/></expr_stmt>
            <if pos:line="27" pos:column="13">if <condition pos:line="27" pos:column="16">(<expr><name><name pos:line="27" pos:column="17">resp<pos:position pos:line="27" pos:column="21"/></name><operator pos:line="27" pos:column="21">-&gt;<pos:position pos:line="27" pos:column="26"/></operator><name pos:line="27" pos:column="23">client<pos:position pos:line="27" pos:column="29"/></name></name></expr>)<pos:position pos:line="27" pos:column="30"/></condition><then pos:line="27" pos:column="30">
                <block type="pseudo"><expr_stmt><expr><name><name pos:line="28" pos:column="17">resp<pos:position pos:line="28" pos:column="21"/></name><operator pos:line="28" pos:column="21">-&gt;<pos:position pos:line="28" pos:column="26"/></operator><name pos:line="28" pos:column="23">client<pos:position pos:line="28" pos:column="29"/></name><operator pos:line="28" pos:column="29">-&gt;<pos:position pos:line="28" pos:column="34"/></operator><name pos:line="28" pos:column="31">nonce_count<pos:position pos:line="28" pos:column="42"/></name></name> <operator pos:line="28" pos:column="43">=<pos:position pos:line="28" pos:column="44"/></operator> <literal type="number" pos:line="28" pos:column="45">0<pos:position pos:line="28" pos:column="46"/></literal></expr>;<pos:position pos:line="28" pos:column="47"/></expr_stmt></block></then></if>
        }<pos:position pos:line="29" pos:column="10"/></block></then></if>
    }<pos:position pos:line="30" pos:column="6"/></block></then>
    <elseif pos:line="31" pos:column="5">else <if pos:line="31" pos:column="10">if <condition pos:line="31" pos:column="13">(<expr><name><name pos:line="31" pos:column="14">conf<pos:position pos:line="31" pos:column="18"/></name><operator pos:line="31" pos:column="18">-&gt;<pos:position pos:line="31" pos:column="23"/></operator><name pos:line="31" pos:column="20">nonce_lifetime<pos:position pos:line="31" pos:column="34"/></name></name> <operator pos:line="31" pos:column="35">==<pos:position pos:line="31" pos:column="37"/></operator> <literal type="number" pos:line="31" pos:column="38">0<pos:position pos:line="31" pos:column="39"/></literal> <operator pos:line="31" pos:column="40">&amp;&amp;<pos:position pos:line="31" pos:column="50"/></operator> <name><name pos:line="31" pos:column="43">resp<pos:position pos:line="31" pos:column="47"/></name><operator pos:line="31" pos:column="47">-&gt;<pos:position pos:line="31" pos:column="52"/></operator><name pos:line="31" pos:column="49">client<pos:position pos:line="31" pos:column="55"/></name></name></expr>)<pos:position pos:line="31" pos:column="56"/></condition><then pos:line="31" pos:column="56"> <block pos:line="31" pos:column="57">{
        <decl_stmt><decl><type><specifier pos:line="32" pos:column="9">const<pos:position pos:line="32" pos:column="14"/></specifier> <name pos:line="32" pos:column="15">char<pos:position pos:line="32" pos:column="19"/></name> <modifier pos:line="32" pos:column="20">*<pos:position pos:line="32" pos:column="21"/></modifier></type><name pos:line="32" pos:column="21">nonce<pos:position pos:line="32" pos:column="26"/></name> <init pos:line="32" pos:column="27">= <expr><call><name pos:line="32" pos:column="29">gen_nonce<pos:position pos:line="32" pos:column="38"/></name><argument_list pos:line="32" pos:column="38">(<argument><expr><name><name pos:line="32" pos:column="39">r<pos:position pos:line="32" pos:column="40"/></name><operator pos:line="32" pos:column="40">-&gt;<pos:position pos:line="32" pos:column="45"/></operator><name pos:line="32" pos:column="42">pool<pos:position pos:line="32" pos:column="46"/></name></name></expr></argument>, <argument><expr><literal type="number" pos:line="32" pos:column="48">0<pos:position pos:line="32" pos:column="49"/></literal></expr></argument>, <argument><expr><name><name pos:line="32" pos:column="51">resp<pos:position pos:line="32" pos:column="55"/></name><operator pos:line="32" pos:column="55">-&gt;<pos:position pos:line="32" pos:column="60"/></operator><name pos:line="32" pos:column="57">opaque<pos:position pos:line="32" pos:column="63"/></name></name></expr></argument>, <argument><expr><name><name pos:line="32" pos:column="65">r<pos:position pos:line="32" pos:column="66"/></name><operator pos:line="32" pos:column="66">-&gt;<pos:position pos:line="32" pos:column="71"/></operator><name pos:line="32" pos:column="68">server<pos:position pos:line="32" pos:column="74"/></name></name></expr></argument>,
                                      <argument><expr><name pos:line="33" pos:column="39">conf<pos:position pos:line="33" pos:column="43"/></name></expr></argument>)<pos:position pos:line="33" pos:column="44"/></argument_list></call></expr></init></decl>;<pos:position pos:line="33" pos:column="45"/></decl_stmt>
        <expr_stmt><expr><name pos:line="34" pos:column="9">nextnonce<pos:position pos:line="34" pos:column="18"/></name> <operator pos:line="34" pos:column="19">=<pos:position pos:line="34" pos:column="20"/></operator> <call><name pos:line="34" pos:column="21">apr_pstrcat<pos:position pos:line="34" pos:column="32"/></name><argument_list pos:line="34" pos:column="32">(<argument><expr><name><name pos:line="34" pos:column="33">r<pos:position pos:line="34" pos:column="34"/></name><operator pos:line="34" pos:column="34">-&gt;<pos:position pos:line="34" pos:column="39"/></operator><name pos:line="34" pos:column="36">pool<pos:position pos:line="34" pos:column="40"/></name></name></expr></argument>, <argument><expr><literal type="string" pos:line="34" pos:column="42">", nextnonce=\""<pos:position pos:line="34" pos:column="58"/></literal></expr></argument>, <argument><expr><name pos:line="34" pos:column="60">nonce<pos:position pos:line="34" pos:column="65"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="34" pos:column="67">"\""<pos:position pos:line="34" pos:column="71"/></literal></expr></argument>, <argument><expr><name pos:line="34" pos:column="73">NULL<pos:position pos:line="34" pos:column="77"/></name></expr></argument>)<pos:position pos:line="34" pos:column="78"/></argument_list></call></expr>;<pos:position pos:line="34" pos:column="79"/></expr_stmt>
        <expr_stmt><expr><call><name pos:line="35" pos:column="9">memcpy<pos:position pos:line="35" pos:column="15"/></name><argument_list pos:line="35" pos:column="15">(<argument><expr><name><name pos:line="35" pos:column="16">resp<pos:position pos:line="35" pos:column="20"/></name><operator pos:line="35" pos:column="20">-&gt;<pos:position pos:line="35" pos:column="25"/></operator><name pos:line="35" pos:column="22">client<pos:position pos:line="35" pos:column="28"/></name><operator pos:line="35" pos:column="28">-&gt;<pos:position pos:line="35" pos:column="33"/></operator><name pos:line="35" pos:column="30">last_nonce<pos:position pos:line="35" pos:column="40"/></name></name></expr></argument>, <argument><expr><name pos:line="35" pos:column="42">nonce<pos:position pos:line="35" pos:column="47"/></name></expr></argument>, <argument><expr><name pos:line="35" pos:column="49">NONCE_LEN<pos:position pos:line="35" pos:column="58"/></name><operator pos:line="35" pos:column="58">+<pos:position pos:line="35" pos:column="59"/></operator><literal type="number" pos:line="35" pos:column="59">1<pos:position pos:line="35" pos:column="60"/></literal></expr></argument>)<pos:position pos:line="35" pos:column="61"/></argument_list></call></expr>;<pos:position pos:line="35" pos:column="62"/></expr_stmt>
    }<pos:position pos:line="36" pos:column="6"/></block></then></if></elseif></if>
    <comment type="block" pos:line="37" pos:column="5">/* else nonce never expires, hence no nextnonce */</comment>


    <comment type="block" pos:line="40" pos:column="5">/* do rfc-2069 digest
     */</comment>
    <if pos:line="42" pos:column="5">if <condition pos:line="42" pos:column="8">(<expr><name><name pos:line="42" pos:column="9">conf<pos:position pos:line="42" pos:column="13"/></name><operator pos:line="42" pos:column="13">-&gt;<pos:position pos:line="42" pos:column="18"/></operator><name pos:line="42" pos:column="15">qop_list<pos:position pos:line="42" pos:column="23"/></name><index pos:line="42" pos:column="23">[<expr><literal type="number" pos:line="42" pos:column="24">0<pos:position pos:line="42" pos:column="25"/></literal></expr>]<pos:position pos:line="42" pos:column="26"/></index></name> <operator pos:line="42" pos:column="27">&amp;&amp;<pos:position pos:line="42" pos:column="37"/></operator> <operator pos:line="42" pos:column="30">!<pos:position pos:line="42" pos:column="31"/></operator><call><name pos:line="42" pos:column="31">strcasecmp<pos:position pos:line="42" pos:column="41"/></name><argument_list pos:line="42" pos:column="41">(<argument><expr><name><name pos:line="42" pos:column="42">conf<pos:position pos:line="42" pos:column="46"/></name><operator pos:line="42" pos:column="46">-&gt;<pos:position pos:line="42" pos:column="51"/></operator><name pos:line="42" pos:column="48">qop_list<pos:position pos:line="42" pos:column="56"/></name><index pos:line="42" pos:column="56">[<expr><literal type="number" pos:line="42" pos:column="57">0<pos:position pos:line="42" pos:column="58"/></literal></expr>]<pos:position pos:line="42" pos:column="59"/></index></name></expr></argument>, <argument><expr><literal type="string" pos:line="42" pos:column="61">"none"<pos:position pos:line="42" pos:column="67"/></literal></expr></argument>)<pos:position pos:line="42" pos:column="68"/></argument_list></call>
        <operator pos:line="43" pos:column="9">&amp;&amp;<pos:position pos:line="43" pos:column="19"/></operator> <name><name pos:line="43" pos:column="12">resp<pos:position pos:line="43" pos:column="16"/></name><operator pos:line="43" pos:column="16">-&gt;<pos:position pos:line="43" pos:column="21"/></operator><name pos:line="43" pos:column="18">message_qop<pos:position pos:line="43" pos:column="29"/></name></name> <operator pos:line="43" pos:column="30">==<pos:position pos:line="43" pos:column="32"/></operator> <name pos:line="43" pos:column="33">NULL<pos:position pos:line="43" pos:column="37"/></name></expr>)<pos:position pos:line="43" pos:column="38"/></condition><then pos:line="43" pos:column="38"> <block pos:line="43" pos:column="39">{
        <comment type="block" pos:line="44" pos:column="9">/* use only RFC-2069 format */</comment>
        <expr_stmt><expr><name pos:line="45" pos:column="9">ai<pos:position pos:line="45" pos:column="11"/></name> <operator pos:line="45" pos:column="12">=<pos:position pos:line="45" pos:column="13"/></operator> <name pos:line="45" pos:column="14">nextnonce<pos:position pos:line="45" pos:column="23"/></name></expr>;<pos:position pos:line="45" pos:column="24"/></expr_stmt>
    }<pos:position pos:line="46" pos:column="6"/></block></then>
    <else pos:line="47" pos:column="5">else <block pos:line="47" pos:column="10">{
        <decl_stmt><decl><type><specifier pos:line="48" pos:column="9">const<pos:position pos:line="48" pos:column="14"/></specifier> <name pos:line="48" pos:column="15">char<pos:position pos:line="48" pos:column="19"/></name> <modifier pos:line="48" pos:column="20">*<pos:position pos:line="48" pos:column="21"/></modifier></type><name pos:line="48" pos:column="21">resp_dig<pos:position pos:line="48" pos:column="29"/></name></decl>, <modifier pos:line="48" pos:column="31">*<pos:position pos:line="48" pos:column="32"/></modifier><decl><type ref="prev"/><name pos:line="48" pos:column="32">ha1<pos:position pos:line="48" pos:column="35"/></name></decl>, <modifier pos:line="48" pos:column="37">*<pos:position pos:line="48" pos:column="38"/></modifier><decl><type ref="prev"/><name pos:line="48" pos:column="38">a2<pos:position pos:line="48" pos:column="40"/></name></decl>, <modifier pos:line="48" pos:column="42">*<pos:position pos:line="48" pos:column="43"/></modifier><decl><type ref="prev"/><name pos:line="48" pos:column="43">ha2<pos:position pos:line="48" pos:column="46"/></name></decl>;<pos:position pos:line="48" pos:column="47"/></decl_stmt>

        <comment type="block" pos:line="50" pos:column="9">/* calculate rspauth attribute
         */</comment>
        <if pos:line="52" pos:column="9">if <condition pos:line="52" pos:column="12">(<expr><name><name pos:line="52" pos:column="13">resp<pos:position pos:line="52" pos:column="17"/></name><operator pos:line="52" pos:column="17">-&gt;<pos:position pos:line="52" pos:column="22"/></operator><name pos:line="52" pos:column="19">algorithm<pos:position pos:line="52" pos:column="28"/></name></name> <operator pos:line="52" pos:column="29">&amp;&amp;<pos:position pos:line="52" pos:column="39"/></operator> <operator pos:line="52" pos:column="32">!<pos:position pos:line="52" pos:column="33"/></operator><call><name pos:line="52" pos:column="33">strcasecmp<pos:position pos:line="52" pos:column="43"/></name><argument_list pos:line="52" pos:column="43">(<argument><expr><name><name pos:line="52" pos:column="44">resp<pos:position pos:line="52" pos:column="48"/></name><operator pos:line="52" pos:column="48">-&gt;<pos:position pos:line="52" pos:column="53"/></operator><name pos:line="52" pos:column="50">algorithm<pos:position pos:line="52" pos:column="59"/></name></name></expr></argument>, <argument><expr><literal type="string" pos:line="52" pos:column="61">"MD5-sess"<pos:position pos:line="52" pos:column="71"/></literal></expr></argument>)<pos:position pos:line="52" pos:column="72"/></argument_list></call></expr>)<pos:position pos:line="52" pos:column="73"/></condition><then pos:line="52" pos:column="73"> <block pos:line="52" pos:column="74">{
            <expr_stmt><expr><name pos:line="53" pos:column="13">ha1<pos:position pos:line="53" pos:column="16"/></name> <operator pos:line="53" pos:column="17">=<pos:position pos:line="53" pos:column="18"/></operator> <call><name pos:line="53" pos:column="19">get_session_HA1<pos:position pos:line="53" pos:column="34"/></name><argument_list pos:line="53" pos:column="34">(<argument><expr><name pos:line="53" pos:column="35">r<pos:position pos:line="53" pos:column="36"/></name></expr></argument>, <argument><expr><name pos:line="53" pos:column="38">resp<pos:position pos:line="53" pos:column="42"/></name></expr></argument>, <argument><expr><name pos:line="53" pos:column="44">conf<pos:position pos:line="53" pos:column="48"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="53" pos:column="50">0<pos:position pos:line="53" pos:column="51"/></literal></expr></argument>)<pos:position pos:line="53" pos:column="52"/></argument_list></call></expr>;<pos:position pos:line="53" pos:column="53"/></expr_stmt>
            <if pos:line="54" pos:column="13">if <condition pos:line="54" pos:column="16">(<expr><operator pos:line="54" pos:column="17">!<pos:position pos:line="54" pos:column="18"/></operator><name pos:line="54" pos:column="18">ha1<pos:position pos:line="54" pos:column="21"/></name></expr>)<pos:position pos:line="54" pos:column="22"/></condition><then pos:line="54" pos:column="22"> <block pos:line="54" pos:column="23">{
                <expr_stmt><expr><call><name pos:line="55" pos:column="17">ap_log_rerror<pos:position pos:line="55" pos:column="30"/></name><argument_list pos:line="55" pos:column="30">(<argument><expr><name pos:line="55" pos:column="31">APLOG_MARK<pos:position pos:line="55" pos:column="41"/></name></expr></argument>, <argument><expr><name pos:line="55" pos:column="43">APLOG_ERR<pos:position pos:line="55" pos:column="52"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="55" pos:column="54">0<pos:position pos:line="55" pos:column="55"/></literal></expr></argument>, <argument><expr><name pos:line="55" pos:column="57">r<pos:position pos:line="55" pos:column="58"/></name></expr></argument>, <argument><expr><call><name pos:line="55" pos:column="60">APLOGNO<pos:position pos:line="55" pos:column="67"/></name><argument_list pos:line="55" pos:column="67">(<argument><expr><literal type="number" pos:line="55" pos:column="68">01795<pos:position pos:line="55" pos:column="73"/></literal></expr></argument>)<pos:position pos:line="55" pos:column="74"/></argument_list></call>
                              <literal type="string" pos:line="56" pos:column="31">"internal error: couldn't find session "<pos:position pos:line="56" pos:column="71"/></literal>
                              <literal type="string" pos:line="57" pos:column="31">"info for user %s"<pos:position pos:line="57" pos:column="49"/></literal></expr></argument>, <argument><expr><name><name pos:line="57" pos:column="51">resp<pos:position pos:line="57" pos:column="55"/></name><operator pos:line="57" pos:column="55">-&gt;<pos:position pos:line="57" pos:column="60"/></operator><name pos:line="57" pos:column="57">username<pos:position pos:line="57" pos:column="65"/></name></name></expr></argument>)<pos:position pos:line="57" pos:column="66"/></argument_list></call></expr>;<pos:position pos:line="57" pos:column="67"/></expr_stmt>
                <return pos:line="58" pos:column="17">return <expr><operator pos:line="58" pos:column="24">!<pos:position pos:line="58" pos:column="25"/></operator><name pos:line="58" pos:column="25">OK<pos:position pos:line="58" pos:column="27"/></name></expr>;<pos:position pos:line="58" pos:column="28"/></return>
            }<pos:position pos:line="59" pos:column="14"/></block></then></if>
        }<pos:position pos:line="60" pos:column="10"/></block></then>
        <else pos:line="61" pos:column="9">else <block pos:line="61" pos:column="14">{
            <expr_stmt><expr><name pos:line="62" pos:column="13">ha1<pos:position pos:line="62" pos:column="16"/></name> <operator pos:line="62" pos:column="17">=<pos:position pos:line="62" pos:column="18"/></operator> <name><name pos:line="62" pos:column="19">conf<pos:position pos:line="62" pos:column="23"/></name><operator pos:line="62" pos:column="23">-&gt;<pos:position pos:line="62" pos:column="28"/></operator><name pos:line="62" pos:column="25">ha1<pos:position pos:line="62" pos:column="28"/></name></name></expr>;<pos:position pos:line="62" pos:column="29"/></expr_stmt>
        }<pos:position pos:line="63" pos:column="10"/></block></else></if>

        <if pos:line="65" pos:column="9">if <condition pos:line="65" pos:column="12">(<expr><name><name pos:line="65" pos:column="13">resp<pos:position pos:line="65" pos:column="17"/></name><operator pos:line="65" pos:column="17">-&gt;<pos:position pos:line="65" pos:column="22"/></operator><name pos:line="65" pos:column="19">message_qop<pos:position pos:line="65" pos:column="30"/></name></name> <operator pos:line="65" pos:column="31">&amp;&amp;<pos:position pos:line="65" pos:column="41"/></operator> <operator pos:line="65" pos:column="34">!<pos:position pos:line="65" pos:column="35"/></operator><call><name pos:line="65" pos:column="35">strcasecmp<pos:position pos:line="65" pos:column="45"/></name><argument_list pos:line="65" pos:column="45">(<argument><expr><name><name pos:line="65" pos:column="46">resp<pos:position pos:line="65" pos:column="50"/></name><operator pos:line="65" pos:column="50">-&gt;<pos:position pos:line="65" pos:column="55"/></operator><name pos:line="65" pos:column="52">message_qop<pos:position pos:line="65" pos:column="63"/></name></name></expr></argument>, <argument><expr><literal type="string" pos:line="65" pos:column="65">"auth-int"<pos:position pos:line="65" pos:column="75"/></literal></expr></argument>)<pos:position pos:line="65" pos:column="76"/></argument_list></call></expr>)<pos:position pos:line="65" pos:column="77"/></condition><then pos:line="65" pos:column="77"> <block pos:line="65" pos:column="78">{
            <expr_stmt><expr><name pos:line="66" pos:column="13">a2<pos:position pos:line="66" pos:column="15"/></name> <operator pos:line="66" pos:column="16">=<pos:position pos:line="66" pos:column="17"/></operator> <call><name pos:line="66" pos:column="18">apr_pstrcat<pos:position pos:line="66" pos:column="29"/></name><argument_list pos:line="66" pos:column="29">(<argument><expr><name><name pos:line="66" pos:column="30">r<pos:position pos:line="66" pos:column="31"/></name><operator pos:line="66" pos:column="31">-&gt;<pos:position pos:line="66" pos:column="36"/></operator><name pos:line="66" pos:column="33">pool<pos:position pos:line="66" pos:column="37"/></name></name></expr></argument>, <argument><expr><literal type="string" pos:line="66" pos:column="39">":"<pos:position pos:line="66" pos:column="42"/></literal></expr></argument>, <argument><expr><name><name pos:line="66" pos:column="44">resp<pos:position pos:line="66" pos:column="48"/></name><operator pos:line="66" pos:column="48">-&gt;<pos:position pos:line="66" pos:column="53"/></operator><name pos:line="66" pos:column="50">uri<pos:position pos:line="66" pos:column="53"/></name></name></expr></argument>, <argument><expr><literal type="string" pos:line="66" pos:column="55">":"<pos:position pos:line="66" pos:column="58"/></literal></expr></argument>,
                             <argument><expr><call><name pos:line="67" pos:column="30">ap_md5<pos:position pos:line="67" pos:column="36"/></name><argument_list pos:line="67" pos:column="36">(<argument><expr><name><name pos:line="67" pos:column="37">r<pos:position pos:line="67" pos:column="38"/></name><operator pos:line="67" pos:column="38">-&gt;<pos:position pos:line="67" pos:column="43"/></operator><name pos:line="67" pos:column="40">pool<pos:position pos:line="67" pos:column="44"/></name></name></expr></argument>,<argument><expr><operator pos:line="67" pos:column="45">(<pos:position pos:line="67" pos:column="46"/></operator><specifier pos:line="67" pos:column="46">const<pos:position pos:line="67" pos:column="51"/></specifier> <name pos:line="67" pos:column="52">unsigned<pos:position pos:line="67" pos:column="60"/></name> <name pos:line="67" pos:column="61">char<pos:position pos:line="67" pos:column="65"/></name> <operator pos:line="67" pos:column="66">*<pos:position pos:line="67" pos:column="67"/></operator><operator pos:line="67" pos:column="67">)<pos:position pos:line="67" pos:column="68"/></operator> <literal type="string" pos:line="67" pos:column="69">""<pos:position pos:line="67" pos:column="71"/></literal></expr></argument>)<pos:position pos:line="67" pos:column="72"/></argument_list></call></expr></argument>, <argument><expr><name pos:line="67" pos:column="74">NULL<pos:position pos:line="67" pos:column="78"/></name></expr></argument>)<pos:position pos:line="67" pos:column="79"/></argument_list></call></expr>;<pos:position pos:line="67" pos:column="80"/></expr_stmt>
                             <comment type="block" pos:line="68" pos:column="30">/* TBD */</comment>
        }<pos:position pos:line="69" pos:column="10"/></block></then>
        <else pos:line="70" pos:column="9">else <block pos:line="70" pos:column="14">{
            <expr_stmt><expr><name pos:line="71" pos:column="13">a2<pos:position pos:line="71" pos:column="15"/></name> <operator pos:line="71" pos:column="16">=<pos:position pos:line="71" pos:column="17"/></operator> <call><name pos:line="71" pos:column="18">apr_pstrcat<pos:position pos:line="71" pos:column="29"/></name><argument_list pos:line="71" pos:column="29">(<argument><expr><name><name pos:line="71" pos:column="30">r<pos:position pos:line="71" pos:column="31"/></name><operator pos:line="71" pos:column="31">-&gt;<pos:position pos:line="71" pos:column="36"/></operator><name pos:line="71" pos:column="33">pool<pos:position pos:line="71" pos:column="37"/></name></name></expr></argument>, <argument><expr><literal type="string" pos:line="71" pos:column="39">":"<pos:position pos:line="71" pos:column="42"/></literal></expr></argument>, <argument><expr><name><name pos:line="71" pos:column="44">resp<pos:position pos:line="71" pos:column="48"/></name><operator pos:line="71" pos:column="48">-&gt;<pos:position pos:line="71" pos:column="53"/></operator><name pos:line="71" pos:column="50">uri<pos:position pos:line="71" pos:column="53"/></name></name></expr></argument>, <argument><expr><name pos:line="71" pos:column="55">NULL<pos:position pos:line="71" pos:column="59"/></name></expr></argument>)<pos:position pos:line="71" pos:column="60"/></argument_list></call></expr>;<pos:position pos:line="71" pos:column="61"/></expr_stmt>
        }<pos:position pos:line="72" pos:column="10"/></block></else></if>
        <expr_stmt><expr><name pos:line="73" pos:column="9">ha2<pos:position pos:line="73" pos:column="12"/></name> <operator pos:line="73" pos:column="13">=<pos:position pos:line="73" pos:column="14"/></operator> <call><name pos:line="73" pos:column="15">ap_md5<pos:position pos:line="73" pos:column="21"/></name><argument_list pos:line="73" pos:column="21">(<argument><expr><name><name pos:line="73" pos:column="22">r<pos:position pos:line="73" pos:column="23"/></name><operator pos:line="73" pos:column="23">-&gt;<pos:position pos:line="73" pos:column="28"/></operator><name pos:line="73" pos:column="25">pool<pos:position pos:line="73" pos:column="29"/></name></name></expr></argument>, <argument><expr><operator pos:line="73" pos:column="31">(<pos:position pos:line="73" pos:column="32"/></operator><specifier pos:line="73" pos:column="32">const<pos:position pos:line="73" pos:column="37"/></specifier> <name pos:line="73" pos:column="38">unsigned<pos:position pos:line="73" pos:column="46"/></name> <name pos:line="73" pos:column="47">char<pos:position pos:line="73" pos:column="51"/></name> <operator pos:line="73" pos:column="52">*<pos:position pos:line="73" pos:column="53"/></operator><operator pos:line="73" pos:column="53">)<pos:position pos:line="73" pos:column="54"/></operator><name pos:line="73" pos:column="54">a2<pos:position pos:line="73" pos:column="56"/></name></expr></argument>)<pos:position pos:line="73" pos:column="57"/></argument_list></call></expr>;<pos:position pos:line="73" pos:column="58"/></expr_stmt>

        <expr_stmt><expr><name pos:line="75" pos:column="9">resp_dig<pos:position pos:line="75" pos:column="17"/></name> <operator pos:line="75" pos:column="18">=<pos:position pos:line="75" pos:column="19"/></operator> <call><name pos:line="75" pos:column="20">ap_md5<pos:position pos:line="75" pos:column="26"/></name><argument_list pos:line="75" pos:column="26">(<argument><expr><name><name pos:line="75" pos:column="27">r<pos:position pos:line="75" pos:column="28"/></name><operator pos:line="75" pos:column="28">-&gt;<pos:position pos:line="75" pos:column="33"/></operator><name pos:line="75" pos:column="30">pool<pos:position pos:line="75" pos:column="34"/></name></name></expr></argument>,
                          <argument><expr><operator pos:line="76" pos:column="27">(<pos:position pos:line="76" pos:column="28"/></operator><name pos:line="76" pos:column="28">unsigned<pos:position pos:line="76" pos:column="36"/></name> <name pos:line="76" pos:column="37">char<pos:position pos:line="76" pos:column="41"/></name> <operator pos:line="76" pos:column="42">*<pos:position pos:line="76" pos:column="43"/></operator><operator pos:line="76" pos:column="43">)<pos:position pos:line="76" pos:column="44"/></operator><call><name pos:line="76" pos:column="44">apr_pstrcat<pos:position pos:line="76" pos:column="55"/></name><argument_list pos:line="76" pos:column="55">(<argument><expr><name><name pos:line="76" pos:column="56">r<pos:position pos:line="76" pos:column="57"/></name><operator pos:line="76" pos:column="57">-&gt;<pos:position pos:line="76" pos:column="62"/></operator><name pos:line="76" pos:column="59">pool<pos:position pos:line="76" pos:column="63"/></name></name></expr></argument>, <argument><expr><name pos:line="76" pos:column="65">ha1<pos:position pos:line="76" pos:column="68"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="76" pos:column="70">":"<pos:position pos:line="76" pos:column="73"/></literal></expr></argument>,
                                                       <argument><expr><name><name pos:line="77" pos:column="56">resp<pos:position pos:line="77" pos:column="60"/></name><operator pos:line="77" pos:column="60">-&gt;<pos:position pos:line="77" pos:column="65"/></operator><name pos:line="77" pos:column="62">nonce<pos:position pos:line="77" pos:column="67"/></name></name></expr></argument>, <argument><expr><literal type="string" pos:line="77" pos:column="69">":"<pos:position pos:line="77" pos:column="72"/></literal></expr></argument>,
                                                       <argument><expr><name><name pos:line="78" pos:column="56">resp<pos:position pos:line="78" pos:column="60"/></name><operator pos:line="78" pos:column="60">-&gt;<pos:position pos:line="78" pos:column="65"/></operator><name pos:line="78" pos:column="62">nonce_count<pos:position pos:line="78" pos:column="73"/></name></name></expr></argument>, <argument><expr><literal type="string" pos:line="78" pos:column="75">":"<pos:position pos:line="78" pos:column="78"/></literal></expr></argument>,
                                                       <argument><expr><name><name pos:line="79" pos:column="56">resp<pos:position pos:line="79" pos:column="60"/></name><operator pos:line="79" pos:column="60">-&gt;<pos:position pos:line="79" pos:column="65"/></operator><name pos:line="79" pos:column="62">cnonce<pos:position pos:line="79" pos:column="68"/></name></name></expr></argument>, <argument><expr><literal type="string" pos:line="79" pos:column="70">":"<pos:position pos:line="79" pos:column="73"/></literal></expr></argument>,
                                                       <argument><expr><ternary><condition><expr><name><name pos:line="80" pos:column="56">resp<pos:position pos:line="80" pos:column="60"/></name><operator pos:line="80" pos:column="60">-&gt;<pos:position pos:line="80" pos:column="65"/></operator><name pos:line="80" pos:column="62">message_qop<pos:position pos:line="80" pos:column="73"/></name></name></expr> ?<pos:position pos:line="80" pos:column="75"/></condition><then pos:line="80" pos:column="75">
                                                         <expr><name><name pos:line="81" pos:column="58">resp<pos:position pos:line="81" pos:column="62"/></name><operator pos:line="81" pos:column="62">-&gt;<pos:position pos:line="81" pos:column="67"/></operator><name pos:line="81" pos:column="64">message_qop<pos:position pos:line="81" pos:column="75"/></name></name></expr> <pos:position pos:line="81" pos:column="76"/></then><else pos:line="81" pos:column="76">: <expr><literal type="string" pos:line="81" pos:column="78">""<pos:position pos:line="81" pos:column="80"/></literal></expr></else></ternary></expr></argument>,
                                                       <argument><expr><literal type="string" pos:line="82" pos:column="56">":"<pos:position pos:line="82" pos:column="59"/></literal></expr></argument>, <argument><expr><name pos:line="82" pos:column="61">ha2<pos:position pos:line="82" pos:column="64"/></name></expr></argument>, <argument><expr><name pos:line="82" pos:column="66">NULL<pos:position pos:line="82" pos:column="70"/></name></expr></argument>)<pos:position pos:line="82" pos:column="71"/></argument_list></call></expr></argument>)<pos:position pos:line="82" pos:column="72"/></argument_list></call></expr>;<pos:position pos:line="82" pos:column="73"/></expr_stmt>

        <comment type="block" pos:line="84" pos:column="9">/* assemble Authentication-Info header
         */</comment>
        <expr_stmt><expr><name pos:line="86" pos:column="9">ai<pos:position pos:line="86" pos:column="11"/></name> <operator pos:line="86" pos:column="12">=<pos:position pos:line="86" pos:column="13"/></operator> <macro><name pos:line="86" pos:column="14">apr_pstrcat<pos:position pos:line="86" pos:column="25"/></name><argument_list pos:line="86" pos:column="25">(<argument pos:line="86" pos:column="26">r-&gt;pool<pos:position pos:line="86" pos:column="33"/></argument>,
                         <argument><literal type="string" pos:line="87" pos:column="26">"rspauth=\""<pos:position pos:line="87" pos:column="38"/></literal></argument>, <argument pos:line="87" pos:column="40">resp_dig<pos:position pos:line="87" pos:column="48"/></argument>, <argument><literal type="string" pos:line="87" pos:column="50">"\""<pos:position pos:line="87" pos:column="54"/></literal></argument>,
                         <argument pos:line="88" pos:column="26">nextnonce<pos:position pos:line="88" pos:column="35"/></argument>,
                         <argument pos:line="89" pos:column="26">resp-&gt;cnonce ? <literal type="string" pos:line="89" pos:column="41">", cnonce=\""<pos:position pos:line="89" pos:column="54"/></literal> : <literal type="string" pos:line="89" pos:column="57">""<pos:position pos:line="89" pos:column="59"/></literal></argument>,
                         <argument pos:line="90" pos:column="26">resp-&gt;cnonce
                           ? ap_escape_quotes(r-&gt;pool, resp-&gt;cnonce)
                           : <literal type="string" pos:line="92" pos:column="30">""<pos:position pos:line="92" pos:column="32"/></literal></argument>,
                         <argument pos:line="93" pos:column="26">resp-&gt;cnonce ? <literal type="string" pos:line="93" pos:column="41">"\""<pos:position pos:line="93" pos:column="45"/></literal> : <literal type="string" pos:line="93" pos:column="48">""<pos:position pos:line="93" pos:column="50"/></literal></argument>,
                         <argument pos:line="94" pos:column="26">resp-&gt;nonce_count ? <literal type="string" pos:line="94" pos:column="46">", nc="<pos:position pos:line="94" pos:column="53"/></literal> : <literal type="string" pos:line="94" pos:column="56">""<pos:position pos:line="94" pos:column="58"/></literal></argument>,
                         <argument pos:line="95" pos:column="26">resp-&gt;nonce_count ? resp-&gt;nonce_count : <literal type="string" pos:line="95" pos:column="66">""<pos:position pos:line="95" pos:column="68"/></literal></argument>,
                         <argument pos:line="96" pos:column="26">resp-&gt;message_qop ? <literal type="string" pos:line="96" pos:column="46">", qop="<pos:position pos:line="96" pos:column="54"/></literal> : <literal type="string" pos:line="96" pos:column="57">""<pos:position pos:line="96" pos:column="59"/></literal></argument>,
                         <argument pos:line="97" pos:column="26">resp-&gt;messa<pos:position pos:line="97" pos:column="37"/></argument></argument_list></macro></expr></expr_stmt></block></else></if></block></function></unit>

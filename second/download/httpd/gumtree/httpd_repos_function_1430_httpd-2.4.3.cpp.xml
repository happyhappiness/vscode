<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/httpd/gumtree/httpd_repos_function_1430_httpd-2.4.3.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">int<pos:position pos:line="1" pos:column="11"/></name></type> <name pos:line="1" pos:column="12">find_lang_index<pos:position pos:line="1" pos:column="27"/></name><parameter_list pos:line="1" pos:column="27">(<parameter><decl><type><name pos:line="1" pos:column="28">apr_array_header_t<pos:position pos:line="1" pos:column="46"/></name> <modifier pos:line="1" pos:column="47">*<pos:position pos:line="1" pos:column="48"/></modifier></type><name pos:line="1" pos:column="48">accept_langs<pos:position pos:line="1" pos:column="60"/></name></decl></parameter>, <parameter><decl><type><name pos:line="1" pos:column="62">char<pos:position pos:line="1" pos:column="66"/></name> <modifier pos:line="1" pos:column="67">*<pos:position pos:line="1" pos:column="68"/></modifier></type><name pos:line="1" pos:column="68">lang<pos:position pos:line="1" pos:column="72"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="73"/></parameter_list>
<block pos:line="2" pos:column="1">{
    <decl_stmt><decl><type><specifier pos:line="3" pos:column="5">const<pos:position pos:line="3" pos:column="10"/></specifier> <name pos:line="3" pos:column="11">char<pos:position pos:line="3" pos:column="15"/></name> <modifier pos:line="3" pos:column="16">*<pos:position pos:line="3" pos:column="17"/></modifier><modifier pos:line="3" pos:column="17">*<pos:position pos:line="3" pos:column="18"/></modifier></type><name pos:line="3" pos:column="18">alang<pos:position pos:line="3" pos:column="23"/></name></decl>;<pos:position pos:line="3" pos:column="24"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="4" pos:column="5">int<pos:position pos:line="4" pos:column="8"/></name></type> <name pos:line="4" pos:column="9">i<pos:position pos:line="4" pos:column="10"/></name></decl>;<pos:position pos:line="4" pos:column="11"/></decl_stmt>

    <if pos:line="6" pos:column="5">if <condition pos:line="6" pos:column="8">(<expr><operator pos:line="6" pos:column="9">!<pos:position pos:line="6" pos:column="10"/></operator><name pos:line="6" pos:column="10">lang<pos:position pos:line="6" pos:column="14"/></name> <operator pos:line="6" pos:column="15">||<pos:position pos:line="6" pos:column="17"/></operator> <operator pos:line="6" pos:column="18">!<pos:position pos:line="6" pos:column="19"/></operator><name pos:line="6" pos:column="19">accept_langs<pos:position pos:line="6" pos:column="31"/></name></expr>)<pos:position pos:line="6" pos:column="32"/></condition><then pos:line="6" pos:column="32"> <block pos:line="6" pos:column="33">{
        <return pos:line="7" pos:column="9">return <expr><operator pos:line="7" pos:column="16">-<pos:position pos:line="7" pos:column="17"/></operator><literal type="number" pos:line="7" pos:column="17">1<pos:position pos:line="7" pos:column="18"/></literal></expr>;<pos:position pos:line="7" pos:column="19"/></return>
    }<pos:position pos:line="8" pos:column="6"/></block></then></if>

    <expr_stmt><expr><name pos:line="10" pos:column="5">alang<pos:position pos:line="10" pos:column="10"/></name> <operator pos:line="10" pos:column="11">=<pos:position pos:line="10" pos:column="12"/></operator> <operator pos:line="10" pos:column="13">(<pos:position pos:line="10" pos:column="14"/></operator><specifier pos:line="10" pos:column="14">const<pos:position pos:line="10" pos:column="19"/></specifier> <name pos:line="10" pos:column="20">char<pos:position pos:line="10" pos:column="24"/></name> <operator pos:line="10" pos:column="25">*<pos:position pos:line="10" pos:column="26"/></operator><operator pos:line="10" pos:column="26">*<pos:position pos:line="10" pos:column="27"/></operator><operator pos:line="10" pos:column="27">)<pos:position pos:line="10" pos:column="28"/></operator> <name><name pos:line="10" pos:column="29">accept_langs<pos:position pos:line="10" pos:column="41"/></name><operator pos:line="10" pos:column="41">-&gt;<pos:position pos:line="10" pos:column="46"/></operator><name pos:line="10" pos:column="43">elts<pos:position pos:line="10" pos:column="47"/></name></name></expr>;<pos:position pos:line="10" pos:column="48"/></expr_stmt>

    <for pos:line="12" pos:column="5">for <control pos:line="12" pos:column="9">(<init><expr><name pos:line="12" pos:column="10">i<pos:position pos:line="12" pos:column="11"/></name> <operator pos:line="12" pos:column="12">=<pos:position pos:line="12" pos:column="13"/></operator> <literal type="number" pos:line="12" pos:column="14">0<pos:position pos:line="12" pos:column="15"/></literal></expr>;<pos:position pos:line="12" pos:column="16"/></init> <condition><expr><name pos:line="12" pos:column="17">i<pos:position pos:line="12" pos:column="18"/></name> <operator pos:line="12" pos:column="19">&lt;<pos:position pos:line="12" pos:column="23"/></operator> <name><name pos:line="12" pos:column="21">accept_langs<pos:position pos:line="12" pos:column="33"/></name><operator pos:line="12" pos:column="33">-&gt;<pos:position pos:line="12" pos:column="38"/></operator><name pos:line="12" pos:column="35">nelts<pos:position pos:line="12" pos:column="40"/></name></name></expr>;<pos:position pos:line="12" pos:column="41"/></condition> <incr><expr><operator pos:line="12" pos:column="42">++<pos:position pos:line="12" pos:column="44"/></operator><name pos:line="12" pos:column="44">i<pos:position pos:line="12" pos:column="45"/></name></expr></incr>)<pos:position pos:line="12" pos:column="46"/></control> <block pos:line="12" pos:column="47">{
        <if pos:line="13" pos:column="9">if <condition pos:line="13" pos:column="12">(<expr><operator pos:line="13" pos:column="13">!<pos:position pos:line="13" pos:column="14"/></operator><call><name pos:line="13" pos:column="14">strncmp<pos:position pos:line="13" pos:column="21"/></name><argument_list pos:line="13" pos:column="21">(<argument><expr><name pos:line="13" pos:column="22">lang<pos:position pos:line="13" pos:column="26"/></name></expr></argument>, <argument><expr><operator pos:line="13" pos:column="28">*<pos:position pos:line="13" pos:column="29"/></operator><name pos:line="13" pos:column="29">alang<pos:position pos:line="13" pos:column="34"/></name></expr></argument>, <argument><expr><call><name pos:line="13" pos:column="36">strlen<pos:position pos:line="13" pos:column="42"/></name><argument_list pos:line="13" pos:column="42">(<argument><expr><operator pos:line="13" pos:column="43">*<pos:position pos:line="13" pos:column="44"/></operator><name pos:line="13" pos:column="44">alang<pos:position pos:line="13" pos:column="49"/></name></expr></argument>)<pos:position pos:line="13" pos:column="50"/></argument_list></call></expr></argument>)<pos:position pos:line="13" pos:column="51"/></argument_list></call></expr>)<pos:position pos:line="13" pos:column="52"/></condition><then pos:line="13" pos:column="52"> <block pos:line="13" pos:column="53">{
            <return pos:line="14" pos:column="13">return <expr><name pos:line="14" pos:column="20">i<pos:position pos:line="14" pos:column="21"/></name></expr>;<pos:position pos:line="14" pos:column="22"/></return>
        }<pos:position pos:line="15" pos:column="10"/></block></then></if>
        <expr_stmt><expr><name pos:line="16" pos:column="9">alang<pos:position pos:line="16" pos:column="14"/></name> <operator pos:line="16" pos:column="15">+=<pos:position pos:line="16" pos:column="17"/></operator> <operator pos:line="16" pos:column="18">(<pos:position pos:line="16" pos:column="19"/></operator><name><name pos:line="16" pos:column="19">accept_langs<pos:position pos:line="16" pos:column="31"/></name><operator pos:line="16" pos:column="31">-&gt;<pos:position pos:line="16" pos:column="36"/></operator><name pos:line="16" pos:column="33">elt_size<pos:position pos:line="16" pos:column="41"/></name></name> <operator pos:line="16" pos:column="42">/<pos:position pos:line="16" pos:column="43"/></operator> <sizeof pos:line="16" pos:column="44">sizeof<argument_list pos:line="16" pos:column="50">(<argument><expr><name pos:line="16" pos:column="51">char<pos:position pos:line="16" pos:column="55"/></name><operator pos:line="16" pos:column="55">*<pos:position pos:line="16" pos:column="56"/></operator></expr></argument>)<pos:position pos:line="16" pos:column="57"/></argument_list></sizeof><operator pos:line="16" pos:column="57">)<pos:position pos:line="16" pos:column="58"/></operator></expr>;<pos:position pos:line="16" pos:column="59"/></expr_stmt>
    }<pos:position pos:line="17" pos:column="6"/></block></for>

    <return pos:line="19" pos:column="5">return <expr><operator pos:line="19" pos:column="12">-<pos:position pos:line="19" pos:column="13"/></operator><literal type="number" pos:line="19" pos:column="13">1<pos:position pos:line="19" pos:column="14"/></literal></expr>;<pos:position pos:line="19" pos:column="15"/></return>
}<pos:position pos:line="20" pos:column="2"/></block></function></unit>

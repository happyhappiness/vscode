<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/httpd/gumtree/httpd_repos_function_1325_httpd-2.4.6.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">apr_status_t<pos:position pos:line="1" pos:column="20"/></name></type> <name pos:line="1" pos:column="21">socache_shmcb_iterate<pos:position pos:line="1" pos:column="42"/></name><parameter_list pos:line="1" pos:column="42">(<parameter><decl><type><name pos:line="1" pos:column="43">ap_socache_instance_t<pos:position pos:line="1" pos:column="64"/></name> <modifier pos:line="1" pos:column="65">*<pos:position pos:line="1" pos:column="66"/></modifier></type><name pos:line="1" pos:column="66">instance<pos:position pos:line="1" pos:column="74"/></name></decl></parameter>,
                                          <parameter><decl><type><name pos:line="2" pos:column="43">server_rec<pos:position pos:line="2" pos:column="53"/></name> <modifier pos:line="2" pos:column="54">*<pos:position pos:line="2" pos:column="55"/></modifier></type><name pos:line="2" pos:column="55">s<pos:position pos:line="2" pos:column="56"/></name></decl></parameter>, <parameter><decl><type><name pos:line="2" pos:column="58">void<pos:position pos:line="2" pos:column="62"/></name> <modifier pos:line="2" pos:column="63">*<pos:position pos:line="2" pos:column="64"/></modifier></type><name pos:line="2" pos:column="64">userctx<pos:position pos:line="2" pos:column="71"/></name></decl></parameter>,
                                          <parameter><decl><type><name pos:line="3" pos:column="43">ap_socache_iterator_t<pos:position pos:line="3" pos:column="64"/></name> <modifier pos:line="3" pos:column="65">*<pos:position pos:line="3" pos:column="66"/></modifier></type><name pos:line="3" pos:column="66">iterator<pos:position pos:line="3" pos:column="74"/></name></decl></parameter>,
                                          <parameter><decl><type><name pos:line="4" pos:column="43">apr_pool_t<pos:position pos:line="4" pos:column="53"/></name> <modifier pos:line="4" pos:column="54">*<pos:position pos:line="4" pos:column="55"/></modifier></type><name pos:line="4" pos:column="55">pool<pos:position pos:line="4" pos:column="59"/></name></decl></parameter>)<pos:position pos:line="4" pos:column="60"/></parameter_list>
<block pos:line="5" pos:column="1">{
    <decl_stmt><decl><type><name pos:line="6" pos:column="5">SHMCBHeader<pos:position pos:line="6" pos:column="16"/></name> <modifier pos:line="6" pos:column="17">*<pos:position pos:line="6" pos:column="18"/></modifier></type><name pos:line="6" pos:column="18">header<pos:position pos:line="6" pos:column="24"/></name> <init pos:line="6" pos:column="25">= <expr><name><name pos:line="6" pos:column="27">instance<pos:position pos:line="6" pos:column="35"/></name><operator pos:line="6" pos:column="35">-&gt;<pos:position pos:line="6" pos:column="40"/></operator><name pos:line="6" pos:column="37">header<pos:position pos:line="6" pos:column="43"/></name></name></expr></init></decl>;<pos:position pos:line="6" pos:column="44"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="7" pos:column="5">unsigned<pos:position pos:line="7" pos:column="13"/></name> <name pos:line="7" pos:column="14">int<pos:position pos:line="7" pos:column="17"/></name></type> <name pos:line="7" pos:column="18">loop<pos:position pos:line="7" pos:column="22"/></name></decl>;<pos:position pos:line="7" pos:column="23"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="8" pos:column="5">apr_time_t<pos:position pos:line="8" pos:column="15"/></name></type> <name pos:line="8" pos:column="16">now<pos:position pos:line="8" pos:column="19"/></name> <init pos:line="8" pos:column="20">= <expr><call><name pos:line="8" pos:column="22">apr_time_now<pos:position pos:line="8" pos:column="34"/></name><argument_list pos:line="8" pos:column="34">()<pos:position pos:line="8" pos:column="36"/></argument_list></call></expr></init></decl>;<pos:position pos:line="8" pos:column="37"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="9" pos:column="5">apr_status_t<pos:position pos:line="9" pos:column="17"/></name></type> <name pos:line="9" pos:column="18">rv<pos:position pos:line="9" pos:column="20"/></name> <init pos:line="9" pos:column="21">= <expr><name pos:line="9" pos:column="23">APR_SUCCESS<pos:position pos:line="9" pos:column="34"/></name></expr></init></decl>;<pos:position pos:line="9" pos:column="35"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="10" pos:column="5">apr_size_t<pos:position pos:line="10" pos:column="15"/></name></type> <name pos:line="10" pos:column="16">buflen<pos:position pos:line="10" pos:column="22"/></name> <init pos:line="10" pos:column="23">= <expr><literal type="number" pos:line="10" pos:column="25">0<pos:position pos:line="10" pos:column="26"/></literal></expr></init></decl>;<pos:position pos:line="10" pos:column="27"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="11" pos:column="5">unsigned<pos:position pos:line="11" pos:column="13"/></name> <name pos:line="11" pos:column="14">char<pos:position pos:line="11" pos:column="18"/></name> <modifier pos:line="11" pos:column="19">*<pos:position pos:line="11" pos:column="20"/></modifier></type><name pos:line="11" pos:column="20">buf<pos:position pos:line="11" pos:column="23"/></name> <init pos:line="11" pos:column="24">= <expr><name pos:line="11" pos:column="26">NULL<pos:position pos:line="11" pos:column="30"/></name></expr></init></decl>;<pos:position pos:line="11" pos:column="31"/></decl_stmt>

    <comment type="block" pos:line="13" pos:column="5">/* Perform the iteration inside the mutex to avoid corruption or invalid
     * pointer arithmetic. The rest of our logic uses read-only header data so
     * doesn't need the lock. */</comment>
    <comment type="block" pos:line="16" pos:column="5">/* Iterate over the subcaches */</comment>
    <for pos:line="17" pos:column="5">for <control pos:line="17" pos:column="9">(<init><expr><name pos:line="17" pos:column="10">loop<pos:position pos:line="17" pos:column="14"/></name> <operator pos:line="17" pos:column="15">=<pos:position pos:line="17" pos:column="16"/></operator> <literal type="number" pos:line="17" pos:column="17">0<pos:position pos:line="17" pos:column="18"/></literal></expr>;<pos:position pos:line="17" pos:column="19"/></init> <condition><expr><name pos:line="17" pos:column="20">loop<pos:position pos:line="17" pos:column="24"/></name> <operator pos:line="17" pos:column="25">&lt;<pos:position pos:line="17" pos:column="29"/></operator> <name><name pos:line="17" pos:column="27">header<pos:position pos:line="17" pos:column="33"/></name><operator pos:line="17" pos:column="33">-&gt;<pos:position pos:line="17" pos:column="38"/></operator><name pos:line="17" pos:column="35">subcache_num<pos:position pos:line="17" pos:column="47"/></name></name> <operator pos:line="17" pos:column="48">&amp;&amp;<pos:position pos:line="17" pos:column="58"/></operator> <name pos:line="17" pos:column="51">rv<pos:position pos:line="17" pos:column="53"/></name> <operator pos:line="17" pos:column="54">==<pos:position pos:line="17" pos:column="56"/></operator> <name pos:line="17" pos:column="57">APR_SUCCESS<pos:position pos:line="17" pos:column="68"/></name></expr>;<pos:position pos:line="17" pos:column="69"/></condition> <incr><expr><name pos:line="17" pos:column="70">loop<pos:position pos:line="17" pos:column="74"/></name><operator pos:line="17" pos:column="74">++<pos:position pos:line="17" pos:column="76"/></operator></expr></incr>)<pos:position pos:line="17" pos:column="77"/></control> <block pos:line="17" pos:column="78">{
        <decl_stmt><decl><type><name pos:line="18" pos:column="9">SHMCBSubcache<pos:position pos:line="18" pos:column="22"/></name> <modifier pos:line="18" pos:column="23">*<pos:position pos:line="18" pos:column="24"/></modifier></type><name pos:line="18" pos:column="24">subcache<pos:position pos:line="18" pos:column="32"/></name> <init pos:line="18" pos:column="33">= <expr><call><name pos:line="18" pos:column="35">SHMCB_SUBCACHE<pos:position pos:line="18" pos:column="49"/></name><argument_list pos:line="18" pos:column="49">(<argument><expr><name pos:line="18" pos:column="50">header<pos:position pos:line="18" pos:column="56"/></name></expr></argument>, <argument><expr><name pos:line="18" pos:column="58">loop<pos:position pos:line="18" pos:column="62"/></name></expr></argument>)<pos:position pos:line="18" pos:column="63"/></argument_list></call></expr></init></decl>;<pos:position pos:line="18" pos:column="64"/></decl_stmt>
        <expr_stmt><expr><name pos:line="19" pos:column="9">rv<pos:position pos:line="19" pos:column="11"/></name> <operator pos:line="19" pos:column="12">=<pos:position pos:line="19" pos:column="13"/></operator> <call><name pos:line="19" pos:column="14">shmcb_subcache_iterate<pos:position pos:line="19" pos:column="36"/></name><argument_list pos:line="19" pos:column="36">(<argument><expr><name pos:line="19" pos:column="37">instance<pos:position pos:line="19" pos:column="45"/></name></expr></argument>, <argument><expr><name pos:line="19" pos:column="47">s<pos:position pos:line="19" pos:column="48"/></name></expr></argument>, <argument><expr><name pos:line="19" pos:column="50">userctx<pos:position pos:line="19" pos:column="57"/></name></expr></argument>, <argument><expr><name pos:line="19" pos:column="59">header<pos:position pos:line="19" pos:column="65"/></name></expr></argument>, <argument><expr><name pos:line="19" pos:column="67">subcache<pos:position pos:line="19" pos:column="75"/></name></expr></argument>,
                                    <argument><expr><name pos:line="20" pos:column="37">iterator<pos:position pos:line="20" pos:column="45"/></name></expr></argument>, <argument><expr><operator pos:line="20" pos:column="47">&amp;<pos:position pos:line="20" pos:column="52"/></operator><name pos:line="20" pos:column="48">buf<pos:position pos:line="20" pos:column="51"/></name></expr></argument>, <argument><expr><operator pos:line="20" pos:column="53">&amp;<pos:position pos:line="20" pos:column="58"/></operator><name pos:line="20" pos:column="54">buflen<pos:position pos:line="20" pos:column="60"/></name></expr></argument>, <argument><expr><name pos:line="20" pos:column="62">pool<pos:position pos:line="20" pos:column="66"/></name></expr></argument>, <argument><expr><name pos:line="20" pos:column="68">now<pos:position pos:line="20" pos:column="71"/></name></expr></argument>)<pos:position pos:line="20" pos:column="72"/></argument_list></call></expr>;<pos:position pos:line="20" pos:column="73"/></expr_stmt>
    }<pos:position pos:line="21" pos:column="6"/></block></for>
    <return pos:line="22" pos:column="5">return <expr><name pos:line="22" pos:column="12">rv<pos:position pos:line="22" pos:column="14"/></name></expr>;<pos:position pos:line="22" pos:column="15"/></return>
}<pos:position pos:line="23" pos:column="2"/></block></function></unit>

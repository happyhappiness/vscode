<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/httpd/gumtree/httpd_function_636.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">int<pos:position pos:line="1" pos:column="11"/></name></type> <name pos:line="1" pos:column="12">handle_set<pos:position pos:line="1" pos:column="22"/></name><parameter_list pos:line="1" pos:column="22">(<parameter><decl><type><name pos:line="1" pos:column="23">include_ctx_t<pos:position pos:line="1" pos:column="36"/></name> <modifier pos:line="1" pos:column="37">*<pos:position pos:line="1" pos:column="38"/></modifier></type><name pos:line="1" pos:column="38">ctx<pos:position pos:line="1" pos:column="41"/></name></decl></parameter>, <parameter><decl><type><name pos:line="1" pos:column="43">apr_bucket_brigade<pos:position pos:line="1" pos:column="61"/></name> <modifier pos:line="1" pos:column="62">*<pos:position pos:line="1" pos:column="63"/></modifier><modifier pos:line="1" pos:column="63">*<pos:position pos:line="1" pos:column="64"/></modifier></type><name pos:line="1" pos:column="64">bb<pos:position pos:line="1" pos:column="66"/></name></decl></parameter>, 
                      <parameter><decl><type><name pos:line="2" pos:column="23">request_rec<pos:position pos:line="2" pos:column="34"/></name> <modifier pos:line="2" pos:column="35">*<pos:position pos:line="2" pos:column="36"/></modifier></type><name pos:line="2" pos:column="36">r<pos:position pos:line="2" pos:column="37"/></name></decl></parameter>, <parameter><decl><type><name pos:line="2" pos:column="39">ap_filter_t<pos:position pos:line="2" pos:column="50"/></name> <modifier pos:line="2" pos:column="51">*<pos:position pos:line="2" pos:column="52"/></modifier></type><name pos:line="2" pos:column="52">f<pos:position pos:line="2" pos:column="53"/></name></decl></parameter>, <parameter><decl><type><name pos:line="2" pos:column="55">apr_bucket<pos:position pos:line="2" pos:column="65"/></name> <modifier pos:line="2" pos:column="66">*<pos:position pos:line="2" pos:column="67"/></modifier></type><name pos:line="2" pos:column="67">head_ptr<pos:position pos:line="2" pos:column="75"/></name></decl></parameter>, 
                      <parameter><decl><type><name pos:line="3" pos:column="23">apr_bucket<pos:position pos:line="3" pos:column="33"/></name> <modifier pos:line="3" pos:column="34">*<pos:position pos:line="3" pos:column="35"/></modifier><modifier pos:line="3" pos:column="35">*<pos:position pos:line="3" pos:column="36"/></modifier></type><name pos:line="3" pos:column="36">inserted_head<pos:position pos:line="3" pos:column="49"/></name></decl></parameter>)<pos:position pos:line="3" pos:column="50"/></parameter_list>
<block pos:line="4" pos:column="1">{
    <decl_stmt><decl><type><name pos:line="5" pos:column="5">char<pos:position pos:line="5" pos:column="9"/></name> <modifier pos:line="5" pos:column="10">*<pos:position pos:line="5" pos:column="11"/></modifier></type><name pos:line="5" pos:column="11">tag<pos:position pos:line="5" pos:column="14"/></name>     <init pos:line="5" pos:column="19">= <expr><name pos:line="5" pos:column="21">NULL<pos:position pos:line="5" pos:column="25"/></name></expr></init></decl>;<pos:position pos:line="5" pos:column="26"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="6" pos:column="5">char<pos:position pos:line="6" pos:column="9"/></name> <modifier pos:line="6" pos:column="10">*<pos:position pos:line="6" pos:column="11"/></modifier></type><name pos:line="6" pos:column="11">tag_val<pos:position pos:line="6" pos:column="18"/></name> <init pos:line="6" pos:column="19">= <expr><name pos:line="6" pos:column="21">NULL<pos:position pos:line="6" pos:column="25"/></name></expr></init></decl>;<pos:position pos:line="6" pos:column="26"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="7" pos:column="5">char<pos:position pos:line="7" pos:column="9"/></name> <modifier pos:line="7" pos:column="10">*<pos:position pos:line="7" pos:column="11"/></modifier></type><name pos:line="7" pos:column="11">var<pos:position pos:line="7" pos:column="14"/></name>     <init pos:line="7" pos:column="19">= <expr><name pos:line="7" pos:column="21">NULL<pos:position pos:line="7" pos:column="25"/></name></expr></init></decl>;<pos:position pos:line="7" pos:column="26"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="8" pos:column="5">apr_bucket<pos:position pos:line="8" pos:column="15"/></name> <modifier pos:line="8" pos:column="16">*<pos:position pos:line="8" pos:column="17"/></modifier></type><name pos:line="8" pos:column="17">tmp_buck<pos:position pos:line="8" pos:column="25"/></name></decl>;<pos:position pos:line="8" pos:column="26"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="9" pos:column="5">char<pos:position pos:line="9" pos:column="9"/></name> <modifier pos:line="9" pos:column="10">*<pos:position pos:line="9" pos:column="11"/></modifier></type><name pos:line="9" pos:column="11">parsed_string<pos:position pos:line="9" pos:column="24"/></name></decl>;<pos:position pos:line="9" pos:column="25"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="10" pos:column="5">request_rec<pos:position pos:line="10" pos:column="16"/></name> <modifier pos:line="10" pos:column="17">*<pos:position pos:line="10" pos:column="18"/></modifier></type><name pos:line="10" pos:column="18">sub<pos:position pos:line="10" pos:column="21"/></name> <init pos:line="10" pos:column="22">= <expr><name><name pos:line="10" pos:column="24">r<pos:position pos:line="10" pos:column="25"/></name><operator pos:line="10" pos:column="25">-&gt;<pos:position pos:line="10" pos:column="30"/></operator><name pos:line="10" pos:column="27">main<pos:position pos:line="10" pos:column="31"/></name></name></expr></init></decl>;<pos:position pos:line="10" pos:column="32"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="11" pos:column="5">apr_pool_t<pos:position pos:line="11" pos:column="15"/></name> <modifier pos:line="11" pos:column="16">*<pos:position pos:line="11" pos:column="17"/></modifier></type><name pos:line="11" pos:column="17">p<pos:position pos:line="11" pos:column="18"/></name> <init pos:line="11" pos:column="19">= <expr><name><name pos:line="11" pos:column="21">r<pos:position pos:line="11" pos:column="22"/></name><operator pos:line="11" pos:column="22">-&gt;<pos:position pos:line="11" pos:column="27"/></operator><name pos:line="11" pos:column="24">pool<pos:position pos:line="11" pos:column="28"/></name></name></expr></init></decl>;<pos:position pos:line="11" pos:column="29"/></decl_stmt>

    <comment type="block" pos:line="13" pos:column="5">/* we need to use the 'main' request pool to set notes as that is 
     * a notes lifetime
     */</comment>
    <while pos:line="16" pos:column="5">while <condition pos:line="16" pos:column="11">(<expr><name pos:line="16" pos:column="12">sub<pos:position pos:line="16" pos:column="15"/></name></expr>)<pos:position pos:line="16" pos:column="16"/></condition> <block pos:line="16" pos:column="17">{
        <expr_stmt><expr><name pos:line="17" pos:column="9">p<pos:position pos:line="17" pos:column="10"/></name> <operator pos:line="17" pos:column="11">=<pos:position pos:line="17" pos:column="12"/></operator> <name><name pos:line="17" pos:column="13">sub<pos:position pos:line="17" pos:column="16"/></name><operator pos:line="17" pos:column="16">-&gt;<pos:position pos:line="17" pos:column="21"/></operator><name pos:line="17" pos:column="18">pool<pos:position pos:line="17" pos:column="22"/></name></name></expr>;<pos:position pos:line="17" pos:column="23"/></expr_stmt>
        <expr_stmt><expr><name pos:line="18" pos:column="9">sub<pos:position pos:line="18" pos:column="12"/></name> <operator pos:line="18" pos:column="13">=<pos:position pos:line="18" pos:column="14"/></operator> <name><name pos:line="18" pos:column="15">sub<pos:position pos:line="18" pos:column="18"/></name><operator pos:line="18" pos:column="18">-&gt;<pos:position pos:line="18" pos:column="23"/></operator><name pos:line="18" pos:column="20">main<pos:position pos:line="18" pos:column="24"/></name></name></expr>;<pos:position pos:line="18" pos:column="25"/></expr_stmt>
    }<pos:position pos:line="19" pos:column="6"/></block></while>

    <expr_stmt><expr><operator pos:line="21" pos:column="5">*<pos:position pos:line="21" pos:column="6"/></operator><name pos:line="21" pos:column="6">inserted_head<pos:position pos:line="21" pos:column="19"/></name> <operator pos:line="21" pos:column="20">=<pos:position pos:line="21" pos:column="21"/></operator> <name pos:line="21" pos:column="22">NULL<pos:position pos:line="21" pos:column="26"/></name></expr>;<pos:position pos:line="21" pos:column="27"/></expr_stmt>
    <if pos:line="22" pos:column="5">if <condition pos:line="22" pos:column="8">(<expr><name><name pos:line="22" pos:column="9">ctx<pos:position pos:line="22" pos:column="12"/></name><operator pos:line="22" pos:column="12">-&gt;<pos:position pos:line="22" pos:column="17"/></operator><name pos:line="22" pos:column="14">flags<pos:position pos:line="22" pos:column="19"/></name></name> <operator pos:line="22" pos:column="20">&amp;<pos:position pos:line="22" pos:column="25"/></operator> <name pos:line="22" pos:column="22">FLAG_PRINTING<pos:position pos:line="22" pos:column="35"/></name></expr>)<pos:position pos:line="22" pos:column="36"/></condition><then pos:line="22" pos:column="36"> <block pos:line="22" pos:column="37">{
        <while pos:line="23" pos:column="9">while <condition pos:line="23" pos:column="15">(<expr><literal type="number" pos:line="23" pos:column="16">1<pos:position pos:line="23" pos:column="17"/></literal></expr>)<pos:position pos:line="23" pos:column="18"/></condition> <block pos:line="23" pos:column="19">{
            <expr_stmt><expr><call><name pos:line="24" pos:column="13">ap_ssi_get_tag_and_value<pos:position pos:line="24" pos:column="37"/></name><argument_list pos:line="24" pos:column="37">(<argument><expr><name pos:line="24" pos:column="38">ctx<pos:position pos:line="24" pos:column="41"/></name></expr></argument>, <argument><expr><operator pos:line="24" pos:column="43">&amp;<pos:position pos:line="24" pos:column="48"/></operator><name pos:line="24" pos:column="44">tag<pos:position pos:line="24" pos:column="47"/></name></expr></argument>, <argument><expr><operator pos:line="24" pos:column="49">&amp;<pos:position pos:line="24" pos:column="54"/></operator><name pos:line="24" pos:column="50">tag_val<pos:position pos:line="24" pos:column="57"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="24" pos:column="59">1<pos:position pos:line="24" pos:column="60"/></literal></expr></argument>)<pos:position pos:line="24" pos:column="61"/></argument_list></call></expr>;<pos:position pos:line="24" pos:column="62"/></expr_stmt>
            <if pos:line="25" pos:column="13">if <condition pos:line="25" pos:column="16">(<expr><operator pos:line="25" pos:column="17">(<pos:position pos:line="25" pos:column="18"/></operator><name pos:line="25" pos:column="18">tag<pos:position pos:line="25" pos:column="21"/></name> <operator pos:line="25" pos:column="22">==<pos:position pos:line="25" pos:column="24"/></operator> <name pos:line="25" pos:column="25">NULL<pos:position pos:line="25" pos:column="29"/></name><operator pos:line="25" pos:column="29">)<pos:position pos:line="25" pos:column="30"/></operator> <operator pos:line="25" pos:column="31">&amp;&amp;<pos:position pos:line="25" pos:column="41"/></operator> <operator pos:line="25" pos:column="34">(<pos:position pos:line="25" pos:column="35"/></operator><name pos:line="25" pos:column="35">tag_val<pos:position pos:line="25" pos:column="42"/></name> <operator pos:line="25" pos:column="43">==<pos:position pos:line="25" pos:column="45"/></operator> <name pos:line="25" pos:column="46">NULL<pos:position pos:line="25" pos:column="50"/></name><operator pos:line="25" pos:column="50">)<pos:position pos:line="25" pos:column="51"/></operator></expr>)<pos:position pos:line="25" pos:column="52"/></condition><then pos:line="25" pos:column="52"> <block pos:line="25" pos:column="53">{
                <return pos:line="26" pos:column="17">return <expr><literal type="number" pos:line="26" pos:column="24">0<pos:position pos:line="26" pos:column="25"/></literal></expr>;<pos:position pos:line="26" pos:column="26"/></return>
            }<pos:position pos:line="27" pos:column="14"/></block></then>
            <elseif pos:line="28" pos:column="13">else <if pos:line="28" pos:column="18">if <condition pos:line="28" pos:column="21">(<expr><name pos:line="28" pos:column="22">tag_val<pos:position pos:line="28" pos:column="29"/></name> <operator pos:line="28" pos:column="30">==<pos:position pos:line="28" pos:column="32"/></operator> <name pos:line="28" pos:column="33">NULL<pos:position pos:line="28" pos:column="37"/></name></expr>)<pos:position pos:line="28" pos:column="38"/></condition><then pos:line="28" pos:column="38"> <block pos:line="28" pos:column="39">{
                <return pos:line="29" pos:column="17">return <expr><literal type="number" pos:line="29" pos:column="24">1<pos:position pos:line="29" pos:column="25"/></literal></expr>;<pos:position pos:line="29" pos:column="26"/></return>
            }<pos:position pos:line="30" pos:column="14"/></block></then></if></elseif>
            <elseif pos:line="31" pos:column="13">else <if pos:line="31" pos:column="18">if <condition pos:line="31" pos:column="21">(<expr><operator pos:line="31" pos:column="22">!<pos:position pos:line="31" pos:column="23"/></operator><call><name pos:line="31" pos:column="23">strcmp<pos:position pos:line="31" pos:column="29"/></name><argument_list pos:line="31" pos:column="29">(<argument><expr><name pos:line="31" pos:column="30">tag<pos:position pos:line="31" pos:column="33"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="31" pos:column="35">"var"<pos:position pos:line="31" pos:column="40"/></literal></expr></argument>)<pos:position pos:line="31" pos:column="41"/></argument_list></call></expr>)<pos:position pos:line="31" pos:column="42"/></condition><then pos:line="31" pos:column="42"> <block pos:line="31" pos:column="43">{
                <expr_stmt><expr><name pos:line="32" pos:column="17">var<pos:position pos:line="32" pos:column="20"/></name> <operator pos:line="32" pos:column="21">=<pos:position pos:line="32" pos:column="22"/></operator> <call><name pos:line="32" pos:column="23">ap_ssi_parse_string<pos:position pos:line="32" pos:column="42"/></name><argument_list pos:line="32" pos:column="42">(<argument><expr><name pos:line="32" pos:column="43">r<pos:position pos:line="32" pos:column="44"/></name></expr></argument>, <argument><expr><name pos:line="32" pos:column="46">ctx<pos:position pos:line="32" pos:column="49"/></name></expr></argument>, <argument><expr><name pos:line="32" pos:column="51">tag_val<pos:position pos:line="32" pos:column="58"/></name></expr></argument>, <argument><expr><name pos:line="32" pos:column="60">NULL<pos:position pos:line="32" pos:column="64"/></name></expr></argument>,
                                          <argument><expr><name pos:line="33" pos:column="43">MAX_STRING_LEN<pos:position pos:line="33" pos:column="57"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="33" pos:column="59">0<pos:position pos:line="33" pos:column="60"/></literal></expr></argument>)<pos:position pos:line="33" pos:column="61"/></argument_list></call></expr>;<pos:position pos:line="33" pos:column="62"/></expr_stmt>
            }<pos:position pos:line="34" pos:column="14"/></block></then></if></elseif>
            <elseif pos:line="35" pos:column="13">else <if pos:line="35" pos:column="18">if <condition pos:line="35" pos:column="21">(<expr><operator pos:line="35" pos:column="22">!<pos:position pos:line="35" pos:column="23"/></operator><call><name pos:line="35" pos:column="23">strcmp<pos:position pos:line="35" pos:column="29"/></name><argument_list pos:line="35" pos:column="29">(<argument><expr><name pos:line="35" pos:column="30">tag<pos:position pos:line="35" pos:column="33"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="35" pos:column="35">"value"<pos:position pos:line="35" pos:column="42"/></literal></expr></argument>)<pos:position pos:line="35" pos:column="43"/></argument_list></call></expr>)<pos:position pos:line="35" pos:column="44"/></condition><then pos:line="35" pos:column="44"> <block pos:line="35" pos:column="45">{
                <if pos:line="36" pos:column="17">if <condition pos:line="36" pos:column="20">(<expr><name pos:line="36" pos:column="21">var<pos:position pos:line="36" pos:column="24"/></name> <operator pos:line="36" pos:column="25">==<pos:position pos:line="36" pos:column="27"/></operator> <operator pos:line="36" pos:column="28">(<pos:position pos:line="36" pos:column="29"/></operator><name pos:line="36" pos:column="29">char<pos:position pos:line="36" pos:column="33"/></name> <operator pos:line="36" pos:column="34">*<pos:position pos:line="36" pos:column="35"/></operator><operator pos:line="36" pos:column="35">)<pos:position pos:line="36" pos:column="36"/></operator> <name pos:line="36" pos:column="37">NULL<pos:position pos:line="36" pos:column="41"/></name></expr>)<pos:position pos:line="36" pos:column="42"/></condition><then pos:line="36" pos:column="42"> <block pos:line="36" pos:column="43">{
                    <expr_stmt><expr><call><name pos:line="37" pos:column="21">ap_log_rerror<pos:position pos:line="37" pos:column="34"/></name><argument_list pos:line="37" pos:column="34">(<argument><expr><name pos:line="37" pos:column="35">APLOG_MARK<pos:position pos:line="37" pos:column="45"/></name></expr></argument>, <argument><expr><name pos:line="37" pos:column="47">APLOG_ERR<pos:position pos:line="37" pos:column="56"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="37" pos:column="58">0<pos:position pos:line="37" pos:column="59"/></literal></expr></argument>, <argument><expr><name pos:line="37" pos:column="61">r<pos:position pos:line="37" pos:column="62"/></name></expr></argument>,
                           <argument><expr><literal type="string" pos:line="38" pos:column="28">"variable must precede value in set directive in %s"<pos:position pos:line="38" pos:column="80"/></literal></expr></argument>,
                           <argument><expr><name><name pos:line="39" pos:column="28">r<pos:position pos:line="39" pos:column="29"/></name><operator pos:line="39" pos:column="29">-&gt;<pos:position pos:line="39" pos:column="34"/></operator><name pos:line="39" pos:column="31">filename<pos:position pos:line="39" pos:column="39"/></name></name></expr></argument>)<pos:position pos:line="39" pos:column="40"/></argument_list></call></expr>;<pos:position pos:line="39" pos:column="41"/></expr_stmt>
                    <expr_stmt><expr><call><name pos:line="40" pos:column="21">CREATE_ERROR_BUCKET<pos:position pos:line="40" pos:column="40"/></name><argument_list pos:line="40" pos:column="40">(<argument><expr><name pos:line="40" pos:column="41">ctx<pos:position pos:line="40" pos:column="44"/></name></expr></argument>, <argument><expr><name pos:line="40" pos:column="46">tmp_buck<pos:position pos:line="40" pos:column="54"/></name></expr></argument>, <argument><expr><name pos:line="40" pos:column="56">head_ptr<pos:position pos:line="40" pos:column="64"/></name></expr></argument>, 
                                        <argument><expr><operator pos:line="41" pos:column="41">*<pos:position pos:line="41" pos:column="42"/></operator><name pos:line="41" pos:column="42">inserted_head<pos:position pos:line="41" pos:column="55"/></name></expr></argument>)<pos:position pos:line="41" pos:column="56"/></argument_list></call></expr>;<pos:position pos:line="41" pos:column="57"/></expr_stmt>
                    <return pos:line="42" pos:column="21">return <expr><operator pos:line="42" pos:column="28">(<pos:position pos:line="42" pos:column="29"/></operator><operator pos:line="42" pos:column="29">-<pos:position pos:line="42" pos:column="30"/></operator><literal type="number" pos:line="42" pos:column="30">1<pos:position pos:line="42" pos:column="31"/></literal><operator pos:line="42" pos:column="31">)<pos:position pos:line="42" pos:column="32"/></operator></expr>;<pos:position pos:line="42" pos:column="33"/></return>
                }<pos:position pos:line="43" pos:column="18"/></block></then></if>
                <expr_stmt><expr><name pos:line="44" pos:column="17">parsed_string<pos:position pos:line="44" pos:column="30"/></name> <operator pos:line="44" pos:column="31">=<pos:position pos:line="44" pos:column="32"/></operator> <call><name pos:line="44" pos:column="33">ap_ssi_parse_string<pos:position pos:line="44" pos:column="52"/></name><argument_list pos:line="44" pos:column="52">(<argument><expr><name pos:line="44" pos:column="53">r<pos:position pos:line="44" pos:column="54"/></name></expr></argument>, <argument><expr><name pos:line="44" pos:column="56">ctx<pos:position pos:line="44" pos:column="59"/></name></expr></argument>, <argument><expr><name pos:line="44" pos:column="61">tag_val<pos:position pos:line="44" pos:column="68"/></name></expr></argument>, <argument><expr><name pos:line="44" pos:column="70">NULL<pos:position pos:line="44" pos:column="74"/></name></expr></argument>, 
                                                    <argument><expr><name pos:line="45" pos:column="53">MAX_STRING_LEN<pos:position pos:line="45" pos:column="67"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="45" pos:column="69">0<pos:position pos:line="45" pos:column="70"/></literal></expr></argument>)<pos:position pos:line="45" pos:column="71"/></argument_list></call></expr>;<pos:position pos:line="45" pos:column="72"/></expr_stmt>
                <expr_stmt><expr><call><name pos:line="46" pos:column="17">apr_table_setn<pos:position pos:line="46" pos:column="31"/></name><argument_list pos:line="46" pos:column="31">(<argument><expr><name><name pos:line="46" pos:column="32">r<pos:position pos:line="46" pos:column="33"/></name><operator pos:line="46" pos:column="33">-&gt;<pos:position pos:line="46" pos:column="38"/></operator><name pos:line="46" pos:column="35">subprocess_env<pos:position pos:line="46" pos:column="49"/></name></name></expr></argument>, <argument><expr><call><name pos:line="46" pos:column="51">apr_pstrdup<pos:position pos:line="46" pos:column="62"/></name><argument_list pos:line="46" pos:column="62">(<argument><expr><name pos:line="46" pos:column="63">p<pos:position pos:line="46" pos:column="64"/></name></expr></argument>, <argument><expr><name pos:line="46" pos:column="66">var<pos:position pos:line="46" pos:column="69"/></name></expr></argument>)<pos:position pos:line="46" pos:column="70"/></argument_list></call></expr></argument>,
                               <argument><expr><call><name pos:line="47" pos:column="32">apr_pstrdup<pos:position pos:line="47" pos:column="43"/></name><argument_list pos:line="47" pos:column="43">(<argument><expr><name pos:line="47" pos:column="44">p<pos:position pos:line="47" pos:column="45"/></name></expr></argument>, <argument><expr><name pos:line="47" pos:column="47">parsed_string<pos:position pos:line="47" pos:column="60"/></name></expr></argument>)<pos:position pos:line="47" pos:column="61"/></argument_list></call></expr></argument>)<pos:position pos:line="47" pos:column="62"/></argument_list></call></expr>;<pos:position pos:line="47" pos:column="63"/></expr_stmt>
            }<pos:position pos:line="48" pos:column="14"/></block></then></if></elseif>
            <else pos:line="49" pos:column="13">else <block pos:line="49" pos:column="18">{
                <expr_stmt><expr><call><name pos:line="50" pos:column="17">ap_log_rerror<pos:position pos:line="50" pos:column="30"/></name><argument_list pos:line="50" pos:column="30">(<argument><expr><name pos:line="50" pos:column="31">APLOG_MARK<pos:position pos:line="50" pos:column="41"/></name></expr></argument>, <argument><expr><name pos:line="50" pos:column="43">APLOG_ERR<pos:position pos:line="50" pos:column="52"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="50" pos:column="54">0<pos:position pos:line="50" pos:column="55"/></literal></expr></argument>, <argument><expr><name pos:line="50" pos:column="57">r<pos:position pos:line="50" pos:column="58"/></name></expr></argument>,
                            <argument><expr><literal type="string" pos:line="51" pos:column="29">"Invalid tag for set directive in %s"<pos:position pos:line="51" pos:column="66"/></literal></expr></argument>, <argument><expr><name><name pos:line="51" pos:column="68">r<pos:position pos:line="51" pos:column="69"/></name><operator pos:line="51" pos:column="69">-&gt;<pos:position pos:line="51" pos:column="74"/></operator><name pos:line="51" pos:column="71">filename<pos:position pos:line="51" pos:column="79"/></name></name></expr></argument>)<pos:position pos:line="51" pos:column="80"/></argument_list></call></expr>;<pos:position pos:line="51" pos:column="81"/></expr_stmt>
                <expr_stmt><expr><call><name pos:line="52" pos:column="17">CREATE_ERROR_BUCKET<pos:position pos:line="52" pos:column="36"/></name><argument_list pos:line="52" pos:column="36">(<argument><expr><name pos:line="52" pos:column="37">ctx<pos:position pos:line="52" pos:column="40"/></name></expr></argument>, <argument><expr><name pos:line="52" pos:column="42">tmp_buck<pos:position pos:line="52" pos:column="50"/></name></expr></argument>, <argument><expr><name pos:line="52" pos:column="52">head_ptr<pos:position pos:line="52" pos:column="60"/></name></expr></argument>, <argument><expr><operator pos:line="52" pos:column="62">*<pos:position pos:line="52" pos:column="63"/></operator><name pos:line="52" pos:column="63">inserted_head<pos:position pos:line="52" pos:column="76"/></name></expr></argument>)<pos:position pos:line="52" pos:column="77"/></argument_list></call></expr>;<pos:position pos:line="52" pos:column="78"/></expr_stmt>
                <return pos:line="53" pos:column="17">return <expr><operator pos:line="53" pos:column="24">-<pos:position pos:line="53" pos:column="25"/></operator><literal type="number" pos:line="53" pos:column="25">1<pos:position pos:line="53" pos:column="26"/></literal></expr>;<pos:position pos:line="53" pos:column="27"/></return>
            }<pos:position pos:line="54" pos:column="14"/></block></else></if>
        }<pos:position pos:line="55" pos:column="10"/></block></while>
    }<pos:position pos:line="56" pos:column="6"/></block></then></if>
    <return pos:line="57" pos:column="5">return <expr><literal type="number" pos:line="57" pos:column="12">0<pos:position pos:line="57" pos:column="13"/></literal></expr>;<pos:position pos:line="57" pos:column="14"/></return>
}<pos:position pos:line="58" pos:column="2"/></block></function></unit>

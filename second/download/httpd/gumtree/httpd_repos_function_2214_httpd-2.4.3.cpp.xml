<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/httpd/gumtree/httpd_repos_function_2214_httpd-2.4.3.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">int<pos:position pos:line="1" pos:column="11"/></name></type> <name pos:line="1" pos:column="12">have_ssl_compression<pos:position pos:line="1" pos:column="32"/></name><parameter_list pos:line="1" pos:column="32">(<parameter><decl><type><name pos:line="1" pos:column="33">request_rec<pos:position pos:line="1" pos:column="44"/></name> <modifier pos:line="1" pos:column="45">*<pos:position pos:line="1" pos:column="46"/></modifier></type><name pos:line="1" pos:column="46">r<pos:position pos:line="1" pos:column="47"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="48"/></parameter_list>
<block pos:line="2" pos:column="1">{
    <decl_stmt><decl><type><specifier pos:line="3" pos:column="5">const<pos:position pos:line="3" pos:column="10"/></specifier> <name pos:line="3" pos:column="11">char<pos:position pos:line="3" pos:column="15"/></name> <modifier pos:line="3" pos:column="16">*<pos:position pos:line="3" pos:column="17"/></modifier></type><name pos:line="3" pos:column="17">comp<pos:position pos:line="3" pos:column="21"/></name></decl>;<pos:position pos:line="3" pos:column="22"/></decl_stmt>
    <if pos:line="4" pos:column="5">if <condition pos:line="4" pos:column="8">(<expr><name pos:line="4" pos:column="9">mod_deflate_ssl_var<pos:position pos:line="4" pos:column="28"/></name> <operator pos:line="4" pos:column="29">==<pos:position pos:line="4" pos:column="31"/></operator> <name pos:line="4" pos:column="32">NULL<pos:position pos:line="4" pos:column="36"/></name></expr>)<pos:position pos:line="4" pos:column="37"/></condition><then pos:line="4" pos:column="37">
        <block type="pseudo"><return pos:line="5" pos:column="9">return <expr><literal type="number" pos:line="5" pos:column="16">0<pos:position pos:line="5" pos:column="17"/></literal></expr>;<pos:position pos:line="5" pos:column="18"/></return></block></then></if>
    <expr_stmt><expr><name pos:line="6" pos:column="5">comp<pos:position pos:line="6" pos:column="9"/></name> <operator pos:line="6" pos:column="10">=<pos:position pos:line="6" pos:column="11"/></operator> <call><name pos:line="6" pos:column="12">mod_deflate_ssl_var<pos:position pos:line="6" pos:column="31"/></name><argument_list pos:line="6" pos:column="31">(<argument><expr><name><name pos:line="6" pos:column="32">r<pos:position pos:line="6" pos:column="33"/></name><operator pos:line="6" pos:column="33">-&gt;<pos:position pos:line="6" pos:column="38"/></operator><name pos:line="6" pos:column="35">pool<pos:position pos:line="6" pos:column="39"/></name></name></expr></argument>, <argument><expr><name><name pos:line="6" pos:column="41">r<pos:position pos:line="6" pos:column="42"/></name><operator pos:line="6" pos:column="42">-&gt;<pos:position pos:line="6" pos:column="47"/></operator><name pos:line="6" pos:column="44">server<pos:position pos:line="6" pos:column="50"/></name></name></expr></argument>, <argument><expr><name><name pos:line="6" pos:column="52">r<pos:position pos:line="6" pos:column="53"/></name><operator pos:line="6" pos:column="53">-&gt;<pos:position pos:line="6" pos:column="58"/></operator><name pos:line="6" pos:column="55">connection<pos:position pos:line="6" pos:column="65"/></name></name></expr></argument>, <argument><expr><name pos:line="6" pos:column="67">r<pos:position pos:line="6" pos:column="68"/></name></expr></argument>,
                               <argument><expr><literal type="string" pos:line="7" pos:column="32">"SSL_COMPRESS_METHOD"<pos:position pos:line="7" pos:column="53"/></literal></expr></argument>)<pos:position pos:line="7" pos:column="54"/></argument_list></call></expr>;<pos:position pos:line="7" pos:column="55"/></expr_stmt>
    <if pos:line="8" pos:column="5">if <condition pos:line="8" pos:column="8">(<expr><name pos:line="8" pos:column="9">comp<pos:position pos:line="8" pos:column="13"/></name> <operator pos:line="8" pos:column="14">==<pos:position pos:line="8" pos:column="16"/></operator> <name pos:line="8" pos:column="17">NULL<pos:position pos:line="8" pos:column="21"/></name> <operator pos:line="8" pos:column="22">||<pos:position pos:line="8" pos:column="24"/></operator> <operator pos:line="8" pos:column="25">*<pos:position pos:line="8" pos:column="26"/></operator><name pos:line="8" pos:column="26">comp<pos:position pos:line="8" pos:column="30"/></name> <operator pos:line="8" pos:column="31">==<pos:position pos:line="8" pos:column="33"/></operator> <literal type="char" pos:line="8" pos:column="34">'\0'<pos:position pos:line="8" pos:column="38"/></literal> <operator pos:line="8" pos:column="39">||<pos:position pos:line="8" pos:column="41"/></operator> <call><name pos:line="8" pos:column="42">strcmp<pos:position pos:line="8" pos:column="48"/></name><argument_list pos:line="8" pos:column="48">(<argument><expr><name pos:line="8" pos:column="49">comp<pos:position pos:line="8" pos:column="53"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="8" pos:column="55">"NULL"<pos:position pos:line="8" pos:column="61"/></literal></expr></argument>)<pos:position pos:line="8" pos:column="62"/></argument_list></call> <operator pos:line="8" pos:column="63">==<pos:position pos:line="8" pos:column="65"/></operator> <literal type="number" pos:line="8" pos:column="66">0<pos:position pos:line="8" pos:column="67"/></literal></expr>)<pos:position pos:line="8" pos:column="68"/></condition><then pos:line="8" pos:column="68">
        <block type="pseudo"><return pos:line="9" pos:column="9">return <expr><literal type="number" pos:line="9" pos:column="16">0<pos:position pos:line="9" pos:column="17"/></literal></expr>;<pos:position pos:line="9" pos:column="18"/></return></block></then></if>
    <return pos:line="10" pos:column="5">return <expr><literal type="number" pos:line="10" pos:column="12">1<pos:position pos:line="10" pos:column="13"/></literal></expr>;<pos:position pos:line="10" pos:column="14"/></return>
}<pos:position pos:line="11" pos:column="2"/></block></function></unit>

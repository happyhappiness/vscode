<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/httpd/gumtree/httpd_function_5573.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><specifier pos:line="1" pos:column="8">const<pos:position pos:line="1" pos:column="13"/></specifier> <name pos:line="1" pos:column="14">char<pos:position pos:line="1" pos:column="18"/></name> <modifier pos:line="1" pos:column="19">*<pos:position pos:line="1" pos:column="20"/></modifier></type><name pos:line="1" pos:column="20">check_macro_arguments<pos:position pos:line="1" pos:column="41"/></name><parameter_list pos:line="1" pos:column="41">(<parameter><decl><type><name pos:line="1" pos:column="42">apr_pool_t<pos:position pos:line="1" pos:column="52"/></name> <modifier pos:line="1" pos:column="53">*<pos:position pos:line="1" pos:column="54"/></modifier></type> <name pos:line="1" pos:column="55">pool<pos:position pos:line="1" pos:column="59"/></name></decl></parameter>,
                                         <parameter><decl><type><specifier pos:line="2" pos:column="42">const<pos:position pos:line="2" pos:column="47"/></specifier> <name pos:line="2" pos:column="48">ap_macro_t<pos:position pos:line="2" pos:column="58"/></name> <modifier pos:line="2" pos:column="59">*<pos:position pos:line="2" pos:column="60"/></modifier></type> <name pos:line="2" pos:column="61">macro<pos:position pos:line="2" pos:column="66"/></name></decl></parameter>)<pos:position pos:line="2" pos:column="67"/></parameter_list>
<block pos:line="3" pos:column="1">{
    <decl_stmt><decl><type><name pos:line="4" pos:column="5">char<pos:position pos:line="4" pos:column="9"/></name> <modifier pos:line="4" pos:column="10">*<pos:position pos:line="4" pos:column="11"/></modifier><modifier pos:line="4" pos:column="11">*<pos:position pos:line="4" pos:column="12"/></modifier></type><name pos:line="4" pos:column="12">tab<pos:position pos:line="4" pos:column="15"/></name> <init pos:line="4" pos:column="16">= <expr><operator pos:line="4" pos:column="18">(<pos:position pos:line="4" pos:column="19"/></operator><name pos:line="4" pos:column="19">char<pos:position pos:line="4" pos:column="23"/></name> <operator pos:line="4" pos:column="24">*<pos:position pos:line="4" pos:column="25"/></operator><operator pos:line="4" pos:column="25">*<pos:position pos:line="4" pos:column="26"/></operator><operator pos:line="4" pos:column="26">)<pos:position pos:line="4" pos:column="27"/></operator> <name><name pos:line="4" pos:column="28">macro<pos:position pos:line="4" pos:column="33"/></name><operator pos:line="4" pos:column="33">-&gt;<pos:position pos:line="4" pos:column="38"/></operator><name pos:line="4" pos:column="35">arguments<pos:position pos:line="4" pos:column="44"/></name><operator pos:line="4" pos:column="44">-&gt;<pos:position pos:line="4" pos:column="49"/></operator><name pos:line="4" pos:column="46">elts<pos:position pos:line="4" pos:column="50"/></name></name></expr></init></decl>;<pos:position pos:line="4" pos:column="51"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="5" pos:column="5">int<pos:position pos:line="5" pos:column="8"/></name></type> <name pos:line="5" pos:column="9">nelts<pos:position pos:line="5" pos:column="14"/></name> <init pos:line="5" pos:column="15">= <expr><name><name pos:line="5" pos:column="17">macro<pos:position pos:line="5" pos:column="22"/></name><operator pos:line="5" pos:column="22">-&gt;<pos:position pos:line="5" pos:column="27"/></operator><name pos:line="5" pos:column="24">arguments<pos:position pos:line="5" pos:column="33"/></name><operator pos:line="5" pos:column="33">-&gt;<pos:position pos:line="5" pos:column="38"/></operator><name pos:line="5" pos:column="35">nelts<pos:position pos:line="5" pos:column="40"/></name></name></expr></init></decl>;<pos:position pos:line="5" pos:column="41"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="6" pos:column="5">int<pos:position pos:line="6" pos:column="8"/></name></type> <name pos:line="6" pos:column="9">i<pos:position pos:line="6" pos:column="10"/></name></decl>;<pos:position pos:line="6" pos:column="11"/></decl_stmt>

    <for pos:line="8" pos:column="5">for <control pos:line="8" pos:column="9">(<init><expr><name pos:line="8" pos:column="10">i<pos:position pos:line="8" pos:column="11"/></name> <operator pos:line="8" pos:column="12">=<pos:position pos:line="8" pos:column="13"/></operator> <literal type="number" pos:line="8" pos:column="14">0<pos:position pos:line="8" pos:column="15"/></literal></expr>;<pos:position pos:line="8" pos:column="16"/></init> <condition><expr><name pos:line="8" pos:column="17">i<pos:position pos:line="8" pos:column="18"/></name> <operator pos:line="8" pos:column="19">&lt;<pos:position pos:line="8" pos:column="23"/></operator> <name pos:line="8" pos:column="21">nelts<pos:position pos:line="8" pos:column="26"/></name></expr>;<pos:position pos:line="8" pos:column="27"/></condition> <incr><expr><name pos:line="8" pos:column="28">i<pos:position pos:line="8" pos:column="29"/></name><operator pos:line="8" pos:column="29">++<pos:position pos:line="8" pos:column="31"/></operator></expr></incr>)<pos:position pos:line="8" pos:column="32"/></control> <block pos:line="8" pos:column="33">{
        <decl_stmt><decl><type><name pos:line="9" pos:column="9">size_t<pos:position pos:line="9" pos:column="15"/></name></type> <name pos:line="9" pos:column="16">ltabi<pos:position pos:line="9" pos:column="21"/></name> <init pos:line="9" pos:column="22">= <expr><call><name pos:line="9" pos:column="24">strlen<pos:position pos:line="9" pos:column="30"/></name><argument_list pos:line="9" pos:column="30">(<argument><expr><name><name pos:line="9" pos:column="31">tab<pos:position pos:line="9" pos:column="34"/></name><index pos:line="9" pos:column="34">[<expr><name pos:line="9" pos:column="35">i<pos:position pos:line="9" pos:column="36"/></name></expr>]<pos:position pos:line="9" pos:column="37"/></index></name></expr></argument>)<pos:position pos:line="9" pos:column="38"/></argument_list></call></expr></init></decl>;<pos:position pos:line="9" pos:column="39"/></decl_stmt>
        <decl_stmt><decl><type><name pos:line="10" pos:column="9">int<pos:position pos:line="10" pos:column="12"/></name></type> <name pos:line="10" pos:column="13">j<pos:position pos:line="10" pos:column="14"/></name></decl>;<pos:position pos:line="10" pos:column="15"/></decl_stmt>

        <if pos:line="12" pos:column="9">if <condition pos:line="12" pos:column="12">(<expr><name pos:line="12" pos:column="13">ltabi<pos:position pos:line="12" pos:column="18"/></name> <operator pos:line="12" pos:column="19">==<pos:position pos:line="12" pos:column="21"/></operator> <literal type="number" pos:line="12" pos:column="22">0<pos:position pos:line="12" pos:column="23"/></literal></expr>)<pos:position pos:line="12" pos:column="24"/></condition><then pos:line="12" pos:column="24"> <block pos:line="12" pos:column="25">{
            <return pos:line="13" pos:column="13">return <expr><call><name pos:line="13" pos:column="20">apr_psprintf<pos:position pos:line="13" pos:column="32"/></name><argument_list pos:line="13" pos:column="32">(<argument><expr><name pos:line="13" pos:column="33">pool<pos:position pos:line="13" pos:column="37"/></name></expr></argument>,
                                <argument><expr><literal type="string" pos:line="14" pos:column="33">"macro '%s' (%s): empty argument #%d name"<pos:position pos:line="14" pos:column="75"/></literal></expr></argument>,
                                <argument><expr><name><name pos:line="15" pos:column="33">macro<pos:position pos:line="15" pos:column="38"/></name><operator pos:line="15" pos:column="38">-&gt;<pos:position pos:line="15" pos:column="43"/></operator><name pos:line="15" pos:column="40">name<pos:position pos:line="15" pos:column="44"/></name></name></expr></argument>, <argument><expr><name><name pos:line="15" pos:column="46">macro<pos:position pos:line="15" pos:column="51"/></name><operator pos:line="15" pos:column="51">-&gt;<pos:position pos:line="15" pos:column="56"/></operator><name pos:line="15" pos:column="53">location<pos:position pos:line="15" pos:column="61"/></name></name></expr></argument>, <argument><expr><name pos:line="15" pos:column="63">i<pos:position pos:line="15" pos:column="64"/></name> <operator pos:line="15" pos:column="65">+<pos:position pos:line="15" pos:column="66"/></operator> <literal type="number" pos:line="15" pos:column="67">1<pos:position pos:line="15" pos:column="68"/></literal></expr></argument>)<pos:position pos:line="15" pos:column="69"/></argument_list></call></expr>;<pos:position pos:line="15" pos:column="70"/></return>
        }<pos:position pos:line="16" pos:column="10"/></block></then>
        <elseif pos:line="17" pos:column="9">else <if pos:line="17" pos:column="14">if <condition pos:line="17" pos:column="17">(<expr><operator pos:line="17" pos:column="18">!<pos:position pos:line="17" pos:column="19"/></operator><call><name pos:line="17" pos:column="19">looks_like_an_argument<pos:position pos:line="17" pos:column="41"/></name><argument_list pos:line="17" pos:column="41">(<argument><expr><name><name pos:line="17" pos:column="42">tab<pos:position pos:line="17" pos:column="45"/></name><index pos:line="17" pos:column="45">[<expr><name pos:line="17" pos:column="46">i<pos:position pos:line="17" pos:column="47"/></name></expr>]<pos:position pos:line="17" pos:column="48"/></index></name></expr></argument>)<pos:position pos:line="17" pos:column="49"/></argument_list></call></expr>)<pos:position pos:line="17" pos:column="50"/></condition><then pos:line="17" pos:column="50"> <block pos:line="17" pos:column="51">{
            <expr_stmt><expr><call><name pos:line="18" pos:column="13">ap_log_error<pos:position pos:line="18" pos:column="25"/></name><argument_list pos:line="18" pos:column="25">(<argument><expr><name pos:line="18" pos:column="26">APLOG_MARK<pos:position pos:line="18" pos:column="36"/></name></expr></argument>, <argument><expr><name pos:line="18" pos:column="38">APLOG_NOERRNO<pos:position pos:line="18" pos:column="51"/></name> <operator pos:line="18" pos:column="52">|<pos:position pos:line="18" pos:column="53"/></operator> <name pos:line="18" pos:column="54">APLOG_WARNING<pos:position pos:line="18" pos:column="67"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="18" pos:column="69">0<pos:position pos:line="18" pos:column="70"/></literal></expr></argument>, <argument><expr><name pos:line="18" pos:column="72">NULL<pos:position pos:line="18" pos:column="76"/></name></expr></argument>,
                         <argument><expr><literal type="string" pos:line="19" pos:column="26">"macro '%s' (%s) "<pos:position pos:line="19" pos:column="44"/></literal>
                         <literal type="string" pos:line="20" pos:column="26">"argument name '%s' (#%d) without expected prefix, "<pos:position pos:line="20" pos:column="78"/></literal>
                         <literal type="string" pos:line="21" pos:column="26">"better prefix argument names with one of '%s'."<pos:position pos:line="21" pos:column="74"/></literal></expr></argument>,
                         <argument><expr><name><name pos:line="22" pos:column="26">macro<pos:position pos:line="22" pos:column="31"/></name><operator pos:line="22" pos:column="31">-&gt;<pos:position pos:line="22" pos:column="36"/></operator><name pos:line="22" pos:column="33">name<pos:position pos:line="22" pos:column="37"/></name></name></expr></argument>, <argument><expr><name><name pos:line="22" pos:column="39">macro<pos:position pos:line="22" pos:column="44"/></name><operator pos:line="22" pos:column="44">-&gt;<pos:position pos:line="22" pos:column="49"/></operator><name pos:line="22" pos:column="46">location<pos:position pos:line="22" pos:column="54"/></name></name></expr></argument>,
                         <argument><expr><name><name pos:line="23" pos:column="26">tab<pos:position pos:line="23" pos:column="29"/></name><index pos:line="23" pos:column="29">[<expr><name pos:line="23" pos:column="30">i<pos:position pos:line="23" pos:column="31"/></name></expr>]<pos:position pos:line="23" pos:column="32"/></index></name></expr></argument>, <argument><expr><name pos:line="23" pos:column="34">i<pos:position pos:line="23" pos:column="35"/></name> <operator pos:line="23" pos:column="36">+<pos:position pos:line="23" pos:column="37"/></operator> <literal type="number" pos:line="23" pos:column="38">1<pos:position pos:line="23" pos:column="39"/></literal></expr></argument>, <argument><expr><name pos:line="23" pos:column="41">ARG_PREFIX<pos:position pos:line="23" pos:column="51"/></name></expr></argument>)<pos:position pos:line="23" pos:column="52"/></argument_list></call></expr>;<pos:position pos:line="23" pos:column="53"/></expr_stmt>
        }<pos:position pos:line="24" pos:column="10"/></block></then></if></elseif></if>

        <for pos:line="26" pos:column="9">for <control pos:line="26" pos:column="13">(<init><expr><name pos:line="26" pos:column="14">j<pos:position pos:line="26" pos:column="15"/></name> <operator pos:line="26" pos:column="16">=<pos:position pos:line="26" pos:column="17"/></operator> <name pos:line="26" pos:column="18">i<pos:position pos:line="26" pos:column="19"/></name> <operator pos:line="26" pos:column="20">+<pos:position pos:line="26" pos:column="21"/></operator> <literal type="number" pos:line="26" pos:column="22">1<pos:position pos:line="26" pos:column="23"/></literal></expr>;<pos:position pos:line="26" pos:column="24"/></init> <condition><expr><name pos:line="26" pos:column="25">j<pos:position pos:line="26" pos:column="26"/></name> <operator pos:line="26" pos:column="27">&lt;<pos:position pos:line="26" pos:column="31"/></operator> <name pos:line="26" pos:column="29">nelts<pos:position pos:line="26" pos:column="34"/></name></expr>;<pos:position pos:line="26" pos:column="35"/></condition> <incr><expr><name pos:line="26" pos:column="36">j<pos:position pos:line="26" pos:column="37"/></name><operator pos:line="26" pos:column="37">++<pos:position pos:line="26" pos:column="39"/></operator></expr></incr>)<pos:position pos:line="26" pos:column="40"/></control> <block pos:line="26" pos:column="41">{
            <decl_stmt><decl><type><name pos:line="27" pos:column="13">size_t<pos:position pos:line="27" pos:column="19"/></name></type> <name pos:line="27" pos:column="20">ltabj<pos:position pos:line="27" pos:column="25"/></name> <init pos:line="27" pos:column="26">= <expr><call><name pos:line="27" pos:column="28">strlen<pos:position pos:line="27" pos:column="34"/></name><argument_list pos:line="27" pos:column="34">(<argument><expr><name><name pos:line="27" pos:column="35">tab<pos:position pos:line="27" pos:column="38"/></name><index pos:line="27" pos:column="38">[<expr><name pos:line="27" pos:column="39">j<pos:position pos:line="27" pos:column="40"/></name></expr>]<pos:position pos:line="27" pos:column="41"/></index></name></expr></argument>)<pos:position pos:line="27" pos:column="42"/></argument_list></call></expr></init></decl>;<pos:position pos:line="27" pos:column="43"/></decl_stmt>

            <comment type="block" pos:line="29" pos:column="13">/* must not use the same argument name twice */</comment>
            <if pos:line="30" pos:column="13">if <condition pos:line="30" pos:column="16">(<expr><operator pos:line="30" pos:column="17">!<pos:position pos:line="30" pos:column="18"/></operator><call><name pos:line="30" pos:column="18">strcmp<pos:position pos:line="30" pos:column="24"/></name><argument_list pos:line="30" pos:column="24">(<argument><expr><name><name pos:line="30" pos:column="25">tab<pos:position pos:line="30" pos:column="28"/></name><index pos:line="30" pos:column="28">[<expr><name pos:line="30" pos:column="29">i<pos:position pos:line="30" pos:column="30"/></name></expr>]<pos:position pos:line="30" pos:column="31"/></index></name></expr></argument>, <argument><expr><name><name pos:line="30" pos:column="33">tab<pos:position pos:line="30" pos:column="36"/></name><index pos:line="30" pos:column="36">[<expr><name pos:line="30" pos:column="37">j<pos:position pos:line="30" pos:column="38"/></name></expr>]<pos:position pos:line="30" pos:column="39"/></index></name></expr></argument>)<pos:position pos:line="30" pos:column="40"/></argument_list></call></expr>)<pos:position pos:line="30" pos:column="41"/></condition><then pos:line="30" pos:column="41"> <block pos:line="30" pos:column="42">{
                <return pos:line="31" pos:column="17">return <expr><call><name pos:line="31" pos:column="24">apr_psprintf<pos:position pos:line="31" pos:column="36"/></name><argument_list pos:line="31" pos:column="36">(<argument><expr><name pos:line="31" pos:column="37">pool<pos:position pos:line="31" pos:column="41"/></name></expr></argument>,
                                   <argument><expr><literal type="string" pos:line="32" pos:column="36">"argument name conflict in macro '%s' (%s): "<pos:position pos:line="32" pos:column="81"/></literal>
                                    <literal type="string" pos:line="33" pos:column="37">"argument '%s': #%d and #%d, "<pos:position pos:line="33" pos:column="67"/></literal>
                                    <literal type="string" pos:line="34" pos:column="37">"change argument names!"<pos:position pos:line="34" pos:column="61"/></literal></expr></argument>,
                                    <argument><expr><name><name pos:line="35" pos:column="37">macro<pos:position pos:line="35" pos:column="42"/></name><operator pos:line="35" pos:column="42">-&gt;<pos:position pos:line="35" pos:column="47"/></operator><name pos:line="35" pos:column="44">name<pos:position pos:line="35" pos:column="48"/></name></name></expr></argument>, <argument><expr><name><name pos:line="35" pos:column="50">macro<pos:position pos:line="35" pos:column="55"/></name><operator pos:line="35" pos:column="55">-&gt;<pos:position pos:line="35" pos:column="60"/></operator><name pos:line="35" pos:column="57">location<pos:position pos:line="35" pos:column="65"/></name></name></expr></argument>,
                                    <argument><expr><name><name pos:line="36" pos:column="37">tab<pos:position pos:line="36" pos:column="40"/></name><index pos:line="36" pos:column="40">[<expr><name pos:line="36" pos:column="41">i<pos:position pos:line="36" pos:column="42"/></name></expr>]<pos:position pos:line="36" pos:column="43"/></index></name></expr></argument>, <argument><expr><name pos:line="36" pos:column="45">i<pos:position pos:line="36" pos:column="46"/></name> <operator pos:line="36" pos:column="47">+<pos:position pos:line="36" pos:column="48"/></operator> <literal type="number" pos:line="36" pos:column="49">1<pos:position pos:line="36" pos:column="50"/></literal></expr></argument>, <argument><expr><name pos:line="36" pos:column="52">j<pos:position pos:line="36" pos:column="53"/></name> <operator pos:line="36" pos:column="54">+<pos:position pos:line="36" pos:column="55"/></operator> <literal type="number" pos:line="36" pos:column="56">1<pos:position pos:line="36" pos:column="57"/></literal></expr></argument>)<pos:position pos:line="36" pos:column="58"/></argument_list></call></expr>;<pos:position pos:line="36" pos:column="59"/></return>
            }<pos:position pos:line="37" pos:column="14"/></block></then></if>

            <comment type="block" pos:line="39" pos:column="13">/* warn about common prefix, but only if non empty names */</comment>
            <if pos:line="40" pos:column="13">if <condition pos:line="40" pos:column="16">(<expr><name pos:line="40" pos:column="17">ltabi<pos:position pos:line="40" pos:column="22"/></name> <operator pos:line="40" pos:column="23">&amp;&amp;<pos:position pos:line="40" pos:column="33"/></operator> <name pos:line="40" pos:column="26">ltabj<pos:position pos:line="40" pos:column="31"/></name> <operator pos:line="40" pos:column="32">&amp;&amp;<pos:position pos:line="40" pos:column="42"/></operator>
                <operator pos:line="41" pos:column="17">!<pos:position pos:line="41" pos:column="18"/></operator><call><name pos:line="41" pos:column="18">strncmp<pos:position pos:line="41" pos:column="25"/></name><argument_list pos:line="41" pos:column="25">(<argument><expr><name><name pos:line="41" pos:column="26">tab<pos:position pos:line="41" pos:column="29"/></name><index pos:line="41" pos:column="29">[<expr><name pos:line="41" pos:column="30">i<pos:position pos:line="41" pos:column="31"/></name></expr>]<pos:position pos:line="41" pos:column="32"/></index></name></expr></argument>, <argument><expr><name><name pos:line="41" pos:column="34">tab<pos:position pos:line="41" pos:column="37"/></name><index pos:line="41" pos:column="37">[<expr><name pos:line="41" pos:column="38">j<pos:position pos:line="41" pos:column="39"/></name></expr>]<pos:position pos:line="41" pos:column="40"/></index></name></expr></argument>, <argument><expr><ternary><condition><expr><name pos:line="41" pos:column="42">ltabi<pos:position pos:line="41" pos:column="47"/></name> <operator pos:line="41" pos:column="48">&lt;<pos:position pos:line="41" pos:column="52"/></operator> <name pos:line="41" pos:column="50">ltabj<pos:position pos:line="41" pos:column="55"/></name></expr> ?<pos:position pos:line="41" pos:column="57"/></condition><then pos:line="41" pos:column="57"> <expr><name pos:line="41" pos:column="58">ltabi<pos:position pos:line="41" pos:column="63"/></name></expr> <pos:position pos:line="41" pos:column="64"/></then><else pos:line="41" pos:column="64">: <expr><name pos:line="41" pos:column="66">ltabj<pos:position pos:line="41" pos:column="71"/></name></expr></else></ternary></expr></argument>)<pos:position pos:line="41" pos:column="72"/></argument_list></call></expr>)<pos:position pos:line="41" pos:column="73"/></condition><then pos:line="41" pos:column="73"> <block pos:line="41" pos:column="74">{
                <expr_stmt><expr><call><name pos:line="42" pos:column="17">ap_log_error<pos:position pos:line="42" pos:column="29"/></name><argument_list pos:line="42" pos:column="29">(<argument><expr><name pos:line="42" pos:column="30">APLOG_MARK<pos:position pos:line="42" pos:column="40"/></name></expr></argument>, <argument><expr><name pos:line="42" pos:column="42">APLOG_NOERRNO<pos:position pos:line="42" pos:column="55"/></name> <operator pos:line="42" pos:column="56">|<pos:position pos:line="42" pos:column="57"/></operator> <name pos:line="42" pos:column="58">APLOG_WARNING<pos:position pos:line="42" pos:column="71"/></name></expr></argument>,
                             <argument><expr><literal type="number" pos:line="43" pos:column="30">0<pos:position pos:line="43" pos:column="31"/></literal></expr></argument>, <argument><expr><name pos:line="43" pos:column="33">NULL<pos:position pos:line="43" pos:column="37"/></name></expr></argument>,
                             <argument><expr><literal type="string" pos:line="44" pos:column="30">"macro '%s' (%s): "<pos:position pos:line="44" pos:column="49"/></literal>
                            <literal type="string" pos:line="45" pos:column="29">"argument name prefix conflict (%s #%d and %s #%d),"<pos:position pos:line="45" pos:column="81"/></literal>
                             <literal type="string" pos:line="46" pos:column="30">" be careful about your macro definition!"<pos:position pos:line="46" pos:column="72"/></literal></expr></argument>,
                             <argument><expr><name><name pos:line="47" pos:column="30">macro<pos:position pos:line="47" pos:column="35"/></name><operator pos:line="47" pos:column="35">-&gt;<pos:position pos:line="47" pos:column="40"/></operator><name pos:line="47" pos:column="37">name<pos:position pos:line="47" pos:column="41"/></name></name></expr></argument>, <argument><expr><name><name pos:line="47" pos:column="43">macro<pos:position pos:line="47" pos:column="48"/></name><operator pos:line="47" pos:column="48">-&gt;<pos:position pos:line="47" pos:column="53"/></operator><name pos:line="47" pos:column="50">location<pos:position pos:line="47" pos:column="58"/></name></name></expr></argument>,
                             <argument><expr><name><name pos:line="48" pos:column="30">tab<pos:position pos:line="48" pos:column="33"/></name><index pos:line="48" pos:column="33">[<expr><name pos:line="48" pos:column="34">i<pos:position pos:line="48" pos:column="35"/></name></expr>]<pos:position pos:line="48" pos:column="36"/></index></name></expr></argument>, <argument><expr><name pos:line="48" pos:column="38">i<pos:position pos:line="48" pos:column="39"/></name> <operator pos:line="48" pos:column="40">+<pos:position pos:line="48" pos:column="41"/></operator> <literal type="number" pos:line="48" pos:column="42">1<pos:position pos:line="48" pos:column="43"/></literal></expr></argument>, <argument><expr><name><name pos:line="48" pos:column="45">tab<pos:position pos:line="48" pos:column="48"/></name><index pos:line="48" pos:column="48">[<expr><name pos:line="48" pos:column="49">j<pos:position pos:line="48" pos:column="50"/></name></expr>]<pos:position pos:line="48" pos:column="51"/></index></name></expr></argument>, <argument><expr><name pos:line="48" pos:column="53">j<pos:position pos:line="48" pos:column="54"/></name> <operator pos:line="48" pos:column="55">+<pos:position pos:line="48" pos:column="56"/></operator> <literal type="number" pos:line="48" pos:column="57">1<pos:position pos:line="48" pos:column="58"/></literal></expr></argument>)<pos:position pos:line="48" pos:column="59"/></argument_list></call></expr>;<pos:position pos:line="48" pos:column="60"/></expr_stmt>
            }<pos:position pos:line="49" pos:column="14"/></block></then></if>
        }<pos:position pos:line="50" pos:column="10"/></block></for>
    }<pos:position pos:line="51" pos:column="6"/></block></for>

    <return pos:line="53" pos:column="5">return <expr><name pos:line="53" pos:column="12">NULL<pos:position pos:line="53" pos:column="16"/></name></expr>;<pos:position pos:line="53" pos:column="17"/></return>
}<pos:position pos:line="54" pos:column="2"/></block></function></unit>

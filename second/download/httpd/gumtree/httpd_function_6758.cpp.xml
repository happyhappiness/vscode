<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/httpd/gumtree/httpd_function_6758.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">void<pos:position pos:line="1" pos:column="12"/></name></type> <name pos:line="1" pos:column="13">append_scratch<pos:position pos:line="1" pos:column="27"/></name><parameter_list pos:line="1" pos:column="27">(<parameter><decl><type><name pos:line="1" pos:column="28">h2_conn_io<pos:position pos:line="1" pos:column="38"/></name> <modifier pos:line="1" pos:column="39">*<pos:position pos:line="1" pos:column="40"/></modifier></type><name pos:line="1" pos:column="40">io<pos:position pos:line="1" pos:column="42"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="43"/></parameter_list> 
<block pos:line="2" pos:column="1">{
    <if pos:line="3" pos:column="5">if <condition pos:line="3" pos:column="8">(<expr><name><name pos:line="3" pos:column="9">io<pos:position pos:line="3" pos:column="11"/></name><operator pos:line="3" pos:column="11">-&gt;<pos:position pos:line="3" pos:column="16"/></operator><name pos:line="3" pos:column="13">scratch<pos:position pos:line="3" pos:column="20"/></name></name> <operator pos:line="3" pos:column="21">&amp;&amp;<pos:position pos:line="3" pos:column="31"/></operator> <name><name pos:line="3" pos:column="24">io<pos:position pos:line="3" pos:column="26"/></name><operator pos:line="3" pos:column="26">-&gt;<pos:position pos:line="3" pos:column="31"/></operator><name pos:line="3" pos:column="28">slen<pos:position pos:line="3" pos:column="32"/></name></name> <operator pos:line="3" pos:column="33">&gt;<pos:position pos:line="3" pos:column="37"/></operator> <literal type="number" pos:line="3" pos:column="35">0<pos:position pos:line="3" pos:column="36"/></literal></expr>)<pos:position pos:line="3" pos:column="37"/></condition><then pos:line="3" pos:column="37"> <block pos:line="3" pos:column="38">{
        <decl_stmt><decl><type><name pos:line="4" pos:column="9">apr_bucket<pos:position pos:line="4" pos:column="19"/></name> <modifier pos:line="4" pos:column="20">*<pos:position pos:line="4" pos:column="21"/></modifier></type><name pos:line="4" pos:column="21">b<pos:position pos:line="4" pos:column="22"/></name> <init pos:line="4" pos:column="23">= <expr><call><name pos:line="4" pos:column="25">apr_bucket_heap_create<pos:position pos:line="4" pos:column="47"/></name><argument_list pos:line="4" pos:column="47">(<argument><expr><name><name pos:line="4" pos:column="48">io<pos:position pos:line="4" pos:column="50"/></name><operator pos:line="4" pos:column="50">-&gt;<pos:position pos:line="4" pos:column="55"/></operator><name pos:line="4" pos:column="52">scratch<pos:position pos:line="4" pos:column="59"/></name></name></expr></argument>, <argument><expr><name><name pos:line="4" pos:column="61">io<pos:position pos:line="4" pos:column="63"/></name><operator pos:line="4" pos:column="63">-&gt;<pos:position pos:line="4" pos:column="68"/></operator><name pos:line="4" pos:column="65">slen<pos:position pos:line="4" pos:column="69"/></name></name></expr></argument>,
                                               <argument><expr><name pos:line="5" pos:column="48">apr_bucket_free<pos:position pos:line="5" pos:column="63"/></name></expr></argument>,
                                               <argument><expr><name><name pos:line="6" pos:column="48">io<pos:position pos:line="6" pos:column="50"/></name><operator pos:line="6" pos:column="50">-&gt;<pos:position pos:line="6" pos:column="55"/></operator><name pos:line="6" pos:column="52">c<pos:position pos:line="6" pos:column="53"/></name><operator pos:line="6" pos:column="53">-&gt;<pos:position pos:line="6" pos:column="58"/></operator><name pos:line="6" pos:column="55">bucket_alloc<pos:position pos:line="6" pos:column="67"/></name></name></expr></argument>)<pos:position pos:line="6" pos:column="68"/></argument_list></call></expr></init></decl>;<pos:position pos:line="6" pos:column="69"/></decl_stmt>
        <expr_stmt><expr><call><name pos:line="7" pos:column="9">APR_BRIGADE_INSERT_TAIL<pos:position pos:line="7" pos:column="32"/></name><argument_list pos:line="7" pos:column="32">(<argument><expr><name><name pos:line="7" pos:column="33">io<pos:position pos:line="7" pos:column="35"/></name><operator pos:line="7" pos:column="35">-&gt;<pos:position pos:line="7" pos:column="40"/></operator><name pos:line="7" pos:column="37">output<pos:position pos:line="7" pos:column="43"/></name></name></expr></argument>, <argument><expr><name pos:line="7" pos:column="45">b<pos:position pos:line="7" pos:column="46"/></name></expr></argument>)<pos:position pos:line="7" pos:column="47"/></argument_list></call></expr>;<pos:position pos:line="7" pos:column="48"/></expr_stmt>
<cpp:if pos:line="8" pos:column="1">#<cpp:directive pos:line="8" pos:column="2">if<pos:position pos:line="8" pos:column="4"/></cpp:directive> <expr><name pos:line="8" pos:column="5">LOG_SCRATCH<pos:position pos:line="8" pos:column="16"/></name></expr></cpp:if>
        <expr_stmt><expr><call><name pos:line="9" pos:column="9">ap_log_cerror<pos:position pos:line="9" pos:column="22"/></name><argument_list pos:line="9" pos:column="22">(<argument><expr><name pos:line="9" pos:column="23">APLOG_MARK<pos:position pos:line="9" pos:column="33"/></name></expr></argument>, <argument><expr><name pos:line="9" pos:column="35">APLOG_DEBUG<pos:position pos:line="9" pos:column="46"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="9" pos:column="48">0<pos:position pos:line="9" pos:column="49"/></literal></expr></argument>, <argument><expr><name><name pos:line="9" pos:column="51">io<pos:position pos:line="9" pos:column="53"/></name><operator pos:line="9" pos:column="53">-&gt;<pos:position pos:line="9" pos:column="58"/></operator><name pos:line="9" pos:column="55">c<pos:position pos:line="9" pos:column="56"/></name></name></expr></argument>, <argument><expr><call><name pos:line="9" pos:column="58">APLOGNO<pos:position pos:line="9" pos:column="65"/></name><argument_list pos:line="9" pos:column="65">(<argument><expr><literal type="number" pos:line="9" pos:column="66">03386<pos:position pos:line="9" pos:column="71"/></literal></expr></argument>)<pos:position pos:line="9" pos:column="72"/></argument_list></call>
                      <literal type="string" pos:line="10" pos:column="23">"h2_conn_io(%ld): append_scratch(%ld)"<pos:position pos:line="10" pos:column="61"/></literal></expr></argument>, 
                      <argument><expr><name><name pos:line="11" pos:column="23">io<pos:position pos:line="11" pos:column="25"/></name><operator pos:line="11" pos:column="25">-&gt;<pos:position pos:line="11" pos:column="30"/></operator><name pos:line="11" pos:column="27">c<pos:position pos:line="11" pos:column="28"/></name><operator pos:line="11" pos:column="28">-&gt;<pos:position pos:line="11" pos:column="33"/></operator><name pos:line="11" pos:column="30">id<pos:position pos:line="11" pos:column="32"/></name></name></expr></argument>, <argument><expr><operator pos:line="11" pos:column="34">(<pos:position pos:line="11" pos:column="35"/></operator><name pos:line="11" pos:column="35">long<pos:position pos:line="11" pos:column="39"/></name><operator pos:line="11" pos:column="39">)<pos:position pos:line="11" pos:column="40"/></operator><name><name pos:line="11" pos:column="40">io<pos:position pos:line="11" pos:column="42"/></name><operator pos:line="11" pos:column="42">-&gt;<pos:position pos:line="11" pos:column="47"/></operator><name pos:line="11" pos:column="44">slen<pos:position pos:line="11" pos:column="48"/></name></name></expr></argument>)<pos:position pos:line="11" pos:column="49"/></argument_list></call></expr>;<pos:position pos:line="11" pos:column="50"/></expr_stmt>
<cpp:endif pos:line="12" pos:column="1">#<cpp:directive pos:line="12" pos:column="2">endif<pos:position pos:line="12" pos:column="7"/></cpp:directive></cpp:endif>
        <expr_stmt><expr><name><name pos:line="13" pos:column="9">io<pos:position pos:line="13" pos:column="11"/></name><operator pos:line="13" pos:column="11">-&gt;<pos:position pos:line="13" pos:column="16"/></operator><name pos:line="13" pos:column="13">scratch<pos:position pos:line="13" pos:column="20"/></name></name> <operator pos:line="13" pos:column="21">=<pos:position pos:line="13" pos:column="22"/></operator> <name pos:line="13" pos:column="23">NULL<pos:position pos:line="13" pos:column="27"/></name></expr>;<pos:position pos:line="13" pos:column="28"/></expr_stmt>
        <expr_stmt><expr><name><name pos:line="14" pos:column="9">io<pos:position pos:line="14" pos:column="11"/></name><operator pos:line="14" pos:column="11">-&gt;<pos:position pos:line="14" pos:column="16"/></operator><name pos:line="14" pos:column="13">slen<pos:position pos:line="14" pos:column="17"/></name></name> <operator pos:line="14" pos:column="18">=<pos:position pos:line="14" pos:column="19"/></operator> <name><name pos:line="14" pos:column="20">io<pos:position pos:line="14" pos:column="22"/></name><operator pos:line="14" pos:column="22">-&gt;<pos:position pos:line="14" pos:column="27"/></operator><name pos:line="14" pos:column="24">ssize<pos:position pos:line="14" pos:column="29"/></name></name> <operator pos:line="14" pos:column="30">=<pos:position pos:line="14" pos:column="31"/></operator> <literal type="number" pos:line="14" pos:column="32">0<pos:position pos:line="14" pos:column="33"/></literal></expr>;<pos:position pos:line="14" pos:column="34"/></expr_stmt>
    }<pos:position pos:line="15" pos:column="6"/></block></then></if>
}<pos:position pos:line="16" pos:column="2"/></block></function></unit>

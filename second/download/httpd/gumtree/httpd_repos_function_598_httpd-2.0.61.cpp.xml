<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/httpd/gumtree/httpd_repos_function_598_httpd-2.0.61.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">int<pos:position pos:line="1" pos:column="4"/></name></type> <name pos:line="1" pos:column="5">yyinput<pos:position pos:line="1" pos:column="12"/></name><parameter_list pos:line="1" pos:column="12">(<parameter><decl><type><name pos:line="1" pos:column="13">char<pos:position pos:line="1" pos:column="17"/></name> <modifier pos:line="1" pos:column="18">*<pos:position pos:line="1" pos:column="19"/></modifier></type><name pos:line="1" pos:column="19">buf<pos:position pos:line="1" pos:column="22"/></name></decl></parameter>, <parameter><decl><type><name pos:line="1" pos:column="24">int<pos:position pos:line="1" pos:column="27"/></name></type> <name pos:line="1" pos:column="28">max_size<pos:position pos:line="1" pos:column="36"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="37"/></parameter_list>
<block pos:line="2" pos:column="1">{
    <decl_stmt><decl><type><name pos:line="3" pos:column="5">int<pos:position pos:line="3" pos:column="8"/></name></type> <name pos:line="3" pos:column="9">n<pos:position pos:line="3" pos:column="10"/></name></decl>;<pos:position pos:line="3" pos:column="11"/></decl_stmt>

    <if pos:line="5" pos:column="5">if <condition pos:line="5" pos:column="8">(<expr><operator pos:line="5" pos:column="9">(<pos:position pos:line="5" pos:column="10"/></operator><name pos:line="5" pos:column="10">n<pos:position pos:line="5" pos:column="11"/></name> <operator pos:line="5" pos:column="12">=<pos:position pos:line="5" pos:column="13"/></operator> <call><name pos:line="5" pos:column="14">MIN<pos:position pos:line="5" pos:column="17"/></name><argument_list pos:line="5" pos:column="17">(<argument><expr><name pos:line="5" pos:column="18">max_size<pos:position pos:line="5" pos:column="26"/></name></expr></argument>, <argument><expr><name><name pos:line="5" pos:column="28">ssl_expr_info<pos:position pos:line="5" pos:column="41"/></name><operator pos:line="5" pos:column="41">.<pos:position pos:line="5" pos:column="42"/></operator><name pos:line="5" pos:column="42">inputbuf<pos:position pos:line="5" pos:column="50"/></name></name>
                         <operator pos:line="6" pos:column="26">+<pos:position pos:line="6" pos:column="27"/></operator> <name><name pos:line="6" pos:column="28">ssl_expr_info<pos:position pos:line="6" pos:column="41"/></name><operator pos:line="6" pos:column="41">.<pos:position pos:line="6" pos:column="42"/></operator><name pos:line="6" pos:column="42">inputlen<pos:position pos:line="6" pos:column="50"/></name></name> 
                         <operator pos:line="7" pos:column="26">-<pos:position pos:line="7" pos:column="27"/></operator> <name><name pos:line="7" pos:column="28">ssl_expr_info<pos:position pos:line="7" pos:column="41"/></name><operator pos:line="7" pos:column="41">.<pos:position pos:line="7" pos:column="42"/></operator><name pos:line="7" pos:column="42">inputptr<pos:position pos:line="7" pos:column="50"/></name></name></expr></argument>)<pos:position pos:line="7" pos:column="51"/></argument_list></call><operator pos:line="7" pos:column="51">)<pos:position pos:line="7" pos:column="52"/></operator> <operator pos:line="7" pos:column="53">&lt;=<pos:position pos:line="7" pos:column="58"/></operator> <literal type="number" pos:line="7" pos:column="56">0<pos:position pos:line="7" pos:column="57"/></literal></expr>)<pos:position pos:line="7" pos:column="58"/></condition><then pos:line="7" pos:column="58">
        <block type="pseudo"><return pos:line="8" pos:column="9">return <expr><name pos:line="8" pos:column="16">YY_NULL<pos:position pos:line="8" pos:column="23"/></name></expr>;<pos:position pos:line="8" pos:column="24"/></return></block></then></if>
    <expr_stmt><expr><call><name pos:line="9" pos:column="5">memcpy<pos:position pos:line="9" pos:column="11"/></name><argument_list pos:line="9" pos:column="11">(<argument><expr><name pos:line="9" pos:column="12">buf<pos:position pos:line="9" pos:column="15"/></name></expr></argument>, <argument><expr><name><name pos:line="9" pos:column="17">ssl_expr_info<pos:position pos:line="9" pos:column="30"/></name><operator pos:line="9" pos:column="30">.<pos:position pos:line="9" pos:column="31"/></operator><name pos:line="9" pos:column="31">inputptr<pos:position pos:line="9" pos:column="39"/></name></name></expr></argument>, <argument><expr><name pos:line="9" pos:column="41">n<pos:position pos:line="9" pos:column="42"/></name></expr></argument>)<pos:position pos:line="9" pos:column="43"/></argument_list></call></expr>;<pos:position pos:line="9" pos:column="44"/></expr_stmt>
    <expr_stmt><expr><name><name pos:line="10" pos:column="5">ssl_expr_info<pos:position pos:line="10" pos:column="18"/></name><operator pos:line="10" pos:column="18">.<pos:position pos:line="10" pos:column="19"/></operator><name pos:line="10" pos:column="19">inputptr<pos:position pos:line="10" pos:column="27"/></name></name> <operator pos:line="10" pos:column="28">+=<pos:position pos:line="10" pos:column="30"/></operator> <name pos:line="10" pos:column="31">n<pos:position pos:line="10" pos:column="32"/></name></expr>;<pos:position pos:line="10" pos:column="33"/></expr_stmt>
    <return pos:line="11" pos:column="5">return <expr><name pos:line="11" pos:column="12">n<pos:position pos:line="11" pos:column="13"/></name></expr>;<pos:position pos:line="11" pos:column="14"/></return>
}<pos:position pos:line="12" pos:column="2"/></block></function></unit>

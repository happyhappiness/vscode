<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/httpd/gumtree/httpd_repos_function_347_httpd-2.2.19.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">int<pos:position pos:line="1" pos:column="11"/></name></type> <name pos:line="1" pos:column="12">dav_method_options<pos:position pos:line="1" pos:column="30"/></name><parameter_list pos:line="1" pos:column="30">(<parameter><decl><type><name pos:line="1" pos:column="31">request_rec<pos:position pos:line="1" pos:column="42"/></name> <modifier pos:line="1" pos:column="43">*<pos:position pos:line="1" pos:column="44"/></modifier></type><name pos:line="1" pos:column="44">r<pos:position pos:line="1" pos:column="45"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="46"/></parameter_list>
<block pos:line="2" pos:column="1">{
    <decl_stmt><decl><type><specifier pos:line="3" pos:column="5">const<pos:position pos:line="3" pos:column="10"/></specifier> <name pos:line="3" pos:column="11">dav_hooks_locks<pos:position pos:line="3" pos:column="26"/></name> <modifier pos:line="3" pos:column="27">*<pos:position pos:line="3" pos:column="28"/></modifier></type><name pos:line="3" pos:column="28">locks_hooks<pos:position pos:line="3" pos:column="39"/></name> <init pos:line="3" pos:column="40">= <expr><call><name pos:line="3" pos:column="42">DAV_GET_HOOKS_LOCKS<pos:position pos:line="3" pos:column="61"/></name><argument_list pos:line="3" pos:column="61">(<argument><expr><name pos:line="3" pos:column="62">r<pos:position pos:line="3" pos:column="63"/></name></expr></argument>)<pos:position pos:line="3" pos:column="64"/></argument_list></call></expr></init></decl>;<pos:position pos:line="3" pos:column="65"/></decl_stmt>
    <decl_stmt><decl><type><specifier pos:line="4" pos:column="5">const<pos:position pos:line="4" pos:column="10"/></specifier> <name pos:line="4" pos:column="11">dav_hooks_vsn<pos:position pos:line="4" pos:column="24"/></name> <modifier pos:line="4" pos:column="25">*<pos:position pos:line="4" pos:column="26"/></modifier></type><name pos:line="4" pos:column="26">vsn_hooks<pos:position pos:line="4" pos:column="35"/></name> <init pos:line="4" pos:column="36">= <expr><call><name pos:line="4" pos:column="38">DAV_GET_HOOKS_VSN<pos:position pos:line="4" pos:column="55"/></name><argument_list pos:line="4" pos:column="55">(<argument><expr><name pos:line="4" pos:column="56">r<pos:position pos:line="4" pos:column="57"/></name></expr></argument>)<pos:position pos:line="4" pos:column="58"/></argument_list></call></expr></init></decl>;<pos:position pos:line="4" pos:column="59"/></decl_stmt>
    <decl_stmt><decl><type><specifier pos:line="5" pos:column="5">const<pos:position pos:line="5" pos:column="10"/></specifier> <name pos:line="5" pos:column="11">dav_hooks_binding<pos:position pos:line="5" pos:column="28"/></name> <modifier pos:line="5" pos:column="29">*<pos:position pos:line="5" pos:column="30"/></modifier></type><name pos:line="5" pos:column="30">binding_hooks<pos:position pos:line="5" pos:column="43"/></name> <init pos:line="5" pos:column="44">= <expr><call><name pos:line="5" pos:column="46">DAV_GET_HOOKS_BINDING<pos:position pos:line="5" pos:column="67"/></name><argument_list pos:line="5" pos:column="67">(<argument><expr><name pos:line="5" pos:column="68">r<pos:position pos:line="5" pos:column="69"/></name></expr></argument>)<pos:position pos:line="5" pos:column="70"/></argument_list></call></expr></init></decl>;<pos:position pos:line="5" pos:column="71"/></decl_stmt>
    <decl_stmt><decl><type><specifier pos:line="6" pos:column="5">const<pos:position pos:line="6" pos:column="10"/></specifier> <name pos:line="6" pos:column="11">dav_hooks_search<pos:position pos:line="6" pos:column="27"/></name> <modifier pos:line="6" pos:column="28">*<pos:position pos:line="6" pos:column="29"/></modifier></type><name pos:line="6" pos:column="29">search_hooks<pos:position pos:line="6" pos:column="41"/></name> <init pos:line="6" pos:column="42">= <expr><call><name pos:line="6" pos:column="44">DAV_GET_HOOKS_SEARCH<pos:position pos:line="6" pos:column="64"/></name><argument_list pos:line="6" pos:column="64">(<argument><expr><name pos:line="6" pos:column="65">r<pos:position pos:line="6" pos:column="66"/></name></expr></argument>)<pos:position pos:line="6" pos:column="67"/></argument_list></call></expr></init></decl>;<pos:position pos:line="6" pos:column="68"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="7" pos:column="5">dav_resource<pos:position pos:line="7" pos:column="17"/></name> <modifier pos:line="7" pos:column="18">*<pos:position pos:line="7" pos:column="19"/></modifier></type><name pos:line="7" pos:column="19">resource<pos:position pos:line="7" pos:column="27"/></name></decl>;<pos:position pos:line="7" pos:column="28"/></decl_stmt>
    <decl_stmt><decl><type><specifier pos:line="8" pos:column="5">const<pos:position pos:line="8" pos:column="10"/></specifier> <name pos:line="8" pos:column="11">char<pos:position pos:line="8" pos:column="15"/></name> <modifier pos:line="8" pos:column="16">*<pos:position pos:line="8" pos:column="17"/></modifier></type><name pos:line="8" pos:column="17">dav_level<pos:position pos:line="8" pos:column="26"/></name></decl>;<pos:position pos:line="8" pos:column="27"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="9" pos:column="5">char<pos:position pos:line="9" pos:column="9"/></name> <modifier pos:line="9" pos:column="10">*<pos:position pos:line="9" pos:column="11"/></modifier></type><name pos:line="9" pos:column="11">allow<pos:position pos:line="9" pos:column="16"/></name></decl>;<pos:position pos:line="9" pos:column="17"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="10" pos:column="5">char<pos:position pos:line="10" pos:column="9"/></name> <modifier pos:line="10" pos:column="10">*<pos:position pos:line="10" pos:column="11"/></modifier></type><name pos:line="10" pos:column="11">s<pos:position pos:line="10" pos:column="12"/></name></decl>;<pos:position pos:line="10" pos:column="13"/></decl_stmt>
    <decl_stmt><decl><type><specifier pos:line="11" pos:column="5">const<pos:position pos:line="11" pos:column="10"/></specifier> <name pos:line="11" pos:column="11">apr_array_header_t<pos:position pos:line="11" pos:column="29"/></name> <modifier pos:line="11" pos:column="30">*<pos:position pos:line="11" pos:column="31"/></modifier></type><name pos:line="11" pos:column="31">arr<pos:position pos:line="11" pos:column="34"/></name></decl>;<pos:position pos:line="11" pos:column="35"/></decl_stmt>
    <decl_stmt><decl><type><specifier pos:line="12" pos:column="5">const<pos:position pos:line="12" pos:column="10"/></specifier> <name pos:line="12" pos:column="11">apr_table_entry_t<pos:position pos:line="12" pos:column="28"/></name> <modifier pos:line="12" pos:column="29">*<pos:position pos:line="12" pos:column="30"/></modifier></type><name pos:line="12" pos:column="30">elts<pos:position pos:line="12" pos:column="34"/></name></decl>;<pos:position pos:line="12" pos:column="35"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="13" pos:column="5">apr_table_t<pos:position pos:line="13" pos:column="16"/></name> <modifier pos:line="13" pos:column="17">*<pos:position pos:line="13" pos:column="18"/></modifier></type><name pos:line="13" pos:column="18">methods<pos:position pos:line="13" pos:column="25"/></name> <init pos:line="13" pos:column="26">= <expr><call><name pos:line="13" pos:column="28">apr_table_make<pos:position pos:line="13" pos:column="42"/></name><argument_list pos:line="13" pos:column="42">(<argument><expr><name><name pos:line="13" pos:column="43">r<pos:position pos:line="13" pos:column="44"/></name><operator pos:line="13" pos:column="44">-&gt;<pos:position pos:line="13" pos:column="49"/></operator><name pos:line="13" pos:column="46">pool<pos:position pos:line="13" pos:column="50"/></name></name></expr></argument>, <argument><expr><literal type="number" pos:line="13" pos:column="52">12<pos:position pos:line="13" pos:column="54"/></literal></expr></argument>)<pos:position pos:line="13" pos:column="55"/></argument_list></call></expr></init></decl>;<pos:position pos:line="13" pos:column="56"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="14" pos:column="5">apr_text_header<pos:position pos:line="14" pos:column="20"/></name></type> <name pos:line="14" pos:column="21">vsn_options<pos:position pos:line="14" pos:column="32"/></name> <init pos:line="14" pos:column="33">= <expr><block pos:line="14" pos:column="35">{ <expr><literal type="number" pos:line="14" pos:column="37">0<pos:position pos:line="14" pos:column="38"/></literal></expr> }<pos:position pos:line="14" pos:column="40"/></block></expr></init></decl>;<pos:position pos:line="14" pos:column="41"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="15" pos:column="5">apr_text_header<pos:position pos:line="15" pos:column="20"/></name></type> <name pos:line="15" pos:column="21">body<pos:position pos:line="15" pos:column="25"/></name> <init pos:line="15" pos:column="26">= <expr><block pos:line="15" pos:column="28">{ <expr><literal type="number" pos:line="15" pos:column="30">0<pos:position pos:line="15" pos:column="31"/></literal></expr> }<pos:position pos:line="15" pos:column="33"/></block></expr></init></decl>;<pos:position pos:line="15" pos:column="34"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="16" pos:column="5">apr_text<pos:position pos:line="16" pos:column="13"/></name> <modifier pos:line="16" pos:column="14">*<pos:position pos:line="16" pos:column="15"/></modifier></type><name pos:line="16" pos:column="15">t<pos:position pos:line="16" pos:column="16"/></name></decl>;<pos:position pos:line="16" pos:column="17"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="17" pos:column="5">int<pos:position pos:line="17" pos:column="8"/></name></type> <name pos:line="17" pos:column="9">text_size<pos:position pos:line="17" pos:column="18"/></name></decl>;<pos:position pos:line="17" pos:column="19"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="18" pos:column="5">int<pos:position pos:line="18" pos:column="8"/></name></type> <name pos:line="18" pos:column="9">result<pos:position pos:line="18" pos:column="15"/></name></decl>;<pos:position pos:line="18" pos:column="16"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="19" pos:column="5">int<pos:position pos:line="19" pos:column="8"/></name></type> <name pos:line="19" pos:column="9">i<pos:position pos:line="19" pos:column="10"/></name></decl>;<pos:position pos:line="19" pos:column="11"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="20" pos:column="5">apr_array_header_t<pos:position pos:line="20" pos:column="23"/></name> <modifier pos:line="20" pos:column="24">*<pos:position pos:line="20" pos:column="25"/></modifier></type><name pos:line="20" pos:column="25">uri_ary<pos:position pos:line="20" pos:column="32"/></name></decl>;<pos:position pos:line="20" pos:column="33"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="21" pos:column="5">apr_xml_doc<pos:position pos:line="21" pos:column="16"/></name> <modifier pos:line="21" pos:column="17">*<pos:position pos:line="21" pos:column="18"/></modifier></type><name pos:line="21" pos:column="18">doc<pos:position pos:line="21" pos:column="21"/></name></decl>;<pos:position pos:line="21" pos:column="22"/></decl_stmt>
    <decl_stmt><decl><type><specifier pos:line="22" pos:column="5">const<pos:position pos:line="22" pos:column="10"/></specifier> <name pos:line="22" pos:column="11">apr_xml_elem<pos:position pos:line="22" pos:column="23"/></name> <modifier pos:line="22" pos:column="24">*<pos:position pos:line="22" pos:column="25"/></modifier></type><name pos:line="22" pos:column="25">elem<pos:position pos:line="22" pos:column="29"/></name></decl>;<pos:position pos:line="22" pos:column="30"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="23" pos:column="5">dav_error<pos:position pos:line="23" pos:column="14"/></name> <modifier pos:line="23" pos:column="15">*<pos:position pos:line="23" pos:column="16"/></modifier></type><name pos:line="23" pos:column="16">err<pos:position pos:line="23" pos:column="19"/></name></decl>;<pos:position pos:line="23" pos:column="20"/></decl_stmt>

    <comment type="block" pos:line="25" pos:column="5">/* resolve the resource */</comment>
    <expr_stmt><expr><name pos:line="26" pos:column="5">err<pos:position pos:line="26" pos:column="8"/></name> <operator pos:line="26" pos:column="9">=<pos:position pos:line="26" pos:column="10"/></operator> <call><name pos:line="26" pos:column="11">dav_get_resource<pos:position pos:line="26" pos:column="27"/></name><argument_list pos:line="26" pos:column="27">(<argument><expr><name pos:line="26" pos:column="28">r<pos:position pos:line="26" pos:column="29"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="26" pos:column="31">0<pos:position pos:line="26" pos:column="32"/></literal></expr></argument> <comment type="block" pos:line="26" pos:column="33">/* label_allowed */</comment>, <argument><expr><literal type="number" pos:line="26" pos:column="54">0<pos:position pos:line="26" pos:column="55"/></literal></expr></argument> <comment type="block" pos:line="26" pos:column="56">/* use_checked_in */</comment>,
                           <argument><expr><operator pos:line="27" pos:column="28">&amp;<pos:position pos:line="27" pos:column="33"/></operator><name pos:line="27" pos:column="29">resource<pos:position pos:line="27" pos:column="37"/></name></expr></argument>)<pos:position pos:line="27" pos:column="38"/></argument_list></call></expr>;<pos:position pos:line="27" pos:column="39"/></expr_stmt>
    <if pos:line="28" pos:column="5">if <condition pos:line="28" pos:column="8">(<expr><name pos:line="28" pos:column="9">err<pos:position pos:line="28" pos:column="12"/></name> <operator pos:line="28" pos:column="13">!=<pos:position pos:line="28" pos:column="15"/></operator> <name pos:line="28" pos:column="16">NULL<pos:position pos:line="28" pos:column="20"/></name></expr>)<pos:position pos:line="28" pos:column="21"/></condition><then pos:line="28" pos:column="21">
        <block type="pseudo"><return pos:line="29" pos:column="9">return <expr><call><name pos:line="29" pos:column="16">dav_handle_err<pos:position pos:line="29" pos:column="30"/></name><argument_list pos:line="29" pos:column="30">(<argument><expr><name pos:line="29" pos:column="31">r<pos:position pos:line="29" pos:column="32"/></name></expr></argument>, <argument><expr><name pos:line="29" pos:column="34">err<pos:position pos:line="29" pos:column="37"/></name></expr></argument>, <argument><expr><name pos:line="29" pos:column="39">NULL<pos:position pos:line="29" pos:column="43"/></name></expr></argument>)<pos:position pos:line="29" pos:column="44"/></argument_list></call></expr>;<pos:position pos:line="29" pos:column="45"/></return></block></then></if>

    <comment type="block" pos:line="31" pos:column="5">/* parse any request body */</comment>
    <if pos:line="32" pos:column="5">if <condition pos:line="32" pos:column="8">(<expr><operator pos:line="32" pos:column="9">(<pos:position pos:line="32" pos:column="10"/></operator><name pos:line="32" pos:column="10">result<pos:position pos:line="32" pos:column="16"/></name> <operator pos:line="32" pos:column="17">=<pos:position pos:line="32" pos:column="18"/></operator> <call><name pos:line="32" pos:column="19">ap_xml_parse_input<pos:position pos:line="32" pos:column="37"/></name><argument_list pos:line="32" pos:column="37">(<argument><expr><name pos:line="32" pos:column="38">r<pos:position pos:line="32" pos:column="39"/></name></expr></argument>, <argument><expr><operator pos:line="32" pos:column="41">&amp;<pos:position pos:line="32" pos:column="46"/></operator><name pos:line="32" pos:column="42">doc<pos:position pos:line="32" pos:column="45"/></name></expr></argument>)<pos:position pos:line="32" pos:column="46"/></argument_list></call><operator pos:line="32" pos:column="46">)<pos:position pos:line="32" pos:column="47"/></operator> <operator pos:line="32" pos:column="48">!=<pos:position pos:line="32" pos:column="50"/></operator> <name pos:line="32" pos:column="51">OK<pos:position pos:line="32" pos:column="53"/></name></expr>)<pos:position pos:line="32" pos:column="54"/></condition><then pos:line="32" pos:column="54"> <block pos:line="32" pos:column="55">{
        <return pos:line="33" pos:column="9">return <expr><name pos:line="33" pos:column="16">result<pos:position pos:line="33" pos:column="22"/></name></expr>;<pos:position pos:line="33" pos:column="23"/></return>
    }<pos:position pos:line="34" pos:column="6"/></block></then></if>
    <comment type="block" pos:line="35" pos:column="5">/* note: doc == NULL if no request body */</comment>

    <if pos:line="37" pos:column="5">if <condition pos:line="37" pos:column="8">(<expr><name pos:line="37" pos:column="9">doc<pos:position pos:line="37" pos:column="12"/></name> <operator pos:line="37" pos:column="13">&amp;&amp;<pos:position pos:line="37" pos:column="23"/></operator> <operator pos:line="37" pos:column="16">!<pos:position pos:line="37" pos:column="17"/></operator><call><name pos:line="37" pos:column="17">dav_validate_root<pos:position pos:line="37" pos:column="34"/></name><argument_list pos:line="37" pos:column="34">(<argument><expr><name pos:line="37" pos:column="35">doc<pos:position pos:line="37" pos:column="38"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="37" pos:column="40">"options"<pos:position pos:line="37" pos:column="49"/></literal></expr></argument>)<pos:position pos:line="37" pos:column="50"/></argument_list></call></expr>)<pos:position pos:line="37" pos:column="51"/></condition><then pos:line="37" pos:column="51"> <block pos:line="37" pos:column="52">{
        <expr_stmt><expr><call><name pos:line="38" pos:column="9">ap_log_rerror<pos:position pos:line="38" pos:column="22"/></name><argument_list pos:line="38" pos:column="22">(<argument><expr><name pos:line="38" pos:column="23">APLOG_MARK<pos:position pos:line="38" pos:column="33"/></name></expr></argument>, <argument><expr><name pos:line="38" pos:column="35">APLOG_ERR<pos:position pos:line="38" pos:column="44"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="38" pos:column="46">0<pos:position pos:line="38" pos:column="47"/></literal></expr></argument>, <argument><expr><name pos:line="38" pos:column="49">r<pos:position pos:line="38" pos:column="50"/></name></expr></argument>,
                      <argument><expr><literal type="string" pos:line="39" pos:column="23">"The \"options\" element was not found."<pos:position pos:line="39" pos:column="63"/></literal></expr></argument>)<pos:position pos:line="39" pos:column="64"/></argument_list></call></expr>;<pos:position pos:line="39" pos:column="65"/></expr_stmt>
        <return pos:line="40" pos:column="9">return <expr><name pos:line="40" pos:column="16">HTTP_BAD_REQUEST<pos:position pos:line="40" pos:column="32"/></name></expr>;<pos:position pos:line="40" pos:column="33"/></return>
    }<pos:position pos:line="41" pos:column="6"/></block></then></if>

    <comment type="block" pos:line="43" pos:column="5">/* determine which providers are available */</comment>
    <expr_stmt><expr><name pos:line="44" pos:column="5">dav_level<pos:position pos:line="44" pos:column="14"/></name> <operator pos:line="44" pos:column="15">=<pos:position pos:line="44" pos:column="16"/></operator> <literal type="string" pos:line="44" pos:column="17">"1"<pos:position pos:line="44" pos:column="20"/></literal></expr>;<pos:position pos:line="44" pos:column="21"/></expr_stmt>

    <if pos:line="46" pos:column="5">if <condition pos:line="46" pos:column="8">(<expr><name pos:line="46" pos:column="9">locks_hooks<pos:position pos:line="46" pos:column="20"/></name> <operator pos:line="46" pos:column="21">!=<pos:position pos:line="46" pos:column="23"/></operator> <name pos:line="46" pos:column="24">NULL<pos:position pos:line="46" pos:column="28"/></name></expr>)<pos:position pos:line="46" pos:column="29"/></condition><then pos:line="46" pos:column="29"> <block pos:line="46" pos:column="30">{
        <expr_stmt><expr><name pos:line="47" pos:column="9">dav_level<pos:position pos:line="47" pos:column="18"/></name> <operator pos:line="47" pos:column="19">=<pos:position pos:line="47" pos:column="20"/></operator> <literal type="string" pos:line="47" pos:column="21">"1,2"<pos:position pos:line="47" pos:column="26"/></literal></expr>;<pos:position pos:line="47" pos:column="27"/></expr_stmt>
    }<pos:position pos:line="48" pos:column="6"/></block></then></if>

    <if pos:line="50" pos:column="5">if <condition pos:line="50" pos:column="8">(<expr><name pos:line="50" pos:column="9">binding_hooks<pos:position pos:line="50" pos:column="22"/></name> <operator pos:line="50" pos:column="23">!=<pos:position pos:line="50" pos:column="25"/></operator> <name pos:line="50" pos:column="26">NULL<pos:position pos:line="50" pos:column="30"/></name></expr>)<pos:position pos:line="50" pos:column="31"/></condition><then pos:line="50" pos:column="31">
        <block type="pseudo"><expr_stmt><expr><name pos:line="51" pos:column="9">dav_level<pos:position pos:line="51" pos:column="18"/></name> <operator pos:line="51" pos:column="19">=<pos:position pos:line="51" pos:column="20"/></operator> <call><name pos:line="51" pos:column="21">apr_pstrcat<pos:position pos:line="51" pos:column="32"/></name><argument_list pos:line="51" pos:column="32">(<argument><expr><name><name pos:line="51" pos:column="33">r<pos:position pos:line="51" pos:column="34"/></name><operator pos:line="51" pos:column="34">-&gt;<pos:position pos:line="51" pos:column="39"/></operator><name pos:line="51" pos:column="36">pool<pos:position pos:line="51" pos:column="40"/></name></name></expr></argument>, <argument><expr><name pos:line="51" pos:column="42">dav_level<pos:position pos:line="51" pos:column="51"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="51" pos:column="53">",bindings"<pos:position pos:line="51" pos:column="64"/></literal></expr></argument>, <argument><expr><name pos:line="51" pos:column="66">NULL<pos:position pos:line="51" pos:column="70"/></name></expr></argument>)<pos:position pos:line="51" pos:column="71"/></argument_list></call></expr>;<pos:position pos:line="51" pos:column="72"/></expr_stmt></block></then></if>

    <comment type="block" pos:line="53" pos:column="5">/* ###
     * MSFT Web Folders chokes if length of DAV header value &gt; 63 characters!
     * To workaround that, we use separate DAV headers for versioning and
     * live prop provider namespace URIs.
     * ###
     */</comment>
    <expr_stmt><expr><call><name pos:line="59" pos:column="5">apr_table_setn<pos:position pos:line="59" pos:column="19"/></name><argument_list pos:line="59" pos:column="19">(<argument><expr><name><name pos:line="59" pos:column="20">r<pos:position pos:line="59" pos:column="21"/></name><operator pos:line="59" pos:column="21">-&gt;<pos:position pos:line="59" pos:column="26"/></operator><name pos:line="59" pos:column="23">headers_out<pos:position pos:line="59" pos:column="34"/></name></name></expr></argument>, <argument><expr><literal type="string" pos:line="59" pos:column="36">"DAV"<pos:position pos:line="59" pos:column="41"/></literal></expr></argument>, <argument><expr><name pos:line="59" pos:column="43">dav_level<pos:position pos:line="59" pos:column="52"/></name></expr></argument>)<pos:position pos:line="59" pos:column="53"/></argument_list></call></expr>;<pos:position pos:line="59" pos:column="54"/></expr_stmt>

    <comment type="block" pos:line="61" pos:column="5">/*
     * If there is a versioning provider, generate DAV headers
     * for versioning options.
     */</comment>
    <if pos:line="65" pos:column="5">if <condition pos:line="65" pos:column="8">(<expr><name pos:line="65" pos:column="9">vsn_hooks<pos:position pos:line="65" pos:column="18"/></name> <operator pos:line="65" pos:column="19">!=<pos:position pos:line="65" pos:column="21"/></operator> <name pos:line="65" pos:column="22">NULL<pos:position pos:line="65" pos:column="26"/></name></expr>)<pos:position pos:line="65" pos:column="27"/></condition><then pos:line="65" pos:column="27"> <block pos:line="65" pos:column="28">{
        <expr_stmt><expr><call pos:line="66" pos:column="9">(<modifier pos:line="66" pos:column="10">*<pos:position pos:line="66" pos:column="11"/></modifier><name><name pos:line="66" pos:column="11">vsn_hooks<pos:position pos:line="66" pos:column="20"/></name><operator pos:line="66" pos:column="20">-&gt;<pos:position pos:line="66" pos:column="25"/></operator><name pos:line="66" pos:column="22">get_vsn_options<pos:position pos:line="66" pos:column="37"/></name></name>)<argument_list pos:line="66" pos:column="38">(<argument><expr><name><name pos:line="66" pos:column="39">r<pos:position pos:line="66" pos:column="40"/></name><operator pos:line="66" pos:column="40">-&gt;<pos:position pos:line="66" pos:column="45"/></operator><name pos:line="66" pos:column="42">pool<pos:position pos:line="66" pos:column="46"/></name></name></expr></argument>, <argument><expr><operator pos:line="66" pos:column="48">&amp;<pos:position pos:line="66" pos:column="53"/></operator><name pos:line="66" pos:column="49">vsn_options<pos:position pos:line="66" pos:column="60"/></name></expr></argument>)<pos:position pos:line="66" pos:column="61"/></argument_list></call></expr>;<pos:position pos:line="66" pos:column="62"/></expr_stmt>

        <for pos:line="68" pos:column="9">for <control pos:line="68" pos:column="13">(<init><expr><name pos:line="68" pos:column="14">t<pos:position pos:line="68" pos:column="15"/></name> <operator pos:line="68" pos:column="16">=<pos:position pos:line="68" pos:column="17"/></operator> <name><name pos:line="68" pos:column="18">vsn_options<pos:position pos:line="68" pos:column="29"/></name><operator pos:line="68" pos:column="29">.<pos:position pos:line="68" pos:column="30"/></operator><name pos:line="68" pos:column="30">first<pos:position pos:line="68" pos:column="35"/></name></name></expr>;<pos:position pos:line="68" pos:column="36"/></init> <condition><expr><name pos:line="68" pos:column="37">t<pos:position pos:line="68" pos:column="38"/></name> <operator pos:line="68" pos:column="39">!=<pos:position pos:line="68" pos:column="41"/></operator> <name pos:line="68" pos:column="42">NULL<pos:position pos:line="68" pos:column="46"/></name></expr>;<pos:position pos:line="68" pos:column="47"/></condition> <incr><expr><name pos:line="68" pos:column="48">t<pos:position pos:line="68" pos:column="49"/></name> <operator pos:line="68" pos:column="50">=<pos:position pos:line="68" pos:column="51"/></operator> <name><name pos:line="68" pos:column="52">t<pos:position pos:line="68" pos:column="53"/></name><operator pos:line="68" pos:column="53">-&gt;<pos:position pos:line="68" pos:column="58"/></operator><name pos:line="68" pos:column="55">next<pos:position pos:line="68" pos:column="59"/></name></name></expr></incr>)<pos:position pos:line="68" pos:column="60"/></control>
            <block type="pseudo"><expr_stmt><expr><call><name pos:line="69" pos:column="13">apr_table_addn<pos:position pos:line="69" pos:column="27"/></name><argument_list pos:line="69" pos:column="27">(<argument><expr><name><name pos:line="69" pos:column="28">r<pos:position pos:line="69" pos:column="29"/></name><operator pos:line="69" pos:column="29">-&gt;<pos:position pos:line="69" pos:column="34"/></operator><name pos:line="69" pos:column="31">headers_out<pos:position pos:line="69" pos:column="42"/></name></name></expr></argument>, <argument><expr><literal type="string" pos:line="69" pos:column="44">"DAV"<pos:position pos:line="69" pos:column="49"/></literal></expr></argument>, <argument><expr><name><name pos:line="69" pos:column="51">t<pos:position pos:line="69" pos:column="52"/></name><operator pos:line="69" pos:column="52">-&gt;<pos:position pos:line="69" pos:column="57"/></operator><name pos:line="69" pos:column="54">text<pos:position pos:line="69" pos:column="58"/></name></name></expr></argument>)<pos:position pos:line="69" pos:column="59"/></argument_list></call></expr>;<pos:position pos:line="69" pos:column="60"/></expr_stmt></block></for>
    }<pos:position pos:line="70" pos:column="6"/></block></then></if>

    <comment type="block" pos:line="72" pos:column="5">/*
     * Gather property set URIs from all the liveprop providers,
     * and generate a separate DAV header for each URI, to avoid
     * problems with long header lengths.
     */</comment>
    <expr_stmt><expr><name pos:line="77" pos:column="5">uri_ary<pos:position pos:line="77" pos:column="12"/></name> <operator pos:line="77" pos:column="13">=<pos:position pos:line="77" pos:column="14"/></operator> <call><name pos:line="77" pos:column="15">apr_array_make<pos:position pos:line="77" pos:column="29"/></name><argument_list pos:line="77" pos:column="29">(<argument><expr><name><name pos:line="77" pos:column="30">r<pos:position pos:line="77" pos:column="31"/></name><operator pos:line="77" pos:column="31">-&gt;<pos:position pos:line="77" pos:column="36"/></operator><name pos:line="77" pos:column="33">pool<pos:position pos:line="77" pos:column="37"/></name></name></expr></argument>, <argument><expr><literal type="number" pos:line="77" pos:column="39">5<pos:position pos:line="77" pos:column="40"/></literal></expr></argument>, <argument><expr><sizeof pos:line="77" pos:column="42">sizeof<argument_list pos:line="77" pos:column="48">(<argument><expr><specifier pos:line="77" pos:column="49">const<pos:position pos:line="77" pos:column="54"/></specifier> <name pos:line="77" pos:column="55">char<pos:position pos:line="77" pos:column="59"/></name> <operator pos:line="77" pos:column="60">*<pos:position pos:line="77" pos:column="61"/></operator></expr></argument>)<pos:position pos:line="77" pos:column="62"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="77" pos:column="63"/></argument_list></call></expr>;<pos:position pos:line="77" pos:column="64"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="78" pos:column="5">dav_run_gather_propsets<pos:position pos:line="78" pos:column="28"/></name><argument_list pos:line="78" pos:column="28">(<argument><expr><name pos:line="78" pos:column="29">uri_ary<pos:position pos:line="78" pos:column="36"/></name></expr></argument>)<pos:position pos:line="78" pos:column="37"/></argument_list></call></expr>;<pos:position pos:line="78" pos:column="38"/></expr_stmt>
    <for pos:line="79" pos:column="5">for <control pos:line="79" pos:column="9">(<init><expr><name pos:line="79" pos:column="10">i<pos:position pos:line="79" pos:column="11"/></name> <operator pos:line="79" pos:column="12">=<pos:position pos:line="79" pos:column="13"/></operator> <literal type="number" pos:line="79" pos:column="14">0<pos:position pos:line="79" pos:column="15"/></literal></expr>;<pos:position pos:line="79" pos:column="16"/></init> <condition><expr><name pos:line="79" pos:column="17">i<pos:position pos:line="79" pos:column="18"/></name> <operator pos:line="79" pos:column="19">&lt;<pos:position pos:line="79" pos:column="23"/></operator> <name><name pos:line="79" pos:column="21">uri_ary<pos:position pos:line="79" pos:column="28"/></name><operator pos:line="79" pos:column="28">-&gt;<pos:position pos:line="79" pos:column="33"/></operator><name pos:line="79" pos:column="30">nelts<pos:position pos:line="79" pos:column="35"/></name></name></expr>;<pos:position pos:line="79" pos:column="36"/></condition> <incr><expr><operator pos:line="79" pos:column="37">++<pos:position pos:line="79" pos:column="39"/></operator><name pos:line="79" pos:column="39">i<pos:position pos:line="79" pos:column="40"/></name></expr></incr>)<pos:position pos:line="79" pos:column="41"/></control> <block pos:line="79" pos:column="42">{
        <if pos:line="80" pos:column="9">if <condition pos:line="80" pos:column="12">(<expr><operator pos:line="80" pos:column="13">(<pos:position pos:line="80" pos:column="14"/></operator><operator pos:line="80" pos:column="14">(<pos:position pos:line="80" pos:column="15"/></operator><name pos:line="80" pos:column="15">char<pos:position pos:line="80" pos:column="19"/></name> <operator pos:line="80" pos:column="20">*<pos:position pos:line="80" pos:column="21"/></operator><operator pos:line="80" pos:column="21">*<pos:position pos:line="80" pos:column="22"/></operator><operator pos:line="80" pos:column="22">)<pos:position pos:line="80" pos:column="23"/></operator><name><name pos:line="80" pos:column="23">uri_ary<pos:position pos:line="80" pos:column="30"/></name><operator pos:line="80" pos:column="30">-&gt;<pos:position pos:line="80" pos:column="35"/></operator><name pos:line="80" pos:column="32">elts<pos:position pos:line="80" pos:column="36"/></name></name><operator pos:line="80" pos:column="36">)<pos:position pos:line="80" pos:column="37"/></operator><index pos:line="80" pos:column="37">[<expr><name pos:line="80" pos:column="38">i<pos:position pos:line="80" pos:column="39"/></name></expr>]<pos:position pos:line="80" pos:column="40"/></index> <operator pos:line="80" pos:column="41">!=<pos:position pos:line="80" pos:column="43"/></operator> <name pos:line="80" pos:column="44">NULL<pos:position pos:line="80" pos:column="48"/></name></expr>)<pos:position pos:line="80" pos:column="49"/></condition><then pos:line="80" pos:column="49">
            <block type="pseudo"><expr_stmt><expr><call><name pos:line="81" pos:column="13">apr_table_addn<pos:position pos:line="81" pos:column="27"/></name><argument_list pos:line="81" pos:column="27">(<argument><expr><name><name pos:line="81" pos:column="28">r<pos:position pos:line="81" pos:column="29"/></name><operator pos:line="81" pos:column="29">-&gt;<pos:position pos:line="81" pos:column="34"/></operator><name pos:line="81" pos:column="31">headers_out<pos:position pos:line="81" pos:column="42"/></name></name></expr></argument>, <argument><expr><literal type="string" pos:line="81" pos:column="44">"DAV"<pos:position pos:line="81" pos:column="49"/></literal></expr></argument>, <argument><expr><operator pos:line="81" pos:column="51">(<pos:position pos:line="81" pos:column="52"/></operator><operator pos:line="81" pos:column="52">(<pos:position pos:line="81" pos:column="53"/></operator><name pos:line="81" pos:column="53">char<pos:position pos:line="81" pos:column="57"/></name> <operator pos:line="81" pos:column="58">*<pos:position pos:line="81" pos:column="59"/></operator><operator pos:line="81" pos:column="59">*<pos:position pos:line="81" pos:column="60"/></operator><operator pos:line="81" pos:column="60">)<pos:position pos:line="81" pos:column="61"/></operator><name><name pos:line="81" pos:column="61">uri_ary<pos:position pos:line="81" pos:column="68"/></name><operator pos:line="81" pos:column="68">-&gt;<pos:position pos:line="81" pos:column="73"/></operator><name pos:line="81" pos:column="70">elts<pos:position pos:line="81" pos:column="74"/></name></name><operator pos:line="81" pos:column="74">)<pos:position pos:line="81" pos:column="75"/></operator><index pos:line="81" pos:column="75">[<expr><name pos:line="81" pos:column="76">i<pos:position pos:line="81" pos:column="77"/></name></expr>]<pos:position pos:line="81" pos:column="78"/></index></expr></argument>)<pos:position pos:line="81" pos:column="79"/></argument_list></call></expr>;<pos:position pos:line="81" pos:column="80"/></expr_stmt></block></then></if>
    }<pos:position pos:line="82" pos:column="6"/></block></for>

    <comment type="block" pos:line="84" pos:column="5">/* this tells MSFT products to skip looking for FrontPage extensions */</comment>
    <expr_stmt><expr><call><name pos:line="85" pos:column="5">apr_table_setn<pos:position pos:line="85" pos:column="19"/></name><argument_list pos:line="85" pos:column="19">(<argument><expr><name><name pos:line="85" pos:column="20">r<pos:position pos:line="85" pos:column="21"/></name><operator pos:line="85" pos:column="21">-&gt;<pos:position pos:line="85" pos:column="26"/></operator><name pos:line="85" pos:column="23">headers_out<pos:position pos:line="85" pos:column="34"/></name></name></expr></argument>, <argument><expr><literal type="string" pos:line="85" pos:column="36">"MS-Author-Via"<pos:position pos:line="85" pos:column="51"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="85" pos:column="53">"DAV"<pos:position pos:line="85" pos:column="58"/></literal></expr></argument>)<pos:position pos:line="85" pos:column="59"/></argument_list></call></expr>;<pos:position pos:line="85" pos:column="60"/></expr_stmt>

    <comment type="block" pos:line="87" pos:column="5">/*
     * Determine which methods are allowed on the resource.
     * Three cases:  resource is null (3), is lock-null (7.4), or exists.
     *
     * All cases support OPTIONS, and if there is a lock provider, LOCK.
     * (Lock-) null resources also support MKCOL and PUT.
     * Lock-null supports PROPFIND and UNLOCK.
     * Existing resources support lots of stuff.
     */</comment>

    <expr_stmt><expr><call><name pos:line="97" pos:column="5">apr_table_addn<pos:position pos:line="97" pos:column="19"/></name><argument_list pos:line="97" pos:column="19">(<argument><expr><name pos:line="97" pos:column="20">methods<pos:position pos:line="97" pos:column="27"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="97" pos:column="29">"OPTIONS"<pos:position pos:line="97" pos:column="38"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="97" pos:column="40">""<pos:position pos:line="97" pos:column="42"/></literal></expr></argument>)<pos:position pos:line="97" pos:column="43"/></argument_list></call></expr>;<pos:position pos:line="97" pos:column="44"/></expr_stmt>

    <comment type="block" pos:line="99" pos:column="5">/* ### take into account resource type */</comment>
    <switch pos:line="100" pos:column="5">switch <condition pos:line="100" pos:column="12">(<expr><call><name pos:line="100" pos:column="13">dav_get_resource_state<pos:position pos:line="100" pos:column="35"/></name><argument_list pos:line="100" pos:column="35">(<argument><expr><name pos:line="100" pos:column="36">r<pos:position pos:line="100" pos:column="37"/></name></expr></argument>, <argument><expr><name pos:line="100" pos:column="39">resource<pos:position pos:line="100" pos:column="47"/></name></expr></argument>)<pos:position pos:line="100" pos:column="48"/></argument_list></call></expr>)<pos:position pos:line="100" pos:column="49"/></condition>
    <block pos:line="101" pos:column="5">{
    <case pos:line="102" pos:column="5">case <expr><name pos:line="102" pos:column="10">DAV_RESOURCE_EXISTS<pos:position pos:line="102" pos:column="29"/></name></expr>:<pos:position pos:line="102" pos:column="30"/></case>
        <comment type="block" pos:line="103" pos:column="9">/* resource exists */</comment>
        <expr_stmt><expr><call><name pos:line="104" pos:column="9">apr_table_addn<pos:position pos:line="104" pos:column="23"/></name><argument_list pos:line="104" pos:column="23">(<argument><expr><name pos:line="104" pos:column="24">methods<pos:position pos:line="104" pos:column="31"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="104" pos:column="33">"GET"<pos:position pos:line="104" pos:column="38"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="104" pos:column="40">""<pos:position pos:line="104" pos:column="42"/></literal></expr></argument>)<pos:position pos:line="104" pos:column="43"/></argument_list></call></expr>;<pos:position pos:line="104" pos:column="44"/></expr_stmt>
        <expr_stmt><expr><call><name pos:line="105" pos:column="9">apr_table_addn<pos:position pos:line="105" pos:column="23"/></name><argument_list pos:line="105" pos:column="23">(<argument><expr><name pos:line="105" pos:column="24">methods<pos:position pos:line="105" pos:column="31"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="105" pos:column="33">"HEAD"<pos:position pos:line="105" pos:column="39"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="105" pos:column="41">""<pos:position pos:line="105" pos:column="43"/></literal></expr></argument>)<pos:position pos:line="105" pos:column="44"/></argument_list></call></expr>;<pos:position pos:line="105" pos:column="45"/></expr_stmt>
        <expr_stmt><expr><call><name pos:line="106" pos:column="9">apr_table_addn<pos:position pos:line="106" pos:column="23"/></name><argument_list pos:line="106" pos:column="23">(<argument><expr><name pos:line="106" pos:column="24">methods<pos:position pos:line="106" pos:column="31"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="106" pos:column="33">"POST"<pos:position pos:line="106" pos:column="39"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="106" pos:column="41">""<pos:position pos:line="106" pos:column="43"/></literal></expr></argument>)<pos:position pos:line="106" pos:column="44"/></argument_list></call></expr>;<pos:position pos:line="106" pos:column="45"/></expr_stmt>
        <expr_stmt><expr><call><name pos:line="107" pos:column="9">apr_table_addn<pos:position pos:line="107" pos:column="23"/></name><argument_list pos:line="107" pos:column="23">(<argument><expr><name pos:line="107" pos:column="24">methods<pos:position pos:line="107" pos:column="31"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="107" pos:column="33">"DELETE"<pos:position pos:line="107" pos:column="41"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="107" pos:column="43">""<pos:position pos:line="107" pos:column="45"/></literal></expr></argument>)<pos:position pos:line="107" pos:column="46"/></argument_list></call></expr>;<pos:position pos:line="107" pos:column="47"/></expr_stmt>
        <expr_stmt><expr><call><name pos:line="108" pos:column="9">apr_table_addn<pos:position pos:line="108" pos:column="23"/></name><argument_list pos:line="108" pos:column="23">(<argument><expr><name pos:line="108" pos:column="24">methods<pos:position pos:line="108" pos:column="31"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="108" pos:column="33">"TRACE"<pos:position pos:line="108" pos:column="40"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="108" pos:column="42">""<pos:position pos:line="108" pos:column="44"/></literal></expr></argument>)<pos:position pos:line="108" pos:column="45"/></argument_list></call></expr>;<pos:position pos:line="108" pos:column="46"/></expr_stmt>
        <expr_stmt><expr><call><name pos:line="109" pos:column="9">apr_table_addn<pos:position pos:line="109" pos:column="23"/></name><argument_list pos:line="109" pos:column="23">(<argument><expr><name pos:line="109" pos:column="24">methods<pos:position pos:line="109" pos:column="31"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="109" pos:column="33">"PROPFIND"<pos:position pos:line="109" pos:column="43"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="109" pos:column="45">""<pos:position pos:line="109" pos:column="47"/></literal></expr></argument>)<pos:position pos:line="109" pos:column="48"/></argument_list></call></expr>;<pos:position pos:line="109" pos:column="49"/></expr_stmt>
        <expr_stmt><expr><call><name pos:line="110" pos:column="9">apr_table_addn<pos:position pos:line="110" pos:column="23"/></name><argument_list pos:line="110" pos:column="23">(<argument><expr><name pos:line="110" pos:column="24">methods<pos:position pos:line="110" pos:column="31"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="110" pos:column="33">"PROPPATCH"<pos:position pos:line="110" pos:column="44"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="110" pos:column="46">""<pos:position pos:line="110" pos:column="48"/></literal></expr></argument>)<pos:position pos:line="110" pos:column="49"/></argument_list></call></expr>;<pos:position pos:line="110" pos:column="50"/></expr_stmt>
        <expr_stmt><expr><call><name pos:line="111" pos:column="9">apr_table_addn<pos:position pos:line="111" pos:column="23"/></name><argument_list pos:line="111" pos:column="23">(<argument><expr><name pos:line="111" pos:column="24">methods<pos:position pos:line="111" pos:column="31"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="111" pos:column="33">"COPY"<pos:position pos:line="111" pos:column="39"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="111" pos:column="41">""<pos:position pos:line="111" pos:column="43"/></literal></expr></argument>)<pos:position pos:line="111" pos:column="44"/></argument_list></call></expr>;<pos:position pos:line="111" pos:column="45"/></expr_stmt>
        <expr_stmt><expr><call><name pos:line="112" pos:column="9">apr_table_addn<pos:position pos:line="112" pos:column="23"/></name><argument_list pos:line="112" pos:column="23">(<argument><expr><name pos:line="112" pos:column="24">methods<pos:position pos:line="112" pos:column="31"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="112" pos:column="33">"MOVE"<pos:position pos:line="112" pos:column="39"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="112" pos:column="41">""<pos:position pos:line="112" pos:column="43"/></literal></expr></argument>)<pos:position pos:line="112" pos:column="44"/></argument_list></call></expr>;<pos:position pos:line="112" pos:column="45"/></expr_stmt>

        <if pos:line="114" pos:column="9">if <condition pos:line="114" pos:column="12">(<expr><operator pos:line="114" pos:column="13">!<pos:position pos:line="114" pos:column="14"/></operator><name><name pos:line="114" pos:column="14">resource<pos:position pos:line="114" pos:column="22"/></name><operator pos:line="114" pos:column="22">-&gt;<pos:position pos:line="114" pos:column="27"/></operator><name pos:line="114" pos:column="24">collection<pos:position pos:line="114" pos:column="34"/></name></name></expr>)<pos:position pos:line="114" pos:column="35"/></condition><then pos:line="114" pos:column="35">
            <block type="pseudo"><expr_stmt><expr><call><name pos:line="115" pos:column="13">apr_table_addn<pos:position pos:line="115" pos:column="27"/></name><argument_list pos:line="115" pos:column="27">(<argument><expr><name pos:line="115" pos:column="28">methods<pos:position pos:line="115" pos:column="35"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="115" pos:column="37">"PUT"<pos:position pos:line="115" pos:column="42"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="115" pos:column="44">""<pos:position pos:line="115" pos:column="46"/></literal></expr></argument>)<pos:position pos:line="115" pos:column="47"/></argument_list></call></expr>;<pos:position pos:line="115" pos:column="48"/></expr_stmt></block></then></if>

        <if pos:line="117" pos:column="9">if <condition pos:line="117" pos:column="12">(<expr><name pos:line="117" pos:column="13">locks_hooks<pos:position pos:line="117" pos:column="24"/></name> <operator pos:line="117" pos:column="25">!=<pos:position pos:line="117" pos:column="27"/></operator> <name pos:line="117" pos:column="28">NULL<pos:position pos:line="117" pos:column="32"/></name></expr>)<pos:position pos:line="117" pos:column="33"/></condition><then pos:line="117" pos:column="33"> <block pos:line="117" pos:column="34">{
            <expr_stmt><expr><call><name pos:line="118" pos:column="13">apr_table_addn<pos:position pos:line="118" pos:column="27"/></name><argument_list pos:line="118" pos:column="27">(<argument><expr><name pos:line="118" pos:column="28">methods<pos:position pos:line="118" pos:column="35"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="118" pos:column="37">"LOCK"<pos:position pos:line="118" pos:column="43"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="118" pos:column="45">""<pos:position pos:line="118" pos:column="47"/></literal></expr></argument>)<pos:position pos:line="118" pos:column="48"/></argument_list></call></expr>;<pos:position pos:line="118" pos:column="49"/></expr_stmt>
            <expr_stmt><expr><call><name pos:line="119" pos:column="13">apr_table_addn<pos:position pos:line="119" pos:column="27"/></name><argument_list pos:line="119" pos:column="27">(<argument><expr><name pos:line="119" pos:column="28">methods<pos:position pos:line="119" pos:column="35"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="119" pos:column="37">"UNLOCK"<pos:position pos:line="119" pos:column="45"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="119" pos:column="47">""<pos:position pos:line="119" pos:column="49"/></literal></expr></argument>)<pos:position pos:line="119" pos:column="50"/></argument_list></call></expr>;<pos:position pos:line="119" pos:column="51"/></expr_stmt>
        }<pos:position pos:line="120" pos:column="10"/></block></then></if>

        <break pos:line="122" pos:column="9">break;<pos:position pos:line="122" pos:column="15"/></break>

    <case pos:line="124" pos:column="5">case <expr><name pos:line="124" pos:column="10">DAV_RESOURCE_LOCK_NULL<pos:position pos:line="124" pos:column="32"/></name></expr>:<pos:position pos:line="124" pos:column="33"/></case>
        <comment type="block" pos:line="125" pos:column="9">/* resource is lock-null. */</comment>
        <expr_stmt><expr><call><name pos:line="126" pos:column="9">apr_table_addn<pos:position pos:line="126" pos:column="23"/></name><argument_list pos:line="126" pos:column="23">(<argument><expr><name pos:line="126" pos:column="24">methods<pos:position pos:line="126" pos:column="31"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="126" pos:column="33">"MKCOL"<pos:position pos:line="126" pos:column="40"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="126" pos:column="42">""<pos:position pos:line="126" pos:column="44"/></literal></expr></argument>)<pos:position pos:line="126" pos:column="45"/></argument_list></call></expr>;<pos:position pos:line="126" pos:column="46"/></expr_stmt>
        <expr_stmt><expr><call><name pos:line="127" pos:column="9">apr_table_addn<pos:position pos:line="127" pos:column="23"/></name><argument_list pos:line="127" pos:column="23">(<argument><expr><name pos:line="127" pos:column="24">methods<pos:position pos:line="127" pos:column="31"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="127" pos:column="33">"PROPFIND"<pos:position pos:line="127" pos:column="43"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="127" pos:column="45">""<pos:position pos:line="127" pos:column="47"/></literal></expr></argument>)<pos:position pos:line="127" pos:column="48"/></argument_list></call></expr>;<pos:position pos:line="127" pos:column="49"/></expr_stmt>
        <expr_stmt><expr><call><name pos:line="128" pos:column="9">apr_table_addn<pos:position pos:line="128" pos:column="23"/></name><argument_list pos:line="128" pos:column="23">(<argument><expr><name pos:line="128" pos:column="24">methods<pos:position pos:line="128" pos:column="31"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="128" pos:column="33">"PUT"<pos:position pos:line="128" pos:column="38"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="128" pos:column="40">""<pos:position pos:line="128" pos:column="42"/></literal></expr></argument>)<pos:position pos:line="128" pos:column="43"/></argument_list></call></expr>;<pos:position pos:line="128" pos:column="44"/></expr_stmt>

        <if pos:line="130" pos:column="9">if <condition pos:line="130" pos:column="12">(<expr><name pos:line="130" pos:column="13">locks_hooks<pos:position pos:line="130" pos:column="24"/></name> <operator pos:line="130" pos:column="25">!=<pos:position pos:line="130" pos:column="27"/></operator> <name pos:line="130" pos:column="28">NULL<pos:position pos:line="130" pos:column="32"/></name></expr>)<pos:position pos:line="130" pos:column="33"/></condition><then pos:line="130" pos:column="33"> <block pos:line="130" pos:column="34">{
            <expr_stmt><expr><call><name pos:line="131" pos:column="13">apr_table_addn<pos:position pos:line="131" pos:column="27"/></name><argument_list pos:line="131" pos:column="27">(<argument><expr><name pos:line="131" pos:column="28">methods<pos:position pos:line="131" pos:column="35"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="131" pos:column="37">"LOCK"<pos:position pos:line="131" pos:column="43"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="131" pos:column="45">""<pos:position pos:line="131" pos:column="47"/></literal></expr></argument>)<pos:position pos:line="131" pos:column="48"/></argument_list></call></expr>;<pos:position pos:line="131" pos:column="49"/></expr_stmt>
            <expr_stmt><expr><call><name pos:line="132" pos:column="13">apr_table_addn<pos:position pos:line="132" pos:column="27"/></name><argument_list pos:line="132" pos:column="27">(<argument><expr><name pos:line="132" pos:column="28">methods<pos:position pos:line="132" pos:column="35"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="132" pos:column="37">"UNLOCK"<pos:position pos:line="132" pos:column="45"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="132" pos:column="47">""<pos:position pos:line="132" pos:column="49"/></literal></expr></argument>)<pos:position pos:line="132" pos:column="50"/></argument_list></call></expr>;<pos:position pos:line="132" pos:column="51"/></expr_stmt>
        }<pos:position pos:line="133" pos:column="10"/></block></then></if>

        <break pos:line="135" pos:column="9">break;<pos:position pos:line="135" pos:column="15"/></break>

    <case pos:line="137" pos:column="5">case <expr><name pos:line="137" pos:column="10">DAV_RESOURCE_NULL<pos:position pos:line="137" pos:column="27"/></name></expr>:<pos:position pos:line="137" pos:column="28"/></case>
        <comment type="block" pos:line="138" pos:column="9">/* resource is null. */</comment>
        <expr_stmt><expr><call><name pos:line="139" pos:column="9">apr_table_addn<pos:position pos:line="139" pos:column="23"/></name><argument_list pos:line="139" pos:column="23">(<argument><expr><name pos:line="139" pos:column="24">methods<pos:position pos:line="139" pos:column="31"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="139" pos:column="33">"MKCOL"<pos:position pos:line="139" pos:column="40"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="139" pos:column="42">""<pos:position pos:line="139" pos:column="44"/></literal></expr></argument>)<pos:position pos:line="139" pos:column="45"/></argument_list></call></expr>;<pos:position pos:line="139" pos:column="46"/></expr_stmt>
        <expr_stmt><expr><call><name pos:line="140" pos:column="9">apr_table_addn<pos:position pos:line="140" pos:column="23"/></name><argument_list pos:line="140" pos:column="23">(<argument><expr><name pos:line="140" pos:column="24">methods<pos:position pos:line="140" pos:column="31"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="140" pos:column="33">"PUT"<pos:position pos:line="140" pos:column="38"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="140" pos:column="40">""<pos:position pos:line="140" pos:column="42"/></literal></expr></argument>)<pos:position pos:line="140" pos:column="43"/></argument_list></call></expr>;<pos:position pos:line="140" pos:column="44"/></expr_stmt>

        <if pos:line="142" pos:column="9">if <condition pos:line="142" pos:column="12">(<expr><name pos:line="142" pos:column="13">locks_hooks<pos:position pos:line="142" pos:column="24"/></name> <operator pos:line="142" pos:column="25">!=<pos:position pos:line="142" pos:column="27"/></operator> <name pos:line="142" pos:column="28">NULL<pos:position pos:line="142" pos:column="32"/></name></expr>)<pos:position pos:line="142" pos:column="33"/></condition><then pos:line="142" pos:column="33">
            <block type="pseudo"><expr_stmt><expr><call><name pos:line="143" pos:column="13">apr_table_addn<pos:position pos:line="143" pos:column="27"/></name><argument_list pos:line="143" pos:column="27">(<argument><expr><name pos:line="143" pos:column="28">methods<pos:position pos:line="143" pos:column="35"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="143" pos:column="37">"LOCK"<pos:position pos:line="143" pos:column="43"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="143" pos:column="45">""<pos:position pos:line="143" pos:column="47"/></literal></expr></argument>)<pos:position pos:line="143" pos:column="48"/></argument_list></call></expr>;<pos:position pos:line="143" pos:column="49"/></expr_stmt></block></then></if>

        <break pos:line="145" pos:column="9">break;<pos:position pos:line="145" pos:column="15"/></break>

    <default pos:line="147" pos:column="5">default:<pos:position pos:line="147" pos:column="13"/></default>
        <comment type="block" pos:line="148" pos:column="9">/* ### internal error! */</comment>
        <break pos:line="149" pos:column="9">break;<pos:position pos:line="149" pos:column="15"/></break>
    }<pos:position pos:line="150" pos:column="6"/></block></switch>

    <comment type="block" pos:line="152" pos:column="5">/* If there is a versioning provider, add versioning methods */</comment>
    <if pos:line="153" pos:column="5">if <condition pos:line="153" pos:column="8">(<expr><name pos:line="153" pos:column="9">vsn_hooks<pos:position pos:line="153" pos:column="18"/></name> <operator pos:line="153" pos:column="19">!=<pos:position pos:line="153" pos:column="21"/></operator> <name pos:line="153" pos:column="22">NULL<pos:position pos:line="153" pos:column="26"/></name></expr>)<pos:position pos:line="153" pos:column="27"/></condition><then pos:line="153" pos:column="27"> <block pos:line="153" pos:column="28">{
        <if pos:line="154" pos:column="9">if <condition pos:line="154" pos:column="12">(<expr><operator pos:line="154" pos:column="13">!<pos:position pos:line="154" pos:column="14"/></operator><name><name pos:line="154" pos:column="14">resource<pos:position pos:line="154" pos:column="22"/></name><operator pos:line="154" pos:column="22">-&gt;<pos:position pos:line="154" pos:column="27"/></operator><name pos:line="154" pos:column="24">exists<pos:position pos:line="154" pos:column="30"/></name></name></expr>)<pos:position pos:line="154" pos:column="31"/></condition><then pos:line="154" pos:column="31"> <block pos:line="154" pos:column="32">{
            <if pos:line="155" pos:column="13">if <condition pos:line="155" pos:column="16">(<expr><call pos:line="155" pos:column="17">(<modifier pos:line="155" pos:column="18">*<pos:position pos:line="155" pos:column="19"/></modifier><name><name pos:line="155" pos:column="19">vsn_hooks<pos:position pos:line="155" pos:column="28"/></name><operator pos:line="155" pos:column="28">-&gt;<pos:position pos:line="155" pos:column="33"/></operator><name pos:line="155" pos:column="30">versionable<pos:position pos:line="155" pos:column="41"/></name></name>)<argument_list pos:line="155" pos:column="42">(<argument><expr><name pos:line="155" pos:column="43">resource<pos:position pos:line="155" pos:column="51"/></name></expr></argument>)<pos:position pos:line="155" pos:column="52"/></argument_list></call></expr>)<pos:position pos:line="155" pos:column="53"/></condition><then pos:line="155" pos:column="53">
                <block type="pseudo"><expr_stmt><expr><call><name pos:line="156" pos:column="17">apr_table_addn<pos:position pos:line="156" pos:column="31"/></name><argument_list pos:line="156" pos:column="31">(<argument><expr><name pos:line="156" pos:column="32">methods<pos:position pos:line="156" pos:column="39"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="156" pos:column="41">"VERSION-CONTROL"<pos:position pos:line="156" pos:column="58"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="156" pos:column="60">""<pos:position pos:line="156" pos:column="62"/></literal></expr></argument>)<pos:position pos:line="156" pos:column="63"/></argument_list></call></expr>;<pos:position pos:line="156" pos:column="64"/></expr_stmt></block></then></if>

            <if pos:line="158" pos:column="13">if <condition pos:line="158" pos:column="16">(<expr><name><name pos:line="158" pos:column="17">vsn_hooks<pos:position pos:line="158" pos:column="26"/></name><operator pos:line="158" pos:column="26">-&gt;<pos:position pos:line="158" pos:column="31"/></operator><name pos:line="158" pos:column="28">can_be_workspace<pos:position pos:line="158" pos:column="44"/></name></name> <operator pos:line="158" pos:column="45">!=<pos:position pos:line="158" pos:column="47"/></operator> <name pos:line="158" pos:column="48">NULL<pos:position pos:line="158" pos:column="52"/></name>
                <operator pos:line="159" pos:column="17">&amp;&amp;<pos:position pos:line="159" pos:column="27"/></operator> <call pos:line="159" pos:column="20">(<modifier pos:line="159" pos:column="21">*<pos:position pos:line="159" pos:column="22"/></modifier><name><name pos:line="159" pos:column="22">vsn_hooks<pos:position pos:line="159" pos:column="31"/></name><operator pos:line="159" pos:column="31">-&gt;<pos:position pos:line="159" pos:column="36"/></operator><name pos:line="159" pos:column="33">can_be_workspace<pos:position pos:line="159" pos:column="49"/></name></name>)<argument_list pos:line="159" pos:column="50">(<argument><expr><name pos:line="159" pos:column="51">resource<pos:position pos:line="159" pos:column="59"/></name></expr></argument>)<pos:position pos:line="159" pos:column="60"/></argument_list></call></expr>)<pos:position pos:line="159" pos:column="61"/></condition><then pos:line="159" pos:column="61">
                <block type="pseudo"><expr_stmt><expr><call><name pos:line="160" pos:column="17">apr_table_addn<pos:position pos:line="160" pos:column="31"/></name><argument_list pos:line="160" pos:column="31">(<argument><expr><name pos:line="160" pos:column="32">methods<pos:position pos:line="160" pos:column="39"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="160" pos:column="41">"MKWORKSPACE"<pos:position pos:line="160" pos:column="54"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="160" pos:column="56">""<pos:position pos:line="160" pos:column="58"/></literal></expr></argument>)<pos:position pos:line="160" pos:column="59"/></argument_list></call></expr>;<pos:position pos:line="160" pos:column="60"/></expr_stmt></block></then></if>

            <if pos:line="162" pos:column="13">if <condition pos:line="162" pos:column="16">(<expr><name><name pos:line="162" pos:column="17">vsn_hooks<pos:position pos:line="162" pos:column="26"/></name><operator pos:line="162" pos:column="26">-&gt;<pos:position pos:line="162" pos:column="31"/></operator><name pos:line="162" pos:column="28">can_be_activity<pos:position pos:line="162" pos:column="43"/></name></name> <operator pos:line="162" pos:column="44">!=<pos:position pos:line="162" pos:column="46"/></operator> <name pos:line="162" pos:column="47">NULL<pos:position pos:line="162" pos:column="51"/></name>
                <operator pos:line="163" pos:column="17">&amp;&amp;<pos:position pos:line="163" pos:column="27"/></operator> <call pos:line="163" pos:column="20">(<modifier pos:line="163" pos:column="21">*<pos:position pos:line="163" pos:column="22"/></modifier><name><name pos:line="163" pos:column="22">vsn_hooks<pos:position pos:line="163" pos:column="31"/></name><operator pos:line="163" pos:column="31">-&gt;<pos:position pos:line="163" pos:column="36"/></operator><name pos:line="163" pos:column="33">can_be_activity<pos:position pos:line="163" pos:column="48"/></name></name>)<argument_list pos:line="163" pos:column="49">(<argument><expr><name pos:line="163" pos:column="50">resource<pos:position pos:line="163" pos:column="58"/></name></expr></argument>)<pos:position pos:line="163" pos:column="59"/></argument_list></call></expr>)<pos:position pos:line="163" pos:column="60"/></condition><then pos:line="163" pos:column="60">
                <block type="pseudo"><expr_stmt><expr><call><name pos:line="164" pos:column="17">apr_table_addn<pos:position pos:line="164" pos:column="31"/></name><argument_list pos:line="164" pos:column="31">(<argument><expr><name pos:line="164" pos:column="32">methods<pos:position pos:line="164" pos:column="39"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="164" pos:column="41">"MKACTIVITY"<pos:position pos:line="164" pos:column="53"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="164" pos:column="55">""<pos:position pos:line="164" pos:column="57"/></literal></expr></argument>)<pos:position pos:line="164" pos:column="58"/></argument_list></call></expr>;<pos:position pos:line="164" pos:column="59"/></expr_stmt></block></then></if>
        }<pos:position pos:line="165" pos:column="10"/></block></then>
        <elseif pos:line="166" pos:column="9">else <if pos:line="166" pos:column="14">if <condition pos:line="166" pos:column="17">(<expr><operator pos:line="166" pos:column="18">!<pos:position pos:line="166" pos:column="19"/></operator><name><name pos:line="166" pos:column="19">resource<pos:position pos:line="166" pos:column="27"/></name><operator pos:line="166" pos:column="27">-&gt;<pos:position pos:line="166" pos:column="32"/></operator><name pos:line="166" pos:column="29">versioned<pos:position pos:line="166" pos:column="38"/></name></name></expr>)<pos:position pos:line="166" pos:column="39"/></condition><then pos:line="166" pos:column="39"> <block pos:line="166" pos:column="40">{
            <if pos:line="167" pos:column="13">if <condition pos:line="167" pos:column="16">(<expr><call pos:line="167" pos:column="17">(<modifier pos:line="167" pos:column="18">*<pos:position pos:line="167" pos:column="19"/></modifier><name><name pos:line="167" pos:column="19">vsn_hooks<pos:position pos:line="167" pos:column="28"/></name><operator pos:line="167" pos:column="28">-&gt;<pos:position pos:line="167" pos:column="33"/></operator><name pos:line="167" pos:column="30">versionable<pos:position pos:line="167" pos:column="41"/></name></name>)<argument_list pos:line="167" pos:column="42">(<argument><expr><name pos:line="167" pos:column="43">resource<pos:position pos:line="167" pos:column="51"/></name></expr></argument>)<pos:position pos:line="167" pos:column="52"/></argument_list></call></expr>)<pos:position pos:line="167" pos:column="53"/></condition><then pos:line="167" pos:column="53">
                <block type="pseudo"><expr_stmt><expr><call><name pos:line="168" pos:column="17">apr_table_addn<pos:position pos:line="168" pos:column="31"/></name><argument_list pos:line="168" pos:column="31">(<argument><expr><name pos:line="168" pos:column="32">methods<pos:position pos:line="168" pos:column="39"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="168" pos:column="41">"VERSION-CONTROL"<pos:position pos:line="168" pos:column="58"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="168" pos:column="60">""<pos:position pos:line="168" pos:column="62"/></literal></expr></argument>)<pos:position pos:line="168" pos:column="63"/></argument_list></call></expr>;<pos:position pos:line="168" pos:column="64"/></expr_stmt></block></then></if>
        }<pos:position pos:line="169" pos:column="10"/></block></then></if></elseif>
        <elseif pos:line="170" pos:column="9">else <if pos:line="170" pos:column="14">if <condition pos:line="170" pos:column="17">(<expr><name><name pos:line="170" pos:column="18">resource<pos:position pos:line="170" pos:column="26"/></name><operator pos:line="170" pos:column="26">-&gt;<pos:position pos:line="170" pos:column="31"/></operator><name pos:line="170" pos:column="28">working<pos:position pos:line="170" pos:column="35"/></name></name></expr>)<pos:position pos:line="170" pos:column="36"/></condition><then pos:line="170" pos:column="36"> <block pos:line="170" pos:column="37">{
            <expr_stmt><expr><call><name pos:line="171" pos:column="13">apr_table_addn<pos:position pos:line="171" pos:column="27"/></name><argument_list pos:line="171" pos:column="27">(<argument><expr><name pos:line="171" pos:column="28">methods<pos:position pos:line="171" pos:column="35"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="171" pos:column="37">"CHECKIN"<pos:position pos:line="171" pos:column="46"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="171" pos:column="48">""<pos:position pos:line="171" pos:column="50"/></literal></expr></argument>)<pos:position pos:line="171" pos:column="51"/></argument_list></call></expr>;<pos:position pos:line="171" pos:column="52"/></expr_stmt>

            <comment type="block" pos:line="173" pos:column="13">/* ### we might not support this DeltaV option */</comment>
            <expr_stmt><expr><call><name pos:line="174" pos:column="13">apr_table_addn<pos:position pos:line="174" pos:column="27"/></name><argument_list pos:line="174" pos:column="27">(<argument><expr><name pos:line="174" pos:column="28">methods<pos:position pos:line="174" pos:column="35"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="174" pos:column="37">"UNCHECKOUT"<pos:position pos:line="174" pos:column="49"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="174" pos:column="51">""<pos:position pos:line="174" pos:column="53"/></literal></expr></argument>)<pos:position pos:line="174" pos:column="54"/></argument_list></call></expr>;<pos:position pos:line="174" pos:column="55"/></expr_stmt>
        }<pos:position pos:line="175" pos:column="10"/></block></then></if></elseif>
        <elseif pos:line="176" pos:column="9">else <if pos:line="176" pos:column="14">if <condition pos:line="176" pos:column="17">(<expr><name><name pos:line="176" pos:column="18">vsn_hooks<pos:position pos:line="176" pos:column="27"/></name><operator pos:line="176" pos:column="27">-&gt;<pos:position pos:line="176" pos:column="32"/></operator><name pos:line="176" pos:column="29">add_label<pos:position pos:line="176" pos:column="38"/></name></name> <operator pos:line="176" pos:column="39">!=<pos:position pos:line="176" pos:column="41"/></operator> <name pos:line="176" pos:column="42">NULL<pos:position pos:line="176" pos:column="46"/></name></expr>)<pos:position pos:line="176" pos:column="47"/></condition><then pos:line="176" pos:column="47"> <block pos:line="176" pos:column="48">{
            <expr_stmt><expr><call><name pos:line="177" pos:column="13">apr_table_addn<pos:position pos:line="177" pos:column="27"/></name><argument_list pos:line="177" pos:column="27">(<argument><expr><name pos:line="177" pos:column="28">methods<pos:position pos:line="177" pos:column="35"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="177" pos:column="37">"CHECKOUT"<pos:position pos:line="177" pos:column="47"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="177" pos:column="49">""<pos:position pos:line="177" pos:column="51"/></literal></expr></argument>)<pos:position pos:line="177" pos:column="52"/></argument_list></call></expr>;<pos:position pos:line="177" pos:column="53"/></expr_stmt>
            <expr_stmt><expr><call><name pos:line="178" pos:column="13">apr_table_addn<pos:position pos:line="178" pos:column="27"/></name><argument_list pos:line="178" pos:column="27">(<argument><expr><name pos:line="178" pos:column="28">methods<pos:position pos:line="178" pos:column="35"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="178" pos:column="37">"LABEL"<pos:position pos:line="178" pos:column="44"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="178" pos:column="46">""<pos:position pos:line="178" pos:column="48"/></literal></expr></argument>)<pos:position pos:line="178" pos:column="49"/></argument_list></call></expr>;<pos:position pos:line="178" pos:column="50"/></expr_stmt>
        }<pos:position pos:line="179" pos:column="10"/></block></then></if></elseif>
        <else pos:line="180" pos:column="9">else <block pos:line="180" pos:column="14">{
            <expr_stmt><expr><call><name pos:line="181" pos:column="13">apr_table_addn<pos:position pos:line="181" pos:column="27"/></name><argument_list pos:line="181" pos:column="27">(<argument><expr><name pos:line="181" pos:column="28">methods<pos:position pos:line="181" pos:column="35"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="181" pos:column="37">"CHECKOUT"<pos:position pos:line="181" pos:column="47"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="181" pos:column="49">""<pos:position pos:line="181" pos:column="51"/></literal></expr></argument>)<pos:position pos:line="181" pos:column="52"/></argument_list></call></expr>;<pos:position pos:line="181" pos:column="53"/></expr_stmt>
        }<pos:position pos:line="182" pos:column="10"/></block></else></if>
    }<pos:position pos:line="183" pos:column="6"/></block></then></if>

    <comment type="block" pos:line="185" pos:column="5">/* If there is a bindings provider, see if resource is bindable */</comment>
    <if pos:line="186" pos:column="5">if <condition pos:line="186" pos:column="8">(<expr><name pos:line="186" pos:column="9">binding_hooks<pos:position pos:line="186" pos:column="22"/></name> <operator pos:line="186" pos:column="23">!=<pos:position pos:line="186" pos:column="25"/></operator> <name pos:line="186" pos:column="26">NULL<pos:position pos:line="186" pos:column="30"/></name>
        <operator pos:line="187" pos:column="9">&amp;&amp;<pos:position pos:line="187" pos:column="19"/></operator> <call pos:line="187" pos:column="12">(<modifier pos:line="187" pos:column="13">*<pos:position pos:line="187" pos:column="14"/></modifier><name><name pos:line="187" pos:column="14">binding_hooks<pos:position pos:line="187" pos:column="27"/></name><operator pos:line="187" pos:column="27">-&gt;<pos:position pos:line="187" pos:column="32"/></operator><name pos:line="187" pos:column="29">is_bindable<pos:position pos:line="187" pos:column="40"/></name></name>)<argument_list pos:line="187" pos:column="41">(<argument><expr><name pos:line="187" pos:column="42">resource<pos:position pos:line="187" pos:column="50"/></name></expr></argument>)<pos:position pos:line="187" pos:column="51"/></argument_list></call></expr>)<pos:position pos:line="187" pos:column="52"/></condition><then pos:line="187" pos:column="52"> <block pos:line="187" pos:column="53">{
        <expr_stmt><expr><call><name pos:line="188" pos:column="9">apr_table_addn<pos:position pos:line="188" pos:column="23"/></name><argument_list pos:line="188" pos:column="23">(<argument><expr><name pos:line="188" pos:column="24">methods<pos:position pos:line="188" pos:column="31"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="188" pos:column="33">"BIND"<pos:position pos:line="188" pos:column="39"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="188" pos:column="41">""<pos:position pos:line="188" pos:column="43"/></literal></expr></argument>)<pos:position pos:line="188" pos:column="44"/></argument_list></call></expr>;<pos:position pos:line="188" pos:column="45"/></expr_stmt>
    }<pos:position pos:line="189" pos:column="6"/></block></then></if>

    <comment type="block" pos:line="191" pos:column="5">/* If there is a search provider, set SEARCH in option */</comment>
    <if pos:line="192" pos:column="5">if <condition pos:line="192" pos:column="8">(<expr><name pos:line="192" pos:column="9">search_hooks<pos:position pos:line="192" pos:column="21"/></name> <operator pos:line="192" pos:column="22">!=<pos:position pos:line="192" pos:column="24"/></operator> <name pos:line="192" pos:column="25">NULL<pos:position pos:line="192" pos:column="29"/></name></expr>)<pos:position pos:line="192" pos:column="30"/></condition><then pos:line="192" pos:column="30"> <block pos:line="192" pos:column="31">{
        <expr_stmt><expr><call><name pos:line="193" pos:column="9">apr_table_addn<pos:position pos:line="193" pos:column="23"/></name><argument_list pos:line="193" pos:column="23">(<argument><expr><name pos:line="193" pos:column="24">methods<pos:position pos:line="193" pos:column="31"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="193" pos:column="33">"SEARCH"<pos:position pos:line="193" pos:column="41"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="193" pos:column="43">""<pos:position pos:line="193" pos:column="45"/></literal></expr></argument>)<pos:position pos:line="193" pos:column="46"/></argument_list></call></expr>;<pos:position pos:line="193" pos:column="47"/></expr_stmt>
    }<pos:position pos:line="194" pos:column="6"/></block></then></if>

    <comment type="block" pos:line="196" pos:column="5">/* Generate the Allow header */</comment>
    <expr_stmt><expr><name pos:line="197" pos:column="5">arr<pos:position pos:line="197" pos:column="8"/></name> <operator pos:line="197" pos:column="9">=<pos:position pos:line="197" pos:column="10"/></operator> <call><name pos:line="197" pos:column="11">apr_table_elts<pos:position pos:line="197" pos:column="25"/></name><argument_list pos:line="197" pos:column="25">(<argument><expr><name pos:line="197" pos:column="26">methods<pos:position pos:line="197" pos:column="33"/></name></expr></argument>)<pos:position pos:line="197" pos:column="34"/></argument_list></call></expr>;<pos:position pos:line="197" pos:column="35"/></expr_stmt>
    <expr_stmt><expr><name pos:line="198" pos:column="5">elts<pos:position pos:line="198" pos:column="9"/></name> <operator pos:line="198" pos:column="10">=<pos:position pos:line="198" pos:column="11"/></operator> <operator pos:line="198" pos:column="12">(<pos:position pos:line="198" pos:column="13"/></operator><specifier pos:line="198" pos:column="13">const<pos:position pos:line="198" pos:column="18"/></specifier> <name pos:line="198" pos:column="19">apr_table_entry_t<pos:position pos:line="198" pos:column="36"/></name> <operator pos:line="198" pos:column="37">*<pos:position pos:line="198" pos:column="38"/></operator><operator pos:line="198" pos:column="38">)<pos:position pos:line="198" pos:column="39"/></operator><name><name pos:line="198" pos:column="39">arr<pos:position pos:line="198" pos:column="42"/></name><operator pos:line="198" pos:column="42">-&gt;<pos:position pos:line="198" pos:column="47"/></operator><name pos:line="198" pos:column="44">elts<pos:position pos:line="198" pos:column="48"/></name></name></expr>;<pos:position pos:line="198" pos:column="49"/></expr_stmt>
    <expr_stmt><expr><name pos:line="199" pos:column="5">text_size<pos:position pos:line="199" pos:column="14"/></name> <operator pos:line="199" pos:column="15">=<pos:position pos:line="199" pos:column="16"/></operator> <literal type="number" pos:line="199" pos:column="17">0<pos:position pos:line="199" pos:column="18"/></literal></expr>;<pos:position pos:line="199" pos:column="19"/></expr_stmt>

    <comment type="block" pos:line="201" pos:column="5">/* first, compute total length */</comment>
    <for pos:line="202" pos:column="5">for <control pos:line="202" pos:column="9">(<init><expr><name pos:line="202" pos:column="10">i<pos:position pos:line="202" pos:column="11"/></name> <operator pos:line="202" pos:column="12">=<pos:position pos:line="202" pos:column="13"/></operator> <literal type="number" pos:line="202" pos:column="14">0<pos:position pos:line="202" pos:column="15"/></literal></expr>;<pos:position pos:line="202" pos:column="16"/></init> <condition><expr><name pos:line="202" pos:column="17">i<pos:position pos:line="202" pos:column="18"/></name> <operator pos:line="202" pos:column="19">&lt;<pos:position pos:line="202" pos:column="23"/></operator> <name><name pos:line="202" pos:column="21">arr<pos:position pos:line="202" pos:column="24"/></name><operator pos:line="202" pos:column="24">-&gt;<pos:position pos:line="202" pos:column="29"/></operator><name pos:line="202" pos:column="26">nelts<pos:position pos:line="202" pos:column="31"/></name></name></expr>;<pos:position pos:line="202" pos:column="32"/></condition> <incr><expr><operator pos:line="202" pos:column="33">++<pos:position pos:line="202" pos:column="35"/></operator><name pos:line="202" pos:column="35">i<pos:position pos:line="202" pos:column="36"/></name></expr></incr>)<pos:position pos:line="202" pos:column="37"/></control> <block pos:line="202" pos:column="38">{
        <if pos:line="203" pos:column="9">if <condition pos:line="203" pos:column="12">(<expr><name><name pos:line="203" pos:column="13">elts<pos:position pos:line="203" pos:column="17"/></name><index pos:line="203" pos:column="17">[<expr><name pos:line="203" pos:column="18">i<pos:position pos:line="203" pos:column="19"/></name></expr>]<pos:position pos:line="203" pos:column="20"/></index></name><operator pos:line="203" pos:column="20">.<pos:position pos:line="203" pos:column="21"/></operator><name pos:line="203" pos:column="21">key<pos:position pos:line="203" pos:column="24"/></name> <operator pos:line="203" pos:column="25">==<pos:position pos:line="203" pos:column="27"/></operator> <name pos:line="203" pos:column="28">NULL<pos:position pos:line="203" pos:column="32"/></name></expr>)<pos:position pos:line="203" pos:column="33"/></condition><then pos:line="203" pos:column="33">
            <block type="pseudo"><continue pos:line="204" pos:column="13">continue;<pos:position pos:line="204" pos:column="22"/></continue></block></then></if>

        <comment type="block" pos:line="206" pos:column="9">/* add 1 for comma or null */</comment>
        <expr_stmt><expr><name pos:line="207" pos:column="9">text_size<pos:position pos:line="207" pos:column="18"/></name> <operator pos:line="207" pos:column="19">+=<pos:position pos:line="207" pos:column="21"/></operator> <call><name pos:line="207" pos:column="22">strlen<pos:position pos:line="207" pos:column="28"/></name><argument_list pos:line="207" pos:column="28">(<argument><expr><name><name pos:line="207" pos:column="29">elts<pos:position pos:line="207" pos:column="33"/></name><index pos:line="207" pos:column="33">[<expr><name pos:line="207" pos:column="34">i<pos:position pos:line="207" pos:column="35"/></name></expr>]<pos:position pos:line="207" pos:column="36"/></index></name><operator pos:line="207" pos:column="36">.<pos:position pos:line="207" pos:column="37"/></operator><name pos:line="207" pos:column="37">key<pos:position pos:line="207" pos:column="40"/></name></expr></argument>)<pos:position pos:line="207" pos:column="41"/></argument_list></call> <operator pos:line="207" pos:column="42">+<pos:position pos:line="207" pos:column="43"/></operator> <literal type="number" pos:line="207" pos:column="44">1<pos:position pos:line="207" pos:column="45"/></literal></expr>;<pos:position pos:line="207" pos:column="46"/></expr_stmt>
    }<pos:position pos:line="208" pos:column="6"/></block></for>

    <expr_stmt><expr><name pos:line="210" pos:column="5">s<pos:position pos:line="210" pos:column="6"/></name> <operator pos:line="210" pos:column="7">=<pos:position pos:line="210" pos:column="8"/></operator> <name pos:line="210" pos:column="9">allow<pos:position pos:line="210" pos:column="14"/></name> <operator pos:line="210" pos:column="15">=<pos:position pos:line="210" pos:column="16"/></operator> <call><name pos:line="210" pos:column="17">apr_palloc<pos:position pos:line="210" pos:column="27"/></name><argument_list pos:line="210" pos:column="27">(<argument><expr><name><name pos:line="210" pos:column="28">r<pos:position pos:line="210" pos:column="29"/></name><operator pos:line="210" pos:column="29">-&gt;<pos:position pos:line="210" pos:column="34"/></operator><name pos:line="210" pos:column="31">pool<pos:position pos:line="210" pos:column="35"/></name></name></expr></argument>, <argument><expr><name pos:line="210" pos:column="37">text_size<pos:position pos:line="210" pos:column="46"/></name></expr></argument>)<pos:position pos:line="210" pos:column="47"/></argument_list></call></expr>;<pos:position pos:line="210" pos:column="48"/></expr_stmt>

    <for pos:line="212" pos:column="5">for <control pos:line="212" pos:column="9">(<init><expr><name pos:line="212" pos:column="10">i<pos:position pos:line="212" pos:column="11"/></name> <operator pos:line="212" pos:column="12">=<pos:position pos:line="212" pos:column="13"/></operator> <literal type="number" pos:line="212" pos:column="14">0<pos:position pos:line="212" pos:column="15"/></literal></expr>;<pos:position pos:line="212" pos:column="16"/></init> <condition><expr><name pos:line="212" pos:column="17">i<pos:position pos:line="212" pos:column="18"/></name> <operator pos:line="212" pos:column="19">&lt;<pos:position pos:line="212" pos:column="23"/></operator> <name><name pos:line="212" pos:column="21">arr<pos:position pos:line="212" pos:column="24"/></name><operator pos:line="212" pos:column="24">-&gt;<pos:position pos:line="212" pos:column="29"/></operator><name pos:line="212" pos:column="26">nelts<pos:position pos:line="212" pos:column="31"/></name></name></expr>;<pos:position pos:line="212" pos:column="32"/></condition> <incr><expr><operator pos:line="212" pos:column="33">++<pos:position pos:line="212" pos:column="35"/></operator><name pos:line="212" pos:column="35">i<pos:position pos:line="212" pos:column="36"/></name></expr></incr>)<pos:position pos:line="212" pos:column="37"/></control> <block pos:line="212" pos:column="38">{
        <if pos:line="213" pos:column="9">if <condition pos:line="213" pos:column="12">(<expr><name><name pos:line="213" pos:column="13">elts<pos:position pos:line="213" pos:column="17"/></name><index pos:line="213" pos:column="17">[<expr><name pos:line="213" pos:column="18">i<pos:position pos:line="213" pos:column="19"/></name></expr>]<pos:position pos:line="213" pos:column="20"/></index></name><operator pos:line="213" pos:column="20">.<pos:position pos:line="213" pos:column="21"/></operator><name pos:line="213" pos:column="21">key<pos:position pos:line="213" pos:column="24"/></name> <operator pos:line="213" pos:column="25">==<pos:position pos:line="213" pos:column="27"/></operator> <name pos:line="213" pos:column="28">NULL<pos:position pos:line="213" pos:column="32"/></name></expr>)<pos:position pos:line="213" pos:column="33"/></condition><then pos:line="213" pos:column="33">
            <block type="pseudo"><continue pos:line="214" pos:column="13">continue;<pos:position pos:line="214" pos:column="22"/></continue></block></then></if>

        <if pos:line="216" pos:column="9">if <condition pos:line="216" pos:column="12">(<expr><name pos:line="216" pos:column="13">s<pos:position pos:line="216" pos:column="14"/></name> <operator pos:line="216" pos:column="15">!=<pos:position pos:line="216" pos:column="17"/></operator> <name pos:line="216" pos:column="18">allow<pos:position pos:line="216" pos:column="23"/></name></expr>)<pos:position pos:line="216" pos:column="24"/></condition><then pos:line="216" pos:column="24">
            <block type="pseudo"><expr_stmt><expr><operator pos:line="217" pos:column="13">*<pos:position pos:line="217" pos:column="14"/></operator><name pos:line="217" pos:column="14">s<pos:position pos:line="217" pos:column="15"/></name><operator pos:line="217" pos:column="15">++<pos:position pos:line="217" pos:column="17"/></operator> <operator pos:line="217" pos:column="18">=<pos:position pos:line="217" pos:column="19"/></operator> <literal type="char" pos:line="217" pos:column="20">','<pos:position pos:line="217" pos:column="23"/></literal></expr>;<pos:position pos:line="217" pos:column="24"/></expr_stmt></block></then></if>

        <expr_stmt><expr><call><name pos:line="219" pos:column="9">strcpy<pos:position pos:line="219" pos:column="15"/></name><argument_list pos:line="219" pos:column="15">(<argument><expr><name pos:line="219" pos:column="16">s<pos:position pos:line="219" pos:column="17"/></name></expr></argument>, <argument><expr><name><name pos:line="219" pos:column="19">elts<pos:position pos:line="219" pos:column="23"/></name><index pos:line="219" pos:column="23">[<expr><name pos:line="219" pos:column="24">i<pos:position pos:line="219" pos:column="25"/></name></expr>]<pos:position pos:line="219" pos:column="26"/></index></name><operator pos:line="219" pos:column="26">.<pos:position pos:line="219" pos:column="27"/></operator><name pos:line="219" pos:column="27">key<pos:position pos:line="219" pos:column="30"/></name></expr></argument>)<pos:position pos:line="219" pos:column="31"/></argument_list></call></expr>;<pos:position pos:line="219" pos:column="32"/></expr_stmt>
        <expr_stmt><expr><name pos:line="220" pos:column="9">s<pos:position pos:line="220" pos:column="10"/></name> <operator pos:line="220" pos:column="11">+=<pos:position pos:line="220" pos:column="13"/></operator> <call><name pos:line="220" pos:column="14">strlen<pos:position pos:line="220" pos:column="20"/></name><argument_list pos:line="220" pos:column="20">(<argument><expr><name pos:line="220" pos:column="21">s<pos:position pos:line="220" pos:column="22"/></name></expr></argument>)<pos:position pos:line="220" pos:column="23"/></argument_list></call></expr>;<pos:position pos:line="220" pos:column="24"/></expr_stmt>
    }<pos:position pos:line="221" pos:column="6"/></block></for>

    <expr_stmt><expr><call><name pos:line="223" pos:column="5">apr_table_setn<pos:position pos:line="223" pos:column="19"/></name><argument_list pos:line="223" pos:column="19">(<argument><expr><name><name pos:line="223" pos:column="20">r<pos:position pos:line="223" pos:column="21"/></name><operator pos:line="223" pos:column="21">-&gt;<pos:position pos:line="223" pos:column="26"/></operator><name pos:line="223" pos:column="23">headers_out<pos:position pos:line="223" pos:column="34"/></name></name></expr></argument>, <argument><expr><literal type="string" pos:line="223" pos:column="36">"Allow"<pos:position pos:line="223" pos:column="43"/></literal></expr></argument>, <argument><expr><name pos:line="223" pos:column="45">allow<pos:position pos:line="223" pos:column="50"/></name></expr></argument>)<pos:position pos:line="223" pos:column="51"/></argument_list></call></expr>;<pos:position pos:line="223" pos:column="52"/></expr_stmt>


    <comment type="block" pos:line="226" pos:column="5">/* If there is search set_option_head function, set head */</comment>
    <comment type="block" pos:line="227" pos:column="5">/* DASL: &lt;DAV:basicsearch&gt;
     * DASL: &lt;http://foo.bar.com/syntax1&gt;
     * DASL: &lt;http://akuma.com/syntax2&gt;
     */</comment>
    <if pos:line="231" pos:column="5">if <condition pos:line="231" pos:column="8">(<expr><name pos:line="231" pos:column="9">search_hooks<pos:position pos:line="231" pos:column="21"/></name> <operator pos:line="231" pos:column="22">!=<pos:position pos:line="231" pos:column="24"/></operator> <name pos:line="231" pos:column="25">NULL<pos:position pos:line="231" pos:column="29"/></name>
        <operator pos:line="232" pos:column="9">&amp;&amp;<pos:position pos:line="232" pos:column="19"/></operator> <operator pos:line="232" pos:column="12">*<pos:position pos:line="232" pos:column="13"/></operator><name><name pos:line="232" pos:column="13">search_hooks<pos:position pos:line="232" pos:column="25"/></name><operator pos:line="232" pos:column="25">-&gt;<pos:position pos:line="232" pos:column="30"/></operator><name pos:line="232" pos:column="27">set_option_head<pos:position pos:line="232" pos:column="42"/></name></name> <operator pos:line="232" pos:column="43">!=<pos:position pos:line="232" pos:column="45"/></operator> <name pos:line="232" pos:column="46">NULL<pos:position pos:line="232" pos:column="50"/></name></expr>)<pos:position pos:line="232" pos:column="51"/></condition><then pos:line="232" pos:column="51"> <block pos:line="232" pos:column="52">{
        <if pos:line="233" pos:column="9">if <condition pos:line="233" pos:column="12">(<expr><operator pos:line="233" pos:column="13">(<pos:position pos:line="233" pos:column="14"/></operator><name pos:line="233" pos:column="14">err<pos:position pos:line="233" pos:column="17"/></name> <operator pos:line="233" pos:column="18">=<pos:position pos:line="233" pos:column="19"/></operator> <call pos:line="233" pos:column="20">(<modifier pos:line="233" pos:column="21">*<pos:position pos:line="233" pos:column="22"/></modifier><name><name pos:line="233" pos:column="22">search_hooks<pos:position pos:line="233" pos:column="34"/></name><operator pos:line="233" pos:column="34">-&gt;<pos:position pos:line="233" pos:column="39"/></operator><name pos:line="233" pos:column="36">set_option_head<pos:position pos:line="233" pos:column="51"/></name></name>)<argument_list pos:line="233" pos:column="52">(<argument><expr><name pos:line="233" pos:column="53">r<pos:position pos:line="233" pos:column="54"/></name></expr></argument>)<pos:position pos:line="233" pos:column="55"/></argument_list></call><operator pos:line="233" pos:column="55">)<pos:position pos:line="233" pos:column="56"/></operator> <operator pos:line="233" pos:column="57">!=<pos:position pos:line="233" pos:column="59"/></operator> <name pos:line="233" pos:column="60">NULL<pos:position pos:line="233" pos:column="64"/></name></expr>)<pos:position pos:line="233" pos:column="65"/></condition><then pos:line="233" pos:column="65"> <block pos:line="233" pos:column="66">{
            <return pos:line="234" pos:column="13">return <expr><call><name pos:line="234" pos:column="20">dav_handle_err<pos:position pos:line="234" pos:column="34"/></name><argument_list pos:line="234" pos:column="34">(<argument><expr><name pos:line="234" pos:column="35">r<pos:position pos:line="234" pos:column="36"/></name></expr></argument>, <argument><expr><name pos:line="234" pos:column="38">err<pos:position pos:line="234" pos:column="41"/></name></expr></argument>, <argument><expr><name pos:line="234" pos:column="43">NULL<pos:position pos:line="234" pos:column="47"/></name></expr></argument>)<pos:position pos:line="234" pos:column="48"/></argument_list></call></expr>;<pos:position pos:line="234" pos:column="49"/></return>
        }<pos:position pos:line="235" pos:column="10"/></block></then></if>
    }<pos:position pos:line="236" pos:column="6"/></block></then></if>

    <comment type="block" pos:line="238" pos:column="5">/* if there was no request body, then there is no response body */</comment>
    <if pos:line="239" pos:column="5">if <condition pos:line="239" pos:column="8">(<expr><name pos:line="239" pos:column="9">doc<pos:position pos:line="239" pos:column="12"/></name> <operator pos:line="239" pos:column="13">==<pos:position pos:line="239" pos:column="15"/></operator> <name pos:line="239" pos:column="16">NULL<pos:position pos:line="239" pos:column="20"/></name></expr>)<pos:position pos:line="239" pos:column="21"/></condition><then pos:line="239" pos:column="21"> <block pos:line="239" pos:column="22">{
        <expr_stmt><expr><call><name pos:line="240" pos:column="9">ap_set_content_length<pos:position pos:line="240" pos:column="30"/></name><argument_list pos:line="240" pos:column="30">(<argument><expr><name pos:line="240" pos:column="31">r<pos:position pos:line="240" pos:column="32"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="240" pos:column="34">0<pos:position pos:line="240" pos:column="35"/></literal></expr></argument>)<pos:position pos:line="240" pos:column="36"/></argument_list></call></expr>;<pos:position pos:line="240" pos:column="37"/></expr_stmt>

        <comment type="block" pos:line="242" pos:column="9">/* ### this sends a Content-Type. the default OPTIONS does not. */</comment>

        <comment type="block" pos:line="244" pos:column="9">/* ### the default (ap_send_http_options) returns OK, but I believe
         * ### that is because it is the default handler and nothing else
         * ### will run after the thing. */</comment>
        <return pos:line="247" pos:column="9">return <expr><name pos:line="247" pos:column="16">DONE<pos:position pos:line="247" pos:column="20"/></name></expr>;<pos:position pos:line="247" pos:column="21"/></return>
    }<pos:position pos:line="248" pos:column="6"/></block></then></if>

    <comment type="block" pos:line="250" pos:column="5">/* handle each options request */</comment>
    <for pos:line="251" pos:column="5">for <control pos:line="251" pos:column="9">(<init><expr><name pos:line="251" pos:column="10">elem<pos:position pos:line="251" pos:column="14"/></name> <operator pos:line="251" pos:column="15">=<pos:position pos:line="251" pos:column="16"/></operator> <name><name pos:line="251" pos:column="17">doc<pos:position pos:line="251" pos:column="20"/></name><operator pos:line="251" pos:column="20">-&gt;<pos:position pos:line="251" pos:column="25"/></operator><name pos:line="251" pos:column="22">root<pos:position pos:line="251" pos:column="26"/></name><operator pos:line="251" pos:column="26">-&gt;<pos:position pos:line="251" pos:column="31"/></operator><name pos:line="251" pos:column="28">first_child<pos:position pos:line="251" pos:column="39"/></name></name></expr>;<pos:position pos:line="251" pos:column="40"/></init> <condition><expr><name pos:line="251" pos:column="41">elem<pos:position pos:line="251" pos:column="45"/></name> <operator pos:line="251" pos:column="46">!=<pos:position pos:line="251" pos:column="48"/></operator> <name pos:line="251" pos:column="49">NULL<pos:position pos:line="251" pos:column="53"/></name></expr>;<pos:position pos:line="251" pos:column="54"/></condition> <incr><expr><name pos:line="251" pos:column="55">elem<pos:position pos:line="251" pos:column="59"/></name> <operator pos:line="251" pos:column="60">=<pos:position pos:line="251" pos:column="61"/></operator> <name><name pos:line="251" pos:column="62">elem<pos:position pos:line="251" pos:column="66"/></name><operator pos:line="251" pos:column="66">-&gt;<pos:position pos:line="251" pos:column="71"/></operator><name pos:line="251" pos:column="68">next<pos:position pos:line="251" pos:column="72"/></name></name></expr></incr>)<pos:position pos:line="251" pos:column="73"/></control> <block pos:line="251" pos:column="74">{
        <comment type="block" pos:line="252" pos:column="9">/* check for something we recognize first */</comment>
        <decl_stmt><decl><type><name pos:line="253" pos:column="9">int<pos:position pos:line="253" pos:column="12"/></name></type> <name pos:line="253" pos:column="13">core_option<pos:position pos:line="253" pos:column="24"/></name> <init pos:line="253" pos:column="25">= <expr><literal type="number" pos:line="253" pos:column="27">0<pos:position pos:line="253" pos:column="28"/></literal></expr></init></decl>;<pos:position pos:line="253" pos:column="29"/></decl_stmt>
        <decl_stmt><decl><type><name pos:line="254" pos:column="9">dav_error<pos:position pos:line="254" pos:column="18"/></name> <modifier pos:line="254" pos:column="19">*<pos:position pos:line="254" pos:column="20"/></modifier></type><name pos:line="254" pos:column="20">err<pos:position pos:line="254" pos:column="23"/></name> <init pos:line="254" pos:column="24">= <expr><name pos:line="254" pos:column="26">NULL<pos:position pos:line="254" pos:column="30"/></name></expr></init></decl>;<pos:position pos:line="254" pos:column="31"/></decl_stmt>

        <if pos:line="256" pos:column="9">if <condition pos:line="256" pos:column="12">(<expr><name><name pos:line="256" pos:column="13">elem<pos:position pos:line="256" pos:column="17"/></name><operator pos:line="256" pos:column="17">-&gt;<pos:position pos:line="256" pos:column="22"/></operator><name pos:line="256" pos:column="19">ns<pos:position pos:line="256" pos:column="21"/></name></name> <operator pos:line="256" pos:column="22">==<pos:position pos:line="256" pos:column="24"/></operator> <name pos:line="256" pos:column="25">APR_XML_NS_DAV_ID<pos:position pos:line="256" pos:column="42"/></name></expr>)<pos:position pos:line="256" pos:column="43"/></condition><then pos:line="256" pos:column="43"> <block pos:line="256" pos:column="44">{
            <if pos:line="257" pos:column="13">if <condition pos:line="257" pos:column="16">(<expr><call><name pos:line="257" pos:column="17">strcmp<pos:position pos:line="257" pos:column="23"/></name><argument_list pos:line="257" pos:column="23">(<argument><expr><name><name pos:line="257" pos:column="24">elem<pos:position pos:line="257" pos:column="28"/></name><operator pos:line="257" pos:column="28">-&gt;<pos:position pos:line="257" pos:column="33"/></operator><name pos:line="257" pos:column="30">name<pos:position pos:line="257" pos:column="34"/></name></name></expr></argument>, <argument><expr><literal type="string" pos:line="257" pos:column="36">"supported-method-set"<pos:position pos:line="257" pos:column="58"/></literal></expr></argument>)<pos:position pos:line="257" pos:column="59"/></argument_list></call> <operator pos:line="257" pos:column="60">==<pos:position pos:line="257" pos:column="62"/></operator> <literal type="number" pos:line="257" pos:column="63">0<pos:position pos:line="257" pos:column="64"/></literal></expr>)<pos:position pos:line="257" pos:column="65"/></condition><then pos:line="257" pos:column="65"> <block pos:line="257" pos:column="66">{
                <expr_stmt><expr><name pos:line="258" pos:column="17">err<pos:position pos:line="258" pos:column="20"/></name> <operator pos:line="258" pos:column="21">=<pos:position pos:line="258" pos:column="22"/></operator> <call><name pos:line="258" pos:column="23">dav_gen_supported_methods<pos:position pos:line="258" pos:column="48"/></name><argument_list pos:line="258" pos:column="48">(<argument><expr><name pos:line="258" pos:column="49">r<pos:position pos:line="258" pos:column="50"/></name></expr></argument>, <argument><expr><name pos:line="258" pos:column="52">elem<pos:position pos:line="258" pos:column="56"/></name></expr></argument>, <argument><expr><name pos:line="258" pos:column="58">methods<pos:position pos:line="258" pos:column="65"/></name></expr></argument>, <argument><expr><operator pos:line="258" pos:column="67">&amp;<pos:position pos:line="258" pos:column="72"/></operator><name pos:line="258" pos:column="68">body<pos:position pos:line="258" pos:column="72"/></name></expr></argument>)<pos:position pos:line="258" pos:column="73"/></argument_list></call></expr>;<pos:position pos:line="258" pos:column="74"/></expr_stmt>
                <expr_stmt><expr><name pos:line="259" pos:column="17">core_option<pos:position pos:line="259" pos:column="28"/></name> <operator pos:line="259" pos:column="29">=<pos:position pos:line="259" pos:column="30"/></operator> <literal type="number" pos:line="259" pos:column="31">1<pos:position pos:line="259" pos:column="32"/></literal></expr>;<pos:position pos:line="259" pos:column="33"/></expr_stmt>
            }<pos:position pos:line="260" pos:column="14"/></block></then>
            <elseif pos:line="261" pos:column="13">else <if pos:line="261" pos:column="18">if <condition pos:line="261" pos:column="21">(<expr><call><name pos:line="261" pos:column="22">strcmp<pos:position pos:line="261" pos:column="28"/></name><argument_list pos:line="261" pos:column="28">(<argument><expr><name><name pos:line="261" pos:column="29">elem<pos:position pos:line="261" pos:column="33"/></name><operator pos:line="261" pos:column="33">-&gt;<pos:position pos:line="261" pos:column="38"/></operator><name pos:line="261" pos:column="35">name<pos:position pos:line="261" pos:column="39"/></name></name></expr></argument>, <argument><expr><literal type="string" pos:line="261" pos:column="41">"supported-live-property-set"<pos:position pos:line="261" pos:column="70"/></literal></expr></argument>)<pos:position pos:line="261" pos:column="71"/></argument_list></call> <operator pos:line="261" pos:column="72">==<pos:position pos:line="261" pos:column="74"/></operator> <literal type="number" pos:line="261" pos:column="75">0<pos:position pos:line="261" pos:column="76"/></literal></expr>)<pos:position pos:line="261" pos:column="77"/></condition><then pos:line="261" pos:column="77"> <block pos:line="261" pos:column="78">{
                <expr_stmt><expr><name pos:line="262" pos:column="17">err<pos:position pos:line="262" pos:column="20"/></name> <operator pos:line="262" pos:column="21">=<pos:position pos:line="262" pos:column="22"/></operator> <call><name pos:line="262" pos:column="23">dav_gen_supported_live_props<pos:position pos:line="262" pos:column="51"/></name><argument_list pos:line="262" pos:column="51">(<argument><expr><name pos:line="262" pos:column="52">r<pos:position pos:line="262" pos:column="53"/></name></expr></argument>, <argument><expr><name pos:line="262" pos:column="55">resource<pos:position pos:line="262" pos:column="63"/></name></expr></argument>, <argument><expr><name pos:line="262" pos:column="65">elem<pos:position pos:line="262" pos:column="69"/></name></expr></argument>, <argument><expr><operator pos:line="262" pos:column="71">&amp;<pos:position pos:line="262" pos:column="76"/></operator><name pos:line="262" pos:column="72">body<pos:position pos:line="262" pos:column="76"/></name></expr></argument>)<pos:position pos:line="262" pos:column="77"/></argument_list></call></expr>;<pos:position pos:line="262" pos:column="78"/></expr_stmt>
                <expr_stmt><expr><name pos:line="263" pos:column="17">core_option<pos:position pos:line="263" pos:column="28"/></name> <operator pos:line="263" pos:column="29">=<pos:position pos:line="263" pos:column="30"/></operator> <literal type="number" pos:line="263" pos:column="31">1<pos:position pos:line="263" pos:column="32"/></literal></expr>;<pos:position pos:line="263" pos:column="33"/></expr_stmt>
            }<pos:position pos:line="264" pos:column="14"/></block></then></if></elseif>
            <elseif pos:line="265" pos:column="13">else <if pos:line="265" pos:column="18">if <condition pos:line="265" pos:column="21">(<expr><call><name pos:line="265" pos:column="22">strcmp<pos:position pos:line="265" pos:column="28"/></name><argument_list pos:line="265" pos:column="28">(<argument><expr><name><name pos:line="265" pos:column="29">elem<pos:position pos:line="265" pos:column="33"/></name><operator pos:line="265" pos:column="33">-&gt;<pos:position pos:line="265" pos:column="38"/></operator><name pos:line="265" pos:column="35">name<pos:position pos:line="265" pos:column="39"/></name></name></expr></argument>, <argument><expr><literal type="string" pos:line="265" pos:column="41">"supported-report-set"<pos:position pos:line="265" pos:column="63"/></literal></expr></argument>)<pos:position pos:line="265" pos:column="64"/></argument_list></call> <operator pos:line="265" pos:column="65">==<pos:position pos:line="265" pos:column="67"/></operator> <literal type="number" pos:line="265" pos:column="68">0<pos:position pos:line="265" pos:column="69"/></literal></expr>)<pos:position pos:line="265" pos:column="70"/></condition><then pos:line="265" pos:column="70"> <block pos:line="265" pos:column="71">{
                <expr_stmt><expr><name pos:line="266" pos:column="17">err<pos:position pos:line="266" pos:column="20"/></name> <operator pos:line="266" pos:column="21">=<pos:position pos:line="266" pos:column="22"/></operator> <call><name pos:line="266" pos:column="23">dav_gen_supported_reports<pos:position pos:line="266" pos:column="48"/></name><argument_list pos:line="266" pos:column="48">(<argument><expr><name pos:line="266" pos:column="49">r<pos:position pos:line="266" pos:column="50"/></name></expr></argument>, <argument><expr><name pos:line="266" pos:column="52">resource<pos:position pos:line="266" pos:column="60"/></name></expr></argument>, <argument><expr><name pos:line="266" pos:column="62">elem<pos:position pos:line="266" pos:column="66"/></name></expr></argument>, <argument><expr><name pos:line="266" pos:column="68">vsn_hooks<pos:position pos:line="266" pos:column="77"/></name></expr></argument>, <argument><expr><operator pos:line="266" pos:column="79">&amp;<pos:position pos:line="266" pos:column="84"/></operator><name pos:line="266" pos:column="80">body<pos:position pos:line="266" pos:column="84"/></name></expr></argument>)<pos:position pos:line="266" pos:column="85"/></argument_list></call></expr>;<pos:position pos:line="266" pos:column="86"/></expr_stmt>
                <expr_stmt><expr><name pos:line="267" pos:column="17">core_option<pos:position pos:line="267" pos:column="28"/></name> <operator pos:line="267" pos:column="29">=<pos:position pos:line="267" pos:column="30"/></operator> <literal type="number" pos:line="267" pos:column="31">1<pos:position pos:line="267" pos:column="32"/></literal></expr>;<pos:position pos:line="267" pos:column="33"/></expr_stmt>
            }<pos:position pos:line="268" pos:column="14"/></block></then></if></elseif></if>
        }<pos:position pos:line="269" pos:column="10"/></block></then></if>

        <if pos:line="271" pos:column="9">if <condition pos:line="271" pos:column="12">(<expr><name pos:line="271" pos:column="13">err<pos:position pos:line="271" pos:column="16"/></name> <operator pos:line="271" pos:column="17">!=<pos:position pos:line="271" pos:column="19"/></operator> <name pos:line="271" pos:column="20">NULL<pos:position pos:line="271" pos:column="24"/></name></expr>)<pos:position pos:line="271" pos:column="25"/></condition><then pos:line="271" pos:column="25">
            <block type="pseudo"><return pos:line="272" pos:column="13">return <expr><call><name pos:line="272" pos:column="20">dav_handle_err<pos:position pos:line="272" pos:column="34"/></name><argument_list pos:line="272" pos:column="34">(<argument><expr><name pos:line="272" pos:column="35">r<pos:position pos:line="272" pos:column="36"/></name></expr></argument>, <argument><expr><name pos:line="272" pos:column="38">err<pos:position pos:line="272" pos:column="41"/></name></expr></argument>, <argument><expr><name pos:line="272" pos:column="43">NULL<pos:position pos:line="272" pos:column="47"/></name></expr></argument>)<pos:position pos:line="272" pos:column="48"/></argument_list></call></expr>;<pos:position pos:line="272" pos:column="49"/></return></block></then></if>

        <comment type="block" pos:line="274" pos:column="9">/* if unrecognized option, pass to versioning provider */</comment>
        <if pos:line="275" pos:column="9">if <condition pos:line="275" pos:column="12">(<expr><operator pos:line="275" pos:column="13">!<pos:position pos:line="275" pos:column="14"/></operator><name pos:line="275" pos:column="14">core_option<pos:position pos:line="275" pos:column="25"/></name> <operator pos:line="275" pos:column="26">&amp;&amp;<pos:position pos:line="275" pos:column="36"/></operator> <name pos:line="275" pos:column="29">vsn_hooks<pos:position pos:line="275" pos:column="38"/></name> <operator pos:line="275" pos:column="39">!=<pos:position pos:line="275" pos:column="41"/></operator> <name pos:line="275" pos:column="42">NULL<pos:position pos:line="275" pos:column="46"/></name></expr>)<pos:position pos:line="275" pos:column="47"/></condition><then pos:line="275" pos:column="47"> <block pos:line="275" pos:column="48">{
            <if pos:line="276" pos:column="13">if <condition pos:line="276" pos:column="16">(<expr><operator pos:line="276" pos:column="17">(<pos:position pos:line="276" pos:column="18"/></operator><name pos:line="276" pos:column="18">err<pos:position pos:line="276" pos:column="21"/></name> <operator pos:line="276" pos:column="22">=<pos:position pos:line="276" pos:column="23"/></operator> <call pos:line="276" pos:column="24">(<modifier pos:line="276" pos:column="25">*<pos:position pos:line="276" pos:column="26"/></modifier><name><name pos:line="276" pos:column="26">vsn_hooks<pos:position pos:line="276" pos:column="35"/></name><operator pos:line="276" pos:column="35">-&gt;<pos:position pos:line="276" pos:column="40"/></operator><name pos:line="276" pos:column="37">get_option<pos:position pos:line="276" pos:column="47"/></name></name>)<argument_list pos:line="276" pos:column="48">(<argument><expr><name pos:line="276" pos:column="49">resource<pos:position pos:line="276" pos:column="57"/></name></expr></argument>, <argument><expr><name pos:line="276" pos:column="59">elem<pos:position pos:line="276" pos:column="63"/></name></expr></argument>, <argument><expr><operator pos:line="276" pos:column="65">&amp;<pos:position pos:line="276" pos:column="70"/></operator><name pos:line="276" pos:column="66">body<pos:position pos:line="276" pos:column="70"/></name></expr></argument>)<pos:position pos:line="276" pos:column="71"/></argument_list></call><operator pos:line="276" pos:column="71">)<pos:position pos:line="276" pos:column="72"/></operator>
                <operator pos:line="277" pos:column="17">!=<pos:position pos:line="277" pos:column="19"/></operator> <name pos:line="277" pos:column="20">NULL<pos:position pos:line="277" pos:column="24"/></name></expr>)<pos:position pos:line="277" pos:column="25"/></condition><then pos:line="277" pos:column="25"> <block pos:line="277" pos:column="26">{
                <return pos:line="278" pos:column="17">return <expr><call><name pos:line="278" pos:column="24">dav_handle_err<pos:position pos:line="278" pos:column="38"/></name><argument_list pos:line="278" pos:column="38">(<argument><expr><name pos:line="278" pos:column="39">r<pos:position pos:line="278" pos:column="40"/></name></expr></argument>, <argument><expr><name pos:line="278" pos:column="42">err<pos:position pos:line="278" pos:column="45"/></name></expr></argument>, <argument><expr><name pos:line="278" pos:column="47">NULL<pos:position pos:line="278" pos:column="51"/></name></expr></argument>)<pos:position pos:line="278" pos:column="52"/></argument_list></call></expr>;<pos:position pos:line="278" pos:column="53"/></return>
            }<pos:position pos:line="279" pos:column="14"/></block></then></if>
        }<pos:position pos:line="280" pos:column="10"/></block></then></if>
    }<pos:position pos:line="281" pos:column="6"/></block></for>

    <comment type="block" pos:line="283" pos:column="5">/* send the options response */</comment>
    <expr_stmt><expr><name><name pos:line="284" pos:column="5">r<pos:position pos:line="284" pos:column="6"/></name><operator pos:line="284" pos:column="6">-&gt;<pos:position pos:line="284" pos:column="11"/></operator><name pos:line="284" pos:column="8">status<pos:position pos:line="284" pos:column="14"/></name></name> <operator pos:line="284" pos:column="15">=<pos:position pos:line="284" pos:column="16"/></operator> <name pos:line="284" pos:column="17">HTTP_OK<pos:position pos:line="284" pos:column="24"/></name></expr>;<pos:position pos:line="284" pos:column="25"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="285" pos:column="5">ap_set_content_type<pos:position pos:line="285" pos:column="24"/></name><argument_list pos:line="285" pos:column="24">(<argument><expr><name pos:line="285" pos:column="25">r<pos:position pos:line="285" pos:column="26"/></name></expr></argument>, <argument><expr><name pos:line="285" pos:column="28">DAV_XML_CONTENT_TYPE<pos:position pos:line="285" pos:column="48"/></name></expr></argument>)<pos:position pos:line="285" pos:column="49"/></argument_list></call></expr>;<pos:position pos:line="285" pos:column="50"/></expr_stmt>

    <comment type="block" pos:line="287" pos:column="5">/* send the headers and response body */</comment>
    <macro><name pos:line="288" pos:column="5">ap_rputs<pos:position pos:line="288" pos:column="13"/></name><argument_list pos:line="288" pos:column="13">(<argument pos:line="288" pos:column="14">DAV_XML_HEADER DEBUG_CR
             <literal type="string" pos:line="289" pos:column="14">"&lt;D:options-response xmlns:D=\"DAV:\"&gt;"<pos:position pos:line="289" pos:column="59"/></literal> DEBUG_CR<pos:position pos:line="289" pos:column="62"/></argument>, <argument pos:line="289" pos:column="64">r<pos:position pos:line="289" pos:column="65"/></argument>)<pos:position pos:line="289" pos:column="66"/></argument_list></macro><empty_stmt pos:line="289" pos:column="66">;<pos:position pos:line="289" pos:column="67"/></empty_stmt>

    <for pos:line="291" pos:column="5">for <control pos:line="291" pos:column="9">(<init><expr><name pos:line="291" pos:column="10">t<pos:position pos:line="291" pos:column="11"/></name> <operator pos:line="291" pos:column="12">=<pos:position pos:line="291" pos:column="13"/></operator> <name><name pos:line="291" pos:column="14">body<pos:position pos:line="291" pos:column="18"/></name><operator pos:line="291" pos:column="18">.<pos:position pos:line="291" pos:column="19"/></operator><name pos:line="291" pos:column="19">first<pos:position pos:line="291" pos:column="24"/></name></name></expr>;<pos:position pos:line="291" pos:column="25"/></init> <condition><expr><name pos:line="291" pos:column="26">t<pos:position pos:line="291" pos:column="27"/></name> <operator pos:line="291" pos:column="28">!=<pos:position pos:line="291" pos:column="30"/></operator> <name pos:line="291" pos:column="31">NULL<pos:position pos:line="291" pos:column="35"/></name></expr>;<pos:position pos:line="291" pos:column="36"/></condition> <incr><expr><name pos:line="291" pos:column="37">t<pos:position pos:line="291" pos:column="38"/></name> <operator pos:line="291" pos:column="39">=<pos:position pos:line="291" pos:column="40"/></operator> <name><name pos:line="291" pos:column="41">t<pos:position pos:line="291" pos:column="42"/></name><operator pos:line="291" pos:column="42">-&gt;<pos:position pos:line="291" pos:column="47"/></operator><name pos:line="291" pos:column="44">next<pos:position pos:line="291" pos:column="48"/></name></name></expr></incr>)<pos:position pos:line="291" pos:column="49"/></control>
        <block type="pseudo"><expr_stmt><expr><call><name pos:line="292" pos:column="9">ap_rputs<pos:position pos:line="292" pos:column="17"/></name><argument_list pos:line="292" pos:column="17">(<argument><expr><name><name pos:line="292" pos:column="18">t<pos:position pos:line="292" pos:column="19"/></name><operator pos:line="292" pos:column="19">-&gt;<pos:position pos:line="292" pos:column="24"/></operator><name pos:line="292" pos:column="21">text<pos:position pos:line="292" pos:column="25"/></name></name></expr></argument>, <argument><expr><name pos:line="292" pos:column="27">r<pos:position pos:line="292" pos:column="28"/></name></expr></argument>)<pos:position pos:line="292" pos:column="29"/></argument_list></call></expr>;<pos:position pos:line="292" pos:column="30"/></expr_stmt></block></for>

    <expr_stmt><expr><call><name pos:line="294" pos:column="5">ap_rputs<pos:position pos:line="294" pos:column="13"/></name><argument_list pos:line="294" pos:column="13">(<argument><expr><literal type="string" pos:line="294" pos:column="14">"&lt;/D:options-response&gt;"<pos:position pos:line="294" pos:column="43"/></literal> <name pos:line="294" pos:column="38">DEBUG_CR<pos:position pos:line="294" pos:column="46"/></name></expr></argument>, <argument><expr><name pos:line="294" pos:column="48">r<pos:position pos:line="294" pos:column="49"/></name></expr></argument>)<pos:position pos:line="294" pos:column="50"/></argument_list></call></expr>;<pos:position pos:line="294" pos:column="51"/></expr_stmt>

    <comment type="block" pos:line="296" pos:column="5">/* we've sent everything necessary to the client. */</comment>
    <return pos:line="297" pos:column="5">return <expr><name pos:line="297" pos:column="12">DONE<pos:position pos:line="297" pos:column="16"/></name></expr>;<pos:position pos:line="297" pos:column="17"/></return>
}<pos:position pos:line="298" pos:column="2"/></block></function></unit>

<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/httpd/gumtree/httpd_repos_function_1049_httpd-2.0.63.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">apr_off_t<pos:position pos:line="1" pos:column="17"/></name></type> <name pos:line="1" pos:column="18">get_body<pos:position pos:line="1" pos:column="26"/></name><parameter_list pos:line="1" pos:column="26">(<parameter><decl><type><name pos:line="1" pos:column="27">char<pos:position pos:line="1" pos:column="31"/></name> <modifier pos:line="1" pos:column="32">*<pos:position pos:line="1" pos:column="33"/></modifier></type><name pos:line="1" pos:column="33">buffer<pos:position pos:line="1" pos:column="39"/></name></decl></parameter>, <parameter><decl><type><name pos:line="1" pos:column="41">apr_size_t<pos:position pos:line="1" pos:column="51"/></name> <modifier pos:line="1" pos:column="52">*<pos:position pos:line="1" pos:column="53"/></modifier></type><name pos:line="1" pos:column="53">len<pos:position pos:line="1" pos:column="56"/></name></decl></parameter>, <parameter><decl><type><specifier pos:line="1" pos:column="58">const<pos:position pos:line="1" pos:column="63"/></specifier> <name pos:line="1" pos:column="64">char<pos:position pos:line="1" pos:column="68"/></name> <modifier pos:line="1" pos:column="69">*<pos:position pos:line="1" pos:column="70"/></modifier></type><name pos:line="1" pos:column="70">tag<pos:position pos:line="1" pos:column="73"/></name></decl></parameter>,
                          <parameter><decl><type><name pos:line="2" pos:column="27">apr_file_t<pos:position pos:line="2" pos:column="37"/></name> <modifier pos:line="2" pos:column="38">*<pos:position pos:line="2" pos:column="39"/></modifier></type><name pos:line="2" pos:column="39">map<pos:position pos:line="2" pos:column="42"/></name></decl></parameter>)<pos:position pos:line="2" pos:column="43"/></parameter_list>
<block pos:line="3" pos:column="1">{
    <decl_stmt><decl><type><name pos:line="4" pos:column="5">char<pos:position pos:line="4" pos:column="9"/></name> <modifier pos:line="4" pos:column="10">*<pos:position pos:line="4" pos:column="11"/></modifier></type><name pos:line="4" pos:column="11">endbody<pos:position pos:line="4" pos:column="18"/></name></decl>;<pos:position pos:line="4" pos:column="19"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="5" pos:column="5">int<pos:position pos:line="5" pos:column="8"/></name></type> <name pos:line="5" pos:column="9">bodylen<pos:position pos:line="5" pos:column="16"/></name></decl>;<pos:position pos:line="5" pos:column="17"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="6" pos:column="5">int<pos:position pos:line="6" pos:column="8"/></name></type> <name pos:line="6" pos:column="9">taglen<pos:position pos:line="6" pos:column="15"/></name></decl>;<pos:position pos:line="6" pos:column="16"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="7" pos:column="5">apr_off_t<pos:position pos:line="7" pos:column="14"/></name></type> <name pos:line="7" pos:column="15">pos<pos:position pos:line="7" pos:column="18"/></name></decl>;<pos:position pos:line="7" pos:column="19"/></decl_stmt>

    <expr_stmt><expr><name pos:line="9" pos:column="5">taglen<pos:position pos:line="9" pos:column="11"/></name> <operator pos:line="9" pos:column="12">=<pos:position pos:line="9" pos:column="13"/></operator> <call><name pos:line="9" pos:column="14">strlen<pos:position pos:line="9" pos:column="20"/></name><argument_list pos:line="9" pos:column="20">(<argument><expr><name pos:line="9" pos:column="21">tag<pos:position pos:line="9" pos:column="24"/></name></expr></argument>)<pos:position pos:line="9" pos:column="25"/></argument_list></call></expr>;<pos:position pos:line="9" pos:column="26"/></expr_stmt>
    <expr_stmt><expr><operator pos:line="10" pos:column="5">*<pos:position pos:line="10" pos:column="6"/></operator><name pos:line="10" pos:column="6">len<pos:position pos:line="10" pos:column="9"/></name> <operator pos:line="10" pos:column="10">-=<pos:position pos:line="10" pos:column="12"/></operator> <name pos:line="10" pos:column="13">taglen<pos:position pos:line="10" pos:column="19"/></name></expr>;<pos:position pos:line="10" pos:column="20"/></expr_stmt>

    <comment type="block" pos:line="12" pos:column="5">/* We are at the first character following a body:tag\n entry
     * Suck in the body, then backspace to the first char after the
     * closing tag entry.  If we fail to read, find the tag or back
     * up then we have a hosed file, so give up already
     */</comment>
    <if pos:line="17" pos:column="5">if <condition pos:line="17" pos:column="8">(<expr><call><name pos:line="17" pos:column="9">apr_file_read<pos:position pos:line="17" pos:column="22"/></name><argument_list pos:line="17" pos:column="22">(<argument><expr><name pos:line="17" pos:column="23">map<pos:position pos:line="17" pos:column="26"/></name></expr></argument>, <argument><expr><name pos:line="17" pos:column="28">buffer<pos:position pos:line="17" pos:column="34"/></name></expr></argument>, <argument><expr><name pos:line="17" pos:column="36">len<pos:position pos:line="17" pos:column="39"/></name></expr></argument>)<pos:position pos:line="17" pos:column="40"/></argument_list></call> <operator pos:line="17" pos:column="41">!=<pos:position pos:line="17" pos:column="43"/></operator> <name pos:line="17" pos:column="44">APR_SUCCESS<pos:position pos:line="17" pos:column="55"/></name></expr>)<pos:position pos:line="17" pos:column="56"/></condition><then pos:line="17" pos:column="56"> <block pos:line="17" pos:column="57">{
        <return pos:line="18" pos:column="9">return <expr><operator pos:line="18" pos:column="16">-<pos:position pos:line="18" pos:column="17"/></operator><literal type="number" pos:line="18" pos:column="17">1<pos:position pos:line="18" pos:column="18"/></literal></expr>;<pos:position pos:line="18" pos:column="19"/></return>
    }<pos:position pos:line="19" pos:column="6"/></block></then></if>

    <comment type="block" pos:line="21" pos:column="5">/* put a copy of the tag *after* the data read from the file
     * so that strstr() will find something with no reliance on
     * terminating '\0'
     */</comment>
    <expr_stmt><expr><call><name pos:line="25" pos:column="5">memcpy<pos:position pos:line="25" pos:column="11"/></name><argument_list pos:line="25" pos:column="11">(<argument><expr><name pos:line="25" pos:column="12">buffer<pos:position pos:line="25" pos:column="18"/></name> <operator pos:line="25" pos:column="19">+<pos:position pos:line="25" pos:column="20"/></operator> <operator pos:line="25" pos:column="21">*<pos:position pos:line="25" pos:column="22"/></operator><name pos:line="25" pos:column="22">len<pos:position pos:line="25" pos:column="25"/></name></expr></argument>, <argument><expr><name pos:line="25" pos:column="27">tag<pos:position pos:line="25" pos:column="30"/></name></expr></argument>, <argument><expr><name pos:line="25" pos:column="32">taglen<pos:position pos:line="25" pos:column="38"/></name></expr></argument>)<pos:position pos:line="25" pos:column="39"/></argument_list></call></expr>;<pos:position pos:line="25" pos:column="40"/></expr_stmt>
    <expr_stmt><expr><name pos:line="26" pos:column="5">endbody<pos:position pos:line="26" pos:column="12"/></name> <operator pos:line="26" pos:column="13">=<pos:position pos:line="26" pos:column="14"/></operator> <call><name pos:line="26" pos:column="15">strstr<pos:position pos:line="26" pos:column="21"/></name><argument_list pos:line="26" pos:column="21">(<argument><expr><name pos:line="26" pos:column="22">buffer<pos:position pos:line="26" pos:column="28"/></name></expr></argument>, <argument><expr><name pos:line="26" pos:column="30">tag<pos:position pos:line="26" pos:column="33"/></name></expr></argument>)<pos:position pos:line="26" pos:column="34"/></argument_list></call></expr>;<pos:position pos:line="26" pos:column="35"/></expr_stmt>
    <if pos:line="27" pos:column="5">if <condition pos:line="27" pos:column="8">(<expr><name pos:line="27" pos:column="9">endbody<pos:position pos:line="27" pos:column="16"/></name> <operator pos:line="27" pos:column="17">==<pos:position pos:line="27" pos:column="19"/></operator> <name pos:line="27" pos:column="20">buffer<pos:position pos:line="27" pos:column="26"/></name> <operator pos:line="27" pos:column="27">+<pos:position pos:line="27" pos:column="28"/></operator> <operator pos:line="27" pos:column="29">*<pos:position pos:line="27" pos:column="30"/></operator><name pos:line="27" pos:column="30">len<pos:position pos:line="27" pos:column="33"/></name></expr>)<pos:position pos:line="27" pos:column="34"/></condition><then pos:line="27" pos:column="34"> <block pos:line="27" pos:column="35">{
        <return pos:line="28" pos:column="9">return <expr><operator pos:line="28" pos:column="16">-<pos:position pos:line="28" pos:column="17"/></operator><literal type="number" pos:line="28" pos:column="17">1<pos:position pos:line="28" pos:column="18"/></literal></expr>;<pos:position pos:line="28" pos:column="19"/></return>
    }<pos:position pos:line="29" pos:column="6"/></block></then></if>
    <expr_stmt><expr><name pos:line="30" pos:column="5">bodylen<pos:position pos:line="30" pos:column="12"/></name> <operator pos:line="30" pos:column="13">=<pos:position pos:line="30" pos:column="14"/></operator> <name pos:line="30" pos:column="15">endbody<pos:position pos:line="30" pos:column="22"/></name> <operator pos:line="30" pos:column="23">-<pos:position pos:line="30" pos:column="24"/></operator> <name pos:line="30" pos:column="25">buffer<pos:position pos:line="30" pos:column="31"/></name></expr>;<pos:position pos:line="30" pos:column="32"/></expr_stmt>
    <expr_stmt><expr><name pos:line="31" pos:column="5">endbody<pos:position pos:line="31" pos:column="12"/></name> <operator pos:line="31" pos:column="13">+=<pos:position pos:line="31" pos:column="15"/></operator> <call><name pos:line="31" pos:column="16">strlen<pos:position pos:line="31" pos:column="22"/></name><argument_list pos:line="31" pos:column="22">(<argument><expr><name pos:line="31" pos:column="23">tag<pos:position pos:line="31" pos:column="26"/></name></expr></argument>)<pos:position pos:line="31" pos:column="27"/></argument_list></call></expr>;<pos:position pos:line="31" pos:column="28"/></expr_stmt>
    <comment type="block" pos:line="32" pos:column="5">/* Skip all the trailing cruft after the end tag to the next line */</comment>
    <while pos:line="33" pos:column="5">while <condition pos:line="33" pos:column="11">(<expr><operator pos:line="33" pos:column="12">*<pos:position pos:line="33" pos:column="13"/></operator><name pos:line="33" pos:column="13">endbody<pos:position pos:line="33" pos:column="20"/></name></expr>)<pos:position pos:line="33" pos:column="21"/></condition> <block pos:line="33" pos:column="22">{
        <if pos:line="34" pos:column="9">if <condition pos:line="34" pos:column="12">(<expr><operator pos:line="34" pos:column="13">*<pos:position pos:line="34" pos:column="14"/></operator><name pos:line="34" pos:column="14">endbody<pos:position pos:line="34" pos:column="21"/></name> <operator pos:line="34" pos:column="22">==<pos:position pos:line="34" pos:column="24"/></operator> <literal type="char" pos:line="34" pos:column="25">'\n'<pos:position pos:line="34" pos:column="29"/></literal></expr>)<pos:position pos:line="34" pos:column="30"/></condition><then pos:line="34" pos:column="30"> <block pos:line="34" pos:column="31">{
            <expr_stmt><expr><operator pos:line="35" pos:column="13">++<pos:position pos:line="35" pos:column="15"/></operator><name pos:line="35" pos:column="15">endbody<pos:position pos:line="35" pos:column="22"/></name></expr>;<pos:position pos:line="35" pos:column="23"/></expr_stmt>
            <break pos:line="36" pos:column="13">break;<pos:position pos:line="36" pos:column="19"/></break>
        }<pos:position pos:line="37" pos:column="10"/></block></then></if>
        <expr_stmt><expr><operator pos:line="38" pos:column="9">++<pos:position pos:line="38" pos:column="11"/></operator><name pos:line="38" pos:column="11">endbody<pos:position pos:line="38" pos:column="18"/></name></expr>;<pos:position pos:line="38" pos:column="19"/></expr_stmt>
    }<pos:position pos:line="39" pos:column="6"/></block></while>

    <expr_stmt><expr><name pos:line="41" pos:column="5">pos<pos:position pos:line="41" pos:column="8"/></name> <operator pos:line="41" pos:column="9">=<pos:position pos:line="41" pos:column="10"/></operator> <operator pos:line="41" pos:column="11">-<pos:position pos:line="41" pos:column="12"/></operator><call pos:line="41" pos:column="12">(<name pos:line="41" pos:column="13">apr_off_t<pos:position pos:line="41" pos:column="22"/></name>)<argument_list pos:line="41" pos:column="23">(<argument><expr><operator pos:line="41" pos:column="24">*<pos:position pos:line="41" pos:column="25"/></operator><name pos:line="41" pos:column="25">len<pos:position pos:line="41" pos:column="28"/></name> <operator pos:line="41" pos:column="29">-<pos:position pos:line="41" pos:column="30"/></operator> <operator pos:line="41" pos:column="31">(<pos:position pos:line="41" pos:column="32"/></operator><name pos:line="41" pos:column="32">endbody<pos:position pos:line="41" pos:column="39"/></name> <operator pos:line="41" pos:column="40">-<pos:position pos:line="41" pos:column="41"/></operator> <name pos:line="41" pos:column="42">buffer<pos:position pos:line="41" pos:column="48"/></name><operator pos:line="41" pos:column="48">)<pos:position pos:line="41" pos:column="49"/></operator></expr></argument>)<pos:position pos:line="41" pos:column="50"/></argument_list></call></expr>;<pos:position pos:line="41" pos:column="51"/></expr_stmt>
    <if pos:line="42" pos:column="5">if <condition pos:line="42" pos:column="8">(<expr><call><name pos:line="42" pos:column="9">apr_file_seek<pos:position pos:line="42" pos:column="22"/></name><argument_list pos:line="42" pos:column="22">(<argument><expr><name pos:line="42" pos:column="23">map<pos:position pos:line="42" pos:column="26"/></name></expr></argument>, <argument><expr><name pos:line="42" pos:column="28">APR_CUR<pos:position pos:line="42" pos:column="35"/></name></expr></argument>, <argument><expr><operator pos:line="42" pos:column="37">&amp;<pos:position pos:line="42" pos:column="42"/></operator><name pos:line="42" pos:column="38">pos<pos:position pos:line="42" pos:column="41"/></name></expr></argument>)<pos:position pos:line="42" pos:column="42"/></argument_list></call> <operator pos:line="42" pos:column="43">!=<pos:position pos:line="42" pos:column="45"/></operator> <name pos:line="42" pos:column="46">APR_SUCCESS<pos:position pos:line="42" pos:column="57"/></name></expr>)<pos:position pos:line="42" pos:column="58"/></condition><then pos:line="42" pos:column="58"> <block pos:line="42" pos:column="59">{
        <return pos:line="43" pos:column="9">return <expr><operator pos:line="43" pos:column="16">-<pos:position pos:line="43" pos:column="17"/></operator><literal type="number" pos:line="43" pos:column="17">1<pos:position pos:line="43" pos:column="18"/></literal></expr>;<pos:position pos:line="43" pos:column="19"/></return>
    }<pos:position pos:line="44" pos:column="6"/></block></then></if>

    <comment type="block" pos:line="46" pos:column="5">/* Give the caller back the actual body's file offset and length */</comment>
    <expr_stmt><expr><operator pos:line="47" pos:column="5">*<pos:position pos:line="47" pos:column="6"/></operator><name pos:line="47" pos:column="6">len<pos:position pos:line="47" pos:column="9"/></name> <operator pos:line="47" pos:column="10">=<pos:position pos:line="47" pos:column="11"/></operator> <name pos:line="47" pos:column="12">bodylen<pos:position pos:line="47" pos:column="19"/></name></expr>;<pos:position pos:line="47" pos:column="20"/></expr_stmt>
    <return pos:line="48" pos:column="5">return <expr><name pos:line="48" pos:column="12">pos<pos:position pos:line="48" pos:column="15"/></name> <operator pos:line="48" pos:column="16">-<pos:position pos:line="48" pos:column="17"/></operator> <operator pos:line="48" pos:column="18">(<pos:position pos:line="48" pos:column="19"/></operator><name pos:line="48" pos:column="19">endbody<pos:position pos:line="48" pos:column="26"/></name> <operator pos:line="48" pos:column="27">-<pos:position pos:line="48" pos:column="28"/></operator> <name pos:line="48" pos:column="29">buffer<pos:position pos:line="48" pos:column="35"/></name><operator pos:line="48" pos:column="35">)<pos:position pos:line="48" pos:column="36"/></operator></expr>;<pos:position pos:line="48" pos:column="37"/></return>
}<pos:position pos:line="49" pos:column="2"/></block></function></unit>

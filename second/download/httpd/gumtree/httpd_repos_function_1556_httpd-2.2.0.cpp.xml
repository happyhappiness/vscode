<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/httpd/gumtree/httpd_repos_function_1556_httpd-2.2.0.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><specifier pos:line="1" pos:column="8">const<pos:position pos:line="1" pos:column="13"/></specifier> <name pos:line="1" pos:column="14">char<pos:position pos:line="1" pos:column="18"/></name> <modifier pos:line="1" pos:column="19">*<pos:position pos:line="1" pos:column="20"/></modifier></type><name pos:line="1" pos:column="20">filter_provider<pos:position pos:line="1" pos:column="35"/></name><parameter_list pos:line="1" pos:column="35">(<parameter><decl><type><name pos:line="1" pos:column="36">cmd_parms<pos:position pos:line="1" pos:column="45"/></name> <modifier pos:line="1" pos:column="46">*<pos:position pos:line="1" pos:column="47"/></modifier></type><name pos:line="1" pos:column="47">cmd<pos:position pos:line="1" pos:column="50"/></name></decl></parameter>, <parameter><decl><type><name pos:line="1" pos:column="52">void<pos:position pos:line="1" pos:column="56"/></name> <modifier pos:line="1" pos:column="57">*<pos:position pos:line="1" pos:column="58"/></modifier></type><name pos:line="1" pos:column="58">CFG<pos:position pos:line="1" pos:column="61"/></name></decl></parameter>, <parameter><decl><type><specifier pos:line="1" pos:column="63">const<pos:position pos:line="1" pos:column="68"/></specifier> <name pos:line="1" pos:column="69">char<pos:position pos:line="1" pos:column="73"/></name> <modifier pos:line="1" pos:column="74">*<pos:position pos:line="1" pos:column="75"/></modifier></type><name pos:line="1" pos:column="75">args<pos:position pos:line="1" pos:column="79"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="80"/></parameter_list>
<block pos:line="2" pos:column="1">{
    <decl_stmt><decl><type><name pos:line="3" pos:column="5">mod_filter_cfg<pos:position pos:line="3" pos:column="19"/></name> <modifier pos:line="3" pos:column="20">*<pos:position pos:line="3" pos:column="21"/></modifier></type><name pos:line="3" pos:column="21">cfg<pos:position pos:line="3" pos:column="24"/></name> <init pos:line="3" pos:column="25">= <expr><name pos:line="3" pos:column="27">CFG<pos:position pos:line="3" pos:column="30"/></name></expr></init></decl>;<pos:position pos:line="3" pos:column="31"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="4" pos:column="5">int<pos:position pos:line="4" pos:column="8"/></name></type> <name pos:line="4" pos:column="9">flags<pos:position pos:line="4" pos:column="14"/></name></decl>;<pos:position pos:line="4" pos:column="15"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="5" pos:column="5">ap_filter_provider_t<pos:position pos:line="5" pos:column="25"/></name> <modifier pos:line="5" pos:column="26">*<pos:position pos:line="5" pos:column="27"/></modifier></type><name pos:line="5" pos:column="27">provider<pos:position pos:line="5" pos:column="35"/></name></decl>;<pos:position pos:line="5" pos:column="36"/></decl_stmt>
    <decl_stmt><decl><type><specifier pos:line="6" pos:column="5">const<pos:position pos:line="6" pos:column="10"/></specifier> <name pos:line="6" pos:column="11">char<pos:position pos:line="6" pos:column="15"/></name> <modifier pos:line="6" pos:column="16">*<pos:position pos:line="6" pos:column="17"/></modifier></type><name pos:line="6" pos:column="17">rxend<pos:position pos:line="6" pos:column="22"/></name></decl>;<pos:position pos:line="6" pos:column="23"/></decl_stmt>
    <decl_stmt><decl><type><specifier pos:line="7" pos:column="5">const<pos:position pos:line="7" pos:column="10"/></specifier> <name pos:line="7" pos:column="11">char<pos:position pos:line="7" pos:column="15"/></name> <modifier pos:line="7" pos:column="16">*<pos:position pos:line="7" pos:column="17"/></modifier></type><name pos:line="7" pos:column="17">c<pos:position pos:line="7" pos:column="18"/></name></decl>;<pos:position pos:line="7" pos:column="19"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="8" pos:column="5">char<pos:position pos:line="8" pos:column="9"/></name> <modifier pos:line="8" pos:column="10">*<pos:position pos:line="8" pos:column="11"/></modifier></type><name pos:line="8" pos:column="11">str<pos:position pos:line="8" pos:column="14"/></name></decl>;<pos:position pos:line="8" pos:column="15"/></decl_stmt>
    <decl_stmt><decl><type><specifier pos:line="9" pos:column="5">const<pos:position pos:line="9" pos:column="10"/></specifier> <name pos:line="9" pos:column="11">char<pos:position pos:line="9" pos:column="15"/></name> <modifier pos:line="9" pos:column="16">*<pos:position pos:line="9" pos:column="17"/></modifier></type><name pos:line="9" pos:column="17">eq<pos:position pos:line="9" pos:column="19"/></name></decl>;<pos:position pos:line="9" pos:column="20"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="10" pos:column="5">ap_filter_rec_t<pos:position pos:line="10" pos:column="20"/></name><modifier pos:line="10" pos:column="20">*<pos:position pos:line="10" pos:column="21"/></modifier></type> <name pos:line="10" pos:column="22">frec<pos:position pos:line="10" pos:column="26"/></name></decl>;<pos:position pos:line="10" pos:column="27"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="11" pos:column="5">ap_filter_rec_t<pos:position pos:line="11" pos:column="20"/></name><modifier pos:line="11" pos:column="20">*<pos:position pos:line="11" pos:column="21"/></modifier></type> <name pos:line="11" pos:column="22">provider_frec<pos:position pos:line="11" pos:column="35"/></name></decl>;<pos:position pos:line="11" pos:column="36"/></decl_stmt>

    <comment type="block" pos:line="13" pos:column="5">/* insist on exactly four arguments */</comment>
    <decl_stmt><decl><type><specifier pos:line="14" pos:column="5">const<pos:position pos:line="14" pos:column="10"/></specifier> <name pos:line="14" pos:column="11">char<pos:position pos:line="14" pos:column="15"/></name> <modifier pos:line="14" pos:column="16">*<pos:position pos:line="14" pos:column="17"/></modifier></type><name pos:line="14" pos:column="17">fname<pos:position pos:line="14" pos:column="22"/></name> <init pos:line="14" pos:column="23">= <expr><call><name pos:line="14" pos:column="25">ap_getword_conf<pos:position pos:line="14" pos:column="40"/></name><argument_list pos:line="14" pos:column="40">(<argument><expr><name><name pos:line="14" pos:column="41">cmd<pos:position pos:line="14" pos:column="44"/></name><operator pos:line="14" pos:column="44">-&gt;<pos:position pos:line="14" pos:column="49"/></operator><name pos:line="14" pos:column="46">pool<pos:position pos:line="14" pos:column="50"/></name></name></expr></argument>, <argument><expr><operator pos:line="14" pos:column="52">&amp;<pos:position pos:line="14" pos:column="57"/></operator><name pos:line="14" pos:column="53">args<pos:position pos:line="14" pos:column="57"/></name></expr></argument>)<pos:position pos:line="14" pos:column="58"/></argument_list></call></expr></init></decl> ;<pos:position pos:line="14" pos:column="60"/></decl_stmt>
    <decl_stmt><decl><type><specifier pos:line="15" pos:column="5">const<pos:position pos:line="15" pos:column="10"/></specifier> <name pos:line="15" pos:column="11">char<pos:position pos:line="15" pos:column="15"/></name> <modifier pos:line="15" pos:column="16">*<pos:position pos:line="15" pos:column="17"/></modifier></type><name pos:line="15" pos:column="17">pname<pos:position pos:line="15" pos:column="22"/></name> <init pos:line="15" pos:column="23">= <expr><call><name pos:line="15" pos:column="25">ap_getword_conf<pos:position pos:line="15" pos:column="40"/></name><argument_list pos:line="15" pos:column="40">(<argument><expr><name><name pos:line="15" pos:column="41">cmd<pos:position pos:line="15" pos:column="44"/></name><operator pos:line="15" pos:column="44">-&gt;<pos:position pos:line="15" pos:column="49"/></operator><name pos:line="15" pos:column="46">pool<pos:position pos:line="15" pos:column="50"/></name></name></expr></argument>, <argument><expr><operator pos:line="15" pos:column="52">&amp;<pos:position pos:line="15" pos:column="57"/></operator><name pos:line="15" pos:column="53">args<pos:position pos:line="15" pos:column="57"/></name></expr></argument>)<pos:position pos:line="15" pos:column="58"/></argument_list></call></expr></init></decl> ;<pos:position pos:line="15" pos:column="60"/></decl_stmt>
    <decl_stmt><decl><type><specifier pos:line="16" pos:column="5">const<pos:position pos:line="16" pos:column="10"/></specifier> <name pos:line="16" pos:column="11">char<pos:position pos:line="16" pos:column="15"/></name> <modifier pos:line="16" pos:column="16">*<pos:position pos:line="16" pos:column="17"/></modifier></type><name pos:line="16" pos:column="17">condition<pos:position pos:line="16" pos:column="26"/></name> <init pos:line="16" pos:column="27">= <expr><call><name pos:line="16" pos:column="29">ap_getword_conf<pos:position pos:line="16" pos:column="44"/></name><argument_list pos:line="16" pos:column="44">(<argument><expr><name><name pos:line="16" pos:column="45">cmd<pos:position pos:line="16" pos:column="48"/></name><operator pos:line="16" pos:column="48">-&gt;<pos:position pos:line="16" pos:column="53"/></operator><name pos:line="16" pos:column="50">pool<pos:position pos:line="16" pos:column="54"/></name></name></expr></argument>, <argument><expr><operator pos:line="16" pos:column="56">&amp;<pos:position pos:line="16" pos:column="61"/></operator><name pos:line="16" pos:column="57">args<pos:position pos:line="16" pos:column="61"/></name></expr></argument>)<pos:position pos:line="16" pos:column="62"/></argument_list></call></expr></init></decl> ;<pos:position pos:line="16" pos:column="64"/></decl_stmt>
    <decl_stmt><decl><type><specifier pos:line="17" pos:column="5">const<pos:position pos:line="17" pos:column="10"/></specifier> <name pos:line="17" pos:column="11">char<pos:position pos:line="17" pos:column="15"/></name> <modifier pos:line="17" pos:column="16">*<pos:position pos:line="17" pos:column="17"/></modifier></type><name pos:line="17" pos:column="17">match<pos:position pos:line="17" pos:column="22"/></name> <init pos:line="17" pos:column="23">= <expr><call><name pos:line="17" pos:column="25">ap_getword_conf<pos:position pos:line="17" pos:column="40"/></name><argument_list pos:line="17" pos:column="40">(<argument><expr><name><name pos:line="17" pos:column="41">cmd<pos:position pos:line="17" pos:column="44"/></name><operator pos:line="17" pos:column="44">-&gt;<pos:position pos:line="17" pos:column="49"/></operator><name pos:line="17" pos:column="46">pool<pos:position pos:line="17" pos:column="50"/></name></name></expr></argument>, <argument><expr><operator pos:line="17" pos:column="52">&amp;<pos:position pos:line="17" pos:column="57"/></operator><name pos:line="17" pos:column="53">args<pos:position pos:line="17" pos:column="57"/></name></expr></argument>)<pos:position pos:line="17" pos:column="58"/></argument_list></call></expr></init></decl> ;<pos:position pos:line="17" pos:column="60"/></decl_stmt>
    <expr_stmt><expr><name pos:line="18" pos:column="5">eq<pos:position pos:line="18" pos:column="7"/></name> <operator pos:line="18" pos:column="8">=<pos:position pos:line="18" pos:column="9"/></operator> <call><name pos:line="18" pos:column="10">ap_getword_conf<pos:position pos:line="18" pos:column="25"/></name><argument_list pos:line="18" pos:column="25">(<argument><expr><name><name pos:line="18" pos:column="26">cmd<pos:position pos:line="18" pos:column="29"/></name><operator pos:line="18" pos:column="29">-&gt;<pos:position pos:line="18" pos:column="34"/></operator><name pos:line="18" pos:column="31">pool<pos:position pos:line="18" pos:column="35"/></name></name></expr></argument>, <argument><expr><operator pos:line="18" pos:column="37">&amp;<pos:position pos:line="18" pos:column="42"/></operator><name pos:line="18" pos:column="38">args<pos:position pos:line="18" pos:column="42"/></name></expr></argument>)<pos:position pos:line="18" pos:column="43"/></argument_list></call></expr> ;<pos:position pos:line="18" pos:column="45"/></expr_stmt>
    <if pos:line="19" pos:column="5">if <condition pos:line="19" pos:column="8">( <expr><operator pos:line="19" pos:column="10">!<pos:position pos:line="19" pos:column="11"/></operator><operator pos:line="19" pos:column="11">*<pos:position pos:line="19" pos:column="12"/></operator><name pos:line="19" pos:column="12">fname<pos:position pos:line="19" pos:column="17"/></name> <operator pos:line="19" pos:column="18">||<pos:position pos:line="19" pos:column="20"/></operator> <operator pos:line="19" pos:column="21">!<pos:position pos:line="19" pos:column="22"/></operator><operator pos:line="19" pos:column="22">*<pos:position pos:line="19" pos:column="23"/></operator><name pos:line="19" pos:column="23">pname<pos:position pos:line="19" pos:column="28"/></name> <operator pos:line="19" pos:column="29">||<pos:position pos:line="19" pos:column="31"/></operator> <operator pos:line="19" pos:column="32">!<pos:position pos:line="19" pos:column="33"/></operator><operator pos:line="19" pos:column="33">*<pos:position pos:line="19" pos:column="34"/></operator><name pos:line="19" pos:column="34">match<pos:position pos:line="19" pos:column="39"/></name> <operator pos:line="19" pos:column="40">||<pos:position pos:line="19" pos:column="42"/></operator> <operator pos:line="19" pos:column="43">!<pos:position pos:line="19" pos:column="44"/></operator><operator pos:line="19" pos:column="44">*<pos:position pos:line="19" pos:column="45"/></operator><name pos:line="19" pos:column="45">condition<pos:position pos:line="19" pos:column="54"/></name> <operator pos:line="19" pos:column="55">||<pos:position pos:line="19" pos:column="57"/></operator> <operator pos:line="19" pos:column="58">*<pos:position pos:line="19" pos:column="59"/></operator><name pos:line="19" pos:column="59">eq<pos:position pos:line="19" pos:column="61"/></name></expr> )<pos:position pos:line="19" pos:column="63"/></condition><then pos:line="19" pos:column="63"> <block pos:line="19" pos:column="64">{
        <return pos:line="20" pos:column="9">return <expr><literal type="string" pos:line="20" pos:column="16">"usage: FilterProvider filter provider condition match"<pos:position pos:line="20" pos:column="71"/></literal></expr> ;<pos:position pos:line="20" pos:column="73"/></return>
    }<pos:position pos:line="21" pos:column="6"/></block></then></if>

    <comment type="block" pos:line="23" pos:column="5">/* fname has been declared with DeclareFilter, so we can look it up */</comment>
    <expr_stmt><expr><name pos:line="24" pos:column="5">frec<pos:position pos:line="24" pos:column="9"/></name> <operator pos:line="24" pos:column="10">=<pos:position pos:line="24" pos:column="11"/></operator> <call><name pos:line="24" pos:column="12">apr_hash_get<pos:position pos:line="24" pos:column="24"/></name><argument_list pos:line="24" pos:column="24">(<argument><expr><name><name pos:line="24" pos:column="25">cfg<pos:position pos:line="24" pos:column="28"/></name><operator pos:line="24" pos:column="28">-&gt;<pos:position pos:line="24" pos:column="33"/></operator><name pos:line="24" pos:column="30">live_filters<pos:position pos:line="24" pos:column="42"/></name></name></expr></argument>, <argument><expr><name pos:line="24" pos:column="44">fname<pos:position pos:line="24" pos:column="49"/></name></expr></argument>, <argument><expr><name pos:line="24" pos:column="51">APR_HASH_KEY_STRING<pos:position pos:line="24" pos:column="70"/></name></expr></argument>)<pos:position pos:line="24" pos:column="71"/></argument_list></call></expr>;<pos:position pos:line="24" pos:column="72"/></expr_stmt>

    <comment type="block" pos:line="26" pos:column="5">/* or if provider is mod_filter itself, we can also look it up */</comment>
    <if pos:line="27" pos:column="5">if <condition pos:line="27" pos:column="8">(<expr><operator pos:line="27" pos:column="9">!<pos:position pos:line="27" pos:column="10"/></operator><name pos:line="27" pos:column="10">frec<pos:position pos:line="27" pos:column="14"/></name></expr>)<pos:position pos:line="27" pos:column="15"/></condition><then pos:line="27" pos:column="15"> <block pos:line="27" pos:column="16">{
        <expr_stmt><expr><name pos:line="28" pos:column="9">c<pos:position pos:line="28" pos:column="10"/></name> <operator pos:line="28" pos:column="11">=<pos:position pos:line="28" pos:column="12"/></operator> <call><name pos:line="28" pos:column="13">filter_declare<pos:position pos:line="28" pos:column="27"/></name><argument_list pos:line="28" pos:column="27">(<argument><expr><name pos:line="28" pos:column="28">cmd<pos:position pos:line="28" pos:column="31"/></name></expr></argument>, <argument><expr><name pos:line="28" pos:column="33">CFG<pos:position pos:line="28" pos:column="36"/></name></expr></argument>, <argument><expr><name pos:line="28" pos:column="38">fname<pos:position pos:line="28" pos:column="43"/></name></expr></argument>, <argument><expr><name pos:line="28" pos:column="45">NULL<pos:position pos:line="28" pos:column="49"/></name></expr></argument>)<pos:position pos:line="28" pos:column="50"/></argument_list></call></expr>;<pos:position pos:line="28" pos:column="51"/></expr_stmt>
        <if pos:line="29" pos:column="9">if <condition pos:line="29" pos:column="12">( <expr><name pos:line="29" pos:column="14">c<pos:position pos:line="29" pos:column="15"/></name></expr> )<pos:position pos:line="29" pos:column="17"/></condition><then pos:line="29" pos:column="17"> <block pos:line="29" pos:column="18">{
            <return pos:line="30" pos:column="13">return <expr><name pos:line="30" pos:column="20">c<pos:position pos:line="30" pos:column="21"/></name></expr>;<pos:position pos:line="30" pos:column="22"/></return>
        }<pos:position pos:line="31" pos:column="10"/></block></then></if>
        <expr_stmt><expr><name pos:line="32" pos:column="9">frec<pos:position pos:line="32" pos:column="13"/></name> <operator pos:line="32" pos:column="14">=<pos:position pos:line="32" pos:column="15"/></operator> <call><name pos:line="32" pos:column="16">apr_hash_get<pos:position pos:line="32" pos:column="28"/></name><argument_list pos:line="32" pos:column="28">(<argument><expr><name><name pos:line="32" pos:column="29">cfg<pos:position pos:line="32" pos:column="32"/></name><operator pos:line="32" pos:column="32">-&gt;<pos:position pos:line="32" pos:column="37"/></operator><name pos:line="32" pos:column="34">live_filters<pos:position pos:line="32" pos:column="46"/></name></name></expr></argument>, <argument><expr><name pos:line="32" pos:column="48">fname<pos:position pos:line="32" pos:column="53"/></name></expr></argument>, <argument><expr><name pos:line="32" pos:column="55">APR_HASH_KEY_STRING<pos:position pos:line="32" pos:column="74"/></name></expr></argument>)<pos:position pos:line="32" pos:column="75"/></argument_list></call></expr>;<pos:position pos:line="32" pos:column="76"/></expr_stmt>
    }<pos:position pos:line="33" pos:column="6"/></block></then></if>

    <if pos:line="35" pos:column="5">if <condition pos:line="35" pos:column="8">(<expr><operator pos:line="35" pos:column="9">!<pos:position pos:line="35" pos:column="10"/></operator><name pos:line="35" pos:column="10">frec<pos:position pos:line="35" pos:column="14"/></name></expr>)<pos:position pos:line="35" pos:column="15"/></condition><then pos:line="35" pos:column="15"> <block pos:line="35" pos:column="16">{
        <return pos:line="36" pos:column="9">return <expr><call><name pos:line="36" pos:column="16">apr_psprintf<pos:position pos:line="36" pos:column="28"/></name><argument_list pos:line="36" pos:column="28">(<argument><expr><name><name pos:line="36" pos:column="29">cmd<pos:position pos:line="36" pos:column="32"/></name><operator pos:line="36" pos:column="32">-&gt;<pos:position pos:line="36" pos:column="37"/></operator><name pos:line="36" pos:column="34">pool<pos:position pos:line="36" pos:column="38"/></name></name></expr></argument>, <argument><expr><literal type="string" pos:line="36" pos:column="40">"Undeclared smart filter %s"<pos:position pos:line="36" pos:column="68"/></literal></expr></argument>, <argument><expr><name pos:line="36" pos:column="70">fname<pos:position pos:line="36" pos:column="75"/></name></expr></argument>)<pos:position pos:line="36" pos:column="76"/></argument_list></call></expr>;<pos:position pos:line="36" pos:column="77"/></return>
    }<pos:position pos:line="37" pos:column="6"/></block></then></if>

    <comment type="block" pos:line="39" pos:column="5">/* if provider has been registered, we can look it up */</comment>
    <expr_stmt><expr><name pos:line="40" pos:column="5">provider_frec<pos:position pos:line="40" pos:column="18"/></name> <operator pos:line="40" pos:column="19">=<pos:position pos:line="40" pos:column="20"/></operator> <call><name pos:line="40" pos:column="21">ap_get_output_filter_handle<pos:position pos:line="40" pos:column="48"/></name><argument_list pos:line="40" pos:column="48">(<argument><expr><name pos:line="40" pos:column="49">pname<pos:position pos:line="40" pos:column="54"/></name></expr></argument>)<pos:position pos:line="40" pos:column="55"/></argument_list></call></expr>;<pos:position pos:line="40" pos:column="56"/></expr_stmt>
    <if pos:line="41" pos:column="5">if <condition pos:line="41" pos:column="8">(<expr><operator pos:line="41" pos:column="9">!<pos:position pos:line="41" pos:column="10"/></operator><name pos:line="41" pos:column="10">provider_frec<pos:position pos:line="41" pos:column="23"/></name></expr>)<pos:position pos:line="41" pos:column="24"/></condition><then pos:line="41" pos:column="24"> <block pos:line="41" pos:column="25">{
        <expr_stmt><expr><name pos:line="42" pos:column="9">provider_frec<pos:position pos:line="42" pos:column="22"/></name> <operator pos:line="42" pos:column="23">=<pos:position pos:line="42" pos:column="24"/></operator> <call><name pos:line="42" pos:column="25">apr_hash_get<pos:position pos:line="42" pos:column="37"/></name><argument_list pos:line="42" pos:column="37">(<argument><expr><name><name pos:line="42" pos:column="38">cfg<pos:position pos:line="42" pos:column="41"/></name><operator pos:line="42" pos:column="41">-&gt;<pos:position pos:line="42" pos:column="46"/></operator><name pos:line="42" pos:column="43">live_filters<pos:position pos:line="42" pos:column="55"/></name></name></expr></argument>, <argument><expr><name pos:line="42" pos:column="57">pname<pos:position pos:line="42" pos:column="62"/></name></expr></argument>,
                                     <argument><expr><name pos:line="43" pos:column="38">APR_HASH_KEY_STRING<pos:position pos:line="43" pos:column="57"/></name></expr></argument>)<pos:position pos:line="43" pos:column="58"/></argument_list></call></expr>;<pos:position pos:line="43" pos:column="59"/></expr_stmt>
    }<pos:position pos:line="44" pos:column="6"/></block></then></if>
    <if pos:line="45" pos:column="5">if <condition pos:line="45" pos:column="8">(<expr><operator pos:line="45" pos:column="9">!<pos:position pos:line="45" pos:column="10"/></operator><name pos:line="45" pos:column="10">provider_frec<pos:position pos:line="45" pos:column="23"/></name></expr>)<pos:position pos:line="45" pos:column="24"/></condition><then pos:line="45" pos:column="24"> <block pos:line="45" pos:column="25">{
        <return pos:line="46" pos:column="9">return <expr><call><name pos:line="46" pos:column="16">apr_psprintf<pos:position pos:line="46" pos:column="28"/></name><argument_list pos:line="46" pos:column="28">(<argument><expr><name><name pos:line="46" pos:column="29">cmd<pos:position pos:line="46" pos:column="32"/></name><operator pos:line="46" pos:column="32">-&gt;<pos:position pos:line="46" pos:column="37"/></operator><name pos:line="46" pos:column="34">pool<pos:position pos:line="46" pos:column="38"/></name></name></expr></argument>, <argument><expr><literal type="string" pos:line="46" pos:column="40">"Unknown filter provider %s"<pos:position pos:line="46" pos:column="68"/></literal></expr></argument>, <argument><expr><name pos:line="46" pos:column="70">pname<pos:position pos:line="46" pos:column="75"/></name></expr></argument>)<pos:position pos:line="46" pos:column="76"/></argument_list></call></expr>;<pos:position pos:line="46" pos:column="77"/></return>
    }<pos:position pos:line="47" pos:column="6"/></block></then></if>

    <expr_stmt><expr><name pos:line="49" pos:column="5">provider<pos:position pos:line="49" pos:column="13"/></name> <operator pos:line="49" pos:column="14">=<pos:position pos:line="49" pos:column="15"/></operator> <call><name pos:line="49" pos:column="16">apr_palloc<pos:position pos:line="49" pos:column="26"/></name><argument_list pos:line="49" pos:column="26">(<argument><expr><name><name pos:line="49" pos:column="27">cmd<pos:position pos:line="49" pos:column="30"/></name><operator pos:line="49" pos:column="30">-&gt;<pos:position pos:line="49" pos:column="35"/></operator><name pos:line="49" pos:column="32">pool<pos:position pos:line="49" pos:column="36"/></name></name></expr></argument>, <argument><expr><sizeof pos:line="49" pos:column="38">sizeof<argument_list pos:line="49" pos:column="44">(<argument><expr><name pos:line="49" pos:column="45">ap_filter_provider_t<pos:position pos:line="49" pos:column="65"/></name></expr></argument>)<pos:position pos:line="49" pos:column="66"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="49" pos:column="67"/></argument_list></call></expr>;<pos:position pos:line="49" pos:column="68"/></expr_stmt>
    <if pos:line="50" pos:column="5">if <condition pos:line="50" pos:column="8">(<expr><operator pos:line="50" pos:column="9">*<pos:position pos:line="50" pos:column="10"/></operator><name pos:line="50" pos:column="10">match<pos:position pos:line="50" pos:column="15"/></name> <operator pos:line="50" pos:column="16">==<pos:position pos:line="50" pos:column="18"/></operator> <literal type="char" pos:line="50" pos:column="19">'!'<pos:position pos:line="50" pos:column="22"/></literal></expr>)<pos:position pos:line="50" pos:column="23"/></condition><then pos:line="50" pos:column="23"> <block pos:line="50" pos:column="24">{
        <expr_stmt><expr><name><name pos:line="51" pos:column="9">provider<pos:position pos:line="51" pos:column="17"/></name><operator pos:line="51" pos:column="17">-&gt;<pos:position pos:line="51" pos:column="22"/></operator></name><operator pos:line="51" pos:column="19">not<pos:position pos:line="51" pos:column="22"/></operator> <operator pos:line="51" pos:column="23">=<pos:position pos:line="51" pos:column="24"/></operator> <literal type="number" pos:line="51" pos:column="25">1<pos:position pos:line="51" pos:column="26"/></literal></expr>;<pos:position pos:line="51" pos:column="27"/></expr_stmt>
        <expr_stmt><expr><operator pos:line="52" pos:column="9">++<pos:position pos:line="52" pos:column="11"/></operator><name pos:line="52" pos:column="11">match<pos:position pos:line="52" pos:column="16"/></name></expr>;<pos:position pos:line="52" pos:column="17"/></expr_stmt>
    }<pos:position pos:line="53" pos:column="6"/></block></then>
    <else pos:line="54" pos:column="5">else <block pos:line="54" pos:column="10">{
        <expr_stmt><expr><name><name pos:line="55" pos:column="9">provider<pos:position pos:line="55" pos:column="17"/></name><operator pos:line="55" pos:column="17">-&gt;<pos:position pos:line="55" pos:column="22"/></operator></name><operator pos:line="55" pos:column="19">not<pos:position pos:line="55" pos:column="22"/></operator> <operator pos:line="55" pos:column="23">=<pos:position pos:line="55" pos:column="24"/></operator> <literal type="number" pos:line="55" pos:column="25">0<pos:position pos:line="55" pos:column="26"/></literal></expr>;<pos:position pos:line="55" pos:column="27"/></expr_stmt>
    }<pos:position pos:line="56" pos:column="6"/></block></else></if>

    <switch pos:line="58" pos:column="5">switch <condition pos:line="58" pos:column="12">(<expr><operator pos:line="58" pos:column="13">*<pos:position pos:line="58" pos:column="14"/></operator><name pos:line="58" pos:column="14">match<pos:position pos:line="58" pos:column="19"/></name><operator pos:line="58" pos:column="19">++<pos:position pos:line="58" pos:column="21"/></operator></expr>)<pos:position pos:line="58" pos:column="22"/></condition> <block pos:line="58" pos:column="23">{
    <case pos:line="59" pos:column="5">case <expr><literal type="char" pos:line="59" pos:column="10">'&lt;'<pos:position pos:line="59" pos:column="16"/></literal></expr>:<pos:position pos:line="59" pos:column="14"/></case>
        <if pos:line="60" pos:column="9">if <condition pos:line="60" pos:column="12">(<expr><operator pos:line="60" pos:column="13">*<pos:position pos:line="60" pos:column="14"/></operator><name pos:line="60" pos:column="14">match<pos:position pos:line="60" pos:column="19"/></name> <operator pos:line="60" pos:column="20">==<pos:position pos:line="60" pos:column="22"/></operator> <literal type="char" pos:line="60" pos:column="23">'='<pos:position pos:line="60" pos:column="26"/></literal></expr>)<pos:position pos:line="60" pos:column="27"/></condition><then pos:line="60" pos:column="27"> <block pos:line="60" pos:column="28">{
            <expr_stmt><expr><name><name pos:line="61" pos:column="13">provider<pos:position pos:line="61" pos:column="21"/></name><operator pos:line="61" pos:column="21">-&gt;<pos:position pos:line="61" pos:column="26"/></operator><name pos:line="61" pos:column="23">match_type<pos:position pos:line="61" pos:column="33"/></name></name> <operator pos:line="61" pos:column="34">=<pos:position pos:line="61" pos:column="35"/></operator> <name pos:line="61" pos:column="36">INT_LE<pos:position pos:line="61" pos:column="42"/></name></expr>;<pos:position pos:line="61" pos:column="43"/></expr_stmt>
            <expr_stmt><expr><operator pos:line="62" pos:column="13">++<pos:position pos:line="62" pos:column="15"/></operator><name pos:line="62" pos:column="15">match<pos:position pos:line="62" pos:column="20"/></name></expr>;<pos:position pos:line="62" pos:column="21"/></expr_stmt>
        }<pos:position pos:line="63" pos:column="10"/></block></then>
        <else pos:line="64" pos:column="9">else <block pos:line="64" pos:column="14">{
            <expr_stmt><expr><name><name pos:line="65" pos:column="13">provider<pos:position pos:line="65" pos:column="21"/></name><operator pos:line="65" pos:column="21">-&gt;<pos:position pos:line="65" pos:column="26"/></operator><name pos:line="65" pos:column="23">match_type<pos:position pos:line="65" pos:column="33"/></name></name> <operator pos:line="65" pos:column="34">=<pos:position pos:line="65" pos:column="35"/></operator> <name pos:line="65" pos:column="36">INT_LT<pos:position pos:line="65" pos:column="42"/></name></expr>;<pos:position pos:line="65" pos:column="43"/></expr_stmt>
        }<pos:position pos:line="66" pos:column="10"/></block></else></if>
        <expr_stmt><expr><name><name pos:line="67" pos:column="9">provider<pos:position pos:line="67" pos:column="17"/></name><operator pos:line="67" pos:column="17">-&gt;<pos:position pos:line="67" pos:column="22"/></operator><name pos:line="67" pos:column="19">match<pos:position pos:line="67" pos:column="24"/></name><operator pos:line="67" pos:column="24">.<pos:position pos:line="67" pos:column="25"/></operator><name pos:line="67" pos:column="25">number<pos:position pos:line="67" pos:column="31"/></name></name> <operator pos:line="67" pos:column="32">=<pos:position pos:line="67" pos:column="33"/></operator> <call><name pos:line="67" pos:column="34">atoi<pos:position pos:line="67" pos:column="38"/></name><argument_list pos:line="67" pos:column="38">(<argument><expr><name pos:line="67" pos:column="39">match<pos:position pos:line="67" pos:column="44"/></name></expr></argument>)<pos:position pos:line="67" pos:column="45"/></argument_list></call></expr>;<pos:position pos:line="67" pos:column="46"/></expr_stmt>
        <break pos:line="68" pos:column="9">break;<pos:position pos:line="68" pos:column="15"/></break>
    <case pos:line="69" pos:column="5">case <expr><literal type="char" pos:line="69" pos:column="10">'&gt;'<pos:position pos:line="69" pos:column="16"/></literal></expr>:<pos:position pos:line="69" pos:column="14"/></case>
        <if pos:line="70" pos:column="9">if <condition pos:line="70" pos:column="12">(<expr><operator pos:line="70" pos:column="13">*<pos:position pos:line="70" pos:column="14"/></operator><name pos:line="70" pos:column="14">match<pos:position pos:line="70" pos:column="19"/></name> <operator pos:line="70" pos:column="20">==<pos:position pos:line="70" pos:column="22"/></operator> <literal type="char" pos:line="70" pos:column="23">'='<pos:position pos:line="70" pos:column="26"/></literal></expr>)<pos:position pos:line="70" pos:column="27"/></condition><then pos:line="70" pos:column="27"> <block pos:line="70" pos:column="28">{
            <expr_stmt><expr><name><name pos:line="71" pos:column="13">provider<pos:position pos:line="71" pos:column="21"/></name><operator pos:line="71" pos:column="21">-&gt;<pos:position pos:line="71" pos:column="26"/></operator><name pos:line="71" pos:column="23">match_type<pos:position pos:line="71" pos:column="33"/></name></name> <operator pos:line="71" pos:column="34">=<pos:position pos:line="71" pos:column="35"/></operator> <name pos:line="71" pos:column="36">INT_GE<pos:position pos:line="71" pos:column="42"/></name></expr>;<pos:position pos:line="71" pos:column="43"/></expr_stmt>
            <expr_stmt><expr><operator pos:line="72" pos:column="13">++<pos:position pos:line="72" pos:column="15"/></operator><name pos:line="72" pos:column="15">match<pos:position pos:line="72" pos:column="20"/></name></expr>;<pos:position pos:line="72" pos:column="21"/></expr_stmt>
        }<pos:position pos:line="73" pos:column="10"/></block></then>
        <else pos:line="74" pos:column="9">else <block pos:line="74" pos:column="14">{
            <expr_stmt><expr><name><name pos:line="75" pos:column="13">provider<pos:position pos:line="75" pos:column="21"/></name><operator pos:line="75" pos:column="21">-&gt;<pos:position pos:line="75" pos:column="26"/></operator><name pos:line="75" pos:column="23">match_type<pos:position pos:line="75" pos:column="33"/></name></name> <operator pos:line="75" pos:column="34">=<pos:position pos:line="75" pos:column="35"/></operator> <name pos:line="75" pos:column="36">INT_GT<pos:position pos:line="75" pos:column="42"/></name></expr>;<pos:position pos:line="75" pos:column="43"/></expr_stmt>
        }<pos:position pos:line="76" pos:column="10"/></block></else></if>
        <expr_stmt><expr><name><name pos:line="77" pos:column="9">provider<pos:position pos:line="77" pos:column="17"/></name><operator pos:line="77" pos:column="17">-&gt;<pos:position pos:line="77" pos:column="22"/></operator><name pos:line="77" pos:column="19">match<pos:position pos:line="77" pos:column="24"/></name><operator pos:line="77" pos:column="24">.<pos:position pos:line="77" pos:column="25"/></operator><name pos:line="77" pos:column="25">number<pos:position pos:line="77" pos:column="31"/></name></name> <operator pos:line="77" pos:column="32">=<pos:position pos:line="77" pos:column="33"/></operator> <call><name pos:line="77" pos:column="34">atoi<pos:position pos:line="77" pos:column="38"/></name><argument_list pos:line="77" pos:column="38">(<argument><expr><name pos:line="77" pos:column="39">match<pos:position pos:line="77" pos:column="44"/></name></expr></argument>)<pos:position pos:line="77" pos:column="45"/></argument_list></call></expr>;<pos:position pos:line="77" pos:column="46"/></expr_stmt>
        <break pos:line="78" pos:column="9">break;<pos:position pos:line="78" pos:column="15"/></break>
    <case pos:line="79" pos:column="5">case <expr><literal type="char" pos:line="79" pos:column="10">'='<pos:position pos:line="79" pos:column="13"/></literal></expr>:<pos:position pos:line="79" pos:column="14"/></case>
        <expr_stmt><expr><name><name pos:line="80" pos:column="9">provider<pos:position pos:line="80" pos:column="17"/></name><operator pos:line="80" pos:column="17">-&gt;<pos:position pos:line="80" pos:column="22"/></operator><name pos:line="80" pos:column="19">match_type<pos:position pos:line="80" pos:column="29"/></name></name> <operator pos:line="80" pos:column="30">=<pos:position pos:line="80" pos:column="31"/></operator> <name pos:line="80" pos:column="32">INT_EQ<pos:position pos:line="80" pos:column="38"/></name></expr>;<pos:position pos:line="80" pos:column="39"/></expr_stmt>
        <expr_stmt><expr><name><name pos:line="81" pos:column="9">provider<pos:position pos:line="81" pos:column="17"/></name><operator pos:line="81" pos:column="17">-&gt;<pos:position pos:line="81" pos:column="22"/></operator><name pos:line="81" pos:column="19">match<pos:position pos:line="81" pos:column="24"/></name><operator pos:line="81" pos:column="24">.<pos:position pos:line="81" pos:column="25"/></operator><name pos:line="81" pos:column="25">number<pos:position pos:line="81" pos:column="31"/></name></name> <operator pos:line="81" pos:column="32">=<pos:position pos:line="81" pos:column="33"/></operator> <call><name pos:line="81" pos:column="34">atoi<pos:position pos:line="81" pos:column="38"/></name><argument_list pos:line="81" pos:column="38">(<argument><expr><name pos:line="81" pos:column="39">match<pos:position pos:line="81" pos:column="44"/></name></expr></argument>)<pos:position pos:line="81" pos:column="45"/></argument_list></call></expr>;<pos:position pos:line="81" pos:column="46"/></expr_stmt>
        <break pos:line="82" pos:column="9">break;<pos:position pos:line="82" pos:column="15"/></break>
    <case pos:line="83" pos:column="5">case <expr><literal type="char" pos:line="83" pos:column="10">'/'<pos:position pos:line="83" pos:column="13"/></literal></expr>:<pos:position pos:line="83" pos:column="14"/></case>
        <expr_stmt><expr><name><name pos:line="84" pos:column="9">provider<pos:position pos:line="84" pos:column="17"/></name><operator pos:line="84" pos:column="17">-&gt;<pos:position pos:line="84" pos:column="22"/></operator><name pos:line="84" pos:column="19">match_type<pos:position pos:line="84" pos:column="29"/></name></name> <operator pos:line="84" pos:column="30">=<pos:position pos:line="84" pos:column="31"/></operator> <name pos:line="84" pos:column="32">REGEX_MATCH<pos:position pos:line="84" pos:column="43"/></name></expr>;<pos:position pos:line="84" pos:column="44"/></expr_stmt>
        <expr_stmt><expr><name pos:line="85" pos:column="9">rxend<pos:position pos:line="85" pos:column="14"/></name> <operator pos:line="85" pos:column="15">=<pos:position pos:line="85" pos:column="16"/></operator> <call><name pos:line="85" pos:column="17">ap_strchr_c<pos:position pos:line="85" pos:column="28"/></name><argument_list pos:line="85" pos:column="28">(<argument><expr><name pos:line="85" pos:column="29">match<pos:position pos:line="85" pos:column="34"/></name></expr></argument>, <argument><expr><literal type="char" pos:line="85" pos:column="36">'/'<pos:position pos:line="85" pos:column="39"/></literal></expr></argument>)<pos:position pos:line="85" pos:column="40"/></argument_list></call></expr>;<pos:position pos:line="85" pos:column="41"/></expr_stmt>
        <if pos:line="86" pos:column="9">if <condition pos:line="86" pos:column="12">(<expr><operator pos:line="86" pos:column="13">!<pos:position pos:line="86" pos:column="14"/></operator><name pos:line="86" pos:column="14">rxend<pos:position pos:line="86" pos:column="19"/></name></expr>)<pos:position pos:line="86" pos:column="20"/></condition><then pos:line="86" pos:column="20"> <block pos:line="86" pos:column="21">{
              <return pos:line="87" pos:column="15">return <expr><literal type="string" pos:line="87" pos:column="22">"Bad regexp syntax"<pos:position pos:line="87" pos:column="41"/></literal></expr>;<pos:position pos:line="87" pos:column="42"/></return>
        }<pos:position pos:line="88" pos:column="10"/></block></then></if>
        <expr_stmt><expr><name pos:line="89" pos:column="9">flags<pos:position pos:line="89" pos:column="14"/></name> <operator pos:line="89" pos:column="15">=<pos:position pos:line="89" pos:column="16"/></operator> <name pos:line="89" pos:column="17">AP_REG_NOSUB<pos:position pos:line="89" pos:column="29"/></name></expr>;<pos:position pos:line="89" pos:column="30"/></expr_stmt>        <comment type="block" pos:line="89" pos:column="38">/* we're not mod_rewrite:-) */</comment>
        <for pos:line="90" pos:column="9">for <control pos:line="90" pos:column="13">(<init><expr><name pos:line="90" pos:column="14">c<pos:position pos:line="90" pos:column="15"/></name> <operator pos:line="90" pos:column="16">=<pos:position pos:line="90" pos:column="17"/></operator> <name pos:line="90" pos:column="18">rxend<pos:position pos:line="90" pos:column="23"/></name><operator pos:line="90" pos:column="23">+<pos:position pos:line="90" pos:column="24"/></operator><literal type="number" pos:line="90" pos:column="24">1<pos:position pos:line="90" pos:column="25"/></literal></expr>;<pos:position pos:line="90" pos:column="26"/></init> <condition><expr><operator pos:line="90" pos:column="27">*<pos:position pos:line="90" pos:column="28"/></operator><name pos:line="90" pos:column="28">c<pos:position pos:line="90" pos:column="29"/></name></expr>;<pos:position pos:line="90" pos:column="30"/></condition> <incr><expr><operator pos:line="90" pos:column="31">++<pos:position pos:line="90" pos:column="33"/></operator><name pos:line="90" pos:column="33">c<pos:position pos:line="90" pos:column="34"/></name></expr></incr>)<pos:position pos:line="90" pos:column="35"/></control> <block pos:line="90" pos:column="36">{
            <switch pos:line="91" pos:column="13">switch <condition pos:line="91" pos:column="20">(<expr><operator pos:line="91" pos:column="21">*<pos:position pos:line="91" pos:column="22"/></operator><name pos:line="91" pos:column="22">c<pos:position pos:line="91" pos:column="23"/></name></expr>)<pos:position pos:line="91" pos:column="24"/></condition> <block pos:line="91" pos:column="25">{
            <case pos:line="92" pos:column="13">case <expr><literal type="char" pos:line="92" pos:column="18">'i'<pos:position pos:line="92" pos:column="21"/></literal></expr>:<pos:position pos:line="92" pos:column="22"/></case> <expr_stmt><expr><name pos:line="92" pos:column="23">flags<pos:position pos:line="92" pos:column="28"/></name> <operator pos:line="92" pos:column="29">|=<pos:position pos:line="92" pos:column="31"/></operator> <name pos:line="92" pos:column="32">AP_REG_ICASE<pos:position pos:line="92" pos:column="44"/></name></expr>;<pos:position pos:line="92" pos:column="45"/></expr_stmt> <break pos:line="92" pos:column="46">break;<pos:position pos:line="92" pos:column="52"/></break>
            }<pos:position pos:line="93" pos:column="14"/></block></switch>
        }<pos:position pos:line="94" pos:column="10"/></block></for>
        <expr_stmt><expr><name><name pos:line="95" pos:column="9">provider<pos:position pos:line="95" pos:column="17"/></name><operator pos:line="95" pos:column="17">-&gt;<pos:position pos:line="95" pos:column="22"/></operator><name pos:line="95" pos:column="19">match<pos:position pos:line="95" pos:column="24"/></name><operator pos:line="95" pos:column="24">.<pos:position pos:line="95" pos:column="25"/></operator><name pos:line="95" pos:column="25">regex<pos:position pos:line="95" pos:column="30"/></name></name> <operator pos:line="95" pos:column="31">=<pos:position pos:line="95" pos:column="32"/></operator> <call><name pos:line="95" pos:column="33">ap_pregcomp<pos:position pos:line="95" pos:column="44"/></name><argument_list pos:line="95" pos:column="44">(<argument><expr><name><name pos:line="95" pos:column="45">cmd<pos:position pos:line="95" pos:column="48"/></name><operator pos:line="95" pos:column="48">-&gt;<pos:position pos:line="95" pos:column="53"/></operator><name pos:line="95" pos:column="50">pool<pos:position pos:line="95" pos:column="54"/></name></name></expr></argument>,
                                            <argument><expr><call><name pos:line="96" pos:column="45">apr_pstrndup<pos:position pos:line="96" pos:column="57"/></name><argument_list pos:line="96" pos:column="57">(<argument><expr><name><name pos:line="96" pos:column="58">cmd<pos:position pos:line="96" pos:column="61"/></name><operator pos:line="96" pos:column="61">-&gt;<pos:position pos:line="96" pos:column="66"/></operator><name pos:line="96" pos:column="63">pool<pos:position pos:line="96" pos:column="67"/></name></name></expr></argument>,
                                                         <argument><expr><name pos:line="97" pos:column="58">match<pos:position pos:line="97" pos:column="63"/></name></expr></argument>,
                                                         <argument><expr><name pos:line="98" pos:column="58">rxend<pos:position pos:line="98" pos:column="63"/></name><operator pos:line="98" pos:column="63">-<pos:position pos:line="98" pos:column="64"/></operator><name pos:line="98" pos:column="64">match<pos:position pos:line="98" pos:column="69"/></name></expr></argument>)<pos:position pos:line="98" pos:column="70"/></argument_list></call></expr></argument>,
                                            <argument><expr><name pos:line="99" pos:column="45">flags<pos:position pos:line="99" pos:column="50"/></name></expr></argument>)<pos:position pos:line="99" pos:column="51"/></argument_list></call></expr>;<pos:position pos:line="99" pos:column="52"/></expr_stmt>
        <break pos:line="100" pos:column="9">break;<pos:position pos:line="100" pos:column="15"/></break>
    <case pos:line="101" pos:column="5">case <expr><literal type="char" pos:line="101" pos:column="10">'*'<pos:position pos:line="101" pos:column="13"/></literal></expr>:<pos:position pos:line="101" pos:column="14"/></case>
        <expr_stmt><expr><name><name pos:line="102" pos:column="9">provider<pos:position pos:line="102" pos:column="17"/></name><operator pos:line="102" pos:column="17">-&gt;<pos:position pos:line="102" pos:column="22"/></operator><name pos:line="102" pos:column="19">match_type<pos:position pos:line="102" pos:column="29"/></name></name> <operator pos:line="102" pos:column="30">=<pos:position pos:line="102" pos:column="31"/></operator> <name pos:line="102" pos:column="32">DEFINED<pos:position pos:line="102" pos:column="39"/></name></expr>;<pos:position pos:line="102" pos:column="40"/></expr_stmt>
        <expr_stmt><expr><name><name pos:line="103" pos:column="9">provider<pos:position pos:line="103" pos:column="17"/></name><operator pos:line="103" pos:column="17">-&gt;<pos:position pos:line="103" pos:column="22"/></operator><name pos:line="103" pos:column="19">match<pos:position pos:line="103" pos:column="24"/></name><operator pos:line="103" pos:column="24">.<pos:position pos:line="103" pos:column="25"/></operator><name pos:line="103" pos:column="25">number<pos:position pos:line="103" pos:column="31"/></name></name> <operator pos:line="103" pos:column="32">=<pos:position pos:line="103" pos:column="33"/></operator> <operator pos:line="103" pos:column="34">-<pos:position pos:line="103" pos:column="35"/></operator><literal type="number" pos:line="103" pos:column="35">1<pos:position pos:line="103" pos:column="36"/></literal></expr>;<pos:position pos:line="103" pos:column="37"/></expr_stmt>
        <break pos:line="104" pos:column="9">break;<pos:position pos:line="104" pos:column="15"/></break>
    <case pos:line="105" pos:column="5">case <expr><literal type="char" pos:line="105" pos:column="10">'$'<pos:position pos:line="105" pos:column="13"/></literal></expr>:<pos:position pos:line="105" pos:column="14"/></case>
        <expr_stmt><expr><name><name pos:line="106" pos:column="9">provider<pos:position pos:line="106" pos:column="17"/></name><operator pos:line="106" pos:column="17">-&gt;<pos:position pos:line="106" pos:column="22"/></operator><name pos:line="106" pos:column="19">match_type<pos:position pos:line="106" pos:column="29"/></name></name> <operator pos:line="106" pos:column="30">=<pos:position pos:line="106" pos:column="31"/></operator> <name pos:line="106" pos:column="32">STRING_CONTAINS<pos:position pos:line="106" pos:column="47"/></name></expr>;<pos:position pos:line="106" pos:column="48"/></expr_stmt>
        <expr_stmt><expr><name pos:line="107" pos:column="9">str<pos:position pos:line="107" pos:column="12"/></name> <operator pos:line="107" pos:column="13">=<pos:position pos:line="107" pos:column="14"/></operator> <call><name pos:line="107" pos:column="15">apr_pstrdup<pos:position pos:line="107" pos:column="26"/></name><argument_list pos:line="107" pos:column="26">(<argument><expr><name><name pos:line="107" pos:column="27">cmd<pos:position pos:line="107" pos:column="30"/></name><operator pos:line="107" pos:column="30">-&gt;<pos:position pos:line="107" pos:column="35"/></operator><name pos:line="107" pos:column="32">pool<pos:position pos:line="107" pos:column="36"/></name></name></expr></argument>, <argument><expr><name pos:line="107" pos:column="38">match<pos:position pos:line="107" pos:column="43"/></name></expr></argument>)<pos:position pos:line="107" pos:column="44"/></argument_list></call></expr>;<pos:position pos:line="107" pos:column="45"/></expr_stmt>
        <expr_stmt><expr><call><name pos:line="108" pos:column="9">ap_str_tolower<pos:position pos:line="108" pos:column="23"/></name><argument_list pos:line="108" pos:column="23">(<argument><expr><name pos:line="108" pos:column="24">str<pos:position pos:line="108" pos:column="27"/></name></expr></argument>)<pos:position pos:line="108" pos:column="28"/></argument_list></call></expr>;<pos:position pos:line="108" pos:column="29"/></expr_stmt>
        <expr_stmt><expr><name><name pos:line="109" pos:column="9">provider<pos:position pos:line="109" pos:column="17"/></name><operator pos:line="109" pos:column="17">-&gt;<pos:position pos:line="109" pos:column="22"/></operator><name pos:line="109" pos:column="19">match<pos:position pos:line="109" pos:column="24"/></name><operator pos:line="109" pos:column="24">.<pos:position pos:line="109" pos:column="25"/></operator><name pos:line="109" pos:column="25">string<pos:position pos:line="109" pos:column="31"/></name></name> <operator pos:line="109" pos:column="32">=<pos:position pos:line="109" pos:column="33"/></operator> <name pos:line="109" pos:column="34">str<pos:position pos:line="109" pos:column="37"/></name></expr>;<pos:position pos:line="109" pos:column="38"/></expr_stmt>
        <break pos:line="110" pos:column="9">break;<pos:position pos:line="110" pos:column="15"/></break>
    <default pos:line="111" pos:column="5">default:<pos:position pos:line="111" pos:column="13"/></default>
        <expr_stmt><expr><name><name pos:line="112" pos:column="9">provider<pos:position pos:line="112" pos:column="17"/></name><operator pos:line="112" pos:column="17">-&gt;<pos:position pos:line="112" pos:column="22"/></operator><name pos:line="112" pos:column="19">match_type<pos:position pos:line="112" pos:column="29"/></name></name> <operator pos:line="112" pos:column="30">=<pos:position pos:line="112" pos:column="31"/></operator> <name pos:line="112" pos:column="32">STRING_MATCH<pos:position pos:line="112" pos:column="44"/></name></expr>;<pos:position pos:line="112" pos:column="45"/></expr_stmt>
        <expr_stmt><expr><name><name pos:line="113" pos:column="9">provider<pos:position pos:line="113" pos:column="17"/></name><operator pos:line="113" pos:column="17">-&gt;<pos:position pos:line="113" pos:column="22"/></operator><name pos:line="113" pos:column="19">match<pos:position pos:line="113" pos:column="24"/></name><operator pos:line="113" pos:column="24">.<pos:position pos:line="113" pos:column="25"/></operator><name pos:line="113" pos:column="25">string<pos:position pos:line="113" pos:column="31"/></name></name> <operator pos:line="113" pos:column="32">=<pos:position pos:line="113" pos:column="33"/></operator> <call><name pos:line="113" pos:column="34">apr_pstrdup<pos:position pos:line="113" pos:column="45"/></name><argument_list pos:line="113" pos:column="45">(<argument><expr><name><name pos:line="113" pos:column="46">cmd<pos:position pos:line="113" pos:column="49"/></name><operator pos:line="113" pos:column="49">-&gt;<pos:position pos:line="113" pos:column="54"/></operator><name pos:line="113" pos:column="51">pool<pos:position pos:line="113" pos:column="55"/></name></name></expr></argument>, <argument><expr><name pos:line="113" pos:column="57">match<pos:position pos:line="113" pos:column="62"/></name><operator pos:line="113" pos:column="62">-<pos:position pos:line="113" pos:column="63"/></operator><literal type="number" pos:line="113" pos:column="63">1<pos:position pos:line="113" pos:column="64"/></literal></expr></argument>)<pos:position pos:line="113" pos:column="65"/></argument_list></call></expr>;<pos:position pos:line="113" pos:column="66"/></expr_stmt>
        <break pos:line="114" pos:column="9">break;<pos:position pos:line="114" pos:column="15"/></break>
    }<pos:position pos:line="115" pos:column="6"/></block></switch>
    <expr_stmt><expr><name><name pos:line="116" pos:column="5">provider<pos:position pos:line="116" pos:column="13"/></name><operator pos:line="116" pos:column="13">-&gt;<pos:position pos:line="116" pos:column="18"/></operator><name pos:line="116" pos:column="15">frec<pos:position pos:line="116" pos:column="19"/></name></name> <operator pos:line="116" pos:column="20">=<pos:position pos:line="116" pos:column="21"/></operator> <name pos:line="116" pos:column="22">provider_frec<pos:position pos:line="116" pos:column="35"/></name></expr>;<pos:position pos:line="116" pos:column="36"/></expr_stmt>
    <expr_stmt><expr><name><name pos:line="117" pos:column="5">provider<pos:position pos:line="117" pos:column="13"/></name><operator pos:line="117" pos:column="13">-&gt;<pos:position pos:line="117" pos:column="18"/></operator><name pos:line="117" pos:column="15">next<pos:position pos:line="117" pos:column="19"/></name></name> <operator pos:line="117" pos:column="20">=<pos:position pos:line="117" pos:column="21"/></operator> <name><name pos:line="117" pos:column="22">frec<pos:position pos:line="117" pos:column="26"/></name><operator pos:line="117" pos:column="26">-&gt;<pos:position pos:line="117" pos:column="31"/></operator><name pos:line="117" pos:column="28">providers<pos:position pos:line="117" pos:column="37"/></name></name></expr>;<pos:position pos:line="117" pos:column="38"/></expr_stmt>
    <expr_stmt><expr><name><name pos:line="118" pos:column="5">frec<pos:position pos:line="118" pos:column="9"/></name><operator pos:line="118" pos:column="9">-&gt;<pos:position pos:line="118" pos:column="14"/></operator><name pos:line="118" pos:column="11">providers<pos:position pos:line="118" pos:column="20"/></name></name> <operator pos:line="118" pos:column="21">=<pos:position pos:line="118" pos:column="22"/></operator> <name pos:line="118" pos:column="23">provider<pos:position pos:line="118" pos:column="31"/></name></expr>;<pos:position pos:line="118" pos:column="32"/></expr_stmt>

    <comment type="block" pos:line="120" pos:column="5">/* determine what a filter will dispatch this provider on */</comment>
    <expr_stmt><expr><name pos:line="121" pos:column="5">eq<pos:position pos:line="121" pos:column="7"/></name> <operator pos:line="121" pos:column="8">=<pos:position pos:line="121" pos:column="9"/></operator> <call><name pos:line="121" pos:column="10">ap_strchr_c<pos:position pos:line="121" pos:column="21"/></name><argument_list pos:line="121" pos:column="21">(<argument><expr><name pos:line="121" pos:column="22">condition<pos:position pos:line="121" pos:column="31"/></name></expr></argument>, <argument><expr><literal type="char" pos:line="121" pos:column="33">'='<pos:position pos:line="121" pos:column="36"/></literal></expr></argument>)<pos:position pos:line="121" pos:column="37"/></argument_list></call></expr>;<pos:position pos:line="121" pos:column="38"/></expr_stmt>
    <if pos:line="122" pos:column="5">if <condition pos:line="122" pos:column="8">(<expr><name pos:line="122" pos:column="9">eq<pos:position pos:line="122" pos:column="11"/></name></expr>)<pos:position pos:line="122" pos:column="12"/></condition><then pos:line="122" pos:column="12"> <block pos:line="122" pos:column="13">{
        <expr_stmt><expr><name pos:line="123" pos:column="9">str<pos:position pos:line="123" pos:column="12"/></name> <operator pos:line="123" pos:column="13">=<pos:position pos:line="123" pos:column="14"/></operator> <call><name pos:line="123" pos:column="15">apr_pstrdup<pos:position pos:line="123" pos:column="26"/></name><argument_list pos:line="123" pos:column="26">(<argument><expr><name><name pos:line="123" pos:column="27">cmd<pos:position pos:line="123" pos:column="30"/></name><operator pos:line="123" pos:column="30">-&gt;<pos:position pos:line="123" pos:column="35"/></operator><name pos:line="123" pos:column="32">pool<pos:position pos:line="123" pos:column="36"/></name></name></expr></argument>, <argument><expr><name pos:line="123" pos:column="38">eq<pos:position pos:line="123" pos:column="40"/></name><operator pos:line="123" pos:column="40">+<pos:position pos:line="123" pos:column="41"/></operator><literal type="number" pos:line="123" pos:column="41">1<pos:position pos:line="123" pos:column="42"/></literal></expr></argument>)<pos:position pos:line="123" pos:column="43"/></argument_list></call></expr>;<pos:position pos:line="123" pos:column="44"/></expr_stmt>
        <if pos:line="124" pos:column="9">if <condition pos:line="124" pos:column="12">(<expr><operator pos:line="124" pos:column="13">!<pos:position pos:line="124" pos:column="14"/></operator><call><name pos:line="124" pos:column="14">strncasecmp<pos:position pos:line="124" pos:column="25"/></name><argument_list pos:line="124" pos:column="25">(<argument><expr><name pos:line="124" pos:column="26">condition<pos:position pos:line="124" pos:column="35"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="124" pos:column="37">"env="<pos:position pos:line="124" pos:column="43"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="124" pos:column="45">4<pos:position pos:line="124" pos:column="46"/></literal></expr></argument>)<pos:position pos:line="124" pos:column="47"/></argument_list></call></expr>)<pos:position pos:line="124" pos:column="48"/></condition><then pos:line="124" pos:column="48"> <block pos:line="124" pos:column="49">{
            <expr_stmt><expr><name><name pos:line="125" pos:column="13">provider<pos:position pos:line="125" pos:column="21"/></name><operator pos:line="125" pos:column="21">-&gt;<pos:position pos:line="125" pos:column="26"/></operator><name pos:line="125" pos:column="23">dispatch<pos:position pos:line="125" pos:column="31"/></name></name> <operator pos:line="125" pos:column="32">=<pos:position pos:line="125" pos:column="33"/></operator> <name pos:line="125" pos:column="34">SUBPROCESS_ENV<pos:position pos:line="125" pos:column="48"/></name></expr>;<pos:position pos:line="125" pos:column="49"/></expr_stmt>
        }<pos:position pos:line="126" pos:column="10"/></block></then>
        <elseif pos:line="127" pos:column="9">else <if pos:line="127" pos:column="14">if <condition pos:line="127" pos:column="17">(<expr><operator pos:line="127" pos:column="18">!<pos:position pos:line="127" pos:column="19"/></operator><call><name pos:line="127" pos:column="19">strncasecmp<pos:position pos:line="127" pos:column="30"/></name><argument_list pos:line="127" pos:column="30">(<argument><expr><name pos:line="127" pos:column="31">condition<pos:position pos:line="127" pos:column="40"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="127" pos:column="42">"req="<pos:position pos:line="127" pos:column="48"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="127" pos:column="50">4<pos:position pos:line="127" pos:column="51"/></literal></expr></argument>)<pos:position pos:line="127" pos:column="52"/></argument_list></call></expr>)<pos:position pos:line="127" pos:column="53"/></condition><then pos:line="127" pos:column="53"> <block pos:line="127" pos:column="54">{
            <macro><name pos:line="128" pos:column="13">provi<pos:position pos:line="128" pos:column="18"/></name></macro></block></then></if></elseif></if></block></then></if></block></function></unit>

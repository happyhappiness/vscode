<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/httpd/gumtree/httpd_repos_function_3478_httpd-2.2.22.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">int<pos:position pos:line="1" pos:column="4"/></name></type> <name pos:line="1" pos:column="5">apr_wastrtoastr<pos:position pos:line="1" pos:column="20"/></name><parameter_list pos:line="1" pos:column="20">(<parameter><decl><type><name pos:line="1" pos:column="21">char<pos:position pos:line="1" pos:column="25"/></name> <specifier pos:line="1" pos:column="26">const<pos:position pos:line="1" pos:column="31"/></specifier> <modifier pos:line="1" pos:column="32">*<pos:position pos:line="1" pos:column="33"/></modifier> <specifier pos:line="1" pos:column="34">const<pos:position pos:line="1" pos:column="39"/></specifier> <modifier pos:line="1" pos:column="40">*<pos:position pos:line="1" pos:column="41"/></modifier> <modifier pos:line="1" pos:column="42">*<pos:position pos:line="1" pos:column="43"/></modifier></type><name pos:line="1" pos:column="43">retarr<pos:position pos:line="1" pos:column="49"/></name></decl></parameter>, 
                    <parameter><decl><type><name pos:line="2" pos:column="21">wchar_t<pos:position pos:line="2" pos:column="28"/></name> <specifier pos:line="2" pos:column="29">const<pos:position pos:line="2" pos:column="34"/></specifier> <modifier pos:line="2" pos:column="35">*<pos:position pos:line="2" pos:column="36"/></modifier> <specifier pos:line="2" pos:column="37">const<pos:position pos:line="2" pos:column="42"/></specifier> <modifier pos:line="2" pos:column="43">*<pos:position pos:line="2" pos:column="44"/></modifier></type><name pos:line="2" pos:column="44">arr<pos:position pos:line="2" pos:column="47"/></name></decl></parameter>, <parameter><decl><type><name pos:line="2" pos:column="49">int<pos:position pos:line="2" pos:column="52"/></name></type> <name pos:line="2" pos:column="53">args<pos:position pos:line="2" pos:column="57"/></name></decl></parameter>)<pos:position pos:line="2" pos:column="58"/></parameter_list>
<block pos:line="3" pos:column="1">{
    <decl_stmt><decl><type><name pos:line="4" pos:column="5">apr_size_t<pos:position pos:line="4" pos:column="15"/></name></type> <name pos:line="4" pos:column="16">elesize<pos:position pos:line="4" pos:column="23"/></name> <init pos:line="4" pos:column="24">= <expr><literal type="number" pos:line="4" pos:column="26">0<pos:position pos:line="4" pos:column="27"/></literal></expr></init></decl>;<pos:position pos:line="4" pos:column="28"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="5" pos:column="5">char<pos:position pos:line="5" pos:column="9"/></name> <modifier pos:line="5" pos:column="10">*<pos:position pos:line="5" pos:column="11"/></modifier><modifier pos:line="5" pos:column="11">*<pos:position pos:line="5" pos:column="12"/></modifier></type><name pos:line="5" pos:column="12">newarr<pos:position pos:line="5" pos:column="18"/></name></decl>;<pos:position pos:line="5" pos:column="19"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="6" pos:column="5">char<pos:position pos:line="6" pos:column="9"/></name> <modifier pos:line="6" pos:column="10">*<pos:position pos:line="6" pos:column="11"/></modifier></type><name pos:line="6" pos:column="11">elements<pos:position pos:line="6" pos:column="19"/></name></decl>;<pos:position pos:line="6" pos:column="20"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="7" pos:column="5">char<pos:position pos:line="7" pos:column="9"/></name> <modifier pos:line="7" pos:column="10">*<pos:position pos:line="7" pos:column="11"/></modifier></type><name pos:line="7" pos:column="11">ele<pos:position pos:line="7" pos:column="14"/></name></decl>;<pos:position pos:line="7" pos:column="15"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="8" pos:column="5">int<pos:position pos:line="8" pos:column="8"/></name></type> <name pos:line="8" pos:column="9">arg<pos:position pos:line="8" pos:column="12"/></name></decl>;<pos:position pos:line="8" pos:column="13"/></decl_stmt>

    <if pos:line="10" pos:column="5">if <condition pos:line="10" pos:column="8">(<expr><name pos:line="10" pos:column="9">args<pos:position pos:line="10" pos:column="13"/></name> <operator pos:line="10" pos:column="14">&lt;<pos:position pos:line="10" pos:column="18"/></operator> <literal type="number" pos:line="10" pos:column="16">0<pos:position pos:line="10" pos:column="17"/></literal></expr>)<pos:position pos:line="10" pos:column="18"/></condition><then pos:line="10" pos:column="18"> <block pos:line="10" pos:column="19">{
        <for pos:line="11" pos:column="9">for <control pos:line="11" pos:column="13">(<init><expr><name pos:line="11" pos:column="14">args<pos:position pos:line="11" pos:column="18"/></name> <operator pos:line="11" pos:column="19">=<pos:position pos:line="11" pos:column="20"/></operator> <literal type="number" pos:line="11" pos:column="21">0<pos:position pos:line="11" pos:column="22"/></literal></expr>;<pos:position pos:line="11" pos:column="23"/></init> <condition><expr><name><name pos:line="11" pos:column="24">arr<pos:position pos:line="11" pos:column="27"/></name><index pos:line="11" pos:column="27">[<expr><name pos:line="11" pos:column="28">args<pos:position pos:line="11" pos:column="32"/></name></expr>]<pos:position pos:line="11" pos:column="33"/></index></name></expr>;<pos:position pos:line="11" pos:column="34"/></condition> <incr><expr><operator pos:line="11" pos:column="35">++<pos:position pos:line="11" pos:column="37"/></operator><name pos:line="11" pos:column="37">args<pos:position pos:line="11" pos:column="41"/></name></expr></incr>)<pos:position pos:line="11" pos:column="42"/></control>
            <block type="pseudo"><empty_stmt pos:line="12" pos:column="13">;<pos:position pos:line="12" pos:column="14"/></empty_stmt></block></for>
    }<pos:position pos:line="13" pos:column="6"/></block></then></if>

    <expr_stmt><expr><name pos:line="15" pos:column="5">newarr<pos:position pos:line="15" pos:column="11"/></name> <operator pos:line="15" pos:column="12">=<pos:position pos:line="15" pos:column="13"/></operator> <call><name pos:line="15" pos:column="14">apr_malloc_dbg<pos:position pos:line="15" pos:column="28"/></name><argument_list pos:line="15" pos:column="28">(<argument><expr><operator pos:line="15" pos:column="29">(<pos:position pos:line="15" pos:column="30"/></operator><name pos:line="15" pos:column="30">args<pos:position pos:line="15" pos:column="34"/></name> <operator pos:line="15" pos:column="35">+<pos:position pos:line="15" pos:column="36"/></operator> <literal type="number" pos:line="15" pos:column="37">1<pos:position pos:line="15" pos:column="38"/></literal><operator pos:line="15" pos:column="38">)<pos:position pos:line="15" pos:column="39"/></operator> <operator pos:line="15" pos:column="40">*<pos:position pos:line="15" pos:column="41"/></operator> <sizeof pos:line="15" pos:column="42">sizeof<argument_list pos:line="15" pos:column="48">(<argument><expr><name pos:line="15" pos:column="49">char<pos:position pos:line="15" pos:column="53"/></name> <operator pos:line="15" pos:column="54">*<pos:position pos:line="15" pos:column="55"/></operator></expr></argument>)<pos:position pos:line="15" pos:column="56"/></argument_list></sizeof></expr></argument>,
                            <argument><expr><name pos:line="16" pos:column="29">__FILE__<pos:position pos:line="16" pos:column="37"/></name></expr></argument>, <argument><expr><name pos:line="16" pos:column="39">__LINE__<pos:position pos:line="16" pos:column="47"/></name></expr></argument>)<pos:position pos:line="16" pos:column="48"/></argument_list></call></expr>;<pos:position pos:line="16" pos:column="49"/></expr_stmt>

    <for pos:line="18" pos:column="5">for <control pos:line="18" pos:column="9">(<init><expr><name pos:line="18" pos:column="10">arg<pos:position pos:line="18" pos:column="13"/></name> <operator pos:line="18" pos:column="14">=<pos:position pos:line="18" pos:column="15"/></operator> <literal type="number" pos:line="18" pos:column="16">0<pos:position pos:line="18" pos:column="17"/></literal></expr>;<pos:position pos:line="18" pos:column="18"/></init> <condition><expr><name pos:line="18" pos:column="19">arg<pos:position pos:line="18" pos:column="22"/></name> <operator pos:line="18" pos:column="23">&lt;<pos:position pos:line="18" pos:column="27"/></operator> <name pos:line="18" pos:column="25">args<pos:position pos:line="18" pos:column="29"/></name></expr>;<pos:position pos:line="18" pos:column="30"/></condition> <incr><expr><operator pos:line="18" pos:column="31">++<pos:position pos:line="18" pos:column="33"/></operator><name pos:line="18" pos:column="33">arg<pos:position pos:line="18" pos:column="36"/></name></expr></incr>)<pos:position pos:line="18" pos:column="37"/></control> <block pos:line="18" pos:column="38">{
        <expr_stmt><expr><name><name pos:line="19" pos:column="9">newarr<pos:position pos:line="19" pos:column="15"/></name><index pos:line="19" pos:column="15">[<expr><name pos:line="19" pos:column="16">arg<pos:position pos:line="19" pos:column="19"/></name></expr>]<pos:position pos:line="19" pos:column="20"/></index></name> <operator pos:line="19" pos:column="21">=<pos:position pos:line="19" pos:column="22"/></operator> <operator pos:line="19" pos:column="23">(<pos:position pos:line="19" pos:column="24"/></operator><name pos:line="19" pos:column="24">void<pos:position pos:line="19" pos:column="28"/></name><operator pos:line="19" pos:column="28">*<pos:position pos:line="19" pos:column="29"/></operator><operator pos:line="19" pos:column="29">)<pos:position pos:line="19" pos:column="30"/></operator><operator pos:line="19" pos:column="30">(<pos:position pos:line="19" pos:column="31"/></operator><call><name pos:line="19" pos:column="31">wcslen<pos:position pos:line="19" pos:column="37"/></name><argument_list pos:line="19" pos:column="37">(<argument><expr><name><name pos:line="19" pos:column="38">arr<pos:position pos:line="19" pos:column="41"/></name><index pos:line="19" pos:column="41">[<expr><name pos:line="19" pos:column="42">arg<pos:position pos:line="19" pos:column="45"/></name></expr>]<pos:position pos:line="19" pos:column="46"/></index></name></expr></argument>)<pos:position pos:line="19" pos:column="47"/></argument_list></call> <operator pos:line="19" pos:column="48">+<pos:position pos:line="19" pos:column="49"/></operator> <literal type="number" pos:line="19" pos:column="50">1<pos:position pos:line="19" pos:column="51"/></literal><operator pos:line="19" pos:column="51">)<pos:position pos:line="19" pos:column="52"/></operator></expr>;<pos:position pos:line="19" pos:column="53"/></expr_stmt>
        <expr_stmt><expr><name pos:line="20" pos:column="9">elesize<pos:position pos:line="20" pos:column="16"/></name> <operator pos:line="20" pos:column="17">+=<pos:position pos:line="20" pos:column="19"/></operator> <operator pos:line="20" pos:column="20">(<pos:position pos:line="20" pos:column="21"/></operator><name pos:line="20" pos:column="21">apr_size_t<pos:position pos:line="20" pos:column="31"/></name><operator pos:line="20" pos:column="31">)<pos:position pos:line="20" pos:column="32"/></operator><name><name pos:line="20" pos:column="32">newarr<pos:position pos:line="20" pos:column="38"/></name><index pos:line="20" pos:column="38">[<expr><name pos:line="20" pos:column="39">arg<pos:position pos:line="20" pos:column="42"/></name></expr>]<pos:position pos:line="20" pos:column="43"/></index></name></expr>;<pos:position pos:line="20" pos:column="44"/></expr_stmt>
    }<pos:position pos:line="21" pos:column="6"/></block></for>

    <comment type="block" pos:line="23" pos:column="5">/* This is a safe max allocation, we will realloc after
     * processing and return the excess to the free store.
     * 3 ucs bytes hold any single wchar_t value (16 bits)
     * 4 ucs bytes will hold a wchar_t pair value (20 bits)
     */</comment>
    <expr_stmt><expr><name pos:line="28" pos:column="5">elesize<pos:position pos:line="28" pos:column="12"/></name> <operator pos:line="28" pos:column="13">=<pos:position pos:line="28" pos:column="14"/></operator> <name pos:line="28" pos:column="15">elesize<pos:position pos:line="28" pos:column="22"/></name> <operator pos:line="28" pos:column="23">*<pos:position pos:line="28" pos:column="24"/></operator> <literal type="number" pos:line="28" pos:column="25">3<pos:position pos:line="28" pos:column="26"/></literal> <operator pos:line="28" pos:column="27">+<pos:position pos:line="28" pos:column="28"/></operator> <literal type="number" pos:line="28" pos:column="29">1<pos:position pos:line="28" pos:column="30"/></literal></expr>;<pos:position pos:line="28" pos:column="31"/></expr_stmt>
    <expr_stmt><expr><name pos:line="29" pos:column="5">ele<pos:position pos:line="29" pos:column="8"/></name> <operator pos:line="29" pos:column="9">=<pos:position pos:line="29" pos:column="10"/></operator> <name pos:line="29" pos:column="11">elements<pos:position pos:line="29" pos:column="19"/></name> <operator pos:line="29" pos:column="20">=<pos:position pos:line="29" pos:column="21"/></operator> <call><name pos:line="29" pos:column="22">apr_malloc_dbg<pos:position pos:line="29" pos:column="36"/></name><argument_list pos:line="29" pos:column="36">(<argument><expr><name pos:line="29" pos:column="37">elesize<pos:position pos:line="29" pos:column="44"/></name> <operator pos:line="29" pos:column="45">*<pos:position pos:line="29" pos:column="46"/></operator> <sizeof pos:line="29" pos:column="47">sizeof<argument_list pos:line="29" pos:column="53">(<argument><expr><name pos:line="29" pos:column="54">char<pos:position pos:line="29" pos:column="58"/></name></expr></argument>)<pos:position pos:line="29" pos:column="59"/></argument_list></sizeof></expr></argument>,
                                    <argument><expr><name pos:line="30" pos:column="37">__FILE__<pos:position pos:line="30" pos:column="45"/></name></expr></argument>, <argument><expr><name pos:line="30" pos:column="47">__LINE__<pos:position pos:line="30" pos:column="55"/></name></expr></argument>)<pos:position pos:line="30" pos:column="56"/></argument_list></call></expr>;<pos:position pos:line="30" pos:column="57"/></expr_stmt>

    <for pos:line="32" pos:column="5">for <control pos:line="32" pos:column="9">(<init><expr><name pos:line="32" pos:column="10">arg<pos:position pos:line="32" pos:column="13"/></name> <operator pos:line="32" pos:column="14">=<pos:position pos:line="32" pos:column="15"/></operator> <literal type="number" pos:line="32" pos:column="16">0<pos:position pos:line="32" pos:column="17"/></literal></expr>;<pos:position pos:line="32" pos:column="18"/></init> <condition><expr><name pos:line="32" pos:column="19">arg<pos:position pos:line="32" pos:column="22"/></name> <operator pos:line="32" pos:column="23">&lt;<pos:position pos:line="32" pos:column="27"/></operator> <name pos:line="32" pos:column="25">args<pos:position pos:line="32" pos:column="29"/></name></expr>;<pos:position pos:line="32" pos:column="30"/></condition> <incr><expr><operator pos:line="32" pos:column="31">++<pos:position pos:line="32" pos:column="33"/></operator><name pos:line="32" pos:column="33">arg<pos:position pos:line="32" pos:column="36"/></name></expr></incr>)<pos:position pos:line="32" pos:column="37"/></control> <block pos:line="32" pos:column="38">{
        <decl_stmt><decl><type><name pos:line="33" pos:column="9">apr_size_t<pos:position pos:line="33" pos:column="19"/></name></type> <name pos:line="33" pos:column="20">len<pos:position pos:line="33" pos:column="23"/></name> <init pos:line="33" pos:column="24">= <expr><operator pos:line="33" pos:column="26">(<pos:position pos:line="33" pos:column="27"/></operator><name pos:line="33" pos:column="27">apr_size_t<pos:position pos:line="33" pos:column="37"/></name><operator pos:line="33" pos:column="37">)<pos:position pos:line="33" pos:column="38"/></operator><name><name pos:line="33" pos:column="38">newarr<pos:position pos:line="33" pos:column="44"/></name><index pos:line="33" pos:column="44">[<expr><name pos:line="33" pos:column="45">arg<pos:position pos:line="33" pos:column="48"/></name></expr>]<pos:position pos:line="33" pos:column="49"/></index></name></expr></init></decl>;<pos:position pos:line="33" pos:column="50"/></decl_stmt>
        <decl_stmt><decl><type><name pos:line="34" pos:column="9">apr_size_t<pos:position pos:line="34" pos:column="19"/></name></type> <name pos:line="34" pos:column="20">newlen<pos:position pos:line="34" pos:column="26"/></name> <init pos:line="34" pos:column="27">= <expr><name pos:line="34" pos:column="29">elesize<pos:position pos:line="34" pos:column="36"/></name></expr></init></decl>;<pos:position pos:line="34" pos:column="37"/></decl_stmt>

        <expr_stmt><expr><name><name pos:line="36" pos:column="9">newarr<pos:position pos:line="36" pos:column="15"/></name><index pos:line="36" pos:column="15">[<expr><name pos:line="36" pos:column="16">arg<pos:position pos:line="36" pos:column="19"/></name></expr>]<pos:position pos:line="36" pos:column="20"/></index></name> <operator pos:line="36" pos:column="21">=<pos:position pos:line="36" pos:column="22"/></operator> <name pos:line="36" pos:column="23">ele<pos:position pos:line="36" pos:column="26"/></name></expr>;<pos:position pos:line="36" pos:column="27"/></expr_stmt>
        <expr_stmt><expr><operator pos:line="37" pos:column="9">(<pos:position pos:line="37" pos:column="10"/></operator><name pos:line="37" pos:column="10">void<pos:position pos:line="37" pos:column="14"/></name><operator pos:line="37" pos:column="14">)<pos:position pos:line="37" pos:column="15"/></operator><call><name pos:line="37" pos:column="15">apr_conv_ucs2_to_utf8<pos:position pos:line="37" pos:column="36"/></name><argument_list pos:line="37" pos:column="36">(<argument><expr><name><name pos:line="37" pos:column="37">arr<pos:position pos:line="37" pos:column="40"/></name><index pos:line="37" pos:column="40">[<expr><name pos:line="37" pos:column="41">arg<pos:position pos:line="37" pos:column="44"/></name></expr>]<pos:position pos:line="37" pos:column="45"/></index></name></expr></argument>, <argument><expr><operator pos:line="37" pos:column="47">&amp;<pos:position pos:line="37" pos:column="52"/></operator><name pos:line="37" pos:column="48">len<pos:position pos:line="37" pos:column="51"/></name></expr></argument>,
                                    <argument><expr><name><name pos:line="38" pos:column="37">newarr<pos:position pos:line="38" pos:column="43"/></name><index pos:line="38" pos:column="43">[<expr><name pos:line="38" pos:column="44">arg<pos:position pos:line="38" pos:column="47"/></name></expr>]<pos:position pos:line="38" pos:column="48"/></index></name></expr></argument>, <argument><expr><operator pos:line="38" pos:column="50">&amp;<pos:position pos:line="38" pos:column="55"/></operator><name pos:line="38" pos:column="51">elesize<pos:position pos:line="38" pos:column="58"/></name></expr></argument>)<pos:position pos:line="38" pos:column="59"/></argument_list></call></expr>;<pos:position pos:line="38" pos:column="60"/></expr_stmt>

        <expr_stmt><expr><name pos:line="40" pos:column="9">newlen<pos:position pos:line="40" pos:column="15"/></name> <operator pos:line="40" pos:column="16">-=<pos:position pos:line="40" pos:column="18"/></operator> <name pos:line="40" pos:column="19">elesize<pos:position pos:line="40" pos:column="26"/></name></expr>;<pos:position pos:line="40" pos:column="27"/></expr_stmt>
        <expr_stmt><expr><name pos:line="41" pos:column="9">ele<pos:position pos:line="41" pos:column="12"/></name> <operator pos:line="41" pos:column="13">+=<pos:position pos:line="41" pos:column="15"/></operator> <name pos:line="41" pos:column="16">newlen<pos:position pos:line="41" pos:column="22"/></name></expr>;<pos:position pos:line="41" pos:column="23"/></expr_stmt>
        <expr_stmt><expr><call><name pos:line="42" pos:column="9">assert<pos:position pos:line="42" pos:column="15"/></name><argument_list pos:line="42" pos:column="15">(<argument><expr><name pos:line="42" pos:column="16">elesize<pos:position pos:line="42" pos:column="23"/></name> <operator pos:line="42" pos:column="24">&amp;&amp;<pos:position pos:line="42" pos:column="34"/></operator> <operator pos:line="42" pos:column="27">(<pos:position pos:line="42" pos:column="28"/></operator><name pos:line="42" pos:column="28">len<pos:position pos:line="42" pos:column="31"/></name> <operator pos:line="42" pos:column="32">==<pos:position pos:line="42" pos:column="34"/></operator> <literal type="number" pos:line="42" pos:column="35">0<pos:position pos:line="42" pos:column="36"/></literal><operator pos:line="42" pos:column="36">)<pos:position pos:line="42" pos:column="37"/></operator></expr></argument>)<pos:position pos:line="42" pos:column="38"/></argument_list></call></expr>;<pos:position pos:line="42" pos:column="39"/></expr_stmt>
    }<pos:position pos:line="43" pos:column="6"/></block></for>

    <expr_stmt><expr><name><name pos:line="45" pos:column="5">newarr<pos:position pos:line="45" pos:column="11"/></name><index pos:line="45" pos:column="11">[<expr><name pos:line="45" pos:column="12">arg<pos:position pos:line="45" pos:column="15"/></name></expr>]<pos:position pos:line="45" pos:column="16"/></index></name> <operator pos:line="45" pos:column="17">=<pos:position pos:line="45" pos:column="18"/></operator> <name pos:line="45" pos:column="19">NULL<pos:position pos:line="45" pos:column="23"/></name></expr>;<pos:position pos:line="45" pos:column="24"/></expr_stmt>
    <expr_stmt><expr><operator pos:line="46" pos:column="5">*<pos:position pos:line="46" pos:column="6"/></operator><operator pos:line="46" pos:column="6">(<pos:position pos:line="46" pos:column="7"/></operator><name pos:line="46" pos:column="7">ele<pos:position pos:line="46" pos:column="10"/></name><operator pos:line="46" pos:column="10">++<pos:position pos:line="46" pos:column="12"/></operator><operator pos:line="46" pos:column="12">)<pos:position pos:line="46" pos:column="13"/></operator> <operator pos:line="46" pos:column="14">=<pos:position pos:line="46" pos:column="15"/></operator> <literal type="char" pos:line="46" pos:column="16">'\0'<pos:position pos:line="46" pos:column="20"/></literal></expr>;<pos:position pos:line="46" pos:column="21"/></expr_stmt>

    <comment type="block" pos:line="48" pos:column="5">/* Return to the free store if the heap realloc is the least bit optimized
     */</comment>
    <expr_stmt><expr><name pos:line="50" pos:column="5">ele<pos:position pos:line="50" pos:column="8"/></name> <operator pos:line="50" pos:column="9">=<pos:position pos:line="50" pos:column="10"/></operator> <call><name pos:line="50" pos:column="11">apr_realloc_dbg<pos:position pos:line="50" pos:column="26"/></name><argument_list pos:line="50" pos:column="26">(<argument><expr><name pos:line="50" pos:column="27">elements<pos:position pos:line="50" pos:column="35"/></name></expr></argument>, <argument><expr><name pos:line="50" pos:column="37">ele<pos:position pos:line="50" pos:column="40"/></name> <operator pos:line="50" pos:column="41">-<pos:position pos:line="50" pos:column="42"/></operator> <name pos:line="50" pos:column="43">elements<pos:position pos:line="50" pos:column="51"/></name></expr></argument>,
                          <argument><expr><name pos:line="51" pos:column="27">__FILE__<pos:position pos:line="51" pos:column="35"/></name></expr></argument>, <argument><expr><name pos:line="51" pos:column="37">__LINE__<pos:position pos:line="51" pos:column="45"/></name></expr></argument>)<pos:position pos:line="51" pos:column="46"/></argument_list></call></expr>;<pos:position pos:line="51" pos:column="47"/></expr_stmt>

    <if pos:line="53" pos:column="5">if <condition pos:line="53" pos:column="8">(<expr><name pos:line="53" pos:column="9">ele<pos:position pos:line="53" pos:column="12"/></name> <operator pos:line="53" pos:column="13">!=<pos:position pos:line="53" pos:column="15"/></operator> <name pos:line="53" pos:column="16">elements<pos:position pos:line="53" pos:column="24"/></name></expr>)<pos:position pos:line="53" pos:column="25"/></condition><then pos:line="53" pos:column="25"> <block pos:line="53" pos:column="26">{
        <decl_stmt><decl><type><name pos:line="54" pos:column="9">apr_size_t<pos:position pos:line="54" pos:column="19"/></name></type> <name pos:line="54" pos:column="20">diff<pos:position pos:line="54" pos:column="24"/></name> <init pos:line="54" pos:column="25">= <expr><name pos:line="54" pos:column="27">ele<pos:position pos:line="54" pos:column="30"/></name> <operator pos:line="54" pos:column="31">-<pos:position pos:line="54" pos:column="32"/></operator> <name pos:line="54" pos:column="33">elements<pos:position pos:line="54" pos:column="41"/></name></expr></init></decl>;<pos:position pos:line="54" pos:column="42"/></decl_stmt>
        <for pos:line="55" pos:column="9">for <control pos:line="55" pos:column="13">(<init><expr><name pos:line="55" pos:column="14">arg<pos:position pos:line="55" pos:column="17"/></name> <operator pos:line="55" pos:column="18">=<pos:position pos:line="55" pos:column="19"/></operator> <literal type="number" pos:line="55" pos:column="20">0<pos:position pos:line="55" pos:column="21"/></literal></expr>;<pos:position pos:line="55" pos:column="22"/></init> <condition><expr><name pos:line="55" pos:column="23">arg<pos:position pos:line="55" pos:column="26"/></name> <operator pos:line="55" pos:column="27">&lt;<pos:position pos:line="55" pos:column="31"/></operator> <name pos:line="55" pos:column="29">args<pos:position pos:line="55" pos:column="33"/></name></expr>;<pos:position pos:line="55" pos:column="34"/></condition> <incr><expr><operator pos:line="55" pos:column="35">++<pos:position pos:line="55" pos:column="37"/></operator><name pos:line="55" pos:column="37">arg<pos:position pos:line="55" pos:column="40"/></name></expr></incr>)<pos:position pos:line="55" pos:column="41"/></control> <block pos:line="55" pos:column="42">{
            <expr_stmt><expr><name><name pos:line="56" pos:column="13">newarr<pos:position pos:line="56" pos:column="19"/></name><index pos:line="56" pos:column="19">[<expr><name pos:line="56" pos:column="20">arg<pos:position pos:line="56" pos:column="23"/></name></expr>]<pos:position pos:line="56" pos:column="24"/></index></name> <operator pos:line="56" pos:column="25">+=<pos:position pos:line="56" pos:column="27"/></operator> <name pos:line="56" pos:column="28">diff<pos:position pos:line="56" pos:column="32"/></name></expr>;<pos:position pos:line="56" pos:column="33"/></expr_stmt>
        }<pos:position pos:line="57" pos:column="10"/></block></for>
    }<pos:position pos:line="58" pos:column="6"/></block></then></if>

    <expr_stmt><expr><operator pos:line="60" pos:column="5">*<pos:position pos:line="60" pos:column="6"/></operator><name pos:line="60" pos:column="6">retarr<pos:position pos:line="60" pos:column="12"/></name> <operator pos:line="60" pos:column="13">=<pos:position pos:line="60" pos:column="14"/></operator> <operator pos:line="60" pos:column="15">(<pos:position pos:line="60" pos:column="16"/></operator><name pos:line="60" pos:column="16">char<pos:position pos:line="60" pos:column="20"/></name> <specifier pos:line="60" pos:column="21">const<pos:position pos:line="60" pos:column="26"/></specifier> <operator pos:line="60" pos:column="27">*<pos:position pos:line="60" pos:column="28"/></operator> <specifier pos:line="60" pos:column="29">const<pos:position pos:line="60" pos:column="34"/></specifier> <operator pos:line="60" pos:column="35">*<pos:position pos:line="60" pos:column="36"/></operator><operator pos:line="60" pos:column="36">)<pos:position pos:line="60" pos:column="37"/></operator><name pos:line="60" pos:column="37">newarr<pos:position pos:line="60" pos:column="43"/></name></expr>;<pos:position pos:line="60" pos:column="44"/></expr_stmt>
    <return pos:line="61" pos:column="5">return <expr><name pos:line="61" pos:column="12">args<pos:position pos:line="61" pos:column="16"/></name></expr>;<pos:position pos:line="61" pos:column="17"/></return>
}<pos:position pos:line="62" pos:column="2"/></block></function></unit>

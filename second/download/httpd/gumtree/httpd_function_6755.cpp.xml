<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/httpd/gumtree/httpd_function_6755.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">conn_rec<pos:position pos:line="1" pos:column="9"/></name> <modifier pos:line="1" pos:column="10">*<pos:position pos:line="1" pos:column="11"/></modifier></type><name pos:line="1" pos:column="11">h2_slave_create<pos:position pos:line="1" pos:column="26"/></name><parameter_list pos:line="1" pos:column="26">(<parameter><decl><type><name pos:line="1" pos:column="27">conn_rec<pos:position pos:line="1" pos:column="35"/></name> <modifier pos:line="1" pos:column="36">*<pos:position pos:line="1" pos:column="37"/></modifier></type><name pos:line="1" pos:column="37">master<pos:position pos:line="1" pos:column="43"/></name></decl></parameter>, <parameter><decl><type><name pos:line="1" pos:column="45">int<pos:position pos:line="1" pos:column="48"/></name></type> <name pos:line="1" pos:column="49">slave_id<pos:position pos:line="1" pos:column="57"/></name></decl></parameter>, <parameter><decl><type><name pos:line="1" pos:column="59">apr_pool_t<pos:position pos:line="1" pos:column="69"/></name> <modifier pos:line="1" pos:column="70">*<pos:position pos:line="1" pos:column="71"/></modifier></type><name pos:line="1" pos:column="71">parent<pos:position pos:line="1" pos:column="77"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="78"/></parameter_list>
<block pos:line="2" pos:column="1">{
    <decl_stmt><decl><type><name pos:line="3" pos:column="5">apr_allocator_t<pos:position pos:line="3" pos:column="20"/></name> <modifier pos:line="3" pos:column="21">*<pos:position pos:line="3" pos:column="22"/></modifier></type><name pos:line="3" pos:column="22">allocator<pos:position pos:line="3" pos:column="31"/></name></decl>;<pos:position pos:line="3" pos:column="32"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="4" pos:column="5">apr_status_t<pos:position pos:line="4" pos:column="17"/></name></type> <name pos:line="4" pos:column="18">status<pos:position pos:line="4" pos:column="24"/></name></decl>;<pos:position pos:line="4" pos:column="25"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="5" pos:column="5">apr_pool_t<pos:position pos:line="5" pos:column="15"/></name> <modifier pos:line="5" pos:column="16">*<pos:position pos:line="5" pos:column="17"/></modifier></type><name pos:line="5" pos:column="17">pool<pos:position pos:line="5" pos:column="21"/></name></decl>;<pos:position pos:line="5" pos:column="22"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="6" pos:column="5">conn_rec<pos:position pos:line="6" pos:column="13"/></name> <modifier pos:line="6" pos:column="14">*<pos:position pos:line="6" pos:column="15"/></modifier></type><name pos:line="6" pos:column="15">c<pos:position pos:line="6" pos:column="16"/></name></decl>;<pos:position pos:line="6" pos:column="17"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="7" pos:column="5">void<pos:position pos:line="7" pos:column="9"/></name> <modifier pos:line="7" pos:column="10">*<pos:position pos:line="7" pos:column="11"/></modifier></type><name pos:line="7" pos:column="11">cfg<pos:position pos:line="7" pos:column="14"/></name></decl>;<pos:position pos:line="7" pos:column="15"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="8" pos:column="5">module<pos:position pos:line="8" pos:column="11"/></name> <modifier pos:line="8" pos:column="12">*<pos:position pos:line="8" pos:column="13"/></modifier></type><name pos:line="8" pos:column="13">mpm<pos:position pos:line="8" pos:column="16"/></name></decl>;<pos:position pos:line="8" pos:column="17"/></decl_stmt>
    
    <expr_stmt><expr><call><name pos:line="10" pos:column="5">ap_assert<pos:position pos:line="10" pos:column="14"/></name><argument_list pos:line="10" pos:column="14">(<argument><expr><name pos:line="10" pos:column="15">master<pos:position pos:line="10" pos:column="21"/></name></expr></argument>)<pos:position pos:line="10" pos:column="22"/></argument_list></call></expr>;<pos:position pos:line="10" pos:column="23"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="11" pos:column="5">ap_log_cerror<pos:position pos:line="11" pos:column="18"/></name><argument_list pos:line="11" pos:column="18">(<argument><expr><name pos:line="11" pos:column="19">APLOG_MARK<pos:position pos:line="11" pos:column="29"/></name></expr></argument>, <argument><expr><name pos:line="11" pos:column="31">APLOG_TRACE3<pos:position pos:line="11" pos:column="43"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="11" pos:column="45">0<pos:position pos:line="11" pos:column="46"/></literal></expr></argument>, <argument><expr><name pos:line="11" pos:column="48">master<pos:position pos:line="11" pos:column="54"/></name></expr></argument>,
                  <argument><expr><literal type="string" pos:line="12" pos:column="19">"h2_stream(%ld-%d): create slave"<pos:position pos:line="12" pos:column="52"/></literal></expr></argument>, <argument><expr><name><name pos:line="12" pos:column="54">master<pos:position pos:line="12" pos:column="60"/></name><operator pos:line="12" pos:column="60">-&gt;<pos:position pos:line="12" pos:column="65"/></operator><name pos:line="12" pos:column="62">id<pos:position pos:line="12" pos:column="64"/></name></name></expr></argument>, <argument><expr><name pos:line="12" pos:column="66">slave_id<pos:position pos:line="12" pos:column="74"/></name></expr></argument>)<pos:position pos:line="12" pos:column="75"/></argument_list></call></expr>;<pos:position pos:line="12" pos:column="76"/></expr_stmt>
    
    <comment type="block" pos:line="14" pos:column="5">/* We create a pool with its own allocator to be used for
     * processing a request. This is the only way to have the processing
     * independant of its parent pool in the sense that it can work in
     * another thread. Also, the new allocator needs its own mutex to
     * synchronize sub-pools.
     */</comment>
    <expr_stmt><expr><call><name pos:line="20" pos:column="5">apr_allocator_create<pos:position pos:line="20" pos:column="25"/></name><argument_list pos:line="20" pos:column="25">(<argument><expr><operator pos:line="20" pos:column="26">&amp;<pos:position pos:line="20" pos:column="31"/></operator><name pos:line="20" pos:column="27">allocator<pos:position pos:line="20" pos:column="36"/></name></expr></argument>)<pos:position pos:line="20" pos:column="37"/></argument_list></call></expr>;<pos:position pos:line="20" pos:column="38"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="21" pos:column="5">apr_allocator_max_free_set<pos:position pos:line="21" pos:column="31"/></name><argument_list pos:line="21" pos:column="31">(<argument><expr><name pos:line="21" pos:column="32">allocator<pos:position pos:line="21" pos:column="41"/></name></expr></argument>, <argument><expr><name pos:line="21" pos:column="43">ap_max_mem_free<pos:position pos:line="21" pos:column="58"/></name></expr></argument>)<pos:position pos:line="21" pos:column="59"/></argument_list></call></expr>;<pos:position pos:line="21" pos:column="60"/></expr_stmt>
    <expr_stmt><expr><name pos:line="22" pos:column="5">status<pos:position pos:line="22" pos:column="11"/></name> <operator pos:line="22" pos:column="12">=<pos:position pos:line="22" pos:column="13"/></operator> <call><name pos:line="22" pos:column="14">apr_pool_create_ex<pos:position pos:line="22" pos:column="32"/></name><argument_list pos:line="22" pos:column="32">(<argument><expr><operator pos:line="22" pos:column="33">&amp;<pos:position pos:line="22" pos:column="38"/></operator><name pos:line="22" pos:column="34">pool<pos:position pos:line="22" pos:column="38"/></name></expr></argument>, <argument><expr><name pos:line="22" pos:column="40">parent<pos:position pos:line="22" pos:column="46"/></name></expr></argument>, <argument><expr><name pos:line="22" pos:column="48">NULL<pos:position pos:line="22" pos:column="52"/></name></expr></argument>, <argument><expr><name pos:line="22" pos:column="54">allocator<pos:position pos:line="22" pos:column="63"/></name></expr></argument>)<pos:position pos:line="22" pos:column="64"/></argument_list></call></expr>;<pos:position pos:line="22" pos:column="65"/></expr_stmt>
    <if pos:line="23" pos:column="5">if <condition pos:line="23" pos:column="8">(<expr><name pos:line="23" pos:column="9">status<pos:position pos:line="23" pos:column="15"/></name> <operator pos:line="23" pos:column="16">!=<pos:position pos:line="23" pos:column="18"/></operator> <name pos:line="23" pos:column="19">APR_SUCCESS<pos:position pos:line="23" pos:column="30"/></name></expr>)<pos:position pos:line="23" pos:column="31"/></condition><then pos:line="23" pos:column="31"> <block pos:line="23" pos:column="32">{
        <expr_stmt><expr><call><name pos:line="24" pos:column="9">ap_log_cerror<pos:position pos:line="24" pos:column="22"/></name><argument_list pos:line="24" pos:column="22">(<argument><expr><name pos:line="24" pos:column="23">APLOG_MARK<pos:position pos:line="24" pos:column="33"/></name></expr></argument>, <argument><expr><name pos:line="24" pos:column="35">APLOG_ERR<pos:position pos:line="24" pos:column="44"/></name></expr></argument>, <argument><expr><name pos:line="24" pos:column="46">status<pos:position pos:line="24" pos:column="52"/></name></expr></argument>, <argument><expr><name pos:line="24" pos:column="54">master<pos:position pos:line="24" pos:column="60"/></name></expr></argument>, 
                      <argument><expr><call><name pos:line="25" pos:column="23">APLOGNO<pos:position pos:line="25" pos:column="30"/></name><argument_list pos:line="25" pos:column="30">(<argument><expr><literal type="number" pos:line="25" pos:column="31">10004<pos:position pos:line="25" pos:column="36"/></literal></expr></argument>)<pos:position pos:line="25" pos:column="37"/></argument_list></call> <literal type="string" pos:line="25" pos:column="38">"h2_session(%ld-%d): create slave pool"<pos:position pos:line="25" pos:column="77"/></literal></expr></argument>,
                      <argument><expr><name><name pos:line="26" pos:column="23">master<pos:position pos:line="26" pos:column="29"/></name><operator pos:line="26" pos:column="29">-&gt;<pos:position pos:line="26" pos:column="34"/></operator><name pos:line="26" pos:column="31">id<pos:position pos:line="26" pos:column="33"/></name></name></expr></argument>, <argument><expr><name pos:line="26" pos:column="35">slave_id<pos:position pos:line="26" pos:column="43"/></name></expr></argument>)<pos:position pos:line="26" pos:column="44"/></argument_list></call></expr>;<pos:position pos:line="26" pos:column="45"/></expr_stmt>
        <return pos:line="27" pos:column="9">return <expr><name pos:line="27" pos:column="16">NULL<pos:position pos:line="27" pos:column="20"/></name></expr>;<pos:position pos:line="27" pos:column="21"/></return>
    }<pos:position pos:line="28" pos:column="6"/></block></then></if>
    <expr_stmt><expr><call><name pos:line="29" pos:column="5">apr_allocator_owner_set<pos:position pos:line="29" pos:column="28"/></name><argument_list pos:line="29" pos:column="28">(<argument><expr><name pos:line="29" pos:column="29">allocator<pos:position pos:line="29" pos:column="38"/></name></expr></argument>, <argument><expr><name pos:line="29" pos:column="40">pool<pos:position pos:line="29" pos:column="44"/></name></expr></argument>)<pos:position pos:line="29" pos:column="45"/></argument_list></call></expr>;<pos:position pos:line="29" pos:column="46"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="30" pos:column="5">apr_pool_tag<pos:position pos:line="30" pos:column="17"/></name><argument_list pos:line="30" pos:column="17">(<argument><expr><name pos:line="30" pos:column="18">pool<pos:position pos:line="30" pos:column="22"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="30" pos:column="24">"h2_slave_conn"<pos:position pos:line="30" pos:column="39"/></literal></expr></argument>)<pos:position pos:line="30" pos:column="40"/></argument_list></call></expr>;<pos:position pos:line="30" pos:column="41"/></expr_stmt>
 
    <expr_stmt><expr><name pos:line="32" pos:column="5">c<pos:position pos:line="32" pos:column="6"/></name> <operator pos:line="32" pos:column="7">=<pos:position pos:line="32" pos:column="8"/></operator> <operator pos:line="32" pos:column="9">(<pos:position pos:line="32" pos:column="10"/></operator><name pos:line="32" pos:column="10">conn_rec<pos:position pos:line="32" pos:column="18"/></name> <operator pos:line="32" pos:column="19">*<pos:position pos:line="32" pos:column="20"/></operator><operator pos:line="32" pos:column="20">)<pos:position pos:line="32" pos:column="21"/></operator> <call><name pos:line="32" pos:column="22">apr_palloc<pos:position pos:line="32" pos:column="32"/></name><argument_list pos:line="32" pos:column="32">(<argument><expr><name pos:line="32" pos:column="33">pool<pos:position pos:line="32" pos:column="37"/></name></expr></argument>, <argument><expr><sizeof pos:line="32" pos:column="39">sizeof<argument_list pos:line="32" pos:column="45">(<argument><expr><name pos:line="32" pos:column="46">conn_rec<pos:position pos:line="32" pos:column="54"/></name></expr></argument>)<pos:position pos:line="32" pos:column="55"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="32" pos:column="56"/></argument_list></call></expr>;<pos:position pos:line="32" pos:column="57"/></expr_stmt>
    <if pos:line="33" pos:column="5">if <condition pos:line="33" pos:column="8">(<expr><name pos:line="33" pos:column="9">c<pos:position pos:line="33" pos:column="10"/></name> <operator pos:line="33" pos:column="11">==<pos:position pos:line="33" pos:column="13"/></operator> <name pos:line="33" pos:column="14">NULL<pos:position pos:line="33" pos:column="18"/></name></expr>)<pos:position pos:line="33" pos:column="19"/></condition><then pos:line="33" pos:column="19"> <block pos:line="33" pos:column="20">{
        <expr_stmt><expr><call><name pos:line="34" pos:column="9">ap_log_cerror<pos:position pos:line="34" pos:column="22"/></name><argument_list pos:line="34" pos:column="22">(<argument><expr><name pos:line="34" pos:column="23">APLOG_MARK<pos:position pos:line="34" pos:column="33"/></name></expr></argument>, <argument><expr><name pos:line="34" pos:column="35">APLOG_ERR<pos:position pos:line="34" pos:column="44"/></name></expr></argument>, <argument><expr><name pos:line="34" pos:column="46">APR_ENOMEM<pos:position pos:line="34" pos:column="56"/></name></expr></argument>, <argument><expr><name pos:line="34" pos:column="58">master<pos:position pos:line="34" pos:column="64"/></name></expr></argument>, 
                      <argument><expr><call><name pos:line="35" pos:column="23">APLOGNO<pos:position pos:line="35" pos:column="30"/></name><argument_list pos:line="35" pos:column="30">(<argument><expr><literal type="number" pos:line="35" pos:column="31">02913<pos:position pos:line="35" pos:column="36"/></literal></expr></argument>)<pos:position pos:line="35" pos:column="37"/></argument_list></call> <literal type="string" pos:line="35" pos:column="38">"h2_session(%ld-%d): create slave"<pos:position pos:line="35" pos:column="72"/></literal></expr></argument>,
                      <argument><expr><name><name pos:line="36" pos:column="23">master<pos:position pos:line="36" pos:column="29"/></name><operator pos:line="36" pos:column="29">-&gt;<pos:position pos:line="36" pos:column="34"/></operator><name pos:line="36" pos:column="31">id<pos:position pos:line="36" pos:column="33"/></name></name></expr></argument>, <argument><expr><name pos:line="36" pos:column="35">slave_id<pos:position pos:line="36" pos:column="43"/></name></expr></argument>)<pos:position pos:line="36" pos:column="44"/></argument_list></call></expr>;<pos:position pos:line="36" pos:column="45"/></expr_stmt>
        <expr_stmt><expr><call><name pos:line="37" pos:column="9">apr_pool_destroy<pos:position pos:line="37" pos:column="25"/></name><argument_list pos:line="37" pos:column="25">(<argument><expr><name pos:line="37" pos:column="26">pool<pos:position pos:line="37" pos:column="30"/></name></expr></argument>)<pos:position pos:line="37" pos:column="31"/></argument_list></call></expr>;<pos:position pos:line="37" pos:column="32"/></expr_stmt>
        <return pos:line="38" pos:column="9">return <expr><name pos:line="38" pos:column="16">NULL<pos:position pos:line="38" pos:column="20"/></name></expr>;<pos:position pos:line="38" pos:column="21"/></return>
    }<pos:position pos:line="39" pos:column="6"/></block></then></if>
    
    <expr_stmt><expr><call><name pos:line="41" pos:column="5">memcpy<pos:position pos:line="41" pos:column="11"/></name><argument_list pos:line="41" pos:column="11">(<argument><expr><name pos:line="41" pos:column="12">c<pos:position pos:line="41" pos:column="13"/></name></expr></argument>, <argument><expr><name pos:line="41" pos:column="15">master<pos:position pos:line="41" pos:column="21"/></name></expr></argument>, <argument><expr><sizeof pos:line="41" pos:column="23">sizeof<argument_list pos:line="41" pos:column="29">(<argument><expr><name pos:line="41" pos:column="30">conn_rec<pos:position pos:line="41" pos:column="38"/></name></expr></argument>)<pos:position pos:line="41" pos:column="39"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="41" pos:column="40"/></argument_list></call></expr>;<pos:position pos:line="41" pos:column="41"/></expr_stmt>
        
    <expr_stmt><expr><name><name pos:line="43" pos:column="5">c<pos:position pos:line="43" pos:column="6"/></name><operator pos:line="43" pos:column="6">-&gt;<pos:position pos:line="43" pos:column="11"/></operator><name pos:line="43" pos:column="8">master<pos:position pos:line="43" pos:column="14"/></name></name>                 <operator pos:line="43" pos:column="31">=<pos:position pos:line="43" pos:column="32"/></operator> <name pos:line="43" pos:column="33">master<pos:position pos:line="43" pos:column="39"/></name></expr>;<pos:position pos:line="43" pos:column="40"/></expr_stmt>
    <expr_stmt><expr><name><name pos:line="44" pos:column="5">c<pos:position pos:line="44" pos:column="6"/></name><operator pos:line="44" pos:column="6">-&gt;<pos:position pos:line="44" pos:column="11"/></operator><name pos:line="44" pos:column="8">pool<pos:position pos:line="44" pos:column="12"/></name></name>                   <operator pos:line="44" pos:column="31">=<pos:position pos:line="44" pos:column="32"/></operator> <name pos:line="44" pos:column="33">pool<pos:position pos:line="44" pos:column="37"/></name></expr>;<pos:position pos:line="44" pos:column="38"/></expr_stmt>   
    <expr_stmt><expr><name><name pos:line="45" pos:column="5">c<pos:position pos:line="45" pos:column="6"/></name><operator pos:line="45" pos:column="6">-&gt;<pos:position pos:line="45" pos:column="11"/></operator><name pos:line="45" pos:column="8">conn_config<pos:position pos:line="45" pos:column="19"/></name></name>            <operator pos:line="45" pos:column="31">=<pos:position pos:line="45" pos:column="32"/></operator> <call><name pos:line="45" pos:column="33">ap_create_conn_config<pos:position pos:line="45" pos:column="54"/></name><argument_list pos:line="45" pos:column="54">(<argument><expr><name pos:line="45" pos:column="55">pool<pos:position pos:line="45" pos:column="59"/></name></expr></argument>)<pos:position pos:line="45" pos:column="60"/></argument_list></call></expr>;<pos:position pos:line="45" pos:column="61"/></expr_stmt>
    <expr_stmt><expr><name><name pos:line="46" pos:column="5">c<pos:position pos:line="46" pos:column="6"/></name><operator pos:line="46" pos:column="6">-&gt;<pos:position pos:line="46" pos:column="11"/></operator><name pos:line="46" pos:column="8">notes<pos:position pos:line="46" pos:column="13"/></name></name>                  <operator pos:line="46" pos:column="31">=<pos:position pos:line="46" pos:column="32"/></operator> <call><name pos:line="46" pos:column="33">apr_table_make<pos:position pos:line="46" pos:column="47"/></name><argument_list pos:line="46" pos:column="47">(<argument><expr><name pos:line="46" pos:column="48">pool<pos:position pos:line="46" pos:column="52"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="46" pos:column="54">5<pos:position pos:line="46" pos:column="55"/></literal></expr></argument>)<pos:position pos:line="46" pos:column="56"/></argument_list></call></expr>;<pos:position pos:line="46" pos:column="57"/></expr_stmt>
    <expr_stmt><expr><name><name pos:line="47" pos:column="5">c<pos:position pos:line="47" pos:column="6"/></name><operator pos:line="47" pos:column="6">-&gt;<pos:position pos:line="47" pos:column="11"/></operator><name pos:line="47" pos:column="8">input_filters<pos:position pos:line="47" pos:column="21"/></name></name>          <operator pos:line="47" pos:column="31">=<pos:position pos:line="47" pos:column="32"/></operator> <name pos:line="47" pos:column="33">NULL<pos:position pos:line="47" pos:column="37"/></name></expr>;<pos:position pos:line="47" pos:column="38"/></expr_stmt>
    <expr_stmt><expr><name><name pos:line="48" pos:column="5">c<pos:position pos:line="48" pos:column="6"/></name><operator pos:line="48" pos:column="6">-&gt;<pos:position pos:line="48" pos:column="11"/></operator><name pos:line="48" pos:column="8">output_filters<pos:position pos:line="48" pos:column="22"/></name></name>         <operator pos:line="48" pos:column="31">=<pos:position pos:line="48" pos:column="32"/></operator> <name pos:line="48" pos:column="33">NULL<pos:position pos:line="48" pos:column="37"/></name></expr>;<pos:position pos:line="48" pos:column="38"/></expr_stmt>
    <expr_stmt><expr><name><name pos:line="49" pos:column="5">c<pos:position pos:line="49" pos:column="6"/></name><operator pos:line="49" pos:column="6">-&gt;<pos:position pos:line="49" pos:column="11"/></operator><name pos:line="49" pos:column="8">bucket_alloc<pos:position pos:line="49" pos:column="20"/></name></name>           <operator pos:line="49" pos:column="31">=<pos:position pos:line="49" pos:column="32"/></operator> <call><name pos:line="49" pos:column="33">apr_bucket_alloc_create<pos:position pos:line="49" pos:column="56"/></name><argument_list pos:line="49" pos:column="56">(<argument><expr><name pos:line="49" pos:column="57">pool<pos:position pos:line="49" pos:column="61"/></name></expr></argument>)<pos:position pos:line="49" pos:column="62"/></argument_list></call></expr>;<pos:position pos:line="49" pos:column="63"/></expr_stmt>
    <expr_stmt><expr><name><name pos:line="50" pos:column="5">c<pos:position pos:line="50" pos:column="6"/></name><operator pos:line="50" pos:column="6">-&gt;<pos:position pos:line="50" pos:column="11"/></operator><name pos:line="50" pos:column="8">data_in_input_filters<pos:position pos:line="50" pos:column="29"/></name></name>  <operator pos:line="50" pos:column="31">=<pos:position pos:line="50" pos:column="32"/></operator> <literal type="number" pos:line="50" pos:column="33">0<pos:position pos:line="50" pos:column="34"/></literal></expr>;<pos:position pos:line="50" pos:column="35"/></expr_stmt>
    <expr_stmt><expr><name><name pos:line="51" pos:column="5">c<pos:position pos:line="51" pos:column="6"/></name><operator pos:line="51" pos:column="6">-&gt;<pos:position pos:line="51" pos:column="11"/></operator><name pos:line="51" pos:column="8">data_in_output_filters<pos:position pos:line="51" pos:column="30"/></name></name> <operator pos:line="51" pos:column="31">=<pos:position pos:line="51" pos:column="32"/></operator> <literal type="number" pos:line="51" pos:column="33">0<pos:position pos:line="51" pos:column="34"/></literal></expr>;<pos:position pos:line="51" pos:column="35"/></expr_stmt>
    <comment type="block" pos:line="52" pos:column="5">/* prevent mpm_event from making wrong assumptions about this connection,
     * like e.g. using its socket for an async read check. */</comment>
    <expr_stmt><expr><name><name pos:line="54" pos:column="5">c<pos:position pos:line="54" pos:column="6"/></name><operator pos:line="54" pos:column="6">-&gt;<pos:position pos:line="54" pos:column="11"/></operator><name pos:line="54" pos:column="8">clogging_input_filters<pos:position pos:line="54" pos:column="30"/></name></name> <operator pos:line="54" pos:column="31">=<pos:position pos:line="54" pos:column="32"/></operator> <literal type="number" pos:line="54" pos:column="33">1<pos:position pos:line="54" pos:column="34"/></literal></expr>;<pos:position pos:line="54" pos:column="35"/></expr_stmt>
    <expr_stmt><expr><name><name pos:line="55" pos:column="5">c<pos:position pos:line="55" pos:column="6"/></name><operator pos:line="55" pos:column="6">-&gt;<pos:position pos:line="55" pos:column="11"/></operator><name pos:line="55" pos:column="8">log<pos:position pos:line="55" pos:column="11"/></name></name>                    <operator pos:line="55" pos:column="31">=<pos:position pos:line="55" pos:column="32"/></operator> <name pos:line="55" pos:column="33">NULL<pos:position pos:line="55" pos:column="37"/></name></expr>;<pos:position pos:line="55" pos:column="38"/></expr_stmt>
    <expr_stmt><expr><name><name pos:line="56" pos:column="5">c<pos:position pos:line="56" pos:column="6"/></name><operator pos:line="56" pos:column="6">-&gt;<pos:position pos:line="56" pos:column="11"/></operator><name pos:line="56" pos:column="8">log_id<pos:position pos:line="56" pos:column="14"/></name></name>                 <operator pos:line="56" pos:column="31">=<pos:position pos:line="56" pos:column="32"/></operator> <call><name pos:line="56" pos:column="33">apr_psprintf<pos:position pos:line="56" pos:column="45"/></name><argument_list pos:line="56" pos:column="45">(<argument><expr><name pos:line="56" pos:column="46">pool<pos:position pos:line="56" pos:column="50"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="56" pos:column="52">"%ld-%d"<pos:position pos:line="56" pos:column="60"/></literal></expr></argument>, 
                                             <argument><expr><name><name pos:line="57" pos:column="46">master<pos:position pos:line="57" pos:column="52"/></name><operator pos:line="57" pos:column="52">-&gt;<pos:position pos:line="57" pos:column="57"/></operator><name pos:line="57" pos:column="54">id<pos:position pos:line="57" pos:column="56"/></name></name></expr></argument>, <argument><expr><name pos:line="57" pos:column="58">slave_id<pos:position pos:line="57" pos:column="66"/></name></expr></argument>)<pos:position pos:line="57" pos:column="67"/></argument_list></call></expr>;<pos:position pos:line="57" pos:column="68"/></expr_stmt>
    <comment type="block" pos:line="58" pos:column="5">/* Simulate that we had already a request on this connection. */</comment>
    <expr_stmt><expr><name><name pos:line="59" pos:column="5">c<pos:position pos:line="59" pos:column="6"/></name><operator pos:line="59" pos:column="6">-&gt;<pos:position pos:line="59" pos:column="11"/></operator><name pos:line="59" pos:column="8">keepalives<pos:position pos:line="59" pos:column="18"/></name></name>             <operator pos:line="59" pos:column="31">=<pos:position pos:line="59" pos:column="32"/></operator> <literal type="number" pos:line="59" pos:column="33">1<pos:position pos:line="59" pos:column="34"/></literal></expr>;<pos:position pos:line="59" pos:column="35"/></expr_stmt>
    <expr_stmt><expr><name><name pos:line="60" pos:column="5">c<pos:position pos:line="60" pos:column="6"/></name><operator pos:line="60" pos:column="6">-&gt;<pos:position pos:line="60" pos:column="11"/></operator><name pos:line="60" pos:column="8">aborted<pos:position pos:line="60" pos:column="15"/></name></name>                <operator pos:line="60" pos:column="31">=<pos:position pos:line="60" pos:column="32"/></operator> <literal type="number" pos:line="60" pos:column="33">0<pos:position pos:line="60" pos:column="34"/></literal></expr>;<pos:position pos:line="60" pos:column="35"/></expr_stmt>
    <comment type="block" pos:line="61" pos:column="5">/* We cannot install the master connection socket on the slaves, as
     * modules mess with timeouts/blocking of the socket, with
     * unwanted side effects to the master connection processing.
     * Fortunately, since we never use the slave socket, we can just install
     * a single, process-wide dummy and everyone is happy.
     */</comment>
    <expr_stmt><expr><call><name pos:line="67" pos:column="5">ap_set_module_config<pos:position pos:line="67" pos:column="25"/></name><argument_list pos:line="67" pos:column="25">(<argument><expr><name><name pos:line="67" pos:column="26">c<pos:position pos:line="67" pos:column="27"/></name><operator pos:line="67" pos:column="27">-&gt;<pos:position pos:line="67" pos:column="32"/></operator><name pos:line="67" pos:column="29">conn_config<pos:position pos:line="67" pos:column="40"/></name></name></expr></argument>, <argument><expr><operator pos:line="67" pos:column="42">&amp;<pos:position pos:line="67" pos:column="47"/></operator><name pos:line="67" pos:column="43">core_module<pos:position pos:line="67" pos:column="54"/></name></expr></argument>, <argument><expr><name pos:line="67" pos:column="56">dummy_socket<pos:position pos:line="67" pos:column="68"/></name></expr></argument>)<pos:position pos:line="67" pos:column="69"/></argument_list></call></expr>;<pos:position pos:line="67" pos:column="70"/></expr_stmt>
    <comment type="block" pos:line="68" pos:column="5">/* TODO: these should be unique to this thread */</comment>
    <expr_stmt><expr><name><name pos:line="69" pos:column="5">c<pos:position pos:line="69" pos:column="6"/></name><operator pos:line="69" pos:column="6">-&gt;<pos:position pos:line="69" pos:column="11"/></operator><name pos:line="69" pos:column="8">sbh<pos:position pos:line="69" pos:column="11"/></name></name>                    <operator pos:line="69" pos:column="31">=<pos:position pos:line="69" pos:column="32"/></operator> <name><name pos:line="69" pos:column="33">master<pos:position pos:line="69" pos:column="39"/></name><operator pos:line="69" pos:column="39">-&gt;<pos:position pos:line="69" pos:column="44"/></operator><name pos:line="69" pos:column="41">sbh<pos:position pos:line="69" pos:column="44"/></name></name></expr>;<pos:position pos:line="69" pos:column="45"/></expr_stmt>
    <comment type="block" pos:line="70" pos:column="5">/* TODO: not all mpm modules have learned about slave connections yet.
     * copy their config from master to slave.
     */</comment>
    <if pos:line="73" pos:column="5">if <condition pos:line="73" pos:column="8">(<expr><operator pos:line="73" pos:column="9">(<pos:position pos:line="73" pos:column="10"/></operator><name pos:line="73" pos:column="10">mpm<pos:position pos:line="73" pos:column="13"/></name> <operator pos:line="73" pos:column="14">=<pos:position pos:line="73" pos:column="15"/></operator> <call><name pos:line="73" pos:column="16">h2_conn_mpm_module<pos:position pos:line="73" pos:column="34"/></name><argument_list pos:line="73" pos:column="34">()<pos:position pos:line="73" pos:column="36"/></argument_list></call><operator pos:line="73" pos:column="36">)<pos:position pos:line="73" pos:column="37"/></operator> <operator pos:line="73" pos:column="38">!=<pos:position pos:line="73" pos:column="40"/></operator> <name pos:line="73" pos:column="41">NULL<pos:position pos:line="73" pos:column="45"/></name></expr>)<pos:position pos:line="73" pos:column="46"/></condition><then pos:line="73" pos:column="46"> <block pos:line="73" pos:column="47">{
        <expr_stmt><expr><name pos:line="74" pos:column="9">cfg<pos:position pos:line="74" pos:column="12"/></name> <operator pos:line="74" pos:column="13">=<pos:position pos:line="74" pos:column="14"/></operator> <call><name pos:line="74" pos:column="15">ap_get_module_config<pos:position pos:line="74" pos:column="35"/></name><argument_list pos:line="74" pos:column="35">(<argument><expr><name><name pos:line="74" pos:column="36">master<pos:position pos:line="74" pos:column="42"/></name><operator pos:line="74" pos:column="42">-&gt;<pos:position pos:line="74" pos:column="47"/></operator><name pos:line="74" pos:column="44">conn_config<pos:position pos:line="74" pos:column="55"/></name></name></expr></argument>, <argument><expr><name pos:line="74" pos:column="57">mpm<pos:position pos:line="74" pos:column="60"/></name></expr></argument>)<pos:position pos:line="74" pos:column="61"/></argument_list></call></expr>;<pos:position pos:line="74" pos:column="62"/></expr_stmt>
        <expr_stmt><expr><call><name pos:line="75" pos:column="9">ap_set_module_config<pos:position pos:line="75" pos:column="29"/></name><argument_list pos:line="75" pos:column="29">(<argument><expr><name><name pos:line="75" pos:column="30">c<pos:position pos:line="75" pos:column="31"/></name><operator pos:line="75" pos:column="31">-&gt;<pos:position pos:line="75" pos:column="36"/></operator><name pos:line="75" pos:column="33">conn_config<pos:position pos:line="75" pos:column="44"/></name></name></expr></argument>, <argument><expr><name pos:line="75" pos:column="46">mpm<pos:position pos:line="75" pos:column="49"/></name></expr></argument>, <argument><expr><name pos:line="75" pos:column="51">cfg<pos:position pos:line="75" pos:column="54"/></name></expr></argument>)<pos:position pos:line="75" pos:column="55"/></argument_list></call></expr>;<pos:position pos:line="75" pos:column="56"/></expr_stmt>
    }<pos:position pos:line="76" pos:column="6"/></block></then></if>

    <expr_stmt><expr><call><name pos:line="78" pos:column="5">ap_log_cerror<pos:position pos:line="78" pos:column="18"/></name><argument_list pos:line="78" pos:column="18">(<argument><expr><name pos:line="78" pos:column="19">APLOG_MARK<pos:position pos:line="78" pos:column="29"/></name></expr></argument>, <argument><expr><name pos:line="78" pos:column="31">APLOG_TRACE2<pos:position pos:line="78" pos:column="43"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="78" pos:column="45">0<pos:position pos:line="78" pos:column="46"/></literal></expr></argument>, <argument><expr><name pos:line="78" pos:column="48">c<pos:position pos:line="78" pos:column="49"/></name></expr></argument>, 
                  <argument><expr><literal type="string" pos:line="79" pos:column="19">"h2_stream(%ld-%d): created slave"<pos:position pos:line="79" pos:column="53"/></literal></expr></argument>, <argument><expr><name><name pos:line="79" pos:column="55">master<pos:position pos:line="79" pos:column="61"/></name><operator pos:line="79" pos:column="61">-&gt;<pos:position pos:line="79" pos:column="66"/></operator><name pos:line="79" pos:column="63">id<pos:position pos:line="79" pos:column="65"/></name></name></expr></argument>, <argument><expr><name pos:line="79" pos:column="67">slave_id<pos:position pos:line="79" pos:column="75"/></name></expr></argument>)<pos:position pos:line="79" pos:column="76"/></argument_list></call></expr>;<pos:position pos:line="79" pos:column="77"/></expr_stmt>
    <return pos:line="80" pos:column="5">return <expr><name pos:line="80" pos:column="12">c<pos:position pos:line="80" pos:column="13"/></name></expr>;<pos:position pos:line="80" pos:column="14"/></return>
}<pos:position pos:line="81" pos:column="2"/></block></function></unit>

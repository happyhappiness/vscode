<function xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position"><specifier pos:line="208" pos:column="1">static<pos:position pos:line="208" pos:column="7"/></specifier> <type><name pos:line="208" pos:column="8">void<pos:position pos:line="208" pos:column="12"/></name></type> <name pos:line="208" pos:column="13">say<pos:position pos:line="208" pos:column="16"/></name><parameter_list pos:line="208" pos:column="16">(<parameter><decl><type><specifier pos:line="208" pos:column="17">const<pos:position pos:line="208" pos:column="22"/></specifier> <name><name pos:line="208" pos:column="23">struct<pos:position pos:line="208" pos:column="29"/></name> <name pos:line="208" pos:column="30">am_state<pos:position pos:line="208" pos:column="38"/></name></name> <modifier pos:line="208" pos:column="39">*<pos:position pos:line="208" pos:column="40"/></modifier></type><name pos:line="208" pos:column="40">state<pos:position pos:line="208" pos:column="45"/></name></decl></parameter>, <parameter><decl><type><name pos:line="208" pos:column="47">FILE<pos:position pos:line="208" pos:column="51"/></name> <modifier pos:line="208" pos:column="52">*<pos:position pos:line="208" pos:column="53"/></modifier></type><name pos:line="208" pos:column="53">fp<pos:position pos:line="208" pos:column="55"/></name></decl></parameter>, <parameter><decl><type><specifier pos:line="208" pos:column="57">const<pos:position pos:line="208" pos:column="62"/></specifier> <name pos:line="208" pos:column="63">char<pos:position pos:line="208" pos:column="67"/></name> <modifier pos:line="208" pos:column="68">*<pos:position pos:line="208" pos:column="69"/></modifier></type><name pos:line="208" pos:column="69">fmt<pos:position pos:line="208" pos:column="72"/></name></decl></parameter>, <parameter><decl><type><modifier pos:line="208" pos:column="74">...<pos:position pos:line="208" pos:column="77"/></modifier></type></decl></parameter>)<pos:position pos:line="208" pos:column="78"/></parameter_list>
<block pos:line="209" pos:column="1">{
	<decl_stmt><decl><type><name pos:line="210" pos:column="9">va_list<pos:position pos:line="210" pos:column="16"/></name></type> <name pos:line="210" pos:column="17">ap<pos:position pos:line="210" pos:column="19"/></name></decl>;<pos:position pos:line="210" pos:column="20"/></decl_stmt>

	<expr_stmt><expr><call><name pos:line="212" pos:column="9">va_start<pos:position pos:line="212" pos:column="17"/></name><argument_list pos:line="212" pos:column="17">(<argument><expr><name pos:line="212" pos:column="18">ap<pos:position pos:line="212" pos:column="20"/></name></expr></argument>, <argument><expr><name pos:line="212" pos:column="22">fmt<pos:position pos:line="212" pos:column="25"/></name></expr></argument>)<pos:position pos:line="212" pos:column="26"/></argument_list></call></expr>;<pos:position pos:line="212" pos:column="27"/></expr_stmt>
	<if pos:line="213" pos:column="9">if <condition pos:line="213" pos:column="12">(<expr><operator pos:line="213" pos:column="13">!<pos:position pos:line="213" pos:column="14"/></operator><name><name pos:line="213" pos:column="14">state<pos:position pos:line="213" pos:column="19"/></name><operator pos:line="213" pos:column="19">-&gt;<pos:position pos:line="213" pos:column="24"/></operator><name pos:line="213" pos:column="21">quiet<pos:position pos:line="213" pos:column="26"/></name></name></expr>)<pos:position pos:line="213" pos:column="27"/></condition><then pos:line="213" pos:column="27"> <block pos:line="213" pos:column="28">{
		<expr_stmt><expr><call><name pos:line="214" pos:column="17">vfprintf<pos:position pos:line="214" pos:column="25"/></name><argument_list pos:line="214" pos:column="25">(<argument><expr><name pos:line="214" pos:column="26">fp<pos:position pos:line="214" pos:column="28"/></name></expr></argument>, <argument><expr><name pos:line="214" pos:column="30">fmt<pos:position pos:line="214" pos:column="33"/></name></expr></argument>, <argument><expr><name pos:line="214" pos:column="35">ap<pos:position pos:line="214" pos:column="37"/></name></expr></argument>)<pos:position pos:line="214" pos:column="38"/></argument_list></call></expr>;<pos:position pos:line="214" pos:column="39"/></expr_stmt>
		<expr_stmt><expr><call><name pos:line="215" pos:column="17">putc<pos:position pos:line="215" pos:column="21"/></name><argument_list pos:line="215" pos:column="21">(<argument><expr><literal type="char" pos:line="215" pos:column="22">'\n'<pos:position pos:line="215" pos:column="26"/></literal></expr></argument>, <argument><expr><name pos:line="215" pos:column="28">fp<pos:position pos:line="215" pos:column="30"/></name></expr></argument>)<pos:position pos:line="215" pos:column="31"/></argument_list></call></expr>;<pos:position pos:line="215" pos:column="32"/></expr_stmt>
	}<pos:position pos:line="216" pos:column="10"/></block></then></if>
	<expr_stmt><expr><call><name pos:line="217" pos:column="9">va_end<pos:position pos:line="217" pos:column="15"/></name><argument_list pos:line="217" pos:column="15">(<argument><expr><name pos:line="217" pos:column="16">ap<pos:position pos:line="217" pos:column="18"/></name></expr></argument>)<pos:position pos:line="217" pos:column="19"/></argument_list></call></expr>;<pos:position pos:line="217" pos:column="20"/></expr_stmt>
}<pos:position pos:line="218" pos:column="2"/></block></function>


<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/httpd/gumtree/httpd_repos_function_2925_httpd-2.4.17.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">apr_status_t<pos:position pos:line="1" pos:column="20"/></name></type> <name pos:line="1" pos:column="21">session_output_filter<pos:position pos:line="1" pos:column="42"/></name><parameter_list pos:line="1" pos:column="42">(<parameter><decl><type><name pos:line="1" pos:column="43">ap_filter_t<pos:position pos:line="1" pos:column="54"/></name> <modifier pos:line="1" pos:column="55">*<pos:position pos:line="1" pos:column="56"/></modifier></type> <name pos:line="1" pos:column="57">f<pos:position pos:line="1" pos:column="58"/></name></decl></parameter>,
        <parameter><decl><type><name pos:line="2" pos:column="9">apr_bucket_brigade<pos:position pos:line="2" pos:column="27"/></name> <modifier pos:line="2" pos:column="28">*<pos:position pos:line="2" pos:column="29"/></modifier></type> <name pos:line="2" pos:column="30">in<pos:position pos:line="2" pos:column="32"/></name></decl></parameter>)<pos:position pos:line="2" pos:column="33"/></parameter_list>
<block pos:line="3" pos:column="1">{

    <comment type="block" pos:line="5" pos:column="5">/* save all the sessions in all the requests */</comment>
    <decl_stmt><decl><type><name pos:line="6" pos:column="5">request_rec<pos:position pos:line="6" pos:column="16"/></name> <modifier pos:line="6" pos:column="17">*<pos:position pos:line="6" pos:column="18"/></modifier></type><name pos:line="6" pos:column="18">r<pos:position pos:line="6" pos:column="19"/></name> <init pos:line="6" pos:column="20">= <expr><name><name pos:line="6" pos:column="22">f<pos:position pos:line="6" pos:column="23"/></name><operator pos:line="6" pos:column="23">-&gt;<pos:position pos:line="6" pos:column="28"/></operator><name pos:line="6" pos:column="25">r<pos:position pos:line="6" pos:column="26"/></name><operator pos:line="6" pos:column="26">-&gt;<pos:position pos:line="6" pos:column="31"/></operator><name pos:line="6" pos:column="28">main<pos:position pos:line="6" pos:column="32"/></name></name></expr></init></decl>;<pos:position pos:line="6" pos:column="33"/></decl_stmt>
    <if pos:line="7" pos:column="5">if <condition pos:line="7" pos:column="8">(<expr><operator pos:line="7" pos:column="9">!<pos:position pos:line="7" pos:column="10"/></operator><name pos:line="7" pos:column="10">r<pos:position pos:line="7" pos:column="11"/></name></expr>)<pos:position pos:line="7" pos:column="12"/></condition><then pos:line="7" pos:column="12"> <block pos:line="7" pos:column="13">{
        <expr_stmt><expr><name pos:line="8" pos:column="9">r<pos:position pos:line="8" pos:column="10"/></name> <operator pos:line="8" pos:column="11">=<pos:position pos:line="8" pos:column="12"/></operator> <name><name pos:line="8" pos:column="13">f<pos:position pos:line="8" pos:column="14"/></name><operator pos:line="8" pos:column="14">-&gt;<pos:position pos:line="8" pos:column="19"/></operator><name pos:line="8" pos:column="16">r<pos:position pos:line="8" pos:column="17"/></name></name></expr>;<pos:position pos:line="8" pos:column="18"/></expr_stmt>
    }<pos:position pos:line="9" pos:column="6"/></block></then></if>
    <while pos:line="10" pos:column="5">while <condition pos:line="10" pos:column="11">(<expr><name pos:line="10" pos:column="12">r<pos:position pos:line="10" pos:column="13"/></name></expr>)<pos:position pos:line="10" pos:column="14"/></condition> <block pos:line="10" pos:column="15">{
        <decl_stmt><decl><type><name pos:line="11" pos:column="9">session_rec<pos:position pos:line="11" pos:column="20"/></name> <modifier pos:line="11" pos:column="21">*<pos:position pos:line="11" pos:column="22"/></modifier></type><name pos:line="11" pos:column="22">z<pos:position pos:line="11" pos:column="23"/></name> <init pos:line="11" pos:column="24">= <expr><name pos:line="11" pos:column="26">NULL<pos:position pos:line="11" pos:column="30"/></name></expr></init></decl>;<pos:position pos:line="11" pos:column="31"/></decl_stmt>
        <decl_stmt><decl><type><name pos:line="12" pos:column="9">session_dir_conf<pos:position pos:line="12" pos:column="25"/></name> <modifier pos:line="12" pos:column="26">*<pos:position pos:line="12" pos:column="27"/></modifier></type><name pos:line="12" pos:column="27">conf<pos:position pos:line="12" pos:column="31"/></name> <init pos:line="12" pos:column="32">= <expr><call><name pos:line="12" pos:column="34">ap_get_module_config<pos:position pos:line="12" pos:column="54"/></name><argument_list pos:line="12" pos:column="54">(<argument><expr><name><name pos:line="12" pos:column="55">r<pos:position pos:line="12" pos:column="56"/></name><operator pos:line="12" pos:column="56">-&gt;<pos:position pos:line="12" pos:column="61"/></operator><name pos:line="12" pos:column="58">per_dir_config<pos:position pos:line="12" pos:column="72"/></name></name></expr></argument>,
                                                      <argument><expr><operator pos:line="13" pos:column="55">&amp;<pos:position pos:line="13" pos:column="60"/></operator><name pos:line="13" pos:column="56">session_module<pos:position pos:line="13" pos:column="70"/></name></expr></argument>)<pos:position pos:line="13" pos:column="71"/></argument_list></call></expr></init></decl>;<pos:position pos:line="13" pos:column="72"/></decl_stmt>

        <comment type="block" pos:line="15" pos:column="9">/* load the session, or create one if necessary */</comment>
        <comment type="block" pos:line="16" pos:column="9">/* when unset or on error, z will be NULL */</comment>
        <expr_stmt><expr><call><name pos:line="17" pos:column="9">ap_session_load<pos:position pos:line="17" pos:column="24"/></name><argument_list pos:line="17" pos:column="24">(<argument><expr><name pos:line="17" pos:column="25">r<pos:position pos:line="17" pos:column="26"/></name></expr></argument>, <argument><expr><operator pos:line="17" pos:column="28">&amp;<pos:position pos:line="17" pos:column="33"/></operator><name pos:line="17" pos:column="29">z<pos:position pos:line="17" pos:column="30"/></name></expr></argument>)<pos:position pos:line="17" pos:column="31"/></argument_list></call></expr>;<pos:position pos:line="17" pos:column="32"/></expr_stmt>
        <if pos:line="18" pos:column="9">if <condition pos:line="18" pos:column="12">(<expr><operator pos:line="18" pos:column="13">!<pos:position pos:line="18" pos:column="14"/></operator><name pos:line="18" pos:column="14">z<pos:position pos:line="18" pos:column="15"/></name> <operator pos:line="18" pos:column="16">||<pos:position pos:line="18" pos:column="18"/></operator> <name><name pos:line="18" pos:column="19">z<pos:position pos:line="18" pos:column="20"/></name><operator pos:line="18" pos:column="20">-&gt;<pos:position pos:line="18" pos:column="25"/></operator><name pos:line="18" pos:column="22">written<pos:position pos:line="18" pos:column="29"/></name></name></expr>)<pos:position pos:line="18" pos:column="30"/></condition><then pos:line="18" pos:column="30"> <block pos:line="18" pos:column="31">{
            <expr_stmt><expr><name pos:line="19" pos:column="13">r<pos:position pos:line="19" pos:column="14"/></name> <operator pos:line="19" pos:column="15">=<pos:position pos:line="19" pos:column="16"/></operator> <name><name pos:line="19" pos:column="17">r<pos:position pos:line="19" pos:column="18"/></name><operator pos:line="19" pos:column="18">-&gt;<pos:position pos:line="19" pos:column="23"/></operator><name pos:line="19" pos:column="20">next<pos:position pos:line="19" pos:column="24"/></name></name></expr>;<pos:position pos:line="19" pos:column="25"/></expr_stmt>
            <continue pos:line="20" pos:column="13">continue;<pos:position pos:line="20" pos:column="22"/></continue>
        }<pos:position pos:line="21" pos:column="10"/></block></then></if>

        <comment type="block" pos:line="23" pos:column="9">/* if a header was specified, insert the new values from the header */</comment>
        <if pos:line="24" pos:column="9">if <condition pos:line="24" pos:column="12">(<expr><name><name pos:line="24" pos:column="13">conf<pos:position pos:line="24" pos:column="17"/></name><operator pos:line="24" pos:column="17">-&gt;<pos:position pos:line="24" pos:column="22"/></operator><name pos:line="24" pos:column="19">header_set<pos:position pos:line="24" pos:column="29"/></name></name></expr>)<pos:position pos:line="24" pos:column="30"/></condition><then pos:line="24" pos:column="30"> <block pos:line="24" pos:column="31">{
            <decl_stmt><decl><type><specifier pos:line="25" pos:column="13">const<pos:position pos:line="25" pos:column="18"/></specifier> <name pos:line="25" pos:column="19">char<pos:position pos:line="25" pos:column="23"/></name> <modifier pos:line="25" pos:column="24">*<pos:position pos:line="25" pos:column="25"/></modifier></type><name pos:line="25" pos:column="25">override<pos:position pos:line="25" pos:column="33"/></name> <init pos:line="25" pos:column="34">= <expr><call><name pos:line="25" pos:column="36">apr_table_get<pos:position pos:line="25" pos:column="49"/></name><argument_list pos:line="25" pos:column="49">(<argument><expr><name><name pos:line="25" pos:column="50">r<pos:position pos:line="25" pos:column="51"/></name><operator pos:line="25" pos:column="51">-&gt;<pos:position pos:line="25" pos:column="56"/></operator><name pos:line="25" pos:column="53">err_headers_out<pos:position pos:line="25" pos:column="68"/></name></name></expr></argument>, <argument><expr><name><name pos:line="25" pos:column="70">conf<pos:position pos:line="25" pos:column="74"/></name><operator pos:line="25" pos:column="74">-&gt;<pos:position pos:line="25" pos:column="79"/></operator><name pos:line="25" pos:column="76">header<pos:position pos:line="25" pos:column="82"/></name></name></expr></argument>)<pos:position pos:line="25" pos:column="83"/></argument_list></call></expr></init></decl>;<pos:position pos:line="25" pos:column="84"/></decl_stmt>
            <if pos:line="26" pos:column="13">if <condition pos:line="26" pos:column="16">(<expr><operator pos:line="26" pos:column="17">!<pos:position pos:line="26" pos:column="18"/></operator><name pos:line="26" pos:column="18">override<pos:position pos:line="26" pos:column="26"/></name></expr>)<pos:position pos:line="26" pos:column="27"/></condition><then pos:line="26" pos:column="27"> <block pos:line="26" pos:column="28">{
                <expr_stmt><expr><name pos:line="27" pos:column="17">override<pos:position pos:line="27" pos:column="25"/></name> <operator pos:line="27" pos:column="26">=<pos:position pos:line="27" pos:column="27"/></operator> <call><name pos:line="27" pos:column="28">apr_table_get<pos:position pos:line="27" pos:column="41"/></name><argument_list pos:line="27" pos:column="41">(<argument><expr><name><name pos:line="27" pos:column="42">r<pos:position pos:line="27" pos:column="43"/></name><operator pos:line="27" pos:column="43">-&gt;<pos:position pos:line="27" pos:column="48"/></operator><name pos:line="27" pos:column="45">headers_out<pos:position pos:line="27" pos:column="56"/></name></name></expr></argument>, <argument><expr><name><name pos:line="27" pos:column="58">conf<pos:position pos:line="27" pos:column="62"/></name><operator pos:line="27" pos:column="62">-&gt;<pos:position pos:line="27" pos:column="67"/></operator><name pos:line="27" pos:column="64">header<pos:position pos:line="27" pos:column="70"/></name></name></expr></argument>)<pos:position pos:line="27" pos:column="71"/></argument_list></call></expr>;<pos:position pos:line="27" pos:column="72"/></expr_stmt>
            }<pos:position pos:line="28" pos:column="14"/></block></then></if>
            <if pos:line="29" pos:column="13">if <condition pos:line="29" pos:column="16">(<expr><name pos:line="29" pos:column="17">override<pos:position pos:line="29" pos:column="25"/></name></expr>)<pos:position pos:line="29" pos:column="26"/></condition><then pos:line="29" pos:column="26"> <block pos:line="29" pos:column="27">{
                <expr_stmt><expr><call><name pos:line="30" pos:column="17">apr_table_unset<pos:position pos:line="30" pos:column="32"/></name><argument_list pos:line="30" pos:column="32">(<argument><expr><name><name pos:line="30" pos:column="33">r<pos:position pos:line="30" pos:column="34"/></name><operator pos:line="30" pos:column="34">-&gt;<pos:position pos:line="30" pos:column="39"/></operator><name pos:line="30" pos:column="36">err_headers_out<pos:position pos:line="30" pos:column="51"/></name></name></expr></argument>, <argument><expr><name><name pos:line="30" pos:column="53">conf<pos:position pos:line="30" pos:column="57"/></name><operator pos:line="30" pos:column="57">-&gt;<pos:position pos:line="30" pos:column="62"/></operator><name pos:line="30" pos:column="59">header<pos:position pos:line="30" pos:column="65"/></name></name></expr></argument>)<pos:position pos:line="30" pos:column="66"/></argument_list></call></expr>;<pos:position pos:line="30" pos:column="67"/></expr_stmt>
                <expr_stmt><expr><call><name pos:line="31" pos:column="17">apr_table_unset<pos:position pos:line="31" pos:column="32"/></name><argument_list pos:line="31" pos:column="32">(<argument><expr><name><name pos:line="31" pos:column="33">r<pos:position pos:line="31" pos:column="34"/></name><operator pos:line="31" pos:column="34">-&gt;<pos:position pos:line="31" pos:column="39"/></operator><name pos:line="31" pos:column="36">headers_out<pos:position pos:line="31" pos:column="47"/></name></name></expr></argument>, <argument><expr><name><name pos:line="31" pos:column="49">conf<pos:position pos:line="31" pos:column="53"/></name><operator pos:line="31" pos:column="53">-&gt;<pos:position pos:line="31" pos:column="58"/></operator><name pos:line="31" pos:column="55">header<pos:position pos:line="31" pos:column="61"/></name></name></expr></argument>)<pos:position pos:line="31" pos:column="62"/></argument_list></call></expr>;<pos:position pos:line="31" pos:column="63"/></expr_stmt>
                <expr_stmt><expr><name><name pos:line="32" pos:column="17">z<pos:position pos:line="32" pos:column="18"/></name><operator pos:line="32" pos:column="18">-&gt;<pos:position pos:line="32" pos:column="23"/></operator><name pos:line="32" pos:column="20">encoded<pos:position pos:line="32" pos:column="27"/></name></name> <operator pos:line="32" pos:column="28">=<pos:position pos:line="32" pos:column="29"/></operator> <name pos:line="32" pos:column="30">override<pos:position pos:line="32" pos:column="38"/></name></expr>;<pos:position pos:line="32" pos:column="39"/></expr_stmt>
                <expr_stmt><expr><name><name pos:line="33" pos:column="17">z<pos:position pos:line="33" pos:column="18"/></name><operator pos:line="33" pos:column="18">-&gt;<pos:position pos:line="33" pos:column="23"/></operator><name pos:line="33" pos:column="20">dirty<pos:position pos:line="33" pos:column="25"/></name></name> <operator pos:line="33" pos:column="26">=<pos:position pos:line="33" pos:column="27"/></operator> <literal type="number" pos:line="33" pos:column="28">1<pos:position pos:line="33" pos:column="29"/></literal></expr>;<pos:position pos:line="33" pos:column="30"/></expr_stmt>
                <expr_stmt><expr><call><name pos:line="34" pos:column="17">session_identity_decode<pos:position pos:line="34" pos:column="40"/></name><argument_list pos:line="34" pos:column="40">(<argument><expr><name pos:line="34" pos:column="41">r<pos:position pos:line="34" pos:column="42"/></name></expr></argument>, <argument><expr><name pos:line="34" pos:column="44">z<pos:position pos:line="34" pos:column="45"/></name></expr></argument>)<pos:position pos:line="34" pos:column="46"/></argument_list></call></expr>;<pos:position pos:line="34" pos:column="47"/></expr_stmt>
            }<pos:position pos:line="35" pos:column="14"/></block></then></if>
        }<pos:position pos:line="36" pos:column="10"/></block></then></if>

        <comment type="block" pos:line="38" pos:column="9">/* save away the session, and we're done */</comment>
        <comment type="block" pos:line="39" pos:column="9">/* when unset or on error, we've complained to the log */</comment>
        <expr_stmt><expr><call><name pos:line="40" pos:column="9">ap_session_save<pos:position pos:line="40" pos:column="24"/></name><argument_list pos:line="40" pos:column="24">(<argument><expr><name pos:line="40" pos:column="25">r<pos:position pos:line="40" pos:column="26"/></name></expr></argument>, <argument><expr><name pos:line="40" pos:column="28">z<pos:position pos:line="40" pos:column="29"/></name></expr></argument>)<pos:position pos:line="40" pos:column="30"/></argument_list></call></expr>;<pos:position pos:line="40" pos:column="31"/></expr_stmt>

        <expr_stmt><expr><name pos:line="42" pos:column="9">r<pos:position pos:line="42" pos:column="10"/></name> <operator pos:line="42" pos:column="11">=<pos:position pos:line="42" pos:column="12"/></operator> <name><name pos:line="42" pos:column="13">r<pos:position pos:line="42" pos:column="14"/></name><operator pos:line="42" pos:column="14">-&gt;<pos:position pos:line="42" pos:column="19"/></operator><name pos:line="42" pos:column="16">next<pos:position pos:line="42" pos:column="20"/></name></name></expr>;<pos:position pos:line="42" pos:column="21"/></expr_stmt>
    }<pos:position pos:line="43" pos:column="6"/></block></while>

    <comment type="block" pos:line="45" pos:column="5">/* remove ourselves from the filter chain */</comment>
    <expr_stmt><expr><call><name pos:line="46" pos:column="5">ap_remove_output_filter<pos:position pos:line="46" pos:column="28"/></name><argument_list pos:line="46" pos:column="28">(<argument><expr><name pos:line="46" pos:column="29">f<pos:position pos:line="46" pos:column="30"/></name></expr></argument>)<pos:position pos:line="46" pos:column="31"/></argument_list></call></expr>;<pos:position pos:line="46" pos:column="32"/></expr_stmt>

    <comment type="block" pos:line="48" pos:column="5">/* send the data up the stack */</comment>
    <return pos:line="49" pos:column="5">return <expr><call><name pos:line="49" pos:column="12">ap_pass_brigade<pos:position pos:line="49" pos:column="27"/></name><argument_list pos:line="49" pos:column="27">(<argument><expr><name><name pos:line="49" pos:column="28">f<pos:position pos:line="49" pos:column="29"/></name><operator pos:line="49" pos:column="29">-&gt;<pos:position pos:line="49" pos:column="34"/></operator><name pos:line="49" pos:column="31">next<pos:position pos:line="49" pos:column="35"/></name></name></expr></argument>, <argument><expr><name pos:line="49" pos:column="37">in<pos:position pos:line="49" pos:column="39"/></name></expr></argument>)<pos:position pos:line="49" pos:column="40"/></argument_list></call></expr>;<pos:position pos:line="49" pos:column="41"/></return>

}<pos:position pos:line="51" pos:column="2"/></block></function></unit>

<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/httpd/gumtree/httpd_function_3835.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">void<pos:position pos:line="1" pos:column="12"/></name></type> <name pos:line="1" pos:column="13">put_int_flush_right<pos:position pos:line="1" pos:column="32"/></name><parameter_list pos:line="1" pos:column="32">(<parameter><decl><type><name pos:line="1" pos:column="33">request_rec<pos:position pos:line="1" pos:column="44"/></name> <modifier pos:line="1" pos:column="45">*<pos:position pos:line="1" pos:column="46"/></modifier></type> <name pos:line="1" pos:column="47">r<pos:position pos:line="1" pos:column="48"/></name></decl></parameter>, <parameter><decl><type><name pos:line="1" pos:column="50">int<pos:position pos:line="1" pos:column="53"/></name></type> <name pos:line="1" pos:column="54">i<pos:position pos:line="1" pos:column="55"/></name></decl></parameter>, <parameter><decl><type><name pos:line="1" pos:column="57">int<pos:position pos:line="1" pos:column="60"/></name></type> <name pos:line="1" pos:column="61">field<pos:position pos:line="1" pos:column="66"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="67"/></parameter_list>
<block pos:line="2" pos:column="1">{
    <if pos:line="3" pos:column="5">if <condition pos:line="3" pos:column="8">(<expr><name pos:line="3" pos:column="9">field<pos:position pos:line="3" pos:column="14"/></name> <operator pos:line="3" pos:column="15">&gt;<pos:position pos:line="3" pos:column="19"/></operator> <literal type="number" pos:line="3" pos:column="17">1<pos:position pos:line="3" pos:column="18"/></literal> <operator pos:line="3" pos:column="19">||<pos:position pos:line="3" pos:column="21"/></operator> <name pos:line="3" pos:column="22">i<pos:position pos:line="3" pos:column="23"/></name> <operator pos:line="3" pos:column="24">&gt;<pos:position pos:line="3" pos:column="28"/></operator> <literal type="number" pos:line="3" pos:column="26">9<pos:position pos:line="3" pos:column="27"/></literal></expr>)<pos:position pos:line="3" pos:column="28"/></condition><then pos:line="3" pos:column="28">
        <block type="pseudo"><expr_stmt><expr><call><name pos:line="4" pos:column="9">put_int_flush_right<pos:position pos:line="4" pos:column="28"/></name><argument_list pos:line="4" pos:column="28">(<argument><expr><name pos:line="4" pos:column="29">r<pos:position pos:line="4" pos:column="30"/></name></expr></argument>, <argument><expr><name pos:line="4" pos:column="32">i<pos:position pos:line="4" pos:column="33"/></name> <operator pos:line="4" pos:column="34">/<pos:position pos:line="4" pos:column="35"/></operator> <literal type="number" pos:line="4" pos:column="36">10<pos:position pos:line="4" pos:column="38"/></literal></expr></argument>, <argument><expr><name pos:line="4" pos:column="40">field<pos:position pos:line="4" pos:column="45"/></name> <operator pos:line="4" pos:column="46">-<pos:position pos:line="4" pos:column="47"/></operator> <literal type="number" pos:line="4" pos:column="48">1<pos:position pos:line="4" pos:column="49"/></literal></expr></argument>)<pos:position pos:line="4" pos:column="50"/></argument_list></call></expr>;<pos:position pos:line="4" pos:column="51"/></expr_stmt></block></then></if>
    <if pos:line="5" pos:column="5">if <condition pos:line="5" pos:column="8">(<expr><name pos:line="5" pos:column="9">i<pos:position pos:line="5" pos:column="10"/></name></expr>)<pos:position pos:line="5" pos:column="11"/></condition><then pos:line="5" pos:column="11"> <block pos:line="5" pos:column="12">{
        <if pos:line="6" pos:column="9">if <condition pos:line="6" pos:column="12">(<expr><name pos:line="6" pos:column="13">r<pos:position pos:line="6" pos:column="14"/></name></expr>)<pos:position pos:line="6" pos:column="15"/></condition><then pos:line="6" pos:column="15">
            <block type="pseudo"><expr_stmt><expr><call><name pos:line="7" pos:column="13">ap_rputc<pos:position pos:line="7" pos:column="21"/></name><argument_list pos:line="7" pos:column="21">(<argument><expr><literal type="char" pos:line="7" pos:column="22">'0'<pos:position pos:line="7" pos:column="25"/></literal> <operator pos:line="7" pos:column="26">+<pos:position pos:line="7" pos:column="27"/></operator> <name pos:line="7" pos:column="28">i<pos:position pos:line="7" pos:column="29"/></name> <operator pos:line="7" pos:column="30">%<pos:position pos:line="7" pos:column="31"/></operator> <literal type="number" pos:line="7" pos:column="32">10<pos:position pos:line="7" pos:column="34"/></literal></expr></argument>, <argument><expr><name pos:line="7" pos:column="36">r<pos:position pos:line="7" pos:column="37"/></name></expr></argument>)<pos:position pos:line="7" pos:column="38"/></argument_list></call></expr>;<pos:position pos:line="7" pos:column="39"/></expr_stmt></block></then>
        <else pos:line="8" pos:column="9">else
            <block type="pseudo"><expr_stmt><expr><call><name pos:line="9" pos:column="13">apr_file_putc<pos:position pos:line="9" pos:column="26"/></name><argument_list pos:line="9" pos:column="26">(<argument><expr><literal type="char" pos:line="9" pos:column="27">'0'<pos:position pos:line="9" pos:column="30"/></literal> <operator pos:line="9" pos:column="31">+<pos:position pos:line="9" pos:column="32"/></operator> <name pos:line="9" pos:column="33">i<pos:position pos:line="9" pos:column="34"/></name> <operator pos:line="9" pos:column="35">%<pos:position pos:line="9" pos:column="36"/></operator> <literal type="number" pos:line="9" pos:column="37">10<pos:position pos:line="9" pos:column="39"/></literal></expr></argument>, <argument><expr><name pos:line="9" pos:column="41">out<pos:position pos:line="9" pos:column="44"/></name></expr></argument>)<pos:position pos:line="9" pos:column="45"/></argument_list></call></expr>;<pos:position pos:line="9" pos:column="46"/></expr_stmt></block></else></if>
    }<pos:position pos:line="10" pos:column="6"/></block></then>
    <else pos:line="11" pos:column="5">else <block pos:line="11" pos:column="10">{
        <if pos:line="12" pos:column="9">if <condition pos:line="12" pos:column="12">(<expr><name pos:line="12" pos:column="13">r<pos:position pos:line="12" pos:column="14"/></name></expr>)<pos:position pos:line="12" pos:column="15"/></condition><then pos:line="12" pos:column="15">
            <block type="pseudo"><expr_stmt><expr><call><name pos:line="13" pos:column="13">ap_rputs<pos:position pos:line="13" pos:column="21"/></name><argument_list pos:line="13" pos:column="21">(<argument><expr><literal type="string" pos:line="13" pos:column="22">"&amp;nbsp;"<pos:position pos:line="13" pos:column="34"/></literal></expr></argument>, <argument><expr><name pos:line="13" pos:column="32">r<pos:position pos:line="13" pos:column="33"/></name></expr></argument>)<pos:position pos:line="13" pos:column="34"/></argument_list></call></expr>;<pos:position pos:line="13" pos:column="35"/></expr_stmt></block></then>
        <else pos:line="14" pos:column="9">else
            <block type="pseudo"><expr_stmt><expr><call><name pos:line="15" pos:column="13">apr_file_printf<pos:position pos:line="15" pos:column="28"/></name><argument_list pos:line="15" pos:column="28">(<argument><expr><name pos:line="15" pos:column="29">out<pos:position pos:line="15" pos:column="32"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="15" pos:column="34">" "<pos:position pos:line="15" pos:column="37"/></literal></expr></argument>)<pos:position pos:line="15" pos:column="38"/></argument_list></call></expr>;<pos:position pos:line="15" pos:column="39"/></expr_stmt></block></else></if>
    }<pos:position pos:line="16" pos:column="6"/></block></else></if>
}<pos:position pos:line="17" pos:column="2"/></block></function></unit>

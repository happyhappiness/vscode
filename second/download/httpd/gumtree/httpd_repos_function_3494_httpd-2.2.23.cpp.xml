<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/httpd/gumtree/httpd_repos_function_3494_httpd-2.2.23.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">int<pos:position pos:line="1" pos:column="4"/></name></type> <name pos:line="1" pos:column="5">external_spawn<pos:position pos:line="1" pos:column="19"/></name><parameter_list pos:line="1" pos:column="19">(<parameter><decl><type><name pos:line="1" pos:column="20">command_t<pos:position pos:line="1" pos:column="29"/></name> <modifier pos:line="1" pos:column="30">*<pos:position pos:line="1" pos:column="31"/></modifier></type><name pos:line="1" pos:column="31">cmd<pos:position pos:line="1" pos:column="34"/></name></decl></parameter>, <parameter><decl><type><specifier pos:line="1" pos:column="36">const<pos:position pos:line="1" pos:column="41"/></specifier> <name pos:line="1" pos:column="42">char<pos:position pos:line="1" pos:column="46"/></name> <modifier pos:line="1" pos:column="47">*<pos:position pos:line="1" pos:column="48"/></modifier></type><name pos:line="1" pos:column="48">file<pos:position pos:line="1" pos:column="52"/></name></decl></parameter>, <parameter><decl><type><specifier pos:line="1" pos:column="54">const<pos:position pos:line="1" pos:column="59"/></specifier> <name pos:line="1" pos:column="60">char<pos:position pos:line="1" pos:column="64"/></name> <modifier pos:line="1" pos:column="65">*<pos:position pos:line="1" pos:column="66"/></modifier><modifier pos:line="1" pos:column="66">*<pos:position pos:line="1" pos:column="67"/></modifier></type><name pos:line="1" pos:column="67">argv<pos:position pos:line="1" pos:column="71"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="72"/></parameter_list>
<block pos:line="2" pos:column="1">{
    <if pos:line="3" pos:column="5">if <condition pos:line="3" pos:column="8">(<expr><operator pos:line="3" pos:column="9">!<pos:position pos:line="3" pos:column="10"/></operator><name><name pos:line="3" pos:column="10">cmd<pos:position pos:line="3" pos:column="13"/></name><operator pos:line="3" pos:column="13">-&gt;<pos:position pos:line="3" pos:column="18"/></operator><name pos:line="3" pos:column="15">options<pos:position pos:line="3" pos:column="22"/></name><operator pos:line="3" pos:column="22">.<pos:position pos:line="3" pos:column="23"/></operator><name pos:line="3" pos:column="23">silent<pos:position pos:line="3" pos:column="29"/></name></name></expr>)<pos:position pos:line="3" pos:column="30"/></condition><then pos:line="3" pos:column="30"> <block pos:line="3" pos:column="31">{
        <decl_stmt><decl><type><specifier pos:line="4" pos:column="9">const<pos:position pos:line="4" pos:column="14"/></specifier> <name pos:line="4" pos:column="15">char<pos:position pos:line="4" pos:column="19"/></name> <modifier pos:line="4" pos:column="20">*<pos:position pos:line="4" pos:column="21"/></modifier><modifier pos:line="4" pos:column="21">*<pos:position pos:line="4" pos:column="22"/></modifier></type><name pos:line="4" pos:column="22">argument<pos:position pos:line="4" pos:column="30"/></name> <init pos:line="4" pos:column="31">= <expr><name pos:line="4" pos:column="33">argv<pos:position pos:line="4" pos:column="37"/></name></expr></init></decl>;<pos:position pos:line="4" pos:column="38"/></decl_stmt>
        <expr_stmt><expr><call><name pos:line="5" pos:column="9">printf<pos:position pos:line="5" pos:column="15"/></name><argument_list pos:line="5" pos:column="15">(<argument><expr><literal type="string" pos:line="5" pos:column="16">"Executing: "<pos:position pos:line="5" pos:column="29"/></literal></expr></argument>)<pos:position pos:line="5" pos:column="30"/></argument_list></call></expr>;<pos:position pos:line="5" pos:column="31"/></expr_stmt>
        <while pos:line="6" pos:column="9">while <condition pos:line="6" pos:column="15">(<expr><operator pos:line="6" pos:column="16">*<pos:position pos:line="6" pos:column="17"/></operator><name pos:line="6" pos:column="17">argument<pos:position pos:line="6" pos:column="25"/></name></expr>)<pos:position pos:line="6" pos:column="26"/></condition> <block pos:line="6" pos:column="27">{
            <expr_stmt><expr><call><name pos:line="7" pos:column="13">printf<pos:position pos:line="7" pos:column="19"/></name><argument_list pos:line="7" pos:column="19">(<argument><expr><literal type="string" pos:line="7" pos:column="20">"%s "<pos:position pos:line="7" pos:column="25"/></literal></expr></argument>, <argument><expr><operator pos:line="7" pos:column="27">*<pos:position pos:line="7" pos:column="28"/></operator><name pos:line="7" pos:column="28">argument<pos:position pos:line="7" pos:column="36"/></name></expr></argument>)<pos:position pos:line="7" pos:column="37"/></argument_list></call></expr>;<pos:position pos:line="7" pos:column="38"/></expr_stmt>
            <expr_stmt><expr><name pos:line="8" pos:column="13">argument<pos:position pos:line="8" pos:column="21"/></name><operator pos:line="8" pos:column="21">++<pos:position pos:line="8" pos:column="23"/></operator></expr>;<pos:position pos:line="8" pos:column="24"/></expr_stmt>
        }<pos:position pos:line="9" pos:column="10"/></block></while>
        <expr_stmt><expr><call><name pos:line="10" pos:column="9">puts<pos:position pos:line="10" pos:column="13"/></name><argument_list pos:line="10" pos:column="13">(<argument><expr><literal type="string" pos:line="10" pos:column="14">""<pos:position pos:line="10" pos:column="16"/></literal></expr></argument>)<pos:position pos:line="10" pos:column="17"/></argument_list></call></expr>;<pos:position pos:line="10" pos:column="18"/></expr_stmt>
    }<pos:position pos:line="11" pos:column="6"/></block></then></if>

    <if pos:line="13" pos:column="5">if <condition pos:line="13" pos:column="8">(<expr><name><name pos:line="13" pos:column="9">cmd<pos:position pos:line="13" pos:column="12"/></name><operator pos:line="13" pos:column="12">-&gt;<pos:position pos:line="13" pos:column="17"/></operator><name pos:line="13" pos:column="14">options<pos:position pos:line="13" pos:column="21"/></name><operator pos:line="13" pos:column="21">.<pos:position pos:line="13" pos:column="22"/></operator><name pos:line="13" pos:column="22">dry_run<pos:position pos:line="13" pos:column="29"/></name></name></expr>)<pos:position pos:line="13" pos:column="30"/></condition><then pos:line="13" pos:column="30"> <block pos:line="13" pos:column="31">{
        <return pos:line="14" pos:column="9">return <expr><literal type="number" pos:line="14" pos:column="16">0<pos:position pos:line="14" pos:column="17"/></literal></expr>;<pos:position pos:line="14" pos:column="18"/></return>
    }<pos:position pos:line="15" pos:column="6"/></block></then></if>
<cpp:if pos:line="16" pos:column="1">#<cpp:directive pos:line="16" pos:column="2">if<pos:position pos:line="16" pos:column="4"/></cpp:directive> <expr><call><name pos:line="16" pos:column="5">defined<pos:position pos:line="16" pos:column="12"/></name><argument_list pos:line="16" pos:column="12">(<argument><expr><name pos:line="16" pos:column="13">__EMX__<pos:position pos:line="16" pos:column="20"/></name></expr></argument>)<pos:position pos:line="16" pos:column="21"/></argument_list></call> <operator pos:line="16" pos:column="22">||<pos:position pos:line="16" pos:column="24"/></operator> <call><name pos:line="16" pos:column="25">defined<pos:position pos:line="16" pos:column="32"/></name><argument_list pos:line="16" pos:column="32">(<argument><expr><name pos:line="16" pos:column="33">__MINGW32__<pos:position pos:line="16" pos:column="44"/></name></expr></argument>)<pos:position pos:line="16" pos:column="45"/></argument_list></call></expr></cpp:if>
    <return pos:line="17" pos:column="5">return <expr><call><name pos:line="17" pos:column="12">spawnvp<pos:position pos:line="17" pos:column="19"/></name><argument_list pos:line="17" pos:column="19">(<argument><expr><name pos:line="17" pos:column="20">P_WAIT<pos:position pos:line="17" pos:column="26"/></name></expr></argument>, <argument><expr><name><name pos:line="17" pos:column="28">argv<pos:position pos:line="17" pos:column="32"/></name><index pos:line="17" pos:column="32">[<expr><literal type="number" pos:line="17" pos:column="33">0<pos:position pos:line="17" pos:column="34"/></literal></expr>]<pos:position pos:line="17" pos:column="35"/></index></name></expr></argument>, <argument><expr><name pos:line="17" pos:column="37">argv<pos:position pos:line="17" pos:column="41"/></name></expr></argument>)<pos:position pos:line="17" pos:column="42"/></argument_list></call></expr>;<pos:position pos:line="17" pos:column="43"/></return>
<cpp:else pos:line="18" pos:column="1">#<cpp:directive pos:line="18" pos:column="2">else<pos:position pos:line="18" pos:column="6"/></cpp:directive></cpp:else>
    <block pos:line="19" pos:column="5">{
        <decl_stmt><decl><type><name pos:line="20" pos:column="9">pid_t<pos:position pos:line="20" pos:column="14"/></name></type> <name pos:line="20" pos:column="15">pid<pos:position pos:line="20" pos:column="18"/></name></decl>;<pos:position pos:line="20" pos:column="19"/></decl_stmt>
        <expr_stmt><expr><name pos:line="21" pos:column="9">pid<pos:position pos:line="21" pos:column="12"/></name> <operator pos:line="21" pos:column="13">=<pos:position pos:line="21" pos:column="14"/></operator> <call><name pos:line="21" pos:column="15">fork<pos:position pos:line="21" pos:column="19"/></name><argument_list pos:line="21" pos:column="19">()<pos:position pos:line="21" pos:column="21"/></argument_list></call></expr>;<pos:position pos:line="21" pos:column="22"/></expr_stmt>
        <if pos:line="22" pos:column="9">if <condition pos:line="22" pos:column="12">(<expr><name pos:line="22" pos:column="13">pid<pos:position pos:line="22" pos:column="16"/></name> <operator pos:line="22" pos:column="17">==<pos:position pos:line="22" pos:column="19"/></operator> <literal type="number" pos:line="22" pos:column="20">0<pos:position pos:line="22" pos:column="21"/></literal></expr>)<pos:position pos:line="22" pos:column="22"/></condition><then pos:line="22" pos:column="22"> <block pos:line="22" pos:column="23">{
            <return pos:line="23" pos:column="13">return <expr><call><name pos:line="23" pos:column="20">execvp<pos:position pos:line="23" pos:column="26"/></name><argument_list pos:line="23" pos:column="26">(<argument><expr><name><name pos:line="23" pos:column="27">argv<pos:position pos:line="23" pos:column="31"/></name><index pos:line="23" pos:column="31">[<expr><literal type="number" pos:line="23" pos:column="32">0<pos:position pos:line="23" pos:column="33"/></literal></expr>]<pos:position pos:line="23" pos:column="34"/></index></name></expr></argument>, <argument><expr><operator pos:line="23" pos:column="36">(<pos:position pos:line="23" pos:column="37"/></operator><name pos:line="23" pos:column="37">char<pos:position pos:line="23" pos:column="41"/></name><operator pos:line="23" pos:column="41">*<pos:position pos:line="23" pos:column="42"/></operator><operator pos:line="23" pos:column="42">*<pos:position pos:line="23" pos:column="43"/></operator><operator pos:line="23" pos:column="43">)<pos:position pos:line="23" pos:column="44"/></operator><name pos:line="23" pos:column="44">argv<pos:position pos:line="23" pos:column="48"/></name></expr></argument>)<pos:position pos:line="23" pos:column="49"/></argument_list></call></expr>;<pos:position pos:line="23" pos:column="50"/></return>
        }<pos:position pos:line="24" pos:column="10"/></block></then>
        <else pos:line="25" pos:column="9">else <block pos:line="25" pos:column="14">{
            <decl_stmt><decl><type><name pos:line="26" pos:column="13">int<pos:position pos:line="26" pos:column="16"/></name></type> <name pos:line="26" pos:column="17">statuscode<pos:position pos:line="26" pos:column="27"/></name></decl>;<pos:position pos:line="26" pos:column="28"/></decl_stmt>
            <expr_stmt><expr><call><name pos:line="27" pos:column="13">waitpid<pos:position pos:line="27" pos:column="20"/></name><argument_list pos:line="27" pos:column="20">(<argument><expr><name pos:line="27" pos:column="21">pid<pos:position pos:line="27" pos:column="24"/></name></expr></argument>, <argument><expr><operator pos:line="27" pos:column="26">&amp;<pos:position pos:line="27" pos:column="31"/></operator><name pos:line="27" pos:column="27">statuscode<pos:position pos:line="27" pos:column="37"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="27" pos:column="39">0<pos:position pos:line="27" pos:column="40"/></literal></expr></argument>)<pos:position pos:line="27" pos:column="41"/></argument_list></call></expr>;<pos:position pos:line="27" pos:column="42"/></expr_stmt>
            <if pos:line="28" pos:column="13">if <condition pos:line="28" pos:column="16">(<expr><call><name pos:line="28" pos:column="17">WIFEXITED<pos:position pos:line="28" pos:column="26"/></name><argument_list pos:line="28" pos:column="26">(<argument><expr><name pos:line="28" pos:column="27">statuscode<pos:position pos:line="28" pos:column="37"/></name></expr></argument>)<pos:position pos:line="28" pos:column="38"/></argument_list></call></expr>)<pos:position pos:line="28" pos:column="39"/></condition><then pos:line="28" pos:column="39"> <block pos:line="28" pos:column="40">{
                <return pos:line="29" pos:column="17">return <expr><call><name pos:line="29" pos:column="24">WEXITSTATUS<pos:position pos:line="29" pos:column="35"/></name><argument_list pos:line="29" pos:column="35">(<argument><expr><name pos:line="29" pos:column="36">statuscode<pos:position pos:line="29" pos:column="46"/></name></expr></argument>)<pos:position pos:line="29" pos:column="47"/></argument_list></call></expr>;<pos:position pos:line="29" pos:column="48"/></return>
            }<pos:position pos:line="30" pos:column="14"/></block></then></if>
            <return pos:line="31" pos:column="13">return <expr><literal type="number" pos:line="31" pos:column="20">0<pos:position pos:line="31" pos:column="21"/></literal></expr>;<pos:position pos:line="31" pos:column="22"/></return>
        }<pos:position pos:line="32" pos:column="10"/></block></else></if>
    }<pos:position pos:line="33" pos:column="6"/></block>
<cpp:endif pos:line="34" pos:column="1">#<cpp:directive pos:line="34" pos:column="2">endif<pos:position pos:line="34" pos:column="7"/></cpp:directive></cpp:endif>
}<pos:position pos:line="35" pos:column="2"/></block></function></unit>

<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/httpd/gumtree/httpd_repos_function_4399_httpd-2.4.25.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">void<pos:position pos:line="1" pos:column="12"/></name></type> <name pos:line="1" pos:column="13">process_timeout_queue<pos:position pos:line="1" pos:column="34"/></name><parameter_list pos:line="1" pos:column="34">(<parameter><decl><type><name><name pos:line="1" pos:column="35">struct<pos:position pos:line="1" pos:column="41"/></name> <name pos:line="1" pos:column="42">timeout_queue<pos:position pos:line="1" pos:column="55"/></name></name> <modifier pos:line="1" pos:column="56">*<pos:position pos:line="1" pos:column="57"/></modifier></type><name pos:line="1" pos:column="57">q<pos:position pos:line="1" pos:column="58"/></name></decl></parameter>,
                                  <parameter><decl><type><name pos:line="2" pos:column="35">apr_time_t<pos:position pos:line="2" pos:column="45"/></name></type> <name pos:line="2" pos:column="46">timeout_time<pos:position pos:line="2" pos:column="58"/></name></decl></parameter>,
                                  <parameter><function_decl><type><name pos:line="3" pos:column="35">int<pos:position pos:line="3" pos:column="38"/></name></type> (<modifier pos:line="3" pos:column="40">*<pos:position pos:line="3" pos:column="41"/></modifier><name pos:line="3" pos:column="41">func<pos:position pos:line="3" pos:column="45"/></name>)<parameter_list pos:line="3" pos:column="46">(<parameter><decl><type><name pos:line="3" pos:column="47">event_conn_state_t<pos:position pos:line="3" pos:column="65"/></name> <modifier pos:line="3" pos:column="66">*<pos:position pos:line="3" pos:column="67"/></modifier></type></decl></parameter>)<pos:position pos:line="3" pos:column="68"/></parameter_list></function_decl></parameter>)<pos:position pos:line="3" pos:column="69"/></parameter_list>
<block pos:line="4" pos:column="1">{
    <decl_stmt><decl><type><name pos:line="5" pos:column="5">int<pos:position pos:line="5" pos:column="8"/></name></type> <name pos:line="5" pos:column="9">total<pos:position pos:line="5" pos:column="14"/></name> <init pos:line="5" pos:column="15">= <expr><literal type="number" pos:line="5" pos:column="17">0<pos:position pos:line="5" pos:column="18"/></literal></expr></init></decl>, <decl><type ref="prev"/><name pos:line="5" pos:column="20">count<pos:position pos:line="5" pos:column="25"/></name></decl>;<pos:position pos:line="5" pos:column="26"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="6" pos:column="5">event_conn_state_t<pos:position pos:line="6" pos:column="23"/></name> <modifier pos:line="6" pos:column="24">*<pos:position pos:line="6" pos:column="25"/></modifier></type><name pos:line="6" pos:column="25">first<pos:position pos:line="6" pos:column="30"/></name></decl>, <modifier pos:line="6" pos:column="32">*<pos:position pos:line="6" pos:column="33"/></modifier><decl><type ref="prev"/><name pos:line="6" pos:column="33">cs<pos:position pos:line="6" pos:column="35"/></name></decl>, <modifier pos:line="6" pos:column="37">*<pos:position pos:line="6" pos:column="38"/></modifier><decl><type ref="prev"/><name pos:line="6" pos:column="38">last<pos:position pos:line="6" pos:column="42"/></name></decl>;<pos:position pos:line="6" pos:column="43"/></decl_stmt>
    <decl_stmt><decl><type><name><name pos:line="7" pos:column="5">struct<pos:position pos:line="7" pos:column="11"/></name> <name pos:line="7" pos:column="12">timeout_head_t<pos:position pos:line="7" pos:column="26"/></name></name></type> <name pos:line="7" pos:column="27">trash<pos:position pos:line="7" pos:column="32"/></name></decl>;<pos:position pos:line="7" pos:column="33"/></decl_stmt>
    <decl_stmt><decl><type><name><name pos:line="8" pos:column="5">struct<pos:position pos:line="8" pos:column="11"/></name> <name pos:line="8" pos:column="12">timeout_queue<pos:position pos:line="8" pos:column="25"/></name></name> <modifier pos:line="8" pos:column="26">*<pos:position pos:line="8" pos:column="27"/></modifier></type><name pos:line="8" pos:column="27">qp<pos:position pos:line="8" pos:column="29"/></name></decl>;<pos:position pos:line="8" pos:column="30"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="9" pos:column="5">apr_status_t<pos:position pos:line="9" pos:column="17"/></name></type> <name pos:line="9" pos:column="18">rv<pos:position pos:line="9" pos:column="20"/></name></decl>;<pos:position pos:line="9" pos:column="21"/></decl_stmt>

    <if pos:line="11" pos:column="5">if <condition pos:line="11" pos:column="8">(<expr><operator pos:line="11" pos:column="9">!<pos:position pos:line="11" pos:column="10"/></operator><operator pos:line="11" pos:column="10">*<pos:position pos:line="11" pos:column="11"/></operator><name><name pos:line="11" pos:column="11">q<pos:position pos:line="11" pos:column="12"/></name><operator pos:line="11" pos:column="12">-&gt;<pos:position pos:line="11" pos:column="17"/></operator><name pos:line="11" pos:column="14">total<pos:position pos:line="11" pos:column="19"/></name></name></expr>)<pos:position pos:line="11" pos:column="20"/></condition><then pos:line="11" pos:column="20"> <block pos:line="11" pos:column="21">{
        <return pos:line="12" pos:column="9">return;<pos:position pos:line="12" pos:column="16"/></return>
    }<pos:position pos:line="13" pos:column="6"/></block></then></if>

    <expr_stmt><expr><call><name pos:line="15" pos:column="5">APR_RING_INIT<pos:position pos:line="15" pos:column="18"/></name><argument_list pos:line="15" pos:column="18">(<argument><expr><operator pos:line="15" pos:column="19">&amp;<pos:position pos:line="15" pos:column="24"/></operator><name pos:line="15" pos:column="20">trash<pos:position pos:line="15" pos:column="25"/></name></expr></argument>, <argument><expr><name pos:line="15" pos:column="27">event_conn_state_t<pos:position pos:line="15" pos:column="45"/></name></expr></argument>, <argument><expr><name pos:line="15" pos:column="47">timeout_list<pos:position pos:line="15" pos:column="59"/></name></expr></argument>)<pos:position pos:line="15" pos:column="60"/></argument_list></call></expr>;<pos:position pos:line="15" pos:column="61"/></expr_stmt>
    <for pos:line="16" pos:column="5">for <control pos:line="16" pos:column="9">(<init><expr><name pos:line="16" pos:column="10">qp<pos:position pos:line="16" pos:column="12"/></name> <operator pos:line="16" pos:column="13">=<pos:position pos:line="16" pos:column="14"/></operator> <name pos:line="16" pos:column="15">q<pos:position pos:line="16" pos:column="16"/></name></expr>;<pos:position pos:line="16" pos:column="17"/></init> <condition><expr><name pos:line="16" pos:column="18">qp<pos:position pos:line="16" pos:column="20"/></name></expr>;<pos:position pos:line="16" pos:column="21"/></condition> <incr><expr><name pos:line="16" pos:column="22">qp<pos:position pos:line="16" pos:column="24"/></name> <operator pos:line="16" pos:column="25">=<pos:position pos:line="16" pos:column="26"/></operator> <name><name pos:line="16" pos:column="27">qp<pos:position pos:line="16" pos:column="29"/></name><operator pos:line="16" pos:column="29">-&gt;<pos:position pos:line="16" pos:column="34"/></operator><name pos:line="16" pos:column="31">next<pos:position pos:line="16" pos:column="35"/></name></name></expr></incr>)<pos:position pos:line="16" pos:column="36"/></control> <block pos:line="16" pos:column="37">{
        <expr_stmt><expr><name pos:line="17" pos:column="9">count<pos:position pos:line="17" pos:column="14"/></name> <operator pos:line="17" pos:column="15">=<pos:position pos:line="17" pos:column="16"/></operator> <literal type="number" pos:line="17" pos:column="17">0<pos:position pos:line="17" pos:column="18"/></literal></expr>;<pos:position pos:line="17" pos:column="19"/></expr_stmt>
        <expr_stmt><expr><name pos:line="18" pos:column="9">cs<pos:position pos:line="18" pos:column="11"/></name> <operator pos:line="18" pos:column="12">=<pos:position pos:line="18" pos:column="13"/></operator> <name pos:line="18" pos:column="14">first<pos:position pos:line="18" pos:column="19"/></name> <operator pos:line="18" pos:column="20">=<pos:position pos:line="18" pos:column="21"/></operator> <name pos:line="18" pos:column="22">last<pos:position pos:line="18" pos:column="26"/></name> <operator pos:line="18" pos:column="27">=<pos:position pos:line="18" pos:column="28"/></operator> <call><name pos:line="18" pos:column="29">APR_RING_FIRST<pos:position pos:line="18" pos:column="43"/></name><argument_list pos:line="18" pos:column="43">(<argument><expr><operator pos:line="18" pos:column="44">&amp;<pos:position pos:line="18" pos:column="49"/></operator><name><name pos:line="18" pos:column="45">qp<pos:position pos:line="18" pos:column="47"/></name><operator pos:line="18" pos:column="47">-&gt;<pos:position pos:line="18" pos:column="52"/></operator><name pos:line="18" pos:column="49">head<pos:position pos:line="18" pos:column="53"/></name></name></expr></argument>)<pos:position pos:line="18" pos:column="54"/></argument_list></call></expr>;<pos:position pos:line="18" pos:column="55"/></expr_stmt>
        <while pos:line="19" pos:column="9">while <condition pos:line="19" pos:column="15">(<expr><name pos:line="19" pos:column="16">cs<pos:position pos:line="19" pos:column="18"/></name> <operator pos:line="19" pos:column="19">!=<pos:position pos:line="19" pos:column="21"/></operator> <call><name pos:line="19" pos:column="22">APR_RING_SENTINEL<pos:position pos:line="19" pos:column="39"/></name><argument_list pos:line="19" pos:column="39">(<argument><expr><operator pos:line="19" pos:column="40">&amp;<pos:position pos:line="19" pos:column="45"/></operator><name><name pos:line="19" pos:column="41">qp<pos:position pos:line="19" pos:column="43"/></name><operator pos:line="19" pos:column="43">-&gt;<pos:position pos:line="19" pos:column="48"/></operator><name pos:line="19" pos:column="45">head<pos:position pos:line="19" pos:column="49"/></name></name></expr></argument>, <argument><expr><name pos:line="19" pos:column="51">event_conn_state_t<pos:position pos:line="19" pos:column="69"/></name></expr></argument>,
                                       <argument><expr><name pos:line="20" pos:column="40">timeout_list<pos:position pos:line="20" pos:column="52"/></name></expr></argument>)<pos:position pos:line="20" pos:column="53"/></argument_list></call>
               <comment type="block" pos:line="21" pos:column="16">/* Trash the entry if:
                * - no timeout_time was given (asked for all), or
                * - it expired (according to the queue timeout), or
                * - the system clock skewed in the past: no entry should be
                *   registered above the given timeout_time (~now) + the queue
                *   timeout, we won't keep any here (eg. for centuries).
                * Stop otherwise, no following entry will match thanks to the
                * single timeout per queue (entries are added to the end!).
                * This allows maintenance in O(1).
                */</comment>
               <operator pos:line="31" pos:column="16">&amp;&amp;<pos:position pos:line="31" pos:column="26"/></operator> <operator pos:line="31" pos:column="19">(<pos:position pos:line="31" pos:column="20"/></operator><operator pos:line="31" pos:column="20">!<pos:position pos:line="31" pos:column="21"/></operator><name pos:line="31" pos:column="21">timeout_time<pos:position pos:line="31" pos:column="33"/></name>
                   <operator pos:line="32" pos:column="20">||<pos:position pos:line="32" pos:column="22"/></operator> <name><name pos:line="32" pos:column="23">cs<pos:position pos:line="32" pos:column="25"/></name><operator pos:line="32" pos:column="25">-&gt;<pos:position pos:line="32" pos:column="30"/></operator><name pos:line="32" pos:column="27">queue_timestamp<pos:position pos:line="32" pos:column="42"/></name></name> <operator pos:line="32" pos:column="43">+<pos:position pos:line="32" pos:column="44"/></operator> <name><name pos:line="32" pos:column="45">qp<pos:position pos:line="32" pos:column="47"/></name><operator pos:line="32" pos:column="47">-&gt;<pos:position pos:line="32" pos:column="52"/></operator><name><name pos:line="32" pos:column="49">timeout<pos:position pos:line="32" pos:column="56"/></name> <argument_list type="generic" pos:line="32" pos:column="57">&lt; <argument><expr><name pos:line="32" pos:column="59">timeout_time<pos:position pos:line="32" pos:column="71"/></name>
                   <operator pos:line="33" pos:column="20">||<pos:position pos:line="33" pos:column="22"/></operator> <name><name pos:line="33" pos:column="23">cs<pos:position pos:line="33" pos:column="25"/></name><operator pos:line="33" pos:column="25">-&gt;<pos:position pos:line="33" pos:column="30"/></operator><name pos:line="33" pos:column="27">queue_timestamp<pos:position pos:line="33" pos:column="42"/></name></name></expr></argument> &gt;<pos:position pos:line="33" pos:column="47"/></argument_list></name></name> <name pos:line="33" pos:column="45">timeout_time<pos:position pos:line="33" pos:column="57"/></name> <operator pos:line="33" pos:column="58">+<pos:position pos:line="33" pos:column="59"/></operator> <name><name pos:line="33" pos:column="60">qp<pos:position pos:line="33" pos:column="62"/></name><operator pos:line="33" pos:column="62">-&gt;<pos:position pos:line="33" pos:column="67"/></operator><name pos:line="33" pos:column="64">timeout<pos:position pos:line="33" pos:column="71"/></name></name><operator pos:line="33" pos:column="71">)<pos:position pos:line="33" pos:column="72"/></operator></expr>)<pos:position pos:line="33" pos:column="73"/></condition> <block pos:line="33" pos:column="74">{
            <expr_stmt><expr><name pos:line="34" pos:column="13">last<pos:position pos:line="34" pos:column="17"/></name> <operator pos:line="34" pos:column="18">=<pos:position pos:line="34" pos:column="19"/></operator> <name pos:line="34" pos:column="20">cs<pos:position pos:line="34" pos:column="22"/></name></expr>;<pos:position pos:line="34" pos:column="23"/></expr_stmt>
            <expr_stmt><expr><name pos:line="35" pos:column="13">rv<pos:position pos:line="35" pos:column="15"/></name> <operator pos:line="35" pos:column="16">=<pos:position pos:line="35" pos:column="17"/></operator> <call><name pos:line="35" pos:column="18">apr_pollset_remove<pos:position pos:line="35" pos:column="36"/></name><argument_list pos:line="35" pos:column="36">(<argument><expr><name pos:line="35" pos:column="37">event_pollset<pos:position pos:line="35" pos:column="50"/></name></expr></argument>, <argument><expr><operator pos:line="35" pos:column="52">&amp;<pos:position pos:line="35" pos:column="57"/></operator><name><name pos:line="35" pos:column="53">cs<pos:position pos:line="35" pos:column="55"/></name><operator pos:line="35" pos:column="55">-&gt;<pos:position pos:line="35" pos:column="60"/></operator><name pos:line="35" pos:column="57">pfd<pos:position pos:line="35" pos:column="60"/></name></name></expr></argument>)<pos:position pos:line="35" pos:column="61"/></argument_list></call></expr>;<pos:position pos:line="35" pos:column="62"/></expr_stmt>
            <if pos:line="36" pos:column="13">if <condition pos:line="36" pos:column="16">(<expr><name pos:line="36" pos:column="17">rv<pos:position pos:line="36" pos:column="19"/></name> <operator pos:line="36" pos:column="20">!=<pos:position pos:line="36" pos:column="22"/></operator> <name pos:line="36" pos:column="23">APR_SUCCESS<pos:position pos:line="36" pos:column="34"/></name> <operator pos:line="36" pos:column="35">&amp;&amp;<pos:position pos:line="36" pos:column="45"/></operator> <operator pos:line="36" pos:column="38">!<pos:position pos:line="36" pos:column="39"/></operator><call><name pos:line="36" pos:column="39">APR_STATUS_IS_NOTFOUND<pos:position pos:line="36" pos:column="61"/></name><argument_list pos:line="36" pos:column="61">(<argument><expr><name pos:line="36" pos:column="62">rv<pos:position pos:line="36" pos:column="64"/></name></expr></argument>)<pos:position pos:line="36" pos:column="65"/></argument_list></call></expr>)<pos:position pos:line="36" pos:column="66"/></condition><then pos:line="36" pos:column="66"> <block pos:line="36" pos:column="67">{
                <expr_stmt><expr><call><name pos:line="37" pos:column="17">ap_log_cerror<pos:position pos:line="37" pos:column="30"/></name><argument_list pos:line="37" pos:column="30">(<argument><expr><name pos:line="37" pos:column="31">APLOG_MARK<pos:position pos:line="37" pos:column="41"/></name></expr></argument>, <argument><expr><name pos:line="37" pos:column="43">APLOG_ERR<pos:position pos:line="37" pos:column="52"/></name></expr></argument>, <argument><expr><name pos:line="37" pos:column="54">rv<pos:position pos:line="37" pos:column="56"/></name></expr></argument>, <argument><expr><name><name pos:line="37" pos:column="58">cs<pos:position pos:line="37" pos:column="60"/></name><operator pos:line="37" pos:column="60">-&gt;<pos:position pos:line="37" pos:column="65"/></operator><name pos:line="37" pos:column="62">c<pos:position pos:line="37" pos:column="63"/></name></name></expr></argument>, <argument><expr><call><name pos:line="37" pos:column="65">APLOGNO<pos:position pos:line="37" pos:column="72"/></name><argument_list pos:line="37" pos:column="72">(<argument><expr><literal type="number" pos:line="37" pos:column="73">00473<pos:position pos:line="37" pos:column="78"/></literal></expr></argument>)<pos:position pos:line="37" pos:column="79"/></argument_list></call>
                              <literal type="string" pos:line="38" pos:column="31">"apr_pollset_remove failed"<pos:position pos:line="38" pos:column="58"/></literal></expr></argument>)<pos:position pos:line="38" pos:column="59"/></argument_list></call></expr>;<pos:position pos:line="38" pos:column="60"/></expr_stmt>
            }<pos:position pos:line="39" pos:column="14"/></block></then></if>
            <expr_stmt><expr><name pos:line="40" pos:column="13">cs<pos:position pos:line="40" pos:column="15"/></name> <operator pos:line="40" pos:column="16">=<pos:position pos:line="40" pos:column="17"/></operator> <call><name pos:line="40" pos:column="18">APR_RING_NEXT<pos:position pos:line="40" pos:column="31"/></name><argument_list pos:line="40" pos:column="31">(<argument><expr><name pos:line="40" pos:column="32">cs<pos:position pos:line="40" pos:column="34"/></name></expr></argument>, <argument><expr><name pos:line="40" pos:column="36">timeout_list<pos:position pos:line="40" pos:column="48"/></name></expr></argument>)<pos:position pos:line="40" pos:column="49"/></argument_list></call></expr>;<pos:position pos:line="40" pos:column="50"/></expr_stmt>
            <expr_stmt><expr><name pos:line="41" pos:column="13">count<pos:position pos:line="41" pos:column="18"/></name><operator pos:line="41" pos:column="18">++<pos:position pos:line="41" pos:column="20"/></operator></expr>;<pos:position pos:line="41" pos:column="21"/></expr_stmt>
        }<pos:position pos:line="42" pos:column="10"/></block></while>
        <if pos:line="43" pos:column="9">if <condition pos:line="43" pos:column="12">(<expr><operator pos:line="43" pos:column="13">!<pos:position pos:line="43" pos:column="14"/></operator><name pos:line="43" pos:column="14">count<pos:position pos:line="43" pos:column="19"/></name></expr>)<pos:position pos:line="43" pos:column="20"/></condition><then pos:line="43" pos:column="20">
            <block type="pseudo"><continue pos:line="44" pos:column="13">continue;<pos:position pos:line="44" pos:column="22"/></continue></block></then></if>

        <expr_stmt><expr><call><name pos:line="46" pos:column="9">APR_RING_UNSPLICE<pos:position pos:line="46" pos:column="26"/></name><argument_list pos:line="46" pos:column="26">(<argument><expr><name pos:line="46" pos:column="27">first<pos:position pos:line="46" pos:column="32"/></name></expr></argument>, <argument><expr><name pos:line="46" pos:column="34">last<pos:position pos:line="46" pos:column="38"/></name></expr></argument>, <argument><expr><name pos:line="46" pos:column="40">timeout_list<pos:position pos:line="46" pos:column="52"/></name></expr></argument>)<pos:position pos:line="46" pos:column="53"/></argument_list></call></expr>;<pos:position pos:line="46" pos:column="54"/></expr_stmt>
        <expr_stmt><expr><call><name pos:line="47" pos:column="9">APR_RING_SPLICE_TAIL<pos:position pos:line="47" pos:column="29"/></name><argument_list pos:line="47" pos:column="29">(<argument><expr><operator pos:line="47" pos:column="30">&amp;<pos:position pos:line="47" pos:column="35"/></operator><name pos:line="47" pos:column="31">trash<pos:position pos:line="47" pos:column="36"/></name></expr></argument>, <argument><expr><name pos:line="47" pos:column="38">first<pos:position pos:line="47" pos:column="43"/></name></expr></argument>, <argument><expr><name pos:line="47" pos:column="45">last<pos:position pos:line="47" pos:column="49"/></name></expr></argument>, <argument><expr><name pos:line="47" pos:column="51">event_conn_state_t<pos:position pos:line="47" pos:column="69"/></name></expr></argument>,
                             <argument><expr><name pos:line="48" pos:column="30">timeout_list<pos:position pos:line="48" pos:column="42"/></name></expr></argument>)<pos:position pos:line="48" pos:column="43"/></argument_list></call></expr>;<pos:position pos:line="48" pos:column="44"/></expr_stmt>
        <expr_stmt><expr><name><name pos:line="49" pos:column="9">qp<pos:position pos:line="49" pos:column="11"/></name><operator pos:line="49" pos:column="11">-&gt;<pos:position pos:line="49" pos:column="16"/></operator><name pos:line="49" pos:column="13">count<pos:position pos:line="49" pos:column="18"/></name></name> <operator pos:line="49" pos:column="19">-=<pos:position pos:line="49" pos:column="21"/></operator> <name pos:line="49" pos:column="22">count<pos:position pos:line="49" pos:column="27"/></name></expr>;<pos:position pos:line="49" pos:column="28"/></expr_stmt>
        <expr_stmt><expr><name pos:line="50" pos:column="9">total<pos:position pos:line="50" pos:column="14"/></name> <operator pos:line="50" pos:column="15">+=<pos:position pos:line="50" pos:column="17"/></operator> <name pos:line="50" pos:column="18">count<pos:position pos:line="50" pos:column="23"/></name></expr>;<pos:position pos:line="50" pos:column="24"/></expr_stmt>
    }<pos:position pos:line="51" pos:column="6"/></block></for>
    <if pos:line="52" pos:column="5">if <condition pos:line="52" pos:column="8">(<expr><operator pos:line="52" pos:column="9">!<pos:position pos:line="52" pos:column="10"/></operator><name pos:line="52" pos:column="10">total<pos:position pos:line="52" pos:column="15"/></name></expr>)<pos:position pos:line="52" pos:column="16"/></condition><then pos:line="52" pos:column="16">
        <block type="pseudo"><return pos:line="53" pos:column="9">return;<pos:position pos:line="53" pos:column="16"/></return></block></then></if>

    <expr_stmt><expr><call><name pos:line="55" pos:column="5">AP_DEBUG_ASSERT<pos:position pos:line="55" pos:column="20"/></name><argument_list pos:line="55" pos:column="20">(<argument><expr><operator pos:line="55" pos:column="21">*<pos:position pos:line="55" pos:column="22"/></operator><name><name pos:line="55" pos:column="22">q<pos:position pos:line="55" pos:column="23"/></name><operator pos:line="55" pos:column="23">-&gt;<pos:position pos:line="55" pos:column="28"/></operator><name pos:line="55" pos:column="25">total<pos:position pos:line="55" pos:column="30"/></name></name> <operator pos:line="55" pos:column="31">&gt;=<pos:position pos:line="55" pos:column="36"/></operator> <name pos:line="55" pos:column="34">total<pos:position pos:line="55" pos:column="39"/></name></expr></argument>)<pos:position pos:line="55" pos:column="40"/></argument_list></call></expr>;<pos:position pos:line="55" pos:column="41"/></expr_stmt>
    <expr_stmt><expr><operator pos:line="56" pos:column="5">*<pos:position pos:line="56" pos:column="6"/></operator><name><name pos:line="56" pos:column="6">q<pos:position pos:line="56" pos:column="7"/></name><operator pos:line="56" pos:column="7">-&gt;<pos:position pos:line="56" pos:column="12"/></operator><name pos:line="56" pos:column="9">total<pos:position pos:line="56" pos:column="14"/></name></name> <operator pos:line="56" pos:column="15">-=<pos:position pos:line="56" pos:column="17"/></operator> <name pos:line="56" pos:column="18">total<pos:position pos:line="56" pos:column="23"/></name></expr>;<pos:position pos:line="56" pos:column="24"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="57" pos:column="5">apr_thread_mutex_unlock<pos:position pos:line="57" pos:column="28"/></name><argument_list pos:line="57" pos:column="28">(<argument><expr><name pos:line="57" pos:column="29">timeout_mutex<pos:position pos:line="57" pos:column="42"/></name></expr></argument>)<pos:position pos:line="57" pos:column="43"/></argument_list></call></expr>;<pos:position pos:line="57" pos:column="44"/></expr_stmt>
    <expr_stmt><expr><name pos:line="58" pos:column="5">first<pos:position pos:line="58" pos:column="10"/></name> <operator pos:line="58" pos:column="11">=<pos:position pos:line="58" pos:column="12"/></operator> <call><name pos:line="58" pos:column="13">APR_RING_FIRST<pos:position pos:line="58" pos:column="27"/></name><argument_list pos:line="58" pos:column="27">(<argument><expr><operator pos:line="58" pos:column="28">&amp;<pos:position pos:line="58" pos:column="33"/></operator><name pos:line="58" pos:column="29">trash<pos:position pos:line="58" pos:column="34"/></name></expr></argument>)<pos:position pos:line="58" pos:column="35"/></argument_list></call></expr>;<pos:position pos:line="58" pos:column="36"/></expr_stmt>
    <do pos:line="59" pos:column="5">do <block pos:line="59" pos:column="8">{
        <expr_stmt><expr><name pos:line="60" pos:column="9">cs<pos:position pos:line="60" pos:column="11"/></name> <operator pos:line="60" pos:column="12">=<pos:position pos:line="60" pos:column="13"/></operator> <call><name pos:line="60" pos:column="14">APR_RING_NEXT<pos:position pos:line="60" pos:column="27"/></name><argument_list pos:line="60" pos:column="27">(<argument><expr><name pos:line="60" pos:column="28">first<pos:position pos:line="60" pos:column="33"/></name></expr></argument>, <argument><expr><name pos:line="60" pos:column="35">timeout_list<pos:position pos:line="60" pos:column="47"/></name></expr></argument>)<pos:position pos:line="60" pos:column="48"/></argument_list></call></expr>;<pos:position pos:line="60" pos:column="49"/></expr_stmt>
        <expr_stmt><expr><call><name pos:line="61" pos:column="9">TO_QUEUE_ELEM_INIT<pos:position pos:line="61" pos:column="27"/></name><argument_list pos:line="61" pos:column="27">(<argument><expr><name pos:line="61" pos:column="28">first<pos:position pos:line="61" pos:column="33"/></name></expr></argument>)<pos:position pos:line="61" pos:column="34"/></argument_list></call></expr>;<pos:position pos:line="61" pos:column="35"/></expr_stmt>
        <expr_stmt><expr><call><name pos:line="62" pos:column="9">func<pos:position pos:line="62" pos:column="13"/></name><argument_list pos:line="62" pos:column="13">(<argument><expr><name pos:line="62" pos:column="14">first<pos:position pos:line="62" pos:column="19"/></name></expr></argument>)<pos:position pos:line="62" pos:column="20"/></argument_list></call></expr>;<pos:position pos:line="62" pos:column="21"/></expr_stmt>
        <expr_stmt><expr><name pos:line="63" pos:column="9">first<pos:position pos:line="63" pos:column="14"/></name> <operator pos:line="63" pos:column="15">=<pos:position pos:line="63" pos:column="16"/></operator> <name pos:line="63" pos:column="17">cs<pos:position pos:line="63" pos:column="19"/></name></expr>;<pos:position pos:line="63" pos:column="20"/></expr_stmt>
    }<pos:position pos:line="64" pos:column="6"/></block> while <condition pos:line="64" pos:column="13">(<expr><operator pos:line="64" pos:column="14">--<pos:position pos:line="64" pos:column="16"/></operator><name pos:line="64" pos:column="16">total<pos:position pos:line="64" pos:column="21"/></name></expr>)<pos:position pos:line="64" pos:column="22"/></condition>;<pos:position pos:line="64" pos:column="23"/></do>
    <expr_stmt><expr><call><name pos:line="65" pos:column="5">apr_thread_mutex_lock<pos:position pos:line="65" pos:column="26"/></name><argument_list pos:line="65" pos:column="26">(<argument><expr><name pos:line="65" pos:column="27">timeout_mutex<pos:position pos:line="65" pos:column="40"/></name></expr></argument>)<pos:position pos:line="65" pos:column="41"/></argument_list></call></expr>;<pos:position pos:line="65" pos:column="42"/></expr_stmt>
}<pos:position pos:line="66" pos:column="2"/></block></function></unit>

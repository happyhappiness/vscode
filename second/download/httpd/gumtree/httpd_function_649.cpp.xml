<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/httpd/gumtree/httpd_function_649.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">apr_status_t<pos:position pos:line="1" pos:column="20"/></name></type> <name pos:line="1" pos:column="21">handle_fsize<pos:position pos:line="1" pos:column="33"/></name><parameter_list pos:line="1" pos:column="33">(<parameter><decl><type><name pos:line="1" pos:column="34">include_ctx_t<pos:position pos:line="1" pos:column="47"/></name> <modifier pos:line="1" pos:column="48">*<pos:position pos:line="1" pos:column="49"/></modifier></type><name pos:line="1" pos:column="49">ctx<pos:position pos:line="1" pos:column="52"/></name></decl></parameter>, <parameter><decl><type><name pos:line="1" pos:column="54">ap_filter_t<pos:position pos:line="1" pos:column="65"/></name> <modifier pos:line="1" pos:column="66">*<pos:position pos:line="1" pos:column="67"/></modifier></type><name pos:line="1" pos:column="67">f<pos:position pos:line="1" pos:column="68"/></name></decl></parameter>,
                                 <parameter><decl><type><name pos:line="2" pos:column="34">apr_bucket_brigade<pos:position pos:line="2" pos:column="52"/></name> <modifier pos:line="2" pos:column="53">*<pos:position pos:line="2" pos:column="54"/></modifier></type><name pos:line="2" pos:column="54">bb<pos:position pos:line="2" pos:column="56"/></name></decl></parameter>)<pos:position pos:line="2" pos:column="57"/></parameter_list>
<block pos:line="3" pos:column="1">{
    <decl_stmt><decl><type><name pos:line="4" pos:column="5">request_rec<pos:position pos:line="4" pos:column="16"/></name> <modifier pos:line="4" pos:column="17">*<pos:position pos:line="4" pos:column="18"/></modifier></type><name pos:line="4" pos:column="18">r<pos:position pos:line="4" pos:column="19"/></name> <init pos:line="4" pos:column="20">= <expr><name><name pos:line="4" pos:column="22">f<pos:position pos:line="4" pos:column="23"/></name><operator pos:line="4" pos:column="23">-&gt;<pos:position pos:line="4" pos:column="28"/></operator><name pos:line="4" pos:column="25">r<pos:position pos:line="4" pos:column="26"/></name></name></expr></init></decl>;<pos:position pos:line="4" pos:column="27"/></decl_stmt>

    <if pos:line="6" pos:column="5">if <condition pos:line="6" pos:column="8">(<expr><operator pos:line="6" pos:column="9">!<pos:position pos:line="6" pos:column="10"/></operator><name><name pos:line="6" pos:column="10">ctx<pos:position pos:line="6" pos:column="13"/></name><operator pos:line="6" pos:column="13">-&gt;<pos:position pos:line="6" pos:column="18"/></operator><name pos:line="6" pos:column="15">argc<pos:position pos:line="6" pos:column="19"/></name></name></expr>)<pos:position pos:line="6" pos:column="20"/></condition><then pos:line="6" pos:column="20"> <block pos:line="6" pos:column="21">{
        <expr_stmt><expr><call><name pos:line="7" pos:column="9">ap_log_rerror<pos:position pos:line="7" pos:column="22"/></name><argument_list pos:line="7" pos:column="22">(<argument><expr><name pos:line="7" pos:column="23">APLOG_MARK<pos:position pos:line="7" pos:column="33"/></name></expr></argument>,
                      <argument><expr><ternary><condition><expr><operator pos:line="8" pos:column="23">(<pos:position pos:line="8" pos:column="24"/></operator><name><name pos:line="8" pos:column="24">ctx<pos:position pos:line="8" pos:column="27"/></name><operator pos:line="8" pos:column="27">-&gt;<pos:position pos:line="8" pos:column="32"/></operator><name pos:line="8" pos:column="29">flags<pos:position pos:line="8" pos:column="34"/></name></name> <operator pos:line="8" pos:column="35">&amp;<pos:position pos:line="8" pos:column="40"/></operator> <name pos:line="8" pos:column="37">SSI_FLAG_PRINTING<pos:position pos:line="8" pos:column="54"/></name><operator pos:line="8" pos:column="54">)<pos:position pos:line="8" pos:column="55"/></operator></expr>
                          ?<pos:position pos:line="9" pos:column="28"/></condition><then pos:line="9" pos:column="28"> <expr><name pos:line="9" pos:column="29">APLOG_ERR<pos:position pos:line="9" pos:column="38"/></name></expr> <pos:position pos:line="9" pos:column="39"/></then><else pos:line="9" pos:column="39">: <expr><name pos:line="9" pos:column="41">APLOG_WARNING<pos:position pos:line="9" pos:column="54"/></name></expr></else></ternary></expr></argument>,
                      <argument><expr><literal type="number" pos:line="10" pos:column="23">0<pos:position pos:line="10" pos:column="24"/></literal></expr></argument>, <argument><expr><name pos:line="10" pos:column="26">r<pos:position pos:line="10" pos:column="27"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="10" pos:column="29">"missing argument for fsize element in %s"<pos:position pos:line="10" pos:column="71"/></literal></expr></argument>,
                      <argument><expr><name><name pos:line="11" pos:column="23">r<pos:position pos:line="11" pos:column="24"/></name><operator pos:line="11" pos:column="24">-&gt;<pos:position pos:line="11" pos:column="29"/></operator><name pos:line="11" pos:column="26">filename<pos:position pos:line="11" pos:column="34"/></name></name></expr></argument>)<pos:position pos:line="11" pos:column="35"/></argument_list></call></expr>;<pos:position pos:line="11" pos:column="36"/></expr_stmt>
    }<pos:position pos:line="12" pos:column="6"/></block></then></if>

    <if pos:line="14" pos:column="5">if <condition pos:line="14" pos:column="8">(<expr><operator pos:line="14" pos:column="9">!<pos:position pos:line="14" pos:column="10"/></operator><operator pos:line="14" pos:column="10">(<pos:position pos:line="14" pos:column="11"/></operator><name><name pos:line="14" pos:column="11">ctx<pos:position pos:line="14" pos:column="14"/></name><operator pos:line="14" pos:column="14">-&gt;<pos:position pos:line="14" pos:column="19"/></operator><name pos:line="14" pos:column="16">flags<pos:position pos:line="14" pos:column="21"/></name></name> <operator pos:line="14" pos:column="22">&amp;<pos:position pos:line="14" pos:column="27"/></operator> <name pos:line="14" pos:column="24">SSI_FLAG_PRINTING<pos:position pos:line="14" pos:column="41"/></name><operator pos:line="14" pos:column="41">)<pos:position pos:line="14" pos:column="42"/></operator></expr>)<pos:position pos:line="14" pos:column="43"/></condition><then pos:line="14" pos:column="43"> <block pos:line="14" pos:column="44">{
        <return pos:line="15" pos:column="9">return <expr><name pos:line="15" pos:column="16">APR_SUCCESS<pos:position pos:line="15" pos:column="27"/></name></expr>;<pos:position pos:line="15" pos:column="28"/></return>
    }<pos:position pos:line="16" pos:column="6"/></block></then></if>

    <if pos:line="18" pos:column="5">if <condition pos:line="18" pos:column="8">(<expr><operator pos:line="18" pos:column="9">!<pos:position pos:line="18" pos:column="10"/></operator><name><name pos:line="18" pos:column="10">ctx<pos:position pos:line="18" pos:column="13"/></name><operator pos:line="18" pos:column="13">-&gt;<pos:position pos:line="18" pos:column="18"/></operator><name pos:line="18" pos:column="15">argc<pos:position pos:line="18" pos:column="19"/></name></name></expr>)<pos:position pos:line="18" pos:column="20"/></condition><then pos:line="18" pos:column="20"> <block pos:line="18" pos:column="21">{
        <expr_stmt><expr><call><name pos:line="19" pos:column="9">SSI_CREATE_ERROR_BUCKET<pos:position pos:line="19" pos:column="32"/></name><argument_list pos:line="19" pos:column="32">(<argument><expr><name pos:line="19" pos:column="33">ctx<pos:position pos:line="19" pos:column="36"/></name></expr></argument>, <argument><expr><name pos:line="19" pos:column="38">f<pos:position pos:line="19" pos:column="39"/></name></expr></argument>, <argument><expr><name pos:line="19" pos:column="41">bb<pos:position pos:line="19" pos:column="43"/></name></expr></argument>)<pos:position pos:line="19" pos:column="44"/></argument_list></call></expr>;<pos:position pos:line="19" pos:column="45"/></expr_stmt>
        <return pos:line="20" pos:column="9">return <expr><name pos:line="20" pos:column="16">APR_SUCCESS<pos:position pos:line="20" pos:column="27"/></name></expr>;<pos:position pos:line="20" pos:column="28"/></return>
    }<pos:position pos:line="21" pos:column="6"/></block></then></if>

    <while pos:line="23" pos:column="5">while <condition pos:line="23" pos:column="11">(<expr><literal type="number" pos:line="23" pos:column="12">1<pos:position pos:line="23" pos:column="13"/></literal></expr>)<pos:position pos:line="23" pos:column="14"/></condition> <block pos:line="23" pos:column="15">{
        <decl_stmt><decl><type><name pos:line="24" pos:column="9">char<pos:position pos:line="24" pos:column="13"/></name> <modifier pos:line="24" pos:column="14">*<pos:position pos:line="24" pos:column="15"/></modifier></type><name pos:line="24" pos:column="15">tag<pos:position pos:line="24" pos:column="18"/></name>     <init pos:line="24" pos:column="23">= <expr><name pos:line="24" pos:column="25">NULL<pos:position pos:line="24" pos:column="29"/></name></expr></init></decl>;<pos:position pos:line="24" pos:column="30"/></decl_stmt>
        <decl_stmt><decl><type><name pos:line="25" pos:column="9">char<pos:position pos:line="25" pos:column="13"/></name> <modifier pos:line="25" pos:column="14">*<pos:position pos:line="25" pos:column="15"/></modifier></type><name pos:line="25" pos:column="15">tag_val<pos:position pos:line="25" pos:column="22"/></name> <init pos:line="25" pos:column="23">= <expr><name pos:line="25" pos:column="25">NULL<pos:position pos:line="25" pos:column="29"/></name></expr></init></decl>;<pos:position pos:line="25" pos:column="30"/></decl_stmt>
        <decl_stmt><decl><type><name pos:line="26" pos:column="9">apr_finfo_t<pos:position pos:line="26" pos:column="20"/></name></type> <name pos:line="26" pos:column="21">finfo<pos:position pos:line="26" pos:column="26"/></name></decl>;<pos:position pos:line="26" pos:column="27"/></decl_stmt>
        <decl_stmt><decl><type><name pos:line="27" pos:column="9">char<pos:position pos:line="27" pos:column="13"/></name> <modifier pos:line="27" pos:column="14">*<pos:position pos:line="27" pos:column="15"/></modifier></type><name pos:line="27" pos:column="15">parsed_string<pos:position pos:line="27" pos:column="28"/></name></decl>;<pos:position pos:line="27" pos:column="29"/></decl_stmt>

        <expr_stmt><expr><call><name pos:line="29" pos:column="9">ap_ssi_get_tag_and_value<pos:position pos:line="29" pos:column="33"/></name><argument_list pos:line="29" pos:column="33">(<argument><expr><name pos:line="29" pos:column="34">ctx<pos:position pos:line="29" pos:column="37"/></name></expr></argument>, <argument><expr><operator pos:line="29" pos:column="39">&amp;<pos:position pos:line="29" pos:column="44"/></operator><name pos:line="29" pos:column="40">tag<pos:position pos:line="29" pos:column="43"/></name></expr></argument>, <argument><expr><operator pos:line="29" pos:column="45">&amp;<pos:position pos:line="29" pos:column="50"/></operator><name pos:line="29" pos:column="46">tag_val<pos:position pos:line="29" pos:column="53"/></name></expr></argument>, <argument><expr><name pos:line="29" pos:column="55">SSI_VALUE_DECODED<pos:position pos:line="29" pos:column="72"/></name></expr></argument>)<pos:position pos:line="29" pos:column="73"/></argument_list></call></expr>;<pos:position pos:line="29" pos:column="74"/></expr_stmt>
        <if pos:line="30" pos:column="9">if <condition pos:line="30" pos:column="12">(<expr><operator pos:line="30" pos:column="13">!<pos:position pos:line="30" pos:column="14"/></operator><name pos:line="30" pos:column="14">tag<pos:position pos:line="30" pos:column="17"/></name> <operator pos:line="30" pos:column="18">||<pos:position pos:line="30" pos:column="20"/></operator> <operator pos:line="30" pos:column="21">!<pos:position pos:line="30" pos:column="22"/></operator><name pos:line="30" pos:column="22">tag_val<pos:position pos:line="30" pos:column="29"/></name></expr>)<pos:position pos:line="30" pos:column="30"/></condition><then pos:line="30" pos:column="30"> <block pos:line="30" pos:column="31">{
            <break pos:line="31" pos:column="13">break;<pos:position pos:line="31" pos:column="19"/></break>
        }<pos:position pos:line="32" pos:column="10"/></block></then></if>

        <expr_stmt><expr><name pos:line="34" pos:column="9">parsed_string<pos:position pos:line="34" pos:column="22"/></name> <operator pos:line="34" pos:column="23">=<pos:position pos:line="34" pos:column="24"/></operator> <call><name pos:line="34" pos:column="25">ap_ssi_parse_string<pos:position pos:line="34" pos:column="44"/></name><argument_list pos:line="34" pos:column="44">(<argument><expr><name pos:line="34" pos:column="45">ctx<pos:position pos:line="34" pos:column="48"/></name></expr></argument>, <argument><expr><name pos:line="34" pos:column="50">tag_val<pos:position pos:line="34" pos:column="57"/></name></expr></argument>, <argument><expr><name pos:line="34" pos:column="59">NULL<pos:position pos:line="34" pos:column="63"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="34" pos:column="65">0<pos:position pos:line="34" pos:column="66"/></literal></expr></argument>,
                                            <argument><expr><name pos:line="35" pos:column="45">SSI_EXPAND_DROP_NAME<pos:position pos:line="35" pos:column="65"/></name></expr></argument>)<pos:position pos:line="35" pos:column="66"/></argument_list></call></expr>;<pos:position pos:line="35" pos:column="67"/></expr_stmt>

        <if pos:line="37" pos:column="9">if <condition pos:line="37" pos:column="12">(<expr><operator pos:line="37" pos:column="13">!<pos:position pos:line="37" pos:column="14"/></operator><call><name pos:line="37" pos:column="14">find_file<pos:position pos:line="37" pos:column="23"/></name><argument_list pos:line="37" pos:column="23">(<argument><expr><name pos:line="37" pos:column="24">r<pos:position pos:line="37" pos:column="25"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="37" pos:column="27">"fsize"<pos:position pos:line="37" pos:column="34"/></literal></expr></argument>, <argument><expr><name pos:line="37" pos:column="36">tag<pos:position pos:line="37" pos:column="39"/></name></expr></argument>, <argument><expr><name pos:line="37" pos:column="41">parsed_string<pos:position pos:line="37" pos:column="54"/></name></expr></argument>, <argument><expr><operator pos:line="37" pos:column="56">&amp;<pos:position pos:line="37" pos:column="61"/></operator><name pos:line="37" pos:column="57">finfo<pos:position pos:line="37" pos:column="62"/></name></expr></argument>)<pos:position pos:line="37" pos:column="63"/></argument_list></call></expr>)<pos:position pos:line="37" pos:column="64"/></condition><then pos:line="37" pos:column="64"> <block pos:line="37" pos:column="65">{
            <decl_stmt><decl><type><name pos:line="38" pos:column="13">char<pos:position pos:line="38" pos:column="17"/></name> <modifier pos:line="38" pos:column="18">*<pos:position pos:line="38" pos:column="19"/></modifier></type><name pos:line="38" pos:column="19">buf<pos:position pos:line="38" pos:column="22"/></name></decl>;<pos:position pos:line="38" pos:column="23"/></decl_stmt>
            <decl_stmt><decl><type><name pos:line="39" pos:column="13">apr_size_t<pos:position pos:line="39" pos:column="23"/></name></type> <name pos:line="39" pos:column="24">len<pos:position pos:line="39" pos:column="27"/></name></decl>;<pos:position pos:line="39" pos:column="28"/></decl_stmt>

            <if pos:line="41" pos:column="13">if <condition pos:line="41" pos:column="16">(<expr><operator pos:line="41" pos:column="17">!<pos:position pos:line="41" pos:column="18"/></operator><operator pos:line="41" pos:column="18">(<pos:position pos:line="41" pos:column="19"/></operator><name><name pos:line="41" pos:column="19">ctx<pos:position pos:line="41" pos:column="22"/></name><operator pos:line="41" pos:column="22">-&gt;<pos:position pos:line="41" pos:column="27"/></operator><name pos:line="41" pos:column="24">flags<pos:position pos:line="41" pos:column="29"/></name></name> <operator pos:line="41" pos:column="30">&amp;<pos:position pos:line="41" pos:column="35"/></operator> <name pos:line="41" pos:column="32">SSI_FLAG_SIZE_IN_BYTES<pos:position pos:line="41" pos:column="54"/></name><operator pos:line="41" pos:column="54">)<pos:position pos:line="41" pos:column="55"/></operator></expr>)<pos:position pos:line="41" pos:column="56"/></condition><then pos:line="41" pos:column="56"> <block pos:line="41" pos:column="57">{
                <expr_stmt><expr><name pos:line="42" pos:column="17">buf<pos:position pos:line="42" pos:column="20"/></name> <operator pos:line="42" pos:column="21">=<pos:position pos:line="42" pos:column="22"/></operator> <call><name pos:line="42" pos:column="23">apr_strfsize<pos:position pos:line="42" pos:column="35"/></name><argument_list pos:line="42" pos:column="35">(<argument><expr><name><name pos:line="42" pos:column="36">finfo<pos:position pos:line="42" pos:column="41"/></name><operator pos:line="42" pos:column="41">.<pos:position pos:line="42" pos:column="42"/></operator><name pos:line="42" pos:column="42">size<pos:position pos:line="42" pos:column="46"/></name></name></expr></argument>, <argument><expr><call><name pos:line="42" pos:column="48">apr_palloc<pos:position pos:line="42" pos:column="58"/></name><argument_list pos:line="42" pos:column="58">(<argument><expr><name><name pos:line="42" pos:column="59">ctx<pos:position pos:line="42" pos:column="62"/></name><operator pos:line="42" pos:column="62">-&gt;<pos:position pos:line="42" pos:column="67"/></operator><name pos:line="42" pos:column="64">pool<pos:position pos:line="42" pos:column="68"/></name></name></expr></argument>, <argument><expr><literal type="number" pos:line="42" pos:column="70">5<pos:position pos:line="42" pos:column="71"/></literal></expr></argument>)<pos:position pos:line="42" pos:column="72"/></argument_list></call></expr></argument>)<pos:position pos:line="42" pos:column="73"/></argument_list></call></expr>;<pos:position pos:line="42" pos:column="74"/></expr_stmt>
                <expr_stmt><expr><name pos:line="43" pos:column="17">len<pos:position pos:line="43" pos:column="20"/></name> <operator pos:line="43" pos:column="21">=<pos:position pos:line="43" pos:column="22"/></operator> <literal type="number" pos:line="43" pos:column="23">4<pos:position pos:line="43" pos:column="24"/></literal></expr>;<pos:position pos:line="43" pos:column="25"/></expr_stmt> <comment type="block" pos:line="43" pos:column="26">/* omit the \0 terminator */</comment>
            }<pos:position pos:line="44" pos:column="14"/></block></then>
            <else pos:line="45" pos:column="13">else <block pos:line="45" pos:column="18">{
                <decl_stmt><decl><type><name pos:line="46" pos:column="17">apr_size_t<pos:position pos:line="46" pos:column="27"/></name></type> <name pos:line="46" pos:column="28">l<pos:position pos:line="46" pos:column="29"/></name></decl>, <decl><type ref="prev"/><name pos:line="46" pos:column="31">x<pos:position pos:line="46" pos:column="32"/></name></decl>, <decl><type ref="prev"/><name pos:line="46" pos:column="34">pos<pos:position pos:line="46" pos:column="37"/></name></decl>;<pos:position pos:line="46" pos:column="38"/></decl_stmt>
                <decl_stmt><decl><type><name pos:line="47" pos:column="17">char<pos:position pos:line="47" pos:column="21"/></name> <modifier pos:line="47" pos:column="22">*<pos:position pos:line="47" pos:column="23"/></modifier></type><name pos:line="47" pos:column="23">tmp<pos:position pos:line="47" pos:column="26"/></name></decl>;<pos:position pos:line="47" pos:column="27"/></decl_stmt>

                <expr_stmt><expr><name pos:line="49" pos:column="17">tmp<pos:position pos:line="49" pos:column="20"/></name> <operator pos:line="49" pos:column="21">=<pos:position pos:line="49" pos:column="22"/></operator> <call><name pos:line="49" pos:column="23">apr_psprintf<pos:position pos:line="49" pos:column="35"/></name><argument_list pos:line="49" pos:column="35">(<argument><expr><name><name pos:line="49" pos:column="36">ctx<pos:position pos:line="49" pos:column="39"/></name><operator pos:line="49" pos:column="39">-&gt;<pos:position pos:line="49" pos:column="44"/></operator><name pos:line="49" pos:column="41">dpool<pos:position pos:line="49" pos:column="46"/></name></name></expr></argument>, <argument><expr><literal type="string" pos:line="49" pos:column="48">"%"<pos:position pos:line="49" pos:column="51"/></literal> <name pos:line="49" pos:column="52">APR_OFF_T_FMT<pos:position pos:line="49" pos:column="65"/></name></expr></argument>, <argument><expr><name><name pos:line="49" pos:column="67">finfo<pos:position pos:line="49" pos:column="72"/></name><operator pos:line="49" pos:column="72">.<pos:position pos:line="49" pos:column="73"/></operator><name pos:line="49" pos:column="73">size<pos:position pos:line="49" pos:column="77"/></name></name></expr></argument>)<pos:position pos:line="49" pos:column="78"/></argument_list></call></expr>;<pos:position pos:line="49" pos:column="79"/></expr_stmt>
                <expr_stmt><expr><name pos:line="50" pos:column="17">len<pos:position pos:line="50" pos:column="20"/></name> <operator pos:line="50" pos:column="21">=<pos:position pos:line="50" pos:column="22"/></operator> <name pos:line="50" pos:column="23">l<pos:position pos:line="50" pos:column="24"/></name> <operator pos:line="50" pos:column="25">=<pos:position pos:line="50" pos:column="26"/></operator> <call><name pos:line="50" pos:column="27">strlen<pos:position pos:line="50" pos:column="33"/></name><argument_list pos:line="50" pos:column="33">(<argument><expr><name pos:line="50" pos:column="34">tmp<pos:position pos:line="50" pos:column="37"/></name></expr></argument>)<pos:position pos:line="50" pos:column="38"/></argument_list></call></expr>;<pos:position pos:line="50" pos:column="39"/></expr_stmt>

                <for pos:line="52" pos:column="17">for <control pos:line="52" pos:column="21">(<init><expr><name pos:line="52" pos:column="22">x<pos:position pos:line="52" pos:column="23"/></name> <operator pos:line="52" pos:column="24">=<pos:position pos:line="52" pos:column="25"/></operator> <literal type="number" pos:line="52" pos:column="26">0<pos:position pos:line="52" pos:column="27"/></literal></expr>;<pos:position pos:line="52" pos:column="28"/></init> <condition><expr><name pos:line="52" pos:column="29">x<pos:position pos:line="52" pos:column="30"/></name> <operator pos:line="52" pos:column="31">&lt;<pos:position pos:line="52" pos:column="35"/></operator> <name pos:line="52" pos:column="33">l<pos:position pos:line="52" pos:column="34"/></name></expr>;<pos:position pos:line="52" pos:column="35"/></condition> <incr><expr><operator pos:line="52" pos:column="36">++<pos:position pos:line="52" pos:column="38"/></operator><name pos:line="52" pos:column="38">x<pos:position pos:line="52" pos:column="39"/></name></expr></incr>)<pos:position pos:line="52" pos:column="40"/></control> <block pos:line="52" pos:column="41">{
                    <if pos:line="53" pos:column="21">if <condition pos:line="53" pos:column="24">(<expr><name pos:line="53" pos:column="25">x<pos:position pos:line="53" pos:column="26"/></name> <operator pos:line="53" pos:column="27">&amp;&amp;<pos:position pos:line="53" pos:column="37"/></operator> <operator pos:line="53" pos:column="30">!<pos:position pos:line="53" pos:column="31"/></operator><operator pos:line="53" pos:column="31">(<pos:position pos:line="53" pos:column="32"/></operator><operator pos:line="53" pos:column="32">(<pos:position pos:line="53" pos:column="33"/></operator><name pos:line="53" pos:column="33">l<pos:position pos:line="53" pos:column="34"/></name> <operator pos:line="53" pos:column="35">-<pos:position pos:line="53" pos:column="36"/></operator> <name pos:line="53" pos:column="37">x<pos:position pos:line="53" pos:column="38"/></name><operator pos:line="53" pos:column="38">)<pos:position pos:line="53" pos:column="39"/></operator> <operator pos:line="53" pos:column="40">%<pos:position pos:line="53" pos:column="41"/></operator> <literal type="number" pos:line="53" pos:column="42">3<pos:position pos:line="53" pos:column="43"/></literal><operator pos:line="53" pos:column="43">)<pos:position pos:line="53" pos:column="44"/></operator></expr>)<pos:position pos:line="53" pos:column="45"/></condition><then pos:line="53" pos:column="45"> <block pos:line="53" pos:column="46">{
                        <expr_stmt><expr><operator pos:line="54" pos:column="25">++<pos:position pos:line="54" pos:column="27"/></operator><name pos:line="54" pos:column="27">len<pos:position pos:line="54" pos:column="30"/></name></expr>;<pos:position pos:line="54" pos:column="31"/></expr_stmt>
                    }<pos:position pos:line="55" pos:column="22"/></block></then></if>
                }<pos:position pos:line="56" pos:column="18"/></block></for>

                <if pos:line="58" pos:column="17">if <condition pos:line="58" pos:column="20">(<expr><name pos:line="58" pos:column="21">len<pos:position pos:line="58" pos:column="24"/></name> <operator pos:line="58" pos:column="25">==<pos:position pos:line="58" pos:column="27"/></operator> <name pos:line="58" pos:column="28">l<pos:position pos:line="58" pos:column="29"/></name></expr>)<pos:position pos:line="58" pos:column="30"/></condition><then pos:line="58" pos:column="30"> <block pos:line="58" pos:column="31">{
                    <expr_stmt><expr><name pos:line="59" pos:column="21">buf<pos:position pos:line="59" pos:column="24"/></name> <operator pos:line="59" pos:column="25">=<pos:position pos:line="59" pos:column="26"/></operator> <call><name pos:line="59" pos:column="27">apr_pstrmemdup<pos:position pos:line="59" pos:column="41"/></name><argument_list pos:line="59" pos:column="41">(<argument><expr><name><name pos:line="59" pos:column="42">ctx<pos:position pos:line="59" pos:column="45"/></name><operator pos:line="59" pos:column="45">-&gt;<pos:position pos:line="59" pos:column="50"/></operator><name pos:line="59" pos:column="47">pool<pos:position pos:line="59" pos:column="51"/></name></name></expr></argument>, <argument><expr><name pos:line="59" pos:column="53">tmp<pos:position pos:line="59" pos:column="56"/></name></expr></argument>, <argument><expr><name pos:line="59" pos:column="58">len<pos:position pos:line="59" pos:column="61"/></name></expr></argument>)<pos:position pos:line="59" pos:column="62"/></argument_list></call></expr>;<pos:position pos:line="59" pos:column="63"/></expr_stmt>
                }<pos:position pos:line="60" pos:column="18"/></block></then>
                <else pos:line="61" pos:column="17">else <block pos:line="61" pos:column="22">{
                    <expr_stmt><expr><name pos:line="62" pos:column="21">buf<pos:position pos:line="62" pos:column="24"/></name> <operator pos:line="62" pos:column="25">=<pos:position pos:line="62" pos:column="26"/></operator> <call><name pos:line="62" pos:column="27">apr_palloc<pos:position pos:line="62" pos:column="37"/></name><argument_list pos:line="62" pos:column="37">(<argument><expr><name><name pos:line="62" pos:column="38">ctx<pos:position pos:line="62" pos:column="41"/></name><operator pos:line="62" pos:column="41">-&gt;<pos:position pos:line="62" pos:column="46"/></operator><name pos:line="62" pos:column="43">pool<pos:position pos:line="62" pos:column="47"/></name></name></expr></argument>, <argument><expr><name pos:line="62" pos:column="49">len<pos:position pos:line="62" pos:column="52"/></name></expr></argument>)<pos:position pos:line="62" pos:column="53"/></argument_list></call></expr>;<pos:position pos:line="62" pos:column="54"/></expr_stmt>

                    <for pos:line="64" pos:column="21">for <control pos:line="64" pos:column="25">(<init><expr><name pos:line="64" pos:column="26">pos<pos:position pos:line="64" pos:column="29"/></name> <operator pos:line="64" pos:column="30">=<pos:position pos:line="64" pos:column="31"/></operator> <name pos:line="64" pos:column="32">x<pos:position pos:line="64" pos:column="33"/></name> <operator pos:line="64" pos:column="34">=<pos:position pos:line="64" pos:column="35"/></operator> <literal type="number" pos:line="64" pos:column="36">0<pos:position pos:line="64" pos:column="37"/></literal></expr>;<pos:position pos:line="64" pos:column="38"/></init> <condition><expr><name pos:line="64" pos:column="39">x<pos:position pos:line="64" pos:column="40"/></name> <operator pos:line="64" pos:column="41">&lt;<pos:position pos:line="64" pos:column="45"/></operator> <name pos:line="64" pos:column="43">l<pos:position pos:line="64" pos:column="44"/></name></expr>;<pos:position pos:line="64" pos:column="45"/></condition> <incr><expr><operator pos:line="64" pos:column="46">++<pos:position pos:line="64" pos:column="48"/></operator><name pos:line="64" pos:column="48">x<pos:position pos:line="64" pos:column="49"/></name></expr></incr>)<pos:position pos:line="64" pos:column="50"/></control> <block pos:line="64" pos:column="51">{
                        <if pos:line="65" pos:column="25">if <condition pos:line="65" pos:column="28">(<expr><name pos:line="65" pos:column="29">x<pos:position pos:line="65" pos:column="30"/></name> <operator pos:line="65" pos:column="31">&amp;&amp;<pos:position pos:line="65" pos:column="41"/></operator> <operator pos:line="65" pos:column="34">!<pos:position pos:line="65" pos:column="35"/></operator><operator pos:line="65" pos:column="35">(<pos:position pos:line="65" pos:column="36"/></operator><operator pos:line="65" pos:column="36">(<pos:position pos:line="65" pos:column="37"/></operator><name pos:line="65" pos:column="37">l<pos:position pos:line="65" pos:column="38"/></name> <operator pos:line="65" pos:column="39">-<pos:position pos:line="65" pos:column="40"/></operator> <name pos:line="65" pos:column="41">x<pos:position pos:line="65" pos:column="42"/></name><operator pos:line="65" pos:column="42">)<pos:position pos:line="65" pos:column="43"/></operator> <operator pos:line="65" pos:column="44">%<pos:position pos:line="65" pos:column="45"/></operator> <literal type="number" pos:line="65" pos:column="46">3<pos:position pos:line="65" pos:column="47"/></literal><operator pos:line="65" pos:column="47">)<pos:position pos:line="65" pos:column="48"/></operator></expr>)<pos:position pos:line="65" pos:column="49"/></condition><then pos:line="65" pos:column="49"> <block pos:line="65" pos:column="50">{
                            <expr_stmt><expr><name><name pos:line="66" pos:column="29">buf<pos:position pos:line="66" pos:column="32"/></name><index pos:line="66" pos:column="32">[<expr><name pos:line="66" pos:column="33">pos<pos:position pos:line="66" pos:column="36"/></name><operator pos:line="66" pos:column="36">++<pos:position pos:line="66" pos:column="38"/></operator></expr>]<pos:position pos:line="66" pos:column="39"/></index></name> <operator pos:line="66" pos:column="40">=<pos:position pos:line="66" pos:column="41"/></operator> <literal type="char" pos:line="66" pos:column="42">','<pos:position pos:line="66" pos:column="45"/></literal></expr>;<pos:position pos:line="66" pos:column="46"/></expr_stmt>
                        }<pos:position pos:line="67" pos:column="26"/></block></then></if>
                        <expr_stmt><expr><name><name pos:line="68" pos:column="25">buf<pos:position pos:line="68" pos:column="28"/></name><index pos:line="68" pos:column="28">[<expr><name pos:line="68" pos:column="29">pos<pos:position pos:line="68" pos:column="32"/></name><operator pos:line="68" pos:column="32">++<pos:position pos:line="68" pos:column="34"/></operator></expr>]<pos:position pos:line="68" pos:column="35"/></index></name> <operator pos:line="68" pos:column="36">=<pos:position pos:line="68" pos:column="37"/></operator> <name><name pos:line="68" pos:column="38">tmp<pos:position pos:line="68" pos:column="41"/></name><index pos:line="68" pos:column="41">[<expr><name pos:line="68" pos:column="42">x<pos:position pos:line="68" pos:column="43"/></name></expr>]<pos:position pos:line="68" pos:column="44"/></index></name></expr>;<pos:position pos:line="68" pos:column="45"/></expr_stmt>
                    }<pos:position pos:line="69" pos:column="22"/></block></for>
                }<pos:position pos:line="70" pos:column="18"/></block></else></if>
            }<pos:position pos:line="71" pos:column="14"/></block></else></if>

            <expr_stmt><expr><call><name pos:line="73" pos:column="13">APR_BRIGADE_INSERT_TAIL<pos:position pos:line="73" pos:column="36"/></name><argument_list pos:line="73" pos:column="36">(<argument><expr><name pos:line="73" pos:column="37">bb<pos:position pos:line="73" pos:column="39"/></name></expr></argument>, <argument><expr><call><name pos:line="73" pos:column="41">apr_bucket_pool_create<pos:position pos:line="73" pos:column="63"/></name><argument_list pos:line="73" pos:column="63">(<argument><expr><name pos:line="73" pos:column="64">buf<pos:position pos:line="73" pos:column="67"/></name></expr></argument>, <argument><expr><name pos:line="73" pos:column="69">len<pos:position pos:line="73" pos:column="72"/></name></expr></argument>,
                                    <argument><expr><name><name pos:line="74" pos:column="37">ctx<pos:position pos:line="74" pos:column="40"/></name><operator pos:line="74" pos:column="40">-&gt;<pos:position pos:line="74" pos:column="45"/></operator><name pos:line="74" pos:column="42">pool<pos:position pos:line="74" pos:column="46"/></name></name></expr></argument>, <argument><expr><name><name pos:line="74" pos:column="48">f<pos:position pos:line="74" pos:column="49"/></name><operator pos:line="74" pos:column="49">-&gt;<pos:position pos:line="74" pos:column="54"/></operator><name pos:line="74" pos:column="51">c<pos:position pos:line="74" pos:column="52"/></name><operator pos:line="74" pos:column="52">-&gt;<pos:position pos:line="74" pos:column="57"/></operator><name pos:line="74" pos:column="54">bucket_alloc<pos:position pos:line="74" pos:column="66"/></name></name></expr></argument>)<pos:position pos:line="74" pos:column="67"/></argument_list></call></expr></argument>)<pos:position pos:line="74" pos:column="68"/></argument_list></call></expr>;<pos:position pos:line="74" pos:column="69"/></expr_stmt>
        }<pos:position pos:line="75" pos:column="10"/></block></then>
        <else pos:line="76" pos:column="9">else <block pos:line="76" pos:column="14">{
            <expr_stmt><expr><call><name pos:line="77" pos:column="13">SSI_CREATE_ERROR_BUCKET<pos:position pos:line="77" pos:column="36"/></name><argument_list pos:line="77" pos:column="36">(<argument><expr><name pos:line="77" pos:column="37">ctx<pos:position pos:line="77" pos:column="40"/></name></expr></argument>, <argument><expr><name pos:line="77" pos:column="42">f<pos:position pos:line="77" pos:column="43"/></name></expr></argument>, <argument><expr><name pos:line="77" pos:column="45">bb<pos:position pos:line="77" pos:column="47"/></name></expr></argument>)<pos:position pos:line="77" pos:column="48"/></argument_list></call></expr>;<pos:position pos:line="77" pos:column="49"/></expr_stmt>
            <break pos:line="78" pos:column="13">break;<pos:position pos:line="78" pos:column="19"/></break>
        }<pos:position pos:line="79" pos:column="10"/></block></else></if>
    }<pos:position pos:line="80" pos:column="6"/></block></while>

    <return pos:line="82" pos:column="5">return <expr><name pos:line="82" pos:column="12">APR_SUCCESS<pos:position pos:line="82" pos:column="23"/></name></expr>;<pos:position pos:line="82" pos:column="24"/></return>
}<pos:position pos:line="83" pos:column="2"/></block></function></unit>

<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/httpd/gumtree/httpd_repos_function_914_httpd-2.0.63.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">int<pos:position pos:line="1" pos:column="11"/></name></type> <name pos:line="1" pos:column="12">alias_matches<pos:position pos:line="1" pos:column="25"/></name><parameter_list pos:line="1" pos:column="25">(<parameter><decl><type><specifier pos:line="1" pos:column="26">const<pos:position pos:line="1" pos:column="31"/></specifier> <name pos:line="1" pos:column="32">char<pos:position pos:line="1" pos:column="36"/></name> <modifier pos:line="1" pos:column="37">*<pos:position pos:line="1" pos:column="38"/></modifier></type><name pos:line="1" pos:column="38">uri<pos:position pos:line="1" pos:column="41"/></name></decl></parameter>, <parameter><decl><type><specifier pos:line="1" pos:column="43">const<pos:position pos:line="1" pos:column="48"/></specifier> <name pos:line="1" pos:column="49">char<pos:position pos:line="1" pos:column="53"/></name> <modifier pos:line="1" pos:column="54">*<pos:position pos:line="1" pos:column="55"/></modifier></type><name pos:line="1" pos:column="55">alias_fakename<pos:position pos:line="1" pos:column="69"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="70"/></parameter_list>
<block pos:line="2" pos:column="1">{
    <decl_stmt><decl><type><specifier pos:line="3" pos:column="5">const<pos:position pos:line="3" pos:column="10"/></specifier> <name pos:line="3" pos:column="11">char<pos:position pos:line="3" pos:column="15"/></name> <modifier pos:line="3" pos:column="16">*<pos:position pos:line="3" pos:column="17"/></modifier></type><name pos:line="3" pos:column="17">aliasp<pos:position pos:line="3" pos:column="23"/></name> <init pos:line="3" pos:column="24">= <expr><name pos:line="3" pos:column="26">alias_fakename<pos:position pos:line="3" pos:column="40"/></name></expr></init></decl>, <modifier pos:line="3" pos:column="42">*<pos:position pos:line="3" pos:column="43"/></modifier><decl><type ref="prev"/><name pos:line="3" pos:column="43">urip<pos:position pos:line="3" pos:column="47"/></name> <init pos:line="3" pos:column="48">= <expr><name pos:line="3" pos:column="50">uri<pos:position pos:line="3" pos:column="53"/></name></expr></init></decl>;<pos:position pos:line="3" pos:column="54"/></decl_stmt>

    <while pos:line="5" pos:column="5">while <condition pos:line="5" pos:column="11">(<expr><operator pos:line="5" pos:column="12">*<pos:position pos:line="5" pos:column="13"/></operator><name pos:line="5" pos:column="13">aliasp<pos:position pos:line="5" pos:column="19"/></name></expr>)<pos:position pos:line="5" pos:column="20"/></condition> <block pos:line="5" pos:column="21">{
        <if pos:line="6" pos:column="9">if <condition pos:line="6" pos:column="12">(<expr><operator pos:line="6" pos:column="13">*<pos:position pos:line="6" pos:column="14"/></operator><name pos:line="6" pos:column="14">aliasp<pos:position pos:line="6" pos:column="20"/></name> <operator pos:line="6" pos:column="21">==<pos:position pos:line="6" pos:column="23"/></operator> <literal type="char" pos:line="6" pos:column="24">'/'<pos:position pos:line="6" pos:column="27"/></literal></expr>)<pos:position pos:line="6" pos:column="28"/></condition><then pos:line="6" pos:column="28"> <block pos:line="6" pos:column="29">{
            <comment type="block" pos:line="7" pos:column="13">/* any number of '/' in the alias matches any number in
             * the supplied URI, but there must be at least one...
             */</comment>
            <if pos:line="10" pos:column="13">if <condition pos:line="10" pos:column="16">(<expr><operator pos:line="10" pos:column="17">*<pos:position pos:line="10" pos:column="18"/></operator><name pos:line="10" pos:column="18">urip<pos:position pos:line="10" pos:column="22"/></name> <operator pos:line="10" pos:column="23">!=<pos:position pos:line="10" pos:column="25"/></operator> <literal type="char" pos:line="10" pos:column="26">'/'<pos:position pos:line="10" pos:column="29"/></literal></expr>)<pos:position pos:line="10" pos:column="30"/></condition><then pos:line="10" pos:column="30">
                <block type="pseudo"><return pos:line="11" pos:column="17">return <expr><literal type="number" pos:line="11" pos:column="24">0<pos:position pos:line="11" pos:column="25"/></literal></expr>;<pos:position pos:line="11" pos:column="26"/></return></block></then></if>

            <do pos:line="13" pos:column="13">do <block pos:line="13" pos:column="16">{
                <expr_stmt><expr><operator pos:line="14" pos:column="17">++<pos:position pos:line="14" pos:column="19"/></operator><name pos:line="14" pos:column="19">aliasp<pos:position pos:line="14" pos:column="25"/></name></expr>;<pos:position pos:line="14" pos:column="26"/></expr_stmt>
            }<pos:position pos:line="15" pos:column="14"/></block> while <condition pos:line="15" pos:column="21">(<expr><operator pos:line="15" pos:column="22">*<pos:position pos:line="15" pos:column="23"/></operator><name pos:line="15" pos:column="23">aliasp<pos:position pos:line="15" pos:column="29"/></name> <operator pos:line="15" pos:column="30">==<pos:position pos:line="15" pos:column="32"/></operator> <literal type="char" pos:line="15" pos:column="33">'/'<pos:position pos:line="15" pos:column="36"/></literal></expr>)<pos:position pos:line="15" pos:column="37"/></condition>;<pos:position pos:line="15" pos:column="38"/></do>
            <do pos:line="16" pos:column="13">do <block pos:line="16" pos:column="16">{
                <expr_stmt><expr><operator pos:line="17" pos:column="17">++<pos:position pos:line="17" pos:column="19"/></operator><name pos:line="17" pos:column="19">urip<pos:position pos:line="17" pos:column="23"/></name></expr>;<pos:position pos:line="17" pos:column="24"/></expr_stmt>
            }<pos:position pos:line="18" pos:column="14"/></block> while <condition pos:line="18" pos:column="21">(<expr><operator pos:line="18" pos:column="22">*<pos:position pos:line="18" pos:column="23"/></operator><name pos:line="18" pos:column="23">urip<pos:position pos:line="18" pos:column="27"/></name> <operator pos:line="18" pos:column="28">==<pos:position pos:line="18" pos:column="30"/></operator> <literal type="char" pos:line="18" pos:column="31">'/'<pos:position pos:line="18" pos:column="34"/></literal></expr>)<pos:position pos:line="18" pos:column="35"/></condition>;<pos:position pos:line="18" pos:column="36"/></do>
        }<pos:position pos:line="19" pos:column="10"/></block></then>
        <else pos:line="20" pos:column="9">else <block pos:line="20" pos:column="14">{
            <comment type="block" pos:line="21" pos:column="13">/* Other characters are compared literally */</comment>
            <if pos:line="22" pos:column="13">if <condition pos:line="22" pos:column="16">(<expr><operator pos:line="22" pos:column="17">*<pos:position pos:line="22" pos:column="18"/></operator><name pos:line="22" pos:column="18">urip<pos:position pos:line="22" pos:column="22"/></name><operator pos:line="22" pos:column="22">++<pos:position pos:line="22" pos:column="24"/></operator> <operator pos:line="22" pos:column="25">!=<pos:position pos:line="22" pos:column="27"/></operator> <operator pos:line="22" pos:column="28">*<pos:position pos:line="22" pos:column="29"/></operator><name pos:line="22" pos:column="29">aliasp<pos:position pos:line="22" pos:column="35"/></name><operator pos:line="22" pos:column="35">++<pos:position pos:line="22" pos:column="37"/></operator></expr>)<pos:position pos:line="22" pos:column="38"/></condition><then pos:line="22" pos:column="38">
                <block type="pseudo"><return pos:line="23" pos:column="17">return <expr><literal type="number" pos:line="23" pos:column="24">0<pos:position pos:line="23" pos:column="25"/></literal></expr>;<pos:position pos:line="23" pos:column="26"/></return></block></then></if>
        }<pos:position pos:line="24" pos:column="10"/></block></else></if>
    }<pos:position pos:line="25" pos:column="6"/></block></while>

    <comment type="block" pos:line="27" pos:column="5">/* Check last alias path component matched all the way */</comment>

    <if pos:line="29" pos:column="5">if <condition pos:line="29" pos:column="8">(<expr><name><name pos:line="29" pos:column="9">aliasp<pos:position pos:line="29" pos:column="15"/></name><index pos:line="29" pos:column="15">[<expr><operator pos:line="29" pos:column="16">-<pos:position pos:line="29" pos:column="17"/></operator><literal type="number" pos:line="29" pos:column="17">1<pos:position pos:line="29" pos:column="18"/></literal></expr>]<pos:position pos:line="29" pos:column="19"/></index></name> <operator pos:line="29" pos:column="20">!=<pos:position pos:line="29" pos:column="22"/></operator> <literal type="char" pos:line="29" pos:column="23">'/'<pos:position pos:line="29" pos:column="26"/></literal> <operator pos:line="29" pos:column="27">&amp;&amp;<pos:position pos:line="29" pos:column="37"/></operator> <operator pos:line="29" pos:column="30">*<pos:position pos:line="29" pos:column="31"/></operator><name pos:line="29" pos:column="31">urip<pos:position pos:line="29" pos:column="35"/></name> <operator pos:line="29" pos:column="36">!=<pos:position pos:line="29" pos:column="38"/></operator> <literal type="char" pos:line="29" pos:column="39">'\0'<pos:position pos:line="29" pos:column="43"/></literal> <operator pos:line="29" pos:column="44">&amp;&amp;<pos:position pos:line="29" pos:column="54"/></operator> <operator pos:line="29" pos:column="47">*<pos:position pos:line="29" pos:column="48"/></operator><name pos:line="29" pos:column="48">urip<pos:position pos:line="29" pos:column="52"/></name> <operator pos:line="29" pos:column="53">!=<pos:position pos:line="29" pos:column="55"/></operator> <literal type="char" pos:line="29" pos:column="56">'/'<pos:position pos:line="29" pos:column="59"/></literal></expr>)<pos:position pos:line="29" pos:column="60"/></condition><then pos:line="29" pos:column="60">
        <block type="pseudo"><return pos:line="30" pos:column="9">return <expr><literal type="number" pos:line="30" pos:column="16">0<pos:position pos:line="30" pos:column="17"/></literal></expr>;<pos:position pos:line="30" pos:column="18"/></return></block></then></if>

    <comment type="block" pos:line="32" pos:column="5">/* Return number of characters from URI which matched (may be
     * greater than length of alias, since we may have matched
     * doubled slashes)
     */</comment>

    <return pos:line="37" pos:column="5">return <expr><name pos:line="37" pos:column="12">urip<pos:position pos:line="37" pos:column="16"/></name> <operator pos:line="37" pos:column="17">-<pos:position pos:line="37" pos:column="18"/></operator> <name pos:line="37" pos:column="19">uri<pos:position pos:line="37" pos:column="22"/></name></expr>;<pos:position pos:line="37" pos:column="23"/></return>
}<pos:position pos:line="38" pos:column="2"/></block></function></unit>

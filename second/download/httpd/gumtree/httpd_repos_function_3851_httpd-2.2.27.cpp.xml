<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/httpd/gumtree/httpd_repos_function_3851_httpd-2.2.27.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">apr_status_t<pos:position pos:line="1" pos:column="20"/></name></type> <name pos:line="1" pos:column="21">asio_pollset_add<pos:position pos:line="1" pos:column="37"/></name><parameter_list pos:line="1" pos:column="37">(<parameter><decl><type><name pos:line="1" pos:column="38">apr_pollset_t<pos:position pos:line="1" pos:column="51"/></name> <modifier pos:line="1" pos:column="52">*<pos:position pos:line="1" pos:column="53"/></modifier></type><name pos:line="1" pos:column="53">pollset<pos:position pos:line="1" pos:column="60"/></name></decl></parameter>,
                                     <parameter><decl><type><specifier pos:line="2" pos:column="38">const<pos:position pos:line="2" pos:column="43"/></specifier> <name pos:line="2" pos:column="44">apr_pollfd_t<pos:position pos:line="2" pos:column="56"/></name> <modifier pos:line="2" pos:column="57">*<pos:position pos:line="2" pos:column="58"/></modifier></type><name pos:line="2" pos:column="58">descriptor<pos:position pos:line="2" pos:column="68"/></name></decl></parameter>)<pos:position pos:line="2" pos:column="69"/></parameter_list>
<block pos:line="3" pos:column="1">{
    <decl_stmt><decl><type><name pos:line="4" pos:column="5">DBG_BUFF<pos:position pos:line="4" pos:column="13"/></name>
    <name pos:line="5" pos:column="5">asio_elem_t<pos:position pos:line="5" pos:column="16"/></name> <modifier pos:line="5" pos:column="17">*<pos:position pos:line="5" pos:column="18"/></modifier></type><name pos:line="5" pos:column="18">elem<pos:position pos:line="5" pos:column="22"/></name></decl>;<pos:position pos:line="5" pos:column="23"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="6" pos:column="5">apr_status_t<pos:position pos:line="6" pos:column="17"/></name></type> <name pos:line="6" pos:column="18">rv<pos:position pos:line="6" pos:column="20"/></name> <init pos:line="6" pos:column="21">= <expr><name pos:line="6" pos:column="23">APR_SUCCESS<pos:position pos:line="6" pos:column="34"/></name></expr></init></decl>;<pos:position pos:line="6" pos:column="35"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="7" pos:column="5">apr_pollset_private_t<pos:position pos:line="7" pos:column="26"/></name> <modifier pos:line="7" pos:column="27">*<pos:position pos:line="7" pos:column="28"/></modifier></type><name pos:line="7" pos:column="28">priv<pos:position pos:line="7" pos:column="32"/></name> <init pos:line="7" pos:column="33">= <expr><name><name pos:line="7" pos:column="35">pollset<pos:position pos:line="7" pos:column="42"/></name><operator pos:line="7" pos:column="42">-&gt;<pos:position pos:line="7" pos:column="47"/></operator><name pos:line="7" pos:column="44">p<pos:position pos:line="7" pos:column="45"/></name></name></expr></init></decl>;<pos:position pos:line="7" pos:column="46"/></decl_stmt>

    <expr_stmt><expr><call><name pos:line="9" pos:column="5">pollset_lock_rings<pos:position pos:line="9" pos:column="23"/></name><argument_list pos:line="9" pos:column="23">()<pos:position pos:line="9" pos:column="25"/></argument_list></call></expr>;<pos:position pos:line="9" pos:column="26"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="10" pos:column="5">DBG<pos:position pos:line="10" pos:column="8"/></name><argument_list pos:line="10" pos:column="8">(<argument><expr><literal type="number" pos:line="10" pos:column="9">2<pos:position pos:line="10" pos:column="10"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="10" pos:column="12">"entered\n"<pos:position pos:line="10" pos:column="23"/></literal></expr></argument>)<pos:position pos:line="10" pos:column="24"/></argument_list></call></expr>;<pos:position pos:line="10" pos:column="25"/></expr_stmt>

    <if pos:line="12" pos:column="5">if <condition pos:line="12" pos:column="8">(<expr><name><name pos:line="12" pos:column="9">pollset<pos:position pos:line="12" pos:column="16"/></name><operator pos:line="12" pos:column="16">-&gt;<pos:position pos:line="12" pos:column="21"/></operator><name pos:line="12" pos:column="18">flags<pos:position pos:line="12" pos:column="23"/></name></name> <operator pos:line="12" pos:column="24">&amp;<pos:position pos:line="12" pos:column="29"/></operator> <name pos:line="12" pos:column="26">APR_POLLSET_THREADSAFE<pos:position pos:line="12" pos:column="48"/></name></expr>)<pos:position pos:line="12" pos:column="49"/></condition><then pos:line="12" pos:column="49"> <block pos:line="12" pos:column="50">{

        <if pos:line="14" pos:column="9">if <condition pos:line="14" pos:column="12">(<expr><operator pos:line="14" pos:column="13">!<pos:position pos:line="14" pos:column="14"/></operator><call><name pos:line="14" pos:column="14">APR_RING_EMPTY<pos:position pos:line="14" pos:column="28"/></name><argument_list pos:line="14" pos:column="28">(<argument><expr><operator pos:line="14" pos:column="29">&amp;<pos:position pos:line="14" pos:column="34"/></operator><operator pos:line="14" pos:column="30">(<pos:position pos:line="14" pos:column="31"/></operator><name><name pos:line="14" pos:column="31">priv<pos:position pos:line="14" pos:column="35"/></name><operator pos:line="14" pos:column="35">-&gt;<pos:position pos:line="14" pos:column="40"/></operator><name pos:line="14" pos:column="37">free_ring<pos:position pos:line="14" pos:column="46"/></name></name><operator pos:line="14" pos:column="46">)<pos:position pos:line="14" pos:column="47"/></operator></expr></argument>, <argument><expr><name pos:line="14" pos:column="49">asio_elem_t<pos:position pos:line="14" pos:column="60"/></name></expr></argument>, <argument><expr><name pos:line="14" pos:column="62">link<pos:position pos:line="14" pos:column="66"/></name></expr></argument>)<pos:position pos:line="14" pos:column="67"/></argument_list></call></expr>)<pos:position pos:line="14" pos:column="68"/></condition><then pos:line="14" pos:column="68"> <block pos:line="14" pos:column="69">{
            <expr_stmt><expr><name pos:line="15" pos:column="13">elem<pos:position pos:line="15" pos:column="17"/></name> <operator pos:line="15" pos:column="18">=<pos:position pos:line="15" pos:column="19"/></operator> <call><name pos:line="15" pos:column="20">APR_RING_FIRST<pos:position pos:line="15" pos:column="34"/></name><argument_list pos:line="15" pos:column="34">(<argument><expr><operator pos:line="15" pos:column="35">&amp;<pos:position pos:line="15" pos:column="40"/></operator><operator pos:line="15" pos:column="36">(<pos:position pos:line="15" pos:column="37"/></operator><name><name pos:line="15" pos:column="37">priv<pos:position pos:line="15" pos:column="41"/></name><operator pos:line="15" pos:column="41">-&gt;<pos:position pos:line="15" pos:column="46"/></operator><name pos:line="15" pos:column="43">free_ring<pos:position pos:line="15" pos:column="52"/></name></name><operator pos:line="15" pos:column="52">)<pos:position pos:line="15" pos:column="53"/></operator></expr></argument>)<pos:position pos:line="15" pos:column="54"/></argument_list></call></expr>;<pos:position pos:line="15" pos:column="55"/></expr_stmt>
            <expr_stmt><expr><call><name pos:line="16" pos:column="13">APR_RING_REMOVE<pos:position pos:line="16" pos:column="28"/></name><argument_list pos:line="16" pos:column="28">(<argument><expr><name pos:line="16" pos:column="29">elem<pos:position pos:line="16" pos:column="33"/></name></expr></argument>, <argument><expr><name pos:line="16" pos:column="35">link<pos:position pos:line="16" pos:column="39"/></name></expr></argument>)<pos:position pos:line="16" pos:column="40"/></argument_list></call></expr>;<pos:position pos:line="16" pos:column="41"/></expr_stmt>
            <expr_stmt><expr><call><name pos:line="17" pos:column="13">DBG1<pos:position pos:line="17" pos:column="17"/></name><argument_list pos:line="17" pos:column="17">(<argument><expr><literal type="number" pos:line="17" pos:column="18">3<pos:position pos:line="17" pos:column="19"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="17" pos:column="21">"used recycled memory at %08p\n"<pos:position pos:line="17" pos:column="53"/></literal></expr></argument>, <argument><expr><name pos:line="17" pos:column="55">elem<pos:position pos:line="17" pos:column="59"/></name></expr></argument>)<pos:position pos:line="17" pos:column="60"/></argument_list></call></expr>;<pos:position pos:line="17" pos:column="61"/></expr_stmt>
            <expr_stmt><expr><name><name pos:line="18" pos:column="13">elem<pos:position pos:line="18" pos:column="17"/></name><operator pos:line="18" pos:column="17">-&gt;<pos:position pos:line="18" pos:column="22"/></operator><name pos:line="18" pos:column="19">state<pos:position pos:line="18" pos:column="24"/></name></name> <operator pos:line="18" pos:column="25">=<pos:position pos:line="18" pos:column="26"/></operator> <name pos:line="18" pos:column="27">ASIO_INIT<pos:position pos:line="18" pos:column="36"/></name></expr>;<pos:position pos:line="18" pos:column="37"/></expr_stmt>
        }<pos:position pos:line="19" pos:column="10"/></block></then>
        <else pos:line="20" pos:column="9">else <block pos:line="20" pos:column="14">{
            <expr_stmt><expr><name pos:line="21" pos:column="13">elem<pos:position pos:line="21" pos:column="17"/></name> <operator pos:line="21" pos:column="18">=<pos:position pos:line="21" pos:column="19"/></operator> <operator pos:line="21" pos:column="20">(<pos:position pos:line="21" pos:column="21"/></operator><name pos:line="21" pos:column="21">asio_elem_t<pos:position pos:line="21" pos:column="32"/></name> <operator pos:line="21" pos:column="33">*<pos:position pos:line="21" pos:column="34"/></operator><operator pos:line="21" pos:column="34">)<pos:position pos:line="21" pos:column="35"/></operator> <call><name pos:line="21" pos:column="36">apr_pcalloc<pos:position pos:line="21" pos:column="47"/></name><argument_list pos:line="21" pos:column="47">(<argument><expr><name><name pos:line="21" pos:column="48">pollset<pos:position pos:line="21" pos:column="55"/></name><operator pos:line="21" pos:column="55">-&gt;<pos:position pos:line="21" pos:column="60"/></operator><name pos:line="21" pos:column="57">pool<pos:position pos:line="21" pos:column="61"/></name></name></expr></argument>, <argument><expr><sizeof pos:line="21" pos:column="63">sizeof<argument_list pos:line="21" pos:column="69">(<argument><expr><name pos:line="21" pos:column="70">asio_elem_t<pos:position pos:line="21" pos:column="81"/></name></expr></argument>)<pos:position pos:line="21" pos:column="82"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="21" pos:column="83"/></argument_list></call></expr>;<pos:position pos:line="21" pos:column="84"/></expr_stmt>
            <expr_stmt><expr><call><name pos:line="22" pos:column="13">DBG1<pos:position pos:line="22" pos:column="17"/></name><argument_list pos:line="22" pos:column="17">(<argument><expr><literal type="number" pos:line="22" pos:column="18">3<pos:position pos:line="22" pos:column="19"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="22" pos:column="21">"alloced new memory at %08p\n"<pos:position pos:line="22" pos:column="51"/></literal></expr></argument>, <argument><expr><name pos:line="22" pos:column="53">elem<pos:position pos:line="22" pos:column="57"/></name></expr></argument>)<pos:position pos:line="22" pos:column="58"/></argument_list></call></expr>;<pos:position pos:line="22" pos:column="59"/></expr_stmt>

            <expr_stmt><expr><name><name pos:line="24" pos:column="13">elem<pos:position pos:line="24" pos:column="17"/></name><operator pos:line="24" pos:column="17">-&gt;<pos:position pos:line="24" pos:column="22"/></operator><name pos:line="24" pos:column="19">a<pos:position pos:line="24" pos:column="20"/></name><operator pos:line="24" pos:column="20">.<pos:position pos:line="24" pos:column="21"/></operator><name pos:line="24" pos:column="21">aio_notifytype<pos:position pos:line="24" pos:column="35"/></name></name> <operator pos:line="24" pos:column="36">=<pos:position pos:line="24" pos:column="37"/></operator> <name pos:line="24" pos:column="38">AIO_MSGQ<pos:position pos:line="24" pos:column="46"/></name></expr>;<pos:position pos:line="24" pos:column="47"/></expr_stmt>
            <expr_stmt><expr><name><name pos:line="25" pos:column="13">elem<pos:position pos:line="25" pos:column="17"/></name><operator pos:line="25" pos:column="17">-&gt;<pos:position pos:line="25" pos:column="22"/></operator><name pos:line="25" pos:column="19">a<pos:position pos:line="25" pos:column="20"/></name><operator pos:line="25" pos:column="20">.<pos:position pos:line="25" pos:column="21"/></operator><name pos:line="25" pos:column="21">aio_msgev_qid<pos:position pos:line="25" pos:column="34"/></name></name>  <operator pos:line="25" pos:column="36">=<pos:position pos:line="25" pos:column="37"/></operator> <name><name pos:line="25" pos:column="38">priv<pos:position pos:line="25" pos:column="42"/></name><operator pos:line="25" pos:column="42">-&gt;<pos:position pos:line="25" pos:column="47"/></operator><name pos:line="25" pos:column="44">msg_q<pos:position pos:line="25" pos:column="49"/></name></name></expr>;<pos:position pos:line="25" pos:column="50"/></expr_stmt>
            <expr_stmt><expr><call><name pos:line="26" pos:column="13">DBG1<pos:position pos:line="26" pos:column="17"/></name><argument_list pos:line="26" pos:column="17">(<argument><expr><literal type="number" pos:line="26" pos:column="18">5<pos:position pos:line="26" pos:column="19"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="26" pos:column="21">"aio_msgev_quid = %d \n"<pos:position pos:line="26" pos:column="45"/></literal></expr></argument>, <argument><expr><name><name pos:line="26" pos:column="47">elem<pos:position pos:line="26" pos:column="51"/></name><operator pos:line="26" pos:column="51">-&gt;<pos:position pos:line="26" pos:column="56"/></operator><name pos:line="26" pos:column="53">a<pos:position pos:line="26" pos:column="54"/></name><operator pos:line="26" pos:column="54">.<pos:position pos:line="26" pos:column="55"/></operator><name pos:line="26" pos:column="55">aio_msgev_qid<pos:position pos:line="26" pos:column="68"/></name></name></expr></argument>)<pos:position pos:line="26" pos:column="69"/></argument_list></call></expr>;<pos:position pos:line="26" pos:column="70"/></expr_stmt>
            <expr_stmt><expr><name><name pos:line="27" pos:column="13">elem<pos:position pos:line="27" pos:column="17"/></name><operator pos:line="27" pos:column="17">-&gt;<pos:position pos:line="27" pos:column="22"/></operator><name pos:line="27" pos:column="19">a<pos:position pos:line="27" pos:column="20"/></name><operator pos:line="27" pos:column="20">.<pos:position pos:line="27" pos:column="21"/></operator><name pos:line="27" pos:column="21">aio_msgev_size<pos:position pos:line="27" pos:column="35"/></name></name> <operator pos:line="27" pos:column="36">=<pos:position pos:line="27" pos:column="37"/></operator> <sizeof pos:line="27" pos:column="38">sizeof<argument_list pos:line="27" pos:column="44">(<argument><expr><name pos:line="27" pos:column="45">asio_elem_t<pos:position pos:line="27" pos:column="56"/></name> <operator pos:line="27" pos:column="57">*<pos:position pos:line="27" pos:column="58"/></operator></expr></argument>)<pos:position pos:line="27" pos:column="59"/></argument_list></sizeof></expr>;<pos:position pos:line="27" pos:column="60"/></expr_stmt>
            <expr_stmt><expr><name><name pos:line="28" pos:column="13">elem<pos:position pos:line="28" pos:column="17"/></name><operator pos:line="28" pos:column="17">-&gt;<pos:position pos:line="28" pos:column="22"/></operator><name pos:line="28" pos:column="19">a<pos:position pos:line="28" pos:column="20"/></name><operator pos:line="28" pos:column="20">.<pos:position pos:line="28" pos:column="21"/></operator><name pos:line="28" pos:column="21">aio_msgev_flag<pos:position pos:line="28" pos:column="35"/></name></name> <operator pos:line="28" pos:column="36">=<pos:position pos:line="28" pos:column="37"/></operator> <literal type="number" pos:line="28" pos:column="38">0<pos:position pos:line="28" pos:column="39"/></literal></expr>;<pos:position pos:line="28" pos:column="40"/></expr_stmt>     <comment type="block" pos:line="28" pos:column="45">/* wait if queue is full */</comment>
            <expr_stmt><expr><name><name pos:line="29" pos:column="13">elem<pos:position pos:line="29" pos:column="17"/></name><operator pos:line="29" pos:column="17">-&gt;<pos:position pos:line="29" pos:column="22"/></operator><name pos:line="29" pos:column="19">a<pos:position pos:line="29" pos:column="20"/></name><operator pos:line="29" pos:column="20">.<pos:position pos:line="29" pos:column="21"/></operator><name pos:line="29" pos:column="21">aio_msgev_addr<pos:position pos:line="29" pos:column="35"/></name></name> <operator pos:line="29" pos:column="36">=<pos:position pos:line="29" pos:column="37"/></operator> <operator pos:line="29" pos:column="38">&amp;<pos:position pos:line="29" pos:column="43"/></operator><operator pos:line="29" pos:column="39">(<pos:position pos:line="29" pos:column="40"/></operator><name><name pos:line="29" pos:column="40">elem<pos:position pos:line="29" pos:column="44"/></name><operator pos:line="29" pos:column="44">-&gt;<pos:position pos:line="29" pos:column="49"/></operator><name pos:line="29" pos:column="46">msg<pos:position pos:line="29" pos:column="49"/></name></name><operator pos:line="29" pos:column="49">)<pos:position pos:line="29" pos:column="50"/></operator></expr>;<pos:position pos:line="29" pos:column="51"/></expr_stmt>
            <expr_stmt><expr><name><name pos:line="30" pos:column="13">elem<pos:position pos:line="30" pos:column="17"/></name><operator pos:line="30" pos:column="17">-&gt;<pos:position pos:line="30" pos:column="22"/></operator><name pos:line="30" pos:column="19">a<pos:position pos:line="30" pos:column="20"/></name><operator pos:line="30" pos:column="20">.<pos:position pos:line="30" pos:column="21"/></operator><name pos:line="30" pos:column="21">aio_buf<pos:position pos:line="30" pos:column="28"/></name></name>        <operator pos:line="30" pos:column="36">=<pos:position pos:line="30" pos:column="37"/></operator> <operator pos:line="30" pos:column="38">&amp;<pos:position pos:line="30" pos:column="43"/></operator><operator pos:line="30" pos:column="39">(<pos:position pos:line="30" pos:column="40"/></operator><name><name pos:line="30" pos:column="40">elem<pos:position pos:line="30" pos:column="44"/></name><operator pos:line="30" pos:column="44">-&gt;<pos:position pos:line="30" pos:column="49"/></operator><name pos:line="30" pos:column="46">os_pfd<pos:position pos:line="30" pos:column="52"/></name></name><operator pos:line="30" pos:column="52">)<pos:position pos:line="30" pos:column="53"/></operator></expr>;<pos:position pos:line="30" pos:column="54"/></expr_stmt>
            <expr_stmt><expr><name><name pos:line="31" pos:column="13">elem<pos:position pos:line="31" pos:column="17"/></name><operator pos:line="31" pos:column="17">-&gt;<pos:position pos:line="31" pos:column="22"/></operator><name pos:line="31" pos:column="19">a<pos:position pos:line="31" pos:column="20"/></name><operator pos:line="31" pos:column="20">.<pos:position pos:line="31" pos:column="21"/></operator><name pos:line="31" pos:column="21">aio_nbytes<pos:position pos:line="31" pos:column="31"/></name></name>     <operator pos:line="31" pos:column="36">=<pos:position pos:line="31" pos:column="37"/></operator> <literal type="number" pos:line="31" pos:column="38">1<pos:position pos:line="31" pos:column="39"/></literal></expr>;<pos:position pos:line="31" pos:column="40"/></expr_stmt>     <comment type="block" pos:line="31" pos:column="45">/* number of pfds to poll */</comment>
            <expr_stmt><expr><name><name pos:line="32" pos:column="13">elem<pos:position pos:line="32" pos:column="17"/></name><operator pos:line="32" pos:column="17">-&gt;<pos:position pos:line="32" pos:column="22"/></operator><name pos:line="32" pos:column="19">msg<pos:position pos:line="32" pos:column="22"/></name><operator pos:line="32" pos:column="22">.<pos:position pos:line="32" pos:column="23"/></operator><name pos:line="32" pos:column="23">msg_type<pos:position pos:line="32" pos:column="31"/></name></name>     <operator pos:line="32" pos:column="36">=<pos:position pos:line="32" pos:column="37"/></operator> <literal type="number" pos:line="32" pos:column="38">1<pos:position pos:line="32" pos:column="39"/></literal></expr>;<pos:position pos:line="32" pos:column="40"/></expr_stmt>
            <expr_stmt><expr><name><name pos:line="33" pos:column="13">elem<pos:position pos:line="33" pos:column="17"/></name><operator pos:line="33" pos:column="17">-&gt;<pos:position pos:line="33" pos:column="22"/></operator><name pos:line="33" pos:column="19">msg<pos:position pos:line="33" pos:column="22"/></name><operator pos:line="33" pos:column="22">.<pos:position pos:line="33" pos:column="23"/></operator><name pos:line="33" pos:column="23">msg_elem<pos:position pos:line="33" pos:column="31"/></name></name>     <operator pos:line="33" pos:column="36">=<pos:position pos:line="33" pos:column="37"/></operator> <name pos:line="33" pos:column="38">elem<pos:position pos:line="33" pos:column="42"/></name></expr>;<pos:position pos:line="33" pos:column="43"/></expr_stmt>
        }<pos:position pos:line="34" pos:column="10"/></block></else></if>

        <comment type="block" pos:line="36" pos:column="9">/* z/OS only supports async I/O for sockets for now */</comment>
        <expr_stmt><expr><name><name pos:line="37" pos:column="9">elem<pos:position pos:line="37" pos:column="13"/></name><operator pos:line="37" pos:column="13">-&gt;<pos:position pos:line="37" pos:column="18"/></operator><name pos:line="37" pos:column="15">os_pfd<pos:position pos:line="37" pos:column="21"/></name><operator pos:line="37" pos:column="21">.<pos:position pos:line="37" pos:column="22"/></operator><name pos:line="37" pos:column="22">fd<pos:position pos:line="37" pos:column="24"/></name></name> <operator pos:line="37" pos:column="25">=<pos:position pos:line="37" pos:column="26"/></operator> <name><name pos:line="37" pos:column="27">descriptor<pos:position pos:line="37" pos:column="37"/></name><operator pos:line="37" pos:column="37">-&gt;<pos:position pos:line="37" pos:column="42"/></operator><name pos:line="37" pos:column="39">desc<pos:position pos:line="37" pos:column="43"/></name><operator pos:line="37" pos:column="43">.<pos:position pos:line="37" pos:column="44"/></operator><name pos:line="37" pos:column="44">s<pos:position pos:line="37" pos:column="45"/></name><operator pos:line="37" pos:column="45">-&gt;<pos:position pos:line="37" pos:column="50"/></operator><name pos:line="37" pos:column="47">socketdes<pos:position pos:line="37" pos:column="56"/></name></name></expr>;<pos:position pos:line="37" pos:column="57"/></expr_stmt>

        <expr_stmt><expr><call><name pos:line="39" pos:column="9">APR_RING_ELEM_INIT<pos:position pos:line="39" pos:column="27"/></name><argument_list pos:line="39" pos:column="27">(<argument><expr><name pos:line="39" pos:column="28">elem<pos:position pos:line="39" pos:column="32"/></name></expr></argument>, <argument><expr><name pos:line="39" pos:column="34">link<pos:position pos:line="39" pos:column="38"/></name></expr></argument>)<pos:position pos:line="39" pos:column="39"/></argument_list></call></expr>;<pos:position pos:line="39" pos:column="40"/></expr_stmt>
        <expr_stmt><expr><name><name pos:line="40" pos:column="9">elem<pos:position pos:line="40" pos:column="13"/></name><operator pos:line="40" pos:column="13">-&gt;<pos:position pos:line="40" pos:column="18"/></operator><name pos:line="40" pos:column="15">a<pos:position pos:line="40" pos:column="16"/></name><operator pos:line="40" pos:column="16">.<pos:position pos:line="40" pos:column="17"/></operator><name pos:line="40" pos:column="17">aio_cmd<pos:position pos:line="40" pos:column="24"/></name></name>       <operator pos:line="40" pos:column="31">=<pos:position pos:line="40" pos:column="32"/></operator> <name pos:line="40" pos:column="33">AIO_SELPOLL<pos:position pos:line="40" pos:column="44"/></name></expr>;<pos:position pos:line="40" pos:column="45"/></expr_stmt>
        <expr_stmt><expr><name><name pos:line="41" pos:column="9">elem<pos:position pos:line="41" pos:column="13"/></name><operator pos:line="41" pos:column="13">-&gt;<pos:position pos:line="41" pos:column="18"/></operator><name pos:line="41" pos:column="15">a<pos:position pos:line="41" pos:column="16"/></name><operator pos:line="41" pos:column="16">.<pos:position pos:line="41" pos:column="17"/></operator><name pos:line="41" pos:column="17">aio_cflags<pos:position pos:line="41" pos:column="27"/></name></name>    <operator pos:line="41" pos:column="31">&amp;=<pos:position pos:line="41" pos:column="37"/></operator> <operator pos:line="41" pos:column="34">~<pos:position pos:line="41" pos:column="35"/></operator><name pos:line="41" pos:column="35">AIO_OK2COMPIMD<pos:position pos:line="41" pos:column="49"/></name></expr>;<pos:position pos:line="41" pos:column="50"/></expr_stmt> <comment type="block" pos:line="41" pos:column="51">/* not OK to complete inline*/</comment>
        <expr_stmt><expr><name><name pos:line="42" pos:column="9">elem<pos:position pos:line="42" pos:column="13"/></name><operator pos:line="42" pos:column="13">-&gt;<pos:position pos:line="42" pos:column="18"/></operator><name pos:line="42" pos:column="15">pfd<pos:position pos:line="42" pos:column="18"/></name></name>             <operator pos:line="42" pos:column="31">=<pos:position pos:line="42" pos:column="32"/></operator> <operator pos:line="42" pos:column="33">*<pos:position pos:line="42" pos:column="34"/></operator><name pos:line="42" pos:column="34">descriptor<pos:position pos:line="42" pos:column="44"/></name></expr>;<pos:position pos:line="42" pos:column="45"/></expr_stmt>
        <expr_stmt><expr><name><name pos:line="43" pos:column="9">elem<pos:position pos:line="43" pos:column="13"/></name><operator pos:line="43" pos:column="13">-&gt;<pos:position pos:line="43" pos:column="18"/></operator><name pos:line="43" pos:column="15">os_pfd<pos:position pos:line="43" pos:column="21"/></name><operator pos:line="43" pos:column="21">.<pos:position pos:line="43" pos:column="22"/></operator><name pos:line="43" pos:column="22">events<pos:position pos:line="43" pos:column="28"/></name></name>   <operator pos:line="43" pos:column="31">=<pos:position pos:line="43" pos:column="32"/></operator> <call><name pos:line="43" pos:column="33">get_event<pos:position pos:line="43" pos:column="42"/></name><argument_list pos:line="43" pos:column="42">(<argument><expr><name><name pos:line="43" pos:column="43">descriptor<pos:position pos:line="43" pos:column="53"/></name><operator pos:line="43" pos:column="53">-&gt;<pos:position pos:line="43" pos:column="58"/></operator><name pos:line="43" pos:column="55">reqevents<pos:position pos:line="43" pos:column="64"/></name></name></expr></argument>)<pos:position pos:line="43" pos:column="65"/></argument_list></call></expr>;<pos:position pos:line="43" pos:column="66"/></expr_stmt>

        <if pos:line="45" pos:column="9">if <condition pos:line="45" pos:column="12">(<expr><literal type="number" pos:line="45" pos:column="13">0<pos:position pos:line="45" pos:column="14"/></literal> <operator pos:line="45" pos:column="15">!=<pos:position pos:line="45" pos:column="17"/></operator> <call><name pos:line="45" pos:column="18">asyncio<pos:position pos:line="45" pos:column="25"/></name><argument_list pos:line="45" pos:column="25">(<argument><expr><operator pos:line="45" pos:column="26">&amp;<pos:position pos:line="45" pos:column="31"/></operator><name><name pos:line="45" pos:column="27">elem<pos:position pos:line="45" pos:column="31"/></name><operator pos:line="45" pos:column="31">-&gt;<pos:position pos:line="45" pos:column="36"/></operator><name pos:line="45" pos:column="33">a<pos:position pos:line="45" pos:column="34"/></name></name></expr></argument>)<pos:position pos:line="45" pos:column="35"/></argument_list></call></expr>)<pos:position pos:line="45" pos:column="36"/></condition><then pos:line="45" pos:column="36"> <block pos:line="45" pos:column="37">{
            <expr_stmt><expr><name pos:line="46" pos:column="13">rv<pos:position pos:line="46" pos:column="15"/></name> <operator pos:line="46" pos:column="16">=<pos:position pos:line="46" pos:column="17"/></operator> <name pos:line="46" pos:column="18">errno<pos:position pos:line="46" pos:column="23"/></name></expr>;<pos:position pos:line="46" pos:column="24"/></expr_stmt>
            <expr_stmt><expr><call><name pos:line="47" pos:column="13">DBG3<pos:position pos:line="47" pos:column="17"/></name><argument_list pos:line="47" pos:column="17">(<argument><expr><literal type="number" pos:line="47" pos:column="18">4<pos:position pos:line="47" pos:column="19"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="47" pos:column="21">"pollset %p asio failed fd %d, errno %p\n"<pos:position pos:line="47" pos:column="63"/></literal></expr></argument>,
                     <argument><expr><name pos:line="48" pos:column="22">pollset<pos:position pos:line="48" pos:column="29"/></name></expr></argument>, <argument><expr><name><name pos:line="48" pos:column="31">elem<pos:position pos:line="48" pos:column="35"/></name><operator pos:line="48" pos:column="35">-&gt;<pos:position pos:line="48" pos:column="40"/></operator><name pos:line="48" pos:column="37">os_pfd<pos:position pos:line="48" pos:column="43"/></name><operator pos:line="48" pos:column="43">.<pos:position pos:line="48" pos:column="44"/></operator><name pos:line="48" pos:column="44">fd<pos:position pos:line="48" pos:column="46"/></name></name></expr></argument>, <argument><expr><name pos:line="48" pos:column="48">rv<pos:position pos:line="48" pos:column="50"/></name></expr></argument>)<pos:position pos:line="48" pos:column="51"/></argument_list></call></expr>;<pos:position pos:line="48" pos:column="52"/></expr_stmt>
<cpp:if pos:line="49" pos:column="1">#<cpp:directive pos:line="49" pos:column="2">if<pos:position pos:line="49" pos:column="4"/></cpp:directive> <expr><name pos:line="49" pos:column="5">DEBUG<pos:position pos:line="49" pos:column="10"/></name></expr></cpp:if>
            <expr_stmt><expr><call><name pos:line="50" pos:column="13">perror<pos:position pos:line="50" pos:column="19"/></name><argument_list pos:line="50" pos:column="19">(<argument><expr><name pos:line="50" pos:column="20">__FUNCTION__<pos:position pos:line="50" pos:column="32"/></name> <literal type="string" pos:line="50" pos:column="33">" asio failure"<pos:position pos:line="50" pos:column="48"/></literal></expr></argument>)<pos:position pos:line="50" pos:column="49"/></argument_list></call></expr>;<pos:position pos:line="50" pos:column="50"/></expr_stmt>
<cpp:endif pos:line="51" pos:column="1">#<cpp:directive pos:line="51" pos:column="2">endif<pos:position pos:line="51" pos:column="7"/></cpp:directive></cpp:endif>
        }<pos:position pos:line="52" pos:column="10"/></block></then>
        <else pos:line="53" pos:column="9">else <block pos:line="53" pos:column="14">{
            <expr_stmt><expr><call><name pos:line="54" pos:column="13">DBG2<pos:position pos:line="54" pos:column="17"/></name><argument_list pos:line="54" pos:column="17">(<argument><expr><literal type="number" pos:line="54" pos:column="18">4<pos:position pos:line="54" pos:column="19"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="54" pos:column="21">"good asio call, adding fd %d to pollset %p\n"<pos:position pos:line="54" pos:column="67"/></literal></expr></argument>,
                     <argument><expr><name><name pos:line="55" pos:column="22">elem<pos:position pos:line="55" pos:column="26"/></name><operator pos:line="55" pos:column="26">-&gt;<pos:position pos:line="55" pos:column="31"/></operator><name pos:line="55" pos:column="28">os_pfd<pos:position pos:line="55" pos:column="34"/></name><operator pos:line="55" pos:column="34">.<pos:position pos:line="55" pos:column="35"/></operator><name pos:line="55" pos:column="35">fd<pos:position pos:line="55" pos:column="37"/></name></name></expr></argument>, <argument><expr><name pos:line="55" pos:column="39">pollset<pos:position pos:line="55" pos:column="46"/></name></expr></argument>)<pos:position pos:line="55" pos:column="47"/></argument_list></call></expr>;<pos:position pos:line="55" pos:column="48"/></expr_stmt>

            <expr_stmt><expr><name><name pos:line="57" pos:column="13">pollset<pos:position pos:line="57" pos:column="20"/></name><operator pos:line="57" pos:column="20">-&gt;<pos:position pos:line="57" pos:column="25"/></operator><name pos:line="57" pos:column="22">nelts<pos:position pos:line="57" pos:column="27"/></name></name><operator pos:line="57" pos:column="27">++<pos:position pos:line="57" pos:column="29"/></operator></expr>;<pos:position pos:line="57" pos:column="30"/></expr_stmt>
            <expr_stmt><expr><call><name pos:line="58" pos:column="13">apr_hash_set<pos:position pos:line="58" pos:column="25"/></name><argument_list pos:line="58" pos:column="25">(<argument><expr><name><name pos:line="58" pos:column="26">priv<pos:position pos:line="58" pos:column="30"/></name><operator pos:line="58" pos:column="30">-&gt;<pos:position pos:line="58" pos:column="35"/></operator><name pos:line="58" pos:column="32">elems<pos:position pos:line="58" pos:column="37"/></name></name></expr></argument>, <argument><expr><operator pos:line="58" pos:column="39">&amp;<pos:position pos:line="58" pos:column="44"/></operator><operator pos:line="58" pos:column="40">(<pos:position pos:line="58" pos:column="41"/></operator><name><name pos:line="58" pos:column="41">elem<pos:position pos:line="58" pos:column="45"/></name><operator pos:line="58" pos:column="45">-&gt;<pos:position pos:line="58" pos:column="50"/></operator><name pos:line="58" pos:column="47">os_pfd<pos:position pos:line="58" pos:column="53"/></name><operator pos:line="58" pos:column="53">.<pos:position pos:line="58" pos:column="54"/></operator><name pos:line="58" pos:column="54">fd<pos:position pos:line="58" pos:column="56"/></name></name><operator pos:line="58" pos:column="56">)<pos:position pos:line="58" pos:column="57"/></operator></expr></argument>, <argument><expr><sizeof pos:line="58" pos:column="59">sizeof<argument_list pos:line="58" pos:column="65">(<argument><expr><name pos:line="58" pos:column="66">int<pos:position pos:line="58" pos:column="69"/></name></expr></argument>)<pos:position pos:line="58" pos:column="70"/></argument_list></sizeof></expr></argument>, <argument><expr><name pos:line="58" pos:column="72">elem<pos:position pos:line="58" pos:column="76"/></name></expr></argument>)<pos:position pos:line="58" pos:column="77"/></argument_list></call></expr>;<pos:position pos:line="58" pos:column="78"/></expr_stmt>
        }<pos:position pos:line="59" pos:column="10"/></block></else></if>
    }<pos:position pos:line="60" pos:column="6"/></block></then>
    <else pos:line="61" pos:column="5">else <block pos:line="61" pos:column="10">{
        <comment type="block" pos:line="62" pos:column="9">/* APR_POLLSET_THREADSAFE isn't set.  use POSIX poll in case
         * pipes or files are used with this pollset
         */</comment>

        <expr_stmt><expr><name pos:line="66" pos:column="9">rv<pos:position pos:line="66" pos:column="11"/></name> <operator pos:line="66" pos:column="12">=<pos:position pos:line="66" pos:column="13"/></operator> <call><name pos:line="66" pos:column="14">posix_add<pos:position pos:line="66" pos:column="23"/></name><argument_list pos:line="66" pos:column="23">(<argument><expr><name pos:line="66" pos:column="24">pollset<pos:position pos:line="66" pos:column="31"/></name></expr></argument>, <argument><expr><name pos:line="66" pos:column="33">descriptor<pos:position pos:line="66" pos:column="43"/></name></expr></argument>)<pos:position pos:line="66" pos:column="44"/></argument_list></call></expr>;<pos:position pos:line="66" pos:column="45"/></expr_stmt>
    }<pos:position pos:line="67" pos:column="6"/></block></else></if>

    <expr_stmt><expr><call><name pos:line="69" pos:column="5">DBG1<pos:position pos:line="69" pos:column="9"/></name><argument_list pos:line="69" pos:column="9">(<argument><expr><literal type="number" pos:line="69" pos:column="10">2<pos:position pos:line="69" pos:column="11"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="69" pos:column="13">"exiting, rv = %d\n"<pos:position pos:line="69" pos:column="33"/></literal></expr></argument>, <argument><expr><name pos:line="69" pos:column="35">rv<pos:position pos:line="69" pos:column="37"/></name></expr></argument>)<pos:position pos:line="69" pos:column="38"/></argument_list></call></expr>;<pos:position pos:line="69" pos:column="39"/></expr_stmt>

    <expr_stmt><expr><call><name pos:line="71" pos:column="5">pollset_unlock_rings<pos:position pos:line="71" pos:column="25"/></name><argument_list pos:line="71" pos:column="25">()<pos:position pos:line="71" pos:column="27"/></argument_list></call></expr>;<pos:position pos:line="71" pos:column="28"/></expr_stmt>
    <return pos:line="72" pos:column="5">return <expr><name pos:line="72" pos:column="12">rv<pos:position pos:line="72" pos:column="14"/></name></expr>;<pos:position pos:line="72" pos:column="15"/></return>
}<pos:position pos:line="73" pos:column="2"/></block></function></unit>

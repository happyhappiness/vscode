<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/httpd/gumtree/httpd_repos_function_344_httpd-2.4.7.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">int<pos:position pos:line="1" pos:column="11"/></name></type> <name pos:line="1" pos:column="12">dav_handle_err<pos:position pos:line="1" pos:column="26"/></name><parameter_list pos:line="1" pos:column="26">(<parameter><decl><type><name pos:line="1" pos:column="27">request_rec<pos:position pos:line="1" pos:column="38"/></name> <modifier pos:line="1" pos:column="39">*<pos:position pos:line="1" pos:column="40"/></modifier></type><name pos:line="1" pos:column="40">r<pos:position pos:line="1" pos:column="41"/></name></decl></parameter>, <parameter><decl><type><name pos:line="1" pos:column="43">dav_error<pos:position pos:line="1" pos:column="52"/></name> <modifier pos:line="1" pos:column="53">*<pos:position pos:line="1" pos:column="54"/></modifier></type><name pos:line="1" pos:column="54">err<pos:position pos:line="1" pos:column="57"/></name></decl></parameter>,
                          <parameter><decl><type><name pos:line="2" pos:column="27">dav_response<pos:position pos:line="2" pos:column="39"/></name> <modifier pos:line="2" pos:column="40">*<pos:position pos:line="2" pos:column="41"/></modifier></type><name pos:line="2" pos:column="41">response<pos:position pos:line="2" pos:column="49"/></name></decl></parameter>)<pos:position pos:line="2" pos:column="50"/></parameter_list>
<block pos:line="3" pos:column="1">{
    <comment type="block" pos:line="4" pos:column="5">/* log the errors */</comment>
    <expr_stmt><expr><call><name pos:line="5" pos:column="5">dav_log_err<pos:position pos:line="5" pos:column="16"/></name><argument_list pos:line="5" pos:column="16">(<argument><expr><name pos:line="5" pos:column="17">r<pos:position pos:line="5" pos:column="18"/></name></expr></argument>, <argument><expr><name pos:line="5" pos:column="20">err<pos:position pos:line="5" pos:column="23"/></name></expr></argument>, <argument><expr><name pos:line="5" pos:column="25">APLOG_ERR<pos:position pos:line="5" pos:column="34"/></name></expr></argument>)<pos:position pos:line="5" pos:column="35"/></argument_list></call></expr>;<pos:position pos:line="5" pos:column="36"/></expr_stmt>

    <if pos:line="7" pos:column="5">if <condition pos:line="7" pos:column="8">(<expr><name pos:line="7" pos:column="9">response<pos:position pos:line="7" pos:column="17"/></name> <operator pos:line="7" pos:column="18">==<pos:position pos:line="7" pos:column="20"/></operator> <name pos:line="7" pos:column="21">NULL<pos:position pos:line="7" pos:column="25"/></name></expr>)<pos:position pos:line="7" pos:column="26"/></condition><then pos:line="7" pos:column="26"> <block pos:line="7" pos:column="27">{
        <decl_stmt><decl><type><name pos:line="8" pos:column="9">dav_error<pos:position pos:line="8" pos:column="18"/></name> <modifier pos:line="8" pos:column="19">*<pos:position pos:line="8" pos:column="20"/></modifier></type><name pos:line="8" pos:column="20">stackerr<pos:position pos:line="8" pos:column="28"/></name> <init pos:line="8" pos:column="29">= <expr><name pos:line="8" pos:column="31">err<pos:position pos:line="8" pos:column="34"/></name></expr></init></decl>;<pos:position pos:line="8" pos:column="35"/></decl_stmt>

        <comment type="block" pos:line="10" pos:column="9">/* our error messages are safe; tell Apache this */</comment>
        <expr_stmt><expr><call><name pos:line="11" pos:column="9">apr_table_setn<pos:position pos:line="11" pos:column="23"/></name><argument_list pos:line="11" pos:column="23">(<argument><expr><name><name pos:line="11" pos:column="24">r<pos:position pos:line="11" pos:column="25"/></name><operator pos:line="11" pos:column="25">-&gt;<pos:position pos:line="11" pos:column="30"/></operator><name pos:line="11" pos:column="27">notes<pos:position pos:line="11" pos:column="32"/></name></name></expr></argument>, <argument><expr><literal type="string" pos:line="11" pos:column="34">"verbose-error-to"<pos:position pos:line="11" pos:column="52"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="11" pos:column="54">"*"<pos:position pos:line="11" pos:column="57"/></literal></expr></argument>)<pos:position pos:line="11" pos:column="58"/></argument_list></call></expr>;<pos:position pos:line="11" pos:column="59"/></expr_stmt>

        <comment type="block" pos:line="13" pos:column="9">/* Didn't get a multistatus response passed in, but we still
           might be able to generate a standard &lt;D:error&gt; response.
           Search the error stack for an errortag. */</comment>
        <while pos:line="16" pos:column="9">while <condition pos:line="16" pos:column="15">(<expr><name pos:line="16" pos:column="16">stackerr<pos:position pos:line="16" pos:column="24"/></name> <operator pos:line="16" pos:column="25">!=<pos:position pos:line="16" pos:column="27"/></operator> <name pos:line="16" pos:column="28">NULL<pos:position pos:line="16" pos:column="32"/></name> <operator pos:line="16" pos:column="33">&amp;&amp;<pos:position pos:line="16" pos:column="43"/></operator> <name><name pos:line="16" pos:column="36">stackerr<pos:position pos:line="16" pos:column="44"/></name><operator pos:line="16" pos:column="44">-&gt;<pos:position pos:line="16" pos:column="49"/></operator><name pos:line="16" pos:column="46">tagname<pos:position pos:line="16" pos:column="53"/></name></name> <operator pos:line="16" pos:column="54">==<pos:position pos:line="16" pos:column="56"/></operator> <name pos:line="16" pos:column="57">NULL<pos:position pos:line="16" pos:column="61"/></name></expr>)<pos:position pos:line="16" pos:column="62"/></condition>
            <block type="pseudo"><expr_stmt><expr><name pos:line="17" pos:column="13">stackerr<pos:position pos:line="17" pos:column="21"/></name> <operator pos:line="17" pos:column="22">=<pos:position pos:line="17" pos:column="23"/></operator> <name><name pos:line="17" pos:column="24">stackerr<pos:position pos:line="17" pos:column="32"/></name><operator pos:line="17" pos:column="32">-&gt;<pos:position pos:line="17" pos:column="37"/></operator><name pos:line="17" pos:column="34">prev<pos:position pos:line="17" pos:column="38"/></name></name></expr>;<pos:position pos:line="17" pos:column="39"/></expr_stmt></block></while>

        <if pos:line="19" pos:column="9">if <condition pos:line="19" pos:column="12">(<expr><name pos:line="19" pos:column="13">stackerr<pos:position pos:line="19" pos:column="21"/></name> <operator pos:line="19" pos:column="22">!=<pos:position pos:line="19" pos:column="24"/></operator> <name pos:line="19" pos:column="25">NULL<pos:position pos:line="19" pos:column="29"/></name> <operator pos:line="19" pos:column="30">&amp;&amp;<pos:position pos:line="19" pos:column="40"/></operator> <name><name pos:line="19" pos:column="33">stackerr<pos:position pos:line="19" pos:column="41"/></name><operator pos:line="19" pos:column="41">-&gt;<pos:position pos:line="19" pos:column="46"/></operator><name pos:line="19" pos:column="43">tagname<pos:position pos:line="19" pos:column="50"/></name></name> <operator pos:line="19" pos:column="51">!=<pos:position pos:line="19" pos:column="53"/></operator> <name pos:line="19" pos:column="54">NULL<pos:position pos:line="19" pos:column="58"/></name></expr>)<pos:position pos:line="19" pos:column="59"/></condition><then pos:line="19" pos:column="59">
            <block type="pseudo"><return pos:line="20" pos:column="13">return <expr><call><name pos:line="20" pos:column="20">dav_error_response_tag<pos:position pos:line="20" pos:column="42"/></name><argument_list pos:line="20" pos:column="42">(<argument><expr><name pos:line="20" pos:column="43">r<pos:position pos:line="20" pos:column="44"/></name></expr></argument>, <argument><expr><name pos:line="20" pos:column="46">stackerr<pos:position pos:line="20" pos:column="54"/></name></expr></argument>)<pos:position pos:line="20" pos:column="55"/></argument_list></call></expr>;<pos:position pos:line="20" pos:column="56"/></return></block></then></if>

        <return pos:line="22" pos:column="9">return <expr><name><name pos:line="22" pos:column="16">err<pos:position pos:line="22" pos:column="19"/></name><operator pos:line="22" pos:column="19">-&gt;<pos:position pos:line="22" pos:column="24"/></operator><name pos:line="22" pos:column="21">status<pos:position pos:line="22" pos:column="27"/></name></name></expr>;<pos:position pos:line="22" pos:column="28"/></return>
    }<pos:position pos:line="23" pos:column="6"/></block></then></if>

    <comment type="block" pos:line="25" pos:column="5">/* send the multistatus and tell Apache the request/response is DONE. */</comment>
    <expr_stmt><expr><call><name pos:line="26" pos:column="5">dav_send_multistatus<pos:position pos:line="26" pos:column="25"/></name><argument_list pos:line="26" pos:column="25">(<argument><expr><name pos:line="26" pos:column="26">r<pos:position pos:line="26" pos:column="27"/></name></expr></argument>, <argument><expr><name><name pos:line="26" pos:column="29">err<pos:position pos:line="26" pos:column="32"/></name><operator pos:line="26" pos:column="32">-&gt;<pos:position pos:line="26" pos:column="37"/></operator><name pos:line="26" pos:column="34">status<pos:position pos:line="26" pos:column="40"/></name></name></expr></argument>, <argument><expr><name pos:line="26" pos:column="42">response<pos:position pos:line="26" pos:column="50"/></name></expr></argument>, <argument><expr><name pos:line="26" pos:column="52">NULL<pos:position pos:line="26" pos:column="56"/></name></expr></argument>)<pos:position pos:line="26" pos:column="57"/></argument_list></call></expr>;<pos:position pos:line="26" pos:column="58"/></expr_stmt>
    <return pos:line="27" pos:column="5">return <expr><name pos:line="27" pos:column="12">DONE<pos:position pos:line="27" pos:column="16"/></name></expr>;<pos:position pos:line="27" pos:column="17"/></return>
}<pos:position pos:line="28" pos:column="2"/></block></function></unit>

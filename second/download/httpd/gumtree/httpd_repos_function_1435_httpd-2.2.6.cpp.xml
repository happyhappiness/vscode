<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/httpd/gumtree/httpd_repos_function_1435_httpd-2.2.6.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">int<pos:position pos:line="1" pos:column="11"/></name></type> <name pos:line="1" pos:column="12">proxy_trans<pos:position pos:line="1" pos:column="23"/></name><parameter_list pos:line="1" pos:column="23">(<parameter><decl><type><name pos:line="1" pos:column="24">request_rec<pos:position pos:line="1" pos:column="35"/></name> <modifier pos:line="1" pos:column="36">*<pos:position pos:line="1" pos:column="37"/></modifier></type><name pos:line="1" pos:column="37">r<pos:position pos:line="1" pos:column="38"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="39"/></parameter_list>
<block pos:line="2" pos:column="1">{
    <decl_stmt><decl><type><name pos:line="3" pos:column="5">void<pos:position pos:line="3" pos:column="9"/></name> <modifier pos:line="3" pos:column="10">*<pos:position pos:line="3" pos:column="11"/></modifier></type><name pos:line="3" pos:column="11">sconf<pos:position pos:line="3" pos:column="16"/></name> <init pos:line="3" pos:column="17">= <expr><name><name pos:line="3" pos:column="19">r<pos:position pos:line="3" pos:column="20"/></name><operator pos:line="3" pos:column="20">-&gt;<pos:position pos:line="3" pos:column="25"/></operator><name pos:line="3" pos:column="22">server<pos:position pos:line="3" pos:column="28"/></name><operator pos:line="3" pos:column="28">-&gt;<pos:position pos:line="3" pos:column="33"/></operator><name pos:line="3" pos:column="30">module_config<pos:position pos:line="3" pos:column="43"/></name></name></expr></init></decl>;<pos:position pos:line="3" pos:column="44"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="4" pos:column="5">proxy_server_conf<pos:position pos:line="4" pos:column="22"/></name> <modifier pos:line="4" pos:column="23">*<pos:position pos:line="4" pos:column="24"/></modifier></type><name pos:line="4" pos:column="24">conf<pos:position pos:line="4" pos:column="28"/></name> <init pos:line="4" pos:column="29">=
    <expr><operator pos:line="5" pos:column="5">(<pos:position pos:line="5" pos:column="6"/></operator><name pos:line="5" pos:column="6">proxy_server_conf<pos:position pos:line="5" pos:column="23"/></name> <operator pos:line="5" pos:column="24">*<pos:position pos:line="5" pos:column="25"/></operator><operator pos:line="5" pos:column="25">)<pos:position pos:line="5" pos:column="26"/></operator> <call><name pos:line="5" pos:column="27">ap_get_module_config<pos:position pos:line="5" pos:column="47"/></name><argument_list pos:line="5" pos:column="47">(<argument><expr><name pos:line="5" pos:column="48">sconf<pos:position pos:line="5" pos:column="53"/></name></expr></argument>, <argument><expr><operator pos:line="5" pos:column="55">&amp;<pos:position pos:line="5" pos:column="60"/></operator><name pos:line="5" pos:column="56">proxy_module<pos:position pos:line="5" pos:column="68"/></name></expr></argument>)<pos:position pos:line="5" pos:column="69"/></argument_list></call></expr></init></decl>;<pos:position pos:line="5" pos:column="70"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="6" pos:column="5">int<pos:position pos:line="6" pos:column="8"/></name></type> <name pos:line="6" pos:column="9">i<pos:position pos:line="6" pos:column="10"/></name></decl>, <decl><type ref="prev"/><name pos:line="6" pos:column="12">len<pos:position pos:line="6" pos:column="15"/></name></decl>;<pos:position pos:line="6" pos:column="16"/></decl_stmt>
    <decl_stmt><decl><type><name><name pos:line="7" pos:column="5">struct<pos:position pos:line="7" pos:column="11"/></name> <name pos:line="7" pos:column="12">proxy_alias<pos:position pos:line="7" pos:column="23"/></name></name> <modifier pos:line="7" pos:column="24">*<pos:position pos:line="7" pos:column="25"/></modifier></type><name pos:line="7" pos:column="25">ent<pos:position pos:line="7" pos:column="28"/></name> <init pos:line="7" pos:column="29">= <expr><operator pos:line="7" pos:column="31">(<pos:position pos:line="7" pos:column="32"/></operator>struct <name pos:line="7" pos:column="39">proxy_alias<pos:position pos:line="7" pos:column="50"/></name> <operator pos:line="7" pos:column="51">*<pos:position pos:line="7" pos:column="52"/></operator><operator pos:line="7" pos:column="52">)<pos:position pos:line="7" pos:column="53"/></operator> <name><name pos:line="7" pos:column="54">conf<pos:position pos:line="7" pos:column="58"/></name><operator pos:line="7" pos:column="58">-&gt;<pos:position pos:line="7" pos:column="63"/></operator><name pos:line="7" pos:column="60">aliases<pos:position pos:line="7" pos:column="67"/></name><operator pos:line="7" pos:column="67">-&gt;<pos:position pos:line="7" pos:column="72"/></operator><name pos:line="7" pos:column="69">elts<pos:position pos:line="7" pos:column="73"/></name></name></expr></init></decl>;<pos:position pos:line="7" pos:column="74"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="8" pos:column="5">ap_regmatch_t<pos:position pos:line="8" pos:column="18"/></name></type> <name><name pos:line="8" pos:column="19">regm<pos:position pos:line="8" pos:column="23"/></name><index pos:line="8" pos:column="23">[<expr><name pos:line="8" pos:column="24">AP_MAX_REG_MATCH<pos:position pos:line="8" pos:column="40"/></name></expr>]<pos:position pos:line="8" pos:column="41"/></index></name></decl>;<pos:position pos:line="8" pos:column="42"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="9" pos:column="5">char<pos:position pos:line="9" pos:column="9"/></name> <modifier pos:line="9" pos:column="10">*<pos:position pos:line="9" pos:column="11"/></modifier></type><name pos:line="9" pos:column="11">found<pos:position pos:line="9" pos:column="16"/></name> <init pos:line="9" pos:column="17">= <expr><name pos:line="9" pos:column="19">NULL<pos:position pos:line="9" pos:column="23"/></name></expr></init></decl>;<pos:position pos:line="9" pos:column="24"/></decl_stmt>

    <if pos:line="11" pos:column="5">if <condition pos:line="11" pos:column="8">(<expr><name><name pos:line="11" pos:column="9">r<pos:position pos:line="11" pos:column="10"/></name><operator pos:line="11" pos:column="10">-&gt;<pos:position pos:line="11" pos:column="15"/></operator><name pos:line="11" pos:column="12">proxyreq<pos:position pos:line="11" pos:column="20"/></name></name></expr>)<pos:position pos:line="11" pos:column="21"/></condition><then pos:line="11" pos:column="21"> <block pos:line="11" pos:column="22">{
        <comment type="block" pos:line="12" pos:column="9">/* someone has already set up the proxy, it was possibly ourselves
         * in proxy_detect
         */</comment>
        <return pos:line="15" pos:column="9">return <expr><name pos:line="15" pos:column="16">OK<pos:position pos:line="15" pos:column="18"/></name></expr>;<pos:position pos:line="15" pos:column="19"/></return>
    }<pos:position pos:line="16" pos:column="6"/></block></then></if>

    <comment type="block" pos:line="18" pos:column="5">/* XXX: since r-&gt;uri has been manipulated already we're not really
     * compliant with RFC1945 at this point.  But this probably isn't
     * an issue because this is a hybrid proxy/origin server.
     */</comment>

    <for pos:line="23" pos:column="5">for <control pos:line="23" pos:column="9">(<init><expr><name pos:line="23" pos:column="10">i<pos:position pos:line="23" pos:column="11"/></name> <operator pos:line="23" pos:column="12">=<pos:position pos:line="23" pos:column="13"/></operator> <literal type="number" pos:line="23" pos:column="14">0<pos:position pos:line="23" pos:column="15"/></literal></expr>;<pos:position pos:line="23" pos:column="16"/></init> <condition><expr><name pos:line="23" pos:column="17">i<pos:position pos:line="23" pos:column="18"/></name> <operator pos:line="23" pos:column="19">&lt;<pos:position pos:line="23" pos:column="23"/></operator> <name><name pos:line="23" pos:column="21">conf<pos:position pos:line="23" pos:column="25"/></name><operator pos:line="23" pos:column="25">-&gt;<pos:position pos:line="23" pos:column="30"/></operator><name pos:line="23" pos:column="27">aliases<pos:position pos:line="23" pos:column="34"/></name><operator pos:line="23" pos:column="34">-&gt;<pos:position pos:line="23" pos:column="39"/></operator><name pos:line="23" pos:column="36">nelts<pos:position pos:line="23" pos:column="41"/></name></name></expr>;<pos:position pos:line="23" pos:column="42"/></condition> <incr><expr><name pos:line="23" pos:column="43">i<pos:position pos:line="23" pos:column="44"/></name><operator pos:line="23" pos:column="44">++<pos:position pos:line="23" pos:column="46"/></operator></expr></incr>)<pos:position pos:line="23" pos:column="47"/></control> <block pos:line="23" pos:column="48">{
        <if pos:line="24" pos:column="9">if <condition pos:line="24" pos:column="12">(<expr><name><name pos:line="24" pos:column="13">ent<pos:position pos:line="24" pos:column="16"/></name><index pos:line="24" pos:column="16">[<expr><name pos:line="24" pos:column="17">i<pos:position pos:line="24" pos:column="18"/></name></expr>]<pos:position pos:line="24" pos:column="19"/></index></name><operator pos:line="24" pos:column="19">.<pos:position pos:line="24" pos:column="20"/></operator><name pos:line="24" pos:column="20">regex<pos:position pos:line="24" pos:column="25"/></name></expr>)<pos:position pos:line="24" pos:column="26"/></condition><then pos:line="24" pos:column="26"> <block pos:line="24" pos:column="27">{
            <if pos:line="25" pos:column="13">if <condition pos:line="25" pos:column="16">(<expr><operator pos:line="25" pos:column="17">!<pos:position pos:line="25" pos:column="18"/></operator><call><name pos:line="25" pos:column="18">ap_regexec<pos:position pos:line="25" pos:column="28"/></name><argument_list pos:line="25" pos:column="28">(<argument><expr><name><name pos:line="25" pos:column="29">ent<pos:position pos:line="25" pos:column="32"/></name><index pos:line="25" pos:column="32">[<expr><name pos:line="25" pos:column="33">i<pos:position pos:line="25" pos:column="34"/></name></expr>]<pos:position pos:line="25" pos:column="35"/></index></name><operator pos:line="25" pos:column="35">.<pos:position pos:line="25" pos:column="36"/></operator><name pos:line="25" pos:column="36">regex<pos:position pos:line="25" pos:column="41"/></name></expr></argument>, <argument><expr><name><name pos:line="25" pos:column="43">r<pos:position pos:line="25" pos:column="44"/></name><operator pos:line="25" pos:column="44">-&gt;<pos:position pos:line="25" pos:column="49"/></operator><name pos:line="25" pos:column="46">uri<pos:position pos:line="25" pos:column="49"/></name></name></expr></argument>, <argument><expr><name pos:line="25" pos:column="51">AP_MAX_REG_MATCH<pos:position pos:line="25" pos:column="67"/></name></expr></argument>, <argument><expr><name pos:line="25" pos:column="69">regm<pos:position pos:line="25" pos:column="73"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="25" pos:column="75">0<pos:position pos:line="25" pos:column="76"/></literal></expr></argument>)<pos:position pos:line="25" pos:column="77"/></argument_list></call></expr>)<pos:position pos:line="25" pos:column="78"/></condition><then pos:line="25" pos:column="78"> <block pos:line="25" pos:column="79">{
                <if pos:line="26" pos:column="17">if <condition pos:line="26" pos:column="20">(<expr><operator pos:line="26" pos:column="21">(<pos:position pos:line="26" pos:column="22"/></operator><name><name pos:line="26" pos:column="22">ent<pos:position pos:line="26" pos:column="25"/></name><index pos:line="26" pos:column="25">[<expr><name pos:line="26" pos:column="26">i<pos:position pos:line="26" pos:column="27"/></name></expr>]<pos:position pos:line="26" pos:column="28"/></index></name><operator pos:line="26" pos:column="28">.<pos:position pos:line="26" pos:column="29"/></operator><name><name pos:line="26" pos:column="29">real<pos:position pos:line="26" pos:column="33"/></name><index pos:line="26" pos:column="33">[<expr><literal type="number" pos:line="26" pos:column="34">0<pos:position pos:line="26" pos:column="35"/></literal></expr>]<pos:position pos:line="26" pos:column="36"/></index></name> <operator pos:line="26" pos:column="37">==<pos:position pos:line="26" pos:column="39"/></operator> <literal type="char" pos:line="26" pos:column="40">'!'<pos:position pos:line="26" pos:column="43"/></literal><operator pos:line="26" pos:column="43">)<pos:position pos:line="26" pos:column="44"/></operator> <operator pos:line="26" pos:column="45">&amp;&amp;<pos:position pos:line="26" pos:column="55"/></operator> <operator pos:line="26" pos:column="48">(<pos:position pos:line="26" pos:column="49"/></operator><name><name pos:line="26" pos:column="49">ent<pos:position pos:line="26" pos:column="52"/></name><index pos:line="26" pos:column="52">[<expr><name pos:line="26" pos:column="53">i<pos:position pos:line="26" pos:column="54"/></name></expr>]<pos:position pos:line="26" pos:column="55"/></index></name><operator pos:line="26" pos:column="55">.<pos:position pos:line="26" pos:column="56"/></operator><name><name pos:line="26" pos:column="56">real<pos:position pos:line="26" pos:column="60"/></name><index pos:line="26" pos:column="60">[<expr><literal type="number" pos:line="26" pos:column="61">1<pos:position pos:line="26" pos:column="62"/></literal></expr>]<pos:position pos:line="26" pos:column="63"/></index></name> <operator pos:line="26" pos:column="64">==<pos:position pos:line="26" pos:column="66"/></operator> <literal type="char" pos:line="26" pos:column="67">'\0'<pos:position pos:line="26" pos:column="71"/></literal><operator pos:line="26" pos:column="71">)<pos:position pos:line="26" pos:column="72"/></operator></expr>)<pos:position pos:line="26" pos:column="73"/></condition><then pos:line="26" pos:column="73"> <block pos:line="26" pos:column="74">{
                    <return pos:line="27" pos:column="21">return <expr><name pos:line="27" pos:column="28">DECLINED<pos:position pos:line="27" pos:column="36"/></name></expr>;<pos:position pos:line="27" pos:column="37"/></return>
                }<pos:position pos:line="28" pos:column="18"/></block></then></if>
                <expr_stmt><expr><name pos:line="29" pos:column="17">found<pos:position pos:line="29" pos:column="22"/></name> <operator pos:line="29" pos:column="23">=<pos:position pos:line="29" pos:column="24"/></operator> <call><name pos:line="29" pos:column="25">ap_pregsub<pos:position pos:line="29" pos:column="35"/></name><argument_list pos:line="29" pos:column="35">(<argument><expr><name><name pos:line="29" pos:column="36">r<pos:position pos:line="29" pos:column="37"/></name><operator pos:line="29" pos:column="37">-&gt;<pos:position pos:line="29" pos:column="42"/></operator><name pos:line="29" pos:column="39">pool<pos:position pos:line="29" pos:column="43"/></name></name></expr></argument>, <argument><expr><name><name pos:line="29" pos:column="45">ent<pos:position pos:line="29" pos:column="48"/></name><index pos:line="29" pos:column="48">[<expr><name pos:line="29" pos:column="49">i<pos:position pos:line="29" pos:column="50"/></name></expr>]<pos:position pos:line="29" pos:column="51"/></index></name><operator pos:line="29" pos:column="51">.<pos:position pos:line="29" pos:column="52"/></operator><name pos:line="29" pos:column="52">real<pos:position pos:line="29" pos:column="56"/></name></expr></argument>, <argument><expr><name><name pos:line="29" pos:column="58">r<pos:position pos:line="29" pos:column="59"/></name><operator pos:line="29" pos:column="59">-&gt;<pos:position pos:line="29" pos:column="64"/></operator><name pos:line="29" pos:column="61">uri<pos:position pos:line="29" pos:column="64"/></name></name></expr></argument>, <argument><expr><name pos:line="29" pos:column="66">AP_MAX_REG_MATCH<pos:position pos:line="29" pos:column="82"/></name></expr></argument>,
                                   <argument><expr><name pos:line="30" pos:column="36">regm<pos:position pos:line="30" pos:column="40"/></name></expr></argument>)<pos:position pos:line="30" pos:column="41"/></argument_list></call></expr>;<pos:position pos:line="30" pos:column="42"/></expr_stmt>
                <comment type="block" pos:line="31" pos:column="17">/* Note: The strcmp() below catches cases where there
                 * was no regex substitution. This is so cases like:
                 *
                 *    ProxyPassMatch \.gif balancer://foo
                 *
                 * will work "as expected". The upshot is that the 2
                 * directives below act the exact same way (ie: $1 is implied):
                 *
                 *    ProxyPassMatch ^(/.*\.gif)$ balancer://foo
                 *    ProxyPassMatch ^(/.*\.gif)$ balancer://foo$1
                 *
                 * which may be confusing.
                 */</comment>
                <if pos:line="44" pos:column="17">if <condition pos:line="44" pos:column="20">(<expr><name pos:line="44" pos:column="21">found<pos:position pos:line="44" pos:column="26"/></name> <operator pos:line="44" pos:column="27">&amp;&amp;<pos:position pos:line="44" pos:column="37"/></operator> <call><name pos:line="44" pos:column="30">strcmp<pos:position pos:line="44" pos:column="36"/></name><argument_list pos:line="44" pos:column="36">(<argument><expr><name pos:line="44" pos:column="37">found<pos:position pos:line="44" pos:column="42"/></name></expr></argument>, <argument><expr><name><name pos:line="44" pos:column="44">ent<pos:position pos:line="44" pos:column="47"/></name><index pos:line="44" pos:column="47">[<expr><name pos:line="44" pos:column="48">i<pos:position pos:line="44" pos:column="49"/></name></expr>]<pos:position pos:line="44" pos:column="50"/></index></name><operator pos:line="44" pos:column="50">.<pos:position pos:line="44" pos:column="51"/></operator><name pos:line="44" pos:column="51">real<pos:position pos:line="44" pos:column="55"/></name></expr></argument>)<pos:position pos:line="44" pos:column="56"/></argument_list></call></expr>)<pos:position pos:line="44" pos:column="57"/></condition><then pos:line="44" pos:column="57"> <block pos:line="44" pos:column="58">{
                    <expr_stmt><expr><name pos:line="45" pos:column="21">found<pos:position pos:line="45" pos:column="26"/></name> <operator pos:line="45" pos:column="27">=<pos:position pos:line="45" pos:column="28"/></operator> <call><name pos:line="45" pos:column="29">apr_pstrcat<pos:position pos:line="45" pos:column="40"/></name><argument_list pos:line="45" pos:column="40">(<argument><expr><name><name pos:line="45" pos:column="41">r<pos:position pos:line="45" pos:column="42"/></name><operator pos:line="45" pos:column="42">-&gt;<pos:position pos:line="45" pos:column="47"/></operator><name pos:line="45" pos:column="44">pool<pos:position pos:line="45" pos:column="48"/></name></name></expr></argument>, <argument><expr><literal type="string" pos:line="45" pos:column="50">"proxy:"<pos:position pos:line="45" pos:column="58"/></literal></expr></argument>, <argument><expr><name pos:line="45" pos:column="60">found<pos:position pos:line="45" pos:column="65"/></name></expr></argument>, <argument><expr><name pos:line="45" pos:column="67">NULL<pos:position pos:line="45" pos:column="71"/></name></expr></argument>)<pos:position pos:line="45" pos:column="72"/></argument_list></call></expr>;<pos:position pos:line="45" pos:column="73"/></expr_stmt>
                }<pos:position pos:line="46" pos:column="18"/></block></then>
                <else pos:line="47" pos:column="17">else <block pos:line="47" pos:column="22">{
                    <expr_stmt><expr><name pos:line="48" pos:column="21">found<pos:position pos:line="48" pos:column="26"/></name> <operator pos:line="48" pos:column="27">=<pos:position pos:line="48" pos:column="28"/></operator> <call><name pos:line="48" pos:column="29">apr_pstrcat<pos:position pos:line="48" pos:column="40"/></name><argument_list pos:line="48" pos:column="40">(<argument><expr><name><name pos:line="48" pos:column="41">r<pos:position pos:line="48" pos:column="42"/></name><operator pos:line="48" pos:column="42">-&gt;<pos:position pos:line="48" pos:column="47"/></operator><name pos:line="48" pos:column="44">pool<pos:position pos:line="48" pos:column="48"/></name></name></expr></argument>, <argument><expr><literal type="string" pos:line="48" pos:column="50">"proxy:"<pos:position pos:line="48" pos:column="58"/></literal></expr></argument>, <argument><expr><name><name pos:line="48" pos:column="60">ent<pos:position pos:line="48" pos:column="63"/></name><index pos:line="48" pos:column="63">[<expr><name pos:line="48" pos:column="64">i<pos:position pos:line="48" pos:column="65"/></name></expr>]<pos:position pos:line="48" pos:column="66"/></index></name><operator pos:line="48" pos:column="66">.<pos:position pos:line="48" pos:column="67"/></operator><name pos:line="48" pos:column="67">real<pos:position pos:line="48" pos:column="71"/></name></expr></argument>, <argument><expr><name><name pos:line="48" pos:column="73">r<pos:position pos:line="48" pos:column="74"/></name><operator pos:line="48" pos:column="74">-&gt;<pos:position pos:line="48" pos:column="79"/></operator><name pos:line="48" pos:column="76">uri<pos:position pos:line="48" pos:column="79"/></name></name></expr></argument>,
                                        <argument><expr><name pos:line="49" pos:column="41">NULL<pos:position pos:line="49" pos:column="45"/></name></expr></argument>)<pos:position pos:line="49" pos:column="46"/></argument_list></call></expr>;<pos:position pos:line="49" pos:column="47"/></expr_stmt>
                }<pos:position pos:line="50" pos:column="18"/></block></else></if>
            }<pos:position pos:line="51" pos:column="14"/></block></then></if>
        }<pos:position pos:line="52" pos:column="10"/></block></then>
        <else pos:line="53" pos:column="9">else <block pos:line="53" pos:column="14">{
            <expr_stmt><expr><name pos:line="54" pos:column="13">len<pos:position pos:line="54" pos:column="16"/></name> <operator pos:line="54" pos:column="17">=<pos:position pos:line="54" pos:column="18"/></operator> <call><name pos:line="54" pos:column="19">alias_match<pos:position pos:line="54" pos:column="30"/></name><argument_list pos:line="54" pos:column="30">(<argument><expr><name><name pos:line="54" pos:column="31">r<pos:position pos:line="54" pos:column="32"/></name><operator pos:line="54" pos:column="32">-&gt;<pos:position pos:line="54" pos:column="37"/></operator><name pos:line="54" pos:column="34">uri<pos:position pos:line="54" pos:column="37"/></name></name></expr></argument>, <argument><expr><name><name pos:line="54" pos:column="39">ent<pos:position pos:line="54" pos:column="42"/></name><index pos:line="54" pos:column="42">[<expr><name pos:line="54" pos:column="43">i<pos:position pos:line="54" pos:column="44"/></name></expr>]<pos:position pos:line="54" pos:column="45"/></index></name><operator pos:line="54" pos:column="45">.<pos:position pos:line="54" pos:column="46"/></operator><name pos:line="54" pos:column="46">fake<pos:position pos:line="54" pos:column="50"/></name></expr></argument>)<pos:position pos:line="54" pos:column="51"/></argument_list></call></expr>;<pos:position pos:line="54" pos:column="52"/></expr_stmt>

            <if pos:line="56" pos:column="13">if <condition pos:line="56" pos:column="16">(<expr><name pos:line="56" pos:column="17">len<pos:position pos:line="56" pos:column="20"/></name> <operator pos:line="56" pos:column="21">&gt;<pos:position pos:line="56" pos:column="25"/></operator> <literal type="number" pos:line="56" pos:column="23">0<pos:position pos:line="56" pos:column="24"/></literal></expr>)<pos:position pos:line="56" pos:column="25"/></condition><then pos:line="56" pos:column="25"> <block pos:line="56" pos:column="26">{
                <if pos:line="57" pos:column="17">if <condition pos:line="57" pos:column="20">(<expr><operator pos:line="57" pos:column="21">(<pos:position pos:line="57" pos:column="22"/></operator><name><name pos:line="57" pos:column="22">ent<pos:position pos:line="57" pos:column="25"/></name><index pos:line="57" pos:column="25">[<expr><name pos:line="57" pos:column="26">i<pos:position pos:line="57" pos:column="27"/></name></expr>]<pos:position pos:line="57" pos:column="28"/></index></name><operator pos:line="57" pos:column="28">.<pos:position pos:line="57" pos:column="29"/></operator><name><name pos:line="57" pos:column="29">real<pos:position pos:line="57" pos:column="33"/></name><index pos:line="57" pos:column="33">[<expr><literal type="number" pos:line="57" pos:column="34">0<pos:position pos:line="57" pos:column="35"/></literal></expr>]<pos:position pos:line="57" pos:column="36"/></index></name> <operator pos:line="57" pos:column="37">==<pos:position pos:line="57" pos:column="39"/></operator> <literal type="char" pos:line="57" pos:column="40">'!'<pos:position pos:line="57" pos:column="43"/></literal><operator pos:line="57" pos:column="43">)<pos:position pos:line="57" pos:column="44"/></operator> <operator pos:line="57" pos:column="45">&amp;&amp;<pos:position pos:line="57" pos:column="55"/></operator> <operator pos:line="57" pos:column="48">(<pos:position pos:line="57" pos:column="49"/></operator><name><name pos:line="57" pos:column="49">ent<pos:position pos:line="57" pos:column="52"/></name><index pos:line="57" pos:column="52">[<expr><name pos:line="57" pos:column="53">i<pos:position pos:line="57" pos:column="54"/></name></expr>]<pos:position pos:line="57" pos:column="55"/></index></name><operator pos:line="57" pos:column="55">.<pos:position pos:line="57" pos:column="56"/></operator><name><name pos:line="57" pos:column="56">real<pos:position pos:line="57" pos:column="60"/></name><index pos:line="57" pos:column="60">[<expr><literal type="number" pos:line="57" pos:column="61">1<pos:position pos:line="57" pos:column="62"/></literal></expr>]<pos:position pos:line="57" pos:column="63"/></index></name> <operator pos:line="57" pos:column="64">==<pos:position pos:line="57" pos:column="66"/></operator> <literal type="char" pos:line="57" pos:column="67">'\0'<pos:position pos:line="57" pos:column="71"/></literal><operator pos:line="57" pos:column="71">)<pos:position pos:line="57" pos:column="72"/></operator></expr>)<pos:position pos:line="57" pos:column="73"/></condition><then pos:line="57" pos:column="73"> <block pos:line="57" pos:column="74">{
                    <return pos:line="58" pos:column="21">return <expr><name pos:line="58" pos:column="28">DECLINED<pos:position pos:line="58" pos:column="36"/></name></expr>;<pos:position pos:line="58" pos:column="37"/></return>
                }<pos:position pos:line="59" pos:column="18"/></block></then></if>

                <expr_stmt><expr><name pos:line="61" pos:column="17">found<pos:position pos:line="61" pos:column="22"/></name> <operator pos:line="61" pos:column="23">=<pos:position pos:line="61" pos:column="24"/></operator> <call><name pos:line="61" pos:column="25">apr_pstrcat<pos:position pos:line="61" pos:column="36"/></name><argument_list pos:line="61" pos:column="36">(<argument><expr><name><name pos:line="61" pos:column="37">r<pos:position pos:line="61" pos:column="38"/></name><operator pos:line="61" pos:column="38">-&gt;<pos:position pos:line="61" pos:column="43"/></operator><name pos:line="61" pos:column="40">pool<pos:position pos:line="61" pos:column="44"/></name></name></expr></argument>, <argument><expr><literal type="string" pos:line="61" pos:column="46">"proxy:"<pos:position pos:line="61" pos:column="54"/></literal></expr></argument>, <argument><expr><name><name pos:line="61" pos:column="56">ent<pos:position pos:line="61" pos:column="59"/></name><index pos:line="61" pos:column="59">[<expr><name pos:line="61" pos:column="60">i<pos:position pos:line="61" pos:column="61"/></name></expr>]<pos:position pos:line="61" pos:column="62"/></index></name><operator pos:line="61" pos:column="62">.<pos:position pos:line="61" pos:column="63"/></operator><name pos:line="61" pos:column="63">real<pos:position pos:line="61" pos:column="67"/></name></expr></argument>,
                                    <argument><expr><name><name pos:line="62" pos:column="37">r<pos:position pos:line="62" pos:column="38"/></name><operator pos:line="62" pos:column="38">-&gt;<pos:position pos:line="62" pos:column="43"/></operator><name pos:line="62" pos:column="40">uri<pos:position pos:line="62" pos:column="43"/></name></name> <operator pos:line="62" pos:column="44">+<pos:position pos:line="62" pos:column="45"/></operator> <name pos:line="62" pos:column="46">len<pos:position pos:line="62" pos:column="49"/></name></expr></argument>, <argument><expr><name pos:line="62" pos:column="51">NULL<pos:position pos:line="62" pos:column="55"/></name></expr></argument>)<pos:position pos:line="62" pos:column="56"/></argument_list></call></expr>;<pos:position pos:line="62" pos:column="57"/></expr_stmt>
            }<pos:position pos:line="63" pos:column="14"/></block></then></if>
        }<pos:position pos:line="64" pos:column="10"/></block></else></if>
        <if pos:line="65" pos:column="9">if <condition pos:line="65" pos:column="12">(<expr><name pos:line="65" pos:column="13">found<pos:position pos:line="65" pos:column="18"/></name></expr>)<pos:position pos:line="65" pos:column="19"/></condition><then pos:line="65" pos:column="19"> <block pos:line="65" pos:column="20">{
            <expr_stmt><expr><name><name pos:line="66" pos:column="13">r<pos:position pos:line="66" pos:column="14"/></name><operator pos:line="66" pos:column="14">-&gt;<pos:position pos:line="66" pos:column="19"/></operator><name pos:line="66" pos:column="16">filename<pos:position pos:line="66" pos:column="24"/></name></name> <operator pos:line="66" pos:column="25">=<pos:position pos:line="66" pos:column="26"/></operator> <name pos:line="66" pos:column="27">found<pos:position pos:line="66" pos:column="32"/></name></expr>;<pos:position pos:line="66" pos:column="33"/></expr_stmt>
            <expr_stmt><expr><name><name pos:line="67" pos:column="13">r<pos:position pos:line="67" pos:column="14"/></name><operator pos:line="67" pos:column="14">-&gt;<pos:position pos:line="67" pos:column="19"/></operator><name pos:line="67" pos:column="16">handler<pos:position pos:line="67" pos:column="23"/></name></name> <operator pos:line="67" pos:column="24">=<pos:position pos:line="67" pos:column="25"/></operator> <literal type="string" pos:line="67" pos:column="26">"proxy-server"<pos:position pos:line="67" pos:column="40"/></literal></expr>;<pos:position pos:line="67" pos:column="41"/></expr_stmt>
            <expr_stmt><expr><name><name pos:line="68" pos:column="13">r<pos:position pos:line="68" pos:column="14"/></name><operator pos:line="68" pos:column="14">-&gt;<pos:position pos:line="68" pos:column="19"/></operator><name pos:line="68" pos:column="16">proxyreq<pos:position pos:line="68" pos:column="24"/></name></name> <operator pos:line="68" pos:column="25">=<pos:position pos:line="68" pos:column="26"/></operator> <name pos:line="68" pos:column="27">PROXYREQ_REVERSE<pos:position pos:line="68" pos:column="43"/></name></expr>;<pos:position pos:line="68" pos:column="44"/></expr_stmt>
            <return pos:line="69" pos:column="13">return <expr><name pos:line="69" pos:column="20">OK<pos:position pos:line="69" pos:column="22"/></name></expr>;<pos:position pos:line="69" pos:column="23"/></return>
        }<pos:position pos:line="70" pos:column="10"/></block></then></if>
    }<pos:position pos:line="71" pos:column="6"/></block></for>
    <return pos:line="72" pos:column="5">return <expr><name pos:line="72" pos:column="12">DECLINED<pos:position pos:line="72" pos:column="20"/></name></expr>;<pos:position pos:line="72" pos:column="21"/></return>
}<pos:position pos:line="73" pos:column="2"/></block></function></unit>

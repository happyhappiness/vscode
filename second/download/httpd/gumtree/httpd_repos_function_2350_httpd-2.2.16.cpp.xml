<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/httpd/gumtree/httpd_repos_function_2350_httpd-2.2.16.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">SOCKET<pos:position pos:line="1" pos:column="14"/></name></type> <name pos:line="1" pos:column="15">remove_job<pos:position pos:line="1" pos:column="25"/></name><parameter_list pos:line="1" pos:column="25">(<parameter><decl><type><name pos:line="1" pos:column="26">void<pos:position pos:line="1" pos:column="30"/></name></type></decl></parameter>)<pos:position pos:line="1" pos:column="31"/></parameter_list>
<block pos:line="2" pos:column="1">{
    <decl_stmt><decl><type><name pos:line="3" pos:column="5">joblist<pos:position pos:line="3" pos:column="12"/></name> <modifier pos:line="3" pos:column="13">*<pos:position pos:line="3" pos:column="14"/></modifier></type><name pos:line="3" pos:column="14">job<pos:position pos:line="3" pos:column="17"/></name></decl>;<pos:position pos:line="3" pos:column="18"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="4" pos:column="5">SOCKET<pos:position pos:line="4" pos:column="11"/></name></type> <name pos:line="4" pos:column="12">sock<pos:position pos:line="4" pos:column="16"/></name></decl>;<pos:position pos:line="4" pos:column="17"/></decl_stmt>

    <expr_stmt><expr><call><name pos:line="6" pos:column="5">WaitForSingleObject<pos:position pos:line="6" pos:column="24"/></name><argument_list pos:line="6" pos:column="24">(<argument><expr><name><name pos:line="6" pos:column="25">allowed_globals<pos:position pos:line="6" pos:column="40"/></name><operator pos:line="6" pos:column="40">.<pos:position pos:line="6" pos:column="41"/></operator><name pos:line="6" pos:column="41">jobsemaphore<pos:position pos:line="6" pos:column="53"/></name></name></expr></argument>, <argument><expr><name pos:line="6" pos:column="55">INFINITE<pos:position pos:line="6" pos:column="63"/></name></expr></argument>)<pos:position pos:line="6" pos:column="64"/></argument_list></call></expr>;<pos:position pos:line="6" pos:column="65"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="7" pos:column="5">apr_thread_mutex_lock<pos:position pos:line="7" pos:column="26"/></name><argument_list pos:line="7" pos:column="26">(<argument><expr><name><name pos:line="7" pos:column="27">allowed_globals<pos:position pos:line="7" pos:column="42"/></name><operator pos:line="7" pos:column="42">.<pos:position pos:line="7" pos:column="43"/></operator><name pos:line="7" pos:column="43">jobmutex<pos:position pos:line="7" pos:column="51"/></name></name></expr></argument>)<pos:position pos:line="7" pos:column="52"/></argument_list></call></expr>;<pos:position pos:line="7" pos:column="53"/></expr_stmt>

    <if pos:line="9" pos:column="5">if <condition pos:line="9" pos:column="8">(<expr><name pos:line="9" pos:column="9">shutdown_in_progress<pos:position pos:line="9" pos:column="29"/></name> <operator pos:line="9" pos:column="30">&amp;&amp;<pos:position pos:line="9" pos:column="40"/></operator> <operator pos:line="9" pos:column="33">!<pos:position pos:line="9" pos:column="34"/></operator><name><name pos:line="9" pos:column="34">allowed_globals<pos:position pos:line="9" pos:column="49"/></name><operator pos:line="9" pos:column="49">.<pos:position pos:line="9" pos:column="50"/></operator><name pos:line="9" pos:column="50">jobhead<pos:position pos:line="9" pos:column="57"/></name></name></expr>)<pos:position pos:line="9" pos:column="58"/></condition><then pos:line="9" pos:column="58"> <block pos:line="9" pos:column="59">{
        <expr_stmt><expr><call><name pos:line="10" pos:column="9">apr_thread_mutex_unlock<pos:position pos:line="10" pos:column="32"/></name><argument_list pos:line="10" pos:column="32">(<argument><expr><name><name pos:line="10" pos:column="33">allowed_globals<pos:position pos:line="10" pos:column="48"/></name><operator pos:line="10" pos:column="48">.<pos:position pos:line="10" pos:column="49"/></operator><name pos:line="10" pos:column="49">jobmutex<pos:position pos:line="10" pos:column="57"/></name></name></expr></argument>)<pos:position pos:line="10" pos:column="58"/></argument_list></call></expr>;<pos:position pos:line="10" pos:column="59"/></expr_stmt>
        <return pos:line="11" pos:column="9">return <expr><operator pos:line="11" pos:column="16">(<pos:position pos:line="11" pos:column="17"/></operator><name pos:line="11" pos:column="17">INVALID_SOCKET<pos:position pos:line="11" pos:column="31"/></name><operator pos:line="11" pos:column="31">)<pos:position pos:line="11" pos:column="32"/></operator></expr>;<pos:position pos:line="11" pos:column="33"/></return>
    }<pos:position pos:line="12" pos:column="6"/></block></then></if>
    <expr_stmt><expr><name pos:line="13" pos:column="5">job<pos:position pos:line="13" pos:column="8"/></name> <operator pos:line="13" pos:column="9">=<pos:position pos:line="13" pos:column="10"/></operator> <name><name pos:line="13" pos:column="11">allowed_globals<pos:position pos:line="13" pos:column="26"/></name><operator pos:line="13" pos:column="26">.<pos:position pos:line="13" pos:column="27"/></operator><name pos:line="13" pos:column="27">jobhead<pos:position pos:line="13" pos:column="34"/></name></name></expr>;<pos:position pos:line="13" pos:column="35"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="14" pos:column="5">ap_assert<pos:position pos:line="14" pos:column="14"/></name><argument_list pos:line="14" pos:column="14">(<argument><expr><name pos:line="14" pos:column="15">job<pos:position pos:line="14" pos:column="18"/></name></expr></argument>)<pos:position pos:line="14" pos:column="19"/></argument_list></call></expr>;<pos:position pos:line="14" pos:column="20"/></expr_stmt>
    <expr_stmt><expr><name><name pos:line="15" pos:column="5">allowed_globals<pos:position pos:line="15" pos:column="20"/></name><operator pos:line="15" pos:column="20">.<pos:position pos:line="15" pos:column="21"/></operator><name pos:line="15" pos:column="21">jobhead<pos:position pos:line="15" pos:column="28"/></name></name> <operator pos:line="15" pos:column="29">=<pos:position pos:line="15" pos:column="30"/></operator> <name><name pos:line="15" pos:column="31">job<pos:position pos:line="15" pos:column="34"/></name><operator pos:line="15" pos:column="34">-&gt;<pos:position pos:line="15" pos:column="39"/></operator><name pos:line="15" pos:column="36">next<pos:position pos:line="15" pos:column="40"/></name></name></expr>;<pos:position pos:line="15" pos:column="41"/></expr_stmt>
    <if pos:line="16" pos:column="5">if <condition pos:line="16" pos:column="8">(<expr><name><name pos:line="16" pos:column="9">allowed_globals<pos:position pos:line="16" pos:column="24"/></name><operator pos:line="16" pos:column="24">.<pos:position pos:line="16" pos:column="25"/></operator><name pos:line="16" pos:column="25">jobhead<pos:position pos:line="16" pos:column="32"/></name></name> <operator pos:line="16" pos:column="33">==<pos:position pos:line="16" pos:column="35"/></operator> <name pos:line="16" pos:column="36">NULL<pos:position pos:line="16" pos:column="40"/></name></expr>)<pos:position pos:line="16" pos:column="41"/></condition><then pos:line="16" pos:column="41">
        <block type="pseudo"><expr_stmt><expr><name><name pos:line="17" pos:column="9">allowed_globals<pos:position pos:line="17" pos:column="24"/></name><operator pos:line="17" pos:column="24">.<pos:position pos:line="17" pos:column="25"/></operator><name pos:line="17" pos:column="25">jobtail<pos:position pos:line="17" pos:column="32"/></name></name> <operator pos:line="17" pos:column="33">=<pos:position pos:line="17" pos:column="34"/></operator> <name pos:line="17" pos:column="35">NULL<pos:position pos:line="17" pos:column="39"/></name></expr>;<pos:position pos:line="17" pos:column="40"/></expr_stmt></block></then></if>
    <expr_stmt><expr><call><name pos:line="18" pos:column="5">apr_thread_mutex_unlock<pos:position pos:line="18" pos:column="28"/></name><argument_list pos:line="18" pos:column="28">(<argument><expr><name><name pos:line="18" pos:column="29">allowed_globals<pos:position pos:line="18" pos:column="44"/></name><operator pos:line="18" pos:column="44">.<pos:position pos:line="18" pos:column="45"/></operator><name pos:line="18" pos:column="45">jobmutex<pos:position pos:line="18" pos:column="53"/></name></name></expr></argument>)<pos:position pos:line="18" pos:column="54"/></argument_list></call></expr>;<pos:position pos:line="18" pos:column="55"/></expr_stmt>
    <expr_stmt><expr><name pos:line="19" pos:column="5">sock<pos:position pos:line="19" pos:column="9"/></name> <operator pos:line="19" pos:column="10">=<pos:position pos:line="19" pos:column="11"/></operator> <name><name pos:line="19" pos:column="12">job<pos:position pos:line="19" pos:column="15"/></name><operator pos:line="19" pos:column="15">-&gt;<pos:position pos:line="19" pos:column="20"/></operator><name pos:line="19" pos:column="17">sock<pos:position pos:line="19" pos:column="21"/></name></name></expr>;<pos:position pos:line="19" pos:column="22"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="20" pos:column="5">free<pos:position pos:line="20" pos:column="9"/></name><argument_list pos:line="20" pos:column="9">(<argument><expr><name pos:line="20" pos:column="10">job<pos:position pos:line="20" pos:column="13"/></name></expr></argument>)<pos:position pos:line="20" pos:column="14"/></argument_list></call></expr>;<pos:position pos:line="20" pos:column="15"/></expr_stmt>

    <return pos:line="22" pos:column="5">return <expr><operator pos:line="22" pos:column="12">(<pos:position pos:line="22" pos:column="13"/></operator><name pos:line="22" pos:column="13">sock<pos:position pos:line="22" pos:column="17"/></name><operator pos:line="22" pos:column="17">)<pos:position pos:line="22" pos:column="18"/></operator></expr>;<pos:position pos:line="22" pos:column="19"/></return>
}<pos:position pos:line="23" pos:column="2"/></block></function></unit>

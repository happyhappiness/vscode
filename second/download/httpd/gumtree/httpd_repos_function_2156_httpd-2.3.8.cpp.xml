<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/httpd/gumtree/httpd_repos_function_2156_httpd-2.3.8.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">apr_status_t<pos:position pos:line="1" pos:column="20"/></name></type> <name pos:line="1" pos:column="21">cleanup_slotmem<pos:position pos:line="1" pos:column="36"/></name><parameter_list pos:line="1" pos:column="36">(<parameter><decl><type><name pos:line="1" pos:column="37">void<pos:position pos:line="1" pos:column="41"/></name> <modifier pos:line="1" pos:column="42">*<pos:position pos:line="1" pos:column="43"/></modifier></type><name pos:line="1" pos:column="43">param<pos:position pos:line="1" pos:column="48"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="49"/></parameter_list>
<block pos:line="2" pos:column="1">{
    <decl_stmt><decl><type><name pos:line="3" pos:column="5">ap_slotmem_instance_t<pos:position pos:line="3" pos:column="26"/></name> <modifier pos:line="3" pos:column="27">*<pos:position pos:line="3" pos:column="28"/></modifier><modifier pos:line="3" pos:column="28">*<pos:position pos:line="3" pos:column="29"/></modifier></type><name pos:line="3" pos:column="29">mem<pos:position pos:line="3" pos:column="32"/></name> <init pos:line="3" pos:column="33">= <expr><name pos:line="3" pos:column="35">param<pos:position pos:line="3" pos:column="40"/></name></expr></init></decl>;<pos:position pos:line="3" pos:column="41"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="4" pos:column="5">apr_pool_t<pos:position pos:line="4" pos:column="15"/></name> <modifier pos:line="4" pos:column="16">*<pos:position pos:line="4" pos:column="17"/></modifier></type><name pos:line="4" pos:column="17">pool<pos:position pos:line="4" pos:column="21"/></name> <init pos:line="4" pos:column="22">= <expr><name pos:line="4" pos:column="24">NULL<pos:position pos:line="4" pos:column="28"/></name></expr></init></decl>;<pos:position pos:line="4" pos:column="29"/></decl_stmt>

    <if pos:line="6" pos:column="5">if <condition pos:line="6" pos:column="8">(<expr><operator pos:line="6" pos:column="9">*<pos:position pos:line="6" pos:column="10"/></operator><name pos:line="6" pos:column="10">mem<pos:position pos:line="6" pos:column="13"/></name></expr>)<pos:position pos:line="6" pos:column="14"/></condition><then pos:line="6" pos:column="14"> <block pos:line="6" pos:column="15">{
        <decl_stmt><decl><type><name pos:line="7" pos:column="9">ap_slotmem_instance_t<pos:position pos:line="7" pos:column="30"/></name> <modifier pos:line="7" pos:column="31">*<pos:position pos:line="7" pos:column="32"/></modifier></type><name pos:line="7" pos:column="32">next<pos:position pos:line="7" pos:column="36"/></name> <init pos:line="7" pos:column="37">= <expr><operator pos:line="7" pos:column="39">*<pos:position pos:line="7" pos:column="40"/></operator><name pos:line="7" pos:column="40">mem<pos:position pos:line="7" pos:column="43"/></name></expr></init></decl>;<pos:position pos:line="7" pos:column="44"/></decl_stmt>
        <expr_stmt><expr><name pos:line="8" pos:column="9">pool<pos:position pos:line="8" pos:column="13"/></name> <operator pos:line="8" pos:column="14">=<pos:position pos:line="8" pos:column="15"/></operator> <name><name pos:line="8" pos:column="16">next<pos:position pos:line="8" pos:column="20"/></name><operator pos:line="8" pos:column="20">-&gt;<pos:position pos:line="8" pos:column="25"/></operator><name pos:line="8" pos:column="22">gpool<pos:position pos:line="8" pos:column="27"/></name></name></expr>;<pos:position pos:line="8" pos:column="28"/></expr_stmt>
        <while pos:line="9" pos:column="9">while <condition pos:line="9" pos:column="15">(<expr><name pos:line="9" pos:column="16">next<pos:position pos:line="9" pos:column="20"/></name></expr>)<pos:position pos:line="9" pos:column="21"/></condition> <block pos:line="9" pos:column="22">{
            <expr_stmt><expr><call><name pos:line="10" pos:column="13">store_slotmem<pos:position pos:line="10" pos:column="26"/></name><argument_list pos:line="10" pos:column="26">(<argument><expr><name pos:line="10" pos:column="27">next<pos:position pos:line="10" pos:column="31"/></name></expr></argument>)<pos:position pos:line="10" pos:column="32"/></argument_list></call></expr>;<pos:position pos:line="10" pos:column="33"/></expr_stmt>
            <expr_stmt><expr><call><name pos:line="11" pos:column="13">apr_shm_destroy<pos:position pos:line="11" pos:column="28"/></name><argument_list pos:line="11" pos:column="28">(<argument><expr><operator pos:line="11" pos:column="29">(<pos:position pos:line="11" pos:column="30"/></operator><name pos:line="11" pos:column="30">apr_shm_t<pos:position pos:line="11" pos:column="39"/></name> <operator pos:line="11" pos:column="40">*<pos:position pos:line="11" pos:column="41"/></operator><operator pos:line="11" pos:column="41">)<pos:position pos:line="11" pos:column="42"/></operator><name><name pos:line="11" pos:column="42">next<pos:position pos:line="11" pos:column="46"/></name><operator pos:line="11" pos:column="46">-&gt;<pos:position pos:line="11" pos:column="51"/></operator><name pos:line="11" pos:column="48">shm<pos:position pos:line="11" pos:column="51"/></name></name></expr></argument>)<pos:position pos:line="11" pos:column="52"/></argument_list></call></expr>;<pos:position pos:line="11" pos:column="53"/></expr_stmt>
            <expr_stmt><expr><name pos:line="12" pos:column="13">next<pos:position pos:line="12" pos:column="17"/></name> <operator pos:line="12" pos:column="18">=<pos:position pos:line="12" pos:column="19"/></operator> <name><name pos:line="12" pos:column="20">next<pos:position pos:line="12" pos:column="24"/></name><operator pos:line="12" pos:column="24">-&gt;<pos:position pos:line="12" pos:column="29"/></operator><name pos:line="12" pos:column="26">next<pos:position pos:line="12" pos:column="30"/></name></name></expr>;<pos:position pos:line="12" pos:column="31"/></expr_stmt>
        }<pos:position pos:line="13" pos:column="10"/></block></while>
        <expr_stmt><expr><call><name pos:line="14" pos:column="9">apr_pool_destroy<pos:position pos:line="14" pos:column="25"/></name><argument_list pos:line="14" pos:column="25">(<argument><expr><name pos:line="14" pos:column="26">pool<pos:position pos:line="14" pos:column="30"/></name></expr></argument>)<pos:position pos:line="14" pos:column="31"/></argument_list></call></expr>;<pos:position pos:line="14" pos:column="32"/></expr_stmt>
    }<pos:position pos:line="15" pos:column="6"/></block></then></if>
    <return pos:line="16" pos:column="5">return <expr><name pos:line="16" pos:column="12">APR_SUCCESS<pos:position pos:line="16" pos:column="23"/></name></expr>;<pos:position pos:line="16" pos:column="24"/></return>
}<pos:position pos:line="17" pos:column="2"/></block></function></unit>

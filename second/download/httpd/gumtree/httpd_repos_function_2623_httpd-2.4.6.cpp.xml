<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/httpd/gumtree/httpd_repos_function_2623_httpd-2.4.6.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">apr_status_t<pos:position pos:line="1" pos:column="20"/></name></type> <name pos:line="1" pos:column="21">ssl_io_filter_Upgrade<pos:position pos:line="1" pos:column="42"/></name><parameter_list pos:line="1" pos:column="42">(<parameter><decl><type><name pos:line="1" pos:column="43">ap_filter_t<pos:position pos:line="1" pos:column="54"/></name> <modifier pos:line="1" pos:column="55">*<pos:position pos:line="1" pos:column="56"/></modifier></type><name pos:line="1" pos:column="56">f<pos:position pos:line="1" pos:column="57"/></name></decl></parameter>,
                                          <parameter><decl><type><name pos:line="2" pos:column="43">apr_bucket_brigade<pos:position pos:line="2" pos:column="61"/></name> <modifier pos:line="2" pos:column="62">*<pos:position pos:line="2" pos:column="63"/></modifier></type><name pos:line="2" pos:column="63">bb<pos:position pos:line="2" pos:column="65"/></name></decl></parameter>)<pos:position pos:line="2" pos:column="66"/></parameter_list>

<block pos:line="4" pos:column="1">{
    <decl_stmt><decl><type><specifier pos:line="5" pos:column="5">const<pos:position pos:line="5" pos:column="10"/></specifier> <name pos:line="5" pos:column="11">char<pos:position pos:line="5" pos:column="15"/></name> <modifier pos:line="5" pos:column="16">*<pos:position pos:line="5" pos:column="17"/></modifier></type><name pos:line="5" pos:column="17">upgrade<pos:position pos:line="5" pos:column="24"/></name></decl>;<pos:position pos:line="5" pos:column="25"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="6" pos:column="5">apr_bucket_brigade<pos:position pos:line="6" pos:column="23"/></name> <modifier pos:line="6" pos:column="24">*<pos:position pos:line="6" pos:column="25"/></modifier></type><name pos:line="6" pos:column="25">upgradebb<pos:position pos:line="6" pos:column="34"/></name></decl>;<pos:position pos:line="6" pos:column="35"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="7" pos:column="5">request_rec<pos:position pos:line="7" pos:column="16"/></name> <modifier pos:line="7" pos:column="17">*<pos:position pos:line="7" pos:column="18"/></modifier></type><name pos:line="7" pos:column="18">r<pos:position pos:line="7" pos:column="19"/></name> <init pos:line="7" pos:column="20">= <expr><name><name pos:line="7" pos:column="22">f<pos:position pos:line="7" pos:column="23"/></name><operator pos:line="7" pos:column="23">-&gt;<pos:position pos:line="7" pos:column="28"/></operator><name pos:line="7" pos:column="25">r<pos:position pos:line="7" pos:column="26"/></name></name></expr></init></decl>;<pos:position pos:line="7" pos:column="27"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="8" pos:column="5">apr_socket_t<pos:position pos:line="8" pos:column="17"/></name> <modifier pos:line="8" pos:column="18">*<pos:position pos:line="8" pos:column="19"/></modifier></type><name pos:line="8" pos:column="19">csd<pos:position pos:line="8" pos:column="22"/></name> <init pos:line="8" pos:column="23">= <expr><name pos:line="8" pos:column="25">NULL<pos:position pos:line="8" pos:column="29"/></name></expr></init></decl>;<pos:position pos:line="8" pos:column="30"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="9" pos:column="5">char<pos:position pos:line="9" pos:column="9"/></name> <modifier pos:line="9" pos:column="10">*<pos:position pos:line="9" pos:column="11"/></modifier></type><name pos:line="9" pos:column="11">key<pos:position pos:line="9" pos:column="14"/></name></decl>;<pos:position pos:line="9" pos:column="15"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="10" pos:column="5">int<pos:position pos:line="10" pos:column="8"/></name></type> <name pos:line="10" pos:column="9">ret<pos:position pos:line="10" pos:column="12"/></name></decl>;<pos:position pos:line="10" pos:column="13"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="11" pos:column="5">secsocket_data<pos:position pos:line="11" pos:column="19"/></name> <modifier pos:line="11" pos:column="20">*<pos:position pos:line="11" pos:column="21"/></modifier></type><name pos:line="11" pos:column="21">csd_data<pos:position pos:line="11" pos:column="29"/></name></decl>;<pos:position pos:line="11" pos:column="30"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="12" pos:column="5">apr_bucket<pos:position pos:line="12" pos:column="15"/></name> <modifier pos:line="12" pos:column="16">*<pos:position pos:line="12" pos:column="17"/></modifier></type><name pos:line="12" pos:column="17">b<pos:position pos:line="12" pos:column="18"/></name></decl>;<pos:position pos:line="12" pos:column="19"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="13" pos:column="5">apr_status_t<pos:position pos:line="13" pos:column="17"/></name></type> <name pos:line="13" pos:column="18">rv<pos:position pos:line="13" pos:column="20"/></name></decl>;<pos:position pos:line="13" pos:column="21"/></decl_stmt>

    <comment type="block" pos:line="15" pos:column="5">/* Just remove the filter, if it doesn't work the first time, it won't
     * work at all for this request.
     */</comment>
    <expr_stmt><expr><call><name pos:line="18" pos:column="5">ap_remove_output_filter<pos:position pos:line="18" pos:column="28"/></name><argument_list pos:line="18" pos:column="28">(<argument><expr><name pos:line="18" pos:column="29">f<pos:position pos:line="18" pos:column="30"/></name></expr></argument>)<pos:position pos:line="18" pos:column="31"/></argument_list></call></expr>;<pos:position pos:line="18" pos:column="32"/></expr_stmt>

    <if pos:line="20" pos:column="5">if <condition pos:line="20" pos:column="8">(<expr><operator pos:line="20" pos:column="9">!<pos:position pos:line="20" pos:column="10"/></operator><name pos:line="20" pos:column="10">r<pos:position pos:line="20" pos:column="11"/></name></expr>)<pos:position pos:line="20" pos:column="12"/></condition><then pos:line="20" pos:column="12"> <block pos:line="20" pos:column="13">{
        <comment type="block" pos:line="21" pos:column="9">/*
        ap_log_error(APLOG_MARK, APLOG_ERR, 0, r-&gt;server, APLOGNO(02131)
                     "Unable to get upgradeable socket handle");
        */</comment>
        <return pos:line="25" pos:column="9">return <expr><call><name pos:line="25" pos:column="16">ap_pass_brigade<pos:position pos:line="25" pos:column="31"/></name><argument_list pos:line="25" pos:column="31">(<argument><expr><name><name pos:line="25" pos:column="32">f<pos:position pos:line="25" pos:column="33"/></name><operator pos:line="25" pos:column="33">-&gt;<pos:position pos:line="25" pos:column="38"/></operator><name pos:line="25" pos:column="35">next<pos:position pos:line="25" pos:column="39"/></name></name></expr></argument>, <argument><expr><name pos:line="25" pos:column="41">bb<pos:position pos:line="25" pos:column="43"/></name></expr></argument>)<pos:position pos:line="25" pos:column="44"/></argument_list></call></expr>;<pos:position pos:line="25" pos:column="45"/></return>
    }<pos:position pos:line="26" pos:column="6"/></block></then></if>

    <comment type="block" pos:line="28" pos:column="5">/* No need to ensure that this is a server with optional SSL, the filter
     * is only inserted if that is true.
     */</comment>

    <expr_stmt><expr><name pos:line="32" pos:column="5">upgrade<pos:position pos:line="32" pos:column="12"/></name> <operator pos:line="32" pos:column="13">=<pos:position pos:line="32" pos:column="14"/></operator> <call><name pos:line="32" pos:column="15">apr_table_get<pos:position pos:line="32" pos:column="28"/></name><argument_list pos:line="32" pos:column="28">(<argument><expr><name><name pos:line="32" pos:column="29">r<pos:position pos:line="32" pos:column="30"/></name><operator pos:line="32" pos:column="30">-&gt;<pos:position pos:line="32" pos:column="35"/></operator><name pos:line="32" pos:column="32">headers_in<pos:position pos:line="32" pos:column="42"/></name></name></expr></argument>, <argument><expr><literal type="string" pos:line="32" pos:column="44">"Upgrade"<pos:position pos:line="32" pos:column="53"/></literal></expr></argument>)<pos:position pos:line="32" pos:column="54"/></argument_list></call></expr>;<pos:position pos:line="32" pos:column="55"/></expr_stmt>
    <if pos:line="33" pos:column="5">if <condition pos:line="33" pos:column="8">(<expr><name pos:line="33" pos:column="9">upgrade<pos:position pos:line="33" pos:column="16"/></name> <operator pos:line="33" pos:column="17">==<pos:position pos:line="33" pos:column="19"/></operator> <name pos:line="33" pos:column="20">NULL<pos:position pos:line="33" pos:column="24"/></name>
        <operator pos:line="34" pos:column="9">||<pos:position pos:line="34" pos:column="11"/></operator> <call><name pos:line="34" pos:column="12">strcmp<pos:position pos:line="34" pos:column="18"/></name><argument_list pos:line="34" pos:column="18">(<argument><expr><call><name pos:line="34" pos:column="19">ap_getword<pos:position pos:line="34" pos:column="29"/></name><argument_list pos:line="34" pos:column="29">(<argument><expr><name><name pos:line="34" pos:column="30">r<pos:position pos:line="34" pos:column="31"/></name><operator pos:line="34" pos:column="31">-&gt;<pos:position pos:line="34" pos:column="36"/></operator><name pos:line="34" pos:column="33">pool<pos:position pos:line="34" pos:column="37"/></name></name></expr></argument>, <argument><expr><operator pos:line="34" pos:column="39">&amp;<pos:position pos:line="34" pos:column="44"/></operator><name pos:line="34" pos:column="40">upgrade<pos:position pos:line="34" pos:column="47"/></name></expr></argument>, <argument><expr><literal type="char" pos:line="34" pos:column="49">','<pos:position pos:line="34" pos:column="52"/></literal></expr></argument>)<pos:position pos:line="34" pos:column="53"/></argument_list></call></expr></argument>, <argument><expr><literal type="string" pos:line="34" pos:column="55">"TLS/1.0"<pos:position pos:line="34" pos:column="64"/></literal></expr></argument>)<pos:position pos:line="34" pos:column="65"/></argument_list></call></expr>)<pos:position pos:line="34" pos:column="66"/></condition><then pos:line="34" pos:column="66"> <block pos:line="34" pos:column="67">{
            <comment type="block" pos:line="35" pos:column="13">/* "Upgrade: TLS/1.0, ..." header not found, don't do Upgrade */</comment>
        <return pos:line="36" pos:column="9">return <expr><call><name pos:line="36" pos:column="16">ap_pass_brigade<pos:position pos:line="36" pos:column="31"/></name><argument_list pos:line="36" pos:column="31">(<argument><expr><name><name pos:line="36" pos:column="32">f<pos:position pos:line="36" pos:column="33"/></name><operator pos:line="36" pos:column="33">-&gt;<pos:position pos:line="36" pos:column="38"/></operator><name pos:line="36" pos:column="35">next<pos:position pos:line="36" pos:column="39"/></name></name></expr></argument>, <argument><expr><name pos:line="36" pos:column="41">bb<pos:position pos:line="36" pos:column="43"/></name></expr></argument>)<pos:position pos:line="36" pos:column="44"/></argument_list></call></expr>;<pos:position pos:line="36" pos:column="45"/></return>
    }<pos:position pos:line="37" pos:column="6"/></block></then></if>

    <expr_stmt><expr><call><name pos:line="39" pos:column="5">apr_table_unset<pos:position pos:line="39" pos:column="20"/></name><argument_list pos:line="39" pos:column="20">(<argument><expr><name><name pos:line="39" pos:column="21">r<pos:position pos:line="39" pos:column="22"/></name><operator pos:line="39" pos:column="22">-&gt;<pos:position pos:line="39" pos:column="27"/></operator><name pos:line="39" pos:column="24">headers_out<pos:position pos:line="39" pos:column="35"/></name></name></expr></argument>, <argument><expr><literal type="string" pos:line="39" pos:column="37">"Upgrade"<pos:position pos:line="39" pos:column="46"/></literal></expr></argument>)<pos:position pos:line="39" pos:column="47"/></argument_list></call></expr>;<pos:position pos:line="39" pos:column="48"/></expr_stmt>

    <expr_stmt><expr><name pos:line="41" pos:column="5">csd_data<pos:position pos:line="41" pos:column="13"/></name> <operator pos:line="41" pos:column="14">=<pos:position pos:line="41" pos:column="15"/></operator> <operator pos:line="41" pos:column="16">(<pos:position pos:line="41" pos:column="17"/></operator><name pos:line="41" pos:column="17">secsocket_data<pos:position pos:line="41" pos:column="31"/></name><operator pos:line="41" pos:column="31">*<pos:position pos:line="41" pos:column="32"/></operator><operator pos:line="41" pos:column="32">)<pos:position pos:line="41" pos:column="33"/></operator><call><name pos:line="41" pos:column="33">ap_get_module_config<pos:position pos:line="41" pos:column="53"/></name><argument_list pos:line="41" pos:column="53">(<argument><expr><name><name pos:line="41" pos:column="54">r<pos:position pos:line="41" pos:column="55"/></name><operator pos:line="41" pos:column="55">-&gt;<pos:position pos:line="41" pos:column="60"/></operator><name pos:line="41" pos:column="57">connection<pos:position pos:line="41" pos:column="67"/></name><operator pos:line="41" pos:column="67">-&gt;<pos:position pos:line="41" pos:column="72"/></operator><name pos:line="41" pos:column="69">conn_config<pos:position pos:line="41" pos:column="80"/></name></name></expr></argument>, <argument><expr><operator pos:line="41" pos:column="82">&amp;<pos:position pos:line="41" pos:column="87"/></operator><name pos:line="41" pos:column="83">nwssl_module<pos:position pos:line="41" pos:column="95"/></name></expr></argument>)<pos:position pos:line="41" pos:column="96"/></argument_list></call></expr>;<pos:position pos:line="41" pos:column="97"/></expr_stmt>
    <expr_stmt><expr><name pos:line="42" pos:column="5">csd<pos:position pos:line="42" pos:column="8"/></name> <operator pos:line="42" pos:column="9">=<pos:position pos:line="42" pos:column="10"/></operator> <name><name pos:line="42" pos:column="11">csd_data<pos:position pos:line="42" pos:column="19"/></name><operator pos:line="42" pos:column="19">-&gt;<pos:position pos:line="42" pos:column="24"/></operator><name pos:line="42" pos:column="21">csd<pos:position pos:line="42" pos:column="24"/></name></name></expr>;<pos:position pos:line="42" pos:column="25"/></expr_stmt>

    <comment type="block" pos:line="44" pos:column="5">/* Send the interim 101 response. */</comment>
    <expr_stmt><expr><name pos:line="45" pos:column="5">upgradebb<pos:position pos:line="45" pos:column="14"/></name> <operator pos:line="45" pos:column="15">=<pos:position pos:line="45" pos:column="16"/></operator> <call><name pos:line="45" pos:column="17">apr_brigade_create<pos:position pos:line="45" pos:column="35"/></name><argument_list pos:line="45" pos:column="35">(<argument><expr><name><name pos:line="45" pos:column="36">r<pos:position pos:line="45" pos:column="37"/></name><operator pos:line="45" pos:column="37">-&gt;<pos:position pos:line="45" pos:column="42"/></operator><name pos:line="45" pos:column="39">pool<pos:position pos:line="45" pos:column="43"/></name></name></expr></argument>, <argument><expr><name><name pos:line="45" pos:column="45">f<pos:position pos:line="45" pos:column="46"/></name><operator pos:line="45" pos:column="46">-&gt;<pos:position pos:line="45" pos:column="51"/></operator><name pos:line="45" pos:column="48">c<pos:position pos:line="45" pos:column="49"/></name><operator pos:line="45" pos:column="49">-&gt;<pos:position pos:line="45" pos:column="54"/></operator><name pos:line="45" pos:column="51">bucket_alloc<pos:position pos:line="45" pos:column="63"/></name></name></expr></argument>)<pos:position pos:line="45" pos:column="64"/></argument_list></call></expr>;<pos:position pos:line="45" pos:column="65"/></expr_stmt>

    <expr_stmt><expr><call><name pos:line="47" pos:column="5">ap_fputstrs<pos:position pos:line="47" pos:column="16"/></name><argument_list pos:line="47" pos:column="16">(<argument><expr><name><name pos:line="47" pos:column="17">f<pos:position pos:line="47" pos:column="18"/></name><operator pos:line="47" pos:column="18">-&gt;<pos:position pos:line="47" pos:column="23"/></operator><name pos:line="47" pos:column="20">next<pos:position pos:line="47" pos:column="24"/></name></name></expr></argument>, <argument><expr><name pos:line="47" pos:column="26">upgradebb<pos:position pos:line="47" pos:column="35"/></name></expr></argument>, <argument><expr><name pos:line="47" pos:column="37">SWITCH_STATUS_LINE<pos:position pos:line="47" pos:column="55"/></name></expr></argument>, <argument><expr><name pos:line="47" pos:column="57">CRLF<pos:position pos:line="47" pos:column="61"/></name></expr></argument>,
                <argument><expr><name pos:line="48" pos:column="17">UPGRADE_HEADER<pos:position pos:line="48" pos:column="31"/></name></expr></argument>, <argument><expr><name pos:line="48" pos:column="33">CRLF<pos:position pos:line="48" pos:column="37"/></name></expr></argument>, <argument><expr><name pos:line="48" pos:column="39">CONNECTION_HEADER<pos:position pos:line="48" pos:column="56"/></name></expr></argument>, <argument><expr><name pos:line="48" pos:column="58">CRLF<pos:position pos:line="48" pos:column="62"/></name></expr></argument>, <argument><expr><name pos:line="48" pos:column="64">CRLF<pos:position pos:line="48" pos:column="68"/></name></expr></argument>, <argument><expr><name pos:line="48" pos:column="70">NULL<pos:position pos:line="48" pos:column="74"/></name></expr></argument>)<pos:position pos:line="48" pos:column="75"/></argument_list></call></expr>;<pos:position pos:line="48" pos:column="76"/></expr_stmt>

    <expr_stmt><expr><name pos:line="50" pos:column="5">b<pos:position pos:line="50" pos:column="6"/></name> <operator pos:line="50" pos:column="7">=<pos:position pos:line="50" pos:column="8"/></operator> <call><name pos:line="50" pos:column="9">apr_bucket_flush_create<pos:position pos:line="50" pos:column="32"/></name><argument_list pos:line="50" pos:column="32">(<argument><expr><name><name pos:line="50" pos:column="33">f<pos:position pos:line="50" pos:column="34"/></name><operator pos:line="50" pos:column="34">-&gt;<pos:position pos:line="50" pos:column="39"/></operator><name pos:line="50" pos:column="36">c<pos:position pos:line="50" pos:column="37"/></name><operator pos:line="50" pos:column="37">-&gt;<pos:position pos:line="50" pos:column="42"/></operator><name pos:line="50" pos:column="39">bucket_alloc<pos:position pos:line="50" pos:column="51"/></name></name></expr></argument>)<pos:position pos:line="50" pos:column="52"/></argument_list></call></expr>;<pos:position pos:line="50" pos:column="53"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="51" pos:column="5">APR_BRIGADE_INSERT_TAIL<pos:position pos:line="51" pos:column="28"/></name><argument_list pos:line="51" pos:column="28">(<argument><expr><name pos:line="51" pos:column="29">upgradebb<pos:position pos:line="51" pos:column="38"/></name></expr></argument>, <argument><expr><name pos:line="51" pos:column="40">b<pos:position pos:line="51" pos:column="41"/></name></expr></argument>)<pos:position pos:line="51" pos:column="42"/></argument_list></call></expr>;<pos:position pos:line="51" pos:column="43"/></expr_stmt>

    <expr_stmt><expr><name pos:line="53" pos:column="5">rv<pos:position pos:line="53" pos:column="7"/></name> <operator pos:line="53" pos:column="8">=<pos:position pos:line="53" pos:column="9"/></operator> <call><name pos:line="53" pos:column="10">ap_pass_brigade<pos:position pos:line="53" pos:column="25"/></name><argument_list pos:line="53" pos:column="25">(<argument><expr><name><name pos:line="53" pos:column="26">f<pos:position pos:line="53" pos:column="27"/></name><operator pos:line="53" pos:column="27">-&gt;<pos:position pos:line="53" pos:column="32"/></operator><name pos:line="53" pos:column="29">next<pos:position pos:line="53" pos:column="33"/></name></name></expr></argument>, <argument><expr><name pos:line="53" pos:column="35">upgradebb<pos:position pos:line="53" pos:column="44"/></name></expr></argument>)<pos:position pos:line="53" pos:column="45"/></argument_list></call></expr>;<pos:position pos:line="53" pos:column="46"/></expr_stmt>
    <if pos:line="54" pos:column="5">if <condition pos:line="54" pos:column="8">(<expr><name pos:line="54" pos:column="9">rv<pos:position pos:line="54" pos:column="11"/></name></expr>)<pos:position pos:line="54" pos:column="12"/></condition><then pos:line="54" pos:column="12"> <block pos:line="54" pos:column="13">{
        <expr_stmt><expr><call><name pos:line="55" pos:column="9">ap_log_rerror<pos:position pos:line="55" pos:column="22"/></name><argument_list pos:line="55" pos:column="22">(<argument><expr><name pos:line="55" pos:column="23">APLOG_MARK<pos:position pos:line="55" pos:column="33"/></name></expr></argument>, <argument><expr><name pos:line="55" pos:column="35">APLOG_ERR<pos:position pos:line="55" pos:column="44"/></name></expr></argument>, <argument><expr><name pos:line="55" pos:column="46">rv<pos:position pos:line="55" pos:column="48"/></name></expr></argument>, <argument><expr><name pos:line="55" pos:column="50">r<pos:position pos:line="55" pos:column="51"/></name></expr></argument>, <argument><expr><call><name pos:line="55" pos:column="53">APLOGNO<pos:position pos:line="55" pos:column="60"/></name><argument_list pos:line="55" pos:column="60">(<argument><expr><literal type="number" pos:line="55" pos:column="61">02132<pos:position pos:line="55" pos:column="66"/></literal></expr></argument>)<pos:position pos:line="55" pos:column="67"/></argument_list></call>
                      <literal type="string" pos:line="56" pos:column="23">"could not send interim 101 Upgrade response"<pos:position pos:line="56" pos:column="68"/></literal></expr></argument>)<pos:position pos:line="56" pos:column="69"/></argument_list></call></expr>;<pos:position pos:line="56" pos:column="70"/></expr_stmt>
        <return pos:line="57" pos:column="9">return <expr><name pos:line="57" pos:column="16">AP_FILTER_ERROR<pos:position pos:line="57" pos:column="31"/></name></expr>;<pos:position pos:line="57" pos:column="32"/></return>
    }<pos:position pos:line="58" pos:column="6"/></block></then></if>

    <expr_stmt><expr><name pos:line="60" pos:column="5">key<pos:position pos:line="60" pos:column="8"/></name> <operator pos:line="60" pos:column="9">=<pos:position pos:line="60" pos:column="10"/></operator> <call><name pos:line="60" pos:column="11">get_port_key<pos:position pos:line="60" pos:column="23"/></name><argument_list pos:line="60" pos:column="23">(<argument><expr><name><name pos:line="60" pos:column="24">r<pos:position pos:line="60" pos:column="25"/></name><operator pos:line="60" pos:column="25">-&gt;<pos:position pos:line="60" pos:column="30"/></operator><name pos:line="60" pos:column="27">connection<pos:position pos:line="60" pos:column="37"/></name></name></expr></argument>)<pos:position pos:line="60" pos:column="38"/></argument_list></call></expr>;<pos:position pos:line="60" pos:column="39"/></expr_stmt>

    <if pos:line="62" pos:column="5">if <condition pos:line="62" pos:column="8">(<expr><name pos:line="62" pos:column="9">csd<pos:position pos:line="62" pos:column="12"/></name> <operator pos:line="62" pos:column="13">&amp;&amp;<pos:position pos:line="62" pos:column="23"/></operator> <name pos:line="62" pos:column="16">key<pos:position pos:line="62" pos:column="19"/></name></expr>)<pos:position pos:line="62" pos:column="20"/></condition><then pos:line="62" pos:column="20"> <block pos:line="62" pos:column="21">{
        <decl_stmt><decl><type><name pos:line="63" pos:column="9">int<pos:position pos:line="63" pos:column="12"/></name></type> <name pos:line="63" pos:column="13">sockdes<pos:position pos:line="63" pos:column="20"/></name></decl>;<pos:position pos:line="63" pos:column="21"/></decl_stmt>
        <expr_stmt><expr><call><name pos:line="64" pos:column="9">apr_os_sock_get<pos:position pos:line="64" pos:column="24"/></name><argument_list pos:line="64" pos:column="24">(<argument><expr><operator pos:line="64" pos:column="25">&amp;<pos:position pos:line="64" pos:column="30"/></operator><name pos:line="64" pos:column="26">sockdes<pos:position pos:line="64" pos:column="33"/></name></expr></argument>, <argument><expr><name pos:line="64" pos:column="35">csd<pos:position pos:line="64" pos:column="38"/></name></expr></argument>)<pos:position pos:line="64" pos:column="39"/></argument_list></call></expr>;<pos:position pos:line="64" pos:column="40"/></expr_stmt>


        <expr_stmt><expr><name pos:line="67" pos:column="9">ret<pos:position pos:line="67" pos:column="12"/></name> <operator pos:line="67" pos:column="13">=<pos:position pos:line="67" pos:column="14"/></operator> <call><name pos:line="67" pos:column="15">SSLize_Socket<pos:position pos:line="67" pos:column="28"/></name><argument_list pos:line="67" pos:column="28">(<argument><expr><name pos:line="67" pos:column="29">sockdes<pos:position pos:line="67" pos:column="36"/></name></expr></argument>, <argument><expr><name pos:line="67" pos:column="38">key<pos:position pos:line="67" pos:column="41"/></name></expr></argument>, <argument><expr><name pos:line="67" pos:column="43">r<pos:position pos:line="67" pos:column="44"/></name></expr></argument>)<pos:position pos:line="67" pos:column="45"/></argument_list></call></expr>;<pos:position pos:line="67" pos:column="46"/></expr_stmt>
        <if pos:line="68" pos:column="9">if <condition pos:line="68" pos:column="12">(<expr><operator pos:line="68" pos:column="13">!<pos:position pos:line="68" pos:column="14"/></operator><name pos:line="68" pos:column="14">ret<pos:position pos:line="68" pos:column="17"/></name></expr>)<pos:position pos:line="68" pos:column="18"/></condition><then pos:line="68" pos:column="18"> <block pos:line="68" pos:column="19">{
            <expr_stmt><expr><name><name pos:line="69" pos:column="13">csd_data<pos:position pos:line="69" pos:column="21"/></name><operator pos:line="69" pos:column="21">-&gt;<pos:position pos:line="69" pos:column="26"/></operator><name pos:line="69" pos:column="23">is_secure<pos:position pos:line="69" pos:column="32"/></name></name> <operator pos:line="69" pos:column="33">=<pos:position pos:line="69" pos:column="34"/></operator> <literal type="number" pos:line="69" pos:column="35">1<pos:position pos:line="69" pos:column="36"/></literal></expr>;<pos:position pos:line="69" pos:column="37"/></expr_stmt>
        }<pos:position pos:line="70" pos:column="10"/></block></then></if>
    }<pos:position pos:line="71" pos:column="6"/></block></then>
    <else pos:line="72" pos:column="5">else <block pos:line="72" pos:column="10">{
        <expr_stmt><expr><call><name pos:line="73" pos:column="9">ap_log_error<pos:position pos:line="73" pos:column="21"/></name><argument_list pos:line="73" pos:column="21">(<argument><expr><name pos:line="73" pos:column="22">APLOG_MARK<pos:position pos:line="73" pos:column="32"/></name></expr></argument>, <argument><expr><name pos:line="73" pos:column="34">APLOG_ERR<pos:position pos:line="73" pos:column="43"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="73" pos:column="45">0<pos:position pos:line="73" pos:column="46"/></literal></expr></argument>, <argument><expr><name><name pos:line="73" pos:column="48">r<pos:position pos:line="73" pos:column="49"/></name><operator pos:line="73" pos:column="49">-&gt;<pos:position pos:line="73" pos:column="54"/></operator><name pos:line="73" pos:column="51">server<pos:position pos:line="73" pos:column="57"/></name></name></expr></argument>, <argument><expr><call><name pos:line="73" pos:column="59">APLOGNO<pos:position pos:line="73" pos:column="66"/></name><argument_list pos:line="73" pos:column="66">(<argument><expr><literal type="number" pos:line="73" pos:column="67">02133<pos:position pos:line="73" pos:column="72"/></literal></expr></argument>)<pos:position pos:line="73" pos:column="73"/></argument_list></call>
                     <literal type="string" pos:line="74" pos:column="22">"Upgradeable socket handle not found"<pos:position pos:line="74" pos:column="59"/></literal></expr></argument>)<pos:position pos:line="74" pos:column="60"/></argument_list></call></expr>;<pos:position pos:line="74" pos:column="61"/></expr_stmt>
        <return pos:line="75" pos:column="9">return <expr><name pos:line="75" pos:column="16">AP_FILTER_ERROR<pos:position pos:line="75" pos:column="31"/></name></expr>;<pos:position pos:line="75" pos:column="32"/></return>
    }<pos:position pos:line="76" pos:column="6"/></block></else></if>

    <expr_stmt><expr><call><name pos:line="78" pos:column="5">ap_log_error<pos:position pos:line="78" pos:column="17"/></name><argument_list pos:line="78" pos:column="17">(<argument><expr><name pos:line="78" pos:column="18">APLOG_MARK<pos:position pos:line="78" pos:column="28"/></name></expr></argument>, <argument><expr><name pos:line="78" pos:column="30">APLOG_INFO<pos:position pos:line="78" pos:column="40"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="78" pos:column="42">0<pos:position pos:line="78" pos:column="43"/></literal></expr></argument>, <argument><expr><name><name pos:line="78" pos:column="45">r<pos:position pos:line="78" pos:column="46"/></name><operator pos:line="78" pos:column="46">-&gt;<pos:position pos:line="78" pos:column="51"/></operator><name pos:line="78" pos:column="48">server<pos:position pos:line="78" pos:column="54"/></name></name></expr></argument>, <argument><expr><call><name pos:line="78" pos:column="56">APLOGNO<pos:position pos:line="78" pos:column="63"/></name><argument_list pos:line="78" pos:column="63">(<argument><expr><literal type="number" pos:line="78" pos:column="64">02134<pos:position pos:line="78" pos:column="69"/></literal></expr></argument>)<pos:position pos:line="78" pos:column="70"/></argument_list></call>
                 <literal type="string" pos:line="79" pos:column="18">"Awaiting re-negotiation handshake"<pos:position pos:line="79" pos:column="53"/></literal></expr></argument>)<pos:position pos:line="79" pos:column="54"/></argument_list></call></expr>;<pos:position pos:line="79" pos:column="55"/></expr_stmt>

    <comment type="block" pos:line="81" pos:column="5">/* Now that we have initialized the ssl connection which added the ssl_io_filter,
       pass the brigade off to the connection based output filters so that the
       request can complete encrypted */</comment>
    <return pos:line="84" pos:column="5">return <expr><call><name pos:line="84" pos:column="12">ap_pass_brigade<pos:position pos:line="84" pos:column="27"/></name><argument_list pos:line="84" pos:column="27">(<argument><expr><name><name pos:line="84" pos:column="28">f<pos:position pos:line="84" pos:column="29"/></name><operator pos:line="84" pos:column="29">-&gt;<pos:position pos:line="84" pos:column="34"/></operator><name pos:line="84" pos:column="31">c<pos:position pos:line="84" pos:column="32"/></name><operator pos:line="84" pos:column="32">-&gt;<pos:position pos:line="84" pos:column="37"/></operator><name pos:line="84" pos:column="34">output_filters<pos:position pos:line="84" pos:column="48"/></name></name></expr></argument>, <argument><expr><name pos:line="84" pos:column="50">bb<pos:position pos:line="84" pos:column="52"/></name></expr></argument>)<pos:position pos:line="84" pos:column="53"/></argument_list></call></expr>;<pos:position pos:line="84" pos:column="54"/></return>
}<pos:position pos:line="85" pos:column="2"/></block></function></unit>

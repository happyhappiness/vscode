<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/httpd/gumtree/httpd_repos_function_2281_httpd-2.2.23.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">char<pos:position pos:line="1" pos:column="12"/></name> <modifier pos:line="1" pos:column="13">*<pos:position pos:line="1" pos:column="14"/></modifier></type><name pos:line="1" pos:column="14">original_uri<pos:position pos:line="1" pos:column="26"/></name><parameter_list pos:line="1" pos:column="26">(<parameter><decl><type><name pos:line="1" pos:column="27">request_rec<pos:position pos:line="1" pos:column="38"/></name> <modifier pos:line="1" pos:column="39">*<pos:position pos:line="1" pos:column="40"/></modifier></type><name pos:line="1" pos:column="40">r<pos:position pos:line="1" pos:column="41"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="42"/></parameter_list>
<block pos:line="2" pos:column="1">{
    <decl_stmt><decl><type><name pos:line="3" pos:column="5">char<pos:position pos:line="3" pos:column="9"/></name> <modifier pos:line="3" pos:column="10">*<pos:position pos:line="3" pos:column="11"/></modifier></type><name pos:line="3" pos:column="11">first<pos:position pos:line="3" pos:column="16"/></name></decl>, <modifier pos:line="3" pos:column="18">*<pos:position pos:line="3" pos:column="19"/></modifier><decl><type ref="prev"/><name pos:line="3" pos:column="19">last<pos:position pos:line="3" pos:column="23"/></name></decl>;<pos:position pos:line="3" pos:column="24"/></decl_stmt>

    <if pos:line="5" pos:column="5">if <condition pos:line="5" pos:column="8">(<expr><name><name pos:line="5" pos:column="9">r<pos:position pos:line="5" pos:column="10"/></name><operator pos:line="5" pos:column="10">-&gt;<pos:position pos:line="5" pos:column="15"/></operator><name pos:line="5" pos:column="12">the_request<pos:position pos:line="5" pos:column="23"/></name></name> <operator pos:line="5" pos:column="24">==<pos:position pos:line="5" pos:column="26"/></operator> <name pos:line="5" pos:column="27">NULL<pos:position pos:line="5" pos:column="31"/></name></expr>)<pos:position pos:line="5" pos:column="32"/></condition><then pos:line="5" pos:column="32"> <block pos:line="5" pos:column="33">{
        <return pos:line="6" pos:column="9">return <expr><operator pos:line="6" pos:column="16">(<pos:position pos:line="6" pos:column="17"/></operator><name pos:line="6" pos:column="17">char<pos:position pos:line="6" pos:column="21"/></name> <operator pos:line="6" pos:column="22">*<pos:position pos:line="6" pos:column="23"/></operator><operator pos:line="6" pos:column="23">)<pos:position pos:line="6" pos:column="24"/></operator> <call><name pos:line="6" pos:column="25">apr_pcalloc<pos:position pos:line="6" pos:column="36"/></name><argument_list pos:line="6" pos:column="36">(<argument><expr><name><name pos:line="6" pos:column="37">r<pos:position pos:line="6" pos:column="38"/></name><operator pos:line="6" pos:column="38">-&gt;<pos:position pos:line="6" pos:column="43"/></operator><name pos:line="6" pos:column="40">pool<pos:position pos:line="6" pos:column="44"/></name></name></expr></argument>, <argument><expr><literal type="number" pos:line="6" pos:column="46">1<pos:position pos:line="6" pos:column="47"/></literal></expr></argument>)<pos:position pos:line="6" pos:column="48"/></argument_list></call></expr>;<pos:position pos:line="6" pos:column="49"/></return>
    }<pos:position pos:line="7" pos:column="6"/></block></then></if>

    <expr_stmt><expr><name pos:line="9" pos:column="5">first<pos:position pos:line="9" pos:column="10"/></name> <operator pos:line="9" pos:column="11">=<pos:position pos:line="9" pos:column="12"/></operator> <name><name pos:line="9" pos:column="13">r<pos:position pos:line="9" pos:column="14"/></name><operator pos:line="9" pos:column="14">-&gt;<pos:position pos:line="9" pos:column="19"/></operator><name pos:line="9" pos:column="16">the_request<pos:position pos:line="9" pos:column="27"/></name></name></expr>;<pos:position pos:line="9" pos:column="28"/></expr_stmt>     <comment type="block" pos:line="9" pos:column="33">/* use the request-line */</comment>

    <while pos:line="11" pos:column="5">while <condition pos:line="11" pos:column="11">(<expr><operator pos:line="11" pos:column="12">*<pos:position pos:line="11" pos:column="13"/></operator><name pos:line="11" pos:column="13">first<pos:position pos:line="11" pos:column="18"/></name> <operator pos:line="11" pos:column="19">&amp;&amp;<pos:position pos:line="11" pos:column="29"/></operator> <operator pos:line="11" pos:column="22">!<pos:position pos:line="11" pos:column="23"/></operator><call><name pos:line="11" pos:column="23">apr_isspace<pos:position pos:line="11" pos:column="34"/></name><argument_list pos:line="11" pos:column="34">(<argument><expr><operator pos:line="11" pos:column="35">*<pos:position pos:line="11" pos:column="36"/></operator><name pos:line="11" pos:column="36">first<pos:position pos:line="11" pos:column="41"/></name></expr></argument>)<pos:position pos:line="11" pos:column="42"/></argument_list></call></expr>)<pos:position pos:line="11" pos:column="43"/></condition> <block pos:line="11" pos:column="44">{
        <expr_stmt><expr><operator pos:line="12" pos:column="9">++<pos:position pos:line="12" pos:column="11"/></operator><name pos:line="12" pos:column="11">first<pos:position pos:line="12" pos:column="16"/></name></expr>;<pos:position pos:line="12" pos:column="17"/></expr_stmt>                <comment type="block" pos:line="12" pos:column="33">/* skip over the method */</comment>
    }<pos:position pos:line="13" pos:column="6"/></block></while>
    <while pos:line="14" pos:column="5">while <condition pos:line="14" pos:column="11">(<expr><call><name pos:line="14" pos:column="12">apr_isspace<pos:position pos:line="14" pos:column="23"/></name><argument_list pos:line="14" pos:column="23">(<argument><expr><operator pos:line="14" pos:column="24">*<pos:position pos:line="14" pos:column="25"/></operator><name pos:line="14" pos:column="25">first<pos:position pos:line="14" pos:column="30"/></name></expr></argument>)<pos:position pos:line="14" pos:column="31"/></argument_list></call></expr>)<pos:position pos:line="14" pos:column="32"/></condition> <block pos:line="14" pos:column="33">{
        <expr_stmt><expr><operator pos:line="15" pos:column="9">++<pos:position pos:line="15" pos:column="11"/></operator><name pos:line="15" pos:column="11">first<pos:position pos:line="15" pos:column="16"/></name></expr>;<pos:position pos:line="15" pos:column="17"/></expr_stmt>                <comment type="block" pos:line="15" pos:column="33">/*   and the space(s)   */</comment>
    }<pos:position pos:line="16" pos:column="6"/></block></while>

    <expr_stmt><expr><name pos:line="18" pos:column="5">last<pos:position pos:line="18" pos:column="9"/></name> <operator pos:line="18" pos:column="10">=<pos:position pos:line="18" pos:column="11"/></operator> <name pos:line="18" pos:column="12">first<pos:position pos:line="18" pos:column="17"/></name></expr>;<pos:position pos:line="18" pos:column="18"/></expr_stmt>
    <while pos:line="19" pos:column="5">while <condition pos:line="19" pos:column="11">(<expr><operator pos:line="19" pos:column="12">*<pos:position pos:line="19" pos:column="13"/></operator><name pos:line="19" pos:column="13">last<pos:position pos:line="19" pos:column="17"/></name> <operator pos:line="19" pos:column="18">&amp;&amp;<pos:position pos:line="19" pos:column="28"/></operator> <operator pos:line="19" pos:column="21">!<pos:position pos:line="19" pos:column="22"/></operator><call><name pos:line="19" pos:column="22">apr_isspace<pos:position pos:line="19" pos:column="33"/></name><argument_list pos:line="19" pos:column="33">(<argument><expr><operator pos:line="19" pos:column="34">*<pos:position pos:line="19" pos:column="35"/></operator><name pos:line="19" pos:column="35">last<pos:position pos:line="19" pos:column="39"/></name></expr></argument>)<pos:position pos:line="19" pos:column="40"/></argument_list></call></expr>)<pos:position pos:line="19" pos:column="41"/></condition> <block pos:line="19" pos:column="42">{
        <expr_stmt><expr><operator pos:line="20" pos:column="9">++<pos:position pos:line="20" pos:column="11"/></operator><name pos:line="20" pos:column="11">last<pos:position pos:line="20" pos:column="15"/></name></expr>;<pos:position pos:line="20" pos:column="16"/></expr_stmt>                 <comment type="block" pos:line="20" pos:column="33">/* end at next whitespace */</comment>
    }<pos:position pos:line="21" pos:column="6"/></block></while>

    <return pos:line="23" pos:column="5">return <expr><call><name pos:line="23" pos:column="12">apr_pstrmemdup<pos:position pos:line="23" pos:column="26"/></name><argument_list pos:line="23" pos:column="26">(<argument><expr><name><name pos:line="23" pos:column="27">r<pos:position pos:line="23" pos:column="28"/></name><operator pos:line="23" pos:column="28">-&gt;<pos:position pos:line="23" pos:column="33"/></operator><name pos:line="23" pos:column="30">pool<pos:position pos:line="23" pos:column="34"/></name></name></expr></argument>, <argument><expr><name pos:line="23" pos:column="36">first<pos:position pos:line="23" pos:column="41"/></name></expr></argument>, <argument><expr><name pos:line="23" pos:column="43">last<pos:position pos:line="23" pos:column="47"/></name> <operator pos:line="23" pos:column="48">-<pos:position pos:line="23" pos:column="49"/></operator> <name pos:line="23" pos:column="50">first<pos:position pos:line="23" pos:column="55"/></name></expr></argument>)<pos:position pos:line="23" pos:column="56"/></argument_list></call></expr>;<pos:position pos:line="23" pos:column="57"/></return>
}<pos:position pos:line="24" pos:column="2"/></block></function></unit>

<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/httpd/gumtree/httpd_repos_function_362_httpd-2.4.3.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">int<pos:position pos:line="1" pos:column="11"/></name></type> <name pos:line="1" pos:column="12">dav_process_ctx_list<pos:position pos:line="1" pos:column="32"/></name><parameter_list pos:line="1" pos:column="32">(<parameter><function_decl><type><name pos:line="1" pos:column="33">void<pos:position pos:line="1" pos:column="37"/></name></type> (<modifier pos:line="1" pos:column="39">*<pos:position pos:line="1" pos:column="40"/></modifier><name pos:line="1" pos:column="40">func<pos:position pos:line="1" pos:column="44"/></name>)<parameter_list pos:line="1" pos:column="45">(<parameter><decl><type><name pos:line="1" pos:column="46">dav_prop_ctx<pos:position pos:line="1" pos:column="58"/></name> <modifier pos:line="1" pos:column="59">*<pos:position pos:line="1" pos:column="60"/></modifier></type><name pos:line="1" pos:column="60">ctx<pos:position pos:line="1" pos:column="63"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="64"/></parameter_list></function_decl></parameter>,
                                <parameter><decl><type><name pos:line="2" pos:column="33">apr_array_header_t<pos:position pos:line="2" pos:column="51"/></name> <modifier pos:line="2" pos:column="52">*<pos:position pos:line="2" pos:column="53"/></modifier></type><name pos:line="2" pos:column="53">ctx_list<pos:position pos:line="2" pos:column="61"/></name></decl></parameter>, <parameter><decl><type><name pos:line="2" pos:column="63">int<pos:position pos:line="2" pos:column="66"/></name></type> <name pos:line="2" pos:column="67">stop_on_error<pos:position pos:line="2" pos:column="80"/></name></decl></parameter>,
                                <parameter><decl><type><name pos:line="3" pos:column="33">int<pos:position pos:line="3" pos:column="36"/></name></type> <name pos:line="3" pos:column="37">reverse<pos:position pos:line="3" pos:column="44"/></name></decl></parameter>)<pos:position pos:line="3" pos:column="45"/></parameter_list>
<block pos:line="4" pos:column="1">{
    <decl_stmt><decl><type><name pos:line="5" pos:column="5">int<pos:position pos:line="5" pos:column="8"/></name></type> <name pos:line="5" pos:column="9">i<pos:position pos:line="5" pos:column="10"/></name> <init pos:line="5" pos:column="11">= <expr><name><name pos:line="5" pos:column="13">ctx_list<pos:position pos:line="5" pos:column="21"/></name><operator pos:line="5" pos:column="21">-&gt;<pos:position pos:line="5" pos:column="26"/></operator><name pos:line="5" pos:column="23">nelts<pos:position pos:line="5" pos:column="28"/></name></name></expr></init></decl>;<pos:position pos:line="5" pos:column="29"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="6" pos:column="5">dav_prop_ctx<pos:position pos:line="6" pos:column="17"/></name> <modifier pos:line="6" pos:column="18">*<pos:position pos:line="6" pos:column="19"/></modifier></type><name pos:line="6" pos:column="19">ctx<pos:position pos:line="6" pos:column="22"/></name> <init pos:line="6" pos:column="23">= <expr><operator pos:line="6" pos:column="25">(<pos:position pos:line="6" pos:column="26"/></operator><name pos:line="6" pos:column="26">dav_prop_ctx<pos:position pos:line="6" pos:column="38"/></name> <operator pos:line="6" pos:column="39">*<pos:position pos:line="6" pos:column="40"/></operator><operator pos:line="6" pos:column="40">)<pos:position pos:line="6" pos:column="41"/></operator><name><name pos:line="6" pos:column="41">ctx_list<pos:position pos:line="6" pos:column="49"/></name><operator pos:line="6" pos:column="49">-&gt;<pos:position pos:line="6" pos:column="54"/></operator><name pos:line="6" pos:column="51">elts<pos:position pos:line="6" pos:column="55"/></name></name></expr></init></decl>;<pos:position pos:line="6" pos:column="56"/></decl_stmt>

    <if pos:line="8" pos:column="5">if <condition pos:line="8" pos:column="8">(<expr><name pos:line="8" pos:column="9">reverse<pos:position pos:line="8" pos:column="16"/></name></expr>)<pos:position pos:line="8" pos:column="17"/></condition><then pos:line="8" pos:column="17">
        <block type="pseudo"><expr_stmt><expr><name pos:line="9" pos:column="9">ctx<pos:position pos:line="9" pos:column="12"/></name> <operator pos:line="9" pos:column="13">+=<pos:position pos:line="9" pos:column="15"/></operator> <name pos:line="9" pos:column="16">i<pos:position pos:line="9" pos:column="17"/></name></expr>;<pos:position pos:line="9" pos:column="18"/></expr_stmt></block></then></if>

    <while pos:line="11" pos:column="5">while <condition pos:line="11" pos:column="11">(<expr><name pos:line="11" pos:column="12">i<pos:position pos:line="11" pos:column="13"/></name><operator pos:line="11" pos:column="13">--<pos:position pos:line="11" pos:column="15"/></operator></expr>)<pos:position pos:line="11" pos:column="16"/></condition> <block pos:line="11" pos:column="17">{
        <if pos:line="12" pos:column="9">if <condition pos:line="12" pos:column="12">(<expr><name pos:line="12" pos:column="13">reverse<pos:position pos:line="12" pos:column="20"/></name></expr>)<pos:position pos:line="12" pos:column="21"/></condition><then pos:line="12" pos:column="21">
            <block type="pseudo"><expr_stmt><expr><operator pos:line="13" pos:column="13">--<pos:position pos:line="13" pos:column="15"/></operator><name pos:line="13" pos:column="15">ctx<pos:position pos:line="13" pos:column="18"/></name></expr>;<pos:position pos:line="13" pos:column="19"/></expr_stmt></block></then></if>

        <expr_stmt><expr><call pos:line="15" pos:column="9">(<modifier pos:line="15" pos:column="10">*<pos:position pos:line="15" pos:column="11"/></modifier><name pos:line="15" pos:column="11">func<pos:position pos:line="15" pos:column="15"/></name>)<argument_list pos:line="15" pos:column="16">(<argument><expr><name pos:line="15" pos:column="17">ctx<pos:position pos:line="15" pos:column="20"/></name></expr></argument>)<pos:position pos:line="15" pos:column="21"/></argument_list></call></expr>;<pos:position pos:line="15" pos:column="22"/></expr_stmt>
        <if pos:line="16" pos:column="9">if <condition pos:line="16" pos:column="12">(<expr><name pos:line="16" pos:column="13">stop_on_error<pos:position pos:line="16" pos:column="26"/></name> <operator pos:line="16" pos:column="27">&amp;&amp;<pos:position pos:line="16" pos:column="37"/></operator> <call><name pos:line="16" pos:column="30">DAV_PROP_CTX_HAS_ERR<pos:position pos:line="16" pos:column="50"/></name><argument_list pos:line="16" pos:column="50">(<argument><expr><operator pos:line="16" pos:column="51">*<pos:position pos:line="16" pos:column="52"/></operator><name pos:line="16" pos:column="52">ctx<pos:position pos:line="16" pos:column="55"/></name></expr></argument>)<pos:position pos:line="16" pos:column="56"/></argument_list></call></expr>)<pos:position pos:line="16" pos:column="57"/></condition><then pos:line="16" pos:column="57"> <block pos:line="16" pos:column="58">{
            <return pos:line="17" pos:column="13">return <expr><literal type="number" pos:line="17" pos:column="20">1<pos:position pos:line="17" pos:column="21"/></literal></expr>;<pos:position pos:line="17" pos:column="22"/></return>
        }<pos:position pos:line="18" pos:column="10"/></block></then></if>

        <if pos:line="20" pos:column="9">if <condition pos:line="20" pos:column="12">(<expr><operator pos:line="20" pos:column="13">!<pos:position pos:line="20" pos:column="14"/></operator><name pos:line="20" pos:column="14">reverse<pos:position pos:line="20" pos:column="21"/></name></expr>)<pos:position pos:line="20" pos:column="22"/></condition><then pos:line="20" pos:column="22">
            <block type="pseudo"><expr_stmt><expr><operator pos:line="21" pos:column="13">++<pos:position pos:line="21" pos:column="15"/></operator><name pos:line="21" pos:column="15">ctx<pos:position pos:line="21" pos:column="18"/></name></expr>;<pos:position pos:line="21" pos:column="19"/></expr_stmt></block></then></if>
    }<pos:position pos:line="22" pos:column="6"/></block></while>

    <return pos:line="24" pos:column="5">return <expr><literal type="number" pos:line="24" pos:column="12">0<pos:position pos:line="24" pos:column="13"/></literal></expr>;<pos:position pos:line="24" pos:column="14"/></return>
}<pos:position pos:line="25" pos:column="2"/></block></function></unit>

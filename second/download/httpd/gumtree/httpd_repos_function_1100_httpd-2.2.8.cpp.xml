<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/httpd/gumtree/httpd_repos_function_1100_httpd-2.2.8.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">void<pos:position pos:line="1" pos:column="12"/></name></type> <name pos:line="1" pos:column="13">splitout_queryargs<pos:position pos:line="1" pos:column="31"/></name><parameter_list pos:line="1" pos:column="31">(<parameter><decl><type><name pos:line="1" pos:column="32">request_rec<pos:position pos:line="1" pos:column="43"/></name> <modifier pos:line="1" pos:column="44">*<pos:position pos:line="1" pos:column="45"/></modifier></type><name pos:line="1" pos:column="45">r<pos:position pos:line="1" pos:column="46"/></name></decl></parameter>, <parameter><decl><type><name pos:line="1" pos:column="48">int<pos:position pos:line="1" pos:column="51"/></name></type> <name pos:line="1" pos:column="52">qsappend<pos:position pos:line="1" pos:column="60"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="61"/></parameter_list>
<block pos:line="2" pos:column="1">{
    <decl_stmt><decl><type><name pos:line="3" pos:column="5">char<pos:position pos:line="3" pos:column="9"/></name> <modifier pos:line="3" pos:column="10">*<pos:position pos:line="3" pos:column="11"/></modifier></type><name pos:line="3" pos:column="11">q<pos:position pos:line="3" pos:column="12"/></name></decl>;<pos:position pos:line="3" pos:column="13"/></decl_stmt>

    <comment type="block" pos:line="5" pos:column="5">/* don't touch, unless it's an http or mailto URL.
     * See RFC 1738 and RFC 2368.
     */</comment>
    <if pos:line="8" pos:column="5">if <condition pos:line="8" pos:column="8">(<expr><call><name pos:line="8" pos:column="9">is_absolute_uri<pos:position pos:line="8" pos:column="24"/></name><argument_list pos:line="8" pos:column="24">(<argument><expr><name><name pos:line="8" pos:column="25">r<pos:position pos:line="8" pos:column="26"/></name><operator pos:line="8" pos:column="26">-&gt;<pos:position pos:line="8" pos:column="31"/></operator><name pos:line="8" pos:column="28">filename<pos:position pos:line="8" pos:column="36"/></name></name></expr></argument>)<pos:position pos:line="8" pos:column="37"/></argument_list></call>
        <operator pos:line="9" pos:column="9">&amp;&amp;<pos:position pos:line="9" pos:column="19"/></operator> <call><name pos:line="9" pos:column="12">strncasecmp<pos:position pos:line="9" pos:column="23"/></name><argument_list pos:line="9" pos:column="23">(<argument><expr><name><name pos:line="9" pos:column="24">r<pos:position pos:line="9" pos:column="25"/></name><operator pos:line="9" pos:column="25">-&gt;<pos:position pos:line="9" pos:column="30"/></operator><name pos:line="9" pos:column="27">filename<pos:position pos:line="9" pos:column="35"/></name></name></expr></argument>, <argument><expr><literal type="string" pos:line="9" pos:column="37">"ajp"<pos:position pos:line="9" pos:column="42"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="9" pos:column="44">3<pos:position pos:line="9" pos:column="45"/></literal></expr></argument>)<pos:position pos:line="9" pos:column="46"/></argument_list></call>
        <operator pos:line="10" pos:column="9">&amp;&amp;<pos:position pos:line="10" pos:column="19"/></operator> <call><name pos:line="10" pos:column="12">strncasecmp<pos:position pos:line="10" pos:column="23"/></name><argument_list pos:line="10" pos:column="23">(<argument><expr><name><name pos:line="10" pos:column="24">r<pos:position pos:line="10" pos:column="25"/></name><operator pos:line="10" pos:column="25">-&gt;<pos:position pos:line="10" pos:column="30"/></operator><name pos:line="10" pos:column="27">filename<pos:position pos:line="10" pos:column="35"/></name></name></expr></argument>, <argument><expr><literal type="string" pos:line="10" pos:column="37">"balancer"<pos:position pos:line="10" pos:column="47"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="10" pos:column="49">8<pos:position pos:line="10" pos:column="50"/></literal></expr></argument>)<pos:position pos:line="10" pos:column="51"/></argument_list></call>
        <operator pos:line="11" pos:column="9">&amp;&amp;<pos:position pos:line="11" pos:column="19"/></operator> <call><name pos:line="11" pos:column="12">strncasecmp<pos:position pos:line="11" pos:column="23"/></name><argument_list pos:line="11" pos:column="23">(<argument><expr><name><name pos:line="11" pos:column="24">r<pos:position pos:line="11" pos:column="25"/></name><operator pos:line="11" pos:column="25">-&gt;<pos:position pos:line="11" pos:column="30"/></operator><name pos:line="11" pos:column="27">filename<pos:position pos:line="11" pos:column="35"/></name></name></expr></argument>, <argument><expr><literal type="string" pos:line="11" pos:column="37">"http"<pos:position pos:line="11" pos:column="43"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="11" pos:column="45">4<pos:position pos:line="11" pos:column="46"/></literal></expr></argument>)<pos:position pos:line="11" pos:column="47"/></argument_list></call>
        <operator pos:line="12" pos:column="9">&amp;&amp;<pos:position pos:line="12" pos:column="19"/></operator> <call><name pos:line="12" pos:column="12">strncasecmp<pos:position pos:line="12" pos:column="23"/></name><argument_list pos:line="12" pos:column="23">(<argument><expr><name><name pos:line="12" pos:column="24">r<pos:position pos:line="12" pos:column="25"/></name><operator pos:line="12" pos:column="25">-&gt;<pos:position pos:line="12" pos:column="30"/></operator><name pos:line="12" pos:column="27">filename<pos:position pos:line="12" pos:column="35"/></name></name></expr></argument>, <argument><expr><literal type="string" pos:line="12" pos:column="37">"mailto"<pos:position pos:line="12" pos:column="45"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="12" pos:column="47">6<pos:position pos:line="12" pos:column="48"/></literal></expr></argument>)<pos:position pos:line="12" pos:column="49"/></argument_list></call></expr>)<pos:position pos:line="12" pos:column="50"/></condition><then pos:line="12" pos:column="50"> <block pos:line="12" pos:column="51">{
        <expr_stmt><expr><name><name pos:line="13" pos:column="9">r<pos:position pos:line="13" pos:column="10"/></name><operator pos:line="13" pos:column="10">-&gt;<pos:position pos:line="13" pos:column="15"/></operator><name pos:line="13" pos:column="12">args<pos:position pos:line="13" pos:column="16"/></name></name> <operator pos:line="13" pos:column="17">=<pos:position pos:line="13" pos:column="18"/></operator> <name pos:line="13" pos:column="19">NULL<pos:position pos:line="13" pos:column="23"/></name></expr>;<pos:position pos:line="13" pos:column="24"/></expr_stmt> <comment type="block" pos:line="13" pos:column="25">/* forget the query that's still flying around */</comment>
        <return pos:line="14" pos:column="9">return;<pos:position pos:line="14" pos:column="16"/></return>
    }<pos:position pos:line="15" pos:column="6"/></block></then></if>

    <expr_stmt><expr><name pos:line="17" pos:column="5">q<pos:position pos:line="17" pos:column="6"/></name> <operator pos:line="17" pos:column="7">=<pos:position pos:line="17" pos:column="8"/></operator> <call><name pos:line="17" pos:column="9">ap_strchr<pos:position pos:line="17" pos:column="18"/></name><argument_list pos:line="17" pos:column="18">(<argument><expr><name><name pos:line="17" pos:column="19">r<pos:position pos:line="17" pos:column="20"/></name><operator pos:line="17" pos:column="20">-&gt;<pos:position pos:line="17" pos:column="25"/></operator><name pos:line="17" pos:column="22">filename<pos:position pos:line="17" pos:column="30"/></name></name></expr></argument>, <argument><expr><literal type="char" pos:line="17" pos:column="32">'?'<pos:position pos:line="17" pos:column="35"/></literal></expr></argument>)<pos:position pos:line="17" pos:column="36"/></argument_list></call></expr>;<pos:position pos:line="17" pos:column="37"/></expr_stmt>
    <if pos:line="18" pos:column="5">if <condition pos:line="18" pos:column="8">(<expr><name pos:line="18" pos:column="9">q<pos:position pos:line="18" pos:column="10"/></name> <operator pos:line="18" pos:column="11">!=<pos:position pos:line="18" pos:column="13"/></operator> <name pos:line="18" pos:column="14">NULL<pos:position pos:line="18" pos:column="18"/></name></expr>)<pos:position pos:line="18" pos:column="19"/></condition><then pos:line="18" pos:column="19"> <block pos:line="18" pos:column="20">{
        <decl_stmt><decl><type><name pos:line="19" pos:column="9">char<pos:position pos:line="19" pos:column="13"/></name> <modifier pos:line="19" pos:column="14">*<pos:position pos:line="19" pos:column="15"/></modifier></type><name pos:line="19" pos:column="15">olduri<pos:position pos:line="19" pos:column="21"/></name></decl>;<pos:position pos:line="19" pos:column="22"/></decl_stmt>
        <decl_stmt><decl><type><name pos:line="20" pos:column="9">apr_size_t<pos:position pos:line="20" pos:column="19"/></name></type> <name pos:line="20" pos:column="20">len<pos:position pos:line="20" pos:column="23"/></name></decl>;<pos:position pos:line="20" pos:column="24"/></decl_stmt>

        <expr_stmt><expr><name pos:line="22" pos:column="9">olduri<pos:position pos:line="22" pos:column="15"/></name> <operator pos:line="22" pos:column="16">=<pos:position pos:line="22" pos:column="17"/></operator> <call><name pos:line="22" pos:column="18">apr_pstrdup<pos:position pos:line="22" pos:column="29"/></name><argument_list pos:line="22" pos:column="29">(<argument><expr><name><name pos:line="22" pos:column="30">r<pos:position pos:line="22" pos:column="31"/></name><operator pos:line="22" pos:column="31">-&gt;<pos:position pos:line="22" pos:column="36"/></operator><name pos:line="22" pos:column="33">pool<pos:position pos:line="22" pos:column="37"/></name></name></expr></argument>, <argument><expr><name><name pos:line="22" pos:column="39">r<pos:position pos:line="22" pos:column="40"/></name><operator pos:line="22" pos:column="40">-&gt;<pos:position pos:line="22" pos:column="45"/></operator><name pos:line="22" pos:column="42">filename<pos:position pos:line="22" pos:column="50"/></name></name></expr></argument>)<pos:position pos:line="22" pos:column="51"/></argument_list></call></expr>;<pos:position pos:line="22" pos:column="52"/></expr_stmt>
        <expr_stmt><expr><operator pos:line="23" pos:column="9">*<pos:position pos:line="23" pos:column="10"/></operator><name pos:line="23" pos:column="10">q<pos:position pos:line="23" pos:column="11"/></name><operator pos:line="23" pos:column="11">++<pos:position pos:line="23" pos:column="13"/></operator> <operator pos:line="23" pos:column="14">=<pos:position pos:line="23" pos:column="15"/></operator> <literal type="char" pos:line="23" pos:column="16">'\0'<pos:position pos:line="23" pos:column="20"/></literal></expr>;<pos:position pos:line="23" pos:column="21"/></expr_stmt>
        <if pos:line="24" pos:column="9">if <condition pos:line="24" pos:column="12">(<expr><name pos:line="24" pos:column="13">qsappend<pos:position pos:line="24" pos:column="21"/></name></expr>)<pos:position pos:line="24" pos:column="22"/></condition><then pos:line="24" pos:column="22"> <block pos:line="24" pos:column="23">{
            <expr_stmt><expr><name><name pos:line="25" pos:column="13">r<pos:position pos:line="25" pos:column="14"/></name><operator pos:line="25" pos:column="14">-&gt;<pos:position pos:line="25" pos:column="19"/></operator><name pos:line="25" pos:column="16">args<pos:position pos:line="25" pos:column="20"/></name></name> <operator pos:line="25" pos:column="21">=<pos:position pos:line="25" pos:column="22"/></operator> <call><name pos:line="25" pos:column="23">apr_pstrcat<pos:position pos:line="25" pos:column="34"/></name><argument_list pos:line="25" pos:column="34">(<argument><expr><name><name pos:line="25" pos:column="35">r<pos:position pos:line="25" pos:column="36"/></name><operator pos:line="25" pos:column="36">-&gt;<pos:position pos:line="25" pos:column="41"/></operator><name pos:line="25" pos:column="38">pool<pos:position pos:line="25" pos:column="42"/></name></name></expr></argument>, <argument><expr><name pos:line="25" pos:column="44">q<pos:position pos:line="25" pos:column="45"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="25" pos:column="47">"&amp;"<pos:position pos:line="25" pos:column="54"/></literal></expr></argument>, <argument><expr><name><name pos:line="25" pos:column="52">r<pos:position pos:line="25" pos:column="53"/></name><operator pos:line="25" pos:column="53">-&gt;<pos:position pos:line="25" pos:column="58"/></operator><name pos:line="25" pos:column="55">args<pos:position pos:line="25" pos:column="59"/></name></name></expr></argument>, <argument><expr><name pos:line="25" pos:column="61">NULL<pos:position pos:line="25" pos:column="65"/></name></expr></argument>)<pos:position pos:line="25" pos:column="66"/></argument_list></call></expr>;<pos:position pos:line="25" pos:column="67"/></expr_stmt>
        }<pos:position pos:line="26" pos:column="10"/></block></then>
        <else pos:line="27" pos:column="9">else <block pos:line="27" pos:column="14">{
            <expr_stmt><expr><name><name pos:line="28" pos:column="13">r<pos:position pos:line="28" pos:column="14"/></name><operator pos:line="28" pos:column="14">-&gt;<pos:position pos:line="28" pos:column="19"/></operator><name pos:line="28" pos:column="16">args<pos:position pos:line="28" pos:column="20"/></name></name> <operator pos:line="28" pos:column="21">=<pos:position pos:line="28" pos:column="22"/></operator> <call><name pos:line="28" pos:column="23">apr_pstrdup<pos:position pos:line="28" pos:column="34"/></name><argument_list pos:line="28" pos:column="34">(<argument><expr><name><name pos:line="28" pos:column="35">r<pos:position pos:line="28" pos:column="36"/></name><operator pos:line="28" pos:column="36">-&gt;<pos:position pos:line="28" pos:column="41"/></operator><name pos:line="28" pos:column="38">pool<pos:position pos:line="28" pos:column="42"/></name></name></expr></argument>, <argument><expr><name pos:line="28" pos:column="44">q<pos:position pos:line="28" pos:column="45"/></name></expr></argument>)<pos:position pos:line="28" pos:column="46"/></argument_list></call></expr>;<pos:position pos:line="28" pos:column="47"/></expr_stmt>
        }<pos:position pos:line="29" pos:column="10"/></block></else></if>

        <expr_stmt><expr><name pos:line="31" pos:column="9">len<pos:position pos:line="31" pos:column="12"/></name> <operator pos:line="31" pos:column="13">=<pos:position pos:line="31" pos:column="14"/></operator> <call><name pos:line="31" pos:column="15">strlen<pos:position pos:line="31" pos:column="21"/></name><argument_list pos:line="31" pos:column="21">(<argument><expr><name><name pos:line="31" pos:column="22">r<pos:position pos:line="31" pos:column="23"/></name><operator pos:line="31" pos:column="23">-&gt;<pos:position pos:line="31" pos:column="28"/></operator><name pos:line="31" pos:column="25">args<pos:position pos:line="31" pos:column="29"/></name></name></expr></argument>)<pos:position pos:line="31" pos:column="30"/></argument_list></call></expr>;<pos:position pos:line="31" pos:column="31"/></expr_stmt>
        <if pos:line="32" pos:column="9">if <condition pos:line="32" pos:column="12">(<expr><operator pos:line="32" pos:column="13">!<pos:position pos:line="32" pos:column="14"/></operator><name pos:line="32" pos:column="14">len<pos:position pos:line="32" pos:column="17"/></name></expr>)<pos:position pos:line="32" pos:column="18"/></condition><then pos:line="32" pos:column="18"> <block pos:line="32" pos:column="19">{
            <expr_stmt><expr><name><name pos:line="33" pos:column="13">r<pos:position pos:line="33" pos:column="14"/></name><operator pos:line="33" pos:column="14">-&gt;<pos:position pos:line="33" pos:column="19"/></operator><name pos:line="33" pos:column="16">args<pos:position pos:line="33" pos:column="20"/></name></name> <operator pos:line="33" pos:column="21">=<pos:position pos:line="33" pos:column="22"/></operator> <name pos:line="33" pos:column="23">NULL<pos:position pos:line="33" pos:column="27"/></name></expr>;<pos:position pos:line="33" pos:column="28"/></expr_stmt>
        }<pos:position pos:line="34" pos:column="10"/></block></then>
        <elseif pos:line="35" pos:column="9">else <if pos:line="35" pos:column="14">if <condition pos:line="35" pos:column="17">(<expr><name><name pos:line="35" pos:column="18">r<pos:position pos:line="35" pos:column="19"/></name><operator pos:line="35" pos:column="19">-&gt;<pos:position pos:line="35" pos:column="24"/></operator><name pos:line="35" pos:column="21">args<pos:position pos:line="35" pos:column="25"/></name><index pos:line="35" pos:column="25">[<expr><name pos:line="35" pos:column="26">len<pos:position pos:line="35" pos:column="29"/></name><operator pos:line="35" pos:column="29">-<pos:position pos:line="35" pos:column="30"/></operator><literal type="number" pos:line="35" pos:column="30">1<pos:position pos:line="35" pos:column="31"/></literal></expr>]<pos:position pos:line="35" pos:column="32"/></index></name> <operator pos:line="35" pos:column="33">==<pos:position pos:line="35" pos:column="35"/></operator> <literal type="char" pos:line="35" pos:column="36">'&amp;'<pos:position pos:line="35" pos:column="43"/></literal></expr>)<pos:position pos:line="35" pos:column="40"/></condition><then pos:line="35" pos:column="40"> <block pos:line="35" pos:column="41">{
            <expr_stmt><expr><name><name pos:line="36" pos:column="13">r<pos:position pos:line="36" pos:column="14"/></name><operator pos:line="36" pos:column="14">-&gt;<pos:position pos:line="36" pos:column="19"/></operator><name pos:line="36" pos:column="16">args<pos:position pos:line="36" pos:column="20"/></name><index pos:line="36" pos:column="20">[<expr><name pos:line="36" pos:column="21">len<pos:position pos:line="36" pos:column="24"/></name><operator pos:line="36" pos:column="24">-<pos:position pos:line="36" pos:column="25"/></operator><literal type="number" pos:line="36" pos:column="25">1<pos:position pos:line="36" pos:column="26"/></literal></expr>]<pos:position pos:line="36" pos:column="27"/></index></name> <operator pos:line="36" pos:column="28">=<pos:position pos:line="36" pos:column="29"/></operator> <literal type="char" pos:line="36" pos:column="30">'\0'<pos:position pos:line="36" pos:column="34"/></literal></expr>;<pos:position pos:line="36" pos:column="35"/></expr_stmt>
        }<pos:position pos:line="37" pos:column="10"/></block></then></if></elseif></if>

        <expr_stmt><expr><call><name pos:line="39" pos:column="9">rewritelog<pos:position pos:line="39" pos:column="19"/></name><argument_list pos:line="39" pos:column="19">(<argument><expr><operator pos:line="39" pos:column="20">(<pos:position pos:line="39" pos:column="21"/></operator><name pos:line="39" pos:column="21">r<pos:position pos:line="39" pos:column="22"/></name><operator pos:line="39" pos:column="22">,<pos:position pos:line="39" pos:column="23"/></operator> <literal type="number" pos:line="39" pos:column="24">3<pos:position pos:line="39" pos:column="25"/></literal><operator pos:line="39" pos:column="25">,<pos:position pos:line="39" pos:column="26"/></operator> <name pos:line="39" pos:column="27">NULL<pos:position pos:line="39" pos:column="31"/></name><operator pos:line="39" pos:column="31">,<pos:position pos:line="39" pos:column="32"/></operator> <literal type="string" pos:line="39" pos:column="33">"split uri=%s -&gt; uri=%s, args=%s"<pos:position pos:line="39" pos:column="69"/></literal><operator pos:line="39" pos:column="66">,<pos:position pos:line="39" pos:column="67"/></operator> <name pos:line="39" pos:column="68">olduri<pos:position pos:line="39" pos:column="74"/></name><operator pos:line="39" pos:column="74">,<pos:position pos:line="39" pos:column="75"/></operator>
                    <name><name pos:line="40" pos:column="21">r<pos:position pos:line="40" pos:column="22"/></name><operator pos:line="40" pos:column="22">-&gt;<pos:position pos:line="40" pos:column="27"/></operator><name pos:line="40" pos:column="24">filename<pos:position pos:line="40" pos:column="32"/></name></name><operator pos:line="40" pos:column="32">,<pos:position pos:line="40" pos:column="33"/></operator> <ternary><condition><expr><name><name pos:line="40" pos:column="34">r<pos:position pos:line="40" pos:column="35"/></name><operator pos:line="40" pos:column="35">-&gt;<pos:position pos:line="40" pos:column="40"/></operator><name pos:line="40" pos:column="37">args<pos:position pos:line="40" pos:column="41"/></name></name></expr> ?<pos:position pos:line="40" pos:column="43"/></condition><then pos:line="40" pos:column="43"> <expr><name><name pos:line="40" pos:column="44">r<pos:position pos:line="40" pos:column="45"/></name><operator pos:line="40" pos:column="45">-&gt;<pos:position pos:line="40" pos:column="50"/></operator><name pos:line="40" pos:column="47">args<pos:position pos:line="40" pos:column="51"/></name></name></expr> <pos:position pos:line="40" pos:column="52"/></then><else pos:line="40" pos:column="52">: <expr><literal type="string" pos:line="40" pos:column="54">"&lt;none&gt;"<pos:position pos:line="40" pos:column="68"/></literal></expr></else></ternary><operator pos:line="40" pos:column="62">)<pos:position pos:line="40" pos:column="63"/></operator></expr></argument>)<pos:position pos:line="40" pos:column="64"/></argument_list></call></expr>;<pos:position pos:line="40" pos:column="65"/></expr_stmt>
    }<pos:position pos:line="41" pos:column="6"/></block></then></if>

    <return pos:line="43" pos:column="5">return;<pos:position pos:line="43" pos:column="12"/></return>
}<pos:position pos:line="44" pos:column="2"/></block></function></unit>

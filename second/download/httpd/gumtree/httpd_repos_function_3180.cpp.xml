<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/httpd/gumtree/httpd_repos_function_3180.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">apr_status_t<pos:position pos:line="1" pos:column="20"/></name></type> <name pos:line="1" pos:column="21">queue_info_cleanup<pos:position pos:line="1" pos:column="39"/></name><parameter_list pos:line="1" pos:column="39">(<parameter><decl><type><name pos:line="1" pos:column="40">void<pos:position pos:line="1" pos:column="44"/></name> <modifier pos:line="1" pos:column="45">*<pos:position pos:line="1" pos:column="46"/></modifier></type><name pos:line="1" pos:column="46">data_<pos:position pos:line="1" pos:column="51"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="52"/></parameter_list>
<block pos:line="2" pos:column="1">{
    <decl_stmt><decl><type><name pos:line="3" pos:column="5">fd_queue_info_t<pos:position pos:line="3" pos:column="20"/></name> <modifier pos:line="3" pos:column="21">*<pos:position pos:line="3" pos:column="22"/></modifier></type><name pos:line="3" pos:column="22">qi<pos:position pos:line="3" pos:column="24"/></name> <init pos:line="3" pos:column="25">= <expr><name pos:line="3" pos:column="27">data_<pos:position pos:line="3" pos:column="32"/></name></expr></init></decl>;<pos:position pos:line="3" pos:column="33"/></decl_stmt>
    <expr_stmt><expr><call><name pos:line="4" pos:column="5">apr_thread_cond_destroy<pos:position pos:line="4" pos:column="28"/></name><argument_list pos:line="4" pos:column="28">(<argument><expr><name><name pos:line="4" pos:column="29">qi<pos:position pos:line="4" pos:column="31"/></name><operator pos:line="4" pos:column="31">-&gt;<pos:position pos:line="4" pos:column="36"/></operator><name pos:line="4" pos:column="33">wait_for_idler<pos:position pos:line="4" pos:column="47"/></name></name></expr></argument>)<pos:position pos:line="4" pos:column="48"/></argument_list></call></expr>;<pos:position pos:line="4" pos:column="49"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="5" pos:column="5">apr_thread_mutex_destroy<pos:position pos:line="5" pos:column="29"/></name><argument_list pos:line="5" pos:column="29">(<argument><expr><name><name pos:line="5" pos:column="30">qi<pos:position pos:line="5" pos:column="32"/></name><operator pos:line="5" pos:column="32">-&gt;<pos:position pos:line="5" pos:column="37"/></operator><name pos:line="5" pos:column="34">idlers_mutex<pos:position pos:line="5" pos:column="46"/></name></name></expr></argument>)<pos:position pos:line="5" pos:column="47"/></argument_list></call></expr>;<pos:position pos:line="5" pos:column="48"/></expr_stmt>

    <comment type="block" pos:line="7" pos:column="5">/* Clean up any pools in the recycled list */</comment>
    <for pos:line="8" pos:column="5">for <control pos:line="8" pos:column="9">(<init pos:line="8" pos:column="10">;<pos:position pos:line="8" pos:column="11"/></init><condition pos:line="8" pos:column="11">;<pos:position pos:line="8" pos:column="12"/></condition><incr/>)<pos:position pos:line="8" pos:column="13"/></control> <block pos:line="8" pos:column="14">{
        <decl_stmt><decl><type><name><name pos:line="9" pos:column="9">struct<pos:position pos:line="9" pos:column="15"/></name> <name pos:line="9" pos:column="16">recycled_pool<pos:position pos:line="9" pos:column="29"/></name></name> <modifier pos:line="9" pos:column="30">*<pos:position pos:line="9" pos:column="31"/></modifier></type><name pos:line="9" pos:column="31">first_pool<pos:position pos:line="9" pos:column="41"/></name> <init pos:line="9" pos:column="42">= <expr><name><name pos:line="9" pos:column="44">qi<pos:position pos:line="9" pos:column="46"/></name><operator pos:line="9" pos:column="46">-&gt;<pos:position pos:line="9" pos:column="51"/></operator><name pos:line="9" pos:column="48">recycled_pools<pos:position pos:line="9" pos:column="62"/></name></name></expr></init></decl>;<pos:position pos:line="9" pos:column="63"/></decl_stmt>
        <if pos:line="10" pos:column="9">if <condition pos:line="10" pos:column="12">(<expr><name pos:line="10" pos:column="13">first_pool<pos:position pos:line="10" pos:column="23"/></name> <operator pos:line="10" pos:column="24">==<pos:position pos:line="10" pos:column="26"/></operator> <name pos:line="10" pos:column="27">NULL<pos:position pos:line="10" pos:column="31"/></name></expr>)<pos:position pos:line="10" pos:column="32"/></condition><then pos:line="10" pos:column="32"> <block pos:line="10" pos:column="33">{
            <break pos:line="11" pos:column="13">break;<pos:position pos:line="11" pos:column="19"/></break>
        }<pos:position pos:line="12" pos:column="10"/></block></then></if>
        <if pos:line="13" pos:column="9">if <condition pos:line="13" pos:column="12">(<expr><call><name pos:line="13" pos:column="13">apr_atomic_casptr<pos:position pos:line="13" pos:column="30"/></name><argument_list pos:line="13" pos:column="30">(<argument><expr><operator pos:line="13" pos:column="31">(<pos:position pos:line="13" pos:column="32"/></operator><name pos:line="13" pos:column="32">void<pos:position pos:line="13" pos:column="36"/></name><operator pos:line="13" pos:column="36">*<pos:position pos:line="13" pos:column="37"/></operator><operator pos:line="13" pos:column="37">)<pos:position pos:line="13" pos:column="38"/></operator><operator pos:line="13" pos:column="38">&amp;<pos:position pos:line="13" pos:column="43"/></operator><operator pos:line="13" pos:column="39">(<pos:position pos:line="13" pos:column="40"/></operator><name><name pos:line="13" pos:column="40">qi<pos:position pos:line="13" pos:column="42"/></name><operator pos:line="13" pos:column="42">-&gt;<pos:position pos:line="13" pos:column="47"/></operator><name pos:line="13" pos:column="44">recycled_pools<pos:position pos:line="13" pos:column="58"/></name></name><operator pos:line="13" pos:column="58">)<pos:position pos:line="13" pos:column="59"/></operator></expr></argument>, <argument><expr><name><name pos:line="13" pos:column="61">first_pool<pos:position pos:line="13" pos:column="71"/></name><operator pos:line="13" pos:column="71">-&gt;<pos:position pos:line="13" pos:column="76"/></operator><name pos:line="13" pos:column="73">next<pos:position pos:line="13" pos:column="77"/></name></name></expr></argument>,
                              <argument><expr><name pos:line="14" pos:column="31">first_pool<pos:position pos:line="14" pos:column="41"/></name></expr></argument>)<pos:position pos:line="14" pos:column="42"/></argument_list></call> <operator pos:line="14" pos:column="43">==<pos:position pos:line="14" pos:column="45"/></operator> <name pos:line="14" pos:column="46">first_pool<pos:position pos:line="14" pos:column="56"/></name></expr>)<pos:position pos:line="14" pos:column="57"/></condition><then pos:line="14" pos:column="57"> <block pos:line="14" pos:column="58">{
            <expr_stmt><expr><call><name pos:line="15" pos:column="13">apr_pool_destroy<pos:position pos:line="15" pos:column="29"/></name><argument_list pos:line="15" pos:column="29">(<argument><expr><name><name pos:line="15" pos:column="30">first_pool<pos:position pos:line="15" pos:column="40"/></name><operator pos:line="15" pos:column="40">-&gt;<pos:position pos:line="15" pos:column="45"/></operator><name pos:line="15" pos:column="42">pool<pos:position pos:line="15" pos:column="46"/></name></name></expr></argument>)<pos:position pos:line="15" pos:column="47"/></argument_list></call></expr>;<pos:position pos:line="15" pos:column="48"/></expr_stmt>
        }<pos:position pos:line="16" pos:column="10"/></block></then></if>
    }<pos:position pos:line="17" pos:column="6"/></block></for>

    <return pos:line="19" pos:column="5">return <expr><name pos:line="19" pos:column="12">APR_SUCCESS<pos:position pos:line="19" pos:column="23"/></name></expr>;<pos:position pos:line="19" pos:column="24"/></return>
}<pos:position pos:line="20" pos:column="2"/></block></function></unit>

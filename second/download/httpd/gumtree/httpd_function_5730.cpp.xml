<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/httpd/gumtree/httpd_function_5730.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">char<pos:position pos:line="1" pos:column="12"/></name> <modifier pos:line="1" pos:column="13">*<pos:position pos:line="1" pos:column="14"/></modifier></type><name pos:line="1" pos:column="14">lookup_map_dbd<pos:position pos:line="1" pos:column="28"/></name><parameter_list pos:line="1" pos:column="28">(<parameter><decl><type><name pos:line="1" pos:column="29">request_rec<pos:position pos:line="1" pos:column="40"/></name> <modifier pos:line="1" pos:column="41">*<pos:position pos:line="1" pos:column="42"/></modifier></type><name pos:line="1" pos:column="42">r<pos:position pos:line="1" pos:column="43"/></name></decl></parameter>, <parameter><decl><type><name pos:line="1" pos:column="45">char<pos:position pos:line="1" pos:column="49"/></name> <modifier pos:line="1" pos:column="50">*<pos:position pos:line="1" pos:column="51"/></modifier></type><name pos:line="1" pos:column="51">key<pos:position pos:line="1" pos:column="54"/></name></decl></parameter>, <parameter><decl><type><specifier pos:line="1" pos:column="56">const<pos:position pos:line="1" pos:column="61"/></specifier> <name pos:line="1" pos:column="62">char<pos:position pos:line="1" pos:column="66"/></name> <modifier pos:line="1" pos:column="67">*<pos:position pos:line="1" pos:column="68"/></modifier></type><name pos:line="1" pos:column="68">label<pos:position pos:line="1" pos:column="73"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="74"/></parameter_list>
<block pos:line="2" pos:column="1">{
    <decl_stmt><decl><type><name pos:line="3" pos:column="5">apr_status_t<pos:position pos:line="3" pos:column="17"/></name></type> <name pos:line="3" pos:column="18">rv<pos:position pos:line="3" pos:column="20"/></name></decl>;<pos:position pos:line="3" pos:column="21"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="4" pos:column="5">apr_dbd_prepared_t<pos:position pos:line="4" pos:column="23"/></name> <modifier pos:line="4" pos:column="24">*<pos:position pos:line="4" pos:column="25"/></modifier></type><name pos:line="4" pos:column="25">stmt<pos:position pos:line="4" pos:column="29"/></name></decl>;<pos:position pos:line="4" pos:column="30"/></decl_stmt>
    <decl_stmt><decl><type><specifier pos:line="5" pos:column="5">const<pos:position pos:line="5" pos:column="10"/></specifier> <name pos:line="5" pos:column="11">char<pos:position pos:line="5" pos:column="15"/></name> <modifier pos:line="5" pos:column="16">*<pos:position pos:line="5" pos:column="17"/></modifier></type><name pos:line="5" pos:column="17">errmsg<pos:position pos:line="5" pos:column="23"/></name></decl>;<pos:position pos:line="5" pos:column="24"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="6" pos:column="5">apr_dbd_results_t<pos:position pos:line="6" pos:column="22"/></name> <modifier pos:line="6" pos:column="23">*<pos:position pos:line="6" pos:column="24"/></modifier></type><name pos:line="6" pos:column="24">res<pos:position pos:line="6" pos:column="27"/></name> <init pos:line="6" pos:column="28">= <expr><name pos:line="6" pos:column="30">NULL<pos:position pos:line="6" pos:column="34"/></name></expr></init></decl>;<pos:position pos:line="6" pos:column="35"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="7" pos:column="5">apr_dbd_row_t<pos:position pos:line="7" pos:column="18"/></name> <modifier pos:line="7" pos:column="19">*<pos:position pos:line="7" pos:column="20"/></modifier></type><name pos:line="7" pos:column="20">row<pos:position pos:line="7" pos:column="23"/></name> <init pos:line="7" pos:column="24">= <expr><name pos:line="7" pos:column="26">NULL<pos:position pos:line="7" pos:column="30"/></name></expr></init></decl>;<pos:position pos:line="7" pos:column="31"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="8" pos:column="5">char<pos:position pos:line="8" pos:column="9"/></name> <modifier pos:line="8" pos:column="10">*<pos:position pos:line="8" pos:column="11"/></modifier></type><name pos:line="8" pos:column="11">ret<pos:position pos:line="8" pos:column="14"/></name> <init pos:line="8" pos:column="15">= <expr><name pos:line="8" pos:column="17">NULL<pos:position pos:line="8" pos:column="21"/></name></expr></init></decl>;<pos:position pos:line="8" pos:column="22"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="9" pos:column="5">int<pos:position pos:line="9" pos:column="8"/></name></type> <name pos:line="9" pos:column="9">n<pos:position pos:line="9" pos:column="10"/></name> <init pos:line="9" pos:column="11">= <expr><literal type="number" pos:line="9" pos:column="13">0<pos:position pos:line="9" pos:column="14"/></literal></expr></init></decl>;<pos:position pos:line="9" pos:column="15"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="10" pos:column="5">ap_dbd_t<pos:position pos:line="10" pos:column="13"/></name> <modifier pos:line="10" pos:column="14">*<pos:position pos:line="10" pos:column="15"/></modifier></type><name pos:line="10" pos:column="15">db<pos:position pos:line="10" pos:column="17"/></name> <init pos:line="10" pos:column="18">= <expr><call><name pos:line="10" pos:column="20">dbd_acquire<pos:position pos:line="10" pos:column="31"/></name><argument_list pos:line="10" pos:column="31">(<argument><expr><name pos:line="10" pos:column="32">r<pos:position pos:line="10" pos:column="33"/></name></expr></argument>)<pos:position pos:line="10" pos:column="34"/></argument_list></call></expr></init></decl>;<pos:position pos:line="10" pos:column="35"/></decl_stmt>
    
    <if pos:line="12" pos:column="5">if <condition pos:line="12" pos:column="8">(<expr><name pos:line="12" pos:column="9">db<pos:position pos:line="12" pos:column="11"/></name> <operator pos:line="12" pos:column="12">==<pos:position pos:line="12" pos:column="14"/></operator> <name pos:line="12" pos:column="15">NULL<pos:position pos:line="12" pos:column="19"/></name></expr>)<pos:position pos:line="12" pos:column="20"/></condition><then pos:line="12" pos:column="20"> <block pos:line="12" pos:column="21">{
        <expr_stmt><expr><call><name pos:line="13" pos:column="9">ap_log_rerror<pos:position pos:line="13" pos:column="22"/></name><argument_list pos:line="13" pos:column="22">(<argument><expr><name pos:line="13" pos:column="23">APLOG_MARK<pos:position pos:line="13" pos:column="33"/></name></expr></argument>, <argument><expr><name pos:line="13" pos:column="35">APLOG_ERR<pos:position pos:line="13" pos:column="44"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="13" pos:column="46">0<pos:position pos:line="13" pos:column="47"/></literal></expr></argument>, <argument><expr><name pos:line="13" pos:column="49">r<pos:position pos:line="13" pos:column="50"/></name></expr></argument>, <argument><expr><call><name pos:line="13" pos:column="52">APLOGNO<pos:position pos:line="13" pos:column="59"/></name><argument_list pos:line="13" pos:column="59">(<argument><expr><literal type="number" pos:line="13" pos:column="60">02963<pos:position pos:line="13" pos:column="65"/></literal></expr></argument>)<pos:position pos:line="13" pos:column="66"/></argument_list></call>
                      <literal type="string" pos:line="14" pos:column="23">"rewritemap: No db handle available! "<pos:position pos:line="14" pos:column="61"/></literal>
                      <literal type="string" pos:line="15" pos:column="23">"Check your database access"<pos:position pos:line="15" pos:column="51"/></literal></expr></argument>)<pos:position pos:line="15" pos:column="52"/></argument_list></call></expr>;<pos:position pos:line="15" pos:column="53"/></expr_stmt>
        <return pos:line="16" pos:column="9">return <expr><name pos:line="16" pos:column="16">NULL<pos:position pos:line="16" pos:column="20"/></name></expr>;<pos:position pos:line="16" pos:column="21"/></return>
   }<pos:position pos:line="17" pos:column="5"/></block></then></if>

    <expr_stmt><expr><name pos:line="19" pos:column="5">stmt<pos:position pos:line="19" pos:column="9"/></name> <operator pos:line="19" pos:column="10">=<pos:position pos:line="19" pos:column="11"/></operator> <call><name pos:line="19" pos:column="12">apr_hash_get<pos:position pos:line="19" pos:column="24"/></name><argument_list pos:line="19" pos:column="24">(<argument><expr><name><name pos:line="19" pos:column="25">db<pos:position pos:line="19" pos:column="27"/></name><operator pos:line="19" pos:column="27">-&gt;<pos:position pos:line="19" pos:column="32"/></operator><name pos:line="19" pos:column="29">prepared<pos:position pos:line="19" pos:column="37"/></name></name></expr></argument>, <argument><expr><name pos:line="19" pos:column="39">label<pos:position pos:line="19" pos:column="44"/></name></expr></argument>, <argument><expr><name pos:line="19" pos:column="46">APR_HASH_KEY_STRING<pos:position pos:line="19" pos:column="65"/></name></expr></argument>)<pos:position pos:line="19" pos:column="66"/></argument_list></call></expr>;<pos:position pos:line="19" pos:column="67"/></expr_stmt>

    <expr_stmt><expr><name pos:line="21" pos:column="5">rv<pos:position pos:line="21" pos:column="7"/></name> <operator pos:line="21" pos:column="8">=<pos:position pos:line="21" pos:column="9"/></operator> <call><name pos:line="21" pos:column="10">apr_dbd_pvselect<pos:position pos:line="21" pos:column="26"/></name><argument_list pos:line="21" pos:column="26">(<argument><expr><name><name pos:line="21" pos:column="27">db<pos:position pos:line="21" pos:column="29"/></name><operator pos:line="21" pos:column="29">-&gt;<pos:position pos:line="21" pos:column="34"/></operator><name pos:line="21" pos:column="31">driver<pos:position pos:line="21" pos:column="37"/></name></name></expr></argument>, <argument><expr><name><name pos:line="21" pos:column="39">r<pos:position pos:line="21" pos:column="40"/></name><operator pos:line="21" pos:column="40">-&gt;<pos:position pos:line="21" pos:column="45"/></operator><name pos:line="21" pos:column="42">pool<pos:position pos:line="21" pos:column="46"/></name></name></expr></argument>, <argument><expr><name><name pos:line="21" pos:column="48">db<pos:position pos:line="21" pos:column="50"/></name><operator pos:line="21" pos:column="50">-&gt;<pos:position pos:line="21" pos:column="55"/></operator><name pos:line="21" pos:column="52">handle<pos:position pos:line="21" pos:column="58"/></name></name></expr></argument>, <argument><expr><operator pos:line="21" pos:column="60">&amp;<pos:position pos:line="21" pos:column="65"/></operator><name pos:line="21" pos:column="61">res<pos:position pos:line="21" pos:column="64"/></name></expr></argument>,
                          <argument><expr><name pos:line="22" pos:column="27">stmt<pos:position pos:line="22" pos:column="31"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="22" pos:column="33">0<pos:position pos:line="22" pos:column="34"/></literal></expr></argument>, <argument><expr><name pos:line="22" pos:column="36">key<pos:position pos:line="22" pos:column="39"/></name></expr></argument>, <argument><expr><name pos:line="22" pos:column="41">NULL<pos:position pos:line="22" pos:column="45"/></name></expr></argument>)<pos:position pos:line="22" pos:column="46"/></argument_list></call></expr>;<pos:position pos:line="22" pos:column="47"/></expr_stmt>
    <if pos:line="23" pos:column="5">if <condition pos:line="23" pos:column="8">(<expr><name pos:line="23" pos:column="9">rv<pos:position pos:line="23" pos:column="11"/></name> <operator pos:line="23" pos:column="12">!=<pos:position pos:line="23" pos:column="14"/></operator> <literal type="number" pos:line="23" pos:column="15">0<pos:position pos:line="23" pos:column="16"/></literal></expr>)<pos:position pos:line="23" pos:column="17"/></condition><then pos:line="23" pos:column="17"> <block pos:line="23" pos:column="18">{
        <expr_stmt><expr><name pos:line="24" pos:column="9">errmsg<pos:position pos:line="24" pos:column="15"/></name> <operator pos:line="24" pos:column="16">=<pos:position pos:line="24" pos:column="17"/></operator> <call><name pos:line="24" pos:column="18">apr_dbd_error<pos:position pos:line="24" pos:column="31"/></name><argument_list pos:line="24" pos:column="31">(<argument><expr><name><name pos:line="24" pos:column="32">db<pos:position pos:line="24" pos:column="34"/></name><operator pos:line="24" pos:column="34">-&gt;<pos:position pos:line="24" pos:column="39"/></operator><name pos:line="24" pos:column="36">driver<pos:position pos:line="24" pos:column="42"/></name></name></expr></argument>, <argument><expr><name><name pos:line="24" pos:column="44">db<pos:position pos:line="24" pos:column="46"/></name><operator pos:line="24" pos:column="46">-&gt;<pos:position pos:line="24" pos:column="51"/></operator><name pos:line="24" pos:column="48">handle<pos:position pos:line="24" pos:column="54"/></name></name></expr></argument>, <argument><expr><name pos:line="24" pos:column="56">rv<pos:position pos:line="24" pos:column="58"/></name></expr></argument>)<pos:position pos:line="24" pos:column="59"/></argument_list></call></expr>;<pos:position pos:line="24" pos:column="60"/></expr_stmt>
        <expr_stmt><expr><call><name pos:line="25" pos:column="9">ap_log_rerror<pos:position pos:line="25" pos:column="22"/></name><argument_list pos:line="25" pos:column="22">(<argument><expr><name pos:line="25" pos:column="23">APLOG_MARK<pos:position pos:line="25" pos:column="33"/></name></expr></argument>, <argument><expr><name pos:line="25" pos:column="35">APLOG_ERR<pos:position pos:line="25" pos:column="44"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="25" pos:column="46">0<pos:position pos:line="25" pos:column="47"/></literal></expr></argument>, <argument><expr><name pos:line="25" pos:column="49">r<pos:position pos:line="25" pos:column="50"/></name></expr></argument>, <argument><expr><call><name pos:line="25" pos:column="52">APLOGNO<pos:position pos:line="25" pos:column="59"/></name><argument_list pos:line="25" pos:column="59">(<argument><expr><literal type="number" pos:line="25" pos:column="60">00657<pos:position pos:line="25" pos:column="65"/></literal></expr></argument>)<pos:position pos:line="25" pos:column="66"/></argument_list></call>
                      <literal type="string" pos:line="26" pos:column="23">"rewritemap: error %s querying for %s"<pos:position pos:line="26" pos:column="61"/></literal></expr></argument>, <argument><expr><name pos:line="26" pos:column="63">errmsg<pos:position pos:line="26" pos:column="69"/></name></expr></argument>, <argument><expr><name pos:line="26" pos:column="71">key<pos:position pos:line="26" pos:column="74"/></name></expr></argument>)<pos:position pos:line="26" pos:column="75"/></argument_list></call></expr>;<pos:position pos:line="26" pos:column="76"/></expr_stmt>
        <return pos:line="27" pos:column="9">return <expr><name pos:line="27" pos:column="16">NULL<pos:position pos:line="27" pos:column="20"/></name></expr>;<pos:position pos:line="27" pos:column="21"/></return>
    }<pos:position pos:line="28" pos:column="6"/></block></then></if>
    <while pos:line="29" pos:column="5">while <condition pos:line="29" pos:column="11">(<expr><operator pos:line="29" pos:column="12">(<pos:position pos:line="29" pos:column="13"/></operator><name pos:line="29" pos:column="13">rv<pos:position pos:line="29" pos:column="15"/></name> <operator pos:line="29" pos:column="16">=<pos:position pos:line="29" pos:column="17"/></operator> <call><name pos:line="29" pos:column="18">apr_dbd_get_row<pos:position pos:line="29" pos:column="33"/></name><argument_list pos:line="29" pos:column="33">(<argument><expr><name><name pos:line="29" pos:column="34">db<pos:position pos:line="29" pos:column="36"/></name><operator pos:line="29" pos:column="36">-&gt;<pos:position pos:line="29" pos:column="41"/></operator><name pos:line="29" pos:column="38">driver<pos:position pos:line="29" pos:column="44"/></name></name></expr></argument>, <argument><expr><name><name pos:line="29" pos:column="46">r<pos:position pos:line="29" pos:column="47"/></name><operator pos:line="29" pos:column="47">-&gt;<pos:position pos:line="29" pos:column="52"/></operator><name pos:line="29" pos:column="49">pool<pos:position pos:line="29" pos:column="53"/></name></name></expr></argument>, <argument><expr><name pos:line="29" pos:column="55">res<pos:position pos:line="29" pos:column="58"/></name></expr></argument>, <argument><expr><operator pos:line="29" pos:column="60">&amp;<pos:position pos:line="29" pos:column="65"/></operator><name pos:line="29" pos:column="61">row<pos:position pos:line="29" pos:column="64"/></name></expr></argument>, <argument><expr><operator pos:line="29" pos:column="66">-<pos:position pos:line="29" pos:column="67"/></operator><literal type="number" pos:line="29" pos:column="67">1<pos:position pos:line="29" pos:column="68"/></literal></expr></argument>)<pos:position pos:line="29" pos:column="69"/></argument_list></call><operator pos:line="29" pos:column="69">)<pos:position pos:line="29" pos:column="70"/></operator> <operator pos:line="29" pos:column="71">==<pos:position pos:line="29" pos:column="73"/></operator> <literal type="number" pos:line="29" pos:column="74">0<pos:position pos:line="29" pos:column="75"/></literal></expr>)<pos:position pos:line="29" pos:column="76"/></condition> <block pos:line="29" pos:column="77">{
        <expr_stmt><expr><operator pos:line="30" pos:column="9">++<pos:position pos:line="30" pos:column="11"/></operator><name pos:line="30" pos:column="11">n<pos:position pos:line="30" pos:column="12"/></name></expr>;<pos:position pos:line="30" pos:column="13"/></expr_stmt>
        <if pos:line="31" pos:column="9">if <condition pos:line="31" pos:column="12">(<expr><name pos:line="31" pos:column="13">ret<pos:position pos:line="31" pos:column="16"/></name> <operator pos:line="31" pos:column="17">==<pos:position pos:line="31" pos:column="19"/></operator> <name pos:line="31" pos:column="20">NULL<pos:position pos:line="31" pos:column="24"/></name></expr>)<pos:position pos:line="31" pos:column="25"/></condition><then pos:line="31" pos:column="25"> <block pos:line="31" pos:column="26">{
            <expr_stmt><expr><name pos:line="32" pos:column="13">ret<pos:position pos:line="32" pos:column="16"/></name> <operator pos:line="32" pos:column="17">=<pos:position pos:line="32" pos:column="18"/></operator> <call><name pos:line="32" pos:column="19">apr_pstrdup<pos:position pos:line="32" pos:column="30"/></name><argument_list pos:line="32" pos:column="30">(<argument><expr><name><name pos:line="32" pos:column="31">r<pos:position pos:line="32" pos:column="32"/></name><operator pos:line="32" pos:column="32">-&gt;<pos:position pos:line="32" pos:column="37"/></operator><name pos:line="32" pos:column="34">pool<pos:position pos:line="32" pos:column="38"/></name></name></expr></argument>,
                              <argument><expr><call><name pos:line="33" pos:column="31">apr_dbd_get_entry<pos:position pos:line="33" pos:column="48"/></name><argument_list pos:line="33" pos:column="48">(<argument><expr><name><name pos:line="33" pos:column="49">db<pos:position pos:line="33" pos:column="51"/></name><operator pos:line="33" pos:column="51">-&gt;<pos:position pos:line="33" pos:column="56"/></operator><name pos:line="33" pos:column="53">driver<pos:position pos:line="33" pos:column="59"/></name></name></expr></argument>, <argument><expr><name pos:line="33" pos:column="61">row<pos:position pos:line="33" pos:column="64"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="33" pos:column="66">0<pos:position pos:line="33" pos:column="67"/></literal></expr></argument>)<pos:position pos:line="33" pos:column="68"/></argument_list></call></expr></argument>)<pos:position pos:line="33" pos:column="69"/></argument_list></call></expr>;<pos:position pos:line="33" pos:column="70"/></expr_stmt>
        }<pos:position pos:line="34" pos:column="10"/></block></then>
        <else pos:line="35" pos:column="9">else <block pos:line="35" pos:column="14">{
            <comment type="block" pos:line="36" pos:column="13">/* randomise crudely amongst multiple results */</comment>
            <if pos:line="37" pos:column="13">if <condition pos:line="37" pos:column="16">(<expr><operator pos:line="37" pos:column="17">(<pos:position pos:line="37" pos:column="18"/></operator><name pos:line="37" pos:column="18">double<pos:position pos:line="37" pos:column="24"/></name><operator pos:line="37" pos:column="24">)<pos:position pos:line="37" pos:column="25"/></operator><call><name pos:line="37" pos:column="25">rand<pos:position pos:line="37" pos:column="29"/></name><argument_list pos:line="37" pos:column="29">()<pos:position pos:line="37" pos:column="31"/></argument_list></call> <operator pos:line="37" pos:column="32">&lt;<pos:position pos:line="37" pos:column="36"/></operator> <operator pos:line="37" pos:column="34">(<pos:position pos:line="37" pos:column="35"/></operator><name pos:line="37" pos:column="35">double<pos:position pos:line="37" pos:column="41"/></name><operator pos:line="37" pos:column="41">)<pos:position pos:line="37" pos:column="42"/></operator><name pos:line="37" pos:column="42">RAND_MAX<pos:position pos:line="37" pos:column="50"/></name><operator pos:line="37" pos:column="50">/<pos:position pos:line="37" pos:column="51"/></operator><operator pos:line="37" pos:column="51">(<pos:position pos:line="37" pos:column="52"/></operator><name pos:line="37" pos:column="52">double<pos:position pos:line="37" pos:column="58"/></name><operator pos:line="37" pos:column="58">)<pos:position pos:line="37" pos:column="59"/></operator><name pos:line="37" pos:column="59">n<pos:position pos:line="37" pos:column="60"/></name></expr>)<pos:position pos:line="37" pos:column="61"/></condition><then pos:line="37" pos:column="61"> <block pos:line="37" pos:column="62">{
                <expr_stmt><expr><name pos:line="38" pos:column="17">ret<pos:position pos:line="38" pos:column="20"/></name> <operator pos:line="38" pos:column="21">=<pos:position pos:line="38" pos:column="22"/></operator> <call><name pos:line="38" pos:column="23">apr_pstrdup<pos:position pos:line="38" pos:column="34"/></name><argument_list pos:line="38" pos:column="34">(<argument><expr><name><name pos:line="38" pos:column="35">r<pos:position pos:line="38" pos:column="36"/></name><operator pos:line="38" pos:column="36">-&gt;<pos:position pos:line="38" pos:column="41"/></operator><name pos:line="38" pos:column="38">pool<pos:position pos:line="38" pos:column="42"/></name></name></expr></argument>,
                                  <argument><expr><call><name pos:line="39" pos:column="35">apr_dbd_get_entry<pos:position pos:line="39" pos:column="52"/></name><argument_list pos:line="39" pos:column="52">(<argument><expr><name><name pos:line="39" pos:column="53">db<pos:position pos:line="39" pos:column="55"/></name><operator pos:line="39" pos:column="55">-&gt;<pos:position pos:line="39" pos:column="60"/></operator><name pos:line="39" pos:column="57">driver<pos:position pos:line="39" pos:column="63"/></name></name></expr></argument>, <argument><expr><name pos:line="39" pos:column="65">row<pos:position pos:line="39" pos:column="68"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="39" pos:column="70">0<pos:position pos:line="39" pos:column="71"/></literal></expr></argument>)<pos:position pos:line="39" pos:column="72"/></argument_list></call></expr></argument>)<pos:position pos:line="39" pos:column="73"/></argument_list></call></expr>;<pos:position pos:line="39" pos:column="74"/></expr_stmt>
            }<pos:position pos:line="40" pos:column="14"/></block></then></if>
        }<pos:position pos:line="41" pos:column="10"/></block></else></if>
    }<pos:position pos:line="42" pos:column="6"/></block></while>
    <if pos:line="43" pos:column="5">if <condition pos:line="43" pos:column="8">(<expr><name pos:line="43" pos:column="9">rv<pos:position pos:line="43" pos:column="11"/></name> <operator pos:line="43" pos:column="12">!=<pos:position pos:line="43" pos:column="14"/></operator> <operator pos:line="43" pos:column="15">-<pos:position pos:line="43" pos:column="16"/></operator><literal type="number" pos:line="43" pos:column="16">1<pos:position pos:line="43" pos:column="17"/></literal></expr>)<pos:position pos:line="43" pos:column="18"/></condition><then pos:line="43" pos:column="18"> <block pos:line="43" pos:column="19">{
        <expr_stmt><expr><name pos:line="44" pos:column="9">errmsg<pos:position pos:line="44" pos:column="15"/></name> <operator pos:line="44" pos:column="16">=<pos:position pos:line="44" pos:column="17"/></operator> <call><name pos:line="44" pos:column="18">apr_dbd_error<pos:position pos:line="44" pos:column="31"/></name><argument_list pos:line="44" pos:column="31">(<argument><expr><name><name pos:line="44" pos:column="32">db<pos:position pos:line="44" pos:column="34"/></name><operator pos:line="44" pos:column="34">-&gt;<pos:position pos:line="44" pos:column="39"/></operator><name pos:line="44" pos:column="36">driver<pos:position pos:line="44" pos:column="42"/></name></name></expr></argument>, <argument><expr><name><name pos:line="44" pos:column="44">db<pos:position pos:line="44" pos:column="46"/></name><operator pos:line="44" pos:column="46">-&gt;<pos:position pos:line="44" pos:column="51"/></operator><name pos:line="44" pos:column="48">handle<pos:position pos:line="44" pos:column="54"/></name></name></expr></argument>, <argument><expr><name pos:line="44" pos:column="56">rv<pos:position pos:line="44" pos:column="58"/></name></expr></argument>)<pos:position pos:line="44" pos:column="59"/></argument_list></call></expr>;<pos:position pos:line="44" pos:column="60"/></expr_stmt>
        <expr_stmt><expr><call><name pos:line="45" pos:column="9">ap_log_rerror<pos:position pos:line="45" pos:column="22"/></name><argument_list pos:line="45" pos:column="22">(<argument><expr><name pos:line="45" pos:column="23">APLOG_MARK<pos:position pos:line="45" pos:column="33"/></name></expr></argument>, <argument><expr><name pos:line="45" pos:column="35">APLOG_ERR<pos:position pos:line="45" pos:column="44"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="45" pos:column="46">0<pos:position pos:line="45" pos:column="47"/></literal></expr></argument>, <argument><expr><name pos:line="45" pos:column="49">r<pos:position pos:line="45" pos:column="50"/></name></expr></argument>, <argument><expr><call><name pos:line="45" pos:column="52">APLOGNO<pos:position pos:line="45" pos:column="59"/></name><argument_list pos:line="45" pos:column="59">(<argument><expr><literal type="number" pos:line="45" pos:column="60">00658<pos:position pos:line="45" pos:column="65"/></literal></expr></argument>)<pos:position pos:line="45" pos:column="66"/></argument_list></call>
                      <literal type="string" pos:line="46" pos:column="23">"rewritemap: error %s looking up %s"<pos:position pos:line="46" pos:column="59"/></literal></expr></argument>, <argument><expr><name pos:line="46" pos:column="61">errmsg<pos:position pos:line="46" pos:column="67"/></name></expr></argument>, <argument><expr><name pos:line="46" pos:column="69">key<pos:position pos:line="46" pos:column="72"/></name></expr></argument>)<pos:position pos:line="46" pos:column="73"/></argument_list></call></expr>;<pos:position pos:line="46" pos:column="74"/></expr_stmt>
    }<pos:position pos:line="47" pos:column="6"/></block></then></if>
    <switch pos:line="48" pos:column="5">switch <condition pos:line="48" pos:column="12">(<expr><name pos:line="48" pos:column="13">n<pos:position pos:line="48" pos:column="14"/></name></expr>)<pos:position pos:line="48" pos:column="15"/></condition> <block pos:line="48" pos:column="16">{
    <case pos:line="49" pos:column="5">case <expr><literal type="number" pos:line="49" pos:column="10">0<pos:position pos:line="49" pos:column="11"/></literal></expr>:<pos:position pos:line="49" pos:column="12"/></case>
        <return pos:line="50" pos:column="9">return <expr><name pos:line="50" pos:column="16">NULL<pos:position pos:line="50" pos:column="20"/></name></expr>;<pos:position pos:line="50" pos:column="21"/></return>
    <case pos:line="51" pos:column="5">case <expr><literal type="number" pos:line="51" pos:column="10">1<pos:position pos:line="51" pos:column="11"/></literal></expr>:<pos:position pos:line="51" pos:column="12"/></case>
        <return pos:line="52" pos:column="9">return <expr><name pos:line="52" pos:column="16">ret<pos:position pos:line="52" pos:column="19"/></name></expr>;<pos:position pos:line="52" pos:column="20"/></return>
    <default pos:line="53" pos:column="5">default:<pos:position pos:line="53" pos:column="13"/></default>
        <comment type="block" pos:line="54" pos:column="9">/* what's a fair rewritelog level for this? */</comment>
        <expr_stmt><expr><call><name pos:line="55" pos:column="9">rewritelog<pos:position pos:line="55" pos:column="19"/></name><argument_list pos:line="55" pos:column="19">(<argument><expr><operator pos:line="55" pos:column="20">(<pos:position pos:line="55" pos:column="21"/></operator><name pos:line="55" pos:column="21">r<pos:position pos:line="55" pos:column="22"/></name><operator pos:line="55" pos:column="22">,<pos:position pos:line="55" pos:column="23"/></operator> <literal type="number" pos:line="55" pos:column="24">3<pos:position pos:line="55" pos:column="25"/></literal><operator pos:line="55" pos:column="25">,<pos:position pos:line="55" pos:column="26"/></operator> <name pos:line="55" pos:column="27">NULL<pos:position pos:line="55" pos:column="31"/></name><operator pos:line="55" pos:column="31">,<pos:position pos:line="55" pos:column="32"/></operator> <literal type="string" pos:line="55" pos:column="33">"Multiple values found for %s"<pos:position pos:line="55" pos:column="63"/></literal><operator pos:line="55" pos:column="63">,<pos:position pos:line="55" pos:column="64"/></operator> <name pos:line="55" pos:column="65">key<pos:position pos:line="55" pos:column="68"/></name><operator pos:line="55" pos:column="68">)<pos:position pos:line="55" pos:column="69"/></operator></expr></argument>)<pos:position pos:line="55" pos:column="70"/></argument_list></call></expr>;<pos:position pos:line="55" pos:column="71"/></expr_stmt>
        <return pos:line="56" pos:column="9">return <expr><name pos:line="56" pos:column="16">ret<pos:position pos:line="56" pos:column="19"/></name></expr>;<pos:position pos:line="56" pos:column="20"/></return>
    }<pos:position pos:line="57" pos:column="6"/></block></switch>
}<pos:position pos:line="58" pos:column="2"/></block></function></unit>

<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/httpd/gumtree/httpd_repos_function_3152_httpd-2.2.22.cpp" pos:tabs="8"><function><type><specifier pos:line="1" pos:column="1">const<pos:position pos:line="1" pos:column="6"/></specifier> <name pos:line="1" pos:column="7">XML_Feature<pos:position pos:line="1" pos:column="18"/></name> <modifier pos:line="1" pos:column="19">*<pos:position pos:line="1" pos:column="20"/></modifier> <name pos:line="1" pos:column="21">XMLCALL<pos:position pos:line="1" pos:column="28"/></name></type>
<name pos:line="2" pos:column="1">XML_GetFeatureList<pos:position pos:line="2" pos:column="19"/></name><parameter_list pos:line="2" pos:column="19">(<parameter><decl><type><name pos:line="2" pos:column="20">void<pos:position pos:line="2" pos:column="24"/></name></type></decl></parameter>)<pos:position pos:line="2" pos:column="25"/></parameter_list>
<block pos:line="3" pos:column="1">{
  <decl_stmt><decl><specifier pos:line="4" pos:column="3">static<pos:position pos:line="4" pos:column="9"/></specifier> <type><name pos:line="4" pos:column="10">XML_Feature<pos:position pos:line="4" pos:column="21"/></name></type> <name><name pos:line="4" pos:column="22">features<pos:position pos:line="4" pos:column="30"/></name><index pos:line="4" pos:column="30">[]<pos:position pos:line="4" pos:column="32"/></index></name> <init pos:line="4" pos:column="33">= <expr><block pos:line="4" pos:column="35">{
    <expr><block pos:line="5" pos:column="5">{<expr><name pos:line="5" pos:column="6">XML_FEATURE_SIZEOF_XML_CHAR<pos:position pos:line="5" pos:column="33"/></name></expr>,  <expr><call><name pos:line="5" pos:column="36">XML_L<pos:position pos:line="5" pos:column="41"/></name><argument_list pos:line="5" pos:column="41">(<argument><expr><literal type="string" pos:line="5" pos:column="42">"sizeof(XML_Char)"<pos:position pos:line="5" pos:column="60"/></literal></expr></argument>)<pos:position pos:line="5" pos:column="61"/></argument_list></call></expr>, <expr><literal type="number" pos:line="5" pos:column="63">0<pos:position pos:line="5" pos:column="64"/></literal></expr>}<pos:position pos:line="5" pos:column="65"/></block></expr>,
    <expr><block pos:line="6" pos:column="5">{<expr><name pos:line="6" pos:column="6">XML_FEATURE_SIZEOF_XML_LCHAR<pos:position pos:line="6" pos:column="34"/></name></expr>, <expr><call><name pos:line="6" pos:column="36">XML_L<pos:position pos:line="6" pos:column="41"/></name><argument_list pos:line="6" pos:column="41">(<argument><expr><literal type="string" pos:line="6" pos:column="42">"sizeof(XML_LChar)"<pos:position pos:line="6" pos:column="61"/></literal></expr></argument>)<pos:position pos:line="6" pos:column="62"/></argument_list></call></expr>, <expr><literal type="number" pos:line="6" pos:column="64">0<pos:position pos:line="6" pos:column="65"/></literal></expr>}<pos:position pos:line="6" pos:column="66"/></block></expr>,
<cpp:ifdef pos:line="7" pos:column="1">#<cpp:directive pos:line="7" pos:column="2">ifdef<pos:position pos:line="7" pos:column="7"/></cpp:directive> <name pos:line="7" pos:column="8">XML_UNICODE<pos:position pos:line="7" pos:column="19"/></name></cpp:ifdef>
    <expr><block pos:line="8" pos:column="5">{<expr><name pos:line="8" pos:column="6">XML_FEATURE_UNICODE<pos:position pos:line="8" pos:column="25"/></name></expr>,          <expr><call><name pos:line="8" pos:column="36">XML_L<pos:position pos:line="8" pos:column="41"/></name><argument_list pos:line="8" pos:column="41">(<argument><expr><literal type="string" pos:line="8" pos:column="42">"XML_UNICODE"<pos:position pos:line="8" pos:column="55"/></literal></expr></argument>)<pos:position pos:line="8" pos:column="56"/></argument_list></call></expr>, <expr><literal type="number" pos:line="8" pos:column="58">0<pos:position pos:line="8" pos:column="59"/></literal></expr>}<pos:position pos:line="8" pos:column="60"/></block></expr>,
<cpp:endif pos:line="9" pos:column="1">#<cpp:directive pos:line="9" pos:column="2">endif<pos:position pos:line="9" pos:column="7"/></cpp:directive></cpp:endif>
<cpp:ifdef pos:line="10" pos:column="1">#<cpp:directive pos:line="10" pos:column="2">ifdef<pos:position pos:line="10" pos:column="7"/></cpp:directive> <name pos:line="10" pos:column="8">XML_UNICODE_WCHAR_T<pos:position pos:line="10" pos:column="27"/></name></cpp:ifdef>
    <expr><block pos:line="11" pos:column="5">{<expr><name pos:line="11" pos:column="6">XML_FEATURE_UNICODE_WCHAR_T<pos:position pos:line="11" pos:column="33"/></name></expr>,  <expr><call><name pos:line="11" pos:column="36">XML_L<pos:position pos:line="11" pos:column="41"/></name><argument_list pos:line="11" pos:column="41">(<argument><expr><literal type="string" pos:line="11" pos:column="42">"XML_UNICODE_WCHAR_T"<pos:position pos:line="11" pos:column="63"/></literal></expr></argument>)<pos:position pos:line="11" pos:column="64"/></argument_list></call></expr>, <expr><literal type="number" pos:line="11" pos:column="66">0<pos:position pos:line="11" pos:column="67"/></literal></expr>}<pos:position pos:line="11" pos:column="68"/></block></expr>,
<cpp:endif pos:line="12" pos:column="1">#<cpp:directive pos:line="12" pos:column="2">endif<pos:position pos:line="12" pos:column="7"/></cpp:directive></cpp:endif>
<cpp:ifdef pos:line="13" pos:column="1">#<cpp:directive pos:line="13" pos:column="2">ifdef<pos:position pos:line="13" pos:column="7"/></cpp:directive> <name pos:line="13" pos:column="8">XML_DTD<pos:position pos:line="13" pos:column="15"/></name></cpp:ifdef>
    <expr><block pos:line="14" pos:column="5">{<expr><name pos:line="14" pos:column="6">XML_FEATURE_DTD<pos:position pos:line="14" pos:column="21"/></name></expr>,              <expr><call><name pos:line="14" pos:column="36">XML_L<pos:position pos:line="14" pos:column="41"/></name><argument_list pos:line="14" pos:column="41">(<argument><expr><literal type="string" pos:line="14" pos:column="42">"XML_DTD"<pos:position pos:line="14" pos:column="51"/></literal></expr></argument>)<pos:position pos:line="14" pos:column="52"/></argument_list></call></expr>, <expr><literal type="number" pos:line="14" pos:column="54">0<pos:position pos:line="14" pos:column="55"/></literal></expr>}<pos:position pos:line="14" pos:column="56"/></block></expr>,
<cpp:endif pos:line="15" pos:column="1">#<cpp:directive pos:line="15" pos:column="2">endif<pos:position pos:line="15" pos:column="7"/></cpp:directive></cpp:endif>
<cpp:ifdef pos:line="16" pos:column="1">#<cpp:directive pos:line="16" pos:column="2">ifdef<pos:position pos:line="16" pos:column="7"/></cpp:directive> <name pos:line="16" pos:column="8">XML_CONTEXT_BYTES<pos:position pos:line="16" pos:column="25"/></name></cpp:ifdef>
    <expr><block pos:line="17" pos:column="5">{<expr><name pos:line="17" pos:column="6">XML_FEATURE_CONTEXT_BYTES<pos:position pos:line="17" pos:column="31"/></name></expr>,    <expr><call><name pos:line="17" pos:column="36">XML_L<pos:position pos:line="17" pos:column="41"/></name><argument_list pos:line="17" pos:column="41">(<argument><expr><literal type="string" pos:line="17" pos:column="42">"XML_CONTEXT_BYTES"<pos:position pos:line="17" pos:column="61"/></literal></expr></argument>)<pos:position pos:line="17" pos:column="62"/></argument_list></call></expr>,
     <expr><name pos:line="18" pos:column="6">XML_CONTEXT_BYTES<pos:position pos:line="18" pos:column="23"/></name></expr>}<pos:position pos:line="18" pos:column="24"/></block></expr>,
<cpp:endif pos:line="19" pos:column="1">#<cpp:directive pos:line="19" pos:column="2">endif<pos:position pos:line="19" pos:column="7"/></cpp:directive></cpp:endif>
<cpp:ifdef pos:line="20" pos:column="1">#<cpp:directive pos:line="20" pos:column="2">ifdef<pos:position pos:line="20" pos:column="7"/></cpp:directive> <name pos:line="20" pos:column="8">XML_MIN_SIZE<pos:position pos:line="20" pos:column="20"/></name></cpp:ifdef>
    <expr><block pos:line="21" pos:column="5">{<expr><name pos:line="21" pos:column="6">XML_FEATURE_MIN_SIZE<pos:position pos:line="21" pos:column="26"/></name></expr>,         <expr><call><name pos:line="21" pos:column="36">XML_L<pos:position pos:line="21" pos:column="41"/></name><argument_list pos:line="21" pos:column="41">(<argument><expr><literal type="string" pos:line="21" pos:column="42">"XML_MIN_SIZE"<pos:position pos:line="21" pos:column="56"/></literal></expr></argument>)<pos:position pos:line="21" pos:column="57"/></argument_list></call></expr>, <expr><literal type="number" pos:line="21" pos:column="59">0<pos:position pos:line="21" pos:column="60"/></literal></expr>}<pos:position pos:line="21" pos:column="61"/></block></expr>,
<cpp:endif pos:line="22" pos:column="1">#<cpp:directive pos:line="22" pos:column="2">endif<pos:position pos:line="22" pos:column="7"/></cpp:directive></cpp:endif>
    <expr><block pos:line="23" pos:column="5">{<expr><name pos:line="23" pos:column="6">XML_FEATURE_END<pos:position pos:line="23" pos:column="21"/></name></expr>,              <expr><name pos:line="23" pos:column="36">NULL<pos:position pos:line="23" pos:column="40"/></name></expr>, <expr><literal type="number" pos:line="23" pos:column="42">0<pos:position pos:line="23" pos:column="43"/></literal></expr>}<pos:position pos:line="23" pos:column="44"/></block></expr>
  }<pos:position pos:line="24" pos:column="4"/></block></expr></init></decl>;<pos:position pos:line="24" pos:column="5"/></decl_stmt>

  <expr_stmt><expr><name><name pos:line="26" pos:column="3">features<pos:position pos:line="26" pos:column="11"/></name><index pos:line="26" pos:column="11">[<expr><literal type="number" pos:line="26" pos:column="12">0<pos:position pos:line="26" pos:column="13"/></literal></expr>]<pos:position pos:line="26" pos:column="14"/></index></name><operator pos:line="26" pos:column="14">.<pos:position pos:line="26" pos:column="15"/></operator><name pos:line="26" pos:column="15">value<pos:position pos:line="26" pos:column="20"/></name> <operator pos:line="26" pos:column="21">=<pos:position pos:line="26" pos:column="22"/></operator> <sizeof pos:line="26" pos:column="23">sizeof<argument_list pos:line="26" pos:column="29">(<argument><expr><name pos:line="26" pos:column="30">XML_Char<pos:position pos:line="26" pos:column="38"/></name></expr></argument>)<pos:position pos:line="26" pos:column="39"/></argument_list></sizeof></expr>;<pos:position pos:line="26" pos:column="40"/></expr_stmt>
  <expr_stmt><expr><name><name pos:line="27" pos:column="3">features<pos:position pos:line="27" pos:column="11"/></name><index pos:line="27" pos:column="11">[<expr><literal type="number" pos:line="27" pos:column="12">1<pos:position pos:line="27" pos:column="13"/></literal></expr>]<pos:position pos:line="27" pos:column="14"/></index></name><operator pos:line="27" pos:column="14">.<pos:position pos:line="27" pos:column="15"/></operator><name pos:line="27" pos:column="15">value<pos:position pos:line="27" pos:column="20"/></name> <operator pos:line="27" pos:column="21">=<pos:position pos:line="27" pos:column="22"/></operator> <sizeof pos:line="27" pos:column="23">sizeof<argument_list pos:line="27" pos:column="29">(<argument><expr><name pos:line="27" pos:column="30">XML_LChar<pos:position pos:line="27" pos:column="39"/></name></expr></argument>)<pos:position pos:line="27" pos:column="40"/></argument_list></sizeof></expr>;<pos:position pos:line="27" pos:column="41"/></expr_stmt>
  <return pos:line="28" pos:column="3">return <expr><name pos:line="28" pos:column="10">features<pos:position pos:line="28" pos:column="18"/></name></expr>;<pos:position pos:line="28" pos:column="19"/></return>
}<pos:position pos:line="29" pos:column="2"/></block></function></unit>

<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/httpd/gumtree/httpd_function_1278.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">int<pos:position pos:line="1" pos:column="11"/></name></type> <name pos:line="1" pos:column="12">translate_alias_redir<pos:position pos:line="1" pos:column="33"/></name><parameter_list pos:line="1" pos:column="33">(<parameter><decl><type><name pos:line="1" pos:column="34">request_rec<pos:position pos:line="1" pos:column="45"/></name> <modifier pos:line="1" pos:column="46">*<pos:position pos:line="1" pos:column="47"/></modifier></type><name pos:line="1" pos:column="47">r<pos:position pos:line="1" pos:column="48"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="49"/></parameter_list>
<block pos:line="2" pos:column="1">{
    <decl_stmt><decl><type><name pos:line="3" pos:column="5">ap_conf_vector_t<pos:position pos:line="3" pos:column="21"/></name> <modifier pos:line="3" pos:column="22">*<pos:position pos:line="3" pos:column="23"/></modifier></type><name pos:line="3" pos:column="23">sconf<pos:position pos:line="3" pos:column="28"/></name> <init pos:line="3" pos:column="29">= <expr><name><name pos:line="3" pos:column="31">r<pos:position pos:line="3" pos:column="32"/></name><operator pos:line="3" pos:column="32">-&gt;<pos:position pos:line="3" pos:column="37"/></operator><name pos:line="3" pos:column="34">server<pos:position pos:line="3" pos:column="40"/></name><operator pos:line="3" pos:column="40">-&gt;<pos:position pos:line="3" pos:column="45"/></operator><name pos:line="3" pos:column="42">module_config<pos:position pos:line="3" pos:column="55"/></name></name></expr></init></decl>;<pos:position pos:line="3" pos:column="56"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="4" pos:column="5">alias_server_conf<pos:position pos:line="4" pos:column="22"/></name> <modifier pos:line="4" pos:column="23">*<pos:position pos:line="4" pos:column="24"/></modifier></type><name pos:line="4" pos:column="24">serverconf<pos:position pos:line="4" pos:column="34"/></name> <init pos:line="4" pos:column="35">= <expr><call><name pos:line="4" pos:column="37">ap_get_module_config<pos:position pos:line="4" pos:column="57"/></name><argument_list pos:line="4" pos:column="57">(<argument><expr><name pos:line="4" pos:column="58">sconf<pos:position pos:line="4" pos:column="63"/></name></expr></argument>, <argument><expr><operator pos:line="4" pos:column="65">&amp;<pos:position pos:line="4" pos:column="70"/></operator><name pos:line="4" pos:column="66">alias_module<pos:position pos:line="4" pos:column="78"/></name></expr></argument>)<pos:position pos:line="4" pos:column="79"/></argument_list></call></expr></init></decl>;<pos:position pos:line="4" pos:column="80"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="5" pos:column="5">char<pos:position pos:line="5" pos:column="9"/></name> <modifier pos:line="5" pos:column="10">*<pos:position pos:line="5" pos:column="11"/></modifier></type><name pos:line="5" pos:column="11">ret<pos:position pos:line="5" pos:column="14"/></name></decl>;<pos:position pos:line="5" pos:column="15"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="6" pos:column="5">int<pos:position pos:line="6" pos:column="8"/></name></type> <name pos:line="6" pos:column="9">status<pos:position pos:line="6" pos:column="15"/></name></decl>;<pos:position pos:line="6" pos:column="16"/></decl_stmt>

    <if pos:line="8" pos:column="5">if <condition pos:line="8" pos:column="8">(<expr><name><name pos:line="8" pos:column="9">r<pos:position pos:line="8" pos:column="10"/></name><operator pos:line="8" pos:column="10">-&gt;<pos:position pos:line="8" pos:column="15"/></operator><name pos:line="8" pos:column="12">uri<pos:position pos:line="8" pos:column="15"/></name><index pos:line="8" pos:column="15">[<expr><literal type="number" pos:line="8" pos:column="16">0<pos:position pos:line="8" pos:column="17"/></literal></expr>]<pos:position pos:line="8" pos:column="18"/></index></name> <operator pos:line="8" pos:column="19">!=<pos:position pos:line="8" pos:column="21"/></operator> <literal type="char" pos:line="8" pos:column="22">'/'<pos:position pos:line="8" pos:column="25"/></literal> <operator pos:line="8" pos:column="26">&amp;&amp;<pos:position pos:line="8" pos:column="36"/></operator> <name><name pos:line="8" pos:column="29">r<pos:position pos:line="8" pos:column="30"/></name><operator pos:line="8" pos:column="30">-&gt;<pos:position pos:line="8" pos:column="35"/></operator><name pos:line="8" pos:column="32">uri<pos:position pos:line="8" pos:column="35"/></name><index pos:line="8" pos:column="35">[<expr><literal type="number" pos:line="8" pos:column="36">0<pos:position pos:line="8" pos:column="37"/></literal></expr>]<pos:position pos:line="8" pos:column="38"/></index></name> <operator pos:line="8" pos:column="39">!=<pos:position pos:line="8" pos:column="41"/></operator> <literal type="char" pos:line="8" pos:column="42">'\0'<pos:position pos:line="8" pos:column="46"/></literal></expr>)<pos:position pos:line="8" pos:column="47"/></condition><then pos:line="8" pos:column="47"> <block pos:line="8" pos:column="48">{
        <return pos:line="9" pos:column="9">return <expr><name pos:line="9" pos:column="16">DECLINED<pos:position pos:line="9" pos:column="24"/></name></expr>;<pos:position pos:line="9" pos:column="25"/></return>
    }<pos:position pos:line="10" pos:column="6"/></block></then></if>

    <if pos:line="12" pos:column="5">if <condition pos:line="12" pos:column="8">(<expr><operator pos:line="12" pos:column="9">(<pos:position pos:line="12" pos:column="10"/></operator><name pos:line="12" pos:column="10">ret<pos:position pos:line="12" pos:column="13"/></name> <operator pos:line="12" pos:column="14">=<pos:position pos:line="12" pos:column="15"/></operator> <call><name pos:line="12" pos:column="16">try_alias_list<pos:position pos:line="12" pos:column="30"/></name><argument_list pos:line="12" pos:column="30">(<argument><expr><name pos:line="12" pos:column="31">r<pos:position pos:line="12" pos:column="32"/></name></expr></argument>, <argument><expr><name><name pos:line="12" pos:column="34">serverconf<pos:position pos:line="12" pos:column="44"/></name><operator pos:line="12" pos:column="44">-&gt;<pos:position pos:line="12" pos:column="49"/></operator><name pos:line="12" pos:column="46">redirects<pos:position pos:line="12" pos:column="55"/></name></name></expr></argument>, <argument><expr><literal type="number" pos:line="12" pos:column="57">1<pos:position pos:line="12" pos:column="58"/></literal></expr></argument>, <argument><expr><operator pos:line="12" pos:column="60">&amp;<pos:position pos:line="12" pos:column="65"/></operator><name pos:line="12" pos:column="61">status<pos:position pos:line="12" pos:column="67"/></name></expr></argument>)<pos:position pos:line="12" pos:column="68"/></argument_list></call><operator pos:line="12" pos:column="68">)<pos:position pos:line="12" pos:column="69"/></operator> <operator pos:line="12" pos:column="70">!=<pos:position pos:line="12" pos:column="72"/></operator> <name pos:line="12" pos:column="73">NULL<pos:position pos:line="12" pos:column="77"/></name></expr>)<pos:position pos:line="12" pos:column="78"/></condition><then pos:line="12" pos:column="78"> <block pos:line="12" pos:column="79">{
        <if pos:line="13" pos:column="9">if <condition pos:line="13" pos:column="12">(<expr><call><name pos:line="13" pos:column="13">ap_is_HTTP_REDIRECT<pos:position pos:line="13" pos:column="32"/></name><argument_list pos:line="13" pos:column="32">(<argument><expr><name pos:line="13" pos:column="33">status<pos:position pos:line="13" pos:column="39"/></name></expr></argument>)<pos:position pos:line="13" pos:column="40"/></argument_list></call></expr>)<pos:position pos:line="13" pos:column="41"/></condition><then pos:line="13" pos:column="41"> <block pos:line="13" pos:column="42">{
            <decl_stmt><decl><type><name pos:line="14" pos:column="13">char<pos:position pos:line="14" pos:column="17"/></name> <modifier pos:line="14" pos:column="18">*<pos:position pos:line="14" pos:column="19"/></modifier></type><name pos:line="14" pos:column="19">orig_target<pos:position pos:line="14" pos:column="30"/></name> <init pos:line="14" pos:column="31">= <expr><name pos:line="14" pos:column="33">ret<pos:position pos:line="14" pos:column="36"/></name></expr></init></decl>;<pos:position pos:line="14" pos:column="37"/></decl_stmt>
            <if pos:line="15" pos:column="13">if <condition pos:line="15" pos:column="16">(<expr><name><name pos:line="15" pos:column="17">ret<pos:position pos:line="15" pos:column="20"/></name><index pos:line="15" pos:column="20">[<expr><literal type="number" pos:line="15" pos:column="21">0<pos:position pos:line="15" pos:column="22"/></literal></expr>]<pos:position pos:line="15" pos:column="23"/></index></name> <operator pos:line="15" pos:column="24">==<pos:position pos:line="15" pos:column="26"/></operator> <literal type="char" pos:line="15" pos:column="27">'/'<pos:position pos:line="15" pos:column="30"/></literal></expr>)<pos:position pos:line="15" pos:column="31"/></condition><then pos:line="15" pos:column="31"> <block pos:line="15" pos:column="32">{

                <expr_stmt><expr><name pos:line="17" pos:column="17">ret<pos:position pos:line="17" pos:column="20"/></name> <operator pos:line="17" pos:column="21">=<pos:position pos:line="17" pos:column="22"/></operator> <call><name pos:line="17" pos:column="23">ap_construct_url<pos:position pos:line="17" pos:column="39"/></name><argument_list pos:line="17" pos:column="39">(<argument><expr><name><name pos:line="17" pos:column="40">r<pos:position pos:line="17" pos:column="41"/></name><operator pos:line="17" pos:column="41">-&gt;<pos:position pos:line="17" pos:column="46"/></operator><name pos:line="17" pos:column="43">pool<pos:position pos:line="17" pos:column="47"/></name></name></expr></argument>, <argument><expr><name pos:line="17" pos:column="49">ret<pos:position pos:line="17" pos:column="52"/></name></expr></argument>, <argument><expr><name pos:line="17" pos:column="54">r<pos:position pos:line="17" pos:column="55"/></name></expr></argument>)<pos:position pos:line="17" pos:column="56"/></argument_list></call></expr>;<pos:position pos:line="17" pos:column="57"/></expr_stmt>
                <expr_stmt><expr><call><name pos:line="18" pos:column="17">ap_log_rerror<pos:position pos:line="18" pos:column="30"/></name><argument_list pos:line="18" pos:column="30">(<argument><expr><name pos:line="18" pos:column="31">APLOG_MARK<pos:position pos:line="18" pos:column="41"/></name></expr></argument>, <argument><expr><name pos:line="18" pos:column="43">APLOG_WARNING<pos:position pos:line="18" pos:column="56"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="18" pos:column="58">0<pos:position pos:line="18" pos:column="59"/></literal></expr></argument>, <argument><expr><name pos:line="18" pos:column="61">r<pos:position pos:line="18" pos:column="62"/></name></expr></argument>,
                              <argument><expr><literal type="string" pos:line="19" pos:column="31">"incomplete redirection target of '%s' for "<pos:position pos:line="19" pos:column="75"/></literal>
                              <literal type="string" pos:line="20" pos:column="31">"URI '%s' modified to '%s'"<pos:position pos:line="20" pos:column="58"/></literal></expr></argument>,
                              <argument><expr><name pos:line="21" pos:column="31">orig_target<pos:position pos:line="21" pos:column="42"/></name></expr></argument>, <argument><expr><name><name pos:line="21" pos:column="44">r<pos:position pos:line="21" pos:column="45"/></name><operator pos:line="21" pos:column="45">-&gt;<pos:position pos:line="21" pos:column="50"/></operator><name pos:line="21" pos:column="47">uri<pos:position pos:line="21" pos:column="50"/></name></name></expr></argument>, <argument><expr><name pos:line="21" pos:column="52">ret<pos:position pos:line="21" pos:column="55"/></name></expr></argument>)<pos:position pos:line="21" pos:column="56"/></argument_list></call></expr>;<pos:position pos:line="21" pos:column="57"/></expr_stmt>
            }<pos:position pos:line="22" pos:column="14"/></block></then></if>
            <if pos:line="23" pos:column="13">if <condition pos:line="23" pos:column="16">(<expr><operator pos:line="23" pos:column="17">!<pos:position pos:line="23" pos:column="18"/></operator><call><name pos:line="23" pos:column="18">ap_is_url<pos:position pos:line="23" pos:column="27"/></name><argument_list pos:line="23" pos:column="27">(<argument><expr><name pos:line="23" pos:column="28">ret<pos:position pos:line="23" pos:column="31"/></name></expr></argument>)<pos:position pos:line="23" pos:column="32"/></argument_list></call></expr>)<pos:position pos:line="23" pos:column="33"/></condition><then pos:line="23" pos:column="33"> <block pos:line="23" pos:column="34">{
                <expr_stmt><expr><call><name pos:line="24" pos:column="17">ap_log_rerror<pos:position pos:line="24" pos:column="30"/></name><argument_list pos:line="24" pos:column="30">(<argument><expr><name pos:line="24" pos:column="31">APLOG_MARK<pos:position pos:line="24" pos:column="41"/></name></expr></argument>, <argument><expr><name pos:line="24" pos:column="43">APLOG_ERR<pos:position pos:line="24" pos:column="52"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="24" pos:column="54">0<pos:position pos:line="24" pos:column="55"/></literal></expr></argument>, <argument><expr><name pos:line="24" pos:column="57">r<pos:position pos:line="24" pos:column="58"/></name></expr></argument>,
                              <argument><expr><literal type="string" pos:line="25" pos:column="31">"cannot redirect '%s' to '%s'; "<pos:position pos:line="25" pos:column="63"/></literal>
                              <literal type="string" pos:line="26" pos:column="31">"target is not a valid absoluteURI or abs_path"<pos:position pos:line="26" pos:column="78"/></literal></expr></argument>,
                              <argument><expr><name><name pos:line="27" pos:column="31">r<pos:position pos:line="27" pos:column="32"/></name><operator pos:line="27" pos:column="32">-&gt;<pos:position pos:line="27" pos:column="37"/></operator><name pos:line="27" pos:column="34">uri<pos:position pos:line="27" pos:column="37"/></name></name></expr></argument>, <argument><expr><name pos:line="27" pos:column="39">ret<pos:position pos:line="27" pos:column="42"/></name></expr></argument>)<pos:position pos:line="27" pos:column="43"/></argument_list></call></expr>;<pos:position pos:line="27" pos:column="44"/></expr_stmt>
                <comment type="block" pos:line="28" pos:column="17">/* restore the config value, so as not to get a
                 * "regression" on existing "working" configs.
                 */</comment>
                <expr_stmt><expr><name pos:line="31" pos:column="17">ret<pos:position pos:line="31" pos:column="20"/></name> <operator pos:line="31" pos:column="21">=<pos:position pos:line="31" pos:column="22"/></operator> <name pos:line="31" pos:column="23">orig_target<pos:position pos:line="31" pos:column="34"/></name></expr>;<pos:position pos:line="31" pos:column="35"/></expr_stmt>
            }<pos:position pos:line="32" pos:column="14"/></block></then></if>
            <comment type="block" pos:line="33" pos:column="13">/* append requested query only, if the config didn't
             * supply its own.
             */</comment>
            <if pos:line="36" pos:column="13">if <condition pos:line="36" pos:column="16">(<expr><name><name pos:line="36" pos:column="17">r<pos:position pos:line="36" pos:column="18"/></name><operator pos:line="36" pos:column="18">-&gt;<pos:position pos:line="36" pos:column="23"/></operator><name pos:line="36" pos:column="20">args<pos:position pos:line="36" pos:column="24"/></name></name> <operator pos:line="36" pos:column="25">&amp;&amp;<pos:position pos:line="36" pos:column="35"/></operator> <operator pos:line="36" pos:column="28">!<pos:position pos:line="36" pos:column="29"/></operator><call><name pos:line="36" pos:column="29">ap_strchr<pos:position pos:line="36" pos:column="38"/></name><argument_list pos:line="36" pos:column="38">(<argument><expr><name pos:line="36" pos:column="39">ret<pos:position pos:line="36" pos:column="42"/></name></expr></argument>, <argument><expr><literal type="char" pos:line="36" pos:column="44">'?'<pos:position pos:line="36" pos:column="47"/></literal></expr></argument>)<pos:position pos:line="36" pos:column="48"/></argument_list></call></expr>)<pos:position pos:line="36" pos:column="49"/></condition><then pos:line="36" pos:column="49"> <block pos:line="36" pos:column="50">{
                <expr_stmt><expr><name pos:line="37" pos:column="17">ret<pos:position pos:line="37" pos:column="20"/></name> <operator pos:line="37" pos:column="21">=<pos:position pos:line="37" pos:column="22"/></operator> <call><name pos:line="37" pos:column="23">apr_pstrcat<pos:position pos:line="37" pos:column="34"/></name><argument_list pos:line="37" pos:column="34">(<argument><expr><name><name pos:line="37" pos:column="35">r<pos:position pos:line="37" pos:column="36"/></name><operator pos:line="37" pos:column="36">-&gt;<pos:position pos:line="37" pos:column="41"/></operator><name pos:line="37" pos:column="38">pool<pos:position pos:line="37" pos:column="42"/></name></name></expr></argument>, <argument><expr><name pos:line="37" pos:column="44">ret<pos:position pos:line="37" pos:column="47"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="37" pos:column="49">"?"<pos:position pos:line="37" pos:column="52"/></literal></expr></argument>, <argument><expr><name><name pos:line="37" pos:column="54">r<pos:position pos:line="37" pos:column="55"/></name><operator pos:line="37" pos:column="55">-&gt;<pos:position pos:line="37" pos:column="60"/></operator><name pos:line="37" pos:column="57">args<pos:position pos:line="37" pos:column="61"/></name></name></expr></argument>, <argument><expr><name pos:line="37" pos:column="63">NULL<pos:position pos:line="37" pos:column="67"/></name></expr></argument>)<pos:position pos:line="37" pos:column="68"/></argument_list></call></expr>;<pos:position pos:line="37" pos:column="69"/></expr_stmt>
            }<pos:position pos:line="38" pos:column="14"/></block></then></if>
            <expr_stmt><expr><call><name pos:line="39" pos:column="13">apr_table_setn<pos:position pos:line="39" pos:column="27"/></name><argument_list pos:line="39" pos:column="27">(<argument><expr><name><name pos:line="39" pos:column="28">r<pos:position pos:line="39" pos:column="29"/></name><operator pos:line="39" pos:column="29">-&gt;<pos:position pos:line="39" pos:column="34"/></operator><name pos:line="39" pos:column="31">headers_out<pos:position pos:line="39" pos:column="42"/></name></name></expr></argument>, <argument><expr><literal type="string" pos:line="39" pos:column="44">"Location"<pos:position pos:line="39" pos:column="54"/></literal></expr></argument>, <argument><expr><name pos:line="39" pos:column="56">ret<pos:position pos:line="39" pos:column="59"/></name></expr></argument>)<pos:position pos:line="39" pos:column="60"/></argument_list></call></expr>;<pos:position pos:line="39" pos:column="61"/></expr_stmt>
        }<pos:position pos:line="40" pos:column="10"/></block></then></if>
        <return pos:line="41" pos:column="9">return <expr><name pos:line="41" pos:column="16">status<pos:position pos:line="41" pos:column="22"/></name></expr>;<pos:position pos:line="41" pos:column="23"/></return>
    }<pos:position pos:line="42" pos:column="6"/></block></then></if>

    <if pos:line="44" pos:column="5">if <condition pos:line="44" pos:column="8">(<expr><operator pos:line="44" pos:column="9">(<pos:position pos:line="44" pos:column="10"/></operator><name pos:line="44" pos:column="10">ret<pos:position pos:line="44" pos:column="13"/></name> <operator pos:line="44" pos:column="14">=<pos:position pos:line="44" pos:column="15"/></operator> <call><name pos:line="44" pos:column="16">try_alias_list<pos:position pos:line="44" pos:column="30"/></name><argument_list pos:line="44" pos:column="30">(<argument><expr><name pos:line="44" pos:column="31">r<pos:position pos:line="44" pos:column="32"/></name></expr></argument>, <argument><expr><name><name pos:line="44" pos:column="34">serverconf<pos:position pos:line="44" pos:column="44"/></name><operator pos:line="44" pos:column="44">-&gt;<pos:position pos:line="44" pos:column="49"/></operator><name pos:line="44" pos:column="46">aliases<pos:position pos:line="44" pos:column="53"/></name></name></expr></argument>, <argument><expr><literal type="number" pos:line="44" pos:column="55">0<pos:position pos:line="44" pos:column="56"/></literal></expr></argument>, <argument><expr><operator pos:line="44" pos:column="58">&amp;<pos:position pos:line="44" pos:column="63"/></operator><name pos:line="44" pos:column="59">status<pos:position pos:line="44" pos:column="65"/></name></expr></argument>)<pos:position pos:line="44" pos:column="66"/></argument_list></call><operator pos:line="44" pos:column="66">)<pos:position pos:line="44" pos:column="67"/></operator> <operator pos:line="44" pos:column="68">!=<pos:position pos:line="44" pos:column="70"/></operator> <name pos:line="44" pos:column="71">NULL<pos:position pos:line="44" pos:column="75"/></name></expr>)<pos:position pos:line="44" pos:column="76"/></condition><then pos:line="44" pos:column="76"> <block pos:line="44" pos:column="77">{
        <expr_stmt><expr><name><name pos:line="45" pos:column="9">r<pos:position pos:line="45" pos:column="10"/></name><operator pos:line="45" pos:column="10">-&gt;<pos:position pos:line="45" pos:column="15"/></operator><name pos:line="45" pos:column="12">filename<pos:position pos:line="45" pos:column="20"/></name></name> <operator pos:line="45" pos:column="21">=<pos:position pos:line="45" pos:column="22"/></operator> <name pos:line="45" pos:column="23">ret<pos:position pos:line="45" pos:column="26"/></name></expr>;<pos:position pos:line="45" pos:column="27"/></expr_stmt>
        <return pos:line="46" pos:column="9">return <expr><name pos:line="46" pos:column="16">OK<pos:position pos:line="46" pos:column="18"/></name></expr>;<pos:position pos:line="46" pos:column="19"/></return>
    }<pos:position pos:line="47" pos:column="6"/></block></then></if>

    <return pos:line="49" pos:column="5">return <expr><name pos:line="49" pos:column="12">DECLINED<pos:position pos:line="49" pos:column="20"/></name></expr>;<pos:position pos:line="49" pos:column="21"/></return>
}<pos:position pos:line="50" pos:column="2"/></block></function></unit>

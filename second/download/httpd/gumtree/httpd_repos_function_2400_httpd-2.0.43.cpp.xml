<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/httpd/gumtree/httpd_repos_function_2400_httpd-2.0.43.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">XML_Parser<pos:position pos:line="1" pos:column="11"/></name></type>
<name pos:line="2" pos:column="1">XML_ParserCreate_MM<pos:position pos:line="2" pos:column="20"/></name><parameter_list pos:line="2" pos:column="20">(<parameter><decl><type><specifier pos:line="2" pos:column="21">const<pos:position pos:line="2" pos:column="26"/></specifier> <name pos:line="2" pos:column="27">XML_Char<pos:position pos:line="2" pos:column="35"/></name> <modifier pos:line="2" pos:column="36">*<pos:position pos:line="2" pos:column="37"/></modifier></type><name pos:line="2" pos:column="37">encodingName<pos:position pos:line="2" pos:column="49"/></name></decl></parameter>,
		    <parameter><decl><type><specifier pos:line="3" pos:column="21">const<pos:position pos:line="3" pos:column="26"/></specifier> <name pos:line="3" pos:column="27">XML_Memory_Handling_Suite<pos:position pos:line="3" pos:column="52"/></name> <modifier pos:line="3" pos:column="53">*<pos:position pos:line="3" pos:column="54"/></modifier></type><name pos:line="3" pos:column="54">memsuite<pos:position pos:line="3" pos:column="62"/></name></decl></parameter>,
		    <parameter><decl><type><specifier pos:line="4" pos:column="21">const<pos:position pos:line="4" pos:column="26"/></specifier> <name pos:line="4" pos:column="27">XML_Char<pos:position pos:line="4" pos:column="35"/></name> <modifier pos:line="4" pos:column="36">*<pos:position pos:line="4" pos:column="37"/></modifier></type><name pos:line="4" pos:column="37">nameSep<pos:position pos:line="4" pos:column="44"/></name></decl></parameter>)<pos:position pos:line="4" pos:column="45"/></parameter_list> <block pos:line="4" pos:column="46">{
  
  <decl_stmt><decl><type><name pos:line="6" pos:column="3">XML_Parser<pos:position pos:line="6" pos:column="13"/></name></type> <name pos:line="6" pos:column="14">parser<pos:position pos:line="6" pos:column="20"/></name></decl>;<pos:position pos:line="6" pos:column="21"/></decl_stmt>
  <decl_stmt><decl><specifier pos:line="7" pos:column="3">static<pos:position pos:line="7" pos:column="9"/></specifier>
  <type><specifier pos:line="8" pos:column="3">const<pos:position pos:line="8" pos:column="8"/></specifier> <name pos:line="8" pos:column="9">XML_Char<pos:position pos:line="8" pos:column="17"/></name></type> <name><name pos:line="8" pos:column="18">implicitContext<pos:position pos:line="8" pos:column="33"/></name><index pos:line="8" pos:column="33">[]<pos:position pos:line="8" pos:column="35"/></index></name> <init pos:line="8" pos:column="36">= <expr><block pos:line="8" pos:column="38">{
    <expr><call><name pos:line="9" pos:column="5">XML_T<pos:position pos:line="9" pos:column="10"/></name><argument_list pos:line="9" pos:column="10">(<argument><expr><literal type="char" pos:line="9" pos:column="11">'x'<pos:position pos:line="9" pos:column="14"/></literal></expr></argument>)<pos:position pos:line="9" pos:column="15"/></argument_list></call></expr>, <expr><call><name pos:line="9" pos:column="17">XML_T<pos:position pos:line="9" pos:column="22"/></name><argument_list pos:line="9" pos:column="22">(<argument><expr><literal type="char" pos:line="9" pos:column="23">'m'<pos:position pos:line="9" pos:column="26"/></literal></expr></argument>)<pos:position pos:line="9" pos:column="27"/></argument_list></call></expr>, <expr><call><name pos:line="9" pos:column="29">XML_T<pos:position pos:line="9" pos:column="34"/></name><argument_list pos:line="9" pos:column="34">(<argument><expr><literal type="char" pos:line="9" pos:column="35">'l'<pos:position pos:line="9" pos:column="38"/></literal></expr></argument>)<pos:position pos:line="9" pos:column="39"/></argument_list></call></expr>, <expr><call><name pos:line="9" pos:column="41">XML_T<pos:position pos:line="9" pos:column="46"/></name><argument_list pos:line="9" pos:column="46">(<argument><expr><literal type="char" pos:line="9" pos:column="47">'='<pos:position pos:line="9" pos:column="50"/></literal></expr></argument>)<pos:position pos:line="9" pos:column="51"/></argument_list></call></expr>,
    <expr><call><name pos:line="10" pos:column="5">XML_T<pos:position pos:line="10" pos:column="10"/></name><argument_list pos:line="10" pos:column="10">(<argument><expr><literal type="char" pos:line="10" pos:column="11">'h'<pos:position pos:line="10" pos:column="14"/></literal></expr></argument>)<pos:position pos:line="10" pos:column="15"/></argument_list></call></expr>, <expr><call><name pos:line="10" pos:column="17">XML_T<pos:position pos:line="10" pos:column="22"/></name><argument_list pos:line="10" pos:column="22">(<argument><expr><literal type="char" pos:line="10" pos:column="23">'t'<pos:position pos:line="10" pos:column="26"/></literal></expr></argument>)<pos:position pos:line="10" pos:column="27"/></argument_list></call></expr>, <expr><call><name pos:line="10" pos:column="29">XML_T<pos:position pos:line="10" pos:column="34"/></name><argument_list pos:line="10" pos:column="34">(<argument><expr><literal type="char" pos:line="10" pos:column="35">'t'<pos:position pos:line="10" pos:column="38"/></literal></expr></argument>)<pos:position pos:line="10" pos:column="39"/></argument_list></call></expr>, <expr><call><name pos:line="10" pos:column="41">XML_T<pos:position pos:line="10" pos:column="46"/></name><argument_list pos:line="10" pos:column="46">(<argument><expr><literal type="char" pos:line="10" pos:column="47">'p'<pos:position pos:line="10" pos:column="50"/></literal></expr></argument>)<pos:position pos:line="10" pos:column="51"/></argument_list></call></expr>, <expr><call><name pos:line="10" pos:column="53">XML_T<pos:position pos:line="10" pos:column="58"/></name><argument_list pos:line="10" pos:column="58">(<argument><expr><literal type="char" pos:line="10" pos:column="59">':'<pos:position pos:line="10" pos:column="62"/></literal></expr></argument>)<pos:position pos:line="10" pos:column="63"/></argument_list></call></expr>,
    <expr><call><name pos:line="11" pos:column="5">XML_T<pos:position pos:line="11" pos:column="10"/></name><argument_list pos:line="11" pos:column="10">(<argument><expr><literal type="char" pos:line="11" pos:column="11">'/'<pos:position pos:line="11" pos:column="14"/></literal></expr></argument>)<pos:position pos:line="11" pos:column="15"/></argument_list></call></expr>, <expr><call><name pos:line="11" pos:column="17">XML_T<pos:position pos:line="11" pos:column="22"/></name><argument_list pos:line="11" pos:column="22">(<argument><expr><literal type="char" pos:line="11" pos:column="23">'/'<pos:position pos:line="11" pos:column="26"/></literal></expr></argument>)<pos:position pos:line="11" pos:column="27"/></argument_list></call></expr>, <expr><call><name pos:line="11" pos:column="29">XML_T<pos:position pos:line="11" pos:column="34"/></name><argument_list pos:line="11" pos:column="34">(<argument><expr><literal type="char" pos:line="11" pos:column="35">'w'<pos:position pos:line="11" pos:column="38"/></literal></expr></argument>)<pos:position pos:line="11" pos:column="39"/></argument_list></call></expr>, <expr><call><name pos:line="11" pos:column="41">XML_T<pos:position pos:line="11" pos:column="46"/></name><argument_list pos:line="11" pos:column="46">(<argument><expr><literal type="char" pos:line="11" pos:column="47">'w'<pos:position pos:line="11" pos:column="50"/></literal></expr></argument>)<pos:position pos:line="11" pos:column="51"/></argument_list></call></expr>, <expr><call><name pos:line="11" pos:column="53">XML_T<pos:position pos:line="11" pos:column="58"/></name><argument_list pos:line="11" pos:column="58">(<argument><expr><literal type="char" pos:line="11" pos:column="59">'w'<pos:position pos:line="11" pos:column="62"/></literal></expr></argument>)<pos:position pos:line="11" pos:column="63"/></argument_list></call></expr>,
    <expr><call><name pos:line="12" pos:column="5">XML_T<pos:position pos:line="12" pos:column="10"/></name><argument_list pos:line="12" pos:column="10">(<argument><expr><literal type="char" pos:line="12" pos:column="11">'.'<pos:position pos:line="12" pos:column="14"/></literal></expr></argument>)<pos:position pos:line="12" pos:column="15"/></argument_list></call></expr>, <expr><call><name pos:line="12" pos:column="17">XML_T<pos:position pos:line="12" pos:column="22"/></name><argument_list pos:line="12" pos:column="22">(<argument><expr><literal type="char" pos:line="12" pos:column="23">'w'<pos:position pos:line="12" pos:column="26"/></literal></expr></argument>)<pos:position pos:line="12" pos:column="27"/></argument_list></call></expr>, <expr><call><name pos:line="12" pos:column="29">XML_T<pos:position pos:line="12" pos:column="34"/></name><argument_list pos:line="12" pos:column="34">(<argument><expr><literal type="char" pos:line="12" pos:column="35">'3'<pos:position pos:line="12" pos:column="38"/></literal></expr></argument>)<pos:position pos:line="12" pos:column="39"/></argument_list></call></expr>,
    <expr><call><name pos:line="13" pos:column="5">XML_T<pos:position pos:line="13" pos:column="10"/></name><argument_list pos:line="13" pos:column="10">(<argument><expr><literal type="char" pos:line="13" pos:column="11">'.'<pos:position pos:line="13" pos:column="14"/></literal></expr></argument>)<pos:position pos:line="13" pos:column="15"/></argument_list></call></expr>, <expr><call><name pos:line="13" pos:column="17">XML_T<pos:position pos:line="13" pos:column="22"/></name><argument_list pos:line="13" pos:column="22">(<argument><expr><literal type="char" pos:line="13" pos:column="23">'o'<pos:position pos:line="13" pos:column="26"/></literal></expr></argument>)<pos:position pos:line="13" pos:column="27"/></argument_list></call></expr>, <expr><call><name pos:line="13" pos:column="29">XML_T<pos:position pos:line="13" pos:column="34"/></name><argument_list pos:line="13" pos:column="34">(<argument><expr><literal type="char" pos:line="13" pos:column="35">'r'<pos:position pos:line="13" pos:column="38"/></literal></expr></argument>)<pos:position pos:line="13" pos:column="39"/></argument_list></call></expr>, <expr><call><name pos:line="13" pos:column="41">XML_T<pos:position pos:line="13" pos:column="46"/></name><argument_list pos:line="13" pos:column="46">(<argument><expr><literal type="char" pos:line="13" pos:column="47">'g'<pos:position pos:line="13" pos:column="50"/></literal></expr></argument>)<pos:position pos:line="13" pos:column="51"/></argument_list></call></expr>,
    <expr><call><name pos:line="14" pos:column="5">XML_T<pos:position pos:line="14" pos:column="10"/></name><argument_list pos:line="14" pos:column="10">(<argument><expr><literal type="char" pos:line="14" pos:column="11">'/'<pos:position pos:line="14" pos:column="14"/></literal></expr></argument>)<pos:position pos:line="14" pos:column="15"/></argument_list></call></expr>, <expr><call><name pos:line="14" pos:column="17">XML_T<pos:position pos:line="14" pos:column="22"/></name><argument_list pos:line="14" pos:column="22">(<argument><expr><literal type="char" pos:line="14" pos:column="23">'X'<pos:position pos:line="14" pos:column="26"/></literal></expr></argument>)<pos:position pos:line="14" pos:column="27"/></argument_list></call></expr>, <expr><call><name pos:line="14" pos:column="29">XML_T<pos:position pos:line="14" pos:column="34"/></name><argument_list pos:line="14" pos:column="34">(<argument><expr><literal type="char" pos:line="14" pos:column="35">'M'<pos:position pos:line="14" pos:column="38"/></literal></expr></argument>)<pos:position pos:line="14" pos:column="39"/></argument_list></call></expr>, <expr><call><name pos:line="14" pos:column="41">XML_T<pos:position pos:line="14" pos:column="46"/></name><argument_list pos:line="14" pos:column="46">(<argument><expr><literal type="char" pos:line="14" pos:column="47">'L'<pos:position pos:line="14" pos:column="50"/></literal></expr></argument>)<pos:position pos:line="14" pos:column="51"/></argument_list></call></expr>,
    <expr><call><name pos:line="15" pos:column="5">XML_T<pos:position pos:line="15" pos:column="10"/></name><argument_list pos:line="15" pos:column="10">(<argument><expr><literal type="char" pos:line="15" pos:column="11">'/'<pos:position pos:line="15" pos:column="14"/></literal></expr></argument>)<pos:position pos:line="15" pos:column="15"/></argument_list></call></expr>, <expr><call><name pos:line="15" pos:column="17">XML_T<pos:position pos:line="15" pos:column="22"/></name><argument_list pos:line="15" pos:column="22">(<argument><expr><literal type="char" pos:line="15" pos:column="23">'1'<pos:position pos:line="15" pos:column="26"/></literal></expr></argument>)<pos:position pos:line="15" pos:column="27"/></argument_list></call></expr>, <expr><call><name pos:line="15" pos:column="29">XML_T<pos:position pos:line="15" pos:column="34"/></name><argument_list pos:line="15" pos:column="34">(<argument><expr><literal type="char" pos:line="15" pos:column="35">'9'<pos:position pos:line="15" pos:column="38"/></literal></expr></argument>)<pos:position pos:line="15" pos:column="39"/></argument_list></call></expr>, <expr><call><name pos:line="15" pos:column="41">XML_T<pos:position pos:line="15" pos:column="46"/></name><argument_list pos:line="15" pos:column="46">(<argument><expr><literal type="char" pos:line="15" pos:column="47">'9'<pos:position pos:line="15" pos:column="50"/></literal></expr></argument>)<pos:position pos:line="15" pos:column="51"/></argument_list></call></expr>, <expr><call><name pos:line="15" pos:column="53">XML_T<pos:position pos:line="15" pos:column="58"/></name><argument_list pos:line="15" pos:column="58">(<argument><expr><literal type="char" pos:line="15" pos:column="59">'8'<pos:position pos:line="15" pos:column="62"/></literal></expr></argument>)<pos:position pos:line="15" pos:column="63"/></argument_list></call></expr>,
    <expr><call><name pos:line="16" pos:column="5">XML_T<pos:position pos:line="16" pos:column="10"/></name><argument_list pos:line="16" pos:column="10">(<argument><expr><literal type="char" pos:line="16" pos:column="11">'/'<pos:position pos:line="16" pos:column="14"/></literal></expr></argument>)<pos:position pos:line="16" pos:column="15"/></argument_list></call></expr>, <expr><call><name pos:line="16" pos:column="17">XML_T<pos:position pos:line="16" pos:column="22"/></name><argument_list pos:line="16" pos:column="22">(<argument><expr><literal type="char" pos:line="16" pos:column="23">'n'<pos:position pos:line="16" pos:column="26"/></literal></expr></argument>)<pos:position pos:line="16" pos:column="27"/></argument_list></call></expr>, <expr><call><name pos:line="16" pos:column="29">XML_T<pos:position pos:line="16" pos:column="34"/></name><argument_list pos:line="16" pos:column="34">(<argument><expr><literal type="char" pos:line="16" pos:column="35">'a'<pos:position pos:line="16" pos:column="38"/></literal></expr></argument>)<pos:position pos:line="16" pos:column="39"/></argument_list></call></expr>, <expr><call><name pos:line="16" pos:column="41">XML_T<pos:position pos:line="16" pos:column="46"/></name><argument_list pos:line="16" pos:column="46">(<argument><expr><literal type="char" pos:line="16" pos:column="47">'m'<pos:position pos:line="16" pos:column="50"/></literal></expr></argument>)<pos:position pos:line="16" pos:column="51"/></argument_list></call></expr>, <expr><call><name pos:line="16" pos:column="53">XML_T<pos:position pos:line="16" pos:column="58"/></name><argument_list pos:line="16" pos:column="58">(<argument><expr><literal type="char" pos:line="16" pos:column="59">'e'<pos:position pos:line="16" pos:column="62"/></literal></expr></argument>)<pos:position pos:line="16" pos:column="63"/></argument_list></call></expr>,
    <expr><call><name pos:line="17" pos:column="5">XML_T<pos:position pos:line="17" pos:column="10"/></name><argument_list pos:line="17" pos:column="10">(<argument><expr><literal type="char" pos:line="17" pos:column="11">'s'<pos:position pos:line="17" pos:column="14"/></literal></expr></argument>)<pos:position pos:line="17" pos:column="15"/></argument_list></call></expr>, <expr><call><name pos:line="17" pos:column="17">XML_T<pos:position pos:line="17" pos:column="22"/></name><argument_list pos:line="17" pos:column="22">(<argument><expr><literal type="char" pos:line="17" pos:column="23">'p'<pos:position pos:line="17" pos:column="26"/></literal></expr></argument>)<pos:position pos:line="17" pos:column="27"/></argument_list></call></expr>, <expr><call><name pos:line="17" pos:column="29">XML_T<pos:position pos:line="17" pos:column="34"/></name><argument_list pos:line="17" pos:column="34">(<argument><expr><literal type="char" pos:line="17" pos:column="35">'a'<pos:position pos:line="17" pos:column="38"/></literal></expr></argument>)<pos:position pos:line="17" pos:column="39"/></argument_list></call></expr>, <expr><call><name pos:line="17" pos:column="41">XML_T<pos:position pos:line="17" pos:column="46"/></name><argument_list pos:line="17" pos:column="46">(<argument><expr><literal type="char" pos:line="17" pos:column="47">'c'<pos:position pos:line="17" pos:column="50"/></literal></expr></argument>)<pos:position pos:line="17" pos:column="51"/></argument_list></call></expr>, <expr><call><name pos:line="17" pos:column="53">XML_T<pos:position pos:line="17" pos:column="58"/></name><argument_list pos:line="17" pos:column="58">(<argument><expr><literal type="char" pos:line="17" pos:column="59">'e'<pos:position pos:line="17" pos:column="62"/></literal></expr></argument>)<pos:position pos:line="17" pos:column="63"/></argument_list></call></expr>,
    <macro><name pos:line="18" pos:column="5">XML_T<pos:position pos:line="18" pos:column="10"/></name><argument_list pos:line="18" pos:column="10">(<argument><literal type="char" pos:line="18" pos:column="11">'\0'<pos:position pos:line="18" pos:column="15"/></literal></argument>)<pos:position pos:line="18" pos:column="16"/></argument_list></macro>
  }<pos:position pos:line="19" pos:column="4"/></block></expr></init></decl>;<pos:position pos:line="19" pos:column="5"/></decl_stmt>


  <if pos:line="22" pos:column="3">if <condition pos:line="22" pos:column="6">(<expr><name pos:line="22" pos:column="7">memsuite<pos:position pos:line="22" pos:column="15"/></name></expr>)<pos:position pos:line="22" pos:column="16"/></condition><then pos:line="22" pos:column="16"> <block pos:line="22" pos:column="17">{
    <decl_stmt><decl><type><name pos:line="23" pos:column="5">XML_Memory_Handling_Suite<pos:position pos:line="23" pos:column="30"/></name> <modifier pos:line="23" pos:column="31">*<pos:position pos:line="23" pos:column="32"/></modifier></type><name pos:line="23" pos:column="32">mtemp<pos:position pos:line="23" pos:column="37"/></name></decl>;<pos:position pos:line="23" pos:column="38"/></decl_stmt>
    <expr_stmt><expr><name pos:line="24" pos:column="5">parser<pos:position pos:line="24" pos:column="11"/></name> <operator pos:line="24" pos:column="12">=<pos:position pos:line="24" pos:column="13"/></operator> <call><name><name pos:line="24" pos:column="14">memsuite<pos:position pos:line="24" pos:column="22"/></name><operator pos:line="24" pos:column="22">-&gt;<pos:position pos:line="24" pos:column="27"/></operator><name pos:line="24" pos:column="24">malloc_fcn<pos:position pos:line="24" pos:column="34"/></name></name><argument_list pos:line="24" pos:column="34">(<argument><expr><sizeof pos:line="24" pos:column="35">sizeof<argument_list pos:line="24" pos:column="41">(<argument><expr><name pos:line="24" pos:column="42">Parser<pos:position pos:line="24" pos:column="48"/></name></expr></argument>)<pos:position pos:line="24" pos:column="49"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="24" pos:column="50"/></argument_list></call></expr>;<pos:position pos:line="24" pos:column="51"/></expr_stmt>
    <expr_stmt><expr><name pos:line="25" pos:column="5">mtemp<pos:position pos:line="25" pos:column="10"/></name> <operator pos:line="25" pos:column="11">=<pos:position pos:line="25" pos:column="12"/></operator> <operator pos:line="25" pos:column="13">&amp;<pos:position pos:line="25" pos:column="18"/></operator><operator pos:line="25" pos:column="14">(<pos:position pos:line="25" pos:column="15"/></operator><operator pos:line="25" pos:column="15">(<pos:position pos:line="25" pos:column="16"/></operator><operator pos:line="25" pos:column="16">(<pos:position pos:line="25" pos:column="17"/></operator><name pos:line="25" pos:column="17">Parser<pos:position pos:line="25" pos:column="23"/></name> <operator pos:line="25" pos:column="24">*<pos:position pos:line="25" pos:column="25"/></operator><operator pos:line="25" pos:column="25">)<pos:position pos:line="25" pos:column="26"/></operator> <name pos:line="25" pos:column="27">parser<pos:position pos:line="25" pos:column="33"/></name><operator pos:line="25" pos:column="33">)<pos:position pos:line="25" pos:column="34"/></operator><operator pos:line="25" pos:column="34">-&gt;<pos:position pos:line="25" pos:column="39"/></operator><name pos:line="25" pos:column="36">m_mem<pos:position pos:line="25" pos:column="41"/></name><operator pos:line="25" pos:column="41">)<pos:position pos:line="25" pos:column="42"/></operator></expr>;<pos:position pos:line="25" pos:column="43"/></expr_stmt>
    <expr_stmt><expr><name><name pos:line="26" pos:column="5">mtemp<pos:position pos:line="26" pos:column="10"/></name><operator pos:line="26" pos:column="10">-&gt;<pos:position pos:line="26" pos:column="15"/></operator><name pos:line="26" pos:column="12">malloc_fcn<pos:position pos:line="26" pos:column="22"/></name></name> <operator pos:line="26" pos:column="23">=<pos:position pos:line="26" pos:column="24"/></operator> <name><name pos:line="26" pos:column="25">memsuite<pos:position pos:line="26" pos:column="33"/></name><operator pos:line="26" pos:column="33">-&gt;<pos:position pos:line="26" pos:column="38"/></operator><name pos:line="26" pos:column="35">malloc_fcn<pos:position pos:line="26" pos:column="45"/></name></name></expr>;<pos:position pos:line="26" pos:column="46"/></expr_stmt>
    <expr_stmt><expr><name><name pos:line="27" pos:column="5">mtemp<pos:position pos:line="27" pos:column="10"/></name><operator pos:line="27" pos:column="10">-&gt;<pos:position pos:line="27" pos:column="15"/></operator><name pos:line="27" pos:column="12">realloc_fcn<pos:position pos:line="27" pos:column="23"/></name></name> <operator pos:line="27" pos:column="24">=<pos:position pos:line="27" pos:column="25"/></operator> <name><name pos:line="27" pos:column="26">memsuite<pos:position pos:line="27" pos:column="34"/></name><operator pos:line="27" pos:column="34">-&gt;<pos:position pos:line="27" pos:column="39"/></operator><name pos:line="27" pos:column="36">realloc_fcn<pos:position pos:line="27" pos:column="47"/></name></name></expr>;<pos:position pos:line="27" pos:column="48"/></expr_stmt>
    <expr_stmt><expr><name><name pos:line="28" pos:column="5">mtemp<pos:position pos:line="28" pos:column="10"/></name><operator pos:line="28" pos:column="10">-&gt;<pos:position pos:line="28" pos:column="15"/></operator><name pos:line="28" pos:column="12">free_fcn<pos:position pos:line="28" pos:column="20"/></name></name> <operator pos:line="28" pos:column="21">=<pos:position pos:line="28" pos:column="22"/></operator> <name><name pos:line="28" pos:column="23">memsuite<pos:position pos:line="28" pos:column="31"/></name><operator pos:line="28" pos:column="31">-&gt;<pos:position pos:line="28" pos:column="36"/></operator><name pos:line="28" pos:column="33">free_fcn<pos:position pos:line="28" pos:column="41"/></name></name></expr>;<pos:position pos:line="28" pos:column="42"/></expr_stmt>
  }<pos:position pos:line="29" pos:column="4"/></block></then>
  <else pos:line="30" pos:column="3">else <block pos:line="30" pos:column="8">{
    <decl_stmt><decl><type><name pos:line="31" pos:column="5">XML_Memory_Handling_Suite<pos:position pos:line="31" pos:column="30"/></name> <modifier pos:line="31" pos:column="31">*<pos:position pos:line="31" pos:column="32"/></modifier></type><name pos:line="31" pos:column="32">mtemp<pos:position pos:line="31" pos:column="37"/></name></decl>;<pos:position pos:line="31" pos:column="38"/></decl_stmt>
    <expr_stmt><expr><name pos:line="32" pos:column="5">parser<pos:position pos:line="32" pos:column="11"/></name> <operator pos:line="32" pos:column="12">=<pos:position pos:line="32" pos:column="13"/></operator> <call><name pos:line="32" pos:column="14">malloc<pos:position pos:line="32" pos:column="20"/></name><argument_list pos:line="32" pos:column="20">(<argument><expr><sizeof pos:line="32" pos:column="21">sizeof<argument_list pos:line="32" pos:column="27">(<argument><expr><name pos:line="32" pos:column="28">Parser<pos:position pos:line="32" pos:column="34"/></name></expr></argument>)<pos:position pos:line="32" pos:column="35"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="32" pos:column="36"/></argument_list></call></expr>;<pos:position pos:line="32" pos:column="37"/></expr_stmt>
    <expr_stmt><expr><name pos:line="33" pos:column="5">mtemp<pos:position pos:line="33" pos:column="10"/></name> <operator pos:line="33" pos:column="11">=<pos:position pos:line="33" pos:column="12"/></operator> <operator pos:line="33" pos:column="13">&amp;<pos:position pos:line="33" pos:column="18"/></operator><operator pos:line="33" pos:column="14">(<pos:position pos:line="33" pos:column="15"/></operator><operator pos:line="33" pos:column="15">(<pos:position pos:line="33" pos:column="16"/></operator><operator pos:line="33" pos:column="16">(<pos:position pos:line="33" pos:column="17"/></operator><name pos:line="33" pos:column="17">Parser<pos:position pos:line="33" pos:column="23"/></name> <operator pos:line="33" pos:column="24">*<pos:position pos:line="33" pos:column="25"/></operator><operator pos:line="33" pos:column="25">)<pos:position pos:line="33" pos:column="26"/></operator> <name pos:line="33" pos:column="27">parser<pos:position pos:line="33" pos:column="33"/></name><operator pos:line="33" pos:column="33">)<pos:position pos:line="33" pos:column="34"/></operator><operator pos:line="33" pos:column="34">-&gt;<pos:position pos:line="33" pos:column="39"/></operator><name pos:line="33" pos:column="36">m_mem<pos:position pos:line="33" pos:column="41"/></name><operator pos:line="33" pos:column="41">)<pos:position pos:line="33" pos:column="42"/></operator></expr>;<pos:position pos:line="33" pos:column="43"/></expr_stmt>
    <expr_stmt><expr><name><name pos:line="34" pos:column="5">mtemp<pos:position pos:line="34" pos:column="10"/></name><operator pos:line="34" pos:column="10">-&gt;<pos:position pos:line="34" pos:column="15"/></operator><name pos:line="34" pos:column="12">malloc_fcn<pos:position pos:line="34" pos:column="22"/></name></name> <operator pos:line="34" pos:column="23">=<pos:position pos:line="34" pos:column="24"/></operator> <name pos:line="34" pos:column="25">malloc<pos:position pos:line="34" pos:column="31"/></name></expr>;<pos:position pos:line="34" pos:column="32"/></expr_stmt>
    <expr_stmt><expr><name><name pos:line="35" pos:column="5">mtemp<pos:position pos:line="35" pos:column="10"/></name><operator pos:line="35" pos:column="10">-&gt;<pos:position pos:line="35" pos:column="15"/></operator><name pos:line="35" pos:column="12">realloc_fcn<pos:position pos:line="35" pos:column="23"/></name></name> <operator pos:line="35" pos:column="24">=<pos:position pos:line="35" pos:column="25"/></operator> <name pos:line="35" pos:column="26">realloc<pos:position pos:line="35" pos:column="33"/></name></expr>;<pos:position pos:line="35" pos:column="34"/></expr_stmt>
    <expr_stmt><expr><name><name pos:line="36" pos:column="5">mtemp<pos:position pos:line="36" pos:column="10"/></name><operator pos:line="36" pos:column="10">-&gt;<pos:position pos:line="36" pos:column="15"/></operator><name pos:line="36" pos:column="12">free_fcn<pos:position pos:line="36" pos:column="20"/></name></name> <operator pos:line="36" pos:column="21">=<pos:position pos:line="36" pos:column="22"/></operator> <name pos:line="36" pos:column="23">free<pos:position pos:line="36" pos:column="27"/></name></expr>;<pos:position pos:line="36" pos:column="28"/></expr_stmt>
  }<pos:position pos:line="37" pos:column="4"/></block></else></if>

  <if pos:line="39" pos:column="3">if <condition pos:line="39" pos:column="6">(<expr><operator pos:line="39" pos:column="7">!<pos:position pos:line="39" pos:column="8"/></operator><name pos:line="39" pos:column="8">parser<pos:position pos:line="39" pos:column="14"/></name></expr>)<pos:position pos:line="39" pos:column="15"/></condition><then pos:line="39" pos:column="15">
    <block type="pseudo"><return pos:line="40" pos:column="5">return <expr><name pos:line="40" pos:column="12">parser<pos:position pos:line="40" pos:column="18"/></name></expr>;<pos:position pos:line="40" pos:column="19"/></return></block></then></if>
  <expr_stmt><expr><name pos:line="41" pos:column="3">processor<pos:position pos:line="41" pos:column="12"/></name> <operator pos:line="41" pos:column="13">=<pos:position pos:line="41" pos:column="14"/></operator> <name pos:line="41" pos:column="15">prologInitProcessor<pos:position pos:line="41" pos:column="34"/></name></expr>;<pos:position pos:line="41" pos:column="35"/></expr_stmt>
  <expr_stmt><expr><call><name pos:line="42" pos:column="3">XmlPrologStateInit<pos:position pos:line="42" pos:column="21"/></name><argument_list pos:line="42" pos:column="21">(<argument><expr><operator pos:line="42" pos:column="22">&amp;<pos:position pos:line="42" pos:column="27"/></operator><name pos:line="42" pos:column="23">prologState<pos:position pos:line="42" pos:column="34"/></name></expr></argument>)<pos:position pos:line="42" pos:column="35"/></argument_list></call></expr>;<pos:position pos:line="42" pos:column="36"/></expr_stmt>
  <expr_stmt><expr><name pos:line="43" pos:column="3">userData<pos:position pos:line="43" pos:column="11"/></name> <operator pos:line="43" pos:column="12">=<pos:position pos:line="43" pos:column="13"/></operator> <literal type="number" pos:line="43" pos:column="14">0<pos:position pos:line="43" pos:column="15"/></literal></expr>;<pos:position pos:line="43" pos:column="16"/></expr_stmt>
  <expr_stmt><expr><name pos:line="44" pos:column="3">handlerArg<pos:position pos:line="44" pos:column="13"/></name> <operator pos:line="44" pos:column="14">=<pos:position pos:line="44" pos:column="15"/></operator> <literal type="number" pos:line="44" pos:column="16">0<pos:position pos:line="44" pos:column="17"/></literal></expr>;<pos:position pos:line="44" pos:column="18"/></expr_stmt>
  <expr_stmt><expr><name pos:line="45" pos:column="3">startElementHandler<pos:position pos:line="45" pos:column="22"/></name> <operator pos:line="45" pos:column="23">=<pos:position pos:line="45" pos:column="24"/></operator> <literal type="number" pos:line="45" pos:column="25">0<pos:position pos:line="45" pos:column="26"/></literal></expr>;<pos:position pos:line="45" pos:column="27"/></expr_stmt>
  <expr_stmt><expr><name pos:line="46" pos:column="3">endElementHandler<pos:position pos:line="46" pos:column="20"/></name> <operator pos:line="46" pos:column="21">=<pos:position pos:line="46" pos:column="22"/></operator> <literal type="number" pos:line="46" pos:column="23">0<pos:position pos:line="46" pos:column="24"/></literal></expr>;<pos:position pos:line="46" pos:column="25"/></expr_stmt>
  <expr_stmt><expr><name pos:line="47" pos:column="3">characterDataHandler<pos:position pos:line="47" pos:column="23"/></name> <operator pos:line="47" pos:column="24">=<pos:position pos:line="47" pos:column="25"/></operator> <literal type="number" pos:line="47" pos:column="26">0<pos:position pos:line="47" pos:column="27"/></literal></expr>;<pos:position pos:line="47" pos:column="28"/></expr_stmt>
  <expr_stmt><expr><name pos:line="48" pos:column="3">processingInstructionHandler<pos:position pos:line="48" pos:column="31"/></name> <operator pos:line="48" pos:column="32">=<pos:position pos:line="48" pos:column="33"/></operator> <literal type="number" pos:line="48" pos:column="34">0<pos:position pos:line="48" pos:column="35"/></literal></expr>;<pos:position pos:line="48" pos:column="36"/></expr_stmt>
  <expr_stmt><expr><name pos:line="49" pos:column="3">commentHandler<pos:position pos:line="49" pos:column="17"/></name> <operator pos:line="49" pos:column="18">=<pos:position pos:line="49" pos:column="19"/></operator> <literal type="number" pos:line="49" pos:column="20">0<pos:position pos:line="49" pos:column="21"/></literal></expr>;<pos:position pos:line="49" pos:column="22"/></expr_stmt>
  <expr_stmt><expr><name pos:line="50" pos:column="3">startCdataSectionHandler<pos:position pos:line="50" pos:column="27"/></name> <operator pos:line="50" pos:column="28">=<pos:position pos:line="50" pos:column="29"/></operator> <literal type="number" pos:line="50" pos:column="30">0<pos:position pos:line="50" pos:column="31"/></literal></expr>;<pos:position pos:line="50" pos:column="32"/></expr_stmt>
  <expr_stmt><expr><name pos:line="51" pos:column="3">endCdataSectionHandler<pos:position pos:line="51" pos:column="25"/></name> <operator pos:line="51" pos:column="26">=<pos:position pos:line="51" pos:column="27"/></operator> <literal type="number" pos:line="51" pos:column="28">0<pos:position pos:line="51" pos:column="29"/></literal></expr>;<pos:position pos:line="51" pos:column="30"/></expr_stmt>
  <expr_stmt><expr><name pos:line="52" pos:column="3">defaultHandler<pos:position pos:line="52" pos:column="17"/></name> <operator pos:line="52" pos:column="18">=<pos:position pos:line="52" pos:column="19"/></operator> <literal type="number" pos:line="52" pos:column="20">0<pos:position pos:line="52" pos:column="21"/></literal></expr>;<pos:position pos:line="52" pos:column="22"/></expr_stmt>
  <expr_stmt><expr><name pos:line="53" pos:column="3">startDoctypeDeclHandler<pos:position pos:line="53" pos:column="26"/></name> <operator pos:line="53" pos:column="27">=<pos:position pos:line="53" pos:column="28"/></operator> <literal type="number" pos:line="53" pos:column="29">0<pos:position pos:line="53" pos:column="30"/></literal></expr>;<pos:position pos:line="53" pos:column="31"/></expr_stmt>
  <expr_stmt><expr><name pos:line="54" pos:column="3">endDoctypeDeclHandler<pos:position pos:line="54" pos:column="24"/></name> <operator pos:line="54" pos:column="25">=<pos:position pos:line="54" pos:column="26"/></operator> <literal type="number" pos:line="54" pos:column="27">0<pos:position pos:line="54" pos:column="28"/></literal></expr>;<pos:position pos:line="54" pos:column="29"/></expr_stmt>
  <expr_stmt><expr><name pos:line="55" pos:column="3">unparsedEntityDeclHandler<pos:position pos:line="55" pos:column="28"/></name> <operator pos:line="55" pos:column="29">=<pos:position pos:line="55" pos:column="30"/></operator> <literal type="number" pos:line="55" pos:column="31">0<pos:position pos:line="55" pos:column="32"/></literal></expr>;<pos:position pos:line="55" pos:column="33"/></expr_stmt>
  <expr_stmt><expr><name pos:line="56" pos:column="3">notationDeclHandler<pos:position pos:line="56" pos:column="22"/></name> <operator pos:line="56" pos:column="23">=<pos:position pos:line="56" pos:column="24"/></operator> <literal type="number" pos:line="56" pos:column="25">0<pos:position pos:line="56" pos:column="26"/></literal></expr>;<pos:position pos:line="56" pos:column="27"/></expr_stmt>
  <expr_stmt><expr><name pos:line="57" pos:column="3">startNamespaceDeclHandler<pos:position pos:line="57" pos:column="28"/></name> <operator pos:line="57" pos:column="29">=<pos:position pos:line="57" pos:column="30"/></operator> <literal type="number" pos:line="57" pos:column="31">0<pos:position pos:line="57" pos:column="32"/></literal></expr>;<pos:position pos:line="57" pos:column="33"/></expr_stmt>
  <expr_stmt><expr><name pos:line="58" pos:column="3">endNamespaceDeclHandler<pos:position pos:line="58" pos:column="26"/></name> <operator pos:line="58" pos:column="27">=<pos:position pos:line="58" pos:column="28"/></operator> <literal type="number" pos:line="58" pos:column="29">0<pos:position pos:line="58" pos:column="30"/></literal></expr>;<pos:position pos:line="58" pos:column="31"/></expr_stmt>
  <expr_stmt><expr><name pos:line="59" pos:column="3">notStandaloneHandler<pos:position pos:line="59" pos:column="23"/></name> <operator pos:line="59" pos:column="24">=<pos:position pos:line="59" pos:column="25"/></operator> <literal type="number" pos:line="59" pos:column="26">0<pos:position pos:line="59" pos:column="27"/></literal></expr>;<pos:position pos:line="59" pos:column="28"/></expr_stmt>
  <expr_stmt><expr><name pos:line="60" pos:column="3">externalEntityRefHandler<pos:position pos:line="60" pos:column="27"/></name> <operator pos:line="60" pos:column="28">=<pos:position pos:line="60" pos:column="29"/></operator> <literal type="number" pos:line="60" pos:column="30">0<pos:position pos:line="60" pos:column="31"/></literal></expr>;<pos:position pos:line="60" pos:column="32"/></expr_stmt>
  <expr_stmt><expr><name pos:line="61" pos:column="3">externalEntityRefHandlerArg<pos:position pos:line="61" pos:column="30"/></name> <operator pos:line="61" pos:column="31">=<pos:position pos:line="61" pos:column="32"/></operator> <name pos:line="61" pos:column="33">parser<pos:position pos:line="61" pos:column="39"/></name></expr>;<pos:position pos:line="61" pos:column="40"/></expr_stmt>
  <expr_stmt><expr><name pos:line="62" pos:column="3">unknownEncodingHandler<pos:position pos:line="62" pos:column="25"/></name> <operator pos:line="62" pos:column="26">=<pos:position pos:line="62" pos:column="27"/></operator> <literal type="number" pos:line="62" pos:column="28">0<pos:position pos:line="62" pos:column="29"/></literal></expr>;<pos:position pos:line="62" pos:column="30"/></expr_stmt>
  <expr_stmt><expr><name pos:line="63" pos:column="3">elementDeclHandler<pos:position pos:line="63" pos:column="21"/></name> <operator pos:line="63" pos:column="22">=<pos:position pos:line="63" pos:column="23"/></operator> <literal type="number" pos:line="63" pos:column="24">0<pos:position pos:line="63" pos:column="25"/></literal></expr>;<pos:position pos:line="63" pos:column="26"/></expr_stmt>
  <expr_stmt><expr><name pos:line="64" pos:column="3">attlistDeclHandler<pos:position pos:line="64" pos:column="21"/></name> <operator pos:line="64" pos:column="22">=<pos:position pos:line="64" pos:column="23"/></operator> <literal type="number" pos:line="64" pos:column="24">0<pos:position pos:line="64" pos:column="25"/></literal></expr>;<pos:position pos:line="64" pos:column="26"/></expr_stmt>
  <expr_stmt><expr><name pos:line="65" pos:column="3">entityDeclHandler<pos:position pos:line="65" pos:column="20"/></name> <operator pos:line="65" pos:column="21">=<pos:position pos:line="65" pos:column="22"/></operator> <literal type="number" pos:line="65" pos:column="23">0<pos:position pos:line="65" pos:column="24"/></literal></expr>;<pos:position pos:line="65" pos:column="25"/></expr_stmt>
  <expr_stmt><expr><name pos:line="66" pos:column="3">xmlDeclHandler<pos:position pos:line="66" pos:column="17"/></name> <operator pos:line="66" pos:column="18">=<pos:position pos:line="66" pos:column="19"/></operator> <literal type="number" pos:line="66" pos:column="20">0<pos:position pos:line="66" pos:column="21"/></literal></expr>;<pos:position pos:line="66" pos:column="22"/></expr_stmt>
  <expr_stmt><expr><name pos:line="67" pos:column="3">buffer<pos:position pos:line="67" pos:column="9"/></name> <operator pos:line="67" pos:column="10">=<pos:position pos:line="67" pos:column="11"/></operator> <literal type="number" pos:line="67" pos:column="12">0<pos:position pos:line="67" pos:column="13"/></literal></expr>;<pos:position pos:line="67" pos:column="14"/></expr_stmt>
  <expr_stmt><expr><name pos:line="68" pos:column="3">bufferPtr<pos:position pos:line="68" pos:column="12"/></name> <operator pos:line="68" pos:column="13">=<pos:position pos:line="68" pos:column="14"/></operator> <literal type="number" pos:line="68" pos:column="15">0<pos:position pos:line="68" pos:column="16"/></literal></expr>;<pos:position pos:line="68" pos:column="17"/></expr_stmt>
  <expr_stmt><expr><name pos:line="69" pos:column="3">bufferEnd<pos:position pos:line="69" pos:column="12"/></name> <operator pos:line="69" pos:column="13">=<pos:position pos:line="69" pos:column="14"/></operator> <literal type="number" pos:line="69" pos:column="15">0<pos:position pos:line="69" pos:column="16"/></literal></expr>;<pos:position pos:line="69" pos:column="17"/></expr_stmt>
  <expr_stmt><expr><name pos:line="70" pos:column="3">parseEndByteIndex<pos:position pos:line="70" pos:column="20"/></name> <operator pos:line="70" pos:column="21">=<pos:position pos:line="70" pos:column="22"/></operator> <literal type="number" pos:line="70" pos:column="23">0<pos:position pos:line="70" pos:column="24"/></literal></expr>;<pos:position pos:line="70" pos:column="25"/></expr_stmt>
  <expr_stmt><expr><name pos:line="71" pos:column="3">parseEndPtr<pos:position pos:line="71" pos:column="14"/></name> <operator pos:line="71" pos:column="15">=<pos:position pos:line="71" pos:column="16"/></operator> <literal type="number" pos:line="71" pos:column="17">0<pos:position pos:line="71" pos:column="18"/></literal></expr>;<pos:position pos:line="71" pos:column="19"/></expr_stmt>
  <expr_stmt><expr><name pos:line="72" pos:column="3">bufferLim<pos:position pos:line="72" pos:column="12"/></name> <operator pos:line="72" pos:column="13">=<pos:position pos:line="72" pos:column="14"/></operator> <literal type="number" pos:line="72" pos:column="15">0<pos:position pos:line="72" pos:column="16"/></literal></expr>;<pos:position pos:line="72" pos:column="17"/></expr_stmt>
  <expr_stmt><expr><name pos:line="73" pos:column="3">declElementType<pos:position pos:line="73" pos:column="18"/></name> <operator pos:line="73" pos:column="19">=<pos:position pos:line="73" pos:column="20"/></operator> <literal type="number" pos:line="73" pos:column="21">0<pos:position pos:line="73" pos:column="22"/></literal></expr>;<pos:position pos:line="73" pos:column="23"/></expr_stmt>
  <expr_stmt><expr><name pos:line="74" pos:column="3">declAttributeId<pos:position pos:line="74" pos:column="18"/></name> <operator pos:line="74" pos:column="19">=<pos:position pos:line="74" pos:column="20"/></operator> <literal type="number" pos:line="74" pos:column="21">0<pos:position pos:line="74" pos:column="22"/></literal></expr>;<pos:position pos:line="74" pos:column="23"/></expr_stmt>
  <expr_stmt><expr><name pos:line="75" pos:column="3">declEntity<pos:position pos:line="75" pos:column="13"/></name> <operator pos:line="75" pos:column="14">=<pos:position pos:line="75" pos:column="15"/></operator> <literal type="number" pos:line="75" pos:column="16">0<pos:position pos:line="75" pos:column="17"/></literal></expr>;<pos:position pos:line="75" pos:column="18"/></expr_stmt>
  <expr_stmt><expr><name pos:line="76" pos:column="3">doctypeName<pos:position pos:line="76" pos:column="14"/></name> <operator pos:line="76" pos:column="15">=<pos:position pos:line="76" pos:column="16"/></operator> <literal type="number" pos:line="76" pos:column="17">0<pos:position pos:line="76" pos:column="18"/></literal></expr>;<pos:position pos:line="76" pos:column="19"/></expr_stmt>
  <expr_stmt><expr><name pos:line="77" pos:column="3">doctypeSysid<pos:position pos:line="77" pos:column="15"/></name> <operator pos:line="77" pos:column="16">=<pos:position pos:line="77" pos:column="17"/></operator> <literal type="number" pos:line="77" pos:column="18">0<pos:position pos:line="77" pos:column="19"/></literal></expr>;<pos:position pos:line="77" pos:column="20"/></expr_stmt>
  <expr_stmt><expr><name pos:line="78" pos:column="3">doctypePubid<pos:position pos:line="78" pos:column="15"/></name> <operator pos:line="78" pos:column="16">=<pos:position pos:line="78" pos:column="17"/></operator> <literal type="number" pos:line="78" pos:column="18">0<pos:position pos:line="78" pos:column="19"/></literal></expr>;<pos:position pos:line="78" pos:column="20"/></expr_stmt>
  <expr_stmt><expr><name pos:line="79" pos:column="3">declAttributeType<pos:position pos:line="79" pos:column="20"/></name> <operator pos:line="79" pos:column="21">=<pos:position pos:line="79" pos:column="22"/></operator> <literal type="number" pos:line="79" pos:column="23">0<pos:position pos:line="79" pos:column="24"/></literal></expr>;<pos:position pos:line="79" pos:column="25"/></expr_stmt>
  <expr_stmt><expr><name pos:line="80" pos:column="3">declNotationName<pos:position pos:line="80" pos:column="19"/></name> <operator pos:line="80" pos:column="20">=<pos:position pos:line="80" pos:column="21"/></operator> <literal type="number" pos:line="80" pos:column="22">0<pos:position pos:line="80" pos:column="23"/></literal></expr>;<pos:position pos:line="80" pos:column="24"/></expr_stmt>
  <expr_stmt><expr><name pos:line="81" pos:column="3">declNotationPublicId<pos:position pos:line="81" pos:column="23"/></name> <operator pos:line="81" pos:column="24">=<pos:position pos:line="81" pos:column="25"/></operator> <literal type="number" pos:line="81" pos:column="26">0<pos:position pos:line="81" pos:column="27"/></literal></expr>;<pos:position pos:line="81" pos:column="28"/></expr_stmt>
  <expr_stmt><expr><call><name pos:line="82" pos:column="3">memset<pos:position pos:line="82" pos:column="9"/></name><argument_list pos:line="82" pos:column="9">(<argument><expr><operator pos:line="82" pos:column="10">&amp;<pos:position pos:line="82" pos:column="15"/></operator><name pos:line="82" pos:column="11">position<pos:position pos:line="82" pos:column="19"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="82" pos:column="21">0<pos:position pos:line="82" pos:column="22"/></literal></expr></argument>, <argument><expr><sizeof pos:line="82" pos:column="24">sizeof<argument_list pos:line="82" pos:column="30">(<argument><expr><name pos:line="82" pos:column="31">POSITION<pos:position pos:line="82" pos:column="39"/></name></expr></argument>)<pos:position pos:line="82" pos:column="40"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="82" pos:column="41"/></argument_list></call></expr>;<pos:position pos:line="82" pos:column="42"/></expr_stmt>
  <expr_stmt><expr><name pos:line="83" pos:column="3">errorCode<pos:position pos:line="83" pos:column="12"/></name> <operator pos:line="83" pos:column="13">=<pos:position pos:line="83" pos:column="14"/></operator> <name pos:line="83" pos:column="15">XML_ERROR_NONE<pos:position pos:line="83" pos:column="29"/></name></expr>;<pos:position pos:line="83" pos:column="30"/></expr_stmt>
  <expr_stmt><expr><name pos:line="84" pos:column="3">eventPtr<pos:position pos:line="84" pos:column="11"/></name> <operator pos:line="84" pos:column="12">=<pos:position pos:line="84" pos:column="13"/></operator> <literal type="number" pos:line="84" pos:column="14">0<pos:position pos:line="84" pos:column="15"/></literal></expr>;<pos:position pos:line="84" pos:column="16"/></expr_stmt>
  <expr_stmt><expr><name pos:line="85" pos:column="3">eventEndPtr<pos:position pos:line="85" pos:column="14"/></name> <operator pos:line="85" pos:column="15">=<pos:position pos:line="85" pos:column="16"/></operator> <literal type="number" pos:line="85" pos:column="17">0<pos:position pos:line="85" pos:column="18"/></literal></expr>;<pos:position pos:line="85" pos:column="19"/></expr_stmt>
  <expr_stmt><expr><name pos:line="86" pos:column="3">positionPtr<pos:position pos:line="86" pos:column="14"/></name> <operator pos:line="86" pos:column="15">=<pos:position pos:line="86" pos:column="16"/></operator> <literal type="number" pos:line="86" pos:column="17">0<pos:position pos:line="86" pos:column="18"/></literal></expr>;<pos:position pos:line="86" pos:column="19"/></expr_stmt>
  <expr_stmt><expr><name pos:line="87" pos:column="3">openInternalEntities<pos:position pos:line="87" pos:column="23"/></name> <operator pos:line="87" pos:column="24">=<pos:position pos:line="87" pos:column="25"/></operator> <literal type="number" pos:line="87" pos:column="26">0<pos:position pos:line="87" pos:column="27"/></literal></expr>;<pos:position pos:line="87" pos:column="28"/></expr_stmt>
  <expr_stmt><expr><name pos:line="88" pos:column="3">tagLevel<pos:position pos:line="88" pos:column="11"/></name> <operator pos:line="88" pos:column="12">=<pos:position pos:line="88" pos:column="13"/></operator> <literal type="number" pos:line="88" pos:column="14">0<pos:position pos:line="88" pos:column="15"/></literal></expr>;<pos:position pos:line="88" pos:column="16"/></expr_stmt>
  <expr_stmt><expr><name pos:line="89" pos:column="3">tagStack<pos:position pos:line="89" pos:column="11"/></name> <operator pos:line="89" pos:column="12">=<pos:position pos:line="89" pos:column="13"/></operator> <literal type="number" pos:line="89" pos:column="14">0<pos:position pos:line="89" pos:column="15"/></literal></expr>;<pos:position pos:line="89" pos:column="16"/></expr_stmt>
  <expr_stmt><expr><name pos:line="90" pos:column="3">freeTagList<pos:position pos:line="90" pos:column="14"/></name> <operator pos:line="90" pos:column="15">=<pos:position pos:line="90" pos:column="16"/></operator> <literal type="number" pos:line="90" pos:column="17">0<pos:position pos:line="90" pos:column="18"/></literal></expr>;<pos:position pos:line="90" pos:column="19"/></expr_stmt>
  <expr_stmt><expr><name pos:line="91" pos:column="3">freeBindingList<pos:position pos:line="91" pos:column="18"/></name> <operator pos:line="91" pos:column="19">=<pos:position pos:line="91" pos:column="20"/></operator> <literal type="number" pos:line="91" pos:column="21">0<pos:position pos:line="91" pos:column="22"/></literal></expr>;<pos:position pos:line="91" pos:column="23"/></expr_stmt>
  <expr_stmt><expr><name pos:line="92" pos:column="3">inheritedBindings<pos:position pos:line="92" pos:column="20"/></name> <operator pos:line="92" pos:column="21">=<pos:position pos:line="92" pos:column="22"/></operator> <literal type="number" pos:line="92" pos:column="23">0<pos:position pos:line="92" pos:column="24"/></literal></expr>;<pos:position pos:line="92" pos:column="25"/></expr_stmt>
  <expr_stmt><expr><name pos:line="93" pos:column="3">attsSize<pos:position pos:line="93" pos:column="11"/></name> <operator pos:line="93" pos:column="12">=<pos:position pos:line="93" pos:column="13"/></operator> <name pos:line="93" pos:column="14">INIT_ATTS_SIZE<pos:position pos:line="93" pos:column="28"/></name></expr>;<pos:position pos:line="93" pos:column="29"/></expr_stmt>
  <expr_stmt><expr><name pos:line="94" pos:column="3">atts<pos:position pos:line="94" pos:column="7"/></name> <operator pos:line="94" pos:column="8">=<pos:position pos:line="94" pos:column="9"/></operator> <call><name pos:line="94" pos:column="10">MALLOC<pos:position pos:line="94" pos:column="16"/></name><argument_list pos:line="94" pos:column="16">(<argument><expr><name pos:line="94" pos:column="17">attsSize<pos:position pos:line="94" pos:column="25"/></name> <operator pos:line="94" pos:column="26">*<pos:position pos:line="94" pos:column="27"/></operator> <sizeof pos:line="94" pos:column="28">sizeof<argument_list pos:line="94" pos:column="34">(<argument><expr><name pos:line="94" pos:column="35">ATTRIBUTE<pos:position pos:line="94" pos:column="44"/></name></expr></argument>)<pos:position pos:line="94" pos:column="45"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="94" pos:column="46"/></argument_list></call></expr>;<pos:position pos:line="94" pos:column="47"/></expr_stmt>
  <expr_stmt><expr><name pos:line="95" pos:column="3">nSpecifiedAtts<pos:position pos:line="95" pos:column="17"/></name> <operator pos:line="95" pos:column="18">=<pos:position pos:line="95" pos:column="19"/></operator> <literal type="number" pos:line="95" pos:column="20">0<pos:position pos:line="95" pos:column="21"/></literal></expr>;<pos:position pos:line="95" pos:column="22"/></expr_stmt>
  <expr_stmt><expr><name pos:line="96" pos:column="3">dataBuf<pos:position pos:line="96" pos:column="10"/></name> <operator pos:line="96" pos:column="11">=<pos:position pos:line="96" pos:column="12"/></operator> <call><name pos:line="96" pos:column="13">MALLOC<pos:position pos:line="96" pos:column="19"/></name><argument_list pos:line="96" pos:column="19">(<argument><expr><name pos:line="96" pos:column="20">INIT_DATA_BUF_SIZE<pos:position pos:line="96" pos:column="38"/></name> <operator pos:line="96" pos:column="39">*<pos:position pos:line="96" pos:column="40"/></operator> <sizeof pos:line="96" pos:column="41">sizeof<argument_list pos:line="96" pos:column="47">(<argument><expr><name pos:line="96" pos:column="48">XML_Char<pos:position pos:line="96" pos:column="56"/></name></expr></argument>)<pos:position pos:line="96" pos:column="57"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="96" pos:column="58"/></argument_list></call></expr>;<pos:position pos:line="96" pos:column="59"/></expr_stmt>
  <expr_stmt><expr><name pos:line="97" pos:column="3">groupSize<pos:position pos:line="97" pos:column="12"/></name> <operator pos:line="97" pos:column="13">=<pos:position pos:line="97" pos:column="14"/></operator> <literal type="number" pos:line="97" pos:column="15">0<pos:position pos:line="97" pos:column="16"/></literal></expr>;<pos:position pos:line="97" pos:column="17"/></expr_stmt>
  <expr_stmt><expr><name pos:line="98" pos:column="3">groupConnector<pos:position pos:line="98" pos:column="17"/></name> <operator pos:line="98" pos:column="18">=<pos:position pos:line="98" pos:column="19"/></operator> <literal type="number" pos:line="98" pos:column="20">0<pos:position pos:line="98" pos:column="21"/></literal></expr>;<pos:position pos:line="98" pos:column="22"/></expr_stmt>
  <expr_stmt><expr><name pos:line="99" pos:column="3">hadExternalDoctype<pos:position pos:line="99" pos:column="21"/></name> <operator pos:line="99" pos:column="22">=<pos:position pos:line="99" pos:column="23"/></operator> <literal type="number" pos:line="99" pos:column="24">0<pos:position pos:line="99" pos:column="25"/></literal></expr>;<pos:position pos:line="99" pos:column="26"/></expr_stmt>
  <expr_stmt><expr><name pos:line="100" pos:column="3">unknownEncodingMem<pos:position pos:line="100" pos:column="21"/></name> <operator pos:line="100" pos:column="22">=<pos:position pos:line="100" pos:column="23"/></operator> <literal type="number" pos:line="100" pos:column="24">0<pos:position pos:line="100" pos:column="25"/></literal></expr>;<pos:position pos:line="100" pos:column="26"/></expr_stmt>
  <expr_stmt><expr><name pos:line="101" pos:column="3">unknownEncodingRelease<pos:position pos:line="101" pos:column="25"/></name> <operator pos:line="101" pos:column="26">=<pos:position pos:line="101" pos:column="27"/></operator> <literal type="number" pos:line="101" pos:column="28">0<pos:position pos:line="101" pos:column="29"/></literal></expr>;<pos:position pos:line="101" pos:column="30"/></expr_stmt>
  <expr_stmt><expr><name pos:line="102" pos:column="3">unknownEncodingData<pos:position pos:line="102" pos:column="22"/></name> <operator pos:line="102" pos:column="23">=<pos:position pos:line="102" pos:column="24"/></operator> <literal type="number" pos:line="102" pos:column="25">0<pos:position pos:line="102" pos:column="26"/></literal></expr>;<pos:position pos:line="102" pos:column="27"/></expr_stmt>
  <expr_stmt><expr><name pos:line="103" pos:column="3">unknownEncodingHandlerData<pos:position pos:line="103" pos:column="29"/></name> <operator pos:line="103" pos:column="30">=<pos:position pos:line="103" pos:column="31"/></operator> <literal type="number" pos:line="103" pos:column="32">0<pos:position pos:line="103" pos:column="33"/></literal></expr>;<pos:position pos:line="103" pos:column="34"/></expr_stmt>
  <expr_stmt><expr><name pos:line="104" pos:column="3">namespaceSeparator<pos:position pos:line="104" pos:column="21"/></name> <operator pos:line="104" pos:column="22">=<pos:position pos:line="104" pos:column="23"/></operator> <literal type="char" pos:line="104" pos:column="24">'!'<pos:position pos:line="104" pos:column="27"/></literal></expr>;<pos:position pos:line="104" pos:column="28"/></expr_stmt>
<cpp:ifdef pos:line="105" pos:column="1">#<cpp:directive pos:line="105" pos:column="2">ifdef<pos:position pos:line="105" pos:column="7"/></cpp:directive> <name pos:line="105" pos:column="8">XML_DTD<pos:position pos:line="105" pos:column="15"/></name></cpp:ifdef>
  <expr_stmt><expr><name pos:line="106" pos:column="3">parentParser<pos:position pos:line="106" pos:column="15"/></name> <operator pos:line="106" pos:column="16">=<pos:position pos:line="106" pos:column="17"/></operator> <literal type="number" pos:line="106" pos:column="18">0<pos:position pos:line="106" pos:column="19"/></literal></expr>;<pos:position pos:line="106" pos:column="20"/></expr_stmt>
  <expr_stmt><expr><name pos:line="107" pos:column="3">paramEntityParsing<pos:position pos:line="107" pos:column="21"/></name> <operator pos:line="107" pos:column="22">=<pos:position pos:line="107" pos:column="23"/></operator> <name pos:line="107" pos:column="24">XML_PARAM_ENTITY_PARSING_NEVER<pos:position pos:line="107" pos:column="54"/></name></expr>;<pos:position pos:line="107" pos:column="55"/></expr_stmt>
<cpp:endif pos:line="108" pos:column="1">#<cpp:directive pos:line="108" pos:column="2">endif<pos:position pos:line="108" pos:column="7"/></cpp:directive></cpp:endif>
  <expr_stmt><expr><name pos:line="109" pos:column="3">ns<pos:position pos:line="109" pos:column="5"/></name> <operator pos:line="109" pos:column="6">=<pos:position pos:line="109" pos:column="7"/></operator> <literal type="number" pos:line="109" pos:column="8">0<pos:position pos:line="109" pos:column="9"/></literal></expr>;<pos:position pos:line="109" pos:column="10"/></expr_stmt>
  <expr_stmt><expr><name pos:line="110" pos:column="3">ns_triplets<pos:position pos:line="110" pos:column="14"/></name> <operator pos:line="110" pos:column="15">=<pos:position pos:line="110" pos:column="16"/></operator> <literal type="number" pos:line="110" pos:column="17">0<pos:position pos:line="110" pos:column="18"/></literal></expr>;<pos:position pos:line="110" pos:column="19"/></expr_stmt>
  <expr_stmt><expr><call><name pos:line="111" pos:column="3">poolInit<pos:position pos:line="111" pos:column="11"/></name><argument_list pos:line="111" pos:column="11">(<argument><expr><operator pos:line="111" pos:column="12">&amp;<pos:position pos:line="111" pos:column="17"/></operator><name pos:line="111" pos:column="13">tempPool<pos:position pos:line="111" pos:column="21"/></name></expr></argument>, <argument><expr><operator pos:line="111" pos:column="23">&amp;<pos:position pos:line="111" pos:column="28"/></operator><operator pos:line="111" pos:column="24">(<pos:position pos:line="111" pos:column="25"/></operator><operator pos:line="111" pos:column="25">(<pos:position pos:line="111" pos:column="26"/></operator><operator pos:line="111" pos:column="26">(<pos:position pos:line="111" pos:column="27"/></operator><name pos:line="111" pos:column="27">Parser<pos:position pos:line="111" pos:column="33"/></name> <operator pos:line="111" pos:column="34">*<pos:position pos:line="111" pos:column="35"/></operator><operator pos:line="111" pos:column="35">)<pos:position pos:line="111" pos:column="36"/></operator> <name pos:line="111" pos:column="37">parser<pos:position pos:line="111" pos:column="43"/></name><operator pos:line="111" pos:column="43">)<pos:position pos:line="111" pos:column="44"/></operator><operator pos:line="111" pos:column="44">-&gt;<pos:position pos:line="111" pos:column="49"/></operator><name pos:line="111" pos:column="46">m_mem<pos:position pos:line="111" pos:column="51"/></name><operator pos:line="111" pos:column="51">)<pos:position pos:line="111" pos:column="52"/></operator></expr></argument>)<pos:position pos:line="111" pos:column="53"/></argument_list></call></expr>;<pos:position pos:line="111" pos:column="54"/></expr_stmt>
  <expr_stmt><expr><call><name pos:line="112" pos:column="3">poolInit<pos:position pos:line="112" pos:column="11"/></name><argument_list pos:line="112" pos:column="11">(<argument><expr><operator pos:line="112" pos:column="12">&amp;<pos:position pos:line="112" pos:column="17"/></operator><name pos:line="112" pos:column="13">temp2Pool<pos:position pos:line="112" pos:column="22"/></name></expr></argument>, <argument><expr><operator pos:line="112" pos:column="24">&amp;<pos:position pos:line="112" pos:column="29"/></operator><operator pos:line="112" pos:column="25">(<pos:position pos:line="112" pos:column="26"/></operator><operator pos:line="112" pos:column="26">(<pos:position pos:line="112" pos:column="27"/></operator><operator pos:line="112" pos:column="27">(<pos:position pos:line="112" pos:column="28"/></operator><name pos:line="112" pos:column="28">Parser<pos:position pos:line="112" pos:column="34"/></name> <operator pos:line="112" pos:column="35">*<pos:position pos:line="112" pos:column="36"/></operator><operator pos:line="112" pos:column="36">)<pos:position pos:line="112" pos:column="37"/></operator> <name pos:line="112" pos:column="38">parser<pos:position pos:line="112" pos:column="44"/></name><operator pos:line="112" pos:column="44">)<pos:position pos:line="112" pos:column="45"/></operator><operator pos:line="112" pos:column="45">-&gt;<pos:position pos:line="112" pos:column="50"/></operator><name pos:line="112" pos:column="47">m_mem<pos:position pos:line="112" pos:column="52"/></name><operator pos:line="112" pos:column="52">)<pos:position pos:line="112" pos:column="53"/></operator></expr></argument>)<pos:position pos:line="112" pos:column="54"/></argument_list></call></expr>;<pos:position pos:line="112" pos:column="55"/></expr_stmt>
  <expr_stmt><expr><name pos:line="113" pos:column="3">protocolEncodingName<pos:position pos:line="113" pos:column="23"/></name> <operator pos:line="113" pos:column="24">=<pos:position pos:line="113" pos:column="25"/></operator> <ternary><condition><expr><name pos:line="113" pos:column="26">encodingName<pos:position pos:line="113" pos:column="38"/></name></expr> ?<pos:position pos:line="113" pos:column="40"/></condition><then pos:line="113" pos:column="40"> <expr><call><name pos:line="113" pos:column="41">poolCopyString<pos:position pos:line="113" pos:column="55"/></name><argument_list pos:line="113" pos:column="55">(<argument><expr><operator pos:line="113" pos:column="56">&amp;<pos:position pos:line="113" pos:column="61"/></operator><name pos:line="113" pos:column="57">tempPool<pos:position pos:line="113" pos:column="65"/></name></expr></argument>, <argument><expr><name pos:line="113" pos:column="67">encodingName<pos:position pos:line="113" pos:column="79"/></name></expr></argument>)<pos:position pos:line="113" pos:column="80"/></argument_list></call></expr> <pos:position pos:line="113" pos:column="81"/></then><else pos:line="113" pos:column="81">: <expr><literal type="number" pos:line="113" pos:column="83">0<pos:position pos:line="113" pos:column="84"/></literal></expr></else></ternary></expr>;<pos:position pos:line="113" pos:column="85"/></expr_stmt>
  <expr_stmt><expr><name pos:line="114" pos:column="3">curBase<pos:position pos:line="114" pos:column="10"/></name> <operator pos:line="114" pos:column="11">=<pos:position pos:line="114" pos:column="12"/></operator> <literal type="number" pos:line="114" pos:column="13">0<pos:position pos:line="114" pos:column="14"/></literal></expr>;<pos:position pos:line="114" pos:column="15"/></expr_stmt>
  <if pos:line="115" pos:column="3">if <condition pos:line="115" pos:column="6">(<expr><operator pos:line="115" pos:column="7">!<pos:position pos:line="115" pos:column="8"/></operator><call><name pos:line="115" pos:column="8">dtdInit<pos:position pos:line="115" pos:column="15"/></name><argument_list pos:line="115" pos:column="15">(<argument><expr><operator pos:line="115" pos:column="16">&amp;<pos:position pos:line="115" pos:column="21"/></operator><name pos:line="115" pos:column="17">dtd<pos:position pos:line="115" pos:column="20"/></name></expr></argument>, <argument><expr><name pos:line="115" pos:column="22">parser<pos:position pos:line="115" pos:column="28"/></name></expr></argument>)<pos:position pos:line="115" pos:column="29"/></argument_list></call> <operator pos:line="115" pos:column="30">||<pos:position pos:line="115" pos:column="32"/></operator> <operator pos:line="115" pos:column="33">!<pos:position pos:line="115" pos:column="34"/></operator><name pos:line="115" pos:column="34">atts<pos:position pos:line="115" pos:column="38"/></name> <operator pos:line="115" pos:column="39">||<pos:position pos:line="115" pos:column="41"/></operator> <operator pos:line="115" pos:column="42">!<pos:position pos:line="115" pos:column="43"/></operator><name pos:line="115" pos:column="43">dataBuf<pos:position pos:line="115" pos:column="50"/></name>
      <operator pos:line="116" pos:column="7">||<pos:position pos:line="116" pos:column="9"/></operator> <operator pos:line="116" pos:column="10">(<pos:position pos:line="116" pos:column="11"/></operator><name pos:line="116" pos:column="11">encodingName<pos:position pos:line="116" pos:column="23"/></name> <operator pos:line="116" pos:column="24">&amp;&amp;<pos:position pos:line="116" pos:column="34"/></operator> <operator pos:line="116" pos:column="27">!<pos:position pos:line="116" pos:column="28"/></operator><name pos:line="116" pos:column="28">protocolEncodingName<pos:position pos:line="116" pos:column="48"/></name><operator pos:line="116" pos:column="48">)<pos:position pos:line="116" pos:column="49"/></operator></expr>)<pos:position pos:line="116" pos:column="50"/></condition><then pos:line="116" pos:column="50"> <block pos:line="116" pos:column="51">{
    <expr_stmt><expr><call><name pos:line="117" pos:column="5">XML_ParserFree<pos:position pos:line="117" pos:column="19"/></name><argument_list pos:line="117" pos:column="19">(<argument><expr><name pos:line="117" pos:column="20">parser<pos:position pos:line="117" pos:column="26"/></name></expr></argument>)<pos:position pos:line="117" pos:column="27"/></argument_list></call></expr>;<pos:position pos:line="117" pos:column="28"/></expr_stmt>
    <return pos:line="118" pos:column="5">return <expr><literal type="number" pos:line="118" pos:column="12">0<pos:position pos:line="118" pos:column="13"/></literal></expr>;<pos:position pos:line="118" pos:column="14"/></return>
  }<pos:position pos:line="119" pos:column="4"/></block></then></if>
  <expr_stmt><expr><name pos:line="120" pos:column="3">dataBufEnd<pos:position pos:line="120" pos:column="13"/></name> <operator pos:line="120" pos:column="14">=<pos:position pos:line="120" pos:column="15"/></operator> <name pos:line="120" pos:column="16">dataBuf<pos:position pos:line="120" pos:column="23"/></name> <operator pos:line="120" pos:column="24">+<pos:position pos:line="120" pos:column="25"/></operator> <name pos:line="120" pos:column="26">INIT_DATA_BUF_SIZE<pos:position pos:line="120" pos:column="44"/></name></expr>;<pos:position pos:line="120" pos:column="45"/></expr_stmt>

  <if pos:line="122" pos:column="3">if <condition pos:line="122" pos:column="6">(<expr><name pos:line="122" pos:column="7">nameSep<pos:position pos:line="122" pos:column="14"/></name></expr>)<pos:position pos:line="122" pos:column="15"/></condition><then pos:line="122" pos:column="15"> <block pos:line="122" pos:column="16">{
    <expr_stmt><expr><call><name pos:line="123" pos:column="5">XmlInitEncodingNS<pos:position pos:line="123" pos:column="22"/></name><argument_list pos:line="123" pos:column="22">(<argument><expr><operator pos:line="123" pos:column="23">&amp;<pos:position pos:line="123" pos:column="28"/></operator><name pos:line="123" pos:column="24">initEncoding<pos:position pos:line="123" pos:column="36"/></name></expr></argument>, <argument><expr><operator pos:line="123" pos:column="38">&amp;<pos:position pos:line="123" pos:column="43"/></operator><name pos:line="123" pos:column="39">encoding<pos:position pos:line="123" pos:column="47"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="123" pos:column="49">0<pos:position pos:line="123" pos:column="50"/></literal></expr></argument>)<pos:position pos:line="123" pos:column="51"/></argument_list></call></expr>;<pos:position pos:line="123" pos:column="52"/></expr_stmt>
    <expr_stmt><expr><name pos:line="124" pos:column="5">ns<pos:position pos:line="124" pos:column="7"/></name> <operator pos:line="124" pos:column="8">=<pos:position pos:line="124" pos:column="9"/></operator> <literal type="number" pos:line="124" pos:column="10">1<pos:position pos:line="124" pos:column="11"/></literal></expr>;<pos:position pos:line="124" pos:column="12"/></expr_stmt>
    <expr_stmt><expr><name pos:line="125" pos:column="5">internalEncoding<pos:position pos:line="125" pos:column="21"/></name> <operator pos:line="125" pos:column="22">=<pos:position pos:line="125" pos:column="23"/></operator> <call><name pos:line="125" pos:column="24">XmlGetInternalEncodingNS<pos:position pos:line="125" pos:column="48"/></name><argument_list pos:line="125" pos:column="48">()<pos:position pos:line="125" pos:column="50"/></argument_list></call></expr>;<pos:position pos:line="125" pos:column="51"/></expr_stmt>
    <expr_stmt><expr><name pos:line="126" pos:column="5">namespaceSeparator<pos:position pos:line="126" pos:column="23"/></name> <operator pos:line="126" pos:column="24">=<pos:position pos:line="126" pos:column="25"/></operator> <operator pos:line="126" pos:column="26">*<pos:position pos:line="126" pos:column="27"/></operator><name pos:line="126" pos:column="27">nameSep<pos:position pos:line="126" pos:column="34"/></name></expr>;<pos:position pos:line="126" pos:column="35"/></expr_stmt>

    <if pos:line="128" pos:column="5">if <condition pos:line="128" pos:column="8">(<expr><operator pos:line="128" pos:column="9">!<pos:position pos:line="128" pos:column="10"/></operator> <call><name pos:line="128" pos:column="11">setContext<pos:position pos:line="128" pos:column="21"/></name><argument_list pos:line="128" pos:column="21">(<argument><expr><name pos:line="128" pos:column="22">parser<pos:position pos:line="128" pos:column="28"/></name></expr></argument>, <argument><expr><name pos:line="128" pos:column="30">implicitContext<pos:position pos:line="128" pos:column="45"/></name></expr></argument>)<pos:position pos:line="128" pos:column="46"/></argument_list></call></expr>)<pos:position pos:line="128" pos:column="47"/></condition><then pos:line="128" pos:column="47"> <block pos:line="128" pos:column="48">{
      <expr_stmt><expr><call><name pos:line="129" pos:column="7">XML_ParserFree<pos:position pos:line="129" pos:column="21"/></name><argument_list pos:line="129" pos:column="21">(<argument><expr><name pos:line="129" pos:column="22">parser<pos:position pos:line="129" pos:column="28"/></name></expr></argument>)<pos:position pos:line="129" pos:column="29"/></argument_list></call></expr>;<pos:position pos:line="129" pos:column="30"/></expr_stmt>
      <return pos:line="130" pos:column="7">return <expr><literal type="number" pos:line="130" pos:column="14">0<pos:position pos:line="130" pos:column="15"/></literal></expr>;<pos:position pos:line="130" pos:column="16"/></return>
    }<pos:position pos:line="131" pos:column="6"/></block></then></if>
  }<pos:position pos:line="132" pos:column="4"/></block></then>
  <else pos:line="133" pos:column="3">else <block pos:line="133" pos:column="8">{
    <expr_stmt><expr><call><name pos:line="134" pos:column="5">XmlInitEncoding<pos:position pos:line="134" pos:column="20"/></name><argument_list pos:line="134" pos:column="20">(<argument><expr><operator pos:line="134" pos:column="21">&amp;<pos:position pos:line="134" pos:column="26"/></operator><name pos:line="134" pos:column="22">initEncoding<pos:position pos:line="134" pos:column="34"/></name></expr></argument>, <argument><expr><operator pos:line="134" pos:column="36">&amp;<pos:position pos:line="134" pos:column="41"/></operator><name pos:line="134" pos:column="37">encoding<pos:position pos:line="134" pos:column="45"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="134" pos:column="47">0<pos:position pos:line="134" pos:column="48"/></literal></expr></argument>)<pos:position pos:line="134" pos:column="49"/></argument_list></call></expr>;<pos:position pos:line="134" pos:column="50"/></expr_stmt>
    <expr_stmt><expr><name pos:line="135" pos:column="5">internalEncoding<pos:position pos:line="135" pos:column="21"/></name> <operator pos:line="135" pos:column="22">=<pos:position pos:line="135" pos:column="23"/></operator> <call><name pos:line="135" pos:column="24">XmlGetInternalEncoding<pos:position pos:line="135" pos:column="46"/></name><argument_list pos:line="135" pos:column="46">()<pos:position pos:line="135" pos:column="48"/></argument_list></call></expr>;<pos:position pos:line="135" pos:column="49"/></expr_stmt>
  }<pos:position pos:line="136" pos:column="4"/></block></else></if>

  <return pos:line="138" pos:column="3">return <expr><name pos:line="138" pos:column="10">parser<pos:position pos:line="138" pos:column="16"/></name></expr>;<pos:position pos:line="138" pos:column="17"/></return>
}<pos:position pos:line="139" pos:column="2"/></block></function></unit>

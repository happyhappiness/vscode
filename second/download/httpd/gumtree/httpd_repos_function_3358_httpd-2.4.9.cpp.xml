<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/httpd/gumtree/httpd_repos_function_3358_httpd-2.4.9.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">int<pos:position pos:line="1" pos:column="11"/></name></type> <name pos:line="1" pos:column="12">core_pre_connection<pos:position pos:line="1" pos:column="31"/></name><parameter_list pos:line="1" pos:column="31">(<parameter><decl><type><name pos:line="1" pos:column="32">conn_rec<pos:position pos:line="1" pos:column="40"/></name> <modifier pos:line="1" pos:column="41">*<pos:position pos:line="1" pos:column="42"/></modifier></type><name pos:line="1" pos:column="42">c<pos:position pos:line="1" pos:column="43"/></name></decl></parameter>, <parameter><decl><type><name pos:line="1" pos:column="45">void<pos:position pos:line="1" pos:column="49"/></name> <modifier pos:line="1" pos:column="50">*<pos:position pos:line="1" pos:column="51"/></modifier></type><name pos:line="1" pos:column="51">csd<pos:position pos:line="1" pos:column="54"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="55"/></parameter_list>
<block pos:line="2" pos:column="1">{
    <decl_stmt><decl><type><name pos:line="3" pos:column="5">core_net_rec<pos:position pos:line="3" pos:column="17"/></name> <modifier pos:line="3" pos:column="18">*<pos:position pos:line="3" pos:column="19"/></modifier></type><name pos:line="3" pos:column="19">net<pos:position pos:line="3" pos:column="22"/></name> <init pos:line="3" pos:column="23">= <expr><call><name pos:line="3" pos:column="25">apr_palloc<pos:position pos:line="3" pos:column="35"/></name><argument_list pos:line="3" pos:column="35">(<argument><expr><name><name pos:line="3" pos:column="36">c<pos:position pos:line="3" pos:column="37"/></name><operator pos:line="3" pos:column="37">-&gt;<pos:position pos:line="3" pos:column="42"/></operator><name pos:line="3" pos:column="39">pool<pos:position pos:line="3" pos:column="43"/></name></name></expr></argument>, <argument><expr><sizeof pos:line="3" pos:column="45">sizeof<argument_list pos:line="3" pos:column="51">(<argument><expr><operator pos:line="3" pos:column="52">*<pos:position pos:line="3" pos:column="53"/></operator><name pos:line="3" pos:column="53">net<pos:position pos:line="3" pos:column="56"/></name></expr></argument>)<pos:position pos:line="3" pos:column="57"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="3" pos:column="58"/></argument_list></call></expr></init></decl>;<pos:position pos:line="3" pos:column="59"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="4" pos:column="5">apr_status_t<pos:position pos:line="4" pos:column="17"/></name></type> <name pos:line="4" pos:column="18">rv<pos:position pos:line="4" pos:column="20"/></name></decl>;<pos:position pos:line="4" pos:column="21"/></decl_stmt>

    <comment type="block" pos:line="6" pos:column="5">/* The Nagle algorithm says that we should delay sending partial
     * packets in hopes of getting more data.  We don't want to do
     * this; we are not telnet.  There are bad interactions between
     * persistent connections and Nagle's algorithm that have very severe
     * performance penalties.  (Failing to disable Nagle is not much of a
     * problem with simple HTTP.)
     */</comment>
    <expr_stmt><expr><name pos:line="13" pos:column="5">rv<pos:position pos:line="13" pos:column="7"/></name> <operator pos:line="13" pos:column="8">=<pos:position pos:line="13" pos:column="9"/></operator> <call><name pos:line="13" pos:column="10">apr_socket_opt_set<pos:position pos:line="13" pos:column="28"/></name><argument_list pos:line="13" pos:column="28">(<argument><expr><name pos:line="13" pos:column="29">csd<pos:position pos:line="13" pos:column="32"/></name></expr></argument>, <argument><expr><name pos:line="13" pos:column="34">APR_TCP_NODELAY<pos:position pos:line="13" pos:column="49"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="13" pos:column="51">1<pos:position pos:line="13" pos:column="52"/></literal></expr></argument>)<pos:position pos:line="13" pos:column="53"/></argument_list></call></expr>;<pos:position pos:line="13" pos:column="54"/></expr_stmt>
    <if pos:line="14" pos:column="5">if <condition pos:line="14" pos:column="8">(<expr><name pos:line="14" pos:column="9">rv<pos:position pos:line="14" pos:column="11"/></name> <operator pos:line="14" pos:column="12">!=<pos:position pos:line="14" pos:column="14"/></operator> <name pos:line="14" pos:column="15">APR_SUCCESS<pos:position pos:line="14" pos:column="26"/></name> <operator pos:line="14" pos:column="27">&amp;&amp;<pos:position pos:line="14" pos:column="37"/></operator> <name pos:line="14" pos:column="30">rv<pos:position pos:line="14" pos:column="32"/></name> <operator pos:line="14" pos:column="33">!=<pos:position pos:line="14" pos:column="35"/></operator> <name pos:line="14" pos:column="36">APR_ENOTIMPL<pos:position pos:line="14" pos:column="48"/></name></expr>)<pos:position pos:line="14" pos:column="49"/></condition><then pos:line="14" pos:column="49"> <block pos:line="14" pos:column="50">{
        <comment type="block" pos:line="15" pos:column="9">/* expected cause is that the client disconnected already,
         * hence the debug level
         */</comment>
        <expr_stmt><expr><call><name pos:line="18" pos:column="9">ap_log_cerror<pos:position pos:line="18" pos:column="22"/></name><argument_list pos:line="18" pos:column="22">(<argument><expr><name pos:line="18" pos:column="23">APLOG_MARK<pos:position pos:line="18" pos:column="33"/></name></expr></argument>, <argument><expr><name pos:line="18" pos:column="35">APLOG_DEBUG<pos:position pos:line="18" pos:column="46"/></name></expr></argument>, <argument><expr><name pos:line="18" pos:column="48">rv<pos:position pos:line="18" pos:column="50"/></name></expr></argument>, <argument><expr><name pos:line="18" pos:column="52">c<pos:position pos:line="18" pos:column="53"/></name></expr></argument>, <argument><expr><call><name pos:line="18" pos:column="55">APLOGNO<pos:position pos:line="18" pos:column="62"/></name><argument_list pos:line="18" pos:column="62">(<argument><expr><literal type="number" pos:line="18" pos:column="63">00139<pos:position pos:line="18" pos:column="68"/></literal></expr></argument>)<pos:position pos:line="18" pos:column="69"/></argument_list></call>
                      <literal type="string" pos:line="19" pos:column="23">"apr_socket_opt_set(APR_TCP_NODELAY)"<pos:position pos:line="19" pos:column="60"/></literal></expr></argument>)<pos:position pos:line="19" pos:column="61"/></argument_list></call></expr>;<pos:position pos:line="19" pos:column="62"/></expr_stmt>
    }<pos:position pos:line="20" pos:column="6"/></block></then></if>

    <comment type="block" pos:line="22" pos:column="5">/* The core filter requires the timeout mode to be set, which
     * incidentally sets the socket to be nonblocking.  If this
     * is not initialized correctly, Linux - for example - will
     * be initially blocking, while Solaris will be non blocking
     * and any initial read will fail.
     */</comment>
    <expr_stmt><expr><name pos:line="28" pos:column="5">rv<pos:position pos:line="28" pos:column="7"/></name> <operator pos:line="28" pos:column="8">=<pos:position pos:line="28" pos:column="9"/></operator> <call><name pos:line="28" pos:column="10">apr_socket_timeout_set<pos:position pos:line="28" pos:column="32"/></name><argument_list pos:line="28" pos:column="32">(<argument><expr><name pos:line="28" pos:column="33">csd<pos:position pos:line="28" pos:column="36"/></name></expr></argument>, <argument><expr><name><name pos:line="28" pos:column="38">c<pos:position pos:line="28" pos:column="39"/></name><operator pos:line="28" pos:column="39">-&gt;<pos:position pos:line="28" pos:column="44"/></operator><name pos:line="28" pos:column="41">base_server<pos:position pos:line="28" pos:column="52"/></name><operator pos:line="28" pos:column="52">-&gt;<pos:position pos:line="28" pos:column="57"/></operator><name pos:line="28" pos:column="54">timeout<pos:position pos:line="28" pos:column="61"/></name></name></expr></argument>)<pos:position pos:line="28" pos:column="62"/></argument_list></call></expr>;<pos:position pos:line="28" pos:column="63"/></expr_stmt>
    <if pos:line="29" pos:column="5">if <condition pos:line="29" pos:column="8">(<expr><name pos:line="29" pos:column="9">rv<pos:position pos:line="29" pos:column="11"/></name> <operator pos:line="29" pos:column="12">!=<pos:position pos:line="29" pos:column="14"/></operator> <name pos:line="29" pos:column="15">APR_SUCCESS<pos:position pos:line="29" pos:column="26"/></name></expr>)<pos:position pos:line="29" pos:column="27"/></condition><then pos:line="29" pos:column="27"> <block pos:line="29" pos:column="28">{
        <comment type="block" pos:line="30" pos:column="9">/* expected cause is that the client disconnected already */</comment>
        <expr_stmt><expr><call><name pos:line="31" pos:column="9">ap_log_cerror<pos:position pos:line="31" pos:column="22"/></name><argument_list pos:line="31" pos:column="22">(<argument><expr><name pos:line="31" pos:column="23">APLOG_MARK<pos:position pos:line="31" pos:column="33"/></name></expr></argument>, <argument><expr><name pos:line="31" pos:column="35">APLOG_DEBUG<pos:position pos:line="31" pos:column="46"/></name></expr></argument>, <argument><expr><name pos:line="31" pos:column="48">rv<pos:position pos:line="31" pos:column="50"/></name></expr></argument>, <argument><expr><name pos:line="31" pos:column="52">c<pos:position pos:line="31" pos:column="53"/></name></expr></argument>, <argument><expr><call><name pos:line="31" pos:column="55">APLOGNO<pos:position pos:line="31" pos:column="62"/></name><argument_list pos:line="31" pos:column="62">(<argument><expr><literal type="number" pos:line="31" pos:column="63">00140<pos:position pos:line="31" pos:column="68"/></literal></expr></argument>)<pos:position pos:line="31" pos:column="69"/></argument_list></call>
                      <literal type="string" pos:line="32" pos:column="23">"apr_socket_timeout_set"<pos:position pos:line="32" pos:column="47"/></literal></expr></argument>)<pos:position pos:line="32" pos:column="48"/></argument_list></call></expr>;<pos:position pos:line="32" pos:column="49"/></expr_stmt>
    }<pos:position pos:line="33" pos:column="6"/></block></then></if>

    <expr_stmt><expr><name><name pos:line="35" pos:column="5">net<pos:position pos:line="35" pos:column="8"/></name><operator pos:line="35" pos:column="8">-&gt;<pos:position pos:line="35" pos:column="13"/></operator><name pos:line="35" pos:column="10">c<pos:position pos:line="35" pos:column="11"/></name></name> <operator pos:line="35" pos:column="12">=<pos:position pos:line="35" pos:column="13"/></operator> <name pos:line="35" pos:column="14">c<pos:position pos:line="35" pos:column="15"/></name></expr>;<pos:position pos:line="35" pos:column="16"/></expr_stmt>
    <expr_stmt><expr><name><name pos:line="36" pos:column="5">net<pos:position pos:line="36" pos:column="8"/></name><operator pos:line="36" pos:column="8">-&gt;<pos:position pos:line="36" pos:column="13"/></operator><name pos:line="36" pos:column="10">in_ctx<pos:position pos:line="36" pos:column="16"/></name></name> <operator pos:line="36" pos:column="17">=<pos:position pos:line="36" pos:column="18"/></operator> <name pos:line="36" pos:column="19">NULL<pos:position pos:line="36" pos:column="23"/></name></expr>;<pos:position pos:line="36" pos:column="24"/></expr_stmt>
    <expr_stmt><expr><name><name pos:line="37" pos:column="5">net<pos:position pos:line="37" pos:column="8"/></name><operator pos:line="37" pos:column="8">-&gt;<pos:position pos:line="37" pos:column="13"/></operator><name pos:line="37" pos:column="10">out_ctx<pos:position pos:line="37" pos:column="17"/></name></name> <operator pos:line="37" pos:column="18">=<pos:position pos:line="37" pos:column="19"/></operator> <name pos:line="37" pos:column="20">NULL<pos:position pos:line="37" pos:column="24"/></name></expr>;<pos:position pos:line="37" pos:column="25"/></expr_stmt>
    <expr_stmt><expr><name><name pos:line="38" pos:column="5">net<pos:position pos:line="38" pos:column="8"/></name><operator pos:line="38" pos:column="8">-&gt;<pos:position pos:line="38" pos:column="13"/></operator><name pos:line="38" pos:column="10">client_socket<pos:position pos:line="38" pos:column="23"/></name></name> <operator pos:line="38" pos:column="24">=<pos:position pos:line="38" pos:column="25"/></operator> <name pos:line="38" pos:column="26">csd<pos:position pos:line="38" pos:column="29"/></name></expr>;<pos:position pos:line="38" pos:column="30"/></expr_stmt>

    <expr_stmt><expr><call><name pos:line="40" pos:column="5">ap_set_core_module_config<pos:position pos:line="40" pos:column="30"/></name><argument_list pos:line="40" pos:column="30">(<argument><expr><name><name pos:line="40" pos:column="31">net<pos:position pos:line="40" pos:column="34"/></name><operator pos:line="40" pos:column="34">-&gt;<pos:position pos:line="40" pos:column="39"/></operator><name pos:line="40" pos:column="36">c<pos:position pos:line="40" pos:column="37"/></name><operator pos:line="40" pos:column="37">-&gt;<pos:position pos:line="40" pos:column="42"/></operator><name pos:line="40" pos:column="39">conn_config<pos:position pos:line="40" pos:column="50"/></name></name></expr></argument>, <argument><expr><name pos:line="40" pos:column="52">csd<pos:position pos:line="40" pos:column="55"/></name></expr></argument>)<pos:position pos:line="40" pos:column="56"/></argument_list></call></expr>;<pos:position pos:line="40" pos:column="57"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="41" pos:column="5">ap_add_input_filter_handle<pos:position pos:line="41" pos:column="31"/></name><argument_list pos:line="41" pos:column="31">(<argument><expr><name pos:line="41" pos:column="32">ap_core_input_filter_handle<pos:position pos:line="41" pos:column="59"/></name></expr></argument>, <argument><expr><name pos:line="41" pos:column="61">net<pos:position pos:line="41" pos:column="64"/></name></expr></argument>, <argument><expr><name pos:line="41" pos:column="66">NULL<pos:position pos:line="41" pos:column="70"/></name></expr></argument>, <argument><expr><name><name pos:line="41" pos:column="72">net<pos:position pos:line="41" pos:column="75"/></name><operator pos:line="41" pos:column="75">-&gt;<pos:position pos:line="41" pos:column="80"/></operator><name pos:line="41" pos:column="77">c<pos:position pos:line="41" pos:column="78"/></name></name></expr></argument>)<pos:position pos:line="41" pos:column="79"/></argument_list></call></expr>;<pos:position pos:line="41" pos:column="80"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="42" pos:column="5">ap_add_output_filter_handle<pos:position pos:line="42" pos:column="32"/></name><argument_list pos:line="42" pos:column="32">(<argument><expr><name pos:line="42" pos:column="33">ap_core_output_filter_handle<pos:position pos:line="42" pos:column="61"/></name></expr></argument>, <argument><expr><name pos:line="42" pos:column="63">net<pos:position pos:line="42" pos:column="66"/></name></expr></argument>, <argument><expr><name pos:line="42" pos:column="68">NULL<pos:position pos:line="42" pos:column="72"/></name></expr></argument>, <argument><expr><name><name pos:line="42" pos:column="74">net<pos:position pos:line="42" pos:column="77"/></name><operator pos:line="42" pos:column="77">-&gt;<pos:position pos:line="42" pos:column="82"/></operator><name pos:line="42" pos:column="79">c<pos:position pos:line="42" pos:column="80"/></name></name></expr></argument>)<pos:position pos:line="42" pos:column="81"/></argument_list></call></expr>;<pos:position pos:line="42" pos:column="82"/></expr_stmt>
    <return pos:line="43" pos:column="5">return <expr><name pos:line="43" pos:column="12">DONE<pos:position pos:line="43" pos:column="16"/></name></expr>;<pos:position pos:line="43" pos:column="17"/></return>
}<pos:position pos:line="44" pos:column="2"/></block></function></unit>

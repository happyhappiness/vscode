<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/httpd/gumtree/httpd_repos_function_1262_httpd-2.0.44.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">int<pos:position pos:line="1" pos:column="4"/></name></type> <name pos:line="1" pos:column="5">ap_proxy_http_handler<pos:position pos:line="1" pos:column="26"/></name><parameter_list pos:line="1" pos:column="26">(<parameter><decl><type><name pos:line="1" pos:column="27">request_rec<pos:position pos:line="1" pos:column="38"/></name> <modifier pos:line="1" pos:column="39">*<pos:position pos:line="1" pos:column="40"/></modifier></type><name pos:line="1" pos:column="40">r<pos:position pos:line="1" pos:column="41"/></name></decl></parameter>, <parameter><decl><type><name pos:line="1" pos:column="43">proxy_server_conf<pos:position pos:line="1" pos:column="60"/></name> <modifier pos:line="1" pos:column="61">*<pos:position pos:line="1" pos:column="62"/></modifier></type><name pos:line="1" pos:column="62">conf<pos:position pos:line="1" pos:column="66"/></name></decl></parameter>,
                          <parameter><decl><type><name pos:line="2" pos:column="27">char<pos:position pos:line="2" pos:column="31"/></name> <modifier pos:line="2" pos:column="32">*<pos:position pos:line="2" pos:column="33"/></modifier></type><name pos:line="2" pos:column="33">url<pos:position pos:line="2" pos:column="36"/></name></decl></parameter>, <parameter><decl><type><specifier pos:line="2" pos:column="38">const<pos:position pos:line="2" pos:column="43"/></specifier> <name pos:line="2" pos:column="44">char<pos:position pos:line="2" pos:column="48"/></name> <modifier pos:line="2" pos:column="49">*<pos:position pos:line="2" pos:column="50"/></modifier></type><name pos:line="2" pos:column="50">proxyname<pos:position pos:line="2" pos:column="59"/></name></decl></parameter>, 
                          <parameter><decl><type><name pos:line="3" pos:column="27">apr_port_t<pos:position pos:line="3" pos:column="37"/></name></type> <name pos:line="3" pos:column="38">proxyport<pos:position pos:line="3" pos:column="47"/></name></decl></parameter>)<pos:position pos:line="3" pos:column="48"/></parameter_list>
<block pos:line="4" pos:column="1">{
    <decl_stmt><decl><type><name pos:line="5" pos:column="5">int<pos:position pos:line="5" pos:column="8"/></name></type> <name pos:line="5" pos:column="9">status<pos:position pos:line="5" pos:column="15"/></name></decl>;<pos:position pos:line="5" pos:column="16"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="6" pos:column="5">char<pos:position pos:line="6" pos:column="9"/></name></type> <name><name pos:line="6" pos:column="10">server_portstr<pos:position pos:line="6" pos:column="24"/></name><index pos:line="6" pos:column="24">[<expr><literal type="number" pos:line="6" pos:column="25">32<pos:position pos:line="6" pos:column="27"/></literal></expr>]<pos:position pos:line="6" pos:column="28"/></index></name></decl>;<pos:position pos:line="6" pos:column="29"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="7" pos:column="5">conn_rec<pos:position pos:line="7" pos:column="13"/></name> <modifier pos:line="7" pos:column="14">*<pos:position pos:line="7" pos:column="15"/></modifier></type><name pos:line="7" pos:column="15">origin<pos:position pos:line="7" pos:column="21"/></name> <init pos:line="7" pos:column="22">= <expr><name pos:line="7" pos:column="24">NULL<pos:position pos:line="7" pos:column="28"/></name></expr></init></decl>;<pos:position pos:line="7" pos:column="29"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="8" pos:column="5">proxy_conn_rec<pos:position pos:line="8" pos:column="19"/></name> <modifier pos:line="8" pos:column="20">*<pos:position pos:line="8" pos:column="21"/></modifier></type><name pos:line="8" pos:column="21">backend<pos:position pos:line="8" pos:column="28"/></name> <init pos:line="8" pos:column="29">= <expr><name pos:line="8" pos:column="31">NULL<pos:position pos:line="8" pos:column="35"/></name></expr></init></decl>;<pos:position pos:line="8" pos:column="36"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="9" pos:column="5">int<pos:position pos:line="9" pos:column="8"/></name></type> <name pos:line="9" pos:column="9">is_ssl<pos:position pos:line="9" pos:column="15"/></name> <init pos:line="9" pos:column="16">= <expr><literal type="number" pos:line="9" pos:column="18">0<pos:position pos:line="9" pos:column="19"/></literal></expr></init></decl>;<pos:position pos:line="9" pos:column="20"/></decl_stmt>

    <comment type="block" pos:line="11" pos:column="5">/* Note: Memory pool allocation.
     * A downstream keepalive connection is always connected to the existence
     * (or not) of an upstream keepalive connection. If this is not done then
     * load balancing against multiple backend servers breaks (one backend
     * server ends up taking 100% of the load), and the risk is run of
     * downstream keepalive connections being kept open unnecessarily. This
     * keeps webservers busy and ties up resources.
     *
     * As a result, we allocate all sockets out of the upstream connection
     * pool, and when we want to reuse a socket, we check first whether the
     * connection ID of the current upstream connection is the same as that
     * of the connection when the socket was opened.
     */</comment>
    <decl_stmt><decl><type><name pos:line="24" pos:column="5">apr_pool_t<pos:position pos:line="24" pos:column="15"/></name> <modifier pos:line="24" pos:column="16">*<pos:position pos:line="24" pos:column="17"/></modifier></type><name pos:line="24" pos:column="17">p<pos:position pos:line="24" pos:column="18"/></name> <init pos:line="24" pos:column="19">= <expr><name><name pos:line="24" pos:column="21">r<pos:position pos:line="24" pos:column="22"/></name><operator pos:line="24" pos:column="22">-&gt;<pos:position pos:line="24" pos:column="27"/></operator><name pos:line="24" pos:column="24">connection<pos:position pos:line="24" pos:column="34"/></name><operator pos:line="24" pos:column="34">-&gt;<pos:position pos:line="24" pos:column="39"/></operator><name pos:line="24" pos:column="36">pool<pos:position pos:line="24" pos:column="40"/></name></name></expr></init></decl>;<pos:position pos:line="24" pos:column="41"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="25" pos:column="5">conn_rec<pos:position pos:line="25" pos:column="13"/></name> <modifier pos:line="25" pos:column="14">*<pos:position pos:line="25" pos:column="15"/></modifier></type><name pos:line="25" pos:column="15">c<pos:position pos:line="25" pos:column="16"/></name> <init pos:line="25" pos:column="17">= <expr><name><name pos:line="25" pos:column="19">r<pos:position pos:line="25" pos:column="20"/></name><operator pos:line="25" pos:column="20">-&gt;<pos:position pos:line="25" pos:column="25"/></operator><name pos:line="25" pos:column="22">connection<pos:position pos:line="25" pos:column="32"/></name></name></expr></init></decl>;<pos:position pos:line="25" pos:column="33"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="26" pos:column="5">apr_bucket_brigade<pos:position pos:line="26" pos:column="23"/></name> <modifier pos:line="26" pos:column="24">*<pos:position pos:line="26" pos:column="25"/></modifier></type><name pos:line="26" pos:column="25">bb<pos:position pos:line="26" pos:column="27"/></name> <init pos:line="26" pos:column="28">= <expr><call><name pos:line="26" pos:column="30">apr_brigade_create<pos:position pos:line="26" pos:column="48"/></name><argument_list pos:line="26" pos:column="48">(<argument><expr><name pos:line="26" pos:column="49">p<pos:position pos:line="26" pos:column="50"/></name></expr></argument>, <argument><expr><name><name pos:line="26" pos:column="52">c<pos:position pos:line="26" pos:column="53"/></name><operator pos:line="26" pos:column="53">-&gt;<pos:position pos:line="26" pos:column="58"/></operator><name pos:line="26" pos:column="55">bucket_alloc<pos:position pos:line="26" pos:column="67"/></name></name></expr></argument>)<pos:position pos:line="26" pos:column="68"/></argument_list></call></expr></init></decl>;<pos:position pos:line="26" pos:column="69"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="27" pos:column="5">apr_uri_t<pos:position pos:line="27" pos:column="14"/></name> <modifier pos:line="27" pos:column="15">*<pos:position pos:line="27" pos:column="16"/></modifier></type><name pos:line="27" pos:column="16">uri<pos:position pos:line="27" pos:column="19"/></name> <init pos:line="27" pos:column="20">= <expr><call><name pos:line="27" pos:column="22">apr_palloc<pos:position pos:line="27" pos:column="32"/></name><argument_list pos:line="27" pos:column="32">(<argument><expr><name><name pos:line="27" pos:column="33">r<pos:position pos:line="27" pos:column="34"/></name><operator pos:line="27" pos:column="34">-&gt;<pos:position pos:line="27" pos:column="39"/></operator><name pos:line="27" pos:column="36">connection<pos:position pos:line="27" pos:column="46"/></name><operator pos:line="27" pos:column="46">-&gt;<pos:position pos:line="27" pos:column="51"/></operator><name pos:line="27" pos:column="48">pool<pos:position pos:line="27" pos:column="52"/></name></name></expr></argument>, <argument><expr><sizeof pos:line="27" pos:column="54">sizeof<argument_list pos:line="27" pos:column="60">(<argument><expr><operator pos:line="27" pos:column="61">*<pos:position pos:line="27" pos:column="62"/></operator><name pos:line="27" pos:column="62">uri<pos:position pos:line="27" pos:column="65"/></name></expr></argument>)<pos:position pos:line="27" pos:column="66"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="27" pos:column="67"/></argument_list></call></expr></init></decl>;<pos:position pos:line="27" pos:column="68"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="28" pos:column="5">proxy_http_conn_t<pos:position pos:line="28" pos:column="22"/></name> <modifier pos:line="28" pos:column="23">*<pos:position pos:line="28" pos:column="24"/></modifier></type><name pos:line="28" pos:column="24">p_conn<pos:position pos:line="28" pos:column="30"/></name> <init pos:line="28" pos:column="31">= <expr><call><name pos:line="28" pos:column="33">apr_pcalloc<pos:position pos:line="28" pos:column="44"/></name><argument_list pos:line="28" pos:column="44">(<argument><expr><name><name pos:line="28" pos:column="45">r<pos:position pos:line="28" pos:column="46"/></name><operator pos:line="28" pos:column="46">-&gt;<pos:position pos:line="28" pos:column="51"/></operator><name pos:line="28" pos:column="48">connection<pos:position pos:line="28" pos:column="58"/></name><operator pos:line="28" pos:column="58">-&gt;<pos:position pos:line="28" pos:column="63"/></operator><name pos:line="28" pos:column="60">pool<pos:position pos:line="28" pos:column="64"/></name></name></expr></argument>,
                                           <argument><expr><sizeof pos:line="29" pos:column="44">sizeof<argument_list pos:line="29" pos:column="50">(<argument><expr><operator pos:line="29" pos:column="51">*<pos:position pos:line="29" pos:column="52"/></operator><name pos:line="29" pos:column="52">p_conn<pos:position pos:line="29" pos:column="58"/></name></expr></argument>)<pos:position pos:line="29" pos:column="59"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="29" pos:column="60"/></argument_list></call></expr></init></decl>;<pos:position pos:line="29" pos:column="61"/></decl_stmt>

    <comment type="block" pos:line="31" pos:column="5">/* is it for us? */</comment>
    <if pos:line="32" pos:column="5">if <condition pos:line="32" pos:column="8">(<expr><call><name pos:line="32" pos:column="9">strncasecmp<pos:position pos:line="32" pos:column="20"/></name><argument_list pos:line="32" pos:column="20">(<argument><expr><name pos:line="32" pos:column="21">url<pos:position pos:line="32" pos:column="24"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="32" pos:column="26">"https:"<pos:position pos:line="32" pos:column="34"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="32" pos:column="36">6<pos:position pos:line="32" pos:column="37"/></literal></expr></argument>)<pos:position pos:line="32" pos:column="38"/></argument_list></call> <operator pos:line="32" pos:column="39">==<pos:position pos:line="32" pos:column="41"/></operator> <literal type="number" pos:line="32" pos:column="42">0<pos:position pos:line="32" pos:column="43"/></literal></expr>)<pos:position pos:line="32" pos:column="44"/></condition><then pos:line="32" pos:column="44"> <block pos:line="32" pos:column="45">{
        <if pos:line="33" pos:column="9">if <condition pos:line="33" pos:column="12">(<expr><operator pos:line="33" pos:column="13">!<pos:position pos:line="33" pos:column="14"/></operator><call><name pos:line="33" pos:column="14">ap_proxy_ssl_enable<pos:position pos:line="33" pos:column="33"/></name><argument_list pos:line="33" pos:column="33">(<argument><expr><name pos:line="33" pos:column="34">NULL<pos:position pos:line="33" pos:column="38"/></name></expr></argument>)<pos:position pos:line="33" pos:column="39"/></argument_list></call></expr>)<pos:position pos:line="33" pos:column="40"/></condition><then pos:line="33" pos:column="40"> <block pos:line="33" pos:column="41">{
            <expr_stmt><expr><call><name pos:line="34" pos:column="13">ap_log_error<pos:position pos:line="34" pos:column="25"/></name><argument_list pos:line="34" pos:column="25">(<argument><expr><name pos:line="34" pos:column="26">APLOG_MARK<pos:position pos:line="34" pos:column="36"/></name></expr></argument>, <argument><expr><name pos:line="34" pos:column="38">APLOG_DEBUG<pos:position pos:line="34" pos:column="49"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="34" pos:column="51">0<pos:position pos:line="34" pos:column="52"/></literal></expr></argument>, <argument><expr><name><name pos:line="34" pos:column="54">r<pos:position pos:line="34" pos:column="55"/></name><operator pos:line="34" pos:column="55">-&gt;<pos:position pos:line="34" pos:column="60"/></operator><name pos:line="34" pos:column="57">server<pos:position pos:line="34" pos:column="63"/></name></name></expr></argument>,
                         <argument><expr><literal type="string" pos:line="35" pos:column="26">"proxy: HTTPS: declining URL %s"<pos:position pos:line="35" pos:column="58"/></literal>
                         <literal type="string" pos:line="36" pos:column="26">" (mod_ssl not configured?)"<pos:position pos:line="36" pos:column="54"/></literal></expr></argument>, <argument><expr><name pos:line="36" pos:column="56">url<pos:position pos:line="36" pos:column="59"/></name></expr></argument>)<pos:position pos:line="36" pos:column="60"/></argument_list></call></expr>;<pos:position pos:line="36" pos:column="61"/></expr_stmt>
            <return pos:line="37" pos:column="13">return <expr><name pos:line="37" pos:column="20">DECLINED<pos:position pos:line="37" pos:column="28"/></name></expr>;<pos:position pos:line="37" pos:column="29"/></return>
        }<pos:position pos:line="38" pos:column="10"/></block></then></if>
        <expr_stmt><expr><name pos:line="39" pos:column="9">is_ssl<pos:position pos:line="39" pos:column="15"/></name> <operator pos:line="39" pos:column="16">=<pos:position pos:line="39" pos:column="17"/></operator> <literal type="number" pos:line="39" pos:column="18">1<pos:position pos:line="39" pos:column="19"/></literal></expr>;<pos:position pos:line="39" pos:column="20"/></expr_stmt>
    }<pos:position pos:line="40" pos:column="6"/></block></then>
    <elseif pos:line="41" pos:column="5">else <if pos:line="41" pos:column="10">if <condition pos:line="41" pos:column="13">(<expr><operator pos:line="41" pos:column="14">!<pos:position pos:line="41" pos:column="15"/></operator><operator pos:line="41" pos:column="15">(<pos:position pos:line="41" pos:column="16"/></operator><call><name pos:line="41" pos:column="16">strncasecmp<pos:position pos:line="41" pos:column="27"/></name><argument_list pos:line="41" pos:column="27">(<argument><expr><name pos:line="41" pos:column="28">url<pos:position pos:line="41" pos:column="31"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="41" pos:column="33">"http:"<pos:position pos:line="41" pos:column="40"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="41" pos:column="42">5<pos:position pos:line="41" pos:column="43"/></literal></expr></argument>)<pos:position pos:line="41" pos:column="44"/></argument_list></call><operator pos:line="41" pos:column="44">==<pos:position pos:line="41" pos:column="46"/></operator><literal type="number" pos:line="41" pos:column="46">0<pos:position pos:line="41" pos:column="47"/></literal> <operator pos:line="41" pos:column="48">||<pos:position pos:line="41" pos:column="50"/></operator> <operator pos:line="41" pos:column="51">(<pos:position pos:line="41" pos:column="52"/></operator><call><name pos:line="41" pos:column="52">strncasecmp<pos:position pos:line="41" pos:column="63"/></name><argument_list pos:line="41" pos:column="63">(<argument><expr><name pos:line="41" pos:column="64">url<pos:position pos:line="41" pos:column="67"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="41" pos:column="69">"ftp:"<pos:position pos:line="41" pos:column="75"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="41" pos:column="77">4<pos:position pos:line="41" pos:column="78"/></literal></expr></argument>)<pos:position pos:line="41" pos:column="79"/></argument_list></call><operator pos:line="41" pos:column="79">==<pos:position pos:line="41" pos:column="81"/></operator><literal type="number" pos:line="41" pos:column="81">0<pos:position pos:line="41" pos:column="82"/></literal> <operator pos:line="41" pos:column="83">&amp;&amp;<pos:position pos:line="41" pos:column="93"/></operator> <name pos:line="41" pos:column="86">proxyname<pos:position pos:line="41" pos:column="95"/></name><operator pos:line="41" pos:column="95">)<pos:position pos:line="41" pos:column="96"/></operator><operator pos:line="41" pos:column="96">)<pos:position pos:line="41" pos:column="97"/></operator></expr>)<pos:position pos:line="41" pos:column="98"/></condition><then pos:line="41" pos:column="98"> <block pos:line="41" pos:column="99">{
        <expr_stmt><expr><call><name pos:line="42" pos:column="9">ap_log_error<pos:position pos:line="42" pos:column="21"/></name><argument_list pos:line="42" pos:column="21">(<argument><expr><name pos:line="42" pos:column="22">APLOG_MARK<pos:position pos:line="42" pos:column="32"/></name></expr></argument>, <argument><expr><name pos:line="42" pos:column="34">APLOG_DEBUG<pos:position pos:line="42" pos:column="45"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="42" pos:column="47">0<pos:position pos:line="42" pos:column="48"/></literal></expr></argument>, <argument><expr><name><name pos:line="42" pos:column="50">r<pos:position pos:line="42" pos:column="51"/></name><operator pos:line="42" pos:column="51">-&gt;<pos:position pos:line="42" pos:column="56"/></operator><name pos:line="42" pos:column="53">server<pos:position pos:line="42" pos:column="59"/></name></name></expr></argument>,
                     <argument><expr><literal type="string" pos:line="43" pos:column="22">"proxy: HTTP: declining URL %s"<pos:position pos:line="43" pos:column="53"/></literal></expr></argument>, <argument><expr><name pos:line="43" pos:column="55">url<pos:position pos:line="43" pos:column="58"/></name></expr></argument>)<pos:position pos:line="43" pos:column="59"/></argument_list></call></expr>;<pos:position pos:line="43" pos:column="60"/></expr_stmt>
        <return pos:line="44" pos:column="9">return <expr><name pos:line="44" pos:column="16">DECLINED<pos:position pos:line="44" pos:column="24"/></name></expr>;<pos:position pos:line="44" pos:column="25"/></return> <comment type="block" pos:line="44" pos:column="26">/* only interested in HTTP, or FTP via proxy */</comment>
    }<pos:position pos:line="45" pos:column="6"/></block></then></if></elseif></if>
    <expr_stmt><expr><call><name pos:line="46" pos:column="5">ap_log_error<pos:position pos:line="46" pos:column="17"/></name><argument_list pos:line="46" pos:column="17">(<argument><expr><name pos:line="46" pos:column="18">APLOG_MARK<pos:position pos:line="46" pos:column="28"/></name></expr></argument>, <argument><expr><name pos:line="46" pos:column="30">APLOG_DEBUG<pos:position pos:line="46" pos:column="41"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="46" pos:column="43">0<pos:position pos:line="46" pos:column="44"/></literal></expr></argument>, <argument><expr><name><name pos:line="46" pos:column="46">r<pos:position pos:line="46" pos:column="47"/></name><operator pos:line="46" pos:column="47">-&gt;<pos:position pos:line="46" pos:column="52"/></operator><name pos:line="46" pos:column="49">server<pos:position pos:line="46" pos:column="55"/></name></name></expr></argument>,
             <argument><expr><literal type="string" pos:line="47" pos:column="14">"proxy: HTTP: serving URL %s"<pos:position pos:line="47" pos:column="43"/></literal></expr></argument>, <argument><expr><name pos:line="47" pos:column="45">url<pos:position pos:line="47" pos:column="48"/></name></expr></argument>)<pos:position pos:line="47" pos:column="49"/></argument_list></call></expr>;<pos:position pos:line="47" pos:column="50"/></expr_stmt>
    
    
    <comment type="block" pos:line="50" pos:column="5">/* only use stored info for top-level pages. Sub requests don't share 
     * in keepalives
     */</comment>
    <if pos:line="53" pos:column="5">if <condition pos:line="53" pos:column="8">(<expr><operator pos:line="53" pos:column="9">!<pos:position pos:line="53" pos:column="10"/></operator><name><name pos:line="53" pos:column="10">r<pos:position pos:line="53" pos:column="11"/></name><operator pos:line="53" pos:column="11">-&gt;<pos:position pos:line="53" pos:column="16"/></operator><name pos:line="53" pos:column="13">main<pos:position pos:line="53" pos:column="17"/></name></name></expr>)<pos:position pos:line="53" pos:column="18"/></condition><then pos:line="53" pos:column="18"> <block pos:line="53" pos:column="19">{
        <expr_stmt><expr><name pos:line="54" pos:column="9">backend<pos:position pos:line="54" pos:column="16"/></name> <operator pos:line="54" pos:column="17">=<pos:position pos:line="54" pos:column="18"/></operator> <operator pos:line="54" pos:column="19">(<pos:position pos:line="54" pos:column="20"/></operator><name pos:line="54" pos:column="20">proxy_conn_rec<pos:position pos:line="54" pos:column="34"/></name> <operator pos:line="54" pos:column="35">*<pos:position pos:line="54" pos:column="36"/></operator><operator pos:line="54" pos:column="36">)<pos:position pos:line="54" pos:column="37"/></operator> <call><name pos:line="54" pos:column="38">ap_get_module_config<pos:position pos:line="54" pos:column="58"/></name><argument_list pos:line="54" pos:column="58">(<argument><expr><name><name pos:line="54" pos:column="59">c<pos:position pos:line="54" pos:column="60"/></name><operator pos:line="54" pos:column="60">-&gt;<pos:position pos:line="54" pos:column="65"/></operator><name pos:line="54" pos:column="62">conn_config<pos:position pos:line="54" pos:column="73"/></name></name></expr></argument>,
                                                      <argument><expr><operator pos:line="55" pos:column="55">&amp;<pos:position pos:line="55" pos:column="60"/></operator><name pos:line="55" pos:column="56">proxy_http_module<pos:position pos:line="55" pos:column="73"/></name></expr></argument>)<pos:position pos:line="55" pos:column="74"/></argument_list></call></expr>;<pos:position pos:line="55" pos:column="75"/></expr_stmt>
    }<pos:position pos:line="56" pos:column="6"/></block></then></if>
    <comment type="block" pos:line="57" pos:column="5">/* create space for state information */</comment>
    <if pos:line="58" pos:column="5">if <condition pos:line="58" pos:column="8">(<expr><operator pos:line="58" pos:column="9">!<pos:position pos:line="58" pos:column="10"/></operator><name pos:line="58" pos:column="10">backend<pos:position pos:line="58" pos:column="17"/></name></expr>)<pos:position pos:line="58" pos:column="18"/></condition><then pos:line="58" pos:column="18"> <block pos:line="58" pos:column="19">{
        <expr_stmt><expr><name pos:line="59" pos:column="9">backend<pos:position pos:line="59" pos:column="16"/></name> <operator pos:line="59" pos:column="17">=<pos:position pos:line="59" pos:column="18"/></operator> <call><name pos:line="59" pos:column="19">apr_pcalloc<pos:position pos:line="59" pos:column="30"/></name><argument_list pos:line="59" pos:column="30">(<argument><expr><name><name pos:line="59" pos:column="31">c<pos:position pos:line="59" pos:column="32"/></name><operator pos:line="59" pos:column="32">-&gt;<pos:position pos:line="59" pos:column="37"/></operator><name pos:line="59" pos:column="34">pool<pos:position pos:line="59" pos:column="38"/></name></name></expr></argument>, <argument><expr><sizeof pos:line="59" pos:column="40">sizeof<argument_list pos:line="59" pos:column="46">(<argument><expr><name pos:line="59" pos:column="47">proxy_conn_rec<pos:position pos:line="59" pos:column="61"/></name></expr></argument>)<pos:position pos:line="59" pos:column="62"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="59" pos:column="63"/></argument_list></call></expr>;<pos:position pos:line="59" pos:column="64"/></expr_stmt>
        <expr_stmt><expr><name><name pos:line="60" pos:column="9">backend<pos:position pos:line="60" pos:column="16"/></name><operator pos:line="60" pos:column="16">-&gt;<pos:position pos:line="60" pos:column="21"/></operator><name pos:line="60" pos:column="18">connection<pos:position pos:line="60" pos:column="28"/></name></name> <operator pos:line="60" pos:column="29">=<pos:position pos:line="60" pos:column="30"/></operator> <name pos:line="60" pos:column="31">NULL<pos:position pos:line="60" pos:column="35"/></name></expr>;<pos:position pos:line="60" pos:column="36"/></expr_stmt>
        <expr_stmt><expr><name><name pos:line="61" pos:column="9">backend<pos:position pos:line="61" pos:column="16"/></name><operator pos:line="61" pos:column="16">-&gt;<pos:position pos:line="61" pos:column="21"/></operator><name pos:line="61" pos:column="18">hostname<pos:position pos:line="61" pos:column="26"/></name></name> <operator pos:line="61" pos:column="27">=<pos:position pos:line="61" pos:column="28"/></operator> <name pos:line="61" pos:column="29">NULL<pos:position pos:line="61" pos:column="33"/></name></expr>;<pos:position pos:line="61" pos:column="34"/></expr_stmt>
        <expr_stmt><expr><name><name pos:line="62" pos:column="9">backend<pos:position pos:line="62" pos:column="16"/></name><operator pos:line="62" pos:column="16">-&gt;<pos:position pos:line="62" pos:column="21"/></operator><name pos:line="62" pos:column="18">port<pos:position pos:line="62" pos:column="22"/></name></name> <operator pos:line="62" pos:column="23">=<pos:position pos:line="62" pos:column="24"/></operator> <literal type="number" pos:line="62" pos:column="25">0<pos:position pos:line="62" pos:column="26"/></literal></expr>;<pos:position pos:line="62" pos:column="27"/></expr_stmt>
        <if pos:line="63" pos:column="9">if <condition pos:line="63" pos:column="12">(<expr><operator pos:line="63" pos:column="13">!<pos:position pos:line="63" pos:column="14"/></operator><name><name pos:line="63" pos:column="14">r<pos:position pos:line="63" pos:column="15"/></name><operator pos:line="63" pos:column="15">-&gt;<pos:position pos:line="63" pos:column="20"/></operator><name pos:line="63" pos:column="17">main<pos:position pos:line="63" pos:column="21"/></name></name></expr>)<pos:position pos:line="63" pos:column="22"/></condition><then pos:line="63" pos:column="22"> <block pos:line="63" pos:column="23">{
            <expr_stmt><expr><call><name pos:line="64" pos:column="13">ap_set_module_config<pos:position pos:line="64" pos:column="33"/></name><argument_list pos:line="64" pos:column="33">(<argument><expr><name><name pos:line="64" pos:column="34">c<pos:position pos:line="64" pos:column="35"/></name><operator pos:line="64" pos:column="35">-&gt;<pos:position pos:line="64" pos:column="40"/></operator><name pos:line="64" pos:column="37">conn_config<pos:position pos:line="64" pos:column="48"/></name></name></expr></argument>, <argument><expr><operator pos:line="64" pos:column="50">&amp;<pos:position pos:line="64" pos:column="55"/></operator><name pos:line="64" pos:column="51">proxy_http_module<pos:position pos:line="64" pos:column="68"/></name></expr></argument>, <argument><expr><name pos:line="64" pos:column="70">backend<pos:position pos:line="64" pos:column="77"/></name></expr></argument>)<pos:position pos:line="64" pos:column="78"/></argument_list></call></expr>;<pos:position pos:line="64" pos:column="79"/></expr_stmt>
        }<pos:position pos:line="65" pos:column="10"/></block></then></if>
    }<pos:position pos:line="66" pos:column="6"/></block></then></if>

    <expr_stmt><expr><name><name pos:line="68" pos:column="5">backend<pos:position pos:line="68" pos:column="12"/></name><operator pos:line="68" pos:column="12">-&gt;<pos:position pos:line="68" pos:column="17"/></operator><name pos:line="68" pos:column="14">is_ssl<pos:position pos:line="68" pos:column="20"/></name></name> <operator pos:line="68" pos:column="21">=<pos:position pos:line="68" pos:column="22"/></operator> <name pos:line="68" pos:column="23">is_ssl<pos:position pos:line="68" pos:column="29"/></name></expr>;<pos:position pos:line="68" pos:column="30"/></expr_stmt>

    <comment type="block" pos:line="70" pos:column="5">/* Step One: Determine Who To Connect To */</comment>
    <expr_stmt><expr><name pos:line="71" pos:column="5">status<pos:position pos:line="71" pos:column="11"/></name> <operator pos:line="71" pos:column="12">=<pos:position pos:line="71" pos:column="13"/></operator> <call><name pos:line="71" pos:column="14">ap_proxy_http_determine_connection<pos:position pos:line="71" pos:column="48"/></name><argument_list pos:line="71" pos:column="48">(<argument><expr><name pos:line="71" pos:column="49">p<pos:position pos:line="71" pos:column="50"/></name></expr></argument>, <argument><expr><name pos:line="71" pos:column="52">r<pos:position pos:line="71" pos:column="53"/></name></expr></argument>, <argument><expr><name pos:line="71" pos:column="55">p_conn<pos:position pos:line="71" pos:column="61"/></name></expr></argument>, <argument><expr><name pos:line="71" pos:column="63">c<pos:position pos:line="71" pos:column="64"/></name></expr></argument>, <argument><expr><name pos:line="71" pos:column="66">conf<pos:position pos:line="71" pos:column="70"/></name></expr></argument>, <argument><expr><name pos:line="71" pos:column="72">uri<pos:position pos:line="71" pos:column="75"/></name></expr></argument>,
                                                <argument><expr><operator pos:line="72" pos:column="49">&amp;<pos:position pos:line="72" pos:column="54"/></operator><name pos:line="72" pos:column="50">url<pos:position pos:line="72" pos:column="53"/></name></expr></argument>, <argument><expr><name pos:line="72" pos:column="55">proxyname<pos:position pos:line="72" pos:column="64"/></name></expr></argument>, <argument><expr><name pos:line="72" pos:column="66">proxyport<pos:position pos:line="72" pos:column="75"/></name></expr></argument>,
                                                <argument><expr><name pos:line="73" pos:column="49">server_portstr<pos:position pos:line="73" pos:column="63"/></name></expr></argument>,
                                                <argument><expr><sizeof pos:line="74" pos:column="49">sizeof<argument_list pos:line="74" pos:column="55">(<argument><expr><name pos:line="74" pos:column="56">server_portstr<pos:position pos:line="74" pos:column="70"/></name></expr></argument>)<pos:position pos:line="74" pos:column="71"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="74" pos:column="72"/></argument_list></call></expr>;<pos:position pos:line="74" pos:column="73"/></expr_stmt>
    <if pos:line="75" pos:column="5">if <condition pos:line="75" pos:column="8">( <expr><name pos:line="75" pos:column="10">status<pos:position pos:line="75" pos:column="16"/></name> <operator pos:line="75" pos:column="17">!=<pos:position pos:line="75" pos:column="19"/></operator> <name pos:line="75" pos:column="20">OK<pos:position pos:line="75" pos:column="22"/></name></expr> )<pos:position pos:line="75" pos:column="24"/></condition><then pos:line="75" pos:column="24"> <block pos:line="75" pos:column="25">{
        <return pos:line="76" pos:column="9">return <expr><name pos:line="76" pos:column="16">status<pos:position pos:line="76" pos:column="22"/></name></expr>;<pos:position pos:line="76" pos:column="23"/></return>
    }<pos:position pos:line="77" pos:column="6"/></block></then></if>

    <comment type="block" pos:line="79" pos:column="5">/* Step Two: Make the Connection */</comment>
    <expr_stmt><expr><name pos:line="80" pos:column="5">status<pos:position pos:line="80" pos:column="11"/></name> <operator pos:line="80" pos:column="12">=<pos:position pos:line="80" pos:column="13"/></operator> <call><name pos:line="80" pos:column="14">ap_proxy_http_create_connection<pos:position pos:line="80" pos:column="45"/></name><argument_list pos:line="80" pos:column="45">(<argument><expr><name pos:line="80" pos:column="46">p<pos:position pos:line="80" pos:column="47"/></name></expr></argument>, <argument><expr><name pos:line="80" pos:column="49">r<pos:position pos:line="80" pos:column="50"/></name></expr></argument>, <argument><expr><name pos:line="80" pos:column="52">p_conn<pos:position pos:line="80" pos:column="58"/></name></expr></argument>, <argument><expr><name pos:line="80" pos:column="60">c<pos:position pos:line="80" pos:column="61"/></name></expr></argument>, <argument><expr><operator pos:line="80" pos:column="63">&amp;<pos:position pos:line="80" pos:column="68"/></operator><name pos:line="80" pos:column="64">origin<pos:position pos:line="80" pos:column="70"/></name></expr></argument>, <argument><expr><name pos:line="80" pos:column="72">backend<pos:position pos:line="80" pos:column="79"/></name></expr></argument>,
                                             <argument><expr><name pos:line="81" pos:column="46">conf<pos:position pos:line="81" pos:column="50"/></name></expr></argument>, <argument><expr><name pos:line="81" pos:column="52">proxyname<pos:position pos:line="81" pos:column="61"/></name></expr></argument>)<pos:position pos:line="81" pos:column="62"/></argument_list></call></expr>;<pos:position pos:line="81" pos:column="63"/></expr_stmt>
    <if pos:line="82" pos:column="5">if <condition pos:line="82" pos:column="8">( <expr><name pos:line="82" pos:column="10">status<pos:position pos:line="82" pos:column="16"/></name> <operator pos:line="82" pos:column="17">!=<pos:position pos:line="82" pos:column="19"/></operator> <name pos:line="82" pos:column="20">OK<pos:position pos:line="82" pos:column="22"/></name></expr> )<pos:position pos:line="82" pos:column="24"/></condition><then pos:line="82" pos:column="24"> <block pos:line="82" pos:column="25">{
        <return pos:line="83" pos:column="9">return <expr><name pos:line="83" pos:column="16">status<pos:position pos:line="83" pos:column="22"/></name></expr>;<pos:position pos:line="83" pos:column="23"/></return>
    }<pos:position pos:line="84" pos:column="6"/></block></then></if>
   
    <comment type="block" pos:line="86" pos:column="5">/* Step Three: Send the Request */</comment>
    <expr_stmt><expr><name pos:line="87" pos:column="5">status<pos:position pos:line="87" pos:column="11"/></name> <operator pos:line="87" pos:column="12">=<pos:position pos:line="87" pos:column="13"/></operator> <call><name pos:line="87" pos:column="14">ap_proxy_http_request<pos:position pos:line="87" pos:column="35"/></name><argument_list pos:line="87" pos:column="35">(<argument><expr><name pos:line="87" pos:column="36">p<pos:position pos:line="87" pos:column="37"/></name></expr></argument>, <argument><expr><name pos:line="87" pos:column="39">r<pos:position pos:line="87" pos:column="40"/></name></expr></argument>, <argument><expr><name pos:line="87" pos:column="42">p_conn<pos:position pos:line="87" pos:column="48"/></name></expr></argument>, <argument><expr><name pos:line="87" pos:column="50">origin<pos:position pos:line="87" pos:column="56"/></name></expr></argument>, <argument><expr><name pos:line="87" pos:column="58">conf<pos:position pos:line="87" pos:column="62"/></name></expr></argument>, <argument><expr><name pos:line="87" pos:column="64">uri<pos:position pos:line="87" pos:column="67"/></name></expr></argument>, <argument><expr><name pos:line="87" pos:column="69">url<pos:position pos:line="87" pos:column="72"/></name></expr></argument>, <argument><expr><name pos:line="87" pos:column="74">bb<pos:position pos:line="87" pos:column="76"/></name></expr></argument>,
                                   <argument><expr><name pos:line="88" pos:column="36">server_portstr<pos:position pos:line="88" pos:column="50"/></name></expr></argument>)<pos:position pos:line="88" pos:column="51"/></argument_list></call></expr>;<pos:position pos:line="88" pos:column="52"/></expr_stmt>
    <if pos:line="89" pos:column="5">if <condition pos:line="89" pos:column="8">( <expr><name pos:line="89" pos:column="10">status<pos:position pos:line="89" pos:column="16"/></name> <operator pos:line="89" pos:column="17">!=<pos:position pos:line="89" pos:column="19"/></operator> <name pos:line="89" pos:column="20">OK<pos:position pos:line="89" pos:column="22"/></name></expr> )<pos:position pos:line="89" pos:column="24"/></condition><then pos:line="89" pos:column="24"> <block pos:line="89" pos:column="25">{
        <return pos:line="90" pos:column="9">return <expr><name pos:line="90" pos:column="16">status<pos:position pos:line="90" pos:column="22"/></name></expr>;<pos:position pos:line="90" pos:column="23"/></return>
    }<pos:position pos:line="91" pos:column="6"/></block></then></if>

    <comment type="block" pos:line="93" pos:column="5">/* Step Four: Receive the Response */</comment>
    <expr_stmt><expr><name pos:line="94" pos:column="5">status<pos:position pos:line="94" pos:column="11"/></name> <operator pos:line="94" pos:column="12">=<pos:position pos:line="94" pos:column="13"/></operator> <call><name pos:line="94" pos:column="14">ap_proxy_http_process_response<pos:position pos:line="94" pos:column="44"/></name><argument_list pos:line="94" pos:column="44">(<argument><expr><name pos:line="94" pos:column="45">p<pos:position pos:line="94" pos:column="46"/></name></expr></argument>, <argument><expr><name pos:line="94" pos:column="48">r<pos:position pos:line="94" pos:column="49"/></name></expr></argument>, <argument><expr><name pos:line="94" pos:column="51">p_conn<pos:position pos:line="94" pos:column="57"/></name></expr></argument>, <argument><expr><name pos:line="94" pos:column="59">origin<pos:position pos:line="94" pos:column="65"/></name></expr></argument>, <argument><expr><name pos:line="94" pos:column="67">backend<pos:position pos:line="94" pos:column="74"/></name></expr></argument>, <argument><expr><name pos:line="94" pos:column="76">conf<pos:position pos:line="94" pos:column="80"/></name></expr></argument>,
                                            <argument><expr><name pos:line="95" pos:column="45">bb<pos:position pos:line="95" pos:column="47"/></name></expr></argument>, <argument><expr><name pos:line="95" pos:column="49">server_portstr<pos:position pos:line="95" pos:column="63"/></name></expr></argument>)<pos:position pos:line="95" pos:column="64"/></argument_list></call></expr>;<pos:position pos:line="95" pos:column="65"/></expr_stmt>
    <if pos:line="96" pos:column="5">if <condition pos:line="96" pos:column="8">( <expr><name pos:line="96" pos:column="10">status<pos:position pos:line="96" pos:column="16"/></name> <operator pos:line="96" pos:column="17">!=<pos:position pos:line="96" pos:column="19"/></operator> <name pos:line="96" pos:column="20">OK<pos:position pos:line="96" pos:column="22"/></name></expr> )<pos:position pos:line="96" pos:column="24"/></condition><then pos:line="96" pos:column="24"> <block pos:line="96" pos:column="25">{
        <comment type="block" pos:line="97" pos:column="9">/* clean up even if there is an error */</comment>
        <expr_stmt><expr><call><name pos:line="98" pos:column="9">ap_proxy_http_cleanup<pos:position pos:line="98" pos:column="30"/></name><argument_list pos:line="98" pos:column="30">(<argument><expr><name pos:line="98" pos:column="31">r<pos:position pos:line="98" pos:column="32"/></name></expr></argument>, <argument><expr><name pos:line="98" pos:column="34">p_conn<pos:position pos:line="98" pos:column="40"/></name></expr></argument>, <argument><expr><name pos:line="98" pos:column="42">backend<pos:position pos:line="98" pos:column="49"/></name></expr></argument>)<pos:position pos:line="98" pos:column="50"/></argument_list></call></expr>;<pos:position pos:line="98" pos:column="51"/></expr_stmt>
        <return pos:line="99" pos:column="9">return <expr><name pos:line="99" pos:column="16">status<pos:position pos:line="99" pos:column="22"/></name></expr>;<pos:position pos:line="99" pos:column="23"/></return>
    }<pos:position pos:line="100" pos:column="6"/></block></then></if>

    <comment type="block" pos:line="102" pos:column="5">/* Step Five: Clean Up */</comment>
    <expr_stmt><expr><name pos:line="103" pos:column="5">status<pos:position pos:line="103" pos:column="11"/></name> <operator pos:line="103" pos:column="12">=<pos:position pos:line="103" pos:column="13"/></operator> <call><name pos:line="103" pos:column="14">ap_proxy_http_cleanup<pos:position pos:line="103" pos:column="35"/></name><argument_list pos:line="103" pos:column="35">(<argument><expr><name pos:line="103" pos:column="36">r<pos:position pos:line="103" pos:column="37"/></name></expr></argument>, <argument><expr><name pos:line="103" pos:column="39">p_conn<pos:position pos:line="103" pos:column="45"/></name></expr></argument>, <argument><expr><name pos:line="103" pos:column="47">backend<pos:position pos:line="103" pos:column="54"/></name></expr></argument>)<pos:position pos:line="103" pos:column="55"/></argument_list></call></expr>;<pos:position pos:line="103" pos:column="56"/></expr_stmt>
    <if pos:line="104" pos:column="5">if <condition pos:line="104" pos:column="8">( <expr><name pos:line="104" pos:column="10">status<pos:position pos:line="104" pos:column="16"/></name> <operator pos:line="104" pos:column="17">!=<pos:position pos:line="104" pos:column="19"/></operator> <name pos:line="104" pos:column="20">OK<pos:position pos:line="104" pos:column="22"/></name></expr> )<pos:position pos:line="104" pos:column="24"/></condition><then pos:line="104" pos:column="24"> <block pos:line="104" pos:column="25">{
        <return pos:line="105" pos:column="9">return <expr><name pos:line="105" pos:column="16">status<pos:position pos:line="105" pos:column="22"/></name></expr>;<pos:position pos:line="105" pos:column="23"/></return>
    }<pos:position pos:line="106" pos:column="6"/></block></then></if>

    <return pos:line="108" pos:column="5">return <expr><name pos:line="108" pos:column="12">OK<pos:position pos:line="108" pos:column="14"/></name></expr>;<pos:position pos:line="108" pos:column="15"/></return>
}<pos:position pos:line="109" pos:column="2"/></block></function></unit>

<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/httpd/gumtree/httpd_repos_function_2344_httpd-2.2.22.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">void<pos:position pos:line="1" pos:column="12"/></name></type> <name pos:line="1" pos:column="13">get_handles_from_parent<pos:position pos:line="1" pos:column="36"/></name><parameter_list pos:line="1" pos:column="36">(<parameter><decl><type><name pos:line="1" pos:column="37">server_rec<pos:position pos:line="1" pos:column="47"/></name> <modifier pos:line="1" pos:column="48">*<pos:position pos:line="1" pos:column="49"/></modifier></type><name pos:line="1" pos:column="49">s<pos:position pos:line="1" pos:column="50"/></name></decl></parameter>, <parameter><decl><type><name pos:line="1" pos:column="52">HANDLE<pos:position pos:line="1" pos:column="58"/></name> <modifier pos:line="1" pos:column="59">*<pos:position pos:line="1" pos:column="60"/></modifier></type><name pos:line="1" pos:column="60">child_exit_event<pos:position pos:line="1" pos:column="76"/></name></decl></parameter>,
                                    <parameter><decl><type><name pos:line="2" pos:column="37">apr_proc_mutex_t<pos:position pos:line="2" pos:column="53"/></name> <modifier pos:line="2" pos:column="54">*<pos:position pos:line="2" pos:column="55"/></modifier><modifier pos:line="2" pos:column="55">*<pos:position pos:line="2" pos:column="56"/></modifier></type><name pos:line="2" pos:column="56">child_start_mutex<pos:position pos:line="2" pos:column="73"/></name></decl></parameter>,
                                    <parameter><decl><type><name pos:line="3" pos:column="37">apr_shm_t<pos:position pos:line="3" pos:column="46"/></name> <modifier pos:line="3" pos:column="47">*<pos:position pos:line="3" pos:column="48"/></modifier><modifier pos:line="3" pos:column="48">*<pos:position pos:line="3" pos:column="49"/></modifier></type><name pos:line="3" pos:column="49">scoreboard_shm<pos:position pos:line="3" pos:column="63"/></name></decl></parameter>)<pos:position pos:line="3" pos:column="64"/></parameter_list>
<block pos:line="4" pos:column="1">{
    <decl_stmt><decl><type><name pos:line="5" pos:column="5">HANDLE<pos:position pos:line="5" pos:column="11"/></name></type> <name pos:line="5" pos:column="12">hScore<pos:position pos:line="5" pos:column="18"/></name></decl>;<pos:position pos:line="5" pos:column="19"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="6" pos:column="5">HANDLE<pos:position pos:line="6" pos:column="11"/></name></type> <name pos:line="6" pos:column="12">ready_event<pos:position pos:line="6" pos:column="23"/></name></decl>;<pos:position pos:line="6" pos:column="24"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="7" pos:column="5">HANDLE<pos:position pos:line="7" pos:column="11"/></name></type> <name pos:line="7" pos:column="12">os_start<pos:position pos:line="7" pos:column="20"/></name></decl>;<pos:position pos:line="7" pos:column="21"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="8" pos:column="5">DWORD<pos:position pos:line="8" pos:column="10"/></name></type> <name pos:line="8" pos:column="11">BytesRead<pos:position pos:line="8" pos:column="20"/></name></decl>;<pos:position pos:line="8" pos:column="21"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="9" pos:column="5">void<pos:position pos:line="9" pos:column="9"/></name> <modifier pos:line="9" pos:column="10">*<pos:position pos:line="9" pos:column="11"/></modifier></type><name pos:line="9" pos:column="11">sb_shared<pos:position pos:line="9" pos:column="20"/></name></decl>;<pos:position pos:line="9" pos:column="21"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="10" pos:column="5">apr_status_t<pos:position pos:line="10" pos:column="17"/></name></type> <name pos:line="10" pos:column="18">rv<pos:position pos:line="10" pos:column="20"/></name></decl>;<pos:position pos:line="10" pos:column="21"/></decl_stmt>

    <comment type="block" pos:line="12" pos:column="5">/* *** We now do this was back in winnt_rewrite_args
     * pipe = GetStdHandle(STD_INPUT_HANDLE);
     */</comment>
    <if pos:line="15" pos:column="5">if <condition pos:line="15" pos:column="8">(<expr><operator pos:line="15" pos:column="9">!<pos:position pos:line="15" pos:column="10"/></operator><call><name pos:line="15" pos:column="10">ReadFile<pos:position pos:line="15" pos:column="18"/></name><argument_list pos:line="15" pos:column="18">(<argument><expr><name pos:line="15" pos:column="19">pipe<pos:position pos:line="15" pos:column="23"/></name></expr></argument>, <argument><expr><operator pos:line="15" pos:column="25">&amp;<pos:position pos:line="15" pos:column="30"/></operator><name pos:line="15" pos:column="26">ready_event<pos:position pos:line="15" pos:column="37"/></name></expr></argument>, <argument><expr><sizeof pos:line="15" pos:column="39">sizeof<argument_list pos:line="15" pos:column="45">(<argument><expr><name pos:line="15" pos:column="46">HANDLE<pos:position pos:line="15" pos:column="52"/></name></expr></argument>)<pos:position pos:line="15" pos:column="53"/></argument_list></sizeof></expr></argument>,
                  <argument><expr><operator pos:line="16" pos:column="19">&amp;<pos:position pos:line="16" pos:column="24"/></operator><name pos:line="16" pos:column="20">BytesRead<pos:position pos:line="16" pos:column="29"/></name></expr></argument>, <argument><expr><operator pos:line="16" pos:column="31">(<pos:position pos:line="16" pos:column="32"/></operator><name pos:line="16" pos:column="32">LPOVERLAPPED<pos:position pos:line="16" pos:column="44"/></name><operator pos:line="16" pos:column="44">)<pos:position pos:line="16" pos:column="45"/></operator> <name pos:line="16" pos:column="46">NULL<pos:position pos:line="16" pos:column="50"/></name></expr></argument>)<pos:position pos:line="16" pos:column="51"/></argument_list></call>
        <operator pos:line="17" pos:column="9">||<pos:position pos:line="17" pos:column="11"/></operator> <operator pos:line="17" pos:column="12">(<pos:position pos:line="17" pos:column="13"/></operator><name pos:line="17" pos:column="13">BytesRead<pos:position pos:line="17" pos:column="22"/></name> <operator pos:line="17" pos:column="23">!=<pos:position pos:line="17" pos:column="25"/></operator> <sizeof pos:line="17" pos:column="26">sizeof<argument_list pos:line="17" pos:column="32">(<argument><expr><name pos:line="17" pos:column="33">HANDLE<pos:position pos:line="17" pos:column="39"/></name></expr></argument>)<pos:position pos:line="17" pos:column="40"/></argument_list></sizeof><operator pos:line="17" pos:column="40">)<pos:position pos:line="17" pos:column="41"/></operator></expr>)<pos:position pos:line="17" pos:column="42"/></condition><then pos:line="17" pos:column="42"> <block pos:line="17" pos:column="43">{
        <expr_stmt><expr><call><name pos:line="18" pos:column="9">ap_log_error<pos:position pos:line="18" pos:column="21"/></name><argument_list pos:line="18" pos:column="21">(<argument><expr><name pos:line="18" pos:column="22">APLOG_MARK<pos:position pos:line="18" pos:column="32"/></name></expr></argument>, <argument><expr><name pos:line="18" pos:column="34">APLOG_CRIT<pos:position pos:line="18" pos:column="44"/></name></expr></argument>, <argument><expr><call><name pos:line="18" pos:column="46">apr_get_os_error<pos:position pos:line="18" pos:column="62"/></name><argument_list pos:line="18" pos:column="62">()<pos:position pos:line="18" pos:column="64"/></argument_list></call></expr></argument>, <argument><expr><name pos:line="18" pos:column="66">ap_server_conf<pos:position pos:line="18" pos:column="80"/></name></expr></argument>,
                     <argument><expr><literal type="string" pos:line="19" pos:column="22">"Child %lu: Unable to retrieve the ready event from the parent"<pos:position pos:line="19" pos:column="85"/></literal></expr></argument>, <argument><expr><name pos:line="19" pos:column="87">my_pid<pos:position pos:line="19" pos:column="93"/></name></expr></argument>)<pos:position pos:line="19" pos:column="94"/></argument_list></call></expr>;<pos:position pos:line="19" pos:column="95"/></expr_stmt>
        <expr_stmt><expr><call><name pos:line="20" pos:column="9">exit<pos:position pos:line="20" pos:column="13"/></name><argument_list pos:line="20" pos:column="13">(<argument><expr><name pos:line="20" pos:column="14">APEXIT_CHILDINIT<pos:position pos:line="20" pos:column="30"/></name></expr></argument>)<pos:position pos:line="20" pos:column="31"/></argument_list></call></expr>;<pos:position pos:line="20" pos:column="32"/></expr_stmt>
    }<pos:position pos:line="21" pos:column="6"/></block></then></if>

    <expr_stmt><expr><call><name pos:line="23" pos:column="5">SetEvent<pos:position pos:line="23" pos:column="13"/></name><argument_list pos:line="23" pos:column="13">(<argument><expr><name pos:line="23" pos:column="14">ready_event<pos:position pos:line="23" pos:column="25"/></name></expr></argument>)<pos:position pos:line="23" pos:column="26"/></argument_list></call></expr>;<pos:position pos:line="23" pos:column="27"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="24" pos:column="5">CloseHandle<pos:position pos:line="24" pos:column="16"/></name><argument_list pos:line="24" pos:column="16">(<argument><expr><name pos:line="24" pos:column="17">ready_event<pos:position pos:line="24" pos:column="28"/></name></expr></argument>)<pos:position pos:line="24" pos:column="29"/></argument_list></call></expr>;<pos:position pos:line="24" pos:column="30"/></expr_stmt>

    <if pos:line="26" pos:column="5">if <condition pos:line="26" pos:column="8">(<expr><operator pos:line="26" pos:column="9">!<pos:position pos:line="26" pos:column="10"/></operator><call><name pos:line="26" pos:column="10">ReadFile<pos:position pos:line="26" pos:column="18"/></name><argument_list pos:line="26" pos:column="18">(<argument><expr><name pos:line="26" pos:column="19">pipe<pos:position pos:line="26" pos:column="23"/></name></expr></argument>, <argument><expr><name pos:line="26" pos:column="25">child_exit_event<pos:position pos:line="26" pos:column="41"/></name></expr></argument>, <argument><expr><sizeof pos:line="26" pos:column="43">sizeof<argument_list pos:line="26" pos:column="49">(<argument><expr><name pos:line="26" pos:column="50">HANDLE<pos:position pos:line="26" pos:column="56"/></name></expr></argument>)<pos:position pos:line="26" pos:column="57"/></argument_list></sizeof></expr></argument>,
                  <argument><expr><operator pos:line="27" pos:column="19">&amp;<pos:position pos:line="27" pos:column="24"/></operator><name pos:line="27" pos:column="20">BytesRead<pos:position pos:line="27" pos:column="29"/></name></expr></argument>, <argument><expr><operator pos:line="27" pos:column="31">(<pos:position pos:line="27" pos:column="32"/></operator><name pos:line="27" pos:column="32">LPOVERLAPPED<pos:position pos:line="27" pos:column="44"/></name><operator pos:line="27" pos:column="44">)<pos:position pos:line="27" pos:column="45"/></operator> <name pos:line="27" pos:column="46">NULL<pos:position pos:line="27" pos:column="50"/></name></expr></argument>)<pos:position pos:line="27" pos:column="51"/></argument_list></call>
        <operator pos:line="28" pos:column="9">||<pos:position pos:line="28" pos:column="11"/></operator> <operator pos:line="28" pos:column="12">(<pos:position pos:line="28" pos:column="13"/></operator><name pos:line="28" pos:column="13">BytesRead<pos:position pos:line="28" pos:column="22"/></name> <operator pos:line="28" pos:column="23">!=<pos:position pos:line="28" pos:column="25"/></operator> <sizeof pos:line="28" pos:column="26">sizeof<argument_list pos:line="28" pos:column="32">(<argument><expr><name pos:line="28" pos:column="33">HANDLE<pos:position pos:line="28" pos:column="39"/></name></expr></argument>)<pos:position pos:line="28" pos:column="40"/></argument_list></sizeof><operator pos:line="28" pos:column="40">)<pos:position pos:line="28" pos:column="41"/></operator></expr>)<pos:position pos:line="28" pos:column="42"/></condition><then pos:line="28" pos:column="42"> <block pos:line="28" pos:column="43">{
        <expr_stmt><expr><call><name pos:line="29" pos:column="9">ap_log_error<pos:position pos:line="29" pos:column="21"/></name><argument_list pos:line="29" pos:column="21">(<argument><expr><name pos:line="29" pos:column="22">APLOG_MARK<pos:position pos:line="29" pos:column="32"/></name></expr></argument>, <argument><expr><name pos:line="29" pos:column="34">APLOG_CRIT<pos:position pos:line="29" pos:column="44"/></name></expr></argument>, <argument><expr><call><name pos:line="29" pos:column="46">apr_get_os_error<pos:position pos:line="29" pos:column="62"/></name><argument_list pos:line="29" pos:column="62">()<pos:position pos:line="29" pos:column="64"/></argument_list></call></expr></argument>, <argument><expr><name pos:line="29" pos:column="66">ap_server_conf<pos:position pos:line="29" pos:column="80"/></name></expr></argument>,
                     <argument><expr><literal type="string" pos:line="30" pos:column="22">"Child %lu: Unable to retrieve the exit event from the parent"<pos:position pos:line="30" pos:column="84"/></literal></expr></argument>, <argument><expr><name pos:line="30" pos:column="86">my_pid<pos:position pos:line="30" pos:column="92"/></name></expr></argument>)<pos:position pos:line="30" pos:column="93"/></argument_list></call></expr>;<pos:position pos:line="30" pos:column="94"/></expr_stmt>
        <expr_stmt><expr><call><name pos:line="31" pos:column="9">exit<pos:position pos:line="31" pos:column="13"/></name><argument_list pos:line="31" pos:column="13">(<argument><expr><name pos:line="31" pos:column="14">APEXIT_CHILDINIT<pos:position pos:line="31" pos:column="30"/></name></expr></argument>)<pos:position pos:line="31" pos:column="31"/></argument_list></call></expr>;<pos:position pos:line="31" pos:column="32"/></expr_stmt>
    }<pos:position pos:line="32" pos:column="6"/></block></then></if>

    <if pos:line="34" pos:column="5">if <condition pos:line="34" pos:column="8">(<expr><operator pos:line="34" pos:column="9">!<pos:position pos:line="34" pos:column="10"/></operator><call><name pos:line="34" pos:column="10">ReadFile<pos:position pos:line="34" pos:column="18"/></name><argument_list pos:line="34" pos:column="18">(<argument><expr><name pos:line="34" pos:column="19">pipe<pos:position pos:line="34" pos:column="23"/></name></expr></argument>, <argument><expr><operator pos:line="34" pos:column="25">&amp;<pos:position pos:line="34" pos:column="30"/></operator><name pos:line="34" pos:column="26">os_start<pos:position pos:line="34" pos:column="34"/></name></expr></argument>, <argument><expr><sizeof pos:line="34" pos:column="36">sizeof<argument_list pos:line="34" pos:column="42">(<argument><expr><name pos:line="34" pos:column="43">os_start<pos:position pos:line="34" pos:column="51"/></name></expr></argument>)<pos:position pos:line="34" pos:column="52"/></argument_list></sizeof></expr></argument>,
                  <argument><expr><operator pos:line="35" pos:column="19">&amp;<pos:position pos:line="35" pos:column="24"/></operator><name pos:line="35" pos:column="20">BytesRead<pos:position pos:line="35" pos:column="29"/></name></expr></argument>, <argument><expr><operator pos:line="35" pos:column="31">(<pos:position pos:line="35" pos:column="32"/></operator><name pos:line="35" pos:column="32">LPOVERLAPPED<pos:position pos:line="35" pos:column="44"/></name><operator pos:line="35" pos:column="44">)<pos:position pos:line="35" pos:column="45"/></operator> <name pos:line="35" pos:column="46">NULL<pos:position pos:line="35" pos:column="50"/></name></expr></argument>)<pos:position pos:line="35" pos:column="51"/></argument_list></call>
        <operator pos:line="36" pos:column="9">||<pos:position pos:line="36" pos:column="11"/></operator> <operator pos:line="36" pos:column="12">(<pos:position pos:line="36" pos:column="13"/></operator><name pos:line="36" pos:column="13">BytesRead<pos:position pos:line="36" pos:column="22"/></name> <operator pos:line="36" pos:column="23">!=<pos:position pos:line="36" pos:column="25"/></operator> <sizeof pos:line="36" pos:column="26">sizeof<argument_list pos:line="36" pos:column="32">(<argument><expr><name pos:line="36" pos:column="33">os_start<pos:position pos:line="36" pos:column="41"/></name></expr></argument>)<pos:position pos:line="36" pos:column="42"/></argument_list></sizeof><operator pos:line="36" pos:column="42">)<pos:position pos:line="36" pos:column="43"/></operator></expr>)<pos:position pos:line="36" pos:column="44"/></condition><then pos:line="36" pos:column="44"> <block pos:line="36" pos:column="45">{
        <expr_stmt><expr><call><name pos:line="37" pos:column="9">ap_log_error<pos:position pos:line="37" pos:column="21"/></name><argument_list pos:line="37" pos:column="21">(<argument><expr><name pos:line="37" pos:column="22">APLOG_MARK<pos:position pos:line="37" pos:column="32"/></name></expr></argument>, <argument><expr><name pos:line="37" pos:column="34">APLOG_CRIT<pos:position pos:line="37" pos:column="44"/></name></expr></argument>, <argument><expr><call><name pos:line="37" pos:column="46">apr_get_os_error<pos:position pos:line="37" pos:column="62"/></name><argument_list pos:line="37" pos:column="62">()<pos:position pos:line="37" pos:column="64"/></argument_list></call></expr></argument>, <argument><expr><name pos:line="37" pos:column="66">ap_server_conf<pos:position pos:line="37" pos:column="80"/></name></expr></argument>,
                     <argument><expr><literal type="string" pos:line="38" pos:column="22">"Child %lu: Unable to retrieve the start_mutex from the parent"<pos:position pos:line="38" pos:column="85"/></literal></expr></argument>, <argument><expr><name pos:line="38" pos:column="87">my_pid<pos:position pos:line="38" pos:column="93"/></name></expr></argument>)<pos:position pos:line="38" pos:column="94"/></argument_list></call></expr>;<pos:position pos:line="38" pos:column="95"/></expr_stmt>
        <expr_stmt><expr><call><name pos:line="39" pos:column="9">exit<pos:position pos:line="39" pos:column="13"/></name><argument_list pos:line="39" pos:column="13">(<argument><expr><name pos:line="39" pos:column="14">APEXIT_CHILDINIT<pos:position pos:line="39" pos:column="30"/></name></expr></argument>)<pos:position pos:line="39" pos:column="31"/></argument_list></call></expr>;<pos:position pos:line="39" pos:column="32"/></expr_stmt>
    }<pos:position pos:line="40" pos:column="6"/></block></then></if>
    <expr_stmt><expr><operator pos:line="41" pos:column="5">*<pos:position pos:line="41" pos:column="6"/></operator><name pos:line="41" pos:column="6">child_start_mutex<pos:position pos:line="41" pos:column="23"/></name> <operator pos:line="41" pos:column="24">=<pos:position pos:line="41" pos:column="25"/></operator> <name pos:line="41" pos:column="26">NULL<pos:position pos:line="41" pos:column="30"/></name></expr>;<pos:position pos:line="41" pos:column="31"/></expr_stmt>
    <if pos:line="42" pos:column="5">if <condition pos:line="42" pos:column="8">(<expr><operator pos:line="42" pos:column="9">(<pos:position pos:line="42" pos:column="10"/></operator><name pos:line="42" pos:column="10">rv<pos:position pos:line="42" pos:column="12"/></name> <operator pos:line="42" pos:column="13">=<pos:position pos:line="42" pos:column="14"/></operator> <call><name pos:line="42" pos:column="15">apr_os_proc_mutex_put<pos:position pos:line="42" pos:column="36"/></name><argument_list pos:line="42" pos:column="36">(<argument><expr><name pos:line="42" pos:column="37">child_start_mutex<pos:position pos:line="42" pos:column="54"/></name></expr></argument>, <argument><expr><operator pos:line="42" pos:column="56">&amp;<pos:position pos:line="42" pos:column="61"/></operator><name pos:line="42" pos:column="57">os_start<pos:position pos:line="42" pos:column="65"/></name></expr></argument>, <argument><expr><name><name pos:line="42" pos:column="67">s<pos:position pos:line="42" pos:column="68"/></name><operator pos:line="42" pos:column="68">-&gt;<pos:position pos:line="42" pos:column="73"/></operator><name pos:line="42" pos:column="70">process<pos:position pos:line="42" pos:column="77"/></name><operator pos:line="42" pos:column="77">-&gt;<pos:position pos:line="42" pos:column="82"/></operator><name pos:line="42" pos:column="79">pool<pos:position pos:line="42" pos:column="83"/></name></name></expr></argument>)<pos:position pos:line="42" pos:column="84"/></argument_list></call><operator pos:line="42" pos:column="84">)<pos:position pos:line="42" pos:column="85"/></operator>
            <operator pos:line="43" pos:column="13">!=<pos:position pos:line="43" pos:column="15"/></operator> <name pos:line="43" pos:column="16">APR_SUCCESS<pos:position pos:line="43" pos:column="27"/></name></expr>)<pos:position pos:line="43" pos:column="28"/></condition><then pos:line="43" pos:column="28"> <block pos:line="43" pos:column="29">{
        <expr_stmt><expr><call><name pos:line="44" pos:column="9">ap_log_error<pos:position pos:line="44" pos:column="21"/></name><argument_list pos:line="44" pos:column="21">(<argument><expr><name pos:line="44" pos:column="22">APLOG_MARK<pos:position pos:line="44" pos:column="32"/></name></expr></argument>, <argument><expr><name pos:line="44" pos:column="34">APLOG_CRIT<pos:position pos:line="44" pos:column="44"/></name></expr></argument>, <argument><expr><name pos:line="44" pos:column="46">rv<pos:position pos:line="44" pos:column="48"/></name></expr></argument>, <argument><expr><name pos:line="44" pos:column="50">ap_server_conf<pos:position pos:line="44" pos:column="64"/></name></expr></argument>,
                     <argument><expr><literal type="string" pos:line="45" pos:column="22">"Child %lu: Unable to access the start_mutex from the parent"<pos:position pos:line="45" pos:column="83"/></literal></expr></argument>, <argument><expr><name pos:line="45" pos:column="85">my_pid<pos:position pos:line="45" pos:column="91"/></name></expr></argument>)<pos:position pos:line="45" pos:column="92"/></argument_list></call></expr>;<pos:position pos:line="45" pos:column="93"/></expr_stmt>
        <expr_stmt><expr><call><name pos:line="46" pos:column="9">exit<pos:position pos:line="46" pos:column="13"/></name><argument_list pos:line="46" pos:column="13">(<argument><expr><name pos:line="46" pos:column="14">APEXIT_CHILDINIT<pos:position pos:line="46" pos:column="30"/></name></expr></argument>)<pos:position pos:line="46" pos:column="31"/></argument_list></call></expr>;<pos:position pos:line="46" pos:column="32"/></expr_stmt>
    }<pos:position pos:line="47" pos:column="6"/></block></then></if>

    <if pos:line="49" pos:column="5">if <condition pos:line="49" pos:column="8">(<expr><operator pos:line="49" pos:column="9">!<pos:position pos:line="49" pos:column="10"/></operator><call><name pos:line="49" pos:column="10">ReadFile<pos:position pos:line="49" pos:column="18"/></name><argument_list pos:line="49" pos:column="18">(<argument><expr><name pos:line="49" pos:column="19">pipe<pos:position pos:line="49" pos:column="23"/></name></expr></argument>, <argument><expr><operator pos:line="49" pos:column="25">&amp;<pos:position pos:line="49" pos:column="30"/></operator><name pos:line="49" pos:column="26">hScore<pos:position pos:line="49" pos:column="32"/></name></expr></argument>, <argument><expr><sizeof pos:line="49" pos:column="34">sizeof<argument_list pos:line="49" pos:column="40">(<argument><expr><name pos:line="49" pos:column="41">hScore<pos:position pos:line="49" pos:column="47"/></name></expr></argument>)<pos:position pos:line="49" pos:column="48"/></argument_list></sizeof></expr></argument>,
                  <argument><expr><operator pos:line="50" pos:column="19">&amp;<pos:position pos:line="50" pos:column="24"/></operator><name pos:line="50" pos:column="20">BytesRead<pos:position pos:line="50" pos:column="29"/></name></expr></argument>, <argument><expr><operator pos:line="50" pos:column="31">(<pos:position pos:line="50" pos:column="32"/></operator><name pos:line="50" pos:column="32">LPOVERLAPPED<pos:position pos:line="50" pos:column="44"/></name><operator pos:line="50" pos:column="44">)<pos:position pos:line="50" pos:column="45"/></operator> <name pos:line="50" pos:column="46">NULL<pos:position pos:line="50" pos:column="50"/></name></expr></argument>)<pos:position pos:line="50" pos:column="51"/></argument_list></call>
        <operator pos:line="51" pos:column="9">||<pos:position pos:line="51" pos:column="11"/></operator> <operator pos:line="51" pos:column="12">(<pos:position pos:line="51" pos:column="13"/></operator><name pos:line="51" pos:column="13">BytesRead<pos:position pos:line="51" pos:column="22"/></name> <operator pos:line="51" pos:column="23">!=<pos:position pos:line="51" pos:column="25"/></operator> <sizeof pos:line="51" pos:column="26">sizeof<argument_list pos:line="51" pos:column="32">(<argument><expr><name pos:line="51" pos:column="33">hScore<pos:position pos:line="51" pos:column="39"/></name></expr></argument>)<pos:position pos:line="51" pos:column="40"/></argument_list></sizeof><operator pos:line="51" pos:column="40">)<pos:position pos:line="51" pos:column="41"/></operator></expr>)<pos:position pos:line="51" pos:column="42"/></condition><then pos:line="51" pos:column="42"> <block pos:line="51" pos:column="43">{
        <expr_stmt><expr><call><name pos:line="52" pos:column="9">ap_log_error<pos:position pos:line="52" pos:column="21"/></name><argument_list pos:line="52" pos:column="21">(<argument><expr><name pos:line="52" pos:column="22">APLOG_MARK<pos:position pos:line="52" pos:column="32"/></name></expr></argument>, <argument><expr><name pos:line="52" pos:column="34">APLOG_CRIT<pos:position pos:line="52" pos:column="44"/></name></expr></argument>, <argument><expr><call><name pos:line="52" pos:column="46">apr_get_os_error<pos:position pos:line="52" pos:column="62"/></name><argument_list pos:line="52" pos:column="62">()<pos:position pos:line="52" pos:column="64"/></argument_list></call></expr></argument>, <argument><expr><name pos:line="52" pos:column="66">ap_server_conf<pos:position pos:line="52" pos:column="80"/></name></expr></argument>,
                     <argument><expr><literal type="string" pos:line="53" pos:column="22">"Child %lu: Unable to retrieve the scoreboard from the parent"<pos:position pos:line="53" pos:column="84"/></literal></expr></argument>, <argument><expr><name pos:line="53" pos:column="86">my_pid<pos:position pos:line="53" pos:column="92"/></name></expr></argument>)<pos:position pos:line="53" pos:column="93"/></argument_list></call></expr>;<pos:position pos:line="53" pos:column="94"/></expr_stmt>
        <expr_stmt><expr><call><name pos:line="54" pos:column="9">exit<pos:position pos:line="54" pos:column="13"/></name><argument_list pos:line="54" pos:column="13">(<argument><expr><name pos:line="54" pos:column="14">APEXIT_CHILDINIT<pos:position pos:line="54" pos:column="30"/></name></expr></argument>)<pos:position pos:line="54" pos:column="31"/></argument_list></call></expr>;<pos:position pos:line="54" pos:column="32"/></expr_stmt>
    }<pos:position pos:line="55" pos:column="6"/></block></then></if>
    <expr_stmt><expr><operator pos:line="56" pos:column="5">*<pos:position pos:line="56" pos:column="6"/></operator><name pos:line="56" pos:column="6">scoreboard_shm<pos:position pos:line="56" pos:column="20"/></name> <operator pos:line="56" pos:column="21">=<pos:position pos:line="56" pos:column="22"/></operator> <name pos:line="56" pos:column="23">NULL<pos:position pos:line="56" pos:column="27"/></name></expr>;<pos:position pos:line="56" pos:column="28"/></expr_stmt>
    <if pos:line="57" pos:column="5">if <condition pos:line="57" pos:column="8">(<expr><operator pos:line="57" pos:column="9">(<pos:position pos:line="57" pos:column="10"/></operator><name pos:line="57" pos:column="10">rv<pos:position pos:line="57" pos:column="12"/></name> <operator pos:line="57" pos:column="13">=<pos:position pos:line="57" pos:column="14"/></operator> <call><name pos:line="57" pos:column="15">apr_os_shm_put<pos:position pos:line="57" pos:column="29"/></name><argument_list pos:line="57" pos:column="29">(<argument><expr><name pos:line="57" pos:column="30">scoreboard_shm<pos:position pos:line="57" pos:column="44"/></name></expr></argument>, <argument><expr><operator pos:line="57" pos:column="46">&amp;<pos:position pos:line="57" pos:column="51"/></operator><name pos:line="57" pos:column="47">hScore<pos:position pos:line="57" pos:column="53"/></name></expr></argument>, <argument><expr><name><name pos:line="57" pos:column="55">s<pos:position pos:line="57" pos:column="56"/></name><operator pos:line="57" pos:column="56">-&gt;<pos:position pos:line="57" pos:column="61"/></operator><name pos:line="57" pos:column="58">process<pos:position pos:line="57" pos:column="65"/></name><operator pos:line="57" pos:column="65">-&gt;<pos:position pos:line="57" pos:column="70"/></operator><name pos:line="57" pos:column="67">pool<pos:position pos:line="57" pos:column="71"/></name></name></expr></argument>)<pos:position pos:line="57" pos:column="72"/></argument_list></call><operator pos:line="57" pos:column="72">)<pos:position pos:line="57" pos:column="73"/></operator>
            <operator pos:line="58" pos:column="13">!=<pos:position pos:line="58" pos:column="15"/></operator> <name pos:line="58" pos:column="16">APR_SUCCESS<pos:position pos:line="58" pos:column="27"/></name></expr>)<pos:position pos:line="58" pos:column="28"/></condition><then pos:line="58" pos:column="28"> <block pos:line="58" pos:column="29">{
        <expr_stmt><expr><call><name pos:line="59" pos:column="9">ap_log_error<pos:position pos:line="59" pos:column="21"/></name><argument_list pos:line="59" pos:column="21">(<argument><expr><name pos:line="59" pos:column="22">APLOG_MARK<pos:position pos:line="59" pos:column="32"/></name></expr></argument>, <argument><expr><name pos:line="59" pos:column="34">APLOG_CRIT<pos:position pos:line="59" pos:column="44"/></name></expr></argument>, <argument><expr><name pos:line="59" pos:column="46">rv<pos:position pos:line="59" pos:column="48"/></name></expr></argument>, <argument><expr><name pos:line="59" pos:column="50">ap_server_conf<pos:position pos:line="59" pos:column="64"/></name></expr></argument>,
                     <argument><expr><literal type="string" pos:line="60" pos:column="22">"Child %lu: Unable to access the scoreboard from the parent"<pos:position pos:line="60" pos:column="82"/></literal></expr></argument>, <argument><expr><name pos:line="60" pos:column="84">my_pid<pos:position pos:line="60" pos:column="90"/></name></expr></argument>)<pos:position pos:line="60" pos:column="91"/></argument_list></call></expr>;<pos:position pos:line="60" pos:column="92"/></expr_stmt>
        <expr_stmt><expr><call><name pos:line="61" pos:column="9">exit<pos:position pos:line="61" pos:column="13"/></name><argument_list pos:line="61" pos:column="13">(<argument><expr><name pos:line="61" pos:column="14">APEXIT_CHILDINIT<pos:position pos:line="61" pos:column="30"/></name></expr></argument>)<pos:position pos:line="61" pos:column="31"/></argument_list></call></expr>;<pos:position pos:line="61" pos:column="32"/></expr_stmt>
    }<pos:position pos:line="62" pos:column="6"/></block></then></if>

    <expr_stmt><expr><name pos:line="64" pos:column="5">rv<pos:position pos:line="64" pos:column="7"/></name> <operator pos:line="64" pos:column="8">=<pos:position pos:line="64" pos:column="9"/></operator> <call><name pos:line="64" pos:column="10">ap_reopen_scoreboard<pos:position pos:line="64" pos:column="30"/></name><argument_list pos:line="64" pos:column="30">(<argument><expr><name><name pos:line="64" pos:column="31">s<pos:position pos:line="64" pos:column="32"/></name><operator pos:line="64" pos:column="32">-&gt;<pos:position pos:line="64" pos:column="37"/></operator><name pos:line="64" pos:column="34">process<pos:position pos:line="64" pos:column="41"/></name><operator pos:line="64" pos:column="41">-&gt;<pos:position pos:line="64" pos:column="46"/></operator><name pos:line="64" pos:column="43">pool<pos:position pos:line="64" pos:column="47"/></name></name></expr></argument>, <argument><expr><name pos:line="64" pos:column="49">scoreboard_shm<pos:position pos:line="64" pos:column="63"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="64" pos:column="65">1<pos:position pos:line="64" pos:column="66"/></literal></expr></argument>)<pos:position pos:line="64" pos:column="67"/></argument_list></call></expr>;<pos:position pos:line="64" pos:column="68"/></expr_stmt>
    <if pos:line="65" pos:column="5">if <condition pos:line="65" pos:column="8">(<expr><name pos:line="65" pos:column="9">rv<pos:position pos:line="65" pos:column="11"/></name> <operator pos:line="65" pos:column="12">||<pos:position pos:line="65" pos:column="14"/></operator> <operator pos:line="65" pos:column="15">!<pos:position pos:line="65" pos:column="16"/></operator><operator pos:line="65" pos:column="16">(<pos:position pos:line="65" pos:column="17"/></operator><name pos:line="65" pos:column="17">sb_shared<pos:position pos:line="65" pos:column="26"/></name> <operator pos:line="65" pos:column="27">=<pos:position pos:line="65" pos:column="28"/></operator> <call><name pos:line="65" pos:column="29">apr_shm_baseaddr_get<pos:position pos:line="65" pos:column="49"/></name><argument_list pos:line="65" pos:column="49">(<argument><expr><operator pos:line="65" pos:column="50">*<pos:position pos:line="65" pos:column="51"/></operator><name pos:line="65" pos:column="51">scoreboard_shm<pos:position pos:line="65" pos:column="65"/></name></expr></argument>)<pos:position pos:line="65" pos:column="66"/></argument_list></call><operator pos:line="65" pos:column="66">)<pos:position pos:line="65" pos:column="67"/></operator></expr>)<pos:position pos:line="65" pos:column="68"/></condition><then pos:line="65" pos:column="68"> <block pos:line="65" pos:column="69">{
        <expr_stmt><expr><call><name pos:line="66" pos:column="9">ap_log_error<pos:position pos:line="66" pos:column="21"/></name><argument_list pos:line="66" pos:column="21">(<argument><expr><name pos:line="66" pos:column="22">APLOG_MARK<pos:position pos:line="66" pos:column="32"/></name></expr></argument>, <argument><expr><name pos:line="66" pos:column="34">APLOG_CRIT<pos:position pos:line="66" pos:column="44"/></name></expr></argument>, <argument><expr><name pos:line="66" pos:column="46">rv<pos:position pos:line="66" pos:column="48"/></name></expr></argument>, <argument><expr><name pos:line="66" pos:column="50">NULL<pos:position pos:line="66" pos:column="54"/></name></expr></argument>,
                     <argument><expr><literal type="string" pos:line="67" pos:column="22">"Child %lu: Unable to reopen the scoreboard from the parent"<pos:position pos:line="67" pos:column="82"/></literal></expr></argument>, <argument><expr><name pos:line="67" pos:column="84">my_pid<pos:position pos:line="67" pos:column="90"/></name></expr></argument>)<pos:position pos:line="67" pos:column="91"/></argument_list></call></expr>;<pos:position pos:line="67" pos:column="92"/></expr_stmt>
        <expr_stmt><expr><call><name pos:line="68" pos:column="9">exit<pos:position pos:line="68" pos:column="13"/></name><argument_list pos:line="68" pos:column="13">(<argument><expr><name pos:line="68" pos:column="14">APEXIT_CHILDINIT<pos:position pos:line="68" pos:column="30"/></name></expr></argument>)<pos:position pos:line="68" pos:column="31"/></argument_list></call></expr>;<pos:position pos:line="68" pos:column="32"/></expr_stmt>
    }<pos:position pos:line="69" pos:column="6"/></block></then></if>
    <comment type="block" pos:line="70" pos:column="5">/* We must 'initialize' the scoreboard to relink all the
     * process-local pointer arrays into the shared memory block.
     */</comment>
    <expr_stmt><expr><call><name pos:line="73" pos:column="5">ap_init_scoreboard<pos:position pos:line="73" pos:column="23"/></name><argument_list pos:line="73" pos:column="23">(<argument><expr><name pos:line="73" pos:column="24">sb_shared<pos:position pos:line="73" pos:column="33"/></name></expr></argument>)<pos:position pos:line="73" pos:column="34"/></argument_list></call></expr>;<pos:position pos:line="73" pos:column="35"/></expr_stmt>

    <expr_stmt><expr><call><name pos:line="75" pos:column="5">ap_log_error<pos:position pos:line="75" pos:column="17"/></name><argument_list pos:line="75" pos:column="17">(<argument><expr><name pos:line="75" pos:column="18">APLOG_MARK<pos:position pos:line="75" pos:column="28"/></name></expr></argument>, <argument><expr><name pos:line="75" pos:column="30">APLOG_DEBUG<pos:position pos:line="75" pos:column="41"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="75" pos:column="43">0<pos:position pos:line="75" pos:column="44"/></literal></expr></argument>, <argument><expr><name pos:line="75" pos:column="46">ap_server_conf<pos:position pos:line="75" pos:column="60"/></name></expr></argument>,
                 <argument><expr><literal type="string" pos:line="76" pos:column="18">"Child %lu: Retrieved our scoreboard from the parent."<pos:position pos:line="76" pos:column="72"/></literal></expr></argument>, <argument><expr><name pos:line="76" pos:column="74">my_pid<pos:position pos:line="76" pos:column="80"/></name></expr></argument>)<pos:position pos:line="76" pos:column="81"/></argument_list></call></expr>;<pos:position pos:line="76" pos:column="82"/></expr_stmt>
}<pos:position pos:line="77" pos:column="2"/></block></function></unit>

<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/httpd/gumtree/httpd_repos_function_2464_httpd-2.2.8.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">void<pos:position pos:line="1" pos:column="12"/></name> <modifier pos:line="1" pos:column="13">*<pos:position pos:line="1" pos:column="14"/></modifier></type><name pos:line="1" pos:column="14">listener_thread<pos:position pos:line="1" pos:column="29"/></name><parameter_list pos:line="1" pos:column="29">(<parameter><decl><type><name pos:line="1" pos:column="30">apr_thread_t<pos:position pos:line="1" pos:column="42"/></name> <modifier pos:line="1" pos:column="43">*<pos:position pos:line="1" pos:column="44"/></modifier></type> <name pos:line="1" pos:column="45">thd<pos:position pos:line="1" pos:column="48"/></name></decl></parameter>, <parameter><decl><type><name pos:line="1" pos:column="50">void<pos:position pos:line="1" pos:column="54"/></name> <modifier pos:line="1" pos:column="55">*<pos:position pos:line="1" pos:column="56"/></modifier></type><name pos:line="1" pos:column="56">dummy<pos:position pos:line="1" pos:column="61"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="62"/></parameter_list>
<block pos:line="2" pos:column="1">{
    <decl_stmt><decl><type><name pos:line="3" pos:column="5">apr_status_t<pos:position pos:line="3" pos:column="17"/></name></type> <name pos:line="3" pos:column="18">rc<pos:position pos:line="3" pos:column="20"/></name></decl>;<pos:position pos:line="3" pos:column="21"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="4" pos:column="5">proc_info<pos:position pos:line="4" pos:column="14"/></name> <modifier pos:line="4" pos:column="15">*<pos:position pos:line="4" pos:column="16"/></modifier></type><name pos:line="4" pos:column="16">ti<pos:position pos:line="4" pos:column="18"/></name> <init pos:line="4" pos:column="19">= <expr><name pos:line="4" pos:column="21">dummy<pos:position pos:line="4" pos:column="26"/></name></expr></init></decl>;<pos:position pos:line="4" pos:column="27"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="5" pos:column="5">int<pos:position pos:line="5" pos:column="8"/></name></type> <name pos:line="5" pos:column="9">process_slot<pos:position pos:line="5" pos:column="21"/></name> <init pos:line="5" pos:column="22">= <expr><name><name pos:line="5" pos:column="24">ti<pos:position pos:line="5" pos:column="26"/></name><operator pos:line="5" pos:column="26">-&gt;<pos:position pos:line="5" pos:column="31"/></operator><name pos:line="5" pos:column="28">pid<pos:position pos:line="5" pos:column="31"/></name></name></expr></init></decl>;<pos:position pos:line="5" pos:column="32"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="6" pos:column="5">apr_pool_t<pos:position pos:line="6" pos:column="15"/></name> <modifier pos:line="6" pos:column="16">*<pos:position pos:line="6" pos:column="17"/></modifier></type><name pos:line="6" pos:column="17">tpool<pos:position pos:line="6" pos:column="22"/></name> <init pos:line="6" pos:column="23">= <expr><call><name pos:line="6" pos:column="25">apr_thread_pool_get<pos:position pos:line="6" pos:column="44"/></name><argument_list pos:line="6" pos:column="44">(<argument><expr><name pos:line="6" pos:column="45">thd<pos:position pos:line="6" pos:column="48"/></name></expr></argument>)<pos:position pos:line="6" pos:column="49"/></argument_list></call></expr></init></decl>;<pos:position pos:line="6" pos:column="50"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="7" pos:column="5">void<pos:position pos:line="7" pos:column="9"/></name> <modifier pos:line="7" pos:column="10">*<pos:position pos:line="7" pos:column="11"/></modifier></type><name pos:line="7" pos:column="11">csd<pos:position pos:line="7" pos:column="14"/></name> <init pos:line="7" pos:column="15">= <expr><name pos:line="7" pos:column="17">NULL<pos:position pos:line="7" pos:column="21"/></name></expr></init></decl>;<pos:position pos:line="7" pos:column="22"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="8" pos:column="5">apr_pool_t<pos:position pos:line="8" pos:column="15"/></name> <modifier pos:line="8" pos:column="16">*<pos:position pos:line="8" pos:column="17"/></modifier></type><name pos:line="8" pos:column="17">ptrans<pos:position pos:line="8" pos:column="23"/></name></decl>;<pos:position pos:line="8" pos:column="24"/></decl_stmt>         <comment type="block" pos:line="8" pos:column="33">/* Pool for per-transaction stuff */</comment>
    <decl_stmt><decl><type><name pos:line="9" pos:column="5">ap_listen_rec<pos:position pos:line="9" pos:column="18"/></name> <modifier pos:line="9" pos:column="19">*<pos:position pos:line="9" pos:column="20"/></modifier></type><name pos:line="9" pos:column="20">lr<pos:position pos:line="9" pos:column="22"/></name></decl>;<pos:position pos:line="9" pos:column="23"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="10" pos:column="5">int<pos:position pos:line="10" pos:column="8"/></name></type> <name pos:line="10" pos:column="9">have_idle_worker<pos:position pos:line="10" pos:column="25"/></name> <init pos:line="10" pos:column="26">= <expr><literal type="number" pos:line="10" pos:column="28">0<pos:position pos:line="10" pos:column="29"/></literal></expr></init></decl>;<pos:position pos:line="10" pos:column="30"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="11" pos:column="5">conn_state_t<pos:position pos:line="11" pos:column="17"/></name> <modifier pos:line="11" pos:column="18">*<pos:position pos:line="11" pos:column="19"/></modifier></type><name pos:line="11" pos:column="19">cs<pos:position pos:line="11" pos:column="21"/></name></decl>;<pos:position pos:line="11" pos:column="22"/></decl_stmt>
    <decl_stmt><decl><type><specifier pos:line="12" pos:column="5">const<pos:position pos:line="12" pos:column="10"/></specifier> <name pos:line="12" pos:column="11">apr_pollfd_t<pos:position pos:line="12" pos:column="23"/></name> <modifier pos:line="12" pos:column="24">*<pos:position pos:line="12" pos:column="25"/></modifier></type><name pos:line="12" pos:column="25">out_pfd<pos:position pos:line="12" pos:column="32"/></name></decl>;<pos:position pos:line="12" pos:column="33"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="13" pos:column="5">apr_int32_t<pos:position pos:line="13" pos:column="16"/></name></type> <name pos:line="13" pos:column="17">num<pos:position pos:line="13" pos:column="20"/></name> <init pos:line="13" pos:column="21">= <expr><literal type="number" pos:line="13" pos:column="23">0<pos:position pos:line="13" pos:column="24"/></literal></expr></init></decl>;<pos:position pos:line="13" pos:column="25"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="14" pos:column="5">apr_time_t<pos:position pos:line="14" pos:column="15"/></name></type> <name pos:line="14" pos:column="16">time_now<pos:position pos:line="14" pos:column="24"/></name> <init pos:line="14" pos:column="25">= <expr><literal type="number" pos:line="14" pos:column="27">0<pos:position pos:line="14" pos:column="28"/></literal></expr></init></decl>;<pos:position pos:line="14" pos:column="29"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="15" pos:column="5">apr_interval_time_t<pos:position pos:line="15" pos:column="24"/></name></type> <name pos:line="15" pos:column="25">timeout_interval<pos:position pos:line="15" pos:column="41"/></name></decl>;<pos:position pos:line="15" pos:column="42"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="16" pos:column="5">apr_time_t<pos:position pos:line="16" pos:column="15"/></name></type> <name pos:line="16" pos:column="16">timeout_time<pos:position pos:line="16" pos:column="28"/></name></decl>;<pos:position pos:line="16" pos:column="29"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="17" pos:column="5">listener_poll_type<pos:position pos:line="17" pos:column="23"/></name> <modifier pos:line="17" pos:column="24">*<pos:position pos:line="17" pos:column="25"/></modifier></type><name pos:line="17" pos:column="25">pt<pos:position pos:line="17" pos:column="27"/></name></decl>;<pos:position pos:line="17" pos:column="28"/></decl_stmt>

    <expr_stmt><expr><call><name pos:line="19" pos:column="5">free<pos:position pos:line="19" pos:column="9"/></name><argument_list pos:line="19" pos:column="9">(<argument><expr><name pos:line="19" pos:column="10">ti<pos:position pos:line="19" pos:column="12"/></name></expr></argument>)<pos:position pos:line="19" pos:column="13"/></argument_list></call></expr>;<pos:position pos:line="19" pos:column="14"/></expr_stmt>

    <comment type="block" pos:line="21" pos:column="5">/* We set this to force apr_pollset to wakeup if there hasn't been any IO
     * on any of its sockets.  This allows sockets to have been added
     * when no other keepalive operations where going on.
     *
     * current value is 1 second
     */</comment>
    <expr_stmt><expr><name pos:line="27" pos:column="5">timeout_interval<pos:position pos:line="27" pos:column="21"/></name> <operator pos:line="27" pos:column="22">=<pos:position pos:line="27" pos:column="23"/></operator> <literal type="number" pos:line="27" pos:column="24">1000000<pos:position pos:line="27" pos:column="31"/></literal></expr>;<pos:position pos:line="27" pos:column="32"/></expr_stmt>

    <comment type="block" pos:line="29" pos:column="5">/* the following times out events that are really close in the future
     *   to prevent extra poll calls
     *
     * current value is .1 second
     */</comment>
<cpp:define pos:line="34" pos:column="1">#<cpp:directive pos:line="34" pos:column="2">define<pos:position pos:line="34" pos:column="8"/></cpp:directive> <cpp:macro><name pos:line="34" pos:column="9">TIMEOUT_FUDGE_FACTOR<pos:position pos:line="34" pos:column="29"/></name></cpp:macro> <cpp:value pos:line="34" pos:column="30">100000<pos:position pos:line="34" pos:column="36"/></cpp:value></cpp:define>

    <comment type="block" pos:line="36" pos:column="5">/* POLLSET_SCALE_FACTOR * ap_threads_per_child sets the size of
     * the pollset.  I've seen 15 connections per active worker thread
     * running SPECweb99.
     *
     * However, with the newer apr_pollset, this is the number of sockets that
     * we will return to any *one* call to poll().  Therefore, there is no
     * reason to make it more than ap_threads_per_child.
     */</comment>
<cpp:define pos:line="44" pos:column="1">#<cpp:directive pos:line="44" pos:column="2">define<pos:position pos:line="44" pos:column="8"/></cpp:directive> <cpp:macro><name pos:line="44" pos:column="9">POLLSET_SCALE_FACTOR<pos:position pos:line="44" pos:column="29"/></name></cpp:macro> <cpp:value pos:line="44" pos:column="30">1<pos:position pos:line="44" pos:column="31"/></cpp:value></cpp:define>

    <expr_stmt><expr><name pos:line="46" pos:column="5">rc<pos:position pos:line="46" pos:column="7"/></name> <operator pos:line="46" pos:column="8">=<pos:position pos:line="46" pos:column="9"/></operator> <call><name pos:line="46" pos:column="10">apr_thread_mutex_create<pos:position pos:line="46" pos:column="33"/></name><argument_list pos:line="46" pos:column="33">(<argument><expr><operator pos:line="46" pos:column="34">&amp;<pos:position pos:line="46" pos:column="39"/></operator><name pos:line="46" pos:column="35">timeout_mutex<pos:position pos:line="46" pos:column="48"/></name></expr></argument>, <argument><expr><name pos:line="46" pos:column="50">APR_THREAD_MUTEX_DEFAULT<pos:position pos:line="46" pos:column="74"/></name></expr></argument>,
                                 <argument><expr><name pos:line="47" pos:column="34">tpool<pos:position pos:line="47" pos:column="39"/></name></expr></argument>)<pos:position pos:line="47" pos:column="40"/></argument_list></call></expr>;<pos:position pos:line="47" pos:column="41"/></expr_stmt>
    <if pos:line="48" pos:column="5">if <condition pos:line="48" pos:column="8">(<expr><name pos:line="48" pos:column="9">rc<pos:position pos:line="48" pos:column="11"/></name> <operator pos:line="48" pos:column="12">!=<pos:position pos:line="48" pos:column="14"/></operator> <name pos:line="48" pos:column="15">APR_SUCCESS<pos:position pos:line="48" pos:column="26"/></name></expr>)<pos:position pos:line="48" pos:column="27"/></condition><then pos:line="48" pos:column="27"> <block pos:line="48" pos:column="28">{
        <expr_stmt><expr><call><name pos:line="49" pos:column="9">ap_log_error<pos:position pos:line="49" pos:column="21"/></name><argument_list pos:line="49" pos:column="21">(<argument><expr><name pos:line="49" pos:column="22">APLOG_MARK<pos:position pos:line="49" pos:column="32"/></name></expr></argument>, <argument><expr><name pos:line="49" pos:column="34">APLOG_ERR<pos:position pos:line="49" pos:column="43"/></name></expr></argument>, <argument><expr><name pos:line="49" pos:column="45">rc<pos:position pos:line="49" pos:column="47"/></name></expr></argument>, <argument><expr><name pos:line="49" pos:column="49">ap_server_conf<pos:position pos:line="49" pos:column="63"/></name></expr></argument>,
                     <argument><expr><literal type="string" pos:line="50" pos:column="22">"creation of the timeout mutex failed.  Attempting to "<pos:position pos:line="50" pos:column="77"/></literal>
                     <literal type="string" pos:line="51" pos:column="22">"shutdown process gracefully"<pos:position pos:line="51" pos:column="51"/></literal></expr></argument>)<pos:position pos:line="51" pos:column="52"/></argument_list></call></expr>;<pos:position pos:line="51" pos:column="53"/></expr_stmt>
        <expr_stmt><expr><call><name pos:line="52" pos:column="9">signal_threads<pos:position pos:line="52" pos:column="23"/></name><argument_list pos:line="52" pos:column="23">(<argument><expr><name pos:line="52" pos:column="24">ST_GRACEFUL<pos:position pos:line="52" pos:column="35"/></name></expr></argument>)<pos:position pos:line="52" pos:column="36"/></argument_list></call></expr>;<pos:position pos:line="52" pos:column="37"/></expr_stmt>
        <return pos:line="53" pos:column="9">return <expr><name pos:line="53" pos:column="16">NULL<pos:position pos:line="53" pos:column="20"/></name></expr>;<pos:position pos:line="53" pos:column="21"/></return>
    }<pos:position pos:line="54" pos:column="6"/></block></then></if>

    <expr_stmt><expr><call><name pos:line="56" pos:column="5">APR_RING_INIT<pos:position pos:line="56" pos:column="18"/></name><argument_list pos:line="56" pos:column="18">(<argument><expr><operator pos:line="56" pos:column="19">&amp;<pos:position pos:line="56" pos:column="24"/></operator><name pos:line="56" pos:column="20">timeout_head<pos:position pos:line="56" pos:column="32"/></name></expr></argument>, <argument><expr><name pos:line="56" pos:column="34">conn_state_t<pos:position pos:line="56" pos:column="46"/></name></expr></argument>, <argument><expr><name pos:line="56" pos:column="48">timeout_list<pos:position pos:line="56" pos:column="60"/></name></expr></argument>)<pos:position pos:line="56" pos:column="61"/></argument_list></call></expr>;<pos:position pos:line="56" pos:column="62"/></expr_stmt>

    <comment type="block" pos:line="58" pos:column="5">/* Create the main pollset */</comment>
    <expr_stmt><expr><name pos:line="59" pos:column="5">rc<pos:position pos:line="59" pos:column="7"/></name> <operator pos:line="59" pos:column="8">=<pos:position pos:line="59" pos:column="9"/></operator> <call><name pos:line="59" pos:column="10">apr_pollset_create<pos:position pos:line="59" pos:column="28"/></name><argument_list pos:line="59" pos:column="28">(<argument><expr><operator pos:line="59" pos:column="29">&amp;<pos:position pos:line="59" pos:column="34"/></operator><name pos:line="59" pos:column="30">event_pollset<pos:position pos:line="59" pos:column="43"/></name></expr></argument>,
                            <argument><expr><name pos:line="60" pos:column="29">ap_threads_per_child<pos:position pos:line="60" pos:column="49"/></name> <operator pos:line="60" pos:column="50">*<pos:position pos:line="60" pos:column="51"/></operator> <name pos:line="60" pos:column="52">POLLSET_SCALE_FACTOR<pos:position pos:line="60" pos:column="72"/></name></expr></argument>,
                            <argument><expr><name pos:line="61" pos:column="29">tpool<pos:position pos:line="61" pos:column="34"/></name></expr></argument>, <argument><expr><name pos:line="61" pos:column="36">APR_POLLSET_THREADSAFE<pos:position pos:line="61" pos:column="58"/></name></expr></argument>)<pos:position pos:line="61" pos:column="59"/></argument_list></call></expr>;<pos:position pos:line="61" pos:column="60"/></expr_stmt>
    <if pos:line="62" pos:column="5">if <condition pos:line="62" pos:column="8">(<expr><name pos:line="62" pos:column="9">rc<pos:position pos:line="62" pos:column="11"/></name> <operator pos:line="62" pos:column="12">!=<pos:position pos:line="62" pos:column="14"/></operator> <name pos:line="62" pos:column="15">APR_SUCCESS<pos:position pos:line="62" pos:column="26"/></name></expr>)<pos:position pos:line="62" pos:column="27"/></condition><then pos:line="62" pos:column="27"> <block pos:line="62" pos:column="28">{
        <expr_stmt><expr><call><name pos:line="63" pos:column="9">ap_log_error<pos:position pos:line="63" pos:column="21"/></name><argument_list pos:line="63" pos:column="21">(<argument><expr><name pos:line="63" pos:column="22">APLOG_MARK<pos:position pos:line="63" pos:column="32"/></name></expr></argument>, <argument><expr><name pos:line="63" pos:column="34">APLOG_ERR<pos:position pos:line="63" pos:column="43"/></name></expr></argument>, <argument><expr><name pos:line="63" pos:column="45">rc<pos:position pos:line="63" pos:column="47"/></name></expr></argument>, <argument><expr><name pos:line="63" pos:column="49">ap_server_conf<pos:position pos:line="63" pos:column="63"/></name></expr></argument>,
                     <argument><expr><literal type="string" pos:line="64" pos:column="22">"apr_pollset_create with Thread Safety failed. "<pos:position pos:line="64" pos:column="70"/></literal>
                     <literal type="string" pos:line="65" pos:column="22">"Attempting to shutdown process gracefully"<pos:position pos:line="65" pos:column="65"/></literal></expr></argument>)<pos:position pos:line="65" pos:column="66"/></argument_list></call></expr>;<pos:position pos:line="65" pos:column="67"/></expr_stmt>
        <expr_stmt><expr><call><name pos:line="66" pos:column="9">signal_threads<pos:position pos:line="66" pos:column="23"/></name><argument_list pos:line="66" pos:column="23">(<argument><expr><name pos:line="66" pos:column="24">ST_GRACEFUL<pos:position pos:line="66" pos:column="35"/></name></expr></argument>)<pos:position pos:line="66" pos:column="36"/></argument_list></call></expr>;<pos:position pos:line="66" pos:column="37"/></expr_stmt>
        <return pos:line="67" pos:column="9">return <expr><name pos:line="67" pos:column="16">NULL<pos:position pos:line="67" pos:column="20"/></name></expr>;<pos:position pos:line="67" pos:column="21"/></return>
    }<pos:position pos:line="68" pos:column="6"/></block></then></if>

    <for pos:line="70" pos:column="5">for <control pos:line="70" pos:column="9">(<init><expr><name pos:line="70" pos:column="10">lr<pos:position pos:line="70" pos:column="12"/></name> <operator pos:line="70" pos:column="13">=<pos:position pos:line="70" pos:column="14"/></operator> <name pos:line="70" pos:column="15">ap_listeners<pos:position pos:line="70" pos:column="27"/></name></expr>;<pos:position pos:line="70" pos:column="28"/></init> <condition><expr><name pos:line="70" pos:column="29">lr<pos:position pos:line="70" pos:column="31"/></name> <operator pos:line="70" pos:column="32">!=<pos:position pos:line="70" pos:column="34"/></operator> <name pos:line="70" pos:column="35">NULL<pos:position pos:line="70" pos:column="39"/></name></expr>;<pos:position pos:line="70" pos:column="40"/></condition> <incr><expr><name pos:line="70" pos:column="41">lr<pos:position pos:line="70" pos:column="43"/></name> <operator pos:line="70" pos:column="44">=<pos:position pos:line="70" pos:column="45"/></operator> <name><name pos:line="70" pos:column="46">lr<pos:position pos:line="70" pos:column="48"/></name><operator pos:line="70" pos:column="48">-&gt;<pos:position pos:line="70" pos:column="53"/></operator><name pos:line="70" pos:column="50">next<pos:position pos:line="70" pos:column="54"/></name></name></expr></incr>)<pos:position pos:line="70" pos:column="55"/></control> <block pos:line="70" pos:column="56">{
        <decl_stmt><decl><type><name pos:line="71" pos:column="9">apr_pollfd_t<pos:position pos:line="71" pos:column="21"/></name></type> <name pos:line="71" pos:column="22">pfd<pos:position pos:line="71" pos:column="25"/></name> <init pos:line="71" pos:column="26">= <expr><block pos:line="71" pos:column="28">{ <expr><literal type="number" pos:line="71" pos:column="30">0<pos:position pos:line="71" pos:column="31"/></literal></expr> }<pos:position pos:line="71" pos:column="33"/></block></expr></init></decl>;<pos:position pos:line="71" pos:column="34"/></decl_stmt>
        <expr_stmt><expr><name pos:line="72" pos:column="9">pt<pos:position pos:line="72" pos:column="11"/></name> <operator pos:line="72" pos:column="12">=<pos:position pos:line="72" pos:column="13"/></operator> <call><name pos:line="72" pos:column="14">apr_pcalloc<pos:position pos:line="72" pos:column="25"/></name><argument_list pos:line="72" pos:column="25">(<argument><expr><name pos:line="72" pos:column="26">tpool<pos:position pos:line="72" pos:column="31"/></name></expr></argument>, <argument><expr><sizeof pos:line="72" pos:column="33">sizeof<argument_list pos:line="72" pos:column="39">(<argument><expr><operator pos:line="72" pos:column="40">*<pos:position pos:line="72" pos:column="41"/></operator><name pos:line="72" pos:column="41">pt<pos:position pos:line="72" pos:column="43"/></name></expr></argument>)<pos:position pos:line="72" pos:column="44"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="72" pos:column="45"/></argument_list></call></expr>;<pos:position pos:line="72" pos:column="46"/></expr_stmt>
        <expr_stmt><expr><name><name pos:line="73" pos:column="9">pfd<pos:position pos:line="73" pos:column="12"/></name><operator pos:line="73" pos:column="12">.<pos:position pos:line="73" pos:column="13"/></operator><name pos:line="73" pos:column="13">desc_type<pos:position pos:line="73" pos:column="22"/></name></name> <operator pos:line="73" pos:column="23">=<pos:position pos:line="73" pos:column="24"/></operator> <name pos:line="73" pos:column="25">APR_POLL_SOCKET<pos:position pos:line="73" pos:column="40"/></name></expr>;<pos:position pos:line="73" pos:column="41"/></expr_stmt>
        <expr_stmt><expr><name><name pos:line="74" pos:column="9">pfd<pos:position pos:line="74" pos:column="12"/></name><operator pos:line="74" pos:column="12">.<pos:position pos:line="74" pos:column="13"/></operator><name pos:line="74" pos:column="13">desc<pos:position pos:line="74" pos:column="17"/></name><operator pos:line="74" pos:column="17">.<pos:position pos:line="74" pos:column="18"/></operator><name pos:line="74" pos:column="18">s<pos:position pos:line="74" pos:column="19"/></name></name> <operator pos:line="74" pos:column="20">=<pos:position pos:line="74" pos:column="21"/></operator> <name><name pos:line="74" pos:column="22">lr<pos:position pos:line="74" pos:column="24"/></name><operator pos:line="74" pos:column="24">-&gt;<pos:position pos:line="74" pos:column="29"/></operator><name pos:line="74" pos:column="26">sd<pos:position pos:line="74" pos:column="28"/></name></name></expr>;<pos:position pos:line="74" pos:column="29"/></expr_stmt>
        <expr_stmt><expr><name><name pos:line="75" pos:column="9">pfd<pos:position pos:line="75" pos:column="12"/></name><operator pos:line="75" pos:column="12">.<pos:position pos:line="75" pos:column="13"/></operator><name pos:line="75" pos:column="13">reqevents<pos:position pos:line="75" pos:column="22"/></name></name> <operator pos:line="75" pos:column="23">=<pos:position pos:line="75" pos:column="24"/></operator> <name pos:line="75" pos:column="25">APR_POLLIN<pos:position pos:line="75" pos:column="35"/></name></expr>;<pos:position pos:line="75" pos:column="36"/></expr_stmt>

        <expr_stmt><expr><name><name pos:line="77" pos:column="9">pt<pos:position pos:line="77" pos:column="11"/></name><operator pos:line="77" pos:column="11">-&gt;<pos:position pos:line="77" pos:column="16"/></operator><name pos:line="77" pos:column="13">type<pos:position pos:line="77" pos:column="17"/></name></name> <operator pos:line="77" pos:column="18">=<pos:position pos:line="77" pos:column="19"/></operator> <name pos:line="77" pos:column="20">PT_ACCEPT<pos:position pos:line="77" pos:column="29"/></name></expr>;<pos:position pos:line="77" pos:column="30"/></expr_stmt>
        <expr_stmt><expr><name><name pos:line="78" pos:column="9">pt<pos:position pos:line="78" pos:column="11"/></name><operator pos:line="78" pos:column="11">-&gt;<pos:position pos:line="78" pos:column="16"/></operator><name pos:line="78" pos:column="13">baton<pos:position pos:line="78" pos:column="18"/></name></name> <operator pos:line="78" pos:column="19">=<pos:position pos:line="78" pos:column="20"/></operator> <name pos:line="78" pos:column="21">lr<pos:position pos:line="78" pos:column="23"/></name></expr>;<pos:position pos:line="78" pos:column="24"/></expr_stmt>

        <expr_stmt><expr><name><name pos:line="80" pos:column="9">pfd<pos:position pos:line="80" pos:column="12"/></name><operator pos:line="80" pos:column="12">.<pos:position pos:line="80" pos:column="13"/></operator><name pos:line="80" pos:column="13">client_data<pos:position pos:line="80" pos:column="24"/></name></name> <operator pos:line="80" pos:column="25">=<pos:position pos:line="80" pos:column="26"/></operator> <name pos:line="80" pos:column="27">pt<pos:position pos:line="80" pos:column="29"/></name></expr>;<pos:position pos:line="80" pos:column="30"/></expr_stmt>

        <expr_stmt><expr><call><name pos:line="82" pos:column="9">apr_socket_opt_set<pos:position pos:line="82" pos:column="27"/></name><argument_list pos:line="82" pos:column="27">(<argument><expr><name><name pos:line="82" pos:column="28">pfd<pos:position pos:line="82" pos:column="31"/></name><operator pos:line="82" pos:column="31">.<pos:position pos:line="82" pos:column="32"/></operator><name pos:line="82" pos:column="32">desc<pos:position pos:line="82" pos:column="36"/></name><operator pos:line="82" pos:column="36">.<pos:position pos:line="82" pos:column="37"/></operator><name pos:line="82" pos:column="37">s<pos:position pos:line="82" pos:column="38"/></name></name></expr></argument>, <argument><expr><name pos:line="82" pos:column="40">APR_SO_NONBLOCK<pos:position pos:line="82" pos:column="55"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="82" pos:column="57">1<pos:position pos:line="82" pos:column="58"/></literal></expr></argument>)<pos:position pos:line="82" pos:column="59"/></argument_list></call></expr>;<pos:position pos:line="82" pos:column="60"/></expr_stmt>
        <expr_stmt><expr><call><name pos:line="83" pos:column="9">apr_pollset_add<pos:position pos:line="83" pos:column="24"/></name><argument_list pos:line="83" pos:column="24">(<argument><expr><name pos:line="83" pos:column="25">event_pollset<pos:position pos:line="83" pos:column="38"/></name></expr></argument>, <argument><expr><operator pos:line="83" pos:column="40">&amp;<pos:position pos:line="83" pos:column="45"/></operator><name pos:line="83" pos:column="41">pfd<pos:position pos:line="83" pos:column="44"/></name></expr></argument>)<pos:position pos:line="83" pos:column="45"/></argument_list></call></expr>;<pos:position pos:line="83" pos:column="46"/></expr_stmt>
    }<pos:position pos:line="84" pos:column="6"/></block></for>

    <comment type="block" pos:line="86" pos:column="5">/* Unblock the signal used to wake this thread up, and set a handler for
     * it.
     */</comment>
    <expr_stmt><expr><call><name pos:line="89" pos:column="5">unblock_signal<pos:position pos:line="89" pos:column="19"/></name><argument_list pos:line="89" pos:column="19">(<argument><expr><name pos:line="89" pos:column="20">LISTENER_SIGNAL<pos:position pos:line="89" pos:column="35"/></name></expr></argument>)<pos:position pos:line="89" pos:column="36"/></argument_list></call></expr>;<pos:position pos:line="89" pos:column="37"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="90" pos:column="5">apr_signal<pos:position pos:line="90" pos:column="15"/></name><argument_list pos:line="90" pos:column="15">(<argument><expr><name pos:line="90" pos:column="16">LISTENER_SIGNAL<pos:position pos:line="90" pos:column="31"/></name></expr></argument>, <argument><expr><name pos:line="90" pos:column="33">dummy_signal_handler<pos:position pos:line="90" pos:column="53"/></name></expr></argument>)<pos:position pos:line="90" pos:column="54"/></argument_list></call></expr>;<pos:position pos:line="90" pos:column="55"/></expr_stmt>

    <while pos:line="92" pos:column="5">while <condition pos:line="92" pos:column="11">(<expr><operator pos:line="92" pos:column="12">!<pos:position pos:line="92" pos:column="13"/></operator><name pos:line="92" pos:column="13">listener_may_exit<pos:position pos:line="92" pos:column="30"/></name></expr>)<pos:position pos:line="92" pos:column="31"/></condition> <block pos:line="92" pos:column="32">{

        <if pos:line="94" pos:column="9">if <condition pos:line="94" pos:column="12">(<expr><name pos:line="94" pos:column="13">requests_this_child<pos:position pos:line="94" pos:column="32"/></name> <operator pos:line="94" pos:column="33">&lt;=<pos:position pos:line="94" pos:column="38"/></operator> <literal type="number" pos:line="94" pos:column="36">0<pos:position pos:line="94" pos:column="37"/></literal></expr>)<pos:position pos:line="94" pos:column="38"/></condition><then pos:line="94" pos:column="38"> <block pos:line="94" pos:column="39">{
            <expr_stmt><expr><call><name pos:line="95" pos:column="13">check_infinite_requests<pos:position pos:line="95" pos:column="36"/></name><argument_list pos:line="95" pos:column="36">()<pos:position pos:line="95" pos:column="38"/></argument_list></call></expr>;<pos:position pos:line="95" pos:column="39"/></expr_stmt>
        }<pos:position pos:line="96" pos:column="10"/></block></then></if>

        <expr_stmt><expr><name pos:line="98" pos:column="9">rc<pos:position pos:line="98" pos:column="11"/></name> <operator pos:line="98" pos:column="12">=<pos:position pos:line="98" pos:column="13"/></operator> <call><name pos:line="98" pos:column="14">apr_pollset_poll<pos:position pos:line="98" pos:column="30"/></name><argument_list pos:line="98" pos:column="30">(<argument><expr><name pos:line="98" pos:column="31">event_pollset<pos:position pos:line="98" pos:column="44"/></name></expr></argument>, <argument><expr><name pos:line="98" pos:column="46">timeout_interval<pos:position pos:line="98" pos:column="62"/></name></expr></argument>, <argument><expr><operator pos:line="98" pos:column="64">&amp;<pos:position pos:line="98" pos:column="69"/></operator><name pos:line="98" pos:column="65">num<pos:position pos:line="98" pos:column="68"/></name></expr></argument>,
                              <argument><expr><operator pos:line="99" pos:column="31">&amp;<pos:position pos:line="99" pos:column="36"/></operator><name pos:line="99" pos:column="32">out_pfd<pos:position pos:line="99" pos:column="39"/></name></expr></argument>)<pos:position pos:line="99" pos:column="40"/></argument_list></call></expr>;<pos:position pos:line="99" pos:column="41"/></expr_stmt>

        <if pos:line="101" pos:column="9">if <condition pos:line="101" pos:column="12">(<expr><name pos:line="101" pos:column="13">rc<pos:position pos:line="101" pos:column="15"/></name> <operator pos:line="101" pos:column="16">!=<pos:position pos:line="101" pos:column="18"/></operator> <name pos:line="101" pos:column="19">APR_SUCCESS<pos:position pos:line="101" pos:column="30"/></name></expr>)<pos:position pos:line="101" pos:column="31"/></condition><then pos:line="101" pos:column="31"> <block pos:line="101" pos:column="32">{
            <if pos:line="102" pos:column="13">if <condition pos:line="102" pos:column="16">(<expr><call><name pos:line="102" pos:column="17">APR_STATUS_IS_EINTR<pos:position pos:line="102" pos:column="36"/></name><argument_list pos:line="102" pos:column="36">(<argument><expr><name pos:line="102" pos:column="37">rc<pos:position pos:line="102" pos:column="39"/></name></expr></argument>)<pos:position pos:line="102" pos:column="40"/></argument_list></call></expr>)<pos:position pos:line="102" pos:column="41"/></condition><then pos:line="102" pos:column="41"> <block pos:line="102" pos:column="42">{
                <continue pos:line="103" pos:column="17">continue;<pos:position pos:line="103" pos:column="26"/></continue>
            }<pos:position pos:line="104" pos:column="14"/></block></then></if>
            <if pos:line="105" pos:column="13">if <condition pos:line="105" pos:column="16">(<expr><operator pos:line="105" pos:column="17">!<pos:position pos:line="105" pos:column="18"/></operator><call><name pos:line="105" pos:column="18">APR_STATUS_IS_TIMEUP<pos:position pos:line="105" pos:column="38"/></name><argument_list pos:line="105" pos:column="38">(<argument><expr><name pos:line="105" pos:column="39">rc<pos:position pos:line="105" pos:column="41"/></name></expr></argument>)<pos:position pos:line="105" pos:column="42"/></argument_list></call></expr>)<pos:position pos:line="105" pos:column="43"/></condition><then pos:line="105" pos:column="43"> <block pos:line="105" pos:column="44">{
                <expr_stmt><expr><call><name pos:line="106" pos:column="17">ap_log_error<pos:position pos:line="106" pos:column="29"/></name><argument_list pos:line="106" pos:column="29">(<argument><expr><name pos:line="106" pos:column="30">APLOG_MARK<pos:position pos:line="106" pos:column="40"/></name></expr></argument>, <argument><expr><name pos:line="106" pos:column="42">APLOG_ERR<pos:position pos:line="106" pos:column="51"/></name></expr></argument>, <argument><expr><name pos:line="106" pos:column="53">rc<pos:position pos:line="106" pos:column="55"/></name></expr></argument>, <argument><expr><name pos:line="106" pos:column="57">ap_server_conf<pos:position pos:line="106" pos:column="71"/></name></expr></argument>,
                             <argument><expr><literal type="string" pos:line="107" pos:column="30">"apr_pollset_poll failed.  Attempting to "<pos:position pos:line="107" pos:column="72"/></literal>
                             <literal type="string" pos:line="108" pos:column="30">"shutdown process gracefully"<pos:position pos:line="108" pos:column="59"/></literal></expr></argument>)<pos:position pos:line="108" pos:column="60"/></argument_list></call></expr>;<pos:position pos:line="108" pos:column="61"/></expr_stmt>
                <expr_stmt><expr><call><name pos:line="109" pos:column="17">signal_threads<pos:position pos:line="109" pos:column="31"/></name><argument_list pos:line="109" pos:column="31">(<argument><expr><name pos:line="109" pos:column="32">ST_GRACEFUL<pos:position pos:line="109" pos:column="43"/></name></expr></argument>)<pos:position pos:line="109" pos:column="44"/></argument_list></call></expr>;<pos:position pos:line="109" pos:column="45"/></expr_stmt>
            }<pos:position pos:line="110" pos:column="14"/></block></then></if>
        }<pos:position pos:line="111" pos:column="10"/></block></then></if>

        <if pos:line="113" pos:column="9">if <condition pos:line="113" pos:column="12">(<expr><name pos:line="113" pos:column="13">listener_may_exit<pos:position pos:line="113" pos:column="30"/></name></expr>)<pos:position pos:line="113" pos:column="31"/></condition><then pos:line="113" pos:column="31">
            <block type="pseudo"><break pos:line="114" pos:column="13">break;<pos:position pos:line="114" pos:column="19"/></break></block></then></if>

        <while pos:line="116" pos:column="9">while <condition pos:line="116" pos:column="15">(<expr><name pos:line="116" pos:column="16">num<pos:position pos:line="116" pos:column="19"/></name> <operator pos:line="116" pos:column="20">&amp;&amp;<pos:position pos:line="116" pos:column="30"/></operator> <call><name pos:line="116" pos:column="23">get_worker<pos:position pos:line="116" pos:column="33"/></name><argument_list pos:line="116" pos:column="33">(<argument><expr><operator pos:line="116" pos:column="34">&amp;<pos:position pos:line="116" pos:column="39"/></operator><name pos:line="116" pos:column="35">have_idle_worker<pos:position pos:line="116" pos:column="51"/></name></expr></argument>)<pos:position pos:line="116" pos:column="52"/></argument_list></call></expr>)<pos:position pos:line="116" pos:column="53"/></condition> <block pos:line="116" pos:column="54">{
            <expr_stmt><expr><name pos:line="117" pos:column="13">pt<pos:position pos:line="117" pos:column="15"/></name> <operator pos:line="117" pos:column="16">=<pos:position pos:line="117" pos:column="17"/></operator> <operator pos:line="117" pos:column="18">(<pos:position pos:line="117" pos:column="19"/></operator><name pos:line="117" pos:column="19">listener_poll_type<pos:position pos:line="117" pos:column="37"/></name> <operator pos:line="117" pos:column="38">*<pos:position pos:line="117" pos:column="39"/></operator><operator pos:line="117" pos:column="39">)<pos:position pos:line="117" pos:column="40"/></operator> <name><name pos:line="117" pos:column="41">out_pfd<pos:position pos:line="117" pos:column="48"/></name><operator pos:line="117" pos:column="48">-&gt;<pos:position pos:line="117" pos:column="53"/></operator><name pos:line="117" pos:column="50">client_data<pos:position pos:line="117" pos:column="61"/></name></name></expr>;<pos:position pos:line="117" pos:column="62"/></expr_stmt>
            <if pos:line="118" pos:column="13">if <condition pos:line="118" pos:column="16">(<expr><name><name pos:line="118" pos:column="17">pt<pos:position pos:line="118" pos:column="19"/></name><operator pos:line="118" pos:column="19">-&gt;<pos:position pos:line="118" pos:column="24"/></operator><name pos:line="118" pos:column="21">type<pos:position pos:line="118" pos:column="25"/></name></name> <operator pos:line="118" pos:column="26">==<pos:position pos:line="118" pos:column="28"/></operator> <name pos:line="118" pos:column="29">PT_CSD<pos:position pos:line="118" pos:column="35"/></name></expr>)<pos:position pos:line="118" pos:column="36"/></condition><then pos:line="118" pos:column="36"> <block pos:line="118" pos:column="37">{
                <comment type="block" pos:line="119" pos:column="17">/* one of the sockets is readable */</comment>
                <expr_stmt><expr><name pos:line="120" pos:column="17">cs<pos:position pos:line="120" pos:column="19"/></name> <operator pos:line="120" pos:column="20">=<pos:position pos:line="120" pos:column="21"/></operator> <operator pos:line="120" pos:column="22">(<pos:position pos:line="120" pos:column="23"/></operator><name pos:line="120" pos:column="23">conn_state_t<pos:position pos:line="120" pos:column="35"/></name> <operator pos:line="120" pos:column="36">*<pos:position pos:line="120" pos:column="37"/></operator><operator pos:line="120" pos:column="37">)<pos:position pos:line="120" pos:column="38"/></operator> <name><name pos:line="120" pos:column="39">pt<pos:position pos:line="120" pos:column="41"/></name><operator pos:line="120" pos:column="41">-&gt;<pos:position pos:line="120" pos:column="46"/></operator><name pos:line="120" pos:column="43">baton<pos:position pos:line="120" pos:column="48"/></name></name></expr>;<pos:position pos:line="120" pos:column="49"/></expr_stmt>
                <switch pos:line="121" pos:column="17">switch <condition pos:line="121" pos:column="24">(<expr><name><name pos:line="121" pos:column="25">cs<pos:position pos:line="121" pos:column="27"/></name><operator pos:line="121" pos:column="27">-&gt;<pos:position pos:line="121" pos:column="32"/></operator><name pos:line="121" pos:column="29">state<pos:position pos:line="121" pos:column="34"/></name></name></expr>)<pos:position pos:line="121" pos:column="35"/></condition> <block pos:line="121" pos:column="36">{
                <case pos:line="122" pos:column="17">case <expr><name pos:line="122" pos:column="22">CONN_STATE_CHECK_REQUEST_LINE_READABLE<pos:position pos:line="122" pos:column="60"/></name></expr>:<pos:position pos:line="122" pos:column="61"/></case>
                    <expr_stmt><expr><name><name pos:line="123" pos:column="21">cs<pos:position pos:line="123" pos:column="23"/></name><operator pos:line="123" pos:column="23">-&gt;<pos:position pos:line="123" pos:column="28"/></operator><name pos:line="123" pos:column="25">state<pos:position pos:line="123" pos:column="30"/></name></name> <operator pos:line="123" pos:column="31">=<pos:position pos:line="123" pos:column="32"/></operator> <name pos:line="123" pos:column="33">CONN_STATE_READ_REQUEST_LINE<pos:position pos:line="123" pos:column="61"/></name></expr>;<pos:position pos:line="123" pos:column="62"/></expr_stmt>
                    <break pos:line="124" pos:column="21">break;<pos:position pos:line="124" pos:column="27"/></break>
                <default pos:line="125" pos:column="17">default:<pos:position pos:line="125" pos:column="25"/></default>
                    <expr_stmt><expr><call><name pos:line="126" pos:column="21">ap_log_error<pos:position pos:line="126" pos:column="33"/></name><argument_list pos:line="126" pos:column="33">(<argument><expr><name pos:line="126" pos:column="34">APLOG_MARK<pos:position pos:line="126" pos:column="44"/></name></expr></argument>, <argument><expr><name pos:line="126" pos:column="46">APLOG_ERR<pos:position pos:line="126" pos:column="55"/></name></expr></argument>, <argument><expr><name pos:line="126" pos:column="57">rc<pos:position pos:line="126" pos:column="59"/></name></expr></argument>,
                                 <argument><expr><name pos:line="127" pos:column="34">ap_server_conf<pos:position pos:line="127" pos:column="48"/></name></expr></argument>,
                                 <argument><expr><literal type="string" pos:line="128" pos:column="34">"event_loop: unexpected state %d"<pos:position pos:line="128" pos:column="67"/></literal></expr></argument>,
                                 <argument><expr><name><name pos:line="129" pos:column="34">cs<pos:position pos:line="129" pos:column="36"/></name><operator pos:line="129" pos:column="36">-&gt;<pos:position pos:line="129" pos:column="41"/></operator><name pos:line="129" pos:column="38">state<pos:position pos:line="129" pos:column="43"/></name></name></expr></argument>)<pos:position pos:line="129" pos:column="44"/></argument_list></call></expr>;<pos:position pos:line="129" pos:column="45"/></expr_stmt>
                    <expr_stmt><expr><call><name pos:line="130" pos:column="21">AP_DEBUG_ASSERT<pos:position pos:line="130" pos:column="36"/></name><argument_list pos:line="130" pos:column="36">(<argument><expr><literal type="number" pos:line="130" pos:column="37">0<pos:position pos:line="130" pos:column="38"/></literal></expr></argument>)<pos:position pos:line="130" pos:column="39"/></argument_list></call></expr>;<pos:position pos:line="130" pos:column="40"/></expr_stmt>
                }<pos:position pos:line="131" pos:column="18"/></block></switch>

                <expr_stmt><expr><call><name pos:line="133" pos:column="17">apr_thread_mutex_lock<pos:position pos:line="133" pos:column="38"/></name><argument_list pos:line="133" pos:column="38">(<argument><expr><name pos:line="133" pos:column="39">timeout_mutex<pos:position pos:line="133" pos:column="52"/></name></expr></argument>)<pos:position pos:line="133" pos:column="53"/></argument_list></call></expr>;<pos:position pos:line="133" pos:column="54"/></expr_stmt>
                <expr_stmt><expr><call><name pos:line="134" pos:column="17">APR_RING_REMOVE<pos:position pos:line="134" pos:column="32"/></name><argument_list pos:line="134" pos:column="32">(<argument><expr><name pos:line="134" pos:column="33">cs<pos:position pos:line="134" pos:column="35"/></name></expr></argument>, <argument><expr><name pos:line="134" pos:column="37">timeout_list<pos:position pos:line="134" pos:column="49"/></name></expr></argument>)<pos:position pos:line="134" pos:column="50"/></argument_list></call></expr>;<pos:position pos:line="134" pos:column="51"/></expr_stmt>
                <expr_stmt><expr><call><name pos:line="135" pos:column="17">apr_thread_mutex_unlock<pos:position pos:line="135" pos:column="40"/></name><argument_list pos:line="135" pos:column="40">(<argument><expr><name pos:line="135" pos:column="41">timeout_mutex<pos:position pos:line="135" pos:column="54"/></name></expr></argument>)<pos:position pos:line="135" pos:column="55"/></argument_list></call></expr>;<pos:position pos:line="135" pos:column="56"/></expr_stmt>

                <expr_stmt><expr><name pos:line="137" pos:column="17">rc<pos:position pos:line="137" pos:column="19"/></name> <operator pos:line="137" pos:column="20">=<pos:position pos:line="137" pos:column="21"/></operator> <call><name pos:line="137" pos:column="22">push2worker<pos:position pos:line="137" pos:column="33"/></name><argument_list pos:line="137" pos:column="33">(<argument><expr><name pos:line="137" pos:column="34">out_pfd<pos:position pos:line="137" pos:column="41"/></name></expr></argument>, <argument><expr><name pos:line="137" pos:column="43">event_pollset<pos:position pos:line="137" pos:column="56"/></name></expr></argument>)<pos:position pos:line="137" pos:column="57"/></argument_list></call></expr>;<pos:position pos:line="137" pos:column="58"/></expr_stmt>
                <if pos:line="138" pos:column="17">if <condition pos:line="138" pos:column="20">(<expr><name pos:line="138" pos:column="21">rc<pos:position pos:line="138" pos:column="23"/></name> <operator pos:line="138" pos:column="24">!=<pos:position pos:line="138" pos:column="26"/></operator> <name pos:line="138" pos:column="27">APR_SUCCESS<pos:position pos:line="138" pos:column="38"/></name></expr>)<pos:position pos:line="138" pos:column="39"/></condition><then pos:line="138" pos:column="39"> <block pos:line="138" pos:column="40">{
                    <expr_stmt><expr><call><name pos:line="139" pos:column="21">ap_log_error<pos:position pos:line="139" pos:column="33"/></name><argument_list pos:line="139" pos:column="33">(<argument><expr><name pos:line="139" pos:column="34">APLOG_MARK<pos:position pos:line="139" pos:column="44"/></name></expr></argument>, <argument><expr><name pos:line="139" pos:column="46">APLOG_CRIT<pos:position pos:line="139" pos:column="56"/></name></expr></argument>, <argument><expr><name pos:line="139" pos:column="58">rc<pos:position pos:line="139" pos:column="60"/></name></expr></argument>,
                                 <argument><expr><name pos:line="140" pos:column="34">ap_server_conf<pos:position pos:line="140" pos:column="48"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="140" pos:column="50">"push2worker failed"<pos:position pos:line="140" pos:column="70"/></literal></expr></argument>)<pos:position pos:line="140" pos:column="71"/></argument_list></call></expr>;<pos:position pos:line="140" pos:column="72"/></expr_stmt>
                }<pos:position pos:line="141" pos:column="18"/></block></then>
                <else pos:line="142" pos:column="17">else <block pos:line="142" pos:column="22">{
                    <expr_stmt><expr><name pos:line="143" pos:column="21">have_idle_worker<pos:position pos:line="143" pos:column="37"/></name> <operator pos:line="143" pos:column="38">=<pos:position pos:line="143" pos:column="39"/></operator> <literal type="number" pos:line="143" pos:column="40">0<pos:position pos:line="143" pos:column="41"/></literal></expr>;<pos:position pos:line="143" pos:column="42"/></expr_stmt>
                }<pos:position pos:line="144" pos:column="18"/></block></else></if>
            }<pos:position pos:line="145" pos:column="14"/></block></then>
            <else pos:line="146" pos:column="13">else <block pos:line="146" pos:column="18">{
                <comment type="block" pos:line="147" pos:column="17">/* A Listener Socket is ready for an accept() */</comment>
                <decl_stmt><decl><type><name pos:line="148" pos:column="17">apr_pool_t<pos:position pos:line="148" pos:column="27"/></name> <modifier pos:line="148" pos:column="28">*<pos:position pos:line="148" pos:column="29"/></modifier></type><name pos:line="148" pos:column="29">recycled_pool<pos:position pos:line="148" pos:column="42"/></name> <init pos:line="148" pos:column="43">= <expr><name pos:line="148" pos:column="45">NULL<pos:position pos:line="148" pos:column="49"/></name></expr></init></decl>;<pos:position pos:line="148" pos:column="50"/></decl_stmt>

                <expr_stmt><expr><name pos:line="150" pos:column="17">lr<pos:position pos:line="150" pos:column="19"/></name> <operator pos:line="150" pos:column="20">=<pos:position pos:line="150" pos:column="21"/></operator> <operator pos:line="150" pos:column="22">(<pos:position pos:line="150" pos:column="23"/></operator><name pos:line="150" pos:column="23">ap_listen_rec<pos:position pos:line="150" pos:column="36"/></name> <operator pos:line="150" pos:column="37">*<pos:position pos:line="150" pos:column="38"/></operator><operator pos:line="150" pos:column="38">)<pos:position pos:line="150" pos:column="39"/></operator> <name><name pos:line="150" pos:column="40">pt<pos:position pos:line="150" pos:column="42"/></name><operator pos:line="150" pos:column="42">-&gt;<pos:position pos:line="150" pos:column="47"/></operator><name pos:line="150" pos:column="44">baton<pos:position pos:line="150" pos:column="49"/></name></name></expr>;<pos:position pos:line="150" pos:column="50"/></expr_stmt>

                <expr_stmt><expr><call><name pos:line="152" pos:column="17">ap_pop_pool<pos:position pos:line="152" pos:column="28"/></name><argument_list pos:line="152" pos:column="28">(<argument><expr><operator pos:line="152" pos:column="29">&amp;<pos:position pos:line="152" pos:column="34"/></operator><name pos:line="152" pos:column="30">recycled_pool<pos:position pos:line="152" pos:column="43"/></name></expr></argument>, <argument><expr><name pos:line="152" pos:column="45">worker_queue_info<pos:position pos:line="152" pos:column="62"/></name></expr></argument>)<pos:position pos:line="152" pos:column="63"/></argument_list></call></expr>;<pos:position pos:line="152" pos:column="64"/></expr_stmt>

                <if pos:line="154" pos:column="17">if <condition pos:line="154" pos:column="20">(<expr><name pos:line="154" pos:column="21">recycled_pool<pos:position pos:line="154" pos:column="34"/></name> <operator pos:line="154" pos:column="35">==<pos:position pos:line="154" pos:column="37"/></operator> <name pos:line="154" pos:column="38">NULL<pos:position pos:line="154" pos:column="42"/></name></expr>)<pos:position pos:line="154" pos:column="43"/></condition><then pos:line="154" pos:column="43"> <block pos:line="154" pos:column="44">{
                    <comment type="block" pos:line="155" pos:column="21">/* create a new transaction pool for each accepted socket */</comment>
                    <decl_stmt><decl><type><name pos:line="156" pos:column="21">apr_allocator_t<pos:position pos:line="156" pos:column="36"/></name> <modifier pos:line="156" pos:column="37">*<pos:position pos:line="156" pos:column="38"/></modifier></type><name pos:line="156" pos:column="38">allocator<pos:position pos:line="156" pos:column="47"/></name></decl>;<pos:position pos:line="156" pos:column="48"/></decl_stmt>

                    <expr_stmt><expr><call><name pos:line="158" pos:column="21">apr_allocator_create<pos:position pos:line="158" pos:column="41"/></name><argument_list pos:line="158" pos:column="41">(<argument><expr><operator pos:line="158" pos:column="42">&amp;<pos:position pos:line="158" pos:column="47"/></operator><name pos:line="158" pos:column="43">allocator<pos:position pos:line="158" pos:column="52"/></name></expr></argument>)<pos:position pos:line="158" pos:column="53"/></argument_list></call></expr>;<pos:position pos:line="158" pos:column="54"/></expr_stmt>
                    <expr_stmt><expr><call><name pos:line="159" pos:column="21">apr_allocator_max_free_set<pos:position pos:line="159" pos:column="47"/></name><argument_list pos:line="159" pos:column="47">(<argument><expr><name pos:line="159" pos:column="48">allocator<pos:position pos:line="159" pos:column="57"/></name></expr></argument>,
                                               <argument><expr><name pos:line="160" pos:column="48">ap_max_mem_free<pos:position pos:line="160" pos:column="63"/></name></expr></argument>)<pos:position pos:line="160" pos:column="64"/></argument_list></call></expr>;<pos:position pos:line="160" pos:column="65"/></expr_stmt>
                    <expr_stmt><expr><call><name pos:line="161" pos:column="21">apr_pool_create_ex<pos:position pos:line="161" pos:column="39"/></name><argument_list pos:line="161" pos:column="39">(<argument><expr><operator pos:line="161" pos:column="40">&amp;<pos:position pos:line="161" pos:column="45"/></operator><name pos:line="161" pos:column="41">ptrans<pos:position pos:line="161" pos:column="47"/></name></expr></argument>, <argument><expr><name pos:line="161" pos:column="49">pconf<pos:position pos:line="161" pos:column="54"/></name></expr></argument>, <argument><expr><name pos:line="161" pos:column="56">NULL<pos:position pos:line="161" pos:column="60"/></name></expr></argument>, <argument><expr><name pos:line="161" pos:column="62">allocator<pos:position pos:line="161" pos:column="71"/></name></expr></argument>)<pos:position pos:line="161" pos:column="72"/></argument_list></call></expr>;<pos:position pos:line="161" pos:column="73"/></expr_stmt>
                    <expr_stmt><expr><call><name pos:line="162" pos:column="21">apr_allocator_owner_set<pos:position pos:line="162" pos:column="44"/></name><argument_list pos:line="162" pos:column="44">(<argument><expr><name pos:line="162" pos:column="45">allocator<pos:position pos:line="162" pos:column="54"/></name></expr></argument>, <argument><expr><name pos:line="162" pos:column="56">ptrans<pos:position pos:line="162" pos:column="62"/></name></expr></argument>)<pos:position pos:line="162" pos:column="63"/></argument_list></call></expr>;<pos:position pos:line="162" pos:column="64"/></expr_stmt>
                    <if pos:line="163" pos:column="21">if <condition pos:line="163" pos:column="24">(<expr><name pos:line="163" pos:column="25">ptrans<pos:position pos:line="163" pos:column="31"/></name> <operator pos:line="163" pos:column="32">==<pos:position pos:line="163" pos:column="34"/></operator> <name pos:line="163" pos:column="35">NULL<pos:position pos:line="163" pos:column="39"/></name></expr>)<pos:position pos:line="163" pos:column="40"/></condition><then pos:line="163" pos:column="40"> <block pos:line="163" pos:column="41">{
                        <expr_stmt><expr><call><name pos:line="164" pos:column="25">ap_log_error<pos:position pos:line="164" pos:column="37"/></name><argument_list pos:line="164" pos:column="37">(<argument><expr><name pos:line="164" pos:column="38">APLOG_MARK<pos:position pos:line="164" pos:column="48"/></name></expr></argument>, <argument><expr><name pos:line="164" pos:column="50">APLOG_CRIT<pos:position pos:line="164" pos:column="60"/></name></expr></argument>, <argument><expr><name pos:line="164" pos:column="62">rc<pos:position pos:line="164" pos:column="64"/></name></expr></argument>,
                                     <argument><expr><name pos:line="165" pos:column="38">ap_server_conf<pos:position pos:line="165" pos:column="52"/></name></expr></argument>,
                                     <argument><expr><literal type="string" pos:line="166" pos:column="38">"Failed to create transaction pool"<pos:position pos:line="166" pos:column="73"/></literal></expr></argument>)<pos:position pos:line="166" pos:column="74"/></argument_list></call></expr>;<pos:position pos:line="166" pos:column="75"/></expr_stmt>
                        <expr_stmt><expr><call><name pos:line="167" pos:column="25">signal_threads<pos:position pos:line="167" pos:column="39"/></name><argument_list pos:line="167" pos:column="39">(<argument><expr><name pos:line="167" pos:column="40">ST_GRACEFUL<pos:position pos:line="167" pos:column="51"/></name></expr></argument>)<pos:position pos:line="167" pos:column="52"/></argument_list></call></expr>;<pos:position pos:line="167" pos:column="53"/></expr_stmt>
                        <return pos:line="168" pos:column="25">return <expr><name pos:line="168" pos:column="32">NULL<pos:position pos:line="168" pos:column="36"/></name></expr>;<pos:position pos:line="168" pos:column="37"/></return>
                    }<pos:position pos:line="169" pos:column="22"/></block></then></if>
                }<pos:position pos:line="170" pos:column="18"/></block></then>
                <else pos:line="171" pos:column="17">else <block pos:line="171" pos:column="22">{
                    <expr_stmt><expr><name pos:line="172" pos:column="21">ptrans<pos:position pos:line="172" pos:column="27"/></name> <operator pos:line="172" pos:column="28">=<pos:position pos:line="172" pos:column="29"/></operator> <name pos:line="172" pos:column="30">recycled_pool<pos:position pos:line="172" pos:column="43"/></name></expr>;<pos:position pos:line="172" pos:column="44"/></expr_stmt>
                }<pos:position pos:line="173" pos:column="18"/></block></else></if>

                <expr_stmt><expr><call><name pos:line="175" pos:column="17">apr_pool_tag<pos:position pos:line="175" pos:column="29"/></name><argument_list pos:line="175" pos:column="29">(<argument><expr><name pos:line="175" pos:column="30">ptrans<pos:position pos:line="175" pos:column="36"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="175" pos:column="38">"transaction"<pos:position pos:line="175" pos:column="51"/></literal></expr></argument>)<pos:position pos:line="175" pos:column="52"/></argument_list></call></expr>;<pos:position pos:line="175" pos:column="53"/></expr_stmt>

                <expr_stmt><expr><name pos:line="177" pos:column="17">rc<pos:position pos:line="177" pos:column="19"/></name> <operator pos:line="177" pos:column="20">=<pos:position pos:line="177" pos:column="21"/></operator> <call><name><name pos:line="177" pos:column="22">lr<pos:position pos:line="177" pos:column="24"/></name><operator pos:line="177" pos:column="24">-&gt;<pos:position pos:line="177" pos:column="29"/></operator><name pos:line="177" pos:column="26">accept_func<pos:position pos:line="177" pos:column="37"/></name></name><argument_list pos:line="177" pos:column="37">(<argument><expr><operator pos:line="177" pos:column="38">&amp;<pos:position pos:line="177" pos:column="43"/></operator><name pos:line="177" pos:column="39">csd<pos:position pos:line="177" pos:column="42"/></name></expr></argument>, <argument><expr><name pos:line="177" pos:column="44">lr<pos:position pos:line="177" pos:column="46"/></name></expr></argument>, <argument><expr><name pos:line="177" pos:column="48">ptrans<pos:position pos:line="177" pos:column="54"/></name></expr></argument>)<pos:position pos:line="177" pos:column="55"/></argument_list></call></expr>;<pos:position pos:line="177" pos:column="56"/></expr_stmt>

                <comment type="block" pos:line="179" pos:column="17">/* later we trash rv and rely on csd to indicate
                 * success/failure
                 */</comment>
                <expr_stmt><expr><call><name pos:line="182" pos:column="17">AP_DEBUG_ASSERT<pos:position pos:line="182" pos:column="32"/></name><argument_list pos:line="182" pos:column="32">(<argument><expr><name pos:line="182" pos:column="33">rc<pos:position pos:line="182" pos:column="35"/></name> <operator pos:line="182" pos:column="36">==<pos:position pos:line="182" pos:column="38"/></operator> <name pos:line="182" pos:column="39">APR_SUCCESS<pos:position pos:line="182" pos:column="50"/></name> <operator pos:line="182" pos:column="51">||<pos:position pos:line="182" pos:column="53"/></operator> <operator pos:line="182" pos:column="54">!<pos:position pos:line="182" pos:column="55"/></operator><name pos:line="182" pos:column="55">csd<pos:position pos:line="182" pos:column="58"/></name></expr></argument>)<pos:position pos:line="182" pos:column="59"/></argument_list></call></expr>;<pos:position pos:line="182" pos:column="60"/></expr_stmt>

                <if pos:line="184" pos:column="17">if <condition pos:line="184" pos:column="20">(<expr><name pos:line="184" pos:column="21">rc<pos:position pos:line="184" pos:column="23"/></name> <operator pos:line="184" pos:column="24">==<pos:position pos:line="184" pos:column="26"/></operator> <name pos:line="184" pos:column="27">APR_EGENERAL<pos:position pos:line="184" pos:column="39"/></name></expr>)<pos:position pos:line="184" pos:column="40"/></condition><then pos:line="184" pos:column="40"> <block pos:line="184" pos:column="41">{
                    <comment type="block" pos:line="185" pos:column="21">/* E[NM]FILE, ENOMEM, etc */</comment>
                    <expr_stmt><expr><name pos:line="186" pos:column="21">resource_shortage<pos:position pos:line="186" pos:column="38"/></name> <operator pos:line="186" pos:column="39">=<pos:position pos:line="186" pos:column="40"/></operator> <literal type="number" pos:line="186" pos:column="41">1<pos:position pos:line="186" pos:column="42"/></literal></expr>;<pos:position pos:line="186" pos:column="43"/></expr_stmt>
                    <expr_stmt><expr><call><name pos:line="187" pos:column="21">signal_threads<pos:position pos:line="187" pos:column="35"/></name><argument_list pos:line="187" pos:column="35">(<argument><expr><name pos:line="187" pos:column="36">ST_GRACEFUL<pos:position pos:line="187" pos:column="47"/></name></expr></argument>)<pos:position pos:line="187" pos:column="48"/></argument_list></call></expr>;<pos:position pos:line="187" pos:column="49"/></expr_stmt>
                }<pos:position pos:line="188" pos:column="18"/></block></then></if>

                <if pos:line="190" pos:column="17">if <condition pos:line="190" pos:column="20">(<expr><name pos:line="190" pos:column="21">csd<pos:position pos:line="190" pos:column="24"/></name> <operator pos:line="190" pos:column="25">!=<pos:position pos:line="190" pos:column="27"/></operator> <name pos:line="190" pos:column="28">NULL<pos:position pos:line="190" pos:column="32"/></name></expr>)<pos:position pos:line="190" pos:column="33"/></condition><then pos:line="190" pos:column="33"> <block pos:line="190" pos:column="34">{
                    <expr_stmt><expr><name pos:line="191" pos:column="21">rc<pos:position pos:line="191" pos:column="23"/></name> <operator pos:line="191" pos:column="24">=<pos:position pos:line="191" pos:column="25"/></operator> <call><name pos:line="191" pos:column="26">ap_queue_push<pos:position pos:line="191" pos:column="39"/></name><argument_list pos:line="191" pos:column="39">(<argument><expr><name pos:line="191" pos:column="40">worker_queue<pos:position pos:line="191" pos:column="52"/></name></expr></argument>, <argument><expr><name pos:line="191" pos:column="54">csd<pos:position pos:line="191" pos:column="57"/></name></expr></argument>, <argument><expr><name pos:line="191" pos:column="59">NULL<pos:position pos:line="191" pos:column="63"/></name></expr></argument>, <argument><expr><name pos:line="191" pos:column="65">ptrans<pos:position pos:line="191" pos:column="71"/></name></expr></argument>)<pos:position pos:line="191" pos:column="72"/></argument_list></call></expr>;<pos:position pos:line="191" pos:column="73"/></expr_stmt>
                    <if pos:line="192" pos:column="21">if <condition pos:line="192" pos:column="24">(<expr><name pos:line="192" pos:column="25">rc<pos:position pos:line="192" pos:column="27"/></name> <operator pos:line="192" pos:column="28">!=<pos:position pos:line="192" pos:column="30"/></operator> <name pos:line="192" pos:column="31">APR_SUCCESS<pos:position pos:line="192" pos:column="42"/></name></expr>)<pos:position pos:line="192" pos:column="43"/></condition><then pos:line="192" pos:column="43"> <block pos:line="192" pos:column="44">{
                        <comment type="block" pos:line="193" pos:column="25">/* trash the connection; we couldn't queue the connected
                         * socket to a worker
                         */</comment>
                        <expr_stmt><expr><call><name pos:line="196" pos:column="25">apr_socket_close<pos:position pos:line="196" pos:column="41"/></name><argument_list pos:line="196" pos:column="41">(<argument><expr><name pos:line="196" pos:column="42">csd<pos:position pos:line="196" pos:column="45"/></name></expr></argument>)<pos:position pos:line="196" pos:column="46"/></argument_list></call></expr>;<pos:position pos:line="196" pos:column="47"/></expr_stmt>
                        <expr_stmt><expr><call><name pos:line="197" pos:column="25">ap_log_error<pos:position pos:line="197" pos:column="37"/></name><argument_list pos:line="197" pos:column="37">(<argument><expr><name pos:line="197" pos:column="38">APLOG_MARK<pos:position pos:line="197" pos:column="48"/></name></expr></argument>, <argument><expr><name pos:line="197" pos:column="50">APLOG_CRIT<pos:position pos:line="197" pos:column="60"/></name></expr></argument>, <argument><expr><name pos:line="197" pos:column="62">rc<pos:position pos:line="197" pos:column="64"/></name></expr></argument>,
                                     <argument><expr><name pos:line="198" pos:column="38">ap_server_conf<pos:position pos:line="198" pos:column="52"/></name></expr></argument>,
                                     <argument><expr><literal type="string" pos:line="199" pos:column="38">"ap_queue_push failed"<pos:position pos:line="199" pos:column="60"/></literal></expr></argument>)<pos:position pos:line="199" pos:column="61"/></argument_list></call></expr>;<pos:position pos:line="199" pos:column="62"/></expr_stmt>
                        <expr_stmt><expr><call><name pos:line="200" pos:column="25">apr_pool_clear<pos:position pos:line="200" pos:column="39"/></name><argument_list pos:line="200" pos:column="39">(<argument><expr><name pos:line="200" pos:column="40">ptrans<pos:position pos:line="200" pos:column="46"/></name></expr></argument>)<pos:position pos:line="200" pos:column="47"/></argument_list></call></expr>;<pos:position pos:line="200" pos:column="48"/></expr_stmt>
                        <expr_stmt><expr><call><name pos:line="201" pos:column="25">ap_push_pool<pos:position pos:line="201" pos:column="37"/></name><argument_list pos:line="201" pos:column="37">(<argument><expr><name pos:line="201" pos:column="38">worker_queue_info<pos:position pos:line="201" pos:column="55"/></name></expr></argument>, <argument><expr><name pos:line="201" pos:column="57">ptrans<pos:position pos:line="201" pos:column="63"/></name></expr></argument>)<pos:position pos:line="201" pos:column="64"/></argument_list></call></expr>;<pos:position pos:line="201" pos:column="65"/></expr_stmt>
                    }<pos:position pos:line="202" pos:column="22"/></block></then>
                    <else pos:line="203" pos:column="21">else <block pos:line="203" pos:column="26">{
                        <expr_stmt><expr><name pos:line="204" pos:column="25">have_idle_worker<pos:position pos:line="204" pos:column="41"/></name> <operator pos:line="204" pos:column="42">=<pos:position pos:line="204" pos:column="43"/></operator> <literal type="number" pos:line="204" pos:column="44">0<pos:position pos:line="204" pos:column="45"/></literal></expr>;<pos:position pos:line="204" pos:column="46"/></expr_stmt>
                    }<pos:position pos:line="205" pos:column="22"/></block></else></if>
                }<pos:position pos:line="206" pos:column="18"/></block></then>
                <else pos:line="207" pos:column="17">else <block pos:line="207" pos:column="22">{
                    <expr_stmt><expr><call><name pos:line="208" pos:column="21">apr_pool_clear<pos:position pos:line="208" pos:column="35"/></name><argument_list pos:line="208" pos:column="35">(<argument><expr><name pos:line="208" pos:column="36">ptrans<pos:position pos:line="208" pos:column="42"/></name></expr></argument>)<pos:position pos:line="208" pos:column="43"/></argument_list></call></expr>;<pos:position pos:line="208" pos:column="44"/></expr_stmt>
                    <expr_stmt><expr><call><name pos:line="209" pos:column="21">ap_push_pool<pos:position pos:line="209" pos:column="33"/></name><argument_list pos:line="209" pos:column="33">(<argument><expr><name pos:line="209" pos:column="34">worker_queue_info<pos:position pos:line="209" pos:column="51"/></name></expr></argument>, <argument><expr><name pos:line="209" pos:column="53">ptrans<pos:position pos:line="209" pos:column="59"/></name></expr></argument>)<pos:position pos:line="209" pos:column="60"/></argument_list></call></expr>;<pos:position pos:line="209" pos:column="61"/></expr_stmt>
                }<pos:position pos:line="210" pos:column="18"/></block></else></if>
            }<pos:position pos:line="211" pos:column="14"/></block></else></if>               <comment type="block" pos:line="211" pos:column="29">/* if:else on pt-&gt;type */</comment>
            <expr_stmt><expr><name pos:line="212" pos:column="13">out_pfd<pos:position pos:line="212" pos:column="20"/></name><operator pos:line="212" pos:column="20">++<pos:position pos:line="212" pos:column="22"/></operator></expr>;<pos:position pos:line="212" pos:column="23"/></expr_stmt>
            <expr_stmt><expr><name pos:line="213" pos:column="13">num<pos:position pos:line="213" pos:column="16"/></name><operator pos:line="213" pos:column="16">--<pos:position pos:line="213" pos:column="18"/></operator></expr>;<pos:position pos:line="213" pos:column="19"/></expr_stmt>
        }<pos:position pos:line="214" pos:column="10"/></block></while>                   <comment type="block" pos:line="214" pos:column="29">/* while for processing poll */</comment>

        <comment type="block" pos:line="216" pos:column="9">/* XXX possible optimization: stash the current time for use as
         * r-&gt;request_time for new requests
         */</comment>
        <expr_stmt><expr><name pos:line="219" pos:column="9">time_now<pos:position pos:line="219" pos:column="17"/></name> <operator pos:line="219" pos:column="18">=<pos:position pos:line="219" pos:column="19"/></operator> <call><name pos:line="219" pos:column="20">apr_time_now<pos:position pos:line="219" pos:column="32"/></name><argument_list pos:line="219" pos:column="32">()<pos:position pos:line="219" pos:column="34"/></argument_list></call></expr>;<pos:position pos:line="219" pos:column="35"/></expr_stmt>

        <comment type="block" pos:line="221" pos:column="9">/* handle timed out sockets */</comment>
        <expr_stmt><expr><call><name pos:line="222" pos:column="9">apr_thread_mutex_lock<pos:position pos:line="222" pos:column="30"/></name><argument_list pos:line="222" pos:column="30">(<argument><expr><name pos:line="222" pos:column="31">timeout_mutex<pos:position pos:line="222" pos:column="44"/></name></expr></argument>)<pos:position pos:line="222" pos:column="45"/></argument_list></call></expr>;<pos:position pos:line="222" pos:column="46"/></expr_stmt>

        <expr_stmt><expr><name pos:line="224" pos:column="9">cs<pos:position pos:line="224" pos:column="11"/></name> <operator pos:line="224" pos:column="12">=<pos:position pos:line="224" pos:column="13"/></operator> <call><name pos:line="224" pos:column="14">APR_RING_FIRST<pos:position pos:line="224" pos:column="28"/></name><argument_list pos:line="224" pos:column="28">(<argument><expr><operator pos:line="224" pos:column="29">&amp;<pos:position pos:line="224" pos:column="34"/></operator><name pos:line="224" pos:column="30">timeout_head<pos:position pos:line="224" pos:column="42"/></name></expr></argument>)<pos:position pos:line="224" pos:column="43"/></argument_list></call></expr>;<pos:position pos:line="224" pos:column="44"/></expr_stmt>
        <expr_stmt><expr><name pos:line="225" pos:column="9">timeout_time<pos:position pos:line="225" pos:column="21"/></name> <operator pos:line="225" pos:column="22">=<pos:position pos:line="225" pos:column="23"/></operator> <name pos:line="225" pos:column="24">time_now<pos:position pos:line="225" pos:column="32"/></name> <operator pos:line="225" pos:column="33">+<pos:position pos:line="225" pos:column="34"/></operator> <name pos:line="225" pos:column="35">TIMEOUT_FUDGE_FACTOR<pos:position pos:line="225" pos:column="55"/></name></expr>;<pos:position pos:line="225" pos:column="56"/></expr_stmt>
        <while pos:line="226" pos:column="9">while <condition pos:line="226" pos:column="15">(<expr><operator pos:line="226" pos:column="16">!<pos:position pos:line="226" pos:column="17"/></operator><call><name pos:line="226" pos:column="17">APR_RING_EMPTY<pos:position pos:line="226" pos:column="31"/></name><argument_list pos:line="226" pos:column="31">(<argument><expr><operator pos:line="226" pos:column="32">&amp;<pos:position pos:line="226" pos:column="37"/></operator><name pos:line="226" pos:column="33">timeout_head<pos:position pos:line="226" pos:column="45"/></name></expr></argument>, <argument><expr><name pos:line="226" pos:column="47">conn_state_t<pos:position pos:line="226" pos:column="59"/></name></expr></argument>, <argument><expr><name pos:line="226" pos:column="61">timeout_list<pos:position pos:line="226" pos:column="73"/></name></expr></argument>)<pos:position pos:line="226" pos:column="74"/></argument_list></call>
               <operator pos:line="227" pos:column="16">&amp;&amp;<pos:position pos:line="227" pos:column="26"/></operator> <name><name pos:line="227" pos:column="19">cs<pos:position pos:line="227" pos:column="21"/></name><operator pos:line="227" pos:column="21">-&gt;<pos:position pos:line="227" pos:column="26"/></operator><name pos:line="227" pos:column="23">expiration_time<pos:position pos:line="227" pos:column="38"/></name></name> <operator pos:line="227" pos:column="39">&lt;<pos:position pos:line="227" pos:column="43"/></operator> <name pos:line="227" pos:column="41">timeout_time<pos:position pos:line="227" pos:column="53"/></name></expr>)<pos:position pos:line="227" pos:column="54"/></condition> <block pos:line="227" pos:column="55">{

            <expr_stmt><expr><name><name pos:line="229" pos:column="13">cs<pos:position pos:line="229" pos:column="15"/></name><operator pos:line="229" pos:column="15">-&gt;<pos:position pos:line="229" pos:column="20"/></operator><name pos:line="229" pos:column="17">state<pos:position pos:line="229" pos:column="22"/></name></name> <operator pos:line="229" pos:column="23">=<pos:position pos:line="229" pos:column="24"/></operator> <name pos:line="229" pos:column="25">CONN_STATE_LINGER<pos:position pos:line="229" pos:column="42"/></name></expr>;<pos:position pos:line="229" pos:column="43"/></expr_stmt>

            <expr_stmt><expr><call><name pos:line="231" pos:column="13">APR_RING_REMOVE<pos:position pos:line="231" pos:column="28"/></name><argument_list pos:line="231" pos:column="28">(<argument><expr><name pos:line="231" pos:column="29">cs<pos:position pos:line="231" pos:column="31"/></name></expr></argument>, <argument><expr><name pos:line="231" pos:column="33">timeout_list<pos:position pos:line="231" pos:column="45"/></name></expr></argument>)<pos:position pos:line="231" pos:column="46"/></argument_list></call></expr>;<pos:position pos:line="231" pos:column="47"/></expr_stmt>
            <expr_stmt><expr><call><name pos:line="232" pos:column="13">apr_thread_mutex_unlock<pos:position pos:line="232" pos:column="36"/></name><argument_list pos:line="232" pos:column="36">(<argument><expr><name pos:line="232" pos:column="37">timeout_mutex<pos:position pos:line="232" pos:column="50"/></name></expr></argument>)<pos:position pos:line="232" pos:column="51"/></argument_list></call></expr>;<pos:position pos:line="232" pos:column="52"/></expr_stmt>

            <if pos:line="234" pos:column="13">if <condition pos:line="234" pos:column="16">(<expr><operator pos:line="234" pos:column="17">!<pos:position pos:line="234" pos:column="18"/></operator><call><name pos:line="234" pos:column="18">get_worker<pos:position pos:line="234" pos:column="28"/></name><argument_list pos:line="234" pos:column="28">(<argument><expr><operator pos:line="234" pos:column="29">&amp;<pos:position pos:line="234" pos:column="34"/></operator><name pos:line="234" pos:column="30">have_idle_worker<pos:position pos:line="234" pos:column="46"/></name></expr></argument>)<pos:position pos:line="234" pos:column="47"/></argument_list></call></expr>)<pos:position pos:line="234" pos:column="48"/></condition><then pos:line="234" pos:column="48"> <block pos:line="234" pos:column="49">{
                <expr_stmt><expr><call><name pos:line="235" pos:column="17">apr_thread_mutex_lock<pos:position pos:line="235" pos:column="38"/></name><argument_list pos:line="235" pos:column="38">(<argument><expr><name pos:line="235" pos:column="39">timeout_mutex<pos:position pos:line="235" pos:column="52"/></name></expr></argument>)<pos:position pos:line="235" pos:column="53"/></argument_list></call></expr>;<pos:position pos:line="235" pos:column="54"/></expr_stmt>
                <expr_stmt><expr><call><name pos:line="236" pos:column="17">APR_RING_INSERT_HEAD<pos:position pos:line="236" pos:column="37"/></name><argument_list pos:line="236" pos:column="37">(<argument><expr><operator pos:line="236" pos:column="38">&amp;<pos:position pos:line="236" pos:column="43"/></operator><name pos:line="236" pos:column="39">timeout_head<pos:position pos:line="236" pos:column="51"/></name></expr></argument>, <argument><expr><name pos:line="236" pos:column="53">cs<pos:position pos:line="236" pos:column="55"/></name></expr></argument>,
                                     <argument><expr><name pos:line="237" pos:column="38">conn_state_t<pos:position pos:line="237" pos:column="50"/></name></expr></argument>, <argument><expr><name pos:line="237" pos:column="52">timeout_list<pos:position pos:line="237" pos:column="64"/></name></expr></argument>)<pos:position pos:line="237" pos:column="65"/></argument_list></call></expr>;<pos:position pos:line="237" pos:column="66"/></expr_stmt>
                <break pos:line="238" pos:column="17">break;<pos:position pos:line="238" pos:column="23"/></break>
            }<pos:position pos:line="239" pos:column="14"/></block></then></if>

            <expr_stmt><expr><name pos:line="241" pos:column="13">rc<pos:position pos:line="241" pos:column="15"/></name> <operator pos:line="241" pos:column="16">=<pos:position pos:line="241" pos:column="17"/></operator> <call><name pos:line="241" pos:column="18">push2worker<pos:position pos:line="241" pos:column="29"/></name><argument_list pos:line="241" pos:column="29">(<argument><expr><operator pos:line="241" pos:column="30">&amp;<pos:position pos:line="241" pos:column="35"/></operator><name><name pos:line="241" pos:column="31">cs<pos:position pos:line="241" pos:column="33"/></name><operator pos:line="241" pos:column="33">-&gt;<pos:position pos:line="241" pos:column="38"/></operator><name pos:line="241" pos:column="35">pfd<pos:position pos:line="241" pos:column="38"/></name></name></expr></argument>, <argument><expr><name pos:line="241" pos:column="40">event_pollset<pos:position pos:line="241" pos:column="53"/></name></expr></argument>)<pos:position pos:line="241" pos:column="54"/></argument_list></call></expr>;<pos:position pos:line="241" pos:column="55"/></expr_stmt>

            <if pos:line="243" pos:column="13">if <condition pos:line="243" pos:column="16">(<expr><name pos:line="243" pos:column="17">rc<pos:position pos:line="243" pos:column="19"/></name> <operator pos:line="243" pos:column="20">!=<pos:position pos:line="243" pos:column="22"/></operator> <name pos:line="243" pos:column="23">APR_SUCCESS<pos:position pos:line="243" pos:column="34"/></name></expr>)<pos:position pos:line="243" pos:column="35"/></condition><then pos:line="243" pos:column="35"> <block pos:line="243" pos:column="36">{
                <return pos:line="244" pos:column="17">return <expr><name pos:line="244" pos:column="24">NULL<pos:position pos:line="244" pos:column="28"/></name></expr>;<pos:position pos:line="244" pos:column="29"/></return>
                <comment type="block" pos:line="245" pos:column="17">/* XXX return NULL looks wrong - not an init failure
                 * that bypasses all the cleanup outside the main loop
                 * break seems more like it
                 * need to evaluate seriousness of push2worker failures
                 */</comment>
            }<pos:position pos:line="250" pos:column="14"/></block></then></if>
            <expr_stmt><expr><name pos:line="251" pos:column="13">have_idle_worker<pos:position pos:line="251" pos:column="29"/></name> <operator pos:line="251" pos:column="30">=<pos:position pos:line="251" pos:column="31"/></operator> <literal type="number" pos:line="251" pos:column="32">0<pos:position pos:line="251" pos:column="33"/></literal></expr>;<pos:position pos:line="251" pos:column="34"/></expr_stmt>
            <expr_stmt><expr><call><name pos:line="252" pos:column="13">apr_thread_mutex_lock<pos:position pos:line="252" pos:column="34"/></name><argument_list pos:line="252" pos:column="34">(<argument><expr><name pos:line="252" pos:column="35">timeout_mutex<pos:position pos:line="252" pos:column="48"/></name></expr></argument>)<pos:position pos:line="252" pos:column="49"/></argument_list></call></expr>;<pos:position pos:line="252" pos:column="50"/></expr_stmt>
            <expr_stmt><expr><name pos:line="253" pos:column="13">cs<pos:position pos:line="253" pos:column="15"/></name> <operator pos:line="253" pos:column="16">=<pos:position pos:line="253" pos:column="17"/></operator> <call><name pos:line="253" pos:column="18">APR_RING_FIRST<pos:position pos:line="253" pos:column="32"/></name><argument_list pos:line="253" pos:column="32">(<argument><expr><operator pos:line="253" pos:column="33">&amp;<pos:position pos:line="253" pos:column="38"/></operator><name pos:line="253" pos:column="34">timeout_head<pos:position pos:line="253" pos:column="46"/></name></expr></argument>)<pos:position pos:line="253" pos:column="47"/></argument_list></call></expr>;<pos:position pos:line="253" pos:column="48"/></expr_stmt>
        }<pos:position pos:line="254" pos:column="10"/></block></while>
        <expr_stmt><expr><call><name pos:line="255" pos:column="9">apr_thread_mutex_unlock<pos:position pos:line="255" pos:column="32"/></name><argument_list pos:line="255" pos:column="32">(<argument><expr><name pos:line="255" pos:column="33">timeout_mutex<pos:position pos:line="255" pos:column="46"/></name></expr></argument>)<pos:position pos:line="255" pos:column="47"/></argument_list></call></expr>;<pos:position pos:line="255" pos:column="48"/></expr_stmt>

    }<pos:position pos:line="257" pos:column="6"/></block></while>     <comment type="block" pos:line="257" pos:column="11">/* listener main loop */</comment>

    <expr_stmt><expr><call><name pos:line="259" pos:column="5">ap_close_listeners<pos:position pos:line="259" pos:column="23"/></name><argument_list pos:line="259" pos:column="23">()<pos:position pos:line="259" pos:column="25"/></argument_list></call></expr>;<pos:position pos:line="259" pos:column="26"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="260" pos:column="5">ap_queue_term<pos:position pos:line="260" pos:column="18"/></name><argument_list pos:line="260" pos:column="18">(<argument><expr><name pos:line="260" pos:column="19">worker_queue<pos:position pos:line="260" pos:column="31"/></name></expr></argument>)<pos:position pos:line="260" pos:column="32"/></argument_list></call></expr>;<pos:position pos:line="260" pos:column="33"/></expr_stmt>
    <expr_stmt><expr><name pos:line="261" pos:column="5">dying<pos:position pos:line="261" pos:column="10"/></name> <operator pos:line="261" pos:column="11">=<pos:position pos:line="261" pos:column="12"/></operator> <literal type="number" pos:line="261" pos:column="13">1<pos:position pos:line="261" pos:column="14"/></literal></expr>;<pos:position pos:line="261" pos:column="15"/></expr_stmt>
    <expr_stmt><expr><name><name pos:line="262" pos:column="5">ap_scoreboard_image<pos:position pos:line="262" pos:column="24"/></name><operator pos:line="262" pos:column="24">-&gt;<pos:position pos:line="262" pos:column="29"/></operator><name pos:line="262" pos:column="26">parent<pos:position pos:line="262" pos:column="32"/></name><index pos:line="262" pos:column="32">[<expr><name pos:line="262" pos:column="33">process_slot<pos:position pos:line="262" pos:column="45"/></name></expr>]<pos:position pos:line="262" pos:column="46"/></index></name><operator pos:line="262" pos:column="46">.<pos:position pos:line="262" pos:column="47"/></operator><name pos:line="262" pos:column="47">quiescing<pos:position pos:line="262" pos:column="56"/></name> <operator pos:line="262" pos:column="57">=<pos:position pos:line="262" pos:column="58"/></operator> <literal type="number" pos:line="262" pos:column="59">1<pos:position pos:line="262" pos:column="60"/></literal></expr>;<pos:position pos:line="262" pos:column="61"/></expr_stmt>

    <comment type="block" pos:line="264" pos:column="5">/* wake up the main thread */</comment>
    <expr_stmt><expr><call><name pos:line="265" pos:column="5">kill<pos:position pos:line="265" pos:column="9"/></name><argument_list pos:line="265" pos:column="9">(<argument><expr><name pos:line="265" pos:column="10">ap_my_pid<pos:position pos:line="265" pos:column="19"/></name></expr></argument>, <argument><expr><name pos:line="265" pos:column="21">SIGTERM<pos:position pos:line="265" pos:column="28"/></name></expr></argument>)<pos:position pos:line="265" pos:column="29"/></argument_list></call></expr>;<pos:position pos:line="265" pos:column="30"/></expr_stmt>

    <expr_stmt><expr><call><name pos:line="267" pos:column="5">apr_thread_exit<pos:position pos:line="267" pos:column="20"/></name><argument_list pos:line="267" pos:column="20">(<argument><expr><name pos:line="267" pos:column="21">thd<pos:position pos:line="267" pos:column="24"/></name></expr></argument>, <argument><expr><name pos:line="267" pos:column="26">APR_SUCCESS<pos:position pos:line="267" pos:column="37"/></name></expr></argument>)<pos:position pos:line="267" pos:column="38"/></argument_list></call></expr>;<pos:position pos:line="267" pos:column="39"/></expr_stmt>
    <return pos:line="268" pos:column="5">return <expr><name pos:line="268" pos:column="12">NULL<pos:position pos:line="268" pos:column="16"/></name></expr>;<pos:position pos:line="268" pos:column="17"/></return>
}<pos:position pos:line="269" pos:column="2"/></block></function></unit>

<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/httpd/gumtree/httpd_repos_function_1503_httpd-2.0.55.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">apr_status_t<pos:position pos:line="1" pos:column="20"/></name></type> <name pos:line="1" pos:column="21">store_body<pos:position pos:line="1" pos:column="31"/></name><parameter_list pos:line="1" pos:column="31">(<parameter><decl><type><name pos:line="1" pos:column="32">cache_handle_t<pos:position pos:line="1" pos:column="46"/></name> <modifier pos:line="1" pos:column="47">*<pos:position pos:line="1" pos:column="48"/></modifier></type><name pos:line="1" pos:column="48">h<pos:position pos:line="1" pos:column="49"/></name></decl></parameter>, <parameter><decl><type><name pos:line="1" pos:column="51">request_rec<pos:position pos:line="1" pos:column="62"/></name> <modifier pos:line="1" pos:column="63">*<pos:position pos:line="1" pos:column="64"/></modifier></type><name pos:line="1" pos:column="64">r<pos:position pos:line="1" pos:column="65"/></name></decl></parameter>, <parameter><decl><type><name pos:line="1" pos:column="67">apr_bucket_brigade<pos:position pos:line="1" pos:column="85"/></name> <modifier pos:line="1" pos:column="86">*<pos:position pos:line="1" pos:column="87"/></modifier></type><name pos:line="1" pos:column="87">b<pos:position pos:line="1" pos:column="88"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="89"/></parameter_list> 
<block pos:line="2" pos:column="1">{
    <decl_stmt><decl><type><name pos:line="3" pos:column="5">apr_status_t<pos:position pos:line="3" pos:column="17"/></name></type> <name pos:line="3" pos:column="18">rv<pos:position pos:line="3" pos:column="20"/></name></decl>;<pos:position pos:line="3" pos:column="21"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="4" pos:column="5">cache_object_t<pos:position pos:line="4" pos:column="19"/></name> <modifier pos:line="4" pos:column="20">*<pos:position pos:line="4" pos:column="21"/></modifier></type><name pos:line="4" pos:column="21">obj<pos:position pos:line="4" pos:column="24"/></name> <init pos:line="4" pos:column="25">= <expr><name><name pos:line="4" pos:column="27">h<pos:position pos:line="4" pos:column="28"/></name><operator pos:line="4" pos:column="28">-&gt;<pos:position pos:line="4" pos:column="33"/></operator><name pos:line="4" pos:column="30">cache_obj<pos:position pos:line="4" pos:column="39"/></name></name></expr></init></decl>;<pos:position pos:line="4" pos:column="40"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="5" pos:column="5">cache_object_t<pos:position pos:line="5" pos:column="19"/></name> <modifier pos:line="5" pos:column="20">*<pos:position pos:line="5" pos:column="21"/></modifier></type><name pos:line="5" pos:column="21">tobj<pos:position pos:line="5" pos:column="25"/></name> <init pos:line="5" pos:column="26">= <expr><name pos:line="5" pos:column="28">NULL<pos:position pos:line="5" pos:column="32"/></name></expr></init></decl>;<pos:position pos:line="5" pos:column="33"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="6" pos:column="5">mem_cache_object_t<pos:position pos:line="6" pos:column="23"/></name> <modifier pos:line="6" pos:column="24">*<pos:position pos:line="6" pos:column="25"/></modifier></type><name pos:line="6" pos:column="25">mobj<pos:position pos:line="6" pos:column="29"/></name> <init pos:line="6" pos:column="30">= <expr><operator pos:line="6" pos:column="32">(<pos:position pos:line="6" pos:column="33"/></operator><name pos:line="6" pos:column="33">mem_cache_object_t<pos:position pos:line="6" pos:column="51"/></name><operator pos:line="6" pos:column="51">*<pos:position pos:line="6" pos:column="52"/></operator><operator pos:line="6" pos:column="52">)<pos:position pos:line="6" pos:column="53"/></operator> <name><name pos:line="6" pos:column="54">obj<pos:position pos:line="6" pos:column="57"/></name><operator pos:line="6" pos:column="57">-&gt;<pos:position pos:line="6" pos:column="62"/></operator><name pos:line="6" pos:column="59">vobj<pos:position pos:line="6" pos:column="63"/></name></name></expr></init></decl>;<pos:position pos:line="6" pos:column="64"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="7" pos:column="5">apr_read_type_e<pos:position pos:line="7" pos:column="20"/></name></type> <name pos:line="7" pos:column="21">eblock<pos:position pos:line="7" pos:column="27"/></name> <init pos:line="7" pos:column="28">= <expr><name pos:line="7" pos:column="30">APR_BLOCK_READ<pos:position pos:line="7" pos:column="44"/></name></expr></init></decl>;<pos:position pos:line="7" pos:column="45"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="8" pos:column="5">apr_bucket<pos:position pos:line="8" pos:column="15"/></name> <modifier pos:line="8" pos:column="16">*<pos:position pos:line="8" pos:column="17"/></modifier></type><name pos:line="8" pos:column="17">e<pos:position pos:line="8" pos:column="18"/></name></decl>;<pos:position pos:line="8" pos:column="19"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="9" pos:column="5">char<pos:position pos:line="9" pos:column="9"/></name> <modifier pos:line="9" pos:column="10">*<pos:position pos:line="9" pos:column="11"/></modifier></type><name pos:line="9" pos:column="11">cur<pos:position pos:line="9" pos:column="14"/></name></decl>;<pos:position pos:line="9" pos:column="15"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="10" pos:column="5">int<pos:position pos:line="10" pos:column="8"/></name></type> <name pos:line="10" pos:column="9">eos<pos:position pos:line="10" pos:column="12"/></name> <init pos:line="10" pos:column="13">= <expr><literal type="number" pos:line="10" pos:column="15">0<pos:position pos:line="10" pos:column="16"/></literal></expr></init></decl>;<pos:position pos:line="10" pos:column="17"/></decl_stmt>

    <if pos:line="12" pos:column="5">if <condition pos:line="12" pos:column="8">(<expr><name><name pos:line="12" pos:column="9">mobj<pos:position pos:line="12" pos:column="13"/></name><operator pos:line="12" pos:column="13">-&gt;<pos:position pos:line="12" pos:column="18"/></operator><name pos:line="12" pos:column="15">type<pos:position pos:line="12" pos:column="19"/></name></name> <operator pos:line="12" pos:column="20">==<pos:position pos:line="12" pos:column="22"/></operator> <name pos:line="12" pos:column="23">CACHE_TYPE_FILE<pos:position pos:line="12" pos:column="38"/></name></expr>)<pos:position pos:line="12" pos:column="39"/></condition><then pos:line="12" pos:column="39"> <block pos:line="12" pos:column="40">{
        <decl_stmt><decl><type><name pos:line="13" pos:column="9">apr_file_t<pos:position pos:line="13" pos:column="19"/></name> <modifier pos:line="13" pos:column="20">*<pos:position pos:line="13" pos:column="21"/></modifier></type><name pos:line="13" pos:column="21">file<pos:position pos:line="13" pos:column="25"/></name> <init pos:line="13" pos:column="26">= <expr><name pos:line="13" pos:column="28">NULL<pos:position pos:line="13" pos:column="32"/></name></expr></init></decl>;<pos:position pos:line="13" pos:column="33"/></decl_stmt>
        <decl_stmt><decl><type><name pos:line="14" pos:column="9">int<pos:position pos:line="14" pos:column="12"/></name></type> <name pos:line="14" pos:column="13">fd<pos:position pos:line="14" pos:column="15"/></name> <init pos:line="14" pos:column="16">= <expr><literal type="number" pos:line="14" pos:column="18">0<pos:position pos:line="14" pos:column="19"/></literal></expr></init></decl>;<pos:position pos:line="14" pos:column="20"/></decl_stmt>
        <decl_stmt><decl><type><name pos:line="15" pos:column="9">int<pos:position pos:line="15" pos:column="12"/></name></type> <name pos:line="15" pos:column="13">other<pos:position pos:line="15" pos:column="18"/></name> <init pos:line="15" pos:column="19">= <expr><literal type="number" pos:line="15" pos:column="21">0<pos:position pos:line="15" pos:column="22"/></literal></expr></init></decl>;<pos:position pos:line="15" pos:column="23"/></decl_stmt>

        <comment type="block" pos:line="17" pos:column="9">/* We can cache an open file descriptor if:
         * - the brigade contains one and only one file_bucket &amp;&amp;
         * - the brigade is complete &amp;&amp;
         * - the file_bucket is the last data bucket in the brigade
         */</comment>
        <for pos:line="22" pos:column="9">for <control pos:line="22" pos:column="13">(<init><expr><name pos:line="22" pos:column="14">e<pos:position pos:line="22" pos:column="15"/></name> <operator pos:line="22" pos:column="16">=<pos:position pos:line="22" pos:column="17"/></operator> <call><name pos:line="22" pos:column="18">APR_BRIGADE_FIRST<pos:position pos:line="22" pos:column="35"/></name><argument_list pos:line="22" pos:column="35">(<argument><expr><name pos:line="22" pos:column="36">b<pos:position pos:line="22" pos:column="37"/></name></expr></argument>)<pos:position pos:line="22" pos:column="38"/></argument_list></call></expr>;<pos:position pos:line="22" pos:column="39"/></init>
             <condition><expr><name pos:line="23" pos:column="14">e<pos:position pos:line="23" pos:column="15"/></name> <operator pos:line="23" pos:column="16">!=<pos:position pos:line="23" pos:column="18"/></operator> <call><name pos:line="23" pos:column="19">APR_BRIGADE_SENTINEL<pos:position pos:line="23" pos:column="39"/></name><argument_list pos:line="23" pos:column="39">(<argument><expr><name pos:line="23" pos:column="40">b<pos:position pos:line="23" pos:column="41"/></name></expr></argument>)<pos:position pos:line="23" pos:column="42"/></argument_list></call></expr>;<pos:position pos:line="23" pos:column="43"/></condition>
             <incr><expr><name pos:line="24" pos:column="14">e<pos:position pos:line="24" pos:column="15"/></name> <operator pos:line="24" pos:column="16">=<pos:position pos:line="24" pos:column="17"/></operator> <call><name pos:line="24" pos:column="18">APR_BUCKET_NEXT<pos:position pos:line="24" pos:column="33"/></name><argument_list pos:line="24" pos:column="33">(<argument><expr><name pos:line="24" pos:column="34">e<pos:position pos:line="24" pos:column="35"/></name></expr></argument>)<pos:position pos:line="24" pos:column="36"/></argument_list></call></expr></incr>)<pos:position pos:line="24" pos:column="37"/></control>
        <block pos:line="25" pos:column="9">{
            <if pos:line="26" pos:column="13">if <condition pos:line="26" pos:column="16">(<expr><call><name pos:line="26" pos:column="17">APR_BUCKET_IS_EOS<pos:position pos:line="26" pos:column="34"/></name><argument_list pos:line="26" pos:column="34">(<argument><expr><name pos:line="26" pos:column="35">e<pos:position pos:line="26" pos:column="36"/></name></expr></argument>)<pos:position pos:line="26" pos:column="37"/></argument_list></call></expr>)<pos:position pos:line="26" pos:column="38"/></condition><then pos:line="26" pos:column="38"> <block pos:line="26" pos:column="39">{
                <expr_stmt><expr><name pos:line="27" pos:column="17">eos<pos:position pos:line="27" pos:column="20"/></name> <operator pos:line="27" pos:column="21">=<pos:position pos:line="27" pos:column="22"/></operator> <literal type="number" pos:line="27" pos:column="23">1<pos:position pos:line="27" pos:column="24"/></literal></expr>;<pos:position pos:line="27" pos:column="25"/></expr_stmt>
            }<pos:position pos:line="28" pos:column="14"/></block></then>
            <elseif pos:line="29" pos:column="13">else <if pos:line="29" pos:column="18">if <condition pos:line="29" pos:column="21">(<expr><call><name pos:line="29" pos:column="22">APR_BUCKET_IS_FILE<pos:position pos:line="29" pos:column="40"/></name><argument_list pos:line="29" pos:column="40">(<argument><expr><name pos:line="29" pos:column="41">e<pos:position pos:line="29" pos:column="42"/></name></expr></argument>)<pos:position pos:line="29" pos:column="43"/></argument_list></call></expr>)<pos:position pos:line="29" pos:column="44"/></condition><then pos:line="29" pos:column="44"> <block pos:line="29" pos:column="45">{
                <decl_stmt><decl><type><name pos:line="30" pos:column="17">apr_bucket_file<pos:position pos:line="30" pos:column="32"/></name> <modifier pos:line="30" pos:column="33">*<pos:position pos:line="30" pos:column="34"/></modifier></type><name pos:line="30" pos:column="34">a<pos:position pos:line="30" pos:column="35"/></name> <init pos:line="30" pos:column="36">= <expr><name><name pos:line="30" pos:column="38">e<pos:position pos:line="30" pos:column="39"/></name><operator pos:line="30" pos:column="39">-&gt;<pos:position pos:line="30" pos:column="44"/></operator><name pos:line="30" pos:column="41">data<pos:position pos:line="30" pos:column="45"/></name></name></expr></init></decl>;<pos:position pos:line="30" pos:column="46"/></decl_stmt>
                <expr_stmt><expr><name pos:line="31" pos:column="17">fd<pos:position pos:line="31" pos:column="19"/></name><operator pos:line="31" pos:column="19">++<pos:position pos:line="31" pos:column="21"/></operator></expr>;<pos:position pos:line="31" pos:column="22"/></expr_stmt>
                <expr_stmt><expr><name pos:line="32" pos:column="17">file<pos:position pos:line="32" pos:column="21"/></name> <operator pos:line="32" pos:column="22">=<pos:position pos:line="32" pos:column="23"/></operator> <name><name pos:line="32" pos:column="24">a<pos:position pos:line="32" pos:column="25"/></name><operator pos:line="32" pos:column="25">-&gt;<pos:position pos:line="32" pos:column="30"/></operator><name pos:line="32" pos:column="27">fd<pos:position pos:line="32" pos:column="29"/></name></name></expr>;<pos:position pos:line="32" pos:column="30"/></expr_stmt>
            }<pos:position pos:line="33" pos:column="14"/></block></then></if></elseif>
            <else pos:line="34" pos:column="13">else <block pos:line="34" pos:column="18">{
                <expr_stmt><expr><name pos:line="35" pos:column="17">other<pos:position pos:line="35" pos:column="22"/></name><operator pos:line="35" pos:column="22">++<pos:position pos:line="35" pos:column="24"/></operator></expr>;<pos:position pos:line="35" pos:column="25"/></expr_stmt>
            }<pos:position pos:line="36" pos:column="14"/></block></else></if>
        }<pos:position pos:line="37" pos:column="10"/></block></for>
        <if pos:line="38" pos:column="9">if <condition pos:line="38" pos:column="12">(<expr><name pos:line="38" pos:column="13">fd<pos:position pos:line="38" pos:column="15"/></name> <operator pos:line="38" pos:column="16">==<pos:position pos:line="38" pos:column="18"/></operator> <literal type="number" pos:line="38" pos:column="19">1<pos:position pos:line="38" pos:column="20"/></literal> <operator pos:line="38" pos:column="21">&amp;&amp;<pos:position pos:line="38" pos:column="31"/></operator> <operator pos:line="38" pos:column="24">!<pos:position pos:line="38" pos:column="25"/></operator><name pos:line="38" pos:column="25">other<pos:position pos:line="38" pos:column="30"/></name> <operator pos:line="38" pos:column="31">&amp;&amp;<pos:position pos:line="38" pos:column="41"/></operator> <name pos:line="38" pos:column="34">eos<pos:position pos:line="38" pos:column="37"/></name></expr>)<pos:position pos:line="38" pos:column="38"/></condition><then pos:line="38" pos:column="38"> <block pos:line="38" pos:column="39">{
            <decl_stmt><decl><type><name pos:line="39" pos:column="13">apr_file_t<pos:position pos:line="39" pos:column="23"/></name> <modifier pos:line="39" pos:column="24">*<pos:position pos:line="39" pos:column="25"/></modifier></type><name pos:line="39" pos:column="25">tmpfile<pos:position pos:line="39" pos:column="32"/></name></decl>;<pos:position pos:line="39" pos:column="33"/></decl_stmt>
            <decl_stmt><decl><type><specifier pos:line="40" pos:column="13">const<pos:position pos:line="40" pos:column="18"/></specifier> <name pos:line="40" pos:column="19">char<pos:position pos:line="40" pos:column="23"/></name> <modifier pos:line="40" pos:column="24">*<pos:position pos:line="40" pos:column="25"/></modifier></type><name pos:line="40" pos:column="25">name<pos:position pos:line="40" pos:column="29"/></name></decl>;<pos:position pos:line="40" pos:column="30"/></decl_stmt>
            <comment type="block" pos:line="41" pos:column="13">/* Open a new XTHREAD handle to the file */</comment>
            <expr_stmt><expr><call><name pos:line="42" pos:column="13">apr_file_name_get<pos:position pos:line="42" pos:column="30"/></name><argument_list pos:line="42" pos:column="30">(<argument><expr><operator pos:line="42" pos:column="31">&amp;<pos:position pos:line="42" pos:column="36"/></operator><name pos:line="42" pos:column="32">name<pos:position pos:line="42" pos:column="36"/></name></expr></argument>, <argument><expr><name pos:line="42" pos:column="38">file<pos:position pos:line="42" pos:column="42"/></name></expr></argument>)<pos:position pos:line="42" pos:column="43"/></argument_list></call></expr>;<pos:position pos:line="42" pos:column="44"/></expr_stmt>
            <expr_stmt><expr><name><name pos:line="43" pos:column="13">mobj<pos:position pos:line="43" pos:column="17"/></name><operator pos:line="43" pos:column="17">-&gt;<pos:position pos:line="43" pos:column="22"/></operator><name pos:line="43" pos:column="19">flags<pos:position pos:line="43" pos:column="24"/></name></name> <operator pos:line="43" pos:column="25">=<pos:position pos:line="43" pos:column="26"/></operator> <operator pos:line="43" pos:column="27">(<pos:position pos:line="43" pos:column="28"/></operator><operator pos:line="43" pos:column="28">(<pos:position pos:line="43" pos:column="29"/></operator><name pos:line="43" pos:column="29">APR_SENDFILE_ENABLED<pos:position pos:line="43" pos:column="49"/></name> <operator pos:line="43" pos:column="50">&amp;<pos:position pos:line="43" pos:column="55"/></operator> <call><name pos:line="43" pos:column="52">apr_file_flags_get<pos:position pos:line="43" pos:column="70"/></name><argument_list pos:line="43" pos:column="70">(<argument><expr><name pos:line="43" pos:column="71">file<pos:position pos:line="43" pos:column="75"/></name></expr></argument>)<pos:position pos:line="43" pos:column="76"/></argument_list></call><operator pos:line="43" pos:column="76">)<pos:position pos:line="43" pos:column="77"/></operator>
                           <operator pos:line="44" pos:column="28">|<pos:position pos:line="44" pos:column="29"/></operator> <name pos:line="44" pos:column="30">APR_READ<pos:position pos:line="44" pos:column="38"/></name> <operator pos:line="44" pos:column="39">|<pos:position pos:line="44" pos:column="40"/></operator> <name pos:line="44" pos:column="41">APR_BINARY<pos:position pos:line="44" pos:column="51"/></name> <operator pos:line="44" pos:column="52">|<pos:position pos:line="44" pos:column="53"/></operator> <name pos:line="44" pos:column="54">APR_XTHREAD<pos:position pos:line="44" pos:column="65"/></name> <operator pos:line="44" pos:column="66">|<pos:position pos:line="44" pos:column="67"/></operator> <name pos:line="44" pos:column="68">APR_FILE_NOCLEANUP<pos:position pos:line="44" pos:column="86"/></name><operator pos:line="44" pos:column="86">)<pos:position pos:line="44" pos:column="87"/></operator></expr>;<pos:position pos:line="44" pos:column="88"/></expr_stmt>
            <expr_stmt><expr><name pos:line="45" pos:column="13">rv<pos:position pos:line="45" pos:column="15"/></name> <operator pos:line="45" pos:column="16">=<pos:position pos:line="45" pos:column="17"/></operator> <call><name pos:line="45" pos:column="18">apr_file_open<pos:position pos:line="45" pos:column="31"/></name><argument_list pos:line="45" pos:column="31">(<argument><expr><operator pos:line="45" pos:column="32">&amp;<pos:position pos:line="45" pos:column="37"/></operator><name pos:line="45" pos:column="33">tmpfile<pos:position pos:line="45" pos:column="40"/></name></expr></argument>, <argument><expr><name pos:line="45" pos:column="42">name<pos:position pos:line="45" pos:column="46"/></name></expr></argument>, <argument><expr><name><name pos:line="45" pos:column="48">mobj<pos:position pos:line="45" pos:column="52"/></name><operator pos:line="45" pos:column="52">-&gt;<pos:position pos:line="45" pos:column="57"/></operator><name pos:line="45" pos:column="54">flags<pos:position pos:line="45" pos:column="59"/></name></name></expr></argument>,
                               <argument><expr><name pos:line="46" pos:column="32">APR_OS_DEFAULT<pos:position pos:line="46" pos:column="46"/></name></expr></argument>, <argument><expr><name><name pos:line="46" pos:column="48">r<pos:position pos:line="46" pos:column="49"/></name><operator pos:line="46" pos:column="49">-&gt;<pos:position pos:line="46" pos:column="54"/></operator><name pos:line="46" pos:column="51">pool<pos:position pos:line="46" pos:column="55"/></name></name></expr></argument>)<pos:position pos:line="46" pos:column="56"/></argument_list></call></expr>;<pos:position pos:line="46" pos:column="57"/></expr_stmt>
            <if pos:line="47" pos:column="13">if <condition pos:line="47" pos:column="16">(<expr><name pos:line="47" pos:column="17">rv<pos:position pos:line="47" pos:column="19"/></name> <operator pos:line="47" pos:column="20">!=<pos:position pos:line="47" pos:column="22"/></operator> <name pos:line="47" pos:column="23">APR_SUCCESS<pos:position pos:line="47" pos:column="34"/></name></expr>)<pos:position pos:line="47" pos:column="35"/></condition><then pos:line="47" pos:column="35"> <block pos:line="47" pos:column="36">{
                <return pos:line="48" pos:column="17">return <expr><name pos:line="48" pos:column="24">rv<pos:position pos:line="48" pos:column="26"/></name></expr>;<pos:position pos:line="48" pos:column="27"/></return>
            }<pos:position pos:line="49" pos:column="14"/></block></then></if>
            <expr_stmt><expr><call><name pos:line="50" pos:column="13">apr_file_inherit_unset<pos:position pos:line="50" pos:column="35"/></name><argument_list pos:line="50" pos:column="35">(<argument><expr><name pos:line="50" pos:column="36">tmpfile<pos:position pos:line="50" pos:column="43"/></name></expr></argument>)<pos:position pos:line="50" pos:column="44"/></argument_list></call></expr>;<pos:position pos:line="50" pos:column="45"/></expr_stmt>
            <expr_stmt><expr><call><name pos:line="51" pos:column="13">apr_os_file_get<pos:position pos:line="51" pos:column="28"/></name><argument_list pos:line="51" pos:column="28">(<argument><expr><operator pos:line="51" pos:column="29">&amp;<pos:position pos:line="51" pos:column="34"/></operator><operator pos:line="51" pos:column="30">(<pos:position pos:line="51" pos:column="31"/></operator><name><name pos:line="51" pos:column="31">mobj<pos:position pos:line="51" pos:column="35"/></name><operator pos:line="51" pos:column="35">-&gt;<pos:position pos:line="51" pos:column="40"/></operator><name pos:line="51" pos:column="37">fd<pos:position pos:line="51" pos:column="39"/></name></name><operator pos:line="51" pos:column="39">)<pos:position pos:line="51" pos:column="40"/></operator></expr></argument>, <argument><expr><name pos:line="51" pos:column="42">tmpfile<pos:position pos:line="51" pos:column="49"/></name></expr></argument>)<pos:position pos:line="51" pos:column="50"/></argument_list></call></expr>;<pos:position pos:line="51" pos:column="51"/></expr_stmt>

            <comment type="block" pos:line="53" pos:column="13">/* Open for business */</comment>
            <expr_stmt><expr><call><name pos:line="54" pos:column="13">ap_log_error<pos:position pos:line="54" pos:column="25"/></name><argument_list pos:line="54" pos:column="25">(<argument><expr><name pos:line="54" pos:column="26">APLOG_MARK<pos:position pos:line="54" pos:column="36"/></name></expr></argument>, <argument><expr><name pos:line="54" pos:column="38">APLOG_INFO<pos:position pos:line="54" pos:column="48"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="54" pos:column="50">0<pos:position pos:line="54" pos:column="51"/></literal></expr></argument>, <argument><expr><name><name pos:line="54" pos:column="53">r<pos:position pos:line="54" pos:column="54"/></name><operator pos:line="54" pos:column="54">-&gt;<pos:position pos:line="54" pos:column="59"/></operator><name pos:line="54" pos:column="56">server<pos:position pos:line="54" pos:column="62"/></name></name></expr></argument>,
                         <argument><expr><literal type="string" pos:line="55" pos:column="26">"mem_cache: Cached file: %s with key: %s"<pos:position pos:line="55" pos:column="67"/></literal></expr></argument>, <argument><expr><name pos:line="55" pos:column="69">name<pos:position pos:line="55" pos:column="73"/></name></expr></argument>, <argument><expr><name><name pos:line="55" pos:column="75">obj<pos:position pos:line="55" pos:column="78"/></name><operator pos:line="55" pos:column="78">-&gt;<pos:position pos:line="55" pos:column="83"/></operator><name pos:line="55" pos:column="80">key<pos:position pos:line="55" pos:column="83"/></name></name></expr></argument>)<pos:position pos:line="55" pos:column="84"/></argument_list></call></expr>;<pos:position pos:line="55" pos:column="85"/></expr_stmt>
            <expr_stmt><expr><name><name pos:line="56" pos:column="13">obj<pos:position pos:line="56" pos:column="16"/></name><operator pos:line="56" pos:column="16">-&gt;<pos:position pos:line="56" pos:column="21"/></operator><name pos:line="56" pos:column="18">complete<pos:position pos:line="56" pos:column="26"/></name></name> <operator pos:line="56" pos:column="27">=<pos:position pos:line="56" pos:column="28"/></operator> <literal type="number" pos:line="56" pos:column="29">1<pos:position pos:line="56" pos:column="30"/></literal></expr>;<pos:position pos:line="56" pos:column="31"/></expr_stmt>
            <return pos:line="57" pos:column="13">return <expr><name pos:line="57" pos:column="20">APR_SUCCESS<pos:position pos:line="57" pos:column="31"/></name></expr>;<pos:position pos:line="57" pos:column="32"/></return>
        }<pos:position pos:line="58" pos:column="10"/></block></then></if>

        <comment type="block" pos:line="60" pos:column="9">/* Content not suitable for fd caching. Cache in-memory instead. */</comment>
        <expr_stmt><expr><name><name pos:line="61" pos:column="9">mobj<pos:position pos:line="61" pos:column="13"/></name><operator pos:line="61" pos:column="13">-&gt;<pos:position pos:line="61" pos:column="18"/></operator><name pos:line="61" pos:column="15">type<pos:position pos:line="61" pos:column="19"/></name></name> <operator pos:line="61" pos:column="20">=<pos:position pos:line="61" pos:column="21"/></operator> <name pos:line="61" pos:column="22">CACHE_TYPE_HEAP<pos:position pos:line="61" pos:column="37"/></name></expr>;<pos:position pos:line="61" pos:column="38"/></expr_stmt>
    }<pos:position pos:line="62" pos:column="6"/></block></then></if>

    <comment type="block" pos:line="64" pos:column="5">/* 
     * FD cacheing is not enabled or the content was not
     * suitable for fd caching.
     */</comment>  
    <if pos:line="68" pos:column="5">if <condition pos:line="68" pos:column="8">(<expr><name><name pos:line="68" pos:column="9">mobj<pos:position pos:line="68" pos:column="13"/></name><operator pos:line="68" pos:column="13">-&gt;<pos:position pos:line="68" pos:column="18"/></operator><name pos:line="68" pos:column="15">m<pos:position pos:line="68" pos:column="16"/></name></name> <operator pos:line="68" pos:column="17">==<pos:position pos:line="68" pos:column="19"/></operator> <name pos:line="68" pos:column="20">NULL<pos:position pos:line="68" pos:column="24"/></name></expr>)<pos:position pos:line="68" pos:column="25"/></condition><then pos:line="68" pos:column="25"> <block pos:line="68" pos:column="26">{
        <expr_stmt><expr><name><name pos:line="69" pos:column="9">mobj<pos:position pos:line="69" pos:column="13"/></name><operator pos:line="69" pos:column="13">-&gt;<pos:position pos:line="69" pos:column="18"/></operator><name pos:line="69" pos:column="15">m<pos:position pos:line="69" pos:column="16"/></name></name> <operator pos:line="69" pos:column="17">=<pos:position pos:line="69" pos:column="18"/></operator> <call><name pos:line="69" pos:column="19">malloc<pos:position pos:line="69" pos:column="25"/></name><argument_list pos:line="69" pos:column="25">(<argument><expr><name><name pos:line="69" pos:column="26">mobj<pos:position pos:line="69" pos:column="30"/></name><operator pos:line="69" pos:column="30">-&gt;<pos:position pos:line="69" pos:column="35"/></operator><name pos:line="69" pos:column="32">m_len<pos:position pos:line="69" pos:column="37"/></name></name></expr></argument>)<pos:position pos:line="69" pos:column="38"/></argument_list></call></expr>;<pos:position pos:line="69" pos:column="39"/></expr_stmt>
        <if pos:line="70" pos:column="9">if <condition pos:line="70" pos:column="12">(<expr><name><name pos:line="70" pos:column="13">mobj<pos:position pos:line="70" pos:column="17"/></name><operator pos:line="70" pos:column="17">-&gt;<pos:position pos:line="70" pos:column="22"/></operator><name pos:line="70" pos:column="19">m<pos:position pos:line="70" pos:column="20"/></name></name> <operator pos:line="70" pos:column="21">==<pos:position pos:line="70" pos:column="23"/></operator> <name pos:line="70" pos:column="24">NULL<pos:position pos:line="70" pos:column="28"/></name></expr>)<pos:position pos:line="70" pos:column="29"/></condition><then pos:line="70" pos:column="29"> <block pos:line="70" pos:column="30">{
            <return pos:line="71" pos:column="13">return <expr><name pos:line="71" pos:column="20">APR_ENOMEM<pos:position pos:line="71" pos:column="30"/></name></expr>;<pos:position pos:line="71" pos:column="31"/></return>
        }<pos:position pos:line="72" pos:column="10"/></block></then></if>
        <expr_stmt><expr><name><name pos:line="73" pos:column="9">obj<pos:position pos:line="73" pos:column="12"/></name><operator pos:line="73" pos:column="12">-&gt;<pos:position pos:line="73" pos:column="17"/></operator><name pos:line="73" pos:column="14">count<pos:position pos:line="73" pos:column="19"/></name></name> <operator pos:line="73" pos:column="20">=<pos:position pos:line="73" pos:column="21"/></operator> <literal type="number" pos:line="73" pos:column="22">0<pos:position pos:line="73" pos:column="23"/></literal></expr>;<pos:position pos:line="73" pos:column="24"/></expr_stmt>
    }<pos:position pos:line="74" pos:column="6"/></block></then></if>
    <expr_stmt><expr><name pos:line="75" pos:column="5">cur<pos:position pos:line="75" pos:column="8"/></name> <operator pos:line="75" pos:column="9">=<pos:position pos:line="75" pos:column="10"/></operator> <operator pos:line="75" pos:column="11">(<pos:position pos:line="75" pos:column="12"/></operator><name pos:line="75" pos:column="12">char<pos:position pos:line="75" pos:column="16"/></name><operator pos:line="75" pos:column="16">*<pos:position pos:line="75" pos:column="17"/></operator><operator pos:line="75" pos:column="17">)<pos:position pos:line="75" pos:column="18"/></operator> <name><name pos:line="75" pos:column="19">mobj<pos:position pos:line="75" pos:column="23"/></name><operator pos:line="75" pos:column="23">-&gt;<pos:position pos:line="75" pos:column="28"/></operator><name pos:line="75" pos:column="25">m<pos:position pos:line="75" pos:column="26"/></name></name> <operator pos:line="75" pos:column="27">+<pos:position pos:line="75" pos:column="28"/></operator> <name><name pos:line="75" pos:column="29">obj<pos:position pos:line="75" pos:column="32"/></name><operator pos:line="75" pos:column="32">-&gt;<pos:position pos:line="75" pos:column="37"/></operator><name pos:line="75" pos:column="34">count<pos:position pos:line="75" pos:column="39"/></name></name></expr>;<pos:position pos:line="75" pos:column="40"/></expr_stmt>

    <comment type="block" pos:line="77" pos:column="5">/* Iterate accross the brigade and populate the cache storage */</comment>
    <for pos:line="78" pos:column="5">for <control pos:line="78" pos:column="9">(<init><expr><name pos:line="78" pos:column="10">e<pos:position pos:line="78" pos:column="11"/></name> <operator pos:line="78" pos:column="12">=<pos:position pos:line="78" pos:column="13"/></operator> <call><name pos:line="78" pos:column="14">APR_BRIGADE_FIRST<pos:position pos:line="78" pos:column="31"/></name><argument_list pos:line="78" pos:column="31">(<argument><expr><name pos:line="78" pos:column="32">b<pos:position pos:line="78" pos:column="33"/></name></expr></argument>)<pos:position pos:line="78" pos:column="34"/></argument_list></call></expr>;<pos:position pos:line="78" pos:column="35"/></init>
         <condition><expr><name pos:line="79" pos:column="10">e<pos:position pos:line="79" pos:column="11"/></name> <operator pos:line="79" pos:column="12">!=<pos:position pos:line="79" pos:column="14"/></operator> <call><name pos:line="79" pos:column="15">APR_BRIGADE_SENTINEL<pos:position pos:line="79" pos:column="35"/></name><argument_list pos:line="79" pos:column="35">(<argument><expr><name pos:line="79" pos:column="36">b<pos:position pos:line="79" pos:column="37"/></name></expr></argument>)<pos:position pos:line="79" pos:column="38"/></argument_list></call></expr>;<pos:position pos:line="79" pos:column="39"/></condition>
         <incr><expr><name pos:line="80" pos:column="10">e<pos:position pos:line="80" pos:column="11"/></name> <operator pos:line="80" pos:column="12">=<pos:position pos:line="80" pos:column="13"/></operator> <call><name pos:line="80" pos:column="14">APR_BUCKET_NEXT<pos:position pos:line="80" pos:column="29"/></name><argument_list pos:line="80" pos:column="29">(<argument><expr><name pos:line="80" pos:column="30">e<pos:position pos:line="80" pos:column="31"/></name></expr></argument>)<pos:position pos:line="80" pos:column="32"/></argument_list></call></expr></incr>)<pos:position pos:line="80" pos:column="33"/></control>
    <block pos:line="81" pos:column="5">{
        <decl_stmt><decl><type><specifier pos:line="82" pos:column="9">const<pos:position pos:line="82" pos:column="14"/></specifier> <name pos:line="82" pos:column="15">char<pos:position pos:line="82" pos:column="19"/></name> <modifier pos:line="82" pos:column="20">*<pos:position pos:line="82" pos:column="21"/></modifier></type><name pos:line="82" pos:column="21">s<pos:position pos:line="82" pos:column="22"/></name></decl>;<pos:position pos:line="82" pos:column="23"/></decl_stmt>
        <decl_stmt><decl><type><name pos:line="83" pos:column="9">apr_size_t<pos:position pos:line="83" pos:column="19"/></name></type> <name pos:line="83" pos:column="20">len<pos:position pos:line="83" pos:column="23"/></name></decl>;<pos:position pos:line="83" pos:column="24"/></decl_stmt>

        <if pos:line="85" pos:column="9">if <condition pos:line="85" pos:column="12">(<expr><call><name pos:line="85" pos:column="13">APR_BUCKET_IS_EOS<pos:position pos:line="85" pos:column="30"/></name><argument_list pos:line="85" pos:column="30">(<argument><expr><name pos:line="85" pos:column="31">e<pos:position pos:line="85" pos:column="32"/></name></expr></argument>)<pos:position pos:line="85" pos:column="33"/></argument_list></call></expr>)<pos:position pos:line="85" pos:column="34"/></condition><then pos:line="85" pos:column="34"> <block pos:line="85" pos:column="35">{
            <if pos:line="86" pos:column="13">if <condition pos:line="86" pos:column="16">(<expr><name><name pos:line="86" pos:column="17">mobj<pos:position pos:line="86" pos:column="21"/></name><operator pos:line="86" pos:column="21">-&gt;<pos:position pos:line="86" pos:column="26"/></operator><name pos:line="86" pos:column="23">m_len<pos:position pos:line="86" pos:column="28"/></name></name> <operator pos:line="86" pos:column="29">&gt;<pos:position pos:line="86" pos:column="33"/></operator> <name><name pos:line="86" pos:column="31">obj<pos:position pos:line="86" pos:column="34"/></name><operator pos:line="86" pos:column="34">-&gt;<pos:position pos:line="86" pos:column="39"/></operator><name pos:line="86" pos:column="36">count<pos:position pos:line="86" pos:column="41"/></name></name></expr>)<pos:position pos:line="86" pos:column="42"/></condition><then pos:line="86" pos:column="42"> <block pos:line="86" pos:column="43">{
                <comment type="block" pos:line="87" pos:column="17">/* Caching a streamed response. Reallocate a buffer of the 
                 * correct size and copy the streamed response into that 
                 * buffer */</comment>
                <decl_stmt><decl><type><name pos:line="90" pos:column="17">char<pos:position pos:line="90" pos:column="21"/></name> <modifier pos:line="90" pos:column="22">*<pos:position pos:line="90" pos:column="23"/></modifier></type><name pos:line="90" pos:column="23">buf<pos:position pos:line="90" pos:column="26"/></name> <init pos:line="90" pos:column="27">= <expr><call><name pos:line="90" pos:column="29">malloc<pos:position pos:line="90" pos:column="35"/></name><argument_list pos:line="90" pos:column="35">(<argument><expr><name><name pos:line="90" pos:column="36">obj<pos:position pos:line="90" pos:column="39"/></name><operator pos:line="90" pos:column="39">-&gt;<pos:position pos:line="90" pos:column="44"/></operator><name pos:line="90" pos:column="41">count<pos:position pos:line="90" pos:column="46"/></name></name></expr></argument>)<pos:position pos:line="90" pos:column="47"/></argument_list></call></expr></init></decl>;<pos:position pos:line="90" pos:column="48"/></decl_stmt>
                <if pos:line="91" pos:column="17">if <condition pos:line="91" pos:column="20">(<expr><operator pos:line="91" pos:column="21">!<pos:position pos:line="91" pos:column="22"/></operator><name pos:line="91" pos:column="22">buf<pos:position pos:line="91" pos:column="25"/></name></expr>)<pos:position pos:line="91" pos:column="26"/></condition><then pos:line="91" pos:column="26"> <block pos:line="91" pos:column="27">{
                    <return pos:line="92" pos:column="21">return <expr><name pos:line="92" pos:column="28">APR_ENOMEM<pos:position pos:line="92" pos:column="38"/></name></expr>;<pos:position pos:line="92" pos:column="39"/></return>
                }<pos:position pos:line="93" pos:column="18"/></block></then></if>
                <expr_stmt><expr><call><name pos:line="94" pos:column="17">memcpy<pos:position pos:line="94" pos:column="23"/></name><argument_list pos:line="94" pos:column="23">(<argument><expr><name pos:line="94" pos:column="24">buf<pos:position pos:line="94" pos:column="27"/></name></expr></argument>, <argument><expr><name><name pos:line="94" pos:column="29">mobj<pos:position pos:line="94" pos:column="33"/></name><operator pos:line="94" pos:column="33">-&gt;<pos:position pos:line="94" pos:column="38"/></operator><name pos:line="94" pos:column="35">m<pos:position pos:line="94" pos:column="36"/></name></name></expr></argument>, <argument><expr><name><name pos:line="94" pos:column="38">obj<pos:position pos:line="94" pos:column="41"/></name><operator pos:line="94" pos:column="41">-&gt;<pos:position pos:line="94" pos:column="46"/></operator><name pos:line="94" pos:column="43">count<pos:position pos:line="94" pos:column="48"/></name></name></expr></argument>)<pos:position pos:line="94" pos:column="49"/></argument_list></call></expr>;<pos:position pos:line="94" pos:column="50"/></expr_stmt>
                <expr_stmt><expr><call><name pos:line="95" pos:column="17">free<pos:position pos:line="95" pos:column="21"/></name><argument_list pos:line="95" pos:column="21">(<argument><expr><name><name pos:line="95" pos:column="22">mobj<pos:position pos:line="95" pos:column="26"/></name><operator pos:line="95" pos:column="26">-&gt;<pos:position pos:line="95" pos:column="31"/></operator><name pos:line="95" pos:column="28">m<pos:position pos:line="95" pos:column="29"/></name></name></expr></argument>)<pos:position pos:line="95" pos:column="30"/></argument_list></call></expr>;<pos:position pos:line="95" pos:column="31"/></expr_stmt>
                <expr_stmt><expr><name><name pos:line="96" pos:column="17">mobj<pos:position pos:line="96" pos:column="21"/></name><operator pos:line="96" pos:column="21">-&gt;<pos:position pos:line="96" pos:column="26"/></operator><name pos:line="96" pos:column="23">m<pos:position pos:line="96" pos:column="24"/></name></name> <operator pos:line="96" pos:column="25">=<pos:position pos:line="96" pos:column="26"/></operator> <name pos:line="96" pos:column="27">buf<pos:position pos:line="96" pos:column="30"/></name></expr>;<pos:position pos:line="96" pos:column="31"/></expr_stmt>

                <comment type="block" pos:line="98" pos:column="17">/* Now comes the crufty part... there is no way to tell the
                 * cache that the size of the object has changed. We need
                 * to remove the object, update the size and re-add the 
                 * object, all under protection of the lock.
                 */</comment>
                <if pos:line="103" pos:column="17">if <condition pos:line="103" pos:column="20">(<expr><name><name pos:line="103" pos:column="21">sconf<pos:position pos:line="103" pos:column="26"/></name><operator pos:line="103" pos:column="26">-&gt;<pos:position pos:line="103" pos:column="31"/></operator><name pos:line="103" pos:column="28">lock<pos:position pos:line="103" pos:column="32"/></name></name></expr>)<pos:position pos:line="103" pos:column="33"/></condition><then pos:line="103" pos:column="33"> <block pos:line="103" pos:column="34">{
                    <expr_stmt><expr><call><name pos:line="104" pos:column="21">apr_thread_mutex_lock<pos:position pos:line="104" pos:column="42"/></name><argument_list pos:line="104" pos:column="42">(<argument><expr><name><name pos:line="104" pos:column="43">sconf<pos:position pos:line="104" pos:column="48"/></name><operator pos:line="104" pos:column="48">-&gt;<pos:position pos:line="104" pos:column="53"/></operator><name pos:line="104" pos:column="50">lock<pos:position pos:line="104" pos:column="54"/></name></name></expr></argument>)<pos:position pos:line="104" pos:column="55"/></argument_list></call></expr>;<pos:position pos:line="104" pos:column="56"/></expr_stmt>
                }<pos:position pos:line="105" pos:column="18"/></block></then></if>
                <comment type="block" pos:line="106" pos:column="17">/* Has the object been ejected from the cache?
                 */</comment>
                <expr_stmt><expr><name pos:line="108" pos:column="17">tobj<pos:position pos:line="108" pos:column="21"/></name> <operator pos:line="108" pos:column="22">=<pos:position pos:line="108" pos:column="23"/></operator> <operator pos:line="108" pos:column="24">(<pos:position pos:line="108" pos:column="25"/></operator><name pos:line="108" pos:column="25">cache_object_t<pos:position pos:line="108" pos:column="39"/></name> <operator pos:line="108" pos:column="40">*<pos:position pos:line="108" pos:column="41"/></operator><operator pos:line="108" pos:column="41">)<pos:position pos:line="108" pos:column="42"/></operator> <call><name pos:line="108" pos:column="43">cache_find<pos:position pos:line="108" pos:column="53"/></name><argument_list pos:line="108" pos:column="53">(<argument><expr><name><name pos:line="108" pos:column="54">sconf<pos:position pos:line="108" pos:column="59"/></name><operator pos:line="108" pos:column="59">-&gt;<pos:position pos:line="108" pos:column="64"/></operator><name pos:line="108" pos:column="61">cache_cache<pos:position pos:line="108" pos:column="72"/></name></name></expr></argument>, <argument><expr><name><name pos:line="108" pos:column="74">obj<pos:position pos:line="108" pos:column="77"/></name><operator pos:line="108" pos:column="77">-&gt;<pos:position pos:line="108" pos:column="82"/></operator><name pos:line="108" pos:column="79">key<pos:position pos:line="108" pos:column="82"/></name></name></expr></argument>)<pos:position pos:line="108" pos:column="83"/></argument_list></call></expr>;<pos:position pos:line="108" pos:column="84"/></expr_stmt>
                <if pos:line="109" pos:column="17">if <condition pos:line="109" pos:column="20">(<expr><name pos:line="109" pos:column="21">tobj<pos:position pos:line="109" pos:column="25"/></name> <operator pos:line="109" pos:column="26">==<pos:position pos:line="109" pos:column="28"/></operator> <name pos:line="109" pos:column="29">obj<pos:position pos:line="109" pos:column="32"/></name></expr>)<pos:position pos:line="109" pos:column="33"/></condition><then pos:line="109" pos:column="33"> <block pos:line="109" pos:column="34">{
                    <comment type="block" pos:line="110" pos:column="21">/* Object is still in the cache, remove it, update the len field then
                     * replace it under protection of sconf-&gt;lock.
                     */</comment>
                    <expr_stmt><expr><call><name pos:line="113" pos:column="21">cache_remove<pos:position pos:line="113" pos:column="33"/></name><argument_list pos:line="113" pos:column="33">(<argument><expr><name><name pos:line="113" pos:column="34">sconf<pos:position pos:line="113" pos:column="39"/></name><operator pos:line="113" pos:column="39">-&gt;<pos:position pos:line="113" pos:column="44"/></operator><name pos:line="113" pos:column="41">cache_cache<pos:position pos:line="113" pos:column="52"/></name></name></expr></argument>, <argument><expr><name pos:line="113" pos:column="54">obj<pos:position pos:line="113" pos:column="57"/></name></expr></argument>)<pos:position pos:line="113" pos:column="58"/></argument_list></call></expr>;<pos:position pos:line="113" pos:column="59"/></expr_stmt></block></then></if></block></then></if></block></then></if></block></for></block></function>
              </unit>

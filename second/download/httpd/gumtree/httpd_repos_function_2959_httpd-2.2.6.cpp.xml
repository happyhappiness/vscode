<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/httpd/gumtree/httpd_repos_function_2959_httpd-2.2.6.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">apr_status_t<pos:position pos:line="1" pos:column="20"/></name></type> <name pos:line="1" pos:column="21">alloc_cleanup<pos:position pos:line="1" pos:column="34"/></name><parameter_list pos:line="1" pos:column="34">(<parameter><decl><type><name pos:line="1" pos:column="35">void<pos:position pos:line="1" pos:column="39"/></name> <modifier pos:line="1" pos:column="40">*<pos:position pos:line="1" pos:column="41"/></modifier></type><name pos:line="1" pos:column="41">data<pos:position pos:line="1" pos:column="45"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="46"/></parameter_list>
<block pos:line="2" pos:column="1">{
    <decl_stmt><decl><type><name pos:line="3" pos:column="5">apr_bucket_alloc_t<pos:position pos:line="3" pos:column="23"/></name> <modifier pos:line="3" pos:column="24">*<pos:position pos:line="3" pos:column="25"/></modifier></type><name pos:line="3" pos:column="25">list<pos:position pos:line="3" pos:column="29"/></name> <init pos:line="3" pos:column="30">= <expr><name pos:line="3" pos:column="32">data<pos:position pos:line="3" pos:column="36"/></name></expr></init></decl>;<pos:position pos:line="3" pos:column="37"/></decl_stmt>

    <expr_stmt><expr><call><name pos:line="5" pos:column="5">apr_allocator_free<pos:position pos:line="5" pos:column="23"/></name><argument_list pos:line="5" pos:column="23">(<argument><expr><name><name pos:line="5" pos:column="24">list<pos:position pos:line="5" pos:column="28"/></name><operator pos:line="5" pos:column="28">-&gt;<pos:position pos:line="5" pos:column="33"/></operator><name pos:line="5" pos:column="30">allocator<pos:position pos:line="5" pos:column="39"/></name></name></expr></argument>, <argument><expr><name><name pos:line="5" pos:column="41">list<pos:position pos:line="5" pos:column="45"/></name><operator pos:line="5" pos:column="45">-&gt;<pos:position pos:line="5" pos:column="50"/></operator><name pos:line="5" pos:column="47">blocks<pos:position pos:line="5" pos:column="53"/></name></name></expr></argument>)<pos:position pos:line="5" pos:column="54"/></argument_list></call></expr>;<pos:position pos:line="5" pos:column="55"/></expr_stmt>

<cpp:if pos:line="7" pos:column="1">#<cpp:directive pos:line="7" pos:column="2">if<pos:position pos:line="7" pos:column="4"/></cpp:directive> <expr><name pos:line="7" pos:column="5">APR_POOL_DEBUG<pos:position pos:line="7" pos:column="19"/></name></expr></cpp:if>
    <if pos:line="8" pos:column="5">if <condition pos:line="8" pos:column="8">(<expr><name><name pos:line="8" pos:column="9">list<pos:position pos:line="8" pos:column="13"/></name><operator pos:line="8" pos:column="13">-&gt;<pos:position pos:line="8" pos:column="18"/></operator><name pos:line="8" pos:column="15">pool<pos:position pos:line="8" pos:column="19"/></name></name> <operator pos:line="8" pos:column="20">&amp;&amp;<pos:position pos:line="8" pos:column="30"/></operator> <name><name pos:line="8" pos:column="23">list<pos:position pos:line="8" pos:column="27"/></name><operator pos:line="8" pos:column="27">-&gt;<pos:position pos:line="8" pos:column="32"/></operator><name pos:line="8" pos:column="29">allocator<pos:position pos:line="8" pos:column="38"/></name></name> <operator pos:line="8" pos:column="39">!=<pos:position pos:line="8" pos:column="41"/></operator> <call><name pos:line="8" pos:column="42">apr_pool_allocator_get<pos:position pos:line="8" pos:column="64"/></name><argument_list pos:line="8" pos:column="64">(<argument><expr><name><name pos:line="8" pos:column="65">list<pos:position pos:line="8" pos:column="69"/></name><operator pos:line="8" pos:column="69">-&gt;<pos:position pos:line="8" pos:column="74"/></operator><name pos:line="8" pos:column="71">pool<pos:position pos:line="8" pos:column="75"/></name></name></expr></argument>)<pos:position pos:line="8" pos:column="76"/></argument_list></call></expr>)<pos:position pos:line="8" pos:column="77"/></condition><then pos:line="8" pos:column="77"> <block pos:line="8" pos:column="78">{
        <expr_stmt><expr><call><name pos:line="9" pos:column="9">apr_allocator_destroy<pos:position pos:line="9" pos:column="30"/></name><argument_list pos:line="9" pos:column="30">(<argument><expr><name><name pos:line="9" pos:column="31">list<pos:position pos:line="9" pos:column="35"/></name><operator pos:line="9" pos:column="35">-&gt;<pos:position pos:line="9" pos:column="40"/></operator><name pos:line="9" pos:column="37">allocator<pos:position pos:line="9" pos:column="46"/></name></name></expr></argument>)<pos:position pos:line="9" pos:column="47"/></argument_list></call></expr>;<pos:position pos:line="9" pos:column="48"/></expr_stmt>
    }<pos:position pos:line="10" pos:column="6"/></block></then></if>
<cpp:endif pos:line="11" pos:column="1">#<cpp:directive pos:line="11" pos:column="2">endif<pos:position pos:line="11" pos:column="7"/></cpp:directive></cpp:endif>

    <return pos:line="13" pos:column="5">return <expr><name pos:line="13" pos:column="12">APR_SUCCESS<pos:position pos:line="13" pos:column="23"/></name></expr>;<pos:position pos:line="13" pos:column="24"/></return>
}<pos:position pos:line="14" pos:column="2"/></block></function></unit>

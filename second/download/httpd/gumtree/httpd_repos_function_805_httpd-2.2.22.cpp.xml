<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/httpd/gumtree/httpd_repos_function_805_httpd-2.2.22.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">void<pos:position pos:line="1" pos:column="5"/></name></type> <name pos:line="1" pos:column="6">ssl_hook_ConfigTest<pos:position pos:line="1" pos:column="25"/></name><parameter_list pos:line="1" pos:column="25">(<parameter><decl><type><name pos:line="1" pos:column="26">apr_pool_t<pos:position pos:line="1" pos:column="36"/></name> <modifier pos:line="1" pos:column="37">*<pos:position pos:line="1" pos:column="38"/></modifier></type><name pos:line="1" pos:column="38">pconf<pos:position pos:line="1" pos:column="43"/></name></decl></parameter>, <parameter><decl><type><name pos:line="1" pos:column="45">server_rec<pos:position pos:line="1" pos:column="55"/></name> <modifier pos:line="1" pos:column="56">*<pos:position pos:line="1" pos:column="57"/></modifier></type><name pos:line="1" pos:column="57">s<pos:position pos:line="1" pos:column="58"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="59"/></parameter_list>
<block pos:line="2" pos:column="1">{
    <if pos:line="3" pos:column="5">if <condition pos:line="3" pos:column="8">(<expr><operator pos:line="3" pos:column="9">!<pos:position pos:line="3" pos:column="10"/></operator><call><name pos:line="3" pos:column="10">ap_exists_config_define<pos:position pos:line="3" pos:column="33"/></name><argument_list pos:line="3" pos:column="33">(<argument><expr><literal type="string" pos:line="3" pos:column="34">"DUMP_CERTS"<pos:position pos:line="3" pos:column="46"/></literal></expr></argument>)<pos:position pos:line="3" pos:column="47"/></argument_list></call></expr>)<pos:position pos:line="3" pos:column="48"/></condition><then pos:line="3" pos:column="48"> <block pos:line="3" pos:column="49">{
        <return pos:line="4" pos:column="9">return;<pos:position pos:line="4" pos:column="16"/></return>
    }<pos:position pos:line="5" pos:column="6"/></block></then></if>

    <comment type="block" pos:line="7" pos:column="5">/* Dump the filenames of all configured server certificates to
     * stdout. */</comment>
    <while pos:line="9" pos:column="5">while <condition pos:line="9" pos:column="11">(<expr><name pos:line="9" pos:column="12">s<pos:position pos:line="9" pos:column="13"/></name></expr>)<pos:position pos:line="9" pos:column="14"/></condition> <block pos:line="9" pos:column="15">{
        <decl_stmt><decl><type><name pos:line="10" pos:column="9">SSLSrvConfigRec<pos:position pos:line="10" pos:column="24"/></name> <modifier pos:line="10" pos:column="25">*<pos:position pos:line="10" pos:column="26"/></modifier></type><name pos:line="10" pos:column="26">sc<pos:position pos:line="10" pos:column="28"/></name> <init pos:line="10" pos:column="29">= <expr><call><name pos:line="10" pos:column="31">mySrvConfig<pos:position pos:line="10" pos:column="42"/></name><argument_list pos:line="10" pos:column="42">(<argument><expr><name pos:line="10" pos:column="43">s<pos:position pos:line="10" pos:column="44"/></name></expr></argument>)<pos:position pos:line="10" pos:column="45"/></argument_list></call></expr></init></decl>;<pos:position pos:line="10" pos:column="46"/></decl_stmt>

        <if pos:line="12" pos:column="9">if <condition pos:line="12" pos:column="12">(<expr><name pos:line="12" pos:column="13">sc<pos:position pos:line="12" pos:column="15"/></name> <operator pos:line="12" pos:column="16">&amp;&amp;<pos:position pos:line="12" pos:column="26"/></operator> <name><name pos:line="12" pos:column="19">sc<pos:position pos:line="12" pos:column="21"/></name><operator pos:line="12" pos:column="21">-&gt;<pos:position pos:line="12" pos:column="26"/></operator><name pos:line="12" pos:column="23">server<pos:position pos:line="12" pos:column="29"/></name></name> <operator pos:line="12" pos:column="30">&amp;&amp;<pos:position pos:line="12" pos:column="40"/></operator> <name><name pos:line="12" pos:column="33">sc<pos:position pos:line="12" pos:column="35"/></name><operator pos:line="12" pos:column="35">-&gt;<pos:position pos:line="12" pos:column="40"/></operator><name pos:line="12" pos:column="37">server<pos:position pos:line="12" pos:column="43"/></name><operator pos:line="12" pos:column="43">-&gt;<pos:position pos:line="12" pos:column="48"/></operator><name pos:line="12" pos:column="45">pks<pos:position pos:line="12" pos:column="48"/></name></name></expr>)<pos:position pos:line="12" pos:column="49"/></condition><then pos:line="12" pos:column="49"> <block pos:line="12" pos:column="50">{
            <decl_stmt><decl><type><name pos:line="13" pos:column="13">modssl_pk_server_t<pos:position pos:line="13" pos:column="31"/></name> <modifier pos:line="13" pos:column="32">*<pos:position pos:line="13" pos:column="33"/></modifier><specifier pos:line="13" pos:column="33">const<pos:position pos:line="13" pos:column="38"/></specifier></type> <name pos:line="13" pos:column="39">pks<pos:position pos:line="13" pos:column="42"/></name> <init pos:line="13" pos:column="43">= <expr><name><name pos:line="13" pos:column="45">sc<pos:position pos:line="13" pos:column="47"/></name><operator pos:line="13" pos:column="47">-&gt;<pos:position pos:line="13" pos:column="52"/></operator><name pos:line="13" pos:column="49">server<pos:position pos:line="13" pos:column="55"/></name><operator pos:line="13" pos:column="55">-&gt;<pos:position pos:line="13" pos:column="60"/></operator><name pos:line="13" pos:column="57">pks<pos:position pos:line="13" pos:column="60"/></name></name></expr></init></decl>;<pos:position pos:line="13" pos:column="61"/></decl_stmt>
            <decl_stmt><decl><type><name pos:line="14" pos:column="13">int<pos:position pos:line="14" pos:column="16"/></name></type> <name pos:line="14" pos:column="17">i<pos:position pos:line="14" pos:column="18"/></name></decl>;<pos:position pos:line="14" pos:column="19"/></decl_stmt>

            <for pos:line="16" pos:column="13">for <control pos:line="16" pos:column="17">(<init><expr><name pos:line="16" pos:column="18">i<pos:position pos:line="16" pos:column="19"/></name> <operator pos:line="16" pos:column="20">=<pos:position pos:line="16" pos:column="21"/></operator> <literal type="number" pos:line="16" pos:column="22">0<pos:position pos:line="16" pos:column="23"/></literal></expr>;<pos:position pos:line="16" pos:column="24"/></init> <condition><expr><operator pos:line="16" pos:column="25">(<pos:position pos:line="16" pos:column="26"/></operator><name pos:line="16" pos:column="26">i<pos:position pos:line="16" pos:column="27"/></name> <operator pos:line="16" pos:column="28">&lt;<pos:position pos:line="16" pos:column="32"/></operator> <name pos:line="16" pos:column="30">SSL_AIDX_MAX<pos:position pos:line="16" pos:column="42"/></name><operator pos:line="16" pos:column="42">)<pos:position pos:line="16" pos:column="43"/></operator> <operator pos:line="16" pos:column="44">&amp;&amp;<pos:position pos:line="16" pos:column="54"/></operator> <name><name pos:line="16" pos:column="47">pks<pos:position pos:line="16" pos:column="50"/></name><operator pos:line="16" pos:column="50">-&gt;<pos:position pos:line="16" pos:column="55"/></operator><name pos:line="16" pos:column="52">cert_files<pos:position pos:line="16" pos:column="62"/></name><index pos:line="16" pos:column="62">[<expr><name pos:line="16" pos:column="63">i<pos:position pos:line="16" pos:column="64"/></name></expr>]<pos:position pos:line="16" pos:column="65"/></index></name></expr>;<pos:position pos:line="16" pos:column="66"/></condition> <incr><expr><name pos:line="16" pos:column="67">i<pos:position pos:line="16" pos:column="68"/></name><operator pos:line="16" pos:column="68">++<pos:position pos:line="16" pos:column="70"/></operator></expr></incr>)<pos:position pos:line="16" pos:column="71"/></control> <block pos:line="16" pos:column="72">{
                <expr_stmt><expr><call><name pos:line="17" pos:column="17">printf<pos:position pos:line="17" pos:column="23"/></name><argument_list pos:line="17" pos:column="23">(<argument><expr><literal type="string" pos:line="17" pos:column="24">"%s\n"<pos:position pos:line="17" pos:column="30"/></literal></expr></argument>, <argument><expr><name><name pos:line="17" pos:column="32">pks<pos:position pos:line="17" pos:column="35"/></name><operator pos:line="17" pos:column="35">-&gt;<pos:position pos:line="17" pos:column="40"/></operator><name pos:line="17" pos:column="37">cert_files<pos:position pos:line="17" pos:column="47"/></name><index pos:line="17" pos:column="47">[<expr><name pos:line="17" pos:column="48">i<pos:position pos:line="17" pos:column="49"/></name></expr>]<pos:position pos:line="17" pos:column="50"/></index></name></expr></argument>)<pos:position pos:line="17" pos:column="51"/></argument_list></call></expr>;<pos:position pos:line="17" pos:column="52"/></expr_stmt>
            }<pos:position pos:line="18" pos:column="14"/></block></for>
        }<pos:position pos:line="19" pos:column="10"/></block></then></if>

        <expr_stmt><expr><name pos:line="21" pos:column="9">s<pos:position pos:line="21" pos:column="10"/></name> <operator pos:line="21" pos:column="11">=<pos:position pos:line="21" pos:column="12"/></operator> <name><name pos:line="21" pos:column="13">s<pos:position pos:line="21" pos:column="14"/></name><operator pos:line="21" pos:column="14">-&gt;<pos:position pos:line="21" pos:column="19"/></operator><name pos:line="21" pos:column="16">next<pos:position pos:line="21" pos:column="20"/></name></name></expr>;<pos:position pos:line="21" pos:column="21"/></expr_stmt>
    }<pos:position pos:line="22" pos:column="6"/></block></while>

}<pos:position pos:line="24" pos:column="2"/></block></function></unit>

<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/httpd/gumtree/httpd_repos_function_3353_httpd-2.2.22.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">void<pos:position pos:line="1" pos:column="12"/></name> <name pos:line="1" pos:column="13">PTRCALL<pos:position pos:line="1" pos:column="20"/></name>
<name pos:line="2" pos:column="1">PREFIX<pos:position pos:line="2" pos:column="7"/></name></type>(<name pos:line="2" pos:column="8">updatePosition<pos:position pos:line="2" pos:column="22"/></name>)<parameter_list pos:line="2" pos:column="23">(<parameter><decl><type><specifier pos:line="2" pos:column="24">const<pos:position pos:line="2" pos:column="29"/></specifier> <name pos:line="2" pos:column="30">ENCODING<pos:position pos:line="2" pos:column="38"/></name> <modifier pos:line="2" pos:column="39">*<pos:position pos:line="2" pos:column="40"/></modifier></type><name pos:line="2" pos:column="40">enc<pos:position pos:line="2" pos:column="43"/></name></decl></parameter>,
                       <parameter><decl><type><specifier pos:line="3" pos:column="24">const<pos:position pos:line="3" pos:column="29"/></specifier> <name pos:line="3" pos:column="30">char<pos:position pos:line="3" pos:column="34"/></name> <modifier pos:line="3" pos:column="35">*<pos:position pos:line="3" pos:column="36"/></modifier></type><name pos:line="3" pos:column="36">ptr<pos:position pos:line="3" pos:column="39"/></name></decl></parameter>,
                       <parameter><decl><type><specifier pos:line="4" pos:column="24">const<pos:position pos:line="4" pos:column="29"/></specifier> <name pos:line="4" pos:column="30">char<pos:position pos:line="4" pos:column="34"/></name> <modifier pos:line="4" pos:column="35">*<pos:position pos:line="4" pos:column="36"/></modifier></type><name pos:line="4" pos:column="36">end<pos:position pos:line="4" pos:column="39"/></name></decl></parameter>,
                       <parameter><decl><type><name pos:line="5" pos:column="24">POSITION<pos:position pos:line="5" pos:column="32"/></name> <modifier pos:line="5" pos:column="33">*<pos:position pos:line="5" pos:column="34"/></modifier></type><name pos:line="5" pos:column="34">pos<pos:position pos:line="5" pos:column="37"/></name></decl></parameter>)<pos:position pos:line="5" pos:column="38"/></parameter_list>
<block pos:line="6" pos:column="1">{
  <while pos:line="7" pos:column="3">while <condition pos:line="7" pos:column="9">(<expr><name pos:line="7" pos:column="10">ptr<pos:position pos:line="7" pos:column="13"/></name> <operator pos:line="7" pos:column="14">&lt;<pos:position pos:line="7" pos:column="18"/></operator> <name pos:line="7" pos:column="16">end<pos:position pos:line="7" pos:column="19"/></name></expr>)<pos:position pos:line="7" pos:column="20"/></condition> <block pos:line="7" pos:column="21">{
    <switch pos:line="8" pos:column="5">switch <condition pos:line="8" pos:column="12">(<expr><call><name pos:line="8" pos:column="13">BYTE_TYPE<pos:position pos:line="8" pos:column="22"/></name><argument_list pos:line="8" pos:column="22">(<argument><expr><name pos:line="8" pos:column="23">enc<pos:position pos:line="8" pos:column="26"/></name></expr></argument>, <argument><expr><name pos:line="8" pos:column="28">ptr<pos:position pos:line="8" pos:column="31"/></name></expr></argument>)<pos:position pos:line="8" pos:column="32"/></argument_list></call></expr>)<pos:position pos:line="8" pos:column="33"/></condition> <block pos:line="8" pos:column="34">{
<cpp:define pos:line="9" pos:column="1">#<cpp:directive pos:line="9" pos:column="2">define<pos:position pos:line="9" pos:column="8"/></cpp:directive> <cpp:macro><name pos:line="9" pos:column="9">LEAD_CASE<pos:position pos:line="9" pos:column="18"/></name><parameter_list pos:line="9" pos:column="18">(<parameter><type><name pos:line="9" pos:column="19">n<pos:position pos:line="9" pos:column="20"/></name></type></parameter>)<pos:position pos:line="9" pos:column="21"/></parameter_list></cpp:macro> \
    <cpp:value pos:line="10" pos:column="5">case BT_LEAD ## n: \
      ptr += n; \
      break;<pos:position pos:line="12" pos:column="13"/></cpp:value></cpp:define>
    <macro><name pos:line="13" pos:column="5">LEAD_CASE<pos:position pos:line="13" pos:column="14"/></name><argument_list pos:line="13" pos:column="14">(<argument><literal type="number" pos:line="13" pos:column="15">2<pos:position pos:line="13" pos:column="16"/></literal></argument>)<pos:position pos:line="13" pos:column="17"/></argument_list></macro> <macro><name pos:line="13" pos:column="18">LEAD_CASE<pos:position pos:line="13" pos:column="27"/></name><argument_list pos:line="13" pos:column="27">(<argument><literal type="number" pos:line="13" pos:column="28">3<pos:position pos:line="13" pos:column="29"/></literal></argument>)<pos:position pos:line="13" pos:column="30"/></argument_list></macro> <macro><name pos:line="13" pos:column="31">LEAD_CASE<pos:position pos:line="13" pos:column="40"/></name><argument_list pos:line="13" pos:column="40">(<argument><literal type="number" pos:line="13" pos:column="41">4<pos:position pos:line="13" pos:column="42"/></literal></argument>)<pos:position pos:line="13" pos:column="43"/></argument_list></macro>
<cpp:undef pos:line="14" pos:column="1">#<cpp:directive pos:line="14" pos:column="2">undef<pos:position pos:line="14" pos:column="7"/></cpp:directive> <name pos:line="14" pos:column="8">LEAD_CASE<pos:position pos:line="14" pos:column="17"/></name></cpp:undef>
    <case pos:line="15" pos:column="5">case <expr><name pos:line="15" pos:column="10">BT_LF<pos:position pos:line="15" pos:column="15"/></name></expr>:<pos:position pos:line="15" pos:column="16"/></case>
      <expr_stmt><expr><name><name pos:line="16" pos:column="7">pos<pos:position pos:line="16" pos:column="10"/></name><operator pos:line="16" pos:column="10">-&gt;<pos:position pos:line="16" pos:column="15"/></operator><name pos:line="16" pos:column="12">columnNumber<pos:position pos:line="16" pos:column="24"/></name></name> <operator pos:line="16" pos:column="25">=<pos:position pos:line="16" pos:column="26"/></operator> <operator pos:line="16" pos:column="27">(<pos:position pos:line="16" pos:column="28"/></operator><name pos:line="16" pos:column="28">unsigned<pos:position pos:line="16" pos:column="36"/></name><operator pos:line="16" pos:column="36">)<pos:position pos:line="16" pos:column="37"/></operator><operator pos:line="16" pos:column="37">-<pos:position pos:line="16" pos:column="38"/></operator><literal type="number" pos:line="16" pos:column="38">1<pos:position pos:line="16" pos:column="39"/></literal></expr>;<pos:position pos:line="16" pos:column="40"/></expr_stmt>
      <expr_stmt><expr><name><name pos:line="17" pos:column="7">pos<pos:position pos:line="17" pos:column="10"/></name><operator pos:line="17" pos:column="10">-&gt;<pos:position pos:line="17" pos:column="15"/></operator><name pos:line="17" pos:column="12">lineNumber<pos:position pos:line="17" pos:column="22"/></name></name><operator pos:line="17" pos:column="22">++<pos:position pos:line="17" pos:column="24"/></operator></expr>;<pos:position pos:line="17" pos:column="25"/></expr_stmt>
      <expr_stmt><expr><name pos:line="18" pos:column="7">ptr<pos:position pos:line="18" pos:column="10"/></name> <operator pos:line="18" pos:column="11">+=<pos:position pos:line="18" pos:column="13"/></operator> <call><name pos:line="18" pos:column="14">MINBPC<pos:position pos:line="18" pos:column="20"/></name><argument_list pos:line="18" pos:column="20">(<argument><expr><name pos:line="18" pos:column="21">enc<pos:position pos:line="18" pos:column="24"/></name></expr></argument>)<pos:position pos:line="18" pos:column="25"/></argument_list></call></expr>;<pos:position pos:line="18" pos:column="26"/></expr_stmt>
      <break pos:line="19" pos:column="7">break;<pos:position pos:line="19" pos:column="13"/></break>
    <case pos:line="20" pos:column="5">case <expr><name pos:line="20" pos:column="10">BT_CR<pos:position pos:line="20" pos:column="15"/></name></expr>:<pos:position pos:line="20" pos:column="16"/></case>
      <expr_stmt><expr><name><name pos:line="21" pos:column="7">pos<pos:position pos:line="21" pos:column="10"/></name><operator pos:line="21" pos:column="10">-&gt;<pos:position pos:line="21" pos:column="15"/></operator><name pos:line="21" pos:column="12">lineNumber<pos:position pos:line="21" pos:column="22"/></name></name><operator pos:line="21" pos:column="22">++<pos:position pos:line="21" pos:column="24"/></operator></expr>;<pos:position pos:line="21" pos:column="25"/></expr_stmt>
      <expr_stmt><expr><name pos:line="22" pos:column="7">ptr<pos:position pos:line="22" pos:column="10"/></name> <operator pos:line="22" pos:column="11">+=<pos:position pos:line="22" pos:column="13"/></operator> <call><name pos:line="22" pos:column="14">MINBPC<pos:position pos:line="22" pos:column="20"/></name><argument_list pos:line="22" pos:column="20">(<argument><expr><name pos:line="22" pos:column="21">enc<pos:position pos:line="22" pos:column="24"/></name></expr></argument>)<pos:position pos:line="22" pos:column="25"/></argument_list></call></expr>;<pos:position pos:line="22" pos:column="26"/></expr_stmt>
      <if pos:line="23" pos:column="7">if <condition pos:line="23" pos:column="10">(<expr><name pos:line="23" pos:column="11">ptr<pos:position pos:line="23" pos:column="14"/></name> <operator pos:line="23" pos:column="15">!=<pos:position pos:line="23" pos:column="17"/></operator> <name pos:line="23" pos:column="18">end<pos:position pos:line="23" pos:column="21"/></name> <operator pos:line="23" pos:column="22">&amp;&amp;<pos:position pos:line="23" pos:column="32"/></operator> <call><name pos:line="23" pos:column="25">BYTE_TYPE<pos:position pos:line="23" pos:column="34"/></name><argument_list pos:line="23" pos:column="34">(<argument><expr><name pos:line="23" pos:column="35">enc<pos:position pos:line="23" pos:column="38"/></name></expr></argument>, <argument><expr><name pos:line="23" pos:column="40">ptr<pos:position pos:line="23" pos:column="43"/></name></expr></argument>)<pos:position pos:line="23" pos:column="44"/></argument_list></call> <operator pos:line="23" pos:column="45">==<pos:position pos:line="23" pos:column="47"/></operator> <name pos:line="23" pos:column="48">BT_LF<pos:position pos:line="23" pos:column="53"/></name></expr>)<pos:position pos:line="23" pos:column="54"/></condition><then pos:line="23" pos:column="54">
        <block type="pseudo"><expr_stmt><expr><name pos:line="24" pos:column="9">ptr<pos:position pos:line="24" pos:column="12"/></name> <operator pos:line="24" pos:column="13">+=<pos:position pos:line="24" pos:column="15"/></operator> <call><name pos:line="24" pos:column="16">MINBPC<pos:position pos:line="24" pos:column="22"/></name><argument_list pos:line="24" pos:column="22">(<argument><expr><name pos:line="24" pos:column="23">enc<pos:position pos:line="24" pos:column="26"/></name></expr></argument>)<pos:position pos:line="24" pos:column="27"/></argument_list></call></expr>;<pos:position pos:line="24" pos:column="28"/></expr_stmt></block></then></if>
      <expr_stmt><expr><name><name pos:line="25" pos:column="7">pos<pos:position pos:line="25" pos:column="10"/></name><operator pos:line="25" pos:column="10">-&gt;<pos:position pos:line="25" pos:column="15"/></operator><name pos:line="25" pos:column="12">columnNumber<pos:position pos:line="25" pos:column="24"/></name></name> <operator pos:line="25" pos:column="25">=<pos:position pos:line="25" pos:column="26"/></operator> <operator pos:line="25" pos:column="27">(<pos:position pos:line="25" pos:column="28"/></operator><name pos:line="25" pos:column="28">unsigned<pos:position pos:line="25" pos:column="36"/></name><operator pos:line="25" pos:column="36">)<pos:position pos:line="25" pos:column="37"/></operator><operator pos:line="25" pos:column="37">-<pos:position pos:line="25" pos:column="38"/></operator><literal type="number" pos:line="25" pos:column="38">1<pos:position pos:line="25" pos:column="39"/></literal></expr>;<pos:position pos:line="25" pos:column="40"/></expr_stmt>
      <break pos:line="26" pos:column="7">break;<pos:position pos:line="26" pos:column="13"/></break>
    <default pos:line="27" pos:column="5">default:<pos:position pos:line="27" pos:column="13"/></default>
      <expr_stmt><expr><name pos:line="28" pos:column="7">ptr<pos:position pos:line="28" pos:column="10"/></name> <operator pos:line="28" pos:column="11">+=<pos:position pos:line="28" pos:column="13"/></operator> <call><name pos:line="28" pos:column="14">MINBPC<pos:position pos:line="28" pos:column="20"/></name><argument_list pos:line="28" pos:column="20">(<argument><expr><name pos:line="28" pos:column="21">enc<pos:position pos:line="28" pos:column="24"/></name></expr></argument>)<pos:position pos:line="28" pos:column="25"/></argument_list></call></expr>;<pos:position pos:line="28" pos:column="26"/></expr_stmt>
      <break pos:line="29" pos:column="7">break;<pos:position pos:line="29" pos:column="13"/></break>
    }<pos:position pos:line="30" pos:column="6"/></block></switch>
    <expr_stmt><expr><name><name pos:line="31" pos:column="5">pos<pos:position pos:line="31" pos:column="8"/></name><operator pos:line="31" pos:column="8">-&gt;<pos:position pos:line="31" pos:column="13"/></operator><name pos:line="31" pos:column="10">columnNumber<pos:position pos:line="31" pos:column="22"/></name></name><operator pos:line="31" pos:column="22">++<pos:position pos:line="31" pos:column="24"/></operator></expr>;<pos:position pos:line="31" pos:column="25"/></expr_stmt>
  }<pos:position pos:line="32" pos:column="4"/></block></while>
}<pos:position pos:line="33" pos:column="2"/></block></function></unit>

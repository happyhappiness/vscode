<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/httpd/gumtree/httpd_repos_function_409_httpd-2.2.17.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><specifier pos:line="1" pos:column="8">const<pos:position pos:line="1" pos:column="13"/></specifier> <name pos:line="1" pos:column="14">char<pos:position pos:line="1" pos:column="18"/></name> <modifier pos:line="1" pos:column="19">*<pos:position pos:line="1" pos:column="20"/></modifier></type><name pos:line="1" pos:column="20">log_cookie<pos:position pos:line="1" pos:column="30"/></name><parameter_list pos:line="1" pos:column="30">(<parameter><decl><type><name pos:line="1" pos:column="31">request_rec<pos:position pos:line="1" pos:column="42"/></name> <modifier pos:line="1" pos:column="43">*<pos:position pos:line="1" pos:column="44"/></modifier></type><name pos:line="1" pos:column="44">r<pos:position pos:line="1" pos:column="45"/></name></decl></parameter>, <parameter><decl><type><name pos:line="1" pos:column="47">char<pos:position pos:line="1" pos:column="51"/></name> <modifier pos:line="1" pos:column="52">*<pos:position pos:line="1" pos:column="53"/></modifier></type><name pos:line="1" pos:column="53">a<pos:position pos:line="1" pos:column="54"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="55"/></parameter_list>
<block pos:line="2" pos:column="1">{
    <decl_stmt><decl><type><specifier pos:line="3" pos:column="5">const<pos:position pos:line="3" pos:column="10"/></specifier> <name pos:line="3" pos:column="11">char<pos:position pos:line="3" pos:column="15"/></name> <modifier pos:line="3" pos:column="16">*<pos:position pos:line="3" pos:column="17"/></modifier></type><name pos:line="3" pos:column="17">cookies_entry<pos:position pos:line="3" pos:column="30"/></name></decl>;<pos:position pos:line="3" pos:column="31"/></decl_stmt>

    <comment type="block" pos:line="5" pos:column="5">/*
     * This supports Netscape version 0 cookies while being tolerant to
     * some properties of RFC2109/2965 version 1 cookies:
     * - case-insensitive match of cookie names
     * - white space between the tokens
     * It does not support the following version 1 features:
     * - quoted strings as cookie values
     * - commas to separate cookies
     */</comment>

    <if pos:line="15" pos:column="5">if <condition pos:line="15" pos:column="8">(<expr><operator pos:line="15" pos:column="9">(<pos:position pos:line="15" pos:column="10"/></operator><name pos:line="15" pos:column="10">cookies_entry<pos:position pos:line="15" pos:column="23"/></name> <operator pos:line="15" pos:column="24">=<pos:position pos:line="15" pos:column="25"/></operator> <call><name pos:line="15" pos:column="26">apr_table_get<pos:position pos:line="15" pos:column="39"/></name><argument_list pos:line="15" pos:column="39">(<argument><expr><name><name pos:line="15" pos:column="40">r<pos:position pos:line="15" pos:column="41"/></name><operator pos:line="15" pos:column="41">-&gt;<pos:position pos:line="15" pos:column="46"/></operator><name pos:line="15" pos:column="43">headers_in<pos:position pos:line="15" pos:column="53"/></name></name></expr></argument>, <argument><expr><literal type="string" pos:line="15" pos:column="55">"Cookie"<pos:position pos:line="15" pos:column="63"/></literal></expr></argument>)<pos:position pos:line="15" pos:column="64"/></argument_list></call><operator pos:line="15" pos:column="64">)<pos:position pos:line="15" pos:column="65"/></operator></expr>)<pos:position pos:line="15" pos:column="66"/></condition><then pos:line="15" pos:column="66"> <block pos:line="15" pos:column="67">{
        <decl_stmt><decl><type><name pos:line="16" pos:column="9">char<pos:position pos:line="16" pos:column="13"/></name> <modifier pos:line="16" pos:column="14">*<pos:position pos:line="16" pos:column="15"/></modifier></type><name pos:line="16" pos:column="15">cookie<pos:position pos:line="16" pos:column="21"/></name></decl>, <modifier pos:line="16" pos:column="23">*<pos:position pos:line="16" pos:column="24"/></modifier><decl><type ref="prev"/><name pos:line="16" pos:column="24">last1<pos:position pos:line="16" pos:column="29"/></name></decl>, <modifier pos:line="16" pos:column="31">*<pos:position pos:line="16" pos:column="32"/></modifier><decl><type ref="prev"/><name pos:line="16" pos:column="32">last2<pos:position pos:line="16" pos:column="37"/></name></decl>;<pos:position pos:line="16" pos:column="38"/></decl_stmt>
        <decl_stmt><decl><type><name pos:line="17" pos:column="9">char<pos:position pos:line="17" pos:column="13"/></name> <modifier pos:line="17" pos:column="14">*<pos:position pos:line="17" pos:column="15"/></modifier></type><name pos:line="17" pos:column="15">cookies<pos:position pos:line="17" pos:column="22"/></name> <init pos:line="17" pos:column="23">= <expr><call><name pos:line="17" pos:column="25">apr_pstrdup<pos:position pos:line="17" pos:column="36"/></name><argument_list pos:line="17" pos:column="36">(<argument><expr><name><name pos:line="17" pos:column="37">r<pos:position pos:line="17" pos:column="38"/></name><operator pos:line="17" pos:column="38">-&gt;<pos:position pos:line="17" pos:column="43"/></operator><name pos:line="17" pos:column="40">pool<pos:position pos:line="17" pos:column="44"/></name></name></expr></argument>, <argument><expr><name pos:line="17" pos:column="46">cookies_entry<pos:position pos:line="17" pos:column="59"/></name></expr></argument>)<pos:position pos:line="17" pos:column="60"/></argument_list></call></expr></init></decl>;<pos:position pos:line="17" pos:column="61"/></decl_stmt>

        <while pos:line="19" pos:column="9">while <condition pos:line="19" pos:column="15">(<expr><operator pos:line="19" pos:column="16">(<pos:position pos:line="19" pos:column="17"/></operator><name pos:line="19" pos:column="17">cookie<pos:position pos:line="19" pos:column="23"/></name> <operator pos:line="19" pos:column="24">=<pos:position pos:line="19" pos:column="25"/></operator> <call><name pos:line="19" pos:column="26">apr_strtok<pos:position pos:line="19" pos:column="36"/></name><argument_list pos:line="19" pos:column="36">(<argument><expr><name pos:line="19" pos:column="37">cookies<pos:position pos:line="19" pos:column="44"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="19" pos:column="46">";"<pos:position pos:line="19" pos:column="49"/></literal></expr></argument>, <argument><expr><operator pos:line="19" pos:column="51">&amp;<pos:position pos:line="19" pos:column="56"/></operator><name pos:line="19" pos:column="52">last1<pos:position pos:line="19" pos:column="57"/></name></expr></argument>)<pos:position pos:line="19" pos:column="58"/></argument_list></call><operator pos:line="19" pos:column="58">)<pos:position pos:line="19" pos:column="59"/></operator></expr>)<pos:position pos:line="19" pos:column="60"/></condition> <block pos:line="19" pos:column="61">{
            <decl_stmt><decl><type><name pos:line="20" pos:column="13">char<pos:position pos:line="20" pos:column="17"/></name> <modifier pos:line="20" pos:column="18">*<pos:position pos:line="20" pos:column="19"/></modifier></type><name pos:line="20" pos:column="19">name<pos:position pos:line="20" pos:column="23"/></name> <init pos:line="20" pos:column="24">= <expr><call><name pos:line="20" pos:column="26">apr_strtok<pos:position pos:line="20" pos:column="36"/></name><argument_list pos:line="20" pos:column="36">(<argument><expr><name pos:line="20" pos:column="37">cookie<pos:position pos:line="20" pos:column="43"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="20" pos:column="45">"="<pos:position pos:line="20" pos:column="48"/></literal></expr></argument>, <argument><expr><operator pos:line="20" pos:column="50">&amp;<pos:position pos:line="20" pos:column="55"/></operator><name pos:line="20" pos:column="51">last2<pos:position pos:line="20" pos:column="56"/></name></expr></argument>)<pos:position pos:line="20" pos:column="57"/></argument_list></call></expr></init></decl>;<pos:position pos:line="20" pos:column="58"/></decl_stmt>
            <decl_stmt><decl><type><name pos:line="21" pos:column="13">char<pos:position pos:line="21" pos:column="17"/></name> <modifier pos:line="21" pos:column="18">*<pos:position pos:line="21" pos:column="19"/></modifier></type><name pos:line="21" pos:column="19">value<pos:position pos:line="21" pos:column="24"/></name></decl>;<pos:position pos:line="21" pos:column="25"/></decl_stmt>
            <expr_stmt><expr><call><name pos:line="22" pos:column="13">apr_collapse_spaces<pos:position pos:line="22" pos:column="32"/></name><argument_list pos:line="22" pos:column="32">(<argument><expr><name pos:line="22" pos:column="33">name<pos:position pos:line="22" pos:column="37"/></name></expr></argument>, <argument><expr><name pos:line="22" pos:column="39">name<pos:position pos:line="22" pos:column="43"/></name></expr></argument>)<pos:position pos:line="22" pos:column="44"/></argument_list></call></expr>;<pos:position pos:line="22" pos:column="45"/></expr_stmt>

            <if pos:line="24" pos:column="13">if <condition pos:line="24" pos:column="16">(<expr><operator pos:line="24" pos:column="17">!<pos:position pos:line="24" pos:column="18"/></operator><call><name pos:line="24" pos:column="18">strcasecmp<pos:position pos:line="24" pos:column="28"/></name><argument_list pos:line="24" pos:column="28">(<argument><expr><name pos:line="24" pos:column="29">name<pos:position pos:line="24" pos:column="33"/></name></expr></argument>, <argument><expr><name pos:line="24" pos:column="35">a<pos:position pos:line="24" pos:column="36"/></name></expr></argument>)<pos:position pos:line="24" pos:column="37"/></argument_list></call> <operator pos:line="24" pos:column="38">&amp;&amp;<pos:position pos:line="24" pos:column="48"/></operator> <operator pos:line="24" pos:column="41">(<pos:position pos:line="24" pos:column="42"/></operator><name pos:line="24" pos:column="42">value<pos:position pos:line="24" pos:column="47"/></name> <operator pos:line="24" pos:column="48">=<pos:position pos:line="24" pos:column="49"/></operator> <call><name pos:line="24" pos:column="50">apr_strtok<pos:position pos:line="24" pos:column="60"/></name><argument_list pos:line="24" pos:column="60">(<argument><expr><name pos:line="24" pos:column="61">NULL<pos:position pos:line="24" pos:column="65"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="24" pos:column="67">"="<pos:position pos:line="24" pos:column="70"/></literal></expr></argument>, <argument><expr><operator pos:line="24" pos:column="72">&amp;<pos:position pos:line="24" pos:column="77"/></operator><name pos:line="24" pos:column="73">last2<pos:position pos:line="24" pos:column="78"/></name></expr></argument>)<pos:position pos:line="24" pos:column="79"/></argument_list></call><operator pos:line="24" pos:column="79">)<pos:position pos:line="24" pos:column="80"/></operator></expr>)<pos:position pos:line="24" pos:column="81"/></condition><then pos:line="24" pos:column="81"> <block pos:line="24" pos:column="82">{
                <decl_stmt><decl><type><name pos:line="25" pos:column="17">char<pos:position pos:line="25" pos:column="21"/></name> <modifier pos:line="25" pos:column="22">*<pos:position pos:line="25" pos:column="23"/></modifier></type><name pos:line="25" pos:column="23">last<pos:position pos:line="25" pos:column="27"/></name></decl>;<pos:position pos:line="25" pos:column="28"/></decl_stmt>
                <expr_stmt><expr><name pos:line="26" pos:column="17">value<pos:position pos:line="26" pos:column="22"/></name> <operator pos:line="26" pos:column="23">+=<pos:position pos:line="26" pos:column="25"/></operator> <call><name pos:line="26" pos:column="26">strspn<pos:position pos:line="26" pos:column="32"/></name><argument_list pos:line="26" pos:column="32">(<argument><expr><name pos:line="26" pos:column="33">value<pos:position pos:line="26" pos:column="38"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="26" pos:column="40">" \t"<pos:position pos:line="26" pos:column="45"/></literal></expr></argument>)<pos:position pos:line="26" pos:column="46"/></argument_list></call></expr>;<pos:position pos:line="26" pos:column="47"/></expr_stmt>  <comment type="block" pos:line="26" pos:column="49">/* Move past leading WS */</comment>
                <expr_stmt><expr><name pos:line="27" pos:column="17">last<pos:position pos:line="27" pos:column="21"/></name> <operator pos:line="27" pos:column="22">=<pos:position pos:line="27" pos:column="23"/></operator> <name pos:line="27" pos:column="24">value<pos:position pos:line="27" pos:column="29"/></name> <operator pos:line="27" pos:column="30">+<pos:position pos:line="27" pos:column="31"/></operator> <call><name pos:line="27" pos:column="32">strlen<pos:position pos:line="27" pos:column="38"/></name><argument_list pos:line="27" pos:column="38">(<argument><expr><name pos:line="27" pos:column="39">value<pos:position pos:line="27" pos:column="44"/></name></expr></argument>)<pos:position pos:line="27" pos:column="45"/></argument_list></call> <operator pos:line="27" pos:column="46">-<pos:position pos:line="27" pos:column="47"/></operator> <literal type="number" pos:line="27" pos:column="48">1<pos:position pos:line="27" pos:column="49"/></literal></expr>;<pos:position pos:line="27" pos:column="50"/></expr_stmt>
                <while pos:line="28" pos:column="17">while <condition pos:line="28" pos:column="23">(<expr><name pos:line="28" pos:column="24">last<pos:position pos:line="28" pos:column="28"/></name> <operator pos:line="28" pos:column="29">&gt;=<pos:position pos:line="28" pos:column="34"/></operator> <name pos:line="28" pos:column="32">value<pos:position pos:line="28" pos:column="37"/></name> <operator pos:line="28" pos:column="38">&amp;&amp;<pos:position pos:line="28" pos:column="48"/></operator> <call><name pos:line="28" pos:column="41">apr_isspace<pos:position pos:line="28" pos:column="52"/></name><argument_list pos:line="28" pos:column="52">(<argument><expr><operator pos:line="28" pos:column="53">*<pos:position pos:line="28" pos:column="54"/></operator><name pos:line="28" pos:column="54">last<pos:position pos:line="28" pos:column="58"/></name></expr></argument>)<pos:position pos:line="28" pos:column="59"/></argument_list></call></expr>)<pos:position pos:line="28" pos:column="60"/></condition> <block pos:line="28" pos:column="61">{
                   <expr_stmt><expr><operator pos:line="29" pos:column="20">*<pos:position pos:line="29" pos:column="21"/></operator><name pos:line="29" pos:column="21">last<pos:position pos:line="29" pos:column="25"/></name> <operator pos:line="29" pos:column="26">=<pos:position pos:line="29" pos:column="27"/></operator> <literal type="char" pos:line="29" pos:column="28">'\0'<pos:position pos:line="29" pos:column="32"/></literal></expr>;<pos:position pos:line="29" pos:column="33"/></expr_stmt>
                   <expr_stmt><expr><operator pos:line="30" pos:column="20">--<pos:position pos:line="30" pos:column="22"/></operator><name pos:line="30" pos:column="22">last<pos:position pos:line="30" pos:column="26"/></name></expr>;<pos:position pos:line="30" pos:column="27"/></expr_stmt>
                }<pos:position pos:line="31" pos:column="18"/></block></while>

                <return pos:line="33" pos:column="17">return <expr><call><name pos:line="33" pos:column="24">ap_escape_logitem<pos:position pos:line="33" pos:column="41"/></name><argument_list pos:line="33" pos:column="41">(<argument><expr><name><name pos:line="33" pos:column="42">r<pos:position pos:line="33" pos:column="43"/></name><operator pos:line="33" pos:column="43">-&gt;<pos:position pos:line="33" pos:column="48"/></operator><name pos:line="33" pos:column="45">pool<pos:position pos:line="33" pos:column="49"/></name></name></expr></argument>, <argument><expr><name pos:line="33" pos:column="51">value<pos:position pos:line="33" pos:column="56"/></name></expr></argument>)<pos:position pos:line="33" pos:column="57"/></argument_list></call></expr>;<pos:position pos:line="33" pos:column="58"/></return>
            }<pos:position pos:line="34" pos:column="14"/></block></then></if>
            <expr_stmt><expr><name pos:line="35" pos:column="13">cookies<pos:position pos:line="35" pos:column="20"/></name> <operator pos:line="35" pos:column="21">=<pos:position pos:line="35" pos:column="22"/></operator> <name pos:line="35" pos:column="23">NULL<pos:position pos:line="35" pos:column="27"/></name></expr>;<pos:position pos:line="35" pos:column="28"/></expr_stmt>
        }<pos:position pos:line="36" pos:column="10"/></block></while>
    }<pos:position pos:line="37" pos:column="6"/></block></then></if>
    <return pos:line="38" pos:column="5">return <expr><name pos:line="38" pos:column="12">NULL<pos:position pos:line="38" pos:column="16"/></name></expr>;<pos:position pos:line="38" pos:column="17"/></return>
}<pos:position pos:line="39" pos:column="2"/></block></function></unit>

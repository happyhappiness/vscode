<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/httpd/gumtree/httpd_function_5981.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">apr_status_t<pos:position pos:line="1" pos:column="20"/></name></type> <name pos:line="1" pos:column="21">bucketeer_buffer<pos:position pos:line="1" pos:column="37"/></name><parameter_list pos:line="1" pos:column="37">(<parameter><decl><type><name pos:line="1" pos:column="38">h2_conn_io<pos:position pos:line="1" pos:column="48"/></name> <modifier pos:line="1" pos:column="49">*<pos:position pos:line="1" pos:column="50"/></modifier></type><name pos:line="1" pos:column="50">io<pos:position pos:line="1" pos:column="52"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="53"/></parameter_list> <block pos:line="1" pos:column="54">{
    <decl_stmt><decl><type><specifier pos:line="2" pos:column="5">const<pos:position pos:line="2" pos:column="10"/></specifier> <name pos:line="2" pos:column="11">char<pos:position pos:line="2" pos:column="15"/></name> <modifier pos:line="2" pos:column="16">*<pos:position pos:line="2" pos:column="17"/></modifier></type><name pos:line="2" pos:column="17">data<pos:position pos:line="2" pos:column="21"/></name> <init pos:line="2" pos:column="22">= <expr><name><name pos:line="2" pos:column="24">io<pos:position pos:line="2" pos:column="26"/></name><operator pos:line="2" pos:column="26">-&gt;<pos:position pos:line="2" pos:column="31"/></operator><name pos:line="2" pos:column="28">buffer<pos:position pos:line="2" pos:column="34"/></name></name></expr></init></decl>;<pos:position pos:line="2" pos:column="35"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="3" pos:column="5">apr_size_t<pos:position pos:line="3" pos:column="15"/></name></type> <name pos:line="3" pos:column="16">remaining<pos:position pos:line="3" pos:column="25"/></name> <init pos:line="3" pos:column="26">= <expr><name><name pos:line="3" pos:column="28">io<pos:position pos:line="3" pos:column="30"/></name><operator pos:line="3" pos:column="30">-&gt;<pos:position pos:line="3" pos:column="35"/></operator><name pos:line="3" pos:column="32">buflen<pos:position pos:line="3" pos:column="38"/></name></name></expr></init></decl>;<pos:position pos:line="3" pos:column="39"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="4" pos:column="5">apr_bucket<pos:position pos:line="4" pos:column="15"/></name> <modifier pos:line="4" pos:column="16">*<pos:position pos:line="4" pos:column="17"/></modifier></type><name pos:line="4" pos:column="17">b<pos:position pos:line="4" pos:column="18"/></name></decl>;<pos:position pos:line="4" pos:column="19"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="5" pos:column="5">int<pos:position pos:line="5" pos:column="8"/></name></type> <name pos:line="5" pos:column="9">bcount<pos:position pos:line="5" pos:column="15"/></name></decl>, <decl><type ref="prev"/><name pos:line="5" pos:column="17">i<pos:position pos:line="5" pos:column="18"/></name></decl>;<pos:position pos:line="5" pos:column="19"/></decl_stmt>

    <if pos:line="7" pos:column="5">if <condition pos:line="7" pos:column="8">(<expr><name><name pos:line="7" pos:column="9">io<pos:position pos:line="7" pos:column="11"/></name><operator pos:line="7" pos:column="11">-&gt;<pos:position pos:line="7" pos:column="16"/></operator><name pos:line="7" pos:column="13">write_size<pos:position pos:line="7" pos:column="23"/></name></name> <operator pos:line="7" pos:column="24">&gt;<pos:position pos:line="7" pos:column="28"/></operator> <name pos:line="7" pos:column="26">WRITE_SIZE_INITIAL<pos:position pos:line="7" pos:column="44"/></name> 
        <operator pos:line="8" pos:column="9">&amp;&amp;<pos:position pos:line="8" pos:column="19"/></operator> <operator pos:line="8" pos:column="12">(<pos:position pos:line="8" pos:column="13"/></operator><name><name pos:line="8" pos:column="13">io<pos:position pos:line="8" pos:column="15"/></name><operator pos:line="8" pos:column="15">-&gt;<pos:position pos:line="8" pos:column="20"/></operator><name pos:line="8" pos:column="17">cooldown_usecs<pos:position pos:line="8" pos:column="31"/></name></name> <operator pos:line="8" pos:column="32">&gt;<pos:position pos:line="8" pos:column="36"/></operator> <literal type="number" pos:line="8" pos:column="34">0<pos:position pos:line="8" pos:column="35"/></literal><operator pos:line="8" pos:column="35">)<pos:position pos:line="8" pos:column="36"/></operator>
        <operator pos:line="9" pos:column="9">&amp;&amp;<pos:position pos:line="9" pos:column="19"/></operator> <operator pos:line="9" pos:column="12">(<pos:position pos:line="9" pos:column="13"/></operator><call><name pos:line="9" pos:column="13">apr_time_now<pos:position pos:line="9" pos:column="25"/></name><argument_list pos:line="9" pos:column="25">()<pos:position pos:line="9" pos:column="27"/></argument_list></call> <operator pos:line="9" pos:column="28">-<pos:position pos:line="9" pos:column="29"/></operator> <name><name pos:line="9" pos:column="30">io<pos:position pos:line="9" pos:column="32"/></name><operator pos:line="9" pos:column="32">-&gt;<pos:position pos:line="9" pos:column="37"/></operator><name pos:line="9" pos:column="34">last_write<pos:position pos:line="9" pos:column="44"/></name></name><operator pos:line="9" pos:column="44">)<pos:position pos:line="9" pos:column="45"/></operator> <operator pos:line="9" pos:column="46">&gt;=<pos:position pos:line="9" pos:column="51"/></operator> <name><name pos:line="9" pos:column="49">io<pos:position pos:line="9" pos:column="51"/></name><operator pos:line="9" pos:column="51">-&gt;<pos:position pos:line="9" pos:column="56"/></operator><name pos:line="9" pos:column="53">cooldown_usecs<pos:position pos:line="9" pos:column="67"/></name></name></expr>)<pos:position pos:line="9" pos:column="68"/></condition><then pos:line="9" pos:column="68"> <block pos:line="9" pos:column="69">{
        <comment type="block" pos:line="10" pos:column="9">/* long time not written, reset write size */</comment>
        <expr_stmt><expr><name><name pos:line="11" pos:column="9">io<pos:position pos:line="11" pos:column="11"/></name><operator pos:line="11" pos:column="11">-&gt;<pos:position pos:line="11" pos:column="16"/></operator><name pos:line="11" pos:column="13">write_size<pos:position pos:line="11" pos:column="23"/></name></name> <operator pos:line="11" pos:column="24">=<pos:position pos:line="11" pos:column="25"/></operator> <name pos:line="11" pos:column="26">WRITE_SIZE_INITIAL<pos:position pos:line="11" pos:column="44"/></name></expr>;<pos:position pos:line="11" pos:column="45"/></expr_stmt>
        <expr_stmt><expr><name><name pos:line="12" pos:column="9">io<pos:position pos:line="12" pos:column="11"/></name><operator pos:line="12" pos:column="11">-&gt;<pos:position pos:line="12" pos:column="16"/></operator><name pos:line="12" pos:column="13">bytes_written<pos:position pos:line="12" pos:column="26"/></name></name> <operator pos:line="12" pos:column="27">=<pos:position pos:line="12" pos:column="28"/></operator> <literal type="number" pos:line="12" pos:column="29">0<pos:position pos:line="12" pos:column="30"/></literal></expr>;<pos:position pos:line="12" pos:column="31"/></expr_stmt>
        <expr_stmt><expr><call><name pos:line="13" pos:column="9">ap_log_cerror<pos:position pos:line="13" pos:column="22"/></name><argument_list pos:line="13" pos:column="22">(<argument><expr><name pos:line="13" pos:column="23">APLOG_MARK<pos:position pos:line="13" pos:column="33"/></name></expr></argument>, <argument><expr><name pos:line="13" pos:column="35">APLOG_TRACE2<pos:position pos:line="13" pos:column="47"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="13" pos:column="49">0<pos:position pos:line="13" pos:column="50"/></literal></expr></argument>, <argument><expr><name><name pos:line="13" pos:column="52">io<pos:position pos:line="13" pos:column="54"/></name><operator pos:line="13" pos:column="54">-&gt;<pos:position pos:line="13" pos:column="59"/></operator><name pos:line="13" pos:column="56">connection<pos:position pos:line="13" pos:column="66"/></name></name></expr></argument>,
                      <argument><expr><literal type="string" pos:line="14" pos:column="23">"h2_conn_io(%ld): timeout write size reset to %ld"<pos:position pos:line="14" pos:column="73"/></literal></expr></argument>, 
                      <argument><expr><operator pos:line="15" pos:column="23">(<pos:position pos:line="15" pos:column="24"/></operator><name pos:line="15" pos:column="24">long<pos:position pos:line="15" pos:column="28"/></name><operator pos:line="15" pos:column="28">)<pos:position pos:line="15" pos:column="29"/></operator><name><name pos:line="15" pos:column="29">io<pos:position pos:line="15" pos:column="31"/></name><operator pos:line="15" pos:column="31">-&gt;<pos:position pos:line="15" pos:column="36"/></operator><name pos:line="15" pos:column="33">connection<pos:position pos:line="15" pos:column="43"/></name><operator pos:line="15" pos:column="43">-&gt;<pos:position pos:line="15" pos:column="48"/></operator><name pos:line="15" pos:column="45">id<pos:position pos:line="15" pos:column="47"/></name></name></expr></argument>, <argument><expr><operator pos:line="15" pos:column="49">(<pos:position pos:line="15" pos:column="50"/></operator><name pos:line="15" pos:column="50">long<pos:position pos:line="15" pos:column="54"/></name><operator pos:line="15" pos:column="54">)<pos:position pos:line="15" pos:column="55"/></operator><name><name pos:line="15" pos:column="55">io<pos:position pos:line="15" pos:column="57"/></name><operator pos:line="15" pos:column="57">-&gt;<pos:position pos:line="15" pos:column="62"/></operator><name pos:line="15" pos:column="59">write_size<pos:position pos:line="15" pos:column="69"/></name></name></expr></argument>)<pos:position pos:line="15" pos:column="70"/></argument_list></call></expr>;<pos:position pos:line="15" pos:column="71"/></expr_stmt>
    }<pos:position pos:line="16" pos:column="6"/></block></then>
    <elseif pos:line="17" pos:column="5">else <if pos:line="17" pos:column="10">if <condition pos:line="17" pos:column="13">(<expr><name><name pos:line="17" pos:column="14">io<pos:position pos:line="17" pos:column="16"/></name><operator pos:line="17" pos:column="16">-&gt;<pos:position pos:line="17" pos:column="21"/></operator><name pos:line="17" pos:column="18">write_size<pos:position pos:line="17" pos:column="28"/></name></name> <operator pos:line="17" pos:column="29">&lt;<pos:position pos:line="17" pos:column="33"/></operator> <name pos:line="17" pos:column="31">WRITE_SIZE_MAX<pos:position pos:line="17" pos:column="45"/></name> 
             <operator pos:line="18" pos:column="14">&amp;&amp;<pos:position pos:line="18" pos:column="24"/></operator> <name><name pos:line="18" pos:column="17">io<pos:position pos:line="18" pos:column="19"/></name><operator pos:line="18" pos:column="19">-&gt;<pos:position pos:line="18" pos:column="24"/></operator><name pos:line="18" pos:column="21">bytes_written<pos:position pos:line="18" pos:column="34"/></name></name> <operator pos:line="18" pos:column="35">&gt;=<pos:position pos:line="18" pos:column="40"/></operator> <name><name pos:line="18" pos:column="38">io<pos:position pos:line="18" pos:column="40"/></name><operator pos:line="18" pos:column="40">-&gt;<pos:position pos:line="18" pos:column="45"/></operator><name pos:line="18" pos:column="42">warmup_size<pos:position pos:line="18" pos:column="53"/></name></name></expr>)<pos:position pos:line="18" pos:column="54"/></condition><then pos:line="18" pos:column="54"> <block pos:line="18" pos:column="55">{
        <comment type="block" pos:line="19" pos:column="9">/* connection is hot, use max size */</comment>
        <expr_stmt><expr><name><name pos:line="20" pos:column="9">io<pos:position pos:line="20" pos:column="11"/></name><operator pos:line="20" pos:column="11">-&gt;<pos:position pos:line="20" pos:column="16"/></operator><name pos:line="20" pos:column="13">write_size<pos:position pos:line="20" pos:column="23"/></name></name> <operator pos:line="20" pos:column="24">=<pos:position pos:line="20" pos:column="25"/></operator> <name pos:line="20" pos:column="26">WRITE_SIZE_MAX<pos:position pos:line="20" pos:column="40"/></name></expr>;<pos:position pos:line="20" pos:column="41"/></expr_stmt>
        <expr_stmt><expr><call><name pos:line="21" pos:column="9">ap_log_cerror<pos:position pos:line="21" pos:column="22"/></name><argument_list pos:line="21" pos:column="22">(<argument><expr><name pos:line="21" pos:column="23">APLOG_MARK<pos:position pos:line="21" pos:column="33"/></name></expr></argument>, <argument><expr><name pos:line="21" pos:column="35">APLOG_TRACE2<pos:position pos:line="21" pos:column="47"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="21" pos:column="49">0<pos:position pos:line="21" pos:column="50"/></literal></expr></argument>, <argument><expr><name><name pos:line="21" pos:column="52">io<pos:position pos:line="21" pos:column="54"/></name><operator pos:line="21" pos:column="54">-&gt;<pos:position pos:line="21" pos:column="59"/></operator><name pos:line="21" pos:column="56">connection<pos:position pos:line="21" pos:column="66"/></name></name></expr></argument>,
                      <argument><expr><literal type="string" pos:line="22" pos:column="23">"h2_conn_io(%ld): threshold reached, write size now %ld"<pos:position pos:line="22" pos:column="79"/></literal></expr></argument>, 
                      <argument><expr><operator pos:line="23" pos:column="23">(<pos:position pos:line="23" pos:column="24"/></operator><name pos:line="23" pos:column="24">long<pos:position pos:line="23" pos:column="28"/></name><operator pos:line="23" pos:column="28">)<pos:position pos:line="23" pos:column="29"/></operator><name><name pos:line="23" pos:column="29">io<pos:position pos:line="23" pos:column="31"/></name><operator pos:line="23" pos:column="31">-&gt;<pos:position pos:line="23" pos:column="36"/></operator><name pos:line="23" pos:column="33">connection<pos:position pos:line="23" pos:column="43"/></name><operator pos:line="23" pos:column="43">-&gt;<pos:position pos:line="23" pos:column="48"/></operator><name pos:line="23" pos:column="45">id<pos:position pos:line="23" pos:column="47"/></name></name></expr></argument>, <argument><expr><operator pos:line="23" pos:column="49">(<pos:position pos:line="23" pos:column="50"/></operator><name pos:line="23" pos:column="50">long<pos:position pos:line="23" pos:column="54"/></name><operator pos:line="23" pos:column="54">)<pos:position pos:line="23" pos:column="55"/></operator><name><name pos:line="23" pos:column="55">io<pos:position pos:line="23" pos:column="57"/></name><operator pos:line="23" pos:column="57">-&gt;<pos:position pos:line="23" pos:column="62"/></operator><name pos:line="23" pos:column="59">write_size<pos:position pos:line="23" pos:column="69"/></name></name></expr></argument>)<pos:position pos:line="23" pos:column="70"/></argument_list></call></expr>;<pos:position pos:line="23" pos:column="71"/></expr_stmt>
    }<pos:position pos:line="24" pos:column="6"/></block></then></if></elseif></if>
    
    <expr_stmt><expr><name pos:line="26" pos:column="5">bcount<pos:position pos:line="26" pos:column="11"/></name> <operator pos:line="26" pos:column="12">=<pos:position pos:line="26" pos:column="13"/></operator> <call pos:line="26" pos:column="14">(<name pos:line="26" pos:column="15">int<pos:position pos:line="26" pos:column="18"/></name>)<argument_list pos:line="26" pos:column="19">(<argument><expr><name pos:line="26" pos:column="20">remaining<pos:position pos:line="26" pos:column="29"/></name> <operator pos:line="26" pos:column="30">/<pos:position pos:line="26" pos:column="31"/></operator> <name><name pos:line="26" pos:column="32">io<pos:position pos:line="26" pos:column="34"/></name><operator pos:line="26" pos:column="34">-&gt;<pos:position pos:line="26" pos:column="39"/></operator><name pos:line="26" pos:column="36">write_size<pos:position pos:line="26" pos:column="46"/></name></name></expr></argument>)<pos:position pos:line="26" pos:column="47"/></argument_list></call></expr>;<pos:position pos:line="26" pos:column="48"/></expr_stmt>
    <for pos:line="27" pos:column="5">for <control pos:line="27" pos:column="9">(<init><expr><name pos:line="27" pos:column="10">i<pos:position pos:line="27" pos:column="11"/></name> <operator pos:line="27" pos:column="12">=<pos:position pos:line="27" pos:column="13"/></operator> <literal type="number" pos:line="27" pos:column="14">0<pos:position pos:line="27" pos:column="15"/></literal></expr>;<pos:position pos:line="27" pos:column="16"/></init> <condition><expr><name pos:line="27" pos:column="17">i<pos:position pos:line="27" pos:column="18"/></name> <operator pos:line="27" pos:column="19">&lt;<pos:position pos:line="27" pos:column="23"/></operator> <name pos:line="27" pos:column="21">bcount<pos:position pos:line="27" pos:column="27"/></name></expr>;<pos:position pos:line="27" pos:column="28"/></condition> <incr><expr><operator pos:line="27" pos:column="29">++<pos:position pos:line="27" pos:column="31"/></operator><name pos:line="27" pos:column="31">i<pos:position pos:line="27" pos:column="32"/></name></expr></incr>)<pos:position pos:line="27" pos:column="33"/></control> <block pos:line="27" pos:column="34">{
        <expr_stmt><expr><name pos:line="28" pos:column="9">b<pos:position pos:line="28" pos:column="10"/></name> <operator pos:line="28" pos:column="11">=<pos:position pos:line="28" pos:column="12"/></operator> <call><name pos:line="28" pos:column="13">apr_bucket_transient_create<pos:position pos:line="28" pos:column="40"/></name><argument_list pos:line="28" pos:column="40">(<argument><expr><name pos:line="28" pos:column="41">data<pos:position pos:line="28" pos:column="45"/></name></expr></argument>, <argument><expr><name><name pos:line="28" pos:column="47">io<pos:position pos:line="28" pos:column="49"/></name><operator pos:line="28" pos:column="49">-&gt;<pos:position pos:line="28" pos:column="54"/></operator><name pos:line="28" pos:column="51">write_size<pos:position pos:line="28" pos:column="61"/></name></name></expr></argument>, 
                                        <argument><expr><name><name pos:line="29" pos:column="41">io<pos:position pos:line="29" pos:column="43"/></name><operator pos:line="29" pos:column="43">-&gt;<pos:position pos:line="29" pos:column="48"/></operator><name pos:line="29" pos:column="45">output<pos:position pos:line="29" pos:column="51"/></name><operator pos:line="29" pos:column="51">-&gt;<pos:position pos:line="29" pos:column="56"/></operator><name pos:line="29" pos:column="53">bucket_alloc<pos:position pos:line="29" pos:column="65"/></name></name></expr></argument>)<pos:position pos:line="29" pos:column="66"/></argument_list></call></expr>;<pos:position pos:line="29" pos:column="67"/></expr_stmt>
        <expr_stmt><expr><call><name pos:line="30" pos:column="9">APR_BRIGADE_INSERT_TAIL<pos:position pos:line="30" pos:column="32"/></name><argument_list pos:line="30" pos:column="32">(<argument><expr><name><name pos:line="30" pos:column="33">io<pos:position pos:line="30" pos:column="35"/></name><operator pos:line="30" pos:column="35">-&gt;<pos:position pos:line="30" pos:column="40"/></operator><name pos:line="30" pos:column="37">output<pos:position pos:line="30" pos:column="43"/></name></name></expr></argument>, <argument><expr><name pos:line="30" pos:column="45">b<pos:position pos:line="30" pos:column="46"/></name></expr></argument>)<pos:position pos:line="30" pos:column="47"/></argument_list></call></expr>;<pos:position pos:line="30" pos:column="48"/></expr_stmt>
        <expr_stmt><expr><name pos:line="31" pos:column="9">data<pos:position pos:line="31" pos:column="13"/></name> <operator pos:line="31" pos:column="14">+=<pos:position pos:line="31" pos:column="16"/></operator> <name><name pos:line="31" pos:column="17">io<pos:position pos:line="31" pos:column="19"/></name><operator pos:line="31" pos:column="19">-&gt;<pos:position pos:line="31" pos:column="24"/></operator><name pos:line="31" pos:column="21">write_size<pos:position pos:line="31" pos:column="31"/></name></name></expr>;<pos:position pos:line="31" pos:column="32"/></expr_stmt>
        <expr_stmt><expr><name pos:line="32" pos:column="9">remaining<pos:position pos:line="32" pos:column="18"/></name> <operator pos:line="32" pos:column="19">-=<pos:position pos:line="32" pos:column="21"/></operator> <name><name pos:line="32" pos:column="22">io<pos:position pos:line="32" pos:column="24"/></name><operator pos:line="32" pos:column="24">-&gt;<pos:position pos:line="32" pos:column="29"/></operator><name pos:line="32" pos:column="26">write_size<pos:position pos:line="32" pos:column="36"/></name></name></expr>;<pos:position pos:line="32" pos:column="37"/></expr_stmt>
    }<pos:position pos:line="33" pos:column="6"/></block></for>
    
    <if pos:line="35" pos:column="5">if <condition pos:line="35" pos:column="8">(<expr><name pos:line="35" pos:column="9">remaining<pos:position pos:line="35" pos:column="18"/></name> <operator pos:line="35" pos:column="19">&gt;<pos:position pos:line="35" pos:column="23"/></operator> <literal type="number" pos:line="35" pos:column="21">0<pos:position pos:line="35" pos:column="22"/></literal></expr>)<pos:position pos:line="35" pos:column="23"/></condition><then pos:line="35" pos:column="23"> <block pos:line="35" pos:column="24">{
        <expr_stmt><expr><name pos:line="36" pos:column="9">b<pos:position pos:line="36" pos:column="10"/></name> <operator pos:line="36" pos:column="11">=<pos:position pos:line="36" pos:column="12"/></operator> <call><name pos:line="36" pos:column="13">apr_bucket_transient_create<pos:position pos:line="36" pos:column="40"/></name><argument_list pos:line="36" pos:column="40">(<argument><expr><name pos:line="36" pos:column="41">data<pos:position pos:line="36" pos:column="45"/></name></expr></argument>, <argument><expr><name pos:line="36" pos:column="47">remaining<pos:position pos:line="36" pos:column="56"/></name></expr></argument>, 
                                        <argument><expr><name><name pos:line="37" pos:column="41">io<pos:position pos:line="37" pos:column="43"/></name><operator pos:line="37" pos:column="43">-&gt;<pos:position pos:line="37" pos:column="48"/></operator><name pos:line="37" pos:column="45">output<pos:position pos:line="37" pos:column="51"/></name><operator pos:line="37" pos:column="51">-&gt;<pos:position pos:line="37" pos:column="56"/></operator><name pos:line="37" pos:column="53">bucket_alloc<pos:position pos:line="37" pos:column="65"/></name></name></expr></argument>)<pos:position pos:line="37" pos:column="66"/></argument_list></call></expr>;<pos:position pos:line="37" pos:column="67"/></expr_stmt>
        <expr_stmt><expr><call><name pos:line="38" pos:column="9">APR_BRIGADE_INSERT_TAIL<pos:position pos:line="38" pos:column="32"/></name><argument_list pos:line="38" pos:column="32">(<argument><expr><name><name pos:line="38" pos:column="33">io<pos:position pos:line="38" pos:column="35"/></name><operator pos:line="38" pos:column="35">-&gt;<pos:position pos:line="38" pos:column="40"/></operator><name pos:line="38" pos:column="37">output<pos:position pos:line="38" pos:column="43"/></name></name></expr></argument>, <argument><expr><name pos:line="38" pos:column="45">b<pos:position pos:line="38" pos:column="46"/></name></expr></argument>)<pos:position pos:line="38" pos:column="47"/></argument_list></call></expr>;<pos:position pos:line="38" pos:column="48"/></expr_stmt>
    }<pos:position pos:line="39" pos:column="6"/></block></then></if>
    <return pos:line="40" pos:column="5">return <expr><name pos:line="40" pos:column="12">APR_SUCCESS<pos:position pos:line="40" pos:column="23"/></name></expr>;<pos:position pos:line="40" pos:column="24"/></return>
}<pos:position pos:line="41" pos:column="2"/></block></function></unit>

<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/httpd/gumtree/httpd_function_2866.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">void<pos:position pos:line="1" pos:column="5"/></name></type> <name pos:line="1" pos:column="6">ssl_scache_shmcb_init<pos:position pos:line="1" pos:column="27"/></name><parameter_list pos:line="1" pos:column="27">(<parameter><decl><type><name pos:line="1" pos:column="28">server_rec<pos:position pos:line="1" pos:column="38"/></name> <modifier pos:line="1" pos:column="39">*<pos:position pos:line="1" pos:column="40"/></modifier></type><name pos:line="1" pos:column="40">s<pos:position pos:line="1" pos:column="41"/></name></decl></parameter>, <parameter><decl><type><name pos:line="1" pos:column="43">apr_pool_t<pos:position pos:line="1" pos:column="53"/></name> <modifier pos:line="1" pos:column="54">*<pos:position pos:line="1" pos:column="55"/></modifier></type><name pos:line="1" pos:column="55">p<pos:position pos:line="1" pos:column="56"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="57"/></parameter_list>
<block pos:line="2" pos:column="1">{
    <decl_stmt><decl><type><name pos:line="3" pos:column="5">SSLModConfigRec<pos:position pos:line="3" pos:column="20"/></name> <modifier pos:line="3" pos:column="21">*<pos:position pos:line="3" pos:column="22"/></modifier></type><name pos:line="3" pos:column="22">mc<pos:position pos:line="3" pos:column="24"/></name> <init pos:line="3" pos:column="25">= <expr><call><name pos:line="3" pos:column="27">myModConfig<pos:position pos:line="3" pos:column="38"/></name><argument_list pos:line="3" pos:column="38">(<argument><expr><name pos:line="3" pos:column="39">s<pos:position pos:line="3" pos:column="40"/></name></expr></argument>)<pos:position pos:line="3" pos:column="41"/></argument_list></call></expr></init></decl>;<pos:position pos:line="3" pos:column="42"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="4" pos:column="5">void<pos:position pos:line="4" pos:column="9"/></name> <modifier pos:line="4" pos:column="10">*<pos:position pos:line="4" pos:column="11"/></modifier></type><name pos:line="4" pos:column="11">shm_segment<pos:position pos:line="4" pos:column="22"/></name></decl>;<pos:position pos:line="4" pos:column="23"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="5" pos:column="5">apr_size_t<pos:position pos:line="5" pos:column="15"/></name></type> <name pos:line="5" pos:column="16">shm_segsize<pos:position pos:line="5" pos:column="27"/></name></decl>;<pos:position pos:line="5" pos:column="28"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="6" pos:column="5">apr_status_t<pos:position pos:line="6" pos:column="17"/></name></type> <name pos:line="6" pos:column="18">rv<pos:position pos:line="6" pos:column="20"/></name></decl>;<pos:position pos:line="6" pos:column="21"/></decl_stmt>

    <comment type="block" pos:line="8" pos:column="5">/*
     * Create shared memory segment
     */</comment>
    <if pos:line="11" pos:column="5">if <condition pos:line="11" pos:column="8">(<expr><name><name pos:line="11" pos:column="9">mc<pos:position pos:line="11" pos:column="11"/></name><operator pos:line="11" pos:column="11">-&gt;<pos:position pos:line="11" pos:column="16"/></operator><name pos:line="11" pos:column="13">szSessionCacheDataFile<pos:position pos:line="11" pos:column="35"/></name></name> <operator pos:line="11" pos:column="36">==<pos:position pos:line="11" pos:column="38"/></operator> <name pos:line="11" pos:column="39">NULL<pos:position pos:line="11" pos:column="43"/></name></expr>)<pos:position pos:line="11" pos:column="44"/></condition><then pos:line="11" pos:column="44"> <block pos:line="11" pos:column="45">{
        <expr_stmt><expr><call><name pos:line="12" pos:column="9">ap_log_error<pos:position pos:line="12" pos:column="21"/></name><argument_list pos:line="12" pos:column="21">(<argument><expr><name pos:line="12" pos:column="22">APLOG_MARK<pos:position pos:line="12" pos:column="32"/></name></expr></argument>, <argument><expr><name pos:line="12" pos:column="34">APLOG_ERR<pos:position pos:line="12" pos:column="43"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="12" pos:column="45">0<pos:position pos:line="12" pos:column="46"/></literal></expr></argument>, <argument><expr><name pos:line="12" pos:column="48">s<pos:position pos:line="12" pos:column="49"/></name></expr></argument>,
                     <argument><expr><literal type="string" pos:line="13" pos:column="22">"SSLSessionCache required"<pos:position pos:line="13" pos:column="48"/></literal></expr></argument>)<pos:position pos:line="13" pos:column="49"/></argument_list></call></expr>;<pos:position pos:line="13" pos:column="50"/></expr_stmt>
        <expr_stmt><expr><call><name pos:line="14" pos:column="9">ssl_die<pos:position pos:line="14" pos:column="16"/></name><argument_list pos:line="14" pos:column="16">()<pos:position pos:line="14" pos:column="18"/></argument_list></call></expr>;<pos:position pos:line="14" pos:column="19"/></expr_stmt>
    }<pos:position pos:line="15" pos:column="6"/></block></then></if>

    <comment type="block" pos:line="17" pos:column="5">/* Use anonymous shm by default, fall back on name-based. */</comment>
    <expr_stmt><expr><name pos:line="18" pos:column="5">rv<pos:position pos:line="18" pos:column="7"/></name> <operator pos:line="18" pos:column="8">=<pos:position pos:line="18" pos:column="9"/></operator> <call><name pos:line="18" pos:column="10">apr_shm_create<pos:position pos:line="18" pos:column="24"/></name><argument_list pos:line="18" pos:column="24">(<argument><expr><operator pos:line="18" pos:column="25">&amp;<pos:position pos:line="18" pos:column="30"/></operator><operator pos:line="18" pos:column="26">(<pos:position pos:line="18" pos:column="27"/></operator><name><name pos:line="18" pos:column="27">mc<pos:position pos:line="18" pos:column="29"/></name><operator pos:line="18" pos:column="29">-&gt;<pos:position pos:line="18" pos:column="34"/></operator><name pos:line="18" pos:column="31">pSessionCacheDataMM<pos:position pos:line="18" pos:column="50"/></name></name><operator pos:line="18" pos:column="50">)<pos:position pos:line="18" pos:column="51"/></operator></expr></argument>,
                        <argument><expr><name><name pos:line="19" pos:column="25">mc<pos:position pos:line="19" pos:column="27"/></name><operator pos:line="19" pos:column="27">-&gt;<pos:position pos:line="19" pos:column="32"/></operator><name pos:line="19" pos:column="29">nSessionCacheDataSize<pos:position pos:line="19" pos:column="50"/></name></name></expr></argument>,
                        <argument><expr><name pos:line="20" pos:column="25">NULL<pos:position pos:line="20" pos:column="29"/></name></expr></argument>, <argument><expr><name><name pos:line="20" pos:column="31">mc<pos:position pos:line="20" pos:column="33"/></name><operator pos:line="20" pos:column="33">-&gt;<pos:position pos:line="20" pos:column="38"/></operator><name pos:line="20" pos:column="35">pPool<pos:position pos:line="20" pos:column="40"/></name></name></expr></argument>)<pos:position pos:line="20" pos:column="41"/></argument_list></call></expr>;<pos:position pos:line="20" pos:column="42"/></expr_stmt>

    <if pos:line="22" pos:column="5">if <condition pos:line="22" pos:column="8">(<expr><call><name pos:line="22" pos:column="9">APR_STATUS_IS_ENOTIMPL<pos:position pos:line="22" pos:column="31"/></name><argument_list pos:line="22" pos:column="31">(<argument><expr><name pos:line="22" pos:column="32">rv<pos:position pos:line="22" pos:column="34"/></name></expr></argument>)<pos:position pos:line="22" pos:column="35"/></argument_list></call></expr>)<pos:position pos:line="22" pos:column="36"/></condition><then pos:line="22" pos:column="36"> <block pos:line="22" pos:column="37">{
        <comment type="block" pos:line="23" pos:column="9">/* For a name-based segment, remove it first in case of a
         * previous unclean shutdown. */</comment>
        <expr_stmt><expr><call><name pos:line="25" pos:column="9">apr_shm_remove<pos:position pos:line="25" pos:column="23"/></name><argument_list pos:line="25" pos:column="23">(<argument><expr><name><name pos:line="25" pos:column="24">mc<pos:position pos:line="25" pos:column="26"/></name><operator pos:line="25" pos:column="26">-&gt;<pos:position pos:line="25" pos:column="31"/></operator><name pos:line="25" pos:column="28">szSessionCacheDataFile<pos:position pos:line="25" pos:column="50"/></name></name></expr></argument>, <argument><expr><name><name pos:line="25" pos:column="52">mc<pos:position pos:line="25" pos:column="54"/></name><operator pos:line="25" pos:column="54">-&gt;<pos:position pos:line="25" pos:column="59"/></operator><name pos:line="25" pos:column="56">pPool<pos:position pos:line="25" pos:column="61"/></name></name></expr></argument>)<pos:position pos:line="25" pos:column="62"/></argument_list></call></expr>;<pos:position pos:line="25" pos:column="63"/></expr_stmt>

        <expr_stmt><expr><name pos:line="27" pos:column="9">rv<pos:position pos:line="27" pos:column="11"/></name> <operator pos:line="27" pos:column="12">=<pos:position pos:line="27" pos:column="13"/></operator> <call><name pos:line="27" pos:column="14">apr_shm_create<pos:position pos:line="27" pos:column="28"/></name><argument_list pos:line="27" pos:column="28">(<argument><expr><operator pos:line="27" pos:column="29">&amp;<pos:position pos:line="27" pos:column="34"/></operator><operator pos:line="27" pos:column="30">(<pos:position pos:line="27" pos:column="31"/></operator><name><name pos:line="27" pos:column="31">mc<pos:position pos:line="27" pos:column="33"/></name><operator pos:line="27" pos:column="33">-&gt;<pos:position pos:line="27" pos:column="38"/></operator><name pos:line="27" pos:column="35">pSessionCacheDataMM<pos:position pos:line="27" pos:column="54"/></name></name><operator pos:line="27" pos:column="54">)<pos:position pos:line="27" pos:column="55"/></operator></expr></argument>,
                            <argument><expr><name><name pos:line="28" pos:column="29">mc<pos:position pos:line="28" pos:column="31"/></name><operator pos:line="28" pos:column="31">-&gt;<pos:position pos:line="28" pos:column="36"/></operator><name pos:line="28" pos:column="33">nSessionCacheDataSize<pos:position pos:line="28" pos:column="54"/></name></name></expr></argument>,
                            <argument><expr><name><name pos:line="29" pos:column="29">mc<pos:position pos:line="29" pos:column="31"/></name><operator pos:line="29" pos:column="31">-&gt;<pos:position pos:line="29" pos:column="36"/></operator><name pos:line="29" pos:column="33">szSessionCacheDataFile<pos:position pos:line="29" pos:column="55"/></name></name></expr></argument>,
                            <argument><expr><name><name pos:line="30" pos:column="29">mc<pos:position pos:line="30" pos:column="31"/></name><operator pos:line="30" pos:column="31">-&gt;<pos:position pos:line="30" pos:column="36"/></operator><name pos:line="30" pos:column="33">pPool<pos:position pos:line="30" pos:column="38"/></name></name></expr></argument>)<pos:position pos:line="30" pos:column="39"/></argument_list></call></expr>;<pos:position pos:line="30" pos:column="40"/></expr_stmt>
    }<pos:position pos:line="31" pos:column="6"/></block></then></if>

    <if pos:line="33" pos:column="5">if <condition pos:line="33" pos:column="8">(<expr><name pos:line="33" pos:column="9">rv<pos:position pos:line="33" pos:column="11"/></name> <operator pos:line="33" pos:column="12">!=<pos:position pos:line="33" pos:column="14"/></operator> <name pos:line="33" pos:column="15">APR_SUCCESS<pos:position pos:line="33" pos:column="26"/></name></expr>)<pos:position pos:line="33" pos:column="27"/></condition><then pos:line="33" pos:column="27"> <block pos:line="33" pos:column="28">{
        <decl_stmt><decl><type><name pos:line="34" pos:column="9">char<pos:position pos:line="34" pos:column="13"/></name></type> <name><name pos:line="34" pos:column="14">buf<pos:position pos:line="34" pos:column="17"/></name><index pos:line="34" pos:column="17">[<expr><literal type="number" pos:line="34" pos:column="18">100<pos:position pos:line="34" pos:column="21"/></literal></expr>]<pos:position pos:line="34" pos:column="22"/></index></name></decl>;<pos:position pos:line="34" pos:column="23"/></decl_stmt>
        <expr_stmt><expr><call><name pos:line="35" pos:column="9">ap_log_error<pos:position pos:line="35" pos:column="21"/></name><argument_list pos:line="35" pos:column="21">(<argument><expr><name pos:line="35" pos:column="22">APLOG_MARK<pos:position pos:line="35" pos:column="32"/></name></expr></argument>, <argument><expr><name pos:line="35" pos:column="34">APLOG_ERR<pos:position pos:line="35" pos:column="43"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="35" pos:column="45">0<pos:position pos:line="35" pos:column="46"/></literal></expr></argument>, <argument><expr><name pos:line="35" pos:column="48">s<pos:position pos:line="35" pos:column="49"/></name></expr></argument>,
                     <argument><expr><literal type="string" pos:line="36" pos:column="22">"Cannot allocate shared memory: (%d)%s"<pos:position pos:line="36" pos:column="61"/></literal></expr></argument>, <argument><expr><name pos:line="36" pos:column="63">rv<pos:position pos:line="36" pos:column="65"/></name></expr></argument>,
                     <argument><expr><call><name pos:line="37" pos:column="22">apr_strerror<pos:position pos:line="37" pos:column="34"/></name><argument_list pos:line="37" pos:column="34">(<argument><expr><name pos:line="37" pos:column="35">rv<pos:position pos:line="37" pos:column="37"/></name></expr></argument>, <argument><expr><name pos:line="37" pos:column="39">buf<pos:position pos:line="37" pos:column="42"/></name></expr></argument>, <argument><expr><sizeof pos:line="37" pos:column="44">sizeof<argument_list pos:line="37" pos:column="50">(<argument><expr><name pos:line="37" pos:column="51">buf<pos:position pos:line="37" pos:column="54"/></name></expr></argument>)<pos:position pos:line="37" pos:column="55"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="37" pos:column="56"/></argument_list></call></expr></argument>)<pos:position pos:line="37" pos:column="57"/></argument_list></call></expr>;<pos:position pos:line="37" pos:column="58"/></expr_stmt>
        <expr_stmt><expr><call><name pos:line="38" pos:column="9">ssl_die<pos:position pos:line="38" pos:column="16"/></name><argument_list pos:line="38" pos:column="16">()<pos:position pos:line="38" pos:column="18"/></argument_list></call></expr>;<pos:position pos:line="38" pos:column="19"/></expr_stmt>
    }<pos:position pos:line="39" pos:column="6"/></block></then></if>
    <expr_stmt><expr><name pos:line="40" pos:column="5">shm_segment<pos:position pos:line="40" pos:column="16"/></name> <operator pos:line="40" pos:column="17">=<pos:position pos:line="40" pos:column="18"/></operator> <call><name pos:line="40" pos:column="19">apr_shm_baseaddr_get<pos:position pos:line="40" pos:column="39"/></name><argument_list pos:line="40" pos:column="39">(<argument><expr><name><name pos:line="40" pos:column="40">mc<pos:position pos:line="40" pos:column="42"/></name><operator pos:line="40" pos:column="42">-&gt;<pos:position pos:line="40" pos:column="47"/></operator><name pos:line="40" pos:column="44">pSessionCacheDataMM<pos:position pos:line="40" pos:column="63"/></name></name></expr></argument>)<pos:position pos:line="40" pos:column="64"/></argument_list></call></expr>;<pos:position pos:line="40" pos:column="65"/></expr_stmt>
    <expr_stmt><expr><name pos:line="41" pos:column="5">shm_segsize<pos:position pos:line="41" pos:column="16"/></name> <operator pos:line="41" pos:column="17">=<pos:position pos:line="41" pos:column="18"/></operator> <call><name pos:line="41" pos:column="19">apr_shm_size_get<pos:position pos:line="41" pos:column="35"/></name><argument_list pos:line="41" pos:column="35">(<argument><expr><name><name pos:line="41" pos:column="36">mc<pos:position pos:line="41" pos:column="38"/></name><operator pos:line="41" pos:column="38">-&gt;<pos:position pos:line="41" pos:column="43"/></operator><name pos:line="41" pos:column="40">pSessionCacheDataMM<pos:position pos:line="41" pos:column="59"/></name></name></expr></argument>)<pos:position pos:line="41" pos:column="60"/></argument_list></call></expr>;<pos:position pos:line="41" pos:column="61"/></expr_stmt>

    <expr_stmt><expr><call><name pos:line="43" pos:column="5">ap_log_error<pos:position pos:line="43" pos:column="17"/></name><argument_list pos:line="43" pos:column="17">(<argument><expr><name pos:line="43" pos:column="18">APLOG_MARK<pos:position pos:line="43" pos:column="28"/></name></expr></argument>, <argument><expr><name pos:line="43" pos:column="30">APLOG_DEBUG<pos:position pos:line="43" pos:column="41"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="43" pos:column="43">0<pos:position pos:line="43" pos:column="44"/></literal></expr></argument>, <argument><expr><name pos:line="43" pos:column="46">s<pos:position pos:line="43" pos:column="47"/></name></expr></argument>,
                 <argument><expr><literal type="string" pos:line="44" pos:column="18">"shmcb_init allocated %"<pos:position pos:line="44" pos:column="42"/></literal> <name pos:line="44" pos:column="43">APR_SIZE_T_FMT<pos:position pos:line="44" pos:column="57"/></name>
                 <literal type="string" pos:line="45" pos:column="18">" bytes of shared memory"<pos:position pos:line="45" pos:column="43"/></literal></expr></argument>,
                 <argument><expr><name pos:line="46" pos:column="18">shm_segsize<pos:position pos:line="46" pos:column="29"/></name></expr></argument>)<pos:position pos:line="46" pos:column="30"/></argument_list></call></expr>;<pos:position pos:line="46" pos:column="31"/></expr_stmt>
    <if pos:line="47" pos:column="5">if <condition pos:line="47" pos:column="8">(<expr><operator pos:line="47" pos:column="9">!<pos:position pos:line="47" pos:column="10"/></operator><call><name pos:line="47" pos:column="10">shmcb_init_memory<pos:position pos:line="47" pos:column="27"/></name><argument_list pos:line="47" pos:column="27">(<argument><expr><name pos:line="47" pos:column="28">s<pos:position pos:line="47" pos:column="29"/></name></expr></argument>, <argument><expr><name pos:line="47" pos:column="31">shm_segment<pos:position pos:line="47" pos:column="42"/></name></expr></argument>, <argument><expr><name pos:line="47" pos:column="44">shm_segsize<pos:position pos:line="47" pos:column="55"/></name></expr></argument>)<pos:position pos:line="47" pos:column="56"/></argument_list></call></expr>)<pos:position pos:line="47" pos:column="57"/></condition><then pos:line="47" pos:column="57"> <block pos:line="47" pos:column="58">{
        <expr_stmt><expr><call><name pos:line="48" pos:column="9">ap_log_error<pos:position pos:line="48" pos:column="21"/></name><argument_list pos:line="48" pos:column="21">(<argument><expr><name pos:line="48" pos:column="22">APLOG_MARK<pos:position pos:line="48" pos:column="32"/></name></expr></argument>, <argument><expr><name pos:line="48" pos:column="34">APLOG_ERR<pos:position pos:line="48" pos:column="43"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="48" pos:column="45">0<pos:position pos:line="48" pos:column="46"/></literal></expr></argument>, <argument><expr><name pos:line="48" pos:column="48">s<pos:position pos:line="48" pos:column="49"/></name></expr></argument>,
                     <argument><expr><literal type="string" pos:line="49" pos:column="22">"Failure initialising 'shmcb' shared memory"<pos:position pos:line="49" pos:column="66"/></literal></expr></argument>)<pos:position pos:line="49" pos:column="67"/></argument_list></call></expr>;<pos:position pos:line="49" pos:column="68"/></expr_stmt>
        <expr_stmt><expr><call><name pos:line="50" pos:column="9">ssl_die<pos:position pos:line="50" pos:column="16"/></name><argument_list pos:line="50" pos:column="16">()<pos:position pos:line="50" pos:column="18"/></argument_list></call></expr>;<pos:position pos:line="50" pos:column="19"/></expr_stmt>
    }<pos:position pos:line="51" pos:column="6"/></block></then></if>
    <expr_stmt><expr><call><name pos:line="52" pos:column="5">ap_log_error<pos:position pos:line="52" pos:column="17"/></name><argument_list pos:line="52" pos:column="17">(<argument><expr><name pos:line="52" pos:column="18">APLOG_MARK<pos:position pos:line="52" pos:column="28"/></name></expr></argument>, <argument><expr><name pos:line="52" pos:column="30">APLOG_INFO<pos:position pos:line="52" pos:column="40"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="52" pos:column="42">0<pos:position pos:line="52" pos:column="43"/></literal></expr></argument>, <argument><expr><name pos:line="52" pos:column="45">s<pos:position pos:line="52" pos:column="46"/></name></expr></argument>,
                 <argument><expr><literal type="string" pos:line="53" pos:column="18">"Shared memory session cache initialised"<pos:position pos:line="53" pos:column="59"/></literal></expr></argument>)<pos:position pos:line="53" pos:column="60"/></argument_list></call></expr>;<pos:position pos:line="53" pos:column="61"/></expr_stmt>

    <comment type="block" pos:line="55" pos:column="5">/*
     * Success ...
     */</comment>
    <expr_stmt><expr><name><name pos:line="58" pos:column="5">mc<pos:position pos:line="58" pos:column="7"/></name><operator pos:line="58" pos:column="7">-&gt;<pos:position pos:line="58" pos:column="12"/></operator><name pos:line="58" pos:column="9">tSessionCacheDataTable<pos:position pos:line="58" pos:column="31"/></name></name> <operator pos:line="58" pos:column="32">=<pos:position pos:line="58" pos:column="33"/></operator> <name pos:line="58" pos:column="34">shm_segment<pos:position pos:line="58" pos:column="45"/></name></expr>;<pos:position pos:line="58" pos:column="46"/></expr_stmt>
    <return pos:line="59" pos:column="5">return;<pos:position pos:line="59" pos:column="12"/></return>
}<pos:position pos:line="60" pos:column="2"/></block></function></unit>

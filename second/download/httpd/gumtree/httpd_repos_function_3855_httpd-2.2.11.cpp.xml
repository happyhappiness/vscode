<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/httpd/gumtree/httpd_repos_function_3855_httpd-2.2.11.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">apr_status_t<pos:position pos:line="1" pos:column="20"/></name></type> <name pos:line="1" pos:column="21">shm_cleanup_owner<pos:position pos:line="1" pos:column="38"/></name><parameter_list pos:line="1" pos:column="38">(<parameter><decl><type><name pos:line="1" pos:column="39">void<pos:position pos:line="1" pos:column="43"/></name> <modifier pos:line="1" pos:column="44">*<pos:position pos:line="1" pos:column="45"/></modifier></type><name pos:line="1" pos:column="45">m_<pos:position pos:line="1" pos:column="47"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="48"/></parameter_list>
<block pos:line="2" pos:column="1">{
    <decl_stmt><decl><type><name pos:line="3" pos:column="5">apr_shm_t<pos:position pos:line="3" pos:column="14"/></name> <modifier pos:line="3" pos:column="15">*<pos:position pos:line="3" pos:column="16"/></modifier></type><name pos:line="3" pos:column="16">m<pos:position pos:line="3" pos:column="17"/></name> <init pos:line="3" pos:column="18">= <expr><operator pos:line="3" pos:column="20">(<pos:position pos:line="3" pos:column="21"/></operator><name pos:line="3" pos:column="21">apr_shm_t<pos:position pos:line="3" pos:column="30"/></name> <operator pos:line="3" pos:column="31">*<pos:position pos:line="3" pos:column="32"/></operator><operator pos:line="3" pos:column="32">)<pos:position pos:line="3" pos:column="33"/></operator><name pos:line="3" pos:column="33">m_<pos:position pos:line="3" pos:column="35"/></name></expr></init></decl>;<pos:position pos:line="3" pos:column="36"/></decl_stmt>

    <comment type="block" pos:line="5" pos:column="5">/* anonymous shared memory */</comment>
    <if pos:line="6" pos:column="5">if <condition pos:line="6" pos:column="8">(<expr><name><name pos:line="6" pos:column="9">m<pos:position pos:line="6" pos:column="10"/></name><operator pos:line="6" pos:column="10">-&gt;<pos:position pos:line="6" pos:column="15"/></operator><name pos:line="6" pos:column="12">filename<pos:position pos:line="6" pos:column="20"/></name></name> <operator pos:line="6" pos:column="21">==<pos:position pos:line="6" pos:column="23"/></operator> <name pos:line="6" pos:column="24">NULL<pos:position pos:line="6" pos:column="28"/></name></expr>)<pos:position pos:line="6" pos:column="29"/></condition><then pos:line="6" pos:column="29"> <block pos:line="6" pos:column="30">{
<cpp:if pos:line="7" pos:column="1">#<cpp:directive pos:line="7" pos:column="2">if<pos:position pos:line="7" pos:column="4"/></cpp:directive> <expr><name pos:line="7" pos:column="5">APR_USE_SHMEM_MMAP_ZERO<pos:position pos:line="7" pos:column="28"/></name> <operator pos:line="7" pos:column="29">||<pos:position pos:line="7" pos:column="31"/></operator> <name pos:line="7" pos:column="32">APR_USE_SHMEM_MMAP_ANON<pos:position pos:line="7" pos:column="55"/></name></expr></cpp:if>
        <if pos:line="8" pos:column="9">if <condition pos:line="8" pos:column="12">(<expr><call><name pos:line="8" pos:column="13">munmap<pos:position pos:line="8" pos:column="19"/></name><argument_list pos:line="8" pos:column="19">(<argument><expr><name><name pos:line="8" pos:column="20">m<pos:position pos:line="8" pos:column="21"/></name><operator pos:line="8" pos:column="21">-&gt;<pos:position pos:line="8" pos:column="26"/></operator><name pos:line="8" pos:column="23">base<pos:position pos:line="8" pos:column="27"/></name></name></expr></argument>, <argument><expr><name><name pos:line="8" pos:column="29">m<pos:position pos:line="8" pos:column="30"/></name><operator pos:line="8" pos:column="30">-&gt;<pos:position pos:line="8" pos:column="35"/></operator><name pos:line="8" pos:column="32">realsize<pos:position pos:line="8" pos:column="40"/></name></name></expr></argument>)<pos:position pos:line="8" pos:column="41"/></argument_list></call> <operator pos:line="8" pos:column="42">==<pos:position pos:line="8" pos:column="44"/></operator> <operator pos:line="8" pos:column="45">-<pos:position pos:line="8" pos:column="46"/></operator><literal type="number" pos:line="8" pos:column="46">1<pos:position pos:line="8" pos:column="47"/></literal></expr>)<pos:position pos:line="8" pos:column="48"/></condition><then pos:line="8" pos:column="48"> <block pos:line="8" pos:column="49">{
            <return pos:line="9" pos:column="13">return <expr><name pos:line="9" pos:column="20">errno<pos:position pos:line="9" pos:column="25"/></name></expr>;<pos:position pos:line="9" pos:column="26"/></return>
        }<pos:position pos:line="10" pos:column="10"/></block></then></if>
        <return pos:line="11" pos:column="9">return <expr><name pos:line="11" pos:column="16">APR_SUCCESS<pos:position pos:line="11" pos:column="27"/></name></expr>;<pos:position pos:line="11" pos:column="28"/></return>
<cpp:endif pos:line="12" pos:column="1">#<cpp:directive pos:line="12" pos:column="2">endif<pos:position pos:line="12" pos:column="7"/></cpp:directive></cpp:endif>
<cpp:if pos:line="13" pos:column="1">#<cpp:directive pos:line="13" pos:column="2">if<pos:position pos:line="13" pos:column="4"/></cpp:directive> <expr><name pos:line="13" pos:column="5">APR_USE_SHMEM_SHMGET_ANON<pos:position pos:line="13" pos:column="30"/></name></expr></cpp:if>
        <if pos:line="14" pos:column="9">if <condition pos:line="14" pos:column="12">(<expr><call><name pos:line="14" pos:column="13">shmdt<pos:position pos:line="14" pos:column="18"/></name><argument_list pos:line="14" pos:column="18">(<argument><expr><name><name pos:line="14" pos:column="19">m<pos:position pos:line="14" pos:column="20"/></name><operator pos:line="14" pos:column="20">-&gt;<pos:position pos:line="14" pos:column="25"/></operator><name pos:line="14" pos:column="22">base<pos:position pos:line="14" pos:column="26"/></name></name></expr></argument>)<pos:position pos:line="14" pos:column="27"/></argument_list></call> <operator pos:line="14" pos:column="28">==<pos:position pos:line="14" pos:column="30"/></operator> <operator pos:line="14" pos:column="31">-<pos:position pos:line="14" pos:column="32"/></operator><literal type="number" pos:line="14" pos:column="32">1<pos:position pos:line="14" pos:column="33"/></literal></expr>)<pos:position pos:line="14" pos:column="34"/></condition><then pos:line="14" pos:column="34"> <block pos:line="14" pos:column="35">{
            <return pos:line="15" pos:column="13">return <expr><name pos:line="15" pos:column="20">errno<pos:position pos:line="15" pos:column="25"/></name></expr>;<pos:position pos:line="15" pos:column="26"/></return>
        }<pos:position pos:line="16" pos:column="10"/></block></then></if>
        <comment type="block" pos:line="17" pos:column="9">/* This segment will automatically remove itself after all
         * references have detached. */</comment>
        <return pos:line="19" pos:column="9">return <expr><name pos:line="19" pos:column="16">APR_SUCCESS<pos:position pos:line="19" pos:column="27"/></name></expr>;<pos:position pos:line="19" pos:column="28"/></return>
<cpp:endif pos:line="20" pos:column="1">#<cpp:directive pos:line="20" pos:column="2">endif<pos:position pos:line="20" pos:column="7"/></cpp:directive></cpp:endif>
    }<pos:position pos:line="21" pos:column="6"/></block></then>

    <comment type="block" pos:line="23" pos:column="5">/* name-based shared memory */</comment>
    <else pos:line="24" pos:column="5">else <block pos:line="24" pos:column="10">{
<cpp:if pos:line="25" pos:column="1">#<cpp:directive pos:line="25" pos:column="2">if<pos:position pos:line="25" pos:column="4"/></cpp:directive> <expr><name pos:line="25" pos:column="5">APR_USE_SHMEM_MMAP_TMP<pos:position pos:line="25" pos:column="27"/></name></expr></cpp:if>
        <if pos:line="26" pos:column="9">if <condition pos:line="26" pos:column="12">(<expr><call><name pos:line="26" pos:column="13">munmap<pos:position pos:line="26" pos:column="19"/></name><argument_list pos:line="26" pos:column="19">(<argument><expr><name><name pos:line="26" pos:column="20">m<pos:position pos:line="26" pos:column="21"/></name><operator pos:line="26" pos:column="21">-&gt;<pos:position pos:line="26" pos:column="26"/></operator><name pos:line="26" pos:column="23">base<pos:position pos:line="26" pos:column="27"/></name></name></expr></argument>, <argument><expr><name><name pos:line="26" pos:column="29">m<pos:position pos:line="26" pos:column="30"/></name><operator pos:line="26" pos:column="30">-&gt;<pos:position pos:line="26" pos:column="35"/></operator><name pos:line="26" pos:column="32">realsize<pos:position pos:line="26" pos:column="40"/></name></name></expr></argument>)<pos:position pos:line="26" pos:column="41"/></argument_list></call> <operator pos:line="26" pos:column="42">==<pos:position pos:line="26" pos:column="44"/></operator> <operator pos:line="26" pos:column="45">-<pos:position pos:line="26" pos:column="46"/></operator><literal type="number" pos:line="26" pos:column="46">1<pos:position pos:line="26" pos:column="47"/></literal></expr>)<pos:position pos:line="26" pos:column="48"/></condition><then pos:line="26" pos:column="48"> <block pos:line="26" pos:column="49">{
            <return pos:line="27" pos:column="13">return <expr><name pos:line="27" pos:column="20">errno<pos:position pos:line="27" pos:column="25"/></name></expr>;<pos:position pos:line="27" pos:column="26"/></return>
        }<pos:position pos:line="28" pos:column="10"/></block></then></if>
        <if pos:line="29" pos:column="9">if <condition pos:line="29" pos:column="12">(<expr><call><name pos:line="29" pos:column="13">access<pos:position pos:line="29" pos:column="19"/></name><argument_list pos:line="29" pos:column="19">(<argument><expr><name><name pos:line="29" pos:column="20">m<pos:position pos:line="29" pos:column="21"/></name><operator pos:line="29" pos:column="21">-&gt;<pos:position pos:line="29" pos:column="26"/></operator><name pos:line="29" pos:column="23">filename<pos:position pos:line="29" pos:column="31"/></name></name></expr></argument>, <argument><expr><name pos:line="29" pos:column="33">F_OK<pos:position pos:line="29" pos:column="37"/></name></expr></argument>)<pos:position pos:line="29" pos:column="38"/></argument_list></call></expr>)<pos:position pos:line="29" pos:column="39"/></condition><then pos:line="29" pos:column="39"> <block pos:line="29" pos:column="40">{
            <return pos:line="30" pos:column="13">return <expr><name pos:line="30" pos:column="20">APR_SUCCESS<pos:position pos:line="30" pos:column="31"/></name></expr>;<pos:position pos:line="30" pos:column="32"/></return>
        }<pos:position pos:line="31" pos:column="10"/></block></then>
        <else pos:line="32" pos:column="9">else <block pos:line="32" pos:column="14">{
            <return pos:line="33" pos:column="13">return <expr><call><name pos:line="33" pos:column="20">apr_file_remove<pos:position pos:line="33" pos:column="35"/></name><argument_list pos:line="33" pos:column="35">(<argument><expr><name><name pos:line="33" pos:column="36">m<pos:position pos:line="33" pos:column="37"/></name><operator pos:line="33" pos:column="37">-&gt;<pos:position pos:line="33" pos:column="42"/></operator><name pos:line="33" pos:column="39">filename<pos:position pos:line="33" pos:column="47"/></name></name></expr></argument>, <argument><expr><name><name pos:line="33" pos:column="49">m<pos:position pos:line="33" pos:column="50"/></name><operator pos:line="33" pos:column="50">-&gt;<pos:position pos:line="33" pos:column="55"/></operator><name pos:line="33" pos:column="52">pool<pos:position pos:line="33" pos:column="56"/></name></name></expr></argument>)<pos:position pos:line="33" pos:column="57"/></argument_list></call></expr>;<pos:position pos:line="33" pos:column="58"/></return>
        }<pos:position pos:line="34" pos:column="10"/></block></else></if>
<cpp:endif pos:line="35" pos:column="1">#<cpp:directive pos:line="35" pos:column="2">endif<pos:position pos:line="35" pos:column="7"/></cpp:directive></cpp:endif>
<cpp:if pos:line="36" pos:column="1">#<cpp:directive pos:line="36" pos:column="2">if<pos:position pos:line="36" pos:column="4"/></cpp:directive> <expr><name pos:line="36" pos:column="5">APR_USE_SHMEM_MMAP_SHM<pos:position pos:line="36" pos:column="27"/></name></expr></cpp:if>
        <if pos:line="37" pos:column="9">if <condition pos:line="37" pos:column="12">(<expr><call><name pos:line="37" pos:column="13">munmap<pos:position pos:line="37" pos:column="19"/></name><argument_list pos:line="37" pos:column="19">(<argument><expr><name><name pos:line="37" pos:column="20">m<pos:position pos:line="37" pos:column="21"/></name><operator pos:line="37" pos:column="21">-&gt;<pos:position pos:line="37" pos:column="26"/></operator><name pos:line="37" pos:column="23">base<pos:position pos:line="37" pos:column="27"/></name></name></expr></argument>, <argument><expr><name><name pos:line="37" pos:column="29">m<pos:position pos:line="37" pos:column="30"/></name><operator pos:line="37" pos:column="30">-&gt;<pos:position pos:line="37" pos:column="35"/></operator><name pos:line="37" pos:column="32">realsize<pos:position pos:line="37" pos:column="40"/></name></name></expr></argument>)<pos:position pos:line="37" pos:column="41"/></argument_list></call> <operator pos:line="37" pos:column="42">==<pos:position pos:line="37" pos:column="44"/></operator> <operator pos:line="37" pos:column="45">-<pos:position pos:line="37" pos:column="46"/></operator><literal type="number" pos:line="37" pos:column="46">1<pos:position pos:line="37" pos:column="47"/></literal></expr>)<pos:position pos:line="37" pos:column="48"/></condition><then pos:line="37" pos:column="48"> <block pos:line="37" pos:column="49">{
            <return pos:line="38" pos:column="13">return <expr><name pos:line="38" pos:column="20">errno<pos:position pos:line="38" pos:column="25"/></name></expr>;<pos:position pos:line="38" pos:column="26"/></return>
        }<pos:position pos:line="39" pos:column="10"/></block></then></if>
        <if pos:line="40" pos:column="9">if <condition pos:line="40" pos:column="12">(<expr><call><name pos:line="40" pos:column="13">shm_unlink<pos:position pos:line="40" pos:column="23"/></name><argument_list pos:line="40" pos:column="23">(<argument><expr><name><name pos:line="40" pos:column="24">m<pos:position pos:line="40" pos:column="25"/></name><operator pos:line="40" pos:column="25">-&gt;<pos:position pos:line="40" pos:column="30"/></operator><name pos:line="40" pos:column="27">filename<pos:position pos:line="40" pos:column="35"/></name></name></expr></argument>)<pos:position pos:line="40" pos:column="36"/></argument_list></call> <operator pos:line="40" pos:column="37">==<pos:position pos:line="40" pos:column="39"/></operator> <operator pos:line="40" pos:column="40">-<pos:position pos:line="40" pos:column="41"/></operator><literal type="number" pos:line="40" pos:column="41">1<pos:position pos:line="40" pos:column="42"/></literal></expr>)<pos:position pos:line="40" pos:column="43"/></condition><then pos:line="40" pos:column="43"> <block pos:line="40" pos:column="44">{
            <return pos:line="41" pos:column="13">return <expr><name pos:line="41" pos:column="20">errno<pos:position pos:line="41" pos:column="25"/></name></expr>;<pos:position pos:line="41" pos:column="26"/></return>
        }<pos:position pos:line="42" pos:column="10"/></block></then></if>
        <return pos:line="43" pos:column="9">return <expr><name pos:line="43" pos:column="16">APR_SUCCESS<pos:position pos:line="43" pos:column="27"/></name></expr>;<pos:position pos:line="43" pos:column="28"/></return>
<cpp:endif pos:line="44" pos:column="1">#<cpp:directive pos:line="44" pos:column="2">endif<pos:position pos:line="44" pos:column="7"/></cpp:directive></cpp:endif>
<cpp:if pos:line="45" pos:column="1">#<cpp:directive pos:line="45" pos:column="2">if<pos:position pos:line="45" pos:column="4"/></cpp:directive> <expr><name pos:line="45" pos:column="5">APR_USE_SHMEM_SHMGET<pos:position pos:line="45" pos:column="25"/></name></expr></cpp:if>
        <comment type="block" pos:line="46" pos:column="9">/* Indicate that the segment is to be destroyed as soon
         * as all processes have detached. This also disallows any
         * new attachments to the segment. */</comment>
        <if pos:line="49" pos:column="9">if <condition pos:line="49" pos:column="12">(<expr><call><name pos:line="49" pos:column="13">shmctl<pos:position pos:line="49" pos:column="19"/></name><argument_list pos:line="49" pos:column="19">(<argument><expr><name><name pos:line="49" pos:column="20">m<pos:position pos:line="49" pos:column="21"/></name><operator pos:line="49" pos:column="21">-&gt;<pos:position pos:line="49" pos:column="26"/></operator><name pos:line="49" pos:column="23">shmid<pos:position pos:line="49" pos:column="28"/></name></name></expr></argument>, <argument><expr><name pos:line="49" pos:column="30">IPC_RMID<pos:position pos:line="49" pos:column="38"/></name></expr></argument>, <argument><expr><name pos:line="49" pos:column="40">NULL<pos:position pos:line="49" pos:column="44"/></name></expr></argument>)<pos:position pos:line="49" pos:column="45"/></argument_list></call> <operator pos:line="49" pos:column="46">==<pos:position pos:line="49" pos:column="48"/></operator> <operator pos:line="49" pos:column="49">-<pos:position pos:line="49" pos:column="50"/></operator><literal type="number" pos:line="49" pos:column="50">1<pos:position pos:line="49" pos:column="51"/></literal> <operator pos:line="49" pos:column="52">&amp;&amp;<pos:position pos:line="49" pos:column="62"/></operator> <name pos:line="49" pos:column="55">errno<pos:position pos:line="49" pos:column="60"/></name> <operator pos:line="49" pos:column="61">!=<pos:position pos:line="49" pos:column="63"/></operator> <name pos:line="49" pos:column="64">EINVAL<pos:position pos:line="49" pos:column="70"/></name></expr>)<pos:position pos:line="49" pos:column="71"/></condition><then pos:line="49" pos:column="71"> <block pos:line="49" pos:column="72">{
            <return pos:line="50" pos:column="13">return <expr><name pos:line="50" pos:column="20">errno<pos:position pos:line="50" pos:column="25"/></name></expr>;<pos:position pos:line="50" pos:column="26"/></return>
        }<pos:position pos:line="51" pos:column="10"/></block></then></if>
        <if pos:line="52" pos:column="9">if <condition pos:line="52" pos:column="12">(<expr><call><name pos:line="52" pos:column="13">shmdt<pos:position pos:line="52" pos:column="18"/></name><argument_list pos:line="52" pos:column="18">(<argument><expr><name><name pos:line="52" pos:column="19">m<pos:position pos:line="52" pos:column="20"/></name><operator pos:line="52" pos:column="20">-&gt;<pos:position pos:line="52" pos:column="25"/></operator><name pos:line="52" pos:column="22">base<pos:position pos:line="52" pos:column="26"/></name></name></expr></argument>)<pos:position pos:line="52" pos:column="27"/></argument_list></call> <operator pos:line="52" pos:column="28">==<pos:position pos:line="52" pos:column="30"/></operator> <operator pos:line="52" pos:column="31">-<pos:position pos:line="52" pos:column="32"/></operator><literal type="number" pos:line="52" pos:column="32">1<pos:position pos:line="52" pos:column="33"/></literal></expr>)<pos:position pos:line="52" pos:column="34"/></condition><then pos:line="52" pos:column="34"> <block pos:line="52" pos:column="35">{
            <return pos:line="53" pos:column="13">return <expr><name pos:line="53" pos:column="20">errno<pos:position pos:line="53" pos:column="25"/></name></expr>;<pos:position pos:line="53" pos:column="26"/></return>
        }<pos:position pos:line="54" pos:column="10"/></block></then></if>
        <if pos:line="55" pos:column="9">if <condition pos:line="55" pos:column="12">(<expr><call><name pos:line="55" pos:column="13">access<pos:position pos:line="55" pos:column="19"/></name><argument_list pos:line="55" pos:column="19">(<argument><expr><name><name pos:line="55" pos:column="20">m<pos:position pos:line="55" pos:column="21"/></name><operator pos:line="55" pos:column="21">-&gt;<pos:position pos:line="55" pos:column="26"/></operator><name pos:line="55" pos:column="23">filename<pos:position pos:line="55" pos:column="31"/></name></name></expr></argument>, <argument><expr><name pos:line="55" pos:column="33">F_OK<pos:position pos:line="55" pos:column="37"/></name></expr></argument>)<pos:position pos:line="55" pos:column="38"/></argument_list></call></expr>)<pos:position pos:line="55" pos:column="39"/></condition><then pos:line="55" pos:column="39"> <block pos:line="55" pos:column="40">{
            <return pos:line="56" pos:column="13">return <expr><name pos:line="56" pos:column="20">APR_SUCCESS<pos:position pos:line="56" pos:column="31"/></name></expr>;<pos:position pos:line="56" pos:column="32"/></return>
        }<pos:position pos:line="57" pos:column="10"/></block></then>
        <else pos:line="58" pos:column="9">else <block pos:line="58" pos:column="14">{
            <return pos:line="59" pos:column="13">return <expr><call><name pos:line="59" pos:column="20">apr_file_remove<pos:position pos:line="59" pos:column="35"/></name><argument_list pos:line="59" pos:column="35">(<argument><expr><name><name pos:line="59" pos:column="36">m<pos:position pos:line="59" pos:column="37"/></name><operator pos:line="59" pos:column="37">-&gt;<pos:position pos:line="59" pos:column="42"/></operator><name pos:line="59" pos:column="39">filename<pos:position pos:line="59" pos:column="47"/></name></name></expr></argument>, <argument><expr><name><name pos:line="59" pos:column="49">m<pos:position pos:line="59" pos:column="50"/></name><operator pos:line="59" pos:column="50">-&gt;<pos:position pos:line="59" pos:column="55"/></operator><name pos:line="59" pos:column="52">pool<pos:position pos:line="59" pos:column="56"/></name></name></expr></argument>)<pos:position pos:line="59" pos:column="57"/></argument_list></call></expr>;<pos:position pos:line="59" pos:column="58"/></return>
        }<pos:position pos:line="60" pos:column="10"/></block></else></if>
<cpp:endif pos:line="61" pos:column="1">#<cpp:directive pos:line="61" pos:column="2">endif<pos:position pos:line="61" pos:column="7"/></cpp:directive></cpp:endif>
    }<pos:position pos:line="62" pos:column="6"/></block></else></if>

    <return pos:line="64" pos:column="5">return <expr><name pos:line="64" pos:column="12">APR_ENOTIMPL<pos:position pos:line="64" pos:column="24"/></name></expr>;<pos:position pos:line="64" pos:column="25"/></return>
}<pos:position pos:line="65" pos:column="2"/></block></function></unit>

<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/httpd/gumtree/httpd_function_5710.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">int<pos:position pos:line="1" pos:column="11"/></name></type> <name pos:line="1" pos:column="12">get_and_check_cached_response<pos:position pos:line="1" pos:column="41"/></name><parameter_list pos:line="1" pos:column="41">(<parameter><decl><type><name pos:line="1" pos:column="42">server_rec<pos:position pos:line="1" pos:column="52"/></name> <modifier pos:line="1" pos:column="53">*<pos:position pos:line="1" pos:column="54"/></modifier></type><name pos:line="1" pos:column="54">s<pos:position pos:line="1" pos:column="55"/></name></decl></parameter>, <parameter><decl><type><name pos:line="1" pos:column="57">modssl_ctx_t<pos:position pos:line="1" pos:column="69"/></name> <modifier pos:line="1" pos:column="70">*<pos:position pos:line="1" pos:column="71"/></modifier></type><name pos:line="1" pos:column="71">mctx<pos:position pos:line="1" pos:column="75"/></name></decl></parameter>,
                                         <parameter><decl><type><name pos:line="2" pos:column="42">OCSP_RESPONSE<pos:position pos:line="2" pos:column="55"/></name> <modifier pos:line="2" pos:column="56">*<pos:position pos:line="2" pos:column="57"/></modifier><modifier pos:line="2" pos:column="57">*<pos:position pos:line="2" pos:column="58"/></modifier></type><name pos:line="2" pos:column="58">rsp<pos:position pos:line="2" pos:column="61"/></name></decl></parameter>, <parameter><decl><type><name pos:line="2" pos:column="63">certinfo<pos:position pos:line="2" pos:column="71"/></name> <modifier pos:line="2" pos:column="72">*<pos:position pos:line="2" pos:column="73"/></modifier></type><name pos:line="2" pos:column="73">cinf<pos:position pos:line="2" pos:column="77"/></name></decl></parameter>, 
                                         <parameter><decl><type><name pos:line="3" pos:column="42">apr_pool_t<pos:position pos:line="3" pos:column="52"/></name> <modifier pos:line="3" pos:column="53">*<pos:position pos:line="3" pos:column="54"/></modifier></type><name pos:line="3" pos:column="54">p<pos:position pos:line="3" pos:column="55"/></name></decl></parameter>)<pos:position pos:line="3" pos:column="56"/></parameter_list>
<block pos:line="4" pos:column="1">{
    <decl_stmt><decl><type><name pos:line="5" pos:column="5">BOOL<pos:position pos:line="5" pos:column="9"/></name></type> <name pos:line="5" pos:column="10">ok<pos:position pos:line="5" pos:column="12"/></name></decl>;<pos:position pos:line="5" pos:column="13"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="6" pos:column="5">int<pos:position pos:line="6" pos:column="8"/></name></type> <name pos:line="6" pos:column="9">rv<pos:position pos:line="6" pos:column="11"/></name></decl>;<pos:position pos:line="6" pos:column="12"/></decl_stmt>

    <expr_stmt><expr><call><name pos:line="8" pos:column="5">AP_DEBUG_ASSERT<pos:position pos:line="8" pos:column="20"/></name><argument_list pos:line="8" pos:column="20">(<argument><expr><operator pos:line="8" pos:column="21">*<pos:position pos:line="8" pos:column="22"/></operator><name pos:line="8" pos:column="22">rsp<pos:position pos:line="8" pos:column="25"/></name> <operator pos:line="8" pos:column="26">==<pos:position pos:line="8" pos:column="28"/></operator> <name pos:line="8" pos:column="29">NULL<pos:position pos:line="8" pos:column="33"/></name></expr></argument>)<pos:position pos:line="8" pos:column="34"/></argument_list></call></expr>;<pos:position pos:line="8" pos:column="35"/></expr_stmt>

    <comment type="block" pos:line="10" pos:column="5">/* Check to see if we already have a response for this certificate */</comment>
    <expr_stmt><expr><call><name pos:line="11" pos:column="5">stapling_get_cached_response<pos:position pos:line="11" pos:column="33"/></name><argument_list pos:line="11" pos:column="33">(<argument><expr><name pos:line="11" pos:column="34">s<pos:position pos:line="11" pos:column="35"/></name></expr></argument>, <argument><expr><name pos:line="11" pos:column="37">rsp<pos:position pos:line="11" pos:column="40"/></name></expr></argument>, <argument><expr><operator pos:line="11" pos:column="42">&amp;<pos:position pos:line="11" pos:column="47"/></operator><name pos:line="11" pos:column="43">ok<pos:position pos:line="11" pos:column="45"/></name></expr></argument>, <argument><expr><name pos:line="11" pos:column="47">cinf<pos:position pos:line="11" pos:column="51"/></name></expr></argument>, <argument><expr><name pos:line="11" pos:column="53">p<pos:position pos:line="11" pos:column="54"/></name></expr></argument>)<pos:position pos:line="11" pos:column="55"/></argument_list></call></expr>;<pos:position pos:line="11" pos:column="56"/></expr_stmt>

    <if pos:line="13" pos:column="5">if <condition pos:line="13" pos:column="8">(<expr><operator pos:line="13" pos:column="9">*<pos:position pos:line="13" pos:column="10"/></operator><name pos:line="13" pos:column="10">rsp<pos:position pos:line="13" pos:column="13"/></name></expr>)<pos:position pos:line="13" pos:column="14"/></condition><then pos:line="13" pos:column="14"> <block pos:line="13" pos:column="15">{
        <comment type="block" pos:line="14" pos:column="9">/* see if response is acceptable */</comment>
        <expr_stmt><expr><call><name pos:line="15" pos:column="9">ap_log_error<pos:position pos:line="15" pos:column="21"/></name><argument_list pos:line="15" pos:column="21">(<argument><expr><name pos:line="15" pos:column="22">APLOG_MARK<pos:position pos:line="15" pos:column="32"/></name></expr></argument>, <argument><expr><name pos:line="15" pos:column="34">APLOG_DEBUG<pos:position pos:line="15" pos:column="45"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="15" pos:column="47">0<pos:position pos:line="15" pos:column="48"/></literal></expr></argument>, <argument><expr><name pos:line="15" pos:column="50">s<pos:position pos:line="15" pos:column="51"/></name></expr></argument>, <argument><expr><call><name pos:line="15" pos:column="53">APLOGNO<pos:position pos:line="15" pos:column="60"/></name><argument_list pos:line="15" pos:column="60">(<argument><expr><literal type="number" pos:line="15" pos:column="61">01953<pos:position pos:line="15" pos:column="66"/></literal></expr></argument>)<pos:position pos:line="15" pos:column="67"/></argument_list></call>
                     <literal type="string" pos:line="16" pos:column="22">"stapling_cb: retrieved cached response"<pos:position pos:line="16" pos:column="62"/></literal></expr></argument>)<pos:position pos:line="16" pos:column="63"/></argument_list></call></expr>;<pos:position pos:line="16" pos:column="64"/></expr_stmt>
        <expr_stmt><expr><name pos:line="17" pos:column="9">rv<pos:position pos:line="17" pos:column="11"/></name> <operator pos:line="17" pos:column="12">=<pos:position pos:line="17" pos:column="13"/></operator> <call><name pos:line="17" pos:column="14">stapling_check_response<pos:position pos:line="17" pos:column="37"/></name><argument_list pos:line="17" pos:column="37">(<argument><expr><name pos:line="17" pos:column="38">s<pos:position pos:line="17" pos:column="39"/></name></expr></argument>, <argument><expr><name pos:line="17" pos:column="41">mctx<pos:position pos:line="17" pos:column="45"/></name></expr></argument>, <argument><expr><name pos:line="17" pos:column="47">cinf<pos:position pos:line="17" pos:column="51"/></name></expr></argument>, <argument><expr><operator pos:line="17" pos:column="53">*<pos:position pos:line="17" pos:column="54"/></operator><name pos:line="17" pos:column="54">rsp<pos:position pos:line="17" pos:column="57"/></name></expr></argument>, <argument><expr><name pos:line="17" pos:column="59">NULL<pos:position pos:line="17" pos:column="63"/></name></expr></argument>)<pos:position pos:line="17" pos:column="64"/></argument_list></call></expr>;<pos:position pos:line="17" pos:column="65"/></expr_stmt>
        <if pos:line="18" pos:column="9">if <condition pos:line="18" pos:column="12">(<expr><name pos:line="18" pos:column="13">rv<pos:position pos:line="18" pos:column="15"/></name> <operator pos:line="18" pos:column="16">==<pos:position pos:line="18" pos:column="18"/></operator> <name pos:line="18" pos:column="19">SSL_TLSEXT_ERR_ALERT_FATAL<pos:position pos:line="18" pos:column="45"/></name></expr>)<pos:position pos:line="18" pos:column="46"/></condition><then pos:line="18" pos:column="46"> <block pos:line="18" pos:column="47">{
            <expr_stmt><expr><call><name pos:line="19" pos:column="13">OCSP_RESPONSE_free<pos:position pos:line="19" pos:column="31"/></name><argument_list pos:line="19" pos:column="31">(<argument><expr><operator pos:line="19" pos:column="32">*<pos:position pos:line="19" pos:column="33"/></operator><name pos:line="19" pos:column="33">rsp<pos:position pos:line="19" pos:column="36"/></name></expr></argument>)<pos:position pos:line="19" pos:column="37"/></argument_list></call></expr>;<pos:position pos:line="19" pos:column="38"/></expr_stmt>
            <expr_stmt><expr><operator pos:line="20" pos:column="13">*<pos:position pos:line="20" pos:column="14"/></operator><name pos:line="20" pos:column="14">rsp<pos:position pos:line="20" pos:column="17"/></name> <operator pos:line="20" pos:column="18">=<pos:position pos:line="20" pos:column="19"/></operator> <name pos:line="20" pos:column="20">NULL<pos:position pos:line="20" pos:column="24"/></name></expr>;<pos:position pos:line="20" pos:column="25"/></expr_stmt>
            <return pos:line="21" pos:column="13">return <expr><name pos:line="21" pos:column="20">SSL_TLSEXT_ERR_ALERT_FATAL<pos:position pos:line="21" pos:column="46"/></name></expr>;<pos:position pos:line="21" pos:column="47"/></return>
        }<pos:position pos:line="22" pos:column="10"/></block></then>
        <elseif pos:line="23" pos:column="9">else <if pos:line="23" pos:column="14">if <condition pos:line="23" pos:column="17">(<expr><name pos:line="23" pos:column="18">rv<pos:position pos:line="23" pos:column="20"/></name> <operator pos:line="23" pos:column="21">==<pos:position pos:line="23" pos:column="23"/></operator> <name pos:line="23" pos:column="24">SSL_TLSEXT_ERR_NOACK<pos:position pos:line="23" pos:column="44"/></name></expr>)<pos:position pos:line="23" pos:column="45"/></condition><then pos:line="23" pos:column="45"> <block pos:line="23" pos:column="46">{
            <comment type="block" pos:line="24" pos:column="13">/* Error in response. If this error was not present when it was
             * stored (i.e. response no longer valid) then it can be
             * renewed straight away.
             *
             * If the error *was* present at the time it was stored then we
             * don't renew the response straight away; we just wait for the
             * cached response to expire.
             */</comment>
            <if pos:line="32" pos:column="13">if <condition pos:line="32" pos:column="16">(<expr><name pos:line="32" pos:column="17">ok<pos:position pos:line="32" pos:column="19"/></name></expr>)<pos:position pos:line="32" pos:column="20"/></condition><then pos:line="32" pos:column="20"> <block pos:line="32" pos:column="21">{
                <expr_stmt><expr><call><name pos:line="33" pos:column="17">OCSP_RESPONSE_free<pos:position pos:line="33" pos:column="35"/></name><argument_list pos:line="33" pos:column="35">(<argument><expr><operator pos:line="33" pos:column="36">*<pos:position pos:line="33" pos:column="37"/></operator><name pos:line="33" pos:column="37">rsp<pos:position pos:line="33" pos:column="40"/></name></expr></argument>)<pos:position pos:line="33" pos:column="41"/></argument_list></call></expr>;<pos:position pos:line="33" pos:column="42"/></expr_stmt>
                <expr_stmt><expr><operator pos:line="34" pos:column="17">*<pos:position pos:line="34" pos:column="18"/></operator><name pos:line="34" pos:column="18">rsp<pos:position pos:line="34" pos:column="21"/></name> <operator pos:line="34" pos:column="22">=<pos:position pos:line="34" pos:column="23"/></operator> <name pos:line="34" pos:column="24">NULL<pos:position pos:line="34" pos:column="28"/></name></expr>;<pos:position pos:line="34" pos:column="29"/></expr_stmt>
            }<pos:position pos:line="35" pos:column="14"/></block></then>
            <elseif pos:line="36" pos:column="13">else <if pos:line="36" pos:column="18">if <condition pos:line="36" pos:column="21">(<expr><operator pos:line="36" pos:column="22">!<pos:position pos:line="36" pos:column="23"/></operator><name><name pos:line="36" pos:column="23">mctx<pos:position pos:line="36" pos:column="27"/></name><operator pos:line="36" pos:column="27">-&gt;<pos:position pos:line="36" pos:column="32"/></operator><name pos:line="36" pos:column="29">stapling_return_errors<pos:position pos:line="36" pos:column="51"/></name></name></expr>)<pos:position pos:line="36" pos:column="52"/></condition><then pos:line="36" pos:column="52"> <block pos:line="36" pos:column="53">{
                <expr_stmt><expr><call><name pos:line="37" pos:column="17">OCSP_RESPONSE_free<pos:position pos:line="37" pos:column="35"/></name><argument_list pos:line="37" pos:column="35">(<argument><expr><operator pos:line="37" pos:column="36">*<pos:position pos:line="37" pos:column="37"/></operator><name pos:line="37" pos:column="37">rsp<pos:position pos:line="37" pos:column="40"/></name></expr></argument>)<pos:position pos:line="37" pos:column="41"/></argument_list></call></expr>;<pos:position pos:line="37" pos:column="42"/></expr_stmt>
                <expr_stmt><expr><operator pos:line="38" pos:column="17">*<pos:position pos:line="38" pos:column="18"/></operator><name pos:line="38" pos:column="18">rsp<pos:position pos:line="38" pos:column="21"/></name> <operator pos:line="38" pos:column="22">=<pos:position pos:line="38" pos:column="23"/></operator> <name pos:line="38" pos:column="24">NULL<pos:position pos:line="38" pos:column="28"/></name></expr>;<pos:position pos:line="38" pos:column="29"/></expr_stmt>
                <return pos:line="39" pos:column="17">return <expr><name pos:line="39" pos:column="24">SSL_TLSEXT_ERR_NOACK<pos:position pos:line="39" pos:column="44"/></name></expr>;<pos:position pos:line="39" pos:column="45"/></return>
            }<pos:position pos:line="40" pos:column="14"/></block></then></if></elseif></if>
        }<pos:position pos:line="41" pos:column="10"/></block></then></if></elseif></if>
    }<pos:position pos:line="42" pos:column="6"/></block></then></if>
    <return pos:line="43" pos:column="5">return <expr><literal type="number" pos:line="43" pos:column="12">0<pos:position pos:line="43" pos:column="13"/></literal></expr>;<pos:position pos:line="43" pos:column="14"/></return>
}<pos:position pos:line="44" pos:column="2"/></block></function></unit>

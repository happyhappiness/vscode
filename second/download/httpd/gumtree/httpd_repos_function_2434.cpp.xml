<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/httpd/gumtree/httpd_repos_function_2434.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">apr_status_t<pos:position pos:line="1" pos:column="20"/></name></type> <name pos:line="1" pos:column="21">util_ldap_connection_remove<pos:position pos:line="1" pos:column="48"/></name> <parameter_list pos:line="1" pos:column="49">(<parameter><decl><type><name pos:line="1" pos:column="50">void<pos:position pos:line="1" pos:column="54"/></name> <modifier pos:line="1" pos:column="55">*<pos:position pos:line="1" pos:column="56"/></modifier></type><name pos:line="1" pos:column="56">param<pos:position pos:line="1" pos:column="61"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="62"/></parameter_list> <block pos:line="1" pos:column="63">{ 
    <decl_stmt><decl><type><name pos:line="2" pos:column="5">util_ldap_connection_t<pos:position pos:line="2" pos:column="27"/></name> <modifier pos:line="2" pos:column="28">*<pos:position pos:line="2" pos:column="29"/></modifier></type><name pos:line="2" pos:column="29">ldc<pos:position pos:line="2" pos:column="32"/></name> <init pos:line="2" pos:column="33">= <expr><name pos:line="2" pos:column="35">param<pos:position pos:line="2" pos:column="40"/></name></expr></init></decl>, <modifier pos:line="2" pos:column="42">*<pos:position pos:line="2" pos:column="43"/></modifier><decl><type ref="prev"/><name pos:line="2" pos:column="43">l<pos:position pos:line="2" pos:column="44"/></name>  <init pos:line="2" pos:column="46">= <expr><name pos:line="2" pos:column="48">NULL<pos:position pos:line="2" pos:column="52"/></name></expr></init></decl>, <modifier pos:line="2" pos:column="54">*<pos:position pos:line="2" pos:column="55"/></modifier><decl><type ref="prev"/><name pos:line="2" pos:column="55">prev<pos:position pos:line="2" pos:column="59"/></name> <init pos:line="2" pos:column="60">= <expr><name pos:line="2" pos:column="62">NULL<pos:position pos:line="2" pos:column="66"/></name></expr></init></decl>;<pos:position pos:line="2" pos:column="67"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="3" pos:column="5">util_ldap_state_t<pos:position pos:line="3" pos:column="22"/></name> <modifier pos:line="3" pos:column="23">*<pos:position pos:line="3" pos:column="24"/></modifier></type><name pos:line="3" pos:column="24">st<pos:position pos:line="3" pos:column="26"/></name></decl>;<pos:position pos:line="3" pos:column="27"/></decl_stmt>

    <if pos:line="5" pos:column="5">if <condition pos:line="5" pos:column="8">(<expr><operator pos:line="5" pos:column="9">!<pos:position pos:line="5" pos:column="10"/></operator><name pos:line="5" pos:column="10">ldc<pos:position pos:line="5" pos:column="13"/></name></expr>)<pos:position pos:line="5" pos:column="14"/></condition><then pos:line="5" pos:column="14"> <block type="pseudo"><return pos:line="5" pos:column="15">return <expr><name pos:line="5" pos:column="22">APR_SUCCESS<pos:position pos:line="5" pos:column="33"/></name></expr>;<pos:position pos:line="5" pos:column="34"/></return></block></then></if>

    <expr_stmt><expr><name pos:line="7" pos:column="5">st<pos:position pos:line="7" pos:column="7"/></name> <operator pos:line="7" pos:column="8">=<pos:position pos:line="7" pos:column="9"/></operator> <name><name pos:line="7" pos:column="10">ldc<pos:position pos:line="7" pos:column="13"/></name><operator pos:line="7" pos:column="13">-&gt;<pos:position pos:line="7" pos:column="18"/></operator><name pos:line="7" pos:column="15">st<pos:position pos:line="7" pos:column="17"/></name></name></expr>;<pos:position pos:line="7" pos:column="18"/></expr_stmt>

    <expr_stmt><expr><call><name pos:line="9" pos:column="5">uldap_connection_unbind<pos:position pos:line="9" pos:column="28"/></name><argument_list pos:line="9" pos:column="28">(<argument><expr><name pos:line="9" pos:column="29">ldc<pos:position pos:line="9" pos:column="32"/></name></expr></argument>)<pos:position pos:line="9" pos:column="33"/></argument_list></call></expr>;<pos:position pos:line="9" pos:column="34"/></expr_stmt>

<cpp:if pos:line="11" pos:column="1">#<cpp:directive pos:line="11" pos:column="2">if<pos:position pos:line="11" pos:column="4"/></cpp:directive> <expr><name pos:line="11" pos:column="5">APR_HAS_THREADS<pos:position pos:line="11" pos:column="20"/></name></expr></cpp:if>
    <expr_stmt><expr><call><name pos:line="12" pos:column="5">apr_thread_mutex_lock<pos:position pos:line="12" pos:column="26"/></name><argument_list pos:line="12" pos:column="26">(<argument><expr><name><name pos:line="12" pos:column="27">st<pos:position pos:line="12" pos:column="29"/></name><operator pos:line="12" pos:column="29">-&gt;<pos:position pos:line="12" pos:column="34"/></operator><name pos:line="12" pos:column="31">mutex<pos:position pos:line="12" pos:column="36"/></name></name></expr></argument>)<pos:position pos:line="12" pos:column="37"/></argument_list></call></expr>;<pos:position pos:line="12" pos:column="38"/></expr_stmt>
<cpp:endif pos:line="13" pos:column="1">#<cpp:directive pos:line="13" pos:column="2">endif<pos:position pos:line="13" pos:column="7"/></cpp:directive></cpp:endif>

    <comment type="block" pos:line="15" pos:column="5">/* Remove ldc from the list */</comment>
    <for pos:line="16" pos:column="5">for <control pos:line="16" pos:column="9">(<init><expr><name pos:line="16" pos:column="10">l<pos:position pos:line="16" pos:column="11"/></name><operator pos:line="16" pos:column="11">=<pos:position pos:line="16" pos:column="12"/></operator><name><name pos:line="16" pos:column="12">st<pos:position pos:line="16" pos:column="14"/></name><operator pos:line="16" pos:column="14">-&gt;<pos:position pos:line="16" pos:column="19"/></operator><name pos:line="16" pos:column="16">connections<pos:position pos:line="16" pos:column="27"/></name></name></expr>;<pos:position pos:line="16" pos:column="28"/></init> <condition><expr><name pos:line="16" pos:column="29">l<pos:position pos:line="16" pos:column="30"/></name></expr>;<pos:position pos:line="16" pos:column="31"/></condition> <incr><expr><name pos:line="16" pos:column="32">l<pos:position pos:line="16" pos:column="33"/></name><operator pos:line="16" pos:column="33">=<pos:position pos:line="16" pos:column="34"/></operator><name><name pos:line="16" pos:column="34">l<pos:position pos:line="16" pos:column="35"/></name><operator pos:line="16" pos:column="35">-&gt;<pos:position pos:line="16" pos:column="40"/></operator><name pos:line="16" pos:column="37">next<pos:position pos:line="16" pos:column="41"/></name></name></expr></incr>)<pos:position pos:line="16" pos:column="42"/></control> <block pos:line="16" pos:column="43">{
        <if pos:line="17" pos:column="9">if <condition pos:line="17" pos:column="12">(<expr><name pos:line="17" pos:column="13">l<pos:position pos:line="17" pos:column="14"/></name> <operator pos:line="17" pos:column="15">==<pos:position pos:line="17" pos:column="17"/></operator> <name pos:line="17" pos:column="18">ldc<pos:position pos:line="17" pos:column="21"/></name></expr>)<pos:position pos:line="17" pos:column="22"/></condition><then pos:line="17" pos:column="22"> <block pos:line="17" pos:column="23">{
            <if pos:line="18" pos:column="13">if <condition pos:line="18" pos:column="16">(<expr><name pos:line="18" pos:column="17">prev<pos:position pos:line="18" pos:column="21"/></name></expr>)<pos:position pos:line="18" pos:column="22"/></condition><then pos:line="18" pos:column="22"> <block pos:line="18" pos:column="23">{
                <expr_stmt><expr><name><name pos:line="19" pos:column="17">prev<pos:position pos:line="19" pos:column="21"/></name><operator pos:line="19" pos:column="21">-&gt;<pos:position pos:line="19" pos:column="26"/></operator><name pos:line="19" pos:column="23">next<pos:position pos:line="19" pos:column="27"/></name></name> <operator pos:line="19" pos:column="28">=<pos:position pos:line="19" pos:column="29"/></operator> <name><name pos:line="19" pos:column="30">l<pos:position pos:line="19" pos:column="31"/></name><operator pos:line="19" pos:column="31">-&gt;<pos:position pos:line="19" pos:column="36"/></operator><name pos:line="19" pos:column="33">next<pos:position pos:line="19" pos:column="37"/></name></name></expr>;<pos:position pos:line="19" pos:column="38"/></expr_stmt> 
            }<pos:position pos:line="20" pos:column="14"/></block></then>
            <else pos:line="21" pos:column="13">else <block pos:line="21" pos:column="18">{ 
                <expr_stmt><expr><name><name pos:line="22" pos:column="17">st<pos:position pos:line="22" pos:column="19"/></name><operator pos:line="22" pos:column="19">-&gt;<pos:position pos:line="22" pos:column="24"/></operator><name pos:line="22" pos:column="21">connections<pos:position pos:line="22" pos:column="32"/></name></name> <operator pos:line="22" pos:column="33">=<pos:position pos:line="22" pos:column="34"/></operator> <name><name pos:line="22" pos:column="35">l<pos:position pos:line="22" pos:column="36"/></name><operator pos:line="22" pos:column="36">-&gt;<pos:position pos:line="22" pos:column="41"/></operator><name pos:line="22" pos:column="38">next<pos:position pos:line="22" pos:column="42"/></name></name></expr>;<pos:position pos:line="22" pos:column="43"/></expr_stmt>
            }<pos:position pos:line="23" pos:column="14"/></block></else></if>
            <break pos:line="24" pos:column="13">break;<pos:position pos:line="24" pos:column="19"/></break>
        }<pos:position pos:line="25" pos:column="10"/></block></then></if>
        <expr_stmt><expr><name pos:line="26" pos:column="9">prev<pos:position pos:line="26" pos:column="13"/></name> <operator pos:line="26" pos:column="14">=<pos:position pos:line="26" pos:column="15"/></operator> <name pos:line="26" pos:column="16">l<pos:position pos:line="26" pos:column="17"/></name></expr>;<pos:position pos:line="26" pos:column="18"/></expr_stmt>
    }<pos:position pos:line="27" pos:column="6"/></block></for>

    <comment type="block" pos:line="29" pos:column="5">/* Some unfortunate duplication between this method
     * and uldap_connection_cleanup()
    */</comment>
    <if pos:line="32" pos:column="5">if <condition pos:line="32" pos:column="8">(<expr><name><name pos:line="32" pos:column="9">ldc<pos:position pos:line="32" pos:column="12"/></name><operator pos:line="32" pos:column="12">-&gt;<pos:position pos:line="32" pos:column="17"/></operator><name pos:line="32" pos:column="14">bindpw<pos:position pos:line="32" pos:column="20"/></name></name></expr>)<pos:position pos:line="32" pos:column="21"/></condition><then pos:line="32" pos:column="21"> <block pos:line="32" pos:column="22">{
        <expr_stmt><expr><call><name pos:line="33" pos:column="9">free<pos:position pos:line="33" pos:column="13"/></name><argument_list pos:line="33" pos:column="13">(<argument><expr><operator pos:line="33" pos:column="14">(<pos:position pos:line="33" pos:column="15"/></operator><name pos:line="33" pos:column="15">void<pos:position pos:line="33" pos:column="19"/></name><operator pos:line="33" pos:column="19">*<pos:position pos:line="33" pos:column="20"/></operator><operator pos:line="33" pos:column="20">)<pos:position pos:line="33" pos:column="21"/></operator><name><name pos:line="33" pos:column="21">ldc<pos:position pos:line="33" pos:column="24"/></name><operator pos:line="33" pos:column="24">-&gt;<pos:position pos:line="33" pos:column="29"/></operator><name pos:line="33" pos:column="26">bindpw<pos:position pos:line="33" pos:column="32"/></name></name></expr></argument>)<pos:position pos:line="33" pos:column="33"/></argument_list></call></expr>;<pos:position pos:line="33" pos:column="34"/></expr_stmt>
    }<pos:position pos:line="34" pos:column="6"/></block></then></if>
    <if pos:line="35" pos:column="5">if <condition pos:line="35" pos:column="8">(<expr><name><name pos:line="35" pos:column="9">ldc<pos:position pos:line="35" pos:column="12"/></name><operator pos:line="35" pos:column="12">-&gt;<pos:position pos:line="35" pos:column="17"/></operator><name pos:line="35" pos:column="14">binddn<pos:position pos:line="35" pos:column="20"/></name></name></expr>)<pos:position pos:line="35" pos:column="21"/></condition><then pos:line="35" pos:column="21"> <block pos:line="35" pos:column="22">{
        <expr_stmt><expr><call><name pos:line="36" pos:column="9">free<pos:position pos:line="36" pos:column="13"/></name><argument_list pos:line="36" pos:column="13">(<argument><expr><operator pos:line="36" pos:column="14">(<pos:position pos:line="36" pos:column="15"/></operator><name pos:line="36" pos:column="15">void<pos:position pos:line="36" pos:column="19"/></name><operator pos:line="36" pos:column="19">*<pos:position pos:line="36" pos:column="20"/></operator><operator pos:line="36" pos:column="20">)<pos:position pos:line="36" pos:column="21"/></operator><name><name pos:line="36" pos:column="21">ldc<pos:position pos:line="36" pos:column="24"/></name><operator pos:line="36" pos:column="24">-&gt;<pos:position pos:line="36" pos:column="29"/></operator><name pos:line="36" pos:column="26">binddn<pos:position pos:line="36" pos:column="32"/></name></name></expr></argument>)<pos:position pos:line="36" pos:column="33"/></argument_list></call></expr>;<pos:position pos:line="36" pos:column="34"/></expr_stmt>
    }<pos:position pos:line="37" pos:column="6"/></block></then></if>

<cpp:if pos:line="39" pos:column="1">#<cpp:directive pos:line="39" pos:column="2">if<pos:position pos:line="39" pos:column="4"/></cpp:directive> <expr><name pos:line="39" pos:column="5">APR_HAS_THREADS<pos:position pos:line="39" pos:column="20"/></name></expr></cpp:if>
    <expr_stmt><expr><call><name pos:line="40" pos:column="5">apr_thread_mutex_unlock<pos:position pos:line="40" pos:column="28"/></name><argument_list pos:line="40" pos:column="28">(<argument><expr><name><name pos:line="40" pos:column="29">ldc<pos:position pos:line="40" pos:column="32"/></name><operator pos:line="40" pos:column="32">-&gt;<pos:position pos:line="40" pos:column="37"/></operator><name pos:line="40" pos:column="34">lock<pos:position pos:line="40" pos:column="38"/></name></name></expr></argument>)<pos:position pos:line="40" pos:column="39"/></argument_list></call></expr>;<pos:position pos:line="40" pos:column="40"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="41" pos:column="5">apr_thread_mutex_unlock<pos:position pos:line="41" pos:column="28"/></name><argument_list pos:line="41" pos:column="28">(<argument><expr><name><name pos:line="41" pos:column="29">st<pos:position pos:line="41" pos:column="31"/></name><operator pos:line="41" pos:column="31">-&gt;<pos:position pos:line="41" pos:column="36"/></operator><name pos:line="41" pos:column="33">mutex<pos:position pos:line="41" pos:column="38"/></name></name></expr></argument>)<pos:position pos:line="41" pos:column="39"/></argument_list></call></expr>;<pos:position pos:line="41" pos:column="40"/></expr_stmt>
<cpp:endif pos:line="42" pos:column="1">#<cpp:directive pos:line="42" pos:column="2">endif<pos:position pos:line="42" pos:column="7"/></cpp:directive></cpp:endif>

    <comment type="block" pos:line="44" pos:column="5">/* Destory the pool associated with this connection */</comment>

    <expr_stmt><expr><call><name pos:line="46" pos:column="5">apr_pool_destroy<pos:position pos:line="46" pos:column="21"/></name><argument_list pos:line="46" pos:column="21">(<argument><expr><name><name pos:line="46" pos:column="22">ldc<pos:position pos:line="46" pos:column="25"/></name><operator pos:line="46" pos:column="25">-&gt;<pos:position pos:line="46" pos:column="30"/></operator><name pos:line="46" pos:column="27">pool<pos:position pos:line="46" pos:column="31"/></name></name></expr></argument>)<pos:position pos:line="46" pos:column="32"/></argument_list></call></expr>;<pos:position pos:line="46" pos:column="33"/></expr_stmt>   
   
    <return pos:line="48" pos:column="5">return <expr><name pos:line="48" pos:column="12">APR_SUCCESS<pos:position pos:line="48" pos:column="23"/></name></expr>;<pos:position pos:line="48" pos:column="24"/></return>
}<pos:position pos:line="49" pos:column="2"/></block></function></unit>

<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/httpd/gumtree/httpd_repos_function_3550_httpd-2.2.11.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">apr_fileperms_t<pos:position pos:line="1" pos:column="23"/></name></type> <name pos:line="1" pos:column="24">convert_prot<pos:position pos:line="1" pos:column="36"/></name><parameter_list pos:line="1" pos:column="36">(<parameter><decl><type><name pos:line="1" pos:column="37">ACCESS_MASK<pos:position pos:line="1" pos:column="48"/></name></type> <name pos:line="1" pos:column="49">acc<pos:position pos:line="1" pos:column="52"/></name></decl></parameter>, <parameter><decl><type><name pos:line="1" pos:column="54">prot_scope_e<pos:position pos:line="1" pos:column="66"/></name></type> <name pos:line="1" pos:column="67">scope<pos:position pos:line="1" pos:column="72"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="73"/></parameter_list>
<block pos:line="2" pos:column="1">{
    <comment type="block" pos:line="3" pos:column="5">/* These choices are based on the single filesystem bit that controls
     * the given behavior.  They are -not- recommended for any set protection
     * function, such a function should -set- use GENERIC_READ/WRITE/EXECUTE
     */</comment>
    <decl_stmt><decl><type><name pos:line="7" pos:column="5">apr_fileperms_t<pos:position pos:line="7" pos:column="20"/></name></type> <name pos:line="7" pos:column="21">prot<pos:position pos:line="7" pos:column="25"/></name> <init pos:line="7" pos:column="26">= <expr><literal type="number" pos:line="7" pos:column="28">0<pos:position pos:line="7" pos:column="29"/></literal></expr></init></decl>;<pos:position pos:line="7" pos:column="30"/></decl_stmt>
    <if pos:line="8" pos:column="5">if <condition pos:line="8" pos:column="8">(<expr><name pos:line="8" pos:column="9">acc<pos:position pos:line="8" pos:column="12"/></name> <operator pos:line="8" pos:column="13">&amp;<pos:position pos:line="8" pos:column="18"/></operator> <name pos:line="8" pos:column="15">FILE_EXECUTE<pos:position pos:line="8" pos:column="27"/></name></expr>)<pos:position pos:line="8" pos:column="28"/></condition><then pos:line="8" pos:column="28">
        <block type="pseudo"><expr_stmt><expr><name pos:line="9" pos:column="9">prot<pos:position pos:line="9" pos:column="13"/></name> <operator pos:line="9" pos:column="14">|=<pos:position pos:line="9" pos:column="16"/></operator> <name pos:line="9" pos:column="17">APR_WEXECUTE<pos:position pos:line="9" pos:column="29"/></name></expr>;<pos:position pos:line="9" pos:column="30"/></expr_stmt></block></then></if>
    <if pos:line="10" pos:column="5">if <condition pos:line="10" pos:column="8">(<expr><name pos:line="10" pos:column="9">acc<pos:position pos:line="10" pos:column="12"/></name> <operator pos:line="10" pos:column="13">&amp;<pos:position pos:line="10" pos:column="18"/></operator> <name pos:line="10" pos:column="15">FILE_WRITE_DATA<pos:position pos:line="10" pos:column="30"/></name></expr>)<pos:position pos:line="10" pos:column="31"/></condition><then pos:line="10" pos:column="31">
        <block type="pseudo"><expr_stmt><expr><name pos:line="11" pos:column="9">prot<pos:position pos:line="11" pos:column="13"/></name> <operator pos:line="11" pos:column="14">|=<pos:position pos:line="11" pos:column="16"/></operator> <name pos:line="11" pos:column="17">APR_WWRITE<pos:position pos:line="11" pos:column="27"/></name></expr>;<pos:position pos:line="11" pos:column="28"/></expr_stmt></block></then></if>
    <if pos:line="12" pos:column="5">if <condition pos:line="12" pos:column="8">(<expr><name pos:line="12" pos:column="9">acc<pos:position pos:line="12" pos:column="12"/></name> <operator pos:line="12" pos:column="13">&amp;<pos:position pos:line="12" pos:column="18"/></operator> <name pos:line="12" pos:column="15">FILE_READ_DATA<pos:position pos:line="12" pos:column="29"/></name></expr>)<pos:position pos:line="12" pos:column="30"/></condition><then pos:line="12" pos:column="30">
        <block type="pseudo"><expr_stmt><expr><name pos:line="13" pos:column="9">prot<pos:position pos:line="13" pos:column="13"/></name> <operator pos:line="13" pos:column="14">|=<pos:position pos:line="13" pos:column="16"/></operator> <name pos:line="13" pos:column="17">APR_WREAD<pos:position pos:line="13" pos:column="26"/></name></expr>;<pos:position pos:line="13" pos:column="27"/></expr_stmt></block></then></if>
    <return pos:line="14" pos:column="5">return <expr><operator pos:line="14" pos:column="12">(<pos:position pos:line="14" pos:column="13"/></operator><name pos:line="14" pos:column="13">prot<pos:position pos:line="14" pos:column="17"/></name> <operator pos:line="14" pos:column="18">&lt;&lt;<pos:position pos:line="14" pos:column="26"/></operator> <name pos:line="14" pos:column="21">scope<pos:position pos:line="14" pos:column="26"/></name><operator pos:line="14" pos:column="26">)<pos:position pos:line="14" pos:column="27"/></operator></expr>;<pos:position pos:line="14" pos:column="28"/></return>
}<pos:position pos:line="15" pos:column="2"/></block></function></unit>

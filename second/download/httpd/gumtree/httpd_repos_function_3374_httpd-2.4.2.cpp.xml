<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/httpd/gumtree/httpd_repos_function_3374_httpd-2.4.2.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">int<pos:position pos:line="1" pos:column="11"/></name></type> <name pos:line="1" pos:column="12">make_child<pos:position pos:line="1" pos:column="22"/></name><parameter_list pos:line="1" pos:column="22">(<parameter><decl><type><name pos:line="1" pos:column="23">server_rec<pos:position pos:line="1" pos:column="33"/></name> <modifier pos:line="1" pos:column="34">*<pos:position pos:line="1" pos:column="35"/></modifier></type> <name pos:line="1" pos:column="36">s<pos:position pos:line="1" pos:column="37"/></name></decl></parameter>, <parameter><decl><type><name pos:line="1" pos:column="39">int<pos:position pos:line="1" pos:column="42"/></name></type> <name pos:line="1" pos:column="43">slot<pos:position pos:line="1" pos:column="47"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="48"/></parameter_list>
<block pos:line="2" pos:column="1">{
    <decl_stmt><decl><type><name pos:line="3" pos:column="5">int<pos:position pos:line="3" pos:column="8"/></name></type> <name pos:line="3" pos:column="9">pid<pos:position pos:line="3" pos:column="12"/></name></decl>;<pos:position pos:line="3" pos:column="13"/></decl_stmt>

    <if pos:line="5" pos:column="5">if <condition pos:line="5" pos:column="8">(<expr><name pos:line="5" pos:column="9">slot<pos:position pos:line="5" pos:column="13"/></name> <operator pos:line="5" pos:column="14">+<pos:position pos:line="5" pos:column="15"/></operator> <literal type="number" pos:line="5" pos:column="16">1<pos:position pos:line="5" pos:column="17"/></literal> <operator pos:line="5" pos:column="18">&gt;<pos:position pos:line="5" pos:column="22"/></operator> <name><name pos:line="5" pos:column="20">retained<pos:position pos:line="5" pos:column="28"/></name><operator pos:line="5" pos:column="28">-&gt;<pos:position pos:line="5" pos:column="33"/></operator><name pos:line="5" pos:column="30">max_daemons_limit<pos:position pos:line="5" pos:column="47"/></name></name></expr>)<pos:position pos:line="5" pos:column="48"/></condition><then pos:line="5" pos:column="48"> <block pos:line="5" pos:column="49">{
        <expr_stmt><expr><name><name pos:line="6" pos:column="9">retained<pos:position pos:line="6" pos:column="17"/></name><operator pos:line="6" pos:column="17">-&gt;<pos:position pos:line="6" pos:column="22"/></operator><name pos:line="6" pos:column="19">max_daemons_limit<pos:position pos:line="6" pos:column="36"/></name></name> <operator pos:line="6" pos:column="37">=<pos:position pos:line="6" pos:column="38"/></operator> <name pos:line="6" pos:column="39">slot<pos:position pos:line="6" pos:column="43"/></name> <operator pos:line="6" pos:column="44">+<pos:position pos:line="6" pos:column="45"/></operator> <literal type="number" pos:line="6" pos:column="46">1<pos:position pos:line="6" pos:column="47"/></literal></expr>;<pos:position pos:line="6" pos:column="48"/></expr_stmt>
    }<pos:position pos:line="7" pos:column="6"/></block></then></if>

    <if pos:line="9" pos:column="5">if <condition pos:line="9" pos:column="8">(<expr><name pos:line="9" pos:column="9">one_process<pos:position pos:line="9" pos:column="20"/></name></expr>)<pos:position pos:line="9" pos:column="21"/></condition><then pos:line="9" pos:column="21"> <block pos:line="9" pos:column="22">{
        <expr_stmt><expr><call><name pos:line="10" pos:column="9">set_signals<pos:position pos:line="10" pos:column="20"/></name><argument_list pos:line="10" pos:column="20">()<pos:position pos:line="10" pos:column="22"/></argument_list></call></expr>;<pos:position pos:line="10" pos:column="23"/></expr_stmt>
        <expr_stmt><expr><call><name pos:line="11" pos:column="9">event_note_child_started<pos:position pos:line="11" pos:column="33"/></name><argument_list pos:line="11" pos:column="33">(<argument><expr><name pos:line="11" pos:column="34">slot<pos:position pos:line="11" pos:column="38"/></name></expr></argument>, <argument><expr><call><name pos:line="11" pos:column="40">getpid<pos:position pos:line="11" pos:column="46"/></name><argument_list pos:line="11" pos:column="46">()<pos:position pos:line="11" pos:column="48"/></argument_list></call></expr></argument>)<pos:position pos:line="11" pos:column="49"/></argument_list></call></expr>;<pos:position pos:line="11" pos:column="50"/></expr_stmt>
        <expr_stmt><expr><call><name pos:line="12" pos:column="9">child_main<pos:position pos:line="12" pos:column="19"/></name><argument_list pos:line="12" pos:column="19">(<argument><expr><name pos:line="12" pos:column="20">slot<pos:position pos:line="12" pos:column="24"/></name></expr></argument>)<pos:position pos:line="12" pos:column="25"/></argument_list></call></expr>;<pos:position pos:line="12" pos:column="26"/></expr_stmt>
        <comment type="block" pos:line="13" pos:column="9">/* NOTREACHED */</comment>
    }<pos:position pos:line="14" pos:column="6"/></block></then></if>

    <if pos:line="16" pos:column="5">if <condition pos:line="16" pos:column="8">(<expr><operator pos:line="16" pos:column="9">(<pos:position pos:line="16" pos:column="10"/></operator><name pos:line="16" pos:column="10">pid<pos:position pos:line="16" pos:column="13"/></name> <operator pos:line="16" pos:column="14">=<pos:position pos:line="16" pos:column="15"/></operator> <call><name pos:line="16" pos:column="16">fork<pos:position pos:line="16" pos:column="20"/></name><argument_list pos:line="16" pos:column="20">()<pos:position pos:line="16" pos:column="22"/></argument_list></call><operator pos:line="16" pos:column="22">)<pos:position pos:line="16" pos:column="23"/></operator> <operator pos:line="16" pos:column="24">==<pos:position pos:line="16" pos:column="26"/></operator> <operator pos:line="16" pos:column="27">-<pos:position pos:line="16" pos:column="28"/></operator><literal type="number" pos:line="16" pos:column="28">1<pos:position pos:line="16" pos:column="29"/></literal></expr>)<pos:position pos:line="16" pos:column="30"/></condition><then pos:line="16" pos:column="30"> <block pos:line="16" pos:column="31">{
        <expr_stmt><expr><call><name pos:line="17" pos:column="9">ap_log_error<pos:position pos:line="17" pos:column="21"/></name><argument_list pos:line="17" pos:column="21">(<argument><expr><name pos:line="17" pos:column="22">APLOG_MARK<pos:position pos:line="17" pos:column="32"/></name></expr></argument>, <argument><expr><name pos:line="17" pos:column="34">APLOG_ERR<pos:position pos:line="17" pos:column="43"/></name></expr></argument>, <argument><expr><name pos:line="17" pos:column="45">errno<pos:position pos:line="17" pos:column="50"/></name></expr></argument>, <argument><expr><name pos:line="17" pos:column="52">s<pos:position pos:line="17" pos:column="53"/></name></expr></argument>, <argument><expr><call><name pos:line="17" pos:column="55">APLOGNO<pos:position pos:line="17" pos:column="62"/></name><argument_list pos:line="17" pos:column="62">(<argument><expr><literal type="number" pos:line="17" pos:column="63">00481<pos:position pos:line="17" pos:column="68"/></literal></expr></argument>)<pos:position pos:line="17" pos:column="69"/></argument_list></call>
                     <literal type="string" pos:line="18" pos:column="22">"fork: Unable to fork new process"<pos:position pos:line="18" pos:column="56"/></literal></expr></argument>)<pos:position pos:line="18" pos:column="57"/></argument_list></call></expr>;<pos:position pos:line="18" pos:column="58"/></expr_stmt>

        <comment type="block" pos:line="20" pos:column="9">/* fork didn't succeed.  There's no need to touch the scoreboard;
         * if we were trying to replace a failed child process, then
         * server_main_loop() marked its workers SERVER_DEAD, and if
         * we were trying to replace a child process that exited normally,
         * its worker_thread()s left SERVER_DEAD or SERVER_GRACEFUL behind.
         */</comment>

        <comment type="block" pos:line="27" pos:column="9">/* In case system resources are maxxed out, we don't want
           Apache running away with the CPU trying to fork over and
           over and over again. */</comment>
        <expr_stmt><expr><call><name pos:line="30" pos:column="9">apr_sleep<pos:position pos:line="30" pos:column="18"/></name><argument_list pos:line="30" pos:column="18">(<argument><expr><call><name pos:line="30" pos:column="19">apr_time_from_sec<pos:position pos:line="30" pos:column="36"/></name><argument_list pos:line="30" pos:column="36">(<argument><expr><literal type="number" pos:line="30" pos:column="37">10<pos:position pos:line="30" pos:column="39"/></literal></expr></argument>)<pos:position pos:line="30" pos:column="40"/></argument_list></call></expr></argument>)<pos:position pos:line="30" pos:column="41"/></argument_list></call></expr>;<pos:position pos:line="30" pos:column="42"/></expr_stmt>

        <return pos:line="32" pos:column="9">return <expr><operator pos:line="32" pos:column="16">-<pos:position pos:line="32" pos:column="17"/></operator><literal type="number" pos:line="32" pos:column="17">1<pos:position pos:line="32" pos:column="18"/></literal></expr>;<pos:position pos:line="32" pos:column="19"/></return>
    }<pos:position pos:line="33" pos:column="6"/></block></then></if>

    <if pos:line="35" pos:column="5">if <condition pos:line="35" pos:column="8">(<expr><operator pos:line="35" pos:column="9">!<pos:position pos:line="35" pos:column="10"/></operator><name pos:line="35" pos:column="10">pid<pos:position pos:line="35" pos:column="13"/></name></expr>)<pos:position pos:line="35" pos:column="14"/></condition><then pos:line="35" pos:column="14"> <block pos:line="35" pos:column="15">{
<cpp:ifdef pos:line="36" pos:column="1">#<cpp:directive pos:line="36" pos:column="2">ifdef<pos:position pos:line="36" pos:column="7"/></cpp:directive> <name pos:line="36" pos:column="8">HAVE_BINDPROCESSOR<pos:position pos:line="36" pos:column="26"/></name></cpp:ifdef>
        <comment type="block" pos:line="37" pos:column="9">/* By default, AIX binds to a single processor.  This bit unbinds
         * children which will then bind to another CPU.
         */</comment>
        <decl_stmt><decl><type><name pos:line="40" pos:column="9">int<pos:position pos:line="40" pos:column="12"/></name></type> <name pos:line="40" pos:column="13">status<pos:position pos:line="40" pos:column="19"/></name> <init pos:line="40" pos:column="20">= <expr><call><name pos:line="40" pos:column="22">bindprocessor<pos:position pos:line="40" pos:column="35"/></name><argument_list pos:line="40" pos:column="35">(<argument><expr><name pos:line="40" pos:column="36">BINDPROCESS<pos:position pos:line="40" pos:column="47"/></name></expr></argument>, <argument><expr><operator pos:line="40" pos:column="49">(<pos:position pos:line="40" pos:column="50"/></operator><name pos:line="40" pos:column="50">int<pos:position pos:line="40" pos:column="53"/></name><operator pos:line="40" pos:column="53">)<pos:position pos:line="40" pos:column="54"/></operator> <call><name pos:line="40" pos:column="55">getpid<pos:position pos:line="40" pos:column="61"/></name><argument_list pos:line="40" pos:column="61">()<pos:position pos:line="40" pos:column="63"/></argument_list></call></expr></argument>,
                                   <argument><expr><name pos:line="41" pos:column="36">PROCESSOR_CLASS_ANY<pos:position pos:line="41" pos:column="55"/></name></expr></argument>)<pos:position pos:line="41" pos:column="56"/></argument_list></call></expr></init></decl>;<pos:position pos:line="41" pos:column="57"/></decl_stmt>
        <if pos:line="42" pos:column="9">if <condition pos:line="42" pos:column="12">(<expr><name pos:line="42" pos:column="13">status<pos:position pos:line="42" pos:column="19"/></name> <operator pos:line="42" pos:column="20">!=<pos:position pos:line="42" pos:column="22"/></operator> <name pos:line="42" pos:column="23">OK<pos:position pos:line="42" pos:column="25"/></name></expr>)<pos:position pos:line="42" pos:column="26"/></condition><then pos:line="42" pos:column="26">
            <block type="pseudo"><expr_stmt><expr><call><name pos:line="43" pos:column="13">ap_log_error<pos:position pos:line="43" pos:column="25"/></name><argument_list pos:line="43" pos:column="25">(<argument><expr><name pos:line="43" pos:column="26">APLOG_MARK<pos:position pos:line="43" pos:column="36"/></name></expr></argument>, <argument><expr><name pos:line="43" pos:column="38">APLOG_DEBUG<pos:position pos:line="43" pos:column="49"/></name></expr></argument>, <argument><expr><name pos:line="43" pos:column="51">errno<pos:position pos:line="43" pos:column="56"/></name></expr></argument>,
                         <argument><expr><name pos:line="44" pos:column="26">ap_server_conf<pos:position pos:line="44" pos:column="40"/></name></expr></argument>, <argument><expr><call><name pos:line="44" pos:column="42">APLOGNO<pos:position pos:line="44" pos:column="49"/></name><argument_list pos:line="44" pos:column="49">(<argument><expr><literal type="number" pos:line="44" pos:column="50">00482<pos:position pos:line="44" pos:column="55"/></literal></expr></argument>)<pos:position pos:line="44" pos:column="56"/></argument_list></call>
                         <literal type="string" pos:line="45" pos:column="26">"processor unbind failed"<pos:position pos:line="45" pos:column="51"/></literal></expr></argument>)<pos:position pos:line="45" pos:column="52"/></argument_list></call></expr>;<pos:position pos:line="45" pos:column="53"/></expr_stmt></block></then></if>
<cpp:endif pos:line="46" pos:column="1">#<cpp:directive pos:line="46" pos:column="2">endif<pos:position pos:line="46" pos:column="7"/></cpp:directive></cpp:endif>
        <expr_stmt><expr><call><name pos:line="47" pos:column="9">RAISE_SIGSTOP<pos:position pos:line="47" pos:column="22"/></name><argument_list pos:line="47" pos:column="22">(<argument><expr><name pos:line="47" pos:column="23">MAKE_CHILD<pos:position pos:line="47" pos:column="33"/></name></expr></argument>)<pos:position pos:line="47" pos:column="34"/></argument_list></call></expr>;<pos:position pos:line="47" pos:column="35"/></expr_stmt>

        <expr_stmt><expr><call><name pos:line="49" pos:column="9">apr_signal<pos:position pos:line="49" pos:column="19"/></name><argument_list pos:line="49" pos:column="19">(<argument><expr><name pos:line="49" pos:column="20">SIGTERM<pos:position pos:line="49" pos:column="27"/></name></expr></argument>, <argument><expr><name pos:line="49" pos:column="29">just_die<pos:position pos:line="49" pos:column="37"/></name></expr></argument>)<pos:position pos:line="49" pos:column="38"/></argument_list></call></expr>;<pos:position pos:line="49" pos:column="39"/></expr_stmt>
        <expr_stmt><expr><call><name pos:line="50" pos:column="9">child_main<pos:position pos:line="50" pos:column="19"/></name><argument_list pos:line="50" pos:column="19">(<argument><expr><name pos:line="50" pos:column="20">slot<pos:position pos:line="50" pos:column="24"/></name></expr></argument>)<pos:position pos:line="50" pos:column="25"/></argument_list></call></expr>;<pos:position pos:line="50" pos:column="26"/></expr_stmt>
        <comment type="block" pos:line="51" pos:column="9">/* NOTREACHED */</comment>
    }<pos:position pos:line="52" pos:column="6"/></block></then></if>
    <comment type="block" pos:line="53" pos:column="5">/* else */</comment>
    <if pos:line="54" pos:column="5">if <condition pos:line="54" pos:column="8">(<expr><name><name pos:line="54" pos:column="9">ap_scoreboard_image<pos:position pos:line="54" pos:column="28"/></name><operator pos:line="54" pos:column="28">-&gt;<pos:position pos:line="54" pos:column="33"/></operator><name pos:line="54" pos:column="30">parent<pos:position pos:line="54" pos:column="36"/></name><index pos:line="54" pos:column="36">[<expr><name pos:line="54" pos:column="37">slot<pos:position pos:line="54" pos:column="41"/></name></expr>]<pos:position pos:line="54" pos:column="42"/></index></name><operator pos:line="54" pos:column="42">.<pos:position pos:line="54" pos:column="43"/></operator><name pos:line="54" pos:column="43">pid<pos:position pos:line="54" pos:column="46"/></name> <operator pos:line="54" pos:column="47">!=<pos:position pos:line="54" pos:column="49"/></operator> <literal type="number" pos:line="54" pos:column="50">0<pos:position pos:line="54" pos:column="51"/></literal></expr>)<pos:position pos:line="54" pos:column="52"/></condition><then pos:line="54" pos:column="52"> <block pos:line="54" pos:column="53">{
        <comment type="block" pos:line="55" pos:column="9">/* This new child process is squatting on the scoreboard
         * entry owned by an exiting child process, which cannot
         * exit until all active requests complete.
         */</comment>
        <expr_stmt><expr><call><name pos:line="59" pos:column="9">event_note_child_lost_slot<pos:position pos:line="59" pos:column="35"/></name><argument_list pos:line="59" pos:column="35">(<argument><expr><name pos:line="59" pos:column="36">slot<pos:position pos:line="59" pos:column="40"/></name></expr></argument>, <argument><expr><name pos:line="59" pos:column="42">pid<pos:position pos:line="59" pos:column="45"/></name></expr></argument>)<pos:position pos:line="59" pos:column="46"/></argument_list></call></expr>;<pos:position pos:line="59" pos:column="47"/></expr_stmt>
    }<pos:position pos:line="60" pos:column="6"/></block></then></if>
    <expr_stmt><expr><name><name pos:line="61" pos:column="5">ap_scoreboard_image<pos:position pos:line="61" pos:column="24"/></name><operator pos:line="61" pos:column="24">-&gt;<pos:position pos:line="61" pos:column="29"/></operator><name pos:line="61" pos:column="26">parent<pos:position pos:line="61" pos:column="32"/></name><index pos:line="61" pos:column="32">[<expr><name pos:line="61" pos:column="33">slot<pos:position pos:line="61" pos:column="37"/></name></expr>]<pos:position pos:line="61" pos:column="38"/></index></name><operator pos:line="61" pos:column="38">.<pos:position pos:line="61" pos:column="39"/></operator><name pos:line="61" pos:column="39">quiescing<pos:position pos:line="61" pos:column="48"/></name> <operator pos:line="61" pos:column="49">=<pos:position pos:line="61" pos:column="50"/></operator> <literal type="number" pos:line="61" pos:column="51">0<pos:position pos:line="61" pos:column="52"/></literal></expr>;<pos:position pos:line="61" pos:column="53"/></expr_stmt>
    <expr_stmt><expr><name><name pos:line="62" pos:column="5">ap_scoreboard_image<pos:position pos:line="62" pos:column="24"/></name><operator pos:line="62" pos:column="24">-&gt;<pos:position pos:line="62" pos:column="29"/></operator><name pos:line="62" pos:column="26">parent<pos:position pos:line="62" pos:column="32"/></name><index pos:line="62" pos:column="32">[<expr><name pos:line="62" pos:column="33">slot<pos:position pos:line="62" pos:column="37"/></name></expr>]<pos:position pos:line="62" pos:column="38"/></index></name><operator pos:line="62" pos:column="38">.<pos:position pos:line="62" pos:column="39"/></operator><name pos:line="62" pos:column="39">not_accepting<pos:position pos:line="62" pos:column="52"/></name> <operator pos:line="62" pos:column="53">=<pos:position pos:line="62" pos:column="54"/></operator> <literal type="number" pos:line="62" pos:column="55">0<pos:position pos:line="62" pos:column="56"/></literal></expr>;<pos:position pos:line="62" pos:column="57"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="63" pos:column="5">event_note_child_started<pos:position pos:line="63" pos:column="29"/></name><argument_list pos:line="63" pos:column="29">(<argument><expr><name pos:line="63" pos:column="30">slot<pos:position pos:line="63" pos:column="34"/></name></expr></argument>, <argument><expr><name pos:line="63" pos:column="36">pid<pos:position pos:line="63" pos:column="39"/></name></expr></argument>)<pos:position pos:line="63" pos:column="40"/></argument_list></call></expr>;<pos:position pos:line="63" pos:column="41"/></expr_stmt>
    <return pos:line="64" pos:column="5">return <expr><literal type="number" pos:line="64" pos:column="12">0<pos:position pos:line="64" pos:column="13"/></literal></expr>;<pos:position pos:line="64" pos:column="14"/></return>
}<pos:position pos:line="65" pos:column="2"/></block></function></unit>

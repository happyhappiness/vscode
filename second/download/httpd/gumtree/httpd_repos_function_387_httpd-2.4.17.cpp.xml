<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/httpd/gumtree/httpd_repos_function_387_httpd-2.4.17.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">int<pos:position pos:line="1" pos:column="11"/></name></type> <name pos:line="1" pos:column="12">dav_method_merge<pos:position pos:line="1" pos:column="28"/></name><parameter_list pos:line="1" pos:column="28">(<parameter><decl><type><name pos:line="1" pos:column="29">request_rec<pos:position pos:line="1" pos:column="40"/></name> <modifier pos:line="1" pos:column="41">*<pos:position pos:line="1" pos:column="42"/></modifier></type><name pos:line="1" pos:column="42">r<pos:position pos:line="1" pos:column="43"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="44"/></parameter_list>
<block pos:line="2" pos:column="1">{
    <decl_stmt><decl><type><name pos:line="3" pos:column="5">dav_resource<pos:position pos:line="3" pos:column="17"/></name> <modifier pos:line="3" pos:column="18">*<pos:position pos:line="3" pos:column="19"/></modifier></type><name pos:line="3" pos:column="19">resource<pos:position pos:line="3" pos:column="27"/></name></decl>;<pos:position pos:line="3" pos:column="28"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="4" pos:column="5">dav_resource<pos:position pos:line="4" pos:column="17"/></name> <modifier pos:line="4" pos:column="18">*<pos:position pos:line="4" pos:column="19"/></modifier></type><name pos:line="4" pos:column="19">source_resource<pos:position pos:line="4" pos:column="34"/></name></decl>;<pos:position pos:line="4" pos:column="35"/></decl_stmt>
    <decl_stmt><decl><type><specifier pos:line="5" pos:column="5">const<pos:position pos:line="5" pos:column="10"/></specifier> <name pos:line="5" pos:column="11">dav_hooks_vsn<pos:position pos:line="5" pos:column="24"/></name> <modifier pos:line="5" pos:column="25">*<pos:position pos:line="5" pos:column="26"/></modifier></type><name pos:line="5" pos:column="26">vsn_hooks<pos:position pos:line="5" pos:column="35"/></name> <init pos:line="5" pos:column="36">= <expr><call><name pos:line="5" pos:column="38">DAV_GET_HOOKS_VSN<pos:position pos:line="5" pos:column="55"/></name><argument_list pos:line="5" pos:column="55">(<argument><expr><name pos:line="5" pos:column="56">r<pos:position pos:line="5" pos:column="57"/></name></expr></argument>)<pos:position pos:line="5" pos:column="58"/></argument_list></call></expr></init></decl>;<pos:position pos:line="5" pos:column="59"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="6" pos:column="5">dav_error<pos:position pos:line="6" pos:column="14"/></name> <modifier pos:line="6" pos:column="15">*<pos:position pos:line="6" pos:column="16"/></modifier></type><name pos:line="6" pos:column="16">err<pos:position pos:line="6" pos:column="19"/></name></decl>;<pos:position pos:line="6" pos:column="20"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="7" pos:column="5">int<pos:position pos:line="7" pos:column="8"/></name></type> <name pos:line="7" pos:column="9">result<pos:position pos:line="7" pos:column="15"/></name></decl>;<pos:position pos:line="7" pos:column="16"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="8" pos:column="5">apr_xml_doc<pos:position pos:line="8" pos:column="16"/></name> <modifier pos:line="8" pos:column="17">*<pos:position pos:line="8" pos:column="18"/></modifier></type><name pos:line="8" pos:column="18">doc<pos:position pos:line="8" pos:column="21"/></name></decl>;<pos:position pos:line="8" pos:column="22"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="9" pos:column="5">apr_xml_elem<pos:position pos:line="9" pos:column="17"/></name> <modifier pos:line="9" pos:column="18">*<pos:position pos:line="9" pos:column="19"/></modifier></type><name pos:line="9" pos:column="19">source_elem<pos:position pos:line="9" pos:column="30"/></name></decl>;<pos:position pos:line="9" pos:column="31"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="10" pos:column="5">apr_xml_elem<pos:position pos:line="10" pos:column="17"/></name> <modifier pos:line="10" pos:column="18">*<pos:position pos:line="10" pos:column="19"/></modifier></type><name pos:line="10" pos:column="19">href_elem<pos:position pos:line="10" pos:column="28"/></name></decl>;<pos:position pos:line="10" pos:column="29"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="11" pos:column="5">apr_xml_elem<pos:position pos:line="11" pos:column="17"/></name> <modifier pos:line="11" pos:column="18">*<pos:position pos:line="11" pos:column="19"/></modifier></type><name pos:line="11" pos:column="19">prop_elem<pos:position pos:line="11" pos:column="28"/></name></decl>;<pos:position pos:line="11" pos:column="29"/></decl_stmt>
    <decl_stmt><decl><type><specifier pos:line="12" pos:column="5">const<pos:position pos:line="12" pos:column="10"/></specifier> <name pos:line="12" pos:column="11">char<pos:position pos:line="12" pos:column="15"/></name> <modifier pos:line="12" pos:column="16">*<pos:position pos:line="12" pos:column="17"/></modifier></type><name pos:line="12" pos:column="17">source<pos:position pos:line="12" pos:column="23"/></name></decl>;<pos:position pos:line="12" pos:column="24"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="13" pos:column="5">int<pos:position pos:line="13" pos:column="8"/></name></type> <name pos:line="13" pos:column="9">no_auto_merge<pos:position pos:line="13" pos:column="22"/></name></decl>;<pos:position pos:line="13" pos:column="23"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="14" pos:column="5">int<pos:position pos:line="14" pos:column="8"/></name></type> <name pos:line="14" pos:column="9">no_checkout<pos:position pos:line="14" pos:column="20"/></name></decl>;<pos:position pos:line="14" pos:column="21"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="15" pos:column="5">dav_lookup_result<pos:position pos:line="15" pos:column="22"/></name></type> <name pos:line="15" pos:column="23">lookup<pos:position pos:line="15" pos:column="29"/></name></decl>;<pos:position pos:line="15" pos:column="30"/></decl_stmt>

    <comment type="block" pos:line="17" pos:column="5">/* If no versioning provider, decline the request */</comment>
    <if pos:line="18" pos:column="5">if <condition pos:line="18" pos:column="8">(<expr><name pos:line="18" pos:column="9">vsn_hooks<pos:position pos:line="18" pos:column="18"/></name> <operator pos:line="18" pos:column="19">==<pos:position pos:line="18" pos:column="21"/></operator> <name pos:line="18" pos:column="22">NULL<pos:position pos:line="18" pos:column="26"/></name></expr>)<pos:position pos:line="18" pos:column="27"/></condition><then pos:line="18" pos:column="27">
        <block type="pseudo"><return pos:line="19" pos:column="9">return <expr><name pos:line="19" pos:column="16">DECLINED<pos:position pos:line="19" pos:column="24"/></name></expr>;<pos:position pos:line="19" pos:column="25"/></return></block></then></if>

    <if pos:line="21" pos:column="5">if <condition pos:line="21" pos:column="8">(<expr><operator pos:line="21" pos:column="9">(<pos:position pos:line="21" pos:column="10"/></operator><name pos:line="21" pos:column="10">result<pos:position pos:line="21" pos:column="16"/></name> <operator pos:line="21" pos:column="17">=<pos:position pos:line="21" pos:column="18"/></operator> <call><name pos:line="21" pos:column="19">ap_xml_parse_input<pos:position pos:line="21" pos:column="37"/></name><argument_list pos:line="21" pos:column="37">(<argument><expr><name pos:line="21" pos:column="38">r<pos:position pos:line="21" pos:column="39"/></name></expr></argument>, <argument><expr><operator pos:line="21" pos:column="41">&amp;<pos:position pos:line="21" pos:column="46"/></operator><name pos:line="21" pos:column="42">doc<pos:position pos:line="21" pos:column="45"/></name></expr></argument>)<pos:position pos:line="21" pos:column="46"/></argument_list></call><operator pos:line="21" pos:column="46">)<pos:position pos:line="21" pos:column="47"/></operator> <operator pos:line="21" pos:column="48">!=<pos:position pos:line="21" pos:column="50"/></operator> <name pos:line="21" pos:column="51">OK<pos:position pos:line="21" pos:column="53"/></name></expr>)<pos:position pos:line="21" pos:column="54"/></condition><then pos:line="21" pos:column="54">
        <block type="pseudo"><return pos:line="22" pos:column="9">return <expr><name pos:line="22" pos:column="16">result<pos:position pos:line="22" pos:column="22"/></name></expr>;<pos:position pos:line="22" pos:column="23"/></return></block></then></if>

    <if pos:line="24" pos:column="5">if <condition pos:line="24" pos:column="8">(<expr><name pos:line="24" pos:column="9">doc<pos:position pos:line="24" pos:column="12"/></name> <operator pos:line="24" pos:column="13">==<pos:position pos:line="24" pos:column="15"/></operator> <name pos:line="24" pos:column="16">NULL<pos:position pos:line="24" pos:column="20"/></name> <operator pos:line="24" pos:column="21">||<pos:position pos:line="24" pos:column="23"/></operator> <operator pos:line="24" pos:column="24">!<pos:position pos:line="24" pos:column="25"/></operator><call><name pos:line="24" pos:column="25">dav_validate_root<pos:position pos:line="24" pos:column="42"/></name><argument_list pos:line="24" pos:column="42">(<argument><expr><name pos:line="24" pos:column="43">doc<pos:position pos:line="24" pos:column="46"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="24" pos:column="48">"merge"<pos:position pos:line="24" pos:column="55"/></literal></expr></argument>)<pos:position pos:line="24" pos:column="56"/></argument_list></call></expr>)<pos:position pos:line="24" pos:column="57"/></condition><then pos:line="24" pos:column="57"> <block pos:line="24" pos:column="58">{
        <comment type="block" pos:line="25" pos:column="9">/* This supplies additional information for the default msg. */</comment>
        <expr_stmt><expr><call><name pos:line="26" pos:column="9">ap_log_rerror<pos:position pos:line="26" pos:column="22"/></name><argument_list pos:line="26" pos:column="22">(<argument><expr><name pos:line="26" pos:column="23">APLOG_MARK<pos:position pos:line="26" pos:column="33"/></name></expr></argument>, <argument><expr><name pos:line="26" pos:column="35">APLOG_ERR<pos:position pos:line="26" pos:column="44"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="26" pos:column="46">0<pos:position pos:line="26" pos:column="47"/></literal></expr></argument>, <argument><expr><name pos:line="26" pos:column="49">r<pos:position pos:line="26" pos:column="50"/></name></expr></argument>, <argument><expr><call><name pos:line="26" pos:column="52">APLOGNO<pos:position pos:line="26" pos:column="59"/></name><argument_list pos:line="26" pos:column="59">(<argument><expr><literal type="number" pos:line="26" pos:column="60">00616<pos:position pos:line="26" pos:column="65"/></literal></expr></argument>)<pos:position pos:line="26" pos:column="66"/></argument_list></call>
                      <literal type="string" pos:line="27" pos:column="23">"The request body must be present and must be a "<pos:position pos:line="27" pos:column="72"/></literal>
                      <literal type="string" pos:line="28" pos:column="23">"DAV:merge element."<pos:position pos:line="28" pos:column="43"/></literal></expr></argument>)<pos:position pos:line="28" pos:column="44"/></argument_list></call></expr>;<pos:position pos:line="28" pos:column="45"/></expr_stmt>
        <return pos:line="29" pos:column="9">return <expr><name pos:line="29" pos:column="16">HTTP_BAD_REQUEST<pos:position pos:line="29" pos:column="32"/></name></expr>;<pos:position pos:line="29" pos:column="33"/></return>
    }<pos:position pos:line="30" pos:column="6"/></block></then></if>

    <if pos:line="32" pos:column="5">if <condition pos:line="32" pos:column="8">(<expr><operator pos:line="32" pos:column="9">(<pos:position pos:line="32" pos:column="10"/></operator><name pos:line="32" pos:column="10">source_elem<pos:position pos:line="32" pos:column="21"/></name> <operator pos:line="32" pos:column="22">=<pos:position pos:line="32" pos:column="23"/></operator> <call><name pos:line="32" pos:column="24">dav_find_child<pos:position pos:line="32" pos:column="38"/></name><argument_list pos:line="32" pos:column="38">(<argument><expr><name><name pos:line="32" pos:column="39">doc<pos:position pos:line="32" pos:column="42"/></name><operator pos:line="32" pos:column="42">-&gt;<pos:position pos:line="32" pos:column="47"/></operator><name pos:line="32" pos:column="44">root<pos:position pos:line="32" pos:column="48"/></name></name></expr></argument>, <argument><expr><literal type="string" pos:line="32" pos:column="50">"source"<pos:position pos:line="32" pos:column="58"/></literal></expr></argument>)<pos:position pos:line="32" pos:column="59"/></argument_list></call><operator pos:line="32" pos:column="59">)<pos:position pos:line="32" pos:column="60"/></operator> <operator pos:line="32" pos:column="61">==<pos:position pos:line="32" pos:column="63"/></operator> <name pos:line="32" pos:column="64">NULL<pos:position pos:line="32" pos:column="68"/></name></expr>)<pos:position pos:line="32" pos:column="69"/></condition><then pos:line="32" pos:column="69"> <block pos:line="32" pos:column="70">{
        <comment type="block" pos:line="33" pos:column="9">/* This supplies additional information for the default msg. */</comment>
        <expr_stmt><expr><call><name pos:line="34" pos:column="9">ap_log_rerror<pos:position pos:line="34" pos:column="22"/></name><argument_list pos:line="34" pos:column="22">(<argument><expr><name pos:line="34" pos:column="23">APLOG_MARK<pos:position pos:line="34" pos:column="33"/></name></expr></argument>, <argument><expr><name pos:line="34" pos:column="35">APLOG_ERR<pos:position pos:line="34" pos:column="44"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="34" pos:column="46">0<pos:position pos:line="34" pos:column="47"/></literal></expr></argument>, <argument><expr><name pos:line="34" pos:column="49">r<pos:position pos:line="34" pos:column="50"/></name></expr></argument>, <argument><expr><call><name pos:line="34" pos:column="52">APLOGNO<pos:position pos:line="34" pos:column="59"/></name><argument_list pos:line="34" pos:column="59">(<argument><expr><literal type="number" pos:line="34" pos:column="60">00617<pos:position pos:line="34" pos:column="65"/></literal></expr></argument>)<pos:position pos:line="34" pos:column="66"/></argument_list></call>
                      <literal type="string" pos:line="35" pos:column="23">"The DAV:merge element must contain a DAV:source "<pos:position pos:line="35" pos:column="73"/></literal>
                      <literal type="string" pos:line="36" pos:column="23">"element."<pos:position pos:line="36" pos:column="33"/></literal></expr></argument>)<pos:position pos:line="36" pos:column="34"/></argument_list></call></expr>;<pos:position pos:line="36" pos:column="35"/></expr_stmt>
        <return pos:line="37" pos:column="9">return <expr><name pos:line="37" pos:column="16">HTTP_BAD_REQUEST<pos:position pos:line="37" pos:column="32"/></name></expr>;<pos:position pos:line="37" pos:column="33"/></return>
    }<pos:position pos:line="38" pos:column="6"/></block></then></if>
    <if pos:line="39" pos:column="5">if <condition pos:line="39" pos:column="8">(<expr><operator pos:line="39" pos:column="9">(<pos:position pos:line="39" pos:column="10"/></operator><name pos:line="39" pos:column="10">href_elem<pos:position pos:line="39" pos:column="19"/></name> <operator pos:line="39" pos:column="20">=<pos:position pos:line="39" pos:column="21"/></operator> <call><name pos:line="39" pos:column="22">dav_find_child<pos:position pos:line="39" pos:column="36"/></name><argument_list pos:line="39" pos:column="36">(<argument><expr><name pos:line="39" pos:column="37">source_elem<pos:position pos:line="39" pos:column="48"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="39" pos:column="50">"href"<pos:position pos:line="39" pos:column="56"/></literal></expr></argument>)<pos:position pos:line="39" pos:column="57"/></argument_list></call><operator pos:line="39" pos:column="57">)<pos:position pos:line="39" pos:column="58"/></operator> <operator pos:line="39" pos:column="59">==<pos:position pos:line="39" pos:column="61"/></operator> <name pos:line="39" pos:column="62">NULL<pos:position pos:line="39" pos:column="66"/></name></expr>)<pos:position pos:line="39" pos:column="67"/></condition><then pos:line="39" pos:column="67"> <block pos:line="39" pos:column="68">{
        <comment type="block" pos:line="40" pos:column="9">/* This supplies additional information for the default msg. */</comment>
        <expr_stmt><expr><call><name pos:line="41" pos:column="9">ap_log_rerror<pos:position pos:line="41" pos:column="22"/></name><argument_list pos:line="41" pos:column="22">(<argument><expr><name pos:line="41" pos:column="23">APLOG_MARK<pos:position pos:line="41" pos:column="33"/></name></expr></argument>, <argument><expr><name pos:line="41" pos:column="35">APLOG_ERR<pos:position pos:line="41" pos:column="44"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="41" pos:column="46">0<pos:position pos:line="41" pos:column="47"/></literal></expr></argument>, <argument><expr><name pos:line="41" pos:column="49">r<pos:position pos:line="41" pos:column="50"/></name></expr></argument>, <argument><expr><call><name pos:line="41" pos:column="52">APLOGNO<pos:position pos:line="41" pos:column="59"/></name><argument_list pos:line="41" pos:column="59">(<argument><expr><literal type="number" pos:line="41" pos:column="60">00618<pos:position pos:line="41" pos:column="65"/></literal></expr></argument>)<pos:position pos:line="41" pos:column="66"/></argument_list></call>
                      <literal type="string" pos:line="42" pos:column="23">"The DAV:source element must contain a DAV:href "<pos:position pos:line="42" pos:column="72"/></literal>
                      <literal type="string" pos:line="43" pos:column="23">"element."<pos:position pos:line="43" pos:column="33"/></literal></expr></argument>)<pos:position pos:line="43" pos:column="34"/></argument_list></call></expr>;<pos:position pos:line="43" pos:column="35"/></expr_stmt>
        <return pos:line="44" pos:column="9">return <expr><name pos:line="44" pos:column="16">HTTP_BAD_REQUEST<pos:position pos:line="44" pos:column="32"/></name></expr>;<pos:position pos:line="44" pos:column="33"/></return>
    }<pos:position pos:line="45" pos:column="6"/></block></then></if>
    <expr_stmt><expr><name pos:line="46" pos:column="5">source<pos:position pos:line="46" pos:column="11"/></name> <operator pos:line="46" pos:column="12">=<pos:position pos:line="46" pos:column="13"/></operator> <call><name pos:line="46" pos:column="14">dav_xml_get_cdata<pos:position pos:line="46" pos:column="31"/></name><argument_list pos:line="46" pos:column="31">(<argument><expr><name pos:line="46" pos:column="32">href_elem<pos:position pos:line="46" pos:column="41"/></name></expr></argument>, <argument><expr><name><name pos:line="46" pos:column="43">r<pos:position pos:line="46" pos:column="44"/></name><operator pos:line="46" pos:column="44">-&gt;<pos:position pos:line="46" pos:column="49"/></operator><name pos:line="46" pos:column="46">pool<pos:position pos:line="46" pos:column="50"/></name></name></expr></argument>, <argument><expr><literal type="number" pos:line="46" pos:column="52">1<pos:position pos:line="46" pos:column="53"/></literal></expr></argument> <comment type="block" pos:line="46" pos:column="54">/* strip_white */</comment>)<pos:position pos:line="46" pos:column="72"/></argument_list></call></expr>;<pos:position pos:line="46" pos:column="73"/></expr_stmt>

    <comment type="block" pos:line="48" pos:column="5">/* get a subrequest for the source, so that we can get a dav_resource
       for that source. */</comment>
    <expr_stmt><expr><name pos:line="50" pos:column="5">lookup<pos:position pos:line="50" pos:column="11"/></name> <operator pos:line="50" pos:column="12">=<pos:position pos:line="50" pos:column="13"/></operator> <call><name pos:line="50" pos:column="14">dav_lookup_uri<pos:position pos:line="50" pos:column="28"/></name><argument_list pos:line="50" pos:column="28">(<argument><expr><name pos:line="50" pos:column="29">source<pos:position pos:line="50" pos:column="35"/></name></expr></argument>, <argument><expr><name pos:line="50" pos:column="37">r<pos:position pos:line="50" pos:column="38"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="50" pos:column="40">0<pos:position pos:line="50" pos:column="41"/></literal></expr></argument> <comment type="block" pos:line="50" pos:column="42">/* must_be_absolute */</comment>)<pos:position pos:line="50" pos:column="65"/></argument_list></call></expr>;<pos:position pos:line="50" pos:column="66"/></expr_stmt>
    <if pos:line="51" pos:column="5">if <condition pos:line="51" pos:column="8">(<expr><name><name pos:line="51" pos:column="9">lookup<pos:position pos:line="51" pos:column="15"/></name><operator pos:line="51" pos:column="15">.<pos:position pos:line="51" pos:column="16"/></operator><name pos:line="51" pos:column="16">rnew<pos:position pos:line="51" pos:column="20"/></name></name> <operator pos:line="51" pos:column="21">==<pos:position pos:line="51" pos:column="23"/></operator> <name pos:line="51" pos:column="24">NULL<pos:position pos:line="51" pos:column="28"/></name></expr>)<pos:position pos:line="51" pos:column="29"/></condition><then pos:line="51" pos:column="29"> <block pos:line="51" pos:column="30">{
        <if pos:line="52" pos:column="9">if <condition pos:line="52" pos:column="12">(<expr><name><name pos:line="52" pos:column="13">lookup<pos:position pos:line="52" pos:column="19"/></name><operator pos:line="52" pos:column="19">.<pos:position pos:line="52" pos:column="20"/></operator><name pos:line="52" pos:column="20">err<pos:position pos:line="52" pos:column="23"/></name><operator pos:line="52" pos:column="23">.<pos:position pos:line="52" pos:column="24"/></operator><name pos:line="52" pos:column="24">status<pos:position pos:line="52" pos:column="30"/></name></name> <operator pos:line="52" pos:column="31">==<pos:position pos:line="52" pos:column="33"/></operator> <name pos:line="52" pos:column="34">HTTP_BAD_REQUEST<pos:position pos:line="52" pos:column="50"/></name></expr>)<pos:position pos:line="52" pos:column="51"/></condition><then pos:line="52" pos:column="51"> <block pos:line="52" pos:column="52">{
            <comment type="block" pos:line="53" pos:column="13">/* This supplies additional information for the default message. */</comment>
            <expr_stmt><expr><call><name pos:line="54" pos:column="13">ap_log_rerror<pos:position pos:line="54" pos:column="26"/></name><argument_list pos:line="54" pos:column="26">(<argument><expr><name pos:line="54" pos:column="27">APLOG_MARK<pos:position pos:line="54" pos:column="37"/></name></expr></argument>, <argument><expr><name pos:line="54" pos:column="39">APLOG_ERR<pos:position pos:line="54" pos:column="48"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="54" pos:column="50">0<pos:position pos:line="54" pos:column="51"/></literal></expr></argument>, <argument><expr><name pos:line="54" pos:column="53">r<pos:position pos:line="54" pos:column="54"/></name></expr></argument>, <argument><expr><call><name pos:line="54" pos:column="56">APLOGNO<pos:position pos:line="54" pos:column="63"/></name><argument_list pos:line="54" pos:column="63">(<argument><expr><literal type="number" pos:line="54" pos:column="64">00619<pos:position pos:line="54" pos:column="69"/></literal></expr></argument>)<pos:position pos:line="54" pos:column="70"/></argument_list></call>
                          <literal type="string" pos:line="55" pos:column="27">"%s"<pos:position pos:line="55" pos:column="31"/></literal></expr></argument>, <argument><expr><name><name pos:line="55" pos:column="33">lookup<pos:position pos:line="55" pos:column="39"/></name><operator pos:line="55" pos:column="39">.<pos:position pos:line="55" pos:column="40"/></operator><name pos:line="55" pos:column="40">err<pos:position pos:line="55" pos:column="43"/></name><operator pos:line="55" pos:column="43">.<pos:position pos:line="55" pos:column="44"/></operator><name pos:line="55" pos:column="44">desc<pos:position pos:line="55" pos:column="48"/></name></name></expr></argument>)<pos:position pos:line="55" pos:column="49"/></argument_list></call></expr>;<pos:position pos:line="55" pos:column="50"/></expr_stmt>
            <return pos:line="56" pos:column="13">return <expr><name pos:line="56" pos:column="20">HTTP_BAD_REQUEST<pos:position pos:line="56" pos:column="36"/></name></expr>;<pos:position pos:line="56" pos:column="37"/></return>
        }<pos:position pos:line="57" pos:column="10"/></block></then></if>

        <comment type="block" pos:line="59" pos:column="9">/* ### this assumes that dav_lookup_uri() only generates a status
         * ### that Apache can provide a status line for!! */</comment>

        <return pos:line="62" pos:column="9">return <expr><call><name pos:line="62" pos:column="16">dav_error_response<pos:position pos:line="62" pos:column="34"/></name><argument_list pos:line="62" pos:column="34">(<argument><expr><name pos:line="62" pos:column="35">r<pos:position pos:line="62" pos:column="36"/></name></expr></argument>, <argument><expr><name><name pos:line="62" pos:column="38">lookup<pos:position pos:line="62" pos:column="44"/></name><operator pos:line="62" pos:column="44">.<pos:position pos:line="62" pos:column="45"/></operator><name pos:line="62" pos:column="45">err<pos:position pos:line="62" pos:column="48"/></name><operator pos:line="62" pos:column="48">.<pos:position pos:line="62" pos:column="49"/></operator><name pos:line="62" pos:column="49">status<pos:position pos:line="62" pos:column="55"/></name></name></expr></argument>, <argument><expr><name><name pos:line="62" pos:column="57">lookup<pos:position pos:line="62" pos:column="63"/></name><operator pos:line="62" pos:column="63">.<pos:position pos:line="62" pos:column="64"/></operator><name pos:line="62" pos:column="64">err<pos:position pos:line="62" pos:column="67"/></name><operator pos:line="62" pos:column="67">.<pos:position pos:line="62" pos:column="68"/></operator><name pos:line="62" pos:column="68">desc<pos:position pos:line="62" pos:column="72"/></name></name></expr></argument>)<pos:position pos:line="62" pos:column="73"/></argument_list></call></expr>;<pos:position pos:line="62" pos:column="74"/></return>
    }<pos:position pos:line="63" pos:column="6"/></block></then></if>
    <if pos:line="64" pos:column="5">if <condition pos:line="64" pos:column="8">(<expr><name><name pos:line="64" pos:column="9">lookup<pos:position pos:line="64" pos:column="15"/></name><operator pos:line="64" pos:column="15">.<pos:position pos:line="64" pos:column="16"/></operator><name pos:line="64" pos:column="16">rnew<pos:position pos:line="64" pos:column="20"/></name><operator pos:line="64" pos:column="20">-&gt;<pos:position pos:line="64" pos:column="25"/></operator><name pos:line="64" pos:column="22">status<pos:position pos:line="64" pos:column="28"/></name></name> <operator pos:line="64" pos:column="29">!=<pos:position pos:line="64" pos:column="31"/></operator> <name pos:line="64" pos:column="32">HTTP_OK<pos:position pos:line="64" pos:column="39"/></name></expr>)<pos:position pos:line="64" pos:column="40"/></condition><then pos:line="64" pos:column="40"> <block pos:line="64" pos:column="41">{
        <comment type="block" pos:line="65" pos:column="9">/* ### how best to report this... */</comment>
        <return pos:line="66" pos:column="9">return <expr><call><name pos:line="66" pos:column="16">dav_error_response<pos:position pos:line="66" pos:column="34"/></name><argument_list pos:line="66" pos:column="34">(<argument><expr><name pos:line="66" pos:column="35">r<pos:position pos:line="66" pos:column="36"/></name></expr></argument>, <argument><expr><name><name pos:line="66" pos:column="38">lookup<pos:position pos:line="66" pos:column="44"/></name><operator pos:line="66" pos:column="44">.<pos:position pos:line="66" pos:column="45"/></operator><name pos:line="66" pos:column="45">rnew<pos:position pos:line="66" pos:column="49"/></name><operator pos:line="66" pos:column="49">-&gt;<pos:position pos:line="66" pos:column="54"/></operator><name pos:line="66" pos:column="51">status<pos:position pos:line="66" pos:column="57"/></name></name></expr></argument>,
                                  <argument><expr><literal type="string" pos:line="67" pos:column="35">"Merge source URI had an error."<pos:position pos:line="67" pos:column="67"/></literal></expr></argument>)<pos:position pos:line="67" pos:column="68"/></argument_list></call></expr>;<pos:position pos:line="67" pos:column="69"/></return>
    }<pos:position pos:line="68" pos:column="6"/></block></then></if>
    <expr_stmt><expr><name pos:line="69" pos:column="5">err<pos:position pos:line="69" pos:column="8"/></name> <operator pos:line="69" pos:column="9">=<pos:position pos:line="69" pos:column="10"/></operator> <call><name pos:line="69" pos:column="11">dav_get_resource<pos:position pos:line="69" pos:column="27"/></name><argument_list pos:line="69" pos:column="27">(<argument><expr><name><name pos:line="69" pos:column="28">lookup<pos:position pos:line="69" pos:column="34"/></name><operator pos:line="69" pos:column="34">.<pos:position pos:line="69" pos:column="35"/></operator><name pos:line="69" pos:column="35">rnew<pos:position pos:line="69" pos:column="39"/></name></name></expr></argument>, <argument><expr><literal type="number" pos:line="69" pos:column="41">0<pos:position pos:line="69" pos:column="42"/></literal></expr></argument> <comment type="block" pos:line="69" pos:column="43">/* label_allowed */</comment>,
                           <argument><expr><literal type="number" pos:line="70" pos:column="28">0<pos:position pos:line="70" pos:column="29"/></literal></expr></argument> <comment type="block" pos:line="70" pos:column="30">/* use_checked_in */</comment>, <argument><expr><operator pos:line="70" pos:column="52">&amp;<pos:position pos:line="70" pos:column="57"/></operator><name pos:line="70" pos:column="53">source_resource<pos:position pos:line="70" pos:column="68"/></name></expr></argument>)<pos:position pos:line="70" pos:column="69"/></argument_list></call></expr>;<pos:position pos:line="70" pos:column="70"/></expr_stmt>
    <if pos:line="71" pos:column="5">if <condition pos:line="71" pos:column="8">(<expr><name pos:line="71" pos:column="9">err<pos:position pos:line="71" pos:column="12"/></name> <operator pos:line="71" pos:column="13">!=<pos:position pos:line="71" pos:column="15"/></operator> <name pos:line="71" pos:column="16">NULL<pos:position pos:line="71" pos:column="20"/></name></expr>)<pos:position pos:line="71" pos:column="21"/></condition><then pos:line="71" pos:column="21">
        <block type="pseudo"><return pos:line="72" pos:column="9">return <expr><call><name pos:line="72" pos:column="16">dav_handle_err<pos:position pos:line="72" pos:column="30"/></name><argument_list pos:line="72" pos:column="30">(<argument><expr><name pos:line="72" pos:column="31">r<pos:position pos:line="72" pos:column="32"/></name></expr></argument>, <argument><expr><name pos:line="72" pos:column="34">err<pos:position pos:line="72" pos:column="37"/></name></expr></argument>, <argument><expr><name pos:line="72" pos:column="39">NULL<pos:position pos:line="72" pos:column="43"/></name></expr></argument>)<pos:position pos:line="72" pos:column="44"/></argument_list></call></expr>;<pos:position pos:line="72" pos:column="45"/></return></block></then></if>

    <expr_stmt><expr><name pos:line="74" pos:column="5">no_auto_merge<pos:position pos:line="74" pos:column="18"/></name> <operator pos:line="74" pos:column="19">=<pos:position pos:line="74" pos:column="20"/></operator> <call><name pos:line="74" pos:column="21">dav_find_child<pos:position pos:line="74" pos:column="35"/></name><argument_list pos:line="74" pos:column="35">(<argument><expr><name><name pos:line="74" pos:column="36">doc<pos:position pos:line="74" pos:column="39"/></name><operator pos:line="74" pos:column="39">-&gt;<pos:position pos:line="74" pos:column="44"/></operator><name pos:line="74" pos:column="41">root<pos:position pos:line="74" pos:column="45"/></name></name></expr></argument>, <argument><expr><literal type="string" pos:line="74" pos:column="47">"no-auto-merge"<pos:position pos:line="74" pos:column="62"/></literal></expr></argument>)<pos:position pos:line="74" pos:column="63"/></argument_list></call> <operator pos:line="74" pos:column="64">!=<pos:position pos:line="74" pos:column="66"/></operator> <name pos:line="74" pos:column="67">NULL<pos:position pos:line="74" pos:column="71"/></name></expr>;<pos:position pos:line="74" pos:column="72"/></expr_stmt>
    <expr_stmt><expr><name pos:line="75" pos:column="5">no_checkout<pos:position pos:line="75" pos:column="16"/></name> <operator pos:line="75" pos:column="17">=<pos:position pos:line="75" pos:column="18"/></operator> <call><name pos:line="75" pos:column="19">dav_find_child<pos:position pos:line="75" pos:column="33"/></name><argument_list pos:line="75" pos:column="33">(<argument><expr><name><name pos:line="75" pos:column="34">doc<pos:position pos:line="75" pos:column="37"/></name><operator pos:line="75" pos:column="37">-&gt;<pos:position pos:line="75" pos:column="42"/></operator><name pos:line="75" pos:column="39">root<pos:position pos:line="75" pos:column="43"/></name></name></expr></argument>, <argument><expr><literal type="string" pos:line="75" pos:column="45">"no-checkout"<pos:position pos:line="75" pos:column="58"/></literal></expr></argument>)<pos:position pos:line="75" pos:column="59"/></argument_list></call> <operator pos:line="75" pos:column="60">!=<pos:position pos:line="75" pos:column="62"/></operator> <name pos:line="75" pos:column="63">NULL<pos:position pos:line="75" pos:column="67"/></name></expr>;<pos:position pos:line="75" pos:column="68"/></expr_stmt>

    <expr_stmt><expr><name pos:line="77" pos:column="5">prop_elem<pos:position pos:line="77" pos:column="14"/></name> <operator pos:line="77" pos:column="15">=<pos:position pos:line="77" pos:column="16"/></operator> <call><name pos:line="77" pos:column="17">dav_find_child<pos:position pos:line="77" pos:column="31"/></name><argument_list pos:line="77" pos:column="31">(<argument><expr><name><name pos:line="77" pos:column="32">doc<pos:position pos:line="77" pos:column="35"/></name><operator pos:line="77" pos:column="35">-&gt;<pos:position pos:line="77" pos:column="40"/></operator><name pos:line="77" pos:column="37">root<pos:position pos:line="77" pos:column="41"/></name></name></expr></argument>, <argument><expr><literal type="string" pos:line="77" pos:column="43">"prop"<pos:position pos:line="77" pos:column="49"/></literal></expr></argument>)<pos:position pos:line="77" pos:column="50"/></argument_list></call></expr>;<pos:position pos:line="77" pos:column="51"/></expr_stmt>

    <comment type="block" pos:line="79" pos:column="5">/* ### check RFC. I believe the DAV:merge element may contain any
       ### element also allowed within DAV:checkout. need to extract them
       ### here, and pass them along.
       ### if so, then refactor the CHECKOUT method handling so we can reuse
       ### the code. maybe create a structure to hold CHECKOUT parameters
       ### which can be passed to the checkout() and merge() hooks. */</comment>

    <comment type="block" pos:line="86" pos:column="5">/* Ask repository module to resolve the resource */</comment>
    <expr_stmt><expr><name pos:line="87" pos:column="5">err<pos:position pos:line="87" pos:column="8"/></name> <operator pos:line="87" pos:column="9">=<pos:position pos:line="87" pos:column="10"/></operator> <call><name pos:line="87" pos:column="11">dav_get_resource<pos:position pos:line="87" pos:column="27"/></name><argument_list pos:line="87" pos:column="27">(<argument><expr><name pos:line="87" pos:column="28">r<pos:position pos:line="87" pos:column="29"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="87" pos:column="31">0<pos:position pos:line="87" pos:column="32"/></literal></expr></argument> <comment type="block" pos:line="87" pos:column="33">/* label_allowed */</comment>, <argument><expr><literal type="number" pos:line="87" pos:column="54">0<pos:position pos:line="87" pos:column="55"/></literal></expr></argument> <comment type="block" pos:line="87" pos:column="56">/* use_checked_in */</comment>,
                           <argument><expr><operator pos:line="88" pos:column="28">&amp;<pos:position pos:line="88" pos:column="33"/></operator><name pos:line="88" pos:column="29">resource<pos:position pos:line="88" pos:column="37"/></name></expr></argument>)<pos:position pos:line="88" pos:column="38"/></argument_list></call></expr>;<pos:position pos:line="88" pos:column="39"/></expr_stmt>
    <if pos:line="89" pos:column="5">if <condition pos:line="89" pos:column="8">(<expr><name pos:line="89" pos:column="9">err<pos:position pos:line="89" pos:column="12"/></name> <operator pos:line="89" pos:column="13">!=<pos:position pos:line="89" pos:column="15"/></operator> <name pos:line="89" pos:column="16">NULL<pos:position pos:line="89" pos:column="20"/></name></expr>)<pos:position pos:line="89" pos:column="21"/></condition><then pos:line="89" pos:column="21">
        <block type="pseudo"><return pos:line="90" pos:column="9">return <expr><call><name pos:line="90" pos:column="16">dav_handle_err<pos:position pos:line="90" pos:column="30"/></name><argument_list pos:line="90" pos:column="30">(<argument><expr><name pos:line="90" pos:column="31">r<pos:position pos:line="90" pos:column="32"/></name></expr></argument>, <argument><expr><name pos:line="90" pos:column="34">err<pos:position pos:line="90" pos:column="37"/></name></expr></argument>, <argument><expr><name pos:line="90" pos:column="39">NULL<pos:position pos:line="90" pos:column="43"/></name></expr></argument>)<pos:position pos:line="90" pos:column="44"/></argument_list></call></expr>;<pos:position pos:line="90" pos:column="45"/></return></block></then></if>
    <if pos:line="91" pos:column="5">if <condition pos:line="91" pos:column="8">(<expr><operator pos:line="91" pos:column="9">!<pos:position pos:line="91" pos:column="10"/></operator><name><name pos:line="91" pos:column="10">resource<pos:position pos:line="91" pos:column="18"/></name><operator pos:line="91" pos:column="18">-&gt;<pos:position pos:line="91" pos:column="23"/></operator><name pos:line="91" pos:column="20">exists<pos:position pos:line="91" pos:column="26"/></name></name></expr>)<pos:position pos:line="91" pos:column="27"/></condition><then pos:line="91" pos:column="27"> <block pos:line="91" pos:column="28">{
        <comment type="block" pos:line="92" pos:column="9">/* Apache will supply a default error for this. */</comment>
        <return pos:line="93" pos:column="9">return <expr><name pos:line="93" pos:column="16">HTTP_NOT_FOUND<pos:position pos:line="93" pos:column="30"/></name></expr>;<pos:position pos:line="93" pos:column="31"/></return>
    }<pos:position pos:line="94" pos:column="6"/></block></then></if>

    <comment type="block" pos:line="96" pos:column="5">/* ### check the source and target resources flags/types */</comment>

    <comment type="block" pos:line="98" pos:column="5">/* ### do lock checks, once behavior is defined */</comment>

    <comment type="block" pos:line="100" pos:column="5">/* set the Cache-Control header, per the spec */</comment>
    <comment type="block" pos:line="101" pos:column="5">/* ### correct? */</comment>
    <expr_stmt><expr><call><name pos:line="102" pos:column="5">apr_table_setn<pos:position pos:line="102" pos:column="19"/></name><argument_list pos:line="102" pos:column="19">(<argument><expr><name><name pos:line="102" pos:column="20">r<pos:position pos:line="102" pos:column="21"/></name><operator pos:line="102" pos:column="21">-&gt;<pos:position pos:line="102" pos:column="26"/></operator><name pos:line="102" pos:column="23">headers_out<pos:position pos:line="102" pos:column="34"/></name></name></expr></argument>, <argument><expr><literal type="string" pos:line="102" pos:column="36">"Cache-Control"<pos:position pos:line="102" pos:column="51"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="102" pos:column="53">"no-cache"<pos:position pos:line="102" pos:column="63"/></literal></expr></argument>)<pos:position pos:line="102" pos:column="64"/></argument_list></call></expr>;<pos:position pos:line="102" pos:column="65"/></expr_stmt>

    <comment type="block" pos:line="104" pos:column="5">/* Initialize these values for a standard MERGE response. If the MERGE
       is going to do something different (i.e. an error), then it must
       return a dav_error, and we'll reset these values properly. */</comment>
    <expr_stmt><expr><name><name pos:line="107" pos:column="5">r<pos:position pos:line="107" pos:column="6"/></name><operator pos:line="107" pos:column="6">-&gt;<pos:position pos:line="107" pos:column="11"/></operator><name pos:line="107" pos:column="8">status<pos:position pos:line="107" pos:column="14"/></name></name> <operator pos:line="107" pos:column="15">=<pos:position pos:line="107" pos:column="16"/></operator> <name pos:line="107" pos:column="17">HTTP_OK<pos:position pos:line="107" pos:column="24"/></name></expr>;<pos:position pos:line="107" pos:column="25"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="108" pos:column="5">ap_set_content_type<pos:position pos:line="108" pos:column="24"/></name><argument_list pos:line="108" pos:column="24">(<argument><expr><name pos:line="108" pos:column="25">r<pos:position pos:line="108" pos:column="26"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="108" pos:column="28">"text/xml"<pos:position pos:line="108" pos:column="38"/></literal></expr></argument>)<pos:position pos:line="108" pos:column="39"/></argument_list></call></expr>;<pos:position pos:line="108" pos:column="40"/></expr_stmt>

    <comment type="block" pos:line="110" pos:column="5">/* ### should we do any preliminary response generation? probably not,
       ### because we may have an error, thus demanding something else in
       ### the response body. */</comment>

    <comment type="block" pos:line="114" pos:column="5">/* Do the merge, including any response generation. */</comment>
    <if pos:line="115" pos:column="5">if <condition pos:line="115" pos:column="8">(<expr><operator pos:line="115" pos:column="9">(<pos:position pos:line="115" pos:column="10"/></operator><name pos:line="115" pos:column="10">err<pos:position pos:line="115" pos:column="13"/></name> <operator pos:line="115" pos:column="14">=<pos:position pos:line="115" pos:column="15"/></operator> <call pos:line="115" pos:column="16">(<modifier pos:line="115" pos:column="17">*<pos:position pos:line="115" pos:column="18"/></modifier><name><name pos:line="115" pos:column="18">vsn_hooks<pos:position pos:line="115" pos:column="27"/></name><operator pos:line="115" pos:column="27">-&gt;<pos:position pos:line="115" pos:column="32"/></operator><name pos:line="115" pos:column="29">merge<pos:position pos:line="115" pos:column="34"/></name></name>)<argument_list pos:line="115" pos:column="35">(<argument><expr><name pos:line="115" pos:column="36">resource<pos:position pos:line="115" pos:column="44"/></name></expr></argument>, <argument><expr><name pos:line="115" pos:column="46">source_resource<pos:position pos:line="115" pos:column="61"/></name></expr></argument>,
                                   <argument><expr><name pos:line="116" pos:column="36">no_auto_merge<pos:position pos:line="116" pos:column="49"/></name></expr></argument>, <argument><expr><name pos:line="116" pos:column="51">no_checkout<pos:position pos:line="116" pos:column="62"/></name></expr></argument>,
                                   <argument><expr><name pos:line="117" pos:column="36">prop_elem<pos:position pos:line="117" pos:column="45"/></name></expr></argument>,
                                   <argument><expr><name><name pos:line="118" pos:column="36">r<pos:position pos:line="118" pos:column="37"/></name><operator pos:line="118" pos:column="37">-&gt;<pos:position pos:line="118" pos:column="42"/></operator><name pos:line="118" pos:column="39">output_filters<pos:position pos:line="118" pos:column="53"/></name></name></expr></argument>)<pos:position pos:line="118" pos:column="54"/></argument_list></call><operator pos:line="118" pos:column="54">)<pos:position pos:line="118" pos:column="55"/></operator> <operator pos:line="118" pos:column="56">!=<pos:position pos:line="118" pos:column="58"/></operator> <name pos:line="118" pos:column="59">NULL<pos:position pos:line="118" pos:column="63"/></name></expr>)<pos:position pos:line="118" pos:column="64"/></condition><then pos:line="118" pos:column="64"> <block pos:line="118" pos:column="65">{
        <comment type="block" pos:line="119" pos:column="9">/* ### is err-&gt;status the right error here? */</comment>
        <expr_stmt><expr><name pos:line="120" pos:column="9">err<pos:position pos:line="120" pos:column="12"/></name> <operator pos:line="120" pos:column="13">=<pos:position pos:line="120" pos:column="14"/></operator> <call><name pos:line="120" pos:column="15">dav_push_error<pos:position pos:line="120" pos:column="29"/></name><argument_list pos:line="120" pos:column="29">(<argument><expr><name><name pos:line="120" pos:column="30">r<pos:position pos:line="120" pos:column="31"/></name><operator pos:line="120" pos:column="31">-&gt;<pos:position pos:line="120" pos:column="36"/></operator><name pos:line="120" pos:column="33">pool<pos:position pos:line="120" pos:column="37"/></name></name></expr></argument>, <argument><expr><name><name pos:line="120" pos:column="39">err<pos:position pos:line="120" pos:column="42"/></name><operator pos:line="120" pos:column="42">-&gt;<pos:position pos:line="120" pos:column="47"/></operator><name pos:line="120" pos:column="44">status<pos:position pos:line="120" pos:column="50"/></name></name></expr></argument>, <argument><expr><literal type="number" pos:line="120" pos:column="52">0<pos:position pos:line="120" pos:column="53"/></literal></expr></argument>,
                             <argument><expr><call><name pos:line="121" pos:column="30">apr_psprintf<pos:position pos:line="121" pos:column="42"/></name><argument_list pos:line="121" pos:column="42">(<argument><expr><name><name pos:line="121" pos:column="43">r<pos:position pos:line="121" pos:column="44"/></name><operator pos:line="121" pos:column="44">-&gt;<pos:position pos:line="121" pos:column="49"/></operator><name pos:line="121" pos:column="46">pool<pos:position pos:line="121" pos:column="50"/></name></name></expr></argument>,
                                          <argument><expr><literal type="string" pos:line="122" pos:column="43">"Could not MERGE resource \"%s\" "<pos:position pos:line="122" pos:column="77"/></literal>
                                          <literal type="string" pos:line="123" pos:column="43">"into \"%s\"."<pos:position pos:line="123" pos:column="57"/></literal></expr></argument>,
                                          <argument><expr><call><name pos:line="124" pos:column="43">ap_escape_html<pos:position pos:line="124" pos:column="57"/></name><argument_list pos:line="124" pos:column="57">(<argument><expr><name><name pos:line="124" pos:column="58">r<pos:position pos:line="124" pos:column="59"/></name><operator pos:line="124" pos:column="59">-&gt;<pos:position pos:line="124" pos:column="64"/></operator><name pos:line="124" pos:column="61">pool<pos:position pos:line="124" pos:column="65"/></name></name></expr></argument>, <argument><expr><name pos:line="124" pos:column="67">source<pos:position pos:line="124" pos:column="73"/></name></expr></argument>)<pos:position pos:line="124" pos:column="74"/></argument_list></call></expr></argument>,
                                          <argument><expr><call><name pos:line="125" pos:column="43">ap_escape_html<pos:position pos:line="125" pos:column="57"/></name><argument_list pos:line="125" pos:column="57">(<argument><expr><name><name pos:line="125" pos:column="58">r<pos:position pos:line="125" pos:column="59"/></name><operator pos:line="125" pos:column="59">-&gt;<pos:position pos:line="125" pos:column="64"/></operator><name pos:line="125" pos:column="61">pool<pos:position pos:line="125" pos:column="65"/></name></name></expr></argument>, <argument><expr><name><name pos:line="125" pos:column="67">r<pos:position pos:line="125" pos:column="68"/></name><operator pos:line="125" pos:column="68">-&gt;<pos:position pos:line="125" pos:column="73"/></operator><name pos:line="125" pos:column="70">uri<pos:position pos:line="125" pos:column="73"/></name></name></expr></argument>)<pos:position pos:line="125" pos:column="74"/></argument_list></call></expr></argument>)<pos:position pos:line="125" pos:column="75"/></argument_list></call></expr></argument>,
                             <argument><expr><name pos:line="126" pos:column="30">err<pos:position pos:line="126" pos:column="33"/></name></expr></argument>)<pos:position pos:line="126" pos:column="34"/></argument_list></call></expr>;<pos:position pos:line="126" pos:column="35"/></expr_stmt>
        <return pos:line="127" pos:column="9">return <expr><call><name pos:line="127" pos:column="16">dav_handle_err<pos:position pos:line="127" pos:column="30"/></name><argument_list pos:line="127" pos:column="30">(<argument><expr><name pos:line="127" pos:column="31">r<pos:position pos:line="127" pos:column="32"/></name></expr></argument>, <argument><expr><name pos:line="127" pos:column="34">err<pos:position pos:line="127" pos:column="37"/></name></expr></argument>, <argument><expr><name pos:line="127" pos:column="39">NULL<pos:position pos:line="127" pos:column="43"/></name></expr></argument>)<pos:position pos:line="127" pos:column="44"/></argument_list></call></expr>;<pos:position pos:line="127" pos:column="45"/></return>
    }<pos:position pos:line="128" pos:column="6"/></block></then></if>

    <comment type="block" pos:line="130" pos:column="5">/* the response was fully generated by the merge() hook. */</comment>
    <comment type="block" pos:line="131" pos:column="5">/* ### urk. does this prevent logging? need to check... */</comment>
    <return pos:line="132" pos:column="5">return <expr><name pos:line="132" pos:column="12">DONE<pos:position pos:line="132" pos:column="16"/></name></expr>;<pos:position pos:line="132" pos:column="17"/></return>
}<pos:position pos:line="133" pos:column="2"/></block></function></unit>

<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/httpd/gumtree/httpd_repos_function_3410_httpd-2.2.14.cpp" pos:tabs="8"><function><type><specifier pos:line="1" pos:column="1">const<pos:position pos:line="1" pos:column="6"/></specifier> <name pos:line="1" pos:column="7">char<pos:position pos:line="1" pos:column="11"/></name> <modifier pos:line="1" pos:column="12">*<pos:position pos:line="1" pos:column="13"/></modifier></type><name pos:line="1" pos:column="13">darwin_dynamic_link_function<pos:position pos:line="1" pos:column="41"/></name><parameter_list pos:line="1" pos:column="41">(<parameter><decl><type><specifier pos:line="1" pos:column="42">const<pos:position pos:line="1" pos:column="47"/></specifier> <name pos:line="1" pos:column="48">char<pos:position pos:line="1" pos:column="52"/></name> <modifier pos:line="1" pos:column="53">*<pos:position pos:line="1" pos:column="54"/></modifier></type><name pos:line="1" pos:column="54">version_info<pos:position pos:line="1" pos:column="66"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="67"/></parameter_list>
<block pos:line="2" pos:column="1">{
    <decl_stmt><decl><type><name pos:line="3" pos:column="5">char<pos:position pos:line="3" pos:column="9"/></name> <modifier pos:line="3" pos:column="10">*<pos:position pos:line="3" pos:column="11"/></modifier></type><name pos:line="3" pos:column="11">newarg<pos:position pos:line="3" pos:column="17"/></name></decl>;<pos:position pos:line="3" pos:column="18"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="4" pos:column="5">long<pos:position pos:line="4" pos:column="9"/></name></type> <name pos:line="4" pos:column="10">major<pos:position pos:line="4" pos:column="15"/></name></decl>, <decl><type ref="prev"/><name pos:line="4" pos:column="17">minor<pos:position pos:line="4" pos:column="22"/></name></decl>, <decl><type ref="prev"/><name pos:line="4" pos:column="24">patch<pos:position pos:line="4" pos:column="29"/></name></decl>;<pos:position pos:line="4" pos:column="30"/></decl_stmt>

    <expr_stmt><expr><name pos:line="6" pos:column="5">major<pos:position pos:line="6" pos:column="10"/></name> <operator pos:line="6" pos:column="11">=<pos:position pos:line="6" pos:column="12"/></operator> <literal type="number" pos:line="6" pos:column="13">0<pos:position pos:line="6" pos:column="14"/></literal></expr>;<pos:position pos:line="6" pos:column="15"/></expr_stmt>
    <expr_stmt><expr><name pos:line="7" pos:column="5">minor<pos:position pos:line="7" pos:column="10"/></name> <operator pos:line="7" pos:column="11">=<pos:position pos:line="7" pos:column="12"/></operator> <literal type="number" pos:line="7" pos:column="13">0<pos:position pos:line="7" pos:column="14"/></literal></expr>;<pos:position pos:line="7" pos:column="15"/></expr_stmt>
    <expr_stmt><expr><name pos:line="8" pos:column="5">patch<pos:position pos:line="8" pos:column="10"/></name> <operator pos:line="8" pos:column="11">=<pos:position pos:line="8" pos:column="12"/></operator> <literal type="number" pos:line="8" pos:column="13">0<pos:position pos:line="8" pos:column="14"/></literal></expr>;<pos:position pos:line="8" pos:column="15"/></expr_stmt>

    <if pos:line="10" pos:column="5">if <condition pos:line="10" pos:column="8">(<expr><name pos:line="10" pos:column="9">version_info<pos:position pos:line="10" pos:column="21"/></name></expr>)<pos:position pos:line="10" pos:column="22"/></condition><then pos:line="10" pos:column="22"> <block pos:line="10" pos:column="23">{
        <expr_stmt><expr><name pos:line="11" pos:column="9">major<pos:position pos:line="11" pos:column="14"/></name> <operator pos:line="11" pos:column="15">=<pos:position pos:line="11" pos:column="16"/></operator> <call><name pos:line="11" pos:column="17">safe_strtol<pos:position pos:line="11" pos:column="28"/></name><argument_list pos:line="11" pos:column="28">(<argument><expr><name pos:line="11" pos:column="29">version_info<pos:position pos:line="11" pos:column="41"/></name></expr></argument>, <argument><expr><operator pos:line="11" pos:column="43">&amp;<pos:position pos:line="11" pos:column="48"/></operator><name pos:line="11" pos:column="44">version_info<pos:position pos:line="11" pos:column="56"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="11" pos:column="58">10<pos:position pos:line="11" pos:column="60"/></literal></expr></argument>)<pos:position pos:line="11" pos:column="61"/></argument_list></call></expr>;<pos:position pos:line="11" pos:column="62"/></expr_stmt>

        <if pos:line="13" pos:column="9">if <condition pos:line="13" pos:column="12">(<expr><name pos:line="13" pos:column="13">version_info<pos:position pos:line="13" pos:column="25"/></name></expr>)<pos:position pos:line="13" pos:column="26"/></condition><then pos:line="13" pos:column="26"> <block pos:line="13" pos:column="27">{
            <if pos:line="14" pos:column="13">if <condition pos:line="14" pos:column="16">(<expr><name><name pos:line="14" pos:column="17">version_info<pos:position pos:line="14" pos:column="29"/></name><index pos:line="14" pos:column="29">[<expr><literal type="number" pos:line="14" pos:column="30">0<pos:position pos:line="14" pos:column="31"/></literal></expr>]<pos:position pos:line="14" pos:column="32"/></index></name> <operator pos:line="14" pos:column="33">==<pos:position pos:line="14" pos:column="35"/></operator> <literal type="char" pos:line="14" pos:column="36">':'<pos:position pos:line="14" pos:column="39"/></literal></expr>)<pos:position pos:line="14" pos:column="40"/></condition><then pos:line="14" pos:column="40"> <block pos:line="14" pos:column="41">{
                <expr_stmt><expr><name pos:line="15" pos:column="17">version_info<pos:position pos:line="15" pos:column="29"/></name><operator pos:line="15" pos:column="29">++<pos:position pos:line="15" pos:column="31"/></operator></expr>;<pos:position pos:line="15" pos:column="32"/></expr_stmt>
            }<pos:position pos:line="16" pos:column="14"/></block></then></if>

            <expr_stmt><expr><name pos:line="18" pos:column="13">minor<pos:position pos:line="18" pos:column="18"/></name> <operator pos:line="18" pos:column="19">=<pos:position pos:line="18" pos:column="20"/></operator> <call><name pos:line="18" pos:column="21">safe_strtol<pos:position pos:line="18" pos:column="32"/></name><argument_list pos:line="18" pos:column="32">(<argument><expr><name pos:line="18" pos:column="33">version_info<pos:position pos:line="18" pos:column="45"/></name></expr></argument>, <argument><expr><operator pos:line="18" pos:column="47">&amp;<pos:position pos:line="18" pos:column="52"/></operator><name pos:line="18" pos:column="48">version_info<pos:position pos:line="18" pos:column="60"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="18" pos:column="62">10<pos:position pos:line="18" pos:column="64"/></literal></expr></argument>)<pos:position pos:line="18" pos:column="65"/></argument_list></call></expr>;<pos:position pos:line="18" pos:column="66"/></expr_stmt>

            <if pos:line="20" pos:column="13">if <condition pos:line="20" pos:column="16">(<expr><name pos:line="20" pos:column="17">version_info<pos:position pos:line="20" pos:column="29"/></name></expr>)<pos:position pos:line="20" pos:column="30"/></condition><then pos:line="20" pos:column="30"> <block pos:line="20" pos:column="31">{
                <if pos:line="21" pos:column="17">if <condition pos:line="21" pos:column="20">(<expr><name><name pos:line="21" pos:column="21">version_info<pos:position pos:line="21" pos:column="33"/></name><index pos:line="21" pos:column="33">[<expr><literal type="number" pos:line="21" pos:column="34">0<pos:position pos:line="21" pos:column="35"/></literal></expr>]<pos:position pos:line="21" pos:column="36"/></index></name> <operator pos:line="21" pos:column="37">==<pos:position pos:line="21" pos:column="39"/></operator> <literal type="char" pos:line="21" pos:column="40">':'<pos:position pos:line="21" pos:column="43"/></literal></expr>)<pos:position pos:line="21" pos:column="44"/></condition><then pos:line="21" pos:column="44"> <block pos:line="21" pos:column="45">{
                    <expr_stmt><expr><name pos:line="22" pos:column="21">version_info<pos:position pos:line="22" pos:column="33"/></name><operator pos:line="22" pos:column="33">++<pos:position pos:line="22" pos:column="35"/></operator></expr>;<pos:position pos:line="22" pos:column="36"/></expr_stmt>
                }<pos:position pos:line="23" pos:column="18"/></block></then></if>

                <expr_stmt><expr><name pos:line="25" pos:column="17">patch<pos:position pos:line="25" pos:column="22"/></name> <operator pos:line="25" pos:column="23">=<pos:position pos:line="25" pos:column="24"/></operator> <call><name pos:line="25" pos:column="25">safe_strtol<pos:position pos:line="25" pos:column="36"/></name><argument_list pos:line="25" pos:column="36">(<argument><expr><name pos:line="25" pos:column="37">version_info<pos:position pos:line="25" pos:column="49"/></name></expr></argument>, <argument><expr><operator pos:line="25" pos:column="51">&amp;<pos:position pos:line="25" pos:column="56"/></operator><name pos:line="25" pos:column="52">version_info<pos:position pos:line="25" pos:column="64"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="25" pos:column="66">10<pos:position pos:line="25" pos:column="68"/></literal></expr></argument>)<pos:position pos:line="25" pos:column="69"/></argument_list></call></expr>;<pos:position pos:line="25" pos:column="70"/></expr_stmt>

            }<pos:position pos:line="27" pos:column="14"/></block></then></if>
        }<pos:position pos:line="28" pos:column="10"/></block></then></if>
    }<pos:position pos:line="29" pos:column="6"/></block></then></if>

    <comment type="block" pos:line="31" pos:column="5">/* Avoid -dylib_compatibility_version must be greater than zero errors. */</comment>
    <if pos:line="32" pos:column="5">if <condition pos:line="32" pos:column="8">(<expr><name pos:line="32" pos:column="9">major<pos:position pos:line="32" pos:column="14"/></name> <operator pos:line="32" pos:column="15">==<pos:position pos:line="32" pos:column="17"/></operator> <literal type="number" pos:line="32" pos:column="18">0<pos:position pos:line="32" pos:column="19"/></literal></expr>)<pos:position pos:line="32" pos:column="20"/></condition><then pos:line="32" pos:column="20"> <block pos:line="32" pos:column="21">{
        <expr_stmt><expr><name pos:line="33" pos:column="9">major<pos:position pos:line="33" pos:column="14"/></name> <operator pos:line="33" pos:column="15">=<pos:position pos:line="33" pos:column="16"/></operator> <literal type="number" pos:line="33" pos:column="17">1<pos:position pos:line="33" pos:column="18"/></literal></expr>;<pos:position pos:line="33" pos:column="19"/></expr_stmt>
    }<pos:position pos:line="34" pos:column="6"/></block></then></if>
    <expr_stmt><expr><name pos:line="35" pos:column="5">newarg<pos:position pos:line="35" pos:column="11"/></name> <operator pos:line="35" pos:column="12">=<pos:position pos:line="35" pos:column="13"/></operator> <operator pos:line="35" pos:column="14">(<pos:position pos:line="35" pos:column="15"/></operator><name pos:line="35" pos:column="15">char<pos:position pos:line="35" pos:column="19"/></name><operator pos:line="35" pos:column="19">*<pos:position pos:line="35" pos:column="20"/></operator><operator pos:line="35" pos:column="20">)<pos:position pos:line="35" pos:column="21"/></operator><call><name pos:line="35" pos:column="21">malloc<pos:position pos:line="35" pos:column="27"/></name><argument_list pos:line="35" pos:column="27">(<argument><expr><literal type="number" pos:line="35" pos:column="28">100<pos:position pos:line="35" pos:column="31"/></literal></expr></argument>)<pos:position pos:line="35" pos:column="32"/></argument_list></call></expr>;<pos:position pos:line="35" pos:column="33"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="36" pos:column="5">snprintf<pos:position pos:line="36" pos:column="13"/></name><argument_list pos:line="36" pos:column="13">(<argument><expr><name pos:line="36" pos:column="14">newarg<pos:position pos:line="36" pos:column="20"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="36" pos:column="22">99<pos:position pos:line="36" pos:column="24"/></literal></expr></argument>,
             <argument><expr><literal type="string" pos:line="37" pos:column="14">"-compatibility_version %ld -current_version %ld.%ld"<pos:position pos:line="37" pos:column="67"/></literal></expr></argument>,
             <argument><expr><name pos:line="38" pos:column="14">major<pos:position pos:line="38" pos:column="19"/></name></expr></argument>, <argument><expr><name pos:line="38" pos:column="21">major<pos:position pos:line="38" pos:column="26"/></name></expr></argument>, <argument><expr><name pos:line="38" pos:column="28">minor<pos:position pos:line="38" pos:column="33"/></name></expr></argument>)<pos:position pos:line="38" pos:column="34"/></argument_list></call></expr>;<pos:position pos:line="38" pos:column="35"/></expr_stmt>

    <return pos:line="40" pos:column="5">return <expr><name pos:line="40" pos:column="12">newarg<pos:position pos:line="40" pos:column="18"/></name></expr>;<pos:position pos:line="40" pos:column="19"/></return>
}<pos:position pos:line="41" pos:column="2"/></block></function></unit>

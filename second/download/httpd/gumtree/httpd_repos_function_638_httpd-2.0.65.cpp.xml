<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/httpd/gumtree/httpd_repos_function_638_httpd-2.0.65.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">int<pos:position pos:line="1" pos:column="4"/></name></type> <name pos:line="1" pos:column="5">table_insert_kd<pos:position pos:line="1" pos:column="20"/></name><parameter_list pos:line="1" pos:column="20">(<parameter><decl><type><name pos:line="1" pos:column="21">table_t<pos:position pos:line="1" pos:column="28"/></name> <modifier pos:line="1" pos:column="29">*<pos:position pos:line="1" pos:column="30"/></modifier></type> <name pos:line="1" pos:column="31">table_p<pos:position pos:line="1" pos:column="38"/></name></decl></parameter>,
                    <parameter><decl><type><specifier pos:line="2" pos:column="21">const<pos:position pos:line="2" pos:column="26"/></specifier> <name pos:line="2" pos:column="27">void<pos:position pos:line="2" pos:column="31"/></name> <modifier pos:line="2" pos:column="32">*<pos:position pos:line="2" pos:column="33"/></modifier></type><name pos:line="2" pos:column="33">key_buf<pos:position pos:line="2" pos:column="40"/></name></decl></parameter>, <parameter><decl><type><specifier pos:line="2" pos:column="42">const<pos:position pos:line="2" pos:column="47"/></specifier> <name pos:line="2" pos:column="48">int<pos:position pos:line="2" pos:column="51"/></name></type> <name pos:line="2" pos:column="52">key_size<pos:position pos:line="2" pos:column="60"/></name></decl></parameter>,
                    <parameter><decl><type><specifier pos:line="3" pos:column="21">const<pos:position pos:line="3" pos:column="26"/></specifier> <name pos:line="3" pos:column="27">void<pos:position pos:line="3" pos:column="31"/></name> <modifier pos:line="3" pos:column="32">*<pos:position pos:line="3" pos:column="33"/></modifier></type><name pos:line="3" pos:column="33">data_buf<pos:position pos:line="3" pos:column="41"/></name></decl></parameter>, <parameter><decl><type><specifier pos:line="3" pos:column="43">const<pos:position pos:line="3" pos:column="48"/></specifier> <name pos:line="3" pos:column="49">int<pos:position pos:line="3" pos:column="52"/></name></type> <name pos:line="3" pos:column="53">data_size<pos:position pos:line="3" pos:column="62"/></name></decl></parameter>,
                    <parameter><decl><type><name pos:line="4" pos:column="21">void<pos:position pos:line="4" pos:column="25"/></name> <modifier pos:line="4" pos:column="26">*<pos:position pos:line="4" pos:column="27"/></modifier><modifier pos:line="4" pos:column="27">*<pos:position pos:line="4" pos:column="28"/></modifier></type><name pos:line="4" pos:column="28">key_buf_p<pos:position pos:line="4" pos:column="37"/></name></decl></parameter>, <parameter><decl><type><name pos:line="4" pos:column="39">void<pos:position pos:line="4" pos:column="43"/></name> <modifier pos:line="4" pos:column="44">*<pos:position pos:line="4" pos:column="45"/></modifier><modifier pos:line="4" pos:column="45">*<pos:position pos:line="4" pos:column="46"/></modifier></type><name pos:line="4" pos:column="46">data_buf_p<pos:position pos:line="4" pos:column="56"/></name></decl></parameter>,
                    <parameter><decl><type><specifier pos:line="5" pos:column="21">const<pos:position pos:line="5" pos:column="26"/></specifier> <name pos:line="5" pos:column="27">char<pos:position pos:line="5" pos:column="31"/></name></type> <name pos:line="5" pos:column="32">overwrite_b<pos:position pos:line="5" pos:column="43"/></name></decl></parameter>)<pos:position pos:line="5" pos:column="44"/></parameter_list>
<block pos:line="6" pos:column="1">{
    <decl_stmt><decl><type><name pos:line="7" pos:column="5">int<pos:position pos:line="7" pos:column="8"/></name></type> <name pos:line="7" pos:column="9">bucket<pos:position pos:line="7" pos:column="15"/></name></decl>;<pos:position pos:line="7" pos:column="16"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="8" pos:column="5">unsigned<pos:position pos:line="8" pos:column="13"/></name> <name pos:line="8" pos:column="14">int<pos:position pos:line="8" pos:column="17"/></name></type> <name pos:line="8" pos:column="18">ksize<pos:position pos:line="8" pos:column="23"/></name></decl>, <decl><type ref="prev"/><name pos:line="8" pos:column="25">dsize<pos:position pos:line="8" pos:column="30"/></name></decl>;<pos:position pos:line="8" pos:column="31"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="9" pos:column="5">table_entry_t<pos:position pos:line="9" pos:column="18"/></name> <modifier pos:line="9" pos:column="19">*<pos:position pos:line="9" pos:column="20"/></modifier></type><name pos:line="9" pos:column="20">entry_p<pos:position pos:line="9" pos:column="27"/></name></decl>, <modifier pos:line="9" pos:column="29">*<pos:position pos:line="9" pos:column="30"/></modifier><decl><type ref="prev"/><name pos:line="9" pos:column="30">last_p<pos:position pos:line="9" pos:column="36"/></name></decl>;<pos:position pos:line="9" pos:column="37"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="10" pos:column="5">void<pos:position pos:line="10" pos:column="9"/></name> <modifier pos:line="10" pos:column="10">*<pos:position pos:line="10" pos:column="11"/></modifier></type><name pos:line="10" pos:column="11">key_copy_p<pos:position pos:line="10" pos:column="21"/></name></decl>, <modifier pos:line="10" pos:column="23">*<pos:position pos:line="10" pos:column="24"/></modifier><decl><type ref="prev"/><name pos:line="10" pos:column="24">data_copy_p<pos:position pos:line="10" pos:column="35"/></name></decl>;<pos:position pos:line="10" pos:column="36"/></decl_stmt>

    <comment type="block" pos:line="12" pos:column="5">/* check the arguments */</comment>
    <if pos:line="13" pos:column="5">if <condition pos:line="13" pos:column="8">(<expr><name pos:line="13" pos:column="9">table_p<pos:position pos:line="13" pos:column="16"/></name> <operator pos:line="13" pos:column="17">==<pos:position pos:line="13" pos:column="19"/></operator> <name pos:line="13" pos:column="20">NULL<pos:position pos:line="13" pos:column="24"/></name></expr>)<pos:position pos:line="13" pos:column="25"/></condition><then pos:line="13" pos:column="25">
        <block type="pseudo"><return pos:line="14" pos:column="9">return <expr><name pos:line="14" pos:column="16">TABLE_ERROR_ARG_NULL<pos:position pos:line="14" pos:column="36"/></name></expr>;<pos:position pos:line="14" pos:column="37"/></return></block></then></if>
    <if pos:line="15" pos:column="5">if <condition pos:line="15" pos:column="8">(<expr><name><name pos:line="15" pos:column="9">table_p<pos:position pos:line="15" pos:column="16"/></name><operator pos:line="15" pos:column="16">-&gt;<pos:position pos:line="15" pos:column="21"/></operator><name pos:line="15" pos:column="18">ta_magic<pos:position pos:line="15" pos:column="26"/></name></name> <operator pos:line="15" pos:column="27">!=<pos:position pos:line="15" pos:column="29"/></operator> <name pos:line="15" pos:column="30">TABLE_MAGIC<pos:position pos:line="15" pos:column="41"/></name></expr>)<pos:position pos:line="15" pos:column="42"/></condition><then pos:line="15" pos:column="42">
        <block type="pseudo"><return pos:line="16" pos:column="9">return <expr><name pos:line="16" pos:column="16">TABLE_ERROR_PNT<pos:position pos:line="16" pos:column="31"/></name></expr>;<pos:position pos:line="16" pos:column="32"/></return></block></then></if>
    <if pos:line="17" pos:column="5">if <condition pos:line="17" pos:column="8">(<expr><name pos:line="17" pos:column="9">key_buf<pos:position pos:line="17" pos:column="16"/></name> <operator pos:line="17" pos:column="17">==<pos:position pos:line="17" pos:column="19"/></operator> <name pos:line="17" pos:column="20">NULL<pos:position pos:line="17" pos:column="24"/></name></expr>)<pos:position pos:line="17" pos:column="25"/></condition><then pos:line="17" pos:column="25">
        <block type="pseudo"><return pos:line="18" pos:column="9">return <expr><name pos:line="18" pos:column="16">TABLE_ERROR_ARG_NULL<pos:position pos:line="18" pos:column="36"/></name></expr>;<pos:position pos:line="18" pos:column="37"/></return></block></then></if>
    <comment type="block" pos:line="19" pos:column="5">/* data_buf can be null but size must be &gt;= 0, if it isn't null size != 0 */</comment>
    <if pos:line="20" pos:column="5">if <condition pos:line="20" pos:column="8">(<expr><operator pos:line="20" pos:column="9">(<pos:position pos:line="20" pos:column="10"/></operator><name pos:line="20" pos:column="10">data_buf<pos:position pos:line="20" pos:column="18"/></name> <operator pos:line="20" pos:column="19">==<pos:position pos:line="20" pos:column="21"/></operator> <name pos:line="20" pos:column="22">NULL<pos:position pos:line="20" pos:column="26"/></name> <operator pos:line="20" pos:column="27">&amp;&amp;<pos:position pos:line="20" pos:column="37"/></operator> <name pos:line="20" pos:column="30">data_size<pos:position pos:line="20" pos:column="39"/></name> <operator pos:line="20" pos:column="40">&lt;<pos:position pos:line="20" pos:column="44"/></operator> <literal type="number" pos:line="20" pos:column="42">0<pos:position pos:line="20" pos:column="43"/></literal><operator pos:line="20" pos:column="43">)<pos:position pos:line="20" pos:column="44"/></operator>
        <operator pos:line="21" pos:column="9">||<pos:position pos:line="21" pos:column="11"/></operator> <operator pos:line="21" pos:column="12">(<pos:position pos:line="21" pos:column="13"/></operator><name pos:line="21" pos:column="13">data_buf<pos:position pos:line="21" pos:column="21"/></name> <operator pos:line="21" pos:column="22">!=<pos:position pos:line="21" pos:column="24"/></operator> <name pos:line="21" pos:column="25">NULL<pos:position pos:line="21" pos:column="29"/></name> <operator pos:line="21" pos:column="30">&amp;&amp;<pos:position pos:line="21" pos:column="40"/></operator> <name pos:line="21" pos:column="33">data_size<pos:position pos:line="21" pos:column="42"/></name> <operator pos:line="21" pos:column="43">==<pos:position pos:line="21" pos:column="45"/></operator> <literal type="number" pos:line="21" pos:column="46">0<pos:position pos:line="21" pos:column="47"/></literal><operator pos:line="21" pos:column="47">)<pos:position pos:line="21" pos:column="48"/></operator></expr>)<pos:position pos:line="21" pos:column="49"/></condition><then pos:line="21" pos:column="49">
        <block type="pseudo"><return pos:line="22" pos:column="9">return <expr><name pos:line="22" pos:column="16">TABLE_ERROR_SIZE<pos:position pos:line="22" pos:column="32"/></name></expr>;<pos:position pos:line="22" pos:column="33"/></return></block></then></if>
    <comment type="block" pos:line="23" pos:column="5">/* determine sizes of key and data */</comment>
    <if pos:line="24" pos:column="5">if <condition pos:line="24" pos:column="8">(<expr><name pos:line="24" pos:column="9">key_size<pos:position pos:line="24" pos:column="17"/></name> <operator pos:line="24" pos:column="18">&lt;<pos:position pos:line="24" pos:column="22"/></operator> <literal type="number" pos:line="24" pos:column="20">0<pos:position pos:line="24" pos:column="21"/></literal></expr>)<pos:position pos:line="24" pos:column="22"/></condition><then pos:line="24" pos:column="22">
        <block type="pseudo"><expr_stmt><expr><name pos:line="25" pos:column="9">ksize<pos:position pos:line="25" pos:column="14"/></name> <operator pos:line="25" pos:column="15">=<pos:position pos:line="25" pos:column="16"/></operator> <call><name pos:line="25" pos:column="17">strlen<pos:position pos:line="25" pos:column="23"/></name><argument_list pos:line="25" pos:column="23">(<argument><expr><operator pos:line="25" pos:column="24">(<pos:position pos:line="25" pos:column="25"/></operator><name pos:line="25" pos:column="25">char<pos:position pos:line="25" pos:column="29"/></name> <operator pos:line="25" pos:column="30">*<pos:position pos:line="25" pos:column="31"/></operator><operator pos:line="25" pos:column="31">)<pos:position pos:line="25" pos:column="32"/></operator> <name pos:line="25" pos:column="33">key_buf<pos:position pos:line="25" pos:column="40"/></name></expr></argument>)<pos:position pos:line="25" pos:column="41"/></argument_list></call> <operator pos:line="25" pos:column="42">+<pos:position pos:line="25" pos:column="43"/></operator> <sizeof pos:line="25" pos:column="44">sizeof<argument_list pos:line="25" pos:column="50">(<argument><expr><name pos:line="25" pos:column="51">char<pos:position pos:line="25" pos:column="55"/></name></expr></argument>)<pos:position pos:line="25" pos:column="56"/></argument_list></sizeof></expr>;<pos:position pos:line="25" pos:column="57"/></expr_stmt></block></then>
    <else pos:line="26" pos:column="5">else
        <block type="pseudo"><expr_stmt><expr><name pos:line="27" pos:column="9">ksize<pos:position pos:line="27" pos:column="14"/></name> <operator pos:line="27" pos:column="15">=<pos:position pos:line="27" pos:column="16"/></operator> <name pos:line="27" pos:column="17">key_size<pos:position pos:line="27" pos:column="25"/></name></expr>;<pos:position pos:line="27" pos:column="26"/></expr_stmt></block></else></if>
    <if pos:line="28" pos:column="5">if <condition pos:line="28" pos:column="8">(<expr><name pos:line="28" pos:column="9">data_size<pos:position pos:line="28" pos:column="18"/></name> <operator pos:line="28" pos:column="19">&lt;<pos:position pos:line="28" pos:column="23"/></operator> <literal type="number" pos:line="28" pos:column="21">0<pos:position pos:line="28" pos:column="22"/></literal></expr>)<pos:position pos:line="28" pos:column="23"/></condition><then pos:line="28" pos:column="23">
        <block type="pseudo"><expr_stmt><expr><name pos:line="29" pos:column="9">dsize<pos:position pos:line="29" pos:column="14"/></name> <operator pos:line="29" pos:column="15">=<pos:position pos:line="29" pos:column="16"/></operator> <call><name pos:line="29" pos:column="17">strlen<pos:position pos:line="29" pos:column="23"/></name><argument_list pos:line="29" pos:column="23">(<argument><expr><operator pos:line="29" pos:column="24">(<pos:position pos:line="29" pos:column="25"/></operator><name pos:line="29" pos:column="25">char<pos:position pos:line="29" pos:column="29"/></name> <operator pos:line="29" pos:column="30">*<pos:position pos:line="29" pos:column="31"/></operator><operator pos:line="29" pos:column="31">)<pos:position pos:line="29" pos:column="32"/></operator> <name pos:line="29" pos:column="33">data_buf<pos:position pos:line="29" pos:column="41"/></name></expr></argument>)<pos:position pos:line="29" pos:column="42"/></argument_list></call> <operator pos:line="29" pos:column="43">+<pos:position pos:line="29" pos:column="44"/></operator> <sizeof pos:line="29" pos:column="45">sizeof<argument_list pos:line="29" pos:column="51">(<argument><expr><name pos:line="29" pos:column="52">char<pos:position pos:line="29" pos:column="56"/></name></expr></argument>)<pos:position pos:line="29" pos:column="57"/></argument_list></sizeof></expr>;<pos:position pos:line="29" pos:column="58"/></expr_stmt></block></then>
    <else pos:line="30" pos:column="5">else
        <block type="pseudo"><expr_stmt><expr><name pos:line="31" pos:column="9">dsize<pos:position pos:line="31" pos:column="14"/></name> <operator pos:line="31" pos:column="15">=<pos:position pos:line="31" pos:column="16"/></operator> <name pos:line="31" pos:column="17">data_size<pos:position pos:line="31" pos:column="26"/></name></expr>;<pos:position pos:line="31" pos:column="27"/></expr_stmt></block></else></if>
    <comment type="block" pos:line="32" pos:column="5">/* get the bucket number via a hash function */</comment>
    <expr_stmt><expr><name pos:line="33" pos:column="5">bucket<pos:position pos:line="33" pos:column="11"/></name> <operator pos:line="33" pos:column="12">=<pos:position pos:line="33" pos:column="13"/></operator> <call><name pos:line="33" pos:column="14">hash<pos:position pos:line="33" pos:column="18"/></name><argument_list pos:line="33" pos:column="18">(<argument><expr><name pos:line="33" pos:column="19">key_buf<pos:position pos:line="33" pos:column="26"/></name></expr></argument>, <argument><expr><name pos:line="33" pos:column="28">ksize<pos:position pos:line="33" pos:column="33"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="33" pos:column="35">0<pos:position pos:line="33" pos:column="36"/></literal></expr></argument>)<pos:position pos:line="33" pos:column="37"/></argument_list></call> <operator pos:line="33" pos:column="38">%<pos:position pos:line="33" pos:column="39"/></operator> <name><name pos:line="33" pos:column="40">table_p<pos:position pos:line="33" pos:column="47"/></name><operator pos:line="33" pos:column="47">-&gt;<pos:position pos:line="33" pos:column="52"/></operator><name pos:line="33" pos:column="49">ta_bucket_n<pos:position pos:line="33" pos:column="60"/></name></name></expr>;<pos:position pos:line="33" pos:column="61"/></expr_stmt>

    <comment type="block" pos:line="35" pos:column="5">/* look for the entry in this bucket, only check keys of the same size */</comment>
    <expr_stmt><expr><name pos:line="36" pos:column="5">last_p<pos:position pos:line="36" pos:column="11"/></name> <operator pos:line="36" pos:column="12">=<pos:position pos:line="36" pos:column="13"/></operator> <name pos:line="36" pos:column="14">NULL<pos:position pos:line="36" pos:column="18"/></name></expr>;<pos:position pos:line="36" pos:column="19"/></expr_stmt>
    <for pos:line="37" pos:column="5">for <control pos:line="37" pos:column="9">(<init><expr><name pos:line="37" pos:column="10">entry_p<pos:position pos:line="37" pos:column="17"/></name> <operator pos:line="37" pos:column="18">=<pos:position pos:line="37" pos:column="19"/></operator> <name><name pos:line="37" pos:column="20">table_p<pos:position pos:line="37" pos:column="27"/></name><operator pos:line="37" pos:column="27">-&gt;<pos:position pos:line="37" pos:column="32"/></operator><name pos:line="37" pos:column="29">ta_buckets<pos:position pos:line="37" pos:column="39"/></name><index pos:line="37" pos:column="39">[<expr><name pos:line="37" pos:column="40">bucket<pos:position pos:line="37" pos:column="46"/></name></expr>]<pos:position pos:line="37" pos:column="47"/></index></name></expr>;<pos:position pos:line="37" pos:column="48"/></init>
         <condition><expr><operator pos:line="38" pos:column="10">(<pos:position pos:line="38" pos:column="11"/></operator><name pos:line="38" pos:column="11">entry_p<pos:position pos:line="38" pos:column="18"/></name> <operator pos:line="38" pos:column="19">!=<pos:position pos:line="38" pos:column="21"/></operator> <name pos:line="38" pos:column="22">NULL<pos:position pos:line="38" pos:column="26"/></name><operator pos:line="38" pos:column="26">)<pos:position pos:line="38" pos:column="27"/></operator> <operator pos:line="38" pos:column="28">&amp;&amp;<pos:position pos:line="38" pos:column="38"/></operator> <operator pos:line="38" pos:column="31">(<pos:position pos:line="38" pos:column="32"/></operator><name><name pos:line="38" pos:column="32">entry_p<pos:position pos:line="38" pos:column="39"/></name><operator pos:line="38" pos:column="39">-&gt;<pos:position pos:line="38" pos:column="44"/></operator><name pos:line="38" pos:column="41">te_next_p<pos:position pos:line="38" pos:column="50"/></name></name> <operator pos:line="38" pos:column="51">!=<pos:position pos:line="38" pos:column="53"/></operator> <name pos:line="38" pos:column="54">last_p<pos:position pos:line="38" pos:column="60"/></name><operator pos:line="38" pos:column="60">)<pos:position pos:line="38" pos:column="61"/></operator></expr>;<pos:position pos:line="38" pos:column="62"/></condition>
         <incr><expr><name pos:line="39" pos:column="10">last_p<pos:position pos:line="39" pos:column="16"/></name> <operator pos:line="39" pos:column="17">=<pos:position pos:line="39" pos:column="18"/></operator> <name pos:line="39" pos:column="19">entry_p<pos:position pos:line="39" pos:column="26"/></name></expr><operator pos:line="39" pos:column="26">,<pos:position pos:line="39" pos:column="27"/></operator> <expr><name pos:line="39" pos:column="28">entry_p<pos:position pos:line="39" pos:column="35"/></name> <operator pos:line="39" pos:column="36">=<pos:position pos:line="39" pos:column="37"/></operator> <name><name pos:line="39" pos:column="38">entry_p<pos:position pos:line="39" pos:column="45"/></name><operator pos:line="39" pos:column="45">-&gt;<pos:position pos:line="39" pos:column="50"/></operator><name pos:line="39" pos:column="47">te_next_p<pos:position pos:line="39" pos:column="56"/></name></name></expr></incr>)<pos:position pos:line="39" pos:column="57"/></control> <block pos:line="39" pos:column="58">{
        <if pos:line="40" pos:column="9">if <condition pos:line="40" pos:column="12">(<expr><name><name pos:line="40" pos:column="13">entry_p<pos:position pos:line="40" pos:column="20"/></name><operator pos:line="40" pos:column="20">-&gt;<pos:position pos:line="40" pos:column="25"/></operator><name pos:line="40" pos:column="22">te_key_size<pos:position pos:line="40" pos:column="33"/></name></name> <operator pos:line="40" pos:column="34">==<pos:position pos:line="40" pos:column="36"/></operator> <name pos:line="40" pos:column="37">ksize<pos:position pos:line="40" pos:column="42"/></name>
            <operator pos:line="41" pos:column="13">&amp;&amp;<pos:position pos:line="41" pos:column="23"/></operator> <call><name pos:line="41" pos:column="16">memcmp<pos:position pos:line="41" pos:column="22"/></name><argument_list pos:line="41" pos:column="22">(<argument><expr><call><name pos:line="41" pos:column="23">ENTRY_KEY_BUF<pos:position pos:line="41" pos:column="36"/></name><argument_list pos:line="41" pos:column="36">(<argument><expr><name pos:line="41" pos:column="37">entry_p<pos:position pos:line="41" pos:column="44"/></name></expr></argument>)<pos:position pos:line="41" pos:column="45"/></argument_list></call></expr></argument>, <argument><expr><name pos:line="41" pos:column="47">key_buf<pos:position pos:line="41" pos:column="54"/></name></expr></argument>, <argument><expr><name pos:line="41" pos:column="56">ksize<pos:position pos:line="41" pos:column="61"/></name></expr></argument>)<pos:position pos:line="41" pos:column="62"/></argument_list></call> <operator pos:line="41" pos:column="63">==<pos:position pos:line="41" pos:column="65"/></operator> <literal type="number" pos:line="41" pos:column="66">0<pos:position pos:line="41" pos:column="67"/></literal></expr>)<pos:position pos:line="41" pos:column="68"/></condition><then pos:line="41" pos:column="68">
            <block type="pseudo"><break pos:line="42" pos:column="13">break;<pos:position pos:line="42" pos:column="19"/></break></block></then></if>
    }<pos:position pos:line="43" pos:column="6"/></block></for>

    <comment type="block" pos:line="45" pos:column="5">/* did we find it?  then we are in replace mode. */</comment>
    <if pos:line="46" pos:column="5">if <condition pos:line="46" pos:column="8">(<expr><name pos:line="46" pos:column="9">entry_p<pos:position pos:line="46" pos:column="16"/></name> <operator pos:line="46" pos:column="17">!=<pos:position pos:line="46" pos:column="19"/></operator> <name pos:line="46" pos:column="20">NULL<pos:position pos:line="46" pos:column="24"/></name></expr>)<pos:position pos:line="46" pos:column="25"/></condition><then pos:line="46" pos:column="25"> <block pos:line="46" pos:column="26">{

        <comment type="block" pos:line="48" pos:column="9">/* can we not overwrite existing data? */</comment>
        <if pos:line="49" pos:column="9">if <condition pos:line="49" pos:column="12">(<expr><operator pos:line="49" pos:column="13">!<pos:position pos:line="49" pos:column="14"/></operator><name pos:line="49" pos:column="14">overwrite_b<pos:position pos:line="49" pos:column="25"/></name></expr>)<pos:position pos:line="49" pos:column="26"/></condition><then pos:line="49" pos:column="26"> <block pos:line="49" pos:column="27">{
            <if pos:line="50" pos:column="13">if <condition pos:line="50" pos:column="16">(<expr><name pos:line="50" pos:column="17">key_buf_p<pos:position pos:line="50" pos:column="26"/></name> <operator pos:line="50" pos:column="27">!=<pos:position pos:line="50" pos:column="29"/></operator> <name pos:line="50" pos:column="30">NULL<pos:position pos:line="50" pos:column="34"/></name></expr>)<pos:position pos:line="50" pos:column="35"/></condition><then pos:line="50" pos:column="35">
                <block type="pseudo"><expr_stmt><expr><operator pos:line="51" pos:column="17">*<pos:position pos:line="51" pos:column="18"/></operator><name pos:line="51" pos:column="18">key_buf_p<pos:position pos:line="51" pos:column="27"/></name> <operator pos:line="51" pos:column="28">=<pos:position pos:line="51" pos:column="29"/></operator> <call><name pos:line="51" pos:column="30">ENTRY_KEY_BUF<pos:position pos:line="51" pos:column="43"/></name><argument_list pos:line="51" pos:column="43">(<argument><expr><name pos:line="51" pos:column="44">entry_p<pos:position pos:line="51" pos:column="51"/></name></expr></argument>)<pos:position pos:line="51" pos:column="52"/></argument_list></call></expr>;<pos:position pos:line="51" pos:column="53"/></expr_stmt></block></then></if>
            <if pos:line="52" pos:column="13">if <condition pos:line="52" pos:column="16">(<expr><name pos:line="52" pos:column="17">data_buf_p<pos:position pos:line="52" pos:column="27"/></name> <operator pos:line="52" pos:column="28">!=<pos:position pos:line="52" pos:column="30"/></operator> <name pos:line="52" pos:column="31">NULL<pos:position pos:line="52" pos:column="35"/></name></expr>)<pos:position pos:line="52" pos:column="36"/></condition><then pos:line="52" pos:column="36"> <block pos:line="52" pos:column="37">{
                <if pos:line="53" pos:column="17">if <condition pos:line="53" pos:column="20">(<expr><name><name pos:line="53" pos:column="21">entry_p<pos:position pos:line="53" pos:column="28"/></name><operator pos:line="53" pos:column="28">-&gt;<pos:position pos:line="53" pos:column="33"/></operator><name pos:line="53" pos:column="30">te_data_size<pos:position pos:line="53" pos:column="42"/></name></name> <operator pos:line="53" pos:column="43">==<pos:position pos:line="53" pos:column="45"/></operator> <literal type="number" pos:line="53" pos:column="46">0<pos:position pos:line="53" pos:column="47"/></literal></expr>)<pos:position pos:line="53" pos:column="48"/></condition><then pos:line="53" pos:column="48">
                    <block type="pseudo"><expr_stmt><expr><operator pos:line="54" pos:column="21">*<pos:position pos:line="54" pos:column="22"/></operator><name pos:line="54" pos:column="22">data_buf_p<pos:position pos:line="54" pos:column="32"/></name> <operator pos:line="54" pos:column="33">=<pos:position pos:line="54" pos:column="34"/></operator> <name pos:line="54" pos:column="35">NULL<pos:position pos:line="54" pos:column="39"/></name></expr>;<pos:position pos:line="54" pos:column="40"/></expr_stmt></block></then>
                <else pos:line="55" pos:column="17">else <block pos:line="55" pos:column="22">{
                    <if pos:line="56" pos:column="21">if <condition pos:line="56" pos:column="24">(<expr><name><name pos:line="56" pos:column="25">table_p<pos:position pos:line="56" pos:column="32"/></name><operator pos:line="56" pos:column="32">-&gt;<pos:position pos:line="56" pos:column="37"/></operator><name pos:line="56" pos:column="34">ta_data_align<pos:position pos:line="56" pos:column="47"/></name></name> <operator pos:line="56" pos:column="48">==<pos:position pos:line="56" pos:column="50"/></operator> <literal type="number" pos:line="56" pos:column="51">0<pos:position pos:line="56" pos:column="52"/></literal></expr>)<pos:position pos:line="56" pos:column="53"/></condition><then pos:line="56" pos:column="53">
                        <block type="pseudo"><expr_stmt><expr><operator pos:line="57" pos:column="25">*<pos:position pos:line="57" pos:column="26"/></operator><name pos:line="57" pos:column="26">data_buf_p<pos:position pos:line="57" pos:column="36"/></name> <operator pos:line="57" pos:column="37">=<pos:position pos:line="57" pos:column="38"/></operator> <call><name pos:line="57" pos:column="39">ENTRY_DATA_BUF<pos:position pos:line="57" pos:column="53"/></name><argument_list pos:line="57" pos:column="53">(<argument><expr><name pos:line="57" pos:column="54">table_p<pos:position pos:line="57" pos:column="61"/></name></expr></argument>, <argument><expr><name pos:line="57" pos:column="63">entry_p<pos:position pos:line="57" pos:column="70"/></name></expr></argument>)<pos:position pos:line="57" pos:column="71"/></argument_list></call></expr>;<pos:position pos:line="57" pos:column="72"/></expr_stmt></block></then>
                    <else pos:line="58" pos:column="21">else
                        <block type="pseudo"><expr_stmt><expr><operator pos:line="59" pos:column="25">*<pos:position pos:line="59" pos:column="26"/></operator><name pos:line="59" pos:column="26">data_buf_p<pos:position pos:line="59" pos:column="36"/></name> <operator pos:line="59" pos:column="37">=<pos:position pos:line="59" pos:column="38"/></operator> <call><name pos:line="59" pos:column="39">entry_data_buf<pos:position pos:line="59" pos:column="53"/></name><argument_list pos:line="59" pos:column="53">(<argument><expr><name pos:line="59" pos:column="54">table_p<pos:position pos:line="59" pos:column="61"/></name></expr></argument>, <argument><expr><name pos:line="59" pos:column="63">entry_p<pos:position pos:line="59" pos:column="70"/></name></expr></argument>)<pos:position pos:line="59" pos:column="71"/></argument_list></call></expr>;<pos:position pos:line="59" pos:column="72"/></expr_stmt></block></else></if>
                }<pos:position pos:line="60" pos:column="18"/></block></else></if>
            }<pos:position pos:line="61" pos:column="14"/></block></then></if>
            <return pos:line="62" pos:column="13">return <expr><name pos:line="62" pos:column="20">TABLE_ERROR_OVERWRITE<pos:position pos:line="62" pos:column="41"/></name></expr>;<pos:position pos:line="62" pos:column="42"/></return>
        }<pos:position pos:line="63" pos:column="10"/></block></then></if>

        <comment type="block" pos:line="65" pos:column="9">/* re-alloc entry's data if the new size != the old */</comment>
        <if pos:line="66" pos:column="9">if <condition pos:line="66" pos:column="12">(<expr><name pos:line="66" pos:column="13">dsize<pos:position pos:line="66" pos:column="18"/></name> <operator pos:line="66" pos:column="19">!=<pos:position pos:line="66" pos:column="21"/></operator> <name><name pos:line="66" pos:column="22">entry_p<pos:position pos:line="66" pos:column="29"/></name><operator pos:line="66" pos:column="29">-&gt;<pos:position pos:line="66" pos:column="34"/></operator><name pos:line="66" pos:column="31">te_data_size<pos:position pos:line="66" pos:column="43"/></name></name></expr>)<pos:position pos:line="66" pos:column="44"/></condition><then pos:line="66" pos:column="44"> <block pos:line="66" pos:column="45">{

            <comment type="block" pos:line="68" pos:column="13">/*
             * First we delete it from the list to keep the list whole.
             * This properly preserves the linked list in case we have a
             * thread marching through the linked list while we are
             * inserting.  Maybe this is an unnecessary protection but it
             * should not harm that much.
             */</comment>
            <if pos:line="75" pos:column="13">if <condition pos:line="75" pos:column="16">(<expr><name pos:line="75" pos:column="17">last_p<pos:position pos:line="75" pos:column="23"/></name> <operator pos:line="75" pos:column="24">==<pos:position pos:line="75" pos:column="26"/></operator> <name pos:line="75" pos:column="27">NULL<pos:position pos:line="75" pos:column="31"/></name></expr>)<pos:position pos:line="75" pos:column="32"/></condition><then pos:line="75" pos:column="32">
                <block type="pseudo"><expr_stmt><expr><name><name pos:line="76" pos:column="17">table_p<pos:position pos:line="76" pos:column="24"/></name><operator pos:line="76" pos:column="24">-&gt;<pos:position pos:line="76" pos:column="29"/></operator><name pos:line="76" pos:column="26">ta_buckets<pos:position pos:line="76" pos:column="36"/></name><index pos:line="76" pos:column="36">[<expr><name pos:line="76" pos:column="37">bucket<pos:position pos:line="76" pos:column="43"/></name></expr>]<pos:position pos:line="76" pos:column="44"/></index></name> <operator pos:line="76" pos:column="45">=<pos:position pos:line="76" pos:column="46"/></operator> <name><name pos:line="76" pos:column="47">entry_p<pos:position pos:line="76" pos:column="54"/></name><operator pos:line="76" pos:column="54">-&gt;<pos:position pos:line="76" pos:column="59"/></operator><name pos:line="76" pos:column="56">te_next_p<pos:position pos:line="76" pos:column="65"/></name></name></expr>;<pos:position pos:line="76" pos:column="66"/></expr_stmt></block></then>
            <else pos:line="77" pos:column="13">else
                <block type="pseudo"><expr_stmt><expr><name><name pos:line="78" pos:column="17">last_p<pos:position pos:line="78" pos:column="23"/></name><operator pos:line="78" pos:column="23">-&gt;<pos:position pos:line="78" pos:column="28"/></operator><name pos:line="78" pos:column="25">te_next_p<pos:position pos:line="78" pos:column="34"/></name></name> <operator pos:line="78" pos:column="35">=<pos:position pos:line="78" pos:column="36"/></operator> <name><name pos:line="78" pos:column="37">entry_p<pos:position pos:line="78" pos:column="44"/></name><operator pos:line="78" pos:column="44">-&gt;<pos:position pos:line="78" pos:column="49"/></operator><name pos:line="78" pos:column="46">te_next_p<pos:position pos:line="78" pos:column="55"/></name></name></expr>;<pos:position pos:line="78" pos:column="56"/></expr_stmt></block></else></if>
            <comment type="block" pos:line="79" pos:column="13">/*
             * Realloc the structure which may change its pointer. NOTE:
             * this may change any previous data_key_p and data_copy_p
             * pointers.
             */</comment>
            <expr_stmt><expr><name pos:line="84" pos:column="13">entry_p<pos:position pos:line="84" pos:column="20"/></name> <operator pos:line="84" pos:column="21">=<pos:position pos:line="84" pos:column="22"/></operator> <operator pos:line="84" pos:column="23">(<pos:position pos:line="84" pos:column="24"/></operator><name pos:line="84" pos:column="24">table_entry_t<pos:position pos:line="84" pos:column="37"/></name> <operator pos:line="84" pos:column="38">*<pos:position pos:line="84" pos:column="39"/></operator><operator pos:line="84" pos:column="39">)<pos:position pos:line="84" pos:column="40"/></operator>
                       <call><name><name pos:line="85" pos:column="24">table_p<pos:position pos:line="85" pos:column="31"/></name><operator pos:line="85" pos:column="31">-&gt;<pos:position pos:line="85" pos:column="36"/></operator><name pos:line="85" pos:column="33">ta_realloc<pos:position pos:line="85" pos:column="43"/></name></name><argument_list pos:line="85" pos:column="43">(<argument><expr><name><name pos:line="85" pos:column="44">table_p<pos:position pos:line="85" pos:column="51"/></name><operator pos:line="85" pos:column="51">-&gt;<pos:position pos:line="85" pos:column="56"/></operator><name pos:line="85" pos:column="53">opt_param<pos:position pos:line="85" pos:column="62"/></name></name></expr></argument>, <argument><expr><name pos:line="85" pos:column="64">entry_p<pos:position pos:line="85" pos:column="71"/></name></expr></argument>,
			     <argument><expr><call><name pos:line="86" pos:column="30">entry_size<pos:position pos:line="86" pos:column="40"/></name><argument_list pos:line="86" pos:column="40">(<argument><expr><name pos:line="86" pos:column="41">table_p<pos:position pos:line="86" pos:column="48"/></name></expr></argument>, <argument><expr><name><name pos:line="86" pos:column="50">entry_p<pos:position pos:line="86" pos:column="57"/></name><operator pos:line="86" pos:column="57">-&gt;<pos:position pos:line="86" pos:column="62"/></operator><name pos:line="86" pos:column="59">te_key_size<pos:position pos:line="86" pos:column="70"/></name></name></expr></argument>, <argument><expr><name pos:line="86" pos:column="72">dsize<pos:position pos:line="86" pos:column="77"/></name></expr></argument>)<pos:position pos:line="86" pos:column="78"/></argument_list></call></expr></argument>)<pos:position pos:line="86" pos:column="79"/></argument_list></call></expr>;<pos:position pos:line="86" pos:column="80"/></expr_stmt>
            <if pos:line="87" pos:column="13">if <condition pos:line="87" pos:column="16">(<expr><name pos:line="87" pos:column="17">entry_p<pos:position pos:line="87" pos:column="24"/></name> <operator pos:line="87" pos:column="25">==<pos:position pos:line="87" pos:column="27"/></operator> <name pos:line="87" pos:column="28">NULL<pos:position pos:line="87" pos:column="32"/></name></expr>)<pos:position pos:line="87" pos:column="33"/></condition><then pos:line="87" pos:column="33">
                <block type="pseudo"><return pos:line="88" pos:column="17">return <expr><name pos:line="88" pos:column="24">TABLE_ERROR_ALLOC<pos:position pos:line="88" pos:column="41"/></name></expr>;<pos:position pos:line="88" pos:column="42"/></return></block></then></if>
            <comment type="block" pos:line="89" pos:column="13">/* add it back to the front of the list */</comment>
            <expr_stmt><expr><name><name pos:line="90" pos:column="13">entry_p<pos:position pos:line="90" pos:column="20"/></name><operator pos:line="90" pos:column="20">-&gt;<pos:position pos:line="90" pos:column="25"/></operator><name pos:line="90" pos:column="22">te_data_size<pos:position pos:line="90" pos:column="34"/></name></name> <operator pos:line="90" pos:column="35">=<pos:position pos:line="90" pos:column="36"/></operator> <name pos:line="90" pos:column="37">dsize<pos:position pos:line="90" pos:column="42"/></name></expr>;<pos:position pos:line="90" pos:column="43"/></expr_stmt>
            <expr_stmt><expr><name><name pos:line="91" pos:column="13">entry_p<pos:position pos:line="91" pos:column="20"/></name><operator pos:line="91" pos:column="20">-&gt;<pos:position pos:line="91" pos:column="25"/></operator><name pos:line="91" pos:column="22">te_next_p<pos:position pos:line="91" pos:column="31"/></name></name> <operator pos:line="91" pos:column="32">=<pos:position pos:line="91" pos:column="33"/></operator> <name><name pos:line="91" pos:column="34">table_p<pos:position pos:line="91" pos:column="41"/></name><operator pos:line="91" pos:column="41">-&gt;<pos:position pos:line="91" pos:column="46"/></operator><name pos:line="91" pos:column="43">ta_buckets<pos:position pos:line="91" pos:column="53"/></name><index pos:line="91" pos:column="53">[<expr><name pos:line="91" pos:column="54">bucket<pos:position pos:line="91" pos:column="60"/></name></expr>]<pos:position pos:line="91" pos:column="61"/></index></name></expr>;<pos:position pos:line="91" pos:column="62"/></expr_stmt>
            <expr_stmt><expr><name><name pos:line="92" pos:column="13">table_p<pos:position pos:line="92" pos:column="20"/></name><operator pos:line="92" pos:column="20">-&gt;<pos:position pos:line="92" pos:column="25"/></operator><name pos:line="92" pos:column="22">ta_buckets<pos:position pos:line="92" pos:column="32"/></name><index pos:line="92" pos:column="32">[<expr><name pos:line="92" pos:column="33">bucket<pos:position pos:line="92" pos:column="39"/></name></expr>]<pos:position pos:line="92" pos:column="40"/></index></name> <operator pos:line="92" pos:column="41">=<pos:position pos:line="92" pos:column="42"/></operator> <name pos:line="92" pos:column="43">entry_p<pos:position pos:line="92" pos:column="50"/></name></expr>;<pos:position pos:line="92" pos:column="51"/></expr_stmt>
        }<pos:position pos:line="93" pos:column="10"/></block></then></if>

        <comment type="block" pos:line="95" pos:column="9">/* copy or replace data in storage */</comment>
        <if pos:line="96" pos:column="9">if <condition pos:line="96" pos:column="12">(<expr><name pos:line="96" pos:column="13">dsize<pos:position pos:line="96" pos:column="18"/></name> <operator pos:line="96" pos:column="19">&gt;<pos:position pos:line="96" pos:column="23"/></operator> <literal type="number" pos:line="96" pos:column="21">0<pos:position pos:line="96" pos:column="22"/></literal></expr>)<pos:position pos:line="96" pos:column="23"/></condition><then pos:line="96" pos:column="23"> <block pos:line="96" pos:column="24">{
            <if pos:line="97" pos:column="13">if <condition pos:line="97" pos:column="16">(<expr><name><name pos:line="97" pos:column="17">table_p<pos:position pos:line="97" pos:column="24"/></name><operator pos:line="97" pos:column="24">-&gt;<pos:position pos:line="97" pos:column="29"/></operator><name pos:line="97" pos:column="26">ta_data_align<pos:position pos:line="97" pos:column="39"/></name></name> <operator pos:line="97" pos:column="40">==<pos:position pos:line="97" pos:column="42"/></operator> <literal type="number" pos:line="97" pos:column="43">0<pos:position pos:line="97" pos:column="44"/></literal></expr>)<pos:position pos:line="97" pos:column="45"/></condition><then pos:line="97" pos:column="45">
                <block type="pseudo"><expr_stmt><expr><name pos:line="98" pos:column="17">data_copy_p<pos:position pos:line="98" pos:column="28"/></name> <operator pos:line="98" pos:column="29">=<pos:position pos:line="98" pos:column="30"/></operator> <call><name pos:line="98" pos:column="31">ENTRY_DATA_BUF<pos:position pos:line="98" pos:column="45"/></name><argument_list pos:line="98" pos:column="45">(<argument><expr><name pos:line="98" pos:column="46">table_p<pos:position pos:line="98" pos:column="53"/></name></expr></argument>, <argument><expr><name pos:line="98" pos:column="55">entry_p<pos:position pos:line="98" pos:column="62"/></name></expr></argument>)<pos:position pos:line="98" pos:column="63"/></argument_list></call></expr>;<pos:position pos:line="98" pos:column="64"/></expr_stmt></block></then>
            <else pos:line="99" pos:column="13">else
                <block type="pseudo"><expr_stmt><expr><name pos:line="100" pos:column="17">data_copy_p<pos:position pos:line="100" pos:column="28"/></name> <operator pos:line="100" pos:column="29">=<pos:position pos:line="100" pos:column="30"/></operator> <call><name pos:line="100" pos:column="31">entry_data_buf<pos:position pos:line="100" pos:column="45"/></name><argument_list pos:line="100" pos:column="45">(<argument><expr><name pos:line="100" pos:column="46">table_p<pos:position pos:line="100" pos:column="53"/></name></expr></argument>, <argument><expr><name pos:line="100" pos:column="55">entry_p<pos:position pos:line="100" pos:column="62"/></name></expr></argument>)<pos:position pos:line="100" pos:column="63"/></argument_list></call></expr>;<pos:position pos:line="100" pos:column="64"/></expr_stmt></block></else></if>
            <if pos:line="101" pos:column="13">if <condition pos:line="101" pos:column="16">(<expr><name pos:line="101" pos:column="17">data_buf<pos:position pos:line="101" pos:column="25"/></name> <operator pos:line="101" pos:column="26">!=<pos:position pos:line="101" pos:column="28"/></operator> <name pos:line="101" pos:column="29">NULL<pos:position pos:line="101" pos:column="33"/></name></expr>)<pos:position pos:line="101" pos:column="34"/></condition><then pos:line="101" pos:column="34">
                <block type="pseudo"><expr_stmt><expr><call><name pos:line="102" pos:column="17">memcpy<pos:position pos:line="102" pos:column="23"/></name><argument_list pos:line="102" pos:column="23">(<argument><expr><name pos:line="102" pos:column="24">data_copy_p<pos:position pos:line="102" pos:column="35"/></name></expr></argument>, <argument><expr><name pos:line="102" pos:column="37">data_buf<pos:position pos:line="102" pos:column="45"/></name></expr></argument>, <argument><expr><name pos:line="102" pos:column="47">dsize<pos:position pos:line="102" pos:column="52"/></name></expr></argument>)<pos:position pos:line="102" pos:column="53"/></argument_list></call></expr>;<pos:position pos:line="102" pos:column="54"/></expr_stmt></block></then></if>
        }<pos:position pos:line="103" pos:column="10"/></block></then>
        <else pos:line="104" pos:column="9">else
            <block type="pseudo"><expr_stmt><expr><name pos:line="105" pos:column="13">data_copy_p<pos:position pos:line="105" pos:column="24"/></name> <operator pos:line="105" pos:column="25">=<pos:position pos:line="105" pos:column="26"/></operator> <name pos:line="105" pos:column="27">NULL<pos:position pos:line="105" pos:column="31"/></name></expr>;<pos:position pos:line="105" pos:column="32"/></expr_stmt></block></else></if>
        <if pos:line="106" pos:column="9">if <condition pos:line="106" pos:column="12">(<expr><name pos:line="106" pos:column="13">key_buf_p<pos:position pos:line="106" pos:column="22"/></name> <operator pos:line="106" pos:column="23">!=<pos:position pos:line="106" pos:column="25"/></operator> <name pos:line="106" pos:column="26">NULL<pos:position pos:line="106" pos:column="30"/></name></expr>)<pos:position pos:line="106" pos:column="31"/></condition><then pos:line="106" pos:column="31">
            <block type="pseudo"><expr_stmt><expr><operator pos:line="107" pos:column="13">*<pos:position pos:line="107" pos:column="14"/></operator><name pos:line="107" pos:column="14">key_buf_p<pos:position pos:line="107" pos:column="23"/></name> <operator pos:line="107" pos:column="24">=<pos:position pos:line="107" pos:column="25"/></operator> <call><name pos:line="107" pos:column="26">ENTRY_KEY_BUF<pos:position pos:line="107" pos:column="39"/></name><argument_list pos:line="107" pos:column="39">(<argument><expr><name pos:line="107" pos:column="40">entry_p<pos:position pos:line="107" pos:column="47"/></name></expr></argument>)<pos:position pos:line="107" pos:column="48"/></argument_list></call></expr>;<pos:position pos:line="107" pos:column="49"/></expr_stmt></block></then></if>
        <if pos:line="108" pos:column="9">if <condition pos:line="108" pos:column="12">(<expr><name pos:line="108" pos:column="13">data_buf_p<pos:position pos:line="108" pos:column="23"/></name> <operator pos:line="108" pos:column="24">!=<pos:position pos:line="108" pos:column="26"/></operator> <name pos:line="108" pos:column="27">NULL<pos:position pos:line="108" pos:column="31"/></name></expr>)<pos:position pos:line="108" pos:column="32"/></condition><then pos:line="108" pos:column="32">
            <block type="pseudo"><expr_stmt><expr><operator pos:line="109" pos:column="13">*<pos:position pos:line="109" pos:column="14"/></operator><name pos:line="109" pos:column="14">data_buf_p<pos:position pos:line="109" pos:column="24"/></name> <operator pos:line="109" pos:column="25">=<pos:position pos:line="109" pos:column="26"/></operator> <name pos:line="109" pos:column="27">data_copy_p<pos:position pos:line="109" pos:column="38"/></name></expr>;<pos:position pos:line="109" pos:column="39"/></expr_stmt></block></then></if>
        <comment type="block" pos:line="110" pos:column="9">/* returning from the section where we were overwriting table data */</comment>
        <return pos:line="111" pos:column="9">return <expr><name pos:line="111" pos:column="16">TABLE_ERROR_NONE<pos:position pos:line="111" pos:column="32"/></name></expr>;<pos:position pos:line="111" pos:column="33"/></return>
    }<pos:position pos:line="112" pos:column="6"/></block></then></if>

    <comment type="block" pos:line="114" pos:column="5">/*
     * It is a new entry.
     */</comment>

    <comment type="block" pos:line="118" pos:column="5">/* allocate a new entry */</comment>
    <expr_stmt><expr><name pos:line="119" pos:column="5">entry_p<pos:position pos:line="119" pos:column="12"/></name> <operator pos:line="119" pos:column="13">=<pos:position pos:line="119" pos:column="14"/></operator> <operator pos:line="119" pos:column="15">(<pos:position pos:line="119" pos:column="16"/></operator><name pos:line="119" pos:column="16">table_entry_t<pos:position pos:line="119" pos:column="29"/></name> <operator pos:line="119" pos:column="30">*<pos:position pos:line="119" pos:column="31"/></operator><operator pos:line="119" pos:column="31">)<pos:position pos:line="119" pos:column="32"/></operator>
               <call><name><name pos:line="120" pos:column="16">table_p<pos:position pos:line="120" pos:column="23"/></name><operator pos:line="120" pos:column="23">-&gt;<pos:position pos:line="120" pos:column="28"/></operator><name pos:line="120" pos:column="25">ta_malloc<pos:position pos:line="120" pos:column="34"/></name></name><argument_list pos:line="120" pos:column="34">(<argument><expr><name><name pos:line="120" pos:column="35">table_p<pos:position pos:line="120" pos:column="42"/></name><operator pos:line="120" pos:column="42">-&gt;<pos:position pos:line="120" pos:column="47"/></operator><name pos:line="120" pos:column="44">opt_param<pos:position pos:line="120" pos:column="53"/></name></name></expr></argument>,
                                  <argument><expr><call><name pos:line="121" pos:column="35">entry_size<pos:position pos:line="121" pos:column="45"/></name><argument_list pos:line="121" pos:column="45">(<argument><expr><name pos:line="121" pos:column="46">table_p<pos:position pos:line="121" pos:column="53"/></name></expr></argument>, <argument><expr><name pos:line="121" pos:column="55">ksize<pos:position pos:line="121" pos:column="60"/></name></expr></argument>, <argument><expr><name pos:line="121" pos:column="62">dsize<pos:position pos:line="121" pos:column="67"/></name></expr></argument>)<pos:position pos:line="121" pos:column="68"/></argument_list></call></expr></argument>)<pos:position pos:line="121" pos:column="69"/></argument_list></call></expr>;<pos:position pos:line="121" pos:column="70"/></expr_stmt>
    <if pos:line="122" pos:column="5">if <condition pos:line="122" pos:column="8">(<expr><name pos:line="122" pos:column="9">entry_p<pos:position pos:line="122" pos:column="16"/></name> <operator pos:line="122" pos:column="17">==<pos:position pos:line="122" pos:column="19"/></operator> <name pos:line="122" pos:column="20">NULL<pos:position pos:line="122" pos:column="24"/></name></expr>)<pos:position pos:line="122" pos:column="25"/></condition><then pos:line="122" pos:column="25">
        <block type="pseudo"><return pos:line="123" pos:column="9">return <expr><name pos:line="123" pos:column="16">TABLE_ERROR_ALLOC<pos:position pos:line="123" pos:column="33"/></name></expr>;<pos:position pos:line="123" pos:column="34"/></return></block></then></if>
    <comment type="block" pos:line="124" pos:column="5">/* copy key into storage */</comment>
    <expr_stmt><expr><name><name pos:line="125" pos:column="5">entry_p<pos:position pos:line="125" pos:column="12"/></name><operator pos:line="125" pos:column="12">-&gt;<pos:position pos:line="125" pos:column="17"/></operator><name pos:line="125" pos:column="14">te_key_size<pos:position pos:line="125" pos:column="25"/></name></name> <operator pos:line="125" pos:column="26">=<pos:position pos:line="125" pos:column="27"/></operator> <name pos:line="125" pos:column="28">ksize<pos:position pos:line="125" pos:column="33"/></name></expr>;<pos:position pos:line="125" pos:column="34"/></expr_stmt>
    <expr_stmt><expr><name pos:line="126" pos:column="5">key_copy_p<pos:position pos:line="126" pos:column="15"/></name> <operator pos:line="126" pos:column="16">=<pos:position pos:line="126" pos:column="17"/></operator> <call><name pos:line="126" pos:column="18">ENTRY_KEY_BUF<pos:position pos:line="126" pos:column="31"/></name><argument_list pos:line="126" pos:column="31">(<argument><expr><name pos:line="126" pos:column="32">entry_p<pos:position pos:line="126" pos:column="39"/></name></expr></argument>)<pos:position pos:line="126" pos:column="40"/></argument_list></call></expr>;<pos:position pos:line="126" pos:column="41"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="127" pos:column="5">memcpy<pos:position pos:line="127" pos:column="11"/></name><argument_list pos:line="127" pos:column="11">(<argument><expr><name pos:line="127" pos:column="12">key_copy_p<pos:position pos:line="127" pos:column="22"/></name></expr></argument>, <argument><expr><name pos:line="127" pos:column="24">key_buf<pos:position pos:line="127" pos:column="31"/></name></expr></argument>, <argument><expr><name pos:line="127" pos:column="33">ksize<pos:position pos:line="127" pos:column="38"/></name></expr></argument>)<pos:position pos:line="127" pos:column="39"/></argument_list></call></expr>;<pos:position pos:line="127" pos:column="40"/></expr_stmt>

    <comment type="block" pos:line="129" pos:column="5">/* copy data in */</comment>
    <expr_stmt><expr><name><name pos:line="130" pos:column="5">entry_p<pos:position pos:line="130" pos:column="12"/></name><operator pos:line="130" pos:column="12">-&gt;<pos:position pos:line="130" pos:column="17"/></operator><name pos:line="130" pos:column="14">te_data_size<pos:position pos:line="130" pos:column="26"/></name></name> <operator pos:line="130" pos:column="27">=<pos:position pos:line="130" pos:column="28"/></operator> <name pos:line="130" pos:column="29">dsize<pos:position pos:line="130" pos:column="34"/></name></expr>;<pos:position pos:line="130" pos:column="35"/></expr_stmt>
    <if pos:line="131" pos:column="5">if <condition pos:line="131" pos:column="8">(<expr><name pos:line="131" pos:column="9">dsize<pos:position pos:line="131" pos:column="14"/></name> <operator pos:line="131" pos:column="15">&gt;<pos:position pos:line="131" pos:column="19"/></operator> <literal type="number" pos:line="131" pos:column="17">0<pos:position pos:line="131" pos:column="18"/></literal></expr>)<pos:position pos:line="131" pos:column="19"/></condition><then pos:line="131" pos:column="19"> <block pos:line="131" pos:column="20">{
        <if pos:line="132" pos:column="9">if <condition pos:line="132" pos:column="12">(<expr><name><name pos:line="132" pos:column="13">table_p<pos:position pos:line="132" pos:column="20"/></name><operator pos:line="132" pos:column="20">-&gt;<pos:position pos:line="132" pos:column="25"/></operator><name pos:line="132" pos:column="22">ta_data_align<pos:position pos:line="132" pos:column="35"/></name></name> <operator pos:line="132" pos:column="36">==<pos:position pos:line="132" pos:column="38"/></operator> <literal type="number" pos:line="132" pos:column="39">0<pos:position pos:line="132" pos:column="40"/></literal></expr>)<pos:position pos:line="132" pos:column="41"/></condition><then pos:line="132" pos:column="41">
            <block type="pseudo"><expr_stmt><expr><name pos:line="133" pos:column="13">data_copy_p<pos:position pos:line="133" pos:column="24"/></name> <operator pos:line="133" pos:column="25">=<pos:position pos:line="133" pos:column="26"/></operator> <call><name pos:line="133" pos:column="27">ENTRY_DATA_BUF<pos:position pos:line="133" pos:column="41"/></name><argument_list pos:line="133" pos:column="41">(<argument><expr><name pos:line="133" pos:column="42">table_p<pos:position pos:line="133" pos:column="49"/></name></expr></argument>, <argument><expr><name pos:line="133" pos:column="51">entry_p<pos:position pos:line="133" pos:column="58"/></name></expr></argument>)<pos:position pos:line="133" pos:column="59"/></argument_list></call></expr>;<pos:position pos:line="133" pos:column="60"/></expr_stmt></block></then>
        <else pos:line="134" pos:column="9">else
            <block type="pseudo"><expr_stmt><expr><name pos:line="135" pos:column="13">data_copy_p<pos:position pos:line="135" pos:column="24"/></name> <operator pos:line="135" pos:column="25">=<pos:position pos:line="135" pos:column="26"/></operator> <call><name pos:line="135" pos:column="27">entry_data_buf<pos:position pos:line="135" pos:column="41"/></name><argument_list pos:line="135" pos:column="41">(<argument><expr><name pos:line="135" pos:column="42">table_p<pos:position pos:line="135" pos:column="49"/></name></expr></argument>, <argument><expr><name pos:line="135" pos:column="51">entry_p<pos:position pos:line="135" pos:column="58"/></name></expr></argument>)<pos:position pos:line="135" pos:column="59"/></argument_list></call></expr>;<pos:position pos:line="135" pos:column="60"/></expr_stmt></block></else></if>
        <if pos:line="136" pos:column="9">if <condition pos:line="136" pos:column="12">(<expr><name pos:line="136" pos:column="13">data_buf<pos:position pos:line="136" pos:column="21"/></name> <operator pos:line="136" pos:column="22">!=<pos:position pos:line="136" pos:column="24"/></operator> <name pos:line="136" pos:column="25">NULL<pos:position pos:line="136" pos:column="29"/></name></expr>)<pos:position pos:line="136" pos:column="30"/></condition><then pos:line="136" pos:column="30">
            <block type="pseudo"><expr_stmt><expr><call><name pos:line="137" pos:column="13">memcpy<pos:position pos:line="137" pos:column="19"/></name><argument_list pos:line="137" pos:column="19">(<argument><expr><name pos:line="137" pos:column="20">data_copy_p<pos:position pos:line="137" pos:column="31"/></name></expr></argument>, <argument><expr><name pos:line="137" pos:column="33">data_buf<pos:position pos:line="137" pos:column="41"/></name></expr></argument>, <argument><expr><name pos:line="137" pos:column="43">dsize<pos:position pos:line="137" pos:column="48"/></name></expr></argument>)<pos:position pos:line="137" pos:column="49"/></argument_list></call></expr>;<pos:position pos:line="137" pos:column="50"/></expr_stmt></block></then></if>
    }<pos:position pos:line="138" pos:column="6"/></block></then>
    <else pos:line="139" pos:column="5">else
        <block type="pseudo"><expr_stmt><expr><name pos:line="140" pos:column="9">data_copy_p<pos:position pos:line="140" pos:column="20"/></name> <operator pos:line="140" pos:column="21">=<pos:position pos:line="140" pos:column="22"/></operator> <name pos:line="140" pos:column="23">NULL<pos:position pos:line="140" pos:column="27"/></name></expr>;<pos:position pos:line="140" pos:column="28"/></expr_stmt></block></else></if>
    <if pos:line="141" pos:column="5">if <condition pos:line="141" pos:column="8">(<expr><name pos:line="141" pos:column="9">key_buf_p<pos:position pos:line="141" pos:column="18"/></name> <operator pos:line="141" pos:column="19">!=<pos:position pos:line="141" pos:column="21"/></operator> <name pos:line="141" pos:column="22">NULL<pos:position pos:line="141" pos:column="26"/></name></expr>)<pos:position pos:line="141" pos:column="27"/></condition><then pos:line="141" pos:column="27">
        <block type="pseudo"><expr_stmt><expr><operator pos:line="142" pos:column="9">*<pos:position pos:line="142" pos:column="10"/></operator><name pos:line="142" pos:column="10">key_buf_p<pos:position pos:line="142" pos:column="19"/></name> <operator pos:line="142" pos:column="20">=<pos:position pos:line="142" pos:column="21"/></operator> <name pos:line="142" pos:column="22">key_copy_p<pos:position pos:line="142" pos:column="32"/></name></expr>;<pos:position pos:line="142" pos:column="33"/></expr_stmt></block></then></if>
    <if pos:line="143" pos:column="5">if <condition pos:line="143" pos:column="8">(<expr><name pos:line="143" pos:column="9">data_buf_p<pos:position pos:line="143" pos:column="19"/></name> <operator pos:line="143" pos:column="20">!=<pos:position pos:line="143" pos:column="22"/></operator> <name pos:line="143" pos:column="23">NULL<pos:position pos:line="143" pos:column="27"/></name></expr>)<pos:position pos:line="143" pos:column="28"/></condition><then pos:line="143" pos:column="28">
        <block type="pseudo"><expr_stmt><expr><operator pos:line="144" pos:column="9">*<pos:position pos:line="144" pos:column="10"/></operator><name pos:line="144" pos:column="10">data_buf_p<pos:position pos:line="144" pos:column="20"/></name> <operator pos:line="144" pos:column="21">=<pos:position pos:line="144" pos:column="22"/></operator> <name pos:line="144" pos:column="23">data_copy_p<pos:position pos:line="144" pos:column="34"/></name></expr>;<pos:position pos:line="144" pos:column="35"/></expr_stmt></block></then></if>
    <comment type="block" pos:line="145" pos:column="5">/* insert into list, no need to append */</comment>
    <expr_stmt><expr><name><name pos:line="146" pos:column="5">entry_p<pos:position pos:line="146" pos:column="12"/></name><operator pos:line="146" pos:column="12">-&gt;<pos:position pos:line="146" pos:column="17"/></operator><name pos:line="146" pos:column="14">te_next_p<pos:position pos:line="146" pos:column="23"/></name></name> <operator pos:line="146" pos:column="24">=<pos:position pos:line="146" pos:column="25"/></operator> <name><name pos:line="146" pos:column="26">table_p<pos:position pos:line="146" pos:column="33"/></name><operator pos:line="146" pos:column="33">-&gt;<pos:position pos:line="146" pos:column="38"/></operator><name pos:line="146" pos:column="35">ta_buckets<pos:position pos:line="146" pos:column="45"/></name><index pos:line="146" pos:column="45">[<expr><name pos:line="146" pos:column="46">bucket<pos:position pos:line="146" pos:column="52"/></name></expr>]<pos:position pos:line="146" pos:column="53"/></index></name></expr>;<pos:position pos:line="146" pos:column="54"/></expr_stmt>
    <expr_stmt><expr><name><name pos:line="147" pos:column="5">table_p<pos:position pos:line="147" pos:column="12"/></name><operator pos:line="147" pos:column="12">-&gt;<pos:position pos:line="147" pos:column="17"/></operator><name pos:line="147" pos:column="14">ta_buckets<pos:position pos:line="147" pos:column="24"/></name><index pos:line="147" pos:column="24">[<expr><name pos:line="147" pos:column="25">bucket<pos:position pos:line="147" pos:column="31"/></name></expr>]<pos:position pos:line="147" pos:column="32"/></index></name> <operator pos:line="147" pos:column="33">=<pos:position pos:line="147" pos:column="34"/></operator> <name pos:line="147" pos:column="35">entry_p<pos:position pos:line="147" pos:column="42"/></name></expr>;<pos:position pos:line="147" pos:column="43"/></expr_stmt>

    <expr_stmt><expr><name><name pos:line="149" pos:column="5">table_p<pos:position pos:line="149" pos:column="12"/></name><operator pos:line="149" pos:column="12">-&gt;<pos:position pos:line="149" pos:column="17"/></operator><name pos:line="149" pos:column="14">ta_entry_n<pos:position pos:line="149" pos:column="24"/></name></name><operator pos:line="149" pos:column="24">++<pos:position pos:line="149" pos:column="26"/></operator></expr>;<pos:position pos:line="149" pos:column="27"/></expr_stmt>

    <comment type="block" pos:line="151" pos:column="5">/* do we need auto-adjust? */</comment>
    <if pos:line="152" pos:column="5">if <condition pos:line="152" pos:column="8">(<expr><name><name pos:line="152" pos:column="9">table_p<pos:position pos:line="152" pos:column="16"/></name><operator pos:line="152" pos:column="16">-&gt;<pos:position pos:line="152" pos:column="21"/></operator><name pos:line="152" pos:column="18">ta_flags<pos:position pos:line="152" pos:column="26"/></name></name> <operator pos:line="152" pos:column="27">&amp;<pos:position pos:line="152" pos:column="32"/></operator> <name pos:line="152" pos:column="29">TABLE_FLAG_AUTO_ADJUST<pos:position pos:line="152" pos:column="51"/></name>
        <operator pos:line="153" pos:column="9">&amp;&amp;<pos:position pos:line="153" pos:column="19"/></operator> <call><name pos:line="153" pos:column="12">SHOULD_TABLE_GROW<pos:position pos:line="153" pos:column="29"/></name><argument_list pos:line="153" pos:column="29">(<argument><expr><name pos:line="153" pos:column="30">table_p<pos:position pos:line="153" pos:column="37"/></name></expr></argument>)<pos:position pos:line="153" pos:column="38"/></argument_list></call></expr>)<pos:position pos:line="153" pos:column="39"/></condition><then pos:line="153" pos:column="39">
        <block type="pseudo"><return pos:line="154" pos:column="9">return <expr><call><name pos:line="154" pos:column="16">table_adjust<pos:position pos:line="154" pos:column="28"/></name><argument_list pos:line="154" pos:column="28">(<argument><expr><name pos:line="154" pos:column="29">table_p<pos:position pos:line="154" pos:column="36"/></name></expr></argument>, <argument><expr><name><name pos:line="154" pos:column="38">table_p<pos:position pos:line="154" pos:column="45"/></name><operator pos:line="154" pos:column="45">-&gt;<pos:position pos:line="154" pos:column="50"/></operator><name pos:line="154" pos:column="47">ta_entry_n<pos:position pos:line="154" pos:column="57"/></name></name></expr></argument>)<pos:position pos:line="154" pos:column="58"/></argument_list></call></expr>;<pos:position pos:line="154" pos:column="59"/></return></block></then></if>
    <return pos:line="155" pos:column="5">return <expr><name pos:line="155" pos:column="12">TABLE_ERROR_NONE<pos:position pos:line="155" pos:column="28"/></name></expr>;<pos:position pos:line="155" pos:column="29"/></return>
}<pos:position pos:line="156" pos:column="2"/></block></function></unit>

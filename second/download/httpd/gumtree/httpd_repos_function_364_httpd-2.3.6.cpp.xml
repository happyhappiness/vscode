<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/httpd/gumtree/httpd_repos_function_364_httpd-2.3.6.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">int<pos:position pos:line="1" pos:column="11"/></name></type> <name pos:line="1" pos:column="12">dav_method_unlock<pos:position pos:line="1" pos:column="29"/></name><parameter_list pos:line="1" pos:column="29">(<parameter><decl><type><name pos:line="1" pos:column="30">request_rec<pos:position pos:line="1" pos:column="41"/></name> <modifier pos:line="1" pos:column="42">*<pos:position pos:line="1" pos:column="43"/></modifier></type><name pos:line="1" pos:column="43">r<pos:position pos:line="1" pos:column="44"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="45"/></parameter_list>
<block pos:line="2" pos:column="1">{
    <decl_stmt><decl><type><name pos:line="3" pos:column="5">dav_error<pos:position pos:line="3" pos:column="14"/></name> <modifier pos:line="3" pos:column="15">*<pos:position pos:line="3" pos:column="16"/></modifier></type><name pos:line="3" pos:column="16">err<pos:position pos:line="3" pos:column="19"/></name></decl>;<pos:position pos:line="3" pos:column="20"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="4" pos:column="5">dav_resource<pos:position pos:line="4" pos:column="17"/></name> <modifier pos:line="4" pos:column="18">*<pos:position pos:line="4" pos:column="19"/></modifier></type><name pos:line="4" pos:column="19">resource<pos:position pos:line="4" pos:column="27"/></name></decl>;<pos:position pos:line="4" pos:column="28"/></decl_stmt>
    <decl_stmt><decl><type><specifier pos:line="5" pos:column="5">const<pos:position pos:line="5" pos:column="10"/></specifier> <name pos:line="5" pos:column="11">dav_hooks_locks<pos:position pos:line="5" pos:column="26"/></name> <modifier pos:line="5" pos:column="27">*<pos:position pos:line="5" pos:column="28"/></modifier></type><name pos:line="5" pos:column="28">locks_hooks<pos:position pos:line="5" pos:column="39"/></name></decl>;<pos:position pos:line="5" pos:column="40"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="6" pos:column="5">int<pos:position pos:line="6" pos:column="8"/></name></type> <name pos:line="6" pos:column="9">result<pos:position pos:line="6" pos:column="15"/></name></decl>;<pos:position pos:line="6" pos:column="16"/></decl_stmt>
    <decl_stmt><decl><type><specifier pos:line="7" pos:column="5">const<pos:position pos:line="7" pos:column="10"/></specifier> <name pos:line="7" pos:column="11">char<pos:position pos:line="7" pos:column="15"/></name> <modifier pos:line="7" pos:column="16">*<pos:position pos:line="7" pos:column="17"/></modifier></type><name pos:line="7" pos:column="17">const_locktoken_txt<pos:position pos:line="7" pos:column="36"/></name></decl>;<pos:position pos:line="7" pos:column="37"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="8" pos:column="5">char<pos:position pos:line="8" pos:column="9"/></name> <modifier pos:line="8" pos:column="10">*<pos:position pos:line="8" pos:column="11"/></modifier></type><name pos:line="8" pos:column="11">locktoken_txt<pos:position pos:line="8" pos:column="24"/></name></decl>;<pos:position pos:line="8" pos:column="25"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="9" pos:column="5">dav_locktoken<pos:position pos:line="9" pos:column="18"/></name> <modifier pos:line="9" pos:column="19">*<pos:position pos:line="9" pos:column="20"/></modifier></type><name pos:line="9" pos:column="20">locktoken<pos:position pos:line="9" pos:column="29"/></name> <init pos:line="9" pos:column="30">= <expr><name pos:line="9" pos:column="32">NULL<pos:position pos:line="9" pos:column="36"/></name></expr></init></decl>;<pos:position pos:line="9" pos:column="37"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="10" pos:column="5">int<pos:position pos:line="10" pos:column="8"/></name></type> <name pos:line="10" pos:column="9">resource_state<pos:position pos:line="10" pos:column="23"/></name></decl>;<pos:position pos:line="10" pos:column="24"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="11" pos:column="5">dav_response<pos:position pos:line="11" pos:column="17"/></name> <modifier pos:line="11" pos:column="18">*<pos:position pos:line="11" pos:column="19"/></modifier></type><name pos:line="11" pos:column="19">multi_response<pos:position pos:line="11" pos:column="33"/></name></decl>;<pos:position pos:line="11" pos:column="34"/></decl_stmt>

    <comment type="block" pos:line="13" pos:column="5">/* If no locks provider, decline the request */</comment>
    <expr_stmt><expr><name pos:line="14" pos:column="5">locks_hooks<pos:position pos:line="14" pos:column="16"/></name> <operator pos:line="14" pos:column="17">=<pos:position pos:line="14" pos:column="18"/></operator> <call><name pos:line="14" pos:column="19">DAV_GET_HOOKS_LOCKS<pos:position pos:line="14" pos:column="38"/></name><argument_list pos:line="14" pos:column="38">(<argument><expr><name pos:line="14" pos:column="39">r<pos:position pos:line="14" pos:column="40"/></name></expr></argument>)<pos:position pos:line="14" pos:column="41"/></argument_list></call></expr>;<pos:position pos:line="14" pos:column="42"/></expr_stmt>
    <if pos:line="15" pos:column="5">if <condition pos:line="15" pos:column="8">(<expr><name pos:line="15" pos:column="9">locks_hooks<pos:position pos:line="15" pos:column="20"/></name> <operator pos:line="15" pos:column="21">==<pos:position pos:line="15" pos:column="23"/></operator> <name pos:line="15" pos:column="24">NULL<pos:position pos:line="15" pos:column="28"/></name></expr>)<pos:position pos:line="15" pos:column="29"/></condition><then pos:line="15" pos:column="29">
        <block type="pseudo"><return pos:line="16" pos:column="9">return <expr><name pos:line="16" pos:column="16">DECLINED<pos:position pos:line="16" pos:column="24"/></name></expr>;<pos:position pos:line="16" pos:column="25"/></return></block></then></if>

    <if pos:line="18" pos:column="5">if <condition pos:line="18" pos:column="8">(<expr><operator pos:line="18" pos:column="9">(<pos:position pos:line="18" pos:column="10"/></operator><name pos:line="18" pos:column="10">const_locktoken_txt<pos:position pos:line="18" pos:column="29"/></name> <operator pos:line="18" pos:column="30">=<pos:position pos:line="18" pos:column="31"/></operator> <call><name pos:line="18" pos:column="32">apr_table_get<pos:position pos:line="18" pos:column="45"/></name><argument_list pos:line="18" pos:column="45">(<argument><expr><name><name pos:line="18" pos:column="46">r<pos:position pos:line="18" pos:column="47"/></name><operator pos:line="18" pos:column="47">-&gt;<pos:position pos:line="18" pos:column="52"/></operator><name pos:line="18" pos:column="49">headers_in<pos:position pos:line="18" pos:column="59"/></name></name></expr></argument>,
                                             <argument><expr><literal type="string" pos:line="19" pos:column="46">"Lock-Token"<pos:position pos:line="19" pos:column="58"/></literal></expr></argument>)<pos:position pos:line="19" pos:column="59"/></argument_list></call><operator pos:line="19" pos:column="59">)<pos:position pos:line="19" pos:column="60"/></operator> <operator pos:line="19" pos:column="61">==<pos:position pos:line="19" pos:column="63"/></operator> <name pos:line="19" pos:column="64">NULL<pos:position pos:line="19" pos:column="68"/></name></expr>)<pos:position pos:line="19" pos:column="69"/></condition><then pos:line="19" pos:column="69"> <block pos:line="19" pos:column="70">{
        <expr_stmt><expr><call><name pos:line="20" pos:column="9">ap_log_rerror<pos:position pos:line="20" pos:column="22"/></name><argument_list pos:line="20" pos:column="22">(<argument><expr><name pos:line="20" pos:column="23">APLOG_MARK<pos:position pos:line="20" pos:column="33"/></name></expr></argument>, <argument><expr><name pos:line="20" pos:column="35">APLOG_ERR<pos:position pos:line="20" pos:column="44"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="20" pos:column="46">0<pos:position pos:line="20" pos:column="47"/></literal></expr></argument>, <argument><expr><name pos:line="20" pos:column="49">r<pos:position pos:line="20" pos:column="50"/></name></expr></argument>,
                      <argument><expr><literal type="string" pos:line="21" pos:column="23">"Unlock failed (%s):  "<pos:position pos:line="21" pos:column="46"/></literal>
                      <literal type="string" pos:line="22" pos:column="23">"No Lock-Token specified in header"<pos:position pos:line="22" pos:column="58"/></literal></expr></argument>, <argument><expr><name><name pos:line="22" pos:column="60">r<pos:position pos:line="22" pos:column="61"/></name><operator pos:line="22" pos:column="61">-&gt;<pos:position pos:line="22" pos:column="66"/></operator><name pos:line="22" pos:column="63">filename<pos:position pos:line="22" pos:column="71"/></name></name></expr></argument>)<pos:position pos:line="22" pos:column="72"/></argument_list></call></expr>;<pos:position pos:line="22" pos:column="73"/></expr_stmt>
        <return pos:line="23" pos:column="9">return <expr><name pos:line="23" pos:column="16">HTTP_BAD_REQUEST<pos:position pos:line="23" pos:column="32"/></name></expr>;<pos:position pos:line="23" pos:column="33"/></return>
    }<pos:position pos:line="24" pos:column="6"/></block></then></if>

    <expr_stmt><expr><name pos:line="26" pos:column="5">locktoken_txt<pos:position pos:line="26" pos:column="18"/></name> <operator pos:line="26" pos:column="19">=<pos:position pos:line="26" pos:column="20"/></operator> <call><name pos:line="26" pos:column="21">apr_pstrdup<pos:position pos:line="26" pos:column="32"/></name><argument_list pos:line="26" pos:column="32">(<argument><expr><name><name pos:line="26" pos:column="33">r<pos:position pos:line="26" pos:column="34"/></name><operator pos:line="26" pos:column="34">-&gt;<pos:position pos:line="26" pos:column="39"/></operator><name pos:line="26" pos:column="36">pool<pos:position pos:line="26" pos:column="40"/></name></name></expr></argument>, <argument><expr><name pos:line="26" pos:column="42">const_locktoken_txt<pos:position pos:line="26" pos:column="61"/></name></expr></argument>)<pos:position pos:line="26" pos:column="62"/></argument_list></call></expr>;<pos:position pos:line="26" pos:column="63"/></expr_stmt>
    <if pos:line="27" pos:column="5">if <condition pos:line="27" pos:column="8">(<expr><name><name pos:line="27" pos:column="9">locktoken_txt<pos:position pos:line="27" pos:column="22"/></name><index pos:line="27" pos:column="22">[<expr><literal type="number" pos:line="27" pos:column="23">0<pos:position pos:line="27" pos:column="24"/></literal></expr>]<pos:position pos:line="27" pos:column="25"/></index></name> <operator pos:line="27" pos:column="26">!=<pos:position pos:line="27" pos:column="28"/></operator> <literal type="char" pos:line="27" pos:column="29">'&lt;'<pos:position pos:line="27" pos:column="35"/></literal></expr>)<pos:position pos:line="27" pos:column="33"/></condition><then pos:line="27" pos:column="33"> <block pos:line="27" pos:column="34">{
        <comment type="block" pos:line="28" pos:column="9">/* ### should provide more specifics... */</comment>
        <return pos:line="29" pos:column="9">return <expr><name pos:line="29" pos:column="16">HTTP_BAD_REQUEST<pos:position pos:line="29" pos:column="32"/></name></expr>;<pos:position pos:line="29" pos:column="33"/></return>
    }<pos:position pos:line="30" pos:column="6"/></block></then></if>
    <expr_stmt><expr><name pos:line="31" pos:column="5">locktoken_txt<pos:position pos:line="31" pos:column="18"/></name><operator pos:line="31" pos:column="18">++<pos:position pos:line="31" pos:column="20"/></operator></expr>;<pos:position pos:line="31" pos:column="21"/></expr_stmt>

    <if pos:line="33" pos:column="5">if <condition pos:line="33" pos:column="8">(<expr><name><name pos:line="33" pos:column="9">locktoken_txt<pos:position pos:line="33" pos:column="22"/></name><index pos:line="33" pos:column="22">[<expr><call><name pos:line="33" pos:column="23">strlen<pos:position pos:line="33" pos:column="29"/></name><argument_list pos:line="33" pos:column="29">(<argument><expr><name pos:line="33" pos:column="30">locktoken_txt<pos:position pos:line="33" pos:column="43"/></name></expr></argument>)<pos:position pos:line="33" pos:column="44"/></argument_list></call> <operator pos:line="33" pos:column="45">-<pos:position pos:line="33" pos:column="46"/></operator> <literal type="number" pos:line="33" pos:column="47">1<pos:position pos:line="33" pos:column="48"/></literal></expr>]<pos:position pos:line="33" pos:column="49"/></index></name> <operator pos:line="33" pos:column="50">!=<pos:position pos:line="33" pos:column="52"/></operator> <literal type="char" pos:line="33" pos:column="53">'&gt;'<pos:position pos:line="33" pos:column="59"/></literal></expr>)<pos:position pos:line="33" pos:column="57"/></condition><then pos:line="33" pos:column="57"> <block pos:line="33" pos:column="58">{
        <comment type="block" pos:line="34" pos:column="9">/* ### should provide more specifics... */</comment>
        <return pos:line="35" pos:column="9">return <expr><name pos:line="35" pos:column="16">HTTP_BAD_REQUEST<pos:position pos:line="35" pos:column="32"/></name></expr>;<pos:position pos:line="35" pos:column="33"/></return>
    }<pos:position pos:line="36" pos:column="6"/></block></then></if>
    <expr_stmt><expr><name><name pos:line="37" pos:column="5">locktoken_txt<pos:position pos:line="37" pos:column="18"/></name><index pos:line="37" pos:column="18">[<expr><call><name pos:line="37" pos:column="19">strlen<pos:position pos:line="37" pos:column="25"/></name><argument_list pos:line="37" pos:column="25">(<argument><expr><name pos:line="37" pos:column="26">locktoken_txt<pos:position pos:line="37" pos:column="39"/></name></expr></argument>)<pos:position pos:line="37" pos:column="40"/></argument_list></call> <operator pos:line="37" pos:column="41">-<pos:position pos:line="37" pos:column="42"/></operator> <literal type="number" pos:line="37" pos:column="43">1<pos:position pos:line="37" pos:column="44"/></literal></expr>]<pos:position pos:line="37" pos:column="45"/></index></name> <operator pos:line="37" pos:column="46">=<pos:position pos:line="37" pos:column="47"/></operator> <literal type="char" pos:line="37" pos:column="48">'\0'<pos:position pos:line="37" pos:column="52"/></literal></expr>;<pos:position pos:line="37" pos:column="53"/></expr_stmt>

    <if pos:line="39" pos:column="5">if <condition pos:line="39" pos:column="8">(<expr><operator pos:line="39" pos:column="9">(<pos:position pos:line="39" pos:column="10"/></operator><name pos:line="39" pos:column="10">err<pos:position pos:line="39" pos:column="13"/></name> <operator pos:line="39" pos:column="14">=<pos:position pos:line="39" pos:column="15"/></operator> <call pos:line="39" pos:column="16">(<modifier pos:line="39" pos:column="17">*<pos:position pos:line="39" pos:column="18"/></modifier><name><name pos:line="39" pos:column="18">locks_hooks<pos:position pos:line="39" pos:column="29"/></name><operator pos:line="39" pos:column="29">-&gt;<pos:position pos:line="39" pos:column="34"/></operator><name pos:line="39" pos:column="31">parse_locktoken<pos:position pos:line="39" pos:column="46"/></name></name>)<argument_list pos:line="39" pos:column="47">(<argument><expr><name><name pos:line="39" pos:column="48">r<pos:position pos:line="39" pos:column="49"/></name><operator pos:line="39" pos:column="49">-&gt;<pos:position pos:line="39" pos:column="54"/></operator><name pos:line="39" pos:column="51">pool<pos:position pos:line="39" pos:column="55"/></name></name></expr></argument>, <argument><expr><name pos:line="39" pos:column="57">locktoken_txt<pos:position pos:line="39" pos:column="70"/></name></expr></argument>,
                                               <argument><expr><operator pos:line="40" pos:column="48">&amp;<pos:position pos:line="40" pos:column="53"/></operator><name pos:line="40" pos:column="49">locktoken<pos:position pos:line="40" pos:column="58"/></name></expr></argument>)<pos:position pos:line="40" pos:column="59"/></argument_list></call><operator pos:line="40" pos:column="59">)<pos:position pos:line="40" pos:column="60"/></operator> <operator pos:line="40" pos:column="61">!=<pos:position pos:line="40" pos:column="63"/></operator> <name pos:line="40" pos:column="64">NULL<pos:position pos:line="40" pos:column="68"/></name></expr>)<pos:position pos:line="40" pos:column="69"/></condition><then pos:line="40" pos:column="69"> <block pos:line="40" pos:column="70">{
        <expr_stmt><expr><name pos:line="41" pos:column="9">err<pos:position pos:line="41" pos:column="12"/></name> <operator pos:line="41" pos:column="13">=<pos:position pos:line="41" pos:column="14"/></operator> <call><name pos:line="41" pos:column="15">dav_push_error<pos:position pos:line="41" pos:column="29"/></name><argument_list pos:line="41" pos:column="29">(<argument><expr><name><name pos:line="41" pos:column="30">r<pos:position pos:line="41" pos:column="31"/></name><operator pos:line="41" pos:column="31">-&gt;<pos:position pos:line="41" pos:column="36"/></operator><name pos:line="41" pos:column="33">pool<pos:position pos:line="41" pos:column="37"/></name></name></expr></argument>, <argument><expr><name pos:line="41" pos:column="39">HTTP_BAD_REQUEST<pos:position pos:line="41" pos:column="55"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="41" pos:column="57">0<pos:position pos:line="41" pos:column="58"/></literal></expr></argument>,
                             <argument><expr><call><name pos:line="42" pos:column="30">apr_psprintf<pos:position pos:line="42" pos:column="42"/></name><argument_list pos:line="42" pos:column="42">(<argument><expr><name><name pos:line="42" pos:column="43">r<pos:position pos:line="42" pos:column="44"/></name><operator pos:line="42" pos:column="44">-&gt;<pos:position pos:line="42" pos:column="49"/></operator><name pos:line="42" pos:column="46">pool<pos:position pos:line="42" pos:column="50"/></name></name></expr></argument>,
                                          <argument><expr><literal type="string" pos:line="43" pos:column="43">"The UNLOCK on %s failed -- an "<pos:position pos:line="43" pos:column="75"/></literal>
                                          <literal type="string" pos:line="44" pos:column="43">"invalid lock token was specified "<pos:position pos:line="44" pos:column="78"/></literal>
                                          <literal type="string" pos:line="45" pos:column="43">"in the \"If:\" header."<pos:position pos:line="45" pos:column="67"/></literal></expr></argument>,
                                          <argument><expr><call><name pos:line="46" pos:column="43">ap_escape_html<pos:position pos:line="46" pos:column="57"/></name><argument_list pos:line="46" pos:column="57">(<argument><expr><name><name pos:line="46" pos:column="58">r<pos:position pos:line="46" pos:column="59"/></name><operator pos:line="46" pos:column="59">-&gt;<pos:position pos:line="46" pos:column="64"/></operator><name pos:line="46" pos:column="61">pool<pos:position pos:line="46" pos:column="65"/></name></name></expr></argument>, <argument><expr><name><name pos:line="46" pos:column="67">r<pos:position pos:line="46" pos:column="68"/></name><operator pos:line="46" pos:column="68">-&gt;<pos:position pos:line="46" pos:column="73"/></operator><name pos:line="46" pos:column="70">uri<pos:position pos:line="46" pos:column="73"/></name></name></expr></argument>)<pos:position pos:line="46" pos:column="74"/></argument_list></call></expr></argument>)<pos:position pos:line="46" pos:column="75"/></argument_list></call></expr></argument>,
                             <argument><expr><name pos:line="47" pos:column="30">err<pos:position pos:line="47" pos:column="33"/></name></expr></argument>)<pos:position pos:line="47" pos:column="34"/></argument_list></call></expr>;<pos:position pos:line="47" pos:column="35"/></expr_stmt>
        <return pos:line="48" pos:column="9">return <expr><call><name pos:line="48" pos:column="16">dav_handle_err<pos:position pos:line="48" pos:column="30"/></name><argument_list pos:line="48" pos:column="30">(<argument><expr><name pos:line="48" pos:column="31">r<pos:position pos:line="48" pos:column="32"/></name></expr></argument>, <argument><expr><name pos:line="48" pos:column="34">err<pos:position pos:line="48" pos:column="37"/></name></expr></argument>, <argument><expr><name pos:line="48" pos:column="39">NULL<pos:position pos:line="48" pos:column="43"/></name></expr></argument>)<pos:position pos:line="48" pos:column="44"/></argument_list></call></expr>;<pos:position pos:line="48" pos:column="45"/></return>
    }<pos:position pos:line="49" pos:column="6"/></block></then></if>

    <comment type="block" pos:line="51" pos:column="5">/* Ask repository module to resolve the resource */</comment>
    <expr_stmt><expr><name pos:line="52" pos:column="5">err<pos:position pos:line="52" pos:column="8"/></name> <operator pos:line="52" pos:column="9">=<pos:position pos:line="52" pos:column="10"/></operator> <call><name pos:line="52" pos:column="11">dav_get_resource<pos:position pos:line="52" pos:column="27"/></name><argument_list pos:line="52" pos:column="27">(<argument><expr><name pos:line="52" pos:column="28">r<pos:position pos:line="52" pos:column="29"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="52" pos:column="31">0<pos:position pos:line="52" pos:column="32"/></literal></expr></argument> <comment type="block" pos:line="52" pos:column="33">/* label_allowed */</comment>, <argument><expr><literal type="number" pos:line="52" pos:column="54">0<pos:position pos:line="52" pos:column="55"/></literal></expr></argument> <comment type="block" pos:line="52" pos:column="56">/* use_checked_in */</comment>,
                           <argument><expr><operator pos:line="53" pos:column="28">&amp;<pos:position pos:line="53" pos:column="33"/></operator><name pos:line="53" pos:column="29">resource<pos:position pos:line="53" pos:column="37"/></name></expr></argument>)<pos:position pos:line="53" pos:column="38"/></argument_list></call></expr>;<pos:position pos:line="53" pos:column="39"/></expr_stmt>
    <if pos:line="54" pos:column="5">if <condition pos:line="54" pos:column="8">(<expr><name pos:line="54" pos:column="9">err<pos:position pos:line="54" pos:column="12"/></name> <operator pos:line="54" pos:column="13">!=<pos:position pos:line="54" pos:column="15"/></operator> <name pos:line="54" pos:column="16">NULL<pos:position pos:line="54" pos:column="20"/></name></expr>)<pos:position pos:line="54" pos:column="21"/></condition><then pos:line="54" pos:column="21">
        <block type="pseudo"><return pos:line="55" pos:column="9">return <expr><call><name pos:line="55" pos:column="16">dav_handle_err<pos:position pos:line="55" pos:column="30"/></name><argument_list pos:line="55" pos:column="30">(<argument><expr><name pos:line="55" pos:column="31">r<pos:position pos:line="55" pos:column="32"/></name></expr></argument>, <argument><expr><name pos:line="55" pos:column="34">err<pos:position pos:line="55" pos:column="37"/></name></expr></argument>, <argument><expr><name pos:line="55" pos:column="39">NULL<pos:position pos:line="55" pos:column="43"/></name></expr></argument>)<pos:position pos:line="55" pos:column="44"/></argument_list></call></expr>;<pos:position pos:line="55" pos:column="45"/></return></block></then></if>

    <expr_stmt><expr><name pos:line="57" pos:column="5">resource_state<pos:position pos:line="57" pos:column="19"/></name> <operator pos:line="57" pos:column="20">=<pos:position pos:line="57" pos:column="21"/></operator> <call><name pos:line="57" pos:column="22">dav_get_resource_state<pos:position pos:line="57" pos:column="44"/></name><argument_list pos:line="57" pos:column="44">(<argument><expr><name pos:line="57" pos:column="45">r<pos:position pos:line="57" pos:column="46"/></name></expr></argument>, <argument><expr><name pos:line="57" pos:column="48">resource<pos:position pos:line="57" pos:column="56"/></name></expr></argument>)<pos:position pos:line="57" pos:column="57"/></argument_list></call></expr>;<pos:position pos:line="57" pos:column="58"/></expr_stmt>

    <comment type="block" pos:line="59" pos:column="5">/*
     * Check If-Headers and existing locks.
     *
     * Note: depth == 0 normally requires no multistatus response. However,
     * if we pass DAV_VALIDATE_PARENT, then we could get an error on a URI
     * other than the Request-URI, thereby requiring a multistatus.
     *
     * If the resource is a locknull resource, then the UNLOCK will affect
     * the parent collection (much like a delete). For that case, we must
     * validate the parent resource's conditions.
     */</comment>
    <if pos:line="70" pos:column="5">if <condition pos:line="70" pos:column="8">(<expr><operator pos:line="70" pos:column="9">(<pos:position pos:line="70" pos:column="10"/></operator><name pos:line="70" pos:column="10">err<pos:position pos:line="70" pos:column="13"/></name> <operator pos:line="70" pos:column="14">=<pos:position pos:line="70" pos:column="15"/></operator> <call><name pos:line="70" pos:column="16">dav_validate_request<pos:position pos:line="70" pos:column="36"/></name><argument_list pos:line="70" pos:column="36">(<argument><expr><name pos:line="70" pos:column="37">r<pos:position pos:line="70" pos:column="38"/></name></expr></argument>, <argument><expr><name pos:line="70" pos:column="40">resource<pos:position pos:line="70" pos:column="48"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="70" pos:column="50">0<pos:position pos:line="70" pos:column="51"/></literal></expr></argument>, <argument><expr><name pos:line="70" pos:column="53">locktoken<pos:position pos:line="70" pos:column="62"/></name></expr></argument>,
                                    <argument><expr><operator pos:line="71" pos:column="37">&amp;<pos:position pos:line="71" pos:column="42"/></operator><name pos:line="71" pos:column="38">multi_response<pos:position pos:line="71" pos:column="52"/></name></expr></argument>,
                                    <argument><expr><ternary><condition><expr><name pos:line="72" pos:column="37">resource_state<pos:position pos:line="72" pos:column="51"/></name> <operator pos:line="72" pos:column="52">==<pos:position pos:line="72" pos:column="54"/></operator> <name pos:line="72" pos:column="55">DAV_RESOURCE_LOCK_NULL<pos:position pos:line="72" pos:column="77"/></name></expr>
                                    ?<pos:position pos:line="73" pos:column="38"/></condition><then pos:line="73" pos:column="38"> <expr><name pos:line="73" pos:column="39">DAV_VALIDATE_PARENT<pos:position pos:line="73" pos:column="58"/></name></expr>
                                    <pos:position pos:line="74" pos:column="37"/></then><else pos:line="74" pos:column="37">: <expr><name pos:line="74" pos:column="39">DAV_VALIDATE_RESOURCE<pos:position pos:line="74" pos:column="60"/></name></expr></else></ternary></expr></argument>, <argument><expr><name pos:line="74" pos:column="62">NULL<pos:position pos:line="74" pos:column="66"/></name></expr></argument>)<pos:position pos:line="74" pos:column="67"/></argument_list></call><operator pos:line="74" pos:column="67">)<pos:position pos:line="74" pos:column="68"/></operator> <operator pos:line="74" pos:column="69">!=<pos:position pos:line="74" pos:column="71"/></operator> <name pos:line="74" pos:column="72">NULL<pos:position pos:line="74" pos:column="76"/></name></expr>)<pos:position pos:line="74" pos:column="77"/></condition><then pos:line="74" pos:column="77"> <block pos:line="74" pos:column="78">{
        <comment type="block" pos:line="75" pos:column="9">/* ### add a higher-level description? */</comment>
        <return pos:line="76" pos:column="9">return <expr><call><name pos:line="76" pos:column="16">dav_handle_err<pos:position pos:line="76" pos:column="30"/></name><argument_list pos:line="76" pos:column="30">(<argument><expr><name pos:line="76" pos:column="31">r<pos:position pos:line="76" pos:column="32"/></name></expr></argument>, <argument><expr><name pos:line="76" pos:column="34">err<pos:position pos:line="76" pos:column="37"/></name></expr></argument>, <argument><expr><name pos:line="76" pos:column="39">multi_response<pos:position pos:line="76" pos:column="53"/></name></expr></argument>)<pos:position pos:line="76" pos:column="54"/></argument_list></call></expr>;<pos:position pos:line="76" pos:column="55"/></return>
    }<pos:position pos:line="77" pos:column="6"/></block></then></if>

    <comment type="block" pos:line="79" pos:column="5">/* ### RFC 2518 s. 8.11: If this resource is locked by locktoken,
     *     _all_ resources locked by locktoken are released.  It does not say
     *     resource has to be the root of an infinte lock.  Thus, an UNLOCK
     *     on any part of an infinte lock will remove the lock on all resources.
     *
     *     For us, if r-&gt;filename represents an indirect lock (part of an infinity lock),
     *     we must actually perform an UNLOCK on the direct lock for this resource.
     */</comment>
    <if pos:line="87" pos:column="5">if <condition pos:line="87" pos:column="8">(<expr><operator pos:line="87" pos:column="9">(<pos:position pos:line="87" pos:column="10"/></operator><name pos:line="87" pos:column="10">result<pos:position pos:line="87" pos:column="16"/></name> <operator pos:line="87" pos:column="17">=<pos:position pos:line="87" pos:column="18"/></operator> <call><name pos:line="87" pos:column="19">dav_unlock<pos:position pos:line="87" pos:column="29"/></name><argument_list pos:line="87" pos:column="29">(<argument><expr><name pos:line="87" pos:column="30">r<pos:position pos:line="87" pos:column="31"/></name></expr></argument>, <argument><expr><name pos:line="87" pos:column="33">resource<pos:position pos:line="87" pos:column="41"/></name></expr></argument>, <argument><expr><name pos:line="87" pos:column="43">locktoken<pos:position pos:line="87" pos:column="52"/></name></expr></argument>)<pos:position pos:line="87" pos:column="53"/></argument_list></call><operator pos:line="87" pos:column="53">)<pos:position pos:line="87" pos:column="54"/></operator> <operator pos:line="87" pos:column="55">!=<pos:position pos:line="87" pos:column="57"/></operator> <name pos:line="87" pos:column="58">OK<pos:position pos:line="87" pos:column="60"/></name></expr>)<pos:position pos:line="87" pos:column="61"/></condition><then pos:line="87" pos:column="61"> <block pos:line="87" pos:column="62">{
        <return pos:line="88" pos:column="9">return <expr><name pos:line="88" pos:column="16">result<pos:position pos:line="88" pos:column="22"/></name></expr>;<pos:position pos:line="88" pos:column="23"/></return>
    }<pos:position pos:line="89" pos:column="6"/></block></then></if>

    <return pos:line="91" pos:column="5">return <expr><name pos:line="91" pos:column="12">HTTP_NO_CONTENT<pos:position pos:line="91" pos:column="27"/></name></expr>;<pos:position pos:line="91" pos:column="28"/></return>
}<pos:position pos:line="92" pos:column="2"/></block></function></unit>

<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/httpd/gumtree/httpd_function_6153.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">apr_status_t<pos:position pos:line="1" pos:column="13"/></name></type> <name pos:line="1" pos:column="14">h2_util_move<pos:position pos:line="1" pos:column="26"/></name><parameter_list pos:line="1" pos:column="26">(<parameter><decl><type><name pos:line="1" pos:column="27">apr_bucket_brigade<pos:position pos:line="1" pos:column="45"/></name> <modifier pos:line="1" pos:column="46">*<pos:position pos:line="1" pos:column="47"/></modifier></type><name pos:line="1" pos:column="47">to<pos:position pos:line="1" pos:column="49"/></name></decl></parameter>, <parameter><decl><type><name pos:line="1" pos:column="51">apr_bucket_brigade<pos:position pos:line="1" pos:column="69"/></name> <modifier pos:line="1" pos:column="70">*<pos:position pos:line="1" pos:column="71"/></modifier></type><name pos:line="1" pos:column="71">from<pos:position pos:line="1" pos:column="75"/></name></decl></parameter>, 
                          <parameter><decl><type><name pos:line="2" pos:column="27">apr_off_t<pos:position pos:line="2" pos:column="36"/></name></type> <name pos:line="2" pos:column="37">maxlen<pos:position pos:line="2" pos:column="43"/></name></decl></parameter>, <parameter><decl><type><name pos:line="2" pos:column="45">int<pos:position pos:line="2" pos:column="48"/></name> <modifier pos:line="2" pos:column="49">*<pos:position pos:line="2" pos:column="50"/></modifier></type><name pos:line="2" pos:column="50">pfile_handles_allowed<pos:position pos:line="2" pos:column="71"/></name></decl></parameter>, 
                          <parameter><decl><type><specifier pos:line="3" pos:column="27">const<pos:position pos:line="3" pos:column="32"/></specifier> <name pos:line="3" pos:column="33">char<pos:position pos:line="3" pos:column="37"/></name> <modifier pos:line="3" pos:column="38">*<pos:position pos:line="3" pos:column="39"/></modifier></type><name pos:line="3" pos:column="39">msg<pos:position pos:line="3" pos:column="42"/></name></decl></parameter>)<pos:position pos:line="3" pos:column="43"/></parameter_list>
<block pos:line="4" pos:column="1">{
    <decl_stmt><decl><type><name pos:line="5" pos:column="5">apr_status_t<pos:position pos:line="5" pos:column="17"/></name></type> <name pos:line="5" pos:column="18">status<pos:position pos:line="5" pos:column="24"/></name> <init pos:line="5" pos:column="25">= <expr><name pos:line="5" pos:column="27">APR_SUCCESS<pos:position pos:line="5" pos:column="38"/></name></expr></init></decl>;<pos:position pos:line="5" pos:column="39"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="6" pos:column="5">int<pos:position pos:line="6" pos:column="8"/></name></type> <name pos:line="6" pos:column="9">same_alloc<pos:position pos:line="6" pos:column="19"/></name></decl>;<pos:position pos:line="6" pos:column="20"/></decl_stmt>
    
    <expr_stmt><expr><call><name pos:line="8" pos:column="5">AP_DEBUG_ASSERT<pos:position pos:line="8" pos:column="20"/></name><argument_list pos:line="8" pos:column="20">(<argument><expr><name pos:line="8" pos:column="21">to<pos:position pos:line="8" pos:column="23"/></name></expr></argument>)<pos:position pos:line="8" pos:column="24"/></argument_list></call></expr>;<pos:position pos:line="8" pos:column="25"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="9" pos:column="5">AP_DEBUG_ASSERT<pos:position pos:line="9" pos:column="20"/></name><argument_list pos:line="9" pos:column="20">(<argument><expr><name pos:line="9" pos:column="21">from<pos:position pos:line="9" pos:column="25"/></name></expr></argument>)<pos:position pos:line="9" pos:column="26"/></argument_list></call></expr>;<pos:position pos:line="9" pos:column="27"/></expr_stmt>
    <expr_stmt><expr><name pos:line="10" pos:column="5">same_alloc<pos:position pos:line="10" pos:column="15"/></name> <operator pos:line="10" pos:column="16">=<pos:position pos:line="10" pos:column="17"/></operator> <operator pos:line="10" pos:column="18">(<pos:position pos:line="10" pos:column="19"/></operator><name><name pos:line="10" pos:column="19">to<pos:position pos:line="10" pos:column="21"/></name><operator pos:line="10" pos:column="21">-&gt;<pos:position pos:line="10" pos:column="26"/></operator><name pos:line="10" pos:column="23">bucket_alloc<pos:position pos:line="10" pos:column="35"/></name></name> <operator pos:line="10" pos:column="36">==<pos:position pos:line="10" pos:column="38"/></operator> <name><name pos:line="10" pos:column="39">from<pos:position pos:line="10" pos:column="43"/></name><operator pos:line="10" pos:column="43">-&gt;<pos:position pos:line="10" pos:column="48"/></operator><name pos:line="10" pos:column="45">bucket_alloc<pos:position pos:line="10" pos:column="57"/></name></name><operator pos:line="10" pos:column="57">)<pos:position pos:line="10" pos:column="58"/></operator></expr>;<pos:position pos:line="10" pos:column="59"/></expr_stmt>

    <if pos:line="12" pos:column="5">if <condition pos:line="12" pos:column="8">(<expr><operator pos:line="12" pos:column="9">!<pos:position pos:line="12" pos:column="10"/></operator><name pos:line="12" pos:column="10">FILE_MOVE<pos:position pos:line="12" pos:column="19"/></name></expr>)<pos:position pos:line="12" pos:column="20"/></condition><then pos:line="12" pos:column="20"> <block pos:line="12" pos:column="21">{
        <expr_stmt><expr><name pos:line="13" pos:column="9">pfile_handles_allowed<pos:position pos:line="13" pos:column="30"/></name> <operator pos:line="13" pos:column="31">=<pos:position pos:line="13" pos:column="32"/></operator> <name pos:line="13" pos:column="33">NULL<pos:position pos:line="13" pos:column="37"/></name></expr>;<pos:position pos:line="13" pos:column="38"/></expr_stmt>
    }<pos:position pos:line="14" pos:column="6"/></block></then></if>
    
    <if pos:line="16" pos:column="5">if <condition pos:line="16" pos:column="8">(<expr><operator pos:line="16" pos:column="9">!<pos:position pos:line="16" pos:column="10"/></operator><call><name pos:line="16" pos:column="10">APR_BRIGADE_EMPTY<pos:position pos:line="16" pos:column="27"/></name><argument_list pos:line="16" pos:column="27">(<argument><expr><name pos:line="16" pos:column="28">from<pos:position pos:line="16" pos:column="32"/></name></expr></argument>)<pos:position pos:line="16" pos:column="33"/></argument_list></call></expr>)<pos:position pos:line="16" pos:column="34"/></condition><then pos:line="16" pos:column="34"> <block pos:line="16" pos:column="35">{
        <decl_stmt><decl><type><name pos:line="17" pos:column="9">apr_bucket<pos:position pos:line="17" pos:column="19"/></name> <modifier pos:line="17" pos:column="20">*<pos:position pos:line="17" pos:column="21"/></modifier></type><name pos:line="17" pos:column="21">b<pos:position pos:line="17" pos:column="22"/></name></decl>, <modifier pos:line="17" pos:column="24">*<pos:position pos:line="17" pos:column="25"/></modifier><decl><type ref="prev"/><name pos:line="17" pos:column="25">end<pos:position pos:line="17" pos:column="28"/></name></decl>;<pos:position pos:line="17" pos:column="29"/></decl_stmt>
        
        <expr_stmt><expr><name pos:line="19" pos:column="9">status<pos:position pos:line="19" pos:column="15"/></name> <operator pos:line="19" pos:column="16">=<pos:position pos:line="19" pos:column="17"/></operator> <call><name pos:line="19" pos:column="18">last_not_included<pos:position pos:line="19" pos:column="35"/></name><argument_list pos:line="19" pos:column="35">(<argument><expr><name pos:line="19" pos:column="36">from<pos:position pos:line="19" pos:column="40"/></name></expr></argument>, <argument><expr><name pos:line="19" pos:column="42">maxlen<pos:position pos:line="19" pos:column="48"/></name></expr></argument>, <argument><expr><name pos:line="19" pos:column="50">same_alloc<pos:position pos:line="19" pos:column="60"/></name></expr></argument>,
                                   <argument><expr><name pos:line="20" pos:column="36">pfile_handles_allowed<pos:position pos:line="20" pos:column="57"/></name></expr></argument>, <argument><expr><operator pos:line="20" pos:column="59">&amp;<pos:position pos:line="20" pos:column="64"/></operator><name pos:line="20" pos:column="60">end<pos:position pos:line="20" pos:column="63"/></name></expr></argument>)<pos:position pos:line="20" pos:column="64"/></argument_list></call></expr>;<pos:position pos:line="20" pos:column="65"/></expr_stmt>
        <if pos:line="21" pos:column="9">if <condition pos:line="21" pos:column="12">(<expr><name pos:line="21" pos:column="13">status<pos:position pos:line="21" pos:column="19"/></name> <operator pos:line="21" pos:column="20">!=<pos:position pos:line="21" pos:column="22"/></operator> <name pos:line="21" pos:column="23">APR_SUCCESS<pos:position pos:line="21" pos:column="34"/></name></expr>)<pos:position pos:line="21" pos:column="35"/></condition><then pos:line="21" pos:column="35"> <block pos:line="21" pos:column="36">{
            <return pos:line="22" pos:column="13">return <expr><name pos:line="22" pos:column="20">status<pos:position pos:line="22" pos:column="26"/></name></expr>;<pos:position pos:line="22" pos:column="27"/></return>
        }<pos:position pos:line="23" pos:column="10"/></block></then></if>
        
        <while pos:line="25" pos:column="9">while <condition pos:line="25" pos:column="15">(<expr><operator pos:line="25" pos:column="16">!<pos:position pos:line="25" pos:column="17"/></operator><call><name pos:line="25" pos:column="17">APR_BRIGADE_EMPTY<pos:position pos:line="25" pos:column="34"/></name><argument_list pos:line="25" pos:column="34">(<argument><expr><name pos:line="25" pos:column="35">from<pos:position pos:line="25" pos:column="39"/></name></expr></argument>)<pos:position pos:line="25" pos:column="40"/></argument_list></call> <operator pos:line="25" pos:column="41">&amp;&amp;<pos:position pos:line="25" pos:column="51"/></operator> <name pos:line="25" pos:column="44">status<pos:position pos:line="25" pos:column="50"/></name> <operator pos:line="25" pos:column="51">==<pos:position pos:line="25" pos:column="53"/></operator> <name pos:line="25" pos:column="54">APR_SUCCESS<pos:position pos:line="25" pos:column="65"/></name></expr>)<pos:position pos:line="25" pos:column="66"/></condition> <block pos:line="25" pos:column="67">{
            <expr_stmt><expr><name pos:line="26" pos:column="13">b<pos:position pos:line="26" pos:column="14"/></name> <operator pos:line="26" pos:column="15">=<pos:position pos:line="26" pos:column="16"/></operator> <call><name pos:line="26" pos:column="17">APR_BRIGADE_FIRST<pos:position pos:line="26" pos:column="34"/></name><argument_list pos:line="26" pos:column="34">(<argument><expr><name pos:line="26" pos:column="35">from<pos:position pos:line="26" pos:column="39"/></name></expr></argument>)<pos:position pos:line="26" pos:column="40"/></argument_list></call></expr>;<pos:position pos:line="26" pos:column="41"/></expr_stmt>
            <if pos:line="27" pos:column="13">if <condition pos:line="27" pos:column="16">(<expr><name pos:line="27" pos:column="17">b<pos:position pos:line="27" pos:column="18"/></name> <operator pos:line="27" pos:column="19">==<pos:position pos:line="27" pos:column="21"/></operator> <name pos:line="27" pos:column="22">end<pos:position pos:line="27" pos:column="25"/></name></expr>)<pos:position pos:line="27" pos:column="26"/></condition><then pos:line="27" pos:column="26"> <block pos:line="27" pos:column="27">{
                <break pos:line="28" pos:column="17">break;<pos:position pos:line="28" pos:column="23"/></break>
            }<pos:position pos:line="29" pos:column="14"/></block></then></if>
            
            <if pos:line="31" pos:column="13">if <condition pos:line="31" pos:column="16">(<expr><name pos:line="31" pos:column="17">same_alloc<pos:position pos:line="31" pos:column="27"/></name> <operator pos:line="31" pos:column="28">||<pos:position pos:line="31" pos:column="30"/></operator> <operator pos:line="31" pos:column="31">(<pos:position pos:line="31" pos:column="32"/></operator><name><name pos:line="31" pos:column="32">b<pos:position pos:line="31" pos:column="33"/></name><operator pos:line="31" pos:column="33">-&gt;<pos:position pos:line="31" pos:column="38"/></operator><name pos:line="31" pos:column="35">list<pos:position pos:line="31" pos:column="39"/></name></name> <operator pos:line="31" pos:column="40">==<pos:position pos:line="31" pos:column="42"/></operator> <name><name pos:line="31" pos:column="43">to<pos:position pos:line="31" pos:column="45"/></name><operator pos:line="31" pos:column="45">-&gt;<pos:position pos:line="31" pos:column="50"/></operator><name pos:line="31" pos:column="47">bucket_alloc<pos:position pos:line="31" pos:column="59"/></name></name><operator pos:line="31" pos:column="59">)<pos:position pos:line="31" pos:column="60"/></operator></expr>)<pos:position pos:line="31" pos:column="61"/></condition><then pos:line="31" pos:column="61"> <block pos:line="31" pos:column="62">{
                <comment type="block" pos:line="32" pos:column="17">/* both brigades use the same bucket_alloc and auto-cleanups
                 * have the same life time. It's therefore safe to just move
                 * directly. */</comment>
                <expr_stmt><expr><call><name pos:line="35" pos:column="17">APR_BUCKET_REMOVE<pos:position pos:line="35" pos:column="34"/></name><argument_list pos:line="35" pos:column="34">(<argument><expr><name pos:line="35" pos:column="35">b<pos:position pos:line="35" pos:column="36"/></name></expr></argument>)<pos:position pos:line="35" pos:column="37"/></argument_list></call></expr>;<pos:position pos:line="35" pos:column="38"/></expr_stmt>
                <expr_stmt><expr><call><name pos:line="36" pos:column="17">APR_BRIGADE_INSERT_TAIL<pos:position pos:line="36" pos:column="40"/></name><argument_list pos:line="36" pos:column="40">(<argument><expr><name pos:line="36" pos:column="41">to<pos:position pos:line="36" pos:column="43"/></name></expr></argument>, <argument><expr><name pos:line="36" pos:column="45">b<pos:position pos:line="36" pos:column="46"/></name></expr></argument>)<pos:position pos:line="36" pos:column="47"/></argument_list></call></expr>;<pos:position pos:line="36" pos:column="48"/></expr_stmt>
<cpp:if pos:line="37" pos:column="1">#<cpp:directive pos:line="37" pos:column="2">if<pos:position pos:line="37" pos:column="4"/></cpp:directive> <expr><name pos:line="37" pos:column="5">LOG_BUCKETS<pos:position pos:line="37" pos:column="16"/></name></expr></cpp:if>
                <expr_stmt><expr><call><name pos:line="38" pos:column="17">ap_log_perror<pos:position pos:line="38" pos:column="30"/></name><argument_list pos:line="38" pos:column="30">(<argument><expr><name pos:line="38" pos:column="31">APLOG_MARK<pos:position pos:line="38" pos:column="41"/></name></expr></argument>, <argument><expr><name pos:line="38" pos:column="43">LOG_LEVEL<pos:position pos:line="38" pos:column="52"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="38" pos:column="54">0<pos:position pos:line="38" pos:column="55"/></literal></expr></argument>, <argument><expr><name><name pos:line="38" pos:column="57">to<pos:position pos:line="38" pos:column="59"/></name><operator pos:line="38" pos:column="59">-&gt;<pos:position pos:line="38" pos:column="64"/></operator><name pos:line="38" pos:column="61">p<pos:position pos:line="38" pos:column="62"/></name></name></expr></argument>,
                              <argument><expr><literal type="string" pos:line="39" pos:column="31">"h2_util_move: %s, passed bucket(same bucket_alloc) "<pos:position pos:line="39" pos:column="84"/></literal>
                              <literal type="string" pos:line="40" pos:column="31">"%ld-%ld, type=%s"<pos:position pos:line="40" pos:column="49"/></literal></expr></argument>,
                              <argument><expr><name pos:line="41" pos:column="31">msg<pos:position pos:line="41" pos:column="34"/></name></expr></argument>, <argument><expr><operator pos:line="41" pos:column="36">(<pos:position pos:line="41" pos:column="37"/></operator><name pos:line="41" pos:column="37">long<pos:position pos:line="41" pos:column="41"/></name><operator pos:line="41" pos:column="41">)<pos:position pos:line="41" pos:column="42"/></operator><name><name pos:line="41" pos:column="42">b<pos:position pos:line="41" pos:column="43"/></name><operator pos:line="41" pos:column="43">-&gt;<pos:position pos:line="41" pos:column="48"/></operator><name pos:line="41" pos:column="45">start<pos:position pos:line="41" pos:column="50"/></name></name></expr></argument>, <argument><expr><operator pos:line="41" pos:column="52">(<pos:position pos:line="41" pos:column="53"/></operator><name pos:line="41" pos:column="53">long<pos:position pos:line="41" pos:column="57"/></name><operator pos:line="41" pos:column="57">)<pos:position pos:line="41" pos:column="58"/></operator><name><name pos:line="41" pos:column="58">b<pos:position pos:line="41" pos:column="59"/></name><operator pos:line="41" pos:column="59">-&gt;<pos:position pos:line="41" pos:column="64"/></operator><name pos:line="41" pos:column="61">length<pos:position pos:line="41" pos:column="67"/></name></name></expr></argument>, 
                              <argument><expr><ternary><condition><expr><call><name pos:line="42" pos:column="31">APR_BUCKET_IS_METADATA<pos:position pos:line="42" pos:column="53"/></name><argument_list pos:line="42" pos:column="53">(<argument><expr><name pos:line="42" pos:column="54">b<pos:position pos:line="42" pos:column="55"/></name></expr></argument>)<pos:position pos:line="42" pos:column="56"/></argument_list></call></expr>?<pos:position pos:line="42" pos:column="57"/></condition><then pos:line="42" pos:column="57"> 
                              <expr><operator pos:line="43" pos:column="31">(<pos:position pos:line="43" pos:column="32"/></operator><ternary><condition><expr><call><name pos:line="43" pos:column="32">APR_BUCKET_IS_EOS<pos:position pos:line="43" pos:column="49"/></name><argument_list pos:line="43" pos:column="49">(<argument><expr><name pos:line="43" pos:column="50">b<pos:position pos:line="43" pos:column="51"/></name></expr></argument>)<pos:position pos:line="43" pos:column="52"/></argument_list></call></expr>?<pos:position pos:line="43" pos:column="53"/></condition><then pos:line="43" pos:column="53"> <expr><literal type="string" pos:line="43" pos:column="54">"EOS"<pos:position pos:line="43" pos:column="59"/></literal></expr></then><else pos:line="43" pos:column="59">: 
                               <expr><operator pos:line="44" pos:column="32">(<pos:position pos:line="44" pos:column="33"/></operator><ternary><condition><expr><call><name pos:line="44" pos:column="33">APR_BUCKET_IS_FLUSH<pos:position pos:line="44" pos:column="52"/></name><argument_list pos:line="44" pos:column="52">(<argument><expr><name pos:line="44" pos:column="53">b<pos:position pos:line="44" pos:column="54"/></name></expr></argument>)<pos:position pos:line="44" pos:column="55"/></argument_list></call></expr>?<pos:position pos:line="44" pos:column="56"/></condition><then pos:line="44" pos:column="56"> <expr><literal type="string" pos:line="44" pos:column="57">"FLUSH"<pos:position pos:line="44" pos:column="64"/></literal></expr> <pos:position pos:line="44" pos:column="65"/></then><else pos:line="44" pos:column="65">: <expr><literal type="string" pos:line="44" pos:column="67">"META"<pos:position pos:line="44" pos:column="73"/></literal></expr></else></ternary><operator pos:line="44" pos:column="73">)<pos:position pos:line="44" pos:column="74"/></operator></expr></else></ternary><operator pos:line="44" pos:column="74">)<pos:position pos:line="44" pos:column="75"/></operator></expr> <pos:position pos:line="44" pos:column="76"/></then><else pos:line="44" pos:column="76">: 
                              <expr><operator pos:line="45" pos:column="31">(<pos:position pos:line="45" pos:column="32"/></operator><ternary><condition><expr><call><name pos:line="45" pos:column="32">APR_BUCKET_IS_FILE<pos:position pos:line="45" pos:column="50"/></name><argument_list pos:line="45" pos:column="50">(<argument><expr><name pos:line="45" pos:column="51">b<pos:position pos:line="45" pos:column="52"/></name></expr></argument>)<pos:position pos:line="45" pos:column="53"/></argument_list></call></expr>?<pos:position pos:line="45" pos:column="54"/></condition><then pos:line="45" pos:column="54"> <expr><literal type="string" pos:line="45" pos:column="55">"FILE"<pos:position pos:line="45" pos:column="61"/></literal></expr> <pos:position pos:line="45" pos:column="62"/></then><else pos:line="45" pos:column="62">: <expr><literal type="string" pos:line="45" pos:column="64">"DATA"<pos:position pos:line="45" pos:column="70"/></literal></expr></else></ternary><operator pos:line="45" pos:column="70">)<pos:position pos:line="45" pos:column="71"/></operator></expr></else></ternary></expr></argument>)<pos:position pos:line="45" pos:column="72"/></argument_list></call></expr>;<pos:position pos:line="45" pos:column="73"/></expr_stmt>
<cpp:endif pos:line="46" pos:column="1">#<cpp:directive pos:line="46" pos:column="2">endif<pos:position pos:line="46" pos:column="7"/></cpp:directive></cpp:endif>
            }<pos:position pos:line="47" pos:column="14"/></block></then>
            <elseif pos:line="48" pos:column="13">else <if pos:line="48" pos:column="18">if <condition pos:line="48" pos:column="21">(<expr><name pos:line="48" pos:column="22">DEEP_COPY<pos:position pos:line="48" pos:column="31"/></name></expr>)<pos:position pos:line="48" pos:column="32"/></condition><then pos:line="48" pos:column="32"> <block pos:line="48" pos:column="33">{
                <comment type="block" pos:line="49" pos:column="17">/* we have not managed the magic of passing buckets from
                 * one thread to another. Any attempts result in
                 * cleanup of pools scrambling memory.
                 */</comment>
                <if pos:line="53" pos:column="17">if <condition pos:line="53" pos:column="20">(<expr><call><name pos:line="53" pos:column="21">APR_BUCKET_IS_METADATA<pos:position pos:line="53" pos:column="43"/></name><argument_list pos:line="53" pos:column="43">(<argument><expr><name pos:line="53" pos:column="44">b<pos:position pos:line="53" pos:column="45"/></name></expr></argument>)<pos:position pos:line="53" pos:column="46"/></argument_list></call></expr>)<pos:position pos:line="53" pos:column="47"/></condition><then pos:line="53" pos:column="47"> <block pos:line="53" pos:column="48">{
                    <if pos:line="54" pos:column="21">if <condition pos:line="54" pos:column="24">(<expr><call><name pos:line="54" pos:column="25">APR_BUCKET_IS_EOS<pos:position pos:line="54" pos:column="42"/></name><argument_list pos:line="54" pos:column="42">(<argument><expr><name pos:line="54" pos:column="43">b<pos:position pos:line="54" pos:column="44"/></name></expr></argument>)<pos:position pos:line="54" pos:column="45"/></argument_list></call></expr>)<pos:position pos:line="54" pos:column="46"/></condition><then pos:line="54" pos:column="46"> <block pos:line="54" pos:column="47">{
                        <expr_stmt><expr><call><name pos:line="55" pos:column="25">APR_BRIGADE_INSERT_TAIL<pos:position pos:line="55" pos:column="48"/></name><argument_list pos:line="55" pos:column="48">(<argument><expr><name pos:line="55" pos:column="49">to<pos:position pos:line="55" pos:column="51"/></name></expr></argument>, <argument><expr><call><name pos:line="55" pos:column="53">apr_bucket_eos_create<pos:position pos:line="55" pos:column="74"/></name><argument_list pos:line="55" pos:column="74">(<argument><expr><name><name pos:line="55" pos:column="75">to<pos:position pos:line="55" pos:column="77"/></name><operator pos:line="55" pos:column="77">-&gt;<pos:position pos:line="55" pos:column="82"/></operator><name pos:line="55" pos:column="79">bucket_alloc<pos:position pos:line="55" pos:column="91"/></name></name></expr></argument>)<pos:position pos:line="55" pos:column="92"/></argument_list></call></expr></argument>)<pos:position pos:line="55" pos:column="93"/></argument_list></call></expr>;<pos:position pos:line="55" pos:column="94"/></expr_stmt>
                    }<pos:position pos:line="56" pos:column="22"/></block></then>
                    <elseif pos:line="57" pos:column="21">else <if pos:line="57" pos:column="26">if <condition pos:line="57" pos:column="29">(<expr><call><name pos:line="57" pos:column="30">APR_BUCKET_IS_FLUSH<pos:position pos:line="57" pos:column="49"/></name><argument_list pos:line="57" pos:column="49">(<argument><expr><name pos:line="57" pos:column="50">b<pos:position pos:line="57" pos:column="51"/></name></expr></argument>)<pos:position pos:line="57" pos:column="52"/></argument_list></call></expr>)<pos:position pos:line="57" pos:column="53"/></condition><then pos:line="57" pos:column="53"> <block pos:line="57" pos:column="54">{
                        <expr_stmt><expr><call><name pos:line="58" pos:column="25">APR_BRIGADE_INSERT_TAIL<pos:position pos:line="58" pos:column="48"/></name><argument_list pos:line="58" pos:column="48">(<argument><expr><name pos:line="58" pos:column="49">to<pos:position pos:line="58" pos:column="51"/></name></expr></argument>, <argument><expr><call><name pos:line="58" pos:column="53">apr_bucket_flush_create<pos:position pos:line="58" pos:column="76"/></name><argument_list pos:line="58" pos:column="76">(<argument><expr><name><name pos:line="58" pos:column="77">to<pos:position pos:line="58" pos:column="79"/></name><operator pos:line="58" pos:column="79">-&gt;<pos:position pos:line="58" pos:column="84"/></operator><name pos:line="58" pos:column="81">bucket_alloc<pos:position pos:line="58" pos:column="93"/></name></name></expr></argument>)<pos:position pos:line="58" pos:column="94"/></argument_list></call></expr></argument>)<pos:position pos:line="58" pos:column="95"/></argument_list></call></expr>;<pos:position pos:line="58" pos:column="96"/></expr_stmt>
                    }<pos:position pos:line="59" pos:column="22"/></block></then></if></elseif>
                    <else pos:line="60" pos:column="21">else <block pos:line="60" pos:column="26">{
                        <comment type="block" pos:line="61" pos:column="25">/* ignore */</comment>
                    }<pos:position pos:line="62" pos:column="22"/></block></else></if>
                }<pos:position pos:line="63" pos:column="18"/></block></then>
                <elseif pos:line="64" pos:column="17">else <if pos:line="64" pos:column="22">if <condition pos:line="64" pos:column="25">(<expr><name pos:line="64" pos:column="26">pfile_handles_allowed<pos:position pos:line="64" pos:column="47"/></name> 
                         <operator pos:line="65" pos:column="26">&amp;&amp;<pos:position pos:line="65" pos:column="36"/></operator> <operator pos:line="65" pos:column="29">*<pos:position pos:line="65" pos:column="30"/></operator><name pos:line="65" pos:column="30">pfile_handles_allowed<pos:position pos:line="65" pos:column="51"/></name> <operator pos:line="65" pos:column="52">&gt;<pos:position pos:line="65" pos:column="56"/></operator> <literal type="number" pos:line="65" pos:column="54">0<pos:position pos:line="65" pos:column="55"/></literal> 
                         <operator pos:line="66" pos:column="26">&amp;&amp;<pos:position pos:line="66" pos:column="36"/></operator> <call><name pos:line="66" pos:column="29">APR_BUCKET_IS_FILE<pos:position pos:line="66" pos:column="47"/></name><argument_list pos:line="66" pos:column="47">(<argument><expr><name pos:line="66" pos:column="48">b<pos:position pos:line="66" pos:column="49"/></name></expr></argument>)<pos:position pos:line="66" pos:column="50"/></argument_list></call></expr>)<pos:position pos:line="66" pos:column="51"/></condition><then pos:line="66" pos:column="51"> <block pos:line="66" pos:column="52">{
                    <comment type="block" pos:line="67" pos:column="21">/* We do not want to read files when passing buckets, if
                     * we can avoid it. However, what we've come up so far
                     * is not working corrently, resulting either in crashes or
                     * too many open file descriptors.
                     */</comment>
                    <decl_stmt><decl><type><name pos:line="72" pos:column="21">apr_bucket_file<pos:position pos:line="72" pos:column="36"/></name> <modifier pos:line="72" pos:column="37">*<pos:position pos:line="72" pos:column="38"/></modifier></type><name pos:line="72" pos:column="38">f<pos:position pos:line="72" pos:column="39"/></name> <init pos:line="72" pos:column="40">= <expr><operator pos:line="72" pos:column="42">(<pos:position pos:line="72" pos:column="43"/></operator><name pos:line="72" pos:column="43">apr_bucket_file<pos:position pos:line="72" pos:column="58"/></name> <operator pos:line="72" pos:column="59">*<pos:position pos:line="72" pos:column="60"/></operator><operator pos:line="72" pos:column="60">)<pos:position pos:line="72" pos:column="61"/></operator><name><name pos:line="72" pos:column="61">b<pos:position pos:line="72" pos:column="62"/></name><operator pos:line="72" pos:column="62">-&gt;<pos:position pos:line="72" pos:column="67"/></operator><name pos:line="72" pos:column="64">data<pos:position pos:line="72" pos:column="68"/></name></name></expr></init></decl>;<pos:position pos:line="72" pos:column="69"/></decl_stmt>
                    <decl_stmt><decl><type><name pos:line="73" pos:column="21">apr_file_t<pos:position pos:line="73" pos:column="31"/></name> <modifier pos:line="73" pos:column="32">*<pos:position pos:line="73" pos:column="33"/></modifier></type><name pos:line="73" pos:column="33">fd<pos:position pos:line="73" pos:column="35"/></name> <init pos:line="73" pos:column="36">= <expr><name><name pos:line="73" pos:column="38">f<pos:position pos:line="73" pos:column="39"/></name><operator pos:line="73" pos:column="39">-&gt;<pos:position pos:line="73" pos:column="44"/></operator><name pos:line="73" pos:column="41">fd<pos:position pos:line="73" pos:column="43"/></name></name></expr></init></decl>;<pos:position pos:line="73" pos:column="44"/></decl_stmt>
                    <decl_stmt><decl><type><name pos:line="74" pos:column="21">int<pos:position pos:line="74" pos:column="24"/></name></type> <name pos:line="74" pos:column="25">setaside<pos:position pos:line="74" pos:column="33"/></name> <init pos:line="74" pos:column="34">= <expr><operator pos:line="74" pos:column="36">(<pos:position pos:line="74" pos:column="37"/></operator><name><name pos:line="74" pos:column="37">f<pos:position pos:line="74" pos:column="38"/></name><operator pos:line="74" pos:column="38">-&gt;<pos:position pos:line="74" pos:column="43"/></operator><name pos:line="74" pos:column="40">readpool<pos:position pos:line="74" pos:column="48"/></name></name> <operator pos:line="74" pos:column="49">!=<pos:position pos:line="74" pos:column="51"/></operator> <name><name pos:line="74" pos:column="52">to<pos:position pos:line="74" pos:column="54"/></name><operator pos:line="74" pos:column="54">-&gt;<pos:position pos:line="74" pos:column="59"/></operator><name pos:line="74" pos:column="56">p<pos:position pos:line="74" pos:column="57"/></name></name><operator pos:line="74" pos:column="57">)<pos:position pos:line="74" pos:column="58"/></operator></expr></init></decl>;<pos:position pos:line="74" pos:column="59"/></decl_stmt>
<cpp:if pos:line="75" pos:column="1">#<cpp:directive pos:line="75" pos:column="2">if<pos:position pos:line="75" pos:column="4"/></cpp:directive> <expr><name pos:line="75" pos:column="5">LOG_BUCKETS<pos:position pos:line="75" pos:column="16"/></name></expr></cpp:if>
                    <expr_stmt><expr><call><name pos:line="76" pos:column="21">ap_log_perror<pos:position pos:line="76" pos:column="34"/></name><argument_list pos:line="76" pos:column="34">(<argument><expr><name pos:line="76" pos:column="35">APLOG_MARK<pos:position pos:line="76" pos:column="45"/></name></expr></argument>, <argument><expr><name pos:line="76" pos:column="47">LOG_LEVEL<pos:position pos:line="76" pos:column="56"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="76" pos:column="58">0<pos:position pos:line="76" pos:column="59"/></literal></expr></argument>, <argument><expr><name><name pos:line="76" pos:column="61">to<pos:position pos:line="76" pos:column="63"/></name><operator pos:line="76" pos:column="63">-&gt;<pos:position pos:line="76" pos:column="68"/></operator><name pos:line="76" pos:column="65">p<pos:position pos:line="76" pos:column="66"/></name></name></expr></argument>,
                                  <argument><expr><literal type="string" pos:line="77" pos:column="35">"h2_util_move: %s, moving FILE bucket %ld-%ld "<pos:position pos:line="77" pos:column="82"/></literal>
                                  <literal type="string" pos:line="78" pos:column="35">"from=%lx(p=%lx) to=%lx(p=%lx), setaside=%d"<pos:position pos:line="78" pos:column="79"/></literal></expr></argument>,
                                  <argument><expr><name pos:line="79" pos:column="35">msg<pos:position pos:line="79" pos:column="38"/></name></expr></argument>, <argument><expr><operator pos:line="79" pos:column="40">(<pos:position pos:line="79" pos:column="41"/></operator><name pos:line="79" pos:column="41">long<pos:position pos:line="79" pos:column="45"/></name><operator pos:line="79" pos:column="45">)<pos:position pos:line="79" pos:column="46"/></operator><name><name pos:line="79" pos:column="46">b<pos:position pos:line="79" pos:column="47"/></name><operator pos:line="79" pos:column="47">-&gt;<pos:position pos:line="79" pos:column="52"/></operator><name pos:line="79" pos:column="49">start<pos:position pos:line="79" pos:column="54"/></name></name></expr></argument>, <argument><expr><operator pos:line="79" pos:column="56">(<pos:position pos:line="79" pos:column="57"/></operator><name pos:line="79" pos:column="57">long<pos:position pos:line="79" pos:column="61"/></name><operator pos:line="79" pos:column="61">)<pos:position pos:line="79" pos:column="62"/></operator><name><name pos:line="79" pos:column="62">b<pos:position pos:line="79" pos:column="63"/></name><operator pos:line="79" pos:column="63">-&gt;<pos:position pos:line="79" pos:column="68"/></operator><name pos:line="79" pos:column="65">length<pos:position pos:line="79" pos:column="71"/></name></name></expr></argument>, 
                                  <argument><expr><operator pos:line="80" pos:column="35">(<pos:position pos:line="80" pos:column="36"/></operator><name pos:line="80" pos:column="36">long<pos:position pos:line="80" pos:column="40"/></name><operator pos:line="80" pos:column="40">)<pos:position pos:line="80" pos:column="41"/></operator><name pos:line="80" pos:column="41">from<pos:position pos:line="80" pos:column="45"/></name></expr></argument>, <argument><expr><operator pos:line="80" pos:column="47">(<pos:position pos:line="80" pos:column="48"/></operator><name pos:line="80" pos:column="48">long<pos:position pos:line="80" pos:column="52"/></name><operator pos:line="80" pos:column="52">)<pos:position pos:line="80" pos:column="53"/></operator><name><name pos:line="80" pos:column="53">from<pos:position pos:line="80" pos:column="57"/></name><operator pos:line="80" pos:column="57">-&gt;<pos:position pos:line="80" pos:column="62"/></operator><name pos:line="80" pos:column="59">p<pos:position pos:line="80" pos:column="60"/></name></name></expr></argument>, 
                                  <argument><expr><operator pos:line="81" pos:column="35">(<pos:position pos:line="81" pos:column="36"/></operator><name pos:line="81" pos:column="36">long<pos:position pos:line="81" pos:column="40"/></name><operator pos:line="81" pos:column="40">)<pos:position pos:line="81" pos:column="41"/></operator><name pos:line="81" pos:column="41">to<pos:position pos:line="81" pos:column="43"/></name></expr></argument>, <argument><expr><operator pos:line="81" pos:column="45">(<pos:position pos:line="81" pos:column="46"/></operator><name pos:line="81" pos:column="46">long<pos:position pos:line="81" pos:column="50"/></name><operator pos:line="81" pos:column="50">)<pos:position pos:line="81" pos:column="51"/></operator><name><name pos:line="81" pos:column="51">to<pos:position pos:line="81" pos:column="53"/></name><operator pos:line="81" pos:column="53">-&gt;<pos:position pos:line="81" pos:column="58"/></operator><name pos:line="81" pos:column="55">p<pos:position pos:line="81" pos:column="56"/></name></name></expr></argument>, <argument><expr><name pos:line="81" pos:column="58">setaside<pos:position pos:line="81" pos:column="66"/></name></expr></argument>)<pos:position pos:line="81" pos:column="67"/></argument_list></call></expr>;<pos:position pos:line="81" pos:column="68"/></expr_stmt>
<cpp:endif pos:line="82" pos:column="1">#<cpp:directive pos:line="82" pos:column="2">endif<pos:position pos:line="82" pos:column="7"/></cpp:directive></cpp:endif>
                    <if pos:line="83" pos:column="21">if <condition pos:line="83" pos:column="24">(<expr><name pos:line="83" pos:column="25">setaside<pos:position pos:line="83" pos:column="33"/></name></expr>)<pos:position pos:line="83" pos:column="34"/></condition><then pos:line="83" pos:column="34"> <block pos:line="83" pos:column="35">{
                        <expr_stmt><expr><name pos:line="84" pos:column="25">status<pos:position pos:line="84" pos:column="31"/></name> <operator pos:line="84" pos:column="32">=<pos:position pos:line="84" pos:column="33"/></operator> <call><name pos:line="84" pos:column="34">apr_file_setaside<pos:position pos:line="84" pos:column="51"/></name><argument_list pos:line="84" pos:column="51">(<argument><expr><operator pos:line="84" pos:column="52">&amp;<pos:position pos:line="84" pos:column="57"/></operator><name pos:line="84" pos:column="53">fd<pos:position pos:line="84" pos:column="55"/></name></expr></argument>, <argument><expr><name pos:line="84" pos:column="57">fd<pos:position pos:line="84" pos:column="59"/></name></expr></argument>, <argument><expr><name><name pos:line="84" pos:column="61">to<pos:position pos:line="84" pos:column="63"/></name><operator pos:line="84" pos:column="63">-&gt;<pos:position pos:line="84" pos:column="68"/></operator><name pos:line="84" pos:column="65">p<pos:position pos:line="84" pos:column="66"/></name></name></expr></argument>)<pos:position pos:line="84" pos:column="67"/></argument_list></call></expr>;<pos:position pos:line="84" pos:column="68"/></expr_stmt>
                        <if pos:line="85" pos:column="25">if <condition pos:line="85" pos:column="28">(<expr><name pos:line="85" pos:column="29">status<pos:position pos:line="85" pos:column="35"/></name> <operator pos:line="85" pos:column="36">!=<pos:position pos:line="85" pos:column="38"/></operator> <name pos:line="85" pos:column="39">APR_SUCCESS<pos:position pos:line="85" pos:column="50"/></name></expr>)<pos:position pos:line="85" pos:column="51"/></condition><then pos:line="85" pos:column="51"> <block pos:line="85" pos:column="52">{
                            <expr_stmt><expr><call><name pos:line="86" pos:column="29">ap_log_perror<pos:position pos:line="86" pos:column="42"/></name><argument_list pos:line="86" pos:column="42">(<argument><expr><name pos:line="86" pos:column="43">APLOG_MARK<pos:position pos:line="86" pos:column="53"/></name></expr></argument>, <argument><expr><name pos:line="86" pos:column="55">APLOG_ERR<pos:position pos:line="86" pos:column="64"/></name></expr></argument>, <argument><expr><name pos:line="86" pos:column="66">status<pos:position pos:line="86" pos:column="72"/></name></expr></argument>, <argument><expr><name><name pos:line="86" pos:column="74">to<pos:position pos:line="86" pos:column="76"/></name><operator pos:line="86" pos:column="76">-&gt;<pos:position pos:line="86" pos:column="81"/></operator><name pos:line="86" pos:column="78">p<pos:position pos:line="86" pos:column="79"/></name></name></expr></argument>,
                                          <argument><expr><call><name pos:line="87" pos:column="43">APLOGNO<pos:position pos:line="87" pos:column="50"/></name><argument_list pos:line="87" pos:column="50">(<argument><expr><literal type="number" pos:line="87" pos:column="51">02947<pos:position pos:line="87" pos:column="56"/></literal></expr></argument>)<pos:position pos:line="87" pos:column="57"/></argument_list></call> <literal type="string" pos:line="87" pos:column="58">"h2_util: %s, setaside FILE"<pos:position pos:line="87" pos:column="86"/></literal></expr></argument>, 
                                          <argument><expr><name pos:line="88" pos:column="43">msg<pos:position pos:line="88" pos:column="46"/></name></expr></argument>)<pos:position pos:line="88" pos:column="47"/></argument_list></call></expr>;<pos:position pos:line="88" pos:column="48"/></expr_stmt>
                            <return pos:line="89" pos:column="29">return <expr><name pos:line="89" pos:column="36">status<pos:position pos:line="89" pos:column="42"/></name></expr>;<pos:position pos:line="89" pos:column="43"/></return>
                        }<pos:position pos:line="90" pos:column="26"/></block></then></if>
                    }<pos:position pos:line="91" pos:column="22"/></block></then></if>
                    <expr_stmt><expr><call><name pos:line="92" pos:column="21">apr_brigade_insert_file<pos:position pos:line="92" pos:column="44"/></name><argument_list pos:line="92" pos:column="44">(<argument><expr><name pos:line="92" pos:column="45">to<pos:position pos:line="92" pos:column="47"/></name></expr></argument>, <argument><expr><name pos:line="92" pos:column="49">fd<pos:position pos:line="92" pos:column="51"/></name></expr></argument>, <argument><expr><name><name pos:line="92" pos:column="53">b<pos:position pos:line="92" pos:column="54"/></name><operator pos:line="92" pos:column="54">-&gt;<pos:position pos:line="92" pos:column="59"/></operator><name pos:line="92" pos:column="56">start<pos:position pos:line="92" pos:column="61"/></name></name></expr></argument>, <argument><expr><name><name pos:line="92" pos:column="63">b<pos:position pos:line="92" pos:column="64"/></name><operator pos:line="92" pos:column="64">-&gt;<pos:position pos:line="92" pos:column="69"/></operator><name pos:line="92" pos:column="66">length<pos:position pos:line="92" pos:column="72"/></name></name></expr></argument>, 
                                            <argument><expr><name><name pos:line="93" pos:column="45">to<pos:position pos:line="93" pos:column="47"/></name><operator pos:line="93" pos:column="47">-&gt;<pos:position pos:line="93" pos:column="52"/></operator><name pos:line="93" pos:column="49">p<pos:position pos:line="93" pos:column="50"/></name></name></expr></argument>)<pos:position pos:line="93" pos:column="51"/></argument_list></call></expr>;<pos:position pos:line="93" pos:column="52"/></expr_stmt>
                    <expr_stmt><expr><operator pos:line="94" pos:column="21">--<pos:position pos:line="94" pos:column="23"/></operator><operator pos:line="94" pos:column="23">(<pos:position pos:line="94" pos:column="24"/></operator><operator pos:line="94" pos:column="24">*<pos:position pos:line="94" pos:column="25"/></operator><name pos:line="94" pos:column="25">pfile_handles_allowed<pos:position pos:line="94" pos:column="46"/></name><operator pos:line="94" pos:column="46">)<pos:position pos:line="94" pos:column="47"/></operator></expr>;<pos:position pos:line="94" pos:column="48"/></expr_stmt>
                }<pos:position pos:line="95" pos:column="18"/></block></then></if></elseif>
                <else pos:line="96" pos:column="17">else <block pos:line="96" pos:column="22">{
                    <decl_stmt><decl><type><specifier pos:line="97" pos:column="21">const<pos:position pos:line="97" pos:column="26"/></specifier> <name pos:line="97" pos:column="27">char<pos:position pos:line="97" pos:column="31"/></name> <modifier pos:line="97" pos:column="32">*<pos:position pos:line="97" pos:column="33"/></modifier></type><name pos:line="97" pos:column="33">data<pos:position pos:line="97" pos:column="37"/></name></decl>;<pos:position pos:line="97" pos:column="38"/></decl_stmt>
                    <decl_stmt><decl><type><name pos:line="98" pos:column="21">apr_size_t<pos:position pos:line="98" pos:column="31"/></name></type> <name pos:line="98" pos:column="32">len<pos:position pos:line="98" pos:column="35"/></name></decl>;<pos:position pos:line="98" pos:column="36"/></decl_stmt>
                    <expr_stmt><expr><name pos:line="99" pos:column="21">status<pos:position pos:line="99" pos:column="27"/></name> <operator pos:line="99" pos:column="28">=<pos:position pos:line="99" pos:column="29"/></operator> <call><name pos:line="99" pos:column="30">apr_bucket_read<pos:position pos:line="99" pos:column="45"/></name><argument_list pos:line="99" pos:column="45">(<argument><expr><name pos:line="99" pos:column="46">b<pos:position pos:line="99" pos:column="47"/></name></expr></argument>, <argument><expr><operator pos:line="99" pos:column="49">&amp;<pos:position pos:line="99" pos:column="54"/></operator><name pos:line="99" pos:column="50">data<pos:position pos:line="99" pos:column="54"/></name></expr></argument>, <argument><expr><operator pos:line="99" pos:column="56">&amp;<pos:position pos:line="99" pos:column="61"/></operator><name pos:line="99" pos:column="57">len<pos:position pos:line="99" pos:column="60"/></name></expr></argument>, <argument><expr><name pos:line="99" pos:column="62">APR_BLOCK_READ<pos:position pos:line="99" pos:column="76"/></name></expr></argument>)<pos:position pos:line="99" pos:column="77"/></argument_list></call></expr>;<pos:position pos:line="99" pos:column="78"/></expr_stmt>
                    <if pos:line="100" pos:column="21">if <condition pos:line="100" pos:column="24">(<expr><name pos:line="100" pos:column="25">status<pos:position pos:line="100" pos:column="31"/></name> <operator pos:line="100" pos:column="32">==<pos:position pos:line="100" pos:column="34"/></operator> <name pos:line="100" pos:column="35">APR_SUCCESS<pos:position pos:line="100" pos:column="46"/></name> <operator pos:line="100" pos:column="47">&amp;&amp;<pos:position pos:line="100" pos:column="57"/></operator> <name pos:line="100" pos:column="50">len<pos:position pos:line="100" pos:column="53"/></name> <operator pos:line="100" pos:column="54">&gt;<pos:position pos:line="100" pos:column="58"/></operator> <literal type="number" pos:line="100" pos:column="56">0<pos:position pos:line="100" pos:column="57"/></literal></expr>)<pos:position pos:line="100" pos:column="58"/></condition><then pos:line="100" pos:column="58"> <block pos:line="100" pos:column="59">{
                        <expr_stmt><expr><name pos:line="101" pos:column="25">status<pos:position pos:line="101" pos:column="31"/></name> <operator pos:line="101" pos:column="32">=<pos:position pos:line="101" pos:column="33"/></operator> <call><name pos:line="101" pos:column="34">apr_brigade_write<pos:position pos:line="101" pos:column="51"/></name><argument_list pos:line="101" pos:column="51">(<argument><expr><name pos:line="101" pos:column="52">to<pos:position pos:line="101" pos:column="54"/></name></expr></argument>, <argument><expr><name pos:line="101" pos:column="56">NULL<pos:position pos:line="101" pos:column="60"/></name></expr></argument>, <argument><expr><name pos:line="101" pos:column="62">NULL<pos:position pos:line="101" pos:column="66"/></name></expr></argument>, <argument><expr><name pos:line="101" pos:column="68">data<pos:position pos:line="101" pos:column="72"/></name></expr></argument>, <argument><expr><name pos:line="101" pos:column="74">len<pos:position pos:line="101" pos:column="77"/></name></expr></argument>)<pos:position pos:line="101" pos:column="78"/></argument_list></call></expr>;<pos:position pos:line="101" pos:column="79"/></expr_stmt>
<cpp:if pos:line="102" pos:column="1">#<cpp:directive pos:line="102" pos:column="2">if<pos:position pos:line="102" pos:column="4"/></cpp:directive> <expr><name pos:line="102" pos:column="5">LOG_BUCKETS<pos:position pos:line="102" pos:column="16"/></name></expr></cpp:if>
                        <expr_stmt><expr><call><name pos:line="103" pos:column="25">ap_log_perror<pos:position pos:line="103" pos:column="38"/></name><argument_list pos:line="103" pos:column="38">(<argument><expr><name pos:line="103" pos:column="39">APLOG_MARK<pos:position pos:line="103" pos:column="49"/></name></expr></argument>, <argument><expr><name pos:line="103" pos:column="51">LOG_LEVEL<pos:position pos:line="103" pos:column="60"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="103" pos:column="62">0<pos:position pos:line="103" pos:column="63"/></literal></expr></argument>, <argument><expr><name><name pos:line="103" pos:column="65">to<pos:position pos:line="103" pos:column="67"/></name><operator pos:line="103" pos:column="67">-&gt;<pos:position pos:line="103" pos:column="72"/></operator><name pos:line="103" pos:column="69">p<pos:position pos:line="103" pos:column="70"/></name></name></expr></argument>,
                                      <argument><expr><literal type="string" pos:line="104" pos:column="39">"h2_util_move: %s, copied bucket %ld-%ld "<pos:position pos:line="104" pos:column="81"/></literal>
                                      <literal type="string" pos:line="105" pos:column="39">"from=%lx(p=%lx) to=%lx(p=%lx)"<pos:position pos:line="105" pos:column="70"/></literal></expr></argument>,
                                      <argument><expr><name pos:line="106" pos:column="39">msg<pos:position pos:line="106" pos:column="42"/></name></expr></argument>, <argument><expr><operator pos:line="106" pos:column="44">(<pos:position pos:line="106" pos:column="45"/></operator><name pos:line="106" pos:column="45">long<pos:position pos:line="106" pos:column="49"/></name><operator pos:line="106" pos:column="49">)<pos:position pos:line="106" pos:column="50"/></operator><name><name pos:line="106" pos:column="50">b<pos:position pos:line="106" pos:column="51"/></name><operator pos:line="106" pos:column="51">-&gt;<pos:position pos:line="106" pos:column="56"/></operator><name pos:line="106" pos:column="53">start<pos:position pos:line="106" pos:column="58"/></name></name></expr></argument>, <argument><expr><operator pos:line="106" pos:column="60">(<pos:position pos:line="106" pos:column="61"/></operator><name pos:line="106" pos:column="61">long<pos:position pos:line="106" pos:column="65"/></name><operator pos:line="106" pos:column="65">)<pos:position pos:line="106" pos:column="66"/></operator><name><name pos:line="106" pos:column="66">b<pos:position pos:line="106" pos:column="67"/></name><operator pos:line="106" pos:column="67">-&gt;<pos:position pos:line="106" pos:column="72"/></operator><name pos:line="106" pos:column="69">length<pos:position pos:line="106" pos:column="75"/></name></name></expr></argument>, 
                                      <argument><expr><operator pos:line="107" pos:column="39">(<pos:position pos:line="107" pos:column="40"/></operator><name pos:line="107" pos:column="40">long<pos:position pos:line="107" pos:column="44"/></name><operator pos:line="107" pos:column="44">)<pos:position pos:line="107" pos:column="45"/></operator><name pos:line="107" pos:column="45">from<pos:position pos:line="107" pos:column="49"/></name></expr></argument>, <argument><expr><operator pos:line="107" pos:column="51">(<pos:position pos:line="107" pos:column="52"/></operator><name pos:line="107" pos:column="52">long<pos:position pos:line="107" pos:column="56"/></name><operator pos:line="107" pos:column="56">)<pos:position pos:line="107" pos:column="57"/></operator><name><name pos:line="107" pos:column="57">from<pos:position pos:line="107" pos:column="61"/></name><operator pos:line="107" pos:column="61">-&gt;<pos:position pos:line="107" pos:column="66"/></operator><name pos:line="107" pos:column="63">p<pos:position pos:line="107" pos:column="64"/></name></name></expr></argument>, 
                                      <argument><expr><operator pos:line="108" pos:column="39">(<pos:position pos:line="108" pos:column="40"/></operator><name pos:line="108" pos:column="40">long<pos:position pos:line="108" pos:column="44"/></name><operator pos:line="108" pos:column="44">)<pos:position pos:line="108" pos:column="45"/></operator><name pos:line="108" pos:column="45">to<pos:position pos:line="108" pos:column="47"/></name></expr></argument>, <argument><expr><operator pos:line="108" pos:column="49">(<pos:position pos:line="108" pos:column="50"/></operator><name pos:line="108" pos:column="50">long<pos:position pos:line="108" pos:column="54"/></name><operator pos:line="108" pos:column="54">)<pos:position pos:line="108" pos:column="55"/></operator><name><name pos:line="108" pos:column="55">to<pos:position pos:line="108" pos:column="57"/></name><operator pos:line="108" pos:column="57">-&gt;<pos:position pos:line="108" pos:column="62"/></operator><name pos:line="108" pos:column="59">p<pos:position pos:line="108" pos:column="60"/></name></name></expr></argument>)<pos:position pos:line="108" pos:column="61"/></argument_list></call></expr>;<pos:position pos:line="108" pos:column="62"/></expr_stmt>
<cpp:endif pos:line="109" pos:column="1">#<cpp:directive pos:line="109" pos:column="2">endif<pos:position pos:line="109" pos:column="7"/></cpp:directive></cpp:endif>
                    }<pos:position pos:line="110" pos:column="22"/></block></then></if>
                }<pos:position pos:line="111" pos:column="18"/></block></else></if>
                <expr_stmt><expr><call><name pos:line="112" pos:column="17">apr_bucket_delete<pos:position pos:line="112" pos:column="34"/></name><argument_list pos:line="112" pos:column="34">(<argument><expr><name pos:line="112" pos:column="35">b<pos:position pos:line="112" pos:column="36"/></name></expr></argument>)<pos:position pos:line="112" pos:column="37"/></argument_list></call></expr>;<pos:position pos:line="112" pos:column="38"/></expr_stmt>
            }<pos:position pos:line="113" pos:column="14"/></block></then></if></elseif>
            <else pos:line="114" pos:column="13">else <block pos:line="114" pos:column="18">{
                <expr_stmt><expr><call><name pos:line="115" pos:column="17">apr_bucket_setaside<pos:position pos:line="115" pos:column="36"/></name><argument_list pos:line="115" pos:column="36">(<argument><expr><name pos:line="115" pos:column="37">b<pos:position pos:line="115" pos:column="38"/></name></expr></argument>, <argument><expr><name><name pos:line="115" pos:column="40">to<pos:position pos:line="115" pos:column="42"/></name><operator pos:line="115" pos:column="42">-&gt;<pos:position pos:line="115" pos:column="47"/></operator><name pos:line="115" pos:column="44">p<pos:position pos:line="115" pos:column="45"/></name></name></expr></argument>)<pos:position pos:line="115" pos:column="46"/></argument_list></call></expr>;<pos:position pos:line="115" pos:column="47"/></expr_stmt>
                <expr_stmt><expr><call><name pos:line="116" pos:column="17">APR_BUCKET_REMOVE<pos:position pos:line="116" pos:column="34"/></name><argument_list pos:line="116" pos:column="34">(<argument><expr><name pos:line="116" pos:column="35">b<pos:position pos:line="116" pos:column="36"/></name></expr></argument>)<pos:position pos:line="116" pos:column="37"/></argument_list></call></expr>;<pos:position pos:line="116" pos:column="38"/></expr_stmt>
                <expr_stmt><expr><call><name pos:line="117" pos:column="17">APR_BRIGADE_INSERT_TAIL<pos:position pos:line="117" pos:column="40"/></name><argument_list pos:line="117" pos:column="40">(<argument><expr><name pos:line="117" pos:column="41">to<pos:position pos:line="117" pos:column="43"/></name></expr></argument>, <argument><expr><name pos:line="117" pos:column="45">b<pos:position pos:line="117" pos:column="46"/></name></expr></argument>)<pos:position pos:line="117" pos:column="47"/></argument_list></call></expr>;<pos:position pos:line="117" pos:column="48"/></expr_stmt>
<cpp:if pos:line="118" pos:column="1">#<cpp:directive pos:line="118" pos:column="2">if<pos:position pos:line="118" pos:column="4"/></cpp:directive> <expr><name pos:line="118" pos:column="5">LOG_BUCKETS<pos:position pos:line="118" pos:column="16"/></name></expr></cpp:if>
                <expr_stmt><expr><call><name pos:line="119" pos:column="17">ap_log_perror<pos:position pos:line="119" pos:column="30"/></name><argument_list pos:line="119" pos:column="30">(<argument><expr><name pos:line="119" pos:column="31">APLOG_MARK<pos:position pos:line="119" pos:column="41"/></name></expr></argument>, <argument><expr><name pos:line="119" pos:column="43">LOG_LEVEL<pos:position pos:line="119" pos:column="52"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="119" pos:column="54">0<pos:position pos:line="119" pos:column="55"/></literal></expr></argument>, <argument><expr><name><name pos:line="119" pos:column="57">to<pos:position pos:line="119" pos:column="59"/></name><operator pos:line="119" pos:column="59">-&gt;<pos:position pos:line="119" pos:column="64"/></operator><name pos:line="119" pos:column="61">p<pos:position pos:line="119" pos:column="62"/></name></name></expr></argument>,
                              <argument><expr><literal type="string" pos:line="120" pos:column="31">"h2_util_move: %s, passed setaside bucket %ld-%ld "<pos:position pos:line="120" pos:column="82"/></literal>
                              <literal type="string" pos:line="121" pos:column="31">"from=%lx(p=%lx) to=%lx(p=%lx)"<pos:position pos:line="121" pos:column="62"/></literal></expr></argument>,
                              <argument><expr><name pos:line="122" pos:column="31">msg<pos:position pos:line="122" pos:column="34"/></name></expr></argument>, <argument><expr><operator pos:line="122" pos:column="36">(<pos:position pos:line="122" pos:column="37"/></operator><name pos:line="122" pos:column="37">long<pos:position pos:line="122" pos:column="41"/></name><operator pos:line="122" pos:column="41">)<pos:position pos:line="122" pos:column="42"/></operator><name><name pos:line="122" pos:column="42">b<pos:position pos:line="122" pos:column="43"/></name><operator pos:line="122" pos:column="43">-&gt;<pos:position pos:line="122" pos:column="48"/></operator><name pos:line="122" pos:column="45">start<pos:position pos:line="122" pos:column="50"/></name></name></expr></argument>, <argument><expr><operator pos:line="122" pos:column="52">(<pos:position pos:line="122" pos:column="53"/></operator><name pos:line="122" pos:column="53">long<pos:position pos:line="122" pos:column="57"/></name><operator pos:line="122" pos:column="57">)<pos:position pos:line="122" pos:column="58"/></operator><name><name pos:line="122" pos:column="58">b<pos:position pos:line="122" pos:column="59"/></name><operator pos:line="122" pos:column="59">-&gt;<pos:position pos:line="122" pos:column="64"/></operator><name pos:line="122" pos:column="61">length<pos:position pos:line="122" pos:column="67"/></name></name></expr></argument>, 
                              <argument><expr><operator pos:line="123" pos:column="31">(<pos:position pos:line="123" pos:column="32"/></operator><name pos:line="123" pos:column="32">long<pos:position pos:line="123" pos:column="36"/></name><operator pos:line="123" pos:column="36">)<pos:position pos:line="123" pos:column="37"/></operator><name pos:line="123" pos:column="37">from<pos:position pos:line="123" pos:column="41"/></name></expr></argument>, <argument><expr><operator pos:line="123" pos:column="43">(<pos:position pos:line="123" pos:column="44"/></operator><name pos:line="123" pos:column="44">long<pos:position pos:line="123" pos:column="48"/></name><operator pos:line="123" pos:column="48">)<pos:position pos:line="123" pos:column="49"/></operator><name><name pos:line="123" pos:column="49">from<pos:position pos:line="123" pos:column="53"/></name><operator pos:line="123" pos:column="53">-&gt;<pos:position pos:line="123" pos:column="58"/></operator><name pos:line="123" pos:column="55">p<pos:position pos:line="123" pos:column="56"/></name></name></expr></argument>, 
                              <argument><expr><operator pos:line="124" pos:column="31">(<pos:position pos:line="124" pos:column="32"/></operator><name pos:line="124" pos:column="32">long<pos:position pos:line="124" pos:column="36"/></name><operator pos:line="124" pos:column="36">)<pos:position pos:line="124" pos:column="37"/></operator><name pos:line="124" pos:column="37">to<pos:position pos:line="124" pos:column="39"/></name></expr></argument>, <argument><expr><operator pos:line="124" pos:column="41">(<pos:position pos:line="124" pos:column="42"/></operator><name pos:line="124" pos:column="42">long<pos:position pos:line="124" pos:column="46"/></name><operator pos:line="124" pos:column="46">)<pos:position pos:line="124" pos:column="47"/></operator><name><name pos:line="124" pos:column="47">to<pos:position pos:line="124" pos:column="49"/></name><operator pos:line="124" pos:column="49">-&gt;<pos:position pos:line="124" pos:column="54"/></operator><name pos:line="124" pos:column="51">p<pos:position pos:line="124" pos:column="52"/></name></name></expr></argument>)<pos:position pos:line="124" pos:column="53"/></argument_list></call></expr>;<pos:position pos:line="124" pos:column="54"/></expr_stmt>
<cpp:endif pos:line="125" pos:column="1">#<cpp:directive pos:line="125" pos:column="2">endif<pos:position pos:line="125" pos:column="7"/></cpp:directive></cpp:endif>
            }<pos:position pos:line="126" pos:column="14"/></block></else></if>
        }<pos:position pos:line="127" pos:column="10"/></block></while>
    }<pos:position pos:line="128" pos:column="6"/></block></then></if>
    
    <return pos:line="130" pos:column="5">return <expr><name pos:line="130" pos:column="12">status<pos:position pos:line="130" pos:column="18"/></name></expr>;<pos:position pos:line="130" pos:column="19"/></return>
}<pos:position pos:line="131" pos:column="2"/></block></function></unit>

<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/httpd/gumtree/httpd_repos_function_2846_httpd-2.4.20.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">apr_status_t<pos:position pos:line="1" pos:column="20"/></name></type> <name pos:line="1" pos:column="21">arout<pos:position pos:line="1" pos:column="26"/></name><parameter_list pos:line="1" pos:column="26">(<parameter><decl><type><name pos:line="1" pos:column="27">sed_eval_t<pos:position pos:line="1" pos:column="37"/></name> <modifier pos:line="1" pos:column="38">*<pos:position pos:line="1" pos:column="39"/></modifier></type><name pos:line="1" pos:column="39">eval<pos:position pos:line="1" pos:column="43"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="44"/></parameter_list>
<block pos:line="2" pos:column="1">{
    <decl_stmt><decl><type><name pos:line="3" pos:column="5">apr_status_t<pos:position pos:line="3" pos:column="17"/></name></type> <name pos:line="3" pos:column="18">rv<pos:position pos:line="3" pos:column="20"/></name> <init pos:line="3" pos:column="21">= <expr><name pos:line="3" pos:column="23">APR_SUCCESS<pos:position pos:line="3" pos:column="34"/></name></expr></init></decl>;<pos:position pos:line="3" pos:column="35"/></decl_stmt>
    <expr_stmt><expr><name><name pos:line="4" pos:column="5">eval<pos:position pos:line="4" pos:column="9"/></name><operator pos:line="4" pos:column="9">-&gt;<pos:position pos:line="4" pos:column="14"/></operator><name pos:line="4" pos:column="11">aptr<pos:position pos:line="4" pos:column="15"/></name></name> <operator pos:line="4" pos:column="16">=<pos:position pos:line="4" pos:column="17"/></operator> <name><name pos:line="4" pos:column="18">eval<pos:position pos:line="4" pos:column="22"/></name><operator pos:line="4" pos:column="22">-&gt;<pos:position pos:line="4" pos:column="27"/></operator><name pos:line="4" pos:column="24">abuf<pos:position pos:line="4" pos:column="28"/></name></name> <operator pos:line="4" pos:column="29">-<pos:position pos:line="4" pos:column="30"/></operator> <literal type="number" pos:line="4" pos:column="31">1<pos:position pos:line="4" pos:column="32"/></literal></expr>;<pos:position pos:line="4" pos:column="33"/></expr_stmt>
    <while pos:line="5" pos:column="5">while <condition pos:line="5" pos:column="11">(<expr><operator pos:line="5" pos:column="12">*<pos:position pos:line="5" pos:column="13"/></operator><operator pos:line="5" pos:column="13">++<pos:position pos:line="5" pos:column="15"/></operator><name><name pos:line="5" pos:column="15">eval<pos:position pos:line="5" pos:column="19"/></name><operator pos:line="5" pos:column="19">-&gt;<pos:position pos:line="5" pos:column="24"/></operator><name pos:line="5" pos:column="21">aptr<pos:position pos:line="5" pos:column="25"/></name></name></expr>)<pos:position pos:line="5" pos:column="26"/></condition> <block pos:line="5" pos:column="27">{
        <if pos:line="6" pos:column="9">if <condition pos:line="6" pos:column="12">(<expr><name><operator pos:line="6" pos:column="13">(<pos:position pos:line="6" pos:column="14"/></operator><operator pos:line="6" pos:column="14">*<pos:position pos:line="6" pos:column="15"/></operator><name><name pos:line="6" pos:column="15">eval<pos:position pos:line="6" pos:column="19"/></name><operator pos:line="6" pos:column="19">-&gt;<pos:position pos:line="6" pos:column="24"/></operator><name pos:line="6" pos:column="21">aptr<pos:position pos:line="6" pos:column="25"/></name></name><operator pos:line="6" pos:column="25">)<pos:position pos:line="6" pos:column="26"/></operator><operator pos:line="6" pos:column="26">-&gt;<pos:position pos:line="6" pos:column="31"/></operator><name pos:line="6" pos:column="28">command<pos:position pos:line="6" pos:column="35"/></name></name> <operator pos:line="6" pos:column="36">==<pos:position pos:line="6" pos:column="38"/></operator> <name pos:line="6" pos:column="39">ACOM<pos:position pos:line="6" pos:column="43"/></name></expr>)<pos:position pos:line="6" pos:column="44"/></condition><then pos:line="6" pos:column="44"> <block pos:line="6" pos:column="45">{
            <decl_stmt><decl><type><name pos:line="7" pos:column="13">char<pos:position pos:line="7" pos:column="17"/></name> <modifier pos:line="7" pos:column="18">*<pos:position pos:line="7" pos:column="19"/></modifier></type><name pos:line="7" pos:column="19">p1<pos:position pos:line="7" pos:column="21"/></name></decl>;<pos:position pos:line="7" pos:column="22"/></decl_stmt>

            <for pos:line="9" pos:column="13">for <control pos:line="9" pos:column="17">(<init><expr><name pos:line="9" pos:column="18">p1<pos:position pos:line="9" pos:column="20"/></name> <operator pos:line="9" pos:column="21">=<pos:position pos:line="9" pos:column="22"/></operator> <name><operator pos:line="9" pos:column="23">(<pos:position pos:line="9" pos:column="24"/></operator><operator pos:line="9" pos:column="24">*<pos:position pos:line="9" pos:column="25"/></operator><name><name pos:line="9" pos:column="25">eval<pos:position pos:line="9" pos:column="29"/></name><operator pos:line="9" pos:column="29">-&gt;<pos:position pos:line="9" pos:column="34"/></operator><name pos:line="9" pos:column="31">aptr<pos:position pos:line="9" pos:column="35"/></name></name><operator pos:line="9" pos:column="35">)<pos:position pos:line="9" pos:column="36"/></operator><operator pos:line="9" pos:column="36">-&gt;<pos:position pos:line="9" pos:column="41"/></operator><name pos:line="9" pos:column="38">re1<pos:position pos:line="9" pos:column="41"/></name></name></expr>;<pos:position pos:line="9" pos:column="42"/></init> <condition><expr><operator pos:line="9" pos:column="43">*<pos:position pos:line="9" pos:column="44"/></operator><name pos:line="9" pos:column="44">p1<pos:position pos:line="9" pos:column="46"/></name></expr>;<pos:position pos:line="9" pos:column="47"/></condition> <incr><expr><name pos:line="9" pos:column="48">p1<pos:position pos:line="9" pos:column="50"/></name><operator pos:line="9" pos:column="50">++<pos:position pos:line="9" pos:column="52"/></operator></expr></incr>)<pos:position pos:line="9" pos:column="53"/></control><block type="pseudo"><empty_stmt pos:line="9" pos:column="53">;<pos:position pos:line="9" pos:column="54"/></empty_stmt></block></for>
            <expr_stmt><expr><name pos:line="10" pos:column="13">rv<pos:position pos:line="10" pos:column="15"/></name> <operator pos:line="10" pos:column="16">=<pos:position pos:line="10" pos:column="17"/></operator> <call><name pos:line="10" pos:column="18">wline<pos:position pos:line="10" pos:column="23"/></name><argument_list pos:line="10" pos:column="23">(<argument><expr><name pos:line="10" pos:column="24">eval<pos:position pos:line="10" pos:column="28"/></name></expr></argument>, <argument><expr><name><operator pos:line="10" pos:column="30">(<pos:position pos:line="10" pos:column="31"/></operator><operator pos:line="10" pos:column="31">*<pos:position pos:line="10" pos:column="32"/></operator><name><name pos:line="10" pos:column="32">eval<pos:position pos:line="10" pos:column="36"/></name><operator pos:line="10" pos:column="36">-&gt;<pos:position pos:line="10" pos:column="41"/></operator><name pos:line="10" pos:column="38">aptr<pos:position pos:line="10" pos:column="42"/></name></name><operator pos:line="10" pos:column="42">)<pos:position pos:line="10" pos:column="43"/></operator><operator pos:line="10" pos:column="43">-&gt;<pos:position pos:line="10" pos:column="48"/></operator><name pos:line="10" pos:column="45">re1<pos:position pos:line="10" pos:column="48"/></name></name></expr></argument>, <argument><expr><name pos:line="10" pos:column="50">p1<pos:position pos:line="10" pos:column="52"/></name> <operator pos:line="10" pos:column="53">-<pos:position pos:line="10" pos:column="54"/></operator> <name><operator pos:line="10" pos:column="55">(<pos:position pos:line="10" pos:column="56"/></operator><operator pos:line="10" pos:column="56">*<pos:position pos:line="10" pos:column="57"/></operator><name><name pos:line="10" pos:column="57">eval<pos:position pos:line="10" pos:column="61"/></name><operator pos:line="10" pos:column="61">-&gt;<pos:position pos:line="10" pos:column="66"/></operator><name pos:line="10" pos:column="63">aptr<pos:position pos:line="10" pos:column="67"/></name></name><operator pos:line="10" pos:column="67">)<pos:position pos:line="10" pos:column="68"/></operator><operator pos:line="10" pos:column="68">-&gt;<pos:position pos:line="10" pos:column="73"/></operator><name pos:line="10" pos:column="70">re1<pos:position pos:line="10" pos:column="73"/></name></name></expr></argument>)<pos:position pos:line="10" pos:column="74"/></argument_list></call></expr>;<pos:position pos:line="10" pos:column="75"/></expr_stmt>
            <if pos:line="11" pos:column="13">if <condition pos:line="11" pos:column="16">(<expr><name pos:line="11" pos:column="17">rv<pos:position pos:line="11" pos:column="19"/></name> <operator pos:line="11" pos:column="20">!=<pos:position pos:line="11" pos:column="22"/></operator> <name pos:line="11" pos:column="23">APR_SUCCESS<pos:position pos:line="11" pos:column="34"/></name></expr>)<pos:position pos:line="11" pos:column="35"/></condition><then pos:line="11" pos:column="35">
                <block type="pseudo"><return pos:line="12" pos:column="17">return <expr><name pos:line="12" pos:column="24">rv<pos:position pos:line="12" pos:column="26"/></name></expr>;<pos:position pos:line="12" pos:column="27"/></return></block></then></if>
        }<pos:position pos:line="13" pos:column="10"/></block></then> <else pos:line="13" pos:column="11">else <block pos:line="13" pos:column="16">{
            <decl_stmt><decl><type><name pos:line="14" pos:column="13">apr_file_t<pos:position pos:line="14" pos:column="23"/></name> <modifier pos:line="14" pos:column="24">*<pos:position pos:line="14" pos:column="25"/></modifier></type><name pos:line="14" pos:column="25">fi<pos:position pos:line="14" pos:column="27"/></name> <init pos:line="14" pos:column="28">= <expr><name pos:line="14" pos:column="30">NULL<pos:position pos:line="14" pos:column="34"/></name></expr></init></decl>;<pos:position pos:line="14" pos:column="35"/></decl_stmt>
            <decl_stmt><decl><type><name pos:line="15" pos:column="13">char<pos:position pos:line="15" pos:column="17"/></name></type> <name><name pos:line="15" pos:column="18">buf<pos:position pos:line="15" pos:column="21"/></name><index pos:line="15" pos:column="21">[<expr><literal type="number" pos:line="15" pos:column="22">512<pos:position pos:line="15" pos:column="25"/></literal></expr>]<pos:position pos:line="15" pos:column="26"/></index></name></decl>;<pos:position pos:line="15" pos:column="27"/></decl_stmt>
            <decl_stmt><decl><type><name pos:line="16" pos:column="13">apr_size_t<pos:position pos:line="16" pos:column="23"/></name></type> <name pos:line="16" pos:column="24">n<pos:position pos:line="16" pos:column="25"/></name> <init pos:line="16" pos:column="26">= <expr><sizeof pos:line="16" pos:column="28">sizeof<argument_list pos:line="16" pos:column="34">(<argument><expr><name pos:line="16" pos:column="35">buf<pos:position pos:line="16" pos:column="38"/></name></expr></argument>)<pos:position pos:line="16" pos:column="39"/></argument_list></sizeof></expr></init></decl>;<pos:position pos:line="16" pos:column="40"/></decl_stmt>

            <if pos:line="18" pos:column="13">if <condition pos:line="18" pos:column="16">(<expr><call><name pos:line="18" pos:column="17">apr_file_open<pos:position pos:line="18" pos:column="30"/></name><argument_list pos:line="18" pos:column="30">(<argument><expr><operator pos:line="18" pos:column="31">&amp;<pos:position pos:line="18" pos:column="36"/></operator><name pos:line="18" pos:column="32">fi<pos:position pos:line="18" pos:column="34"/></name></expr></argument>, <argument><expr><name><operator pos:line="18" pos:column="36">(<pos:position pos:line="18" pos:column="37"/></operator><operator pos:line="18" pos:column="37">*<pos:position pos:line="18" pos:column="38"/></operator><name><name pos:line="18" pos:column="38">eval<pos:position pos:line="18" pos:column="42"/></name><operator pos:line="18" pos:column="42">-&gt;<pos:position pos:line="18" pos:column="47"/></operator><name pos:line="18" pos:column="44">aptr<pos:position pos:line="18" pos:column="48"/></name></name><operator pos:line="18" pos:column="48">)<pos:position pos:line="18" pos:column="49"/></operator><operator pos:line="18" pos:column="49">-&gt;<pos:position pos:line="18" pos:column="54"/></operator><name pos:line="18" pos:column="51">re1<pos:position pos:line="18" pos:column="54"/></name></name></expr></argument>, <argument><expr><name pos:line="18" pos:column="56">APR_READ<pos:position pos:line="18" pos:column="64"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="18" pos:column="66">0<pos:position pos:line="18" pos:column="67"/></literal></expr></argument>, <argument><expr><name><name pos:line="18" pos:column="69">eval<pos:position pos:line="18" pos:column="73"/></name><operator pos:line="18" pos:column="73">-&gt;<pos:position pos:line="18" pos:column="78"/></operator><name pos:line="18" pos:column="75">pool<pos:position pos:line="18" pos:column="79"/></name></name></expr></argument>)<pos:position pos:line="18" pos:column="80"/></argument_list></call>
                              <operator pos:line="19" pos:column="31">!=<pos:position pos:line="19" pos:column="33"/></operator> <name pos:line="19" pos:column="34">APR_SUCCESS<pos:position pos:line="19" pos:column="45"/></name></expr>)<pos:position pos:line="19" pos:column="46"/></condition><then pos:line="19" pos:column="46">
                <block type="pseudo"><continue pos:line="20" pos:column="17">continue;<pos:position pos:line="20" pos:column="26"/></continue></block></then></if>
            <while pos:line="21" pos:column="13">while <condition pos:line="21" pos:column="19">(<expr><operator pos:line="21" pos:column="20">(<pos:position pos:line="21" pos:column="21"/></operator><call><name pos:line="21" pos:column="21">apr_file_read<pos:position pos:line="21" pos:column="34"/></name><argument_list pos:line="21" pos:column="34">(<argument><expr><name pos:line="21" pos:column="35">fi<pos:position pos:line="21" pos:column="37"/></name></expr></argument>, <argument><expr><name pos:line="21" pos:column="39">buf<pos:position pos:line="21" pos:column="42"/></name></expr></argument>, <argument><expr><operator pos:line="21" pos:column="44">&amp;<pos:position pos:line="21" pos:column="49"/></operator><name pos:line="21" pos:column="45">n<pos:position pos:line="21" pos:column="46"/></name></expr></argument>)<pos:position pos:line="21" pos:column="47"/></argument_list></call><operator pos:line="21" pos:column="47">)<pos:position pos:line="21" pos:column="48"/></operator> <operator pos:line="21" pos:column="49">==<pos:position pos:line="21" pos:column="51"/></operator> <name pos:line="21" pos:column="52">APR_SUCCESS<pos:position pos:line="21" pos:column="63"/></name></expr>)<pos:position pos:line="21" pos:column="64"/></condition> <block pos:line="21" pos:column="65">{
                <if pos:line="22" pos:column="17">if <condition pos:line="22" pos:column="20">(<expr><name pos:line="22" pos:column="21">n<pos:position pos:line="22" pos:column="22"/></name> <operator pos:line="22" pos:column="23">==<pos:position pos:line="22" pos:column="25"/></operator> <literal type="number" pos:line="22" pos:column="26">0<pos:position pos:line="22" pos:column="27"/></literal></expr>)<pos:position pos:line="22" pos:column="28"/></condition><then pos:line="22" pos:column="28">
                    <block type="pseudo"><break pos:line="23" pos:column="21">break;<pos:position pos:line="23" pos:column="27"/></break></block></then></if>
                <expr_stmt><expr><name pos:line="24" pos:column="17">rv<pos:position pos:line="24" pos:column="19"/></name> <operator pos:line="24" pos:column="20">=<pos:position pos:line="24" pos:column="21"/></operator> <call><name><name pos:line="24" pos:column="22">eval<pos:position pos:line="24" pos:column="26"/></name><operator pos:line="24" pos:column="26">-&gt;<pos:position pos:line="24" pos:column="31"/></operator><name pos:line="24" pos:column="28">writefn<pos:position pos:line="24" pos:column="35"/></name></name><argument_list pos:line="24" pos:column="35">(<argument><expr><name><name pos:line="24" pos:column="36">eval<pos:position pos:line="24" pos:column="40"/></name><operator pos:line="24" pos:column="40">-&gt;<pos:position pos:line="24" pos:column="45"/></operator><name pos:line="24" pos:column="42">fout<pos:position pos:line="24" pos:column="46"/></name></name></expr></argument>, <argument><expr><name pos:line="24" pos:column="48">buf<pos:position pos:line="24" pos:column="51"/></name></expr></argument>, <argument><expr><name pos:line="24" pos:column="53">n<pos:position pos:line="24" pos:column="54"/></name></expr></argument>)<pos:position pos:line="24" pos:column="55"/></argument_list></call></expr>;<pos:position pos:line="24" pos:column="56"/></expr_stmt>
                <if pos:line="25" pos:column="17">if <condition pos:line="25" pos:column="20">(<expr><name pos:line="25" pos:column="21">rv<pos:position pos:line="25" pos:column="23"/></name> <operator pos:line="25" pos:column="24">!=<pos:position pos:line="25" pos:column="26"/></operator> <name pos:line="25" pos:column="27">APR_SUCCESS<pos:position pos:line="25" pos:column="38"/></name></expr>)<pos:position pos:line="25" pos:column="39"/></condition><then pos:line="25" pos:column="39"> <block pos:line="25" pos:column="40">{
                    <expr_stmt><expr><call><name pos:line="26" pos:column="21">apr_file_close<pos:position pos:line="26" pos:column="35"/></name><argument_list pos:line="26" pos:column="35">(<argument><expr><name pos:line="26" pos:column="36">fi<pos:position pos:line="26" pos:column="38"/></name></expr></argument>)<pos:position pos:line="26" pos:column="39"/></argument_list></call></expr>;<pos:position pos:line="26" pos:column="40"/></expr_stmt>
                    <return pos:line="27" pos:column="21">return <expr><name pos:line="27" pos:column="28">rv<pos:position pos:line="27" pos:column="30"/></name></expr>;<pos:position pos:line="27" pos:column="31"/></return>
                }<pos:position pos:line="28" pos:column="18"/></block></then></if>
                <expr_stmt><expr><name pos:line="29" pos:column="17">n<pos:position pos:line="29" pos:column="18"/></name> <operator pos:line="29" pos:column="19">=<pos:position pos:line="29" pos:column="20"/></operator> <sizeof pos:line="29" pos:column="21">sizeof<argument_list pos:line="29" pos:column="27">(<argument><expr><name pos:line="29" pos:column="28">buf<pos:position pos:line="29" pos:column="31"/></name></expr></argument>)<pos:position pos:line="29" pos:column="32"/></argument_list></sizeof></expr>;<pos:position pos:line="29" pos:column="33"/></expr_stmt>
            }<pos:position pos:line="30" pos:column="14"/></block></while>
            <expr_stmt><expr><call><name pos:line="31" pos:column="13">apr_file_close<pos:position pos:line="31" pos:column="27"/></name><argument_list pos:line="31" pos:column="27">(<argument><expr><name pos:line="31" pos:column="28">fi<pos:position pos:line="31" pos:column="30"/></name></expr></argument>)<pos:position pos:line="31" pos:column="31"/></argument_list></call></expr>;<pos:position pos:line="31" pos:column="32"/></expr_stmt>
        }<pos:position pos:line="32" pos:column="10"/></block></else></if>
    }<pos:position pos:line="33" pos:column="6"/></block></while>
    <expr_stmt><expr><name><name pos:line="34" pos:column="5">eval<pos:position pos:line="34" pos:column="9"/></name><operator pos:line="34" pos:column="9">-&gt;<pos:position pos:line="34" pos:column="14"/></operator><name pos:line="34" pos:column="11">aptr<pos:position pos:line="34" pos:column="15"/></name></name> <operator pos:line="34" pos:column="16">=<pos:position pos:line="34" pos:column="17"/></operator> <name><name pos:line="34" pos:column="18">eval<pos:position pos:line="34" pos:column="22"/></name><operator pos:line="34" pos:column="22">-&gt;<pos:position pos:line="34" pos:column="27"/></operator><name pos:line="34" pos:column="24">abuf<pos:position pos:line="34" pos:column="28"/></name></name></expr>;<pos:position pos:line="34" pos:column="29"/></expr_stmt>
    <expr_stmt><expr><operator pos:line="35" pos:column="5">*<pos:position pos:line="35" pos:column="6"/></operator><name><name pos:line="35" pos:column="6">eval<pos:position pos:line="35" pos:column="10"/></name><operator pos:line="35" pos:column="10">-&gt;<pos:position pos:line="35" pos:column="15"/></operator><name pos:line="35" pos:column="12">aptr<pos:position pos:line="35" pos:column="16"/></name></name> <operator pos:line="35" pos:column="17">=<pos:position pos:line="35" pos:column="18"/></operator> <name pos:line="35" pos:column="19">NULL<pos:position pos:line="35" pos:column="23"/></name></expr>;<pos:position pos:line="35" pos:column="24"/></expr_stmt>
    <return pos:line="36" pos:column="5">return <expr><name pos:line="36" pos:column="12">rv<pos:position pos:line="36" pos:column="14"/></name></expr>;<pos:position pos:line="36" pos:column="15"/></return>
}<pos:position pos:line="37" pos:column="2"/></block></function></unit>

<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/httpd/gumtree/httpd_repos_function_327_httpd-2.2.2.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">int<pos:position pos:line="1" pos:column="11"/></name></type> <name pos:line="1" pos:column="12">dav_parse_range<pos:position pos:line="1" pos:column="27"/></name><parameter_list pos:line="1" pos:column="27">(<parameter><decl><type><name pos:line="1" pos:column="28">request_rec<pos:position pos:line="1" pos:column="39"/></name> <modifier pos:line="1" pos:column="40">*<pos:position pos:line="1" pos:column="41"/></modifier></type><name pos:line="1" pos:column="41">r<pos:position pos:line="1" pos:column="42"/></name></decl></parameter>,
                           <parameter><decl><type><name pos:line="2" pos:column="28">apr_off_t<pos:position pos:line="2" pos:column="37"/></name> <modifier pos:line="2" pos:column="38">*<pos:position pos:line="2" pos:column="39"/></modifier></type><name pos:line="2" pos:column="39">range_start<pos:position pos:line="2" pos:column="50"/></name></decl></parameter>, <parameter><decl><type><name pos:line="2" pos:column="52">apr_off_t<pos:position pos:line="2" pos:column="61"/></name> <modifier pos:line="2" pos:column="62">*<pos:position pos:line="2" pos:column="63"/></modifier></type><name pos:line="2" pos:column="63">range_end<pos:position pos:line="2" pos:column="72"/></name></decl></parameter>)<pos:position pos:line="2" pos:column="73"/></parameter_list>
<block pos:line="3" pos:column="1">{
    <decl_stmt><decl><type><specifier pos:line="4" pos:column="5">const<pos:position pos:line="4" pos:column="10"/></specifier> <name pos:line="4" pos:column="11">char<pos:position pos:line="4" pos:column="15"/></name> <modifier pos:line="4" pos:column="16">*<pos:position pos:line="4" pos:column="17"/></modifier></type><name pos:line="4" pos:column="17">range_c<pos:position pos:line="4" pos:column="24"/></name></decl>;<pos:position pos:line="4" pos:column="25"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="5" pos:column="5">char<pos:position pos:line="5" pos:column="9"/></name> <modifier pos:line="5" pos:column="10">*<pos:position pos:line="5" pos:column="11"/></modifier></type><name pos:line="5" pos:column="11">range<pos:position pos:line="5" pos:column="16"/></name></decl>;<pos:position pos:line="5" pos:column="17"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="6" pos:column="5">char<pos:position pos:line="6" pos:column="9"/></name> <modifier pos:line="6" pos:column="10">*<pos:position pos:line="6" pos:column="11"/></modifier></type><name pos:line="6" pos:column="11">dash<pos:position pos:line="6" pos:column="15"/></name></decl>;<pos:position pos:line="6" pos:column="16"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="7" pos:column="5">char<pos:position pos:line="7" pos:column="9"/></name> <modifier pos:line="7" pos:column="10">*<pos:position pos:line="7" pos:column="11"/></modifier></type><name pos:line="7" pos:column="11">slash<pos:position pos:line="7" pos:column="16"/></name></decl>;<pos:position pos:line="7" pos:column="17"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="8" pos:column="5">char<pos:position pos:line="8" pos:column="9"/></name> <modifier pos:line="8" pos:column="10">*<pos:position pos:line="8" pos:column="11"/></modifier></type><name pos:line="8" pos:column="11">errp<pos:position pos:line="8" pos:column="15"/></name></decl>;<pos:position pos:line="8" pos:column="16"/></decl_stmt>

    <expr_stmt><expr><name pos:line="10" pos:column="5">range_c<pos:position pos:line="10" pos:column="12"/></name> <operator pos:line="10" pos:column="13">=<pos:position pos:line="10" pos:column="14"/></operator> <call><name pos:line="10" pos:column="15">apr_table_get<pos:position pos:line="10" pos:column="28"/></name><argument_list pos:line="10" pos:column="28">(<argument><expr><name><name pos:line="10" pos:column="29">r<pos:position pos:line="10" pos:column="30"/></name><operator pos:line="10" pos:column="30">-&gt;<pos:position pos:line="10" pos:column="35"/></operator><name pos:line="10" pos:column="32">headers_in<pos:position pos:line="10" pos:column="42"/></name></name></expr></argument>, <argument><expr><literal type="string" pos:line="10" pos:column="44">"content-range"<pos:position pos:line="10" pos:column="59"/></literal></expr></argument>)<pos:position pos:line="10" pos:column="60"/></argument_list></call></expr>;<pos:position pos:line="10" pos:column="61"/></expr_stmt>
    <if pos:line="11" pos:column="5">if <condition pos:line="11" pos:column="8">(<expr><name pos:line="11" pos:column="9">range_c<pos:position pos:line="11" pos:column="16"/></name> <operator pos:line="11" pos:column="17">==<pos:position pos:line="11" pos:column="19"/></operator> <name pos:line="11" pos:column="20">NULL<pos:position pos:line="11" pos:column="24"/></name></expr>)<pos:position pos:line="11" pos:column="25"/></condition><then pos:line="11" pos:column="25">
        <block type="pseudo"><return pos:line="12" pos:column="9">return <expr><literal type="number" pos:line="12" pos:column="16">0<pos:position pos:line="12" pos:column="17"/></literal></expr>;<pos:position pos:line="12" pos:column="18"/></return></block></then></if>

    <expr_stmt><expr><name pos:line="14" pos:column="5">range<pos:position pos:line="14" pos:column="10"/></name> <operator pos:line="14" pos:column="11">=<pos:position pos:line="14" pos:column="12"/></operator> <call><name pos:line="14" pos:column="13">apr_pstrdup<pos:position pos:line="14" pos:column="24"/></name><argument_list pos:line="14" pos:column="24">(<argument><expr><name><name pos:line="14" pos:column="25">r<pos:position pos:line="14" pos:column="26"/></name><operator pos:line="14" pos:column="26">-&gt;<pos:position pos:line="14" pos:column="31"/></operator><name pos:line="14" pos:column="28">pool<pos:position pos:line="14" pos:column="32"/></name></name></expr></argument>, <argument><expr><name pos:line="14" pos:column="34">range_c<pos:position pos:line="14" pos:column="41"/></name></expr></argument>)<pos:position pos:line="14" pos:column="42"/></argument_list></call></expr>;<pos:position pos:line="14" pos:column="43"/></expr_stmt>
    <if pos:line="15" pos:column="5">if <condition pos:line="15" pos:column="8">(<expr><call><name pos:line="15" pos:column="9">strncasecmp<pos:position pos:line="15" pos:column="20"/></name><argument_list pos:line="15" pos:column="20">(<argument><expr><name pos:line="15" pos:column="21">range<pos:position pos:line="15" pos:column="26"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="15" pos:column="28">"bytes "<pos:position pos:line="15" pos:column="36"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="15" pos:column="38">6<pos:position pos:line="15" pos:column="39"/></literal></expr></argument>)<pos:position pos:line="15" pos:column="40"/></argument_list></call> <operator pos:line="15" pos:column="41">!=<pos:position pos:line="15" pos:column="43"/></operator> <literal type="number" pos:line="15" pos:column="44">0<pos:position pos:line="15" pos:column="45"/></literal>
        <operator pos:line="16" pos:column="9">||<pos:position pos:line="16" pos:column="11"/></operator> <operator pos:line="16" pos:column="12">(<pos:position pos:line="16" pos:column="13"/></operator><name pos:line="16" pos:column="13">dash<pos:position pos:line="16" pos:column="17"/></name> <operator pos:line="16" pos:column="18">=<pos:position pos:line="16" pos:column="19"/></operator> <call><name pos:line="16" pos:column="20">ap_strchr<pos:position pos:line="16" pos:column="29"/></name><argument_list pos:line="16" pos:column="29">(<argument><expr><name pos:line="16" pos:column="30">range<pos:position pos:line="16" pos:column="35"/></name></expr></argument>, <argument><expr><literal type="char" pos:line="16" pos:column="37">'-'<pos:position pos:line="16" pos:column="40"/></literal></expr></argument>)<pos:position pos:line="16" pos:column="41"/></argument_list></call><operator pos:line="16" pos:column="41">)<pos:position pos:line="16" pos:column="42"/></operator> <operator pos:line="16" pos:column="43">==<pos:position pos:line="16" pos:column="45"/></operator> <name pos:line="16" pos:column="46">NULL<pos:position pos:line="16" pos:column="50"/></name>
        <operator pos:line="17" pos:column="9">||<pos:position pos:line="17" pos:column="11"/></operator> <operator pos:line="17" pos:column="12">(<pos:position pos:line="17" pos:column="13"/></operator><name pos:line="17" pos:column="13">slash<pos:position pos:line="17" pos:column="18"/></name> <operator pos:line="17" pos:column="19">=<pos:position pos:line="17" pos:column="20"/></operator> <call><name pos:line="17" pos:column="21">ap_strchr<pos:position pos:line="17" pos:column="30"/></name><argument_list pos:line="17" pos:column="30">(<argument><expr><name pos:line="17" pos:column="31">range<pos:position pos:line="17" pos:column="36"/></name></expr></argument>, <argument><expr><literal type="char" pos:line="17" pos:column="38">'/'<pos:position pos:line="17" pos:column="41"/></literal></expr></argument>)<pos:position pos:line="17" pos:column="42"/></argument_list></call><operator pos:line="17" pos:column="42">)<pos:position pos:line="17" pos:column="43"/></operator> <operator pos:line="17" pos:column="44">==<pos:position pos:line="17" pos:column="46"/></operator> <name pos:line="17" pos:column="47">NULL<pos:position pos:line="17" pos:column="51"/></name></expr>)<pos:position pos:line="17" pos:column="52"/></condition><then pos:line="17" pos:column="52"> <block pos:line="17" pos:column="53">{
        <comment type="block" pos:line="18" pos:column="9">/* malformed header. ignore it (per S14.16 of RFC2616) */</comment>
        <return pos:line="19" pos:column="9">return <expr><literal type="number" pos:line="19" pos:column="16">0<pos:position pos:line="19" pos:column="17"/></literal></expr>;<pos:position pos:line="19" pos:column="18"/></return>
    }<pos:position pos:line="20" pos:column="6"/></block></then></if>

    <expr_stmt><expr><operator pos:line="22" pos:column="5">*<pos:position pos:line="22" pos:column="6"/></operator><name pos:line="22" pos:column="6">dash<pos:position pos:line="22" pos:column="10"/></name><operator pos:line="22" pos:column="10">++<pos:position pos:line="22" pos:column="12"/></operator> <operator pos:line="22" pos:column="13">=<pos:position pos:line="22" pos:column="14"/></operator> <operator pos:line="22" pos:column="15">*<pos:position pos:line="22" pos:column="16"/></operator><name pos:line="22" pos:column="16">slash<pos:position pos:line="22" pos:column="21"/></name><operator pos:line="22" pos:column="21">++<pos:position pos:line="22" pos:column="23"/></operator> <operator pos:line="22" pos:column="24">=<pos:position pos:line="22" pos:column="25"/></operator> <literal type="char" pos:line="22" pos:column="26">'\0'<pos:position pos:line="22" pos:column="30"/></literal></expr>;<pos:position pos:line="22" pos:column="31"/></expr_stmt>

    <comment type="block" pos:line="24" pos:column="5">/* ignore invalid ranges. (per S14.16 of RFC2616) */</comment>
    <if pos:line="25" pos:column="5">if <condition pos:line="25" pos:column="8">(<expr><call><name pos:line="25" pos:column="9">apr_strtoff<pos:position pos:line="25" pos:column="20"/></name><argument_list pos:line="25" pos:column="20">(<argument><expr><name pos:line="25" pos:column="21">range_start<pos:position pos:line="25" pos:column="32"/></name></expr></argument>, <argument><expr><name pos:line="25" pos:column="34">range<pos:position pos:line="25" pos:column="39"/></name> <operator pos:line="25" pos:column="40">+<pos:position pos:line="25" pos:column="41"/></operator> <literal type="number" pos:line="25" pos:column="42">6<pos:position pos:line="25" pos:column="43"/></literal></expr></argument>, <argument><expr><operator pos:line="25" pos:column="45">&amp;<pos:position pos:line="25" pos:column="50"/></operator><name pos:line="25" pos:column="46">errp<pos:position pos:line="25" pos:column="50"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="25" pos:column="52">10<pos:position pos:line="25" pos:column="54"/></literal></expr></argument>)<pos:position pos:line="25" pos:column="55"/></argument_list></call>
        <operator pos:line="26" pos:column="9">||<pos:position pos:line="26" pos:column="11"/></operator> <operator pos:line="26" pos:column="12">*<pos:position pos:line="26" pos:column="13"/></operator><name pos:line="26" pos:column="13">errp<pos:position pos:line="26" pos:column="17"/></name> <operator pos:line="26" pos:column="18">||<pos:position pos:line="26" pos:column="20"/></operator> <operator pos:line="26" pos:column="21">*<pos:position pos:line="26" pos:column="22"/></operator><name pos:line="26" pos:column="22">range_start<pos:position pos:line="26" pos:column="33"/></name> <operator pos:line="26" pos:column="34">&lt;<pos:position pos:line="26" pos:column="38"/></operator> <literal type="number" pos:line="26" pos:column="36">0<pos:position pos:line="26" pos:column="37"/></literal></expr>)<pos:position pos:line="26" pos:column="38"/></condition><then pos:line="26" pos:column="38"> <block pos:line="26" pos:column="39">{
        <return pos:line="27" pos:column="9">return <expr><literal type="number" pos:line="27" pos:column="16">0<pos:position pos:line="27" pos:column="17"/></literal></expr>;<pos:position pos:line="27" pos:column="18"/></return>
    }<pos:position pos:line="28" pos:column="6"/></block></then></if>

    <if pos:line="30" pos:column="5">if <condition pos:line="30" pos:column="8">(<expr><call><name pos:line="30" pos:column="9">apr_strtoff<pos:position pos:line="30" pos:column="20"/></name><argument_list pos:line="30" pos:column="20">(<argument><expr><name pos:line="30" pos:column="21">range_end<pos:position pos:line="30" pos:column="30"/></name></expr></argument>, <argument><expr><name pos:line="30" pos:column="32">dash<pos:position pos:line="30" pos:column="36"/></name></expr></argument>, <argument><expr><operator pos:line="30" pos:column="38">&amp;<pos:position pos:line="30" pos:column="43"/></operator><name pos:line="30" pos:column="39">errp<pos:position pos:line="30" pos:column="43"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="30" pos:column="45">10<pos:position pos:line="30" pos:column="47"/></literal></expr></argument>)<pos:position pos:line="30" pos:column="48"/></argument_list></call>
        <operator pos:line="31" pos:column="9">||<pos:position pos:line="31" pos:column="11"/></operator> <operator pos:line="31" pos:column="12">*<pos:position pos:line="31" pos:column="13"/></operator><name pos:line="31" pos:column="13">errp<pos:position pos:line="31" pos:column="17"/></name> <operator pos:line="31" pos:column="18">||<pos:position pos:line="31" pos:column="20"/></operator> <operator pos:line="31" pos:column="21">*<pos:position pos:line="31" pos:column="22"/></operator><name pos:line="31" pos:column="22">range_end<pos:position pos:line="31" pos:column="31"/></name> <operator pos:line="31" pos:column="32">&lt;<pos:position pos:line="31" pos:column="36"/></operator> <literal type="number" pos:line="31" pos:column="34">0<pos:position pos:line="31" pos:column="35"/></literal> <operator pos:line="31" pos:column="36">||<pos:position pos:line="31" pos:column="38"/></operator> <operator pos:line="31" pos:column="39">*<pos:position pos:line="31" pos:column="40"/></operator><name pos:line="31" pos:column="40">range_end<pos:position pos:line="31" pos:column="49"/></name> <operator pos:line="31" pos:column="50">&lt;<pos:position pos:line="31" pos:column="54"/></operator> <operator pos:line="31" pos:column="52">*<pos:position pos:line="31" pos:column="53"/></operator><name pos:line="31" pos:column="53">range_start<pos:position pos:line="31" pos:column="64"/></name></expr>)<pos:position pos:line="31" pos:column="65"/></condition><then pos:line="31" pos:column="65"> <block pos:line="31" pos:column="66">{
        <return pos:line="32" pos:column="9">return <expr><literal type="number" pos:line="32" pos:column="16">0<pos:position pos:line="32" pos:column="17"/></literal></expr>;<pos:position pos:line="32" pos:column="18"/></return>
    }<pos:position pos:line="33" pos:column="6"/></block></then></if>

    <if pos:line="35" pos:column="5">if <condition pos:line="35" pos:column="8">(<expr><operator pos:line="35" pos:column="9">*<pos:position pos:line="35" pos:column="10"/></operator><name pos:line="35" pos:column="10">slash<pos:position pos:line="35" pos:column="15"/></name> <operator pos:line="35" pos:column="16">!=<pos:position pos:line="35" pos:column="18"/></operator> <literal type="char" pos:line="35" pos:column="19">'*'<pos:position pos:line="35" pos:column="22"/></literal></expr>)<pos:position pos:line="35" pos:column="23"/></condition><then pos:line="35" pos:column="23"> <block pos:line="35" pos:column="24">{
        <decl_stmt><decl><type><name pos:line="36" pos:column="9">apr_off_t<pos:position pos:line="36" pos:column="18"/></name></type> <name pos:line="36" pos:column="19">dummy<pos:position pos:line="36" pos:column="24"/></name></decl>;<pos:position pos:line="36" pos:column="25"/></decl_stmt>

        <if pos:line="38" pos:column="9">if <condition pos:line="38" pos:column="12">(<expr><call><name pos:line="38" pos:column="13">apr_strtoff<pos:position pos:line="38" pos:column="24"/></name><argument_list pos:line="38" pos:column="24">(<argument><expr><operator pos:line="38" pos:column="25">&amp;<pos:position pos:line="38" pos:column="30"/></operator><name pos:line="38" pos:column="26">dummy<pos:position pos:line="38" pos:column="31"/></name></expr></argument>, <argument><expr><name pos:line="38" pos:column="33">slash<pos:position pos:line="38" pos:column="38"/></name></expr></argument>, <argument><expr><operator pos:line="38" pos:column="40">&amp;<pos:position pos:line="38" pos:column="45"/></operator><name pos:line="38" pos:column="41">errp<pos:position pos:line="38" pos:column="45"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="38" pos:column="47">10<pos:position pos:line="38" pos:column="49"/></literal></expr></argument>)<pos:position pos:line="38" pos:column="50"/></argument_list></call>
            <operator pos:line="39" pos:column="13">||<pos:position pos:line="39" pos:column="15"/></operator> <operator pos:line="39" pos:column="16">*<pos:position pos:line="39" pos:column="17"/></operator><name pos:line="39" pos:column="17">errp<pos:position pos:line="39" pos:column="21"/></name> <operator pos:line="39" pos:column="22">||<pos:position pos:line="39" pos:column="24"/></operator> <name pos:line="39" pos:column="25">dummy<pos:position pos:line="39" pos:column="30"/></name> <operator pos:line="39" pos:column="31">&lt;=<pos:position pos:line="39" pos:column="36"/></operator> <operator pos:line="39" pos:column="34">*<pos:position pos:line="39" pos:column="35"/></operator><name pos:line="39" pos:column="35">range_end<pos:position pos:line="39" pos:column="44"/></name></expr>)<pos:position pos:line="39" pos:column="45"/></condition><then pos:line="39" pos:column="45"> <block pos:line="39" pos:column="46">{
            <return pos:line="40" pos:column="13">return <expr><literal type="number" pos:line="40" pos:column="20">0<pos:position pos:line="40" pos:column="21"/></literal></expr>;<pos:position pos:line="40" pos:column="22"/></return>
        }<pos:position pos:line="41" pos:column="10"/></block></then></if>
    }<pos:position pos:line="42" pos:column="6"/></block></then></if>

    <comment type="block" pos:line="44" pos:column="5">/* we now have a valid range */</comment>
    <return pos:line="45" pos:column="5">return <expr><literal type="number" pos:line="45" pos:column="12">1<pos:position pos:line="45" pos:column="13"/></literal></expr>;<pos:position pos:line="45" pos:column="14"/></return>
}<pos:position pos:line="46" pos:column="2"/></block></function></unit>

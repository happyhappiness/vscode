<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/httpd/gumtree/httpd_repos_function_2682_httpd-2.0.44.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">char<pos:position pos:line="1" pos:column="12"/></name> <modifier pos:line="1" pos:column="13">*<pos:position pos:line="1" pos:column="14"/></modifier><modifier pos:line="1" pos:column="14">*<pos:position pos:line="1" pos:column="15"/></modifier></type><name pos:line="1" pos:column="15">ldap_str2charray<pos:position pos:line="1" pos:column="31"/></name><parameter_list pos:line="1" pos:column="31">(<parameter><decl><type><specifier pos:line="1" pos:column="32">const<pos:position pos:line="1" pos:column="37"/></specifier> <name pos:line="1" pos:column="38">char<pos:position pos:line="1" pos:column="42"/></name> <modifier pos:line="1" pos:column="43">*<pos:position pos:line="1" pos:column="44"/></modifier></type><name pos:line="1" pos:column="44">str_in<pos:position pos:line="1" pos:column="50"/></name></decl></parameter>, <parameter><decl><type><specifier pos:line="1" pos:column="52">const<pos:position pos:line="1" pos:column="57"/></specifier> <name pos:line="1" pos:column="58">char<pos:position pos:line="1" pos:column="62"/></name> <modifier pos:line="1" pos:column="63">*<pos:position pos:line="1" pos:column="64"/></modifier></type><name pos:line="1" pos:column="64">brkstr<pos:position pos:line="1" pos:column="70"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="71"/></parameter_list>
<block pos:line="2" pos:column="1">{
    <decl_stmt><decl><type><name pos:line="3" pos:column="5">char<pos:position pos:line="3" pos:column="9"/></name>    <modifier pos:line="3" pos:column="13">*<pos:position pos:line="3" pos:column="14"/></modifier><modifier pos:line="3" pos:column="14">*<pos:position pos:line="3" pos:column="15"/></modifier></type><name pos:line="3" pos:column="15">res<pos:position pos:line="3" pos:column="18"/></name></decl>;<pos:position pos:line="3" pos:column="19"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="4" pos:column="5">char<pos:position pos:line="4" pos:column="9"/></name>    <modifier pos:line="4" pos:column="13">*<pos:position pos:line="4" pos:column="14"/></modifier></type><name pos:line="4" pos:column="14">str<pos:position pos:line="4" pos:column="17"/></name></decl>, <modifier pos:line="4" pos:column="19">*<pos:position pos:line="4" pos:column="20"/></modifier><decl><type ref="prev"/><name pos:line="4" pos:column="20">s<pos:position pos:line="4" pos:column="21"/></name></decl>;<pos:position pos:line="4" pos:column="22"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="5" pos:column="5">char<pos:position pos:line="5" pos:column="9"/></name>    <modifier pos:line="5" pos:column="13">*<pos:position pos:line="5" pos:column="14"/></modifier></type><name pos:line="5" pos:column="14">lasts<pos:position pos:line="5" pos:column="19"/></name></decl>;<pos:position pos:line="5" pos:column="20"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="6" pos:column="5">int<pos:position pos:line="6" pos:column="8"/></name></type> <name pos:line="6" pos:column="9">i<pos:position pos:line="6" pos:column="10"/></name></decl>;<pos:position pos:line="6" pos:column="11"/></decl_stmt>

    <comment type="block" pos:line="8" pos:column="5">/* protect the input string from strtok */</comment>
    <expr_stmt><expr><name pos:line="9" pos:column="5">str<pos:position pos:line="9" pos:column="8"/></name> <operator pos:line="9" pos:column="9">=<pos:position pos:line="9" pos:column="10"/></operator> <call><name pos:line="9" pos:column="11">LDAP_STRDUP<pos:position pos:line="9" pos:column="22"/></name><argument_list pos:line="9" pos:column="22">( <argument><expr><name pos:line="9" pos:column="24">str_in<pos:position pos:line="9" pos:column="30"/></name></expr></argument> )<pos:position pos:line="9" pos:column="32"/></argument_list></call></expr>;<pos:position pos:line="9" pos:column="33"/></expr_stmt>
    <if pos:line="10" pos:column="5">if<condition pos:line="10" pos:column="7">( <expr><name pos:line="10" pos:column="9">str<pos:position pos:line="10" pos:column="12"/></name> <operator pos:line="10" pos:column="13">==<pos:position pos:line="10" pos:column="15"/></operator> <name pos:line="10" pos:column="16">NULL<pos:position pos:line="10" pos:column="20"/></name></expr> )<pos:position pos:line="10" pos:column="22"/></condition><then pos:line="10" pos:column="22"> <block pos:line="10" pos:column="23">{
        <return pos:line="11" pos:column="9">return <expr><name pos:line="11" pos:column="16">NULL<pos:position pos:line="11" pos:column="20"/></name></expr>;<pos:position pos:line="11" pos:column="21"/></return>
    }<pos:position pos:line="12" pos:column="6"/></block></then></if>

    <expr_stmt><expr><name pos:line="14" pos:column="5">i<pos:position pos:line="14" pos:column="6"/></name> <operator pos:line="14" pos:column="7">=<pos:position pos:line="14" pos:column="8"/></operator> <literal type="number" pos:line="14" pos:column="9">1<pos:position pos:line="14" pos:column="10"/></literal></expr>;<pos:position pos:line="14" pos:column="11"/></expr_stmt>
    <for pos:line="15" pos:column="5">for <control pos:line="15" pos:column="9">( <init><expr><name pos:line="15" pos:column="11">s<pos:position pos:line="15" pos:column="12"/></name> <operator pos:line="15" pos:column="13">=<pos:position pos:line="15" pos:column="14"/></operator> <name pos:line="15" pos:column="15">str<pos:position pos:line="15" pos:column="18"/></name></expr>;<pos:position pos:line="15" pos:column="19"/></init> <condition><expr><operator pos:line="15" pos:column="20">*<pos:position pos:line="15" pos:column="21"/></operator><name pos:line="15" pos:column="21">s<pos:position pos:line="15" pos:column="22"/></name></expr>;<pos:position pos:line="15" pos:column="23"/></condition> <incr><expr><name pos:line="15" pos:column="24">s<pos:position pos:line="15" pos:column="25"/></name><operator pos:line="15" pos:column="25">++<pos:position pos:line="15" pos:column="27"/></operator></expr></incr> )<pos:position pos:line="15" pos:column="29"/></control> <block pos:line="15" pos:column="30">{
        <if pos:line="16" pos:column="9">if <condition pos:line="16" pos:column="12">( <expr><call><name pos:line="16" pos:column="14">ldap_utf8_strchr<pos:position pos:line="16" pos:column="30"/></name><argument_list pos:line="16" pos:column="30">( <argument><expr><name pos:line="16" pos:column="32">brkstr<pos:position pos:line="16" pos:column="38"/></name></expr></argument>, <argument><expr><name pos:line="16" pos:column="40">s<pos:position pos:line="16" pos:column="41"/></name></expr></argument> )<pos:position pos:line="16" pos:column="43"/></argument_list></call> <operator pos:line="16" pos:column="44">!=<pos:position pos:line="16" pos:column="46"/></operator> <name pos:line="16" pos:column="47">NULL<pos:position pos:line="16" pos:column="51"/></name></expr> )<pos:position pos:line="16" pos:column="53"/></condition><then pos:line="16" pos:column="53"> <block pos:line="16" pos:column="54">{
            <expr_stmt><expr><name pos:line="17" pos:column="13">i<pos:position pos:line="17" pos:column="14"/></name><operator pos:line="17" pos:column="14">++<pos:position pos:line="17" pos:column="16"/></operator></expr>;<pos:position pos:line="17" pos:column="17"/></expr_stmt>
        }<pos:position pos:line="18" pos:column="10"/></block></then></if>
    }<pos:position pos:line="19" pos:column="6"/></block></for>

    <expr_stmt><expr><name pos:line="21" pos:column="5">res<pos:position pos:line="21" pos:column="8"/></name> <operator pos:line="21" pos:column="9">=<pos:position pos:line="21" pos:column="10"/></operator> <operator pos:line="21" pos:column="11">(<pos:position pos:line="21" pos:column="12"/></operator><name pos:line="21" pos:column="12">char<pos:position pos:line="21" pos:column="16"/></name> <operator pos:line="21" pos:column="17">*<pos:position pos:line="21" pos:column="18"/></operator><operator pos:line="21" pos:column="18">*<pos:position pos:line="21" pos:column="19"/></operator><operator pos:line="21" pos:column="19">)<pos:position pos:line="21" pos:column="20"/></operator> <call><name pos:line="21" pos:column="21">LDAP_MALLOC<pos:position pos:line="21" pos:column="32"/></name><argument_list pos:line="21" pos:column="32">( <argument><expr><operator pos:line="21" pos:column="34">(<pos:position pos:line="21" pos:column="35"/></operator><name pos:line="21" pos:column="35">i<pos:position pos:line="21" pos:column="36"/></name> <operator pos:line="21" pos:column="37">+<pos:position pos:line="21" pos:column="38"/></operator> <literal type="number" pos:line="21" pos:column="39">1<pos:position pos:line="21" pos:column="40"/></literal><operator pos:line="21" pos:column="40">)<pos:position pos:line="21" pos:column="41"/></operator> <operator pos:line="21" pos:column="42">*<pos:position pos:line="21" pos:column="43"/></operator> <sizeof pos:line="21" pos:column="44">sizeof<argument_list pos:line="21" pos:column="50">(<argument><expr><name pos:line="21" pos:column="51">char<pos:position pos:line="21" pos:column="55"/></name> <operator pos:line="21" pos:column="56">*<pos:position pos:line="21" pos:column="57"/></operator></expr></argument>)<pos:position pos:line="21" pos:column="58"/></argument_list></sizeof></expr></argument> )<pos:position pos:line="21" pos:column="60"/></argument_list></call></expr>;<pos:position pos:line="21" pos:column="61"/></expr_stmt>

    <if pos:line="23" pos:column="5">if<condition pos:line="23" pos:column="7">( <expr><name pos:line="23" pos:column="9">res<pos:position pos:line="23" pos:column="12"/></name> <operator pos:line="23" pos:column="13">==<pos:position pos:line="23" pos:column="15"/></operator> <name pos:line="23" pos:column="16">NULL<pos:position pos:line="23" pos:column="20"/></name></expr> )<pos:position pos:line="23" pos:column="22"/></condition><then pos:line="23" pos:column="22"> <block pos:line="23" pos:column="23">{
        <expr_stmt><expr><call><name pos:line="24" pos:column="9">LDAP_FREE<pos:position pos:line="24" pos:column="18"/></name><argument_list pos:line="24" pos:column="18">( <argument><expr><name pos:line="24" pos:column="20">str<pos:position pos:line="24" pos:column="23"/></name></expr></argument> )<pos:position pos:line="24" pos:column="25"/></argument_list></call></expr>;<pos:position pos:line="24" pos:column="26"/></expr_stmt>
        <return pos:line="25" pos:column="9">return <expr><name pos:line="25" pos:column="16">NULL<pos:position pos:line="25" pos:column="20"/></name></expr>;<pos:position pos:line="25" pos:column="21"/></return>
    }<pos:position pos:line="26" pos:column="6"/></block></then></if>

    <expr_stmt><expr><name pos:line="28" pos:column="5">i<pos:position pos:line="28" pos:column="6"/></name> <operator pos:line="28" pos:column="7">=<pos:position pos:line="28" pos:column="8"/></operator> <literal type="number" pos:line="28" pos:column="9">0<pos:position pos:line="28" pos:column="10"/></literal></expr>;<pos:position pos:line="28" pos:column="11"/></expr_stmt>

    <for pos:line="30" pos:column="5">for <control pos:line="30" pos:column="9">( <init><expr><name pos:line="30" pos:column="11">s<pos:position pos:line="30" pos:column="12"/></name> <operator pos:line="30" pos:column="13">=<pos:position pos:line="30" pos:column="14"/></operator> <call><name pos:line="30" pos:column="15">ldap_utf8_strtok<pos:position pos:line="30" pos:column="31"/></name><argument_list pos:line="30" pos:column="31">( <argument><expr><name pos:line="30" pos:column="33">str<pos:position pos:line="30" pos:column="36"/></name></expr></argument>, <argument><expr><name pos:line="30" pos:column="38">brkstr<pos:position pos:line="30" pos:column="44"/></name></expr></argument>, <argument><expr><operator pos:line="30" pos:column="46">&amp;<pos:position pos:line="30" pos:column="51"/></operator><name pos:line="30" pos:column="47">lasts<pos:position pos:line="30" pos:column="52"/></name></expr></argument> )<pos:position pos:line="30" pos:column="54"/></argument_list></call></expr>;<pos:position pos:line="30" pos:column="55"/></init>
        <condition><expr><name pos:line="31" pos:column="9">s<pos:position pos:line="31" pos:column="10"/></name> <operator pos:line="31" pos:column="11">!=<pos:position pos:line="31" pos:column="13"/></operator> <name pos:line="31" pos:column="14">NULL<pos:position pos:line="31" pos:column="18"/></name></expr>;<pos:position pos:line="31" pos:column="19"/></condition>
        <incr><expr><name pos:line="32" pos:column="9">s<pos:position pos:line="32" pos:column="10"/></name> <operator pos:line="32" pos:column="11">=<pos:position pos:line="32" pos:column="12"/></operator> <call><name pos:line="32" pos:column="13">ldap_utf8_strtok<pos:position pos:line="32" pos:column="29"/></name><argument_list pos:line="32" pos:column="29">( <argument><expr><name pos:line="32" pos:column="31">NULL<pos:position pos:line="32" pos:column="35"/></name></expr></argument>, <argument><expr><name pos:line="32" pos:column="37">brkstr<pos:position pos:line="32" pos:column="43"/></name></expr></argument>, <argument><expr><operator pos:line="32" pos:column="45">&amp;<pos:position pos:line="32" pos:column="50"/></operator><name pos:line="32" pos:column="46">lasts<pos:position pos:line="32" pos:column="51"/></name></expr></argument> )<pos:position pos:line="32" pos:column="53"/></argument_list></call></expr></incr> )<pos:position pos:line="32" pos:column="55"/></control>
    <block pos:line="33" pos:column="5">{
        <expr_stmt><expr><name><name pos:line="34" pos:column="9">res<pos:position pos:line="34" pos:column="12"/></name><index pos:line="34" pos:column="12">[<expr><name pos:line="34" pos:column="13">i<pos:position pos:line="34" pos:column="14"/></name></expr>]<pos:position pos:line="34" pos:column="15"/></index></name> <operator pos:line="34" pos:column="16">=<pos:position pos:line="34" pos:column="17"/></operator> <call><name pos:line="34" pos:column="18">LDAP_STRDUP<pos:position pos:line="34" pos:column="29"/></name><argument_list pos:line="34" pos:column="29">( <argument><expr><name pos:line="34" pos:column="31">s<pos:position pos:line="34" pos:column="32"/></name></expr></argument> )<pos:position pos:line="34" pos:column="34"/></argument_list></call></expr>;<pos:position pos:line="34" pos:column="35"/></expr_stmt>

        <if pos:line="36" pos:column="9">if<condition pos:line="36" pos:column="11">(<expr><name><name pos:line="36" pos:column="12">res<pos:position pos:line="36" pos:column="15"/></name><index pos:line="36" pos:column="15">[<expr><name pos:line="36" pos:column="16">i<pos:position pos:line="36" pos:column="17"/></name></expr>]<pos:position pos:line="36" pos:column="18"/></index></name> <operator pos:line="36" pos:column="19">==<pos:position pos:line="36" pos:column="21"/></operator> <name pos:line="36" pos:column="22">NULL<pos:position pos:line="36" pos:column="26"/></name></expr>)<pos:position pos:line="36" pos:column="27"/></condition><then pos:line="36" pos:column="27"> <block pos:line="36" pos:column="28">{
            <for pos:line="37" pos:column="13">for<control pos:line="37" pos:column="16">( <init><expr><operator pos:line="37" pos:column="18">--<pos:position pos:line="37" pos:column="20"/></operator><name pos:line="37" pos:column="20">i<pos:position pos:line="37" pos:column="21"/></name></expr> ;<pos:position pos:line="37" pos:column="23"/></init> <condition><expr><name pos:line="37" pos:column="24">i<pos:position pos:line="37" pos:column="25"/></name> <operator pos:line="37" pos:column="26">&gt;=<pos:position pos:line="37" pos:column="31"/></operator> <literal type="number" pos:line="37" pos:column="29">0<pos:position pos:line="37" pos:column="30"/></literal></expr> ;<pos:position pos:line="37" pos:column="32"/></condition> <incr><expr><name pos:line="37" pos:column="33">i<pos:position pos:line="37" pos:column="34"/></name><operator pos:line="37" pos:column="34">--<pos:position pos:line="37" pos:column="36"/></operator></expr></incr> )<pos:position pos:line="37" pos:column="38"/></control> <block pos:line="37" pos:column="39">{
                <expr_stmt><expr><call><name pos:line="38" pos:column="17">LDAP_FREE<pos:position pos:line="38" pos:column="26"/></name><argument_list pos:line="38" pos:column="26">( <argument><expr><name><name pos:line="38" pos:column="28">res<pos:position pos:line="38" pos:column="31"/></name><index pos:line="38" pos:column="31">[<expr><name pos:line="38" pos:column="32">i<pos:position pos:line="38" pos:column="33"/></name></expr>]<pos:position pos:line="38" pos:column="34"/></index></name></expr></argument> )<pos:position pos:line="38" pos:column="36"/></argument_list></call></expr>;<pos:position pos:line="38" pos:column="37"/></expr_stmt>
            }<pos:position pos:line="39" pos:column="14"/></block></for>
            <expr_stmt><expr><call><name pos:line="40" pos:column="13">LDAP_FREE<pos:position pos:line="40" pos:column="22"/></name><argument_list pos:line="40" pos:column="22">( <argument><expr><name pos:line="40" pos:column="24">res<pos:position pos:line="40" pos:column="27"/></name></expr></argument> )<pos:position pos:line="40" pos:column="29"/></argument_list></call></expr>;<pos:position pos:line="40" pos:column="30"/></expr_stmt>
            <expr_stmt><expr><call><name pos:line="41" pos:column="13">LDAP_FREE<pos:position pos:line="41" pos:column="22"/></name><argument_list pos:line="41" pos:column="22">( <argument><expr><name pos:line="41" pos:column="24">str<pos:position pos:line="41" pos:column="27"/></name></expr></argument> )<pos:position pos:line="41" pos:column="29"/></argument_list></call></expr>;<pos:position pos:line="41" pos:column="30"/></expr_stmt>
            <return pos:line="42" pos:column="13">return <expr><name pos:line="42" pos:column="20">NULL<pos:position pos:line="42" pos:column="24"/></name></expr>;<pos:position pos:line="42" pos:column="25"/></return>
        }<pos:position pos:line="43" pos:column="10"/></block></then></if>

        <expr_stmt><expr><name pos:line="45" pos:column="9">i<pos:position pos:line="45" pos:column="10"/></name><operator pos:line="45" pos:column="10">++<pos:position pos:line="45" pos:column="12"/></operator></expr>;<pos:position pos:line="45" pos:column="13"/></expr_stmt>
    }<pos:position pos:line="46" pos:column="6"/></block></for>

    <expr_stmt><expr><name><name pos:line="48" pos:column="5">res<pos:position pos:line="48" pos:column="8"/></name><index pos:line="48" pos:column="8">[<expr><name pos:line="48" pos:column="9">i<pos:position pos:line="48" pos:column="10"/></name></expr>]<pos:position pos:line="48" pos:column="11"/></index></name> <operator pos:line="48" pos:column="12">=<pos:position pos:line="48" pos:column="13"/></operator> <name pos:line="48" pos:column="14">NULL<pos:position pos:line="48" pos:column="18"/></name></expr>;<pos:position pos:line="48" pos:column="19"/></expr_stmt>

    <expr_stmt><expr><call><name pos:line="50" pos:column="5">LDAP_FREE<pos:position pos:line="50" pos:column="14"/></name><argument_list pos:line="50" pos:column="14">( <argument><expr><name pos:line="50" pos:column="16">str<pos:position pos:line="50" pos:column="19"/></name></expr></argument> )<pos:position pos:line="50" pos:column="21"/></argument_list></call></expr>;<pos:position pos:line="50" pos:column="22"/></expr_stmt>
    <return pos:line="51" pos:column="5">return<expr><operator pos:line="51" pos:column="11">(<pos:position pos:line="51" pos:column="12"/></operator> <name pos:line="51" pos:column="13">res<pos:position pos:line="51" pos:column="16"/></name> <operator pos:line="51" pos:column="17">)<pos:position pos:line="51" pos:column="18"/></operator></expr>;<pos:position pos:line="51" pos:column="19"/></return>
}<pos:position pos:line="52" pos:column="2"/></block></function></unit>

<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/httpd/gumtree/httpd_repos_function_2185_httpd-2.4.3.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">apr_size_t<pos:position pos:line="1" pos:column="18"/></name></type> <name pos:line="1" pos:column="19">find_argument<pos:position pos:line="1" pos:column="32"/></name><parameter_list pos:line="1" pos:column="32">(<parameter><decl><type><name pos:line="1" pos:column="33">include_ctx_t<pos:position pos:line="1" pos:column="46"/></name> <modifier pos:line="1" pos:column="47">*<pos:position pos:line="1" pos:column="48"/></modifier></type><name pos:line="1" pos:column="48">ctx<pos:position pos:line="1" pos:column="51"/></name></decl></parameter>, <parameter><decl><type><specifier pos:line="1" pos:column="53">const<pos:position pos:line="1" pos:column="58"/></specifier> <name pos:line="1" pos:column="59">char<pos:position pos:line="1" pos:column="63"/></name> <modifier pos:line="1" pos:column="64">*<pos:position pos:line="1" pos:column="65"/></modifier></type><name pos:line="1" pos:column="65">data<pos:position pos:line="1" pos:column="69"/></name></decl></parameter>,
                                <parameter><decl><type><name pos:line="2" pos:column="33">apr_size_t<pos:position pos:line="2" pos:column="43"/></name></type> <name pos:line="2" pos:column="44">len<pos:position pos:line="2" pos:column="47"/></name></decl></parameter>, <parameter><decl><type><name pos:line="2" pos:column="49">char<pos:position pos:line="2" pos:column="53"/></name> <modifier pos:line="2" pos:column="54">*<pos:position pos:line="2" pos:column="55"/></modifier><modifier pos:line="2" pos:column="55">*<pos:position pos:line="2" pos:column="56"/></modifier><modifier pos:line="2" pos:column="56">*<pos:position pos:line="2" pos:column="57"/></modifier></type><name pos:line="2" pos:column="57">store<pos:position pos:line="2" pos:column="62"/></name></decl></parameter>,
                                <parameter><decl><type><name pos:line="3" pos:column="33">apr_size_t<pos:position pos:line="3" pos:column="43"/></name> <modifier pos:line="3" pos:column="44">*<pos:position pos:line="3" pos:column="45"/></modifier><modifier pos:line="3" pos:column="45">*<pos:position pos:line="3" pos:column="46"/></modifier></type><name pos:line="3" pos:column="46">store_len<pos:position pos:line="3" pos:column="55"/></name></decl></parameter>)<pos:position pos:line="3" pos:column="56"/></parameter_list>
<block pos:line="4" pos:column="1">{
    <decl_stmt><decl><type><name><name pos:line="5" pos:column="5">struct<pos:position pos:line="5" pos:column="11"/></name> <name pos:line="5" pos:column="12">ssi_internal_ctx<pos:position pos:line="5" pos:column="28"/></name></name> <modifier pos:line="5" pos:column="29">*<pos:position pos:line="5" pos:column="30"/></modifier></type><name pos:line="5" pos:column="30">intern<pos:position pos:line="5" pos:column="36"/></name> <init pos:line="5" pos:column="37">= <expr><name><name pos:line="5" pos:column="39">ctx<pos:position pos:line="5" pos:column="42"/></name><operator pos:line="5" pos:column="42">-&gt;<pos:position pos:line="5" pos:column="47"/></operator><name pos:line="5" pos:column="44">intern<pos:position pos:line="5" pos:column="50"/></name></name></expr></init></decl>;<pos:position pos:line="5" pos:column="51"/></decl_stmt>
    <decl_stmt><decl><type><specifier pos:line="6" pos:column="5">const<pos:position pos:line="6" pos:column="10"/></specifier> <name pos:line="6" pos:column="11">char<pos:position pos:line="6" pos:column="15"/></name> <modifier pos:line="6" pos:column="16">*<pos:position pos:line="6" pos:column="17"/></modifier></type><name pos:line="6" pos:column="17">p<pos:position pos:line="6" pos:column="18"/></name> <init pos:line="6" pos:column="19">= <expr><name pos:line="6" pos:column="21">data<pos:position pos:line="6" pos:column="25"/></name></expr></init></decl>;<pos:position pos:line="6" pos:column="26"/></decl_stmt>
    <decl_stmt><decl><type><specifier pos:line="7" pos:column="5">const<pos:position pos:line="7" pos:column="10"/></specifier> <name pos:line="7" pos:column="11">char<pos:position pos:line="7" pos:column="15"/></name> <modifier pos:line="7" pos:column="16">*<pos:position pos:line="7" pos:column="17"/></modifier></type><name pos:line="7" pos:column="17">ep<pos:position pos:line="7" pos:column="19"/></name> <init pos:line="7" pos:column="20">= <expr><name pos:line="7" pos:column="22">data<pos:position pos:line="7" pos:column="26"/></name> <operator pos:line="7" pos:column="27">+<pos:position pos:line="7" pos:column="28"/></operator> <name pos:line="7" pos:column="29">len<pos:position pos:line="7" pos:column="32"/></name></expr></init></decl>;<pos:position pos:line="7" pos:column="33"/></decl_stmt>

    <switch pos:line="9" pos:column="5">switch <condition pos:line="9" pos:column="12">(<expr><name><name pos:line="9" pos:column="13">intern<pos:position pos:line="9" pos:column="19"/></name><operator pos:line="9" pos:column="19">-&gt;<pos:position pos:line="9" pos:column="24"/></operator><name pos:line="9" pos:column="21">state<pos:position pos:line="9" pos:column="26"/></name></name></expr>)<pos:position pos:line="9" pos:column="27"/></condition> <block pos:line="9" pos:column="28">{
    <case pos:line="10" pos:column="5">case <expr><name pos:line="10" pos:column="10">PARSE_ARG<pos:position pos:line="10" pos:column="19"/></name></expr>:<pos:position pos:line="10" pos:column="20"/></case>
        <comment type="block" pos:line="11" pos:column="9">/*
         * create argument structure and append it to the current list
         */</comment>
        <expr_stmt><expr><name><name pos:line="14" pos:column="9">intern<pos:position pos:line="14" pos:column="15"/></name><operator pos:line="14" pos:column="15">-&gt;<pos:position pos:line="14" pos:column="20"/></operator><name pos:line="14" pos:column="17">current_arg<pos:position pos:line="14" pos:column="28"/></name></name> <operator pos:line="14" pos:column="29">=<pos:position pos:line="14" pos:column="30"/></operator> <call><name pos:line="14" pos:column="31">apr_palloc<pos:position pos:line="14" pos:column="41"/></name><argument_list pos:line="14" pos:column="41">(<argument><expr><name><name pos:line="14" pos:column="42">ctx<pos:position pos:line="14" pos:column="45"/></name><operator pos:line="14" pos:column="45">-&gt;<pos:position pos:line="14" pos:column="50"/></operator><name pos:line="14" pos:column="47">dpool<pos:position pos:line="14" pos:column="52"/></name></name></expr></argument>,
                                         <argument><expr><sizeof pos:line="15" pos:column="42">sizeof<argument_list pos:line="15" pos:column="48">(<argument><expr><operator pos:line="15" pos:column="49">*<pos:position pos:line="15" pos:column="50"/></operator><name><name pos:line="15" pos:column="50">intern<pos:position pos:line="15" pos:column="56"/></name><operator pos:line="15" pos:column="56">-&gt;<pos:position pos:line="15" pos:column="61"/></operator><name pos:line="15" pos:column="58">current_arg<pos:position pos:line="15" pos:column="69"/></name></name></expr></argument>)<pos:position pos:line="15" pos:column="70"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="15" pos:column="71"/></argument_list></call></expr>;<pos:position pos:line="15" pos:column="72"/></expr_stmt>
        <expr_stmt><expr><name><name pos:line="16" pos:column="9">intern<pos:position pos:line="16" pos:column="15"/></name><operator pos:line="16" pos:column="15">-&gt;<pos:position pos:line="16" pos:column="20"/></operator><name pos:line="16" pos:column="17">current_arg<pos:position pos:line="16" pos:column="28"/></name><operator pos:line="16" pos:column="28">-&gt;<pos:position pos:line="16" pos:column="33"/></operator><name pos:line="16" pos:column="30">next<pos:position pos:line="16" pos:column="34"/></name></name> <operator pos:line="16" pos:column="35">=<pos:position pos:line="16" pos:column="36"/></operator> <name pos:line="16" pos:column="37">NULL<pos:position pos:line="16" pos:column="41"/></name></expr>;<pos:position pos:line="16" pos:column="42"/></expr_stmt>

        <expr_stmt><expr><operator pos:line="18" pos:column="9">++<pos:position pos:line="18" pos:column="11"/></operator><operator pos:line="18" pos:column="11">(<pos:position pos:line="18" pos:column="12"/></operator><name><name pos:line="18" pos:column="12">ctx<pos:position pos:line="18" pos:column="15"/></name><operator pos:line="18" pos:column="15">-&gt;<pos:position pos:line="18" pos:column="20"/></operator><name pos:line="18" pos:column="17">argc<pos:position pos:line="18" pos:column="21"/></name></name><operator pos:line="18" pos:column="21">)<pos:position pos:line="18" pos:column="22"/></operator></expr>;<pos:position pos:line="18" pos:column="23"/></expr_stmt>
        <if pos:line="19" pos:column="9">if <condition pos:line="19" pos:column="12">(<expr><operator pos:line="19" pos:column="13">!<pos:position pos:line="19" pos:column="14"/></operator><name><name pos:line="19" pos:column="14">intern<pos:position pos:line="19" pos:column="20"/></name><operator pos:line="19" pos:column="20">-&gt;<pos:position pos:line="19" pos:column="25"/></operator><name pos:line="19" pos:column="22">argv<pos:position pos:line="19" pos:column="26"/></name></name></expr>)<pos:position pos:line="19" pos:column="27"/></condition><then pos:line="19" pos:column="27"> <block pos:line="19" pos:column="28">{
            <expr_stmt><expr><name><name pos:line="20" pos:column="13">intern<pos:position pos:line="20" pos:column="19"/></name><operator pos:line="20" pos:column="19">-&gt;<pos:position pos:line="20" pos:column="24"/></operator><name pos:line="20" pos:column="21">argv<pos:position pos:line="20" pos:column="25"/></name></name> <operator pos:line="20" pos:column="26">=<pos:position pos:line="20" pos:column="27"/></operator> <name><name pos:line="20" pos:column="28">intern<pos:position pos:line="20" pos:column="34"/></name><operator pos:line="20" pos:column="34">-&gt;<pos:position pos:line="20" pos:column="39"/></operator><name pos:line="20" pos:column="36">current_arg<pos:position pos:line="20" pos:column="47"/></name></name></expr>;<pos:position pos:line="20" pos:column="48"/></expr_stmt>
        }<pos:position pos:line="21" pos:column="10"/></block></then>
        <else pos:line="22" pos:column="9">else <block pos:line="22" pos:column="14">{
            <decl_stmt><decl><type><name pos:line="23" pos:column="13">arg_item_t<pos:position pos:line="23" pos:column="23"/></name> <modifier pos:line="23" pos:column="24">*<pos:position pos:line="23" pos:column="25"/></modifier></type><name pos:line="23" pos:column="25">newarg<pos:position pos:line="23" pos:column="31"/></name> <init pos:line="23" pos:column="32">= <expr><name><name pos:line="23" pos:column="34">intern<pos:position pos:line="23" pos:column="40"/></name><operator pos:line="23" pos:column="40">-&gt;<pos:position pos:line="23" pos:column="45"/></operator><name pos:line="23" pos:column="42">argv<pos:position pos:line="23" pos:column="46"/></name></name></expr></init></decl>;<pos:position pos:line="23" pos:column="47"/></decl_stmt>

            <while pos:line="25" pos:column="13">while <condition pos:line="25" pos:column="19">(<expr><name><name pos:line="25" pos:column="20">newarg<pos:position pos:line="25" pos:column="26"/></name><operator pos:line="25" pos:column="26">-&gt;<pos:position pos:line="25" pos:column="31"/></operator><name pos:line="25" pos:column="28">next<pos:position pos:line="25" pos:column="32"/></name></name></expr>)<pos:position pos:line="25" pos:column="33"/></condition> <block pos:line="25" pos:column="34">{
                <expr_stmt><expr><name pos:line="26" pos:column="17">newarg<pos:position pos:line="26" pos:column="23"/></name> <operator pos:line="26" pos:column="24">=<pos:position pos:line="26" pos:column="25"/></operator> <name><name pos:line="26" pos:column="26">newarg<pos:position pos:line="26" pos:column="32"/></name><operator pos:line="26" pos:column="32">-&gt;<pos:position pos:line="26" pos:column="37"/></operator><name pos:line="26" pos:column="34">next<pos:position pos:line="26" pos:column="38"/></name></name></expr>;<pos:position pos:line="26" pos:column="39"/></expr_stmt>
            }<pos:position pos:line="27" pos:column="14"/></block></while>
            <expr_stmt><expr><name><name pos:line="28" pos:column="13">newarg<pos:position pos:line="28" pos:column="19"/></name><operator pos:line="28" pos:column="19">-&gt;<pos:position pos:line="28" pos:column="24"/></operator><name pos:line="28" pos:column="21">next<pos:position pos:line="28" pos:column="25"/></name></name> <operator pos:line="28" pos:column="26">=<pos:position pos:line="28" pos:column="27"/></operator> <name><name pos:line="28" pos:column="28">intern<pos:position pos:line="28" pos:column="34"/></name><operator pos:line="28" pos:column="34">-&gt;<pos:position pos:line="28" pos:column="39"/></operator><name pos:line="28" pos:column="36">current_arg<pos:position pos:line="28" pos:column="47"/></name></name></expr>;<pos:position pos:line="28" pos:column="48"/></expr_stmt>
        }<pos:position pos:line="29" pos:column="10"/></block></else></if>

        <comment type="block" pos:line="31" pos:column="9">/* check whether it's a valid one. If it begins with a quote, we
         * can safely assume, someone forgot the name of the argument
         */</comment>
        <switch pos:line="34" pos:column="9">switch <condition pos:line="34" pos:column="16">(<expr><operator pos:line="34" pos:column="17">*<pos:position pos:line="34" pos:column="18"/></operator><name pos:line="34" pos:column="18">p<pos:position pos:line="34" pos:column="19"/></name></expr>)<pos:position pos:line="34" pos:column="20"/></condition> <block pos:line="34" pos:column="21">{
        <case pos:line="35" pos:column="9">case <expr><literal type="char" pos:line="35" pos:column="14">'"'<pos:position pos:line="35" pos:column="17"/></literal></expr>:<pos:position pos:line="35" pos:column="18"/></case> <case pos:line="35" pos:column="19">case <expr><literal type="char" pos:line="35" pos:column="24">'\''<pos:position pos:line="35" pos:column="28"/></literal></expr>:<pos:position pos:line="35" pos:column="29"/></case> <case pos:line="35" pos:column="30">case <expr><literal type="char" pos:line="35" pos:column="35">'`'<pos:position pos:line="35" pos:column="38"/></literal></expr>:<pos:position pos:line="35" pos:column="39"/></case>
            <expr_stmt><expr><operator pos:line="36" pos:column="13">*<pos:position pos:line="36" pos:column="14"/></operator><name pos:line="36" pos:column="14">store<pos:position pos:line="36" pos:column="19"/></name> <operator pos:line="36" pos:column="20">=<pos:position pos:line="36" pos:column="21"/></operator> <name pos:line="36" pos:column="22">NULL<pos:position pos:line="36" pos:column="26"/></name></expr>;<pos:position pos:line="36" pos:column="27"/></expr_stmt>

            <expr_stmt><expr><name><name pos:line="38" pos:column="13">intern<pos:position pos:line="38" pos:column="19"/></name><operator pos:line="38" pos:column="19">-&gt;<pos:position pos:line="38" pos:column="24"/></operator><name pos:line="38" pos:column="21">state<pos:position pos:line="38" pos:column="26"/></name></name> <operator pos:line="38" pos:column="27">=<pos:position pos:line="38" pos:column="28"/></operator> <name pos:line="38" pos:column="29">PARSE_ARG_VAL<pos:position pos:line="38" pos:column="42"/></name></expr>;<pos:position pos:line="38" pos:column="43"/></expr_stmt>
            <expr_stmt><expr><name><name pos:line="39" pos:column="13">intern<pos:position pos:line="39" pos:column="19"/></name><operator pos:line="39" pos:column="19">-&gt;<pos:position pos:line="39" pos:column="24"/></operator><name pos:line="39" pos:column="21">quote<pos:position pos:line="39" pos:column="26"/></name></name> <operator pos:line="39" pos:column="27">=<pos:position pos:line="39" pos:column="28"/></operator> <operator pos:line="39" pos:column="29">*<pos:position pos:line="39" pos:column="30"/></operator><name pos:line="39" pos:column="30">p<pos:position pos:line="39" pos:column="31"/></name><operator pos:line="39" pos:column="31">++<pos:position pos:line="39" pos:column="33"/></operator></expr>;<pos:position pos:line="39" pos:column="34"/></expr_stmt>
            <expr_stmt><expr><name><name pos:line="40" pos:column="13">intern<pos:position pos:line="40" pos:column="19"/></name><operator pos:line="40" pos:column="19">-&gt;<pos:position pos:line="40" pos:column="24"/></operator><name pos:line="40" pos:column="21">current_arg<pos:position pos:line="40" pos:column="32"/></name><operator pos:line="40" pos:column="32">-&gt;<pos:position pos:line="40" pos:column="37"/></operator><name pos:line="40" pos:column="34">name<pos:position pos:line="40" pos:column="38"/></name></name> <operator pos:line="40" pos:column="39">=<pos:position pos:line="40" pos:column="40"/></operator> <name pos:line="40" pos:column="41">NULL<pos:position pos:line="40" pos:column="45"/></name></expr>;<pos:position pos:line="40" pos:column="46"/></expr_stmt>
            <expr_stmt><expr><name><name pos:line="41" pos:column="13">intern<pos:position pos:line="41" pos:column="19"/></name><operator pos:line="41" pos:column="19">-&gt;<pos:position pos:line="41" pos:column="24"/></operator><name pos:line="41" pos:column="21">current_arg<pos:position pos:line="41" pos:column="32"/></name><operator pos:line="41" pos:column="32">-&gt;<pos:position pos:line="41" pos:column="37"/></operator><name pos:line="41" pos:column="34">name_len<pos:position pos:line="41" pos:column="42"/></name></name> <operator pos:line="41" pos:column="43">=<pos:position pos:line="41" pos:column="44"/></operator> <literal type="number" pos:line="41" pos:column="45">0<pos:position pos:line="41" pos:column="46"/></literal></expr>;<pos:position pos:line="41" pos:column="47"/></expr_stmt>
            <expr_stmt><expr><name><name pos:line="42" pos:column="13">intern<pos:position pos:line="42" pos:column="19"/></name><operator pos:line="42" pos:column="19">-&gt;<pos:position pos:line="42" pos:column="24"/></operator><name pos:line="42" pos:column="21">error<pos:position pos:line="42" pos:column="26"/></name></name> <operator pos:line="42" pos:column="27">=<pos:position pos:line="42" pos:column="28"/></operator> <literal type="number" pos:line="42" pos:column="29">1<pos:position pos:line="42" pos:column="30"/></literal></expr>;<pos:position pos:line="42" pos:column="31"/></expr_stmt>

            <expr_stmt><expr><call><name pos:line="44" pos:column="13">ap_log_rerror<pos:position pos:line="44" pos:column="26"/></name><argument_list pos:line="44" pos:column="26">(<argument><expr><name pos:line="44" pos:column="27">APLOG_MARK<pos:position pos:line="44" pos:column="37"/></name></expr></argument>, <argument><expr><name pos:line="44" pos:column="39">APLOG_ERR<pos:position pos:line="44" pos:column="48"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="44" pos:column="50">0<pos:position pos:line="44" pos:column="51"/></literal></expr></argument>, <argument><expr><name><name pos:line="44" pos:column="53">ctx<pos:position pos:line="44" pos:column="56"/></name><operator pos:line="44" pos:column="56">-&gt;<pos:position pos:line="44" pos:column="61"/></operator><name pos:line="44" pos:column="58">r<pos:position pos:line="44" pos:column="59"/></name></name></expr></argument>, <argument><expr><call><name pos:line="44" pos:column="61">APLOGNO<pos:position pos:line="44" pos:column="68"/></name><argument_list pos:line="44" pos:column="68">(<argument><expr><literal type="number" pos:line="44" pos:column="69">01369<pos:position pos:line="44" pos:column="74"/></literal></expr></argument>)<pos:position pos:line="44" pos:column="75"/></argument_list></call> <literal type="string" pos:line="44" pos:column="76">"missing "<pos:position pos:line="44" pos:column="86"/></literal>
                          <literal type="string" pos:line="45" pos:column="27">"argument name for value to tag %s in %s"<pos:position pos:line="45" pos:column="68"/></literal></expr></argument>,
                          <argument><expr><call><name pos:line="46" pos:column="27">apr_pstrmemdup<pos:position pos:line="46" pos:column="41"/></name><argument_list pos:line="46" pos:column="41">(<argument><expr><name><name pos:line="46" pos:column="42">ctx<pos:position pos:line="46" pos:column="45"/></name><operator pos:line="46" pos:column="45">-&gt;<pos:position pos:line="46" pos:column="50"/></operator><name pos:line="46" pos:column="47">r<pos:position pos:line="46" pos:column="48"/></name><operator pos:line="46" pos:column="48">-&gt;<pos:position pos:line="46" pos:column="53"/></operator><name pos:line="46" pos:column="50">pool<pos:position pos:line="46" pos:column="54"/></name></name></expr></argument>, <argument><expr><name><name pos:line="46" pos:column="56">intern<pos:position pos:line="46" pos:column="62"/></name><operator pos:line="46" pos:column="62">-&gt;<pos:position pos:line="46" pos:column="67"/></operator><name pos:line="46" pos:column="64">directive<pos:position pos:line="46" pos:column="73"/></name></name></expr></argument>,
                                         <argument><expr><name><name pos:line="47" pos:column="42">intern<pos:position pos:line="47" pos:column="48"/></name><operator pos:line="47" pos:column="48">-&gt;<pos:position pos:line="47" pos:column="53"/></operator><name pos:line="47" pos:column="50">directive_len<pos:position pos:line="47" pos:column="63"/></name></name></expr></argument>)<pos:position pos:line="47" pos:column="64"/></argument_list></call></expr></argument>,
                                         <argument><expr><name><name pos:line="48" pos:column="42">ctx<pos:position pos:line="48" pos:column="45"/></name><operator pos:line="48" pos:column="45">-&gt;<pos:position pos:line="48" pos:column="50"/></operator><name pos:line="48" pos:column="47">r<pos:position pos:line="48" pos:column="48"/></name><operator pos:line="48" pos:column="48">-&gt;<pos:position pos:line="48" pos:column="53"/></operator><name pos:line="48" pos:column="50">filename<pos:position pos:line="48" pos:column="58"/></name></name></expr></argument>)<pos:position pos:line="48" pos:column="59"/></argument_list></call></expr>;<pos:position pos:line="48" pos:column="60"/></expr_stmt>

            <return pos:line="50" pos:column="13">return <expr><operator pos:line="50" pos:column="20">(<pos:position pos:line="50" pos:column="21"/></operator><name pos:line="50" pos:column="21">p<pos:position pos:line="50" pos:column="22"/></name> <operator pos:line="50" pos:column="23">-<pos:position pos:line="50" pos:column="24"/></operator> <name pos:line="50" pos:column="25">data<pos:position pos:line="50" pos:column="29"/></name><operator pos:line="50" pos:column="29">)<pos:position pos:line="50" pos:column="30"/></operator></expr>;<pos:position pos:line="50" pos:column="31"/></return>

        <default pos:line="52" pos:column="9">default:<pos:position pos:line="52" pos:column="17"/></default>
            <expr_stmt><expr><name><name pos:line="53" pos:column="13">intern<pos:position pos:line="53" pos:column="19"/></name><operator pos:line="53" pos:column="19">-&gt;<pos:position pos:line="53" pos:column="24"/></operator><name pos:line="53" pos:column="21">state<pos:position pos:line="53" pos:column="26"/></name></name> <operator pos:line="53" pos:column="27">=<pos:position pos:line="53" pos:column="28"/></operator> <name pos:line="53" pos:column="29">PARSE_ARG_NAME<pos:position pos:line="53" pos:column="43"/></name></expr>;<pos:position pos:line="53" pos:column="44"/></expr_stmt>
        }<pos:position pos:line="54" pos:column="10"/></block></switch>
        <comment type="block" pos:line="55" pos:column="9">/* continue immediately with next state */</comment>

    <case pos:line="57" pos:column="5">case <expr><name pos:line="57" pos:column="10">PARSE_ARG_NAME<pos:position pos:line="57" pos:column="24"/></name></expr>:<pos:position pos:line="57" pos:column="25"/></case>
        <while pos:line="58" pos:column="9">while <condition pos:line="58" pos:column="15">(<expr><name pos:line="58" pos:column="16">p<pos:position pos:line="58" pos:column="17"/></name> <operator pos:line="58" pos:column="18">&lt;<pos:position pos:line="58" pos:column="22"/></operator> <name pos:line="58" pos:column="20">ep<pos:position pos:line="58" pos:column="22"/></name> <operator pos:line="58" pos:column="23">&amp;&amp;<pos:position pos:line="58" pos:column="33"/></operator> <operator pos:line="58" pos:column="26">!<pos:position pos:line="58" pos:column="27"/></operator><call><name pos:line="58" pos:column="27">apr_isspace<pos:position pos:line="58" pos:column="38"/></name><argument_list pos:line="58" pos:column="38">(<argument><expr><operator pos:line="58" pos:column="39">*<pos:position pos:line="58" pos:column="40"/></operator><name pos:line="58" pos:column="40">p<pos:position pos:line="58" pos:column="41"/></name></expr></argument>)<pos:position pos:line="58" pos:column="42"/></argument_list></call> <operator pos:line="58" pos:column="43">&amp;&amp;<pos:position pos:line="58" pos:column="53"/></operator> <operator pos:line="58" pos:column="46">*<pos:position pos:line="58" pos:column="47"/></operator><name pos:line="58" pos:column="47">p<pos:position pos:line="58" pos:column="48"/></name> <operator pos:line="58" pos:column="49">!=<pos:position pos:line="58" pos:column="51"/></operator> <literal type="char" pos:line="58" pos:column="52">'='<pos:position pos:line="58" pos:column="55"/></literal></expr>)<pos:position pos:line="58" pos:column="56"/></condition> <block pos:line="58" pos:column="57">{
            <expr_stmt><expr><operator pos:line="59" pos:column="13">++<pos:position pos:line="59" pos:column="15"/></operator><name pos:line="59" pos:column="15">p<pos:position pos:line="59" pos:column="16"/></name></expr>;<pos:position pos:line="59" pos:column="17"/></expr_stmt>
        }<pos:position pos:line="60" pos:column="10"/></block></while>

        <if pos:line="62" pos:column="9">if <condition pos:line="62" pos:column="12">(<expr><name pos:line="62" pos:column="13">p<pos:position pos:line="62" pos:column="14"/></name> <operator pos:line="62" pos:column="15">&lt;<pos:position pos:line="62" pos:column="19"/></operator> <name pos:line="62" pos:column="17">ep<pos:position pos:line="62" pos:column="19"/></name></expr>)<pos:position pos:line="62" pos:column="20"/></condition><then pos:line="62" pos:column="20"> <block pos:line="62" pos:column="21">{
            <expr_stmt><expr><name><name pos:line="63" pos:column="13">intern<pos:position pos:line="63" pos:column="19"/></name><operator pos:line="63" pos:column="19">-&gt;<pos:position pos:line="63" pos:column="24"/></operator><name pos:line="63" pos:column="21">state<pos:position pos:line="63" pos:column="26"/></name></name> <operator pos:line="63" pos:column="27">=<pos:position pos:line="63" pos:column="28"/></operator> <name pos:line="63" pos:column="29">PARSE_ARG_POSTNAME<pos:position pos:line="63" pos:column="47"/></name></expr>;<pos:position pos:line="63" pos:column="48"/></expr_stmt>
            <expr_stmt><expr><operator pos:line="64" pos:column="13">*<pos:position pos:line="64" pos:column="14"/></operator><name pos:line="64" pos:column="14">store<pos:position pos:line="64" pos:column="19"/></name> <operator pos:line="64" pos:column="20">=<pos:position pos:line="64" pos:column="21"/></operator> <operator pos:line="64" pos:column="22">&amp;<pos:position pos:line="64" pos:column="27"/></operator><name><name pos:line="64" pos:column="23">intern<pos:position pos:line="64" pos:column="29"/></name><operator pos:line="64" pos:column="29">-&gt;<pos:position pos:line="64" pos:column="34"/></operator><name pos:line="64" pos:column="31">current_arg<pos:position pos:line="64" pos:column="42"/></name><operator pos:line="64" pos:column="42">-&gt;<pos:position pos:line="64" pos:column="47"/></operator><name pos:line="64" pos:column="44">name<pos:position pos:line="64" pos:column="48"/></name></name></expr>;<pos:position pos:line="64" pos:column="49"/></expr_stmt>
            <expr_stmt><expr><operator pos:line="65" pos:column="13">*<pos:position pos:line="65" pos:column="14"/></operator><name pos:line="65" pos:column="14">store_len<pos:position pos:line="65" pos:column="23"/></name> <operator pos:line="65" pos:column="24">=<pos:position pos:line="65" pos:column="25"/></operator> <operator pos:line="65" pos:column="26">&amp;<pos:position pos:line="65" pos:column="31"/></operator><name><name pos:line="65" pos:column="27">intern<pos:position pos:line="65" pos:column="33"/></name><operator pos:line="65" pos:column="33">-&gt;<pos:position pos:line="65" pos:column="38"/></operator><name pos:line="65" pos:column="35">current_arg<pos:position pos:line="65" pos:column="46"/></name><operator pos:line="65" pos:column="46">-&gt;<pos:position pos:line="65" pos:column="51"/></operator><name pos:line="65" pos:column="48">name_len<pos:position pos:line="65" pos:column="56"/></name></name></expr>;<pos:position pos:line="65" pos:column="57"/></expr_stmt>
            <return pos:line="66" pos:column="13">return <expr><operator pos:line="66" pos:column="20">(<pos:position pos:line="66" pos:column="21"/></operator><name pos:line="66" pos:column="21">p<pos:position pos:line="66" pos:column="22"/></name> <operator pos:line="66" pos:column="23">-<pos:position pos:line="66" pos:column="24"/></operator> <name pos:line="66" pos:column="25">data<pos:position pos:line="66" pos:column="29"/></name><operator pos:line="66" pos:column="29">)<pos:position pos:line="66" pos:column="30"/></operator></expr>;<pos:position pos:line="66" pos:column="31"/></return>
        }<pos:position pos:line="67" pos:column="10"/></block></then></if>
        <break pos:line="68" pos:column="9">break;<pos:position pos:line="68" pos:column="15"/></break>

    <case pos:line="70" pos:column="5">case <expr><name pos:line="70" pos:column="10">PARSE_ARG_POSTNAME<pos:position pos:line="70" pos:column="28"/></name></expr>:<pos:position pos:line="70" pos:column="29"/></case>
        <expr_stmt><expr><name><name pos:line="71" pos:column="9">intern<pos:position pos:line="71" pos:column="15"/></name><operator pos:line="71" pos:column="15">-&gt;<pos:position pos:line="71" pos:column="20"/></operator><name pos:line="71" pos:column="17">current_arg<pos:position pos:line="71" pos:column="28"/></name><operator pos:line="71" pos:column="28">-&gt;<pos:position pos:line="71" pos:column="33"/></operator><name pos:line="71" pos:column="30">name<pos:position pos:line="71" pos:column="34"/></name></name> <operator pos:line="71" pos:column="35">=<pos:position pos:line="71" pos:column="36"/></operator> <call><name pos:line="71" pos:column="37">apr_pstrmemdup<pos:position pos:line="71" pos:column="51"/></name><argument_list pos:line="71" pos:column="51">(<argument><expr><name><name pos:line="71" pos:column="52">ctx<pos:position pos:line="71" pos:column="55"/></name><operator pos:line="71" pos:column="55">-&gt;<pos:position pos:line="71" pos:column="60"/></operator><name pos:line="71" pos:column="57">dpool<pos:position pos:line="71" pos:column="62"/></name></name></expr></argument>,
                                                 <argument><expr><name><name pos:line="72" pos:column="50">intern<pos:position pos:line="72" pos:column="56"/></name><operator pos:line="72" pos:column="56">-&gt;<pos:position pos:line="72" pos:column="61"/></operator><name pos:line="72" pos:column="58">current_arg<pos:position pos:line="72" pos:column="69"/></name><operator pos:line="72" pos:column="69">-&gt;<pos:position pos:line="72" pos:column="74"/></operator><name pos:line="72" pos:column="71">name<pos:position pos:line="72" pos:column="75"/></name></name></expr></argument>,
                                                 <argument><expr><name><name pos:line="73" pos:column="50">intern<pos:position pos:line="73" pos:column="56"/></name><operator pos:line="73" pos:column="56">-&gt;<pos:position pos:line="73" pos:column="61"/></operator><name pos:line="73" pos:column="58">current_arg<pos:position pos:line="73" pos:column="69"/></name><operator pos:line="73" pos:column="69">-&gt;<pos:position pos:line="73" pos:column="74"/></operator><name pos:line="73" pos:column="71">name_len<pos:position pos:line="73" pos:column="79"/></name></name></expr></argument>)<pos:position pos:line="73" pos:column="80"/></argument_list></call></expr>;<pos:position pos:line="73" pos:column="81"/></expr_stmt>
        <if pos:line="74" pos:column="9">if <condition pos:line="74" pos:column="12">(<expr><operator pos:line="74" pos:column="13">!<pos:position pos:line="74" pos:column="14"/></operator><name><name pos:line="74" pos:column="14">intern<pos:position pos:line="74" pos:column="20"/></name><operator pos:line="74" pos:column="20">-&gt;<pos:position pos:line="74" pos:column="25"/></operator><name pos:line="74" pos:column="22">current_arg<pos:position pos:line="74" pos:column="33"/></name><operator pos:line="74" pos:column="33">-&gt;<pos:position pos:line="74" pos:column="38"/></operator><name pos:line="74" pos:column="35">name_len<pos:position pos:line="74" pos:column="43"/></name></name></expr>)<pos:position pos:line="74" pos:column="44"/></condition><then pos:line="74" pos:column="44"> <block pos:line="74" pos:column="45">{
            <expr_stmt><expr><name><name pos:line="75" pos:column="13">intern<pos:position pos:line="75" pos:column="19"/></name><operator pos:line="75" pos:column="19">-&gt;<pos:position pos:line="75" pos:column="24"/></operator><name pos:line="75" pos:column="21">error<pos:position pos:line="75" pos:column="26"/></name></name> <operator pos:line="75" pos:column="27">=<pos:position pos:line="75" pos:column="28"/></operator> <literal type="number" pos:line="75" pos:column="29">1<pos:position pos:line="75" pos:column="30"/></literal></expr>;<pos:position pos:line="75" pos:column="31"/></expr_stmt>
            <expr_stmt><expr><call><name pos:line="76" pos:column="13">ap_log_rerror<pos:position pos:line="76" pos:column="26"/></name><argument_list pos:line="76" pos:column="26">(<argument><expr><name pos:line="76" pos:column="27">APLOG_MARK<pos:position pos:line="76" pos:column="37"/></name></expr></argument>, <argument><expr><name pos:line="76" pos:column="39">APLOG_ERR<pos:position pos:line="76" pos:column="48"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="76" pos:column="50">0<pos:position pos:line="76" pos:column="51"/></literal></expr></argument>, <argument><expr><name><name pos:line="76" pos:column="53">ctx<pos:position pos:line="76" pos:column="56"/></name><operator pos:line="76" pos:column="56">-&gt;<pos:position pos:line="76" pos:column="61"/></operator><name pos:line="76" pos:column="58">r<pos:position pos:line="76" pos:column="59"/></name></name></expr></argument>, <argument><expr><call><name pos:line="76" pos:column="61">APLOGNO<pos:position pos:line="76" pos:column="68"/></name><argument_list pos:line="76" pos:column="68">(<argument><expr><literal type="number" pos:line="76" pos:column="69">01370<pos:position pos:line="76" pos:column="74"/></literal></expr></argument>)<pos:position pos:line="76" pos:column="75"/></argument_list></call> <literal type="string" pos:line="76" pos:column="76">"missing "<pos:position pos:line="76" pos:column="86"/></literal>
                          <literal type="string" pos:line="77" pos:column="27">"argument name for value to tag %s in %s"<pos:position pos:line="77" pos:column="68"/></literal></expr></argument>,
                          <argument><expr><call><name pos:line="78" pos:column="27">apr_pstrmemdup<pos:position pos:line="78" pos:column="41"/></name><argument_list pos:line="78" pos:column="41">(<argument><expr><name><name pos:line="78" pos:column="42">ctx<pos:position pos:line="78" pos:column="45"/></name><operator pos:line="78" pos:column="45">-&gt;<pos:position pos:line="78" pos:column="50"/></operator><name pos:line="78" pos:column="47">r<pos:position pos:line="78" pos:column="48"/></name><operator pos:line="78" pos:column="48">-&gt;<pos:position pos:line="78" pos:column="53"/></operator><name pos:line="78" pos:column="50">pool<pos:position pos:line="78" pos:column="54"/></name></name></expr></argument>, <argument><expr><name><name pos:line="78" pos:column="56">intern<pos:position pos:line="78" pos:column="62"/></name><operator pos:line="78" pos:column="62">-&gt;<pos:position pos:line="78" pos:column="67"/></operator><name pos:line="78" pos:column="64">directive<pos:position pos:line="78" pos:column="73"/></name></name></expr></argument>,
                                         <argument><expr><name><name pos:line="79" pos:column="42">intern<pos:position pos:line="79" pos:column="48"/></name><operator pos:line="79" pos:column="48">-&gt;<pos:position pos:line="79" pos:column="53"/></operator><name pos:line="79" pos:column="50">directive_len<pos:position pos:line="79" pos:column="63"/></name></name></expr></argument>)<pos:position pos:line="79" pos:column="64"/></argument_list></call></expr></argument>,
                                         <argument><expr><name><name pos:line="80" pos:column="42">ctx<pos:position pos:line="80" pos:column="45"/></name><operator pos:line="80" pos:column="45">-&gt;<pos:position pos:line="80" pos:column="50"/></operator><name pos:line="80" pos:column="47">r<pos:position pos:line="80" pos:column="48"/></name><operator pos:line="80" pos:column="48">-&gt;<pos:position pos:line="80" pos:column="53"/></operator><name pos:line="80" pos:column="50">filename<pos:position pos:line="80" pos:column="58"/></name></name></expr></argument>)<pos:position pos:line="80" pos:column="59"/></argument_list></call></expr>;<pos:position pos:line="80" pos:column="60"/></expr_stmt>
        }<pos:position pos:line="81" pos:column="10"/></block></then>
        <else pos:line="82" pos:column="9">else <block pos:line="82" pos:column="14">{
            <expr_stmt><expr><call><name pos:line="83" pos:column="13">ap_str_tolower<pos:position pos:line="83" pos:column="27"/></name><argument_list pos:line="83" pos:column="27">(<argument><expr><name><name pos:line="83" pos:column="28">intern<pos:position pos:line="83" pos:column="34"/></name><operator pos:line="83" pos:column="34">-&gt;<pos:position pos:line="83" pos:column="39"/></operator><name pos:line="83" pos:column="36">current_arg<pos:position pos:line="83" pos:column="47"/></name><operator pos:line="83" pos:column="47">-&gt;<pos:position pos:line="83" pos:column="52"/></operator><name pos:line="83" pos:column="49">name<pos:position pos:line="83" pos:column="53"/></name></name></expr></argument>)<pos:position pos:line="83" pos:column="54"/></argument_list></call></expr>;<pos:position pos:line="83" pos:column="55"/></expr_stmt>
        }<pos:position pos:line="84" pos:column="10"/></block></else></if>

        <expr_stmt><expr><name><name pos:line="86" pos:column="9">intern<pos:position pos:line="86" pos:column="15"/></name><operator pos:line="86" pos:column="15">-&gt;<pos:position pos:line="86" pos:column="20"/></operator><name pos:line="86" pos:column="17">state<pos:position pos:line="86" pos:column="22"/></name></name> <operator pos:line="86" pos:column="23">=<pos:position pos:line="86" pos:column="24"/></operator> <name pos:line="86" pos:column="25">PARSE_ARG_EQ<pos:position pos:line="86" pos:column="37"/></name></expr>;<pos:position pos:line="86" pos:column="38"/></expr_stmt>
        <comment type="block" pos:line="87" pos:column="9">/* continue with next state immediately */</comment>

    <case pos:line="89" pos:column="5">case <expr><name pos:line="89" pos:column="10">PARSE_ARG_EQ<pos:position pos:line="89" pos:column="22"/></name></expr>:<pos:position pos:line="89" pos:column="23"/></case>
        <expr_stmt><expr><operator pos:line="90" pos:column="9">*<pos:position pos:line="90" pos:column="10"/></operator><name pos:line="90" pos:column="10">store<pos:position pos:line="90" pos:column="15"/></name> <operator pos:line="90" pos:column="16">=<pos:position pos:line="90" pos:column="17"/></operator> <name pos:line="90" pos:column="18">NULL<pos:position pos:line="90" pos:column="22"/></name></expr>;<pos:position pos:line="90" pos:column="23"/></expr_stmt>

        <while pos:line="92" pos:column="9">while <condition pos:line="92" pos:column="15">(<expr><name pos:line="92" pos:column="16">p<pos:position pos:line="92" pos:column="17"/></name> <operator pos:line="92" pos:column="18">&lt;<pos:position pos:line="92" pos:column="22"/></operator> <name pos:line="92" pos:column="20">ep<pos:position pos:line="92" pos:column="22"/></name> <operator pos:line="92" pos:column="23">&amp;&amp;<pos:position pos:line="92" pos:column="33"/></operator> <call><name pos:line="92" pos:column="26">apr_isspace<pos:position pos:line="92" pos:column="37"/></name><argument_list pos:line="92" pos:column="37">(<argument><expr><operator pos:line="92" pos:column="38">*<pos:position pos:line="92" pos:column="39"/></operator><name pos:line="92" pos:column="39">p<pos:position pos:line="92" pos:column="40"/></name></expr></argument>)<pos:position pos:line="92" pos:column="41"/></argument_list></call></expr>)<pos:position pos:line="92" pos:column="42"/></condition> <block pos:line="92" pos:column="43">{
            <expr_stmt><expr><operator pos:line="93" pos:column="13">++<pos:position pos:line="93" pos:column="15"/></operator><name pos:line="93" pos:column="15">p<pos:position pos:line="93" pos:column="16"/></name></expr>;<pos:position pos:line="93" pos:column="17"/></expr_stmt>
        }<pos:position pos:line="94" pos:column="10"/></block></while>

        <if pos:line="96" pos:column="9">if <condition pos:line="96" pos:column="12">(<expr><name pos:line="96" pos:column="13">p<pos:position pos:line="96" pos:column="14"/></name> <operator pos:line="96" pos:column="15">&lt;<pos:position pos:line="96" pos:column="19"/></operator> <name pos:line="96" pos:column="17">ep<pos:position pos:line="96" pos:column="19"/></name></expr>)<pos:position pos:line="96" pos:column="20"/></condition><then pos:line="96" pos:column="20"> <block pos:line="96" pos:column="21">{
            <if pos:line="97" pos:column="13">if <condition pos:line="97" pos:column="16">(<expr><operator pos:line="97" pos:column="17">*<pos:position pos:line="97" pos:column="18"/></operator><name pos:line="97" pos:column="18">p<pos:position pos:line="97" pos:column="19"/></name> <operator pos:line="97" pos:column="20">==<pos:position pos:line="97" pos:column="22"/></operator> <literal type="char" pos:line="97" pos:column="23">'='<pos:position pos:line="97" pos:column="26"/></literal></expr>)<pos:position pos:line="97" pos:column="27"/></condition><then pos:line="97" pos:column="27"> <block pos:line="97" pos:column="28">{
                <expr_stmt><expr><name><name pos:line="98" pos:column="17">intern<pos:position pos:line="98" pos:column="23"/></name><operator pos:line="98" pos:column="23">-&gt;<pos:position pos:line="98" pos:column="28"/></operator><name pos:line="98" pos:column="25">state<pos:position pos:line="98" pos:column="30"/></name></name> <operator pos:line="98" pos:column="31">=<pos:position pos:line="98" pos:column="32"/></operator> <name pos:line="98" pos:column="33">PARSE_ARG_PREVAL<pos:position pos:line="98" pos:column="49"/></name></expr>;<pos:position pos:line="98" pos:column="50"/></expr_stmt>
                <expr_stmt><expr><operator pos:line="99" pos:column="17">++<pos:position pos:line="99" pos:column="19"/></operator><name pos:line="99" pos:column="19">p<pos:position pos:line="99" pos:column="20"/></name></expr>;<pos:position pos:line="99" pos:column="21"/></expr_stmt>
            }<pos:position pos:line="100" pos:column="14"/></block></then>
            <else pos:line="101" pos:column="13">else <block pos:line="101" pos:column="18">{ <comment type="block" pos:line="101" pos:column="20">/* no value */</comment>
                <expr_stmt><expr><name><name pos:line="102" pos:column="17">intern<pos:position pos:line="102" pos:column="23"/></name><operator pos:line="102" pos:column="23">-&gt;<pos:position pos:line="102" pos:column="28"/></operator><name pos:line="102" pos:column="25">current_arg<pos:position pos:line="102" pos:column="36"/></name><operator pos:line="102" pos:column="36">-&gt;<pos:position pos:line="102" pos:column="41"/></operator><name pos:line="102" pos:column="38">value<pos:position pos:line="102" pos:column="43"/></name></name> <operator pos:line="102" pos:column="44">=<pos:position pos:line="102" pos:column="45"/></operator> <name pos:line="102" pos:column="46">NULL<pos:position pos:line="102" pos:column="50"/></name></expr>;<pos:position pos:line="102" pos:column="51"/></expr_stmt>
                <expr_stmt><expr><name><name pos:line="103" pos:column="17">intern<pos:position pos:line="103" pos:column="23"/></name><operator pos:line="103" pos:column="23">-&gt;<pos:position pos:line="103" pos:column="28"/></operator><name pos:line="103" pos:column="25">state<pos:position pos:line="103" pos:column="30"/></name></name> <operator pos:line="103" pos:column="31">=<pos:position pos:line="103" pos:column="32"/></operator> <name pos:line="103" pos:column="33">PARSE_PRE_ARG<pos:position pos:line="103" pos:column="46"/></name></expr>;<pos:position pos:line="103" pos:column="47"/></expr_stmt>
            }<pos:position pos:line="104" pos:column="14"/></block></else></if>

            <return pos:line="106" pos:column="13">return <expr><operator pos:line="106" pos:column="20">(<pos:position pos:line="106" pos:column="21"/></operator><name pos:line="106" pos:column="21">p<pos:position pos:line="106" pos:column="22"/></name> <operator pos:line="106" pos:column="23">-<pos:position pos:line="106" pos:column="24"/></operator> <name pos:line="106" pos:column="25">data<pos:position pos:line="106" pos:column="29"/></name><operator pos:line="106" pos:column="29">)<pos:position pos:line="106" pos:column="30"/></operator></expr>;<pos:position pos:line="106" pos:column="31"/></return>
        }<pos:position pos:line="107" pos:column="10"/></block></then></if>
        <break pos:line="108" pos:column="9">break;<pos:position pos:line="108" pos:column="15"/></break>

    <case pos:line="110" pos:column="5">case <expr><name pos:line="110" pos:column="10">PARSE_ARG_PREVAL<pos:position pos:line="110" pos:column="26"/></name></expr>:<pos:position pos:line="110" pos:column="27"/></case>
        <expr_stmt><expr><operator pos:line="111" pos:column="9">*<pos:position pos:line="111" pos:column="10"/></operator><name pos:line="111" pos:column="10">store<pos:position pos:line="111" pos:column="15"/></name> <operator pos:line="111" pos:column="16">=<pos:position pos:line="111" pos:column="17"/></operator> <name pos:line="111" pos:column="18">NULL<pos:position pos:line="111" pos:column="22"/></name></expr>;<pos:position pos:line="111" pos:column="23"/></expr_stmt>

        <while pos:line="113" pos:column="9">while <condition pos:line="113" pos:column="15">(<expr><name pos:line="113" pos:column="16">p<pos:position pos:line="113" pos:column="17"/></name> <operator pos:line="113" pos:column="18">&lt;<pos:position pos:line="113" pos:column="22"/></operator> <name pos:line="113" pos:column="20">ep<pos:position pos:line="113" pos:column="22"/></name> <operator pos:line="113" pos:column="23">&amp;&amp;<pos:position pos:line="113" pos:column="33"/></operator> <call><name pos:line="113" pos:column="26">apr_isspace<pos:position pos:line="113" pos:column="37"/></name><argument_list pos:line="113" pos:column="37">(<argument><expr><operator pos:line="113" pos:column="38">*<pos:position pos:line="113" pos:column="39"/></operator><name pos:line="113" pos:column="39">p<pos:position pos:line="113" pos:column="40"/></name></expr></argument>)<pos:position pos:line="113" pos:column="41"/></argument_list></call></expr>)<pos:position pos:line="113" pos:column="42"/></condition> <block pos:line="113" pos:column="43">{
            <expr_stmt><expr><operator pos:line="114" pos:column="13">++<pos:position pos:line="114" pos:column="15"/></operator><name pos:line="114" pos:column="15">p<pos:position pos:line="114" pos:column="16"/></name></expr>;<pos:position pos:line="114" pos:column="17"/></expr_stmt>
        }<pos:position pos:line="115" pos:column="10"/></block></while>

        <comment type="block" pos:line="117" pos:column="9">/* buffer doesn't consist of whitespaces only */</comment>
        <if pos:line="118" pos:column="9">if <condition pos:line="118" pos:column="12">(<expr><name pos:line="118" pos:column="13">p<pos:position pos:line="118" pos:column="14"/></name> <operator pos:line="118" pos:column="15">&lt;<pos:position pos:line="118" pos:column="19"/></operator> <name pos:line="118" pos:column="17">ep<pos:position pos:line="118" pos:column="19"/></name></expr>)<pos:position pos:line="118" pos:column="20"/></condition><then pos:line="118" pos:column="20"> <block pos:line="118" pos:column="21">{
            <expr_stmt><expr><name><name pos:line="119" pos:column="13">intern<pos:position pos:line="119" pos:column="19"/></name><operator pos:line="119" pos:column="19">-&gt;<pos:position pos:line="119" pos:column="24"/></operator><name pos:line="119" pos:column="21">state<pos:position pos:line="119" pos:column="26"/></name></name> <operator pos:line="119" pos:column="27">=<pos:position pos:line="119" pos:column="28"/></operator> <name pos:line="119" pos:column="29">PARSE_ARG_VAL<pos:position pos:line="119" pos:column="42"/></name></expr>;<pos:position pos:line="119" pos:column="43"/></expr_stmt>
            <switch pos:line="120" pos:column="13">switch <condition pos:line="120" pos:column="20">(<expr><operator pos:line="120" pos:column="21">*<pos:position pos:line="120" pos:column="22"/></operator><name pos:line="120" pos:column="22">p<pos:position pos:line="120" pos:column="23"/></name></expr>)<pos:position pos:line="120" pos:column="24"/></condition> <block pos:line="120" pos:column="25">{
            <case pos:line="121" pos:column="13">case <expr><literal type="char" pos:line="121" pos:column="18">'"'<pos:position pos:line="121" pos:column="21"/></literal></expr>:<pos:position pos:line="121" pos:column="22"/></case> <case pos:line="121" pos:column="23">case <expr><literal type="char" pos:line="121" pos:column="28">'\''<pos:position pos:line="121" pos:column="32"/></literal></expr>:<pos:position pos:line="121" pos:column="33"/></case> <case pos:line="121" pos:column="34">case <expr><literal type="char" pos:line="121" pos:column="39">'`'<pos:position pos:line="121" pos:column="42"/></literal></expr>:<pos:position pos:line="121" pos:column="43"/></case>
                <expr_stmt><expr><name><name pos:line="122" pos:column="17">intern<pos:position pos:line="122" pos:column="23"/></name><operator pos:line="122" pos:column="23">-&gt;<pos:position pos:line="122" pos:column="28"/></operator><name pos:line="122" pos:column="25">quote<pos:position pos:line="122" pos:column="30"/></name></name> <operator pos:line="122" pos:column="31">=<pos:position pos:line="122" pos:column="32"/></operator> <operator pos:line="122" pos:column="33">*<pos:position pos:line="122" pos:column="34"/></operator><name pos:line="122" pos:column="34">p<pos:position pos:line="122" pos:column="35"/></name><operator pos:line="122" pos:column="35">++<pos:position pos:line="122" pos:column="37"/></operator></expr>;<pos:position pos:line="122" pos:column="38"/></expr_stmt>
                <break pos:line="123" pos:column="17">break;<pos:position pos:line="123" pos:column="23"/></break>
            <default pos:line="124" pos:column="13">default:<pos:position pos:line="124" pos:column="21"/></default>
                <expr_stmt><expr><name><name pos:line="125" pos:column="17">intern<pos:position pos:line="125" pos:column="23"/></name><operator pos:line="125" pos:column="23">-&gt;<pos:position pos:line="125" pos:column="28"/></operator><name pos:line="125" pos:column="25">quote<pos:position pos:line="125" pos:column="30"/></name></name> <operator pos:line="125" pos:column="31">=<pos:position pos:line="125" pos:column="32"/></operator> <literal type="char" pos:line="125" pos:column="33">'\0'<pos:position pos:line="125" pos:column="37"/></literal></expr>;<pos:position pos:line="125" pos:column="38"/></expr_stmt>
                <break pos:line="126" pos:column="17">break;<pos:position pos:line="126" pos:column="23"/></break>
            }<pos:position pos:line="127" pos:column="14"/></block></switch>

            <return pos:line="129" pos:column="13">return <expr><operator pos:line="129" pos:column="20">(<pos:position pos:line="129" pos:column="21"/></operator><name pos:line="129" pos:column="21">p<pos:position pos:line="129" pos:column="22"/></name> <operator pos:line="129" pos:column="23">-<pos:position pos:line="129" pos:column="24"/></operator> <name pos:line="129" pos:column="25">data<pos:position pos:line="129" pos:column="29"/></name><operator pos:line="129" pos:column="29">)<pos:position pos:line="129" pos:column="30"/></operator></expr>;<pos:position pos:line="129" pos:column="31"/></return>
        }<pos:position pos:line="130" pos:column="10"/></block></then></if>
        <break pos:line="131" pos:column="9">break;<pos:position pos:line="131" pos:column="15"/></break>

    <case pos:line="133" pos:column="5">case <expr><name pos:line="133" pos:column="10">PARSE_ARG_VAL_ESC<pos:position pos:line="133" pos:column="27"/></name></expr>:<pos:position pos:line="133" pos:column="28"/></case>
        <if pos:line="134" pos:column="9">if <condition pos:line="134" pos:column="12">(<expr><operator pos:line="134" pos:column="13">*<pos:position pos:line="134" pos:column="14"/></operator><name pos:line="134" pos:column="14">p<pos:position pos:line="134" pos:column="15"/></name> <operator pos:line="134" pos:column="16">==<pos:position pos:line="134" pos:column="18"/></operator> <name><name pos:line="134" pos:column="19">intern<pos:position pos:line="134" pos:column="25"/></name><operator pos:line="134" pos:column="25">-&gt;<pos:position pos:line="134" pos:column="30"/></operator><name pos:line="134" pos:column="27">quote<pos:position pos:line="134" pos:column="32"/></name></name></expr>)<pos:position pos:line="134" pos:column="33"/></condition><then pos:line="134" pos:column="33"> <block pos:line="134" pos:column="34">{
            <expr_stmt><expr><operator pos:line="135" pos:column="13">++<pos:position pos:line="135" pos:column="15"/></operator><name pos:line="135" pos:column="15">p<pos:position pos:line="135" pos:column="16"/></name></expr>;<pos:position pos:line="135" pos:column="17"/></expr_stmt>
        }<pos:position pos:line="136" pos:column="10"/></block></then></if>
        <expr_stmt><expr><name><name pos:line="137" pos:column="9">intern<pos:position pos:line="137" pos:column="15"/></name><operator pos:line="137" pos:column="15">-&gt;<pos:position pos:line="137" pos:column="20"/></operator><name pos:line="137" pos:column="17">state<pos:position pos:line="137" pos:column="22"/></name></name> <operator pos:line="137" pos:column="23">=<pos:position pos:line="137" pos:column="24"/></operator> <name pos:line="137" pos:column="25">PARSE_ARG_VAL<pos:position pos:line="137" pos:column="38"/></name></expr>;<pos:position pos:line="137" pos:column="39"/></expr_stmt>
        <comment type="block" pos:line="138" pos:column="9">/* continue with next state immediately */</comment>

    <case pos:line="140" pos:column="5">case <expr><name pos:line="140" pos:column="10">PARSE_ARG_VAL<pos:position pos:line="140" pos:column="23"/></name></expr>:<pos:position pos:line="140" pos:column="24"/></case>
        <for pos:line="141" pos:column="9">for <control pos:line="141" pos:column="13">(<init pos:line="141" pos:column="14">;<pos:position pos:line="141" pos:column="15"/></init> <condition><expr><name pos:line="141" pos:column="16">p<pos:position pos:line="141" pos:column="17"/></name> <operator pos:line="141" pos:column="18">&lt;<pos:position pos:line="141" pos:column="22"/></operator> <name pos:line="141" pos:column="20">ep<pos:position pos:line="141" pos:column="22"/></name></expr>;<pos:position pos:line="141" pos:column="23"/></condition> <incr><expr><operator pos:line="141" pos:column="24">++<pos:position pos:line="141" pos:column="26"/></operator><name pos:line="141" pos:column="26">p<pos:position pos:line="141" pos:column="27"/></name></expr></incr>)<pos:position pos:line="141" pos:column="28"/></control> <block pos:line="141" pos:column="29">{
            <if pos:line="142" pos:column="13">if <condition pos:line="142" pos:column="16">(<expr><name><name pos:line="142" pos:column="17">intern<pos:position pos:line="142" pos:column="23"/></name><operator pos:line="142" pos:column="23">-&gt;<pos:position pos:line="142" pos:column="28"/></operator><name pos:line="142" pos:column="25">quote<pos:position pos:line="142" pos:column="30"/></name></name> <operator pos:line="142" pos:column="31">&amp;&amp;<pos:position pos:line="142" pos:column="41"/></operator> <operator pos:line="142" pos:column="34">*<pos:position pos:line="142" pos:column="35"/></operator><name pos:line="142" pos:column="35">p<pos:position pos:line="142" pos:column="36"/></name> <operator pos:line="142" pos:column="37">==<pos:position pos:line="142" pos:column="39"/></operator> <literal type="char" pos:line="142" pos:column="40">'\\'<pos:position pos:line="142" pos:column="44"/></literal></expr>)<pos:position pos:line="142" pos:column="45"/></condition><then pos:line="142" pos:column="45"> <block pos:line="142" pos:column="46">{
                <expr_stmt><expr><operator pos:line="143" pos:column="17">++<pos:position pos:line="143" pos:column="19"/></operator><name pos:line="143" pos:column="19">p<pos:position pos:line="143" pos:column="20"/></name></expr>;<pos:position pos:line="143" pos:column="21"/></expr_stmt>
                <if pos:line="144" pos:column="17">if <condition pos:line="144" pos:column="20">(<expr><name pos:line="144" pos:column="21">p<pos:position pos:line="144" pos:column="22"/></name> <operator pos:line="144" pos:column="23">==<pos:position pos:line="144" pos:column="25"/></operator> <name pos:line="144" pos:column="26">ep<pos:position pos:line="144" pos:column="28"/></name></expr>)<pos:position pos:line="144" pos:column="29"/></condition><then pos:line="144" pos:column="29"> <block pos:line="144" pos:column="30">{
                    <expr_stmt><expr><name><name pos:line="145" pos:column="21">intern<pos:position pos:line="145" pos:column="27"/></name><operator pos:line="145" pos:column="27">-&gt;<pos:position pos:line="145" pos:column="32"/></operator><name pos:line="145" pos:column="29">state<pos:position pos:line="145" pos:column="34"/></name></name> <operator pos:line="145" pos:column="35">=<pos:position pos:line="145" pos:column="36"/></operator> <name pos:line="145" pos:column="37">PARSE_ARG_VAL_ESC<pos:position pos:line="145" pos:column="54"/></name></expr>;<pos:position pos:line="145" pos:column="55"/></expr_stmt>
                    <break pos:line="146" pos:column="21">break;<pos:position pos:line="146" pos:column="27"/></break>
                }<pos:position pos:line="147" pos:column="18"/></block></then></if>

                <if pos:line="149" pos:column="17">if <condition pos:line="149" pos:column="20">(<expr><operator pos:line="149" pos:column="21">*<pos:position pos:line="149" pos:column="22"/></operator><name pos:line="149" pos:column="22">p<pos:position pos:line="149" pos:column="23"/></name> <operator pos:line="149" pos:column="24">!=<pos:position pos:line="149" pos:column="26"/></operator> <name><name pos:line="149" pos:column="27">intern<pos:position pos:line="149" pos:column="33"/></name><operator pos:line="149" pos:column="33">-&gt;<pos:position pos:line="149" pos:column="38"/></operator><name pos:line="149" pos:column="35">quote<pos:position pos:line="149" pos:column="40"/></name></name></expr>)<pos:position pos:line="149" pos:column="41"/></condition><then pos:line="149" pos:column="41"> <block pos:line="149" pos:column="42">{
                    <expr_stmt><expr><operator pos:line="150" pos:column="21">--<pos:position pos:line="150" pos:column="23"/></operator><name pos:line="150" pos:column="23">p<pos:position pos:line="150" pos:column="24"/></name></expr>;<pos:position pos:line="150" pos:column="25"/></expr_stmt>
                }<pos:position pos:line="151" pos:column="18"/></block></then></if>
            }<pos:position pos:line="152" pos:column="14"/></block></then>
            <elseif pos:line="153" pos:column="13">else <if pos:line="153" pos:column="18">if <condition pos:line="153" pos:column="21">(<expr><name><name pos:line="153" pos:column="22">intern<pos:position pos:line="153" pos:column="28"/></name><operator pos:line="153" pos:column="28">-&gt;<pos:position pos:line="153" pos:column="33"/></operator><name pos:line="153" pos:column="30">quote<pos:position pos:line="153" pos:column="35"/></name></name> <operator pos:line="153" pos:column="36">&amp;&amp;<pos:position pos:line="153" pos:column="46"/></operator> <operator pos:line="153" pos:column="39">*<pos:position pos:line="153" pos:column="40"/></operator><name pos:line="153" pos:column="40">p<pos:position pos:line="153" pos:column="41"/></name> <operator pos:line="153" pos:column="42">==<pos:position pos:line="153" pos:column="44"/></operator> <name><name pos:line="153" pos:column="45">intern<pos:position pos:line="153" pos:column="51"/></name><operator pos:line="153" pos:column="51">-&gt;<pos:position pos:line="153" pos:column="56"/></operator><name pos:line="153" pos:column="53">quote<pos:position pos:line="153" pos:column="58"/></name></name></expr>)<pos:position pos:line="153" pos:column="59"/></condition><then pos:line="153" pos:column="59"> <block pos:line="153" pos:column="60">{
                <expr_stmt><expr><operator pos:line="154" pos:column="17">++<pos:position pos:line="154" pos:column="19"/></operator><name pos:line="154" pos:column="19">p<pos:position pos:line="154" pos:column="20"/></name></expr>;<pos:position pos:line="154" pos:column="21"/></expr_stmt>
                <expr_stmt><expr><operator pos:line="155" pos:column="17">*<pos:position pos:line="155" pos:column="18"/></operator><name pos:line="155" pos:column="18">store<pos:position pos:line="155" pos:column="23"/></name> <operator pos:line="155" pos:column="24">=<pos:position pos:line="155" pos:column="25"/></operator> <operator pos:line="155" pos:column="26">&amp;<pos:position pos:line="155" pos:column="31"/></operator><name><name pos:line="155" pos:column="27">intern<pos:position pos:line="155" pos:column="33"/></name><operator pos:line="155" pos:column="33">-&gt;<pos:position pos:line="155" pos:column="38"/></operator><name pos:line="155" pos:column="35">current_arg<pos:position pos:line="155" pos:column="46"/></name><operator pos:line="155" pos:column="46">-&gt;<pos:position pos:line="155" pos:column="51"/></operator><name pos:line="155" pos:column="48">value<pos:position pos:line="155" pos:column="53"/></name></name></expr>;<pos:position pos:line="155" pos:column="54"/></expr_stmt>
                <expr_stmt><expr><operator pos:line="156" pos:column="17">*<pos:position pos:line="156" pos:column="18"/></operator><name pos:line="156" pos:column="18">store_len<pos:position pos:line="156" pos:column="27"/></name> <operator pos:line="156" pos:column="28">=<pos:position pos:line="156" pos:column="29"/></operator> <operator pos:line="156" pos:column="30">&amp;<pos:position pos:line="156" pos:column="35"/></operator><name><name pos:line="156" pos:column="31">intern<pos:position pos:line="156" pos:column="37"/></name><operator pos:line="156" pos:column="37">-&gt;<pos:position pos:line="156" pos:column="42"/></operator><name pos:line="156" pos:column="39">current_arg<pos:position pos:line="156" pos:column="50"/></name><operator pos:line="156" pos:column="50">-&gt;<pos:position pos:line="156" pos:column="55"/></operator><name pos:line="156" pos:column="52">value_len<pos:position pos:line="156" pos:column="61"/></name></name></expr>;<pos:position pos:line="156" pos:column="62"/></expr_stmt>
                <expr_stmt><expr><name><name pos:line="157" pos:column="17">intern<pos:position pos:line="157" pos:column="23"/></name><operator pos:line="157" pos:column="23">-&gt;<pos:position pos:line="157" pos:column="28"/></operator><name pos:line="157" pos:column="25">state<pos:position pos:line="157" pos:column="30"/></name></name> <operator pos:line="157" pos:column="31">=<pos:position pos:line="157" pos:column="32"/></operator> <name pos:line="157" pos:column="33">PARSE_ARG_POSTVAL<pos:position pos:line="157" pos:column="50"/></name></expr>;<pos:position pos:line="157" pos:column="51"/></expr_stmt>
                <break pos:line="158" pos:column="17">break;<pos:position pos:line="158" pos:column="23"/></break>
            }<pos:position pos:line="159" pos:column="14"/></block></then></if></elseif>
            <elseif pos:line="160" pos:column="13">else <if pos:line="160" pos:column="18">if <condition pos:line="160" pos:column="21">(<expr><operator pos:line="160" pos:column="22">!<pos:position pos:line="160" pos:column="23"/></operator><name><name pos:line="160" pos:column="23">intern<pos:position pos:line="160" pos:column="29"/></name><operator pos:line="160" pos:column="29">-&gt;<pos:position pos:line="160" pos:column="34"/></operator><name pos:line="160" pos:column="31">quote<pos:position pos:line="160" pos:column="36"/></name></name> <operator pos:line="160" pos:column="37">&amp;&amp;<pos:position pos:line="160" pos:column="47"/></operator> <call><name pos:line="160" pos:column="40">apr_isspace<pos:position pos:line="160" pos:column="51"/></name><argument_list pos:line="160" pos:column="51">(<argument><expr><operator pos:line="160" pos:column="52">*<pos:position pos:line="160" pos:column="53"/></operator><name pos:line="160" pos:column="53">p<pos:position pos:line="160" pos:column="54"/></name></expr></argument>)<pos:position pos:line="160" pos:column="55"/></argument_list></call></expr>)<pos:position pos:line="160" pos:column="56"/></condition><then pos:line="160" pos:column="56"> <block pos:line="160" pos:column="57">{
                <expr_stmt><expr><operator pos:line="161" pos:column="17">++<pos:position pos:line="161" pos:column="19"/></operator><name pos:line="161" pos:column="19">p<pos:position pos:line="161" pos:column="20"/></name></expr>;<pos:position pos:line="161" pos:column="21"/></expr_stmt>
                <expr_stmt><expr><operator pos:line="162" pos:column="17">*<pos:position pos:line="162" pos:column="18"/></operator><name pos:line="162" pos:column="18">store<pos:position pos:line="162" pos:column="23"/></name> <operator pos:line="162" pos:column="24">=<pos:position pos:line="162" pos:column="25"/></operator> <operator pos:line="162" pos:column="26">&amp;<pos:position pos:line="162" pos:column="31"/></operator><name><name pos:line="162" pos:column="27">intern<pos:position pos:line="162" pos:column="33"/></name><operator pos:line="162" pos:column="33">-&gt;<pos:position pos:line="162" pos:column="38"/></operator><name pos:line="162" pos:column="35">current_arg<pos:position pos:line="162" pos:column="46"/></name><operator pos:line="162" pos:column="46">-&gt;<pos:position pos:line="162" pos:column="51"/></operator><name pos:line="162" pos:column="48">value<pos:position pos:line="162" pos:column="53"/></name></name></expr>;<pos:position pos:line="162" pos:column="54"/></expr_stmt>
                <expr_stmt><expr><operator pos:line="163" pos:column="17">*<pos:position pos:line="163" pos:column="18"/></operator><name pos:line="163" pos:column="18">store_len<pos:position pos:line="163" pos:column="27"/></name> <operator pos:line="163" pos:column="28">=<pos:position pos:line="163" pos:column="29"/></operator> <operator pos:line="163" pos:column="30">&amp;<pos:position pos:line="163" pos:column="35"/></operator><name><name pos:line="163" pos:column="31">intern<pos:position pos:line="163" pos:column="37"/></name><operator pos:line="163" pos:column="37">-&gt;<pos:position pos:line="163" pos:column="42"/></operator><name pos:line="163" pos:column="39">current_arg<pos:position pos:line="163" pos:column="50"/></name><operator pos:line="163" pos:column="50">-&gt;<pos:position pos:line="163" pos:column="55"/></operator><name pos:line="163" pos:column="52">value_len<pos:position pos:line="163" pos:column="61"/></name></name></expr>;<pos:position pos:line="163" pos:column="62"/></expr_stmt>
                <expr_stmt><expr><name><name pos:line="164" pos:column="17">intern<pos:position pos:line="164" pos:column="23"/></name><operator pos:line="164" pos:column="23">-&gt;<pos:position pos:line="164" pos:column="28"/></operator><name pos:line="164" pos:column="25">state<pos:position pos:line="164" pos:column="30"/></name></name> <operator pos:line="164" pos:column="31">=<pos:position pos:line="164" pos:column="32"/></operator> <name pos:line="164" pos:column="33">PARSE_ARG_POSTVAL<pos:position pos:line="164" pos:column="50"/></name></expr>;<pos:position pos:line="164" pos:column="51"/></expr_stmt>
                <break pos:line="165" pos:column="17">break;<pos:position pos:line="165" pos:column="23"/></break>
            }<pos:position pos:line="166" pos:column="14"/></block></then></if></elseif></if>
        }<pos:position pos:line="167" pos:column="10"/></block></for>

        <return pos:line="169" pos:column="9">return <expr><operator pos:line="169" pos:column="16">(<pos:position pos:line="169" pos:column="17"/></operator><name pos:line="169" pos:column="17">p<pos:position pos:line="169" pos:column="18"/></name> <operator pos:line="169" pos:column="19">-<pos:position pos:line="169" pos:column="20"/></operator> <name pos:line="169" pos:column="21">data<pos:position pos:line="169" pos:column="25"/></name><operator pos:line="169" pos:column="25">)<pos:position pos:line="169" pos:column="26"/></operator></expr>;<pos:position pos:line="169" pos:column="27"/></return>

    <case pos:line="171" pos:column="5">case <expr><name pos:line="171" pos:column="10">PARSE_ARG_POSTVAL<pos:position pos:line="171" pos:column="27"/></name></expr>:<pos:position pos:line="171" pos:column="28"/></case>
        <comment type="block" pos:line="172" pos:column="9">/*
         * The value is still the raw input string. Finally clean it up.
         */</comment>
        <expr_stmt><expr><operator pos:line="175" pos:column="9">--<pos:position pos:line="175" pos:column="11"/></operator><operator pos:line="175" pos:column="11">(<pos:position pos:line="175" pos:column="12"/></operator><name><name pos:line="175" pos:column="12">intern<pos:position pos:line="175" pos:column="18"/></name><operator pos:line="175" pos:column="18">-&gt;<pos:position pos:line="175" pos:column="23"/></operator><name pos:line="175" pos:column="20">current_arg<pos:position pos:line="175" pos:column="31"/></name><operator pos:line="175" pos:column="31">-&gt;<pos:position pos:line="175" pos:column="36"/></operator><name pos:line="175" pos:column="33">value_len<pos:position pos:line="175" pos:column="42"/></name></name><operator pos:line="175" pos:column="42">)<pos:position pos:line="175" pos:column="43"/></operator></expr>;<pos:position pos:line="175" pos:column="44"/></expr_stmt>

        <comment type="block" pos:line="177" pos:column="9">/* strip quote escaping \ from the string */</comment>
        <if pos:line="178" pos:column="9">if <condition pos:line="178" pos:column="12">(<expr><name><name pos:line="178" pos:column="13">intern<pos:position pos:line="178" pos:column="19"/></name><operator pos:line="178" pos:column="19">-&gt;<pos:position pos:line="178" pos:column="24"/></operator><name pos:line="178" pos:column="21">quote<pos:position pos:line="178" pos:column="26"/></name></name></expr>)<pos:position pos:line="178" pos:column="27"/></condition><then pos:line="178" pos:column="27"> <block pos:line="178" pos:column="28">{
            <decl_stmt><decl><type><name pos:line="179" pos:column="13">apr_size_t<pos:position pos:line="179" pos:column="23"/></name></type> <name pos:line="179" pos:column="24">shift<pos:position pos:line="179" pos:column="29"/></name> <init pos:line="179" pos:column="30">= <expr><literal type="number" pos:line="179" pos:column="32">0<pos:position pos:line="179" pos:column="33"/></literal></expr></init></decl>;<pos:position pos:line="179" pos:column="34"/></decl_stmt>
            <decl_stmt><decl><type><name pos:line="180" pos:column="13">char<pos:position pos:line="180" pos:column="17"/></name> <modifier pos:line="180" pos:column="18">*<pos:position pos:line="180" pos:column="19"/></modifier></type><name pos:line="180" pos:column="19">sp<pos:position pos:line="180" pos:column="21"/></name></decl>;<pos:position pos:line="180" pos:column="22"/></decl_stmt>

            <expr_stmt><expr><name pos:line="182" pos:column="13">sp<pos:position pos:line="182" pos:column="15"/></name> <operator pos:line="182" pos:column="16">=<pos:position pos:line="182" pos:column="17"/></operator> <name><name pos:line="182" pos:column="18">intern<pos:position pos:line="182" pos:column="24"/></name><operator pos:line="182" pos:column="24">-&gt;<pos:position pos:line="182" pos:column="29"/></operator><name pos:line="182" pos:column="26">current_arg<pos:position pos:line="182" pos:column="37"/></name><operator pos:line="182" pos:column="37">-&gt;<pos:position pos:line="182" pos:column="42"/></operator><name pos:line="182" pos:column="39">value<pos:position pos:line="182" pos:column="44"/></name></name></expr>;<pos:position pos:line="182" pos:column="45"/></expr_stmt>
            <expr_stmt><expr><name pos:line="183" pos:column="13">ep<pos:position pos:line="183" pos:column="15"/></name> <operator pos:line="183" pos:column="16">=<pos:position pos:line="183" pos:column="17"/></operator> <name><name pos:line="183" pos:column="18">intern<pos:position pos:line="183" pos:column="24"/></name><operator pos:line="183" pos:column="24">-&gt;<pos:position pos:line="183" pos:column="29"/></operator><name pos:line="183" pos:column="26">current_arg<pos:position pos:line="183" pos:column="37"/></name><operator pos:line="183" pos:column="37">-&gt;<pos:position pos:line="183" pos:column="42"/></operator><name pos:line="183" pos:column="39">value<pos:position pos:line="183" pos:column="44"/></name></name> <operator pos:line="183" pos:column="45">+<pos:position pos:line="183" pos:column="46"/></operator> <name><name pos:line="183" pos:column="47">intern<pos:position pos:line="183" pos:column="53"/></name><operator pos:line="183" pos:column="53">-&gt;<pos:position pos:line="183" pos:column="58"/></operator><name pos:line="183" pos:column="55">current_arg<pos:position pos:line="183" pos:column="66"/></name><operator pos:line="183" pos:column="66">-&gt;<pos:position pos:line="183" pos:column="71"/></operator><name pos:line="183" pos:column="68">value_len<pos:position pos:line="183" pos:column="77"/></name></name></expr>;<pos:position pos:line="183" pos:column="78"/></expr_stmt>
            <while pos:line="184" pos:column="13">while <condition pos:line="184" pos:column="19">(<expr><name pos:line="184" pos:column="20">sp<pos:position pos:line="184" pos:column="22"/></name> <operator pos:line="184" pos:column="23">&lt;<pos:position pos:line="184" pos:column="27"/></operator> <name pos:line="184" pos:column="25">ep<pos:position pos:line="184" pos:column="27"/></name> <operator pos:line="184" pos:column="28">&amp;&amp;<pos:position pos:line="184" pos:column="38"/></operator> <operator pos:line="184" pos:column="31">*<pos:position pos:line="184" pos:column="32"/></operator><name pos:line="184" pos:column="32">sp<pos:position pos:line="184" pos:column="34"/></name> <operator pos:line="184" pos:column="35">!=<pos:position pos:line="184" pos:column="37"/></operator> <literal type="char" pos:line="184" pos:column="38">'\\'<pos:position pos:line="184" pos:column="42"/></literal></expr>)<pos:position pos:line="184" pos:column="43"/></condition> <block pos:line="184" pos:column="44">{
                <expr_stmt><expr><operator pos:line="185" pos:column="17">++<pos:position pos:line="185" pos:column="19"/></operator><name pos:line="185" pos:column="19">sp<pos:position pos:line="185" pos:column="21"/></name></expr>;<pos:position pos:line="185" pos:column="22"/></expr_stmt>
            }<pos:position pos:line="186" pos:column="14"/></block></while>
            <for pos:line="187" pos:column="13">for <control pos:line="187" pos:column="17">(<init pos:line="187" pos:column="18">;<pos:position pos:line="187" pos:column="19"/></init> <condition><expr><name pos:line="187" pos:column="20">sp<pos:position pos:line="187" pos:column="22"/></name> <operator pos:line="187" pos:column="23">&lt;<pos:position pos:line="187" pos:column="27"/></operator> <name pos:line="187" pos:column="25">ep<pos:position pos:line="187" pos:column="27"/></name></expr>;<pos:position pos:line="187" pos:column="28"/></condition> <incr><expr><operator pos:line="187" pos:column="29">++<pos:position pos:line="187" pos:column="31"/></operator><name pos:line="187" pos:column="31">sp<pos:position pos:line="187" pos:column="33"/></name></expr></incr>)<pos:position pos:line="187" pos:column="34"/></control> <block pos:line="187" pos:column="35">{
                <if pos:line="188" pos:column="17">if <condition pos:line="188" pos:column="20">(<expr><operator pos:line="188" pos:column="21">*<pos:position pos:line="188" pos:column="22"/></operator><name pos:line="188" pos:column="22">sp<pos:position pos:line="188" pos:column="24"/></name> <operator pos:line="188" pos:column="25">==<pos:position pos:line="188" pos:column="27"/></operator> <literal type="char" pos:line="188" pos:column="28">'\\'<pos:position pos:line="188" pos:column="32"/></literal> <operator pos:line="188" pos:column="33">&amp;&amp;<pos:position pos:line="188" pos:column="43"/></operator> <name><name pos:line="188" pos:column="36">sp<pos:position pos:line="188" pos:column="38"/></name><index pos:line="188" pos:column="38">[<expr><literal type="number" pos:line="188" pos:column="39">1<pos:position pos:line="188" pos:column="40"/></literal></expr>]<pos:position pos:line="188" pos:column="41"/></index></name> <operator pos:line="188" pos:column="42">==<pos:position pos:line="188" pos:column="44"/></operator> <name><name pos:line="188" pos:column="45">intern<pos:position pos:line="188" pos:column="51"/></name><operator pos:line="188" pos:column="51">-&gt;<pos:position pos:line="188" pos:column="56"/></operator><name pos:line="188" pos:column="53">quote<pos:position pos:line="188" pos:column="58"/></name></name></expr>)<pos:position pos:line="188" pos:column="59"/></condition><then pos:line="188" pos:column="59"> <block pos:line="188" pos:column="60">{
                    <expr_stmt><expr><operator pos:line="189" pos:column="21">++<pos:position pos:line="189" pos:column="23"/></operator><name pos:line="189" pos:column="23">sp<pos:position pos:line="189" pos:column="25"/></name></expr>;<pos:position pos:line="189" pos:column="26"/></expr_stmt>
                    <expr_stmt><expr><operator pos:line="190" pos:column="21">++<pos:position pos:line="190" pos:column="23"/></operator><name pos:line="190" pos:column="23">shift<pos:position pos:line="190" pos:column="28"/></name></expr>;<pos:position pos:line="190" pos:column="29"/></expr_stmt>
                }<pos:position pos:line="191" pos:column="18"/></block></then></if>
                <if pos:line="192" pos:column="17">if <condition pos:line="192" pos:column="20">(<expr><name pos:line="192" pos:column="21">shift<pos:position pos:line="192" pos:column="26"/></name></expr>)<pos:position pos:line="192" pos:column="27"/></condition><then pos:line="192" pos:column="27"> <block pos:line="192" pos:column="28">{
                    <expr_stmt><expr><operator pos:line="193" pos:column="21">*<pos:position pos:line="193" pos:column="22"/></operator><operator pos:line="193" pos:column="22">(<pos:position pos:line="193" pos:column="23"/></operator><name pos:line="193" pos:column="23">sp<pos:position pos:line="193" pos:column="25"/></name><operator pos:line="193" pos:column="25">-<pos:position pos:line="193" pos:column="26"/></operator><name pos:line="193" pos:column="26">shift<pos:position pos:line="193" pos:column="31"/></name><operator pos:line="193" pos:column="31">)<pos:position pos:line="193" pos:column="32"/></operator> <operator pos:line="193" pos:column="33">=<pos:position pos:line="193" pos:column="34"/></operator> <operator pos:line="193" pos:column="35">*<pos:position pos:line="193" pos:column="36"/></operator><name pos:line="193" pos:column="36">sp<pos:position pos:line="193" pos:column="38"/></name></expr>;<pos:position pos:line="193" pos:column="39"/></expr_stmt>
                }<pos:position pos:line="194" pos:column="18"/></block></then></if>
            }<pos:position pos:line="195" pos:column="14"/></block></for>

            <expr_stmt><expr><name><name pos:line="197" pos:column="13">intern<pos:position pos:line="197" pos:column="19"/></name><operator pos:line="197" pos:column="19">-&gt;<pos:position pos:line="197" pos:column="24"/></operator><name pos:line="197" pos:column="21">current_arg<pos:position pos:line="197" pos:column="32"/></name><operator pos:line="197" pos:column="32">-&gt;<pos:position pos:line="197" pos:column="37"/></operator><name pos:line="197" pos:column="34">value_len<pos:position pos:line="197" pos:column="43"/></name></name> <operator pos:line="197" pos:column="44">-=<pos:position pos:line="197" pos:column="46"/></operator> <name pos:line="197" pos:column="47">shift<pos:position pos:line="197" pos:column="52"/></name></expr>;<pos:position pos:line="197" pos:column="53"/></expr_stmt>
        }<pos:position pos:line="198" pos:column="10"/></block></then></if>

        <expr_stmt><expr><name><name pos:line="200" pos:column="9">intern<pos:position pos:line="200" pos:column="15"/></name><operator pos:line="200" pos:column="15">-&gt;<pos:position pos:line="200" pos:column="20"/></operator><name pos:line="200" pos:column="17">current_arg<pos:position pos:line="200" pos:column="28"/></name><operator pos:line="200" pos:column="28">-&gt;<pos:position pos:line="200" pos:column="33"/></operator><name pos:line="200" pos:column="30">value<pos:position pos:line="200" pos:column="35"/></name><index pos:line="200" pos:column="35">[<expr><name><name pos:line="200" pos:column="36">intern<pos:position pos:line="200" pos:column="42"/></name><operator pos:line="200" pos:column="42">-&gt;<pos:position pos:line="200" pos:column="47"/></operator><name pos:line="200" pos:column="44">current_arg<pos:position pos:line="200" pos:column="55"/></name><operator pos:line="200" pos:column="55">-&gt;<pos:position pos:line="200" pos:column="60"/></operator><name pos:line="200" pos:column="57">value_len<pos:position pos:line="200" pos:column="66"/></name></name></expr>]<pos:position pos:line="200" pos:column="67"/></index></name> <operator pos:line="200" pos:column="68">=<pos:position pos:line="200" pos:column="69"/></operator> <literal type="char" pos:line="200" pos:column="70">'\0'<pos:position pos:line="200" pos:column="74"/></literal></expr>;<pos:position pos:line="200" pos:column="75"/></expr_stmt>
        <expr_stmt><expr><name><name pos:line="201" pos:column="9">intern<pos:position pos:line="201" pos:column="15"/></name><operator pos:line="201" pos:column="15">-&gt;<pos:position pos:line="201" pos:column="20"/></operator><name pos:line="201" pos:column="17">state<pos:position pos:line="201" pos:column="22"/></name></name> <operator pos:line="201" pos:column="23">=<pos:position pos:line="201" pos:column="24"/></operator> <name pos:line="201" pos:column="25">PARSE_PRE_ARG<pos:position pos:line="201" pos:column="38"/></name></expr>;<pos:position pos:line="201" pos:column="39"/></expr_stmt>

        <return pos:line="203" pos:column="9">return <expr><literal type="number" pos:line="203" pos:column="16">0<pos:position pos:line="203" pos:column="17"/></literal></expr>;<pos:position pos:line="203" pos:column="18"/></return>

    <default pos:line="205" pos:column="5">default:<pos:position pos:line="205" pos:column="13"/></default>
        <comment type="block" pos:line="206" pos:column="9">/* get a rid of a gcc warning about unhandled enumerations */</comment>
        <break pos:line="207" pos:column="9">break;<pos:position pos:line="207" pos:column="15"/></break>
    }<pos:position pos:line="208" pos:column="6"/></block></switch>

    <return pos:line="210" pos:column="5">return <expr><name pos:line="210" pos:column="12">len<pos:position pos:line="210" pos:column="15"/></name></expr>;<pos:position pos:line="210" pos:column="16"/></return> <comment type="block" pos:line="210" pos:column="17">/* partial match of something */</comment>
}<pos:position pos:line="211" pos:column="2"/></block></function></unit>

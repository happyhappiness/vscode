<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/httpd/gumtree/httpd_repos_function_699_httpd-2.0.61.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">void<pos:position pos:line="1" pos:column="5"/></name></type> <name pos:line="1" pos:column="6">ssl_util_uuencode<pos:position pos:line="1" pos:column="23"/></name><parameter_list pos:line="1" pos:column="23">(<parameter><decl><type><name pos:line="1" pos:column="24">char<pos:position pos:line="1" pos:column="28"/></name> <modifier pos:line="1" pos:column="29">*<pos:position pos:line="1" pos:column="30"/></modifier></type><name pos:line="1" pos:column="30">szTo<pos:position pos:line="1" pos:column="34"/></name></decl></parameter>, <parameter><decl><type><specifier pos:line="1" pos:column="36">const<pos:position pos:line="1" pos:column="41"/></specifier> <name pos:line="1" pos:column="42">char<pos:position pos:line="1" pos:column="46"/></name> <modifier pos:line="1" pos:column="47">*<pos:position pos:line="1" pos:column="48"/></modifier></type><name pos:line="1" pos:column="48">szFrom<pos:position pos:line="1" pos:column="54"/></name></decl></parameter>, <parameter><decl><type><name pos:line="1" pos:column="56">BOOL<pos:position pos:line="1" pos:column="60"/></name></type> <name pos:line="1" pos:column="61">bPad<pos:position pos:line="1" pos:column="65"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="66"/></parameter_list>
<block pos:line="2" pos:column="1">{
    <expr_stmt><expr><call><name pos:line="3" pos:column="5">ssl_util_uuencode_binary<pos:position pos:line="3" pos:column="29"/></name><argument_list pos:line="3" pos:column="29">(<argument><expr><operator pos:line="3" pos:column="30">(<pos:position pos:line="3" pos:column="31"/></operator><name pos:line="3" pos:column="31">unsigned<pos:position pos:line="3" pos:column="39"/></name> <name pos:line="3" pos:column="40">char<pos:position pos:line="3" pos:column="44"/></name> <operator pos:line="3" pos:column="45">*<pos:position pos:line="3" pos:column="46"/></operator><operator pos:line="3" pos:column="46">)<pos:position pos:line="3" pos:column="47"/></operator><name pos:line="3" pos:column="47">szTo<pos:position pos:line="3" pos:column="51"/></name></expr></argument>,
                             <argument><expr><operator pos:line="4" pos:column="30">(<pos:position pos:line="4" pos:column="31"/></operator><specifier pos:line="4" pos:column="31">const<pos:position pos:line="4" pos:column="36"/></specifier> <name pos:line="4" pos:column="37">unsigned<pos:position pos:line="4" pos:column="45"/></name> <name pos:line="4" pos:column="46">char<pos:position pos:line="4" pos:column="50"/></name> <operator pos:line="4" pos:column="51">*<pos:position pos:line="4" pos:column="52"/></operator><operator pos:line="4" pos:column="52">)<pos:position pos:line="4" pos:column="53"/></operator><name pos:line="4" pos:column="53">szFrom<pos:position pos:line="4" pos:column="59"/></name></expr></argument>,
                             <argument><expr><call><name pos:line="5" pos:column="30">strlen<pos:position pos:line="5" pos:column="36"/></name><argument_list pos:line="5" pos:column="36">(<argument><expr><name pos:line="5" pos:column="37">szFrom<pos:position pos:line="5" pos:column="43"/></name></expr></argument>)<pos:position pos:line="5" pos:column="44"/></argument_list></call></expr></argument>, <argument><expr><name pos:line="5" pos:column="46">bPad<pos:position pos:line="5" pos:column="50"/></name></expr></argument>)<pos:position pos:line="5" pos:column="51"/></argument_list></call></expr>;<pos:position pos:line="5" pos:column="52"/></expr_stmt>
}<pos:position pos:line="6" pos:column="2"/></block></function></unit>

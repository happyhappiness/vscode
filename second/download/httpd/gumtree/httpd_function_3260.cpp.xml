<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/httpd/gumtree/httpd_function_3260.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">int<pos:position pos:line="1" pos:column="11"/></name></type> <name pos:line="1" pos:column="12">authorize_user_core<pos:position pos:line="1" pos:column="31"/></name><parameter_list pos:line="1" pos:column="31">(<parameter><decl><type><name pos:line="1" pos:column="32">request_rec<pos:position pos:line="1" pos:column="43"/></name> <modifier pos:line="1" pos:column="44">*<pos:position pos:line="1" pos:column="45"/></modifier></type><name pos:line="1" pos:column="45">r<pos:position pos:line="1" pos:column="46"/></name></decl></parameter>, <parameter><decl><type><name pos:line="1" pos:column="48">int<pos:position pos:line="1" pos:column="51"/></name></type> <name pos:line="1" pos:column="52">after_authn<pos:position pos:line="1" pos:column="63"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="64"/></parameter_list>
<block pos:line="2" pos:column="1">{
    <decl_stmt><decl><type><name pos:line="3" pos:column="5">authz_core_dir_conf<pos:position pos:line="3" pos:column="24"/></name> <modifier pos:line="3" pos:column="25">*<pos:position pos:line="3" pos:column="26"/></modifier></type><name pos:line="3" pos:column="26">conf<pos:position pos:line="3" pos:column="30"/></name></decl>;<pos:position pos:line="3" pos:column="31"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="4" pos:column="5">authz_status<pos:position pos:line="4" pos:column="17"/></name></type> <name pos:line="4" pos:column="18">auth_result<pos:position pos:line="4" pos:column="29"/></name></decl>;<pos:position pos:line="4" pos:column="30"/></decl_stmt>

    <expr_stmt><expr><name pos:line="6" pos:column="5">conf<pos:position pos:line="6" pos:column="9"/></name> <operator pos:line="6" pos:column="10">=<pos:position pos:line="6" pos:column="11"/></operator> <call><name pos:line="6" pos:column="12">ap_get_module_config<pos:position pos:line="6" pos:column="32"/></name><argument_list pos:line="6" pos:column="32">(<argument><expr><name><name pos:line="6" pos:column="33">r<pos:position pos:line="6" pos:column="34"/></name><operator pos:line="6" pos:column="34">-&gt;<pos:position pos:line="6" pos:column="39"/></operator><name pos:line="6" pos:column="36">per_dir_config<pos:position pos:line="6" pos:column="50"/></name></name></expr></argument>, <argument><expr><operator pos:line="6" pos:column="52">&amp;<pos:position pos:line="6" pos:column="57"/></operator><name pos:line="6" pos:column="53">authz_core_module<pos:position pos:line="6" pos:column="70"/></name></expr></argument>)<pos:position pos:line="6" pos:column="71"/></argument_list></call></expr>;<pos:position pos:line="6" pos:column="72"/></expr_stmt>

    <if pos:line="8" pos:column="5">if <condition pos:line="8" pos:column="8">(<expr><operator pos:line="8" pos:column="9">!<pos:position pos:line="8" pos:column="10"/></operator><name><name pos:line="8" pos:column="10">conf<pos:position pos:line="8" pos:column="14"/></name><operator pos:line="8" pos:column="14">-&gt;<pos:position pos:line="8" pos:column="19"/></operator><name pos:line="8" pos:column="16">section<pos:position pos:line="8" pos:column="23"/></name></name></expr>)<pos:position pos:line="8" pos:column="24"/></condition><then pos:line="8" pos:column="24"> <block pos:line="8" pos:column="25">{
        <if pos:line="9" pos:column="9">if <condition pos:line="9" pos:column="12">(<expr><call><name pos:line="9" pos:column="13">ap_auth_type<pos:position pos:line="9" pos:column="25"/></name><argument_list pos:line="9" pos:column="25">(<argument><expr><name pos:line="9" pos:column="26">r<pos:position pos:line="9" pos:column="27"/></name></expr></argument>)<pos:position pos:line="9" pos:column="28"/></argument_list></call></expr>)<pos:position pos:line="9" pos:column="29"/></condition><then pos:line="9" pos:column="29"> <block pos:line="9" pos:column="30">{
            <comment type="block" pos:line="10" pos:column="13">/* there's an AuthType configured, but no authorization
             * directives applied to support it
             */</comment>

            <expr_stmt><expr><call><name pos:line="14" pos:column="13">ap_log_rerror<pos:position pos:line="14" pos:column="26"/></name><argument_list pos:line="14" pos:column="26">(<argument><expr><name pos:line="14" pos:column="27">APLOG_MARK<pos:position pos:line="14" pos:column="37"/></name></expr></argument>, <argument><expr><name pos:line="14" pos:column="39">APLOG_ERR<pos:position pos:line="14" pos:column="48"/></name></expr></argument>, <argument><expr><name pos:line="14" pos:column="50">APR_SUCCESS<pos:position pos:line="14" pos:column="61"/></name></expr></argument>, <argument><expr><name pos:line="14" pos:column="63">r<pos:position pos:line="14" pos:column="64"/></name></expr></argument>,
                          <argument><expr><literal type="string" pos:line="15" pos:column="27">"AuthType configured with no corresponding "<pos:position pos:line="15" pos:column="71"/></literal>
                          <literal type="string" pos:line="16" pos:column="27">"authorization directives"<pos:position pos:line="16" pos:column="53"/></literal></expr></argument>)<pos:position pos:line="16" pos:column="54"/></argument_list></call></expr>;<pos:position pos:line="16" pos:column="55"/></expr_stmt>

            <return pos:line="18" pos:column="13">return <expr><name pos:line="18" pos:column="20">HTTP_INTERNAL_SERVER_ERROR<pos:position pos:line="18" pos:column="46"/></name></expr>;<pos:position pos:line="18" pos:column="47"/></return>
        }<pos:position pos:line="19" pos:column="10"/></block></then></if>

        <expr_stmt><expr><call><name pos:line="21" pos:column="9">ap_log_rerror<pos:position pos:line="21" pos:column="22"/></name><argument_list pos:line="21" pos:column="22">(<argument><expr><name pos:line="21" pos:column="23">APLOG_MARK<pos:position pos:line="21" pos:column="33"/></name></expr></argument>, <argument><expr><name pos:line="21" pos:column="35">APLOG_DEBUG<pos:position pos:line="21" pos:column="46"/></name></expr></argument>, <argument><expr><name pos:line="21" pos:column="48">APR_SUCCESS<pos:position pos:line="21" pos:column="59"/></name></expr></argument>, <argument><expr><name pos:line="21" pos:column="61">r<pos:position pos:line="21" pos:column="62"/></name></expr></argument>,
                      <argument><expr><literal type="string" pos:line="22" pos:column="23">"authorization result: granted (no directives)"<pos:position pos:line="22" pos:column="70"/></literal></expr></argument>)<pos:position pos:line="22" pos:column="71"/></argument_list></call></expr>;<pos:position pos:line="22" pos:column="72"/></expr_stmt>

        <return pos:line="24" pos:column="9">return <expr><name pos:line="24" pos:column="16">OK<pos:position pos:line="24" pos:column="18"/></name></expr>;<pos:position pos:line="24" pos:column="19"/></return>
    }<pos:position pos:line="25" pos:column="6"/></block></then></if>

    <expr_stmt><expr><name pos:line="27" pos:column="5">auth_result<pos:position pos:line="27" pos:column="16"/></name> <operator pos:line="27" pos:column="17">=<pos:position pos:line="27" pos:column="18"/></operator> <call><name pos:line="27" pos:column="19">apply_authz_sections<pos:position pos:line="27" pos:column="39"/></name><argument_list pos:line="27" pos:column="39">(<argument><expr><name pos:line="27" pos:column="40">r<pos:position pos:line="27" pos:column="41"/></name></expr></argument>, <argument><expr><name><name pos:line="27" pos:column="43">conf<pos:position pos:line="27" pos:column="47"/></name><operator pos:line="27" pos:column="47">-&gt;<pos:position pos:line="27" pos:column="52"/></operator><name pos:line="27" pos:column="49">section<pos:position pos:line="27" pos:column="56"/></name></name></expr></argument>, <argument><expr><name pos:line="27" pos:column="58">AUTHZ_LOGIC_AND<pos:position pos:line="27" pos:column="73"/></name></expr></argument>)<pos:position pos:line="27" pos:column="74"/></argument_list></call></expr>;<pos:position pos:line="27" pos:column="75"/></expr_stmt>

    <if pos:line="29" pos:column="5">if <condition pos:line="29" pos:column="8">(<expr><name pos:line="29" pos:column="9">auth_result<pos:position pos:line="29" pos:column="20"/></name> <operator pos:line="29" pos:column="21">==<pos:position pos:line="29" pos:column="23"/></operator> <name pos:line="29" pos:column="24">AUTHZ_GRANTED<pos:position pos:line="29" pos:column="37"/></name></expr>)<pos:position pos:line="29" pos:column="38"/></condition><then pos:line="29" pos:column="38"> <block pos:line="29" pos:column="39">{
        <return pos:line="30" pos:column="9">return <expr><name pos:line="30" pos:column="16">OK<pos:position pos:line="30" pos:column="18"/></name></expr>;<pos:position pos:line="30" pos:column="19"/></return>
    }<pos:position pos:line="31" pos:column="6"/></block></then>
    <elseif pos:line="32" pos:column="5">else <if pos:line="32" pos:column="10">if <condition pos:line="32" pos:column="13">(<expr><name pos:line="32" pos:column="14">auth_result<pos:position pos:line="32" pos:column="25"/></name> <operator pos:line="32" pos:column="26">==<pos:position pos:line="32" pos:column="28"/></operator> <name pos:line="32" pos:column="29">AUTHZ_DENIED_NO_USER<pos:position pos:line="32" pos:column="49"/></name></expr>)<pos:position pos:line="32" pos:column="50"/></condition><then pos:line="32" pos:column="50"> <block pos:line="32" pos:column="51">{
        <if pos:line="33" pos:column="9">if <condition pos:line="33" pos:column="12">(<expr><name pos:line="33" pos:column="13">after_authn<pos:position pos:line="33" pos:column="24"/></name></expr>)<pos:position pos:line="33" pos:column="25"/></condition><then pos:line="33" pos:column="25"> <block pos:line="33" pos:column="26">{
            <expr_stmt><expr><call><name pos:line="34" pos:column="13">ap_log_rerror<pos:position pos:line="34" pos:column="26"/></name><argument_list pos:line="34" pos:column="26">(<argument><expr><name pos:line="34" pos:column="27">APLOG_MARK<pos:position pos:line="34" pos:column="37"/></name></expr></argument>, <argument><expr><name pos:line="34" pos:column="39">APLOG_ERR<pos:position pos:line="34" pos:column="48"/></name></expr></argument>, <argument><expr><name pos:line="34" pos:column="50">APR_SUCCESS<pos:position pos:line="34" pos:column="61"/></name></expr></argument>, <argument><expr><name pos:line="34" pos:column="63">r<pos:position pos:line="34" pos:column="64"/></name></expr></argument>,
                          <argument><expr><literal type="string" pos:line="35" pos:column="27">"authorization failure (no authenticated user): %s"<pos:position pos:line="35" pos:column="78"/></literal></expr></argument>,
                          <argument><expr><name><name pos:line="36" pos:column="27">r<pos:position pos:line="36" pos:column="28"/></name><operator pos:line="36" pos:column="28">-&gt;<pos:position pos:line="36" pos:column="33"/></operator><name pos:line="36" pos:column="30">uri<pos:position pos:line="36" pos:column="33"/></name></name></expr></argument>)<pos:position pos:line="36" pos:column="34"/></argument_list></call></expr>;<pos:position pos:line="36" pos:column="35"/></expr_stmt>
            <comment type="block" pos:line="37" pos:column="13">/*
             * If we're returning 401 to an authenticated user, tell them to
             * try again. If unauthenticated, note_auth_failure has already
             * been called during auth.
             */</comment>
            <if pos:line="42" pos:column="13">if <condition pos:line="42" pos:column="16">(<expr><name><name pos:line="42" pos:column="17">r<pos:position pos:line="42" pos:column="18"/></name><operator pos:line="42" pos:column="18">-&gt;<pos:position pos:line="42" pos:column="23"/></operator><name pos:line="42" pos:column="20">user<pos:position pos:line="42" pos:column="24"/></name></name></expr>)<pos:position pos:line="42" pos:column="25"/></condition><then pos:line="42" pos:column="25">
                <block type="pseudo"><expr_stmt><expr><call><name pos:line="43" pos:column="17">ap_note_auth_failure<pos:position pos:line="43" pos:column="37"/></name><argument_list pos:line="43" pos:column="37">(<argument><expr><name pos:line="43" pos:column="38">r<pos:position pos:line="43" pos:column="39"/></name></expr></argument>)<pos:position pos:line="43" pos:column="40"/></argument_list></call></expr>;<pos:position pos:line="43" pos:column="41"/></expr_stmt></block></then></if>

            <return pos:line="45" pos:column="13">return <expr><name pos:line="45" pos:column="20">HTTP_UNAUTHORIZED<pos:position pos:line="45" pos:column="37"/></name></expr>;<pos:position pos:line="45" pos:column="38"/></return>
        }<pos:position pos:line="46" pos:column="10"/></block></then>
        <else pos:line="47" pos:column="9">else <block pos:line="47" pos:column="14">{
            <comment type="block" pos:line="48" pos:column="13">/*
             * We need a user before we can decide what to do.
             * Get out of the way and proceed with authentication.
             */</comment>
            <return pos:line="52" pos:column="13">return <expr><name pos:line="52" pos:column="20">DECLINED<pos:position pos:line="52" pos:column="28"/></name></expr>;<pos:position pos:line="52" pos:column="29"/></return>
        }<pos:position pos:line="53" pos:column="10"/></block></else></if>
    }<pos:position pos:line="54" pos:column="6"/></block></then></if></elseif>
    <elseif pos:line="55" pos:column="5">else <if pos:line="55" pos:column="10">if <condition pos:line="55" pos:column="13">(<expr><name pos:line="55" pos:column="14">auth_result<pos:position pos:line="55" pos:column="25"/></name> <operator pos:line="55" pos:column="26">==<pos:position pos:line="55" pos:column="28"/></operator> <name pos:line="55" pos:column="29">AUTHZ_DENIED<pos:position pos:line="55" pos:column="41"/></name> <operator pos:line="55" pos:column="42">||<pos:position pos:line="55" pos:column="44"/></operator> <name pos:line="55" pos:column="45">auth_result<pos:position pos:line="55" pos:column="56"/></name> <operator pos:line="55" pos:column="57">==<pos:position pos:line="55" pos:column="59"/></operator> <name pos:line="55" pos:column="60">AUTHZ_NEUTRAL<pos:position pos:line="55" pos:column="73"/></name></expr>)<pos:position pos:line="55" pos:column="74"/></condition><then pos:line="55" pos:column="74"> <block pos:line="55" pos:column="75">{
        <if pos:line="56" pos:column="9">if <condition pos:line="56" pos:column="12">(<expr><operator pos:line="56" pos:column="13">!<pos:position pos:line="56" pos:column="14"/></operator><name pos:line="56" pos:column="14">after_authn<pos:position pos:line="56" pos:column="25"/></name> <operator pos:line="56" pos:column="26">||<pos:position pos:line="56" pos:column="28"/></operator> <call><name pos:line="56" pos:column="29">ap_auth_type<pos:position pos:line="56" pos:column="41"/></name><argument_list pos:line="56" pos:column="41">(<argument><expr><name pos:line="56" pos:column="42">r<pos:position pos:line="56" pos:column="43"/></name></expr></argument>)<pos:position pos:line="56" pos:column="44"/></argument_list></call> <operator pos:line="56" pos:column="45">==<pos:position pos:line="56" pos:column="47"/></operator> <name pos:line="56" pos:column="48">NULL<pos:position pos:line="56" pos:column="52"/></name></expr>)<pos:position pos:line="56" pos:column="53"/></condition><then pos:line="56" pos:column="53"> <block pos:line="56" pos:column="54">{
            <expr_stmt><expr><call><name pos:line="57" pos:column="13">ap_log_rerror<pos:position pos:line="57" pos:column="26"/></name><argument_list pos:line="57" pos:column="26">(<argument><expr><name pos:line="57" pos:column="27">APLOG_MARK<pos:position pos:line="57" pos:column="37"/></name></expr></argument>, <argument><expr><name pos:line="57" pos:column="39">APLOG_ERR<pos:position pos:line="57" pos:column="48"/></name></expr></argument>, <argument><expr><name pos:line="57" pos:column="50">APR_SUCCESS<pos:position pos:line="57" pos:column="61"/></name></expr></argument>, <argument><expr><name pos:line="57" pos:column="63">r<pos:position pos:line="57" pos:column="64"/></name></expr></argument>,
                          <argument><expr><literal type="string" pos:line="58" pos:column="27">"client denied by server configuration: %s%s"<pos:position pos:line="58" pos:column="72"/></literal></expr></argument>,
                          <argument><expr><ternary><condition><expr><name><name pos:line="59" pos:column="27">r<pos:position pos:line="59" pos:column="28"/></name><operator pos:line="59" pos:column="28">-&gt;<pos:position pos:line="59" pos:column="33"/></operator><name pos:line="59" pos:column="30">filename<pos:position pos:line="59" pos:column="38"/></name></name></expr> ?<pos:position pos:line="59" pos:column="40"/></condition><then pos:line="59" pos:column="40"> <expr><literal type="string" pos:line="59" pos:column="41">""<pos:position pos:line="59" pos:column="43"/></literal></expr> <pos:position pos:line="59" pos:column="44"/></then><else pos:line="59" pos:column="44">: <expr><literal type="string" pos:line="59" pos:column="46">"uri "<pos:position pos:line="59" pos:column="52"/></literal></expr></else></ternary></expr></argument>,
                          <argument><expr><ternary><condition><expr><name><name pos:line="60" pos:column="27">r<pos:position pos:line="60" pos:column="28"/></name><operator pos:line="60" pos:column="28">-&gt;<pos:position pos:line="60" pos:column="33"/></operator><name pos:line="60" pos:column="30">filename<pos:position pos:line="60" pos:column="38"/></name></name></expr> ?<pos:position pos:line="60" pos:column="40"/></condition><then pos:line="60" pos:column="40"> <expr><name><name pos:line="60" pos:column="41">r<pos:position pos:line="60" pos:column="42"/></name><operator pos:line="60" pos:column="42">-&gt;<pos:position pos:line="60" pos:column="47"/></operator><name pos:line="60" pos:column="44">filename<pos:position pos:line="60" pos:column="52"/></name></name></expr> <pos:position pos:line="60" pos:column="53"/></then><else pos:line="60" pos:column="53">: <expr><name><name pos:line="60" pos:column="55">r<pos:position pos:line="60" pos:column="56"/></name><operator pos:line="60" pos:column="56">-&gt;<pos:position pos:line="60" pos:column="61"/></operator><name pos:line="60" pos:column="58">uri<pos:position pos:line="60" pos:column="61"/></name></name></expr></else></ternary></expr></argument>)<pos:position pos:line="60" pos:column="62"/></argument_list></call></expr>;<pos:position pos:line="60" pos:column="63"/></expr_stmt>

            <return pos:line="62" pos:column="13">return <expr><name pos:line="62" pos:column="20">HTTP_FORBIDDEN<pos:position pos:line="62" pos:column="34"/></name></expr>;<pos:position pos:line="62" pos:column="35"/></return>
        }<pos:position pos:line="63" pos:column="10"/></block></then>
        <else pos:line="64" pos:column="9">else <block pos:line="64" pos:column="14">{
            <comment type="block" pos:line="65" pos:column="13">/* XXX: maybe we want to return FORBIDDEN here, too??? */</comment>
            <expr_stmt><expr><call><name pos:line="66" pos:column="13">ap_log_rerror<pos:position pos:line="66" pos:column="26"/></name><argument_list pos:line="66" pos:column="26">(<argument><expr><name pos:line="66" pos:column="27">APLOG_MARK<pos:position pos:line="66" pos:column="37"/></name></expr></argument>, <argument><expr><name pos:line="66" pos:column="39">APLOG_ERR<pos:position pos:line="66" pos:column="48"/></name></expr></argument>, <argument><expr><name pos:line="66" pos:column="50">APR_SUCCESS<pos:position pos:line="66" pos:column="61"/></name></expr></argument>, <argument><expr><name pos:line="66" pos:column="63">r<pos:position pos:line="66" pos:column="64"/></name></expr></argument>,
                          <argument><expr><literal type="string" pos:line="67" pos:column="27">"user %s: authorization failure for \"%s\": "<pos:position pos:line="67" pos:column="72"/></literal></expr></argument>,
                          <argument><expr><name><name pos:line="68" pos:column="27">r<pos:position pos:line="68" pos:column="28"/></name><operator pos:line="68" pos:column="28">-&gt;<pos:position pos:line="68" pos:column="33"/></operator><name pos:line="68" pos:column="30">user<pos:position pos:line="68" pos:column="34"/></name></name></expr></argument>, <argument><expr><name><name pos:line="68" pos:column="36">r<pos:position pos:line="68" pos:column="37"/></name><operator pos:line="68" pos:column="37">-&gt;<pos:position pos:line="68" pos:column="42"/></operator><name pos:line="68" pos:column="39">uri<pos:position pos:line="68" pos:column="42"/></name></name></expr></argument>)<pos:position pos:line="68" pos:column="43"/></argument_list></call></expr>;<pos:position pos:line="68" pos:column="44"/></expr_stmt>

            <comment type="block" pos:line="70" pos:column="13">/*
             * If we're returning 401 to an authenticated user, tell them to
             * try again. If unauthenticated, note_auth_failure has already
             * been called during auth.
             */</comment>
            <if pos:line="75" pos:column="13">if <condition pos:line="75" pos:column="16">(<expr><name><name pos:line="75" pos:column="17">r<pos:position pos:line="75" pos:column="18"/></name><operator pos:line="75" pos:column="18">-&gt;<pos:position pos:line="75" pos:column="23"/></operator><name pos:line="75" pos:column="20">user<pos:position pos:line="75" pos:column="24"/></name></name></expr>)<pos:position pos:line="75" pos:column="25"/></condition><then pos:line="75" pos:column="25">
                <block type="pseudo"><expr_stmt><expr><call><name pos:line="76" pos:column="17">ap_note_auth_failure<pos:position pos:line="76" pos:column="37"/></name><argument_list pos:line="76" pos:column="37">(<argument><expr><name pos:line="76" pos:column="38">r<pos:position pos:line="76" pos:column="39"/></name></expr></argument>)<pos:position pos:line="76" pos:column="40"/></argument_list></call></expr>;<pos:position pos:line="76" pos:column="41"/></expr_stmt></block></then></if>

            <return pos:line="78" pos:column="13">return <expr><name pos:line="78" pos:column="20">HTTP_UNAUTHORIZED<pos:position pos:line="78" pos:column="37"/></name></expr>;<pos:position pos:line="78" pos:column="38"/></return>
        }<pos:position pos:line="79" pos:column="10"/></block></else></if>
    }<pos:position pos:line="80" pos:column="6"/></block></then></if></elseif>
    <else pos:line="81" pos:column="5">else <block pos:line="81" pos:column="10">{
        <comment type="block" pos:line="82" pos:column="9">/* We'll assume that the module has already said what its
         * error was in the logs.
         */</comment>
        <return pos:line="85" pos:column="9">return <expr><name pos:line="85" pos:column="16">HTTP_INTERNAL_SERVER_ERROR<pos:position pos:line="85" pos:column="42"/></name></expr>;<pos:position pos:line="85" pos:column="43"/></return>
    }<pos:position pos:line="86" pos:column="6"/></block></else></if>
}<pos:position pos:line="87" pos:column="2"/></block></function></unit>

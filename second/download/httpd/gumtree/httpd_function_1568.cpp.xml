<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/httpd/gumtree/httpd_function_1568.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">apr_status_t<pos:position pos:line="1" pos:column="13"/></name></type> <name pos:line="1" pos:column="14">ap_http_filter<pos:position pos:line="1" pos:column="28"/></name><parameter_list pos:line="1" pos:column="28">(<parameter><decl><type><name pos:line="1" pos:column="29">ap_filter_t<pos:position pos:line="1" pos:column="40"/></name> <modifier pos:line="1" pos:column="41">*<pos:position pos:line="1" pos:column="42"/></modifier></type><name pos:line="1" pos:column="42">f<pos:position pos:line="1" pos:column="43"/></name></decl></parameter>, <parameter><decl><type><name pos:line="1" pos:column="45">apr_bucket_brigade<pos:position pos:line="1" pos:column="63"/></name> <modifier pos:line="1" pos:column="64">*<pos:position pos:line="1" pos:column="65"/></modifier></type><name pos:line="1" pos:column="65">b<pos:position pos:line="1" pos:column="66"/></name></decl></parameter>,
                            <parameter><decl><type><name pos:line="2" pos:column="29">ap_input_mode_t<pos:position pos:line="2" pos:column="44"/></name></type> <name pos:line="2" pos:column="45">mode<pos:position pos:line="2" pos:column="49"/></name></decl></parameter>, <parameter><decl><type><name pos:line="2" pos:column="51">apr_read_type_e<pos:position pos:line="2" pos:column="66"/></name></type> <name pos:line="2" pos:column="67">block<pos:position pos:line="2" pos:column="72"/></name></decl></parameter>,
                            <parameter><decl><type><name pos:line="3" pos:column="29">apr_off_t<pos:position pos:line="3" pos:column="38"/></name></type> <name pos:line="3" pos:column="39">readbytes<pos:position pos:line="3" pos:column="48"/></name></decl></parameter>)<pos:position pos:line="3" pos:column="49"/></parameter_list>
<block pos:line="4" pos:column="1">{
    <decl_stmt><decl><type><name pos:line="5" pos:column="5">core_server_config<pos:position pos:line="5" pos:column="23"/></name> <modifier pos:line="5" pos:column="24">*<pos:position pos:line="5" pos:column="25"/></modifier></type><name pos:line="5" pos:column="25">conf<pos:position pos:line="5" pos:column="29"/></name></decl>;<pos:position pos:line="5" pos:column="30"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="6" pos:column="5">apr_bucket<pos:position pos:line="6" pos:column="15"/></name> <modifier pos:line="6" pos:column="16">*<pos:position pos:line="6" pos:column="17"/></modifier></type><name pos:line="6" pos:column="17">e<pos:position pos:line="6" pos:column="18"/></name></decl>;<pos:position pos:line="6" pos:column="19"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="7" pos:column="5">http_ctx_t<pos:position pos:line="7" pos:column="15"/></name> <modifier pos:line="7" pos:column="16">*<pos:position pos:line="7" pos:column="17"/></modifier></type><name pos:line="7" pos:column="17">ctx<pos:position pos:line="7" pos:column="20"/></name> <init pos:line="7" pos:column="21">= <expr><name><name pos:line="7" pos:column="23">f<pos:position pos:line="7" pos:column="24"/></name><operator pos:line="7" pos:column="24">-&gt;<pos:position pos:line="7" pos:column="29"/></operator><name pos:line="7" pos:column="26">ctx<pos:position pos:line="7" pos:column="29"/></name></name></expr></init></decl>;<pos:position pos:line="7" pos:column="30"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="8" pos:column="5">apr_status_t<pos:position pos:line="8" pos:column="17"/></name></type> <name pos:line="8" pos:column="18">rv<pos:position pos:line="8" pos:column="20"/></name></decl>;<pos:position pos:line="8" pos:column="21"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="9" pos:column="5">apr_off_t<pos:position pos:line="9" pos:column="14"/></name></type> <name pos:line="9" pos:column="15">totalread<pos:position pos:line="9" pos:column="24"/></name></decl>;<pos:position pos:line="9" pos:column="25"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="10" pos:column="5">int<pos:position pos:line="10" pos:column="8"/></name></type> <name pos:line="10" pos:column="9">http_error<pos:position pos:line="10" pos:column="19"/></name> <init pos:line="10" pos:column="20">= <expr><name pos:line="10" pos:column="22">HTTP_REQUEST_ENTITY_TOO_LARGE<pos:position pos:line="10" pos:column="51"/></name></expr></init></decl>;<pos:position pos:line="10" pos:column="52"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="11" pos:column="5">apr_bucket_brigade<pos:position pos:line="11" pos:column="23"/></name> <modifier pos:line="11" pos:column="24">*<pos:position pos:line="11" pos:column="25"/></modifier></type><name pos:line="11" pos:column="25">bb<pos:position pos:line="11" pos:column="27"/></name></decl>;<pos:position pos:line="11" pos:column="28"/></decl_stmt>

    <expr_stmt><expr><name pos:line="13" pos:column="5">conf<pos:position pos:line="13" pos:column="9"/></name> <operator pos:line="13" pos:column="10">=<pos:position pos:line="13" pos:column="11"/></operator> <operator pos:line="13" pos:column="12">(<pos:position pos:line="13" pos:column="13"/></operator><name pos:line="13" pos:column="13">core_server_config<pos:position pos:line="13" pos:column="31"/></name> <operator pos:line="13" pos:column="32">*<pos:position pos:line="13" pos:column="33"/></operator><operator pos:line="13" pos:column="33">)<pos:position pos:line="13" pos:column="34"/></operator>
        <call><name pos:line="14" pos:column="9">ap_get_module_config<pos:position pos:line="14" pos:column="29"/></name><argument_list pos:line="14" pos:column="29">(<argument><expr><name><name pos:line="14" pos:column="30">f<pos:position pos:line="14" pos:column="31"/></name><operator pos:line="14" pos:column="31">-&gt;<pos:position pos:line="14" pos:column="36"/></operator><name pos:line="14" pos:column="33">r<pos:position pos:line="14" pos:column="34"/></name><operator pos:line="14" pos:column="34">-&gt;<pos:position pos:line="14" pos:column="39"/></operator><name pos:line="14" pos:column="36">server<pos:position pos:line="14" pos:column="42"/></name><operator pos:line="14" pos:column="42">-&gt;<pos:position pos:line="14" pos:column="47"/></operator><name pos:line="14" pos:column="44">module_config<pos:position pos:line="14" pos:column="57"/></name></name></expr></argument>, <argument><expr><operator pos:line="14" pos:column="59">&amp;<pos:position pos:line="14" pos:column="64"/></operator><name pos:line="14" pos:column="60">core_module<pos:position pos:line="14" pos:column="71"/></name></expr></argument>)<pos:position pos:line="14" pos:column="72"/></argument_list></call></expr>;<pos:position pos:line="14" pos:column="73"/></expr_stmt>

    <comment type="block" pos:line="16" pos:column="5">/* just get out of the way of things we don't want. */</comment>
    <if pos:line="17" pos:column="5">if <condition pos:line="17" pos:column="8">(<expr><name pos:line="17" pos:column="9">mode<pos:position pos:line="17" pos:column="13"/></name> <operator pos:line="17" pos:column="14">!=<pos:position pos:line="17" pos:column="16"/></operator> <name pos:line="17" pos:column="17">AP_MODE_READBYTES<pos:position pos:line="17" pos:column="34"/></name> <operator pos:line="17" pos:column="35">&amp;&amp;<pos:position pos:line="17" pos:column="45"/></operator> <name pos:line="17" pos:column="38">mode<pos:position pos:line="17" pos:column="42"/></name> <operator pos:line="17" pos:column="43">!=<pos:position pos:line="17" pos:column="45"/></operator> <name pos:line="17" pos:column="46">AP_MODE_GETLINE<pos:position pos:line="17" pos:column="61"/></name></expr>)<pos:position pos:line="17" pos:column="62"/></condition><then pos:line="17" pos:column="62"> <block pos:line="17" pos:column="63">{
        <return pos:line="18" pos:column="9">return <expr><call><name pos:line="18" pos:column="16">ap_get_brigade<pos:position pos:line="18" pos:column="30"/></name><argument_list pos:line="18" pos:column="30">(<argument><expr><name><name pos:line="18" pos:column="31">f<pos:position pos:line="18" pos:column="32"/></name><operator pos:line="18" pos:column="32">-&gt;<pos:position pos:line="18" pos:column="37"/></operator><name pos:line="18" pos:column="34">next<pos:position pos:line="18" pos:column="38"/></name></name></expr></argument>, <argument><expr><name pos:line="18" pos:column="40">b<pos:position pos:line="18" pos:column="41"/></name></expr></argument>, <argument><expr><name pos:line="18" pos:column="43">mode<pos:position pos:line="18" pos:column="47"/></name></expr></argument>, <argument><expr><name pos:line="18" pos:column="49">block<pos:position pos:line="18" pos:column="54"/></name></expr></argument>, <argument><expr><name pos:line="18" pos:column="56">readbytes<pos:position pos:line="18" pos:column="65"/></name></expr></argument>)<pos:position pos:line="18" pos:column="66"/></argument_list></call></expr>;<pos:position pos:line="18" pos:column="67"/></return>
    }<pos:position pos:line="19" pos:column="6"/></block></then></if>

    <if pos:line="21" pos:column="5">if <condition pos:line="21" pos:column="8">(<expr><operator pos:line="21" pos:column="9">!<pos:position pos:line="21" pos:column="10"/></operator><name pos:line="21" pos:column="10">ctx<pos:position pos:line="21" pos:column="13"/></name></expr>)<pos:position pos:line="21" pos:column="14"/></condition><then pos:line="21" pos:column="14"> <block pos:line="21" pos:column="15">{
        <decl_stmt><decl><type><specifier pos:line="22" pos:column="9">const<pos:position pos:line="22" pos:column="14"/></specifier> <name pos:line="22" pos:column="15">char<pos:position pos:line="22" pos:column="19"/></name> <modifier pos:line="22" pos:column="20">*<pos:position pos:line="22" pos:column="21"/></modifier></type><name pos:line="22" pos:column="21">tenc<pos:position pos:line="22" pos:column="25"/></name></decl>, <modifier pos:line="22" pos:column="27">*<pos:position pos:line="22" pos:column="28"/></modifier><decl><type ref="prev"/><name pos:line="22" pos:column="28">lenp<pos:position pos:line="22" pos:column="32"/></name></decl>;<pos:position pos:line="22" pos:column="33"/></decl_stmt>
        <expr_stmt><expr><name><name pos:line="23" pos:column="9">f<pos:position pos:line="23" pos:column="10"/></name><operator pos:line="23" pos:column="10">-&gt;<pos:position pos:line="23" pos:column="15"/></operator><name pos:line="23" pos:column="12">ctx<pos:position pos:line="23" pos:column="15"/></name></name> <operator pos:line="23" pos:column="16">=<pos:position pos:line="23" pos:column="17"/></operator> <name pos:line="23" pos:column="18">ctx<pos:position pos:line="23" pos:column="21"/></name> <operator pos:line="23" pos:column="22">=<pos:position pos:line="23" pos:column="23"/></operator> <call><name pos:line="23" pos:column="24">apr_pcalloc<pos:position pos:line="23" pos:column="35"/></name><argument_list pos:line="23" pos:column="35">(<argument><expr><name><name pos:line="23" pos:column="36">f<pos:position pos:line="23" pos:column="37"/></name><operator pos:line="23" pos:column="37">-&gt;<pos:position pos:line="23" pos:column="42"/></operator><name pos:line="23" pos:column="39">r<pos:position pos:line="23" pos:column="40"/></name><operator pos:line="23" pos:column="40">-&gt;<pos:position pos:line="23" pos:column="45"/></operator><name pos:line="23" pos:column="42">pool<pos:position pos:line="23" pos:column="46"/></name></name></expr></argument>, <argument><expr><sizeof pos:line="23" pos:column="48">sizeof<argument_list pos:line="23" pos:column="54">(<argument><expr><operator pos:line="23" pos:column="55">*<pos:position pos:line="23" pos:column="56"/></operator><name pos:line="23" pos:column="56">ctx<pos:position pos:line="23" pos:column="59"/></name></expr></argument>)<pos:position pos:line="23" pos:column="60"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="23" pos:column="61"/></argument_list></call></expr>;<pos:position pos:line="23" pos:column="62"/></expr_stmt>
        <expr_stmt><expr><name><name pos:line="24" pos:column="9">ctx<pos:position pos:line="24" pos:column="12"/></name><operator pos:line="24" pos:column="12">-&gt;<pos:position pos:line="24" pos:column="17"/></operator><name pos:line="24" pos:column="14">state<pos:position pos:line="24" pos:column="19"/></name></name> <operator pos:line="24" pos:column="20">=<pos:position pos:line="24" pos:column="21"/></operator> <name pos:line="24" pos:column="22">BODY_NONE<pos:position pos:line="24" pos:column="31"/></name></expr>;<pos:position pos:line="24" pos:column="32"/></expr_stmt>
        <expr_stmt><expr><name><name pos:line="25" pos:column="9">ctx<pos:position pos:line="25" pos:column="12"/></name><operator pos:line="25" pos:column="12">-&gt;<pos:position pos:line="25" pos:column="17"/></operator><name pos:line="25" pos:column="14">pos<pos:position pos:line="25" pos:column="17"/></name></name> <operator pos:line="25" pos:column="18">=<pos:position pos:line="25" pos:column="19"/></operator> <name><name pos:line="25" pos:column="20">ctx<pos:position pos:line="25" pos:column="23"/></name><operator pos:line="25" pos:column="23">-&gt;<pos:position pos:line="25" pos:column="28"/></operator><name pos:line="25" pos:column="25">chunk_ln<pos:position pos:line="25" pos:column="33"/></name></name></expr>;<pos:position pos:line="25" pos:column="34"/></expr_stmt>
        <expr_stmt><expr><name><name pos:line="26" pos:column="9">ctx<pos:position pos:line="26" pos:column="12"/></name><operator pos:line="26" pos:column="12">-&gt;<pos:position pos:line="26" pos:column="17"/></operator><name pos:line="26" pos:column="14">bb<pos:position pos:line="26" pos:column="16"/></name></name> <operator pos:line="26" pos:column="17">=<pos:position pos:line="26" pos:column="18"/></operator> <call><name pos:line="26" pos:column="19">apr_brigade_create<pos:position pos:line="26" pos:column="37"/></name><argument_list pos:line="26" pos:column="37">(<argument><expr><name><name pos:line="26" pos:column="38">f<pos:position pos:line="26" pos:column="39"/></name><operator pos:line="26" pos:column="39">-&gt;<pos:position pos:line="26" pos:column="44"/></operator><name pos:line="26" pos:column="41">r<pos:position pos:line="26" pos:column="42"/></name><operator pos:line="26" pos:column="42">-&gt;<pos:position pos:line="26" pos:column="47"/></operator><name pos:line="26" pos:column="44">pool<pos:position pos:line="26" pos:column="48"/></name></name></expr></argument>, <argument><expr><name><name pos:line="26" pos:column="50">f<pos:position pos:line="26" pos:column="51"/></name><operator pos:line="26" pos:column="51">-&gt;<pos:position pos:line="26" pos:column="56"/></operator><name pos:line="26" pos:column="53">c<pos:position pos:line="26" pos:column="54"/></name><operator pos:line="26" pos:column="54">-&gt;<pos:position pos:line="26" pos:column="59"/></operator><name pos:line="26" pos:column="56">bucket_alloc<pos:position pos:line="26" pos:column="68"/></name></name></expr></argument>)<pos:position pos:line="26" pos:column="69"/></argument_list></call></expr>;<pos:position pos:line="26" pos:column="70"/></expr_stmt>
        <expr_stmt><expr><name pos:line="27" pos:column="9">bb<pos:position pos:line="27" pos:column="11"/></name> <operator pos:line="27" pos:column="12">=<pos:position pos:line="27" pos:column="13"/></operator> <name><name pos:line="27" pos:column="14">ctx<pos:position pos:line="27" pos:column="17"/></name><operator pos:line="27" pos:column="17">-&gt;<pos:position pos:line="27" pos:column="22"/></operator><name pos:line="27" pos:column="19">bb<pos:position pos:line="27" pos:column="21"/></name></name></expr>;<pos:position pos:line="27" pos:column="22"/></expr_stmt>

        <comment type="block" pos:line="29" pos:column="9">/* LimitRequestBody does not apply to proxied responses.
         * Consider implementing this check in its own filter.
         * Would adding a directive to limit the size of proxied
         * responses be useful?
         */</comment>
        <if pos:line="34" pos:column="9">if <condition pos:line="34" pos:column="12">(<expr><operator pos:line="34" pos:column="13">!<pos:position pos:line="34" pos:column="14"/></operator><name><name pos:line="34" pos:column="14">f<pos:position pos:line="34" pos:column="15"/></name><operator pos:line="34" pos:column="15">-&gt;<pos:position pos:line="34" pos:column="20"/></operator><name pos:line="34" pos:column="17">r<pos:position pos:line="34" pos:column="18"/></name><operator pos:line="34" pos:column="18">-&gt;<pos:position pos:line="34" pos:column="23"/></operator><name pos:line="34" pos:column="20">proxyreq<pos:position pos:line="34" pos:column="28"/></name></name></expr>)<pos:position pos:line="34" pos:column="29"/></condition><then pos:line="34" pos:column="29"> <block pos:line="34" pos:column="30">{
            <expr_stmt><expr><name><name pos:line="35" pos:column="13">ctx<pos:position pos:line="35" pos:column="16"/></name><operator pos:line="35" pos:column="16">-&gt;<pos:position pos:line="35" pos:column="21"/></operator><name pos:line="35" pos:column="18">limit<pos:position pos:line="35" pos:column="23"/></name></name> <operator pos:line="35" pos:column="24">=<pos:position pos:line="35" pos:column="25"/></operator> <call><name pos:line="35" pos:column="26">ap_get_limit_req_body<pos:position pos:line="35" pos:column="47"/></name><argument_list pos:line="35" pos:column="47">(<argument><expr><name><name pos:line="35" pos:column="48">f<pos:position pos:line="35" pos:column="49"/></name><operator pos:line="35" pos:column="49">-&gt;<pos:position pos:line="35" pos:column="54"/></operator><name pos:line="35" pos:column="51">r<pos:position pos:line="35" pos:column="52"/></name></name></expr></argument>)<pos:position pos:line="35" pos:column="53"/></argument_list></call></expr>;<pos:position pos:line="35" pos:column="54"/></expr_stmt>
        }<pos:position pos:line="36" pos:column="10"/></block></then>
        <else pos:line="37" pos:column="9">else <block pos:line="37" pos:column="14">{
            <expr_stmt><expr><name><name pos:line="38" pos:column="13">ctx<pos:position pos:line="38" pos:column="16"/></name><operator pos:line="38" pos:column="16">-&gt;<pos:position pos:line="38" pos:column="21"/></operator><name pos:line="38" pos:column="18">limit<pos:position pos:line="38" pos:column="23"/></name></name> <operator pos:line="38" pos:column="24">=<pos:position pos:line="38" pos:column="25"/></operator> <literal type="number" pos:line="38" pos:column="26">0<pos:position pos:line="38" pos:column="27"/></literal></expr>;<pos:position pos:line="38" pos:column="28"/></expr_stmt>
        }<pos:position pos:line="39" pos:column="10"/></block></else></if>

        <expr_stmt><expr><name pos:line="41" pos:column="9">tenc<pos:position pos:line="41" pos:column="13"/></name> <operator pos:line="41" pos:column="14">=<pos:position pos:line="41" pos:column="15"/></operator> <call><name pos:line="41" pos:column="16">apr_table_get<pos:position pos:line="41" pos:column="29"/></name><argument_list pos:line="41" pos:column="29">(<argument><expr><name><name pos:line="41" pos:column="30">f<pos:position pos:line="41" pos:column="31"/></name><operator pos:line="41" pos:column="31">-&gt;<pos:position pos:line="41" pos:column="36"/></operator><name pos:line="41" pos:column="33">r<pos:position pos:line="41" pos:column="34"/></name><operator pos:line="41" pos:column="34">-&gt;<pos:position pos:line="41" pos:column="39"/></operator><name pos:line="41" pos:column="36">headers_in<pos:position pos:line="41" pos:column="46"/></name></name></expr></argument>, <argument><expr><literal type="string" pos:line="41" pos:column="48">"Transfer-Encoding"<pos:position pos:line="41" pos:column="67"/></literal></expr></argument>)<pos:position pos:line="41" pos:column="68"/></argument_list></call></expr>;<pos:position pos:line="41" pos:column="69"/></expr_stmt>
        <expr_stmt><expr><name pos:line="42" pos:column="9">lenp<pos:position pos:line="42" pos:column="13"/></name> <operator pos:line="42" pos:column="14">=<pos:position pos:line="42" pos:column="15"/></operator> <call><name pos:line="42" pos:column="16">apr_table_get<pos:position pos:line="42" pos:column="29"/></name><argument_list pos:line="42" pos:column="29">(<argument><expr><name><name pos:line="42" pos:column="30">f<pos:position pos:line="42" pos:column="31"/></name><operator pos:line="42" pos:column="31">-&gt;<pos:position pos:line="42" pos:column="36"/></operator><name pos:line="42" pos:column="33">r<pos:position pos:line="42" pos:column="34"/></name><operator pos:line="42" pos:column="34">-&gt;<pos:position pos:line="42" pos:column="39"/></operator><name pos:line="42" pos:column="36">headers_in<pos:position pos:line="42" pos:column="46"/></name></name></expr></argument>, <argument><expr><literal type="string" pos:line="42" pos:column="48">"Content-Length"<pos:position pos:line="42" pos:column="64"/></literal></expr></argument>)<pos:position pos:line="42" pos:column="65"/></argument_list></call></expr>;<pos:position pos:line="42" pos:column="66"/></expr_stmt>

        <if pos:line="44" pos:column="9">if <condition pos:line="44" pos:column="12">(<expr><name pos:line="44" pos:column="13">tenc<pos:position pos:line="44" pos:column="17"/></name></expr>)<pos:position pos:line="44" pos:column="18"/></condition><then pos:line="44" pos:column="18"> <block pos:line="44" pos:column="19">{
            <if pos:line="45" pos:column="13">if <condition pos:line="45" pos:column="16">(<expr><call><name pos:line="45" pos:column="17">strcasecmp<pos:position pos:line="45" pos:column="27"/></name><argument_list pos:line="45" pos:column="27">(<argument><expr><name pos:line="45" pos:column="28">tenc<pos:position pos:line="45" pos:column="32"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="45" pos:column="34">"chunked"<pos:position pos:line="45" pos:column="43"/></literal></expr></argument>)<pos:position pos:line="45" pos:column="44"/></argument_list></call> <operator pos:line="45" pos:column="45">==<pos:position pos:line="45" pos:column="47"/></operator> <literal type="number" pos:line="45" pos:column="48">0<pos:position pos:line="45" pos:column="49"/></literal> <comment type="block" pos:line="45" pos:column="50">/* fast path */</comment>
                    <operator pos:line="46" pos:column="21">||<pos:position pos:line="46" pos:column="23"/></operator> <call><name pos:line="46" pos:column="24">ap_find_last_token<pos:position pos:line="46" pos:column="42"/></name><argument_list pos:line="46" pos:column="42">(<argument><expr><name><name pos:line="46" pos:column="43">f<pos:position pos:line="46" pos:column="44"/></name><operator pos:line="46" pos:column="44">-&gt;<pos:position pos:line="46" pos:column="49"/></operator><name pos:line="46" pos:column="46">r<pos:position pos:line="46" pos:column="47"/></name><operator pos:line="46" pos:column="47">-&gt;<pos:position pos:line="46" pos:column="52"/></operator><name pos:line="46" pos:column="49">pool<pos:position pos:line="46" pos:column="53"/></name></name></expr></argument>, <argument><expr><name pos:line="46" pos:column="55">tenc<pos:position pos:line="46" pos:column="59"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="46" pos:column="61">"chunked"<pos:position pos:line="46" pos:column="70"/></literal></expr></argument>)<pos:position pos:line="46" pos:column="71"/></argument_list></call></expr>)<pos:position pos:line="46" pos:column="72"/></condition><then pos:line="46" pos:column="72"> <block pos:line="46" pos:column="73">{
                <expr_stmt><expr><name><name pos:line="47" pos:column="17">ctx<pos:position pos:line="47" pos:column="20"/></name><operator pos:line="47" pos:column="20">-&gt;<pos:position pos:line="47" pos:column="25"/></operator><name pos:line="47" pos:column="22">state<pos:position pos:line="47" pos:column="27"/></name></name> <operator pos:line="47" pos:column="28">=<pos:position pos:line="47" pos:column="29"/></operator> <name pos:line="47" pos:column="30">BODY_CHUNK<pos:position pos:line="47" pos:column="40"/></name></expr>;<pos:position pos:line="47" pos:column="41"/></expr_stmt>
            }<pos:position pos:line="48" pos:column="14"/></block></then>
            <elseif pos:line="49" pos:column="13">else <if pos:line="49" pos:column="18">if <condition pos:line="49" pos:column="21">(<expr><name><name pos:line="49" pos:column="22">f<pos:position pos:line="49" pos:column="23"/></name><operator pos:line="49" pos:column="23">-&gt;<pos:position pos:line="49" pos:column="28"/></operator><name pos:line="49" pos:column="25">r<pos:position pos:line="49" pos:column="26"/></name><operator pos:line="49" pos:column="26">-&gt;<pos:position pos:line="49" pos:column="31"/></operator><name pos:line="49" pos:column="28">proxyreq<pos:position pos:line="49" pos:column="36"/></name></name> <operator pos:line="49" pos:column="37">==<pos:position pos:line="49" pos:column="39"/></operator> <name pos:line="49" pos:column="40">PROXYREQ_RESPONSE<pos:position pos:line="49" pos:column="57"/></name></expr>)<pos:position pos:line="49" pos:column="58"/></condition><then pos:line="49" pos:column="58"> <block pos:line="49" pos:column="59">{
                <comment type="block" pos:line="50" pos:column="17">/* http://tools.ietf.org/html/draft-ietf-httpbis-p1-messaging-23
                 * Section 3.3.3.3: "If a Transfer-Encoding header field is
                 * present in a response and the chunked transfer coding is not
                 * the final encoding, the message body length is determined by
                 * reading the connection until it is closed by the server."
                 */</comment>
                <expr_stmt><expr><call><name pos:line="56" pos:column="17">ap_log_rerror<pos:position pos:line="56" pos:column="30"/></name><argument_list pos:line="56" pos:column="30">(<argument><expr><name pos:line="56" pos:column="31">APLOG_MARK<pos:position pos:line="56" pos:column="41"/></name></expr></argument>, <argument><expr><name pos:line="56" pos:column="43">APLOG_INFO<pos:position pos:line="56" pos:column="53"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="56" pos:column="55">0<pos:position pos:line="56" pos:column="56"/></literal></expr></argument>, <argument><expr><name><name pos:line="56" pos:column="58">f<pos:position pos:line="56" pos:column="59"/></name><operator pos:line="56" pos:column="59">-&gt;<pos:position pos:line="56" pos:column="64"/></operator><name pos:line="56" pos:column="61">r<pos:position pos:line="56" pos:column="62"/></name></name></expr></argument>,
                              <argument><expr><literal type="string" pos:line="57" pos:column="31">"Unknown Transfer-Encoding: %s; "<pos:position pos:line="57" pos:column="64"/></literal>
                              <literal type="string" pos:line="58" pos:column="31">"using read-until-close"<pos:position pos:line="58" pos:column="55"/></literal></expr></argument>, <argument><expr><name pos:line="58" pos:column="57">tenc<pos:position pos:line="58" pos:column="61"/></name></expr></argument>)<pos:position pos:line="58" pos:column="62"/></argument_list></call></expr>;<pos:position pos:line="58" pos:column="63"/></expr_stmt>
                <expr_stmt><expr><name pos:line="59" pos:column="17">tenc<pos:position pos:line="59" pos:column="21"/></name> <operator pos:line="59" pos:column="22">=<pos:position pos:line="59" pos:column="23"/></operator> <name pos:line="59" pos:column="24">NULL<pos:position pos:line="59" pos:column="28"/></name></expr>;<pos:position pos:line="59" pos:column="29"/></expr_stmt>
            }<pos:position pos:line="60" pos:column="14"/></block></then></if></elseif>
            <else pos:line="61" pos:column="13">else <block pos:line="61" pos:column="18">{
                <comment type="block" pos:line="62" pos:column="17">/* Something that isn't a HTTP request, unless some future
                 * edition defines new transfer encodings, is unsupported.
                 */</comment>
                <expr_stmt><expr><call><name pos:line="65" pos:column="17">ap_log_rerror<pos:position pos:line="65" pos:column="30"/></name><argument_list pos:line="65" pos:column="30">(<argument><expr><name pos:line="65" pos:column="31">APLOG_MARK<pos:position pos:line="65" pos:column="41"/></name></expr></argument>, <argument><expr><name pos:line="65" pos:column="43">APLOG_INFO<pos:position pos:line="65" pos:column="53"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="65" pos:column="55">0<pos:position pos:line="65" pos:column="56"/></literal></expr></argument>, <argument><expr><name><name pos:line="65" pos:column="58">f<pos:position pos:line="65" pos:column="59"/></name><operator pos:line="65" pos:column="59">-&gt;<pos:position pos:line="65" pos:column="64"/></operator><name pos:line="65" pos:column="61">r<pos:position pos:line="65" pos:column="62"/></name></name></expr></argument>,
                              <argument><expr><literal type="string" pos:line="66" pos:column="31">"Unknown Transfer-Encoding: %s"<pos:position pos:line="66" pos:column="62"/></literal></expr></argument>, <argument><expr><name pos:line="66" pos:column="64">tenc<pos:position pos:line="66" pos:column="68"/></name></expr></argument>)<pos:position pos:line="66" pos:column="69"/></argument_list></call></expr>;<pos:position pos:line="66" pos:column="70"/></expr_stmt>
                <return pos:line="67" pos:column="17">return <expr><call><name pos:line="67" pos:column="24">bail_out_on_error<pos:position pos:line="67" pos:column="41"/></name><argument_list pos:line="67" pos:column="41">(<argument><expr><name pos:line="67" pos:column="42">ctx<pos:position pos:line="67" pos:column="45"/></name></expr></argument>, <argument><expr><name pos:line="67" pos:column="47">f<pos:position pos:line="67" pos:column="48"/></name></expr></argument>, <argument><expr><name pos:line="67" pos:column="50">HTTP_NOT_IMPLEMENTED<pos:position pos:line="67" pos:column="70"/></name></expr></argument>)<pos:position pos:line="67" pos:column="71"/></argument_list></call></expr>;<pos:position pos:line="67" pos:column="72"/></return>
            }<pos:position pos:line="68" pos:column="14"/></block></else></if>
            <expr_stmt><expr><name pos:line="69" pos:column="13">lenp<pos:position pos:line="69" pos:column="17"/></name> <operator pos:line="69" pos:column="18">=<pos:position pos:line="69" pos:column="19"/></operator> <name pos:line="69" pos:column="20">NULL<pos:position pos:line="69" pos:column="24"/></name></expr>;<pos:position pos:line="69" pos:column="25"/></expr_stmt>
        }<pos:position pos:line="70" pos:column="10"/></block></then></if>
        <if pos:line="71" pos:column="9">if <condition pos:line="71" pos:column="12">(<expr><name pos:line="71" pos:column="13">lenp<pos:position pos:line="71" pos:column="17"/></name></expr>)<pos:position pos:line="71" pos:column="18"/></condition><then pos:line="71" pos:column="18"> <block pos:line="71" pos:column="19">{
            <decl_stmt><decl><type><name pos:line="72" pos:column="13">char<pos:position pos:line="72" pos:column="17"/></name> <modifier pos:line="72" pos:column="18">*<pos:position pos:line="72" pos:column="19"/></modifier></type><name pos:line="72" pos:column="19">endstr<pos:position pos:line="72" pos:column="25"/></name></decl>;<pos:position pos:line="72" pos:column="26"/></decl_stmt>

            <expr_stmt><expr><name><name pos:line="74" pos:column="13">ctx<pos:position pos:line="74" pos:column="16"/></name><operator pos:line="74" pos:column="16">-&gt;<pos:position pos:line="74" pos:column="21"/></operator><name pos:line="74" pos:column="18">state<pos:position pos:line="74" pos:column="23"/></name></name> <operator pos:line="74" pos:column="24">=<pos:position pos:line="74" pos:column="25"/></operator> <name pos:line="74" pos:column="26">BODY_LENGTH<pos:position pos:line="74" pos:column="37"/></name></expr>;<pos:position pos:line="74" pos:column="38"/></expr_stmt>
            <expr_stmt><expr><name pos:line="75" pos:column="13">errno<pos:position pos:line="75" pos:column="18"/></name> <operator pos:line="75" pos:column="19">=<pos:position pos:line="75" pos:column="20"/></operator> <literal type="number" pos:line="75" pos:column="21">0<pos:position pos:line="75" pos:column="22"/></literal></expr>;<pos:position pos:line="75" pos:column="23"/></expr_stmt>

            <comment type="block" pos:line="77" pos:column="13">/* Protects against over/underflow, non-digit chars in the
             * string (excluding leading space) (the endstr checks)
             * and a negative number. */</comment>
            <if pos:line="80" pos:column="13">if <condition pos:line="80" pos:column="16">(<expr><call><name pos:line="80" pos:column="17">apr_strtoff<pos:position pos:line="80" pos:column="28"/></name><argument_list pos:line="80" pos:column="28">(<argument><expr><operator pos:line="80" pos:column="29">&amp;<pos:position pos:line="80" pos:column="34"/></operator><name><name pos:line="80" pos:column="30">ctx<pos:position pos:line="80" pos:column="33"/></name><operator pos:line="80" pos:column="33">-&gt;<pos:position pos:line="80" pos:column="38"/></operator><name pos:line="80" pos:column="35">remaining<pos:position pos:line="80" pos:column="44"/></name></name></expr></argument>, <argument><expr><name pos:line="80" pos:column="46">lenp<pos:position pos:line="80" pos:column="50"/></name></expr></argument>, <argument><expr><operator pos:line="80" pos:column="52">&amp;<pos:position pos:line="80" pos:column="57"/></operator><name pos:line="80" pos:column="53">endstr<pos:position pos:line="80" pos:column="59"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="80" pos:column="61">10<pos:position pos:line="80" pos:column="63"/></literal></expr></argument>)<pos:position pos:line="80" pos:column="64"/></argument_list></call>
                <operator pos:line="81" pos:column="17">||<pos:position pos:line="81" pos:column="19"/></operator> <name pos:line="81" pos:column="20">endstr<pos:position pos:line="81" pos:column="26"/></name> <operator pos:line="81" pos:column="27">==<pos:position pos:line="81" pos:column="29"/></operator> <name pos:line="81" pos:column="30">lenp<pos:position pos:line="81" pos:column="34"/></name> <operator pos:line="81" pos:column="35">||<pos:position pos:line="81" pos:column="37"/></operator> <operator pos:line="81" pos:column="38">*<pos:position pos:line="81" pos:column="39"/></operator><name pos:line="81" pos:column="39">endstr<pos:position pos:line="81" pos:column="45"/></name> <operator pos:line="81" pos:column="46">||<pos:position pos:line="81" pos:column="48"/></operator> <name><name pos:line="81" pos:column="49">ctx<pos:position pos:line="81" pos:column="52"/></name><operator pos:line="81" pos:column="52">-&gt;<pos:position pos:line="81" pos:column="57"/></operator><name pos:line="81" pos:column="54">remaining<pos:position pos:line="81" pos:column="63"/></name></name> <operator pos:line="81" pos:column="64">&lt;<pos:position pos:line="81" pos:column="68"/></operator> <literal type="number" pos:line="81" pos:column="66">0<pos:position pos:line="81" pos:column="67"/></literal></expr>)<pos:position pos:line="81" pos:column="68"/></condition><then pos:line="81" pos:column="68"> <block pos:line="81" pos:column="69">{

                <expr_stmt><expr><name><name pos:line="83" pos:column="17">ctx<pos:position pos:line="83" pos:column="20"/></name><operator pos:line="83" pos:column="20">-&gt;<pos:position pos:line="83" pos:column="25"/></operator><name pos:line="83" pos:column="22">remaining<pos:position pos:line="83" pos:column="31"/></name></name> <operator pos:line="83" pos:column="32">=<pos:position pos:line="83" pos:column="33"/></operator> <literal type="number" pos:line="83" pos:column="34">0<pos:position pos:line="83" pos:column="35"/></literal></expr>;<pos:position pos:line="83" pos:column="36"/></expr_stmt>
                <expr_stmt><expr><call><name pos:line="84" pos:column="17">ap_log_rerror<pos:position pos:line="84" pos:column="30"/></name><argument_list pos:line="84" pos:column="30">(<argument><expr><name pos:line="84" pos:column="31">APLOG_MARK<pos:position pos:line="84" pos:column="41"/></name></expr></argument>, <argument><expr><name pos:line="84" pos:column="43">APLOG_ERR<pos:position pos:line="84" pos:column="52"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="84" pos:column="54">0<pos:position pos:line="84" pos:column="55"/></literal></expr></argument>, <argument><expr><name><name pos:line="84" pos:column="57">f<pos:position pos:line="84" pos:column="58"/></name><operator pos:line="84" pos:column="58">-&gt;<pos:position pos:line="84" pos:column="63"/></operator><name pos:line="84" pos:column="60">r<pos:position pos:line="84" pos:column="61"/></name></name></expr></argument>,
                              <argument><expr><literal type="string" pos:line="85" pos:column="31">"Invalid Content-Length"<pos:position pos:line="85" pos:column="55"/></literal></expr></argument>)<pos:position pos:line="85" pos:column="56"/></argument_list></call></expr>;<pos:position pos:line="85" pos:column="57"/></expr_stmt>

                <return pos:line="87" pos:column="17">return <expr><call><name pos:line="87" pos:column="24">bail_out_on_error<pos:position pos:line="87" pos:column="41"/></name><argument_list pos:line="87" pos:column="41">(<argument><expr><name pos:line="87" pos:column="42">ctx<pos:position pos:line="87" pos:column="45"/></name></expr></argument>, <argument><expr><name pos:line="87" pos:column="47">f<pos:position pos:line="87" pos:column="48"/></name></expr></argument>, <argument><expr><name pos:line="87" pos:column="50">HTTP_REQUEST_ENTITY_TOO_LARGE<pos:position pos:line="87" pos:column="79"/></name></expr></argument>)<pos:position pos:line="87" pos:column="80"/></argument_list></call></expr>;<pos:position pos:line="87" pos:column="81"/></return>
            }<pos:position pos:line="88" pos:column="14"/></block></then></if>

            <comment type="block" pos:line="90" pos:column="13">/* If we have a limit in effect and we know the C-L ahead of
             * time, stop it here if it is invalid.
             */</comment>
            <if pos:line="93" pos:column="13">if <condition pos:line="93" pos:column="16">(<expr><name><name pos:line="93" pos:column="17">ctx<pos:position pos:line="93" pos:column="20"/></name><operator pos:line="93" pos:column="20">-&gt;<pos:position pos:line="93" pos:column="25"/></operator><name pos:line="93" pos:column="22">limit<pos:position pos:line="93" pos:column="27"/></name></name> <operator pos:line="93" pos:column="28">&amp;&amp;<pos:position pos:line="93" pos:column="38"/></operator> <name><name pos:line="93" pos:column="31">ctx<pos:position pos:line="93" pos:column="34"/></name><operator pos:line="93" pos:column="34">-&gt;<pos:position pos:line="93" pos:column="39"/></operator><name pos:line="93" pos:column="36">limit<pos:position pos:line="93" pos:column="41"/></name></name> <operator pos:line="93" pos:column="42">&lt;<pos:position pos:line="93" pos:column="46"/></operator> <name><name pos:line="93" pos:column="44">ctx<pos:position pos:line="93" pos:column="47"/></name><operator pos:line="93" pos:column="47">-&gt;<pos:position pos:line="93" pos:column="52"/></operator><name pos:line="93" pos:column="49">remaining<pos:position pos:line="93" pos:column="58"/></name></name></expr>)<pos:position pos:line="93" pos:column="59"/></condition><then pos:line="93" pos:column="59"> <block pos:line="93" pos:column="60">{
                <expr_stmt><expr><call><name pos:line="94" pos:column="17">ap_log_rerror<pos:position pos:line="94" pos:column="30"/></name><argument_list pos:line="94" pos:column="30">(<argument><expr><name pos:line="94" pos:column="31">APLOG_MARK<pos:position pos:line="94" pos:column="41"/></name></expr></argument>, <argument><expr><name pos:line="94" pos:column="43">APLOG_ERR<pos:position pos:line="94" pos:column="52"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="94" pos:column="54">0<pos:position pos:line="94" pos:column="55"/></literal></expr></argument>, <argument><expr><name><name pos:line="94" pos:column="57">f<pos:position pos:line="94" pos:column="58"/></name><operator pos:line="94" pos:column="58">-&gt;<pos:position pos:line="94" pos:column="63"/></operator><name pos:line="94" pos:column="60">r<pos:position pos:line="94" pos:column="61"/></name></name></expr></argument>,
                          <argument><expr><literal type="string" pos:line="95" pos:column="27">"Requested content-length of %"<pos:position pos:line="95" pos:column="58"/></literal> <name pos:line="95" pos:column="59">APR_OFF_T_FMT<pos:position pos:line="95" pos:column="72"/></name>
                          <literal type="string" pos:line="96" pos:column="27">" is larger than the configured limit"<pos:position pos:line="96" pos:column="65"/></literal>
                          <literal type="string" pos:line="97" pos:column="27">" of %"<pos:position pos:line="97" pos:column="34"/></literal> <name pos:line="97" pos:column="35">APR_OFF_T_FMT<pos:position pos:line="97" pos:column="48"/></name></expr></argument>, <argument><expr><name><name pos:line="97" pos:column="50">ctx<pos:position pos:line="97" pos:column="53"/></name><operator pos:line="97" pos:column="53">-&gt;<pos:position pos:line="97" pos:column="58"/></operator><name pos:line="97" pos:column="55">remaining<pos:position pos:line="97" pos:column="64"/></name></name></expr></argument>, <argument><expr><name><name pos:line="97" pos:column="66">ctx<pos:position pos:line="97" pos:column="69"/></name><operator pos:line="97" pos:column="69">-&gt;<pos:position pos:line="97" pos:column="74"/></operator><name pos:line="97" pos:column="71">limit<pos:position pos:line="97" pos:column="76"/></name></name></expr></argument>)<pos:position pos:line="97" pos:column="77"/></argument_list></call></expr>;<pos:position pos:line="97" pos:column="78"/></expr_stmt>
                <return pos:line="98" pos:column="17">return <expr><call><name pos:line="98" pos:column="24">bail_out_on_error<pos:position pos:line="98" pos:column="41"/></name><argument_list pos:line="98" pos:column="41">(<argument><expr><name pos:line="98" pos:column="42">ctx<pos:position pos:line="98" pos:column="45"/></name></expr></argument>, <argument><expr><name pos:line="98" pos:column="47">f<pos:position pos:line="98" pos:column="48"/></name></expr></argument>, <argument><expr><name pos:line="98" pos:column="50">HTTP_REQUEST_ENTITY_TOO_LARGE<pos:position pos:line="98" pos:column="79"/></name></expr></argument>)<pos:position pos:line="98" pos:column="80"/></argument_list></call></expr>;<pos:position pos:line="98" pos:column="81"/></return>
            }<pos:position pos:line="99" pos:column="14"/></block></then></if>
        }<pos:position pos:line="100" pos:column="10"/></block></then></if>

        <comment type="block" pos:line="102" pos:column="9">/* If we don't have a request entity indicated by the headers, EOS.
         * (BODY_NONE is a valid intermediate state due to trailers,
         *  but it isn't a valid starting state.)
         *
         * RFC 2616 Section 4.4 note 5 states that connection-close
         * is invalid for a request entity - request bodies must be
         * denoted by C-L or T-E: chunked.
         *
         * Note that since the proxy uses this filter to handle the
         * proxied *response*, proxy responses MUST be exempt.
         */</comment>
        <if pos:line="113" pos:column="9">if <condition pos:line="113" pos:column="12">(<expr><name><name pos:line="113" pos:column="13">ctx<pos:position pos:line="113" pos:column="16"/></name><operator pos:line="113" pos:column="16">-&gt;<pos:position pos:line="113" pos:column="21"/></operator><name pos:line="113" pos:column="18">state<pos:position pos:line="113" pos:column="23"/></name></name> <operator pos:line="113" pos:column="24">==<pos:position pos:line="113" pos:column="26"/></operator> <name pos:line="113" pos:column="27">BODY_NONE<pos:position pos:line="113" pos:column="36"/></name> <operator pos:line="113" pos:column="37">&amp;&amp;<pos:position pos:line="113" pos:column="47"/></operator> <name><name pos:line="113" pos:column="40">f<pos:position pos:line="113" pos:column="41"/></name><operator pos:line="113" pos:column="41">-&gt;<pos:position pos:line="113" pos:column="46"/></operator><name pos:line="113" pos:column="43">r<pos:position pos:line="113" pos:column="44"/></name><operator pos:line="113" pos:column="44">-&gt;<pos:position pos:line="113" pos:column="49"/></operator><name pos:line="113" pos:column="46">proxyreq<pos:position pos:line="113" pos:column="54"/></name></name> <operator pos:line="113" pos:column="55">!=<pos:position pos:line="113" pos:column="57"/></operator> <name pos:line="113" pos:column="58">PROXYREQ_RESPONSE<pos:position pos:line="113" pos:column="75"/></name></expr>)<pos:position pos:line="113" pos:column="76"/></condition><then pos:line="113" pos:column="76"> <block pos:line="113" pos:column="77">{
            <expr_stmt><expr><name pos:line="114" pos:column="13">e<pos:position pos:line="114" pos:column="14"/></name> <operator pos:line="114" pos:column="15">=<pos:position pos:line="114" pos:column="16"/></operator> <call><name pos:line="114" pos:column="17">apr_bucket_eos_create<pos:position pos:line="114" pos:column="38"/></name><argument_list pos:line="114" pos:column="38">(<argument><expr><name><name pos:line="114" pos:column="39">f<pos:position pos:line="114" pos:column="40"/></name><operator pos:line="114" pos:column="40">-&gt;<pos:position pos:line="114" pos:column="45"/></operator><name pos:line="114" pos:column="42">c<pos:position pos:line="114" pos:column="43"/></name><operator pos:line="114" pos:column="43">-&gt;<pos:position pos:line="114" pos:column="48"/></operator><name pos:line="114" pos:column="45">bucket_alloc<pos:position pos:line="114" pos:column="57"/></name></name></expr></argument>)<pos:position pos:line="114" pos:column="58"/></argument_list></call></expr>;<pos:position pos:line="114" pos:column="59"/></expr_stmt>
            <expr_stmt><expr><call><name pos:line="115" pos:column="13">APR_BRIGADE_INSERT_TAIL<pos:position pos:line="115" pos:column="36"/></name><argument_list pos:line="115" pos:column="36">(<argument><expr><name pos:line="115" pos:column="37">b<pos:position pos:line="115" pos:column="38"/></name></expr></argument>, <argument><expr><name pos:line="115" pos:column="40">e<pos:position pos:line="115" pos:column="41"/></name></expr></argument>)<pos:position pos:line="115" pos:column="42"/></argument_list></call></expr>;<pos:position pos:line="115" pos:column="43"/></expr_stmt>
            <expr_stmt><expr><name><name pos:line="116" pos:column="13">ctx<pos:position pos:line="116" pos:column="16"/></name><operator pos:line="116" pos:column="16">-&gt;<pos:position pos:line="116" pos:column="21"/></operator><name pos:line="116" pos:column="18">eos_sent<pos:position pos:line="116" pos:column="26"/></name></name> <operator pos:line="116" pos:column="27">=<pos:position pos:line="116" pos:column="28"/></operator> <literal type="number" pos:line="116" pos:column="29">1<pos:position pos:line="116" pos:column="30"/></literal></expr>;<pos:position pos:line="116" pos:column="31"/></expr_stmt>
            <return pos:line="117" pos:column="13">return <expr><name pos:line="117" pos:column="20">APR_SUCCESS<pos:position pos:line="117" pos:column="31"/></name></expr>;<pos:position pos:line="117" pos:column="32"/></return>
        }<pos:position pos:line="118" pos:column="10"/></block></then></if>

        <comment type="block" pos:line="120" pos:column="9">/* Since we're about to read data, send 100-Continue if needed.
         * Only valid on chunked and C-L bodies where the C-L is &gt; 0. */</comment>
        <if pos:line="122" pos:column="9">if <condition pos:line="122" pos:column="12">(<expr><operator pos:line="122" pos:column="13">(<pos:position pos:line="122" pos:column="14"/></operator><name><name pos:line="122" pos:column="14">ctx<pos:position pos:line="122" pos:column="17"/></name><operator pos:line="122" pos:column="17">-&gt;<pos:position pos:line="122" pos:column="22"/></operator><name pos:line="122" pos:column="19">state<pos:position pos:line="122" pos:column="24"/></name></name> <operator pos:line="122" pos:column="25">==<pos:position pos:line="122" pos:column="27"/></operator> <name pos:line="122" pos:column="28">BODY_CHUNK<pos:position pos:line="122" pos:column="38"/></name> <operator pos:line="122" pos:column="39">||<pos:position pos:line="122" pos:column="41"/></operator>
            <operator pos:line="123" pos:column="13">(<pos:position pos:line="123" pos:column="14"/></operator><name><name pos:line="123" pos:column="14">ctx<pos:position pos:line="123" pos:column="17"/></name><operator pos:line="123" pos:column="17">-&gt;<pos:position pos:line="123" pos:column="22"/></operator><name pos:line="123" pos:column="19">state<pos:position pos:line="123" pos:column="24"/></name></name> <operator pos:line="123" pos:column="25">==<pos:position pos:line="123" pos:column="27"/></operator> <name pos:line="123" pos:column="28">BODY_LENGTH<pos:position pos:line="123" pos:column="39"/></name> <operator pos:line="123" pos:column="40">&amp;&amp;<pos:position pos:line="123" pos:column="50"/></operator> <name><name pos:line="123" pos:column="43">ctx<pos:position pos:line="123" pos:column="46"/></name><operator pos:line="123" pos:column="46">-&gt;<pos:position pos:line="123" pos:column="51"/></operator><name pos:line="123" pos:column="48">remaining<pos:position pos:line="123" pos:column="57"/></name></name> <operator pos:line="123" pos:column="58">&gt;<pos:position pos:line="123" pos:column="62"/></operator> <literal type="number" pos:line="123" pos:column="60">0<pos:position pos:line="123" pos:column="61"/></literal><operator pos:line="123" pos:column="61">)<pos:position pos:line="123" pos:column="62"/></operator><operator pos:line="123" pos:column="62">)<pos:position pos:line="123" pos:column="63"/></operator> <operator pos:line="123" pos:column="64">&amp;&amp;<pos:position pos:line="123" pos:column="74"/></operator>
            <name><name pos:line="124" pos:column="13">f<pos:position pos:line="124" pos:column="14"/></name><operator pos:line="124" pos:column="14">-&gt;<pos:position pos:line="124" pos:column="19"/></operator><name pos:line="124" pos:column="16">r<pos:position pos:line="124" pos:column="17"/></name><operator pos:line="124" pos:column="17">-&gt;<pos:position pos:line="124" pos:column="22"/></operator><name pos:line="124" pos:column="19">expecting_100<pos:position pos:line="124" pos:column="32"/></name></name> <operator pos:line="124" pos:column="33">&amp;&amp;<pos:position pos:line="124" pos:column="43"/></operator> <name><name pos:line="124" pos:column="36">f<pos:position pos:line="124" pos:column="37"/></name><operator pos:line="124" pos:column="37">-&gt;<pos:position pos:line="124" pos:column="42"/></operator><name pos:line="124" pos:column="39">r<pos:position pos:line="124" pos:column="40"/></name><operator pos:line="124" pos:column="40">-&gt;<pos:position pos:line="124" pos:column="45"/></operator><name pos:line="124" pos:column="42">proto_num<pos:position pos:line="124" pos:column="51"/></name></name> <operator pos:line="124" pos:column="52">&gt;=<pos:position pos:line="124" pos:column="57"/></operator> <call><name pos:line="124" pos:column="55">HTTP_VERSION<pos:position pos:line="124" pos:column="67"/></name><argument_list pos:line="124" pos:column="67">(<argument><expr><literal type="number" pos:line="124" pos:column="68">1<pos:position pos:line="124" pos:column="69"/></literal></expr></argument>,<argument><expr><literal type="number" pos:line="124" pos:column="70">1<pos:position pos:line="124" pos:column="71"/></literal></expr></argument>)<pos:position pos:line="124" pos:column="72"/></argument_list></call> <operator pos:line="124" pos:column="73">&amp;&amp;<pos:position pos:line="124" pos:column="83"/></operator>
            <operator pos:line="125" pos:column="13">!<pos:position pos:line="125" pos:column="14"/></operator><operator pos:line="125" pos:column="14">(<pos:position pos:line="125" pos:column="15"/></operator><name><name pos:line="125" pos:column="15">f<pos:position pos:line="125" pos:column="16"/></name><operator pos:line="125" pos:column="16">-&gt;<pos:position pos:line="125" pos:column="21"/></operator><name pos:line="125" pos:column="18">r<pos:position pos:line="125" pos:column="19"/></name><operator pos:line="125" pos:column="19">-&gt;<pos:position pos:line="125" pos:column="24"/></operator><name pos:line="125" pos:column="21">eos_sent<pos:position pos:line="125" pos:column="29"/></name></name> <operator pos:line="125" pos:column="30">||<pos:position pos:line="125" pos:column="32"/></operator> <name><name pos:line="125" pos:column="33">f<pos:position pos:line="125" pos:column="34"/></name><operator pos:line="125" pos:column="34">-&gt;<pos:position pos:line="125" pos:column="39"/></operator><name pos:line="125" pos:column="36">r<pos:position pos:line="125" pos:column="37"/></name><operator pos:line="125" pos:column="37">-&gt;<pos:position pos:line="125" pos:column="42"/></operator><name pos:line="125" pos:column="39">bytes_sent<pos:position pos:line="125" pos:column="49"/></name></name><operator pos:line="125" pos:column="49">)<pos:position pos:line="125" pos:column="50"/></operator></expr>)<pos:position pos:line="125" pos:column="51"/></condition><then pos:line="125" pos:column="51"> <block pos:line="125" pos:column="52">{
            <if pos:line="126" pos:column="13">if <condition pos:line="126" pos:column="16">(<expr><operator pos:line="126" pos:column="17">!<pos:position pos:line="126" pos:column="18"/></operator><call><name pos:line="126" pos:column="18">ap_is_HTTP_SUCCESS<pos:position pos:line="126" pos:column="36"/></name><argument_list pos:line="126" pos:column="36">(<argument><expr><name><name pos:line="126" pos:column="37">f<pos:position pos:line="126" pos:column="38"/></name><operator pos:line="126" pos:column="38">-&gt;<pos:position pos:line="126" pos:column="43"/></operator><name pos:line="126" pos:column="40">r<pos:position pos:line="126" pos:column="41"/></name><operator pos:line="126" pos:column="41">-&gt;<pos:position pos:line="126" pos:column="46"/></operator><name pos:line="126" pos:column="43">status<pos:position pos:line="126" pos:column="49"/></name></name></expr></argument>)<pos:position pos:line="126" pos:column="50"/></argument_list></call></expr>)<pos:position pos:line="126" pos:column="51"/></condition><then pos:line="126" pos:column="51"> <block pos:line="126" pos:column="52">{
                <expr_stmt><expr><name><name pos:line="127" pos:column="17">ctx<pos:position pos:line="127" pos:column="20"/></name><operator pos:line="127" pos:column="20">-&gt;<pos:position pos:line="127" pos:column="25"/></operator><name pos:line="127" pos:column="22">state<pos:position pos:line="127" pos:column="27"/></name></name> <operator pos:line="127" pos:column="28">=<pos:position pos:line="127" pos:column="29"/></operator> <name pos:line="127" pos:column="30">BODY_NONE<pos:position pos:line="127" pos:column="39"/></name></expr>;<pos:position pos:line="127" pos:column="40"/></expr_stmt>
                <expr_stmt><expr><name><name pos:line="128" pos:column="17">ctx<pos:position pos:line="128" pos:column="20"/></name><operator pos:line="128" pos:column="20">-&gt;<pos:position pos:line="128" pos:column="25"/></operator><name pos:line="128" pos:column="22">eos_sent<pos:position pos:line="128" pos:column="30"/></name></name> <operator pos:line="128" pos:column="31">=<pos:position pos:line="128" pos:column="32"/></operator> <literal type="number" pos:line="128" pos:column="33">1<pos:position pos:line="128" pos:column="34"/></literal></expr>;<pos:position pos:line="128" pos:column="35"/></expr_stmt>
            }<pos:position pos:line="129" pos:column="14"/></block></then> <else pos:line="129" pos:column="15">else <block pos:line="129" pos:column="20">{
                <decl_stmt><decl><type><name pos:line="130" pos:column="17">char<pos:position pos:line="130" pos:column="21"/></name> <modifier pos:line="130" pos:column="22">*<pos:position pos:line="130" pos:column="23"/></modifier></type><name pos:line="130" pos:column="23">tmp<pos:position pos:line="130" pos:column="26"/></name></decl>;<pos:position pos:line="130" pos:column="27"/></decl_stmt>
                <decl_stmt><decl><type><name pos:line="131" pos:column="17">int<pos:position pos:line="131" pos:column="20"/></name></type> <name pos:line="131" pos:column="21">len<pos:position pos:line="131" pos:column="24"/></name></decl>;<pos:position pos:line="131" pos:column="25"/></decl_stmt>

                <comment type="block" pos:line="133" pos:column="17">/* if we send an interim response, we're no longer
                 * in a state of expecting one.
                 */</comment>
                <expr_stmt><expr><name><name pos:line="136" pos:column="17">f<pos:position pos:line="136" pos:column="18"/></name><operator pos:line="136" pos:column="18">-&gt;<pos:position pos:line="136" pos:column="23"/></operator><name pos:line="136" pos:column="20">r<pos:position pos:line="136" pos:column="21"/></name><operator pos:line="136" pos:column="21">-&gt;<pos:position pos:line="136" pos:column="26"/></operator><name pos:line="136" pos:column="23">expecting_100<pos:position pos:line="136" pos:column="36"/></name></name> <operator pos:line="136" pos:column="37">=<pos:position pos:line="136" pos:column="38"/></operator> <literal type="number" pos:line="136" pos:column="39">0<pos:position pos:line="136" pos:column="40"/></literal></expr>;<pos:position pos:line="136" pos:column="41"/></expr_stmt>
                <expr_stmt><expr><name pos:line="137" pos:column="17">tmp<pos:position pos:line="137" pos:column="20"/></name> <operator pos:line="137" pos:column="21">=<pos:position pos:line="137" pos:column="22"/></operator> <macro><name pos:line="137" pos:column="23">apr_pstrcat<pos:position pos:line="137" pos:column="34"/></name><argument_list pos:line="137" pos:column="34">(<argument pos:line="137" pos:column="35">f-&gt;r-&gt;pool<pos:position pos:line="137" pos:column="45"/></argument>, <argument pos:line="137" pos:column="47">AP_SERVER_PROTOCOL<pos:position pos:line="137" pos:column="65"/></argument>, <argument><literal type="string" pos:line="137" pos:column="67">" "<pos:position pos:line="137" pos:column="70"/></literal></argument>,
                                  <argument pos:line="138" pos:column="35">ap_get_status_line(<literal type="number" pos:line="138" pos:column="54">100<pos:position pos:line="138" pos:column="57"/></literal>)<pos:position pos:line="138" pos:column="58"/></argument>, <argument pos:line="138" pos:column="60">CRLF CRLF<pos:position pos:line="138" pos:column="69"/></argument>, <argument pos:line="138" pos:column="71">NULL<pos:position pos:line="138" pos:column="75"/></argument>)<pos:position pos:line="138" pos:column="76"/></argument_list></macro></expr>;<pos:position pos:line="138" pos:column="77"/></expr_stmt>
                <expr_stmt><expr><name pos:line="139" pos:column="17">len<pos:position pos:line="139" pos:column="20"/></name> <operator pos:line="139" pos:column="21">=<pos:position pos:line="139" pos:column="22"/></operator> <call><name pos:line="139" pos:column="23">strlen<pos:position pos:line="139" pos:column="29"/></name><argument_list pos:line="139" pos:column="29">(<argument><expr><name pos:line="139" pos:column="30">tmp<pos:position pos:line="139" pos:column="33"/></name></expr></argument>)<pos:position pos:line="139" pos:column="34"/></argument_list></call></expr>;<pos:position pos:line="139" pos:column="35"/></expr_stmt>
                <expr_stmt><expr><call><name pos:line="140" pos:column="17">ap_xlate_proto_to_ascii<pos:position pos:line="140" pos:column="40"/></name><argument_list pos:line="140" pos:column="40">(<argument><expr><name pos:line="140" pos:column="41">tmp<pos:position pos:line="140" pos:column="44"/></name></expr></argument>, <argument><expr><name pos:line="140" pos:column="46">len<pos:position pos:line="140" pos:column="49"/></name></expr></argument>)<pos:position pos:line="140" pos:column="50"/></argument_list></call></expr>;<pos:position pos:line="140" pos:column="51"/></expr_stmt>
                <expr_stmt><expr><call><name pos:line="141" pos:column="17">apr_brigade_cleanup<pos:position pos:line="141" pos:column="36"/></name><argument_list pos:line="141" pos:column="36">(<argument><expr><name pos:line="141" pos:column="37">bb<pos:position pos:line="141" pos:column="39"/></name></expr></argument>)<pos:position pos:line="141" pos:column="40"/></argument_list></call></expr>;<pos:position pos:line="141" pos:column="41"/></expr_stmt>
                <expr_stmt><expr><name pos:line="142" pos:column="17">e<pos:position pos:line="142" pos:column="18"/></name> <operator pos:line="142" pos:column="19">=<pos:position pos:line="142" pos:column="20"/></operator> <call><name pos:line="142" pos:column="21">apr_bucket_pool_create<pos:position pos:line="142" pos:column="43"/></name><argument_list pos:line="142" pos:column="43">(<argument><expr><name pos:line="142" pos:column="44">tmp<pos:position pos:line="142" pos:column="47"/></name></expr></argument>, <argument><expr><name pos:line="142" pos:column="49">len<pos:position pos:line="142" pos:column="52"/></name></expr></argument>, <argument><expr><name><name pos:line="142" pos:column="54">f<pos:position pos:line="142" pos:column="55"/></name><operator pos:line="142" pos:column="55">-&gt;<pos:position pos:line="142" pos:column="60"/></operator><name pos:line="142" pos:column="57">r<pos:position pos:line="142" pos:column="58"/></name><operator pos:line="142" pos:column="58">-&gt;<pos:position pos:line="142" pos:column="63"/></operator><name pos:line="142" pos:column="60">pool<pos:position pos:line="142" pos:column="64"/></name></name></expr></argument>,
                                           <argument><expr><name><name pos:line="143" pos:column="44">f<pos:position pos:line="143" pos:column="45"/></name><operator pos:line="143" pos:column="45">-&gt;<pos:position pos:line="143" pos:column="50"/></operator><name pos:line="143" pos:column="47">c<pos:position pos:line="143" pos:column="48"/></name><operator pos:line="143" pos:column="48">-&gt;<pos:position pos:line="143" pos:column="53"/></operator><name pos:line="143" pos:column="50">bucket_alloc<pos:position pos:line="143" pos:column="62"/></name></name></expr></argument>)<pos:position pos:line="143" pos:column="63"/></argument_list></call></expr>;<pos:position pos:line="143" pos:column="64"/></expr_stmt>
                <expr_stmt><expr><call><name pos:line="144" pos:column="17">APR_BRIGADE_INSERT_HEAD<pos:position pos:line="144" pos:column="40"/></name><argument_list pos:line="144" pos:column="40">(<argument><expr><name pos:line="144" pos:column="41">bb<pos:position pos:line="144" pos:column="43"/></name></expr></argument>, <argument><expr><name pos:line="144" pos:column="45">e<pos:position pos:line="144" pos:column="46"/></name></expr></argument>)<pos:position pos:line="144" pos:column="47"/></argument_list></call></expr>;<pos:position pos:line="144" pos:column="48"/></expr_stmt>
                <expr_stmt><expr><name pos:line="145" pos:column="17">e<pos:position pos:line="145" pos:column="18"/></name> <operator pos:line="145" pos:column="19">=<pos:position pos:line="145" pos:column="20"/></operator> <call><name pos:line="145" pos:column="21">apr_bucket_flush_create<pos:position pos:line="145" pos:column="44"/></name><argument_list pos:line="145" pos:column="44">(<argument><expr><name><name pos:line="145" pos:column="45">f<pos:position pos:line="145" pos:column="46"/></name><operator pos:line="145" pos:column="46">-&gt;<pos:position pos:line="145" pos:column="51"/></operator><name pos:line="145" pos:column="48">c<pos:position pos:line="145" pos:column="49"/></name><operator pos:line="145" pos:column="49">-&gt;<pos:position pos:line="145" pos:column="54"/></operator><name pos:line="145" pos:column="51">bucket_alloc<pos:position pos:line="145" pos:column="63"/></name></name></expr></argument>)<pos:position pos:line="145" pos:column="64"/></argument_list></call></expr>;<pos:position pos:line="145" pos:column="65"/></expr_stmt>
                <expr_stmt><expr><call><name pos:line="146" pos:column="17">APR_BRIGADE_INSERT_TAIL<pos:position pos:line="146" pos:column="40"/></name><argument_list pos:line="146" pos:column="40">(<argument><expr><name pos:line="146" pos:column="41">bb<pos:position pos:line="146" pos:column="43"/></name></expr></argument>, <argument><expr><name pos:line="146" pos:column="45">e<pos:position pos:line="146" pos:column="46"/></name></expr></argument>)<pos:position pos:line="146" pos:column="47"/></argument_list></call></expr>;<pos:position pos:line="146" pos:column="48"/></expr_stmt>

                <expr_stmt><expr><call><name pos:line="148" pos:column="17">ap_pass_brigade<pos:position pos:line="148" pos:column="32"/></name><argument_list pos:line="148" pos:column="32">(<argument><expr><name><name pos:line="148" pos:column="33">f<pos:position pos:line="148" pos:column="34"/></name><operator pos:line="148" pos:column="34">-&gt;<pos:position pos:line="148" pos:column="39"/></operator><name pos:line="148" pos:column="36">c<pos:position pos:line="148" pos:column="37"/></name><operator pos:line="148" pos:column="37">-&gt;<pos:position pos:line="148" pos:column="42"/></operator><name pos:line="148" pos:column="39">output_filters<pos:position pos:line="148" pos:column="53"/></name></name></expr></argument>, <argument><expr><name pos:line="148" pos:column="55">bb<pos:position pos:line="148" pos:column="57"/></name></expr></argument>)<pos:position pos:line="148" pos:column="58"/></argument_list></call></expr>;<pos:position pos:line="148" pos:column="59"/></expr_stmt>
            }<pos:position pos:line="149" pos:column="14"/></block></else></if>
        }<pos:position pos:line="150" pos:column="10"/></block></then></if>

        <comment type="block" pos:line="152" pos:column="9">/* We can't read the chunk until after sending 100 if required. */</comment>
        <if pos:line="153" pos:column="9">if <condition pos:line="153" pos:column="12">(<expr><name><name pos:line="153" pos:column="13">ctx<pos:position pos:line="153" pos:column="16"/></name><operator pos:line="153" pos:column="16">-&gt;<pos:position pos:line="153" pos:column="21"/></operator><name pos:line="153" pos:column="18">state<pos:position pos:line="153" pos:column="23"/></name></name> <operator pos:line="153" pos:column="24">==<pos:position pos:line="153" pos:column="26"/></operator> <name pos:line="153" pos:column="27">BODY_CHUNK<pos:position pos:line="153" pos:column="37"/></name></expr>)<pos:position pos:line="153" pos:column="38"/></condition><then pos:line="153" pos:column="38"> <block pos:line="153" pos:column="39">{
            <expr_stmt><expr><call><name pos:line="154" pos:column="13">apr_brigade_cleanup<pos:position pos:line="154" pos:column="32"/></name><argument_list pos:line="154" pos:column="32">(<argument><expr><name pos:line="154" pos:column="33">bb<pos:position pos:line="154" pos:column="35"/></name></expr></argument>)<pos:position pos:line="154" pos:column="36"/></argument_list></call></expr>;<pos:position pos:line="154" pos:column="37"/></expr_stmt>

            <expr_stmt><expr><name pos:line="156" pos:column="13">rv<pos:position pos:line="156" pos:column="15"/></name> <operator pos:line="156" pos:column="16">=<pos:position pos:line="156" pos:column="17"/></operator> <call><name pos:line="156" pos:column="18">ap_get_brigade<pos:position pos:line="156" pos:column="32"/></name><argument_list pos:line="156" pos:column="32">(<argument><expr><name><name pos:line="156" pos:column="33">f<pos:position pos:line="156" pos:column="34"/></name><operator pos:line="156" pos:column="34">-&gt;<pos:position pos:line="156" pos:column="39"/></operator><name pos:line="156" pos:column="36">next<pos:position pos:line="156" pos:column="40"/></name></name></expr></argument>, <argument><expr><name pos:line="156" pos:column="42">bb<pos:position pos:line="156" pos:column="44"/></name></expr></argument>, <argument><expr><name pos:line="156" pos:column="46">AP_MODE_GETLINE<pos:position pos:line="156" pos:column="61"/></name></expr></argument>,
                                <argument><expr><name pos:line="157" pos:column="33">block<pos:position pos:line="157" pos:column="38"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="157" pos:column="40">0<pos:position pos:line="157" pos:column="41"/></literal></expr></argument>)<pos:position pos:line="157" pos:column="42"/></argument_list></call></expr>;<pos:position pos:line="157" pos:column="43"/></expr_stmt>

            <comment type="block" pos:line="159" pos:column="13">/* for timeout */</comment>
            <if pos:line="160" pos:column="13">if <condition pos:line="160" pos:column="16">(<expr><name pos:line="160" pos:column="17">block<pos:position pos:line="160" pos:column="22"/></name> <operator pos:line="160" pos:column="23">==<pos:position pos:line="160" pos:column="25"/></operator> <name pos:line="160" pos:column="26">APR_NONBLOCK_READ<pos:position pos:line="160" pos:column="43"/></name> <operator pos:line="160" pos:column="44">&amp;&amp;<pos:position pos:line="160" pos:column="54"/></operator>
                <operator pos:line="161" pos:column="17">(<pos:position pos:line="161" pos:column="18"/></operator> <operator pos:line="161" pos:column="19">(<pos:position pos:line="161" pos:column="20"/></operator><name pos:line="161" pos:column="20">rv<pos:position pos:line="161" pos:column="22"/></name> <operator pos:line="161" pos:column="23">==<pos:position pos:line="161" pos:column="25"/></operator> <name pos:line="161" pos:column="26">APR_SUCCESS<pos:position pos:line="161" pos:column="37"/></name> <operator pos:line="161" pos:column="38">&amp;&amp;<pos:position pos:line="161" pos:column="48"/></operator> <call><name pos:line="161" pos:column="41">APR_BRIGADE_EMPTY<pos:position pos:line="161" pos:column="58"/></name><argument_list pos:line="161" pos:column="58">(<argument><expr><name pos:line="161" pos:column="59">bb<pos:position pos:line="161" pos:column="61"/></name></expr></argument>)<pos:position pos:line="161" pos:column="62"/></argument_list></call><operator pos:line="161" pos:column="62">)<pos:position pos:line="161" pos:column="63"/></operator> <operator pos:line="161" pos:column="64">||<pos:position pos:line="161" pos:column="66"/></operator>
                  <operator pos:line="162" pos:column="19">(<pos:position pos:line="162" pos:column="20"/></operator><call><name pos:line="162" pos:column="20">APR_STATUS_IS_EAGAIN<pos:position pos:line="162" pos:column="40"/></name><argument_list pos:line="162" pos:column="40">(<argument><expr><name pos:line="162" pos:column="41">rv<pos:position pos:line="162" pos:column="43"/></name></expr></argument>)<pos:position pos:line="162" pos:column="44"/></argument_list></call><operator pos:line="162" pos:column="44">)<pos:position pos:line="162" pos:column="45"/></operator> <operator pos:line="162" pos:column="46">)<pos:position pos:line="162" pos:column="47"/></operator></expr>)<pos:position pos:line="162" pos:column="48"/></condition><then pos:line="162" pos:column="48"> <block pos:line="162" pos:column="49">{
                <expr_stmt><expr><name><name pos:line="163" pos:column="17">ctx<pos:position pos:line="163" pos:column="20"/></name><operator pos:line="163" pos:column="20">-&gt;<pos:position pos:line="163" pos:column="25"/></operator><name pos:line="163" pos:column="22">state<pos:position pos:line="163" pos:column="27"/></name></name> <operator pos:line="163" pos:column="28">=<pos:position pos:line="163" pos:column="29"/></operator> <name pos:line="163" pos:column="30">BODY_CHUNK_PART<pos:position pos:line="163" pos:column="45"/></name></expr>;<pos:position pos:line="163" pos:column="46"/></expr_stmt>
                <return pos:line="164" pos:column="17">return <expr><name pos:line="164" pos:column="24">APR_EAGAIN<pos:position pos:line="164" pos:column="34"/></name></expr>;<pos:position pos:line="164" pos:column="35"/></return>
            }<pos:position pos:line="165" pos:column="14"/></block></then></if>

            <if pos:line="167" pos:column="13">if <condition pos:line="167" pos:column="16">(<expr><name pos:line="167" pos:column="17">rv<pos:position pos:line="167" pos:column="19"/></name> <operator pos:line="167" pos:column="20">==<pos:position pos:line="167" pos:column="22"/></operator> <name pos:line="167" pos:column="23">APR_SUCCESS<pos:position pos:line="167" pos:column="34"/></name></expr>)<pos:position pos:line="167" pos:column="35"/></condition><then pos:line="167" pos:column="35"> <block pos:line="167" pos:column="36">{
                <expr_stmt><expr><name pos:line="168" pos:column="17">rv<pos:position pos:line="168" pos:column="19"/></name> <operator pos:line="168" pos:column="20">=<pos:position pos:line="168" pos:column="21"/></operator> <call><name pos:line="168" pos:column="22">get_chunk_line<pos:position pos:line="168" pos:column="36"/></name><argument_list pos:line="168" pos:column="36">(<argument><expr><name pos:line="168" pos:column="37">ctx<pos:position pos:line="168" pos:column="40"/></name></expr></argument>, <argument><expr><name pos:line="168" pos:column="42">bb<pos:position pos:line="168" pos:column="44"/></name></expr></argument>, <argument><expr><name><name pos:line="168" pos:column="46">f<pos:position pos:line="168" pos:column="47"/></name><operator pos:line="168" pos:column="47">-&gt;<pos:position pos:line="168" pos:column="52"/></operator><name pos:line="168" pos:column="49">r<pos:position pos:line="168" pos:column="50"/></name><operator pos:line="168" pos:column="50">-&gt;<pos:position pos:line="168" pos:column="55"/></operator><name pos:line="168" pos:column="52">server<pos:position pos:line="168" pos:column="58"/></name><operator pos:line="168" pos:column="58">-&gt;<pos:position pos:line="168" pos:column="63"/></operator><name pos:line="168" pos:column="60">limit_req_line<pos:position pos:line="168" pos:column="74"/></name></name></expr></argument>)<pos:position pos:line="168" pos:column="75"/></argument_list></call></expr>;<pos:position pos:line="168" pos:column="76"/></expr_stmt>
                <if pos:line="169" pos:column="17">if <condition pos:line="169" pos:column="20">(<expr><call><name pos:line="169" pos:column="21">APR_STATUS_IS_EAGAIN<pos:position pos:line="169" pos:column="41"/></name><argument_list pos:line="169" pos:column="41">(<argument><expr><name pos:line="169" pos:column="42">rv<pos:position pos:line="169" pos:column="44"/></name></expr></argument>)<pos:position pos:line="169" pos:column="45"/></argument_list></call></expr>)<pos:position pos:line="169" pos:column="46"/></condition><then pos:line="169" pos:column="46"> <block pos:line="169" pos:column="47">{
                    <expr_stmt><expr><call><name pos:line="170" pos:column="21">apr_brigade_cleanup<pos:position pos:line="170" pos:column="40"/></name><argument_list pos:line="170" pos:column="40">(<argument><expr><name pos:line="170" pos:column="41">bb<pos:position pos:line="170" pos:column="43"/></name></expr></argument>)<pos:position pos:line="170" pos:column="44"/></argument_list></call></expr>;<pos:position pos:line="170" pos:column="45"/></expr_stmt>
                    <expr_stmt><expr><name><name pos:line="171" pos:column="21">ctx<pos:position pos:line="171" pos:column="24"/></name><operator pos:line="171" pos:column="24">-&gt;<pos:position pos:line="171" pos:column="29"/></operator><name pos:line="171" pos:column="26">state<pos:position pos:line="171" pos:column="31"/></name></name> <operator pos:line="171" pos:column="32">=<pos:position pos:line="171" pos:column="33"/></operator> <name pos:line="171" pos:column="34">BODY_CHUNK_PART<pos:position pos:line="171" pos:column="49"/></name></expr>;<pos:position pos:line="171" pos:column="50"/></expr_stmt>
                    <return pos:line="172" pos:column="21">return <expr><name pos:line="172" pos:column="28">rv<pos:position pos:line="172" pos:column="30"/></name></expr>;<pos:position pos:line="172" pos:column="31"/></return>
                }<pos:position pos:line="173" pos:column="18"/></block></then></if>
                <if pos:line="174" pos:column="17">if <condition pos:line="174" pos:column="20">(<expr><name pos:line="174" pos:column="21">rv<pos:position pos:line="174" pos:column="23"/></name> <operator pos:line="174" pos:column="24">==<pos:position pos:line="174" pos:column="26"/></operator> <name pos:line="174" pos:column="27">APR_SUCCESS<pos:position pos:line="174" pos:column="38"/></name></expr>)<pos:position pos:line="174" pos:column="39"/></condition><then pos:line="174" pos:column="39"> <block pos:line="174" pos:column="40">{
                    <expr_stmt><expr><name><name pos:line="175" pos:column="21">ctx<pos:position pos:line="175" pos:column="24"/></name><operator pos:line="175" pos:column="24">-&gt;<pos:position pos:line="175" pos:column="29"/></operator><name pos:line="175" pos:column="26">remaining<pos:position pos:line="175" pos:column="35"/></name></name> <operator pos:line="175" pos:column="36">=<pos:position pos:line="175" pos:column="37"/></operator> <call><name pos:line="175" pos:column="38">get_chunk_size<pos:position pos:line="175" pos:column="52"/></name><argument_list pos:line="175" pos:column="52">(<argument><expr><name><name pos:line="175" pos:column="53">ctx<pos:position pos:line="175" pos:column="56"/></name><operator pos:line="175" pos:column="56">-&gt;<pos:position pos:line="175" pos:column="61"/></operator><name pos:line="175" pos:column="58">chunk_ln<pos:position pos:line="175" pos:column="66"/></name></name></expr></argument>)<pos:position pos:line="175" pos:column="67"/></argument_list></call></expr>;<pos:position pos:line="175" pos:column="68"/></expr_stmt>
                    <if pos:line="176" pos:column="21">if <condition pos:line="176" pos:column="24">(<expr><name><name pos:line="176" pos:column="25">ctx<pos:position pos:line="176" pos:column="28"/></name><operator pos:line="176" pos:column="28">-&gt;<pos:position pos:line="176" pos:column="33"/></operator><name pos:line="176" pos:column="30">remaining<pos:position pos:line="176" pos:column="39"/></name></name> <operator pos:line="176" pos:column="40">==<pos:position pos:line="176" pos:column="42"/></operator> <name pos:line="176" pos:column="43">INVALID_CHAR<pos:position pos:line="176" pos:column="55"/></name></expr>)<pos:position pos:line="176" pos:column="56"/></condition><then pos:line="176" pos:column="56"> <block pos:line="176" pos:column="57">{
                        <expr_stmt><expr><name pos:line="177" pos:column="25">rv<pos:position pos:line="177" pos:column="27"/></name> <operator pos:line="177" pos:column="28">=<pos:position pos:line="177" pos:column="29"/></operator> <name pos:line="177" pos:column="30">APR_EGENERAL<pos:position pos:line="177" pos:column="42"/></name></expr>;<pos:position pos:line="177" pos:column="43"/></expr_stmt>
                        <expr_stmt><expr><name pos:line="178" pos:column="25">http_error<pos:position pos:line="178" pos:column="35"/></name> <operator pos:line="178" pos:column="36">=<pos:position pos:line="178" pos:column="37"/></operator> <name pos:line="178" pos:column="38">HTTP_SERVICE_UNAVAILABLE<pos:position pos:line="178" pos:column="62"/></name></expr>;<pos:position pos:line="178" pos:column="63"/></expr_stmt>
                    }<pos:position pos:line="179" pos:column="22"/></block></then></if>
                }<pos:position pos:line="180" pos:column="18"/></block></then></if>
            }<pos:position pos:line="181" pos:column="14"/></block></then></if>
            <expr_stmt><expr><call><name pos:line="182" pos:column="13">apr_brigade_cleanup<pos:position pos:line="182" pos:column="32"/></name><argument_list pos:line="182" pos:column="32">(<argument><expr><name pos:line="182" pos:column="33">bb<pos:position pos:line="182" pos:column="35"/></name></expr></argument>)<pos:position pos:line="182" pos:column="36"/></argument_list></call></expr>;<pos:position pos:line="182" pos:column="37"/></expr_stmt>

            <comment type="block" pos:line="184" pos:column="13">/* Detect chunksize error (such as overflow) */</comment>
            <if pos:line="185" pos:column="13">if <condition pos:line="185" pos:column="16">(<expr><name pos:line="185" pos:column="17">rv<pos:position pos:line="185" pos:column="19"/></name> <operator pos:line="185" pos:column="20">!=<pos:position pos:line="185" pos:column="22"/></operator> <name pos:line="185" pos:column="23">APR_SUCCESS<pos:position pos:line="185" pos:column="34"/></name> <operator pos:line="185" pos:column="35">||<pos:position pos:line="185" pos:column="37"/></operator> <name><name pos:line="185" pos:column="38">ctx<pos:position pos:line="185" pos:column="41"/></name><operator pos:line="185" pos:column="41">-&gt;<pos:position pos:line="185" pos:column="46"/></operator><name pos:line="185" pos:column="43">remaining<pos:position pos:line="185" pos:column="52"/></name></name> <operator pos:line="185" pos:column="53">&lt;<pos:position pos:line="185" pos:column="57"/></operator> <literal type="number" pos:line="185" pos:column="55">0<pos:position pos:line="185" pos:column="56"/></literal></expr>)<pos:position pos:line="185" pos:column="57"/></condition><then pos:line="185" pos:column="57"> <block pos:line="185" pos:column="58">{
                <expr_stmt><expr><call><name pos:line="186" pos:column="17">ap_log_rerror<pos:position pos:line="186" pos:column="30"/></name><argument_list pos:line="186" pos:column="30">(<argument><expr><name pos:line="186" pos:column="31">APLOG_MARK<pos:position pos:line="186" pos:column="41"/></name></expr></argument>, <argument><expr><name pos:line="186" pos:column="43">APLOG_ERR<pos:position pos:line="186" pos:column="52"/></name></expr></argument>, <argument><expr><name pos:line="186" pos:column="54">rv<pos:position pos:line="186" pos:column="56"/></name></expr></argument>, <argument><expr><name><name pos:line="186" pos:column="58">f<pos:position pos:line="186" pos:column="59"/></name><operator pos:line="186" pos:column="59">-&gt;<pos:position pos:line="186" pos:column="64"/></operator><name pos:line="186" pos:column="61">r<pos:position pos:line="186" pos:column="62"/></name></name></expr></argument>, <argument><expr><literal type="string" pos:line="186" pos:column="64">"Error reading first chunk %s "<pos:position pos:line="186" pos:column="95"/></literal></expr></argument>, 
                              <argument><expr><ternary><condition><expr><operator pos:line="187" pos:column="31">(<pos:position pos:line="187" pos:column="32"/></operator><name><name pos:line="187" pos:column="32">ctx<pos:position pos:line="187" pos:column="35"/></name><operator pos:line="187" pos:column="35">-&gt;<pos:position pos:line="187" pos:column="40"/></operator><name pos:line="187" pos:column="37">remaining<pos:position pos:line="187" pos:column="46"/></name></name> <operator pos:line="187" pos:column="47">&lt;<pos:position pos:line="187" pos:column="51"/></operator> <literal type="number" pos:line="187" pos:column="49">0<pos:position pos:line="187" pos:column="50"/></literal><operator pos:line="187" pos:column="50">)<pos:position pos:line="187" pos:column="51"/></operator></expr> ?<pos:position pos:line="187" pos:column="53"/></condition><then pos:line="187" pos:column="53"> <expr><literal type="string" pos:line="187" pos:column="54">"(overflow)"<pos:position pos:line="187" pos:column="66"/></literal></expr> <pos:position pos:line="187" pos:column="67"/></then><else pos:line="187" pos:column="67">: <expr><literal type="string" pos:line="187" pos:column="69">""<pos:position pos:line="187" pos:column="71"/></literal></expr></else></ternary></expr></argument>)<pos:position pos:line="187" pos:column="72"/></argument_list></call></expr>;<pos:position pos:line="187" pos:column="73"/></expr_stmt>
                <if pos:line="188" pos:column="17">if <condition pos:line="188" pos:column="20">(<expr><call><name pos:line="188" pos:column="21">APR_STATUS_IS_TIMEUP<pos:position pos:line="188" pos:column="41"/></name><argument_list pos:line="188" pos:column="41">(<argument><expr><name pos:line="188" pos:column="42">rv<pos:position pos:line="188" pos:column="44"/></name></expr></argument>)<pos:position pos:line="188" pos:column="45"/></argument_list></call> <operator pos:line="188" pos:column="46">||<pos:position pos:line="188" pos:column="48"/></operator> <name><name pos:line="188" pos:column="49">ctx<pos:position pos:line="188" pos:column="52"/></name><operator pos:line="188" pos:column="52">-&gt;<pos:position pos:line="188" pos:column="57"/></operator><name pos:line="188" pos:column="54">remaining<pos:position pos:line="188" pos:column="63"/></name></name> <operator pos:line="188" pos:column="64">&gt;<pos:position pos:line="188" pos:column="68"/></operator> <literal type="number" pos:line="188" pos:column="66">0<pos:position pos:line="188" pos:column="67"/></literal></expr>)<pos:position pos:line="188" pos:column="68"/></condition><then pos:line="188" pos:column="68"> <block pos:line="188" pos:column="69">{
                    <expr_stmt><expr><name pos:line="189" pos:column="21">http_error<pos:position pos:line="189" pos:column="31"/></name> <operator pos:line="189" pos:column="32">=<pos:position pos:line="189" pos:column="33"/></operator> <name pos:line="189" pos:column="34">HTTP_REQUEST_TIME_OUT<pos:position pos:line="189" pos:column="55"/></name></expr>;<pos:position pos:line="189" pos:column="56"/></expr_stmt>
                }<pos:position pos:line="190" pos:column="18"/></block></then></if>
                <expr_stmt><expr><name><name pos:line="191" pos:column="17">ctx<pos:position pos:line="191" pos:column="20"/></name><operator pos:line="191" pos:column="20">-&gt;<pos:position pos:line="191" pos:column="25"/></operator><name pos:line="191" pos:column="22">remaining<pos:position pos:line="191" pos:column="31"/></name></name> <operator pos:line="191" pos:column="32">=<pos:position pos:line="191" pos:column="33"/></operator> <literal type="number" pos:line="191" pos:column="34">0<pos:position pos:line="191" pos:column="35"/></literal></expr>;<pos:position pos:line="191" pos:column="36"/></expr_stmt> <comment type="block" pos:line="191" pos:column="37">/* Reset it in case we have to
                                     * come back here later */</comment>
                <return pos:line="193" pos:column="17">return <expr><call><name pos:line="193" pos:column="24">bail_out_on_error<pos:position pos:line="193" pos:column="41"/></name><argument_list pos:line="193" pos:column="41">(<argument><expr><name pos:line="193" pos:column="42">ctx<pos:position pos:line="193" pos:column="45"/></name></expr></argument>, <argument><expr><name pos:line="193" pos:column="47">f<pos:position pos:line="193" pos:column="48"/></name></expr></argument>, <argument><expr><name pos:line="193" pos:column="50">http_error<pos:position pos:line="193" pos:column="60"/></name></expr></argument>)<pos:position pos:line="193" pos:column="61"/></argument_list></call></expr>;<pos:position pos:line="193" pos:column="62"/></return>
            }<pos:position pos:line="194" pos:column="14"/></block></then></if>

            <if pos:line="196" pos:column="13">if <condition pos:line="196" pos:column="16">(<expr><operator pos:line="196" pos:column="17">!<pos:position pos:line="196" pos:column="18"/></operator><name><name pos:line="196" pos:column="18">ctx<pos:position pos:line="196" pos:column="21"/></name><operator pos:line="196" pos:column="21">-&gt;<pos:position pos:line="196" pos:column="26"/></operator><name pos:line="196" pos:column="23">remaining<pos:position pos:line="196" pos:column="32"/></name></name></expr>)<pos:position pos:line="196" pos:column="33"/></condition><then pos:line="196" pos:column="33"> <block pos:line="196" pos:column="34">{
                <return pos:line="197" pos:column="17">return <expr><call><name pos:line="197" pos:column="24">read_chunked_trailers<pos:position pos:line="197" pos:column="45"/></name><argument_list pos:line="197" pos:column="45">(<argument><expr><name pos:line="197" pos:column="46">ctx<pos:position pos:line="197" pos:column="49"/></name></expr></argument>, <argument><expr><name pos:line="197" pos:column="51">f<pos:position pos:line="197" pos:column="52"/></name></expr></argument>, <argument><expr><name pos:line="197" pos:column="54">b<pos:position pos:line="197" pos:column="55"/></name></expr></argument>,
                        <argument><expr><name><name pos:line="198" pos:column="25">conf<pos:position pos:line="198" pos:column="29"/></name><operator pos:line="198" pos:column="29">-&gt;<pos:position pos:line="198" pos:column="34"/></operator><name pos:line="198" pos:column="31">merge_trailers<pos:position pos:line="198" pos:column="45"/></name></name> <operator pos:line="198" pos:column="46">==<pos:position pos:line="198" pos:column="48"/></operator> <name pos:line="198" pos:column="49">AP_MERGE_TRAILERS_ENABLE<pos:position pos:line="198" pos:column="73"/></name></expr></argument>)<pos:position pos:line="198" pos:column="74"/></argument_list></call></expr>;<pos:position pos:line="198" pos:column="75"/></return>
            }<pos:position pos:line="199" pos:column="14"/></block></then></if>
        }<pos:position pos:line="200" pos:column="10"/></block></then></if>
    }<pos:position pos:line="201" pos:column="6"/></block></then>
    <else pos:line="202" pos:column="5">else <block pos:line="202" pos:column="10">{
        <expr_stmt><expr><name pos:line="203" pos:column="9">bb<pos:position pos:line="203" pos:column="11"/></name> <operator pos:line="203" pos:column="12">=<pos:position pos:line="203" pos:column="13"/></operator> <name><name pos:line="203" pos:column="14">ctx<pos:position pos:line="203" pos:column="17"/></name><operator pos:line="203" pos:column="17">-&gt;<pos:position pos:line="203" pos:column="22"/></operator><name pos:line="203" pos:column="19">bb<pos:position pos:line="203" pos:column="21"/></name></name></expr>;<pos:position pos:line="203" pos:column="22"/></expr_stmt>
    }<pos:position pos:line="204" pos:column="6"/></block></else></if>

    <if pos:line="206" pos:column="5">if <condition pos:line="206" pos:column="8">(<expr><name><name pos:line="206" pos:column="9">ctx<pos:position pos:line="206" pos:column="12"/></name><operator pos:line="206" pos:column="12">-&gt;<pos:position pos:line="206" pos:column="17"/></operator><name pos:line="206" pos:column="14">eos_sent<pos:position pos:line="206" pos:column="22"/></name></name></expr>)<pos:position pos:line="206" pos:column="23"/></condition><then pos:line="206" pos:column="23"> <block pos:line="206" pos:column="24">{
        <expr_stmt><expr><name pos:line="207" pos:column="9">e<pos:position pos:line="207" pos:column="10"/></name> <operator pos:line="207" pos:column="11">=<pos:position pos:line="207" pos:column="12"/></operator> <call><name pos:line="207" pos:column="13">apr_bucket_eos_create<pos:position pos:line="207" pos:column="34"/></name><argument_list pos:line="207" pos:column="34">(<argument><expr><name><name pos:line="207" pos:column="35">f<pos:position pos:line="207" pos:column="36"/></name><operator pos:line="207" pos:column="36">-&gt;<pos:position pos:line="207" pos:column="41"/></operator><name pos:line="207" pos:column="38">c<pos:position pos:line="207" pos:column="39"/></name><operator pos:line="207" pos:column="39">-&gt;<pos:position pos:line="207" pos:column="44"/></operator><name pos:line="207" pos:column="41">bucket_alloc<pos:position pos:line="207" pos:column="53"/></name></name></expr></argument>)<pos:position pos:line="207" pos:column="54"/></argument_list></call></expr>;<pos:position pos:line="207" pos:column="55"/></expr_stmt>
        <expr_stmt><expr><call><name pos:line="208" pos:column="9">APR_BRIGADE_INSERT_TAIL<pos:position pos:line="208" pos:column="32"/></name><argument_list pos:line="208" pos:column="32">(<argument><expr><name pos:line="208" pos:column="33">b<pos:position pos:line="208" pos:column="34"/></name></expr></argument>, <argument><expr><name pos:line="208" pos:column="36">e<pos:position pos:line="208" pos:column="37"/></name></expr></argument>)<pos:position pos:line="208" pos:column="38"/></argument_list></call></expr>;<pos:position pos:line="208" pos:column="39"/></expr_stmt>
        <return pos:line="209" pos:column="9">return <expr><name pos:line="209" pos:column="16">APR_SUCCESS<pos:position pos:line="209" pos:column="27"/></name></expr>;<pos:position pos:line="209" pos:column="28"/></return>
    }<pos:position pos:line="210" pos:column="6"/></block></then></if>

    <if pos:line="212" pos:column="5">if <condition pos:line="212" pos:column="8">(<expr><operator pos:line="212" pos:column="9">!<pos:position pos:line="212" pos:column="10"/></operator><name><name pos:line="212" pos:column="10">ctx<pos:position pos:line="212" pos:column="13"/></name><operator pos:line="212" pos:column="13">-&gt;<pos:position pos:line="212" pos:column="18"/></operator><name pos:line="212" pos:column="15">remaining<pos:position pos:line="212" pos:column="24"/></name></name></expr>)<pos:position pos:line="212" pos:column="25"/></condition><then pos:line="212" pos:column="25"> <block pos:line="212" pos:column="26">{
        <switch pos:line="213" pos:column="9">switch <condition pos:line="213" pos:column="16">(<expr><name><name pos:line="213" pos:column="17">ctx<pos:position pos:line="213" pos:column="20"/></name><operator pos:line="213" pos:column="20">-&gt;<pos:position pos:line="213" pos:column="25"/></operator><name pos:line="213" pos:column="22">state<pos:position pos:line="213" pos:column="27"/></name></name></expr>)<pos:position pos:line="213" pos:column="28"/></condition> <block pos:line="213" pos:column="29">{
        <case pos:line="214" pos:column="9">case <expr><name pos:line="214" pos:column="14">BODY_NONE<pos:position pos:line="214" pos:column="23"/></name></expr>:<pos:position pos:line="214" pos:column="24"/></case>
            <break pos:line="215" pos:column="13">break;<pos:position pos:line="215" pos:column="19"/></break>
        <case pos:line="216" pos:column="9">case <expr><name pos:line="216" pos:column="14">BODY_LENGTH<pos:position pos:line="216" pos:column="25"/></name></expr>:<pos:position pos:line="216" pos:column="26"/></case>
            <expr_stmt><expr><name pos:line="217" pos:column="13">e<pos:position pos:line="217" pos:column="14"/></name> <operator pos:line="217" pos:column="15">=<pos:position pos:line="217" pos:column="16"/></operator> <call><name pos:line="217" pos:column="17">apr_bucket_eos_create<pos:position pos:line="217" pos:column="38"/></name><argument_list pos:line="217" pos:column="38">(<argument><expr><name><name pos:line="217" pos:column="39">f<pos:position pos:line="217" pos:column="40"/></name><operator pos:line="217" pos:column="40">-&gt;<pos:position pos:line="217" pos:column="45"/></operator><name pos:line="217" pos:column="42">c<pos:position pos:line="217" pos:column="43"/></name><operator pos:line="217" pos:column="43">-&gt;<pos:position pos:line="217" pos:column="48"/></operator><name pos:line="217" pos:column="45">bucket_alloc<pos:position pos:line="217" pos:column="57"/></name></name></expr></argument>)<pos:position pos:line="217" pos:column="58"/></argument_list></call></expr>;<pos:position pos:line="217" pos:column="59"/></expr_stmt>
            <expr_stmt><expr><call><name pos:line="218" pos:column="13">APR_BRIGADE_INSERT_TAIL<pos:position pos:line="218" pos:column="36"/></name><argument_list pos:line="218" pos:column="36">(<argument><expr><name pos:line="218" pos:column="37">b<pos:position pos:line="218" pos:column="38"/></name></expr></argument>, <argument><expr><name pos:line="218" pos:column="40">e<pos:position pos:line="218" pos:column="41"/></name></expr></argument>)<pos:position pos:line="218" pos:column="42"/></argument_list></call></expr>;<pos:position pos:line="218" pos:column="43"/></expr_stmt>
            <expr_stmt><expr><name><name pos:line="219" pos:column="13">ctx<pos:position pos:line="219" pos:column="16"/></name><operator pos:line="219" pos:column="16">-&gt;<pos:position pos:line="219" pos:column="21"/></operator><name pos:line="219" pos:column="18">eos_sent<pos:position pos:line="219" pos:column="26"/></name></name> <operator pos:line="219" pos:column="27">=<pos:position pos:line="219" pos:column="28"/></operator> <literal type="number" pos:line="219" pos:column="29">1<pos:position pos:line="219" pos:column="30"/></literal></expr>;<pos:position pos:line="219" pos:column="31"/></expr_stmt>
            <return pos:line="220" pos:column="13">return <expr><name pos:line="220" pos:column="20">APR_SUCCESS<pos:position pos:line="220" pos:column="31"/></name></expr>;<pos:position pos:line="220" pos:column="32"/></return>
        <case pos:line="221" pos:column="9">case <expr><name pos:line="221" pos:column="14">BODY_CHUNK<pos:position pos:line="221" pos:column="24"/></name></expr>:<pos:position pos:line="221" pos:column="25"/></case>
        <case pos:line="222" pos:column="9">case <expr><name pos:line="222" pos:column="14">BODY_CHUNK_PART<pos:position pos:line="222" pos:column="29"/></name></expr>:<pos:position pos:line="222" pos:column="30"/></case>
            <block pos:line="223" pos:column="13">{
                <expr_stmt><expr><call><name pos:line="224" pos:column="17">apr_brigade_cleanup<pos:position pos:line="224" pos:column="36"/></name><argument_list pos:line="224" pos:column="36">(<argument><expr><name pos:line="224" pos:column="37">bb<pos:position pos:line="224" pos:column="39"/></name></expr></argument>)<pos:position pos:line="224" pos:column="40"/></argument_list></call></expr>;<pos:position pos:line="224" pos:column="41"/></expr_stmt>

                <comment type="block" pos:line="226" pos:column="17">/* We need to read the CRLF after the chunk.  */</comment>
                <if pos:line="227" pos:column="17">if <condition pos:line="227" pos:column="20">(<expr><name><name pos:line="227" pos:column="21">ctx<pos:position pos:line="227" pos:column="24"/></name><operator pos:line="227" pos:column="24">-&gt;<pos:position pos:line="227" pos:column="29"/></operator><name pos:line="227" pos:column="26">state<pos:position pos:line="227" pos:column="31"/></name></name> <operator pos:line="227" pos:column="32">==<pos:position pos:line="227" pos:column="34"/></operator> <name pos:line="227" pos:column="35">BODY_CHUNK<pos:position pos:line="227" pos:column="45"/></name></expr>)<pos:position pos:line="227" pos:column="46"/></condition><then pos:line="227" pos:column="46"> <block pos:line="227" pos:column="47">{
                    <expr_stmt><expr><name pos:line="228" pos:column="21">rv<pos:position pos:line="228" pos:column="23"/></name> <operator pos:line="228" pos:column="24">=<pos:position pos:line="228" pos:column="25"/></operator> <call><name pos:line="228" pos:column="26">ap_get_brigade<pos:position pos:line="228" pos:column="40"/></name><argument_list pos:line="228" pos:column="40">(<argument><expr><name><name pos:line="228" pos:column="41">f<pos:position pos:line="228" pos:column="42"/></name><operator pos:line="228" pos:column="42">-&gt;<pos:position pos:line="228" pos:column="47"/></operator><name pos:line="228" pos:column="44">next<pos:position pos:line="228" pos:column="48"/></name></name></expr></argument>, <argument><expr><name pos:line="228" pos:column="50">bb<pos:position pos:line="228" pos:column="52"/></name></expr></argument>, <argument><expr><name pos:line="228" pos:column="54">AP_MODE_GETLINE<pos:position pos:line="228" pos:column="69"/></name></expr></argument>,
                                        <argument><expr><name pos:line="229" pos:column="41">block<pos:position pos:line="229" pos:column="46"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="229" pos:column="48">0<pos:position pos:line="229" pos:column="49"/></literal></expr></argument>)<pos:position pos:line="229" pos:column="50"/></argument_list></call></expr>;<pos:position pos:line="229" pos:column="51"/></expr_stmt>
                    <if pos:line="230" pos:column="21">if <condition pos:line="230" pos:column="24">(<expr><name pos:line="230" pos:column="25">block<pos:position pos:line="230" pos:column="30"/></name> <operator pos:line="230" pos:column="31">==<pos:position pos:line="230" pos:column="33"/></operator> <name pos:line="230" pos:column="34">APR_NONBLOCK_READ<pos:position pos:line="230" pos:column="51"/></name> <operator pos:line="230" pos:column="52">&amp;&amp;<pos:position pos:line="230" pos:column="62"/></operator>
                        <operator pos:line="231" pos:column="25">(<pos:position pos:line="231" pos:column="26"/></operator> <operator pos:line="231" pos:column="27">(<pos:position pos:line="231" pos:column="28"/></operator><name pos:line="231" pos:column="28">rv<pos:position pos:line="231" pos:column="30"/></name> <operator pos:line="231" pos:column="31">==<pos:position pos:line="231" pos:column="33"/></operator> <name pos:line="231" pos:column="34">APR_SUCCESS<pos:position pos:line="231" pos:column="45"/></name> <operator pos:line="231" pos:column="46">&amp;&amp;<pos:position pos:line="231" pos:column="56"/></operator> <call><name pos:line="231" pos:column="49">APR_BRIGADE_EMPTY<pos:position pos:line="231" pos:column="66"/></name><argument_list pos:line="231" pos:column="66">(<argument><expr><name pos:line="231" pos:column="67">bb<pos:position pos:line="231" pos:column="69"/></name></expr></argument>)<pos:position pos:line="231" pos:column="70"/></argument_list></call><operator pos:line="231" pos:column="70">)<pos:position pos:line="231" pos:column="71"/></operator> <operator pos:line="231" pos:column="72">||<pos:position pos:line="231" pos:column="74"/></operator>
                          <operator pos:line="232" pos:column="27">(<pos:position pos:line="232" pos:column="28"/></operator><call><name pos:line="232" pos:column="28">APR_STATUS_IS_EAGAIN<pos:position pos:line="232" pos:column="48"/></name><argument_list pos:line="232" pos:column="48">(<argument><expr><name pos:line="232" pos:column="49">rv<pos:position pos:line="232" pos:column="51"/></name></expr></argument>)<pos:position pos:line="232" pos:column="52"/></argument_list></call><operator pos:line="232" pos:column="52">)<pos:position pos:line="232" pos:column="53"/></operator> <operator pos:line="232" pos:column="54">)<pos:position pos:line="232" pos:column="55"/></operator></expr>)<pos:position pos:line="232" pos:column="56"/></condition><then pos:line="232" pos:column="56"> <block pos:line="232" pos:column="57">{
                        <return pos:line="233" pos:column="25">return <expr><name pos:line="233" pos:column="32">APR_EAGAIN<pos:position pos:line="233" pos:column="42"/></name></expr>;<pos:position pos:line="233" pos:column="43"/></return>
                    }<pos:position pos:line="234" pos:column="22"/></block></then></if>
                    <comment type="block" pos:line="235" pos:column="21">/* If we get an error, then leave */</comment>
                    <if pos:line="236" pos:column="21">if <condition pos:line="236" pos:column="24">(<expr><name pos:line="236" pos:column="25">rv<pos:position pos:line="236" pos:column="27"/></name> <operator pos:line="236" pos:column="28">==<pos:position pos:line="236" pos:column="30"/></operator> <name pos:line="236" pos:column="31">APR_EOF<pos:position pos:line="236" pos:column="38"/></name></expr>)<pos:position pos:line="236" pos:column="39"/></condition><then pos:line="236" pos:column="39"> <block pos:line="236" pos:column="40">{
                        <return pos:line="237" pos:column="25">return <expr><name pos:line="237" pos:column="32">APR_INCOMPLETE<pos:position pos:line="237" pos:column="46"/></name></expr>;<pos:position pos:line="237" pos:column="47"/></return>
                    }<pos:position pos:line="238" pos:column="22"/></block></then></if>
                    <if pos:line="239" pos:column="21">if <condition pos:line="239" pos:column="24">(<expr><name pos:line="239" pos:column="25">rv<pos:position pos:line="239" pos:column="27"/></name> <operator pos:line="239" pos:column="28">!=<pos:position pos:line="239" pos:column="30"/></operator> <name pos:line="239" pos:column="31">APR_SUCCESS<pos:position pos:line="239" pos:column="42"/></name></expr>)<pos:position pos:line="239" pos:column="43"/></condition><then pos:line="239" pos:column="43"> <block pos:line="239" pos:column="44">{
                        <return pos:line="240" pos:column="25">return <expr><name pos:line="240" pos:column="32">rv<pos:position pos:line="240" pos:column="34"/></name></expr>;<pos:position pos:line="240" pos:column="35"/></return>
                    }<pos:position pos:line="241" pos:column="22"/></block></then></if>
                    <comment type="block" pos:line="242" pos:column="21">/*
                     * We really don't care whats on this line. If it is RFC
                     * compliant it should be only \r\n. If there is more
                     * before we just ignore it as long as we do not get over
                     * the limit for request lines.
                     */</comment>
                    <expr_stmt><expr><name pos:line="248" pos:column="21">rv<pos:position pos:line="248" pos:column="23"/></name> <operator pos:line="248" pos:column="24">=<pos:position pos:line="248" pos:column="25"/></operator> <call><name pos:line="248" pos:column="26">get_remaining_chunk_line<pos:position pos:line="248" pos:column="50"/></name><argument_list pos:line="248" pos:column="50">(<argument><expr><name pos:line="248" pos:column="51">ctx<pos:position pos:line="248" pos:column="54"/></name></expr></argument>, <argument><expr><name pos:line="248" pos:column="56">bb<pos:position pos:line="248" pos:column="58"/></name></expr></argument>,
                                                  <argument><expr><name><name pos:line="249" pos:column="51">f<pos:position pos:line="249" pos:column="52"/></name><operator pos:line="249" pos:column="52">-&gt;<pos:position pos:line="249" pos:column="57"/></operator><name pos:line="249" pos:column="54">r<pos:position pos:line="249" pos:column="55"/></name><operator pos:line="249" pos:column="55">-&gt;<pos:position pos:line="249" pos:column="60"/></operator><name pos:line="249" pos:column="57">server<pos:position pos:line="249" pos:column="63"/></name><operator pos:line="249" pos:column="63">-&gt;<pos:position pos:line="249" pos:column="68"/></operator><name pos:line="249" pos:column="65">limit_req_line<pos:position pos:line="249" pos:column="79"/></name></name></expr></argument>)<pos:position pos:line="249" pos:column="80"/></argument_list></call></expr>;<pos:position pos:line="249" pos:column="81"/></expr_stmt>
                    <expr_stmt><expr><call><name pos:line="250" pos:column="21">apr_brigade_cleanup<pos:position pos:line="250" pos:column="40"/></name><argument_list pos:line="250" pos:column="40">(<argument><expr><name pos:line="250" pos:column="41">bb<pos:position pos:line="250" pos:column="43"/></name></expr></argument>)<pos:position pos:line="250" pos:column="44"/></argument_list></call></expr>;<pos:position pos:line="250" pos:column="45"/></expr_stmt>
                    <if pos:line="251" pos:column="21">if <condition pos:line="251" pos:column="24">(<expr><call><name pos:line="251" pos:column="25">APR_STATUS_IS_EAGAIN<pos:position pos:line="251" pos:column="45"/></name><argument_list pos:line="251" pos:column="45">(<argument><expr><name pos:line="251" pos:column="46">rv<pos:position pos:line="251" pos:column="48"/></name></expr></argument>)<pos:position pos:line="251" pos:column="49"/></argument_list></call></expr>)<pos:position pos:line="251" pos:column="50"/></condition><then pos:line="251" pos:column="50"> <block pos:line="251" pos:column="51">{
                        <return pos:line="252" pos:column="25">return <expr><name pos:line="252" pos:column="32">rv<pos:position pos:line="252" pos:column="34"/></name></expr>;<pos:position pos:line="252" pos:column="35"/></return>
                    }<pos:position pos:line="253" pos:column="22"/></block></then></if>
                }<pos:position pos:line="254" pos:column="18"/></block></then> <else pos:line="254" pos:column="19">else <block pos:line="254" pos:column="24">{
                    <expr_stmt><expr><name pos:line="255" pos:column="21">rv<pos:position pos:line="255" pos:column="23"/></name> <operator pos:line="255" pos:column="24">=<pos:position pos:line="255" pos:column="25"/></operator> <name pos:line="255" pos:column="26">APR_SUCCESS<pos:position pos:line="255" pos:column="37"/></name></expr>;<pos:position pos:line="255" pos:column="38"/></expr_stmt>
                }<pos:position pos:line="256" pos:column="18"/></block></else></if>

                <if pos:line="258" pos:column="17">if <condition pos:line="258" pos:column="20">(<expr><name pos:line="258" pos:column="21">rv<pos:position pos:line="258" pos:column="23"/></name> <operator pos:line="258" pos:column="24">==<pos:position pos:line="258" pos:column="26"/></operator> <name pos:line="258" pos:column="27">APR_SUCCESS<pos:position pos:line="258" pos:column="38"/></name></expr>)<pos:position pos:line="258" pos:column="39"/></condition><then pos:line="258" pos:column="39"> <block pos:line="258" pos:column="40">{
                    <comment type="block" pos:line="259" pos:column="21">/* Read the real chunk line. */</comment>
                    <expr_stmt><expr><name pos:line="260" pos:column="21">rv<pos:position pos:line="260" pos:column="23"/></name> <operator pos:line="260" pos:column="24">=<pos:position pos:line="260" pos:column="25"/></operator> <call><name pos:line="260" pos:column="26">ap_get_brigade<pos:position pos:line="260" pos:column="40"/></name><argument_list pos:line="260" pos:column="40">(<argument><expr><name><name pos:line="260" pos:column="41">f<pos:position pos:line="260" pos:column="42"/></name><operator pos:line="260" pos:column="42">-&gt;<pos:position pos:line="260" pos:column="47"/></operator><name pos:line="260" pos:column="44">next<pos:position pos:line="260" pos:column="48"/></name></name></expr></argument>, <argument><expr><name pos:line="260" pos:column="50">bb<pos:position pos:line="260" pos:column="52"/></name></expr></argument>, <argument><expr><name pos:line="260" pos:column="54">AP_MODE_GETLINE<pos:position pos:line="260" pos:column="69"/></name></expr></argument>,
                                        <argument><expr><name pos:line="261" pos:column="41">block<pos:position pos:line="261" pos:column="46"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="261" pos:column="48">0<pos:position pos:line="261" pos:column="49"/></literal></expr></argument>)<pos:position pos:line="261" pos:column="50"/></argument_list></call></expr>;<pos:position pos:line="261" pos:column="51"/></expr_stmt>
                    <comment type="block" pos:line="262" pos:column="21">/* Test timeout */</comment>
                    <if pos:line="263" pos:column="21">if <condition pos:line="263" pos:column="24">(<expr><name pos:line="263" pos:column="25">block<pos:position pos:line="263" pos:column="30"/></name> <operator pos:line="263" pos:column="31">==<pos:position pos:line="263" pos:column="33"/></operator> <name pos:line="263" pos:column="34">APR_NONBLOCK_READ<pos:position pos:line="263" pos:column="51"/></name> <operator pos:line="263" pos:column="52">&amp;&amp;<pos:position pos:line="263" pos:column="62"/></operator>
                        <operator pos:line="264" pos:column="25">(<pos:position pos:line="264" pos:column="26"/></operator> <operator pos:line="264" pos:column="27">(<pos:position pos:line="264" pos:column="28"/></operator><name pos:line="264" pos:column="28">rv<pos:position pos:line="264" pos:column="30"/></name> <operator pos:line="264" pos:column="31">==<pos:position pos:line="264" pos:column="33"/></operator> <name pos:line="264" pos:column="34">APR_SUCCESS<pos:position pos:line="264" pos:column="45"/></name> <operator pos:line="264" pos:column="46">&amp;&amp;<pos:position pos:line="264" pos:column="56"/></operator> <call><name pos:line="264" pos:column="49">APR_BRIGADE_EMPTY<pos:position pos:line="264" pos:column="66"/></name><argument_list pos:line="264" pos:column="66">(<argument><expr><name pos:line="264" pos:column="67">bb<pos:position pos:line="264" pos:column="69"/></name></expr></argument>)<pos:position pos:line="264" pos:column="70"/></argument_list></call><operator pos:line="264" pos:column="70">)<pos:position pos:line="264" pos:column="71"/></operator> <operator pos:line="264" pos:column="72">||<pos:position pos:line="264" pos:column="74"/></operator>
                          <operator pos:line="265" pos:column="27">(<pos:position pos:line="265" pos:column="28"/></operator><call><name pos:line="265" pos:column="28">APR_STATUS_IS_EAGAIN<pos:position pos:line="265" pos:column="48"/></name><argument_list pos:line="265" pos:column="48">(<argument><expr><name pos:line="265" pos:column="49">rv<pos:position pos:line="265" pos:column="51"/></name></expr></argument>)<pos:position pos:line="265" pos:column="52"/></argument_list></call><operator pos:line="265" pos:column="52">)<pos:position pos:line="265" pos:column="53"/></operator> <operator pos:line="265" pos:column="54">)<pos:position pos:line="265" pos:column="55"/></operator></expr>)<pos:position pos:line="265" pos:column="56"/></condition><then pos:line="265" pos:column="56"> <block pos:line="265" pos:column="57">{
                        <expr_stmt><expr><name><name pos:line="266" pos:column="25">ctx<pos:position pos:line="266" pos:column="28"/></name><operator pos:line="266" pos:column="28">-&gt;<pos:position pos:line="266" pos:column="33"/></operator><name pos:line="266" pos:column="30">state<pos:position pos:line="266" pos:column="35"/></name></name> <operator pos:line="266" pos:column="36">=<pos:position pos:line="266" pos:column="37"/></operator> <name pos:line="266" pos:column="38">BODY_CHUNK_PART<pos:position pos:line="266" pos:column="53"/></name></expr>;<pos:position pos:line="266" pos:column="54"/></expr_stmt>
                        <return pos:line="267" pos:column="25">return <expr><name pos:line="267" pos:column="32">APR_EAGAIN<pos:position pos:line="267" pos:column="42"/></name></expr>;<pos:position pos:line="267" pos:column="43"/></return>
                    }<pos:position pos:line="268" pos:column="22"/></block></then></if>
                    <expr_stmt><expr><name><name pos:line="269" pos:column="21">ctx<pos:position pos:line="269" pos:column="24"/></name><operator pos:line="269" pos:column="24">-&gt;<pos:position pos:line="269" pos:column="29"/></operator><name pos:line="269" pos:column="26">state<pos:position pos:line="269" pos:column="31"/></name></name> <operator pos:line="269" pos:column="32">=<pos:position pos:line="269" pos:column="33"/></operator> <name pos:line="269" pos:column="34">BODY_CHUNK<pos:position pos:line="269" pos:column="44"/></name></expr>;<pos:position pos:line="269" pos:column="45"/></expr_stmt>
                    <if pos:line="270" pos:column="21">if <condition pos:line="270" pos:column="24">(<expr><name pos:line="270" pos:column="25">rv<pos:position pos:line="270" pos:column="27"/></name> <operator pos:line="270" pos:column="28">==<pos:position pos:line="270" pos:column="30"/></operator> <name pos:line="270" pos:column="31">APR_SUCCESS<pos:position pos:line="270" pos:column="42"/></name></expr>)<pos:position pos:line="270" pos:column="43"/></condition><then pos:line="270" pos:column="43"> <block pos:line="270" pos:column="44">{
                        <expr_stmt><expr><name pos:line="271" pos:column="25">rv<pos:position pos:line="271" pos:column="27"/></name> <operator pos:line="271" pos:column="28">=<pos:position pos:line="271" pos:column="29"/></operator> <call><name pos:line="271" pos:column="30">get_chunk_line<pos:position pos:line="271" pos:column="44"/></name><argument_list pos:line="271" pos:column="44">(<argument><expr><name pos:line="271" pos:column="45">ctx<pos:position pos:line="271" pos:column="48"/></name></expr></argument>, <argument><expr><name pos:line="271" pos:column="50">bb<pos:position pos:line="271" pos:column="52"/></name></expr></argument>, <argument><expr><name><name pos:line="271" pos:column="54">f<pos:position pos:line="271" pos:column="55"/></name><operator pos:line="271" pos:column="55">-&gt;<pos:position pos:line="271" pos:column="60"/></operator><name pos:line="271" pos:column="57">r<pos:position pos:line="271" pos:column="58"/></name><operator pos:line="271" pos:column="58">-&gt;<pos:position pos:line="271" pos:column="63"/></operator><name pos:line="271" pos:column="60">server<pos:position pos:line="271" pos:column="66"/></name><operator pos:line="271" pos:column="66">-&gt;<pos:position pos:line="271" pos:column="71"/></operator><name pos:line="271" pos:column="68">limit_req_line<pos:position pos:line="271" pos:column="82"/></name></name></expr></argument>)<pos:position pos:line="271" pos:column="83"/></argument_list></call></expr>;<pos:position pos:line="271" pos:column="84"/></expr_stmt>
                        <if pos:line="272" pos:column="25">if <condition pos:line="272" pos:column="28">(<expr><call><name pos:line="272" pos:column="29">APR_STATUS_IS_EAGAIN<pos:position pos:line="272" pos:column="49"/></name><argument_list pos:line="272" pos:column="49">(<argument><expr><name pos:line="272" pos:column="50">rv<pos:position pos:line="272" pos:column="52"/></name></expr></argument>)<pos:position pos:line="272" pos:column="53"/></argument_list></call></expr>)<pos:position pos:line="272" pos:column="54"/></condition><then pos:line="272" pos:column="54"> <block pos:line="272" pos:column="55">{
                            <expr_stmt><expr><name><name pos:line="273" pos:column="29">ctx<pos:position pos:line="273" pos:column="32"/></name><operator pos:line="273" pos:column="32">-&gt;<pos:position pos:line="273" pos:column="37"/></operator><name pos:line="273" pos:column="34">state<pos:position pos:line="273" pos:column="39"/></name></name> <operator pos:line="273" pos:column="40">=<pos:position pos:line="273" pos:column="41"/></operator> <name pos:line="273" pos:column="42">BODY_CHUNK_PART<pos:position pos:line="273" pos:column="57"/></name></expr>;<pos:position pos:line="273" pos:column="58"/></expr_stmt>
                            <expr_stmt><expr><call><name pos:line="274" pos:column="29">apr_brigade_cleanup<pos:position pos:line="274" pos:column="48"/></name><argument_list pos:line="274" pos:column="48">(<argument><expr><name pos:line="274" pos:column="49">bb<pos:position pos:line="274" pos:column="51"/></name></expr></argument>)<pos:position pos:line="274" pos:column="52"/></argument_list></call></expr>;<pos:position pos:line="274" pos:column="53"/></expr_stmt>
                            <return pos:line="275" pos:column="29">return <expr><name pos:line="275" pos:column="36">rv<pos:position pos:line="275" pos:column="38"/></name></expr>;<pos:position pos:line="275" pos:column="39"/></return>
                        }<pos:position pos:line="276" pos:column="26"/></block></then></if>
                        <if pos:line="277" pos:column="25">if <condition pos:line="277" pos:column="28">(<expr><name pos:line="277" pos:column="29">rv<pos:position pos:line="277" pos:column="31"/></name> <operator pos:line="277" pos:column="32">==<pos:position pos:line="277" pos:column="34"/></operator> <name pos:line="277" pos:column="35">APR_SUCCESS<pos:position pos:line="277" pos:column="46"/></name></expr>)<pos:position pos:line="277" pos:column="47"/></condition><then pos:line="277" pos:column="47"> <block pos:line="277" pos:column="48">{
                            <expr_stmt><expr><name><name pos:line="278" pos:column="29">ctx<pos:position pos:line="278" pos:column="32"/></name><operator pos:line="278" pos:column="32">-&gt;<pos:position pos:line="278" pos:column="37"/></operator><name pos:line="278" pos:column="34">remaining<pos:position pos:line="278" pos:column="43"/></name></name> <operator pos:line="278" pos:column="44">=<pos:position pos:line="278" pos:column="45"/></operator> <call><name pos:line="278" pos:column="46">get_chunk_size<pos:position pos:line="278" pos:column="60"/></name><argument_list pos:line="278" pos:column="60">(<argument><expr><name><name pos:line="278" pos:column="61">ctx<pos:position pos:line="278" pos:column="64"/></name><operator pos:line="278" pos:column="64">-&gt;<pos:position pos:line="278" pos:column="69"/></operator><name pos:line="278" pos:column="66">chunk_ln<pos:position pos:line="278" pos:column="74"/></name></name></expr></argument>)<pos:position pos:line="278" pos:column="75"/></argument_list></call></expr>;<pos:position pos:line="278" pos:column="76"/></expr_stmt>
                            <if pos:line="279" pos:column="29">if <condition pos:line="279" pos:column="32">(<expr><name><name pos:line="279" pos:column="33">ctx<pos:position pos:line="279" pos:column="36"/></name><operator pos:line="279" pos:column="36">-&gt;<pos:position pos:line="279" pos:column="41"/></operator><name pos:line="279" pos:column="38">remaining<pos:position pos:line="279" pos:column="47"/></name></name> <operator pos:line="279" pos:column="48">==<pos:position pos:line="279" pos:column="50"/></operator> <name pos:line="279" pos:column="51">INVALID_CHAR<pos:position pos:line="279" pos:column="63"/></name></expr>)<pos:position pos:line="279" pos:column="64"/></condition><then pos:line="279" pos:column="64"> <block pos:line="279" pos:column="65">{
                                <expr_stmt><expr><name pos:line="280" pos:column="33">rv<pos:position pos:line="280" pos:column="35"/></name> <operator pos:line="280" pos:column="36">=<pos:position pos:line="280" pos:column="37"/></operator> <name pos:line="280" pos:column="38">APR_EGENERAL<pos:position pos:line="280" pos:column="50"/></name></expr>;<pos:position pos:line="280" pos:column="51"/></expr_stmt>
                                <expr_stmt><expr><name pos:line="281" pos:column="33">http_error<pos:position pos:line="281" pos:column="43"/></name> <operator pos:line="281" pos:column="44">=<pos:position pos:line="281" pos:column="45"/></operator> <name pos:line="281" pos:column="46">HTTP_SERVICE_UNAVAILABLE<pos:position pos:line="281" pos:column="70"/></name></expr>;<pos:position pos:line="281" pos:column="71"/></expr_stmt>
                            }<pos:position pos:line="282" pos:column="30"/></block></then></if>
                        }<pos:position pos:line="283" pos:column="26"/></block></then></if>
                    }<pos:position pos:line="284" pos:column="22"/></block></then></if>
                    <expr_stmt><expr><call><name pos:line="285" pos:column="21">apr_brigade_cleanup<pos:position pos:line="285" pos:column="40"/></name><argument_list pos:line="285" pos:column="40">(<argument><expr><name pos:line="285" pos:column="41">bb<pos:position pos:line="285" pos:column="43"/></name></expr></argument>)<pos:position pos:line="285" pos:column="44"/></argument_list></call></expr>;<pos:position pos:line="285" pos:column="45"/></expr_stmt>
                }<pos:position pos:line="286" pos:column="18"/></block></then></if>

                <comment type="block" pos:line="288" pos:column="17">/* Detect chunksize error (such as overflow) */</comment>
                <if pos:line="289" pos:column="17">if <condition pos:line="289" pos:column="20">(<expr><name pos:line="289" pos:column="21">rv<pos:position pos:line="289" pos:column="23"/></name> <operator pos:line="289" pos:column="24">!=<pos:position pos:line="289" pos:column="26"/></operator> <name pos:line="289" pos:column="27">APR_SUCCESS<pos:position pos:line="289" pos:column="38"/></name> <operator pos:line="289" pos:column="39">||<pos:position pos:line="289" pos:column="41"/></operator> <name><name pos:line="289" pos:column="42">ctx<pos:position pos:line="289" pos:column="45"/></name><operator pos:line="289" pos:column="45">-&gt;<pos:position pos:line="289" pos:column="50"/></operator><name pos:line="289" pos:column="47">remaining<pos:position pos:line="289" pos:column="56"/></name></name> <operator pos:line="289" pos:column="57">&lt;<pos:position pos:line="289" pos:column="61"/></operator> <literal type="number" pos:line="289" pos:column="59">0<pos:position pos:line="289" pos:column="60"/></literal></expr>)<pos:position pos:line="289" pos:column="61"/></condition><then pos:line="289" pos:column="61"> <block pos:line="289" pos:column="62">{
                    <expr_stmt><expr><call><name pos:line="290" pos:column="21">ap_log_rerror<pos:position pos:line="290" pos:column="34"/></name><argument_list pos:line="290" pos:column="34">(<argument><expr><name pos:line="290" pos:column="35">APLOG_MARK<pos:position pos:line="290" pos:column="45"/></name></expr></argument>, <argument><expr><name pos:line="290" pos:column="47">APLOG_ERR<pos:position pos:line="290" pos:column="56"/></name></expr></argument>, <argument><expr><name pos:line="290" pos:column="58">rv<pos:position pos:line="290" pos:column="60"/></name></expr></argument>, <argument><expr><name><name pos:line="290" pos:column="62">f<pos:position pos:line="290" pos:column="63"/></name><operator pos:line="290" pos:column="63">-&gt;<pos:position pos:line="290" pos:column="68"/></operator><name pos:line="290" pos:column="65">r<pos:position pos:line="290" pos:column="66"/></name></name></expr></argument>, <argument><expr><literal type="string" pos:line="290" pos:column="68">"Error reading chunk %s "<pos:position pos:line="290" pos:column="93"/></literal></expr></argument>, 
                                  <argument><expr><ternary><condition><expr><operator pos:line="291" pos:column="35">(<pos:position pos:line="291" pos:column="36"/></operator><name><name pos:line="291" pos:column="36">ctx<pos:position pos:line="291" pos:column="39"/></name><operator pos:line="291" pos:column="39">-&gt;<pos:position pos:line="291" pos:column="44"/></operator><name pos:line="291" pos:column="41">remaining<pos:position pos:line="291" pos:column="50"/></name></name> <operator pos:line="291" pos:column="51">&lt;<pos:position pos:line="291" pos:column="55"/></operator> <literal type="number" pos:line="291" pos:column="53">0<pos:position pos:line="291" pos:column="54"/></literal><operator pos:line="291" pos:column="54">)<pos:position pos:line="291" pos:column="55"/></operator></expr> ?<pos:position pos:line="291" pos:column="57"/></condition><then pos:line="291" pos:column="57"> <expr><literal type="string" pos:line="291" pos:column="58">"(overflow)"<pos:position pos:line="291" pos:column="70"/></literal></expr> <pos:position pos:line="291" pos:column="71"/></then><else pos:line="291" pos:column="71">: <expr><literal type="string" pos:line="291" pos:column="73">""<pos:position pos:line="291" pos:column="75"/></literal></expr></else></ternary></expr></argument>)<pos:position pos:line="291" pos:column="76"/></argument_list></call></expr>;<pos:position pos:line="291" pos:column="77"/></expr_stmt>
                    <if pos:line="292" pos:column="21">if <condition pos:line="292" pos:column="24">(<expr><call><name pos:line="292" pos:column="25">APR_STATUS_IS_TIMEUP<pos:position pos:line="292" pos:column="45"/></name><argument_list pos:line="292" pos:column="45">(<argument><expr><name pos:line="292" pos:column="46">rv<pos:position pos:line="292" pos:column="48"/></name></expr></argument>)<pos:position pos:line="292" pos:column="49"/></argument_list></call> <operator pos:line="292" pos:column="50">||<pos:position pos:line="292" pos:column="52"/></operator> <name><name pos:line="292" pos:column="53">ctx<pos:position pos:line="292" pos:column="56"/></name><operator pos:line="292" pos:column="56">-&gt;<pos:position pos:line="292" pos:column="61"/></operator><name pos:line="292" pos:column="58">remaining<pos:position pos:line="292" pos:column="67"/></name></name> <operator pos:line="292" pos:column="68">&gt;<pos:position pos:line="292" pos:column="72"/></operator> <literal type="number" pos:line="292" pos:column="70">0<pos:position pos:line="292" pos:column="71"/></literal></expr>)<pos:position pos:line="292" pos:column="72"/></condition><then pos:line="292" pos:column="72"> <block pos:line="292" pos:column="73">{
                        <expr_stmt><expr><name pos:line="293" pos:column="25">http_error<pos:position pos:line="293" pos:column="35"/></name> <operator pos:line="293" pos:column="36">=<pos:position pos:line="293" pos:column="37"/></operator> <name pos:line="293" pos:column="38">HTTP_REQUEST_TIME_OUT<pos:position pos:line="293" pos:column="59"/></name></expr>;<pos:position pos:line="293" pos:column="60"/></expr_stmt>
                    }<pos:position pos:line="294" pos:column="22"/></block></then></if>
                    <expr_stmt><expr><name><name pos:line="295" pos:column="21">ctx<pos:position pos:line="295" pos:column="24"/></name><operator pos:line="295" pos:column="24">-&gt;<pos:position pos:line="295" pos:column="29"/></operator><name pos:line="295" pos:column="26">remaining<pos:position pos:line="295" pos:column="35"/></name></name> <operator pos:line="295" pos:column="36">=<pos:position pos:line="295" pos:column="37"/></operator> <literal type="number" pos:line="295" pos:column="38">0<pos:position pos:line="295" pos:column="39"/></literal></expr>;<pos:position pos:line="295" pos:column="40"/></expr_stmt> <comment type="block" pos:line="295" pos:column="41">/* Reset it in case we have to
                                         * come back here later */</comment>
                    <return pos:line="297" pos:column="21">return <expr><call><name pos:line="297" pos:column="28">bail_out_on_error<pos:position pos:line="297" pos:column="45"/></name><argument_list pos:line="297" pos:column="45">(<argument><expr><name pos:line="297" pos:column="46">ctx<pos:position pos:line="297" pos:column="49"/></name></expr></argument>, <argument><expr><name pos:line="297" pos:column="51">f<pos:position pos:line="297" pos:column="52"/></name></expr></argument>, <argument><expr><name pos:line="297" pos:column="54">http_error<pos:position pos:line="297" pos:column="64"/></name></expr></argument>)<pos:position pos:line="297" pos:column="65"/></argument_list></call></expr>;<pos:position pos:line="297" pos:column="66"/></return>
                }<pos:position pos:line="298" pos:column="18"/></block></then></if>

                <if pos:line="300" pos:column="17">if <condition pos:line="300" pos:column="20">(<expr><operator pos:line="300" pos:column="21">!<pos:position pos:line="300" pos:column="22"/></operator><name><name pos:line="300" pos:column="22">ctx<pos:position pos:line="300" pos:column="25"/></name><operator pos:line="300" pos:column="25">-&gt;<pos:position pos:line="300" pos:column="30"/></operator><name pos:line="300" pos:column="27">remaining<pos:position pos:line="300" pos:column="36"/></name></name></expr>)<pos:position pos:line="300" pos:column="37"/></condition><then pos:line="300" pos:column="37"> <block pos:line="300" pos:column="38">{
                    <return pos:line="301" pos:column="21">return <expr><call><name pos:line="301" pos:column="28">read_chunked_trailers<pos:position pos:line="301" pos:column="49"/></name><argument_list pos:line="301" pos:column="49">(<argument><expr><name pos:line="301" pos:column="50">ctx<pos:position pos:line="301" pos:column="53"/></name></expr></argument>, <argument><expr><name pos:line="301" pos:column="55">f<pos:position pos:line="301" pos:column="56"/></name></expr></argument>, <argument><expr><name pos:line="301" pos:column="58">b<pos:position pos:line="301" pos:column="59"/></name></expr></argument>,
                            <argument><expr><name><name pos:line="302" pos:column="29">conf<pos:position pos:line="302" pos:column="33"/></name><operator pos:line="302" pos:column="33">-&gt;<pos:position pos:line="302" pos:column="38"/></operator><name pos:line="302" pos:column="35">merge_trailers<pos:position pos:line="302" pos:column="49"/></name></name> <operator pos:line="302" pos:column="50">==<pos:position pos:line="302" pos:column="52"/></operator> <name pos:line="302" pos:column="53">AP_MERGE_TRAILERS_ENABLE<pos:position pos:line="302" pos:column="77"/></name></expr></argument>)<pos:position pos:line="302" pos:column="78"/></argument_list></call></expr>;<pos:position pos:line="302" pos:column="79"/></return>
                }<pos:position pos:line="303" pos:column="18"/></block></then></if>
            }<pos:position pos:line="304" pos:column="14"/></block>
            <break pos:line="305" pos:column="13">break;<pos:position pos:line="305" pos:column="19"/></break>
        }<pos:position pos:line="306" pos:column="10"/></block></switch>
    }<pos:position pos:line="307" pos:column="6"/></block></then></if>

    <comment type="block" pos:line="309" pos:column="5">/* Ensure that the caller can not go over our boundary point. */</comment>
    <if pos:line="310" pos:column="5">if <condition pos:line="310" pos:column="8">(<expr><name><name pos:line="310" pos:column="9">ctx<pos:position pos:line="310" pos:column="12"/></name><operator pos:line="310" pos:column="12">-&gt;<pos:position pos:line="310" pos:column="17"/></operator><name pos:line="310" pos:column="14">state<pos:position pos:line="310" pos:column="19"/></name></name> <operator pos:line="310" pos:column="20">==<pos:position pos:line="310" pos:column="22"/></operator> <name pos:line="310" pos:column="23">BODY_LENGTH<pos:position pos:line="310" pos:column="34"/></name> <operator pos:line="310" pos:column="35">||<pos:position pos:line="310" pos:column="37"/></operator> <name><name pos:line="310" pos:column="38">ctx<pos:position pos:line="310" pos:column="41"/></name><operator pos:line="310" pos:column="41">-&gt;<pos:position pos:line="310" pos:column="46"/></operator><name pos:line="310" pos:column="43">state<pos:position pos:line="310" pos:column="48"/></name></name> <operator pos:line="310" pos:column="49">==<pos:position pos:line="310" pos:column="51"/></operator> <name pos:line="310" pos:column="52">BODY_CHUNK<pos:position pos:line="310" pos:column="62"/></name></expr>)<pos:position pos:line="310" pos:column="63"/></condition><then pos:line="310" pos:column="63"> <block pos:line="310" pos:column="64">{
        <if pos:line="311" pos:column="9">if <condition pos:line="311" pos:column="12">(<expr><name><name pos:line="311" pos:column="13">ctx<pos:position pos:line="311" pos:column="16"/></name><operator pos:line="311" pos:column="16">-&gt;<pos:position pos:line="311" pos:column="21"/></operator><name pos:line="311" pos:column="18">remaining<pos:position pos:line="311" pos:column="27"/></name></name> <operator pos:line="311" pos:column="28">&lt;<pos:position pos:line="311" pos:column="32"/></operator> <name pos:line="311" pos:column="30">readbytes<pos:position pos:line="311" pos:column="39"/></name></expr>)<pos:position pos:line="311" pos:column="40"/></condition><then pos:line="311" pos:column="40"> <block pos:line="311" pos:column="41">{
            <expr_stmt><expr><name pos:line="312" pos:column="13">readbytes<pos:position pos:line="312" pos:column="22"/></name> <operator pos:line="312" pos:column="23">=<pos:position pos:line="312" pos:column="24"/></operator> <name><name pos:line="312" pos:column="25">ctx<pos:position pos:line="312" pos:column="28"/></name><operator pos:line="312" pos:column="28">-&gt;<pos:position pos:line="312" pos:column="33"/></operator><name pos:line="312" pos:column="30">remaining<pos:position pos:line="312" pos:column="39"/></name></name></expr>;<pos:position pos:line="312" pos:column="40"/></expr_stmt>
        }<pos:position pos:line="313" pos:column="10"/></block></then></if>
        <expr_stmt><expr><call><name pos:line="314" pos:column="9">AP_DEBUG_ASSERT<pos:position pos:line="314" pos:column="24"/></name><argument_list pos:line="314" pos:column="24">(<argument><expr><name pos:line="314" pos:column="25">readbytes<pos:position pos:line="314" pos:column="34"/></name> <operator pos:line="314" pos:column="35">&gt;<pos:position pos:line="314" pos:column="39"/></operator> <literal type="number" pos:line="314" pos:column="37">0<pos:position pos:line="314" pos:column="38"/></literal></expr></argument>)<pos:position pos:line="314" pos:column="39"/></argument_list></call></expr>;<pos:position pos:line="314" pos:column="40"/></expr_stmt>
    }<pos:position pos:line="315" pos:column="6"/></block></then></if>

    <expr_stmt><expr><name pos:line="317" pos:column="5">rv<pos:position pos:line="317" pos:column="7"/></name> <operator pos:line="317" pos:column="8">=<pos:position pos:line="317" pos:column="9"/></operator> <call><name pos:line="317" pos:column="10">ap_get_brigade<pos:position pos:line="317" pos:column="24"/></name><argument_list pos:line="317" pos:column="24">(<argument><expr><name><name pos:line="317" pos:column="25">f<pos:position pos:line="317" pos:column="26"/></name><operator pos:line="317" pos:column="26">-&gt;<pos:position pos:line="317" pos:column="31"/></operator><name pos:line="317" pos:column="28">next<pos:position pos:line="317" pos:column="32"/></name></name></expr></argument>, <argument><expr><name pos:line="317" pos:column="34">b<pos:position pos:line="317" pos:column="35"/></name></expr></argument>, <argument><expr><name pos:line="317" pos:column="37">mode<pos:position pos:line="317" pos:column="41"/></name></expr></argument>, <argument><expr><name pos:line="317" pos:column="43">block<pos:position pos:line="317" pos:column="48"/></name></expr></argument>, <argument><expr><name pos:line="317" pos:column="50">readbytes<pos:position pos:line="317" pos:column="59"/></name></expr></argument>)<pos:position pos:line="317" pos:column="60"/></argument_list></call></expr>;<pos:position pos:line="317" pos:column="61"/></expr_stmt>

    <if pos:line="319" pos:column="5">if <condition pos:line="319" pos:column="8">(<expr><name pos:line="319" pos:column="9">rv<pos:position pos:line="319" pos:column="11"/></name> <operator pos:line="319" pos:column="12">==<pos:position pos:line="319" pos:column="14"/></operator> <name pos:line="319" pos:column="15">APR_EOF<pos:position pos:line="319" pos:column="22"/></name> <operator pos:line="319" pos:column="23">&amp;&amp;<pos:position pos:line="319" pos:column="33"/></operator> <name><name pos:line="319" pos:column="26">ctx<pos:position pos:line="319" pos:column="29"/></name><operator pos:line="319" pos:column="29">-&gt;<pos:position pos:line="319" pos:column="34"/></operator><name pos:line="319" pos:column="31">state<pos:position pos:line="319" pos:column="36"/></name></name> <operator pos:line="319" pos:column="37">!=<pos:position pos:line="319" pos:column="39"/></operator> <name pos:line="319" pos:column="40">BODY_NONE<pos:position pos:line="319" pos:column="49"/></name> <operator pos:line="319" pos:column="50">&amp;&amp;<pos:position pos:line="319" pos:column="60"/></operator>
            <name><name pos:line="320" pos:column="13">ctx<pos:position pos:line="320" pos:column="16"/></name><operator pos:line="320" pos:column="16">-&gt;<pos:position pos:line="320" pos:column="21"/></operator><name pos:line="320" pos:column="18">remaining<pos:position pos:line="320" pos:column="27"/></name></name> <operator pos:line="320" pos:column="28">&gt;<pos:position pos:line="320" pos:column="32"/></operator> <literal type="number" pos:line="320" pos:column="30">0<pos:position pos:line="320" pos:column="31"/></literal></expr>)<pos:position pos:line="320" pos:column="32"/></condition><then pos:line="320" pos:column="32"> <block pos:line="320" pos:column="33">{
        <return pos:line="321" pos:column="9">return <expr><name pos:line="321" pos:column="16">APR_INCOMPLETE<pos:position pos:line="321" pos:column="30"/></name></expr>;<pos:position pos:line="321" pos:column="31"/></return>
    }<pos:position pos:line="322" pos:column="6"/></block></then></if>
    <if pos:line="323" pos:column="5">if <condition pos:line="323" pos:column="8">(<expr><name pos:line="323" pos:column="9">rv<pos:position pos:line="323" pos:column="11"/></name> <operator pos:line="323" pos:column="12">!=<pos:position pos:line="323" pos:column="14"/></operator> <name pos:line="323" pos:column="15">APR_SUCCESS<pos:position pos:line="323" pos:column="26"/></name></expr>)<pos:position pos:line="323" pos:column="27"/></condition><then pos:line="323" pos:column="27"> <block pos:line="323" pos:column="28">{
        <return pos:line="324" pos:column="9">return <expr><name pos:line="324" pos:column="16">rv<pos:position pos:line="324" pos:column="18"/></name></expr>;<pos:position pos:line="324" pos:column="19"/></return>
    }<pos:position pos:line="325" pos:column="6"/></block></then></if>

    <comment type="block" pos:line="327" pos:column="5">/* How many bytes did we just read? */</comment>
    <expr_stmt><expr><call><name pos:line="328" pos:column="5">apr_brigade_length<pos:position pos:line="328" pos:column="23"/></name><argument_list pos:line="328" pos:column="23">(<argument><expr><name pos:line="328" pos:column="24">b<pos:position pos:line="328" pos:column="25"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="328" pos:column="27">0<pos:position pos:line="328" pos:column="28"/></literal></expr></argument>, <argument><expr><operator pos:line="328" pos:column="30">&amp;<pos:position pos:line="328" pos:column="35"/></operator><name pos:line="328" pos:column="31">totalread<pos:position pos:line="328" pos:column="40"/></name></expr></argument>)<pos:position pos:line="328" pos:column="41"/></argument_list></call></expr>;<pos:position pos:line="328" pos:column="42"/></expr_stmt>

    <comment type="block" pos:line="330" pos:column="5">/* If this happens, we have a bucket of unknown length.  Die because
     * it means our assumptions have changed. */</comment>
    <expr_stmt><expr><call><name pos:line="332" pos:column="5">AP_DEBUG_ASSERT<pos:position pos:line="332" pos:column="20"/></name><argument_list pos:line="332" pos:column="20">(<argument><expr><name pos:line="332" pos:column="21">totalread<pos:position pos:line="332" pos:column="30"/></name> <operator pos:line="332" pos:column="31">&gt;=<pos:position pos:line="332" pos:column="36"/></operator> <literal type="number" pos:line="332" pos:column="34">0<pos:position pos:line="332" pos:column="35"/></literal></expr></argument>)<pos:position pos:line="332" pos:column="36"/></argument_list></call></expr>;<pos:position pos:line="332" pos:column="37"/></expr_stmt>

    <if pos:line="334" pos:column="5">if <condition pos:line="334" pos:column="8">(<expr><name><name pos:line="334" pos:column="9">ctx<pos:position pos:line="334" pos:column="12"/></name><operator pos:line="334" pos:column="12">-&gt;<pos:position pos:line="334" pos:column="17"/></operator><name pos:line="334" pos:column="14">state<pos:position pos:line="334" pos:column="19"/></name></name> <operator pos:line="334" pos:column="20">!=<pos:position pos:line="334" pos:column="22"/></operator> <name pos:line="334" pos:column="23">BODY_NONE<pos:position pos:line="334" pos:column="32"/></name></expr>)<pos:position pos:line="334" pos:column="33"/></condition><then pos:line="334" pos:column="33"> <block pos:line="334" pos:column="34">{
        <expr_stmt><expr><name><name pos:line="335" pos:column="9">ctx<pos:position pos:line="335" pos:column="12"/></name><operator pos:line="335" pos:column="12">-&gt;<pos:position pos:line="335" pos:column="17"/></operator><name pos:line="335" pos:column="14">remaining<pos:position pos:line="335" pos:column="23"/></name></name> <operator pos:line="335" pos:column="24">-=<pos:position pos:line="335" pos:column="26"/></operator> <name pos:line="335" pos:column="27">totalread<pos:position pos:line="335" pos:column="36"/></name></expr>;<pos:position pos:line="335" pos:column="37"/></expr_stmt>
        <if pos:line="336" pos:column="9">if <condition pos:line="336" pos:column="12">(<expr><name><name pos:line="336" pos:column="13">ctx<pos:position pos:line="336" pos:column="16"/></name><operator pos:line="336" pos:column="16">-&gt;<pos:position pos:line="336" pos:column="21"/></operator><name pos:line="336" pos:column="18">remaining<pos:position pos:line="336" pos:column="27"/></name></name> <operator pos:line="336" pos:column="28">&gt;<pos:position pos:line="336" pos:column="32"/></operator> <literal type="number" pos:line="336" pos:column="30">0<pos:position pos:line="336" pos:column="31"/></literal></expr>)<pos:position pos:line="336" pos:column="32"/></condition><then pos:line="336" pos:column="32"> <block pos:line="336" pos:column="33">{
            <expr_stmt><expr><name pos:line="337" pos:column="13">e<pos:position pos:line="337" pos:column="14"/></name> <operator pos:line="337" pos:column="15">=<pos:position pos:line="337" pos:column="16"/></operator> <call><name pos:line="337" pos:column="17">APR_BRIGADE_LAST<pos:position pos:line="337" pos:column="33"/></name><argument_list pos:line="337" pos:column="33">(<argument><expr><name pos:line="337" pos:column="34">b<pos:position pos:line="337" pos:column="35"/></name></expr></argument>)<pos:position pos:line="337" pos:column="36"/></argument_list></call></expr>;<pos:position pos:line="337" pos:column="37"/></expr_stmt>
            <if pos:line="338" pos:column="13">if <condition pos:line="338" pos:column="16">(<expr><call><name pos:line="338" pos:column="17">APR_BUCKET_IS_EOS<pos:position pos:line="338" pos:column="34"/></name><argument_list pos:line="338" pos:column="34">(<argument><expr><name pos:line="338" pos:column="35">e<pos:position pos:line="338" pos:column="36"/></name></expr></argument>)<pos:position pos:line="338" pos:column="37"/></argument_list></call></expr>)<pos:position pos:line="338" pos:column="38"/></condition><then pos:line="338" pos:column="38"> <block pos:line="338" pos:column="39">{
                <expr_stmt><expr><call><name pos:line="339" pos:column="17">apr_bucket_delete<pos:position pos:line="339" pos:column="34"/></name><argument_list pos:line="339" pos:column="34">(<argument><expr><name pos:line="339" pos:column="35">e<pos:position pos:line="339" pos:column="36"/></name></expr></argument>)<pos:position pos:line="339" pos:column="37"/></argument_list></call></expr>;<pos:position pos:line="339" pos:column="38"/></expr_stmt>
                <return pos:line="340" pos:column="17">return <expr><name pos:line="340" pos:column="24">APR_INCOMPLETE<pos:position pos:line="340" pos:column="38"/></name></expr>;<pos:position pos:line="340" pos:column="39"/></return>
            }<pos:position pos:line="341" pos:column="14"/></block></then></if>
        }<pos:position pos:line="342" pos:column="10"/></block></then></if>
    }<pos:position pos:line="343" pos:column="6"/></block></then></if>

    <comment type="block" pos:line="345" pos:column="5">/* If we have no more bytes remaining on a C-L request,
     * save the callter a roundtrip to discover EOS.
     */</comment>
    <if pos:line="348" pos:column="5">if <condition pos:line="348" pos:column="8">(<expr><name><name pos:line="348" pos:column="9">ctx<pos:position pos:line="348" pos:column="12"/></name><operator pos:line="348" pos:column="12">-&gt;<pos:position pos:line="348" pos:column="17"/></operator><name pos:line="348" pos:column="14">state<pos:position pos:line="348" pos:column="19"/></name></name> <operator pos:line="348" pos:column="20">==<pos:position pos:line="348" pos:column="22"/></operator> <name pos:line="348" pos:column="23">BODY_LENGTH<pos:position pos:line="348" pos:column="34"/></name> <operator pos:line="348" pos:column="35">&amp;&amp;<pos:position pos:line="348" pos:column="45"/></operator> <name><name pos:line="348" pos:column="38">ctx<pos:position pos:line="348" pos:column="41"/></name><operator pos:line="348" pos:column="41">-&gt;<pos:position pos:line="348" pos:column="46"/></operator><name pos:line="348" pos:column="43">remaining<pos:position pos:line="348" pos:column="52"/></name></name> <operator pos:line="348" pos:column="53">==<pos:position pos:line="348" pos:column="55"/></operator> <literal type="number" pos:line="348" pos:column="56">0<pos:position pos:line="348" pos:column="57"/></literal></expr>)<pos:position pos:line="348" pos:column="58"/></condition><then pos:line="348" pos:column="58"> <block pos:line="348" pos:column="59">{
        <expr_stmt><expr><name pos:line="349" pos:column="9">e<pos:position pos:line="349" pos:column="10"/></name> <operator pos:line="349" pos:column="11">=<pos:position pos:line="349" pos:column="12"/></operator> <call><name pos:line="349" pos:column="13">apr_bucket_eos_create<pos:position pos:line="349" pos:column="34"/></name><argument_list pos:line="349" pos:column="34">(<argument><expr><name><name pos:line="349" pos:column="35">f<pos:position pos:line="349" pos:column="36"/></name><operator pos:line="349" pos:column="36">-&gt;<pos:position pos:line="349" pos:column="41"/></operator><name pos:line="349" pos:column="38">c<pos:position pos:line="349" pos:column="39"/></name><operator pos:line="349" pos:column="39">-&gt;<pos:position pos:line="349" pos:column="44"/></operator><name pos:line="349" pos:column="41">bucket_alloc<pos:position pos:line="349" pos:column="53"/></name></name></expr></argument>)<pos:position pos:line="349" pos:column="54"/></argument_list></call></expr>;<pos:position pos:line="349" pos:column="55"/></expr_stmt>
        <expr_stmt><expr><call><name pos:line="350" pos:column="9">APR_BRIGADE_INSERT_TAIL<pos:position pos:line="350" pos:column="32"/></name><argument_list pos:line="350" pos:column="32">(<argument><expr><name pos:line="350" pos:column="33">b<pos:position pos:line="350" pos:column="34"/></name></expr></argument>, <argument><expr><name pos:line="350" pos:column="36">e<pos:position pos:line="350" pos:column="37"/></name></expr></argument>)<pos:position pos:line="350" pos:column="38"/></argument_list></call></expr>;<pos:position pos:line="350" pos:column="39"/></expr_stmt>
    }<pos:position pos:line="351" pos:column="6"/></block></then></if>

    <comment type="block" pos:line="353" pos:column="5">/* We have a limit in effect. */</comment>
    <if pos:line="354" pos:column="5">if <condition pos:line="354" pos:column="8">(<expr><name><name pos:line="354" pos:column="9">ctx<pos:position pos:line="354" pos:column="12"/></name><operator pos:line="354" pos:column="12">-&gt;<pos:position pos:line="354" pos:column="17"/></operator><name pos:line="354" pos:column="14">limit<pos:position pos:line="354" pos:column="19"/></name></name></expr>)<pos:position pos:line="354" pos:column="20"/></condition><then pos:line="354" pos:column="20"> <block pos:line="354" pos:column="21">{
        <comment type="block" pos:line="355" pos:column="9">/* FIXME: Note that we might get slightly confused on chunked inputs
         * as we'd need to compensate for the chunk lengths which may not
         * really count.  This seems to be up for interpretation.  */</comment>
        <expr_stmt><expr><name><name pos:line="358" pos:column="9">ctx<pos:position pos:line="358" pos:column="12"/></name><operator pos:line="358" pos:column="12">-&gt;<pos:position pos:line="358" pos:column="17"/></operator><name pos:line="358" pos:column="14">limit_used<pos:position pos:line="358" pos:column="24"/></name></name> <operator pos:line="358" pos:column="25">+=<pos:position pos:line="358" pos:column="27"/></operator> <name pos:line="358" pos:column="28">totalread<pos:position pos:line="358" pos:column="37"/></name></expr>;<pos:position pos:line="358" pos:column="38"/></expr_stmt>
        <if pos:line="359" pos:column="9">if <condition pos:line="359" pos:column="12">(<expr><name><name pos:line="359" pos:column="13">ctx<pos:position pos:line="359" pos:column="16"/></name><operator pos:line="359" pos:column="16">-&gt;<pos:position pos:line="359" pos:column="21"/></operator><name pos:line="359" pos:column="18">limit<pos:position pos:line="359" pos:column="23"/></name></name> <operator pos:line="359" pos:column="24">&lt;<pos:position pos:line="359" pos:column="28"/></operator> <name><name pos:line="359" pos:column="26">ctx<pos:position pos:line="359" pos:column="29"/></name><operator pos:line="359" pos:column="29">-&gt;<pos:position pos:line="359" pos:column="34"/></operator><name pos:line="359" pos:column="31">limit_used<pos:position pos:line="359" pos:column="41"/></name></name></expr>)<pos:position pos:line="359" pos:column="42"/></condition><then pos:line="359" pos:column="42"> <block pos:line="359" pos:column="43">{
            <expr_stmt><expr><call><name pos:line="360" pos:column="13">ap_log_rerror<pos:position pos:line="360" pos:column="26"/></name><argument_list pos:line="360" pos:column="26">(<argument><expr><name pos:line="360" pos:column="27">APLOG_MARK<pos:position pos:line="360" pos:column="37"/></name></expr></argument>, <argument><expr><name pos:line="360" pos:column="39">APLOG_ERR<pos:position pos:line="360" pos:column="48"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="360" pos:column="50">0<pos:position pos:line="360" pos:column="51"/></literal></expr></argument>, <argument><expr><name><name pos:line="360" pos:column="53">f<pos:position pos:line="360" pos:column="54"/></name><operator pos:line="360" pos:column="54">-&gt;<pos:position pos:line="360" pos:column="59"/></operator><name pos:line="360" pos:column="56">r<pos:position pos:line="360" pos:column="57"/></name></name></expr></argument>,
                          <argument><expr><literal type="string" pos:line="361" pos:column="27">"Read content-length of %"<pos:position pos:line="361" pos:column="53"/></literal> <name pos:line="361" pos:column="54">APR_OFF_T_FMT<pos:position pos:line="361" pos:column="67"/></name>
                          <literal type="string" pos:line="362" pos:column="27">" is larger than the configured limit"<pos:position pos:line="362" pos:column="65"/></literal>
                          <literal type="string" pos:line="363" pos:column="27">" of %"<pos:position pos:line="363" pos:column="34"/></literal> <name pos:line="363" pos:column="35">APR_OFF_T_FMT<pos:position pos:line="363" pos:column="48"/></name></expr></argument>, <argument><expr><name><name pos:line="363" pos:column="50">ctx<pos:position pos:line="363" pos:column="53"/></name><operator pos:line="363" pos:column="53">-&gt;<pos:position pos:line="363" pos:column="58"/></operator><name pos:line="363" pos:column="55">limit_used<pos:position pos:line="363" pos:column="65"/></name></name></expr></argument>, <argument><expr><name><name pos:line="363" pos:column="67">ctx<pos:position pos:line="363" pos:column="70"/></name><operator pos:line="363" pos:column="70">-&gt;<pos:position pos:line="363" pos:column="75"/></operator><name pos:line="363" pos:column="72">limit<pos:position pos:line="363" pos:column="77"/></name></name></expr></argument>)<pos:position pos:line="363" pos:column="78"/></argument_list></call></expr>;<pos:position pos:line="363" pos:column="79"/></expr_stmt>
            <expr_stmt><expr><call><name pos:line="364" pos:column="13">apr_brigade_cleanup<pos:position pos:line="364" pos:column="32"/></name><argument_list pos:line="364" pos:column="32">(<argument><expr><name pos:line="364" pos:column="33">bb<pos:position pos:line="364" pos:column="35"/></name></expr></argument>)<pos:position pos:line="364" pos:column="36"/></argument_list></call></expr>;<pos:position pos:line="364" pos:column="37"/></expr_stmt>
            <expr_stmt><expr><name pos:line="365" pos:column="13">e<pos:position pos:line="365" pos:column="14"/></name> <operator pos:line="365" pos:column="15">=<pos:position pos:line="365" pos:column="16"/></operator> <call><name pos:line="365" pos:column="17">ap_bucket_error_create<pos:position pos:line="365" pos:column="39"/></name><argument_list pos:line="365" pos:column="39">(<argument><expr><name pos:line="365" pos:column="40">HTTP_REQUEST_ENTITY_TOO_LARGE<pos:position pos:line="365" pos:column="69"/></name></expr></argument>, <argument><expr><name pos:line="365" pos:column="71">NULL<pos:position pos:line="365" pos:column="75"/></name></expr></argument>,
                                       <argument><expr><name><name pos:line="366" pos:column="40">f<pos:position pos:line="366" pos:column="41"/></name><operator pos:line="366" pos:column="41">-&gt;<pos:position pos:line="366" pos:column="46"/></operator><name pos:line="366" pos:column="43">r<pos:position pos:line="366" pos:column="44"/></name><operator pos:line="366" pos:column="44">-&gt;<pos:position pos:line="366" pos:column="49"/></operator><name pos:line="366" pos:column="46">pool<pos:position pos:line="366" pos:column="50"/></name></name></expr></argument>,
                                       <argument><expr><name><name pos:line="367" pos:column="40">f<pos:position pos:line="367" pos:column="41"/></name><operator pos:line="367" pos:column="41">-&gt;<pos:position pos:line="367" pos:column="46"/></operator><name pos:line="367" pos:column="43">c<pos:position pos:line="367" pos:column="44"/></name><operator pos:line="367" pos:column="44">-&gt;<pos:position pos:line="367" pos:column="49"/></operator><name pos:line="367" pos:column="46">bucket_alloc<pos:position pos:line="367" pos:column="58"/></name></name></expr></argument>)<pos:position pos:line="367" pos:column="59"/></argument_list></call></expr>;<pos:position pos:line="367" pos:column="60"/></expr_stmt>
            <expr_stmt><expr><call><name pos:line="368" pos:column="13">APR_BRIGADE_INSERT_TAIL<pos:position pos:line="368" pos:column="36"/></name><argument_list pos:line="368" pos:column="36">(<argument><expr><name pos:line="368" pos:column="37">bb<pos:position pos:line="368" pos:column="39"/></name></expr></argument>, <argument><expr><name pos:line="368" pos:column="41">e<pos:position pos:line="368" pos:column="42"/></name></expr></argument>)<pos:position pos:line="368" pos:column="43"/></argument_list></call></expr>;<pos:position pos:line="368" pos:column="44"/></expr_stmt>
            <expr_stmt><expr><name pos:line="369" pos:column="13">e<pos:position pos:line="369" pos:column="14"/></name> <operator pos:line="369" pos:column="15">=<pos:position pos:line="369" pos:column="16"/></operator> <call><name pos:line="369" pos:column="17">apr_bucket_eos_create<pos:position pos:line="369" pos:column="38"/></name><argument_list pos:line="369" pos:column="38">(<argument><expr><name><name pos:line="369" pos:column="39">f<pos:position pos:line="369" pos:column="40"/></name><operator pos:line="369" pos:column="40">-&gt;<pos:position pos:line="369" pos:column="45"/></operator><name pos:line="369" pos:column="42">c<pos:position pos:line="369" pos:column="43"/></name><operator pos:line="369" pos:column="43">-&gt;<pos:position pos:line="369" pos:column="48"/></operator><name pos:line="369" pos:column="45">bucket_alloc<pos:position pos:line="369" pos:column="57"/></name></name></expr></argument>)<pos:position pos:line="369" pos:column="58"/></argument_list></call></expr>;<pos:position pos:line="369" pos:column="59"/></expr_stmt>
            <expr_stmt><expr><call><name pos:line="370" pos:column="13">APR_BRIGADE_INSERT_TAIL<pos:position pos:line="370" pos:column="36"/></name><argument_list pos:line="370" pos:column="36">(<argument><expr><name pos:line="370" pos:column="37">bb<pos:position pos:line="370" pos:column="39"/></name></expr></argument>, <argument><expr><name pos:line="370" pos:column="41">e<pos:position pos:line="370" pos:column="42"/></name></expr></argument>)<pos:position pos:line="370" pos:column="43"/></argument_list></call></expr>;<pos:position pos:line="370" pos:column="44"/></expr_stmt>
            <expr_stmt><expr><name><name pos:line="371" pos:column="13">ctx<pos:position pos:line="371" pos:column="16"/></name><operator pos:line="371" pos:column="16">-&gt;<pos:position pos:line="371" pos:column="21"/></operator><name pos:line="371" pos:column="18">eos_sent<pos:position pos:line="371" pos:column="26"/></name></name> <operator pos:line="371" pos:column="27">=<pos:position pos:line="371" pos:column="28"/></operator> <literal type="number" pos:line="371" pos:column="29">1<pos:position pos:line="371" pos:column="30"/></literal></expr>;<pos:position pos:line="371" pos:column="31"/></expr_stmt>
            <return pos:line="372" pos:column="13">return <expr><call><name pos:line="372" pos:column="20">ap_pass_brigade<pos:position pos:line="372" pos:column="35"/></name><argument_list pos:line="372" pos:column="35">(<argument><expr><name><name pos:line="372" pos:column="36">f<pos:position pos:line="372" pos:column="37"/></name><operator pos:line="372" pos:column="37">-&gt;<pos:position pos:line="372" pos:column="42"/></operator><name pos:line="372" pos:column="39">r<pos:position pos:line="372" pos:column="40"/></name><operator pos:line="372" pos:column="40">-&gt;<pos:position pos:line="372" pos:column="45"/></operator><name pos:line="372" pos:column="42">output_filters<pos:position pos:line="372" pos:column="56"/></name></name></expr></argument>, <argument><expr><name pos:line="372" pos:column="58">bb<pos:position pos:line="372" pos:column="60"/></name></expr></argument>)<pos:position pos:line="372" pos:column="61"/></argument_list></call></expr>;<pos:position pos:line="372" pos:column="62"/></return>
        }<pos:position pos:line="373" pos:column="10"/></block></then></if>
    }<pos:position pos:line="374" pos:column="6"/></block></then></if>

    <return pos:line="376" pos:column="5">return <expr><name pos:line="376" pos:column="12">APR_SUCCESS<pos:position pos:line="376" pos:column="23"/></name></expr>;<pos:position pos:line="376" pos:column="24"/></return>
}<pos:position pos:line="377" pos:column="2"/></block></function></unit>

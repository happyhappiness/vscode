<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/httpd/gumtree/httpd_repos_function_2402_httpd-2.2.14.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">void<pos:position pos:line="1" pos:column="5"/></name></type> <name pos:line="1" pos:column="6">netware_rewrite_args<pos:position pos:line="1" pos:column="26"/></name><parameter_list pos:line="1" pos:column="26">(<parameter><decl><type><name pos:line="1" pos:column="27">process_rec<pos:position pos:line="1" pos:column="38"/></name> <modifier pos:line="1" pos:column="39">*<pos:position pos:line="1" pos:column="40"/></modifier></type><name pos:line="1" pos:column="40">process<pos:position pos:line="1" pos:column="47"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="48"/></parameter_list>
<block pos:line="2" pos:column="1">{
    <decl_stmt><decl><type><name pos:line="3" pos:column="5">char<pos:position pos:line="3" pos:column="9"/></name> <modifier pos:line="3" pos:column="10">*<pos:position pos:line="3" pos:column="11"/></modifier></type><name pos:line="3" pos:column="11">def_server_root<pos:position pos:line="3" pos:column="26"/></name></decl>;<pos:position pos:line="3" pos:column="27"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="4" pos:column="5">char<pos:position pos:line="4" pos:column="9"/></name></type> <name><name pos:line="4" pos:column="10">optbuf<pos:position pos:line="4" pos:column="16"/></name><index pos:line="4" pos:column="16">[<expr><literal type="number" pos:line="4" pos:column="17">3<pos:position pos:line="4" pos:column="18"/></literal></expr>]<pos:position pos:line="4" pos:column="19"/></index></name></decl>;<pos:position pos:line="4" pos:column="20"/></decl_stmt>
    <decl_stmt><decl><type><specifier pos:line="5" pos:column="5">const<pos:position pos:line="5" pos:column="10"/></specifier> <name pos:line="5" pos:column="11">char<pos:position pos:line="5" pos:column="15"/></name> <modifier pos:line="5" pos:column="16">*<pos:position pos:line="5" pos:column="17"/></modifier></type><name pos:line="5" pos:column="17">opt_arg<pos:position pos:line="5" pos:column="24"/></name></decl>;<pos:position pos:line="5" pos:column="25"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="6" pos:column="5">apr_getopt_t<pos:position pos:line="6" pos:column="17"/></name> <modifier pos:line="6" pos:column="18">*<pos:position pos:line="6" pos:column="19"/></modifier></type><name pos:line="6" pos:column="19">opt<pos:position pos:line="6" pos:column="22"/></name></decl>;<pos:position pos:line="6" pos:column="23"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="7" pos:column="5">apr_array_header_t<pos:position pos:line="7" pos:column="23"/></name> <modifier pos:line="7" pos:column="24">*<pos:position pos:line="7" pos:column="25"/></modifier></type><name pos:line="7" pos:column="25">mpm_new_argv<pos:position pos:line="7" pos:column="37"/></name></decl>;<pos:position pos:line="7" pos:column="38"/></decl_stmt>


    <expr_stmt><expr><call><name pos:line="10" pos:column="5">atexit<pos:position pos:line="10" pos:column="11"/></name> <argument_list pos:line="10" pos:column="12">(<argument><expr><name pos:line="10" pos:column="13">mpm_term<pos:position pos:line="10" pos:column="21"/></name></expr></argument>)<pos:position pos:line="10" pos:column="22"/></argument_list></call></expr>;<pos:position pos:line="10" pos:column="23"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="11" pos:column="5">InstallConsoleHandler<pos:position pos:line="11" pos:column="26"/></name><argument_list pos:line="11" pos:column="26">()<pos:position pos:line="11" pos:column="28"/></argument_list></call></expr>;<pos:position pos:line="11" pos:column="29"/></expr_stmt>

    <comment type="block" pos:line="13" pos:column="5">/* Make sure to hold the Apache screen open if exit() is called */</comment>
    <expr_stmt><expr><name pos:line="14" pos:column="5">hold_screen_on_exit<pos:position pos:line="14" pos:column="24"/></name> <operator pos:line="14" pos:column="25">=<pos:position pos:line="14" pos:column="26"/></operator> <literal type="number" pos:line="14" pos:column="27">1<pos:position pos:line="14" pos:column="28"/></literal></expr>;<pos:position pos:line="14" pos:column="29"/></expr_stmt>

    <comment type="block" pos:line="16" pos:column="5">/* Rewrite process-&gt;argv[];
     *
     * add default -d serverroot from the path of this executable
     *
     * The end result will look like:
     *     The -d serverroot default from the running executable
     */</comment>
    <if pos:line="23" pos:column="5">if <condition pos:line="23" pos:column="8">(<expr><name><name pos:line="23" pos:column="9">process<pos:position pos:line="23" pos:column="16"/></name><operator pos:line="23" pos:column="16">-&gt;<pos:position pos:line="23" pos:column="21"/></operator><name pos:line="23" pos:column="18">argc<pos:position pos:line="23" pos:column="22"/></name></name> <operator pos:line="23" pos:column="23">&gt;<pos:position pos:line="23" pos:column="27"/></operator> <literal type="number" pos:line="23" pos:column="25">0<pos:position pos:line="23" pos:column="26"/></literal></expr>)<pos:position pos:line="23" pos:column="27"/></condition><then pos:line="23" pos:column="27"> <block pos:line="23" pos:column="28">{
        <decl_stmt><decl><type><name pos:line="24" pos:column="9">char<pos:position pos:line="24" pos:column="13"/></name> <modifier pos:line="24" pos:column="14">*<pos:position pos:line="24" pos:column="15"/></modifier></type><name pos:line="24" pos:column="15">s<pos:position pos:line="24" pos:column="16"/></name> <init pos:line="24" pos:column="17">= <expr><call><name pos:line="24" pos:column="19">apr_pstrdup<pos:position pos:line="24" pos:column="30"/></name> <argument_list pos:line="24" pos:column="31">(<argument><expr><name><name pos:line="24" pos:column="32">process<pos:position pos:line="24" pos:column="39"/></name><operator pos:line="24" pos:column="39">-&gt;<pos:position pos:line="24" pos:column="44"/></operator><name pos:line="24" pos:column="41">pconf<pos:position pos:line="24" pos:column="46"/></name></name></expr></argument>, <argument><expr><name><name pos:line="24" pos:column="48">process<pos:position pos:line="24" pos:column="55"/></name><operator pos:line="24" pos:column="55">-&gt;<pos:position pos:line="24" pos:column="60"/></operator><name pos:line="24" pos:column="57">argv<pos:position pos:line="24" pos:column="61"/></name><index pos:line="24" pos:column="61">[<expr><literal type="number" pos:line="24" pos:column="62">0<pos:position pos:line="24" pos:column="63"/></literal></expr>]<pos:position pos:line="24" pos:column="64"/></index></name></expr></argument>)<pos:position pos:line="24" pos:column="65"/></argument_list></call></expr></init></decl>;<pos:position pos:line="24" pos:column="66"/></decl_stmt>
        <if pos:line="25" pos:column="9">if <condition pos:line="25" pos:column="12">(<expr><name pos:line="25" pos:column="13">s<pos:position pos:line="25" pos:column="14"/></name></expr>)<pos:position pos:line="25" pos:column="15"/></condition><then pos:line="25" pos:column="15"> <block pos:line="25" pos:column="16">{
            <decl_stmt><decl><type><name pos:line="26" pos:column="13">int<pos:position pos:line="26" pos:column="16"/></name></type> <name pos:line="26" pos:column="17">i<pos:position pos:line="26" pos:column="18"/></name></decl>, <decl><type ref="prev"/><name pos:line="26" pos:column="20">len<pos:position pos:line="26" pos:column="23"/></name> <init pos:line="26" pos:column="24">= <expr><call><name pos:line="26" pos:column="26">strlen<pos:position pos:line="26" pos:column="32"/></name><argument_list pos:line="26" pos:column="32">(<argument><expr><name pos:line="26" pos:column="33">s<pos:position pos:line="26" pos:column="34"/></name></expr></argument>)<pos:position pos:line="26" pos:column="35"/></argument_list></call></expr></init></decl>;<pos:position pos:line="26" pos:column="36"/></decl_stmt>

            <for pos:line="28" pos:column="13">for <control pos:line="28" pos:column="17">(<init><expr><name pos:line="28" pos:column="18">i<pos:position pos:line="28" pos:column="19"/></name><operator pos:line="28" pos:column="19">=<pos:position pos:line="28" pos:column="20"/></operator><name pos:line="28" pos:column="20">len<pos:position pos:line="28" pos:column="23"/></name></expr>;<pos:position pos:line="28" pos:column="24"/></init> <condition><expr><name pos:line="28" pos:column="25">i<pos:position pos:line="28" pos:column="26"/></name></expr>;<pos:position pos:line="28" pos:column="27"/></condition> <incr><expr><name pos:line="28" pos:column="28">i<pos:position pos:line="28" pos:column="29"/></name><operator pos:line="28" pos:column="29">--<pos:position pos:line="28" pos:column="31"/></operator></expr></incr>)<pos:position pos:line="28" pos:column="32"/></control> <block pos:line="28" pos:column="33">{
                <if pos:line="29" pos:column="17">if <condition pos:line="29" pos:column="20">(<expr><name><name pos:line="29" pos:column="21">s<pos:position pos:line="29" pos:column="22"/></name><index pos:line="29" pos:column="22">[<expr><name pos:line="29" pos:column="23">i<pos:position pos:line="29" pos:column="24"/></name></expr>]<pos:position pos:line="29" pos:column="25"/></index></name> <operator pos:line="29" pos:column="26">==<pos:position pos:line="29" pos:column="28"/></operator> <literal type="char" pos:line="29" pos:column="29">'\\'<pos:position pos:line="29" pos:column="33"/></literal> <operator pos:line="29" pos:column="34">||<pos:position pos:line="29" pos:column="36"/></operator> <name><name pos:line="29" pos:column="37">s<pos:position pos:line="29" pos:column="38"/></name><index pos:line="29" pos:column="38">[<expr><name pos:line="29" pos:column="39">i<pos:position pos:line="29" pos:column="40"/></name></expr>]<pos:position pos:line="29" pos:column="41"/></index></name> <operator pos:line="29" pos:column="42">==<pos:position pos:line="29" pos:column="44"/></operator> <literal type="char" pos:line="29" pos:column="45">'/'<pos:position pos:line="29" pos:column="48"/></literal></expr>)<pos:position pos:line="29" pos:column="49"/></condition><then pos:line="29" pos:column="49"> <block pos:line="29" pos:column="50">{
                    <expr_stmt><expr><name><name pos:line="30" pos:column="21">s<pos:position pos:line="30" pos:column="22"/></name><index pos:line="30" pos:column="22">[<expr><name pos:line="30" pos:column="23">i<pos:position pos:line="30" pos:column="24"/></name></expr>]<pos:position pos:line="30" pos:column="25"/></index></name> <operator pos:line="30" pos:column="26">=<pos:position pos:line="30" pos:column="27"/></operator> <literal type="char" pos:line="30" pos:column="28">'\0'<pos:position pos:line="30" pos:column="32"/></literal></expr>;<pos:position pos:line="30" pos:column="33"/></expr_stmt>
                    <expr_stmt><expr><call><name pos:line="31" pos:column="21">apr_filepath_merge<pos:position pos:line="31" pos:column="39"/></name><argument_list pos:line="31" pos:column="39">(<argument><expr><operator pos:line="31" pos:column="40">&amp;<pos:position pos:line="31" pos:column="45"/></operator><name pos:line="31" pos:column="41">def_server_root<pos:position pos:line="31" pos:column="56"/></name></expr></argument>, <argument><expr><name pos:line="31" pos:column="58">NULL<pos:position pos:line="31" pos:column="62"/></name></expr></argument>, <argument><expr><name pos:line="31" pos:column="64">s<pos:position pos:line="31" pos:column="65"/></name></expr></argument>,
                        <argument><expr><name pos:line="32" pos:column="25">APR_FILEPATH_TRUENAME<pos:position pos:line="32" pos:column="46"/></name></expr></argument>, <argument><expr><name><name pos:line="32" pos:column="48">process<pos:position pos:line="32" pos:column="55"/></name><operator pos:line="32" pos:column="55">-&gt;<pos:position pos:line="32" pos:column="60"/></operator><name pos:line="32" pos:column="57">pool<pos:position pos:line="32" pos:column="61"/></name></name></expr></argument>)<pos:position pos:line="32" pos:column="62"/></argument_list></call></expr>;<pos:position pos:line="32" pos:column="63"/></expr_stmt>
                    <break pos:line="33" pos:column="21">break;<pos:position pos:line="33" pos:column="27"/></break>
                }<pos:position pos:line="34" pos:column="18"/></block></then></if>
            }<pos:position pos:line="35" pos:column="14"/></block></for>
            <comment type="block" pos:line="36" pos:column="13">/* Use process-&gt;pool so that the rewritten argv
            * lasts for the lifetime of the server process,
            * because pconf will be destroyed after the
            * initial pre-flight of the config parser.
            */</comment>
            <expr_stmt><expr><name pos:line="41" pos:column="13">mpm_new_argv<pos:position pos:line="41" pos:column="25"/></name> <operator pos:line="41" pos:column="26">=<pos:position pos:line="41" pos:column="27"/></operator> <call><name pos:line="41" pos:column="28">apr_array_make<pos:position pos:line="41" pos:column="42"/></name><argument_list pos:line="41" pos:column="42">(<argument><expr><name><name pos:line="41" pos:column="43">process<pos:position pos:line="41" pos:column="50"/></name><operator pos:line="41" pos:column="50">-&gt;<pos:position pos:line="41" pos:column="55"/></operator><name pos:line="41" pos:column="52">pool<pos:position pos:line="41" pos:column="56"/></name></name></expr></argument>, <argument><expr><name><name pos:line="41" pos:column="58">process<pos:position pos:line="41" pos:column="65"/></name><operator pos:line="41" pos:column="65">-&gt;<pos:position pos:line="41" pos:column="70"/></operator><name pos:line="41" pos:column="67">argc<pos:position pos:line="41" pos:column="71"/></name></name> <operator pos:line="41" pos:column="72">+<pos:position pos:line="41" pos:column="73"/></operator> <literal type="number" pos:line="41" pos:column="74">2<pos:position pos:line="41" pos:column="75"/></literal></expr></argument>,
                                  <argument><expr><sizeof pos:line="42" pos:column="35">sizeof<argument_list pos:line="42" pos:column="41">(<argument><expr><specifier pos:line="42" pos:column="42">const<pos:position pos:line="42" pos:column="47"/></specifier> <name pos:line="42" pos:column="48">char<pos:position pos:line="42" pos:column="52"/></name> <operator pos:line="42" pos:column="53">*<pos:position pos:line="42" pos:column="54"/></operator></expr></argument>)<pos:position pos:line="42" pos:column="55"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="42" pos:column="56"/></argument_list></call></expr>;<pos:position pos:line="42" pos:column="57"/></expr_stmt>
            <expr_stmt><expr><operator pos:line="43" pos:column="13">*<pos:position pos:line="43" pos:column="14"/></operator><operator pos:line="43" pos:column="14">(<pos:position pos:line="43" pos:column="15"/></operator><specifier pos:line="43" pos:column="15">const<pos:position pos:line="43" pos:column="20"/></specifier> <name pos:line="43" pos:column="21">char<pos:position pos:line="43" pos:column="25"/></name> <operator pos:line="43" pos:column="26">*<pos:position pos:line="43" pos:column="27"/></operator><operator pos:line="43" pos:column="27">*<pos:position pos:line="43" pos:column="28"/></operator><operator pos:line="43" pos:column="28">)<pos:position pos:line="43" pos:column="29"/></operator><call><name pos:line="43" pos:column="29">apr_array_push<pos:position pos:line="43" pos:column="43"/></name><argument_list pos:line="43" pos:column="43">(<argument><expr><name pos:line="43" pos:column="44">mpm_new_argv<pos:position pos:line="43" pos:column="56"/></name></expr></argument>)<pos:position pos:line="43" pos:column="57"/></argument_list></call> <operator pos:line="43" pos:column="58">=<pos:position pos:line="43" pos:column="59"/></operator> <name><name pos:line="43" pos:column="60">process<pos:position pos:line="43" pos:column="67"/></name><operator pos:line="43" pos:column="67">-&gt;<pos:position pos:line="43" pos:column="72"/></operator><name pos:line="43" pos:column="69">argv<pos:position pos:line="43" pos:column="73"/></name><index pos:line="43" pos:column="73">[<expr><literal type="number" pos:line="43" pos:column="74">0<pos:position pos:line="43" pos:column="75"/></literal></expr>]<pos:position pos:line="43" pos:column="76"/></index></name></expr>;<pos:position pos:line="43" pos:column="77"/></expr_stmt>
            <expr_stmt><expr><operator pos:line="44" pos:column="13">*<pos:position pos:line="44" pos:column="14"/></operator><operator pos:line="44" pos:column="14">(<pos:position pos:line="44" pos:column="15"/></operator><specifier pos:line="44" pos:column="15">const<pos:position pos:line="44" pos:column="20"/></specifier> <name pos:line="44" pos:column="21">char<pos:position pos:line="44" pos:column="25"/></name> <operator pos:line="44" pos:column="26">*<pos:position pos:line="44" pos:column="27"/></operator><operator pos:line="44" pos:column="27">*<pos:position pos:line="44" pos:column="28"/></operator><operator pos:line="44" pos:column="28">)<pos:position pos:line="44" pos:column="29"/></operator><call><name pos:line="44" pos:column="29">apr_array_push<pos:position pos:line="44" pos:column="43"/></name><argument_list pos:line="44" pos:column="43">(<argument><expr><name pos:line="44" pos:column="44">mpm_new_argv<pos:position pos:line="44" pos:column="56"/></name></expr></argument>)<pos:position pos:line="44" pos:column="57"/></argument_list></call> <operator pos:line="44" pos:column="58">=<pos:position pos:line="44" pos:column="59"/></operator> <literal type="string" pos:line="44" pos:column="60">"-d"<pos:position pos:line="44" pos:column="64"/></literal></expr>;<pos:position pos:line="44" pos:column="65"/></expr_stmt>
            <expr_stmt><expr><operator pos:line="45" pos:column="13">*<pos:position pos:line="45" pos:column="14"/></operator><operator pos:line="45" pos:column="14">(<pos:position pos:line="45" pos:column="15"/></operator><specifier pos:line="45" pos:column="15">const<pos:position pos:line="45" pos:column="20"/></specifier> <name pos:line="45" pos:column="21">char<pos:position pos:line="45" pos:column="25"/></name> <operator pos:line="45" pos:column="26">*<pos:position pos:line="45" pos:column="27"/></operator><operator pos:line="45" pos:column="27">*<pos:position pos:line="45" pos:column="28"/></operator><operator pos:line="45" pos:column="28">)<pos:position pos:line="45" pos:column="29"/></operator><call><name pos:line="45" pos:column="29">apr_array_push<pos:position pos:line="45" pos:column="43"/></name><argument_list pos:line="45" pos:column="43">(<argument><expr><name pos:line="45" pos:column="44">mpm_new_argv<pos:position pos:line="45" pos:column="56"/></name></expr></argument>)<pos:position pos:line="45" pos:column="57"/></argument_list></call> <operator pos:line="45" pos:column="58">=<pos:position pos:line="45" pos:column="59"/></operator> <name pos:line="45" pos:column="60">def_server_root<pos:position pos:line="45" pos:column="75"/></name></expr>;<pos:position pos:line="45" pos:column="76"/></expr_stmt>

            <expr_stmt><expr><name><name pos:line="47" pos:column="13">optbuf<pos:position pos:line="47" pos:column="19"/></name><index pos:line="47" pos:column="19">[<expr><literal type="number" pos:line="47" pos:column="20">0<pos:position pos:line="47" pos:column="21"/></literal></expr>]<pos:position pos:line="47" pos:column="22"/></index></name> <operator pos:line="47" pos:column="23">=<pos:position pos:line="47" pos:column="24"/></operator> <literal type="char" pos:line="47" pos:column="25">'-'<pos:position pos:line="47" pos:column="28"/></literal></expr>;<pos:position pos:line="47" pos:column="29"/></expr_stmt>
            <expr_stmt><expr><name><name pos:line="48" pos:column="13">optbuf<pos:position pos:line="48" pos:column="19"/></name><index pos:line="48" pos:column="19">[<expr><literal type="number" pos:line="48" pos:column="20">2<pos:position pos:line="48" pos:column="21"/></literal></expr>]<pos:position pos:line="48" pos:column="22"/></index></name> <operator pos:line="48" pos:column="23">=<pos:position pos:line="48" pos:column="24"/></operator> <literal type="char" pos:line="48" pos:column="25">'\0'<pos:position pos:line="48" pos:column="29"/></literal></expr>;<pos:position pos:line="48" pos:column="30"/></expr_stmt>
            <expr_stmt><expr><call><name pos:line="49" pos:column="13">apr_getopt_init<pos:position pos:line="49" pos:column="28"/></name><argument_list pos:line="49" pos:column="28">(<argument><expr><operator pos:line="49" pos:column="29">&amp;<pos:position pos:line="49" pos:column="34"/></operator><name pos:line="49" pos:column="30">opt<pos:position pos:line="49" pos:column="33"/></name></expr></argument>, <argument><expr><name><name pos:line="49" pos:column="35">process<pos:position pos:line="49" pos:column="42"/></name><operator pos:line="49" pos:column="42">-&gt;<pos:position pos:line="49" pos:column="47"/></operator><name pos:line="49" pos:column="44">pool<pos:position pos:line="49" pos:column="48"/></name></name></expr></argument>, <argument><expr><name><name pos:line="49" pos:column="50">process<pos:position pos:line="49" pos:column="57"/></name><operator pos:line="49" pos:column="57">-&gt;<pos:position pos:line="49" pos:column="62"/></operator><name pos:line="49" pos:column="59">argc<pos:position pos:line="49" pos:column="63"/></name></name></expr></argument>, <argument><expr><operator pos:line="49" pos:column="65">(<pos:position pos:line="49" pos:column="66"/></operator><name pos:line="49" pos:column="66">char<pos:position pos:line="49" pos:column="70"/></name><operator pos:line="49" pos:column="70">*<pos:position pos:line="49" pos:column="71"/></operator><operator pos:line="49" pos:column="71">*<pos:position pos:line="49" pos:column="72"/></operator><operator pos:line="49" pos:column="72">)<pos:position pos:line="49" pos:column="73"/></operator> <name><name pos:line="49" pos:column="74">process<pos:position pos:line="49" pos:column="81"/></name><operator pos:line="49" pos:column="81">-&gt;<pos:position pos:line="49" pos:column="86"/></operator><name pos:line="49" pos:column="83">argv<pos:position pos:line="49" pos:column="87"/></name></name></expr></argument>)<pos:position pos:line="49" pos:column="88"/></argument_list></call></expr>;<pos:position pos:line="49" pos:column="89"/></expr_stmt>
            <while pos:line="50" pos:column="13">while <condition pos:line="50" pos:column="19">(<expr><call><name pos:line="50" pos:column="20">apr_getopt<pos:position pos:line="50" pos:column="30"/></name><argument_list pos:line="50" pos:column="30">(<argument><expr><name pos:line="50" pos:column="31">opt<pos:position pos:line="50" pos:column="34"/></name></expr></argument>, <argument><expr><name pos:line="50" pos:column="36">AP_SERVER_BASEARGS<pos:position pos:line="50" pos:column="54"/></name><literal type="string" pos:line="50" pos:column="54">"n:"<pos:position pos:line="50" pos:column="58"/></literal></expr></argument>, <argument><expr><name pos:line="50" pos:column="60">optbuf<pos:position pos:line="50" pos:column="66"/></name> <operator pos:line="50" pos:column="67">+<pos:position pos:line="50" pos:column="68"/></operator> <literal type="number" pos:line="50" pos:column="69">1<pos:position pos:line="50" pos:column="70"/></literal></expr></argument>, <argument><expr><operator pos:line="50" pos:column="72">&amp;<pos:position pos:line="50" pos:column="77"/></operator><name pos:line="50" pos:column="73">opt_arg<pos:position pos:line="50" pos:column="80"/></name></expr></argument>)<pos:position pos:line="50" pos:column="81"/></argument_list></call> <operator pos:line="50" pos:column="82">==<pos:position pos:line="50" pos:column="84"/></operator> <name pos:line="50" pos:column="85">APR_SUCCESS<pos:position pos:line="50" pos:column="96"/></name></expr>)<pos:position pos:line="50" pos:column="97"/></condition> <block pos:line="50" pos:column="98">{
                <switch pos:line="51" pos:column="17">switch <condition pos:line="51" pos:column="24">(<expr><name><name pos:line="51" pos:column="25">optbuf<pos:position pos:line="51" pos:column="31"/></name><index pos:line="51" pos:column="31">[<expr><literal type="number" pos:line="51" pos:column="32">1<pos:position pos:line="51" pos:column="33"/></literal></expr>]<pos:position pos:line="51" pos:column="34"/></index></name></expr>)<pos:position pos:line="51" pos:column="35"/></condition> <block pos:line="51" pos:column="36">{
                <case pos:line="52" pos:column="17">case <expr><literal type="char" pos:line="52" pos:column="22">'n'<pos:position pos:line="52" pos:column="25"/></literal></expr>:<pos:position pos:line="52" pos:column="26"/></case>
                    <if pos:line="53" pos:column="21">if <condition pos:line="53" pos:column="24">(<expr><name pos:line="53" pos:column="25">opt_arg<pos:position pos:line="53" pos:column="32"/></name></expr>)<pos:position pos:line="53" pos:column="33"/></condition><then pos:line="53" pos:column="33"> <block pos:line="53" pos:column="34">{
                        <expr_stmt><expr><call><name pos:line="54" pos:column="25">renamescreen<pos:position pos:line="54" pos:column="37"/></name><argument_list pos:line="54" pos:column="37">(<argument><expr><name pos:line="54" pos:column="38">opt_arg<pos:position pos:line="54" pos:column="45"/></name></expr></argument>)<pos:position pos:line="54" pos:column="46"/></argument_list></call></expr>;<pos:position pos:line="54" pos:column="47"/></expr_stmt>
                    }<pos:position pos:line="55" pos:column="22"/></block></then></if>
                    <break pos:line="56" pos:column="21">break;<pos:position pos:line="56" pos:column="27"/></break>
                <case pos:line="57" pos:column="17">case <expr><literal type="char" pos:line="57" pos:column="22">'E'<pos:position pos:line="57" pos:column="25"/></literal></expr>:<pos:position pos:line="57" pos:column="26"/></case>
                    <comment type="block" pos:line="58" pos:column="21">/* Don't need to hold the screen open if the output is going to a file */</comment>
                    <expr_stmt><expr><name pos:line="59" pos:column="21">hold_screen_on_exit<pos:position pos:line="59" pos:column="40"/></name> <operator pos:line="59" pos:column="41">=<pos:position pos:line="59" pos:column="42"/></operator> <operator pos:line="59" pos:column="43">-<pos:position pos:line="59" pos:column="44"/></operator><literal type="number" pos:line="59" pos:column="44">1<pos:position pos:line="59" pos:column="45"/></literal></expr>;<pos:position pos:line="59" pos:column="46"/></expr_stmt>
                <default pos:line="60" pos:column="17">default:<pos:position pos:line="60" pos:column="25"/></default>
                    <expr_stmt><expr><operator pos:line="61" pos:column="21">*<pos:position pos:line="61" pos:column="22"/></operator><operator pos:line="61" pos:column="22">(<pos:position pos:line="61" pos:column="23"/></operator><specifier pos:line="61" pos:column="23">const<pos:position pos:line="61" pos:column="28"/></specifier> <name pos:line="61" pos:column="29">char<pos:position pos:line="61" pos:column="33"/></name> <operator pos:line="61" pos:column="34">*<pos:position pos:line="61" pos:column="35"/></operator><operator pos:line="61" pos:column="35">*<pos:position pos:line="61" pos:column="36"/></operator><operator pos:line="61" pos:column="36">)<pos:position pos:line="61" pos:column="37"/></operator><call><name pos:line="61" pos:column="37">apr_array_push<pos:position pos:line="61" pos:column="51"/></name><argument_list pos:line="61" pos:column="51">(<argument><expr><name pos:line="61" pos:column="52">mpm_new_argv<pos:position pos:line="61" pos:column="64"/></name></expr></argument>)<pos:position pos:line="61" pos:column="65"/></argument_list></call> <operator pos:line="61" pos:column="66">=<pos:position pos:line="61" pos:column="67"/></operator>
                        <call><name pos:line="62" pos:column="25">apr_pstrdup<pos:position pos:line="62" pos:column="36"/></name><argument_list pos:line="62" pos:column="36">(<argument><expr><name><name pos:line="62" pos:column="37">process<pos:position pos:line="62" pos:column="44"/></name><operator pos:line="62" pos:column="44">-&gt;<pos:position pos:line="62" pos:column="49"/></operator><name pos:line="62" pos:column="46">pool<pos:position pos:line="62" pos:column="50"/></name></name></expr></argument>, <argument><expr><name pos:line="62" pos:column="52">optbuf<pos:position pos:line="62" pos:column="58"/></name></expr></argument>)<pos:position pos:line="62" pos:column="59"/></argument_list></call></expr>;<pos:position pos:line="62" pos:column="60"/></expr_stmt>

                    <if pos:line="64" pos:column="21">if <condition pos:line="64" pos:column="24">(<expr><name pos:line="64" pos:column="25">opt_arg<pos:position pos:line="64" pos:column="32"/></name></expr>)<pos:position pos:line="64" pos:column="33"/></condition><then pos:line="64" pos:column="33"> <block pos:line="64" pos:column="34">{
                        <expr_stmt><expr><operator pos:line="65" pos:column="25">*<pos:position pos:line="65" pos:column="26"/></operator><operator pos:line="65" pos:column="26">(<pos:position pos:line="65" pos:column="27"/></operator><specifier pos:line="65" pos:column="27">const<pos:position pos:line="65" pos:column="32"/></specifier> <name pos:line="65" pos:column="33">char<pos:position pos:line="65" pos:column="37"/></name> <operator pos:line="65" pos:column="38">*<pos:position pos:line="65" pos:column="39"/></operator><operator pos:line="65" pos:column="39">*<pos:position pos:line="65" pos:column="40"/></operator><operator pos:line="65" pos:column="40">)<pos:position pos:line="65" pos:column="41"/></operator><call><name pos:line="65" pos:column="41">apr_array_push<pos:position pos:line="65" pos:column="55"/></name><argument_list pos:line="65" pos:column="55">(<argument><expr><name pos:line="65" pos:column="56">mpm_new_argv<pos:position pos:line="65" pos:column="68"/></name></expr></argument>)<pos:position pos:line="65" pos:column="69"/></argument_list></call> <operator pos:line="65" pos:column="70">=<pos:position pos:line="65" pos:column="71"/></operator> <name pos:line="65" pos:column="72">opt_arg<pos:position pos:line="65" pos:column="79"/></name></expr>;<pos:position pos:line="65" pos:column="80"/></expr_stmt>
                    }<pos:position pos:line="66" pos:column="22"/></block></then></if>
                    <break pos:line="67" pos:column="21">break;<pos:position pos:line="67" pos:column="27"/></break>
                }<pos:position pos:line="68" pos:column="18"/></block></switch>
            }<pos:position pos:line="69" pos:column="14"/></block></while>
            <expr_stmt><expr><name><name pos:line="70" pos:column="13">process<pos:position pos:line="70" pos:column="20"/></name><operator pos:line="70" pos:column="20">-&gt;<pos:position pos:line="70" pos:column="25"/></operator><name pos:line="70" pos:column="22">argc<pos:position pos:line="70" pos:column="26"/></name></name> <operator pos:line="70" pos:column="27">=<pos:position pos:line="70" pos:column="28"/></operator> <name><name pos:line="70" pos:column="29">mpm_new_argv<pos:position pos:line="70" pos:column="41"/></name><operator pos:line="70" pos:column="41">-&gt;<pos:position pos:line="70" pos:column="46"/></operator><name pos:line="70" pos:column="43">nelts<pos:position pos:line="70" pos:column="48"/></name></name></expr>;<pos:position pos:line="70" pos:column="49"/></expr_stmt>
            <expr_stmt><expr><name><name pos:line="71" pos:column="13">process<pos:position pos:line="71" pos:column="20"/></name><operator pos:line="71" pos:column="20">-&gt;<pos:position pos:line="71" pos:column="25"/></operator><name pos:line="71" pos:column="22">argv<pos:position pos:line="71" pos:column="26"/></name></name> <operator pos:line="71" pos:column="27">=<pos:position pos:line="71" pos:column="28"/></operator> <operator pos:line="71" pos:column="29">(<pos:position pos:line="71" pos:column="30"/></operator><specifier pos:line="71" pos:column="30">const<pos:position pos:line="71" pos:column="35"/></specifier> <name pos:line="71" pos:column="36">char<pos:position pos:line="71" pos:column="40"/></name> <operator pos:line="71" pos:column="41">*<pos:position pos:line="71" pos:column="42"/></operator> <specifier pos:line="71" pos:column="43">const<pos:position pos:line="71" pos:column="48"/></specifier> <operator pos:line="71" pos:column="49">*<pos:position pos:line="71" pos:column="50"/></operator><operator pos:line="71" pos:column="50">)<pos:position pos:line="71" pos:column="51"/></operator> <name><name pos:line="71" pos:column="52">mpm_new_argv<pos:position pos:line="71" pos:column="64"/></name><operator pos:line="71" pos:column="64">-&gt;<pos:position pos:line="71" pos:column="69"/></operator><name pos:line="71" pos:column="66">elts<pos:position pos:line="71" pos:column="70"/></name></name></expr>;<pos:position pos:line="71" pos:column="71"/></expr_stmt>
        }<pos:position pos:line="72" pos:column="10"/></block></then></if>
    }<pos:position pos:line="73" pos:column="6"/></block></then></if>
}<pos:position pos:line="74" pos:column="2"/></block></function></unit>

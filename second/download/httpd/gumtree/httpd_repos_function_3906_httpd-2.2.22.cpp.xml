<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/httpd/gumtree/httpd_repos_function_3906_httpd-2.2.22.cpp" pos:tabs="8"><decl_stmt><decl><type><name pos:line="1" pos:column="1">apr_status_t<pos:position pos:line="1" pos:column="13"/></name></type> <name pos:line="1" pos:column="14">apr_socket_accept<pos:position pos:line="1" pos:column="31"/></name><argument_list pos:line="1" pos:column="31">(<argument><expr><name pos:line="1" pos:column="32">apr_socket_t<pos:position pos:line="1" pos:column="44"/></name> <operator pos:line="1" pos:column="45">*<pos:position pos:line="1" pos:column="46"/></operator><operator pos:line="1" pos:column="46">*<pos:position pos:line="1" pos:column="47"/></operator><operator pos:line="1" pos:column="47">new<pos:position pos:line="1" pos:column="50"/></operator></expr></argument>, <argument><expr><name pos:line="1" pos:column="52">apr_socket_t<pos:position pos:line="1" pos:column="64"/></name> <operator pos:line="1" pos:column="65">*<pos:position pos:line="1" pos:column="66"/></operator><name pos:line="1" pos:column="66">sock<pos:position pos:line="1" pos:column="70"/></name></expr></argument>,
                               <argument><expr><name pos:line="2" pos:column="32">apr_pool_t<pos:position pos:line="2" pos:column="42"/></name> <operator pos:line="2" pos:column="43">*<pos:position pos:line="2" pos:column="44"/></operator><name pos:line="2" pos:column="44">connection_context<pos:position pos:line="2" pos:column="62"/></name></expr></argument>)<pos:position pos:line="2" pos:column="63"/></argument_list>
<argument_list pos:line="3" pos:column="1">{
    <argument><expr><name pos:line="4" pos:column="5">int<pos:position pos:line="4" pos:column="8"/></name> <name pos:line="4" pos:column="9">s<pos:position pos:line="4" pos:column="10"/></name></expr></argument>;
    <argument><expr><name pos:line="5" pos:column="5">apr_sockaddr_t<pos:position pos:line="5" pos:column="19"/></name> <name pos:line="5" pos:column="20">sa<pos:position pos:line="5" pos:column="22"/></name></expr></argument>;

    <argument><expr><name><name pos:line="7" pos:column="5">sa<pos:position pos:line="7" pos:column="7"/></name><operator pos:line="7" pos:column="7">.<pos:position pos:line="7" pos:column="8"/></operator><name pos:line="7" pos:column="8">salen<pos:position pos:line="7" pos:column="13"/></name></name> <operator pos:line="7" pos:column="14">=<pos:position pos:line="7" pos:column="15"/></operator> <sizeof pos:line="7" pos:column="16">sizeof<argument_list pos:line="7" pos:column="22">(<argument><expr><name><name pos:line="7" pos:column="23">sa<pos:position pos:line="7" pos:column="25"/></name><operator pos:line="7" pos:column="25">.<pos:position pos:line="7" pos:column="26"/></operator><name pos:line="7" pos:column="26">sa<pos:position pos:line="7" pos:column="28"/></name></name></expr></argument>)<pos:position pos:line="7" pos:column="29"/></argument_list></sizeof></expr></argument>;

<cpp:ifdef pos:line="9" pos:column="1">#<cpp:directive pos:line="9" pos:column="2">ifdef<pos:position pos:line="9" pos:column="7"/></cpp:directive> <name pos:line="9" pos:column="8">HAVE_ACCEPT4<pos:position pos:line="9" pos:column="20"/></name></cpp:ifdef>
    <argument><expr><name pos:line="10" pos:column="5">s<pos:position pos:line="10" pos:column="6"/></name> <operator pos:line="10" pos:column="7">=<pos:position pos:line="10" pos:column="8"/></operator> <call><name pos:line="10" pos:column="9">accept4<pos:position pos:line="10" pos:column="16"/></name><argument_list pos:line="10" pos:column="16">(<argument><expr><name><name pos:line="10" pos:column="17">sock<pos:position pos:line="10" pos:column="21"/></name><operator pos:line="10" pos:column="21">-&gt;<pos:position pos:line="10" pos:column="26"/></operator><name pos:line="10" pos:column="23">socketdes<pos:position pos:line="10" pos:column="32"/></name></name></expr></argument>, <argument><expr><operator pos:line="10" pos:column="34">(<pos:position pos:line="10" pos:column="35"/></operator>struct <name pos:line="10" pos:column="42">sockaddr<pos:position pos:line="10" pos:column="50"/></name> <operator pos:line="10" pos:column="51">*<pos:position pos:line="10" pos:column="52"/></operator><operator pos:line="10" pos:column="52">)<pos:position pos:line="10" pos:column="53"/></operator><operator pos:line="10" pos:column="53">&amp;<pos:position pos:line="10" pos:column="58"/></operator><name><name pos:line="10" pos:column="54">sa<pos:position pos:line="10" pos:column="56"/></name><operator pos:line="10" pos:column="56">.<pos:position pos:line="10" pos:column="57"/></operator><name pos:line="10" pos:column="57">sa<pos:position pos:line="10" pos:column="59"/></name></name></expr></argument>, <argument><expr><operator pos:line="10" pos:column="61">&amp;<pos:position pos:line="10" pos:column="66"/></operator><name><name pos:line="10" pos:column="62">sa<pos:position pos:line="10" pos:column="64"/></name><operator pos:line="10" pos:column="64">.<pos:position pos:line="10" pos:column="65"/></operator><name pos:line="10" pos:column="65">salen<pos:position pos:line="10" pos:column="70"/></name></name></expr></argument>, <argument><expr><name pos:line="10" pos:column="72">SOCK_CLOEXEC<pos:position pos:line="10" pos:column="84"/></name></expr></argument>)<pos:position pos:line="10" pos:column="85"/></argument_list></call></expr></argument>;
<cpp:else pos:line="11" pos:column="1">#<cpp:directive pos:line="11" pos:column="2">else<pos:position pos:line="11" pos:column="6"/></cpp:directive></cpp:else>
    <argument><expr><name pos:line="12" pos:column="5">s<pos:position pos:line="12" pos:column="6"/></name> <operator pos:line="12" pos:column="7">=<pos:position pos:line="12" pos:column="8"/></operator> <call><name pos:line="12" pos:column="9">accept<pos:position pos:line="12" pos:column="15"/></name><argument_list pos:line="12" pos:column="15">(<argument><expr><name><name pos:line="12" pos:column="16">sock<pos:position pos:line="12" pos:column="20"/></name><operator pos:line="12" pos:column="20">-&gt;<pos:position pos:line="12" pos:column="25"/></operator><name pos:line="12" pos:column="22">socketdes<pos:position pos:line="12" pos:column="31"/></name></name></expr></argument>, <argument><expr><operator pos:line="12" pos:column="33">(<pos:position pos:line="12" pos:column="34"/></operator>struct <name pos:line="12" pos:column="41">sockaddr<pos:position pos:line="12" pos:column="49"/></name> <operator pos:line="12" pos:column="50">*<pos:position pos:line="12" pos:column="51"/></operator><operator pos:line="12" pos:column="51">)<pos:position pos:line="12" pos:column="52"/></operator><operator pos:line="12" pos:column="52">&amp;<pos:position pos:line="12" pos:column="57"/></operator><name><name pos:line="12" pos:column="53">sa<pos:position pos:line="12" pos:column="55"/></name><operator pos:line="12" pos:column="55">.<pos:position pos:line="12" pos:column="56"/></operator><name pos:line="12" pos:column="56">sa<pos:position pos:line="12" pos:column="58"/></name></name></expr></argument>, <argument><expr><operator pos:line="12" pos:column="60">&amp;<pos:position pos:line="12" pos:column="65"/></operator><name><name pos:line="12" pos:column="61">sa<pos:position pos:line="12" pos:column="63"/></name><operator pos:line="12" pos:column="63">.<pos:position pos:line="12" pos:column="64"/></operator><name pos:line="12" pos:column="64">salen<pos:position pos:line="12" pos:column="69"/></name></name></expr></argument>)<pos:position pos:line="12" pos:column="70"/></argument_list></call></expr></argument>;
<cpp:endif pos:line="13" pos:column="1">#<cpp:directive pos:line="13" pos:column="2">endif<pos:position pos:line="13" pos:column="7"/></cpp:directive></cpp:endif>

    if <argument><expr><operator pos:line="15" pos:column="8">(<pos:position pos:line="15" pos:column="9"/></operator><name pos:line="15" pos:column="9">s<pos:position pos:line="15" pos:column="10"/></name> <operator pos:line="15" pos:column="11">&lt;<pos:position pos:line="15" pos:column="15"/></operator> <literal type="number" pos:line="15" pos:column="13">0<pos:position pos:line="15" pos:column="14"/></literal><operator pos:line="15" pos:column="14">)<pos:position pos:line="15" pos:column="15"/></operator> <block pos:line="15" pos:column="16">{
        <return pos:line="16" pos:column="9">return <expr><name pos:line="16" pos:column="16">errno<pos:position pos:line="16" pos:column="21"/></name></expr>;<pos:position pos:line="16" pos:column="22"/></return>
    }<pos:position pos:line="17" pos:column="6"/></block></expr></argument>
<cpp:ifdef pos:line="18" pos:column="1">#<cpp:directive pos:line="18" pos:column="2">ifdef<pos:position pos:line="18" pos:column="7"/></cpp:directive> <name pos:line="18" pos:column="8">TPF<pos:position pos:line="18" pos:column="11"/></name></cpp:ifdef>
    <if pos:line="19" pos:column="5">if <condition pos:line="19" pos:column="8">(<expr><name pos:line="19" pos:column="9">s<pos:position pos:line="19" pos:column="10"/></name> <operator pos:line="19" pos:column="11">==<pos:position pos:line="19" pos:column="13"/></operator> <literal type="number" pos:line="19" pos:column="14">0<pos:position pos:line="19" pos:column="15"/></literal></expr>)<pos:position pos:line="19" pos:column="16"/></condition><then pos:line="19" pos:column="16"> <expr_stmt><expr><block pos:line="19" pos:column="17">{ 
        <comment type="block" pos:line="20" pos:column="9">/* 0 is an invalid socket for TPF */</comment>
        <return pos:line="21" pos:column="9">return <expr><name pos:line="21" pos:column="16">APR_EINTR<pos:position pos:line="21" pos:column="25"/></name></expr>;<pos:position pos:line="21" pos:column="26"/></return>
    }<pos:position pos:line="22" pos:column="6"/></block>
<cpp:endif pos:line="23" pos:column="1">#<cpp:directive pos:line="23" pos:column="2">endif<pos:position pos:line="23" pos:column="7"/></cpp:directive></cpp:endif>
    <call><name pos:line="24" pos:column="5">alloc_socket<pos:position pos:line="24" pos:column="17"/></name><argument_list pos:line="24" pos:column="17">(<argument><expr><operator pos:line="24" pos:column="18">new<pos:position pos:line="24" pos:column="21"/></operator></expr></argument>, <argument><expr><name pos:line="24" pos:column="23">connection_context<pos:position pos:line="24" pos:column="41"/></name></expr></argument>)<pos:position pos:line="24" pos:column="42"/></argument_list></call></expr>;<pos:position pos:line="24" pos:column="43"/></expr_stmt></then></if></argument_list></decl></decl_stmt>

    <comment type="block" pos:line="26" pos:column="5">/* Set up socket variables -- note that it may be possible for
     * *new to be an AF_INET socket when sock is AF_INET6 in some
     * dual-stack configurations, so ensure that the remote_/local_addr
     * structures are adjusted for the family of the accepted
     * socket: */</comment>
    <expr_stmt><expr><call><name pos:line="31" pos:column="5">set_socket_vars<pos:position pos:line="31" pos:column="20"/></name><argument_list pos:line="31" pos:column="20">(<argument><expr><operator pos:line="31" pos:column="21">*<pos:position pos:line="31" pos:column="22"/></operator><operator pos:line="31" pos:column="22">new<pos:position pos:line="31" pos:column="25"/></operator></expr></argument>, <argument><expr><name><name pos:line="31" pos:column="27">sa<pos:position pos:line="31" pos:column="29"/></name><operator pos:line="31" pos:column="29">.<pos:position pos:line="31" pos:column="30"/></operator><name pos:line="31" pos:column="30">sa<pos:position pos:line="31" pos:column="32"/></name><operator pos:line="31" pos:column="32">.<pos:position pos:line="31" pos:column="33"/></operator><name pos:line="31" pos:column="33">sin<pos:position pos:line="31" pos:column="36"/></name><operator pos:line="31" pos:column="36">.<pos:position pos:line="31" pos:column="37"/></operator><name pos:line="31" pos:column="37">sin_family<pos:position pos:line="31" pos:column="47"/></name></name></expr></argument>, <argument><expr><name pos:line="31" pos:column="49">SOCK_STREAM<pos:position pos:line="31" pos:column="60"/></name></expr></argument>, <argument><expr><name><name pos:line="31" pos:column="62">sock<pos:position pos:line="31" pos:column="66"/></name><operator pos:line="31" pos:column="66">-&gt;<pos:position pos:line="31" pos:column="71"/></operator><name pos:line="31" pos:column="68">protocol<pos:position pos:line="31" pos:column="76"/></name></name></expr></argument>)<pos:position pos:line="31" pos:column="77"/></argument_list></call></expr>;<pos:position pos:line="31" pos:column="78"/></expr_stmt>

<cpp:ifndef pos:line="33" pos:column="1">#<cpp:directive pos:line="33" pos:column="2">ifndef<pos:position pos:line="33" pos:column="8"/></cpp:directive> <name pos:line="33" pos:column="9">HAVE_POLL<pos:position pos:line="33" pos:column="18"/></name></cpp:ifndef>
    <expr_stmt><expr><operator pos:line="34" pos:column="5">(<pos:position pos:line="34" pos:column="6"/></operator><operator pos:line="34" pos:column="6">*<pos:position pos:line="34" pos:column="7"/></operator><operator pos:line="34" pos:column="7">new<pos:position pos:line="34" pos:column="10"/></operator><operator pos:line="34" pos:column="10">)<pos:position pos:line="34" pos:column="11"/></operator><operator pos:line="34" pos:column="11">-&gt;<pos:position pos:line="34" pos:column="16"/></operator><name pos:line="34" pos:column="13">connected<pos:position pos:line="34" pos:column="22"/></name> <operator pos:line="34" pos:column="23">=<pos:position pos:line="34" pos:column="24"/></operator> <literal type="number" pos:line="34" pos:column="25">1<pos:position pos:line="34" pos:column="26"/></literal></expr>;<pos:position pos:line="34" pos:column="27"/></expr_stmt>
<cpp:endif pos:line="35" pos:column="1">#<cpp:directive pos:line="35" pos:column="2">endif<pos:position pos:line="35" pos:column="7"/></cpp:directive></cpp:endif>
    <expr_stmt><expr><operator pos:line="36" pos:column="5">(<pos:position pos:line="36" pos:column="6"/></operator><operator pos:line="36" pos:column="6">*<pos:position pos:line="36" pos:column="7"/></operator><operator pos:line="36" pos:column="7">new<pos:position pos:line="36" pos:column="10"/></operator><operator pos:line="36" pos:column="10">)<pos:position pos:line="36" pos:column="11"/></operator><operator pos:line="36" pos:column="11">-&gt;<pos:position pos:line="36" pos:column="16"/></operator><name pos:line="36" pos:column="13">timeout<pos:position pos:line="36" pos:column="20"/></name> <operator pos:line="36" pos:column="21">=<pos:position pos:line="36" pos:column="22"/></operator> <operator pos:line="36" pos:column="23">-<pos:position pos:line="36" pos:column="24"/></operator><literal type="number" pos:line="36" pos:column="24">1<pos:position pos:line="36" pos:column="25"/></literal></expr>;<pos:position pos:line="36" pos:column="26"/></expr_stmt>

    <expr_stmt><expr><operator pos:line="38" pos:column="5">(<pos:position pos:line="38" pos:column="6"/></operator><operator pos:line="38" pos:column="6">*<pos:position pos:line="38" pos:column="7"/></operator><operator pos:line="38" pos:column="7">new<pos:position pos:line="38" pos:column="10"/></operator><operator pos:line="38" pos:column="10">)<pos:position pos:line="38" pos:column="11"/></operator><operator pos:line="38" pos:column="11">-&gt;<pos:position pos:line="38" pos:column="16"/></operator><name pos:line="38" pos:column="13">remote_addr_unknown<pos:position pos:line="38" pos:column="32"/></name> <operator pos:line="38" pos:column="33">=<pos:position pos:line="38" pos:column="34"/></operator> <literal type="number" pos:line="38" pos:column="35">0<pos:position pos:line="38" pos:column="36"/></literal></expr>;<pos:position pos:line="38" pos:column="37"/></expr_stmt>

    <expr_stmt><expr><operator pos:line="40" pos:column="5">(<pos:position pos:line="40" pos:column="6"/></operator><operator pos:line="40" pos:column="6">*<pos:position pos:line="40" pos:column="7"/></operator><operator pos:line="40" pos:column="7">new<pos:position pos:line="40" pos:column="10"/></operator><operator pos:line="40" pos:column="10">)<pos:position pos:line="40" pos:column="11"/></operator><operator pos:line="40" pos:column="11">-&gt;<pos:position pos:line="40" pos:column="16"/></operator><name pos:line="40" pos:column="13">socketdes<pos:position pos:line="40" pos:column="22"/></name> <operator pos:line="40" pos:column="23">=<pos:position pos:line="40" pos:column="24"/></operator> <name pos:line="40" pos:column="25">s<pos:position pos:line="40" pos:column="26"/></name></expr>;<pos:position pos:line="40" pos:column="27"/></expr_stmt>

    <comment type="block" pos:line="42" pos:column="5">/* Copy in peer's address. */</comment>
    <expr_stmt><expr><operator pos:line="43" pos:column="5">(<pos:position pos:line="43" pos:column="6"/></operator><operator pos:line="43" pos:column="6">*<pos:position pos:line="43" pos:column="7"/></operator><operator pos:line="43" pos:column="7">new<pos:position pos:line="43" pos:column="10"/></operator><operator pos:line="43" pos:column="10">)<pos:position pos:line="43" pos:column="11"/></operator><operator pos:line="43" pos:column="11">-&gt;<pos:position pos:line="43" pos:column="16"/></operator><name><name pos:line="43" pos:column="13">remote_addr<pos:position pos:line="43" pos:column="24"/></name><operator pos:line="43" pos:column="24">-&gt;<pos:position pos:line="43" pos:column="29"/></operator><name pos:line="43" pos:column="26">sa<pos:position pos:line="43" pos:column="28"/></name></name> <operator pos:line="43" pos:column="29">=<pos:position pos:line="43" pos:column="30"/></operator> <name><name pos:line="43" pos:column="31">sa<pos:position pos:line="43" pos:column="33"/></name><operator pos:line="43" pos:column="33">.<pos:position pos:line="43" pos:column="34"/></operator><name pos:line="43" pos:column="34">sa<pos:position pos:line="43" pos:column="36"/></name></name></expr>;<pos:position pos:line="43" pos:column="37"/></expr_stmt>
    <expr_stmt><expr><operator pos:line="44" pos:column="5">(<pos:position pos:line="44" pos:column="6"/></operator><operator pos:line="44" pos:column="6">*<pos:position pos:line="44" pos:column="7"/></operator><operator pos:line="44" pos:column="7">new<pos:position pos:line="44" pos:column="10"/></operator><operator pos:line="44" pos:column="10">)<pos:position pos:line="44" pos:column="11"/></operator><operator pos:line="44" pos:column="11">-&gt;<pos:position pos:line="44" pos:column="16"/></operator><name><name pos:line="44" pos:column="13">remote_addr<pos:position pos:line="44" pos:column="24"/></name><operator pos:line="44" pos:column="24">-&gt;<pos:position pos:line="44" pos:column="29"/></operator><name pos:line="44" pos:column="26">salen<pos:position pos:line="44" pos:column="31"/></name></name> <operator pos:line="44" pos:column="32">=<pos:position pos:line="44" pos:column="33"/></operator> <name><name pos:line="44" pos:column="34">sa<pos:position pos:line="44" pos:column="36"/></name><operator pos:line="44" pos:column="36">.<pos:position pos:line="44" pos:column="37"/></operator><name pos:line="44" pos:column="37">salen<pos:position pos:line="44" pos:column="42"/></name></name></expr>;<pos:position pos:line="44" pos:column="43"/></expr_stmt>

    <expr_stmt><expr><operator pos:line="46" pos:column="5">*<pos:position pos:line="46" pos:column="6"/></operator><operator pos:line="46" pos:column="6">(<pos:position pos:line="46" pos:column="7"/></operator><operator pos:line="46" pos:column="7">*<pos:position pos:line="46" pos:column="8"/></operator><operator pos:line="46" pos:column="8">new<pos:position pos:line="46" pos:column="11"/></operator><operator pos:line="46" pos:column="11">)<pos:position pos:line="46" pos:column="12"/></operator><operator pos:line="46" pos:column="12">-&gt;<pos:position pos:line="46" pos:column="17"/></operator><name pos:line="46" pos:column="14">local_addr<pos:position pos:line="46" pos:column="24"/></name> <operator pos:line="46" pos:column="25">=<pos:position pos:line="46" pos:column="26"/></operator> <operator pos:line="46" pos:column="27">*<pos:position pos:line="46" pos:column="28"/></operator><name><name pos:line="46" pos:column="28">sock<pos:position pos:line="46" pos:column="32"/></name><operator pos:line="46" pos:column="32">-&gt;<pos:position pos:line="46" pos:column="37"/></operator><name pos:line="46" pos:column="34">local_addr<pos:position pos:line="46" pos:column="44"/></name></name></expr>;<pos:position pos:line="46" pos:column="45"/></expr_stmt>

    <comment type="block" pos:line="48" pos:column="5">/* The above assignment just overwrote the pool entry. Setting the local_addr 
       pool for the accepted socket back to what it should be.  Otherwise all 
       allocations for this socket will come from a server pool that is not
       freed until the process goes down.*/</comment>
    <expr_stmt><expr><operator pos:line="52" pos:column="5">(<pos:position pos:line="52" pos:column="6"/></operator><operator pos:line="52" pos:column="6">*<pos:position pos:line="52" pos:column="7"/></operator><operator pos:line="52" pos:column="7">new<pos:position pos:line="52" pos:column="10"/></operator><operator pos:line="52" pos:column="10">)<pos:position pos:line="52" pos:column="11"/></operator><operator pos:line="52" pos:column="11">-&gt;<pos:position pos:line="52" pos:column="16"/></operator><name><name pos:line="52" pos:column="13">local_addr<pos:position pos:line="52" pos:column="23"/></name><operator pos:line="52" pos:column="23">-&gt;<pos:position pos:line="52" pos:column="28"/></operator><name pos:line="52" pos:column="25">pool<pos:position pos:line="52" pos:column="29"/></name></name> <operator pos:line="52" pos:column="30">=<pos:position pos:line="52" pos:column="31"/></operator> <name pos:line="52" pos:column="32">connection_context<pos:position pos:line="52" pos:column="50"/></name></expr>;<pos:position pos:line="52" pos:column="51"/></expr_stmt>

    <comment type="block" pos:line="54" pos:column="5">/* fix up any pointers which are no longer valid */</comment>
    <if pos:line="55" pos:column="5">if <condition pos:line="55" pos:column="8">(<expr><name><name pos:line="55" pos:column="9">sock<pos:position pos:line="55" pos:column="13"/></name><operator pos:line="55" pos:column="13">-&gt;<pos:position pos:line="55" pos:column="18"/></operator><name pos:line="55" pos:column="15">local_addr<pos:position pos:line="55" pos:column="25"/></name><operator pos:line="55" pos:column="25">-&gt;<pos:position pos:line="55" pos:column="30"/></operator><name pos:line="55" pos:column="27">sa<pos:position pos:line="55" pos:column="29"/></name><operator pos:line="55" pos:column="29">.<pos:position pos:line="55" pos:column="30"/></operator><name pos:line="55" pos:column="30">sin<pos:position pos:line="55" pos:column="33"/></name><operator pos:line="55" pos:column="33">.<pos:position pos:line="55" pos:column="34"/></operator><name pos:line="55" pos:column="34">sin_family<pos:position pos:line="55" pos:column="44"/></name></name> <operator pos:line="55" pos:column="45">==<pos:position pos:line="55" pos:column="47"/></operator> <name pos:line="55" pos:column="48">AF_INET<pos:position pos:line="55" pos:column="55"/></name></expr>)<pos:position pos:line="55" pos:column="56"/></condition><then pos:line="55" pos:column="56"> <block pos:line="55" pos:column="57">{
        <expr_stmt><expr><operator pos:line="56" pos:column="9">(<pos:position pos:line="56" pos:column="10"/></operator><operator pos:line="56" pos:column="10">*<pos:position pos:line="56" pos:column="11"/></operator><operator pos:line="56" pos:column="11">new<pos:position pos:line="56" pos:column="14"/></operator><operator pos:line="56" pos:column="14">)<pos:position pos:line="56" pos:column="15"/></operator><operator pos:line="56" pos:column="15">-&gt;<pos:position pos:line="56" pos:column="20"/></operator><name><name pos:line="56" pos:column="17">local_addr<pos:position pos:line="56" pos:column="27"/></name><operator pos:line="56" pos:column="27">-&gt;<pos:position pos:line="56" pos:column="32"/></operator><name pos:line="56" pos:column="29">ipaddr_ptr<pos:position pos:line="56" pos:column="39"/></name></name> <operator pos:line="56" pos:column="40">=<pos:position pos:line="56" pos:column="41"/></operator> <operator pos:line="56" pos:column="42">&amp;<pos:position pos:line="56" pos:column="47"/></operator><operator pos:line="56" pos:column="43">(<pos:position pos:line="56" pos:column="44"/></operator><operator pos:line="56" pos:column="44">*<pos:position pos:line="56" pos:column="45"/></operator><operator pos:line="56" pos:column="45">new<pos:position pos:line="56" pos:column="48"/></operator><operator pos:line="56" pos:column="48">)<pos:position pos:line="56" pos:column="49"/></operator><operator pos:line="56" pos:column="49">-&gt;<pos:position pos:line="56" pos:column="54"/></operator><name><name pos:line="56" pos:column="51">local_addr<pos:position pos:line="56" pos:column="61"/></name><operator pos:line="56" pos:column="61">-&gt;<pos:position pos:line="56" pos:column="66"/></operator><name pos:line="56" pos:column="63">sa<pos:position pos:line="56" pos:column="65"/></name><operator pos:line="56" pos:column="65">.<pos:position pos:line="56" pos:column="66"/></operator><name pos:line="56" pos:column="66">sin<pos:position pos:line="56" pos:column="69"/></name><operator pos:line="56" pos:column="69">.<pos:position pos:line="56" pos:column="70"/></operator><name pos:line="56" pos:column="70">sin_addr<pos:position pos:line="56" pos:column="78"/></name></name></expr>;<pos:position pos:line="56" pos:column="79"/></expr_stmt>
    }<pos:position pos:line="57" pos:column="6"/></block></then>
<cpp:if pos:line="58" pos:column="1">#<cpp:directive pos:line="58" pos:column="2">if<pos:position pos:line="58" pos:column="4"/></cpp:directive> <expr><name pos:line="58" pos:column="5">APR_HAVE_IPV6<pos:position pos:line="58" pos:column="18"/></name></expr></cpp:if>
    <elseif pos:line="59" pos:column="5">else <if pos:line="59" pos:column="10">if <condition pos:line="59" pos:column="13">(<expr><name><name pos:line="59" pos:column="14">sock<pos:position pos:line="59" pos:column="18"/></name><operator pos:line="59" pos:column="18">-&gt;<pos:position pos:line="59" pos:column="23"/></operator><name pos:line="59" pos:column="20">local_addr<pos:position pos:line="59" pos:column="30"/></name><operator pos:line="59" pos:column="30">-&gt;<pos:position pos:line="59" pos:column="35"/></operator><name pos:line="59" pos:column="32">sa<pos:position pos:line="59" pos:column="34"/></name><operator pos:line="59" pos:column="34">.<pos:position pos:line="59" pos:column="35"/></operator><name pos:line="59" pos:column="35">sin<pos:position pos:line="59" pos:column="38"/></name><operator pos:line="59" pos:column="38">.<pos:position pos:line="59" pos:column="39"/></operator><name pos:line="59" pos:column="39">sin_family<pos:position pos:line="59" pos:column="49"/></name></name> <operator pos:line="59" pos:column="50">==<pos:position pos:line="59" pos:column="52"/></operator> <name pos:line="59" pos:column="53">AF_INET6<pos:position pos:line="59" pos:column="61"/></name></expr>)<pos:position pos:line="59" pos:column="62"/></condition><then pos:line="59" pos:column="62"> <block pos:line="59" pos:column="63">{
        <expr_stmt><expr><operator pos:line="60" pos:column="9">(<pos:position pos:line="60" pos:column="10"/></operator><operator pos:line="60" pos:column="10">*<pos:position pos:line="60" pos:column="11"/></operator><operator pos:line="60" pos:column="11">new<pos:position pos:line="60" pos:column="14"/></operator><operator pos:line="60" pos:column="14">)<pos:position pos:line="60" pos:column="15"/></operator><operator pos:line="60" pos:column="15">-&gt;<pos:position pos:line="60" pos:column="20"/></operator><name><name pos:line="60" pos:column="17">local_addr<pos:position pos:line="60" pos:column="27"/></name><operator pos:line="60" pos:column="27">-&gt;<pos:position pos:line="60" pos:column="32"/></operator><name pos:line="60" pos:column="29">ipaddr_ptr<pos:position pos:line="60" pos:column="39"/></name></name> <operator pos:line="60" pos:column="40">=<pos:position pos:line="60" pos:column="41"/></operator> <operator pos:line="60" pos:column="42">&amp;<pos:position pos:line="60" pos:column="47"/></operator><operator pos:line="60" pos:column="43">(<pos:position pos:line="60" pos:column="44"/></operator><operator pos:line="60" pos:column="44">*<pos:position pos:line="60" pos:column="45"/></operator><operator pos:line="60" pos:column="45">new<pos:position pos:line="60" pos:column="48"/></operator><operator pos:line="60" pos:column="48">)<pos:position pos:line="60" pos:column="49"/></operator><operator pos:line="60" pos:column="49">-&gt;<pos:position pos:line="60" pos:column="54"/></operator><name><name pos:line="60" pos:column="51">local_addr<pos:position pos:line="60" pos:column="61"/></name><operator pos:line="60" pos:column="61">-&gt;<pos:position pos:line="60" pos:column="66"/></operator><name pos:line="60" pos:column="63">sa<pos:position pos:line="60" pos:column="65"/></name><operator pos:line="60" pos:column="65">.<pos:position pos:line="60" pos:column="66"/></operator><name pos:line="60" pos:column="66">sin6<pos:position pos:line="60" pos:column="70"/></name><operator pos:line="60" pos:column="70">.<pos:position pos:line="60" pos:column="71"/></operator><name pos:line="60" pos:column="71">sin6_addr<pos:position pos:line="60" pos:column="80"/></name></name></expr>;<pos:position pos:line="60" pos:column="81"/></expr_stmt>
    }<pos:position pos:line="61" pos:column="6"/></block></then></if></elseif></if>
<cpp:endif pos:line="62" pos:column="1">#<cpp:directive pos:line="62" pos:column="2">endif<pos:position pos:line="62" pos:column="7"/></cpp:directive></cpp:endif>
    <expr_stmt><expr><operator pos:line="63" pos:column="5">(<pos:position pos:line="63" pos:column="6"/></operator><operator pos:line="63" pos:column="6">*<pos:position pos:line="63" pos:column="7"/></operator><operator pos:line="63" pos:column="7">new<pos:position pos:line="63" pos:column="10"/></operator><operator pos:line="63" pos:column="10">)<pos:position pos:line="63" pos:column="11"/></operator><operator pos:line="63" pos:column="11">-&gt;<pos:position pos:line="63" pos:column="16"/></operator><name><name pos:line="63" pos:column="13">remote_addr<pos:position pos:line="63" pos:column="24"/></name><operator pos:line="63" pos:column="24">-&gt;<pos:position pos:line="63" pos:column="29"/></operator><name pos:line="63" pos:column="26">port<pos:position pos:line="63" pos:column="30"/></name></name> <operator pos:line="63" pos:column="31">=<pos:position pos:line="63" pos:column="32"/></operator> <call><name pos:line="63" pos:column="33">ntohs<pos:position pos:line="63" pos:column="38"/></name><argument_list pos:line="63" pos:column="38">(<argument><expr><operator pos:line="63" pos:column="39">(<pos:position pos:line="63" pos:column="40"/></operator><operator pos:line="63" pos:column="40">*<pos:position pos:line="63" pos:column="41"/></operator><operator pos:line="63" pos:column="41">new<pos:position pos:line="63" pos:column="44"/></operator><operator pos:line="63" pos:column="44">)<pos:position pos:line="63" pos:column="45"/></operator><operator pos:line="63" pos:column="45">-&gt;<pos:position pos:line="63" pos:column="50"/></operator><name><name pos:line="63" pos:column="47">remote_addr<pos:position pos:line="63" pos:column="58"/></name><operator pos:line="63" pos:column="58">-&gt;<pos:position pos:line="63" pos:column="63"/></operator><name pos:line="63" pos:column="60">sa<pos:position pos:line="63" pos:column="62"/></name><operator pos:line="63" pos:column="62">.<pos:position pos:line="63" pos:column="63"/></operator><name pos:line="63" pos:column="63">sin<pos:position pos:line="63" pos:column="66"/></name><operator pos:line="63" pos:column="66">.<pos:position pos:line="63" pos:column="67"/></operator><name pos:line="63" pos:column="67">sin_port<pos:position pos:line="63" pos:column="75"/></name></name></expr></argument>)<pos:position pos:line="63" pos:column="76"/></argument_list></call></expr>;<pos:position pos:line="63" pos:column="77"/></expr_stmt>
    <if pos:line="64" pos:column="5">if <condition pos:line="64" pos:column="8">(<expr><name><name pos:line="64" pos:column="9">sock<pos:position pos:line="64" pos:column="13"/></name><operator pos:line="64" pos:column="13">-&gt;<pos:position pos:line="64" pos:column="18"/></operator><name pos:line="64" pos:column="15">local_port_unknown<pos:position pos:line="64" pos:column="33"/></name></name></expr>)<pos:position pos:line="64" pos:column="34"/></condition><then pos:line="64" pos:column="34"> <block pos:line="64" pos:column="35">{
        <comment type="block" pos:line="65" pos:column="9">/* not likely for a listening socket, but theoretically possible :) */</comment>
        <expr_stmt><expr><operator pos:line="66" pos:column="9">(<pos:position pos:line="66" pos:column="10"/></operator><operator pos:line="66" pos:column="10">*<pos:position pos:line="66" pos:column="11"/></operator><operator pos:line="66" pos:column="11">new<pos:position pos:line="66" pos:column="14"/></operator><operator pos:line="66" pos:column="14">)<pos:position pos:line="66" pos:column="15"/></operator><operator pos:line="66" pos:column="15">-&gt;<pos:position pos:line="66" pos:column="20"/></operator><name pos:line="66" pos:column="17">local_port_unknown<pos:position pos:line="66" pos:column="35"/></name> <operator pos:line="66" pos:column="36">=<pos:position pos:line="66" pos:column="37"/></operator> <literal type="number" pos:line="66" pos:column="38">1<pos:position pos:line="66" pos:column="39"/></literal></expr>;<pos:position pos:line="66" pos:column="40"/></expr_stmt>
    }<pos:position pos:line="67" pos:column="6"/></block></then></if>

<cpp:if pos:line="69" pos:column="1">#<cpp:directive pos:line="69" pos:column="2">if<pos:position pos:line="69" pos:column="4"/></cpp:directive> <expr><name pos:line="69" pos:column="5">APR_TCP_NODELAY_INHERITED<pos:position pos:line="69" pos:column="30"/></name></expr></cpp:if>
    <if pos:line="70" pos:column="5">if <condition pos:line="70" pos:column="8">(<expr><call><name pos:line="70" pos:column="9">apr_is_option_set<pos:position pos:line="70" pos:column="26"/></name><argument_list pos:line="70" pos:column="26">(<argument><expr><name pos:line="70" pos:column="27">sock<pos:position pos:line="70" pos:column="31"/></name></expr></argument>, <argument><expr><name pos:line="70" pos:column="33">APR_TCP_NODELAY<pos:position pos:line="70" pos:column="48"/></name></expr></argument>)<pos:position pos:line="70" pos:column="49"/></argument_list></call> <operator pos:line="70" pos:column="50">==<pos:position pos:line="70" pos:column="52"/></operator> <literal type="number" pos:line="70" pos:column="53">1<pos:position pos:line="70" pos:column="54"/></literal></expr>)<pos:position pos:line="70" pos:column="55"/></condition><then pos:line="70" pos:column="55"> <block pos:line="70" pos:column="56">{
        <expr_stmt><expr><call><name pos:line="71" pos:column="9">apr_set_option<pos:position pos:line="71" pos:column="23"/></name><argument_list pos:line="71" pos:column="23">(<argument><expr><operator pos:line="71" pos:column="24">*<pos:position pos:line="71" pos:column="25"/></operator><operator pos:line="71" pos:column="25">new<pos:position pos:line="71" pos:column="28"/></operator></expr></argument>, <argument><expr><name pos:line="71" pos:column="30">APR_TCP_NODELAY<pos:position pos:line="71" pos:column="45"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="71" pos:column="47">1<pos:position pos:line="71" pos:column="48"/></literal></expr></argument>)<pos:position pos:line="71" pos:column="49"/></argument_list></call></expr>;<pos:position pos:line="71" pos:column="50"/></expr_stmt>
    }<pos:position pos:line="72" pos:column="6"/></block></then></if>
<cpp:endif pos:line="73" pos:column="1">#<cpp:directive pos:line="73" pos:column="2">endif<pos:position pos:line="73" pos:column="7"/></cpp:directive></cpp:endif> <comment type="block" pos:line="73" pos:column="8">/* TCP_NODELAY_INHERITED */</comment>
<cpp:if pos:line="74" pos:column="1">#<cpp:directive pos:line="74" pos:column="2">if<pos:position pos:line="74" pos:column="4"/></cpp:directive> <expr><name pos:line="74" pos:column="5">APR_O_NONBLOCK_INHERITED<pos:position pos:line="74" pos:column="29"/></name></expr></cpp:if>
    <if pos:line="75" pos:column="5">if <condition pos:line="75" pos:column="8">(<expr><call><name pos:line="75" pos:column="9">apr_is_option_set<pos:position pos:line="75" pos:column="26"/></name><argument_list pos:line="75" pos:column="26">(<argument><expr><name pos:line="75" pos:column="27">sock<pos:position pos:line="75" pos:column="31"/></name></expr></argument>, <argument><expr><name pos:line="75" pos:column="33">APR_SO_NONBLOCK<pos:position pos:line="75" pos:column="48"/></name></expr></argument>)<pos:position pos:line="75" pos:column="49"/></argument_list></call> <operator pos:line="75" pos:column="50">==<pos:position pos:line="75" pos:column="52"/></operator> <literal type="number" pos:line="75" pos:column="53">1<pos:position pos:line="75" pos:column="54"/></literal></expr>)<pos:position pos:line="75" pos:column="55"/></condition><then pos:line="75" pos:column="55"> <block pos:line="75" pos:column="56">{
        <expr_stmt><expr><call><name pos:line="76" pos:column="9">apr_set_option<pos:position pos:line="76" pos:column="23"/></name><argument_list pos:line="76" pos:column="23">(<argument><expr><operator pos:line="76" pos:column="24">*<pos:position pos:line="76" pos:column="25"/></operator><operator pos:line="76" pos:column="25">new<pos:position pos:line="76" pos:column="28"/></operator></expr></argument>, <argument><expr><name pos:line="76" pos:column="30">APR_SO_NONBLOCK<pos:position pos:line="76" pos:column="45"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="76" pos:column="47">1<pos:position pos:line="76" pos:column="48"/></literal></expr></argument>)<pos:position pos:line="76" pos:column="49"/></argument_list></call></expr>;<pos:position pos:line="76" pos:column="50"/></expr_stmt>
    }<pos:position pos:line="77" pos:column="6"/></block></then></if>
<cpp:endif pos:line="78" pos:column="1">#<cpp:directive pos:line="78" pos:column="2">endif<pos:position pos:line="78" pos:column="7"/></cpp:directive></cpp:endif> <comment type="block" pos:line="78" pos:column="8">/* APR_O_NONBLOCK_INHERITED */</comment>

    <if pos:line="80" pos:column="5">if <condition pos:line="80" pos:column="8">(<expr><name><name pos:line="80" pos:column="9">sock<pos:position pos:line="80" pos:column="13"/></name><operator pos:line="80" pos:column="13">-&gt;<pos:position pos:line="80" pos:column="18"/></operator><name pos:line="80" pos:column="15">local_interface_unknown<pos:position pos:line="80" pos:column="38"/></name></name> <operator pos:line="80" pos:column="39">||<pos:position pos:line="80" pos:column="41"/></operator>
        <operator pos:line="81" pos:column="9">!<pos:position pos:line="81" pos:column="10"/></operator><call><name pos:line="81" pos:column="10">memcmp<pos:position pos:line="81" pos:column="16"/></name><argument_list pos:line="81" pos:column="16">(<argument><expr><name><name pos:line="81" pos:column="17">sock<pos:position pos:line="81" pos:column="21"/></name><operator pos:line="81" pos:column="21">-&gt;<pos:position pos:line="81" pos:column="26"/></operator><name pos:line="81" pos:column="23">local_addr<pos:position pos:line="81" pos:column="33"/></name><operator pos:line="81" pos:column="33">-&gt;<pos:position pos:line="81" pos:column="38"/></operator><name pos:line="81" pos:column="35">ipaddr_ptr<pos:position pos:line="81" pos:column="45"/></name></name></expr></argument>,
                <argument><expr><name pos:line="82" pos:column="17">generic_inaddr_any<pos:position pos:line="82" pos:column="35"/></name></expr></argument>,
                <argument><expr><name><name pos:line="83" pos:column="17">sock<pos:position pos:line="83" pos:column="21"/></name><operator pos:line="83" pos:column="21">-&gt;<pos:position pos:line="83" pos:column="26"/></operator><name pos:line="83" pos:column="23">local_addr<pos:position pos:line="83" pos:column="33"/></name><operator pos:line="83" pos:column="33">-&gt;<pos:position pos:line="83" pos:column="38"/></operator><name pos:line="83" pos:column="35">ipaddr_len<pos:position pos:line="83" pos:column="45"/></name></name></expr></argument>)<pos:position pos:line="83" pos:column="46"/></argument_list></call></expr>)<pos:position pos:line="83" pos:column="47"/></condition><then pos:line="83" pos:column="47"> <block pos:line="83" pos:column="48">{
        <comment type="block" pos:line="84" pos:column="9">/* If the interface address inside the listening socket's local_addr wasn't 
         * up-to-date, we don't know local interface of the connected socket either.
         *
         * If the listening socket was not bound to a specific interface, we
         * don't know the local_addr of the connected socket.
         */</comment>
        <expr_stmt><expr><operator pos:line="90" pos:column="9">(<pos:position pos:line="90" pos:column="10"/></operator><operator pos:line="90" pos:column="10">*<pos:position pos:line="90" pos:column="11"/></operator><operator pos:line="90" pos:column="11">new<pos:position pos:line="90" pos:column="14"/></operator><operator pos:line="90" pos:column="14">)<pos:position pos:line="90" pos:column="15"/></operator><operator pos:line="90" pos:column="15">-&gt;<pos:position pos:line="90" pos:column="20"/></operator><name pos:line="90" pos:column="17">local_interface_unknown<pos:position pos:line="90" pos:column="40"/></name> <operator pos:line="90" pos:column="41">=<pos:position pos:line="90" pos:column="42"/></operator> <literal type="number" pos:line="90" pos:column="43">1<pos:position pos:line="90" pos:column="44"/></literal></expr>;<pos:position pos:line="90" pos:column="45"/></expr_stmt>
    }<pos:position pos:line="91" pos:column="6"/></block></then></if>

<cpp:ifndef pos:line="93" pos:column="1">#<cpp:directive pos:line="93" pos:column="2">ifndef<pos:position pos:line="93" pos:column="8"/></cpp:directive> <name pos:line="93" pos:column="9">HAVE_ACCEPT4<pos:position pos:line="93" pos:column="21"/></name></cpp:ifndef>
    <block pos:line="94" pos:column="5">{
        <decl_stmt><decl><type><name pos:line="95" pos:column="9">int<pos:position pos:line="95" pos:column="12"/></name></type> <name pos:line="95" pos:column="13">flags<pos:position pos:line="95" pos:column="18"/></name></decl>;<pos:position pos:line="95" pos:column="19"/></decl_stmt>

        <if pos:line="97" pos:column="9">if <condition pos:line="97" pos:column="12">(<expr><operator pos:line="97" pos:column="13">(<pos:position pos:line="97" pos:column="14"/></operator><name pos:line="97" pos:column="14">flags<pos:position pos:line="97" pos:column="19"/></name> <operator pos:line="97" pos:column="20">=<pos:position pos:line="97" pos:column="21"/></operator> <call><name pos:line="97" pos:column="22">fcntl<pos:position pos:line="97" pos:column="27"/></name><argument_list pos:line="97" pos:column="27">(<argument><expr><operator pos:line="97" pos:column="28">(<pos:position pos:line="97" pos:column="29"/></operator><operator pos:line="97" pos:column="29">*<pos:position pos:line="97" pos:column="30"/></operator><operator pos:line="97" pos:column="30">new<pos:position pos:line="97" pos:column="33"/></operator><operator pos:line="97" pos:column="33">)<pos:position pos:line="97" pos:column="34"/></operator><operator pos:line="97" pos:column="34">-&gt;<pos:position pos:line="97" pos:column="39"/></operator><name pos:line="97" pos:column="36">socketdes<pos:position pos:line="97" pos:column="45"/></name></expr></argument>, <argument><expr><name pos:line="97" pos:column="47">F_GETFD<pos:position pos:line="97" pos:column="54"/></name></expr></argument>)<pos:position pos:line="97" pos:column="55"/></argument_list></call><operator pos:line="97" pos:column="55">)<pos:position pos:line="97" pos:column="56"/></operator> <operator pos:line="97" pos:column="57">==<pos:position pos:line="97" pos:column="59"/></operator> <operator pos:line="97" pos:column="60">-<pos:position pos:line="97" pos:column="61"/></operator><literal type="number" pos:line="97" pos:column="61">1<pos:position pos:line="97" pos:column="62"/></literal></expr>)<pos:position pos:line="97" pos:column="63"/></condition><then pos:line="97" pos:column="63">
            <block type="pseudo"><return pos:line="98" pos:column="13">return <expr><name pos:line="98" pos:column="20">errno<pos:position pos:line="98" pos:column="25"/></name></expr>;<pos:position pos:line="98" pos:column="26"/></return></block></then></if>

        <expr_stmt><expr><name pos:line="100" pos:column="9">flags<pos:position pos:line="100" pos:column="14"/></name> <operator pos:line="100" pos:column="15">|=<pos:position pos:line="100" pos:column="17"/></operator> <name pos:line="100" pos:column="18">FD_CLOEXEC<pos:position pos:line="100" pos:column="28"/></name></expr>;<pos:position pos:line="100" pos:column="29"/></expr_stmt>
        <if pos:line="101" pos:column="9">if <condition pos:line="101" pos:column="12">(<expr><call><name pos:line="101" pos:column="13">fcntl<pos:position pos:line="101" pos:column="18"/></name><argument_list pos:line="101" pos:column="18">(<argument><expr><operator pos:line="101" pos:column="19">(<pos:position pos:line="101" pos:column="20"/></operator><operator pos:line="101" pos:column="20">*<pos:position pos:line="101" pos:column="21"/></operator><operator pos:line="101" pos:column="21">new<pos:position pos:line="101" pos:column="24"/></operator><operator pos:line="101" pos:column="24">)<pos:position pos:line="101" pos:column="25"/></operator><operator pos:line="101" pos:column="25">-&gt;<pos:position pos:line="101" pos:column="30"/></operator><name pos:line="101" pos:column="27">socketdes<pos:position pos:line="101" pos:column="36"/></name></expr></argument>, <argument><expr><name pos:line="101" pos:column="38">F_SETFD<pos:position pos:line="101" pos:column="45"/></name></expr></argument>, <argument><expr><name pos:line="101" pos:column="47">flags<pos:position pos:line="101" pos:column="52"/></name></expr></argument>)<pos:position pos:line="101" pos:column="53"/></argument_list></call> <operator pos:line="101" pos:column="54">==<pos:position pos:line="101" pos:column="56"/></operator> <operator pos:line="101" pos:column="57">-<pos:position pos:line="101" pos:column="58"/></operator><literal type="number" pos:line="101" pos:column="58">1<pos:position pos:line="101" pos:column="59"/></literal></expr>)<pos:position pos:line="101" pos:column="60"/></condition><then pos:line="101" pos:column="60">
            <block type="pseudo"><return pos:line="102" pos:column="13">return <expr><name pos:line="102" pos:column="20">errno<pos:position pos:line="102" pos:column="25"/></name></expr>;<pos:position pos:line="102" pos:column="26"/></return></block></then></if>
    }<pos:position pos:line="103" pos:column="6"/></block>
<cpp:endif pos:line="104" pos:column="1">#<cpp:directive pos:line="104" pos:column="2">endif<pos:position pos:line="104" pos:column="7"/></cpp:directive></cpp:endif>

    <expr_stmt><expr><operator pos:line="106" pos:column="5">(<pos:position pos:line="106" pos:column="6"/></operator><operator pos:line="106" pos:column="6">*<pos:position pos:line="106" pos:column="7"/></operator><operator pos:line="106" pos:column="7">new<pos:position pos:line="106" pos:column="10"/></operator><operator pos:line="106" pos:column="10">)<pos:position pos:line="106" pos:column="11"/></operator><operator pos:line="106" pos:column="11">-&gt;<pos:position pos:line="106" pos:column="16"/></operator><name pos:line="106" pos:column="13">inherit<pos:position pos:line="106" pos:column="20"/></name> <operator pos:line="106" pos:column="21">=<pos:position pos:line="106" pos:column="22"/></operator> <literal type="number" pos:line="106" pos:column="23">0<pos:position pos:line="106" pos:column="24"/></literal></expr>;<pos:position pos:line="106" pos:column="25"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="107" pos:column="5">apr_pool_cleanup_register<pos:position pos:line="107" pos:column="30"/></name><argument_list pos:line="107" pos:column="30">(<argument><expr><operator pos:line="107" pos:column="31">(<pos:position pos:line="107" pos:column="32"/></operator><operator pos:line="107" pos:column="32">*<pos:position pos:line="107" pos:column="33"/></operator><operator pos:line="107" pos:column="33">new<pos:position pos:line="107" pos:column="36"/></operator><operator pos:line="107" pos:column="36">)<pos:position pos:line="107" pos:column="37"/></operator><operator pos:line="107" pos:column="37">-&gt;<pos:position pos:line="107" pos:column="42"/></operator><name pos:line="107" pos:column="39">pool<pos:position pos:line="107" pos:column="43"/></name></expr></argument>, <argument><expr><operator pos:line="107" pos:column="45">(<pos:position pos:line="107" pos:column="46"/></operator><name pos:line="107" pos:column="46">void<pos:position pos:line="107" pos:column="50"/></name> <operator pos:line="107" pos:column="51">*<pos:position pos:line="107" pos:column="52"/></operator><operator pos:line="107" pos:column="52">)<pos:position pos:line="107" pos:column="53"/></operator><operator pos:line="107" pos:column="53">(<pos:position pos:line="107" pos:column="54"/></operator><operator pos:line="107" pos:column="54">*<pos:position pos:line="107" pos:column="55"/></operator><operator pos:line="107" pos:column="55">new<pos:position pos:line="107" pos:column="58"/></operator><operator pos:line="107" pos:column="58">)<pos:position pos:line="107" pos:column="59"/></operator></expr></argument>, <argument><expr><name pos:line="107" pos:column="61">socket_cleanup<pos:position pos:line="107" pos:column="75"/></name></expr></argument>,
                              <argument><expr><name pos:line="108" pos:column="31">socket_cleanup<pos:position pos:line="108" pos:column="45"/></name></expr></argument>)<pos:position pos:line="108" pos:column="46"/></argument_list></call></expr>;<pos:position pos:line="108" pos:column="47"/></expr_stmt>
    <return pos:line="109" pos:column="5">return <expr><name pos:line="109" pos:column="12">APR_SUCCESS<pos:position pos:line="109" pos:column="23"/></name></expr>;<pos:position pos:line="109" pos:column="24"/></return>
}</unit>

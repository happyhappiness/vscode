<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/httpd/gumtree/httpd_repos_function_4082_httpd-2.4.17.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">int<pos:position pos:line="1" pos:column="11"/></name></type> <name pos:line="1" pos:column="12">mpmt_os2_run<pos:position pos:line="1" pos:column="24"/></name><parameter_list pos:line="1" pos:column="24">(<parameter><decl><type><name pos:line="1" pos:column="25">apr_pool_t<pos:position pos:line="1" pos:column="35"/></name> <modifier pos:line="1" pos:column="36">*<pos:position pos:line="1" pos:column="37"/></modifier></type><name pos:line="1" pos:column="37">_pconf<pos:position pos:line="1" pos:column="43"/></name></decl></parameter>, <parameter><decl><type><name pos:line="1" pos:column="45">apr_pool_t<pos:position pos:line="1" pos:column="55"/></name> <modifier pos:line="1" pos:column="56">*<pos:position pos:line="1" pos:column="57"/></modifier></type><name pos:line="1" pos:column="57">plog<pos:position pos:line="1" pos:column="61"/></name></decl></parameter>, <parameter><decl><type><name pos:line="1" pos:column="63">server_rec<pos:position pos:line="1" pos:column="73"/></name> <modifier pos:line="1" pos:column="74">*<pos:position pos:line="1" pos:column="75"/></modifier></type><name pos:line="1" pos:column="75">s<pos:position pos:line="1" pos:column="76"/></name></decl></parameter> )<pos:position pos:line="1" pos:column="78"/></parameter_list>
<block pos:line="2" pos:column="1">{
    <decl_stmt><decl><type><name pos:line="3" pos:column="5">char<pos:position pos:line="3" pos:column="9"/></name> <modifier pos:line="3" pos:column="10">*<pos:position pos:line="3" pos:column="11"/></modifier></type><name pos:line="3" pos:column="11">listener_shm_name<pos:position pos:line="3" pos:column="28"/></name></decl>;<pos:position pos:line="3" pos:column="29"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="4" pos:column="5">parent_info_t<pos:position pos:line="4" pos:column="18"/></name> <modifier pos:line="4" pos:column="19">*<pos:position pos:line="4" pos:column="20"/></modifier></type><name pos:line="4" pos:column="20">parent_info<pos:position pos:line="4" pos:column="31"/></name></decl>;<pos:position pos:line="4" pos:column="32"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="5" pos:column="5">ULONG<pos:position pos:line="5" pos:column="10"/></name></type> <name pos:line="5" pos:column="11">rc<pos:position pos:line="5" pos:column="13"/></name></decl>;<pos:position pos:line="5" pos:column="14"/></decl_stmt>
    <expr_stmt><expr><name pos:line="6" pos:column="5">pconf<pos:position pos:line="6" pos:column="10"/></name> <operator pos:line="6" pos:column="11">=<pos:position pos:line="6" pos:column="12"/></operator> <name pos:line="6" pos:column="13">_pconf<pos:position pos:line="6" pos:column="19"/></name></expr>;<pos:position pos:line="6" pos:column="20"/></expr_stmt>
    <expr_stmt><expr><name pos:line="7" pos:column="5">ap_server_conf<pos:position pos:line="7" pos:column="19"/></name> <operator pos:line="7" pos:column="20">=<pos:position pos:line="7" pos:column="21"/></operator> <name pos:line="7" pos:column="22">s<pos:position pos:line="7" pos:column="23"/></name></expr>;<pos:position pos:line="7" pos:column="24"/></expr_stmt>
    <expr_stmt><expr><name pos:line="8" pos:column="5">restart_pending<pos:position pos:line="8" pos:column="20"/></name> <operator pos:line="8" pos:column="21">=<pos:position pos:line="8" pos:column="22"/></operator> <literal type="number" pos:line="8" pos:column="23">0<pos:position pos:line="8" pos:column="24"/></literal></expr>;<pos:position pos:line="8" pos:column="25"/></expr_stmt>

    <expr_stmt><expr><call><name pos:line="10" pos:column="5">DosSetMaxFH<pos:position pos:line="10" pos:column="16"/></name><argument_list pos:line="10" pos:column="16">(<argument><expr><name pos:line="10" pos:column="17">ap_thread_limit<pos:position pos:line="10" pos:column="32"/></name> <operator pos:line="10" pos:column="33">*<pos:position pos:line="10" pos:column="34"/></operator> <literal type="number" pos:line="10" pos:column="35">2<pos:position pos:line="10" pos:column="36"/></literal></expr></argument>)<pos:position pos:line="10" pos:column="37"/></argument_list></call></expr>;<pos:position pos:line="10" pos:column="38"/></expr_stmt>
    <expr_stmt><expr><name pos:line="11" pos:column="5">listener_shm_name<pos:position pos:line="11" pos:column="22"/></name> <operator pos:line="11" pos:column="23">=<pos:position pos:line="11" pos:column="24"/></operator> <call><name pos:line="11" pos:column="25">apr_psprintf<pos:position pos:line="11" pos:column="37"/></name><argument_list pos:line="11" pos:column="37">(<argument><expr><name pos:line="11" pos:column="38">pconf<pos:position pos:line="11" pos:column="43"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="11" pos:column="45">"/sharemem/httpd/parent_info.%d"<pos:position pos:line="11" pos:column="77"/></literal></expr></argument>, <argument><expr><call><name pos:line="11" pos:column="79">getppid<pos:position pos:line="11" pos:column="86"/></name><argument_list pos:line="11" pos:column="86">()<pos:position pos:line="11" pos:column="88"/></argument_list></call></expr></argument>)<pos:position pos:line="11" pos:column="89"/></argument_list></call></expr>;<pos:position pos:line="11" pos:column="90"/></expr_stmt>
    <expr_stmt><expr><name pos:line="12" pos:column="5">rc<pos:position pos:line="12" pos:column="7"/></name> <operator pos:line="12" pos:column="8">=<pos:position pos:line="12" pos:column="9"/></operator> <call><name pos:line="12" pos:column="10">DosGetNamedSharedMem<pos:position pos:line="12" pos:column="30"/></name><argument_list pos:line="12" pos:column="30">(<argument><expr><operator pos:line="12" pos:column="31">(<pos:position pos:line="12" pos:column="32"/></operator><name pos:line="12" pos:column="32">PPVOID<pos:position pos:line="12" pos:column="38"/></name><operator pos:line="12" pos:column="38">)<pos:position pos:line="12" pos:column="39"/></operator><operator pos:line="12" pos:column="39">&amp;<pos:position pos:line="12" pos:column="44"/></operator><name pos:line="12" pos:column="40">parent_info<pos:position pos:line="12" pos:column="51"/></name></expr></argument>, <argument><expr><name pos:line="12" pos:column="53">listener_shm_name<pos:position pos:line="12" pos:column="70"/></name></expr></argument>, <argument><expr><name pos:line="12" pos:column="72">PAG_READ<pos:position pos:line="12" pos:column="80"/></name></expr></argument>)<pos:position pos:line="12" pos:column="81"/></argument_list></call></expr>;<pos:position pos:line="12" pos:column="82"/></expr_stmt>
    <expr_stmt><expr><name pos:line="13" pos:column="5">is_parent_process<pos:position pos:line="13" pos:column="22"/></name> <operator pos:line="13" pos:column="23">=<pos:position pos:line="13" pos:column="24"/></operator> <name pos:line="13" pos:column="25">rc<pos:position pos:line="13" pos:column="27"/></name> <operator pos:line="13" pos:column="28">!=<pos:position pos:line="13" pos:column="30"/></operator> <literal type="number" pos:line="13" pos:column="31">0<pos:position pos:line="13" pos:column="32"/></literal></expr>;<pos:position pos:line="13" pos:column="33"/></expr_stmt>
    <expr_stmt><expr><name pos:line="14" pos:column="5">ap_scoreboard_fname<pos:position pos:line="14" pos:column="24"/></name> <operator pos:line="14" pos:column="25">=<pos:position pos:line="14" pos:column="26"/></operator> <call><name pos:line="14" pos:column="27">apr_psprintf<pos:position pos:line="14" pos:column="39"/></name><argument_list pos:line="14" pos:column="39">(<argument><expr><name pos:line="14" pos:column="40">pconf<pos:position pos:line="14" pos:column="45"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="14" pos:column="47">"/sharemem/httpd/scoreboard.%d"<pos:position pos:line="14" pos:column="78"/></literal></expr></argument>, <argument><expr><ternary><condition><expr><name pos:line="14" pos:column="80">is_parent_process<pos:position pos:line="14" pos:column="97"/></name></expr> ?<pos:position pos:line="14" pos:column="99"/></condition><then pos:line="14" pos:column="99"> <expr><call><name pos:line="14" pos:column="100">getpid<pos:position pos:line="14" pos:column="106"/></name><argument_list pos:line="14" pos:column="106">()<pos:position pos:line="14" pos:column="108"/></argument_list></call></expr> <pos:position pos:line="14" pos:column="109"/></then><else pos:line="14" pos:column="109">: <expr><call><name pos:line="14" pos:column="111">getppid<pos:position pos:line="14" pos:column="118"/></name><argument_list pos:line="14" pos:column="118">()<pos:position pos:line="14" pos:column="120"/></argument_list></call></expr></else></ternary></expr></argument>)<pos:position pos:line="14" pos:column="121"/></argument_list></call></expr>;<pos:position pos:line="14" pos:column="122"/></expr_stmt>

    <if pos:line="16" pos:column="5">if <condition pos:line="16" pos:column="8">(<expr><name pos:line="16" pos:column="9">rc<pos:position pos:line="16" pos:column="11"/></name> <operator pos:line="16" pos:column="12">==<pos:position pos:line="16" pos:column="14"/></operator> <literal type="number" pos:line="16" pos:column="15">0<pos:position pos:line="16" pos:column="16"/></literal></expr>)<pos:position pos:line="16" pos:column="17"/></condition><then pos:line="16" pos:column="17"> <block pos:line="16" pos:column="18">{
        <comment type="block" pos:line="17" pos:column="9">/* Child process */</comment>
        <decl_stmt><decl><type><name pos:line="18" pos:column="9">ap_listen_rec<pos:position pos:line="18" pos:column="22"/></name> <modifier pos:line="18" pos:column="23">*<pos:position pos:line="18" pos:column="24"/></modifier></type><name pos:line="18" pos:column="24">lr<pos:position pos:line="18" pos:column="26"/></name></decl>;<pos:position pos:line="18" pos:column="27"/></decl_stmt>
        <decl_stmt><decl><type><name pos:line="19" pos:column="9">int<pos:position pos:line="19" pos:column="12"/></name></type> <name pos:line="19" pos:column="13">num_listeners<pos:position pos:line="19" pos:column="26"/></name> <init pos:line="19" pos:column="27">= <expr><literal type="number" pos:line="19" pos:column="29">0<pos:position pos:line="19" pos:column="30"/></literal></expr></init></decl>;<pos:position pos:line="19" pos:column="31"/></decl_stmt>

        <expr_stmt><expr><name pos:line="21" pos:column="9">ap_mpm_accept_mutex<pos:position pos:line="21" pos:column="28"/></name> <operator pos:line="21" pos:column="29">=<pos:position pos:line="21" pos:column="30"/></operator> <name><name pos:line="21" pos:column="31">parent_info<pos:position pos:line="21" pos:column="42"/></name><operator pos:line="21" pos:column="42">-&gt;<pos:position pos:line="21" pos:column="47"/></operator><name pos:line="21" pos:column="44">accept_mutex<pos:position pos:line="21" pos:column="56"/></name></name></expr>;<pos:position pos:line="21" pos:column="57"/></expr_stmt>

        <comment type="block" pos:line="23" pos:column="9">/* Set up a default listener if necessary */</comment>
        <if pos:line="24" pos:column="9">if <condition pos:line="24" pos:column="12">(<expr><name pos:line="24" pos:column="13">ap_listeners<pos:position pos:line="24" pos:column="25"/></name> <operator pos:line="24" pos:column="26">==<pos:position pos:line="24" pos:column="28"/></operator> <name pos:line="24" pos:column="29">NULL<pos:position pos:line="24" pos:column="33"/></name></expr>)<pos:position pos:line="24" pos:column="34"/></condition><then pos:line="24" pos:column="34"> <block pos:line="24" pos:column="35">{
            <decl_stmt><decl><type><name pos:line="25" pos:column="13">ap_listen_rec<pos:position pos:line="25" pos:column="26"/></name> <modifier pos:line="25" pos:column="27">*<pos:position pos:line="25" pos:column="28"/></modifier></type><name pos:line="25" pos:column="28">lr<pos:position pos:line="25" pos:column="30"/></name> <init pos:line="25" pos:column="31">= <expr><call><name pos:line="25" pos:column="33">apr_pcalloc<pos:position pos:line="25" pos:column="44"/></name><argument_list pos:line="25" pos:column="44">(<argument><expr><name><name pos:line="25" pos:column="45">s<pos:position pos:line="25" pos:column="46"/></name><operator pos:line="25" pos:column="46">-&gt;<pos:position pos:line="25" pos:column="51"/></operator><name pos:line="25" pos:column="48">process<pos:position pos:line="25" pos:column="55"/></name><operator pos:line="25" pos:column="55">-&gt;<pos:position pos:line="25" pos:column="60"/></operator><name pos:line="25" pos:column="57">pool<pos:position pos:line="25" pos:column="61"/></name></name></expr></argument>, <argument><expr><sizeof pos:line="25" pos:column="63">sizeof<argument_list pos:line="25" pos:column="69">(<argument><expr><name pos:line="25" pos:column="70">ap_listen_rec<pos:position pos:line="25" pos:column="83"/></name></expr></argument>)<pos:position pos:line="25" pos:column="84"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="25" pos:column="85"/></argument_list></call></expr></init></decl>;<pos:position pos:line="25" pos:column="86"/></decl_stmt>
            <expr_stmt><expr><name pos:line="26" pos:column="13">ap_listeners<pos:position pos:line="26" pos:column="25"/></name> <operator pos:line="26" pos:column="26">=<pos:position pos:line="26" pos:column="27"/></operator> <name pos:line="26" pos:column="28">lr<pos:position pos:line="26" pos:column="30"/></name></expr>;<pos:position pos:line="26" pos:column="31"/></expr_stmt>
            <expr_stmt><expr><call><name pos:line="27" pos:column="13">apr_sockaddr_info_get<pos:position pos:line="27" pos:column="34"/></name><argument_list pos:line="27" pos:column="34">(<argument><expr><operator pos:line="27" pos:column="35">&amp;<pos:position pos:line="27" pos:column="40"/></operator><name><name pos:line="27" pos:column="36">lr<pos:position pos:line="27" pos:column="38"/></name><operator pos:line="27" pos:column="38">-&gt;<pos:position pos:line="27" pos:column="43"/></operator><name pos:line="27" pos:column="40">bind_addr<pos:position pos:line="27" pos:column="49"/></name></name></expr></argument>, <argument><expr><literal type="string" pos:line="27" pos:column="51">"0.0.0.0"<pos:position pos:line="27" pos:column="60"/></literal></expr></argument>, <argument><expr><name pos:line="27" pos:column="62">APR_UNSPEC<pos:position pos:line="27" pos:column="72"/></name></expr></argument>,
                                  <argument><expr><name pos:line="28" pos:column="35">DEFAULT_HTTP_PORT<pos:position pos:line="28" pos:column="52"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="28" pos:column="54">0<pos:position pos:line="28" pos:column="55"/></literal></expr></argument>, <argument><expr><name><name pos:line="28" pos:column="57">s<pos:position pos:line="28" pos:column="58"/></name><operator pos:line="28" pos:column="58">-&gt;<pos:position pos:line="28" pos:column="63"/></operator><name pos:line="28" pos:column="60">process<pos:position pos:line="28" pos:column="67"/></name><operator pos:line="28" pos:column="67">-&gt;<pos:position pos:line="28" pos:column="72"/></operator><name pos:line="28" pos:column="69">pool<pos:position pos:line="28" pos:column="73"/></name></name></expr></argument>)<pos:position pos:line="28" pos:column="74"/></argument_list></call></expr>;<pos:position pos:line="28" pos:column="75"/></expr_stmt>
            <expr_stmt><expr><call><name pos:line="29" pos:column="13">apr_socket_create<pos:position pos:line="29" pos:column="30"/></name><argument_list pos:line="29" pos:column="30">(<argument><expr><operator pos:line="29" pos:column="31">&amp;<pos:position pos:line="29" pos:column="36"/></operator><name><name pos:line="29" pos:column="32">lr<pos:position pos:line="29" pos:column="34"/></name><operator pos:line="29" pos:column="34">-&gt;<pos:position pos:line="29" pos:column="39"/></operator><name pos:line="29" pos:column="36">sd<pos:position pos:line="29" pos:column="38"/></name></name></expr></argument>, <argument><expr><name><name pos:line="29" pos:column="40">lr<pos:position pos:line="29" pos:column="42"/></name><operator pos:line="29" pos:column="42">-&gt;<pos:position pos:line="29" pos:column="47"/></operator><name pos:line="29" pos:column="44">bind_addr<pos:position pos:line="29" pos:column="53"/></name><operator pos:line="29" pos:column="53">-&gt;<pos:position pos:line="29" pos:column="58"/></operator><name pos:line="29" pos:column="55">family<pos:position pos:line="29" pos:column="61"/></name></name></expr></argument>,
                              <argument><expr><name pos:line="30" pos:column="31">SOCK_STREAM<pos:position pos:line="30" pos:column="42"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="30" pos:column="44">0<pos:position pos:line="30" pos:column="45"/></literal></expr></argument>, <argument><expr><name><name pos:line="30" pos:column="47">s<pos:position pos:line="30" pos:column="48"/></name><operator pos:line="30" pos:column="48">-&gt;<pos:position pos:line="30" pos:column="53"/></operator><name pos:line="30" pos:column="50">process<pos:position pos:line="30" pos:column="57"/></name><operator pos:line="30" pos:column="57">-&gt;<pos:position pos:line="30" pos:column="62"/></operator><name pos:line="30" pos:column="59">pool<pos:position pos:line="30" pos:column="63"/></name></name></expr></argument>)<pos:position pos:line="30" pos:column="64"/></argument_list></call></expr>;<pos:position pos:line="30" pos:column="65"/></expr_stmt>
        }<pos:position pos:line="31" pos:column="10"/></block></then></if>

        <for pos:line="33" pos:column="9">for <control pos:line="33" pos:column="13">(<init><expr><name pos:line="33" pos:column="14">lr<pos:position pos:line="33" pos:column="16"/></name> <operator pos:line="33" pos:column="17">=<pos:position pos:line="33" pos:column="18"/></operator> <name pos:line="33" pos:column="19">ap_listeners<pos:position pos:line="33" pos:column="31"/></name></expr>;<pos:position pos:line="33" pos:column="32"/></init> <condition><expr><name pos:line="33" pos:column="33">lr<pos:position pos:line="33" pos:column="35"/></name></expr>;<pos:position pos:line="33" pos:column="36"/></condition> <incr><expr><name pos:line="33" pos:column="37">lr<pos:position pos:line="33" pos:column="39"/></name> <operator pos:line="33" pos:column="40">=<pos:position pos:line="33" pos:column="41"/></operator> <name><name pos:line="33" pos:column="42">lr<pos:position pos:line="33" pos:column="44"/></name><operator pos:line="33" pos:column="44">-&gt;<pos:position pos:line="33" pos:column="49"/></operator><name pos:line="33" pos:column="46">next<pos:position pos:line="33" pos:column="50"/></name></name></expr></incr>)<pos:position pos:line="33" pos:column="51"/></control> <block pos:line="33" pos:column="52">{
            <decl_stmt><decl><type><name pos:line="34" pos:column="13">apr_sockaddr_t<pos:position pos:line="34" pos:column="27"/></name> <modifier pos:line="34" pos:column="28">*<pos:position pos:line="34" pos:column="29"/></modifier></type><name pos:line="34" pos:column="29">sa<pos:position pos:line="34" pos:column="31"/></name></decl>;<pos:position pos:line="34" pos:column="32"/></decl_stmt>
            <expr_stmt><expr><call><name pos:line="35" pos:column="13">apr_os_sock_put<pos:position pos:line="35" pos:column="28"/></name><argument_list pos:line="35" pos:column="28">(<argument><expr><operator pos:line="35" pos:column="29">&amp;<pos:position pos:line="35" pos:column="34"/></operator><name><name pos:line="35" pos:column="30">lr<pos:position pos:line="35" pos:column="32"/></name><operator pos:line="35" pos:column="32">-&gt;<pos:position pos:line="35" pos:column="37"/></operator><name pos:line="35" pos:column="34">sd<pos:position pos:line="35" pos:column="36"/></name></name></expr></argument>, <argument><expr><operator pos:line="35" pos:column="38">&amp;<pos:position pos:line="35" pos:column="43"/></operator><name><name pos:line="35" pos:column="39">parent_info<pos:position pos:line="35" pos:column="50"/></name><operator pos:line="35" pos:column="50">-&gt;<pos:position pos:line="35" pos:column="55"/></operator><name pos:line="35" pos:column="52">listeners<pos:position pos:line="35" pos:column="61"/></name><index pos:line="35" pos:column="61">[<expr><name pos:line="35" pos:column="62">num_listeners<pos:position pos:line="35" pos:column="75"/></name></expr>]<pos:position pos:line="35" pos:column="76"/></index></name><operator pos:line="35" pos:column="76">.<pos:position pos:line="35" pos:column="77"/></operator><name pos:line="35" pos:column="77">listen_fd<pos:position pos:line="35" pos:column="86"/></name></expr></argument>, <argument><expr><name pos:line="35" pos:column="88">pconf<pos:position pos:line="35" pos:column="93"/></name></expr></argument>)<pos:position pos:line="35" pos:column="94"/></argument_list></call></expr>;<pos:position pos:line="35" pos:column="95"/></expr_stmt>
            <expr_stmt><expr><call><name pos:line="36" pos:column="13">apr_socket_addr_get<pos:position pos:line="36" pos:column="32"/></name><argument_list pos:line="36" pos:column="32">(<argument><expr><operator pos:line="36" pos:column="33">&amp;<pos:position pos:line="36" pos:column="38"/></operator><name pos:line="36" pos:column="34">sa<pos:position pos:line="36" pos:column="36"/></name></expr></argument>, <argument><expr><name pos:line="36" pos:column="38">APR_LOCAL<pos:position pos:line="36" pos:column="47"/></name></expr></argument>, <argument><expr><name><name pos:line="36" pos:column="49">lr<pos:position pos:line="36" pos:column="51"/></name><operator pos:line="36" pos:column="51">-&gt;<pos:position pos:line="36" pos:column="56"/></operator><name pos:line="36" pos:column="53">sd<pos:position pos:line="36" pos:column="55"/></name></name></expr></argument>)<pos:position pos:line="36" pos:column="56"/></argument_list></call></expr>;<pos:position pos:line="36" pos:column="57"/></expr_stmt>
            <expr_stmt><expr><name pos:line="37" pos:column="13">num_listeners<pos:position pos:line="37" pos:column="26"/></name><operator pos:line="37" pos:column="26">++<pos:position pos:line="37" pos:column="28"/></operator></expr>;<pos:position pos:line="37" pos:column="29"/></expr_stmt>
        }<pos:position pos:line="38" pos:column="10"/></block></for>

        <expr_stmt><expr><call><name pos:line="40" pos:column="9">DosFreeMem<pos:position pos:line="40" pos:column="19"/></name><argument_list pos:line="40" pos:column="19">(<argument><expr><name pos:line="40" pos:column="20">parent_info<pos:position pos:line="40" pos:column="31"/></name></expr></argument>)<pos:position pos:line="40" pos:column="32"/></argument_list></call></expr>;<pos:position pos:line="40" pos:column="33"/></expr_stmt>

        <comment type="block" pos:line="42" pos:column="9">/* Do the work */</comment>
        <expr_stmt><expr><call><name pos:line="43" pos:column="9">ap_mpm_child_main<pos:position pos:line="43" pos:column="26"/></name><argument_list pos:line="43" pos:column="26">(<argument><expr><name pos:line="43" pos:column="27">pconf<pos:position pos:line="43" pos:column="32"/></name></expr></argument>)<pos:position pos:line="43" pos:column="33"/></argument_list></call></expr>;<pos:position pos:line="43" pos:column="34"/></expr_stmt>

        <comment type="block" pos:line="45" pos:column="9">/* Outta here */</comment>
        <return pos:line="46" pos:column="9">return <expr><literal type="number" pos:line="46" pos:column="16">1<pos:position pos:line="46" pos:column="17"/></literal></expr>;<pos:position pos:line="46" pos:column="18"/></return>
    }<pos:position pos:line="47" pos:column="6"/></block></then>
    <else pos:line="48" pos:column="5">else <block pos:line="48" pos:column="10">{
        <comment type="block" pos:line="49" pos:column="9">/* Parent process */</comment>
        <decl_stmt><decl><type><name pos:line="50" pos:column="9">char<pos:position pos:line="50" pos:column="13"/></name></type> <name pos:line="50" pos:column="14">restart<pos:position pos:line="50" pos:column="21"/></name></decl>;<pos:position pos:line="50" pos:column="22"/></decl_stmt>
        <expr_stmt><expr><name pos:line="51" pos:column="9">is_parent_process<pos:position pos:line="51" pos:column="26"/></name> <operator pos:line="51" pos:column="27">=<pos:position pos:line="51" pos:column="28"/></operator> <name pos:line="51" pos:column="29">TRUE<pos:position pos:line="51" pos:column="33"/></name></expr>;<pos:position pos:line="51" pos:column="34"/></expr_stmt>

        <if pos:line="53" pos:column="9">if <condition pos:line="53" pos:column="12">(<expr><call><name pos:line="53" pos:column="13">ap_setup_listeners<pos:position pos:line="53" pos:column="31"/></name><argument_list pos:line="53" pos:column="31">(<argument><expr><name pos:line="53" pos:column="32">ap_server_conf<pos:position pos:line="53" pos:column="46"/></name></expr></argument>)<pos:position pos:line="53" pos:column="47"/></argument_list></call> <operator pos:line="53" pos:column="48">&lt;<pos:position pos:line="53" pos:column="52"/></operator> <literal type="number" pos:line="53" pos:column="50">1<pos:position pos:line="53" pos:column="51"/></literal></expr>)<pos:position pos:line="53" pos:column="52"/></condition><then pos:line="53" pos:column="52"> <block pos:line="53" pos:column="53">{
            <expr_stmt><expr><call><name pos:line="54" pos:column="13">ap_log_error<pos:position pos:line="54" pos:column="25"/></name><argument_list pos:line="54" pos:column="25">(<argument><expr><name pos:line="54" pos:column="26">APLOG_MARK<pos:position pos:line="54" pos:column="36"/></name></expr></argument>, <argument><expr><name pos:line="54" pos:column="38">APLOG_ALERT<pos:position pos:line="54" pos:column="49"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="54" pos:column="51">0<pos:position pos:line="54" pos:column="52"/></literal></expr></argument>, <argument><expr><name pos:line="54" pos:column="54">s<pos:position pos:line="54" pos:column="55"/></name></expr></argument>, <argument><expr><call><name pos:line="54" pos:column="57">APLOGNO<pos:position pos:line="54" pos:column="64"/></name><argument_list pos:line="54" pos:column="64">(<argument><expr><literal type="number" pos:line="54" pos:column="65">00200<pos:position pos:line="54" pos:column="70"/></literal></expr></argument>)<pos:position pos:line="54" pos:column="71"/></argument_list></call>
                         <literal type="string" pos:line="55" pos:column="26">"no listening sockets available, shutting down"<pos:position pos:line="55" pos:column="73"/></literal></expr></argument>)<pos:position pos:line="55" pos:column="74"/></argument_list></call></expr>;<pos:position pos:line="55" pos:column="75"/></expr_stmt>
            <return pos:line="56" pos:column="13">return <expr><literal type="number" pos:line="56" pos:column="20">1<pos:position pos:line="56" pos:column="21"/></literal></expr>;<pos:position pos:line="56" pos:column="22"/></return>
        }<pos:position pos:line="57" pos:column="10"/></block></then></if>

        <expr_stmt><expr><call><name pos:line="59" pos:column="9">ap_log_pid<pos:position pos:line="59" pos:column="19"/></name><argument_list pos:line="59" pos:column="19">(<argument><expr><name pos:line="59" pos:column="20">pconf<pos:position pos:line="59" pos:column="25"/></name></expr></argument>, <argument><expr><name pos:line="59" pos:column="27">ap_pid_fname<pos:position pos:line="59" pos:column="39"/></name></expr></argument>)<pos:position pos:line="59" pos:column="40"/></argument_list></call></expr>;<pos:position pos:line="59" pos:column="41"/></expr_stmt>

        <expr_stmt><expr><name pos:line="61" pos:column="9">restart<pos:position pos:line="61" pos:column="16"/></name> <operator pos:line="61" pos:column="17">=<pos:position pos:line="61" pos:column="18"/></operator> <call><name pos:line="61" pos:column="19">master_main<pos:position pos:line="61" pos:column="30"/></name><argument_list pos:line="61" pos:column="30">()<pos:position pos:line="61" pos:column="32"/></argument_list></call></expr>;<pos:position pos:line="61" pos:column="33"/></expr_stmt>
        <expr_stmt><expr><operator pos:line="62" pos:column="9">++<pos:position pos:line="62" pos:column="11"/></operator><name pos:line="62" pos:column="11">ap_my_generation<pos:position pos:line="62" pos:column="27"/></name></expr>;<pos:position pos:line="62" pos:column="28"/></expr_stmt>
        <expr_stmt><expr><name><name pos:line="63" pos:column="9">ap_scoreboard_image<pos:position pos:line="63" pos:column="28"/></name><operator pos:line="63" pos:column="28">-&gt;<pos:position pos:line="63" pos:column="33"/></operator><name pos:line="63" pos:column="30">global<pos:position pos:line="63" pos:column="36"/></name><operator pos:line="63" pos:column="36">-&gt;<pos:position pos:line="63" pos:column="41"/></operator><name pos:line="63" pos:column="38">running_generation<pos:position pos:line="63" pos:column="56"/></name></name> <operator pos:line="63" pos:column="57">=<pos:position pos:line="63" pos:column="58"/></operator> <name pos:line="63" pos:column="59">ap_my_generation<pos:position pos:line="63" pos:column="75"/></name></expr>;<pos:position pos:line="63" pos:column="76"/></expr_stmt>

        <if pos:line="65" pos:column="9">if <condition pos:line="65" pos:column="12">(<expr><operator pos:line="65" pos:column="13">!<pos:position pos:line="65" pos:column="14"/></operator><name pos:line="65" pos:column="14">restart<pos:position pos:line="65" pos:column="21"/></name></expr>)<pos:position pos:line="65" pos:column="22"/></condition><then pos:line="65" pos:column="22"> <block pos:line="65" pos:column="23">{
            <expr_stmt><expr><call><name pos:line="66" pos:column="13">ap_remove_pid<pos:position pos:line="66" pos:column="26"/></name><argument_list pos:line="66" pos:column="26">(<argument><expr><name pos:line="66" pos:column="27">pconf<pos:position pos:line="66" pos:column="32"/></name></expr></argument>, <argument><expr><name pos:line="66" pos:column="34">ap_pid_fname<pos:position pos:line="66" pos:column="46"/></name></expr></argument>)<pos:position pos:line="66" pos:column="47"/></argument_list></call></expr>;<pos:position pos:line="66" pos:column="48"/></expr_stmt>
            <expr_stmt><expr><call><name pos:line="67" pos:column="13">ap_log_error<pos:position pos:line="67" pos:column="25"/></name><argument_list pos:line="67" pos:column="25">(<argument><expr><name pos:line="67" pos:column="26">APLOG_MARK<pos:position pos:line="67" pos:column="36"/></name></expr></argument>, <argument><expr><name pos:line="67" pos:column="38">APLOG_NOTICE<pos:position pos:line="67" pos:column="50"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="67" pos:column="52">0<pos:position pos:line="67" pos:column="53"/></literal></expr></argument>, <argument><expr><name pos:line="67" pos:column="55">ap_server_conf<pos:position pos:line="67" pos:column="69"/></name></expr></argument>, <argument><expr><call><name pos:line="67" pos:column="71">APLOGNO<pos:position pos:line="67" pos:column="78"/></name><argument_list pos:line="67" pos:column="78">(<argument><expr><literal type="number" pos:line="67" pos:column="79">00201<pos:position pos:line="67" pos:column="84"/></literal></expr></argument>)<pos:position pos:line="67" pos:column="85"/></argument_list></call>
                         <literal type="string" pos:line="68" pos:column="26">"caught SIGTERM, shutting down"<pos:position pos:line="68" pos:column="57"/></literal></expr></argument>)<pos:position pos:line="68" pos:column="58"/></argument_list></call></expr>;<pos:position pos:line="68" pos:column="59"/></expr_stmt>
            <return pos:line="69" pos:column="13">return <expr><literal type="number" pos:line="69" pos:column="20">1<pos:position pos:line="69" pos:column="21"/></literal></expr>;<pos:position pos:line="69" pos:column="22"/></return>
        }<pos:position pos:line="70" pos:column="10"/></block></then></if>
    }<pos:position pos:line="71" pos:column="6"/></block></else></if>  <comment type="block" pos:line="71" pos:column="8">/* Parent process */</comment>

    <return pos:line="73" pos:column="5">return <expr><literal type="number" pos:line="73" pos:column="12">0<pos:position pos:line="73" pos:column="13"/></literal></expr>;<pos:position pos:line="73" pos:column="14"/></return> <comment type="block" pos:line="73" pos:column="15">/* Restart */</comment>
}<pos:position pos:line="74" pos:column="2"/></block></function></unit>

<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/httpd/gumtree/httpd_repos_function_1958_httpd-2.0.61.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">apr_status_t<pos:position pos:line="1" pos:column="20"/></name></type> <name pos:line="1" pos:column="21">writev_it_all<pos:position pos:line="1" pos:column="34"/></name><parameter_list pos:line="1" pos:column="34">(<parameter><decl><type><name pos:line="1" pos:column="35">apr_socket_t<pos:position pos:line="1" pos:column="47"/></name> <modifier pos:line="1" pos:column="48">*<pos:position pos:line="1" pos:column="49"/></modifier></type><name pos:line="1" pos:column="49">s<pos:position pos:line="1" pos:column="50"/></name></decl></parameter>,
                                  <parameter><decl><type><name><name pos:line="2" pos:column="35">struct<pos:position pos:line="2" pos:column="41"/></name> <name pos:line="2" pos:column="42">iovec<pos:position pos:line="2" pos:column="47"/></name></name> <modifier pos:line="2" pos:column="48">*<pos:position pos:line="2" pos:column="49"/></modifier></type><name pos:line="2" pos:column="49">vec<pos:position pos:line="2" pos:column="52"/></name></decl></parameter>, <parameter><decl><type><name pos:line="2" pos:column="54">int<pos:position pos:line="2" pos:column="57"/></name></type> <name pos:line="2" pos:column="58">nvec<pos:position pos:line="2" pos:column="62"/></name></decl></parameter>,
                                  <parameter><decl><type><name pos:line="3" pos:column="35">apr_size_t<pos:position pos:line="3" pos:column="45"/></name></type> <name pos:line="3" pos:column="46">len<pos:position pos:line="3" pos:column="49"/></name></decl></parameter>, <parameter><decl><type><name pos:line="3" pos:column="51">apr_size_t<pos:position pos:line="3" pos:column="61"/></name> <modifier pos:line="3" pos:column="62">*<pos:position pos:line="3" pos:column="63"/></modifier></type><name pos:line="3" pos:column="63">nbytes<pos:position pos:line="3" pos:column="69"/></name></decl></parameter>)<pos:position pos:line="3" pos:column="70"/></parameter_list>
<block pos:line="4" pos:column="1">{
    <decl_stmt><decl><type><name pos:line="5" pos:column="5">apr_size_t<pos:position pos:line="5" pos:column="15"/></name></type> <name pos:line="5" pos:column="16">bytes_written<pos:position pos:line="5" pos:column="29"/></name> <init pos:line="5" pos:column="30">= <expr><literal type="number" pos:line="5" pos:column="32">0<pos:position pos:line="5" pos:column="33"/></literal></expr></init></decl>;<pos:position pos:line="5" pos:column="34"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="6" pos:column="5">apr_status_t<pos:position pos:line="6" pos:column="17"/></name></type> <name pos:line="6" pos:column="18">rv<pos:position pos:line="6" pos:column="20"/></name></decl>;<pos:position pos:line="6" pos:column="21"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="7" pos:column="5">apr_size_t<pos:position pos:line="7" pos:column="15"/></name></type> <name pos:line="7" pos:column="16">n<pos:position pos:line="7" pos:column="17"/></name> <init pos:line="7" pos:column="18">= <expr><name pos:line="7" pos:column="20">len<pos:position pos:line="7" pos:column="23"/></name></expr></init></decl>;<pos:position pos:line="7" pos:column="24"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="8" pos:column="5">int<pos:position pos:line="8" pos:column="8"/></name></type> <name pos:line="8" pos:column="9">i<pos:position pos:line="8" pos:column="10"/></name> <init pos:line="8" pos:column="11">= <expr><literal type="number" pos:line="8" pos:column="13">0<pos:position pos:line="8" pos:column="14"/></literal></expr></init></decl>;<pos:position pos:line="8" pos:column="15"/></decl_stmt>

    <expr_stmt><expr><operator pos:line="10" pos:column="5">*<pos:position pos:line="10" pos:column="6"/></operator><name pos:line="10" pos:column="6">nbytes<pos:position pos:line="10" pos:column="12"/></name> <operator pos:line="10" pos:column="13">=<pos:position pos:line="10" pos:column="14"/></operator> <literal type="number" pos:line="10" pos:column="15">0<pos:position pos:line="10" pos:column="16"/></literal></expr>;<pos:position pos:line="10" pos:column="17"/></expr_stmt>

    <comment type="block" pos:line="12" pos:column="5">/* XXX handle checking for non-blocking socket */</comment>
    <while pos:line="13" pos:column="5">while <condition pos:line="13" pos:column="11">(<expr><name pos:line="13" pos:column="12">bytes_written<pos:position pos:line="13" pos:column="25"/></name> <operator pos:line="13" pos:column="26">!=<pos:position pos:line="13" pos:column="28"/></operator> <name pos:line="13" pos:column="29">len<pos:position pos:line="13" pos:column="32"/></name></expr>)<pos:position pos:line="13" pos:column="33"/></condition> <block pos:line="13" pos:column="34">{
        <expr_stmt><expr><name pos:line="14" pos:column="9">rv<pos:position pos:line="14" pos:column="11"/></name> <operator pos:line="14" pos:column="12">=<pos:position pos:line="14" pos:column="13"/></operator> <call><name pos:line="14" pos:column="14">apr_sendv<pos:position pos:line="14" pos:column="23"/></name><argument_list pos:line="14" pos:column="23">(<argument><expr><name pos:line="14" pos:column="24">s<pos:position pos:line="14" pos:column="25"/></name></expr></argument>, <argument><expr><name pos:line="14" pos:column="27">vec<pos:position pos:line="14" pos:column="30"/></name> <operator pos:line="14" pos:column="31">+<pos:position pos:line="14" pos:column="32"/></operator> <name pos:line="14" pos:column="33">i<pos:position pos:line="14" pos:column="34"/></name></expr></argument>, <argument><expr><name pos:line="14" pos:column="36">nvec<pos:position pos:line="14" pos:column="40"/></name> <operator pos:line="14" pos:column="41">-<pos:position pos:line="14" pos:column="42"/></operator> <name pos:line="14" pos:column="43">i<pos:position pos:line="14" pos:column="44"/></name></expr></argument>, <argument><expr><operator pos:line="14" pos:column="46">&amp;<pos:position pos:line="14" pos:column="51"/></operator><name pos:line="14" pos:column="47">n<pos:position pos:line="14" pos:column="48"/></name></expr></argument>)<pos:position pos:line="14" pos:column="49"/></argument_list></call></expr>;<pos:position pos:line="14" pos:column="50"/></expr_stmt>
        <expr_stmt><expr><name pos:line="15" pos:column="9">bytes_written<pos:position pos:line="15" pos:column="22"/></name> <operator pos:line="15" pos:column="23">+=<pos:position pos:line="15" pos:column="25"/></operator> <name pos:line="15" pos:column="26">n<pos:position pos:line="15" pos:column="27"/></name></expr>;<pos:position pos:line="15" pos:column="28"/></expr_stmt>
        <if pos:line="16" pos:column="9">if <condition pos:line="16" pos:column="12">(<expr><name pos:line="16" pos:column="13">rv<pos:position pos:line="16" pos:column="15"/></name> <operator pos:line="16" pos:column="16">!=<pos:position pos:line="16" pos:column="18"/></operator> <name pos:line="16" pos:column="19">APR_SUCCESS<pos:position pos:line="16" pos:column="30"/></name></expr>)<pos:position pos:line="16" pos:column="31"/></condition><then pos:line="16" pos:column="31">
            <block type="pseudo"><return pos:line="17" pos:column="13">return <expr><name pos:line="17" pos:column="20">rv<pos:position pos:line="17" pos:column="22"/></name></expr>;<pos:position pos:line="17" pos:column="23"/></return></block></then></if>

        <expr_stmt><expr><operator pos:line="19" pos:column="9">*<pos:position pos:line="19" pos:column="10"/></operator><name pos:line="19" pos:column="10">nbytes<pos:position pos:line="19" pos:column="16"/></name> <operator pos:line="19" pos:column="17">+=<pos:position pos:line="19" pos:column="19"/></operator> <name pos:line="19" pos:column="20">n<pos:position pos:line="19" pos:column="21"/></name></expr>;<pos:position pos:line="19" pos:column="22"/></expr_stmt>

        <comment type="block" pos:line="21" pos:column="9">/* If the write did not complete, adjust the iovecs and issue
         * apr_sendv again
         */</comment>
        <if pos:line="24" pos:column="9">if <condition pos:line="24" pos:column="12">(<expr><name pos:line="24" pos:column="13">bytes_written<pos:position pos:line="24" pos:column="26"/></name> <operator pos:line="24" pos:column="27">&lt;<pos:position pos:line="24" pos:column="31"/></operator> <name pos:line="24" pos:column="29">len<pos:position pos:line="24" pos:column="32"/></name></expr>)<pos:position pos:line="24" pos:column="33"/></condition><then pos:line="24" pos:column="33"> <block pos:line="24" pos:column="34">{
            <comment type="block" pos:line="25" pos:column="13">/* Skip over the vectors that have already been written */</comment>
            <decl_stmt><decl><type><name pos:line="26" pos:column="13">apr_size_t<pos:position pos:line="26" pos:column="23"/></name></type> <name pos:line="26" pos:column="24">cnt<pos:position pos:line="26" pos:column="27"/></name> <init pos:line="26" pos:column="28">= <expr><name><name pos:line="26" pos:column="30">vec<pos:position pos:line="26" pos:column="33"/></name><index pos:line="26" pos:column="33">[<expr><name pos:line="26" pos:column="34">i<pos:position pos:line="26" pos:column="35"/></name></expr>]<pos:position pos:line="26" pos:column="36"/></index></name><operator pos:line="26" pos:column="36">.<pos:position pos:line="26" pos:column="37"/></operator><name pos:line="26" pos:column="37">iov_len<pos:position pos:line="26" pos:column="44"/></name></expr></init></decl>;<pos:position pos:line="26" pos:column="45"/></decl_stmt>
            <while pos:line="27" pos:column="13">while <condition pos:line="27" pos:column="19">(<expr><name pos:line="27" pos:column="20">n<pos:position pos:line="27" pos:column="21"/></name> <operator pos:line="27" pos:column="22">&gt;=<pos:position pos:line="27" pos:column="27"/></operator> <name pos:line="27" pos:column="25">cnt<pos:position pos:line="27" pos:column="28"/></name> <operator pos:line="27" pos:column="29">&amp;&amp;<pos:position pos:line="27" pos:column="39"/></operator> <name pos:line="27" pos:column="32">i<pos:position pos:line="27" pos:column="33"/></name> <operator pos:line="27" pos:column="34">+<pos:position pos:line="27" pos:column="35"/></operator> <literal type="number" pos:line="27" pos:column="36">1<pos:position pos:line="27" pos:column="37"/></literal> <operator pos:line="27" pos:column="38">&lt;<pos:position pos:line="27" pos:column="42"/></operator> <name pos:line="27" pos:column="40">nvec<pos:position pos:line="27" pos:column="44"/></name></expr>)<pos:position pos:line="27" pos:column="45"/></condition> <block pos:line="27" pos:column="46">{
                <expr_stmt><expr><name pos:line="28" pos:column="17">i<pos:position pos:line="28" pos:column="18"/></name><operator pos:line="28" pos:column="18">++<pos:position pos:line="28" pos:column="20"/></operator></expr>;<pos:position pos:line="28" pos:column="21"/></expr_stmt>
                <expr_stmt><expr><name pos:line="29" pos:column="17">cnt<pos:position pos:line="29" pos:column="20"/></name> <operator pos:line="29" pos:column="21">+=<pos:position pos:line="29" pos:column="23"/></operator> <name><name pos:line="29" pos:column="24">vec<pos:position pos:line="29" pos:column="27"/></name><index pos:line="29" pos:column="27">[<expr><name pos:line="29" pos:column="28">i<pos:position pos:line="29" pos:column="29"/></name></expr>]<pos:position pos:line="29" pos:column="30"/></index></name><operator pos:line="29" pos:column="30">.<pos:position pos:line="29" pos:column="31"/></operator><name pos:line="29" pos:column="31">iov_len<pos:position pos:line="29" pos:column="38"/></name></expr>;<pos:position pos:line="29" pos:column="39"/></expr_stmt>
            }<pos:position pos:line="30" pos:column="14"/></block></while>

            <if pos:line="32" pos:column="13">if <condition pos:line="32" pos:column="16">(<expr><name pos:line="32" pos:column="17">n<pos:position pos:line="32" pos:column="18"/></name> <operator pos:line="32" pos:column="19">&lt;<pos:position pos:line="32" pos:column="23"/></operator> <name pos:line="32" pos:column="21">cnt<pos:position pos:line="32" pos:column="24"/></name></expr>)<pos:position pos:line="32" pos:column="25"/></condition><then pos:line="32" pos:column="25"> <block pos:line="32" pos:column="26">{
                <comment type="block" pos:line="33" pos:column="17">/* Handle partial write of vec i */</comment>
                <expr_stmt><expr><name><name pos:line="34" pos:column="17">vec<pos:position pos:line="34" pos:column="20"/></name><index pos:line="34" pos:column="20">[<expr><name pos:line="34" pos:column="21">i<pos:position pos:line="34" pos:column="22"/></name></expr>]<pos:position pos:line="34" pos:column="23"/></index></name><operator pos:line="34" pos:column="23">.<pos:position pos:line="34" pos:column="24"/></operator><name pos:line="34" pos:column="24">iov_base<pos:position pos:line="34" pos:column="32"/></name> <operator pos:line="34" pos:column="33">=<pos:position pos:line="34" pos:column="34"/></operator> <operator pos:line="34" pos:column="35">(<pos:position pos:line="34" pos:column="36"/></operator><name pos:line="34" pos:column="36">char<pos:position pos:line="34" pos:column="40"/></name> <operator pos:line="34" pos:column="41">*<pos:position pos:line="34" pos:column="42"/></operator><operator pos:line="34" pos:column="42">)<pos:position pos:line="34" pos:column="43"/></operator> <name><name pos:line="34" pos:column="44">vec<pos:position pos:line="34" pos:column="47"/></name><index pos:line="34" pos:column="47">[<expr><name pos:line="34" pos:column="48">i<pos:position pos:line="34" pos:column="49"/></name></expr>]<pos:position pos:line="34" pos:column="50"/></index></name><operator pos:line="34" pos:column="50">.<pos:position pos:line="34" pos:column="51"/></operator><name pos:line="34" pos:column="51">iov_base<pos:position pos:line="34" pos:column="59"/></name> <operator pos:line="34" pos:column="60">+<pos:position pos:line="34" pos:column="61"/></operator>
                    <operator pos:line="35" pos:column="21">(<pos:position pos:line="35" pos:column="22"/></operator><name><name pos:line="35" pos:column="22">vec<pos:position pos:line="35" pos:column="25"/></name><index pos:line="35" pos:column="25">[<expr><name pos:line="35" pos:column="26">i<pos:position pos:line="35" pos:column="27"/></name></expr>]<pos:position pos:line="35" pos:column="28"/></index></name><operator pos:line="35" pos:column="28">.<pos:position pos:line="35" pos:column="29"/></operator><name pos:line="35" pos:column="29">iov_len<pos:position pos:line="35" pos:column="36"/></name> <operator pos:line="35" pos:column="37">-<pos:position pos:line="35" pos:column="38"/></operator> <operator pos:line="35" pos:column="39">(<pos:position pos:line="35" pos:column="40"/></operator><name pos:line="35" pos:column="40">cnt<pos:position pos:line="35" pos:column="43"/></name> <operator pos:line="35" pos:column="44">-<pos:position pos:line="35" pos:column="45"/></operator> <name pos:line="35" pos:column="46">n<pos:position pos:line="35" pos:column="47"/></name><operator pos:line="35" pos:column="47">)<pos:position pos:line="35" pos:column="48"/></operator><operator pos:line="35" pos:column="48">)<pos:position pos:line="35" pos:column="49"/></operator></expr>;<pos:position pos:line="35" pos:column="50"/></expr_stmt>
                <expr_stmt><expr><name><name pos:line="36" pos:column="17">vec<pos:position pos:line="36" pos:column="20"/></name><index pos:line="36" pos:column="20">[<expr><name pos:line="36" pos:column="21">i<pos:position pos:line="36" pos:column="22"/></name></expr>]<pos:position pos:line="36" pos:column="23"/></index></name><operator pos:line="36" pos:column="23">.<pos:position pos:line="36" pos:column="24"/></operator><name pos:line="36" pos:column="24">iov_len<pos:position pos:line="36" pos:column="31"/></name> <operator pos:line="36" pos:column="32">=<pos:position pos:line="36" pos:column="33"/></operator> <name pos:line="36" pos:column="34">cnt<pos:position pos:line="36" pos:column="37"/></name> <operator pos:line="36" pos:column="38">-<pos:position pos:line="36" pos:column="39"/></operator><name pos:line="36" pos:column="39">n<pos:position pos:line="36" pos:column="40"/></name></expr>;<pos:position pos:line="36" pos:column="41"/></expr_stmt>
            }<pos:position pos:line="37" pos:column="14"/></block></then></if>
        }<pos:position pos:line="38" pos:column="10"/></block></then></if>

        <expr_stmt><expr><name pos:line="40" pos:column="9">n<pos:position pos:line="40" pos:column="10"/></name> <operator pos:line="40" pos:column="11">=<pos:position pos:line="40" pos:column="12"/></operator> <name pos:line="40" pos:column="13">len<pos:position pos:line="40" pos:column="16"/></name> <operator pos:line="40" pos:column="17">-<pos:position pos:line="40" pos:column="18"/></operator> <name pos:line="40" pos:column="19">bytes_written<pos:position pos:line="40" pos:column="32"/></name></expr>;<pos:position pos:line="40" pos:column="33"/></expr_stmt>
    }<pos:position pos:line="41" pos:column="6"/></block></while>

    <return pos:line="43" pos:column="5">return <expr><name pos:line="43" pos:column="12">APR_SUCCESS<pos:position pos:line="43" pos:column="23"/></name></expr>;<pos:position pos:line="43" pos:column="24"/></return>
}<pos:position pos:line="44" pos:column="2"/></block></function></unit>

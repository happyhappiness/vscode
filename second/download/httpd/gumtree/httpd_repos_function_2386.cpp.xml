<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/httpd/gumtree/httpd_repos_function_2386.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">int<pos:position pos:line="1" pos:column="11"/></name></type> <name pos:line="1" pos:column="12">noloris_monitor<pos:position pos:line="1" pos:column="27"/></name><parameter_list pos:line="1" pos:column="27">(<parameter><decl><type><name pos:line="1" pos:column="28">apr_pool_t<pos:position pos:line="1" pos:column="38"/></name> <modifier pos:line="1" pos:column="39">*<pos:position pos:line="1" pos:column="40"/></modifier></type><name pos:line="1" pos:column="40">pool<pos:position pos:line="1" pos:column="44"/></name></decl></parameter>, <parameter><decl><type><name pos:line="1" pos:column="46">server_rec<pos:position pos:line="1" pos:column="56"/></name> <modifier pos:line="1" pos:column="57">*<pos:position pos:line="1" pos:column="58"/></modifier></type><name pos:line="1" pos:column="58">s<pos:position pos:line="1" pos:column="59"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="60"/></parameter_list>
<block pos:line="2" pos:column="1">{
    <decl_stmt><decl><specifier pos:line="3" pos:column="5">static<pos:position pos:line="3" pos:column="11"/></specifier> <type><name pos:line="3" pos:column="12">apr_hash_t<pos:position pos:line="3" pos:column="22"/></name> <modifier pos:line="3" pos:column="23">*<pos:position pos:line="3" pos:column="24"/></modifier></type><name pos:line="3" pos:column="24">connections<pos:position pos:line="3" pos:column="35"/></name> <init pos:line="3" pos:column="36">= <expr><name pos:line="3" pos:column="38">NULL<pos:position pos:line="3" pos:column="42"/></name></expr></init></decl>;<pos:position pos:line="3" pos:column="43"/></decl_stmt>
    <decl_stmt><decl><specifier pos:line="4" pos:column="5">static<pos:position pos:line="4" pos:column="11"/></specifier> <type><name pos:line="4" pos:column="12">apr_time_t<pos:position pos:line="4" pos:column="22"/></name></type> <name pos:line="4" pos:column="23">last_check<pos:position pos:line="4" pos:column="33"/></name> <init pos:line="4" pos:column="34">= <expr><literal type="number" pos:line="4" pos:column="36">0<pos:position pos:line="4" pos:column="37"/></literal></expr></init></decl>;<pos:position pos:line="4" pos:column="38"/></decl_stmt>
    <decl_stmt><decl><specifier pos:line="5" pos:column="5">static<pos:position pos:line="5" pos:column="11"/></specifier> <type><name pos:line="5" pos:column="12">int<pos:position pos:line="5" pos:column="15"/></name> <modifier pos:line="5" pos:column="16">*<pos:position pos:line="5" pos:column="17"/></modifier></type><name pos:line="5" pos:column="17">totals<pos:position pos:line="5" pos:column="23"/></name></decl>;<pos:position pos:line="5" pos:column="24"/></decl_stmt>

    <decl_stmt><decl><type><name pos:line="7" pos:column="5">int<pos:position pos:line="7" pos:column="8"/></name></type> <name pos:line="7" pos:column="9">i<pos:position pos:line="7" pos:column="10"/></name></decl>, <decl><type ref="prev"/><name pos:line="7" pos:column="12">j<pos:position pos:line="7" pos:column="13"/></name></decl>;<pos:position pos:line="7" pos:column="14"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="8" pos:column="5">int<pos:position pos:line="8" pos:column="8"/></name> <modifier pos:line="8" pos:column="9">*<pos:position pos:line="8" pos:column="10"/></modifier></type><name pos:line="8" pos:column="10">n<pos:position pos:line="8" pos:column="11"/></name></decl>;<pos:position pos:line="8" pos:column="12"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="9" pos:column="5">int<pos:position pos:line="9" pos:column="8"/></name></type> <name pos:line="9" pos:column="9">index<pos:position pos:line="9" pos:column="14"/></name> <init pos:line="9" pos:column="15">= <expr><literal type="number" pos:line="9" pos:column="17">0<pos:position pos:line="9" pos:column="18"/></literal></expr></init></decl>;<pos:position pos:line="9" pos:column="19"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="10" pos:column="5">apr_hash_index_t<pos:position pos:line="10" pos:column="21"/></name> <modifier pos:line="10" pos:column="22">*<pos:position pos:line="10" pos:column="23"/></modifier></type><name pos:line="10" pos:column="23">hi<pos:position pos:line="10" pos:column="25"/></name></decl>;<pos:position pos:line="10" pos:column="26"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="11" pos:column="5">char<pos:position pos:line="11" pos:column="9"/></name> <modifier pos:line="11" pos:column="10">*<pos:position pos:line="11" pos:column="11"/></modifier></type><name pos:line="11" pos:column="11">ip<pos:position pos:line="11" pos:column="13"/></name></decl>;<pos:position pos:line="11" pos:column="14"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="12" pos:column="5">apr_time_t<pos:position pos:line="12" pos:column="15"/></name></type> <name pos:line="12" pos:column="16">time_now<pos:position pos:line="12" pos:column="24"/></name></decl>;<pos:position pos:line="12" pos:column="25"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="13" pos:column="5">char<pos:position pos:line="13" pos:column="9"/></name> <modifier pos:line="13" pos:column="10">*<pos:position pos:line="13" pos:column="11"/></modifier></type><name pos:line="13" pos:column="11">shm_rec<pos:position pos:line="13" pos:column="18"/></name></decl>;<pos:position pos:line="13" pos:column="19"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="14" pos:column="5">worker_score<pos:position pos:line="14" pos:column="17"/></name> <modifier pos:line="14" pos:column="18">*<pos:position pos:line="14" pos:column="19"/></modifier></type><name pos:line="14" pos:column="19">ws<pos:position pos:line="14" pos:column="21"/></name></decl>;<pos:position pos:line="14" pos:column="22"/></decl_stmt>

    <comment type="block" pos:line="16" pos:column="5">/* do nothing if disabled */</comment>
    <if pos:line="17" pos:column="5">if <condition pos:line="17" pos:column="8">(<expr><name pos:line="17" pos:column="9">shm<pos:position pos:line="17" pos:column="12"/></name> <operator pos:line="17" pos:column="13">==<pos:position pos:line="17" pos:column="15"/></operator> <name pos:line="17" pos:column="16">NULL<pos:position pos:line="17" pos:column="20"/></name></expr>)<pos:position pos:line="17" pos:column="21"/></condition><then pos:line="17" pos:column="21"> <block pos:line="17" pos:column="22">{
        <return pos:line="18" pos:column="9">return <expr><literal type="number" pos:line="18" pos:column="16">0<pos:position pos:line="18" pos:column="17"/></literal></expr>;<pos:position pos:line="18" pos:column="18"/></return>
    }<pos:position pos:line="19" pos:column="6"/></block></then></if>

    <comment type="block" pos:line="21" pos:column="5">/* skip check if it's not due yet */</comment>
    <expr_stmt><expr><name pos:line="22" pos:column="5">time_now<pos:position pos:line="22" pos:column="13"/></name> <operator pos:line="22" pos:column="14">=<pos:position pos:line="22" pos:column="15"/></operator> <call><name pos:line="22" pos:column="16">apr_time_now<pos:position pos:line="22" pos:column="28"/></name><argument_list pos:line="22" pos:column="28">()<pos:position pos:line="22" pos:column="30"/></argument_list></call></expr>;<pos:position pos:line="22" pos:column="31"/></expr_stmt>
    <if pos:line="23" pos:column="5">if <condition pos:line="23" pos:column="8">(<expr><name pos:line="23" pos:column="9">time_now<pos:position pos:line="23" pos:column="17"/></name> <operator pos:line="23" pos:column="18">-<pos:position pos:line="23" pos:column="19"/></operator> <name pos:line="23" pos:column="20">last_check<pos:position pos:line="23" pos:column="30"/></name> <operator pos:line="23" pos:column="31">&lt;<pos:position pos:line="23" pos:column="35"/></operator> <name pos:line="23" pos:column="33">recheck_time<pos:position pos:line="23" pos:column="45"/></name></expr>)<pos:position pos:line="23" pos:column="46"/></condition><then pos:line="23" pos:column="46"> <block pos:line="23" pos:column="47">{
        <return pos:line="24" pos:column="9">return <expr><literal type="number" pos:line="24" pos:column="16">0<pos:position pos:line="24" pos:column="17"/></literal></expr>;<pos:position pos:line="24" pos:column="18"/></return>
    }<pos:position pos:line="25" pos:column="6"/></block></then></if>
    <expr_stmt><expr><name pos:line="26" pos:column="5">last_check<pos:position pos:line="26" pos:column="15"/></name> <operator pos:line="26" pos:column="16">=<pos:position pos:line="26" pos:column="17"/></operator> <name pos:line="26" pos:column="18">time_now<pos:position pos:line="26" pos:column="26"/></name></expr>;<pos:position pos:line="26" pos:column="27"/></expr_stmt>

    <comment type="block" pos:line="28" pos:column="5">/* alloc lots of stuff at start, so we don't leak memory per-call */</comment>
    <if pos:line="29" pos:column="5">if <condition pos:line="29" pos:column="8">(<expr><name pos:line="29" pos:column="9">connections<pos:position pos:line="29" pos:column="20"/></name> <operator pos:line="29" pos:column="21">==<pos:position pos:line="29" pos:column="23"/></operator> <name pos:line="29" pos:column="24">NULL<pos:position pos:line="29" pos:column="28"/></name></expr>)<pos:position pos:line="29" pos:column="29"/></condition><then pos:line="29" pos:column="29"> <block pos:line="29" pos:column="30">{
        <expr_stmt><expr><name pos:line="30" pos:column="9">connections<pos:position pos:line="30" pos:column="20"/></name> <operator pos:line="30" pos:column="21">=<pos:position pos:line="30" pos:column="22"/></operator> <call><name pos:line="30" pos:column="23">apr_hash_make<pos:position pos:line="30" pos:column="36"/></name><argument_list pos:line="30" pos:column="36">(<argument><expr><name pos:line="30" pos:column="37">pool<pos:position pos:line="30" pos:column="41"/></name></expr></argument>)<pos:position pos:line="30" pos:column="42"/></argument_list></call></expr>;<pos:position pos:line="30" pos:column="43"/></expr_stmt>
        <expr_stmt><expr><name pos:line="31" pos:column="9">totals<pos:position pos:line="31" pos:column="15"/></name> <operator pos:line="31" pos:column="16">=<pos:position pos:line="31" pos:column="17"/></operator> <call><name pos:line="31" pos:column="18">apr_palloc<pos:position pos:line="31" pos:column="28"/></name><argument_list pos:line="31" pos:column="28">(<argument><expr><name pos:line="31" pos:column="29">pool<pos:position pos:line="31" pos:column="33"/></name></expr></argument>, <argument><expr><name pos:line="31" pos:column="35">server_limit<pos:position pos:line="31" pos:column="47"/></name><operator pos:line="31" pos:column="47">*<pos:position pos:line="31" pos:column="48"/></operator><name pos:line="31" pos:column="48">thread_limit<pos:position pos:line="31" pos:column="60"/></name></expr></argument>)<pos:position pos:line="31" pos:column="61"/></argument_list></call></expr>;<pos:position pos:line="31" pos:column="62"/></expr_stmt>
        <expr_stmt><expr><name pos:line="32" pos:column="9">ip<pos:position pos:line="32" pos:column="11"/></name> <operator pos:line="32" pos:column="12">=<pos:position pos:line="32" pos:column="13"/></operator> <call><name pos:line="32" pos:column="14">apr_palloc<pos:position pos:line="32" pos:column="24"/></name><argument_list pos:line="32" pos:column="24">(<argument><expr><name pos:line="32" pos:column="25">pool<pos:position pos:line="32" pos:column="29"/></name></expr></argument>, <argument><expr><name pos:line="32" pos:column="31">ADDR_MAX_SIZE<pos:position pos:line="32" pos:column="44"/></name></expr></argument>)<pos:position pos:line="32" pos:column="45"/></argument_list></call></expr>;<pos:position pos:line="32" pos:column="46"/></expr_stmt>
    }<pos:position pos:line="33" pos:column="6"/></block></then></if>

    <comment type="block" pos:line="35" pos:column="5">/* Get a per-client count of connections in READ state */</comment>
    <for pos:line="36" pos:column="5">for <control pos:line="36" pos:column="9">(<init><expr><name pos:line="36" pos:column="10">i<pos:position pos:line="36" pos:column="11"/></name> <operator pos:line="36" pos:column="12">=<pos:position pos:line="36" pos:column="13"/></operator> <literal type="number" pos:line="36" pos:column="14">0<pos:position pos:line="36" pos:column="15"/></literal></expr>;<pos:position pos:line="36" pos:column="16"/></init> <condition><expr><name pos:line="36" pos:column="17">i<pos:position pos:line="36" pos:column="18"/></name> <operator pos:line="36" pos:column="19">&lt;<pos:position pos:line="36" pos:column="23"/></operator> <name pos:line="36" pos:column="21">server_limit<pos:position pos:line="36" pos:column="33"/></name></expr>;<pos:position pos:line="36" pos:column="34"/></condition> <incr><expr><operator pos:line="36" pos:column="35">++<pos:position pos:line="36" pos:column="37"/></operator><name pos:line="36" pos:column="37">i<pos:position pos:line="36" pos:column="38"/></name></expr></incr>)<pos:position pos:line="36" pos:column="39"/></control> <block pos:line="36" pos:column="40">{
        <for pos:line="37" pos:column="9">for <control pos:line="37" pos:column="13">(<init><expr><name pos:line="37" pos:column="14">j<pos:position pos:line="37" pos:column="15"/></name> <operator pos:line="37" pos:column="16">=<pos:position pos:line="37" pos:column="17"/></operator> <literal type="number" pos:line="37" pos:column="18">0<pos:position pos:line="37" pos:column="19"/></literal></expr>;<pos:position pos:line="37" pos:column="20"/></init> <condition><expr><name pos:line="37" pos:column="21">j<pos:position pos:line="37" pos:column="22"/></name> <operator pos:line="37" pos:column="23">&lt;<pos:position pos:line="37" pos:column="27"/></operator> <name pos:line="37" pos:column="25">thread_limit<pos:position pos:line="37" pos:column="37"/></name></expr>;<pos:position pos:line="37" pos:column="38"/></condition> <incr><expr><operator pos:line="37" pos:column="39">++<pos:position pos:line="37" pos:column="41"/></operator><name pos:line="37" pos:column="41">j<pos:position pos:line="37" pos:column="42"/></name></expr></incr>)<pos:position pos:line="37" pos:column="43"/></control> <block pos:line="37" pos:column="44">{
            <expr_stmt><expr><name pos:line="38" pos:column="13">ws<pos:position pos:line="38" pos:column="15"/></name> <operator pos:line="38" pos:column="16">=<pos:position pos:line="38" pos:column="17"/></operator> <call><name pos:line="38" pos:column="18">ap_get_scoreboard_worker_from_indexes<pos:position pos:line="38" pos:column="55"/></name><argument_list pos:line="38" pos:column="55">(<argument><expr><name pos:line="38" pos:column="56">i<pos:position pos:line="38" pos:column="57"/></name></expr></argument>, <argument><expr><name pos:line="38" pos:column="59">j<pos:position pos:line="38" pos:column="60"/></name></expr></argument>)<pos:position pos:line="38" pos:column="61"/></argument_list></call></expr>;<pos:position pos:line="38" pos:column="62"/></expr_stmt>
            <if pos:line="39" pos:column="13">if <condition pos:line="39" pos:column="16">(<expr><name><name pos:line="39" pos:column="17">ws<pos:position pos:line="39" pos:column="19"/></name><operator pos:line="39" pos:column="19">-&gt;<pos:position pos:line="39" pos:column="24"/></operator><name pos:line="39" pos:column="21">status<pos:position pos:line="39" pos:column="27"/></name></name> <operator pos:line="39" pos:column="28">==<pos:position pos:line="39" pos:column="30"/></operator> <name pos:line="39" pos:column="31">SERVER_BUSY_READ<pos:position pos:line="39" pos:column="47"/></name></expr>)<pos:position pos:line="39" pos:column="48"/></condition><then pos:line="39" pos:column="48"> <block pos:line="39" pos:column="49">{
                <expr_stmt><expr><name pos:line="40" pos:column="17">n<pos:position pos:line="40" pos:column="18"/></name> <operator pos:line="40" pos:column="19">=<pos:position pos:line="40" pos:column="20"/></operator> <call><name pos:line="40" pos:column="21">apr_hash_get<pos:position pos:line="40" pos:column="33"/></name><argument_list pos:line="40" pos:column="33">(<argument><expr><name pos:line="40" pos:column="34">connections<pos:position pos:line="40" pos:column="45"/></name></expr></argument>, <argument><expr><name><name pos:line="40" pos:column="47">ws<pos:position pos:line="40" pos:column="49"/></name><operator pos:line="40" pos:column="49">-&gt;<pos:position pos:line="40" pos:column="54"/></operator><name pos:line="40" pos:column="51">client<pos:position pos:line="40" pos:column="57"/></name></name></expr></argument>, <argument><expr><name pos:line="40" pos:column="59">APR_HASH_KEY_STRING<pos:position pos:line="40" pos:column="78"/></name></expr></argument>)<pos:position pos:line="40" pos:column="79"/></argument_list></call></expr>;<pos:position pos:line="40" pos:column="80"/></expr_stmt>
                <if pos:line="41" pos:column="17">if <condition pos:line="41" pos:column="20">(<expr><name pos:line="41" pos:column="21">n<pos:position pos:line="41" pos:column="22"/></name> <operator pos:line="41" pos:column="23">==<pos:position pos:line="41" pos:column="25"/></operator> <name pos:line="41" pos:column="26">NULL<pos:position pos:line="41" pos:column="30"/></name></expr>)<pos:position pos:line="41" pos:column="31"/></condition><then pos:line="41" pos:column="31"> <block pos:line="41" pos:column="32">{
                    <expr_stmt><expr><name pos:line="42" pos:column="21">n<pos:position pos:line="42" pos:column="22"/></name> <operator pos:line="42" pos:column="23">=<pos:position pos:line="42" pos:column="24"/></operator> <name pos:line="42" pos:column="25">totals<pos:position pos:line="42" pos:column="31"/></name> <operator pos:line="42" pos:column="32">+<pos:position pos:line="42" pos:column="33"/></operator> <name pos:line="42" pos:column="34">index<pos:position pos:line="42" pos:column="39"/></name><operator pos:line="42" pos:column="39">++<pos:position pos:line="42" pos:column="41"/></operator></expr> ;<pos:position pos:line="42" pos:column="43"/></expr_stmt>
                    <expr_stmt><expr><operator pos:line="43" pos:column="21">*<pos:position pos:line="43" pos:column="22"/></operator><name pos:line="43" pos:column="22">n<pos:position pos:line="43" pos:column="23"/></name> <operator pos:line="43" pos:column="24">=<pos:position pos:line="43" pos:column="25"/></operator> <literal type="number" pos:line="43" pos:column="26">0<pos:position pos:line="43" pos:column="27"/></literal></expr>;<pos:position pos:line="43" pos:column="28"/></expr_stmt>
                }<pos:position pos:line="44" pos:column="18"/></block></then></if>
                <expr_stmt><expr><operator pos:line="45" pos:column="17">++<pos:position pos:line="45" pos:column="19"/></operator><operator pos:line="45" pos:column="19">*<pos:position pos:line="45" pos:column="20"/></operator><name pos:line="45" pos:column="20">n<pos:position pos:line="45" pos:column="21"/></name></expr>;<pos:position pos:line="45" pos:column="22"/></expr_stmt>
                <expr_stmt><expr><call><name pos:line="46" pos:column="17">apr_hash_set<pos:position pos:line="46" pos:column="29"/></name><argument_list pos:line="46" pos:column="29">(<argument><expr><name pos:line="46" pos:column="30">connections<pos:position pos:line="46" pos:column="41"/></name></expr></argument>, <argument><expr><name><name pos:line="46" pos:column="43">ws<pos:position pos:line="46" pos:column="45"/></name><operator pos:line="46" pos:column="45">-&gt;<pos:position pos:line="46" pos:column="50"/></operator><name pos:line="46" pos:column="47">client<pos:position pos:line="46" pos:column="53"/></name></name></expr></argument>, <argument><expr><name pos:line="46" pos:column="55">APR_HASH_KEY_STRING<pos:position pos:line="46" pos:column="74"/></name></expr></argument>, <argument><expr><name pos:line="46" pos:column="76">n<pos:position pos:line="46" pos:column="77"/></name></expr></argument>)<pos:position pos:line="46" pos:column="78"/></argument_list></call></expr>;<pos:position pos:line="46" pos:column="79"/></expr_stmt>
            }<pos:position pos:line="47" pos:column="14"/></block></then></if>
        }<pos:position pos:line="48" pos:column="10"/></block></for>
    }<pos:position pos:line="49" pos:column="6"/></block></for>

    <comment type="block" pos:line="51" pos:column="5">/* reset shm before writing to it.
     * We're only dealing with approx. counts, so we ignore the race condition
     * with our prospective readers
     */</comment>
    <expr_stmt><expr><name pos:line="55" pos:column="5">shm_rec<pos:position pos:line="55" pos:column="12"/></name> <operator pos:line="55" pos:column="13">=<pos:position pos:line="55" pos:column="14"/></operator> <call><name pos:line="55" pos:column="15">apr_shm_baseaddr_get<pos:position pos:line="55" pos:column="35"/></name><argument_list pos:line="55" pos:column="35">(<argument><expr><name pos:line="55" pos:column="36">shm<pos:position pos:line="55" pos:column="39"/></name></expr></argument>)<pos:position pos:line="55" pos:column="40"/></argument_list></call></expr>;<pos:position pos:line="55" pos:column="41"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="56" pos:column="5">memset<pos:position pos:line="56" pos:column="11"/></name><argument_list pos:line="56" pos:column="11">(<argument><expr><name pos:line="56" pos:column="12">shm_rec<pos:position pos:line="56" pos:column="19"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="56" pos:column="21">0<pos:position pos:line="56" pos:column="22"/></literal></expr></argument>, <argument><expr><name pos:line="56" pos:column="24">shm_size<pos:position pos:line="56" pos:column="32"/></name></expr></argument>)<pos:position pos:line="56" pos:column="33"/></argument_list></call></expr>;<pos:position pos:line="56" pos:column="34"/></expr_stmt>

    <comment type="block" pos:line="58" pos:column="5">/* Now check the hash for clients with too many connections in READ state */</comment>
    <for pos:line="59" pos:column="5">for <control pos:line="59" pos:column="9">(<init><expr><name pos:line="59" pos:column="10">hi<pos:position pos:line="59" pos:column="12"/></name> <operator pos:line="59" pos:column="13">=<pos:position pos:line="59" pos:column="14"/></operator> <call><name pos:line="59" pos:column="15">apr_hash_first<pos:position pos:line="59" pos:column="29"/></name><argument_list pos:line="59" pos:column="29">(<argument><expr><name pos:line="59" pos:column="30">NULL<pos:position pos:line="59" pos:column="34"/></name></expr></argument>, <argument><expr><name pos:line="59" pos:column="36">connections<pos:position pos:line="59" pos:column="47"/></name></expr></argument>)<pos:position pos:line="59" pos:column="48"/></argument_list></call></expr>;<pos:position pos:line="59" pos:column="49"/></init> <condition><expr><name pos:line="59" pos:column="50">hi<pos:position pos:line="59" pos:column="52"/></name></expr>;<pos:position pos:line="59" pos:column="53"/></condition> <incr><expr><name pos:line="59" pos:column="54">hi<pos:position pos:line="59" pos:column="56"/></name> <operator pos:line="59" pos:column="57">=<pos:position pos:line="59" pos:column="58"/></operator> <call><name pos:line="59" pos:column="59">apr_hash_next<pos:position pos:line="59" pos:column="72"/></name><argument_list pos:line="59" pos:column="72">(<argument><expr><name pos:line="59" pos:column="73">hi<pos:position pos:line="59" pos:column="75"/></name></expr></argument>)<pos:position pos:line="59" pos:column="76"/></argument_list></call></expr></incr>)<pos:position pos:line="59" pos:column="77"/></control> <block pos:line="59" pos:column="78">{
        <expr_stmt><expr><call><name pos:line="60" pos:column="9">apr_hash_this<pos:position pos:line="60" pos:column="22"/></name><argument_list pos:line="60" pos:column="22">(<argument><expr><name pos:line="60" pos:column="23">hi<pos:position pos:line="60" pos:column="25"/></name></expr></argument>, <argument><expr><operator pos:line="60" pos:column="27">(<pos:position pos:line="60" pos:column="28"/></operator><specifier pos:line="60" pos:column="28">const<pos:position pos:line="60" pos:column="33"/></specifier> <name pos:line="60" pos:column="34">void<pos:position pos:line="60" pos:column="38"/></name><operator pos:line="60" pos:column="38">*<pos:position pos:line="60" pos:column="39"/></operator><operator pos:line="60" pos:column="39">*<pos:position pos:line="60" pos:column="40"/></operator><operator pos:line="60" pos:column="40">)<pos:position pos:line="60" pos:column="41"/></operator> <operator pos:line="60" pos:column="42">&amp;<pos:position pos:line="60" pos:column="47"/></operator><name pos:line="60" pos:column="43">ip<pos:position pos:line="60" pos:column="45"/></name></expr></argument>, <argument><expr><name pos:line="60" pos:column="47">NULL<pos:position pos:line="60" pos:column="51"/></name></expr></argument>, <argument><expr><operator pos:line="60" pos:column="53">(<pos:position pos:line="60" pos:column="54"/></operator><name pos:line="60" pos:column="54">void<pos:position pos:line="60" pos:column="58"/></name><operator pos:line="60" pos:column="58">*<pos:position pos:line="60" pos:column="59"/></operator><operator pos:line="60" pos:column="59">*<pos:position pos:line="60" pos:column="60"/></operator><operator pos:line="60" pos:column="60">)<pos:position pos:line="60" pos:column="61"/></operator><operator pos:line="60" pos:column="61">&amp;<pos:position pos:line="60" pos:column="66"/></operator><name pos:line="60" pos:column="62">n<pos:position pos:line="60" pos:column="63"/></name></expr></argument>)<pos:position pos:line="60" pos:column="64"/></argument_list></call></expr>;<pos:position pos:line="60" pos:column="65"/></expr_stmt>
        <if pos:line="61" pos:column="9">if <condition pos:line="61" pos:column="12">(<expr><operator pos:line="61" pos:column="13">*<pos:position pos:line="61" pos:column="14"/></operator><name pos:line="61" pos:column="14">n<pos:position pos:line="61" pos:column="15"/></name> <operator pos:line="61" pos:column="16">&gt;=<pos:position pos:line="61" pos:column="21"/></operator> <name pos:line="61" pos:column="19">default_max_connections<pos:position pos:line="61" pos:column="42"/></name></expr>)<pos:position pos:line="61" pos:column="43"/></condition><then pos:line="61" pos:column="43"> <block pos:line="61" pos:column="44">{
            <comment type="block" pos:line="62" pos:column="13">/* if this isn't a trusted proxy, we mark it as bad */</comment>
            <if pos:line="63" pos:column="13">if <condition pos:line="63" pos:column="16">(<expr><operator pos:line="63" pos:column="17">!<pos:position pos:line="63" pos:column="18"/></operator><call><name pos:line="63" pos:column="18">apr_hash_get<pos:position pos:line="63" pos:column="30"/></name><argument_list pos:line="63" pos:column="30">(<argument><expr><name pos:line="63" pos:column="31">trusted<pos:position pos:line="63" pos:column="38"/></name></expr></argument>, <argument><expr><name pos:line="63" pos:column="40">ip<pos:position pos:line="63" pos:column="42"/></name></expr></argument>, <argument><expr><name pos:line="63" pos:column="44">APR_HASH_KEY_STRING<pos:position pos:line="63" pos:column="63"/></name></expr></argument>)<pos:position pos:line="63" pos:column="64"/></argument_list></call></expr>)<pos:position pos:line="63" pos:column="65"/></condition><then pos:line="63" pos:column="65"> <block pos:line="63" pos:column="66">{
                <expr_stmt><expr><call><name pos:line="64" pos:column="17">ap_log_error<pos:position pos:line="64" pos:column="29"/></name><argument_list pos:line="64" pos:column="29">(<argument><expr><name pos:line="64" pos:column="30">APLOG_MARK<pos:position pos:line="64" pos:column="40"/></name></expr></argument>, <argument><expr><name pos:line="64" pos:column="42">APLOG_WARNING<pos:position pos:line="64" pos:column="55"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="64" pos:column="57">0<pos:position pos:line="64" pos:column="58"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="64" pos:column="60">0<pos:position pos:line="64" pos:column="61"/></literal></expr></argument>,
                       <argument><expr><literal type="string" pos:line="65" pos:column="24">"noloris: banning %s with %d connections in READ state"<pos:position pos:line="65" pos:column="79"/></literal></expr></argument>,
                       <argument><expr><name pos:line="66" pos:column="24">ip<pos:position pos:line="66" pos:column="26"/></name></expr></argument>, <argument><expr><operator pos:line="66" pos:column="28">*<pos:position pos:line="66" pos:column="29"/></operator><name pos:line="66" pos:column="29">n<pos:position pos:line="66" pos:column="30"/></name></expr></argument>)<pos:position pos:line="66" pos:column="31"/></argument_list></call></expr>;<pos:position pos:line="66" pos:column="32"/></expr_stmt>
                <expr_stmt><expr><call><name pos:line="67" pos:column="17">strcpy<pos:position pos:line="67" pos:column="23"/></name><argument_list pos:line="67" pos:column="23">(<argument><expr><name pos:line="67" pos:column="24">shm_rec<pos:position pos:line="67" pos:column="31"/></name></expr></argument>, <argument><expr><name pos:line="67" pos:column="33">ip<pos:position pos:line="67" pos:column="35"/></name></expr></argument>)<pos:position pos:line="67" pos:column="36"/></argument_list></call></expr>;<pos:position pos:line="67" pos:column="37"/></expr_stmt>
                <expr_stmt><expr><name pos:line="68" pos:column="17">shm_rec<pos:position pos:line="68" pos:column="24"/></name> <operator pos:line="68" pos:column="25">+=<pos:position pos:line="68" pos:column="27"/></operator> <name pos:line="68" pos:column="28">ADDR_MAX_SIZE<pos:position pos:line="68" pos:column="41"/></name></expr>;<pos:position pos:line="68" pos:column="42"/></expr_stmt>
            }<pos:position pos:line="69" pos:column="14"/></block></then></if>
        }<pos:position pos:line="70" pos:column="10"/></block></then></if>
    }<pos:position pos:line="71" pos:column="6"/></block></for>
    <expr_stmt><expr><call><name pos:line="72" pos:column="5">apr_hash_clear<pos:position pos:line="72" pos:column="19"/></name><argument_list pos:line="72" pos:column="19">(<argument><expr><name pos:line="72" pos:column="20">connections<pos:position pos:line="72" pos:column="31"/></name></expr></argument>)<pos:position pos:line="72" pos:column="32"/></argument_list></call></expr>;<pos:position pos:line="72" pos:column="33"/></expr_stmt>
    <return pos:line="73" pos:column="5">return <expr><literal type="number" pos:line="73" pos:column="12">0<pos:position pos:line="73" pos:column="13"/></literal></expr>;<pos:position pos:line="73" pos:column="14"/></return>
}<pos:position pos:line="74" pos:column="2"/></block></function></unit>

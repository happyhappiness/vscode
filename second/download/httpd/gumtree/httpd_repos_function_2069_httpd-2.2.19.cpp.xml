<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/httpd/gumtree/httpd_repos_function_2069_httpd-2.2.19.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">int<pos:position pos:line="1" pos:column="4"/></name></type> <name pos:line="1" pos:column="5">_NonAppStart<pos:position pos:line="1" pos:column="17"/></name>
<parameter_list pos:line="2" pos:column="1">(
    <parameter><decl><type><name pos:line="3" pos:column="5">void<pos:position pos:line="3" pos:column="9"/></name>        <modifier pos:line="3" pos:column="17">*<pos:position pos:line="3" pos:column="18"/></modifier></type><name pos:line="3" pos:column="18">NLMHandle<pos:position pos:line="3" pos:column="27"/></name></decl></parameter>,
    <parameter><decl><type><name pos:line="4" pos:column="5">void<pos:position pos:line="4" pos:column="9"/></name>        <modifier pos:line="4" pos:column="17">*<pos:position pos:line="4" pos:column="18"/></modifier></type><name pos:line="4" pos:column="18">errorScreen<pos:position pos:line="4" pos:column="29"/></name></decl></parameter>,
    <parameter><decl><type><specifier pos:line="5" pos:column="5">const<pos:position pos:line="5" pos:column="10"/></specifier> <name pos:line="5" pos:column="11">char<pos:position pos:line="5" pos:column="15"/></name>  <modifier pos:line="5" pos:column="17">*<pos:position pos:line="5" pos:column="18"/></modifier></type><name pos:line="5" pos:column="18">cmdLine<pos:position pos:line="5" pos:column="25"/></name></decl></parameter>,
    <parameter><decl><type><specifier pos:line="6" pos:column="5">const<pos:position pos:line="6" pos:column="10"/></specifier> <name pos:line="6" pos:column="11">char<pos:position pos:line="6" pos:column="15"/></name>  <modifier pos:line="6" pos:column="17">*<pos:position pos:line="6" pos:column="18"/></modifier></type><name pos:line="6" pos:column="18">loadDirPath<pos:position pos:line="6" pos:column="29"/></name></decl></parameter>,
    <parameter><decl><type><name pos:line="7" pos:column="5">size_t<pos:position pos:line="7" pos:column="11"/></name></type>      <name pos:line="7" pos:column="17">uninitializedDataLength<pos:position pos:line="7" pos:column="40"/></name></decl></parameter>,
    <parameter><decl><type><name pos:line="8" pos:column="5">void<pos:position pos:line="8" pos:column="9"/></name>        <modifier pos:line="8" pos:column="17">*<pos:position pos:line="8" pos:column="18"/></modifier></type><name pos:line="8" pos:column="18">NLMFileHandle<pos:position pos:line="8" pos:column="31"/></name></decl></parameter>,
    <parameter><function_decl><type><name pos:line="9" pos:column="5">int<pos:position pos:line="9" pos:column="8"/></name></type>         (<modifier pos:line="9" pos:column="18">*<pos:position pos:line="9" pos:column="19"/></modifier><name pos:line="9" pos:column="19">readRoutineP<pos:position pos:line="9" pos:column="31"/></name>)<parameter_list pos:line="9" pos:column="32">( <parameter><decl><type><name pos:line="9" pos:column="34">int<pos:position pos:line="9" pos:column="37"/></name></type> <name pos:line="9" pos:column="38">conn<pos:position pos:line="9" pos:column="42"/></name></decl></parameter>, <parameter><decl><type><name pos:line="9" pos:column="44">void<pos:position pos:line="9" pos:column="48"/></name> <modifier pos:line="9" pos:column="49">*<pos:position pos:line="9" pos:column="50"/></modifier></type><name pos:line="9" pos:column="50">fileHandle<pos:position pos:line="9" pos:column="60"/></name></decl></parameter>, <parameter><decl><type><name pos:line="9" pos:column="62">size_t<pos:position pos:line="9" pos:column="68"/></name></type> <name pos:line="9" pos:column="69">offset<pos:position pos:line="9" pos:column="75"/></name></decl></parameter>,
                    <parameter><decl><type><name pos:line="10" pos:column="21">size_t<pos:position pos:line="10" pos:column="27"/></name></type> <name pos:line="10" pos:column="28">nbytes<pos:position pos:line="10" pos:column="34"/></name></decl></parameter>, <parameter><decl><type><name pos:line="10" pos:column="36">size_t<pos:position pos:line="10" pos:column="42"/></name> <modifier pos:line="10" pos:column="43">*<pos:position pos:line="10" pos:column="44"/></modifier></type><name pos:line="10" pos:column="44">bytesRead<pos:position pos:line="10" pos:column="53"/></name></decl></parameter>, <parameter><decl><type><name pos:line="10" pos:column="55">void<pos:position pos:line="10" pos:column="59"/></name> <modifier pos:line="10" pos:column="60">*<pos:position pos:line="10" pos:column="61"/></modifier></type><name pos:line="10" pos:column="61">buffer<pos:position pos:line="10" pos:column="67"/></name></decl></parameter> )<pos:position pos:line="10" pos:column="69"/></parameter_list></function_decl></parameter>,
    <parameter><decl><type><name pos:line="11" pos:column="5">size_t<pos:position pos:line="11" pos:column="11"/></name></type>      <name pos:line="11" pos:column="17">customDataOffset<pos:position pos:line="11" pos:column="33"/></name></decl></parameter>,
    <parameter><decl><type><name pos:line="12" pos:column="5">size_t<pos:position pos:line="12" pos:column="11"/></name></type>      <name pos:line="12" pos:column="17">customDataSize<pos:position pos:line="12" pos:column="31"/></name></decl></parameter>,
    <parameter><decl><type><name pos:line="13" pos:column="5">int<pos:position pos:line="13" pos:column="8"/></name></type>         <name pos:line="13" pos:column="17">messageCount<pos:position pos:line="13" pos:column="29"/></name></decl></parameter>,
    <parameter><decl><type><specifier pos:line="14" pos:column="5">const<pos:position pos:line="14" pos:column="10"/></specifier> <name pos:line="14" pos:column="11">char<pos:position pos:line="14" pos:column="15"/></name>  <modifier pos:line="14" pos:column="17">*<pos:position pos:line="14" pos:column="18"/></modifier><modifier pos:line="14" pos:column="18">*<pos:position pos:line="14" pos:column="19"/></modifier></type><name pos:line="14" pos:column="19">messages<pos:position pos:line="14" pos:column="27"/></name></decl></parameter>
)<pos:position pos:line="15" pos:column="2"/></parameter_list>
<block pos:line="16" pos:column="1">{
<cpp:pragma pos:line="17" pos:column="1">#<cpp:directive pos:line="17" pos:column="2">pragma<pos:position pos:line="17" pos:column="8"/></cpp:directive> <name pos:line="17" pos:column="9">unused<pos:position pos:line="17" pos:column="15"/></name><name pos:line="17" pos:column="15">(<pos:position pos:line="17" pos:column="16"/></name><name pos:line="17" pos:column="16">cmdLine<pos:position pos:line="17" pos:column="23"/></name><name pos:line="17" pos:column="23">)<pos:position pos:line="17" pos:column="24"/></name></cpp:pragma>
<cpp:pragma pos:line="18" pos:column="1">#<cpp:directive pos:line="18" pos:column="2">pragma<pos:position pos:line="18" pos:column="8"/></cpp:directive> <name pos:line="18" pos:column="9">unused<pos:position pos:line="18" pos:column="15"/></name><name pos:line="18" pos:column="15">(<pos:position pos:line="18" pos:column="16"/></name><name pos:line="18" pos:column="16">loadDirPath<pos:position pos:line="18" pos:column="27"/></name><name pos:line="18" pos:column="27">)<pos:position pos:line="18" pos:column="28"/></name></cpp:pragma>
<cpp:pragma pos:line="19" pos:column="1">#<cpp:directive pos:line="19" pos:column="2">pragma<pos:position pos:line="19" pos:column="8"/></cpp:directive> <name pos:line="19" pos:column="9">unused<pos:position pos:line="19" pos:column="15"/></name><name pos:line="19" pos:column="15">(<pos:position pos:line="19" pos:column="16"/></name><name pos:line="19" pos:column="16">uninitializedDataLength<pos:position pos:line="19" pos:column="39"/></name><name pos:line="19" pos:column="39">)<pos:position pos:line="19" pos:column="40"/></name></cpp:pragma>
<cpp:pragma pos:line="20" pos:column="1">#<cpp:directive pos:line="20" pos:column="2">pragma<pos:position pos:line="20" pos:column="8"/></cpp:directive> <name pos:line="20" pos:column="9">unused<pos:position pos:line="20" pos:column="15"/></name><name pos:line="20" pos:column="15">(<pos:position pos:line="20" pos:column="16"/></name><name pos:line="20" pos:column="16">NLMFileHandle<pos:position pos:line="20" pos:column="29"/></name><name pos:line="20" pos:column="29">)<pos:position pos:line="20" pos:column="30"/></name></cpp:pragma>
<cpp:pragma pos:line="21" pos:column="1">#<cpp:directive pos:line="21" pos:column="2">pragma<pos:position pos:line="21" pos:column="8"/></cpp:directive> <name pos:line="21" pos:column="9">unused<pos:position pos:line="21" pos:column="15"/></name><name pos:line="21" pos:column="15">(<pos:position pos:line="21" pos:column="16"/></name><name pos:line="21" pos:column="16">readRoutineP<pos:position pos:line="21" pos:column="28"/></name><name pos:line="21" pos:column="28">)<pos:position pos:line="21" pos:column="29"/></name></cpp:pragma>
<cpp:pragma pos:line="22" pos:column="1">#<cpp:directive pos:line="22" pos:column="2">pragma<pos:position pos:line="22" pos:column="8"/></cpp:directive> <name pos:line="22" pos:column="9">unused<pos:position pos:line="22" pos:column="15"/></name><name pos:line="22" pos:column="15">(<pos:position pos:line="22" pos:column="16"/></name><name pos:line="22" pos:column="16">customDataOffset<pos:position pos:line="22" pos:column="32"/></name><name pos:line="22" pos:column="32">)<pos:position pos:line="22" pos:column="33"/></name></cpp:pragma>
<cpp:pragma pos:line="23" pos:column="1">#<cpp:directive pos:line="23" pos:column="2">pragma<pos:position pos:line="23" pos:column="8"/></cpp:directive> <name pos:line="23" pos:column="9">unused<pos:position pos:line="23" pos:column="15"/></name><name pos:line="23" pos:column="15">(<pos:position pos:line="23" pos:column="16"/></name><name pos:line="23" pos:column="16">customDataSize<pos:position pos:line="23" pos:column="30"/></name><name pos:line="23" pos:column="30">)<pos:position pos:line="23" pos:column="31"/></name></cpp:pragma>
<cpp:pragma pos:line="24" pos:column="1">#<cpp:directive pos:line="24" pos:column="2">pragma<pos:position pos:line="24" pos:column="8"/></cpp:directive> <name pos:line="24" pos:column="9">unused<pos:position pos:line="24" pos:column="15"/></name><name pos:line="24" pos:column="15">(<pos:position pos:line="24" pos:column="16"/></name><name pos:line="24" pos:column="16">messageCount<pos:position pos:line="24" pos:column="28"/></name><name pos:line="24" pos:column="28">)<pos:position pos:line="24" pos:column="29"/></name></cpp:pragma>
<cpp:pragma pos:line="25" pos:column="1">#<cpp:directive pos:line="25" pos:column="2">pragma<pos:position pos:line="25" pos:column="8"/></cpp:directive> <name pos:line="25" pos:column="9">unused<pos:position pos:line="25" pos:column="15"/></name><name pos:line="25" pos:column="15">(<pos:position pos:line="25" pos:column="16"/></name><name pos:line="25" pos:column="16">messages<pos:position pos:line="25" pos:column="24"/></name><name pos:line="25" pos:column="24">)<pos:position pos:line="25" pos:column="25"/></name></cpp:pragma>

    <comment type="block" pos:line="27" pos:column="5">/* register for down server event */</comment>
    <decl_stmt><decl><type><name pos:line="28" pos:column="5">rtag_t<pos:position pos:line="28" pos:column="11"/></name></type> <name pos:line="28" pos:column="12">rt<pos:position pos:line="28" pos:column="14"/></name> <init pos:line="28" pos:column="15">= <expr><call><name pos:line="28" pos:column="17">AllocateResourceTag<pos:position pos:line="28" pos:column="36"/></name><argument_list pos:line="28" pos:column="36">(<argument><expr><name pos:line="28" pos:column="37">NLMHandle<pos:position pos:line="28" pos:column="46"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="28" pos:column="48">"Apache2 Down Server Callback"<pos:position pos:line="28" pos:column="78"/></literal></expr></argument>,
                                    <argument><expr><name pos:line="29" pos:column="37">EventSignature<pos:position pos:line="29" pos:column="51"/></name></expr></argument>)<pos:position pos:line="29" pos:column="52"/></argument_list></call></expr></init></decl>;<pos:position pos:line="29" pos:column="53"/></decl_stmt>

    <expr_stmt><expr><call><name pos:line="31" pos:column="5">NX_WRAP_INTERFACE<pos:position pos:line="31" pos:column="22"/></name><argument_list pos:line="31" pos:column="22">(<argument><expr><operator pos:line="31" pos:column="23">(<pos:position pos:line="31" pos:column="24"/></operator><name pos:line="31" pos:column="24">void<pos:position pos:line="31" pos:column="28"/></name> <operator pos:line="31" pos:column="29">*<pos:position pos:line="31" pos:column="30"/></operator><operator pos:line="31" pos:column="30">)<pos:position pos:line="31" pos:column="31"/></operator><name pos:line="31" pos:column="31">ap_down_server_cb<pos:position pos:line="31" pos:column="48"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="31" pos:column="50">2<pos:position pos:line="31" pos:column="51"/></literal></expr></argument>, <argument><expr><operator pos:line="31" pos:column="53">(<pos:position pos:line="31" pos:column="54"/></operator><name pos:line="31" pos:column="54">void<pos:position pos:line="31" pos:column="58"/></name> <operator pos:line="31" pos:column="59">*<pos:position pos:line="31" pos:column="60"/></operator><operator pos:line="31" pos:column="60">*<pos:position pos:line="31" pos:column="61"/></operator><operator pos:line="31" pos:column="61">)<pos:position pos:line="31" pos:column="62"/></operator><operator pos:line="31" pos:column="62">&amp;<pos:position pos:line="31" pos:column="67"/></operator><name pos:line="31" pos:column="63">ref<pos:position pos:line="31" pos:column="66"/></name></expr></argument>)<pos:position pos:line="31" pos:column="67"/></argument_list></call></expr>;<pos:position pos:line="31" pos:column="68"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="32" pos:column="5">NX_WRAP_INTERFACE<pos:position pos:line="32" pos:column="22"/></name><argument_list pos:line="32" pos:column="22">(<argument><expr><operator pos:line="32" pos:column="23">(<pos:position pos:line="32" pos:column="24"/></operator><name pos:line="32" pos:column="24">void<pos:position pos:line="32" pos:column="28"/></name> <operator pos:line="32" pos:column="29">*<pos:position pos:line="32" pos:column="30"/></operator><operator pos:line="32" pos:column="30">)<pos:position pos:line="32" pos:column="31"/></operator><name pos:line="32" pos:column="31">ap_dummy_cb<pos:position pos:line="32" pos:column="42"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="32" pos:column="44">2<pos:position pos:line="32" pos:column="45"/></literal></expr></argument>, <argument><expr><operator pos:line="32" pos:column="47">(<pos:position pos:line="32" pos:column="48"/></operator><name pos:line="32" pos:column="48">void<pos:position pos:line="32" pos:column="52"/></name> <operator pos:line="32" pos:column="53">*<pos:position pos:line="32" pos:column="54"/></operator><operator pos:line="32" pos:column="54">*<pos:position pos:line="32" pos:column="55"/></operator><operator pos:line="32" pos:column="55">)<pos:position pos:line="32" pos:column="56"/></operator><operator pos:line="32" pos:column="56">&amp;<pos:position pos:line="32" pos:column="61"/></operator><name pos:line="32" pos:column="57">dum<pos:position pos:line="32" pos:column="60"/></name></expr></argument>)<pos:position pos:line="32" pos:column="61"/></argument_list></call></expr>;<pos:position pos:line="32" pos:column="62"/></expr_stmt>
    <expr_stmt><expr><name pos:line="33" pos:column="5">eh<pos:position pos:line="33" pos:column="7"/></name> <operator pos:line="33" pos:column="8">=<pos:position pos:line="33" pos:column="9"/></operator> <call><name pos:line="33" pos:column="10">RegisterForEventNotification<pos:position pos:line="33" pos:column="38"/></name><argument_list pos:line="33" pos:column="38">(<argument><expr><name pos:line="33" pos:column="39">rt<pos:position pos:line="33" pos:column="41"/></name></expr></argument>, <argument><expr><name pos:line="33" pos:column="43">EVENT_DOWN_SERVER<pos:position pos:line="33" pos:column="60"/></name></expr></argument>,
                                      <argument><expr><name pos:line="34" pos:column="39">EVENT_PRIORITY_APPLICATION<pos:position pos:line="34" pos:column="65"/></name></expr></argument>,
                                      <argument><expr><name pos:line="35" pos:column="39">ref<pos:position pos:line="35" pos:column="42"/></name></expr></argument>, <argument><expr><name pos:line="35" pos:column="44">dum<pos:position pos:line="35" pos:column="47"/></name></expr></argument>, <argument><expr><name pos:line="35" pos:column="49">NULL<pos:position pos:line="35" pos:column="53"/></name></expr></argument>)<pos:position pos:line="35" pos:column="54"/></argument_list></call></expr>;<pos:position pos:line="35" pos:column="55"/></expr_stmt>

    <comment type="block" pos:line="37" pos:column="5">/* clean-up */</comment>
    <expr_stmt><expr><call><name pos:line="38" pos:column="5">NXVmRegisterExitHandler<pos:position pos:line="38" pos:column="28"/></name><argument_list pos:line="38" pos:column="28">(<argument><expr><name pos:line="38" pos:column="29">ap_cb_destroy<pos:position pos:line="38" pos:column="42"/></name></expr></argument>, <argument><expr><name pos:line="38" pos:column="44">NULL<pos:position pos:line="38" pos:column="48"/></name></expr></argument>)<pos:position pos:line="38" pos:column="49"/></argument_list></call></expr>;<pos:position pos:line="38" pos:column="50"/></expr_stmt>

    <return pos:line="40" pos:column="5">return <expr><literal type="number" pos:line="40" pos:column="12">0<pos:position pos:line="40" pos:column="13"/></literal></expr>;<pos:position pos:line="40" pos:column="14"/></return>
}<pos:position pos:line="41" pos:column="2"/></block></function></unit>

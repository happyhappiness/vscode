<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/httpd/gumtree/httpd_repos_function_3440_httpd-2.4.16.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">apr_status_t<pos:position pos:line="1" pos:column="20"/></name></type> <name pos:line="1" pos:column="21">send_brigade_nonblocking<pos:position pos:line="1" pos:column="45"/></name><parameter_list pos:line="1" pos:column="45">(<parameter><decl><type><name pos:line="1" pos:column="46">apr_socket_t<pos:position pos:line="1" pos:column="58"/></name> <modifier pos:line="1" pos:column="59">*<pos:position pos:line="1" pos:column="60"/></modifier></type><name pos:line="1" pos:column="60">s<pos:position pos:line="1" pos:column="61"/></name></decl></parameter>,
                                             <parameter><decl><type><name pos:line="2" pos:column="46">apr_bucket_brigade<pos:position pos:line="2" pos:column="64"/></name> <modifier pos:line="2" pos:column="65">*<pos:position pos:line="2" pos:column="66"/></modifier></type><name pos:line="2" pos:column="66">bb<pos:position pos:line="2" pos:column="68"/></name></decl></parameter>,
                                             <parameter><decl><type><name pos:line="3" pos:column="46">apr_size_t<pos:position pos:line="3" pos:column="56"/></name> <modifier pos:line="3" pos:column="57">*<pos:position pos:line="3" pos:column="58"/></modifier></type><name pos:line="3" pos:column="58">bytes_written<pos:position pos:line="3" pos:column="71"/></name></decl></parameter>,
                                             <parameter><decl><type><name pos:line="4" pos:column="46">conn_rec<pos:position pos:line="4" pos:column="54"/></name> <modifier pos:line="4" pos:column="55">*<pos:position pos:line="4" pos:column="56"/></modifier></type><name pos:line="4" pos:column="56">c<pos:position pos:line="4" pos:column="57"/></name></decl></parameter>)<pos:position pos:line="4" pos:column="58"/></parameter_list>
<block pos:line="5" pos:column="1">{
    <decl_stmt><decl><type><name pos:line="6" pos:column="5">apr_bucket<pos:position pos:line="6" pos:column="15"/></name> <modifier pos:line="6" pos:column="16">*<pos:position pos:line="6" pos:column="17"/></modifier></type><name pos:line="6" pos:column="17">bucket<pos:position pos:line="6" pos:column="23"/></name></decl>, <modifier pos:line="6" pos:column="25">*<pos:position pos:line="6" pos:column="26"/></modifier><decl><type ref="prev"/><name pos:line="6" pos:column="26">next<pos:position pos:line="6" pos:column="30"/></name></decl>;<pos:position pos:line="6" pos:column="31"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="7" pos:column="5">apr_status_t<pos:position pos:line="7" pos:column="17"/></name></type> <name pos:line="7" pos:column="18">rv<pos:position pos:line="7" pos:column="20"/></name></decl>;<pos:position pos:line="7" pos:column="21"/></decl_stmt>
    <decl_stmt><decl><type><name><name pos:line="8" pos:column="5">struct<pos:position pos:line="8" pos:column="11"/></name> <name pos:line="8" pos:column="12">iovec<pos:position pos:line="8" pos:column="17"/></name></name></type> <name><name pos:line="8" pos:column="18">vec<pos:position pos:line="8" pos:column="21"/></name><index pos:line="8" pos:column="21">[<expr><name pos:line="8" pos:column="22">MAX_IOVEC_TO_WRITE<pos:position pos:line="8" pos:column="40"/></name></expr>]<pos:position pos:line="8" pos:column="41"/></index></name></decl>;<pos:position pos:line="8" pos:column="42"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="9" pos:column="5">apr_size_t<pos:position pos:line="9" pos:column="15"/></name></type> <name pos:line="9" pos:column="16">nvec<pos:position pos:line="9" pos:column="20"/></name> <init pos:line="9" pos:column="21">= <expr><literal type="number" pos:line="9" pos:column="23">0<pos:position pos:line="9" pos:column="24"/></literal></expr></init></decl>;<pos:position pos:line="9" pos:column="25"/></decl_stmt>

    <expr_stmt><expr><call><name pos:line="11" pos:column="5">remove_empty_buckets<pos:position pos:line="11" pos:column="25"/></name><argument_list pos:line="11" pos:column="25">(<argument><expr><name pos:line="11" pos:column="26">bb<pos:position pos:line="11" pos:column="28"/></name></expr></argument>)<pos:position pos:line="11" pos:column="29"/></argument_list></call></expr>;<pos:position pos:line="11" pos:column="30"/></expr_stmt>

    <for pos:line="13" pos:column="5">for <control pos:line="13" pos:column="9">(<init><expr><name pos:line="13" pos:column="10">bucket<pos:position pos:line="13" pos:column="16"/></name> <operator pos:line="13" pos:column="17">=<pos:position pos:line="13" pos:column="18"/></operator> <call><name pos:line="13" pos:column="19">APR_BRIGADE_FIRST<pos:position pos:line="13" pos:column="36"/></name><argument_list pos:line="13" pos:column="36">(<argument><expr><name pos:line="13" pos:column="37">bb<pos:position pos:line="13" pos:column="39"/></name></expr></argument>)<pos:position pos:line="13" pos:column="40"/></argument_list></call></expr>;<pos:position pos:line="13" pos:column="41"/></init>
         <condition><expr><name pos:line="14" pos:column="10">bucket<pos:position pos:line="14" pos:column="16"/></name> <operator pos:line="14" pos:column="17">!=<pos:position pos:line="14" pos:column="19"/></operator> <call><name pos:line="14" pos:column="20">APR_BRIGADE_SENTINEL<pos:position pos:line="14" pos:column="40"/></name><argument_list pos:line="14" pos:column="40">(<argument><expr><name pos:line="14" pos:column="41">bb<pos:position pos:line="14" pos:column="43"/></name></expr></argument>)<pos:position pos:line="14" pos:column="44"/></argument_list></call></expr>;<pos:position pos:line="14" pos:column="45"/></condition>
         <incr><expr><name pos:line="15" pos:column="10">bucket<pos:position pos:line="15" pos:column="16"/></name> <operator pos:line="15" pos:column="17">=<pos:position pos:line="15" pos:column="18"/></operator> <name pos:line="15" pos:column="19">next<pos:position pos:line="15" pos:column="23"/></name></expr></incr>)<pos:position pos:line="15" pos:column="24"/></control> <block pos:line="15" pos:column="25">{
        <expr_stmt><expr><name pos:line="16" pos:column="9">next<pos:position pos:line="16" pos:column="13"/></name> <operator pos:line="16" pos:column="14">=<pos:position pos:line="16" pos:column="15"/></operator> <call><name pos:line="16" pos:column="16">APR_BUCKET_NEXT<pos:position pos:line="16" pos:column="31"/></name><argument_list pos:line="16" pos:column="31">(<argument><expr><name pos:line="16" pos:column="32">bucket<pos:position pos:line="16" pos:column="38"/></name></expr></argument>)<pos:position pos:line="16" pos:column="39"/></argument_list></call></expr>;<pos:position pos:line="16" pos:column="40"/></expr_stmt>
<cpp:if pos:line="17" pos:column="1">#<cpp:directive pos:line="17" pos:column="2">if<pos:position pos:line="17" pos:column="4"/></cpp:directive> <expr><name pos:line="17" pos:column="5">APR_HAS_SENDFILE<pos:position pos:line="17" pos:column="21"/></name></expr></cpp:if>
        <if pos:line="18" pos:column="9">if <condition pos:line="18" pos:column="12">(<expr><call><name pos:line="18" pos:column="13">APR_BUCKET_IS_FILE<pos:position pos:line="18" pos:column="31"/></name><argument_list pos:line="18" pos:column="31">(<argument><expr><name pos:line="18" pos:column="32">bucket<pos:position pos:line="18" pos:column="38"/></name></expr></argument>)<pos:position pos:line="18" pos:column="39"/></argument_list></call></expr>)<pos:position pos:line="18" pos:column="40"/></condition><then pos:line="18" pos:column="40"> <block pos:line="18" pos:column="41">{
            <decl_stmt><decl><type><name pos:line="19" pos:column="13">apr_bucket_file<pos:position pos:line="19" pos:column="28"/></name> <modifier pos:line="19" pos:column="29">*<pos:position pos:line="19" pos:column="30"/></modifier></type><name pos:line="19" pos:column="30">file_bucket<pos:position pos:line="19" pos:column="41"/></name> <init pos:line="19" pos:column="42">= <expr><operator pos:line="19" pos:column="44">(<pos:position pos:line="19" pos:column="45"/></operator><name pos:line="19" pos:column="45">apr_bucket_file<pos:position pos:line="19" pos:column="60"/></name> <operator pos:line="19" pos:column="61">*<pos:position pos:line="19" pos:column="62"/></operator><operator pos:line="19" pos:column="62">)<pos:position pos:line="19" pos:column="63"/></operator><operator pos:line="19" pos:column="63">(<pos:position pos:line="19" pos:column="64"/></operator><name><name pos:line="19" pos:column="64">bucket<pos:position pos:line="19" pos:column="70"/></name><operator pos:line="19" pos:column="70">-&gt;<pos:position pos:line="19" pos:column="75"/></operator><name pos:line="19" pos:column="72">data<pos:position pos:line="19" pos:column="76"/></name></name><operator pos:line="19" pos:column="76">)<pos:position pos:line="19" pos:column="77"/></operator></expr></init></decl>;<pos:position pos:line="19" pos:column="78"/></decl_stmt>
            <decl_stmt><decl><type><name pos:line="20" pos:column="13">apr_file_t<pos:position pos:line="20" pos:column="23"/></name> <modifier pos:line="20" pos:column="24">*<pos:position pos:line="20" pos:column="25"/></modifier></type><name pos:line="20" pos:column="25">fd<pos:position pos:line="20" pos:column="27"/></name> <init pos:line="20" pos:column="28">= <expr><name><name pos:line="20" pos:column="30">file_bucket<pos:position pos:line="20" pos:column="41"/></name><operator pos:line="20" pos:column="41">-&gt;<pos:position pos:line="20" pos:column="46"/></operator><name pos:line="20" pos:column="43">fd<pos:position pos:line="20" pos:column="45"/></name></name></expr></init></decl>;<pos:position pos:line="20" pos:column="46"/></decl_stmt>
            <comment type="block" pos:line="21" pos:column="13">/* Use sendfile to send this file unless:
             *   - the platform doesn't support sendfile,
             *   - the file is too small for sendfile to be useful, or
             *   - sendfile is disabled in the httpd config via "EnableSendfile off"
             */</comment>

            <if pos:line="27" pos:column="13">if <condition pos:line="27" pos:column="16">(<expr><operator pos:line="27" pos:column="17">(<pos:position pos:line="27" pos:column="18"/></operator><call><name pos:line="27" pos:column="18">apr_file_flags_get<pos:position pos:line="27" pos:column="36"/></name><argument_list pos:line="27" pos:column="36">(<argument><expr><name pos:line="27" pos:column="37">fd<pos:position pos:line="27" pos:column="39"/></name></expr></argument>)<pos:position pos:line="27" pos:column="40"/></argument_list></call> <operator pos:line="27" pos:column="41">&amp;<pos:position pos:line="27" pos:column="46"/></operator> <name pos:line="27" pos:column="43">APR_SENDFILE_ENABLED<pos:position pos:line="27" pos:column="63"/></name><operator pos:line="27" pos:column="63">)<pos:position pos:line="27" pos:column="64"/></operator> <operator pos:line="27" pos:column="65">&amp;&amp;<pos:position pos:line="27" pos:column="75"/></operator>
                <operator pos:line="28" pos:column="17">(<pos:position pos:line="28" pos:column="18"/></operator><name><name pos:line="28" pos:column="18">bucket<pos:position pos:line="28" pos:column="24"/></name><operator pos:line="28" pos:column="24">-&gt;<pos:position pos:line="28" pos:column="29"/></operator><name pos:line="28" pos:column="26">length<pos:position pos:line="28" pos:column="32"/></name></name> <operator pos:line="28" pos:column="33">&gt;=<pos:position pos:line="28" pos:column="38"/></operator> <name pos:line="28" pos:column="36">AP_MIN_SENDFILE_BYTES<pos:position pos:line="28" pos:column="57"/></name><operator pos:line="28" pos:column="57">)<pos:position pos:line="28" pos:column="58"/></operator></expr>)<pos:position pos:line="28" pos:column="59"/></condition><then pos:line="28" pos:column="59"> <block pos:line="28" pos:column="60">{
                <if pos:line="29" pos:column="17">if <condition pos:line="29" pos:column="20">(<expr><name pos:line="29" pos:column="21">nvec<pos:position pos:line="29" pos:column="25"/></name> <operator pos:line="29" pos:column="26">&gt;<pos:position pos:line="29" pos:column="30"/></operator> <literal type="number" pos:line="29" pos:column="28">0<pos:position pos:line="29" pos:column="29"/></literal></expr>)<pos:position pos:line="29" pos:column="30"/></condition><then pos:line="29" pos:column="30"> <block pos:line="29" pos:column="31">{
                    <expr_stmt><expr><operator pos:line="30" pos:column="21">(<pos:position pos:line="30" pos:column="22"/></operator><name pos:line="30" pos:column="22">void<pos:position pos:line="30" pos:column="26"/></name><operator pos:line="30" pos:column="26">)<pos:position pos:line="30" pos:column="27"/></operator><call><name pos:line="30" pos:column="27">apr_socket_opt_set<pos:position pos:line="30" pos:column="45"/></name><argument_list pos:line="30" pos:column="45">(<argument><expr><name pos:line="30" pos:column="46">s<pos:position pos:line="30" pos:column="47"/></name></expr></argument>, <argument><expr><name pos:line="30" pos:column="49">APR_TCP_NOPUSH<pos:position pos:line="30" pos:column="63"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="30" pos:column="65">1<pos:position pos:line="30" pos:column="66"/></literal></expr></argument>)<pos:position pos:line="30" pos:column="67"/></argument_list></call></expr>;<pos:position pos:line="30" pos:column="68"/></expr_stmt>
                    <expr_stmt><expr><name pos:line="31" pos:column="21">rv<pos:position pos:line="31" pos:column="23"/></name> <operator pos:line="31" pos:column="24">=<pos:position pos:line="31" pos:column="25"/></operator> <call><name pos:line="31" pos:column="26">writev_nonblocking<pos:position pos:line="31" pos:column="44"/></name><argument_list pos:line="31" pos:column="44">(<argument><expr><name pos:line="31" pos:column="45">s<pos:position pos:line="31" pos:column="46"/></name></expr></argument>, <argument><expr><name pos:line="31" pos:column="48">vec<pos:position pos:line="31" pos:column="51"/></name></expr></argument>, <argument><expr><name pos:line="31" pos:column="53">nvec<pos:position pos:line="31" pos:column="57"/></name></expr></argument>, <argument><expr><name pos:line="31" pos:column="59">bb<pos:position pos:line="31" pos:column="61"/></name></expr></argument>, <argument><expr><name pos:line="31" pos:column="63">bytes_written<pos:position pos:line="31" pos:column="76"/></name></expr></argument>, <argument><expr><name pos:line="31" pos:column="78">c<pos:position pos:line="31" pos:column="79"/></name></expr></argument>)<pos:position pos:line="31" pos:column="80"/></argument_list></call></expr>;<pos:position pos:line="31" pos:column="81"/></expr_stmt>
                    <if pos:line="32" pos:column="21">if <condition pos:line="32" pos:column="24">(<expr><name pos:line="32" pos:column="25">rv<pos:position pos:line="32" pos:column="27"/></name> <operator pos:line="32" pos:column="28">!=<pos:position pos:line="32" pos:column="30"/></operator> <name pos:line="32" pos:column="31">APR_SUCCESS<pos:position pos:line="32" pos:column="42"/></name></expr>)<pos:position pos:line="32" pos:column="43"/></condition><then pos:line="32" pos:column="43"> <block pos:line="32" pos:column="44">{
                        <expr_stmt><expr><operator pos:line="33" pos:column="25">(<pos:position pos:line="33" pos:column="26"/></operator><name pos:line="33" pos:column="26">void<pos:position pos:line="33" pos:column="30"/></name><operator pos:line="33" pos:column="30">)<pos:position pos:line="33" pos:column="31"/></operator><call><name pos:line="33" pos:column="31">apr_socket_opt_set<pos:position pos:line="33" pos:column="49"/></name><argument_list pos:line="33" pos:column="49">(<argument><expr><name pos:line="33" pos:column="50">s<pos:position pos:line="33" pos:column="51"/></name></expr></argument>, <argument><expr><name pos:line="33" pos:column="53">APR_TCP_NOPUSH<pos:position pos:line="33" pos:column="67"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="33" pos:column="69">0<pos:position pos:line="33" pos:column="70"/></literal></expr></argument>)<pos:position pos:line="33" pos:column="71"/></argument_list></call></expr>;<pos:position pos:line="33" pos:column="72"/></expr_stmt>
                        <return pos:line="34" pos:column="25">return <expr><name pos:line="34" pos:column="32">rv<pos:position pos:line="34" pos:column="34"/></name></expr>;<pos:position pos:line="34" pos:column="35"/></return>
                    }<pos:position pos:line="35" pos:column="22"/></block></then></if>
                }<pos:position pos:line="36" pos:column="18"/></block></then></if>
                <expr_stmt><expr><name pos:line="37" pos:column="17">rv<pos:position pos:line="37" pos:column="19"/></name> <operator pos:line="37" pos:column="20">=<pos:position pos:line="37" pos:column="21"/></operator> <call><name pos:line="37" pos:column="22">sendfile_nonblocking<pos:position pos:line="37" pos:column="42"/></name><argument_list pos:line="37" pos:column="42">(<argument><expr><name pos:line="37" pos:column="43">s<pos:position pos:line="37" pos:column="44"/></name></expr></argument>, <argument><expr><name pos:line="37" pos:column="46">bucket<pos:position pos:line="37" pos:column="52"/></name></expr></argument>, <argument><expr><name pos:line="37" pos:column="54">bytes_written<pos:position pos:line="37" pos:column="67"/></name></expr></argument>, <argument><expr><name pos:line="37" pos:column="69">c<pos:position pos:line="37" pos:column="70"/></name></expr></argument>)<pos:position pos:line="37" pos:column="71"/></argument_list></call></expr>;<pos:position pos:line="37" pos:column="72"/></expr_stmt>
                <if pos:line="38" pos:column="17">if <condition pos:line="38" pos:column="20">(<expr><name pos:line="38" pos:column="21">nvec<pos:position pos:line="38" pos:column="25"/></name> <operator pos:line="38" pos:column="26">&gt;<pos:position pos:line="38" pos:column="30"/></operator> <literal type="number" pos:line="38" pos:column="28">0<pos:position pos:line="38" pos:column="29"/></literal></expr>)<pos:position pos:line="38" pos:column="30"/></condition><then pos:line="38" pos:column="30"> <block pos:line="38" pos:column="31">{
                    <expr_stmt><expr><operator pos:line="39" pos:column="21">(<pos:position pos:line="39" pos:column="22"/></operator><name pos:line="39" pos:column="22">void<pos:position pos:line="39" pos:column="26"/></name><operator pos:line="39" pos:column="26">)<pos:position pos:line="39" pos:column="27"/></operator><call><name pos:line="39" pos:column="27">apr_socket_opt_set<pos:position pos:line="39" pos:column="45"/></name><argument_list pos:line="39" pos:column="45">(<argument><expr><name pos:line="39" pos:column="46">s<pos:position pos:line="39" pos:column="47"/></name></expr></argument>, <argument><expr><name pos:line="39" pos:column="49">APR_TCP_NOPUSH<pos:position pos:line="39" pos:column="63"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="39" pos:column="65">0<pos:position pos:line="39" pos:column="66"/></literal></expr></argument>)<pos:position pos:line="39" pos:column="67"/></argument_list></call></expr>;<pos:position pos:line="39" pos:column="68"/></expr_stmt>
                    <expr_stmt><expr><name pos:line="40" pos:column="21">nvec<pos:position pos:line="40" pos:column="25"/></name> <operator pos:line="40" pos:column="26">=<pos:position pos:line="40" pos:column="27"/></operator> <literal type="number" pos:line="40" pos:column="28">0<pos:position pos:line="40" pos:column="29"/></literal></expr>;<pos:position pos:line="40" pos:column="30"/></expr_stmt>
                }<pos:position pos:line="41" pos:column="18"/></block></then></if>
                <if pos:line="42" pos:column="17">if <condition pos:line="42" pos:column="20">(<expr><name pos:line="42" pos:column="21">rv<pos:position pos:line="42" pos:column="23"/></name> <operator pos:line="42" pos:column="24">!=<pos:position pos:line="42" pos:column="26"/></operator> <name pos:line="42" pos:column="27">APR_SUCCESS<pos:position pos:line="42" pos:column="38"/></name></expr>)<pos:position pos:line="42" pos:column="39"/></condition><then pos:line="42" pos:column="39"> <block pos:line="42" pos:column="40">{
                    <return pos:line="43" pos:column="21">return <expr><name pos:line="43" pos:column="28">rv<pos:position pos:line="43" pos:column="30"/></name></expr>;<pos:position pos:line="43" pos:column="31"/></return>
                }<pos:position pos:line="44" pos:column="18"/></block></then></if>
                <break pos:line="45" pos:column="17">break;<pos:position pos:line="45" pos:column="23"/></break>
            }<pos:position pos:line="46" pos:column="14"/></block></then></if>
        }<pos:position pos:line="47" pos:column="10"/></block></then></if>
<cpp:endif pos:line="48" pos:column="1">#<cpp:directive pos:line="48" pos:column="2">endif<pos:position pos:line="48" pos:column="7"/></cpp:directive></cpp:endif> <comment type="block" pos:line="48" pos:column="8">/* APR_HAS_SENDFILE */</comment>
        <comment type="block" pos:line="49" pos:column="9">/* didn't sendfile */</comment>
        <if pos:line="50" pos:column="9">if <condition pos:line="50" pos:column="12">(<expr><operator pos:line="50" pos:column="13">!<pos:position pos:line="50" pos:column="14"/></operator><call><name pos:line="50" pos:column="14">APR_BUCKET_IS_METADATA<pos:position pos:line="50" pos:column="36"/></name><argument_list pos:line="50" pos:column="36">(<argument><expr><name pos:line="50" pos:column="37">bucket<pos:position pos:line="50" pos:column="43"/></name></expr></argument>)<pos:position pos:line="50" pos:column="44"/></argument_list></call></expr>)<pos:position pos:line="50" pos:column="45"/></condition><then pos:line="50" pos:column="45"> <block pos:line="50" pos:column="46">{
            <decl_stmt><decl><type><specifier pos:line="51" pos:column="13">const<pos:position pos:line="51" pos:column="18"/></specifier> <name pos:line="51" pos:column="19">char<pos:position pos:line="51" pos:column="23"/></name> <modifier pos:line="51" pos:column="24">*<pos:position pos:line="51" pos:column="25"/></modifier></type><name pos:line="51" pos:column="25">data<pos:position pos:line="51" pos:column="29"/></name></decl>;<pos:position pos:line="51" pos:column="30"/></decl_stmt>
            <decl_stmt><decl><type><name pos:line="52" pos:column="13">apr_size_t<pos:position pos:line="52" pos:column="23"/></name></type> <name pos:line="52" pos:column="24">length<pos:position pos:line="52" pos:column="30"/></name></decl>;<pos:position pos:line="52" pos:column="31"/></decl_stmt>
            
            <comment type="block" pos:line="54" pos:column="13">/* Non-blocking read first, in case this is a morphing
             * bucket type. */</comment>
            <expr_stmt><expr><name pos:line="56" pos:column="13">rv<pos:position pos:line="56" pos:column="15"/></name> <operator pos:line="56" pos:column="16">=<pos:position pos:line="56" pos:column="17"/></operator> <call><name pos:line="56" pos:column="18">apr_bucket_read<pos:position pos:line="56" pos:column="33"/></name><argument_list pos:line="56" pos:column="33">(<argument><expr><name pos:line="56" pos:column="34">bucket<pos:position pos:line="56" pos:column="40"/></name></expr></argument>, <argument><expr><operator pos:line="56" pos:column="42">&amp;<pos:position pos:line="56" pos:column="47"/></operator><name pos:line="56" pos:column="43">data<pos:position pos:line="56" pos:column="47"/></name></expr></argument>, <argument><expr><operator pos:line="56" pos:column="49">&amp;<pos:position pos:line="56" pos:column="54"/></operator><name pos:line="56" pos:column="50">length<pos:position pos:line="56" pos:column="56"/></name></expr></argument>, <argument><expr><name pos:line="56" pos:column="58">APR_NONBLOCK_READ<pos:position pos:line="56" pos:column="75"/></name></expr></argument>)<pos:position pos:line="56" pos:column="76"/></argument_list></call></expr>;<pos:position pos:line="56" pos:column="77"/></expr_stmt>
            <if pos:line="57" pos:column="13">if <condition pos:line="57" pos:column="16">(<expr><call><name pos:line="57" pos:column="17">APR_STATUS_IS_EAGAIN<pos:position pos:line="57" pos:column="37"/></name><argument_list pos:line="57" pos:column="37">(<argument><expr><name pos:line="57" pos:column="38">rv<pos:position pos:line="57" pos:column="40"/></name></expr></argument>)<pos:position pos:line="57" pos:column="41"/></argument_list></call></expr>)<pos:position pos:line="57" pos:column="42"/></condition><then pos:line="57" pos:column="42"> <block pos:line="57" pos:column="43">{
                <comment type="block" pos:line="58" pos:column="17">/* Read would block; flush any pending data and retry. */</comment>
                <if pos:line="59" pos:column="17">if <condition pos:line="59" pos:column="20">(<expr><name pos:line="59" pos:column="21">nvec<pos:position pos:line="59" pos:column="25"/></name></expr>)<pos:position pos:line="59" pos:column="26"/></condition><then pos:line="59" pos:column="26"> <block pos:line="59" pos:column="27">{
                    <expr_stmt><expr><name pos:line="60" pos:column="21">rv<pos:position pos:line="60" pos:column="23"/></name> <operator pos:line="60" pos:column="24">=<pos:position pos:line="60" pos:column="25"/></operator> <call><name pos:line="60" pos:column="26">writev_nonblocking<pos:position pos:line="60" pos:column="44"/></name><argument_list pos:line="60" pos:column="44">(<argument><expr><name pos:line="60" pos:column="45">s<pos:position pos:line="60" pos:column="46"/></name></expr></argument>, <argument><expr><name pos:line="60" pos:column="48">vec<pos:position pos:line="60" pos:column="51"/></name></expr></argument>, <argument><expr><name pos:line="60" pos:column="53">nvec<pos:position pos:line="60" pos:column="57"/></name></expr></argument>, <argument><expr><name pos:line="60" pos:column="59">bb<pos:position pos:line="60" pos:column="61"/></name></expr></argument>, <argument><expr><name pos:line="60" pos:column="63">bytes_written<pos:position pos:line="60" pos:column="76"/></name></expr></argument>, <argument><expr><name pos:line="60" pos:column="78">c<pos:position pos:line="60" pos:column="79"/></name></expr></argument>)<pos:position pos:line="60" pos:column="80"/></argument_list></call></expr>;<pos:position pos:line="60" pos:column="81"/></expr_stmt>
                    <if pos:line="61" pos:column="21">if <condition pos:line="61" pos:column="24">(<expr><name pos:line="61" pos:column="25">rv<pos:position pos:line="61" pos:column="27"/></name></expr>)<pos:position pos:line="61" pos:column="28"/></condition><then pos:line="61" pos:column="28"> <block pos:line="61" pos:column="29">{
                        <return pos:line="62" pos:column="25">return <expr><name pos:line="62" pos:column="32">rv<pos:position pos:line="62" pos:column="34"/></name></expr>;<pos:position pos:line="62" pos:column="35"/></return>
                    }<pos:position pos:line="63" pos:column="22"/></block></then></if>
                    <expr_stmt><expr><name pos:line="64" pos:column="21">nvec<pos:position pos:line="64" pos:column="25"/></name> <operator pos:line="64" pos:column="26">=<pos:position pos:line="64" pos:column="27"/></operator> <literal type="number" pos:line="64" pos:column="28">0<pos:position pos:line="64" pos:column="29"/></literal></expr>;<pos:position pos:line="64" pos:column="30"/></expr_stmt>
                }<pos:position pos:line="65" pos:column="18"/></block></then></if>
                
                <expr_stmt><expr><name pos:line="67" pos:column="17">rv<pos:position pos:line="67" pos:column="19"/></name> <operator pos:line="67" pos:column="20">=<pos:position pos:line="67" pos:column="21"/></operator> <call><name pos:line="67" pos:column="22">apr_bucket_read<pos:position pos:line="67" pos:column="37"/></name><argument_list pos:line="67" pos:column="37">(<argument><expr><name pos:line="67" pos:column="38">bucket<pos:position pos:line="67" pos:column="44"/></name></expr></argument>, <argument><expr><operator pos:line="67" pos:column="46">&amp;<pos:position pos:line="67" pos:column="51"/></operator><name pos:line="67" pos:column="47">data<pos:position pos:line="67" pos:column="51"/></name></expr></argument>, <argument><expr><operator pos:line="67" pos:column="53">&amp;<pos:position pos:line="67" pos:column="58"/></operator><name pos:line="67" pos:column="54">length<pos:position pos:line="67" pos:column="60"/></name></expr></argument>, <argument><expr><name pos:line="67" pos:column="62">APR_BLOCK_READ<pos:position pos:line="67" pos:column="76"/></name></expr></argument>)<pos:position pos:line="67" pos:column="77"/></argument_list></call></expr>;<pos:position pos:line="67" pos:column="78"/></expr_stmt>
            }<pos:position pos:line="68" pos:column="14"/></block></then></if>
            <if pos:line="69" pos:column="13">if <condition pos:line="69" pos:column="16">(<expr><name pos:line="69" pos:column="17">rv<pos:position pos:line="69" pos:column="19"/></name> <operator pos:line="69" pos:column="20">!=<pos:position pos:line="69" pos:column="22"/></operator> <name pos:line="69" pos:column="23">APR_SUCCESS<pos:position pos:line="69" pos:column="34"/></name></expr>)<pos:position pos:line="69" pos:column="35"/></condition><then pos:line="69" pos:column="35"> <block pos:line="69" pos:column="36">{
                <return pos:line="70" pos:column="17">return <expr><name pos:line="70" pos:column="24">rv<pos:position pos:line="70" pos:column="26"/></name></expr>;<pos:position pos:line="70" pos:column="27"/></return>
            }<pos:position pos:line="71" pos:column="14"/></block></then></if>

            <comment type="block" pos:line="73" pos:column="13">/* reading may have split the bucket, so recompute next: */</comment>
            <expr_stmt><expr><name pos:line="74" pos:column="13">next<pos:position pos:line="74" pos:column="17"/></name> <operator pos:line="74" pos:column="18">=<pos:position pos:line="74" pos:column="19"/></operator> <call><name pos:line="74" pos:column="20">APR_BUCKET_NEXT<pos:position pos:line="74" pos:column="35"/></name><argument_list pos:line="74" pos:column="35">(<argument><expr><name pos:line="74" pos:column="36">bucket<pos:position pos:line="74" pos:column="42"/></name></expr></argument>)<pos:position pos:line="74" pos:column="43"/></argument_list></call></expr>;<pos:position pos:line="74" pos:column="44"/></expr_stmt>
            <expr_stmt><expr><name><name pos:line="75" pos:column="13">vec<pos:position pos:line="75" pos:column="16"/></name><index pos:line="75" pos:column="16">[<expr><name pos:line="75" pos:column="17">nvec<pos:position pos:line="75" pos:column="21"/></name></expr>]<pos:position pos:line="75" pos:column="22"/></index></name><operator pos:line="75" pos:column="22">.<pos:position pos:line="75" pos:column="23"/></operator><name pos:line="75" pos:column="23">iov_base<pos:position pos:line="75" pos:column="31"/></name> <operator pos:line="75" pos:column="32">=<pos:position pos:line="75" pos:column="33"/></operator> <operator pos:line="75" pos:column="34">(<pos:position pos:line="75" pos:column="35"/></operator><name pos:line="75" pos:column="35">char<pos:position pos:line="75" pos:column="39"/></name> <operator pos:line="75" pos:column="40">*<pos:position pos:line="75" pos:column="41"/></operator><operator pos:line="75" pos:column="41">)<pos:position pos:line="75" pos:column="42"/></operator><name pos:line="75" pos:column="42">data<pos:position pos:line="75" pos:column="46"/></name></expr>;<pos:position pos:line="75" pos:column="47"/></expr_stmt>
            <expr_stmt><expr><name><name pos:line="76" pos:column="13">vec<pos:position pos:line="76" pos:column="16"/></name><index pos:line="76" pos:column="16">[<expr><name pos:line="76" pos:column="17">nvec<pos:position pos:line="76" pos:column="21"/></name></expr>]<pos:position pos:line="76" pos:column="22"/></index></name><operator pos:line="76" pos:column="22">.<pos:position pos:line="76" pos:column="23"/></operator><name pos:line="76" pos:column="23">iov_len<pos:position pos:line="76" pos:column="30"/></name> <operator pos:line="76" pos:column="31">=<pos:position pos:line="76" pos:column="32"/></operator> <name pos:line="76" pos:column="33">length<pos:position pos:line="76" pos:column="39"/></name></expr>;<pos:position pos:line="76" pos:column="40"/></expr_stmt>
            <expr_stmt><expr><name pos:line="77" pos:column="13">nvec<pos:position pos:line="77" pos:column="17"/></name><operator pos:line="77" pos:column="17">++<pos:position pos:line="77" pos:column="19"/></operator></expr>;<pos:position pos:line="77" pos:column="20"/></expr_stmt>
            <if pos:line="78" pos:column="13">if <condition pos:line="78" pos:column="16">(<expr><name pos:line="78" pos:column="17">nvec<pos:position pos:line="78" pos:column="21"/></name> <operator pos:line="78" pos:column="22">==<pos:position pos:line="78" pos:column="24"/></operator> <name pos:line="78" pos:column="25">MAX_IOVEC_TO_WRITE<pos:position pos:line="78" pos:column="43"/></name></expr>)<pos:position pos:line="78" pos:column="44"/></condition><then pos:line="78" pos:column="44"> <block pos:line="78" pos:column="45">{
                <expr_stmt><expr><name pos:line="79" pos:column="17">rv<pos:position pos:line="79" pos:column="19"/></name> <operator pos:line="79" pos:column="20">=<pos:position pos:line="79" pos:column="21"/></operator> <call><name pos:line="79" pos:column="22">writev_nonblocking<pos:position pos:line="79" pos:column="40"/></name><argument_list pos:line="79" pos:column="40">(<argument><expr><name pos:line="79" pos:column="41">s<pos:position pos:line="79" pos:column="42"/></name></expr></argument>, <argument><expr><name pos:line="79" pos:column="44">vec<pos:position pos:line="79" pos:column="47"/></name></expr></argument>, <argument><expr><name pos:line="79" pos:column="49">nvec<pos:position pos:line="79" pos:column="53"/></name></expr></argument>, <argument><expr><name pos:line="79" pos:column="55">bb<pos:position pos:line="79" pos:column="57"/></name></expr></argument>, <argument><expr><name pos:line="79" pos:column="59">bytes_written<pos:position pos:line="79" pos:column="72"/></name></expr></argument>, <argument><expr><name pos:line="79" pos:column="74">c<pos:position pos:line="79" pos:column="75"/></name></expr></argument>)<pos:position pos:line="79" pos:column="76"/></argument_list></call></expr>;<pos:position pos:line="79" pos:column="77"/></expr_stmt>
                <expr_stmt><expr><name pos:line="80" pos:column="17">nvec<pos:position pos:line="80" pos:column="21"/></name> <operator pos:line="80" pos:column="22">=<pos:position pos:line="80" pos:column="23"/></operator> <literal type="number" pos:line="80" pos:column="24">0<pos:position pos:line="80" pos:column="25"/></literal></expr>;<pos:position pos:line="80" pos:column="26"/></expr_stmt>
                <if pos:line="81" pos:column="17">if <condition pos:line="81" pos:column="20">(<expr><name pos:line="81" pos:column="21">rv<pos:position pos:line="81" pos:column="23"/></name> <operator pos:line="81" pos:column="24">!=<pos:position pos:line="81" pos:column="26"/></operator> <name pos:line="81" pos:column="27">APR_SUCCESS<pos:position pos:line="81" pos:column="38"/></name></expr>)<pos:position pos:line="81" pos:column="39"/></condition><then pos:line="81" pos:column="39"> <block pos:line="81" pos:column="40">{
                    <return pos:line="82" pos:column="21">return <expr><name pos:line="82" pos:column="28">rv<pos:position pos:line="82" pos:column="30"/></name></expr>;<pos:position pos:line="82" pos:column="31"/></return>
                }<pos:position pos:line="83" pos:column="18"/></block></then></if>
                <break pos:line="84" pos:column="17">break;<pos:position pos:line="84" pos:column="23"/></break>
            }<pos:position pos:line="85" pos:column="14"/></block></then></if>
        }<pos:position pos:line="86" pos:column="10"/></block></then></if>
    }<pos:position pos:line="87" pos:column="6"/></block></for>

    <if pos:line="89" pos:column="5">if <condition pos:line="89" pos:column="8">(<expr><name pos:line="89" pos:column="9">nvec<pos:position pos:line="89" pos:column="13"/></name> <operator pos:line="89" pos:column="14">&gt;<pos:position pos:line="89" pos:column="18"/></operator> <literal type="number" pos:line="89" pos:column="16">0<pos:position pos:line="89" pos:column="17"/></literal></expr>)<pos:position pos:line="89" pos:column="18"/></condition><then pos:line="89" pos:column="18"> <block pos:line="89" pos:column="19">{
        <expr_stmt><expr><name pos:line="90" pos:column="9">rv<pos:position pos:line="90" pos:column="11"/></name> <operator pos:line="90" pos:column="12">=<pos:position pos:line="90" pos:column="13"/></operator> <call><name pos:line="90" pos:column="14">writev_nonblocking<pos:position pos:line="90" pos:column="32"/></name><argument_list pos:line="90" pos:column="32">(<argument><expr><name pos:line="90" pos:column="33">s<pos:position pos:line="90" pos:column="34"/></name></expr></argument>, <argument><expr><name pos:line="90" pos:column="36">vec<pos:position pos:line="90" pos:column="39"/></name></expr></argument>, <argument><expr><name pos:line="90" pos:column="41">nvec<pos:position pos:line="90" pos:column="45"/></name></expr></argument>, <argument><expr><name pos:line="90" pos:column="47">bb<pos:position pos:line="90" pos:column="49"/></name></expr></argument>, <argument><expr><name pos:line="90" pos:column="51">bytes_written<pos:position pos:line="90" pos:column="64"/></name></expr></argument>, <argument><expr><name pos:line="90" pos:column="66">c<pos:position pos:line="90" pos:column="67"/></name></expr></argument>)<pos:position pos:line="90" pos:column="68"/></argument_list></call></expr>;<pos:position pos:line="90" pos:column="69"/></expr_stmt>
        <if pos:line="91" pos:column="9">if <condition pos:line="91" pos:column="12">(<expr><name pos:line="91" pos:column="13">rv<pos:position pos:line="91" pos:column="15"/></name> <operator pos:line="91" pos:column="16">!=<pos:position pos:line="91" pos:column="18"/></operator> <name pos:line="91" pos:column="19">APR_SUCCESS<pos:position pos:line="91" pos:column="30"/></name></expr>)<pos:position pos:line="91" pos:column="31"/></condition><then pos:line="91" pos:column="31"> <block pos:line="91" pos:column="32">{
            <return pos:line="92" pos:column="13">return <expr><name pos:line="92" pos:column="20">rv<pos:position pos:line="92" pos:column="22"/></name></expr>;<pos:position pos:line="92" pos:column="23"/></return>
        }<pos:position pos:line="93" pos:column="10"/></block></then></if>
    }<pos:position pos:line="94" pos:column="6"/></block></then></if>

    <expr_stmt><expr><call><name pos:line="96" pos:column="5">remove_empty_buckets<pos:position pos:line="96" pos:column="25"/></name><argument_list pos:line="96" pos:column="25">(<argument><expr><name pos:line="96" pos:column="26">bb<pos:position pos:line="96" pos:column="28"/></name></expr></argument>)<pos:position pos:line="96" pos:column="29"/></argument_list></call></expr>;<pos:position pos:line="96" pos:column="30"/></expr_stmt>

    <return pos:line="98" pos:column="5">return <expr><name pos:line="98" pos:column="12">APR_SUCCESS<pos:position pos:line="98" pos:column="23"/></name></expr>;<pos:position pos:line="98" pos:column="24"/></return>
}<pos:position pos:line="99" pos:column="2"/></block></function></unit>

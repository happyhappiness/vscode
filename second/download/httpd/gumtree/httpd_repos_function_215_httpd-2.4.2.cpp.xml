<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/httpd/gumtree/httpd_repos_function_215_httpd-2.4.2.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">dav_error<pos:position pos:line="1" pos:column="17"/></name> <modifier pos:line="1" pos:column="18">*<pos:position pos:line="1" pos:column="19"/></modifier></type> <name pos:line="1" pos:column="20">dav_fs_save_locknull_list<pos:position pos:line="1" pos:column="45"/></name><parameter_list pos:line="1" pos:column="45">(<parameter><decl><type><name pos:line="1" pos:column="46">apr_pool_t<pos:position pos:line="1" pos:column="56"/></name> <modifier pos:line="1" pos:column="57">*<pos:position pos:line="1" pos:column="58"/></modifier></type><name pos:line="1" pos:column="58">p<pos:position pos:line="1" pos:column="59"/></name></decl></parameter>, <parameter><decl><type><specifier pos:line="1" pos:column="61">const<pos:position pos:line="1" pos:column="66"/></specifier> <name pos:line="1" pos:column="67">char<pos:position pos:line="1" pos:column="71"/></name> <modifier pos:line="1" pos:column="72">*<pos:position pos:line="1" pos:column="73"/></modifier></type><name pos:line="1" pos:column="73">dirpath<pos:position pos:line="1" pos:column="80"/></name></decl></parameter>,
                                             <parameter><decl><type><name pos:line="2" pos:column="46">dav_buffer<pos:position pos:line="2" pos:column="56"/></name> <modifier pos:line="2" pos:column="57">*<pos:position pos:line="2" pos:column="58"/></modifier></type><name pos:line="2" pos:column="58">pbuf<pos:position pos:line="2" pos:column="62"/></name></decl></parameter>)<pos:position pos:line="2" pos:column="63"/></parameter_list>
<block pos:line="3" pos:column="1">{
    <decl_stmt><decl><type><specifier pos:line="4" pos:column="5">const<pos:position pos:line="4" pos:column="10"/></specifier> <name pos:line="4" pos:column="11">char<pos:position pos:line="4" pos:column="15"/></name> <modifier pos:line="4" pos:column="16">*<pos:position pos:line="4" pos:column="17"/></modifier></type><name pos:line="4" pos:column="17">pathname<pos:position pos:line="4" pos:column="25"/></name></decl>;<pos:position pos:line="4" pos:column="26"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="5" pos:column="5">apr_file_t<pos:position pos:line="5" pos:column="15"/></name> <modifier pos:line="5" pos:column="16">*<pos:position pos:line="5" pos:column="17"/></modifier></type><name pos:line="5" pos:column="17">file<pos:position pos:line="5" pos:column="21"/></name> <init pos:line="5" pos:column="22">= <expr><name pos:line="5" pos:column="24">NULL<pos:position pos:line="5" pos:column="28"/></name></expr></init></decl>;<pos:position pos:line="5" pos:column="29"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="6" pos:column="5">dav_error<pos:position pos:line="6" pos:column="14"/></name> <modifier pos:line="6" pos:column="15">*<pos:position pos:line="6" pos:column="16"/></modifier></type><name pos:line="6" pos:column="16">err<pos:position pos:line="6" pos:column="19"/></name> <init pos:line="6" pos:column="20">= <expr><name pos:line="6" pos:column="22">NULL<pos:position pos:line="6" pos:column="26"/></name></expr></init></decl>;<pos:position pos:line="6" pos:column="27"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="7" pos:column="5">apr_size_t<pos:position pos:line="7" pos:column="15"/></name></type> <name pos:line="7" pos:column="16">amt<pos:position pos:line="7" pos:column="19"/></name></decl>;<pos:position pos:line="7" pos:column="20"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="8" pos:column="5">apr_status_t<pos:position pos:line="8" pos:column="17"/></name></type> <name pos:line="8" pos:column="18">rv<pos:position pos:line="8" pos:column="20"/></name></decl>;<pos:position pos:line="8" pos:column="21"/></decl_stmt>

    <if pos:line="10" pos:column="5">if <condition pos:line="10" pos:column="8">(<expr><name><name pos:line="10" pos:column="9">pbuf<pos:position pos:line="10" pos:column="13"/></name><operator pos:line="10" pos:column="13">-&gt;<pos:position pos:line="10" pos:column="18"/></operator><name pos:line="10" pos:column="15">buf<pos:position pos:line="10" pos:column="18"/></name></name> <operator pos:line="10" pos:column="19">==<pos:position pos:line="10" pos:column="21"/></operator> <name pos:line="10" pos:column="22">NULL<pos:position pos:line="10" pos:column="26"/></name></expr>)<pos:position pos:line="10" pos:column="27"/></condition><then pos:line="10" pos:column="27">
        <block type="pseudo"><return pos:line="11" pos:column="9">return <expr><name pos:line="11" pos:column="16">NULL<pos:position pos:line="11" pos:column="20"/></name></expr>;<pos:position pos:line="11" pos:column="21"/></return></block></then></if>

    <expr_stmt><expr><call><name pos:line="13" pos:column="5">dav_fs_ensure_state_dir<pos:position pos:line="13" pos:column="28"/></name><argument_list pos:line="13" pos:column="28">(<argument><expr><name pos:line="13" pos:column="29">p<pos:position pos:line="13" pos:column="30"/></name></expr></argument>, <argument><expr><name pos:line="13" pos:column="32">dirpath<pos:position pos:line="13" pos:column="39"/></name></expr></argument>)<pos:position pos:line="13" pos:column="40"/></argument_list></call></expr>;<pos:position pos:line="13" pos:column="41"/></expr_stmt>
    <expr_stmt><expr><name pos:line="14" pos:column="5">pathname<pos:position pos:line="14" pos:column="13"/></name> <operator pos:line="14" pos:column="14">=<pos:position pos:line="14" pos:column="15"/></operator> <call><name pos:line="14" pos:column="16">apr_pstrcat<pos:position pos:line="14" pos:column="27"/></name><argument_list pos:line="14" pos:column="27">(<argument><expr><name pos:line="14" pos:column="28">p<pos:position pos:line="14" pos:column="29"/></name></expr></argument>,
                          <argument><expr><name pos:line="15" pos:column="27">dirpath<pos:position pos:line="15" pos:column="34"/></name></expr></argument>,
                          <argument><expr><ternary><condition><expr><name><name pos:line="16" pos:column="27">dirpath<pos:position pos:line="16" pos:column="34"/></name><index pos:line="16" pos:column="34">[<expr><call><name pos:line="16" pos:column="35">strlen<pos:position pos:line="16" pos:column="41"/></name><argument_list pos:line="16" pos:column="41">(<argument><expr><name pos:line="16" pos:column="42">dirpath<pos:position pos:line="16" pos:column="49"/></name></expr></argument>)<pos:position pos:line="16" pos:column="50"/></argument_list></call> <operator pos:line="16" pos:column="51">-<pos:position pos:line="16" pos:column="52"/></operator> <literal type="number" pos:line="16" pos:column="53">1<pos:position pos:line="16" pos:column="54"/></literal></expr>]<pos:position pos:line="16" pos:column="55"/></index></name> <operator pos:line="16" pos:column="56">==<pos:position pos:line="16" pos:column="58"/></operator> <literal type="char" pos:line="16" pos:column="59">'/'<pos:position pos:line="16" pos:column="62"/></literal></expr> ?<pos:position pos:line="16" pos:column="64"/></condition><then pos:line="16" pos:column="64"> <expr><literal type="string" pos:line="16" pos:column="65">""<pos:position pos:line="16" pos:column="67"/></literal></expr> <pos:position pos:line="16" pos:column="68"/></then><else pos:line="16" pos:column="68">: <expr><literal type="string" pos:line="16" pos:column="70">"/"<pos:position pos:line="16" pos:column="73"/></literal></expr></else></ternary></expr></argument>,
                          <argument><expr><name pos:line="17" pos:column="27">DAV_FS_STATE_DIR<pos:position pos:line="17" pos:column="43"/></name> <literal type="string" pos:line="17" pos:column="44">"/"<pos:position pos:line="17" pos:column="47"/></literal> <name pos:line="17" pos:column="48">DAV_FS_LOCK_NULL_FILE<pos:position pos:line="17" pos:column="69"/></name></expr></argument>,
                          <argument><expr><name pos:line="18" pos:column="27">NULL<pos:position pos:line="18" pos:column="31"/></name></expr></argument>)<pos:position pos:line="18" pos:column="32"/></argument_list></call></expr>;<pos:position pos:line="18" pos:column="33"/></expr_stmt>

    <if pos:line="20" pos:column="5">if <condition pos:line="20" pos:column="8">(<expr><name><name pos:line="20" pos:column="9">pbuf<pos:position pos:line="20" pos:column="13"/></name><operator pos:line="20" pos:column="13">-&gt;<pos:position pos:line="20" pos:column="18"/></operator><name pos:line="20" pos:column="15">cur_len<pos:position pos:line="20" pos:column="22"/></name></name> <operator pos:line="20" pos:column="23">==<pos:position pos:line="20" pos:column="25"/></operator> <literal type="number" pos:line="20" pos:column="26">0<pos:position pos:line="20" pos:column="27"/></literal></expr>)<pos:position pos:line="20" pos:column="28"/></condition><then pos:line="20" pos:column="28"> <block pos:line="20" pos:column="29">{
        <comment type="block" pos:line="21" pos:column="9">/* delete the file if cur_len == 0 */</comment>
        <if pos:line="22" pos:column="9">if <condition pos:line="22" pos:column="12">(<expr><operator pos:line="22" pos:column="13">(<pos:position pos:line="22" pos:column="14"/></operator><name pos:line="22" pos:column="14">rv<pos:position pos:line="22" pos:column="16"/></name> <operator pos:line="22" pos:column="17">=<pos:position pos:line="22" pos:column="18"/></operator> <call><name pos:line="22" pos:column="19">apr_file_remove<pos:position pos:line="22" pos:column="34"/></name><argument_list pos:line="22" pos:column="34">(<argument><expr><name pos:line="22" pos:column="35">pathname<pos:position pos:line="22" pos:column="43"/></name></expr></argument>, <argument><expr><name pos:line="22" pos:column="45">p<pos:position pos:line="22" pos:column="46"/></name></expr></argument>)<pos:position pos:line="22" pos:column="47"/></argument_list></call><operator pos:line="22" pos:column="47">)<pos:position pos:line="22" pos:column="48"/></operator> <operator pos:line="22" pos:column="49">!=<pos:position pos:line="22" pos:column="51"/></operator> <name pos:line="22" pos:column="52">APR_SUCCESS<pos:position pos:line="22" pos:column="63"/></name></expr>)<pos:position pos:line="22" pos:column="64"/></condition><then pos:line="22" pos:column="64"> <block pos:line="22" pos:column="65">{
            <return pos:line="23" pos:column="13">return <expr><call><name pos:line="23" pos:column="20">dav_new_error<pos:position pos:line="23" pos:column="33"/></name><argument_list pos:line="23" pos:column="33">(<argument><expr><name pos:line="23" pos:column="34">p<pos:position pos:line="23" pos:column="35"/></name></expr></argument>, <argument><expr><name pos:line="23" pos:column="37">HTTP_INTERNAL_SERVER_ERROR<pos:position pos:line="23" pos:column="63"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="23" pos:column="65">0<pos:position pos:line="23" pos:column="66"/></literal></expr></argument>, <argument><expr><name pos:line="23" pos:column="68">rv<pos:position pos:line="23" pos:column="70"/></name></expr></argument>,
                                 <argument><expr><call><name pos:line="24" pos:column="34">apr_psprintf<pos:position pos:line="24" pos:column="46"/></name><argument_list pos:line="24" pos:column="46">(<argument><expr><name pos:line="24" pos:column="47">p<pos:position pos:line="24" pos:column="48"/></name></expr></argument>,
                                             <argument><expr><literal type="string" pos:line="25" pos:column="46">"Error removing %s"<pos:position pos:line="25" pos:column="65"/></literal></expr></argument>, <argument><expr><name pos:line="25" pos:column="67">pathname<pos:position pos:line="25" pos:column="75"/></name></expr></argument>)<pos:position pos:line="25" pos:column="76"/></argument_list></call></expr></argument>)<pos:position pos:line="25" pos:column="77"/></argument_list></call></expr>;<pos:position pos:line="25" pos:column="78"/></return>
        }<pos:position pos:line="26" pos:column="10"/></block></then></if>
        <return pos:line="27" pos:column="9">return <expr><name pos:line="27" pos:column="16">NULL<pos:position pos:line="27" pos:column="20"/></name></expr>;<pos:position pos:line="27" pos:column="21"/></return>
    }<pos:position pos:line="28" pos:column="6"/></block></then></if>

    <if pos:line="30" pos:column="5">if <condition pos:line="30" pos:column="8">(<expr><operator pos:line="30" pos:column="9">(<pos:position pos:line="30" pos:column="10"/></operator><name pos:line="30" pos:column="10">rv<pos:position pos:line="30" pos:column="12"/></name> <operator pos:line="30" pos:column="13">=<pos:position pos:line="30" pos:column="14"/></operator> <call><name pos:line="30" pos:column="15">apr_file_open<pos:position pos:line="30" pos:column="28"/></name><argument_list pos:line="30" pos:column="28">(<argument><expr><operator pos:line="30" pos:column="29">&amp;<pos:position pos:line="30" pos:column="34"/></operator><name pos:line="30" pos:column="30">file<pos:position pos:line="30" pos:column="34"/></name></expr></argument>, <argument><expr><name pos:line="30" pos:column="36">pathname<pos:position pos:line="30" pos:column="44"/></name></expr></argument>,
                            <argument><expr><name pos:line="31" pos:column="29">APR_WRITE<pos:position pos:line="31" pos:column="38"/></name> <operator pos:line="31" pos:column="39">|<pos:position pos:line="31" pos:column="40"/></operator> <name pos:line="31" pos:column="41">APR_CREATE<pos:position pos:line="31" pos:column="51"/></name> <operator pos:line="31" pos:column="52">|<pos:position pos:line="31" pos:column="53"/></operator> <name pos:line="31" pos:column="54">APR_TRUNCATE<pos:position pos:line="31" pos:column="66"/></name> <operator pos:line="31" pos:column="67">|<pos:position pos:line="31" pos:column="68"/></operator> <name pos:line="31" pos:column="69">APR_BINARY<pos:position pos:line="31" pos:column="79"/></name></expr></argument>,
                            <argument><expr><name pos:line="32" pos:column="29">APR_OS_DEFAULT<pos:position pos:line="32" pos:column="43"/></name></expr></argument>, <argument><expr><name pos:line="32" pos:column="45">p<pos:position pos:line="32" pos:column="46"/></name></expr></argument>)<pos:position pos:line="32" pos:column="47"/></argument_list></call><operator pos:line="32" pos:column="47">)<pos:position pos:line="32" pos:column="48"/></operator> <operator pos:line="32" pos:column="49">!=<pos:position pos:line="32" pos:column="51"/></operator> <name pos:line="32" pos:column="52">APR_SUCCESS<pos:position pos:line="32" pos:column="63"/></name></expr>)<pos:position pos:line="32" pos:column="64"/></condition><then pos:line="32" pos:column="64"> <block pos:line="32" pos:column="65">{
        <return pos:line="33" pos:column="9">return <expr><call><name pos:line="33" pos:column="16">dav_new_error<pos:position pos:line="33" pos:column="29"/></name><argument_list pos:line="33" pos:column="29">(<argument><expr><name pos:line="33" pos:column="30">p<pos:position pos:line="33" pos:column="31"/></name></expr></argument>, <argument><expr><name pos:line="33" pos:column="33">HTTP_INTERNAL_SERVER_ERROR<pos:position pos:line="33" pos:column="59"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="33" pos:column="61">0<pos:position pos:line="33" pos:column="62"/></literal></expr></argument>, <argument><expr><name pos:line="33" pos:column="64">rv<pos:position pos:line="33" pos:column="66"/></name></expr></argument>,
                             <argument><expr><call><name pos:line="34" pos:column="30">apr_psprintf<pos:position pos:line="34" pos:column="42"/></name><argument_list pos:line="34" pos:column="42">(<argument><expr><name pos:line="34" pos:column="43">p<pos:position pos:line="34" pos:column="44"/></name></expr></argument>,
                                         <argument><expr><literal type="string" pos:line="35" pos:column="42">"Error opening %s for writing"<pos:position pos:line="35" pos:column="72"/></literal></expr></argument>,
                                         <argument><expr><name pos:line="36" pos:column="42">pathname<pos:position pos:line="36" pos:column="50"/></name></expr></argument>)<pos:position pos:line="36" pos:column="51"/></argument_list></call></expr></argument>)<pos:position pos:line="36" pos:column="52"/></argument_list></call></expr>;<pos:position pos:line="36" pos:column="53"/></return>
    }<pos:position pos:line="37" pos:column="6"/></block></then></if>

    <expr_stmt><expr><name pos:line="39" pos:column="5">amt<pos:position pos:line="39" pos:column="8"/></name> <operator pos:line="39" pos:column="9">=<pos:position pos:line="39" pos:column="10"/></operator> <name><name pos:line="39" pos:column="11">pbuf<pos:position pos:line="39" pos:column="15"/></name><operator pos:line="39" pos:column="15">-&gt;<pos:position pos:line="39" pos:column="20"/></operator><name pos:line="39" pos:column="17">cur_len<pos:position pos:line="39" pos:column="24"/></name></name></expr>;<pos:position pos:line="39" pos:column="25"/></expr_stmt>
    <if pos:line="40" pos:column="5">if <condition pos:line="40" pos:column="8">(<expr><operator pos:line="40" pos:column="9">(<pos:position pos:line="40" pos:column="10"/></operator><name pos:line="40" pos:column="10">rv<pos:position pos:line="40" pos:column="12"/></name> <operator pos:line="40" pos:column="13">=<pos:position pos:line="40" pos:column="14"/></operator> <call><name pos:line="40" pos:column="15">apr_file_write<pos:position pos:line="40" pos:column="29"/></name><argument_list pos:line="40" pos:column="29">(<argument><expr><name pos:line="40" pos:column="30">file<pos:position pos:line="40" pos:column="34"/></name></expr></argument>, <argument><expr><name><name pos:line="40" pos:column="36">pbuf<pos:position pos:line="40" pos:column="40"/></name><operator pos:line="40" pos:column="40">-&gt;<pos:position pos:line="40" pos:column="45"/></operator><name pos:line="40" pos:column="42">buf<pos:position pos:line="40" pos:column="45"/></name></name></expr></argument>, <argument><expr><operator pos:line="40" pos:column="47">&amp;<pos:position pos:line="40" pos:column="52"/></operator><name pos:line="40" pos:column="48">amt<pos:position pos:line="40" pos:column="51"/></name></expr></argument>)<pos:position pos:line="40" pos:column="52"/></argument_list></call><operator pos:line="40" pos:column="52">)<pos:position pos:line="40" pos:column="53"/></operator> <operator pos:line="40" pos:column="54">!=<pos:position pos:line="40" pos:column="56"/></operator> <name pos:line="40" pos:column="57">APR_SUCCESS<pos:position pos:line="40" pos:column="68"/></name>
        <operator pos:line="41" pos:column="9">||<pos:position pos:line="41" pos:column="11"/></operator> <name pos:line="41" pos:column="12">amt<pos:position pos:line="41" pos:column="15"/></name> <operator pos:line="41" pos:column="16">!=<pos:position pos:line="41" pos:column="18"/></operator> <name><name pos:line="41" pos:column="19">pbuf<pos:position pos:line="41" pos:column="23"/></name><operator pos:line="41" pos:column="23">-&gt;<pos:position pos:line="41" pos:column="28"/></operator><name pos:line="41" pos:column="25">cur_len<pos:position pos:line="41" pos:column="32"/></name></name></expr>)<pos:position pos:line="41" pos:column="33"/></condition><then pos:line="41" pos:column="33"> <block pos:line="41" pos:column="34">{
        <expr_stmt><expr><name pos:line="42" pos:column="9">err<pos:position pos:line="42" pos:column="12"/></name> <operator pos:line="42" pos:column="13">=<pos:position pos:line="42" pos:column="14"/></operator> <call><name pos:line="42" pos:column="15">dav_new_error<pos:position pos:line="42" pos:column="28"/></name><argument_list pos:line="42" pos:column="28">(<argument><expr><name pos:line="42" pos:column="29">p<pos:position pos:line="42" pos:column="30"/></name></expr></argument>, <argument><expr><name pos:line="42" pos:column="32">HTTP_INTERNAL_SERVER_ERROR<pos:position pos:line="42" pos:column="58"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="42" pos:column="60">0<pos:position pos:line="42" pos:column="61"/></literal></expr></argument>, <argument><expr><name pos:line="42" pos:column="63">rv<pos:position pos:line="42" pos:column="65"/></name></expr></argument>,
                            <argument><expr><call><name pos:line="43" pos:column="29">apr_psprintf<pos:position pos:line="43" pos:column="41"/></name><argument_list pos:line="43" pos:column="41">(<argument><expr><name pos:line="43" pos:column="42">p<pos:position pos:line="43" pos:column="43"/></name></expr></argument>,
                                        <argument><expr><literal type="string" pos:line="44" pos:column="41">"Error writing %"<pos:position pos:line="44" pos:column="58"/></literal> <name pos:line="44" pos:column="59">APR_SIZE_T_FMT<pos:position pos:line="44" pos:column="73"/></name>
                                        <literal type="string" pos:line="45" pos:column="41">" bytes to %s"<pos:position pos:line="45" pos:column="55"/></literal></expr></argument>,
                                        <argument><expr><name><name pos:line="46" pos:column="41">pbuf<pos:position pos:line="46" pos:column="45"/></name><operator pos:line="46" pos:column="45">-&gt;<pos:position pos:line="46" pos:column="50"/></operator><name pos:line="46" pos:column="47">cur_len<pos:position pos:line="46" pos:column="54"/></name></name></expr></argument>, <argument><expr><name pos:line="46" pos:column="56">pathname<pos:position pos:line="46" pos:column="64"/></name></expr></argument>)<pos:position pos:line="46" pos:column="65"/></argument_list></call></expr></argument>)<pos:position pos:line="46" pos:column="66"/></argument_list></call></expr>;<pos:position pos:line="46" pos:column="67"/></expr_stmt>
    }<pos:position pos:line="47" pos:column="6"/></block></then></if>

    <expr_stmt><expr><call><name pos:line="49" pos:column="5">apr_file_close<pos:position pos:line="49" pos:column="19"/></name><argument_list pos:line="49" pos:column="19">(<argument><expr><name pos:line="49" pos:column="20">file<pos:position pos:line="49" pos:column="24"/></name></expr></argument>)<pos:position pos:line="49" pos:column="25"/></argument_list></call></expr>;<pos:position pos:line="49" pos:column="26"/></expr_stmt>
    <return pos:line="50" pos:column="5">return <expr><name pos:line="50" pos:column="12">err<pos:position pos:line="50" pos:column="15"/></name></expr>;<pos:position pos:line="50" pos:column="16"/></return>
}<pos:position pos:line="51" pos:column="2"/></block></function></unit>

<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/httpd/gumtree/httpd_function_6535.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">apr_status_t<pos:position pos:line="1" pos:column="20"/></name></type>
<name pos:line="2" pos:column="1">rate_limit_filter<pos:position pos:line="2" pos:column="18"/></name><parameter_list pos:line="2" pos:column="18">(<parameter><decl><type><name pos:line="2" pos:column="19">ap_filter_t<pos:position pos:line="2" pos:column="30"/></name> <modifier pos:line="2" pos:column="31">*<pos:position pos:line="2" pos:column="32"/></modifier></type><name pos:line="2" pos:column="32">f<pos:position pos:line="2" pos:column="33"/></name></decl></parameter>, <parameter><decl><type><name pos:line="2" pos:column="35">apr_bucket_brigade<pos:position pos:line="2" pos:column="53"/></name> <modifier pos:line="2" pos:column="54">*<pos:position pos:line="2" pos:column="55"/></modifier></type><name pos:line="2" pos:column="55">input_bb<pos:position pos:line="2" pos:column="63"/></name></decl></parameter>)<pos:position pos:line="2" pos:column="64"/></parameter_list>
<block pos:line="3" pos:column="1">{
    <decl_stmt><decl><type><name pos:line="4" pos:column="5">apr_status_t<pos:position pos:line="4" pos:column="17"/></name></type> <name pos:line="4" pos:column="18">rv<pos:position pos:line="4" pos:column="20"/></name> <init pos:line="4" pos:column="21">= <expr><name pos:line="4" pos:column="23">APR_SUCCESS<pos:position pos:line="4" pos:column="34"/></name></expr></init></decl>;<pos:position pos:line="4" pos:column="35"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="5" pos:column="5">rl_ctx_t<pos:position pos:line="5" pos:column="13"/></name> <modifier pos:line="5" pos:column="14">*<pos:position pos:line="5" pos:column="15"/></modifier></type><name pos:line="5" pos:column="15">ctx<pos:position pos:line="5" pos:column="18"/></name> <init pos:line="5" pos:column="19">= <expr><name><name pos:line="5" pos:column="21">f<pos:position pos:line="5" pos:column="22"/></name><operator pos:line="5" pos:column="22">-&gt;<pos:position pos:line="5" pos:column="27"/></operator><name pos:line="5" pos:column="24">ctx<pos:position pos:line="5" pos:column="27"/></name></name></expr></init></decl>;<pos:position pos:line="5" pos:column="28"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="6" pos:column="5">apr_bucket<pos:position pos:line="6" pos:column="15"/></name> <modifier pos:line="6" pos:column="16">*<pos:position pos:line="6" pos:column="17"/></modifier></type><name pos:line="6" pos:column="17">fb<pos:position pos:line="6" pos:column="19"/></name></decl>;<pos:position pos:line="6" pos:column="20"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="7" pos:column="5">int<pos:position pos:line="7" pos:column="8"/></name></type> <name pos:line="7" pos:column="9">do_sleep<pos:position pos:line="7" pos:column="17"/></name> <init pos:line="7" pos:column="18">= <expr><literal type="number" pos:line="7" pos:column="20">0<pos:position pos:line="7" pos:column="21"/></literal></expr></init></decl>;<pos:position pos:line="7" pos:column="22"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="8" pos:column="5">apr_bucket_alloc_t<pos:position pos:line="8" pos:column="23"/></name> <modifier pos:line="8" pos:column="24">*<pos:position pos:line="8" pos:column="25"/></modifier></type><name pos:line="8" pos:column="25">ba<pos:position pos:line="8" pos:column="27"/></name> <init pos:line="8" pos:column="28">= <expr><name><name pos:line="8" pos:column="30">f<pos:position pos:line="8" pos:column="31"/></name><operator pos:line="8" pos:column="31">-&gt;<pos:position pos:line="8" pos:column="36"/></operator><name pos:line="8" pos:column="33">r<pos:position pos:line="8" pos:column="34"/></name><operator pos:line="8" pos:column="34">-&gt;<pos:position pos:line="8" pos:column="39"/></operator><name pos:line="8" pos:column="36">connection<pos:position pos:line="8" pos:column="46"/></name><operator pos:line="8" pos:column="46">-&gt;<pos:position pos:line="8" pos:column="51"/></operator><name pos:line="8" pos:column="48">bucket_alloc<pos:position pos:line="8" pos:column="60"/></name></name></expr></init></decl>;<pos:position pos:line="8" pos:column="61"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="9" pos:column="5">apr_bucket_brigade<pos:position pos:line="9" pos:column="23"/></name> <modifier pos:line="9" pos:column="24">*<pos:position pos:line="9" pos:column="25"/></modifier></type><name pos:line="9" pos:column="25">bb<pos:position pos:line="9" pos:column="27"/></name> <init pos:line="9" pos:column="28">= <expr><name pos:line="9" pos:column="30">input_bb<pos:position pos:line="9" pos:column="38"/></name></expr></init></decl>;<pos:position pos:line="9" pos:column="39"/></decl_stmt>

    <if pos:line="11" pos:column="5">if <condition pos:line="11" pos:column="8">(<expr><name><name pos:line="11" pos:column="9">f<pos:position pos:line="11" pos:column="10"/></name><operator pos:line="11" pos:column="10">-&gt;<pos:position pos:line="11" pos:column="15"/></operator><name pos:line="11" pos:column="12">c<pos:position pos:line="11" pos:column="13"/></name><operator pos:line="11" pos:column="13">-&gt;<pos:position pos:line="11" pos:column="18"/></operator><name pos:line="11" pos:column="15">aborted<pos:position pos:line="11" pos:column="22"/></name></name></expr>)<pos:position pos:line="11" pos:column="23"/></condition><then pos:line="11" pos:column="23"> <block pos:line="11" pos:column="24">{
        <expr_stmt><expr><call><name pos:line="12" pos:column="9">ap_log_rerror<pos:position pos:line="12" pos:column="22"/></name><argument_list pos:line="12" pos:column="22">(<argument><expr><name pos:line="12" pos:column="23">APLOG_MARK<pos:position pos:line="12" pos:column="33"/></name></expr></argument>, <argument><expr><name pos:line="12" pos:column="35">APLOG_ERR<pos:position pos:line="12" pos:column="44"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="12" pos:column="46">0<pos:position pos:line="12" pos:column="47"/></literal></expr></argument>, <argument><expr><name><name pos:line="12" pos:column="49">f<pos:position pos:line="12" pos:column="50"/></name><operator pos:line="12" pos:column="50">-&gt;<pos:position pos:line="12" pos:column="55"/></operator><name pos:line="12" pos:column="52">r<pos:position pos:line="12" pos:column="53"/></name></name></expr></argument>, <argument><expr><call><name pos:line="12" pos:column="55">APLOGNO<pos:position pos:line="12" pos:column="62"/></name><argument_list pos:line="12" pos:column="62">(<argument><expr><literal type="number" pos:line="12" pos:column="63">01454<pos:position pos:line="12" pos:column="68"/></literal></expr></argument>)<pos:position pos:line="12" pos:column="69"/></argument_list></call> <literal type="string" pos:line="12" pos:column="70">"rl: conn aborted"<pos:position pos:line="12" pos:column="88"/></literal></expr></argument>)<pos:position pos:line="12" pos:column="89"/></argument_list></call></expr>;<pos:position pos:line="12" pos:column="90"/></expr_stmt>
        <expr_stmt><expr><call><name pos:line="13" pos:column="9">apr_brigade_cleanup<pos:position pos:line="13" pos:column="28"/></name><argument_list pos:line="13" pos:column="28">(<argument><expr><name pos:line="13" pos:column="29">bb<pos:position pos:line="13" pos:column="31"/></name></expr></argument>)<pos:position pos:line="13" pos:column="32"/></argument_list></call></expr>;<pos:position pos:line="13" pos:column="33"/></expr_stmt>
        <return pos:line="14" pos:column="9">return <expr><name pos:line="14" pos:column="16">APR_ECONNABORTED<pos:position pos:line="14" pos:column="32"/></name></expr>;<pos:position pos:line="14" pos:column="33"/></return>
    }<pos:position pos:line="15" pos:column="6"/></block></then></if>

    <comment type="block" pos:line="17" pos:column="5">/* Set up our rl_ctx_t on first use */</comment>
    <if pos:line="18" pos:column="5">if <condition pos:line="18" pos:column="8">(<expr><name pos:line="18" pos:column="9">ctx<pos:position pos:line="18" pos:column="12"/></name> <operator pos:line="18" pos:column="13">==<pos:position pos:line="18" pos:column="15"/></operator> <name pos:line="18" pos:column="16">NULL<pos:position pos:line="18" pos:column="20"/></name></expr>)<pos:position pos:line="18" pos:column="21"/></condition><then pos:line="18" pos:column="21"> <block pos:line="18" pos:column="22">{

        <decl_stmt><decl><type><specifier pos:line="20" pos:column="9">const<pos:position pos:line="20" pos:column="14"/></specifier> <name pos:line="20" pos:column="15">char<pos:position pos:line="20" pos:column="19"/></name> <modifier pos:line="20" pos:column="20">*<pos:position pos:line="20" pos:column="21"/></modifier></type><name pos:line="20" pos:column="21">rl<pos:position pos:line="20" pos:column="23"/></name> <init pos:line="20" pos:column="24">= <expr><name pos:line="20" pos:column="26">NULL<pos:position pos:line="20" pos:column="30"/></name></expr></init></decl>;<pos:position pos:line="20" pos:column="31"/></decl_stmt>
        <decl_stmt><decl><type><name pos:line="21" pos:column="9">int<pos:position pos:line="21" pos:column="12"/></name></type> <name pos:line="21" pos:column="13">ratelimit<pos:position pos:line="21" pos:column="22"/></name></decl>;<pos:position pos:line="21" pos:column="23"/></decl_stmt>
        <decl_stmt><decl><type><name pos:line="22" pos:column="9">int<pos:position pos:line="22" pos:column="12"/></name></type> <name pos:line="22" pos:column="13">burst<pos:position pos:line="22" pos:column="18"/></name> <init pos:line="22" pos:column="19">= <expr><literal type="number" pos:line="22" pos:column="21">0<pos:position pos:line="22" pos:column="22"/></literal></expr></init></decl>;<pos:position pos:line="22" pos:column="23"/></decl_stmt>

        <comment type="block" pos:line="24" pos:column="9">/* no subrequests. */</comment>
        <if pos:line="25" pos:column="9">if <condition pos:line="25" pos:column="12">(<expr><name><name pos:line="25" pos:column="13">f<pos:position pos:line="25" pos:column="14"/></name><operator pos:line="25" pos:column="14">-&gt;<pos:position pos:line="25" pos:column="19"/></operator><name pos:line="25" pos:column="16">r<pos:position pos:line="25" pos:column="17"/></name><operator pos:line="25" pos:column="17">-&gt;<pos:position pos:line="25" pos:column="22"/></operator><name pos:line="25" pos:column="19">main<pos:position pos:line="25" pos:column="23"/></name></name> <operator pos:line="25" pos:column="24">!=<pos:position pos:line="25" pos:column="26"/></operator> <name pos:line="25" pos:column="27">NULL<pos:position pos:line="25" pos:column="31"/></name></expr>)<pos:position pos:line="25" pos:column="32"/></condition><then pos:line="25" pos:column="32"> <block pos:line="25" pos:column="33">{
            <expr_stmt><expr><call><name pos:line="26" pos:column="13">ap_remove_output_filter<pos:position pos:line="26" pos:column="36"/></name><argument_list pos:line="26" pos:column="36">(<argument><expr><name pos:line="26" pos:column="37">f<pos:position pos:line="26" pos:column="38"/></name></expr></argument>)<pos:position pos:line="26" pos:column="39"/></argument_list></call></expr>;<pos:position pos:line="26" pos:column="40"/></expr_stmt>
            <return pos:line="27" pos:column="13">return <expr><call><name pos:line="27" pos:column="20">ap_pass_brigade<pos:position pos:line="27" pos:column="35"/></name><argument_list pos:line="27" pos:column="35">(<argument><expr><name><name pos:line="27" pos:column="36">f<pos:position pos:line="27" pos:column="37"/></name><operator pos:line="27" pos:column="37">-&gt;<pos:position pos:line="27" pos:column="42"/></operator><name pos:line="27" pos:column="39">next<pos:position pos:line="27" pos:column="43"/></name></name></expr></argument>, <argument><expr><name pos:line="27" pos:column="45">bb<pos:position pos:line="27" pos:column="47"/></name></expr></argument>)<pos:position pos:line="27" pos:column="48"/></argument_list></call></expr>;<pos:position pos:line="27" pos:column="49"/></return>
        }<pos:position pos:line="28" pos:column="10"/></block></then></if>

        <comment type="block" pos:line="30" pos:column="9">/* Configuration: rate limit */</comment>
        <expr_stmt><expr><name pos:line="31" pos:column="9">rl<pos:position pos:line="31" pos:column="11"/></name> <operator pos:line="31" pos:column="12">=<pos:position pos:line="31" pos:column="13"/></operator> <call><name pos:line="31" pos:column="14">apr_table_get<pos:position pos:line="31" pos:column="27"/></name><argument_list pos:line="31" pos:column="27">(<argument><expr><name><name pos:line="31" pos:column="28">f<pos:position pos:line="31" pos:column="29"/></name><operator pos:line="31" pos:column="29">-&gt;<pos:position pos:line="31" pos:column="34"/></operator><name pos:line="31" pos:column="31">r<pos:position pos:line="31" pos:column="32"/></name><operator pos:line="31" pos:column="32">-&gt;<pos:position pos:line="31" pos:column="37"/></operator><name pos:line="31" pos:column="34">subprocess_env<pos:position pos:line="31" pos:column="48"/></name></name></expr></argument>, <argument><expr><literal type="string" pos:line="31" pos:column="50">"rate-limit"<pos:position pos:line="31" pos:column="62"/></literal></expr></argument>)<pos:position pos:line="31" pos:column="63"/></argument_list></call></expr>;<pos:position pos:line="31" pos:column="64"/></expr_stmt>

        <if pos:line="33" pos:column="9">if <condition pos:line="33" pos:column="12">(<expr><name pos:line="33" pos:column="13">rl<pos:position pos:line="33" pos:column="15"/></name> <operator pos:line="33" pos:column="16">==<pos:position pos:line="33" pos:column="18"/></operator> <name pos:line="33" pos:column="19">NULL<pos:position pos:line="33" pos:column="23"/></name></expr>)<pos:position pos:line="33" pos:column="24"/></condition><then pos:line="33" pos:column="24"> <block pos:line="33" pos:column="25">{
            <expr_stmt><expr><call><name pos:line="34" pos:column="13">ap_remove_output_filter<pos:position pos:line="34" pos:column="36"/></name><argument_list pos:line="34" pos:column="36">(<argument><expr><name pos:line="34" pos:column="37">f<pos:position pos:line="34" pos:column="38"/></name></expr></argument>)<pos:position pos:line="34" pos:column="39"/></argument_list></call></expr>;<pos:position pos:line="34" pos:column="40"/></expr_stmt>
            <return pos:line="35" pos:column="13">return <expr><call><name pos:line="35" pos:column="20">ap_pass_brigade<pos:position pos:line="35" pos:column="35"/></name><argument_list pos:line="35" pos:column="35">(<argument><expr><name><name pos:line="35" pos:column="36">f<pos:position pos:line="35" pos:column="37"/></name><operator pos:line="35" pos:column="37">-&gt;<pos:position pos:line="35" pos:column="42"/></operator><name pos:line="35" pos:column="39">next<pos:position pos:line="35" pos:column="43"/></name></name></expr></argument>, <argument><expr><name pos:line="35" pos:column="45">bb<pos:position pos:line="35" pos:column="47"/></name></expr></argument>)<pos:position pos:line="35" pos:column="48"/></argument_list></call></expr>;<pos:position pos:line="35" pos:column="49"/></return>
        }<pos:position pos:line="36" pos:column="10"/></block></then></if>
        
        <comment type="block" pos:line="38" pos:column="9">/* rl is in kilo bytes / second  */</comment>
        <expr_stmt><expr><name pos:line="39" pos:column="9">ratelimit<pos:position pos:line="39" pos:column="18"/></name> <operator pos:line="39" pos:column="19">=<pos:position pos:line="39" pos:column="20"/></operator> <call><name pos:line="39" pos:column="21">atoi<pos:position pos:line="39" pos:column="25"/></name><argument_list pos:line="39" pos:column="25">(<argument><expr><name pos:line="39" pos:column="26">rl<pos:position pos:line="39" pos:column="28"/></name></expr></argument>)<pos:position pos:line="39" pos:column="29"/></argument_list></call> <operator pos:line="39" pos:column="30">*<pos:position pos:line="39" pos:column="31"/></operator> <literal type="number" pos:line="39" pos:column="32">1024<pos:position pos:line="39" pos:column="36"/></literal></expr>;<pos:position pos:line="39" pos:column="37"/></expr_stmt>
        <if pos:line="40" pos:column="9">if <condition pos:line="40" pos:column="12">(<expr><name pos:line="40" pos:column="13">ratelimit<pos:position pos:line="40" pos:column="22"/></name> <operator pos:line="40" pos:column="23">&lt;=<pos:position pos:line="40" pos:column="28"/></operator> <literal type="number" pos:line="40" pos:column="26">0<pos:position pos:line="40" pos:column="27"/></literal></expr>)<pos:position pos:line="40" pos:column="28"/></condition><then pos:line="40" pos:column="28"> <block pos:line="40" pos:column="29">{
            <comment type="block" pos:line="41" pos:column="13">/* remove ourselves */</comment>
            <expr_stmt><expr><call><name pos:line="42" pos:column="13">ap_log_rerror<pos:position pos:line="42" pos:column="26"/></name><argument_list pos:line="42" pos:column="26">(<argument><expr><name pos:line="42" pos:column="27">APLOG_MARK<pos:position pos:line="42" pos:column="37"/></name></expr></argument>, <argument><expr><name pos:line="42" pos:column="39">APLOG_INFO<pos:position pos:line="42" pos:column="49"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="42" pos:column="51">0<pos:position pos:line="42" pos:column="52"/></literal></expr></argument>, <argument><expr><name><name pos:line="42" pos:column="54">f<pos:position pos:line="42" pos:column="55"/></name><operator pos:line="42" pos:column="55">-&gt;<pos:position pos:line="42" pos:column="60"/></operator><name pos:line="42" pos:column="57">r<pos:position pos:line="42" pos:column="58"/></name></name></expr></argument>,
                          <argument><expr><call><name pos:line="43" pos:column="27">APLOGNO<pos:position pos:line="43" pos:column="34"/></name><argument_list pos:line="43" pos:column="34">(<argument><expr><literal type="number" pos:line="43" pos:column="35">03488<pos:position pos:line="43" pos:column="40"/></literal></expr></argument>)<pos:position pos:line="43" pos:column="41"/></argument_list></call> <literal type="string" pos:line="43" pos:column="42">"rl: disabling: rate-limit = %s (too high?)"<pos:position pos:line="43" pos:column="86"/></literal></expr></argument>, <argument><expr><name pos:line="43" pos:column="88">rl<pos:position pos:line="43" pos:column="90"/></name></expr></argument>)<pos:position pos:line="43" pos:column="91"/></argument_list></call></expr>;<pos:position pos:line="43" pos:column="92"/></expr_stmt>
            <expr_stmt><expr><call><name pos:line="44" pos:column="13">ap_remove_output_filter<pos:position pos:line="44" pos:column="36"/></name><argument_list pos:line="44" pos:column="36">(<argument><expr><name pos:line="44" pos:column="37">f<pos:position pos:line="44" pos:column="38"/></name></expr></argument>)<pos:position pos:line="44" pos:column="39"/></argument_list></call></expr>;<pos:position pos:line="44" pos:column="40"/></expr_stmt>
            <return pos:line="45" pos:column="13">return <expr><call><name pos:line="45" pos:column="20">ap_pass_brigade<pos:position pos:line="45" pos:column="35"/></name><argument_list pos:line="45" pos:column="35">(<argument><expr><name><name pos:line="45" pos:column="36">f<pos:position pos:line="45" pos:column="37"/></name><operator pos:line="45" pos:column="37">-&gt;<pos:position pos:line="45" pos:column="42"/></operator><name pos:line="45" pos:column="39">next<pos:position pos:line="45" pos:column="43"/></name></name></expr></argument>, <argument><expr><name pos:line="45" pos:column="45">bb<pos:position pos:line="45" pos:column="47"/></name></expr></argument>)<pos:position pos:line="45" pos:column="48"/></argument_list></call></expr>;<pos:position pos:line="45" pos:column="49"/></return>
        }<pos:position pos:line="46" pos:column="10"/></block></then></if>

        <comment type="block" pos:line="48" pos:column="9">/* Configuration: optional initial burst */</comment>
        <expr_stmt><expr><name pos:line="49" pos:column="9">rl<pos:position pos:line="49" pos:column="11"/></name> <operator pos:line="49" pos:column="12">=<pos:position pos:line="49" pos:column="13"/></operator> <call><name pos:line="49" pos:column="14">apr_table_get<pos:position pos:line="49" pos:column="27"/></name><argument_list pos:line="49" pos:column="27">(<argument><expr><name><name pos:line="49" pos:column="28">f<pos:position pos:line="49" pos:column="29"/></name><operator pos:line="49" pos:column="29">-&gt;<pos:position pos:line="49" pos:column="34"/></operator><name pos:line="49" pos:column="31">r<pos:position pos:line="49" pos:column="32"/></name><operator pos:line="49" pos:column="32">-&gt;<pos:position pos:line="49" pos:column="37"/></operator><name pos:line="49" pos:column="34">subprocess_env<pos:position pos:line="49" pos:column="48"/></name></name></expr></argument>, <argument><expr><literal type="string" pos:line="49" pos:column="50">"rate-initial-burst"<pos:position pos:line="49" pos:column="70"/></literal></expr></argument>)<pos:position pos:line="49" pos:column="71"/></argument_list></call></expr>;<pos:position pos:line="49" pos:column="72"/></expr_stmt>
        <if pos:line="50" pos:column="9">if <condition pos:line="50" pos:column="12">(<expr><name pos:line="50" pos:column="13">rl<pos:position pos:line="50" pos:column="15"/></name> <operator pos:line="50" pos:column="16">!=<pos:position pos:line="50" pos:column="18"/></operator> <name pos:line="50" pos:column="19">NULL<pos:position pos:line="50" pos:column="23"/></name></expr>)<pos:position pos:line="50" pos:column="24"/></condition><then pos:line="50" pos:column="24"> <block pos:line="50" pos:column="25">{
            <expr_stmt><expr><name pos:line="51" pos:column="13">burst<pos:position pos:line="51" pos:column="18"/></name> <operator pos:line="51" pos:column="19">=<pos:position pos:line="51" pos:column="20"/></operator> <call><name pos:line="51" pos:column="21">atoi<pos:position pos:line="51" pos:column="25"/></name><argument_list pos:line="51" pos:column="25">(<argument><expr><name pos:line="51" pos:column="26">rl<pos:position pos:line="51" pos:column="28"/></name></expr></argument>)<pos:position pos:line="51" pos:column="29"/></argument_list></call> <operator pos:line="51" pos:column="30">*<pos:position pos:line="51" pos:column="31"/></operator> <literal type="number" pos:line="51" pos:column="32">1024<pos:position pos:line="51" pos:column="36"/></literal></expr>;<pos:position pos:line="51" pos:column="37"/></expr_stmt>
            <if pos:line="52" pos:column="13">if <condition pos:line="52" pos:column="16">(<expr><name pos:line="52" pos:column="17">burst<pos:position pos:line="52" pos:column="22"/></name> <operator pos:line="52" pos:column="23">&lt;=<pos:position pos:line="52" pos:column="28"/></operator> <literal type="number" pos:line="52" pos:column="26">0<pos:position pos:line="52" pos:column="27"/></literal></expr>)<pos:position pos:line="52" pos:column="28"/></condition><then pos:line="52" pos:column="28"> <block pos:line="52" pos:column="29">{
               <expr_stmt><expr><call><name pos:line="53" pos:column="16">ap_log_rerror<pos:position pos:line="53" pos:column="29"/></name><argument_list pos:line="53" pos:column="29">(<argument><expr><name pos:line="53" pos:column="30">APLOG_MARK<pos:position pos:line="53" pos:column="40"/></name></expr></argument>, <argument><expr><name pos:line="53" pos:column="42">APLOG_INFO<pos:position pos:line="53" pos:column="52"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="53" pos:column="54">0<pos:position pos:line="53" pos:column="55"/></literal></expr></argument>, <argument><expr><name><name pos:line="53" pos:column="57">f<pos:position pos:line="53" pos:column="58"/></name><operator pos:line="53" pos:column="58">-&gt;<pos:position pos:line="53" pos:column="63"/></operator><name pos:line="53" pos:column="60">r<pos:position pos:line="53" pos:column="61"/></name></name></expr></argument>,
                             <argument><expr><call><name pos:line="54" pos:column="30">APLOGNO<pos:position pos:line="54" pos:column="37"/></name><argument_list pos:line="54" pos:column="37">(<argument><expr><literal type="number" pos:line="54" pos:column="38">03489<pos:position pos:line="54" pos:column="43"/></literal></expr></argument>)<pos:position pos:line="54" pos:column="44"/></argument_list></call> <literal type="string" pos:line="54" pos:column="45">"rl: disabling burst: rate-initial-burst = %s (too high?)"<pos:position pos:line="54" pos:column="103"/></literal></expr></argument>, <argument><expr><name pos:line="54" pos:column="105">rl<pos:position pos:line="54" pos:column="107"/></name></expr></argument>)<pos:position pos:line="54" pos:column="108"/></argument_list></call></expr>;<pos:position pos:line="54" pos:column="109"/></expr_stmt>
               <expr_stmt><expr><name pos:line="55" pos:column="16">burst<pos:position pos:line="55" pos:column="21"/></name> <operator pos:line="55" pos:column="22">=<pos:position pos:line="55" pos:column="23"/></operator> <literal type="number" pos:line="55" pos:column="24">0<pos:position pos:line="55" pos:column="25"/></literal></expr>;<pos:position pos:line="55" pos:column="26"/></expr_stmt>
            }<pos:position pos:line="56" pos:column="14"/></block></then></if>
        }<pos:position pos:line="57" pos:column="10"/></block></then></if>

        <comment type="block" pos:line="59" pos:column="9">/* Set up our context */</comment>
        <expr_stmt><expr><name pos:line="60" pos:column="9">ctx<pos:position pos:line="60" pos:column="12"/></name> <operator pos:line="60" pos:column="13">=<pos:position pos:line="60" pos:column="14"/></operator> <call><name pos:line="60" pos:column="15">apr_palloc<pos:position pos:line="60" pos:column="25"/></name><argument_list pos:line="60" pos:column="25">(<argument><expr><name><name pos:line="60" pos:column="26">f<pos:position pos:line="60" pos:column="27"/></name><operator pos:line="60" pos:column="27">-&gt;<pos:position pos:line="60" pos:column="32"/></operator><name pos:line="60" pos:column="29">r<pos:position pos:line="60" pos:column="30"/></name><operator pos:line="60" pos:column="30">-&gt;<pos:position pos:line="60" pos:column="35"/></operator><name pos:line="60" pos:column="32">pool<pos:position pos:line="60" pos:column="36"/></name></name></expr></argument>, <argument><expr><sizeof pos:line="60" pos:column="38">sizeof<argument_list pos:line="60" pos:column="44">(<argument><expr><name pos:line="60" pos:column="45">rl_ctx_t<pos:position pos:line="60" pos:column="53"/></name></expr></argument>)<pos:position pos:line="60" pos:column="54"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="60" pos:column="55"/></argument_list></call></expr>;<pos:position pos:line="60" pos:column="56"/></expr_stmt>
        <expr_stmt><expr><name><name pos:line="61" pos:column="9">f<pos:position pos:line="61" pos:column="10"/></name><operator pos:line="61" pos:column="10">-&gt;<pos:position pos:line="61" pos:column="15"/></operator><name pos:line="61" pos:column="12">ctx<pos:position pos:line="61" pos:column="15"/></name></name> <operator pos:line="61" pos:column="16">=<pos:position pos:line="61" pos:column="17"/></operator> <name pos:line="61" pos:column="18">ctx<pos:position pos:line="61" pos:column="21"/></name></expr>;<pos:position pos:line="61" pos:column="22"/></expr_stmt>
        <expr_stmt><expr><name><name pos:line="62" pos:column="9">ctx<pos:position pos:line="62" pos:column="12"/></name><operator pos:line="62" pos:column="12">-&gt;<pos:position pos:line="62" pos:column="17"/></operator><name pos:line="62" pos:column="14">state<pos:position pos:line="62" pos:column="19"/></name></name> <operator pos:line="62" pos:column="20">=<pos:position pos:line="62" pos:column="21"/></operator> <name pos:line="62" pos:column="22">RATE_LIMIT<pos:position pos:line="62" pos:column="32"/></name></expr>;<pos:position pos:line="62" pos:column="33"/></expr_stmt>
        <expr_stmt><expr><name><name pos:line="63" pos:column="9">ctx<pos:position pos:line="63" pos:column="12"/></name><operator pos:line="63" pos:column="12">-&gt;<pos:position pos:line="63" pos:column="17"/></operator><name pos:line="63" pos:column="14">speed<pos:position pos:line="63" pos:column="19"/></name></name> <operator pos:line="63" pos:column="20">=<pos:position pos:line="63" pos:column="21"/></operator> <name pos:line="63" pos:column="22">ratelimit<pos:position pos:line="63" pos:column="31"/></name></expr>;<pos:position pos:line="63" pos:column="32"/></expr_stmt>
        <expr_stmt><expr><name><name pos:line="64" pos:column="9">ctx<pos:position pos:line="64" pos:column="12"/></name><operator pos:line="64" pos:column="12">-&gt;<pos:position pos:line="64" pos:column="17"/></operator><name pos:line="64" pos:column="14">burst<pos:position pos:line="64" pos:column="19"/></name></name> <operator pos:line="64" pos:column="20">=<pos:position pos:line="64" pos:column="21"/></operator> <name pos:line="64" pos:column="22">burst<pos:position pos:line="64" pos:column="27"/></name></expr>;<pos:position pos:line="64" pos:column="28"/></expr_stmt>

        <comment type="block" pos:line="66" pos:column="9">/* calculate how many bytes / interval we want to send */</comment>
        <comment type="block" pos:line="67" pos:column="9">/* speed is bytes / second, so, how many  (speed / 1000 % interval) */</comment>
        <expr_stmt><expr><name><name pos:line="68" pos:column="9">ctx<pos:position pos:line="68" pos:column="12"/></name><operator pos:line="68" pos:column="12">-&gt;<pos:position pos:line="68" pos:column="17"/></operator><name pos:line="68" pos:column="14">chunk_size<pos:position pos:line="68" pos:column="24"/></name></name> <operator pos:line="68" pos:column="25">=<pos:position pos:line="68" pos:column="26"/></operator> <operator pos:line="68" pos:column="27">(<pos:position pos:line="68" pos:column="28"/></operator><name><name pos:line="68" pos:column="28">ctx<pos:position pos:line="68" pos:column="31"/></name><operator pos:line="68" pos:column="31">-&gt;<pos:position pos:line="68" pos:column="36"/></operator><name pos:line="68" pos:column="33">speed<pos:position pos:line="68" pos:column="38"/></name></name> <operator pos:line="68" pos:column="39">/<pos:position pos:line="68" pos:column="40"/></operator> <operator pos:line="68" pos:column="41">(<pos:position pos:line="68" pos:column="42"/></operator><literal type="number" pos:line="68" pos:column="42">1000<pos:position pos:line="68" pos:column="46"/></literal> <operator pos:line="68" pos:column="47">/<pos:position pos:line="68" pos:column="48"/></operator> <name pos:line="68" pos:column="49">RATE_INTERVAL_MS<pos:position pos:line="68" pos:column="65"/></name><operator pos:line="68" pos:column="65">)<pos:position pos:line="68" pos:column="66"/></operator><operator pos:line="68" pos:column="66">)<pos:position pos:line="68" pos:column="67"/></operator></expr>;<pos:position pos:line="68" pos:column="68"/></expr_stmt>
        <expr_stmt><expr><name><name pos:line="69" pos:column="9">ctx<pos:position pos:line="69" pos:column="12"/></name><operator pos:line="69" pos:column="12">-&gt;<pos:position pos:line="69" pos:column="17"/></operator><name pos:line="69" pos:column="14">tmpbb<pos:position pos:line="69" pos:column="19"/></name></name> <operator pos:line="69" pos:column="20">=<pos:position pos:line="69" pos:column="21"/></operator> <call><name pos:line="69" pos:column="22">apr_brigade_create<pos:position pos:line="69" pos:column="40"/></name><argument_list pos:line="69" pos:column="40">(<argument><expr><name><name pos:line="69" pos:column="41">f<pos:position pos:line="69" pos:column="42"/></name><operator pos:line="69" pos:column="42">-&gt;<pos:position pos:line="69" pos:column="47"/></operator><name pos:line="69" pos:column="44">r<pos:position pos:line="69" pos:column="45"/></name><operator pos:line="69" pos:column="45">-&gt;<pos:position pos:line="69" pos:column="50"/></operator><name pos:line="69" pos:column="47">pool<pos:position pos:line="69" pos:column="51"/></name></name></expr></argument>, <argument><expr><name pos:line="69" pos:column="53">ba<pos:position pos:line="69" pos:column="55"/></name></expr></argument>)<pos:position pos:line="69" pos:column="56"/></argument_list></call></expr>;<pos:position pos:line="69" pos:column="57"/></expr_stmt>
        <expr_stmt><expr><name><name pos:line="70" pos:column="9">ctx<pos:position pos:line="70" pos:column="12"/></name><operator pos:line="70" pos:column="12">-&gt;<pos:position pos:line="70" pos:column="17"/></operator><name pos:line="70" pos:column="14">holdingbb<pos:position pos:line="70" pos:column="23"/></name></name> <operator pos:line="70" pos:column="24">=<pos:position pos:line="70" pos:column="25"/></operator> <call><name pos:line="70" pos:column="26">apr_brigade_create<pos:position pos:line="70" pos:column="44"/></name><argument_list pos:line="70" pos:column="44">(<argument><expr><name><name pos:line="70" pos:column="45">f<pos:position pos:line="70" pos:column="46"/></name><operator pos:line="70" pos:column="46">-&gt;<pos:position pos:line="70" pos:column="51"/></operator><name pos:line="70" pos:column="48">r<pos:position pos:line="70" pos:column="49"/></name><operator pos:line="70" pos:column="49">-&gt;<pos:position pos:line="70" pos:column="54"/></operator><name pos:line="70" pos:column="51">pool<pos:position pos:line="70" pos:column="55"/></name></name></expr></argument>, <argument><expr><name pos:line="70" pos:column="57">ba<pos:position pos:line="70" pos:column="59"/></name></expr></argument>)<pos:position pos:line="70" pos:column="60"/></argument_list></call></expr>;<pos:position pos:line="70" pos:column="61"/></expr_stmt>
    }<pos:position pos:line="71" pos:column="6"/></block></then></if>

    <while pos:line="73" pos:column="5">while <condition pos:line="73" pos:column="11">(<expr><name><name pos:line="73" pos:column="12">ctx<pos:position pos:line="73" pos:column="15"/></name><operator pos:line="73" pos:column="15">-&gt;<pos:position pos:line="73" pos:column="20"/></operator><name pos:line="73" pos:column="17">state<pos:position pos:line="73" pos:column="22"/></name></name> <operator pos:line="73" pos:column="23">!=<pos:position pos:line="73" pos:column="25"/></operator> <name pos:line="73" pos:column="26">RATE_ERROR<pos:position pos:line="73" pos:column="36"/></name> <operator pos:line="73" pos:column="37">&amp;&amp;<pos:position pos:line="73" pos:column="47"/></operator>
           <operator pos:line="74" pos:column="12">(<pos:position pos:line="74" pos:column="13"/></operator><operator pos:line="74" pos:column="13">!<pos:position pos:line="74" pos:column="14"/></operator><call><name pos:line="74" pos:column="14">APR_BRIGADE_EMPTY<pos:position pos:line="74" pos:column="31"/></name><argument_list pos:line="74" pos:column="31">(<argument><expr><name pos:line="74" pos:column="32">bb<pos:position pos:line="74" pos:column="34"/></name></expr></argument>)<pos:position pos:line="74" pos:column="35"/></argument_list></call> <operator pos:line="74" pos:column="36">||<pos:position pos:line="74" pos:column="38"/></operator> <operator pos:line="74" pos:column="39">!<pos:position pos:line="74" pos:column="40"/></operator><call><name pos:line="74" pos:column="40">APR_BRIGADE_EMPTY<pos:position pos:line="74" pos:column="57"/></name><argument_list pos:line="74" pos:column="57">(<argument><expr><name><name pos:line="74" pos:column="58">ctx<pos:position pos:line="74" pos:column="61"/></name><operator pos:line="74" pos:column="61">-&gt;<pos:position pos:line="74" pos:column="66"/></operator><name pos:line="74" pos:column="63">holdingbb<pos:position pos:line="74" pos:column="72"/></name></name></expr></argument>)<pos:position pos:line="74" pos:column="73"/></argument_list></call><operator pos:line="74" pos:column="73">)<pos:position pos:line="74" pos:column="74"/></operator></expr>)<pos:position pos:line="74" pos:column="75"/></condition> <block pos:line="74" pos:column="76">{
        <decl_stmt><decl><type><name pos:line="75" pos:column="9">apr_bucket<pos:position pos:line="75" pos:column="19"/></name> <modifier pos:line="75" pos:column="20">*<pos:position pos:line="75" pos:column="21"/></modifier></type><name pos:line="75" pos:column="21">e<pos:position pos:line="75" pos:column="22"/></name></decl>;<pos:position pos:line="75" pos:column="23"/></decl_stmt>

        <if pos:line="77" pos:column="9">if <condition pos:line="77" pos:column="12">(<expr><operator pos:line="77" pos:column="13">!<pos:position pos:line="77" pos:column="14"/></operator><call><name pos:line="77" pos:column="14">APR_BRIGADE_EMPTY<pos:position pos:line="77" pos:column="31"/></name><argument_list pos:line="77" pos:column="31">(<argument><expr><name><name pos:line="77" pos:column="32">ctx<pos:position pos:line="77" pos:column="35"/></name><operator pos:line="77" pos:column="35">-&gt;<pos:position pos:line="77" pos:column="40"/></operator><name pos:line="77" pos:column="37">holdingbb<pos:position pos:line="77" pos:column="46"/></name></name></expr></argument>)<pos:position pos:line="77" pos:column="47"/></argument_list></call></expr>)<pos:position pos:line="77" pos:column="48"/></condition><then pos:line="77" pos:column="48"> <block pos:line="77" pos:column="49">{
            <expr_stmt><expr><call><name pos:line="78" pos:column="13">APR_BRIGADE_CONCAT<pos:position pos:line="78" pos:column="31"/></name><argument_list pos:line="78" pos:column="31">(<argument><expr><name pos:line="78" pos:column="32">bb<pos:position pos:line="78" pos:column="34"/></name></expr></argument>, <argument><expr><name><name pos:line="78" pos:column="36">ctx<pos:position pos:line="78" pos:column="39"/></name><operator pos:line="78" pos:column="39">-&gt;<pos:position pos:line="78" pos:column="44"/></operator><name pos:line="78" pos:column="41">holdingbb<pos:position pos:line="78" pos:column="50"/></name></name></expr></argument>)<pos:position pos:line="78" pos:column="51"/></argument_list></call></expr>;<pos:position pos:line="78" pos:column="52"/></expr_stmt>
        }<pos:position pos:line="79" pos:column="10"/></block></then></if>

        <while pos:line="81" pos:column="9">while <condition pos:line="81" pos:column="15">(<expr><name><name pos:line="81" pos:column="16">ctx<pos:position pos:line="81" pos:column="19"/></name><operator pos:line="81" pos:column="19">-&gt;<pos:position pos:line="81" pos:column="24"/></operator><name pos:line="81" pos:column="21">state<pos:position pos:line="81" pos:column="26"/></name></name> <operator pos:line="81" pos:column="27">==<pos:position pos:line="81" pos:column="29"/></operator> <name pos:line="81" pos:column="30">RATE_FULLSPEED<pos:position pos:line="81" pos:column="44"/></name> <operator pos:line="81" pos:column="45">&amp;&amp;<pos:position pos:line="81" pos:column="55"/></operator> <operator pos:line="81" pos:column="48">!<pos:position pos:line="81" pos:column="49"/></operator><call><name pos:line="81" pos:column="49">APR_BRIGADE_EMPTY<pos:position pos:line="81" pos:column="66"/></name><argument_list pos:line="81" pos:column="66">(<argument><expr><name pos:line="81" pos:column="67">bb<pos:position pos:line="81" pos:column="69"/></name></expr></argument>)<pos:position pos:line="81" pos:column="70"/></argument_list></call></expr>)<pos:position pos:line="81" pos:column="71"/></condition> <block pos:line="81" pos:column="72">{
            <comment type="block" pos:line="82" pos:column="13">/* Find where we 'stop' going full speed. */</comment>
            <for pos:line="83" pos:column="13">for <control pos:line="83" pos:column="17">(<init><expr><name pos:line="83" pos:column="18">e<pos:position pos:line="83" pos:column="19"/></name> <operator pos:line="83" pos:column="20">=<pos:position pos:line="83" pos:column="21"/></operator> <call><name pos:line="83" pos:column="22">APR_BRIGADE_FIRST<pos:position pos:line="83" pos:column="39"/></name><argument_list pos:line="83" pos:column="39">(<argument><expr><name pos:line="83" pos:column="40">bb<pos:position pos:line="83" pos:column="42"/></name></expr></argument>)<pos:position pos:line="83" pos:column="43"/></argument_list></call></expr>;<pos:position pos:line="83" pos:column="44"/></init>
                 <condition><expr><name pos:line="84" pos:column="18">e<pos:position pos:line="84" pos:column="19"/></name> <operator pos:line="84" pos:column="20">!=<pos:position pos:line="84" pos:column="22"/></operator> <call><name pos:line="84" pos:column="23">APR_BRIGADE_SENTINEL<pos:position pos:line="84" pos:column="43"/></name><argument_list pos:line="84" pos:column="43">(<argument><expr><name pos:line="84" pos:column="44">bb<pos:position pos:line="84" pos:column="46"/></name></expr></argument>)<pos:position pos:line="84" pos:column="47"/></argument_list></call></expr>;<pos:position pos:line="84" pos:column="48"/></condition> <incr><expr><name pos:line="84" pos:column="49">e<pos:position pos:line="84" pos:column="50"/></name> <operator pos:line="84" pos:column="51">=<pos:position pos:line="84" pos:column="52"/></operator> <call><name pos:line="84" pos:column="53">APR_BUCKET_NEXT<pos:position pos:line="84" pos:column="68"/></name><argument_list pos:line="84" pos:column="68">(<argument><expr><name pos:line="84" pos:column="69">e<pos:position pos:line="84" pos:column="70"/></name></expr></argument>)<pos:position pos:line="84" pos:column="71"/></argument_list></call></expr></incr>)<pos:position pos:line="84" pos:column="72"/></control> <block pos:line="84" pos:column="73">{
                <if pos:line="85" pos:column="17">if <condition pos:line="85" pos:column="20">(<expr><call><name pos:line="85" pos:column="21">AP_RL_BUCKET_IS_END<pos:position pos:line="85" pos:column="40"/></name><argument_list pos:line="85" pos:column="40">(<argument><expr><name pos:line="85" pos:column="41">e<pos:position pos:line="85" pos:column="42"/></name></expr></argument>)<pos:position pos:line="85" pos:column="43"/></argument_list></call></expr>)<pos:position pos:line="85" pos:column="44"/></condition><then pos:line="85" pos:column="44"> <block pos:line="85" pos:column="45">{
                    <decl_stmt><decl><type><name pos:line="86" pos:column="21">apr_bucket<pos:position pos:line="86" pos:column="31"/></name> <modifier pos:line="86" pos:column="32">*<pos:position pos:line="86" pos:column="33"/></modifier></type><name pos:line="86" pos:column="33">f<pos:position pos:line="86" pos:column="34"/></name></decl>;<pos:position pos:line="86" pos:column="35"/></decl_stmt>
                    <expr_stmt><expr><name pos:line="87" pos:column="21">f<pos:position pos:line="87" pos:column="22"/></name> <operator pos:line="87" pos:column="23">=<pos:position pos:line="87" pos:column="24"/></operator> <call><name pos:line="87" pos:column="25">APR_RING_LAST<pos:position pos:line="87" pos:column="38"/></name><argument_list pos:line="87" pos:column="38">(<argument><expr><operator pos:line="87" pos:column="39">&amp;<pos:position pos:line="87" pos:column="44"/></operator><name><name pos:line="87" pos:column="40">bb<pos:position pos:line="87" pos:column="42"/></name><operator pos:line="87" pos:column="42">-&gt;<pos:position pos:line="87" pos:column="47"/></operator><name pos:line="87" pos:column="44">list<pos:position pos:line="87" pos:column="48"/></name></name></expr></argument>)<pos:position pos:line="87" pos:column="49"/></argument_list></call></expr>;<pos:position pos:line="87" pos:column="50"/></expr_stmt>
                    <expr_stmt><expr><call><name pos:line="88" pos:column="21">APR_RING_UNSPLICE<pos:position pos:line="88" pos:column="38"/></name><argument_list pos:line="88" pos:column="38">(<argument><expr><name pos:line="88" pos:column="39">e<pos:position pos:line="88" pos:column="40"/></name></expr></argument>, <argument><expr><name pos:line="88" pos:column="42">f<pos:position pos:line="88" pos:column="43"/></name></expr></argument>, <argument><expr><name pos:line="88" pos:column="45">link<pos:position pos:line="88" pos:column="49"/></name></expr></argument>)<pos:position pos:line="88" pos:column="50"/></argument_list></call></expr>;<pos:position pos:line="88" pos:column="51"/></expr_stmt>
                    <expr_stmt><expr><call><name pos:line="89" pos:column="21">APR_RING_SPLICE_TAIL<pos:position pos:line="89" pos:column="41"/></name><argument_list pos:line="89" pos:column="41">(<argument><expr><operator pos:line="89" pos:column="42">&amp;<pos:position pos:line="89" pos:column="47"/></operator><name><name pos:line="89" pos:column="43">ctx<pos:position pos:line="89" pos:column="46"/></name><operator pos:line="89" pos:column="46">-&gt;<pos:position pos:line="89" pos:column="51"/></operator><name pos:line="89" pos:column="48">holdingbb<pos:position pos:line="89" pos:column="57"/></name><operator pos:line="89" pos:column="57">-&gt;<pos:position pos:line="89" pos:column="62"/></operator><name pos:line="89" pos:column="59">list<pos:position pos:line="89" pos:column="63"/></name></name></expr></argument>, <argument><expr><name pos:line="89" pos:column="65">e<pos:position pos:line="89" pos:column="66"/></name></expr></argument>, <argument><expr><name pos:line="89" pos:column="68">f<pos:position pos:line="89" pos:column="69"/></name></expr></argument>,
                                         <argument><expr><name pos:line="90" pos:column="42">apr_bucket<pos:position pos:line="90" pos:column="52"/></name></expr></argument>, <argument><expr><name pos:line="90" pos:column="54">link<pos:position pos:line="90" pos:column="58"/></name></expr></argument>)<pos:position pos:line="90" pos:column="59"/></argument_list></call></expr>;<pos:position pos:line="90" pos:column="60"/></expr_stmt>
                    <expr_stmt><expr><name><name pos:line="91" pos:column="21">ctx<pos:position pos:line="91" pos:column="24"/></name><operator pos:line="91" pos:column="24">-&gt;<pos:position pos:line="91" pos:column="29"/></operator><name pos:line="91" pos:column="26">state<pos:position pos:line="91" pos:column="31"/></name></name> <operator pos:line="91" pos:column="32">=<pos:position pos:line="91" pos:column="33"/></operator> <name pos:line="91" pos:column="34">RATE_LIMIT<pos:position pos:line="91" pos:column="44"/></name></expr>;<pos:position pos:line="91" pos:column="45"/></expr_stmt>
                    <break pos:line="92" pos:column="21">break;<pos:position pos:line="92" pos:column="27"/></break>
                }<pos:position pos:line="93" pos:column="18"/></block></then></if>
            }<pos:position pos:line="94" pos:column="14"/></block></for>

            <if pos:line="96" pos:column="13">if <condition pos:line="96" pos:column="16">(<expr><name><name pos:line="96" pos:column="17">f<pos:position pos:line="96" pos:column="18"/></name><operator pos:line="96" pos:column="18">-&gt;<pos:position pos:line="96" pos:column="23"/></operator><name pos:line="96" pos:column="20">c<pos:position pos:line="96" pos:column="21"/></name><operator pos:line="96" pos:column="21">-&gt;<pos:position pos:line="96" pos:column="26"/></operator><name pos:line="96" pos:column="23">aborted<pos:position pos:line="96" pos:column="30"/></name></name></expr>)<pos:position pos:line="96" pos:column="31"/></condition><then pos:line="96" pos:column="31"> <block pos:line="96" pos:column="32">{
                <expr_stmt><expr><call><name pos:line="97" pos:column="17">apr_brigade_cleanup<pos:position pos:line="97" pos:column="36"/></name><argument_list pos:line="97" pos:column="36">(<argument><expr><name pos:line="97" pos:column="37">bb<pos:position pos:line="97" pos:column="39"/></name></expr></argument>)<pos:position pos:line="97" pos:column="40"/></argument_list></call></expr>;<pos:position pos:line="97" pos:column="41"/></expr_stmt>
                <expr_stmt><expr><name><name pos:line="98" pos:column="17">ctx<pos:position pos:line="98" pos:column="20"/></name><operator pos:line="98" pos:column="20">-&gt;<pos:position pos:line="98" pos:column="25"/></operator><name pos:line="98" pos:column="22">state<pos:position pos:line="98" pos:column="27"/></name></name> <operator pos:line="98" pos:column="28">=<pos:position pos:line="98" pos:column="29"/></operator> <name pos:line="98" pos:column="30">RATE_ERROR<pos:position pos:line="98" pos:column="40"/></name></expr>;<pos:position pos:line="98" pos:column="41"/></expr_stmt>
                <break pos:line="99" pos:column="17">break;<pos:position pos:line="99" pos:column="23"/></break>
            }<pos:position pos:line="100" pos:column="14"/></block></then></if>

            <expr_stmt><expr><name pos:line="102" pos:column="13">fb<pos:position pos:line="102" pos:column="15"/></name> <operator pos:line="102" pos:column="16">=<pos:position pos:line="102" pos:column="17"/></operator> <call><name pos:line="102" pos:column="18">apr_bucket_flush_create<pos:position pos:line="102" pos:column="41"/></name><argument_list pos:line="102" pos:column="41">(<argument><expr><name pos:line="102" pos:column="42">ba<pos:position pos:line="102" pos:column="44"/></name></expr></argument>)<pos:position pos:line="102" pos:column="45"/></argument_list></call></expr>;<pos:position pos:line="102" pos:column="46"/></expr_stmt>
            <expr_stmt><expr><call><name pos:line="103" pos:column="13">APR_BRIGADE_INSERT_TAIL<pos:position pos:line="103" pos:column="36"/></name><argument_list pos:line="103" pos:column="36">(<argument><expr><name pos:line="103" pos:column="37">bb<pos:position pos:line="103" pos:column="39"/></name></expr></argument>, <argument><expr><name pos:line="103" pos:column="41">fb<pos:position pos:line="103" pos:column="43"/></name></expr></argument>)<pos:position pos:line="103" pos:column="44"/></argument_list></call></expr>;<pos:position pos:line="103" pos:column="45"/></expr_stmt>
            <expr_stmt><expr><name pos:line="104" pos:column="13">rv<pos:position pos:line="104" pos:column="15"/></name> <operator pos:line="104" pos:column="16">=<pos:position pos:line="104" pos:column="17"/></operator> <call><name pos:line="104" pos:column="18">ap_pass_brigade<pos:position pos:line="104" pos:column="33"/></name><argument_list pos:line="104" pos:column="33">(<argument><expr><name><name pos:line="104" pos:column="34">f<pos:position pos:line="104" pos:column="35"/></name><operator pos:line="104" pos:column="35">-&gt;<pos:position pos:line="104" pos:column="40"/></operator><name pos:line="104" pos:column="37">next<pos:position pos:line="104" pos:column="41"/></name></name></expr></argument>, <argument><expr><name pos:line="104" pos:column="43">bb<pos:position pos:line="104" pos:column="45"/></name></expr></argument>)<pos:position pos:line="104" pos:column="46"/></argument_list></call></expr>;<pos:position pos:line="104" pos:column="47"/></expr_stmt>

            <if pos:line="106" pos:column="13">if <condition pos:line="106" pos:column="16">(<expr><name pos:line="106" pos:column="17">rv<pos:position pos:line="106" pos:column="19"/></name> <operator pos:line="106" pos:column="20">!=<pos:position pos:line="106" pos:column="22"/></operator> <name pos:line="106" pos:column="23">APR_SUCCESS<pos:position pos:line="106" pos:column="34"/></name></expr>)<pos:position pos:line="106" pos:column="35"/></condition><then pos:line="106" pos:column="35"> <block pos:line="106" pos:column="36">{
                <expr_stmt><expr><name><name pos:line="107" pos:column="17">ctx<pos:position pos:line="107" pos:column="20"/></name><operator pos:line="107" pos:column="20">-&gt;<pos:position pos:line="107" pos:column="25"/></operator><name pos:line="107" pos:column="22">state<pos:position pos:line="107" pos:column="27"/></name></name> <operator pos:line="107" pos:column="28">=<pos:position pos:line="107" pos:column="29"/></operator> <name pos:line="107" pos:column="30">RATE_ERROR<pos:position pos:line="107" pos:column="40"/></name></expr>;<pos:position pos:line="107" pos:column="41"/></expr_stmt>
                <expr_stmt><expr><call><name pos:line="108" pos:column="17">ap_log_rerror<pos:position pos:line="108" pos:column="30"/></name><argument_list pos:line="108" pos:column="30">(<argument><expr><name pos:line="108" pos:column="31">APLOG_MARK<pos:position pos:line="108" pos:column="41"/></name></expr></argument>, <argument><expr><name pos:line="108" pos:column="43">APLOG_TRACE1<pos:position pos:line="108" pos:column="55"/></name></expr></argument>, <argument><expr><name pos:line="108" pos:column="57">rv<pos:position pos:line="108" pos:column="59"/></name></expr></argument>, <argument><expr><name><name pos:line="108" pos:column="61">f<pos:position pos:line="108" pos:column="62"/></name><operator pos:line="108" pos:column="62">-&gt;<pos:position pos:line="108" pos:column="67"/></operator><name pos:line="108" pos:column="64">r<pos:position pos:line="108" pos:column="65"/></name></name></expr></argument>, <argument><expr><call><name pos:line="108" pos:column="67">APLOGNO<pos:position pos:line="108" pos:column="74"/></name><argument_list pos:line="108" pos:column="74">(<argument><expr><literal type="number" pos:line="108" pos:column="75">01455<pos:position pos:line="108" pos:column="80"/></literal></expr></argument>)<pos:position pos:line="108" pos:column="81"/></argument_list></call>
                              <literal type="string" pos:line="109" pos:column="31">"rl: full speed brigade pass failed."<pos:position pos:line="109" pos:column="68"/></literal></expr></argument>)<pos:position pos:line="109" pos:column="69"/></argument_list></call></expr>;<pos:position pos:line="109" pos:column="70"/></expr_stmt>
            }<pos:position pos:line="110" pos:column="14"/></block></then></if>
        }<pos:position pos:line="111" pos:column="10"/></block></while>

        <while pos:line="113" pos:column="9">while <condition pos:line="113" pos:column="15">(<expr><name><name pos:line="113" pos:column="16">ctx<pos:position pos:line="113" pos:column="19"/></name><operator pos:line="113" pos:column="19">-&gt;<pos:position pos:line="113" pos:column="24"/></operator><name pos:line="113" pos:column="21">state<pos:position pos:line="113" pos:column="26"/></name></name> <operator pos:line="113" pos:column="27">==<pos:position pos:line="113" pos:column="29"/></operator> <name pos:line="113" pos:column="30">RATE_LIMIT<pos:position pos:line="113" pos:column="40"/></name> <operator pos:line="113" pos:column="41">&amp;&amp;<pos:position pos:line="113" pos:column="51"/></operator> <operator pos:line="113" pos:column="44">!<pos:position pos:line="113" pos:column="45"/></operator><call><name pos:line="113" pos:column="45">APR_BRIGADE_EMPTY<pos:position pos:line="113" pos:column="62"/></name><argument_list pos:line="113" pos:column="62">(<argument><expr><name pos:line="113" pos:column="63">bb<pos:position pos:line="113" pos:column="65"/></name></expr></argument>)<pos:position pos:line="113" pos:column="66"/></argument_list></call></expr>)<pos:position pos:line="113" pos:column="67"/></condition> <block pos:line="113" pos:column="68">{
            <for pos:line="114" pos:column="13">for <control pos:line="114" pos:column="17">(<init><expr><name pos:line="114" pos:column="18">e<pos:position pos:line="114" pos:column="19"/></name> <operator pos:line="114" pos:column="20">=<pos:position pos:line="114" pos:column="21"/></operator> <call><name pos:line="114" pos:column="22">APR_BRIGADE_FIRST<pos:position pos:line="114" pos:column="39"/></name><argument_list pos:line="114" pos:column="39">(<argument><expr><name pos:line="114" pos:column="40">bb<pos:position pos:line="114" pos:column="42"/></name></expr></argument>)<pos:position pos:line="114" pos:column="43"/></argument_list></call></expr>;<pos:position pos:line="114" pos:column="44"/></init>
                 <condition><expr><name pos:line="115" pos:column="18">e<pos:position pos:line="115" pos:column="19"/></name> <operator pos:line="115" pos:column="20">!=<pos:position pos:line="115" pos:column="22"/></operator> <call><name pos:line="115" pos:column="23">APR_BRIGADE_SENTINEL<pos:position pos:line="115" pos:column="43"/></name><argument_list pos:line="115" pos:column="43">(<argument><expr><name pos:line="115" pos:column="44">bb<pos:position pos:line="115" pos:column="46"/></name></expr></argument>)<pos:position pos:line="115" pos:column="47"/></argument_list></call></expr>;<pos:position pos:line="115" pos:column="48"/></condition> <incr><expr><name pos:line="115" pos:column="49">e<pos:position pos:line="115" pos:column="50"/></name> <operator pos:line="115" pos:column="51">=<pos:position pos:line="115" pos:column="52"/></operator> <call><name pos:line="115" pos:column="53">APR_BUCKET_NEXT<pos:position pos:line="115" pos:column="68"/></name><argument_list pos:line="115" pos:column="68">(<argument><expr><name pos:line="115" pos:column="69">e<pos:position pos:line="115" pos:column="70"/></name></expr></argument>)<pos:position pos:line="115" pos:column="71"/></argument_list></call></expr></incr>)<pos:position pos:line="115" pos:column="72"/></control> <block pos:line="115" pos:column="73">{
                <if pos:line="116" pos:column="17">if <condition pos:line="116" pos:column="20">(<expr><call><name pos:line="116" pos:column="21">AP_RL_BUCKET_IS_START<pos:position pos:line="116" pos:column="42"/></name><argument_list pos:line="116" pos:column="42">(<argument><expr><name pos:line="116" pos:column="43">e<pos:position pos:line="116" pos:column="44"/></name></expr></argument>)<pos:position pos:line="116" pos:column="45"/></argument_list></call></expr>)<pos:position pos:line="116" pos:column="46"/></condition><then pos:line="116" pos:column="46"> <block pos:line="116" pos:column="47">{
                    <decl_stmt><decl><type><name pos:line="117" pos:column="21">apr_bucket<pos:position pos:line="117" pos:column="31"/></name> <modifier pos:line="117" pos:column="32">*<pos:position pos:line="117" pos:column="33"/></modifier></type><name pos:line="117" pos:column="33">f<pos:position pos:line="117" pos:column="34"/></name></decl>;<pos:position pos:line="117" pos:column="35"/></decl_stmt>
                    <expr_stmt><expr><name pos:line="118" pos:column="21">f<pos:position pos:line="118" pos:column="22"/></name> <operator pos:line="118" pos:column="23">=<pos:position pos:line="118" pos:column="24"/></operator> <call><name pos:line="118" pos:column="25">APR_RING_LAST<pos:position pos:line="118" pos:column="38"/></name><argument_list pos:line="118" pos:column="38">(<argument><expr><operator pos:line="118" pos:column="39">&amp;<pos:position pos:line="118" pos:column="44"/></operator><name><name pos:line="118" pos:column="40">bb<pos:position pos:line="118" pos:column="42"/></name><operator pos:line="118" pos:column="42">-&gt;<pos:position pos:line="118" pos:column="47"/></operator><name pos:line="118" pos:column="44">list<pos:position pos:line="118" pos:column="48"/></name></name></expr></argument>)<pos:position pos:line="118" pos:column="49"/></argument_list></call></expr>;<pos:position pos:line="118" pos:column="50"/></expr_stmt>
                    <expr_stmt><expr><call><name pos:line="119" pos:column="21">APR_RING_UNSPLICE<pos:position pos:line="119" pos:column="38"/></name><argument_list pos:line="119" pos:column="38">(<argument><expr><name pos:line="119" pos:column="39">e<pos:position pos:line="119" pos:column="40"/></name></expr></argument>, <argument><expr><name pos:line="119" pos:column="42">f<pos:position pos:line="119" pos:column="43"/></name></expr></argument>, <argument><expr><name pos:line="119" pos:column="45">link<pos:position pos:line="119" pos:column="49"/></name></expr></argument>)<pos:position pos:line="119" pos:column="50"/></argument_list></call></expr>;<pos:position pos:line="119" pos:column="51"/></expr_stmt>
                    <expr_stmt><expr><call><name pos:line="120" pos:column="21">APR_RING_SPLICE_TAIL<pos:position pos:line="120" pos:column="41"/></name><argument_list pos:line="120" pos:column="41">(<argument><expr><operator pos:line="120" pos:column="42">&amp;<pos:position pos:line="120" pos:column="47"/></operator><name><name pos:line="120" pos:column="43">ctx<pos:position pos:line="120" pos:column="46"/></name><operator pos:line="120" pos:column="46">-&gt;<pos:position pos:line="120" pos:column="51"/></operator><name pos:line="120" pos:column="48">holdingbb<pos:position pos:line="120" pos:column="57"/></name><operator pos:line="120" pos:column="57">-&gt;<pos:position pos:line="120" pos:column="62"/></operator><name pos:line="120" pos:column="59">list<pos:position pos:line="120" pos:column="63"/></name></name></expr></argument>, <argument><expr><name pos:line="120" pos:column="65">e<pos:position pos:line="120" pos:column="66"/></name></expr></argument>, <argument><expr><name pos:line="120" pos:column="68">f<pos:position pos:line="120" pos:column="69"/></name></expr></argument>,
                                         <argument><expr><name pos:line="121" pos:column="42">apr_bucket<pos:position pos:line="121" pos:column="52"/></name></expr></argument>, <argument><expr><name pos:line="121" pos:column="54">link<pos:position pos:line="121" pos:column="58"/></name></expr></argument>)<pos:position pos:line="121" pos:column="59"/></argument_list></call></expr>;<pos:position pos:line="121" pos:column="60"/></expr_stmt>
                    <expr_stmt><expr><name><name pos:line="122" pos:column="21">ctx<pos:position pos:line="122" pos:column="24"/></name><operator pos:line="122" pos:column="24">-&gt;<pos:position pos:line="122" pos:column="29"/></operator><name pos:line="122" pos:column="26">state<pos:position pos:line="122" pos:column="31"/></name></name> <operator pos:line="122" pos:column="32">=<pos:position pos:line="122" pos:column="33"/></operator> <name pos:line="122" pos:column="34">RATE_FULLSPEED<pos:position pos:line="122" pos:column="48"/></name></expr>;<pos:position pos:line="122" pos:column="49"/></expr_stmt>
                    <break pos:line="123" pos:column="21">break;<pos:position pos:line="123" pos:column="27"/></break>
                }<pos:position pos:line="124" pos:column="18"/></block></then></if>
            }<pos:position pos:line="125" pos:column="14"/></block></for>

            <while pos:line="127" pos:column="13">while <condition pos:line="127" pos:column="19">(<expr><operator pos:line="127" pos:column="20">!<pos:position pos:line="127" pos:column="21"/></operator><call><name pos:line="127" pos:column="21">APR_BRIGADE_EMPTY<pos:position pos:line="127" pos:column="38"/></name><argument_list pos:line="127" pos:column="38">(<argument><expr><name pos:line="127" pos:column="39">bb<pos:position pos:line="127" pos:column="41"/></name></expr></argument>)<pos:position pos:line="127" pos:column="42"/></argument_list></call></expr>)<pos:position pos:line="127" pos:column="43"/></condition> <block pos:line="127" pos:column="44">{
                <decl_stmt><decl><type><name pos:line="128" pos:column="17">apr_bucket<pos:position pos:line="128" pos:column="27"/></name> <modifier pos:line="128" pos:column="28">*<pos:position pos:line="128" pos:column="29"/></modifier></type><name pos:line="128" pos:column="29">stop_point<pos:position pos:line="128" pos:column="39"/></name></decl>;<pos:position pos:line="128" pos:column="40"/></decl_stmt>
                <decl_stmt><decl><type><name pos:line="129" pos:column="17">apr_off_t<pos:position pos:line="129" pos:column="26"/></name></type> <name pos:line="129" pos:column="27">len<pos:position pos:line="129" pos:column="30"/></name> <init pos:line="129" pos:column="31">= <expr><literal type="number" pos:line="129" pos:column="33">0<pos:position pos:line="129" pos:column="34"/></literal></expr></init></decl>;<pos:position pos:line="129" pos:column="35"/></decl_stmt>

                <if pos:line="131" pos:column="17">if <condition pos:line="131" pos:column="20">(<expr><name><name pos:line="131" pos:column="21">f<pos:position pos:line="131" pos:column="22"/></name><operator pos:line="131" pos:column="22">-&gt;<pos:position pos:line="131" pos:column="27"/></operator><name pos:line="131" pos:column="24">c<pos:position pos:line="131" pos:column="25"/></name><operator pos:line="131" pos:column="25">-&gt;<pos:position pos:line="131" pos:column="30"/></operator><name pos:line="131" pos:column="27">aborted<pos:position pos:line="131" pos:column="34"/></name></name></expr>)<pos:position pos:line="131" pos:column="35"/></condition><then pos:line="131" pos:column="35"> <block pos:line="131" pos:column="36">{
                    <expr_stmt><expr><call><name pos:line="132" pos:column="21">apr_brigade_cleanup<pos:position pos:line="132" pos:column="40"/></name><argument_list pos:line="132" pos:column="40">(<argument><expr><name pos:line="132" pos:column="41">bb<pos:position pos:line="132" pos:column="43"/></name></expr></argument>)<pos:position pos:line="132" pos:column="44"/></argument_list></call></expr>;<pos:position pos:line="132" pos:column="45"/></expr_stmt>
                    <expr_stmt><expr><name><name pos:line="133" pos:column="21">ctx<pos:position pos:line="133" pos:column="24"/></name><operator pos:line="133" pos:column="24">-&gt;<pos:position pos:line="133" pos:column="29"/></operator><name pos:line="133" pos:column="26">state<pos:position pos:line="133" pos:column="31"/></name></name> <operator pos:line="133" pos:column="32">=<pos:position pos:line="133" pos:column="33"/></operator> <name pos:line="133" pos:column="34">RATE_ERROR<pos:position pos:line="133" pos:column="44"/></name></expr>;<pos:position pos:line="133" pos:column="45"/></expr_stmt>
                    <break pos:line="134" pos:column="21">break;<pos:position pos:line="134" pos:column="27"/></break>
                }<pos:position pos:line="135" pos:column="18"/></block></then></if>

                <if pos:line="137" pos:column="17">if <condition pos:line="137" pos:column="20">(<expr><name pos:line="137" pos:column="21">do_sleep<pos:position pos:line="137" pos:column="29"/></name></expr>)<pos:position pos:line="137" pos:column="30"/></condition><then pos:line="137" pos:column="30"> <block pos:line="137" pos:column="31">{
                    <expr_stmt><expr><call><name pos:line="138" pos:column="21">apr_sleep<pos:position pos:line="138" pos:column="30"/></name><argument_list pos:line="138" pos:column="30">(<argument><expr><name pos:line="138" pos:column="31">RATE_INTERVAL_MS<pos:position pos:line="138" pos:column="47"/></name> <operator pos:line="138" pos:column="48">*<pos:position pos:line="138" pos:column="49"/></operator> <literal type="number" pos:line="138" pos:column="50">1000<pos:position pos:line="138" pos:column="54"/></literal></expr></argument>)<pos:position pos:line="138" pos:column="55"/></argument_list></call></expr>;<pos:position pos:line="138" pos:column="56"/></expr_stmt>
                }<pos:position pos:line="139" pos:column="18"/></block></then>
                <else pos:line="140" pos:column="17">else <block pos:line="140" pos:column="22">{
                    <expr_stmt><expr><name pos:line="141" pos:column="21">do_sleep<pos:position pos:line="141" pos:column="29"/></name> <operator pos:line="141" pos:column="30">=<pos:position pos:line="141" pos:column="31"/></operator> <literal type="number" pos:line="141" pos:column="32">1<pos:position pos:line="141" pos:column="33"/></literal></expr>;<pos:position pos:line="141" pos:column="34"/></expr_stmt>
                }<pos:position pos:line="142" pos:column="18"/></block></else></if>

                <expr_stmt><expr><call><name pos:line="144" pos:column="17">apr_brigade_length<pos:position pos:line="144" pos:column="35"/></name><argument_list pos:line="144" pos:column="35">(<argument><expr><name pos:line="144" pos:column="36">bb<pos:position pos:line="144" pos:column="38"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="144" pos:column="40">1<pos:position pos:line="144" pos:column="41"/></literal></expr></argument>, <argument><expr><operator pos:line="144" pos:column="43">&amp;<pos:position pos:line="144" pos:column="48"/></operator><name pos:line="144" pos:column="44">len<pos:position pos:line="144" pos:column="47"/></name></expr></argument>)<pos:position pos:line="144" pos:column="48"/></argument_list></call></expr>;<pos:position pos:line="144" pos:column="49"/></expr_stmt>

                <comment type="block" pos:line="146" pos:column="17">/*
                 * Pull next chunk of data; the initial amount is our
                 * burst allotment (if any) plus a chunk.  All subsequent
                 * iterations are just chunks with whatever remaining
                 * burst amounts we have left (in case not done in the
                 * first bucket).
                 */</comment>
                <expr_stmt><expr><name pos:line="153" pos:column="17">rv<pos:position pos:line="153" pos:column="19"/></name> <operator pos:line="153" pos:column="20">=<pos:position pos:line="153" pos:column="21"/></operator> <call><name pos:line="153" pos:column="22">apr_brigade_partition<pos:position pos:line="153" pos:column="43"/></name><argument_list pos:line="153" pos:column="43">(<argument><expr><name pos:line="153" pos:column="44">bb<pos:position pos:line="153" pos:column="46"/></name></expr></argument>,
                    <argument><expr><name><name pos:line="154" pos:column="21">ctx<pos:position pos:line="154" pos:column="24"/></name><operator pos:line="154" pos:column="24">-&gt;<pos:position pos:line="154" pos:column="29"/></operator><name pos:line="154" pos:column="26">chunk_size<pos:position pos:line="154" pos:column="36"/></name></name> <operator pos:line="154" pos:column="37">+<pos:position pos:line="154" pos:column="38"/></operator> <name><name pos:line="154" pos:column="39">ctx<pos:position pos:line="154" pos:column="42"/></name><operator pos:line="154" pos:column="42">-&gt;<pos:position pos:line="154" pos:column="47"/></operator><name pos:line="154" pos:column="44">burst<pos:position pos:line="154" pos:column="49"/></name></name></expr></argument>, <argument><expr><operator pos:line="154" pos:column="51">&amp;<pos:position pos:line="154" pos:column="56"/></operator><name pos:line="154" pos:column="52">stop_point<pos:position pos:line="154" pos:column="62"/></name></expr></argument>)<pos:position pos:line="154" pos:column="63"/></argument_list></call></expr>;<pos:position pos:line="154" pos:column="64"/></expr_stmt>
                <if pos:line="155" pos:column="17">if <condition pos:line="155" pos:column="20">(<expr><name pos:line="155" pos:column="21">rv<pos:position pos:line="155" pos:column="23"/></name> <operator pos:line="155" pos:column="24">!=<pos:position pos:line="155" pos:column="26"/></operator> <name pos:line="155" pos:column="27">APR_SUCCESS<pos:position pos:line="155" pos:column="38"/></name> <operator pos:line="155" pos:column="39">&amp;&amp;<pos:position pos:line="155" pos:column="49"/></operator> <name pos:line="155" pos:column="42">rv<pos:position pos:line="155" pos:column="44"/></name> <operator pos:line="155" pos:column="45">!=<pos:position pos:line="155" pos:column="47"/></operator> <name pos:line="155" pos:column="48">APR_INCOMPLETE<pos:position pos:line="155" pos:column="62"/></name></expr>)<pos:position pos:line="155" pos:column="63"/></condition><then pos:line="155" pos:column="63"> <block pos:line="155" pos:column="64">{
                    <expr_stmt><expr><name><name pos:line="156" pos:column="21">ctx<pos:position pos:line="156" pos:column="24"/></name><operator pos:line="156" pos:column="24">-&gt;<pos:position pos:line="156" pos:column="29"/></operator><name pos:line="156" pos:column="26">state<pos:position pos:line="156" pos:column="31"/></name></name> <operator pos:line="156" pos:column="32">=<pos:position pos:line="156" pos:column="33"/></operator> <name pos:line="156" pos:column="34">RATE_ERROR<pos:position pos:line="156" pos:column="44"/></name></expr>;<pos:position pos:line="156" pos:column="45"/></expr_stmt>
                    <expr_stmt><expr><call><name pos:line="157" pos:column="21">ap_log_rerror<pos:position pos:line="157" pos:column="34"/></name><argument_list pos:line="157" pos:column="34">(<argument><expr><name pos:line="157" pos:column="35">APLOG_MARK<pos:position pos:line="157" pos:column="45"/></name></expr></argument>, <argument><expr><name pos:line="157" pos:column="47">APLOG_ERR<pos:position pos:line="157" pos:column="56"/></name></expr></argument>, <argument><expr><name pos:line="157" pos:column="58">rv<pos:position pos:line="157" pos:column="60"/></name></expr></argument>, <argument><expr><name><name pos:line="157" pos:column="62">f<pos:position pos:line="157" pos:column="63"/></name><operator pos:line="157" pos:column="63">-&gt;<pos:position pos:line="157" pos:column="68"/></operator><name pos:line="157" pos:column="65">r<pos:position pos:line="157" pos:column="66"/></name></name></expr></argument>, <argument><expr><call><name pos:line="157" pos:column="68">APLOGNO<pos:position pos:line="157" pos:column="75"/></name><argument_list pos:line="157" pos:column="75">(<argument><expr><literal type="number" pos:line="157" pos:column="76">01456<pos:position pos:line="157" pos:column="81"/></literal></expr></argument>)<pos:position pos:line="157" pos:column="82"/></argument_list></call>
                                  <literal type="string" pos:line="158" pos:column="35">"rl: partition failed."<pos:position pos:line="158" pos:column="58"/></literal></expr></argument>)<pos:position pos:line="158" pos:column="59"/></argument_list></call></expr>;<pos:position pos:line="158" pos:column="60"/></expr_stmt>
                    <break pos:line="159" pos:column="21">break;<pos:position pos:line="159" pos:column="27"/></break>
                }<pos:position pos:line="160" pos:column="18"/></block></then></if>

                <if pos:line="162" pos:column="17">if <condition pos:line="162" pos:column="20">(<expr><name pos:line="162" pos:column="21">stop_point<pos:position pos:line="162" pos:column="31"/></name> <operator pos:line="162" pos:column="32">!=<pos:position pos:line="162" pos:column="34"/></operator> <call><name pos:line="162" pos:column="35">APR_BRIGADE_SENTINEL<pos:position pos:line="162" pos:column="55"/></name><argument_list pos:line="162" pos:column="55">(<argument><expr><name pos:line="162" pos:column="56">bb<pos:position pos:line="162" pos:column="58"/></name></expr></argument>)<pos:position pos:line="162" pos:column="59"/></argument_list></call></expr>)<pos:position pos:line="162" pos:column="60"/></condition><then pos:line="162" pos:column="60"> <block pos:line="162" pos:column="61">{
                    <decl_stmt><decl><type><name pos:line="163" pos:column="21">apr_bucket<pos:position pos:line="163" pos:column="31"/></name> <modifier pos:line="163" pos:column="32">*<pos:position pos:line="163" pos:column="33"/></modifier></type><name pos:line="163" pos:column="33">f<pos:position pos:line="163" pos:column="34"/></name></decl>;<pos:position pos:line="163" pos:column="35"/></decl_stmt>
                    <decl_stmt><decl><type><name pos:line="164" pos:column="21">apr_bucket<pos:position pos:line="164" pos:column="31"/></name> <modifier pos:line="164" pos:column="32">*<pos:position pos:line="164" pos:column="33"/></modifier></type><name pos:line="164" pos:column="33">e<pos:position pos:line="164" pos:column="34"/></name> <init pos:line="164" pos:column="35">= <expr><call><name pos:line="164" pos:column="37">APR_BUCKET_PREV<pos:position pos:line="164" pos:column="52"/></name><argument_list pos:line="164" pos:column="52">(<argument><expr><name pos:line="164" pos:column="53">stop_point<pos:position pos:line="164" pos:column="63"/></name></expr></argument>)<pos:position pos:line="164" pos:column="64"/></argument_list></call></expr></init></decl>;<pos:position pos:line="164" pos:column="65"/></decl_stmt>
                    <expr_stmt><expr><name pos:line="165" pos:column="21">f<pos:position pos:line="165" pos:column="22"/></name> <operator pos:line="165" pos:column="23">=<pos:position pos:line="165" pos:column="24"/></operator> <call><name pos:line="165" pos:column="25">APR_RING_FIRST<pos:position pos:line="165" pos:column="39"/></name><argument_list pos:line="165" pos:column="39">(<argument><expr><operator pos:line="165" pos:column="40">&amp;<pos:position pos:line="165" pos:column="45"/></operator><name><name pos:line="165" pos:column="41">bb<pos:position pos:line="165" pos:column="43"/></name><operator pos:line="165" pos:column="43">-&gt;<pos:position pos:line="165" pos:column="48"/></operator><name pos:line="165" pos:column="45">list<pos:position pos:line="165" pos:column="49"/></name></name></expr></argument>)<pos:position pos:line="165" pos:column="50"/></argument_list></call></expr>;<pos:position pos:line="165" pos:column="51"/></expr_stmt>
                    <expr_stmt><expr><call><name pos:line="166" pos:column="21">APR_RING_UNSPLICE<pos:position pos:line="166" pos:column="38"/></name><argument_list pos:line="166" pos:column="38">(<argument><expr><name pos:line="166" pos:column="39">f<pos:position pos:line="166" pos:column="40"/></name></expr></argument>, <argument><expr><name pos:line="166" pos:column="42">e<pos:position pos:line="166" pos:column="43"/></name></expr></argument>, <argument><expr><name pos:line="166" pos:column="45">link<pos:position pos:line="166" pos:column="49"/></name></expr></argument>)<pos:position pos:line="166" pos:column="50"/></argument_list></call></expr>;<pos:position pos:line="166" pos:column="51"/></expr_stmt>
                    <expr_stmt><expr><call><name pos:line="167" pos:column="21">APR_RING_SPLICE_HEAD<pos:position pos:line="167" pos:column="41"/></name><argument_list pos:line="167" pos:column="41">(<argument><expr><operator pos:line="167" pos:column="42">&amp;<pos:position pos:line="167" pos:column="47"/></operator><name><name pos:line="167" pos:column="43">ctx<pos:position pos:line="167" pos:column="46"/></name><operator pos:line="167" pos:column="46">-&gt;<pos:position pos:line="167" pos:column="51"/></operator><name pos:line="167" pos:column="48">tmpbb<pos:position pos:line="167" pos:column="53"/></name><operator pos:line="167" pos:column="53">-&gt;<pos:position pos:line="167" pos:column="58"/></operator><name pos:line="167" pos:column="55">list<pos:position pos:line="167" pos:column="59"/></name></name></expr></argument>, <argument><expr><name pos:line="167" pos:column="61">f<pos:position pos:line="167" pos:column="62"/></name></expr></argument>, <argument><expr><name pos:line="167" pos:column="64">e<pos:position pos:line="167" pos:column="65"/></name></expr></argument>, <argument><expr><name pos:line="167" pos:column="67">apr_bucket<pos:position pos:line="167" pos:column="77"/></name></expr></argument>,
                                         <argument><expr><name pos:line="168" pos:column="42">link<pos:position pos:line="168" pos:column="46"/></name></expr></argument>)<pos:position pos:line="168" pos:column="47"/></argument_list></call></expr>;<pos:position pos:line="168" pos:column="48"/></expr_stmt>
                }<pos:position pos:line="169" pos:column="18"/></block></then>
                <else pos:line="170" pos:column="17">else <block pos:line="170" pos:column="22">{
                    <expr_stmt><expr><call><name pos:line="171" pos:column="21">APR_BRIGADE_CONCAT<pos:position pos:line="171" pos:column="39"/></name><argument_list pos:line="171" pos:column="39">(<argument><expr><name><name pos:line="171" pos:column="40">ctx<pos:position pos:line="171" pos:column="43"/></name><operator pos:line="171" pos:column="43">-&gt;<pos:position pos:line="171" pos:column="48"/></operator><name pos:line="171" pos:column="45">tmpbb<pos:position pos:line="171" pos:column="50"/></name></name></expr></argument>, <argument><expr><name pos:line="171" pos:column="52">bb<pos:position pos:line="171" pos:column="54"/></name></expr></argument>)<pos:position pos:line="171" pos:column="55"/></argument_list></call></expr>;<pos:position pos:line="171" pos:column="56"/></expr_stmt>
                }<pos:position pos:line="172" pos:column="18"/></block></else></if>

                <expr_stmt><expr><name pos:line="174" pos:column="17">fb<pos:position pos:line="174" pos:column="19"/></name> <operator pos:line="174" pos:column="20">=<pos:position pos:line="174" pos:column="21"/></operator> <call><name pos:line="174" pos:column="22">apr_bucket_flush_create<pos:position pos:line="174" pos:column="45"/></name><argument_list pos:line="174" pos:column="45">(<argument><expr><name pos:line="174" pos:column="46">ba<pos:position pos:line="174" pos:column="48"/></name></expr></argument>)<pos:position pos:line="174" pos:column="49"/></argument_list></call></expr>;<pos:position pos:line="174" pos:column="50"/></expr_stmt>

                <expr_stmt><expr><call><name pos:line="176" pos:column="17">APR_BRIGADE_INSERT_TAIL<pos:position pos:line="176" pos:column="40"/></name><argument_list pos:line="176" pos:column="40">(<argument><expr><name><name pos:line="176" pos:column="41">ctx<pos:position pos:line="176" pos:column="44"/></name><operator pos:line="176" pos:column="44">-&gt;<pos:position pos:line="176" pos:column="49"/></operator><name pos:line="176" pos:column="46">tmpbb<pos:position pos:line="176" pos:column="51"/></name></name></expr></argument>, <argument><expr><name pos:line="176" pos:column="53">fb<pos:position pos:line="176" pos:column="55"/></name></expr></argument>)<pos:position pos:line="176" pos:column="56"/></argument_list></call></expr>;<pos:position pos:line="176" pos:column="57"/></expr_stmt>

                <comment type="block" pos:line="178" pos:column="17">/*
                 * Adjust the burst amount depending on how much
                 * we've done up to now.
                 */</comment>
                <if pos:line="182" pos:column="17">if <condition pos:line="182" pos:column="20">(<expr><name><name pos:line="182" pos:column="21">ctx<pos:position pos:line="182" pos:column="24"/></name><operator pos:line="182" pos:column="24">-&gt;<pos:position pos:line="182" pos:column="29"/></operator><name pos:line="182" pos:column="26">burst<pos:position pos:line="182" pos:column="31"/></name></name></expr>)<pos:position pos:line="182" pos:column="32"/></condition><then pos:line="182" pos:column="32"> <block pos:line="182" pos:column="33">{
                    <expr_stmt><expr><name pos:line="183" pos:column="21">len<pos:position pos:line="183" pos:column="24"/></name> <operator pos:line="183" pos:column="25">=<pos:position pos:line="183" pos:column="26"/></operator> <name><name pos:line="183" pos:column="27">ctx<pos:position pos:line="183" pos:column="30"/></name><operator pos:line="183" pos:column="30">-&gt;<pos:position pos:line="183" pos:column="35"/></operator><name pos:line="183" pos:column="32">burst<pos:position pos:line="183" pos:column="37"/></name></name></expr>;<pos:position pos:line="183" pos:column="38"/></expr_stmt>
                    <expr_stmt><expr><call><name pos:line="184" pos:column="21">apr_brigade_length<pos:position pos:line="184" pos:column="39"/></name><argument_list pos:line="184" pos:column="39">(<argument><expr><name><name pos:line="184" pos:column="40">ctx<pos:position pos:line="184" pos:column="43"/></name><operator pos:line="184" pos:column="43">-&gt;<pos:position pos:line="184" pos:column="48"/></operator><name pos:line="184" pos:column="45">tmpbb<pos:position pos:line="184" pos:column="50"/></name></name></expr></argument>, <argument><expr><literal type="number" pos:line="184" pos:column="52">1<pos:position pos:line="184" pos:column="53"/></literal></expr></argument>, <argument><expr><operator pos:line="184" pos:column="55">&amp;<pos:position pos:line="184" pos:column="60"/></operator><name pos:line="184" pos:column="56">len<pos:position pos:line="184" pos:column="59"/></name></expr></argument>)<pos:position pos:line="184" pos:column="60"/></argument_list></call></expr>;<pos:position pos:line="184" pos:column="61"/></expr_stmt>
                    <expr_stmt><expr><call><name pos:line="185" pos:column="21">ap_log_rerror<pos:position pos:line="185" pos:column="34"/></name><argument_list pos:line="185" pos:column="34">(<argument><expr><name pos:line="185" pos:column="35">APLOG_MARK<pos:position pos:line="185" pos:column="45"/></name></expr></argument>, <argument><expr><name pos:line="185" pos:column="47">APLOG_DEBUG<pos:position pos:line="185" pos:column="58"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="185" pos:column="60">0<pos:position pos:line="185" pos:column="61"/></literal></expr></argument>, <argument><expr><name><name pos:line="185" pos:column="63">f<pos:position pos:line="185" pos:column="64"/></name><operator pos:line="185" pos:column="64">-&gt;<pos:position pos:line="185" pos:column="69"/></operator><name pos:line="185" pos:column="66">r<pos:position pos:line="185" pos:column="67"/></name></name></expr></argument>,
                        <argument><expr><call><name pos:line="186" pos:column="25">APLOGNO<pos:position pos:line="186" pos:column="32"/></name><argument_list pos:line="186" pos:column="32">(<argument><expr><literal type="number" pos:line="186" pos:column="33">03485<pos:position pos:line="186" pos:column="38"/></literal></expr></argument>)<pos:position pos:line="186" pos:column="39"/></argument_list></call> <literal type="string" pos:line="186" pos:column="40">"rl: burst %d; len %"<pos:position pos:line="186" pos:column="61"/></literal><name pos:line="186" pos:column="61">APR_OFF_T_FMT<pos:position pos:line="186" pos:column="74"/></name></expr></argument>, <argument><expr><name><name pos:line="186" pos:column="76">ctx<pos:position pos:line="186" pos:column="79"/></name><operator pos:line="186" pos:column="79">-&gt;<pos:position pos:line="186" pos:column="84"/></operator><name pos:line="186" pos:column="81">burst<pos:position pos:line="186" pos:column="86"/></name></name></expr></argument>, <argument><expr><name pos:line="186" pos:column="88">len<pos:position pos:line="186" pos:column="91"/></name></expr></argument>)<pos:position pos:line="186" pos:column="92"/></argument_list></call></expr>;<pos:position pos:line="186" pos:column="93"/></expr_stmt>
                    <if pos:line="187" pos:column="21">if <condition pos:line="187" pos:column="24">(<expr><name pos:line="187" pos:column="25">len<pos:position pos:line="187" pos:column="28"/></name> <operator pos:line="187" pos:column="29">&lt;<pos:position pos:line="187" pos:column="33"/></operator> <name><name pos:line="187" pos:column="31">ctx<pos:position pos:line="187" pos:column="34"/></name><operator pos:line="187" pos:column="34">-&gt;<pos:position pos:line="187" pos:column="39"/></operator><name pos:line="187" pos:column="36">burst<pos:position pos:line="187" pos:column="41"/></name></name></expr>)<pos:position pos:line="187" pos:column="42"/></condition><then pos:line="187" pos:column="42"> <block pos:line="187" pos:column="43">{
                        <expr_stmt><expr><name><name pos:line="188" pos:column="25">ctx<pos:position pos:line="188" pos:column="28"/></name><operator pos:line="188" pos:column="28">-&gt;<pos:position pos:line="188" pos:column="33"/></operator><name pos:line="188" pos:column="30">burst<pos:position pos:line="188" pos:column="35"/></name></name> <operator pos:line="188" pos:column="36">-=<pos:position pos:line="188" pos:column="38"/></operator> <name pos:line="188" pos:column="39">len<pos:position pos:line="188" pos:column="42"/></name></expr>;<pos:position pos:line="188" pos:column="43"/></expr_stmt>
                    }<pos:position pos:line="189" pos:column="22"/></block></then>
                    <else pos:line="190" pos:column="21">else <block pos:line="190" pos:column="26">{
                        <expr_stmt><expr><name><name pos:line="191" pos:column="25">ctx<pos:position pos:line="191" pos:column="28"/></name><operator pos:line="191" pos:column="28">-&gt;<pos:position pos:line="191" pos:column="33"/></operator><name pos:line="191" pos:column="30">burst<pos:position pos:line="191" pos:column="35"/></name></name> <operator pos:line="191" pos:column="36">=<pos:position pos:line="191" pos:column="37"/></operator> <literal type="number" pos:line="191" pos:column="38">0<pos:position pos:line="191" pos:column="39"/></literal></expr>;<pos:position pos:line="191" pos:column="40"/></expr_stmt>
                    }<pos:position pos:line="192" pos:column="22"/></block></else></if>
                }<pos:position pos:line="193" pos:column="18"/></block></then></if>

<cpp:if pos:line="195" pos:column="1">#<cpp:directive pos:line="195" pos:column="2">if<pos:position pos:line="195" pos:column="4"/></cpp:directive> <expr><call><name pos:line="195" pos:column="5">defined<pos:position pos:line="195" pos:column="12"/></name><argument_list pos:line="195" pos:column="12">(<argument><expr><name pos:line="195" pos:column="13">RLFDEBUG<pos:position pos:line="195" pos:column="21"/></name></expr></argument>)<pos:position pos:line="195" pos:column="22"/></argument_list></call></expr></cpp:if>
                <expr_stmt><expr><call><name pos:line="196" pos:column="17">brigade_dump<pos:position pos:line="196" pos:column="29"/></name><argument_list pos:line="196" pos:column="29">(<argument><expr><name><name pos:line="196" pos:column="30">f<pos:position pos:line="196" pos:column="31"/></name><operator pos:line="196" pos:column="31">-&gt;<pos:position pos:line="196" pos:column="36"/></operator><name pos:line="196" pos:column="33">r<pos:position pos:line="196" pos:column="34"/></name></name></expr></argument>, <argument><expr><name><name pos:line="196" pos:column="36">ctx<pos:position pos:line="196" pos:column="39"/></name><operator pos:line="196" pos:column="39">-&gt;<pos:position pos:line="196" pos:column="44"/></operator><name pos:line="196" pos:column="41">tmpbb<pos:position pos:line="196" pos:column="46"/></name></name></expr></argument>)<pos:position pos:line="196" pos:column="47"/></argument_list></call></expr>;<pos:position pos:line="196" pos:column="48"/></expr_stmt>
                <expr_stmt><expr><call><name pos:line="197" pos:column="17">brigade_dump<pos:position pos:line="197" pos:column="29"/></name><argument_list pos:line="197" pos:column="29">(<argument><expr><name><name pos:line="197" pos:column="30">f<pos:position pos:line="197" pos:column="31"/></name><operator pos:line="197" pos:column="31">-&gt;<pos:position pos:line="197" pos:column="36"/></operator><name pos:line="197" pos:column="33">r<pos:position pos:line="197" pos:column="34"/></name></name></expr></argument>, <argument><expr><name pos:line="197" pos:column="36">bb<pos:position pos:line="197" pos:column="38"/></name></expr></argument>)<pos:position pos:line="197" pos:column="39"/></argument_list></call></expr>;<pos:position pos:line="197" pos:column="40"/></expr_stmt>
<cpp:endif pos:line="198" pos:column="1">#<cpp:directive pos:line="198" pos:column="2">endif<pos:position pos:line="198" pos:column="7"/></cpp:directive></cpp:endif> <comment type="block" pos:line="198" pos:column="8">/* RLFDEBUG */</comment>

                <expr_stmt><expr><name pos:line="200" pos:column="17">rv<pos:position pos:line="200" pos:column="19"/></name> <operator pos:line="200" pos:column="20">=<pos:position pos:line="200" pos:column="21"/></operator> <call><name pos:line="200" pos:column="22">ap_pass_brigade<pos:position pos:line="200" pos:column="37"/></name><argument_list pos:line="200" pos:column="37">(<argument><expr><name><name pos:line="200" pos:column="38">f<pos:position pos:line="200" pos:column="39"/></name><operator pos:line="200" pos:column="39">-&gt;<pos:position pos:line="200" pos:column="44"/></operator><name pos:line="200" pos:column="41">next<pos:position pos:line="200" pos:column="45"/></name></name></expr></argument>, <argument><expr><name><name pos:line="200" pos:column="47">ctx<pos:position pos:line="200" pos:column="50"/></name><operator pos:line="200" pos:column="50">-&gt;<pos:position pos:line="200" pos:column="55"/></operator><name pos:line="200" pos:column="52">tmpbb<pos:position pos:line="200" pos:column="57"/></name></name></expr></argument>)<pos:position pos:line="200" pos:column="58"/></argument_list></call></expr>;<pos:position pos:line="200" pos:column="59"/></expr_stmt>
                <expr_stmt><expr><call><name pos:line="201" pos:column="17">apr_brigade_cleanup<pos:position pos:line="201" pos:column="36"/></name><argument_list pos:line="201" pos:column="36">(<argument><expr><name><name pos:line="201" pos:column="37">ctx<pos:position pos:line="201" pos:column="40"/></name><operator pos:line="201" pos:column="40">-&gt;<pos:position pos:line="201" pos:column="45"/></operator><name pos:line="201" pos:column="42">tmpbb<pos:position pos:line="201" pos:column="47"/></name></name></expr></argument>)<pos:position pos:line="201" pos:column="48"/></argument_list></call></expr>;<pos:position pos:line="201" pos:column="49"/></expr_stmt>

                <if pos:line="203" pos:column="17">if <condition pos:line="203" pos:column="20">(<expr><name pos:line="203" pos:column="21">rv<pos:position pos:line="203" pos:column="23"/></name> <operator pos:line="203" pos:column="24">!=<pos:position pos:line="203" pos:column="26"/></operator> <name pos:line="203" pos:column="27">APR_SUCCESS<pos:position pos:line="203" pos:column="38"/></name></expr>)<pos:position pos:line="203" pos:column="39"/></condition><then pos:line="203" pos:column="39"> <block pos:line="203" pos:column="40">{
                    <comment type="block" pos:line="204" pos:column="21">/* Most often, user disconnects from stream */</comment>
                    <expr_stmt><expr><name><name pos:line="205" pos:column="21">ctx<pos:position pos:line="205" pos:column="24"/></name><operator pos:line="205" pos:column="24">-&gt;<pos:position pos:line="205" pos:column="29"/></operator><name pos:line="205" pos:column="26">state<pos:position pos:line="205" pos:column="31"/></name></name> <operator pos:line="205" pos:column="32">=<pos:position pos:line="205" pos:column="33"/></operator> <name pos:line="205" pos:column="34">RATE_ERROR<pos:position pos:line="205" pos:column="44"/></name></expr>;<pos:position pos:line="205" pos:column="45"/></expr_stmt>
                    <expr_stmt><expr><call><name pos:line="206" pos:column="21">ap_log_rerror<pos:position pos:line="206" pos:column="34"/></name><argument_list pos:line="206" pos:column="34">(<argument><expr><name pos:line="206" pos:column="35">APLOG_MARK<pos:position pos:line="206" pos:column="45"/></name></expr></argument>, <argument><expr><name pos:line="206" pos:column="47">APLOG_TRACE1<pos:position pos:line="206" pos:column="59"/></name></expr></argument>, <argument><expr><name pos:line="206" pos:column="61">rv<pos:position pos:line="206" pos:column="63"/></name></expr></argument>, <argument><expr><name><name pos:line="206" pos:column="65">f<pos:position pos:line="206" pos:column="66"/></name><operator pos:line="206" pos:column="66">-&gt;<pos:position pos:line="206" pos:column="71"/></operator><name pos:line="206" pos:column="68">r<pos:position pos:line="206" pos:column="69"/></name></name></expr></argument>, <argument><expr><call><name pos:line="206" pos:column="71">APLOGNO<pos:position pos:line="206" pos:column="78"/></name><argument_list pos:line="206" pos:column="78">(<argument><expr><literal type="number" pos:line="206" pos:column="79">01457<pos:position pos:line="206" pos:column="84"/></literal></expr></argument>)<pos:position pos:line="206" pos:column="85"/></argument_list></call>
                                  <literal type="string" pos:line="207" pos:column="35">"rl: brigade pass failed."<pos:position pos:line="207" pos:column="61"/></literal></expr></argument>)<pos:position pos:line="207" pos:column="62"/></argument_list></call></expr>;<pos:position pos:line="207" pos:column="63"/></expr_stmt>
                    <break pos:line="208" pos:column="21">break;<pos:position pos:line="208" pos:column="27"/></break>
                }<pos:position pos:line="209" pos:column="18"/></block></then></if>
            }<pos:position pos:line="210" pos:column="14"/></block></while>
        }<pos:position pos:line="211" pos:column="10"/></block></while>
    }<pos:position pos:line="212" pos:column="6"/></block></while>

    <return pos:line="214" pos:column="5">return <expr><name pos:line="214" pos:column="12">rv<pos:position pos:line="214" pos:column="14"/></name></expr>;<pos:position pos:line="214" pos:column="15"/></return>
}<pos:position pos:line="215" pos:column="2"/></block></function></unit>

<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/httpd/gumtree/httpd_repos_function_1948_httpd-2.3.6.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">apr_status_t<pos:position pos:line="1" pos:column="20"/></name></type> <name pos:line="1" pos:column="21">init_context<pos:position pos:line="1" pos:column="33"/></name><parameter_list pos:line="1" pos:column="33">(<parameter><decl><type><name pos:line="1" pos:column="34">ap_filter_t<pos:position pos:line="1" pos:column="45"/></name> <modifier pos:line="1" pos:column="46">*<pos:position pos:line="1" pos:column="47"/></modifier></type><name pos:line="1" pos:column="47">f<pos:position pos:line="1" pos:column="48"/></name></decl></parameter>, <parameter><decl><type><name pos:line="1" pos:column="50">sed_expr_config<pos:position pos:line="1" pos:column="65"/></name> <modifier pos:line="1" pos:column="66">*<pos:position pos:line="1" pos:column="67"/></modifier></type><name pos:line="1" pos:column="67">sed_cfg<pos:position pos:line="1" pos:column="74"/></name></decl></parameter>, <parameter><decl><type><name pos:line="1" pos:column="76">int<pos:position pos:line="1" pos:column="79"/></name></type> <name pos:line="1" pos:column="80">usetpool<pos:position pos:line="1" pos:column="88"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="89"/></parameter_list>
<block pos:line="2" pos:column="1">{
    <decl_stmt><decl><type><name pos:line="3" pos:column="5">apr_status_t<pos:position pos:line="3" pos:column="17"/></name></type> <name pos:line="3" pos:column="18">status<pos:position pos:line="3" pos:column="24"/></name></decl>;<pos:position pos:line="3" pos:column="25"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="4" pos:column="5">sed_filter_ctxt<pos:position pos:line="4" pos:column="20"/></name><modifier pos:line="4" pos:column="20">*<pos:position pos:line="4" pos:column="21"/></modifier></type> <name pos:line="4" pos:column="22">ctx<pos:position pos:line="4" pos:column="25"/></name></decl>;<pos:position pos:line="4" pos:column="26"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="5" pos:column="5">request_rec<pos:position pos:line="5" pos:column="16"/></name> <modifier pos:line="5" pos:column="17">*<pos:position pos:line="5" pos:column="18"/></modifier></type><name pos:line="5" pos:column="18">r<pos:position pos:line="5" pos:column="19"/></name> <init pos:line="5" pos:column="20">= <expr><name><name pos:line="5" pos:column="22">f<pos:position pos:line="5" pos:column="23"/></name><operator pos:line="5" pos:column="23">-&gt;<pos:position pos:line="5" pos:column="28"/></operator><name pos:line="5" pos:column="25">r<pos:position pos:line="5" pos:column="26"/></name></name></expr></init></decl>;<pos:position pos:line="5" pos:column="27"/></decl_stmt>
    <comment type="block" pos:line="6" pos:column="5">/* Create the context. Call sed_init_eval. libsed will generated
     * output by calling sed_write_output and generates any error by
     * invoking log_sed_errf.
     */</comment>
    <expr_stmt><expr><name pos:line="10" pos:column="5">ctx<pos:position pos:line="10" pos:column="8"/></name> <operator pos:line="10" pos:column="9">=<pos:position pos:line="10" pos:column="10"/></operator> <call><name pos:line="10" pos:column="11">apr_pcalloc<pos:position pos:line="10" pos:column="22"/></name><argument_list pos:line="10" pos:column="22">(<argument><expr><name><name pos:line="10" pos:column="23">r<pos:position pos:line="10" pos:column="24"/></name><operator pos:line="10" pos:column="24">-&gt;<pos:position pos:line="10" pos:column="29"/></operator><name pos:line="10" pos:column="26">pool<pos:position pos:line="10" pos:column="30"/></name></name></expr></argument>, <argument><expr><sizeof pos:line="10" pos:column="32">sizeof<argument_list pos:line="10" pos:column="38">(<argument><expr><name pos:line="10" pos:column="39">sed_filter_ctxt<pos:position pos:line="10" pos:column="54"/></name></expr></argument>)<pos:position pos:line="10" pos:column="55"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="10" pos:column="56"/></argument_list></call></expr>;<pos:position pos:line="10" pos:column="57"/></expr_stmt>
    <expr_stmt><expr><name><name pos:line="11" pos:column="5">ctx<pos:position pos:line="11" pos:column="8"/></name><operator pos:line="11" pos:column="8">-&gt;<pos:position pos:line="11" pos:column="13"/></operator><name pos:line="11" pos:column="10">r<pos:position pos:line="11" pos:column="11"/></name></name> <operator pos:line="11" pos:column="12">=<pos:position pos:line="11" pos:column="13"/></operator> <name pos:line="11" pos:column="14">r<pos:position pos:line="11" pos:column="15"/></name></expr>;<pos:position pos:line="11" pos:column="16"/></expr_stmt>
    <expr_stmt><expr><name><name pos:line="12" pos:column="5">ctx<pos:position pos:line="12" pos:column="8"/></name><operator pos:line="12" pos:column="8">-&gt;<pos:position pos:line="12" pos:column="13"/></operator><name pos:line="12" pos:column="10">bb<pos:position pos:line="12" pos:column="12"/></name></name> <operator pos:line="12" pos:column="13">=<pos:position pos:line="12" pos:column="14"/></operator> <name pos:line="12" pos:column="15">NULL<pos:position pos:line="12" pos:column="19"/></name></expr>;<pos:position pos:line="12" pos:column="20"/></expr_stmt>
    <expr_stmt><expr><name><name pos:line="13" pos:column="5">ctx<pos:position pos:line="13" pos:column="8"/></name><operator pos:line="13" pos:column="8">-&gt;<pos:position pos:line="13" pos:column="13"/></operator><name pos:line="13" pos:column="10">numbuckets<pos:position pos:line="13" pos:column="20"/></name></name> <operator pos:line="13" pos:column="21">=<pos:position pos:line="13" pos:column="22"/></operator> <literal type="number" pos:line="13" pos:column="23">0<pos:position pos:line="13" pos:column="24"/></literal></expr>;<pos:position pos:line="13" pos:column="25"/></expr_stmt>
    <expr_stmt><expr><name><name pos:line="14" pos:column="5">ctx<pos:position pos:line="14" pos:column="8"/></name><operator pos:line="14" pos:column="8">-&gt;<pos:position pos:line="14" pos:column="13"/></operator><name pos:line="14" pos:column="10">f<pos:position pos:line="14" pos:column="11"/></name></name> <operator pos:line="14" pos:column="12">=<pos:position pos:line="14" pos:column="13"/></operator> <name pos:line="14" pos:column="14">f<pos:position pos:line="14" pos:column="15"/></name></expr>;<pos:position pos:line="14" pos:column="16"/></expr_stmt>
    <expr_stmt><expr><name pos:line="15" pos:column="5">status<pos:position pos:line="15" pos:column="11"/></name> <operator pos:line="15" pos:column="12">=<pos:position pos:line="15" pos:column="13"/></operator> <call><name pos:line="15" pos:column="14">sed_init_eval<pos:position pos:line="15" pos:column="27"/></name><argument_list pos:line="15" pos:column="27">(<argument><expr><operator pos:line="15" pos:column="28">&amp;<pos:position pos:line="15" pos:column="33"/></operator><name><name pos:line="15" pos:column="29">ctx<pos:position pos:line="15" pos:column="32"/></name><operator pos:line="15" pos:column="32">-&gt;<pos:position pos:line="15" pos:column="37"/></operator><name pos:line="15" pos:column="34">eval<pos:position pos:line="15" pos:column="38"/></name></name></expr></argument>, <argument><expr><name><name pos:line="15" pos:column="40">sed_cfg<pos:position pos:line="15" pos:column="47"/></name><operator pos:line="15" pos:column="47">-&gt;<pos:position pos:line="15" pos:column="52"/></operator><name pos:line="15" pos:column="49">sed_cmds<pos:position pos:line="15" pos:column="57"/></name></name></expr></argument>, <argument><expr><name pos:line="15" pos:column="59">log_sed_errf<pos:position pos:line="15" pos:column="71"/></name></expr></argument>,
                           <argument><expr><name pos:line="16" pos:column="28">r<pos:position pos:line="16" pos:column="29"/></name></expr></argument>, <argument><expr><operator pos:line="16" pos:column="31">&amp;<pos:position pos:line="16" pos:column="36"/></operator><name pos:line="16" pos:column="32">sed_write_output<pos:position pos:line="16" pos:column="48"/></name></expr></argument>, <argument><expr><name><name pos:line="16" pos:column="50">r<pos:position pos:line="16" pos:column="51"/></name><operator pos:line="16" pos:column="51">-&gt;<pos:position pos:line="16" pos:column="56"/></operator><name pos:line="16" pos:column="53">pool<pos:position pos:line="16" pos:column="57"/></name></name></expr></argument>)<pos:position pos:line="16" pos:column="58"/></argument_list></call></expr>;<pos:position pos:line="16" pos:column="59"/></expr_stmt>
    <if pos:line="17" pos:column="5">if <condition pos:line="17" pos:column="8">(<expr><name pos:line="17" pos:column="9">status<pos:position pos:line="17" pos:column="15"/></name> <operator pos:line="17" pos:column="16">!=<pos:position pos:line="17" pos:column="18"/></operator> <name pos:line="17" pos:column="19">APR_SUCCESS<pos:position pos:line="17" pos:column="30"/></name></expr>)<pos:position pos:line="17" pos:column="31"/></condition><then pos:line="17" pos:column="31"> <block pos:line="17" pos:column="32">{
        <return pos:line="18" pos:column="9">return <expr><name pos:line="18" pos:column="16">status<pos:position pos:line="18" pos:column="22"/></name></expr>;<pos:position pos:line="18" pos:column="23"/></return>
    }<pos:position pos:line="19" pos:column="6"/></block></then></if>
    <expr_stmt><expr><call><name pos:line="20" pos:column="5">apr_pool_cleanup_register<pos:position pos:line="20" pos:column="30"/></name><argument_list pos:line="20" pos:column="30">(<argument><expr><name><name pos:line="20" pos:column="31">r<pos:position pos:line="20" pos:column="32"/></name><operator pos:line="20" pos:column="32">-&gt;<pos:position pos:line="20" pos:column="37"/></operator><name pos:line="20" pos:column="34">pool<pos:position pos:line="20" pos:column="38"/></name></name></expr></argument>, <argument><expr><operator pos:line="20" pos:column="40">&amp;<pos:position pos:line="20" pos:column="45"/></operator><name><name pos:line="20" pos:column="41">ctx<pos:position pos:line="20" pos:column="44"/></name><operator pos:line="20" pos:column="44">-&gt;<pos:position pos:line="20" pos:column="49"/></operator><name pos:line="20" pos:column="46">eval<pos:position pos:line="20" pos:column="50"/></name></name></expr></argument>, <argument><expr><name pos:line="20" pos:column="52">sed_eval_cleanup<pos:position pos:line="20" pos:column="68"/></name></expr></argument>,
                              <argument><expr><name pos:line="21" pos:column="31">apr_pool_cleanup_null<pos:position pos:line="21" pos:column="52"/></name></expr></argument>)<pos:position pos:line="21" pos:column="53"/></argument_list></call></expr>;<pos:position pos:line="21" pos:column="54"/></expr_stmt>
    <expr_stmt><expr><name><name pos:line="22" pos:column="5">ctx<pos:position pos:line="22" pos:column="8"/></name><operator pos:line="22" pos:column="8">-&gt;<pos:position pos:line="22" pos:column="13"/></operator><name pos:line="22" pos:column="10">bufsize<pos:position pos:line="22" pos:column="17"/></name></name> <operator pos:line="22" pos:column="18">=<pos:position pos:line="22" pos:column="19"/></operator> <name pos:line="22" pos:column="20">MODSED_OUTBUF_SIZE<pos:position pos:line="22" pos:column="38"/></name></expr>;<pos:position pos:line="22" pos:column="39"/></expr_stmt>
    <if pos:line="23" pos:column="5">if <condition pos:line="23" pos:column="8">(<expr><name pos:line="23" pos:column="9">usetpool<pos:position pos:line="23" pos:column="17"/></name></expr>)<pos:position pos:line="23" pos:column="18"/></condition><then pos:line="23" pos:column="18"> <block pos:line="23" pos:column="19">{
        <expr_stmt><expr><call><name pos:line="24" pos:column="9">apr_pool_create<pos:position pos:line="24" pos:column="24"/></name><argument_list pos:line="24" pos:column="24">(<argument><expr><operator pos:line="24" pos:column="25">&amp;<pos:position pos:line="24" pos:column="30"/></operator><operator pos:line="24" pos:column="26">(<pos:position pos:line="24" pos:column="27"/></operator><name><name pos:line="24" pos:column="27">ctx<pos:position pos:line="24" pos:column="30"/></name><operator pos:line="24" pos:column="30">-&gt;<pos:position pos:line="24" pos:column="35"/></operator><name pos:line="24" pos:column="32">tpool<pos:position pos:line="24" pos:column="37"/></name></name><operator pos:line="24" pos:column="37">)<pos:position pos:line="24" pos:column="38"/></operator></expr></argument>, <argument><expr><name><name pos:line="24" pos:column="40">r<pos:position pos:line="24" pos:column="41"/></name><operator pos:line="24" pos:column="41">-&gt;<pos:position pos:line="24" pos:column="46"/></operator><name pos:line="24" pos:column="43">pool<pos:position pos:line="24" pos:column="47"/></name></name></expr></argument>)<pos:position pos:line="24" pos:column="48"/></argument_list></call></expr>;<pos:position pos:line="24" pos:column="49"/></expr_stmt>
    }<pos:position pos:line="25" pos:column="6"/></block></then>
    <else pos:line="26" pos:column="5">else <block pos:line="26" pos:column="10">{
        <expr_stmt><expr><name><name pos:line="27" pos:column="9">ctx<pos:position pos:line="27" pos:column="12"/></name><operator pos:line="27" pos:column="12">-&gt;<pos:position pos:line="27" pos:column="17"/></operator><name pos:line="27" pos:column="14">tpool<pos:position pos:line="27" pos:column="19"/></name></name> <operator pos:line="27" pos:column="20">=<pos:position pos:line="27" pos:column="21"/></operator> <name><name pos:line="27" pos:column="22">r<pos:position pos:line="27" pos:column="23"/></name><operator pos:line="27" pos:column="23">-&gt;<pos:position pos:line="27" pos:column="28"/></operator><name pos:line="27" pos:column="25">pool<pos:position pos:line="27" pos:column="29"/></name></name></expr>;<pos:position pos:line="27" pos:column="30"/></expr_stmt>
    }<pos:position pos:line="28" pos:column="6"/></block></else></if>
    <expr_stmt><expr><call><name pos:line="29" pos:column="5">alloc_outbuf<pos:position pos:line="29" pos:column="17"/></name><argument_list pos:line="29" pos:column="17">(<argument><expr><name pos:line="29" pos:column="18">ctx<pos:position pos:line="29" pos:column="21"/></name></expr></argument>)<pos:position pos:line="29" pos:column="22"/></argument_list></call></expr>;<pos:position pos:line="29" pos:column="23"/></expr_stmt>
    <expr_stmt><expr><name><name pos:line="30" pos:column="5">f<pos:position pos:line="30" pos:column="6"/></name><operator pos:line="30" pos:column="6">-&gt;<pos:position pos:line="30" pos:column="11"/></operator><name pos:line="30" pos:column="8">ctx<pos:position pos:line="30" pos:column="11"/></name></name> <operator pos:line="30" pos:column="12">=<pos:position pos:line="30" pos:column="13"/></operator> <name pos:line="30" pos:column="14">ctx<pos:position pos:line="30" pos:column="17"/></name></expr>;<pos:position pos:line="30" pos:column="18"/></expr_stmt>
    <return pos:line="31" pos:column="5">return <expr><name pos:line="31" pos:column="12">APR_SUCCESS<pos:position pos:line="31" pos:column="23"/></name></expr>;<pos:position pos:line="31" pos:column="24"/></return>
}<pos:position pos:line="32" pos:column="2"/></block></function></unit>

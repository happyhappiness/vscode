<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/httpd/gumtree/httpd_function_4906.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">pid_t<pos:position pos:line="1" pos:column="6"/></name></type> <name pos:line="1" pos:column="7">os_fork<pos:position pos:line="1" pos:column="14"/></name><parameter_list pos:line="1" pos:column="14">(<parameter><decl><type><specifier pos:line="1" pos:column="15">const<pos:position pos:line="1" pos:column="20"/></specifier> <name pos:line="1" pos:column="21">char<pos:position pos:line="1" pos:column="25"/></name> <modifier pos:line="1" pos:column="26">*<pos:position pos:line="1" pos:column="27"/></modifier></type><name pos:line="1" pos:column="27">user<pos:position pos:line="1" pos:column="31"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="32"/></parameter_list>
<block pos:line="2" pos:column="1">{
    <decl_stmt><decl><type><name pos:line="3" pos:column="5">pid_t<pos:position pos:line="3" pos:column="10"/></name></type> <name pos:line="3" pos:column="11">pid<pos:position pos:line="3" pos:column="14"/></name></decl>;<pos:position pos:line="3" pos:column="15"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="4" pos:column="5">char<pos:position pos:line="4" pos:column="9"/></name></type>  <name><name pos:line="4" pos:column="11">username<pos:position pos:line="4" pos:column="19"/></name><index pos:line="4" pos:column="19">[<expr><name pos:line="4" pos:column="20">USER_LEN<pos:position pos:line="4" pos:column="28"/></name><operator pos:line="4" pos:column="28">+<pos:position pos:line="4" pos:column="29"/></operator><literal type="number" pos:line="4" pos:column="29">1<pos:position pos:line="4" pos:column="30"/></literal></expr>]<pos:position pos:line="4" pos:column="31"/></index></name></decl>;<pos:position pos:line="4" pos:column="32"/></decl_stmt>

    <switch pos:line="6" pos:column="5">switch <condition pos:line="6" pos:column="12">(<expr><call><name pos:line="6" pos:column="13">os_forktype<pos:position pos:line="6" pos:column="24"/></name><argument_list pos:line="6" pos:column="24">(<argument><expr><literal type="number" pos:line="6" pos:column="25">0<pos:position pos:line="6" pos:column="26"/></literal></expr></argument>)<pos:position pos:line="6" pos:column="27"/></argument_list></call></expr>)<pos:position pos:line="6" pos:column="28"/></condition> <block pos:line="6" pos:column="29">{

      <case pos:line="8" pos:column="7">case <expr><name pos:line="8" pos:column="12">bs2_FORK<pos:position pos:line="8" pos:column="20"/></name></expr>:<pos:position pos:line="8" pos:column="21"/></case>
        <expr_stmt><expr><name pos:line="9" pos:column="9">pid<pos:position pos:line="9" pos:column="12"/></name> <operator pos:line="9" pos:column="13">=<pos:position pos:line="9" pos:column="14"/></operator> <call><name pos:line="9" pos:column="15">fork<pos:position pos:line="9" pos:column="19"/></name><argument_list pos:line="9" pos:column="19">()<pos:position pos:line="9" pos:column="21"/></argument_list></call></expr>;<pos:position pos:line="9" pos:column="22"/></expr_stmt>
        <break pos:line="10" pos:column="9">break;<pos:position pos:line="10" pos:column="15"/></break>

      <case pos:line="12" pos:column="7">case <expr><name pos:line="12" pos:column="12">bs2_UFORK<pos:position pos:line="12" pos:column="21"/></name></expr>:<pos:position pos:line="12" pos:column="22"/></case>
        <expr_stmt><expr><call><name pos:line="13" pos:column="9">apr_cpystrn<pos:position pos:line="13" pos:column="20"/></name><argument_list pos:line="13" pos:column="20">(<argument><expr><name pos:line="13" pos:column="21">username<pos:position pos:line="13" pos:column="29"/></name></expr></argument>, <argument><expr><name pos:line="13" pos:column="31">user<pos:position pos:line="13" pos:column="35"/></name></expr></argument>, <argument><expr><sizeof pos:line="13" pos:column="37">sizeof <name pos:line="13" pos:column="44">username<pos:position pos:line="13" pos:column="52"/></name></sizeof></expr></argument>)<pos:position pos:line="13" pos:column="53"/></argument_list></call></expr>;<pos:position pos:line="13" pos:column="54"/></expr_stmt>

        <comment type="block" pos:line="15" pos:column="9">/* Make user name all upper case - for some versions of ufork() */</comment>
        <expr_stmt><expr><call><name pos:line="16" pos:column="9">ap_str_toupper<pos:position pos:line="16" pos:column="23"/></name><argument_list pos:line="16" pos:column="23">(<argument><expr><name pos:line="16" pos:column="24">username<pos:position pos:line="16" pos:column="32"/></name></expr></argument>)<pos:position pos:line="16" pos:column="33"/></argument_list></call></expr>;<pos:position pos:line="16" pos:column="34"/></expr_stmt>

        <expr_stmt><expr><name pos:line="18" pos:column="9">pid<pos:position pos:line="18" pos:column="12"/></name> <operator pos:line="18" pos:column="13">=<pos:position pos:line="18" pos:column="14"/></operator> <call><name pos:line="18" pos:column="15">ufork<pos:position pos:line="18" pos:column="20"/></name><argument_list pos:line="18" pos:column="20">(<argument><expr><name pos:line="18" pos:column="21">username<pos:position pos:line="18" pos:column="29"/></name></expr></argument>)<pos:position pos:line="18" pos:column="30"/></argument_list></call></expr>;<pos:position pos:line="18" pos:column="31"/></expr_stmt>
        <if pos:line="19" pos:column="9">if <condition pos:line="19" pos:column="12">(<expr><name pos:line="19" pos:column="13">pid<pos:position pos:line="19" pos:column="16"/></name> <operator pos:line="19" pos:column="17">==<pos:position pos:line="19" pos:column="19"/></operator> <operator pos:line="19" pos:column="20">-<pos:position pos:line="19" pos:column="21"/></operator><literal type="number" pos:line="19" pos:column="21">1<pos:position pos:line="19" pos:column="22"/></literal> <operator pos:line="19" pos:column="23">&amp;&amp;<pos:position pos:line="19" pos:column="33"/></operator> <name pos:line="19" pos:column="26">errno<pos:position pos:line="19" pos:column="31"/></name> <operator pos:line="19" pos:column="32">==<pos:position pos:line="19" pos:column="34"/></operator> <name pos:line="19" pos:column="35">EPERM<pos:position pos:line="19" pos:column="40"/></name></expr>)<pos:position pos:line="19" pos:column="41"/></condition><then pos:line="19" pos:column="41"> <block pos:line="19" pos:column="42">{
            <expr_stmt><expr><call><name pos:line="20" pos:column="13">ap_log_error<pos:position pos:line="20" pos:column="25"/></name><argument_list pos:line="20" pos:column="25">(<argument><expr><name pos:line="20" pos:column="26">APLOG_MARK<pos:position pos:line="20" pos:column="36"/></name></expr></argument>, <argument><expr><name pos:line="20" pos:column="38">APLOG_EMERG<pos:position pos:line="20" pos:column="49"/></name></expr></argument>, <argument><expr><name pos:line="20" pos:column="51">errno<pos:position pos:line="20" pos:column="56"/></name></expr></argument>,
                         <argument><expr><name pos:line="21" pos:column="26">NULL<pos:position pos:line="21" pos:column="30"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="21" pos:column="32">"ufork: Possible mis-configuration "<pos:position pos:line="21" pos:column="68"/></literal>
                         <literal type="string" pos:line="22" pos:column="26">"for user %s - Aborting."<pos:position pos:line="22" pos:column="51"/></literal></expr></argument>, <argument><expr><name pos:line="22" pos:column="53">user<pos:position pos:line="22" pos:column="57"/></name></expr></argument>)<pos:position pos:line="22" pos:column="58"/></argument_list></call></expr>;<pos:position pos:line="22" pos:column="59"/></expr_stmt>
            <expr_stmt><expr><call><name pos:line="23" pos:column="13">exit<pos:position pos:line="23" pos:column="17"/></name><argument_list pos:line="23" pos:column="17">(<argument><expr><literal type="number" pos:line="23" pos:column="18">1<pos:position pos:line="23" pos:column="19"/></literal></expr></argument>)<pos:position pos:line="23" pos:column="20"/></argument_list></call></expr>;<pos:position pos:line="23" pos:column="21"/></expr_stmt>
        }<pos:position pos:line="24" pos:column="10"/></block></then></if>
        <break pos:line="25" pos:column="9">break;<pos:position pos:line="25" pos:column="15"/></break>

      <default pos:line="27" pos:column="7">default:<pos:position pos:line="27" pos:column="15"/></default>
        <expr_stmt><expr><name pos:line="28" pos:column="9">pid<pos:position pos:line="28" pos:column="12"/></name> <operator pos:line="28" pos:column="13">=<pos:position pos:line="28" pos:column="14"/></operator> <literal type="number" pos:line="28" pos:column="15">0<pos:position pos:line="28" pos:column="16"/></literal></expr>;<pos:position pos:line="28" pos:column="17"/></expr_stmt>
        <break pos:line="29" pos:column="9">break;<pos:position pos:line="29" pos:column="15"/></break>
    }<pos:position pos:line="30" pos:column="6"/></block></switch>

    <return pos:line="32" pos:column="5">return <expr><name pos:line="32" pos:column="12">pid<pos:position pos:line="32" pos:column="15"/></name></expr>;<pos:position pos:line="32" pos:column="16"/></return>
}<pos:position pos:line="33" pos:column="2"/></block></function></unit>

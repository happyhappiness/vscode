<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/httpd/gumtree/httpd_repos_function_583_httpd-2.4.7.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">void<pos:position pos:line="1" pos:column="12"/></name></type> <name pos:line="1" pos:column="13">register_hooks<pos:position pos:line="1" pos:column="27"/></name><parameter_list pos:line="1" pos:column="27">(<parameter><decl><type><name pos:line="1" pos:column="28">apr_pool_t<pos:position pos:line="1" pos:column="38"/></name> <modifier pos:line="1" pos:column="39">*<pos:position pos:line="1" pos:column="40"/></modifier></type><name pos:line="1" pos:column="40">p<pos:position pos:line="1" pos:column="41"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="42"/></parameter_list>
<block pos:line="2" pos:column="1">{
    <expr_stmt><expr><call><name pos:line="3" pos:column="5">ap_hook_header_parser<pos:position pos:line="3" pos:column="26"/></name><argument_list pos:line="3" pos:column="26">(<argument><expr><name pos:line="3" pos:column="27">match_headers<pos:position pos:line="3" pos:column="40"/></name></expr></argument>, <argument><expr><name pos:line="3" pos:column="42">NULL<pos:position pos:line="3" pos:column="46"/></name></expr></argument>, <argument><expr><name pos:line="3" pos:column="48">NULL<pos:position pos:line="3" pos:column="52"/></name></expr></argument>, <argument><expr><name pos:line="3" pos:column="54">APR_HOOK_MIDDLE<pos:position pos:line="3" pos:column="69"/></name></expr></argument>)<pos:position pos:line="3" pos:column="70"/></argument_list></call></expr>;<pos:position pos:line="3" pos:column="71"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="4" pos:column="5">ap_hook_post_read_request<pos:position pos:line="4" pos:column="30"/></name><argument_list pos:line="4" pos:column="30">(<argument><expr><name pos:line="4" pos:column="31">match_headers<pos:position pos:line="4" pos:column="44"/></name></expr></argument>, <argument><expr><name pos:line="4" pos:column="46">NULL<pos:position pos:line="4" pos:column="50"/></name></expr></argument>, <argument><expr><name pos:line="4" pos:column="52">NULL<pos:position pos:line="4" pos:column="56"/></name></expr></argument>, <argument><expr><name pos:line="4" pos:column="58">APR_HOOK_MIDDLE<pos:position pos:line="4" pos:column="73"/></name></expr></argument>)<pos:position pos:line="4" pos:column="74"/></argument_list></call></expr>;<pos:position pos:line="4" pos:column="75"/></expr_stmt>

    <expr_stmt><expr><name pos:line="6" pos:column="5">is_header_regex_regex<pos:position pos:line="6" pos:column="26"/></name> <operator pos:line="6" pos:column="27">=<pos:position pos:line="6" pos:column="28"/></operator> <call><name pos:line="6" pos:column="29">ap_pregcomp<pos:position pos:line="6" pos:column="40"/></name><argument_list pos:line="6" pos:column="40">(<argument><expr><name pos:line="6" pos:column="41">p<pos:position pos:line="6" pos:column="42"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="6" pos:column="44">"^[-A-Za-z0-9_]*$"<pos:position pos:line="6" pos:column="62"/></literal></expr></argument>,
                                        <argument><expr><operator pos:line="7" pos:column="41">(<pos:position pos:line="7" pos:column="42"/></operator><name pos:line="7" pos:column="42">AP_REG_EXTENDED<pos:position pos:line="7" pos:column="57"/></name> <operator pos:line="7" pos:column="58">|<pos:position pos:line="7" pos:column="59"/></operator> <name pos:line="7" pos:column="60">AP_REG_NOSUB<pos:position pos:line="7" pos:column="72"/></name> <operator pos:line="7" pos:column="73">)<pos:position pos:line="7" pos:column="74"/></operator></expr></argument>)<pos:position pos:line="7" pos:column="75"/></argument_list></call></expr>;<pos:position pos:line="7" pos:column="76"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="8" pos:column="5">ap_assert<pos:position pos:line="8" pos:column="14"/></name><argument_list pos:line="8" pos:column="14">(<argument><expr><name pos:line="8" pos:column="15">is_header_regex_regex<pos:position pos:line="8" pos:column="36"/></name> <operator pos:line="8" pos:column="37">!=<pos:position pos:line="8" pos:column="39"/></operator> <name pos:line="8" pos:column="40">NULL<pos:position pos:line="8" pos:column="44"/></name></expr></argument>)<pos:position pos:line="8" pos:column="45"/></argument_list></call></expr>;<pos:position pos:line="8" pos:column="46"/></expr_stmt>
}<pos:position pos:line="9" pos:column="2"/></block></function></unit>

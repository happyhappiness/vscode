<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/httpd/gumtree/httpd_repos_function_2_httpd-2.2.17.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">int<pos:position pos:line="1" pos:column="4"/></name></type> <name pos:line="1" pos:column="5">main<pos:position pos:line="1" pos:column="9"/></name><parameter_list pos:line="1" pos:column="9">(<parameter><decl><type><name pos:line="1" pos:column="10">int<pos:position pos:line="1" pos:column="13"/></name></type> <name pos:line="1" pos:column="14">argc<pos:position pos:line="1" pos:column="18"/></name></decl></parameter>, <parameter><decl><type><name pos:line="1" pos:column="20">char<pos:position pos:line="1" pos:column="24"/></name> <modifier pos:line="1" pos:column="25">*<pos:position pos:line="1" pos:column="26"/></modifier><modifier pos:line="1" pos:column="26">*<pos:position pos:line="1" pos:column="27"/></modifier></type><name pos:line="1" pos:column="27">argv<pos:position pos:line="1" pos:column="31"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="32"/></parameter_list>
<block pos:line="2" pos:column="1">{
    <decl_stmt><decl><type><name pos:line="3" pos:column="5">int<pos:position pos:line="3" pos:column="8"/></name></type> <name pos:line="3" pos:column="9">i<pos:position pos:line="3" pos:column="10"/></name></decl>, <decl><type ref="prev"/><name pos:line="3" pos:column="12">ver<pos:position pos:line="3" pos:column="15"/></name></decl>;<pos:position pos:line="3" pos:column="16"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="4" pos:column="5">DIR<pos:position pos:line="4" pos:column="8"/></name> <modifier pos:line="4" pos:column="9">*<pos:position pos:line="4" pos:column="10"/></modifier></type><name pos:line="4" pos:column="10">d<pos:position pos:line="4" pos:column="11"/></name></decl>;<pos:position pos:line="4" pos:column="12"/></decl_stmt>
    <decl_stmt><decl><type><name><name pos:line="5" pos:column="5">struct<pos:position pos:line="5" pos:column="11"/></name> <name pos:line="5" pos:column="12">dirent<pos:position pos:line="5" pos:column="18"/></name></name> <modifier pos:line="5" pos:column="19">*<pos:position pos:line="5" pos:column="20"/></modifier></type><name pos:line="5" pos:column="20">e<pos:position pos:line="5" pos:column="21"/></name></decl>;<pos:position pos:line="5" pos:column="22"/></decl_stmt>
    <decl_stmt><decl><type><specifier pos:line="6" pos:column="5">const<pos:position pos:line="6" pos:column="10"/></specifier> <name pos:line="6" pos:column="11">char<pos:position pos:line="6" pos:column="15"/></name> <modifier pos:line="6" pos:column="16">*<pos:position pos:line="6" pos:column="17"/></modifier></type><name pos:line="6" pos:column="17">s<pos:position pos:line="6" pos:column="18"/></name></decl>;<pos:position pos:line="6" pos:column="19"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="7" pos:column="5">FILE<pos:position pos:line="7" pos:column="9"/></name> <modifier pos:line="7" pos:column="10">*<pos:position pos:line="7" pos:column="11"/></modifier></type><name pos:line="7" pos:column="11">fp<pos:position pos:line="7" pos:column="13"/></name></decl>;<pos:position pos:line="7" pos:column="14"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="8" pos:column="5">char<pos:position pos:line="8" pos:column="9"/></name></type> <name><name pos:line="8" pos:column="10">path<pos:position pos:line="8" pos:column="14"/></name><index pos:line="8" pos:column="14">[<expr><name pos:line="8" pos:column="15">FILENAME_MAX<pos:position pos:line="8" pos:column="27"/></name> <operator pos:line="8" pos:column="28">+<pos:position pos:line="8" pos:column="29"/></operator> <literal type="number" pos:line="8" pos:column="30">1<pos:position pos:line="8" pos:column="31"/></literal></expr>]<pos:position pos:line="8" pos:column="32"/></index></name></decl>;<pos:position pos:line="8" pos:column="33"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="9" pos:column="5">char<pos:position pos:line="9" pos:column="9"/></name></type> <name><name pos:line="9" pos:column="10">line<pos:position pos:line="9" pos:column="14"/></name><index pos:line="9" pos:column="14">[<expr><literal type="number" pos:line="9" pos:column="15">1035<pos:position pos:line="9" pos:column="19"/></literal></expr>]<pos:position pos:line="9" pos:column="20"/></index></name></decl>;<pos:position pos:line="9" pos:column="21"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="10" pos:column="5">time_t<pos:position pos:line="10" pos:column="11"/></name></type> <name pos:line="10" pos:column="12">date<pos:position pos:line="10" pos:column="16"/></name></decl>, <decl><type ref="prev"/><name pos:line="10" pos:column="18">lmod<pos:position pos:line="10" pos:column="22"/></name></decl>, <decl><type ref="prev"/><name pos:line="10" pos:column="24">expire<pos:position pos:line="10" pos:column="30"/></name></decl>;<pos:position pos:line="10" pos:column="31"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="11" pos:column="5">unsigned<pos:position pos:line="11" pos:column="13"/></name> <name pos:line="11" pos:column="14">int<pos:position pos:line="11" pos:column="17"/></name></type> <name pos:line="11" pos:column="18">len<pos:position pos:line="11" pos:column="21"/></name></decl>;<pos:position pos:line="11" pos:column="22"/></decl_stmt>
    <decl_stmt><decl><type><name><name pos:line="12" pos:column="5">struct<pos:position pos:line="12" pos:column="11"/></name> <name pos:line="12" pos:column="12">tm<pos:position pos:line="12" pos:column="14"/></name></name></type> <name pos:line="12" pos:column="15">ts<pos:position pos:line="12" pos:column="17"/></name></decl>;<pos:position pos:line="12" pos:column="18"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="13" pos:column="5">char<pos:position pos:line="13" pos:column="9"/></name></type> <name><name pos:line="13" pos:column="10">sdate<pos:position pos:line="13" pos:column="15"/></name><index pos:line="13" pos:column="15">[<expr><literal type="number" pos:line="13" pos:column="16">30<pos:position pos:line="13" pos:column="18"/></literal></expr>]<pos:position pos:line="13" pos:column="19"/></index></name></decl>, <decl><type ref="prev"/><name><name pos:line="13" pos:column="21">slmod<pos:position pos:line="13" pos:column="26"/></name><index pos:line="13" pos:column="26">[<expr><literal type="number" pos:line="13" pos:column="27">30<pos:position pos:line="13" pos:column="29"/></literal></expr>]<pos:position pos:line="13" pos:column="30"/></index></name></decl>, <decl><type ref="prev"/><name><name pos:line="13" pos:column="32">sexpire<pos:position pos:line="13" pos:column="39"/></name><index pos:line="13" pos:column="39">[<expr><literal type="number" pos:line="13" pos:column="40">30<pos:position pos:line="13" pos:column="42"/></literal></expr>]<pos:position pos:line="13" pos:column="43"/></index></name></decl>;<pos:position pos:line="13" pos:column="44"/></decl_stmt>
    <decl_stmt><decl><type><specifier pos:line="14" pos:column="5">const<pos:position pos:line="14" pos:column="10"/></specifier> <name pos:line="14" pos:column="11">char<pos:position pos:line="14" pos:column="15"/></name></type> <name><name pos:line="14" pos:column="16">time_format<pos:position pos:line="14" pos:column="27"/></name><index pos:line="14" pos:column="27">[]<pos:position pos:line="14" pos:column="29"/></index></name> <init pos:line="14" pos:column="30">= <expr><literal type="string" pos:line="14" pos:column="32">"%e %b %Y %R"<pos:position pos:line="14" pos:column="45"/></literal></expr></init></decl>;<pos:position pos:line="14" pos:column="46"/></decl_stmt>

    <if pos:line="16" pos:column="5">if <condition pos:line="16" pos:column="8">(<expr><name pos:line="16" pos:column="9">argc<pos:position pos:line="16" pos:column="13"/></name> <operator pos:line="16" pos:column="14">!=<pos:position pos:line="16" pos:column="16"/></operator> <literal type="number" pos:line="16" pos:column="17">2<pos:position pos:line="16" pos:column="18"/></literal></expr>)<pos:position pos:line="16" pos:column="19"/></condition><then pos:line="16" pos:column="19"> <block pos:line="16" pos:column="20">{
        <expr_stmt><expr><call><name pos:line="17" pos:column="9">printf<pos:position pos:line="17" pos:column="15"/></name><argument_list pos:line="17" pos:column="15">(<argument><expr><literal type="string" pos:line="17" pos:column="16">"Usage: cls directory\n"<pos:position pos:line="17" pos:column="40"/></literal></expr></argument>)<pos:position pos:line="17" pos:column="41"/></argument_list></call></expr>;<pos:position pos:line="17" pos:column="42"/></expr_stmt>
        <expr_stmt><expr><call><name pos:line="18" pos:column="9">exit<pos:position pos:line="18" pos:column="13"/></name><argument_list pos:line="18" pos:column="13">(<argument><expr><literal type="number" pos:line="18" pos:column="14">0<pos:position pos:line="18" pos:column="15"/></literal></expr></argument>)<pos:position pos:line="18" pos:column="16"/></argument_list></call></expr>;<pos:position pos:line="18" pos:column="17"/></expr_stmt>
    }<pos:position pos:line="19" pos:column="6"/></block></then></if>

    <expr_stmt><expr><name pos:line="21" pos:column="5">d<pos:position pos:line="21" pos:column="6"/></name> <operator pos:line="21" pos:column="7">=<pos:position pos:line="21" pos:column="8"/></operator> <call><name pos:line="21" pos:column="9">opendir<pos:position pos:line="21" pos:column="16"/></name><argument_list pos:line="21" pos:column="16">(<argument><expr><name><name pos:line="21" pos:column="17">argv<pos:position pos:line="21" pos:column="21"/></name><index pos:line="21" pos:column="21">[<expr><literal type="number" pos:line="21" pos:column="22">1<pos:position pos:line="21" pos:column="23"/></literal></expr>]<pos:position pos:line="21" pos:column="24"/></index></name></expr></argument>)<pos:position pos:line="21" pos:column="25"/></argument_list></call></expr>;<pos:position pos:line="21" pos:column="26"/></expr_stmt>
    <if pos:line="22" pos:column="5">if <condition pos:line="22" pos:column="8">(<expr><name pos:line="22" pos:column="9">d<pos:position pos:line="22" pos:column="10"/></name> <operator pos:line="22" pos:column="11">==<pos:position pos:line="22" pos:column="13"/></operator> <name pos:line="22" pos:column="14">NULL<pos:position pos:line="22" pos:column="18"/></name></expr>)<pos:position pos:line="22" pos:column="19"/></condition><then pos:line="22" pos:column="19"> <block pos:line="22" pos:column="20">{
        <expr_stmt><expr><call><name pos:line="23" pos:column="9">perror<pos:position pos:line="23" pos:column="15"/></name><argument_list pos:line="23" pos:column="15">(<argument><expr><literal type="string" pos:line="23" pos:column="16">"opendir"<pos:position pos:line="23" pos:column="25"/></literal></expr></argument>)<pos:position pos:line="23" pos:column="26"/></argument_list></call></expr>;<pos:position pos:line="23" pos:column="27"/></expr_stmt>
        <expr_stmt><expr><call><name pos:line="24" pos:column="9">exit<pos:position pos:line="24" pos:column="13"/></name><argument_list pos:line="24" pos:column="13">(<argument><expr><literal type="number" pos:line="24" pos:column="14">1<pos:position pos:line="24" pos:column="15"/></literal></expr></argument>)<pos:position pos:line="24" pos:column="16"/></argument_list></call></expr>;<pos:position pos:line="24" pos:column="17"/></expr_stmt>
    }<pos:position pos:line="25" pos:column="6"/></block></then></if>

    <for pos:line="27" pos:column="5">for <control pos:line="27" pos:column="9">(<init pos:line="27" pos:column="10">;<pos:position pos:line="27" pos:column="11"/></init><condition pos:line="27" pos:column="11">;<pos:position pos:line="27" pos:column="12"/></condition><incr/>)<pos:position pos:line="27" pos:column="13"/></control> <block pos:line="27" pos:column="14">{
        <expr_stmt><expr><name pos:line="28" pos:column="9">e<pos:position pos:line="28" pos:column="10"/></name> <operator pos:line="28" pos:column="11">=<pos:position pos:line="28" pos:column="12"/></operator> <call><name pos:line="28" pos:column="13">readdir<pos:position pos:line="28" pos:column="20"/></name><argument_list pos:line="28" pos:column="20">(<argument><expr><name pos:line="28" pos:column="21">d<pos:position pos:line="28" pos:column="22"/></name></expr></argument>)<pos:position pos:line="28" pos:column="23"/></argument_list></call></expr>;<pos:position pos:line="28" pos:column="24"/></expr_stmt>
        <if pos:line="29" pos:column="9">if <condition pos:line="29" pos:column="12">(<expr><name pos:line="29" pos:column="13">e<pos:position pos:line="29" pos:column="14"/></name> <operator pos:line="29" pos:column="15">==<pos:position pos:line="29" pos:column="17"/></operator> <name pos:line="29" pos:column="18">NULL<pos:position pos:line="29" pos:column="22"/></name></expr>)<pos:position pos:line="29" pos:column="23"/></condition><then pos:line="29" pos:column="23">
            <block type="pseudo"><break pos:line="30" pos:column="13">break;<pos:position pos:line="30" pos:column="19"/></break></block></then></if>
        <expr_stmt><expr><name pos:line="31" pos:column="9">s<pos:position pos:line="31" pos:column="10"/></name> <operator pos:line="31" pos:column="11">=<pos:position pos:line="31" pos:column="12"/></operator> <name><name pos:line="31" pos:column="13">e<pos:position pos:line="31" pos:column="14"/></name><operator pos:line="31" pos:column="14">-&gt;<pos:position pos:line="31" pos:column="19"/></operator><name pos:line="31" pos:column="16">d_name<pos:position pos:line="31" pos:column="22"/></name></name></expr>;<pos:position pos:line="31" pos:column="23"/></expr_stmt>
        <if pos:line="32" pos:column="9">if <condition pos:line="32" pos:column="12">(<expr><name><name pos:line="32" pos:column="13">s<pos:position pos:line="32" pos:column="14"/></name><index pos:line="32" pos:column="14">[<expr><literal type="number" pos:line="32" pos:column="15">0<pos:position pos:line="32" pos:column="16"/></literal></expr>]<pos:position pos:line="32" pos:column="17"/></index></name> <operator pos:line="32" pos:column="18">==<pos:position pos:line="32" pos:column="20"/></operator> <literal type="char" pos:line="32" pos:column="21">'.'<pos:position pos:line="32" pos:column="24"/></literal> <operator pos:line="32" pos:column="25">||<pos:position pos:line="32" pos:column="27"/></operator> <name><name pos:line="32" pos:column="28">s<pos:position pos:line="32" pos:column="29"/></name><index pos:line="32" pos:column="29">[<expr><literal type="number" pos:line="32" pos:column="30">0<pos:position pos:line="32" pos:column="31"/></literal></expr>]<pos:position pos:line="32" pos:column="32"/></index></name> <operator pos:line="32" pos:column="33">==<pos:position pos:line="32" pos:column="35"/></operator> <literal type="char" pos:line="32" pos:column="36">'#'<pos:position pos:line="32" pos:column="39"/></literal></expr>)<pos:position pos:line="32" pos:column="40"/></condition><then pos:line="32" pos:column="40">
            <block type="pseudo"><continue pos:line="33" pos:column="13">continue;<pos:position pos:line="33" pos:column="22"/></continue></block></then></if>
        <expr_stmt><expr><call><name pos:line="34" pos:column="9">sprintf<pos:position pos:line="34" pos:column="16"/></name><argument_list pos:line="34" pos:column="16">(<argument><expr><name pos:line="34" pos:column="17">path<pos:position pos:line="34" pos:column="21"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="34" pos:column="23">"%s/%s"<pos:position pos:line="34" pos:column="30"/></literal></expr></argument>, <argument><expr><name><name pos:line="34" pos:column="32">argv<pos:position pos:line="34" pos:column="36"/></name><index pos:line="34" pos:column="36">[<expr><literal type="number" pos:line="34" pos:column="37">1<pos:position pos:line="34" pos:column="38"/></literal></expr>]<pos:position pos:line="34" pos:column="39"/></index></name></expr></argument>, <argument><expr><name pos:line="34" pos:column="41">s<pos:position pos:line="34" pos:column="42"/></name></expr></argument>)<pos:position pos:line="34" pos:column="43"/></argument_list></call></expr>;<pos:position pos:line="34" pos:column="44"/></expr_stmt>
        <expr_stmt><expr><name pos:line="35" pos:column="9">fp<pos:position pos:line="35" pos:column="11"/></name> <operator pos:line="35" pos:column="12">=<pos:position pos:line="35" pos:column="13"/></operator> <call><name pos:line="35" pos:column="14">fopen<pos:position pos:line="35" pos:column="19"/></name><argument_list pos:line="35" pos:column="19">(<argument><expr><name pos:line="35" pos:column="20">path<pos:position pos:line="35" pos:column="24"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="35" pos:column="26">"r"<pos:position pos:line="35" pos:column="29"/></literal></expr></argument>)<pos:position pos:line="35" pos:column="30"/></argument_list></call></expr>;<pos:position pos:line="35" pos:column="31"/></expr_stmt>
        <if pos:line="36" pos:column="9">if <condition pos:line="36" pos:column="12">(<expr><name pos:line="36" pos:column="13">fp<pos:position pos:line="36" pos:column="15"/></name> <operator pos:line="36" pos:column="16">==<pos:position pos:line="36" pos:column="18"/></operator> <name pos:line="36" pos:column="19">NULL<pos:position pos:line="36" pos:column="23"/></name></expr>)<pos:position pos:line="36" pos:column="24"/></condition><then pos:line="36" pos:column="24"> <block pos:line="36" pos:column="25">{
            <expr_stmt><expr><call><name pos:line="37" pos:column="13">perror<pos:position pos:line="37" pos:column="19"/></name><argument_list pos:line="37" pos:column="19">(<argument><expr><literal type="string" pos:line="37" pos:column="20">"fopen"<pos:position pos:line="37" pos:column="27"/></literal></expr></argument>)<pos:position pos:line="37" pos:column="28"/></argument_list></call></expr>;<pos:position pos:line="37" pos:column="29"/></expr_stmt>
            <continue pos:line="38" pos:column="13">continue;<pos:position pos:line="38" pos:column="22"/></continue>
        }<pos:position pos:line="39" pos:column="10"/></block></then></if>
        <if pos:line="40" pos:column="9">if <condition pos:line="40" pos:column="12">(<expr><call><name pos:line="40" pos:column="13">fgets<pos:position pos:line="40" pos:column="18"/></name><argument_list pos:line="40" pos:column="18">(<argument><expr><name pos:line="40" pos:column="19">line<pos:position pos:line="40" pos:column="23"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="40" pos:column="25">1034<pos:position pos:line="40" pos:column="29"/></literal></expr></argument>, <argument><expr><name pos:line="40" pos:column="31">fp<pos:position pos:line="40" pos:column="33"/></name></expr></argument>)<pos:position pos:line="40" pos:column="34"/></argument_list></call> <operator pos:line="40" pos:column="35">==<pos:position pos:line="40" pos:column="37"/></operator> <name pos:line="40" pos:column="38">NULL<pos:position pos:line="40" pos:column="42"/></name></expr>)<pos:position pos:line="40" pos:column="43"/></condition><then pos:line="40" pos:column="43"> <block pos:line="40" pos:column="44">{
            <expr_stmt><expr><call><name pos:line="41" pos:column="13">perror<pos:position pos:line="41" pos:column="19"/></name><argument_list pos:line="41" pos:column="19">(<argument><expr><literal type="string" pos:line="41" pos:column="20">"fgets"<pos:position pos:line="41" pos:column="27"/></literal></expr></argument>)<pos:position pos:line="41" pos:column="28"/></argument_list></call></expr>;<pos:position pos:line="41" pos:column="29"/></expr_stmt>
            <expr_stmt><expr><call><name pos:line="42" pos:column="13">fclose<pos:position pos:line="42" pos:column="19"/></name><argument_list pos:line="42" pos:column="19">(<argument><expr><name pos:line="42" pos:column="20">fp<pos:position pos:line="42" pos:column="22"/></name></expr></argument>)<pos:position pos:line="42" pos:column="23"/></argument_list></call></expr>;<pos:position pos:line="42" pos:column="24"/></expr_stmt>
            <continue pos:line="43" pos:column="13">continue;<pos:position pos:line="43" pos:column="22"/></continue>
        }<pos:position pos:line="44" pos:column="10"/></block></then></if>
        <if pos:line="45" pos:column="9">if <condition pos:line="45" pos:column="12">(<expr><operator pos:line="45" pos:column="13">!<pos:position pos:line="45" pos:column="14"/></operator><call><name pos:line="45" pos:column="14">checkmask<pos:position pos:line="45" pos:column="23"/></name><argument_list pos:line="45" pos:column="23">(<argument><expr><name pos:line="45" pos:column="24">line<pos:position pos:line="45" pos:column="28"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="45" pos:column="30">"&amp;&amp;&amp;&amp;&amp;&amp;&amp;&amp; &amp;&amp;&amp;&amp;&amp;&amp;&amp;&amp; &amp;&amp;&amp;&amp;&amp;&amp;&amp;&amp; &amp;&amp;&amp;&amp;&amp;&amp;&amp;&amp; &amp;&amp;&amp;&amp;&amp;&amp;&amp;&amp;\n"<pos:position pos:line="45" pos:column="238"/></literal></expr></argument>)<pos:position pos:line="45" pos:column="79"/></argument_list></call></expr>)<pos:position pos:line="45" pos:column="80"/></condition><then pos:line="45" pos:column="80"> <block pos:line="45" pos:column="81">{
            <expr_stmt><expr><call><name pos:line="46" pos:column="13">fprintf<pos:position pos:line="46" pos:column="20"/></name><argument_list pos:line="46" pos:column="20">(<argument><expr><name pos:line="46" pos:column="21">stderr<pos:position pos:line="46" pos:column="27"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="46" pos:column="29">"Bad cache file\n"<pos:position pos:line="46" pos:column="47"/></literal></expr></argument>)<pos:position pos:line="46" pos:column="48"/></argument_list></call></expr>;<pos:position pos:line="46" pos:column="49"/></expr_stmt>
            <expr_stmt><expr><call><name pos:line="47" pos:column="13">fclose<pos:position pos:line="47" pos:column="19"/></name><argument_list pos:line="47" pos:column="19">(<argument><expr><name pos:line="47" pos:column="20">fp<pos:position pos:line="47" pos:column="22"/></name></expr></argument>)<pos:position pos:line="47" pos:column="23"/></argument_list></call></expr>;<pos:position pos:line="47" pos:column="24"/></expr_stmt>
            <continue pos:line="48" pos:column="13">continue;<pos:position pos:line="48" pos:column="22"/></continue>
        }<pos:position pos:line="49" pos:column="10"/></block></then></if>
        <expr_stmt><expr><name pos:line="50" pos:column="9">date<pos:position pos:line="50" pos:column="13"/></name> <operator pos:line="50" pos:column="14">=<pos:position pos:line="50" pos:column="15"/></operator> <call><name pos:line="50" pos:column="16">hex2sec<pos:position pos:line="50" pos:column="23"/></name><argument_list pos:line="50" pos:column="23">(<argument><expr><name pos:line="50" pos:column="24">line<pos:position pos:line="50" pos:column="28"/></name></expr></argument>)<pos:position pos:line="50" pos:column="29"/></argument_list></call></expr>;<pos:position pos:line="50" pos:column="30"/></expr_stmt>
        <expr_stmt><expr><name pos:line="51" pos:column="9">lmod<pos:position pos:line="51" pos:column="13"/></name> <operator pos:line="51" pos:column="14">=<pos:position pos:line="51" pos:column="15"/></operator> <call><name pos:line="51" pos:column="16">hex2sec<pos:position pos:line="51" pos:column="23"/></name><argument_list pos:line="51" pos:column="23">(<argument><expr><name pos:line="51" pos:column="24">line<pos:position pos:line="51" pos:column="28"/></name> <operator pos:line="51" pos:column="29">+<pos:position pos:line="51" pos:column="30"/></operator> <literal type="number" pos:line="51" pos:column="31">9<pos:position pos:line="51" pos:column="32"/></literal></expr></argument>)<pos:position pos:line="51" pos:column="33"/></argument_list></call></expr>;<pos:position pos:line="51" pos:column="34"/></expr_stmt>
        <expr_stmt><expr><name pos:line="52" pos:column="9">expire<pos:position pos:line="52" pos:column="15"/></name> <operator pos:line="52" pos:column="16">=<pos:position pos:line="52" pos:column="17"/></operator> <call><name pos:line="52" pos:column="18">hex2sec<pos:position pos:line="52" pos:column="25"/></name><argument_list pos:line="52" pos:column="25">(<argument><expr><name pos:line="52" pos:column="26">line<pos:position pos:line="52" pos:column="30"/></name> <operator pos:line="52" pos:column="31">+<pos:position pos:line="52" pos:column="32"/></operator> <literal type="number" pos:line="52" pos:column="33">18<pos:position pos:line="52" pos:column="35"/></literal></expr></argument>)<pos:position pos:line="52" pos:column="36"/></argument_list></call></expr>;<pos:position pos:line="52" pos:column="37"/></expr_stmt>
        <expr_stmt><expr><name pos:line="53" pos:column="9">ver<pos:position pos:line="53" pos:column="12"/></name> <operator pos:line="53" pos:column="13">=<pos:position pos:line="53" pos:column="14"/></operator> <call><name pos:line="53" pos:column="15">hex2sec<pos:position pos:line="53" pos:column="22"/></name><argument_list pos:line="53" pos:column="22">(<argument><expr><name pos:line="53" pos:column="23">line<pos:position pos:line="53" pos:column="27"/></name> <operator pos:line="53" pos:column="28">+<pos:position pos:line="53" pos:column="29"/></operator> <literal type="number" pos:line="53" pos:column="30">27<pos:position pos:line="53" pos:column="32"/></literal></expr></argument>)<pos:position pos:line="53" pos:column="33"/></argument_list></call></expr>;<pos:position pos:line="53" pos:column="34"/></expr_stmt>
        <expr_stmt><expr><name pos:line="54" pos:column="9">len<pos:position pos:line="54" pos:column="12"/></name> <operator pos:line="54" pos:column="13">=<pos:position pos:line="54" pos:column="14"/></operator> <call><name pos:line="54" pos:column="15">hex2sec<pos:position pos:line="54" pos:column="22"/></name><argument_list pos:line="54" pos:column="22">(<argument><expr><name pos:line="54" pos:column="23">line<pos:position pos:line="54" pos:column="27"/></name> <operator pos:line="54" pos:column="28">+<pos:position pos:line="54" pos:column="29"/></operator> <literal type="number" pos:line="54" pos:column="30">35<pos:position pos:line="54" pos:column="32"/></literal></expr></argument>)<pos:position pos:line="54" pos:column="33"/></argument_list></call></expr>;<pos:position pos:line="54" pos:column="34"/></expr_stmt>
        <if pos:line="55" pos:column="9">if <condition pos:line="55" pos:column="12">(<expr><call><name pos:line="55" pos:column="13">fgets<pos:position pos:line="55" pos:column="18"/></name><argument_list pos:line="55" pos:column="18">(<argument><expr><name pos:line="55" pos:column="19">line<pos:position pos:line="55" pos:column="23"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="55" pos:column="25">1034<pos:position pos:line="55" pos:column="29"/></literal></expr></argument>, <argument><expr><name pos:line="55" pos:column="31">fp<pos:position pos:line="55" pos:column="33"/></name></expr></argument>)<pos:position pos:line="55" pos:column="34"/></argument_list></call> <operator pos:line="55" pos:column="35">==<pos:position pos:line="55" pos:column="37"/></operator> <name pos:line="55" pos:column="38">NULL<pos:position pos:line="55" pos:column="42"/></name></expr>)<pos:position pos:line="55" pos:column="43"/></condition><then pos:line="55" pos:column="43"> <block pos:line="55" pos:column="44">{
            <expr_stmt><expr><call><name pos:line="56" pos:column="13">perror<pos:position pos:line="56" pos:column="19"/></name><argument_list pos:line="56" pos:column="19">(<argument><expr><literal type="string" pos:line="56" pos:column="20">"fgets"<pos:position pos:line="56" pos:column="27"/></literal></expr></argument>)<pos:position pos:line="56" pos:column="28"/></argument_list></call></expr>;<pos:position pos:line="56" pos:column="29"/></expr_stmt>
            <expr_stmt><expr><call><name pos:line="57" pos:column="13">fclose<pos:position pos:line="57" pos:column="19"/></name><argument_list pos:line="57" pos:column="19">(<argument><expr><name pos:line="57" pos:column="20">fp<pos:position pos:line="57" pos:column="22"/></name></expr></argument>)<pos:position pos:line="57" pos:column="23"/></argument_list></call></expr>;<pos:position pos:line="57" pos:column="24"/></expr_stmt>
            <continue pos:line="58" pos:column="13">continue;<pos:position pos:line="58" pos:column="22"/></continue>
        }<pos:position pos:line="59" pos:column="10"/></block></then></if>
        <expr_stmt><expr><call><name pos:line="60" pos:column="9">fclose<pos:position pos:line="60" pos:column="15"/></name><argument_list pos:line="60" pos:column="15">(<argument><expr><name pos:line="60" pos:column="16">fp<pos:position pos:line="60" pos:column="18"/></name></expr></argument>)<pos:position pos:line="60" pos:column="19"/></argument_list></call></expr>;<pos:position pos:line="60" pos:column="20"/></expr_stmt>
        <expr_stmt><expr><name pos:line="61" pos:column="9">i<pos:position pos:line="61" pos:column="10"/></name> <operator pos:line="61" pos:column="11">=<pos:position pos:line="61" pos:column="12"/></operator> <call><name pos:line="61" pos:column="13">strlen<pos:position pos:line="61" pos:column="19"/></name><argument_list pos:line="61" pos:column="19">(<argument><expr><name pos:line="61" pos:column="20">line<pos:position pos:line="61" pos:column="24"/></name></expr></argument>)<pos:position pos:line="61" pos:column="25"/></argument_list></call></expr>;<pos:position pos:line="61" pos:column="26"/></expr_stmt>
        <if pos:line="62" pos:column="9">if <condition pos:line="62" pos:column="12">(<expr><call><name pos:line="62" pos:column="13">strncmp<pos:position pos:line="62" pos:column="20"/></name><argument_list pos:line="62" pos:column="20">(<argument><expr><name pos:line="62" pos:column="21">line<pos:position pos:line="62" pos:column="25"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="62" pos:column="27">"X-URL: "<pos:position pos:line="62" pos:column="36"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="62" pos:column="38">7<pos:position pos:line="62" pos:column="39"/></literal></expr></argument>)<pos:position pos:line="62" pos:column="40"/></argument_list></call> <operator pos:line="62" pos:column="41">!=<pos:position pos:line="62" pos:column="43"/></operator> <literal type="number" pos:line="62" pos:column="44">0<pos:position pos:line="62" pos:column="45"/></literal> <operator pos:line="62" pos:column="46">||<pos:position pos:line="62" pos:column="48"/></operator> <name><name pos:line="62" pos:column="49">line<pos:position pos:line="62" pos:column="53"/></name><index pos:line="62" pos:column="53">[<expr><name pos:line="62" pos:column="54">i<pos:position pos:line="62" pos:column="55"/></name> <operator pos:line="62" pos:column="56">-<pos:position pos:line="62" pos:column="57"/></operator> <literal type="number" pos:line="62" pos:column="58">1<pos:position pos:line="62" pos:column="59"/></literal></expr>]<pos:position pos:line="62" pos:column="60"/></index></name> <operator pos:line="62" pos:column="61">!=<pos:position pos:line="62" pos:column="63"/></operator> <literal type="char" pos:line="62" pos:column="64">'\n'<pos:position pos:line="62" pos:column="68"/></literal></expr>)<pos:position pos:line="62" pos:column="69"/></condition><then pos:line="62" pos:column="69"> <block pos:line="62" pos:column="70">{
            <expr_stmt><expr><call><name pos:line="63" pos:column="13">fprintf<pos:position pos:line="63" pos:column="20"/></name><argument_list pos:line="63" pos:column="20">(<argument><expr><name pos:line="63" pos:column="21">stderr<pos:position pos:line="63" pos:column="27"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="63" pos:column="29">"Bad cache file\n"<pos:position pos:line="63" pos:column="47"/></literal></expr></argument>)<pos:position pos:line="63" pos:column="48"/></argument_list></call></expr>;<pos:position pos:line="63" pos:column="49"/></expr_stmt>
            <continue pos:line="64" pos:column="13">continue;<pos:position pos:line="64" pos:column="22"/></continue>
        }<pos:position pos:line="65" pos:column="10"/></block></then></if>
        <expr_stmt><expr><name><name pos:line="66" pos:column="9">line<pos:position pos:line="66" pos:column="13"/></name><index pos:line="66" pos:column="13">[<expr><name pos:line="66" pos:column="14">i<pos:position pos:line="66" pos:column="15"/></name> <operator pos:line="66" pos:column="16">-<pos:position pos:line="66" pos:column="17"/></operator> <literal type="number" pos:line="66" pos:column="18">1<pos:position pos:line="66" pos:column="19"/></literal></expr>]<pos:position pos:line="66" pos:column="20"/></index></name> <operator pos:line="66" pos:column="21">=<pos:position pos:line="66" pos:column="22"/></operator> <literal type="char" pos:line="66" pos:column="23">'\0'<pos:position pos:line="66" pos:column="27"/></literal></expr>;<pos:position pos:line="66" pos:column="28"/></expr_stmt>
        <if pos:line="67" pos:column="9">if <condition pos:line="67" pos:column="12">(<expr><name pos:line="67" pos:column="13">date<pos:position pos:line="67" pos:column="17"/></name> <operator pos:line="67" pos:column="18">!=<pos:position pos:line="67" pos:column="20"/></operator> <operator pos:line="67" pos:column="21">-<pos:position pos:line="67" pos:column="22"/></operator><literal type="number" pos:line="67" pos:column="22">1<pos:position pos:line="67" pos:column="23"/></literal></expr>)<pos:position pos:line="67" pos:column="24"/></condition><then pos:line="67" pos:column="24"> <block pos:line="67" pos:column="25">{
            <expr_stmt><expr><name pos:line="68" pos:column="13">ts<pos:position pos:line="68" pos:column="15"/></name> <operator pos:line="68" pos:column="16">=<pos:position pos:line="68" pos:column="17"/></operator> <operator pos:line="68" pos:column="18">*<pos:position pos:line="68" pos:column="19"/></operator><call><name pos:line="68" pos:column="19">gmtime<pos:position pos:line="68" pos:column="25"/></name><argument_list pos:line="68" pos:column="25">(<argument><expr><operator pos:line="68" pos:column="26">&amp;<pos:position pos:line="68" pos:column="31"/></operator><name pos:line="68" pos:column="27">date<pos:position pos:line="68" pos:column="31"/></name></expr></argument>)<pos:position pos:line="68" pos:column="32"/></argument_list></call></expr>;<pos:position pos:line="68" pos:column="33"/></expr_stmt>
            <expr_stmt><expr><call><name pos:line="69" pos:column="13">strftime<pos:position pos:line="69" pos:column="21"/></name><argument_list pos:line="69" pos:column="21">(<argument><expr><name pos:line="69" pos:column="22">sdate<pos:position pos:line="69" pos:column="27"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="69" pos:column="29">30<pos:position pos:line="69" pos:column="31"/></literal></expr></argument>, <argument><expr><name pos:line="69" pos:column="33">time_format<pos:position pos:line="69" pos:column="44"/></name></expr></argument>, <argument><expr><operator pos:line="69" pos:column="46">&amp;<pos:position pos:line="69" pos:column="51"/></operator><name pos:line="69" pos:column="47">ts<pos:position pos:line="69" pos:column="49"/></name></expr></argument>)<pos:position pos:line="69" pos:column="50"/></argument_list></call></expr>;<pos:position pos:line="69" pos:column="51"/></expr_stmt>
        }<pos:position pos:line="70" pos:column="10"/></block></then>
        <else pos:line="71" pos:column="9">else
            <block type="pseudo"><expr_stmt><expr><call><name pos:line="72" pos:column="13">strcpy<pos:position pos:line="72" pos:column="19"/></name><argument_list pos:line="72" pos:column="19">(<argument><expr><name pos:line="72" pos:column="20">sdate<pos:position pos:line="72" pos:column="25"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="72" pos:column="27">"-"<pos:position pos:line="72" pos:column="30"/></literal></expr></argument>)<pos:position pos:line="72" pos:column="31"/></argument_list></call></expr>;<pos:position pos:line="72" pos:column="32"/></expr_stmt></block></else></if>

        <if pos:line="74" pos:column="9">if <condition pos:line="74" pos:column="12">(<expr><name pos:line="74" pos:column="13">lmod<pos:position pos:line="74" pos:column="17"/></name> <operator pos:line="74" pos:column="18">!=<pos:position pos:line="74" pos:column="20"/></operator> <operator pos:line="74" pos:column="21">-<pos:position pos:line="74" pos:column="22"/></operator><literal type="number" pos:line="74" pos:column="22">1<pos:position pos:line="74" pos:column="23"/></literal></expr>)<pos:position pos:line="74" pos:column="24"/></condition><then pos:line="74" pos:column="24"> <block pos:line="74" pos:column="25">{
            <expr_stmt><expr><name pos:line="75" pos:column="13">ts<pos:position pos:line="75" pos:column="15"/></name> <operator pos:line="75" pos:column="16">=<pos:position pos:line="75" pos:column="17"/></operator> <operator pos:line="75" pos:column="18">*<pos:position pos:line="75" pos:column="19"/></operator><call><name pos:line="75" pos:column="19">gmtime<pos:position pos:line="75" pos:column="25"/></name><argument_list pos:line="75" pos:column="25">(<argument><expr><operator pos:line="75" pos:column="26">&amp;<pos:position pos:line="75" pos:column="31"/></operator><name pos:line="75" pos:column="27">lmod<pos:position pos:line="75" pos:column="31"/></name></expr></argument>)<pos:position pos:line="75" pos:column="32"/></argument_list></call></expr>;<pos:position pos:line="75" pos:column="33"/></expr_stmt>
            <expr_stmt><expr><call><name pos:line="76" pos:column="13">strftime<pos:position pos:line="76" pos:column="21"/></name><argument_list pos:line="76" pos:column="21">(<argument><expr><name pos:line="76" pos:column="22">slmod<pos:position pos:line="76" pos:column="27"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="76" pos:column="29">30<pos:position pos:line="76" pos:column="31"/></literal></expr></argument>, <argument><expr><name pos:line="76" pos:column="33">time_format<pos:position pos:line="76" pos:column="44"/></name></expr></argument>, <argument><expr><operator pos:line="76" pos:column="46">&amp;<pos:position pos:line="76" pos:column="51"/></operator><name pos:line="76" pos:column="47">ts<pos:position pos:line="76" pos:column="49"/></name></expr></argument>)<pos:position pos:line="76" pos:column="50"/></argument_list></call></expr>;<pos:position pos:line="76" pos:column="51"/></expr_stmt>
        }<pos:position pos:line="77" pos:column="10"/></block></then>
        <else pos:line="78" pos:column="9">else
            <block type="pseudo"><expr_stmt><expr><call><name pos:line="79" pos:column="13">strcpy<pos:position pos:line="79" pos:column="19"/></name><argument_list pos:line="79" pos:column="19">(<argument><expr><name pos:line="79" pos:column="20">slmod<pos:position pos:line="79" pos:column="25"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="79" pos:column="27">"-"<pos:position pos:line="79" pos:column="30"/></literal></expr></argument>)<pos:position pos:line="79" pos:column="31"/></argument_list></call></expr>;<pos:position pos:line="79" pos:column="32"/></expr_stmt></block></else></if>

        <if pos:line="81" pos:column="9">if <condition pos:line="81" pos:column="12">(<expr><name pos:line="81" pos:column="13">expire<pos:position pos:line="81" pos:column="19"/></name> <operator pos:line="81" pos:column="20">!=<pos:position pos:line="81" pos:column="22"/></operator> <operator pos:line="81" pos:column="23">-<pos:position pos:line="81" pos:column="24"/></operator><literal type="number" pos:line="81" pos:column="24">1<pos:position pos:line="81" pos:column="25"/></literal></expr>)<pos:position pos:line="81" pos:column="26"/></condition><then pos:line="81" pos:column="26"> <block pos:line="81" pos:column="27">{
            <expr_stmt><expr><name pos:line="82" pos:column="13">ts<pos:position pos:line="82" pos:column="15"/></name> <operator pos:line="82" pos:column="16">=<pos:position pos:line="82" pos:column="17"/></operator> <operator pos:line="82" pos:column="18">*<pos:position pos:line="82" pos:column="19"/></operator><call><name pos:line="82" pos:column="19">gmtime<pos:position pos:line="82" pos:column="25"/></name><argument_list pos:line="82" pos:column="25">(<argument><expr><operator pos:line="82" pos:column="26">&amp;<pos:position pos:line="82" pos:column="31"/></operator><name pos:line="82" pos:column="27">expire<pos:position pos:line="82" pos:column="33"/></name></expr></argument>)<pos:position pos:line="82" pos:column="34"/></argument_list></call></expr>;<pos:position pos:line="82" pos:column="35"/></expr_stmt>
            <expr_stmt><expr><call><name pos:line="83" pos:column="13">strftime<pos:position pos:line="83" pos:column="21"/></name><argument_list pos:line="83" pos:column="21">(<argument><expr><name pos:line="83" pos:column="22">sexpire<pos:position pos:line="83" pos:column="29"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="83" pos:column="31">30<pos:position pos:line="83" pos:column="33"/></literal></expr></argument>, <argument><expr><name pos:line="83" pos:column="35">time_format<pos:position pos:line="83" pos:column="46"/></name></expr></argument>, <argument><expr><operator pos:line="83" pos:column="48">&amp;<pos:position pos:line="83" pos:column="53"/></operator><name pos:line="83" pos:column="49">ts<pos:position pos:line="83" pos:column="51"/></name></expr></argument>)<pos:position pos:line="83" pos:column="52"/></argument_list></call></expr>;<pos:position pos:line="83" pos:column="53"/></expr_stmt>
        }<pos:position pos:line="84" pos:column="10"/></block></then>
        <else pos:line="85" pos:column="9">else
            <block type="pseudo"><expr_stmt><expr><call><name pos:line="86" pos:column="13">strcpy<pos:position pos:line="86" pos:column="19"/></name><argument_list pos:line="86" pos:column="19">(<argument><expr><name pos:line="86" pos:column="20">sexpire<pos:position pos:line="86" pos:column="27"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="86" pos:column="29">"-"<pos:position pos:line="86" pos:column="32"/></literal></expr></argument>)<pos:position pos:line="86" pos:column="33"/></argument_list></call></expr>;<pos:position pos:line="86" pos:column="34"/></expr_stmt></block></else></if>

        <expr_stmt><expr><call><name pos:line="88" pos:column="9">printf<pos:position pos:line="88" pos:column="15"/></name><argument_list pos:line="88" pos:column="15">(<argument><expr><literal type="string" pos:line="88" pos:column="16">"%s: %d; %s  %s  %s\n"<pos:position pos:line="88" pos:column="38"/></literal></expr></argument>, <argument><expr><name pos:line="88" pos:column="40">line<pos:position pos:line="88" pos:column="44"/></name> <operator pos:line="88" pos:column="45">+<pos:position pos:line="88" pos:column="46"/></operator> <literal type="number" pos:line="88" pos:column="47">7<pos:position pos:line="88" pos:column="48"/></literal></expr></argument>, <argument><expr><name pos:line="88" pos:column="50">ver<pos:position pos:line="88" pos:column="53"/></name></expr></argument>, <argument><expr><name pos:line="88" pos:column="55">sdate<pos:position pos:line="88" pos:column="60"/></name></expr></argument>, <argument><expr><name pos:line="88" pos:column="62">slmod<pos:position pos:line="88" pos:column="67"/></name></expr></argument>, <argument><expr><name pos:line="88" pos:column="69">sexpire<pos:position pos:line="88" pos:column="76"/></name></expr></argument>)<pos:position pos:line="88" pos:column="77"/></argument_list></call></expr>;<pos:position pos:line="88" pos:column="78"/></expr_stmt>
    }<pos:position pos:line="89" pos:column="6"/></block></for>

    <expr_stmt><expr><call><name pos:line="91" pos:column="5">closedir<pos:position pos:line="91" pos:column="13"/></name><argument_list pos:line="91" pos:column="13">(<argument><expr><name pos:line="91" pos:column="14">d<pos:position pos:line="91" pos:column="15"/></name></expr></argument>)<pos:position pos:line="91" pos:column="16"/></argument_list></call></expr>;<pos:position pos:line="91" pos:column="17"/></expr_stmt>
    <return pos:line="92" pos:column="5">return <expr><literal type="number" pos:line="92" pos:column="12">0<pos:position pos:line="92" pos:column="13"/></literal></expr>;<pos:position pos:line="92" pos:column="14"/></return>
}<pos:position pos:line="93" pos:column="2"/></block></function></unit>

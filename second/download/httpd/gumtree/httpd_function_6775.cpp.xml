<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/httpd/gumtree/httpd_function_6775.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">void<pos:position pos:line="1" pos:column="12"/></name></type> <name pos:line="1" pos:column="13">task_destroy<pos:position pos:line="1" pos:column="25"/></name><parameter_list pos:line="1" pos:column="25">(<parameter><decl><type><name pos:line="1" pos:column="26">h2_mplx<pos:position pos:line="1" pos:column="33"/></name> <modifier pos:line="1" pos:column="34">*<pos:position pos:line="1" pos:column="35"/></modifier></type><name pos:line="1" pos:column="35">m<pos:position pos:line="1" pos:column="36"/></name></decl></parameter>, <parameter><decl><type><name pos:line="1" pos:column="38">h2_task<pos:position pos:line="1" pos:column="45"/></name> <modifier pos:line="1" pos:column="46">*<pos:position pos:line="1" pos:column="47"/></modifier></type><name pos:line="1" pos:column="47">task<pos:position pos:line="1" pos:column="51"/></name></decl></parameter>, <parameter><decl><type><name pos:line="1" pos:column="53">int<pos:position pos:line="1" pos:column="56"/></name></type> <name pos:line="1" pos:column="57">called_from_master<pos:position pos:line="1" pos:column="75"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="76"/></parameter_list>
<block pos:line="2" pos:column="1">{
    <decl_stmt><decl><type><name pos:line="3" pos:column="5">conn_rec<pos:position pos:line="3" pos:column="13"/></name> <modifier pos:line="3" pos:column="14">*<pos:position pos:line="3" pos:column="15"/></modifier></type><name pos:line="3" pos:column="15">slave<pos:position pos:line="3" pos:column="20"/></name> <init pos:line="3" pos:column="21">= <expr><name pos:line="3" pos:column="23">NULL<pos:position pos:line="3" pos:column="27"/></name></expr></init></decl>;<pos:position pos:line="3" pos:column="28"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="4" pos:column="5">int<pos:position pos:line="4" pos:column="8"/></name></type> <name pos:line="4" pos:column="9">reuse_slave<pos:position pos:line="4" pos:column="20"/></name> <init pos:line="4" pos:column="21">= <expr><literal type="number" pos:line="4" pos:column="23">0<pos:position pos:line="4" pos:column="24"/></literal></expr></init></decl>;<pos:position pos:line="4" pos:column="25"/></decl_stmt>
    
    <expr_stmt><expr><call><name pos:line="6" pos:column="5">ap_log_cerror<pos:position pos:line="6" pos:column="18"/></name><argument_list pos:line="6" pos:column="18">(<argument><expr><name pos:line="6" pos:column="19">APLOG_MARK<pos:position pos:line="6" pos:column="29"/></name></expr></argument>, <argument><expr><name pos:line="6" pos:column="31">APLOG_TRACE3<pos:position pos:line="6" pos:column="43"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="6" pos:column="45">0<pos:position pos:line="6" pos:column="46"/></literal></expr></argument>, <argument><expr><name><name pos:line="6" pos:column="48">m<pos:position pos:line="6" pos:column="49"/></name><operator pos:line="6" pos:column="49">-&gt;<pos:position pos:line="6" pos:column="54"/></operator><name pos:line="6" pos:column="51">c<pos:position pos:line="6" pos:column="52"/></name></name></expr></argument>, 
                  <argument><expr><literal type="string" pos:line="7" pos:column="19">"h2_task(%s): destroy"<pos:position pos:line="7" pos:column="41"/></literal></expr></argument>, <argument><expr><name><name pos:line="7" pos:column="43">task<pos:position pos:line="7" pos:column="47"/></name><operator pos:line="7" pos:column="47">-&gt;<pos:position pos:line="7" pos:column="52"/></operator><name pos:line="7" pos:column="49">id<pos:position pos:line="7" pos:column="51"/></name></name></expr></argument>)<pos:position pos:line="7" pos:column="52"/></argument_list></call></expr>;<pos:position pos:line="7" pos:column="53"/></expr_stmt>
    <if pos:line="8" pos:column="5">if <condition pos:line="8" pos:column="8">(<expr><name pos:line="8" pos:column="9">called_from_master<pos:position pos:line="8" pos:column="27"/></name></expr>)<pos:position pos:line="8" pos:column="28"/></condition><then pos:line="8" pos:column="28"> <block pos:line="8" pos:column="29">{
        <comment type="block" pos:line="9" pos:column="9">/* Process outstanding events before destruction */</comment>
        <decl_stmt><decl><type><name pos:line="10" pos:column="9">h2_stream<pos:position pos:line="10" pos:column="18"/></name> <modifier pos:line="10" pos:column="19">*<pos:position pos:line="10" pos:column="20"/></modifier></type><name pos:line="10" pos:column="20">stream<pos:position pos:line="10" pos:column="26"/></name> <init pos:line="10" pos:column="27">= <expr><call><name pos:line="10" pos:column="29">h2_ihash_get<pos:position pos:line="10" pos:column="41"/></name><argument_list pos:line="10" pos:column="41">(<argument><expr><name><name pos:line="10" pos:column="42">m<pos:position pos:line="10" pos:column="43"/></name><operator pos:line="10" pos:column="43">-&gt;<pos:position pos:line="10" pos:column="48"/></operator><name pos:line="10" pos:column="45">streams<pos:position pos:line="10" pos:column="52"/></name></name></expr></argument>, <argument><expr><name><name pos:line="10" pos:column="54">task<pos:position pos:line="10" pos:column="58"/></name><operator pos:line="10" pos:column="58">-&gt;<pos:position pos:line="10" pos:column="63"/></operator><name pos:line="10" pos:column="60">stream_id<pos:position pos:line="10" pos:column="69"/></name></name></expr></argument>)<pos:position pos:line="10" pos:column="70"/></argument_list></call></expr></init></decl>;<pos:position pos:line="10" pos:column="71"/></decl_stmt>
        <if pos:line="11" pos:column="9">if <condition pos:line="11" pos:column="12">(<expr><name pos:line="11" pos:column="13">stream<pos:position pos:line="11" pos:column="19"/></name></expr>)<pos:position pos:line="11" pos:column="20"/></condition><then pos:line="11" pos:column="20"> <block pos:line="11" pos:column="21">{
            <expr_stmt><expr><call><name pos:line="12" pos:column="13">input_consumed_signal<pos:position pos:line="12" pos:column="34"/></name><argument_list pos:line="12" pos:column="34">(<argument><expr><name pos:line="12" pos:column="35">m<pos:position pos:line="12" pos:column="36"/></name></expr></argument>, <argument><expr><name pos:line="12" pos:column="38">stream<pos:position pos:line="12" pos:column="44"/></name></expr></argument>)<pos:position pos:line="12" pos:column="45"/></argument_list></call></expr>;<pos:position pos:line="12" pos:column="46"/></expr_stmt>
        }<pos:position pos:line="13" pos:column="10"/></block></then></if>
    }<pos:position pos:line="14" pos:column="6"/></block></then></if>
    
    <expr_stmt><expr><call><name pos:line="16" pos:column="5">h2_beam_on_produced<pos:position pos:line="16" pos:column="24"/></name><argument_list pos:line="16" pos:column="24">(<argument><expr><name><name pos:line="16" pos:column="25">task<pos:position pos:line="16" pos:column="29"/></name><operator pos:line="16" pos:column="29">-&gt;<pos:position pos:line="16" pos:column="34"/></operator><name pos:line="16" pos:column="31">output<pos:position pos:line="16" pos:column="37"/></name><operator pos:line="16" pos:column="37">.<pos:position pos:line="16" pos:column="38"/></operator><name pos:line="16" pos:column="38">beam<pos:position pos:line="16" pos:column="42"/></name></name></expr></argument>, <argument><expr><name pos:line="16" pos:column="44">NULL<pos:position pos:line="16" pos:column="48"/></name></expr></argument>, <argument><expr><name pos:line="16" pos:column="50">NULL<pos:position pos:line="16" pos:column="54"/></name></expr></argument>)<pos:position pos:line="16" pos:column="55"/></argument_list></call></expr>;<pos:position pos:line="16" pos:column="56"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="17" pos:column="5">ap_log_cerror<pos:position pos:line="17" pos:column="18"/></name><argument_list pos:line="17" pos:column="18">(<argument><expr><name pos:line="17" pos:column="19">APLOG_MARK<pos:position pos:line="17" pos:column="29"/></name></expr></argument>, <argument><expr><name pos:line="17" pos:column="31">APLOG_DEBUG<pos:position pos:line="17" pos:column="42"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="17" pos:column="44">0<pos:position pos:line="17" pos:column="45"/></literal></expr></argument>, <argument><expr><name><name pos:line="17" pos:column="47">m<pos:position pos:line="17" pos:column="48"/></name><operator pos:line="17" pos:column="48">-&gt;<pos:position pos:line="17" pos:column="53"/></operator><name pos:line="17" pos:column="50">c<pos:position pos:line="17" pos:column="51"/></name></name></expr></argument>, 
                  <argument><expr><call><name pos:line="18" pos:column="19">APLOGNO<pos:position pos:line="18" pos:column="26"/></name><argument_list pos:line="18" pos:column="26">(<argument><expr><literal type="number" pos:line="18" pos:column="27">03385<pos:position pos:line="18" pos:column="32"/></literal></expr></argument>)<pos:position pos:line="18" pos:column="33"/></argument_list></call> <literal type="string" pos:line="18" pos:column="34">"h2_task(%s): destroy "<pos:position pos:line="18" pos:column="57"/></literal>
                  <literal type="string" pos:line="19" pos:column="19">"output beam empty=%d, holds proxies=%d"<pos:position pos:line="19" pos:column="59"/></literal></expr></argument>, 
                  <argument><expr><name><name pos:line="20" pos:column="19">task<pos:position pos:line="20" pos:column="23"/></name><operator pos:line="20" pos:column="23">-&gt;<pos:position pos:line="20" pos:column="28"/></operator><name pos:line="20" pos:column="25">id<pos:position pos:line="20" pos:column="27"/></name></name></expr></argument>,
                  <argument><expr><call><name pos:line="21" pos:column="19">h2_beam_empty<pos:position pos:line="21" pos:column="32"/></name><argument_list pos:line="21" pos:column="32">(<argument><expr><name><name pos:line="21" pos:column="33">task<pos:position pos:line="21" pos:column="37"/></name><operator pos:line="21" pos:column="37">-&gt;<pos:position pos:line="21" pos:column="42"/></operator><name pos:line="21" pos:column="39">output<pos:position pos:line="21" pos:column="45"/></name><operator pos:line="21" pos:column="45">.<pos:position pos:line="21" pos:column="46"/></operator><name pos:line="21" pos:column="46">beam<pos:position pos:line="21" pos:column="50"/></name></name></expr></argument>)<pos:position pos:line="21" pos:column="51"/></argument_list></call></expr></argument>,
                  <argument><expr><call><name pos:line="22" pos:column="19">h2_beam_holds_proxies<pos:position pos:line="22" pos:column="40"/></name><argument_list pos:line="22" pos:column="40">(<argument><expr><name><name pos:line="22" pos:column="41">task<pos:position pos:line="22" pos:column="45"/></name><operator pos:line="22" pos:column="45">-&gt;<pos:position pos:line="22" pos:column="50"/></operator><name pos:line="22" pos:column="47">output<pos:position pos:line="22" pos:column="53"/></name><operator pos:line="22" pos:column="53">.<pos:position pos:line="22" pos:column="54"/></operator><name pos:line="22" pos:column="54">beam<pos:position pos:line="22" pos:column="58"/></name></name></expr></argument>)<pos:position pos:line="22" pos:column="59"/></argument_list></call></expr></argument>)<pos:position pos:line="22" pos:column="60"/></argument_list></call></expr>;<pos:position pos:line="22" pos:column="61"/></expr_stmt>
    
    <expr_stmt><expr><name pos:line="24" pos:column="5">slave<pos:position pos:line="24" pos:column="10"/></name> <operator pos:line="24" pos:column="11">=<pos:position pos:line="24" pos:column="12"/></operator> <name><name pos:line="24" pos:column="13">task<pos:position pos:line="24" pos:column="17"/></name><operator pos:line="24" pos:column="17">-&gt;<pos:position pos:line="24" pos:column="22"/></operator><name pos:line="24" pos:column="19">c<pos:position pos:line="24" pos:column="20"/></name></name></expr>;<pos:position pos:line="24" pos:column="21"/></expr_stmt>
    <expr_stmt><expr><name pos:line="25" pos:column="5">reuse_slave<pos:position pos:line="25" pos:column="16"/></name> <operator pos:line="25" pos:column="17">=<pos:position pos:line="25" pos:column="18"/></operator> <operator pos:line="25" pos:column="19">(<pos:position pos:line="25" pos:column="20"/></operator><operator pos:line="25" pos:column="20">(<pos:position pos:line="25" pos:column="21"/></operator><name><name pos:line="25" pos:column="21">m<pos:position pos:line="25" pos:column="22"/></name><operator pos:line="25" pos:column="22">-&gt;<pos:position pos:line="25" pos:column="27"/></operator><name pos:line="25" pos:column="24">spare_slaves<pos:position pos:line="25" pos:column="36"/></name><operator pos:line="25" pos:column="36">-&gt;<pos:position pos:line="25" pos:column="41"/></operator><name pos:line="25" pos:column="38">nelts<pos:position pos:line="25" pos:column="43"/></name></name> <operator pos:line="25" pos:column="44">&lt;<pos:position pos:line="25" pos:column="48"/></operator> <name><name pos:line="25" pos:column="46">m<pos:position pos:line="25" pos:column="47"/></name><operator pos:line="25" pos:column="47">-&gt;<pos:position pos:line="25" pos:column="52"/></operator><name pos:line="25" pos:column="49">spare_slaves<pos:position pos:line="25" pos:column="61"/></name><operator pos:line="25" pos:column="61">-&gt;<pos:position pos:line="25" pos:column="66"/></operator><name pos:line="25" pos:column="63">nalloc<pos:position pos:line="25" pos:column="69"/></name></name><operator pos:line="25" pos:column="69">)<pos:position pos:line="25" pos:column="70"/></operator>
                   <operator pos:line="26" pos:column="20">&amp;&amp;<pos:position pos:line="26" pos:column="30"/></operator> <operator pos:line="26" pos:column="23">!<pos:position pos:line="26" pos:column="24"/></operator><name><name pos:line="26" pos:column="24">task<pos:position pos:line="26" pos:column="28"/></name><operator pos:line="26" pos:column="28">-&gt;<pos:position pos:line="26" pos:column="33"/></operator><name pos:line="26" pos:column="30">rst_error<pos:position pos:line="26" pos:column="39"/></name></name><operator pos:line="26" pos:column="39">)<pos:position pos:line="26" pos:column="40"/></operator></expr>;<pos:position pos:line="26" pos:column="41"/></expr_stmt>
    
    <expr_stmt><expr><call><name pos:line="28" pos:column="5">h2_ihash_remove<pos:position pos:line="28" pos:column="20"/></name><argument_list pos:line="28" pos:column="20">(<argument><expr><name><name pos:line="28" pos:column="21">m<pos:position pos:line="28" pos:column="22"/></name><operator pos:line="28" pos:column="22">-&gt;<pos:position pos:line="28" pos:column="27"/></operator><name pos:line="28" pos:column="24">tasks<pos:position pos:line="28" pos:column="29"/></name></name></expr></argument>, <argument><expr><name><name pos:line="28" pos:column="31">task<pos:position pos:line="28" pos:column="35"/></name><operator pos:line="28" pos:column="35">-&gt;<pos:position pos:line="28" pos:column="40"/></operator><name pos:line="28" pos:column="37">stream_id<pos:position pos:line="28" pos:column="46"/></name></name></expr></argument>)<pos:position pos:line="28" pos:column="47"/></argument_list></call></expr>;<pos:position pos:line="28" pos:column="48"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="29" pos:column="5">h2_ihash_remove<pos:position pos:line="29" pos:column="20"/></name><argument_list pos:line="29" pos:column="20">(<argument><expr><name><name pos:line="29" pos:column="21">m<pos:position pos:line="29" pos:column="22"/></name><operator pos:line="29" pos:column="22">-&gt;<pos:position pos:line="29" pos:column="27"/></operator><name pos:line="29" pos:column="24">redo_tasks<pos:position pos:line="29" pos:column="34"/></name></name></expr></argument>, <argument><expr><name><name pos:line="29" pos:column="36">task<pos:position pos:line="29" pos:column="40"/></name><operator pos:line="29" pos:column="40">-&gt;<pos:position pos:line="29" pos:column="45"/></operator><name pos:line="29" pos:column="42">stream_id<pos:position pos:line="29" pos:column="51"/></name></name></expr></argument>)<pos:position pos:line="29" pos:column="52"/></argument_list></call></expr>;<pos:position pos:line="29" pos:column="53"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="30" pos:column="5">h2_task_destroy<pos:position pos:line="30" pos:column="20"/></name><argument_list pos:line="30" pos:column="20">(<argument><expr><name pos:line="30" pos:column="21">task<pos:position pos:line="30" pos:column="25"/></name></expr></argument>)<pos:position pos:line="30" pos:column="26"/></argument_list></call></expr>;<pos:position pos:line="30" pos:column="27"/></expr_stmt>

    <if pos:line="32" pos:column="5">if <condition pos:line="32" pos:column="8">(<expr><name pos:line="32" pos:column="9">slave<pos:position pos:line="32" pos:column="14"/></name></expr>)<pos:position pos:line="32" pos:column="15"/></condition><then pos:line="32" pos:column="15"> <block pos:line="32" pos:column="16">{
        <if pos:line="33" pos:column="9">if <condition pos:line="33" pos:column="12">(<expr><name pos:line="33" pos:column="13">reuse_slave<pos:position pos:line="33" pos:column="24"/></name> <operator pos:line="33" pos:column="25">&amp;&amp;<pos:position pos:line="33" pos:column="35"/></operator> <name><name pos:line="33" pos:column="28">slave<pos:position pos:line="33" pos:column="33"/></name><operator pos:line="33" pos:column="33">-&gt;<pos:position pos:line="33" pos:column="38"/></operator><name pos:line="33" pos:column="35">keepalive<pos:position pos:line="33" pos:column="44"/></name></name> <operator pos:line="33" pos:column="45">==<pos:position pos:line="33" pos:column="47"/></operator> <name pos:line="33" pos:column="48">AP_CONN_KEEPALIVE<pos:position pos:line="33" pos:column="65"/></name></expr>)<pos:position pos:line="33" pos:column="66"/></condition><then pos:line="33" pos:column="66"> <block pos:line="33" pos:column="67">{
            <expr_stmt><expr><call><name pos:line="34" pos:column="13">APR_ARRAY_PUSH<pos:position pos:line="34" pos:column="27"/></name><argument_list pos:line="34" pos:column="27">(<argument><expr><name><name pos:line="34" pos:column="28">m<pos:position pos:line="34" pos:column="29"/></name><operator pos:line="34" pos:column="29">-&gt;<pos:position pos:line="34" pos:column="34"/></operator><name pos:line="34" pos:column="31">spare_slaves<pos:position pos:line="34" pos:column="43"/></name></name></expr></argument>, <argument><expr><name pos:line="34" pos:column="45">conn_rec<pos:position pos:line="34" pos:column="53"/></name><operator pos:line="34" pos:column="53">*<pos:position pos:line="34" pos:column="54"/></operator></expr></argument>)<pos:position pos:line="34" pos:column="55"/></argument_list></call> <operator pos:line="34" pos:column="56">=<pos:position pos:line="34" pos:column="57"/></operator> <name pos:line="34" pos:column="58">slave<pos:position pos:line="34" pos:column="63"/></name></expr>;<pos:position pos:line="34" pos:column="64"/></expr_stmt>
        }<pos:position pos:line="35" pos:column="10"/></block></then>
        <else pos:line="36" pos:column="9">else <block pos:line="36" pos:column="14">{
            <expr_stmt><expr><name><name pos:line="37" pos:column="13">slave<pos:position pos:line="37" pos:column="18"/></name><operator pos:line="37" pos:column="18">-&gt;<pos:position pos:line="37" pos:column="23"/></operator><name pos:line="37" pos:column="20">sbh<pos:position pos:line="37" pos:column="23"/></name></name> <operator pos:line="37" pos:column="24">=<pos:position pos:line="37" pos:column="25"/></operator> <name pos:line="37" pos:column="26">NULL<pos:position pos:line="37" pos:column="30"/></name></expr>;<pos:position pos:line="37" pos:column="31"/></expr_stmt>
            <expr_stmt><expr><call><name pos:line="38" pos:column="13">h2_slave_destroy<pos:position pos:line="38" pos:column="29"/></name><argument_list pos:line="38" pos:column="29">(<argument><expr><name pos:line="38" pos:column="30">slave<pos:position pos:line="38" pos:column="35"/></name></expr></argument>)<pos:position pos:line="38" pos:column="36"/></argument_list></call></expr>;<pos:position pos:line="38" pos:column="37"/></expr_stmt>
        }<pos:position pos:line="39" pos:column="10"/></block></else></if>
    }<pos:position pos:line="40" pos:column="6"/></block></then></if>
    
    <expr_stmt><expr><call><name pos:line="42" pos:column="5">check_tx_free<pos:position pos:line="42" pos:column="18"/></name><argument_list pos:line="42" pos:column="18">(<argument><expr><name pos:line="42" pos:column="19">m<pos:position pos:line="42" pos:column="20"/></name></expr></argument>)<pos:position pos:line="42" pos:column="21"/></argument_list></call></expr>;<pos:position pos:line="42" pos:column="22"/></expr_stmt>
}<pos:position pos:line="43" pos:column="2"/></block></function></unit>

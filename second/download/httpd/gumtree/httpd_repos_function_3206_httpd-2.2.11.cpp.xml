<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/httpd/gumtree/httpd_repos_function_3206_httpd-2.2.11.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier>
<type><name pos:line="2" pos:column="1">int<pos:position pos:line="2" pos:column="4"/></name> <name pos:line="2" pos:column="5">PREFIX<pos:position pos:line="2" pos:column="11"/></name></type>(<name pos:line="2" pos:column="12">scanDecl<pos:position pos:line="2" pos:column="20"/></name>)<parameter_list pos:line="2" pos:column="21">(<parameter><decl><type><specifier pos:line="2" pos:column="22">const<pos:position pos:line="2" pos:column="27"/></specifier> <name pos:line="2" pos:column="28">ENCODING<pos:position pos:line="2" pos:column="36"/></name> <modifier pos:line="2" pos:column="37">*<pos:position pos:line="2" pos:column="38"/></modifier></type><name pos:line="2" pos:column="38">enc<pos:position pos:line="2" pos:column="41"/></name></decl></parameter>, <parameter><decl><type><specifier pos:line="2" pos:column="43">const<pos:position pos:line="2" pos:column="48"/></specifier> <name pos:line="2" pos:column="49">char<pos:position pos:line="2" pos:column="53"/></name> <modifier pos:line="2" pos:column="54">*<pos:position pos:line="2" pos:column="55"/></modifier></type><name pos:line="2" pos:column="55">ptr<pos:position pos:line="2" pos:column="58"/></name></decl></parameter>, <parameter><decl><type><specifier pos:line="2" pos:column="60">const<pos:position pos:line="2" pos:column="65"/></specifier> <name pos:line="2" pos:column="66">char<pos:position pos:line="2" pos:column="70"/></name> <modifier pos:line="2" pos:column="71">*<pos:position pos:line="2" pos:column="72"/></modifier></type><name pos:line="2" pos:column="72">end<pos:position pos:line="2" pos:column="75"/></name></decl></parameter>,
		     <parameter><decl><type><specifier pos:line="3" pos:column="22">const<pos:position pos:line="3" pos:column="27"/></specifier> <name pos:line="3" pos:column="28">char<pos:position pos:line="3" pos:column="32"/></name> <modifier pos:line="3" pos:column="33">*<pos:position pos:line="3" pos:column="34"/></modifier><modifier pos:line="3" pos:column="34">*<pos:position pos:line="3" pos:column="35"/></modifier></type><name pos:line="3" pos:column="35">nextTokPtr<pos:position pos:line="3" pos:column="45"/></name></decl></parameter>)<pos:position pos:line="3" pos:column="46"/></parameter_list>
<block pos:line="4" pos:column="1">{
  <if pos:line="5" pos:column="3">if <condition pos:line="5" pos:column="6">(<expr><name pos:line="5" pos:column="7">ptr<pos:position pos:line="5" pos:column="10"/></name> <operator pos:line="5" pos:column="11">==<pos:position pos:line="5" pos:column="13"/></operator> <name pos:line="5" pos:column="14">end<pos:position pos:line="5" pos:column="17"/></name></expr>)<pos:position pos:line="5" pos:column="18"/></condition><then pos:line="5" pos:column="18">
    <block type="pseudo"><return pos:line="6" pos:column="5">return <expr><name pos:line="6" pos:column="12">XML_TOK_PARTIAL<pos:position pos:line="6" pos:column="27"/></name></expr>;<pos:position pos:line="6" pos:column="28"/></return></block></then></if>
  <switch pos:line="7" pos:column="3">switch <condition pos:line="7" pos:column="10">(<expr><call><name pos:line="7" pos:column="11">BYTE_TYPE<pos:position pos:line="7" pos:column="20"/></name><argument_list pos:line="7" pos:column="20">(<argument><expr><name pos:line="7" pos:column="21">enc<pos:position pos:line="7" pos:column="24"/></name></expr></argument>, <argument><expr><name pos:line="7" pos:column="26">ptr<pos:position pos:line="7" pos:column="29"/></name></expr></argument>)<pos:position pos:line="7" pos:column="30"/></argument_list></call></expr>)<pos:position pos:line="7" pos:column="31"/></condition> <block pos:line="7" pos:column="32">{
  <case pos:line="8" pos:column="3">case <expr><name pos:line="8" pos:column="8">BT_MINUS<pos:position pos:line="8" pos:column="16"/></name></expr>:<pos:position pos:line="8" pos:column="17"/></case>
    <return pos:line="9" pos:column="5">return <expr><call><call><name pos:line="9" pos:column="12">PREFIX<pos:position pos:line="9" pos:column="18"/></name><argument_list pos:line="9" pos:column="18">(<argument><expr><name pos:line="9" pos:column="19">scanComment<pos:position pos:line="9" pos:column="30"/></name></expr></argument>)<pos:position pos:line="9" pos:column="31"/></argument_list></call><argument_list pos:line="9" pos:column="31">(<argument><expr><name pos:line="9" pos:column="32">enc<pos:position pos:line="9" pos:column="35"/></name></expr></argument>, <argument><expr><name pos:line="9" pos:column="37">ptr<pos:position pos:line="9" pos:column="40"/></name> <operator pos:line="9" pos:column="41">+<pos:position pos:line="9" pos:column="42"/></operator> <call><name pos:line="9" pos:column="43">MINBPC<pos:position pos:line="9" pos:column="49"/></name><argument_list pos:line="9" pos:column="49">(<argument><expr><name pos:line="9" pos:column="50">enc<pos:position pos:line="9" pos:column="53"/></name></expr></argument>)<pos:position pos:line="9" pos:column="54"/></argument_list></call></expr></argument>, <argument><expr><name pos:line="9" pos:column="56">end<pos:position pos:line="9" pos:column="59"/></name></expr></argument>, <argument><expr><name pos:line="9" pos:column="61">nextTokPtr<pos:position pos:line="9" pos:column="71"/></name></expr></argument>)<pos:position pos:line="9" pos:column="72"/></argument_list></call></expr>;<pos:position pos:line="9" pos:column="73"/></return>
  <case pos:line="10" pos:column="3">case <expr><name pos:line="10" pos:column="8">BT_LSQB<pos:position pos:line="10" pos:column="15"/></name></expr>:<pos:position pos:line="10" pos:column="16"/></case>
    <expr_stmt><expr><operator pos:line="11" pos:column="5">*<pos:position pos:line="11" pos:column="6"/></operator><name pos:line="11" pos:column="6">nextTokPtr<pos:position pos:line="11" pos:column="16"/></name> <operator pos:line="11" pos:column="17">=<pos:position pos:line="11" pos:column="18"/></operator> <name pos:line="11" pos:column="19">ptr<pos:position pos:line="11" pos:column="22"/></name> <operator pos:line="11" pos:column="23">+<pos:position pos:line="11" pos:column="24"/></operator> <call><name pos:line="11" pos:column="25">MINBPC<pos:position pos:line="11" pos:column="31"/></name><argument_list pos:line="11" pos:column="31">(<argument><expr><name pos:line="11" pos:column="32">enc<pos:position pos:line="11" pos:column="35"/></name></expr></argument>)<pos:position pos:line="11" pos:column="36"/></argument_list></call></expr>;<pos:position pos:line="11" pos:column="37"/></expr_stmt>
    <return pos:line="12" pos:column="5">return <expr><name pos:line="12" pos:column="12">XML_TOK_COND_SECT_OPEN<pos:position pos:line="12" pos:column="34"/></name></expr>;<pos:position pos:line="12" pos:column="35"/></return>
  <case pos:line="13" pos:column="3">case <expr><name pos:line="13" pos:column="8">BT_NMSTRT<pos:position pos:line="13" pos:column="17"/></name></expr>:<pos:position pos:line="13" pos:column="18"/></case>
  <case pos:line="14" pos:column="3">case <expr><name pos:line="14" pos:column="8">BT_HEX<pos:position pos:line="14" pos:column="14"/></name></expr>:<pos:position pos:line="14" pos:column="15"/></case>
    <expr_stmt><expr><name pos:line="15" pos:column="5">ptr<pos:position pos:line="15" pos:column="8"/></name> <operator pos:line="15" pos:column="9">+=<pos:position pos:line="15" pos:column="11"/></operator> <call><name pos:line="15" pos:column="12">MINBPC<pos:position pos:line="15" pos:column="18"/></name><argument_list pos:line="15" pos:column="18">(<argument><expr><name pos:line="15" pos:column="19">enc<pos:position pos:line="15" pos:column="22"/></name></expr></argument>)<pos:position pos:line="15" pos:column="23"/></argument_list></call></expr>;<pos:position pos:line="15" pos:column="24"/></expr_stmt>
    <break pos:line="16" pos:column="5">break;<pos:position pos:line="16" pos:column="11"/></break>
  <default pos:line="17" pos:column="3">default:<pos:position pos:line="17" pos:column="11"/></default>
    <expr_stmt><expr><operator pos:line="18" pos:column="5">*<pos:position pos:line="18" pos:column="6"/></operator><name pos:line="18" pos:column="6">nextTokPtr<pos:position pos:line="18" pos:column="16"/></name> <operator pos:line="18" pos:column="17">=<pos:position pos:line="18" pos:column="18"/></operator> <name pos:line="18" pos:column="19">ptr<pos:position pos:line="18" pos:column="22"/></name></expr>;<pos:position pos:line="18" pos:column="23"/></expr_stmt>
    <return pos:line="19" pos:column="5">return <expr><name pos:line="19" pos:column="12">XML_TOK_INVALID<pos:position pos:line="19" pos:column="27"/></name></expr>;<pos:position pos:line="19" pos:column="28"/></return>
  }<pos:position pos:line="20" pos:column="4"/></block></switch>
  <while pos:line="21" pos:column="3">while <condition pos:line="21" pos:column="9">(<expr><name pos:line="21" pos:column="10">ptr<pos:position pos:line="21" pos:column="13"/></name> <operator pos:line="21" pos:column="14">!=<pos:position pos:line="21" pos:column="16"/></operator> <name pos:line="21" pos:column="17">end<pos:position pos:line="21" pos:column="20"/></name></expr>)<pos:position pos:line="21" pos:column="21"/></condition> <block pos:line="21" pos:column="22">{
    <switch pos:line="22" pos:column="5">switch <condition pos:line="22" pos:column="12">(<expr><call><name pos:line="22" pos:column="13">BYTE_TYPE<pos:position pos:line="22" pos:column="22"/></name><argument_list pos:line="22" pos:column="22">(<argument><expr><name pos:line="22" pos:column="23">enc<pos:position pos:line="22" pos:column="26"/></name></expr></argument>, <argument><expr><name pos:line="22" pos:column="28">ptr<pos:position pos:line="22" pos:column="31"/></name></expr></argument>)<pos:position pos:line="22" pos:column="32"/></argument_list></call></expr>)<pos:position pos:line="22" pos:column="33"/></condition> <block pos:line="22" pos:column="34">{
    <case pos:line="23" pos:column="5">case <expr><name pos:line="23" pos:column="10">BT_PERCNT<pos:position pos:line="23" pos:column="19"/></name></expr>:<pos:position pos:line="23" pos:column="20"/></case>
      <if pos:line="24" pos:column="7">if <condition pos:line="24" pos:column="10">(<expr><name pos:line="24" pos:column="11">ptr<pos:position pos:line="24" pos:column="14"/></name> <operator pos:line="24" pos:column="15">+<pos:position pos:line="24" pos:column="16"/></operator> <call><name pos:line="24" pos:column="17">MINBPC<pos:position pos:line="24" pos:column="23"/></name><argument_list pos:line="24" pos:column="23">(<argument><expr><name pos:line="24" pos:column="24">enc<pos:position pos:line="24" pos:column="27"/></name></expr></argument>)<pos:position pos:line="24" pos:column="28"/></argument_list></call> <operator pos:line="24" pos:column="29">==<pos:position pos:line="24" pos:column="31"/></operator> <name pos:line="24" pos:column="32">end<pos:position pos:line="24" pos:column="35"/></name></expr>)<pos:position pos:line="24" pos:column="36"/></condition><then pos:line="24" pos:column="36">
	<block type="pseudo"><return pos:line="25" pos:column="9">return <expr><name pos:line="25" pos:column="16">XML_TOK_PARTIAL<pos:position pos:line="25" pos:column="31"/></name></expr>;<pos:position pos:line="25" pos:column="32"/></return></block></then></if>
      <comment type="block" pos:line="26" pos:column="7">/* don't allow &lt;!ENTITY% foo "whatever"&gt; */</comment>
      <switch pos:line="27" pos:column="7">switch <condition pos:line="27" pos:column="14">(<expr><call><name pos:line="27" pos:column="15">BYTE_TYPE<pos:position pos:line="27" pos:column="24"/></name><argument_list pos:line="27" pos:column="24">(<argument><expr><name pos:line="27" pos:column="25">enc<pos:position pos:line="27" pos:column="28"/></name></expr></argument>, <argument><expr><name pos:line="27" pos:column="30">ptr<pos:position pos:line="27" pos:column="33"/></name> <operator pos:line="27" pos:column="34">+<pos:position pos:line="27" pos:column="35"/></operator> <call><name pos:line="27" pos:column="36">MINBPC<pos:position pos:line="27" pos:column="42"/></name><argument_list pos:line="27" pos:column="42">(<argument><expr><name pos:line="27" pos:column="43">enc<pos:position pos:line="27" pos:column="46"/></name></expr></argument>)<pos:position pos:line="27" pos:column="47"/></argument_list></call></expr></argument>)<pos:position pos:line="27" pos:column="48"/></argument_list></call></expr>)<pos:position pos:line="27" pos:column="49"/></condition> <block pos:line="27" pos:column="50">{
      <case pos:line="28" pos:column="7">case <expr><name pos:line="28" pos:column="12">BT_S<pos:position pos:line="28" pos:column="16"/></name></expr>:<pos:position pos:line="28" pos:column="17"/></case> <case pos:line="28" pos:column="18">case <expr><name pos:line="28" pos:column="23">BT_CR<pos:position pos:line="28" pos:column="28"/></name></expr>:<pos:position pos:line="28" pos:column="29"/></case> <case pos:line="28" pos:column="30">case <expr><name pos:line="28" pos:column="35">BT_LF<pos:position pos:line="28" pos:column="40"/></name></expr>:<pos:position pos:line="28" pos:column="41"/></case> <case pos:line="28" pos:column="42">case <expr><name pos:line="28" pos:column="47">BT_PERCNT<pos:position pos:line="28" pos:column="56"/></name></expr>:<pos:position pos:line="28" pos:column="57"/></case>
	<expr_stmt><expr><operator pos:line="29" pos:column="9">*<pos:position pos:line="29" pos:column="10"/></operator><name pos:line="29" pos:column="10">nextTokPtr<pos:position pos:line="29" pos:column="20"/></name> <operator pos:line="29" pos:column="21">=<pos:position pos:line="29" pos:column="22"/></operator> <name pos:line="29" pos:column="23">ptr<pos:position pos:line="29" pos:column="26"/></name></expr>;<pos:position pos:line="29" pos:column="27"/></expr_stmt>
	<return pos:line="30" pos:column="9">return <expr><name pos:line="30" pos:column="16">XML_TOK_INVALID<pos:position pos:line="30" pos:column="31"/></name></expr>;<pos:position pos:line="30" pos:column="32"/></return>
      }<pos:position pos:line="31" pos:column="8"/></block></switch>
      <comment type="block" pos:line="32" pos:column="7">/* fall through */</comment>
    <case pos:line="33" pos:column="5">case <expr><name pos:line="33" pos:column="10">BT_S<pos:position pos:line="33" pos:column="14"/></name></expr>:<pos:position pos:line="33" pos:column="15"/></case> <case pos:line="33" pos:column="16">case <expr><name pos:line="33" pos:column="21">BT_CR<pos:position pos:line="33" pos:column="26"/></name></expr>:<pos:position pos:line="33" pos:column="27"/></case> <case pos:line="33" pos:column="28">case <expr><name pos:line="33" pos:column="33">BT_LF<pos:position pos:line="33" pos:column="38"/></name></expr>:<pos:position pos:line="33" pos:column="39"/></case>
      <expr_stmt><expr><operator pos:line="34" pos:column="7">*<pos:position pos:line="34" pos:column="8"/></operator><name pos:line="34" pos:column="8">nextTokPtr<pos:position pos:line="34" pos:column="18"/></name> <operator pos:line="34" pos:column="19">=<pos:position pos:line="34" pos:column="20"/></operator> <name pos:line="34" pos:column="21">ptr<pos:position pos:line="34" pos:column="24"/></name></expr>;<pos:position pos:line="34" pos:column="25"/></expr_stmt>
      <return pos:line="35" pos:column="7">return <expr><name pos:line="35" pos:column="14">XML_TOK_DECL_OPEN<pos:position pos:line="35" pos:column="31"/></name></expr>;<pos:position pos:line="35" pos:column="32"/></return>
    <case pos:line="36" pos:column="5">case <expr><name pos:line="36" pos:column="10">BT_NMSTRT<pos:position pos:line="36" pos:column="19"/></name></expr>:<pos:position pos:line="36" pos:column="20"/></case>
    <case pos:line="37" pos:column="5">case <expr><name pos:line="37" pos:column="10">BT_HEX<pos:position pos:line="37" pos:column="16"/></name></expr>:<pos:position pos:line="37" pos:column="17"/></case>
      <expr_stmt><expr><name pos:line="38" pos:column="7">ptr<pos:position pos:line="38" pos:column="10"/></name> <operator pos:line="38" pos:column="11">+=<pos:position pos:line="38" pos:column="13"/></operator> <call><name pos:line="38" pos:column="14">MINBPC<pos:position pos:line="38" pos:column="20"/></name><argument_list pos:line="38" pos:column="20">(<argument><expr><name pos:line="38" pos:column="21">enc<pos:position pos:line="38" pos:column="24"/></name></expr></argument>)<pos:position pos:line="38" pos:column="25"/></argument_list></call></expr>;<pos:position pos:line="38" pos:column="26"/></expr_stmt>
      <break pos:line="39" pos:column="7">break;<pos:position pos:line="39" pos:column="13"/></break>
    <default pos:line="40" pos:column="5">default:<pos:position pos:line="40" pos:column="13"/></default>
      <expr_stmt><expr><operator pos:line="41" pos:column="7">*<pos:position pos:line="41" pos:column="8"/></operator><name pos:line="41" pos:column="8">nextTokPtr<pos:position pos:line="41" pos:column="18"/></name> <operator pos:line="41" pos:column="19">=<pos:position pos:line="41" pos:column="20"/></operator> <name pos:line="41" pos:column="21">ptr<pos:position pos:line="41" pos:column="24"/></name></expr>;<pos:position pos:line="41" pos:column="25"/></expr_stmt>
      <return pos:line="42" pos:column="7">return <expr><name pos:line="42" pos:column="14">XML_TOK_INVALID<pos:position pos:line="42" pos:column="29"/></name></expr>;<pos:position pos:line="42" pos:column="30"/></return>
    }<pos:position pos:line="43" pos:column="6"/></block></switch>
  }<pos:position pos:line="44" pos:column="4"/></block></while>
  <return pos:line="45" pos:column="3">return <expr><name pos:line="45" pos:column="10">XML_TOK_PARTIAL<pos:position pos:line="45" pos:column="25"/></name></expr>;<pos:position pos:line="45" pos:column="26"/></return>
}<pos:position pos:line="46" pos:column="2"/></block></function></unit>

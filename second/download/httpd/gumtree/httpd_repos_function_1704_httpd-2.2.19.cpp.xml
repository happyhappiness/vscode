<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/httpd/gumtree/httpd_repos_function_1704_httpd-2.2.19.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">apr_size_t<pos:position pos:line="1" pos:column="18"/></name></type> <name pos:line="1" pos:column="19">find_tail<pos:position pos:line="1" pos:column="28"/></name><parameter_list pos:line="1" pos:column="28">(<parameter><decl><type><name pos:line="1" pos:column="29">include_ctx_t<pos:position pos:line="1" pos:column="42"/></name> <modifier pos:line="1" pos:column="43">*<pos:position pos:line="1" pos:column="44"/></modifier></type><name pos:line="1" pos:column="44">ctx<pos:position pos:line="1" pos:column="47"/></name></decl></parameter>, <parameter><decl><type><specifier pos:line="1" pos:column="49">const<pos:position pos:line="1" pos:column="54"/></specifier> <name pos:line="1" pos:column="55">char<pos:position pos:line="1" pos:column="59"/></name> <modifier pos:line="1" pos:column="60">*<pos:position pos:line="1" pos:column="61"/></modifier></type><name pos:line="1" pos:column="61">data<pos:position pos:line="1" pos:column="65"/></name></decl></parameter>,
                            <parameter><decl><type><name pos:line="2" pos:column="29">apr_size_t<pos:position pos:line="2" pos:column="39"/></name></type> <name pos:line="2" pos:column="40">len<pos:position pos:line="2" pos:column="43"/></name></decl></parameter>)<pos:position pos:line="2" pos:column="44"/></parameter_list>
<block pos:line="3" pos:column="1">{
    <decl_stmt><decl><type><name><name pos:line="4" pos:column="5">struct<pos:position pos:line="4" pos:column="11"/></name> <name pos:line="4" pos:column="12">ssi_internal_ctx<pos:position pos:line="4" pos:column="28"/></name></name> <modifier pos:line="4" pos:column="29">*<pos:position pos:line="4" pos:column="30"/></modifier></type><name pos:line="4" pos:column="30">intern<pos:position pos:line="4" pos:column="36"/></name> <init pos:line="4" pos:column="37">= <expr><name><name pos:line="4" pos:column="39">ctx<pos:position pos:line="4" pos:column="42"/></name><operator pos:line="4" pos:column="42">-&gt;<pos:position pos:line="4" pos:column="47"/></operator><name pos:line="4" pos:column="44">intern<pos:position pos:line="4" pos:column="50"/></name></name></expr></init></decl>;<pos:position pos:line="4" pos:column="51"/></decl_stmt>
    <decl_stmt><decl><type><specifier pos:line="5" pos:column="5">const<pos:position pos:line="5" pos:column="10"/></specifier> <name pos:line="5" pos:column="11">char<pos:position pos:line="5" pos:column="15"/></name> <modifier pos:line="5" pos:column="16">*<pos:position pos:line="5" pos:column="17"/></modifier></type><name pos:line="5" pos:column="17">p<pos:position pos:line="5" pos:column="18"/></name> <init pos:line="5" pos:column="19">= <expr><name pos:line="5" pos:column="21">data<pos:position pos:line="5" pos:column="25"/></name></expr></init></decl>;<pos:position pos:line="5" pos:column="26"/></decl_stmt>
    <decl_stmt><decl><type><specifier pos:line="6" pos:column="5">const<pos:position pos:line="6" pos:column="10"/></specifier> <name pos:line="6" pos:column="11">char<pos:position pos:line="6" pos:column="15"/></name> <modifier pos:line="6" pos:column="16">*<pos:position pos:line="6" pos:column="17"/></modifier></type><name pos:line="6" pos:column="17">ep<pos:position pos:line="6" pos:column="19"/></name> <init pos:line="6" pos:column="20">= <expr><name pos:line="6" pos:column="22">data<pos:position pos:line="6" pos:column="26"/></name> <operator pos:line="6" pos:column="27">+<pos:position pos:line="6" pos:column="28"/></operator> <name pos:line="6" pos:column="29">len<pos:position pos:line="6" pos:column="32"/></name></expr></init></decl>;<pos:position pos:line="6" pos:column="33"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="7" pos:column="5">apr_size_t<pos:position pos:line="7" pos:column="15"/></name></type> <name pos:line="7" pos:column="16">pos<pos:position pos:line="7" pos:column="19"/></name> <init pos:line="7" pos:column="20">= <expr><name><name pos:line="7" pos:column="22">intern<pos:position pos:line="7" pos:column="28"/></name><operator pos:line="7" pos:column="28">-&gt;<pos:position pos:line="7" pos:column="33"/></operator><name pos:line="7" pos:column="30">parse_pos<pos:position pos:line="7" pos:column="39"/></name></name></expr></init></decl>;<pos:position pos:line="7" pos:column="40"/></decl_stmt>

    <if pos:line="9" pos:column="5">if <condition pos:line="9" pos:column="8">(<expr><name pos:line="9" pos:column="9">PARSE_TAIL<pos:position pos:line="9" pos:column="19"/></name> <operator pos:line="9" pos:column="20">==<pos:position pos:line="9" pos:column="22"/></operator> <name><name pos:line="9" pos:column="23">intern<pos:position pos:line="9" pos:column="29"/></name><operator pos:line="9" pos:column="29">-&gt;<pos:position pos:line="9" pos:column="34"/></operator><name pos:line="9" pos:column="31">state<pos:position pos:line="9" pos:column="36"/></name></name></expr>)<pos:position pos:line="9" pos:column="37"/></condition><then pos:line="9" pos:column="37"> <block pos:line="9" pos:column="38">{
        <expr_stmt><expr><name><name pos:line="10" pos:column="9">intern<pos:position pos:line="10" pos:column="15"/></name><operator pos:line="10" pos:column="15">-&gt;<pos:position pos:line="10" pos:column="20"/></operator><name pos:line="10" pos:column="17">state<pos:position pos:line="10" pos:column="22"/></name></name> <operator pos:line="10" pos:column="23">=<pos:position pos:line="10" pos:column="24"/></operator> <name pos:line="10" pos:column="25">PARSE_TAIL_SEQ<pos:position pos:line="10" pos:column="39"/></name></expr>;<pos:position pos:line="10" pos:column="40"/></expr_stmt>
        <expr_stmt><expr><name pos:line="11" pos:column="9">pos<pos:position pos:line="11" pos:column="12"/></name> <operator pos:line="11" pos:column="13">=<pos:position pos:line="11" pos:column="14"/></operator> <name><name pos:line="11" pos:column="15">intern<pos:position pos:line="11" pos:column="21"/></name><operator pos:line="11" pos:column="21">-&gt;<pos:position pos:line="11" pos:column="26"/></operator><name pos:line="11" pos:column="23">parse_pos<pos:position pos:line="11" pos:column="32"/></name></name> <operator pos:line="11" pos:column="33">=<pos:position pos:line="11" pos:column="34"/></operator> <literal type="number" pos:line="11" pos:column="35">0<pos:position pos:line="11" pos:column="36"/></literal></expr>;<pos:position pos:line="11" pos:column="37"/></expr_stmt>
    }<pos:position pos:line="12" pos:column="6"/></block></then></if>

    <while pos:line="14" pos:column="5">while <condition pos:line="14" pos:column="11">(<expr><name pos:line="14" pos:column="12">p<pos:position pos:line="14" pos:column="13"/></name> <operator pos:line="14" pos:column="14">&lt;<pos:position pos:line="14" pos:column="18"/></operator> <name pos:line="14" pos:column="16">ep<pos:position pos:line="14" pos:column="18"/></name> <operator pos:line="14" pos:column="19">&amp;&amp;<pos:position pos:line="14" pos:column="29"/></operator> <name pos:line="14" pos:column="22">pos<pos:position pos:line="14" pos:column="25"/></name> <operator pos:line="14" pos:column="26">&lt;<pos:position pos:line="14" pos:column="30"/></operator> <name><name pos:line="14" pos:column="28">intern<pos:position pos:line="14" pos:column="34"/></name><operator pos:line="14" pos:column="34">-&gt;<pos:position pos:line="14" pos:column="39"/></operator><name pos:line="14" pos:column="36">end_seq_len<pos:position pos:line="14" pos:column="47"/></name></name> <operator pos:line="14" pos:column="48">&amp;&amp;<pos:position pos:line="14" pos:column="58"/></operator> <operator pos:line="14" pos:column="51">*<pos:position pos:line="14" pos:column="52"/></operator><name pos:line="14" pos:column="52">p<pos:position pos:line="14" pos:column="53"/></name> <operator pos:line="14" pos:column="54">==<pos:position pos:line="14" pos:column="56"/></operator> <name><name pos:line="14" pos:column="57">intern<pos:position pos:line="14" pos:column="63"/></name><operator pos:line="14" pos:column="63">-&gt;<pos:position pos:line="14" pos:column="68"/></operator><name pos:line="14" pos:column="65">end_seq<pos:position pos:line="14" pos:column="72"/></name><index pos:line="14" pos:column="72">[<expr><name pos:line="14" pos:column="73">pos<pos:position pos:line="14" pos:column="76"/></name></expr>]<pos:position pos:line="14" pos:column="77"/></index></name></expr>)<pos:position pos:line="14" pos:column="78"/></condition> <block pos:line="14" pos:column="79">{
        <expr_stmt><expr><operator pos:line="15" pos:column="9">++<pos:position pos:line="15" pos:column="11"/></operator><name pos:line="15" pos:column="11">p<pos:position pos:line="15" pos:column="12"/></name></expr>;<pos:position pos:line="15" pos:column="13"/></expr_stmt>
        <expr_stmt><expr><operator pos:line="16" pos:column="9">++<pos:position pos:line="16" pos:column="11"/></operator><name pos:line="16" pos:column="11">pos<pos:position pos:line="16" pos:column="14"/></name></expr>;<pos:position pos:line="16" pos:column="15"/></expr_stmt>
    }<pos:position pos:line="17" pos:column="6"/></block></while>

    <comment type="block" pos:line="19" pos:column="5">/* bingo, full match */</comment>
    <if pos:line="20" pos:column="5">if <condition pos:line="20" pos:column="8">(<expr><name pos:line="20" pos:column="9">pos<pos:position pos:line="20" pos:column="12"/></name> <operator pos:line="20" pos:column="13">==<pos:position pos:line="20" pos:column="15"/></operator> <name><name pos:line="20" pos:column="16">intern<pos:position pos:line="20" pos:column="22"/></name><operator pos:line="20" pos:column="22">-&gt;<pos:position pos:line="20" pos:column="27"/></operator><name pos:line="20" pos:column="24">end_seq_len<pos:position pos:line="20" pos:column="35"/></name></name></expr>)<pos:position pos:line="20" pos:column="36"/></condition><then pos:line="20" pos:column="36"> <block pos:line="20" pos:column="37">{
        <expr_stmt><expr><name><name pos:line="21" pos:column="9">intern<pos:position pos:line="21" pos:column="15"/></name><operator pos:line="21" pos:column="15">-&gt;<pos:position pos:line="21" pos:column="20"/></operator><name pos:line="21" pos:column="17">state<pos:position pos:line="21" pos:column="22"/></name></name> <operator pos:line="21" pos:column="23">=<pos:position pos:line="21" pos:column="24"/></operator> <name pos:line="21" pos:column="25">PARSE_EXECUTE<pos:position pos:line="21" pos:column="38"/></name></expr>;<pos:position pos:line="21" pos:column="39"/></expr_stmt>
        <return pos:line="22" pos:column="9">return <expr><operator pos:line="22" pos:column="16">(<pos:position pos:line="22" pos:column="17"/></operator><name pos:line="22" pos:column="17">p<pos:position pos:line="22" pos:column="18"/></name> <operator pos:line="22" pos:column="19">-<pos:position pos:line="22" pos:column="20"/></operator> <name pos:line="22" pos:column="21">data<pos:position pos:line="22" pos:column="25"/></name><operator pos:line="22" pos:column="25">)<pos:position pos:line="22" pos:column="26"/></operator></expr>;<pos:position pos:line="22" pos:column="27"/></return>
    }<pos:position pos:line="23" pos:column="6"/></block></then></if>

    <comment type="block" pos:line="25" pos:column="5">/* partial match, the buffer is too small to match fully */</comment>
    <if pos:line="26" pos:column="5">if <condition pos:line="26" pos:column="8">(<expr><name pos:line="26" pos:column="9">p<pos:position pos:line="26" pos:column="10"/></name> <operator pos:line="26" pos:column="11">==<pos:position pos:line="26" pos:column="13"/></operator> <name pos:line="26" pos:column="14">ep<pos:position pos:line="26" pos:column="16"/></name></expr>)<pos:position pos:line="26" pos:column="17"/></condition><then pos:line="26" pos:column="17"> <block pos:line="26" pos:column="18">{
        <expr_stmt><expr><name><name pos:line="27" pos:column="9">intern<pos:position pos:line="27" pos:column="15"/></name><operator pos:line="27" pos:column="15">-&gt;<pos:position pos:line="27" pos:column="20"/></operator><name pos:line="27" pos:column="17">parse_pos<pos:position pos:line="27" pos:column="26"/></name></name> <operator pos:line="27" pos:column="27">=<pos:position pos:line="27" pos:column="28"/></operator> <name pos:line="27" pos:column="29">pos<pos:position pos:line="27" pos:column="32"/></name></expr>;<pos:position pos:line="27" pos:column="33"/></expr_stmt>
        <return pos:line="28" pos:column="9">return <expr><operator pos:line="28" pos:column="16">(<pos:position pos:line="28" pos:column="17"/></operator><name pos:line="28" pos:column="17">p<pos:position pos:line="28" pos:column="18"/></name> <operator pos:line="28" pos:column="19">-<pos:position pos:line="28" pos:column="20"/></operator> <name pos:line="28" pos:column="21">data<pos:position pos:line="28" pos:column="25"/></name><operator pos:line="28" pos:column="25">)<pos:position pos:line="28" pos:column="26"/></operator></expr>;<pos:position pos:line="28" pos:column="27"/></return>
    }<pos:position pos:line="29" pos:column="6"/></block></then></if>

    <comment type="block" pos:line="31" pos:column="5">/* no match. It must be an argument string then
     * The caller should cleanup and rewind to the reparse point
     */</comment>
    <expr_stmt><expr><name><name pos:line="34" pos:column="5">intern<pos:position pos:line="34" pos:column="11"/></name><operator pos:line="34" pos:column="11">-&gt;<pos:position pos:line="34" pos:column="16"/></operator><name pos:line="34" pos:column="13">state<pos:position pos:line="34" pos:column="18"/></name></name> <operator pos:line="34" pos:column="19">=<pos:position pos:line="34" pos:column="20"/></operator> <name pos:line="34" pos:column="21">PARSE_ARG<pos:position pos:line="34" pos:column="30"/></name></expr>;<pos:position pos:line="34" pos:column="31"/></expr_stmt>
    <return pos:line="35" pos:column="5">return <expr><literal type="number" pos:line="35" pos:column="12">0<pos:position pos:line="35" pos:column="13"/></literal></expr>;<pos:position pos:line="35" pos:column="14"/></return>
}<pos:position pos:line="36" pos:column="2"/></block></function></unit>

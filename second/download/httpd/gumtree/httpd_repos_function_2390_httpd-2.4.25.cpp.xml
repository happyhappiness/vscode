<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/httpd/gumtree/httpd_repos_function_2390_httpd-2.4.25.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">apr_status_t<pos:position pos:line="1" pos:column="13"/></name></type> <name pos:line="1" pos:column="14">h2_mplx_req_engine_push<pos:position pos:line="1" pos:column="37"/></name><parameter_list pos:line="1" pos:column="37">(<parameter><decl><type><specifier pos:line="1" pos:column="38">const<pos:position pos:line="1" pos:column="43"/></specifier> <name pos:line="1" pos:column="44">char<pos:position pos:line="1" pos:column="48"/></name> <modifier pos:line="1" pos:column="49">*<pos:position pos:line="1" pos:column="50"/></modifier></type><name pos:line="1" pos:column="50">ngn_type<pos:position pos:line="1" pos:column="58"/></name></decl></parameter>, 
                                     <parameter><decl><type><name pos:line="2" pos:column="38">request_rec<pos:position pos:line="2" pos:column="49"/></name> <modifier pos:line="2" pos:column="50">*<pos:position pos:line="2" pos:column="51"/></modifier></type><name pos:line="2" pos:column="51">r<pos:position pos:line="2" pos:column="52"/></name></decl></parameter>,
                                     <parameter><decl><type><name pos:line="3" pos:column="38">http2_req_engine_init<pos:position pos:line="3" pos:column="59"/></name> <modifier pos:line="3" pos:column="60">*<pos:position pos:line="3" pos:column="61"/></modifier></type><name pos:line="3" pos:column="61">einit<pos:position pos:line="3" pos:column="66"/></name></decl></parameter>)<pos:position pos:line="3" pos:column="67"/></parameter_list>
<block pos:line="4" pos:column="1">{
    <decl_stmt><decl><type><name pos:line="5" pos:column="5">apr_status_t<pos:position pos:line="5" pos:column="17"/></name></type> <name pos:line="5" pos:column="18">status<pos:position pos:line="5" pos:column="24"/></name></decl>;<pos:position pos:line="5" pos:column="25"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="6" pos:column="5">h2_mplx<pos:position pos:line="6" pos:column="12"/></name> <modifier pos:line="6" pos:column="13">*<pos:position pos:line="6" pos:column="14"/></modifier></type><name pos:line="6" pos:column="14">m<pos:position pos:line="6" pos:column="15"/></name></decl>;<pos:position pos:line="6" pos:column="16"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="7" pos:column="5">h2_task<pos:position pos:line="7" pos:column="12"/></name> <modifier pos:line="7" pos:column="13">*<pos:position pos:line="7" pos:column="14"/></modifier></type><name pos:line="7" pos:column="14">task<pos:position pos:line="7" pos:column="18"/></name></decl>;<pos:position pos:line="7" pos:column="19"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="8" pos:column="5">int<pos:position pos:line="8" pos:column="8"/></name></type> <name pos:line="8" pos:column="9">acquired<pos:position pos:line="8" pos:column="17"/></name></decl>;<pos:position pos:line="8" pos:column="18"/></decl_stmt>
    
    <expr_stmt><expr><name pos:line="10" pos:column="5">task<pos:position pos:line="10" pos:column="9"/></name> <operator pos:line="10" pos:column="10">=<pos:position pos:line="10" pos:column="11"/></operator> <call><name pos:line="10" pos:column="12">h2_ctx_rget_task<pos:position pos:line="10" pos:column="28"/></name><argument_list pos:line="10" pos:column="28">(<argument><expr><name pos:line="10" pos:column="29">r<pos:position pos:line="10" pos:column="30"/></name></expr></argument>)<pos:position pos:line="10" pos:column="31"/></argument_list></call></expr>;<pos:position pos:line="10" pos:column="32"/></expr_stmt>
    <if pos:line="11" pos:column="5">if <condition pos:line="11" pos:column="8">(<expr><operator pos:line="11" pos:column="9">!<pos:position pos:line="11" pos:column="10"/></operator><name pos:line="11" pos:column="10">task<pos:position pos:line="11" pos:column="14"/></name></expr>)<pos:position pos:line="11" pos:column="15"/></condition><then pos:line="11" pos:column="15"> <block pos:line="11" pos:column="16">{
        <return pos:line="12" pos:column="9">return <expr><name pos:line="12" pos:column="16">APR_ECONNABORTED<pos:position pos:line="12" pos:column="32"/></name></expr>;<pos:position pos:line="12" pos:column="33"/></return>
    }<pos:position pos:line="13" pos:column="6"/></block></then></if>
    <expr_stmt><expr><name pos:line="14" pos:column="5">m<pos:position pos:line="14" pos:column="6"/></name> <operator pos:line="14" pos:column="7">=<pos:position pos:line="14" pos:column="8"/></operator> <name><name pos:line="14" pos:column="9">task<pos:position pos:line="14" pos:column="13"/></name><operator pos:line="14" pos:column="13">-&gt;<pos:position pos:line="14" pos:column="18"/></operator><name pos:line="14" pos:column="15">mplx<pos:position pos:line="14" pos:column="19"/></name></name></expr>;<pos:position pos:line="14" pos:column="20"/></expr_stmt>
    
    <if pos:line="16" pos:column="5">if <condition pos:line="16" pos:column="8">(<expr><operator pos:line="16" pos:column="9">(<pos:position pos:line="16" pos:column="10"/></operator><name pos:line="16" pos:column="10">status<pos:position pos:line="16" pos:column="16"/></name> <operator pos:line="16" pos:column="17">=<pos:position pos:line="16" pos:column="18"/></operator> <call><name pos:line="16" pos:column="19">enter_mutex<pos:position pos:line="16" pos:column="30"/></name><argument_list pos:line="16" pos:column="30">(<argument><expr><name pos:line="16" pos:column="31">m<pos:position pos:line="16" pos:column="32"/></name></expr></argument>, <argument><expr><operator pos:line="16" pos:column="34">&amp;<pos:position pos:line="16" pos:column="39"/></operator><name pos:line="16" pos:column="35">acquired<pos:position pos:line="16" pos:column="43"/></name></expr></argument>)<pos:position pos:line="16" pos:column="44"/></argument_list></call><operator pos:line="16" pos:column="44">)<pos:position pos:line="16" pos:column="45"/></operator> <operator pos:line="16" pos:column="46">==<pos:position pos:line="16" pos:column="48"/></operator> <name pos:line="16" pos:column="49">APR_SUCCESS<pos:position pos:line="16" pos:column="60"/></name></expr>)<pos:position pos:line="16" pos:column="61"/></condition><then pos:line="16" pos:column="61"> <block pos:line="16" pos:column="62">{
        <decl_stmt><decl><type><name pos:line="17" pos:column="9">h2_stream<pos:position pos:line="17" pos:column="18"/></name> <modifier pos:line="17" pos:column="19">*<pos:position pos:line="17" pos:column="20"/></modifier></type><name pos:line="17" pos:column="20">stream<pos:position pos:line="17" pos:column="26"/></name> <init pos:line="17" pos:column="27">= <expr><call><name pos:line="17" pos:column="29">h2_ihash_get<pos:position pos:line="17" pos:column="41"/></name><argument_list pos:line="17" pos:column="41">(<argument><expr><name><name pos:line="17" pos:column="42">m<pos:position pos:line="17" pos:column="43"/></name><operator pos:line="17" pos:column="43">-&gt;<pos:position pos:line="17" pos:column="48"/></operator><name pos:line="17" pos:column="45">streams<pos:position pos:line="17" pos:column="52"/></name></name></expr></argument>, <argument><expr><name><name pos:line="17" pos:column="54">task<pos:position pos:line="17" pos:column="58"/></name><operator pos:line="17" pos:column="58">-&gt;<pos:position pos:line="17" pos:column="63"/></operator><name pos:line="17" pos:column="60">stream_id<pos:position pos:line="17" pos:column="69"/></name></name></expr></argument>)<pos:position pos:line="17" pos:column="70"/></argument_list></call></expr></init></decl>;<pos:position pos:line="17" pos:column="71"/></decl_stmt>
        
        <if pos:line="19" pos:column="9">if <condition pos:line="19" pos:column="12">(<expr><name pos:line="19" pos:column="13">stream<pos:position pos:line="19" pos:column="19"/></name></expr>)<pos:position pos:line="19" pos:column="20"/></condition><then pos:line="19" pos:column="20"> <block pos:line="19" pos:column="21">{
            <expr_stmt><expr><name pos:line="20" pos:column="13">status<pos:position pos:line="20" pos:column="19"/></name> <operator pos:line="20" pos:column="20">=<pos:position pos:line="20" pos:column="21"/></operator> <call><name pos:line="20" pos:column="22">h2_ngn_shed_push_request<pos:position pos:line="20" pos:column="46"/></name><argument_list pos:line="20" pos:column="46">(<argument><expr><name><name pos:line="20" pos:column="47">m<pos:position pos:line="20" pos:column="48"/></name><operator pos:line="20" pos:column="48">-&gt;<pos:position pos:line="20" pos:column="53"/></operator><name pos:line="20" pos:column="50">ngn_shed<pos:position pos:line="20" pos:column="58"/></name></name></expr></argument>, <argument><expr><name pos:line="20" pos:column="60">ngn_type<pos:position pos:line="20" pos:column="68"/></name></expr></argument>, <argument><expr><name pos:line="20" pos:column="70">r<pos:position pos:line="20" pos:column="71"/></name></expr></argument>, <argument><expr><name pos:line="20" pos:column="73">einit<pos:position pos:line="20" pos:column="78"/></name></expr></argument>)<pos:position pos:line="20" pos:column="79"/></argument_list></call></expr>;<pos:position pos:line="20" pos:column="80"/></expr_stmt>
        }<pos:position pos:line="21" pos:column="10"/></block></then>
        <else pos:line="22" pos:column="9">else <block pos:line="22" pos:column="14">{
            <expr_stmt><expr><name pos:line="23" pos:column="13">status<pos:position pos:line="23" pos:column="19"/></name> <operator pos:line="23" pos:column="20">=<pos:position pos:line="23" pos:column="21"/></operator> <name pos:line="23" pos:column="22">APR_ECONNABORTED<pos:position pos:line="23" pos:column="38"/></name></expr>;<pos:position pos:line="23" pos:column="39"/></expr_stmt>
        }<pos:position pos:line="24" pos:column="10"/></block></else></if>
        <expr_stmt><expr><call><name pos:line="25" pos:column="9">leave_mutex<pos:position pos:line="25" pos:column="20"/></name><argument_list pos:line="25" pos:column="20">(<argument><expr><name pos:line="25" pos:column="21">m<pos:position pos:line="25" pos:column="22"/></name></expr></argument>, <argument><expr><name pos:line="25" pos:column="24">acquired<pos:position pos:line="25" pos:column="32"/></name></expr></argument>)<pos:position pos:line="25" pos:column="33"/></argument_list></call></expr>;<pos:position pos:line="25" pos:column="34"/></expr_stmt>
    }<pos:position pos:line="26" pos:column="6"/></block></then></if>
    <return pos:line="27" pos:column="5">return <expr><name pos:line="27" pos:column="12">status<pos:position pos:line="27" pos:column="18"/></name></expr>;<pos:position pos:line="27" pos:column="19"/></return>
}<pos:position pos:line="28" pos:column="2"/></block></function></unit>

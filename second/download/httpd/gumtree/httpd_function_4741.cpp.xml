<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/httpd/gumtree/httpd_function_4741.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">int<pos:position pos:line="1" pos:column="4"/></name></type> <name pos:line="1" pos:column="5">ssl_hook_Access<pos:position pos:line="1" pos:column="20"/></name><parameter_list pos:line="1" pos:column="20">(<parameter><decl><type><name pos:line="1" pos:column="21">request_rec<pos:position pos:line="1" pos:column="32"/></name> <modifier pos:line="1" pos:column="33">*<pos:position pos:line="1" pos:column="34"/></modifier></type><name pos:line="1" pos:column="34">r<pos:position pos:line="1" pos:column="35"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="36"/></parameter_list>
<block pos:line="2" pos:column="1">{
    <decl_stmt><decl><type><name pos:line="3" pos:column="5">SSLDirConfigRec<pos:position pos:line="3" pos:column="20"/></name> <modifier pos:line="3" pos:column="21">*<pos:position pos:line="3" pos:column="22"/></modifier></type><name pos:line="3" pos:column="22">dc<pos:position pos:line="3" pos:column="24"/></name>         <init pos:line="3" pos:column="33">= <expr><call><name pos:line="3" pos:column="35">myDirConfig<pos:position pos:line="3" pos:column="46"/></name><argument_list pos:line="3" pos:column="46">(<argument><expr><name pos:line="3" pos:column="47">r<pos:position pos:line="3" pos:column="48"/></name></expr></argument>)<pos:position pos:line="3" pos:column="49"/></argument_list></call></expr></init></decl>;<pos:position pos:line="3" pos:column="50"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="4" pos:column="5">SSLSrvConfigRec<pos:position pos:line="4" pos:column="20"/></name> <modifier pos:line="4" pos:column="21">*<pos:position pos:line="4" pos:column="22"/></modifier></type><name pos:line="4" pos:column="22">sc<pos:position pos:line="4" pos:column="24"/></name>         <init pos:line="4" pos:column="33">= <expr><call><name pos:line="4" pos:column="35">mySrvConfig<pos:position pos:line="4" pos:column="46"/></name><argument_list pos:line="4" pos:column="46">(<argument><expr><name><name pos:line="4" pos:column="47">r<pos:position pos:line="4" pos:column="48"/></name><operator pos:line="4" pos:column="48">-&gt;<pos:position pos:line="4" pos:column="53"/></operator><name pos:line="4" pos:column="50">server<pos:position pos:line="4" pos:column="56"/></name></name></expr></argument>)<pos:position pos:line="4" pos:column="57"/></argument_list></call></expr></init></decl>;<pos:position pos:line="4" pos:column="58"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="5" pos:column="5">SSLConnRec<pos:position pos:line="5" pos:column="15"/></name> <modifier pos:line="5" pos:column="16">*<pos:position pos:line="5" pos:column="17"/></modifier></type><name pos:line="5" pos:column="17">sslconn<pos:position pos:line="5" pos:column="24"/></name>         <init pos:line="5" pos:column="33">= <expr><call><name pos:line="5" pos:column="35">myConnConfig<pos:position pos:line="5" pos:column="47"/></name><argument_list pos:line="5" pos:column="47">(<argument><expr><name><name pos:line="5" pos:column="48">r<pos:position pos:line="5" pos:column="49"/></name><operator pos:line="5" pos:column="49">-&gt;<pos:position pos:line="5" pos:column="54"/></operator><name pos:line="5" pos:column="51">connection<pos:position pos:line="5" pos:column="61"/></name></name></expr></argument>)<pos:position pos:line="5" pos:column="62"/></argument_list></call></expr></init></decl>;<pos:position pos:line="5" pos:column="63"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="6" pos:column="5">SSL<pos:position pos:line="6" pos:column="8"/></name> <modifier pos:line="6" pos:column="9">*<pos:position pos:line="6" pos:column="10"/></modifier></type><name pos:line="6" pos:column="10">ssl<pos:position pos:line="6" pos:column="13"/></name>                    <init pos:line="6" pos:column="33">= <expr><ternary><condition><expr><name pos:line="6" pos:column="35">sslconn<pos:position pos:line="6" pos:column="42"/></name></expr> ?<pos:position pos:line="6" pos:column="44"/></condition><then pos:line="6" pos:column="44"> <expr><name><name pos:line="6" pos:column="45">sslconn<pos:position pos:line="6" pos:column="52"/></name><operator pos:line="6" pos:column="52">-&gt;<pos:position pos:line="6" pos:column="57"/></operator><name pos:line="6" pos:column="54">ssl<pos:position pos:line="6" pos:column="57"/></name></name></expr> <pos:position pos:line="6" pos:column="58"/></then><else pos:line="6" pos:column="58">: <expr><name pos:line="6" pos:column="60">NULL<pos:position pos:line="6" pos:column="64"/></name></expr></else></ternary></expr></init></decl>;<pos:position pos:line="6" pos:column="65"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="7" pos:column="5">server_rec<pos:position pos:line="7" pos:column="15"/></name> <modifier pos:line="7" pos:column="16">*<pos:position pos:line="7" pos:column="17"/></modifier></type><name pos:line="7" pos:column="17">handshakeserver<pos:position pos:line="7" pos:column="32"/></name> <init pos:line="7" pos:column="33">= <expr><ternary><condition><expr><name pos:line="7" pos:column="35">sslconn<pos:position pos:line="7" pos:column="42"/></name></expr> ?<pos:position pos:line="7" pos:column="44"/></condition><then pos:line="7" pos:column="44"> <expr><name><name pos:line="7" pos:column="45">sslconn<pos:position pos:line="7" pos:column="52"/></name><operator pos:line="7" pos:column="52">-&gt;<pos:position pos:line="7" pos:column="57"/></operator><name pos:line="7" pos:column="54">server<pos:position pos:line="7" pos:column="60"/></name></name></expr> <pos:position pos:line="7" pos:column="61"/></then><else pos:line="7" pos:column="61">: <expr><name pos:line="7" pos:column="63">NULL<pos:position pos:line="7" pos:column="67"/></name></expr></else></ternary></expr></init></decl>;<pos:position pos:line="7" pos:column="68"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="8" pos:column="5">SSL_CTX<pos:position pos:line="8" pos:column="12"/></name> <modifier pos:line="8" pos:column="13">*<pos:position pos:line="8" pos:column="14"/></modifier></type><name pos:line="8" pos:column="14">ctx<pos:position pos:line="8" pos:column="17"/></name> <init pos:line="8" pos:column="18">= <expr><name pos:line="8" pos:column="20">NULL<pos:position pos:line="8" pos:column="24"/></name></expr></init></decl>;<pos:position pos:line="8" pos:column="25"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="9" pos:column="5">apr_array_header_t<pos:position pos:line="9" pos:column="23"/></name> <modifier pos:line="9" pos:column="24">*<pos:position pos:line="9" pos:column="25"/></modifier></type><name pos:line="9" pos:column="25">requires<pos:position pos:line="9" pos:column="33"/></name></decl>;<pos:position pos:line="9" pos:column="34"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="10" pos:column="5">ssl_require_t<pos:position pos:line="10" pos:column="18"/></name> <modifier pos:line="10" pos:column="19">*<pos:position pos:line="10" pos:column="20"/></modifier></type><name pos:line="10" pos:column="20">ssl_requires<pos:position pos:line="10" pos:column="32"/></name></decl>;<pos:position pos:line="10" pos:column="33"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="11" pos:column="5">char<pos:position pos:line="11" pos:column="9"/></name> <modifier pos:line="11" pos:column="10">*<pos:position pos:line="11" pos:column="11"/></modifier></type><name pos:line="11" pos:column="11">cp<pos:position pos:line="11" pos:column="13"/></name></decl>;<pos:position pos:line="11" pos:column="14"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="12" pos:column="5">int<pos:position pos:line="12" pos:column="8"/></name></type> <name pos:line="12" pos:column="9">ok<pos:position pos:line="12" pos:column="11"/></name></decl>, <decl><type ref="prev"/><name pos:line="12" pos:column="13">i<pos:position pos:line="12" pos:column="14"/></name></decl>;<pos:position pos:line="12" pos:column="15"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="13" pos:column="5">BOOL<pos:position pos:line="13" pos:column="9"/></name></type> <name pos:line="13" pos:column="10">renegotiate<pos:position pos:line="13" pos:column="21"/></name> <init pos:line="13" pos:column="22">= <expr><name pos:line="13" pos:column="24">FALSE<pos:position pos:line="13" pos:column="29"/></name></expr></init></decl>, <decl><type ref="prev"/><name pos:line="13" pos:column="31">renegotiate_quick<pos:position pos:line="13" pos:column="48"/></name> <init pos:line="13" pos:column="49">= <expr><name pos:line="13" pos:column="51">FALSE<pos:position pos:line="13" pos:column="56"/></name></expr></init></decl>;<pos:position pos:line="13" pos:column="57"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="14" pos:column="5">X509<pos:position pos:line="14" pos:column="9"/></name> <modifier pos:line="14" pos:column="10">*<pos:position pos:line="14" pos:column="11"/></modifier></type><name pos:line="14" pos:column="11">cert<pos:position pos:line="14" pos:column="15"/></name></decl>;<pos:position pos:line="14" pos:column="16"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="15" pos:column="5">X509<pos:position pos:line="15" pos:column="9"/></name> <modifier pos:line="15" pos:column="10">*<pos:position pos:line="15" pos:column="11"/></modifier></type><name pos:line="15" pos:column="11">peercert<pos:position pos:line="15" pos:column="19"/></name></decl>;<pos:position pos:line="15" pos:column="20"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="16" pos:column="5">X509_STORE<pos:position pos:line="16" pos:column="15"/></name> <modifier pos:line="16" pos:column="16">*<pos:position pos:line="16" pos:column="17"/></modifier></type><name pos:line="16" pos:column="17">cert_store<pos:position pos:line="16" pos:column="27"/></name> <init pos:line="16" pos:column="28">= <expr><name pos:line="16" pos:column="30">NULL<pos:position pos:line="16" pos:column="34"/></name></expr></init></decl>;<pos:position pos:line="16" pos:column="35"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="17" pos:column="5">X509_STORE_CTX<pos:position pos:line="17" pos:column="19"/></name></type> <name pos:line="17" pos:column="20">cert_store_ctx<pos:position pos:line="17" pos:column="34"/></name></decl>;<pos:position pos:line="17" pos:column="35"/></decl_stmt>
    <expr_stmt><expr><call><name pos:line="18" pos:column="5">STACK_OF<pos:position pos:line="18" pos:column="13"/></name><argument_list pos:line="18" pos:column="13">(<argument><expr><name pos:line="18" pos:column="14">SSL_CIPHER<pos:position pos:line="18" pos:column="24"/></name></expr></argument>)<pos:position pos:line="18" pos:column="25"/></argument_list></call> <operator pos:line="18" pos:column="26">*<pos:position pos:line="18" pos:column="27"/></operator><name pos:line="18" pos:column="27">cipher_list_old<pos:position pos:line="18" pos:column="42"/></name> <operator pos:line="18" pos:column="43">=<pos:position pos:line="18" pos:column="44"/></operator> <name pos:line="18" pos:column="45">NULL<pos:position pos:line="18" pos:column="49"/></name></expr><operator pos:line="18" pos:column="49">,<pos:position pos:line="18" pos:column="50"/></operator> <expr><operator pos:line="18" pos:column="51">*<pos:position pos:line="18" pos:column="52"/></operator><name pos:line="18" pos:column="52">cipher_list<pos:position pos:line="18" pos:column="63"/></name> <operator pos:line="18" pos:column="64">=<pos:position pos:line="18" pos:column="65"/></operator> <name pos:line="18" pos:column="66">NULL<pos:position pos:line="18" pos:column="70"/></name></expr>;<pos:position pos:line="18" pos:column="71"/></expr_stmt>
    <decl_stmt><decl><type><specifier pos:line="19" pos:column="5">const<pos:position pos:line="19" pos:column="10"/></specifier> <name pos:line="19" pos:column="11">SSL_CIPHER<pos:position pos:line="19" pos:column="21"/></name> <modifier pos:line="19" pos:column="22">*<pos:position pos:line="19" pos:column="23"/></modifier></type><name pos:line="19" pos:column="23">cipher<pos:position pos:line="19" pos:column="29"/></name> <init pos:line="19" pos:column="30">= <expr><name pos:line="19" pos:column="32">NULL<pos:position pos:line="19" pos:column="36"/></name></expr></init></decl>;<pos:position pos:line="19" pos:column="37"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="20" pos:column="5">int<pos:position pos:line="20" pos:column="8"/></name></type> <name pos:line="20" pos:column="9">depth<pos:position pos:line="20" pos:column="14"/></name></decl>, <decl><type ref="prev"/><name pos:line="20" pos:column="16">verify_old<pos:position pos:line="20" pos:column="26"/></name></decl>, <decl><type ref="prev"/><name pos:line="20" pos:column="28">verify<pos:position pos:line="20" pos:column="34"/></name></decl>, <decl><type ref="prev"/><name pos:line="20" pos:column="36">n<pos:position pos:line="20" pos:column="37"/></name></decl>;<pos:position pos:line="20" pos:column="38"/></decl_stmt>

    <if pos:line="22" pos:column="5">if <condition pos:line="22" pos:column="8">(<expr><name pos:line="22" pos:column="9">ssl<pos:position pos:line="22" pos:column="12"/></name></expr>)<pos:position pos:line="22" pos:column="13"/></condition><then pos:line="22" pos:column="13"> <block pos:line="22" pos:column="14">{
        <expr_stmt><expr><name pos:line="23" pos:column="9">ctx<pos:position pos:line="23" pos:column="12"/></name> <operator pos:line="23" pos:column="13">=<pos:position pos:line="23" pos:column="14"/></operator> <call><name pos:line="23" pos:column="15">SSL_get_SSL_CTX<pos:position pos:line="23" pos:column="30"/></name><argument_list pos:line="23" pos:column="30">(<argument><expr><name pos:line="23" pos:column="31">ssl<pos:position pos:line="23" pos:column="34"/></name></expr></argument>)<pos:position pos:line="23" pos:column="35"/></argument_list></call></expr>;<pos:position pos:line="23" pos:column="36"/></expr_stmt>
    }<pos:position pos:line="24" pos:column="6"/></block></then></if>

    <comment type="block" pos:line="26" pos:column="5">/*
     * Support for SSLRequireSSL directive
     */</comment>
    <if pos:line="29" pos:column="5">if <condition pos:line="29" pos:column="8">(<expr><name><name pos:line="29" pos:column="9">dc<pos:position pos:line="29" pos:column="11"/></name><operator pos:line="29" pos:column="11">-&gt;<pos:position pos:line="29" pos:column="16"/></operator><name pos:line="29" pos:column="13">bSSLRequired<pos:position pos:line="29" pos:column="25"/></name></name> <operator pos:line="29" pos:column="26">&amp;&amp;<pos:position pos:line="29" pos:column="36"/></operator> <operator pos:line="29" pos:column="29">!<pos:position pos:line="29" pos:column="30"/></operator><name pos:line="29" pos:column="30">ssl<pos:position pos:line="29" pos:column="33"/></name></expr>)<pos:position pos:line="29" pos:column="34"/></condition><then pos:line="29" pos:column="34"> <block pos:line="29" pos:column="35">{
        <if pos:line="30" pos:column="9">if <condition pos:line="30" pos:column="12">(<expr><name><name pos:line="30" pos:column="13">sc<pos:position pos:line="30" pos:column="15"/></name><operator pos:line="30" pos:column="15">-&gt;<pos:position pos:line="30" pos:column="20"/></operator><name pos:line="30" pos:column="17">enabled<pos:position pos:line="30" pos:column="24"/></name></name> <operator pos:line="30" pos:column="25">==<pos:position pos:line="30" pos:column="27"/></operator> <name pos:line="30" pos:column="28">SSL_ENABLED_OPTIONAL<pos:position pos:line="30" pos:column="48"/></name></expr>)<pos:position pos:line="30" pos:column="49"/></condition><then pos:line="30" pos:column="49"> <block pos:line="30" pos:column="50">{
            <comment type="block" pos:line="31" pos:column="13">/* This vhost was configured for optional SSL, just tell the
             * client that we need to upgrade.
             */</comment>
            <expr_stmt><expr><call><name pos:line="34" pos:column="13">apr_table_setn<pos:position pos:line="34" pos:column="27"/></name><argument_list pos:line="34" pos:column="27">(<argument><expr><name><name pos:line="34" pos:column="28">r<pos:position pos:line="34" pos:column="29"/></name><operator pos:line="34" pos:column="29">-&gt;<pos:position pos:line="34" pos:column="34"/></operator><name pos:line="34" pos:column="31">err_headers_out<pos:position pos:line="34" pos:column="46"/></name></name></expr></argument>, <argument><expr><literal type="string" pos:line="34" pos:column="48">"Upgrade"<pos:position pos:line="34" pos:column="57"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="34" pos:column="59">"TLS/1.0, HTTP/1.1"<pos:position pos:line="34" pos:column="78"/></literal></expr></argument>)<pos:position pos:line="34" pos:column="79"/></argument_list></call></expr>;<pos:position pos:line="34" pos:column="80"/></expr_stmt>
            <expr_stmt><expr><call><name pos:line="35" pos:column="13">apr_table_setn<pos:position pos:line="35" pos:column="27"/></name><argument_list pos:line="35" pos:column="27">(<argument><expr><name><name pos:line="35" pos:column="28">r<pos:position pos:line="35" pos:column="29"/></name><operator pos:line="35" pos:column="29">-&gt;<pos:position pos:line="35" pos:column="34"/></operator><name pos:line="35" pos:column="31">err_headers_out<pos:position pos:line="35" pos:column="46"/></name></name></expr></argument>, <argument><expr><literal type="string" pos:line="35" pos:column="48">"Connection"<pos:position pos:line="35" pos:column="60"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="35" pos:column="62">"Upgrade"<pos:position pos:line="35" pos:column="71"/></literal></expr></argument>)<pos:position pos:line="35" pos:column="72"/></argument_list></call></expr>;<pos:position pos:line="35" pos:column="73"/></expr_stmt>

            <return pos:line="37" pos:column="13">return <expr><name pos:line="37" pos:column="20">HTTP_UPGRADE_REQUIRED<pos:position pos:line="37" pos:column="41"/></name></expr>;<pos:position pos:line="37" pos:column="42"/></return>
        }<pos:position pos:line="38" pos:column="10"/></block></then></if>

        <expr_stmt><expr><call><name pos:line="40" pos:column="9">ap_log_rerror<pos:position pos:line="40" pos:column="22"/></name><argument_list pos:line="40" pos:column="22">(<argument><expr><name pos:line="40" pos:column="23">APLOG_MARK<pos:position pos:line="40" pos:column="33"/></name></expr></argument>, <argument><expr><name pos:line="40" pos:column="35">APLOG_ERR<pos:position pos:line="40" pos:column="44"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="40" pos:column="46">0<pos:position pos:line="40" pos:column="47"/></literal></expr></argument>, <argument><expr><name pos:line="40" pos:column="49">r<pos:position pos:line="40" pos:column="50"/></name></expr></argument>,
                      <argument><expr><literal type="string" pos:line="41" pos:column="23">"access to %s failed, reason: %s"<pos:position pos:line="41" pos:column="56"/></literal></expr></argument>,
                      <argument><expr><name><name pos:line="42" pos:column="23">r<pos:position pos:line="42" pos:column="24"/></name><operator pos:line="42" pos:column="24">-&gt;<pos:position pos:line="42" pos:column="29"/></operator><name pos:line="42" pos:column="26">filename<pos:position pos:line="42" pos:column="34"/></name></name></expr></argument>, <argument><expr><literal type="string" pos:line="42" pos:column="36">"SSL connection required"<pos:position pos:line="42" pos:column="61"/></literal></expr></argument>)<pos:position pos:line="42" pos:column="62"/></argument_list></call></expr>;<pos:position pos:line="42" pos:column="63"/></expr_stmt>

        <comment type="block" pos:line="44" pos:column="9">/* remember forbidden access for strict require option */</comment>
        <expr_stmt><expr><call><name pos:line="45" pos:column="9">apr_table_setn<pos:position pos:line="45" pos:column="23"/></name><argument_list pos:line="45" pos:column="23">(<argument><expr><name><name pos:line="45" pos:column="24">r<pos:position pos:line="45" pos:column="25"/></name><operator pos:line="45" pos:column="25">-&gt;<pos:position pos:line="45" pos:column="30"/></operator><name pos:line="45" pos:column="27">notes<pos:position pos:line="45" pos:column="32"/></name></name></expr></argument>, <argument><expr><literal type="string" pos:line="45" pos:column="34">"ssl-access-forbidden"<pos:position pos:line="45" pos:column="56"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="45" pos:column="58">"1"<pos:position pos:line="45" pos:column="61"/></literal></expr></argument>)<pos:position pos:line="45" pos:column="62"/></argument_list></call></expr>;<pos:position pos:line="45" pos:column="63"/></expr_stmt>

        <return pos:line="47" pos:column="9">return <expr><name pos:line="47" pos:column="16">HTTP_FORBIDDEN<pos:position pos:line="47" pos:column="30"/></name></expr>;<pos:position pos:line="47" pos:column="31"/></return>
    }<pos:position pos:line="48" pos:column="6"/></block></then></if>

    <comment type="block" pos:line="50" pos:column="5">/*
     * Check to see whether SSL is in use; if it's not, then no
     * further access control checks are relevant.  (the test for
     * sc-&gt;enabled is probably strictly unnecessary)
     */</comment>
    <if pos:line="55" pos:column="5">if <condition pos:line="55" pos:column="8">(<expr><name><name pos:line="55" pos:column="9">sc<pos:position pos:line="55" pos:column="11"/></name><operator pos:line="55" pos:column="11">-&gt;<pos:position pos:line="55" pos:column="16"/></operator><name pos:line="55" pos:column="13">enabled<pos:position pos:line="55" pos:column="20"/></name></name> <operator pos:line="55" pos:column="21">==<pos:position pos:line="55" pos:column="23"/></operator> <name pos:line="55" pos:column="24">SSL_ENABLED_FALSE<pos:position pos:line="55" pos:column="41"/></name> <operator pos:line="55" pos:column="42">||<pos:position pos:line="55" pos:column="44"/></operator> <operator pos:line="55" pos:column="45">!<pos:position pos:line="55" pos:column="46"/></operator><name pos:line="55" pos:column="46">ssl<pos:position pos:line="55" pos:column="49"/></name></expr>)<pos:position pos:line="55" pos:column="50"/></condition><then pos:line="55" pos:column="50"> <block pos:line="55" pos:column="51">{
        <return pos:line="56" pos:column="9">return <expr><name pos:line="56" pos:column="16">DECLINED<pos:position pos:line="56" pos:column="24"/></name></expr>;<pos:position pos:line="56" pos:column="25"/></return>
    }<pos:position pos:line="57" pos:column="6"/></block></then></if>

    <comment type="block" pos:line="59" pos:column="5">/*
     * Support for per-directory reconfigured SSL connection parameters.
     *
     * This is implemented by forcing an SSL renegotiation with the
     * reconfigured parameter suite. But Apache's internal API processing
     * makes our life very hard here, because when internal sub-requests occur
     * we nevertheless should avoid multiple unnecessary SSL handshakes (they
     * require extra network I/O and especially time to perform).
     *
     * But the optimization for filtering out the unnecessary handshakes isn't
     * obvious and trivial.  Especially because while Apache is in its
     * sub-request processing the client could force additional handshakes,
     * too. And these take place perhaps without our notice. So the only
     * possibility is to explicitly _ask_ OpenSSL whether the renegotiation
     * has to be performed or not. It has to performed when some parameters
     * which were previously known (by us) are not those we've now
     * reconfigured (as known by OpenSSL) or (in optimized way) at least when
     * the reconfigured parameter suite is stronger (more restrictions) than
     * the currently active one.
     */</comment>

    <comment type="block" pos:line="80" pos:column="5">/*
     * Override of SSLCipherSuite
     *
     * We provide two options here:
     *
     * o The paranoid and default approach where we force a renegotiation when
     *   the cipher suite changed in _any_ way (which is straight-forward but
     *   often forces renegotiations too often and is perhaps not what the
     *   user actually wanted).
     *
     * o The optimized and still secure way where we force a renegotiation
     *   only if the currently active cipher is no longer contained in the
     *   reconfigured/new cipher suite. Any other changes are not important
     *   because it's the servers choice to select a cipher from the ones the
     *   client supports. So as long as the current cipher is still in the new
     *   cipher suite we're happy. Because we can assume we would have
     *   selected it again even when other (better) ciphers exists now in the
     *   new cipher suite. This approach is fine because the user explicitly
     *   has to enable this via ``SSLOptions +OptRenegotiate''. So we do no
     *   implicit optimizations.
     */</comment>
    <if pos:line="101" pos:column="5">if <condition pos:line="101" pos:column="8">(<expr><name><name pos:line="101" pos:column="9">dc<pos:position pos:line="101" pos:column="11"/></name><operator pos:line="101" pos:column="11">-&gt;<pos:position pos:line="101" pos:column="16"/></operator><name pos:line="101" pos:column="13">szCipherSuite<pos:position pos:line="101" pos:column="26"/></name></name> <operator pos:line="101" pos:column="27">||<pos:position pos:line="101" pos:column="29"/></operator> <operator pos:line="101" pos:column="30">(<pos:position pos:line="101" pos:column="31"/></operator><name><name pos:line="101" pos:column="31">r<pos:position pos:line="101" pos:column="32"/></name><operator pos:line="101" pos:column="32">-&gt;<pos:position pos:line="101" pos:column="37"/></operator><name pos:line="101" pos:column="34">server<pos:position pos:line="101" pos:column="40"/></name></name> <operator pos:line="101" pos:column="41">!=<pos:position pos:line="101" pos:column="43"/></operator> <name pos:line="101" pos:column="44">handshakeserver<pos:position pos:line="101" pos:column="59"/></name><operator pos:line="101" pos:column="59">)<pos:position pos:line="101" pos:column="60"/></operator></expr>)<pos:position pos:line="101" pos:column="61"/></condition><then pos:line="101" pos:column="61"> <block pos:line="101" pos:column="62">{
        <comment type="block" pos:line="102" pos:column="9">/* remember old state */</comment>

        <if pos:line="104" pos:column="9">if <condition pos:line="104" pos:column="12">(<expr><name><name pos:line="104" pos:column="13">dc<pos:position pos:line="104" pos:column="15"/></name><operator pos:line="104" pos:column="15">-&gt;<pos:position pos:line="104" pos:column="20"/></operator><name pos:line="104" pos:column="17">nOptions<pos:position pos:line="104" pos:column="25"/></name></name> <operator pos:line="104" pos:column="26">&amp;<pos:position pos:line="104" pos:column="31"/></operator> <name pos:line="104" pos:column="28">SSL_OPT_OPTRENEGOTIATE<pos:position pos:line="104" pos:column="50"/></name></expr>)<pos:position pos:line="104" pos:column="51"/></condition><then pos:line="104" pos:column="51"> <block pos:line="104" pos:column="52">{
            <expr_stmt><expr><name pos:line="105" pos:column="13">cipher<pos:position pos:line="105" pos:column="19"/></name> <operator pos:line="105" pos:column="20">=<pos:position pos:line="105" pos:column="21"/></operator> <call><name pos:line="105" pos:column="22">SSL_get_current_cipher<pos:position pos:line="105" pos:column="44"/></name><argument_list pos:line="105" pos:column="44">(<argument><expr><name pos:line="105" pos:column="45">ssl<pos:position pos:line="105" pos:column="48"/></name></expr></argument>)<pos:position pos:line="105" pos:column="49"/></argument_list></call></expr>;<pos:position pos:line="105" pos:column="50"/></expr_stmt>
        }<pos:position pos:line="106" pos:column="10"/></block></then>
        <else pos:line="107" pos:column="9">else <block pos:line="107" pos:column="14">{
            <expr_stmt><expr><name pos:line="108" pos:column="13">cipher_list_old<pos:position pos:line="108" pos:column="28"/></name> <operator pos:line="108" pos:column="29">=<pos:position pos:line="108" pos:column="30"/></operator> <operator pos:line="108" pos:column="31">(<pos:position pos:line="108" pos:column="32"/></operator><call><name pos:line="108" pos:column="32">STACK_OF<pos:position pos:line="108" pos:column="40"/></name><argument_list pos:line="108" pos:column="40">(<argument><expr><name pos:line="108" pos:column="41">SSL_CIPHER<pos:position pos:line="108" pos:column="51"/></name></expr></argument>)<pos:position pos:line="108" pos:column="52"/></argument_list></call> <operator pos:line="108" pos:column="53">*<pos:position pos:line="108" pos:column="54"/></operator><operator pos:line="108" pos:column="54">)<pos:position pos:line="108" pos:column="55"/></operator><call><name pos:line="108" pos:column="55">SSL_get_ciphers<pos:position pos:line="108" pos:column="70"/></name><argument_list pos:line="108" pos:column="70">(<argument><expr><name pos:line="108" pos:column="71">ssl<pos:position pos:line="108" pos:column="74"/></name></expr></argument>)<pos:position pos:line="108" pos:column="75"/></argument_list></call></expr>;<pos:position pos:line="108" pos:column="76"/></expr_stmt>

            <if pos:line="110" pos:column="13">if <condition pos:line="110" pos:column="16">(<expr><name pos:line="110" pos:column="17">cipher_list_old<pos:position pos:line="110" pos:column="32"/></name></expr>)<pos:position pos:line="110" pos:column="33"/></condition><then pos:line="110" pos:column="33"> <block pos:line="110" pos:column="34">{
                <expr_stmt><expr><name pos:line="111" pos:column="17">cipher_list_old<pos:position pos:line="111" pos:column="32"/></name> <operator pos:line="111" pos:column="33">=<pos:position pos:line="111" pos:column="34"/></operator> <call><name pos:line="111" pos:column="35">sk_SSL_CIPHER_dup<pos:position pos:line="111" pos:column="52"/></name><argument_list pos:line="111" pos:column="52">(<argument><expr><name pos:line="111" pos:column="53">cipher_list_old<pos:position pos:line="111" pos:column="68"/></name></expr></argument>)<pos:position pos:line="111" pos:column="69"/></argument_list></call></expr>;<pos:position pos:line="111" pos:column="70"/></expr_stmt>
            }<pos:position pos:line="112" pos:column="14"/></block></then></if>
        }<pos:position pos:line="113" pos:column="10"/></block></else></if>

        <comment type="block" pos:line="115" pos:column="9">/* configure new state */</comment>
        <if pos:line="116" pos:column="9">if <condition pos:line="116" pos:column="12">(<expr><operator pos:line="116" pos:column="13">(<pos:position pos:line="116" pos:column="14"/></operator><name><name pos:line="116" pos:column="14">dc<pos:position pos:line="116" pos:column="16"/></name><operator pos:line="116" pos:column="16">-&gt;<pos:position pos:line="116" pos:column="21"/></operator><name pos:line="116" pos:column="18">szCipherSuite<pos:position pos:line="116" pos:column="31"/></name></name> <operator pos:line="116" pos:column="32">||<pos:position pos:line="116" pos:column="34"/></operator> <name><name pos:line="116" pos:column="35">sc<pos:position pos:line="116" pos:column="37"/></name><operator pos:line="116" pos:column="37">-&gt;<pos:position pos:line="116" pos:column="42"/></operator><name pos:line="116" pos:column="39">server<pos:position pos:line="116" pos:column="45"/></name><operator pos:line="116" pos:column="45">-&gt;<pos:position pos:line="116" pos:column="50"/></operator><name pos:line="116" pos:column="47">auth<pos:position pos:line="116" pos:column="51"/></name><operator pos:line="116" pos:column="51">.<pos:position pos:line="116" pos:column="52"/></operator><name pos:line="116" pos:column="52">cipher_suite<pos:position pos:line="116" pos:column="64"/></name></name><operator pos:line="116" pos:column="64">)<pos:position pos:line="116" pos:column="65"/></operator> <operator pos:line="116" pos:column="66">&amp;&amp;<pos:position pos:line="116" pos:column="76"/></operator>
            <operator pos:line="117" pos:column="13">!<pos:position pos:line="117" pos:column="14"/></operator><call><name pos:line="117" pos:column="14">modssl_set_cipher_list<pos:position pos:line="117" pos:column="36"/></name><argument_list pos:line="117" pos:column="36">(<argument><expr><name pos:line="117" pos:column="37">ssl<pos:position pos:line="117" pos:column="40"/></name></expr></argument>, <argument><expr><ternary><condition><expr><name><name pos:line="117" pos:column="42">dc<pos:position pos:line="117" pos:column="44"/></name><operator pos:line="117" pos:column="44">-&gt;<pos:position pos:line="117" pos:column="49"/></operator><name pos:line="117" pos:column="46">szCipherSuite<pos:position pos:line="117" pos:column="59"/></name></name></expr> ?<pos:position pos:line="117" pos:column="61"/></condition><then pos:line="117" pos:column="61">
                                         <expr><name><name pos:line="118" pos:column="42">dc<pos:position pos:line="118" pos:column="44"/></name><operator pos:line="118" pos:column="44">-&gt;<pos:position pos:line="118" pos:column="49"/></operator><name pos:line="118" pos:column="46">szCipherSuite<pos:position pos:line="118" pos:column="59"/></name></name></expr> <pos:position pos:line="118" pos:column="60"/></then><else pos:line="118" pos:column="60">:
                                         <expr><name><name pos:line="119" pos:column="42">sc<pos:position pos:line="119" pos:column="44"/></name><operator pos:line="119" pos:column="44">-&gt;<pos:position pos:line="119" pos:column="49"/></operator><name pos:line="119" pos:column="46">server<pos:position pos:line="119" pos:column="52"/></name><operator pos:line="119" pos:column="52">-&gt;<pos:position pos:line="119" pos:column="57"/></operator><name pos:line="119" pos:column="54">auth<pos:position pos:line="119" pos:column="58"/></name><operator pos:line="119" pos:column="58">.<pos:position pos:line="119" pos:column="59"/></operator><name pos:line="119" pos:column="59">cipher_suite<pos:position pos:line="119" pos:column="71"/></name></name></expr></else></ternary></expr></argument>)<pos:position pos:line="119" pos:column="72"/></argument_list></call></expr>)<pos:position pos:line="119" pos:column="73"/></condition><then pos:line="119" pos:column="73"> <block pos:line="119" pos:column="74">{
            <expr_stmt><expr><call><name pos:line="120" pos:column="13">ap_log_rerror<pos:position pos:line="120" pos:column="26"/></name><argument_list pos:line="120" pos:column="26">(<argument><expr><name pos:line="120" pos:column="27">APLOG_MARK<pos:position pos:line="120" pos:column="37"/></name></expr></argument>, <argument><expr><name pos:line="120" pos:column="39">APLOG_WARNING<pos:position pos:line="120" pos:column="52"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="120" pos:column="54">0<pos:position pos:line="120" pos:column="55"/></literal></expr></argument>, <argument><expr><name pos:line="120" pos:column="57">r<pos:position pos:line="120" pos:column="58"/></name></expr></argument>,
                          <argument><expr><literal type="string" pos:line="121" pos:column="27">"Unable to reconfigure (per-directory) "<pos:position pos:line="121" pos:column="67"/></literal>
                          <literal type="string" pos:line="122" pos:column="27">"permitted SSL ciphers"<pos:position pos:line="122" pos:column="50"/></literal></expr></argument>)<pos:position pos:line="122" pos:column="51"/></argument_list></call></expr>;<pos:position pos:line="122" pos:column="52"/></expr_stmt>
            <expr_stmt><expr><call><name pos:line="123" pos:column="13">ssl_log_ssl_error<pos:position pos:line="123" pos:column="30"/></name><argument_list pos:line="123" pos:column="30">(<argument><expr><name pos:line="123" pos:column="31">SSLLOG_MARK<pos:position pos:line="123" pos:column="42"/></name></expr></argument>, <argument><expr><name pos:line="123" pos:column="44">APLOG_ERR<pos:position pos:line="123" pos:column="53"/></name></expr></argument>, <argument><expr><name><name pos:line="123" pos:column="55">r<pos:position pos:line="123" pos:column="56"/></name><operator pos:line="123" pos:column="56">-&gt;<pos:position pos:line="123" pos:column="61"/></operator><name pos:line="123" pos:column="58">server<pos:position pos:line="123" pos:column="64"/></name></name></expr></argument>)<pos:position pos:line="123" pos:column="65"/></argument_list></call></expr>;<pos:position pos:line="123" pos:column="66"/></expr_stmt>

            <if pos:line="125" pos:column="13">if <condition pos:line="125" pos:column="16">(<expr><name pos:line="125" pos:column="17">cipher_list_old<pos:position pos:line="125" pos:column="32"/></name></expr>)<pos:position pos:line="125" pos:column="33"/></condition><then pos:line="125" pos:column="33"> <block pos:line="125" pos:column="34">{
                <expr_stmt><expr><call><name pos:line="126" pos:column="17">sk_SSL_CIPHER_free<pos:position pos:line="126" pos:column="35"/></name><argument_list pos:line="126" pos:column="35">(<argument><expr><name pos:line="126" pos:column="36">cipher_list_old<pos:position pos:line="126" pos:column="51"/></name></expr></argument>)<pos:position pos:line="126" pos:column="52"/></argument_list></call></expr>;<pos:position pos:line="126" pos:column="53"/></expr_stmt>
            }<pos:position pos:line="127" pos:column="14"/></block></then></if>

            <return pos:line="129" pos:column="13">return <expr><name pos:line="129" pos:column="20">HTTP_FORBIDDEN<pos:position pos:line="129" pos:column="34"/></name></expr>;<pos:position pos:line="129" pos:column="35"/></return>
        }<pos:position pos:line="130" pos:column="10"/></block></then></if>

        <comment type="block" pos:line="132" pos:column="9">/* determine whether a renegotiation has to be forced */</comment>
        <expr_stmt><expr><name pos:line="133" pos:column="9">cipher_list<pos:position pos:line="133" pos:column="20"/></name> <operator pos:line="133" pos:column="21">=<pos:position pos:line="133" pos:column="22"/></operator> <operator pos:line="133" pos:column="23">(<pos:position pos:line="133" pos:column="24"/></operator><call><name pos:line="133" pos:column="24">STACK_OF<pos:position pos:line="133" pos:column="32"/></name><argument_list pos:line="133" pos:column="32">(<argument><expr><name pos:line="133" pos:column="33">SSL_CIPHER<pos:position pos:line="133" pos:column="43"/></name></expr></argument>)<pos:position pos:line="133" pos:column="44"/></argument_list></call> <operator pos:line="133" pos:column="45">*<pos:position pos:line="133" pos:column="46"/></operator><operator pos:line="133" pos:column="46">)<pos:position pos:line="133" pos:column="47"/></operator><call><name pos:line="133" pos:column="47">SSL_get_ciphers<pos:position pos:line="133" pos:column="62"/></name><argument_list pos:line="133" pos:column="62">(<argument><expr><name pos:line="133" pos:column="63">ssl<pos:position pos:line="133" pos:column="66"/></name></expr></argument>)<pos:position pos:line="133" pos:column="67"/></argument_list></call></expr>;<pos:position pos:line="133" pos:column="68"/></expr_stmt>

        <if pos:line="135" pos:column="9">if <condition pos:line="135" pos:column="12">(<expr><name><name pos:line="135" pos:column="13">dc<pos:position pos:line="135" pos:column="15"/></name><operator pos:line="135" pos:column="15">-&gt;<pos:position pos:line="135" pos:column="20"/></operator><name pos:line="135" pos:column="17">nOptions<pos:position pos:line="135" pos:column="25"/></name></name> <operator pos:line="135" pos:column="26">&amp;<pos:position pos:line="135" pos:column="31"/></operator> <name pos:line="135" pos:column="28">SSL_OPT_OPTRENEGOTIATE<pos:position pos:line="135" pos:column="50"/></name></expr>)<pos:position pos:line="135" pos:column="51"/></condition><then pos:line="135" pos:column="51"> <block pos:line="135" pos:column="52">{
            <comment type="block" pos:line="136" pos:column="13">/* optimized way */</comment>
            <if pos:line="137" pos:column="13">if <condition pos:line="137" pos:column="16">(<expr><operator pos:line="137" pos:column="17">(<pos:position pos:line="137" pos:column="18"/></operator><operator pos:line="137" pos:column="18">!<pos:position pos:line="137" pos:column="19"/></operator><name pos:line="137" pos:column="19">cipher<pos:position pos:line="137" pos:column="25"/></name> <operator pos:line="137" pos:column="26">&amp;&amp;<pos:position pos:line="137" pos:column="36"/></operator> <name pos:line="137" pos:column="29">cipher_list<pos:position pos:line="137" pos:column="40"/></name><operator pos:line="137" pos:column="40">)<pos:position pos:line="137" pos:column="41"/></operator> <operator pos:line="137" pos:column="42">||<pos:position pos:line="137" pos:column="44"/></operator>
                <operator pos:line="138" pos:column="17">(<pos:position pos:line="138" pos:column="18"/></operator><name pos:line="138" pos:column="18">cipher<pos:position pos:line="138" pos:column="24"/></name> <operator pos:line="138" pos:column="25">&amp;&amp;<pos:position pos:line="138" pos:column="35"/></operator> <operator pos:line="138" pos:column="28">!<pos:position pos:line="138" pos:column="29"/></operator><name pos:line="138" pos:column="29">cipher_list<pos:position pos:line="138" pos:column="40"/></name><operator pos:line="138" pos:column="40">)<pos:position pos:line="138" pos:column="41"/></operator></expr>)<pos:position pos:line="138" pos:column="42"/></condition><then pos:line="138" pos:column="42">
            <block pos:line="139" pos:column="13">{
                <expr_stmt><expr><name pos:line="140" pos:column="17">renegotiate<pos:position pos:line="140" pos:column="28"/></name> <operator pos:line="140" pos:column="29">=<pos:position pos:line="140" pos:column="30"/></operator> <name pos:line="140" pos:column="31">TRUE<pos:position pos:line="140" pos:column="35"/></name></expr>;<pos:position pos:line="140" pos:column="36"/></expr_stmt>
            }<pos:position pos:line="141" pos:column="14"/></block></then>
            <elseif pos:line="142" pos:column="13">else <if pos:line="142" pos:column="18">if <condition pos:line="142" pos:column="21">(<expr><name pos:line="142" pos:column="22">cipher<pos:position pos:line="142" pos:column="28"/></name> <operator pos:line="142" pos:column="29">&amp;&amp;<pos:position pos:line="142" pos:column="39"/></operator> <name pos:line="142" pos:column="32">cipher_list<pos:position pos:line="142" pos:column="43"/></name> <operator pos:line="142" pos:column="44">&amp;&amp;<pos:position pos:line="142" pos:column="54"/></operator>
                     <operator pos:line="143" pos:column="22">(<pos:position pos:line="143" pos:column="23"/></operator><call><name pos:line="143" pos:column="23">sk_SSL_CIPHER_find<pos:position pos:line="143" pos:column="41"/></name><argument_list pos:line="143" pos:column="41">(<argument><expr><name pos:line="143" pos:column="42">cipher_list<pos:position pos:line="143" pos:column="53"/></name></expr></argument>, <argument><expr><name pos:line="143" pos:column="55">cipher<pos:position pos:line="143" pos:column="61"/></name></expr></argument>)<pos:position pos:line="143" pos:column="62"/></argument_list></call> <operator pos:line="143" pos:column="63">&lt;<pos:position pos:line="143" pos:column="67"/></operator> <literal type="number" pos:line="143" pos:column="65">0<pos:position pos:line="143" pos:column="66"/></literal><operator pos:line="143" pos:column="66">)<pos:position pos:line="143" pos:column="67"/></operator></expr>)<pos:position pos:line="143" pos:column="68"/></condition><then pos:line="143" pos:column="68">
            <block pos:line="144" pos:column="13">{
                <expr_stmt><expr><name pos:line="145" pos:column="17">renegotiate<pos:position pos:line="145" pos:column="28"/></name> <operator pos:line="145" pos:column="29">=<pos:position pos:line="145" pos:column="30"/></operator> <name pos:line="145" pos:column="31">TRUE<pos:position pos:line="145" pos:column="35"/></name></expr>;<pos:position pos:line="145" pos:column="36"/></expr_stmt>
            }<pos:position pos:line="146" pos:column="14"/></block></then></if></elseif></if>
        }<pos:position pos:line="147" pos:column="10"/></block></then>
        <else pos:line="148" pos:column="9">else <block pos:line="148" pos:column="14">{
            <comment type="block" pos:line="149" pos:column="13">/* paranoid way */</comment>
            <if pos:line="150" pos:column="13">if <condition pos:line="150" pos:column="16">(<expr><operator pos:line="150" pos:column="17">(<pos:position pos:line="150" pos:column="18"/></operator><operator pos:line="150" pos:column="18">!<pos:position pos:line="150" pos:column="19"/></operator><name pos:line="150" pos:column="19">cipher_list_old<pos:position pos:line="150" pos:column="34"/></name> <operator pos:line="150" pos:column="35">&amp;&amp;<pos:position pos:line="150" pos:column="45"/></operator> <name pos:line="150" pos:column="38">cipher_list<pos:position pos:line="150" pos:column="49"/></name><operator pos:line="150" pos:column="49">)<pos:position pos:line="150" pos:column="50"/></operator> <operator pos:line="150" pos:column="51">||<pos:position pos:line="150" pos:column="53"/></operator>
                <operator pos:line="151" pos:column="17">(<pos:position pos:line="151" pos:column="18"/></operator><name pos:line="151" pos:column="18">cipher_list_old<pos:position pos:line="151" pos:column="33"/></name> <operator pos:line="151" pos:column="34">&amp;&amp;<pos:position pos:line="151" pos:column="44"/></operator> <operator pos:line="151" pos:column="37">!<pos:position pos:line="151" pos:column="38"/></operator><name pos:line="151" pos:column="38">cipher_list<pos:position pos:line="151" pos:column="49"/></name><operator pos:line="151" pos:column="49">)<pos:position pos:line="151" pos:column="50"/></operator></expr>)<pos:position pos:line="151" pos:column="51"/></condition><then pos:line="151" pos:column="51">
            <block pos:line="152" pos:column="13">{
                <expr_stmt><expr><name pos:line="153" pos:column="17">renegotiate<pos:position pos:line="153" pos:column="28"/></name> <operator pos:line="153" pos:column="29">=<pos:position pos:line="153" pos:column="30"/></operator> <name pos:line="153" pos:column="31">TRUE<pos:position pos:line="153" pos:column="35"/></name></expr>;<pos:position pos:line="153" pos:column="36"/></expr_stmt>
            }<pos:position pos:line="154" pos:column="14"/></block></then>
            <elseif pos:line="155" pos:column="13">else <if pos:line="155" pos:column="18">if <condition pos:line="155" pos:column="21">(<expr><name pos:line="155" pos:column="22">cipher_list_old<pos:position pos:line="155" pos:column="37"/></name> <operator pos:line="155" pos:column="38">&amp;&amp;<pos:position pos:line="155" pos:column="48"/></operator> <name pos:line="155" pos:column="41">cipher_list<pos:position pos:line="155" pos:column="52"/></name></expr>)<pos:position pos:line="155" pos:column="53"/></condition><then pos:line="155" pos:column="53"> <block pos:line="155" pos:column="54">{
                <for pos:line="156" pos:column="17">for <control pos:line="156" pos:column="21">(<init><expr><name pos:line="156" pos:column="22">n<pos:position pos:line="156" pos:column="23"/></name> <operator pos:line="156" pos:column="24">=<pos:position pos:line="156" pos:column="25"/></operator> <literal type="number" pos:line="156" pos:column="26">0<pos:position pos:line="156" pos:column="27"/></literal></expr>;<pos:position pos:line="156" pos:column="28"/></init>
                     <condition><expr><operator pos:line="157" pos:column="22">!<pos:position pos:line="157" pos:column="23"/></operator><name pos:line="157" pos:column="23">renegotiate<pos:position pos:line="157" pos:column="34"/></name> <operator pos:line="157" pos:column="35">&amp;&amp;<pos:position pos:line="157" pos:column="45"/></operator> <operator pos:line="157" pos:column="38">(<pos:position pos:line="157" pos:column="39"/></operator><name pos:line="157" pos:column="39">n<pos:position pos:line="157" pos:column="40"/></name> <operator pos:line="157" pos:column="41">&lt;<pos:position pos:line="157" pos:column="45"/></operator> <call><name pos:line="157" pos:column="43">sk_SSL_CIPHER_num<pos:position pos:line="157" pos:column="60"/></name><argument_list pos:line="157" pos:column="60">(<argument><expr><name pos:line="157" pos:column="61">cipher_list<pos:position pos:line="157" pos:column="72"/></name></expr></argument>)<pos:position pos:line="157" pos:column="73"/></argument_list></call><operator pos:line="157" pos:column="73">)<pos:position pos:line="157" pos:column="74"/></operator></expr>;<pos:position pos:line="157" pos:column="75"/></condition>
                     <incr><expr><name pos:line="158" pos:column="22">n<pos:position pos:line="158" pos:column="23"/></name><operator pos:line="158" pos:column="23">++<pos:position pos:line="158" pos:column="25"/></operator></expr></incr>)<pos:position pos:line="158" pos:column="26"/></control>
                <block pos:line="159" pos:column="17">{
                    <decl_stmt><decl><type><name pos:line="160" pos:column="21">SSL_CIPHER<pos:position pos:line="160" pos:column="31"/></name> <modifier pos:line="160" pos:column="32">*<pos:position pos:line="160" pos:column="33"/></modifier></type><name pos:line="160" pos:column="33">value<pos:position pos:line="160" pos:column="38"/></name> <init pos:line="160" pos:column="39">= <expr><call><name pos:line="160" pos:column="41">sk_SSL_CIPHER_value<pos:position pos:line="160" pos:column="60"/></name><argument_list pos:line="160" pos:column="60">(<argument><expr><name pos:line="160" pos:column="61">cipher_list<pos:position pos:line="160" pos:column="72"/></name></expr></argument>, <argument><expr><name pos:line="160" pos:column="74">n<pos:position pos:line="160" pos:column="75"/></name></expr></argument>)<pos:position pos:line="160" pos:column="76"/></argument_list></call></expr></init></decl>;<pos:position pos:line="160" pos:column="77"/></decl_stmt>

                    <if pos:line="162" pos:column="21">if <condition pos:line="162" pos:column="24">(<expr><call><name pos:line="162" pos:column="25">sk_SSL_CIPHER_find<pos:position pos:line="162" pos:column="43"/></name><argument_list pos:line="162" pos:column="43">(<argument><expr><name pos:line="162" pos:column="44">cipher_list_old<pos:position pos:line="162" pos:column="59"/></name></expr></argument>, <argument><expr><name pos:line="162" pos:column="61">value<pos:position pos:line="162" pos:column="66"/></name></expr></argument>)<pos:position pos:line="162" pos:column="67"/></argument_list></call> <operator pos:line="162" pos:column="68">&lt;<pos:position pos:line="162" pos:column="72"/></operator> <literal type="number" pos:line="162" pos:column="70">0<pos:position pos:line="162" pos:column="71"/></literal></expr>)<pos:position pos:line="162" pos:column="72"/></condition><then pos:line="162" pos:column="72"> <block pos:line="162" pos:column="73">{
                        <expr_stmt><expr><name pos:line="163" pos:column="25">renegotiate<pos:position pos:line="163" pos:column="36"/></name> <operator pos:line="163" pos:column="37">=<pos:position pos:line="163" pos:column="38"/></operator> <name pos:line="163" pos:column="39">TRUE<pos:position pos:line="163" pos:column="43"/></name></expr>;<pos:position pos:line="163" pos:column="44"/></expr_stmt>
                    }<pos:position pos:line="164" pos:column="22"/></block></then></if>
                }<pos:position pos:line="165" pos:column="18"/></block></for>

                <for pos:line="167" pos:column="17">for <control pos:line="167" pos:column="21">(<init><expr><name pos:line="167" pos:column="22">n<pos:position pos:line="167" pos:column="23"/></name> <operator pos:line="167" pos:column="24">=<pos:position pos:line="167" pos:column="25"/></operator> <literal type="number" pos:line="167" pos:column="26">0<pos:position pos:line="167" pos:column="27"/></literal></expr>;<pos:position pos:line="167" pos:column="28"/></init>
                     <condition><expr><operator pos:line="168" pos:column="22">!<pos:position pos:line="168" pos:column="23"/></operator><name pos:line="168" pos:column="23">renegotiate<pos:position pos:line="168" pos:column="34"/></name> <operator pos:line="168" pos:column="35">&amp;&amp;<pos:position pos:line="168" pos:column="45"/></operator> <operator pos:line="168" pos:column="38">(<pos:position pos:line="168" pos:column="39"/></operator><name pos:line="168" pos:column="39">n<pos:position pos:line="168" pos:column="40"/></name> <operator pos:line="168" pos:column="41">&lt;<pos:position pos:line="168" pos:column="45"/></operator> <call><name pos:line="168" pos:column="43">sk_SSL_CIPHER_num<pos:position pos:line="168" pos:column="60"/></name><argument_list pos:line="168" pos:column="60">(<argument><expr><name pos:line="168" pos:column="61">cipher_list_old<pos:position pos:line="168" pos:column="76"/></name></expr></argument>)<pos:position pos:line="168" pos:column="77"/></argument_list></call><operator pos:line="168" pos:column="77">)<pos:position pos:line="168" pos:column="78"/></operator></expr>;<pos:position pos:line="168" pos:column="79"/></condition>
                     <incr><expr><name pos:line="169" pos:column="22">n<pos:position pos:line="169" pos:column="23"/></name><operator pos:line="169" pos:column="23">++<pos:position pos:line="169" pos:column="25"/></operator></expr></incr>)<pos:position pos:line="169" pos:column="26"/></control>
                <block pos:line="170" pos:column="17">{
                    <decl_stmt><decl><type><name pos:line="171" pos:column="21">SSL_CIPHER<pos:position pos:line="171" pos:column="31"/></name> <modifier pos:line="171" pos:column="32">*<pos:position pos:line="171" pos:column="33"/></modifier></type><name pos:line="171" pos:column="33">value<pos:position pos:line="171" pos:column="38"/></name> <init pos:line="171" pos:column="39">= <expr><call><name pos:line="171" pos:column="41">sk_SSL_CIPHER_value<pos:position pos:line="171" pos:column="60"/></name><argument_list pos:line="171" pos:column="60">(<argument><expr><name pos:line="171" pos:column="61">cipher_list_old<pos:position pos:line="171" pos:column="76"/></name></expr></argument>, <argument><expr><name pos:line="171" pos:column="78">n<pos:position pos:line="171" pos:column="79"/></name></expr></argument>)<pos:position pos:line="171" pos:column="80"/></argument_list></call></expr></init></decl>;<pos:position pos:line="171" pos:column="81"/></decl_stmt>

                    <if pos:line="173" pos:column="21">if <condition pos:line="173" pos:column="24">(<expr><call><name pos:line="173" pos:column="25">sk_SSL_CIPHER_find<pos:position pos:line="173" pos:column="43"/></name><argument_list pos:line="173" pos:column="43">(<argument><expr><name pos:line="173" pos:column="44">cipher_list<pos:position pos:line="173" pos:column="55"/></name></expr></argument>, <argument><expr><name pos:line="173" pos:column="57">value<pos:position pos:line="173" pos:column="62"/></name></expr></argument>)<pos:position pos:line="173" pos:column="63"/></argument_list></call> <operator pos:line="173" pos:column="64">&lt;<pos:position pos:line="173" pos:column="68"/></operator> <literal type="number" pos:line="173" pos:column="66">0<pos:position pos:line="173" pos:column="67"/></literal></expr>)<pos:position pos:line="173" pos:column="68"/></condition><then pos:line="173" pos:column="68"> <block pos:line="173" pos:column="69">{
                        <expr_stmt><expr><name pos:line="174" pos:column="25">renegotiate<pos:position pos:line="174" pos:column="36"/></name> <operator pos:line="174" pos:column="37">=<pos:position pos:line="174" pos:column="38"/></operator> <name pos:line="174" pos:column="39">TRUE<pos:position pos:line="174" pos:column="43"/></name></expr>;<pos:position pos:line="174" pos:column="44"/></expr_stmt>
                    }<pos:position pos:line="175" pos:column="22"/></block></then></if>
                }<pos:position pos:line="176" pos:column="18"/></block></for>
            }<pos:position pos:line="177" pos:column="14"/></block></then></if></elseif></if>
        }<pos:position pos:line="178" pos:column="10"/></block></else></if>

        <comment type="block" pos:line="180" pos:column="9">/* cleanup */</comment>
        <if pos:line="181" pos:column="9">if <condition pos:line="181" pos:column="12">(<expr><name pos:line="181" pos:column="13">cipher_list_old<pos:position pos:line="181" pos:column="28"/></name></expr>)<pos:position pos:line="181" pos:column="29"/></condition><then pos:line="181" pos:column="29"> <block pos:line="181" pos:column="30">{
            <expr_stmt><expr><call><name pos:line="182" pos:column="13">sk_SSL_CIPHER_free<pos:position pos:line="182" pos:column="31"/></name><argument_list pos:line="182" pos:column="31">(<argument><expr><name pos:line="182" pos:column="32">cipher_list_old<pos:position pos:line="182" pos:column="47"/></name></expr></argument>)<pos:position pos:line="182" pos:column="48"/></argument_list></call></expr>;<pos:position pos:line="182" pos:column="49"/></expr_stmt>
        }<pos:position pos:line="183" pos:column="10"/></block></then></if>

        <if pos:line="185" pos:column="9">if <condition pos:line="185" pos:column="12">(<expr><name pos:line="185" pos:column="13">renegotiate<pos:position pos:line="185" pos:column="24"/></name></expr>)<pos:position pos:line="185" pos:column="25"/></condition><then pos:line="185" pos:column="25"> <block pos:line="185" pos:column="26">{
<cpp:ifdef pos:line="186" pos:column="1">#<cpp:directive pos:line="186" pos:column="2">ifdef<pos:position pos:line="186" pos:column="7"/></cpp:directive> <name pos:line="186" pos:column="8">SSL_OP_CIPHER_SERVER_PREFERENCE<pos:position pos:line="186" pos:column="39"/></name></cpp:ifdef>
            <if pos:line="187" pos:column="13">if <condition pos:line="187" pos:column="16">(<expr><name><name pos:line="187" pos:column="17">sc<pos:position pos:line="187" pos:column="19"/></name><operator pos:line="187" pos:column="19">-&gt;<pos:position pos:line="187" pos:column="24"/></operator><name pos:line="187" pos:column="21">cipher_server_pref<pos:position pos:line="187" pos:column="39"/></name></name> <operator pos:line="187" pos:column="40">==<pos:position pos:line="187" pos:column="42"/></operator> <name pos:line="187" pos:column="43">TRUE<pos:position pos:line="187" pos:column="47"/></name></expr>)<pos:position pos:line="187" pos:column="48"/></condition><then pos:line="187" pos:column="48"> <block pos:line="187" pos:column="49">{
                <expr_stmt><expr><call><name pos:line="188" pos:column="17">SSL_set_options<pos:position pos:line="188" pos:column="32"/></name><argument_list pos:line="188" pos:column="32">(<argument><expr><name pos:line="188" pos:column="33">ssl<pos:position pos:line="188" pos:column="36"/></name></expr></argument>, <argument><expr><name pos:line="188" pos:column="38">SSL_OP_CIPHER_SERVER_PREFERENCE<pos:position pos:line="188" pos:column="69"/></name></expr></argument>)<pos:position pos:line="188" pos:column="70"/></argument_list></call></expr>;<pos:position pos:line="188" pos:column="71"/></expr_stmt>
            }<pos:position pos:line="189" pos:column="14"/></block></then></if>
<cpp:endif pos:line="190" pos:column="1">#<cpp:directive pos:line="190" pos:column="2">endif<pos:position pos:line="190" pos:column="7"/></cpp:directive></cpp:endif>
            <comment type="block" pos:line="191" pos:column="13">/* tracing */</comment>
            <expr_stmt><expr><call><name pos:line="192" pos:column="13">ap_log_rerror<pos:position pos:line="192" pos:column="26"/></name><argument_list pos:line="192" pos:column="26">(<argument><expr><name pos:line="192" pos:column="27">APLOG_MARK<pos:position pos:line="192" pos:column="37"/></name></expr></argument>, <argument><expr><name pos:line="192" pos:column="39">APLOG_DEBUG<pos:position pos:line="192" pos:column="50"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="192" pos:column="52">0<pos:position pos:line="192" pos:column="53"/></literal></expr></argument>, <argument><expr><name pos:line="192" pos:column="55">r<pos:position pos:line="192" pos:column="56"/></name></expr></argument>,
                         <argument><expr><literal type="string" pos:line="193" pos:column="26">"Reconfigured cipher suite will force renegotiation"<pos:position pos:line="193" pos:column="78"/></literal></expr></argument>)<pos:position pos:line="193" pos:column="79"/></argument_list></call></expr>;<pos:position pos:line="193" pos:column="80"/></expr_stmt>
        }<pos:position pos:line="194" pos:column="10"/></block></then></if>
    }<pos:position pos:line="195" pos:column="6"/></block></then></if>

    <comment type="block" pos:line="197" pos:column="5">/*
     * override of SSLVerifyDepth
     *
     * The depth checks are handled by us manually inside the verify callback
     * function and not by OpenSSL internally (and our function is aware of
     * both the per-server and per-directory contexts). So we cannot ask
     * OpenSSL about the currently verify depth. Instead we remember it in our
     * SSLConnRec attached to the SSL* of OpenSSL.  We've to force the
     * renegotiation if the reconfigured/new verify depth is less than the
     * currently active/remembered verify depth (because this means more
     * restriction on the certificate chain).
     */</comment>
    <expr_stmt><expr><name pos:line="209" pos:column="5">n<pos:position pos:line="209" pos:column="6"/></name> <operator pos:line="209" pos:column="7">=<pos:position pos:line="209" pos:column="8"/></operator> <ternary><condition><expr><name><name pos:line="209" pos:column="9">sslconn<pos:position pos:line="209" pos:column="16"/></name><operator pos:line="209" pos:column="16">-&gt;<pos:position pos:line="209" pos:column="21"/></operator><name pos:line="209" pos:column="18">verify_depth<pos:position pos:line="209" pos:column="30"/></name></name></expr> ?<pos:position pos:line="209" pos:column="32"/></condition><then pos:line="209" pos:column="32">
        <expr><name><name pos:line="210" pos:column="9">sslconn<pos:position pos:line="210" pos:column="16"/></name><operator pos:line="210" pos:column="16">-&gt;<pos:position pos:line="210" pos:column="21"/></operator><name pos:line="210" pos:column="18">verify_depth<pos:position pos:line="210" pos:column="30"/></name></name></expr> <pos:position pos:line="210" pos:column="31"/></then><else pos:line="210" pos:column="31">:
        <expr><operator pos:line="211" pos:column="9">(<pos:position pos:line="211" pos:column="10"/></operator><call><name pos:line="211" pos:column="10">mySrvConfig<pos:position pos:line="211" pos:column="21"/></name><argument_list pos:line="211" pos:column="21">(<argument><expr><name pos:line="211" pos:column="22">handshakeserver<pos:position pos:line="211" pos:column="37"/></name></expr></argument>)<pos:position pos:line="211" pos:column="38"/></argument_list></call><operator pos:line="211" pos:column="38">)<pos:position pos:line="211" pos:column="39"/></operator><operator pos:line="211" pos:column="39">-&gt;<pos:position pos:line="211" pos:column="44"/></operator><name><name pos:line="211" pos:column="41">server<pos:position pos:line="211" pos:column="47"/></name><operator pos:line="211" pos:column="47">-&gt;<pos:position pos:line="211" pos:column="52"/></operator><name pos:line="211" pos:column="49">auth<pos:position pos:line="211" pos:column="53"/></name><operator pos:line="211" pos:column="53">.<pos:position pos:line="211" pos:column="54"/></operator><name pos:line="211" pos:column="54">verify_depth<pos:position pos:line="211" pos:column="66"/></name></name></expr></else></ternary></expr>;<pos:position pos:line="211" pos:column="67"/></expr_stmt>
    <comment type="block" pos:line="212" pos:column="5">/* determine the new depth */</comment>
    <expr_stmt><expr><name><name pos:line="213" pos:column="5">sslconn<pos:position pos:line="213" pos:column="12"/></name><operator pos:line="213" pos:column="12">-&gt;<pos:position pos:line="213" pos:column="17"/></operator><name pos:line="213" pos:column="14">verify_depth<pos:position pos:line="213" pos:column="26"/></name></name> <operator pos:line="213" pos:column="27">=<pos:position pos:line="213" pos:column="28"/></operator> <ternary><condition><expr><operator pos:line="213" pos:column="29">(<pos:position pos:line="213" pos:column="30"/></operator><name><name pos:line="213" pos:column="30">dc<pos:position pos:line="213" pos:column="32"/></name><operator pos:line="213" pos:column="32">-&gt;<pos:position pos:line="213" pos:column="37"/></operator><name pos:line="213" pos:column="34">nVerifyDepth<pos:position pos:line="213" pos:column="46"/></name></name> <operator pos:line="213" pos:column="47">!=<pos:position pos:line="213" pos:column="49"/></operator> <name pos:line="213" pos:column="50">UNSET<pos:position pos:line="213" pos:column="55"/></name><operator pos:line="213" pos:column="55">)<pos:position pos:line="213" pos:column="56"/></operator></expr> ?<pos:position pos:line="213" pos:column="58"/></condition><then pos:line="213" pos:column="58">
                            <expr><name><name pos:line="214" pos:column="29">dc<pos:position pos:line="214" pos:column="31"/></name><operator pos:line="214" pos:column="31">-&gt;<pos:position pos:line="214" pos:column="36"/></operator><name pos:line="214" pos:column="33">nVerifyDepth<pos:position pos:line="214" pos:column="45"/></name></name></expr> <pos:position pos:line="214" pos:column="46"/></then><else pos:line="214" pos:column="46">: <expr><name><name pos:line="214" pos:column="48">sc<pos:position pos:line="214" pos:column="50"/></name><operator pos:line="214" pos:column="50">-&gt;<pos:position pos:line="214" pos:column="55"/></operator><name pos:line="214" pos:column="52">server<pos:position pos:line="214" pos:column="58"/></name><operator pos:line="214" pos:column="58">-&gt;<pos:position pos:line="214" pos:column="63"/></operator><name pos:line="214" pos:column="60">auth<pos:position pos:line="214" pos:column="64"/></name><operator pos:line="214" pos:column="64">.<pos:position pos:line="214" pos:column="65"/></operator><name pos:line="214" pos:column="65">verify_depth<pos:position pos:line="214" pos:column="77"/></name></name></expr></else></ternary></expr>;<pos:position pos:line="214" pos:column="78"/></expr_stmt>
    <if pos:line="215" pos:column="5">if <condition pos:line="215" pos:column="8">(<expr><name><name pos:line="215" pos:column="9">sslconn<pos:position pos:line="215" pos:column="16"/></name><operator pos:line="215" pos:column="16">-&gt;<pos:position pos:line="215" pos:column="21"/></operator><name pos:line="215" pos:column="18">verify_depth<pos:position pos:line="215" pos:column="30"/></name></name> <operator pos:line="215" pos:column="31">&lt;<pos:position pos:line="215" pos:column="35"/></operator> <name pos:line="215" pos:column="33">n<pos:position pos:line="215" pos:column="34"/></name></expr>)<pos:position pos:line="215" pos:column="35"/></condition><then pos:line="215" pos:column="35"> <block pos:line="215" pos:column="36">{
        <expr_stmt><expr><name pos:line="216" pos:column="9">renegotiate<pos:position pos:line="216" pos:column="20"/></name> <operator pos:line="216" pos:column="21">=<pos:position pos:line="216" pos:column="22"/></operator> <name pos:line="216" pos:column="23">TRUE<pos:position pos:line="216" pos:column="27"/></name></expr>;<pos:position pos:line="216" pos:column="28"/></expr_stmt>
        <expr_stmt><expr><call><name pos:line="217" pos:column="9">ap_log_rerror<pos:position pos:line="217" pos:column="22"/></name><argument_list pos:line="217" pos:column="22">(<argument><expr><name pos:line="217" pos:column="23">APLOG_MARK<pos:position pos:line="217" pos:column="33"/></name></expr></argument>, <argument><expr><name pos:line="217" pos:column="35">APLOG_DEBUG<pos:position pos:line="217" pos:column="46"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="217" pos:column="48">0<pos:position pos:line="217" pos:column="49"/></literal></expr></argument>, <argument><expr><name pos:line="217" pos:column="51">r<pos:position pos:line="217" pos:column="52"/></name></expr></argument>,
                     <argument><expr><literal type="string" pos:line="218" pos:column="22">"Reduced client verification depth will force "<pos:position pos:line="218" pos:column="69"/></literal>
                     <literal type="string" pos:line="219" pos:column="22">"renegotiation"<pos:position pos:line="219" pos:column="37"/></literal></expr></argument>)<pos:position pos:line="219" pos:column="38"/></argument_list></call></expr>;<pos:position pos:line="219" pos:column="39"/></expr_stmt>
    }<pos:position pos:line="220" pos:column="6"/></block></then></if>

    <comment type="block" pos:line="222" pos:column="5">/*
     * override of SSLVerifyClient
     *
     * We force a renegotiation if the reconfigured/new verify type is
     * stronger than the currently active verify type.
     *
     * The order is: none &lt;&lt; optional_no_ca &lt;&lt; optional &lt;&lt; require
     *
     * Additionally the following optimization is possible here: When the
     * currently active verify type is "none" but a client certificate is
     * already known/present, it's enough to manually force a client
     * verification but at least skip the I/O-intensive renegotation
     * handshake.
     */</comment>
    <if pos:line="236" pos:column="5">if <condition pos:line="236" pos:column="8">(<expr><operator pos:line="236" pos:column="9">(<pos:position pos:line="236" pos:column="10"/></operator><name><name pos:line="236" pos:column="10">dc<pos:position pos:line="236" pos:column="12"/></name><operator pos:line="236" pos:column="12">-&gt;<pos:position pos:line="236" pos:column="17"/></operator><name pos:line="236" pos:column="14">nVerifyClient<pos:position pos:line="236" pos:column="27"/></name></name> <operator pos:line="236" pos:column="28">!=<pos:position pos:line="236" pos:column="30"/></operator> <name pos:line="236" pos:column="31">SSL_CVERIFY_UNSET<pos:position pos:line="236" pos:column="48"/></name><operator pos:line="236" pos:column="48">)<pos:position pos:line="236" pos:column="49"/></operator> <operator pos:line="236" pos:column="50">||<pos:position pos:line="236" pos:column="52"/></operator>
        <operator pos:line="237" pos:column="9">(<pos:position pos:line="237" pos:column="10"/></operator><name><name pos:line="237" pos:column="10">sc<pos:position pos:line="237" pos:column="12"/></name><operator pos:line="237" pos:column="12">-&gt;<pos:position pos:line="237" pos:column="17"/></operator><name pos:line="237" pos:column="14">server<pos:position pos:line="237" pos:column="20"/></name><operator pos:line="237" pos:column="20">-&gt;<pos:position pos:line="237" pos:column="25"/></operator><name pos:line="237" pos:column="22">auth<pos:position pos:line="237" pos:column="26"/></name><operator pos:line="237" pos:column="26">.<pos:position pos:line="237" pos:column="27"/></operator><name pos:line="237" pos:column="27">verify_mode<pos:position pos:line="237" pos:column="38"/></name></name> <operator pos:line="237" pos:column="39">!=<pos:position pos:line="237" pos:column="41"/></operator> <name pos:line="237" pos:column="42">SSL_CVERIFY_UNSET<pos:position pos:line="237" pos:column="59"/></name><operator pos:line="237" pos:column="59">)<pos:position pos:line="237" pos:column="60"/></operator></expr>)<pos:position pos:line="237" pos:column="61"/></condition><then pos:line="237" pos:column="61"> <block pos:line="237" pos:column="62">{
        <comment type="block" pos:line="238" pos:column="9">/* remember old state */</comment>
        <expr_stmt><expr><name pos:line="239" pos:column="9">verify_old<pos:position pos:line="239" pos:column="19"/></name> <operator pos:line="239" pos:column="20">=<pos:position pos:line="239" pos:column="21"/></operator> <call><name pos:line="239" pos:column="22">SSL_get_verify_mode<pos:position pos:line="239" pos:column="41"/></name><argument_list pos:line="239" pos:column="41">(<argument><expr><name pos:line="239" pos:column="42">ssl<pos:position pos:line="239" pos:column="45"/></name></expr></argument>)<pos:position pos:line="239" pos:column="46"/></argument_list></call></expr>;<pos:position pos:line="239" pos:column="47"/></expr_stmt>
        <comment type="block" pos:line="240" pos:column="9">/* configure new state */</comment>
        <expr_stmt><expr><name pos:line="241" pos:column="9">verify<pos:position pos:line="241" pos:column="15"/></name> <operator pos:line="241" pos:column="16">=<pos:position pos:line="241" pos:column="17"/></operator> <name pos:line="241" pos:column="18">SSL_VERIFY_NONE<pos:position pos:line="241" pos:column="33"/></name></expr>;<pos:position pos:line="241" pos:column="34"/></expr_stmt>

        <if pos:line="243" pos:column="9">if <condition pos:line="243" pos:column="12">(<expr><operator pos:line="243" pos:column="13">(<pos:position pos:line="243" pos:column="14"/></operator><name><name pos:line="243" pos:column="14">dc<pos:position pos:line="243" pos:column="16"/></name><operator pos:line="243" pos:column="16">-&gt;<pos:position pos:line="243" pos:column="21"/></operator><name pos:line="243" pos:column="18">nVerifyClient<pos:position pos:line="243" pos:column="31"/></name></name> <operator pos:line="243" pos:column="32">==<pos:position pos:line="243" pos:column="34"/></operator> <name pos:line="243" pos:column="35">SSL_CVERIFY_REQUIRE<pos:position pos:line="243" pos:column="54"/></name><operator pos:line="243" pos:column="54">)<pos:position pos:line="243" pos:column="55"/></operator> <operator pos:line="243" pos:column="56">||<pos:position pos:line="243" pos:column="58"/></operator>
            <operator pos:line="244" pos:column="13">(<pos:position pos:line="244" pos:column="14"/></operator><name><name pos:line="244" pos:column="14">sc<pos:position pos:line="244" pos:column="16"/></name><operator pos:line="244" pos:column="16">-&gt;<pos:position pos:line="244" pos:column="21"/></operator><name pos:line="244" pos:column="18">server<pos:position pos:line="244" pos:column="24"/></name><operator pos:line="244" pos:column="24">-&gt;<pos:position pos:line="244" pos:column="29"/></operator><name pos:line="244" pos:column="26">auth<pos:position pos:line="244" pos:column="30"/></name><operator pos:line="244" pos:column="30">.<pos:position pos:line="244" pos:column="31"/></operator><name pos:line="244" pos:column="31">verify_mode<pos:position pos:line="244" pos:column="42"/></name></name> <operator pos:line="244" pos:column="43">==<pos:position pos:line="244" pos:column="45"/></operator> <name pos:line="244" pos:column="46">SSL_CVERIFY_REQUIRE<pos:position pos:line="244" pos:column="65"/></name><operator pos:line="244" pos:column="65">)<pos:position pos:line="244" pos:column="66"/></operator></expr>)<pos:position pos:line="244" pos:column="67"/></condition><then pos:line="244" pos:column="67"> <block pos:line="244" pos:column="68">{
            <expr_stmt><expr><name pos:line="245" pos:column="13">verify<pos:position pos:line="245" pos:column="19"/></name> <operator pos:line="245" pos:column="20">|=<pos:position pos:line="245" pos:column="22"/></operator> <name pos:line="245" pos:column="23">SSL_VERIFY_PEER_STRICT<pos:position pos:line="245" pos:column="45"/></name></expr>;<pos:position pos:line="245" pos:column="46"/></expr_stmt>
        }<pos:position pos:line="246" pos:column="10"/></block></then></if>

        <if pos:line="248" pos:column="9">if <condition pos:line="248" pos:column="12">(<expr><operator pos:line="248" pos:column="13">(<pos:position pos:line="248" pos:column="14"/></operator><name><name pos:line="248" pos:column="14">dc<pos:position pos:line="248" pos:column="16"/></name><operator pos:line="248" pos:column="16">-&gt;<pos:position pos:line="248" pos:column="21"/></operator><name pos:line="248" pos:column="18">nVerifyClient<pos:position pos:line="248" pos:column="31"/></name></name> <operator pos:line="248" pos:column="32">==<pos:position pos:line="248" pos:column="34"/></operator> <name pos:line="248" pos:column="35">SSL_CVERIFY_OPTIONAL<pos:position pos:line="248" pos:column="55"/></name><operator pos:line="248" pos:column="55">)<pos:position pos:line="248" pos:column="56"/></operator> <operator pos:line="248" pos:column="57">||<pos:position pos:line="248" pos:column="59"/></operator>
            <operator pos:line="249" pos:column="13">(<pos:position pos:line="249" pos:column="14"/></operator><name><name pos:line="249" pos:column="14">dc<pos:position pos:line="249" pos:column="16"/></name><operator pos:line="249" pos:column="16">-&gt;<pos:position pos:line="249" pos:column="21"/></operator><name pos:line="249" pos:column="18">nVerifyClient<pos:position pos:line="249" pos:column="31"/></name></name> <operator pos:line="249" pos:column="32">==<pos:position pos:line="249" pos:column="34"/></operator> <name pos:line="249" pos:column="35">SSL_CVERIFY_OPTIONAL_NO_CA<pos:position pos:line="249" pos:column="61"/></name><operator pos:line="249" pos:column="61">)<pos:position pos:line="249" pos:column="62"/></operator> <operator pos:line="249" pos:column="63">||<pos:position pos:line="249" pos:column="65"/></operator>
            <operator pos:line="250" pos:column="13">(<pos:position pos:line="250" pos:column="14"/></operator><name><name pos:line="250" pos:column="14">sc<pos:position pos:line="250" pos:column="16"/></name><operator pos:line="250" pos:column="16">-&gt;<pos:position pos:line="250" pos:column="21"/></operator><name pos:line="250" pos:column="18">server<pos:position pos:line="250" pos:column="24"/></name><operator pos:line="250" pos:column="24">-&gt;<pos:position pos:line="250" pos:column="29"/></operator><name pos:line="250" pos:column="26">auth<pos:position pos:line="250" pos:column="30"/></name><operator pos:line="250" pos:column="30">.<pos:position pos:line="250" pos:column="31"/></operator><name pos:line="250" pos:column="31">verify_mode<pos:position pos:line="250" pos:column="42"/></name></name> <operator pos:line="250" pos:column="43">==<pos:position pos:line="250" pos:column="45"/></operator> <name pos:line="250" pos:column="46">SSL_CVERIFY_OPTIONAL<pos:position pos:line="250" pos:column="66"/></name><operator pos:line="250" pos:column="66">)<pos:position pos:line="250" pos:column="67"/></operator> <operator pos:line="250" pos:column="68">||<pos:position pos:line="250" pos:column="70"/></operator>
            <operator pos:line="251" pos:column="13">(<pos:position pos:line="251" pos:column="14"/></operator><name><name pos:line="251" pos:column="14">sc<pos:position pos:line="251" pos:column="16"/></name><operator pos:line="251" pos:column="16">-&gt;<pos:position pos:line="251" pos:column="21"/></operator><name pos:line="251" pos:column="18">server<pos:position pos:line="251" pos:column="24"/></name><operator pos:line="251" pos:column="24">-&gt;<pos:position pos:line="251" pos:column="29"/></operator><name pos:line="251" pos:column="26">auth<pos:position pos:line="251" pos:column="30"/></name><operator pos:line="251" pos:column="30">.<pos:position pos:line="251" pos:column="31"/></operator><name pos:line="251" pos:column="31">verify_mode<pos:position pos:line="251" pos:column="42"/></name></name> <operator pos:line="251" pos:column="43">==<pos:position pos:line="251" pos:column="45"/></operator> <name pos:line="251" pos:column="46">SSL_CVERIFY_OPTIONAL_NO_CA<pos:position pos:line="251" pos:column="72"/></name><operator pos:line="251" pos:column="72">)<pos:position pos:line="251" pos:column="73"/></operator></expr>)<pos:position pos:line="251" pos:column="74"/></condition><then pos:line="251" pos:column="74">
        <block pos:line="252" pos:column="9">{
            <expr_stmt><expr><name pos:line="253" pos:column="13">verify<pos:position pos:line="253" pos:column="19"/></name> <operator pos:line="253" pos:column="20">|=<pos:position pos:line="253" pos:column="22"/></operator> <name pos:line="253" pos:column="23">SSL_VERIFY_PEER<pos:position pos:line="253" pos:column="38"/></name></expr>;<pos:position pos:line="253" pos:column="39"/></expr_stmt>
        }<pos:position pos:line="254" pos:column="10"/></block></then></if>

        <expr_stmt><expr><call><name pos:line="256" pos:column="9">modssl_set_verify<pos:position pos:line="256" pos:column="26"/></name><argument_list pos:line="256" pos:column="26">(<argument><expr><name pos:line="256" pos:column="27">ssl<pos:position pos:line="256" pos:column="30"/></name></expr></argument>, <argument><expr><name pos:line="256" pos:column="32">verify<pos:position pos:line="256" pos:column="38"/></name></expr></argument>, <argument><expr><name pos:line="256" pos:column="40">ssl_callback_SSLVerify<pos:position pos:line="256" pos:column="62"/></name></expr></argument>)<pos:position pos:line="256" pos:column="63"/></argument_list></call></expr>;<pos:position pos:line="256" pos:column="64"/></expr_stmt>
        <expr_stmt><expr><call><name pos:line="257" pos:column="9">SSL_set_verify_result<pos:position pos:line="257" pos:column="30"/></name><argument_list pos:line="257" pos:column="30">(<argument><expr><name pos:line="257" pos:column="31">ssl<pos:position pos:line="257" pos:column="34"/></name></expr></argument>, <argument><expr><name pos:line="257" pos:column="36">X509_V_OK<pos:position pos:line="257" pos:column="45"/></name></expr></argument>)<pos:position pos:line="257" pos:column="46"/></argument_list></call></expr>;<pos:position pos:line="257" pos:column="47"/></expr_stmt>

        <comment type="block" pos:line="259" pos:column="9">/* determine whether we've to force a renegotiation */</comment>
        <if pos:line="260" pos:column="9">if <condition pos:line="260" pos:column="12">(<expr><operator pos:line="260" pos:column="13">!<pos:position pos:line="260" pos:column="14"/></operator><name pos:line="260" pos:column="14">renegotiate<pos:position pos:line="260" pos:column="25"/></name> <operator pos:line="260" pos:column="26">&amp;&amp;<pos:position pos:line="260" pos:column="36"/></operator> <name pos:line="260" pos:column="29">verify<pos:position pos:line="260" pos:column="35"/></name> <operator pos:line="260" pos:column="36">!=<pos:position pos:line="260" pos:column="38"/></operator> <name pos:line="260" pos:column="39">verify_old<pos:position pos:line="260" pos:column="49"/></name></expr>)<pos:position pos:line="260" pos:column="50"/></condition><then pos:line="260" pos:column="50"> <block pos:line="260" pos:column="51">{
            <if pos:line="261" pos:column="13">if <condition pos:line="261" pos:column="16">(<expr><operator pos:line="261" pos:column="17">(<pos:position pos:line="261" pos:column="18"/></operator><operator pos:line="261" pos:column="18">(<pos:position pos:line="261" pos:column="19"/></operator><name pos:line="261" pos:column="19">verify_old<pos:position pos:line="261" pos:column="29"/></name> <operator pos:line="261" pos:column="30">==<pos:position pos:line="261" pos:column="32"/></operator> <name pos:line="261" pos:column="33">SSL_VERIFY_NONE<pos:position pos:line="261" pos:column="48"/></name><operator pos:line="261" pos:column="48">)<pos:position pos:line="261" pos:column="49"/></operator> <operator pos:line="261" pos:column="50">&amp;&amp;<pos:position pos:line="261" pos:column="60"/></operator>
                 <operator pos:line="262" pos:column="18">(<pos:position pos:line="262" pos:column="19"/></operator><name pos:line="262" pos:column="19">verify<pos:position pos:line="262" pos:column="25"/></name>     <operator pos:line="262" pos:column="30">!=<pos:position pos:line="262" pos:column="32"/></operator> <name pos:line="262" pos:column="33">SSL_VERIFY_NONE<pos:position pos:line="262" pos:column="48"/></name><operator pos:line="262" pos:column="48">)<pos:position pos:line="262" pos:column="49"/></operator><operator pos:line="262" pos:column="49">)<pos:position pos:line="262" pos:column="50"/></operator> <operator pos:line="262" pos:column="51">||<pos:position pos:line="262" pos:column="53"/></operator>

                <operator pos:line="264" pos:column="17">(<pos:position pos:line="264" pos:column="18"/></operator><operator pos:line="264" pos:column="18">!<pos:position pos:line="264" pos:column="19"/></operator><operator pos:line="264" pos:column="19">(<pos:position pos:line="264" pos:column="20"/></operator><name pos:line="264" pos:column="20">verify_old<pos:position pos:line="264" pos:column="30"/></name> <operator pos:line="264" pos:column="31">&amp;<pos:position pos:line="264" pos:column="36"/></operator> <name pos:line="264" pos:column="33">SSL_VERIFY_PEER<pos:position pos:line="264" pos:column="48"/></name><operator pos:line="264" pos:column="48">)<pos:position pos:line="264" pos:column="49"/></operator> <operator pos:line="264" pos:column="50">&amp;&amp;<pos:position pos:line="264" pos:column="60"/></operator>
                  <operator pos:line="265" pos:column="19">(<pos:position pos:line="265" pos:column="20"/></operator><name pos:line="265" pos:column="20">verify<pos:position pos:line="265" pos:column="26"/></name>     <operator pos:line="265" pos:column="31">&amp;<pos:position pos:line="265" pos:column="36"/></operator> <name pos:line="265" pos:column="33">SSL_VERIFY_PEER<pos:position pos:line="265" pos:column="48"/></name><operator pos:line="265" pos:column="48">)<pos:position pos:line="265" pos:column="49"/></operator><operator pos:line="265" pos:column="49">)<pos:position pos:line="265" pos:column="50"/></operator> <operator pos:line="265" pos:column="51">||<pos:position pos:line="265" pos:column="53"/></operator>

                <operator pos:line="267" pos:column="17">(<pos:position pos:line="267" pos:column="18"/></operator><operator pos:line="267" pos:column="18">!<pos:position pos:line="267" pos:column="19"/></operator><operator pos:line="267" pos:column="19">(<pos:position pos:line="267" pos:column="20"/></operator><name pos:line="267" pos:column="20">verify_old<pos:position pos:line="267" pos:column="30"/></name> <operator pos:line="267" pos:column="31">&amp;<pos:position pos:line="267" pos:column="36"/></operator> <name pos:line="267" pos:column="33">SSL_VERIFY_FAIL_IF_NO_PEER_CERT<pos:position pos:line="267" pos:column="64"/></name><operator pos:line="267" pos:column="64">)<pos:position pos:line="267" pos:column="65"/></operator> <operator pos:line="267" pos:column="66">&amp;&amp;<pos:position pos:line="267" pos:column="76"/></operator>
                  <operator pos:line="268" pos:column="19">(<pos:position pos:line="268" pos:column="20"/></operator><name pos:line="268" pos:column="20">verify<pos:position pos:line="268" pos:column="26"/></name>     <operator pos:line="268" pos:column="31">&amp;<pos:position pos:line="268" pos:column="36"/></operator> <name pos:line="268" pos:column="33">SSL_VERIFY_FAIL_IF_NO_PEER_CERT<pos:position pos:line="268" pos:column="64"/></name><operator pos:line="268" pos:column="64">)<pos:position pos:line="268" pos:column="65"/></operator><operator pos:line="268" pos:column="65">)<pos:position pos:line="268" pos:column="66"/></operator></expr>)<pos:position pos:line="268" pos:column="67"/></condition><then pos:line="268" pos:column="67">
            <block pos:line="269" pos:column="13">{
                <expr_stmt><expr><name pos:line="270" pos:column="17">renegotiate<pos:position pos:line="270" pos:column="28"/></name> <operator pos:line="270" pos:column="29">=<pos:position pos:line="270" pos:column="30"/></operator> <name pos:line="270" pos:column="31">TRUE<pos:position pos:line="270" pos:column="35"/></name></expr>;<pos:position pos:line="270" pos:column="36"/></expr_stmt>
                <comment type="block" pos:line="271" pos:column="17">/* optimization */</comment>

                <if pos:line="273" pos:column="17">if <condition pos:line="273" pos:column="20">(<expr><operator pos:line="273" pos:column="21">(<pos:position pos:line="273" pos:column="22"/></operator><name><name pos:line="273" pos:column="22">dc<pos:position pos:line="273" pos:column="24"/></name><operator pos:line="273" pos:column="24">-&gt;<pos:position pos:line="273" pos:column="29"/></operator><name pos:line="273" pos:column="26">nOptions<pos:position pos:line="273" pos:column="34"/></name></name> <operator pos:line="273" pos:column="35">&amp;<pos:position pos:line="273" pos:column="40"/></operator> <name pos:line="273" pos:column="37">SSL_OPT_OPTRENEGOTIATE<pos:position pos:line="273" pos:column="59"/></name><operator pos:line="273" pos:column="59">)<pos:position pos:line="273" pos:column="60"/></operator> <operator pos:line="273" pos:column="61">&amp;&amp;<pos:position pos:line="273" pos:column="71"/></operator>
                    <operator pos:line="274" pos:column="21">(<pos:position pos:line="274" pos:column="22"/></operator><name pos:line="274" pos:column="22">verify_old<pos:position pos:line="274" pos:column="32"/></name> <operator pos:line="274" pos:column="33">==<pos:position pos:line="274" pos:column="35"/></operator> <name pos:line="274" pos:column="36">SSL_VERIFY_NONE<pos:position pos:line="274" pos:column="51"/></name><operator pos:line="274" pos:column="51">)<pos:position pos:line="274" pos:column="52"/></operator> <operator pos:line="274" pos:column="53">&amp;&amp;<pos:position pos:line="274" pos:column="63"/></operator>
                    <operator pos:line="275" pos:column="21">(<pos:position pos:line="275" pos:column="22"/></operator><operator pos:line="275" pos:column="22">(<pos:position pos:line="275" pos:column="23"/></operator><name pos:line="275" pos:column="23">peercert<pos:position pos:line="275" pos:column="31"/></name> <operator pos:line="275" pos:column="32">=<pos:position pos:line="275" pos:column="33"/></operator> <call><name pos:line="275" pos:column="34">SSL_get_peer_certificate<pos:position pos:line="275" pos:column="58"/></name><argument_list pos:line="275" pos:column="58">(<argument><expr><name pos:line="275" pos:column="59">ssl<pos:position pos:line="275" pos:column="62"/></name></expr></argument>)<pos:position pos:line="275" pos:column="63"/></argument_list></call><operator pos:line="275" pos:column="63">)<pos:position pos:line="275" pos:column="64"/></operator> <operator pos:line="275" pos:column="65">!=<pos:position pos:line="275" pos:column="67"/></operator> <name pos:line="275" pos:column="68">NULL<pos:position pos:line="275" pos:column="72"/></name><operator pos:line="275" pos:column="72">)<pos:position pos:line="275" pos:column="73"/></operator></expr>)<pos:position pos:line="275" pos:column="74"/></condition><then pos:line="275" pos:column="74">
                <block pos:line="276" pos:column="17">{
                    <expr_stmt><expr><name pos:line="277" pos:column="21">renegotiate_quick<pos:position pos:line="277" pos:column="38"/></name> <operator pos:line="277" pos:column="39">=<pos:position pos:line="277" pos:column="40"/></operator> <name pos:line="277" pos:column="41">TRUE<pos:position pos:line="277" pos:column="45"/></name></expr>;<pos:position pos:line="277" pos:column="46"/></expr_stmt>
                    <expr_stmt><expr><call><name pos:line="278" pos:column="21">X509_free<pos:position pos:line="278" pos:column="30"/></name><argument_list pos:line="278" pos:column="30">(<argument><expr><name pos:line="278" pos:column="31">peercert<pos:position pos:line="278" pos:column="39"/></name></expr></argument>)<pos:position pos:line="278" pos:column="40"/></argument_list></call></expr>;<pos:position pos:line="278" pos:column="41"/></expr_stmt>
                }<pos:position pos:line="279" pos:column="18"/></block></then></if>

                <expr_stmt><expr><call><name pos:line="281" pos:column="17">ap_log_rerror<pos:position pos:line="281" pos:column="30"/></name><argument_list pos:line="281" pos:column="30">(<argument><expr><name pos:line="281" pos:column="31">APLOG_MARK<pos:position pos:line="281" pos:column="41"/></name></expr></argument>, <argument><expr><name pos:line="281" pos:column="43">APLOG_DEBUG<pos:position pos:line="281" pos:column="54"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="281" pos:column="56">0<pos:position pos:line="281" pos:column="57"/></literal></expr></argument>, <argument><expr><name pos:line="281" pos:column="59">r<pos:position pos:line="281" pos:column="60"/></name></expr></argument>,
                              <argument><expr><literal type="string" pos:line="282" pos:column="31">"Changed client verification type will force "<pos:position pos:line="282" pos:column="77"/></literal>
                              <literal type="string" pos:line="283" pos:column="31">"%srenegotiation"<pos:position pos:line="283" pos:column="48"/></literal></expr></argument>,
                              <argument><expr><ternary><condition><expr><name pos:line="284" pos:column="31">renegotiate_quick<pos:position pos:line="284" pos:column="48"/></name></expr> ?<pos:position pos:line="284" pos:column="50"/></condition><then pos:line="284" pos:column="50"> <expr><literal type="string" pos:line="284" pos:column="51">"quick "<pos:position pos:line="284" pos:column="59"/></literal></expr> <pos:position pos:line="284" pos:column="60"/></then><else pos:line="284" pos:column="60">: <expr><literal type="string" pos:line="284" pos:column="62">""<pos:position pos:line="284" pos:column="64"/></literal></expr></else></ternary></expr></argument>)<pos:position pos:line="284" pos:column="65"/></argument_list></call></expr>;<pos:position pos:line="284" pos:column="66"/></expr_stmt>
             }<pos:position pos:line="285" pos:column="15"/></block></then></if>
        }<pos:position pos:line="286" pos:column="10"/></block></then></if>
        <comment type="block" pos:line="287" pos:column="9">/* If we're handling a request for a vhost other than the default one,
         * then we need to make sure that client authentication is properly
         * enforced. For clients supplying an SNI extension, the peer
         * certificate verification has happened in the handshake already
         * (and r-&gt;server == handshakeserver). For non-SNI requests,
         * an additional check is needed here. If client authentication
         * is configured as mandatory, then we can only proceed if the
         * CA list doesn't have to be changed (OpenSSL doesn't provide
         * an option to change the list for an existing session).
         */</comment>
        <if pos:line="297" pos:column="9">if <condition pos:line="297" pos:column="12">(<expr><operator pos:line="297" pos:column="13">(<pos:position pos:line="297" pos:column="14"/></operator><name><name pos:line="297" pos:column="14">r<pos:position pos:line="297" pos:column="15"/></name><operator pos:line="297" pos:column="15">-&gt;<pos:position pos:line="297" pos:column="20"/></operator><name pos:line="297" pos:column="17">server<pos:position pos:line="297" pos:column="23"/></name></name> <operator pos:line="297" pos:column="24">!=<pos:position pos:line="297" pos:column="26"/></operator> <name pos:line="297" pos:column="27">handshakeserver<pos:position pos:line="297" pos:column="42"/></name><operator pos:line="297" pos:column="42">)<pos:position pos:line="297" pos:column="43"/></operator>
            <operator pos:line="298" pos:column="13">&amp;&amp;<pos:position pos:line="298" pos:column="23"/></operator> <name pos:line="298" pos:column="16">renegotiate<pos:position pos:line="298" pos:column="27"/></name>
            <operator pos:line="299" pos:column="13">&amp;&amp;<pos:position pos:line="299" pos:column="23"/></operator> <operator pos:line="299" pos:column="16">(<pos:position pos:line="299" pos:column="17"/></operator><operator pos:line="299" pos:column="17">(<pos:position pos:line="299" pos:column="18"/></operator><name pos:line="299" pos:column="18">verify<pos:position pos:line="299" pos:column="24"/></name> <operator pos:line="299" pos:column="25">&amp;<pos:position pos:line="299" pos:column="30"/></operator> <name pos:line="299" pos:column="27">SSL_VERIFY_PEER<pos:position pos:line="299" pos:column="42"/></name><operator pos:line="299" pos:column="42">)<pos:position pos:line="299" pos:column="43"/></operator> <operator pos:line="299" pos:column="44">||<pos:position pos:line="299" pos:column="46"/></operator>
                <operator pos:line="300" pos:column="17">(<pos:position pos:line="300" pos:column="18"/></operator><name pos:line="300" pos:column="18">verify<pos:position pos:line="300" pos:column="24"/></name> <operator pos:line="300" pos:column="25">&amp;<pos:position pos:line="300" pos:column="30"/></operator> <name pos:line="300" pos:column="27">SSL_VERIFY_FAIL_IF_NO_PEER_CERT<pos:position pos:line="300" pos:column="58"/></name><operator pos:line="300" pos:column="58">)<pos:position pos:line="300" pos:column="59"/></operator><operator pos:line="300" pos:column="59">)<pos:position pos:line="300" pos:column="60"/></operator></expr>)<pos:position pos:line="300" pos:column="61"/></condition><then pos:line="300" pos:column="61"> <block pos:line="300" pos:column="62">{
            <decl_stmt><decl><type><name pos:line="301" pos:column="13">SSLSrvConfigRec<pos:position pos:line="301" pos:column="28"/></name> <modifier pos:line="301" pos:column="29">*<pos:position pos:line="301" pos:column="30"/></modifier></type><name pos:line="301" pos:column="30">hssc<pos:position pos:line="301" pos:column="34"/></name> <init pos:line="301" pos:column="35">= <expr><call><name pos:line="301" pos:column="37">mySrvConfig<pos:position pos:line="301" pos:column="48"/></name><argument_list pos:line="301" pos:column="48">(<argument><expr><name pos:line="301" pos:column="49">handshakeserver<pos:position pos:line="301" pos:column="64"/></name></expr></argument>)<pos:position pos:line="301" pos:column="65"/></argument_list></call></expr></init></decl>;<pos:position pos:line="301" pos:column="66"/></decl_stmt>

<cpp:define pos:line="303" pos:column="1">#<cpp:directive pos:line="303" pos:column="2">define<pos:position pos:line="303" pos:column="8"/></cpp:directive> <cpp:macro><name pos:line="303" pos:column="9">MODSSL_CFG_CA_NE<pos:position pos:line="303" pos:column="25"/></name><parameter_list pos:line="303" pos:column="25">(<parameter><type><name pos:line="303" pos:column="26">f<pos:position pos:line="303" pos:column="27"/></name></type></parameter>, <parameter><type><name pos:line="303" pos:column="29">sc1<pos:position pos:line="303" pos:column="32"/></name></type></parameter>, <parameter><type><name pos:line="303" pos:column="34">sc2<pos:position pos:line="303" pos:column="37"/></name></type></parameter>)<pos:position pos:line="303" pos:column="38"/></parameter_list></cpp:macro> \
            <cpp:value pos:line="304" pos:column="13">(sc1-&gt;server-&gt;auth.f &amp;&amp; \
             (!sc2-&gt;server-&gt;auth.f || \
              strNE(sc1-&gt;server-&gt;auth.f, sc2-&gt;server-&gt;auth.f)))<pos:position pos:line="306" pos:column="64"/></cpp:value></cpp:define>

            <if pos:line="308" pos:column="13">if <condition pos:line="308" pos:column="16">(<expr><call><name pos:line="308" pos:column="17">MODSSL_CFG_CA_NE<pos:position pos:line="308" pos:column="33"/></name><argument_list pos:line="308" pos:column="33">(<argument><expr><name pos:line="308" pos:column="34">ca_cert_file<pos:position pos:line="308" pos:column="46"/></name></expr></argument>, <argument><expr><name pos:line="308" pos:column="48">sc<pos:position pos:line="308" pos:column="50"/></name></expr></argument>, <argument><expr><name pos:line="308" pos:column="52">hssc<pos:position pos:line="308" pos:column="56"/></name></expr></argument>)<pos:position pos:line="308" pos:column="57"/></argument_list></call> <operator pos:line="308" pos:column="58">||<pos:position pos:line="308" pos:column="60"/></operator>
                <call><name pos:line="309" pos:column="17">MODSSL_CFG_CA_NE<pos:position pos:line="309" pos:column="33"/></name><argument_list pos:line="309" pos:column="33">(<argument><expr><name pos:line="309" pos:column="34">ca_cert_path<pos:position pos:line="309" pos:column="46"/></name></expr></argument>, <argument><expr><name pos:line="309" pos:column="48">sc<pos:position pos:line="309" pos:column="50"/></name></expr></argument>, <argument><expr><name pos:line="309" pos:column="52">hssc<pos:position pos:line="309" pos:column="56"/></name></expr></argument>)<pos:position pos:line="309" pos:column="57"/></argument_list></call></expr>)<pos:position pos:line="309" pos:column="58"/></condition><then pos:line="309" pos:column="58"> <block pos:line="309" pos:column="59">{
                <if pos:line="310" pos:column="17">if <condition pos:line="310" pos:column="20">(<expr><name pos:line="310" pos:column="21">verify<pos:position pos:line="310" pos:column="27"/></name> <operator pos:line="310" pos:column="28">&amp;<pos:position pos:line="310" pos:column="33"/></operator> <name pos:line="310" pos:column="30">SSL_VERIFY_FAIL_IF_NO_PEER_CERT<pos:position pos:line="310" pos:column="61"/></name></expr>)<pos:position pos:line="310" pos:column="62"/></condition><then pos:line="310" pos:column="62"> <block pos:line="310" pos:column="63">{
                    <expr_stmt><expr><call><name pos:line="311" pos:column="21">ap_log_rerror<pos:position pos:line="311" pos:column="34"/></name><argument_list pos:line="311" pos:column="34">(<argument><expr><name pos:line="311" pos:column="35">APLOG_MARK<pos:position pos:line="311" pos:column="45"/></name></expr></argument>, <argument><expr><name pos:line="311" pos:column="47">APLOG_INFO<pos:position pos:line="311" pos:column="57"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="311" pos:column="59">0<pos:position pos:line="311" pos:column="60"/></literal></expr></argument>, <argument><expr><name pos:line="311" pos:column="62">r<pos:position pos:line="311" pos:column="63"/></name></expr></argument>,
                         <argument><expr><literal type="string" pos:line="312" pos:column="26">"Non-default virtual host with SSLVerify set to "<pos:position pos:line="312" pos:column="75"/></literal>
                         <literal type="string" pos:line="313" pos:column="26">"'require' and VirtualHost-specific CA certificate "<pos:position pos:line="313" pos:column="78"/></literal>
                         <literal type="string" pos:line="314" pos:column="26">"list is only available to clients with TLS server "<pos:position pos:line="314" pos:column="78"/></literal>
                         <literal type="string" pos:line="315" pos:column="26">"name indication (SNI) support"<pos:position pos:line="315" pos:column="57"/></literal></expr></argument>)<pos:position pos:line="315" pos:column="58"/></argument_list></call></expr>;<pos:position pos:line="315" pos:column="59"/></expr_stmt>
                    <expr_stmt><expr><call><name pos:line="316" pos:column="21">modssl_set_verify<pos:position pos:line="316" pos:column="38"/></name><argument_list pos:line="316" pos:column="38">(<argument><expr><name pos:line="316" pos:column="39">ssl<pos:position pos:line="316" pos:column="42"/></name></expr></argument>, <argument><expr><name pos:line="316" pos:column="44">verify_old<pos:position pos:line="316" pos:column="54"/></name></expr></argument>, <argument><expr><name pos:line="316" pos:column="56">NULL<pos:position pos:line="316" pos:column="60"/></name></expr></argument>)<pos:position pos:line="316" pos:column="61"/></argument_list></call></expr>;<pos:position pos:line="316" pos:column="62"/></expr_stmt>
                    <return pos:line="317" pos:column="21">return <expr><name pos:line="317" pos:column="28">HTTP_FORBIDDEN<pos:position pos:line="317" pos:column="42"/></name></expr>;<pos:position pos:line="317" pos:column="43"/></return>
                }<pos:position pos:line="318" pos:column="18"/></block></then> <else pos:line="318" pos:column="19">else
                    <comment type="block" pos:line="319" pos:column="21">/* let it pass, possibly with an "incorrect" peer cert,
                     * so make sure the SSL_CLIENT_VERIFY environment variable
                     * will indicate partial success only, later on.
                     */</comment>
                    <block type="pseudo"><expr_stmt><expr><name><name pos:line="323" pos:column="21">sslconn<pos:position pos:line="323" pos:column="28"/></name><operator pos:line="323" pos:column="28">-&gt;<pos:position pos:line="323" pos:column="33"/></operator><name pos:line="323" pos:column="30">verify_info<pos:position pos:line="323" pos:column="41"/></name></name> <operator pos:line="323" pos:column="42">=<pos:position pos:line="323" pos:column="43"/></operator> <literal type="string" pos:line="323" pos:column="44">"GENEROUS"<pos:position pos:line="323" pos:column="54"/></literal></expr>;<pos:position pos:line="323" pos:column="55"/></expr_stmt></block></else></if>
            }<pos:position pos:line="324" pos:column="14"/></block></then></if>
        }<pos:position pos:line="325" pos:column="10"/></block></then></if>
    }<pos:position pos:line="326" pos:column="6"/></block></then></if>

    <comment type="block" pos:line="328" pos:column="5">/* If a renegotiation is now required for this location, and the
     * request includes a message body (and the client has not
     * requested a "100 Continue" response), then the client will be
     * streaming the request body over the wire already.  In that
     * case, it is not possible to stop and perform a new SSL
     * handshake immediately; once the SSL library moves to the
     * "accept" state, it will reject the SSL packets which the client
     * is sending for the request body.
     *
     * To allow authentication to complete in this auth hook, the
     * solution used here is to fill a (bounded) buffer with the
     * request body, and then to reinject that request body later.
     */</comment>
    <if pos:line="341" pos:column="5">if <condition pos:line="341" pos:column="8">(<expr><name pos:line="341" pos:column="9">renegotiate<pos:position pos:line="341" pos:column="20"/></name> <operator pos:line="341" pos:column="21">&amp;&amp;<pos:position pos:line="341" pos:column="31"/></operator> <operator pos:line="341" pos:column="24">!<pos:position pos:line="341" pos:column="25"/></operator><name pos:line="341" pos:column="25">renegotiate_quick<pos:position pos:line="341" pos:column="42"/></name>
        <operator pos:line="342" pos:column="9">&amp;&amp;<pos:position pos:line="342" pos:column="19"/></operator> <operator pos:line="342" pos:column="12">(<pos:position pos:line="342" pos:column="13"/></operator><call><name pos:line="342" pos:column="13">apr_table_get<pos:position pos:line="342" pos:column="26"/></name><argument_list pos:line="342" pos:column="26">(<argument><expr><name><name pos:line="342" pos:column="27">r<pos:position pos:line="342" pos:column="28"/></name><operator pos:line="342" pos:column="28">-&gt;<pos:position pos:line="342" pos:column="33"/></operator><name pos:line="342" pos:column="30">headers_in<pos:position pos:line="342" pos:column="40"/></name></name></expr></argument>, <argument><expr><literal type="string" pos:line="342" pos:column="42">"transfer-encoding"<pos:position pos:line="342" pos:column="61"/></literal></expr></argument>)<pos:position pos:line="342" pos:column="62"/></argument_list></call>
            <operator pos:line="343" pos:column="13">||<pos:position pos:line="343" pos:column="15"/></operator> <operator pos:line="343" pos:column="16">(<pos:position pos:line="343" pos:column="17"/></operator><call><name pos:line="343" pos:column="17">apr_table_get<pos:position pos:line="343" pos:column="30"/></name><argument_list pos:line="343" pos:column="30">(<argument><expr><name><name pos:line="343" pos:column="31">r<pos:position pos:line="343" pos:column="32"/></name><operator pos:line="343" pos:column="32">-&gt;<pos:position pos:line="343" pos:column="37"/></operator><name pos:line="343" pos:column="34">headers_in<pos:position pos:line="343" pos:column="44"/></name></name></expr></argument>, <argument><expr><literal type="string" pos:line="343" pos:column="46">"content-length"<pos:position pos:line="343" pos:column="62"/></literal></expr></argument>)<pos:position pos:line="343" pos:column="63"/></argument_list></call>
                <operator pos:line="344" pos:column="17">&amp;&amp;<pos:position pos:line="344" pos:column="27"/></operator> <call><name pos:line="344" pos:column="20">strcmp<pos:position pos:line="344" pos:column="26"/></name><argument_list pos:line="344" pos:column="26">(<argument><expr><call><name pos:line="344" pos:column="27">apr_table_get<pos:position pos:line="344" pos:column="40"/></name><argument_list pos:line="344" pos:column="40">(<argument><expr><name><name pos:line="344" pos:column="41">r<pos:position pos:line="344" pos:column="42"/></name><operator pos:line="344" pos:column="42">-&gt;<pos:position pos:line="344" pos:column="47"/></operator><name pos:line="344" pos:column="44">headers_in<pos:position pos:line="344" pos:column="54"/></name></name></expr></argument>, <argument><expr><literal type="string" pos:line="344" pos:column="56">"content-length"<pos:position pos:line="344" pos:column="72"/></literal></expr></argument>)<pos:position pos:line="344" pos:column="73"/></argument_list></call></expr></argument>, <argument><expr><literal type="string" pos:line="344" pos:column="75">"0"<pos:position pos:line="344" pos:column="78"/></literal></expr></argument>)<pos:position pos:line="344" pos:column="79"/></argument_list></call><operator pos:line="344" pos:column="79">)<pos:position pos:line="344" pos:column="80"/></operator><operator pos:line="344" pos:column="80">)<pos:position pos:line="344" pos:column="81"/></operator>
        <operator pos:line="345" pos:column="9">&amp;&amp;<pos:position pos:line="345" pos:column="19"/></operator> <operator pos:line="345" pos:column="12">!<pos:position pos:line="345" pos:column="13"/></operator><name><name pos:line="345" pos:column="13">r<pos:position pos:line="345" pos:column="14"/></name><operator pos:line="345" pos:column="14">-&gt;<pos:position pos:line="345" pos:column="19"/></operator><name pos:line="345" pos:column="16">expecting_100<pos:position pos:line="345" pos:column="29"/></name></name></expr>)<pos:position pos:line="345" pos:column="30"/></condition><then pos:line="345" pos:column="30"> <block pos:line="345" pos:column="31">{
        <decl_stmt><decl><type><name pos:line="346" pos:column="9">int<pos:position pos:line="346" pos:column="12"/></name></type> <name pos:line="346" pos:column="13">rv<pos:position pos:line="346" pos:column="15"/></name></decl>;<pos:position pos:line="346" pos:column="16"/></decl_stmt>
        <decl_stmt><decl><type><name pos:line="347" pos:column="9">apr_size_t<pos:position pos:line="347" pos:column="19"/></name></type> <name pos:line="347" pos:column="20">rsize<pos:position pos:line="347" pos:column="25"/></name></decl>;<pos:position pos:line="347" pos:column="26"/></decl_stmt>

        <expr_stmt><expr><name pos:line="349" pos:column="9">rsize<pos:position pos:line="349" pos:column="14"/></name> <operator pos:line="349" pos:column="15">=<pos:position pos:line="349" pos:column="16"/></operator> <ternary><condition><expr><name><name pos:line="349" pos:column="17">dc<pos:position pos:line="349" pos:column="19"/></name><operator pos:line="349" pos:column="19">-&gt;<pos:position pos:line="349" pos:column="24"/></operator><name pos:line="349" pos:column="21">nRenegBufferSize<pos:position pos:line="349" pos:column="37"/></name></name> <operator pos:line="349" pos:column="38">==<pos:position pos:line="349" pos:column="40"/></operator> <name pos:line="349" pos:column="41">UNSET<pos:position pos:line="349" pos:column="46"/></name></expr> ?<pos:position pos:line="349" pos:column="48"/></condition><then pos:line="349" pos:column="48"> <expr><name pos:line="349" pos:column="49">DEFAULT_RENEG_BUFFER_SIZE<pos:position pos:line="349" pos:column="74"/></name></expr> <pos:position pos:line="349" pos:column="75"/></then><else pos:line="349" pos:column="75">:
                                                <expr><name><name pos:line="350" pos:column="49">dc<pos:position pos:line="350" pos:column="51"/></name><operator pos:line="350" pos:column="51">-&gt;<pos:position pos:line="350" pos:column="56"/></operator><name pos:line="350" pos:column="53">nRenegBufferSize<pos:position pos:line="350" pos:column="69"/></name></name></expr></else></ternary></expr>;<pos:position pos:line="350" pos:column="70"/></expr_stmt>
        <if pos:line="351" pos:column="9">if <condition pos:line="351" pos:column="12">(<expr><name pos:line="351" pos:column="13">rsize<pos:position pos:line="351" pos:column="18"/></name> <operator pos:line="351" pos:column="19">&gt;<pos:position pos:line="351" pos:column="23"/></operator> <literal type="number" pos:line="351" pos:column="21">0<pos:position pos:line="351" pos:column="22"/></literal></expr>)<pos:position pos:line="351" pos:column="23"/></condition><then pos:line="351" pos:column="23"> <block pos:line="351" pos:column="24">{
            <comment type="block" pos:line="352" pos:column="13">/* Fill the I/O buffer with the request body if possible. */</comment>
            <expr_stmt><expr><name pos:line="353" pos:column="13">rv<pos:position pos:line="353" pos:column="15"/></name> <operator pos:line="353" pos:column="16">=<pos:position pos:line="353" pos:column="17"/></operator> <call><name pos:line="353" pos:column="18">ssl_io_buffer_fill<pos:position pos:line="353" pos:column="36"/></name><argument_list pos:line="353" pos:column="36">(<argument><expr><name pos:line="353" pos:column="37">r<pos:position pos:line="353" pos:column="38"/></name></expr></argument>, <argument><expr><name pos:line="353" pos:column="40">rsize<pos:position pos:line="353" pos:column="45"/></name></expr></argument>)<pos:position pos:line="353" pos:column="46"/></argument_list></call></expr>;<pos:position pos:line="353" pos:column="47"/></expr_stmt>
        }<pos:position pos:line="354" pos:column="10"/></block></then>
        <else pos:line="355" pos:column="9">else <block pos:line="355" pos:column="14">{
            <comment type="block" pos:line="356" pos:column="13">/* If the reneg buffer size is set to zero, just fail. */</comment>
            <expr_stmt><expr><name pos:line="357" pos:column="13">rv<pos:position pos:line="357" pos:column="15"/></name> <operator pos:line="357" pos:column="16">=<pos:position pos:line="357" pos:column="17"/></operator> <name pos:line="357" pos:column="18">HTTP_REQUEST_ENTITY_TOO_LARGE<pos:position pos:line="357" pos:column="47"/></name></expr>;<pos:position pos:line="357" pos:column="48"/></expr_stmt>
        }<pos:position pos:line="358" pos:column="10"/></block></else></if>

        <if pos:line="360" pos:column="9">if <condition pos:line="360" pos:column="12">(<expr><name pos:line="360" pos:column="13">rv<pos:position pos:line="360" pos:column="15"/></name></expr>)<pos:position pos:line="360" pos:column="16"/></condition><then pos:line="360" pos:column="16"> <block pos:line="360" pos:column="17">{
            <expr_stmt><expr><call><name pos:line="361" pos:column="13">ap_log_rerror<pos:position pos:line="361" pos:column="26"/></name><argument_list pos:line="361" pos:column="26">(<argument><expr><name pos:line="361" pos:column="27">APLOG_MARK<pos:position pos:line="361" pos:column="37"/></name></expr></argument>, <argument><expr><name pos:line="361" pos:column="39">APLOG_ERR<pos:position pos:line="361" pos:column="48"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="361" pos:column="50">0<pos:position pos:line="361" pos:column="51"/></literal></expr></argument>, <argument><expr><name pos:line="361" pos:column="53">r<pos:position pos:line="361" pos:column="54"/></name></expr></argument>,
                          <argument><expr><literal type="string" pos:line="362" pos:column="27">"could not buffer message body to allow "<pos:position pos:line="362" pos:column="68"/></literal>
                          <literal type="string" pos:line="363" pos:column="27">"SSL renegotiation to proceed"<pos:position pos:line="363" pos:column="57"/></literal></expr></argument>)<pos:position pos:line="363" pos:column="58"/></argument_list></call></expr>;<pos:position pos:line="363" pos:column="59"/></expr_stmt>
            <return pos:line="364" pos:column="13">return <expr><name pos:line="364" pos:column="20">rv<pos:position pos:line="364" pos:column="22"/></name></expr>;<pos:position pos:line="364" pos:column="23"/></return>
        }<pos:position pos:line="365" pos:column="10"/></block></then></if>
    }<pos:position pos:line="366" pos:column="6"/></block></then></if>

    <comment type="block" pos:line="368" pos:column="5">/*
     * now do the renegotiation if anything was actually reconfigured
     */</comment>
    <if pos:line="371" pos:column="5">if <condition pos:line="371" pos:column="8">(<expr><name pos:line="371" pos:column="9">renegotiate<pos:position pos:line="371" pos:column="20"/></name></expr>)<pos:position pos:line="371" pos:column="21"/></condition><then pos:line="371" pos:column="21"> <block pos:line="371" pos:column="22">{
        <comment type="block" pos:line="372" pos:column="9">/*
         * Now we force the SSL renegotation by sending the Hello Request
         * message to the client. Here we have to do a workaround: Actually
         * OpenSSL returns immediately after sending the Hello Request (the
         * intent AFAIK is because the SSL/TLS protocol says it's not a must
         * that the client replies to a Hello Request). But because we insist
         * on a reply (anything else is an error for us) we have to go to the
         * ACCEPT state manually. Using SSL_set_accept_state() doesn't work
         * here because it resets too much of the connection.  So we set the
         * state explicitly and continue the handshake manually.
         */</comment>
        <expr_stmt><expr><call><name pos:line="383" pos:column="9">ap_log_rerror<pos:position pos:line="383" pos:column="22"/></name><argument_list pos:line="383" pos:column="22">(<argument><expr><name pos:line="383" pos:column="23">APLOG_MARK<pos:position pos:line="383" pos:column="33"/></name></expr></argument>, <argument><expr><name pos:line="383" pos:column="35">APLOG_INFO<pos:position pos:line="383" pos:column="45"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="383" pos:column="47">0<pos:position pos:line="383" pos:column="48"/></literal></expr></argument>, <argument><expr><name pos:line="383" pos:column="50">r<pos:position pos:line="383" pos:column="51"/></name></expr></argument>,
                      <argument><expr><literal type="string" pos:line="384" pos:column="23">"Requesting connection re-negotiation"<pos:position pos:line="384" pos:column="61"/></literal></expr></argument>)<pos:position pos:line="384" pos:column="62"/></argument_list></call></expr>;<pos:position pos:line="384" pos:column="63"/></expr_stmt>

        <if pos:line="386" pos:column="9">if <condition pos:line="386" pos:column="12">(<expr><name pos:line="386" pos:column="13">renegotiate_quick<pos:position pos:line="386" pos:column="30"/></name></expr>)<pos:position pos:line="386" pos:column="31"/></condition><then pos:line="386" pos:column="31"> <block pos:line="386" pos:column="32">{
            <expr_stmt><expr><call><name pos:line="387" pos:column="13">STACK_OF<pos:position pos:line="387" pos:column="21"/></name><argument_list pos:line="387" pos:column="21">(<argument><expr><name pos:line="387" pos:column="22">X509<pos:position pos:line="387" pos:column="26"/></name></expr></argument>)<pos:position pos:line="387" pos:column="27"/></argument_list></call> <operator pos:line="387" pos:column="28">*<pos:position pos:line="387" pos:column="29"/></operator><name pos:line="387" pos:column="29">cert_stack<pos:position pos:line="387" pos:column="39"/></name></expr>;<pos:position pos:line="387" pos:column="40"/></expr_stmt>

            <comment type="block" pos:line="389" pos:column="13">/* perform just a manual re-verification of the peer */</comment>
            <expr_stmt><expr><call><name pos:line="390" pos:column="13">ap_log_rerror<pos:position pos:line="390" pos:column="26"/></name><argument_list pos:line="390" pos:column="26">(<argument><expr><name pos:line="390" pos:column="27">APLOG_MARK<pos:position pos:line="390" pos:column="37"/></name></expr></argument>, <argument><expr><name pos:line="390" pos:column="39">APLOG_DEBUG<pos:position pos:line="390" pos:column="50"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="390" pos:column="52">0<pos:position pos:line="390" pos:column="53"/></literal></expr></argument>, <argument><expr><name pos:line="390" pos:column="55">r<pos:position pos:line="390" pos:column="56"/></name></expr></argument>,
                         <argument><expr><literal type="string" pos:line="391" pos:column="26">"Performing quick renegotiation: "<pos:position pos:line="391" pos:column="60"/></literal>
                         <literal type="string" pos:line="392" pos:column="26">"just re-verifying the peer"<pos:position pos:line="392" pos:column="54"/></literal></expr></argument>)<pos:position pos:line="392" pos:column="55"/></argument_list></call></expr>;<pos:position pos:line="392" pos:column="56"/></expr_stmt>

            <expr_stmt><expr><name pos:line="394" pos:column="13">cert_stack<pos:position pos:line="394" pos:column="23"/></name> <operator pos:line="394" pos:column="24">=<pos:position pos:line="394" pos:column="25"/></operator> <operator pos:line="394" pos:column="26">(<pos:position pos:line="394" pos:column="27"/></operator><call><name pos:line="394" pos:column="27">STACK_OF<pos:position pos:line="394" pos:column="35"/></name><argument_list pos:line="394" pos:column="35">(<argument><expr><name pos:line="394" pos:column="36">X509<pos:position pos:line="394" pos:column="40"/></name></expr></argument>)<pos:position pos:line="394" pos:column="41"/></argument_list></call> <operator pos:line="394" pos:column="42">*<pos:position pos:line="394" pos:column="43"/></operator><operator pos:line="394" pos:column="43">)<pos:position pos:line="394" pos:column="44"/></operator><call><name pos:line="394" pos:column="44">SSL_get_peer_cert_chain<pos:position pos:line="394" pos:column="67"/></name><argument_list pos:line="394" pos:column="67">(<argument><expr><name pos:line="394" pos:column="68">ssl<pos:position pos:line="394" pos:column="71"/></name></expr></argument>)<pos:position pos:line="394" pos:column="72"/></argument_list></call></expr>;<pos:position pos:line="394" pos:column="73"/></expr_stmt>

            <expr_stmt><expr><name pos:line="396" pos:column="13">cert<pos:position pos:line="396" pos:column="17"/></name> <operator pos:line="396" pos:column="18">=<pos:position pos:line="396" pos:column="19"/></operator> <call><name pos:line="396" pos:column="20">SSL_get_peer_certificate<pos:position pos:line="396" pos:column="44"/></name><argument_list pos:line="396" pos:column="44">(<argument><expr><name pos:line="396" pos:column="45">ssl<pos:position pos:line="396" pos:column="48"/></name></expr></argument>)<pos:position pos:line="396" pos:column="49"/></argument_list></call></expr>;<pos:position pos:line="396" pos:column="50"/></expr_stmt>

            <if pos:line="398" pos:column="13">if <condition pos:line="398" pos:column="16">(<expr><operator pos:line="398" pos:column="17">!<pos:position pos:line="398" pos:column="18"/></operator><name pos:line="398" pos:column="18">cert_stack<pos:position pos:line="398" pos:column="28"/></name> <operator pos:line="398" pos:column="29">&amp;&amp;<pos:position pos:line="398" pos:column="39"/></operator> <name pos:line="398" pos:column="32">cert<pos:position pos:line="398" pos:column="36"/></name></expr>)<pos:position pos:line="398" pos:column="37"/></condition><then pos:line="398" pos:column="37"> <block pos:line="398" pos:column="38">{
                <comment type="block" pos:line="399" pos:column="17">/* client cert is in the session cache, but there is
                 * no chain, since ssl3_get_client_certificate()
                 * sk_X509_shift-ed the peer cert out of the chain.
                 * we put it back here for the purpose of quick_renegotiation.
                 */</comment>
                <expr_stmt><expr><name pos:line="404" pos:column="17">cert_stack<pos:position pos:line="404" pos:column="27"/></name> <operator pos:line="404" pos:column="28">=<pos:position pos:line="404" pos:column="29"/></operator> <call><name pos:line="404" pos:column="30">sk_X509_new_null<pos:position pos:line="404" pos:column="46"/></name><argument_list pos:line="404" pos:column="46">()<pos:position pos:line="404" pos:column="48"/></argument_list></call></expr>;<pos:position pos:line="404" pos:column="49"/></expr_stmt>
                <macro><name pos:line="405" pos:column="17">sk_X509_push<pos:position pos:line="405" pos:column="29"/></name><argument_list pos:line="405" pos:column="29">(<argument pos:line="405" pos:column="30">cert_stack<pos:position pos:line="405" pos:column="40"/></argument>, <argument pos:line="405" pos:column="42">MODSSL_PCHAR_CAST cert<pos:position pos:line="405" pos:column="64"/></argument>)<pos:position pos:line="405" pos:column="65"/></argument_list></macro><empty_stmt pos:line="405" pos:column="65">;<pos:position pos:line="405" pos:column="66"/></empty_stmt>
            }<pos:position pos:line="406" pos:column="14"/></block></then></if>

            <if pos:line="408" pos:column="13">if <condition pos:line="408" pos:column="16">(<expr><operator pos:line="408" pos:column="17">!<pos:position pos:line="408" pos:column="18"/></operator><name pos:line="408" pos:column="18">cert_stack<pos:position pos:line="408" pos:column="28"/></name> <operator pos:line="408" pos:column="29">||<pos:position pos:line="408" pos:column="31"/></operator> <operator pos:line="408" pos:column="32">(<pos:position pos:line="408" pos:column="33"/></operator><call><name pos:line="408" pos:column="33">sk_X509_num<pos:position pos:line="408" pos:column="44"/></name><argument_list pos:line="408" pos:column="44">(<argument><expr><name pos:line="408" pos:column="45">cert_stack<pos:position pos:line="408" pos:column="55"/></name></expr></argument>)<pos:position pos:line="408" pos:column="56"/></argument_list></call> <operator pos:line="408" pos:column="57">==<pos:position pos:line="408" pos:column="59"/></operator> <literal type="number" pos:line="408" pos:column="60">0<pos:position pos:line="408" pos:column="61"/></literal><operator pos:line="408" pos:column="61">)<pos:position pos:line="408" pos:column="62"/></operator></expr>)<pos:position pos:line="408" pos:column="63"/></condition><then pos:line="408" pos:column="63"> <block pos:line="408" pos:column="64">{
                <expr_stmt><expr><call><name pos:line="409" pos:column="17">ap_log_rerror<pos:position pos:line="409" pos:column="30"/></name><argument_list pos:line="409" pos:column="30">(<argument><expr><name pos:line="409" pos:column="31">APLOG_MARK<pos:position pos:line="409" pos:column="41"/></name></expr></argument>, <argument><expr><name pos:line="409" pos:column="43">APLOG_ERR<pos:position pos:line="409" pos:column="52"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="409" pos:column="54">0<pos:position pos:line="409" pos:column="55"/></literal></expr></argument>, <argument><expr><name pos:line="409" pos:column="57">r<pos:position pos:line="409" pos:column="58"/></name></expr></argument>,
                              <argument><expr><literal type="string" pos:line="410" pos:column="31">"Cannot find peer certificate chain"<pos:position pos:line="410" pos:column="67"/></literal></expr></argument>)<pos:position pos:line="410" pos:column="68"/></argument_list></call></expr>;<pos:position pos:line="410" pos:column="69"/></expr_stmt>

                <return pos:line="412" pos:column="17">return <expr><name pos:line="412" pos:column="24">HTTP_FORBIDDEN<pos:position pos:line="412" pos:column="38"/></name></expr>;<pos:position pos:line="412" pos:column="39"/></return>
            }<pos:position pos:line="413" pos:column="14"/></block></then></if>

            <if pos:line="415" pos:column="13">if <condition pos:line="415" pos:column="16">(<expr><operator pos:line="415" pos:column="17">!<pos:position pos:line="415" pos:column="18"/></operator><operator pos:line="415" pos:column="18">(<pos:position pos:line="415" pos:column="19"/></operator><name pos:line="415" pos:column="19">cert_store<pos:position pos:line="415" pos:column="29"/></name> <operator pos:line="415" pos:column="30">||<pos:position pos:line="415" pos:column="32"/></operator>
                  <operator pos:line="416" pos:column="19">(<pos:position pos:line="416" pos:column="20"/></operator><name pos:line="416" pos:column="20">cert_store<pos:position pos:line="416" pos:column="30"/></name> <operator pos:line="416" pos:column="31">=<pos:position pos:line="416" pos:column="32"/></operator> <call><name pos:line="416" pos:column="33">SSL_CTX_get_cert_store<pos:position pos:line="416" pos:column="55"/></name><argument_list pos:line="416" pos:column="55">(<argument><expr><name pos:line="416" pos:column="56">ctx<pos:position pos:line="416" pos:column="59"/></name></expr></argument>)<pos:position pos:line="416" pos:column="60"/></argument_list></call><operator pos:line="416" pos:column="60">)<pos:position pos:line="416" pos:column="61"/></operator><operator pos:line="416" pos:column="61">)<pos:position pos:line="416" pos:column="62"/></operator></expr>)<pos:position pos:line="416" pos:column="63"/></condition><then pos:line="416" pos:column="63">
            <block pos:line="417" pos:column="13">{
                <expr_stmt><expr><call><name pos:line="418" pos:column="17">ap_log_rerror<pos:position pos:line="418" pos:column="30"/></name><argument_list pos:line="418" pos:column="30">(<argument><expr><name pos:line="418" pos:column="31">APLOG_MARK<pos:position pos:line="418" pos:column="41"/></name></expr></argument>, <argument><expr><name pos:line="418" pos:column="43">APLOG_ERR<pos:position pos:line="418" pos:column="52"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="418" pos:column="54">0<pos:position pos:line="418" pos:column="55"/></literal></expr></argument>, <argument><expr><name pos:line="418" pos:column="57">r<pos:position pos:line="418" pos:column="58"/></name></expr></argument>,
                              <argument><expr><literal type="string" pos:line="419" pos:column="31">"Cannot find certificate storage"<pos:position pos:line="419" pos:column="64"/></literal></expr></argument>)<pos:position pos:line="419" pos:column="65"/></argument_list></call></expr>;<pos:position pos:line="419" pos:column="66"/></expr_stmt>

                <return pos:line="421" pos:column="17">return <expr><name pos:line="421" pos:column="24">HTTP_FORBIDDEN<pos:position pos:line="421" pos:column="38"/></name></expr>;<pos:position pos:line="421" pos:column="39"/></return>
            }<pos:position pos:line="422" pos:column="14"/></block></then></if>

            <if pos:line="424" pos:column="13">if <condition pos:line="424" pos:column="16">(<expr><operator pos:line="424" pos:column="17">!<pos:position pos:line="424" pos:column="18"/></operator><name pos:line="424" pos:column="18">cert<pos:position pos:line="424" pos:column="22"/></name></expr>)<pos:position pos:line="424" pos:column="23"/></condition><then pos:line="424" pos:column="23"> <block pos:line="424" pos:column="24">{
                <expr_stmt><expr><name pos:line="425" pos:column="17">cert<pos:position pos:line="425" pos:column="21"/></name> <operator pos:line="425" pos:column="22">=<pos:position pos:line="425" pos:column="23"/></operator> <call><name pos:line="425" pos:column="24">sk_X509_value<pos:position pos:line="425" pos:column="37"/></name><argument_list pos:line="425" pos:column="37">(<argument><expr><name pos:line="425" pos:column="38">cert_stack<pos:position pos:line="425" pos:column="48"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="425" pos:column="50">0<pos:position pos:line="425" pos:column="51"/></literal></expr></argument>)<pos:position pos:line="425" pos:column="52"/></argument_list></call></expr>;<pos:position pos:line="425" pos:column="53"/></expr_stmt>
            }<pos:position pos:line="426" pos:column="14"/></block></then></if>

            <expr_stmt><expr><call><name pos:line="428" pos:column="13">X509_STORE_CTX_init<pos:position pos:line="428" pos:column="32"/></name><argument_list pos:line="428" pos:column="32">(<argument><expr><operator pos:line="428" pos:column="33">&amp;<pos:position pos:line="428" pos:column="38"/></operator><name pos:line="428" pos:column="34">cert_store_ctx<pos:position pos:line="428" pos:column="48"/></name></expr></argument>, <argument><expr><name pos:line="428" pos:column="50">cert_store<pos:position pos:line="428" pos:column="60"/></name></expr></argument>, <argument><expr><name pos:line="428" pos:column="62">cert<pos:position pos:line="428" pos:column="66"/></name></expr></argument>, <argument><expr><name pos:line="428" pos:column="68">cert_stack<pos:position pos:line="428" pos:column="78"/></name></expr></argument>)<pos:position pos:line="428" pos:column="79"/></argument_list></call></expr>;<pos:position pos:line="428" pos:column="80"/></expr_stmt>
            <expr_stmt><expr><name pos:line="429" pos:column="13">depth<pos:position pos:line="429" pos:column="18"/></name> <operator pos:line="429" pos:column="19">=<pos:position pos:line="429" pos:column="20"/></operator> <call><name pos:line="429" pos:column="21">SSL_get_verify_depth<pos:position pos:line="429" pos:column="41"/></name><argument_list pos:line="429" pos:column="41">(<argument><expr><name pos:line="429" pos:column="42">ssl<pos:position pos:line="429" pos:column="45"/></name></expr></argument>)<pos:position pos:line="429" pos:column="46"/></argument_list></call></expr>;<pos:position pos:line="429" pos:column="47"/></expr_stmt>

            <if pos:line="431" pos:column="13">if <condition pos:line="431" pos:column="16">(<expr><name pos:line="431" pos:column="17">depth<pos:position pos:line="431" pos:column="22"/></name> <operator pos:line="431" pos:column="23">&gt;=<pos:position pos:line="431" pos:column="28"/></operator> <literal type="number" pos:line="431" pos:column="26">0<pos:position pos:line="431" pos:column="27"/></literal></expr>)<pos:position pos:line="431" pos:column="28"/></condition><then pos:line="431" pos:column="28"> <block pos:line="431" pos:column="29">{
                <expr_stmt><expr><call><name pos:line="432" pos:column="17">X509_STORE_CTX_set_depth<pos:position pos:line="432" pos:column="41"/></name><argument_list pos:line="432" pos:column="41">(<argument><expr><operator pos:line="432" pos:column="42">&amp;<pos:position pos:line="432" pos:column="47"/></operator><name pos:line="432" pos:column="43">cert_store_ctx<pos:position pos:line="432" pos:column="57"/></name></expr></argument>, <argument><expr><name pos:line="432" pos:column="59">depth<pos:position pos:line="432" pos:column="64"/></name></expr></argument>)<pos:position pos:line="432" pos:column="65"/></argument_list></call></expr>;<pos:position pos:line="432" pos:column="66"/></expr_stmt>
            }<pos:position pos:line="433" pos:column="14"/></block></then></if>

            <expr_stmt><expr><call><name pos:line="435" pos:column="13">X509_STORE_CTX_set_ex_data<pos:position pos:line="435" pos:column="39"/></name><argument_list pos:line="435" pos:column="39">(<argument><expr><operator pos:line="435" pos:column="40">&amp;<pos:position pos:line="435" pos:column="45"/></operator><name pos:line="435" pos:column="41">cert_store_ctx<pos:position pos:line="435" pos:column="55"/></name></expr></argument>,
                                       <argument><expr><call><name pos:line="436" pos:column="40">SSL_get_ex_data_X509_STORE_CTX_idx<pos:position pos:line="436" pos:column="74"/></name><argument_list pos:line="436" pos:column="74">()<pos:position pos:line="436" pos:column="76"/></argument_list></call></expr></argument>,
                                       <argument><expr><operator pos:line="437" pos:column="40">(<pos:position pos:line="437" pos:column="41"/></operator><name pos:line="437" pos:column="41">char<pos:position pos:line="437" pos:column="45"/></name> <operator pos:line="437" pos:column="46">*<pos:position pos:line="437" pos:column="47"/></operator><operator pos:line="437" pos:column="47">)<pos:position pos:line="437" pos:column="48"/></operator><name pos:line="437" pos:column="48">ssl<pos:position pos:line="437" pos:column="51"/></name></expr></argument>)<pos:position pos:line="437" pos:column="52"/></argument_list></call></expr>;<pos:position pos:line="437" pos:column="53"/></expr_stmt>

            <if pos:line="439" pos:column="13">if <condition pos:line="439" pos:column="16">(<expr><operator pos:line="439" pos:column="17">!<pos:position pos:line="439" pos:column="18"/></operator><call><name pos:line="439" pos:column="18">modssl_X509_verify_cert<pos:position pos:line="439" pos:column="41"/></name><argument_list pos:line="439" pos:column="41">(<argument><expr><operator pos:line="439" pos:column="42">&amp;<pos:position pos:line="439" pos:column="47"/></operator><name pos:line="439" pos:column="43">cert_store_ctx<pos:position pos:line="439" pos:column="57"/></name></expr></argument>)<pos:position pos:line="439" pos:column="58"/></argument_list></call></expr>)<pos:position pos:line="439" pos:column="59"/></condition><then pos:line="439" pos:column="59"> <block pos:line="439" pos:column="60">{
                <expr_stmt><expr><call><name pos:line="440" pos:column="17">ap_log_rerror<pos:position pos:line="440" pos:column="30"/></name><argument_list pos:line="440" pos:column="30">(<argument><expr><name pos:line="440" pos:column="31">APLOG_MARK<pos:position pos:line="440" pos:column="41"/></name></expr></argument>, <argument><expr><name pos:line="440" pos:column="43">APLOG_ERR<pos:position pos:line="440" pos:column="52"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="440" pos:column="54">0<pos:position pos:line="440" pos:column="55"/></literal></expr></argument>, <argument><expr><name pos:line="440" pos:column="57">r<pos:position pos:line="440" pos:column="58"/></name></expr></argument>,
                              <argument><expr><literal type="string" pos:line="441" pos:column="31">"Re-negotiation verification step failed"<pos:position pos:line="441" pos:column="72"/></literal></expr></argument>)<pos:position pos:line="441" pos:column="73"/></argument_list></call></expr>;<pos:position pos:line="441" pos:column="74"/></expr_stmt>
                <expr_stmt><expr><call><name pos:line="442" pos:column="17">ssl_log_ssl_error<pos:position pos:line="442" pos:column="34"/></name><argument_list pos:line="442" pos:column="34">(<argument><expr><name pos:line="442" pos:column="35">SSLLOG_MARK<pos:position pos:line="442" pos:column="46"/></name></expr></argument>, <argument><expr><name pos:line="442" pos:column="48">APLOG_ERR<pos:position pos:line="442" pos:column="57"/></name></expr></argument>, <argument><expr><name><name pos:line="442" pos:column="59">r<pos:position pos:line="442" pos:column="60"/></name><operator pos:line="442" pos:column="60">-&gt;<pos:position pos:line="442" pos:column="65"/></operator><name pos:line="442" pos:column="62">server<pos:position pos:line="442" pos:column="68"/></name></name></expr></argument>)<pos:position pos:line="442" pos:column="69"/></argument_list></call></expr>;<pos:position pos:line="442" pos:column="70"/></expr_stmt>
            }<pos:position pos:line="443" pos:column="14"/></block></then></if>

            <expr_stmt><expr><call><name pos:line="445" pos:column="13">SSL_set_verify_result<pos:position pos:line="445" pos:column="34"/></name><argument_list pos:line="445" pos:column="34">(<argument><expr><name pos:line="445" pos:column="35">ssl<pos:position pos:line="445" pos:column="38"/></name></expr></argument>, <argument><expr><name><name pos:line="445" pos:column="40">cert_store_ctx<pos:position pos:line="445" pos:column="54"/></name><operator pos:line="445" pos:column="54">.<pos:position pos:line="445" pos:column="55"/></operator><name pos:line="445" pos:column="55">error<pos:position pos:line="445" pos:column="60"/></name></name></expr></argument>)<pos:position pos:line="445" pos:column="61"/></argument_list></call></expr>;<pos:position pos:line="445" pos:column="62"/></expr_stmt>
            <expr_stmt><expr><call><name pos:line="446" pos:column="13">X509_STORE_CTX_cleanup<pos:position pos:line="446" pos:column="35"/></name><argument_list pos:line="446" pos:column="35">(<argument><expr><operator pos:line="446" pos:column="36">&amp;<pos:position pos:line="446" pos:column="41"/></operator><name pos:line="446" pos:column="37">cert_store_ctx<pos:position pos:line="446" pos:column="51"/></name></expr></argument>)<pos:position pos:line="446" pos:column="52"/></argument_list></call></expr>;<pos:position pos:line="446" pos:column="53"/></expr_stmt>

            <if pos:line="448" pos:column="13">if <condition pos:line="448" pos:column="16">(<expr><name pos:line="448" pos:column="17">cert_stack<pos:position pos:line="448" pos:column="27"/></name> <operator pos:line="448" pos:column="28">!=<pos:position pos:line="448" pos:column="30"/></operator> <call><name pos:line="448" pos:column="31">SSL_get_peer_cert_chain<pos:position pos:line="448" pos:column="54"/></name><argument_list pos:line="448" pos:column="54">(<argument><expr><name pos:line="448" pos:column="55">ssl<pos:position pos:line="448" pos:column="58"/></name></expr></argument>)<pos:position pos:line="448" pos:column="59"/></argument_list></call></expr>)<pos:position pos:line="448" pos:column="60"/></condition><then pos:line="448" pos:column="60"> <block pos:line="448" pos:column="61">{
                <comment type="block" pos:line="449" pos:column="17">/* we created this ourselves, so free it */</comment>
                <expr_stmt><expr><call><name pos:line="450" pos:column="17">sk_X509_pop_free<pos:position pos:line="450" pos:column="33"/></name><argument_list pos:line="450" pos:column="33">(<argument><expr><name pos:line="450" pos:column="34">cert_stack<pos:position pos:line="450" pos:column="44"/></name></expr></argument>, <argument><expr><name pos:line="450" pos:column="46">X509_free<pos:position pos:line="450" pos:column="55"/></name></expr></argument>)<pos:position pos:line="450" pos:column="56"/></argument_list></call></expr>;<pos:position pos:line="450" pos:column="57"/></expr_stmt>
            }<pos:position pos:line="451" pos:column="14"/></block></then></if>
        }<pos:position pos:line="452" pos:column="10"/></block></then>
        <else pos:line="453" pos:column="9">else <block pos:line="453" pos:column="14">{
            <decl_stmt><decl><type><name pos:line="454" pos:column="13">request_rec<pos:position pos:line="454" pos:column="24"/></name> <modifier pos:line="454" pos:column="25">*<pos:position pos:line="454" pos:column="26"/></modifier></type><name pos:line="454" pos:column="26">id<pos:position pos:line="454" pos:column="28"/></name> <init pos:line="454" pos:column="29">= <expr><ternary><condition><expr><name><name pos:line="454" pos:column="31">r<pos:position pos:line="454" pos:column="32"/></name><operator pos:line="454" pos:column="32">-&gt;<pos:position pos:line="454" pos:column="37"/></operator><name pos:line="454" pos:column="34">main<pos:position pos:line="454" pos:column="38"/></name></name></expr> ?<pos:position pos:line="454" pos:column="40"/></condition><then pos:line="454" pos:column="40"> <expr><name><name pos:line="454" pos:column="41">r<pos:position pos:line="454" pos:column="42"/></name><operator pos:line="454" pos:column="42">-&gt;<pos:position pos:line="454" pos:column="47"/></operator><name pos:line="454" pos:column="44">main<pos:position pos:line="454" pos:column="48"/></name></name></expr> <pos:position pos:line="454" pos:column="49"/></then><else pos:line="454" pos:column="49">: <expr><name pos:line="454" pos:column="51">r<pos:position pos:line="454" pos:column="52"/></name></expr></else></ternary></expr></init></decl>;<pos:position pos:line="454" pos:column="53"/></decl_stmt>

            <comment type="block" pos:line="456" pos:column="13">/* Additional mitigation for CVE-2009-3555: At this point,
             * before renegotiating, an (entire) request has been read
             * from the connection.  An attacker may have sent further
             * data to "prefix" any subsequent request by the victim's
             * client after the renegotiation; this data may already
             * have been read and buffered.  Forcing a connection
             * closure after the response ensures such data will be
             * discarded.  Legimately pipelined HTTP requests will be
             * retried anyway with this approach. */</comment>
            <if pos:line="465" pos:column="13">if <condition pos:line="465" pos:column="16">(<expr><call><name pos:line="465" pos:column="17">has_buffered_data<pos:position pos:line="465" pos:column="34"/></name><argument_list pos:line="465" pos:column="34">(<argument><expr><name pos:line="465" pos:column="35">r<pos:position pos:line="465" pos:column="36"/></name></expr></argument>)<pos:position pos:line="465" pos:column="37"/></argument_list></call></expr>)<pos:position pos:line="465" pos:column="38"/></condition><then pos:line="465" pos:column="38"> <block pos:line="465" pos:column="39">{
                <expr_stmt><expr><call><name pos:line="466" pos:column="17">ap_log_rerror<pos:position pos:line="466" pos:column="30"/></name><argument_list pos:line="466" pos:column="30">(<argument><expr><name pos:line="466" pos:column="31">APLOG_MARK<pos:position pos:line="466" pos:column="41"/></name></expr></argument>, <argument><expr><name pos:line="466" pos:column="43">APLOG_ERR<pos:position pos:line="466" pos:column="52"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="466" pos:column="54">0<pos:position pos:line="466" pos:column="55"/></literal></expr></argument>, <argument><expr><name pos:line="466" pos:column="57">r<pos:position pos:line="466" pos:column="58"/></name></expr></argument>,
                              <argument><expr><literal type="string" pos:line="467" pos:column="31">"insecure SSL re-negotiation required, but "<pos:position pos:line="467" pos:column="75"/></literal>
                              <literal type="string" pos:line="468" pos:column="31">"a pipelined request is present; keepalive "<pos:position pos:line="468" pos:column="75"/></literal>
                              <literal type="string" pos:line="469" pos:column="31">"disabled"<pos:position pos:line="469" pos:column="41"/></literal></expr></argument>)<pos:position pos:line="469" pos:column="42"/></argument_list></call></expr>;<pos:position pos:line="469" pos:column="43"/></expr_stmt>
                <expr_stmt><expr><name><name pos:line="470" pos:column="17">r<pos:position pos:line="470" pos:column="18"/></name><operator pos:line="470" pos:column="18">-&gt;<pos:position pos:line="470" pos:column="23"/></operator><name pos:line="470" pos:column="20">connection<pos:position pos:line="470" pos:column="30"/></name><operator pos:line="470" pos:column="30">-&gt;<pos:position pos:line="470" pos:column="35"/></operator><name pos:line="470" pos:column="32">keepalive<pos:position pos:line="470" pos:column="41"/></name></name> <operator pos:line="470" pos:column="42">=<pos:position pos:line="470" pos:column="43"/></operator> <name pos:line="470" pos:column="44">AP_CONN_CLOSE<pos:position pos:line="470" pos:column="57"/></name></expr>;<pos:position pos:line="470" pos:column="58"/></expr_stmt>
            }<pos:position pos:line="471" pos:column="14"/></block></then></if>

            <comment type="block" pos:line="473" pos:column="13">/* Perform a full renegotiation. */</comment>
            <expr_stmt><expr><call><name pos:line="474" pos:column="13">ap_log_rerror<pos:position pos:line="474" pos:column="26"/></name><argument_list pos:line="474" pos:column="26">(<argument><expr><name pos:line="474" pos:column="27">APLOG_MARK<pos:position pos:line="474" pos:column="37"/></name></expr></argument>, <argument><expr><name pos:line="474" pos:column="39">APLOG_DEBUG<pos:position pos:line="474" pos:column="50"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="474" pos:column="52">0<pos:position pos:line="474" pos:column="53"/></literal></expr></argument>, <argument><expr><name pos:line="474" pos:column="55">r<pos:position pos:line="474" pos:column="56"/></name></expr></argument>,
                          <argument><expr><literal type="string" pos:line="475" pos:column="27">"Performing full renegotiation: complete handshake "<pos:position pos:line="475" pos:column="79"/></literal>
                          <literal type="string" pos:line="476" pos:column="27">"protocol (%s support secure renegotiation)"<pos:position pos:line="476" pos:column="71"/></literal></expr></argument>,
<cpp:if pos:line="477" pos:column="1">#<cpp:directive pos:line="477" pos:column="2">if<pos:position pos:line="477" pos:column="4"/></cpp:directive> <expr><ternary><condition><expr><call><name pos:line="477" pos:column="5">defined<pos:position pos:line="477" pos:column="12"/></name><argument_list pos:line="477" pos:column="12">(<argument><expr><name pos:line="477" pos:column="13">SSL_get_secure_renegotiation_support<pos:position pos:line="477" pos:column="49"/></name></expr></argument>)<pos:position pos:line="477" pos:column="50"/></argument_list></call></expr></condition></ternary></expr></cpp:if>
                          <argument><expr><ternary><condition><expr><call><name pos:line="478" pos:column="27">SSL_get_secure_renegotiation_support<pos:position pos:line="478" pos:column="63"/></name><argument_list pos:line="478" pos:column="63">(<argument><expr><name pos:line="478" pos:column="64">ssl<pos:position pos:line="478" pos:column="67"/></name></expr></argument>)<pos:position pos:line="478" pos:column="68"/></argument_list></call></expr> ?<pos:position pos:line="478" pos:column="70"/></condition><then pos:line="478" pos:column="70"> 
                          <expr><literal type="string" pos:line="479" pos:column="27">"client does"<pos:position pos:line="479" pos:column="40"/></literal></expr> <pos:position pos:line="479" pos:column="41"/></then><else pos:line="479" pos:column="41">: <expr><literal type="string" pos:line="479" pos:column="43">"client does not"<pos:position pos:line="479" pos:column="60"/></literal>
<cpp:else pos:line="480" pos:column="1">#<cpp:directive pos:line="480" pos:column="2">else<pos:position pos:line="480" pos:column="6"/></cpp:directive></cpp:else>
                          <literal type="string" pos:line="481" pos:column="27">"server does not"<pos:position pos:line="481" pos:column="44"/></literal></expr></else></ternary></expr></argument>
<cpp:endif pos:line="482" pos:column="1">#<cpp:directive pos:line="482" pos:column="2">endif<pos:position pos:line="482" pos:column="7"/></cpp:directive></cpp:endif>
                )<pos:position pos:line="483" pos:column="18"/></argument_list></call></expr>;<pos:position pos:line="483" pos:column="19"/></expr_stmt>

            <expr_stmt><expr><call><name pos:line="485" pos:column="13">SSL_set_session_id_context<pos:position pos:line="485" pos:column="39"/></name><argument_list pos:line="485" pos:column="39">(<argument><expr><name pos:line="485" pos:column="40">ssl<pos:position pos:line="485" pos:column="43"/></name></expr></argument>,
                                       <argument><expr><operator pos:line="486" pos:column="40">(<pos:position pos:line="486" pos:column="41"/></operator><name pos:line="486" pos:column="41">unsigned<pos:position pos:line="486" pos:column="49"/></name> <name pos:line="486" pos:column="50">char<pos:position pos:line="486" pos:column="54"/></name> <operator pos:line="486" pos:column="55">*<pos:position pos:line="486" pos:column="56"/></operator><operator pos:line="486" pos:column="56">)<pos:position pos:line="486" pos:column="57"/></operator><operator pos:line="486" pos:column="57">&amp;<pos:position pos:line="486" pos:column="62"/></operator><name pos:line="486" pos:column="58">id<pos:position pos:line="486" pos:column="60"/></name></expr></argument>,
                                       <argument><expr><sizeof pos:line="487" pos:column="40">sizeof<argument_list pos:line="487" pos:column="46">(<argument><expr><name pos:line="487" pos:column="47">id<pos:position pos:line="487" pos:column="49"/></name></expr></argument>)<pos:position pos:line="487" pos:column="50"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="487" pos:column="51"/></argument_list></call></expr>;<pos:position pos:line="487" pos:column="52"/></expr_stmt>

            <comment type="block" pos:line="489" pos:column="13">/* Toggle the renegotiation state to allow the new
             * handshake to proceed. */</comment>
            <expr_stmt><expr><name><name pos:line="491" pos:column="13">sslconn<pos:position pos:line="491" pos:column="20"/></name><operator pos:line="491" pos:column="20">-&gt;<pos:position pos:line="491" pos:column="25"/></operator><name pos:line="491" pos:column="22">reneg_state<pos:position pos:line="491" pos:column="33"/></name></name> <operator pos:line="491" pos:column="34">=<pos:position pos:line="491" pos:column="35"/></operator> <name pos:line="491" pos:column="36">RENEG_ALLOW<pos:position pos:line="491" pos:column="47"/></name></expr>;<pos:position pos:line="491" pos:column="48"/></expr_stmt>
            
            <expr_stmt><expr><call><name pos:line="493" pos:column="13">SSL_renegotiate<pos:position pos:line="493" pos:column="28"/></name><argument_list pos:line="493" pos:column="28">(<argument><expr><name pos:line="493" pos:column="29">ssl<pos:position pos:line="493" pos:column="32"/></name></expr></argument>)<pos:position pos:line="493" pos:column="33"/></argument_list></call></expr>;<pos:position pos:line="493" pos:column="34"/></expr_stmt>
            <expr_stmt><expr><call><name pos:line="494" pos:column="13">SSL_do_handshake<pos:position pos:line="494" pos:column="29"/></name><argument_list pos:line="494" pos:column="29">(<argument><expr><name pos:line="494" pos:column="30">ssl<pos:position pos:line="494" pos:column="33"/></name></expr></argument>)<pos:position pos:line="494" pos:column="34"/></argument_list></call></expr>;<pos:position pos:line="494" pos:column="35"/></expr_stmt>

            <if pos:line="496" pos:column="13">if <condition pos:line="496" pos:column="16">(<expr><call><name pos:line="496" pos:column="17">SSL_get_state<pos:position pos:line="496" pos:column="30"/></name><argument_list pos:line="496" pos:column="30">(<argument><expr><name pos:line="496" pos:column="31">ssl<pos:position pos:line="496" pos:column="34"/></name></expr></argument>)<pos:position pos:line="496" pos:column="35"/></argument_list></call> <operator pos:line="496" pos:column="36">!=<pos:position pos:line="496" pos:column="38"/></operator> <name pos:line="496" pos:column="39">SSL_ST_OK<pos:position pos:line="496" pos:column="48"/></name></expr>)<pos:position pos:line="496" pos:column="49"/></condition><then pos:line="496" pos:column="49"> <block pos:line="496" pos:column="50">{
                <expr_stmt><expr><call><name pos:line="497" pos:column="17">ap_log_rerror<pos:position pos:line="497" pos:column="30"/></name><argument_list pos:line="497" pos:column="30">(<argument><expr><name pos:line="497" pos:column="31">APLOG_MARK<pos:position pos:line="497" pos:column="41"/></name></expr></argument>, <argument><expr><name pos:line="497" pos:column="43">APLOG_ERR<pos:position pos:line="497" pos:column="52"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="497" pos:column="54">0<pos:position pos:line="497" pos:column="55"/></literal></expr></argument>, <argument><expr><name pos:line="497" pos:column="57">r<pos:position pos:line="497" pos:column="58"/></name></expr></argument>,
                              <argument><expr><literal type="string" pos:line="498" pos:column="31">"Re-negotiation request failed"<pos:position pos:line="498" pos:column="62"/></literal></expr></argument>)<pos:position pos:line="498" pos:column="63"/></argument_list></call></expr>;<pos:position pos:line="498" pos:column="64"/></expr_stmt>
                <expr_stmt><expr><call><name pos:line="499" pos:column="17">ssl_log_ssl_error<pos:position pos:line="499" pos:column="34"/></name><argument_list pos:line="499" pos:column="34">(<argument><expr><name pos:line="499" pos:column="35">SSLLOG_MARK<pos:position pos:line="499" pos:column="46"/></name></expr></argument>, <argument><expr><name pos:line="499" pos:column="48">APLOG_ERR<pos:position pos:line="499" pos:column="57"/></name></expr></argument>, <argument><expr><name><name pos:line="499" pos:column="59">r<pos:position pos:line="499" pos:column="60"/></name><operator pos:line="499" pos:column="60">-&gt;<pos:position pos:line="499" pos:column="65"/></operator><name pos:line="499" pos:column="62">server<pos:position pos:line="499" pos:column="68"/></name></name></expr></argument>)<pos:position pos:line="499" pos:column="69"/></argument_list></call></expr>;<pos:position pos:line="499" pos:column="70"/></expr_stmt>

                <expr_stmt><expr><name><name pos:line="501" pos:column="17">r<pos:position pos:line="501" pos:column="18"/></name><operator pos:line="501" pos:column="18">-&gt;<pos:position pos:line="501" pos:column="23"/></operator><name pos:line="501" pos:column="20">connection<pos:position pos:line="501" pos:column="30"/></name><operator pos:line="501" pos:column="30">-&gt;<pos:position pos:line="501" pos:column="35"/></operator><name pos:line="501" pos:column="32">keepalive<pos:position pos:line="501" pos:column="41"/></name></name> <operator pos:line="501" pos:column="42">=<pos:position pos:line="501" pos:column="43"/></operator> <name pos:line="501" pos:column="44">AP_CONN_CLOSE<pos:position pos:line="501" pos:column="57"/></name></expr>;<pos:position pos:line="501" pos:column="58"/></expr_stmt>
                <return pos:line="502" pos:column="17">return <expr><name pos:line="502" pos:column="24">HTTP_FORBIDDEN<pos:position pos:line="502" pos:column="38"/></name></expr>;<pos:position pos:line="502" pos:column="39"/></return>
            }<pos:position pos:line="503" pos:column="14"/></block></then></if>

            <expr_stmt><expr><call><name pos:line="505" pos:column="13">ap_log_rerror<pos:position pos:line="505" pos:column="26"/></name><argument_list pos:line="505" pos:column="26">(<argument><expr><name pos:line="505" pos:column="27">APLOG_MARK<pos:position pos:line="505" pos:column="37"/></name></expr></argument>, <argument><expr><name pos:line="505" pos:column="39">APLOG_INFO<pos:position pos:line="505" pos:column="49"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="505" pos:column="51">0<pos:position pos:line="505" pos:column="52"/></literal></expr></argument>, <argument><expr><name pos:line="505" pos:column="54">r<pos:position pos:line="505" pos:column="55"/></name></expr></argument>,
                          <argument><expr><literal type="string" pos:line="506" pos:column="27">"Awaiting re-negotiation handshake"<pos:position pos:line="506" pos:column="62"/></literal></expr></argument>)<pos:position pos:line="506" pos:column="63"/></argument_list></call></expr>;<pos:position pos:line="506" pos:column="64"/></expr_stmt>

            <comment type="block" pos:line="508" pos:column="13">/* XXX: Should replace SSL_set_state with SSL_renegotiate(ssl);
             * However, this causes failures in perl-framework currently,
             * perhaps pre-test if we have already negotiated?
             */</comment>
            <expr_stmt><expr><call><name pos:line="512" pos:column="13">SSL_set_state<pos:position pos:line="512" pos:column="26"/></name><argument_list pos:line="512" pos:column="26">(<argument><expr><name pos:line="512" pos:column="27">ssl<pos:position pos:line="512" pos:column="30"/></name></expr></argument>, <argument><expr><name pos:line="512" pos:column="32">SSL_ST_ACCEPT<pos:position pos:line="512" pos:column="45"/></name></expr></argument>)<pos:position pos:line="512" pos:column="46"/></argument_list></call></expr>;<pos:position pos:line="512" pos:column="47"/></expr_stmt>
            <expr_stmt><expr><call><name pos:line="513" pos:column="13">SSL_do_handshake<pos:position pos:line="513" pos:column="29"/></name><argument_list pos:line="513" pos:column="29">(<argument><expr><name pos:line="513" pos:column="30">ssl<pos:position pos:line="513" pos:column="33"/></name></expr></argument>)<pos:position pos:line="513" pos:column="34"/></argument_list></call></expr>;<pos:position pos:line="513" pos:column="35"/></expr_stmt>

            <expr_stmt><expr><name><name pos:line="515" pos:column="13">sslconn<pos:position pos:line="515" pos:column="20"/></name><operator pos:line="515" pos:column="20">-&gt;<pos:position pos:line="515" pos:column="25"/></operator><name pos:line="515" pos:column="22">reneg_state<pos:position pos:line="515" pos:column="33"/></name></name> <operator pos:line="515" pos:column="34">=<pos:position pos:line="515" pos:column="35"/></operator> <name pos:line="515" pos:column="36">RENEG_REJECT<pos:position pos:line="515" pos:column="48"/></name></expr>;<pos:position pos:line="515" pos:column="49"/></expr_stmt>

            <if pos:line="517" pos:column="13">if <condition pos:line="517" pos:column="16">(<expr><call><name pos:line="517" pos:column="17">SSL_get_state<pos:position pos:line="517" pos:column="30"/></name><argument_list pos:line="517" pos:column="30">(<argument><expr><name pos:line="517" pos:column="31">ssl<pos:position pos:line="517" pos:column="34"/></name></expr></argument>)<pos:position pos:line="517" pos:column="35"/></argument_list></call> <operator pos:line="517" pos:column="36">!=<pos:position pos:line="517" pos:column="38"/></operator> <name pos:line="517" pos:column="39">SSL_ST_OK<pos:position pos:line="517" pos:column="48"/></name></expr>)<pos:position pos:line="517" pos:column="49"/></condition><then pos:line="517" pos:column="49"> <block pos:line="517" pos:column="50">{
                <expr_stmt><expr><call><name pos:line="518" pos:column="17">ap_log_rerror<pos:position pos:line="518" pos:column="30"/></name><argument_list pos:line="518" pos:column="30">(<argument><expr><name pos:line="518" pos:column="31">APLOG_MARK<pos:position pos:line="518" pos:column="41"/></name></expr></argument>, <argument><expr><name pos:line="518" pos:column="43">APLOG_ERR<pos:position pos:line="518" pos:column="52"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="518" pos:column="54">0<pos:position pos:line="518" pos:column="55"/></literal></expr></argument>, <argument><expr><name pos:line="518" pos:column="57">r<pos:position pos:line="518" pos:column="58"/></name></expr></argument>,
                              <argument><expr><literal type="string" pos:line="519" pos:column="31">"Re-negotiation handshake failed: "<pos:position pos:line="519" pos:column="66"/></literal>
                              <literal type="string" pos:line="520" pos:column="31">"Not accepted by client!?"<pos:position pos:line="520" pos:column="57"/></literal></expr></argument>)<pos:position pos:line="520" pos:column="58"/></argument_list></call></expr>;<pos:position pos:line="520" pos:column="59"/></expr_stmt>

                <expr_stmt><expr><name><name pos:line="522" pos:column="17">r<pos:position pos:line="522" pos:column="18"/></name><operator pos:line="522" pos:column="18">-&gt;<pos:position pos:line="522" pos:column="23"/></operator><name pos:line="522" pos:column="20">connection<pos:position pos:line="522" pos:column="30"/></name><operator pos:line="522" pos:column="30">-&gt;<pos:position pos:line="522" pos:column="35"/></operator><name pos:line="522" pos:column="32">keepalive<pos:position pos:line="522" pos:column="41"/></name></name> <operator pos:line="522" pos:column="42">=<pos:position pos:line="522" pos:column="43"/></operator> <name pos:line="522" pos:column="44">AP_CONN_CLOSE<pos:position pos:line="522" pos:column="57"/></name></expr>;<pos:position pos:line="522" pos:column="58"/></expr_stmt>
                <return pos:line="523" pos:column="17">return <expr><name pos:line="523" pos:column="24">HTTP_FORBIDDEN<pos:position pos:line="523" pos:column="38"/></name></expr>;<pos:position pos:line="523" pos:column="39"/></return>
            }<pos:position pos:line="524" pos:column="14"/></block></then></if>
        }<pos:position pos:line="525" pos:column="10"/></block></else></if>

        <comment type="block" pos:line="527" pos:column="9">/*
         * Remember the peer certificate's DN
         */</comment>
        <if pos:line="530" pos:column="9">if <condition pos:line="530" pos:column="12">(<expr><operator pos:line="530" pos:column="13">(<pos:position pos:line="530" pos:column="14"/></operator><name pos:line="530" pos:column="14">cert<pos:position pos:line="530" pos:column="18"/></name> <operator pos:line="530" pos:column="19">=<pos:position pos:line="530" pos:column="20"/></operator> <call><name pos:line="530" pos:column="21">SSL_get_peer_certificate<pos:position pos:line="530" pos:column="45"/></name><argument_list pos:line="530" pos:column="45">(<argument><expr><name pos:line="530" pos:column="46">ssl<pos:position pos:line="530" pos:column="49"/></name></expr></argument>)<pos:position pos:line="530" pos:column="50"/></argument_list></call><operator pos:line="530" pos:column="50">)<pos:position pos:line="530" pos:column="51"/></operator></expr>)<pos:position pos:line="530" pos:column="52"/></condition><then pos:line="530" pos:column="52"> <block pos:line="530" pos:column="53">{
            <if pos:line="531" pos:column="13">if <condition pos:line="531" pos:column="16">(<expr><name><name pos:line="531" pos:column="17">sslconn<pos:position pos:line="531" pos:column="24"/></name><operator pos:line="531" pos:column="24">-&gt;<pos:position pos:line="531" pos:column="29"/></operator><name pos:line="531" pos:column="26">client_cert<pos:position pos:line="531" pos:column="37"/></name></name></expr>)<pos:position pos:line="531" pos:column="38"/></condition><then pos:line="531" pos:column="38"> <block pos:line="531" pos:column="39">{
                <expr_stmt><expr><call><name pos:line="532" pos:column="17">X509_free<pos:position pos:line="532" pos:column="26"/></name><argument_list pos:line="532" pos:column="26">(<argument><expr><name><name pos:line="532" pos:column="27">sslconn<pos:position pos:line="532" pos:column="34"/></name><operator pos:line="532" pos:column="34">-&gt;<pos:position pos:line="532" pos:column="39"/></operator><name pos:line="532" pos:column="36">client_cert<pos:position pos:line="532" pos:column="47"/></name></name></expr></argument>)<pos:position pos:line="532" pos:column="48"/></argument_list></call></expr>;<pos:position pos:line="532" pos:column="49"/></expr_stmt>
            }<pos:position pos:line="533" pos:column="14"/></block></then></if>
            <expr_stmt><expr><name><name pos:line="534" pos:column="13">sslconn<pos:position pos:line="534" pos:column="20"/></name><operator pos:line="534" pos:column="20">-&gt;<pos:position pos:line="534" pos:column="25"/></operator><name pos:line="534" pos:column="22">client_cert<pos:position pos:line="534" pos:column="33"/></name></name> <operator pos:line="534" pos:column="34">=<pos:position pos:line="534" pos:column="35"/></operator> <name pos:line="534" pos:column="36">cert<pos:position pos:line="534" pos:column="40"/></name></expr>;<pos:position pos:line="534" pos:column="41"/></expr_stmt>
            <expr_stmt><expr><name><name pos:line="535" pos:column="13">sslconn<pos:position pos:line="535" pos:column="20"/></name><operator pos:line="535" pos:column="20">-&gt;<pos:position pos:line="535" pos:column="25"/></operator><name pos:line="535" pos:column="22">client_dn<pos:position pos:line="535" pos:column="31"/></name></name> <operator pos:line="535" pos:column="32">=<pos:position pos:line="535" pos:column="33"/></operator> <name pos:line="535" pos:column="34">NULL<pos:position pos:line="535" pos:column="38"/></name></expr>;<pos:position pos:line="535" pos:column="39"/></expr_stmt>
        }<pos:position pos:line="536" pos:column="10"/></block></then></if>

        <comment type="block" pos:line="538" pos:column="9">/*
         * Finally check for acceptable renegotiation results
         */</comment>
        <if pos:line="541" pos:column="9">if <condition pos:line="541" pos:column="12">(<expr><operator pos:line="541" pos:column="13">(<pos:position pos:line="541" pos:column="14"/></operator><name><name pos:line="541" pos:column="14">dc<pos:position pos:line="541" pos:column="16"/></name><operator pos:line="541" pos:column="16">-&gt;<pos:position pos:line="541" pos:column="21"/></operator><name pos:line="541" pos:column="18">nVerifyClient<pos:position pos:line="541" pos:column="31"/></name></name> <operator pos:line="541" pos:column="32">!=<pos:position pos:line="541" pos:column="34"/></operator> <name pos:line="541" pos:column="35">SSL_CVERIFY_NONE<pos:position pos:line="541" pos:column="51"/></name><operator pos:line="541" pos:column="51">)<pos:position pos:line="541" pos:column="52"/></operator> <operator pos:line="541" pos:column="53">||<pos:position pos:line="541" pos:column="55"/></operator>
            <operator pos:line="542" pos:column="13">(<pos:position pos:line="542" pos:column="14"/></operator><name><name pos:line="542" pos:column="14">sc<pos:position pos:line="542" pos:column="16"/></name><operator pos:line="542" pos:column="16">-&gt;<pos:position pos:line="542" pos:column="21"/></operator><name pos:line="542" pos:column="18">server<pos:position pos:line="542" pos:column="24"/></name><operator pos:line="542" pos:column="24">-&gt;<pos:position pos:line="542" pos:column="29"/></operator><name pos:line="542" pos:column="26">auth<pos:position pos:line="542" pos:column="30"/></name><operator pos:line="542" pos:column="30">.<pos:position pos:line="542" pos:column="31"/></operator><name pos:line="542" pos:column="31">verify_mode<pos:position pos:line="542" pos:column="42"/></name></name> <operator pos:line="542" pos:column="43">!=<pos:position pos:line="542" pos:column="45"/></operator> <name pos:line="542" pos:column="46">SSL_CVERIFY_NONE<pos:position pos:line="542" pos:column="62"/></name><operator pos:line="542" pos:column="62">)<pos:position pos:line="542" pos:column="63"/></operator></expr>)<pos:position pos:line="542" pos:column="64"/></condition><then pos:line="542" pos:column="64"> <block pos:line="542" pos:column="65">{
            <decl_stmt><decl><type><name pos:line="543" pos:column="13">BOOL<pos:position pos:line="543" pos:column="17"/></name></type> <name pos:line="543" pos:column="18">do_verify<pos:position pos:line="543" pos:column="27"/></name> <init pos:line="543" pos:column="28">= <expr><operator pos:line="543" pos:column="30">(<pos:position pos:line="543" pos:column="31"/></operator><operator pos:line="543" pos:column="31">(<pos:position pos:line="543" pos:column="32"/></operator><name><name pos:line="543" pos:column="32">dc<pos:position pos:line="543" pos:column="34"/></name><operator pos:line="543" pos:column="34">-&gt;<pos:position pos:line="543" pos:column="39"/></operator><name pos:line="543" pos:column="36">nVerifyClient<pos:position pos:line="543" pos:column="49"/></name></name> <operator pos:line="543" pos:column="50">==<pos:position pos:line="543" pos:column="52"/></operator> <name pos:line="543" pos:column="53">SSL_CVERIFY_REQUIRE<pos:position pos:line="543" pos:column="72"/></name><operator pos:line="543" pos:column="72">)<pos:position pos:line="543" pos:column="73"/></operator> <operator pos:line="543" pos:column="74">||<pos:position pos:line="543" pos:column="76"/></operator>
                              <operator pos:line="544" pos:column="31">(<pos:position pos:line="544" pos:column="32"/></operator><name><name pos:line="544" pos:column="32">sc<pos:position pos:line="544" pos:column="34"/></name><operator pos:line="544" pos:column="34">-&gt;<pos:position pos:line="544" pos:column="39"/></operator><name pos:line="544" pos:column="36">server<pos:position pos:line="544" pos:column="42"/></name><operator pos:line="544" pos:column="42">-&gt;<pos:position pos:line="544" pos:column="47"/></operator><name pos:line="544" pos:column="44">auth<pos:position pos:line="544" pos:column="48"/></name><operator pos:line="544" pos:column="48">.<pos:position pos:line="544" pos:column="49"/></operator><name pos:line="544" pos:column="49">verify_mode<pos:position pos:line="544" pos:column="60"/></name></name> <operator pos:line="544" pos:column="61">==<pos:position pos:line="544" pos:column="63"/></operator> <name pos:line="544" pos:column="64">SSL_CVERIFY_REQUIRE<pos:position pos:line="544" pos:column="83"/></name><operator pos:line="544" pos:column="83">)<pos:position pos:line="544" pos:column="84"/></operator><operator pos:line="544" pos:column="84">)<pos:position pos:line="544" pos:column="85"/></operator></expr></init></decl>;<pos:position pos:line="544" pos:column="86"/></decl_stmt>

            <if pos:line="546" pos:column="13">if <condition pos:line="546" pos:column="16">(<expr><name pos:line="546" pos:column="17">do_verify<pos:position pos:line="546" pos:column="26"/></name> <operator pos:line="546" pos:column="27">&amp;&amp;<pos:position pos:line="546" pos:column="37"/></operator> <operator pos:line="546" pos:column="30">(<pos:position pos:line="546" pos:column="31"/></operator><call><name pos:line="546" pos:column="31">SSL_get_verify_result<pos:position pos:line="546" pos:column="52"/></name><argument_list pos:line="546" pos:column="52">(<argument><expr><name pos:line="546" pos:column="53">ssl<pos:position pos:line="546" pos:column="56"/></name></expr></argument>)<pos:position pos:line="546" pos:column="57"/></argument_list></call> <operator pos:line="546" pos:column="58">!=<pos:position pos:line="546" pos:column="60"/></operator> <name pos:line="546" pos:column="61">X509_V_OK<pos:position pos:line="546" pos:column="70"/></name><operator pos:line="546" pos:column="70">)<pos:position pos:line="546" pos:column="71"/></operator></expr>)<pos:position pos:line="546" pos:column="72"/></condition><then pos:line="546" pos:column="72"> <block pos:line="546" pos:column="73">{
                <expr_stmt><expr><call><name pos:line="547" pos:column="17">ap_log_rerror<pos:position pos:line="547" pos:column="30"/></name><argument_list pos:line="547" pos:column="30">(<argument><expr><name pos:line="547" pos:column="31">APLOG_MARK<pos:position pos:line="547" pos:column="41"/></name></expr></argument>, <argument><expr><name pos:line="547" pos:column="43">APLOG_ERR<pos:position pos:line="547" pos:column="52"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="547" pos:column="54">0<pos:position pos:line="547" pos:column="55"/></literal></expr></argument>, <argument><expr><name pos:line="547" pos:column="57">r<pos:position pos:line="547" pos:column="58"/></name></expr></argument>,
                              <argument><expr><literal type="string" pos:line="548" pos:column="31">"Re-negotiation handshake failed: "<pos:position pos:line="548" pos:column="66"/></literal>
                              <literal type="string" pos:line="549" pos:column="31">"Client verification failed"<pos:position pos:line="549" pos:column="59"/></literal></expr></argument>)<pos:position pos:line="549" pos:column="60"/></argument_list></call></expr>;<pos:position pos:line="549" pos:column="61"/></expr_stmt>

                <return pos:line="551" pos:column="17">return <expr><name pos:line="551" pos:column="24">HTTP_FORBIDDEN<pos:position pos:line="551" pos:column="38"/></name></expr>;<pos:position pos:line="551" pos:column="39"/></return>
            }<pos:position pos:line="552" pos:column="14"/></block></then></if>

            <if pos:line="554" pos:column="13">if <condition pos:line="554" pos:column="16">(<expr><name pos:line="554" pos:column="17">do_verify<pos:position pos:line="554" pos:column="26"/></name></expr>)<pos:position pos:line="554" pos:column="27"/></condition><then pos:line="554" pos:column="27"> <block pos:line="554" pos:column="28">{
                <if pos:line="555" pos:column="17">if <condition pos:line="555" pos:column="20">(<expr><operator pos:line="555" pos:column="21">(<pos:position pos:line="555" pos:column="22"/></operator><name pos:line="555" pos:column="22">peercert<pos:position pos:line="555" pos:column="30"/></name> <operator pos:line="555" pos:column="31">=<pos:position pos:line="555" pos:column="32"/></operator> <call><name pos:line="555" pos:column="33">SSL_get_peer_certificate<pos:position pos:line="555" pos:column="57"/></name><argument_list pos:line="555" pos:column="57">(<argument><expr><name pos:line="555" pos:column="58">ssl<pos:position pos:line="555" pos:column="61"/></name></expr></argument>)<pos:position pos:line="555" pos:column="62"/></argument_list></call><operator pos:line="555" pos:column="62">)<pos:position pos:line="555" pos:column="63"/></operator> <operator pos:line="555" pos:column="64">==<pos:position pos:line="555" pos:column="66"/></operator> <name pos:line="555" pos:column="67">NULL<pos:position pos:line="555" pos:column="71"/></name></expr>)<pos:position pos:line="555" pos:column="72"/></condition><then pos:line="555" pos:column="72"> <block pos:line="555" pos:column="73">{
                    <expr_stmt><expr><call><name pos:line="556" pos:column="21">ap_log_rerror<pos:position pos:line="556" pos:column="34"/></name><argument_list pos:line="556" pos:column="34">(<argument><expr><name pos:line="556" pos:column="35">APLOG_MARK<pos:position pos:line="556" pos:column="45"/></name></expr></argument>, <argument><expr><name pos:line="556" pos:column="47">APLOG_ERR<pos:position pos:line="556" pos:column="56"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="556" pos:column="58">0<pos:position pos:line="556" pos:column="59"/></literal></expr></argument>, <argument><expr><name pos:line="556" pos:column="61">r<pos:position pos:line="556" pos:column="62"/></name></expr></argument>,
                                  <argument><expr><literal type="string" pos:line="557" pos:column="35">"Re-negotiation handshake failed: "<pos:position pos:line="557" pos:column="70"/></literal>
                                  <literal type="string" pos:line="558" pos:column="35">"Client certificate missing"<pos:position pos:line="558" pos:column="63"/></literal></expr></argument>)<pos:position pos:line="558" pos:column="64"/></argument_list></call></expr>;<pos:position pos:line="558" pos:column="65"/></expr_stmt>

                    <return pos:line="560" pos:column="21">return <expr><name pos:line="560" pos:column="28">HTTP_FORBIDDEN<pos:position pos:line="560" pos:column="42"/></name></expr>;<pos:position pos:line="560" pos:column="43"/></return>
                }<pos:position pos:line="561" pos:column="18"/></block></then></if>

                <expr_stmt><expr><call><name pos:line="563" pos:column="17">X509_free<pos:position pos:line="563" pos:column="26"/></name><argument_list pos:line="563" pos:column="26">(<argument><expr><name pos:line="563" pos:column="27">peercert<pos:position pos:line="563" pos:column="35"/></name></expr></argument>)<pos:position pos:line="563" pos:column="36"/></argument_list></call></expr>;<pos:position pos:line="563" pos:column="37"/></expr_stmt>
            }<pos:position pos:line="564" pos:column="14"/></block></then></if>
        }<pos:position pos:line="565" pos:column="10"/></block></then></if>

        <comment type="block" pos:line="567" pos:column="9">/*
         * Also check that SSLCipherSuite has been enforced as expected.
         */</comment>
        <if pos:line="570" pos:column="9">if <condition pos:line="570" pos:column="12">(<expr><name pos:line="570" pos:column="13">cipher_list<pos:position pos:line="570" pos:column="24"/></name></expr>)<pos:position pos:line="570" pos:column="25"/></condition><then pos:line="570" pos:column="25"> <block pos:line="570" pos:column="26">{
            <expr_stmt><expr><name pos:line="571" pos:column="13">cipher<pos:position pos:line="571" pos:column="19"/></name> <operator pos:line="571" pos:column="20">=<pos:position pos:line="571" pos:column="21"/></operator> <call><name pos:line="571" pos:column="22">SSL_get_current_cipher<pos:position pos:line="571" pos:column="44"/></name><argument_list pos:line="571" pos:column="44">(<argument><expr><name pos:line="571" pos:column="45">ssl<pos:position pos:line="571" pos:column="48"/></name></expr></argument>)<pos:position pos:line="571" pos:column="49"/></argument_list></call></expr>;<pos:position pos:line="571" pos:column="50"/></expr_stmt>
            <if pos:line="572" pos:column="13">if <condition pos:line="572" pos:column="16">(<expr><call><name pos:line="572" pos:column="17">sk_SSL_CIPHER_find<pos:position pos:line="572" pos:column="35"/></name><argument_list pos:line="572" pos:column="35">(<argument><expr><name pos:line="572" pos:column="36">cipher_list<pos:position pos:line="572" pos:column="47"/></name></expr></argument>, <argument><expr><name pos:line="572" pos:column="49">cipher<pos:position pos:line="572" pos:column="55"/></name></expr></argument>)<pos:position pos:line="572" pos:column="56"/></argument_list></call> <operator pos:line="572" pos:column="57">&lt;<pos:position pos:line="572" pos:column="61"/></operator> <literal type="number" pos:line="572" pos:column="59">0<pos:position pos:line="572" pos:column="60"/></literal></expr>)<pos:position pos:line="572" pos:column="61"/></condition><then pos:line="572" pos:column="61"> <block pos:line="572" pos:column="62">{
                <expr_stmt><expr><call><name pos:line="573" pos:column="17">ap_log_rerror<pos:position pos:line="573" pos:column="30"/></name><argument_list pos:line="573" pos:column="30">(<argument><expr><name pos:line="573" pos:column="31">APLOG_MARK<pos:position pos:line="573" pos:column="41"/></name></expr></argument>, <argument><expr><name pos:line="573" pos:column="43">APLOG_ERR<pos:position pos:line="573" pos:column="52"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="573" pos:column="54">0<pos:position pos:line="573" pos:column="55"/></literal></expr></argument>, <argument><expr><name pos:line="573" pos:column="57">r<pos:position pos:line="573" pos:column="58"/></name></expr></argument>,
                             <argument><expr><literal type="string" pos:line="574" pos:column="30">"SSL cipher suite not renegotiated: "<pos:position pos:line="574" pos:column="67"/></literal>
                             <literal type="string" pos:line="575" pos:column="30">"access to %s denied using cipher %s"<pos:position pos:line="575" pos:column="67"/></literal></expr></argument>,
                              <argument><expr><name><name pos:line="576" pos:column="31">r<pos:position pos:line="576" pos:column="32"/></name><operator pos:line="576" pos:column="32">-&gt;<pos:position pos:line="576" pos:column="37"/></operator><name pos:line="576" pos:column="34">filename<pos:position pos:line="576" pos:column="42"/></name></name></expr></argument>,
                              <argument><expr><call><name pos:line="577" pos:column="31">SSL_CIPHER_get_name<pos:position pos:line="577" pos:column="50"/></name><argument_list pos:line="577" pos:column="50">(<argument><expr><name pos:line="577" pos:column="51">cipher<pos:position pos:line="577" pos:column="57"/></name></expr></argument>)<pos:position pos:line="577" pos:column="58"/></argument_list></call></expr></argument>)<pos:position pos:line="577" pos:column="59"/></argument_list></call></expr>;<pos:position pos:line="577" pos:column="60"/></expr_stmt>
                <return pos:line="578" pos:column="17">return <expr><name pos:line="578" pos:column="24">HTTP_FORBIDDEN<pos:position pos:line="578" pos:column="38"/></name></expr>;<pos:position pos:line="578" pos:column="39"/></return>
            }<pos:position pos:line="579" pos:column="14"/></block></then></if>
        }<pos:position pos:line="580" pos:column="10"/></block></then></if>
    }<pos:position pos:line="581" pos:column="6"/></block></then></if>

    <comment type="block" pos:line="583" pos:column="5">/* If we're trying to have the user name set from a client
     * certificate then we need to set it here. This should be safe as
     * the user name probably isn't important from an auth checking point
     * of view as the certificate supplied acts in that capacity.
     * However, if FakeAuth is being used then this isn't the case so
     * we need to postpone setting the username until later.
     */</comment>
    <if pos:line="590" pos:column="5">if <condition pos:line="590" pos:column="8">(<expr><operator pos:line="590" pos:column="9">(<pos:position pos:line="590" pos:column="10"/></operator><name><name pos:line="590" pos:column="10">dc<pos:position pos:line="590" pos:column="12"/></name><operator pos:line="590" pos:column="12">-&gt;<pos:position pos:line="590" pos:column="17"/></operator><name pos:line="590" pos:column="14">nOptions<pos:position pos:line="590" pos:column="22"/></name></name> <operator pos:line="590" pos:column="23">&amp;<pos:position pos:line="590" pos:column="28"/></operator> <name pos:line="590" pos:column="25">SSL_OPT_FAKEBASICAUTH<pos:position pos:line="590" pos:column="46"/></name><operator pos:line="590" pos:column="46">)<pos:position pos:line="590" pos:column="47"/></operator> <operator pos:line="590" pos:column="48">==<pos:position pos:line="590" pos:column="50"/></operator> <literal type="number" pos:line="590" pos:column="51">0<pos:position pos:line="590" pos:column="52"/></literal> <operator pos:line="590" pos:column="53">&amp;&amp;<pos:position pos:line="590" pos:column="63"/></operator> <name><name pos:line="590" pos:column="56">dc<pos:position pos:line="590" pos:column="58"/></name><operator pos:line="590" pos:column="58">-&gt;<pos:position pos:line="590" pos:column="63"/></operator><name pos:line="590" pos:column="60">szUserName<pos:position pos:line="590" pos:column="70"/></name></name></expr>)<pos:position pos:line="590" pos:column="71"/></condition><then pos:line="590" pos:column="71"> <block pos:line="590" pos:column="72">{
        <decl_stmt><decl><type><name pos:line="591" pos:column="9">char<pos:position pos:line="591" pos:column="13"/></name> <modifier pos:line="591" pos:column="14">*<pos:position pos:line="591" pos:column="15"/></modifier></type><name pos:line="591" pos:column="15">val<pos:position pos:line="591" pos:column="18"/></name> <init pos:line="591" pos:column="19">= <expr><call><name pos:line="591" pos:column="21">ssl_var_lookup<pos:position pos:line="591" pos:column="35"/></name><argument_list pos:line="591" pos:column="35">(<argument><expr><name><name pos:line="591" pos:column="36">r<pos:position pos:line="591" pos:column="37"/></name><operator pos:line="591" pos:column="37">-&gt;<pos:position pos:line="591" pos:column="42"/></operator><name pos:line="591" pos:column="39">pool<pos:position pos:line="591" pos:column="43"/></name></name></expr></argument>, <argument><expr><name><name pos:line="591" pos:column="45">r<pos:position pos:line="591" pos:column="46"/></name><operator pos:line="591" pos:column="46">-&gt;<pos:position pos:line="591" pos:column="51"/></operator><name pos:line="591" pos:column="48">server<pos:position pos:line="591" pos:column="54"/></name></name></expr></argument>, <argument><expr><name><name pos:line="591" pos:column="56">r<pos:position pos:line="591" pos:column="57"/></name><operator pos:line="591" pos:column="57">-&gt;<pos:position pos:line="591" pos:column="62"/></operator><name pos:line="591" pos:column="59">connection<pos:position pos:line="591" pos:column="69"/></name></name></expr></argument>,
                                   <argument><expr><name pos:line="592" pos:column="36">r<pos:position pos:line="592" pos:column="37"/></name></expr></argument>, <argument><expr><operator pos:line="592" pos:column="39">(<pos:position pos:line="592" pos:column="40"/></operator><name pos:line="592" pos:column="40">char<pos:position pos:line="592" pos:column="44"/></name> <operator pos:line="592" pos:column="45">*<pos:position pos:line="592" pos:column="46"/></operator><operator pos:line="592" pos:column="46">)<pos:position pos:line="592" pos:column="47"/></operator><name><name pos:line="592" pos:column="47">dc<pos:position pos:line="592" pos:column="49"/></name><operator pos:line="592" pos:column="49">-&gt;<pos:position pos:line="592" pos:column="54"/></operator><name pos:line="592" pos:column="51">szUserName<pos:position pos:line="592" pos:column="61"/></name></name></expr></argument>)<pos:position pos:line="592" pos:column="62"/></argument_list></call></expr></init></decl>;<pos:position pos:line="592" pos:column="63"/></decl_stmt>
        <if pos:line="593" pos:column="9">if <condition pos:line="593" pos:column="12">(<expr><name pos:line="593" pos:column="13">val<pos:position pos:line="593" pos:column="16"/></name> <operator pos:line="593" pos:column="17">&amp;&amp;<pos:position pos:line="593" pos:column="27"/></operator> <name><name pos:line="593" pos:column="20">val<pos:position pos:line="593" pos:column="23"/></name><index pos:line="593" pos:column="23">[<expr><literal type="number" pos:line="593" pos:column="24">0<pos:position pos:line="593" pos:column="25"/></literal></expr>]<pos:position pos:line="593" pos:column="26"/></index></name></expr>)<pos:position pos:line="593" pos:column="27"/></condition><then pos:line="593" pos:column="27">
            <block type="pseudo"><expr_stmt><expr><name><name pos:line="594" pos:column="13">r<pos:position pos:line="594" pos:column="14"/></name><operator pos:line="594" pos:column="14">-&gt;<pos:position pos:line="594" pos:column="19"/></operator><name pos:line="594" pos:column="16">user<pos:position pos:line="594" pos:column="20"/></name></name> <operator pos:line="594" pos:column="21">=<pos:position pos:line="594" pos:column="22"/></operator> <name pos:line="594" pos:column="23">val<pos:position pos:line="594" pos:column="26"/></name></expr>;<pos:position pos:line="594" pos:column="27"/></expr_stmt></block></then>
        <else pos:line="595" pos:column="9">else
            <block type="pseudo"><expr_stmt><expr><call><name pos:line="596" pos:column="13">ap_log_rerror<pos:position pos:line="596" pos:column="26"/></name><argument_list pos:line="596" pos:column="26">(<argument><expr><name pos:line="596" pos:column="27">APLOG_MARK<pos:position pos:line="596" pos:column="37"/></name></expr></argument>, <argument><expr><name pos:line="596" pos:column="39">APLOG_WARNING<pos:position pos:line="596" pos:column="52"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="596" pos:column="54">0<pos:position pos:line="596" pos:column="55"/></literal></expr></argument>, <argument><expr><name pos:line="596" pos:column="57">r<pos:position pos:line="596" pos:column="58"/></name></expr></argument>,
                          <argument><expr><literal type="string" pos:line="597" pos:column="27">"Failed to set r-&gt;user to '%s'"<pos:position pos:line="597" pos:column="61"/></literal></expr></argument>, <argument><expr><name><name pos:line="597" pos:column="60">dc<pos:position pos:line="597" pos:column="62"/></name><operator pos:line="597" pos:column="62">-&gt;<pos:position pos:line="597" pos:column="67"/></operator><name pos:line="597" pos:column="64">szUserName<pos:position pos:line="597" pos:column="74"/></name></name></expr></argument>)<pos:position pos:line="597" pos:column="75"/></argument_list></call></expr>;<pos:position pos:line="597" pos:column="76"/></expr_stmt></block></else></if>
    }<pos:position pos:line="598" pos:column="6"/></block></then></if>

    <comment type="block" pos:line="600" pos:column="5">/*
     * Check SSLRequire boolean expressions
     */</comment>
    <expr_stmt><expr><name pos:line="603" pos:column="5">requires<pos:position pos:line="603" pos:column="13"/></name> <operator pos:line="603" pos:column="14">=<pos:position pos:line="603" pos:column="15"/></operator> <name><name pos:line="603" pos:column="16">dc<pos:position pos:line="603" pos:column="18"/></name><operator pos:line="603" pos:column="18">-&gt;<pos:position pos:line="603" pos:column="23"/></operator><name pos:line="603" pos:column="20">aRequirement<pos:position pos:line="603" pos:column="32"/></name></name></expr>;<pos:position pos:line="603" pos:column="33"/></expr_stmt>
    <expr_stmt><expr><name pos:line="604" pos:column="5">ssl_requires<pos:position pos:line="604" pos:column="17"/></name> <operator pos:line="604" pos:column="18">=<pos:position pos:line="604" pos:column="19"/></operator> <operator pos:line="604" pos:column="20">(<pos:position pos:line="604" pos:column="21"/></operator><name pos:line="604" pos:column="21">ssl_require_t<pos:position pos:line="604" pos:column="34"/></name> <operator pos:line="604" pos:column="35">*<pos:position pos:line="604" pos:column="36"/></operator><operator pos:line="604" pos:column="36">)<pos:position pos:line="604" pos:column="37"/></operator><name><name pos:line="604" pos:column="37">requires<pos:position pos:line="604" pos:column="45"/></name><operator pos:line="604" pos:column="45">-&gt;<pos:position pos:line="604" pos:column="50"/></operator><name pos:line="604" pos:column="47">elts<pos:position pos:line="604" pos:column="51"/></name></name></expr>;<pos:position pos:line="604" pos:column="52"/></expr_stmt>

    <for pos:line="606" pos:column="5">for <control pos:line="606" pos:column="9">(<init><expr><name pos:line="606" pos:column="10">i<pos:position pos:line="606" pos:column="11"/></name> <operator pos:line="606" pos:column="12">=<pos:position pos:line="606" pos:column="13"/></operator> <literal type="number" pos:line="606" pos:column="14">0<pos:position pos:line="606" pos:column="15"/></literal></expr>;<pos:position pos:line="606" pos:column="16"/></init> <condition><expr><name pos:line="606" pos:column="17">i<pos:position pos:line="606" pos:column="18"/></name> <operator pos:line="606" pos:column="19">&lt;<pos:position pos:line="606" pos:column="23"/></operator> <name><name pos:line="606" pos:column="21">requires<pos:position pos:line="606" pos:column="29"/></name><operator pos:line="606" pos:column="29">-&gt;<pos:position pos:line="606" pos:column="34"/></operator><name pos:line="606" pos:column="31">nelts<pos:position pos:line="606" pos:column="36"/></name></name></expr>;<pos:position pos:line="606" pos:column="37"/></condition> <incr><expr><name pos:line="606" pos:column="38">i<pos:position pos:line="606" pos:column="39"/></name><operator pos:line="606" pos:column="39">++<pos:position pos:line="606" pos:column="41"/></operator></expr></incr>)<pos:position pos:line="606" pos:column="42"/></control> <block pos:line="606" pos:column="43">{
        <decl_stmt><decl><type><name pos:line="607" pos:column="9">ssl_require_t<pos:position pos:line="607" pos:column="22"/></name> <modifier pos:line="607" pos:column="23">*<pos:position pos:line="607" pos:column="24"/></modifier></type><name pos:line="607" pos:column="24">req<pos:position pos:line="607" pos:column="27"/></name> <init pos:line="607" pos:column="28">= <expr><operator pos:line="607" pos:column="30">&amp;<pos:position pos:line="607" pos:column="35"/></operator><name><name pos:line="607" pos:column="31">ssl_requires<pos:position pos:line="607" pos:column="43"/></name><index pos:line="607" pos:column="43">[<expr><name pos:line="607" pos:column="44">i<pos:position pos:line="607" pos:column="45"/></name></expr>]<pos:position pos:line="607" pos:column="46"/></index></name></expr></init></decl>;<pos:position pos:line="607" pos:column="47"/></decl_stmt>
        <expr_stmt><expr><name pos:line="608" pos:column="9">ok<pos:position pos:line="608" pos:column="11"/></name> <operator pos:line="608" pos:column="12">=<pos:position pos:line="608" pos:column="13"/></operator> <call><name pos:line="608" pos:column="14">ssl_expr_exec<pos:position pos:line="608" pos:column="27"/></name><argument_list pos:line="608" pos:column="27">(<argument><expr><name pos:line="608" pos:column="28">r<pos:position pos:line="608" pos:column="29"/></name></expr></argument>, <argument><expr><name><name pos:line="608" pos:column="31">req<pos:position pos:line="608" pos:column="34"/></name><operator pos:line="608" pos:column="34">-&gt;<pos:position pos:line="608" pos:column="39"/></operator><name pos:line="608" pos:column="36">mpExpr<pos:position pos:line="608" pos:column="42"/></name></name></expr></argument>)<pos:position pos:line="608" pos:column="43"/></argument_list></call></expr>;<pos:position pos:line="608" pos:column="44"/></expr_stmt>

        <if pos:line="610" pos:column="9">if <condition pos:line="610" pos:column="12">(<expr><name pos:line="610" pos:column="13">ok<pos:position pos:line="610" pos:column="15"/></name> <operator pos:line="610" pos:column="16">&lt;<pos:position pos:line="610" pos:column="20"/></operator> <literal type="number" pos:line="610" pos:column="18">0<pos:position pos:line="610" pos:column="19"/></literal></expr>)<pos:position pos:line="610" pos:column="20"/></condition><then pos:line="610" pos:column="20"> <block pos:line="610" pos:column="21">{
            <expr_stmt><expr><name pos:line="611" pos:column="13">cp<pos:position pos:line="611" pos:column="15"/></name> <operator pos:line="611" pos:column="16">=<pos:position pos:line="611" pos:column="17"/></operator> <call><name pos:line="611" pos:column="18">apr_psprintf<pos:position pos:line="611" pos:column="30"/></name><argument_list pos:line="611" pos:column="30">(<argument><expr><name><name pos:line="611" pos:column="31">r<pos:position pos:line="611" pos:column="32"/></name><operator pos:line="611" pos:column="32">-&gt;<pos:position pos:line="611" pos:column="37"/></operator><name pos:line="611" pos:column="34">pool<pos:position pos:line="611" pos:column="38"/></name></name></expr></argument>,
                              <argument><expr><literal type="string" pos:line="612" pos:column="31">"Failed to execute "<pos:position pos:line="612" pos:column="51"/></literal>
                              <literal type="string" pos:line="613" pos:column="31">"SSL requirement expression: %s"<pos:position pos:line="613" pos:column="63"/></literal></expr></argument>,
                              <argument><expr><call><name pos:line="614" pos:column="31">ssl_expr_get_error<pos:position pos:line="614" pos:column="49"/></name><argument_list pos:line="614" pos:column="49">()<pos:position pos:line="614" pos:column="51"/></argument_list></call></expr></argument>)<pos:position pos:line="614" pos:column="52"/></argument_list></call></expr>;<pos:position pos:line="614" pos:column="53"/></expr_stmt>

            <expr_stmt><expr><call><name pos:line="616" pos:column="13">ap_log_rerror<pos:position pos:line="616" pos:column="26"/></name><argument_list pos:line="616" pos:column="26">(<argument><expr><name pos:line="616" pos:column="27">APLOG_MARK<pos:position pos:line="616" pos:column="37"/></name></expr></argument>, <argument><expr><name pos:line="616" pos:column="39">APLOG_ERR<pos:position pos:line="616" pos:column="48"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="616" pos:column="50">0<pos:position pos:line="616" pos:column="51"/></literal></expr></argument>, <argument><expr><name pos:line="616" pos:column="53">r<pos:position pos:line="616" pos:column="54"/></name></expr></argument>,
                          <argument><expr><literal type="string" pos:line="617" pos:column="27">"access to %s failed, reason: %s"<pos:position pos:line="617" pos:column="60"/></literal></expr></argument>,
                          <argument><expr><name><name pos:line="618" pos:column="27">r<pos:position pos:line="618" pos:column="28"/></name><operator pos:line="618" pos:column="28">-&gt;<pos:position pos:line="618" pos:column="33"/></operator><name pos:line="618" pos:column="30">filename<pos:position pos:line="618" pos:column="38"/></name></name></expr></argument>, <argument><expr><name pos:line="618" pos:column="40">cp<pos:position pos:line="618" pos:column="42"/></name></expr></argument>)<pos:position pos:line="618" pos:column="43"/></argument_list></call></expr>;<pos:position pos:line="618" pos:column="44"/></expr_stmt>

            <comment type="block" pos:line="620" pos:column="13">/* remember forbidden access for strict require option */</comment>
            <expr_stmt><expr><call><name pos:line="621" pos:column="13">apr_table_setn<pos:position pos:line="621" pos:column="27"/></name><argument_list pos:line="621" pos:column="27">(<argument><expr><name><name pos:line="621" pos:column="28">r<pos:position pos:line="621" pos:column="29"/></name><operator pos:line="621" pos:column="29">-&gt;<pos:position pos:line="621" pos:column="34"/></operator><name pos:line="621" pos:column="31">notes<pos:position pos:line="621" pos:column="36"/></name></name></expr></argument>, <argument><expr><literal type="string" pos:line="621" pos:column="38">"ssl-access-forbidden"<pos:position pos:line="621" pos:column="60"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="621" pos:column="62">"1"<pos:position pos:line="621" pos:column="65"/></literal></expr></argument>)<pos:position pos:line="621" pos:column="66"/></argument_list></call></expr>;<pos:position pos:line="621" pos:column="67"/></expr_stmt>

            <return pos:line="623" pos:column="13">return <expr><name pos:line="623" pos:column="20">HTTP_FORBIDDEN<pos:position pos:line="623" pos:column="34"/></name></expr>;<pos:position pos:line="623" pos:column="35"/></return>
        }<pos:position pos:line="624" pos:column="10"/></block></then></if>

        <if pos:line="626" pos:column="9">if <condition pos:line="626" pos:column="12">(<expr><name pos:line="626" pos:column="13">ok<pos:position pos:line="626" pos:column="15"/></name> <operator pos:line="626" pos:column="16">!=<pos:position pos:line="626" pos:column="18"/></operator> <literal type="number" pos:line="626" pos:column="19">1<pos:position pos:line="626" pos:column="20"/></literal></expr>)<pos:position pos:line="626" pos:column="21"/></condition><then pos:line="626" pos:column="21"> <block pos:line="626" pos:column="22">{
            <expr_stmt><expr><call><name pos:line="627" pos:column="13">ap_log_rerror<pos:position pos:line="627" pos:column="26"/></name><argument_list pos:line="627" pos:column="26">(<argument><expr><name pos:line="627" pos:column="27">APLOG_MARK<pos:position pos:line="627" pos:column="37"/></name></expr></argument>, <argument><expr><name pos:line="627" pos:column="39">APLOG_INFO<pos:position pos:line="627" pos:column="49"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="627" pos:column="51">0<pos:position pos:line="627" pos:column="52"/></literal></expr></argument>, <argument><expr><name pos:line="627" pos:column="54">r<pos:position pos:line="627" pos:column="55"/></name></expr></argument>,
                          <argument><expr><literal type="string" pos:line="628" pos:column="27">"Access to %s denied for %s "<pos:position pos:line="628" pos:column="56"/></literal>
                          <literal type="string" pos:line="629" pos:column="27">"(requirement expression not fulfilled)"<pos:position pos:line="629" pos:column="67"/></literal></expr></argument>,
                          <argument><expr><name><name pos:line="630" pos:column="27">r<pos:position pos:line="630" pos:column="28"/></name><operator pos:line="630" pos:column="28">-&gt;<pos:position pos:line="630" pos:column="33"/></operator><name pos:line="630" pos:column="30">filename<pos:position pos:line="630" pos:column="38"/></name></name></expr></argument>, <argument><expr><name><name pos:line="630" pos:column="40">r<pos:position pos:line="630" pos:column="41"/></name><operator pos:line="630" pos:column="41">-&gt;<pos:position pos:line="630" pos:column="46"/></operator><name pos:line="630" pos:column="43">connection<pos:position pos:line="630" pos:column="53"/></name><operator pos:line="630" pos:column="53">-&gt;<pos:position pos:line="630" pos:column="58"/></operator><name pos:line="630" pos:column="55">remote_ip<pos:position pos:line="630" pos:column="64"/></name></name></expr></argument>)<pos:position pos:line="630" pos:column="65"/></argument_list></call></expr>;<pos:position pos:line="630" pos:column="66"/></expr_stmt>

            <expr_stmt><expr><call><name pos:line="632" pos:column="13">ap_log_rerror<pos:position pos:line="632" pos:column="26"/></name><argument_list pos:line="632" pos:column="26">(<argument><expr><name pos:line="632" pos:column="27">APLOG_MARK<pos:position pos:line="632" pos:column="37"/></name></expr></argument>, <argument><expr><name pos:line="632" pos:column="39">APLOG_INFO<pos:position pos:line="632" pos:column="49"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="632" pos:column="51">0<pos:position pos:line="632" pos:column="52"/></literal></expr></argument>, <argument><expr><name pos:line="632" pos:column="54">r<pos:position pos:line="632" pos:column="55"/></name></expr></argument>,
                          <argument><expr><literal type="string" pos:line="633" pos:column="27">"Failed expression: %s"<pos:position pos:line="633" pos:column="50"/></literal></expr></argument>, <argument><expr><name><name pos:line="633" pos:column="52">req<pos:position pos:line="633" pos:column="55"/></name><operator pos:line="633" pos:column="55">-&gt;<pos:position pos:line="633" pos:column="60"/></operator><name pos:line="633" pos:column="57">cpExpr<pos:position pos:line="633" pos:column="63"/></name></name></expr></argument>)<pos:position pos:line="633" pos:column="64"/></argument_list></call></expr>;<pos:position pos:line="633" pos:column="65"/></expr_stmt>

            <expr_stmt><expr><call><name pos:line="635" pos:column="13">ap_log_rerror<pos:position pos:line="635" pos:column="26"/></name><argument_list pos:line="635" pos:column="26">(<argument><expr><name pos:line="635" pos:column="27">APLOG_MARK<pos:position pos:line="635" pos:column="37"/></name></expr></argument>, <argument><expr><name pos:line="635" pos:column="39">APLOG_ERR<pos:position pos:line="635" pos:column="48"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="635" pos:column="50">0<pos:position pos:line="635" pos:column="51"/></literal></expr></argument>, <argument><expr><name pos:line="635" pos:column="53">r<pos:position pos:line="635" pos:column="54"/></name></expr></argument>,
                          <argument><expr><literal type="string" pos:line="636" pos:column="27">"access to %s failed, reason: %s"<pos:position pos:line="636" pos:column="60"/></literal></expr></argument>,
                          <argument><expr><name><name pos:line="637" pos:column="27">r<pos:position pos:line="637" pos:column="28"/></name><operator pos:line="637" pos:column="28">-&gt;<pos:position pos:line="637" pos:column="33"/></operator><name pos:line="637" pos:column="30">filename<pos:position pos:line="637" pos:column="38"/></name></name></expr></argument>,
                          <argument><expr><literal type="string" pos:line="638" pos:column="27">"SSL requirement expression not fulfilled"<pos:position pos:line="638" pos:column="69"/></literal></expr></argument>)<pos:position pos:line="638" pos:column="70"/></argument_list></call></expr>;<pos:position pos:line="638" pos:column="71"/></expr_stmt>

            <comment type="block" pos:line="640" pos:column="13">/* remember forbidden access for strict require option */</comment>
            <expr_stmt><expr><call><name pos:line="641" pos:column="13">apr_table_setn<pos:position pos:line="641" pos:column="27"/></name><argument_list pos:line="641" pos:column="27">(<argument><expr><name><name pos:line="641" pos:column="28">r<pos:position pos:line="641" pos:column="29"/></name><operator pos:line="641" pos:column="29">-&gt;<pos:position pos:line="641" pos:column="34"/></operator><name pos:line="641" pos:column="31">notes<pos:position pos:line="641" pos:column="36"/></name></name></expr></argument>, <argument><expr><literal type="string" pos:line="641" pos:column="38">"ssl-access-forbidden"<pos:position pos:line="641" pos:column="60"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="641" pos:column="62">"1"<pos:position pos:line="641" pos:column="65"/></literal></expr></argument>)<pos:position pos:line="641" pos:column="66"/></argument_list></call></expr>;<pos:position pos:line="641" pos:column="67"/></expr_stmt>

            <return pos:line="643" pos:column="13">return <expr><name pos:line="643" pos:column="20">HTTP_FORBIDDEN<pos:position pos:line="643" pos:column="34"/></name></expr>;<pos:position pos:line="643" pos:column="35"/></return>
        }<pos:position pos:line="644" pos:column="10"/></block></then></if>
    }<pos:position pos:line="645" pos:column="6"/></block></for>

    <comment type="block" pos:line="647" pos:column="5">/*
     * Else access is granted from our point of view (except vendor
     * handlers override). But we have to return DECLINED here instead
     * of OK, because mod_auth and other modules still might want to
     * deny access.
     */</comment>

    <return pos:line="654" pos:column="5">return <expr><name pos:line="654" pos:column="12">DECLINED<pos:position pos:line="654" pos:column="20"/></name></expr>;<pos:position pos:line="654" pos:column="21"/></return>
}<pos:position pos:line="655" pos:column="2"/></block></function></unit>

<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/httpd/gumtree/httpd_repos_function_2016_httpd-2.3.8.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">char<pos:position pos:line="1" pos:column="12"/></name> <modifier pos:line="1" pos:column="13">*<pos:position pos:line="1" pos:column="14"/></modifier></type><name pos:line="1" pos:column="14">text<pos:position pos:line="1" pos:column="18"/></name><parameter_list pos:line="1" pos:column="18">(<parameter><decl><type><name pos:line="1" pos:column="19">sed_commands_t<pos:position pos:line="1" pos:column="33"/></name> <modifier pos:line="1" pos:column="34">*<pos:position pos:line="1" pos:column="35"/></modifier></type><name pos:line="1" pos:column="35">commands<pos:position pos:line="1" pos:column="43"/></name></decl></parameter>, <parameter><decl><type><name pos:line="1" pos:column="45">char<pos:position pos:line="1" pos:column="49"/></name> <modifier pos:line="1" pos:column="50">*<pos:position pos:line="1" pos:column="51"/></modifier></type><name pos:line="1" pos:column="51">textbuf<pos:position pos:line="1" pos:column="58"/></name></decl></parameter>, <parameter><decl><type><name pos:line="1" pos:column="60">char<pos:position pos:line="1" pos:column="64"/></name> <modifier pos:line="1" pos:column="65">*<pos:position pos:line="1" pos:column="66"/></modifier></type><name pos:line="1" pos:column="66">tbend<pos:position pos:line="1" pos:column="71"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="72"/></parameter_list>
<block pos:line="2" pos:column="1">{
    <decl_stmt><decl><type><name pos:line="3" pos:column="5">char<pos:position pos:line="3" pos:column="9"/></name>   <modifier pos:line="3" pos:column="12">*<pos:position pos:line="3" pos:column="13"/></modifier></type><name pos:line="3" pos:column="13">p<pos:position pos:line="3" pos:column="14"/></name></decl>, <modifier pos:line="3" pos:column="16">*<pos:position pos:line="3" pos:column="17"/></modifier><decl><type ref="prev"/><name pos:line="3" pos:column="17">q<pos:position pos:line="3" pos:column="18"/></name></decl>;<pos:position pos:line="3" pos:column="19"/></decl_stmt>

    <expr_stmt><expr><name pos:line="5" pos:column="5">p<pos:position pos:line="5" pos:column="6"/></name> <operator pos:line="5" pos:column="7">=<pos:position pos:line="5" pos:column="8"/></operator> <name pos:line="5" pos:column="9">textbuf<pos:position pos:line="5" pos:column="16"/></name></expr>;<pos:position pos:line="5" pos:column="17"/></expr_stmt>
    <expr_stmt><expr><name pos:line="6" pos:column="5">q<pos:position pos:line="6" pos:column="6"/></name> <operator pos:line="6" pos:column="7">=<pos:position pos:line="6" pos:column="8"/></operator> <name><name pos:line="6" pos:column="9">commands<pos:position pos:line="6" pos:column="17"/></name><operator pos:line="6" pos:column="17">-&gt;<pos:position pos:line="6" pos:column="22"/></operator><name pos:line="6" pos:column="19">cp<pos:position pos:line="6" pos:column="21"/></name></name></expr>;<pos:position pos:line="6" pos:column="22"/></expr_stmt>
<cpp:ifndef pos:line="7" pos:column="1">#<cpp:directive pos:line="7" pos:column="2">ifndef<pos:position pos:line="7" pos:column="8"/></cpp:directive> <name pos:line="7" pos:column="9">S5EMUL<pos:position pos:line="7" pos:column="15"/></name></cpp:ifndef>
    <comment type="block" pos:line="8" pos:column="5">/*
     * Strip off indentation from text to be inserted.
     */</comment>
    <while pos:line="11" pos:column="5">while<condition pos:line="11" pos:column="10">(<expr><operator pos:line="11" pos:column="11">*<pos:position pos:line="11" pos:column="12"/></operator><name pos:line="11" pos:column="12">q<pos:position pos:line="11" pos:column="13"/></name> <operator pos:line="11" pos:column="14">==<pos:position pos:line="11" pos:column="16"/></operator> <literal type="char" pos:line="11" pos:column="17">'\t'<pos:position pos:line="11" pos:column="21"/></literal> <operator pos:line="11" pos:column="22">||<pos:position pos:line="11" pos:column="24"/></operator> <operator pos:line="11" pos:column="25">*<pos:position pos:line="11" pos:column="26"/></operator><name pos:line="11" pos:column="26">q<pos:position pos:line="11" pos:column="27"/></name> <operator pos:line="11" pos:column="28">==<pos:position pos:line="11" pos:column="30"/></operator> <literal type="char" pos:line="11" pos:column="31">' '<pos:position pos:line="11" pos:column="34"/></literal></expr>)<pos:position pos:line="11" pos:column="35"/></condition>    <block type="pseudo"><expr_stmt><expr><name pos:line="11" pos:column="39">q<pos:position pos:line="11" pos:column="40"/></name><operator pos:line="11" pos:column="40">++<pos:position pos:line="11" pos:column="42"/></operator></expr>;<pos:position pos:line="11" pos:column="43"/></expr_stmt></block></while>
<cpp:endif pos:line="12" pos:column="1">#<cpp:directive pos:line="12" pos:column="2">endif<pos:position pos:line="12" pos:column="7"/></cpp:directive></cpp:endif>
    <for pos:line="13" pos:column="5">for<control pos:line="13" pos:column="8">(<init pos:line="13" pos:column="9">;<pos:position pos:line="13" pos:column="10"/></init><condition pos:line="13" pos:column="10">;<pos:position pos:line="13" pos:column="11"/></condition><incr/>)<pos:position pos:line="13" pos:column="12"/></control> <block pos:line="13" pos:column="13">{

        <if pos:line="15" pos:column="9">if<condition pos:line="15" pos:column="11">(<expr><name pos:line="15" pos:column="12">p<pos:position pos:line="15" pos:column="13"/></name> <operator pos:line="15" pos:column="14">&gt;<pos:position pos:line="15" pos:column="18"/></operator> <name pos:line="15" pos:column="16">tbend<pos:position pos:line="15" pos:column="21"/></name></expr>)<pos:position pos:line="15" pos:column="22"/></condition><then pos:line="15" pos:column="22">
            <block type="pseudo"><return pos:line="16" pos:column="13">return<expr><operator pos:line="16" pos:column="19">(<pos:position pos:line="16" pos:column="20"/></operator><name pos:line="16" pos:column="20">NULL<pos:position pos:line="16" pos:column="24"/></name><operator pos:line="16" pos:column="24">)<pos:position pos:line="16" pos:column="25"/></operator></expr>;<pos:position pos:line="16" pos:column="26"/></return></block></then></if>    <comment type="block" pos:line="16" pos:column="30">/* overflowed the buffer */</comment>
        <if pos:line="17" pos:column="9">if<condition pos:line="17" pos:column="11">(<expr><operator pos:line="17" pos:column="12">(<pos:position pos:line="17" pos:column="13"/></operator><operator pos:line="17" pos:column="13">*<pos:position pos:line="17" pos:column="14"/></operator><name pos:line="17" pos:column="14">p<pos:position pos:line="17" pos:column="15"/></name> <operator pos:line="17" pos:column="16">=<pos:position pos:line="17" pos:column="17"/></operator> <operator pos:line="17" pos:column="18">*<pos:position pos:line="17" pos:column="19"/></operator><name pos:line="17" pos:column="19">q<pos:position pos:line="17" pos:column="20"/></name><operator pos:line="17" pos:column="20">++<pos:position pos:line="17" pos:column="22"/></operator><operator pos:line="17" pos:column="22">)<pos:position pos:line="17" pos:column="23"/></operator> <operator pos:line="17" pos:column="24">==<pos:position pos:line="17" pos:column="26"/></operator> <literal type="char" pos:line="17" pos:column="27">'\\'<pos:position pos:line="17" pos:column="31"/></literal></expr>)<pos:position pos:line="17" pos:column="32"/></condition><then pos:line="17" pos:column="32">
            <block type="pseudo"><expr_stmt><expr><operator pos:line="18" pos:column="13">*<pos:position pos:line="18" pos:column="14"/></operator><name pos:line="18" pos:column="14">p<pos:position pos:line="18" pos:column="15"/></name> <operator pos:line="18" pos:column="16">=<pos:position pos:line="18" pos:column="17"/></operator> <operator pos:line="18" pos:column="18">*<pos:position pos:line="18" pos:column="19"/></operator><name pos:line="18" pos:column="19">q<pos:position pos:line="18" pos:column="20"/></name><operator pos:line="18" pos:column="20">++<pos:position pos:line="18" pos:column="22"/></operator></expr>;<pos:position pos:line="18" pos:column="23"/></expr_stmt></block></then></if>
        <if pos:line="19" pos:column="9">if<condition pos:line="19" pos:column="11">(<expr><operator pos:line="19" pos:column="12">*<pos:position pos:line="19" pos:column="13"/></operator><name pos:line="19" pos:column="13">p<pos:position pos:line="19" pos:column="14"/></name> <operator pos:line="19" pos:column="15">==<pos:position pos:line="19" pos:column="17"/></operator> <literal type="char" pos:line="19" pos:column="18">'\0'<pos:position pos:line="19" pos:column="22"/></literal></expr>)<pos:position pos:line="19" pos:column="23"/></condition><then pos:line="19" pos:column="23"> <block pos:line="19" pos:column="24">{
            <expr_stmt><expr><name><name pos:line="20" pos:column="13">commands<pos:position pos:line="20" pos:column="21"/></name><operator pos:line="20" pos:column="21">-&gt;<pos:position pos:line="20" pos:column="26"/></operator><name pos:line="20" pos:column="23">cp<pos:position pos:line="20" pos:column="25"/></name></name> <operator pos:line="20" pos:column="26">=<pos:position pos:line="20" pos:column="27"/></operator> <operator pos:line="20" pos:column="28">--<pos:position pos:line="20" pos:column="30"/></operator><name pos:line="20" pos:column="30">q<pos:position pos:line="20" pos:column="31"/></name></expr>;<pos:position pos:line="20" pos:column="32"/></expr_stmt>
            <return pos:line="21" pos:column="13">return<expr><operator pos:line="21" pos:column="19">(<pos:position pos:line="21" pos:column="20"/></operator><operator pos:line="21" pos:column="20">++<pos:position pos:line="21" pos:column="22"/></operator><name pos:line="21" pos:column="22">p<pos:position pos:line="21" pos:column="23"/></name><operator pos:line="21" pos:column="23">)<pos:position pos:line="21" pos:column="24"/></operator></expr>;<pos:position pos:line="21" pos:column="25"/></return>
        }<pos:position pos:line="22" pos:column="10"/></block></then></if>
<cpp:ifndef pos:line="23" pos:column="1">#<cpp:directive pos:line="23" pos:column="2">ifndef<pos:position pos:line="23" pos:column="8"/></cpp:directive> <name pos:line="23" pos:column="9">S5EMUL<pos:position pos:line="23" pos:column="15"/></name></cpp:ifndef>
        <comment type="block" pos:line="24" pos:column="9">/*
         * Strip off indentation from text to be inserted.
         */</comment>
        <if pos:line="27" pos:column="9">if<condition pos:line="27" pos:column="11">(<expr><operator pos:line="27" pos:column="12">*<pos:position pos:line="27" pos:column="13"/></operator><name pos:line="27" pos:column="13">p<pos:position pos:line="27" pos:column="14"/></name> <operator pos:line="27" pos:column="15">==<pos:position pos:line="27" pos:column="17"/></operator> <literal type="char" pos:line="27" pos:column="18">'\n'<pos:position pos:line="27" pos:column="22"/></literal></expr>)<pos:position pos:line="27" pos:column="23"/></condition><then pos:line="27" pos:column="23"> <block pos:line="27" pos:column="24">{
            <while pos:line="28" pos:column="13">while<condition pos:line="28" pos:column="18">(<expr><operator pos:line="28" pos:column="19">*<pos:position pos:line="28" pos:column="20"/></operator><name pos:line="28" pos:column="20">q<pos:position pos:line="28" pos:column="21"/></name> <operator pos:line="28" pos:column="22">==<pos:position pos:line="28" pos:column="24"/></operator> <literal type="char" pos:line="28" pos:column="25">'\t'<pos:position pos:line="28" pos:column="29"/></literal> <operator pos:line="28" pos:column="30">||<pos:position pos:line="28" pos:column="32"/></operator> <operator pos:line="28" pos:column="33">*<pos:position pos:line="28" pos:column="34"/></operator><name pos:line="28" pos:column="34">q<pos:position pos:line="28" pos:column="35"/></name> <operator pos:line="28" pos:column="36">==<pos:position pos:line="28" pos:column="38"/></operator> <literal type="char" pos:line="28" pos:column="39">' '<pos:position pos:line="28" pos:column="42"/></literal></expr>)<pos:position pos:line="28" pos:column="43"/></condition>    <block type="pseudo"><expr_stmt><expr><name pos:line="28" pos:column="47">q<pos:position pos:line="28" pos:column="48"/></name><operator pos:line="28" pos:column="48">++<pos:position pos:line="28" pos:column="50"/></operator></expr>;<pos:position pos:line="28" pos:column="51"/></expr_stmt></block></while>
        }<pos:position pos:line="29" pos:column="10"/></block></then></if>
<cpp:endif pos:line="30" pos:column="1">#<cpp:directive pos:line="30" pos:column="2">endif<pos:position pos:line="30" pos:column="7"/></cpp:directive></cpp:endif>
        <expr_stmt><expr><name pos:line="31" pos:column="9">p<pos:position pos:line="31" pos:column="10"/></name><operator pos:line="31" pos:column="10">++<pos:position pos:line="31" pos:column="12"/></operator></expr>;<pos:position pos:line="31" pos:column="13"/></expr_stmt>
    }<pos:position pos:line="32" pos:column="6"/></block></for>
}<pos:position pos:line="33" pos:column="2"/></block></function></unit>

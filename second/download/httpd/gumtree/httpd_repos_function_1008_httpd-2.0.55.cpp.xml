<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/httpd/gumtree/httpd_repos_function_1008_httpd-2.0.55.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">cache<pos:position pos:line="1" pos:column="13"/></name> <modifier pos:line="1" pos:column="14">*<pos:position pos:line="1" pos:column="15"/></modifier></type><name pos:line="1" pos:column="15">init_cache<pos:position pos:line="1" pos:column="25"/></name><parameter_list pos:line="1" pos:column="25">(<parameter><decl><type><name pos:line="1" pos:column="26">apr_pool_t<pos:position pos:line="1" pos:column="36"/></name> <modifier pos:line="1" pos:column="37">*<pos:position pos:line="1" pos:column="38"/></modifier></type><name pos:line="1" pos:column="38">p<pos:position pos:line="1" pos:column="39"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="40"/></parameter_list>
<block pos:line="2" pos:column="1">{
    <decl_stmt><decl><type><name pos:line="3" pos:column="5">cache<pos:position pos:line="3" pos:column="10"/></name> <modifier pos:line="3" pos:column="11">*<pos:position pos:line="3" pos:column="12"/></modifier></type><name pos:line="3" pos:column="12">c<pos:position pos:line="3" pos:column="13"/></name></decl>;<pos:position pos:line="3" pos:column="14"/></decl_stmt>

    <expr_stmt><expr><name pos:line="5" pos:column="5">c<pos:position pos:line="5" pos:column="6"/></name> <operator pos:line="5" pos:column="7">=<pos:position pos:line="5" pos:column="8"/></operator> <operator pos:line="5" pos:column="9">(<pos:position pos:line="5" pos:column="10"/></operator><name pos:line="5" pos:column="10">cache<pos:position pos:line="5" pos:column="15"/></name> <operator pos:line="5" pos:column="16">*<pos:position pos:line="5" pos:column="17"/></operator><operator pos:line="5" pos:column="17">)<pos:position pos:line="5" pos:column="18"/></operator><call><name pos:line="5" pos:column="18">apr_palloc<pos:position pos:line="5" pos:column="28"/></name><argument_list pos:line="5" pos:column="28">(<argument><expr><name pos:line="5" pos:column="29">p<pos:position pos:line="5" pos:column="30"/></name></expr></argument>, <argument><expr><sizeof pos:line="5" pos:column="32">sizeof<argument_list pos:line="5" pos:column="38">(<argument><expr><name pos:line="5" pos:column="39">cache<pos:position pos:line="5" pos:column="44"/></name></expr></argument>)<pos:position pos:line="5" pos:column="45"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="5" pos:column="46"/></argument_list></call></expr>;<pos:position pos:line="5" pos:column="47"/></expr_stmt>
    <if pos:line="6" pos:column="5">if <condition pos:line="6" pos:column="8">(<expr><call><name pos:line="6" pos:column="9">apr_pool_create<pos:position pos:line="6" pos:column="24"/></name><argument_list pos:line="6" pos:column="24">(<argument><expr><operator pos:line="6" pos:column="25">&amp;<pos:position pos:line="6" pos:column="30"/></operator><name><name pos:line="6" pos:column="26">c<pos:position pos:line="6" pos:column="27"/></name><operator pos:line="6" pos:column="27">-&gt;<pos:position pos:line="6" pos:column="32"/></operator><name pos:line="6" pos:column="29">pool<pos:position pos:line="6" pos:column="33"/></name></name></expr></argument>, <argument><expr><name pos:line="6" pos:column="35">p<pos:position pos:line="6" pos:column="36"/></name></expr></argument>)<pos:position pos:line="6" pos:column="37"/></argument_list></call> <operator pos:line="6" pos:column="38">!=<pos:position pos:line="6" pos:column="40"/></operator> <name pos:line="6" pos:column="41">APR_SUCCESS<pos:position pos:line="6" pos:column="52"/></name></expr>)<pos:position pos:line="6" pos:column="53"/></condition><then pos:line="6" pos:column="53"> <block pos:line="6" pos:column="54">{
        <return pos:line="7" pos:column="9">return <expr><name pos:line="7" pos:column="16">NULL<pos:position pos:line="7" pos:column="20"/></name></expr>;<pos:position pos:line="7" pos:column="21"/></return>
    }<pos:position pos:line="8" pos:column="6"/></block></then></if>
    <expr_stmt><expr><name><name pos:line="9" pos:column="5">c<pos:position pos:line="9" pos:column="6"/></name><operator pos:line="9" pos:column="6">-&gt;<pos:position pos:line="9" pos:column="11"/></operator><name pos:line="9" pos:column="8">lists<pos:position pos:line="9" pos:column="13"/></name></name> <operator pos:line="9" pos:column="14">=<pos:position pos:line="9" pos:column="15"/></operator> <call><name pos:line="9" pos:column="16">apr_array_make<pos:position pos:line="9" pos:column="30"/></name><argument_list pos:line="9" pos:column="30">(<argument><expr><name><name pos:line="9" pos:column="31">c<pos:position pos:line="9" pos:column="32"/></name><operator pos:line="9" pos:column="32">-&gt;<pos:position pos:line="9" pos:column="37"/></operator><name pos:line="9" pos:column="34">pool<pos:position pos:line="9" pos:column="38"/></name></name></expr></argument>, <argument><expr><literal type="number" pos:line="9" pos:column="40">2<pos:position pos:line="9" pos:column="41"/></literal></expr></argument>, <argument><expr><sizeof pos:line="9" pos:column="43">sizeof<argument_list pos:line="9" pos:column="49">(<argument><expr><name pos:line="9" pos:column="50">cachelist<pos:position pos:line="9" pos:column="59"/></name></expr></argument>)<pos:position pos:line="9" pos:column="60"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="9" pos:column="61"/></argument_list></call></expr>;<pos:position pos:line="9" pos:column="62"/></expr_stmt>
<cpp:if pos:line="10" pos:column="1">#<cpp:directive pos:line="10" pos:column="2">if<pos:position pos:line="10" pos:column="4"/></cpp:directive> <expr><name pos:line="10" pos:column="5">APR_HAS_THREADS<pos:position pos:line="10" pos:column="20"/></name></expr></cpp:if>
    <expr_stmt><expr><operator pos:line="11" pos:column="5">(<pos:position pos:line="11" pos:column="6"/></operator><name pos:line="11" pos:column="6">void<pos:position pos:line="11" pos:column="10"/></name><operator pos:line="11" pos:column="10">)<pos:position pos:line="11" pos:column="11"/></operator><call><name pos:line="11" pos:column="11">apr_thread_mutex_create<pos:position pos:line="11" pos:column="34"/></name><argument_list pos:line="11" pos:column="34">(<argument><expr><operator pos:line="11" pos:column="35">&amp;<pos:position pos:line="11" pos:column="40"/></operator><operator pos:line="11" pos:column="36">(<pos:position pos:line="11" pos:column="37"/></operator><name><name pos:line="11" pos:column="37">c<pos:position pos:line="11" pos:column="38"/></name><operator pos:line="11" pos:column="38">-&gt;<pos:position pos:line="11" pos:column="43"/></operator><name pos:line="11" pos:column="40">lock<pos:position pos:line="11" pos:column="44"/></name></name><operator pos:line="11" pos:column="44">)<pos:position pos:line="11" pos:column="45"/></operator></expr></argument>, <argument><expr><name pos:line="11" pos:column="47">APR_THREAD_MUTEX_DEFAULT<pos:position pos:line="11" pos:column="71"/></name></expr></argument>, <argument><expr><name pos:line="11" pos:column="73">p<pos:position pos:line="11" pos:column="74"/></name></expr></argument>)<pos:position pos:line="11" pos:column="75"/></argument_list></call></expr>;<pos:position pos:line="11" pos:column="76"/></expr_stmt>
<cpp:endif pos:line="12" pos:column="1">#<cpp:directive pos:line="12" pos:column="2">endif<pos:position pos:line="12" pos:column="7"/></cpp:directive></cpp:endif>
    <return pos:line="13" pos:column="5">return <expr><name pos:line="13" pos:column="12">c<pos:position pos:line="13" pos:column="13"/></name></expr>;<pos:position pos:line="13" pos:column="14"/></return>
}<pos:position pos:line="14" pos:column="2"/></block></function></unit>

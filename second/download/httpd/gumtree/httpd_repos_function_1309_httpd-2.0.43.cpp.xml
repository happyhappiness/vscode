<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/httpd/gumtree/httpd_repos_function_1309_httpd-2.0.43.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">int<pos:position pos:line="1" pos:column="11"/></name></type> <name pos:line="1" pos:column="12">handle_echo<pos:position pos:line="1" pos:column="23"/></name><parameter_list pos:line="1" pos:column="23">(<parameter><decl><type><name pos:line="1" pos:column="24">include_ctx_t<pos:position pos:line="1" pos:column="37"/></name> <modifier pos:line="1" pos:column="38">*<pos:position pos:line="1" pos:column="39"/></modifier></type><name pos:line="1" pos:column="39">ctx<pos:position pos:line="1" pos:column="42"/></name></decl></parameter>, <parameter><decl><type><name pos:line="1" pos:column="44">apr_bucket_brigade<pos:position pos:line="1" pos:column="62"/></name> <modifier pos:line="1" pos:column="63">*<pos:position pos:line="1" pos:column="64"/></modifier><modifier pos:line="1" pos:column="64">*<pos:position pos:line="1" pos:column="65"/></modifier></type><name pos:line="1" pos:column="65">bb<pos:position pos:line="1" pos:column="67"/></name></decl></parameter>, 
                       <parameter><decl><type><name pos:line="2" pos:column="24">request_rec<pos:position pos:line="2" pos:column="35"/></name> <modifier pos:line="2" pos:column="36">*<pos:position pos:line="2" pos:column="37"/></modifier></type><name pos:line="2" pos:column="37">r<pos:position pos:line="2" pos:column="38"/></name></decl></parameter>, <parameter><decl><type><name pos:line="2" pos:column="40">ap_filter_t<pos:position pos:line="2" pos:column="51"/></name> <modifier pos:line="2" pos:column="52">*<pos:position pos:line="2" pos:column="53"/></modifier></type><name pos:line="2" pos:column="53">f<pos:position pos:line="2" pos:column="54"/></name></decl></parameter>, <parameter><decl><type><name pos:line="2" pos:column="56">apr_bucket<pos:position pos:line="2" pos:column="66"/></name> <modifier pos:line="2" pos:column="67">*<pos:position pos:line="2" pos:column="68"/></modifier></type><name pos:line="2" pos:column="68">head_ptr<pos:position pos:line="2" pos:column="76"/></name></decl></parameter>, 
                       <parameter><decl><type><name pos:line="3" pos:column="24">apr_bucket<pos:position pos:line="3" pos:column="34"/></name> <modifier pos:line="3" pos:column="35">*<pos:position pos:line="3" pos:column="36"/></modifier><modifier pos:line="3" pos:column="36">*<pos:position pos:line="3" pos:column="37"/></modifier></type><name pos:line="3" pos:column="37">inserted_head<pos:position pos:line="3" pos:column="50"/></name></decl></parameter>)<pos:position pos:line="3" pos:column="51"/></parameter_list>
<block pos:line="4" pos:column="1">{
    <decl_stmt><decl><type><name pos:line="5" pos:column="5">char<pos:position pos:line="5" pos:column="9"/></name>       <modifier pos:line="5" pos:column="16">*<pos:position pos:line="5" pos:column="17"/></modifier></type><name pos:line="5" pos:column="17">tag<pos:position pos:line="5" pos:column="20"/></name>       <init pos:line="5" pos:column="27">= <expr><name pos:line="5" pos:column="29">NULL<pos:position pos:line="5" pos:column="33"/></name></expr></init></decl>;<pos:position pos:line="5" pos:column="34"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="6" pos:column="5">char<pos:position pos:line="6" pos:column="9"/></name>       <modifier pos:line="6" pos:column="16">*<pos:position pos:line="6" pos:column="17"/></modifier></type><name pos:line="6" pos:column="17">tag_val<pos:position pos:line="6" pos:column="24"/></name>   <init pos:line="6" pos:column="27">= <expr><name pos:line="6" pos:column="29">NULL<pos:position pos:line="6" pos:column="33"/></name></expr></init></decl>;<pos:position pos:line="6" pos:column="34"/></decl_stmt>
    <decl_stmt><decl><type><specifier pos:line="7" pos:column="5">const<pos:position pos:line="7" pos:column="10"/></specifier> <name pos:line="7" pos:column="11">char<pos:position pos:line="7" pos:column="15"/></name> <modifier pos:line="7" pos:column="16">*<pos:position pos:line="7" pos:column="17"/></modifier></type><name pos:line="7" pos:column="17">echo_text<pos:position pos:line="7" pos:column="26"/></name> <init pos:line="7" pos:column="27">= <expr><name pos:line="7" pos:column="29">NULL<pos:position pos:line="7" pos:column="33"/></name></expr></init></decl>;<pos:position pos:line="7" pos:column="34"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="8" pos:column="5">apr_bucket<pos:position pos:line="8" pos:column="15"/></name>  <modifier pos:line="8" pos:column="17">*<pos:position pos:line="8" pos:column="18"/></modifier></type><name pos:line="8" pos:column="18">tmp_buck<pos:position pos:line="8" pos:column="26"/></name></decl>;<pos:position pos:line="8" pos:column="27"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="9" pos:column="5">apr_size_t<pos:position pos:line="9" pos:column="15"/></name></type> <name pos:line="9" pos:column="16">e_len<pos:position pos:line="9" pos:column="21"/></name></decl>;<pos:position pos:line="9" pos:column="22"/></decl_stmt>
    <enum pos:line="10" pos:column="5">enum <block pos:line="10" pos:column="10">{<decl><name pos:line="10" pos:column="11">E_NONE<pos:position pos:line="10" pos:column="17"/></name></decl>, <decl><name pos:line="10" pos:column="19">E_URL<pos:position pos:line="10" pos:column="24"/></name></decl>, <decl><name pos:line="10" pos:column="26">E_ENTITY<pos:position pos:line="10" pos:column="34"/></name></decl>}<pos:position pos:line="10" pos:column="35"/></block> <decl><name pos:line="10" pos:column="36">encode<pos:position pos:line="10" pos:column="42"/></name></decl>;<pos:position pos:line="10" pos:column="43"/></enum>

    <expr_stmt><expr><name pos:line="12" pos:column="5">encode<pos:position pos:line="12" pos:column="11"/></name> <operator pos:line="12" pos:column="12">=<pos:position pos:line="12" pos:column="13"/></operator> <name pos:line="12" pos:column="14">E_ENTITY<pos:position pos:line="12" pos:column="22"/></name></expr>;<pos:position pos:line="12" pos:column="23"/></expr_stmt>

    <expr_stmt><expr><operator pos:line="14" pos:column="5">*<pos:position pos:line="14" pos:column="6"/></operator><name pos:line="14" pos:column="6">inserted_head<pos:position pos:line="14" pos:column="19"/></name> <operator pos:line="14" pos:column="20">=<pos:position pos:line="14" pos:column="21"/></operator> <name pos:line="14" pos:column="22">NULL<pos:position pos:line="14" pos:column="26"/></name></expr>;<pos:position pos:line="14" pos:column="27"/></expr_stmt>
    <if pos:line="15" pos:column="5">if <condition pos:line="15" pos:column="8">(<expr><name><name pos:line="15" pos:column="9">ctx<pos:position pos:line="15" pos:column="12"/></name><operator pos:line="15" pos:column="12">-&gt;<pos:position pos:line="15" pos:column="17"/></operator><name pos:line="15" pos:column="14">flags<pos:position pos:line="15" pos:column="19"/></name></name> <operator pos:line="15" pos:column="20">&amp;<pos:position pos:line="15" pos:column="25"/></operator> <name pos:line="15" pos:column="22">FLAG_PRINTING<pos:position pos:line="15" pos:column="35"/></name></expr>)<pos:position pos:line="15" pos:column="36"/></condition><then pos:line="15" pos:column="36"> <block pos:line="15" pos:column="37">{
        <while pos:line="16" pos:column="9">while <condition pos:line="16" pos:column="15">(<expr><literal type="number" pos:line="16" pos:column="16">1<pos:position pos:line="16" pos:column="17"/></literal></expr>)<pos:position pos:line="16" pos:column="18"/></condition> <block pos:line="16" pos:column="19">{
            <expr_stmt><expr><call><name pos:line="17" pos:column="13">ap_ssi_get_tag_and_value<pos:position pos:line="17" pos:column="37"/></name><argument_list pos:line="17" pos:column="37">(<argument><expr><name pos:line="17" pos:column="38">ctx<pos:position pos:line="17" pos:column="41"/></name></expr></argument>, <argument><expr><operator pos:line="17" pos:column="43">&amp;<pos:position pos:line="17" pos:column="48"/></operator><name pos:line="17" pos:column="44">tag<pos:position pos:line="17" pos:column="47"/></name></expr></argument>, <argument><expr><operator pos:line="17" pos:column="49">&amp;<pos:position pos:line="17" pos:column="54"/></operator><name pos:line="17" pos:column="50">tag_val<pos:position pos:line="17" pos:column="57"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="17" pos:column="59">1<pos:position pos:line="17" pos:column="60"/></literal></expr></argument>)<pos:position pos:line="17" pos:column="61"/></argument_list></call></expr>;<pos:position pos:line="17" pos:column="62"/></expr_stmt>
            <if pos:line="18" pos:column="13">if <condition pos:line="18" pos:column="16">(<expr><name pos:line="18" pos:column="17">tag_val<pos:position pos:line="18" pos:column="24"/></name> <operator pos:line="18" pos:column="25">==<pos:position pos:line="18" pos:column="27"/></operator> <name pos:line="18" pos:column="28">NULL<pos:position pos:line="18" pos:column="32"/></name></expr>)<pos:position pos:line="18" pos:column="33"/></condition><then pos:line="18" pos:column="33"> <block pos:line="18" pos:column="34">{
                <if pos:line="19" pos:column="17">if <condition pos:line="19" pos:column="20">(<expr><name pos:line="19" pos:column="21">tag<pos:position pos:line="19" pos:column="24"/></name> <operator pos:line="19" pos:column="25">!=<pos:position pos:line="19" pos:column="27"/></operator> <name pos:line="19" pos:column="28">NULL<pos:position pos:line="19" pos:column="32"/></name></expr>)<pos:position pos:line="19" pos:column="33"/></condition><then pos:line="19" pos:column="33"> <block pos:line="19" pos:column="34">{
                    <return pos:line="20" pos:column="21">return <expr><literal type="number" pos:line="20" pos:column="28">1<pos:position pos:line="20" pos:column="29"/></literal></expr>;<pos:position pos:line="20" pos:column="30"/></return>
                }<pos:position pos:line="21" pos:column="18"/></block></then>
                <else pos:line="22" pos:column="17">else <block pos:line="22" pos:column="22">{
                    <return pos:line="23" pos:column="21">return <expr><literal type="number" pos:line="23" pos:column="28">0<pos:position pos:line="23" pos:column="29"/></literal></expr>;<pos:position pos:line="23" pos:column="30"/></return>
                }<pos:position pos:line="24" pos:column="18"/></block></else></if>
            }<pos:position pos:line="25" pos:column="14"/></block></then></if>
            <if pos:line="26" pos:column="13">if <condition pos:line="26" pos:column="16">(<expr><operator pos:line="26" pos:column="17">!<pos:position pos:line="26" pos:column="18"/></operator><call><name pos:line="26" pos:column="18">strcmp<pos:position pos:line="26" pos:column="24"/></name><argument_list pos:line="26" pos:column="24">(<argument><expr><name pos:line="26" pos:column="25">tag<pos:position pos:line="26" pos:column="28"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="26" pos:column="30">"var"<pos:position pos:line="26" pos:column="35"/></literal></expr></argument>)<pos:position pos:line="26" pos:column="36"/></argument_list></call></expr>)<pos:position pos:line="26" pos:column="37"/></condition><then pos:line="26" pos:column="37"> <block pos:line="26" pos:column="38">{
                <decl_stmt><decl><type><name pos:line="27" pos:column="17">conn_rec<pos:position pos:line="27" pos:column="25"/></name> <modifier pos:line="27" pos:column="26">*<pos:position pos:line="27" pos:column="27"/></modifier></type><name pos:line="27" pos:column="27">c<pos:position pos:line="27" pos:column="28"/></name> <init pos:line="27" pos:column="29">= <expr><name><name pos:line="27" pos:column="31">r<pos:position pos:line="27" pos:column="32"/></name><operator pos:line="27" pos:column="32">-&gt;<pos:position pos:line="27" pos:column="37"/></operator><name pos:line="27" pos:column="34">connection<pos:position pos:line="27" pos:column="44"/></name></name></expr></init></decl>;<pos:position pos:line="27" pos:column="45"/></decl_stmt>
                <decl_stmt><decl><type><specifier pos:line="28" pos:column="17">const<pos:position pos:line="28" pos:column="22"/></specifier> <name pos:line="28" pos:column="23">char<pos:position pos:line="28" pos:column="27"/></name> <modifier pos:line="28" pos:column="28">*<pos:position pos:line="28" pos:column="29"/></modifier></type><name pos:line="28" pos:column="29">val<pos:position pos:line="28" pos:column="32"/></name> <init pos:line="28" pos:column="33">=
                    <expr><call><name pos:line="29" pos:column="21">get_include_var<pos:position pos:line="29" pos:column="36"/></name><argument_list pos:line="29" pos:column="36">(<argument><expr><name pos:line="29" pos:column="37">r<pos:position pos:line="29" pos:column="38"/></name></expr></argument>, <argument><expr><name pos:line="29" pos:column="40">ctx<pos:position pos:line="29" pos:column="43"/></name></expr></argument>,
                                    <argument><expr><call><name pos:line="30" pos:column="37">ap_ssi_parse_string<pos:position pos:line="30" pos:column="56"/></name><argument_list pos:line="30" pos:column="56">(<argument><expr><name pos:line="30" pos:column="57">r<pos:position pos:line="30" pos:column="58"/></name></expr></argument>, <argument><expr><name pos:line="30" pos:column="60">ctx<pos:position pos:line="30" pos:column="63"/></name></expr></argument>, <argument><expr><name pos:line="30" pos:column="65">tag_val<pos:position pos:line="30" pos:column="72"/></name></expr></argument>, <argument><expr><name pos:line="30" pos:column="74">NULL<pos:position pos:line="30" pos:column="78"/></name></expr></argument>,
                                                        <argument><expr><name pos:line="31" pos:column="57">MAX_STRING_LEN<pos:position pos:line="31" pos:column="71"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="31" pos:column="73">0<pos:position pos:line="31" pos:column="74"/></literal></expr></argument>)<pos:position pos:line="31" pos:column="75"/></argument_list></call></expr></argument>)<pos:position pos:line="31" pos:column="76"/></argument_list></call></expr></init></decl>;<pos:position pos:line="31" pos:column="77"/></decl_stmt>
                <if pos:line="32" pos:column="17">if <condition pos:line="32" pos:column="20">(<expr><name pos:line="32" pos:column="21">val<pos:position pos:line="32" pos:column="24"/></name></expr>)<pos:position pos:line="32" pos:column="25"/></condition><then pos:line="32" pos:column="25"> <block pos:line="32" pos:column="26">{
                    <switch pos:line="33" pos:column="21">switch<condition pos:line="33" pos:column="27">(<expr><name pos:line="33" pos:column="28">encode<pos:position pos:line="33" pos:column="34"/></name></expr>)<pos:position pos:line="33" pos:column="35"/></condition> <block pos:line="33" pos:column="36">{
                    <case pos:line="34" pos:column="21">case <expr><name pos:line="34" pos:column="26">E_NONE<pos:position pos:line="34" pos:column="32"/></name></expr>:<pos:position pos:line="34" pos:column="33"/></case>   
                        <expr_stmt><expr><name pos:line="35" pos:column="25">echo_text<pos:position pos:line="35" pos:column="34"/></name> <operator pos:line="35" pos:column="35">=<pos:position pos:line="35" pos:column="36"/></operator> <name pos:line="35" pos:column="37">val<pos:position pos:line="35" pos:column="40"/></name></expr>;<pos:position pos:line="35" pos:column="41"/></expr_stmt>
                        <break pos:line="36" pos:column="25">break;<pos:position pos:line="36" pos:column="31"/></break>
                    <case pos:line="37" pos:column="21">case <expr><name pos:line="37" pos:column="26">E_URL<pos:position pos:line="37" pos:column="31"/></name></expr>:<pos:position pos:line="37" pos:column="32"/></case>
                        <expr_stmt><expr><name pos:line="38" pos:column="25">echo_text<pos:position pos:line="38" pos:column="34"/></name> <operator pos:line="38" pos:column="35">=<pos:position pos:line="38" pos:column="36"/></operator> <call><name pos:line="38" pos:column="37">ap_escape_uri<pos:position pos:line="38" pos:column="50"/></name><argument_list pos:line="38" pos:column="50">(<argument><expr><name><name pos:line="38" pos:column="51">r<pos:position pos:line="38" pos:column="52"/></name><operator pos:line="38" pos:column="52">-&gt;<pos:position pos:line="38" pos:column="57"/></operator><name pos:line="38" pos:column="54">pool<pos:position pos:line="38" pos:column="58"/></name></name></expr></argument>, <argument><expr><name pos:line="38" pos:column="60">val<pos:position pos:line="38" pos:column="63"/></name></expr></argument>)<pos:position pos:line="38" pos:column="64"/></argument_list></call></expr>;<pos:position pos:line="38" pos:column="65"/></expr_stmt>  
                        <break pos:line="39" pos:column="25">break;<pos:position pos:line="39" pos:column="31"/></break>
                    <case pos:line="40" pos:column="21">case <expr><name pos:line="40" pos:column="26">E_ENTITY<pos:position pos:line="40" pos:column="34"/></name></expr>:<pos:position pos:line="40" pos:column="35"/></case> 
                        <expr_stmt><expr><name pos:line="41" pos:column="25">echo_text<pos:position pos:line="41" pos:column="34"/></name> <operator pos:line="41" pos:column="35">=<pos:position pos:line="41" pos:column="36"/></operator> <call><name pos:line="41" pos:column="37">ap_escape_html<pos:position pos:line="41" pos:column="51"/></name><argument_list pos:line="41" pos:column="51">(<argument><expr><name><name pos:line="41" pos:column="52">r<pos:position pos:line="41" pos:column="53"/></name><operator pos:line="41" pos:column="53">-&gt;<pos:position pos:line="41" pos:column="58"/></operator><name pos:line="41" pos:column="55">pool<pos:position pos:line="41" pos:column="59"/></name></name></expr></argument>, <argument><expr><name pos:line="41" pos:column="61">val<pos:position pos:line="41" pos:column="64"/></name></expr></argument>)<pos:position pos:line="41" pos:column="65"/></argument_list></call></expr>;<pos:position pos:line="41" pos:column="66"/></expr_stmt> 
                        <break pos:line="42" pos:column="25">break;<pos:position pos:line="42" pos:column="31"/></break>
                    }<pos:position pos:line="43" pos:column="22"/></block></switch>

                    <expr_stmt><expr><name pos:line="45" pos:column="21">e_len<pos:position pos:line="45" pos:column="26"/></name> <operator pos:line="45" pos:column="27">=<pos:position pos:line="45" pos:column="28"/></operator> <call><name pos:line="45" pos:column="29">strlen<pos:position pos:line="45" pos:column="35"/></name><argument_list pos:line="45" pos:column="35">(<argument><expr><name pos:line="45" pos:column="36">echo_text<pos:position pos:line="45" pos:column="45"/></name></expr></argument>)<pos:position pos:line="45" pos:column="46"/></argument_list></call></expr>;<pos:position pos:line="45" pos:column="47"/></expr_stmt>
                    <expr_stmt><expr><name pos:line="46" pos:column="21">tmp_buck<pos:position pos:line="46" pos:column="29"/></name> <operator pos:line="46" pos:column="30">=<pos:position pos:line="46" pos:column="31"/></operator> <call><name pos:line="46" pos:column="32">apr_bucket_pool_create<pos:position pos:line="46" pos:column="54"/></name><argument_list pos:line="46" pos:column="54">(<argument><expr><name pos:line="46" pos:column="55">echo_text<pos:position pos:line="46" pos:column="64"/></name></expr></argument>, <argument><expr><name pos:line="46" pos:column="66">e_len<pos:position pos:line="46" pos:column="71"/></name></expr></argument>,
                                                      <argument><expr><name><name pos:line="47" pos:column="55">r<pos:position pos:line="47" pos:column="56"/></name><operator pos:line="47" pos:column="56">-&gt;<pos:position pos:line="47" pos:column="61"/></operator><name pos:line="47" pos:column="58">pool<pos:position pos:line="47" pos:column="62"/></name></name></expr></argument>, <argument><expr><name><name pos:line="47" pos:column="64">c<pos:position pos:line="47" pos:column="65"/></name><operator pos:line="47" pos:column="65">-&gt;<pos:position pos:line="47" pos:column="70"/></operator><name pos:line="47" pos:column="67">bucket_alloc<pos:position pos:line="47" pos:column="79"/></name></name></expr></argument>)<pos:position pos:line="47" pos:column="80"/></argument_list></call></expr>;<pos:position pos:line="47" pos:column="81"/></expr_stmt>
                }<pos:position pos:line="48" pos:column="18"/></block></then>
                <else pos:line="49" pos:column="17">else <block pos:line="49" pos:column="22">{
                    <decl_stmt><decl><type><name pos:line="50" pos:column="21">include_server_config<pos:position pos:line="50" pos:column="42"/></name> <modifier pos:line="50" pos:column="43">*<pos:position pos:line="50" pos:column="44"/></modifier></type><name pos:line="50" pos:column="44">sconf<pos:position pos:line="50" pos:column="49"/></name><init pos:line="50" pos:column="49">= 
                        <expr><call><name pos:line="51" pos:column="25">ap_get_module_config<pos:position pos:line="51" pos:column="45"/></name><argument_list pos:line="51" pos:column="45">(<argument><expr><name><name pos:line="51" pos:column="46">r<pos:position pos:line="51" pos:column="47"/></name><operator pos:line="51" pos:column="47">-&gt;<pos:position pos:line="51" pos:column="52"/></operator><name pos:line="51" pos:column="49">server<pos:position pos:line="51" pos:column="55"/></name><operator pos:line="51" pos:column="55">-&gt;<pos:position pos:line="51" pos:column="60"/></operator><name pos:line="51" pos:column="57">module_config<pos:position pos:line="51" pos:column="70"/></name></name></expr></argument>,
                                             <argument><expr><operator pos:line="52" pos:column="46">&amp;<pos:position pos:line="52" pos:column="51"/></operator><name pos:line="52" pos:column="47">include_module<pos:position pos:line="52" pos:column="61"/></name></expr></argument>)<pos:position pos:line="52" pos:column="62"/></argument_list></call></expr></init></decl>;<pos:position pos:line="52" pos:column="63"/></decl_stmt>
                    <expr_stmt><expr><name pos:line="53" pos:column="21">tmp_buck<pos:position pos:line="53" pos:column="29"/></name> <operator pos:line="53" pos:column="30">=<pos:position pos:line="53" pos:column="31"/></operator> <call><name pos:line="53" pos:column="32">apr_bucket_pool_create<pos:position pos:line="53" pos:column="54"/></name><argument_list pos:line="53" pos:column="54">(<argument><expr><name><name pos:line="53" pos:column="55">sconf<pos:position pos:line="53" pos:column="60"/></name><operator pos:line="53" pos:column="60">-&gt;<pos:position pos:line="53" pos:column="65"/></operator><name pos:line="53" pos:column="62">undefinedEcho<pos:position pos:line="53" pos:column="75"/></name></name></expr></argument>, 
                                                      <argument><expr><name><name pos:line="54" pos:column="55">sconf<pos:position pos:line="54" pos:column="60"/></name><operator pos:line="54" pos:column="60">-&gt;<pos:position pos:line="54" pos:column="65"/></operator><name pos:line="54" pos:column="62">undefinedEchoLen<pos:position pos:line="54" pos:column="78"/></name></name></expr></argument>,
                                                      <argument><expr><name><name pos:line="55" pos:column="55">r<pos:position pos:line="55" pos:column="56"/></name><operator pos:line="55" pos:column="56">-&gt;<pos:position pos:line="55" pos:column="61"/></operator><name pos:line="55" pos:column="58">pool<pos:position pos:line="55" pos:column="62"/></name></name></expr></argument>, <argument><expr><name><name pos:line="55" pos:column="64">c<pos:position pos:line="55" pos:column="65"/></name><operator pos:line="55" pos:column="65">-&gt;<pos:position pos:line="55" pos:column="70"/></operator><name pos:line="55" pos:column="67">bucket_alloc<pos:position pos:line="55" pos:column="79"/></name></name></expr></argument>)<pos:position pos:line="55" pos:column="80"/></argument_list></call></expr>;<pos:position pos:line="55" pos:column="81"/></expr_stmt>
                }<pos:position pos:line="56" pos:column="18"/></block></else></if>
                <expr_stmt><expr><call><name pos:line="57" pos:column="17">APR_BUCKET_INSERT_BEFORE<pos:position pos:line="57" pos:column="41"/></name><argument_list pos:line="57" pos:column="41">(<argument><expr><name pos:line="57" pos:column="42">head_ptr<pos:position pos:line="57" pos:column="50"/></name></expr></argument>, <argument><expr><name pos:line="57" pos:column="52">tmp_buck<pos:position pos:line="57" pos:column="60"/></name></expr></argument>)<pos:position pos:line="57" pos:column="61"/></argument_list></call></expr>;<pos:position pos:line="57" pos:column="62"/></expr_stmt>
                <if pos:line="58" pos:column="17">if <condition pos:line="58" pos:column="20">(<expr><operator pos:line="58" pos:column="21">*<pos:position pos:line="58" pos:column="22"/></operator><name pos:line="58" pos:column="22">inserted_head<pos:position pos:line="58" pos:column="35"/></name> <operator pos:line="58" pos:column="36">==<pos:position pos:line="58" pos:column="38"/></operator> <name pos:line="58" pos:column="39">NULL<pos:position pos:line="58" pos:column="43"/></name></expr>)<pos:position pos:line="58" pos:column="44"/></condition><then pos:line="58" pos:column="44"> <block pos:line="58" pos:column="45">{
                    <expr_stmt><expr><operator pos:line="59" pos:column="21">*<pos:position pos:line="59" pos:column="22"/></operator><name pos:line="59" pos:column="22">inserted_head<pos:position pos:line="59" pos:column="35"/></name> <operator pos:line="59" pos:column="36">=<pos:position pos:line="59" pos:column="37"/></operator> <name pos:line="59" pos:column="38">tmp_buck<pos:position pos:line="59" pos:column="46"/></name></expr>;<pos:position pos:line="59" pos:column="47"/></expr_stmt>
                }<pos:position pos:line="60" pos:column="18"/></block></then></if>
            }<pos:position pos:line="61" pos:column="14"/></block></then>
            <elseif pos:line="62" pos:column="13">else <if pos:line="62" pos:column="18">if <condition pos:line="62" pos:column="21">(<expr><operator pos:line="62" pos:column="22">!<pos:position pos:line="62" pos:column="23"/></operator><call><name pos:line="62" pos:column="23">strcmp<pos:position pos:line="62" pos:column="29"/></name><argument_list pos:line="62" pos:column="29">(<argument><expr><name pos:line="62" pos:column="30">tag<pos:position pos:line="62" pos:column="33"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="62" pos:column="35">"encoding"<pos:position pos:line="62" pos:column="45"/></literal></expr></argument>)<pos:position pos:line="62" pos:column="46"/></argument_list></call></expr>)<pos:position pos:line="62" pos:column="47"/></condition><then pos:line="62" pos:column="47"> <block pos:line="62" pos:column="48">{
                <if pos:line="63" pos:column="17">if <condition pos:line="63" pos:column="20">(<expr><operator pos:line="63" pos:column="21">!<pos:position pos:line="63" pos:column="22"/></operator><call><name pos:line="63" pos:column="22">strcasecmp<pos:position pos:line="63" pos:column="32"/></name><argument_list pos:line="63" pos:column="32">(<argument><expr><name pos:line="63" pos:column="33">tag_val<pos:position pos:line="63" pos:column="40"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="63" pos:column="42">"none"<pos:position pos:line="63" pos:column="48"/></literal></expr></argument>)<pos:position pos:line="63" pos:column="49"/></argument_list></call></expr>)<pos:position pos:line="63" pos:column="50"/></condition><then pos:line="63" pos:column="50"> <block type="pseudo"><expr_stmt><expr><name pos:line="63" pos:column="51">encode<pos:position pos:line="63" pos:column="57"/></name> <operator pos:line="63" pos:column="58">=<pos:position pos:line="63" pos:column="59"/></operator> <name pos:line="63" pos:column="60">E_NONE<pos:position pos:line="63" pos:column="66"/></name></expr>;<pos:position pos:line="63" pos:column="67"/></expr_stmt></block></then>
                <elseif pos:line="64" pos:column="17">else <if pos:line="64" pos:column="22">if <condition pos:line="64" pos:column="25">(<expr><operator pos:line="64" pos:column="26">!<pos:position pos:line="64" pos:column="27"/></operator><call><name pos:line="64" pos:column="27">strcasecmp<pos:position pos:line="64" pos:column="37"/></name><argument_list pos:line="64" pos:column="37">(<argument><expr><name pos:line="64" pos:column="38">tag_val<pos:position pos:line="64" pos:column="45"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="64" pos:column="47">"url"<pos:position pos:line="64" pos:column="52"/></literal></expr></argument>)<pos:position pos:line="64" pos:column="53"/></argument_list></call></expr>)<pos:position pos:line="64" pos:column="54"/></condition><then pos:line="64" pos:column="54"> <block type="pseudo"><expr_stmt><expr><name pos:line="64" pos:column="55">encode<pos:position pos:line="64" pos:column="61"/></name> <operator pos:line="64" pos:column="62">=<pos:position pos:line="64" pos:column="63"/></operator> <name pos:line="64" pos:column="64">E_URL<pos:position pos:line="64" pos:column="69"/></name></expr>;<pos:position pos:line="64" pos:column="70"/></expr_stmt></block></then></if></elseif>
                <elseif pos:line="65" pos:column="17">else <if pos:line="65" pos:column="22">if <condition pos:line="65" pos:column="25">(<expr><operator pos:line="65" pos:column="26">!<pos:position pos:line="65" pos:column="27"/></operator><call><name pos:line="65" pos:column="27">strcasecmp<pos:position pos:line="65" pos:column="37"/></name><argument_list pos:line="65" pos:column="37">(<argument><expr><name pos:line="65" pos:column="38">tag_val<pos:position pos:line="65" pos:column="45"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="65" pos:column="47">"entity"<pos:position pos:line="65" pos:column="55"/></literal></expr></argument>)<pos:position pos:line="65" pos:column="56"/></argument_list></call></expr>)<pos:position pos:line="65" pos:column="57"/></condition><then pos:line="65" pos:column="57"> <block type="pseudo"><expr_stmt><expr><name pos:line="65" pos:column="58">encode<pos:position pos:line="65" pos:column="64"/></name> <operator pos:line="65" pos:column="65">=<pos:position pos:line="65" pos:column="66"/></operator> <name pos:line="65" pos:column="67">E_ENTITY<pos:position pos:line="65" pos:column="75"/></name></expr>;<pos:position pos:line="65" pos:column="76"/></expr_stmt></block></then></if></elseif>
                <else pos:line="66" pos:column="17">else <block pos:line="66" pos:column="22">{
                    <expr_stmt><expr><call><name pos:line="67" pos:column="21">ap_log_rerror<pos:position pos:line="67" pos:column="34"/></name><argument_list pos:line="67" pos:column="34">(<argument><expr><name pos:line="67" pos:column="35">APLOG_MARK<pos:position pos:line="67" pos:column="45"/></name></expr></argument>, <argument><expr><name pos:line="67" pos:column="47">APLOG_ERR<pos:position pos:line="67" pos:column="56"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="67" pos:column="58">0<pos:position pos:line="67" pos:column="59"/></literal></expr></argument>, <argument><expr><name pos:line="67" pos:column="61">r<pos:position pos:line="67" pos:column="62"/></name></expr></argument>,
                           <argument><expr><literal type="string" pos:line="68" pos:column="28">"unknown value \"%s\" to parameter \"encoding\" of "<pos:position pos:line="68" pos:column="80"/></literal>
                           <literal type="string" pos:line="69" pos:column="28">"tag echo in %s"<pos:position pos:line="69" pos:column="44"/></literal></expr></argument>, <argument><expr><name pos:line="69" pos:column="46">tag_val<pos:position pos:line="69" pos:column="53"/></name></expr></argument>, <argument><expr><name><name pos:line="69" pos:column="55">r<pos:position pos:line="69" pos:column="56"/></name><operator pos:line="69" pos:column="56">-&gt;<pos:position pos:line="69" pos:column="61"/></operator><name pos:line="69" pos:column="58">filename<pos:position pos:line="69" pos:column="66"/></name></name></expr></argument>)<pos:position pos:line="69" pos:column="67"/></argument_list></call></expr>;<pos:position pos:line="69" pos:column="68"/></expr_stmt>
                    <expr_stmt><expr><call><name pos:line="70" pos:column="21">CREATE_ERROR_BUCKET<pos:position pos:line="70" pos:column="40"/></name><argument_list pos:line="70" pos:column="40">(<argument><expr><name pos:line="70" pos:column="41">ctx<pos:position pos:line="70" pos:column="44"/></name></expr></argument>, <argument><expr><name pos:line="70" pos:column="46">tmp_buck<pos:position pos:line="70" pos:column="54"/></name></expr></argument>, <argument><expr><name pos:line="70" pos:column="56">head_ptr<pos:position pos:line="70" pos:column="64"/></name></expr></argument>, 
                                        <argument><expr><operator pos:line="71" pos:column="41">*<pos:position pos:line="71" pos:column="42"/></operator><name pos:line="71" pos:column="42">inserted_head<pos:position pos:line="71" pos:column="55"/></name></expr></argument>)<pos:position pos:line="71" pos:column="56"/></argument_list></call></expr>;<pos:position pos:line="71" pos:column="57"/></expr_stmt>
                }<pos:position pos:line="72" pos:column="18"/></block></else></if>
            }<pos:position pos:line="73" pos:column="14"/></block></then></if></elseif>
            <else pos:line="74" pos:column="13">else <block pos:line="74" pos:column="18">{
                <expr_stmt><expr><call><name pos:line="75" pos:column="17">ap_log_rerror<pos:position pos:line="75" pos:column="30"/></name><argument_list pos:line="75" pos:column="30">(<argument><expr><name pos:line="75" pos:column="31">APLOG_MARK<pos:position pos:line="75" pos:column="41"/></name></expr></argument>, <argument><expr><name pos:line="75" pos:column="43">APLOG_ERR<pos:position pos:line="75" pos:column="52"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="75" pos:column="54">0<pos:position pos:line="75" pos:column="55"/></literal></expr></argument>, <argument><expr><name pos:line="75" pos:column="57">r<pos:position pos:line="75" pos:column="58"/></name></expr></argument>,
                            <argument><expr><literal type="string" pos:line="76" pos:column="29">"unknown parameter \"%s\" in tag echo of %s"<pos:position pos:line="76" pos:column="73"/></literal></expr></argument>,
                            <argument><expr><name pos:line="77" pos:column="29">tag<pos:position pos:line="77" pos:column="32"/></name></expr></argument>, <argument><expr><name><name pos:line="77" pos:column="34">r<pos:position pos:line="77" pos:column="35"/></name><operator pos:line="77" pos:column="35">-&gt;<pos:position pos:line="77" pos:column="40"/></operator><name pos:line="77" pos:column="37">filename<pos:position pos:line="77" pos:column="45"/></name></name></expr></argument>)<pos:position pos:line="77" pos:column="46"/></argument_list></call></expr>;<pos:position pos:line="77" pos:column="47"/></expr_stmt>
                <expr_stmt><expr><call><name pos:line="78" pos:column="17">CREATE_ERROR_BUCKET<pos:position pos:line="78" pos:column="36"/></name><argument_list pos:line="78" pos:column="36">(<argument><expr><name pos:line="78" pos:column="37">ctx<pos:position pos:line="78" pos:column="40"/></name></expr></argument>, <argument><expr><name pos:line="78" pos:column="42">tmp_buck<pos:position pos:line="78" pos:column="50"/></name></expr></argument>, <argument><expr><name pos:line="78" pos:column="52">head_ptr<pos:position pos:line="78" pos:column="60"/></name></expr></argument>, <argument><expr><operator pos:line="78" pos:column="62">*<pos:position pos:line="78" pos:column="63"/></operator><name pos:line="78" pos:column="63">inserted_head<pos:position pos:line="78" pos:column="76"/></name></expr></argument>)<pos:position pos:line="78" pos:column="77"/></argument_list></call></expr>;<pos:position pos:line="78" pos:column="78"/></expr_stmt>
            }<pos:position pos:line="79" pos:column="14"/></block></else></if>

        }<pos:position pos:line="81" pos:column="10"/></block></while>
    }<pos:position pos:line="82" pos:column="6"/></block></then></if>
    <return pos:line="83" pos:column="5">return <expr><literal type="number" pos:line="83" pos:column="12">0<pos:position pos:line="83" pos:column="13"/></literal></expr>;<pos:position pos:line="83" pos:column="14"/></return>
}<pos:position pos:line="84" pos:column="2"/></block></function></unit>

<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/httpd/gumtree/httpd_repos_function_1471_httpd-2.2.2.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">char<pos:position pos:line="1" pos:column="12"/></name> <modifier pos:line="1" pos:column="13">*<pos:position pos:line="1" pos:column="14"/></modifier></type><name pos:line="1" pos:column="14">ftp_escape_globbingchars<pos:position pos:line="1" pos:column="38"/></name><parameter_list pos:line="1" pos:column="38">(<parameter><decl><type><name pos:line="1" pos:column="39">apr_pool_t<pos:position pos:line="1" pos:column="49"/></name> <modifier pos:line="1" pos:column="50">*<pos:position pos:line="1" pos:column="51"/></modifier></type><name pos:line="1" pos:column="51">p<pos:position pos:line="1" pos:column="52"/></name></decl></parameter>, <parameter><decl><type><specifier pos:line="1" pos:column="54">const<pos:position pos:line="1" pos:column="59"/></specifier> <name pos:line="1" pos:column="60">char<pos:position pos:line="1" pos:column="64"/></name> <modifier pos:line="1" pos:column="65">*<pos:position pos:line="1" pos:column="66"/></modifier></type><name pos:line="1" pos:column="66">path<pos:position pos:line="1" pos:column="70"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="71"/></parameter_list>
<block pos:line="2" pos:column="1">{
    <decl_stmt><decl><type><name pos:line="3" pos:column="5">char<pos:position pos:line="3" pos:column="9"/></name> <modifier pos:line="3" pos:column="10">*<pos:position pos:line="3" pos:column="11"/></modifier></type><name pos:line="3" pos:column="11">ret<pos:position pos:line="3" pos:column="14"/></name> <init pos:line="3" pos:column="15">= <expr><call><name pos:line="3" pos:column="17">apr_palloc<pos:position pos:line="3" pos:column="27"/></name><argument_list pos:line="3" pos:column="27">(<argument><expr><name pos:line="3" pos:column="28">p<pos:position pos:line="3" pos:column="29"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="3" pos:column="31">2<pos:position pos:line="3" pos:column="32"/></literal><operator pos:line="3" pos:column="32">*<pos:position pos:line="3" pos:column="33"/></operator><call><name pos:line="3" pos:column="33">strlen<pos:position pos:line="3" pos:column="39"/></name><argument_list pos:line="3" pos:column="39">(<argument><expr><name pos:line="3" pos:column="40">path<pos:position pos:line="3" pos:column="44"/></name></expr></argument>)<pos:position pos:line="3" pos:column="45"/></argument_list></call><operator pos:line="3" pos:column="45">+<pos:position pos:line="3" pos:column="46"/></operator><sizeof pos:line="3" pos:column="46">sizeof<argument_list pos:line="3" pos:column="52">(<argument><expr><literal type="string" pos:line="3" pos:column="53">""<pos:position pos:line="3" pos:column="55"/></literal></expr></argument>)<pos:position pos:line="3" pos:column="56"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="3" pos:column="57"/></argument_list></call></expr></init></decl>;<pos:position pos:line="3" pos:column="58"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="4" pos:column="5">char<pos:position pos:line="4" pos:column="9"/></name> <modifier pos:line="4" pos:column="10">*<pos:position pos:line="4" pos:column="11"/></modifier></type><name pos:line="4" pos:column="11">d<pos:position pos:line="4" pos:column="12"/></name></decl>;<pos:position pos:line="4" pos:column="13"/></decl_stmt>
    <for pos:line="5" pos:column="5">for <control pos:line="5" pos:column="9">(<init><expr><name pos:line="5" pos:column="10">d<pos:position pos:line="5" pos:column="11"/></name> <operator pos:line="5" pos:column="12">=<pos:position pos:line="5" pos:column="13"/></operator> <name pos:line="5" pos:column="14">ret<pos:position pos:line="5" pos:column="17"/></name></expr>;<pos:position pos:line="5" pos:column="18"/></init> <condition><expr><operator pos:line="5" pos:column="19">*<pos:position pos:line="5" pos:column="20"/></operator><name pos:line="5" pos:column="20">path<pos:position pos:line="5" pos:column="24"/></name></expr>;<pos:position pos:line="5" pos:column="25"/></condition> <incr><expr><operator pos:line="5" pos:column="26">++<pos:position pos:line="5" pos:column="28"/></operator><name pos:line="5" pos:column="28">path<pos:position pos:line="5" pos:column="32"/></name></expr></incr>)<pos:position pos:line="5" pos:column="33"/></control> <block pos:line="5" pos:column="34">{
        <if pos:line="6" pos:column="9">if <condition pos:line="6" pos:column="12">(<expr><call><name pos:line="6" pos:column="13">strchr<pos:position pos:line="6" pos:column="19"/></name><argument_list pos:line="6" pos:column="19">(<argument><expr><name pos:line="6" pos:column="20">FTP_GLOBBING_CHARS<pos:position pos:line="6" pos:column="38"/></name></expr></argument>, <argument><expr><operator pos:line="6" pos:column="40">*<pos:position pos:line="6" pos:column="41"/></operator><name pos:line="6" pos:column="41">path<pos:position pos:line="6" pos:column="45"/></name></expr></argument>)<pos:position pos:line="6" pos:column="46"/></argument_list></call> <operator pos:line="6" pos:column="47">!=<pos:position pos:line="6" pos:column="49"/></operator> <name pos:line="6" pos:column="50">NULL<pos:position pos:line="6" pos:column="54"/></name></expr>)<pos:position pos:line="6" pos:column="55"/></condition><then pos:line="6" pos:column="55">
            <block type="pseudo"><expr_stmt><expr><operator pos:line="7" pos:column="13">*<pos:position pos:line="7" pos:column="14"/></operator><name pos:line="7" pos:column="14">d<pos:position pos:line="7" pos:column="15"/></name><operator pos:line="7" pos:column="15">++<pos:position pos:line="7" pos:column="17"/></operator> <operator pos:line="7" pos:column="18">=<pos:position pos:line="7" pos:column="19"/></operator> <literal type="char" pos:line="7" pos:column="20">'\\'<pos:position pos:line="7" pos:column="24"/></literal></expr>;<pos:position pos:line="7" pos:column="25"/></expr_stmt></block></then></if>
        <expr_stmt><expr><operator pos:line="8" pos:column="9">*<pos:position pos:line="8" pos:column="10"/></operator><name pos:line="8" pos:column="10">d<pos:position pos:line="8" pos:column="11"/></name><operator pos:line="8" pos:column="11">++<pos:position pos:line="8" pos:column="13"/></operator> <operator pos:line="8" pos:column="14">=<pos:position pos:line="8" pos:column="15"/></operator> <operator pos:line="8" pos:column="16">*<pos:position pos:line="8" pos:column="17"/></operator><name pos:line="8" pos:column="17">path<pos:position pos:line="8" pos:column="21"/></name></expr>;<pos:position pos:line="8" pos:column="22"/></expr_stmt>
    }<pos:position pos:line="9" pos:column="6"/></block></for>
    <expr_stmt><expr><operator pos:line="10" pos:column="5">*<pos:position pos:line="10" pos:column="6"/></operator><name pos:line="10" pos:column="6">d<pos:position pos:line="10" pos:column="7"/></name> <operator pos:line="10" pos:column="8">=<pos:position pos:line="10" pos:column="9"/></operator> <literal type="char" pos:line="10" pos:column="10">'\0'<pos:position pos:line="10" pos:column="14"/></literal></expr>;<pos:position pos:line="10" pos:column="15"/></expr_stmt>
    <return pos:line="11" pos:column="5">return <expr><name pos:line="11" pos:column="12">ret<pos:position pos:line="11" pos:column="15"/></name></expr>;<pos:position pos:line="11" pos:column="16"/></return>
}<pos:position pos:line="12" pos:column="2"/></block></function></unit>

<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/httpd/gumtree/httpd_repos_function_81_httpd-2.4.20.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">void<pos:position pos:line="1" pos:column="12"/></name></type> <name pos:line="1" pos:column="13">ssl_state_cb<pos:position pos:line="1" pos:column="25"/></name><parameter_list pos:line="1" pos:column="25">(<parameter><decl><type><specifier pos:line="1" pos:column="26">const<pos:position pos:line="1" pos:column="31"/></specifier> <name pos:line="1" pos:column="32">SSL<pos:position pos:line="1" pos:column="35"/></name> <modifier pos:line="1" pos:column="36">*<pos:position pos:line="1" pos:column="37"/></modifier></type><name pos:line="1" pos:column="37">s<pos:position pos:line="1" pos:column="38"/></name></decl></parameter>, <parameter><decl><type><name pos:line="1" pos:column="40">int<pos:position pos:line="1" pos:column="43"/></name></type> <name pos:line="1" pos:column="44">w<pos:position pos:line="1" pos:column="45"/></name></decl></parameter>, <parameter><decl><type><name pos:line="1" pos:column="47">int<pos:position pos:line="1" pos:column="50"/></name></type> <name pos:line="1" pos:column="51">r<pos:position pos:line="1" pos:column="52"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="53"/></parameter_list>
<block pos:line="2" pos:column="1">{
    <if pos:line="3" pos:column="5">if <condition pos:line="3" pos:column="8">(<expr><name pos:line="3" pos:column="9">w<pos:position pos:line="3" pos:column="10"/></name> <operator pos:line="3" pos:column="11">&amp;<pos:position pos:line="3" pos:column="16"/></operator> <name pos:line="3" pos:column="13">SSL_CB_ALERT<pos:position pos:line="3" pos:column="25"/></name></expr>)<pos:position pos:line="3" pos:column="26"/></condition><then pos:line="3" pos:column="26"> <block pos:line="3" pos:column="27">{
        <expr_stmt><expr><call><name pos:line="4" pos:column="9">BIO_printf<pos:position pos:line="4" pos:column="19"/></name><argument_list pos:line="4" pos:column="19">(<argument><expr><name pos:line="4" pos:column="20">bio_err<pos:position pos:line="4" pos:column="27"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="4" pos:column="29">"SSL/TLS Alert [%s] %s:%s\n"<pos:position pos:line="4" pos:column="57"/></literal></expr></argument>,
                   <argument><expr><operator pos:line="5" pos:column="20">(<pos:position pos:line="5" pos:column="21"/></operator><ternary><condition><expr><name pos:line="5" pos:column="21">w<pos:position pos:line="5" pos:column="22"/></name> <operator pos:line="5" pos:column="23">&amp;<pos:position pos:line="5" pos:column="28"/></operator> <name pos:line="5" pos:column="25">SSL_CB_READ<pos:position pos:line="5" pos:column="36"/></name></expr> ?<pos:position pos:line="5" pos:column="38"/></condition><then pos:line="5" pos:column="38"> <expr><literal type="string" pos:line="5" pos:column="39">"read"<pos:position pos:line="5" pos:column="45"/></literal></expr> <pos:position pos:line="5" pos:column="46"/></then><else pos:line="5" pos:column="46">: <expr><literal type="string" pos:line="5" pos:column="48">"write"<pos:position pos:line="5" pos:column="55"/></literal></expr></else></ternary><operator pos:line="5" pos:column="55">)<pos:position pos:line="5" pos:column="56"/></operator></expr></argument>,
                   <argument><expr><call><name pos:line="6" pos:column="20">SSL_alert_type_string_long<pos:position pos:line="6" pos:column="46"/></name><argument_list pos:line="6" pos:column="46">(<argument><expr><name pos:line="6" pos:column="47">r<pos:position pos:line="6" pos:column="48"/></name></expr></argument>)<pos:position pos:line="6" pos:column="49"/></argument_list></call></expr></argument>,
                   <argument><expr><call><name pos:line="7" pos:column="20">SSL_alert_desc_string_long<pos:position pos:line="7" pos:column="46"/></name><argument_list pos:line="7" pos:column="46">(<argument><expr><name pos:line="7" pos:column="47">r<pos:position pos:line="7" pos:column="48"/></name></expr></argument>)<pos:position pos:line="7" pos:column="49"/></argument_list></call></expr></argument>)<pos:position pos:line="7" pos:column="50"/></argument_list></call></expr>;<pos:position pos:line="7" pos:column="51"/></expr_stmt>
    }<pos:position pos:line="8" pos:column="6"/></block></then> <elseif pos:line="8" pos:column="7">else <if pos:line="8" pos:column="12">if <condition pos:line="8" pos:column="15">(<expr><name pos:line="8" pos:column="16">w<pos:position pos:line="8" pos:column="17"/></name> <operator pos:line="8" pos:column="18">&amp;<pos:position pos:line="8" pos:column="23"/></operator> <name pos:line="8" pos:column="20">SSL_CB_LOOP<pos:position pos:line="8" pos:column="31"/></name></expr>)<pos:position pos:line="8" pos:column="32"/></condition><then pos:line="8" pos:column="32"> <block pos:line="8" pos:column="33">{
        <expr_stmt><expr><call><name pos:line="9" pos:column="9">BIO_printf<pos:position pos:line="9" pos:column="19"/></name><argument_list pos:line="9" pos:column="19">(<argument><expr><name pos:line="9" pos:column="20">bio_err<pos:position pos:line="9" pos:column="27"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="9" pos:column="29">"SSL/TLS State [%s] %s\n"<pos:position pos:line="9" pos:column="54"/></literal></expr></argument>,
                   <argument><expr><operator pos:line="10" pos:column="20">(<pos:position pos:line="10" pos:column="21"/></operator><ternary><condition><expr><call><name pos:line="10" pos:column="21">SSL_in_connect_init<pos:position pos:line="10" pos:column="40"/></name><argument_list pos:line="10" pos:column="40">(<argument><expr><operator pos:line="10" pos:column="41">(<pos:position pos:line="10" pos:column="42"/></operator><name pos:line="10" pos:column="42">SSL<pos:position pos:line="10" pos:column="45"/></name><operator pos:line="10" pos:column="45">*<pos:position pos:line="10" pos:column="46"/></operator><operator pos:line="10" pos:column="46">)<pos:position pos:line="10" pos:column="47"/></operator><name pos:line="10" pos:column="47">s<pos:position pos:line="10" pos:column="48"/></name></expr></argument>)<pos:position pos:line="10" pos:column="49"/></argument_list></call></expr> ?<pos:position pos:line="10" pos:column="51"/></condition><then pos:line="10" pos:column="51"> <expr><literal type="string" pos:line="10" pos:column="52">"connect"<pos:position pos:line="10" pos:column="61"/></literal></expr> <pos:position pos:line="10" pos:column="62"/></then><else pos:line="10" pos:column="62">: <expr><literal type="string" pos:line="10" pos:column="64">"-"<pos:position pos:line="10" pos:column="67"/></literal></expr></else></ternary><operator pos:line="10" pos:column="67">)<pos:position pos:line="10" pos:column="68"/></operator></expr></argument>,
                   <argument><expr><call><name pos:line="11" pos:column="20">SSL_state_string_long<pos:position pos:line="11" pos:column="41"/></name><argument_list pos:line="11" pos:column="41">(<argument><expr><name pos:line="11" pos:column="42">s<pos:position pos:line="11" pos:column="43"/></name></expr></argument>)<pos:position pos:line="11" pos:column="44"/></argument_list></call></expr></argument>)<pos:position pos:line="11" pos:column="45"/></argument_list></call></expr>;<pos:position pos:line="11" pos:column="46"/></expr_stmt>
    }<pos:position pos:line="12" pos:column="6"/></block></then></if></elseif> <elseif pos:line="12" pos:column="7">else <if pos:line="12" pos:column="12">if <condition pos:line="12" pos:column="15">(<expr><name pos:line="12" pos:column="16">w<pos:position pos:line="12" pos:column="17"/></name> <operator pos:line="12" pos:column="18">&amp;<pos:position pos:line="12" pos:column="23"/></operator> <operator pos:line="12" pos:column="20">(<pos:position pos:line="12" pos:column="21"/></operator><name pos:line="12" pos:column="21">SSL_CB_HANDSHAKE_START<pos:position pos:line="12" pos:column="43"/></name><operator pos:line="12" pos:column="43">|<pos:position pos:line="12" pos:column="44"/></operator><name pos:line="12" pos:column="44">SSL_CB_HANDSHAKE_DONE<pos:position pos:line="12" pos:column="65"/></name><operator pos:line="12" pos:column="65">)<pos:position pos:line="12" pos:column="66"/></operator></expr>)<pos:position pos:line="12" pos:column="67"/></condition><then pos:line="12" pos:column="67"> <block pos:line="12" pos:column="68">{
        <expr_stmt><expr><call><name pos:line="13" pos:column="9">BIO_printf<pos:position pos:line="13" pos:column="19"/></name><argument_list pos:line="13" pos:column="19">(<argument><expr><name pos:line="13" pos:column="20">bio_err<pos:position pos:line="13" pos:column="27"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="13" pos:column="29">"SSL/TLS Handshake [%s] %s\n"<pos:position pos:line="13" pos:column="58"/></literal></expr></argument>,
                   <argument><expr><operator pos:line="14" pos:column="20">(<pos:position pos:line="14" pos:column="21"/></operator><ternary><condition><expr><name pos:line="14" pos:column="21">w<pos:position pos:line="14" pos:column="22"/></name> <operator pos:line="14" pos:column="23">&amp;<pos:position pos:line="14" pos:column="28"/></operator> <name pos:line="14" pos:column="25">SSL_CB_HANDSHAKE_START<pos:position pos:line="14" pos:column="47"/></name></expr> ?<pos:position pos:line="14" pos:column="49"/></condition><then pos:line="14" pos:column="49"> <expr><literal type="string" pos:line="14" pos:column="50">"Start"<pos:position pos:line="14" pos:column="57"/></literal></expr> <pos:position pos:line="14" pos:column="58"/></then><else pos:line="14" pos:column="58">: <expr><literal type="string" pos:line="14" pos:column="60">"Done"<pos:position pos:line="14" pos:column="66"/></literal></expr></else></ternary><operator pos:line="14" pos:column="66">)<pos:position pos:line="14" pos:column="67"/></operator></expr></argument>,
                   <argument><expr><call><name pos:line="15" pos:column="20">SSL_state_string_long<pos:position pos:line="15" pos:column="41"/></name><argument_list pos:line="15" pos:column="41">(<argument><expr><name pos:line="15" pos:column="42">s<pos:position pos:line="15" pos:column="43"/></name></expr></argument>)<pos:position pos:line="15" pos:column="44"/></argument_list></call></expr></argument>)<pos:position pos:line="15" pos:column="45"/></argument_list></call></expr>;<pos:position pos:line="15" pos:column="46"/></expr_stmt>
    }<pos:position pos:line="16" pos:column="6"/></block></then></if></elseif></if>
}<pos:position pos:line="17" pos:column="2"/></block></function></unit>

<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/httpd/gumtree/httpd_repos_function_808_httpd-2.2.22.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">void<pos:position pos:line="1" pos:column="12"/></name></type> <name pos:line="1" pos:column="13">ssl_configure_env<pos:position pos:line="1" pos:column="30"/></name><parameter_list pos:line="1" pos:column="30">(<parameter><decl><type><name pos:line="1" pos:column="31">request_rec<pos:position pos:line="1" pos:column="42"/></name> <modifier pos:line="1" pos:column="43">*<pos:position pos:line="1" pos:column="44"/></modifier></type><name pos:line="1" pos:column="44">r<pos:position pos:line="1" pos:column="45"/></name></decl></parameter>, <parameter><decl><type><name pos:line="1" pos:column="47">SSLConnRec<pos:position pos:line="1" pos:column="57"/></name> <modifier pos:line="1" pos:column="58">*<pos:position pos:line="1" pos:column="59"/></modifier></type><name pos:line="1" pos:column="59">sslconn<pos:position pos:line="1" pos:column="66"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="67"/></parameter_list>
<block pos:line="2" pos:column="1">{
    <decl_stmt><decl><type><name pos:line="3" pos:column="5">int<pos:position pos:line="3" pos:column="8"/></name></type> <name pos:line="3" pos:column="9">i<pos:position pos:line="3" pos:column="10"/></name></decl>;<pos:position pos:line="3" pos:column="11"/></decl_stmt>
    <decl_stmt><decl><type><specifier pos:line="4" pos:column="5">const<pos:position pos:line="4" pos:column="10"/></specifier> <name pos:line="4" pos:column="11">apr_array_header_t<pos:position pos:line="4" pos:column="29"/></name> <modifier pos:line="4" pos:column="30">*<pos:position pos:line="4" pos:column="31"/></modifier></type><name pos:line="4" pos:column="31">arr<pos:position pos:line="4" pos:column="34"/></name> <init pos:line="4" pos:column="35">= <expr><call><name pos:line="4" pos:column="37">apr_table_elts<pos:position pos:line="4" pos:column="51"/></name><argument_list pos:line="4" pos:column="51">(<argument><expr><name><name pos:line="4" pos:column="52">r<pos:position pos:line="4" pos:column="53"/></name><operator pos:line="4" pos:column="53">-&gt;<pos:position pos:line="4" pos:column="58"/></operator><name pos:line="4" pos:column="55">subprocess_env<pos:position pos:line="4" pos:column="69"/></name></name></expr></argument>)<pos:position pos:line="4" pos:column="70"/></argument_list></call></expr></init></decl>;<pos:position pos:line="4" pos:column="71"/></decl_stmt>
    <decl_stmt><decl><type><specifier pos:line="5" pos:column="5">const<pos:position pos:line="5" pos:column="10"/></specifier> <name pos:line="5" pos:column="11">apr_table_entry_t<pos:position pos:line="5" pos:column="28"/></name> <modifier pos:line="5" pos:column="29">*<pos:position pos:line="5" pos:column="30"/></modifier></type><name pos:line="5" pos:column="30">elts<pos:position pos:line="5" pos:column="34"/></name> <init pos:line="5" pos:column="35">= <expr><operator pos:line="5" pos:column="37">(<pos:position pos:line="5" pos:column="38"/></operator><specifier pos:line="5" pos:column="38">const<pos:position pos:line="5" pos:column="43"/></specifier> <name pos:line="5" pos:column="44">apr_table_entry_t<pos:position pos:line="5" pos:column="61"/></name> <operator pos:line="5" pos:column="62">*<pos:position pos:line="5" pos:column="63"/></operator><operator pos:line="5" pos:column="63">)<pos:position pos:line="5" pos:column="64"/></operator><name><name pos:line="5" pos:column="64">arr<pos:position pos:line="5" pos:column="67"/></name><operator pos:line="5" pos:column="67">-&gt;<pos:position pos:line="5" pos:column="72"/></operator><name pos:line="5" pos:column="69">elts<pos:position pos:line="5" pos:column="73"/></name></name></expr></init></decl>;<pos:position pos:line="5" pos:column="74"/></decl_stmt>

    <expr_stmt><expr><name><name pos:line="7" pos:column="5">sslconn<pos:position pos:line="7" pos:column="12"/></name><operator pos:line="7" pos:column="12">-&gt;<pos:position pos:line="7" pos:column="17"/></operator><name pos:line="7" pos:column="14">shutdown_type<pos:position pos:line="7" pos:column="27"/></name></name> <operator pos:line="7" pos:column="28">=<pos:position pos:line="7" pos:column="29"/></operator> <name pos:line="7" pos:column="30">SSL_SHUTDOWN_TYPE_STANDARD<pos:position pos:line="7" pos:column="56"/></name></expr>;<pos:position pos:line="7" pos:column="57"/></expr_stmt>

    <for pos:line="9" pos:column="5">for <control pos:line="9" pos:column="9">(<init><expr><name pos:line="9" pos:column="10">i<pos:position pos:line="9" pos:column="11"/></name> <operator pos:line="9" pos:column="12">=<pos:position pos:line="9" pos:column="13"/></operator> <literal type="number" pos:line="9" pos:column="14">0<pos:position pos:line="9" pos:column="15"/></literal></expr>;<pos:position pos:line="9" pos:column="16"/></init> <condition><expr><name pos:line="9" pos:column="17">i<pos:position pos:line="9" pos:column="18"/></name> <operator pos:line="9" pos:column="19">&lt;<pos:position pos:line="9" pos:column="23"/></operator> <name><name pos:line="9" pos:column="21">arr<pos:position pos:line="9" pos:column="24"/></name><operator pos:line="9" pos:column="24">-&gt;<pos:position pos:line="9" pos:column="29"/></operator><name pos:line="9" pos:column="26">nelts<pos:position pos:line="9" pos:column="31"/></name></name></expr>;<pos:position pos:line="9" pos:column="32"/></condition> <incr><expr><name pos:line="9" pos:column="33">i<pos:position pos:line="9" pos:column="34"/></name><operator pos:line="9" pos:column="34">++<pos:position pos:line="9" pos:column="36"/></operator></expr></incr>)<pos:position pos:line="9" pos:column="37"/></control> <block pos:line="9" pos:column="38">{
        <decl_stmt><decl><type><specifier pos:line="10" pos:column="9">const<pos:position pos:line="10" pos:column="14"/></specifier> <name pos:line="10" pos:column="15">char<pos:position pos:line="10" pos:column="19"/></name> <modifier pos:line="10" pos:column="20">*<pos:position pos:line="10" pos:column="21"/></modifier></type><name pos:line="10" pos:column="21">key<pos:position pos:line="10" pos:column="24"/></name> <init pos:line="10" pos:column="25">= <expr><name><name pos:line="10" pos:column="27">elts<pos:position pos:line="10" pos:column="31"/></name><index pos:line="10" pos:column="31">[<expr><name pos:line="10" pos:column="32">i<pos:position pos:line="10" pos:column="33"/></name></expr>]<pos:position pos:line="10" pos:column="34"/></index></name><operator pos:line="10" pos:column="34">.<pos:position pos:line="10" pos:column="35"/></operator><name pos:line="10" pos:column="35">key<pos:position pos:line="10" pos:column="38"/></name></expr></init></decl>;<pos:position pos:line="10" pos:column="39"/></decl_stmt>

        <switch pos:line="12" pos:column="9">switch <condition pos:line="12" pos:column="16">(<expr><operator pos:line="12" pos:column="17">*<pos:position pos:line="12" pos:column="18"/></operator><name pos:line="12" pos:column="18">key<pos:position pos:line="12" pos:column="21"/></name></expr>)<pos:position pos:line="12" pos:column="22"/></condition> <block pos:line="12" pos:column="23">{
          <case pos:line="13" pos:column="11">case <expr><literal type="char" pos:line="13" pos:column="16">'s'<pos:position pos:line="13" pos:column="19"/></literal></expr>:<pos:position pos:line="13" pos:column="20"/></case>
            <comment type="block" pos:line="14" pos:column="13">/* being case-sensitive here.
             * and not checking for the -shutdown since these are the only
             * SetEnvIf "flags" we support
             */</comment>
            <if pos:line="18" pos:column="13">if <condition pos:line="18" pos:column="16">(<expr><operator pos:line="18" pos:column="17">!<pos:position pos:line="18" pos:column="18"/></operator><call><name pos:line="18" pos:column="18">strncmp<pos:position pos:line="18" pos:column="25"/></name><argument_list pos:line="18" pos:column="25">(<argument><expr><name pos:line="18" pos:column="26">key<pos:position pos:line="18" pos:column="29"/></name><operator pos:line="18" pos:column="29">+<pos:position pos:line="18" pos:column="30"/></operator><literal type="number" pos:line="18" pos:column="30">1<pos:position pos:line="18" pos:column="31"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="18" pos:column="33">"sl-"<pos:position pos:line="18" pos:column="38"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="18" pos:column="40">3<pos:position pos:line="18" pos:column="41"/></literal></expr></argument>)<pos:position pos:line="18" pos:column="42"/></argument_list></call></expr>)<pos:position pos:line="18" pos:column="43"/></condition><then pos:line="18" pos:column="43"> <block pos:line="18" pos:column="44">{
                <expr_stmt><expr><name pos:line="19" pos:column="17">key<pos:position pos:line="19" pos:column="20"/></name> <operator pos:line="19" pos:column="21">+=<pos:position pos:line="19" pos:column="23"/></operator> <literal type="number" pos:line="19" pos:column="24">4<pos:position pos:line="19" pos:column="25"/></literal></expr>;<pos:position pos:line="19" pos:column="26"/></expr_stmt>
                <if pos:line="20" pos:column="17">if <condition pos:line="20" pos:column="20">(<expr><operator pos:line="20" pos:column="21">!<pos:position pos:line="20" pos:column="22"/></operator><call><name pos:line="20" pos:column="22">strncmp<pos:position pos:line="20" pos:column="29"/></name><argument_list pos:line="20" pos:column="29">(<argument><expr><name pos:line="20" pos:column="30">key<pos:position pos:line="20" pos:column="33"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="20" pos:column="35">"unclean"<pos:position pos:line="20" pos:column="44"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="20" pos:column="46">7<pos:position pos:line="20" pos:column="47"/></literal></expr></argument>)<pos:position pos:line="20" pos:column="48"/></argument_list></call></expr>)<pos:position pos:line="20" pos:column="49"/></condition><then pos:line="20" pos:column="49"> <block pos:line="20" pos:column="50">{
                    <expr_stmt><expr><name><name pos:line="21" pos:column="21">sslconn<pos:position pos:line="21" pos:column="28"/></name><operator pos:line="21" pos:column="28">-&gt;<pos:position pos:line="21" pos:column="33"/></operator><name pos:line="21" pos:column="30">shutdown_type<pos:position pos:line="21" pos:column="43"/></name></name> <operator pos:line="21" pos:column="44">=<pos:position pos:line="21" pos:column="45"/></operator> <name pos:line="21" pos:column="46">SSL_SHUTDOWN_TYPE_UNCLEAN<pos:position pos:line="21" pos:column="71"/></name></expr>;<pos:position pos:line="21" pos:column="72"/></expr_stmt>
                }<pos:position pos:line="22" pos:column="18"/></block></then>
                <elseif pos:line="23" pos:column="17">else <if pos:line="23" pos:column="22">if <condition pos:line="23" pos:column="25">(<expr><operator pos:line="23" pos:column="26">!<pos:position pos:line="23" pos:column="27"/></operator><call><name pos:line="23" pos:column="27">strncmp<pos:position pos:line="23" pos:column="34"/></name><argument_list pos:line="23" pos:column="34">(<argument><expr><name pos:line="23" pos:column="35">key<pos:position pos:line="23" pos:column="38"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="23" pos:column="40">"accurate"<pos:position pos:line="23" pos:column="50"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="23" pos:column="52">8<pos:position pos:line="23" pos:column="53"/></literal></expr></argument>)<pos:position pos:line="23" pos:column="54"/></argument_list></call></expr>)<pos:position pos:line="23" pos:column="55"/></condition><then pos:line="23" pos:column="55"> <block pos:line="23" pos:column="56">{
                    <expr_stmt><expr><name><name pos:line="24" pos:column="21">sslconn<pos:position pos:line="24" pos:column="28"/></name><operator pos:line="24" pos:column="28">-&gt;<pos:position pos:line="24" pos:column="33"/></operator><name pos:line="24" pos:column="30">shutdown_type<pos:position pos:line="24" pos:column="43"/></name></name> <operator pos:line="24" pos:column="44">=<pos:position pos:line="24" pos:column="45"/></operator> <name pos:line="24" pos:column="46">SSL_SHUTDOWN_TYPE_ACCURATE<pos:position pos:line="24" pos:column="72"/></name></expr>;<pos:position pos:line="24" pos:column="73"/></expr_stmt>
                }<pos:position pos:line="25" pos:column="18"/></block></then></if></elseif></if>
                <return pos:line="26" pos:column="17">return;<pos:position pos:line="26" pos:column="24"/></return> <comment type="block" pos:line="26" pos:column="25">/* should only ever be one ssl-*-shutdown */</comment>
            }<pos:position pos:line="27" pos:column="14"/></block></then></if>
            <break pos:line="28" pos:column="13">break;<pos:position pos:line="28" pos:column="19"/></break>
        }<pos:position pos:line="29" pos:column="10"/></block></switch>
    }<pos:position pos:line="30" pos:column="6"/></block></for>
}<pos:position pos:line="31" pos:column="2"/></block></function></unit>

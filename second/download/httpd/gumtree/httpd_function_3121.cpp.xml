<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/httpd/gumtree/httpd_function_3121.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">int<pos:position pos:line="1" pos:column="11"/></name></type> <name pos:line="1" pos:column="12">check_nc<pos:position pos:line="1" pos:column="20"/></name><parameter_list pos:line="1" pos:column="20">(<parameter><decl><type><specifier pos:line="1" pos:column="21">const<pos:position pos:line="1" pos:column="26"/></specifier> <name pos:line="1" pos:column="27">request_rec<pos:position pos:line="1" pos:column="38"/></name> <modifier pos:line="1" pos:column="39">*<pos:position pos:line="1" pos:column="40"/></modifier></type><name pos:line="1" pos:column="40">r<pos:position pos:line="1" pos:column="41"/></name></decl></parameter>, <parameter><decl><type><specifier pos:line="1" pos:column="43">const<pos:position pos:line="1" pos:column="48"/></specifier> <name pos:line="1" pos:column="49">digest_header_rec<pos:position pos:line="1" pos:column="66"/></name> <modifier pos:line="1" pos:column="67">*<pos:position pos:line="1" pos:column="68"/></modifier></type><name pos:line="1" pos:column="68">resp<pos:position pos:line="1" pos:column="72"/></name></decl></parameter>,
                    <parameter><decl><type><specifier pos:line="2" pos:column="21">const<pos:position pos:line="2" pos:column="26"/></specifier> <name pos:line="2" pos:column="27">digest_config_rec<pos:position pos:line="2" pos:column="44"/></name> <modifier pos:line="2" pos:column="45">*<pos:position pos:line="2" pos:column="46"/></modifier></type><name pos:line="2" pos:column="46">conf<pos:position pos:line="2" pos:column="50"/></name></decl></parameter>)<pos:position pos:line="2" pos:column="51"/></parameter_list>
<block pos:line="3" pos:column="1">{
    <decl_stmt><decl><type><name pos:line="4" pos:column="5">unsigned<pos:position pos:line="4" pos:column="13"/></name> <name pos:line="4" pos:column="14">long<pos:position pos:line="4" pos:column="18"/></name></type> <name pos:line="4" pos:column="19">nc<pos:position pos:line="4" pos:column="21"/></name></decl>;<pos:position pos:line="4" pos:column="22"/></decl_stmt>
    <decl_stmt><decl><type><specifier pos:line="5" pos:column="5">const<pos:position pos:line="5" pos:column="10"/></specifier> <name pos:line="5" pos:column="11">char<pos:position pos:line="5" pos:column="15"/></name> <modifier pos:line="5" pos:column="16">*<pos:position pos:line="5" pos:column="17"/></modifier></type><name pos:line="5" pos:column="17">snc<pos:position pos:line="5" pos:column="20"/></name> <init pos:line="5" pos:column="21">= <expr><name><name pos:line="5" pos:column="23">resp<pos:position pos:line="5" pos:column="27"/></name><operator pos:line="5" pos:column="27">-&gt;<pos:position pos:line="5" pos:column="32"/></operator><name pos:line="5" pos:column="29">nonce_count<pos:position pos:line="5" pos:column="40"/></name></name></expr></init></decl>;<pos:position pos:line="5" pos:column="41"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="6" pos:column="5">char<pos:position pos:line="6" pos:column="9"/></name> <modifier pos:line="6" pos:column="10">*<pos:position pos:line="6" pos:column="11"/></modifier></type><name pos:line="6" pos:column="11">endptr<pos:position pos:line="6" pos:column="17"/></name></decl>;<pos:position pos:line="6" pos:column="18"/></decl_stmt>

    <if pos:line="8" pos:column="5">if <condition pos:line="8" pos:column="8">(<expr><name><name pos:line="8" pos:column="9">conf<pos:position pos:line="8" pos:column="13"/></name><operator pos:line="8" pos:column="13">-&gt;<pos:position pos:line="8" pos:column="18"/></operator><name pos:line="8" pos:column="15">check_nc<pos:position pos:line="8" pos:column="23"/></name></name> <operator pos:line="8" pos:column="24">&amp;&amp;<pos:position pos:line="8" pos:column="34"/></operator> <operator pos:line="8" pos:column="27">!<pos:position pos:line="8" pos:column="28"/></operator><name pos:line="8" pos:column="28">client_shm<pos:position pos:line="8" pos:column="38"/></name></expr>)<pos:position pos:line="8" pos:column="39"/></condition><then pos:line="8" pos:column="39"> <block pos:line="8" pos:column="40">{
        <comment type="block" pos:line="9" pos:column="9">/* Shouldn't happen, but just in case... */</comment>
        <expr_stmt><expr><call><name pos:line="10" pos:column="9">ap_log_rerror<pos:position pos:line="10" pos:column="22"/></name><argument_list pos:line="10" pos:column="22">(<argument><expr><name pos:line="10" pos:column="23">APLOG_MARK<pos:position pos:line="10" pos:column="33"/></name></expr></argument>, <argument><expr><name pos:line="10" pos:column="35">APLOG_WARNING<pos:position pos:line="10" pos:column="48"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="10" pos:column="50">0<pos:position pos:line="10" pos:column="51"/></literal></expr></argument>, <argument><expr><name pos:line="10" pos:column="53">r<pos:position pos:line="10" pos:column="54"/></name></expr></argument>,
                      <argument><expr><literal type="string" pos:line="11" pos:column="23">"Digest: cannot check nonce count without shared memory"<pos:position pos:line="11" pos:column="79"/></literal></expr></argument>)<pos:position pos:line="11" pos:column="80"/></argument_list></call></expr>;<pos:position pos:line="11" pos:column="81"/></expr_stmt>
        <return pos:line="12" pos:column="9">return <expr><name pos:line="12" pos:column="16">OK<pos:position pos:line="12" pos:column="18"/></name></expr>;<pos:position pos:line="12" pos:column="19"/></return>
    }<pos:position pos:line="13" pos:column="6"/></block></then></if>

    <if pos:line="15" pos:column="5">if <condition pos:line="15" pos:column="8">(<expr><operator pos:line="15" pos:column="9">!<pos:position pos:line="15" pos:column="10"/></operator><name><name pos:line="15" pos:column="10">conf<pos:position pos:line="15" pos:column="14"/></name><operator pos:line="15" pos:column="14">-&gt;<pos:position pos:line="15" pos:column="19"/></operator><name pos:line="15" pos:column="16">check_nc<pos:position pos:line="15" pos:column="24"/></name></name> <operator pos:line="15" pos:column="25">||<pos:position pos:line="15" pos:column="27"/></operator> <operator pos:line="15" pos:column="28">!<pos:position pos:line="15" pos:column="29"/></operator><name pos:line="15" pos:column="29">client_shm<pos:position pos:line="15" pos:column="39"/></name></expr>)<pos:position pos:line="15" pos:column="40"/></condition><then pos:line="15" pos:column="40"> <block pos:line="15" pos:column="41">{
        <return pos:line="16" pos:column="9">return <expr><name pos:line="16" pos:column="16">OK<pos:position pos:line="16" pos:column="18"/></name></expr>;<pos:position pos:line="16" pos:column="19"/></return>
    }<pos:position pos:line="17" pos:column="6"/></block></then></if>

    <if pos:line="19" pos:column="5">if <condition pos:line="19" pos:column="8">(<expr><operator pos:line="19" pos:column="9">(<pos:position pos:line="19" pos:column="10"/></operator><name><name pos:line="19" pos:column="10">conf<pos:position pos:line="19" pos:column="14"/></name><operator pos:line="19" pos:column="14">-&gt;<pos:position pos:line="19" pos:column="19"/></operator><name pos:line="19" pos:column="16">qop_list<pos:position pos:line="19" pos:column="24"/></name></name> <operator pos:line="19" pos:column="25">!=<pos:position pos:line="19" pos:column="27"/></operator> <name pos:line="19" pos:column="28">NULL<pos:position pos:line="19" pos:column="32"/></name><operator pos:line="19" pos:column="32">)<pos:position pos:line="19" pos:column="33"/></operator>
        <operator pos:line="20" pos:column="9">&amp;&amp;<pos:position pos:line="20" pos:column="19"/></operator><operator pos:line="20" pos:column="11">(<pos:position pos:line="20" pos:column="12"/></operator><name><name pos:line="20" pos:column="12">conf<pos:position pos:line="20" pos:column="16"/></name><operator pos:line="20" pos:column="16">-&gt;<pos:position pos:line="20" pos:column="21"/></operator><name pos:line="20" pos:column="18">qop_list<pos:position pos:line="20" pos:column="26"/></name><index pos:line="20" pos:column="26">[<expr><literal type="number" pos:line="20" pos:column="27">0<pos:position pos:line="20" pos:column="28"/></literal></expr>]<pos:position pos:line="20" pos:column="29"/></index></name> <operator pos:line="20" pos:column="30">!=<pos:position pos:line="20" pos:column="32"/></operator> <name pos:line="20" pos:column="33">NULL<pos:position pos:line="20" pos:column="37"/></name><operator pos:line="20" pos:column="37">)<pos:position pos:line="20" pos:column="38"/></operator>
        <operator pos:line="21" pos:column="9">&amp;&amp;<pos:position pos:line="21" pos:column="19"/></operator><operator pos:line="21" pos:column="11">!<pos:position pos:line="21" pos:column="12"/></operator><call><name pos:line="21" pos:column="12">strcasecmp<pos:position pos:line="21" pos:column="22"/></name><argument_list pos:line="21" pos:column="22">(<argument><expr><name><name pos:line="21" pos:column="23">conf<pos:position pos:line="21" pos:column="27"/></name><operator pos:line="21" pos:column="27">-&gt;<pos:position pos:line="21" pos:column="32"/></operator><name pos:line="21" pos:column="29">qop_list<pos:position pos:line="21" pos:column="37"/></name><index pos:line="21" pos:column="37">[<expr><literal type="number" pos:line="21" pos:column="38">0<pos:position pos:line="21" pos:column="39"/></literal></expr>]<pos:position pos:line="21" pos:column="40"/></index></name></expr></argument>, <argument><expr><literal type="string" pos:line="21" pos:column="42">"none"<pos:position pos:line="21" pos:column="48"/></literal></expr></argument>)<pos:position pos:line="21" pos:column="49"/></argument_list></call></expr>)<pos:position pos:line="21" pos:column="50"/></condition><then pos:line="21" pos:column="50"> <block pos:line="21" pos:column="51">{
        <comment type="block" pos:line="22" pos:column="9">/* qop is none, client must not send a nonce count */</comment>
        <if pos:line="23" pos:column="9">if <condition pos:line="23" pos:column="12">(<expr><name pos:line="23" pos:column="13">snc<pos:position pos:line="23" pos:column="16"/></name> <operator pos:line="23" pos:column="17">!=<pos:position pos:line="23" pos:column="19"/></operator> <name pos:line="23" pos:column="20">NULL<pos:position pos:line="23" pos:column="24"/></name></expr>)<pos:position pos:line="23" pos:column="25"/></condition><then pos:line="23" pos:column="25"> <block pos:line="23" pos:column="26">{
            <expr_stmt><expr><call><name pos:line="24" pos:column="13">ap_log_rerror<pos:position pos:line="24" pos:column="26"/></name><argument_list pos:line="24" pos:column="26">(<argument><expr><name pos:line="24" pos:column="27">APLOG_MARK<pos:position pos:line="24" pos:column="37"/></name></expr></argument>, <argument><expr><name pos:line="24" pos:column="39">APLOG_ERR<pos:position pos:line="24" pos:column="48"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="24" pos:column="50">0<pos:position pos:line="24" pos:column="51"/></literal></expr></argument>, <argument><expr><name pos:line="24" pos:column="53">r<pos:position pos:line="24" pos:column="54"/></name></expr></argument>,
                          <argument><expr><literal type="string" pos:line="25" pos:column="27">"Digest: invalid nc %s received - no nonce count allowed when qop=none"<pos:position pos:line="25" pos:column="98"/></literal></expr></argument>,
                          <argument><expr><name pos:line="26" pos:column="27">snc<pos:position pos:line="26" pos:column="30"/></name></expr></argument>)<pos:position pos:line="26" pos:column="31"/></argument_list></call></expr>;<pos:position pos:line="26" pos:column="32"/></expr_stmt>
            <return pos:line="27" pos:column="13">return <expr><operator pos:line="27" pos:column="20">!<pos:position pos:line="27" pos:column="21"/></operator><name pos:line="27" pos:column="21">OK<pos:position pos:line="27" pos:column="23"/></name></expr>;<pos:position pos:line="27" pos:column="24"/></return>
        }<pos:position pos:line="28" pos:column="10"/></block></then></if>
        <comment type="block" pos:line="29" pos:column="9">/* qop is none, cannot check nonce count */</comment>
        <return pos:line="30" pos:column="9">return <expr><name pos:line="30" pos:column="16">OK<pos:position pos:line="30" pos:column="18"/></name></expr>;<pos:position pos:line="30" pos:column="19"/></return>
    }<pos:position pos:line="31" pos:column="6"/></block></then></if>

    <expr_stmt><expr><name pos:line="33" pos:column="5">nc<pos:position pos:line="33" pos:column="7"/></name> <operator pos:line="33" pos:column="8">=<pos:position pos:line="33" pos:column="9"/></operator> <call><name pos:line="33" pos:column="10">strtol<pos:position pos:line="33" pos:column="16"/></name><argument_list pos:line="33" pos:column="16">(<argument><expr><name pos:line="33" pos:column="17">snc<pos:position pos:line="33" pos:column="20"/></name></expr></argument>, <argument><expr><operator pos:line="33" pos:column="22">&amp;<pos:position pos:line="33" pos:column="27"/></operator><name pos:line="33" pos:column="23">endptr<pos:position pos:line="33" pos:column="29"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="33" pos:column="31">16<pos:position pos:line="33" pos:column="33"/></literal></expr></argument>)<pos:position pos:line="33" pos:column="34"/></argument_list></call></expr>;<pos:position pos:line="33" pos:column="35"/></expr_stmt>
    <if pos:line="34" pos:column="5">if <condition pos:line="34" pos:column="8">(<expr><name pos:line="34" pos:column="9">endptr<pos:position pos:line="34" pos:column="15"/></name> <operator pos:line="34" pos:column="16">&lt;<pos:position pos:line="34" pos:column="20"/></operator> <operator pos:line="34" pos:column="18">(<pos:position pos:line="34" pos:column="19"/></operator><name pos:line="34" pos:column="19">snc<pos:position pos:line="34" pos:column="22"/></name><operator pos:line="34" pos:column="22">+<pos:position pos:line="34" pos:column="23"/></operator><call><name pos:line="34" pos:column="23">strlen<pos:position pos:line="34" pos:column="29"/></name><argument_list pos:line="34" pos:column="29">(<argument><expr><name pos:line="34" pos:column="30">snc<pos:position pos:line="34" pos:column="33"/></name></expr></argument>)<pos:position pos:line="34" pos:column="34"/></argument_list></call><operator pos:line="34" pos:column="34">)<pos:position pos:line="34" pos:column="35"/></operator> <operator pos:line="34" pos:column="36">&amp;&amp;<pos:position pos:line="34" pos:column="46"/></operator> <operator pos:line="34" pos:column="39">!<pos:position pos:line="34" pos:column="40"/></operator><call><name pos:line="34" pos:column="40">apr_isspace<pos:position pos:line="34" pos:column="51"/></name><argument_list pos:line="34" pos:column="51">(<argument><expr><operator pos:line="34" pos:column="52">*<pos:position pos:line="34" pos:column="53"/></operator><name pos:line="34" pos:column="53">endptr<pos:position pos:line="34" pos:column="59"/></name></expr></argument>)<pos:position pos:line="34" pos:column="60"/></argument_list></call></expr>)<pos:position pos:line="34" pos:column="61"/></condition><then pos:line="34" pos:column="61"> <block pos:line="34" pos:column="62">{
        <expr_stmt><expr><call><name pos:line="35" pos:column="9">ap_log_rerror<pos:position pos:line="35" pos:column="22"/></name><argument_list pos:line="35" pos:column="22">(<argument><expr><name pos:line="35" pos:column="23">APLOG_MARK<pos:position pos:line="35" pos:column="33"/></name></expr></argument>, <argument><expr><name pos:line="35" pos:column="35">APLOG_ERR<pos:position pos:line="35" pos:column="44"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="35" pos:column="46">0<pos:position pos:line="35" pos:column="47"/></literal></expr></argument>, <argument><expr><name pos:line="35" pos:column="49">r<pos:position pos:line="35" pos:column="50"/></name></expr></argument>,
                      <argument><expr><literal type="string" pos:line="36" pos:column="23">"Digest: invalid nc %s received - not a number"<pos:position pos:line="36" pos:column="70"/></literal></expr></argument>, <argument><expr><name pos:line="36" pos:column="72">snc<pos:position pos:line="36" pos:column="75"/></name></expr></argument>)<pos:position pos:line="36" pos:column="76"/></argument_list></call></expr>;<pos:position pos:line="36" pos:column="77"/></expr_stmt>
        <return pos:line="37" pos:column="9">return <expr><operator pos:line="37" pos:column="16">!<pos:position pos:line="37" pos:column="17"/></operator><name pos:line="37" pos:column="17">OK<pos:position pos:line="37" pos:column="19"/></name></expr>;<pos:position pos:line="37" pos:column="20"/></return>
    }<pos:position pos:line="38" pos:column="6"/></block></then></if>

    <if pos:line="40" pos:column="5">if <condition pos:line="40" pos:column="8">(<expr><operator pos:line="40" pos:column="9">!<pos:position pos:line="40" pos:column="10"/></operator><name><name pos:line="40" pos:column="10">resp<pos:position pos:line="40" pos:column="14"/></name><operator pos:line="40" pos:column="14">-&gt;<pos:position pos:line="40" pos:column="19"/></operator><name pos:line="40" pos:column="16">client<pos:position pos:line="40" pos:column="22"/></name></name></expr>)<pos:position pos:line="40" pos:column="23"/></condition><then pos:line="40" pos:column="23"> <block pos:line="40" pos:column="24">{
        <return pos:line="41" pos:column="9">return <expr><operator pos:line="41" pos:column="16">!<pos:position pos:line="41" pos:column="17"/></operator><name pos:line="41" pos:column="17">OK<pos:position pos:line="41" pos:column="19"/></name></expr>;<pos:position pos:line="41" pos:column="20"/></return>
    }<pos:position pos:line="42" pos:column="6"/></block></then></if>

    <if pos:line="44" pos:column="5">if <condition pos:line="44" pos:column="8">(<expr><name pos:line="44" pos:column="9">nc<pos:position pos:line="44" pos:column="11"/></name> <operator pos:line="44" pos:column="12">!=<pos:position pos:line="44" pos:column="14"/></operator> <name><name pos:line="44" pos:column="15">resp<pos:position pos:line="44" pos:column="19"/></name><operator pos:line="44" pos:column="19">-&gt;<pos:position pos:line="44" pos:column="24"/></operator><name pos:line="44" pos:column="21">client<pos:position pos:line="44" pos:column="27"/></name><operator pos:line="44" pos:column="27">-&gt;<pos:position pos:line="44" pos:column="32"/></operator><name pos:line="44" pos:column="29">nonce_count<pos:position pos:line="44" pos:column="40"/></name></name></expr>)<pos:position pos:line="44" pos:column="41"/></condition><then pos:line="44" pos:column="41"> <block pos:line="44" pos:column="42">{
        <expr_stmt><expr><call><name pos:line="45" pos:column="9">ap_log_rerror<pos:position pos:line="45" pos:column="22"/></name><argument_list pos:line="45" pos:column="22">(<argument><expr><name pos:line="45" pos:column="23">APLOG_MARK<pos:position pos:line="45" pos:column="33"/></name></expr></argument>, <argument><expr><name pos:line="45" pos:column="35">APLOG_ERR<pos:position pos:line="45" pos:column="44"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="45" pos:column="46">0<pos:position pos:line="45" pos:column="47"/></literal></expr></argument>, <argument><expr><name pos:line="45" pos:column="49">r<pos:position pos:line="45" pos:column="50"/></name></expr></argument>,
                      <argument><expr><literal type="string" pos:line="46" pos:column="23">"Digest: Warning, possible replay attack: nonce-count "<pos:position pos:line="46" pos:column="78"/></literal>
                      <literal type="string" pos:line="47" pos:column="23">"check failed: %lu != %lu"<pos:position pos:line="47" pos:column="49"/></literal></expr></argument>, <argument><expr><name pos:line="47" pos:column="51">nc<pos:position pos:line="47" pos:column="53"/></name></expr></argument>,
                      <argument><expr><name><name pos:line="48" pos:column="23">resp<pos:position pos:line="48" pos:column="27"/></name><operator pos:line="48" pos:column="27">-&gt;<pos:position pos:line="48" pos:column="32"/></operator><name pos:line="48" pos:column="29">client<pos:position pos:line="48" pos:column="35"/></name><operator pos:line="48" pos:column="35">-&gt;<pos:position pos:line="48" pos:column="40"/></operator><name pos:line="48" pos:column="37">nonce_count<pos:position pos:line="48" pos:column="48"/></name></name></expr></argument>)<pos:position pos:line="48" pos:column="49"/></argument_list></call></expr>;<pos:position pos:line="48" pos:column="50"/></expr_stmt>
        <return pos:line="49" pos:column="9">return <expr><operator pos:line="49" pos:column="16">!<pos:position pos:line="49" pos:column="17"/></operator><name pos:line="49" pos:column="17">OK<pos:position pos:line="49" pos:column="19"/></name></expr>;<pos:position pos:line="49" pos:column="20"/></return>
    }<pos:position pos:line="50" pos:column="6"/></block></then></if>

    <return pos:line="52" pos:column="5">return <expr><name pos:line="52" pos:column="12">OK<pos:position pos:line="52" pos:column="14"/></name></expr>;<pos:position pos:line="52" pos:column="15"/></return>
}<pos:position pos:line="53" pos:column="2"/></block></function></unit>

<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/httpd/gumtree/httpd_repos_function_3585_httpd-2.4.17.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">apr_status_t<pos:position pos:line="1" pos:column="20"/></name></type> <name pos:line="1" pos:column="21">piped_log_spawn<pos:position pos:line="1" pos:column="36"/></name><parameter_list pos:line="1" pos:column="36">(<parameter><decl><type><name pos:line="1" pos:column="37">piped_log<pos:position pos:line="1" pos:column="46"/></name> <modifier pos:line="1" pos:column="47">*<pos:position pos:line="1" pos:column="48"/></modifier></type><name pos:line="1" pos:column="48">pl<pos:position pos:line="1" pos:column="50"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="51"/></parameter_list>
<block pos:line="2" pos:column="1">{
    <decl_stmt><decl><type><name pos:line="3" pos:column="5">apr_procattr_t<pos:position pos:line="3" pos:column="19"/></name> <modifier pos:line="3" pos:column="20">*<pos:position pos:line="3" pos:column="21"/></modifier></type><name pos:line="3" pos:column="21">procattr<pos:position pos:line="3" pos:column="29"/></name></decl>;<pos:position pos:line="3" pos:column="30"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="4" pos:column="5">apr_proc_t<pos:position pos:line="4" pos:column="15"/></name> <modifier pos:line="4" pos:column="16">*<pos:position pos:line="4" pos:column="17"/></modifier></type><name pos:line="4" pos:column="17">procnew<pos:position pos:line="4" pos:column="24"/></name> <init pos:line="4" pos:column="25">= <expr><name pos:line="4" pos:column="27">NULL<pos:position pos:line="4" pos:column="31"/></name></expr></init></decl>;<pos:position pos:line="4" pos:column="32"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="5" pos:column="5">apr_status_t<pos:position pos:line="5" pos:column="17"/></name></type> <name pos:line="5" pos:column="18">status<pos:position pos:line="5" pos:column="24"/></name></decl>;<pos:position pos:line="5" pos:column="25"/></decl_stmt>

    <if pos:line="7" pos:column="5">if <condition pos:line="7" pos:column="8">(<expr><operator pos:line="7" pos:column="9">(<pos:position pos:line="7" pos:column="10"/></operator><operator pos:line="7" pos:column="10">(<pos:position pos:line="7" pos:column="11"/></operator><name pos:line="7" pos:column="11">status<pos:position pos:line="7" pos:column="17"/></name> <operator pos:line="7" pos:column="18">=<pos:position pos:line="7" pos:column="19"/></operator> <call><name pos:line="7" pos:column="20">apr_procattr_create<pos:position pos:line="7" pos:column="39"/></name><argument_list pos:line="7" pos:column="39">(<argument><expr><operator pos:line="7" pos:column="40">&amp;<pos:position pos:line="7" pos:column="45"/></operator><name pos:line="7" pos:column="41">procattr<pos:position pos:line="7" pos:column="49"/></name></expr></argument>, <argument><expr><name><name pos:line="7" pos:column="51">pl<pos:position pos:line="7" pos:column="53"/></name><operator pos:line="7" pos:column="53">-&gt;<pos:position pos:line="7" pos:column="58"/></operator><name pos:line="7" pos:column="55">p<pos:position pos:line="7" pos:column="56"/></name></name></expr></argument>)<pos:position pos:line="7" pos:column="57"/></argument_list></call><operator pos:line="7" pos:column="57">)<pos:position pos:line="7" pos:column="58"/></operator> <operator pos:line="7" pos:column="59">!=<pos:position pos:line="7" pos:column="61"/></operator> <name pos:line="7" pos:column="62">APR_SUCCESS<pos:position pos:line="7" pos:column="73"/></name><operator pos:line="7" pos:column="73">)<pos:position pos:line="7" pos:column="74"/></operator> <operator pos:line="7" pos:column="75">||<pos:position pos:line="7" pos:column="77"/></operator>
        <operator pos:line="8" pos:column="9">(<pos:position pos:line="8" pos:column="10"/></operator><operator pos:line="8" pos:column="10">(<pos:position pos:line="8" pos:column="11"/></operator><name pos:line="8" pos:column="11">status<pos:position pos:line="8" pos:column="17"/></name> <operator pos:line="8" pos:column="18">=<pos:position pos:line="8" pos:column="19"/></operator> <call><name pos:line="8" pos:column="20">apr_procattr_dir_set<pos:position pos:line="8" pos:column="40"/></name><argument_list pos:line="8" pos:column="40">(<argument><expr><name pos:line="8" pos:column="41">procattr<pos:position pos:line="8" pos:column="49"/></name></expr></argument>, <argument><expr><name pos:line="8" pos:column="51">ap_server_root<pos:position pos:line="8" pos:column="65"/></name></expr></argument>)<pos:position pos:line="8" pos:column="66"/></argument_list></call><operator pos:line="8" pos:column="66">)<pos:position pos:line="8" pos:column="67"/></operator>
         <operator pos:line="9" pos:column="10">!=<pos:position pos:line="9" pos:column="12"/></operator> <name pos:line="9" pos:column="13">APR_SUCCESS<pos:position pos:line="9" pos:column="24"/></name><operator pos:line="9" pos:column="24">)<pos:position pos:line="9" pos:column="25"/></operator> <operator pos:line="9" pos:column="26">||<pos:position pos:line="9" pos:column="28"/></operator>
        <operator pos:line="10" pos:column="9">(<pos:position pos:line="10" pos:column="10"/></operator><operator pos:line="10" pos:column="10">(<pos:position pos:line="10" pos:column="11"/></operator><name pos:line="10" pos:column="11">status<pos:position pos:line="10" pos:column="17"/></name> <operator pos:line="10" pos:column="18">=<pos:position pos:line="10" pos:column="19"/></operator> <call><name pos:line="10" pos:column="20">apr_procattr_cmdtype_set<pos:position pos:line="10" pos:column="44"/></name><argument_list pos:line="10" pos:column="44">(<argument><expr><name pos:line="10" pos:column="45">procattr<pos:position pos:line="10" pos:column="53"/></name></expr></argument>, <argument><expr><name><name pos:line="10" pos:column="55">pl<pos:position pos:line="10" pos:column="57"/></name><operator pos:line="10" pos:column="57">-&gt;<pos:position pos:line="10" pos:column="62"/></operator><name pos:line="10" pos:column="59">cmdtype<pos:position pos:line="10" pos:column="66"/></name></name></expr></argument>)<pos:position pos:line="10" pos:column="67"/></argument_list></call><operator pos:line="10" pos:column="67">)<pos:position pos:line="10" pos:column="68"/></operator>
         <operator pos:line="11" pos:column="10">!=<pos:position pos:line="11" pos:column="12"/></operator> <name pos:line="11" pos:column="13">APR_SUCCESS<pos:position pos:line="11" pos:column="24"/></name><operator pos:line="11" pos:column="24">)<pos:position pos:line="11" pos:column="25"/></operator> <operator pos:line="11" pos:column="26">||<pos:position pos:line="11" pos:column="28"/></operator>
        <operator pos:line="12" pos:column="9">(<pos:position pos:line="12" pos:column="10"/></operator><operator pos:line="12" pos:column="10">(<pos:position pos:line="12" pos:column="11"/></operator><name pos:line="12" pos:column="11">status<pos:position pos:line="12" pos:column="17"/></name> <operator pos:line="12" pos:column="18">=<pos:position pos:line="12" pos:column="19"/></operator> <call><name pos:line="12" pos:column="20">apr_procattr_child_in_set<pos:position pos:line="12" pos:column="45"/></name><argument_list pos:line="12" pos:column="45">(<argument><expr><name pos:line="12" pos:column="46">procattr<pos:position pos:line="12" pos:column="54"/></name></expr></argument>,
                                             <argument><expr><name><name pos:line="13" pos:column="46">pl<pos:position pos:line="13" pos:column="48"/></name><operator pos:line="13" pos:column="48">-&gt;<pos:position pos:line="13" pos:column="53"/></operator><name pos:line="13" pos:column="50">read_fd<pos:position pos:line="13" pos:column="57"/></name></name></expr></argument>,
                                             <argument><expr><name><name pos:line="14" pos:column="46">pl<pos:position pos:line="14" pos:column="48"/></name><operator pos:line="14" pos:column="48">-&gt;<pos:position pos:line="14" pos:column="53"/></operator><name pos:line="14" pos:column="50">write_fd<pos:position pos:line="14" pos:column="58"/></name></name></expr></argument>)<pos:position pos:line="14" pos:column="59"/></argument_list></call><operator pos:line="14" pos:column="59">)<pos:position pos:line="14" pos:column="60"/></operator>
         <operator pos:line="15" pos:column="10">!=<pos:position pos:line="15" pos:column="12"/></operator> <name pos:line="15" pos:column="13">APR_SUCCESS<pos:position pos:line="15" pos:column="24"/></name><operator pos:line="15" pos:column="24">)<pos:position pos:line="15" pos:column="25"/></operator> <operator pos:line="15" pos:column="26">||<pos:position pos:line="15" pos:column="28"/></operator>
        <operator pos:line="16" pos:column="9">(<pos:position pos:line="16" pos:column="10"/></operator><operator pos:line="16" pos:column="10">(<pos:position pos:line="16" pos:column="11"/></operator><name pos:line="16" pos:column="11">status<pos:position pos:line="16" pos:column="17"/></name> <operator pos:line="16" pos:column="18">=<pos:position pos:line="16" pos:column="19"/></operator> <call><name pos:line="16" pos:column="20">apr_procattr_child_errfn_set<pos:position pos:line="16" pos:column="48"/></name><argument_list pos:line="16" pos:column="48">(<argument><expr><name pos:line="16" pos:column="49">procattr<pos:position pos:line="16" pos:column="57"/></name></expr></argument>, <argument><expr><name pos:line="16" pos:column="59">log_child_errfn<pos:position pos:line="16" pos:column="74"/></name></expr></argument>)<pos:position pos:line="16" pos:column="75"/></argument_list></call><operator pos:line="16" pos:column="75">)<pos:position pos:line="16" pos:column="76"/></operator>
         <operator pos:line="17" pos:column="10">!=<pos:position pos:line="17" pos:column="12"/></operator> <name pos:line="17" pos:column="13">APR_SUCCESS<pos:position pos:line="17" pos:column="24"/></name><operator pos:line="17" pos:column="24">)<pos:position pos:line="17" pos:column="25"/></operator> <operator pos:line="17" pos:column="26">||<pos:position pos:line="17" pos:column="28"/></operator>
        <operator pos:line="18" pos:column="9">(<pos:position pos:line="18" pos:column="10"/></operator><operator pos:line="18" pos:column="10">(<pos:position pos:line="18" pos:column="11"/></operator><name pos:line="18" pos:column="11">status<pos:position pos:line="18" pos:column="17"/></name> <operator pos:line="18" pos:column="18">=<pos:position pos:line="18" pos:column="19"/></operator> <call><name pos:line="18" pos:column="20">apr_procattr_error_check_set<pos:position pos:line="18" pos:column="48"/></name><argument_list pos:line="18" pos:column="48">(<argument><expr><name pos:line="18" pos:column="49">procattr<pos:position pos:line="18" pos:column="57"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="18" pos:column="59">1<pos:position pos:line="18" pos:column="60"/></literal></expr></argument>)<pos:position pos:line="18" pos:column="61"/></argument_list></call><operator pos:line="18" pos:column="61">)<pos:position pos:line="18" pos:column="62"/></operator> <operator pos:line="18" pos:column="63">!=<pos:position pos:line="18" pos:column="65"/></operator> <name pos:line="18" pos:column="66">APR_SUCCESS<pos:position pos:line="18" pos:column="77"/></name><operator pos:line="18" pos:column="77">)<pos:position pos:line="18" pos:column="78"/></operator></expr>)<pos:position pos:line="18" pos:column="79"/></condition><then pos:line="18" pos:column="79"> <block pos:line="18" pos:column="80">{
        <comment type="block" pos:line="19" pos:column="9">/* Something bad happened, give up and go away. */</comment>
        <expr_stmt><expr><call><name pos:line="20" pos:column="9">ap_log_error<pos:position pos:line="20" pos:column="21"/></name><argument_list pos:line="20" pos:column="21">(<argument><expr><name pos:line="20" pos:column="22">APLOG_MARK<pos:position pos:line="20" pos:column="32"/></name></expr></argument>, <argument><expr><name pos:line="20" pos:column="34">APLOG_STARTUP<pos:position pos:line="20" pos:column="47"/></name></expr></argument>, <argument><expr><name pos:line="20" pos:column="49">status<pos:position pos:line="20" pos:column="55"/></name></expr></argument>, <argument><expr><name pos:line="20" pos:column="57">NULL<pos:position pos:line="20" pos:column="61"/></name></expr></argument>, <argument><expr><call><name pos:line="20" pos:column="63">APLOGNO<pos:position pos:line="20" pos:column="70"/></name><argument_list pos:line="20" pos:column="70">(<argument><expr><literal type="number" pos:line="20" pos:column="71">00103<pos:position pos:line="20" pos:column="76"/></literal></expr></argument>)<pos:position pos:line="20" pos:column="77"/></argument_list></call>
                     <literal type="string" pos:line="21" pos:column="22">"piped_log_spawn: unable to setup child process '%s'"<pos:position pos:line="21" pos:column="75"/></literal></expr></argument>,
                     <argument><expr><name><name pos:line="22" pos:column="22">pl<pos:position pos:line="22" pos:column="24"/></name><operator pos:line="22" pos:column="24">-&gt;<pos:position pos:line="22" pos:column="29"/></operator><name pos:line="22" pos:column="26">program<pos:position pos:line="22" pos:column="33"/></name></name></expr></argument>)<pos:position pos:line="22" pos:column="34"/></argument_list></call></expr>;<pos:position pos:line="22" pos:column="35"/></expr_stmt>
    }<pos:position pos:line="23" pos:column="6"/></block></then>
    <else pos:line="24" pos:column="5">else <block pos:line="24" pos:column="10">{
        <decl_stmt><decl><type><name pos:line="25" pos:column="9">char<pos:position pos:line="25" pos:column="13"/></name> <modifier pos:line="25" pos:column="14">*<pos:position pos:line="25" pos:column="15"/></modifier><modifier pos:line="25" pos:column="15">*<pos:position pos:line="25" pos:column="16"/></modifier></type><name pos:line="25" pos:column="16">args<pos:position pos:line="25" pos:column="20"/></name></decl>;<pos:position pos:line="25" pos:column="21"/></decl_stmt>

        <expr_stmt><expr><call><name pos:line="27" pos:column="9">apr_tokenize_to_argv<pos:position pos:line="27" pos:column="29"/></name><argument_list pos:line="27" pos:column="29">(<argument><expr><name><name pos:line="27" pos:column="30">pl<pos:position pos:line="27" pos:column="32"/></name><operator pos:line="27" pos:column="32">-&gt;<pos:position pos:line="27" pos:column="37"/></operator><name pos:line="27" pos:column="34">program<pos:position pos:line="27" pos:column="41"/></name></name></expr></argument>, <argument><expr><operator pos:line="27" pos:column="43">&amp;<pos:position pos:line="27" pos:column="48"/></operator><name pos:line="27" pos:column="44">args<pos:position pos:line="27" pos:column="48"/></name></expr></argument>, <argument><expr><name><name pos:line="27" pos:column="50">pl<pos:position pos:line="27" pos:column="52"/></name><operator pos:line="27" pos:column="52">-&gt;<pos:position pos:line="27" pos:column="57"/></operator><name pos:line="27" pos:column="54">p<pos:position pos:line="27" pos:column="55"/></name></name></expr></argument>)<pos:position pos:line="27" pos:column="56"/></argument_list></call></expr>;<pos:position pos:line="27" pos:column="57"/></expr_stmt>
        <expr_stmt><expr><name pos:line="28" pos:column="9">procnew<pos:position pos:line="28" pos:column="16"/></name> <operator pos:line="28" pos:column="17">=<pos:position pos:line="28" pos:column="18"/></operator> <call><name pos:line="28" pos:column="19">apr_pcalloc<pos:position pos:line="28" pos:column="30"/></name><argument_list pos:line="28" pos:column="30">(<argument><expr><name><name pos:line="28" pos:column="31">pl<pos:position pos:line="28" pos:column="33"/></name><operator pos:line="28" pos:column="33">-&gt;<pos:position pos:line="28" pos:column="38"/></operator><name pos:line="28" pos:column="35">p<pos:position pos:line="28" pos:column="36"/></name></name></expr></argument>, <argument><expr><sizeof pos:line="28" pos:column="38">sizeof<argument_list pos:line="28" pos:column="44">(<argument><expr><name pos:line="28" pos:column="45">apr_proc_t<pos:position pos:line="28" pos:column="55"/></name></expr></argument>)<pos:position pos:line="28" pos:column="56"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="28" pos:column="57"/></argument_list></call></expr>;<pos:position pos:line="28" pos:column="58"/></expr_stmt>
        <expr_stmt><expr><name pos:line="29" pos:column="9">status<pos:position pos:line="29" pos:column="15"/></name> <operator pos:line="29" pos:column="16">=<pos:position pos:line="29" pos:column="17"/></operator> <call><name pos:line="29" pos:column="18">apr_proc_create<pos:position pos:line="29" pos:column="33"/></name><argument_list pos:line="29" pos:column="33">(<argument><expr><name pos:line="29" pos:column="34">procnew<pos:position pos:line="29" pos:column="41"/></name></expr></argument>, <argument><expr><name><name pos:line="29" pos:column="43">args<pos:position pos:line="29" pos:column="47"/></name><index pos:line="29" pos:column="47">[<expr><literal type="number" pos:line="29" pos:column="48">0<pos:position pos:line="29" pos:column="49"/></literal></expr>]<pos:position pos:line="29" pos:column="50"/></index></name></expr></argument>, <argument><expr><operator pos:line="29" pos:column="52">(<pos:position pos:line="29" pos:column="53"/></operator><specifier pos:line="29" pos:column="53">const<pos:position pos:line="29" pos:column="58"/></specifier> <name pos:line="29" pos:column="59">char<pos:position pos:line="29" pos:column="63"/></name> <operator pos:line="29" pos:column="64">*<pos:position pos:line="29" pos:column="65"/></operator> <specifier pos:line="29" pos:column="66">const<pos:position pos:line="29" pos:column="71"/></specifier> <operator pos:line="29" pos:column="72">*<pos:position pos:line="29" pos:column="73"/></operator><operator pos:line="29" pos:column="73">)<pos:position pos:line="29" pos:column="74"/></operator> <name pos:line="29" pos:column="75">args<pos:position pos:line="29" pos:column="79"/></name></expr></argument>,
                                 <argument><expr><name pos:line="30" pos:column="34">NULL<pos:position pos:line="30" pos:column="38"/></name></expr></argument>, <argument><expr><name pos:line="30" pos:column="40">procattr<pos:position pos:line="30" pos:column="48"/></name></expr></argument>, <argument><expr><name><name pos:line="30" pos:column="50">pl<pos:position pos:line="30" pos:column="52"/></name><operator pos:line="30" pos:column="52">-&gt;<pos:position pos:line="30" pos:column="57"/></operator><name pos:line="30" pos:column="54">p<pos:position pos:line="30" pos:column="55"/></name></name></expr></argument>)<pos:position pos:line="30" pos:column="56"/></argument_list></call></expr>;<pos:position pos:line="30" pos:column="57"/></expr_stmt>

        <if pos:line="32" pos:column="9">if <condition pos:line="32" pos:column="12">(<expr><name pos:line="32" pos:column="13">status<pos:position pos:line="32" pos:column="19"/></name> <operator pos:line="32" pos:column="20">==<pos:position pos:line="32" pos:column="22"/></operator> <name pos:line="32" pos:column="23">APR_SUCCESS<pos:position pos:line="32" pos:column="34"/></name></expr>)<pos:position pos:line="32" pos:column="35"/></condition><then pos:line="32" pos:column="35"> <block pos:line="32" pos:column="36">{
            <expr_stmt><expr><name><name pos:line="33" pos:column="13">pl<pos:position pos:line="33" pos:column="15"/></name><operator pos:line="33" pos:column="15">-&gt;<pos:position pos:line="33" pos:column="20"/></operator><name pos:line="33" pos:column="17">pid<pos:position pos:line="33" pos:column="20"/></name></name> <operator pos:line="33" pos:column="21">=<pos:position pos:line="33" pos:column="22"/></operator> <name pos:line="33" pos:column="23">procnew<pos:position pos:line="33" pos:column="30"/></name></expr>;<pos:position pos:line="33" pos:column="31"/></expr_stmt>
            <comment type="block" pos:line="34" pos:column="13">/* procnew-&gt;in was dup2'd from pl-&gt;write_fd;
             * since the original fd is still valid, close the copy to
             * avoid a leak. */</comment>
            <expr_stmt><expr><call><name pos:line="37" pos:column="13">apr_file_close<pos:position pos:line="37" pos:column="27"/></name><argument_list pos:line="37" pos:column="27">(<argument><expr><name><name pos:line="37" pos:column="28">procnew<pos:position pos:line="37" pos:column="35"/></name><operator pos:line="37" pos:column="35">-&gt;<pos:position pos:line="37" pos:column="40"/></operator><name pos:line="37" pos:column="37">in<pos:position pos:line="37" pos:column="39"/></name></name></expr></argument>)<pos:position pos:line="37" pos:column="40"/></argument_list></call></expr>;<pos:position pos:line="37" pos:column="41"/></expr_stmt>
            <expr_stmt><expr><name><name pos:line="38" pos:column="13">procnew<pos:position pos:line="38" pos:column="20"/></name><operator pos:line="38" pos:column="20">-&gt;<pos:position pos:line="38" pos:column="25"/></operator><name pos:line="38" pos:column="22">in<pos:position pos:line="38" pos:column="24"/></name></name> <operator pos:line="38" pos:column="25">=<pos:position pos:line="38" pos:column="26"/></operator> <name pos:line="38" pos:column="27">NULL<pos:position pos:line="38" pos:column="31"/></name></expr>;<pos:position pos:line="38" pos:column="32"/></expr_stmt>
            <expr_stmt><expr><call><name pos:line="39" pos:column="13">apr_proc_other_child_register<pos:position pos:line="39" pos:column="42"/></name><argument_list pos:line="39" pos:column="42">(<argument><expr><name pos:line="39" pos:column="43">procnew<pos:position pos:line="39" pos:column="50"/></name></expr></argument>, <argument><expr><name pos:line="39" pos:column="52">piped_log_maintenance<pos:position pos:line="39" pos:column="73"/></name></expr></argument>, <argument><expr><name pos:line="39" pos:column="75">pl<pos:position pos:line="39" pos:column="77"/></name></expr></argument>,
                                          <argument><expr><name><name pos:line="40" pos:column="43">pl<pos:position pos:line="40" pos:column="45"/></name><operator pos:line="40" pos:column="45">-&gt;<pos:position pos:line="40" pos:column="50"/></operator><name pos:line="40" pos:column="47">write_fd<pos:position pos:line="40" pos:column="55"/></name></name></expr></argument>, <argument><expr><name><name pos:line="40" pos:column="57">pl<pos:position pos:line="40" pos:column="59"/></name><operator pos:line="40" pos:column="59">-&gt;<pos:position pos:line="40" pos:column="64"/></operator><name pos:line="40" pos:column="61">p<pos:position pos:line="40" pos:column="62"/></name></name></expr></argument>)<pos:position pos:line="40" pos:column="63"/></argument_list></call></expr>;<pos:position pos:line="40" pos:column="64"/></expr_stmt>
            <expr_stmt><expr><call><name pos:line="41" pos:column="13">close_handle_in_child<pos:position pos:line="41" pos:column="34"/></name><argument_list pos:line="41" pos:column="34">(<argument><expr><name><name pos:line="41" pos:column="35">pl<pos:position pos:line="41" pos:column="37"/></name><operator pos:line="41" pos:column="37">-&gt;<pos:position pos:line="41" pos:column="42"/></operator><name pos:line="41" pos:column="39">p<pos:position pos:line="41" pos:column="40"/></name></name></expr></argument>, <argument><expr><name><name pos:line="41" pos:column="42">pl<pos:position pos:line="41" pos:column="44"/></name><operator pos:line="41" pos:column="44">-&gt;<pos:position pos:line="41" pos:column="49"/></operator><name pos:line="41" pos:column="46">read_fd<pos:position pos:line="41" pos:column="53"/></name></name></expr></argument>)<pos:position pos:line="41" pos:column="54"/></argument_list></call></expr>;<pos:position pos:line="41" pos:column="55"/></expr_stmt>
        }<pos:position pos:line="42" pos:column="10"/></block></then>
        <else pos:line="43" pos:column="9">else <block pos:line="43" pos:column="14">{
            <comment type="block" pos:line="44" pos:column="13">/* Something bad happened, give up and go away. */</comment>
            <expr_stmt><expr><call><name pos:line="45" pos:column="13">ap_log_error<pos:position pos:line="45" pos:column="25"/></name><argument_list pos:line="45" pos:column="25">(<argument><expr><name pos:line="45" pos:column="26">APLOG_MARK<pos:position pos:line="45" pos:column="36"/></name></expr></argument>, <argument><expr><name pos:line="45" pos:column="38">APLOG_STARTUP<pos:position pos:line="45" pos:column="51"/></name></expr></argument>, <argument><expr><name pos:line="45" pos:column="53">status<pos:position pos:line="45" pos:column="59"/></name></expr></argument>, <argument><expr><name pos:line="45" pos:column="61">NULL<pos:position pos:line="45" pos:column="65"/></name></expr></argument>, <argument><expr><call><name pos:line="45" pos:column="67">APLOGNO<pos:position pos:line="45" pos:column="74"/></name><argument_list pos:line="45" pos:column="74">(<argument><expr><literal type="number" pos:line="45" pos:column="75">00104<pos:position pos:line="45" pos:column="80"/></literal></expr></argument>)<pos:position pos:line="45" pos:column="81"/></argument_list></call>
                         <literal type="string" pos:line="46" pos:column="26">"unable to start piped log program '%s'"<pos:position pos:line="46" pos:column="66"/></literal></expr></argument>,
                         <argument><expr><name><name pos:line="47" pos:column="26">pl<pos:position pos:line="47" pos:column="28"/></name><operator pos:line="47" pos:column="28">-&gt;<pos:position pos:line="47" pos:column="33"/></operator><name pos:line="47" pos:column="30">program<pos:position pos:line="47" pos:column="37"/></name></name></expr></argument>)<pos:position pos:line="47" pos:column="38"/></argument_list></call></expr>;<pos:position pos:line="47" pos:column="39"/></expr_stmt>
        }<pos:position pos:line="48" pos:column="10"/></block></else></if>
    }<pos:position pos:line="49" pos:column="6"/></block></else></if>

    <return pos:line="51" pos:column="5">return <expr><name pos:line="51" pos:column="12">status<pos:position pos:line="51" pos:column="18"/></name></expr>;<pos:position pos:line="51" pos:column="19"/></return>
}<pos:position pos:line="52" pos:column="2"/></block></function></unit>

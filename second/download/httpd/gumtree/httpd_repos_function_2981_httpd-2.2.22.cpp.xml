<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/httpd/gumtree/httpd_repos_function_2981_httpd-2.2.22.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><specifier pos:line="1" pos:column="8">const<pos:position pos:line="1" pos:column="13"/></specifier> <name pos:line="1" pos:column="14">char<pos:position pos:line="1" pos:column="18"/></name> <modifier pos:line="1" pos:column="19">*<pos:position pos:line="1" pos:column="20"/></modifier></type><name pos:line="1" pos:column="20">dbd_mysql_get_name<pos:position pos:line="1" pos:column="38"/></name><parameter_list pos:line="1" pos:column="38">(<parameter><decl><type><specifier pos:line="1" pos:column="39">const<pos:position pos:line="1" pos:column="44"/></specifier> <name pos:line="1" pos:column="45">apr_dbd_results_t<pos:position pos:line="1" pos:column="62"/></name> <modifier pos:line="1" pos:column="63">*<pos:position pos:line="1" pos:column="64"/></modifier></type><name pos:line="1" pos:column="64">res<pos:position pos:line="1" pos:column="67"/></name></decl></parameter>, <parameter><decl><type><name pos:line="1" pos:column="69">int<pos:position pos:line="1" pos:column="72"/></name></type> <name pos:line="1" pos:column="73">n<pos:position pos:line="1" pos:column="74"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="75"/></parameter_list>
<block pos:line="2" pos:column="1">{
    <if pos:line="3" pos:column="5">if <condition pos:line="3" pos:column="8">(<expr><operator pos:line="3" pos:column="9">(<pos:position pos:line="3" pos:column="10"/></operator><name pos:line="3" pos:column="10">n<pos:position pos:line="3" pos:column="11"/></name> <operator pos:line="3" pos:column="12">&lt;<pos:position pos:line="3" pos:column="16"/></operator> <literal type="number" pos:line="3" pos:column="14">0<pos:position pos:line="3" pos:column="15"/></literal><operator pos:line="3" pos:column="15">)<pos:position pos:line="3" pos:column="16"/></operator> <operator pos:line="3" pos:column="17">||<pos:position pos:line="3" pos:column="19"/></operator> <operator pos:line="3" pos:column="20">(<pos:position pos:line="3" pos:column="21"/></operator><name pos:line="3" pos:column="21">n<pos:position pos:line="3" pos:column="22"/></name> <operator pos:line="3" pos:column="23">&gt;=<pos:position pos:line="3" pos:column="28"/></operator> <operator pos:line="3" pos:column="26">(<pos:position pos:line="3" pos:column="27"/></operator><name pos:line="3" pos:column="27">int<pos:position pos:line="3" pos:column="30"/></name><operator pos:line="3" pos:column="30">)<pos:position pos:line="3" pos:column="31"/></operator> <call><name pos:line="3" pos:column="32">mysql_num_fields<pos:position pos:line="3" pos:column="48"/></name><argument_list pos:line="3" pos:column="48">(<argument><expr><name><name pos:line="3" pos:column="49">res<pos:position pos:line="3" pos:column="52"/></name><operator pos:line="3" pos:column="52">-&gt;<pos:position pos:line="3" pos:column="57"/></operator><name pos:line="3" pos:column="54">res<pos:position pos:line="3" pos:column="57"/></name></name></expr></argument>)<pos:position pos:line="3" pos:column="58"/></argument_list></call><operator pos:line="3" pos:column="58">)<pos:position pos:line="3" pos:column="59"/></operator></expr>)<pos:position pos:line="3" pos:column="60"/></condition><then pos:line="3" pos:column="60"> <block pos:line="3" pos:column="61">{
        <return pos:line="4" pos:column="9">return <expr><name pos:line="4" pos:column="16">NULL<pos:position pos:line="4" pos:column="20"/></name></expr>;<pos:position pos:line="4" pos:column="21"/></return>
    }<pos:position pos:line="5" pos:column="6"/></block></then></if>

    <return pos:line="7" pos:column="5">return <expr><call><name pos:line="7" pos:column="12">mysql_fetch_fields<pos:position pos:line="7" pos:column="30"/></name><argument_list pos:line="7" pos:column="30">(<argument><expr><name><name pos:line="7" pos:column="31">res<pos:position pos:line="7" pos:column="34"/></name><operator pos:line="7" pos:column="34">-&gt;<pos:position pos:line="7" pos:column="39"/></operator><name pos:line="7" pos:column="36">res<pos:position pos:line="7" pos:column="39"/></name></name></expr></argument>)<pos:position pos:line="7" pos:column="40"/></argument_list></call><index pos:line="7" pos:column="40">[<expr><name pos:line="7" pos:column="41">n<pos:position pos:line="7" pos:column="42"/></name></expr>]<pos:position pos:line="7" pos:column="43"/></index><operator pos:line="7" pos:column="43">.<pos:position pos:line="7" pos:column="44"/></operator><name pos:line="7" pos:column="44">name<pos:position pos:line="7" pos:column="48"/></name></expr>;<pos:position pos:line="7" pos:column="49"/></return>
}<pos:position pos:line="8" pos:column="2"/></block></function></unit>

<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/httpd/gumtree/httpd_repos_function_2550_httpd-2.2.4.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">int<pos:position pos:line="1" pos:column="11"/></name></type> <name pos:line="1" pos:column="12">invalid_op<pos:position pos:line="1" pos:column="22"/></name><parameter_list pos:line="1" pos:column="22">(<parameter><decl><type><name pos:line="1" pos:column="23">apr_pool_t<pos:position pos:line="1" pos:column="33"/></name><modifier pos:line="1" pos:column="33">*<pos:position pos:line="1" pos:column="34"/></modifier></type> <name pos:line="1" pos:column="35">pool<pos:position pos:line="1" pos:column="39"/></name></decl></parameter>, <parameter><decl><type><name pos:line="1" pos:column="41">apr_dbd_t<pos:position pos:line="1" pos:column="50"/></name><modifier pos:line="1" pos:column="50">*<pos:position pos:line="1" pos:column="51"/></modifier></type> <name pos:line="1" pos:column="52">handle<pos:position pos:line="1" pos:column="58"/></name></decl></parameter>,
                      <parameter><decl><type><specifier pos:line="2" pos:column="23">const<pos:position pos:line="2" pos:column="28"/></specifier> <name pos:line="2" pos:column="29">apr_dbd_driver_t<pos:position pos:line="2" pos:column="45"/></name><modifier pos:line="2" pos:column="45">*<pos:position pos:line="2" pos:column="46"/></modifier></type> <name pos:line="2" pos:column="47">driver<pos:position pos:line="2" pos:column="53"/></name></decl></parameter>)<pos:position pos:line="2" pos:column="54"/></parameter_list>
<block pos:line="3" pos:column="1">{
    <decl_stmt><decl><type><name pos:line="4" pos:column="5">int<pos:position pos:line="4" pos:column="8"/></name></type> <name pos:line="4" pos:column="9">rv<pos:position pos:line="4" pos:column="11"/></name> <init pos:line="4" pos:column="12">= <expr><literal type="number" pos:line="4" pos:column="14">0<pos:position pos:line="4" pos:column="15"/></literal></expr></init></decl>;<pos:position pos:line="4" pos:column="16"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="5" pos:column="5">int<pos:position pos:line="5" pos:column="8"/></name></type> <name pos:line="5" pos:column="9">nrows<pos:position pos:line="5" pos:column="14"/></name></decl>;<pos:position pos:line="5" pos:column="15"/></decl_stmt>
    <decl_stmt><decl><type><specifier pos:line="6" pos:column="5">const<pos:position pos:line="6" pos:column="10"/></specifier> <name pos:line="6" pos:column="11">char<pos:position pos:line="6" pos:column="15"/></name> <modifier pos:line="6" pos:column="16">*<pos:position pos:line="6" pos:column="17"/></modifier></type><name pos:line="6" pos:column="17">statement<pos:position pos:line="6" pos:column="26"/></name> <init pos:line="6" pos:column="27">= <expr><literal type="string" pos:line="6" pos:column="29">"INSERT into apr_dbd_test1 (col2) values ('foo')"<pos:position pos:line="6" pos:column="78"/></literal></expr></init></decl> ;<pos:position pos:line="6" pos:column="80"/></decl_stmt>
    <expr_stmt><expr><name pos:line="7" pos:column="5">rv<pos:position pos:line="7" pos:column="7"/></name> <operator pos:line="7" pos:column="8">=<pos:position pos:line="7" pos:column="9"/></operator> <call><name pos:line="7" pos:column="10">apr_dbd_query<pos:position pos:line="7" pos:column="23"/></name><argument_list pos:line="7" pos:column="23">(<argument><expr><name pos:line="7" pos:column="24">driver<pos:position pos:line="7" pos:column="30"/></name></expr></argument>, <argument><expr><name pos:line="7" pos:column="32">handle<pos:position pos:line="7" pos:column="38"/></name></expr></argument>, <argument><expr><operator pos:line="7" pos:column="40">&amp;<pos:position pos:line="7" pos:column="45"/></operator><name pos:line="7" pos:column="41">nrows<pos:position pos:line="7" pos:column="46"/></name></expr></argument>, <argument><expr><name pos:line="7" pos:column="48">statement<pos:position pos:line="7" pos:column="57"/></name></expr></argument>)<pos:position pos:line="7" pos:column="58"/></argument_list></call></expr>;<pos:position pos:line="7" pos:column="59"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="8" pos:column="5">printf<pos:position pos:line="8" pos:column="11"/></name><argument_list pos:line="8" pos:column="11">(<argument><expr><literal type="string" pos:line="8" pos:column="12">"invalid op returned %d (should be nonzero).  Error msg follows\n"<pos:position pos:line="8" pos:column="78"/></literal></expr></argument>, <argument><expr><name pos:line="8" pos:column="80">rv<pos:position pos:line="8" pos:column="82"/></name></expr></argument>)<pos:position pos:line="8" pos:column="83"/></argument_list></call></expr>;<pos:position pos:line="8" pos:column="84"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="9" pos:column="5">printf<pos:position pos:line="9" pos:column="11"/></name><argument_list pos:line="9" pos:column="11">(<argument><expr><literal type="string" pos:line="9" pos:column="12">"'%s'\n"<pos:position pos:line="9" pos:column="20"/></literal></expr></argument>, <argument><expr><call><name pos:line="9" pos:column="22">apr_dbd_error<pos:position pos:line="9" pos:column="35"/></name><argument_list pos:line="9" pos:column="35">(<argument><expr><name pos:line="9" pos:column="36">driver<pos:position pos:line="9" pos:column="42"/></name></expr></argument>, <argument><expr><name pos:line="9" pos:column="44">handle<pos:position pos:line="9" pos:column="50"/></name></expr></argument>, <argument><expr><name pos:line="9" pos:column="52">rv<pos:position pos:line="9" pos:column="54"/></name></expr></argument>)<pos:position pos:line="9" pos:column="55"/></argument_list></call></expr></argument>)<pos:position pos:line="9" pos:column="56"/></argument_list></call></expr>;<pos:position pos:line="9" pos:column="57"/></expr_stmt>
    <expr_stmt><expr><name pos:line="10" pos:column="5">statement<pos:position pos:line="10" pos:column="14"/></name> <operator pos:line="10" pos:column="15">=<pos:position pos:line="10" pos:column="16"/></operator> <literal type="string" pos:line="10" pos:column="17">"INSERT into apr_dbd_test (col1, col2) values ('bar', 'foo')"<pos:position pos:line="10" pos:column="78"/></literal></expr> ;<pos:position pos:line="10" pos:column="80"/></expr_stmt>
    <expr_stmt><expr><name pos:line="11" pos:column="5">rv<pos:position pos:line="11" pos:column="7"/></name> <operator pos:line="11" pos:column="8">=<pos:position pos:line="11" pos:column="9"/></operator> <call><name pos:line="11" pos:column="10">apr_dbd_query<pos:position pos:line="11" pos:column="23"/></name><argument_list pos:line="11" pos:column="23">(<argument><expr><name pos:line="11" pos:column="24">driver<pos:position pos:line="11" pos:column="30"/></name></expr></argument>, <argument><expr><name pos:line="11" pos:column="32">handle<pos:position pos:line="11" pos:column="38"/></name></expr></argument>, <argument><expr><operator pos:line="11" pos:column="40">&amp;<pos:position pos:line="11" pos:column="45"/></operator><name pos:line="11" pos:column="41">nrows<pos:position pos:line="11" pos:column="46"/></name></expr></argument>, <argument><expr><name pos:line="11" pos:column="48">statement<pos:position pos:line="11" pos:column="57"/></name></expr></argument>)<pos:position pos:line="11" pos:column="58"/></argument_list></call></expr>;<pos:position pos:line="11" pos:column="59"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="12" pos:column="5">printf<pos:position pos:line="12" pos:column="11"/></name><argument_list pos:line="12" pos:column="11">(<argument><expr><literal type="string" pos:line="12" pos:column="12">"valid op returned %d (should be zero; error shouldn't affect subsequent ops)\n"<pos:position pos:line="12" pos:column="92"/></literal></expr></argument>, <argument><expr><name pos:line="12" pos:column="94">rv<pos:position pos:line="12" pos:column="96"/></name></expr></argument>)<pos:position pos:line="12" pos:column="97"/></argument_list></call></expr>;<pos:position pos:line="12" pos:column="98"/></expr_stmt>
    <return pos:line="13" pos:column="5">return <expr><name pos:line="13" pos:column="12">rv<pos:position pos:line="13" pos:column="14"/></name></expr>;<pos:position pos:line="13" pos:column="15"/></return>
}<pos:position pos:line="14" pos:column="2"/></block></function></unit>

<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/httpd/gumtree/httpd_repos_function_3764_httpd-2.2.23.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">int<pos:position pos:line="1" pos:column="4"/></name></type> <name pos:line="1" pos:column="5">main<pos:position pos:line="1" pos:column="9"/></name><parameter_list pos:line="1" pos:column="9">(<parameter><decl><type><name pos:line="1" pos:column="10">int<pos:position pos:line="1" pos:column="13"/></name></type> <name pos:line="1" pos:column="14">argc<pos:position pos:line="1" pos:column="18"/></name></decl></parameter>, <parameter><decl><type><name pos:line="1" pos:column="20">char<pos:position pos:line="1" pos:column="24"/></name> <modifier pos:line="1" pos:column="25">*<pos:position pos:line="1" pos:column="26"/></modifier></type><name><name pos:line="1" pos:column="26">argv<pos:position pos:line="1" pos:column="30"/></name><index pos:line="1" pos:column="30">[]<pos:position pos:line="1" pos:column="32"/></index></name></decl></parameter>)<pos:position pos:line="1" pos:column="33"/></parameter_list> <block pos:line="1" pos:column="34">{
<comment type="block" pos:line="2" pos:column="1">/* we expect the following...
 * 
 * argv[0] = this stub
 * argv[1] = directory to run in...
 * argv[2] = progname to execute
 * rest of arguments to be passed to program
 */</comment>
	<decl_stmt><decl><type><name pos:line="9" pos:column="9">char<pos:position pos:line="9" pos:column="13"/></name> <modifier pos:line="9" pos:column="14">*<pos:position pos:line="9" pos:column="15"/></modifier></type><name pos:line="9" pos:column="15">progname<pos:position pos:line="9" pos:column="23"/></name> <init pos:line="9" pos:column="24">= <expr><name><name pos:line="9" pos:column="26">argv<pos:position pos:line="9" pos:column="30"/></name><index pos:line="9" pos:column="30">[<expr><literal type="number" pos:line="9" pos:column="31">2<pos:position pos:line="9" pos:column="32"/></literal></expr>]<pos:position pos:line="9" pos:column="33"/></index></name></expr></init></decl>;<pos:position pos:line="9" pos:column="34"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="10" pos:column="9">char<pos:position pos:line="10" pos:column="13"/></name> <modifier pos:line="10" pos:column="14">*<pos:position pos:line="10" pos:column="15"/></modifier></type><name pos:line="10" pos:column="15">directory<pos:position pos:line="10" pos:column="24"/></name> <init pos:line="10" pos:column="25">= <expr><name><name pos:line="10" pos:column="27">argv<pos:position pos:line="10" pos:column="31"/></name><index pos:line="10" pos:column="31">[<expr><literal type="number" pos:line="10" pos:column="32">1<pos:position pos:line="10" pos:column="33"/></literal></expr>]<pos:position pos:line="10" pos:column="34"/></index></name></expr></init></decl>;<pos:position pos:line="10" pos:column="35"/></decl_stmt>
	<decl_stmt><decl><type><name><name pos:line="11" pos:column="9">struct<pos:position pos:line="11" pos:column="15"/></name> <name pos:line="11" pos:column="16">pipefd<pos:position pos:line="11" pos:column="22"/></name></name> <modifier pos:line="11" pos:column="23">*<pos:position pos:line="11" pos:column="24"/></modifier></type><name pos:line="11" pos:column="24">pfd<pos:position pos:line="11" pos:column="27"/></name></decl>;<pos:position pos:line="11" pos:column="28"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="12" pos:column="9">thread_id<pos:position pos:line="12" pos:column="18"/></name></type> <name pos:line="12" pos:column="19">sender<pos:position pos:line="12" pos:column="25"/></name></decl>;<pos:position pos:line="12" pos:column="26"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="13" pos:column="9">void<pos:position pos:line="13" pos:column="13"/></name> <modifier pos:line="13" pos:column="14">*<pos:position pos:line="13" pos:column="15"/></modifier></type><name pos:line="13" pos:column="15">buffer<pos:position pos:line="13" pos:column="21"/></name></decl>;<pos:position pos:line="13" pos:column="22"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="14" pos:column="9">char<pos:position pos:line="14" pos:column="13"/></name> <modifier pos:line="14" pos:column="14">*<pos:position pos:line="14" pos:column="15"/></modifier><modifier pos:line="14" pos:column="15">*<pos:position pos:line="14" pos:column="16"/></modifier></type> <name pos:line="14" pos:column="17">newargs<pos:position pos:line="14" pos:column="24"/></name></decl>;<pos:position pos:line="14" pos:column="25"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="15" pos:column="9">int<pos:position pos:line="15" pos:column="12"/></name></type> <name pos:line="15" pos:column="13">i<pos:position pos:line="15" pos:column="14"/></name> <init pos:line="15" pos:column="15">= <expr><literal type="number" pos:line="15" pos:column="17">0<pos:position pos:line="15" pos:column="18"/></literal></expr></init></decl>;<pos:position pos:line="15" pos:column="19"/></decl_stmt>
	
	<expr_stmt><expr><name pos:line="17" pos:column="9">newargs<pos:position pos:line="17" pos:column="16"/></name> <operator pos:line="17" pos:column="17">=<pos:position pos:line="17" pos:column="18"/></operator> <operator pos:line="17" pos:column="19">(<pos:position pos:line="17" pos:column="20"/></operator><name pos:line="17" pos:column="20">char<pos:position pos:line="17" pos:column="24"/></name><operator pos:line="17" pos:column="24">*<pos:position pos:line="17" pos:column="25"/></operator><operator pos:line="17" pos:column="25">*<pos:position pos:line="17" pos:column="26"/></operator><operator pos:line="17" pos:column="26">)<pos:position pos:line="17" pos:column="27"/></operator><call><name pos:line="17" pos:column="27">malloc<pos:position pos:line="17" pos:column="33"/></name><argument_list pos:line="17" pos:column="33">(<argument><expr><sizeof pos:line="17" pos:column="34">sizeof<argument_list pos:line="17" pos:column="40">(<argument><expr><name pos:line="17" pos:column="41">char<pos:position pos:line="17" pos:column="45"/></name><operator pos:line="17" pos:column="45">*<pos:position pos:line="17" pos:column="46"/></operator></expr></argument>)<pos:position pos:line="17" pos:column="47"/></argument_list></sizeof> <operator pos:line="17" pos:column="48">*<pos:position pos:line="17" pos:column="49"/></operator> <operator pos:line="17" pos:column="50">(<pos:position pos:line="17" pos:column="51"/></operator><name pos:line="17" pos:column="51">argc<pos:position pos:line="17" pos:column="55"/></name> <operator pos:line="17" pos:column="56">-<pos:position pos:line="17" pos:column="57"/></operator> <literal type="number" pos:line="17" pos:column="58">1<pos:position pos:line="17" pos:column="59"/></literal><operator pos:line="17" pos:column="59">)<pos:position pos:line="17" pos:column="60"/></operator></expr></argument>)<pos:position pos:line="17" pos:column="61"/></argument_list></call></expr>;<pos:position pos:line="17" pos:column="62"/></expr_stmt>
  
	<expr_stmt><expr><name pos:line="19" pos:column="9">buffer<pos:position pos:line="19" pos:column="15"/></name> <operator pos:line="19" pos:column="16">=<pos:position pos:line="19" pos:column="17"/></operator> <operator pos:line="19" pos:column="18">(<pos:position pos:line="19" pos:column="19"/></operator><name pos:line="19" pos:column="19">void<pos:position pos:line="19" pos:column="23"/></name><operator pos:line="19" pos:column="23">*<pos:position pos:line="19" pos:column="24"/></operator><operator pos:line="19" pos:column="24">)<pos:position pos:line="19" pos:column="25"/></operator><call><name pos:line="19" pos:column="25">malloc<pos:position pos:line="19" pos:column="31"/></name><argument_list pos:line="19" pos:column="31">(<argument><expr><sizeof pos:line="19" pos:column="32">sizeof<argument_list pos:line="19" pos:column="38">(<argument><expr pos:line="19" pos:column="39">struct <name pos:line="19" pos:column="46">pipefd<pos:position pos:line="19" pos:column="52"/></name></expr></argument>)<pos:position pos:line="19" pos:column="53"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="19" pos:column="54"/></argument_list></call></expr>;<pos:position pos:line="19" pos:column="55"/></expr_stmt>
	<comment type="block" pos:line="20" pos:column="9">/* this will block until we get the data */</comment>
	<expr_stmt><expr><call><name pos:line="21" pos:column="9">receive_data<pos:position pos:line="21" pos:column="21"/></name><argument_list pos:line="21" pos:column="21">(<argument><expr><operator pos:line="21" pos:column="22">&amp;<pos:position pos:line="21" pos:column="27"/></operator><name pos:line="21" pos:column="23">sender<pos:position pos:line="21" pos:column="29"/></name></expr></argument>, <argument><expr><name pos:line="21" pos:column="31">buffer<pos:position pos:line="21" pos:column="37"/></name></expr></argument>, <argument><expr><sizeof pos:line="21" pos:column="39">sizeof<argument_list pos:line="21" pos:column="45">(<argument><expr pos:line="21" pos:column="46">struct <name pos:line="21" pos:column="53">pipefd<pos:position pos:line="21" pos:column="59"/></name></expr></argument>)<pos:position pos:line="21" pos:column="60"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="21" pos:column="61"/></argument_list></call></expr>;<pos:position pos:line="21" pos:column="62"/></expr_stmt>
	<expr_stmt><expr><name pos:line="22" pos:column="9">pfd<pos:position pos:line="22" pos:column="12"/></name> <operator pos:line="22" pos:column="13">=<pos:position pos:line="22" pos:column="14"/></operator> <operator pos:line="22" pos:column="15">(<pos:position pos:line="22" pos:column="16"/></operator>struct <name pos:line="22" pos:column="23">pipefd<pos:position pos:line="22" pos:column="29"/></name><operator pos:line="22" pos:column="29">*<pos:position pos:line="22" pos:column="30"/></operator><operator pos:line="22" pos:column="30">)<pos:position pos:line="22" pos:column="31"/></operator><name pos:line="22" pos:column="31">buffer<pos:position pos:line="22" pos:column="37"/></name></expr>;<pos:position pos:line="22" pos:column="38"/></expr_stmt>
	
	<if pos:line="24" pos:column="9">if <condition pos:line="24" pos:column="12">(<expr><name><name pos:line="24" pos:column="13">pfd<pos:position pos:line="24" pos:column="16"/></name><operator pos:line="24" pos:column="16">-&gt;<pos:position pos:line="24" pos:column="21"/></operator><name pos:line="24" pos:column="18">in<pos:position pos:line="24" pos:column="20"/></name></name> <operator pos:line="24" pos:column="21">&gt;<pos:position pos:line="24" pos:column="25"/></operator> <name pos:line="24" pos:column="23">STDERR_FILENO<pos:position pos:line="24" pos:column="36"/></name></expr>)<pos:position pos:line="24" pos:column="37"/></condition><then pos:line="24" pos:column="37"> <block pos:line="24" pos:column="38">{
		<if pos:line="25" pos:column="17">if <condition pos:line="25" pos:column="20">(<expr><call><name pos:line="25" pos:column="21">dup2<pos:position pos:line="25" pos:column="25"/></name><argument_list pos:line="25" pos:column="25">(<argument><expr><name><name pos:line="25" pos:column="26">pfd<pos:position pos:line="25" pos:column="29"/></name><operator pos:line="25" pos:column="29">-&gt;<pos:position pos:line="25" pos:column="34"/></operator><name pos:line="25" pos:column="31">in<pos:position pos:line="25" pos:column="33"/></name></name></expr></argument>, <argument><expr><name pos:line="25" pos:column="35">STDIN_FILENO<pos:position pos:line="25" pos:column="47"/></name></expr></argument>)<pos:position pos:line="25" pos:column="48"/></argument_list></call> <operator pos:line="25" pos:column="49">!=<pos:position pos:line="25" pos:column="51"/></operator> <name pos:line="25" pos:column="52">STDIN_FILENO<pos:position pos:line="25" pos:column="64"/></name></expr>)<pos:position pos:line="25" pos:column="65"/></condition><then pos:line="25" pos:column="65"> <block type="pseudo"><return pos:line="25" pos:column="66">return <expr><operator pos:line="25" pos:column="73">(<pos:position pos:line="25" pos:column="74"/></operator><operator pos:line="25" pos:column="74">-<pos:position pos:line="25" pos:column="75"/></operator><literal type="number" pos:line="25" pos:column="75">1<pos:position pos:line="25" pos:column="76"/></literal><operator pos:line="25" pos:column="76">)<pos:position pos:line="25" pos:column="77"/></operator></expr>;<pos:position pos:line="25" pos:column="78"/></return></block></then></if>
	    <expr_stmt><expr><call><name pos:line="26" pos:column="13">close<pos:position pos:line="26" pos:column="18"/></name> <argument_list pos:line="26" pos:column="19">(<argument><expr><name><name pos:line="26" pos:column="20">pfd<pos:position pos:line="26" pos:column="23"/></name><operator pos:line="26" pos:column="23">-&gt;<pos:position pos:line="26" pos:column="28"/></operator><name pos:line="26" pos:column="25">in<pos:position pos:line="26" pos:column="27"/></name></name></expr></argument>)<pos:position pos:line="26" pos:column="28"/></argument_list></call></expr>;<pos:position pos:line="26" pos:column="29"/></expr_stmt>
	}<pos:position pos:line="27" pos:column="10"/></block></then></if>
	<if pos:line="28" pos:column="9">if <condition pos:line="28" pos:column="12">(<expr><name><name pos:line="28" pos:column="13">pfd<pos:position pos:line="28" pos:column="16"/></name><operator pos:line="28" pos:column="16">-&gt;<pos:position pos:line="28" pos:column="21"/></operator><name pos:line="28" pos:column="18">out<pos:position pos:line="28" pos:column="21"/></name></name> <operator pos:line="28" pos:column="22">&gt;<pos:position pos:line="28" pos:column="26"/></operator> <name pos:line="28" pos:column="24">STDERR_FILENO<pos:position pos:line="28" pos:column="37"/></name></expr>)<pos:position pos:line="28" pos:column="38"/></condition><then pos:line="28" pos:column="38"> <block pos:line="28" pos:column="39">{
		<if pos:line="29" pos:column="17">if <condition pos:line="29" pos:column="20">(<expr><call><name pos:line="29" pos:column="21">dup2<pos:position pos:line="29" pos:column="25"/></name><argument_list pos:line="29" pos:column="25">(<argument><expr><name><name pos:line="29" pos:column="26">pfd<pos:position pos:line="29" pos:column="29"/></name><operator pos:line="29" pos:column="29">-&gt;<pos:position pos:line="29" pos:column="34"/></operator><name pos:line="29" pos:column="31">out<pos:position pos:line="29" pos:column="34"/></name></name></expr></argument>, <argument><expr><name pos:line="29" pos:column="36">STDOUT_FILENO<pos:position pos:line="29" pos:column="49"/></name></expr></argument>)<pos:position pos:line="29" pos:column="50"/></argument_list></call> <operator pos:line="29" pos:column="51">!=<pos:position pos:line="29" pos:column="53"/></operator> <name pos:line="29" pos:column="54">STDOUT_FILENO<pos:position pos:line="29" pos:column="67"/></name></expr>)<pos:position pos:line="29" pos:column="68"/></condition><then pos:line="29" pos:column="68"> <block type="pseudo"><return pos:line="29" pos:column="69">return <expr><operator pos:line="29" pos:column="76">(<pos:position pos:line="29" pos:column="77"/></operator><operator pos:line="29" pos:column="77">-<pos:position pos:line="29" pos:column="78"/></operator><literal type="number" pos:line="29" pos:column="78">1<pos:position pos:line="29" pos:column="79"/></literal><operator pos:line="29" pos:column="79">)<pos:position pos:line="29" pos:column="80"/></operator></expr>;<pos:position pos:line="29" pos:column="81"/></return></block></then></if>
	    <expr_stmt><expr><call><name pos:line="30" pos:column="13">close<pos:position pos:line="30" pos:column="18"/></name> <argument_list pos:line="30" pos:column="19">(<argument><expr><name><name pos:line="30" pos:column="20">pfd<pos:position pos:line="30" pos:column="23"/></name><operator pos:line="30" pos:column="23">-&gt;<pos:position pos:line="30" pos:column="28"/></operator><name pos:line="30" pos:column="25">out<pos:position pos:line="30" pos:column="28"/></name></name></expr></argument>)<pos:position pos:line="30" pos:column="29"/></argument_list></call></expr>;<pos:position pos:line="30" pos:column="30"/></expr_stmt>
	}<pos:position pos:line="31" pos:column="10"/></block></then></if>
	<if pos:line="32" pos:column="9">if <condition pos:line="32" pos:column="12">(<expr><name><name pos:line="32" pos:column="13">pfd<pos:position pos:line="32" pos:column="16"/></name><operator pos:line="32" pos:column="16">-&gt;<pos:position pos:line="32" pos:column="21"/></operator><name pos:line="32" pos:column="18">err<pos:position pos:line="32" pos:column="21"/></name></name> <operator pos:line="32" pos:column="22">&gt;<pos:position pos:line="32" pos:column="26"/></operator> <name pos:line="32" pos:column="24">STDERR_FILENO<pos:position pos:line="32" pos:column="37"/></name></expr>)<pos:position pos:line="32" pos:column="38"/></condition><then pos:line="32" pos:column="38"> <block pos:line="32" pos:column="39">{
		<if pos:line="33" pos:column="17">if <condition pos:line="33" pos:column="20">(<expr><call><name pos:line="33" pos:column="21">dup2<pos:position pos:line="33" pos:column="25"/></name><argument_list pos:line="33" pos:column="25">(<argument><expr><name><name pos:line="33" pos:column="26">pfd<pos:position pos:line="33" pos:column="29"/></name><operator pos:line="33" pos:column="29">-&gt;<pos:position pos:line="33" pos:column="34"/></operator><name pos:line="33" pos:column="31">err<pos:position pos:line="33" pos:column="34"/></name></name></expr></argument>, <argument><expr><name pos:line="33" pos:column="36">STDERR_FILENO<pos:position pos:line="33" pos:column="49"/></name></expr></argument>)<pos:position pos:line="33" pos:column="50"/></argument_list></call> <operator pos:line="33" pos:column="51">!=<pos:position pos:line="33" pos:column="53"/></operator> <name pos:line="33" pos:column="54">STDERR_FILENO<pos:position pos:line="33" pos:column="67"/></name></expr>)<pos:position pos:line="33" pos:column="68"/></condition><then pos:line="33" pos:column="68"> <block type="pseudo"><return pos:line="33" pos:column="69">return <expr><operator pos:line="33" pos:column="76">(<pos:position pos:line="33" pos:column="77"/></operator><operator pos:line="33" pos:column="77">-<pos:position pos:line="33" pos:column="78"/></operator><literal type="number" pos:line="33" pos:column="78">1<pos:position pos:line="33" pos:column="79"/></literal><operator pos:line="33" pos:column="79">)<pos:position pos:line="33" pos:column="80"/></operator></expr>;<pos:position pos:line="33" pos:column="81"/></return></block></then></if>
	    <expr_stmt><expr><call><name pos:line="34" pos:column="13">close<pos:position pos:line="34" pos:column="18"/></name> <argument_list pos:line="34" pos:column="19">(<argument><expr><name><name pos:line="34" pos:column="20">pfd<pos:position pos:line="34" pos:column="23"/></name><operator pos:line="34" pos:column="23">-&gt;<pos:position pos:line="34" pos:column="28"/></operator><name pos:line="34" pos:column="25">err<pos:position pos:line="34" pos:column="28"/></name></name></expr></argument>)<pos:position pos:line="34" pos:column="29"/></argument_list></call></expr>;<pos:position pos:line="34" pos:column="30"/></expr_stmt>
	}<pos:position pos:line="35" pos:column="10"/></block></then></if>

	<for pos:line="37" pos:column="9">for	<control pos:line="37" pos:column="17">(<init><expr><name pos:line="37" pos:column="18">i<pos:position pos:line="37" pos:column="19"/></name><operator pos:line="37" pos:column="19">=<pos:position pos:line="37" pos:column="20"/></operator><literal type="number" pos:line="37" pos:column="20">3<pos:position pos:line="37" pos:column="21"/></literal></expr>;<pos:position pos:line="37" pos:column="22"/></init><condition><expr><name pos:line="37" pos:column="22">i<pos:position pos:line="37" pos:column="23"/></name><operator pos:line="37" pos:column="23">&lt;=<pos:position pos:line="37" pos:column="28"/></operator><name pos:line="37" pos:column="25">argc<pos:position pos:line="37" pos:column="29"/></name></expr>;<pos:position pos:line="37" pos:column="30"/></condition><incr><expr><name pos:line="37" pos:column="30">i<pos:position pos:line="37" pos:column="31"/></name><operator pos:line="37" pos:column="31">++<pos:position pos:line="37" pos:column="33"/></operator></expr></incr>)<pos:position pos:line="37" pos:column="34"/></control><block pos:line="37" pos:column="34">{
	    <expr_stmt><expr><name><name pos:line="38" pos:column="13">newargs<pos:position pos:line="38" pos:column="20"/></name><index pos:line="38" pos:column="20">[<expr><name pos:line="38" pos:column="21">i<pos:position pos:line="38" pos:column="22"/></name><operator pos:line="38" pos:column="22">-<pos:position pos:line="38" pos:column="23"/></operator><literal type="number" pos:line="38" pos:column="23">3<pos:position pos:line="38" pos:column="24"/></literal></expr>]<pos:position pos:line="38" pos:column="25"/></index></name> <operator pos:line="38" pos:column="26">=<pos:position pos:line="38" pos:column="27"/></operator> <name><name pos:line="38" pos:column="28">argv<pos:position pos:line="38" pos:column="32"/></name><index pos:line="38" pos:column="32">[<expr><name pos:line="38" pos:column="33">i<pos:position pos:line="38" pos:column="34"/></name></expr>]<pos:position pos:line="38" pos:column="35"/></index></name></expr>;<pos:position pos:line="38" pos:column="36"/></expr_stmt>
	}<pos:position pos:line="39" pos:column="10"/></block></for>
	
	<comment type="block" pos:line="41" pos:column="9">/* tell the caller we're OK to start */</comment>
	<expr_stmt><expr><call><name pos:line="42" pos:column="9">send_data<pos:position pos:line="42" pos:column="18"/></name><argument_list pos:line="42" pos:column="18">(<argument><expr><name pos:line="42" pos:column="19">sender<pos:position pos:line="42" pos:column="25"/></name></expr></argument>,<argument><expr><literal type="number" pos:line="42" pos:column="26">1<pos:position pos:line="42" pos:column="27"/></literal></expr></argument>,<argument><expr><name pos:line="42" pos:column="28">NULL<pos:position pos:line="42" pos:column="32"/></name></expr></argument>,<argument><expr><literal type="number" pos:line="42" pos:column="33">0<pos:position pos:line="42" pos:column="34"/></literal></expr></argument>)<pos:position pos:line="42" pos:column="35"/></argument_list></call></expr>;<pos:position pos:line="42" pos:column="36"/></expr_stmt>

	<if pos:line="44" pos:column="9">if <condition pos:line="44" pos:column="12">(<expr><name pos:line="44" pos:column="13">directory<pos:position pos:line="44" pos:column="22"/></name> <operator pos:line="44" pos:column="23">!=<pos:position pos:line="44" pos:column="25"/></operator> <name pos:line="44" pos:column="26">NULL<pos:position pos:line="44" pos:column="30"/></name></expr>)<pos:position pos:line="44" pos:column="31"/></condition><then pos:line="44" pos:column="31">
		<block type="pseudo"><expr_stmt><expr><call><name pos:line="45" pos:column="17">chdir<pos:position pos:line="45" pos:column="22"/></name><argument_list pos:line="45" pos:column="22">(<argument><expr><name pos:line="45" pos:column="23">directory<pos:position pos:line="45" pos:column="32"/></name></expr></argument>)<pos:position pos:line="45" pos:column="33"/></argument_list></call></expr>;<pos:position pos:line="45" pos:column="34"/></expr_stmt></block></then></if>
	<expr_stmt><expr><call><name pos:line="46" pos:column="9">execve<pos:position pos:line="46" pos:column="15"/></name> <argument_list pos:line="46" pos:column="16">(<argument><expr><name pos:line="46" pos:column="17">progname<pos:position pos:line="46" pos:column="25"/></name></expr></argument>, <argument><expr><name pos:line="46" pos:column="27">newargs<pos:position pos:line="46" pos:column="34"/></name></expr></argument>, <argument><expr><name pos:line="46" pos:column="36">environ<pos:position pos:line="46" pos:column="43"/></name></expr></argument>)<pos:position pos:line="46" pos:column="44"/></argument_list></call></expr>;<pos:position pos:line="46" pos:column="45"/></expr_stmt>

	<return pos:line="48" pos:column="9">return <expr><operator pos:line="48" pos:column="16">(<pos:position pos:line="48" pos:column="17"/></operator><operator pos:line="48" pos:column="17">-<pos:position pos:line="48" pos:column="18"/></operator><literal type="number" pos:line="48" pos:column="18">1<pos:position pos:line="48" pos:column="19"/></literal><operator pos:line="48" pos:column="19">)<pos:position pos:line="48" pos:column="20"/></operator></expr>;<pos:position pos:line="48" pos:column="21"/></return>
}<pos:position pos:line="49" pos:column="2"/></block></function></unit>

<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/httpd/gumtree/httpd_repos_function_2943_httpd-2.0.58.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">apr_status_t<pos:position pos:line="1" pos:column="13"/></name></type> <name pos:line="1" pos:column="14">filepath_root_case<pos:position pos:line="1" pos:column="32"/></name><parameter_list pos:line="1" pos:column="32">(<parameter><decl><type><name pos:line="1" pos:column="33">char<pos:position pos:line="1" pos:column="37"/></name> <modifier pos:line="1" pos:column="38">*<pos:position pos:line="1" pos:column="39"/></modifier><modifier pos:line="1" pos:column="39">*<pos:position pos:line="1" pos:column="40"/></modifier></type><name pos:line="1" pos:column="40">rootpath<pos:position pos:line="1" pos:column="48"/></name></decl></parameter>, <parameter><decl><type><name pos:line="1" pos:column="50">char<pos:position pos:line="1" pos:column="54"/></name> <modifier pos:line="1" pos:column="55">*<pos:position pos:line="1" pos:column="56"/></modifier></type><name pos:line="1" pos:column="56">root<pos:position pos:line="1" pos:column="60"/></name></decl></parameter>, <parameter><decl><type><name pos:line="1" pos:column="62">apr_pool_t<pos:position pos:line="1" pos:column="72"/></name> <modifier pos:line="1" pos:column="73">*<pos:position pos:line="1" pos:column="74"/></modifier></type><name pos:line="1" pos:column="74">p<pos:position pos:line="1" pos:column="75"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="76"/></parameter_list>
<block pos:line="2" pos:column="1">{
<cpp:if pos:line="3" pos:column="1">#<cpp:directive pos:line="3" pos:column="2">if<pos:position pos:line="3" pos:column="4"/></cpp:directive> <expr><name pos:line="3" pos:column="5">APR_HAS_UNICODE_FS<pos:position pos:line="3" pos:column="23"/></name></expr></cpp:if>
    <macro><name pos:line="4" pos:column="5">IF_WIN_OS_IS_UNICODE<pos:position pos:line="4" pos:column="25"/></name></macro>
    <block pos:line="5" pos:column="5">{
        <decl_stmt><decl><type><name pos:line="6" pos:column="9">apr_wchar_t<pos:position pos:line="6" pos:column="20"/></name> <modifier pos:line="6" pos:column="21">*<pos:position pos:line="6" pos:column="22"/></modifier></type><name pos:line="6" pos:column="22">ignored<pos:position pos:line="6" pos:column="29"/></name></decl>;<pos:position pos:line="6" pos:column="30"/></decl_stmt>
        <decl_stmt><decl><type><name pos:line="7" pos:column="9">apr_wchar_t<pos:position pos:line="7" pos:column="20"/></name></type> <name><name pos:line="7" pos:column="21">wpath<pos:position pos:line="7" pos:column="26"/></name><index pos:line="7" pos:column="26">[<expr><name pos:line="7" pos:column="27">APR_PATH_MAX<pos:position pos:line="7" pos:column="39"/></name></expr>]<pos:position pos:line="7" pos:column="40"/></index></name></decl>;<pos:position pos:line="7" pos:column="41"/></decl_stmt>
        <decl_stmt><decl><type><name pos:line="8" pos:column="9">apr_status_t<pos:position pos:line="8" pos:column="21"/></name></type> <name pos:line="8" pos:column="22">rv<pos:position pos:line="8" pos:column="24"/></name></decl>;<pos:position pos:line="8" pos:column="25"/></decl_stmt>
        <decl_stmt><decl><type><name pos:line="9" pos:column="9">apr_wchar_t<pos:position pos:line="9" pos:column="20"/></name></type> <name><name pos:line="9" pos:column="21">wroot<pos:position pos:line="9" pos:column="26"/></name><index pos:line="9" pos:column="26">[<expr><name pos:line="9" pos:column="27">APR_PATH_MAX<pos:position pos:line="9" pos:column="39"/></name></expr>]<pos:position pos:line="9" pos:column="40"/></index></name></decl>;<pos:position pos:line="9" pos:column="41"/></decl_stmt>
        <comment type="block" pos:line="10" pos:column="9">/* ???: This needs review, apparently "\\?\d:." returns "\\?\d:" 
         * as if that is useful for anything.
         */</comment>
        <if pos:line="13" pos:column="9">if <condition pos:line="13" pos:column="12">(<expr><name pos:line="13" pos:column="13">rv<pos:position pos:line="13" pos:column="15"/></name> <operator pos:line="13" pos:column="16">=<pos:position pos:line="13" pos:column="17"/></operator> <call><name pos:line="13" pos:column="18">utf8_to_unicode_path<pos:position pos:line="13" pos:column="38"/></name><argument_list pos:line="13" pos:column="38">(<argument><expr><name pos:line="13" pos:column="39">wroot<pos:position pos:line="13" pos:column="44"/></name></expr></argument>, <argument><expr><sizeof pos:line="13" pos:column="46">sizeof<argument_list pos:line="13" pos:column="52">(<argument><expr><name pos:line="13" pos:column="53">wroot<pos:position pos:line="13" pos:column="58"/></name></expr></argument>)<pos:position pos:line="13" pos:column="59"/></argument_list></sizeof> 
                                           <operator pos:line="14" pos:column="44">/<pos:position pos:line="14" pos:column="45"/></operator> <sizeof pos:line="14" pos:column="46">sizeof<argument_list pos:line="14" pos:column="52">(<argument><expr><name pos:line="14" pos:column="53">apr_wchar_t<pos:position pos:line="14" pos:column="64"/></name></expr></argument>)<pos:position pos:line="14" pos:column="65"/></argument_list></sizeof></expr></argument>, <argument><expr><name pos:line="14" pos:column="67">root<pos:position pos:line="14" pos:column="71"/></name></expr></argument>)<pos:position pos:line="14" pos:column="72"/></argument_list></call></expr>)<pos:position pos:line="14" pos:column="73"/></condition><then pos:line="14" pos:column="73">
            <block type="pseudo"><return pos:line="15" pos:column="13">return <expr><name pos:line="15" pos:column="20">rv<pos:position pos:line="15" pos:column="22"/></name></expr>;<pos:position pos:line="15" pos:column="23"/></return></block></then></if>
        <if pos:line="16" pos:column="9">if <condition pos:line="16" pos:column="12">(<expr><operator pos:line="16" pos:column="13">!<pos:position pos:line="16" pos:column="14"/></operator><call><name pos:line="16" pos:column="14">GetFullPathNameW<pos:position pos:line="16" pos:column="30"/></name><argument_list pos:line="16" pos:column="30">(<argument><expr><name pos:line="16" pos:column="31">wroot<pos:position pos:line="16" pos:column="36"/></name></expr></argument>, <argument><expr><sizeof pos:line="16" pos:column="38">sizeof<argument_list pos:line="16" pos:column="44">(<argument><expr><name pos:line="16" pos:column="45">wpath<pos:position pos:line="16" pos:column="50"/></name></expr></argument>)<pos:position pos:line="16" pos:column="51"/></argument_list></sizeof> <operator pos:line="16" pos:column="52">/<pos:position pos:line="16" pos:column="53"/></operator> <sizeof pos:line="16" pos:column="54">sizeof<argument_list pos:line="16" pos:column="60">(<argument><expr><name pos:line="16" pos:column="61">apr_wchar_t<pos:position pos:line="16" pos:column="72"/></name></expr></argument>)<pos:position pos:line="16" pos:column="73"/></argument_list></sizeof></expr></argument>, <argument><expr><name pos:line="16" pos:column="75">wpath<pos:position pos:line="16" pos:column="80"/></name></expr></argument>, <argument><expr><operator pos:line="16" pos:column="82">&amp;<pos:position pos:line="16" pos:column="87"/></operator><name pos:line="16" pos:column="83">ignored<pos:position pos:line="16" pos:column="90"/></name></expr></argument>)<pos:position pos:line="16" pos:column="91"/></argument_list></call></expr>)<pos:position pos:line="16" pos:column="92"/></condition><then pos:line="16" pos:column="92">
            <block type="pseudo"><return pos:line="17" pos:column="13">return <expr><call><name pos:line="17" pos:column="20">apr_get_os_error<pos:position pos:line="17" pos:column="36"/></name><argument_list pos:line="17" pos:column="36">()<pos:position pos:line="17" pos:column="38"/></argument_list></call></expr>;<pos:position pos:line="17" pos:column="39"/></return></block></then></if>

        <comment type="block" pos:line="19" pos:column="9">/* Borrow wroot as a char buffer (twice as big as necessary) 
         */</comment>
        <if pos:line="21" pos:column="9">if <condition pos:line="21" pos:column="12">(<expr><operator pos:line="21" pos:column="13">(<pos:position pos:line="21" pos:column="14"/></operator><name pos:line="21" pos:column="14">rv<pos:position pos:line="21" pos:column="16"/></name> <operator pos:line="21" pos:column="17">=<pos:position pos:line="21" pos:column="18"/></operator> <call><name pos:line="21" pos:column="19">unicode_to_utf8_path<pos:position pos:line="21" pos:column="39"/></name><argument_list pos:line="21" pos:column="39">(<argument><expr><operator pos:line="21" pos:column="40">(<pos:position pos:line="21" pos:column="41"/></operator><name pos:line="21" pos:column="41">char<pos:position pos:line="21" pos:column="45"/></name><operator pos:line="21" pos:column="45">*<pos:position pos:line="21" pos:column="46"/></operator><operator pos:line="21" pos:column="46">)<pos:position pos:line="21" pos:column="47"/></operator><name pos:line="21" pos:column="47">wroot<pos:position pos:line="21" pos:column="52"/></name></expr></argument>, <argument><expr><sizeof pos:line="21" pos:column="54">sizeof<argument_list pos:line="21" pos:column="60">(<argument><expr><name pos:line="21" pos:column="61">wroot<pos:position pos:line="21" pos:column="66"/></name></expr></argument>)<pos:position pos:line="21" pos:column="67"/></argument_list></sizeof></expr></argument>, <argument><expr><name pos:line="21" pos:column="69">wpath<pos:position pos:line="21" pos:column="74"/></name></expr></argument>)<pos:position pos:line="21" pos:column="75"/></argument_list></call><operator pos:line="21" pos:column="75">)<pos:position pos:line="21" pos:column="76"/></operator></expr>)<pos:position pos:line="21" pos:column="77"/></condition><then pos:line="21" pos:column="77">
            <block type="pseudo"><return pos:line="22" pos:column="13">return <expr><name pos:line="22" pos:column="20">rv<pos:position pos:line="22" pos:column="22"/></name></expr>;<pos:position pos:line="22" pos:column="23"/></return></block></then></if>
        <expr_stmt><expr><operator pos:line="23" pos:column="9">*<pos:position pos:line="23" pos:column="10"/></operator><name pos:line="23" pos:column="10">rootpath<pos:position pos:line="23" pos:column="18"/></name> <operator pos:line="23" pos:column="19">=<pos:position pos:line="23" pos:column="20"/></operator> <call><name pos:line="23" pos:column="21">apr_pstrdup<pos:position pos:line="23" pos:column="32"/></name><argument_list pos:line="23" pos:column="32">(<argument><expr><name pos:line="23" pos:column="33">p<pos:position pos:line="23" pos:column="34"/></name></expr></argument>, <argument><expr><operator pos:line="23" pos:column="36">(<pos:position pos:line="23" pos:column="37"/></operator><name pos:line="23" pos:column="37">char<pos:position pos:line="23" pos:column="41"/></name><operator pos:line="23" pos:column="41">*<pos:position pos:line="23" pos:column="42"/></operator><operator pos:line="23" pos:column="42">)<pos:position pos:line="23" pos:column="43"/></operator><name pos:line="23" pos:column="43">wroot<pos:position pos:line="23" pos:column="48"/></name></expr></argument>)<pos:position pos:line="23" pos:column="49"/></argument_list></call></expr>;<pos:position pos:line="23" pos:column="50"/></expr_stmt>
    }<pos:position pos:line="24" pos:column="6"/></block>
<cpp:endif pos:line="25" pos:column="1">#<cpp:directive pos:line="25" pos:column="2">endif<pos:position pos:line="25" pos:column="7"/></cpp:directive></cpp:endif>
<cpp:if pos:line="26" pos:column="1">#<cpp:directive pos:line="26" pos:column="2">if<pos:position pos:line="26" pos:column="4"/></cpp:directive> <expr><name pos:line="26" pos:column="5">APR_HAS_ANSI_FS<pos:position pos:line="26" pos:column="20"/></name></expr></cpp:if>
    <macro><name pos:line="27" pos:column="5">ELSE_WIN_OS_IS_ANSI<pos:position pos:line="27" pos:column="24"/></name></macro>
    <block pos:line="28" pos:column="5">{
        <decl_stmt><decl><type><name pos:line="29" pos:column="9">char<pos:position pos:line="29" pos:column="13"/></name></type> <name><name pos:line="29" pos:column="14">path<pos:position pos:line="29" pos:column="18"/></name><index pos:line="29" pos:column="18">[<expr><name pos:line="29" pos:column="19">APR_PATH_MAX<pos:position pos:line="29" pos:column="31"/></name></expr>]<pos:position pos:line="29" pos:column="32"/></index></name></decl>;<pos:position pos:line="29" pos:column="33"/></decl_stmt>
        <decl_stmt><decl><type><name pos:line="30" pos:column="9">char<pos:position pos:line="30" pos:column="13"/></name> <modifier pos:line="30" pos:column="14">*<pos:position pos:line="30" pos:column="15"/></modifier></type><name pos:line="30" pos:column="15">ignored<pos:position pos:line="30" pos:column="22"/></name></decl>;<pos:position pos:line="30" pos:column="23"/></decl_stmt>
        <if pos:line="31" pos:column="9">if <condition pos:line="31" pos:column="12">(<expr><operator pos:line="31" pos:column="13">!<pos:position pos:line="31" pos:column="14"/></operator><call><name pos:line="31" pos:column="14">GetFullPathName<pos:position pos:line="31" pos:column="29"/></name><argument_list pos:line="31" pos:column="29">(<argument><expr><name pos:line="31" pos:column="30">root<pos:position pos:line="31" pos:column="34"/></name></expr></argument>, <argument><expr><sizeof pos:line="31" pos:column="36">sizeof<argument_list pos:line="31" pos:column="42">(<argument><expr><name pos:line="31" pos:column="43">path<pos:position pos:line="31" pos:column="47"/></name></expr></argument>)<pos:position pos:line="31" pos:column="48"/></argument_list></sizeof></expr></argument>, <argument><expr><name pos:line="31" pos:column="50">path<pos:position pos:line="31" pos:column="54"/></name></expr></argument>, <argument><expr><operator pos:line="31" pos:column="56">&amp;<pos:position pos:line="31" pos:column="61"/></operator><name pos:line="31" pos:column="57">ignored<pos:position pos:line="31" pos:column="64"/></name></expr></argument>)<pos:position pos:line="31" pos:column="65"/></argument_list></call></expr>)<pos:position pos:line="31" pos:column="66"/></condition><then pos:line="31" pos:column="66">
            <block type="pseudo"><return pos:line="32" pos:column="13">return <expr><call><name pos:line="32" pos:column="20">apr_get_os_error<pos:position pos:line="32" pos:column="36"/></name><argument_list pos:line="32" pos:column="36">()<pos:position pos:line="32" pos:column="38"/></argument_list></call></expr>;<pos:position pos:line="32" pos:column="39"/></return></block></then></if>
        <expr_stmt><expr><operator pos:line="33" pos:column="9">*<pos:position pos:line="33" pos:column="10"/></operator><name pos:line="33" pos:column="10">rootpath<pos:position pos:line="33" pos:column="18"/></name> <operator pos:line="33" pos:column="19">=<pos:position pos:line="33" pos:column="20"/></operator> <call><name pos:line="33" pos:column="21">apr_pstrdup<pos:position pos:line="33" pos:column="32"/></name><argument_list pos:line="33" pos:column="32">(<argument><expr><name pos:line="33" pos:column="33">p<pos:position pos:line="33" pos:column="34"/></name></expr></argument>, <argument><expr><name pos:line="33" pos:column="36">path<pos:position pos:line="33" pos:column="40"/></name></expr></argument>)<pos:position pos:line="33" pos:column="41"/></argument_list></call></expr>;<pos:position pos:line="33" pos:column="42"/></expr_stmt>
    }<pos:position pos:line="34" pos:column="6"/></block>
<cpp:endif pos:line="35" pos:column="1">#<cpp:directive pos:line="35" pos:column="2">endif<pos:position pos:line="35" pos:column="7"/></cpp:directive></cpp:endif>
    <return pos:line="36" pos:column="5">return <expr><name pos:line="36" pos:column="12">APR_SUCCESS<pos:position pos:line="36" pos:column="23"/></name></expr>;<pos:position pos:line="36" pos:column="24"/></return>
}<pos:position pos:line="37" pos:column="2"/></block></function></unit>

<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/httpd/gumtree/httpd_repos_function_1211_httpd-2.2.16.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">float<pos:position pos:line="1" pos:column="13"/></name></type> <name pos:line="1" pos:column="14">atoq<pos:position pos:line="1" pos:column="18"/></name><parameter_list pos:line="1" pos:column="18">(<parameter><decl><type><specifier pos:line="1" pos:column="19">const<pos:position pos:line="1" pos:column="24"/></specifier> <name pos:line="1" pos:column="25">char<pos:position pos:line="1" pos:column="29"/></name> <modifier pos:line="1" pos:column="30">*<pos:position pos:line="1" pos:column="31"/></modifier></type><name pos:line="1" pos:column="31">string<pos:position pos:line="1" pos:column="37"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="38"/></parameter_list>
<block pos:line="2" pos:column="1">{
    <if pos:line="3" pos:column="5">if <condition pos:line="3" pos:column="8">(<expr><operator pos:line="3" pos:column="9">!<pos:position pos:line="3" pos:column="10"/></operator><name pos:line="3" pos:column="10">string<pos:position pos:line="3" pos:column="16"/></name> <operator pos:line="3" pos:column="17">||<pos:position pos:line="3" pos:column="19"/></operator> <operator pos:line="3" pos:column="20">!<pos:position pos:line="3" pos:column="21"/></operator><operator pos:line="3" pos:column="21">*<pos:position pos:line="3" pos:column="22"/></operator><name pos:line="3" pos:column="22">string<pos:position pos:line="3" pos:column="28"/></name></expr>)<pos:position pos:line="3" pos:column="29"/></condition><then pos:line="3" pos:column="29"> <block pos:line="3" pos:column="30">{
        <return pos:line="4" pos:column="9">return  <expr><literal type="number" pos:line="4" pos:column="17">1.0f<pos:position pos:line="4" pos:column="21"/></literal></expr>;<pos:position pos:line="4" pos:column="22"/></return>
    }<pos:position pos:line="5" pos:column="6"/></block></then></if>

    <while pos:line="7" pos:column="5">while <condition pos:line="7" pos:column="11">(<expr><operator pos:line="7" pos:column="12">*<pos:position pos:line="7" pos:column="13"/></operator><name pos:line="7" pos:column="13">string<pos:position pos:line="7" pos:column="19"/></name> <operator pos:line="7" pos:column="20">&amp;&amp;<pos:position pos:line="7" pos:column="30"/></operator> <call><name pos:line="7" pos:column="23">apr_isspace<pos:position pos:line="7" pos:column="34"/></name><argument_list pos:line="7" pos:column="34">(<argument><expr><operator pos:line="7" pos:column="35">*<pos:position pos:line="7" pos:column="36"/></operator><name pos:line="7" pos:column="36">string<pos:position pos:line="7" pos:column="42"/></name></expr></argument>)<pos:position pos:line="7" pos:column="43"/></argument_list></call></expr>)<pos:position pos:line="7" pos:column="44"/></condition> <block pos:line="7" pos:column="45">{
        <expr_stmt><expr><operator pos:line="8" pos:column="9">++<pos:position pos:line="8" pos:column="11"/></operator><name pos:line="8" pos:column="11">string<pos:position pos:line="8" pos:column="17"/></name></expr>;<pos:position pos:line="8" pos:column="18"/></expr_stmt>
    }<pos:position pos:line="9" pos:column="6"/></block></while>

    <comment type="block" pos:line="11" pos:column="5">/* be tolerant and accept qvalues without leading zero
     * (also for backwards compat, where atof() was in use)
     */</comment>
    <if pos:line="14" pos:column="5">if <condition pos:line="14" pos:column="8">(<expr><operator pos:line="14" pos:column="9">*<pos:position pos:line="14" pos:column="10"/></operator><name pos:line="14" pos:column="10">string<pos:position pos:line="14" pos:column="16"/></name> <operator pos:line="14" pos:column="17">!=<pos:position pos:line="14" pos:column="19"/></operator> <literal type="char" pos:line="14" pos:column="20">'.'<pos:position pos:line="14" pos:column="23"/></literal> <operator pos:line="14" pos:column="24">&amp;&amp;<pos:position pos:line="14" pos:column="34"/></operator> <operator pos:line="14" pos:column="27">*<pos:position pos:line="14" pos:column="28"/></operator><name pos:line="14" pos:column="28">string<pos:position pos:line="14" pos:column="34"/></name><operator pos:line="14" pos:column="34">++<pos:position pos:line="14" pos:column="36"/></operator> <operator pos:line="14" pos:column="37">!=<pos:position pos:line="14" pos:column="39"/></operator> <literal type="char" pos:line="14" pos:column="40">'0'<pos:position pos:line="14" pos:column="43"/></literal></expr>)<pos:position pos:line="14" pos:column="44"/></condition><then pos:line="14" pos:column="44"> <block pos:line="14" pos:column="45">{
        <return pos:line="15" pos:column="9">return <expr><literal type="number" pos:line="15" pos:column="16">1.0f<pos:position pos:line="15" pos:column="20"/></literal></expr>;<pos:position pos:line="15" pos:column="21"/></return>
    }<pos:position pos:line="16" pos:column="6"/></block></then></if>

    <if pos:line="18" pos:column="5">if <condition pos:line="18" pos:column="8">(<expr><operator pos:line="18" pos:column="9">*<pos:position pos:line="18" pos:column="10"/></operator><name pos:line="18" pos:column="10">string<pos:position pos:line="18" pos:column="16"/></name> <operator pos:line="18" pos:column="17">==<pos:position pos:line="18" pos:column="19"/></operator> <literal type="char" pos:line="18" pos:column="20">'.'<pos:position pos:line="18" pos:column="23"/></literal></expr>)<pos:position pos:line="18" pos:column="24"/></condition><then pos:line="18" pos:column="24"> <block pos:line="18" pos:column="25">{
        <comment type="block" pos:line="19" pos:column="9">/* better only one division later, than dealing with fscking
         * IEEE format 0.1 factors ...
         */</comment>
        <decl_stmt><decl><type><name pos:line="22" pos:column="9">int<pos:position pos:line="22" pos:column="12"/></name></type> <name pos:line="22" pos:column="13">i<pos:position pos:line="22" pos:column="14"/></name> <init pos:line="22" pos:column="15">= <expr><literal type="number" pos:line="22" pos:column="17">0<pos:position pos:line="22" pos:column="18"/></literal></expr></init></decl>;<pos:position pos:line="22" pos:column="19"/></decl_stmt>

        <if pos:line="24" pos:column="9">if <condition pos:line="24" pos:column="12">(<expr><operator pos:line="24" pos:column="13">*<pos:position pos:line="24" pos:column="14"/></operator><operator pos:line="24" pos:column="14">++<pos:position pos:line="24" pos:column="16"/></operator><name pos:line="24" pos:column="16">string<pos:position pos:line="24" pos:column="22"/></name> <operator pos:line="24" pos:column="23">&gt;=<pos:position pos:line="24" pos:column="28"/></operator> <literal type="char" pos:line="24" pos:column="26">'0'<pos:position pos:line="24" pos:column="29"/></literal> <operator pos:line="24" pos:column="30">&amp;&amp;<pos:position pos:line="24" pos:column="40"/></operator> <operator pos:line="24" pos:column="33">*<pos:position pos:line="24" pos:column="34"/></operator><name pos:line="24" pos:column="34">string<pos:position pos:line="24" pos:column="40"/></name> <operator pos:line="24" pos:column="41">&lt;=<pos:position pos:line="24" pos:column="46"/></operator> <literal type="char" pos:line="24" pos:column="44">'9'<pos:position pos:line="24" pos:column="47"/></literal></expr>)<pos:position pos:line="24" pos:column="48"/></condition><then pos:line="24" pos:column="48"> <block pos:line="24" pos:column="49">{
            <expr_stmt><expr><name pos:line="25" pos:column="13">i<pos:position pos:line="25" pos:column="14"/></name> <operator pos:line="25" pos:column="15">+=<pos:position pos:line="25" pos:column="17"/></operator> <operator pos:line="25" pos:column="18">(<pos:position pos:line="25" pos:column="19"/></operator><operator pos:line="25" pos:column="19">*<pos:position pos:line="25" pos:column="20"/></operator><name pos:line="25" pos:column="20">string<pos:position pos:line="25" pos:column="26"/></name> <operator pos:line="25" pos:column="27">-<pos:position pos:line="25" pos:column="28"/></operator> <literal type="char" pos:line="25" pos:column="29">'0'<pos:position pos:line="25" pos:column="32"/></literal><operator pos:line="25" pos:column="32">)<pos:position pos:line="25" pos:column="33"/></operator> <operator pos:line="25" pos:column="34">*<pos:position pos:line="25" pos:column="35"/></operator> <literal type="number" pos:line="25" pos:column="36">100<pos:position pos:line="25" pos:column="39"/></literal></expr>;<pos:position pos:line="25" pos:column="40"/></expr_stmt>

            <if pos:line="27" pos:column="13">if <condition pos:line="27" pos:column="16">(<expr><operator pos:line="27" pos:column="17">*<pos:position pos:line="27" pos:column="18"/></operator><operator pos:line="27" pos:column="18">++<pos:position pos:line="27" pos:column="20"/></operator><name pos:line="27" pos:column="20">string<pos:position pos:line="27" pos:column="26"/></name> <operator pos:line="27" pos:column="27">&gt;=<pos:position pos:line="27" pos:column="32"/></operator> <literal type="char" pos:line="27" pos:column="30">'0'<pos:position pos:line="27" pos:column="33"/></literal> <operator pos:line="27" pos:column="34">&amp;&amp;<pos:position pos:line="27" pos:column="44"/></operator> <operator pos:line="27" pos:column="37">*<pos:position pos:line="27" pos:column="38"/></operator><name pos:line="27" pos:column="38">string<pos:position pos:line="27" pos:column="44"/></name> <operator pos:line="27" pos:column="45">&lt;=<pos:position pos:line="27" pos:column="50"/></operator> <literal type="char" pos:line="27" pos:column="48">'9'<pos:position pos:line="27" pos:column="51"/></literal></expr>)<pos:position pos:line="27" pos:column="52"/></condition><then pos:line="27" pos:column="52"> <block pos:line="27" pos:column="53">{
                <expr_stmt><expr><name pos:line="28" pos:column="17">i<pos:position pos:line="28" pos:column="18"/></name> <operator pos:line="28" pos:column="19">+=<pos:position pos:line="28" pos:column="21"/></operator> <operator pos:line="28" pos:column="22">(<pos:position pos:line="28" pos:column="23"/></operator><operator pos:line="28" pos:column="23">*<pos:position pos:line="28" pos:column="24"/></operator><name pos:line="28" pos:column="24">string<pos:position pos:line="28" pos:column="30"/></name> <operator pos:line="28" pos:column="31">-<pos:position pos:line="28" pos:column="32"/></operator> <literal type="char" pos:line="28" pos:column="33">'0'<pos:position pos:line="28" pos:column="36"/></literal><operator pos:line="28" pos:column="36">)<pos:position pos:line="28" pos:column="37"/></operator> <operator pos:line="28" pos:column="38">*<pos:position pos:line="28" pos:column="39"/></operator> <literal type="number" pos:line="28" pos:column="40">10<pos:position pos:line="28" pos:column="42"/></literal></expr>;<pos:position pos:line="28" pos:column="43"/></expr_stmt>

                <if pos:line="30" pos:column="17">if <condition pos:line="30" pos:column="20">(<expr><operator pos:line="30" pos:column="21">*<pos:position pos:line="30" pos:column="22"/></operator><operator pos:line="30" pos:column="22">++<pos:position pos:line="30" pos:column="24"/></operator><name pos:line="30" pos:column="24">string<pos:position pos:line="30" pos:column="30"/></name> <operator pos:line="30" pos:column="31">&gt;<pos:position pos:line="30" pos:column="35"/></operator> <literal type="char" pos:line="30" pos:column="33">'0'<pos:position pos:line="30" pos:column="36"/></literal> <operator pos:line="30" pos:column="37">&amp;&amp;<pos:position pos:line="30" pos:column="47"/></operator> <operator pos:line="30" pos:column="40">*<pos:position pos:line="30" pos:column="41"/></operator><name pos:line="30" pos:column="41">string<pos:position pos:line="30" pos:column="47"/></name> <operator pos:line="30" pos:column="48">&lt;=<pos:position pos:line="30" pos:column="53"/></operator> <literal type="char" pos:line="30" pos:column="51">'9'<pos:position pos:line="30" pos:column="54"/></literal></expr>)<pos:position pos:line="30" pos:column="55"/></condition><then pos:line="30" pos:column="55"> <block pos:line="30" pos:column="56">{
                    <expr_stmt><expr><name pos:line="31" pos:column="21">i<pos:position pos:line="31" pos:column="22"/></name> <operator pos:line="31" pos:column="23">+=<pos:position pos:line="31" pos:column="25"/></operator> <operator pos:line="31" pos:column="26">(<pos:position pos:line="31" pos:column="27"/></operator><operator pos:line="31" pos:column="27">*<pos:position pos:line="31" pos:column="28"/></operator><name pos:line="31" pos:column="28">string<pos:position pos:line="31" pos:column="34"/></name> <operator pos:line="31" pos:column="35">-<pos:position pos:line="31" pos:column="36"/></operator> <literal type="char" pos:line="31" pos:column="37">'0'<pos:position pos:line="31" pos:column="40"/></literal><operator pos:line="31" pos:column="40">)<pos:position pos:line="31" pos:column="41"/></operator></expr>;<pos:position pos:line="31" pos:column="42"/></expr_stmt>
                }<pos:position pos:line="32" pos:column="18"/></block></then></if>
            }<pos:position pos:line="33" pos:column="14"/></block></then></if>
        }<pos:position pos:line="34" pos:column="10"/></block></then></if>

        <return pos:line="36" pos:column="9">return <expr><operator pos:line="36" pos:column="16">(<pos:position pos:line="36" pos:column="17"/></operator><name pos:line="36" pos:column="17">float<pos:position pos:line="36" pos:column="22"/></name><operator pos:line="36" pos:column="22">)<pos:position pos:line="36" pos:column="23"/></operator><name pos:line="36" pos:column="23">i<pos:position pos:line="36" pos:column="24"/></name> <operator pos:line="36" pos:column="25">/<pos:position pos:line="36" pos:column="26"/></operator> <literal type="number" pos:line="36" pos:column="27">1000.0f<pos:position pos:line="36" pos:column="34"/></literal></expr>;<pos:position pos:line="36" pos:column="35"/></return>
    }<pos:position pos:line="37" pos:column="6"/></block></then></if>

    <return pos:line="39" pos:column="5">return <expr><literal type="number" pos:line="39" pos:column="12">0.0f<pos:position pos:line="39" pos:column="16"/></literal></expr>;<pos:position pos:line="39" pos:column="17"/></return>
}<pos:position pos:line="40" pos:column="2"/></block></function></unit>

<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/httpd/gumtree/httpd_function_4005.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">int<pos:position pos:line="1" pos:column="11"/></name></type> <name pos:line="1" pos:column="12">read_type_map<pos:position pos:line="1" pos:column="25"/></name><parameter_list pos:line="1" pos:column="25">(<parameter><decl><type><name pos:line="1" pos:column="26">apr_file_t<pos:position pos:line="1" pos:column="36"/></name> <modifier pos:line="1" pos:column="37">*<pos:position pos:line="1" pos:column="38"/></modifier><modifier pos:line="1" pos:column="38">*<pos:position pos:line="1" pos:column="39"/></modifier></type><name pos:line="1" pos:column="39">map<pos:position pos:line="1" pos:column="42"/></name></decl></parameter>, <parameter><decl><type><name pos:line="1" pos:column="44">negotiation_state<pos:position pos:line="1" pos:column="61"/></name> <modifier pos:line="1" pos:column="62">*<pos:position pos:line="1" pos:column="63"/></modifier></type><name pos:line="1" pos:column="63">neg<pos:position pos:line="1" pos:column="66"/></name></decl></parameter>,
                         <parameter><decl><type><name pos:line="2" pos:column="26">request_rec<pos:position pos:line="2" pos:column="37"/></name> <modifier pos:line="2" pos:column="38">*<pos:position pos:line="2" pos:column="39"/></modifier></type><name pos:line="2" pos:column="39">rr<pos:position pos:line="2" pos:column="41"/></name></decl></parameter>)<pos:position pos:line="2" pos:column="42"/></parameter_list>
<block pos:line="3" pos:column="1">{
    <decl_stmt><decl><type><name pos:line="4" pos:column="5">request_rec<pos:position pos:line="4" pos:column="16"/></name> <modifier pos:line="4" pos:column="17">*<pos:position pos:line="4" pos:column="18"/></modifier></type><name pos:line="4" pos:column="18">r<pos:position pos:line="4" pos:column="19"/></name> <init pos:line="4" pos:column="20">= <expr><name><name pos:line="4" pos:column="22">neg<pos:position pos:line="4" pos:column="25"/></name><operator pos:line="4" pos:column="25">-&gt;<pos:position pos:line="4" pos:column="30"/></operator><name pos:line="4" pos:column="27">r<pos:position pos:line="4" pos:column="28"/></name></name></expr></init></decl>;<pos:position pos:line="4" pos:column="29"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="5" pos:column="5">apr_file_t<pos:position pos:line="5" pos:column="15"/></name> <modifier pos:line="5" pos:column="16">*<pos:position pos:line="5" pos:column="17"/></modifier></type><name pos:line="5" pos:column="17">map_<pos:position pos:line="5" pos:column="21"/></name> <init pos:line="5" pos:column="22">= <expr><name pos:line="5" pos:column="24">NULL<pos:position pos:line="5" pos:column="28"/></name></expr></init></decl>;<pos:position pos:line="5" pos:column="29"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="6" pos:column="5">apr_status_t<pos:position pos:line="6" pos:column="17"/></name></type> <name pos:line="6" pos:column="18">status<pos:position pos:line="6" pos:column="24"/></name></decl>;<pos:position pos:line="6" pos:column="25"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="7" pos:column="5">char<pos:position pos:line="7" pos:column="9"/></name></type> <name><name pos:line="7" pos:column="10">buffer<pos:position pos:line="7" pos:column="16"/></name><index pos:line="7" pos:column="16">[<expr><name pos:line="7" pos:column="17">MAX_STRING_LEN<pos:position pos:line="7" pos:column="31"/></name></expr>]<pos:position pos:line="7" pos:column="32"/></index></name></decl>;<pos:position pos:line="7" pos:column="33"/></decl_stmt>
    <decl_stmt><decl><type><name><name pos:line="8" pos:column="5">enum<pos:position pos:line="8" pos:column="9"/></name> <name pos:line="8" pos:column="10">header_state<pos:position pos:line="8" pos:column="22"/></name></name></type> <name pos:line="8" pos:column="23">hstate<pos:position pos:line="8" pos:column="29"/></name></decl>;<pos:position pos:line="8" pos:column="30"/></decl_stmt>
    <decl_stmt><decl><type><name><name pos:line="9" pos:column="5">struct<pos:position pos:line="9" pos:column="11"/></name> <name pos:line="9" pos:column="12">var_rec<pos:position pos:line="9" pos:column="19"/></name></name></type> <name pos:line="9" pos:column="20">mime_info<pos:position pos:line="9" pos:column="29"/></name></decl>;<pos:position pos:line="9" pos:column="30"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="10" pos:column="5">int<pos:position pos:line="10" pos:column="8"/></name></type> <name pos:line="10" pos:column="9">has_content<pos:position pos:line="10" pos:column="20"/></name></decl>;<pos:position pos:line="10" pos:column="21"/></decl_stmt>

    <if pos:line="12" pos:column="5">if <condition pos:line="12" pos:column="8">(<expr><operator pos:line="12" pos:column="9">!<pos:position pos:line="12" pos:column="10"/></operator><name pos:line="12" pos:column="10">map<pos:position pos:line="12" pos:column="13"/></name></expr>)<pos:position pos:line="12" pos:column="14"/></condition><then pos:line="12" pos:column="14">
        <block type="pseudo"><expr_stmt><expr><name pos:line="13" pos:column="9">map<pos:position pos:line="13" pos:column="12"/></name> <operator pos:line="13" pos:column="13">=<pos:position pos:line="13" pos:column="14"/></operator> <operator pos:line="13" pos:column="15">&amp;<pos:position pos:line="13" pos:column="20"/></operator><name pos:line="13" pos:column="16">map_<pos:position pos:line="13" pos:column="20"/></name></expr>;<pos:position pos:line="13" pos:column="21"/></expr_stmt></block></then></if>

    <comment type="block" pos:line="15" pos:column="5">/* We are not using multiviews */</comment>
    <expr_stmt><expr><name><name pos:line="16" pos:column="5">neg<pos:position pos:line="16" pos:column="8"/></name><operator pos:line="16" pos:column="8">-&gt;<pos:position pos:line="16" pos:column="13"/></operator><name pos:line="16" pos:column="10">count_multiviews_variants<pos:position pos:line="16" pos:column="35"/></name></name> <operator pos:line="16" pos:column="36">=<pos:position pos:line="16" pos:column="37"/></operator> <literal type="number" pos:line="16" pos:column="38">0<pos:position pos:line="16" pos:column="39"/></literal></expr>;<pos:position pos:line="16" pos:column="40"/></expr_stmt>

    <if pos:line="18" pos:column="5">if <condition pos:line="18" pos:column="8">(<expr><operator pos:line="18" pos:column="9">(<pos:position pos:line="18" pos:column="10"/></operator><name pos:line="18" pos:column="10">status<pos:position pos:line="18" pos:column="16"/></name> <operator pos:line="18" pos:column="17">=<pos:position pos:line="18" pos:column="18"/></operator> <call><name pos:line="18" pos:column="19">apr_file_open<pos:position pos:line="18" pos:column="32"/></name><argument_list pos:line="18" pos:column="32">(<argument><expr><name pos:line="18" pos:column="33">map<pos:position pos:line="18" pos:column="36"/></name></expr></argument>, <argument><expr><name><name pos:line="18" pos:column="38">rr<pos:position pos:line="18" pos:column="40"/></name><operator pos:line="18" pos:column="40">-&gt;<pos:position pos:line="18" pos:column="45"/></operator><name pos:line="18" pos:column="42">filename<pos:position pos:line="18" pos:column="50"/></name></name></expr></argument>, <argument><expr><name pos:line="18" pos:column="52">APR_READ<pos:position pos:line="18" pos:column="60"/></name> <operator pos:line="18" pos:column="61">|<pos:position pos:line="18" pos:column="62"/></operator> <name pos:line="18" pos:column="63">APR_BUFFERED<pos:position pos:line="18" pos:column="75"/></name></expr></argument>,
                <argument><expr><name pos:line="19" pos:column="17">APR_OS_DEFAULT<pos:position pos:line="19" pos:column="31"/></name></expr></argument>, <argument><expr><name><name pos:line="19" pos:column="33">neg<pos:position pos:line="19" pos:column="36"/></name><operator pos:line="19" pos:column="36">-&gt;<pos:position pos:line="19" pos:column="41"/></operator><name pos:line="19" pos:column="38">pool<pos:position pos:line="19" pos:column="42"/></name></name></expr></argument>)<pos:position pos:line="19" pos:column="43"/></argument_list></call><operator pos:line="19" pos:column="43">)<pos:position pos:line="19" pos:column="44"/></operator> <operator pos:line="19" pos:column="45">!=<pos:position pos:line="19" pos:column="47"/></operator> <name pos:line="19" pos:column="48">APR_SUCCESS<pos:position pos:line="19" pos:column="59"/></name></expr>)<pos:position pos:line="19" pos:column="60"/></condition><then pos:line="19" pos:column="60"> <block pos:line="19" pos:column="61">{
        <expr_stmt><expr><call><name pos:line="20" pos:column="9">ap_log_rerror<pos:position pos:line="20" pos:column="22"/></name><argument_list pos:line="20" pos:column="22">(<argument><expr><name pos:line="20" pos:column="23">APLOG_MARK<pos:position pos:line="20" pos:column="33"/></name></expr></argument>, <argument><expr><name pos:line="20" pos:column="35">APLOG_ERR<pos:position pos:line="20" pos:column="44"/></name></expr></argument>, <argument><expr><name pos:line="20" pos:column="46">status<pos:position pos:line="20" pos:column="52"/></name></expr></argument>, <argument><expr><name pos:line="20" pos:column="54">r<pos:position pos:line="20" pos:column="55"/></name></expr></argument>,
                      <argument><expr><literal type="string" pos:line="21" pos:column="23">"cannot access type map file: %s"<pos:position pos:line="21" pos:column="56"/></literal></expr></argument>, <argument><expr><name><name pos:line="21" pos:column="58">rr<pos:position pos:line="21" pos:column="60"/></name><operator pos:line="21" pos:column="60">-&gt;<pos:position pos:line="21" pos:column="65"/></operator><name pos:line="21" pos:column="62">filename<pos:position pos:line="21" pos:column="70"/></name></name></expr></argument>)<pos:position pos:line="21" pos:column="71"/></argument_list></call></expr>;<pos:position pos:line="21" pos:column="72"/></expr_stmt>
        <if pos:line="22" pos:column="9">if <condition pos:line="22" pos:column="12">(<expr><call><name pos:line="22" pos:column="13">APR_STATUS_IS_ENOTDIR<pos:position pos:line="22" pos:column="34"/></name><argument_list pos:line="22" pos:column="34">(<argument><expr><name pos:line="22" pos:column="35">status<pos:position pos:line="22" pos:column="41"/></name></expr></argument>)<pos:position pos:line="22" pos:column="42"/></argument_list></call> <operator pos:line="22" pos:column="43">||<pos:position pos:line="22" pos:column="45"/></operator> <call><name pos:line="22" pos:column="46">APR_STATUS_IS_ENOENT<pos:position pos:line="22" pos:column="66"/></name><argument_list pos:line="22" pos:column="66">(<argument><expr><name pos:line="22" pos:column="67">status<pos:position pos:line="22" pos:column="73"/></name></expr></argument>)<pos:position pos:line="22" pos:column="74"/></argument_list></call></expr>)<pos:position pos:line="22" pos:column="75"/></condition><then pos:line="22" pos:column="75"> <block pos:line="22" pos:column="76">{
            <return pos:line="23" pos:column="13">return <expr><name pos:line="23" pos:column="20">HTTP_NOT_FOUND<pos:position pos:line="23" pos:column="34"/></name></expr>;<pos:position pos:line="23" pos:column="35"/></return>
        }<pos:position pos:line="24" pos:column="10"/></block></then>
        <else pos:line="25" pos:column="9">else <block pos:line="25" pos:column="14">{
            <return pos:line="26" pos:column="13">return <expr><name pos:line="26" pos:column="20">HTTP_FORBIDDEN<pos:position pos:line="26" pos:column="34"/></name></expr>;<pos:position pos:line="26" pos:column="35"/></return>
        }<pos:position pos:line="27" pos:column="10"/></block></else></if>
    }<pos:position pos:line="28" pos:column="6"/></block></then></if>

    <expr_stmt><expr><call><name pos:line="30" pos:column="5">clean_var_rec<pos:position pos:line="30" pos:column="18"/></name><argument_list pos:line="30" pos:column="18">(<argument><expr><operator pos:line="30" pos:column="19">&amp;<pos:position pos:line="30" pos:column="24"/></operator><name pos:line="30" pos:column="20">mime_info<pos:position pos:line="30" pos:column="29"/></name></expr></argument>)<pos:position pos:line="30" pos:column="30"/></argument_list></call></expr>;<pos:position pos:line="30" pos:column="31"/></expr_stmt>
    <expr_stmt><expr><name pos:line="31" pos:column="5">has_content<pos:position pos:line="31" pos:column="16"/></name> <operator pos:line="31" pos:column="17">=<pos:position pos:line="31" pos:column="18"/></operator> <literal type="number" pos:line="31" pos:column="19">0<pos:position pos:line="31" pos:column="20"/></literal></expr>;<pos:position pos:line="31" pos:column="21"/></expr_stmt>

    <do pos:line="33" pos:column="5">do <block pos:line="33" pos:column="8">{
        <expr_stmt><expr><name pos:line="34" pos:column="9">hstate<pos:position pos:line="34" pos:column="15"/></name> <operator pos:line="34" pos:column="16">=<pos:position pos:line="34" pos:column="17"/></operator> <call><name pos:line="34" pos:column="18">get_header_line<pos:position pos:line="34" pos:column="33"/></name><argument_list pos:line="34" pos:column="33">(<argument><expr><name pos:line="34" pos:column="34">buffer<pos:position pos:line="34" pos:column="40"/></name></expr></argument>, <argument><expr><name pos:line="34" pos:column="42">MAX_STRING_LEN<pos:position pos:line="34" pos:column="56"/></name></expr></argument>, <argument><expr><operator pos:line="34" pos:column="58">*<pos:position pos:line="34" pos:column="59"/></operator><name pos:line="34" pos:column="59">map<pos:position pos:line="34" pos:column="62"/></name></expr></argument>)<pos:position pos:line="34" pos:column="63"/></argument_list></call></expr>;<pos:position pos:line="34" pos:column="64"/></expr_stmt>

        <if pos:line="36" pos:column="9">if <condition pos:line="36" pos:column="12">(<expr><name pos:line="36" pos:column="13">hstate<pos:position pos:line="36" pos:column="19"/></name> <operator pos:line="36" pos:column="20">==<pos:position pos:line="36" pos:column="22"/></operator> <name pos:line="36" pos:column="23">header_seen<pos:position pos:line="36" pos:column="34"/></name></expr>)<pos:position pos:line="36" pos:column="35"/></condition><then pos:line="36" pos:column="35"> <block pos:line="36" pos:column="36">{
            <decl_stmt><decl><type><name pos:line="37" pos:column="13">char<pos:position pos:line="37" pos:column="17"/></name> <modifier pos:line="37" pos:column="18">*<pos:position pos:line="37" pos:column="19"/></modifier></type><name pos:line="37" pos:column="19">body1<pos:position pos:line="37" pos:column="24"/></name> <init pos:line="37" pos:column="25">= <expr><call><name pos:line="37" pos:column="27">lcase_header_name_return_body<pos:position pos:line="37" pos:column="56"/></name><argument_list pos:line="37" pos:column="56">(<argument><expr><name pos:line="37" pos:column="57">buffer<pos:position pos:line="37" pos:column="63"/></name></expr></argument>, <argument><expr><name><name pos:line="37" pos:column="65">neg<pos:position pos:line="37" pos:column="68"/></name><operator pos:line="37" pos:column="68">-&gt;<pos:position pos:line="37" pos:column="73"/></operator><name pos:line="37" pos:column="70">r<pos:position pos:line="37" pos:column="71"/></name></name></expr></argument>)<pos:position pos:line="37" pos:column="72"/></argument_list></call></expr></init></decl>;<pos:position pos:line="37" pos:column="73"/></decl_stmt>
            <decl_stmt><decl><type><specifier pos:line="38" pos:column="13">const<pos:position pos:line="38" pos:column="18"/></specifier> <name pos:line="38" pos:column="19">char<pos:position pos:line="38" pos:column="23"/></name> <modifier pos:line="38" pos:column="24">*<pos:position pos:line="38" pos:column="25"/></modifier></type><name pos:line="38" pos:column="25">body<pos:position pos:line="38" pos:column="29"/></name></decl>;<pos:position pos:line="38" pos:column="30"/></decl_stmt>

            <if pos:line="40" pos:column="13">if <condition pos:line="40" pos:column="16">(<expr><name pos:line="40" pos:column="17">body1<pos:position pos:line="40" pos:column="22"/></name> <operator pos:line="40" pos:column="23">==<pos:position pos:line="40" pos:column="25"/></operator> <name pos:line="40" pos:column="26">NULL<pos:position pos:line="40" pos:column="30"/></name></expr>)<pos:position pos:line="40" pos:column="31"/></condition><then pos:line="40" pos:column="31"> <block pos:line="40" pos:column="32">{
                <return pos:line="41" pos:column="17">return <expr><name pos:line="41" pos:column="24">HTTP_INTERNAL_SERVER_ERROR<pos:position pos:line="41" pos:column="50"/></name></expr>;<pos:position pos:line="41" pos:column="51"/></return>
            }<pos:position pos:line="42" pos:column="14"/></block></then></if>

            <expr_stmt><expr><call><name pos:line="44" pos:column="13">strip_paren_comments<pos:position pos:line="44" pos:column="33"/></name><argument_list pos:line="44" pos:column="33">(<argument><expr><name pos:line="44" pos:column="34">body1<pos:position pos:line="44" pos:column="39"/></name></expr></argument>)<pos:position pos:line="44" pos:column="40"/></argument_list></call></expr>;<pos:position pos:line="44" pos:column="41"/></expr_stmt>
            <expr_stmt><expr><name pos:line="45" pos:column="13">body<pos:position pos:line="45" pos:column="17"/></name> <operator pos:line="45" pos:column="18">=<pos:position pos:line="45" pos:column="19"/></operator> <name pos:line="45" pos:column="20">body1<pos:position pos:line="45" pos:column="25"/></name></expr>;<pos:position pos:line="45" pos:column="26"/></expr_stmt>

            <if pos:line="47" pos:column="13">if <condition pos:line="47" pos:column="16">(<expr><operator pos:line="47" pos:column="17">!<pos:position pos:line="47" pos:column="18"/></operator><call><name pos:line="47" pos:column="18">strncmp<pos:position pos:line="47" pos:column="25"/></name><argument_list pos:line="47" pos:column="25">(<argument><expr><name pos:line="47" pos:column="26">buffer<pos:position pos:line="47" pos:column="32"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="47" pos:column="34">"uri:"<pos:position pos:line="47" pos:column="40"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="47" pos:column="42">4<pos:position pos:line="47" pos:column="43"/></literal></expr></argument>)<pos:position pos:line="47" pos:column="44"/></argument_list></call></expr>)<pos:position pos:line="47" pos:column="45"/></condition><then pos:line="47" pos:column="45"> <block pos:line="47" pos:column="46">{
                <expr_stmt><expr><name><name pos:line="48" pos:column="17">mime_info<pos:position pos:line="48" pos:column="26"/></name><operator pos:line="48" pos:column="26">.<pos:position pos:line="48" pos:column="27"/></operator><name pos:line="48" pos:column="27">file_name<pos:position pos:line="48" pos:column="36"/></name></name> <operator pos:line="48" pos:column="37">=<pos:position pos:line="48" pos:column="38"/></operator> <call><name pos:line="48" pos:column="39">ap_get_token<pos:position pos:line="48" pos:column="51"/></name><argument_list pos:line="48" pos:column="51">(<argument><expr><name><name pos:line="48" pos:column="52">neg<pos:position pos:line="48" pos:column="55"/></name><operator pos:line="48" pos:column="55">-&gt;<pos:position pos:line="48" pos:column="60"/></operator><name pos:line="48" pos:column="57">pool<pos:position pos:line="48" pos:column="61"/></name></name></expr></argument>, <argument><expr><operator pos:line="48" pos:column="63">&amp;<pos:position pos:line="48" pos:column="68"/></operator><name pos:line="48" pos:column="64">body<pos:position pos:line="48" pos:column="68"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="48" pos:column="70">0<pos:position pos:line="48" pos:column="71"/></literal></expr></argument>)<pos:position pos:line="48" pos:column="72"/></argument_list></call></expr>;<pos:position pos:line="48" pos:column="73"/></expr_stmt>
            }<pos:position pos:line="49" pos:column="14"/></block></then>
            <elseif pos:line="50" pos:column="13">else <if pos:line="50" pos:column="18">if <condition pos:line="50" pos:column="21">(<expr><operator pos:line="50" pos:column="22">!<pos:position pos:line="50" pos:column="23"/></operator><call><name pos:line="50" pos:column="23">strncmp<pos:position pos:line="50" pos:column="30"/></name><argument_list pos:line="50" pos:column="30">(<argument><expr><name pos:line="50" pos:column="31">buffer<pos:position pos:line="50" pos:column="37"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="50" pos:column="39">"content-type:"<pos:position pos:line="50" pos:column="54"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="50" pos:column="56">13<pos:position pos:line="50" pos:column="58"/></literal></expr></argument>)<pos:position pos:line="50" pos:column="59"/></argument_list></call></expr>)<pos:position pos:line="50" pos:column="60"/></condition><then pos:line="50" pos:column="60"> <block pos:line="50" pos:column="61">{
                <decl_stmt><decl><type><name><name pos:line="51" pos:column="17">struct<pos:position pos:line="51" pos:column="23"/></name> <name pos:line="51" pos:column="24">accept_rec<pos:position pos:line="51" pos:column="34"/></name></name></type> <name pos:line="51" pos:column="35">accept_info<pos:position pos:line="51" pos:column="46"/></name></decl>;<pos:position pos:line="51" pos:column="47"/></decl_stmt>

                <expr_stmt><expr><call><name pos:line="53" pos:column="17">get_entry<pos:position pos:line="53" pos:column="26"/></name><argument_list pos:line="53" pos:column="26">(<argument><expr><name><name pos:line="53" pos:column="27">neg<pos:position pos:line="53" pos:column="30"/></name><operator pos:line="53" pos:column="30">-&gt;<pos:position pos:line="53" pos:column="35"/></operator><name pos:line="53" pos:column="32">pool<pos:position pos:line="53" pos:column="36"/></name></name></expr></argument>, <argument><expr><operator pos:line="53" pos:column="38">&amp;<pos:position pos:line="53" pos:column="43"/></operator><name pos:line="53" pos:column="39">accept_info<pos:position pos:line="53" pos:column="50"/></name></expr></argument>, <argument><expr><name pos:line="53" pos:column="52">body<pos:position pos:line="53" pos:column="56"/></name></expr></argument>)<pos:position pos:line="53" pos:column="57"/></argument_list></call></expr>;<pos:position pos:line="53" pos:column="58"/></expr_stmt>
                <expr_stmt><expr><call><name pos:line="54" pos:column="17">set_mime_fields<pos:position pos:line="54" pos:column="32"/></name><argument_list pos:line="54" pos:column="32">(<argument><expr><operator pos:line="54" pos:column="33">&amp;<pos:position pos:line="54" pos:column="38"/></operator><name pos:line="54" pos:column="34">mime_info<pos:position pos:line="54" pos:column="43"/></name></expr></argument>, <argument><expr><operator pos:line="54" pos:column="45">&amp;<pos:position pos:line="54" pos:column="50"/></operator><name pos:line="54" pos:column="46">accept_info<pos:position pos:line="54" pos:column="57"/></name></expr></argument>)<pos:position pos:line="54" pos:column="58"/></argument_list></call></expr>;<pos:position pos:line="54" pos:column="59"/></expr_stmt>
                <expr_stmt><expr><name pos:line="55" pos:column="17">has_content<pos:position pos:line="55" pos:column="28"/></name> <operator pos:line="55" pos:column="29">=<pos:position pos:line="55" pos:column="30"/></operator> <literal type="number" pos:line="55" pos:column="31">1<pos:position pos:line="55" pos:column="32"/></literal></expr>;<pos:position pos:line="55" pos:column="33"/></expr_stmt>
            }<pos:position pos:line="56" pos:column="14"/></block></then></if></elseif>
            <elseif pos:line="57" pos:column="13">else <if pos:line="57" pos:column="18">if <condition pos:line="57" pos:column="21">(<expr><operator pos:line="57" pos:column="22">!<pos:position pos:line="57" pos:column="23"/></operator><call><name pos:line="57" pos:column="23">strncmp<pos:position pos:line="57" pos:column="30"/></name><argument_list pos:line="57" pos:column="30">(<argument><expr><name pos:line="57" pos:column="31">buffer<pos:position pos:line="57" pos:column="37"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="57" pos:column="39">"content-length:"<pos:position pos:line="57" pos:column="56"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="57" pos:column="58">15<pos:position pos:line="57" pos:column="60"/></literal></expr></argument>)<pos:position pos:line="57" pos:column="61"/></argument_list></call></expr>)<pos:position pos:line="57" pos:column="62"/></condition><then pos:line="57" pos:column="62"> <block pos:line="57" pos:column="63">{
                <decl_stmt><decl><type><name pos:line="58" pos:column="17">char<pos:position pos:line="58" pos:column="21"/></name> <modifier pos:line="58" pos:column="22">*<pos:position pos:line="58" pos:column="23"/></modifier></type><name pos:line="58" pos:column="23">errp<pos:position pos:line="58" pos:column="27"/></name></decl>;<pos:position pos:line="58" pos:column="28"/></decl_stmt>
                <decl_stmt><decl><type><name pos:line="59" pos:column="17">apr_off_t<pos:position pos:line="59" pos:column="26"/></name></type> <name pos:line="59" pos:column="27">number<pos:position pos:line="59" pos:column="33"/></name></decl>;<pos:position pos:line="59" pos:column="34"/></decl_stmt>

                <if pos:line="61" pos:column="17">if <condition pos:line="61" pos:column="20">(<expr><call><name pos:line="61" pos:column="21">apr_strtoff<pos:position pos:line="61" pos:column="32"/></name><argument_list pos:line="61" pos:column="32">(<argument><expr><operator pos:line="61" pos:column="33">&amp;<pos:position pos:line="61" pos:column="38"/></operator><name pos:line="61" pos:column="34">number<pos:position pos:line="61" pos:column="40"/></name></expr></argument>, <argument><expr><name pos:line="61" pos:column="42">body<pos:position pos:line="61" pos:column="46"/></name></expr></argument>, <argument><expr><operator pos:line="61" pos:column="48">&amp;<pos:position pos:line="61" pos:column="53"/></operator><name pos:line="61" pos:column="49">errp<pos:position pos:line="61" pos:column="53"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="61" pos:column="55">10<pos:position pos:line="61" pos:column="57"/></literal></expr></argument>)<pos:position pos:line="61" pos:column="58"/></argument_list></call>
                    <operator pos:line="62" pos:column="21">||<pos:position pos:line="62" pos:column="23"/></operator> <operator pos:line="62" pos:column="24">*<pos:position pos:line="62" pos:column="25"/></operator><name pos:line="62" pos:column="25">errp<pos:position pos:line="62" pos:column="29"/></name> <operator pos:line="62" pos:column="30">||<pos:position pos:line="62" pos:column="32"/></operator> <name pos:line="62" pos:column="33">number<pos:position pos:line="62" pos:column="39"/></name> <operator pos:line="62" pos:column="40">&lt;<pos:position pos:line="62" pos:column="44"/></operator> <literal type="number" pos:line="62" pos:column="42">0<pos:position pos:line="62" pos:column="43"/></literal></expr>)<pos:position pos:line="62" pos:column="44"/></condition><then pos:line="62" pos:column="44"> <block pos:line="62" pos:column="45">{
                    <expr_stmt><expr><call><name pos:line="63" pos:column="21">ap_log_rerror<pos:position pos:line="63" pos:column="34"/></name><argument_list pos:line="63" pos:column="34">(<argument><expr><name pos:line="63" pos:column="35">APLOG_MARK<pos:position pos:line="63" pos:column="45"/></name></expr></argument>, <argument><expr><name pos:line="63" pos:column="47">APLOG_ERR<pos:position pos:line="63" pos:column="56"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="63" pos:column="58">0<pos:position pos:line="63" pos:column="59"/></literal></expr></argument>, <argument><expr><name pos:line="63" pos:column="61">r<pos:position pos:line="63" pos:column="62"/></name></expr></argument>,
                                  <argument><expr><literal type="string" pos:line="64" pos:column="35">"Parse error in type map, Content-Length: "<pos:position pos:line="64" pos:column="78"/></literal>
                                  <literal type="string" pos:line="65" pos:column="35">"'%s' in %s is invalid."<pos:position pos:line="65" pos:column="59"/></literal></expr></argument>,
                                  <argument><expr><name pos:line="66" pos:column="35">body<pos:position pos:line="66" pos:column="39"/></name></expr></argument>, <argument><expr><name><name pos:line="66" pos:column="41">r<pos:position pos:line="66" pos:column="42"/></name><operator pos:line="66" pos:column="42">-&gt;<pos:position pos:line="66" pos:column="47"/></operator><name pos:line="66" pos:column="44">filename<pos:position pos:line="66" pos:column="52"/></name></name></expr></argument>)<pos:position pos:line="66" pos:column="53"/></argument_list></call></expr>;<pos:position pos:line="66" pos:column="54"/></expr_stmt>
                    <break pos:line="67" pos:column="21">break;<pos:position pos:line="67" pos:column="27"/></break>
                }<pos:position pos:line="68" pos:column="18"/></block></then></if>
                <expr_stmt><expr><name><name pos:line="69" pos:column="17">mime_info<pos:position pos:line="69" pos:column="26"/></name><operator pos:line="69" pos:column="26">.<pos:position pos:line="69" pos:column="27"/></operator><name pos:line="69" pos:column="27">bytes<pos:position pos:line="69" pos:column="32"/></name></name> <operator pos:line="69" pos:column="33">=<pos:position pos:line="69" pos:column="34"/></operator> <name pos:line="69" pos:column="35">number<pos:position pos:line="69" pos:column="41"/></name></expr>;<pos:position pos:line="69" pos:column="42"/></expr_stmt>
                <expr_stmt><expr><name pos:line="70" pos:column="17">has_content<pos:position pos:line="70" pos:column="28"/></name> <operator pos:line="70" pos:column="29">=<pos:position pos:line="70" pos:column="30"/></operator> <literal type="number" pos:line="70" pos:column="31">1<pos:position pos:line="70" pos:column="32"/></literal></expr>;<pos:position pos:line="70" pos:column="33"/></expr_stmt>
            }<pos:position pos:line="71" pos:column="14"/></block></then></if></elseif>
            <elseif pos:line="72" pos:column="13">else <if pos:line="72" pos:column="18">if <condition pos:line="72" pos:column="21">(<expr><operator pos:line="72" pos:column="22">!<pos:position pos:line="72" pos:column="23"/></operator><call><name pos:line="72" pos:column="23">strncmp<pos:position pos:line="72" pos:column="30"/></name><argument_list pos:line="72" pos:column="30">(<argument><expr><name pos:line="72" pos:column="31">buffer<pos:position pos:line="72" pos:column="37"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="72" pos:column="39">"content-language:"<pos:position pos:line="72" pos:column="58"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="72" pos:column="60">17<pos:position pos:line="72" pos:column="62"/></literal></expr></argument>)<pos:position pos:line="72" pos:column="63"/></argument_list></call></expr>)<pos:position pos:line="72" pos:column="64"/></condition><then pos:line="72" pos:column="64"> <block pos:line="72" pos:column="65">{
                <expr_stmt><expr><name><name pos:line="73" pos:column="17">mime_info<pos:position pos:line="73" pos:column="26"/></name><operator pos:line="73" pos:column="26">.<pos:position pos:line="73" pos:column="27"/></operator><name pos:line="73" pos:column="27">content_languages<pos:position pos:line="73" pos:column="44"/></name></name> <operator pos:line="73" pos:column="45">=<pos:position pos:line="73" pos:column="46"/></operator> <call><name pos:line="73" pos:column="47">do_languages_line<pos:position pos:line="73" pos:column="64"/></name><argument_list pos:line="73" pos:column="64">(<argument><expr><name><name pos:line="73" pos:column="65">neg<pos:position pos:line="73" pos:column="68"/></name><operator pos:line="73" pos:column="68">-&gt;<pos:position pos:line="73" pos:column="73"/></operator><name pos:line="73" pos:column="70">pool<pos:position pos:line="73" pos:column="74"/></name></name></expr></argument>,
                                                                <argument><expr><operator pos:line="74" pos:column="65">&amp;<pos:position pos:line="74" pos:column="70"/></operator><name pos:line="74" pos:column="66">body<pos:position pos:line="74" pos:column="70"/></name></expr></argument>)<pos:position pos:line="74" pos:column="71"/></argument_list></call></expr>;<pos:position pos:line="74" pos:column="72"/></expr_stmt>
                <expr_stmt><expr><name pos:line="75" pos:column="17">has_content<pos:position pos:line="75" pos:column="28"/></name> <operator pos:line="75" pos:column="29">=<pos:position pos:line="75" pos:column="30"/></operator> <literal type="number" pos:line="75" pos:column="31">1<pos:position pos:line="75" pos:column="32"/></literal></expr>;<pos:position pos:line="75" pos:column="33"/></expr_stmt>
            }<pos:position pos:line="76" pos:column="14"/></block></then></if></elseif>
            <elseif pos:line="77" pos:column="13">else <if pos:line="77" pos:column="18">if <condition pos:line="77" pos:column="21">(<expr><operator pos:line="77" pos:column="22">!<pos:position pos:line="77" pos:column="23"/></operator><call><name pos:line="77" pos:column="23">strncmp<pos:position pos:line="77" pos:column="30"/></name><argument_list pos:line="77" pos:column="30">(<argument><expr><name pos:line="77" pos:column="31">buffer<pos:position pos:line="77" pos:column="37"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="77" pos:column="39">"content-encoding:"<pos:position pos:line="77" pos:column="58"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="77" pos:column="60">17<pos:position pos:line="77" pos:column="62"/></literal></expr></argument>)<pos:position pos:line="77" pos:column="63"/></argument_list></call></expr>)<pos:position pos:line="77" pos:column="64"/></condition><then pos:line="77" pos:column="64"> <block pos:line="77" pos:column="65">{
                <expr_stmt><expr><name><name pos:line="78" pos:column="17">mime_info<pos:position pos:line="78" pos:column="26"/></name><operator pos:line="78" pos:column="26">.<pos:position pos:line="78" pos:column="27"/></operator><name pos:line="78" pos:column="27">content_encoding<pos:position pos:line="78" pos:column="43"/></name></name> <operator pos:line="78" pos:column="44">=<pos:position pos:line="78" pos:column="45"/></operator> <call><name pos:line="78" pos:column="46">ap_get_token<pos:position pos:line="78" pos:column="58"/></name><argument_list pos:line="78" pos:column="58">(<argument><expr><name><name pos:line="78" pos:column="59">neg<pos:position pos:line="78" pos:column="62"/></name><operator pos:line="78" pos:column="62">-&gt;<pos:position pos:line="78" pos:column="67"/></operator><name pos:line="78" pos:column="64">pool<pos:position pos:line="78" pos:column="68"/></name></name></expr></argument>, <argument><expr><operator pos:line="78" pos:column="70">&amp;<pos:position pos:line="78" pos:column="75"/></operator><name pos:line="78" pos:column="71">body<pos:position pos:line="78" pos:column="75"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="78" pos:column="77">0<pos:position pos:line="78" pos:column="78"/></literal></expr></argument>)<pos:position pos:line="78" pos:column="79"/></argument_list></call></expr>;<pos:position pos:line="78" pos:column="80"/></expr_stmt>
                <expr_stmt><expr><name pos:line="79" pos:column="17">has_content<pos:position pos:line="79" pos:column="28"/></name> <operator pos:line="79" pos:column="29">=<pos:position pos:line="79" pos:column="30"/></operator> <literal type="number" pos:line="79" pos:column="31">1<pos:position pos:line="79" pos:column="32"/></literal></expr>;<pos:position pos:line="79" pos:column="33"/></expr_stmt>
            }<pos:position pos:line="80" pos:column="14"/></block></then></if></elseif>
            <elseif pos:line="81" pos:column="13">else <if pos:line="81" pos:column="18">if <condition pos:line="81" pos:column="21">(<expr><operator pos:line="81" pos:column="22">!<pos:position pos:line="81" pos:column="23"/></operator><call><name pos:line="81" pos:column="23">strncmp<pos:position pos:line="81" pos:column="30"/></name><argument_list pos:line="81" pos:column="30">(<argument><expr><name pos:line="81" pos:column="31">buffer<pos:position pos:line="81" pos:column="37"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="81" pos:column="39">"description:"<pos:position pos:line="81" pos:column="53"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="81" pos:column="55">12<pos:position pos:line="81" pos:column="57"/></literal></expr></argument>)<pos:position pos:line="81" pos:column="58"/></argument_list></call></expr>)<pos:position pos:line="81" pos:column="59"/></condition><then pos:line="81" pos:column="59"> <block pos:line="81" pos:column="60">{
                <decl_stmt><decl><type><name pos:line="82" pos:column="17">char<pos:position pos:line="82" pos:column="21"/></name> <modifier pos:line="82" pos:column="22">*<pos:position pos:line="82" pos:column="23"/></modifier></type><name pos:line="82" pos:column="23">desc<pos:position pos:line="82" pos:column="27"/></name> <init pos:line="82" pos:column="28">= <expr><call><name pos:line="82" pos:column="30">apr_pstrdup<pos:position pos:line="82" pos:column="41"/></name><argument_list pos:line="82" pos:column="41">(<argument><expr><name><name pos:line="82" pos:column="42">neg<pos:position pos:line="82" pos:column="45"/></name><operator pos:line="82" pos:column="45">-&gt;<pos:position pos:line="82" pos:column="50"/></operator><name pos:line="82" pos:column="47">pool<pos:position pos:line="82" pos:column="51"/></name></name></expr></argument>, <argument><expr><name pos:line="82" pos:column="53">body<pos:position pos:line="82" pos:column="57"/></name></expr></argument>)<pos:position pos:line="82" pos:column="58"/></argument_list></call></expr></init></decl>;<pos:position pos:line="82" pos:column="59"/></decl_stmt>
                <decl_stmt><decl><type><name pos:line="83" pos:column="17">char<pos:position pos:line="83" pos:column="21"/></name> <modifier pos:line="83" pos:column="22">*<pos:position pos:line="83" pos:column="23"/></modifier></type><name pos:line="83" pos:column="23">cp<pos:position pos:line="83" pos:column="25"/></name></decl>;<pos:position pos:line="83" pos:column="26"/></decl_stmt>

                <for pos:line="85" pos:column="17">for <control pos:line="85" pos:column="21">(<init><expr><name pos:line="85" pos:column="22">cp<pos:position pos:line="85" pos:column="24"/></name> <operator pos:line="85" pos:column="25">=<pos:position pos:line="85" pos:column="26"/></operator> <name pos:line="85" pos:column="27">desc<pos:position pos:line="85" pos:column="31"/></name></expr>;<pos:position pos:line="85" pos:column="32"/></init> <condition><expr><operator pos:line="85" pos:column="33">*<pos:position pos:line="85" pos:column="34"/></operator><name pos:line="85" pos:column="34">cp<pos:position pos:line="85" pos:column="36"/></name></expr>;<pos:position pos:line="85" pos:column="37"/></condition> <incr><expr><operator pos:line="85" pos:column="38">++<pos:position pos:line="85" pos:column="40"/></operator><name pos:line="85" pos:column="40">cp<pos:position pos:line="85" pos:column="42"/></name></expr></incr>)<pos:position pos:line="85" pos:column="43"/></control> <block pos:line="85" pos:column="44">{
                    <if pos:line="86" pos:column="21">if <condition pos:line="86" pos:column="24">(<expr><operator pos:line="86" pos:column="25">*<pos:position pos:line="86" pos:column="26"/></operator><name pos:line="86" pos:column="26">cp<pos:position pos:line="86" pos:column="28"/></name><operator pos:line="86" pos:column="28">==<pos:position pos:line="86" pos:column="30"/></operator><literal type="char" pos:line="86" pos:column="30">'\n'<pos:position pos:line="86" pos:column="34"/></literal></expr>)<pos:position pos:line="86" pos:column="35"/></condition><then pos:line="86" pos:column="35"> <block type="pseudo"><expr_stmt><expr><operator pos:line="86" pos:column="36">*<pos:position pos:line="86" pos:column="37"/></operator><name pos:line="86" pos:column="37">cp<pos:position pos:line="86" pos:column="39"/></name><operator pos:line="86" pos:column="39">=<pos:position pos:line="86" pos:column="40"/></operator><literal type="char" pos:line="86" pos:column="40">' '<pos:position pos:line="86" pos:column="43"/></literal></expr>;<pos:position pos:line="86" pos:column="44"/></expr_stmt></block></then></if>
                }<pos:position pos:line="87" pos:column="18"/></block></for>
                <if pos:line="88" pos:column="17">if <condition pos:line="88" pos:column="20">(<expr><name pos:line="88" pos:column="21">cp<pos:position pos:line="88" pos:column="23"/></name><operator pos:line="88" pos:column="23">&gt;<pos:position pos:line="88" pos:column="27"/></operator><name pos:line="88" pos:column="24">desc<pos:position pos:line="88" pos:column="28"/></name></expr>)<pos:position pos:line="88" pos:column="29"/></condition><then pos:line="88" pos:column="29"> <block type="pseudo"><expr_stmt><expr><operator pos:line="88" pos:column="30">*<pos:position pos:line="88" pos:column="31"/></operator><operator pos:line="88" pos:column="31">(<pos:position pos:line="88" pos:column="32"/></operator><name pos:line="88" pos:column="32">cp<pos:position pos:line="88" pos:column="34"/></name><operator pos:line="88" pos:column="34">-<pos:position pos:line="88" pos:column="35"/></operator><literal type="number" pos:line="88" pos:column="35">1<pos:position pos:line="88" pos:column="36"/></literal><operator pos:line="88" pos:column="36">)<pos:position pos:line="88" pos:column="37"/></operator><operator pos:line="88" pos:column="37">=<pos:position pos:line="88" pos:column="38"/></operator><literal type="number" pos:line="88" pos:column="38">0<pos:position pos:line="88" pos:column="39"/></literal></expr>;<pos:position pos:line="88" pos:column="40"/></expr_stmt></block></then></if>
                <expr_stmt><expr><name><name pos:line="89" pos:column="17">mime_info<pos:position pos:line="89" pos:column="26"/></name><operator pos:line="89" pos:column="26">.<pos:position pos:line="89" pos:column="27"/></operator><name pos:line="89" pos:column="27">description<pos:position pos:line="89" pos:column="38"/></name></name> <operator pos:line="89" pos:column="39">=<pos:position pos:line="89" pos:column="40"/></operator> <name pos:line="89" pos:column="41">desc<pos:position pos:line="89" pos:column="45"/></name></expr>;<pos:position pos:line="89" pos:column="46"/></expr_stmt>
            }<pos:position pos:line="90" pos:column="14"/></block></then></if></elseif>
            <elseif pos:line="91" pos:column="13">else <if pos:line="91" pos:column="18">if <condition pos:line="91" pos:column="21">(<expr><operator pos:line="91" pos:column="22">!<pos:position pos:line="91" pos:column="23"/></operator><call><name pos:line="91" pos:column="23">strncmp<pos:position pos:line="91" pos:column="30"/></name><argument_list pos:line="91" pos:column="30">(<argument><expr><name pos:line="91" pos:column="31">buffer<pos:position pos:line="91" pos:column="37"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="91" pos:column="39">"body:"<pos:position pos:line="91" pos:column="46"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="91" pos:column="48">5<pos:position pos:line="91" pos:column="49"/></literal></expr></argument>)<pos:position pos:line="91" pos:column="50"/></argument_list></call></expr>)<pos:position pos:line="91" pos:column="51"/></condition><then pos:line="91" pos:column="51"> <block pos:line="91" pos:column="52">{
                <decl_stmt><decl><type><name pos:line="92" pos:column="17">char<pos:position pos:line="92" pos:column="21"/></name> <modifier pos:line="92" pos:column="22">*<pos:position pos:line="92" pos:column="23"/></modifier></type><name pos:line="92" pos:column="23">tag<pos:position pos:line="92" pos:column="26"/></name> <init pos:line="92" pos:column="27">= <expr><call><name pos:line="92" pos:column="29">apr_pstrdup<pos:position pos:line="92" pos:column="40"/></name><argument_list pos:line="92" pos:column="40">(<argument><expr><name><name pos:line="92" pos:column="41">neg<pos:position pos:line="92" pos:column="44"/></name><operator pos:line="92" pos:column="44">-&gt;<pos:position pos:line="92" pos:column="49"/></operator><name pos:line="92" pos:column="46">pool<pos:position pos:line="92" pos:column="50"/></name></name></expr></argument>, <argument><expr><name pos:line="92" pos:column="52">body<pos:position pos:line="92" pos:column="56"/></name></expr></argument>)<pos:position pos:line="92" pos:column="57"/></argument_list></call></expr></init></decl>;<pos:position pos:line="92" pos:column="58"/></decl_stmt>
                <decl_stmt><decl><type><name pos:line="93" pos:column="17">char<pos:position pos:line="93" pos:column="21"/></name> <modifier pos:line="93" pos:column="22">*<pos:position pos:line="93" pos:column="23"/></modifier></type><name pos:line="93" pos:column="23">eol<pos:position pos:line="93" pos:column="26"/></name> <init pos:line="93" pos:column="27">= <expr><call><name pos:line="93" pos:column="29">strchr<pos:position pos:line="93" pos:column="35"/></name><argument_list pos:line="93" pos:column="35">(<argument><expr><name pos:line="93" pos:column="36">tag<pos:position pos:line="93" pos:column="39"/></name></expr></argument>, <argument><expr><literal type="char" pos:line="93" pos:column="41">'\0'<pos:position pos:line="93" pos:column="45"/></literal></expr></argument>)<pos:position pos:line="93" pos:column="46"/></argument_list></call></expr></init></decl>;<pos:position pos:line="93" pos:column="47"/></decl_stmt>
                <decl_stmt><decl><type><name pos:line="94" pos:column="17">apr_size_t<pos:position pos:line="94" pos:column="27"/></name></type> <name pos:line="94" pos:column="28">len<pos:position pos:line="94" pos:column="31"/></name> <init pos:line="94" pos:column="32">= <expr><name pos:line="94" pos:column="34">MAX_STRING_LEN<pos:position pos:line="94" pos:column="48"/></name></expr></init></decl>;<pos:position pos:line="94" pos:column="49"/></decl_stmt>
                <while pos:line="95" pos:column="17">while <condition pos:line="95" pos:column="23">(<expr><operator pos:line="95" pos:column="24">--<pos:position pos:line="95" pos:column="26"/></operator><name pos:line="95" pos:column="26">eol<pos:position pos:line="95" pos:column="29"/></name> <operator pos:line="95" pos:column="30">&gt;=<pos:position pos:line="95" pos:column="35"/></operator> <name pos:line="95" pos:column="33">tag<pos:position pos:line="95" pos:column="36"/></name> <operator pos:line="95" pos:column="37">&amp;&amp;<pos:position pos:line="95" pos:column="47"/></operator> <call><name pos:line="95" pos:column="40">apr_isspace<pos:position pos:line="95" pos:column="51"/></name><argument_list pos:line="95" pos:column="51">(<argument><expr><operator pos:line="95" pos:column="52">*<pos:position pos:line="95" pos:column="53"/></operator><name pos:line="95" pos:column="53">eol<pos:position pos:line="95" pos:column="56"/></name></expr></argument>)<pos:position pos:line="95" pos:column="57"/></argument_list></call></expr>)<pos:position pos:line="95" pos:column="58"/></condition>
                    <block type="pseudo"><expr_stmt><expr><operator pos:line="96" pos:column="21">*<pos:position pos:line="96" pos:column="22"/></operator><name pos:line="96" pos:column="22">eol<pos:position pos:line="96" pos:column="25"/></name> <operator pos:line="96" pos:column="26">=<pos:position pos:line="96" pos:column="27"/></operator> <literal type="char" pos:line="96" pos:column="28">'\0'<pos:position pos:line="96" pos:column="32"/></literal></expr>;<pos:position pos:line="96" pos:column="33"/></expr_stmt></block></while>
                <if pos:line="97" pos:column="17">if <condition pos:line="97" pos:column="20">(<expr><operator pos:line="97" pos:column="21">(<pos:position pos:line="97" pos:column="22"/></operator><name><name pos:line="97" pos:column="22">mime_info<pos:position pos:line="97" pos:column="31"/></name><operator pos:line="97" pos:column="31">.<pos:position pos:line="97" pos:column="32"/></operator><name pos:line="97" pos:column="32">body<pos:position pos:line="97" pos:column="36"/></name></name> <operator pos:line="97" pos:column="37">=<pos:position pos:line="97" pos:column="38"/></operator> <call><name pos:line="97" pos:column="39">get_body<pos:position pos:line="97" pos:column="47"/></name><argument_list pos:line="97" pos:column="47">(<argument><expr><name pos:line="97" pos:column="48">buffer<pos:position pos:line="97" pos:column="54"/></name></expr></argument>, <argument><expr><operator pos:line="97" pos:column="56">&amp;<pos:position pos:line="97" pos:column="61"/></operator><name pos:line="97" pos:column="57">len<pos:position pos:line="97" pos:column="60"/></name></expr></argument>, <argument><expr><name pos:line="97" pos:column="62">tag<pos:position pos:line="97" pos:column="65"/></name></expr></argument>, <argument><expr><operator pos:line="97" pos:column="67">*<pos:position pos:line="97" pos:column="68"/></operator><name pos:line="97" pos:column="68">map<pos:position pos:line="97" pos:column="71"/></name></expr></argument>)<pos:position pos:line="97" pos:column="72"/></argument_list></call><operator pos:line="97" pos:column="72">)<pos:position pos:line="97" pos:column="73"/></operator> <operator pos:line="97" pos:column="74">&lt;<pos:position pos:line="97" pos:column="78"/></operator> <literal type="number" pos:line="97" pos:column="76">0<pos:position pos:line="97" pos:column="77"/></literal></expr>)<pos:position pos:line="97" pos:column="78"/></condition><then pos:line="97" pos:column="78"> <block pos:line="97" pos:column="79">{
                    <expr_stmt><expr><call><name pos:line="98" pos:column="21">ap_log_rerror<pos:position pos:line="98" pos:column="34"/></name><argument_list pos:line="98" pos:column="34">(<argument><expr><name pos:line="98" pos:column="35">APLOG_MARK<pos:position pos:line="98" pos:column="45"/></name></expr></argument>, <argument><expr><name pos:line="98" pos:column="47">APLOG_ERR<pos:position pos:line="98" pos:column="56"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="98" pos:column="58">0<pos:position pos:line="98" pos:column="59"/></literal></expr></argument>, <argument><expr><name pos:line="98" pos:column="61">r<pos:position pos:line="98" pos:column="62"/></name></expr></argument>,
                                  <argument><expr><literal type="string" pos:line="99" pos:column="35">"Syntax error in type map, no end tag '%s'"<pos:position pos:line="99" pos:column="78"/></literal>
                                  <literal type="string" pos:line="100" pos:column="35">"found in %s for Body: content."<pos:position pos:line="100" pos:column="67"/></literal></expr></argument>,
                                  <argument><expr><name pos:line="101" pos:column="35">tag<pos:position pos:line="101" pos:column="38"/></name></expr></argument>, <argument><expr><name><name pos:line="101" pos:column="40">r<pos:position pos:line="101" pos:column="41"/></name><operator pos:line="101" pos:column="41">-&gt;<pos:position pos:line="101" pos:column="46"/></operator><name pos:line="101" pos:column="43">filename<pos:position pos:line="101" pos:column="51"/></name></name></expr></argument>)<pos:position pos:line="101" pos:column="52"/></argument_list></call></expr>;<pos:position pos:line="101" pos:column="53"/></expr_stmt>
                     <break pos:line="102" pos:column="22">break;<pos:position pos:line="102" pos:column="28"/></break>
                }<pos:position pos:line="103" pos:column="18"/></block></then></if>
                <expr_stmt><expr><name><name pos:line="104" pos:column="17">mime_info<pos:position pos:line="104" pos:column="26"/></name><operator pos:line="104" pos:column="26">.<pos:position pos:line="104" pos:column="27"/></operator><name pos:line="104" pos:column="27">bytes<pos:position pos:line="104" pos:column="32"/></name></name> <operator pos:line="104" pos:column="33">=<pos:position pos:line="104" pos:column="34"/></operator> <name pos:line="104" pos:column="35">len<pos:position pos:line="104" pos:column="38"/></name></expr>;<pos:position pos:line="104" pos:column="39"/></expr_stmt>
                <expr_stmt><expr><name><name pos:line="105" pos:column="17">mime_info<pos:position pos:line="105" pos:column="26"/></name><operator pos:line="105" pos:column="26">.<pos:position pos:line="105" pos:column="27"/></operator><name pos:line="105" pos:column="27">file_name<pos:position pos:line="105" pos:column="36"/></name></name> <operator pos:line="105" pos:column="37">=<pos:position pos:line="105" pos:column="38"/></operator> <call><name pos:line="105" pos:column="39">apr_filepath_name_get<pos:position pos:line="105" pos:column="60"/></name><argument_list pos:line="105" pos:column="60">(<argument><expr><name><name pos:line="105" pos:column="61">rr<pos:position pos:line="105" pos:column="63"/></name><operator pos:line="105" pos:column="63">-&gt;<pos:position pos:line="105" pos:column="68"/></operator><name pos:line="105" pos:column="65">filename<pos:position pos:line="105" pos:column="73"/></name></name></expr></argument>)<pos:position pos:line="105" pos:column="74"/></argument_list></call></expr>;<pos:position pos:line="105" pos:column="75"/></expr_stmt>
            }<pos:position pos:line="106" pos:column="14"/></block></then></if></elseif></if>
        }<pos:position pos:line="107" pos:column="10"/></block></then>
        <else pos:line="108" pos:column="9">else <block pos:line="108" pos:column="14">{
            <if pos:line="109" pos:column="13">if <condition pos:line="109" pos:column="16">(<expr><operator pos:line="109" pos:column="17">*<pos:position pos:line="109" pos:column="18"/></operator><name><name pos:line="109" pos:column="18">mime_info<pos:position pos:line="109" pos:column="27"/></name><operator pos:line="109" pos:column="27">.<pos:position pos:line="109" pos:column="28"/></operator><name pos:line="109" pos:column="28">file_name<pos:position pos:line="109" pos:column="37"/></name></name> <operator pos:line="109" pos:column="38">&amp;&amp;<pos:position pos:line="109" pos:column="48"/></operator> <name pos:line="109" pos:column="41">has_content<pos:position pos:line="109" pos:column="52"/></name></expr>)<pos:position pos:line="109" pos:column="53"/></condition><then pos:line="109" pos:column="53"> <block pos:line="109" pos:column="54">{
                <decl_stmt><decl><type><name pos:line="110" pos:column="17">void<pos:position pos:line="110" pos:column="21"/></name> <modifier pos:line="110" pos:column="22">*<pos:position pos:line="110" pos:column="23"/></modifier></type><name pos:line="110" pos:column="23">new_var<pos:position pos:line="110" pos:column="30"/></name> <init pos:line="110" pos:column="31">= <expr><call><name pos:line="110" pos:column="33">apr_array_push<pos:position pos:line="110" pos:column="47"/></name><argument_list pos:line="110" pos:column="47">(<argument><expr><name><name pos:line="110" pos:column="48">neg<pos:position pos:line="110" pos:column="51"/></name><operator pos:line="110" pos:column="51">-&gt;<pos:position pos:line="110" pos:column="56"/></operator><name pos:line="110" pos:column="53">avail_vars<pos:position pos:line="110" pos:column="63"/></name></name></expr></argument>)<pos:position pos:line="110" pos:column="64"/></argument_list></call></expr></init></decl>;<pos:position pos:line="110" pos:column="65"/></decl_stmt>

                <expr_stmt><expr><call><name pos:line="112" pos:column="17">memcpy<pos:position pos:line="112" pos:column="23"/></name><argument_list pos:line="112" pos:column="23">(<argument><expr><name pos:line="112" pos:column="24">new_var<pos:position pos:line="112" pos:column="31"/></name></expr></argument>, <argument><expr><operator pos:line="112" pos:column="33">(<pos:position pos:line="112" pos:column="34"/></operator><name pos:line="112" pos:column="34">void<pos:position pos:line="112" pos:column="38"/></name> <operator pos:line="112" pos:column="39">*<pos:position pos:line="112" pos:column="40"/></operator><operator pos:line="112" pos:column="40">)<pos:position pos:line="112" pos:column="41"/></operator> <operator pos:line="112" pos:column="42">&amp;<pos:position pos:line="112" pos:column="47"/></operator><name pos:line="112" pos:column="43">mime_info<pos:position pos:line="112" pos:column="52"/></name></expr></argument>, <argument><expr><sizeof pos:line="112" pos:column="54">sizeof<argument_list pos:line="112" pos:column="60">(<argument><expr><name pos:line="112" pos:column="61">var_rec<pos:position pos:line="112" pos:column="68"/></name></expr></argument>)<pos:position pos:line="112" pos:column="69"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="112" pos:column="70"/></argument_list></call></expr>;<pos:position pos:line="112" pos:column="71"/></expr_stmt>
            }<pos:position pos:line="113" pos:column="14"/></block></then></if>

            <expr_stmt><expr><call><name pos:line="115" pos:column="13">clean_var_rec<pos:position pos:line="115" pos:column="26"/></name><argument_list pos:line="115" pos:column="26">(<argument><expr><operator pos:line="115" pos:column="27">&amp;<pos:position pos:line="115" pos:column="32"/></operator><name pos:line="115" pos:column="28">mime_info<pos:position pos:line="115" pos:column="37"/></name></expr></argument>)<pos:position pos:line="115" pos:column="38"/></argument_list></call></expr>;<pos:position pos:line="115" pos:column="39"/></expr_stmt>
            <expr_stmt><expr><name pos:line="116" pos:column="13">has_content<pos:position pos:line="116" pos:column="24"/></name> <operator pos:line="116" pos:column="25">=<pos:position pos:line="116" pos:column="26"/></operator> <literal type="number" pos:line="116" pos:column="27">0<pos:position pos:line="116" pos:column="28"/></literal></expr>;<pos:position pos:line="116" pos:column="29"/></expr_stmt>
        }<pos:position pos:line="117" pos:column="10"/></block></else></if>
    }<pos:position pos:line="118" pos:column="6"/></block> while <condition pos:line="118" pos:column="13">(<expr><name pos:line="118" pos:column="14">hstate<pos:position pos:line="118" pos:column="20"/></name> <operator pos:line="118" pos:column="21">!=<pos:position pos:line="118" pos:column="23"/></operator> <name pos:line="118" pos:column="24">header_eof<pos:position pos:line="118" pos:column="34"/></name></expr>)<pos:position pos:line="118" pos:column="35"/></condition>;<pos:position pos:line="118" pos:column="36"/></do>

    <if pos:line="120" pos:column="5">if <condition pos:line="120" pos:column="8">(<expr><name pos:line="120" pos:column="9">map_<pos:position pos:line="120" pos:column="13"/></name></expr>)<pos:position pos:line="120" pos:column="14"/></condition><then pos:line="120" pos:column="14">
        <block type="pseudo"><expr_stmt><expr><call><name pos:line="121" pos:column="9">apr_file_close<pos:position pos:line="121" pos:column="23"/></name><argument_list pos:line="121" pos:column="23">(<argument><expr><name pos:line="121" pos:column="24">map_<pos:position pos:line="121" pos:column="28"/></name></expr></argument>)<pos:position pos:line="121" pos:column="29"/></argument_list></call></expr>;<pos:position pos:line="121" pos:column="30"/></expr_stmt></block></then></if>

    <expr_stmt><expr><call><name pos:line="123" pos:column="5">set_vlist_validator<pos:position pos:line="123" pos:column="24"/></name><argument_list pos:line="123" pos:column="24">(<argument><expr><name pos:line="123" pos:column="25">r<pos:position pos:line="123" pos:column="26"/></name></expr></argument>, <argument><expr><name pos:line="123" pos:column="28">rr<pos:position pos:line="123" pos:column="30"/></name></expr></argument>)<pos:position pos:line="123" pos:column="31"/></argument_list></call></expr>;<pos:position pos:line="123" pos:column="32"/></expr_stmt>

    <return pos:line="125" pos:column="5">return <expr><name pos:line="125" pos:column="12">OK<pos:position pos:line="125" pos:column="14"/></name></expr>;<pos:position pos:line="125" pos:column="15"/></return>
}<pos:position pos:line="126" pos:column="2"/></block></function></unit>

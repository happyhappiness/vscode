<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/httpd/gumtree/httpd_function_6344.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">authz_status<pos:position pos:line="1" pos:column="20"/></name></type>
<name pos:line="2" pos:column="1">forward_dns_check_authorization<pos:position pos:line="2" pos:column="32"/></name><parameter_list pos:line="2" pos:column="32">(<parameter><decl><type><name pos:line="2" pos:column="33">request_rec<pos:position pos:line="2" pos:column="44"/></name> <modifier pos:line="2" pos:column="45">*<pos:position pos:line="2" pos:column="46"/></modifier></type><name pos:line="2" pos:column="46">r<pos:position pos:line="2" pos:column="47"/></name></decl></parameter>,
                                <parameter><decl><type><specifier pos:line="3" pos:column="33">const<pos:position pos:line="3" pos:column="38"/></specifier> <name pos:line="3" pos:column="39">char<pos:position pos:line="3" pos:column="43"/></name> <modifier pos:line="3" pos:column="44">*<pos:position pos:line="3" pos:column="45"/></modifier></type><name pos:line="3" pos:column="45">require_line<pos:position pos:line="3" pos:column="57"/></name></decl></parameter>,
                                <parameter><decl><type><specifier pos:line="4" pos:column="33">const<pos:position pos:line="4" pos:column="38"/></specifier> <name pos:line="4" pos:column="39">void<pos:position pos:line="4" pos:column="43"/></name> <modifier pos:line="4" pos:column="44">*<pos:position pos:line="4" pos:column="45"/></modifier></type><name pos:line="4" pos:column="45">parsed_require_line<pos:position pos:line="4" pos:column="64"/></name></decl></parameter>)<pos:position pos:line="4" pos:column="65"/></parameter_list>
<block pos:line="5" pos:column="1">{
    <decl_stmt><decl><type><specifier pos:line="6" pos:column="5">const<pos:position pos:line="6" pos:column="10"/></specifier> <name pos:line="6" pos:column="11">char<pos:position pos:line="6" pos:column="15"/></name> <modifier pos:line="6" pos:column="16">*<pos:position pos:line="6" pos:column="17"/></modifier></type><name pos:line="6" pos:column="17">err<pos:position pos:line="6" pos:column="20"/></name> <init pos:line="6" pos:column="21">= <expr><name pos:line="6" pos:column="23">NULL<pos:position pos:line="6" pos:column="27"/></name></expr></init></decl>;<pos:position pos:line="6" pos:column="28"/></decl_stmt>
    <decl_stmt><decl><type><specifier pos:line="7" pos:column="5">const<pos:position pos:line="7" pos:column="10"/></specifier> <name pos:line="7" pos:column="11">ap_expr_info_t<pos:position pos:line="7" pos:column="25"/></name> <modifier pos:line="7" pos:column="26">*<pos:position pos:line="7" pos:column="27"/></modifier></type><name pos:line="7" pos:column="27">expr<pos:position pos:line="7" pos:column="31"/></name> <init pos:line="7" pos:column="32">= <expr><name pos:line="7" pos:column="34">parsed_require_line<pos:position pos:line="7" pos:column="53"/></name></expr></init></decl>;<pos:position pos:line="7" pos:column="54"/></decl_stmt>
    <decl_stmt><decl><type><specifier pos:line="8" pos:column="5">const<pos:position pos:line="8" pos:column="10"/></specifier> <name pos:line="8" pos:column="11">char<pos:position pos:line="8" pos:column="15"/></name> <modifier pos:line="8" pos:column="16">*<pos:position pos:line="8" pos:column="17"/></modifier></type><name pos:line="8" pos:column="17">require<pos:position pos:line="8" pos:column="24"/></name></decl>, <modifier pos:line="8" pos:column="26">*<pos:position pos:line="8" pos:column="27"/></modifier><decl><type ref="prev"/><name pos:line="8" pos:column="27">t<pos:position pos:line="8" pos:column="28"/></name></decl>;<pos:position pos:line="8" pos:column="29"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="9" pos:column="5">char<pos:position pos:line="9" pos:column="9"/></name> <modifier pos:line="9" pos:column="10">*<pos:position pos:line="9" pos:column="11"/></modifier></type><name pos:line="9" pos:column="11">w<pos:position pos:line="9" pos:column="12"/></name></decl>;<pos:position pos:line="9" pos:column="13"/></decl_stmt>

    <comment type="block" pos:line="11" pos:column="5">/* the require line is an expression, which is evaluated now. */</comment>
    <expr_stmt><expr><name pos:line="12" pos:column="5">require<pos:position pos:line="12" pos:column="12"/></name> <operator pos:line="12" pos:column="13">=<pos:position pos:line="12" pos:column="14"/></operator> <call><name pos:line="12" pos:column="15">ap_expr_str_exec<pos:position pos:line="12" pos:column="31"/></name><argument_list pos:line="12" pos:column="31">(<argument><expr><name pos:line="12" pos:column="32">r<pos:position pos:line="12" pos:column="33"/></name></expr></argument>, <argument><expr><name pos:line="12" pos:column="35">expr<pos:position pos:line="12" pos:column="39"/></name></expr></argument>, <argument><expr><operator pos:line="12" pos:column="41">&amp;<pos:position pos:line="12" pos:column="46"/></operator><name pos:line="12" pos:column="42">err<pos:position pos:line="12" pos:column="45"/></name></expr></argument>)<pos:position pos:line="12" pos:column="46"/></argument_list></call></expr>;<pos:position pos:line="12" pos:column="47"/></expr_stmt>
    <if pos:line="13" pos:column="5">if <condition pos:line="13" pos:column="8">(<expr><name pos:line="13" pos:column="9">err<pos:position pos:line="13" pos:column="12"/></name></expr>)<pos:position pos:line="13" pos:column="13"/></condition><then pos:line="13" pos:column="13"> <block pos:line="13" pos:column="14">{
      <expr_stmt><expr><call><name pos:line="14" pos:column="7">ap_log_rerror<pos:position pos:line="14" pos:column="20"/></name><argument_list pos:line="14" pos:column="20">(<argument><expr><name pos:line="14" pos:column="21">APLOG_MARK<pos:position pos:line="14" pos:column="31"/></name></expr></argument>, <argument><expr><name pos:line="14" pos:column="33">APLOG_ERR<pos:position pos:line="14" pos:column="42"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="14" pos:column="44">0<pos:position pos:line="14" pos:column="45"/></literal></expr></argument>, <argument><expr><name pos:line="14" pos:column="47">r<pos:position pos:line="14" pos:column="48"/></name></expr></argument>, <argument><expr><call><name pos:line="14" pos:column="50">APLOGNO<pos:position pos:line="14" pos:column="57"/></name><argument_list pos:line="14" pos:column="57">(<argument><expr><literal type="number" pos:line="14" pos:column="58">03354<pos:position pos:line="14" pos:column="63"/></literal></expr></argument>)<pos:position pos:line="14" pos:column="64"/></argument_list></call>
                    <literal type="string" pos:line="15" pos:column="21">"Can't evaluate require expression: %s"<pos:position pos:line="15" pos:column="60"/></literal></expr></argument>, <argument><expr><name pos:line="15" pos:column="62">err<pos:position pos:line="15" pos:column="65"/></name></expr></argument>)<pos:position pos:line="15" pos:column="66"/></argument_list></call></expr>;<pos:position pos:line="15" pos:column="67"/></expr_stmt>
      <return pos:line="16" pos:column="7">return <expr><name pos:line="16" pos:column="14">AUTHZ_DENIED<pos:position pos:line="16" pos:column="26"/></name></expr>;<pos:position pos:line="16" pos:column="27"/></return>
    }<pos:position pos:line="17" pos:column="6"/></block></then></if>

    <comment type="block" pos:line="19" pos:column="5">/* tokenize expected list of names */</comment>
    <expr_stmt><expr><name pos:line="20" pos:column="5">t<pos:position pos:line="20" pos:column="6"/></name> <operator pos:line="20" pos:column="7">=<pos:position pos:line="20" pos:column="8"/></operator> <name pos:line="20" pos:column="9">require<pos:position pos:line="20" pos:column="16"/></name></expr>;<pos:position pos:line="20" pos:column="17"/></expr_stmt>
    <while pos:line="21" pos:column="5">while <condition pos:line="21" pos:column="11">(<expr><operator pos:line="21" pos:column="12">(<pos:position pos:line="21" pos:column="13"/></operator><name pos:line="21" pos:column="13">w<pos:position pos:line="21" pos:column="14"/></name> <operator pos:line="21" pos:column="15">=<pos:position pos:line="21" pos:column="16"/></operator> <call><name pos:line="21" pos:column="17">ap_getword_conf<pos:position pos:line="21" pos:column="32"/></name><argument_list pos:line="21" pos:column="32">(<argument><expr><name><name pos:line="21" pos:column="33">r<pos:position pos:line="21" pos:column="34"/></name><operator pos:line="21" pos:column="34">-&gt;<pos:position pos:line="21" pos:column="39"/></operator><name pos:line="21" pos:column="36">pool<pos:position pos:line="21" pos:column="40"/></name></name></expr></argument>, <argument><expr><operator pos:line="21" pos:column="42">&amp;<pos:position pos:line="21" pos:column="47"/></operator><name pos:line="21" pos:column="43">t<pos:position pos:line="21" pos:column="44"/></name></expr></argument>)<pos:position pos:line="21" pos:column="45"/></argument_list></call><operator pos:line="21" pos:column="45">)<pos:position pos:line="21" pos:column="46"/></operator> <operator pos:line="21" pos:column="47">&amp;&amp;<pos:position pos:line="21" pos:column="57"/></operator> <name><name pos:line="21" pos:column="50">w<pos:position pos:line="21" pos:column="51"/></name><index pos:line="21" pos:column="51">[<expr><literal type="number" pos:line="21" pos:column="52">0<pos:position pos:line="21" pos:column="53"/></literal></expr>]<pos:position pos:line="21" pos:column="54"/></index></name></expr>)<pos:position pos:line="21" pos:column="55"/></condition> <block pos:line="21" pos:column="56">{

        <decl_stmt><decl><type><name pos:line="23" pos:column="9">apr_sockaddr_t<pos:position pos:line="23" pos:column="23"/></name> <modifier pos:line="23" pos:column="24">*<pos:position pos:line="23" pos:column="25"/></modifier></type><name pos:line="23" pos:column="25">sa<pos:position pos:line="23" pos:column="27"/></name></decl>;<pos:position pos:line="23" pos:column="28"/></decl_stmt>
        <decl_stmt><decl><type><name pos:line="24" pos:column="9">apr_status_t<pos:position pos:line="24" pos:column="21"/></name></type> <name pos:line="24" pos:column="22">rv<pos:position pos:line="24" pos:column="24"/></name></decl>;<pos:position pos:line="24" pos:column="25"/></decl_stmt>
        <decl_stmt><decl><type><name pos:line="25" pos:column="9">char<pos:position pos:line="25" pos:column="13"/></name> <modifier pos:line="25" pos:column="14">*<pos:position pos:line="25" pos:column="15"/></modifier></type><name pos:line="25" pos:column="15">hash_ptr<pos:position pos:line="25" pos:column="23"/></name></decl>;<pos:position pos:line="25" pos:column="24"/></decl_stmt>

        <comment type="block" pos:line="27" pos:column="9">/* stop on apache configuration file comments */</comment>
        <if pos:line="28" pos:column="9">if <condition pos:line="28" pos:column="12">(<expr><operator pos:line="28" pos:column="13">(<pos:position pos:line="28" pos:column="14"/></operator><name pos:line="28" pos:column="14">hash_ptr<pos:position pos:line="28" pos:column="22"/></name> <operator pos:line="28" pos:column="23">=<pos:position pos:line="28" pos:column="24"/></operator> <call><name pos:line="28" pos:column="25">ap_strchr<pos:position pos:line="28" pos:column="34"/></name><argument_list pos:line="28" pos:column="34">(<argument><expr><name pos:line="28" pos:column="35">w<pos:position pos:line="28" pos:column="36"/></name></expr></argument>, <argument><expr><literal type="char" pos:line="28" pos:column="38">'#'<pos:position pos:line="28" pos:column="41"/></literal></expr></argument>)<pos:position pos:line="28" pos:column="42"/></argument_list></call><operator pos:line="28" pos:column="42">)<pos:position pos:line="28" pos:column="43"/></operator></expr>)<pos:position pos:line="28" pos:column="44"/></condition><then pos:line="28" pos:column="44"> <block pos:line="28" pos:column="45">{
            <if pos:line="29" pos:column="13">if <condition pos:line="29" pos:column="16">(<expr><name pos:line="29" pos:column="17">hash_ptr<pos:position pos:line="29" pos:column="25"/></name> <operator pos:line="29" pos:column="26">==<pos:position pos:line="29" pos:column="28"/></operator> <name pos:line="29" pos:column="29">w<pos:position pos:line="29" pos:column="30"/></name></expr>)<pos:position pos:line="29" pos:column="31"/></condition><then pos:line="29" pos:column="31"> <block pos:line="29" pos:column="32">{
                <break pos:line="30" pos:column="17">break;<pos:position pos:line="30" pos:column="23"/></break>
            }<pos:position pos:line="31" pos:column="14"/></block></then></if>
            <expr_stmt><expr><operator pos:line="32" pos:column="13">*<pos:position pos:line="32" pos:column="14"/></operator><name pos:line="32" pos:column="14">hash_ptr<pos:position pos:line="32" pos:column="22"/></name> <operator pos:line="32" pos:column="23">=<pos:position pos:line="32" pos:column="24"/></operator> <literal type="char" pos:line="32" pos:column="25">'\0'<pos:position pos:line="32" pos:column="29"/></literal></expr>;<pos:position pos:line="32" pos:column="30"/></expr_stmt>
        }<pos:position pos:line="33" pos:column="10"/></block></then></if>

        <comment type="block" pos:line="35" pos:column="9">/* does the client ip match one of the names? */</comment>
        <expr_stmt><expr><name pos:line="36" pos:column="9">rv<pos:position pos:line="36" pos:column="11"/></name> <operator pos:line="36" pos:column="12">=<pos:position pos:line="36" pos:column="13"/></operator> <call><name pos:line="36" pos:column="14">apr_sockaddr_info_get<pos:position pos:line="36" pos:column="35"/></name><argument_list pos:line="36" pos:column="35">(<argument><expr><operator pos:line="36" pos:column="36">&amp;<pos:position pos:line="36" pos:column="41"/></operator><name pos:line="36" pos:column="37">sa<pos:position pos:line="36" pos:column="39"/></name></expr></argument>, <argument><expr><name pos:line="36" pos:column="41">w<pos:position pos:line="36" pos:column="42"/></name></expr></argument>, <argument><expr><name pos:line="36" pos:column="44">APR_UNSPEC<pos:position pos:line="36" pos:column="54"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="36" pos:column="56">0<pos:position pos:line="36" pos:column="57"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="36" pos:column="59">0<pos:position pos:line="36" pos:column="60"/></literal></expr></argument>, <argument><expr><name><name pos:line="36" pos:column="62">r<pos:position pos:line="36" pos:column="63"/></name><operator pos:line="36" pos:column="63">-&gt;<pos:position pos:line="36" pos:column="68"/></operator><name pos:line="36" pos:column="65">pool<pos:position pos:line="36" pos:column="69"/></name></name></expr></argument>)<pos:position pos:line="36" pos:column="70"/></argument_list></call></expr>;<pos:position pos:line="36" pos:column="71"/></expr_stmt>
        <if pos:line="37" pos:column="9">if <condition pos:line="37" pos:column="12">(<expr><name pos:line="37" pos:column="13">rv<pos:position pos:line="37" pos:column="15"/></name> <operator pos:line="37" pos:column="16">==<pos:position pos:line="37" pos:column="18"/></operator> <name pos:line="37" pos:column="19">APR_SUCCESS<pos:position pos:line="37" pos:column="30"/></name></expr>)<pos:position pos:line="37" pos:column="31"/></condition><then pos:line="37" pos:column="31"> <block pos:line="37" pos:column="32">{

            <while pos:line="39" pos:column="13">while <condition pos:line="39" pos:column="19">(<expr><name pos:line="39" pos:column="20">sa<pos:position pos:line="39" pos:column="22"/></name></expr>)<pos:position pos:line="39" pos:column="23"/></condition> <block pos:line="39" pos:column="24">{
                <decl_stmt><decl><type><name pos:line="40" pos:column="17">int<pos:position pos:line="40" pos:column="20"/></name></type> <name pos:line="40" pos:column="21">match<pos:position pos:line="40" pos:column="26"/></name> <init pos:line="40" pos:column="27">= <expr><call><name pos:line="40" pos:column="29">apr_sockaddr_equal<pos:position pos:line="40" pos:column="47"/></name><argument_list pos:line="40" pos:column="47">(<argument><expr><name pos:line="40" pos:column="48">sa<pos:position pos:line="40" pos:column="50"/></name></expr></argument>, <argument><expr><name><name pos:line="40" pos:column="52">r<pos:position pos:line="40" pos:column="53"/></name><operator pos:line="40" pos:column="53">-&gt;<pos:position pos:line="40" pos:column="58"/></operator><name pos:line="40" pos:column="55">useragent_addr<pos:position pos:line="40" pos:column="69"/></name></name></expr></argument>)<pos:position pos:line="40" pos:column="70"/></argument_list></call></expr></init></decl>;<pos:position pos:line="40" pos:column="71"/></decl_stmt>

                <expr_stmt><expr><call><name pos:line="42" pos:column="17">ap_log_rerror<pos:position pos:line="42" pos:column="30"/></name><argument_list pos:line="42" pos:column="30">(<argument><expr><name pos:line="42" pos:column="31">APLOG_MARK<pos:position pos:line="42" pos:column="41"/></name></expr></argument>, <argument><expr><name pos:line="42" pos:column="43">APLOG_DEBUG<pos:position pos:line="42" pos:column="54"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="42" pos:column="56">0<pos:position pos:line="42" pos:column="57"/></literal></expr></argument>, <argument><expr><name pos:line="42" pos:column="59">r<pos:position pos:line="42" pos:column="60"/></name></expr></argument>, <argument><expr><call><name pos:line="42" pos:column="62">APLOGNO<pos:position pos:line="42" pos:column="69"/></name><argument_list pos:line="42" pos:column="69">(<argument><expr><literal type="number" pos:line="42" pos:column="70">03355<pos:position pos:line="42" pos:column="75"/></literal></expr></argument>)<pos:position pos:line="42" pos:column="76"/></argument_list></call>
                              <literal type="string" pos:line="43" pos:column="31">"access check for %s as '%s': %s"<pos:position pos:line="43" pos:column="64"/></literal></expr></argument>,
                              <argument><expr><name><name pos:line="44" pos:column="31">r<pos:position pos:line="44" pos:column="32"/></name><operator pos:line="44" pos:column="32">-&gt;<pos:position pos:line="44" pos:column="37"/></operator><name pos:line="44" pos:column="34">useragent_ip<pos:position pos:line="44" pos:column="46"/></name></name></expr></argument>, <argument><expr><name pos:line="44" pos:column="48">w<pos:position pos:line="44" pos:column="49"/></name></expr></argument>, <argument><expr><ternary><condition><expr><name pos:line="44" pos:column="51">match<pos:position pos:line="44" pos:column="56"/></name></expr>?<pos:position pos:line="44" pos:column="57"/></condition><then pos:line="44" pos:column="57"> <expr><literal type="string" pos:line="44" pos:column="58">"yes"<pos:position pos:line="44" pos:column="63"/></literal></expr></then><else pos:line="44" pos:column="63">: <expr><literal type="string" pos:line="44" pos:column="65">"no"<pos:position pos:line="44" pos:column="69"/></literal></expr></else></ternary></expr></argument>)<pos:position pos:line="44" pos:column="70"/></argument_list></call></expr>;<pos:position pos:line="44" pos:column="71"/></expr_stmt>
                <if pos:line="45" pos:column="17">if <condition pos:line="45" pos:column="20">(<expr><name pos:line="45" pos:column="21">match<pos:position pos:line="45" pos:column="26"/></name></expr>)<pos:position pos:line="45" pos:column="27"/></condition><then pos:line="45" pos:column="27"> <block pos:line="45" pos:column="28">{
                    <return pos:line="46" pos:column="21">return <expr><name pos:line="46" pos:column="28">AUTHZ_GRANTED<pos:position pos:line="46" pos:column="41"/></name></expr>;<pos:position pos:line="46" pos:column="42"/></return>
                }<pos:position pos:line="47" pos:column="18"/></block></then></if>

                <expr_stmt><expr><name pos:line="49" pos:column="17">sa<pos:position pos:line="49" pos:column="19"/></name> <operator pos:line="49" pos:column="20">=<pos:position pos:line="49" pos:column="21"/></operator> <name><name pos:line="49" pos:column="22">sa<pos:position pos:line="49" pos:column="24"/></name><operator pos:line="49" pos:column="24">-&gt;<pos:position pos:line="49" pos:column="29"/></operator><name pos:line="49" pos:column="26">next<pos:position pos:line="49" pos:column="30"/></name></name></expr>;<pos:position pos:line="49" pos:column="31"/></expr_stmt>
            }<pos:position pos:line="50" pos:column="14"/></block></while>
        }<pos:position pos:line="51" pos:column="10"/></block></then>
        <else pos:line="52" pos:column="9">else <block pos:line="52" pos:column="14">{
            <expr_stmt><expr><call><name pos:line="53" pos:column="13">ap_log_rerror<pos:position pos:line="53" pos:column="26"/></name><argument_list pos:line="53" pos:column="26">(<argument><expr><name pos:line="53" pos:column="27">APLOG_MARK<pos:position pos:line="53" pos:column="37"/></name></expr></argument>, <argument><expr><name pos:line="53" pos:column="39">APLOG_WARNING<pos:position pos:line="53" pos:column="52"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="53" pos:column="54">0<pos:position pos:line="53" pos:column="55"/></literal></expr></argument>, <argument><expr><name pos:line="53" pos:column="57">r<pos:position pos:line="53" pos:column="58"/></name></expr></argument>, <argument><expr><call><name pos:line="53" pos:column="60">APLOGNO<pos:position pos:line="53" pos:column="67"/></name><argument_list pos:line="53" pos:column="67">(<argument><expr><literal type="number" pos:line="53" pos:column="68">03356<pos:position pos:line="53" pos:column="73"/></literal></expr></argument>)<pos:position pos:line="53" pos:column="74"/></argument_list></call>
                          <literal type="string" pos:line="54" pos:column="27">"No sockaddr info for \"%s\""<pos:position pos:line="54" pos:column="56"/></literal></expr></argument>, <argument><expr><name pos:line="54" pos:column="58">w<pos:position pos:line="54" pos:column="59"/></name></expr></argument>)<pos:position pos:line="54" pos:column="60"/></argument_list></call></expr>;<pos:position pos:line="54" pos:column="61"/></expr_stmt>
        }<pos:position pos:line="55" pos:column="10"/></block></else></if>

        <comment type="block" pos:line="57" pos:column="9">/* stop processing, we are in a comment */</comment>
        <if pos:line="58" pos:column="9">if <condition pos:line="58" pos:column="12">(<expr><name pos:line="58" pos:column="13">hash_ptr<pos:position pos:line="58" pos:column="21"/></name></expr>)<pos:position pos:line="58" pos:column="22"/></condition><then pos:line="58" pos:column="22"> <block pos:line="58" pos:column="23">{
            <break pos:line="59" pos:column="13">break;<pos:position pos:line="59" pos:column="19"/></break>
        }<pos:position pos:line="60" pos:column="10"/></block></then></if>
    }<pos:position pos:line="61" pos:column="6"/></block></while>

    <return pos:line="63" pos:column="5">return <expr><name pos:line="63" pos:column="12">AUTHZ_DENIED<pos:position pos:line="63" pos:column="24"/></name></expr>;<pos:position pos:line="63" pos:column="25"/></return>
}<pos:position pos:line="64" pos:column="2"/></block></function></unit>

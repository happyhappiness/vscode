<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/httpd/gumtree/httpd_repos_function_2719_httpd-2.4.18.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">apr_status_t<pos:position pos:line="1" pos:column="20"/></name></type> <name pos:line="1" pos:column="21">xml2enc_filter<pos:position pos:line="1" pos:column="35"/></name><parameter_list pos:line="1" pos:column="35">(<parameter><decl><type><name pos:line="1" pos:column="36">request_rec<pos:position pos:line="1" pos:column="47"/></name><modifier pos:line="1" pos:column="47">*<pos:position pos:line="1" pos:column="48"/></modifier></type> <name pos:line="1" pos:column="49">r<pos:position pos:line="1" pos:column="50"/></name></decl></parameter>, <parameter><decl><type><specifier pos:line="1" pos:column="52">const<pos:position pos:line="1" pos:column="57"/></specifier> <name pos:line="1" pos:column="58">char<pos:position pos:line="1" pos:column="62"/></name><modifier pos:line="1" pos:column="62">*<pos:position pos:line="1" pos:column="63"/></modifier></type> <name pos:line="1" pos:column="64">enc<pos:position pos:line="1" pos:column="67"/></name></decl></parameter>,
                                   <parameter><decl><type><name pos:line="2" pos:column="36">unsigned<pos:position pos:line="2" pos:column="44"/></name> <name pos:line="2" pos:column="45">int<pos:position pos:line="2" pos:column="48"/></name></type> <name pos:line="2" pos:column="49">mode<pos:position pos:line="2" pos:column="53"/></name></decl></parameter>)<pos:position pos:line="2" pos:column="54"/></parameter_list>
<block pos:line="3" pos:column="1">{
    <comment type="block" pos:line="4" pos:column="5">/* set up a ready-initialised ctx to convert to enc, and insert filter */</comment>
    <decl_stmt><decl><type><name pos:line="5" pos:column="5">apr_xlate_t<pos:position pos:line="5" pos:column="16"/></name><modifier pos:line="5" pos:column="16">*<pos:position pos:line="5" pos:column="17"/></modifier></type> <name pos:line="5" pos:column="18">convset<pos:position pos:line="5" pos:column="25"/></name></decl>;<pos:position pos:line="5" pos:column="26"/></decl_stmt> 
    <decl_stmt><decl><type><name pos:line="6" pos:column="5">apr_status_t<pos:position pos:line="6" pos:column="17"/></name></type> <name pos:line="6" pos:column="18">rv<pos:position pos:line="6" pos:column="20"/></name></decl>;<pos:position pos:line="6" pos:column="21"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="7" pos:column="5">unsigned<pos:position pos:line="7" pos:column="13"/></name> <name pos:line="7" pos:column="14">int<pos:position pos:line="7" pos:column="17"/></name></type> <name pos:line="7" pos:column="18">flags<pos:position pos:line="7" pos:column="23"/></name> <init pos:line="7" pos:column="24">= <expr><operator pos:line="7" pos:column="26">(<pos:position pos:line="7" pos:column="27"/></operator><name pos:line="7" pos:column="27">mode<pos:position pos:line="7" pos:column="31"/></name> <operator pos:line="7" pos:column="32">^<pos:position pos:line="7" pos:column="33"/></operator> <name pos:line="7" pos:column="34">ENCIO<pos:position pos:line="7" pos:column="39"/></name><operator pos:line="7" pos:column="39">)<pos:position pos:line="7" pos:column="40"/></operator></expr></init></decl>;<pos:position pos:line="7" pos:column="41"/></decl_stmt>
    <if pos:line="8" pos:column="5">if <condition pos:line="8" pos:column="8">(<expr><operator pos:line="8" pos:column="9">(<pos:position pos:line="8" pos:column="10"/></operator><name pos:line="8" pos:column="10">mode<pos:position pos:line="8" pos:column="14"/></name> <operator pos:line="8" pos:column="15">&amp;<pos:position pos:line="8" pos:column="20"/></operator> <name pos:line="8" pos:column="17">ENCIO<pos:position pos:line="8" pos:column="22"/></name><operator pos:line="8" pos:column="22">)<pos:position pos:line="8" pos:column="23"/></operator> <operator pos:line="8" pos:column="24">==<pos:position pos:line="8" pos:column="26"/></operator> <name pos:line="8" pos:column="27">ENCIO_OUTPUT<pos:position pos:line="8" pos:column="39"/></name></expr>)<pos:position pos:line="8" pos:column="40"/></condition><then pos:line="8" pos:column="40"> <block pos:line="8" pos:column="41">{
        <expr_stmt><expr><name pos:line="9" pos:column="9">rv<pos:position pos:line="9" pos:column="11"/></name> <operator pos:line="9" pos:column="12">=<pos:position pos:line="9" pos:column="13"/></operator> <call><name pos:line="9" pos:column="14">apr_xlate_open<pos:position pos:line="9" pos:column="28"/></name><argument_list pos:line="9" pos:column="28">(<argument><expr><operator pos:line="9" pos:column="29">&amp;<pos:position pos:line="9" pos:column="34"/></operator><name pos:line="9" pos:column="30">convset<pos:position pos:line="9" pos:column="37"/></name></expr></argument>, <argument><expr><name pos:line="9" pos:column="39">enc<pos:position pos:line="9" pos:column="42"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="9" pos:column="44">"UTF-8"<pos:position pos:line="9" pos:column="51"/></literal></expr></argument>, <argument><expr><name><name pos:line="9" pos:column="53">r<pos:position pos:line="9" pos:column="54"/></name><operator pos:line="9" pos:column="54">-&gt;<pos:position pos:line="9" pos:column="59"/></operator><name pos:line="9" pos:column="56">pool<pos:position pos:line="9" pos:column="60"/></name></name></expr></argument>)<pos:position pos:line="9" pos:column="61"/></argument_list></call></expr>;<pos:position pos:line="9" pos:column="62"/></expr_stmt>
        <expr_stmt><expr><name pos:line="10" pos:column="9">flags<pos:position pos:line="10" pos:column="14"/></name> <operator pos:line="10" pos:column="15">|=<pos:position pos:line="10" pos:column="17"/></operator> <name pos:line="10" pos:column="18">ENC_INITIALISED<pos:position pos:line="10" pos:column="33"/></name></expr>;<pos:position pos:line="10" pos:column="34"/></expr_stmt>
    }<pos:position pos:line="11" pos:column="6"/></block></then>
    <elseif pos:line="12" pos:column="5">else <if pos:line="12" pos:column="10">if <condition pos:line="12" pos:column="13">(<expr><operator pos:line="12" pos:column="14">(<pos:position pos:line="12" pos:column="15"/></operator><name pos:line="12" pos:column="15">mode<pos:position pos:line="12" pos:column="19"/></name> <operator pos:line="12" pos:column="20">&amp;<pos:position pos:line="12" pos:column="25"/></operator> <name pos:line="12" pos:column="22">ENCIO<pos:position pos:line="12" pos:column="27"/></name><operator pos:line="12" pos:column="27">)<pos:position pos:line="12" pos:column="28"/></operator> <operator pos:line="12" pos:column="29">==<pos:position pos:line="12" pos:column="31"/></operator> <name pos:line="12" pos:column="32">ENCIO_INPUT<pos:position pos:line="12" pos:column="43"/></name></expr>)<pos:position pos:line="12" pos:column="44"/></condition><then pos:line="12" pos:column="44"> <block pos:line="12" pos:column="45">{
        <expr_stmt><expr><name pos:line="13" pos:column="9">rv<pos:position pos:line="13" pos:column="11"/></name> <operator pos:line="13" pos:column="12">=<pos:position pos:line="13" pos:column="13"/></operator> <call><name pos:line="13" pos:column="14">apr_xlate_open<pos:position pos:line="13" pos:column="28"/></name><argument_list pos:line="13" pos:column="28">(<argument><expr><operator pos:line="13" pos:column="29">&amp;<pos:position pos:line="13" pos:column="34"/></operator><name pos:line="13" pos:column="30">convset<pos:position pos:line="13" pos:column="37"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="13" pos:column="39">"UTF-8"<pos:position pos:line="13" pos:column="46"/></literal></expr></argument>, <argument><expr><name pos:line="13" pos:column="48">enc<pos:position pos:line="13" pos:column="51"/></name></expr></argument>, <argument><expr><name><name pos:line="13" pos:column="53">r<pos:position pos:line="13" pos:column="54"/></name><operator pos:line="13" pos:column="54">-&gt;<pos:position pos:line="13" pos:column="59"/></operator><name pos:line="13" pos:column="56">pool<pos:position pos:line="13" pos:column="60"/></name></name></expr></argument>)<pos:position pos:line="13" pos:column="61"/></argument_list></call></expr>;<pos:position pos:line="13" pos:column="62"/></expr_stmt>
        <expr_stmt><expr><name pos:line="14" pos:column="9">flags<pos:position pos:line="14" pos:column="14"/></name> <operator pos:line="14" pos:column="15">|=<pos:position pos:line="14" pos:column="17"/></operator> <name pos:line="14" pos:column="18">ENC_INITIALISED<pos:position pos:line="14" pos:column="33"/></name></expr>;<pos:position pos:line="14" pos:column="34"/></expr_stmt>
    }<pos:position pos:line="15" pos:column="6"/></block></then></if></elseif>
    <elseif pos:line="16" pos:column="5">else <if pos:line="16" pos:column="10">if <condition pos:line="16" pos:column="13">(<expr><operator pos:line="16" pos:column="14">(<pos:position pos:line="16" pos:column="15"/></operator><name pos:line="16" pos:column="15">mode<pos:position pos:line="16" pos:column="19"/></name> <operator pos:line="16" pos:column="20">&amp;<pos:position pos:line="16" pos:column="25"/></operator> <name pos:line="16" pos:column="22">ENCIO<pos:position pos:line="16" pos:column="27"/></name><operator pos:line="16" pos:column="27">)<pos:position pos:line="16" pos:column="28"/></operator> <operator pos:line="16" pos:column="29">==<pos:position pos:line="16" pos:column="31"/></operator> <name pos:line="16" pos:column="32">ENCIO_INPUT_CHECKS<pos:position pos:line="16" pos:column="50"/></name></expr>)<pos:position pos:line="16" pos:column="51"/></condition><then pos:line="16" pos:column="51"> <block pos:line="16" pos:column="52">{
        <expr_stmt><expr><name pos:line="17" pos:column="9">convset<pos:position pos:line="17" pos:column="16"/></name> <operator pos:line="17" pos:column="17">=<pos:position pos:line="17" pos:column="18"/></operator> <name pos:line="17" pos:column="19">NULL<pos:position pos:line="17" pos:column="23"/></name></expr>;<pos:position pos:line="17" pos:column="24"/></expr_stmt>
        <expr_stmt><expr><name pos:line="18" pos:column="9">rv<pos:position pos:line="18" pos:column="11"/></name> <operator pos:line="18" pos:column="12">=<pos:position pos:line="18" pos:column="13"/></operator> <name pos:line="18" pos:column="14">APR_SUCCESS<pos:position pos:line="18" pos:column="25"/></name></expr>;<pos:position pos:line="18" pos:column="26"/></expr_stmt> <comment type="block" pos:line="18" pos:column="27">/* we'll initialise later by sniffing */</comment>
    }<pos:position pos:line="19" pos:column="6"/></block></then></if></elseif>
    <else pos:line="20" pos:column="5">else <block pos:line="20" pos:column="10">{
        <expr_stmt><expr><name pos:line="21" pos:column="9">rv<pos:position pos:line="21" pos:column="11"/></name> <operator pos:line="21" pos:column="12">=<pos:position pos:line="21" pos:column="13"/></operator> <name pos:line="21" pos:column="14">APR_EGENERAL<pos:position pos:line="21" pos:column="26"/></name></expr>;<pos:position pos:line="21" pos:column="27"/></expr_stmt>
        <expr_stmt><expr><call><name pos:line="22" pos:column="9">ap_log_rerror<pos:position pos:line="22" pos:column="22"/></name><argument_list pos:line="22" pos:column="22">(<argument><expr><name pos:line="22" pos:column="23">APLOG_MARK<pos:position pos:line="22" pos:column="33"/></name></expr></argument>, <argument><expr><name pos:line="22" pos:column="35">APLOG_ERR<pos:position pos:line="22" pos:column="44"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="22" pos:column="46">0<pos:position pos:line="22" pos:column="47"/></literal></expr></argument>, <argument><expr><name pos:line="22" pos:column="49">r<pos:position pos:line="22" pos:column="50"/></name></expr></argument>, <argument><expr><call><name pos:line="22" pos:column="52">APLOGNO<pos:position pos:line="22" pos:column="59"/></name><argument_list pos:line="22" pos:column="59">(<argument><expr><literal type="number" pos:line="22" pos:column="60">01426<pos:position pos:line="22" pos:column="65"/></literal></expr></argument>)<pos:position pos:line="22" pos:column="66"/></argument_list></call>
                      <literal type="string" pos:line="23" pos:column="23">"xml2enc: bad mode %x"<pos:position pos:line="23" pos:column="45"/></literal></expr></argument>, <argument><expr><name pos:line="23" pos:column="47">mode<pos:position pos:line="23" pos:column="51"/></name></expr></argument>)<pos:position pos:line="23" pos:column="52"/></argument_list></call></expr>;<pos:position pos:line="23" pos:column="53"/></expr_stmt>
    }<pos:position pos:line="24" pos:column="6"/></block></else></if>
    <if pos:line="25" pos:column="5">if <condition pos:line="25" pos:column="8">(<expr><name pos:line="25" pos:column="9">rv<pos:position pos:line="25" pos:column="11"/></name> <operator pos:line="25" pos:column="12">==<pos:position pos:line="25" pos:column="14"/></operator> <name pos:line="25" pos:column="15">APR_SUCCESS<pos:position pos:line="25" pos:column="26"/></name></expr>)<pos:position pos:line="25" pos:column="27"/></condition><then pos:line="25" pos:column="27"> <block pos:line="25" pos:column="28">{
        <decl_stmt><decl><type><name pos:line="26" pos:column="9">xml2ctx<pos:position pos:line="26" pos:column="16"/></name><modifier pos:line="26" pos:column="16">*<pos:position pos:line="26" pos:column="17"/></modifier></type> <name pos:line="26" pos:column="18">ctx<pos:position pos:line="26" pos:column="21"/></name> <init pos:line="26" pos:column="22">= <expr><call><name pos:line="26" pos:column="24">apr_pcalloc<pos:position pos:line="26" pos:column="35"/></name><argument_list pos:line="26" pos:column="35">(<argument><expr><name><name pos:line="26" pos:column="36">r<pos:position pos:line="26" pos:column="37"/></name><operator pos:line="26" pos:column="37">-&gt;<pos:position pos:line="26" pos:column="42"/></operator><name pos:line="26" pos:column="39">pool<pos:position pos:line="26" pos:column="43"/></name></name></expr></argument>, <argument><expr><sizeof pos:line="26" pos:column="45">sizeof<argument_list pos:line="26" pos:column="51">(<argument><expr><name pos:line="26" pos:column="52">xml2ctx<pos:position pos:line="26" pos:column="59"/></name></expr></argument>)<pos:position pos:line="26" pos:column="60"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="26" pos:column="61"/></argument_list></call></expr></init></decl>;<pos:position pos:line="26" pos:column="62"/></decl_stmt>
        <expr_stmt><expr><name><name pos:line="27" pos:column="9">ctx<pos:position pos:line="27" pos:column="12"/></name><operator pos:line="27" pos:column="12">-&gt;<pos:position pos:line="27" pos:column="17"/></operator><name pos:line="27" pos:column="14">flags<pos:position pos:line="27" pos:column="19"/></name></name> <operator pos:line="27" pos:column="20">=<pos:position pos:line="27" pos:column="21"/></operator> <name pos:line="27" pos:column="22">flags<pos:position pos:line="27" pos:column="27"/></name></expr>;<pos:position pos:line="27" pos:column="28"/></expr_stmt>
        <if pos:line="28" pos:column="9">if <condition pos:line="28" pos:column="12">(<expr><name pos:line="28" pos:column="13">flags<pos:position pos:line="28" pos:column="18"/></name> <operator pos:line="28" pos:column="19">&amp;<pos:position pos:line="28" pos:column="24"/></operator> <name pos:line="28" pos:column="21">ENC_INITIALISED<pos:position pos:line="28" pos:column="36"/></name></expr>)<pos:position pos:line="28" pos:column="37"/></condition><then pos:line="28" pos:column="37"> <block pos:line="28" pos:column="38">{
            <expr_stmt><expr><name><name pos:line="29" pos:column="13">ctx<pos:position pos:line="29" pos:column="16"/></name><operator pos:line="29" pos:column="16">-&gt;<pos:position pos:line="29" pos:column="21"/></operator><name pos:line="29" pos:column="18">convset<pos:position pos:line="29" pos:column="25"/></name></name> <operator pos:line="29" pos:column="26">=<pos:position pos:line="29" pos:column="27"/></operator> <name pos:line="29" pos:column="28">convset<pos:position pos:line="29" pos:column="35"/></name></expr>;<pos:position pos:line="29" pos:column="36"/></expr_stmt>
            <expr_stmt><expr><name><name pos:line="30" pos:column="13">ctx<pos:position pos:line="30" pos:column="16"/></name><operator pos:line="30" pos:column="16">-&gt;<pos:position pos:line="30" pos:column="21"/></operator><name pos:line="30" pos:column="18">bblen<pos:position pos:line="30" pos:column="23"/></name></name> <operator pos:line="30" pos:column="24">=<pos:position pos:line="30" pos:column="25"/></operator> <name pos:line="30" pos:column="26">BUFLEN<pos:position pos:line="30" pos:column="32"/></name></expr>;<pos:position pos:line="30" pos:column="33"/></expr_stmt>
            <expr_stmt><expr><name><name pos:line="31" pos:column="13">ctx<pos:position pos:line="31" pos:column="16"/></name><operator pos:line="31" pos:column="16">-&gt;<pos:position pos:line="31" pos:column="21"/></operator><name pos:line="31" pos:column="18">buf<pos:position pos:line="31" pos:column="21"/></name></name> <operator pos:line="31" pos:column="22">=<pos:position pos:line="31" pos:column="23"/></operator> <call><name pos:line="31" pos:column="24">apr_palloc<pos:position pos:line="31" pos:column="34"/></name><argument_list pos:line="31" pos:column="34">(<argument><expr><name><name pos:line="31" pos:column="35">r<pos:position pos:line="31" pos:column="36"/></name><operator pos:line="31" pos:column="36">-&gt;<pos:position pos:line="31" pos:column="41"/></operator><name pos:line="31" pos:column="38">pool<pos:position pos:line="31" pos:column="42"/></name></name></expr></argument>, <argument><expr><operator pos:line="31" pos:column="44">(<pos:position pos:line="31" pos:column="45"/></operator><name pos:line="31" pos:column="45">apr_size_t<pos:position pos:line="31" pos:column="55"/></name><operator pos:line="31" pos:column="55">)<pos:position pos:line="31" pos:column="56"/></operator><name><name pos:line="31" pos:column="56">ctx<pos:position pos:line="31" pos:column="59"/></name><operator pos:line="31" pos:column="59">-&gt;<pos:position pos:line="31" pos:column="64"/></operator><name pos:line="31" pos:column="61">bblen<pos:position pos:line="31" pos:column="66"/></name></name></expr></argument>)<pos:position pos:line="31" pos:column="67"/></argument_list></call></expr>;<pos:position pos:line="31" pos:column="68"/></expr_stmt>
        }<pos:position pos:line="32" pos:column="10"/></block></then></if>
        <expr_stmt><expr><call><name pos:line="33" pos:column="9">ap_add_output_filter<pos:position pos:line="33" pos:column="29"/></name><argument_list pos:line="33" pos:column="29">(<argument><expr><literal type="string" pos:line="33" pos:column="30">"xml2enc"<pos:position pos:line="33" pos:column="39"/></literal></expr></argument>, <argument><expr><name pos:line="33" pos:column="41">ctx<pos:position pos:line="33" pos:column="44"/></name></expr></argument>, <argument><expr><name pos:line="33" pos:column="46">r<pos:position pos:line="33" pos:column="47"/></name></expr></argument>, <argument><expr><name><name pos:line="33" pos:column="49">r<pos:position pos:line="33" pos:column="50"/></name><operator pos:line="33" pos:column="50">-&gt;<pos:position pos:line="33" pos:column="55"/></operator><name pos:line="33" pos:column="52">connection<pos:position pos:line="33" pos:column="62"/></name></name></expr></argument>)<pos:position pos:line="33" pos:column="63"/></argument_list></call></expr>;<pos:position pos:line="33" pos:column="64"/></expr_stmt>
    }<pos:position pos:line="34" pos:column="6"/></block></then>
    <else pos:line="35" pos:column="5">else <block pos:line="35" pos:column="10">{
        <expr_stmt><expr><call><name pos:line="36" pos:column="9">ap_log_rerror<pos:position pos:line="36" pos:column="22"/></name><argument_list pos:line="36" pos:column="22">(<argument><expr><name pos:line="36" pos:column="23">APLOG_MARK<pos:position pos:line="36" pos:column="33"/></name></expr></argument>, <argument><expr><name pos:line="36" pos:column="35">APLOG_ERR<pos:position pos:line="36" pos:column="44"/></name></expr></argument>, <argument><expr><name pos:line="36" pos:column="46">rv<pos:position pos:line="36" pos:column="48"/></name></expr></argument>, <argument><expr><name pos:line="36" pos:column="50">r<pos:position pos:line="36" pos:column="51"/></name></expr></argument>, <argument><expr><call><name pos:line="36" pos:column="53">APLOGNO<pos:position pos:line="36" pos:column="60"/></name><argument_list pos:line="36" pos:column="60">(<argument><expr><literal type="number" pos:line="36" pos:column="61">01427<pos:position pos:line="36" pos:column="66"/></literal></expr></argument>)<pos:position pos:line="36" pos:column="67"/></argument_list></call>
                      <literal type="string" pos:line="37" pos:column="23">"xml2enc: Charset %s not supported."<pos:position pos:line="37" pos:column="59"/></literal></expr></argument>, <argument><expr><name pos:line="37" pos:column="61">enc<pos:position pos:line="37" pos:column="64"/></name></expr></argument>)<pos:position pos:line="37" pos:column="65"/></argument_list></call></expr> ;<pos:position pos:line="37" pos:column="67"/></expr_stmt>
    }<pos:position pos:line="38" pos:column="6"/></block></else></if>
    <return pos:line="39" pos:column="5">return <expr><name pos:line="39" pos:column="12">rv<pos:position pos:line="39" pos:column="14"/></name></expr>;<pos:position pos:line="39" pos:column="15"/></return>
}<pos:position pos:line="40" pos:column="2"/></block></function></unit>

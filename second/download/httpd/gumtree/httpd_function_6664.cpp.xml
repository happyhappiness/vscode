<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/httpd/gumtree/httpd_function_6664.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">apr_status_t<pos:position pos:line="1" pos:column="20"/></name></type> <name pos:line="1" pos:column="21">slave_out<pos:position pos:line="1" pos:column="30"/></name><parameter_list pos:line="1" pos:column="30">(<parameter><decl><type><name pos:line="1" pos:column="31">h2_task<pos:position pos:line="1" pos:column="38"/></name> <modifier pos:line="1" pos:column="39">*<pos:position pos:line="1" pos:column="40"/></modifier></type><name pos:line="1" pos:column="40">task<pos:position pos:line="1" pos:column="44"/></name></decl></parameter>, <parameter><decl><type><name pos:line="1" pos:column="46">ap_filter_t<pos:position pos:line="1" pos:column="57"/></name><modifier pos:line="1" pos:column="57">*<pos:position pos:line="1" pos:column="58"/></modifier></type> <name pos:line="1" pos:column="59">f<pos:position pos:line="1" pos:column="60"/></name></decl></parameter>, 
                              <parameter><decl><type><name pos:line="2" pos:column="31">apr_bucket_brigade<pos:position pos:line="2" pos:column="49"/></name><modifier pos:line="2" pos:column="49">*<pos:position pos:line="2" pos:column="50"/></modifier></type> <name pos:line="2" pos:column="51">bb<pos:position pos:line="2" pos:column="53"/></name></decl></parameter>)<pos:position pos:line="2" pos:column="54"/></parameter_list>
<block pos:line="3" pos:column="1">{
    <decl_stmt><decl><type><name pos:line="4" pos:column="5">apr_bucket<pos:position pos:line="4" pos:column="15"/></name> <modifier pos:line="4" pos:column="16">*<pos:position pos:line="4" pos:column="17"/></modifier></type><name pos:line="4" pos:column="17">b<pos:position pos:line="4" pos:column="18"/></name></decl>;<pos:position pos:line="4" pos:column="19"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="5" pos:column="5">apr_status_t<pos:position pos:line="5" pos:column="17"/></name></type> <name pos:line="5" pos:column="18">status<pos:position pos:line="5" pos:column="24"/></name> <init pos:line="5" pos:column="25">= <expr><name pos:line="5" pos:column="27">APR_SUCCESS<pos:position pos:line="5" pos:column="38"/></name></expr></init></decl>;<pos:position pos:line="5" pos:column="39"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="6" pos:column="5">int<pos:position pos:line="6" pos:column="8"/></name></type> <name pos:line="6" pos:column="9">flush<pos:position pos:line="6" pos:column="14"/></name> <init pos:line="6" pos:column="15">= <expr><literal type="number" pos:line="6" pos:column="17">0<pos:position pos:line="6" pos:column="18"/></literal></expr></init></decl>, <decl><type ref="prev"/><name pos:line="6" pos:column="20">blocking<pos:position pos:line="6" pos:column="28"/></name></decl>;<pos:position pos:line="6" pos:column="29"/></decl_stmt>
    
    <if pos:line="8" pos:column="5">if <condition pos:line="8" pos:column="8">(<expr><name><name pos:line="8" pos:column="9">task<pos:position pos:line="8" pos:column="13"/></name><operator pos:line="8" pos:column="13">-&gt;<pos:position pos:line="8" pos:column="18"/></operator><name pos:line="8" pos:column="15">frozen<pos:position pos:line="8" pos:column="21"/></name></name></expr>)<pos:position pos:line="8" pos:column="22"/></condition><then pos:line="8" pos:column="22"> <block pos:line="8" pos:column="23">{
        <expr_stmt><expr><call><name pos:line="9" pos:column="9">h2_util_bb_log<pos:position pos:line="9" pos:column="23"/></name><argument_list pos:line="9" pos:column="23">(<argument><expr><name><name pos:line="9" pos:column="24">task<pos:position pos:line="9" pos:column="28"/></name><operator pos:line="9" pos:column="28">-&gt;<pos:position pos:line="9" pos:column="33"/></operator><name pos:line="9" pos:column="30">c<pos:position pos:line="9" pos:column="31"/></name></name></expr></argument>, <argument><expr><name><name pos:line="9" pos:column="33">task<pos:position pos:line="9" pos:column="37"/></name><operator pos:line="9" pos:column="37">-&gt;<pos:position pos:line="9" pos:column="42"/></operator><name pos:line="9" pos:column="39">stream_id<pos:position pos:line="9" pos:column="48"/></name></name></expr></argument>, <argument><expr><name pos:line="9" pos:column="50">APLOG_TRACE2<pos:position pos:line="9" pos:column="62"/></name></expr></argument>,
                       <argument><expr><literal type="string" pos:line="10" pos:column="24">"frozen task output write, ignored"<pos:position pos:line="10" pos:column="59"/></literal></expr></argument>, <argument><expr><name pos:line="10" pos:column="61">bb<pos:position pos:line="10" pos:column="63"/></name></expr></argument>)<pos:position pos:line="10" pos:column="64"/></argument_list></call></expr>;<pos:position pos:line="10" pos:column="65"/></expr_stmt>
        <while pos:line="11" pos:column="9">while <condition pos:line="11" pos:column="15">(<expr><operator pos:line="11" pos:column="16">!<pos:position pos:line="11" pos:column="17"/></operator><call><name pos:line="11" pos:column="17">APR_BRIGADE_EMPTY<pos:position pos:line="11" pos:column="34"/></name><argument_list pos:line="11" pos:column="34">(<argument><expr><name pos:line="11" pos:column="35">bb<pos:position pos:line="11" pos:column="37"/></name></expr></argument>)<pos:position pos:line="11" pos:column="38"/></argument_list></call></expr>)<pos:position pos:line="11" pos:column="39"/></condition> <block pos:line="11" pos:column="40">{
            <expr_stmt><expr><name pos:line="12" pos:column="13">b<pos:position pos:line="12" pos:column="14"/></name> <operator pos:line="12" pos:column="15">=<pos:position pos:line="12" pos:column="16"/></operator> <call><name pos:line="12" pos:column="17">APR_BRIGADE_FIRST<pos:position pos:line="12" pos:column="34"/></name><argument_list pos:line="12" pos:column="34">(<argument><expr><name pos:line="12" pos:column="35">bb<pos:position pos:line="12" pos:column="37"/></name></expr></argument>)<pos:position pos:line="12" pos:column="38"/></argument_list></call></expr>;<pos:position pos:line="12" pos:column="39"/></expr_stmt>
            <if pos:line="13" pos:column="13">if <condition pos:line="13" pos:column="16">(<expr><call><name pos:line="13" pos:column="17">AP_BUCKET_IS_EOR<pos:position pos:line="13" pos:column="33"/></name><argument_list pos:line="13" pos:column="33">(<argument><expr><name pos:line="13" pos:column="34">b<pos:position pos:line="13" pos:column="35"/></name></expr></argument>)<pos:position pos:line="13" pos:column="36"/></argument_list></call></expr>)<pos:position pos:line="13" pos:column="37"/></condition><then pos:line="13" pos:column="37"> <block pos:line="13" pos:column="38">{
                <expr_stmt><expr><call><name pos:line="14" pos:column="17">APR_BUCKET_REMOVE<pos:position pos:line="14" pos:column="34"/></name><argument_list pos:line="14" pos:column="34">(<argument><expr><name pos:line="14" pos:column="35">b<pos:position pos:line="14" pos:column="36"/></name></expr></argument>)<pos:position pos:line="14" pos:column="37"/></argument_list></call></expr>;<pos:position pos:line="14" pos:column="38"/></expr_stmt>
                <expr_stmt><expr><name><name pos:line="15" pos:column="17">task<pos:position pos:line="15" pos:column="21"/></name><operator pos:line="15" pos:column="21">-&gt;<pos:position pos:line="15" pos:column="26"/></operator><name pos:line="15" pos:column="23">eor<pos:position pos:line="15" pos:column="26"/></name></name> <operator pos:line="15" pos:column="27">=<pos:position pos:line="15" pos:column="28"/></operator> <name pos:line="15" pos:column="29">b<pos:position pos:line="15" pos:column="30"/></name></expr>;<pos:position pos:line="15" pos:column="31"/></expr_stmt>
            }<pos:position pos:line="16" pos:column="14"/></block></then>
            <else pos:line="17" pos:column="13">else <block pos:line="17" pos:column="18">{
                <expr_stmt><expr><call><name pos:line="18" pos:column="17">apr_bucket_delete<pos:position pos:line="18" pos:column="34"/></name><argument_list pos:line="18" pos:column="34">(<argument><expr><name pos:line="18" pos:column="35">b<pos:position pos:line="18" pos:column="36"/></name></expr></argument>)<pos:position pos:line="18" pos:column="37"/></argument_list></call></expr>;<pos:position pos:line="18" pos:column="38"/></expr_stmt>
            }<pos:position pos:line="19" pos:column="14"/></block></else></if>
        }<pos:position pos:line="20" pos:column="10"/></block></while>
        <return pos:line="21" pos:column="9">return <expr><name pos:line="21" pos:column="16">APR_SUCCESS<pos:position pos:line="21" pos:column="27"/></name></expr>;<pos:position pos:line="21" pos:column="28"/></return>
    }<pos:position pos:line="22" pos:column="6"/></block></then></if>

    <comment type="block" pos:line="24" pos:column="5">/* we send block once we opened the output, so someone is there
     * reading it *and* the task is not assigned to a h2_req_engine */</comment>
    <expr_stmt><expr><name pos:line="26" pos:column="5">blocking<pos:position pos:line="26" pos:column="13"/></name> <operator pos:line="26" pos:column="14">=<pos:position pos:line="26" pos:column="15"/></operator> <operator pos:line="26" pos:column="16">(<pos:position pos:line="26" pos:column="17"/></operator><operator pos:line="26" pos:column="17">!<pos:position pos:line="26" pos:column="18"/></operator><name><name pos:line="26" pos:column="18">task<pos:position pos:line="26" pos:column="22"/></name><operator pos:line="26" pos:column="22">-&gt;<pos:position pos:line="26" pos:column="27"/></operator><name pos:line="26" pos:column="24">assigned<pos:position pos:line="26" pos:column="32"/></name></name> <operator pos:line="26" pos:column="33">&amp;&amp;<pos:position pos:line="26" pos:column="43"/></operator> <name><name pos:line="26" pos:column="36">task<pos:position pos:line="26" pos:column="40"/></name><operator pos:line="26" pos:column="40">-&gt;<pos:position pos:line="26" pos:column="45"/></operator><name pos:line="26" pos:column="42">output<pos:position pos:line="26" pos:column="48"/></name><operator pos:line="26" pos:column="48">.<pos:position pos:line="26" pos:column="49"/></operator><name pos:line="26" pos:column="49">opened<pos:position pos:line="26" pos:column="55"/></name></name><operator pos:line="26" pos:column="55">)<pos:position pos:line="26" pos:column="56"/></operator></expr>;<pos:position pos:line="26" pos:column="57"/></expr_stmt>
    <if pos:line="27" pos:column="5">if <condition pos:line="27" pos:column="8">(<expr><operator pos:line="27" pos:column="9">!<pos:position pos:line="27" pos:column="10"/></operator><name><name pos:line="27" pos:column="10">task<pos:position pos:line="27" pos:column="14"/></name><operator pos:line="27" pos:column="14">-&gt;<pos:position pos:line="27" pos:column="19"/></operator><name pos:line="27" pos:column="16">output<pos:position pos:line="27" pos:column="22"/></name><operator pos:line="27" pos:column="22">.<pos:position pos:line="27" pos:column="23"/></operator><name pos:line="27" pos:column="23">opened<pos:position pos:line="27" pos:column="29"/></name></name></expr>)<pos:position pos:line="27" pos:column="30"/></condition><then pos:line="27" pos:column="30"> <block pos:line="27" pos:column="31">{
        <for pos:line="28" pos:column="9">for <control pos:line="28" pos:column="13">(<init><expr><name pos:line="28" pos:column="14">b<pos:position pos:line="28" pos:column="15"/></name> <operator pos:line="28" pos:column="16">=<pos:position pos:line="28" pos:column="17"/></operator> <call><name pos:line="28" pos:column="18">APR_BRIGADE_FIRST<pos:position pos:line="28" pos:column="35"/></name><argument_list pos:line="28" pos:column="35">(<argument><expr><name pos:line="28" pos:column="36">bb<pos:position pos:line="28" pos:column="38"/></name></expr></argument>)<pos:position pos:line="28" pos:column="39"/></argument_list></call></expr>;<pos:position pos:line="28" pos:column="40"/></init>
             <condition><expr><name pos:line="29" pos:column="14">b<pos:position pos:line="29" pos:column="15"/></name> <operator pos:line="29" pos:column="16">!=<pos:position pos:line="29" pos:column="18"/></operator> <call><name pos:line="29" pos:column="19">APR_BRIGADE_SENTINEL<pos:position pos:line="29" pos:column="39"/></name><argument_list pos:line="29" pos:column="39">(<argument><expr><name pos:line="29" pos:column="40">bb<pos:position pos:line="29" pos:column="42"/></name></expr></argument>)<pos:position pos:line="29" pos:column="43"/></argument_list></call></expr>;<pos:position pos:line="29" pos:column="44"/></condition>
             <incr><expr><name pos:line="30" pos:column="14">b<pos:position pos:line="30" pos:column="15"/></name> <operator pos:line="30" pos:column="16">=<pos:position pos:line="30" pos:column="17"/></operator> <call><name pos:line="30" pos:column="18">APR_BUCKET_NEXT<pos:position pos:line="30" pos:column="33"/></name><argument_list pos:line="30" pos:column="33">(<argument><expr><name pos:line="30" pos:column="34">b<pos:position pos:line="30" pos:column="35"/></name></expr></argument>)<pos:position pos:line="30" pos:column="36"/></argument_list></call></expr></incr>)<pos:position pos:line="30" pos:column="37"/></control> <block pos:line="30" pos:column="38">{
            <if pos:line="31" pos:column="13">if <condition pos:line="31" pos:column="16">(<expr><call><name pos:line="31" pos:column="17">APR_BUCKET_IS_FLUSH<pos:position pos:line="31" pos:column="36"/></name><argument_list pos:line="31" pos:column="36">(<argument><expr><name pos:line="31" pos:column="37">b<pos:position pos:line="31" pos:column="38"/></name></expr></argument>)<pos:position pos:line="31" pos:column="39"/></argument_list></call></expr>)<pos:position pos:line="31" pos:column="40"/></condition><then pos:line="31" pos:column="40"> <block pos:line="31" pos:column="41">{
                <expr_stmt><expr><name pos:line="32" pos:column="17">flush<pos:position pos:line="32" pos:column="22"/></name> <operator pos:line="32" pos:column="23">=<pos:position pos:line="32" pos:column="24"/></operator> <literal type="number" pos:line="32" pos:column="25">1<pos:position pos:line="32" pos:column="26"/></literal></expr>;<pos:position pos:line="32" pos:column="27"/></expr_stmt>
                <break pos:line="33" pos:column="17">break;<pos:position pos:line="33" pos:column="23"/></break>
            }<pos:position pos:line="34" pos:column="14"/></block></then></if>
        }<pos:position pos:line="35" pos:column="10"/></block></for>
    }<pos:position pos:line="36" pos:column="6"/></block></then></if>
    
    <if pos:line="38" pos:column="5">if <condition pos:line="38" pos:column="8">(<expr><name><name pos:line="38" pos:column="9">task<pos:position pos:line="38" pos:column="13"/></name><operator pos:line="38" pos:column="13">-&gt;<pos:position pos:line="38" pos:column="18"/></operator><name pos:line="38" pos:column="15">output<pos:position pos:line="38" pos:column="21"/></name><operator pos:line="38" pos:column="21">.<pos:position pos:line="38" pos:column="22"/></operator><name pos:line="38" pos:column="22">bb<pos:position pos:line="38" pos:column="24"/></name></name> <operator pos:line="38" pos:column="25">&amp;&amp;<pos:position pos:line="38" pos:column="35"/></operator> <operator pos:line="38" pos:column="28">!<pos:position pos:line="38" pos:column="29"/></operator><call><name pos:line="38" pos:column="29">APR_BRIGADE_EMPTY<pos:position pos:line="38" pos:column="46"/></name><argument_list pos:line="38" pos:column="46">(<argument><expr><name><name pos:line="38" pos:column="47">task<pos:position pos:line="38" pos:column="51"/></name><operator pos:line="38" pos:column="51">-&gt;<pos:position pos:line="38" pos:column="56"/></operator><name pos:line="38" pos:column="53">output<pos:position pos:line="38" pos:column="59"/></name><operator pos:line="38" pos:column="59">.<pos:position pos:line="38" pos:column="60"/></operator><name pos:line="38" pos:column="60">bb<pos:position pos:line="38" pos:column="62"/></name></name></expr></argument>)<pos:position pos:line="38" pos:column="63"/></argument_list></call></expr>)<pos:position pos:line="38" pos:column="64"/></condition><then pos:line="38" pos:column="64"> <block pos:line="38" pos:column="65">{
        <comment type="block" pos:line="39" pos:column="9">/* still have data buffered from previous attempt.
         * setaside and append new data and try to pass the complete data */</comment>
        <if pos:line="41" pos:column="9">if <condition pos:line="41" pos:column="12">(<expr><operator pos:line="41" pos:column="13">!<pos:position pos:line="41" pos:column="14"/></operator><call><name pos:line="41" pos:column="14">APR_BRIGADE_EMPTY<pos:position pos:line="41" pos:column="31"/></name><argument_list pos:line="41" pos:column="31">(<argument><expr><name pos:line="41" pos:column="32">bb<pos:position pos:line="41" pos:column="34"/></name></expr></argument>)<pos:position pos:line="41" pos:column="35"/></argument_list></call></expr>)<pos:position pos:line="41" pos:column="36"/></condition><then pos:line="41" pos:column="36"> <block pos:line="41" pos:column="37">{
            <expr_stmt><expr><name pos:line="42" pos:column="13">status<pos:position pos:line="42" pos:column="19"/></name> <operator pos:line="42" pos:column="20">=<pos:position pos:line="42" pos:column="21"/></operator> <call><name pos:line="42" pos:column="22">ap_save_brigade<pos:position pos:line="42" pos:column="37"/></name><argument_list pos:line="42" pos:column="37">(<argument><expr><name pos:line="42" pos:column="38">f<pos:position pos:line="42" pos:column="39"/></name></expr></argument>, <argument><expr><operator pos:line="42" pos:column="41">&amp;<pos:position pos:line="42" pos:column="46"/></operator><name><name pos:line="42" pos:column="42">task<pos:position pos:line="42" pos:column="46"/></name><operator pos:line="42" pos:column="46">-&gt;<pos:position pos:line="42" pos:column="51"/></operator><name pos:line="42" pos:column="48">output<pos:position pos:line="42" pos:column="54"/></name><operator pos:line="42" pos:column="54">.<pos:position pos:line="42" pos:column="55"/></operator><name pos:line="42" pos:column="55">bb<pos:position pos:line="42" pos:column="57"/></name></name></expr></argument>, <argument><expr><operator pos:line="42" pos:column="59">&amp;<pos:position pos:line="42" pos:column="64"/></operator><name pos:line="42" pos:column="60">bb<pos:position pos:line="42" pos:column="62"/></name></expr></argument>, <argument><expr><name><name pos:line="42" pos:column="64">task<pos:position pos:line="42" pos:column="68"/></name><operator pos:line="42" pos:column="68">-&gt;<pos:position pos:line="42" pos:column="73"/></operator><name pos:line="42" pos:column="70">pool<pos:position pos:line="42" pos:column="74"/></name></name></expr></argument>)<pos:position pos:line="42" pos:column="75"/></argument_list></call></expr>;<pos:position pos:line="42" pos:column="76"/></expr_stmt>
        }<pos:position pos:line="43" pos:column="10"/></block></then></if>
        <if pos:line="44" pos:column="9">if <condition pos:line="44" pos:column="12">(<expr><name pos:line="44" pos:column="13">status<pos:position pos:line="44" pos:column="19"/></name> <operator pos:line="44" pos:column="20">==<pos:position pos:line="44" pos:column="22"/></operator> <name pos:line="44" pos:column="23">APR_SUCCESS<pos:position pos:line="44" pos:column="34"/></name></expr>)<pos:position pos:line="44" pos:column="35"/></condition><then pos:line="44" pos:column="35"> <block pos:line="44" pos:column="36">{
            <expr_stmt><expr><name pos:line="45" pos:column="13">status<pos:position pos:line="45" pos:column="19"/></name> <operator pos:line="45" pos:column="20">=<pos:position pos:line="45" pos:column="21"/></operator> <call><name pos:line="45" pos:column="22">send_out<pos:position pos:line="45" pos:column="30"/></name><argument_list pos:line="45" pos:column="30">(<argument><expr><name pos:line="45" pos:column="31">task<pos:position pos:line="45" pos:column="35"/></name></expr></argument>, <argument><expr><name><name pos:line="45" pos:column="37">task<pos:position pos:line="45" pos:column="41"/></name><operator pos:line="45" pos:column="41">-&gt;<pos:position pos:line="45" pos:column="46"/></operator><name pos:line="45" pos:column="43">output<pos:position pos:line="45" pos:column="49"/></name><operator pos:line="45" pos:column="49">.<pos:position pos:line="45" pos:column="50"/></operator><name pos:line="45" pos:column="50">bb<pos:position pos:line="45" pos:column="52"/></name></name></expr></argument>, <argument><expr><name pos:line="45" pos:column="54">blocking<pos:position pos:line="45" pos:column="62"/></name></expr></argument>)<pos:position pos:line="45" pos:column="63"/></argument_list></call></expr>;<pos:position pos:line="45" pos:column="64"/></expr_stmt>
        }<pos:position pos:line="46" pos:column="10"/></block></then></if> 
    }<pos:position pos:line="47" pos:column="6"/></block></then>
    <else pos:line="48" pos:column="5">else <block pos:line="48" pos:column="10">{
        <comment type="block" pos:line="49" pos:column="9">/* no data buffered here, try to pass the brigade directly */</comment>
        <expr_stmt><expr><name pos:line="50" pos:column="9">status<pos:position pos:line="50" pos:column="15"/></name> <operator pos:line="50" pos:column="16">=<pos:position pos:line="50" pos:column="17"/></operator> <call><name pos:line="50" pos:column="18">send_out<pos:position pos:line="50" pos:column="26"/></name><argument_list pos:line="50" pos:column="26">(<argument><expr><name pos:line="50" pos:column="27">task<pos:position pos:line="50" pos:column="31"/></name></expr></argument>, <argument><expr><name pos:line="50" pos:column="33">bb<pos:position pos:line="50" pos:column="35"/></name></expr></argument>, <argument><expr><name pos:line="50" pos:column="37">blocking<pos:position pos:line="50" pos:column="45"/></name></expr></argument>)<pos:position pos:line="50" pos:column="46"/></argument_list></call></expr>;<pos:position pos:line="50" pos:column="47"/></expr_stmt> 
        <if pos:line="51" pos:column="9">if <condition pos:line="51" pos:column="12">(<expr><name pos:line="51" pos:column="13">status<pos:position pos:line="51" pos:column="19"/></name> <operator pos:line="51" pos:column="20">==<pos:position pos:line="51" pos:column="22"/></operator> <name pos:line="51" pos:column="23">APR_SUCCESS<pos:position pos:line="51" pos:column="34"/></name> <operator pos:line="51" pos:column="35">&amp;&amp;<pos:position pos:line="51" pos:column="45"/></operator> <operator pos:line="51" pos:column="38">!<pos:position pos:line="51" pos:column="39"/></operator><call><name pos:line="51" pos:column="39">APR_BRIGADE_EMPTY<pos:position pos:line="51" pos:column="56"/></name><argument_list pos:line="51" pos:column="56">(<argument><expr><name pos:line="51" pos:column="57">bb<pos:position pos:line="51" pos:column="59"/></name></expr></argument>)<pos:position pos:line="51" pos:column="60"/></argument_list></call></expr>)<pos:position pos:line="51" pos:column="61"/></condition><then pos:line="51" pos:column="61"> <block pos:line="51" pos:column="62">{
            <comment type="block" pos:line="52" pos:column="13">/* could not write all, buffer the rest */</comment>
            <expr_stmt><expr><call><name pos:line="53" pos:column="13">ap_log_cerror<pos:position pos:line="53" pos:column="26"/></name><argument_list pos:line="53" pos:column="26">(<argument><expr><name pos:line="53" pos:column="27">APLOG_MARK<pos:position pos:line="53" pos:column="37"/></name></expr></argument>, <argument><expr><name pos:line="53" pos:column="39">APLOG_DEBUG<pos:position pos:line="53" pos:column="50"/></name></expr></argument>, <argument><expr><name pos:line="53" pos:column="52">status<pos:position pos:line="53" pos:column="58"/></name></expr></argument>, <argument><expr><name><name pos:line="53" pos:column="60">task<pos:position pos:line="53" pos:column="64"/></name><operator pos:line="53" pos:column="64">-&gt;<pos:position pos:line="53" pos:column="69"/></operator><name pos:line="53" pos:column="66">c<pos:position pos:line="53" pos:column="67"/></name></name></expr></argument>, <argument><expr><call><name pos:line="53" pos:column="69">APLOGNO<pos:position pos:line="53" pos:column="76"/></name><argument_list pos:line="53" pos:column="76">(<argument><expr><literal type="number" pos:line="53" pos:column="77">03405<pos:position pos:line="53" pos:column="82"/></literal></expr></argument>)<pos:position pos:line="53" pos:column="83"/></argument_list></call>
                          <literal type="string" pos:line="54" pos:column="27">"h2_slave_out(%s): saving brigade"<pos:position pos:line="54" pos:column="61"/></literal></expr></argument>, 
                          <argument><expr><name><name pos:line="55" pos:column="27">task<pos:position pos:line="55" pos:column="31"/></name><operator pos:line="55" pos:column="31">-&gt;<pos:position pos:line="55" pos:column="36"/></operator><name pos:line="55" pos:column="33">id<pos:position pos:line="55" pos:column="35"/></name></name></expr></argument>)<pos:position pos:line="55" pos:column="36"/></argument_list></call></expr>;<pos:position pos:line="55" pos:column="37"/></expr_stmt>
            <expr_stmt><expr><name pos:line="56" pos:column="13">status<pos:position pos:line="56" pos:column="19"/></name> <operator pos:line="56" pos:column="20">=<pos:position pos:line="56" pos:column="21"/></operator> <call><name pos:line="56" pos:column="22">ap_save_brigade<pos:position pos:line="56" pos:column="37"/></name><argument_list pos:line="56" pos:column="37">(<argument><expr><name pos:line="56" pos:column="38">f<pos:position pos:line="56" pos:column="39"/></name></expr></argument>, <argument><expr><operator pos:line="56" pos:column="41">&amp;<pos:position pos:line="56" pos:column="46"/></operator><name><name pos:line="56" pos:column="42">task<pos:position pos:line="56" pos:column="46"/></name><operator pos:line="56" pos:column="46">-&gt;<pos:position pos:line="56" pos:column="51"/></operator><name pos:line="56" pos:column="48">output<pos:position pos:line="56" pos:column="54"/></name><operator pos:line="56" pos:column="54">.<pos:position pos:line="56" pos:column="55"/></operator><name pos:line="56" pos:column="55">bb<pos:position pos:line="56" pos:column="57"/></name></name></expr></argument>, <argument><expr><operator pos:line="56" pos:column="59">&amp;<pos:position pos:line="56" pos:column="64"/></operator><name pos:line="56" pos:column="60">bb<pos:position pos:line="56" pos:column="62"/></name></expr></argument>, <argument><expr><name><name pos:line="56" pos:column="64">task<pos:position pos:line="56" pos:column="68"/></name><operator pos:line="56" pos:column="68">-&gt;<pos:position pos:line="56" pos:column="73"/></operator><name pos:line="56" pos:column="70">pool<pos:position pos:line="56" pos:column="74"/></name></name></expr></argument>)<pos:position pos:line="56" pos:column="75"/></argument_list></call></expr>;<pos:position pos:line="56" pos:column="76"/></expr_stmt>
            <expr_stmt><expr><name pos:line="57" pos:column="13">flush<pos:position pos:line="57" pos:column="18"/></name> <operator pos:line="57" pos:column="19">=<pos:position pos:line="57" pos:column="20"/></operator> <literal type="number" pos:line="57" pos:column="21">1<pos:position pos:line="57" pos:column="22"/></literal></expr>;<pos:position pos:line="57" pos:column="23"/></expr_stmt>
        }<pos:position pos:line="58" pos:column="10"/></block></then></if>
    }<pos:position pos:line="59" pos:column="6"/></block></else></if>
    
    <if pos:line="61" pos:column="5">if <condition pos:line="61" pos:column="8">(<expr><name pos:line="61" pos:column="9">status<pos:position pos:line="61" pos:column="15"/></name> <operator pos:line="61" pos:column="16">==<pos:position pos:line="61" pos:column="18"/></operator> <name pos:line="61" pos:column="19">APR_SUCCESS<pos:position pos:line="61" pos:column="30"/></name> <operator pos:line="61" pos:column="31">&amp;&amp;<pos:position pos:line="61" pos:column="41"/></operator> <operator pos:line="61" pos:column="34">!<pos:position pos:line="61" pos:column="35"/></operator><name><name pos:line="61" pos:column="35">task<pos:position pos:line="61" pos:column="39"/></name><operator pos:line="61" pos:column="39">-&gt;<pos:position pos:line="61" pos:column="44"/></operator><name pos:line="61" pos:column="41">output<pos:position pos:line="61" pos:column="47"/></name><operator pos:line="61" pos:column="47">.<pos:position pos:line="61" pos:column="48"/></operator><name pos:line="61" pos:column="48">opened<pos:position pos:line="61" pos:column="54"/></name></name> <operator pos:line="61" pos:column="55">&amp;&amp;<pos:position pos:line="61" pos:column="65"/></operator> <name pos:line="61" pos:column="58">flush<pos:position pos:line="61" pos:column="63"/></name></expr>)<pos:position pos:line="61" pos:column="64"/></condition><then pos:line="61" pos:column="64"> <block pos:line="61" pos:column="65">{
        <comment type="block" pos:line="62" pos:column="9">/* got a flush or could not write all, time to tell someone to read */</comment>
        <expr_stmt><expr><name pos:line="63" pos:column="9">status<pos:position pos:line="63" pos:column="15"/></name> <operator pos:line="63" pos:column="16">=<pos:position pos:line="63" pos:column="17"/></operator> <call><name pos:line="63" pos:column="18">open_output<pos:position pos:line="63" pos:column="29"/></name><argument_list pos:line="63" pos:column="29">(<argument><expr><name pos:line="63" pos:column="30">task<pos:position pos:line="63" pos:column="34"/></name></expr></argument>)<pos:position pos:line="63" pos:column="35"/></argument_list></call></expr>;<pos:position pos:line="63" pos:column="36"/></expr_stmt>
    }<pos:position pos:line="64" pos:column="6"/></block></then></if>
    <expr_stmt><expr><call><name pos:line="65" pos:column="5">ap_log_cerror<pos:position pos:line="65" pos:column="18"/></name><argument_list pos:line="65" pos:column="18">(<argument><expr><name pos:line="65" pos:column="19">APLOG_MARK<pos:position pos:line="65" pos:column="29"/></name></expr></argument>, <argument><expr><name pos:line="65" pos:column="31">APLOG_TRACE2<pos:position pos:line="65" pos:column="43"/></name></expr></argument>, <argument><expr><name pos:line="65" pos:column="45">status<pos:position pos:line="65" pos:column="51"/></name></expr></argument>, <argument><expr><name><name pos:line="65" pos:column="53">task<pos:position pos:line="65" pos:column="57"/></name><operator pos:line="65" pos:column="57">-&gt;<pos:position pos:line="65" pos:column="62"/></operator><name pos:line="65" pos:column="59">c<pos:position pos:line="65" pos:column="60"/></name></name></expr></argument>, 
                  <argument><expr><literal type="string" pos:line="66" pos:column="19">"h2_slave_out(%s): slave_out leave"<pos:position pos:line="66" pos:column="54"/></literal></expr></argument>, <argument><expr><name><name pos:line="66" pos:column="56">task<pos:position pos:line="66" pos:column="60"/></name><operator pos:line="66" pos:column="60">-&gt;<pos:position pos:line="66" pos:column="65"/></operator><name pos:line="66" pos:column="62">id<pos:position pos:line="66" pos:column="64"/></name></name></expr></argument>)<pos:position pos:line="66" pos:column="65"/></argument_list></call></expr>;<pos:position pos:line="66" pos:column="66"/></expr_stmt>    
    <return pos:line="67" pos:column="5">return <expr><name pos:line="67" pos:column="12">status<pos:position pos:line="67" pos:column="18"/></name></expr>;<pos:position pos:line="67" pos:column="19"/></return>
}<pos:position pos:line="68" pos:column="2"/></block></function></unit>

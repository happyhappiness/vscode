<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/httpd/gumtree/httpd_function_4831.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">void<pos:position pos:line="1" pos:column="5"/></name></type> <name pos:line="1" pos:column="6">ssl_scache_init<pos:position pos:line="1" pos:column="21"/></name><parameter_list pos:line="1" pos:column="21">(<parameter><decl><type><name pos:line="1" pos:column="22">server_rec<pos:position pos:line="1" pos:column="32"/></name> <modifier pos:line="1" pos:column="33">*<pos:position pos:line="1" pos:column="34"/></modifier></type><name pos:line="1" pos:column="34">s<pos:position pos:line="1" pos:column="35"/></name></decl></parameter>, <parameter><decl><type><name pos:line="1" pos:column="37">apr_pool_t<pos:position pos:line="1" pos:column="47"/></name> <modifier pos:line="1" pos:column="48">*<pos:position pos:line="1" pos:column="49"/></modifier></type><name pos:line="1" pos:column="49">p<pos:position pos:line="1" pos:column="50"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="51"/></parameter_list>
<block pos:line="2" pos:column="1">{
    <decl_stmt><decl><type><name pos:line="3" pos:column="5">SSLModConfigRec<pos:position pos:line="3" pos:column="20"/></name> <modifier pos:line="3" pos:column="21">*<pos:position pos:line="3" pos:column="22"/></modifier></type><name pos:line="3" pos:column="22">mc<pos:position pos:line="3" pos:column="24"/></name> <init pos:line="3" pos:column="25">= <expr><call><name pos:line="3" pos:column="27">myModConfig<pos:position pos:line="3" pos:column="38"/></name><argument_list pos:line="3" pos:column="38">(<argument><expr><name pos:line="3" pos:column="39">s<pos:position pos:line="3" pos:column="40"/></name></expr></argument>)<pos:position pos:line="3" pos:column="41"/></argument_list></call></expr></init></decl>;<pos:position pos:line="3" pos:column="42"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="4" pos:column="5">apr_status_t<pos:position pos:line="4" pos:column="17"/></name></type> <name pos:line="4" pos:column="18">rv<pos:position pos:line="4" pos:column="20"/></name></decl>;<pos:position pos:line="4" pos:column="21"/></decl_stmt>
    <decl_stmt><decl><type><name><name pos:line="5" pos:column="5">struct<pos:position pos:line="5" pos:column="11"/></name> <name pos:line="5" pos:column="12">ap_socache_hints<pos:position pos:line="5" pos:column="28"/></name></name></type> <name pos:line="5" pos:column="29">hints<pos:position pos:line="5" pos:column="34"/></name></decl>;<pos:position pos:line="5" pos:column="35"/></decl_stmt>

    <comment type="block" pos:line="7" pos:column="5">/* The very first invocation of this function will be the
     * post_config invocation during server startup; do nothing for
     * this first (and only the first) time through, since the pool
     * will be immediately cleared anyway.  For every subsequent
     * invocation, initialize the configured cache. */</comment>
    <if pos:line="12" pos:column="5">if <condition pos:line="12" pos:column="8">(<expr><call><name pos:line="12" pos:column="9">ap_state_query<pos:position pos:line="12" pos:column="23"/></name><argument_list pos:line="12" pos:column="23">(<argument><expr><name pos:line="12" pos:column="24">AP_SQ_MAIN_STATE<pos:position pos:line="12" pos:column="40"/></name></expr></argument>)<pos:position pos:line="12" pos:column="41"/></argument_list></call> <operator pos:line="12" pos:column="42">==<pos:position pos:line="12" pos:column="44"/></operator> <name pos:line="12" pos:column="45">AP_SQ_MS_CREATE_PRE_CONFIG<pos:position pos:line="12" pos:column="71"/></name></expr>)<pos:position pos:line="12" pos:column="72"/></condition><then pos:line="12" pos:column="72">
        <block type="pseudo"><return pos:line="13" pos:column="9">return;<pos:position pos:line="13" pos:column="16"/></return></block></then></if>

<cpp:ifdef pos:line="15" pos:column="1">#<cpp:directive pos:line="15" pos:column="2">ifdef<pos:position pos:line="15" pos:column="7"/></cpp:directive> <name pos:line="15" pos:column="8">HAVE_OCSP_STAPLING<pos:position pos:line="15" pos:column="26"/></name></cpp:ifdef>
    <if pos:line="16" pos:column="5">if <condition pos:line="16" pos:column="8">(<expr><name><name pos:line="16" pos:column="9">mc<pos:position pos:line="16" pos:column="11"/></name><operator pos:line="16" pos:column="11">-&gt;<pos:position pos:line="16" pos:column="16"/></operator><name pos:line="16" pos:column="13">stapling_cache<pos:position pos:line="16" pos:column="27"/></name></name></expr>)<pos:position pos:line="16" pos:column="28"/></condition><then pos:line="16" pos:column="28"> <block pos:line="16" pos:column="29">{
        <expr_stmt><expr><call><name pos:line="17" pos:column="9">memset<pos:position pos:line="17" pos:column="15"/></name><argument_list pos:line="17" pos:column="15">(<argument><expr><operator pos:line="17" pos:column="16">&amp;<pos:position pos:line="17" pos:column="21"/></operator><name pos:line="17" pos:column="17">hints<pos:position pos:line="17" pos:column="22"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="17" pos:column="24">0<pos:position pos:line="17" pos:column="25"/></literal></expr></argument>, <argument><expr><sizeof pos:line="17" pos:column="27">sizeof <name pos:line="17" pos:column="34">hints<pos:position pos:line="17" pos:column="39"/></name></sizeof></expr></argument>)<pos:position pos:line="17" pos:column="40"/></argument_list></call></expr>;<pos:position pos:line="17" pos:column="41"/></expr_stmt>
        <expr_stmt><expr><name><name pos:line="18" pos:column="9">hints<pos:position pos:line="18" pos:column="14"/></name><operator pos:line="18" pos:column="14">.<pos:position pos:line="18" pos:column="15"/></operator><name pos:line="18" pos:column="15">avg_obj_size<pos:position pos:line="18" pos:column="27"/></name></name> <operator pos:line="18" pos:column="28">=<pos:position pos:line="18" pos:column="29"/></operator> <literal type="number" pos:line="18" pos:column="30">1500<pos:position pos:line="18" pos:column="34"/></literal></expr>;<pos:position pos:line="18" pos:column="35"/></expr_stmt>
        <expr_stmt><expr><name><name pos:line="19" pos:column="9">hints<pos:position pos:line="19" pos:column="14"/></name><operator pos:line="19" pos:column="14">.<pos:position pos:line="19" pos:column="15"/></operator><name pos:line="19" pos:column="15">avg_id_len<pos:position pos:line="19" pos:column="25"/></name></name> <operator pos:line="19" pos:column="26">=<pos:position pos:line="19" pos:column="27"/></operator> <literal type="number" pos:line="19" pos:column="28">20<pos:position pos:line="19" pos:column="30"/></literal></expr>;<pos:position pos:line="19" pos:column="31"/></expr_stmt>
        <expr_stmt><expr><name><name pos:line="20" pos:column="9">hints<pos:position pos:line="20" pos:column="14"/></name><operator pos:line="20" pos:column="14">.<pos:position pos:line="20" pos:column="15"/></operator><name pos:line="20" pos:column="15">expiry_interval<pos:position pos:line="20" pos:column="30"/></name></name> <operator pos:line="20" pos:column="31">=<pos:position pos:line="20" pos:column="32"/></operator> <literal type="number" pos:line="20" pos:column="33">300<pos:position pos:line="20" pos:column="36"/></literal></expr>;<pos:position pos:line="20" pos:column="37"/></expr_stmt>

        <expr_stmt><expr><name pos:line="22" pos:column="9">rv<pos:position pos:line="22" pos:column="11"/></name> <operator pos:line="22" pos:column="12">=<pos:position pos:line="22" pos:column="13"/></operator> <call><name><name pos:line="22" pos:column="14">mc<pos:position pos:line="22" pos:column="16"/></name><operator pos:line="22" pos:column="16">-&gt;<pos:position pos:line="22" pos:column="21"/></operator><name pos:line="22" pos:column="18">stapling_cache<pos:position pos:line="22" pos:column="32"/></name><operator pos:line="22" pos:column="32">-&gt;<pos:position pos:line="22" pos:column="37"/></operator><name pos:line="22" pos:column="34">init<pos:position pos:line="22" pos:column="38"/></name></name><argument_list pos:line="22" pos:column="38">(<argument><expr><name><name pos:line="22" pos:column="39">mc<pos:position pos:line="22" pos:column="41"/></name><operator pos:line="22" pos:column="41">-&gt;<pos:position pos:line="22" pos:column="46"/></operator><name pos:line="22" pos:column="43">stapling_cache_context<pos:position pos:line="22" pos:column="65"/></name></name></expr></argument>,
                                     <argument><expr><literal type="string" pos:line="23" pos:column="38">"mod_ssl-stapling"<pos:position pos:line="23" pos:column="56"/></literal></expr></argument>, <argument><expr><operator pos:line="23" pos:column="58">&amp;<pos:position pos:line="23" pos:column="63"/></operator><name pos:line="23" pos:column="59">hints<pos:position pos:line="23" pos:column="64"/></name></expr></argument>, <argument><expr><name pos:line="23" pos:column="66">s<pos:position pos:line="23" pos:column="67"/></name></expr></argument>, <argument><expr><name pos:line="23" pos:column="69">p<pos:position pos:line="23" pos:column="70"/></name></expr></argument>)<pos:position pos:line="23" pos:column="71"/></argument_list></call></expr>;<pos:position pos:line="23" pos:column="72"/></expr_stmt>
        <if pos:line="24" pos:column="9">if <condition pos:line="24" pos:column="12">(<expr><name pos:line="24" pos:column="13">rv<pos:position pos:line="24" pos:column="15"/></name></expr>)<pos:position pos:line="24" pos:column="16"/></condition><then pos:line="24" pos:column="16"> <block pos:line="24" pos:column="17">{
            <expr_stmt><expr><call><name pos:line="25" pos:column="13">ap_log_error<pos:position pos:line="25" pos:column="25"/></name><argument_list pos:line="25" pos:column="25">(<argument><expr><name pos:line="25" pos:column="26">APLOG_MARK<pos:position pos:line="25" pos:column="36"/></name></expr></argument>, <argument><expr><name pos:line="25" pos:column="38">APLOG_EMERG<pos:position pos:line="25" pos:column="49"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="25" pos:column="51">0<pos:position pos:line="25" pos:column="52"/></literal></expr></argument>, <argument><expr><name pos:line="25" pos:column="54">s<pos:position pos:line="25" pos:column="55"/></name></expr></argument>, <argument><expr><call><name pos:line="25" pos:column="57">APLOGNO<pos:position pos:line="25" pos:column="64"/></name><argument_list pos:line="25" pos:column="64">(<argument><expr><literal type="number" pos:line="25" pos:column="65">01872<pos:position pos:line="25" pos:column="70"/></literal></expr></argument>)<pos:position pos:line="25" pos:column="71"/></argument_list></call>
                         <literal type="string" pos:line="26" pos:column="26">"Could not initialize stapling cache. Exiting."<pos:position pos:line="26" pos:column="73"/></literal></expr></argument>)<pos:position pos:line="26" pos:column="74"/></argument_list></call></expr>;<pos:position pos:line="26" pos:column="75"/></expr_stmt>
            <expr_stmt><expr><call><name pos:line="27" pos:column="13">ssl_die<pos:position pos:line="27" pos:column="20"/></name><argument_list pos:line="27" pos:column="20">()<pos:position pos:line="27" pos:column="22"/></argument_list></call></expr>;<pos:position pos:line="27" pos:column="23"/></expr_stmt>
        }<pos:position pos:line="28" pos:column="10"/></block></then></if>
    }<pos:position pos:line="29" pos:column="6"/></block></then></if>
<cpp:endif pos:line="30" pos:column="1">#<cpp:directive pos:line="30" pos:column="2">endif<pos:position pos:line="30" pos:column="7"/></cpp:directive></cpp:endif>

    <comment type="block" pos:line="32" pos:column="5">/*
     * Warn the user that he should use the session cache.
     * But we can operate without it, of course.
     */</comment>
    <if pos:line="36" pos:column="5">if <condition pos:line="36" pos:column="8">(<expr><name><name pos:line="36" pos:column="9">mc<pos:position pos:line="36" pos:column="11"/></name><operator pos:line="36" pos:column="11">-&gt;<pos:position pos:line="36" pos:column="16"/></operator><name pos:line="36" pos:column="13">sesscache<pos:position pos:line="36" pos:column="22"/></name></name> <operator pos:line="36" pos:column="23">==<pos:position pos:line="36" pos:column="25"/></operator> <name pos:line="36" pos:column="26">NULL<pos:position pos:line="36" pos:column="30"/></name></expr>)<pos:position pos:line="36" pos:column="31"/></condition><then pos:line="36" pos:column="31"> <block pos:line="36" pos:column="32">{
        <expr_stmt><expr><call><name pos:line="37" pos:column="9">ap_log_error<pos:position pos:line="37" pos:column="21"/></name><argument_list pos:line="37" pos:column="21">(<argument><expr><name pos:line="37" pos:column="22">APLOG_MARK<pos:position pos:line="37" pos:column="32"/></name></expr></argument>, <argument><expr><name pos:line="37" pos:column="34">APLOG_WARNING<pos:position pos:line="37" pos:column="47"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="37" pos:column="49">0<pos:position pos:line="37" pos:column="50"/></literal></expr></argument>, <argument><expr><name pos:line="37" pos:column="52">s<pos:position pos:line="37" pos:column="53"/></name></expr></argument>, <argument><expr><call><name pos:line="37" pos:column="55">APLOGNO<pos:position pos:line="37" pos:column="62"/></name><argument_list pos:line="37" pos:column="62">(<argument><expr><literal type="number" pos:line="37" pos:column="63">01873<pos:position pos:line="37" pos:column="68"/></literal></expr></argument>)<pos:position pos:line="37" pos:column="69"/></argument_list></call>
                     <literal type="string" pos:line="38" pos:column="22">"Init: Session Cache is not configured "<pos:position pos:line="38" pos:column="62"/></literal>
                     <literal type="string" pos:line="39" pos:column="22">"[hint: SSLSessionCache]"<pos:position pos:line="39" pos:column="47"/></literal></expr></argument>)<pos:position pos:line="39" pos:column="48"/></argument_list></call></expr>;<pos:position pos:line="39" pos:column="49"/></expr_stmt>
        <return pos:line="40" pos:column="9">return;<pos:position pos:line="40" pos:column="16"/></return>
    }<pos:position pos:line="41" pos:column="6"/></block></then></if>

    <expr_stmt><expr><call><name pos:line="43" pos:column="5">memset<pos:position pos:line="43" pos:column="11"/></name><argument_list pos:line="43" pos:column="11">(<argument><expr><operator pos:line="43" pos:column="12">&amp;<pos:position pos:line="43" pos:column="17"/></operator><name pos:line="43" pos:column="13">hints<pos:position pos:line="43" pos:column="18"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="43" pos:column="20">0<pos:position pos:line="43" pos:column="21"/></literal></expr></argument>, <argument><expr><sizeof pos:line="43" pos:column="23">sizeof <name pos:line="43" pos:column="30">hints<pos:position pos:line="43" pos:column="35"/></name></sizeof></expr></argument>)<pos:position pos:line="43" pos:column="36"/></argument_list></call></expr>;<pos:position pos:line="43" pos:column="37"/></expr_stmt>
    <expr_stmt><expr><name><name pos:line="44" pos:column="5">hints<pos:position pos:line="44" pos:column="10"/></name><operator pos:line="44" pos:column="10">.<pos:position pos:line="44" pos:column="11"/></operator><name pos:line="44" pos:column="11">avg_obj_size<pos:position pos:line="44" pos:column="23"/></name></name> <operator pos:line="44" pos:column="24">=<pos:position pos:line="44" pos:column="25"/></operator> <literal type="number" pos:line="44" pos:column="26">150<pos:position pos:line="44" pos:column="29"/></literal></expr>;<pos:position pos:line="44" pos:column="30"/></expr_stmt>
    <expr_stmt><expr><name><name pos:line="45" pos:column="5">hints<pos:position pos:line="45" pos:column="10"/></name><operator pos:line="45" pos:column="10">.<pos:position pos:line="45" pos:column="11"/></operator><name pos:line="45" pos:column="11">avg_id_len<pos:position pos:line="45" pos:column="21"/></name></name> <operator pos:line="45" pos:column="22">=<pos:position pos:line="45" pos:column="23"/></operator> <literal type="number" pos:line="45" pos:column="24">30<pos:position pos:line="45" pos:column="26"/></literal></expr>;<pos:position pos:line="45" pos:column="27"/></expr_stmt>
    <expr_stmt><expr><name><name pos:line="46" pos:column="5">hints<pos:position pos:line="46" pos:column="10"/></name><operator pos:line="46" pos:column="10">.<pos:position pos:line="46" pos:column="11"/></operator><name pos:line="46" pos:column="11">expiry_interval<pos:position pos:line="46" pos:column="26"/></name></name> <operator pos:line="46" pos:column="27">=<pos:position pos:line="46" pos:column="28"/></operator> <literal type="number" pos:line="46" pos:column="29">30<pos:position pos:line="46" pos:column="31"/></literal></expr>;<pos:position pos:line="46" pos:column="32"/></expr_stmt>

    <expr_stmt><expr><name pos:line="48" pos:column="5">rv<pos:position pos:line="48" pos:column="7"/></name> <operator pos:line="48" pos:column="8">=<pos:position pos:line="48" pos:column="9"/></operator> <call><name><name pos:line="48" pos:column="10">mc<pos:position pos:line="48" pos:column="12"/></name><operator pos:line="48" pos:column="12">-&gt;<pos:position pos:line="48" pos:column="17"/></operator><name pos:line="48" pos:column="14">sesscache<pos:position pos:line="48" pos:column="23"/></name><operator pos:line="48" pos:column="23">-&gt;<pos:position pos:line="48" pos:column="28"/></operator><name pos:line="48" pos:column="25">init<pos:position pos:line="48" pos:column="29"/></name></name><argument_list pos:line="48" pos:column="29">(<argument><expr><name><name pos:line="48" pos:column="30">mc<pos:position pos:line="48" pos:column="32"/></name><operator pos:line="48" pos:column="32">-&gt;<pos:position pos:line="48" pos:column="37"/></operator><name pos:line="48" pos:column="34">sesscache_context<pos:position pos:line="48" pos:column="51"/></name></name></expr></argument>, <argument><expr><literal type="string" pos:line="48" pos:column="53">"mod_ssl-session"<pos:position pos:line="48" pos:column="70"/></literal></expr></argument>, <argument><expr><operator pos:line="48" pos:column="72">&amp;<pos:position pos:line="48" pos:column="77"/></operator><name pos:line="48" pos:column="73">hints<pos:position pos:line="48" pos:column="78"/></name></expr></argument>, <argument><expr><name pos:line="48" pos:column="80">s<pos:position pos:line="48" pos:column="81"/></name></expr></argument>, <argument><expr><name pos:line="48" pos:column="83">p<pos:position pos:line="48" pos:column="84"/></name></expr></argument>)<pos:position pos:line="48" pos:column="85"/></argument_list></call></expr>;<pos:position pos:line="48" pos:column="86"/></expr_stmt>
    <if pos:line="49" pos:column="5">if <condition pos:line="49" pos:column="8">(<expr><name pos:line="49" pos:column="9">rv<pos:position pos:line="49" pos:column="11"/></name></expr>)<pos:position pos:line="49" pos:column="12"/></condition><then pos:line="49" pos:column="12"> <block pos:line="49" pos:column="13">{
        <expr_stmt><expr><call><name pos:line="50" pos:column="9">ap_log_error<pos:position pos:line="50" pos:column="21"/></name><argument_list pos:line="50" pos:column="21">(<argument><expr><name pos:line="50" pos:column="22">APLOG_MARK<pos:position pos:line="50" pos:column="32"/></name></expr></argument>, <argument><expr><name pos:line="50" pos:column="34">APLOG_EMERG<pos:position pos:line="50" pos:column="45"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="50" pos:column="47">0<pos:position pos:line="50" pos:column="48"/></literal></expr></argument>, <argument><expr><name pos:line="50" pos:column="50">s<pos:position pos:line="50" pos:column="51"/></name></expr></argument>, <argument><expr><call><name pos:line="50" pos:column="53">APLOGNO<pos:position pos:line="50" pos:column="60"/></name><argument_list pos:line="50" pos:column="60">(<argument><expr><literal type="number" pos:line="50" pos:column="61">01874<pos:position pos:line="50" pos:column="66"/></literal></expr></argument>)<pos:position pos:line="50" pos:column="67"/></argument_list></call>
                     <literal type="string" pos:line="51" pos:column="22">"Could not initialize session cache. Exiting."<pos:position pos:line="51" pos:column="68"/></literal></expr></argument>)<pos:position pos:line="51" pos:column="69"/></argument_list></call></expr>;<pos:position pos:line="51" pos:column="70"/></expr_stmt>
        <expr_stmt><expr><call><name pos:line="52" pos:column="9">ssl_die<pos:position pos:line="52" pos:column="16"/></name><argument_list pos:line="52" pos:column="16">()<pos:position pos:line="52" pos:column="18"/></argument_list></call></expr>;<pos:position pos:line="52" pos:column="19"/></expr_stmt>
    }<pos:position pos:line="53" pos:column="6"/></block></then></if>
}<pos:position pos:line="54" pos:column="2"/></block></function></unit>

<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/httpd/gumtree/httpd_repos_function_4067_httpd-2.2.22.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">BOOL<pos:position pos:line="1" pos:column="12"/></name></type>
<name pos:line="2" pos:column="1">could_be_empty<pos:position pos:line="2" pos:column="15"/></name><parameter_list pos:line="2" pos:column="15">(<parameter><decl><type><specifier pos:line="2" pos:column="16">const<pos:position pos:line="2" pos:column="21"/></specifier> <name pos:line="2" pos:column="22">uschar<pos:position pos:line="2" pos:column="28"/></name> <modifier pos:line="2" pos:column="29">*<pos:position pos:line="2" pos:column="30"/></modifier></type><name pos:line="2" pos:column="30">code<pos:position pos:line="2" pos:column="34"/></name></decl></parameter>, <parameter><decl><type><specifier pos:line="2" pos:column="36">const<pos:position pos:line="2" pos:column="41"/></specifier> <name pos:line="2" pos:column="42">uschar<pos:position pos:line="2" pos:column="48"/></name> <modifier pos:line="2" pos:column="49">*<pos:position pos:line="2" pos:column="50"/></modifier></type><name pos:line="2" pos:column="50">endcode<pos:position pos:line="2" pos:column="57"/></name></decl></parameter>, <parameter><decl><type><name pos:line="2" pos:column="59">branch_chain<pos:position pos:line="2" pos:column="71"/></name> <modifier pos:line="2" pos:column="72">*<pos:position pos:line="2" pos:column="73"/></modifier></type><name pos:line="2" pos:column="73">bcptr<pos:position pos:line="2" pos:column="78"/></name></decl></parameter>,
  <parameter><decl><type><name pos:line="3" pos:column="3">BOOL<pos:position pos:line="3" pos:column="7"/></name></type> <name pos:line="3" pos:column="8">utf8<pos:position pos:line="3" pos:column="12"/></name></decl></parameter>)<pos:position pos:line="3" pos:column="13"/></parameter_list>
<block pos:line="4" pos:column="1">{
<while pos:line="5" pos:column="1">while <condition pos:line="5" pos:column="7">(<expr><name pos:line="5" pos:column="8">bcptr<pos:position pos:line="5" pos:column="13"/></name> <operator pos:line="5" pos:column="14">!=<pos:position pos:line="5" pos:column="16"/></operator> <name pos:line="5" pos:column="17">NULL<pos:position pos:line="5" pos:column="21"/></name> <operator pos:line="5" pos:column="22">&amp;&amp;<pos:position pos:line="5" pos:column="32"/></operator> <name><name pos:line="5" pos:column="25">bcptr<pos:position pos:line="5" pos:column="30"/></name><operator pos:line="5" pos:column="30">-&gt;<pos:position pos:line="5" pos:column="35"/></operator><name pos:line="5" pos:column="32">current<pos:position pos:line="5" pos:column="39"/></name></name> <operator pos:line="5" pos:column="40">&gt;=<pos:position pos:line="5" pos:column="45"/></operator> <name pos:line="5" pos:column="43">code<pos:position pos:line="5" pos:column="47"/></name></expr>)<pos:position pos:line="5" pos:column="48"/></condition>
  <block pos:line="6" pos:column="3">{
  <if pos:line="7" pos:column="3">if <condition pos:line="7" pos:column="6">(<expr><operator pos:line="7" pos:column="7">!<pos:position pos:line="7" pos:column="8"/></operator><call><name pos:line="7" pos:column="8">could_be_empty_branch<pos:position pos:line="7" pos:column="29"/></name><argument_list pos:line="7" pos:column="29">(<argument><expr><name><name pos:line="7" pos:column="30">bcptr<pos:position pos:line="7" pos:column="35"/></name><operator pos:line="7" pos:column="35">-&gt;<pos:position pos:line="7" pos:column="40"/></operator><name pos:line="7" pos:column="37">current<pos:position pos:line="7" pos:column="44"/></name></name></expr></argument>, <argument><expr><name pos:line="7" pos:column="46">endcode<pos:position pos:line="7" pos:column="53"/></name></expr></argument>, <argument><expr><name pos:line="7" pos:column="55">utf8<pos:position pos:line="7" pos:column="59"/></name></expr></argument>)<pos:position pos:line="7" pos:column="60"/></argument_list></call></expr>)<pos:position pos:line="7" pos:column="61"/></condition><then pos:line="7" pos:column="61"> <block type="pseudo"><return pos:line="7" pos:column="62">return <expr><name pos:line="7" pos:column="69">FALSE<pos:position pos:line="7" pos:column="74"/></name></expr>;<pos:position pos:line="7" pos:column="75"/></return></block></then></if>
  <expr_stmt><expr><name pos:line="8" pos:column="3">bcptr<pos:position pos:line="8" pos:column="8"/></name> <operator pos:line="8" pos:column="9">=<pos:position pos:line="8" pos:column="10"/></operator> <name><name pos:line="8" pos:column="11">bcptr<pos:position pos:line="8" pos:column="16"/></name><operator pos:line="8" pos:column="16">-&gt;<pos:position pos:line="8" pos:column="21"/></operator><name pos:line="8" pos:column="18">outer<pos:position pos:line="8" pos:column="23"/></name></name></expr>;<pos:position pos:line="8" pos:column="24"/></expr_stmt>
  }<pos:position pos:line="9" pos:column="4"/></block></while>
<return pos:line="10" pos:column="1">return <expr><name pos:line="10" pos:column="8">TRUE<pos:position pos:line="10" pos:column="12"/></name></expr>;<pos:position pos:line="10" pos:column="13"/></return>
}<pos:position pos:line="11" pos:column="2"/></block></function></unit>

<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/httpd/gumtree/httpd_function_6909.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">void<pos:position pos:line="1" pos:column="5"/></name></type> <name pos:line="1" pos:column="6">h2_stream_cleanup<pos:position pos:line="1" pos:column="23"/></name><parameter_list pos:line="1" pos:column="23">(<parameter><decl><type><name pos:line="1" pos:column="24">h2_stream<pos:position pos:line="1" pos:column="33"/></name> <modifier pos:line="1" pos:column="34">*<pos:position pos:line="1" pos:column="35"/></modifier></type><name pos:line="1" pos:column="35">stream<pos:position pos:line="1" pos:column="41"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="42"/></parameter_list>
<block pos:line="2" pos:column="1">{
    <decl_stmt><decl><type><name pos:line="3" pos:column="5">apr_status_t<pos:position pos:line="3" pos:column="17"/></name></type> <name pos:line="3" pos:column="18">status<pos:position pos:line="3" pos:column="24"/></name></decl>;<pos:position pos:line="3" pos:column="25"/></decl_stmt>
    
    <expr_stmt><expr><call><name pos:line="5" pos:column="5">ap_assert<pos:position pos:line="5" pos:column="14"/></name><argument_list pos:line="5" pos:column="14">(<argument><expr><name pos:line="5" pos:column="15">stream<pos:position pos:line="5" pos:column="21"/></name></expr></argument>)<pos:position pos:line="5" pos:column="22"/></argument_list></call></expr>;<pos:position pos:line="5" pos:column="23"/></expr_stmt>
    <if pos:line="6" pos:column="5">if <condition pos:line="6" pos:column="8">(<expr><name><name pos:line="6" pos:column="9">stream<pos:position pos:line="6" pos:column="15"/></name><operator pos:line="6" pos:column="15">-&gt;<pos:position pos:line="6" pos:column="20"/></operator><name pos:line="6" pos:column="17">out_buffer<pos:position pos:line="6" pos:column="27"/></name></name></expr>)<pos:position pos:line="6" pos:column="28"/></condition><then pos:line="6" pos:column="28"> <block pos:line="6" pos:column="29">{
        <comment type="block" pos:line="7" pos:column="9">/* remove any left over output buckets that may still have
         * references into request pools */</comment>
        <expr_stmt><expr><call><name pos:line="9" pos:column="9">apr_brigade_cleanup<pos:position pos:line="9" pos:column="28"/></name><argument_list pos:line="9" pos:column="28">(<argument><expr><name><name pos:line="9" pos:column="29">stream<pos:position pos:line="9" pos:column="35"/></name><operator pos:line="9" pos:column="35">-&gt;<pos:position pos:line="9" pos:column="40"/></operator><name pos:line="9" pos:column="37">out_buffer<pos:position pos:line="9" pos:column="47"/></name></name></expr></argument>)<pos:position pos:line="9" pos:column="48"/></argument_list></call></expr>;<pos:position pos:line="9" pos:column="49"/></expr_stmt>
    }<pos:position pos:line="10" pos:column="6"/></block></then></if>
    <expr_stmt><expr><call><name pos:line="11" pos:column="5">h2_beam_abort<pos:position pos:line="11" pos:column="18"/></name><argument_list pos:line="11" pos:column="18">(<argument><expr><name><name pos:line="11" pos:column="19">stream<pos:position pos:line="11" pos:column="25"/></name><operator pos:line="11" pos:column="25">-&gt;<pos:position pos:line="11" pos:column="30"/></operator><name pos:line="11" pos:column="27">input<pos:position pos:line="11" pos:column="32"/></name></name></expr></argument>)<pos:position pos:line="11" pos:column="33"/></argument_list></call></expr>;<pos:position pos:line="11" pos:column="34"/></expr_stmt>
    <expr_stmt><expr><name pos:line="12" pos:column="5">status<pos:position pos:line="12" pos:column="11"/></name> <operator pos:line="12" pos:column="12">=<pos:position pos:line="12" pos:column="13"/></operator> <call><name pos:line="12" pos:column="14">h2_beam_wait_empty<pos:position pos:line="12" pos:column="32"/></name><argument_list pos:line="12" pos:column="32">(<argument><expr><name><name pos:line="12" pos:column="33">stream<pos:position pos:line="12" pos:column="39"/></name><operator pos:line="12" pos:column="39">-&gt;<pos:position pos:line="12" pos:column="44"/></operator><name pos:line="12" pos:column="41">input<pos:position pos:line="12" pos:column="46"/></name></name></expr></argument>, <argument><expr><name pos:line="12" pos:column="48">APR_NONBLOCK_READ<pos:position pos:line="12" pos:column="65"/></name></expr></argument>)<pos:position pos:line="12" pos:column="66"/></argument_list></call></expr>;<pos:position pos:line="12" pos:column="67"/></expr_stmt>
    <if pos:line="13" pos:column="5">if <condition pos:line="13" pos:column="8">(<expr><name pos:line="13" pos:column="9">status<pos:position pos:line="13" pos:column="15"/></name> <operator pos:line="13" pos:column="16">==<pos:position pos:line="13" pos:column="18"/></operator> <name pos:line="13" pos:column="19">APR_EAGAIN<pos:position pos:line="13" pos:column="29"/></name></expr>)<pos:position pos:line="13" pos:column="30"/></condition><then pos:line="13" pos:column="30"> <block pos:line="13" pos:column="31">{
        <expr_stmt><expr><call><name pos:line="14" pos:column="9">ap_log_cerror<pos:position pos:line="14" pos:column="22"/></name><argument_list pos:line="14" pos:column="22">(<argument><expr><name pos:line="14" pos:column="23">APLOG_MARK<pos:position pos:line="14" pos:column="33"/></name></expr></argument>, <argument><expr><name pos:line="14" pos:column="35">APLOG_TRACE2<pos:position pos:line="14" pos:column="47"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="14" pos:column="49">0<pos:position pos:line="14" pos:column="50"/></literal></expr></argument>, <argument><expr><name><name pos:line="14" pos:column="52">stream<pos:position pos:line="14" pos:column="58"/></name><operator pos:line="14" pos:column="58">-&gt;<pos:position pos:line="14" pos:column="63"/></operator><name pos:line="14" pos:column="60">session<pos:position pos:line="14" pos:column="67"/></name><operator pos:line="14" pos:column="67">-&gt;<pos:position pos:line="14" pos:column="72"/></operator><name pos:line="14" pos:column="69">c<pos:position pos:line="14" pos:column="70"/></name></name></expr></argument>, 
                      <argument><expr><literal type="string" pos:line="15" pos:column="23">"h2_stream(%ld-%d): wait on input drain"<pos:position pos:line="15" pos:column="63"/></literal></expr></argument>, 
                      <argument><expr><name><name pos:line="16" pos:column="23">stream<pos:position pos:line="16" pos:column="29"/></name><operator pos:line="16" pos:column="29">-&gt;<pos:position pos:line="16" pos:column="34"/></operator><name pos:line="16" pos:column="31">session<pos:position pos:line="16" pos:column="38"/></name><operator pos:line="16" pos:column="38">-&gt;<pos:position pos:line="16" pos:column="43"/></operator><name pos:line="16" pos:column="40">id<pos:position pos:line="16" pos:column="42"/></name></name></expr></argument>, <argument><expr><name><name pos:line="16" pos:column="44">stream<pos:position pos:line="16" pos:column="50"/></name><operator pos:line="16" pos:column="50">-&gt;<pos:position pos:line="16" pos:column="55"/></operator><name pos:line="16" pos:column="52">id<pos:position pos:line="16" pos:column="54"/></name></name></expr></argument>)<pos:position pos:line="16" pos:column="55"/></argument_list></call></expr>;<pos:position pos:line="16" pos:column="56"/></expr_stmt>
        <expr_stmt><expr><name pos:line="17" pos:column="9">status<pos:position pos:line="17" pos:column="15"/></name> <operator pos:line="17" pos:column="16">=<pos:position pos:line="17" pos:column="17"/></operator> <call><name pos:line="17" pos:column="18">h2_beam_wait_empty<pos:position pos:line="17" pos:column="36"/></name><argument_list pos:line="17" pos:column="36">(<argument><expr><name><name pos:line="17" pos:column="37">stream<pos:position pos:line="17" pos:column="43"/></name><operator pos:line="17" pos:column="43">-&gt;<pos:position pos:line="17" pos:column="48"/></operator><name pos:line="17" pos:column="45">input<pos:position pos:line="17" pos:column="50"/></name></name></expr></argument>, <argument><expr><name pos:line="17" pos:column="52">APR_BLOCK_READ<pos:position pos:line="17" pos:column="66"/></name></expr></argument>)<pos:position pos:line="17" pos:column="67"/></argument_list></call></expr>;<pos:position pos:line="17" pos:column="68"/></expr_stmt>
        <expr_stmt><expr><call><name pos:line="18" pos:column="9">ap_log_cerror<pos:position pos:line="18" pos:column="22"/></name><argument_list pos:line="18" pos:column="22">(<argument><expr><name pos:line="18" pos:column="23">APLOG_MARK<pos:position pos:line="18" pos:column="33"/></name></expr></argument>, <argument><expr><name pos:line="18" pos:column="35">APLOG_TRACE2<pos:position pos:line="18" pos:column="47"/></name></expr></argument>, <argument><expr><name pos:line="18" pos:column="49">status<pos:position pos:line="18" pos:column="55"/></name></expr></argument>, <argument><expr><name><name pos:line="18" pos:column="57">stream<pos:position pos:line="18" pos:column="63"/></name><operator pos:line="18" pos:column="63">-&gt;<pos:position pos:line="18" pos:column="68"/></operator><name pos:line="18" pos:column="65">session<pos:position pos:line="18" pos:column="72"/></name><operator pos:line="18" pos:column="72">-&gt;<pos:position pos:line="18" pos:column="77"/></operator><name pos:line="18" pos:column="74">c<pos:position pos:line="18" pos:column="75"/></name></name></expr></argument>, 
                      <argument><expr><literal type="string" pos:line="19" pos:column="23">"h2_stream(%ld-%d): input drain returned"<pos:position pos:line="19" pos:column="64"/></literal></expr></argument>, 
                      <argument><expr><name><name pos:line="20" pos:column="23">stream<pos:position pos:line="20" pos:column="29"/></name><operator pos:line="20" pos:column="29">-&gt;<pos:position pos:line="20" pos:column="34"/></operator><name pos:line="20" pos:column="31">session<pos:position pos:line="20" pos:column="38"/></name><operator pos:line="20" pos:column="38">-&gt;<pos:position pos:line="20" pos:column="43"/></operator><name pos:line="20" pos:column="40">id<pos:position pos:line="20" pos:column="42"/></name></name></expr></argument>, <argument><expr><name><name pos:line="20" pos:column="44">stream<pos:position pos:line="20" pos:column="50"/></name><operator pos:line="20" pos:column="50">-&gt;<pos:position pos:line="20" pos:column="55"/></operator><name pos:line="20" pos:column="52">id<pos:position pos:line="20" pos:column="54"/></name></name></expr></argument>)<pos:position pos:line="20" pos:column="55"/></argument_list></call></expr>;<pos:position pos:line="20" pos:column="56"/></expr_stmt>
    }<pos:position pos:line="21" pos:column="6"/></block></then></if>
}<pos:position pos:line="22" pos:column="2"/></block></function></unit>

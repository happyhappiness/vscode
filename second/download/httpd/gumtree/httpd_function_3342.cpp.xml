<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/httpd/gumtree/httpd_function_3342.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">int<pos:position pos:line="1" pos:column="11"/></name></type> <name pos:line="1" pos:column="12">set_group_privs<pos:position pos:line="1" pos:column="27"/></name><parameter_list pos:line="1" pos:column="27">(<parameter><decl><type><name pos:line="1" pos:column="28">void<pos:position pos:line="1" pos:column="32"/></name></type></decl></parameter>)<pos:position pos:line="1" pos:column="33"/></parameter_list>
<block pos:line="2" pos:column="1">{
    <if pos:line="3" pos:column="5">if <condition pos:line="3" pos:column="8">(<expr><operator pos:line="3" pos:column="9">!<pos:position pos:line="3" pos:column="10"/></operator><call><name pos:line="3" pos:column="10">geteuid<pos:position pos:line="3" pos:column="17"/></name><argument_list pos:line="3" pos:column="17">()<pos:position pos:line="3" pos:column="19"/></argument_list></call></expr>)<pos:position pos:line="3" pos:column="20"/></condition><then pos:line="3" pos:column="20"> <block pos:line="3" pos:column="21">{
        <decl_stmt><decl><type><specifier pos:line="4" pos:column="9">const<pos:position pos:line="4" pos:column="14"/></specifier> <name pos:line="4" pos:column="15">char<pos:position pos:line="4" pos:column="19"/></name> <modifier pos:line="4" pos:column="20">*<pos:position pos:line="4" pos:column="21"/></modifier></type><name pos:line="4" pos:column="21">name<pos:position pos:line="4" pos:column="25"/></name></decl>;<pos:position pos:line="4" pos:column="26"/></decl_stmt>

        <comment type="block" pos:line="6" pos:column="9">/* Get username if passed as a uid */</comment>

        <if pos:line="8" pos:column="9">if <condition pos:line="8" pos:column="12">(<expr><name><name pos:line="8" pos:column="13">ap_unixd_config<pos:position pos:line="8" pos:column="28"/></name><operator pos:line="8" pos:column="28">.<pos:position pos:line="8" pos:column="29"/></operator><name pos:line="8" pos:column="29">user_name<pos:position pos:line="8" pos:column="38"/></name><index pos:line="8" pos:column="38">[<expr><literal type="number" pos:line="8" pos:column="39">0<pos:position pos:line="8" pos:column="40"/></literal></expr>]<pos:position pos:line="8" pos:column="41"/></index></name> <operator pos:line="8" pos:column="42">==<pos:position pos:line="8" pos:column="44"/></operator> <literal type="char" pos:line="8" pos:column="45">'#'<pos:position pos:line="8" pos:column="48"/></literal></expr>)<pos:position pos:line="8" pos:column="49"/></condition><then pos:line="8" pos:column="49"> <block pos:line="8" pos:column="50">{
            <decl_stmt><decl><type><name><name pos:line="9" pos:column="13">struct<pos:position pos:line="9" pos:column="19"/></name> <name pos:line="9" pos:column="20">passwd<pos:position pos:line="9" pos:column="26"/></name></name> <modifier pos:line="9" pos:column="27">*<pos:position pos:line="9" pos:column="28"/></modifier></type><name pos:line="9" pos:column="28">ent<pos:position pos:line="9" pos:column="31"/></name></decl>;<pos:position pos:line="9" pos:column="32"/></decl_stmt>
            <decl_stmt><decl><type><name pos:line="10" pos:column="13">uid_t<pos:position pos:line="10" pos:column="18"/></name></type> <name pos:line="10" pos:column="19">uid<pos:position pos:line="10" pos:column="22"/></name> <init pos:line="10" pos:column="23">= <expr><call><name pos:line="10" pos:column="25">atol<pos:position pos:line="10" pos:column="29"/></name><argument_list pos:line="10" pos:column="29">(<argument><expr><operator pos:line="10" pos:column="30">&amp;<pos:position pos:line="10" pos:column="35"/></operator><name><name pos:line="10" pos:column="31">ap_unixd_config<pos:position pos:line="10" pos:column="46"/></name><operator pos:line="10" pos:column="46">.<pos:position pos:line="10" pos:column="47"/></operator><name pos:line="10" pos:column="47">user_name<pos:position pos:line="10" pos:column="56"/></name><index pos:line="10" pos:column="56">[<expr><literal type="number" pos:line="10" pos:column="57">1<pos:position pos:line="10" pos:column="58"/></literal></expr>]<pos:position pos:line="10" pos:column="59"/></index></name></expr></argument>)<pos:position pos:line="10" pos:column="60"/></argument_list></call></expr></init></decl>;<pos:position pos:line="10" pos:column="61"/></decl_stmt>

            <if pos:line="12" pos:column="13">if <condition pos:line="12" pos:column="16">(<expr><operator pos:line="12" pos:column="17">(<pos:position pos:line="12" pos:column="18"/></operator><name pos:line="12" pos:column="18">ent<pos:position pos:line="12" pos:column="21"/></name> <operator pos:line="12" pos:column="22">=<pos:position pos:line="12" pos:column="23"/></operator> <call><name pos:line="12" pos:column="24">getpwuid<pos:position pos:line="12" pos:column="32"/></name><argument_list pos:line="12" pos:column="32">(<argument><expr><name pos:line="12" pos:column="33">uid<pos:position pos:line="12" pos:column="36"/></name></expr></argument>)<pos:position pos:line="12" pos:column="37"/></argument_list></call><operator pos:line="12" pos:column="37">)<pos:position pos:line="12" pos:column="38"/></operator> <operator pos:line="12" pos:column="39">==<pos:position pos:line="12" pos:column="41"/></operator> <name pos:line="12" pos:column="42">NULL<pos:position pos:line="12" pos:column="46"/></name></expr>)<pos:position pos:line="12" pos:column="47"/></condition><then pos:line="12" pos:column="47"> <block pos:line="12" pos:column="48">{
                <expr_stmt><expr><call><name pos:line="13" pos:column="17">ap_log_error<pos:position pos:line="13" pos:column="29"/></name><argument_list pos:line="13" pos:column="29">(<argument><expr><name pos:line="13" pos:column="30">APLOG_MARK<pos:position pos:line="13" pos:column="40"/></name></expr></argument>, <argument><expr><name pos:line="13" pos:column="42">APLOG_ALERT<pos:position pos:line="13" pos:column="53"/></name></expr></argument>, <argument><expr><name pos:line="13" pos:column="55">errno<pos:position pos:line="13" pos:column="60"/></name></expr></argument>, <argument><expr><name pos:line="13" pos:column="62">NULL<pos:position pos:line="13" pos:column="66"/></name></expr></argument>,
                         <argument><expr><literal type="string" pos:line="14" pos:column="26">"getpwuid: couldn't determine user name from uid %ld, "<pos:position pos:line="14" pos:column="81"/></literal>
                         <literal type="string" pos:line="15" pos:column="26">"you probably need to modify the User directive"<pos:position pos:line="15" pos:column="74"/></literal></expr></argument>,
                         <argument><expr><operator pos:line="16" pos:column="26">(<pos:position pos:line="16" pos:column="27"/></operator><name pos:line="16" pos:column="27">long<pos:position pos:line="16" pos:column="31"/></name><operator pos:line="16" pos:column="31">)<pos:position pos:line="16" pos:column="32"/></operator><name pos:line="16" pos:column="32">uid<pos:position pos:line="16" pos:column="35"/></name></expr></argument>)<pos:position pos:line="16" pos:column="36"/></argument_list></call></expr>;<pos:position pos:line="16" pos:column="37"/></expr_stmt>
                <return pos:line="17" pos:column="17">return <expr><operator pos:line="17" pos:column="24">-<pos:position pos:line="17" pos:column="25"/></operator><literal type="number" pos:line="17" pos:column="25">1<pos:position pos:line="17" pos:column="26"/></literal></expr>;<pos:position pos:line="17" pos:column="27"/></return>
            }<pos:position pos:line="18" pos:column="14"/></block></then></if>

            <expr_stmt><expr><name pos:line="20" pos:column="13">name<pos:position pos:line="20" pos:column="17"/></name> <operator pos:line="20" pos:column="18">=<pos:position pos:line="20" pos:column="19"/></operator> <name><name pos:line="20" pos:column="20">ent<pos:position pos:line="20" pos:column="23"/></name><operator pos:line="20" pos:column="23">-&gt;<pos:position pos:line="20" pos:column="28"/></operator><name pos:line="20" pos:column="25">pw_name<pos:position pos:line="20" pos:column="32"/></name></name></expr>;<pos:position pos:line="20" pos:column="33"/></expr_stmt>
        }<pos:position pos:line="21" pos:column="10"/></block></then>
        <else pos:line="22" pos:column="9">else
            <block type="pseudo"><expr_stmt><expr><name pos:line="23" pos:column="13">name<pos:position pos:line="23" pos:column="17"/></name> <operator pos:line="23" pos:column="18">=<pos:position pos:line="23" pos:column="19"/></operator> <name><name pos:line="23" pos:column="20">ap_unixd_config<pos:position pos:line="23" pos:column="35"/></name><operator pos:line="23" pos:column="35">.<pos:position pos:line="23" pos:column="36"/></operator><name pos:line="23" pos:column="36">user_name<pos:position pos:line="23" pos:column="45"/></name></name></expr>;<pos:position pos:line="23" pos:column="46"/></expr_stmt></block></else></if>

<cpp:if pos:line="25" pos:column="1">#<cpp:directive pos:line="25" pos:column="2">if<pos:position pos:line="25" pos:column="4"/></cpp:directive> <expr><operator pos:line="25" pos:column="5">!<pos:position pos:line="25" pos:column="6"/></operator><call><name pos:line="25" pos:column="6">defined<pos:position pos:line="25" pos:column="13"/></name><argument_list pos:line="25" pos:column="13">(<argument><expr><name pos:line="25" pos:column="14">OS2<pos:position pos:line="25" pos:column="17"/></name></expr></argument>)<pos:position pos:line="25" pos:column="18"/></argument_list></call></expr></cpp:if>
        <comment type="block" pos:line="26" pos:column="9">/* OS/2 doesn't support groups. */</comment>
        <comment type="block" pos:line="27" pos:column="9">/*
         * Set the GID before initgroups(), since on some platforms
         * setgid() is known to zap the group list.
         */</comment>
        <if pos:line="31" pos:column="9">if <condition pos:line="31" pos:column="12">(<expr><call><name pos:line="31" pos:column="13">setgid<pos:position pos:line="31" pos:column="19"/></name><argument_list pos:line="31" pos:column="19">(<argument><expr><name><name pos:line="31" pos:column="20">ap_unixd_config<pos:position pos:line="31" pos:column="35"/></name><operator pos:line="31" pos:column="35">.<pos:position pos:line="31" pos:column="36"/></operator><name pos:line="31" pos:column="36">group_id<pos:position pos:line="31" pos:column="44"/></name></name></expr></argument>)<pos:position pos:line="31" pos:column="45"/></argument_list></call> <operator pos:line="31" pos:column="46">==<pos:position pos:line="31" pos:column="48"/></operator> <operator pos:line="31" pos:column="49">-<pos:position pos:line="31" pos:column="50"/></operator><literal type="number" pos:line="31" pos:column="50">1<pos:position pos:line="31" pos:column="51"/></literal></expr>)<pos:position pos:line="31" pos:column="52"/></condition><then pos:line="31" pos:column="52"> <block pos:line="31" pos:column="53">{
            <expr_stmt><expr><call><name pos:line="32" pos:column="13">ap_log_error<pos:position pos:line="32" pos:column="25"/></name><argument_list pos:line="32" pos:column="25">(<argument><expr><name pos:line="32" pos:column="26">APLOG_MARK<pos:position pos:line="32" pos:column="36"/></name></expr></argument>, <argument><expr><name pos:line="32" pos:column="38">APLOG_ALERT<pos:position pos:line="32" pos:column="49"/></name></expr></argument>, <argument><expr><name pos:line="32" pos:column="51">errno<pos:position pos:line="32" pos:column="56"/></name></expr></argument>, <argument><expr><name pos:line="32" pos:column="58">NULL<pos:position pos:line="32" pos:column="62"/></name></expr></argument>,
                        <argument><expr><literal type="string" pos:line="33" pos:column="25">"setgid: unable to set group id to Group %ld"<pos:position pos:line="33" pos:column="70"/></literal></expr></argument>,
                        <argument><expr><operator pos:line="34" pos:column="25">(<pos:position pos:line="34" pos:column="26"/></operator><name pos:line="34" pos:column="26">long<pos:position pos:line="34" pos:column="30"/></name><operator pos:line="34" pos:column="30">)<pos:position pos:line="34" pos:column="31"/></operator><name><name pos:line="34" pos:column="31">ap_unixd_config<pos:position pos:line="34" pos:column="46"/></name><operator pos:line="34" pos:column="46">.<pos:position pos:line="34" pos:column="47"/></operator><name pos:line="34" pos:column="47">group_id<pos:position pos:line="34" pos:column="55"/></name></name></expr></argument>)<pos:position pos:line="34" pos:column="56"/></argument_list></call></expr>;<pos:position pos:line="34" pos:column="57"/></expr_stmt>
            <return pos:line="35" pos:column="13">return <expr><operator pos:line="35" pos:column="20">-<pos:position pos:line="35" pos:column="21"/></operator><literal type="number" pos:line="35" pos:column="21">1<pos:position pos:line="35" pos:column="22"/></literal></expr>;<pos:position pos:line="35" pos:column="23"/></return>
        }<pos:position pos:line="36" pos:column="10"/></block></then></if>

        <comment type="block" pos:line="38" pos:column="9">/* Reset `groups' attributes. */</comment>

        <if pos:line="40" pos:column="9">if <condition pos:line="40" pos:column="12">(<expr><call><name pos:line="40" pos:column="13">initgroups<pos:position pos:line="40" pos:column="23"/></name><argument_list pos:line="40" pos:column="23">(<argument><expr><name pos:line="40" pos:column="24">name<pos:position pos:line="40" pos:column="28"/></name></expr></argument>, <argument><expr><name><name pos:line="40" pos:column="30">ap_unixd_config<pos:position pos:line="40" pos:column="45"/></name><operator pos:line="40" pos:column="45">.<pos:position pos:line="40" pos:column="46"/></operator><name pos:line="40" pos:column="46">group_id<pos:position pos:line="40" pos:column="54"/></name></name></expr></argument>)<pos:position pos:line="40" pos:column="55"/></argument_list></call> <operator pos:line="40" pos:column="56">==<pos:position pos:line="40" pos:column="58"/></operator> <operator pos:line="40" pos:column="59">-<pos:position pos:line="40" pos:column="60"/></operator><literal type="number" pos:line="40" pos:column="60">1<pos:position pos:line="40" pos:column="61"/></literal></expr>)<pos:position pos:line="40" pos:column="62"/></condition><then pos:line="40" pos:column="62"> <block pos:line="40" pos:column="63">{
            <expr_stmt><expr><call><name pos:line="41" pos:column="13">ap_log_error<pos:position pos:line="41" pos:column="25"/></name><argument_list pos:line="41" pos:column="25">(<argument><expr><name pos:line="41" pos:column="26">APLOG_MARK<pos:position pos:line="41" pos:column="36"/></name></expr></argument>, <argument><expr><name pos:line="41" pos:column="38">APLOG_ALERT<pos:position pos:line="41" pos:column="49"/></name></expr></argument>, <argument><expr><name pos:line="41" pos:column="51">errno<pos:position pos:line="41" pos:column="56"/></name></expr></argument>, <argument><expr><name pos:line="41" pos:column="58">NULL<pos:position pos:line="41" pos:column="62"/></name></expr></argument>,
                        <argument><expr><literal type="string" pos:line="42" pos:column="25">"initgroups: unable to set groups for User %s "<pos:position pos:line="42" pos:column="72"/></literal>
                        <literal type="string" pos:line="43" pos:column="25">"and Group %ld"<pos:position pos:line="43" pos:column="40"/></literal></expr></argument>, <argument><expr><name pos:line="43" pos:column="42">name<pos:position pos:line="43" pos:column="46"/></name></expr></argument>, <argument><expr><operator pos:line="43" pos:column="48">(<pos:position pos:line="43" pos:column="49"/></operator><name pos:line="43" pos:column="49">long<pos:position pos:line="43" pos:column="53"/></name><operator pos:line="43" pos:column="53">)<pos:position pos:line="43" pos:column="54"/></operator><name><name pos:line="43" pos:column="54">ap_unixd_config<pos:position pos:line="43" pos:column="69"/></name><operator pos:line="43" pos:column="69">.<pos:position pos:line="43" pos:column="70"/></operator><name pos:line="43" pos:column="70">group_id<pos:position pos:line="43" pos:column="78"/></name></name></expr></argument>)<pos:position pos:line="43" pos:column="79"/></argument_list></call></expr>;<pos:position pos:line="43" pos:column="80"/></expr_stmt>
            <return pos:line="44" pos:column="13">return <expr><operator pos:line="44" pos:column="20">-<pos:position pos:line="44" pos:column="21"/></operator><literal type="number" pos:line="44" pos:column="21">1<pos:position pos:line="44" pos:column="22"/></literal></expr>;<pos:position pos:line="44" pos:column="23"/></return>
        }<pos:position pos:line="45" pos:column="10"/></block></then></if>
<cpp:endif pos:line="46" pos:column="1">#<cpp:directive pos:line="46" pos:column="2">endif<pos:position pos:line="46" pos:column="7"/></cpp:directive></cpp:endif> <comment type="block" pos:line="46" pos:column="8">/* !defined(OS2) */</comment>
    }<pos:position pos:line="47" pos:column="6"/></block></then></if>
    <return pos:line="48" pos:column="5">return <expr><literal type="number" pos:line="48" pos:column="12">0<pos:position pos:line="48" pos:column="13"/></literal></expr>;<pos:position pos:line="48" pos:column="14"/></return>
}<pos:position pos:line="49" pos:column="2"/></block></function></unit>

<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/httpd/gumtree/httpd_function_6385.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">apr_status_t<pos:position pos:line="1" pos:column="13"/></name></type> <name pos:line="1" pos:column="14">h2_mplx_process<pos:position pos:line="1" pos:column="29"/></name><parameter_list pos:line="1" pos:column="29">(<parameter><decl><type><name pos:line="1" pos:column="30">h2_mplx<pos:position pos:line="1" pos:column="37"/></name> <modifier pos:line="1" pos:column="38">*<pos:position pos:line="1" pos:column="39"/></modifier></type><name pos:line="1" pos:column="39">m<pos:position pos:line="1" pos:column="40"/></name></decl></parameter>, <parameter><decl><type><name pos:line="1" pos:column="42">int<pos:position pos:line="1" pos:column="45"/></name></type> <name pos:line="1" pos:column="46">stream_id<pos:position pos:line="1" pos:column="55"/></name></decl></parameter>, 
                             <parameter><decl><type><specifier pos:line="2" pos:column="30">const<pos:position pos:line="2" pos:column="35"/></specifier> <name pos:line="2" pos:column="36">h2_request<pos:position pos:line="2" pos:column="46"/></name> <modifier pos:line="2" pos:column="47">*<pos:position pos:line="2" pos:column="48"/></modifier></type><name pos:line="2" pos:column="48">req<pos:position pos:line="2" pos:column="51"/></name></decl></parameter>, 
                             <parameter><decl><type><name pos:line="3" pos:column="30">h2_stream_pri_cmp<pos:position pos:line="3" pos:column="47"/></name> <modifier pos:line="3" pos:column="48">*<pos:position pos:line="3" pos:column="49"/></modifier></type><name pos:line="3" pos:column="49">cmp<pos:position pos:line="3" pos:column="52"/></name></decl></parameter>, <parameter><decl><type><name pos:line="3" pos:column="54">void<pos:position pos:line="3" pos:column="58"/></name> <modifier pos:line="3" pos:column="59">*<pos:position pos:line="3" pos:column="60"/></modifier></type><name pos:line="3" pos:column="60">ctx<pos:position pos:line="3" pos:column="63"/></name></decl></parameter>)<pos:position pos:line="3" pos:column="64"/></parameter_list>
<block pos:line="4" pos:column="1">{
    <decl_stmt><decl><type><name pos:line="5" pos:column="5">apr_status_t<pos:position pos:line="5" pos:column="17"/></name></type> <name pos:line="5" pos:column="18">status<pos:position pos:line="5" pos:column="24"/></name></decl>;<pos:position pos:line="5" pos:column="25"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="6" pos:column="5">int<pos:position pos:line="6" pos:column="8"/></name></type> <name pos:line="6" pos:column="9">do_registration<pos:position pos:line="6" pos:column="24"/></name> <init pos:line="6" pos:column="25">= <expr><literal type="number" pos:line="6" pos:column="27">0<pos:position pos:line="6" pos:column="28"/></literal></expr></init></decl>;<pos:position pos:line="6" pos:column="29"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="7" pos:column="5">int<pos:position pos:line="7" pos:column="8"/></name></type> <name pos:line="7" pos:column="9">acquired<pos:position pos:line="7" pos:column="17"/></name></decl>;<pos:position pos:line="7" pos:column="18"/></decl_stmt>
    
    <expr_stmt><expr><call><name pos:line="9" pos:column="5">AP_DEBUG_ASSERT<pos:position pos:line="9" pos:column="20"/></name><argument_list pos:line="9" pos:column="20">(<argument><expr><name pos:line="9" pos:column="21">m<pos:position pos:line="9" pos:column="22"/></name></expr></argument>)<pos:position pos:line="9" pos:column="23"/></argument_list></call></expr>;<pos:position pos:line="9" pos:column="24"/></expr_stmt>
    <if pos:line="10" pos:column="5">if <condition pos:line="10" pos:column="8">(<expr><operator pos:line="10" pos:column="9">(<pos:position pos:line="10" pos:column="10"/></operator><name pos:line="10" pos:column="10">status<pos:position pos:line="10" pos:column="16"/></name> <operator pos:line="10" pos:column="17">=<pos:position pos:line="10" pos:column="18"/></operator> <call><name pos:line="10" pos:column="19">enter_mutex<pos:position pos:line="10" pos:column="30"/></name><argument_list pos:line="10" pos:column="30">(<argument><expr><name pos:line="10" pos:column="31">m<pos:position pos:line="10" pos:column="32"/></name></expr></argument>, <argument><expr><operator pos:line="10" pos:column="34">&amp;<pos:position pos:line="10" pos:column="39"/></operator><name pos:line="10" pos:column="35">acquired<pos:position pos:line="10" pos:column="43"/></name></expr></argument>)<pos:position pos:line="10" pos:column="44"/></argument_list></call><operator pos:line="10" pos:column="44">)<pos:position pos:line="10" pos:column="45"/></operator> <operator pos:line="10" pos:column="46">==<pos:position pos:line="10" pos:column="48"/></operator> <name pos:line="10" pos:column="49">APR_SUCCESS<pos:position pos:line="10" pos:column="60"/></name></expr>)<pos:position pos:line="10" pos:column="61"/></condition><then pos:line="10" pos:column="61"> <block pos:line="10" pos:column="62">{
        <if pos:line="11" pos:column="9">if <condition pos:line="11" pos:column="12">(<expr><name><name pos:line="11" pos:column="13">m<pos:position pos:line="11" pos:column="14"/></name><operator pos:line="11" pos:column="14">-&gt;<pos:position pos:line="11" pos:column="19"/></operator><name pos:line="11" pos:column="16">aborted<pos:position pos:line="11" pos:column="23"/></name></name></expr>)<pos:position pos:line="11" pos:column="24"/></condition><then pos:line="11" pos:column="24"> <block pos:line="11" pos:column="25">{
            <expr_stmt><expr><name pos:line="12" pos:column="13">status<pos:position pos:line="12" pos:column="19"/></name> <operator pos:line="12" pos:column="20">=<pos:position pos:line="12" pos:column="21"/></operator> <name pos:line="12" pos:column="22">APR_ECONNABORTED<pos:position pos:line="12" pos:column="38"/></name></expr>;<pos:position pos:line="12" pos:column="39"/></expr_stmt>
        }<pos:position pos:line="13" pos:column="10"/></block></then>
        <else pos:line="14" pos:column="9">else <block pos:line="14" pos:column="14">{
            <decl_stmt><decl><type><name pos:line="15" pos:column="13">h2_io<pos:position pos:line="15" pos:column="18"/></name> <modifier pos:line="15" pos:column="19">*<pos:position pos:line="15" pos:column="20"/></modifier></type><name pos:line="15" pos:column="20">io<pos:position pos:line="15" pos:column="22"/></name> <init pos:line="15" pos:column="23">= <expr><call><name pos:line="15" pos:column="25">open_io<pos:position pos:line="15" pos:column="32"/></name><argument_list pos:line="15" pos:column="32">(<argument><expr><name pos:line="15" pos:column="33">m<pos:position pos:line="15" pos:column="34"/></name></expr></argument>, <argument><expr><name pos:line="15" pos:column="36">stream_id<pos:position pos:line="15" pos:column="45"/></name></expr></argument>, <argument><expr><name pos:line="15" pos:column="47">req<pos:position pos:line="15" pos:column="50"/></name></expr></argument>)<pos:position pos:line="15" pos:column="51"/></argument_list></call></expr></init></decl>;<pos:position pos:line="15" pos:column="52"/></decl_stmt>
            
            <if pos:line="17" pos:column="13">if <condition pos:line="17" pos:column="16">(<expr><operator pos:line="17" pos:column="17">!<pos:position pos:line="17" pos:column="18"/></operator><name><name pos:line="17" pos:column="18">io<pos:position pos:line="17" pos:column="20"/></name><operator pos:line="17" pos:column="20">-&gt;<pos:position pos:line="17" pos:column="25"/></operator><name pos:line="17" pos:column="22">request<pos:position pos:line="17" pos:column="29"/></name><operator pos:line="17" pos:column="29">-&gt;<pos:position pos:line="17" pos:column="34"/></operator><name pos:line="17" pos:column="31">body<pos:position pos:line="17" pos:column="35"/></name></name></expr>)<pos:position pos:line="17" pos:column="36"/></condition><then pos:line="17" pos:column="36"> <block pos:line="17" pos:column="37">{
                <expr_stmt><expr><name pos:line="18" pos:column="17">status<pos:position pos:line="18" pos:column="23"/></name> <operator pos:line="18" pos:column="24">=<pos:position pos:line="18" pos:column="25"/></operator> <call><name pos:line="18" pos:column="26">h2_io_in_close<pos:position pos:line="18" pos:column="40"/></name><argument_list pos:line="18" pos:column="40">(<argument><expr><name pos:line="18" pos:column="41">io<pos:position pos:line="18" pos:column="43"/></name></expr></argument>)<pos:position pos:line="18" pos:column="44"/></argument_list></call></expr>;<pos:position pos:line="18" pos:column="45"/></expr_stmt>
            }<pos:position pos:line="19" pos:column="14"/></block></then></if>
            
            <expr_stmt><expr><name><name pos:line="21" pos:column="13">m<pos:position pos:line="21" pos:column="14"/></name><operator pos:line="21" pos:column="14">-&gt;<pos:position pos:line="21" pos:column="19"/></operator><name pos:line="21" pos:column="16">need_registration<pos:position pos:line="21" pos:column="33"/></name></name> <operator pos:line="21" pos:column="34">=<pos:position pos:line="21" pos:column="35"/></operator> <name><name pos:line="21" pos:column="36">m<pos:position pos:line="21" pos:column="37"/></name><operator pos:line="21" pos:column="37">-&gt;<pos:position pos:line="21" pos:column="42"/></operator><name pos:line="21" pos:column="39">need_registration<pos:position pos:line="21" pos:column="56"/></name></name> <operator pos:line="21" pos:column="57">||<pos:position pos:line="21" pos:column="59"/></operator> <call><name pos:line="21" pos:column="60">h2_iq_empty<pos:position pos:line="21" pos:column="71"/></name><argument_list pos:line="21" pos:column="71">(<argument><expr><name><name pos:line="21" pos:column="72">m<pos:position pos:line="21" pos:column="73"/></name><operator pos:line="21" pos:column="73">-&gt;<pos:position pos:line="21" pos:column="78"/></operator><name pos:line="21" pos:column="75">q<pos:position pos:line="21" pos:column="76"/></name></name></expr></argument>)<pos:position pos:line="21" pos:column="77"/></argument_list></call></expr>;<pos:position pos:line="21" pos:column="78"/></expr_stmt>
            <expr_stmt><expr><name pos:line="22" pos:column="13">do_registration<pos:position pos:line="22" pos:column="28"/></name> <operator pos:line="22" pos:column="29">=<pos:position pos:line="22" pos:column="30"/></operator> <operator pos:line="22" pos:column="31">(<pos:position pos:line="22" pos:column="32"/></operator><name><name pos:line="22" pos:column="32">m<pos:position pos:line="22" pos:column="33"/></name><operator pos:line="22" pos:column="33">-&gt;<pos:position pos:line="22" pos:column="38"/></operator><name pos:line="22" pos:column="35">need_registration<pos:position pos:line="22" pos:column="52"/></name></name> <operator pos:line="22" pos:column="53">&amp;&amp;<pos:position pos:line="22" pos:column="63"/></operator> <name><name pos:line="22" pos:column="56">m<pos:position pos:line="22" pos:column="57"/></name><operator pos:line="22" pos:column="57">-&gt;<pos:position pos:line="22" pos:column="62"/></operator><name pos:line="22" pos:column="59">workers_busy<pos:position pos:line="22" pos:column="71"/></name></name> <operator pos:line="22" pos:column="72">&lt;<pos:position pos:line="22" pos:column="76"/></operator> <name><name pos:line="22" pos:column="74">m<pos:position pos:line="22" pos:column="75"/></name><operator pos:line="22" pos:column="75">-&gt;<pos:position pos:line="22" pos:column="80"/></operator><name pos:line="22" pos:column="77">workers_max<pos:position pos:line="22" pos:column="88"/></name></name><operator pos:line="22" pos:column="88">)<pos:position pos:line="22" pos:column="89"/></operator></expr>;<pos:position pos:line="22" pos:column="90"/></expr_stmt>
            <expr_stmt><expr><call><name pos:line="23" pos:column="13">h2_iq_add<pos:position pos:line="23" pos:column="22"/></name><argument_list pos:line="23" pos:column="22">(<argument><expr><name><name pos:line="23" pos:column="23">m<pos:position pos:line="23" pos:column="24"/></name><operator pos:line="23" pos:column="24">-&gt;<pos:position pos:line="23" pos:column="29"/></operator><name pos:line="23" pos:column="26">q<pos:position pos:line="23" pos:column="27"/></name></name></expr></argument>, <argument><expr><name><name pos:line="23" pos:column="29">io<pos:position pos:line="23" pos:column="31"/></name><operator pos:line="23" pos:column="31">-&gt;<pos:position pos:line="23" pos:column="36"/></operator><name pos:line="23" pos:column="33">id<pos:position pos:line="23" pos:column="35"/></name></name></expr></argument>, <argument><expr><name pos:line="23" pos:column="37">cmp<pos:position pos:line="23" pos:column="40"/></name></expr></argument>, <argument><expr><name pos:line="23" pos:column="42">ctx<pos:position pos:line="23" pos:column="45"/></name></expr></argument>)<pos:position pos:line="23" pos:column="46"/></argument_list></call></expr>;<pos:position pos:line="23" pos:column="47"/></expr_stmt>
            
            <expr_stmt><expr><call><name pos:line="25" pos:column="13">ap_log_cerror<pos:position pos:line="25" pos:column="26"/></name><argument_list pos:line="25" pos:column="26">(<argument><expr><name pos:line="25" pos:column="27">APLOG_MARK<pos:position pos:line="25" pos:column="37"/></name></expr></argument>, <argument><expr><name pos:line="25" pos:column="39">APLOG_TRACE1<pos:position pos:line="25" pos:column="51"/></name></expr></argument>, <argument><expr><name pos:line="25" pos:column="53">status<pos:position pos:line="25" pos:column="59"/></name></expr></argument>, <argument><expr><name><name pos:line="25" pos:column="61">m<pos:position pos:line="25" pos:column="62"/></name><operator pos:line="25" pos:column="62">-&gt;<pos:position pos:line="25" pos:column="67"/></operator><name pos:line="25" pos:column="64">c<pos:position pos:line="25" pos:column="65"/></name></name></expr></argument>,
                          <argument><expr><literal type="string" pos:line="26" pos:column="27">"h2_mplx(%ld-%d): process"<pos:position pos:line="26" pos:column="53"/></literal></expr></argument>, <argument><expr><name><name pos:line="26" pos:column="55">m<pos:position pos:line="26" pos:column="56"/></name><operator pos:line="26" pos:column="56">-&gt;<pos:position pos:line="26" pos:column="61"/></operator><name pos:line="26" pos:column="58">c<pos:position pos:line="26" pos:column="59"/></name><operator pos:line="26" pos:column="59">-&gt;<pos:position pos:line="26" pos:column="64"/></operator><name pos:line="26" pos:column="61">id<pos:position pos:line="26" pos:column="63"/></name></name></expr></argument>, <argument><expr><name pos:line="26" pos:column="65">stream_id<pos:position pos:line="26" pos:column="74"/></name></expr></argument>)<pos:position pos:line="26" pos:column="75"/></argument_list></call></expr>;<pos:position pos:line="26" pos:column="76"/></expr_stmt>
            <expr_stmt><expr><call><name pos:line="27" pos:column="13">H2_MPLX_IO_IN<pos:position pos:line="27" pos:column="26"/></name><argument_list pos:line="27" pos:column="26">(<argument><expr><name pos:line="27" pos:column="27">APLOG_TRACE2<pos:position pos:line="27" pos:column="39"/></name></expr></argument>, <argument><expr><name pos:line="27" pos:column="41">m<pos:position pos:line="27" pos:column="42"/></name></expr></argument>, <argument><expr><name pos:line="27" pos:column="44">io<pos:position pos:line="27" pos:column="46"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="27" pos:column="48">"h2_mplx_process"<pos:position pos:line="27" pos:column="65"/></literal></expr></argument>)<pos:position pos:line="27" pos:column="66"/></argument_list></call></expr>;<pos:position pos:line="27" pos:column="67"/></expr_stmt>
        }<pos:position pos:line="28" pos:column="10"/></block></else></if>
        <expr_stmt><expr><call><name pos:line="29" pos:column="9">leave_mutex<pos:position pos:line="29" pos:column="20"/></name><argument_list pos:line="29" pos:column="20">(<argument><expr><name pos:line="29" pos:column="21">m<pos:position pos:line="29" pos:column="22"/></name></expr></argument>, <argument><expr><name pos:line="29" pos:column="24">acquired<pos:position pos:line="29" pos:column="32"/></name></expr></argument>)<pos:position pos:line="29" pos:column="33"/></argument_list></call></expr>;<pos:position pos:line="29" pos:column="34"/></expr_stmt>
    }<pos:position pos:line="30" pos:column="6"/></block></then></if>
    <if pos:line="31" pos:column="5">if <condition pos:line="31" pos:column="8">(<expr><name pos:line="31" pos:column="9">status<pos:position pos:line="31" pos:column="15"/></name> <operator pos:line="31" pos:column="16">==<pos:position pos:line="31" pos:column="18"/></operator> <name pos:line="31" pos:column="19">APR_SUCCESS<pos:position pos:line="31" pos:column="30"/></name> <operator pos:line="31" pos:column="31">&amp;&amp;<pos:position pos:line="31" pos:column="41"/></operator> <name pos:line="31" pos:column="34">do_registration<pos:position pos:line="31" pos:column="49"/></name></expr>)<pos:position pos:line="31" pos:column="50"/></condition><then pos:line="31" pos:column="50"> <block pos:line="31" pos:column="51">{
        <expr_stmt><expr><call><name pos:line="32" pos:column="9">workers_register<pos:position pos:line="32" pos:column="25"/></name><argument_list pos:line="32" pos:column="25">(<argument><expr><name pos:line="32" pos:column="26">m<pos:position pos:line="32" pos:column="27"/></name></expr></argument>)<pos:position pos:line="32" pos:column="28"/></argument_list></call></expr>;<pos:position pos:line="32" pos:column="29"/></expr_stmt>
    }<pos:position pos:line="33" pos:column="6"/></block></then></if>
    <return pos:line="34" pos:column="5">return <expr><name pos:line="34" pos:column="12">status<pos:position pos:line="34" pos:column="18"/></name></expr>;<pos:position pos:line="34" pos:column="19"/></return>
}<pos:position pos:line="35" pos:column="2"/></block></function></unit>

<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/httpd/gumtree/httpd_function_6010.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">apr_status_t<pos:position pos:line="1" pos:column="13"/></name></type> <name pos:line="1" pos:column="14">h2_mplx_release_and_join<pos:position pos:line="1" pos:column="38"/></name><parameter_list pos:line="1" pos:column="38">(<parameter><decl><type><name pos:line="1" pos:column="39">h2_mplx<pos:position pos:line="1" pos:column="46"/></name> <modifier pos:line="1" pos:column="47">*<pos:position pos:line="1" pos:column="48"/></modifier></type><name pos:line="1" pos:column="48">m<pos:position pos:line="1" pos:column="49"/></name></decl></parameter>, <parameter><decl><type><name pos:line="1" pos:column="51">apr_thread_cond_t<pos:position pos:line="1" pos:column="68"/></name> <modifier pos:line="1" pos:column="69">*<pos:position pos:line="1" pos:column="70"/></modifier></type><name pos:line="1" pos:column="70">wait<pos:position pos:line="1" pos:column="74"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="75"/></parameter_list>
<block pos:line="2" pos:column="1">{
    <decl_stmt><decl><type><name pos:line="3" pos:column="5">apr_status_t<pos:position pos:line="3" pos:column="17"/></name></type> <name pos:line="3" pos:column="18">status<pos:position pos:line="3" pos:column="24"/></name></decl>;<pos:position pos:line="3" pos:column="25"/></decl_stmt>
    
    <expr_stmt><expr><call><name pos:line="5" pos:column="5">workers_unregister<pos:position pos:line="5" pos:column="23"/></name><argument_list pos:line="5" pos:column="23">(<argument><expr><name pos:line="5" pos:column="24">m<pos:position pos:line="5" pos:column="25"/></name></expr></argument>)<pos:position pos:line="5" pos:column="26"/></argument_list></call></expr>;<pos:position pos:line="5" pos:column="27"/></expr_stmt>
    <expr_stmt><expr><name pos:line="6" pos:column="5">status<pos:position pos:line="6" pos:column="11"/></name> <operator pos:line="6" pos:column="12">=<pos:position pos:line="6" pos:column="13"/></operator> <call><name pos:line="6" pos:column="14">apr_thread_mutex_lock<pos:position pos:line="6" pos:column="35"/></name><argument_list pos:line="6" pos:column="35">(<argument><expr><name><name pos:line="6" pos:column="36">m<pos:position pos:line="6" pos:column="37"/></name><operator pos:line="6" pos:column="37">-&gt;<pos:position pos:line="6" pos:column="42"/></operator><name pos:line="6" pos:column="39">lock<pos:position pos:line="6" pos:column="43"/></name></name></expr></argument>)<pos:position pos:line="6" pos:column="44"/></argument_list></call></expr>;<pos:position pos:line="6" pos:column="45"/></expr_stmt>
    <if pos:line="7" pos:column="5">if <condition pos:line="7" pos:column="8">(<expr><name pos:line="7" pos:column="9">APR_SUCCESS<pos:position pos:line="7" pos:column="20"/></name> <operator pos:line="7" pos:column="21">==<pos:position pos:line="7" pos:column="23"/></operator> <name pos:line="7" pos:column="24">status<pos:position pos:line="7" pos:column="30"/></name></expr>)<pos:position pos:line="7" pos:column="31"/></condition><then pos:line="7" pos:column="31"> <block pos:line="7" pos:column="32">{
        <while pos:line="8" pos:column="9">while <condition pos:line="8" pos:column="15">(<expr><operator pos:line="8" pos:column="16">!<pos:position pos:line="8" pos:column="17"/></operator><call><name pos:line="8" pos:column="17">h2_io_set_iter<pos:position pos:line="8" pos:column="31"/></name><argument_list pos:line="8" pos:column="31">(<argument><expr><name><name pos:line="8" pos:column="32">m<pos:position pos:line="8" pos:column="33"/></name><operator pos:line="8" pos:column="33">-&gt;<pos:position pos:line="8" pos:column="38"/></operator><name pos:line="8" pos:column="35">stream_ios<pos:position pos:line="8" pos:column="45"/></name></name></expr></argument>, <argument><expr><name pos:line="8" pos:column="47">stream_done_iter<pos:position pos:line="8" pos:column="63"/></name></expr></argument>, <argument><expr><name pos:line="8" pos:column="65">m<pos:position pos:line="8" pos:column="66"/></name></expr></argument>)<pos:position pos:line="8" pos:column="67"/></argument_list></call></expr>)<pos:position pos:line="8" pos:column="68"/></condition> <block pos:line="8" pos:column="69">{
            <comment type="block" pos:line="9" pos:column="13">/* iterator until all h2_io have been orphaned or destroyed */</comment>
        }<pos:position pos:line="10" pos:column="10"/></block></while>
    
        <expr_stmt><expr><call><name pos:line="12" pos:column="9">release<pos:position pos:line="12" pos:column="16"/></name><argument_list pos:line="12" pos:column="16">(<argument><expr><name pos:line="12" pos:column="17">m<pos:position pos:line="12" pos:column="18"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="12" pos:column="20">0<pos:position pos:line="12" pos:column="21"/></literal></expr></argument>)<pos:position pos:line="12" pos:column="22"/></argument_list></call></expr>;<pos:position pos:line="12" pos:column="23"/></expr_stmt>
        <while pos:line="13" pos:column="9">while <condition pos:line="13" pos:column="15">(<expr><name><name pos:line="13" pos:column="16">m<pos:position pos:line="13" pos:column="17"/></name><operator pos:line="13" pos:column="17">-&gt;<pos:position pos:line="13" pos:column="22"/></operator><name pos:line="13" pos:column="19">refs<pos:position pos:line="13" pos:column="23"/></name></name> <operator pos:line="13" pos:column="24">&gt;<pos:position pos:line="13" pos:column="28"/></operator> <literal type="number" pos:line="13" pos:column="26">0<pos:position pos:line="13" pos:column="27"/></literal></expr>)<pos:position pos:line="13" pos:column="28"/></condition> <block pos:line="13" pos:column="29">{
            <expr_stmt><expr><name><name pos:line="14" pos:column="13">m<pos:position pos:line="14" pos:column="14"/></name><operator pos:line="14" pos:column="14">-&gt;<pos:position pos:line="14" pos:column="19"/></operator><name pos:line="14" pos:column="16">join_wait<pos:position pos:line="14" pos:column="25"/></name></name> <operator pos:line="14" pos:column="26">=<pos:position pos:line="14" pos:column="27"/></operator> <name pos:line="14" pos:column="28">wait<pos:position pos:line="14" pos:column="32"/></name></expr>;<pos:position pos:line="14" pos:column="33"/></expr_stmt>
            <expr_stmt><expr><call><name pos:line="15" pos:column="13">ap_log_cerror<pos:position pos:line="15" pos:column="26"/></name><argument_list pos:line="15" pos:column="26">(<argument><expr><name pos:line="15" pos:column="27">APLOG_MARK<pos:position pos:line="15" pos:column="37"/></name></expr></argument>, <argument><expr><name pos:line="15" pos:column="39">APLOG_DEBUG<pos:position pos:line="15" pos:column="50"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="15" pos:column="52">0<pos:position pos:line="15" pos:column="53"/></literal></expr></argument>, <argument><expr><name><name pos:line="15" pos:column="55">m<pos:position pos:line="15" pos:column="56"/></name><operator pos:line="15" pos:column="56">-&gt;<pos:position pos:line="15" pos:column="61"/></operator><name pos:line="15" pos:column="58">c<pos:position pos:line="15" pos:column="59"/></name></name></expr></argument>,
                          <argument><expr><literal type="string" pos:line="16" pos:column="27">"h2_mplx(%ld): release_join, refs=%d, waiting..."<pos:position pos:line="16" pos:column="76"/></literal></expr></argument>, 
                          <argument><expr><name><name pos:line="17" pos:column="27">m<pos:position pos:line="17" pos:column="28"/></name><operator pos:line="17" pos:column="28">-&gt;<pos:position pos:line="17" pos:column="33"/></operator><name pos:line="17" pos:column="30">id<pos:position pos:line="17" pos:column="32"/></name></name></expr></argument>, <argument><expr><name><name pos:line="17" pos:column="34">m<pos:position pos:line="17" pos:column="35"/></name><operator pos:line="17" pos:column="35">-&gt;<pos:position pos:line="17" pos:column="40"/></operator><name pos:line="17" pos:column="37">refs<pos:position pos:line="17" pos:column="41"/></name></name></expr></argument>)<pos:position pos:line="17" pos:column="42"/></argument_list></call></expr>;<pos:position pos:line="17" pos:column="43"/></expr_stmt>
            <expr_stmt><expr><call><name pos:line="18" pos:column="13">apr_thread_cond_wait<pos:position pos:line="18" pos:column="33"/></name><argument_list pos:line="18" pos:column="33">(<argument><expr><name pos:line="18" pos:column="34">wait<pos:position pos:line="18" pos:column="38"/></name></expr></argument>, <argument><expr><name><name pos:line="18" pos:column="40">m<pos:position pos:line="18" pos:column="41"/></name><operator pos:line="18" pos:column="41">-&gt;<pos:position pos:line="18" pos:column="46"/></operator><name pos:line="18" pos:column="43">lock<pos:position pos:line="18" pos:column="47"/></name></name></expr></argument>)<pos:position pos:line="18" pos:column="48"/></argument_list></call></expr>;<pos:position pos:line="18" pos:column="49"/></expr_stmt>
        }<pos:position pos:line="19" pos:column="10"/></block></while>
        <expr_stmt><expr><call><name pos:line="20" pos:column="9">ap_log_cerror<pos:position pos:line="20" pos:column="22"/></name><argument_list pos:line="20" pos:column="22">(<argument><expr><name pos:line="20" pos:column="23">APLOG_MARK<pos:position pos:line="20" pos:column="33"/></name></expr></argument>, <argument><expr><name pos:line="20" pos:column="35">APLOG_DEBUG<pos:position pos:line="20" pos:column="46"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="20" pos:column="48">0<pos:position pos:line="20" pos:column="49"/></literal></expr></argument>, <argument><expr><name><name pos:line="20" pos:column="51">m<pos:position pos:line="20" pos:column="52"/></name><operator pos:line="20" pos:column="52">-&gt;<pos:position pos:line="20" pos:column="57"/></operator><name pos:line="20" pos:column="54">c<pos:position pos:line="20" pos:column="55"/></name></name></expr></argument>,
                      <argument><expr><literal type="string" pos:line="21" pos:column="23">"h2_mplx(%ld): release_join -&gt; destroy, (#ios=%ld)"<pos:position pos:line="21" pos:column="77"/></literal></expr></argument>, 
                      <argument><expr><name><name pos:line="22" pos:column="23">m<pos:position pos:line="22" pos:column="24"/></name><operator pos:line="22" pos:column="24">-&gt;<pos:position pos:line="22" pos:column="29"/></operator><name pos:line="22" pos:column="26">id<pos:position pos:line="22" pos:column="28"/></name></name></expr></argument>, <argument><expr><operator pos:line="22" pos:column="30">(<pos:position pos:line="22" pos:column="31"/></operator><name pos:line="22" pos:column="31">long<pos:position pos:line="22" pos:column="35"/></name><operator pos:line="22" pos:column="35">)<pos:position pos:line="22" pos:column="36"/></operator><call><name pos:line="22" pos:column="36">h2_io_set_size<pos:position pos:line="22" pos:column="50"/></name><argument_list pos:line="22" pos:column="50">(<argument><expr><name><name pos:line="22" pos:column="51">m<pos:position pos:line="22" pos:column="52"/></name><operator pos:line="22" pos:column="52">-&gt;<pos:position pos:line="22" pos:column="57"/></operator><name pos:line="22" pos:column="54">stream_ios<pos:position pos:line="22" pos:column="64"/></name></name></expr></argument>)<pos:position pos:line="22" pos:column="65"/></argument_list></call></expr></argument>)<pos:position pos:line="22" pos:column="66"/></argument_list></call></expr>;<pos:position pos:line="22" pos:column="67"/></expr_stmt>
        <expr_stmt><expr><call><name pos:line="23" pos:column="9">h2_mplx_destroy<pos:position pos:line="23" pos:column="24"/></name><argument_list pos:line="23" pos:column="24">(<argument><expr><name pos:line="23" pos:column="25">m<pos:position pos:line="23" pos:column="26"/></name></expr></argument>)<pos:position pos:line="23" pos:column="27"/></argument_list></call></expr>;<pos:position pos:line="23" pos:column="28"/></expr_stmt>
        <comment type="block" pos:line="24" pos:column="9">/* all gone */</comment>
        <comment type="block" pos:line="25" pos:column="9">/*apr_thread_mutex_unlock(m-&gt;lock);*/</comment>
    }<pos:position pos:line="26" pos:column="6"/></block></then></if>
    <return pos:line="27" pos:column="5">return <expr><name pos:line="27" pos:column="12">status<pos:position pos:line="27" pos:column="18"/></name></expr>;<pos:position pos:line="27" pos:column="19"/></return>
}<pos:position pos:line="28" pos:column="2"/></block></function></unit>

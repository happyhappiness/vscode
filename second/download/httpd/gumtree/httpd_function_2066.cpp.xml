<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/httpd/gumtree/httpd_function_2066.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">long<pos:position pos:line="1" pos:column="5"/></name></type> <name pos:line="1" pos:column="6">ssl_io_data_cb<pos:position pos:line="1" pos:column="20"/></name><parameter_list pos:line="1" pos:column="20">(<parameter><decl><type><name pos:line="1" pos:column="21">BIO<pos:position pos:line="1" pos:column="24"/></name> <modifier pos:line="1" pos:column="25">*<pos:position pos:line="1" pos:column="26"/></modifier></type><name pos:line="1" pos:column="26">bio<pos:position pos:line="1" pos:column="29"/></name></decl></parameter>, <parameter><decl><type><name pos:line="1" pos:column="31">int<pos:position pos:line="1" pos:column="34"/></name></type> <name pos:line="1" pos:column="35">cmd<pos:position pos:line="1" pos:column="38"/></name></decl></parameter>,
                    <parameter><decl><type><name pos:line="2" pos:column="21">MODSSL_BIO_CB_ARG_TYPE<pos:position pos:line="2" pos:column="43"/></name> <modifier pos:line="2" pos:column="44">*<pos:position pos:line="2" pos:column="45"/></modifier></type><name pos:line="2" pos:column="45">argp<pos:position pos:line="2" pos:column="49"/></name></decl></parameter>,
                    <parameter><decl><type><name pos:line="3" pos:column="21">int<pos:position pos:line="3" pos:column="24"/></name></type> <name pos:line="3" pos:column="25">argi<pos:position pos:line="3" pos:column="29"/></name></decl></parameter>, <parameter><decl><type><name pos:line="3" pos:column="31">long<pos:position pos:line="3" pos:column="35"/></name></type> <name pos:line="3" pos:column="36">argl<pos:position pos:line="3" pos:column="40"/></name></decl></parameter>, <parameter><decl><type><name pos:line="3" pos:column="42">long<pos:position pos:line="3" pos:column="46"/></name></type> <name pos:line="3" pos:column="47">rc<pos:position pos:line="3" pos:column="49"/></name></decl></parameter>)<pos:position pos:line="3" pos:column="50"/></parameter_list>
<block pos:line="4" pos:column="1">{
    <decl_stmt><decl><type><name pos:line="5" pos:column="5">SSL<pos:position pos:line="5" pos:column="8"/></name> <modifier pos:line="5" pos:column="9">*<pos:position pos:line="5" pos:column="10"/></modifier></type><name pos:line="5" pos:column="10">ssl<pos:position pos:line="5" pos:column="13"/></name></decl>;<pos:position pos:line="5" pos:column="14"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="6" pos:column="5">conn_rec<pos:position pos:line="6" pos:column="13"/></name> <modifier pos:line="6" pos:column="14">*<pos:position pos:line="6" pos:column="15"/></modifier></type><name pos:line="6" pos:column="15">c<pos:position pos:line="6" pos:column="16"/></name></decl>;<pos:position pos:line="6" pos:column="17"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="7" pos:column="5">server_rec<pos:position pos:line="7" pos:column="15"/></name> <modifier pos:line="7" pos:column="16">*<pos:position pos:line="7" pos:column="17"/></modifier></type><name pos:line="7" pos:column="17">s<pos:position pos:line="7" pos:column="18"/></name></decl>;<pos:position pos:line="7" pos:column="19"/></decl_stmt>

    <if pos:line="9" pos:column="5">if <condition pos:line="9" pos:column="8">(<expr><operator pos:line="9" pos:column="9">(<pos:position pos:line="9" pos:column="10"/></operator><name pos:line="9" pos:column="10">ssl<pos:position pos:line="9" pos:column="13"/></name> <operator pos:line="9" pos:column="14">=<pos:position pos:line="9" pos:column="15"/></operator> <operator pos:line="9" pos:column="16">(<pos:position pos:line="9" pos:column="17"/></operator><name pos:line="9" pos:column="17">SSL<pos:position pos:line="9" pos:column="20"/></name> <operator pos:line="9" pos:column="21">*<pos:position pos:line="9" pos:column="22"/></operator><operator pos:line="9" pos:column="22">)<pos:position pos:line="9" pos:column="23"/></operator><call><name pos:line="9" pos:column="23">BIO_get_callback_arg<pos:position pos:line="9" pos:column="43"/></name><argument_list pos:line="9" pos:column="43">(<argument><expr><name pos:line="9" pos:column="44">bio<pos:position pos:line="9" pos:column="47"/></name></expr></argument>)<pos:position pos:line="9" pos:column="48"/></argument_list></call><operator pos:line="9" pos:column="48">)<pos:position pos:line="9" pos:column="49"/></operator> <operator pos:line="9" pos:column="50">==<pos:position pos:line="9" pos:column="52"/></operator> <name pos:line="9" pos:column="53">NULL<pos:position pos:line="9" pos:column="57"/></name></expr>)<pos:position pos:line="9" pos:column="58"/></condition><then pos:line="9" pos:column="58">
        <block type="pseudo"><return pos:line="10" pos:column="9">return <expr><name pos:line="10" pos:column="16">rc<pos:position pos:line="10" pos:column="18"/></name></expr>;<pos:position pos:line="10" pos:column="19"/></return></block></then></if>
    <if pos:line="11" pos:column="5">if <condition pos:line="11" pos:column="8">(<expr><operator pos:line="11" pos:column="9">(<pos:position pos:line="11" pos:column="10"/></operator><name pos:line="11" pos:column="10">c<pos:position pos:line="11" pos:column="11"/></name> <operator pos:line="11" pos:column="12">=<pos:position pos:line="11" pos:column="13"/></operator> <operator pos:line="11" pos:column="14">(<pos:position pos:line="11" pos:column="15"/></operator><name pos:line="11" pos:column="15">conn_rec<pos:position pos:line="11" pos:column="23"/></name> <operator pos:line="11" pos:column="24">*<pos:position pos:line="11" pos:column="25"/></operator><operator pos:line="11" pos:column="25">)<pos:position pos:line="11" pos:column="26"/></operator><call><name pos:line="11" pos:column="26">SSL_get_app_data<pos:position pos:line="11" pos:column="42"/></name><argument_list pos:line="11" pos:column="42">(<argument><expr><name pos:line="11" pos:column="43">ssl<pos:position pos:line="11" pos:column="46"/></name></expr></argument>)<pos:position pos:line="11" pos:column="47"/></argument_list></call><operator pos:line="11" pos:column="47">)<pos:position pos:line="11" pos:column="48"/></operator> <operator pos:line="11" pos:column="49">==<pos:position pos:line="11" pos:column="51"/></operator> <name pos:line="11" pos:column="52">NULL<pos:position pos:line="11" pos:column="56"/></name></expr>)<pos:position pos:line="11" pos:column="57"/></condition><then pos:line="11" pos:column="57">
        <block type="pseudo"><return pos:line="12" pos:column="9">return <expr><name pos:line="12" pos:column="16">rc<pos:position pos:line="12" pos:column="18"/></name></expr>;<pos:position pos:line="12" pos:column="19"/></return></block></then></if>
    <expr_stmt><expr><name pos:line="13" pos:column="5">s<pos:position pos:line="13" pos:column="6"/></name> <operator pos:line="13" pos:column="7">=<pos:position pos:line="13" pos:column="8"/></operator> <call><name pos:line="13" pos:column="9">mySrvFromConn<pos:position pos:line="13" pos:column="22"/></name><argument_list pos:line="13" pos:column="22">(<argument><expr><name pos:line="13" pos:column="23">c<pos:position pos:line="13" pos:column="24"/></name></expr></argument>)<pos:position pos:line="13" pos:column="25"/></argument_list></call></expr>;<pos:position pos:line="13" pos:column="26"/></expr_stmt>

    <if pos:line="15" pos:column="5">if <condition pos:line="15" pos:column="8">(   <expr><name pos:line="15" pos:column="12">cmd<pos:position pos:line="15" pos:column="15"/></name> <operator pos:line="15" pos:column="16">==<pos:position pos:line="15" pos:column="18"/></operator> <operator pos:line="15" pos:column="19">(<pos:position pos:line="15" pos:column="20"/></operator><name pos:line="15" pos:column="20">BIO_CB_WRITE<pos:position pos:line="15" pos:column="32"/></name><operator pos:line="15" pos:column="32">|<pos:position pos:line="15" pos:column="33"/></operator><name pos:line="15" pos:column="33">BIO_CB_RETURN<pos:position pos:line="15" pos:column="46"/></name><operator pos:line="15" pos:column="46">)<pos:position pos:line="15" pos:column="47"/></operator>
        <operator pos:line="16" pos:column="9">||<pos:position pos:line="16" pos:column="11"/></operator> <name pos:line="16" pos:column="12">cmd<pos:position pos:line="16" pos:column="15"/></name> <operator pos:line="16" pos:column="16">==<pos:position pos:line="16" pos:column="18"/></operator> <operator pos:line="16" pos:column="19">(<pos:position pos:line="16" pos:column="20"/></operator><name pos:line="16" pos:column="20">BIO_CB_READ<pos:position pos:line="16" pos:column="31"/></name> <operator pos:line="16" pos:column="32">|<pos:position pos:line="16" pos:column="33"/></operator><name pos:line="16" pos:column="33">BIO_CB_RETURN<pos:position pos:line="16" pos:column="46"/></name><operator pos:line="16" pos:column="46">)<pos:position pos:line="16" pos:column="47"/></operator></expr> )<pos:position pos:line="16" pos:column="49"/></condition><then pos:line="16" pos:column="49"> <block pos:line="16" pos:column="50">{
        <if pos:line="17" pos:column="9">if <condition pos:line="17" pos:column="12">(<expr><name pos:line="17" pos:column="13">rc<pos:position pos:line="17" pos:column="15"/></name> <operator pos:line="17" pos:column="16">&gt;=<pos:position pos:line="17" pos:column="21"/></operator> <literal type="number" pos:line="17" pos:column="19">0<pos:position pos:line="17" pos:column="20"/></literal></expr>)<pos:position pos:line="17" pos:column="21"/></condition><then pos:line="17" pos:column="21"> <block pos:line="17" pos:column="22">{
            <expr_stmt><expr><call><name pos:line="18" pos:column="13">ap_log_error<pos:position pos:line="18" pos:column="25"/></name><argument_list pos:line="18" pos:column="25">(<argument><expr><name pos:line="18" pos:column="26">APLOG_MARK<pos:position pos:line="18" pos:column="36"/></name></expr></argument>, <argument><expr><name pos:line="18" pos:column="38">APLOG_DEBUG<pos:position pos:line="18" pos:column="49"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="18" pos:column="51">0<pos:position pos:line="18" pos:column="52"/></literal></expr></argument>, <argument><expr><name pos:line="18" pos:column="54">s<pos:position pos:line="18" pos:column="55"/></name></expr></argument>,
                    <argument><expr><literal type="string" pos:line="19" pos:column="21">"%s: %s %ld/%d bytes %s BIO#%pp [mem: %pp] %s"<pos:position pos:line="19" pos:column="67"/></literal></expr></argument>,
                    <argument><expr><name pos:line="20" pos:column="21">SSL_LIBRARY_NAME<pos:position pos:line="20" pos:column="37"/></name></expr></argument>,
                    <argument><expr><operator pos:line="21" pos:column="21">(<pos:position pos:line="21" pos:column="22"/></operator><ternary><condition><expr><name pos:line="21" pos:column="22">cmd<pos:position pos:line="21" pos:column="25"/></name> <operator pos:line="21" pos:column="26">==<pos:position pos:line="21" pos:column="28"/></operator> <operator pos:line="21" pos:column="29">(<pos:position pos:line="21" pos:column="30"/></operator><name pos:line="21" pos:column="30">BIO_CB_WRITE<pos:position pos:line="21" pos:column="42"/></name><operator pos:line="21" pos:column="42">|<pos:position pos:line="21" pos:column="43"/></operator><name pos:line="21" pos:column="43">BIO_CB_RETURN<pos:position pos:line="21" pos:column="56"/></name><operator pos:line="21" pos:column="56">)<pos:position pos:line="21" pos:column="57"/></operator></expr> ?<pos:position pos:line="21" pos:column="59"/></condition><then pos:line="21" pos:column="59"> <expr><literal type="string" pos:line="21" pos:column="60">"write"<pos:position pos:line="21" pos:column="67"/></literal></expr> <pos:position pos:line="21" pos:column="68"/></then><else pos:line="21" pos:column="68">: <expr><literal type="string" pos:line="21" pos:column="70">"read"<pos:position pos:line="21" pos:column="76"/></literal></expr></else></ternary><operator pos:line="21" pos:column="76">)<pos:position pos:line="21" pos:column="77"/></operator></expr></argument>,
                    <argument><expr><name pos:line="22" pos:column="21">rc<pos:position pos:line="22" pos:column="23"/></name></expr></argument>, <argument><expr><name pos:line="22" pos:column="25">argi<pos:position pos:line="22" pos:column="29"/></name></expr></argument>, <argument><expr><operator pos:line="22" pos:column="31">(<pos:position pos:line="22" pos:column="32"/></operator><ternary><condition><expr><name pos:line="22" pos:column="32">cmd<pos:position pos:line="22" pos:column="35"/></name> <operator pos:line="22" pos:column="36">==<pos:position pos:line="22" pos:column="38"/></operator> <operator pos:line="22" pos:column="39">(<pos:position pos:line="22" pos:column="40"/></operator><name pos:line="22" pos:column="40">BIO_CB_WRITE<pos:position pos:line="22" pos:column="52"/></name><operator pos:line="22" pos:column="52">|<pos:position pos:line="22" pos:column="53"/></operator><name pos:line="22" pos:column="53">BIO_CB_RETURN<pos:position pos:line="22" pos:column="66"/></name><operator pos:line="22" pos:column="66">)<pos:position pos:line="22" pos:column="67"/></operator></expr> ?<pos:position pos:line="22" pos:column="69"/></condition><then pos:line="22" pos:column="69"> <expr><literal type="string" pos:line="22" pos:column="70">"to"<pos:position pos:line="22" pos:column="74"/></literal></expr> <pos:position pos:line="22" pos:column="75"/></then><else pos:line="22" pos:column="75">: <expr><literal type="string" pos:line="22" pos:column="77">"from"<pos:position pos:line="22" pos:column="83"/></literal></expr></else></ternary><operator pos:line="22" pos:column="83">)<pos:position pos:line="22" pos:column="84"/></operator></expr></argument>,
                    <argument><expr><name pos:line="23" pos:column="21">bio<pos:position pos:line="23" pos:column="24"/></name></expr></argument>, <argument><expr><name pos:line="23" pos:column="26">argp<pos:position pos:line="23" pos:column="30"/></name></expr></argument>,
                    <argument><expr><operator pos:line="24" pos:column="21">(<pos:position pos:line="24" pos:column="22"/></operator><ternary><condition><expr><name pos:line="24" pos:column="22">argp<pos:position pos:line="24" pos:column="26"/></name> <operator pos:line="24" pos:column="27">!=<pos:position pos:line="24" pos:column="29"/></operator> <name pos:line="24" pos:column="30">NULL<pos:position pos:line="24" pos:column="34"/></name></expr> ?<pos:position pos:line="24" pos:column="36"/></condition><then pos:line="24" pos:column="36"> <expr><literal type="string" pos:line="24" pos:column="37">"(BIO dump follows)"<pos:position pos:line="24" pos:column="57"/></literal></expr> <pos:position pos:line="24" pos:column="58"/></then><else pos:line="24" pos:column="58">: <expr><literal type="string" pos:line="24" pos:column="60">"(Oops, no memory buffer?)"<pos:position pos:line="24" pos:column="87"/></literal></expr></else></ternary><operator pos:line="24" pos:column="87">)<pos:position pos:line="24" pos:column="88"/></operator></expr></argument>)<pos:position pos:line="24" pos:column="89"/></argument_list></call></expr>;<pos:position pos:line="24" pos:column="90"/></expr_stmt>
            <if pos:line="25" pos:column="13">if <condition pos:line="25" pos:column="16">(<expr><name pos:line="25" pos:column="17">argp<pos:position pos:line="25" pos:column="21"/></name> <operator pos:line="25" pos:column="22">!=<pos:position pos:line="25" pos:column="24"/></operator> <name pos:line="25" pos:column="25">NULL<pos:position pos:line="25" pos:column="29"/></name></expr>)<pos:position pos:line="25" pos:column="30"/></condition><then pos:line="25" pos:column="30">
                <block type="pseudo"><expr_stmt><expr><call><name pos:line="26" pos:column="17">ssl_io_data_dump<pos:position pos:line="26" pos:column="33"/></name><argument_list pos:line="26" pos:column="33">(<argument><expr><name pos:line="26" pos:column="34">s<pos:position pos:line="26" pos:column="35"/></name></expr></argument>, <argument><expr><name pos:line="26" pos:column="37">argp<pos:position pos:line="26" pos:column="41"/></name></expr></argument>, <argument><expr><name pos:line="26" pos:column="43">rc<pos:position pos:line="26" pos:column="45"/></name></expr></argument>)<pos:position pos:line="26" pos:column="46"/></argument_list></call></expr>;<pos:position pos:line="26" pos:column="47"/></expr_stmt></block></then></if>
        }<pos:position pos:line="27" pos:column="10"/></block></then>
        <else pos:line="28" pos:column="9">else <block pos:line="28" pos:column="14">{
            <expr_stmt><expr><call><name pos:line="29" pos:column="13">ap_log_error<pos:position pos:line="29" pos:column="25"/></name><argument_list pos:line="29" pos:column="25">(<argument><expr><name pos:line="29" pos:column="26">APLOG_MARK<pos:position pos:line="29" pos:column="36"/></name></expr></argument>, <argument><expr><name pos:line="29" pos:column="38">APLOG_DEBUG<pos:position pos:line="29" pos:column="49"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="29" pos:column="51">0<pos:position pos:line="29" pos:column="52"/></literal></expr></argument>, <argument><expr><name pos:line="29" pos:column="54">s<pos:position pos:line="29" pos:column="55"/></name></expr></argument>,
                    <argument><expr><literal type="string" pos:line="30" pos:column="21">"%s: I/O error, %d bytes expected to %s on BIO#%pp [mem: %pp]"<pos:position pos:line="30" pos:column="83"/></literal></expr></argument>,
                    <argument><expr><name pos:line="31" pos:column="21">SSL_LIBRARY_NAME<pos:position pos:line="31" pos:column="37"/></name></expr></argument>, <argument><expr><name pos:line="31" pos:column="39">argi<pos:position pos:line="31" pos:column="43"/></name></expr></argument>,
                    <argument><expr><operator pos:line="32" pos:column="21">(<pos:position pos:line="32" pos:column="22"/></operator><ternary><condition><expr><name pos:line="32" pos:column="22">cmd<pos:position pos:line="32" pos:column="25"/></name> <operator pos:line="32" pos:column="26">==<pos:position pos:line="32" pos:column="28"/></operator> <operator pos:line="32" pos:column="29">(<pos:position pos:line="32" pos:column="30"/></operator><name pos:line="32" pos:column="30">BIO_CB_WRITE<pos:position pos:line="32" pos:column="42"/></name><operator pos:line="32" pos:column="42">|<pos:position pos:line="32" pos:column="43"/></operator><name pos:line="32" pos:column="43">BIO_CB_RETURN<pos:position pos:line="32" pos:column="56"/></name><operator pos:line="32" pos:column="56">)<pos:position pos:line="32" pos:column="57"/></operator></expr> ?<pos:position pos:line="32" pos:column="59"/></condition><then pos:line="32" pos:column="59"> <expr><literal type="string" pos:line="32" pos:column="60">"write"<pos:position pos:line="32" pos:column="67"/></literal></expr> <pos:position pos:line="32" pos:column="68"/></then><else pos:line="32" pos:column="68">: <expr><literal type="string" pos:line="32" pos:column="70">"read"<pos:position pos:line="32" pos:column="76"/></literal></expr></else></ternary><operator pos:line="32" pos:column="76">)<pos:position pos:line="32" pos:column="77"/></operator></expr></argument>,
                    <argument><expr><name pos:line="33" pos:column="21">bio<pos:position pos:line="33" pos:column="24"/></name></expr></argument>, <argument><expr><name pos:line="33" pos:column="26">argp<pos:position pos:line="33" pos:column="30"/></name></expr></argument>)<pos:position pos:line="33" pos:column="31"/></argument_list></call></expr>;<pos:position pos:line="33" pos:column="32"/></expr_stmt>
        }<pos:position pos:line="34" pos:column="10"/></block></else></if>
    }<pos:position pos:line="35" pos:column="6"/></block></then></if>
    <return pos:line="36" pos:column="5">return <expr><name pos:line="36" pos:column="12">rc<pos:position pos:line="36" pos:column="14"/></name></expr>;<pos:position pos:line="36" pos:column="15"/></return>
}<pos:position pos:line="37" pos:column="2"/></block></function></unit>

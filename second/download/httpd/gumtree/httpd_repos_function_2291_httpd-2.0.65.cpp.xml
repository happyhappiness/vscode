<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/httpd/gumtree/httpd_repos_function_2291_httpd-2.0.65.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">void<pos:position pos:line="1" pos:column="12"/></name> <modifier pos:line="1" pos:column="13">*<pos:position pos:line="1" pos:column="14"/></modifier> <name pos:line="1" pos:column="15">APR_THREAD_FUNC<pos:position pos:line="1" pos:column="30"/></name></type> <name pos:line="1" pos:column="31">worker_thread<pos:position pos:line="1" pos:column="44"/></name><parameter_list pos:line="1" pos:column="44">(<parameter><decl><type><name pos:line="1" pos:column="45">apr_thread_t<pos:position pos:line="1" pos:column="57"/></name> <modifier pos:line="1" pos:column="58">*<pos:position pos:line="1" pos:column="59"/></modifier></type><name pos:line="1" pos:column="59">thd<pos:position pos:line="1" pos:column="62"/></name></decl></parameter>, <parameter><decl><type><name pos:line="1" pos:column="64">void<pos:position pos:line="1" pos:column="68"/></name> <modifier pos:line="1" pos:column="69">*<pos:position pos:line="1" pos:column="70"/></modifier></type> <name pos:line="1" pos:column="71">dummy<pos:position pos:line="1" pos:column="76"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="77"/></parameter_list>
<block pos:line="2" pos:column="1">{
    <decl_stmt><decl><type><name pos:line="3" pos:column="5">proc_info<pos:position pos:line="3" pos:column="14"/></name> <modifier pos:line="3" pos:column="15">*<pos:position pos:line="3" pos:column="16"/></modifier></type> <name pos:line="3" pos:column="17">ti<pos:position pos:line="3" pos:column="19"/></name> <init pos:line="3" pos:column="20">= <expr><name pos:line="3" pos:column="22">dummy<pos:position pos:line="3" pos:column="27"/></name></expr></init></decl>;<pos:position pos:line="3" pos:column="28"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="4" pos:column="5">int<pos:position pos:line="4" pos:column="8"/></name></type> <name pos:line="4" pos:column="9">process_slot<pos:position pos:line="4" pos:column="21"/></name> <init pos:line="4" pos:column="22">= <expr><name><name pos:line="4" pos:column="24">ti<pos:position pos:line="4" pos:column="26"/></name><operator pos:line="4" pos:column="26">-&gt;<pos:position pos:line="4" pos:column="31"/></operator><name pos:line="4" pos:column="28">pid<pos:position pos:line="4" pos:column="31"/></name></name></expr></init></decl>;<pos:position pos:line="4" pos:column="32"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="5" pos:column="5">int<pos:position pos:line="5" pos:column="8"/></name></type> <name pos:line="5" pos:column="9">thread_slot<pos:position pos:line="5" pos:column="20"/></name> <init pos:line="5" pos:column="21">= <expr><name><name pos:line="5" pos:column="23">ti<pos:position pos:line="5" pos:column="25"/></name><operator pos:line="5" pos:column="25">-&gt;<pos:position pos:line="5" pos:column="30"/></operator><name pos:line="5" pos:column="27">tid<pos:position pos:line="5" pos:column="30"/></name></name></expr></init></decl>;<pos:position pos:line="5" pos:column="31"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="6" pos:column="5">apr_bucket_alloc_t<pos:position pos:line="6" pos:column="23"/></name> <modifier pos:line="6" pos:column="24">*<pos:position pos:line="6" pos:column="25"/></modifier></type><name pos:line="6" pos:column="25">bucket_alloc<pos:position pos:line="6" pos:column="37"/></name></decl>;<pos:position pos:line="6" pos:column="38"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="7" pos:column="5">apr_pool_t<pos:position pos:line="7" pos:column="15"/></name> <modifier pos:line="7" pos:column="16">*<pos:position pos:line="7" pos:column="17"/></modifier></type><name pos:line="7" pos:column="17">tpool<pos:position pos:line="7" pos:column="22"/></name> <init pos:line="7" pos:column="23">= <expr><call><name pos:line="7" pos:column="25">apr_thread_pool_get<pos:position pos:line="7" pos:column="44"/></name><argument_list pos:line="7" pos:column="44">(<argument><expr><name pos:line="7" pos:column="45">thd<pos:position pos:line="7" pos:column="48"/></name></expr></argument>)<pos:position pos:line="7" pos:column="49"/></argument_list></call></expr></init></decl>;<pos:position pos:line="7" pos:column="50"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="8" pos:column="5">apr_pool_t<pos:position pos:line="8" pos:column="15"/></name> <modifier pos:line="8" pos:column="16">*<pos:position pos:line="8" pos:column="17"/></modifier></type><name pos:line="8" pos:column="17">ptrans<pos:position pos:line="8" pos:column="23"/></name></decl>;<pos:position pos:line="8" pos:column="24"/></decl_stmt>                <comment type="block" pos:line="8" pos:column="40">/* Pool for per-transaction stuff */</comment>
    <decl_stmt><decl><type><name pos:line="9" pos:column="5">apr_allocator_t<pos:position pos:line="9" pos:column="20"/></name> <modifier pos:line="9" pos:column="21">*<pos:position pos:line="9" pos:column="22"/></modifier></type><name pos:line="9" pos:column="22">allocator<pos:position pos:line="9" pos:column="31"/></name></decl>;<pos:position pos:line="9" pos:column="32"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="10" pos:column="5">apr_status_t<pos:position pos:line="10" pos:column="17"/></name></type> <name pos:line="10" pos:column="18">rv<pos:position pos:line="10" pos:column="20"/></name></decl>;<pos:position pos:line="10" pos:column="21"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="11" pos:column="5">worker_wakeup_info<pos:position pos:line="11" pos:column="23"/></name> <modifier pos:line="11" pos:column="24">*<pos:position pos:line="11" pos:column="25"/></modifier></type><name pos:line="11" pos:column="25">wakeup<pos:position pos:line="11" pos:column="31"/></name></decl>;<pos:position pos:line="11" pos:column="32"/></decl_stmt>

    <expr_stmt><expr><call><name pos:line="13" pos:column="5">free<pos:position pos:line="13" pos:column="9"/></name><argument_list pos:line="13" pos:column="9">(<argument><expr><name pos:line="13" pos:column="10">ti<pos:position pos:line="13" pos:column="12"/></name></expr></argument>)<pos:position pos:line="13" pos:column="13"/></argument_list></call></expr>;<pos:position pos:line="13" pos:column="14"/></expr_stmt>

    <expr_stmt><expr><call><name pos:line="15" pos:column="5">ap_update_child_status_from_indexes<pos:position pos:line="15" pos:column="40"/></name><argument_list pos:line="15" pos:column="40">(<argument><expr><name pos:line="15" pos:column="41">process_slot<pos:position pos:line="15" pos:column="53"/></name></expr></argument>, <argument><expr><name pos:line="15" pos:column="55">thread_slot<pos:position pos:line="15" pos:column="66"/></name></expr></argument>, <argument><expr><name pos:line="15" pos:column="68">SERVER_STARTING<pos:position pos:line="15" pos:column="83"/></name></expr></argument>, <argument><expr><name pos:line="15" pos:column="85">NULL<pos:position pos:line="15" pos:column="89"/></name></expr></argument>)<pos:position pos:line="15" pos:column="90"/></argument_list></call></expr>;<pos:position pos:line="15" pos:column="91"/></expr_stmt>

    <expr_stmt><expr><call><name pos:line="17" pos:column="5">apr_allocator_create<pos:position pos:line="17" pos:column="25"/></name><argument_list pos:line="17" pos:column="25">(<argument><expr><operator pos:line="17" pos:column="26">&amp;<pos:position pos:line="17" pos:column="31"/></operator><name pos:line="17" pos:column="27">allocator<pos:position pos:line="17" pos:column="36"/></name></expr></argument>)<pos:position pos:line="17" pos:column="37"/></argument_list></call></expr>;<pos:position pos:line="17" pos:column="38"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="18" pos:column="5">apr_allocator_max_free_set<pos:position pos:line="18" pos:column="31"/></name><argument_list pos:line="18" pos:column="31">(<argument><expr><name pos:line="18" pos:column="32">allocator<pos:position pos:line="18" pos:column="41"/></name></expr></argument>, <argument><expr><name pos:line="18" pos:column="43">ap_max_mem_free<pos:position pos:line="18" pos:column="58"/></name></expr></argument>)<pos:position pos:line="18" pos:column="59"/></argument_list></call></expr>;<pos:position pos:line="18" pos:column="60"/></expr_stmt>
    <comment type="block" pos:line="19" pos:column="5">/* XXX: why is ptrans's parent not tpool? --jcw 08/2003 */</comment>
    <expr_stmt><expr><call><name pos:line="20" pos:column="5">apr_pool_create_ex<pos:position pos:line="20" pos:column="23"/></name><argument_list pos:line="20" pos:column="23">(<argument><expr><operator pos:line="20" pos:column="24">&amp;<pos:position pos:line="20" pos:column="29"/></operator><name pos:line="20" pos:column="25">ptrans<pos:position pos:line="20" pos:column="31"/></name></expr></argument>, <argument><expr><name pos:line="20" pos:column="33">NULL<pos:position pos:line="20" pos:column="37"/></name></expr></argument>, <argument><expr><name pos:line="20" pos:column="39">NULL<pos:position pos:line="20" pos:column="43"/></name></expr></argument>, <argument><expr><name pos:line="20" pos:column="45">allocator<pos:position pos:line="20" pos:column="54"/></name></expr></argument>)<pos:position pos:line="20" pos:column="55"/></argument_list></call></expr>;<pos:position pos:line="20" pos:column="56"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="21" pos:column="5">apr_allocator_owner_set<pos:position pos:line="21" pos:column="28"/></name><argument_list pos:line="21" pos:column="28">(<argument><expr><name pos:line="21" pos:column="29">allocator<pos:position pos:line="21" pos:column="38"/></name></expr></argument>, <argument><expr><name pos:line="21" pos:column="40">ptrans<pos:position pos:line="21" pos:column="46"/></name></expr></argument>)<pos:position pos:line="21" pos:column="47"/></argument_list></call></expr>;<pos:position pos:line="21" pos:column="48"/></expr_stmt>
    <expr_stmt><expr><name pos:line="22" pos:column="5">bucket_alloc<pos:position pos:line="22" pos:column="17"/></name> <operator pos:line="22" pos:column="18">=<pos:position pos:line="22" pos:column="19"/></operator> <call><name pos:line="22" pos:column="20">apr_bucket_alloc_create_ex<pos:position pos:line="22" pos:column="46"/></name><argument_list pos:line="22" pos:column="46">(<argument><expr><name pos:line="22" pos:column="47">allocator<pos:position pos:line="22" pos:column="56"/></name></expr></argument>)<pos:position pos:line="22" pos:column="57"/></argument_list></call></expr>;<pos:position pos:line="22" pos:column="58"/></expr_stmt>

    <expr_stmt><expr><name pos:line="24" pos:column="5">wakeup<pos:position pos:line="24" pos:column="11"/></name> <operator pos:line="24" pos:column="12">=<pos:position pos:line="24" pos:column="13"/></operator> <operator pos:line="24" pos:column="14">(<pos:position pos:line="24" pos:column="15"/></operator><name pos:line="24" pos:column="15">worker_wakeup_info<pos:position pos:line="24" pos:column="33"/></name> <operator pos:line="24" pos:column="34">*<pos:position pos:line="24" pos:column="35"/></operator><operator pos:line="24" pos:column="35">)<pos:position pos:line="24" pos:column="36"/></operator><call><name pos:line="24" pos:column="36">apr_palloc<pos:position pos:line="24" pos:column="46"/></name><argument_list pos:line="24" pos:column="46">(<argument><expr><name pos:line="24" pos:column="47">tpool<pos:position pos:line="24" pos:column="52"/></name></expr></argument>, <argument><expr><sizeof pos:line="24" pos:column="54">sizeof<argument_list pos:line="24" pos:column="60">(<argument><expr><operator pos:line="24" pos:column="61">*<pos:position pos:line="24" pos:column="62"/></operator><name pos:line="24" pos:column="62">wakeup<pos:position pos:line="24" pos:column="68"/></name></expr></argument>)<pos:position pos:line="24" pos:column="69"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="24" pos:column="70"/></argument_list></call></expr>;<pos:position pos:line="24" pos:column="71"/></expr_stmt>
    <expr_stmt><expr><name><name pos:line="25" pos:column="5">wakeup<pos:position pos:line="25" pos:column="11"/></name><operator pos:line="25" pos:column="11">-&gt;<pos:position pos:line="25" pos:column="16"/></operator><name pos:line="25" pos:column="13">pool<pos:position pos:line="25" pos:column="17"/></name></name> <operator pos:line="25" pos:column="18">=<pos:position pos:line="25" pos:column="19"/></operator> <name pos:line="25" pos:column="20">ptrans<pos:position pos:line="25" pos:column="26"/></name></expr>;<pos:position pos:line="25" pos:column="27"/></expr_stmt>
    <if pos:line="26" pos:column="5">if <condition pos:line="26" pos:column="8">(<expr><operator pos:line="26" pos:column="9">(<pos:position pos:line="26" pos:column="10"/></operator><name pos:line="26" pos:column="10">rv<pos:position pos:line="26" pos:column="12"/></name> <operator pos:line="26" pos:column="13">=<pos:position pos:line="26" pos:column="14"/></operator> <call><name pos:line="26" pos:column="15">apr_thread_cond_create<pos:position pos:line="26" pos:column="37"/></name><argument_list pos:line="26" pos:column="37">(<argument><expr><operator pos:line="26" pos:column="38">&amp;<pos:position pos:line="26" pos:column="43"/></operator><name><name pos:line="26" pos:column="39">wakeup<pos:position pos:line="26" pos:column="45"/></name><operator pos:line="26" pos:column="45">-&gt;<pos:position pos:line="26" pos:column="50"/></operator><name pos:line="26" pos:column="47">cond<pos:position pos:line="26" pos:column="51"/></name></name></expr></argument>, <argument><expr><name pos:line="26" pos:column="53">tpool<pos:position pos:line="26" pos:column="58"/></name></expr></argument>)<pos:position pos:line="26" pos:column="59"/></argument_list></call><operator pos:line="26" pos:column="59">)<pos:position pos:line="26" pos:column="60"/></operator> <operator pos:line="26" pos:column="61">!=<pos:position pos:line="26" pos:column="63"/></operator> <name pos:line="26" pos:column="64">APR_SUCCESS<pos:position pos:line="26" pos:column="75"/></name></expr>)<pos:position pos:line="26" pos:column="76"/></condition><then pos:line="26" pos:column="76"> <block pos:line="26" pos:column="77">{
        <expr_stmt><expr><call><name pos:line="27" pos:column="9">ap_log_error<pos:position pos:line="27" pos:column="21"/></name><argument_list pos:line="27" pos:column="21">(<argument><expr><name pos:line="27" pos:column="22">APLOG_MARK<pos:position pos:line="27" pos:column="32"/></name></expr></argument>, <argument><expr><name pos:line="27" pos:column="34">APLOG_EMERG<pos:position pos:line="27" pos:column="45"/></name></expr></argument>, <argument><expr><name pos:line="27" pos:column="47">rv<pos:position pos:line="27" pos:column="49"/></name></expr></argument>, <argument><expr><name pos:line="27" pos:column="51">ap_server_conf<pos:position pos:line="27" pos:column="65"/></name></expr></argument>,
                     <argument><expr><literal type="string" pos:line="28" pos:column="22">"apr_thread_cond_create failed. Attempting to shutdown "<pos:position pos:line="28" pos:column="78"/></literal>
                     <literal type="string" pos:line="29" pos:column="22">"process gracefully."<pos:position pos:line="29" pos:column="43"/></literal></expr></argument>)<pos:position pos:line="29" pos:column="44"/></argument_list></call></expr>;<pos:position pos:line="29" pos:column="45"/></expr_stmt>
        <expr_stmt><expr><call><name pos:line="30" pos:column="9">signal_threads<pos:position pos:line="30" pos:column="23"/></name><argument_list pos:line="30" pos:column="23">(<argument><expr><name pos:line="30" pos:column="24">ST_GRACEFUL<pos:position pos:line="30" pos:column="35"/></name></expr></argument>)<pos:position pos:line="30" pos:column="36"/></argument_list></call></expr>;<pos:position pos:line="30" pos:column="37"/></expr_stmt>
        <expr_stmt><expr><call><name pos:line="31" pos:column="9">apr_thread_exit<pos:position pos:line="31" pos:column="24"/></name><argument_list pos:line="31" pos:column="24">(<argument><expr><name pos:line="31" pos:column="25">thd<pos:position pos:line="31" pos:column="28"/></name></expr></argument>, <argument><expr><name pos:line="31" pos:column="30">rv<pos:position pos:line="31" pos:column="32"/></name></expr></argument>)<pos:position pos:line="31" pos:column="33"/></argument_list></call></expr>;<pos:position pos:line="31" pos:column="34"/></expr_stmt>
    }<pos:position pos:line="32" pos:column="6"/></block></then></if>
    <if pos:line="33" pos:column="5">if <condition pos:line="33" pos:column="8">(<expr><operator pos:line="33" pos:column="9">(<pos:position pos:line="33" pos:column="10"/></operator><name pos:line="33" pos:column="10">rv<pos:position pos:line="33" pos:column="12"/></name> <operator pos:line="33" pos:column="13">=<pos:position pos:line="33" pos:column="14"/></operator> <call><name pos:line="33" pos:column="15">apr_thread_mutex_create<pos:position pos:line="33" pos:column="38"/></name><argument_list pos:line="33" pos:column="38">(<argument><expr><operator pos:line="33" pos:column="39">&amp;<pos:position pos:line="33" pos:column="44"/></operator><name><name pos:line="33" pos:column="40">wakeup<pos:position pos:line="33" pos:column="46"/></name><operator pos:line="33" pos:column="46">-&gt;<pos:position pos:line="33" pos:column="51"/></operator><name pos:line="33" pos:column="48">mutex<pos:position pos:line="33" pos:column="53"/></name></name></expr></argument>, <argument><expr><name pos:line="33" pos:column="55">APR_THREAD_MUTEX_DEFAULT<pos:position pos:line="33" pos:column="79"/></name></expr></argument>,
                                      <argument><expr><name pos:line="34" pos:column="39">tpool<pos:position pos:line="34" pos:column="44"/></name></expr></argument>)<pos:position pos:line="34" pos:column="45"/></argument_list></call><operator pos:line="34" pos:column="45">)<pos:position pos:line="34" pos:column="46"/></operator> <operator pos:line="34" pos:column="47">!=<pos:position pos:line="34" pos:column="49"/></operator> <name pos:line="34" pos:column="50">APR_SUCCESS<pos:position pos:line="34" pos:column="61"/></name></expr>)<pos:position pos:line="34" pos:column="62"/></condition><then pos:line="34" pos:column="62"> <block pos:line="34" pos:column="63">{
        <expr_stmt><expr><call><name pos:line="35" pos:column="9">ap_log_error<pos:position pos:line="35" pos:column="21"/></name><argument_list pos:line="35" pos:column="21">(<argument><expr><name pos:line="35" pos:column="22">APLOG_MARK<pos:position pos:line="35" pos:column="32"/></name></expr></argument>, <argument><expr><name pos:line="35" pos:column="34">APLOG_EMERG<pos:position pos:line="35" pos:column="45"/></name></expr></argument>, <argument><expr><name pos:line="35" pos:column="47">rv<pos:position pos:line="35" pos:column="49"/></name></expr></argument>, <argument><expr><name pos:line="35" pos:column="51">ap_server_conf<pos:position pos:line="35" pos:column="65"/></name></expr></argument>,
                     <argument><expr><literal type="string" pos:line="36" pos:column="22">"apr_thread_mutex_create failed. Attempting to shutdown "<pos:position pos:line="36" pos:column="79"/></literal>
                     <literal type="string" pos:line="37" pos:column="22">"process gracefully."<pos:position pos:line="37" pos:column="43"/></literal></expr></argument>)<pos:position pos:line="37" pos:column="44"/></argument_list></call></expr>;<pos:position pos:line="37" pos:column="45"/></expr_stmt>
        <expr_stmt><expr><call><name pos:line="38" pos:column="9">signal_threads<pos:position pos:line="38" pos:column="23"/></name><argument_list pos:line="38" pos:column="23">(<argument><expr><name pos:line="38" pos:column="24">ST_GRACEFUL<pos:position pos:line="38" pos:column="35"/></name></expr></argument>)<pos:position pos:line="38" pos:column="36"/></argument_list></call></expr>;<pos:position pos:line="38" pos:column="37"/></expr_stmt>
        <expr_stmt><expr><call><name pos:line="39" pos:column="9">apr_thread_exit<pos:position pos:line="39" pos:column="24"/></name><argument_list pos:line="39" pos:column="24">(<argument><expr><name pos:line="39" pos:column="25">thd<pos:position pos:line="39" pos:column="28"/></name></expr></argument>, <argument><expr><name pos:line="39" pos:column="30">rv<pos:position pos:line="39" pos:column="32"/></name></expr></argument>)<pos:position pos:line="39" pos:column="33"/></argument_list></call></expr>;<pos:position pos:line="39" pos:column="34"/></expr_stmt>
    }<pos:position pos:line="40" pos:column="6"/></block></then></if>

    <while pos:line="42" pos:column="5">while <condition pos:line="42" pos:column="11">(<expr><operator pos:line="42" pos:column="12">!<pos:position pos:line="42" pos:column="13"/></operator><name pos:line="42" pos:column="13">workers_may_exit<pos:position pos:line="42" pos:column="29"/></name></expr>)<pos:position pos:line="42" pos:column="30"/></condition> <block pos:line="42" pos:column="31">{
        <expr_stmt><expr><call><name pos:line="43" pos:column="9">ap_update_child_status_from_indexes<pos:position pos:line="43" pos:column="44"/></name><argument_list pos:line="43" pos:column="44">(<argument><expr><name pos:line="43" pos:column="45">process_slot<pos:position pos:line="43" pos:column="57"/></name></expr></argument>, <argument><expr><name pos:line="43" pos:column="59">thread_slot<pos:position pos:line="43" pos:column="70"/></name></expr></argument>, <argument><expr><name pos:line="43" pos:column="72">SERVER_READY<pos:position pos:line="43" pos:column="84"/></name></expr></argument>, <argument><expr><name pos:line="43" pos:column="86">NULL<pos:position pos:line="43" pos:column="90"/></name></expr></argument>)<pos:position pos:line="43" pos:column="91"/></argument_list></call></expr>;<pos:position pos:line="43" pos:column="92"/></expr_stmt>
        <expr_stmt><expr><name pos:line="44" pos:column="9">rv<pos:position pos:line="44" pos:column="11"/></name> <operator pos:line="44" pos:column="12">=<pos:position pos:line="44" pos:column="13"/></operator> <call><name pos:line="44" pos:column="14">worker_stack_wait<pos:position pos:line="44" pos:column="31"/></name><argument_list pos:line="44" pos:column="31">(<argument><expr><name pos:line="44" pos:column="32">idle_worker_stack<pos:position pos:line="44" pos:column="49"/></name></expr></argument>, <argument><expr><name pos:line="44" pos:column="51">wakeup<pos:position pos:line="44" pos:column="57"/></name></expr></argument>)<pos:position pos:line="44" pos:column="58"/></argument_list></call></expr>;<pos:position pos:line="44" pos:column="59"/></expr_stmt>
        <if pos:line="45" pos:column="9">if <condition pos:line="45" pos:column="12">(<expr><call><name pos:line="45" pos:column="13">APR_STATUS_IS_EOF<pos:position pos:line="45" pos:column="30"/></name><argument_list pos:line="45" pos:column="30">(<argument><expr><name pos:line="45" pos:column="31">rv<pos:position pos:line="45" pos:column="33"/></name></expr></argument>)<pos:position pos:line="45" pos:column="34"/></argument_list></call></expr>)<pos:position pos:line="45" pos:column="35"/></condition><then pos:line="45" pos:column="35"> <block pos:line="45" pos:column="36">{
            <break pos:line="46" pos:column="13">break;<pos:position pos:line="46" pos:column="19"/></break> <comment type="block" pos:line="46" pos:column="20">/* The queue has been terminated. */</comment>
        }<pos:position pos:line="47" pos:column="10"/></block></then>
        <elseif pos:line="48" pos:column="9">else <if pos:line="48" pos:column="14">if <condition pos:line="48" pos:column="17">(<expr><name pos:line="48" pos:column="18">rv<pos:position pos:line="48" pos:column="20"/></name> <operator pos:line="48" pos:column="21">!=<pos:position pos:line="48" pos:column="23"/></operator> <name pos:line="48" pos:column="24">APR_SUCCESS<pos:position pos:line="48" pos:column="35"/></name></expr>)<pos:position pos:line="48" pos:column="36"/></condition><then pos:line="48" pos:column="36"> <block pos:line="48" pos:column="37">{
            <expr_stmt><expr><call><name pos:line="49" pos:column="13">ap_log_error<pos:position pos:line="49" pos:column="25"/></name><argument_list pos:line="49" pos:column="25">(<argument><expr><name pos:line="49" pos:column="26">APLOG_MARK<pos:position pos:line="49" pos:column="36"/></name></expr></argument>, <argument><expr><name pos:line="49" pos:column="38">APLOG_CRIT<pos:position pos:line="49" pos:column="48"/></name></expr></argument>, <argument><expr><name pos:line="49" pos:column="50">rv<pos:position pos:line="49" pos:column="52"/></name></expr></argument>, <argument><expr><name pos:line="49" pos:column="54">ap_server_conf<pos:position pos:line="49" pos:column="68"/></name></expr></argument>,
                         <argument><expr><literal type="string" pos:line="50" pos:column="26">"worker_stack_wait failed"<pos:position pos:line="50" pos:column="52"/></literal></expr></argument>)<pos:position pos:line="50" pos:column="53"/></argument_list></call></expr>;<pos:position pos:line="50" pos:column="54"/></expr_stmt>
            <break pos:line="51" pos:column="13">break;<pos:position pos:line="51" pos:column="19"/></break> <comment type="block" pos:line="51" pos:column="20">/* Treat all other errors as fatal. */</comment>
        }<pos:position pos:line="52" pos:column="10"/></block></then></if></elseif>
        <elseif pos:line="53" pos:column="9">else <if pos:line="53" pos:column="14">if <condition pos:line="53" pos:column="17">(<expr><name><name pos:line="53" pos:column="18">wakeup<pos:position pos:line="53" pos:column="24"/></name><operator pos:line="53" pos:column="24">-&gt;<pos:position pos:line="53" pos:column="29"/></operator><name pos:line="53" pos:column="26">state<pos:position pos:line="53" pos:column="31"/></name></name> <operator pos:line="53" pos:column="32">==<pos:position pos:line="53" pos:column="34"/></operator> <name pos:line="53" pos:column="35">WORKER_TERMINATED<pos:position pos:line="53" pos:column="52"/></name></expr>)<pos:position pos:line="53" pos:column="53"/></condition><then pos:line="53" pos:column="53"> <block pos:line="53" pos:column="54">{
            <break pos:line="54" pos:column="13">break;<pos:position pos:line="54" pos:column="19"/></break> <comment type="block" pos:line="54" pos:column="20">/* They told us to quit. */</comment>
        }<pos:position pos:line="55" pos:column="10"/></block></then></if></elseif></if>
        <expr_stmt><expr><call><name pos:line="56" pos:column="9">AP_DEBUG_ASSERT<pos:position pos:line="56" pos:column="24"/></name><argument_list pos:line="56" pos:column="24">(<argument><expr><name><name pos:line="56" pos:column="25">wakeup<pos:position pos:line="56" pos:column="31"/></name><operator pos:line="56" pos:column="31">-&gt;<pos:position pos:line="56" pos:column="36"/></operator><name pos:line="56" pos:column="33">state<pos:position pos:line="56" pos:column="38"/></name></name> <operator pos:line="56" pos:column="39">!=<pos:position pos:line="56" pos:column="41"/></operator> <name pos:line="56" pos:column="42">WORKER_IDLE<pos:position pos:line="56" pos:column="53"/></name></expr></argument>)<pos:position pos:line="56" pos:column="54"/></argument_list></call></expr>;<pos:position pos:line="56" pos:column="55"/></expr_stmt>
        <expr_stmt><expr><call><name pos:line="57" pos:column="9">process_socket<pos:position pos:line="57" pos:column="23"/></name><argument_list pos:line="57" pos:column="23">(<argument><expr><name pos:line="57" pos:column="24">ptrans<pos:position pos:line="57" pos:column="30"/></name></expr></argument>, <argument><expr><name><name pos:line="57" pos:column="32">wakeup<pos:position pos:line="57" pos:column="38"/></name><operator pos:line="57" pos:column="38">-&gt;<pos:position pos:line="57" pos:column="43"/></operator><name pos:line="57" pos:column="40">csd<pos:position pos:line="57" pos:column="43"/></name></name></expr></argument>,
                       <argument><expr><name pos:line="58" pos:column="24">process_slot<pos:position pos:line="58" pos:column="36"/></name></expr></argument>, <argument><expr><name pos:line="58" pos:column="38">thread_slot<pos:position pos:line="58" pos:column="49"/></name></expr></argument>, <argument><expr><name pos:line="58" pos:column="51">bucket_alloc<pos:position pos:line="58" pos:column="63"/></name></expr></argument>)<pos:position pos:line="58" pos:column="64"/></argument_list></call></expr>;<pos:position pos:line="58" pos:column="65"/></expr_stmt>
        <expr_stmt><expr><name pos:line="59" pos:column="9">requests_this_child<pos:position pos:line="59" pos:column="28"/></name><operator pos:line="59" pos:column="28">--<pos:position pos:line="59" pos:column="30"/></operator></expr>;<pos:position pos:line="59" pos:column="31"/></expr_stmt> <comment type="block" pos:line="59" pos:column="32">/* FIXME: should be synchronized - aaron */</comment>
        <expr_stmt><expr><call><name pos:line="60" pos:column="9">apr_pool_clear<pos:position pos:line="60" pos:column="23"/></name><argument_list pos:line="60" pos:column="23">(<argument><expr><name pos:line="60" pos:column="24">ptrans<pos:position pos:line="60" pos:column="30"/></name></expr></argument>)<pos:position pos:line="60" pos:column="31"/></argument_list></call></expr>;<pos:position pos:line="60" pos:column="32"/></expr_stmt>
    }<pos:position pos:line="61" pos:column="6"/></block></while>

    <expr_stmt><expr><call><name pos:line="63" pos:column="5">ap_update_child_status_from_indexes<pos:position pos:line="63" pos:column="40"/></name><argument_list pos:line="63" pos:column="40">(<argument><expr><name pos:line="63" pos:column="41">process_slot<pos:position pos:line="63" pos:column="53"/></name></expr></argument>, <argument><expr><name pos:line="63" pos:column="55">thread_slot<pos:position pos:line="63" pos:column="66"/></name></expr></argument>,
        <argument><expr><ternary><condition><expr><operator pos:line="64" pos:column="9">(<pos:position pos:line="64" pos:column="10"/></operator><name pos:line="64" pos:column="10">dying<pos:position pos:line="64" pos:column="15"/></name><operator pos:line="64" pos:column="15">)<pos:position pos:line="64" pos:column="16"/></operator></expr> ?<pos:position pos:line="64" pos:column="18"/></condition><then pos:line="64" pos:column="18"> <expr><name pos:line="64" pos:column="19">SERVER_DEAD<pos:position pos:line="64" pos:column="30"/></name></expr> <pos:position pos:line="64" pos:column="31"/></then><else pos:line="64" pos:column="31">: <expr><name pos:line="64" pos:column="33">SERVER_GRACEFUL<pos:position pos:line="64" pos:column="48"/></name></expr></else></ternary></expr></argument>, <argument><expr><operator pos:line="64" pos:column="50">(<pos:position pos:line="64" pos:column="51"/></operator><name pos:line="64" pos:column="51">request_rec<pos:position pos:line="64" pos:column="62"/></name> <operator pos:line="64" pos:column="63">*<pos:position pos:line="64" pos:column="64"/></operator><operator pos:line="64" pos:column="64">)<pos:position pos:line="64" pos:column="65"/></operator> <name pos:line="64" pos:column="66">NULL<pos:position pos:line="64" pos:column="70"/></name></expr></argument>)<pos:position pos:line="64" pos:column="71"/></argument_list></call></expr>;<pos:position pos:line="64" pos:column="72"/></expr_stmt>

    <expr_stmt><expr><call><name pos:line="66" pos:column="5">apr_bucket_alloc_destroy<pos:position pos:line="66" pos:column="29"/></name><argument_list pos:line="66" pos:column="29">(<argument><expr><name pos:line="66" pos:column="30">bucket_alloc<pos:position pos:line="66" pos:column="42"/></name></expr></argument>)<pos:position pos:line="66" pos:column="43"/></argument_list></call></expr>;<pos:position pos:line="66" pos:column="44"/></expr_stmt>

    <expr_stmt><expr><call><name pos:line="68" pos:column="5">apr_thread_exit<pos:position pos:line="68" pos:column="20"/></name><argument_list pos:line="68" pos:column="20">(<argument><expr><name pos:line="68" pos:column="21">thd<pos:position pos:line="68" pos:column="24"/></name></expr></argument>, <argument><expr><name pos:line="68" pos:column="26">APR_SUCCESS<pos:position pos:line="68" pos:column="37"/></name></expr></argument>)<pos:position pos:line="68" pos:column="38"/></argument_list></call></expr>;<pos:position pos:line="68" pos:column="39"/></expr_stmt>
    <return pos:line="69" pos:column="5">return <expr><name pos:line="69" pos:column="12">NULL<pos:position pos:line="69" pos:column="16"/></name></expr>;<pos:position pos:line="69" pos:column="17"/></return>
}<pos:position pos:line="70" pos:column="2"/></block></function></unit>

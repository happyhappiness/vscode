<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/httpd/gumtree/httpd_function_7296.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">int<pos:position pos:line="1" pos:column="11"/></name></type> <name pos:line="1" pos:column="12">lua_map_handler<pos:position pos:line="1" pos:column="27"/></name><parameter_list pos:line="1" pos:column="27">(<parameter><decl><type><name pos:line="1" pos:column="28">request_rec<pos:position pos:line="1" pos:column="39"/></name> <modifier pos:line="1" pos:column="40">*<pos:position pos:line="1" pos:column="41"/></modifier></type><name pos:line="1" pos:column="41">r<pos:position pos:line="1" pos:column="42"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="43"/></parameter_list>
<block pos:line="2" pos:column="1">{
    <decl_stmt><decl><type><name pos:line="3" pos:column="5">int<pos:position pos:line="3" pos:column="8"/></name></type> <name pos:line="3" pos:column="9">rc<pos:position pos:line="3" pos:column="11"/></name></decl>, <decl><type ref="prev"/><name pos:line="3" pos:column="13">n<pos:position pos:line="3" pos:column="14"/></name> <init pos:line="3" pos:column="15">= <expr><literal type="number" pos:line="3" pos:column="17">0<pos:position pos:line="3" pos:column="18"/></literal></expr></init></decl>;<pos:position pos:line="3" pos:column="19"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="4" pos:column="5">apr_pool_t<pos:position pos:line="4" pos:column="15"/></name> <modifier pos:line="4" pos:column="16">*<pos:position pos:line="4" pos:column="17"/></modifier></type><name pos:line="4" pos:column="17">pool<pos:position pos:line="4" pos:column="21"/></name></decl>;<pos:position pos:line="4" pos:column="22"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="5" pos:column="5">lua_State<pos:position pos:line="5" pos:column="14"/></name> <modifier pos:line="5" pos:column="15">*<pos:position pos:line="5" pos:column="16"/></modifier></type><name pos:line="5" pos:column="16">L<pos:position pos:line="5" pos:column="17"/></name></decl>;<pos:position pos:line="5" pos:column="18"/></decl_stmt>
    <decl_stmt><decl><type><specifier pos:line="6" pos:column="5">const<pos:position pos:line="6" pos:column="10"/></specifier> <name pos:line="6" pos:column="11">char<pos:position pos:line="6" pos:column="15"/></name> <modifier pos:line="6" pos:column="16">*<pos:position pos:line="6" pos:column="17"/></modifier></type><name pos:line="6" pos:column="17">filename<pos:position pos:line="6" pos:column="25"/></name></decl>, <modifier pos:line="6" pos:column="27">*<pos:position pos:line="6" pos:column="28"/></modifier><decl><type ref="prev"/><name pos:line="6" pos:column="28">function_name<pos:position pos:line="6" pos:column="41"/></name></decl>;<pos:position pos:line="6" pos:column="42"/></decl_stmt>
    <decl_stmt><decl><type><specifier pos:line="7" pos:column="5">const<pos:position pos:line="7" pos:column="10"/></specifier> <name pos:line="7" pos:column="11">char<pos:position pos:line="7" pos:column="15"/></name> <modifier pos:line="7" pos:column="16">*<pos:position pos:line="7" pos:column="17"/></modifier></type><name><name pos:line="7" pos:column="17">values<pos:position pos:line="7" pos:column="23"/></name><index pos:line="7" pos:column="23">[<expr><literal type="number" pos:line="7" pos:column="24">10<pos:position pos:line="7" pos:column="26"/></literal></expr>]<pos:position pos:line="7" pos:column="27"/></index></name></decl>;<pos:position pos:line="7" pos:column="28"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="8" pos:column="5">ap_lua_vm_spec<pos:position pos:line="8" pos:column="19"/></name> <modifier pos:line="8" pos:column="20">*<pos:position pos:line="8" pos:column="21"/></modifier></type><name pos:line="8" pos:column="21">spec<pos:position pos:line="8" pos:column="25"/></name></decl>;<pos:position pos:line="8" pos:column="26"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="9" pos:column="5">ap_regmatch_t<pos:position pos:line="9" pos:column="18"/></name></type> <name><name pos:line="9" pos:column="19">match<pos:position pos:line="9" pos:column="24"/></name><index pos:line="9" pos:column="24">[<expr><literal type="number" pos:line="9" pos:column="25">10<pos:position pos:line="9" pos:column="27"/></literal></expr>]<pos:position pos:line="9" pos:column="28"/></index></name></decl>;<pos:position pos:line="9" pos:column="29"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="10" pos:column="5">ap_lua_server_cfg<pos:position pos:line="10" pos:column="22"/></name> <modifier pos:line="10" pos:column="23">*<pos:position pos:line="10" pos:column="24"/></modifier></type><name pos:line="10" pos:column="24">server_cfg<pos:position pos:line="10" pos:column="34"/></name> <init pos:line="10" pos:column="35">= <expr><call><name pos:line="10" pos:column="37">ap_get_module_config<pos:position pos:line="10" pos:column="57"/></name><argument_list pos:line="10" pos:column="57">(<argument><expr><name><name pos:line="10" pos:column="58">r<pos:position pos:line="10" pos:column="59"/></name><operator pos:line="10" pos:column="59">-&gt;<pos:position pos:line="10" pos:column="64"/></operator><name pos:line="10" pos:column="61">server<pos:position pos:line="10" pos:column="67"/></name><operator pos:line="10" pos:column="67">-&gt;<pos:position pos:line="10" pos:column="72"/></operator><name pos:line="10" pos:column="69">module_config<pos:position pos:line="10" pos:column="82"/></name></name></expr></argument>,
                                                         <argument><expr><operator pos:line="11" pos:column="58">&amp;<pos:position pos:line="11" pos:column="63"/></operator><name pos:line="11" pos:column="59">lua_module<pos:position pos:line="11" pos:column="69"/></name></expr></argument>)<pos:position pos:line="11" pos:column="70"/></argument_list></call></expr></init></decl>;<pos:position pos:line="11" pos:column="71"/></decl_stmt>
    <decl_stmt><decl><type><specifier pos:line="12" pos:column="5">const<pos:position pos:line="12" pos:column="10"/></specifier> <name pos:line="12" pos:column="11">ap_lua_dir_cfg<pos:position pos:line="12" pos:column="25"/></name> <modifier pos:line="12" pos:column="26">*<pos:position pos:line="12" pos:column="27"/></modifier></type><name pos:line="12" pos:column="27">cfg<pos:position pos:line="12" pos:column="30"/></name> <init pos:line="12" pos:column="31">= <expr><call><name pos:line="12" pos:column="33">ap_get_module_config<pos:position pos:line="12" pos:column="53"/></name><argument_list pos:line="12" pos:column="53">(<argument><expr><name><name pos:line="12" pos:column="54">r<pos:position pos:line="12" pos:column="55"/></name><operator pos:line="12" pos:column="55">-&gt;<pos:position pos:line="12" pos:column="60"/></operator><name pos:line="12" pos:column="57">per_dir_config<pos:position pos:line="12" pos:column="71"/></name></name></expr></argument>,
                                                     <argument><expr><operator pos:line="13" pos:column="54">&amp;<pos:position pos:line="13" pos:column="59"/></operator><name pos:line="13" pos:column="55">lua_module<pos:position pos:line="13" pos:column="65"/></name></expr></argument>)<pos:position pos:line="13" pos:column="66"/></argument_list></call></expr></init></decl>;<pos:position pos:line="13" pos:column="67"/></decl_stmt>
    <for pos:line="14" pos:column="5">for <control pos:line="14" pos:column="9">(<init><expr><name pos:line="14" pos:column="10">n<pos:position pos:line="14" pos:column="11"/></name> <operator pos:line="14" pos:column="12">=<pos:position pos:line="14" pos:column="13"/></operator> <literal type="number" pos:line="14" pos:column="14">0<pos:position pos:line="14" pos:column="15"/></literal></expr>;<pos:position pos:line="14" pos:column="16"/></init> <condition><expr><name pos:line="14" pos:column="17">n<pos:position pos:line="14" pos:column="18"/></name> <operator pos:line="14" pos:column="19">&lt;<pos:position pos:line="14" pos:column="23"/></operator> <name><name pos:line="14" pos:column="21">cfg<pos:position pos:line="14" pos:column="24"/></name><operator pos:line="14" pos:column="24">-&gt;<pos:position pos:line="14" pos:column="29"/></operator><name pos:line="14" pos:column="26">mapped_handlers<pos:position pos:line="14" pos:column="41"/></name><operator pos:line="14" pos:column="41">-&gt;<pos:position pos:line="14" pos:column="46"/></operator><name pos:line="14" pos:column="43">nelts<pos:position pos:line="14" pos:column="48"/></name></name></expr>;<pos:position pos:line="14" pos:column="49"/></condition> <incr><expr><name pos:line="14" pos:column="50">n<pos:position pos:line="14" pos:column="51"/></name><operator pos:line="14" pos:column="51">++<pos:position pos:line="14" pos:column="53"/></operator></expr></incr>)<pos:position pos:line="14" pos:column="54"/></control> <block pos:line="14" pos:column="55">{
        <decl_stmt><decl><type><name pos:line="15" pos:column="9">ap_lua_mapped_handler_spec<pos:position pos:line="15" pos:column="35"/></name> <modifier pos:line="15" pos:column="36">*<pos:position pos:line="15" pos:column="37"/></modifier></type><name pos:line="15" pos:column="37">hook_spec<pos:position pos:line="15" pos:column="46"/></name> <init pos:line="15" pos:column="47">=
            <expr><operator pos:line="16" pos:column="13">(<pos:position pos:line="16" pos:column="14"/></operator><operator pos:line="16" pos:column="14">(<pos:position pos:line="16" pos:column="15"/></operator><name pos:line="16" pos:column="15">ap_lua_mapped_handler_spec<pos:position pos:line="16" pos:column="41"/></name> <operator pos:line="16" pos:column="42">*<pos:position pos:line="16" pos:column="43"/></operator><operator pos:line="16" pos:column="43">*<pos:position pos:line="16" pos:column="44"/></operator><operator pos:line="16" pos:column="44">)<pos:position pos:line="16" pos:column="45"/></operator> <name><name pos:line="16" pos:column="46">cfg<pos:position pos:line="16" pos:column="49"/></name><operator pos:line="16" pos:column="49">-&gt;<pos:position pos:line="16" pos:column="54"/></operator><name pos:line="16" pos:column="51">mapped_handlers<pos:position pos:line="16" pos:column="66"/></name><operator pos:line="16" pos:column="66">-&gt;<pos:position pos:line="16" pos:column="71"/></operator><name pos:line="16" pos:column="68">elts<pos:position pos:line="16" pos:column="72"/></name></name><operator pos:line="16" pos:column="72">)<pos:position pos:line="16" pos:column="73"/></operator><index pos:line="16" pos:column="73">[<expr><name pos:line="16" pos:column="74">n<pos:position pos:line="16" pos:column="75"/></name></expr>]<pos:position pos:line="16" pos:column="76"/></index></expr></init></decl>;<pos:position pos:line="16" pos:column="77"/></decl_stmt>

        <if pos:line="18" pos:column="9">if <condition pos:line="18" pos:column="12">(<expr><name pos:line="18" pos:column="13">hook_spec<pos:position pos:line="18" pos:column="22"/></name> <operator pos:line="18" pos:column="23">==<pos:position pos:line="18" pos:column="25"/></operator> <name pos:line="18" pos:column="26">NULL<pos:position pos:line="18" pos:column="30"/></name></expr>)<pos:position pos:line="18" pos:column="31"/></condition><then pos:line="18" pos:column="31"> <block pos:line="18" pos:column="32">{
            <continue pos:line="19" pos:column="13">continue;<pos:position pos:line="19" pos:column="22"/></continue>
        }<pos:position pos:line="20" pos:column="10"/></block></then></if>
        <if pos:line="21" pos:column="9">if <condition pos:line="21" pos:column="12">(<expr><operator pos:line="21" pos:column="13">!<pos:position pos:line="21" pos:column="14"/></operator><call><name pos:line="21" pos:column="14">ap_regexec<pos:position pos:line="21" pos:column="24"/></name><argument_list pos:line="21" pos:column="24">(<argument><expr><name><name pos:line="21" pos:column="25">hook_spec<pos:position pos:line="21" pos:column="34"/></name><operator pos:line="21" pos:column="34">-&gt;<pos:position pos:line="21" pos:column="39"/></operator><name pos:line="21" pos:column="36">uri_pattern<pos:position pos:line="21" pos:column="47"/></name></name></expr></argument>, <argument><expr><name><name pos:line="21" pos:column="49">r<pos:position pos:line="21" pos:column="50"/></name><operator pos:line="21" pos:column="50">-&gt;<pos:position pos:line="21" pos:column="55"/></operator><name pos:line="21" pos:column="52">uri<pos:position pos:line="21" pos:column="55"/></name></name></expr></argument>, <argument><expr><literal type="number" pos:line="21" pos:column="57">10<pos:position pos:line="21" pos:column="59"/></literal></expr></argument>, <argument><expr><name pos:line="21" pos:column="61">match<pos:position pos:line="21" pos:column="66"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="21" pos:column="68">0<pos:position pos:line="21" pos:column="69"/></literal></expr></argument>)<pos:position pos:line="21" pos:column="70"/></argument_list></call></expr>)<pos:position pos:line="21" pos:column="71"/></condition><then pos:line="21" pos:column="71"> <block pos:line="21" pos:column="72">{
            <decl_stmt><decl><type><name pos:line="22" pos:column="13">int<pos:position pos:line="22" pos:column="16"/></name></type> <name pos:line="22" pos:column="17">i<pos:position pos:line="22" pos:column="18"/></name></decl>;<pos:position pos:line="22" pos:column="19"/></decl_stmt>
            <for pos:line="23" pos:column="13">for <control pos:line="23" pos:column="17">(<init><expr><name pos:line="23" pos:column="18">i<pos:position pos:line="23" pos:column="19"/></name><operator pos:line="23" pos:column="19">=<pos:position pos:line="23" pos:column="20"/></operator><literal type="number" pos:line="23" pos:column="20">0<pos:position pos:line="23" pos:column="21"/></literal></expr> ;<pos:position pos:line="23" pos:column="23"/></init> <condition><expr><name pos:line="23" pos:column="24">i<pos:position pos:line="23" pos:column="25"/></name> <operator pos:line="23" pos:column="26">&lt;<pos:position pos:line="23" pos:column="30"/></operator> <literal type="number" pos:line="23" pos:column="28">10<pos:position pos:line="23" pos:column="30"/></literal></expr>;<pos:position pos:line="23" pos:column="31"/></condition> <incr><expr><name pos:line="23" pos:column="32">i<pos:position pos:line="23" pos:column="33"/></name><operator pos:line="23" pos:column="33">++<pos:position pos:line="23" pos:column="35"/></operator></expr></incr>)<pos:position pos:line="23" pos:column="36"/></control> <block pos:line="23" pos:column="37">{
                <if pos:line="24" pos:column="17">if <condition pos:line="24" pos:column="20">(<expr><name><name pos:line="24" pos:column="21">match<pos:position pos:line="24" pos:column="26"/></name><index pos:line="24" pos:column="26">[<expr><name pos:line="24" pos:column="27">i<pos:position pos:line="24" pos:column="28"/></name></expr>]<pos:position pos:line="24" pos:column="29"/></index></name><operator pos:line="24" pos:column="29">.<pos:position pos:line="24" pos:column="30"/></operator><name pos:line="24" pos:column="30">rm_eo<pos:position pos:line="24" pos:column="35"/></name> <operator pos:line="24" pos:column="36">&gt;=<pos:position pos:line="24" pos:column="41"/></operator> <literal type="number" pos:line="24" pos:column="39">0<pos:position pos:line="24" pos:column="40"/></literal></expr>)<pos:position pos:line="24" pos:column="41"/></condition><then pos:line="24" pos:column="41"> <block pos:line="24" pos:column="42">{
                    <expr_stmt><expr><name><name pos:line="25" pos:column="21">values<pos:position pos:line="25" pos:column="27"/></name><index pos:line="25" pos:column="27">[<expr><name pos:line="25" pos:column="28">i<pos:position pos:line="25" pos:column="29"/></name></expr>]<pos:position pos:line="25" pos:column="30"/></index></name> <operator pos:line="25" pos:column="31">=<pos:position pos:line="25" pos:column="32"/></operator> <call><name pos:line="25" pos:column="33">apr_pstrndup<pos:position pos:line="25" pos:column="45"/></name><argument_list pos:line="25" pos:column="45">(<argument><expr><name><name pos:line="25" pos:column="46">r<pos:position pos:line="25" pos:column="47"/></name><operator pos:line="25" pos:column="47">-&gt;<pos:position pos:line="25" pos:column="52"/></operator><name pos:line="25" pos:column="49">pool<pos:position pos:line="25" pos:column="53"/></name></name></expr></argument>, <argument><expr><name><name pos:line="25" pos:column="55">r<pos:position pos:line="25" pos:column="56"/></name><operator pos:line="25" pos:column="56">-&gt;<pos:position pos:line="25" pos:column="61"/></operator><name pos:line="25" pos:column="58">uri<pos:position pos:line="25" pos:column="61"/></name></name><operator pos:line="25" pos:column="61">+<pos:position pos:line="25" pos:column="62"/></operator><name><name pos:line="25" pos:column="62">match<pos:position pos:line="25" pos:column="67"/></name><index pos:line="25" pos:column="67">[<expr><name pos:line="25" pos:column="68">i<pos:position pos:line="25" pos:column="69"/></name></expr>]<pos:position pos:line="25" pos:column="70"/></index></name><operator pos:line="25" pos:column="70">.<pos:position pos:line="25" pos:column="71"/></operator><name pos:line="25" pos:column="71">rm_so<pos:position pos:line="25" pos:column="76"/></name></expr></argument>, <argument><expr><name><name pos:line="25" pos:column="78">match<pos:position pos:line="25" pos:column="83"/></name><index pos:line="25" pos:column="83">[<expr><name pos:line="25" pos:column="84">i<pos:position pos:line="25" pos:column="85"/></name></expr>]<pos:position pos:line="25" pos:column="86"/></index></name><operator pos:line="25" pos:column="86">.<pos:position pos:line="25" pos:column="87"/></operator><name pos:line="25" pos:column="87">rm_eo<pos:position pos:line="25" pos:column="92"/></name> <operator pos:line="25" pos:column="93">-<pos:position pos:line="25" pos:column="94"/></operator> <name><name pos:line="25" pos:column="95">match<pos:position pos:line="25" pos:column="100"/></name><index pos:line="25" pos:column="100">[<expr><name pos:line="25" pos:column="101">i<pos:position pos:line="25" pos:column="102"/></name></expr>]<pos:position pos:line="25" pos:column="103"/></index></name><operator pos:line="25" pos:column="103">.<pos:position pos:line="25" pos:column="104"/></operator><name pos:line="25" pos:column="104">rm_so<pos:position pos:line="25" pos:column="109"/></name></expr></argument>)<pos:position pos:line="25" pos:column="110"/></argument_list></call></expr>;<pos:position pos:line="25" pos:column="111"/></expr_stmt>
                }<pos:position pos:line="26" pos:column="18"/></block></then>
                <else pos:line="27" pos:column="17">else <block type="pseudo"><expr_stmt><expr><name><name pos:line="27" pos:column="22">values<pos:position pos:line="27" pos:column="28"/></name><index pos:line="27" pos:column="28">[<expr><name pos:line="27" pos:column="29">i<pos:position pos:line="27" pos:column="30"/></name></expr>]<pos:position pos:line="27" pos:column="31"/></index></name> <operator pos:line="27" pos:column="32">=<pos:position pos:line="27" pos:column="33"/></operator> <literal type="string" pos:line="27" pos:column="34">""<pos:position pos:line="27" pos:column="36"/></literal></expr>;<pos:position pos:line="27" pos:column="37"/></expr_stmt></block></else></if>
            }<pos:position pos:line="28" pos:column="14"/></block></for>
            <expr_stmt><expr><name pos:line="29" pos:column="13">filename<pos:position pos:line="29" pos:column="21"/></name> <operator pos:line="29" pos:column="22">=<pos:position pos:line="29" pos:column="23"/></operator> <call><name pos:line="29" pos:column="24">ap_lua_interpolate_string<pos:position pos:line="29" pos:column="49"/></name><argument_list pos:line="29" pos:column="49">(<argument><expr><name><name pos:line="29" pos:column="50">r<pos:position pos:line="29" pos:column="51"/></name><operator pos:line="29" pos:column="51">-&gt;<pos:position pos:line="29" pos:column="56"/></operator><name pos:line="29" pos:column="53">pool<pos:position pos:line="29" pos:column="57"/></name></name></expr></argument>, <argument><expr><name><name pos:line="29" pos:column="59">hook_spec<pos:position pos:line="29" pos:column="68"/></name><operator pos:line="29" pos:column="68">-&gt;<pos:position pos:line="29" pos:column="73"/></operator><name pos:line="29" pos:column="70">file_name<pos:position pos:line="29" pos:column="79"/></name></name></expr></argument>, <argument><expr><name pos:line="29" pos:column="81">values<pos:position pos:line="29" pos:column="87"/></name></expr></argument>)<pos:position pos:line="29" pos:column="88"/></argument_list></call></expr>;<pos:position pos:line="29" pos:column="89"/></expr_stmt>
            <expr_stmt><expr><name pos:line="30" pos:column="13">function_name<pos:position pos:line="30" pos:column="26"/></name> <operator pos:line="30" pos:column="27">=<pos:position pos:line="30" pos:column="28"/></operator> <call><name pos:line="30" pos:column="29">ap_lua_interpolate_string<pos:position pos:line="30" pos:column="54"/></name><argument_list pos:line="30" pos:column="54">(<argument><expr><name><name pos:line="30" pos:column="55">r<pos:position pos:line="30" pos:column="56"/></name><operator pos:line="30" pos:column="56">-&gt;<pos:position pos:line="30" pos:column="61"/></operator><name pos:line="30" pos:column="58">pool<pos:position pos:line="30" pos:column="62"/></name></name></expr></argument>, <argument><expr><name><name pos:line="30" pos:column="64">hook_spec<pos:position pos:line="30" pos:column="73"/></name><operator pos:line="30" pos:column="73">-&gt;<pos:position pos:line="30" pos:column="78"/></operator><name pos:line="30" pos:column="75">function_name<pos:position pos:line="30" pos:column="88"/></name></name></expr></argument>, <argument><expr><name pos:line="30" pos:column="90">values<pos:position pos:line="30" pos:column="96"/></name></expr></argument>)<pos:position pos:line="30" pos:column="97"/></argument_list></call></expr>;<pos:position pos:line="30" pos:column="98"/></expr_stmt>
            <expr_stmt><expr><name pos:line="31" pos:column="13">spec<pos:position pos:line="31" pos:column="17"/></name> <operator pos:line="31" pos:column="18">=<pos:position pos:line="31" pos:column="19"/></operator> <call><name pos:line="31" pos:column="20">create_vm_spec<pos:position pos:line="31" pos:column="34"/></name><argument_list pos:line="31" pos:column="34">(<argument><expr><operator pos:line="31" pos:column="35">&amp;<pos:position pos:line="31" pos:column="40"/></operator><name pos:line="31" pos:column="36">pool<pos:position pos:line="31" pos:column="40"/></name></expr></argument>, <argument><expr><name pos:line="31" pos:column="42">r<pos:position pos:line="31" pos:column="43"/></name></expr></argument>, <argument><expr><name pos:line="31" pos:column="45">cfg<pos:position pos:line="31" pos:column="48"/></name></expr></argument>, <argument><expr><name pos:line="31" pos:column="50">server_cfg<pos:position pos:line="31" pos:column="60"/></name></expr></argument>,
                                    <argument><expr><name pos:line="32" pos:column="37">filename<pos:position pos:line="32" pos:column="45"/></name></expr></argument>,
                                    <argument><expr><name><name pos:line="33" pos:column="37">hook_spec<pos:position pos:line="33" pos:column="46"/></name><operator pos:line="33" pos:column="46">-&gt;<pos:position pos:line="33" pos:column="51"/></operator><name pos:line="33" pos:column="48">bytecode<pos:position pos:line="33" pos:column="56"/></name></name></expr></argument>,
                                    <argument><expr><name><name pos:line="34" pos:column="37">hook_spec<pos:position pos:line="34" pos:column="46"/></name><operator pos:line="34" pos:column="46">-&gt;<pos:position pos:line="34" pos:column="51"/></operator><name pos:line="34" pos:column="48">bytecode_len<pos:position pos:line="34" pos:column="60"/></name></name></expr></argument>,
                                    <argument><expr><name pos:line="35" pos:column="37">function_name<pos:position pos:line="35" pos:column="50"/></name></expr></argument>,
                                    <argument><expr><literal type="string" pos:line="36" pos:column="37">"mapped handler"<pos:position pos:line="36" pos:column="53"/></literal></expr></argument>)<pos:position pos:line="36" pos:column="54"/></argument_list></call></expr>;<pos:position pos:line="36" pos:column="55"/></expr_stmt>
            <expr_stmt><expr><name pos:line="37" pos:column="13">L<pos:position pos:line="37" pos:column="14"/></name> <operator pos:line="37" pos:column="15">=<pos:position pos:line="37" pos:column="16"/></operator> <call><name pos:line="37" pos:column="17">ap_lua_get_lua_state<pos:position pos:line="37" pos:column="37"/></name><argument_list pos:line="37" pos:column="37">(<argument><expr><name pos:line="37" pos:column="38">pool<pos:position pos:line="37" pos:column="42"/></name></expr></argument>, <argument><expr><name pos:line="37" pos:column="44">spec<pos:position pos:line="37" pos:column="48"/></name></expr></argument>, <argument><expr><name pos:line="37" pos:column="50">r<pos:position pos:line="37" pos:column="51"/></name></expr></argument>)<pos:position pos:line="37" pos:column="52"/></argument_list></call></expr>;<pos:position pos:line="37" pos:column="53"/></expr_stmt>

            <if pos:line="39" pos:column="13">if <condition pos:line="39" pos:column="16">(<expr><operator pos:line="39" pos:column="17">!<pos:position pos:line="39" pos:column="18"/></operator><name pos:line="39" pos:column="18">L<pos:position pos:line="39" pos:column="19"/></name></expr>)<pos:position pos:line="39" pos:column="20"/></condition><then pos:line="39" pos:column="20"> <block pos:line="39" pos:column="21">{
                <expr_stmt><expr><call><name pos:line="40" pos:column="17">ap_log_rerror<pos:position pos:line="40" pos:column="30"/></name><argument_list pos:line="40" pos:column="30">(<argument><expr><name pos:line="40" pos:column="31">APLOG_MARK<pos:position pos:line="40" pos:column="41"/></name></expr></argument>, <argument><expr><name pos:line="40" pos:column="43">APLOG_CRIT<pos:position pos:line="40" pos:column="53"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="40" pos:column="55">0<pos:position pos:line="40" pos:column="56"/></literal></expr></argument>, <argument><expr><name pos:line="40" pos:column="58">r<pos:position pos:line="40" pos:column="59"/></name></expr></argument>, <argument><expr><call><name pos:line="40" pos:column="61">APLOGNO<pos:position pos:line="40" pos:column="68"/></name><argument_list pos:line="40" pos:column="68">(<argument><expr><literal type="number" pos:line="40" pos:column="69">02330<pos:position pos:line="40" pos:column="74"/></literal></expr></argument>)<pos:position pos:line="40" pos:column="75"/></argument_list></call>
                                <literal type="string" pos:line="41" pos:column="33">"lua: Failed to obtain lua interpreter for %s %s"<pos:position pos:line="41" pos:column="82"/></literal></expr></argument>,
                                <argument><expr><name pos:line="42" pos:column="33">function_name<pos:position pos:line="42" pos:column="46"/></name></expr></argument>, <argument><expr><name pos:line="42" pos:column="48">filename<pos:position pos:line="42" pos:column="56"/></name></expr></argument>)<pos:position pos:line="42" pos:column="57"/></argument_list></call></expr>;<pos:position pos:line="42" pos:column="58"/></expr_stmt>
                <expr_stmt><expr><call><name pos:line="43" pos:column="17">ap_lua_release_state<pos:position pos:line="43" pos:column="37"/></name><argument_list pos:line="43" pos:column="37">(<argument><expr><name pos:line="43" pos:column="38">L<pos:position pos:line="43" pos:column="39"/></name></expr></argument>, <argument><expr><name pos:line="43" pos:column="41">spec<pos:position pos:line="43" pos:column="45"/></name></expr></argument>, <argument><expr><name pos:line="43" pos:column="47">r<pos:position pos:line="43" pos:column="48"/></name></expr></argument>)<pos:position pos:line="43" pos:column="49"/></argument_list></call></expr>;<pos:position pos:line="43" pos:column="50"/></expr_stmt>
                <return pos:line="44" pos:column="17">return <expr><name pos:line="44" pos:column="24">HTTP_INTERNAL_SERVER_ERROR<pos:position pos:line="44" pos:column="50"/></name></expr>;<pos:position pos:line="44" pos:column="51"/></return>
            }<pos:position pos:line="45" pos:column="14"/></block></then></if>

            <if pos:line="47" pos:column="13">if <condition pos:line="47" pos:column="16">(<expr><name pos:line="47" pos:column="17">function_name<pos:position pos:line="47" pos:column="30"/></name> <operator pos:line="47" pos:column="31">!=<pos:position pos:line="47" pos:column="33"/></operator> <name pos:line="47" pos:column="34">NULL<pos:position pos:line="47" pos:column="38"/></name></expr>)<pos:position pos:line="47" pos:column="39"/></condition><then pos:line="47" pos:column="39"> <block pos:line="47" pos:column="40">{
                <expr_stmt><expr><call><name pos:line="48" pos:column="17">lua_getglobal<pos:position pos:line="48" pos:column="30"/></name><argument_list pos:line="48" pos:column="30">(<argument><expr><name pos:line="48" pos:column="31">L<pos:position pos:line="48" pos:column="32"/></name></expr></argument>, <argument><expr><name pos:line="48" pos:column="34">function_name<pos:position pos:line="48" pos:column="47"/></name></expr></argument>)<pos:position pos:line="48" pos:column="48"/></argument_list></call></expr>;<pos:position pos:line="48" pos:column="49"/></expr_stmt>
                <if pos:line="49" pos:column="17">if <condition pos:line="49" pos:column="20">(<expr><operator pos:line="49" pos:column="21">!<pos:position pos:line="49" pos:column="22"/></operator><call><name pos:line="49" pos:column="22">lua_isfunction<pos:position pos:line="49" pos:column="36"/></name><argument_list pos:line="49" pos:column="36">(<argument><expr><name pos:line="49" pos:column="37">L<pos:position pos:line="49" pos:column="38"/></name></expr></argument>, <argument><expr><operator pos:line="49" pos:column="40">-<pos:position pos:line="49" pos:column="41"/></operator><literal type="number" pos:line="49" pos:column="41">1<pos:position pos:line="49" pos:column="42"/></literal></expr></argument>)<pos:position pos:line="49" pos:column="43"/></argument_list></call></expr>)<pos:position pos:line="49" pos:column="44"/></condition><then pos:line="49" pos:column="44"> <block pos:line="49" pos:column="45">{
                    <expr_stmt><expr><call><name pos:line="50" pos:column="21">ap_log_rerror<pos:position pos:line="50" pos:column="34"/></name><argument_list pos:line="50" pos:column="34">(<argument><expr><name pos:line="50" pos:column="35">APLOG_MARK<pos:position pos:line="50" pos:column="45"/></name></expr></argument>, <argument><expr><name pos:line="50" pos:column="47">APLOG_CRIT<pos:position pos:line="50" pos:column="57"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="50" pos:column="59">0<pos:position pos:line="50" pos:column="60"/></literal></expr></argument>, <argument><expr><name pos:line="50" pos:column="62">r<pos:position pos:line="50" pos:column="63"/></name></expr></argument>, <argument><expr><call><name pos:line="50" pos:column="65">APLOGNO<pos:position pos:line="50" pos:column="72"/></name><argument_list pos:line="50" pos:column="72">(<argument><expr><literal type="number" pos:line="50" pos:column="73">02331<pos:position pos:line="50" pos:column="78"/></literal></expr></argument>)<pos:position pos:line="50" pos:column="79"/></argument_list></call>
                                    <literal type="string" pos:line="51" pos:column="37">"lua: Unable to find function %s in %s"<pos:position pos:line="51" pos:column="76"/></literal></expr></argument>,
                                    <argument><expr><name pos:line="52" pos:column="37">function_name<pos:position pos:line="52" pos:column="50"/></name></expr></argument>,
                                    <argument><expr><name pos:line="53" pos:column="37">filename<pos:position pos:line="53" pos:column="45"/></name></expr></argument>)<pos:position pos:line="53" pos:column="46"/></argument_list></call></expr>;<pos:position pos:line="53" pos:column="47"/></expr_stmt>
                    <expr_stmt><expr><call><name pos:line="54" pos:column="21">ap_lua_release_state<pos:position pos:line="54" pos:column="41"/></name><argument_list pos:line="54" pos:column="41">(<argument><expr><name pos:line="54" pos:column="42">L<pos:position pos:line="54" pos:column="43"/></name></expr></argument>, <argument><expr><name pos:line="54" pos:column="45">spec<pos:position pos:line="54" pos:column="49"/></name></expr></argument>, <argument><expr><name pos:line="54" pos:column="51">r<pos:position pos:line="54" pos:column="52"/></name></expr></argument>)<pos:position pos:line="54" pos:column="53"/></argument_list></call></expr>;<pos:position pos:line="54" pos:column="54"/></expr_stmt>
                    <return pos:line="55" pos:column="21">return <expr><name pos:line="55" pos:column="28">HTTP_INTERNAL_SERVER_ERROR<pos:position pos:line="55" pos:column="54"/></name></expr>;<pos:position pos:line="55" pos:column="55"/></return>
                }<pos:position pos:line="56" pos:column="18"/></block></then></if>

                <expr_stmt><expr><call><name pos:line="58" pos:column="17">ap_lua_run_lua_request<pos:position pos:line="58" pos:column="39"/></name><argument_list pos:line="58" pos:column="39">(<argument><expr><name pos:line="58" pos:column="40">L<pos:position pos:line="58" pos:column="41"/></name></expr></argument>, <argument><expr><name pos:line="58" pos:column="43">r<pos:position pos:line="58" pos:column="44"/></name></expr></argument>)<pos:position pos:line="58" pos:column="45"/></argument_list></call></expr>;<pos:position pos:line="58" pos:column="46"/></expr_stmt>
            }<pos:position pos:line="59" pos:column="14"/></block></then>
            <else pos:line="60" pos:column="13">else <block pos:line="60" pos:column="18">{
                <decl_stmt><decl><type><name pos:line="61" pos:column="17">int<pos:position pos:line="61" pos:column="20"/></name></type> <name pos:line="61" pos:column="21">t<pos:position pos:line="61" pos:column="22"/></name></decl>;<pos:position pos:line="61" pos:column="23"/></decl_stmt>
                <expr_stmt><expr><call><name pos:line="62" pos:column="17">ap_lua_run_lua_request<pos:position pos:line="62" pos:column="39"/></name><argument_list pos:line="62" pos:column="39">(<argument><expr><name pos:line="62" pos:column="40">L<pos:position pos:line="62" pos:column="41"/></name></expr></argument>, <argument><expr><name pos:line="62" pos:column="43">r<pos:position pos:line="62" pos:column="44"/></name></expr></argument>)<pos:position pos:line="62" pos:column="45"/></argument_list></call></expr>;<pos:position pos:line="62" pos:column="46"/></expr_stmt>

                <expr_stmt><expr><name pos:line="64" pos:column="17">t<pos:position pos:line="64" pos:column="18"/></name> <operator pos:line="64" pos:column="19">=<pos:position pos:line="64" pos:column="20"/></operator> <call><name pos:line="64" pos:column="21">lua_gettop<pos:position pos:line="64" pos:column="31"/></name><argument_list pos:line="64" pos:column="31">(<argument><expr><name pos:line="64" pos:column="32">L<pos:position pos:line="64" pos:column="33"/></name></expr></argument>)<pos:position pos:line="64" pos:column="34"/></argument_list></call></expr>;<pos:position pos:line="64" pos:column="35"/></expr_stmt>
                <expr_stmt><expr><call><name pos:line="65" pos:column="17">lua_setglobal<pos:position pos:line="65" pos:column="30"/></name><argument_list pos:line="65" pos:column="30">(<argument><expr><name pos:line="65" pos:column="31">L<pos:position pos:line="65" pos:column="32"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="65" pos:column="34">"r"<pos:position pos:line="65" pos:column="37"/></literal></expr></argument>)<pos:position pos:line="65" pos:column="38"/></argument_list></call></expr>;<pos:position pos:line="65" pos:column="39"/></expr_stmt>
                <expr_stmt><expr><call><name pos:line="66" pos:column="17">lua_settop<pos:position pos:line="66" pos:column="27"/></name><argument_list pos:line="66" pos:column="27">(<argument><expr><name pos:line="66" pos:column="28">L<pos:position pos:line="66" pos:column="29"/></name></expr></argument>, <argument><expr><name pos:line="66" pos:column="31">t<pos:position pos:line="66" pos:column="32"/></name></expr></argument>)<pos:position pos:line="66" pos:column="33"/></argument_list></call></expr>;<pos:position pos:line="66" pos:column="34"/></expr_stmt>
            }<pos:position pos:line="67" pos:column="14"/></block></else></if>

            <if pos:line="69" pos:column="13">if <condition pos:line="69" pos:column="16">(<expr><call><name pos:line="69" pos:column="17">lua_pcall<pos:position pos:line="69" pos:column="26"/></name><argument_list pos:line="69" pos:column="26">(<argument><expr><name pos:line="69" pos:column="27">L<pos:position pos:line="69" pos:column="28"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="69" pos:column="30">1<pos:position pos:line="69" pos:column="31"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="69" pos:column="33">1<pos:position pos:line="69" pos:column="34"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="69" pos:column="36">0<pos:position pos:line="69" pos:column="37"/></literal></expr></argument>)<pos:position pos:line="69" pos:column="38"/></argument_list></call></expr>)<pos:position pos:line="69" pos:column="39"/></condition><then pos:line="69" pos:column="39"> <block pos:line="69" pos:column="40">{
                <expr_stmt><expr><call><name pos:line="70" pos:column="17">report_lua_error<pos:position pos:line="70" pos:column="33"/></name><argument_list pos:line="70" pos:column="33">(<argument><expr><name pos:line="70" pos:column="34">L<pos:position pos:line="70" pos:column="35"/></name></expr></argument>, <argument><expr><name pos:line="70" pos:column="37">r<pos:position pos:line="70" pos:column="38"/></name></expr></argument>)<pos:position pos:line="70" pos:column="39"/></argument_list></call></expr>;<pos:position pos:line="70" pos:column="40"/></expr_stmt>
                <expr_stmt><expr><call><name pos:line="71" pos:column="17">ap_lua_release_state<pos:position pos:line="71" pos:column="37"/></name><argument_list pos:line="71" pos:column="37">(<argument><expr><name pos:line="71" pos:column="38">L<pos:position pos:line="71" pos:column="39"/></name></expr></argument>, <argument><expr><name pos:line="71" pos:column="41">spec<pos:position pos:line="71" pos:column="45"/></name></expr></argument>, <argument><expr><name pos:line="71" pos:column="47">r<pos:position pos:line="71" pos:column="48"/></name></expr></argument>)<pos:position pos:line="71" pos:column="49"/></argument_list></call></expr>;<pos:position pos:line="71" pos:column="50"/></expr_stmt>
                <return pos:line="72" pos:column="17">return <expr><name pos:line="72" pos:column="24">HTTP_INTERNAL_SERVER_ERROR<pos:position pos:line="72" pos:column="50"/></name></expr>;<pos:position pos:line="72" pos:column="51"/></return>
            }<pos:position pos:line="73" pos:column="14"/></block></then></if>
            <expr_stmt><expr><name pos:line="74" pos:column="13">rc<pos:position pos:line="74" pos:column="15"/></name> <operator pos:line="74" pos:column="16">=<pos:position pos:line="74" pos:column="17"/></operator> <name pos:line="74" pos:column="18">DECLINED<pos:position pos:line="74" pos:column="26"/></name></expr>;<pos:position pos:line="74" pos:column="27"/></expr_stmt>
            <if pos:line="75" pos:column="13">if <condition pos:line="75" pos:column="16">(<expr><call><name pos:line="75" pos:column="17">lua_isnumber<pos:position pos:line="75" pos:column="29"/></name><argument_list pos:line="75" pos:column="29">(<argument><expr><name pos:line="75" pos:column="30">L<pos:position pos:line="75" pos:column="31"/></name></expr></argument>, <argument><expr><operator pos:line="75" pos:column="33">-<pos:position pos:line="75" pos:column="34"/></operator><literal type="number" pos:line="75" pos:column="34">1<pos:position pos:line="75" pos:column="35"/></literal></expr></argument>)<pos:position pos:line="75" pos:column="36"/></argument_list></call></expr>)<pos:position pos:line="75" pos:column="37"/></condition><then pos:line="75" pos:column="37"> <block pos:line="75" pos:column="38">{
                <expr_stmt><expr><name pos:line="76" pos:column="17">rc<pos:position pos:line="76" pos:column="19"/></name> <operator pos:line="76" pos:column="20">=<pos:position pos:line="76" pos:column="21"/></operator> <call><name pos:line="76" pos:column="22">lua_tointeger<pos:position pos:line="76" pos:column="35"/></name><argument_list pos:line="76" pos:column="35">(<argument><expr><name pos:line="76" pos:column="36">L<pos:position pos:line="76" pos:column="37"/></name></expr></argument>, <argument><expr><operator pos:line="76" pos:column="39">-<pos:position pos:line="76" pos:column="40"/></operator><literal type="number" pos:line="76" pos:column="40">1<pos:position pos:line="76" pos:column="41"/></literal></expr></argument>)<pos:position pos:line="76" pos:column="42"/></argument_list></call></expr>;<pos:position pos:line="76" pos:column="43"/></expr_stmt>
            }<pos:position pos:line="77" pos:column="14"/></block></then>
            <else pos:line="78" pos:column="13">else <block pos:line="78" pos:column="18">{ 
                <expr_stmt><expr><call><name pos:line="79" pos:column="17">ap_log_rerror<pos:position pos:line="79" pos:column="30"/></name><argument_list pos:line="79" pos:column="30">(<argument><expr><name pos:line="79" pos:column="31">APLOG_MARK<pos:position pos:line="79" pos:column="41"/></name></expr></argument>, <argument><expr><name pos:line="79" pos:column="43">APLOG_WARNING<pos:position pos:line="79" pos:column="56"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="79" pos:column="58">0<pos:position pos:line="79" pos:column="59"/></literal></expr></argument>, <argument><expr><name pos:line="79" pos:column="61">r<pos:position pos:line="79" pos:column="62"/></name></expr></argument>, <argument><expr><call><name pos:line="79" pos:column="64">APLOGNO<pos:position pos:line="79" pos:column="71"/></name><argument_list pos:line="79" pos:column="71">(<argument><expr><literal type="number" pos:line="79" pos:column="72">02483<pos:position pos:line="79" pos:column="77"/></literal></expr></argument>)<pos:position pos:line="79" pos:column="78"/></argument_list></call>
                              <literal type="string" pos:line="80" pos:column="31">"lua: Lua handler %s in %s did not return a value, assuming apache2.OK"<pos:position pos:line="80" pos:column="102"/></literal></expr></argument>,
                              <argument><expr><name pos:line="81" pos:column="31">function_name<pos:position pos:line="81" pos:column="44"/></name></expr></argument>,
                              <argument><expr><name pos:line="82" pos:column="31">filename<pos:position pos:line="82" pos:column="39"/></name></expr></argument>)<pos:position pos:line="82" pos:column="40"/></argument_list></call></expr>;<pos:position pos:line="82" pos:column="41"/></expr_stmt>
                <expr_stmt><expr><name pos:line="83" pos:column="17">rc<pos:position pos:line="83" pos:column="19"/></name> <operator pos:line="83" pos:column="20">=<pos:position pos:line="83" pos:column="21"/></operator> <name pos:line="83" pos:column="22">OK<pos:position pos:line="83" pos:column="24"/></name></expr>;<pos:position pos:line="83" pos:column="25"/></expr_stmt>
            }<pos:position pos:line="84" pos:column="14"/></block></else></if>
            <expr_stmt><expr><call><name pos:line="85" pos:column="13">ap_lua_release_state<pos:position pos:line="85" pos:column="33"/></name><argument_list pos:line="85" pos:column="33">(<argument><expr><name pos:line="85" pos:column="34">L<pos:position pos:line="85" pos:column="35"/></name></expr></argument>, <argument><expr><name pos:line="85" pos:column="37">spec<pos:position pos:line="85" pos:column="41"/></name></expr></argument>, <argument><expr><name pos:line="85" pos:column="43">r<pos:position pos:line="85" pos:column="44"/></name></expr></argument>)<pos:position pos:line="85" pos:column="45"/></argument_list></call></expr>;<pos:position pos:line="85" pos:column="46"/></expr_stmt>
            <if pos:line="86" pos:column="13">if <condition pos:line="86" pos:column="16">(<expr><name pos:line="86" pos:column="17">rc<pos:position pos:line="86" pos:column="19"/></name> <operator pos:line="86" pos:column="20">!=<pos:position pos:line="86" pos:column="22"/></operator> <name pos:line="86" pos:column="23">DECLINED<pos:position pos:line="86" pos:column="31"/></name></expr>)<pos:position pos:line="86" pos:column="32"/></condition><then pos:line="86" pos:column="32"> <block pos:line="86" pos:column="33">{
                <return pos:line="87" pos:column="17">return <expr><name pos:line="87" pos:column="24">rc<pos:position pos:line="87" pos:column="26"/></name></expr>;<pos:position pos:line="87" pos:column="27"/></return>
            }<pos:position pos:line="88" pos:column="14"/></block></then></if>
        }<pos:position pos:line="89" pos:column="10"/></block></then></if>
    }<pos:position pos:line="90" pos:column="6"/></block></for>
    <return pos:line="91" pos:column="5">return <expr><name pos:line="91" pos:column="12">DECLINED<pos:position pos:line="91" pos:column="20"/></name></expr>;<pos:position pos:line="91" pos:column="21"/></return>
}<pos:position pos:line="92" pos:column="2"/></block></function></unit>

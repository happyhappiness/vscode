<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/httpd/gumtree/httpd_function_1393.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">int<pos:position pos:line="1" pos:column="4"/></name></type> <name pos:line="1" pos:column="5">ssl_init_Module<pos:position pos:line="1" pos:column="20"/></name><parameter_list pos:line="1" pos:column="20">(<parameter><decl><type><name pos:line="1" pos:column="21">apr_pool_t<pos:position pos:line="1" pos:column="31"/></name> <modifier pos:line="1" pos:column="32">*<pos:position pos:line="1" pos:column="33"/></modifier></type><name pos:line="1" pos:column="33">p<pos:position pos:line="1" pos:column="34"/></name></decl></parameter>, <parameter><decl><type><name pos:line="1" pos:column="36">apr_pool_t<pos:position pos:line="1" pos:column="46"/></name> <modifier pos:line="1" pos:column="47">*<pos:position pos:line="1" pos:column="48"/></modifier></type><name pos:line="1" pos:column="48">plog<pos:position pos:line="1" pos:column="52"/></name></decl></parameter>,
                    <parameter><decl><type><name pos:line="2" pos:column="21">apr_pool_t<pos:position pos:line="2" pos:column="31"/></name> <modifier pos:line="2" pos:column="32">*<pos:position pos:line="2" pos:column="33"/></modifier></type><name pos:line="2" pos:column="33">ptemp<pos:position pos:line="2" pos:column="38"/></name></decl></parameter>,
                    <parameter><decl><type><name pos:line="3" pos:column="21">server_rec<pos:position pos:line="3" pos:column="31"/></name> <modifier pos:line="3" pos:column="32">*<pos:position pos:line="3" pos:column="33"/></modifier></type><name pos:line="3" pos:column="33">base_server<pos:position pos:line="3" pos:column="44"/></name></decl></parameter>)<pos:position pos:line="3" pos:column="45"/></parameter_list>
<block pos:line="4" pos:column="1">{
    <decl_stmt><decl><type><name pos:line="5" pos:column="5">SSLModConfigRec<pos:position pos:line="5" pos:column="20"/></name> <modifier pos:line="5" pos:column="21">*<pos:position pos:line="5" pos:column="22"/></modifier></type><name pos:line="5" pos:column="22">mc<pos:position pos:line="5" pos:column="24"/></name> <init pos:line="5" pos:column="25">= <expr><call><name pos:line="5" pos:column="27">myModConfig<pos:position pos:line="5" pos:column="38"/></name><argument_list pos:line="5" pos:column="38">(<argument><expr><name pos:line="5" pos:column="39">base_server<pos:position pos:line="5" pos:column="50"/></name></expr></argument>)<pos:position pos:line="5" pos:column="51"/></argument_list></call></expr></init></decl>;<pos:position pos:line="5" pos:column="52"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="6" pos:column="5">SSLSrvConfigRec<pos:position pos:line="6" pos:column="20"/></name> <modifier pos:line="6" pos:column="21">*<pos:position pos:line="6" pos:column="22"/></modifier></type><name pos:line="6" pos:column="22">sc<pos:position pos:line="6" pos:column="24"/></name></decl>;<pos:position pos:line="6" pos:column="25"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="7" pos:column="5">server_rec<pos:position pos:line="7" pos:column="15"/></name> <modifier pos:line="7" pos:column="16">*<pos:position pos:line="7" pos:column="17"/></modifier></type><name pos:line="7" pos:column="17">s<pos:position pos:line="7" pos:column="18"/></name></decl>;<pos:position pos:line="7" pos:column="19"/></decl_stmt>

    <comment type="block" pos:line="9" pos:column="5">/* We initialize mc-&gt;pid per-process in the child init,
     * but it should be initialized for startup before we
     * call ssl_rand_seed() below.
     */</comment>
    <expr_stmt><expr><name><name pos:line="13" pos:column="5">mc<pos:position pos:line="13" pos:column="7"/></name><operator pos:line="13" pos:column="7">-&gt;<pos:position pos:line="13" pos:column="12"/></operator><name pos:line="13" pos:column="9">pid<pos:position pos:line="13" pos:column="12"/></name></name> <operator pos:line="13" pos:column="13">=<pos:position pos:line="13" pos:column="14"/></operator> <call><name pos:line="13" pos:column="15">getpid<pos:position pos:line="13" pos:column="21"/></name><argument_list pos:line="13" pos:column="21">()<pos:position pos:line="13" pos:column="23"/></argument_list></call></expr>;<pos:position pos:line="13" pos:column="24"/></expr_stmt>

    <comment type="block" pos:line="15" pos:column="5">/*
     * Let us cleanup on restarts and exists
     */</comment>
    <expr_stmt><expr><call><name pos:line="18" pos:column="5">apr_pool_cleanup_register<pos:position pos:line="18" pos:column="30"/></name><argument_list pos:line="18" pos:column="30">(<argument><expr><name pos:line="18" pos:column="31">p<pos:position pos:line="18" pos:column="32"/></name></expr></argument>, <argument><expr><name pos:line="18" pos:column="34">base_server<pos:position pos:line="18" pos:column="45"/></name></expr></argument>,
                              <argument><expr><name pos:line="19" pos:column="31">ssl_init_ModuleKill<pos:position pos:line="19" pos:column="50"/></name></expr></argument>,
                              <argument><expr><name pos:line="20" pos:column="31">apr_pool_cleanup_null<pos:position pos:line="20" pos:column="52"/></name></expr></argument>)<pos:position pos:line="20" pos:column="53"/></argument_list></call></expr>;<pos:position pos:line="20" pos:column="54"/></expr_stmt>

    <comment type="block" pos:line="22" pos:column="5">/*
     * Any init round fixes the global config
     */</comment>
    <expr_stmt><expr><call><name pos:line="25" pos:column="5">ssl_config_global_create<pos:position pos:line="25" pos:column="29"/></name><argument_list pos:line="25" pos:column="29">(<argument><expr><name pos:line="25" pos:column="30">base_server<pos:position pos:line="25" pos:column="41"/></name></expr></argument>)<pos:position pos:line="25" pos:column="42"/></argument_list></call></expr>;<pos:position pos:line="25" pos:column="43"/></expr_stmt> <comment type="block" pos:line="25" pos:column="44">/* just to avoid problems */</comment>
    <expr_stmt><expr><call><name pos:line="26" pos:column="5">ssl_config_global_fix<pos:position pos:line="26" pos:column="26"/></name><argument_list pos:line="26" pos:column="26">(<argument><expr><name pos:line="26" pos:column="27">mc<pos:position pos:line="26" pos:column="29"/></name></expr></argument>)<pos:position pos:line="26" pos:column="30"/></argument_list></call></expr>;<pos:position pos:line="26" pos:column="31"/></expr_stmt>

    <comment type="block" pos:line="28" pos:column="5">/*
     *  try to fix the configuration and open the dedicated SSL
     *  logfile as early as possible
     */</comment>
    <for pos:line="32" pos:column="5">for <control pos:line="32" pos:column="9">(<init><expr><name pos:line="32" pos:column="10">s<pos:position pos:line="32" pos:column="11"/></name> <operator pos:line="32" pos:column="12">=<pos:position pos:line="32" pos:column="13"/></operator> <name pos:line="32" pos:column="14">base_server<pos:position pos:line="32" pos:column="25"/></name></expr>;<pos:position pos:line="32" pos:column="26"/></init> <condition><expr><name pos:line="32" pos:column="27">s<pos:position pos:line="32" pos:column="28"/></name></expr>;<pos:position pos:line="32" pos:column="29"/></condition> <incr><expr><name pos:line="32" pos:column="30">s<pos:position pos:line="32" pos:column="31"/></name> <operator pos:line="32" pos:column="32">=<pos:position pos:line="32" pos:column="33"/></operator> <name><name pos:line="32" pos:column="34">s<pos:position pos:line="32" pos:column="35"/></name><operator pos:line="32" pos:column="35">-&gt;<pos:position pos:line="32" pos:column="40"/></operator><name pos:line="32" pos:column="37">next<pos:position pos:line="32" pos:column="41"/></name></name></expr></incr>)<pos:position pos:line="32" pos:column="42"/></control> <block pos:line="32" pos:column="43">{
        <expr_stmt><expr><name pos:line="33" pos:column="9">sc<pos:position pos:line="33" pos:column="11"/></name> <operator pos:line="33" pos:column="12">=<pos:position pos:line="33" pos:column="13"/></operator> <call><name pos:line="33" pos:column="14">mySrvConfig<pos:position pos:line="33" pos:column="25"/></name><argument_list pos:line="33" pos:column="25">(<argument><expr><name pos:line="33" pos:column="26">s<pos:position pos:line="33" pos:column="27"/></name></expr></argument>)<pos:position pos:line="33" pos:column="28"/></argument_list></call></expr>;<pos:position pos:line="33" pos:column="29"/></expr_stmt>

        <if pos:line="35" pos:column="9">if <condition pos:line="35" pos:column="12">(<expr><name><name pos:line="35" pos:column="13">sc<pos:position pos:line="35" pos:column="15"/></name><operator pos:line="35" pos:column="15">-&gt;<pos:position pos:line="35" pos:column="20"/></operator><name pos:line="35" pos:column="17">server<pos:position pos:line="35" pos:column="23"/></name></name></expr>)<pos:position pos:line="35" pos:column="24"/></condition><then pos:line="35" pos:column="24"> <block pos:line="35" pos:column="25">{
            <expr_stmt><expr><name><name pos:line="36" pos:column="13">sc<pos:position pos:line="36" pos:column="15"/></name><operator pos:line="36" pos:column="15">-&gt;<pos:position pos:line="36" pos:column="20"/></operator><name pos:line="36" pos:column="17">server<pos:position pos:line="36" pos:column="23"/></name><operator pos:line="36" pos:column="23">-&gt;<pos:position pos:line="36" pos:column="28"/></operator><name pos:line="36" pos:column="25">sc<pos:position pos:line="36" pos:column="27"/></name></name> <operator pos:line="36" pos:column="28">=<pos:position pos:line="36" pos:column="29"/></operator> <name pos:line="36" pos:column="30">sc<pos:position pos:line="36" pos:column="32"/></name></expr>;<pos:position pos:line="36" pos:column="33"/></expr_stmt>
        }<pos:position pos:line="37" pos:column="10"/></block></then></if>

        <if pos:line="39" pos:column="9">if <condition pos:line="39" pos:column="12">(<expr><name><name pos:line="39" pos:column="13">sc<pos:position pos:line="39" pos:column="15"/></name><operator pos:line="39" pos:column="15">-&gt;<pos:position pos:line="39" pos:column="20"/></operator><name pos:line="39" pos:column="17">proxy<pos:position pos:line="39" pos:column="22"/></name></name></expr>)<pos:position pos:line="39" pos:column="23"/></condition><then pos:line="39" pos:column="23"> <block pos:line="39" pos:column="24">{
            <expr_stmt><expr><name><name pos:line="40" pos:column="13">sc<pos:position pos:line="40" pos:column="15"/></name><operator pos:line="40" pos:column="15">-&gt;<pos:position pos:line="40" pos:column="20"/></operator><name pos:line="40" pos:column="17">proxy<pos:position pos:line="40" pos:column="22"/></name><operator pos:line="40" pos:column="22">-&gt;<pos:position pos:line="40" pos:column="27"/></operator><name pos:line="40" pos:column="24">sc<pos:position pos:line="40" pos:column="26"/></name></name> <operator pos:line="40" pos:column="27">=<pos:position pos:line="40" pos:column="28"/></operator> <name pos:line="40" pos:column="29">sc<pos:position pos:line="40" pos:column="31"/></name></expr>;<pos:position pos:line="40" pos:column="32"/></expr_stmt>
        }<pos:position pos:line="41" pos:column="10"/></block></then></if>

        <comment type="block" pos:line="43" pos:column="9">/*
         * Create the server host:port string because we need it a lot
         */</comment>
        <expr_stmt><expr><name><name pos:line="46" pos:column="9">sc<pos:position pos:line="46" pos:column="11"/></name><operator pos:line="46" pos:column="11">-&gt;<pos:position pos:line="46" pos:column="16"/></operator><name pos:line="46" pos:column="13">vhost_id<pos:position pos:line="46" pos:column="21"/></name></name> <operator pos:line="46" pos:column="22">=<pos:position pos:line="46" pos:column="23"/></operator> <call><name pos:line="46" pos:column="24">ssl_util_vhostid<pos:position pos:line="46" pos:column="40"/></name><argument_list pos:line="46" pos:column="40">(<argument><expr><name pos:line="46" pos:column="41">p<pos:position pos:line="46" pos:column="42"/></name></expr></argument>, <argument><expr><name pos:line="46" pos:column="44">s<pos:position pos:line="46" pos:column="45"/></name></expr></argument>)<pos:position pos:line="46" pos:column="46"/></argument_list></call></expr>;<pos:position pos:line="46" pos:column="47"/></expr_stmt>
        <expr_stmt><expr><name><name pos:line="47" pos:column="9">sc<pos:position pos:line="47" pos:column="11"/></name><operator pos:line="47" pos:column="11">-&gt;<pos:position pos:line="47" pos:column="16"/></operator><name pos:line="47" pos:column="13">vhost_id_len<pos:position pos:line="47" pos:column="25"/></name></name> <operator pos:line="47" pos:column="26">=<pos:position pos:line="47" pos:column="27"/></operator> <call><name pos:line="47" pos:column="28">strlen<pos:position pos:line="47" pos:column="34"/></name><argument_list pos:line="47" pos:column="34">(<argument><expr><name><name pos:line="47" pos:column="35">sc<pos:position pos:line="47" pos:column="37"/></name><operator pos:line="47" pos:column="37">-&gt;<pos:position pos:line="47" pos:column="42"/></operator><name pos:line="47" pos:column="39">vhost_id<pos:position pos:line="47" pos:column="47"/></name></name></expr></argument>)<pos:position pos:line="47" pos:column="48"/></argument_list></call></expr>;<pos:position pos:line="47" pos:column="49"/></expr_stmt>

        <if pos:line="49" pos:column="9">if <condition pos:line="49" pos:column="12">(<expr><call><name pos:line="49" pos:column="13">ap_get_server_protocol<pos:position pos:line="49" pos:column="35"/></name><argument_list pos:line="49" pos:column="35">(<argument><expr><name pos:line="49" pos:column="36">s<pos:position pos:line="49" pos:column="37"/></name></expr></argument>)<pos:position pos:line="49" pos:column="38"/></argument_list></call> <operator pos:line="49" pos:column="39">&amp;&amp;<pos:position pos:line="49" pos:column="49"/></operator>
            <call><name pos:line="50" pos:column="13">strcmp<pos:position pos:line="50" pos:column="19"/></name><argument_list pos:line="50" pos:column="19">(<argument><expr><literal type="string" pos:line="50" pos:column="20">"https"<pos:position pos:line="50" pos:column="27"/></literal></expr></argument>, <argument><expr><call><name pos:line="50" pos:column="29">ap_get_server_protocol<pos:position pos:line="50" pos:column="51"/></name><argument_list pos:line="50" pos:column="51">(<argument><expr><name pos:line="50" pos:column="52">s<pos:position pos:line="50" pos:column="53"/></name></expr></argument>)<pos:position pos:line="50" pos:column="54"/></argument_list></call></expr></argument>)<pos:position pos:line="50" pos:column="55"/></argument_list></call> <operator pos:line="50" pos:column="56">==<pos:position pos:line="50" pos:column="58"/></operator> <literal type="number" pos:line="50" pos:column="59">0<pos:position pos:line="50" pos:column="60"/></literal></expr>)<pos:position pos:line="50" pos:column="61"/></condition><then pos:line="50" pos:column="61"> <block pos:line="50" pos:column="62">{
            <expr_stmt><expr><name><name pos:line="51" pos:column="13">sc<pos:position pos:line="51" pos:column="15"/></name><operator pos:line="51" pos:column="15">-&gt;<pos:position pos:line="51" pos:column="20"/></operator><name pos:line="51" pos:column="17">enabled<pos:position pos:line="51" pos:column="24"/></name></name> <operator pos:line="51" pos:column="25">=<pos:position pos:line="51" pos:column="26"/></operator> <name pos:line="51" pos:column="27">SSL_ENABLED_TRUE<pos:position pos:line="51" pos:column="43"/></name></expr>;<pos:position pos:line="51" pos:column="44"/></expr_stmt>
        }<pos:position pos:line="52" pos:column="10"/></block></then></if>

       <comment type="block" pos:line="54" pos:column="8">/* If sc-&gt;enabled is UNSET, then SSL is optional on this vhost  */</comment>
        <comment type="block" pos:line="55" pos:column="9">/* Fix up stuff that may not have been set */</comment>
        <if pos:line="56" pos:column="9">if <condition pos:line="56" pos:column="12">(<expr><name><name pos:line="56" pos:column="13">sc<pos:position pos:line="56" pos:column="15"/></name><operator pos:line="56" pos:column="15">-&gt;<pos:position pos:line="56" pos:column="20"/></operator><name pos:line="56" pos:column="17">enabled<pos:position pos:line="56" pos:column="24"/></name></name> <operator pos:line="56" pos:column="25">==<pos:position pos:line="56" pos:column="27"/></operator> <name pos:line="56" pos:column="28">SSL_ENABLED_UNSET<pos:position pos:line="56" pos:column="45"/></name></expr>)<pos:position pos:line="56" pos:column="46"/></condition><then pos:line="56" pos:column="46"> <block pos:line="56" pos:column="47">{
            <expr_stmt><expr><name><name pos:line="57" pos:column="13">sc<pos:position pos:line="57" pos:column="15"/></name><operator pos:line="57" pos:column="15">-&gt;<pos:position pos:line="57" pos:column="20"/></operator><name pos:line="57" pos:column="17">enabled<pos:position pos:line="57" pos:column="24"/></name></name> <operator pos:line="57" pos:column="25">=<pos:position pos:line="57" pos:column="26"/></operator> <name pos:line="57" pos:column="27">SSL_ENABLED_FALSE<pos:position pos:line="57" pos:column="44"/></name></expr>;<pos:position pos:line="57" pos:column="45"/></expr_stmt>
        }<pos:position pos:line="58" pos:column="10"/></block></then></if>
        <if pos:line="59" pos:column="9">if <condition pos:line="59" pos:column="12">(<expr><name><name pos:line="59" pos:column="13">sc<pos:position pos:line="59" pos:column="15"/></name><operator pos:line="59" pos:column="15">-&gt;<pos:position pos:line="59" pos:column="20"/></operator><name pos:line="59" pos:column="17">proxy_enabled<pos:position pos:line="59" pos:column="30"/></name></name> <operator pos:line="59" pos:column="31">==<pos:position pos:line="59" pos:column="33"/></operator> <name pos:line="59" pos:column="34">UNSET<pos:position pos:line="59" pos:column="39"/></name></expr>)<pos:position pos:line="59" pos:column="40"/></condition><then pos:line="59" pos:column="40"> <block pos:line="59" pos:column="41">{
            <expr_stmt><expr><name><name pos:line="60" pos:column="13">sc<pos:position pos:line="60" pos:column="15"/></name><operator pos:line="60" pos:column="15">-&gt;<pos:position pos:line="60" pos:column="20"/></operator><name pos:line="60" pos:column="17">proxy_enabled<pos:position pos:line="60" pos:column="30"/></name></name> <operator pos:line="60" pos:column="31">=<pos:position pos:line="60" pos:column="32"/></operator> <name pos:line="60" pos:column="33">FALSE<pos:position pos:line="60" pos:column="38"/></name></expr>;<pos:position pos:line="60" pos:column="39"/></expr_stmt>
        }<pos:position pos:line="61" pos:column="10"/></block></then></if>

        <if pos:line="63" pos:column="9">if <condition pos:line="63" pos:column="12">(<expr><name><name pos:line="63" pos:column="13">sc<pos:position pos:line="63" pos:column="15"/></name><operator pos:line="63" pos:column="15">-&gt;<pos:position pos:line="63" pos:column="20"/></operator><name pos:line="63" pos:column="17">session_cache_timeout<pos:position pos:line="63" pos:column="38"/></name></name> <operator pos:line="63" pos:column="39">==<pos:position pos:line="63" pos:column="41"/></operator> <name pos:line="63" pos:column="42">UNSET<pos:position pos:line="63" pos:column="47"/></name></expr>)<pos:position pos:line="63" pos:column="48"/></condition><then pos:line="63" pos:column="48"> <block pos:line="63" pos:column="49">{
            <expr_stmt><expr><name><name pos:line="64" pos:column="13">sc<pos:position pos:line="64" pos:column="15"/></name><operator pos:line="64" pos:column="15">-&gt;<pos:position pos:line="64" pos:column="20"/></operator><name pos:line="64" pos:column="17">session_cache_timeout<pos:position pos:line="64" pos:column="38"/></name></name> <operator pos:line="64" pos:column="39">=<pos:position pos:line="64" pos:column="40"/></operator> <name pos:line="64" pos:column="41">SSL_SESSION_CACHE_TIMEOUT<pos:position pos:line="64" pos:column="66"/></name></expr>;<pos:position pos:line="64" pos:column="67"/></expr_stmt>
        }<pos:position pos:line="65" pos:column="10"/></block></then></if>

        <if pos:line="67" pos:column="9">if <condition pos:line="67" pos:column="12">(<expr><name><name pos:line="67" pos:column="13">sc<pos:position pos:line="67" pos:column="15"/></name><operator pos:line="67" pos:column="15">-&gt;<pos:position pos:line="67" pos:column="20"/></operator><name pos:line="67" pos:column="17">server<pos:position pos:line="67" pos:column="23"/></name><operator pos:line="67" pos:column="23">-&gt;<pos:position pos:line="67" pos:column="28"/></operator><name pos:line="67" pos:column="25">pphrase_dialog_type<pos:position pos:line="67" pos:column="44"/></name></name> <operator pos:line="67" pos:column="45">==<pos:position pos:line="67" pos:column="47"/></operator> <name pos:line="67" pos:column="48">SSL_PPTYPE_UNSET<pos:position pos:line="67" pos:column="64"/></name></expr>)<pos:position pos:line="67" pos:column="65"/></condition><then pos:line="67" pos:column="65"> <block pos:line="67" pos:column="66">{
            <expr_stmt><expr><name><name pos:line="68" pos:column="13">sc<pos:position pos:line="68" pos:column="15"/></name><operator pos:line="68" pos:column="15">-&gt;<pos:position pos:line="68" pos:column="20"/></operator><name pos:line="68" pos:column="17">server<pos:position pos:line="68" pos:column="23"/></name><operator pos:line="68" pos:column="23">-&gt;<pos:position pos:line="68" pos:column="28"/></operator><name pos:line="68" pos:column="25">pphrase_dialog_type<pos:position pos:line="68" pos:column="44"/></name></name> <operator pos:line="68" pos:column="45">=<pos:position pos:line="68" pos:column="46"/></operator> <name pos:line="68" pos:column="47">SSL_PPTYPE_BUILTIN<pos:position pos:line="68" pos:column="65"/></name></expr>;<pos:position pos:line="68" pos:column="66"/></expr_stmt>
        }<pos:position pos:line="69" pos:column="10"/></block></then></if>

<cpp:ifdef pos:line="71" pos:column="1">#<cpp:directive pos:line="71" pos:column="2">ifdef<pos:position pos:line="71" pos:column="7"/></cpp:directive> <name pos:line="71" pos:column="8">HAVE_FIPS<pos:position pos:line="71" pos:column="17"/></name></cpp:ifdef>
        <if pos:line="72" pos:column="9">if <condition pos:line="72" pos:column="12">(<expr><name><name pos:line="72" pos:column="13">sc<pos:position pos:line="72" pos:column="15"/></name><operator pos:line="72" pos:column="15">-&gt;<pos:position pos:line="72" pos:column="20"/></operator><name pos:line="72" pos:column="17">fips<pos:position pos:line="72" pos:column="21"/></name></name> <operator pos:line="72" pos:column="22">==<pos:position pos:line="72" pos:column="24"/></operator> <name pos:line="72" pos:column="25">UNSET<pos:position pos:line="72" pos:column="30"/></name></expr>)<pos:position pos:line="72" pos:column="31"/></condition><then pos:line="72" pos:column="31"> <block pos:line="72" pos:column="32">{
            <expr_stmt><expr><name><name pos:line="73" pos:column="13">sc<pos:position pos:line="73" pos:column="15"/></name><operator pos:line="73" pos:column="15">-&gt;<pos:position pos:line="73" pos:column="20"/></operator><name pos:line="73" pos:column="17">fips<pos:position pos:line="73" pos:column="21"/></name></name> <operator pos:line="73" pos:column="22">=<pos:position pos:line="73" pos:column="23"/></operator> <name pos:line="73" pos:column="24">FALSE<pos:position pos:line="73" pos:column="29"/></name></expr>;<pos:position pos:line="73" pos:column="30"/></expr_stmt>
        }<pos:position pos:line="74" pos:column="10"/></block></then></if>
<cpp:endif pos:line="75" pos:column="1">#<cpp:directive pos:line="75" pos:column="2">endif<pos:position pos:line="75" pos:column="7"/></cpp:directive></cpp:endif>
    }<pos:position pos:line="76" pos:column="6"/></block></for>

<cpp:if pos:line="78" pos:column="1">#<cpp:directive pos:line="78" pos:column="2">if<pos:position pos:line="78" pos:column="4"/></cpp:directive> <expr><name pos:line="78" pos:column="5">APR_HAS_THREADS<pos:position pos:line="78" pos:column="20"/></name></expr></cpp:if>
    <expr_stmt><expr><call><name pos:line="79" pos:column="5">ssl_util_thread_setup<pos:position pos:line="79" pos:column="26"/></name><argument_list pos:line="79" pos:column="26">(<argument><expr><name pos:line="79" pos:column="27">p<pos:position pos:line="79" pos:column="28"/></name></expr></argument>)<pos:position pos:line="79" pos:column="29"/></argument_list></call></expr>;<pos:position pos:line="79" pos:column="30"/></expr_stmt>
<cpp:endif pos:line="80" pos:column="1">#<cpp:directive pos:line="80" pos:column="2">endif<pos:position pos:line="80" pos:column="7"/></cpp:directive></cpp:endif>

    <comment type="block" pos:line="82" pos:column="5">/*
     * SSL external crypto device ("engine") support
     */</comment>
<cpp:if pos:line="85" pos:column="1">#<cpp:directive pos:line="85" pos:column="2">if<pos:position pos:line="85" pos:column="4"/></cpp:directive> <expr><call><name pos:line="85" pos:column="5">defined<pos:position pos:line="85" pos:column="12"/></name><argument_list pos:line="85" pos:column="12">(<argument><expr><name pos:line="85" pos:column="13">HAVE_OPENSSL_ENGINE_H<pos:position pos:line="85" pos:column="34"/></name></expr></argument>)<pos:position pos:line="85" pos:column="35"/></argument_list></call> <operator pos:line="85" pos:column="36">&amp;&amp;<pos:position pos:line="85" pos:column="46"/></operator> <call><name pos:line="85" pos:column="39">defined<pos:position pos:line="85" pos:column="46"/></name><argument_list pos:line="85" pos:column="46">(<argument><expr><name pos:line="85" pos:column="47">HAVE_ENGINE_INIT<pos:position pos:line="85" pos:column="63"/></name></expr></argument>)<pos:position pos:line="85" pos:column="64"/></argument_list></call></expr></cpp:if>
    <expr_stmt><expr><call><name pos:line="86" pos:column="5">ssl_init_Engine<pos:position pos:line="86" pos:column="20"/></name><argument_list pos:line="86" pos:column="20">(<argument><expr><name pos:line="86" pos:column="21">base_server<pos:position pos:line="86" pos:column="32"/></name></expr></argument>, <argument><expr><name pos:line="86" pos:column="34">p<pos:position pos:line="86" pos:column="35"/></name></expr></argument>)<pos:position pos:line="86" pos:column="36"/></argument_list></call></expr>;<pos:position pos:line="86" pos:column="37"/></expr_stmt>
<cpp:endif pos:line="87" pos:column="1">#<cpp:directive pos:line="87" pos:column="2">endif<pos:position pos:line="87" pos:column="7"/></cpp:directive></cpp:endif>

    <expr_stmt><expr><call><name pos:line="89" pos:column="5">ap_log_error<pos:position pos:line="89" pos:column="17"/></name><argument_list pos:line="89" pos:column="17">(<argument><expr><name pos:line="89" pos:column="18">APLOG_MARK<pos:position pos:line="89" pos:column="28"/></name></expr></argument>, <argument><expr><name pos:line="89" pos:column="30">APLOG_INFO<pos:position pos:line="89" pos:column="40"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="89" pos:column="42">0<pos:position pos:line="89" pos:column="43"/></literal></expr></argument>, <argument><expr><name pos:line="89" pos:column="45">s<pos:position pos:line="89" pos:column="46"/></name></expr></argument>,
                 <argument><expr><literal type="string" pos:line="90" pos:column="18">"Init: Initialized %s library"<pos:position pos:line="90" pos:column="48"/></literal></expr></argument>, <argument><expr><name pos:line="90" pos:column="50">SSL_LIBRARY_NAME<pos:position pos:line="90" pos:column="66"/></name></expr></argument>)<pos:position pos:line="90" pos:column="67"/></argument_list></call></expr>;<pos:position pos:line="90" pos:column="68"/></expr_stmt>

    <comment type="block" pos:line="92" pos:column="5">/*
     * Seed the Pseudo Random Number Generator (PRNG)
     * only need ptemp here; nothing inside allocated from the pool
     * needs to live once we return from ssl_rand_seed().
     */</comment>
    <expr_stmt><expr><call><name pos:line="97" pos:column="5">ssl_rand_seed<pos:position pos:line="97" pos:column="18"/></name><argument_list pos:line="97" pos:column="18">(<argument><expr><name pos:line="97" pos:column="19">base_server<pos:position pos:line="97" pos:column="30"/></name></expr></argument>, <argument><expr><name pos:line="97" pos:column="32">ptemp<pos:position pos:line="97" pos:column="37"/></name></expr></argument>, <argument><expr><name pos:line="97" pos:column="39">SSL_RSCTX_STARTUP<pos:position pos:line="97" pos:column="56"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="97" pos:column="58">"Init: "<pos:position pos:line="97" pos:column="66"/></literal></expr></argument>)<pos:position pos:line="97" pos:column="67"/></argument_list></call></expr>;<pos:position pos:line="97" pos:column="68"/></expr_stmt>

<cpp:ifdef pos:line="99" pos:column="1">#<cpp:directive pos:line="99" pos:column="2">ifdef<pos:position pos:line="99" pos:column="7"/></cpp:directive> <name pos:line="99" pos:column="8">HAVE_FIPS<pos:position pos:line="99" pos:column="17"/></name></cpp:ifdef>
    <if pos:line="100" pos:column="5">if<condition pos:line="100" pos:column="7">(<expr><name><name pos:line="100" pos:column="8">sc<pos:position pos:line="100" pos:column="10"/></name><operator pos:line="100" pos:column="10">-&gt;<pos:position pos:line="100" pos:column="15"/></operator><name pos:line="100" pos:column="12">fips<pos:position pos:line="100" pos:column="16"/></name></name></expr>)<pos:position pos:line="100" pos:column="17"/></condition><then pos:line="100" pos:column="17"> <block pos:line="100" pos:column="18">{
        <if pos:line="101" pos:column="9">if <condition pos:line="101" pos:column="12">(<expr><operator pos:line="101" pos:column="13">!<pos:position pos:line="101" pos:column="14"/></operator><call><name pos:line="101" pos:column="14">FIPS_mode<pos:position pos:line="101" pos:column="23"/></name><argument_list pos:line="101" pos:column="23">()<pos:position pos:line="101" pos:column="25"/></argument_list></call></expr>)<pos:position pos:line="101" pos:column="26"/></condition><then pos:line="101" pos:column="26"> <block pos:line="101" pos:column="27">{
            <if pos:line="102" pos:column="13">if <condition pos:line="102" pos:column="16">(<expr><call><name pos:line="102" pos:column="17">FIPS_mode_set<pos:position pos:line="102" pos:column="30"/></name><argument_list pos:line="102" pos:column="30">(<argument><expr><literal type="number" pos:line="102" pos:column="31">1<pos:position pos:line="102" pos:column="32"/></literal></expr></argument>)<pos:position pos:line="102" pos:column="33"/></argument_list></call></expr>)<pos:position pos:line="102" pos:column="34"/></condition><then pos:line="102" pos:column="34"> <block pos:line="102" pos:column="35">{
                <expr_stmt><expr><call><name pos:line="103" pos:column="17">ap_log_error<pos:position pos:line="103" pos:column="29"/></name><argument_list pos:line="103" pos:column="29">(<argument><expr><name pos:line="103" pos:column="30">APLOG_MARK<pos:position pos:line="103" pos:column="40"/></name></expr></argument>, <argument><expr><name pos:line="103" pos:column="42">APLOG_NOTICE<pos:position pos:line="103" pos:column="54"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="103" pos:column="56">0<pos:position pos:line="103" pos:column="57"/></literal></expr></argument>, <argument><expr><name pos:line="103" pos:column="59">s<pos:position pos:line="103" pos:column="60"/></name></expr></argument>,
                             <argument><expr><literal type="string" pos:line="104" pos:column="30">"Operating in SSL FIPS mode"<pos:position pos:line="104" pos:column="58"/></literal></expr></argument>)<pos:position pos:line="104" pos:column="59"/></argument_list></call></expr>;<pos:position pos:line="104" pos:column="60"/></expr_stmt>
            }<pos:position pos:line="105" pos:column="14"/></block></then>
            <else pos:line="106" pos:column="13">else <block pos:line="106" pos:column="18">{
                <expr_stmt><expr><call><name pos:line="107" pos:column="17">ap_log_error<pos:position pos:line="107" pos:column="29"/></name><argument_list pos:line="107" pos:column="29">(<argument><expr><name pos:line="107" pos:column="30">APLOG_MARK<pos:position pos:line="107" pos:column="40"/></name></expr></argument>, <argument><expr><name pos:line="107" pos:column="42">APLOG_EMERG<pos:position pos:line="107" pos:column="53"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="107" pos:column="55">0<pos:position pos:line="107" pos:column="56"/></literal></expr></argument>, <argument><expr><name pos:line="107" pos:column="58">s<pos:position pos:line="107" pos:column="59"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="107" pos:column="61">"FIPS mode failed"<pos:position pos:line="107" pos:column="79"/></literal></expr></argument>)<pos:position pos:line="107" pos:column="80"/></argument_list></call></expr>;<pos:position pos:line="107" pos:column="81"/></expr_stmt>
                <expr_stmt><expr><call><name pos:line="108" pos:column="17">ssl_log_ssl_error<pos:position pos:line="108" pos:column="34"/></name><argument_list pos:line="108" pos:column="34">(<argument><expr><name pos:line="108" pos:column="35">APLOG_MARK<pos:position pos:line="108" pos:column="45"/></name></expr></argument>, <argument><expr><name pos:line="108" pos:column="47">APLOG_EMERG<pos:position pos:line="108" pos:column="58"/></name></expr></argument>, <argument><expr><name pos:line="108" pos:column="60">s<pos:position pos:line="108" pos:column="61"/></name></expr></argument>)<pos:position pos:line="108" pos:column="62"/></argument_list></call></expr>;<pos:position pos:line="108" pos:column="63"/></expr_stmt>
                <expr_stmt><expr><call><name pos:line="109" pos:column="17">ssl_die<pos:position pos:line="109" pos:column="24"/></name><argument_list pos:line="109" pos:column="24">()<pos:position pos:line="109" pos:column="26"/></argument_list></call></expr>;<pos:position pos:line="109" pos:column="27"/></expr_stmt>
            }<pos:position pos:line="110" pos:column="14"/></block></else></if>
        }<pos:position pos:line="111" pos:column="10"/></block></then></if>
    }<pos:position pos:line="112" pos:column="6"/></block></then>
    <else pos:line="113" pos:column="5">else <block pos:line="113" pos:column="10">{
        <expr_stmt><expr><call><name pos:line="114" pos:column="9">ap_log_error<pos:position pos:line="114" pos:column="21"/></name><argument_list pos:line="114" pos:column="21">(<argument><expr><name pos:line="114" pos:column="22">APLOG_MARK<pos:position pos:line="114" pos:column="32"/></name></expr></argument>, <argument><expr><name pos:line="114" pos:column="34">APLOG_NOTICE<pos:position pos:line="114" pos:column="46"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="114" pos:column="48">0<pos:position pos:line="114" pos:column="49"/></literal></expr></argument>, <argument><expr><name pos:line="114" pos:column="51">s<pos:position pos:line="114" pos:column="52"/></name></expr></argument>,
                     <argument><expr><literal type="string" pos:line="115" pos:column="22">"SSL FIPS mode disabled"<pos:position pos:line="115" pos:column="46"/></literal></expr></argument>)<pos:position pos:line="115" pos:column="47"/></argument_list></call></expr>;<pos:position pos:line="115" pos:column="48"/></expr_stmt>
    }<pos:position pos:line="116" pos:column="6"/></block></else></if>
<cpp:endif pos:line="117" pos:column="1">#<cpp:directive pos:line="117" pos:column="2">endif<pos:position pos:line="117" pos:column="7"/></cpp:directive></cpp:endif>

    <comment type="block" pos:line="119" pos:column="5">/*
     * read server private keys/public certs into memory.
     * decrypting any encrypted keys via configured SSLPassPhraseDialogs
     * anything that needs to live longer than ptemp needs to also survive
     * restarts, in which case they'll live inside s-&gt;process-&gt;pool.
     */</comment>
    <expr_stmt><expr><call><name pos:line="125" pos:column="5">ssl_pphrase_Handle<pos:position pos:line="125" pos:column="23"/></name><argument_list pos:line="125" pos:column="23">(<argument><expr><name pos:line="125" pos:column="24">base_server<pos:position pos:line="125" pos:column="35"/></name></expr></argument>, <argument><expr><name pos:line="125" pos:column="37">ptemp<pos:position pos:line="125" pos:column="42"/></name></expr></argument>)<pos:position pos:line="125" pos:column="43"/></argument_list></call></expr>;<pos:position pos:line="125" pos:column="44"/></expr_stmt>

    <if pos:line="127" pos:column="5">if <condition pos:line="127" pos:column="8">(<expr><call><name pos:line="127" pos:column="9">ssl_tmp_keys_init<pos:position pos:line="127" pos:column="26"/></name><argument_list pos:line="127" pos:column="26">(<argument><expr><name pos:line="127" pos:column="27">base_server<pos:position pos:line="127" pos:column="38"/></name></expr></argument>)<pos:position pos:line="127" pos:column="39"/></argument_list></call></expr>)<pos:position pos:line="127" pos:column="40"/></condition><then pos:line="127" pos:column="40"> <block pos:line="127" pos:column="41">{
        <return pos:line="128" pos:column="9">return <expr><operator pos:line="128" pos:column="16">!<pos:position pos:line="128" pos:column="17"/></operator><name pos:line="128" pos:column="17">OK<pos:position pos:line="128" pos:column="19"/></name></expr>;<pos:position pos:line="128" pos:column="20"/></return>
    }<pos:position pos:line="129" pos:column="6"/></block></then></if>

    <comment type="block" pos:line="131" pos:column="5">/*
     * initialize the mutex handling
     */</comment>
    <if pos:line="134" pos:column="5">if <condition pos:line="134" pos:column="8">(<expr><operator pos:line="134" pos:column="9">!<pos:position pos:line="134" pos:column="10"/></operator><call><name pos:line="134" pos:column="10">ssl_mutex_init<pos:position pos:line="134" pos:column="24"/></name><argument_list pos:line="134" pos:column="24">(<argument><expr><name pos:line="134" pos:column="25">base_server<pos:position pos:line="134" pos:column="36"/></name></expr></argument>, <argument><expr><name pos:line="134" pos:column="38">p<pos:position pos:line="134" pos:column="39"/></name></expr></argument>)<pos:position pos:line="134" pos:column="40"/></argument_list></call></expr>)<pos:position pos:line="134" pos:column="41"/></condition><then pos:line="134" pos:column="41"> <block pos:line="134" pos:column="42">{
        <return pos:line="135" pos:column="9">return <expr><name pos:line="135" pos:column="16">HTTP_INTERNAL_SERVER_ERROR<pos:position pos:line="135" pos:column="42"/></name></expr>;<pos:position pos:line="135" pos:column="43"/></return>
    }<pos:position pos:line="136" pos:column="6"/></block></then></if>

    <comment type="block" pos:line="138" pos:column="5">/*
     * initialize session caching
     */</comment>
    <expr_stmt><expr><call><name pos:line="141" pos:column="5">ssl_scache_init<pos:position pos:line="141" pos:column="20"/></name><argument_list pos:line="141" pos:column="20">(<argument><expr><name pos:line="141" pos:column="21">base_server<pos:position pos:line="141" pos:column="32"/></name></expr></argument>, <argument><expr><name pos:line="141" pos:column="34">p<pos:position pos:line="141" pos:column="35"/></name></expr></argument>)<pos:position pos:line="141" pos:column="36"/></argument_list></call></expr>;<pos:position pos:line="141" pos:column="37"/></expr_stmt>

    <comment type="block" pos:line="143" pos:column="5">/*
     *  initialize servers
     */</comment>
    <expr_stmt><expr><call><name pos:line="146" pos:column="5">ap_log_error<pos:position pos:line="146" pos:column="17"/></name><argument_list pos:line="146" pos:column="17">(<argument><expr><name pos:line="146" pos:column="18">APLOG_MARK<pos:position pos:line="146" pos:column="28"/></name></expr></argument>, <argument><expr><name pos:line="146" pos:column="30">APLOG_INFO<pos:position pos:line="146" pos:column="40"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="146" pos:column="42">0<pos:position pos:line="146" pos:column="43"/></literal></expr></argument>, <argument><expr><name pos:line="146" pos:column="45">base_server<pos:position pos:line="146" pos:column="56"/></name></expr></argument>,
                 <argument><expr><literal type="string" pos:line="147" pos:column="18">"Init: Initializing (virtual) servers for SSL"<pos:position pos:line="147" pos:column="64"/></literal></expr></argument>)<pos:position pos:line="147" pos:column="65"/></argument_list></call></expr>;<pos:position pos:line="147" pos:column="66"/></expr_stmt>

    <for pos:line="149" pos:column="5">for <control pos:line="149" pos:column="9">(<init><expr><name pos:line="149" pos:column="10">s<pos:position pos:line="149" pos:column="11"/></name> <operator pos:line="149" pos:column="12">=<pos:position pos:line="149" pos:column="13"/></operator> <name pos:line="149" pos:column="14">base_server<pos:position pos:line="149" pos:column="25"/></name></expr>;<pos:position pos:line="149" pos:column="26"/></init> <condition><expr><name pos:line="149" pos:column="27">s<pos:position pos:line="149" pos:column="28"/></name></expr>;<pos:position pos:line="149" pos:column="29"/></condition> <incr><expr><name pos:line="149" pos:column="30">s<pos:position pos:line="149" pos:column="31"/></name> <operator pos:line="149" pos:column="32">=<pos:position pos:line="149" pos:column="33"/></operator> <name><name pos:line="149" pos:column="34">s<pos:position pos:line="149" pos:column="35"/></name><operator pos:line="149" pos:column="35">-&gt;<pos:position pos:line="149" pos:column="40"/></operator><name pos:line="149" pos:column="37">next<pos:position pos:line="149" pos:column="41"/></name></name></expr></incr>)<pos:position pos:line="149" pos:column="42"/></control> <block pos:line="149" pos:column="43">{
        <expr_stmt><expr><name pos:line="150" pos:column="9">sc<pos:position pos:line="150" pos:column="11"/></name> <operator pos:line="150" pos:column="12">=<pos:position pos:line="150" pos:column="13"/></operator> <call><name pos:line="150" pos:column="14">mySrvConfig<pos:position pos:line="150" pos:column="25"/></name><argument_list pos:line="150" pos:column="25">(<argument><expr><name pos:line="150" pos:column="26">s<pos:position pos:line="150" pos:column="27"/></name></expr></argument>)<pos:position pos:line="150" pos:column="28"/></argument_list></call></expr>;<pos:position pos:line="150" pos:column="29"/></expr_stmt>
        <comment type="block" pos:line="151" pos:column="9">/*
         * Either now skip this server when SSL is disabled for
         * it or give out some information about what we're
         * configuring.
         */</comment>

        <comment type="block" pos:line="157" pos:column="9">/*
         * Read the server certificate and key
         */</comment>
        <expr_stmt><expr><call><name pos:line="160" pos:column="9">ssl_init_ConfigureServer<pos:position pos:line="160" pos:column="33"/></name><argument_list pos:line="160" pos:column="33">(<argument><expr><name pos:line="160" pos:column="34">s<pos:position pos:line="160" pos:column="35"/></name></expr></argument>, <argument><expr><name pos:line="160" pos:column="37">p<pos:position pos:line="160" pos:column="38"/></name></expr></argument>, <argument><expr><name pos:line="160" pos:column="40">ptemp<pos:position pos:line="160" pos:column="45"/></name></expr></argument>, <argument><expr><name pos:line="160" pos:column="47">sc<pos:position pos:line="160" pos:column="49"/></name></expr></argument>)<pos:position pos:line="160" pos:column="50"/></argument_list></call></expr>;<pos:position pos:line="160" pos:column="51"/></expr_stmt>
    }<pos:position pos:line="161" pos:column="6"/></block></for>

    <comment type="block" pos:line="163" pos:column="5">/*
     * Configuration consistency checks
     */</comment>
    <expr_stmt><expr><call><name pos:line="166" pos:column="5">ssl_init_CheckServers<pos:position pos:line="166" pos:column="26"/></name><argument_list pos:line="166" pos:column="26">(<argument><expr><name pos:line="166" pos:column="27">base_server<pos:position pos:line="166" pos:column="38"/></name></expr></argument>, <argument><expr><name pos:line="166" pos:column="40">ptemp<pos:position pos:line="166" pos:column="45"/></name></expr></argument>)<pos:position pos:line="166" pos:column="46"/></argument_list></call></expr>;<pos:position pos:line="166" pos:column="47"/></expr_stmt>

    <comment type="block" pos:line="168" pos:column="5">/*
     *  Announce mod_ssl and SSL library in HTTP Server field
     *  as ``mod_ssl/X.X.X OpenSSL/X.X.X''
     */</comment>
    <expr_stmt><expr><call><name pos:line="172" pos:column="5">ssl_add_version_components<pos:position pos:line="172" pos:column="31"/></name><argument_list pos:line="172" pos:column="31">(<argument><expr><name pos:line="172" pos:column="32">p<pos:position pos:line="172" pos:column="33"/></name></expr></argument>, <argument><expr><name pos:line="172" pos:column="35">base_server<pos:position pos:line="172" pos:column="46"/></name></expr></argument>)<pos:position pos:line="172" pos:column="47"/></argument_list></call></expr>;<pos:position pos:line="172" pos:column="48"/></expr_stmt>

    <expr_stmt><expr><call><name pos:line="174" pos:column="5">SSL_init_app_data2_idx<pos:position pos:line="174" pos:column="27"/></name><argument_list pos:line="174" pos:column="27">()<pos:position pos:line="174" pos:column="29"/></argument_list></call></expr>;<pos:position pos:line="174" pos:column="30"/></expr_stmt> <comment type="block" pos:line="174" pos:column="31">/* for SSL_get_app_data2() at request time */</comment>

    <return pos:line="176" pos:column="5">return <expr><name pos:line="176" pos:column="12">OK<pos:position pos:line="176" pos:column="14"/></name></expr>;<pos:position pos:line="176" pos:column="15"/></return>
}<pos:position pos:line="177" pos:column="2"/></block></function></unit>

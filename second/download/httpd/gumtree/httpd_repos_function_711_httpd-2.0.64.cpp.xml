<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/httpd/gumtree/httpd_repos_function_711_httpd-2.0.64.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">char<pos:position pos:line="1" pos:column="5"/></name> <modifier pos:line="1" pos:column="6">*<pos:position pos:line="1" pos:column="7"/></modifier></type><name pos:line="1" pos:column="7">ssl_util_ptxtsub<pos:position pos:line="1" pos:column="23"/></name><parameter_list pos:line="1" pos:column="23">(<parameter><decl><type><name pos:line="1" pos:column="24">apr_pool_t<pos:position pos:line="1" pos:column="34"/></name> <modifier pos:line="1" pos:column="35">*<pos:position pos:line="1" pos:column="36"/></modifier></type><name pos:line="1" pos:column="36">p<pos:position pos:line="1" pos:column="37"/></name></decl></parameter>, <parameter><decl><type><specifier pos:line="1" pos:column="39">const<pos:position pos:line="1" pos:column="44"/></specifier> <name pos:line="1" pos:column="45">char<pos:position pos:line="1" pos:column="49"/></name> <modifier pos:line="1" pos:column="50">*<pos:position pos:line="1" pos:column="51"/></modifier></type><name pos:line="1" pos:column="51">cpLine<pos:position pos:line="1" pos:column="57"/></name></decl></parameter>,
                       <parameter><decl><type><specifier pos:line="2" pos:column="24">const<pos:position pos:line="2" pos:column="29"/></specifier> <name pos:line="2" pos:column="30">char<pos:position pos:line="2" pos:column="34"/></name> <modifier pos:line="2" pos:column="35">*<pos:position pos:line="2" pos:column="36"/></modifier></type><name pos:line="2" pos:column="36">cpMatch<pos:position pos:line="2" pos:column="43"/></name></decl></parameter>, <parameter><decl><type><name pos:line="2" pos:column="45">char<pos:position pos:line="2" pos:column="49"/></name> <modifier pos:line="2" pos:column="50">*<pos:position pos:line="2" pos:column="51"/></modifier></type><name pos:line="2" pos:column="51">cpSubst<pos:position pos:line="2" pos:column="58"/></name></decl></parameter>)<pos:position pos:line="2" pos:column="59"/></parameter_list>
<block pos:line="3" pos:column="1">{
<cpp:define pos:line="4" pos:column="1">#<cpp:directive pos:line="4" pos:column="2">define<pos:position pos:line="4" pos:column="8"/></cpp:directive> <cpp:macro><name pos:line="4" pos:column="9">MAX_PTXTSUB<pos:position pos:line="4" pos:column="20"/></name></cpp:macro> <cpp:value pos:line="4" pos:column="21">100<pos:position pos:line="4" pos:column="24"/></cpp:value></cpp:define>
    <decl_stmt><decl><type><name pos:line="5" pos:column="5">char<pos:position pos:line="5" pos:column="9"/></name> <modifier pos:line="5" pos:column="10">*<pos:position pos:line="5" pos:column="11"/></modifier></type><name><name pos:line="5" pos:column="11">cppMatch<pos:position pos:line="5" pos:column="19"/></name><index pos:line="5" pos:column="19">[<expr><name pos:line="5" pos:column="20">MAX_PTXTSUB<pos:position pos:line="5" pos:column="31"/></name></expr>]<pos:position pos:line="5" pos:column="32"/></index></name></decl>;<pos:position pos:line="5" pos:column="33"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="6" pos:column="5">char<pos:position pos:line="6" pos:column="9"/></name> <modifier pos:line="6" pos:column="10">*<pos:position pos:line="6" pos:column="11"/></modifier></type><name pos:line="6" pos:column="11">cpResult<pos:position pos:line="6" pos:column="19"/></name></decl>;<pos:position pos:line="6" pos:column="20"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="7" pos:column="5">int<pos:position pos:line="7" pos:column="8"/></name></type> <name pos:line="7" pos:column="9">nResult<pos:position pos:line="7" pos:column="16"/></name></decl>;<pos:position pos:line="7" pos:column="17"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="8" pos:column="5">int<pos:position pos:line="8" pos:column="8"/></name></type> <name pos:line="8" pos:column="9">nLine<pos:position pos:line="8" pos:column="14"/></name></decl>;<pos:position pos:line="8" pos:column="15"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="9" pos:column="5">int<pos:position pos:line="9" pos:column="8"/></name></type> <name pos:line="9" pos:column="9">nSubst<pos:position pos:line="9" pos:column="15"/></name></decl>;<pos:position pos:line="9" pos:column="16"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="10" pos:column="5">int<pos:position pos:line="10" pos:column="8"/></name></type> <name pos:line="10" pos:column="9">nMatch<pos:position pos:line="10" pos:column="15"/></name></decl>;<pos:position pos:line="10" pos:column="16"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="11" pos:column="5">char<pos:position pos:line="11" pos:column="9"/></name> <modifier pos:line="11" pos:column="10">*<pos:position pos:line="11" pos:column="11"/></modifier></type><name pos:line="11" pos:column="11">cpI<pos:position pos:line="11" pos:column="14"/></name></decl>;<pos:position pos:line="11" pos:column="15"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="12" pos:column="5">char<pos:position pos:line="12" pos:column="9"/></name> <modifier pos:line="12" pos:column="10">*<pos:position pos:line="12" pos:column="11"/></modifier></type><name pos:line="12" pos:column="11">cpO<pos:position pos:line="12" pos:column="14"/></name></decl>;<pos:position pos:line="12" pos:column="15"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="13" pos:column="5">char<pos:position pos:line="13" pos:column="9"/></name> <modifier pos:line="13" pos:column="10">*<pos:position pos:line="13" pos:column="11"/></modifier></type><name pos:line="13" pos:column="11">cp<pos:position pos:line="13" pos:column="13"/></name></decl>;<pos:position pos:line="13" pos:column="14"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="14" pos:column="5">int<pos:position pos:line="14" pos:column="8"/></name></type> <name pos:line="14" pos:column="9">i<pos:position pos:line="14" pos:column="10"/></name></decl>;<pos:position pos:line="14" pos:column="11"/></decl_stmt>

    <comment type="block" pos:line="16" pos:column="5">/*
     * Pass 1: find substitution locations and calculate sizes
     */</comment>
    <expr_stmt><expr><name pos:line="19" pos:column="5">nLine<pos:position pos:line="19" pos:column="10"/></name>  <operator pos:line="19" pos:column="12">=<pos:position pos:line="19" pos:column="13"/></operator> <call><name pos:line="19" pos:column="14">strlen<pos:position pos:line="19" pos:column="20"/></name><argument_list pos:line="19" pos:column="20">(<argument><expr><name pos:line="19" pos:column="21">cpLine<pos:position pos:line="19" pos:column="27"/></name></expr></argument>)<pos:position pos:line="19" pos:column="28"/></argument_list></call></expr>;<pos:position pos:line="19" pos:column="29"/></expr_stmt>
    <expr_stmt><expr><name pos:line="20" pos:column="5">nMatch<pos:position pos:line="20" pos:column="11"/></name> <operator pos:line="20" pos:column="12">=<pos:position pos:line="20" pos:column="13"/></operator> <call><name pos:line="20" pos:column="14">strlen<pos:position pos:line="20" pos:column="20"/></name><argument_list pos:line="20" pos:column="20">(<argument><expr><name pos:line="20" pos:column="21">cpMatch<pos:position pos:line="20" pos:column="28"/></name></expr></argument>)<pos:position pos:line="20" pos:column="29"/></argument_list></call></expr>;<pos:position pos:line="20" pos:column="30"/></expr_stmt>
    <expr_stmt><expr><name pos:line="21" pos:column="5">nSubst<pos:position pos:line="21" pos:column="11"/></name> <operator pos:line="21" pos:column="12">=<pos:position pos:line="21" pos:column="13"/></operator> <call><name pos:line="21" pos:column="14">strlen<pos:position pos:line="21" pos:column="20"/></name><argument_list pos:line="21" pos:column="20">(<argument><expr><name pos:line="21" pos:column="21">cpSubst<pos:position pos:line="21" pos:column="28"/></name></expr></argument>)<pos:position pos:line="21" pos:column="29"/></argument_list></call></expr>;<pos:position pos:line="21" pos:column="30"/></expr_stmt>
    <for pos:line="22" pos:column="5">for <control pos:line="22" pos:column="9">(<init><expr><name pos:line="22" pos:column="10">cpI<pos:position pos:line="22" pos:column="13"/></name> <operator pos:line="22" pos:column="14">=<pos:position pos:line="22" pos:column="15"/></operator> <operator pos:line="22" pos:column="16">(<pos:position pos:line="22" pos:column="17"/></operator><name pos:line="22" pos:column="17">char<pos:position pos:line="22" pos:column="21"/></name> <operator pos:line="22" pos:column="22">*<pos:position pos:line="22" pos:column="23"/></operator><operator pos:line="22" pos:column="23">)<pos:position pos:line="22" pos:column="24"/></operator><name pos:line="22" pos:column="24">cpLine<pos:position pos:line="22" pos:column="30"/></name></expr><operator pos:line="22" pos:column="30">,<pos:position pos:line="22" pos:column="31"/></operator> <expr><name pos:line="22" pos:column="32">i<pos:position pos:line="22" pos:column="33"/></name> <operator pos:line="22" pos:column="34">=<pos:position pos:line="22" pos:column="35"/></operator> <literal type="number" pos:line="22" pos:column="36">0<pos:position pos:line="22" pos:column="37"/></literal></expr><operator pos:line="22" pos:column="37">,<pos:position pos:line="22" pos:column="38"/></operator> <expr><name pos:line="22" pos:column="39">nResult<pos:position pos:line="22" pos:column="46"/></name> <operator pos:line="22" pos:column="47">=<pos:position pos:line="22" pos:column="48"/></operator> <literal type="number" pos:line="22" pos:column="49">0<pos:position pos:line="22" pos:column="50"/></literal></expr>;<pos:position pos:line="22" pos:column="51"/></init>
         <condition><expr><name pos:line="23" pos:column="10">cpI<pos:position pos:line="23" pos:column="13"/></name> <operator pos:line="23" pos:column="14">&lt;<pos:position pos:line="23" pos:column="18"/></operator> <name pos:line="23" pos:column="16">cpLine<pos:position pos:line="23" pos:column="22"/></name><operator pos:line="23" pos:column="22">+<pos:position pos:line="23" pos:column="23"/></operator><name pos:line="23" pos:column="23">nLine<pos:position pos:line="23" pos:column="28"/></name> <operator pos:line="23" pos:column="29">&amp;&amp;<pos:position pos:line="23" pos:column="39"/></operator> <name pos:line="23" pos:column="32">i<pos:position pos:line="23" pos:column="33"/></name> <operator pos:line="23" pos:column="34">&lt;<pos:position pos:line="23" pos:column="38"/></operator> <name pos:line="23" pos:column="36">MAX_PTXTSUB<pos:position pos:line="23" pos:column="47"/></name></expr>;<pos:position pos:line="23" pos:column="48"/></condition>    <incr/>)<pos:position pos:line="23" pos:column="53"/></control> <block pos:line="23" pos:column="54">{
        <if pos:line="24" pos:column="9">if <condition pos:line="24" pos:column="12">(<expr><operator pos:line="24" pos:column="13">(<pos:position pos:line="24" pos:column="14"/></operator><name pos:line="24" pos:column="14">cp<pos:position pos:line="24" pos:column="16"/></name> <operator pos:line="24" pos:column="17">=<pos:position pos:line="24" pos:column="18"/></operator> <call><name pos:line="24" pos:column="19">strstr<pos:position pos:line="24" pos:column="25"/></name><argument_list pos:line="24" pos:column="25">(<argument><expr><name pos:line="24" pos:column="26">cpI<pos:position pos:line="24" pos:column="29"/></name></expr></argument>, <argument><expr><name pos:line="24" pos:column="31">cpMatch<pos:position pos:line="24" pos:column="38"/></name></expr></argument>)<pos:position pos:line="24" pos:column="39"/></argument_list></call><operator pos:line="24" pos:column="39">)<pos:position pos:line="24" pos:column="40"/></operator> <operator pos:line="24" pos:column="41">!=<pos:position pos:line="24" pos:column="43"/></operator> <name pos:line="24" pos:column="44">NULL<pos:position pos:line="24" pos:column="48"/></name></expr>)<pos:position pos:line="24" pos:column="49"/></condition><then pos:line="24" pos:column="49"> <block pos:line="24" pos:column="50">{
            <expr_stmt><expr><name><name pos:line="25" pos:column="13">cppMatch<pos:position pos:line="25" pos:column="21"/></name><index pos:line="25" pos:column="21">[<expr><name pos:line="25" pos:column="22">i<pos:position pos:line="25" pos:column="23"/></name><operator pos:line="25" pos:column="23">++<pos:position pos:line="25" pos:column="25"/></operator></expr>]<pos:position pos:line="25" pos:column="26"/></index></name> <operator pos:line="25" pos:column="27">=<pos:position pos:line="25" pos:column="28"/></operator> <name pos:line="25" pos:column="29">cp<pos:position pos:line="25" pos:column="31"/></name></expr>;<pos:position pos:line="25" pos:column="32"/></expr_stmt>
            <expr_stmt><expr><name pos:line="26" pos:column="13">nResult<pos:position pos:line="26" pos:column="20"/></name> <operator pos:line="26" pos:column="21">+=<pos:position pos:line="26" pos:column="23"/></operator> <operator pos:line="26" pos:column="24">(<pos:position pos:line="26" pos:column="25"/></operator><operator pos:line="26" pos:column="25">(<pos:position pos:line="26" pos:column="26"/></operator><name pos:line="26" pos:column="26">cp<pos:position pos:line="26" pos:column="28"/></name><operator pos:line="26" pos:column="28">-<pos:position pos:line="26" pos:column="29"/></operator><name pos:line="26" pos:column="29">cpI<pos:position pos:line="26" pos:column="32"/></name><operator pos:line="26" pos:column="32">)<pos:position pos:line="26" pos:column="33"/></operator><operator pos:line="26" pos:column="33">+<pos:position pos:line="26" pos:column="34"/></operator><name pos:line="26" pos:column="34">nSubst<pos:position pos:line="26" pos:column="40"/></name><operator pos:line="26" pos:column="40">)<pos:position pos:line="26" pos:column="41"/></operator></expr>;<pos:position pos:line="26" pos:column="42"/></expr_stmt>
            <expr_stmt><expr><name pos:line="27" pos:column="13">cpI<pos:position pos:line="27" pos:column="16"/></name> <operator pos:line="27" pos:column="17">=<pos:position pos:line="27" pos:column="18"/></operator> <operator pos:line="27" pos:column="19">(<pos:position pos:line="27" pos:column="20"/></operator><name pos:line="27" pos:column="20">cp<pos:position pos:line="27" pos:column="22"/></name><operator pos:line="27" pos:column="22">+<pos:position pos:line="27" pos:column="23"/></operator><name pos:line="27" pos:column="23">nMatch<pos:position pos:line="27" pos:column="29"/></name><operator pos:line="27" pos:column="29">)<pos:position pos:line="27" pos:column="30"/></operator></expr>;<pos:position pos:line="27" pos:column="31"/></expr_stmt>
        }<pos:position pos:line="28" pos:column="10"/></block></then>
        <else pos:line="29" pos:column="9">else <block pos:line="29" pos:column="14">{
            <expr_stmt><expr><name pos:line="30" pos:column="13">nResult<pos:position pos:line="30" pos:column="20"/></name> <operator pos:line="30" pos:column="21">+=<pos:position pos:line="30" pos:column="23"/></operator> <call><name pos:line="30" pos:column="24">strlen<pos:position pos:line="30" pos:column="30"/></name><argument_list pos:line="30" pos:column="30">(<argument><expr><name pos:line="30" pos:column="31">cpI<pos:position pos:line="30" pos:column="34"/></name></expr></argument>)<pos:position pos:line="30" pos:column="35"/></argument_list></call></expr>;<pos:position pos:line="30" pos:column="36"/></expr_stmt>
            <break pos:line="31" pos:column="13">break;<pos:position pos:line="31" pos:column="19"/></break>
        }<pos:position pos:line="32" pos:column="10"/></block></else></if>
    }<pos:position pos:line="33" pos:column="6"/></block></for>
    <expr_stmt><expr><name><name pos:line="34" pos:column="5">cppMatch<pos:position pos:line="34" pos:column="13"/></name><index pos:line="34" pos:column="13">[<expr><name pos:line="34" pos:column="14">i<pos:position pos:line="34" pos:column="15"/></name></expr>]<pos:position pos:line="34" pos:column="16"/></index></name> <operator pos:line="34" pos:column="17">=<pos:position pos:line="34" pos:column="18"/></operator> <name pos:line="34" pos:column="19">NULL<pos:position pos:line="34" pos:column="23"/></name></expr>;<pos:position pos:line="34" pos:column="24"/></expr_stmt>
    <if pos:line="35" pos:column="5">if <condition pos:line="35" pos:column="8">(<expr><name pos:line="35" pos:column="9">i<pos:position pos:line="35" pos:column="10"/></name> <operator pos:line="35" pos:column="11">==<pos:position pos:line="35" pos:column="13"/></operator> <literal type="number" pos:line="35" pos:column="14">0<pos:position pos:line="35" pos:column="15"/></literal></expr>)<pos:position pos:line="35" pos:column="16"/></condition><then pos:line="35" pos:column="16">
        <block type="pseudo"><return pos:line="36" pos:column="9">return <expr><name pos:line="36" pos:column="16">NULL<pos:position pos:line="36" pos:column="20"/></name></expr>;<pos:position pos:line="36" pos:column="21"/></return></block></then></if>

    <comment type="block" pos:line="38" pos:column="5">/*
     * Pass 2: allocate memory and assemble result
     */</comment>
    <expr_stmt><expr><name pos:line="41" pos:column="5">cpResult<pos:position pos:line="41" pos:column="13"/></name> <operator pos:line="41" pos:column="14">=<pos:position pos:line="41" pos:column="15"/></operator> <call><name pos:line="41" pos:column="16">apr_pcalloc<pos:position pos:line="41" pos:column="27"/></name><argument_list pos:line="41" pos:column="27">(<argument><expr><name pos:line="41" pos:column="28">p<pos:position pos:line="41" pos:column="29"/></name></expr></argument>, <argument><expr><name pos:line="41" pos:column="31">nResult<pos:position pos:line="41" pos:column="38"/></name><operator pos:line="41" pos:column="38">+<pos:position pos:line="41" pos:column="39"/></operator><literal type="number" pos:line="41" pos:column="39">1<pos:position pos:line="41" pos:column="40"/></literal></expr></argument>)<pos:position pos:line="41" pos:column="41"/></argument_list></call></expr>;<pos:position pos:line="41" pos:column="42"/></expr_stmt>
    <for pos:line="42" pos:column="5">for <control pos:line="42" pos:column="9">(<init><expr><name pos:line="42" pos:column="10">cpI<pos:position pos:line="42" pos:column="13"/></name> <operator pos:line="42" pos:column="14">=<pos:position pos:line="42" pos:column="15"/></operator> <operator pos:line="42" pos:column="16">(<pos:position pos:line="42" pos:column="17"/></operator><name pos:line="42" pos:column="17">char<pos:position pos:line="42" pos:column="21"/></name> <operator pos:line="42" pos:column="22">*<pos:position pos:line="42" pos:column="23"/></operator><operator pos:line="42" pos:column="23">)<pos:position pos:line="42" pos:column="24"/></operator><name pos:line="42" pos:column="24">cpLine<pos:position pos:line="42" pos:column="30"/></name></expr><operator pos:line="42" pos:column="30">,<pos:position pos:line="42" pos:column="31"/></operator> <expr><name pos:line="42" pos:column="32">cpO<pos:position pos:line="42" pos:column="35"/></name> <operator pos:line="42" pos:column="36">=<pos:position pos:line="42" pos:column="37"/></operator> <name pos:line="42" pos:column="38">cpResult<pos:position pos:line="42" pos:column="46"/></name></expr><operator pos:line="42" pos:column="46">,<pos:position pos:line="42" pos:column="47"/></operator> <expr><name pos:line="42" pos:column="48">i<pos:position pos:line="42" pos:column="49"/></name> <operator pos:line="42" pos:column="50">=<pos:position pos:line="42" pos:column="51"/></operator> <literal type="number" pos:line="42" pos:column="52">0<pos:position pos:line="42" pos:column="53"/></literal></expr>;<pos:position pos:line="42" pos:column="54"/></init>
         <condition><expr><name><name pos:line="43" pos:column="10">cppMatch<pos:position pos:line="43" pos:column="18"/></name><index pos:line="43" pos:column="18">[<expr><name pos:line="43" pos:column="19">i<pos:position pos:line="43" pos:column="20"/></name></expr>]<pos:position pos:line="43" pos:column="21"/></index></name> <operator pos:line="43" pos:column="22">!=<pos:position pos:line="43" pos:column="24"/></operator> <name pos:line="43" pos:column="25">NULL<pos:position pos:line="43" pos:column="29"/></name></expr>;<pos:position pos:line="43" pos:column="30"/></condition>
         <incr><expr><name pos:line="44" pos:column="10">i<pos:position pos:line="44" pos:column="11"/></name><operator pos:line="44" pos:column="11">++<pos:position pos:line="44" pos:column="13"/></operator></expr></incr>)<pos:position pos:line="44" pos:column="14"/></control> <block pos:line="44" pos:column="15">{
        <expr_stmt><expr><call><name pos:line="45" pos:column="9">apr_cpystrn<pos:position pos:line="45" pos:column="20"/></name><argument_list pos:line="45" pos:column="20">(<argument><expr><name pos:line="45" pos:column="21">cpO<pos:position pos:line="45" pos:column="24"/></name></expr></argument>, <argument><expr><name pos:line="45" pos:column="26">cpI<pos:position pos:line="45" pos:column="29"/></name></expr></argument>, <argument><expr><name><name pos:line="45" pos:column="31">cppMatch<pos:position pos:line="45" pos:column="39"/></name><index pos:line="45" pos:column="39">[<expr><name pos:line="45" pos:column="40">i<pos:position pos:line="45" pos:column="41"/></name></expr>]<pos:position pos:line="45" pos:column="42"/></index></name><operator pos:line="45" pos:column="42">-<pos:position pos:line="45" pos:column="43"/></operator><name pos:line="45" pos:column="43">cpI<pos:position pos:line="45" pos:column="46"/></name><operator pos:line="45" pos:column="46">+<pos:position pos:line="45" pos:column="47"/></operator><literal type="number" pos:line="45" pos:column="47">1<pos:position pos:line="45" pos:column="48"/></literal></expr></argument>)<pos:position pos:line="45" pos:column="49"/></argument_list></call></expr>;<pos:position pos:line="45" pos:column="50"/></expr_stmt>
        <expr_stmt><expr><name pos:line="46" pos:column="9">cpO<pos:position pos:line="46" pos:column="12"/></name> <operator pos:line="46" pos:column="13">+=<pos:position pos:line="46" pos:column="15"/></operator> <operator pos:line="46" pos:column="16">(<pos:position pos:line="46" pos:column="17"/></operator><name><name pos:line="46" pos:column="17">cppMatch<pos:position pos:line="46" pos:column="25"/></name><index pos:line="46" pos:column="25">[<expr><name pos:line="46" pos:column="26">i<pos:position pos:line="46" pos:column="27"/></name></expr>]<pos:position pos:line="46" pos:column="28"/></index></name><operator pos:line="46" pos:column="28">-<pos:position pos:line="46" pos:column="29"/></operator><name pos:line="46" pos:column="29">cpI<pos:position pos:line="46" pos:column="32"/></name><operator pos:line="46" pos:column="32">)<pos:position pos:line="46" pos:column="33"/></operator></expr>;<pos:position pos:line="46" pos:column="34"/></expr_stmt>
        <expr_stmt><expr><call><name pos:line="47" pos:column="9">apr_cpystrn<pos:position pos:line="47" pos:column="20"/></name><argument_list pos:line="47" pos:column="20">(<argument><expr><name pos:line="47" pos:column="21">cpO<pos:position pos:line="47" pos:column="24"/></name></expr></argument>, <argument><expr><name pos:line="47" pos:column="26">cpSubst<pos:position pos:line="47" pos:column="33"/></name></expr></argument>, <argument><expr><name pos:line="47" pos:column="35">nSubst<pos:position pos:line="47" pos:column="41"/></name><operator pos:line="47" pos:column="41">+<pos:position pos:line="47" pos:column="42"/></operator><literal type="number" pos:line="47" pos:column="42">1<pos:position pos:line="47" pos:column="43"/></literal></expr></argument>)<pos:position pos:line="47" pos:column="44"/></argument_list></call></expr>;<pos:position pos:line="47" pos:column="45"/></expr_stmt>
        <expr_stmt><expr><name pos:line="48" pos:column="9">cpO<pos:position pos:line="48" pos:column="12"/></name> <operator pos:line="48" pos:column="13">+=<pos:position pos:line="48" pos:column="15"/></operator> <name pos:line="48" pos:column="16">nSubst<pos:position pos:line="48" pos:column="22"/></name></expr>;<pos:position pos:line="48" pos:column="23"/></expr_stmt>
        <expr_stmt><expr><name pos:line="49" pos:column="9">cpI<pos:position pos:line="49" pos:column="12"/></name> <operator pos:line="49" pos:column="13">=<pos:position pos:line="49" pos:column="14"/></operator> <operator pos:line="49" pos:column="15">(<pos:position pos:line="49" pos:column="16"/></operator><name><name pos:line="49" pos:column="16">cppMatch<pos:position pos:line="49" pos:column="24"/></name><index pos:line="49" pos:column="24">[<expr><name pos:line="49" pos:column="25">i<pos:position pos:line="49" pos:column="26"/></name></expr>]<pos:position pos:line="49" pos:column="27"/></index></name><operator pos:line="49" pos:column="27">+<pos:position pos:line="49" pos:column="28"/></operator><name pos:line="49" pos:column="28">nMatch<pos:position pos:line="49" pos:column="34"/></name><operator pos:line="49" pos:column="34">)<pos:position pos:line="49" pos:column="35"/></operator></expr>;<pos:position pos:line="49" pos:column="36"/></expr_stmt>
    }<pos:position pos:line="50" pos:column="6"/></block></for>
    <expr_stmt><expr><call><name pos:line="51" pos:column="5">apr_cpystrn<pos:position pos:line="51" pos:column="16"/></name><argument_list pos:line="51" pos:column="16">(<argument><expr><name pos:line="51" pos:column="17">cpO<pos:position pos:line="51" pos:column="20"/></name></expr></argument>, <argument><expr><name pos:line="51" pos:column="22">cpI<pos:position pos:line="51" pos:column="25"/></name></expr></argument>, <argument><expr><name pos:line="51" pos:column="27">cpResult<pos:position pos:line="51" pos:column="35"/></name><operator pos:line="51" pos:column="35">+<pos:position pos:line="51" pos:column="36"/></operator><name pos:line="51" pos:column="36">nResult<pos:position pos:line="51" pos:column="43"/></name><operator pos:line="51" pos:column="43">-<pos:position pos:line="51" pos:column="44"/></operator><name pos:line="51" pos:column="44">cpO<pos:position pos:line="51" pos:column="47"/></name><operator pos:line="51" pos:column="47">+<pos:position pos:line="51" pos:column="48"/></operator><literal type="number" pos:line="51" pos:column="48">1<pos:position pos:line="51" pos:column="49"/></literal></expr></argument>)<pos:position pos:line="51" pos:column="50"/></argument_list></call></expr>;<pos:position pos:line="51" pos:column="51"/></expr_stmt>

    <return pos:line="53" pos:column="5">return <expr><name pos:line="53" pos:column="12">cpResult<pos:position pos:line="53" pos:column="20"/></name></expr>;<pos:position pos:line="53" pos:column="21"/></return>
}<pos:position pos:line="54" pos:column="2"/></block></function></unit>

<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/httpd/gumtree/httpd_repos_function_499_httpd-2.0.43.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">int<pos:position pos:line="1" pos:column="11"/></name></type> <name pos:line="1" pos:column="12">match_headers<pos:position pos:line="1" pos:column="25"/></name><parameter_list pos:line="1" pos:column="25">(<parameter><decl><type><name pos:line="1" pos:column="26">request_rec<pos:position pos:line="1" pos:column="37"/></name> <modifier pos:line="1" pos:column="38">*<pos:position pos:line="1" pos:column="39"/></modifier></type><name pos:line="1" pos:column="39">r<pos:position pos:line="1" pos:column="40"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="41"/></parameter_list>
<block pos:line="2" pos:column="1">{
    <decl_stmt><decl><type><name pos:line="3" pos:column="5">sei_cfg_rec<pos:position pos:line="3" pos:column="16"/></name> <modifier pos:line="3" pos:column="17">*<pos:position pos:line="3" pos:column="18"/></modifier></type><name pos:line="3" pos:column="18">sconf<pos:position pos:line="3" pos:column="23"/></name></decl>;<pos:position pos:line="3" pos:column="24"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="4" pos:column="5">sei_entry<pos:position pos:line="4" pos:column="14"/></name> <modifier pos:line="4" pos:column="15">*<pos:position pos:line="4" pos:column="16"/></modifier></type><name pos:line="4" pos:column="16">entries<pos:position pos:line="4" pos:column="23"/></name></decl>;<pos:position pos:line="4" pos:column="24"/></decl_stmt>
    <decl_stmt><decl><type><specifier pos:line="5" pos:column="5">const<pos:position pos:line="5" pos:column="10"/></specifier> <name pos:line="5" pos:column="11">apr_table_entry_t<pos:position pos:line="5" pos:column="28"/></name> <modifier pos:line="5" pos:column="29">*<pos:position pos:line="5" pos:column="30"/></modifier></type><name pos:line="5" pos:column="30">elts<pos:position pos:line="5" pos:column="34"/></name></decl>;<pos:position pos:line="5" pos:column="35"/></decl_stmt>
    <decl_stmt><decl><type><specifier pos:line="6" pos:column="5">const<pos:position pos:line="6" pos:column="10"/></specifier> <name pos:line="6" pos:column="11">char<pos:position pos:line="6" pos:column="15"/></name> <modifier pos:line="6" pos:column="16">*<pos:position pos:line="6" pos:column="17"/></modifier></type><name pos:line="6" pos:column="17">val<pos:position pos:line="6" pos:column="20"/></name></decl>;<pos:position pos:line="6" pos:column="21"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="7" pos:column="5">apr_size_t<pos:position pos:line="7" pos:column="15"/></name></type> <name pos:line="7" pos:column="16">val_len<pos:position pos:line="7" pos:column="23"/></name> <init pos:line="7" pos:column="24">= <expr><literal type="number" pos:line="7" pos:column="26">0<pos:position pos:line="7" pos:column="27"/></literal></expr></init></decl>;<pos:position pos:line="7" pos:column="28"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="8" pos:column="5">int<pos:position pos:line="8" pos:column="8"/></name></type> <name pos:line="8" pos:column="9">i<pos:position pos:line="8" pos:column="10"/></name></decl>, <decl><type ref="prev"/><name pos:line="8" pos:column="12">j<pos:position pos:line="8" pos:column="13"/></name></decl>;<pos:position pos:line="8" pos:column="14"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="9" pos:column="5">char<pos:position pos:line="9" pos:column="9"/></name> <modifier pos:line="9" pos:column="10">*<pos:position pos:line="9" pos:column="11"/></modifier></type><name pos:line="9" pos:column="11">last_name<pos:position pos:line="9" pos:column="20"/></name></decl>;<pos:position pos:line="9" pos:column="21"/></decl_stmt>

    <if pos:line="11" pos:column="5">if <condition pos:line="11" pos:column="8">(<expr><operator pos:line="11" pos:column="9">!<pos:position pos:line="11" pos:column="10"/></operator><call><name pos:line="11" pos:column="10">ap_get_module_config<pos:position pos:line="11" pos:column="30"/></name><argument_list pos:line="11" pos:column="30">(<argument><expr><name><name pos:line="11" pos:column="31">r<pos:position pos:line="11" pos:column="32"/></name><operator pos:line="11" pos:column="32">-&gt;<pos:position pos:line="11" pos:column="37"/></operator><name pos:line="11" pos:column="34">request_config<pos:position pos:line="11" pos:column="48"/></name></name></expr></argument>, <argument><expr><operator pos:line="11" pos:column="50">&amp;<pos:position pos:line="11" pos:column="55"/></operator><name pos:line="11" pos:column="51">setenvif_module<pos:position pos:line="11" pos:column="66"/></name></expr></argument>)<pos:position pos:line="11" pos:column="67"/></argument_list></call></expr>)<pos:position pos:line="11" pos:column="68"/></condition><then pos:line="11" pos:column="68"> <block pos:line="11" pos:column="69">{
        <expr_stmt><expr><call><name pos:line="12" pos:column="9">ap_set_module_config<pos:position pos:line="12" pos:column="29"/></name><argument_list pos:line="12" pos:column="29">(<argument><expr><name><name pos:line="12" pos:column="30">r<pos:position pos:line="12" pos:column="31"/></name><operator pos:line="12" pos:column="31">-&gt;<pos:position pos:line="12" pos:column="36"/></operator><name pos:line="12" pos:column="33">request_config<pos:position pos:line="12" pos:column="47"/></name></name></expr></argument>, <argument><expr><operator pos:line="12" pos:column="49">&amp;<pos:position pos:line="12" pos:column="54"/></operator><name pos:line="12" pos:column="50">setenvif_module<pos:position pos:line="12" pos:column="65"/></name></expr></argument>,
                             <argument><expr><name pos:line="13" pos:column="30">SEI_MAGIC_HEIRLOOM<pos:position pos:line="13" pos:column="48"/></name></expr></argument>)<pos:position pos:line="13" pos:column="49"/></argument_list></call></expr>;<pos:position pos:line="13" pos:column="50"/></expr_stmt>
	<expr_stmt><expr><name pos:line="14" pos:column="9">sconf<pos:position pos:line="14" pos:column="14"/></name>  <operator pos:line="14" pos:column="16">=<pos:position pos:line="14" pos:column="17"/></operator> <operator pos:line="14" pos:column="18">(<pos:position pos:line="14" pos:column="19"/></operator><name pos:line="14" pos:column="19">sei_cfg_rec<pos:position pos:line="14" pos:column="30"/></name> <operator pos:line="14" pos:column="31">*<pos:position pos:line="14" pos:column="32"/></operator><operator pos:line="14" pos:column="32">)<pos:position pos:line="14" pos:column="33"/></operator> <call><name pos:line="14" pos:column="34">ap_get_module_config<pos:position pos:line="14" pos:column="54"/></name><argument_list pos:line="14" pos:column="54">(<argument><expr><name><name pos:line="14" pos:column="55">r<pos:position pos:line="14" pos:column="56"/></name><operator pos:line="14" pos:column="56">-&gt;<pos:position pos:line="14" pos:column="61"/></operator><name pos:line="14" pos:column="58">server<pos:position pos:line="14" pos:column="64"/></name><operator pos:line="14" pos:column="64">-&gt;<pos:position pos:line="14" pos:column="69"/></operator><name pos:line="14" pos:column="66">module_config<pos:position pos:line="14" pos:column="79"/></name></name></expr></argument>,
						      <argument><expr><operator pos:line="15" pos:column="55">&amp;<pos:position pos:line="15" pos:column="60"/></operator><name pos:line="15" pos:column="56">setenvif_module<pos:position pos:line="15" pos:column="71"/></name></expr></argument>)<pos:position pos:line="15" pos:column="72"/></argument_list></call></expr>;<pos:position pos:line="15" pos:column="73"/></expr_stmt>
    }<pos:position pos:line="16" pos:column="6"/></block></then>
    <else pos:line="17" pos:column="5">else <block pos:line="17" pos:column="10">{
	<expr_stmt><expr><name pos:line="18" pos:column="9">sconf<pos:position pos:line="18" pos:column="14"/></name> <operator pos:line="18" pos:column="15">=<pos:position pos:line="18" pos:column="16"/></operator> <operator pos:line="18" pos:column="17">(<pos:position pos:line="18" pos:column="18"/></operator><name pos:line="18" pos:column="18">sei_cfg_rec<pos:position pos:line="18" pos:column="29"/></name> <operator pos:line="18" pos:column="30">*<pos:position pos:line="18" pos:column="31"/></operator><operator pos:line="18" pos:column="31">)<pos:position pos:line="18" pos:column="32"/></operator> <call><name pos:line="18" pos:column="33">ap_get_module_config<pos:position pos:line="18" pos:column="53"/></name><argument_list pos:line="18" pos:column="53">(<argument><expr><name><name pos:line="18" pos:column="54">r<pos:position pos:line="18" pos:column="55"/></name><operator pos:line="18" pos:column="55">-&gt;<pos:position pos:line="18" pos:column="60"/></operator><name pos:line="18" pos:column="57">per_dir_config<pos:position pos:line="18" pos:column="71"/></name></name></expr></argument>,
						     <argument><expr><operator pos:line="19" pos:column="54">&amp;<pos:position pos:line="19" pos:column="59"/></operator><name pos:line="19" pos:column="55">setenvif_module<pos:position pos:line="19" pos:column="70"/></name></expr></argument>)<pos:position pos:line="19" pos:column="71"/></argument_list></call></expr>;<pos:position pos:line="19" pos:column="72"/></expr_stmt>
    }<pos:position pos:line="20" pos:column="6"/></block></else></if>
    <expr_stmt><expr><name pos:line="21" pos:column="5">entries<pos:position pos:line="21" pos:column="12"/></name> <operator pos:line="21" pos:column="13">=<pos:position pos:line="21" pos:column="14"/></operator> <operator pos:line="21" pos:column="15">(<pos:position pos:line="21" pos:column="16"/></operator><name pos:line="21" pos:column="16">sei_entry<pos:position pos:line="21" pos:column="25"/></name> <operator pos:line="21" pos:column="26">*<pos:position pos:line="21" pos:column="27"/></operator><operator pos:line="21" pos:column="27">)<pos:position pos:line="21" pos:column="28"/></operator> <name><name pos:line="21" pos:column="29">sconf<pos:position pos:line="21" pos:column="34"/></name><operator pos:line="21" pos:column="34">-&gt;<pos:position pos:line="21" pos:column="39"/></operator><name pos:line="21" pos:column="36">conditionals<pos:position pos:line="21" pos:column="48"/></name><operator pos:line="21" pos:column="48">-&gt;<pos:position pos:line="21" pos:column="53"/></operator><name pos:line="21" pos:column="50">elts<pos:position pos:line="21" pos:column="54"/></name></name></expr>;<pos:position pos:line="21" pos:column="55"/></expr_stmt>
    <expr_stmt><expr><name pos:line="22" pos:column="5">last_name<pos:position pos:line="22" pos:column="14"/></name> <operator pos:line="22" pos:column="15">=<pos:position pos:line="22" pos:column="16"/></operator> <name pos:line="22" pos:column="17">NULL<pos:position pos:line="22" pos:column="21"/></name></expr>;<pos:position pos:line="22" pos:column="22"/></expr_stmt>
    <expr_stmt><expr><name pos:line="23" pos:column="5">val<pos:position pos:line="23" pos:column="8"/></name> <operator pos:line="23" pos:column="9">=<pos:position pos:line="23" pos:column="10"/></operator> <name pos:line="23" pos:column="11">NULL<pos:position pos:line="23" pos:column="15"/></name></expr>;<pos:position pos:line="23" pos:column="16"/></expr_stmt>
    <for pos:line="24" pos:column="5">for <control pos:line="24" pos:column="9">(<init><expr><name pos:line="24" pos:column="10">i<pos:position pos:line="24" pos:column="11"/></name> <operator pos:line="24" pos:column="12">=<pos:position pos:line="24" pos:column="13"/></operator> <literal type="number" pos:line="24" pos:column="14">0<pos:position pos:line="24" pos:column="15"/></literal></expr>;<pos:position pos:line="24" pos:column="16"/></init> <condition><expr><name pos:line="24" pos:column="17">i<pos:position pos:line="24" pos:column="18"/></name> <operator pos:line="24" pos:column="19">&lt;<pos:position pos:line="24" pos:column="23"/></operator> <name><name pos:line="24" pos:column="21">sconf<pos:position pos:line="24" pos:column="26"/></name><operator pos:line="24" pos:column="26">-&gt;<pos:position pos:line="24" pos:column="31"/></operator><name pos:line="24" pos:column="28">conditionals<pos:position pos:line="24" pos:column="40"/></name><operator pos:line="24" pos:column="40">-&gt;<pos:position pos:line="24" pos:column="45"/></operator><name pos:line="24" pos:column="42">nelts<pos:position pos:line="24" pos:column="47"/></name></name></expr>;<pos:position pos:line="24" pos:column="48"/></condition> <incr><expr><operator pos:line="24" pos:column="49">++<pos:position pos:line="24" pos:column="51"/></operator><name pos:line="24" pos:column="51">i<pos:position pos:line="24" pos:column="52"/></name></expr></incr>)<pos:position pos:line="24" pos:column="53"/></control> <block pos:line="24" pos:column="54">{
        <decl_stmt><decl><type><name pos:line="25" pos:column="9">sei_entry<pos:position pos:line="25" pos:column="18"/></name> <modifier pos:line="25" pos:column="19">*<pos:position pos:line="25" pos:column="20"/></modifier></type><name pos:line="25" pos:column="20">b<pos:position pos:line="25" pos:column="21"/></name> <init pos:line="25" pos:column="22">= <expr><operator pos:line="25" pos:column="24">&amp;<pos:position pos:line="25" pos:column="29"/></operator><name><name pos:line="25" pos:column="25">entries<pos:position pos:line="25" pos:column="32"/></name><index pos:line="25" pos:column="32">[<expr><name pos:line="25" pos:column="33">i<pos:position pos:line="25" pos:column="34"/></name></expr>]<pos:position pos:line="25" pos:column="35"/></index></name></expr></init></decl>;<pos:position pos:line="25" pos:column="36"/></decl_stmt>

	<comment type="block" pos:line="27" pos:column="9">/* Optimize the case where a bunch of directives in a row use the
	 * same header.  Remember we don't need to strcmp the two header
	 * names because we made sure the pointers were equal during
	 * configuration.
	 */</comment>
	<if pos:line="32" pos:column="9">if <condition pos:line="32" pos:column="12">(<expr><name><name pos:line="32" pos:column="13">b<pos:position pos:line="32" pos:column="14"/></name><operator pos:line="32" pos:column="14">-&gt;<pos:position pos:line="32" pos:column="19"/></operator><name pos:line="32" pos:column="16">name<pos:position pos:line="32" pos:column="20"/></name></name> <operator pos:line="32" pos:column="21">!=<pos:position pos:line="32" pos:column="23"/></operator> <name pos:line="32" pos:column="24">last_name<pos:position pos:line="32" pos:column="33"/></name></expr>)<pos:position pos:line="32" pos:column="34"/></condition><then pos:line="32" pos:column="34"> <block pos:line="32" pos:column="35">{
	    <expr_stmt><expr><name pos:line="33" pos:column="13">last_name<pos:position pos:line="33" pos:column="22"/></name> <operator pos:line="33" pos:column="23">=<pos:position pos:line="33" pos:column="24"/></operator> <name><name pos:line="33" pos:column="25">b<pos:position pos:line="33" pos:column="26"/></name><operator pos:line="33" pos:column="26">-&gt;<pos:position pos:line="33" pos:column="31"/></operator><name pos:line="33" pos:column="28">name<pos:position pos:line="33" pos:column="32"/></name></name></expr>;<pos:position pos:line="33" pos:column="33"/></expr_stmt>
	    <switch pos:line="34" pos:column="13">switch <condition pos:line="34" pos:column="20">(<expr><name><name pos:line="34" pos:column="21">b<pos:position pos:line="34" pos:column="22"/></name><operator pos:line="34" pos:column="22">-&gt;<pos:position pos:line="34" pos:column="27"/></operator><name pos:line="34" pos:column="24">special_type<pos:position pos:line="34" pos:column="36"/></name></name></expr>)<pos:position pos:line="34" pos:column="37"/></condition> <block pos:line="34" pos:column="38">{
	    <case pos:line="35" pos:column="13">case <expr><name pos:line="35" pos:column="18">SPECIAL_REMOTE_ADDR<pos:position pos:line="35" pos:column="37"/></name></expr>:<pos:position pos:line="35" pos:column="38"/></case>
		<expr_stmt><expr><name pos:line="36" pos:column="17">val<pos:position pos:line="36" pos:column="20"/></name> <operator pos:line="36" pos:column="21">=<pos:position pos:line="36" pos:column="22"/></operator> <name><name pos:line="36" pos:column="23">r<pos:position pos:line="36" pos:column="24"/></name><operator pos:line="36" pos:column="24">-&gt;<pos:position pos:line="36" pos:column="29"/></operator><name pos:line="36" pos:column="26">connection<pos:position pos:line="36" pos:column="36"/></name><operator pos:line="36" pos:column="36">-&gt;<pos:position pos:line="36" pos:column="41"/></operator><name pos:line="36" pos:column="38">remote_ip<pos:position pos:line="36" pos:column="47"/></name></name></expr>;<pos:position pos:line="36" pos:column="48"/></expr_stmt>
		<break pos:line="37" pos:column="17">break;<pos:position pos:line="37" pos:column="23"/></break>
	    <case pos:line="38" pos:column="13">case <expr><name pos:line="38" pos:column="18">SPECIAL_REMOTE_HOST<pos:position pos:line="38" pos:column="37"/></name></expr>:<pos:position pos:line="38" pos:column="38"/></case>
		<expr_stmt><expr><name pos:line="39" pos:column="17">val<pos:position pos:line="39" pos:column="20"/></name> <operator pos:line="39" pos:column="21">=<pos:position pos:line="39" pos:column="22"/></operator>  <call><name pos:line="39" pos:column="24">ap_get_remote_host<pos:position pos:line="39" pos:column="42"/></name><argument_list pos:line="39" pos:column="42">(<argument><expr><name><name pos:line="39" pos:column="43">r<pos:position pos:line="39" pos:column="44"/></name><operator pos:line="39" pos:column="44">-&gt;<pos:position pos:line="39" pos:column="49"/></operator><name pos:line="39" pos:column="46">connection<pos:position pos:line="39" pos:column="56"/></name></name></expr></argument>, <argument><expr><name><name pos:line="39" pos:column="58">r<pos:position pos:line="39" pos:column="59"/></name><operator pos:line="39" pos:column="59">-&gt;<pos:position pos:line="39" pos:column="64"/></operator><name pos:line="39" pos:column="61">per_dir_config<pos:position pos:line="39" pos:column="75"/></name></name></expr></argument>,
					  <argument><expr><name pos:line="40" pos:column="43">REMOTE_NAME<pos:position pos:line="40" pos:column="54"/></name></expr></argument>, <argument><expr><name pos:line="40" pos:column="56">NULL<pos:position pos:line="40" pos:column="60"/></name></expr></argument>)<pos:position pos:line="40" pos:column="61"/></argument_list></call></expr>;<pos:position pos:line="40" pos:column="62"/></expr_stmt>
		<break pos:line="41" pos:column="17">break;<pos:position pos:line="41" pos:column="23"/></break>
	    <case pos:line="42" pos:column="13">case <expr><name pos:line="42" pos:column="18">SPECIAL_REMOTE_USER<pos:position pos:line="42" pos:column="37"/></name></expr>:<pos:position pos:line="42" pos:column="38"/></case>
		<expr_stmt><expr><name pos:line="43" pos:column="17">val<pos:position pos:line="43" pos:column="20"/></name> <operator pos:line="43" pos:column="21">=<pos:position pos:line="43" pos:column="22"/></operator> <name><name pos:line="43" pos:column="23">r<pos:position pos:line="43" pos:column="24"/></name><operator pos:line="43" pos:column="24">-&gt;<pos:position pos:line="43" pos:column="29"/></operator><name pos:line="43" pos:column="26">user<pos:position pos:line="43" pos:column="30"/></name></name></expr>;<pos:position pos:line="43" pos:column="31"/></expr_stmt>
		<break pos:line="44" pos:column="17">break;<pos:position pos:line="44" pos:column="23"/></break>
	    <case pos:line="45" pos:column="13">case <expr><name pos:line="45" pos:column="18">SPECIAL_REQUEST_URI<pos:position pos:line="45" pos:column="37"/></name></expr>:<pos:position pos:line="45" pos:column="38"/></case>
		<expr_stmt><expr><name pos:line="46" pos:column="17">val<pos:position pos:line="46" pos:column="20"/></name> <operator pos:line="46" pos:column="21">=<pos:position pos:line="46" pos:column="22"/></operator> <name><name pos:line="46" pos:column="23">r<pos:position pos:line="46" pos:column="24"/></name><operator pos:line="46" pos:column="24">-&gt;<pos:position pos:line="46" pos:column="29"/></operator><name pos:line="46" pos:column="26">uri<pos:position pos:line="46" pos:column="29"/></name></name></expr>;<pos:position pos:line="46" pos:column="30"/></expr_stmt>
		<break pos:line="47" pos:column="17">break;<pos:position pos:line="47" pos:column="23"/></break>
	    <case pos:line="48" pos:column="13">case <expr><name pos:line="48" pos:column="18">SPECIAL_REQUEST_METHOD<pos:position pos:line="48" pos:column="40"/></name></expr>:<pos:position pos:line="48" pos:column="41"/></case>
		<expr_stmt><expr><name pos:line="49" pos:column="17">val<pos:position pos:line="49" pos:column="20"/></name> <operator pos:line="49" pos:column="21">=<pos:position pos:line="49" pos:column="22"/></operator> <name><name pos:line="49" pos:column="23">r<pos:position pos:line="49" pos:column="24"/></name><operator pos:line="49" pos:column="24">-&gt;<pos:position pos:line="49" pos:column="29"/></operator><name pos:line="49" pos:column="26">method<pos:position pos:line="49" pos:column="32"/></name></name></expr>;<pos:position pos:line="49" pos:column="33"/></expr_stmt>
		<break pos:line="50" pos:column="17">break;<pos:position pos:line="50" pos:column="23"/></break>
	    <case pos:line="51" pos:column="13">case <expr><name pos:line="51" pos:column="18">SPECIAL_REQUEST_PROTOCOL<pos:position pos:line="51" pos:column="42"/></name></expr>:<pos:position pos:line="51" pos:column="43"/></case>
		<expr_stmt><expr><name pos:line="52" pos:column="17">val<pos:position pos:line="52" pos:column="20"/></name> <operator pos:line="52" pos:column="21">=<pos:position pos:line="52" pos:column="22"/></operator> <name><name pos:line="52" pos:column="23">r<pos:position pos:line="52" pos:column="24"/></name><operator pos:line="52" pos:column="24">-&gt;<pos:position pos:line="52" pos:column="29"/></operator><name pos:line="52" pos:column="26">protocol<pos:position pos:line="52" pos:column="34"/></name></name></expr>;<pos:position pos:line="52" pos:column="35"/></expr_stmt>
		<break pos:line="53" pos:column="17">break;<pos:position pos:line="53" pos:column="23"/></break>
	    <case pos:line="54" pos:column="13">case <expr><name pos:line="54" pos:column="18">SPECIAL_NOT<pos:position pos:line="54" pos:column="29"/></name></expr>:<pos:position pos:line="54" pos:column="30"/></case>
                <if pos:line="55" pos:column="17">if <condition pos:line="55" pos:column="20">(<expr><name><name pos:line="55" pos:column="21">b<pos:position pos:line="55" pos:column="22"/></name><operator pos:line="55" pos:column="22">-&gt;<pos:position pos:line="55" pos:column="27"/></operator><name pos:line="55" pos:column="24">pnamereg<pos:position pos:line="55" pos:column="32"/></name></name></expr>)<pos:position pos:line="55" pos:column="33"/></condition><then pos:line="55" pos:column="33"> <block pos:line="55" pos:column="34">{
                    <comment type="block" pos:line="56" pos:column="21">/* Matching headers_in against a regex. Iterate through
                     * the headers_in until we find a match or run out of
                     * headers.
                     */</comment>
                    <decl_stmt><decl><type><specifier pos:line="60" pos:column="21">const<pos:position pos:line="60" pos:column="26"/></specifier> <name pos:line="60" pos:column="27">apr_array_header_t<pos:position pos:line="60" pos:column="45"/></name> <modifier pos:line="60" pos:column="46">*<pos:position pos:line="60" pos:column="47"/></modifier></type><name pos:line="60" pos:column="47">arr<pos:position pos:line="60" pos:column="50"/></name> <init pos:line="60" pos:column="51">= <expr><call><name pos:line="60" pos:column="53">apr_table_elts<pos:position pos:line="60" pos:column="67"/></name><argument_list pos:line="60" pos:column="67">(<argument><expr><name><name pos:line="60" pos:column="68">r<pos:position pos:line="60" pos:column="69"/></name><operator pos:line="60" pos:column="69">-&gt;<pos:position pos:line="60" pos:column="74"/></operator><name pos:line="60" pos:column="71">headers_in<pos:position pos:line="60" pos:column="81"/></name></name></expr></argument>)<pos:position pos:line="60" pos:column="82"/></argument_list></call></expr></init></decl>;<pos:position pos:line="60" pos:column="83"/></decl_stmt>
                    <expr_stmt><expr><name pos:line="61" pos:column="21">elts<pos:position pos:line="61" pos:column="25"/></name> <operator pos:line="61" pos:column="26">=<pos:position pos:line="61" pos:column="27"/></operator> <operator pos:line="61" pos:column="28">(<pos:position pos:line="61" pos:column="29"/></operator><specifier pos:line="61" pos:column="29">const<pos:position pos:line="61" pos:column="34"/></specifier> <name pos:line="61" pos:column="35">apr_table_entry_t<pos:position pos:line="61" pos:column="52"/></name> <operator pos:line="61" pos:column="53">*<pos:position pos:line="61" pos:column="54"/></operator><operator pos:line="61" pos:column="54">)<pos:position pos:line="61" pos:column="55"/></operator> <name><name pos:line="61" pos:column="56">arr<pos:position pos:line="61" pos:column="59"/></name><operator pos:line="61" pos:column="59">-&gt;<pos:position pos:line="61" pos:column="64"/></operator><name pos:line="61" pos:column="61">elts<pos:position pos:line="61" pos:column="65"/></name></name></expr>;<pos:position pos:line="61" pos:column="66"/></expr_stmt>
                    <expr_stmt><expr><name pos:line="62" pos:column="21">val<pos:position pos:line="62" pos:column="24"/></name> <operator pos:line="62" pos:column="25">=<pos:position pos:line="62" pos:column="26"/></operator> <name pos:line="62" pos:column="27">NULL<pos:position pos:line="62" pos:column="31"/></name></expr>;<pos:position pos:line="62" pos:column="32"/></expr_stmt>
                    <for pos:line="63" pos:column="21">for <control pos:line="63" pos:column="25">(<init><expr><name pos:line="63" pos:column="26">j<pos:position pos:line="63" pos:column="27"/></name> <operator pos:line="63" pos:column="28">=<pos:position pos:line="63" pos:column="29"/></operator> <literal type="number" pos:line="63" pos:column="30">0<pos:position pos:line="63" pos:column="31"/></literal></expr>;<pos:position pos:line="63" pos:column="32"/></init> <condition><expr><name pos:line="63" pos:column="33">j<pos:position pos:line="63" pos:column="34"/></name> <operator pos:line="63" pos:column="35">&lt;<pos:position pos:line="63" pos:column="39"/></operator> <name><name pos:line="63" pos:column="37">arr<pos:position pos:line="63" pos:column="40"/></name><operator pos:line="63" pos:column="40">-&gt;<pos:position pos:line="63" pos:column="45"/></operator><name pos:line="63" pos:column="42">nelts<pos:position pos:line="63" pos:column="47"/></name></name></expr>;<pos:position pos:line="63" pos:column="48"/></condition> <incr><expr><operator pos:line="63" pos:column="49">++<pos:position pos:line="63" pos:column="51"/></operator><name pos:line="63" pos:column="51">j<pos:position pos:line="63" pos:column="52"/></name></expr></incr>)<pos:position pos:line="63" pos:column="53"/></control> <block pos:line="63" pos:column="54">{
                        <if pos:line="64" pos:column="25">if <condition pos:line="64" pos:column="28">(<expr><operator pos:line="64" pos:column="29">!<pos:position pos:line="64" pos:column="30"/></operator><call><name pos:line="64" pos:column="30">ap_regexec<pos:position pos:line="64" pos:column="40"/></name><argument_list pos:line="64" pos:column="40">(<argument><expr><name><name pos:line="64" pos:column="41">b<pos:position pos:line="64" pos:column="42"/></name><operator pos:line="64" pos:column="42">-&gt;<pos:position pos:line="64" pos:column="47"/></operator><name pos:line="64" pos:column="44">pnamereg<pos:position pos:line="64" pos:column="52"/></name></name></expr></argument>, <argument><expr><name><name pos:line="64" pos:column="54">elts<pos:position pos:line="64" pos:column="58"/></name><index pos:line="64" pos:column="58">[<expr><name pos:line="64" pos:column="59">j<pos:position pos:line="64" pos:column="60"/></name></expr>]<pos:position pos:line="64" pos:column="61"/></index></name><operator pos:line="64" pos:column="61">.<pos:position pos:line="64" pos:column="62"/></operator><name pos:line="64" pos:column="62">key<pos:position pos:line="64" pos:column="65"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="64" pos:column="67">0<pos:position pos:line="64" pos:column="68"/></literal></expr></argument>, <argument><expr><name pos:line="64" pos:column="70">NULL<pos:position pos:line="64" pos:column="74"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="64" pos:column="76">0<pos:position pos:line="64" pos:column="77"/></literal></expr></argument>)<pos:position pos:line="64" pos:column="78"/></argument_list></call></expr>)<pos:position pos:line="64" pos:column="79"/></condition><then pos:line="64" pos:column="79"> <block pos:line="64" pos:column="80">{ 
                            <expr_stmt><expr><name pos:line="65" pos:column="29">val<pos:position pos:line="65" pos:column="32"/></name> <operator pos:line="65" pos:column="33">=<pos:position pos:line="65" pos:column="34"/></operator> <name><name pos:line="65" pos:column="35">elts<pos:position pos:line="65" pos:column="39"/></name><index pos:line="65" pos:column="39">[<expr><name pos:line="65" pos:column="40">j<pos:position pos:line="65" pos:column="41"/></name></expr>]<pos:position pos:line="65" pos:column="42"/></index></name><operator pos:line="65" pos:column="42">.<pos:position pos:line="65" pos:column="43"/></operator><name pos:line="65" pos:column="43">val<pos:position pos:line="65" pos:column="46"/></name></expr>;<pos:position pos:line="65" pos:column="47"/></expr_stmt>
                        }<pos:position pos:line="66" pos:column="26"/></block></then></if>
                    }<pos:position pos:line="67" pos:column="22"/></block></for>
                }<pos:position pos:line="68" pos:column="18"/></block></then>
                <else pos:line="69" pos:column="17">else <block pos:line="69" pos:column="22">{
                    <comment type="block" pos:line="70" pos:column="21">/* Not matching against a regex */</comment>
                    <expr_stmt><expr><name pos:line="71" pos:column="21">val<pos:position pos:line="71" pos:column="24"/></name> <operator pos:line="71" pos:column="25">=<pos:position pos:line="71" pos:column="26"/></operator> <call><name pos:line="71" pos:column="27">apr_table_get<pos:position pos:line="71" pos:column="40"/></name><argument_list pos:line="71" pos:column="40">(<argument><expr><name><name pos:line="71" pos:column="41">r<pos:position pos:line="71" pos:column="42"/></name><operator pos:line="71" pos:column="42">-&gt;<pos:position pos:line="71" pos:column="47"/></operator><name pos:line="71" pos:column="44">headers_in<pos:position pos:line="71" pos:column="54"/></name></name></expr></argument>, <argument><expr><name><name pos:line="71" pos:column="56">b<pos:position pos:line="71" pos:column="57"/></name><operator pos:line="71" pos:column="57">-&gt;<pos:position pos:line="71" pos:column="62"/></operator><name pos:line="71" pos:column="59">name<pos:position pos:line="71" pos:column="63"/></name></name></expr></argument>)<pos:position pos:line="71" pos:column="64"/></argument_list></call></expr>;<pos:position pos:line="71" pos:column="65"/></expr_stmt>
                    <if pos:line="72" pos:column="21">if <condition pos:line="72" pos:column="24">(<expr><name pos:line="72" pos:column="25">val<pos:position pos:line="72" pos:column="28"/></name> <operator pos:line="72" pos:column="29">==<pos:position pos:line="72" pos:column="31"/></operator> <name pos:line="72" pos:column="32">NULL<pos:position pos:line="72" pos:column="36"/></name></expr>)<pos:position pos:line="72" pos:column="37"/></condition><then pos:line="72" pos:column="37"> <block pos:line="72" pos:column="38">{
                        <expr_stmt><expr><name pos:line="73" pos:column="25">val<pos:position pos:line="73" pos:column="28"/></name> <operator pos:line="73" pos:column="29">=<pos:position pos:line="73" pos:column="30"/></operator> <call><name pos:line="73" pos:column="31">apr_table_get<pos:position pos:line="73" pos:column="44"/></name><argument_list pos:line="73" pos:column="44">(<argument><expr><name><name pos:line="73" pos:column="45">r<pos:position pos:line="73" pos:column="46"/></name><operator pos:line="73" pos:column="46">-&gt;<pos:position pos:line="73" pos:column="51"/></operator><name pos:line="73" pos:column="48">subprocess_env<pos:position pos:line="73" pos:column="62"/></name></name></expr></argument>, <argument><expr><name><name pos:line="73" pos:column="64">b<pos:position pos:line="73" pos:column="65"/></name><operator pos:line="73" pos:column="65">-&gt;<pos:position pos:line="73" pos:column="70"/></operator><name pos:line="73" pos:column="67">name<pos:position pos:line="73" pos:column="71"/></name></name></expr></argument>)<pos:position pos:line="73" pos:column="72"/></argument_list></call></expr>;<pos:position pos:line="73" pos:column="73"/></expr_stmt>
                    }<pos:position pos:line="74" pos:column="22"/></block></then></if>
                }<pos:position pos:line="75" pos:column="18"/></block></else></if>
	    }<pos:position pos:line="76" pos:column="14"/></block></switch>
            <expr_stmt><expr><name pos:line="77" pos:column="13">val_len<pos:position pos:line="77" pos:column="20"/></name> <operator pos:line="77" pos:column="21">=<pos:position pos:line="77" pos:column="22"/></operator> <ternary><condition><expr><name pos:line="77" pos:column="23">val<pos:position pos:line="77" pos:column="26"/></name></expr> ?<pos:position pos:line="77" pos:column="28"/></condition><then pos:line="77" pos:column="28"> <expr><call><name pos:line="77" pos:column="29">strlen<pos:position pos:line="77" pos:column="35"/></name><argument_list pos:line="77" pos:column="35">(<argument><expr><name pos:line="77" pos:column="36">val<pos:position pos:line="77" pos:column="39"/></name></expr></argument>)<pos:position pos:line="77" pos:column="40"/></argument_list></call></expr> <pos:position pos:line="77" pos:column="41"/></then><else pos:line="77" pos:column="41">: <expr><literal type="number" pos:line="77" pos:column="43">0<pos:position pos:line="77" pos:column="44"/></literal></expr></else></ternary></expr>;<pos:position pos:line="77" pos:column="45"/></expr_stmt>
        }<pos:position pos:line="78" pos:column="10"/></block></then></if>

	<comment type="block" pos:line="80" pos:column="9">/*
	 * A NULL value indicates that the header field or special entity
	 * wasn't present or is undefined.  Represent that as an empty string
	 * so that REs like "^$" will work and allow envariable setting
	 * based on missing or empty field.
	 */</comment>
        <if pos:line="86" pos:column="9">if <condition pos:line="86" pos:column="12">(<expr><name pos:line="86" pos:column="13">val<pos:position pos:line="86" pos:column="16"/></name> <operator pos:line="86" pos:column="17">==<pos:position pos:line="86" pos:column="19"/></operator> <name pos:line="86" pos:column="20">NULL<pos:position pos:line="86" pos:column="24"/></name></expr>)<pos:position pos:line="86" pos:column="25"/></condition><then pos:line="86" pos:column="25"> <block pos:line="86" pos:column="26">{
            <expr_stmt><expr><name pos:line="87" pos:column="13">val<pos:position pos:line="87" pos:column="16"/></name> <operator pos:line="87" pos:column="17">=<pos:position pos:line="87" pos:column="18"/></operator> <literal type="string" pos:line="87" pos:column="19">""<pos:position pos:line="87" pos:column="21"/></literal></expr>;<pos:position pos:line="87" pos:column="22"/></expr_stmt>
            <expr_stmt><expr><name pos:line="88" pos:column="13">val_len<pos:position pos:line="88" pos:column="20"/></name> <operator pos:line="88" pos:column="21">=<pos:position pos:line="88" pos:column="22"/></operator> <literal type="number" pos:line="88" pos:column="23">0<pos:position pos:line="88" pos:column="24"/></literal></expr>;<pos:position pos:line="88" pos:column="25"/></expr_stmt>
        }<pos:position pos:line="89" pos:column="10"/></block></then></if>

        <if pos:line="91" pos:column="9">if <condition pos:line="91" pos:column="12">(<expr><operator pos:line="91" pos:column="13">(<pos:position pos:line="91" pos:column="14"/></operator><name><name pos:line="91" pos:column="14">b<pos:position pos:line="91" pos:column="15"/></name><operator pos:line="91" pos:column="15">-&gt;<pos:position pos:line="91" pos:column="20"/></operator><name pos:line="91" pos:column="17">pattern<pos:position pos:line="91" pos:column="24"/></name></name> <operator pos:line="91" pos:column="25">&amp;&amp;<pos:position pos:line="91" pos:column="35"/></operator> <call><name pos:line="91" pos:column="28">apr_strmatch<pos:position pos:line="91" pos:column="40"/></name><argument_list pos:line="91" pos:column="40">(<argument><expr><name><name pos:line="91" pos:column="41">b<pos:position pos:line="91" pos:column="42"/></name><operator pos:line="91" pos:column="42">-&gt;<pos:position pos:line="91" pos:column="47"/></operator><name pos:line="91" pos:column="44">pattern<pos:position pos:line="91" pos:column="51"/></name></name></expr></argument>, <argument><expr><name pos:line="91" pos:column="53">val<pos:position pos:line="91" pos:column="56"/></name></expr></argument>, <argument><expr><name pos:line="91" pos:column="58">val_len<pos:position pos:line="91" pos:column="65"/></name></expr></argument>)<pos:position pos:line="91" pos:column="66"/></argument_list></call><operator pos:line="91" pos:column="66">)<pos:position pos:line="91" pos:column="67"/></operator> <operator pos:line="91" pos:column="68">||<pos:position pos:line="91" pos:column="70"/></operator>
            <operator pos:line="92" pos:column="13">(<pos:position pos:line="92" pos:column="14"/></operator><operator pos:line="92" pos:column="14">!<pos:position pos:line="92" pos:column="15"/></operator><name><name pos:line="92" pos:column="15">b<pos:position pos:line="92" pos:column="16"/></name><operator pos:line="92" pos:column="16">-&gt;<pos:position pos:line="92" pos:column="21"/></operator><name pos:line="92" pos:column="18">pattern<pos:position pos:line="92" pos:column="25"/></name></name> <operator pos:line="92" pos:column="26">&amp;&amp;<pos:position pos:line="92" pos:column="36"/></operator> <operator pos:line="92" pos:column="29">!<pos:position pos:line="92" pos:column="30"/></operator><call><name pos:line="92" pos:column="30">ap_regexec<pos:position pos:line="92" pos:column="40"/></name><argument_list pos:line="92" pos:column="40">(<argument><expr><name><name pos:line="92" pos:column="41">b<pos:position pos:line="92" pos:column="42"/></name><operator pos:line="92" pos:column="42">-&gt;<pos:position pos:line="92" pos:column="47"/></operator><name pos:line="92" pos:column="44">preg<pos:position pos:line="92" pos:column="48"/></name></name></expr></argument>, <argument><expr><name pos:line="92" pos:column="50">val<pos:position pos:line="92" pos:column="53"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="92" pos:column="55">0<pos:position pos:line="92" pos:column="56"/></literal></expr></argument>, <argument><expr><name pos:line="92" pos:column="58">NULL<pos:position pos:line="92" pos:column="62"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="92" pos:column="64">0<pos:position pos:line="92" pos:column="65"/></literal></expr></argument>)<pos:position pos:line="92" pos:column="66"/></argument_list></call><operator pos:line="92" pos:column="66">)<pos:position pos:line="92" pos:column="67"/></operator></expr>)<pos:position pos:line="92" pos:column="68"/></condition><then pos:line="92" pos:column="68"> <block pos:line="92" pos:column="69">{
	    <decl_stmt><decl><type><specifier pos:line="93" pos:column="13">const<pos:position pos:line="93" pos:column="18"/></specifier> <name pos:line="93" pos:column="19">apr_array_header_t<pos:position pos:line="93" pos:column="37"/></name> <modifier pos:line="93" pos:column="38">*<pos:position pos:line="93" pos:column="39"/></modifier></type><name pos:line="93" pos:column="39">arr<pos:position pos:line="93" pos:column="42"/></name> <init pos:line="93" pos:column="43">= <expr><call><name pos:line="93" pos:column="45">apr_table_elts<pos:position pos:line="93" pos:column="59"/></name><argument_list pos:line="93" pos:column="59">(<argument><expr><name><name pos:line="93" pos:column="60">b<pos:position pos:line="93" pos:column="61"/></name><operator pos:line="93" pos:column="61">-&gt;<pos:position pos:line="93" pos:column="66"/></operator><name pos:line="93" pos:column="63">features<pos:position pos:line="93" pos:column="71"/></name></name></expr></argument>)<pos:position pos:line="93" pos:column="72"/></argument_list></call></expr></init></decl>;<pos:position pos:line="93" pos:column="73"/></decl_stmt>
            <expr_stmt><expr><name pos:line="94" pos:column="13">elts<pos:position pos:line="94" pos:column="17"/></name> <operator pos:line="94" pos:column="18">=<pos:position pos:line="94" pos:column="19"/></operator> <operator pos:line="94" pos:column="20">(<pos:position pos:line="94" pos:column="21"/></operator><specifier pos:line="94" pos:column="21">const<pos:position pos:line="94" pos:column="26"/></specifier> <name pos:line="94" pos:column="27">apr_table_entry_t<pos:position pos:line="94" pos:column="44"/></name> <operator pos:line="94" pos:column="45">*<pos:position pos:line="94" pos:column="46"/></operator><operator pos:line="94" pos:column="46">)<pos:position pos:line="94" pos:column="47"/></operator> <name><name pos:line="94" pos:column="48">arr<pos:position pos:line="94" pos:column="51"/></name><operator pos:line="94" pos:column="51">-&gt;<pos:position pos:line="94" pos:column="56"/></operator><name pos:line="94" pos:column="53">elts<pos:position pos:line="94" pos:column="57"/></name></name></expr>;<pos:position pos:line="94" pos:column="58"/></expr_stmt>

            <for pos:line="96" pos:column="13">for <control pos:line="96" pos:column="17">(<init><expr><name pos:line="96" pos:column="18">j<pos:position pos:line="96" pos:column="19"/></name> <operator pos:line="96" pos:column="20">=<pos:position pos:line="96" pos:column="21"/></operator> <literal type="number" pos:line="96" pos:column="22">0<pos:position pos:line="96" pos:column="23"/></literal></expr>;<pos:position pos:line="96" pos:column="24"/></init> <condition><expr><name pos:line="96" pos:column="25">j<pos:position pos:line="96" pos:column="26"/></name> <operator pos:line="96" pos:column="27">&lt;<pos:position pos:line="96" pos:column="31"/></operator> <name><name pos:line="96" pos:column="29">arr<pos:position pos:line="96" pos:column="32"/></name><operator pos:line="96" pos:column="32">-&gt;<pos:position pos:line="96" pos:column="37"/></operator><name pos:line="96" pos:column="34">nelts<pos:position pos:line="96" pos:column="39"/></name></name></expr>;<pos:position pos:line="96" pos:column="40"/></condition> <incr><expr><operator pos:line="96" pos:column="41">++<pos:position pos:line="96" pos:column="43"/></operator><name pos:line="96" pos:column="43">j<pos:position pos:line="96" pos:column="44"/></name></expr></incr>)<pos:position pos:line="96" pos:column="45"/></control> <block pos:line="96" pos:column="46">{
                <if pos:line="97" pos:column="17">if <condition pos:line="97" pos:column="20">(<expr><operator pos:line="97" pos:column="21">*<pos:position pos:line="97" pos:column="22"/></operator><operator pos:line="97" pos:column="22">(<pos:position pos:line="97" pos:column="23"/></operator><name><name pos:line="97" pos:column="23">elts<pos:position pos:line="97" pos:column="27"/></name><index pos:line="97" pos:column="27">[<expr><name pos:line="97" pos:column="28">j<pos:position pos:line="97" pos:column="29"/></name></expr>]<pos:position pos:line="97" pos:column="30"/></index></name><operator pos:line="97" pos:column="30">.<pos:position pos:line="97" pos:column="31"/></operator><name pos:line="97" pos:column="31">val<pos:position pos:line="97" pos:column="34"/></name><operator pos:line="97" pos:column="34">)<pos:position pos:line="97" pos:column="35"/></operator> <operator pos:line="97" pos:column="36">==<pos:position pos:line="97" pos:column="38"/></operator> <literal type="char" pos:line="97" pos:column="39">'!'<pos:position pos:line="97" pos:column="42"/></literal></expr>)<pos:position pos:line="97" pos:column="43"/></condition><then pos:line="97" pos:column="43"> <block pos:line="97" pos:column="44">{
                    <expr_stmt><expr><call><name pos:line="98" pos:column="21">apr_table_unset<pos:position pos:line="98" pos:column="36"/></name><argument_list pos:line="98" pos:column="36">(<argument><expr><name><name pos:line="98" pos:column="37">r<pos:position pos:line="98" pos:column="38"/></name><operator pos:line="98" pos:column="38">-&gt;<pos:position pos:line="98" pos:column="43"/></operator><name pos:line="98" pos:column="40">subprocess_env<pos:position pos:line="98" pos:column="54"/></name></name></expr></argument>, <argument><expr><name><name pos:line="98" pos:column="56">elts<pos:position pos:line="98" pos:column="60"/></name><index pos:line="98" pos:column="60">[<expr><name pos:line="98" pos:column="61">j<pos:position pos:line="98" pos:column="62"/></name></expr>]<pos:position pos:line="98" pos:column="63"/></index></name><operator pos:line="98" pos:column="63">.<pos:position pos:line="98" pos:column="64"/></operator><name pos:line="98" pos:column="64">key<pos:position pos:line="98" pos:column="67"/></name></expr></argument>)<pos:position pos:line="98" pos:column="68"/></argument_list></call></expr>;<pos:position pos:line="98" pos:column="69"/></expr_stmt>
                }<pos:position pos:line="99" pos:column="18"/></block></then>
                <else pos:line="100" pos:column="17">else <block pos:line="100" pos:column="22">{
                    <expr_stmt><expr><call><name pos:line="101" pos:column="21">apr_table_setn<pos:position pos:line="101" pos:column="35"/></name><argument_list pos:line="101" pos:column="35">(<argument><expr><name><name pos:line="101" pos:column="36">r<pos:position pos:line="101" pos:column="37"/></name><operator pos:line="101" pos:column="37">-&gt;<pos:position pos:line="101" pos:column="42"/></operator><name pos:line="101" pos:column="39">subprocess_env<pos:position pos:line="101" pos:column="53"/></name></name></expr></argument>, <argument><expr><name><name pos:line="101" pos:column="55">elts<pos:position pos:line="101" pos:column="59"/></name><index pos:line="101" pos:column="59">[<expr><name pos:line="101" pos:column="60">j<pos:position pos:line="101" pos:column="61"/></name></expr>]<pos:position pos:line="101" pos:column="62"/></index></name><operator pos:line="101" pos:column="62">.<pos:position pos:line="101" pos:column="63"/></operator><name pos:line="101" pos:column="63">key<pos:position pos:line="101" pos:column="66"/></name></expr></argument>, <argument><expr><name><name pos:line="101" pos:column="68">elts<pos:position pos:line="101" pos:column="72"/></name><index pos:line="101" pos:column="72">[<expr><name pos:line="101" pos:column="73">j<pos:position pos:line="101" pos:column="74"/></name></expr>]<pos:position pos:line="101" pos:column="75"/></index></name><operator pos:line="101" pos:column="75">.<pos:position pos:line="101" pos:column="76"/></operator><name pos:line="101" pos:column="76">val<pos:position pos:line="101" pos:column="79"/></name></expr></argument>)<pos:position pos:line="101" pos:column="80"/></argument_list></call></expr>;<pos:position pos:line="101" pos:column="81"/></expr_stmt>
                }<pos:position pos:line="102" pos:column="18"/></block></else></if>
            }<pos:position pos:line="103" pos:column="14"/></block></for>
        }<pos:position pos:line="104" pos:column="10"/></block></then></if>
    }<pos:position pos:line="105" pos:column="6"/></block></for>

    <return pos:line="107" pos:column="5">return <expr><name pos:line="107" pos:column="12">DECLINED<pos:position pos:line="107" pos:column="20"/></name></expr>;<pos:position pos:line="107" pos:column="21"/></return>
}<pos:position pos:line="108" pos:column="2"/></block></function></unit>

<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/httpd/gumtree/httpd_repos_function_4102_last_repos.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">apr_status_t<pos:position pos:line="1" pos:column="20"/></name></type> <name pos:line="1" pos:column="21">regsub_core<pos:position pos:line="1" pos:column="32"/></name><parameter_list pos:line="1" pos:column="32">(<parameter><decl><type><name pos:line="1" pos:column="33">apr_pool_t<pos:position pos:line="1" pos:column="43"/></name> <modifier pos:line="1" pos:column="44">*<pos:position pos:line="1" pos:column="45"/></modifier></type><name pos:line="1" pos:column="45">p<pos:position pos:line="1" pos:column="46"/></name></decl></parameter>, <parameter><decl><type><name pos:line="1" pos:column="48">char<pos:position pos:line="1" pos:column="52"/></name> <modifier pos:line="1" pos:column="53">*<pos:position pos:line="1" pos:column="54"/></modifier><modifier pos:line="1" pos:column="54">*<pos:position pos:line="1" pos:column="55"/></modifier></type><name pos:line="1" pos:column="55">result<pos:position pos:line="1" pos:column="61"/></name></decl></parameter>,
                                <parameter><decl><type><name><name pos:line="2" pos:column="33">struct<pos:position pos:line="2" pos:column="39"/></name> <name pos:line="2" pos:column="40">ap_varbuf<pos:position pos:line="2" pos:column="49"/></name></name> <modifier pos:line="2" pos:column="50">*<pos:position pos:line="2" pos:column="51"/></modifier></type><name pos:line="2" pos:column="51">vb<pos:position pos:line="2" pos:column="53"/></name></decl></parameter>, <parameter><decl><type><specifier pos:line="2" pos:column="55">const<pos:position pos:line="2" pos:column="60"/></specifier> <name pos:line="2" pos:column="61">char<pos:position pos:line="2" pos:column="65"/></name> <modifier pos:line="2" pos:column="66">*<pos:position pos:line="2" pos:column="67"/></modifier></type><name pos:line="2" pos:column="67">input<pos:position pos:line="2" pos:column="72"/></name></decl></parameter>,
                                <parameter><decl><type><specifier pos:line="3" pos:column="33">const<pos:position pos:line="3" pos:column="38"/></specifier> <name pos:line="3" pos:column="39">char<pos:position pos:line="3" pos:column="43"/></name> <modifier pos:line="3" pos:column="44">*<pos:position pos:line="3" pos:column="45"/></modifier></type><name pos:line="3" pos:column="45">source<pos:position pos:line="3" pos:column="51"/></name></decl></parameter>, <parameter><decl><type><name pos:line="3" pos:column="53">apr_size_t<pos:position pos:line="3" pos:column="63"/></name></type> <name pos:line="3" pos:column="64">nmatch<pos:position pos:line="3" pos:column="70"/></name></decl></parameter>,
                                <parameter><decl><type><name pos:line="4" pos:column="33">ap_regmatch_t<pos:position pos:line="4" pos:column="46"/></name></type> <name><name pos:line="4" pos:column="47">pmatch<pos:position pos:line="4" pos:column="53"/></name><index pos:line="4" pos:column="53">[]<pos:position pos:line="4" pos:column="55"/></index></name></decl></parameter>, <parameter><decl><type><name pos:line="4" pos:column="57">apr_size_t<pos:position pos:line="4" pos:column="67"/></name></type> <name pos:line="4" pos:column="68">maxlen<pos:position pos:line="4" pos:column="74"/></name></decl></parameter>)<pos:position pos:line="4" pos:column="75"/></parameter_list>
<block pos:line="5" pos:column="1">{
    <decl_stmt><decl><type><specifier pos:line="6" pos:column="5">const<pos:position pos:line="6" pos:column="10"/></specifier> <name pos:line="6" pos:column="11">char<pos:position pos:line="6" pos:column="15"/></name> <modifier pos:line="6" pos:column="16">*<pos:position pos:line="6" pos:column="17"/></modifier></type><name pos:line="6" pos:column="17">src<pos:position pos:line="6" pos:column="20"/></name> <init pos:line="6" pos:column="21">= <expr><name pos:line="6" pos:column="23">input<pos:position pos:line="6" pos:column="28"/></name></expr></init></decl>;<pos:position pos:line="6" pos:column="29"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="7" pos:column="5">char<pos:position pos:line="7" pos:column="9"/></name> <modifier pos:line="7" pos:column="10">*<pos:position pos:line="7" pos:column="11"/></modifier></type><name pos:line="7" pos:column="11">dst<pos:position pos:line="7" pos:column="14"/></name></decl>;<pos:position pos:line="7" pos:column="15"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="8" pos:column="5">char<pos:position pos:line="8" pos:column="9"/></name></type> <name pos:line="8" pos:column="10">c<pos:position pos:line="8" pos:column="11"/></name></decl>;<pos:position pos:line="8" pos:column="12"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="9" pos:column="5">apr_size_t<pos:position pos:line="9" pos:column="15"/></name></type> <name pos:line="9" pos:column="16">no<pos:position pos:line="9" pos:column="18"/></name></decl>;<pos:position pos:line="9" pos:column="19"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="10" pos:column="5">apr_size_t<pos:position pos:line="10" pos:column="15"/></name></type> <name pos:line="10" pos:column="16">len<pos:position pos:line="10" pos:column="19"/></name> <init pos:line="10" pos:column="20">= <expr><literal type="number" pos:line="10" pos:column="22">0<pos:position pos:line="10" pos:column="23"/></literal></expr></init></decl>;<pos:position pos:line="10" pos:column="24"/></decl_stmt>

    <expr_stmt><expr><call><name pos:line="12" pos:column="5">AP_DEBUG_ASSERT<pos:position pos:line="12" pos:column="20"/></name><argument_list pos:line="12" pos:column="20">(<argument><expr><operator pos:line="12" pos:column="21">(<pos:position pos:line="12" pos:column="22"/></operator><name pos:line="12" pos:column="22">result<pos:position pos:line="12" pos:column="28"/></name> <operator pos:line="12" pos:column="29">&amp;&amp;<pos:position pos:line="12" pos:column="39"/></operator> <name pos:line="12" pos:column="32">p<pos:position pos:line="12" pos:column="33"/></name> <operator pos:line="12" pos:column="34">&amp;&amp;<pos:position pos:line="12" pos:column="44"/></operator> <operator pos:line="12" pos:column="37">!<pos:position pos:line="12" pos:column="38"/></operator><name pos:line="12" pos:column="38">vb<pos:position pos:line="12" pos:column="40"/></name><operator pos:line="12" pos:column="40">)<pos:position pos:line="12" pos:column="41"/></operator> <operator pos:line="12" pos:column="42">||<pos:position pos:line="12" pos:column="44"/></operator> <operator pos:line="12" pos:column="45">(<pos:position pos:line="12" pos:column="46"/></operator><name pos:line="12" pos:column="46">vb<pos:position pos:line="12" pos:column="48"/></name> <operator pos:line="12" pos:column="49">&amp;&amp;<pos:position pos:line="12" pos:column="59"/></operator> <operator pos:line="12" pos:column="52">!<pos:position pos:line="12" pos:column="53"/></operator><name pos:line="12" pos:column="53">p<pos:position pos:line="12" pos:column="54"/></name> <operator pos:line="12" pos:column="55">&amp;&amp;<pos:position pos:line="12" pos:column="65"/></operator> <operator pos:line="12" pos:column="58">!<pos:position pos:line="12" pos:column="59"/></operator><name pos:line="12" pos:column="59">result<pos:position pos:line="12" pos:column="65"/></name><operator pos:line="12" pos:column="65">)<pos:position pos:line="12" pos:column="66"/></operator></expr></argument>)<pos:position pos:line="12" pos:column="67"/></argument_list></call></expr>;<pos:position pos:line="12" pos:column="68"/></expr_stmt>
    <if pos:line="13" pos:column="5">if <condition pos:line="13" pos:column="8">(<expr><operator pos:line="13" pos:column="9">!<pos:position pos:line="13" pos:column="10"/></operator><name pos:line="13" pos:column="10">source<pos:position pos:line="13" pos:column="16"/></name> <operator pos:line="13" pos:column="17">||<pos:position pos:line="13" pos:column="19"/></operator> <name pos:line="13" pos:column="20">nmatch<pos:position pos:line="13" pos:column="26"/></name><operator pos:line="13" pos:column="26">&gt;<pos:position pos:line="13" pos:column="30"/></operator><name pos:line="13" pos:column="27">AP_MAX_REG_MATCH<pos:position pos:line="13" pos:column="43"/></name></expr>)<pos:position pos:line="13" pos:column="44"/></condition><then pos:line="13" pos:column="44">
        <block type="pseudo"><return pos:line="14" pos:column="9">return <expr><name pos:line="14" pos:column="16">APR_EINVAL<pos:position pos:line="14" pos:column="26"/></name></expr>;<pos:position pos:line="14" pos:column="27"/></return></block></then></if>
    <if pos:line="15" pos:column="5">if <condition pos:line="15" pos:column="8">(<expr><operator pos:line="15" pos:column="9">!<pos:position pos:line="15" pos:column="10"/></operator><name pos:line="15" pos:column="10">nmatch<pos:position pos:line="15" pos:column="16"/></name></expr>)<pos:position pos:line="15" pos:column="17"/></condition><then pos:line="15" pos:column="17"> <block pos:line="15" pos:column="18">{
        <expr_stmt><expr><name pos:line="16" pos:column="9">len<pos:position pos:line="16" pos:column="12"/></name> <operator pos:line="16" pos:column="13">=<pos:position pos:line="16" pos:column="14"/></operator> <call><name pos:line="16" pos:column="15">strlen<pos:position pos:line="16" pos:column="21"/></name><argument_list pos:line="16" pos:column="21">(<argument><expr><name pos:line="16" pos:column="22">src<pos:position pos:line="16" pos:column="25"/></name></expr></argument>)<pos:position pos:line="16" pos:column="26"/></argument_list></call></expr>;<pos:position pos:line="16" pos:column="27"/></expr_stmt>
        <if pos:line="17" pos:column="9">if <condition pos:line="17" pos:column="12">(<expr><name pos:line="17" pos:column="13">maxlen<pos:position pos:line="17" pos:column="19"/></name> <operator pos:line="17" pos:column="20">&gt;<pos:position pos:line="17" pos:column="24"/></operator> <literal type="number" pos:line="17" pos:column="22">0<pos:position pos:line="17" pos:column="23"/></literal> <operator pos:line="17" pos:column="24">&amp;&amp;<pos:position pos:line="17" pos:column="34"/></operator> <name pos:line="17" pos:column="27">len<pos:position pos:line="17" pos:column="30"/></name> <operator pos:line="17" pos:column="31">&gt;=<pos:position pos:line="17" pos:column="36"/></operator> <name pos:line="17" pos:column="34">maxlen<pos:position pos:line="17" pos:column="40"/></name></expr>)<pos:position pos:line="17" pos:column="41"/></condition><then pos:line="17" pos:column="41">
            <block type="pseudo"><return pos:line="18" pos:column="13">return <expr><name pos:line="18" pos:column="20">APR_ENOMEM<pos:position pos:line="18" pos:column="30"/></name></expr>;<pos:position pos:line="18" pos:column="31"/></return></block></then></if>
        <if pos:line="19" pos:column="9">if <condition pos:line="19" pos:column="12">(<expr><operator pos:line="19" pos:column="13">!<pos:position pos:line="19" pos:column="14"/></operator><name pos:line="19" pos:column="14">vb<pos:position pos:line="19" pos:column="16"/></name></expr>)<pos:position pos:line="19" pos:column="17"/></condition><then pos:line="19" pos:column="17"> <block pos:line="19" pos:column="18">{
            <expr_stmt><expr><operator pos:line="20" pos:column="13">*<pos:position pos:line="20" pos:column="14"/></operator><name pos:line="20" pos:column="14">result<pos:position pos:line="20" pos:column="20"/></name> <operator pos:line="20" pos:column="21">=<pos:position pos:line="20" pos:column="22"/></operator> <call><name pos:line="20" pos:column="23">apr_pstrmemdup<pos:position pos:line="20" pos:column="37"/></name><argument_list pos:line="20" pos:column="37">(<argument><expr><name pos:line="20" pos:column="38">p<pos:position pos:line="20" pos:column="39"/></name></expr></argument>, <argument><expr><name pos:line="20" pos:column="41">src<pos:position pos:line="20" pos:column="44"/></name></expr></argument>, <argument><expr><name pos:line="20" pos:column="46">len<pos:position pos:line="20" pos:column="49"/></name></expr></argument>)<pos:position pos:line="20" pos:column="50"/></argument_list></call></expr>;<pos:position pos:line="20" pos:column="51"/></expr_stmt>
            <return pos:line="21" pos:column="13">return <expr><name pos:line="21" pos:column="20">APR_SUCCESS<pos:position pos:line="21" pos:column="31"/></name></expr>;<pos:position pos:line="21" pos:column="32"/></return>
        }<pos:position pos:line="22" pos:column="10"/></block></then>
        <else pos:line="23" pos:column="9">else <block pos:line="23" pos:column="14">{
            <expr_stmt><expr><call><name pos:line="24" pos:column="13">ap_varbuf_strmemcat<pos:position pos:line="24" pos:column="32"/></name><argument_list pos:line="24" pos:column="32">(<argument><expr><name pos:line="24" pos:column="33">vb<pos:position pos:line="24" pos:column="35"/></name></expr></argument>, <argument><expr><name pos:line="24" pos:column="37">src<pos:position pos:line="24" pos:column="40"/></name></expr></argument>, <argument><expr><name pos:line="24" pos:column="42">len<pos:position pos:line="24" pos:column="45"/></name></expr></argument>)<pos:position pos:line="24" pos:column="46"/></argument_list></call></expr>;<pos:position pos:line="24" pos:column="47"/></expr_stmt>
            <return pos:line="25" pos:column="13">return <expr><name pos:line="25" pos:column="20">APR_SUCCESS<pos:position pos:line="25" pos:column="31"/></name></expr>;<pos:position pos:line="25" pos:column="32"/></return>
        }<pos:position pos:line="26" pos:column="10"/></block></else></if>
    }<pos:position pos:line="27" pos:column="6"/></block></then></if>

    <comment type="block" pos:line="29" pos:column="5">/* First pass, find the size */</comment>
    <while pos:line="30" pos:column="5">while <condition pos:line="30" pos:column="11">(<expr><operator pos:line="30" pos:column="12">(<pos:position pos:line="30" pos:column="13"/></operator><name pos:line="30" pos:column="13">c<pos:position pos:line="30" pos:column="14"/></name> <operator pos:line="30" pos:column="15">=<pos:position pos:line="30" pos:column="16"/></operator> <operator pos:line="30" pos:column="17">*<pos:position pos:line="30" pos:column="18"/></operator><name pos:line="30" pos:column="18">src<pos:position pos:line="30" pos:column="21"/></name><operator pos:line="30" pos:column="21">++<pos:position pos:line="30" pos:column="23"/></operator><operator pos:line="30" pos:column="23">)<pos:position pos:line="30" pos:column="24"/></operator> <operator pos:line="30" pos:column="25">!=<pos:position pos:line="30" pos:column="27"/></operator> <literal type="char" pos:line="30" pos:column="28">'\0'<pos:position pos:line="30" pos:column="32"/></literal></expr>)<pos:position pos:line="30" pos:column="33"/></condition> <block pos:line="30" pos:column="34">{
        <if pos:line="31" pos:column="9">if <condition pos:line="31" pos:column="12">(<expr><name pos:line="31" pos:column="13">c<pos:position pos:line="31" pos:column="14"/></name> <operator pos:line="31" pos:column="15">==<pos:position pos:line="31" pos:column="17"/></operator> <literal type="char" pos:line="31" pos:column="18">'$'<pos:position pos:line="31" pos:column="21"/></literal> <operator pos:line="31" pos:column="22">&amp;&amp;<pos:position pos:line="31" pos:column="32"/></operator> <call><name pos:line="31" pos:column="25">apr_isdigit<pos:position pos:line="31" pos:column="36"/></name><argument_list pos:line="31" pos:column="36">(<argument><expr><operator pos:line="31" pos:column="37">*<pos:position pos:line="31" pos:column="38"/></operator><name pos:line="31" pos:column="38">src<pos:position pos:line="31" pos:column="41"/></name></expr></argument>)<pos:position pos:line="31" pos:column="42"/></argument_list></call></expr>)<pos:position pos:line="31" pos:column="43"/></condition><then pos:line="31" pos:column="43">
            <block type="pseudo"><expr_stmt><expr><name pos:line="32" pos:column="13">no<pos:position pos:line="32" pos:column="15"/></name> <operator pos:line="32" pos:column="16">=<pos:position pos:line="32" pos:column="17"/></operator> <operator pos:line="32" pos:column="18">*<pos:position pos:line="32" pos:column="19"/></operator><name pos:line="32" pos:column="19">src<pos:position pos:line="32" pos:column="22"/></name><operator pos:line="32" pos:column="22">++<pos:position pos:line="32" pos:column="24"/></operator> <operator pos:line="32" pos:column="25">-<pos:position pos:line="32" pos:column="26"/></operator> <literal type="char" pos:line="32" pos:column="27">'0'<pos:position pos:line="32" pos:column="30"/></literal></expr>;<pos:position pos:line="32" pos:column="31"/></expr_stmt></block></then>
        <else pos:line="33" pos:column="9">else
            <block type="pseudo"><expr_stmt><expr><name pos:line="34" pos:column="13">no<pos:position pos:line="34" pos:column="15"/></name> <operator pos:line="34" pos:column="16">=<pos:position pos:line="34" pos:column="17"/></operator> <name pos:line="34" pos:column="18">AP_MAX_REG_MATCH<pos:position pos:line="34" pos:column="34"/></name></expr>;<pos:position pos:line="34" pos:column="35"/></expr_stmt></block></else></if>

        <if pos:line="36" pos:column="9">if <condition pos:line="36" pos:column="12">(<expr><name pos:line="36" pos:column="13">no<pos:position pos:line="36" pos:column="15"/></name> <operator pos:line="36" pos:column="16">&gt;=<pos:position pos:line="36" pos:column="21"/></operator> <name pos:line="36" pos:column="19">AP_MAX_REG_MATCH<pos:position pos:line="36" pos:column="35"/></name></expr>)<pos:position pos:line="36" pos:column="36"/></condition><then pos:line="36" pos:column="36"> <block pos:line="36" pos:column="37">{  <comment type="block" pos:line="36" pos:column="40">/* Ordinary character. */</comment>
            <if pos:line="37" pos:column="13">if <condition pos:line="37" pos:column="16">(<expr><name pos:line="37" pos:column="17">c<pos:position pos:line="37" pos:column="18"/></name> <operator pos:line="37" pos:column="19">==<pos:position pos:line="37" pos:column="21"/></operator> <literal type="char" pos:line="37" pos:column="22">'\\'<pos:position pos:line="37" pos:column="26"/></literal> <operator pos:line="37" pos:column="27">&amp;&amp;<pos:position pos:line="37" pos:column="37"/></operator> <operator pos:line="37" pos:column="30">*<pos:position pos:line="37" pos:column="31"/></operator><name pos:line="37" pos:column="31">src<pos:position pos:line="37" pos:column="34"/></name></expr>)<pos:position pos:line="37" pos:column="35"/></condition><then pos:line="37" pos:column="35">
                <block type="pseudo"><expr_stmt><expr><name pos:line="38" pos:column="17">src<pos:position pos:line="38" pos:column="20"/></name><operator pos:line="38" pos:column="20">++<pos:position pos:line="38" pos:column="22"/></operator></expr>;<pos:position pos:line="38" pos:column="23"/></expr_stmt></block></then></if>
            <expr_stmt><expr><name pos:line="39" pos:column="13">len<pos:position pos:line="39" pos:column="16"/></name><operator pos:line="39" pos:column="16">++<pos:position pos:line="39" pos:column="18"/></operator></expr>;<pos:position pos:line="39" pos:column="19"/></expr_stmt>
        }<pos:position pos:line="40" pos:column="10"/></block></then>
        <elseif pos:line="41" pos:column="9">else <if pos:line="41" pos:column="14">if <condition pos:line="41" pos:column="17">(<expr><name pos:line="41" pos:column="18">no<pos:position pos:line="41" pos:column="20"/></name> <operator pos:line="41" pos:column="21">&lt;<pos:position pos:line="41" pos:column="25"/></operator> <name pos:line="41" pos:column="23">nmatch<pos:position pos:line="41" pos:column="29"/></name> <operator pos:line="41" pos:column="30">&amp;&amp;<pos:position pos:line="41" pos:column="40"/></operator> <name><name pos:line="41" pos:column="33">pmatch<pos:position pos:line="41" pos:column="39"/></name><index pos:line="41" pos:column="39">[<expr><name pos:line="41" pos:column="40">no<pos:position pos:line="41" pos:column="42"/></name></expr>]<pos:position pos:line="41" pos:column="43"/></index></name><operator pos:line="41" pos:column="43">.<pos:position pos:line="41" pos:column="44"/></operator><name pos:line="41" pos:column="44">rm_so<pos:position pos:line="41" pos:column="49"/></name> <operator pos:line="41" pos:column="50">&lt;<pos:position pos:line="41" pos:column="54"/></operator> <name><name pos:line="41" pos:column="52">pmatch<pos:position pos:line="41" pos:column="58"/></name><index pos:line="41" pos:column="58">[<expr><name pos:line="41" pos:column="59">no<pos:position pos:line="41" pos:column="61"/></name></expr>]<pos:position pos:line="41" pos:column="62"/></index></name><operator pos:line="41" pos:column="62">.<pos:position pos:line="41" pos:column="63"/></operator><name pos:line="41" pos:column="63">rm_eo<pos:position pos:line="41" pos:column="68"/></name></expr>)<pos:position pos:line="41" pos:column="69"/></condition><then pos:line="41" pos:column="69"> <block pos:line="41" pos:column="70">{
            <if pos:line="42" pos:column="13">if <condition pos:line="42" pos:column="16">(<expr><name pos:line="42" pos:column="17">APR_SIZE_MAX<pos:position pos:line="42" pos:column="29"/></name> <operator pos:line="42" pos:column="30">-<pos:position pos:line="42" pos:column="31"/></operator> <name pos:line="42" pos:column="32">len<pos:position pos:line="42" pos:column="35"/></name> <operator pos:line="42" pos:column="36">&lt;=<pos:position pos:line="42" pos:column="41"/></operator> <name><name pos:line="42" pos:column="39">pmatch<pos:position pos:line="42" pos:column="45"/></name><index pos:line="42" pos:column="45">[<expr><name pos:line="42" pos:column="46">no<pos:position pos:line="42" pos:column="48"/></name></expr>]<pos:position pos:line="42" pos:column="49"/></index></name><operator pos:line="42" pos:column="49">.<pos:position pos:line="42" pos:column="50"/></operator><name pos:line="42" pos:column="50">rm_eo<pos:position pos:line="42" pos:column="55"/></name> <operator pos:line="42" pos:column="56">-<pos:position pos:line="42" pos:column="57"/></operator> <name><name pos:line="42" pos:column="58">pmatch<pos:position pos:line="42" pos:column="64"/></name><index pos:line="42" pos:column="64">[<expr><name pos:line="42" pos:column="65">no<pos:position pos:line="42" pos:column="67"/></name></expr>]<pos:position pos:line="42" pos:column="68"/></index></name><operator pos:line="42" pos:column="68">.<pos:position pos:line="42" pos:column="69"/></operator><name pos:line="42" pos:column="69">rm_so<pos:position pos:line="42" pos:column="74"/></name></expr>)<pos:position pos:line="42" pos:column="75"/></condition><then pos:line="42" pos:column="75">
                <block type="pseudo"><return pos:line="43" pos:column="17">return <expr><name pos:line="43" pos:column="24">APR_ENOMEM<pos:position pos:line="43" pos:column="34"/></name></expr>;<pos:position pos:line="43" pos:column="35"/></return></block></then></if>
            <expr_stmt><expr><name pos:line="44" pos:column="13">len<pos:position pos:line="44" pos:column="16"/></name> <operator pos:line="44" pos:column="17">+=<pos:position pos:line="44" pos:column="19"/></operator> <name><name pos:line="44" pos:column="20">pmatch<pos:position pos:line="44" pos:column="26"/></name><index pos:line="44" pos:column="26">[<expr><name pos:line="44" pos:column="27">no<pos:position pos:line="44" pos:column="29"/></name></expr>]<pos:position pos:line="44" pos:column="30"/></index></name><operator pos:line="44" pos:column="30">.<pos:position pos:line="44" pos:column="31"/></operator><name pos:line="44" pos:column="31">rm_eo<pos:position pos:line="44" pos:column="36"/></name> <operator pos:line="44" pos:column="37">-<pos:position pos:line="44" pos:column="38"/></operator> <name><name pos:line="44" pos:column="39">pmatch<pos:position pos:line="44" pos:column="45"/></name><index pos:line="44" pos:column="45">[<expr><name pos:line="44" pos:column="46">no<pos:position pos:line="44" pos:column="48"/></name></expr>]<pos:position pos:line="44" pos:column="49"/></index></name><operator pos:line="44" pos:column="49">.<pos:position pos:line="44" pos:column="50"/></operator><name pos:line="44" pos:column="50">rm_so<pos:position pos:line="44" pos:column="55"/></name></expr>;<pos:position pos:line="44" pos:column="56"/></expr_stmt>
        }<pos:position pos:line="45" pos:column="10"/></block></then></if></elseif></if>

    }<pos:position pos:line="47" pos:column="6"/></block></while>

    <if pos:line="49" pos:column="5">if <condition pos:line="49" pos:column="8">(<expr><name pos:line="49" pos:column="9">len<pos:position pos:line="49" pos:column="12"/></name> <operator pos:line="49" pos:column="13">&gt;=<pos:position pos:line="49" pos:column="18"/></operator> <name pos:line="49" pos:column="16">maxlen<pos:position pos:line="49" pos:column="22"/></name> <operator pos:line="49" pos:column="23">&amp;&amp;<pos:position pos:line="49" pos:column="33"/></operator> <name pos:line="49" pos:column="26">maxlen<pos:position pos:line="49" pos:column="32"/></name> <operator pos:line="49" pos:column="33">&gt;<pos:position pos:line="49" pos:column="37"/></operator> <literal type="number" pos:line="49" pos:column="35">0<pos:position pos:line="49" pos:column="36"/></literal></expr>)<pos:position pos:line="49" pos:column="37"/></condition><then pos:line="49" pos:column="37">
        <block type="pseudo"><return pos:line="50" pos:column="9">return <expr><name pos:line="50" pos:column="16">APR_ENOMEM<pos:position pos:line="50" pos:column="26"/></name></expr>;<pos:position pos:line="50" pos:column="27"/></return></block></then></if>

    <if pos:line="52" pos:column="5">if <condition pos:line="52" pos:column="8">(<expr><operator pos:line="52" pos:column="9">!<pos:position pos:line="52" pos:column="10"/></operator><name pos:line="52" pos:column="10">vb<pos:position pos:line="52" pos:column="12"/></name></expr>)<pos:position pos:line="52" pos:column="13"/></condition><then pos:line="52" pos:column="13"> <block pos:line="52" pos:column="14">{
        <expr_stmt><expr><operator pos:line="53" pos:column="9">*<pos:position pos:line="53" pos:column="10"/></operator><name pos:line="53" pos:column="10">result<pos:position pos:line="53" pos:column="16"/></name> <operator pos:line="53" pos:column="17">=<pos:position pos:line="53" pos:column="18"/></operator> <name pos:line="53" pos:column="19">dst<pos:position pos:line="53" pos:column="22"/></name> <operator pos:line="53" pos:column="23">=<pos:position pos:line="53" pos:column="24"/></operator> <call><name pos:line="53" pos:column="25">apr_palloc<pos:position pos:line="53" pos:column="35"/></name><argument_list pos:line="53" pos:column="35">(<argument><expr><name pos:line="53" pos:column="36">p<pos:position pos:line="53" pos:column="37"/></name></expr></argument>, <argument><expr><name pos:line="53" pos:column="39">len<pos:position pos:line="53" pos:column="42"/></name> <operator pos:line="53" pos:column="43">+<pos:position pos:line="53" pos:column="44"/></operator> <literal type="number" pos:line="53" pos:column="45">1<pos:position pos:line="53" pos:column="46"/></literal></expr></argument>)<pos:position pos:line="53" pos:column="47"/></argument_list></call></expr>;<pos:position pos:line="53" pos:column="48"/></expr_stmt>
    }<pos:position pos:line="54" pos:column="6"/></block></then>
    <else pos:line="55" pos:column="5">else <block pos:line="55" pos:column="10">{
        <if pos:line="56" pos:column="9">if <condition pos:line="56" pos:column="12">(<expr><name><name pos:line="56" pos:column="13">vb<pos:position pos:line="56" pos:column="15"/></name><operator pos:line="56" pos:column="15">-&gt;<pos:position pos:line="56" pos:column="20"/></operator><name pos:line="56" pos:column="17">strlen<pos:position pos:line="56" pos:column="23"/></name></name> <operator pos:line="56" pos:column="24">==<pos:position pos:line="56" pos:column="26"/></operator> <name pos:line="56" pos:column="27">AP_VARBUF_UNKNOWN<pos:position pos:line="56" pos:column="44"/></name></expr>)<pos:position pos:line="56" pos:column="45"/></condition><then pos:line="56" pos:column="45">
            <block type="pseudo"><expr_stmt><expr><name><name pos:line="57" pos:column="13">vb<pos:position pos:line="57" pos:column="15"/></name><operator pos:line="57" pos:column="15">-&gt;<pos:position pos:line="57" pos:column="20"/></operator><name pos:line="57" pos:column="17">strlen<pos:position pos:line="57" pos:column="23"/></name></name> <operator pos:line="57" pos:column="24">=<pos:position pos:line="57" pos:column="25"/></operator> <call><name pos:line="57" pos:column="26">strlen<pos:position pos:line="57" pos:column="32"/></name><argument_list pos:line="57" pos:column="32">(<argument><expr><name><name pos:line="57" pos:column="33">vb<pos:position pos:line="57" pos:column="35"/></name><operator pos:line="57" pos:column="35">-&gt;<pos:position pos:line="57" pos:column="40"/></operator><name pos:line="57" pos:column="37">buf<pos:position pos:line="57" pos:column="40"/></name></name></expr></argument>)<pos:position pos:line="57" pos:column="41"/></argument_list></call></expr>;<pos:position pos:line="57" pos:column="42"/></expr_stmt></block></then></if>
        <expr_stmt><expr><call><name pos:line="58" pos:column="9">ap_varbuf_grow<pos:position pos:line="58" pos:column="23"/></name><argument_list pos:line="58" pos:column="23">(<argument><expr><name pos:line="58" pos:column="24">vb<pos:position pos:line="58" pos:column="26"/></name></expr></argument>, <argument><expr><name><name pos:line="58" pos:column="28">vb<pos:position pos:line="58" pos:column="30"/></name><operator pos:line="58" pos:column="30">-&gt;<pos:position pos:line="58" pos:column="35"/></operator><name pos:line="58" pos:column="32">strlen<pos:position pos:line="58" pos:column="38"/></name></name> <operator pos:line="58" pos:column="39">+<pos:position pos:line="58" pos:column="40"/></operator> <name pos:line="58" pos:column="41">len<pos:position pos:line="58" pos:column="44"/></name></expr></argument>)<pos:position pos:line="58" pos:column="45"/></argument_list></call></expr>;<pos:position pos:line="58" pos:column="46"/></expr_stmt>
        <expr_stmt><expr><name pos:line="59" pos:column="9">dst<pos:position pos:line="59" pos:column="12"/></name> <operator pos:line="59" pos:column="13">=<pos:position pos:line="59" pos:column="14"/></operator> <name><name pos:line="59" pos:column="15">vb<pos:position pos:line="59" pos:column="17"/></name><operator pos:line="59" pos:column="17">-&gt;<pos:position pos:line="59" pos:column="22"/></operator><name pos:line="59" pos:column="19">buf<pos:position pos:line="59" pos:column="22"/></name></name> <operator pos:line="59" pos:column="23">+<pos:position pos:line="59" pos:column="24"/></operator> <name><name pos:line="59" pos:column="25">vb<pos:position pos:line="59" pos:column="27"/></name><operator pos:line="59" pos:column="27">-&gt;<pos:position pos:line="59" pos:column="32"/></operator><name pos:line="59" pos:column="29">strlen<pos:position pos:line="59" pos:column="35"/></name></name></expr>;<pos:position pos:line="59" pos:column="36"/></expr_stmt>
        <expr_stmt><expr><name><name pos:line="60" pos:column="9">vb<pos:position pos:line="60" pos:column="11"/></name><operator pos:line="60" pos:column="11">-&gt;<pos:position pos:line="60" pos:column="16"/></operator><name pos:line="60" pos:column="13">strlen<pos:position pos:line="60" pos:column="19"/></name></name> <operator pos:line="60" pos:column="20">+=<pos:position pos:line="60" pos:column="22"/></operator> <name pos:line="60" pos:column="23">len<pos:position pos:line="60" pos:column="26"/></name></expr>;<pos:position pos:line="60" pos:column="27"/></expr_stmt>
    }<pos:position pos:line="61" pos:column="6"/></block></else></if>

    <comment type="block" pos:line="63" pos:column="5">/* Now actually fill in the string */</comment>

    <expr_stmt><expr><name pos:line="65" pos:column="5">src<pos:position pos:line="65" pos:column="8"/></name> <operator pos:line="65" pos:column="9">=<pos:position pos:line="65" pos:column="10"/></operator> <name pos:line="65" pos:column="11">input<pos:position pos:line="65" pos:column="16"/></name></expr>;<pos:position pos:line="65" pos:column="17"/></expr_stmt>

    <while pos:line="67" pos:column="5">while <condition pos:line="67" pos:column="11">(<expr><operator pos:line="67" pos:column="12">(<pos:position pos:line="67" pos:column="13"/></operator><name pos:line="67" pos:column="13">c<pos:position pos:line="67" pos:column="14"/></name> <operator pos:line="67" pos:column="15">=<pos:position pos:line="67" pos:column="16"/></operator> <operator pos:line="67" pos:column="17">*<pos:position pos:line="67" pos:column="18"/></operator><name pos:line="67" pos:column="18">src<pos:position pos:line="67" pos:column="21"/></name><operator pos:line="67" pos:column="21">++<pos:position pos:line="67" pos:column="23"/></operator><operator pos:line="67" pos:column="23">)<pos:position pos:line="67" pos:column="24"/></operator> <operator pos:line="67" pos:column="25">!=<pos:position pos:line="67" pos:column="27"/></operator> <literal type="char" pos:line="67" pos:column="28">'\0'<pos:position pos:line="67" pos:column="32"/></literal></expr>)<pos:position pos:line="67" pos:column="33"/></condition> <block pos:line="67" pos:column="34">{
        <if pos:line="68" pos:column="9">if <condition pos:line="68" pos:column="12">(<expr><name pos:line="68" pos:column="13">c<pos:position pos:line="68" pos:column="14"/></name> <operator pos:line="68" pos:column="15">==<pos:position pos:line="68" pos:column="17"/></operator> <literal type="char" pos:line="68" pos:column="18">'$'<pos:position pos:line="68" pos:column="21"/></literal> <operator pos:line="68" pos:column="22">&amp;&amp;<pos:position pos:line="68" pos:column="32"/></operator> <call><name pos:line="68" pos:column="25">apr_isdigit<pos:position pos:line="68" pos:column="36"/></name><argument_list pos:line="68" pos:column="36">(<argument><expr><operator pos:line="68" pos:column="37">*<pos:position pos:line="68" pos:column="38"/></operator><name pos:line="68" pos:column="38">src<pos:position pos:line="68" pos:column="41"/></name></expr></argument>)<pos:position pos:line="68" pos:column="42"/></argument_list></call></expr>)<pos:position pos:line="68" pos:column="43"/></condition><then pos:line="68" pos:column="43">
            <block type="pseudo"><expr_stmt><expr><name pos:line="69" pos:column="13">no<pos:position pos:line="69" pos:column="15"/></name> <operator pos:line="69" pos:column="16">=<pos:position pos:line="69" pos:column="17"/></operator> <operator pos:line="69" pos:column="18">*<pos:position pos:line="69" pos:column="19"/></operator><name pos:line="69" pos:column="19">src<pos:position pos:line="69" pos:column="22"/></name><operator pos:line="69" pos:column="22">++<pos:position pos:line="69" pos:column="24"/></operator> <operator pos:line="69" pos:column="25">-<pos:position pos:line="69" pos:column="26"/></operator> <literal type="char" pos:line="69" pos:column="27">'0'<pos:position pos:line="69" pos:column="30"/></literal></expr>;<pos:position pos:line="69" pos:column="31"/></expr_stmt></block></then>
        <else pos:line="70" pos:column="9">else
            <block type="pseudo"><expr_stmt><expr><name pos:line="71" pos:column="13">no<pos:position pos:line="71" pos:column="15"/></name> <operator pos:line="71" pos:column="16">=<pos:position pos:line="71" pos:column="17"/></operator> <name pos:line="71" pos:column="18">AP_MAX_REG_MATCH<pos:position pos:line="71" pos:column="34"/></name></expr>;<pos:position pos:line="71" pos:column="35"/></expr_stmt></block></else></if>

        <if pos:line="73" pos:column="9">if <condition pos:line="73" pos:column="12">(<expr><name pos:line="73" pos:column="13">no<pos:position pos:line="73" pos:column="15"/></name> <operator pos:line="73" pos:column="16">&gt;=<pos:position pos:line="73" pos:column="21"/></operator> <name pos:line="73" pos:column="19">AP_MAX_REG_MATCH<pos:position pos:line="73" pos:column="35"/></name></expr>)<pos:position pos:line="73" pos:column="36"/></condition><then pos:line="73" pos:column="36"> <block pos:line="73" pos:column="37">{  <comment type="block" pos:line="73" pos:column="40">/* Ordinary character. */</comment>
            <if pos:line="74" pos:column="13">if <condition pos:line="74" pos:column="16">(<expr><name pos:line="74" pos:column="17">c<pos:position pos:line="74" pos:column="18"/></name> <operator pos:line="74" pos:column="19">==<pos:position pos:line="74" pos:column="21"/></operator> <literal type="char" pos:line="74" pos:column="22">'\\'<pos:position pos:line="74" pos:column="26"/></literal> <operator pos:line="74" pos:column="27">&amp;&amp;<pos:position pos:line="74" pos:column="37"/></operator> <operator pos:line="74" pos:column="30">*<pos:position pos:line="74" pos:column="31"/></operator><name pos:line="74" pos:column="31">src<pos:position pos:line="74" pos:column="34"/></name></expr>)<pos:position pos:line="74" pos:column="35"/></condition><then pos:line="74" pos:column="35">
                <block type="pseudo"><expr_stmt><expr><name pos:line="75" pos:column="17">c<pos:position pos:line="75" pos:column="18"/></name> <operator pos:line="75" pos:column="19">=<pos:position pos:line="75" pos:column="20"/></operator> <operator pos:line="75" pos:column="21">*<pos:position pos:line="75" pos:column="22"/></operator><name pos:line="75" pos:column="22">src<pos:position pos:line="75" pos:column="25"/></name><operator pos:line="75" pos:column="25">++<pos:position pos:line="75" pos:column="27"/></operator></expr>;<pos:position pos:line="75" pos:column="28"/></expr_stmt></block></then></if>
            <expr_stmt><expr><operator pos:line="76" pos:column="13">*<pos:position pos:line="76" pos:column="14"/></operator><name pos:line="76" pos:column="14">dst<pos:position pos:line="76" pos:column="17"/></name><operator pos:line="76" pos:column="17">++<pos:position pos:line="76" pos:column="19"/></operator> <operator pos:line="76" pos:column="20">=<pos:position pos:line="76" pos:column="21"/></operator> <name pos:line="76" pos:column="22">c<pos:position pos:line="76" pos:column="23"/></name></expr>;<pos:position pos:line="76" pos:column="24"/></expr_stmt>
        }<pos:position pos:line="77" pos:column="10"/></block></then>
        <elseif pos:line="78" pos:column="9">else <if pos:line="78" pos:column="14">if <condition pos:line="78" pos:column="17">(<expr><name pos:line="78" pos:column="18">no<pos:position pos:line="78" pos:column="20"/></name> <operator pos:line="78" pos:column="21">&lt;<pos:position pos:line="78" pos:column="25"/></operator> <name pos:line="78" pos:column="23">nmatch<pos:position pos:line="78" pos:column="29"/></name> <operator pos:line="78" pos:column="30">&amp;&amp;<pos:position pos:line="78" pos:column="40"/></operator> <name><name pos:line="78" pos:column="33">pmatch<pos:position pos:line="78" pos:column="39"/></name><index pos:line="78" pos:column="39">[<expr><name pos:line="78" pos:column="40">no<pos:position pos:line="78" pos:column="42"/></name></expr>]<pos:position pos:line="78" pos:column="43"/></index></name><operator pos:line="78" pos:column="43">.<pos:position pos:line="78" pos:column="44"/></operator><name pos:line="78" pos:column="44">rm_so<pos:position pos:line="78" pos:column="49"/></name> <operator pos:line="78" pos:column="50">&lt;<pos:position pos:line="78" pos:column="54"/></operator> <name><name pos:line="78" pos:column="52">pmatch<pos:position pos:line="78" pos:column="58"/></name><index pos:line="78" pos:column="58">[<expr><name pos:line="78" pos:column="59">no<pos:position pos:line="78" pos:column="61"/></name></expr>]<pos:position pos:line="78" pos:column="62"/></index></name><operator pos:line="78" pos:column="62">.<pos:position pos:line="78" pos:column="63"/></operator><name pos:line="78" pos:column="63">rm_eo<pos:position pos:line="78" pos:column="68"/></name></expr>)<pos:position pos:line="78" pos:column="69"/></condition><then pos:line="78" pos:column="69"> <block pos:line="78" pos:column="70">{
            <expr_stmt><expr><name pos:line="79" pos:column="13">len<pos:position pos:line="79" pos:column="16"/></name> <operator pos:line="79" pos:column="17">=<pos:position pos:line="79" pos:column="18"/></operator> <name><name pos:line="79" pos:column="19">pmatch<pos:position pos:line="79" pos:column="25"/></name><index pos:line="79" pos:column="25">[<expr><name pos:line="79" pos:column="26">no<pos:position pos:line="79" pos:column="28"/></name></expr>]<pos:position pos:line="79" pos:column="29"/></index></name><operator pos:line="79" pos:column="29">.<pos:position pos:line="79" pos:column="30"/></operator><name pos:line="79" pos:column="30">rm_eo<pos:position pos:line="79" pos:column="35"/></name> <operator pos:line="79" pos:column="36">-<pos:position pos:line="79" pos:column="37"/></operator> <name><name pos:line="79" pos:column="38">pmatch<pos:position pos:line="79" pos:column="44"/></name><index pos:line="79" pos:column="44">[<expr><name pos:line="79" pos:column="45">no<pos:position pos:line="79" pos:column="47"/></name></expr>]<pos:position pos:line="79" pos:column="48"/></index></name><operator pos:line="79" pos:column="48">.<pos:position pos:line="79" pos:column="49"/></operator><name pos:line="79" pos:column="49">rm_so<pos:position pos:line="79" pos:column="54"/></name></expr>;<pos:position pos:line="79" pos:column="55"/></expr_stmt>
            <expr_stmt><expr><call><name pos:line="80" pos:column="13">memcpy<pos:position pos:line="80" pos:column="19"/></name><argument_list pos:line="80" pos:column="19">(<argument><expr><name pos:line="80" pos:column="20">dst<pos:position pos:line="80" pos:column="23"/></name></expr></argument>, <argument><expr><name pos:line="80" pos:column="25">source<pos:position pos:line="80" pos:column="31"/></name> <operator pos:line="80" pos:column="32">+<pos:position pos:line="80" pos:column="33"/></operator> <name><name pos:line="80" pos:column="34">pmatch<pos:position pos:line="80" pos:column="40"/></name><index pos:line="80" pos:column="40">[<expr><name pos:line="80" pos:column="41">no<pos:position pos:line="80" pos:column="43"/></name></expr>]<pos:position pos:line="80" pos:column="44"/></index></name><operator pos:line="80" pos:column="44">.<pos:position pos:line="80" pos:column="45"/></operator><name pos:line="80" pos:column="45">rm_so<pos:position pos:line="80" pos:column="50"/></name></expr></argument>, <argument><expr><name pos:line="80" pos:column="52">len<pos:position pos:line="80" pos:column="55"/></name></expr></argument>)<pos:position pos:line="80" pos:column="56"/></argument_list></call></expr>;<pos:position pos:line="80" pos:column="57"/></expr_stmt>
            <expr_stmt><expr><name pos:line="81" pos:column="13">dst<pos:position pos:line="81" pos:column="16"/></name> <operator pos:line="81" pos:column="17">+=<pos:position pos:line="81" pos:column="19"/></operator> <name pos:line="81" pos:column="20">len<pos:position pos:line="81" pos:column="23"/></name></expr>;<pos:position pos:line="81" pos:column="24"/></expr_stmt>
        }<pos:position pos:line="82" pos:column="10"/></block></then></if></elseif></if>

    }<pos:position pos:line="84" pos:column="6"/></block></while>
    <expr_stmt><expr><operator pos:line="85" pos:column="5">*<pos:position pos:line="85" pos:column="6"/></operator><name pos:line="85" pos:column="6">dst<pos:position pos:line="85" pos:column="9"/></name> <operator pos:line="85" pos:column="10">=<pos:position pos:line="85" pos:column="11"/></operator> <literal type="char" pos:line="85" pos:column="12">'\0'<pos:position pos:line="85" pos:column="16"/></literal></expr>;<pos:position pos:line="85" pos:column="17"/></expr_stmt>

    <return pos:line="87" pos:column="5">return <expr><name pos:line="87" pos:column="12">APR_SUCCESS<pos:position pos:line="87" pos:column="23"/></name></expr>;<pos:position pos:line="87" pos:column="24"/></return>
}<pos:position pos:line="88" pos:column="2"/></block></function></unit>

<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/httpd/gumtree/httpd_repos_function_3349_httpd-2.4.3.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">apr_status_t<pos:position pos:line="1" pos:column="13"/></name></type> <name pos:line="1" pos:column="14">ap_queue_pop_something<pos:position pos:line="1" pos:column="36"/></name><parameter_list pos:line="1" pos:column="36">(<parameter><decl><type><name pos:line="1" pos:column="37">fd_queue_t<pos:position pos:line="1" pos:column="47"/></name> <modifier pos:line="1" pos:column="48">*<pos:position pos:line="1" pos:column="49"/></modifier></type> <name pos:line="1" pos:column="50">queue<pos:position pos:line="1" pos:column="55"/></name></decl></parameter>, <parameter><decl><type><name pos:line="1" pos:column="57">apr_socket_t<pos:position pos:line="1" pos:column="69"/></name> <modifier pos:line="1" pos:column="70">*<pos:position pos:line="1" pos:column="71"/></modifier><modifier pos:line="1" pos:column="71">*<pos:position pos:line="1" pos:column="72"/></modifier></type> <name pos:line="1" pos:column="73">sd<pos:position pos:line="1" pos:column="75"/></name></decl></parameter>,
                                    <parameter><decl><type><name pos:line="2" pos:column="37">event_conn_state_t<pos:position pos:line="2" pos:column="55"/></name> <modifier pos:line="2" pos:column="56">*<pos:position pos:line="2" pos:column="57"/></modifier><modifier pos:line="2" pos:column="57">*<pos:position pos:line="2" pos:column="58"/></modifier></type> <name pos:line="2" pos:column="59">ecs<pos:position pos:line="2" pos:column="62"/></name></decl></parameter>, <parameter><decl><type><name pos:line="2" pos:column="64">apr_pool_t<pos:position pos:line="2" pos:column="74"/></name> <modifier pos:line="2" pos:column="75">*<pos:position pos:line="2" pos:column="76"/></modifier><modifier pos:line="2" pos:column="76">*<pos:position pos:line="2" pos:column="77"/></modifier></type> <name pos:line="2" pos:column="78">p<pos:position pos:line="2" pos:column="79"/></name></decl></parameter>,
                                    <parameter><decl><type><name pos:line="3" pos:column="37">timer_event_t<pos:position pos:line="3" pos:column="50"/></name> <modifier pos:line="3" pos:column="51">*<pos:position pos:line="3" pos:column="52"/></modifier><modifier pos:line="3" pos:column="52">*<pos:position pos:line="3" pos:column="53"/></modifier></type> <name pos:line="3" pos:column="54">te_out<pos:position pos:line="3" pos:column="60"/></name></decl></parameter>)<pos:position pos:line="3" pos:column="61"/></parameter_list>
<block pos:line="4" pos:column="1">{
    <decl_stmt><decl><type><name pos:line="5" pos:column="5">fd_queue_elem_t<pos:position pos:line="5" pos:column="20"/></name> <modifier pos:line="5" pos:column="21">*<pos:position pos:line="5" pos:column="22"/></modifier></type><name pos:line="5" pos:column="22">elem<pos:position pos:line="5" pos:column="26"/></name></decl>;<pos:position pos:line="5" pos:column="27"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="6" pos:column="5">apr_status_t<pos:position pos:line="6" pos:column="17"/></name></type> <name pos:line="6" pos:column="18">rv<pos:position pos:line="6" pos:column="20"/></name></decl>;<pos:position pos:line="6" pos:column="21"/></decl_stmt>

    <if pos:line="8" pos:column="5">if <condition pos:line="8" pos:column="8">(<expr><operator pos:line="8" pos:column="9">(<pos:position pos:line="8" pos:column="10"/></operator><name pos:line="8" pos:column="10">rv<pos:position pos:line="8" pos:column="12"/></name> <operator pos:line="8" pos:column="13">=<pos:position pos:line="8" pos:column="14"/></operator> <call><name pos:line="8" pos:column="15">apr_thread_mutex_lock<pos:position pos:line="8" pos:column="36"/></name><argument_list pos:line="8" pos:column="36">(<argument><expr><name><name pos:line="8" pos:column="37">queue<pos:position pos:line="8" pos:column="42"/></name><operator pos:line="8" pos:column="42">-&gt;<pos:position pos:line="8" pos:column="47"/></operator><name pos:line="8" pos:column="44">one_big_mutex<pos:position pos:line="8" pos:column="57"/></name></name></expr></argument>)<pos:position pos:line="8" pos:column="58"/></argument_list></call><operator pos:line="8" pos:column="58">)<pos:position pos:line="8" pos:column="59"/></operator> <operator pos:line="8" pos:column="60">!=<pos:position pos:line="8" pos:column="62"/></operator> <name pos:line="8" pos:column="63">APR_SUCCESS<pos:position pos:line="8" pos:column="74"/></name></expr>)<pos:position pos:line="8" pos:column="75"/></condition><then pos:line="8" pos:column="75"> <block pos:line="8" pos:column="76">{
        <return pos:line="9" pos:column="9">return <expr><name pos:line="9" pos:column="16">rv<pos:position pos:line="9" pos:column="18"/></name></expr>;<pos:position pos:line="9" pos:column="19"/></return>
    }<pos:position pos:line="10" pos:column="6"/></block></then></if>

    <comment type="block" pos:line="12" pos:column="5">/* Keep waiting until we wake up and find that the queue is not empty. */</comment>
    <if pos:line="13" pos:column="5">if <condition pos:line="13" pos:column="8">(<expr><call><name pos:line="13" pos:column="9">ap_queue_empty<pos:position pos:line="13" pos:column="23"/></name><argument_list pos:line="13" pos:column="23">(<argument><expr><name pos:line="13" pos:column="24">queue<pos:position pos:line="13" pos:column="29"/></name></expr></argument>)<pos:position pos:line="13" pos:column="30"/></argument_list></call></expr>)<pos:position pos:line="13" pos:column="31"/></condition><then pos:line="13" pos:column="31"> <block pos:line="13" pos:column="32">{
        <if pos:line="14" pos:column="9">if <condition pos:line="14" pos:column="12">(<expr><operator pos:line="14" pos:column="13">!<pos:position pos:line="14" pos:column="14"/></operator><name><name pos:line="14" pos:column="14">queue<pos:position pos:line="14" pos:column="19"/></name><operator pos:line="14" pos:column="19">-&gt;<pos:position pos:line="14" pos:column="24"/></operator><name pos:line="14" pos:column="21">terminated<pos:position pos:line="14" pos:column="31"/></name></name></expr>)<pos:position pos:line="14" pos:column="32"/></condition><then pos:line="14" pos:column="32"> <block pos:line="14" pos:column="33">{
            <expr_stmt><expr><call><name pos:line="15" pos:column="13">apr_thread_cond_wait<pos:position pos:line="15" pos:column="33"/></name><argument_list pos:line="15" pos:column="33">(<argument><expr><name><name pos:line="15" pos:column="34">queue<pos:position pos:line="15" pos:column="39"/></name><operator pos:line="15" pos:column="39">-&gt;<pos:position pos:line="15" pos:column="44"/></operator><name pos:line="15" pos:column="41">not_empty<pos:position pos:line="15" pos:column="50"/></name></name></expr></argument>, <argument><expr><name><name pos:line="15" pos:column="52">queue<pos:position pos:line="15" pos:column="57"/></name><operator pos:line="15" pos:column="57">-&gt;<pos:position pos:line="15" pos:column="62"/></operator><name pos:line="15" pos:column="59">one_big_mutex<pos:position pos:line="15" pos:column="72"/></name></name></expr></argument>)<pos:position pos:line="15" pos:column="73"/></argument_list></call></expr>;<pos:position pos:line="15" pos:column="74"/></expr_stmt>
        }<pos:position pos:line="16" pos:column="10"/></block></then></if>
        <comment type="block" pos:line="17" pos:column="9">/* If we wake up and it's still empty, then we were interrupted */</comment>
        <if pos:line="18" pos:column="9">if <condition pos:line="18" pos:column="12">(<expr><call><name pos:line="18" pos:column="13">ap_queue_empty<pos:position pos:line="18" pos:column="27"/></name><argument_list pos:line="18" pos:column="27">(<argument><expr><name pos:line="18" pos:column="28">queue<pos:position pos:line="18" pos:column="33"/></name></expr></argument>)<pos:position pos:line="18" pos:column="34"/></argument_list></call></expr>)<pos:position pos:line="18" pos:column="35"/></condition><then pos:line="18" pos:column="35"> <block pos:line="18" pos:column="36">{
            <expr_stmt><expr><name pos:line="19" pos:column="13">rv<pos:position pos:line="19" pos:column="15"/></name> <operator pos:line="19" pos:column="16">=<pos:position pos:line="19" pos:column="17"/></operator> <call><name pos:line="19" pos:column="18">apr_thread_mutex_unlock<pos:position pos:line="19" pos:column="41"/></name><argument_list pos:line="19" pos:column="41">(<argument><expr><name><name pos:line="19" pos:column="42">queue<pos:position pos:line="19" pos:column="47"/></name><operator pos:line="19" pos:column="47">-&gt;<pos:position pos:line="19" pos:column="52"/></operator><name pos:line="19" pos:column="49">one_big_mutex<pos:position pos:line="19" pos:column="62"/></name></name></expr></argument>)<pos:position pos:line="19" pos:column="63"/></argument_list></call></expr>;<pos:position pos:line="19" pos:column="64"/></expr_stmt>
            <if pos:line="20" pos:column="13">if <condition pos:line="20" pos:column="16">(<expr><name pos:line="20" pos:column="17">rv<pos:position pos:line="20" pos:column="19"/></name> <operator pos:line="20" pos:column="20">!=<pos:position pos:line="20" pos:column="22"/></operator> <name pos:line="20" pos:column="23">APR_SUCCESS<pos:position pos:line="20" pos:column="34"/></name></expr>)<pos:position pos:line="20" pos:column="35"/></condition><then pos:line="20" pos:column="35"> <block pos:line="20" pos:column="36">{
                <return pos:line="21" pos:column="17">return <expr><name pos:line="21" pos:column="24">rv<pos:position pos:line="21" pos:column="26"/></name></expr>;<pos:position pos:line="21" pos:column="27"/></return>
            }<pos:position pos:line="22" pos:column="14"/></block></then></if>
            <if pos:line="23" pos:column="13">if <condition pos:line="23" pos:column="16">(<expr><name><name pos:line="23" pos:column="17">queue<pos:position pos:line="23" pos:column="22"/></name><operator pos:line="23" pos:column="22">-&gt;<pos:position pos:line="23" pos:column="27"/></operator><name pos:line="23" pos:column="24">terminated<pos:position pos:line="23" pos:column="34"/></name></name></expr>)<pos:position pos:line="23" pos:column="35"/></condition><then pos:line="23" pos:column="35"> <block pos:line="23" pos:column="36">{
                <return pos:line="24" pos:column="17">return <expr><name pos:line="24" pos:column="24">APR_EOF<pos:position pos:line="24" pos:column="31"/></name></expr>;<pos:position pos:line="24" pos:column="32"/></return> <comment type="block" pos:line="24" pos:column="33">/* no more elements ever again */</comment>
            }<pos:position pos:line="25" pos:column="14"/></block></then>
            <else pos:line="26" pos:column="13">else <block pos:line="26" pos:column="18">{
                <return pos:line="27" pos:column="17">return <expr><name pos:line="27" pos:column="24">APR_EINTR<pos:position pos:line="27" pos:column="33"/></name></expr>;<pos:position pos:line="27" pos:column="34"/></return>
            }<pos:position pos:line="28" pos:column="14"/></block></else></if>
        }<pos:position pos:line="29" pos:column="10"/></block></then></if>
    }<pos:position pos:line="30" pos:column="6"/></block></then></if>

    <expr_stmt><expr><operator pos:line="32" pos:column="5">*<pos:position pos:line="32" pos:column="6"/></operator><name pos:line="32" pos:column="6">te_out<pos:position pos:line="32" pos:column="12"/></name> <operator pos:line="32" pos:column="13">=<pos:position pos:line="32" pos:column="14"/></operator> <name pos:line="32" pos:column="15">NULL<pos:position pos:line="32" pos:column="19"/></name></expr>;<pos:position pos:line="32" pos:column="20"/></expr_stmt>

    <if pos:line="34" pos:column="5">if <condition pos:line="34" pos:column="8">(<expr><operator pos:line="34" pos:column="9">!<pos:position pos:line="34" pos:column="10"/></operator><call><name pos:line="34" pos:column="10">APR_RING_EMPTY<pos:position pos:line="34" pos:column="24"/></name><argument_list pos:line="34" pos:column="24">(<argument><expr><operator pos:line="34" pos:column="25">&amp;<pos:position pos:line="34" pos:column="30"/></operator><name><name pos:line="34" pos:column="26">queue<pos:position pos:line="34" pos:column="31"/></name><operator pos:line="34" pos:column="31">-&gt;<pos:position pos:line="34" pos:column="36"/></operator><name pos:line="34" pos:column="33">timers<pos:position pos:line="34" pos:column="39"/></name></name></expr></argument>, <argument><expr><name pos:line="34" pos:column="41">timer_event_t<pos:position pos:line="34" pos:column="54"/></name></expr></argument>, <argument><expr><name pos:line="34" pos:column="56">link<pos:position pos:line="34" pos:column="60"/></name></expr></argument>)<pos:position pos:line="34" pos:column="61"/></argument_list></call></expr>)<pos:position pos:line="34" pos:column="62"/></condition><then pos:line="34" pos:column="62"> <block pos:line="34" pos:column="63">{
        <expr_stmt><expr><operator pos:line="35" pos:column="9">*<pos:position pos:line="35" pos:column="10"/></operator><name pos:line="35" pos:column="10">te_out<pos:position pos:line="35" pos:column="16"/></name> <operator pos:line="35" pos:column="17">=<pos:position pos:line="35" pos:column="18"/></operator> <call><name pos:line="35" pos:column="19">APR_RING_FIRST<pos:position pos:line="35" pos:column="33"/></name><argument_list pos:line="35" pos:column="33">(<argument><expr><operator pos:line="35" pos:column="34">&amp;<pos:position pos:line="35" pos:column="39"/></operator><name><name pos:line="35" pos:column="35">queue<pos:position pos:line="35" pos:column="40"/></name><operator pos:line="35" pos:column="40">-&gt;<pos:position pos:line="35" pos:column="45"/></operator><name pos:line="35" pos:column="42">timers<pos:position pos:line="35" pos:column="48"/></name></name></expr></argument>)<pos:position pos:line="35" pos:column="49"/></argument_list></call></expr>;<pos:position pos:line="35" pos:column="50"/></expr_stmt>
        <expr_stmt><expr><call><name pos:line="36" pos:column="9">APR_RING_REMOVE<pos:position pos:line="36" pos:column="24"/></name><argument_list pos:line="36" pos:column="24">(<argument><expr><operator pos:line="36" pos:column="25">*<pos:position pos:line="36" pos:column="26"/></operator><name pos:line="36" pos:column="26">te_out<pos:position pos:line="36" pos:column="32"/></name></expr></argument>, <argument><expr><name pos:line="36" pos:column="34">link<pos:position pos:line="36" pos:column="38"/></name></expr></argument>)<pos:position pos:line="36" pos:column="39"/></argument_list></call></expr>;<pos:position pos:line="36" pos:column="40"/></expr_stmt>
    }<pos:position pos:line="37" pos:column="6"/></block></then>
    <else pos:line="38" pos:column="5">else <block pos:line="38" pos:column="10">{
        <expr_stmt><expr><name pos:line="39" pos:column="9">elem<pos:position pos:line="39" pos:column="13"/></name> <operator pos:line="39" pos:column="14">=<pos:position pos:line="39" pos:column="15"/></operator> <operator pos:line="39" pos:column="16">&amp;<pos:position pos:line="39" pos:column="21"/></operator><name><name pos:line="39" pos:column="17">queue<pos:position pos:line="39" pos:column="22"/></name><operator pos:line="39" pos:column="22">-&gt;<pos:position pos:line="39" pos:column="27"/></operator><name pos:line="39" pos:column="24">data<pos:position pos:line="39" pos:column="28"/></name><index pos:line="39" pos:column="28">[<expr><name><name pos:line="39" pos:column="29">queue<pos:position pos:line="39" pos:column="34"/></name><operator pos:line="39" pos:column="34">-&gt;<pos:position pos:line="39" pos:column="39"/></operator><name pos:line="39" pos:column="36">out<pos:position pos:line="39" pos:column="39"/></name></name></expr>]<pos:position pos:line="39" pos:column="40"/></index></name></expr>;<pos:position pos:line="39" pos:column="41"/></expr_stmt>
        <expr_stmt><expr><name><name pos:line="40" pos:column="9">queue<pos:position pos:line="40" pos:column="14"/></name><operator pos:line="40" pos:column="14">-&gt;<pos:position pos:line="40" pos:column="19"/></operator><name pos:line="40" pos:column="16">out<pos:position pos:line="40" pos:column="19"/></name></name><operator pos:line="40" pos:column="19">++<pos:position pos:line="40" pos:column="21"/></operator></expr>;<pos:position pos:line="40" pos:column="22"/></expr_stmt>
        <if pos:line="41" pos:column="9">if <condition pos:line="41" pos:column="12">(<expr><name><name pos:line="41" pos:column="13">queue<pos:position pos:line="41" pos:column="18"/></name><operator pos:line="41" pos:column="18">-&gt;<pos:position pos:line="41" pos:column="23"/></operator><name pos:line="41" pos:column="20">out<pos:position pos:line="41" pos:column="23"/></name></name> <operator pos:line="41" pos:column="24">&gt;=<pos:position pos:line="41" pos:column="29"/></operator> <name><name pos:line="41" pos:column="27">queue<pos:position pos:line="41" pos:column="32"/></name><operator pos:line="41" pos:column="32">-&gt;<pos:position pos:line="41" pos:column="37"/></operator><name pos:line="41" pos:column="34">bounds<pos:position pos:line="41" pos:column="40"/></name></name></expr>)<pos:position pos:line="41" pos:column="41"/></condition><then pos:line="41" pos:column="41">
            <block type="pseudo"><expr_stmt><expr><name><name pos:line="42" pos:column="13">queue<pos:position pos:line="42" pos:column="18"/></name><operator pos:line="42" pos:column="18">-&gt;<pos:position pos:line="42" pos:column="23"/></operator><name pos:line="42" pos:column="20">out<pos:position pos:line="42" pos:column="23"/></name></name> <operator pos:line="42" pos:column="24">-=<pos:position pos:line="42" pos:column="26"/></operator> <name><name pos:line="42" pos:column="27">queue<pos:position pos:line="42" pos:column="32"/></name><operator pos:line="42" pos:column="32">-&gt;<pos:position pos:line="42" pos:column="37"/></operator><name pos:line="42" pos:column="34">bounds<pos:position pos:line="42" pos:column="40"/></name></name></expr>;<pos:position pos:line="42" pos:column="41"/></expr_stmt></block></then></if>
        <expr_stmt><expr><name><name pos:line="43" pos:column="9">queue<pos:position pos:line="43" pos:column="14"/></name><operator pos:line="43" pos:column="14">-&gt;<pos:position pos:line="43" pos:column="19"/></operator><name pos:line="43" pos:column="16">nelts<pos:position pos:line="43" pos:column="21"/></name></name><operator pos:line="43" pos:column="21">--<pos:position pos:line="43" pos:column="23"/></operator></expr>;<pos:position pos:line="43" pos:column="24"/></expr_stmt>
        <expr_stmt><expr><operator pos:line="44" pos:column="9">*<pos:position pos:line="44" pos:column="10"/></operator><name pos:line="44" pos:column="10">sd<pos:position pos:line="44" pos:column="12"/></name> <operator pos:line="44" pos:column="13">=<pos:position pos:line="44" pos:column="14"/></operator> <name><name pos:line="44" pos:column="15">elem<pos:position pos:line="44" pos:column="19"/></name><operator pos:line="44" pos:column="19">-&gt;<pos:position pos:line="44" pos:column="24"/></operator><name pos:line="44" pos:column="21">sd<pos:position pos:line="44" pos:column="23"/></name></name></expr>;<pos:position pos:line="44" pos:column="24"/></expr_stmt>
        <expr_stmt><expr><operator pos:line="45" pos:column="9">*<pos:position pos:line="45" pos:column="10"/></operator><name pos:line="45" pos:column="10">ecs<pos:position pos:line="45" pos:column="13"/></name> <operator pos:line="45" pos:column="14">=<pos:position pos:line="45" pos:column="15"/></operator> <name><name pos:line="45" pos:column="16">elem<pos:position pos:line="45" pos:column="20"/></name><operator pos:line="45" pos:column="20">-&gt;<pos:position pos:line="45" pos:column="25"/></operator><name pos:line="45" pos:column="22">ecs<pos:position pos:line="45" pos:column="25"/></name></name></expr>;<pos:position pos:line="45" pos:column="26"/></expr_stmt>
        <expr_stmt><expr><operator pos:line="46" pos:column="9">*<pos:position pos:line="46" pos:column="10"/></operator><name pos:line="46" pos:column="10">p<pos:position pos:line="46" pos:column="11"/></name> <operator pos:line="46" pos:column="12">=<pos:position pos:line="46" pos:column="13"/></operator> <name><name pos:line="46" pos:column="14">elem<pos:position pos:line="46" pos:column="18"/></name><operator pos:line="46" pos:column="18">-&gt;<pos:position pos:line="46" pos:column="23"/></operator><name pos:line="46" pos:column="20">p<pos:position pos:line="46" pos:column="21"/></name></name></expr>;<pos:position pos:line="46" pos:column="22"/></expr_stmt>
<cpp:ifdef pos:line="47" pos:column="1">#<cpp:directive pos:line="47" pos:column="2">ifdef<pos:position pos:line="47" pos:column="7"/></cpp:directive> <name pos:line="47" pos:column="8">AP_DEBUG<pos:position pos:line="47" pos:column="16"/></name></cpp:ifdef>
        <expr_stmt><expr><name><name pos:line="48" pos:column="9">elem<pos:position pos:line="48" pos:column="13"/></name><operator pos:line="48" pos:column="13">-&gt;<pos:position pos:line="48" pos:column="18"/></operator><name pos:line="48" pos:column="15">sd<pos:position pos:line="48" pos:column="17"/></name></name> <operator pos:line="48" pos:column="18">=<pos:position pos:line="48" pos:column="19"/></operator> <name pos:line="48" pos:column="20">NULL<pos:position pos:line="48" pos:column="24"/></name></expr>;<pos:position pos:line="48" pos:column="25"/></expr_stmt>
        <expr_stmt><expr><name><name pos:line="49" pos:column="9">elem<pos:position pos:line="49" pos:column="13"/></name><operator pos:line="49" pos:column="13">-&gt;<pos:position pos:line="49" pos:column="18"/></operator><name pos:line="49" pos:column="15">p<pos:position pos:line="49" pos:column="16"/></name></name> <operator pos:line="49" pos:column="17">=<pos:position pos:line="49" pos:column="18"/></operator> <name pos:line="49" pos:column="19">NULL<pos:position pos:line="49" pos:column="23"/></name></expr>;<pos:position pos:line="49" pos:column="24"/></expr_stmt>
<cpp:endif pos:line="50" pos:column="1">#<cpp:directive pos:line="50" pos:column="2">endif<pos:position pos:line="50" pos:column="7"/></cpp:directive></cpp:endif> <comment type="block" pos:line="50" pos:column="8">/* AP_DEBUG */</comment>
    }<pos:position pos:line="51" pos:column="6"/></block></else></if>

    <expr_stmt><expr><name pos:line="53" pos:column="5">rv<pos:position pos:line="53" pos:column="7"/></name> <operator pos:line="53" pos:column="8">=<pos:position pos:line="53" pos:column="9"/></operator> <call><name pos:line="53" pos:column="10">apr_thread_mutex_unlock<pos:position pos:line="53" pos:column="33"/></name><argument_list pos:line="53" pos:column="33">(<argument><expr><name><name pos:line="53" pos:column="34">queue<pos:position pos:line="53" pos:column="39"/></name><operator pos:line="53" pos:column="39">-&gt;<pos:position pos:line="53" pos:column="44"/></operator><name pos:line="53" pos:column="41">one_big_mutex<pos:position pos:line="53" pos:column="54"/></name></name></expr></argument>)<pos:position pos:line="53" pos:column="55"/></argument_list></call></expr>;<pos:position pos:line="53" pos:column="56"/></expr_stmt>
    <return pos:line="54" pos:column="5">return <expr><name pos:line="54" pos:column="12">rv<pos:position pos:line="54" pos:column="14"/></name></expr>;<pos:position pos:line="54" pos:column="15"/></return>
}<pos:position pos:line="55" pos:column="2"/></block></function></unit>

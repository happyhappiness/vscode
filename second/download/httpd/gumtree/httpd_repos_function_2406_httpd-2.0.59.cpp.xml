<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/httpd/gumtree/httpd_repos_function_2406_httpd-2.0.59.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">apr_status_t<pos:position pos:line="1" pos:column="20"/></name></type> <name pos:line="1" pos:column="21">prep<pos:position pos:line="1" pos:column="25"/></name><parameter_list pos:line="1" pos:column="25">(<parameter><decl><type><name pos:line="1" pos:column="26">apr_sdbm_t<pos:position pos:line="1" pos:column="36"/></name> <modifier pos:line="1" pos:column="37">*<pos:position pos:line="1" pos:column="38"/></modifier><modifier pos:line="1" pos:column="38">*<pos:position pos:line="1" pos:column="39"/></modifier></type><name pos:line="1" pos:column="39">pdb<pos:position pos:line="1" pos:column="42"/></name></decl></parameter>, <parameter><decl><type><specifier pos:line="1" pos:column="44">const<pos:position pos:line="1" pos:column="49"/></specifier> <name pos:line="1" pos:column="50">char<pos:position pos:line="1" pos:column="54"/></name> <modifier pos:line="1" pos:column="55">*<pos:position pos:line="1" pos:column="56"/></modifier></type><name pos:line="1" pos:column="56">dirname<pos:position pos:line="1" pos:column="63"/></name></decl></parameter>, <parameter><decl><type><specifier pos:line="1" pos:column="65">const<pos:position pos:line="1" pos:column="70"/></specifier> <name pos:line="1" pos:column="71">char<pos:position pos:line="1" pos:column="75"/></name> <modifier pos:line="1" pos:column="76">*<pos:position pos:line="1" pos:column="77"/></modifier></type><name pos:line="1" pos:column="77">pagname<pos:position pos:line="1" pos:column="84"/></name></decl></parameter>,
                         <parameter><decl><type><name pos:line="2" pos:column="26">apr_int32_t<pos:position pos:line="2" pos:column="37"/></name></type> <name pos:line="2" pos:column="38">flags<pos:position pos:line="2" pos:column="43"/></name></decl></parameter>, <parameter><decl><type><name pos:line="2" pos:column="45">apr_fileperms_t<pos:position pos:line="2" pos:column="60"/></name></type> <name pos:line="2" pos:column="61">perms<pos:position pos:line="2" pos:column="66"/></name></decl></parameter>, <parameter><decl><type><name pos:line="2" pos:column="68">apr_pool_t<pos:position pos:line="2" pos:column="78"/></name> <modifier pos:line="2" pos:column="79">*<pos:position pos:line="2" pos:column="80"/></modifier></type><name pos:line="2" pos:column="80">p<pos:position pos:line="2" pos:column="81"/></name></decl></parameter>)<pos:position pos:line="2" pos:column="82"/></parameter_list>
<block pos:line="3" pos:column="1">{
    <decl_stmt><decl><type><name pos:line="4" pos:column="5">apr_sdbm_t<pos:position pos:line="4" pos:column="15"/></name> <modifier pos:line="4" pos:column="16">*<pos:position pos:line="4" pos:column="17"/></modifier></type><name pos:line="4" pos:column="17">db<pos:position pos:line="4" pos:column="19"/></name></decl>;<pos:position pos:line="4" pos:column="20"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="5" pos:column="5">apr_status_t<pos:position pos:line="5" pos:column="17"/></name></type> <name pos:line="5" pos:column="18">status<pos:position pos:line="5" pos:column="24"/></name></decl>;<pos:position pos:line="5" pos:column="25"/></decl_stmt>

    <expr_stmt><expr><operator pos:line="7" pos:column="5">*<pos:position pos:line="7" pos:column="6"/></operator><name pos:line="7" pos:column="6">pdb<pos:position pos:line="7" pos:column="9"/></name> <operator pos:line="7" pos:column="10">=<pos:position pos:line="7" pos:column="11"/></operator> <name pos:line="7" pos:column="12">NULL<pos:position pos:line="7" pos:column="16"/></name></expr>;<pos:position pos:line="7" pos:column="17"/></expr_stmt>

    <expr_stmt><expr><name pos:line="9" pos:column="5">db<pos:position pos:line="9" pos:column="7"/></name> <operator pos:line="9" pos:column="8">=<pos:position pos:line="9" pos:column="9"/></operator> <call><name pos:line="9" pos:column="10">malloc<pos:position pos:line="9" pos:column="16"/></name><argument_list pos:line="9" pos:column="16">(<argument><expr><sizeof pos:line="9" pos:column="17">sizeof<argument_list pos:line="9" pos:column="23">(<argument><expr><operator pos:line="9" pos:column="24">*<pos:position pos:line="9" pos:column="25"/></operator><name pos:line="9" pos:column="25">db<pos:position pos:line="9" pos:column="27"/></name></expr></argument>)<pos:position pos:line="9" pos:column="28"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="9" pos:column="29"/></argument_list></call></expr>;<pos:position pos:line="9" pos:column="30"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="10" pos:column="5">memset<pos:position pos:line="10" pos:column="11"/></name><argument_list pos:line="10" pos:column="11">(<argument><expr><name pos:line="10" pos:column="12">db<pos:position pos:line="10" pos:column="14"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="10" pos:column="16">0<pos:position pos:line="10" pos:column="17"/></literal></expr></argument>, <argument><expr><sizeof pos:line="10" pos:column="19">sizeof<argument_list pos:line="10" pos:column="25">(<argument><expr><operator pos:line="10" pos:column="26">*<pos:position pos:line="10" pos:column="27"/></operator><name pos:line="10" pos:column="27">db<pos:position pos:line="10" pos:column="29"/></name></expr></argument>)<pos:position pos:line="10" pos:column="30"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="10" pos:column="31"/></argument_list></call></expr>;<pos:position pos:line="10" pos:column="32"/></expr_stmt>

    <expr_stmt><expr><name><name pos:line="12" pos:column="5">db<pos:position pos:line="12" pos:column="7"/></name><operator pos:line="12" pos:column="7">-&gt;<pos:position pos:line="12" pos:column="12"/></operator><name pos:line="12" pos:column="9">pool<pos:position pos:line="12" pos:column="13"/></name></name> <operator pos:line="12" pos:column="14">=<pos:position pos:line="12" pos:column="15"/></operator> <name pos:line="12" pos:column="16">p<pos:position pos:line="12" pos:column="17"/></name></expr>;<pos:position pos:line="12" pos:column="18"/></expr_stmt>

    <comment type="block" pos:line="14" pos:column="5">/*
     * adjust user flags so that WRONLY becomes RDWR, 
     * as required by this package. Also set our internal
     * flag for RDONLY if needed.
     */</comment>
    <if pos:line="19" pos:column="5">if <condition pos:line="19" pos:column="8">(<expr><operator pos:line="19" pos:column="9">!<pos:position pos:line="19" pos:column="10"/></operator><operator pos:line="19" pos:column="10">(<pos:position pos:line="19" pos:column="11"/></operator><name pos:line="19" pos:column="11">flags<pos:position pos:line="19" pos:column="16"/></name> <operator pos:line="19" pos:column="17">&amp;<pos:position pos:line="19" pos:column="22"/></operator> <name pos:line="19" pos:column="19">APR_WRITE<pos:position pos:line="19" pos:column="28"/></name><operator pos:line="19" pos:column="28">)<pos:position pos:line="19" pos:column="29"/></operator></expr>)<pos:position pos:line="19" pos:column="30"/></condition><then pos:line="19" pos:column="30"> <block pos:line="19" pos:column="31">{
        <expr_stmt><expr><name><name pos:line="20" pos:column="9">db<pos:position pos:line="20" pos:column="11"/></name><operator pos:line="20" pos:column="11">-&gt;<pos:position pos:line="20" pos:column="16"/></operator><name pos:line="20" pos:column="13">flags<pos:position pos:line="20" pos:column="18"/></name></name> <operator pos:line="20" pos:column="19">|=<pos:position pos:line="20" pos:column="21"/></operator> <name pos:line="20" pos:column="22">SDBM_RDONLY<pos:position pos:line="20" pos:column="33"/></name></expr>;<pos:position pos:line="20" pos:column="34"/></expr_stmt>
    }<pos:position pos:line="21" pos:column="6"/></block></then></if>

    <comment type="block" pos:line="23" pos:column="5">/*
     * adjust the file open flags so that we handle locking
     * on our own (don't rely on any locking behavior within
     * an apr_file_t, in case it's ever introduced, and set
     * our own flag.
     */</comment>
    <if pos:line="29" pos:column="5">if <condition pos:line="29" pos:column="8">(<expr><name pos:line="29" pos:column="9">flags<pos:position pos:line="29" pos:column="14"/></name> <operator pos:line="29" pos:column="15">&amp;<pos:position pos:line="29" pos:column="20"/></operator> <name pos:line="29" pos:column="17">APR_SHARELOCK<pos:position pos:line="29" pos:column="30"/></name></expr>)<pos:position pos:line="29" pos:column="31"/></condition><then pos:line="29" pos:column="31"> <block pos:line="29" pos:column="32">{
        <expr_stmt><expr><name><name pos:line="30" pos:column="9">db<pos:position pos:line="30" pos:column="11"/></name><operator pos:line="30" pos:column="11">-&gt;<pos:position pos:line="30" pos:column="16"/></operator><name pos:line="30" pos:column="13">flags<pos:position pos:line="30" pos:column="18"/></name></name> <operator pos:line="30" pos:column="19">|=<pos:position pos:line="30" pos:column="21"/></operator> <name pos:line="30" pos:column="22">SDBM_SHARED<pos:position pos:line="30" pos:column="33"/></name></expr>;<pos:position pos:line="30" pos:column="34"/></expr_stmt>
        <expr_stmt><expr><name pos:line="31" pos:column="9">flags<pos:position pos:line="31" pos:column="14"/></name> <operator pos:line="31" pos:column="15">&amp;=<pos:position pos:line="31" pos:column="21"/></operator> <operator pos:line="31" pos:column="18">~<pos:position pos:line="31" pos:column="19"/></operator><name pos:line="31" pos:column="19">APR_SHARELOCK<pos:position pos:line="31" pos:column="32"/></name></expr>;<pos:position pos:line="31" pos:column="33"/></expr_stmt>
    }<pos:position pos:line="32" pos:column="6"/></block></then></if>

    <expr_stmt><expr><name pos:line="34" pos:column="5">flags<pos:position pos:line="34" pos:column="10"/></name> <operator pos:line="34" pos:column="11">|=<pos:position pos:line="34" pos:column="13"/></operator> <name pos:line="34" pos:column="14">APR_BINARY<pos:position pos:line="34" pos:column="24"/></name> <operator pos:line="34" pos:column="25">|<pos:position pos:line="34" pos:column="26"/></operator> <name pos:line="34" pos:column="27">APR_READ<pos:position pos:line="34" pos:column="35"/></name></expr>;<pos:position pos:line="34" pos:column="36"/></expr_stmt>

    <comment type="block" pos:line="36" pos:column="5">/*
     * open the files in sequence, and stat the dirfile.
     * If we fail anywhere, undo everything, return NULL.
     */</comment>

    <if pos:line="41" pos:column="5">if <condition pos:line="41" pos:column="8">(<expr><operator pos:line="41" pos:column="9">(<pos:position pos:line="41" pos:column="10"/></operator><name pos:line="41" pos:column="10">status<pos:position pos:line="41" pos:column="16"/></name> <operator pos:line="41" pos:column="17">=<pos:position pos:line="41" pos:column="18"/></operator> <call><name pos:line="41" pos:column="19">apr_file_open<pos:position pos:line="41" pos:column="32"/></name><argument_list pos:line="41" pos:column="32">(<argument><expr><operator pos:line="41" pos:column="33">&amp;<pos:position pos:line="41" pos:column="38"/></operator><name><name pos:line="41" pos:column="34">db<pos:position pos:line="41" pos:column="36"/></name><operator pos:line="41" pos:column="36">-&gt;<pos:position pos:line="41" pos:column="41"/></operator><name pos:line="41" pos:column="38">dirf<pos:position pos:line="41" pos:column="42"/></name></name></expr></argument>, <argument><expr><name pos:line="41" pos:column="44">dirname<pos:position pos:line="41" pos:column="51"/></name></expr></argument>, <argument><expr><name pos:line="41" pos:column="53">flags<pos:position pos:line="41" pos:column="58"/></name></expr></argument>, <argument><expr><name pos:line="41" pos:column="60">perms<pos:position pos:line="41" pos:column="65"/></name></expr></argument>, <argument><expr><name pos:line="41" pos:column="67">p<pos:position pos:line="41" pos:column="68"/></name></expr></argument>)<pos:position pos:line="41" pos:column="69"/></argument_list></call><operator pos:line="41" pos:column="69">)<pos:position pos:line="41" pos:column="70"/></operator>
                <operator pos:line="42" pos:column="17">!=<pos:position pos:line="42" pos:column="19"/></operator> <name pos:line="42" pos:column="20">APR_SUCCESS<pos:position pos:line="42" pos:column="31"/></name></expr>)<pos:position pos:line="42" pos:column="32"/></condition><then pos:line="42" pos:column="32">
        <block type="pseudo"><goto pos:line="43" pos:column="9">goto <name pos:line="43" pos:column="14">error<pos:position pos:line="43" pos:column="19"/></name>;<pos:position pos:line="43" pos:column="20"/></goto></block></then></if>

    <if pos:line="45" pos:column="5">if <condition pos:line="45" pos:column="8">(<expr><operator pos:line="45" pos:column="9">(<pos:position pos:line="45" pos:column="10"/></operator><name pos:line="45" pos:column="10">status<pos:position pos:line="45" pos:column="16"/></name> <operator pos:line="45" pos:column="17">=<pos:position pos:line="45" pos:column="18"/></operator> <call><name pos:line="45" pos:column="19">apr_file_open<pos:position pos:line="45" pos:column="32"/></name><argument_list pos:line="45" pos:column="32">(<argument><expr><operator pos:line="45" pos:column="33">&amp;<pos:position pos:line="45" pos:column="38"/></operator><name><name pos:line="45" pos:column="34">db<pos:position pos:line="45" pos:column="36"/></name><operator pos:line="45" pos:column="36">-&gt;<pos:position pos:line="45" pos:column="41"/></operator><name pos:line="45" pos:column="38">pagf<pos:position pos:line="45" pos:column="42"/></name></name></expr></argument>, <argument><expr><name pos:line="45" pos:column="44">pagname<pos:position pos:line="45" pos:column="51"/></name></expr></argument>, <argument><expr><name pos:line="45" pos:column="53">flags<pos:position pos:line="45" pos:column="58"/></name></expr></argument>, <argument><expr><name pos:line="45" pos:column="60">perms<pos:position pos:line="45" pos:column="65"/></name></expr></argument>, <argument><expr><name pos:line="45" pos:column="67">p<pos:position pos:line="45" pos:column="68"/></name></expr></argument>)<pos:position pos:line="45" pos:column="69"/></argument_list></call><operator pos:line="45" pos:column="69">)<pos:position pos:line="45" pos:column="70"/></operator>
                <operator pos:line="46" pos:column="17">!=<pos:position pos:line="46" pos:column="19"/></operator> <name pos:line="46" pos:column="20">APR_SUCCESS<pos:position pos:line="46" pos:column="31"/></name></expr>)<pos:position pos:line="46" pos:column="32"/></condition><then pos:line="46" pos:column="32">
        <block type="pseudo"><goto pos:line="47" pos:column="9">goto <name pos:line="47" pos:column="14">error<pos:position pos:line="47" pos:column="19"/></name>;<pos:position pos:line="47" pos:column="20"/></goto></block></then></if>

    <if pos:line="49" pos:column="5">if <condition pos:line="49" pos:column="8">(<expr><operator pos:line="49" pos:column="9">(<pos:position pos:line="49" pos:column="10"/></operator><name pos:line="49" pos:column="10">status<pos:position pos:line="49" pos:column="16"/></name> <operator pos:line="49" pos:column="17">=<pos:position pos:line="49" pos:column="18"/></operator> <call><name pos:line="49" pos:column="19">apr_sdbm_lock<pos:position pos:line="49" pos:column="32"/></name><argument_list pos:line="49" pos:column="32">(<argument><expr><name pos:line="49" pos:column="33">db<pos:position pos:line="49" pos:column="35"/></name></expr></argument>, <argument><expr><ternary><condition><expr><operator pos:line="49" pos:column="37">(<pos:position pos:line="49" pos:column="38"/></operator><name><name pos:line="49" pos:column="38">db<pos:position pos:line="49" pos:column="40"/></name><operator pos:line="49" pos:column="40">-&gt;<pos:position pos:line="49" pos:column="45"/></operator><name pos:line="49" pos:column="42">flags<pos:position pos:line="49" pos:column="47"/></name></name> <operator pos:line="49" pos:column="48">&amp;<pos:position pos:line="49" pos:column="53"/></operator> <name pos:line="49" pos:column="50">SDBM_RDONLY<pos:position pos:line="49" pos:column="61"/></name><operator pos:line="49" pos:column="61">)<pos:position pos:line="49" pos:column="62"/></operator></expr> 
                                        ?<pos:position pos:line="50" pos:column="42"/></condition><then pos:line="50" pos:column="42"> <expr><name pos:line="50" pos:column="43">APR_FLOCK_SHARED<pos:position pos:line="50" pos:column="59"/></name></expr>
                                        <pos:position pos:line="51" pos:column="41"/></then><else pos:line="51" pos:column="41">: <expr><name pos:line="51" pos:column="43">APR_FLOCK_EXCLUSIVE<pos:position pos:line="51" pos:column="62"/></name></expr></else></ternary></expr></argument>)<pos:position pos:line="51" pos:column="63"/></argument_list></call><operator pos:line="51" pos:column="63">)<pos:position pos:line="51" pos:column="64"/></operator>
                <operator pos:line="52" pos:column="17">!=<pos:position pos:line="52" pos:column="19"/></operator> <name pos:line="52" pos:column="20">APR_SUCCESS<pos:position pos:line="52" pos:column="31"/></name></expr>)<pos:position pos:line="52" pos:column="32"/></condition><then pos:line="52" pos:column="32">
        <block type="pseudo"><goto pos:line="53" pos:column="9">goto <name pos:line="53" pos:column="14">error<pos:position pos:line="53" pos:column="19"/></name>;<pos:position pos:line="53" pos:column="20"/></goto></block></then></if>

    <comment type="block" pos:line="55" pos:column="5">/* apr_pcalloc zeroed the buffers
     * apr_sdbm_lock stated the dirf-&gt;size and invalidated the cache
     */</comment>

    <comment type="block" pos:line="59" pos:column="5">/*
     * if we are opened in SHARED mode, unlock ourself 
     */</comment>
    <if pos:line="62" pos:column="5">if <condition pos:line="62" pos:column="8">(<expr><name><name pos:line="62" pos:column="9">db<pos:position pos:line="62" pos:column="11"/></name><operator pos:line="62" pos:column="11">-&gt;<pos:position pos:line="62" pos:column="16"/></operator><name pos:line="62" pos:column="13">flags<pos:position pos:line="62" pos:column="18"/></name></name> <operator pos:line="62" pos:column="19">&amp;<pos:position pos:line="62" pos:column="24"/></operator> <name pos:line="62" pos:column="21">SDBM_SHARED<pos:position pos:line="62" pos:column="32"/></name></expr>)<pos:position pos:line="62" pos:column="33"/></condition><then pos:line="62" pos:column="33">
        <block type="pseudo"><if pos:line="63" pos:column="9">if <condition pos:line="63" pos:column="12">(<expr><operator pos:line="63" pos:column="13">(<pos:position pos:line="63" pos:column="14"/></operator><name pos:line="63" pos:column="14">status<pos:position pos:line="63" pos:column="20"/></name> <operator pos:line="63" pos:column="21">=<pos:position pos:line="63" pos:column="22"/></operator> <call><name pos:line="63" pos:column="23">apr_sdbm_unlock<pos:position pos:line="63" pos:column="38"/></name><argument_list pos:line="63" pos:column="38">(<argument><expr><name pos:line="63" pos:column="39">db<pos:position pos:line="63" pos:column="41"/></name></expr></argument>)<pos:position pos:line="63" pos:column="42"/></argument_list></call><operator pos:line="63" pos:column="42">)<pos:position pos:line="63" pos:column="43"/></operator> <operator pos:line="63" pos:column="44">!=<pos:position pos:line="63" pos:column="46"/></operator> <name pos:line="63" pos:column="47">APR_SUCCESS<pos:position pos:line="63" pos:column="58"/></name></expr>)<pos:position pos:line="63" pos:column="59"/></condition><then pos:line="63" pos:column="59">
            <block type="pseudo"><goto pos:line="64" pos:column="13">goto <name pos:line="64" pos:column="18">error<pos:position pos:line="64" pos:column="23"/></name>;<pos:position pos:line="64" pos:column="24"/></goto></block></then></if></block></then></if>

    <comment type="block" pos:line="66" pos:column="5">/* make sure that we close the database at some point */</comment>
    <expr_stmt><expr><call><name pos:line="67" pos:column="5">apr_pool_cleanup_register<pos:position pos:line="67" pos:column="30"/></name><argument_list pos:line="67" pos:column="30">(<argument><expr><name pos:line="67" pos:column="31">p<pos:position pos:line="67" pos:column="32"/></name></expr></argument>, <argument><expr><name pos:line="67" pos:column="34">db<pos:position pos:line="67" pos:column="36"/></name></expr></argument>, <argument><expr><name pos:line="67" pos:column="38">database_cleanup<pos:position pos:line="67" pos:column="54"/></name></expr></argument>, <argument><expr><name pos:line="67" pos:column="56">apr_pool_cleanup_null<pos:position pos:line="67" pos:column="77"/></name></expr></argument>)<pos:position pos:line="67" pos:column="78"/></argument_list></call></expr>;<pos:position pos:line="67" pos:column="79"/></expr_stmt>

    <comment type="block" pos:line="69" pos:column="5">/* Done! */</comment>
    <expr_stmt><expr><operator pos:line="70" pos:column="5">*<pos:position pos:line="70" pos:column="6"/></operator><name pos:line="70" pos:column="6">pdb<pos:position pos:line="70" pos:column="9"/></name> <operator pos:line="70" pos:column="10">=<pos:position pos:line="70" pos:column="11"/></operator> <name pos:line="70" pos:column="12">db<pos:position pos:line="70" pos:column="14"/></name></expr>;<pos:position pos:line="70" pos:column="15"/></expr_stmt>
    <return pos:line="71" pos:column="5">return <expr><name pos:line="71" pos:column="12">APR_SUCCESS<pos:position pos:line="71" pos:column="23"/></name></expr>;<pos:position pos:line="71" pos:column="24"/></return>

<label><name pos:line="73" pos:column="1">error<pos:position pos:line="73" pos:column="6"/></name>:<pos:position pos:line="73" pos:column="7"/></label>
    <if pos:line="74" pos:column="5">if <condition pos:line="74" pos:column="8">(<expr><name><name pos:line="74" pos:column="9">db<pos:position pos:line="74" pos:column="11"/></name><operator pos:line="74" pos:column="11">-&gt;<pos:position pos:line="74" pos:column="16"/></operator><name pos:line="74" pos:column="13">dirf<pos:position pos:line="74" pos:column="17"/></name></name> <operator pos:line="74" pos:column="18">&amp;&amp;<pos:position pos:line="74" pos:column="28"/></operator> <name><name pos:line="74" pos:column="21">db<pos:position pos:line="74" pos:column="23"/></name><operator pos:line="74" pos:column="23">-&gt;<pos:position pos:line="74" pos:column="28"/></operator><name pos:line="74" pos:column="25">pagf<pos:position pos:line="74" pos:column="29"/></name></name></expr>)<pos:position pos:line="74" pos:column="30"/></condition><then pos:line="74" pos:column="30">
        <block type="pseudo"><expr_stmt><expr><operator pos:line="75" pos:column="9">(<pos:position pos:line="75" pos:column="10"/></operator><name pos:line="75" pos:column="10">void<pos:position pos:line="75" pos:column="14"/></name><operator pos:line="75" pos:column="14">)<pos:position pos:line="75" pos:column="15"/></operator> <call><name pos:line="75" pos:column="16">apr_sdbm_unlock<pos:position pos:line="75" pos:column="31"/></name><argument_list pos:line="75" pos:column="31">(<argument><expr><name pos:line="75" pos:column="32">db<pos:position pos:line="75" pos:column="34"/></name></expr></argument>)<pos:position pos:line="75" pos:column="35"/></argument_list></call></expr>;<pos:position pos:line="75" pos:column="36"/></expr_stmt></block></then></if>
    <if pos:line="76" pos:column="5">if <condition pos:line="76" pos:column="8">(<expr><name><name pos:line="76" pos:column="9">db<pos:position pos:line="76" pos:column="11"/></name><operator pos:line="76" pos:column="11">-&gt;<pos:position pos:line="76" pos:column="16"/></operator><name pos:line="76" pos:column="13">dirf<pos:position pos:line="76" pos:column="17"/></name></name> <operator pos:line="76" pos:column="18">!=<pos:position pos:line="76" pos:column="20"/></operator> <name pos:line="76" pos:column="21">NULL<pos:position pos:line="76" pos:column="25"/></name></expr>)<pos:position pos:line="76" pos:column="26"/></condition><then pos:line="76" pos:column="26">
        <block type="pseudo"><expr_stmt><expr><operator pos:line="77" pos:column="9">(<pos:position pos:line="77" pos:column="10"/></operator><name pos:line="77" pos:column="10">void<pos:position pos:line="77" pos:column="14"/></name><operator pos:line="77" pos:column="14">)<pos:position pos:line="77" pos:column="15"/></operator> <call><name pos:line="77" pos:column="16">apr_file_close<pos:position pos:line="77" pos:column="30"/></name><argument_list pos:line="77" pos:column="30">(<argument><expr><name><name pos:line="77" pos:column="31">db<pos:position pos:line="77" pos:column="33"/></name><operator pos:line="77" pos:column="33">-&gt;<pos:position pos:line="77" pos:column="38"/></operator><name pos:line="77" pos:column="35">dirf<pos:position pos:line="77" pos:column="39"/></name></name></expr></argument>)<pos:position pos:line="77" pos:column="40"/></argument_list></call></expr>;<pos:position pos:line="77" pos:column="41"/></expr_stmt></block></then></if>
    <if pos:line="78" pos:column="5">if <condition pos:line="78" pos:column="8">(<expr><name><name pos:line="78" pos:column="9">db<pos:position pos:line="78" pos:column="11"/></name><operator pos:line="78" pos:column="11">-&gt;<pos:position pos:line="78" pos:column="16"/></operator><name pos:line="78" pos:column="13">pagf<pos:position pos:line="78" pos:column="17"/></name></name> <operator pos:line="78" pos:column="18">!=<pos:position pos:line="78" pos:column="20"/></operator> <name pos:line="78" pos:column="21">NULL<pos:position pos:line="78" pos:column="25"/></name></expr>)<pos:position pos:line="78" pos:column="26"/></condition><then pos:line="78" pos:column="26"> <block pos:line="78" pos:column="27">{
        <expr_stmt><expr><operator pos:line="79" pos:column="9">(<pos:position pos:line="79" pos:column="10"/></operator><name pos:line="79" pos:column="10">void<pos:position pos:line="79" pos:column="14"/></name><operator pos:line="79" pos:column="14">)<pos:position pos:line="79" pos:column="15"/></operator> <call><name pos:line="79" pos:column="16">apr_file_close<pos:position pos:line="79" pos:column="30"/></name><argument_list pos:line="79" pos:column="30">(<argument><expr><name><name pos:line="79" pos:column="31">db<pos:position pos:line="79" pos:column="33"/></name><operator pos:line="79" pos:column="33">-&gt;<pos:position pos:line="79" pos:column="38"/></operator><name pos:line="79" pos:column="35">pagf<pos:position pos:line="79" pos:column="39"/></name></name></expr></argument>)<pos:position pos:line="79" pos:column="40"/></argument_list></call></expr>;<pos:position pos:line="79" pos:column="41"/></expr_stmt>
    }<pos:position pos:line="80" pos:column="6"/></block></then></if>
    <expr_stmt><expr><call><name pos:line="81" pos:column="5">free<pos:position pos:line="81" pos:column="9"/></name><argument_list pos:line="81" pos:column="9">(<argument><expr><name pos:line="81" pos:column="10">db<pos:position pos:line="81" pos:column="12"/></name></expr></argument>)<pos:position pos:line="81" pos:column="13"/></argument_list></call></expr>;<pos:position pos:line="81" pos:column="14"/></expr_stmt>
    <return pos:line="82" pos:column="5">return <expr><name pos:line="82" pos:column="12">status<pos:position pos:line="82" pos:column="18"/></name></expr>;<pos:position pos:line="82" pos:column="19"/></return>
}<pos:position pos:line="83" pos:column="2"/></block></function></unit>

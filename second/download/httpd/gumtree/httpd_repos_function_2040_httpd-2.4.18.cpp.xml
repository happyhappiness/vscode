<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/httpd/gumtree/httpd_repos_function_2040_httpd-2.4.18.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><specifier pos:line="1" pos:column="8">const<pos:position pos:line="1" pos:column="13"/></specifier> <name pos:line="1" pos:column="14">char<pos:position pos:line="1" pos:column="18"/></name> <modifier pos:line="1" pos:column="19">*<pos:position pos:line="1" pos:column="20"/></modifier></type><name pos:line="1" pos:column="20">proxysection<pos:position pos:line="1" pos:column="32"/></name><parameter_list pos:line="1" pos:column="32">(<parameter><decl><type><name pos:line="1" pos:column="33">cmd_parms<pos:position pos:line="1" pos:column="42"/></name> <modifier pos:line="1" pos:column="43">*<pos:position pos:line="1" pos:column="44"/></modifier></type><name pos:line="1" pos:column="44">cmd<pos:position pos:line="1" pos:column="47"/></name></decl></parameter>, <parameter><decl><type><name pos:line="1" pos:column="49">void<pos:position pos:line="1" pos:column="53"/></name> <modifier pos:line="1" pos:column="54">*<pos:position pos:line="1" pos:column="55"/></modifier></type><name pos:line="1" pos:column="55">mconfig<pos:position pos:line="1" pos:column="62"/></name></decl></parameter>, <parameter><decl><type><specifier pos:line="1" pos:column="64">const<pos:position pos:line="1" pos:column="69"/></specifier> <name pos:line="1" pos:column="70">char<pos:position pos:line="1" pos:column="74"/></name> <modifier pos:line="1" pos:column="75">*<pos:position pos:line="1" pos:column="76"/></modifier></type><name pos:line="1" pos:column="76">arg<pos:position pos:line="1" pos:column="79"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="80"/></parameter_list>
<block pos:line="2" pos:column="1">{
    <decl_stmt><decl><type><specifier pos:line="3" pos:column="5">const<pos:position pos:line="3" pos:column="10"/></specifier> <name pos:line="3" pos:column="11">char<pos:position pos:line="3" pos:column="15"/></name> <modifier pos:line="3" pos:column="16">*<pos:position pos:line="3" pos:column="17"/></modifier></type><name pos:line="3" pos:column="17">errmsg<pos:position pos:line="3" pos:column="23"/></name></decl>;<pos:position pos:line="3" pos:column="24"/></decl_stmt>
    <decl_stmt><decl><type><specifier pos:line="4" pos:column="5">const<pos:position pos:line="4" pos:column="10"/></specifier> <name pos:line="4" pos:column="11">char<pos:position pos:line="4" pos:column="15"/></name> <modifier pos:line="4" pos:column="16">*<pos:position pos:line="4" pos:column="17"/></modifier></type><name pos:line="4" pos:column="17">endp<pos:position pos:line="4" pos:column="21"/></name> <init pos:line="4" pos:column="22">= <expr><call><name pos:line="4" pos:column="24">ap_strrchr_c<pos:position pos:line="4" pos:column="36"/></name><argument_list pos:line="4" pos:column="36">(<argument><expr><name pos:line="4" pos:column="37">arg<pos:position pos:line="4" pos:column="40"/></name></expr></argument>, <argument><expr><literal type="char" pos:line="4" pos:column="42">'&gt;'<pos:position pos:line="4" pos:column="48"/></literal></expr></argument>)<pos:position pos:line="4" pos:column="46"/></argument_list></call></expr></init></decl>;<pos:position pos:line="4" pos:column="47"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="5" pos:column="5">int<pos:position pos:line="5" pos:column="8"/></name></type> <name pos:line="5" pos:column="9">old_overrides<pos:position pos:line="5" pos:column="22"/></name> <init pos:line="5" pos:column="23">= <expr><name><name pos:line="5" pos:column="25">cmd<pos:position pos:line="5" pos:column="28"/></name><operator pos:line="5" pos:column="28">-&gt;<pos:position pos:line="5" pos:column="33"/></operator><name pos:line="5" pos:column="30">override<pos:position pos:line="5" pos:column="38"/></name></name></expr></init></decl>;<pos:position pos:line="5" pos:column="39"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="6" pos:column="5">char<pos:position pos:line="6" pos:column="9"/></name> <modifier pos:line="6" pos:column="10">*<pos:position pos:line="6" pos:column="11"/></modifier></type><name pos:line="6" pos:column="11">old_path<pos:position pos:line="6" pos:column="19"/></name> <init pos:line="6" pos:column="20">= <expr><name><name pos:line="6" pos:column="22">cmd<pos:position pos:line="6" pos:column="25"/></name><operator pos:line="6" pos:column="25">-&gt;<pos:position pos:line="6" pos:column="30"/></operator><name pos:line="6" pos:column="27">path<pos:position pos:line="6" pos:column="31"/></name></name></expr></init></decl>;<pos:position pos:line="6" pos:column="32"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="7" pos:column="5">proxy_dir_conf<pos:position pos:line="7" pos:column="19"/></name> <modifier pos:line="7" pos:column="20">*<pos:position pos:line="7" pos:column="21"/></modifier></type><name pos:line="7" pos:column="21">conf<pos:position pos:line="7" pos:column="25"/></name></decl>;<pos:position pos:line="7" pos:column="26"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="8" pos:column="5">ap_conf_vector_t<pos:position pos:line="8" pos:column="21"/></name> <modifier pos:line="8" pos:column="22">*<pos:position pos:line="8" pos:column="23"/></modifier></type><name pos:line="8" pos:column="23">new_dir_conf<pos:position pos:line="8" pos:column="35"/></name> <init pos:line="8" pos:column="36">= <expr><call><name pos:line="8" pos:column="38">ap_create_per_dir_config<pos:position pos:line="8" pos:column="62"/></name><argument_list pos:line="8" pos:column="62">(<argument><expr><name><name pos:line="8" pos:column="63">cmd<pos:position pos:line="8" pos:column="66"/></name><operator pos:line="8" pos:column="66">-&gt;<pos:position pos:line="8" pos:column="71"/></operator><name pos:line="8" pos:column="68">pool<pos:position pos:line="8" pos:column="72"/></name></name></expr></argument>)<pos:position pos:line="8" pos:column="73"/></argument_list></call></expr></init></decl>;<pos:position pos:line="8" pos:column="74"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="9" pos:column="5">ap_regex_t<pos:position pos:line="9" pos:column="15"/></name> <modifier pos:line="9" pos:column="16">*<pos:position pos:line="9" pos:column="17"/></modifier></type><name pos:line="9" pos:column="17">r<pos:position pos:line="9" pos:column="18"/></name> <init pos:line="9" pos:column="19">= <expr><name pos:line="9" pos:column="21">NULL<pos:position pos:line="9" pos:column="25"/></name></expr></init></decl>;<pos:position pos:line="9" pos:column="26"/></decl_stmt>
    <decl_stmt><decl><type><specifier pos:line="10" pos:column="5">const<pos:position pos:line="10" pos:column="10"/></specifier> <name pos:line="10" pos:column="11">command_rec<pos:position pos:line="10" pos:column="22"/></name> <modifier pos:line="10" pos:column="23">*<pos:position pos:line="10" pos:column="24"/></modifier></type><name pos:line="10" pos:column="24">thiscmd<pos:position pos:line="10" pos:column="31"/></name> <init pos:line="10" pos:column="32">= <expr><name><name pos:line="10" pos:column="34">cmd<pos:position pos:line="10" pos:column="37"/></name><operator pos:line="10" pos:column="37">-&gt;<pos:position pos:line="10" pos:column="42"/></operator><name pos:line="10" pos:column="39">cmd<pos:position pos:line="10" pos:column="42"/></name></name></expr></init></decl>;<pos:position pos:line="10" pos:column="43"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="11" pos:column="5">char<pos:position pos:line="11" pos:column="9"/></name> <modifier pos:line="11" pos:column="10">*<pos:position pos:line="11" pos:column="11"/></modifier></type><name pos:line="11" pos:column="11">word<pos:position pos:line="11" pos:column="15"/></name></decl>, <modifier pos:line="11" pos:column="17">*<pos:position pos:line="11" pos:column="18"/></modifier><decl><type ref="prev"/><name pos:line="11" pos:column="18">val<pos:position pos:line="11" pos:column="21"/></name></decl>;<pos:position pos:line="11" pos:column="22"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="12" pos:column="5">proxy_balancer<pos:position pos:line="12" pos:column="19"/></name> <modifier pos:line="12" pos:column="20">*<pos:position pos:line="12" pos:column="21"/></modifier></type><name pos:line="12" pos:column="21">balancer<pos:position pos:line="12" pos:column="29"/></name> <init pos:line="12" pos:column="30">= <expr><name pos:line="12" pos:column="32">NULL<pos:position pos:line="12" pos:column="36"/></name></expr></init></decl>;<pos:position pos:line="12" pos:column="37"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="13" pos:column="5">proxy_worker<pos:position pos:line="13" pos:column="17"/></name> <modifier pos:line="13" pos:column="18">*<pos:position pos:line="13" pos:column="19"/></modifier></type><name pos:line="13" pos:column="19">worker<pos:position pos:line="13" pos:column="25"/></name> <init pos:line="13" pos:column="26">= <expr><name pos:line="13" pos:column="28">NULL<pos:position pos:line="13" pos:column="32"/></name></expr></init></decl>;<pos:position pos:line="13" pos:column="33"/></decl_stmt>

    <decl_stmt><decl><type><specifier pos:line="15" pos:column="5">const<pos:position pos:line="15" pos:column="10"/></specifier> <name pos:line="15" pos:column="11">char<pos:position pos:line="15" pos:column="15"/></name> <modifier pos:line="15" pos:column="16">*<pos:position pos:line="15" pos:column="17"/></modifier></type><name pos:line="15" pos:column="17">err<pos:position pos:line="15" pos:column="20"/></name> <init pos:line="15" pos:column="21">= <expr><call><name pos:line="15" pos:column="23">ap_check_cmd_context<pos:position pos:line="15" pos:column="43"/></name><argument_list pos:line="15" pos:column="43">(<argument><expr><name pos:line="15" pos:column="44">cmd<pos:position pos:line="15" pos:column="47"/></name></expr></argument>, <argument><expr><name pos:line="15" pos:column="49">NOT_IN_DIR_LOC_FILE<pos:position pos:line="15" pos:column="68"/></name></expr></argument>)<pos:position pos:line="15" pos:column="69"/></argument_list></call></expr></init></decl>;<pos:position pos:line="15" pos:column="70"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="16" pos:column="5">proxy_server_conf<pos:position pos:line="16" pos:column="22"/></name> <modifier pos:line="16" pos:column="23">*<pos:position pos:line="16" pos:column="24"/></modifier></type><name pos:line="16" pos:column="24">sconf<pos:position pos:line="16" pos:column="29"/></name> <init pos:line="16" pos:column="30">=
    <expr><operator pos:line="17" pos:column="5">(<pos:position pos:line="17" pos:column="6"/></operator><name pos:line="17" pos:column="6">proxy_server_conf<pos:position pos:line="17" pos:column="23"/></name> <operator pos:line="17" pos:column="24">*<pos:position pos:line="17" pos:column="25"/></operator><operator pos:line="17" pos:column="25">)<pos:position pos:line="17" pos:column="26"/></operator> <call><name pos:line="17" pos:column="27">ap_get_module_config<pos:position pos:line="17" pos:column="47"/></name><argument_list pos:line="17" pos:column="47">(<argument><expr><name><name pos:line="17" pos:column="48">cmd<pos:position pos:line="17" pos:column="51"/></name><operator pos:line="17" pos:column="51">-&gt;<pos:position pos:line="17" pos:column="56"/></operator><name pos:line="17" pos:column="53">server<pos:position pos:line="17" pos:column="59"/></name><operator pos:line="17" pos:column="59">-&gt;<pos:position pos:line="17" pos:column="64"/></operator><name pos:line="17" pos:column="61">module_config<pos:position pos:line="17" pos:column="74"/></name></name></expr></argument>, <argument><expr><operator pos:line="17" pos:column="76">&amp;<pos:position pos:line="17" pos:column="81"/></operator><name pos:line="17" pos:column="77">proxy_module<pos:position pos:line="17" pos:column="89"/></name></expr></argument>)<pos:position pos:line="17" pos:column="90"/></argument_list></call></expr></init></decl>;<pos:position pos:line="17" pos:column="91"/></decl_stmt>

    <if pos:line="19" pos:column="5">if <condition pos:line="19" pos:column="8">(<expr><name pos:line="19" pos:column="9">err<pos:position pos:line="19" pos:column="12"/></name> <operator pos:line="19" pos:column="13">!=<pos:position pos:line="19" pos:column="15"/></operator> <name pos:line="19" pos:column="16">NULL<pos:position pos:line="19" pos:column="20"/></name></expr>)<pos:position pos:line="19" pos:column="21"/></condition><then pos:line="19" pos:column="21"> <block pos:line="19" pos:column="22">{
        <return pos:line="20" pos:column="9">return <expr><name pos:line="20" pos:column="16">err<pos:position pos:line="20" pos:column="19"/></name></expr>;<pos:position pos:line="20" pos:column="20"/></return>
    }<pos:position pos:line="21" pos:column="6"/></block></then></if>

    <if pos:line="23" pos:column="5">if <condition pos:line="23" pos:column="8">(<expr><name pos:line="23" pos:column="9">endp<pos:position pos:line="23" pos:column="13"/></name> <operator pos:line="23" pos:column="14">==<pos:position pos:line="23" pos:column="16"/></operator> <name pos:line="23" pos:column="17">NULL<pos:position pos:line="23" pos:column="21"/></name></expr>)<pos:position pos:line="23" pos:column="22"/></condition><then pos:line="23" pos:column="22"> <block pos:line="23" pos:column="23">{
        <return pos:line="24" pos:column="9">return <expr><call><name pos:line="24" pos:column="16">apr_pstrcat<pos:position pos:line="24" pos:column="27"/></name><argument_list pos:line="24" pos:column="27">(<argument><expr><name><name pos:line="24" pos:column="28">cmd<pos:position pos:line="24" pos:column="31"/></name><operator pos:line="24" pos:column="31">-&gt;<pos:position pos:line="24" pos:column="36"/></operator><name pos:line="24" pos:column="33">pool<pos:position pos:line="24" pos:column="37"/></name></name></expr></argument>, <argument><expr><name><name pos:line="24" pos:column="39">cmd<pos:position pos:line="24" pos:column="42"/></name><operator pos:line="24" pos:column="42">-&gt;<pos:position pos:line="24" pos:column="47"/></operator><name pos:line="24" pos:column="44">cmd<pos:position pos:line="24" pos:column="47"/></name><operator pos:line="24" pos:column="47">-&gt;<pos:position pos:line="24" pos:column="52"/></operator><name pos:line="24" pos:column="49">name<pos:position pos:line="24" pos:column="53"/></name></name></expr></argument>,
                           <argument><expr><literal type="string" pos:line="25" pos:column="28">"&gt; directive missing closing '&gt;'"<pos:position pos:line="25" pos:column="67"/></literal></expr></argument>, <argument><expr><name pos:line="25" pos:column="63">NULL<pos:position pos:line="25" pos:column="67"/></name></expr></argument>)<pos:position pos:line="25" pos:column="68"/></argument_list></call></expr>;<pos:position pos:line="25" pos:column="69"/></return>
    }<pos:position pos:line="26" pos:column="6"/></block></then></if>

    <expr_stmt><expr><name pos:line="28" pos:column="5">arg<pos:position pos:line="28" pos:column="8"/></name> <operator pos:line="28" pos:column="9">=<pos:position pos:line="28" pos:column="10"/></operator> <call><name pos:line="28" pos:column="11">apr_pstrndup<pos:position pos:line="28" pos:column="23"/></name><argument_list pos:line="28" pos:column="23">(<argument><expr><name><name pos:line="28" pos:column="24">cmd<pos:position pos:line="28" pos:column="27"/></name><operator pos:line="28" pos:column="27">-&gt;<pos:position pos:line="28" pos:column="32"/></operator><name pos:line="28" pos:column="29">pool<pos:position pos:line="28" pos:column="33"/></name></name></expr></argument>, <argument><expr><name pos:line="28" pos:column="35">arg<pos:position pos:line="28" pos:column="38"/></name></expr></argument>, <argument><expr><name pos:line="28" pos:column="40">endp<pos:position pos:line="28" pos:column="44"/></name><operator pos:line="28" pos:column="44">-<pos:position pos:line="28" pos:column="45"/></operator><name pos:line="28" pos:column="45">arg<pos:position pos:line="28" pos:column="48"/></name></expr></argument>)<pos:position pos:line="28" pos:column="49"/></argument_list></call></expr>;<pos:position pos:line="28" pos:column="50"/></expr_stmt>

    <if pos:line="30" pos:column="5">if <condition pos:line="30" pos:column="8">(<expr><operator pos:line="30" pos:column="9">!<pos:position pos:line="30" pos:column="10"/></operator><name pos:line="30" pos:column="10">arg<pos:position pos:line="30" pos:column="13"/></name></expr>)<pos:position pos:line="30" pos:column="14"/></condition><then pos:line="30" pos:column="14"> <block pos:line="30" pos:column="15">{
        <if pos:line="31" pos:column="9">if <condition pos:line="31" pos:column="12">(<expr><name><name pos:line="31" pos:column="13">thiscmd<pos:position pos:line="31" pos:column="20"/></name><operator pos:line="31" pos:column="20">-&gt;<pos:position pos:line="31" pos:column="25"/></operator><name pos:line="31" pos:column="22">cmd_data<pos:position pos:line="31" pos:column="30"/></name></name></expr>)<pos:position pos:line="31" pos:column="31"/></condition><then pos:line="31" pos:column="31">
            <block type="pseudo"><return pos:line="32" pos:column="13">return <expr><literal type="string" pos:line="32" pos:column="20">"&lt;ProxyMatch &gt; block must specify a path"<pos:position pos:line="32" pos:column="67"/></literal></expr>;<pos:position pos:line="32" pos:column="62"/></return></block></then>
        <else pos:line="33" pos:column="9">else
            <block type="pseudo"><return pos:line="34" pos:column="13">return <expr><literal type="string" pos:line="34" pos:column="20">"&lt;Proxy &gt; block must specify a path"<pos:position pos:line="34" pos:column="62"/></literal></expr>;<pos:position pos:line="34" pos:column="57"/></return></block></else></if>
    }<pos:position pos:line="35" pos:column="6"/></block></then></if>

    <expr_stmt><expr><name><name pos:line="37" pos:column="5">cmd<pos:position pos:line="37" pos:column="8"/></name><operator pos:line="37" pos:column="8">-&gt;<pos:position pos:line="37" pos:column="13"/></operator><name pos:line="37" pos:column="10">path<pos:position pos:line="37" pos:column="14"/></name></name> <operator pos:line="37" pos:column="15">=<pos:position pos:line="37" pos:column="16"/></operator> <call><name pos:line="37" pos:column="17">ap_getword_conf<pos:position pos:line="37" pos:column="32"/></name><argument_list pos:line="37" pos:column="32">(<argument><expr><name><name pos:line="37" pos:column="33">cmd<pos:position pos:line="37" pos:column="36"/></name><operator pos:line="37" pos:column="36">-&gt;<pos:position pos:line="37" pos:column="41"/></operator><name pos:line="37" pos:column="38">pool<pos:position pos:line="37" pos:column="42"/></name></name></expr></argument>, <argument><expr><operator pos:line="37" pos:column="44">&amp;<pos:position pos:line="37" pos:column="49"/></operator><name pos:line="37" pos:column="45">arg<pos:position pos:line="37" pos:column="48"/></name></expr></argument>)<pos:position pos:line="37" pos:column="49"/></argument_list></call></expr>;<pos:position pos:line="37" pos:column="50"/></expr_stmt>
    <expr_stmt><expr><name><name pos:line="38" pos:column="5">cmd<pos:position pos:line="38" pos:column="8"/></name><operator pos:line="38" pos:column="8">-&gt;<pos:position pos:line="38" pos:column="13"/></operator><name pos:line="38" pos:column="10">override<pos:position pos:line="38" pos:column="18"/></name></name> <operator pos:line="38" pos:column="19">=<pos:position pos:line="38" pos:column="20"/></operator> <name pos:line="38" pos:column="21">OR_ALL<pos:position pos:line="38" pos:column="27"/></name><operator pos:line="38" pos:column="27">|<pos:position pos:line="38" pos:column="28"/></operator><name pos:line="38" pos:column="28">ACCESS_CONF<pos:position pos:line="38" pos:column="39"/></name></expr>;<pos:position pos:line="38" pos:column="40"/></expr_stmt>

    <if pos:line="40" pos:column="5">if <condition pos:line="40" pos:column="8">(<expr><operator pos:line="40" pos:column="9">!<pos:position pos:line="40" pos:column="10"/></operator><call><name pos:line="40" pos:column="10">strncasecmp<pos:position pos:line="40" pos:column="21"/></name><argument_list pos:line="40" pos:column="21">(<argument><expr><name><name pos:line="40" pos:column="22">cmd<pos:position pos:line="40" pos:column="25"/></name><operator pos:line="40" pos:column="25">-&gt;<pos:position pos:line="40" pos:column="30"/></operator><name pos:line="40" pos:column="27">path<pos:position pos:line="40" pos:column="31"/></name></name></expr></argument>, <argument><expr><literal type="string" pos:line="40" pos:column="33">"proxy:"<pos:position pos:line="40" pos:column="41"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="40" pos:column="43">6<pos:position pos:line="40" pos:column="44"/></literal></expr></argument>)<pos:position pos:line="40" pos:column="45"/></argument_list></call></expr>)<pos:position pos:line="40" pos:column="46"/></condition><then pos:line="40" pos:column="46">
        <block type="pseudo"><expr_stmt><expr><name><name pos:line="41" pos:column="9">cmd<pos:position pos:line="41" pos:column="12"/></name><operator pos:line="41" pos:column="12">-&gt;<pos:position pos:line="41" pos:column="17"/></operator><name pos:line="41" pos:column="14">path<pos:position pos:line="41" pos:column="18"/></name></name> <operator pos:line="41" pos:column="19">+=<pos:position pos:line="41" pos:column="21"/></operator> <literal type="number" pos:line="41" pos:column="22">6<pos:position pos:line="41" pos:column="23"/></literal></expr>;<pos:position pos:line="41" pos:column="24"/></expr_stmt></block></then></if>

    <comment type="block" pos:line="43" pos:column="5">/* XXX Ignore case?  What if we proxy a case-insensitive server?!?
     * While we are at it, shouldn't we also canonicalize the entire
     * scheme?  See proxy_fixup()
     */</comment>
    <if pos:line="47" pos:column="5">if <condition pos:line="47" pos:column="8">(<expr><name><name pos:line="47" pos:column="9">thiscmd<pos:position pos:line="47" pos:column="16"/></name><operator pos:line="47" pos:column="16">-&gt;<pos:position pos:line="47" pos:column="21"/></operator><name pos:line="47" pos:column="18">cmd_data<pos:position pos:line="47" pos:column="26"/></name></name></expr>)<pos:position pos:line="47" pos:column="27"/></condition><then pos:line="47" pos:column="27"> <block pos:line="47" pos:column="28">{ <comment type="block" pos:line="47" pos:column="30">/* &lt;ProxyMatch&gt; */</comment>
        <expr_stmt><expr><name pos:line="48" pos:column="9">r<pos:position pos:line="48" pos:column="10"/></name> <operator pos:line="48" pos:column="11">=<pos:position pos:line="48" pos:column="12"/></operator> <call><name pos:line="48" pos:column="13">ap_pregcomp<pos:position pos:line="48" pos:column="24"/></name><argument_list pos:line="48" pos:column="24">(<argument><expr><name><name pos:line="48" pos:column="25">cmd<pos:position pos:line="48" pos:column="28"/></name><operator pos:line="48" pos:column="28">-&gt;<pos:position pos:line="48" pos:column="33"/></operator><name pos:line="48" pos:column="30">pool<pos:position pos:line="48" pos:column="34"/></name></name></expr></argument>, <argument><expr><name><name pos:line="48" pos:column="36">cmd<pos:position pos:line="48" pos:column="39"/></name><operator pos:line="48" pos:column="39">-&gt;<pos:position pos:line="48" pos:column="44"/></operator><name pos:line="48" pos:column="41">path<pos:position pos:line="48" pos:column="45"/></name></name></expr></argument>, <argument><expr><name pos:line="48" pos:column="47">AP_REG_EXTENDED<pos:position pos:line="48" pos:column="62"/></name></expr></argument>)<pos:position pos:line="48" pos:column="63"/></argument_list></call></expr>;<pos:position pos:line="48" pos:column="64"/></expr_stmt>
        <if pos:line="49" pos:column="9">if <condition pos:line="49" pos:column="12">(<expr><operator pos:line="49" pos:column="13">!<pos:position pos:line="49" pos:column="14"/></operator><name pos:line="49" pos:column="14">r<pos:position pos:line="49" pos:column="15"/></name></expr>)<pos:position pos:line="49" pos:column="16"/></condition><then pos:line="49" pos:column="16"> <block pos:line="49" pos:column="17">{
            <return pos:line="50" pos:column="13">return <expr><literal type="string" pos:line="50" pos:column="20">"Regex could not be compiled"<pos:position pos:line="50" pos:column="49"/></literal></expr>;<pos:position pos:line="50" pos:column="50"/></return>
        }<pos:position pos:line="51" pos:column="10"/></block></then></if>
    }<pos:position pos:line="52" pos:column="6"/></block></then></if>

    <comment type="block" pos:line="54" pos:column="5">/* initialize our config and fetch it */</comment>
    <expr_stmt><expr><name pos:line="55" pos:column="5">conf<pos:position pos:line="55" pos:column="9"/></name> <operator pos:line="55" pos:column="10">=<pos:position pos:line="55" pos:column="11"/></operator> <call><name pos:line="55" pos:column="12">ap_set_config_vectors<pos:position pos:line="55" pos:column="33"/></name><argument_list pos:line="55" pos:column="33">(<argument><expr><name><name pos:line="55" pos:column="34">cmd<pos:position pos:line="55" pos:column="37"/></name><operator pos:line="55" pos:column="37">-&gt;<pos:position pos:line="55" pos:column="42"/></operator><name pos:line="55" pos:column="39">server<pos:position pos:line="55" pos:column="45"/></name></name></expr></argument>, <argument><expr><name pos:line="55" pos:column="47">new_dir_conf<pos:position pos:line="55" pos:column="59"/></name></expr></argument>, <argument><expr><name><name pos:line="55" pos:column="61">cmd<pos:position pos:line="55" pos:column="64"/></name><operator pos:line="55" pos:column="64">-&gt;<pos:position pos:line="55" pos:column="69"/></operator><name pos:line="55" pos:column="66">path<pos:position pos:line="55" pos:column="70"/></name></name></expr></argument>,
                                 <argument><expr><operator pos:line="56" pos:column="34">&amp;<pos:position pos:line="56" pos:column="39"/></operator><name pos:line="56" pos:column="35">proxy_module<pos:position pos:line="56" pos:column="47"/></name></expr></argument>, <argument><expr><name><name pos:line="56" pos:column="49">cmd<pos:position pos:line="56" pos:column="52"/></name><operator pos:line="56" pos:column="52">-&gt;<pos:position pos:line="56" pos:column="57"/></operator><name pos:line="56" pos:column="54">pool<pos:position pos:line="56" pos:column="58"/></name></name></expr></argument>)<pos:position pos:line="56" pos:column="59"/></argument_list></call></expr>;<pos:position pos:line="56" pos:column="60"/></expr_stmt>

    <expr_stmt><expr><name pos:line="58" pos:column="5">errmsg<pos:position pos:line="58" pos:column="11"/></name> <operator pos:line="58" pos:column="12">=<pos:position pos:line="58" pos:column="13"/></operator> <call><name pos:line="58" pos:column="14">ap_walk_config<pos:position pos:line="58" pos:column="28"/></name><argument_list pos:line="58" pos:column="28">(<argument><expr><name><name pos:line="58" pos:column="29">cmd<pos:position pos:line="58" pos:column="32"/></name><operator pos:line="58" pos:column="32">-&gt;<pos:position pos:line="58" pos:column="37"/></operator><name pos:line="58" pos:column="34">directive<pos:position pos:line="58" pos:column="43"/></name><operator pos:line="58" pos:column="43">-&gt;<pos:position pos:line="58" pos:column="48"/></operator><name pos:line="58" pos:column="45">first_child<pos:position pos:line="58" pos:column="56"/></name></name></expr></argument>, <argument><expr><name pos:line="58" pos:column="58">cmd<pos:position pos:line="58" pos:column="61"/></name></expr></argument>, <argument><expr><name pos:line="58" pos:column="63">new_dir_conf<pos:position pos:line="58" pos:column="75"/></name></expr></argument>)<pos:position pos:line="58" pos:column="76"/></argument_list></call></expr>;<pos:position pos:line="58" pos:column="77"/></expr_stmt>
    <if pos:line="59" pos:column="5">if <condition pos:line="59" pos:column="8">(<expr><name pos:line="59" pos:column="9">errmsg<pos:position pos:line="59" pos:column="15"/></name> <operator pos:line="59" pos:column="16">!=<pos:position pos:line="59" pos:column="18"/></operator> <name pos:line="59" pos:column="19">NULL<pos:position pos:line="59" pos:column="23"/></name></expr>)<pos:position pos:line="59" pos:column="24"/></condition><then pos:line="59" pos:column="24">
        <block type="pseudo"><return pos:line="60" pos:column="9">return <expr><name pos:line="60" pos:column="16">errmsg<pos:position pos:line="60" pos:column="22"/></name></expr>;<pos:position pos:line="60" pos:column="23"/></return></block></then></if>

    <expr_stmt><expr><name><name pos:line="62" pos:column="5">conf<pos:position pos:line="62" pos:column="9"/></name><operator pos:line="62" pos:column="9">-&gt;<pos:position pos:line="62" pos:column="14"/></operator><name pos:line="62" pos:column="11">r<pos:position pos:line="62" pos:column="12"/></name></name> <operator pos:line="62" pos:column="13">=<pos:position pos:line="62" pos:column="14"/></operator> <name pos:line="62" pos:column="15">r<pos:position pos:line="62" pos:column="16"/></name></expr>;<pos:position pos:line="62" pos:column="17"/></expr_stmt>
    <expr_stmt><expr><name><name pos:line="63" pos:column="5">conf<pos:position pos:line="63" pos:column="9"/></name><operator pos:line="63" pos:column="9">-&gt;<pos:position pos:line="63" pos:column="14"/></operator><name pos:line="63" pos:column="11">p<pos:position pos:line="63" pos:column="12"/></name></name> <operator pos:line="63" pos:column="13">=<pos:position pos:line="63" pos:column="14"/></operator> <name><name pos:line="63" pos:column="15">cmd<pos:position pos:line="63" pos:column="18"/></name><operator pos:line="63" pos:column="18">-&gt;<pos:position pos:line="63" pos:column="23"/></operator><name pos:line="63" pos:column="20">path<pos:position pos:line="63" pos:column="24"/></name></name></expr>;<pos:position pos:line="63" pos:column="25"/></expr_stmt>
    <expr_stmt><expr><name><name pos:line="64" pos:column="5">conf<pos:position pos:line="64" pos:column="9"/></name><operator pos:line="64" pos:column="9">-&gt;<pos:position pos:line="64" pos:column="14"/></operator><name pos:line="64" pos:column="11">p_is_fnmatch<pos:position pos:line="64" pos:column="23"/></name></name> <operator pos:line="64" pos:column="24">=<pos:position pos:line="64" pos:column="25"/></operator> <call><name pos:line="64" pos:column="26">apr_fnmatch_test<pos:position pos:line="64" pos:column="42"/></name><argument_list pos:line="64" pos:column="42">(<argument><expr><name><name pos:line="64" pos:column="43">conf<pos:position pos:line="64" pos:column="47"/></name><operator pos:line="64" pos:column="47">-&gt;<pos:position pos:line="64" pos:column="52"/></operator><name pos:line="64" pos:column="49">p<pos:position pos:line="64" pos:column="50"/></name></name></expr></argument>)<pos:position pos:line="64" pos:column="51"/></argument_list></call></expr>;<pos:position pos:line="64" pos:column="52"/></expr_stmt>

    <if pos:line="66" pos:column="5">if <condition pos:line="66" pos:column="8">(<expr><name pos:line="66" pos:column="9">r<pos:position pos:line="66" pos:column="10"/></name></expr>)<pos:position pos:line="66" pos:column="11"/></condition><then pos:line="66" pos:column="11"> <block pos:line="66" pos:column="12">{
        <expr_stmt><expr><name><name pos:line="67" pos:column="9">conf<pos:position pos:line="67" pos:column="13"/></name><operator pos:line="67" pos:column="13">-&gt;<pos:position pos:line="67" pos:column="18"/></operator><name pos:line="67" pos:column="15">refs<pos:position pos:line="67" pos:column="19"/></name></name> <operator pos:line="67" pos:column="20">=<pos:position pos:line="67" pos:column="21"/></operator> <call><name pos:line="67" pos:column="22">apr_array_make<pos:position pos:line="67" pos:column="36"/></name><argument_list pos:line="67" pos:column="36">(<argument><expr><name><name pos:line="67" pos:column="37">cmd<pos:position pos:line="67" pos:column="40"/></name><operator pos:line="67" pos:column="40">-&gt;<pos:position pos:line="67" pos:column="45"/></operator><name pos:line="67" pos:column="42">pool<pos:position pos:line="67" pos:column="46"/></name></name></expr></argument>, <argument><expr><literal type="number" pos:line="67" pos:column="48">8<pos:position pos:line="67" pos:column="49"/></literal></expr></argument>, <argument><expr><sizeof pos:line="67" pos:column="51">sizeof<argument_list pos:line="67" pos:column="57">(<argument><expr><name pos:line="67" pos:column="58">char<pos:position pos:line="67" pos:column="62"/></name> <operator pos:line="67" pos:column="63">*<pos:position pos:line="67" pos:column="64"/></operator></expr></argument>)<pos:position pos:line="67" pos:column="65"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="67" pos:column="66"/></argument_list></call></expr>;<pos:position pos:line="67" pos:column="67"/></expr_stmt>
        <expr_stmt><expr><call><name pos:line="68" pos:column="9">ap_regname<pos:position pos:line="68" pos:column="19"/></name><argument_list pos:line="68" pos:column="19">(<argument><expr><name pos:line="68" pos:column="20">r<pos:position pos:line="68" pos:column="21"/></name></expr></argument>, <argument><expr><name><name pos:line="68" pos:column="23">conf<pos:position pos:line="68" pos:column="27"/></name><operator pos:line="68" pos:column="27">-&gt;<pos:position pos:line="68" pos:column="32"/></operator><name pos:line="68" pos:column="29">refs<pos:position pos:line="68" pos:column="33"/></name></name></expr></argument>, <argument><expr><name pos:line="68" pos:column="35">AP_REG_MATCH<pos:position pos:line="68" pos:column="47"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="68" pos:column="49">1<pos:position pos:line="68" pos:column="50"/></literal></expr></argument>)<pos:position pos:line="68" pos:column="51"/></argument_list></call></expr>;<pos:position pos:line="68" pos:column="52"/></expr_stmt>
    }<pos:position pos:line="69" pos:column="6"/></block></then></if>

    <expr_stmt><expr><call><name pos:line="71" pos:column="5">ap_add_per_proxy_conf<pos:position pos:line="71" pos:column="26"/></name><argument_list pos:line="71" pos:column="26">(<argument><expr><name><name pos:line="71" pos:column="27">cmd<pos:position pos:line="71" pos:column="30"/></name><operator pos:line="71" pos:column="30">-&gt;<pos:position pos:line="71" pos:column="35"/></operator><name pos:line="71" pos:column="32">server<pos:position pos:line="71" pos:column="38"/></name></name></expr></argument>, <argument><expr><name pos:line="71" pos:column="40">new_dir_conf<pos:position pos:line="71" pos:column="52"/></name></expr></argument>)<pos:position pos:line="71" pos:column="53"/></argument_list></call></expr>;<pos:position pos:line="71" pos:column="54"/></expr_stmt>

    <if pos:line="73" pos:column="5">if <condition pos:line="73" pos:column="8">(<expr><operator pos:line="73" pos:column="9">*<pos:position pos:line="73" pos:column="10"/></operator><name pos:line="73" pos:column="10">arg<pos:position pos:line="73" pos:column="13"/></name> <operator pos:line="73" pos:column="14">!=<pos:position pos:line="73" pos:column="16"/></operator> <literal type="char" pos:line="73" pos:column="17">'\0'<pos:position pos:line="73" pos:column="21"/></literal></expr>)<pos:position pos:line="73" pos:column="22"/></condition><then pos:line="73" pos:column="22"> <block pos:line="73" pos:column="23">{
        <if pos:line="74" pos:column="9">if <condition pos:line="74" pos:column="12">(<expr><name><name pos:line="74" pos:column="13">thiscmd<pos:position pos:line="74" pos:column="20"/></name><operator pos:line="74" pos:column="20">-&gt;<pos:position pos:line="74" pos:column="25"/></operator><name pos:line="74" pos:column="22">cmd_data<pos:position pos:line="74" pos:column="30"/></name></name></expr>)<pos:position pos:line="74" pos:column="31"/></condition><then pos:line="74" pos:column="31">
            <block type="pseudo"><return pos:line="75" pos:column="13">return <expr><literal type="string" pos:line="75" pos:column="20">"Multiple &lt;ProxyMatch&gt; arguments not (yet) supported."<pos:position pos:line="75" pos:column="80"/></literal></expr>;<pos:position pos:line="75" pos:column="75"/></return></block></then></if>
        <if pos:line="76" pos:column="9">if <condition pos:line="76" pos:column="12">(<expr><name><name pos:line="76" pos:column="13">conf<pos:position pos:line="76" pos:column="17"/></name><operator pos:line="76" pos:column="17">-&gt;<pos:position pos:line="76" pos:column="22"/></operator><name pos:line="76" pos:column="19">p_is_fnmatch<pos:position pos:line="76" pos:column="31"/></name></name></expr>)<pos:position pos:line="76" pos:column="32"/></condition><then pos:line="76" pos:column="32">
            <block type="pseudo"><return pos:line="77" pos:column="13">return <expr><call><name pos:line="77" pos:column="20">apr_pstrcat<pos:position pos:line="77" pos:column="31"/></name><argument_list pos:line="77" pos:column="31">(<argument><expr><name><name pos:line="77" pos:column="32">cmd<pos:position pos:line="77" pos:column="35"/></name><operator pos:line="77" pos:column="35">-&gt;<pos:position pos:line="77" pos:column="40"/></operator><name pos:line="77" pos:column="37">pool<pos:position pos:line="77" pos:column="41"/></name></name></expr></argument>, <argument><expr><name><name pos:line="77" pos:column="43">thiscmd<pos:position pos:line="77" pos:column="50"/></name><operator pos:line="77" pos:column="50">-&gt;<pos:position pos:line="77" pos:column="55"/></operator><name pos:line="77" pos:column="52">name<pos:position pos:line="77" pos:column="56"/></name></name></expr></argument>,
                               <argument><expr><literal type="string" pos:line="78" pos:column="32">"&gt; arguments are not supported for wildchar url."<pos:position pos:line="78" pos:column="84"/></literal></expr></argument>,
                               <argument><expr><name pos:line="79" pos:column="32">NULL<pos:position pos:line="79" pos:column="36"/></name></expr></argument>)<pos:position pos:line="79" pos:column="37"/></argument_list></call></expr>;<pos:position pos:line="79" pos:column="38"/></return></block></then></if>
        <if pos:line="80" pos:column="9">if <condition pos:line="80" pos:column="12">(<expr><operator pos:line="80" pos:column="13">!<pos:position pos:line="80" pos:column="14"/></operator><call><name pos:line="80" pos:column="14">ap_strchr_c<pos:position pos:line="80" pos:column="25"/></name><argument_list pos:line="80" pos:column="25">(<argument><expr><name><name pos:line="80" pos:column="26">conf<pos:position pos:line="80" pos:column="30"/></name><operator pos:line="80" pos:column="30">-&gt;<pos:position pos:line="80" pos:column="35"/></operator><name pos:line="80" pos:column="32">p<pos:position pos:line="80" pos:column="33"/></name></name></expr></argument>, <argument><expr><literal type="char" pos:line="80" pos:column="35">':'<pos:position pos:line="80" pos:column="38"/></literal></expr></argument>)<pos:position pos:line="80" pos:column="39"/></argument_list></call></expr>)<pos:position pos:line="80" pos:column="40"/></condition><then pos:line="80" pos:column="40">
            <block type="pseudo"><return pos:line="81" pos:column="13">return <expr><call><name pos:line="81" pos:column="20">apr_pstrcat<pos:position pos:line="81" pos:column="31"/></name><argument_list pos:line="81" pos:column="31">(<argument><expr><name><name pos:line="81" pos:column="32">cmd<pos:position pos:line="81" pos:column="35"/></name><operator pos:line="81" pos:column="35">-&gt;<pos:position pos:line="81" pos:column="40"/></operator><name pos:line="81" pos:column="37">pool<pos:position pos:line="81" pos:column="41"/></name></name></expr></argument>, <argument><expr><name><name pos:line="81" pos:column="43">thiscmd<pos:position pos:line="81" pos:column="50"/></name><operator pos:line="81" pos:column="50">-&gt;<pos:position pos:line="81" pos:column="55"/></operator><name pos:line="81" pos:column="52">name<pos:position pos:line="81" pos:column="56"/></name></name></expr></argument>,
                               <argument><expr><literal type="string" pos:line="82" pos:column="32">"&gt; arguments are not supported for non url."<pos:position pos:line="82" pos:column="79"/></literal></expr></argument>,
                               <argument><expr><name pos:line="83" pos:column="32">NULL<pos:position pos:line="83" pos:column="36"/></name></expr></argument>)<pos:position pos:line="83" pos:column="37"/></argument_list></call></expr>;<pos:position pos:line="83" pos:column="38"/></return></block></then></if>
        <if pos:line="84" pos:column="9">if <condition pos:line="84" pos:column="12">(<expr><call><name pos:line="84" pos:column="13">ap_proxy_valid_balancer_name<pos:position pos:line="84" pos:column="41"/></name><argument_list pos:line="84" pos:column="41">(<argument><expr><operator pos:line="84" pos:column="42">(<pos:position pos:line="84" pos:column="43"/></operator><name pos:line="84" pos:column="43">char<pos:position pos:line="84" pos:column="47"/></name> <operator pos:line="84" pos:column="48">*<pos:position pos:line="84" pos:column="49"/></operator><operator pos:line="84" pos:column="49">)<pos:position pos:line="84" pos:column="50"/></operator><name><name pos:line="84" pos:column="50">conf<pos:position pos:line="84" pos:column="54"/></name><operator pos:line="84" pos:column="54">-&gt;<pos:position pos:line="84" pos:column="59"/></operator><name pos:line="84" pos:column="56">p<pos:position pos:line="84" pos:column="57"/></name></name></expr></argument>, <argument><expr><literal type="number" pos:line="84" pos:column="59">9<pos:position pos:line="84" pos:column="60"/></literal></expr></argument>)<pos:position pos:line="84" pos:column="61"/></argument_list></call></expr>)<pos:position pos:line="84" pos:column="62"/></condition><then pos:line="84" pos:column="62"> <block pos:line="84" pos:column="63">{
            <expr_stmt><expr><name pos:line="85" pos:column="13">balancer<pos:position pos:line="85" pos:column="21"/></name> <operator pos:line="85" pos:column="22">=<pos:position pos:line="85" pos:column="23"/></operator> <call><name pos:line="85" pos:column="24">ap_proxy_get_balancer<pos:position pos:line="85" pos:column="45"/></name><argument_list pos:line="85" pos:column="45">(<argument><expr><name><name pos:line="85" pos:column="46">cmd<pos:position pos:line="85" pos:column="49"/></name><operator pos:line="85" pos:column="49">-&gt;<pos:position pos:line="85" pos:column="54"/></operator><name pos:line="85" pos:column="51">pool<pos:position pos:line="85" pos:column="55"/></name></name></expr></argument>, <argument><expr><name pos:line="85" pos:column="57">sconf<pos:position pos:line="85" pos:column="62"/></name></expr></argument>, <argument><expr><name><name pos:line="85" pos:column="64">conf<pos:position pos:line="85" pos:column="68"/></name><operator pos:line="85" pos:column="68">-&gt;<pos:position pos:line="85" pos:column="73"/></operator><name pos:line="85" pos:column="70">p<pos:position pos:line="85" pos:column="71"/></name></name></expr></argument>, <argument><expr><literal type="number" pos:line="85" pos:column="73">0<pos:position pos:line="85" pos:column="74"/></literal></expr></argument>)<pos:position pos:line="85" pos:column="75"/></argument_list></call></expr>;<pos:position pos:line="85" pos:column="76"/></expr_stmt>
            <if pos:line="86" pos:column="13">if <condition pos:line="86" pos:column="16">(<expr><operator pos:line="86" pos:column="17">!<pos:position pos:line="86" pos:column="18"/></operator><name pos:line="86" pos:column="18">balancer<pos:position pos:line="86" pos:column="26"/></name></expr>)<pos:position pos:line="86" pos:column="27"/></condition><then pos:line="86" pos:column="27"> <block pos:line="86" pos:column="28">{
                <expr_stmt><expr><name pos:line="87" pos:column="17">err<pos:position pos:line="87" pos:column="20"/></name> <operator pos:line="87" pos:column="21">=<pos:position pos:line="87" pos:column="22"/></operator> <call><name pos:line="87" pos:column="23">ap_proxy_define_balancer<pos:position pos:line="87" pos:column="47"/></name><argument_list pos:line="87" pos:column="47">(<argument><expr><name><name pos:line="87" pos:column="48">cmd<pos:position pos:line="87" pos:column="51"/></name><operator pos:line="87" pos:column="51">-&gt;<pos:position pos:line="87" pos:column="56"/></operator><name pos:line="87" pos:column="53">pool<pos:position pos:line="87" pos:column="57"/></name></name></expr></argument>, <argument><expr><operator pos:line="87" pos:column="59">&amp;<pos:position pos:line="87" pos:column="64"/></operator><name pos:line="87" pos:column="60">balancer<pos:position pos:line="87" pos:column="68"/></name></expr></argument>,
                                               <argument><expr><name pos:line="88" pos:column="48">sconf<pos:position pos:line="88" pos:column="53"/></name></expr></argument>, <argument><expr><name><name pos:line="88" pos:column="55">conf<pos:position pos:line="88" pos:column="59"/></name><operator pos:line="88" pos:column="59">-&gt;<pos:position pos:line="88" pos:column="64"/></operator><name pos:line="88" pos:column="61">p<pos:position pos:line="88" pos:column="62"/></name></name></expr></argument>, <argument><expr><literal type="string" pos:line="88" pos:column="64">"/"<pos:position pos:line="88" pos:column="67"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="88" pos:column="69">0<pos:position pos:line="88" pos:column="70"/></literal></expr></argument>)<pos:position pos:line="88" pos:column="71"/></argument_list></call></expr>;<pos:position pos:line="88" pos:column="72"/></expr_stmt>
                <if pos:line="89" pos:column="17">if <condition pos:line="89" pos:column="20">(<expr><name pos:line="89" pos:column="21">err<pos:position pos:line="89" pos:column="24"/></name></expr>)<pos:position pos:line="89" pos:column="25"/></condition><then pos:line="89" pos:column="25">
                    <block type="pseudo"><return pos:line="90" pos:column="21">return <expr><call><name pos:line="90" pos:column="28">apr_pstrcat<pos:position pos:line="90" pos:column="39"/></name><argument_list pos:line="90" pos:column="39">(<argument><expr><name><name pos:line="90" pos:column="40">cmd<pos:position pos:line="90" pos:column="43"/></name><operator pos:line="90" pos:column="43">-&gt;<pos:position pos:line="90" pos:column="48"/></operator><name pos:line="90" pos:column="45">temp_pool<pos:position pos:line="90" pos:column="54"/></name></name></expr></argument>, <argument><expr><name><name pos:line="90" pos:column="56">thiscmd<pos:position pos:line="90" pos:column="63"/></name><operator pos:line="90" pos:column="63">-&gt;<pos:position pos:line="90" pos:column="68"/></operator><name pos:line="90" pos:column="65">name<pos:position pos:line="90" pos:column="69"/></name></name></expr></argument>,
                                       <argument><expr><literal type="string" pos:line="91" pos:column="40">" "<pos:position pos:line="91" pos:column="43"/></literal></expr></argument>, <argument><expr><name pos:line="91" pos:column="45">err<pos:position pos:line="91" pos:column="48"/></name></expr></argument>, <argument><expr><name pos:line="91" pos:column="50">NULL<pos:position pos:line="91" pos:column="54"/></name></expr></argument>)<pos:position pos:line="91" pos:column="55"/></argument_list></call></expr>;<pos:position pos:line="91" pos:column="56"/></return></block></then></if>
            }<pos:position pos:line="92" pos:column="14"/></block></then></if>
        }<pos:position pos:line="93" pos:column="10"/></block></then>
        <else pos:line="94" pos:column="9">else <block pos:line="94" pos:column="14">{
            <expr_stmt><expr><name pos:line="95" pos:column="13">worker<pos:position pos:line="95" pos:column="19"/></name> <operator pos:line="95" pos:column="20">=<pos:position pos:line="95" pos:column="21"/></operator> <call><name pos:line="95" pos:column="22">ap_proxy_get_worker<pos:position pos:line="95" pos:column="41"/></name><argument_list pos:line="95" pos:column="41">(<argument><expr><name><name pos:line="95" pos:column="42">cmd<pos:position pos:line="95" pos:column="45"/></name><operator pos:line="95" pos:column="45">-&gt;<pos:position pos:line="95" pos:column="50"/></operator><name pos:line="95" pos:column="47">temp_pool<pos:position pos:line="95" pos:column="56"/></name></name></expr></argument>, <argument><expr><name pos:line="95" pos:column="58">NULL<pos:position pos:line="95" pos:column="62"/></name></expr></argument>, <argument><expr><name pos:line="95" pos:column="64">sconf<pos:position pos:line="95" pos:column="69"/></name></expr></argument>,
                                         <argument><expr><call><name pos:line="96" pos:column="42">ap_proxy_de_socketfy<pos:position pos:line="96" pos:column="62"/></name><argument_list pos:line="96" pos:column="62">(<argument><expr><name><name pos:line="96" pos:column="63">cmd<pos:position pos:line="96" pos:column="66"/></name><operator pos:line="96" pos:column="66">-&gt;<pos:position pos:line="96" pos:column="71"/></operator><name pos:line="96" pos:column="68">temp_pool<pos:position pos:line="96" pos:column="77"/></name></name></expr></argument>, <argument><expr><operator pos:line="96" pos:column="79">(<pos:position pos:line="96" pos:column="80"/></operator><name pos:line="96" pos:column="80">char<pos:position pos:line="96" pos:column="84"/></name><operator pos:line="96" pos:column="84">*<pos:position pos:line="96" pos:column="85"/></operator><operator pos:line="96" pos:column="85">)<pos:position pos:line="96" pos:column="86"/></operator><name><name pos:line="96" pos:column="86">conf<pos:position pos:line="96" pos:column="90"/></name><operator pos:line="96" pos:column="90">-&gt;<pos:position pos:line="96" pos:column="95"/></operator><name pos:line="96" pos:column="92">p<pos:position pos:line="96" pos:column="93"/></name></name></expr></argument>)<pos:position pos:line="96" pos:column="94"/></argument_list></call></expr></argument>)<pos:position pos:line="96" pos:column="95"/></argument_list></call></expr>;<pos:position pos:line="96" pos:column="96"/></expr_stmt>
            <if pos:line="97" pos:column="13">if <condition pos:line="97" pos:column="16">(<expr><operator pos:line="97" pos:column="17">!<pos:position pos:line="97" pos:column="18"/></operator><name pos:line="97" pos:column="18">worker<pos:position pos:line="97" pos:column="24"/></name></expr>)<pos:position pos:line="97" pos:column="25"/></condition><then pos:line="97" pos:column="25"> <block pos:line="97" pos:column="26">{
                <expr_stmt><expr><name pos:line="98" pos:column="17">err<pos:position pos:line="98" pos:column="20"/></name> <operator pos:line="98" pos:column="21">=<pos:position pos:line="98" pos:column="22"/></operator> <call><name pos:line="98" pos:column="23">ap_proxy_define_worker<pos:position pos:line="98" pos:column="45"/></name><argument_list pos:line="98" pos:column="45">(<argument><expr><name><name pos:line="98" pos:column="46">cmd<pos:position pos:line="98" pos:column="49"/></name><operator pos:line="98" pos:column="49">-&gt;<pos:position pos:line="98" pos:column="54"/></operator><name pos:line="98" pos:column="51">pool<pos:position pos:line="98" pos:column="55"/></name></name></expr></argument>, <argument><expr><operator pos:line="98" pos:column="57">&amp;<pos:position pos:line="98" pos:column="62"/></operator><name pos:line="98" pos:column="58">worker<pos:position pos:line="98" pos:column="64"/></name></expr></argument>, <argument><expr><name pos:line="98" pos:column="66">NULL<pos:position pos:line="98" pos:column="70"/></name></expr></argument>,
                                          <argument><expr><name pos:line="99" pos:column="43">sconf<pos:position pos:line="99" pos:column="48"/></name></expr></argument>, <argument><expr><name><name pos:line="99" pos:column="50">conf<pos:position pos:line="99" pos:column="54"/></name><operator pos:line="99" pos:column="54">-&gt;<pos:position pos:line="99" pos:column="59"/></operator><name pos:line="99" pos:column="56">p<pos:position pos:line="99" pos:column="57"/></name></name></expr></argument>, <argument><expr><literal type="number" pos:line="99" pos:column="59">0<pos:position pos:line="99" pos:column="60"/></literal></expr></argument>)<pos:position pos:line="99" pos:column="61"/></argument_list></call></expr>;<pos:position pos:line="99" pos:column="62"/></expr_stmt>
                <if pos:line="100" pos:column="17">if <condition pos:line="100" pos:column="20">(<expr><name pos:line="100" pos:column="21">err<pos:position pos:line="100" pos:column="24"/></name></expr>)<pos:position pos:line="100" pos:column="25"/></condition><then pos:line="100" pos:column="25">
                    <block type="pseudo"><return pos:line="101" pos:column="21">return <expr><call><name pos:line="101" pos:column="28">apr_pstrcat<pos:position pos:line="101" pos:column="39"/></name><argument_list pos:line="101" pos:column="39">(<argument><expr><name><name pos:line="101" pos:column="40">cmd<pos:position pos:line="101" pos:column="43"/></name><operator pos:line="101" pos:column="43">-&gt;<pos:position pos:line="101" pos:column="48"/></operator><name pos:line="101" pos:column="45">temp_pool<pos:position pos:line="101" pos:column="54"/></name></name></expr></argument>, <argument><expr><name><name pos:line="101" pos:column="56">thiscmd<pos:position pos:line="101" pos:column="63"/></name><operator pos:line="101" pos:column="63">-&gt;<pos:position pos:line="101" pos:column="68"/></operator><name pos:line="101" pos:column="65">name<pos:position pos:line="101" pos:column="69"/></name></name></expr></argument>,
                                       <argument><expr><literal type="string" pos:line="102" pos:column="40">" "<pos:position pos:line="102" pos:column="43"/></literal></expr></argument>, <argument><expr><name pos:line="102" pos:column="45">err<pos:position pos:line="102" pos:column="48"/></name></expr></argument>, <argument><expr><name pos:line="102" pos:column="50">NULL<pos:position pos:line="102" pos:column="54"/></name></expr></argument>)<pos:position pos:line="102" pos:column="55"/></argument_list></call></expr>;<pos:position pos:line="102" pos:column="56"/></return></block></then></if>
            }<pos:position pos:line="103" pos:column="14"/></block></then></if>
        }<pos:position pos:line="104" pos:column="10"/></block></else></if>
        <if pos:line="105" pos:column="9">if <condition pos:line="105" pos:column="12">(<expr><name pos:line="105" pos:column="13">worker<pos:position pos:line="105" pos:column="19"/></name> <operator pos:line="105" pos:column="20">==<pos:position pos:line="105" pos:column="22"/></operator> <name pos:line="105" pos:column="23">NULL<pos:position pos:line="105" pos:column="27"/></name> <operator pos:line="105" pos:column="28">&amp;&amp;<pos:position pos:line="105" pos:column="38"/></operator> <name pos:line="105" pos:column="31">balancer<pos:position pos:line="105" pos:column="39"/></name> <operator pos:line="105" pos:column="40">==<pos:position pos:line="105" pos:column="42"/></operator> <name pos:line="105" pos:column="43">NULL<pos:position pos:line="105" pos:column="47"/></name></expr>)<pos:position pos:line="105" pos:column="48"/></condition><then pos:line="105" pos:column="48"> <block pos:line="105" pos:column="49">{
            <return pos:line="106" pos:column="13">return <expr><call><name pos:line="106" pos:column="20">apr_pstrcat<pos:position pos:line="106" pos:column="31"/></name><argument_list pos:line="106" pos:column="31">(<argument><expr><name><name pos:line="106" pos:column="32">cmd<pos:position pos:line="106" pos:column="35"/></name><operator pos:line="106" pos:column="35">-&gt;<pos:position pos:line="106" pos:column="40"/></operator><name pos:line="106" pos:column="37">pool<pos:position pos:line="106" pos:column="41"/></name></name></expr></argument>, <argument><expr><name><name pos:line="106" pos:column="43">thiscmd<pos:position pos:line="106" pos:column="50"/></name><operator pos:line="106" pos:column="50">-&gt;<pos:position pos:line="106" pos:column="55"/></operator><name pos:line="106" pos:column="52">name<pos:position pos:line="106" pos:column="56"/></name></name></expr></argument>,
                               <argument><expr><literal type="string" pos:line="107" pos:column="32">"&gt; arguments are supported only for workers."<pos:position pos:line="107" pos:column="80"/></literal></expr></argument>,
                               <argument><expr><name pos:line="108" pos:column="32">NULL<pos:position pos:line="108" pos:column="36"/></name></expr></argument>)<pos:position pos:line="108" pos:column="37"/></argument_list></call></expr>;<pos:position pos:line="108" pos:column="38"/></return>
        }<pos:position pos:line="109" pos:column="10"/></block></then></if>
        <while pos:line="110" pos:column="9">while <condition pos:line="110" pos:column="15">(<expr><operator pos:line="110" pos:column="16">*<pos:position pos:line="110" pos:column="17"/></operator><name pos:line="110" pos:column="17">arg<pos:position pos:line="110" pos:column="20"/></name></expr>)<pos:position pos:line="110" pos:column="21"/></condition> <block pos:line="110" pos:column="22">{
            <expr_stmt><expr><name pos:line="111" pos:column="13">word<pos:position pos:line="111" pos:column="17"/></name> <operator pos:line="111" pos:column="18">=<pos:position pos:line="111" pos:column="19"/></operator> <macro><name pos:line="111" pos:column="20">ap_getword_conf<pos:position pos:line="111" pos:column="35"/></name><argument_list pos:line="111" pos:column="35">(<argument pos:line="111" pos:column="36">c<pos:position pos:line="111" pos:column="37"/></argument></argument_list></macro></expr></expr_stmt></block></while></block></then></if></block></function></unit>

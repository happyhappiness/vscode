<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/httpd/gumtree/httpd_repos_function_2428_httpd-2.0.58.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">apr_rmm_off_t<pos:position pos:line="1" pos:column="21"/></name></type> <name pos:line="1" pos:column="22">find_block_of_size<pos:position pos:line="1" pos:column="40"/></name><parameter_list pos:line="1" pos:column="40">(<parameter><decl><type><name pos:line="1" pos:column="41">apr_rmm_t<pos:position pos:line="1" pos:column="50"/></name> <modifier pos:line="1" pos:column="51">*<pos:position pos:line="1" pos:column="52"/></modifier></type><name pos:line="1" pos:column="52">rmm<pos:position pos:line="1" pos:column="55"/></name></decl></parameter>, <parameter><decl><type><name pos:line="1" pos:column="57">apr_size_t<pos:position pos:line="1" pos:column="67"/></name></type> <name pos:line="1" pos:column="68">size<pos:position pos:line="1" pos:column="72"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="73"/></parameter_list>
<block pos:line="2" pos:column="1">{
    <decl_stmt><decl><type><name pos:line="3" pos:column="5">apr_rmm_off_t<pos:position pos:line="3" pos:column="18"/></name></type> <name pos:line="3" pos:column="19">next<pos:position pos:line="3" pos:column="23"/></name> <init pos:line="3" pos:column="24">= <expr><name><name pos:line="3" pos:column="26">rmm<pos:position pos:line="3" pos:column="29"/></name><operator pos:line="3" pos:column="29">-&gt;<pos:position pos:line="3" pos:column="34"/></operator><name pos:line="3" pos:column="31">base<pos:position pos:line="3" pos:column="35"/></name><operator pos:line="3" pos:column="35">-&gt;<pos:position pos:line="3" pos:column="40"/></operator><name pos:line="3" pos:column="37">firstfree<pos:position pos:line="3" pos:column="46"/></name></name></expr></init></decl>;<pos:position pos:line="3" pos:column="47"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="4" pos:column="5">apr_rmm_off_t<pos:position pos:line="4" pos:column="18"/></name></type> <name pos:line="4" pos:column="19">best<pos:position pos:line="4" pos:column="23"/></name> <init pos:line="4" pos:column="24">= <expr><literal type="number" pos:line="4" pos:column="26">0<pos:position pos:line="4" pos:column="27"/></literal></expr></init></decl>;<pos:position pos:line="4" pos:column="28"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="5" pos:column="5">apr_rmm_off_t<pos:position pos:line="5" pos:column="18"/></name></type> <name pos:line="5" pos:column="19">bestsize<pos:position pos:line="5" pos:column="27"/></name> <init pos:line="5" pos:column="28">= <expr><literal type="number" pos:line="5" pos:column="30">0<pos:position pos:line="5" pos:column="31"/></literal></expr></init></decl>;<pos:position pos:line="5" pos:column="32"/></decl_stmt>

    <while pos:line="7" pos:column="5">while <condition pos:line="7" pos:column="11">(<expr><name pos:line="7" pos:column="12">next<pos:position pos:line="7" pos:column="16"/></name></expr>)<pos:position pos:line="7" pos:column="17"/></condition> <block pos:line="7" pos:column="18">{
        <decl_stmt><decl><type><name><name pos:line="8" pos:column="9">struct<pos:position pos:line="8" pos:column="15"/></name> <name pos:line="8" pos:column="16">rmm_block_t<pos:position pos:line="8" pos:column="27"/></name></name> <modifier pos:line="8" pos:column="28">*<pos:position pos:line="8" pos:column="29"/></modifier></type><name pos:line="8" pos:column="29">blk<pos:position pos:line="8" pos:column="32"/></name> <init pos:line="8" pos:column="33">= <expr><operator pos:line="8" pos:column="35">(<pos:position pos:line="8" pos:column="36"/></operator><name pos:line="8" pos:column="36">rmm_block_t<pos:position pos:line="8" pos:column="47"/></name><operator pos:line="8" pos:column="47">*<pos:position pos:line="8" pos:column="48"/></operator><operator pos:line="8" pos:column="48">)<pos:position pos:line="8" pos:column="49"/></operator><operator pos:line="8" pos:column="49">(<pos:position pos:line="8" pos:column="50"/></operator><operator pos:line="8" pos:column="50">(<pos:position pos:line="8" pos:column="51"/></operator><name pos:line="8" pos:column="51">char<pos:position pos:line="8" pos:column="55"/></name><operator pos:line="8" pos:column="55">*<pos:position pos:line="8" pos:column="56"/></operator><operator pos:line="8" pos:column="56">)<pos:position pos:line="8" pos:column="57"/></operator><name><name pos:line="8" pos:column="57">rmm<pos:position pos:line="8" pos:column="60"/></name><operator pos:line="8" pos:column="60">-&gt;<pos:position pos:line="8" pos:column="65"/></operator><name pos:line="8" pos:column="62">base<pos:position pos:line="8" pos:column="66"/></name></name> <operator pos:line="8" pos:column="67">+<pos:position pos:line="8" pos:column="68"/></operator> <name pos:line="8" pos:column="69">next<pos:position pos:line="8" pos:column="73"/></name><operator pos:line="8" pos:column="73">)<pos:position pos:line="8" pos:column="74"/></operator></expr></init></decl>;<pos:position pos:line="8" pos:column="75"/></decl_stmt>

        <if pos:line="10" pos:column="9">if <condition pos:line="10" pos:column="12">(<expr><name><name pos:line="10" pos:column="13">blk<pos:position pos:line="10" pos:column="16"/></name><operator pos:line="10" pos:column="16">-&gt;<pos:position pos:line="10" pos:column="21"/></operator><name pos:line="10" pos:column="18">size<pos:position pos:line="10" pos:column="22"/></name></name> <operator pos:line="10" pos:column="23">==<pos:position pos:line="10" pos:column="25"/></operator> <name pos:line="10" pos:column="26">size<pos:position pos:line="10" pos:column="30"/></name></expr>)<pos:position pos:line="10" pos:column="31"/></condition><then pos:line="10" pos:column="31">
            <block type="pseudo"><return pos:line="11" pos:column="13">return <expr><name pos:line="11" pos:column="20">next<pos:position pos:line="11" pos:column="24"/></name></expr>;<pos:position pos:line="11" pos:column="25"/></return></block></then></if>

        <if pos:line="13" pos:column="9">if <condition pos:line="13" pos:column="12">(<expr><name><name pos:line="13" pos:column="13">blk<pos:position pos:line="13" pos:column="16"/></name><operator pos:line="13" pos:column="16">-&gt;<pos:position pos:line="13" pos:column="21"/></operator><name pos:line="13" pos:column="18">size<pos:position pos:line="13" pos:column="22"/></name></name> <operator pos:line="13" pos:column="23">&gt;=<pos:position pos:line="13" pos:column="28"/></operator> <name pos:line="13" pos:column="26">size<pos:position pos:line="13" pos:column="30"/></name></expr>)<pos:position pos:line="13" pos:column="31"/></condition><then pos:line="13" pos:column="31"> <block pos:line="13" pos:column="32">{
            <comment type="block" pos:line="14" pos:column="13">/* XXX: sub optimal algorithm 
             * We need the most thorough best-fit logic, since we can
             * never grow our rmm, we are SOL when we hit the wall.
             */</comment>
            <if pos:line="18" pos:column="13">if <condition pos:line="18" pos:column="16">(<expr><operator pos:line="18" pos:column="17">!<pos:position pos:line="18" pos:column="18"/></operator><name pos:line="18" pos:column="18">bestsize<pos:position pos:line="18" pos:column="26"/></name> <operator pos:line="18" pos:column="27">||<pos:position pos:line="18" pos:column="29"/></operator> <operator pos:line="18" pos:column="30">(<pos:position pos:line="18" pos:column="31"/></operator><name><name pos:line="18" pos:column="31">blk<pos:position pos:line="18" pos:column="34"/></name><operator pos:line="18" pos:column="34">-&gt;<pos:position pos:line="18" pos:column="39"/></operator><name pos:line="18" pos:column="36">size<pos:position pos:line="18" pos:column="40"/></name></name> <operator pos:line="18" pos:column="41">&lt;<pos:position pos:line="18" pos:column="45"/></operator> <name pos:line="18" pos:column="43">bestsize<pos:position pos:line="18" pos:column="51"/></name><operator pos:line="18" pos:column="51">)<pos:position pos:line="18" pos:column="52"/></operator></expr>)<pos:position pos:line="18" pos:column="53"/></condition><then pos:line="18" pos:column="53"> <block pos:line="18" pos:column="54">{
                <expr_stmt><expr><name pos:line="19" pos:column="17">bestsize<pos:position pos:line="19" pos:column="25"/></name> <operator pos:line="19" pos:column="26">=<pos:position pos:line="19" pos:column="27"/></operator> <name><name pos:line="19" pos:column="28">blk<pos:position pos:line="19" pos:column="31"/></name><operator pos:line="19" pos:column="31">-&gt;<pos:position pos:line="19" pos:column="36"/></operator><name pos:line="19" pos:column="33">size<pos:position pos:line="19" pos:column="37"/></name></name></expr>;<pos:position pos:line="19" pos:column="38"/></expr_stmt>
                <expr_stmt><expr><name pos:line="20" pos:column="17">best<pos:position pos:line="20" pos:column="21"/></name> <operator pos:line="20" pos:column="22">=<pos:position pos:line="20" pos:column="23"/></operator> <name pos:line="20" pos:column="24">next<pos:position pos:line="20" pos:column="28"/></name></expr>;<pos:position pos:line="20" pos:column="29"/></expr_stmt>
            }<pos:position pos:line="21" pos:column="14"/></block></then></if>
        }<pos:position pos:line="22" pos:column="10"/></block></then></if>

        <expr_stmt><expr><name pos:line="24" pos:column="9">next<pos:position pos:line="24" pos:column="13"/></name> <operator pos:line="24" pos:column="14">=<pos:position pos:line="24" pos:column="15"/></operator> <name><name pos:line="24" pos:column="16">blk<pos:position pos:line="24" pos:column="19"/></name><operator pos:line="24" pos:column="19">-&gt;<pos:position pos:line="24" pos:column="24"/></operator><name pos:line="24" pos:column="21">next<pos:position pos:line="24" pos:column="25"/></name></name></expr>;<pos:position pos:line="24" pos:column="26"/></expr_stmt>
    }<pos:position pos:line="25" pos:column="6"/></block></while>

    <if pos:line="27" pos:column="5">if <condition pos:line="27" pos:column="8">(<expr><name pos:line="27" pos:column="9">bestsize<pos:position pos:line="27" pos:column="17"/></name> <operator pos:line="27" pos:column="18">&gt;<pos:position pos:line="27" pos:column="22"/></operator> <name pos:line="27" pos:column="20">RMM_BLOCK_SIZE<pos:position pos:line="27" pos:column="34"/></name> <operator pos:line="27" pos:column="35">+<pos:position pos:line="27" pos:column="36"/></operator> <name pos:line="27" pos:column="37">size<pos:position pos:line="27" pos:column="41"/></name></expr>)<pos:position pos:line="27" pos:column="42"/></condition><then pos:line="27" pos:column="42"> <block pos:line="27" pos:column="43">{
        <decl_stmt><decl><type><name><name pos:line="28" pos:column="9">struct<pos:position pos:line="28" pos:column="15"/></name> <name pos:line="28" pos:column="16">rmm_block_t<pos:position pos:line="28" pos:column="27"/></name></name> <modifier pos:line="28" pos:column="28">*<pos:position pos:line="28" pos:column="29"/></modifier></type><name pos:line="28" pos:column="29">blk<pos:position pos:line="28" pos:column="32"/></name> <init pos:line="28" pos:column="33">= <expr><operator pos:line="28" pos:column="35">(<pos:position pos:line="28" pos:column="36"/></operator><name pos:line="28" pos:column="36">rmm_block_t<pos:position pos:line="28" pos:column="47"/></name><operator pos:line="28" pos:column="47">*<pos:position pos:line="28" pos:column="48"/></operator><operator pos:line="28" pos:column="48">)<pos:position pos:line="28" pos:column="49"/></operator><operator pos:line="28" pos:column="49">(<pos:position pos:line="28" pos:column="50"/></operator><operator pos:line="28" pos:column="50">(<pos:position pos:line="28" pos:column="51"/></operator><name pos:line="28" pos:column="51">char<pos:position pos:line="28" pos:column="55"/></name><operator pos:line="28" pos:column="55">*<pos:position pos:line="28" pos:column="56"/></operator><operator pos:line="28" pos:column="56">)<pos:position pos:line="28" pos:column="57"/></operator><name><name pos:line="28" pos:column="57">rmm<pos:position pos:line="28" pos:column="60"/></name><operator pos:line="28" pos:column="60">-&gt;<pos:position pos:line="28" pos:column="65"/></operator><name pos:line="28" pos:column="62">base<pos:position pos:line="28" pos:column="66"/></name></name> <operator pos:line="28" pos:column="67">+<pos:position pos:line="28" pos:column="68"/></operator> <name pos:line="28" pos:column="69">best<pos:position pos:line="28" pos:column="73"/></name><operator pos:line="28" pos:column="73">)<pos:position pos:line="28" pos:column="74"/></operator></expr></init></decl>;<pos:position pos:line="28" pos:column="75"/></decl_stmt>
        struct <expr_stmt><expr><name pos:line="29" pos:column="16">rmm_block_t<pos:position pos:line="29" pos:column="27"/></name> <operator pos:line="29" pos:column="28">*<pos:position pos:line="29" pos:column="29"/></operator><operator pos:line="29" pos:column="29">new<pos:position pos:line="29" pos:column="32"/></operator> <operator pos:line="29" pos:column="33">=<pos:position pos:line="29" pos:column="34"/></operator> <operator pos:line="29" pos:column="35">(<pos:position pos:line="29" pos:column="36"/></operator><name pos:line="29" pos:column="36">rmm_block_t<pos:position pos:line="29" pos:column="47"/></name><operator pos:line="29" pos:column="47">*<pos:position pos:line="29" pos:column="48"/></operator><operator pos:line="29" pos:column="48">)<pos:position pos:line="29" pos:column="49"/></operator><operator pos:line="29" pos:column="49">(<pos:position pos:line="29" pos:column="50"/></operator><operator pos:line="29" pos:column="50">(<pos:position pos:line="29" pos:column="51"/></operator><name pos:line="29" pos:column="51">char<pos:position pos:line="29" pos:column="55"/></name><operator pos:line="29" pos:column="55">*<pos:position pos:line="29" pos:column="56"/></operator><operator pos:line="29" pos:column="56">)<pos:position pos:line="29" pos:column="57"/></operator><name><name pos:line="29" pos:column="57">rmm<pos:position pos:line="29" pos:column="60"/></name><operator pos:line="29" pos:column="60">-&gt;<pos:position pos:line="29" pos:column="65"/></operator><name pos:line="29" pos:column="62">base<pos:position pos:line="29" pos:column="66"/></name></name> <operator pos:line="29" pos:column="67">+<pos:position pos:line="29" pos:column="68"/></operator> <name pos:line="29" pos:column="69">best<pos:position pos:line="29" pos:column="73"/></name> <operator pos:line="29" pos:column="74">+<pos:position pos:line="29" pos:column="75"/></operator> <name pos:line="29" pos:column="76">size<pos:position pos:line="29" pos:column="80"/></name><operator pos:line="29" pos:column="80">)<pos:position pos:line="29" pos:column="81"/></operator></expr>;<pos:position pos:line="29" pos:column="82"/></expr_stmt>

        <expr_stmt><expr><operator pos:line="31" pos:column="9">new<pos:position pos:line="31" pos:column="12"/></operator><operator pos:line="31" pos:column="12">-&gt;<pos:position pos:line="31" pos:column="17"/></operator><name pos:line="31" pos:column="14">size<pos:position pos:line="31" pos:column="18"/></name> <operator pos:line="31" pos:column="19">=<pos:position pos:line="31" pos:column="20"/></operator> <name><name pos:line="31" pos:column="21">blk<pos:position pos:line="31" pos:column="24"/></name><operator pos:line="31" pos:column="24">-&gt;<pos:position pos:line="31" pos:column="29"/></operator><name pos:line="31" pos:column="26">size<pos:position pos:line="31" pos:column="30"/></name></name> <operator pos:line="31" pos:column="31">-<pos:position pos:line="31" pos:column="32"/></operator> <name pos:line="31" pos:column="33">size<pos:position pos:line="31" pos:column="37"/></name></expr>;<pos:position pos:line="31" pos:column="38"/></expr_stmt>
        <expr_stmt><expr><operator pos:line="32" pos:column="9">new<pos:position pos:line="32" pos:column="12"/></operator><operator pos:line="32" pos:column="12">-&gt;<pos:position pos:line="32" pos:column="17"/></operator><name pos:line="32" pos:column="14">next<pos:position pos:line="32" pos:column="18"/></name> <operator pos:line="32" pos:column="19">=<pos:position pos:line="32" pos:column="20"/></operator> <name><name pos:line="32" pos:column="21">blk<pos:position pos:line="32" pos:column="24"/></name><operator pos:line="32" pos:column="24">-&gt;<pos:position pos:line="32" pos:column="29"/></operator><name pos:line="32" pos:column="26">next<pos:position pos:line="32" pos:column="30"/></name></name></expr>;<pos:position pos:line="32" pos:column="31"/></expr_stmt>
        <expr_stmt><expr><operator pos:line="33" pos:column="9">new<pos:position pos:line="33" pos:column="12"/></operator><operator pos:line="33" pos:column="12">-&gt;<pos:position pos:line="33" pos:column="17"/></operator><name pos:line="33" pos:column="14">prev<pos:position pos:line="33" pos:column="18"/></name> <operator pos:line="33" pos:column="19">=<pos:position pos:line="33" pos:column="20"/></operator> <name pos:line="33" pos:column="21">best<pos:position pos:line="33" pos:column="25"/></name></expr>;<pos:position pos:line="33" pos:column="26"/></expr_stmt>

        <expr_stmt><expr><name><name pos:line="35" pos:column="9">blk<pos:position pos:line="35" pos:column="12"/></name><operator pos:line="35" pos:column="12">-&gt;<pos:position pos:line="35" pos:column="17"/></operator><name pos:line="35" pos:column="14">size<pos:position pos:line="35" pos:column="18"/></name></name> <operator pos:line="35" pos:column="19">=<pos:position pos:line="35" pos:column="20"/></operator> <name pos:line="35" pos:column="21">size<pos:position pos:line="35" pos:column="25"/></name></expr>;<pos:position pos:line="35" pos:column="26"/></expr_stmt>
        <expr_stmt><expr><name><name pos:line="36" pos:column="9">blk<pos:position pos:line="36" pos:column="12"/></name><operator pos:line="36" pos:column="12">-&gt;<pos:position pos:line="36" pos:column="17"/></operator><name pos:line="36" pos:column="14">next<pos:position pos:line="36" pos:column="18"/></name></name> <operator pos:line="36" pos:column="19">=<pos:position pos:line="36" pos:column="20"/></operator> <name pos:line="36" pos:column="21">best<pos:position pos:line="36" pos:column="25"/></name> <operator pos:line="36" pos:column="26">+<pos:position pos:line="36" pos:column="27"/></operator> <name pos:line="36" pos:column="28">size<pos:position pos:line="36" pos:column="32"/></name></expr>;<pos:position pos:line="36" pos:column="33"/></expr_stmt>

        <if pos:line="38" pos:column="9">if <condition pos:line="38" pos:column="12">(<expr><operator pos:line="38" pos:column="13">new<pos:position pos:line="38" pos:column="16"/></operator><operator pos:line="38" pos:column="16">-&gt;<pos:position pos:line="38" pos:column="21"/></operator><name pos:line="38" pos:column="18">next<pos:position pos:line="38" pos:column="22"/></name></expr>)<pos:position pos:line="38" pos:column="23"/></condition><then pos:line="38" pos:column="23"> <block pos:line="38" pos:column="24">{
            <expr_stmt><expr><name pos:line="39" pos:column="13">blk<pos:position pos:line="39" pos:column="16"/></name> <operator pos:line="39" pos:column="17">=<pos:position pos:line="39" pos:column="18"/></operator> <operator pos:line="39" pos:column="19">(<pos:position pos:line="39" pos:column="20"/></operator><name pos:line="39" pos:column="20">rmm_block_t<pos:position pos:line="39" pos:column="31"/></name><operator pos:line="39" pos:column="31">*<pos:position pos:line="39" pos:column="32"/></operator><operator pos:line="39" pos:column="32">)<pos:position pos:line="39" pos:column="33"/></operator><operator pos:line="39" pos:column="33">(<pos:position pos:line="39" pos:column="34"/></operator><operator pos:line="39" pos:column="34">(<pos:position pos:line="39" pos:column="35"/></operator><name pos:line="39" pos:column="35">char<pos:position pos:line="39" pos:column="39"/></name><operator pos:line="39" pos:column="39">*<pos:position pos:line="39" pos:column="40"/></operator><operator pos:line="39" pos:column="40">)<pos:position pos:line="39" pos:column="41"/></operator><name><name pos:line="39" pos:column="41">rmm<pos:position pos:line="39" pos:column="44"/></name><operator pos:line="39" pos:column="44">-&gt;<pos:position pos:line="39" pos:column="49"/></operator><name pos:line="39" pos:column="46">base<pos:position pos:line="39" pos:column="50"/></name></name> <operator pos:line="39" pos:column="51">+<pos:position pos:line="39" pos:column="52"/></operator> <operator pos:line="39" pos:column="53">new<pos:position pos:line="39" pos:column="56"/></operator><operator pos:line="39" pos:column="56">-&gt;<pos:position pos:line="39" pos:column="61"/></operator><name pos:line="39" pos:column="58">next<pos:position pos:line="39" pos:column="62"/></name><operator pos:line="39" pos:column="62">)<pos:position pos:line="39" pos:column="63"/></operator></expr>;<pos:position pos:line="39" pos:column="64"/></expr_stmt>
            <expr_stmt><expr><name><name pos:line="40" pos:column="13">blk<pos:position pos:line="40" pos:column="16"/></name><operator pos:line="40" pos:column="16">-&gt;<pos:position pos:line="40" pos:column="21"/></operator><name pos:line="40" pos:column="18">prev<pos:position pos:line="40" pos:column="22"/></name></name> <operator pos:line="40" pos:column="23">=<pos:position pos:line="40" pos:column="24"/></operator> <name pos:line="40" pos:column="25">best<pos:position pos:line="40" pos:column="29"/></name> <operator pos:line="40" pos:column="30">+<pos:position pos:line="40" pos:column="31"/></operator> <name pos:line="40" pos:column="32">size<pos:position pos:line="40" pos:column="36"/></name></expr>;<pos:position pos:line="40" pos:column="37"/></expr_stmt>
        }<pos:position pos:line="41" pos:column="10"/></block></then></if>
    }<pos:position pos:line="42" pos:column="6"/></block></then></if>

    <return pos:line="44" pos:column="5">return <expr><name pos:line="44" pos:column="12">best<pos:position pos:line="44" pos:column="16"/></name></expr>;<pos:position pos:line="44" pos:column="17"/></return>
}<pos:position pos:line="45" pos:column="2"/></block></function></unit>

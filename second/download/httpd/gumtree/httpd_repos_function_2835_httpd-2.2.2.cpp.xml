<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/httpd/gumtree/httpd_repos_function_2835_httpd-2.2.2.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier>
<type><name pos:line="2" pos:column="1">int<pos:position pos:line="2" pos:column="4"/></name></type> <name pos:line="2" pos:column="5">unknown_isInvalid<pos:position pos:line="2" pos:column="22"/></name><parameter_list pos:line="2" pos:column="22">(<parameter><decl><type><specifier pos:line="2" pos:column="23">const<pos:position pos:line="2" pos:column="28"/></specifier> <name pos:line="2" pos:column="29">ENCODING<pos:position pos:line="2" pos:column="37"/></name> <modifier pos:line="2" pos:column="38">*<pos:position pos:line="2" pos:column="39"/></modifier></type><name pos:line="2" pos:column="39">enc<pos:position pos:line="2" pos:column="42"/></name></decl></parameter>, <parameter><decl><type><specifier pos:line="2" pos:column="44">const<pos:position pos:line="2" pos:column="49"/></specifier> <name pos:line="2" pos:column="50">char<pos:position pos:line="2" pos:column="54"/></name> <modifier pos:line="2" pos:column="55">*<pos:position pos:line="2" pos:column="56"/></modifier></type><name pos:line="2" pos:column="56">p<pos:position pos:line="2" pos:column="57"/></name></decl></parameter>)<pos:position pos:line="2" pos:column="58"/></parameter_list>
<block pos:line="3" pos:column="1">{
  <decl_stmt><decl><type><name pos:line="4" pos:column="3">int<pos:position pos:line="4" pos:column="6"/></name></type> <name pos:line="4" pos:column="7">c<pos:position pos:line="4" pos:column="8"/></name> <init pos:line="4" pos:column="9">= <expr><operator pos:line="4" pos:column="11">(<pos:position pos:line="4" pos:column="12"/></operator><operator pos:line="4" pos:column="12">(<pos:position pos:line="4" pos:column="13"/></operator><specifier pos:line="4" pos:column="13">const<pos:position pos:line="4" pos:column="18"/></specifier> struct <name pos:line="4" pos:column="26">unknown_encoding<pos:position pos:line="4" pos:column="42"/></name> <operator pos:line="4" pos:column="43">*<pos:position pos:line="4" pos:column="44"/></operator><operator pos:line="4" pos:column="44">)<pos:position pos:line="4" pos:column="45"/></operator><name pos:line="4" pos:column="45">enc<pos:position pos:line="4" pos:column="48"/></name><operator pos:line="4" pos:column="48">)<pos:position pos:line="4" pos:column="49"/></operator>
	   <operator pos:line="5" pos:column="12">-&gt;<pos:position pos:line="5" pos:column="17"/></operator><call><name pos:line="5" pos:column="14">convert<pos:position pos:line="5" pos:column="21"/></name><argument_list pos:line="5" pos:column="21">(<argument><expr><operator pos:line="5" pos:column="22">(<pos:position pos:line="5" pos:column="23"/></operator><operator pos:line="5" pos:column="23">(<pos:position pos:line="5" pos:column="24"/></operator><specifier pos:line="5" pos:column="24">const<pos:position pos:line="5" pos:column="29"/></specifier> struct <name pos:line="5" pos:column="37">unknown_encoding<pos:position pos:line="5" pos:column="53"/></name> <operator pos:line="5" pos:column="54">*<pos:position pos:line="5" pos:column="55"/></operator><operator pos:line="5" pos:column="55">)<pos:position pos:line="5" pos:column="56"/></operator><name pos:line="5" pos:column="56">enc<pos:position pos:line="5" pos:column="59"/></name><operator pos:line="5" pos:column="59">)<pos:position pos:line="5" pos:column="60"/></operator><operator pos:line="5" pos:column="60">-&gt;<pos:position pos:line="5" pos:column="65"/></operator><name pos:line="5" pos:column="62">userData<pos:position pos:line="5" pos:column="70"/></name></expr></argument>, <argument><expr><name pos:line="5" pos:column="72">p<pos:position pos:line="5" pos:column="73"/></name></expr></argument>)<pos:position pos:line="5" pos:column="74"/></argument_list></call></expr></init></decl>;<pos:position pos:line="5" pos:column="75"/></decl_stmt>
  <return pos:line="6" pos:column="3">return <expr><operator pos:line="6" pos:column="10">(<pos:position pos:line="6" pos:column="11"/></operator><name pos:line="6" pos:column="11">c<pos:position pos:line="6" pos:column="12"/></name> <operator pos:line="6" pos:column="13">&amp;<pos:position pos:line="6" pos:column="18"/></operator> <operator pos:line="6" pos:column="15">~<pos:position pos:line="6" pos:column="16"/></operator><literal type="number" pos:line="6" pos:column="16">0xFFFF<pos:position pos:line="6" pos:column="22"/></literal><operator pos:line="6" pos:column="22">)<pos:position pos:line="6" pos:column="23"/></operator> <operator pos:line="6" pos:column="24">||<pos:position pos:line="6" pos:column="26"/></operator> <call><name pos:line="6" pos:column="27">checkCharRefNumber<pos:position pos:line="6" pos:column="45"/></name><argument_list pos:line="6" pos:column="45">(<argument><expr><name pos:line="6" pos:column="46">c<pos:position pos:line="6" pos:column="47"/></name></expr></argument>)<pos:position pos:line="6" pos:column="48"/></argument_list></call> <operator pos:line="6" pos:column="49">&lt;<pos:position pos:line="6" pos:column="53"/></operator> <literal type="number" pos:line="6" pos:column="51">0<pos:position pos:line="6" pos:column="52"/></literal></expr>;<pos:position pos:line="6" pos:column="53"/></return>
}<pos:position pos:line="7" pos:column="2"/></block></function></unit>

<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/httpd/gumtree/httpd_repos_function_2139_httpd-2.2.8.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><specifier pos:line="1" pos:column="8">const<pos:position pos:line="1" pos:column="13"/></specifier> <name pos:line="1" pos:column="14">char<pos:position pos:line="1" pos:column="18"/></name> <modifier pos:line="1" pos:column="19">*<pos:position pos:line="1" pos:column="20"/></modifier></type><name pos:line="1" pos:column="20">server_hostname_port<pos:position pos:line="1" pos:column="40"/></name><parameter_list pos:line="1" pos:column="40">(<parameter><decl><type><name pos:line="1" pos:column="41">cmd_parms<pos:position pos:line="1" pos:column="50"/></name> <modifier pos:line="1" pos:column="51">*<pos:position pos:line="1" pos:column="52"/></modifier></type><name pos:line="1" pos:column="52">cmd<pos:position pos:line="1" pos:column="55"/></name></decl></parameter>, <parameter><decl><type><name pos:line="1" pos:column="57">void<pos:position pos:line="1" pos:column="61"/></name> <modifier pos:line="1" pos:column="62">*<pos:position pos:line="1" pos:column="63"/></modifier></type><name pos:line="1" pos:column="63">dummy<pos:position pos:line="1" pos:column="68"/></name></decl></parameter>, <parameter><decl><type><specifier pos:line="1" pos:column="70">const<pos:position pos:line="1" pos:column="75"/></specifier> <name pos:line="1" pos:column="76">char<pos:position pos:line="1" pos:column="80"/></name> <modifier pos:line="1" pos:column="81">*<pos:position pos:line="1" pos:column="82"/></modifier></type><name pos:line="1" pos:column="82">arg<pos:position pos:line="1" pos:column="85"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="86"/></parameter_list>
<block pos:line="2" pos:column="1">{
    <decl_stmt><decl><type><specifier pos:line="3" pos:column="5">const<pos:position pos:line="3" pos:column="10"/></specifier> <name pos:line="3" pos:column="11">char<pos:position pos:line="3" pos:column="15"/></name> <modifier pos:line="3" pos:column="16">*<pos:position pos:line="3" pos:column="17"/></modifier></type><name pos:line="3" pos:column="17">err<pos:position pos:line="3" pos:column="20"/></name> <init pos:line="3" pos:column="21">= <expr><call><name pos:line="3" pos:column="23">ap_check_cmd_context<pos:position pos:line="3" pos:column="43"/></name><argument_list pos:line="3" pos:column="43">(<argument><expr><name pos:line="3" pos:column="44">cmd<pos:position pos:line="3" pos:column="47"/></name></expr></argument>, <argument><expr><name pos:line="3" pos:column="49">NOT_IN_DIR_LOC_FILE<pos:position pos:line="3" pos:column="68"/></name><operator pos:line="3" pos:column="68">|<pos:position pos:line="3" pos:column="69"/></operator><name pos:line="3" pos:column="69">NOT_IN_LIMIT<pos:position pos:line="3" pos:column="81"/></name></expr></argument>)<pos:position pos:line="3" pos:column="82"/></argument_list></call></expr></init></decl>;<pos:position pos:line="3" pos:column="83"/></decl_stmt>
    <decl_stmt><decl><type><specifier pos:line="4" pos:column="5">const<pos:position pos:line="4" pos:column="10"/></specifier> <name pos:line="4" pos:column="11">char<pos:position pos:line="4" pos:column="15"/></name> <modifier pos:line="4" pos:column="16">*<pos:position pos:line="4" pos:column="17"/></modifier></type><name pos:line="4" pos:column="17">portstr<pos:position pos:line="4" pos:column="24"/></name></decl>, <modifier pos:line="4" pos:column="26">*<pos:position pos:line="4" pos:column="27"/></modifier><decl><type ref="prev"/><name pos:line="4" pos:column="27">part<pos:position pos:line="4" pos:column="31"/></name></decl>;<pos:position pos:line="4" pos:column="32"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="5" pos:column="5">char<pos:position pos:line="5" pos:column="9"/></name> <modifier pos:line="5" pos:column="10">*<pos:position pos:line="5" pos:column="11"/></modifier></type><name pos:line="5" pos:column="11">scheme<pos:position pos:line="5" pos:column="17"/></name></decl>;<pos:position pos:line="5" pos:column="18"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="6" pos:column="5">int<pos:position pos:line="6" pos:column="8"/></name></type> <name pos:line="6" pos:column="9">port<pos:position pos:line="6" pos:column="13"/></name></decl>;<pos:position pos:line="6" pos:column="14"/></decl_stmt>

    <if pos:line="8" pos:column="5">if <condition pos:line="8" pos:column="8">(<expr><name pos:line="8" pos:column="9">err<pos:position pos:line="8" pos:column="12"/></name> <operator pos:line="8" pos:column="13">!=<pos:position pos:line="8" pos:column="15"/></operator> <name pos:line="8" pos:column="16">NULL<pos:position pos:line="8" pos:column="20"/></name></expr>)<pos:position pos:line="8" pos:column="21"/></condition><then pos:line="8" pos:column="21"> <block pos:line="8" pos:column="22">{
        <return pos:line="9" pos:column="9">return <expr><name pos:line="9" pos:column="16">err<pos:position pos:line="9" pos:column="19"/></name></expr>;<pos:position pos:line="9" pos:column="20"/></return>
    }<pos:position pos:line="10" pos:column="6"/></block></then></if>

    <expr_stmt><expr><name pos:line="12" pos:column="5">part<pos:position pos:line="12" pos:column="9"/></name> <operator pos:line="12" pos:column="10">=<pos:position pos:line="12" pos:column="11"/></operator> <call><name pos:line="12" pos:column="12">ap_strstr_c<pos:position pos:line="12" pos:column="23"/></name><argument_list pos:line="12" pos:column="23">(<argument><expr><name pos:line="12" pos:column="24">arg<pos:position pos:line="12" pos:column="27"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="12" pos:column="29">"://"<pos:position pos:line="12" pos:column="34"/></literal></expr></argument>)<pos:position pos:line="12" pos:column="35"/></argument_list></call></expr>;<pos:position pos:line="12" pos:column="36"/></expr_stmt>

    <if pos:line="14" pos:column="5">if <condition pos:line="14" pos:column="8">(<expr><name pos:line="14" pos:column="9">part<pos:position pos:line="14" pos:column="13"/></name></expr>)<pos:position pos:line="14" pos:column="14"/></condition><then pos:line="14" pos:column="14"> <block pos:line="14" pos:column="15">{
      <expr_stmt><expr><name pos:line="15" pos:column="7">scheme<pos:position pos:line="15" pos:column="13"/></name> <operator pos:line="15" pos:column="14">=<pos:position pos:line="15" pos:column="15"/></operator> <call><name pos:line="15" pos:column="16">apr_pstrmemdup<pos:position pos:line="15" pos:column="30"/></name><argument_list pos:line="15" pos:column="30">(<argument><expr><name><name pos:line="15" pos:column="31">cmd<pos:position pos:line="15" pos:column="34"/></name><operator pos:line="15" pos:column="34">-&gt;<pos:position pos:line="15" pos:column="39"/></operator><name pos:line="15" pos:column="36">pool<pos:position pos:line="15" pos:column="40"/></name></name></expr></argument>, <argument><expr><name pos:line="15" pos:column="42">arg<pos:position pos:line="15" pos:column="45"/></name></expr></argument>, <argument><expr><name pos:line="15" pos:column="47">part<pos:position pos:line="15" pos:column="51"/></name> <operator pos:line="15" pos:column="52">-<pos:position pos:line="15" pos:column="53"/></operator> <name pos:line="15" pos:column="54">arg<pos:position pos:line="15" pos:column="57"/></name></expr></argument>)<pos:position pos:line="15" pos:column="58"/></argument_list></call></expr>;<pos:position pos:line="15" pos:column="59"/></expr_stmt>
      <expr_stmt><expr><call><name pos:line="16" pos:column="7">ap_str_tolower<pos:position pos:line="16" pos:column="21"/></name><argument_list pos:line="16" pos:column="21">(<argument><expr><name pos:line="16" pos:column="22">scheme<pos:position pos:line="16" pos:column="28"/></name></expr></argument>)<pos:position pos:line="16" pos:column="29"/></argument_list></call></expr>;<pos:position pos:line="16" pos:column="30"/></expr_stmt>
      <expr_stmt><expr><name><name pos:line="17" pos:column="7">cmd<pos:position pos:line="17" pos:column="10"/></name><operator pos:line="17" pos:column="10">-&gt;<pos:position pos:line="17" pos:column="15"/></operator><name pos:line="17" pos:column="12">server<pos:position pos:line="17" pos:column="18"/></name><operator pos:line="17" pos:column="18">-&gt;<pos:position pos:line="17" pos:column="23"/></operator><name pos:line="17" pos:column="20">server_scheme<pos:position pos:line="17" pos:column="33"/></name></name> <operator pos:line="17" pos:column="34">=<pos:position pos:line="17" pos:column="35"/></operator> <name pos:line="17" pos:column="36">scheme<pos:position pos:line="17" pos:column="42"/></name></expr>;<pos:position pos:line="17" pos:column="43"/></expr_stmt>
      <expr_stmt><expr><name pos:line="18" pos:column="7">part<pos:position pos:line="18" pos:column="11"/></name> <operator pos:line="18" pos:column="12">+=<pos:position pos:line="18" pos:column="14"/></operator> <literal type="number" pos:line="18" pos:column="15">3<pos:position pos:line="18" pos:column="16"/></literal></expr>;<pos:position pos:line="18" pos:column="17"/></expr_stmt>
    }<pos:position pos:line="19" pos:column="6"/></block></then> <else pos:line="19" pos:column="7">else <block pos:line="19" pos:column="12">{
      <expr_stmt><expr><name pos:line="20" pos:column="7">part<pos:position pos:line="20" pos:column="11"/></name> <operator pos:line="20" pos:column="12">=<pos:position pos:line="20" pos:column="13"/></operator> <name pos:line="20" pos:column="14">arg<pos:position pos:line="20" pos:column="17"/></name></expr>;<pos:position pos:line="20" pos:column="18"/></expr_stmt>
    }<pos:position pos:line="21" pos:column="6"/></block></else></if>

    <expr_stmt><expr><name pos:line="23" pos:column="5">portstr<pos:position pos:line="23" pos:column="12"/></name> <operator pos:line="23" pos:column="13">=<pos:position pos:line="23" pos:column="14"/></operator> <call><name pos:line="23" pos:column="15">ap_strchr_c<pos:position pos:line="23" pos:column="26"/></name><argument_list pos:line="23" pos:column="26">(<argument><expr><name pos:line="23" pos:column="27">part<pos:position pos:line="23" pos:column="31"/></name></expr></argument>, <argument><expr><literal type="char" pos:line="23" pos:column="33">':'<pos:position pos:line="23" pos:column="36"/></literal></expr></argument>)<pos:position pos:line="23" pos:column="37"/></argument_list></call></expr>;<pos:position pos:line="23" pos:column="38"/></expr_stmt>
    <if pos:line="24" pos:column="5">if <condition pos:line="24" pos:column="8">(<expr><name pos:line="24" pos:column="9">portstr<pos:position pos:line="24" pos:column="16"/></name></expr>)<pos:position pos:line="24" pos:column="17"/></condition><then pos:line="24" pos:column="17"> <block pos:line="24" pos:column="18">{
        <expr_stmt><expr><name><name pos:line="25" pos:column="9">cmd<pos:position pos:line="25" pos:column="12"/></name><operator pos:line="25" pos:column="12">-&gt;<pos:position pos:line="25" pos:column="17"/></operator><name pos:line="25" pos:column="14">server<pos:position pos:line="25" pos:column="20"/></name><operator pos:line="25" pos:column="20">-&gt;<pos:position pos:line="25" pos:column="25"/></operator><name pos:line="25" pos:column="22">server_hostname<pos:position pos:line="25" pos:column="37"/></name></name> <operator pos:line="25" pos:column="38">=<pos:position pos:line="25" pos:column="39"/></operator> <call><name pos:line="25" pos:column="40">apr_pstrmemdup<pos:position pos:line="25" pos:column="54"/></name><argument_list pos:line="25" pos:column="54">(<argument><expr><name><name pos:line="25" pos:column="55">cmd<pos:position pos:line="25" pos:column="58"/></name><operator pos:line="25" pos:column="58">-&gt;<pos:position pos:line="25" pos:column="63"/></operator><name pos:line="25" pos:column="60">pool<pos:position pos:line="25" pos:column="64"/></name></name></expr></argument>, <argument><expr><name pos:line="25" pos:column="66">part<pos:position pos:line="25" pos:column="70"/></name></expr></argument>,
                                                      <argument><expr><name pos:line="26" pos:column="55">portstr<pos:position pos:line="26" pos:column="62"/></name> <operator pos:line="26" pos:column="63">-<pos:position pos:line="26" pos:column="64"/></operator> <name pos:line="26" pos:column="65">part<pos:position pos:line="26" pos:column="69"/></name></expr></argument>)<pos:position pos:line="26" pos:column="70"/></argument_list></call></expr>;<pos:position pos:line="26" pos:column="71"/></expr_stmt>
        <expr_stmt><expr><name pos:line="27" pos:column="9">portstr<pos:position pos:line="27" pos:column="16"/></name><operator pos:line="27" pos:column="16">++<pos:position pos:line="27" pos:column="18"/></operator></expr>;<pos:position pos:line="27" pos:column="19"/></expr_stmt>
        <expr_stmt><expr><name pos:line="28" pos:column="9">port<pos:position pos:line="28" pos:column="13"/></name> <operator pos:line="28" pos:column="14">=<pos:position pos:line="28" pos:column="15"/></operator> <call><name pos:line="28" pos:column="16">atoi<pos:position pos:line="28" pos:column="20"/></name><argument_list pos:line="28" pos:column="20">(<argument><expr><name pos:line="28" pos:column="21">portstr<pos:position pos:line="28" pos:column="28"/></name></expr></argument>)<pos:position pos:line="28" pos:column="29"/></argument_list></call></expr>;<pos:position pos:line="28" pos:column="30"/></expr_stmt>
        <if pos:line="29" pos:column="9">if <condition pos:line="29" pos:column="12">(<expr><name pos:line="29" pos:column="13">port<pos:position pos:line="29" pos:column="17"/></name> <operator pos:line="29" pos:column="18">&lt;=<pos:position pos:line="29" pos:column="23"/></operator> <literal type="number" pos:line="29" pos:column="21">0<pos:position pos:line="29" pos:column="22"/></literal> <operator pos:line="29" pos:column="23">||<pos:position pos:line="29" pos:column="25"/></operator> <name pos:line="29" pos:column="26">port<pos:position pos:line="29" pos:column="30"/></name> <operator pos:line="29" pos:column="31">&gt;=<pos:position pos:line="29" pos:column="36"/></operator> <literal type="number" pos:line="29" pos:column="34">65536<pos:position pos:line="29" pos:column="39"/></literal></expr>)<pos:position pos:line="29" pos:column="40"/></condition><then pos:line="29" pos:column="40"> <block pos:line="29" pos:column="41">{ <comment type="block" pos:line="29" pos:column="43">/* 65536 == 1&lt;&lt;16 */</comment>
            <return pos:line="30" pos:column="13">return <expr><call><name pos:line="30" pos:column="20">apr_pstrcat<pos:position pos:line="30" pos:column="31"/></name><argument_list pos:line="30" pos:column="31">(<argument><expr><name><name pos:line="30" pos:column="32">cmd<pos:position pos:line="30" pos:column="35"/></name><operator pos:line="30" pos:column="35">-&gt;<pos:position pos:line="30" pos:column="40"/></operator><name pos:line="30" pos:column="37">temp_pool<pos:position pos:line="30" pos:column="46"/></name></name></expr></argument>, <argument><expr><literal type="string" pos:line="30" pos:column="48">"The port number \""<pos:position pos:line="30" pos:column="68"/></literal></expr></argument>, <argument><expr><name pos:line="30" pos:column="70">arg<pos:position pos:line="30" pos:column="73"/></name></expr></argument>,
                          <argument><expr><literal type="string" pos:line="31" pos:column="27">"\" is outside the appropriate range "<pos:position pos:line="31" pos:column="65"/></literal>
                          <literal type="string" pos:line="32" pos:column="27">"(i.e., 1..65535)."<pos:position pos:line="32" pos:column="46"/></literal></expr></argument>, <argument><expr><name pos:line="32" pos:column="48">NULL<pos:position pos:line="32" pos:column="52"/></name></expr></argument>)<pos:position pos:line="32" pos:column="53"/></argument_list></call></expr>;<pos:position pos:line="32" pos:column="54"/></return>
        }<pos:position pos:line="33" pos:column="10"/></block></then></if>
    }<pos:position pos:line="34" pos:column="6"/></block></then>
    <else pos:line="35" pos:column="5">else <block pos:line="35" pos:column="10">{
        <expr_stmt><expr><name><name pos:line="36" pos:column="9">cmd<pos:position pos:line="36" pos:column="12"/></name><operator pos:line="36" pos:column="12">-&gt;<pos:position pos:line="36" pos:column="17"/></operator><name pos:line="36" pos:column="14">server<pos:position pos:line="36" pos:column="20"/></name><operator pos:line="36" pos:column="20">-&gt;<pos:position pos:line="36" pos:column="25"/></operator><name pos:line="36" pos:column="22">server_hostname<pos:position pos:line="36" pos:column="37"/></name></name> <operator pos:line="36" pos:column="38">=<pos:position pos:line="36" pos:column="39"/></operator> <call><name pos:line="36" pos:column="40">apr_pstrdup<pos:position pos:line="36" pos:column="51"/></name><argument_list pos:line="36" pos:column="51">(<argument><expr><name><name pos:line="36" pos:column="52">cmd<pos:position pos:line="36" pos:column="55"/></name><operator pos:line="36" pos:column="55">-&gt;<pos:position pos:line="36" pos:column="60"/></operator><name pos:line="36" pos:column="57">pool<pos:position pos:line="36" pos:column="61"/></name></name></expr></argument>, <argument><expr><name pos:line="36" pos:column="63">part<pos:position pos:line="36" pos:column="67"/></name></expr></argument>)<pos:position pos:line="36" pos:column="68"/></argument_list></call></expr>;<pos:position pos:line="36" pos:column="69"/></expr_stmt>
        <expr_stmt><expr><name pos:line="37" pos:column="9">port<pos:position pos:line="37" pos:column="13"/></name> <operator pos:line="37" pos:column="14">=<pos:position pos:line="37" pos:column="15"/></operator> <literal type="number" pos:line="37" pos:column="16">0<pos:position pos:line="37" pos:column="17"/></literal></expr>;<pos:position pos:line="37" pos:column="18"/></expr_stmt>
    }<pos:position pos:line="38" pos:column="6"/></block></else></if>

    <expr_stmt><expr><name><name pos:line="40" pos:column="5">cmd<pos:position pos:line="40" pos:column="8"/></name><operator pos:line="40" pos:column="8">-&gt;<pos:position pos:line="40" pos:column="13"/></operator><name pos:line="40" pos:column="10">server<pos:position pos:line="40" pos:column="16"/></name><operator pos:line="40" pos:column="16">-&gt;<pos:position pos:line="40" pos:column="21"/></operator><name pos:line="40" pos:column="18">port<pos:position pos:line="40" pos:column="22"/></name></name> <operator pos:line="40" pos:column="23">=<pos:position pos:line="40" pos:column="24"/></operator> <name pos:line="40" pos:column="25">port<pos:position pos:line="40" pos:column="29"/></name></expr>;<pos:position pos:line="40" pos:column="30"/></expr_stmt>
    <return pos:line="41" pos:column="5">return <expr><name pos:line="41" pos:column="12">NULL<pos:position pos:line="41" pos:column="16"/></name></expr>;<pos:position pos:line="41" pos:column="17"/></return>
}<pos:position pos:line="42" pos:column="2"/></block></function></unit>

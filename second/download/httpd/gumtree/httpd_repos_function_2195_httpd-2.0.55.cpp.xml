<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/httpd/gumtree/httpd_repos_function_2195_httpd-2.0.55.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">int<pos:position pos:line="1" pos:column="11"/></name></type> <name pos:line="1" pos:column="12">worker_open_logs<pos:position pos:line="1" pos:column="28"/></name><parameter_list pos:line="1" pos:column="28">(<parameter><decl><type><name pos:line="1" pos:column="29">apr_pool_t<pos:position pos:line="1" pos:column="39"/></name> <modifier pos:line="1" pos:column="40">*<pos:position pos:line="1" pos:column="41"/></modifier></type><name pos:line="1" pos:column="41">p<pos:position pos:line="1" pos:column="42"/></name></decl></parameter>, <parameter><decl><type><name pos:line="1" pos:column="44">apr_pool_t<pos:position pos:line="1" pos:column="54"/></name> <modifier pos:line="1" pos:column="55">*<pos:position pos:line="1" pos:column="56"/></modifier></type><name pos:line="1" pos:column="56">plog<pos:position pos:line="1" pos:column="60"/></name></decl></parameter>, <parameter><decl><type><name pos:line="1" pos:column="62">apr_pool_t<pos:position pos:line="1" pos:column="72"/></name> <modifier pos:line="1" pos:column="73">*<pos:position pos:line="1" pos:column="74"/></modifier></type><name pos:line="1" pos:column="74">ptemp<pos:position pos:line="1" pos:column="79"/></name></decl></parameter>, <parameter><decl><type><name pos:line="1" pos:column="81">server_rec<pos:position pos:line="1" pos:column="91"/></name> <modifier pos:line="1" pos:column="92">*<pos:position pos:line="1" pos:column="93"/></modifier></type><name pos:line="1" pos:column="93">s<pos:position pos:line="1" pos:column="94"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="95"/></parameter_list>
<block pos:line="2" pos:column="1">{
    <decl_stmt><decl><type><name pos:line="3" pos:column="5">apr_status_t<pos:position pos:line="3" pos:column="17"/></name></type> <name pos:line="3" pos:column="18">rv<pos:position pos:line="3" pos:column="20"/></name></decl>;<pos:position pos:line="3" pos:column="21"/></decl_stmt>

    <expr_stmt><expr><name pos:line="5" pos:column="5">pconf<pos:position pos:line="5" pos:column="10"/></name> <operator pos:line="5" pos:column="11">=<pos:position pos:line="5" pos:column="12"/></operator> <name pos:line="5" pos:column="13">p<pos:position pos:line="5" pos:column="14"/></name></expr>;<pos:position pos:line="5" pos:column="15"/></expr_stmt>
    <expr_stmt><expr><name pos:line="6" pos:column="5">ap_server_conf<pos:position pos:line="6" pos:column="19"/></name> <operator pos:line="6" pos:column="20">=<pos:position pos:line="6" pos:column="21"/></operator> <name pos:line="6" pos:column="22">s<pos:position pos:line="6" pos:column="23"/></name></expr>;<pos:position pos:line="6" pos:column="24"/></expr_stmt>

    <if pos:line="8" pos:column="5">if <condition pos:line="8" pos:column="8">(<expr><operator pos:line="8" pos:column="9">(<pos:position pos:line="8" pos:column="10"/></operator><name pos:line="8" pos:column="10">num_listensocks<pos:position pos:line="8" pos:column="25"/></name> <operator pos:line="8" pos:column="26">=<pos:position pos:line="8" pos:column="27"/></operator> <call><name pos:line="8" pos:column="28">ap_setup_listeners<pos:position pos:line="8" pos:column="46"/></name><argument_list pos:line="8" pos:column="46">(<argument><expr><name pos:line="8" pos:column="47">ap_server_conf<pos:position pos:line="8" pos:column="61"/></name></expr></argument>)<pos:position pos:line="8" pos:column="62"/></argument_list></call><operator pos:line="8" pos:column="62">)<pos:position pos:line="8" pos:column="63"/></operator> <operator pos:line="8" pos:column="64">&lt;<pos:position pos:line="8" pos:column="68"/></operator> <literal type="number" pos:line="8" pos:column="66">1<pos:position pos:line="8" pos:column="67"/></literal></expr>)<pos:position pos:line="8" pos:column="68"/></condition><then pos:line="8" pos:column="68"> <block pos:line="8" pos:column="69">{
        <expr_stmt><expr><call><name pos:line="9" pos:column="9">ap_log_error<pos:position pos:line="9" pos:column="21"/></name><argument_list pos:line="9" pos:column="21">(<argument><expr><name pos:line="9" pos:column="22">APLOG_MARK<pos:position pos:line="9" pos:column="32"/></name></expr></argument>, <argument><expr><name pos:line="9" pos:column="34">APLOG_ALERT<pos:position pos:line="9" pos:column="45"/></name><operator pos:line="9" pos:column="45">|<pos:position pos:line="9" pos:column="46"/></operator><name pos:line="9" pos:column="46">APLOG_STARTUP<pos:position pos:line="9" pos:column="59"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="9" pos:column="61">0<pos:position pos:line="9" pos:column="62"/></literal></expr></argument>,
                     <argument><expr><name pos:line="10" pos:column="22">NULL<pos:position pos:line="10" pos:column="26"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="10" pos:column="28">"no listening sockets available, shutting down"<pos:position pos:line="10" pos:column="75"/></literal></expr></argument>)<pos:position pos:line="10" pos:column="76"/></argument_list></call></expr>;<pos:position pos:line="10" pos:column="77"/></expr_stmt>
        <return pos:line="11" pos:column="9">return <expr><name pos:line="11" pos:column="16">DONE<pos:position pos:line="11" pos:column="20"/></name></expr>;<pos:position pos:line="11" pos:column="21"/></return>
    }<pos:position pos:line="12" pos:column="6"/></block></then></if>

    <if pos:line="14" pos:column="5">if <condition pos:line="14" pos:column="8">(<expr><operator pos:line="14" pos:column="9">!<pos:position pos:line="14" pos:column="10"/></operator><name pos:line="14" pos:column="10">one_process<pos:position pos:line="14" pos:column="21"/></name></expr>)<pos:position pos:line="14" pos:column="22"/></condition><then pos:line="14" pos:column="22"> <block pos:line="14" pos:column="23">{
        <if pos:line="15" pos:column="9">if <condition pos:line="15" pos:column="12">(<expr><operator pos:line="15" pos:column="13">(<pos:position pos:line="15" pos:column="14"/></operator><name pos:line="15" pos:column="14">rv<pos:position pos:line="15" pos:column="16"/></name> <operator pos:line="15" pos:column="17">=<pos:position pos:line="15" pos:column="18"/></operator> <call><name pos:line="15" pos:column="19">ap_mpm_pod_open<pos:position pos:line="15" pos:column="34"/></name><argument_list pos:line="15" pos:column="34">(<argument><expr><name pos:line="15" pos:column="35">pconf<pos:position pos:line="15" pos:column="40"/></name></expr></argument>, <argument><expr><operator pos:line="15" pos:column="42">&amp;<pos:position pos:line="15" pos:column="47"/></operator><name pos:line="15" pos:column="43">pod<pos:position pos:line="15" pos:column="46"/></name></expr></argument>)<pos:position pos:line="15" pos:column="47"/></argument_list></call><operator pos:line="15" pos:column="47">)<pos:position pos:line="15" pos:column="48"/></operator></expr>)<pos:position pos:line="15" pos:column="49"/></condition><then pos:line="15" pos:column="49"> <block pos:line="15" pos:column="50">{
            <expr_stmt><expr><call><name pos:line="16" pos:column="13">ap_log_error<pos:position pos:line="16" pos:column="25"/></name><argument_list pos:line="16" pos:column="25">(<argument><expr><name pos:line="16" pos:column="26">APLOG_MARK<pos:position pos:line="16" pos:column="36"/></name></expr></argument>, <argument><expr><name pos:line="16" pos:column="38">APLOG_CRIT<pos:position pos:line="16" pos:column="48"/></name><operator pos:line="16" pos:column="48">|<pos:position pos:line="16" pos:column="49"/></operator><name pos:line="16" pos:column="49">APLOG_STARTUP<pos:position pos:line="16" pos:column="62"/></name></expr></argument>, <argument><expr><name pos:line="16" pos:column="64">rv<pos:position pos:line="16" pos:column="66"/></name></expr></argument>, <argument><expr><name pos:line="16" pos:column="68">NULL<pos:position pos:line="16" pos:column="72"/></name></expr></argument>,
                    <argument><expr><literal type="string" pos:line="17" pos:column="21">"Could not open pipe-of-death."<pos:position pos:line="17" pos:column="52"/></literal></expr></argument>)<pos:position pos:line="17" pos:column="53"/></argument_list></call></expr>;<pos:position pos:line="17" pos:column="54"/></expr_stmt>
            <return pos:line="18" pos:column="13">return <expr><name pos:line="18" pos:column="20">DONE<pos:position pos:line="18" pos:column="24"/></name></expr>;<pos:position pos:line="18" pos:column="25"/></return>
        }<pos:position pos:line="19" pos:column="10"/></block></then></if>
    }<pos:position pos:line="20" pos:column="6"/></block></then></if>
    <return pos:line="21" pos:column="5">return <expr><name pos:line="21" pos:column="12">OK<pos:position pos:line="21" pos:column="14"/></name></expr>;<pos:position pos:line="21" pos:column="15"/></return>
}<pos:position pos:line="22" pos:column="2"/></block></function></unit>

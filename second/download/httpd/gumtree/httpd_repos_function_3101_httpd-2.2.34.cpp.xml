<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/httpd/gumtree/httpd_repos_function_3101_httpd-2.2.34.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">int<pos:position pos:line="1" pos:column="11"/></name></type> <name pos:line="1" pos:column="12">BF_decode<pos:position pos:line="1" pos:column="21"/></name><parameter_list pos:line="1" pos:column="21">(<parameter><decl><type><name pos:line="1" pos:column="22">BF_word<pos:position pos:line="1" pos:column="29"/></name> <modifier pos:line="1" pos:column="30">*<pos:position pos:line="1" pos:column="31"/></modifier></type><name pos:line="1" pos:column="31">dst<pos:position pos:line="1" pos:column="34"/></name></decl></parameter>, <parameter><decl><type><specifier pos:line="1" pos:column="36">const<pos:position pos:line="1" pos:column="41"/></specifier> <name pos:line="1" pos:column="42">char<pos:position pos:line="1" pos:column="46"/></name> <modifier pos:line="1" pos:column="47">*<pos:position pos:line="1" pos:column="48"/></modifier></type><name pos:line="1" pos:column="48">src<pos:position pos:line="1" pos:column="51"/></name></decl></parameter>, <parameter><decl><type><name pos:line="1" pos:column="53">int<pos:position pos:line="1" pos:column="56"/></name></type> <name pos:line="1" pos:column="57">size<pos:position pos:line="1" pos:column="61"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="62"/></parameter_list>
<block pos:line="2" pos:column="1">{
	<decl_stmt><decl><type><name pos:line="3" pos:column="9">unsigned<pos:position pos:line="3" pos:column="17"/></name> <name pos:line="3" pos:column="18">char<pos:position pos:line="3" pos:column="22"/></name> <modifier pos:line="3" pos:column="23">*<pos:position pos:line="3" pos:column="24"/></modifier></type><name pos:line="3" pos:column="24">dptr<pos:position pos:line="3" pos:column="28"/></name> <init pos:line="3" pos:column="29">= <expr><operator pos:line="3" pos:column="31">(<pos:position pos:line="3" pos:column="32"/></operator><name pos:line="3" pos:column="32">unsigned<pos:position pos:line="3" pos:column="40"/></name> <name pos:line="3" pos:column="41">char<pos:position pos:line="3" pos:column="45"/></name> <operator pos:line="3" pos:column="46">*<pos:position pos:line="3" pos:column="47"/></operator><operator pos:line="3" pos:column="47">)<pos:position pos:line="3" pos:column="48"/></operator><name pos:line="3" pos:column="48">dst<pos:position pos:line="3" pos:column="51"/></name></expr></init></decl>;<pos:position pos:line="3" pos:column="52"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="4" pos:column="9">unsigned<pos:position pos:line="4" pos:column="17"/></name> <name pos:line="4" pos:column="18">char<pos:position pos:line="4" pos:column="22"/></name> <modifier pos:line="4" pos:column="23">*<pos:position pos:line="4" pos:column="24"/></modifier></type><name pos:line="4" pos:column="24">end<pos:position pos:line="4" pos:column="27"/></name> <init pos:line="4" pos:column="28">= <expr><name pos:line="4" pos:column="30">dptr<pos:position pos:line="4" pos:column="34"/></name> <operator pos:line="4" pos:column="35">+<pos:position pos:line="4" pos:column="36"/></operator> <name pos:line="4" pos:column="37">size<pos:position pos:line="4" pos:column="41"/></name></expr></init></decl>;<pos:position pos:line="4" pos:column="42"/></decl_stmt>
	<decl_stmt><decl><type><specifier pos:line="5" pos:column="9">const<pos:position pos:line="5" pos:column="14"/></specifier> <name pos:line="5" pos:column="15">unsigned<pos:position pos:line="5" pos:column="23"/></name> <name pos:line="5" pos:column="24">char<pos:position pos:line="5" pos:column="28"/></name> <modifier pos:line="5" pos:column="29">*<pos:position pos:line="5" pos:column="30"/></modifier></type><name pos:line="5" pos:column="30">sptr<pos:position pos:line="5" pos:column="34"/></name> <init pos:line="5" pos:column="35">= <expr><operator pos:line="5" pos:column="37">(<pos:position pos:line="5" pos:column="38"/></operator><specifier pos:line="5" pos:column="38">const<pos:position pos:line="5" pos:column="43"/></specifier> <name pos:line="5" pos:column="44">unsigned<pos:position pos:line="5" pos:column="52"/></name> <name pos:line="5" pos:column="53">char<pos:position pos:line="5" pos:column="57"/></name> <operator pos:line="5" pos:column="58">*<pos:position pos:line="5" pos:column="59"/></operator><operator pos:line="5" pos:column="59">)<pos:position pos:line="5" pos:column="60"/></operator><name pos:line="5" pos:column="60">src<pos:position pos:line="5" pos:column="63"/></name></expr></init></decl>;<pos:position pos:line="5" pos:column="64"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="6" pos:column="9">unsigned<pos:position pos:line="6" pos:column="17"/></name> <name pos:line="6" pos:column="18">int<pos:position pos:line="6" pos:column="21"/></name></type> <name pos:line="6" pos:column="22">tmp<pos:position pos:line="6" pos:column="25"/></name></decl>, <decl><type ref="prev"/><name pos:line="6" pos:column="27">c1<pos:position pos:line="6" pos:column="29"/></name></decl>, <decl><type ref="prev"/><name pos:line="6" pos:column="31">c2<pos:position pos:line="6" pos:column="33"/></name></decl>, <decl><type ref="prev"/><name pos:line="6" pos:column="35">c3<pos:position pos:line="6" pos:column="37"/></name></decl>, <decl><type ref="prev"/><name pos:line="6" pos:column="39">c4<pos:position pos:line="6" pos:column="41"/></name></decl>;<pos:position pos:line="6" pos:column="42"/></decl_stmt>

	<do pos:line="8" pos:column="9">do <block pos:line="8" pos:column="12">{
		<expr_stmt><expr><call><name pos:line="9" pos:column="17">BF_safe_atoi64<pos:position pos:line="9" pos:column="31"/></name><argument_list pos:line="9" pos:column="31">(<argument><expr><name pos:line="9" pos:column="32">c1<pos:position pos:line="9" pos:column="34"/></name></expr></argument>, <argument><expr><operator pos:line="9" pos:column="36">*<pos:position pos:line="9" pos:column="37"/></operator><name pos:line="9" pos:column="37">sptr<pos:position pos:line="9" pos:column="41"/></name><operator pos:line="9" pos:column="41">++<pos:position pos:line="9" pos:column="43"/></operator></expr></argument>)<pos:position pos:line="9" pos:column="44"/></argument_list></call></expr>;<pos:position pos:line="9" pos:column="45"/></expr_stmt>
		<expr_stmt><expr><call><name pos:line="10" pos:column="17">BF_safe_atoi64<pos:position pos:line="10" pos:column="31"/></name><argument_list pos:line="10" pos:column="31">(<argument><expr><name pos:line="10" pos:column="32">c2<pos:position pos:line="10" pos:column="34"/></name></expr></argument>, <argument><expr><operator pos:line="10" pos:column="36">*<pos:position pos:line="10" pos:column="37"/></operator><name pos:line="10" pos:column="37">sptr<pos:position pos:line="10" pos:column="41"/></name><operator pos:line="10" pos:column="41">++<pos:position pos:line="10" pos:column="43"/></operator></expr></argument>)<pos:position pos:line="10" pos:column="44"/></argument_list></call></expr>;<pos:position pos:line="10" pos:column="45"/></expr_stmt>
		<expr_stmt><expr><operator pos:line="11" pos:column="17">*<pos:position pos:line="11" pos:column="18"/></operator><name pos:line="11" pos:column="18">dptr<pos:position pos:line="11" pos:column="22"/></name><operator pos:line="11" pos:column="22">++<pos:position pos:line="11" pos:column="24"/></operator> <operator pos:line="11" pos:column="25">=<pos:position pos:line="11" pos:column="26"/></operator> <operator pos:line="11" pos:column="27">(<pos:position pos:line="11" pos:column="28"/></operator><name pos:line="11" pos:column="28">c1<pos:position pos:line="11" pos:column="30"/></name> <operator pos:line="11" pos:column="31">&lt;&lt;<pos:position pos:line="11" pos:column="39"/></operator> <literal type="number" pos:line="11" pos:column="34">2<pos:position pos:line="11" pos:column="35"/></literal><operator pos:line="11" pos:column="35">)<pos:position pos:line="11" pos:column="36"/></operator> <operator pos:line="11" pos:column="37">|<pos:position pos:line="11" pos:column="38"/></operator> <operator pos:line="11" pos:column="39">(<pos:position pos:line="11" pos:column="40"/></operator><operator pos:line="11" pos:column="40">(<pos:position pos:line="11" pos:column="41"/></operator><name pos:line="11" pos:column="41">c2<pos:position pos:line="11" pos:column="43"/></name> <operator pos:line="11" pos:column="44">&amp;<pos:position pos:line="11" pos:column="49"/></operator> <literal type="number" pos:line="11" pos:column="46">0x30<pos:position pos:line="11" pos:column="50"/></literal><operator pos:line="11" pos:column="50">)<pos:position pos:line="11" pos:column="51"/></operator> <operator pos:line="11" pos:column="52">&gt;&gt;<pos:position pos:line="11" pos:column="57"/></operator> <literal type="number" pos:line="11" pos:column="55">4<pos:position pos:line="11" pos:column="56"/></literal><operator pos:line="11" pos:column="56">)<pos:position pos:line="11" pos:column="57"/></operator></expr>;<pos:position pos:line="11" pos:column="58"/></expr_stmt>
		<if pos:line="12" pos:column="17">if <condition pos:line="12" pos:column="20">(<expr><name pos:line="12" pos:column="21">dptr<pos:position pos:line="12" pos:column="25"/></name> <operator pos:line="12" pos:column="26">&gt;=<pos:position pos:line="12" pos:column="31"/></operator> <name pos:line="12" pos:column="29">end<pos:position pos:line="12" pos:column="32"/></name></expr>)<pos:position pos:line="12" pos:column="33"/></condition><then pos:line="12" pos:column="33"> <block type="pseudo"><break pos:line="12" pos:column="34">break;<pos:position pos:line="12" pos:column="40"/></break></block></then></if>

		<expr_stmt><expr><call><name pos:line="14" pos:column="17">BF_safe_atoi64<pos:position pos:line="14" pos:column="31"/></name><argument_list pos:line="14" pos:column="31">(<argument><expr><name pos:line="14" pos:column="32">c3<pos:position pos:line="14" pos:column="34"/></name></expr></argument>, <argument><expr><operator pos:line="14" pos:column="36">*<pos:position pos:line="14" pos:column="37"/></operator><name pos:line="14" pos:column="37">sptr<pos:position pos:line="14" pos:column="41"/></name><operator pos:line="14" pos:column="41">++<pos:position pos:line="14" pos:column="43"/></operator></expr></argument>)<pos:position pos:line="14" pos:column="44"/></argument_list></call></expr>;<pos:position pos:line="14" pos:column="45"/></expr_stmt>
		<expr_stmt><expr><operator pos:line="15" pos:column="17">*<pos:position pos:line="15" pos:column="18"/></operator><name pos:line="15" pos:column="18">dptr<pos:position pos:line="15" pos:column="22"/></name><operator pos:line="15" pos:column="22">++<pos:position pos:line="15" pos:column="24"/></operator> <operator pos:line="15" pos:column="25">=<pos:position pos:line="15" pos:column="26"/></operator> <operator pos:line="15" pos:column="27">(<pos:position pos:line="15" pos:column="28"/></operator><operator pos:line="15" pos:column="28">(<pos:position pos:line="15" pos:column="29"/></operator><name pos:line="15" pos:column="29">c2<pos:position pos:line="15" pos:column="31"/></name> <operator pos:line="15" pos:column="32">&amp;<pos:position pos:line="15" pos:column="37"/></operator> <literal type="number" pos:line="15" pos:column="34">0x0F<pos:position pos:line="15" pos:column="38"/></literal><operator pos:line="15" pos:column="38">)<pos:position pos:line="15" pos:column="39"/></operator> <operator pos:line="15" pos:column="40">&lt;&lt;<pos:position pos:line="15" pos:column="48"/></operator> <literal type="number" pos:line="15" pos:column="43">4<pos:position pos:line="15" pos:column="44"/></literal><operator pos:line="15" pos:column="44">)<pos:position pos:line="15" pos:column="45"/></operator> <operator pos:line="15" pos:column="46">|<pos:position pos:line="15" pos:column="47"/></operator> <operator pos:line="15" pos:column="48">(<pos:position pos:line="15" pos:column="49"/></operator><operator pos:line="15" pos:column="49">(<pos:position pos:line="15" pos:column="50"/></operator><name pos:line="15" pos:column="50">c3<pos:position pos:line="15" pos:column="52"/></name> <operator pos:line="15" pos:column="53">&amp;<pos:position pos:line="15" pos:column="58"/></operator> <literal type="number" pos:line="15" pos:column="55">0x3C<pos:position pos:line="15" pos:column="59"/></literal><operator pos:line="15" pos:column="59">)<pos:position pos:line="15" pos:column="60"/></operator> <operator pos:line="15" pos:column="61">&gt;&gt;<pos:position pos:line="15" pos:column="66"/></operator> <literal type="number" pos:line="15" pos:column="64">2<pos:position pos:line="15" pos:column="65"/></literal><operator pos:line="15" pos:column="65">)<pos:position pos:line="15" pos:column="66"/></operator></expr>;<pos:position pos:line="15" pos:column="67"/></expr_stmt>
		<if pos:line="16" pos:column="17">if <condition pos:line="16" pos:column="20">(<expr><name pos:line="16" pos:column="21">dptr<pos:position pos:line="16" pos:column="25"/></name> <operator pos:line="16" pos:column="26">&gt;=<pos:position pos:line="16" pos:column="31"/></operator> <name pos:line="16" pos:column="29">end<pos:position pos:line="16" pos:column="32"/></name></expr>)<pos:position pos:line="16" pos:column="33"/></condition><then pos:line="16" pos:column="33"> <block type="pseudo"><break pos:line="16" pos:column="34">break;<pos:position pos:line="16" pos:column="40"/></break></block></then></if>

		<expr_stmt><expr><call><name pos:line="18" pos:column="17">BF_safe_atoi64<pos:position pos:line="18" pos:column="31"/></name><argument_list pos:line="18" pos:column="31">(<argument><expr><name pos:line="18" pos:column="32">c4<pos:position pos:line="18" pos:column="34"/></name></expr></argument>, <argument><expr><operator pos:line="18" pos:column="36">*<pos:position pos:line="18" pos:column="37"/></operator><name pos:line="18" pos:column="37">sptr<pos:position pos:line="18" pos:column="41"/></name><operator pos:line="18" pos:column="41">++<pos:position pos:line="18" pos:column="43"/></operator></expr></argument>)<pos:position pos:line="18" pos:column="44"/></argument_list></call></expr>;<pos:position pos:line="18" pos:column="45"/></expr_stmt>
		<expr_stmt><expr><operator pos:line="19" pos:column="17">*<pos:position pos:line="19" pos:column="18"/></operator><name pos:line="19" pos:column="18">dptr<pos:position pos:line="19" pos:column="22"/></name><operator pos:line="19" pos:column="22">++<pos:position pos:line="19" pos:column="24"/></operator> <operator pos:line="19" pos:column="25">=<pos:position pos:line="19" pos:column="26"/></operator> <operator pos:line="19" pos:column="27">(<pos:position pos:line="19" pos:column="28"/></operator><operator pos:line="19" pos:column="28">(<pos:position pos:line="19" pos:column="29"/></operator><name pos:line="19" pos:column="29">c3<pos:position pos:line="19" pos:column="31"/></name> <operator pos:line="19" pos:column="32">&amp;<pos:position pos:line="19" pos:column="37"/></operator> <literal type="number" pos:line="19" pos:column="34">0x03<pos:position pos:line="19" pos:column="38"/></literal><operator pos:line="19" pos:column="38">)<pos:position pos:line="19" pos:column="39"/></operator> <operator pos:line="19" pos:column="40">&lt;&lt;<pos:position pos:line="19" pos:column="48"/></operator> <literal type="number" pos:line="19" pos:column="43">6<pos:position pos:line="19" pos:column="44"/></literal><operator pos:line="19" pos:column="44">)<pos:position pos:line="19" pos:column="45"/></operator> <operator pos:line="19" pos:column="46">|<pos:position pos:line="19" pos:column="47"/></operator> <name pos:line="19" pos:column="48">c4<pos:position pos:line="19" pos:column="50"/></name></expr>;<pos:position pos:line="19" pos:column="51"/></expr_stmt>
	}<pos:position pos:line="20" pos:column="10"/></block> while <condition pos:line="20" pos:column="17">(<expr><name pos:line="20" pos:column="18">dptr<pos:position pos:line="20" pos:column="22"/></name> <operator pos:line="20" pos:column="23">&lt;<pos:position pos:line="20" pos:column="27"/></operator> <name pos:line="20" pos:column="25">end<pos:position pos:line="20" pos:column="28"/></name></expr>)<pos:position pos:line="20" pos:column="29"/></condition>;<pos:position pos:line="20" pos:column="30"/></do>

	<return pos:line="22" pos:column="9">return <expr><literal type="number" pos:line="22" pos:column="16">0<pos:position pos:line="22" pos:column="17"/></literal></expr>;<pos:position pos:line="22" pos:column="18"/></return>
}<pos:position pos:line="23" pos:column="2"/></block></function></unit>

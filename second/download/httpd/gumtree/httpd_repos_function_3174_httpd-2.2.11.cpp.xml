<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/httpd/gumtree/httpd_repos_function_3174_httpd-2.2.11.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier>
<type><name pos:line="2" pos:column="1">int<pos:position pos:line="2" pos:column="4"/></name></type> <name pos:line="2" pos:column="5">attlist2<pos:position pos:line="2" pos:column="13"/></name><parameter_list pos:line="2" pos:column="13">(<parameter><decl><type><name pos:line="2" pos:column="14">PROLOG_STATE<pos:position pos:line="2" pos:column="26"/></name> <modifier pos:line="2" pos:column="27">*<pos:position pos:line="2" pos:column="28"/></modifier></type><name pos:line="2" pos:column="28">state<pos:position pos:line="2" pos:column="33"/></name></decl></parameter>,
	     <parameter><decl><type><name pos:line="3" pos:column="14">int<pos:position pos:line="3" pos:column="17"/></name></type> <name pos:line="3" pos:column="18">tok<pos:position pos:line="3" pos:column="21"/></name></decl></parameter>,
	     <parameter><decl><type><specifier pos:line="4" pos:column="14">const<pos:position pos:line="4" pos:column="19"/></specifier> <name pos:line="4" pos:column="20">char<pos:position pos:line="4" pos:column="24"/></name> <modifier pos:line="4" pos:column="25">*<pos:position pos:line="4" pos:column="26"/></modifier></type><name pos:line="4" pos:column="26">ptr<pos:position pos:line="4" pos:column="29"/></name></decl></parameter>,
	     <parameter><decl><type><specifier pos:line="5" pos:column="14">const<pos:position pos:line="5" pos:column="19"/></specifier> <name pos:line="5" pos:column="20">char<pos:position pos:line="5" pos:column="24"/></name> <modifier pos:line="5" pos:column="25">*<pos:position pos:line="5" pos:column="26"/></modifier></type><name pos:line="5" pos:column="26">end<pos:position pos:line="5" pos:column="29"/></name></decl></parameter>,
	     <parameter><decl><type><specifier pos:line="6" pos:column="14">const<pos:position pos:line="6" pos:column="19"/></specifier> <name pos:line="6" pos:column="20">ENCODING<pos:position pos:line="6" pos:column="28"/></name> <modifier pos:line="6" pos:column="29">*<pos:position pos:line="6" pos:column="30"/></modifier></type><name pos:line="6" pos:column="30">enc<pos:position pos:line="6" pos:column="33"/></name></decl></parameter>)<pos:position pos:line="6" pos:column="34"/></parameter_list>
<block pos:line="7" pos:column="1">{
  <switch pos:line="8" pos:column="3">switch <condition pos:line="8" pos:column="10">(<expr><name pos:line="8" pos:column="11">tok<pos:position pos:line="8" pos:column="14"/></name></expr>)<pos:position pos:line="8" pos:column="15"/></condition> <block pos:line="8" pos:column="16">{
  <case pos:line="9" pos:column="3">case <expr><name pos:line="9" pos:column="8">XML_TOK_PROLOG_S<pos:position pos:line="9" pos:column="24"/></name></expr>:<pos:position pos:line="9" pos:column="25"/></case>
    <return pos:line="10" pos:column="5">return <expr><name pos:line="10" pos:column="12">XML_ROLE_NONE<pos:position pos:line="10" pos:column="25"/></name></expr>;<pos:position pos:line="10" pos:column="26"/></return>
  <case pos:line="11" pos:column="3">case <expr><name pos:line="11" pos:column="8">XML_TOK_NAME<pos:position pos:line="11" pos:column="20"/></name></expr>:<pos:position pos:line="11" pos:column="21"/></case>
    <block pos:line="12" pos:column="5">{
      <decl_stmt><decl><specifier pos:line="13" pos:column="7">static<pos:position pos:line="13" pos:column="13"/></specifier> <type><specifier pos:line="13" pos:column="14">const<pos:position pos:line="13" pos:column="19"/></specifier> <name pos:line="13" pos:column="20">char<pos:position pos:line="13" pos:column="24"/></name> <modifier pos:line="13" pos:column="25">*<pos:position pos:line="13" pos:column="26"/></modifier></type><name><name pos:line="13" pos:column="26">types<pos:position pos:line="13" pos:column="31"/></name><index pos:line="13" pos:column="31">[]<pos:position pos:line="13" pos:column="33"/></index></name> <init pos:line="13" pos:column="34">= <expr><block pos:line="13" pos:column="36">{
	<expr><name pos:line="14" pos:column="9">KW_CDATA<pos:position pos:line="14" pos:column="17"/></name></expr>,
        <expr><name pos:line="15" pos:column="9">KW_ID<pos:position pos:line="15" pos:column="14"/></name></expr>,
        <expr><name pos:line="16" pos:column="9">KW_IDREF<pos:position pos:line="16" pos:column="17"/></name></expr>,
        <expr><name pos:line="17" pos:column="9">KW_IDREFS<pos:position pos:line="17" pos:column="18"/></name></expr>,
        <expr><name pos:line="18" pos:column="9">KW_ENTITY<pos:position pos:line="18" pos:column="18"/></name></expr>,
        <expr><name pos:line="19" pos:column="9">KW_ENTITIES<pos:position pos:line="19" pos:column="20"/></name></expr>,
        <expr><name pos:line="20" pos:column="9">KW_NMTOKEN<pos:position pos:line="20" pos:column="19"/></name></expr>,
        <expr><name pos:line="21" pos:column="9">KW_NMTOKENS<pos:position pos:line="21" pos:column="20"/></name></expr>,
      }<pos:position pos:line="22" pos:column="8"/></block></expr></init></decl>;<pos:position pos:line="22" pos:column="9"/></decl_stmt>
      <decl_stmt><decl><type><name pos:line="23" pos:column="7">int<pos:position pos:line="23" pos:column="10"/></name></type> <name pos:line="23" pos:column="11">i<pos:position pos:line="23" pos:column="12"/></name></decl>;<pos:position pos:line="23" pos:column="13"/></decl_stmt>
      <for pos:line="24" pos:column="7">for <control pos:line="24" pos:column="11">(<init><expr><name pos:line="24" pos:column="12">i<pos:position pos:line="24" pos:column="13"/></name> <operator pos:line="24" pos:column="14">=<pos:position pos:line="24" pos:column="15"/></operator> <literal type="number" pos:line="24" pos:column="16">0<pos:position pos:line="24" pos:column="17"/></literal></expr>;<pos:position pos:line="24" pos:column="18"/></init> <condition><expr><name pos:line="24" pos:column="19">i<pos:position pos:line="24" pos:column="20"/></name> <operator pos:line="24" pos:column="21">&lt;<pos:position pos:line="24" pos:column="25"/></operator> <call pos:line="24" pos:column="23">(<name pos:line="24" pos:column="24">int<pos:position pos:line="24" pos:column="27"/></name>)<argument_list pos:line="24" pos:column="28">(<argument><expr><sizeof pos:line="24" pos:column="29">sizeof<argument_list pos:line="24" pos:column="35">(<argument><expr><name pos:line="24" pos:column="36">types<pos:position pos:line="24" pos:column="41"/></name></expr></argument>)<pos:position pos:line="24" pos:column="42"/></argument_list></sizeof><operator pos:line="24" pos:column="42">/<pos:position pos:line="24" pos:column="43"/></operator><sizeof pos:line="24" pos:column="43">sizeof<argument_list pos:line="24" pos:column="49">(<argument><expr><name><name pos:line="24" pos:column="50">types<pos:position pos:line="24" pos:column="55"/></name><index pos:line="24" pos:column="55">[<expr><literal type="number" pos:line="24" pos:column="56">0<pos:position pos:line="24" pos:column="57"/></literal></expr>]<pos:position pos:line="24" pos:column="58"/></index></name></expr></argument>)<pos:position pos:line="24" pos:column="59"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="24" pos:column="60"/></argument_list></call></expr>;<pos:position pos:line="24" pos:column="61"/></condition> <incr><expr><name pos:line="24" pos:column="62">i<pos:position pos:line="24" pos:column="63"/></name><operator pos:line="24" pos:column="63">++<pos:position pos:line="24" pos:column="65"/></operator></expr></incr>)<pos:position pos:line="24" pos:column="66"/></control>
	<block type="pseudo"><if pos:line="25" pos:column="9">if <condition pos:line="25" pos:column="12">(<expr><call><name pos:line="25" pos:column="13">XmlNameMatchesAscii<pos:position pos:line="25" pos:column="32"/></name><argument_list pos:line="25" pos:column="32">(<argument><expr><name pos:line="25" pos:column="33">enc<pos:position pos:line="25" pos:column="36"/></name></expr></argument>, <argument><expr><name pos:line="25" pos:column="38">ptr<pos:position pos:line="25" pos:column="41"/></name></expr></argument>, <argument><expr><name pos:line="25" pos:column="43">end<pos:position pos:line="25" pos:column="46"/></name></expr></argument>, <argument><expr><name><name pos:line="25" pos:column="48">types<pos:position pos:line="25" pos:column="53"/></name><index pos:line="25" pos:column="53">[<expr><name pos:line="25" pos:column="54">i<pos:position pos:line="25" pos:column="55"/></name></expr>]<pos:position pos:line="25" pos:column="56"/></index></name></expr></argument>)<pos:position pos:line="25" pos:column="57"/></argument_list></call></expr>)<pos:position pos:line="25" pos:column="58"/></condition><then pos:line="25" pos:column="58"> <block pos:line="25" pos:column="59">{
	  <expr_stmt><expr><name><name pos:line="26" pos:column="11">state<pos:position pos:line="26" pos:column="16"/></name><operator pos:line="26" pos:column="16">-&gt;<pos:position pos:line="26" pos:column="21"/></operator><name pos:line="26" pos:column="18">handler<pos:position pos:line="26" pos:column="25"/></name></name> <operator pos:line="26" pos:column="26">=<pos:position pos:line="26" pos:column="27"/></operator> <name pos:line="26" pos:column="28">attlist8<pos:position pos:line="26" pos:column="36"/></name></expr>;<pos:position pos:line="26" pos:column="37"/></expr_stmt>
	  <return pos:line="27" pos:column="11">return <expr><name pos:line="27" pos:column="18">XML_ROLE_ATTRIBUTE_TYPE_CDATA<pos:position pos:line="27" pos:column="47"/></name> <operator pos:line="27" pos:column="48">+<pos:position pos:line="27" pos:column="49"/></operator> <name pos:line="27" pos:column="50">i<pos:position pos:line="27" pos:column="51"/></name></expr>;<pos:position pos:line="27" pos:column="52"/></return>
	}<pos:position pos:line="28" pos:column="10"/></block></then></if></block></for>
    }<pos:position pos:line="29" pos:column="6"/></block>
    <if pos:line="30" pos:column="5">if <condition pos:line="30" pos:column="8">(<expr><call><name pos:line="30" pos:column="9">XmlNameMatchesAscii<pos:position pos:line="30" pos:column="28"/></name><argument_list pos:line="30" pos:column="28">(<argument><expr><name pos:line="30" pos:column="29">enc<pos:position pos:line="30" pos:column="32"/></name></expr></argument>, <argument><expr><name pos:line="30" pos:column="34">ptr<pos:position pos:line="30" pos:column="37"/></name></expr></argument>, <argument><expr><name pos:line="30" pos:column="39">end<pos:position pos:line="30" pos:column="42"/></name></expr></argument>, <argument><expr><name pos:line="30" pos:column="44">KW_NOTATION<pos:position pos:line="30" pos:column="55"/></name></expr></argument>)<pos:position pos:line="30" pos:column="56"/></argument_list></call></expr>)<pos:position pos:line="30" pos:column="57"/></condition><then pos:line="30" pos:column="57"> <block pos:line="30" pos:column="58">{
      <expr_stmt><expr><name><name pos:line="31" pos:column="7">state<pos:position pos:line="31" pos:column="12"/></name><operator pos:line="31" pos:column="12">-&gt;<pos:position pos:line="31" pos:column="17"/></operator><name pos:line="31" pos:column="14">handler<pos:position pos:line="31" pos:column="21"/></name></name> <operator pos:line="31" pos:column="22">=<pos:position pos:line="31" pos:column="23"/></operator> <name pos:line="31" pos:column="24">attlist5<pos:position pos:line="31" pos:column="32"/></name></expr>;<pos:position pos:line="31" pos:column="33"/></expr_stmt>
      <return pos:line="32" pos:column="7">return <expr><name pos:line="32" pos:column="14">XML_ROLE_NONE<pos:position pos:line="32" pos:column="27"/></name></expr>;<pos:position pos:line="32" pos:column="28"/></return>
    }<pos:position pos:line="33" pos:column="6"/></block></then></if>
    <break pos:line="34" pos:column="5">break;<pos:position pos:line="34" pos:column="11"/></break>
  <case pos:line="35" pos:column="3">case <expr><name pos:line="35" pos:column="8">XML_TOK_OPEN_PAREN<pos:position pos:line="35" pos:column="26"/></name></expr>:<pos:position pos:line="35" pos:column="27"/></case>
    <expr_stmt><expr><name><name pos:line="36" pos:column="5">state<pos:position pos:line="36" pos:column="10"/></name><operator pos:line="36" pos:column="10">-&gt;<pos:position pos:line="36" pos:column="15"/></operator><name pos:line="36" pos:column="12">handler<pos:position pos:line="36" pos:column="19"/></name></name> <operator pos:line="36" pos:column="20">=<pos:position pos:line="36" pos:column="21"/></operator> <name pos:line="36" pos:column="22">attlist3<pos:position pos:line="36" pos:column="30"/></name></expr>;<pos:position pos:line="36" pos:column="31"/></expr_stmt>
    <return pos:line="37" pos:column="5">return <expr><name pos:line="37" pos:column="12">XML_ROLE_NONE<pos:position pos:line="37" pos:column="25"/></name></expr>;<pos:position pos:line="37" pos:column="26"/></return>
  }<pos:position pos:line="38" pos:column="4"/></block></switch>
  <return pos:line="39" pos:column="3">return <expr><call><name pos:line="39" pos:column="10">common<pos:position pos:line="39" pos:column="16"/></name><argument_list pos:line="39" pos:column="16">(<argument><expr><name pos:line="39" pos:column="17">state<pos:position pos:line="39" pos:column="22"/></name></expr></argument>, <argument><expr><name pos:line="39" pos:column="24">tok<pos:position pos:line="39" pos:column="27"/></name></expr></argument>)<pos:position pos:line="39" pos:column="28"/></argument_list></call></expr>;<pos:position pos:line="39" pos:column="29"/></return>
}<pos:position pos:line="40" pos:column="2"/></block></function></unit>

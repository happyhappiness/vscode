<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/httpd/gumtree/httpd_function_139.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">int<pos:position pos:line="1" pos:column="4"/></name></type> <name pos:line="1" pos:column="5">ap_mpm_run<pos:position pos:line="1" pos:column="15"/></name><parameter_list pos:line="1" pos:column="15">(<parameter><decl><type><name pos:line="1" pos:column="16">apr_pool_t<pos:position pos:line="1" pos:column="26"/></name> <modifier pos:line="1" pos:column="27">*<pos:position pos:line="1" pos:column="28"/></modifier></type><name pos:line="1" pos:column="28">_pconf<pos:position pos:line="1" pos:column="34"/></name></decl></parameter>, <parameter><decl><type><name pos:line="1" pos:column="36">apr_pool_t<pos:position pos:line="1" pos:column="46"/></name> <modifier pos:line="1" pos:column="47">*<pos:position pos:line="1" pos:column="48"/></modifier></type><name pos:line="1" pos:column="48">plog<pos:position pos:line="1" pos:column="52"/></name></decl></parameter>, <parameter><decl><type><name pos:line="1" pos:column="54">server_rec<pos:position pos:line="1" pos:column="64"/></name> <modifier pos:line="1" pos:column="65">*<pos:position pos:line="1" pos:column="66"/></modifier></type><name pos:line="1" pos:column="66">s<pos:position pos:line="1" pos:column="67"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="68"/></parameter_list>
<block pos:line="2" pos:column="1">{
    <decl_stmt><decl><type><name pos:line="3" pos:column="5">int<pos:position pos:line="3" pos:column="8"/></name></type> <name pos:line="3" pos:column="9">remaining_children_to_start<pos:position pos:line="3" pos:column="36"/></name></decl>;<pos:position pos:line="3" pos:column="37"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="4" pos:column="5">int<pos:position pos:line="4" pos:column="8"/></name></type> <name pos:line="4" pos:column="9">i<pos:position pos:line="4" pos:column="10"/></name></decl>;<pos:position pos:line="4" pos:column="11"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="5" pos:column="5">apr_status_t<pos:position pos:line="5" pos:column="17"/></name></type> <name pos:line="5" pos:column="18">rv<pos:position pos:line="5" pos:column="20"/></name></decl>;<pos:position pos:line="5" pos:column="21"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="6" pos:column="5">apr_size_t<pos:position pos:line="6" pos:column="15"/></name></type> <name pos:line="6" pos:column="16">one<pos:position pos:line="6" pos:column="19"/></name> <init pos:line="6" pos:column="20">= <expr><literal type="number" pos:line="6" pos:column="22">1<pos:position pos:line="6" pos:column="23"/></literal></expr></init></decl>;<pos:position pos:line="6" pos:column="24"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="7" pos:column="5">ap_listen_rec<pos:position pos:line="7" pos:column="18"/></name> <modifier pos:line="7" pos:column="19">*<pos:position pos:line="7" pos:column="20"/></modifier></type><name pos:line="7" pos:column="20">lr<pos:position pos:line="7" pos:column="22"/></name></decl>;<pos:position pos:line="7" pos:column="23"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="8" pos:column="5">apr_socket_t<pos:position pos:line="8" pos:column="17"/></name> <modifier pos:line="8" pos:column="18">*<pos:position pos:line="8" pos:column="19"/></modifier></type><name pos:line="8" pos:column="19">sock<pos:position pos:line="8" pos:column="23"/></name> <init pos:line="8" pos:column="24">= <expr><name pos:line="8" pos:column="26">NULL<pos:position pos:line="8" pos:column="30"/></name></expr></init></decl>;<pos:position pos:line="8" pos:column="31"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="9" pos:column="5">int<pos:position pos:line="9" pos:column="8"/></name></type> <name pos:line="9" pos:column="9">fd<pos:position pos:line="9" pos:column="11"/></name></decl>;<pos:position pos:line="9" pos:column="12"/></decl_stmt>

    <expr_stmt><expr><call><name pos:line="11" pos:column="5">ap_log_pid<pos:position pos:line="11" pos:column="15"/></name><argument_list pos:line="11" pos:column="15">(<argument><expr><name pos:line="11" pos:column="16">pconf<pos:position pos:line="11" pos:column="21"/></name></expr></argument>, <argument><expr><name pos:line="11" pos:column="23">ap_pid_fname<pos:position pos:line="11" pos:column="35"/></name></expr></argument>)<pos:position pos:line="11" pos:column="36"/></argument_list></call></expr>;<pos:position pos:line="11" pos:column="37"/></expr_stmt>

    <expr_stmt><expr><name pos:line="13" pos:column="5">first_server_limit<pos:position pos:line="13" pos:column="23"/></name> <operator pos:line="13" pos:column="24">=<pos:position pos:line="13" pos:column="25"/></operator> <name pos:line="13" pos:column="26">server_limit<pos:position pos:line="13" pos:column="38"/></name></expr>;<pos:position pos:line="13" pos:column="39"/></expr_stmt>
    <expr_stmt><expr><name pos:line="14" pos:column="5">first_thread_limit<pos:position pos:line="14" pos:column="23"/></name> <operator pos:line="14" pos:column="24">=<pos:position pos:line="14" pos:column="25"/></operator> <name pos:line="14" pos:column="26">thread_limit<pos:position pos:line="14" pos:column="38"/></name></expr>;<pos:position pos:line="14" pos:column="39"/></expr_stmt>
    <if pos:line="15" pos:column="5">if <condition pos:line="15" pos:column="8">(<expr><name pos:line="15" pos:column="9">changed_limit_at_restart<pos:position pos:line="15" pos:column="33"/></name></expr>)<pos:position pos:line="15" pos:column="34"/></condition><then pos:line="15" pos:column="34"> <block pos:line="15" pos:column="35">{
        <expr_stmt><expr><call><name pos:line="16" pos:column="9">ap_log_error<pos:position pos:line="16" pos:column="21"/></name><argument_list pos:line="16" pos:column="21">(<argument><expr><name pos:line="16" pos:column="22">APLOG_MARK<pos:position pos:line="16" pos:column="32"/></name></expr></argument>, <argument><expr><name pos:line="16" pos:column="34">APLOG_WARNING<pos:position pos:line="16" pos:column="47"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="16" pos:column="49">0<pos:position pos:line="16" pos:column="50"/></literal></expr></argument>, <argument><expr><name pos:line="16" pos:column="52">s<pos:position pos:line="16" pos:column="53"/></name></expr></argument>,
                     <argument><expr><literal type="string" pos:line="17" pos:column="22">"WARNING: Attempt to change ServerLimit or ThreadLimit "<pos:position pos:line="17" pos:column="78"/></literal>
                     <literal type="string" pos:line="18" pos:column="22">"ignored during restart"<pos:position pos:line="18" pos:column="46"/></literal></expr></argument>)<pos:position pos:line="18" pos:column="47"/></argument_list></call></expr>;<pos:position pos:line="18" pos:column="48"/></expr_stmt>
        <expr_stmt><expr><name pos:line="19" pos:column="9">changed_limit_at_restart<pos:position pos:line="19" pos:column="33"/></name> <operator pos:line="19" pos:column="34">=<pos:position pos:line="19" pos:column="35"/></operator> <literal type="number" pos:line="19" pos:column="36">0<pos:position pos:line="19" pos:column="37"/></literal></expr>;<pos:position pos:line="19" pos:column="38"/></expr_stmt>
    }<pos:position pos:line="20" pos:column="6"/></block></then></if>

    <expr_stmt><expr><name pos:line="22" pos:column="5">ap_server_conf<pos:position pos:line="22" pos:column="19"/></name> <operator pos:line="22" pos:column="20">=<pos:position pos:line="22" pos:column="21"/></operator> <name pos:line="22" pos:column="22">s<pos:position pos:line="22" pos:column="23"/></name></expr>;<pos:position pos:line="22" pos:column="24"/></expr_stmt>

    <if pos:line="24" pos:column="5">if <condition pos:line="24" pos:column="8">(<expr><operator pos:line="24" pos:column="9">(<pos:position pos:line="24" pos:column="10"/></operator><name pos:line="24" pos:column="10">ap_accept_lock_mech<pos:position pos:line="24" pos:column="29"/></name> <operator pos:line="24" pos:column="30">==<pos:position pos:line="24" pos:column="32"/></operator> <name pos:line="24" pos:column="33">APR_LOCK_SYSVSEM<pos:position pos:line="24" pos:column="49"/></name><operator pos:line="24" pos:column="49">)<pos:position pos:line="24" pos:column="50"/></operator> <operator pos:line="24" pos:column="51">||<pos:position pos:line="24" pos:column="53"/></operator> 
        <operator pos:line="25" pos:column="9">(<pos:position pos:line="25" pos:column="10"/></operator><name pos:line="25" pos:column="10">ap_accept_lock_mech<pos:position pos:line="25" pos:column="29"/></name> <operator pos:line="25" pos:column="30">==<pos:position pos:line="25" pos:column="32"/></operator> <name pos:line="25" pos:column="33">APR_LOCK_POSIXSEM<pos:position pos:line="25" pos:column="50"/></name><operator pos:line="25" pos:column="50">)<pos:position pos:line="25" pos:column="51"/></operator></expr>)<pos:position pos:line="25" pos:column="52"/></condition><then pos:line="25" pos:column="52"> <block pos:line="25" pos:column="53">{
        <expr_stmt><expr><call><name pos:line="26" pos:column="9">ap_log_error<pos:position pos:line="26" pos:column="21"/></name><argument_list pos:line="26" pos:column="21">(<argument><expr><name pos:line="26" pos:column="22">APLOG_MARK<pos:position pos:line="26" pos:column="32"/></name></expr></argument>, <argument><expr><name pos:line="26" pos:column="34">APLOG_WARNING<pos:position pos:line="26" pos:column="47"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="26" pos:column="49">0<pos:position pos:line="26" pos:column="50"/></literal></expr></argument>, <argument><expr><name pos:line="26" pos:column="52">s<pos:position pos:line="26" pos:column="53"/></name></expr></argument>,
                     <argument><expr><literal type="string" pos:line="27" pos:column="22">"Server configured for an accept lock mechanism that "<pos:position pos:line="27" pos:column="76"/></literal>
                     <literal type="string" pos:line="28" pos:column="22">"cannot be used with perchild.  Falling back to FCNTL."<pos:position pos:line="28" pos:column="77"/></literal></expr></argument>)<pos:position pos:line="28" pos:column="78"/></argument_list></call></expr>;<pos:position pos:line="28" pos:column="79"/></expr_stmt>
        <expr_stmt><expr><name pos:line="29" pos:column="9">ap_accept_lock_mech<pos:position pos:line="29" pos:column="28"/></name> <operator pos:line="29" pos:column="29">=<pos:position pos:line="29" pos:column="30"/></operator> <name pos:line="29" pos:column="31">APR_LOCK_FCNTL<pos:position pos:line="29" pos:column="45"/></name></expr>;<pos:position pos:line="29" pos:column="46"/></expr_stmt>
    }<pos:position pos:line="30" pos:column="6"/></block></then></if>

    <comment type="block" pos:line="32" pos:column="5">/* Initialize cross-process accept lock */</comment>
    <expr_stmt><expr><name pos:line="33" pos:column="5">ap_lock_fname<pos:position pos:line="33" pos:column="18"/></name> <operator pos:line="33" pos:column="19">=<pos:position pos:line="33" pos:column="20"/></operator> <call><name pos:line="33" pos:column="21">apr_psprintf<pos:position pos:line="33" pos:column="33"/></name><argument_list pos:line="33" pos:column="33">(<argument><expr><name pos:line="33" pos:column="34">_pconf<pos:position pos:line="33" pos:column="40"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="33" pos:column="42">"%s.%u"<pos:position pos:line="33" pos:column="49"/></literal></expr></argument>,
                                 <argument><expr><call><name pos:line="34" pos:column="34">ap_server_root_relative<pos:position pos:line="34" pos:column="57"/></name><argument_list pos:line="34" pos:column="57">(<argument><expr><name pos:line="34" pos:column="58">_pconf<pos:position pos:line="34" pos:column="64"/></name></expr></argument>, <argument><expr><name pos:line="34" pos:column="66">ap_lock_fname<pos:position pos:line="34" pos:column="79"/></name></expr></argument>)<pos:position pos:line="34" pos:column="80"/></argument_list></call></expr></argument>,
                                 <argument><expr><name pos:line="35" pos:column="34">my_pid<pos:position pos:line="35" pos:column="40"/></name></expr></argument>)<pos:position pos:line="35" pos:column="41"/></argument_list></call></expr>;<pos:position pos:line="35" pos:column="42"/></expr_stmt>
    <expr_stmt><expr><name pos:line="36" pos:column="5">rv<pos:position pos:line="36" pos:column="7"/></name> <operator pos:line="36" pos:column="8">=<pos:position pos:line="36" pos:column="9"/></operator> <call><name pos:line="36" pos:column="10">SAFE_ACCEPT<pos:position pos:line="36" pos:column="21"/></name><argument_list pos:line="36" pos:column="21">(<argument><expr><call><name pos:line="36" pos:column="22">apr_proc_mutex_create<pos:position pos:line="36" pos:column="43"/></name><argument_list pos:line="36" pos:column="43">(<argument><expr><operator pos:line="36" pos:column="44">&amp;<pos:position pos:line="36" pos:column="49"/></operator><name pos:line="36" pos:column="45">process_accept_mutex<pos:position pos:line="36" pos:column="65"/></name></expr></argument>,
                                     <argument><expr><name pos:line="37" pos:column="38">ap_lock_fname<pos:position pos:line="37" pos:column="51"/></name></expr></argument>, <argument><expr><name pos:line="37" pos:column="53">ap_accept_lock_mech<pos:position pos:line="37" pos:column="72"/></name></expr></argument>,
                                     <argument><expr><name pos:line="38" pos:column="38">_pconf<pos:position pos:line="38" pos:column="44"/></name></expr></argument>)<pos:position pos:line="38" pos:column="45"/></argument_list></call></expr></argument>)<pos:position pos:line="38" pos:column="46"/></argument_list></call></expr>;<pos:position pos:line="38" pos:column="47"/></expr_stmt>
    <if pos:line="39" pos:column="5">if <condition pos:line="39" pos:column="8">(<expr><name pos:line="39" pos:column="9">rv<pos:position pos:line="39" pos:column="11"/></name> <operator pos:line="39" pos:column="12">!=<pos:position pos:line="39" pos:column="14"/></operator> <name pos:line="39" pos:column="15">APR_SUCCESS<pos:position pos:line="39" pos:column="26"/></name></expr>)<pos:position pos:line="39" pos:column="27"/></condition><then pos:line="39" pos:column="27"> <block pos:line="39" pos:column="28">{
        <expr_stmt><expr><call><name pos:line="40" pos:column="9">ap_log_error<pos:position pos:line="40" pos:column="21"/></name><argument_list pos:line="40" pos:column="21">(<argument><expr><name pos:line="40" pos:column="22">APLOG_MARK<pos:position pos:line="40" pos:column="32"/></name></expr></argument>, <argument><expr><name pos:line="40" pos:column="34">APLOG_EMERG<pos:position pos:line="40" pos:column="45"/></name></expr></argument>, <argument><expr><name pos:line="40" pos:column="47">rv<pos:position pos:line="40" pos:column="49"/></name></expr></argument>, <argument><expr><name pos:line="40" pos:column="51">s<pos:position pos:line="40" pos:column="52"/></name></expr></argument>,
                     <argument><expr><literal type="string" pos:line="41" pos:column="22">"Couldn't create cross-process lock"<pos:position pos:line="41" pos:column="58"/></literal></expr></argument>)<pos:position pos:line="41" pos:column="59"/></argument_list></call></expr>;<pos:position pos:line="41" pos:column="60"/></expr_stmt>
        <return pos:line="42" pos:column="9">return <expr><literal type="number" pos:line="42" pos:column="16">1<pos:position pos:line="42" pos:column="17"/></literal></expr>;<pos:position pos:line="42" pos:column="18"/></return>
    }<pos:position pos:line="43" pos:column="6"/></block></then></if>

    <if pos:line="45" pos:column="5">if <condition pos:line="45" pos:column="8">(<expr><operator pos:line="45" pos:column="9">!<pos:position pos:line="45" pos:column="10"/></operator><name pos:line="45" pos:column="10">is_graceful<pos:position pos:line="45" pos:column="21"/></name></expr>)<pos:position pos:line="45" pos:column="22"/></condition><then pos:line="45" pos:column="22"> <block pos:line="45" pos:column="23">{
        <if pos:line="46" pos:column="9">if <condition pos:line="46" pos:column="12">(<expr><call><name pos:line="46" pos:column="13">ap_run_pre_mpm<pos:position pos:line="46" pos:column="27"/></name><argument_list pos:line="46" pos:column="27">(<argument><expr><name><name pos:line="46" pos:column="28">s<pos:position pos:line="46" pos:column="29"/></name><operator pos:line="46" pos:column="29">-&gt;<pos:position pos:line="46" pos:column="34"/></operator><name pos:line="46" pos:column="31">process<pos:position pos:line="46" pos:column="38"/></name><operator pos:line="46" pos:column="38">-&gt;<pos:position pos:line="46" pos:column="43"/></operator><name pos:line="46" pos:column="40">pool<pos:position pos:line="46" pos:column="44"/></name></name></expr></argument>, <argument><expr><name pos:line="46" pos:column="46">SB_SHARED<pos:position pos:line="46" pos:column="55"/></name></expr></argument>)<pos:position pos:line="46" pos:column="56"/></argument_list></call> <operator pos:line="46" pos:column="57">!=<pos:position pos:line="46" pos:column="59"/></operator> <name pos:line="46" pos:column="60">OK<pos:position pos:line="46" pos:column="62"/></name></expr>)<pos:position pos:line="46" pos:column="63"/></condition><then pos:line="46" pos:column="63"> <block pos:line="46" pos:column="64">{
            <return pos:line="47" pos:column="13">return <expr><literal type="number" pos:line="47" pos:column="20">1<pos:position pos:line="47" pos:column="21"/></literal></expr>;<pos:position pos:line="47" pos:column="22"/></return>
        }<pos:position pos:line="48" pos:column="10"/></block></then></if>
    }<pos:position pos:line="49" pos:column="6"/></block></then></if>
    <comment type="block" pos:line="50" pos:column="5">/* Initialize the child table */</comment>
    <if pos:line="51" pos:column="5">if <condition pos:line="51" pos:column="8">(<expr><operator pos:line="51" pos:column="9">!<pos:position pos:line="51" pos:column="10"/></operator><name pos:line="51" pos:column="10">is_graceful<pos:position pos:line="51" pos:column="21"/></name></expr>)<pos:position pos:line="51" pos:column="22"/></condition><then pos:line="51" pos:column="22"> <block pos:line="51" pos:column="23">{
        <for pos:line="52" pos:column="9">for <control pos:line="52" pos:column="13">(<init><expr><name pos:line="52" pos:column="14">i<pos:position pos:line="52" pos:column="15"/></name> <operator pos:line="52" pos:column="16">=<pos:position pos:line="52" pos:column="17"/></operator> <literal type="number" pos:line="52" pos:column="18">0<pos:position pos:line="52" pos:column="19"/></literal></expr>;<pos:position pos:line="52" pos:column="20"/></init> <condition><expr><name pos:line="52" pos:column="21">i<pos:position pos:line="52" pos:column="22"/></name> <operator pos:line="52" pos:column="23">&lt;<pos:position pos:line="52" pos:column="27"/></operator> <name pos:line="52" pos:column="25">server_limit<pos:position pos:line="52" pos:column="37"/></name></expr>;<pos:position pos:line="52" pos:column="38"/></condition> <incr><expr><name pos:line="52" pos:column="39">i<pos:position pos:line="52" pos:column="40"/></name><operator pos:line="52" pos:column="40">++<pos:position pos:line="52" pos:column="42"/></operator></expr></incr>)<pos:position pos:line="52" pos:column="43"/></control> <block pos:line="52" pos:column="44">{
            <expr_stmt><expr><name><name pos:line="53" pos:column="13">ap_child_table<pos:position pos:line="53" pos:column="27"/></name><index pos:line="53" pos:column="27">[<expr><name pos:line="53" pos:column="28">i<pos:position pos:line="53" pos:column="29"/></name></expr>]<pos:position pos:line="53" pos:column="30"/></index></name><operator pos:line="53" pos:column="30">.<pos:position pos:line="53" pos:column="31"/></operator><name pos:line="53" pos:column="31">pid<pos:position pos:line="53" pos:column="34"/></name> <operator pos:line="53" pos:column="35">=<pos:position pos:line="53" pos:column="36"/></operator> <literal type="number" pos:line="53" pos:column="37">0<pos:position pos:line="53" pos:column="38"/></literal></expr>;<pos:position pos:line="53" pos:column="39"/></expr_stmt>
        }<pos:position pos:line="54" pos:column="10"/></block></for>
    }<pos:position pos:line="55" pos:column="6"/></block></then></if>

    <comment type="block" pos:line="57" pos:column="5">/* We need to put the new listeners at the end of the ap_listeners
     * list.  If we don't, then the pool will be cleared before the
     * open_logs phase is called for the second time, and ap_listeners
     * will have only invalid data.  If that happens, then the sockets
     * that we opened using make_sock() will be lost, and the server
     * won't start.
     */</comment>
    <for pos:line="64" pos:column="5">for <control pos:line="64" pos:column="9">(<init><expr><name pos:line="64" pos:column="10">lr<pos:position pos:line="64" pos:column="12"/></name> <operator pos:line="64" pos:column="13">=<pos:position pos:line="64" pos:column="14"/></operator> <name pos:line="64" pos:column="15">ap_listeners<pos:position pos:line="64" pos:column="27"/></name></expr> ;<pos:position pos:line="64" pos:column="29"/></init> <condition><expr><name><name pos:line="64" pos:column="30">lr<pos:position pos:line="64" pos:column="32"/></name><operator pos:line="64" pos:column="32">-&gt;<pos:position pos:line="64" pos:column="37"/></operator><name pos:line="64" pos:column="34">next<pos:position pos:line="64" pos:column="38"/></name></name> <operator pos:line="64" pos:column="39">!=<pos:position pos:line="64" pos:column="41"/></operator> <name pos:line="64" pos:column="42">NULL<pos:position pos:line="64" pos:column="46"/></name></expr>;<pos:position pos:line="64" pos:column="47"/></condition> <incr><expr><name pos:line="64" pos:column="48">lr<pos:position pos:line="64" pos:column="50"/></name> <operator pos:line="64" pos:column="51">=<pos:position pos:line="64" pos:column="52"/></operator> <name><name pos:line="64" pos:column="53">lr<pos:position pos:line="64" pos:column="55"/></name><operator pos:line="64" pos:column="55">-&gt;<pos:position pos:line="64" pos:column="60"/></operator><name pos:line="64" pos:column="57">next<pos:position pos:line="64" pos:column="61"/></name></name></expr></incr>)<pos:position pos:line="64" pos:column="62"/></control> <block pos:line="64" pos:column="63">{
        <continue pos:line="65" pos:column="9">continue;<pos:position pos:line="65" pos:column="18"/></continue>
    }<pos:position pos:line="66" pos:column="6"/></block></for>

    <expr_stmt><expr><call><name pos:line="68" pos:column="5">apr_os_file_get<pos:position pos:line="68" pos:column="20"/></name><argument_list pos:line="68" pos:column="20">(<argument><expr><operator pos:line="68" pos:column="21">&amp;<pos:position pos:line="68" pos:column="26"/></operator><name pos:line="68" pos:column="22">fd<pos:position pos:line="68" pos:column="24"/></name></expr></argument>, <argument><expr><name pos:line="68" pos:column="26">pipe_of_death_in<pos:position pos:line="68" pos:column="42"/></name></expr></argument>)<pos:position pos:line="68" pos:column="43"/></argument_list></call></expr>;<pos:position pos:line="68" pos:column="44"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="69" pos:column="5">apr_os_sock_put<pos:position pos:line="69" pos:column="20"/></name><argument_list pos:line="69" pos:column="20">(<argument><expr><operator pos:line="69" pos:column="21">&amp;<pos:position pos:line="69" pos:column="26"/></operator><name pos:line="69" pos:column="22">sock<pos:position pos:line="69" pos:column="26"/></name></expr></argument>, <argument><expr><operator pos:line="69" pos:column="28">&amp;<pos:position pos:line="69" pos:column="33"/></operator><name pos:line="69" pos:column="29">fd<pos:position pos:line="69" pos:column="31"/></name></expr></argument>, <argument><expr><name pos:line="69" pos:column="33">pconf<pos:position pos:line="69" pos:column="38"/></name></expr></argument>)<pos:position pos:line="69" pos:column="39"/></argument_list></call></expr>;<pos:position pos:line="69" pos:column="40"/></expr_stmt>
    <expr_stmt><expr><name><name pos:line="70" pos:column="5">lr<pos:position pos:line="70" pos:column="7"/></name><operator pos:line="70" pos:column="7">-&gt;<pos:position pos:line="70" pos:column="12"/></operator><name pos:line="70" pos:column="9">next<pos:position pos:line="70" pos:column="13"/></name></name> <operator pos:line="70" pos:column="14">=<pos:position pos:line="70" pos:column="15"/></operator> <call><name pos:line="70" pos:column="16">apr_palloc<pos:position pos:line="70" pos:column="26"/></name><argument_list pos:line="70" pos:column="26">(<argument><expr><name pos:line="70" pos:column="27">pconf<pos:position pos:line="70" pos:column="32"/></name></expr></argument>, <argument><expr><sizeof pos:line="70" pos:column="34">sizeof<argument_list pos:line="70" pos:column="40">(<argument><expr><operator pos:line="70" pos:column="41">*<pos:position pos:line="70" pos:column="42"/></operator><name pos:line="70" pos:column="42">lr<pos:position pos:line="70" pos:column="44"/></name></expr></argument>)<pos:position pos:line="70" pos:column="45"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="70" pos:column="46"/></argument_list></call></expr>;<pos:position pos:line="70" pos:column="47"/></expr_stmt>
    <expr_stmt><expr><name><name pos:line="71" pos:column="5">lr<pos:position pos:line="71" pos:column="7"/></name><operator pos:line="71" pos:column="7">-&gt;<pos:position pos:line="71" pos:column="12"/></operator><name pos:line="71" pos:column="9">next<pos:position pos:line="71" pos:column="13"/></name><operator pos:line="71" pos:column="13">-&gt;<pos:position pos:line="71" pos:column="18"/></operator><name pos:line="71" pos:column="15">sd<pos:position pos:line="71" pos:column="17"/></name></name> <operator pos:line="71" pos:column="18">=<pos:position pos:line="71" pos:column="19"/></operator> <name pos:line="71" pos:column="20">sock<pos:position pos:line="71" pos:column="24"/></name></expr>;<pos:position pos:line="71" pos:column="25"/></expr_stmt>
    <expr_stmt><expr><name><name pos:line="72" pos:column="5">lr<pos:position pos:line="72" pos:column="7"/></name><operator pos:line="72" pos:column="7">-&gt;<pos:position pos:line="72" pos:column="12"/></operator><name pos:line="72" pos:column="9">next<pos:position pos:line="72" pos:column="13"/></name><operator pos:line="72" pos:column="13">-&gt;<pos:position pos:line="72" pos:column="18"/></operator><name pos:line="72" pos:column="15">active<pos:position pos:line="72" pos:column="21"/></name></name> <operator pos:line="72" pos:column="22">=<pos:position pos:line="72" pos:column="23"/></operator> <literal type="number" pos:line="72" pos:column="24">1<pos:position pos:line="72" pos:column="25"/></literal></expr>;<pos:position pos:line="72" pos:column="26"/></expr_stmt>
    <expr_stmt><expr><name><name pos:line="73" pos:column="5">lr<pos:position pos:line="73" pos:column="7"/></name><operator pos:line="73" pos:column="7">-&gt;<pos:position pos:line="73" pos:column="12"/></operator><name pos:line="73" pos:column="9">next<pos:position pos:line="73" pos:column="13"/></name><operator pos:line="73" pos:column="13">-&gt;<pos:position pos:line="73" pos:column="18"/></operator><name pos:line="73" pos:column="15">accept_func<pos:position pos:line="73" pos:column="26"/></name></name> <operator pos:line="73" pos:column="27">=<pos:position pos:line="73" pos:column="28"/></operator> <name pos:line="73" pos:column="29">check_pipe_of_death<pos:position pos:line="73" pos:column="48"/></name></expr>;<pos:position pos:line="73" pos:column="49"/></expr_stmt>
    <expr_stmt><expr><name><name pos:line="74" pos:column="5">lr<pos:position pos:line="74" pos:column="7"/></name><operator pos:line="74" pos:column="7">-&gt;<pos:position pos:line="74" pos:column="12"/></operator><name pos:line="74" pos:column="9">next<pos:position pos:line="74" pos:column="13"/></name><operator pos:line="74" pos:column="13">-&gt;<pos:position pos:line="74" pos:column="18"/></operator><name pos:line="74" pos:column="15">next<pos:position pos:line="74" pos:column="19"/></name></name> <operator pos:line="74" pos:column="20">=<pos:position pos:line="74" pos:column="21"/></operator> <name pos:line="74" pos:column="22">NULL<pos:position pos:line="74" pos:column="26"/></name></expr>;<pos:position pos:line="74" pos:column="27"/></expr_stmt>
    <expr_stmt><expr><name pos:line="75" pos:column="5">lr<pos:position pos:line="75" pos:column="7"/></name> <operator pos:line="75" pos:column="8">=<pos:position pos:line="75" pos:column="9"/></operator> <name><name pos:line="75" pos:column="10">lr<pos:position pos:line="75" pos:column="12"/></name><operator pos:line="75" pos:column="12">-&gt;<pos:position pos:line="75" pos:column="17"/></operator><name pos:line="75" pos:column="14">next<pos:position pos:line="75" pos:column="18"/></name></name></expr>;<pos:position pos:line="75" pos:column="19"/></expr_stmt>
    <expr_stmt><expr><name pos:line="76" pos:column="5">num_listensocks<pos:position pos:line="76" pos:column="20"/></name><operator pos:line="76" pos:column="20">++<pos:position pos:line="76" pos:column="22"/></operator></expr>;<pos:position pos:line="76" pos:column="23"/></expr_stmt>

    <expr_stmt><expr><call><name pos:line="78" pos:column="5">set_signals<pos:position pos:line="78" pos:column="16"/></name><argument_list pos:line="78" pos:column="16">()<pos:position pos:line="78" pos:column="18"/></argument_list></call></expr>;<pos:position pos:line="78" pos:column="19"/></expr_stmt>

    <comment type="block" pos:line="80" pos:column="5">/* If we're doing a graceful_restart then we're going to see a lot
     * of children exiting immediately when we get into the main loop
     * below (because we just sent them AP_SIG_GRACEFUL).  This happens 
     * pretty rapidly... and for each one that exits we'll start a new one 
     * until we reach at least daemons_min_free.  But we may be permitted to
     * start more than that, so we'll just keep track of how many we're
     * supposed to start up without the 1 second penalty between each fork.
     */</comment>
    <expr_stmt><expr><name pos:line="88" pos:column="5">remaining_children_to_start<pos:position pos:line="88" pos:column="32"/></name> <operator pos:line="88" pos:column="33">=<pos:position pos:line="88" pos:column="34"/></operator> <name pos:line="88" pos:column="35">num_daemons<pos:position pos:line="88" pos:column="46"/></name></expr>;<pos:position pos:line="88" pos:column="47"/></expr_stmt>
    <if pos:line="89" pos:column="5">if <condition pos:line="89" pos:column="8">(<expr><operator pos:line="89" pos:column="9">!<pos:position pos:line="89" pos:column="10"/></operator><name pos:line="89" pos:column="10">is_graceful<pos:position pos:line="89" pos:column="21"/></name></expr>)<pos:position pos:line="89" pos:column="22"/></condition><then pos:line="89" pos:column="22"> <block pos:line="89" pos:column="23">{
        <expr_stmt><expr><name pos:line="90" pos:column="9">remaining_children_to_start<pos:position pos:line="90" pos:column="36"/></name> <operator pos:line="90" pos:column="37">=<pos:position pos:line="90" pos:column="38"/></operator> \
            <call><name pos:line="91" pos:column="13">startup_children<pos:position pos:line="91" pos:column="29"/></name><argument_list pos:line="91" pos:column="29">(<argument><expr><name pos:line="91" pos:column="30">remaining_children_to_start<pos:position pos:line="91" pos:column="57"/></name></expr></argument>)<pos:position pos:line="91" pos:column="58"/></argument_list></call></expr>;<pos:position pos:line="91" pos:column="59"/></expr_stmt>
    }<pos:position pos:line="92" pos:column="6"/></block></then>
    <else pos:line="93" pos:column="5">else <block pos:line="93" pos:column="10">{
        <comment type="block" pos:line="94" pos:column="9">/* give the system some time to recover before kicking into
         * exponential mode */</comment>
        <expr_stmt><expr><name pos:line="96" pos:column="9">hold_off_on_exponential_spawning<pos:position pos:line="96" pos:column="41"/></name> <operator pos:line="96" pos:column="42">=<pos:position pos:line="96" pos:column="43"/></operator> <literal type="number" pos:line="96" pos:column="44">10<pos:position pos:line="96" pos:column="46"/></literal></expr>;<pos:position pos:line="96" pos:column="47"/></expr_stmt>
    }<pos:position pos:line="97" pos:column="6"/></block></else></if>

    <expr_stmt><expr><call><name pos:line="99" pos:column="5">ap_log_error<pos:position pos:line="99" pos:column="17"/></name><argument_list pos:line="99" pos:column="17">(<argument><expr><name pos:line="99" pos:column="18">APLOG_MARK<pos:position pos:line="99" pos:column="28"/></name></expr></argument>, <argument><expr><name pos:line="99" pos:column="30">APLOG_NOTICE<pos:position pos:line="99" pos:column="42"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="99" pos:column="44">0<pos:position pos:line="99" pos:column="45"/></literal></expr></argument>, <argument><expr><name pos:line="99" pos:column="47">ap_server_conf<pos:position pos:line="99" pos:column="61"/></name></expr></argument>,
                 <argument><expr><literal type="string" pos:line="100" pos:column="18">"%s configured -- resuming normal operations"<pos:position pos:line="100" pos:column="63"/></literal></expr></argument>,
                 <argument><expr><call><name pos:line="101" pos:column="18">ap_get_server_version<pos:position pos:line="101" pos:column="39"/></name><argument_list pos:line="101" pos:column="39">()<pos:position pos:line="101" pos:column="41"/></argument_list></call></expr></argument>)<pos:position pos:line="101" pos:column="42"/></argument_list></call></expr>;<pos:position pos:line="101" pos:column="43"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="102" pos:column="5">ap_log_error<pos:position pos:line="102" pos:column="17"/></name><argument_list pos:line="102" pos:column="17">(<argument><expr><name pos:line="102" pos:column="18">APLOG_MARK<pos:position pos:line="102" pos:column="28"/></name></expr></argument>, <argument><expr><name pos:line="102" pos:column="30">APLOG_INFO<pos:position pos:line="102" pos:column="40"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="102" pos:column="42">0<pos:position pos:line="102" pos:column="43"/></literal></expr></argument>, <argument><expr><name pos:line="102" pos:column="45">ap_server_conf<pos:position pos:line="102" pos:column="59"/></name></expr></argument>,
                 <argument><expr><literal type="string" pos:line="103" pos:column="18">"Server built: %s"<pos:position pos:line="103" pos:column="36"/></literal></expr></argument>, <argument><expr><call><name pos:line="103" pos:column="38">ap_get_server_built<pos:position pos:line="103" pos:column="57"/></name><argument_list pos:line="103" pos:column="57">()<pos:position pos:line="103" pos:column="59"/></argument_list></call></expr></argument>)<pos:position pos:line="103" pos:column="60"/></argument_list></call></expr>;<pos:position pos:line="103" pos:column="61"/></expr_stmt>
<cpp:ifdef pos:line="104" pos:column="1">#<cpp:directive pos:line="104" pos:column="2">ifdef<pos:position pos:line="104" pos:column="7"/></cpp:directive> <name pos:line="104" pos:column="8">AP_MPM_WANT_SET_ACCEPT_LOCK_MECH<pos:position pos:line="104" pos:column="40"/></name></cpp:ifdef>
    <expr_stmt><expr><call><name pos:line="105" pos:column="5">ap_log_error<pos:position pos:line="105" pos:column="17"/></name><argument_list pos:line="105" pos:column="17">(<argument><expr><name pos:line="105" pos:column="18">APLOG_MARK<pos:position pos:line="105" pos:column="28"/></name></expr></argument>, <argument><expr><name pos:line="105" pos:column="30">APLOG_DEBUG<pos:position pos:line="105" pos:column="41"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="105" pos:column="43">0<pos:position pos:line="105" pos:column="44"/></literal></expr></argument>, <argument><expr><name pos:line="105" pos:column="46">ap_server_conf<pos:position pos:line="105" pos:column="60"/></name></expr></argument>,
		<argument><expr><literal type="string" pos:line="106" pos:column="17">"AcceptMutex: %s (default: %s)"<pos:position pos:line="106" pos:column="48"/></literal></expr></argument>,
		<argument><expr><call><name pos:line="107" pos:column="17">apr_proc_mutex_name<pos:position pos:line="107" pos:column="36"/></name><argument_list pos:line="107" pos:column="36">(<argument><expr><name pos:line="107" pos:column="37">process_accept_mutex<pos:position pos:line="107" pos:column="57"/></name></expr></argument>)<pos:position pos:line="107" pos:column="58"/></argument_list></call></expr></argument>,
		<argument><expr><call><name pos:line="108" pos:column="17">apr_proc_mutex_defname<pos:position pos:line="108" pos:column="39"/></name><argument_list pos:line="108" pos:column="39">()<pos:position pos:line="108" pos:column="41"/></argument_list></call></expr></argument>)<pos:position pos:line="108" pos:column="42"/></argument_list></call></expr>;<pos:position pos:line="108" pos:column="43"/></expr_stmt>
<cpp:endif pos:line="109" pos:column="1">#<cpp:directive pos:line="109" pos:column="2">endif<pos:position pos:line="109" pos:column="7"/></cpp:directive></cpp:endif>
    <expr_stmt><expr><name pos:line="110" pos:column="5">restart_pending<pos:position pos:line="110" pos:column="20"/></name> <operator pos:line="110" pos:column="21">=<pos:position pos:line="110" pos:column="22"/></operator> <name pos:line="110" pos:column="23">shutdown_pending<pos:position pos:line="110" pos:column="39"/></name> <operator pos:line="110" pos:column="40">=<pos:position pos:line="110" pos:column="41"/></operator> <literal type="number" pos:line="110" pos:column="42">0<pos:position pos:line="110" pos:column="43"/></literal></expr>;<pos:position pos:line="110" pos:column="44"/></expr_stmt>

    <expr_stmt><expr><call><name pos:line="112" pos:column="5">server_main_loop<pos:position pos:line="112" pos:column="21"/></name><argument_list pos:line="112" pos:column="21">(<argument><expr><name pos:line="112" pos:column="22">remaining_children_to_start<pos:position pos:line="112" pos:column="49"/></name></expr></argument>)<pos:position pos:line="112" pos:column="50"/></argument_list></call></expr>;<pos:position pos:line="112" pos:column="51"/></expr_stmt>

    <if pos:line="114" pos:column="5">if <condition pos:line="114" pos:column="8">(<expr><name pos:line="114" pos:column="9">shutdown_pending<pos:position pos:line="114" pos:column="25"/></name></expr>)<pos:position pos:line="114" pos:column="26"/></condition><then pos:line="114" pos:column="26"> <block pos:line="114" pos:column="27">{
        <comment type="block" pos:line="115" pos:column="9">/* Time to gracefully shut down:
         * Kill child processes, tell them to call child_exit, etc...
         */</comment>
        <if pos:line="118" pos:column="9">if <condition pos:line="118" pos:column="12">(<expr><call><name pos:line="118" pos:column="13">unixd_killpg<pos:position pos:line="118" pos:column="25"/></name><argument_list pos:line="118" pos:column="25">(<argument><expr><call><name pos:line="118" pos:column="26">getpgrp<pos:position pos:line="118" pos:column="33"/></name><argument_list pos:line="118" pos:column="33">()<pos:position pos:line="118" pos:column="35"/></argument_list></call></expr></argument>, <argument><expr><name pos:line="118" pos:column="37">SIGTERM<pos:position pos:line="118" pos:column="44"/></name></expr></argument>)<pos:position pos:line="118" pos:column="45"/></argument_list></call> <operator pos:line="118" pos:column="46">&lt;<pos:position pos:line="118" pos:column="50"/></operator> <literal type="number" pos:line="118" pos:column="48">0<pos:position pos:line="118" pos:column="49"/></literal></expr>)<pos:position pos:line="118" pos:column="50"/></condition><then pos:line="118" pos:column="50"> <block pos:line="118" pos:column="51">{
            <expr_stmt><expr><call><name pos:line="119" pos:column="13">ap_log_error<pos:position pos:line="119" pos:column="25"/></name><argument_list pos:line="119" pos:column="25">(<argument><expr><name pos:line="119" pos:column="26">APLOG_MARK<pos:position pos:line="119" pos:column="36"/></name></expr></argument>, <argument><expr><name pos:line="119" pos:column="38">APLOG_WARNING<pos:position pos:line="119" pos:column="51"/></name></expr></argument>, <argument><expr><name pos:line="119" pos:column="53">errno<pos:position pos:line="119" pos:column="58"/></name></expr></argument>, <argument><expr><name pos:line="119" pos:column="60">ap_server_conf<pos:position pos:line="119" pos:column="74"/></name></expr></argument>,
                         <argument><expr><literal type="string" pos:line="120" pos:column="26">"killpg SIGTERM"<pos:position pos:line="120" pos:column="42"/></literal></expr></argument>)<pos:position pos:line="120" pos:column="43"/></argument_list></call></expr>;<pos:position pos:line="120" pos:column="44"/></expr_stmt>
        }<pos:position pos:line="121" pos:column="10"/></block></then></if>
        <expr_stmt><expr><call><name pos:line="122" pos:column="9">ap_reclaim_child_processes<pos:position pos:line="122" pos:column="35"/></name><argument_list pos:line="122" pos:column="35">(<argument><expr><literal type="number" pos:line="122" pos:column="36">1<pos:position pos:line="122" pos:column="37"/></literal></expr></argument>)<pos:position pos:line="122" pos:column="38"/></argument_list></call></expr>;<pos:position pos:line="122" pos:column="39"/></expr_stmt>      <comment type="block" pos:line="122" pos:column="45">/* Start with SIGTERM */</comment>

        <if pos:line="124" pos:column="9">if <condition pos:line="124" pos:column="12">(<expr><operator pos:line="124" pos:column="13">!<pos:position pos:line="124" pos:column="14"/></operator><name pos:line="124" pos:column="14">child_fatal<pos:position pos:line="124" pos:column="25"/></name></expr>)<pos:position pos:line="124" pos:column="26"/></condition><then pos:line="124" pos:column="26"> <block pos:line="124" pos:column="27">{
            <comment type="block" pos:line="125" pos:column="13">/* cleanup pid file on normal shutdown */</comment>
            <decl_stmt><decl><type><specifier pos:line="126" pos:column="13">const<pos:position pos:line="126" pos:column="18"/></specifier> <name pos:line="126" pos:column="19">char<pos:position pos:line="126" pos:column="23"/></name> <modifier pos:line="126" pos:column="24">*<pos:position pos:line="126" pos:column="25"/></modifier></type><name pos:line="126" pos:column="25">pidfile<pos:position pos:line="126" pos:column="32"/></name> <init pos:line="126" pos:column="33">= <expr><name pos:line="126" pos:column="35">NULL<pos:position pos:line="126" pos:column="39"/></name></expr></init></decl>;<pos:position pos:line="126" pos:column="40"/></decl_stmt>
            <expr_stmt><expr><name pos:line="127" pos:column="13">pidfile<pos:position pos:line="127" pos:column="20"/></name> <operator pos:line="127" pos:column="21">=<pos:position pos:line="127" pos:column="22"/></operator> <call><name pos:line="127" pos:column="23">ap_server_root_relative<pos:position pos:line="127" pos:column="46"/></name> <argument_list pos:line="127" pos:column="47">(<argument><expr><name pos:line="127" pos:column="48">pconf<pos:position pos:line="127" pos:column="53"/></name></expr></argument>, <argument><expr><name pos:line="127" pos:column="55">ap_pid_fname<pos:position pos:line="127" pos:column="67"/></name></expr></argument>)<pos:position pos:line="127" pos:column="68"/></argument_list></call></expr>;<pos:position pos:line="127" pos:column="69"/></expr_stmt>
            <if pos:line="128" pos:column="13">if <condition pos:line="128" pos:column="16">(<expr><name pos:line="128" pos:column="17">pidfile<pos:position pos:line="128" pos:column="24"/></name> <operator pos:line="128" pos:column="25">!=<pos:position pos:line="128" pos:column="27"/></operator> <name pos:line="128" pos:column="28">NULL<pos:position pos:line="128" pos:column="32"/></name> <operator pos:line="128" pos:column="33">&amp;&amp;<pos:position pos:line="128" pos:column="43"/></operator> <call><name pos:line="128" pos:column="36">unlink<pos:position pos:line="128" pos:column="42"/></name><argument_list pos:line="128" pos:column="42">(<argument><expr><name pos:line="128" pos:column="43">pidfile<pos:position pos:line="128" pos:column="50"/></name></expr></argument>)<pos:position pos:line="128" pos:column="51"/></argument_list></call> <operator pos:line="128" pos:column="52">==<pos:position pos:line="128" pos:column="54"/></operator> <literal type="number" pos:line="128" pos:column="55">0<pos:position pos:line="128" pos:column="56"/></literal></expr>)<pos:position pos:line="128" pos:column="57"/></condition><then pos:line="128" pos:column="57"> <block pos:line="128" pos:column="58">{
                <expr_stmt><expr><call><name pos:line="129" pos:column="17">ap_log_error<pos:position pos:line="129" pos:column="29"/></name><argument_list pos:line="129" pos:column="29">(<argument><expr><name pos:line="129" pos:column="30">APLOG_MARK<pos:position pos:line="129" pos:column="40"/></name></expr></argument>, <argument><expr><name pos:line="129" pos:column="42">APLOG_INFO<pos:position pos:line="129" pos:column="52"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="129" pos:column="54">0<pos:position pos:line="129" pos:column="55"/></literal></expr></argument>,
                             <argument><expr><name pos:line="130" pos:column="30">ap_server_conf<pos:position pos:line="130" pos:column="44"/></name></expr></argument>,
                             <argument><expr><literal type="string" pos:line="131" pos:column="30">"removed PID file %s (pid=%ld)"<pos:position pos:line="131" pos:column="61"/></literal></expr></argument>,
                             <argument><expr><name pos:line="132" pos:column="30">pidfile<pos:position pos:line="132" pos:column="37"/></name></expr></argument>, <argument><expr><operator pos:line="132" pos:column="39">(<pos:position pos:line="132" pos:column="40"/></operator><name pos:line="132" pos:column="40">long<pos:position pos:line="132" pos:column="44"/></name><operator pos:line="132" pos:column="44">)<pos:position pos:line="132" pos:column="45"/></operator><call><name pos:line="132" pos:column="45">getpid<pos:position pos:line="132" pos:column="51"/></name><argument_list pos:line="132" pos:column="51">()<pos:position pos:line="132" pos:column="53"/></argument_list></call></expr></argument>)<pos:position pos:line="132" pos:column="54"/></argument_list></call></expr>;<pos:position pos:line="132" pos:column="55"/></expr_stmt>
            }<pos:position pos:line="133" pos:column="14"/></block></then></if>
    
            <expr_stmt><expr><call><name pos:line="135" pos:column="13">ap_log_error<pos:position pos:line="135" pos:column="25"/></name><argument_list pos:line="135" pos:column="25">(<argument><expr><name pos:line="135" pos:column="26">APLOG_MARK<pos:position pos:line="135" pos:column="36"/></name></expr></argument>, <argument><expr><name pos:line="135" pos:column="38">APLOG_NOTICE<pos:position pos:line="135" pos:column="50"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="135" pos:column="52">0<pos:position pos:line="135" pos:column="53"/></literal></expr></argument>,
                         <argument><expr><name pos:line="136" pos:column="26">ap_server_conf<pos:position pos:line="136" pos:column="40"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="136" pos:column="42">"caught SIGTERM, shutting down"<pos:position pos:line="136" pos:column="73"/></literal></expr></argument>)<pos:position pos:line="136" pos:column="74"/></argument_list></call></expr>;<pos:position pos:line="136" pos:column="75"/></expr_stmt>
        }<pos:position pos:line="137" pos:column="10"/></block></then></if>
        <return pos:line="138" pos:column="9">return <expr><literal type="number" pos:line="138" pos:column="16">1<pos:position pos:line="138" pos:column="17"/></literal></expr>;<pos:position pos:line="138" pos:column="18"/></return>
    }<pos:position pos:line="139" pos:column="6"/></block></then></if>

    <comment type="block" pos:line="141" pos:column="5">/* we've been told to restart */</comment>
    <expr_stmt><expr><call><name pos:line="142" pos:column="5">apr_signal<pos:position pos:line="142" pos:column="15"/></name><argument_list pos:line="142" pos:column="15">(<argument><expr><name pos:line="142" pos:column="16">SIGHUP<pos:position pos:line="142" pos:column="22"/></name></expr></argument>, <argument><expr><name pos:line="142" pos:column="24">SIG_IGN<pos:position pos:line="142" pos:column="31"/></name></expr></argument>)<pos:position pos:line="142" pos:column="32"/></argument_list></call></expr>;<pos:position pos:line="142" pos:column="33"/></expr_stmt>

    <if pos:line="144" pos:column="5">if <condition pos:line="144" pos:column="8">(<expr><name pos:line="144" pos:column="9">one_process<pos:position pos:line="144" pos:column="20"/></name></expr>)<pos:position pos:line="144" pos:column="21"/></condition><then pos:line="144" pos:column="21"> <block pos:line="144" pos:column="22">{
        <comment type="block" pos:line="145" pos:column="9">/* not worth thinking about */</comment>
        <return pos:line="146" pos:column="9">return <expr><literal type="number" pos:line="146" pos:column="16">1<pos:position pos:line="146" pos:column="17"/></literal></expr>;<pos:position pos:line="146" pos:column="18"/></return>
    }<pos:position pos:line="147" pos:column="6"/></block></then></if>

    <if pos:line="149" pos:column="5">if <condition pos:line="149" pos:column="8">(<expr><name pos:line="149" pos:column="9">is_graceful<pos:position pos:line="149" pos:column="20"/></name></expr>)<pos:position pos:line="149" pos:column="21"/></condition><then pos:line="149" pos:column="21"> <block pos:line="149" pos:column="22">{
        <decl_stmt><decl><type><name pos:line="150" pos:column="9">char<pos:position pos:line="150" pos:column="13"/></name></type> <name pos:line="150" pos:column="14">char_of_death<pos:position pos:line="150" pos:column="27"/></name> <init pos:line="150" pos:column="28">= <expr><literal type="char" pos:line="150" pos:column="30">'!'<pos:position pos:line="150" pos:column="33"/></literal></expr></init></decl>;<pos:position pos:line="150" pos:column="34"/></decl_stmt>

        <expr_stmt><expr><call><name pos:line="152" pos:column="9">ap_log_error<pos:position pos:line="152" pos:column="21"/></name><argument_list pos:line="152" pos:column="21">(<argument><expr><name pos:line="152" pos:column="22">APLOG_MARK<pos:position pos:line="152" pos:column="32"/></name></expr></argument>, <argument><expr><name pos:line="152" pos:column="34">APLOG_NOTICE<pos:position pos:line="152" pos:column="46"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="152" pos:column="48">0<pos:position pos:line="152" pos:column="49"/></literal></expr></argument>,
                     <argument><expr><name pos:line="153" pos:column="22">ap_server_conf<pos:position pos:line="153" pos:column="36"/></name></expr></argument>, <argument><expr><name pos:line="153" pos:column="38">AP_SIG_GRACEFUL_STRING<pos:position pos:line="153" pos:column="60"/></name> <literal type="string" pos:line="153" pos:column="61">" received.  "<pos:position pos:line="153" pos:column="75"/></literal>
                     <literal type="string" pos:line="154" pos:column="22">"Doing graceful restart"<pos:position pos:line="154" pos:column="46"/></literal></expr></argument>)<pos:position pos:line="154" pos:column="47"/></argument_list></call></expr>;<pos:position pos:line="154" pos:column="48"/></expr_stmt>

        <comment type="block" pos:line="156" pos:column="9">/* This is mostly for debugging... so that we know what is still
         * gracefully dealing with existing request.
         */</comment>
    
        <for pos:line="160" pos:column="9">for <control pos:line="160" pos:column="13">(<init><expr><name pos:line="160" pos:column="14">i<pos:position pos:line="160" pos:column="15"/></name> <operator pos:line="160" pos:column="16">=<pos:position pos:line="160" pos:column="17"/></operator> <literal type="number" pos:line="160" pos:column="18">0<pos:position pos:line="160" pos:column="19"/></literal></expr>;<pos:position pos:line="160" pos:column="20"/></init> <condition><expr><name pos:line="160" pos:column="21">i<pos:position pos:line="160" pos:column="22"/></name> <operator pos:line="160" pos:column="23">&lt;<pos:position pos:line="160" pos:column="27"/></operator> <name pos:line="160" pos:column="25">num_daemons<pos:position pos:line="160" pos:column="36"/></name></expr>;<pos:position pos:line="160" pos:column="37"/></condition> <incr><expr><operator pos:line="160" pos:column="38">++<pos:position pos:line="160" pos:column="40"/></operator><name pos:line="160" pos:column="40">i<pos:position pos:line="160" pos:column="41"/></name></expr></incr>)<pos:position pos:line="160" pos:column="42"/></control> <block pos:line="160" pos:column="43">{
            <if pos:line="161" pos:column="13">if <condition pos:line="161" pos:column="16">(<expr><name><name pos:line="161" pos:column="17">ap_child_table<pos:position pos:line="161" pos:column="31"/></name><index pos:line="161" pos:column="31">[<expr><name pos:line="161" pos:column="32">i<pos:position pos:line="161" pos:column="33"/></name></expr>]<pos:position pos:line="161" pos:column="34"/></index></name><operator pos:line="161" pos:column="34">.<pos:position pos:line="161" pos:column="35"/></operator><name pos:line="161" pos:column="35">pid<pos:position pos:line="161" pos:column="38"/></name></expr>)<pos:position pos:line="161" pos:column="39"/></condition><then pos:line="161" pos:column="39"> <block pos:line="161" pos:column="40">{
                <expr_stmt><expr><name><name pos:line="162" pos:column="17">ap_child_table<pos:position pos:line="162" pos:column="31"/></name><index pos:line="162" pos:column="31">[<expr><name pos:line="162" pos:column="32">i<pos:position pos:line="162" pos:column="33"/></name></expr>]<pos:position pos:line="162" pos:column="34"/></index></name><operator pos:line="162" pos:column="34">.<pos:position pos:line="162" pos:column="35"/></operator><name pos:line="162" pos:column="35">status<pos:position pos:line="162" pos:column="41"/></name> <operator pos:line="162" pos:column="42">=<pos:position pos:line="162" pos:column="43"/></operator> <name pos:line="162" pos:column="44">SERVER_DYING<pos:position pos:line="162" pos:column="56"/></name></expr>;<pos:position pos:line="162" pos:column="57"/></expr_stmt>
            }<pos:position pos:line="163" pos:column="14"/></block></then></if> 
        }<pos:position pos:line="164" pos:column="10"/></block></for>
        <comment type="block" pos:line="165" pos:column="9">/* give the children the signal to die */</comment>
        <for pos:line="166" pos:column="9">for <control pos:line="166" pos:column="13">(<init><expr><name pos:line="166" pos:column="14">i<pos:position pos:line="166" pos:column="15"/></name> <operator pos:line="166" pos:column="16">=<pos:position pos:line="166" pos:column="17"/></operator> <literal type="number" pos:line="166" pos:column="18">0<pos:position pos:line="166" pos:column="19"/></literal></expr>;<pos:position pos:line="166" pos:column="20"/></init> <condition><expr><name pos:line="166" pos:column="21">i<pos:position pos:line="166" pos:column="22"/></name> <operator pos:line="166" pos:column="23">&lt;<pos:position pos:line="166" pos:column="27"/></operator> <name pos:line="166" pos:column="25">num_daemons<pos:position pos:line="166" pos:column="36"/></name></expr>;<pos:position pos:line="166" pos:column="37"/></condition><incr/>)<pos:position pos:line="166" pos:column="38"/></control> <block pos:line="166" pos:column="39">{
            <if pos:line="167" pos:column="13">if <condition pos:line="167" pos:column="16">(<expr><operator pos:line="167" pos:column="17">(<pos:position pos:line="167" pos:column="18"/></operator><name pos:line="167" pos:column="18">rv<pos:position pos:line="167" pos:column="20"/></name> <operator pos:line="167" pos:column="21">=<pos:position pos:line="167" pos:column="22"/></operator> <call><name pos:line="167" pos:column="23">apr_file_write<pos:position pos:line="167" pos:column="37"/></name><argument_list pos:line="167" pos:column="37">(<argument><expr><name pos:line="167" pos:column="38">pipe_of_death_out<pos:position pos:line="167" pos:column="55"/></name></expr></argument>, <argument><expr><operator pos:line="167" pos:column="57">&amp;<pos:position pos:line="167" pos:column="62"/></operator><name pos:line="167" pos:column="58">char_of_death<pos:position pos:line="167" pos:column="71"/></name></expr></argument>,
                                     <argument><expr><operator pos:line="168" pos:column="38">&amp;<pos:position pos:line="168" pos:column="43"/></operator><name pos:line="168" pos:column="39">one<pos:position pos:line="168" pos:column="42"/></name></expr></argument>)<pos:position pos:line="168" pos:column="43"/></argument_list></call><operator pos:line="168" pos:column="43">)<pos:position pos:line="168" pos:column="44"/></operator> <operator pos:line="168" pos:column="45">!=<pos:position pos:line="168" pos:column="47"/></operator> <name pos:line="168" pos:column="48">APR_SUCCESS<pos:position pos:line="168" pos:column="59"/></name></expr>)<pos:position pos:line="168" pos:column="60"/></condition><then pos:line="168" pos:column="60"> <block pos:line="168" pos:column="61">{
                <if pos:line="169" pos:column="17">if <condition pos:line="169" pos:column="20">(<expr><call><name pos:line="169" pos:column="21">APR_STATUS_IS_EINTR<pos:position pos:line="169" pos:column="40"/></name><argument_list pos:line="169" pos:column="40">(<argument><expr><name pos:line="169" pos:column="41">rv<pos:position pos:line="169" pos:column="43"/></name></expr></argument>)<pos:position pos:line="169" pos:column="44"/></argument_list></call></expr>)<pos:position pos:line="169" pos:column="45"/></condition><then pos:line="169" pos:column="45"> <block type="pseudo"><continue pos:line="169" pos:column="46">continue;<pos:position pos:line="169" pos:column="55"/></continue></block></then></if>
                <expr_stmt><expr><call><name pos:line="170" pos:column="17">ap_log_error<pos:position pos:line="170" pos:column="29"/></name><argument_list pos:line="170" pos:column="29">(<argument><expr><name pos:line="170" pos:column="30">APLOG_MARK<pos:position pos:line="170" pos:column="40"/></name></expr></argument>, <argument><expr><name pos:line="170" pos:column="42">APLOG_WARNING<pos:position pos:line="170" pos:column="55"/></name></expr></argument>, <argument><expr><name pos:line="170" pos:column="57">rv<pos:position pos:line="170" pos:column="59"/></name></expr></argument>, <argument><expr><name pos:line="170" pos:column="61">ap_server_conf<pos:position pos:line="170" pos:column="75"/></name></expr></argument>,
                             <argument><expr><literal type="string" pos:line="171" pos:column="30">"write pipe_of_death"<pos:position pos:line="171" pos:column="51"/></literal></expr></argument>)<pos:position pos:line="171" pos:column="52"/></argument_list></call></expr>;<pos:position pos:line="171" pos:column="53"/></expr_stmt>
            }<pos:position pos:line="172" pos:column="14"/></block></then></if>
            <expr_stmt><expr><name pos:line="173" pos:column="13">i<pos:position pos:line="173" pos:column="14"/></name><operator pos:line="173" pos:column="14">++<pos:position pos:line="173" pos:column="16"/></operator></expr>;<pos:position pos:line="173" pos:column="17"/></expr_stmt>
        }<pos:position pos:line="174" pos:column="10"/></block></for>
    }<pos:position pos:line="175" pos:column="6"/></block></then>
    <else pos:line="176" pos:column="5">else <block pos:line="176" pos:column="10">{
        <comment type="block" pos:line="177" pos:column="9">/* Kill 'em all.  Since the child acts the same on the parents SIGTERM 
         * and a SIGHUP, we may as well use the same signal, because some user
         * pthreads are stealing signals from us left and right.
         */</comment>
        <if pos:line="181" pos:column="9">if <condition pos:line="181" pos:column="12">(<expr><call><name pos:line="181" pos:column="13">unixd_killpg<pos:position pos:line="181" pos:column="25"/></name><argument_list pos:line="181" pos:column="25">(<argument><expr><call><name pos:line="181" pos:column="26">getpgrp<pos:position pos:line="181" pos:column="33"/></name><argument_list pos:line="181" pos:column="33">()<pos:position pos:line="181" pos:column="35"/></argument_list></call></expr></argument>, <argument><expr><name pos:line="181" pos:column="37">SIGTERM<pos:position pos:line="181" pos:column="44"/></name></expr></argument>)<pos:position pos:line="181" pos:column="45"/></argument_list></call> <operator pos:line="181" pos:column="46">&lt;<pos:position pos:line="181" pos:column="50"/></operator> <literal type="number" pos:line="181" pos:column="48">0<pos:position pos:line="181" pos:column="49"/></literal></expr>)<pos:position pos:line="181" pos:column="50"/></condition><then pos:line="181" pos:column="50"> <block pos:line="181" pos:column="51">{
            <expr_stmt><expr><call><name pos:line="182" pos:column="13">ap_log_error<pos:position pos:line="182" pos:column="25"/></name><argument_list pos:line="182" pos:column="25">(<argument><expr><name pos:line="182" pos:column="26">APLOG_MARK<pos:position pos:line="182" pos:column="36"/></name></expr></argument>, <argument><expr><name pos:line="182" pos:column="38">APLOG_WARNING<pos:position pos:line="182" pos:column="51"/></name></expr></argument>, <argument><expr><name pos:line="182" pos:column="53">errno<pos:position pos:line="182" pos:column="58"/></name></expr></argument>, <argument><expr><name pos:line="182" pos:column="60">ap_server_conf<pos:position pos:line="182" pos:column="74"/></name></expr></argument>,
                         <argument><expr><literal type="string" pos:line="183" pos:column="26">"killpg SIGTERM"<pos:position pos:line="183" pos:column="42"/></literal></expr></argument>)<pos:position pos:line="183" pos:column="43"/></argument_list></call></expr>;<pos:position pos:line="183" pos:column="44"/></expr_stmt>
        }<pos:position pos:line="184" pos:column="10"/></block></then></if>
        <expr_stmt><expr><call><name pos:line="185" pos:column="9">ap_reclaim_child_processes<pos:position pos:line="185" pos:column="35"/></name><argument_list pos:line="185" pos:column="35">(<argument><expr><literal type="number" pos:line="185" pos:column="36">1<pos:position pos:line="185" pos:column="37"/></literal></expr></argument>)<pos:position pos:line="185" pos:column="38"/></argument_list></call></expr>;<pos:position pos:line="185" pos:column="39"/></expr_stmt>      <comment type="block" pos:line="185" pos:column="45">/* Start with SIGTERM */</comment>
        <expr_stmt><expr><call><name pos:line="186" pos:column="9">ap_log_error<pos:position pos:line="186" pos:column="21"/></name><argument_list pos:line="186" pos:column="21">(<argument><expr><name pos:line="186" pos:column="22">APLOG_MARK<pos:position pos:line="186" pos:column="32"/></name></expr></argument>, <argument><expr><name pos:line="186" pos:column="34">APLOG_NOTICE<pos:position pos:line="186" pos:column="46"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="186" pos:column="48">0<pos:position pos:line="186" pos:column="49"/></literal></expr></argument>,
                     <argument><expr><name pos:line="187" pos:column="22">ap_server_conf<pos:position pos:line="187" pos:column="36"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="187" pos:column="38">"SIGHUP received.  Attempting to restart"<pos:position pos:line="187" pos:column="79"/></literal></expr></argument>)<pos:position pos:line="187" pos:column="80"/></argument_list></call></expr>;<pos:position pos:line="187" pos:column="81"/></expr_stmt>
    }<pos:position pos:line="188" pos:column="6"/></block></else></if>
    <return pos:line="189" pos:column="5">return <expr><literal type="number" pos:line="189" pos:column="12">0<pos:position pos:line="189" pos:column="13"/></literal></expr>;<pos:position pos:line="189" pos:column="14"/></return>
}<pos:position pos:line="190" pos:column="2"/></block></function></unit>

<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/httpd/gumtree/httpd_repos_function_4075_httpd-2.2.27.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">void<pos:position pos:line="1" pos:column="12"/></name></type>
<name pos:line="2" pos:column="1">print_internals<pos:position pos:line="2" pos:column="16"/></name><parameter_list pos:line="2" pos:column="16">(<parameter><decl><type><name pos:line="2" pos:column="17">pcre<pos:position pos:line="2" pos:column="21"/></name> <modifier pos:line="2" pos:column="22">*<pos:position pos:line="2" pos:column="23"/></modifier></type><name pos:line="2" pos:column="23">external_re<pos:position pos:line="2" pos:column="34"/></name></decl></parameter>, <parameter><decl><type><name pos:line="2" pos:column="36">FILE<pos:position pos:line="2" pos:column="40"/></name> <modifier pos:line="2" pos:column="41">*<pos:position pos:line="2" pos:column="42"/></modifier></type><name pos:line="2" pos:column="42">f<pos:position pos:line="2" pos:column="43"/></name></decl></parameter>)<pos:position pos:line="2" pos:column="44"/></parameter_list>
<block pos:line="3" pos:column="1">{
<decl_stmt><decl><type><name pos:line="4" pos:column="1">real_pcre<pos:position pos:line="4" pos:column="10"/></name> <modifier pos:line="4" pos:column="11">*<pos:position pos:line="4" pos:column="12"/></modifier></type><name pos:line="4" pos:column="12">re<pos:position pos:line="4" pos:column="14"/></name> <init pos:line="4" pos:column="15">= <expr><operator pos:line="4" pos:column="17">(<pos:position pos:line="4" pos:column="18"/></operator><name pos:line="4" pos:column="18">real_pcre<pos:position pos:line="4" pos:column="27"/></name> <operator pos:line="4" pos:column="28">*<pos:position pos:line="4" pos:column="29"/></operator><operator pos:line="4" pos:column="29">)<pos:position pos:line="4" pos:column="30"/></operator><name pos:line="4" pos:column="30">external_re<pos:position pos:line="4" pos:column="41"/></name></expr></init></decl>;<pos:position pos:line="4" pos:column="42"/></decl_stmt>
<decl_stmt><decl><type><name pos:line="5" pos:column="1">uschar<pos:position pos:line="5" pos:column="7"/></name> <modifier pos:line="5" pos:column="8">*<pos:position pos:line="5" pos:column="9"/></modifier></type><name pos:line="5" pos:column="9">codestart<pos:position pos:line="5" pos:column="18"/></name></decl>, <modifier pos:line="5" pos:column="20">*<pos:position pos:line="5" pos:column="21"/></modifier><decl><type ref="prev"/><name pos:line="5" pos:column="21">code<pos:position pos:line="5" pos:column="25"/></name></decl>;<pos:position pos:line="5" pos:column="26"/></decl_stmt>
<decl_stmt><decl><type><name pos:line="6" pos:column="1">BOOL<pos:position pos:line="6" pos:column="5"/></name></type> <name pos:line="6" pos:column="6">utf8<pos:position pos:line="6" pos:column="10"/></name></decl>;<pos:position pos:line="6" pos:column="11"/></decl_stmt>

<decl_stmt><decl><type><name pos:line="8" pos:column="1">unsigned<pos:position pos:line="8" pos:column="9"/></name> <name pos:line="8" pos:column="10">int<pos:position pos:line="8" pos:column="13"/></name></type> <name pos:line="8" pos:column="14">options<pos:position pos:line="8" pos:column="21"/></name> <init pos:line="8" pos:column="22">= <expr><name><name pos:line="8" pos:column="24">re<pos:position pos:line="8" pos:column="26"/></name><operator pos:line="8" pos:column="26">-&gt;<pos:position pos:line="8" pos:column="31"/></operator><name pos:line="8" pos:column="28">options<pos:position pos:line="8" pos:column="35"/></name></name></expr></init></decl>;<pos:position pos:line="8" pos:column="36"/></decl_stmt>
<decl_stmt><decl><type><name pos:line="9" pos:column="1">int<pos:position pos:line="9" pos:column="4"/></name></type> <name pos:line="9" pos:column="5">offset<pos:position pos:line="9" pos:column="11"/></name> <init pos:line="9" pos:column="12">= <expr><name><name pos:line="9" pos:column="14">re<pos:position pos:line="9" pos:column="16"/></name><operator pos:line="9" pos:column="16">-&gt;<pos:position pos:line="9" pos:column="21"/></operator><name pos:line="9" pos:column="18">name_table_offset<pos:position pos:line="9" pos:column="35"/></name></name></expr></init></decl>;<pos:position pos:line="9" pos:column="36"/></decl_stmt>
<decl_stmt><decl><type><name pos:line="10" pos:column="1">int<pos:position pos:line="10" pos:column="4"/></name></type> <name pos:line="10" pos:column="5">count<pos:position pos:line="10" pos:column="10"/></name> <init pos:line="10" pos:column="11">= <expr><name><name pos:line="10" pos:column="13">re<pos:position pos:line="10" pos:column="15"/></name><operator pos:line="10" pos:column="15">-&gt;<pos:position pos:line="10" pos:column="20"/></operator><name pos:line="10" pos:column="17">name_count<pos:position pos:line="10" pos:column="27"/></name></name></expr></init></decl>;<pos:position pos:line="10" pos:column="28"/></decl_stmt>
<decl_stmt><decl><type><name pos:line="11" pos:column="1">int<pos:position pos:line="11" pos:column="4"/></name></type> <name pos:line="11" pos:column="5">size<pos:position pos:line="11" pos:column="9"/></name> <init pos:line="11" pos:column="10">= <expr><name><name pos:line="11" pos:column="12">re<pos:position pos:line="11" pos:column="14"/></name><operator pos:line="11" pos:column="14">-&gt;<pos:position pos:line="11" pos:column="19"/></operator><name pos:line="11" pos:column="16">name_entry_size<pos:position pos:line="11" pos:column="31"/></name></name></expr></init></decl>;<pos:position pos:line="11" pos:column="32"/></decl_stmt>

<if pos:line="13" pos:column="1">if <condition pos:line="13" pos:column="4">(<expr><name><name pos:line="13" pos:column="5">re<pos:position pos:line="13" pos:column="7"/></name><operator pos:line="13" pos:column="7">-&gt;<pos:position pos:line="13" pos:column="12"/></operator><name pos:line="13" pos:column="9">magic_number<pos:position pos:line="13" pos:column="21"/></name></name> <operator pos:line="13" pos:column="22">!=<pos:position pos:line="13" pos:column="24"/></operator> <name pos:line="13" pos:column="25">MAGIC_NUMBER<pos:position pos:line="13" pos:column="37"/></name></expr>)<pos:position pos:line="13" pos:column="38"/></condition><then pos:line="13" pos:column="38">
  <block pos:line="14" pos:column="3">{
  <expr_stmt><expr><name pos:line="15" pos:column="3">offset<pos:position pos:line="15" pos:column="9"/></name> <operator pos:line="15" pos:column="10">=<pos:position pos:line="15" pos:column="11"/></operator> <operator pos:line="15" pos:column="12">(<pos:position pos:line="15" pos:column="13"/></operator><operator pos:line="15" pos:column="13">(<pos:position pos:line="15" pos:column="14"/></operator><name pos:line="15" pos:column="14">offset<pos:position pos:line="15" pos:column="20"/></name> <operator pos:line="15" pos:column="21">&lt;&lt;<pos:position pos:line="15" pos:column="29"/></operator> <literal type="number" pos:line="15" pos:column="24">8<pos:position pos:line="15" pos:column="25"/></literal><operator pos:line="15" pos:column="25">)<pos:position pos:line="15" pos:column="26"/></operator> <operator pos:line="15" pos:column="27">&amp;<pos:position pos:line="15" pos:column="32"/></operator> <literal type="number" pos:line="15" pos:column="29">0xff00<pos:position pos:line="15" pos:column="35"/></literal><operator pos:line="15" pos:column="35">)<pos:position pos:line="15" pos:column="36"/></operator> <operator pos:line="15" pos:column="37">|<pos:position pos:line="15" pos:column="38"/></operator> <operator pos:line="15" pos:column="39">(<pos:position pos:line="15" pos:column="40"/></operator><operator pos:line="15" pos:column="40">(<pos:position pos:line="15" pos:column="41"/></operator><name pos:line="15" pos:column="41">offset<pos:position pos:line="15" pos:column="47"/></name> <operator pos:line="15" pos:column="48">&gt;&gt;<pos:position pos:line="15" pos:column="53"/></operator> <literal type="number" pos:line="15" pos:column="51">8<pos:position pos:line="15" pos:column="52"/></literal><operator pos:line="15" pos:column="52">)<pos:position pos:line="15" pos:column="53"/></operator> <operator pos:line="15" pos:column="54">&amp;<pos:position pos:line="15" pos:column="59"/></operator> <literal type="number" pos:line="15" pos:column="56">0xff<pos:position pos:line="15" pos:column="60"/></literal><operator pos:line="15" pos:column="60">)<pos:position pos:line="15" pos:column="61"/></operator></expr>;<pos:position pos:line="15" pos:column="62"/></expr_stmt>
  <expr_stmt><expr><name pos:line="16" pos:column="3">count<pos:position pos:line="16" pos:column="8"/></name> <operator pos:line="16" pos:column="9">=<pos:position pos:line="16" pos:column="10"/></operator> <operator pos:line="16" pos:column="11">(<pos:position pos:line="16" pos:column="12"/></operator><operator pos:line="16" pos:column="12">(<pos:position pos:line="16" pos:column="13"/></operator><name pos:line="16" pos:column="13">count<pos:position pos:line="16" pos:column="18"/></name> <operator pos:line="16" pos:column="19">&lt;&lt;<pos:position pos:line="16" pos:column="27"/></operator> <literal type="number" pos:line="16" pos:column="22">8<pos:position pos:line="16" pos:column="23"/></literal><operator pos:line="16" pos:column="23">)<pos:position pos:line="16" pos:column="24"/></operator> <operator pos:line="16" pos:column="25">&amp;<pos:position pos:line="16" pos:column="30"/></operator> <literal type="number" pos:line="16" pos:column="27">0xff00<pos:position pos:line="16" pos:column="33"/></literal><operator pos:line="16" pos:column="33">)<pos:position pos:line="16" pos:column="34"/></operator> <operator pos:line="16" pos:column="35">|<pos:position pos:line="16" pos:column="36"/></operator> <operator pos:line="16" pos:column="37">(<pos:position pos:line="16" pos:column="38"/></operator><operator pos:line="16" pos:column="38">(<pos:position pos:line="16" pos:column="39"/></operator><name pos:line="16" pos:column="39">count<pos:position pos:line="16" pos:column="44"/></name> <operator pos:line="16" pos:column="45">&gt;&gt;<pos:position pos:line="16" pos:column="50"/></operator> <literal type="number" pos:line="16" pos:column="48">8<pos:position pos:line="16" pos:column="49"/></literal><operator pos:line="16" pos:column="49">)<pos:position pos:line="16" pos:column="50"/></operator> <operator pos:line="16" pos:column="51">&amp;<pos:position pos:line="16" pos:column="56"/></operator> <literal type="number" pos:line="16" pos:column="53">0xff<pos:position pos:line="16" pos:column="57"/></literal><operator pos:line="16" pos:column="57">)<pos:position pos:line="16" pos:column="58"/></operator></expr>;<pos:position pos:line="16" pos:column="59"/></expr_stmt>
  <expr_stmt><expr><name pos:line="17" pos:column="3">size<pos:position pos:line="17" pos:column="7"/></name> <operator pos:line="17" pos:column="8">=<pos:position pos:line="17" pos:column="9"/></operator> <operator pos:line="17" pos:column="10">(<pos:position pos:line="17" pos:column="11"/></operator><operator pos:line="17" pos:column="11">(<pos:position pos:line="17" pos:column="12"/></operator><name pos:line="17" pos:column="12">size<pos:position pos:line="17" pos:column="16"/></name> <operator pos:line="17" pos:column="17">&lt;&lt;<pos:position pos:line="17" pos:column="25"/></operator> <literal type="number" pos:line="17" pos:column="20">8<pos:position pos:line="17" pos:column="21"/></literal><operator pos:line="17" pos:column="21">)<pos:position pos:line="17" pos:column="22"/></operator> <operator pos:line="17" pos:column="23">&amp;<pos:position pos:line="17" pos:column="28"/></operator> <literal type="number" pos:line="17" pos:column="25">0xff00<pos:position pos:line="17" pos:column="31"/></literal><operator pos:line="17" pos:column="31">)<pos:position pos:line="17" pos:column="32"/></operator> <operator pos:line="17" pos:column="33">|<pos:position pos:line="17" pos:column="34"/></operator> <operator pos:line="17" pos:column="35">(<pos:position pos:line="17" pos:column="36"/></operator><operator pos:line="17" pos:column="36">(<pos:position pos:line="17" pos:column="37"/></operator><name pos:line="17" pos:column="37">size<pos:position pos:line="17" pos:column="41"/></name> <operator pos:line="17" pos:column="42">&gt;&gt;<pos:position pos:line="17" pos:column="47"/></operator> <literal type="number" pos:line="17" pos:column="45">8<pos:position pos:line="17" pos:column="46"/></literal><operator pos:line="17" pos:column="46">)<pos:position pos:line="17" pos:column="47"/></operator> <operator pos:line="17" pos:column="48">&amp;<pos:position pos:line="17" pos:column="53"/></operator> <literal type="number" pos:line="17" pos:column="50">0xff<pos:position pos:line="17" pos:column="54"/></literal><operator pos:line="17" pos:column="54">)<pos:position pos:line="17" pos:column="55"/></operator></expr>;<pos:position pos:line="17" pos:column="56"/></expr_stmt>
  <expr_stmt><expr><name pos:line="18" pos:column="3">options<pos:position pos:line="18" pos:column="10"/></name> <operator pos:line="18" pos:column="11">=<pos:position pos:line="18" pos:column="12"/></operator> <operator pos:line="18" pos:column="13">(<pos:position pos:line="18" pos:column="14"/></operator><operator pos:line="18" pos:column="14">(<pos:position pos:line="18" pos:column="15"/></operator><name pos:line="18" pos:column="15">options<pos:position pos:line="18" pos:column="22"/></name> <operator pos:line="18" pos:column="23">&lt;&lt;<pos:position pos:line="18" pos:column="31"/></operator> <literal type="number" pos:line="18" pos:column="26">24<pos:position pos:line="18" pos:column="28"/></literal><operator pos:line="18" pos:column="28">)<pos:position pos:line="18" pos:column="29"/></operator> <operator pos:line="18" pos:column="30">&amp;<pos:position pos:line="18" pos:column="35"/></operator> <literal type="number" pos:line="18" pos:column="32">0xff000000<pos:position pos:line="18" pos:column="42"/></literal><operator pos:line="18" pos:column="42">)<pos:position pos:line="18" pos:column="43"/></operator> <operator pos:line="18" pos:column="44">|<pos:position pos:line="18" pos:column="45"/></operator>
            <operator pos:line="19" pos:column="13">(<pos:position pos:line="19" pos:column="14"/></operator><operator pos:line="19" pos:column="14">(<pos:position pos:line="19" pos:column="15"/></operator><name pos:line="19" pos:column="15">options<pos:position pos:line="19" pos:column="22"/></name> <operator pos:line="19" pos:column="23">&lt;&lt;<pos:position pos:line="19" pos:column="31"/></operator>  <literal type="number" pos:line="19" pos:column="27">8<pos:position pos:line="19" pos:column="28"/></literal><operator pos:line="19" pos:column="28">)<pos:position pos:line="19" pos:column="29"/></operator> <operator pos:line="19" pos:column="30">&amp;<pos:position pos:line="19" pos:column="35"/></operator> <literal type="number" pos:line="19" pos:column="32">0x00ff0000<pos:position pos:line="19" pos:column="42"/></literal><operator pos:line="19" pos:column="42">)<pos:position pos:line="19" pos:column="43"/></operator> <operator pos:line="19" pos:column="44">|<pos:position pos:line="19" pos:column="45"/></operator>
            <operator pos:line="20" pos:column="13">(<pos:position pos:line="20" pos:column="14"/></operator><operator pos:line="20" pos:column="14">(<pos:position pos:line="20" pos:column="15"/></operator><name pos:line="20" pos:column="15">options<pos:position pos:line="20" pos:column="22"/></name> <operator pos:line="20" pos:column="23">&gt;&gt;<pos:position pos:line="20" pos:column="28"/></operator>  <literal type="number" pos:line="20" pos:column="27">8<pos:position pos:line="20" pos:column="28"/></literal><operator pos:line="20" pos:column="28">)<pos:position pos:line="20" pos:column="29"/></operator> <operator pos:line="20" pos:column="30">&amp;<pos:position pos:line="20" pos:column="35"/></operator> <literal type="number" pos:line="20" pos:column="32">0x0000ff00<pos:position pos:line="20" pos:column="42"/></literal><operator pos:line="20" pos:column="42">)<pos:position pos:line="20" pos:column="43"/></operator> <operator pos:line="20" pos:column="44">|<pos:position pos:line="20" pos:column="45"/></operator>
            <operator pos:line="21" pos:column="13">(<pos:position pos:line="21" pos:column="14"/></operator><operator pos:line="21" pos:column="14">(<pos:position pos:line="21" pos:column="15"/></operator><name pos:line="21" pos:column="15">options<pos:position pos:line="21" pos:column="22"/></name> <operator pos:line="21" pos:column="23">&gt;&gt;<pos:position pos:line="21" pos:column="28"/></operator> <literal type="number" pos:line="21" pos:column="26">24<pos:position pos:line="21" pos:column="28"/></literal><operator pos:line="21" pos:column="28">)<pos:position pos:line="21" pos:column="29"/></operator> <operator pos:line="21" pos:column="30">&amp;<pos:position pos:line="21" pos:column="35"/></operator> <literal type="number" pos:line="21" pos:column="32">0x000000ff<pos:position pos:line="21" pos:column="42"/></literal><operator pos:line="21" pos:column="42">)<pos:position pos:line="21" pos:column="43"/></operator></expr>;<pos:position pos:line="21" pos:column="44"/></expr_stmt>
  }<pos:position pos:line="22" pos:column="4"/></block></then></if>

<expr_stmt><expr><name pos:line="24" pos:column="1">code<pos:position pos:line="24" pos:column="5"/></name> <operator pos:line="24" pos:column="6">=<pos:position pos:line="24" pos:column="7"/></operator> <name pos:line="24" pos:column="8">codestart<pos:position pos:line="24" pos:column="17"/></name> <operator pos:line="24" pos:column="18">=<pos:position pos:line="24" pos:column="19"/></operator> <operator pos:line="24" pos:column="20">(<pos:position pos:line="24" pos:column="21"/></operator><name pos:line="24" pos:column="21">uschar<pos:position pos:line="24" pos:column="27"/></name> <operator pos:line="24" pos:column="28">*<pos:position pos:line="24" pos:column="29"/></operator><operator pos:line="24" pos:column="29">)<pos:position pos:line="24" pos:column="30"/></operator><name pos:line="24" pos:column="30">re<pos:position pos:line="24" pos:column="32"/></name> <operator pos:line="24" pos:column="33">+<pos:position pos:line="24" pos:column="34"/></operator> <name pos:line="24" pos:column="35">offset<pos:position pos:line="24" pos:column="41"/></name> <operator pos:line="24" pos:column="42">+<pos:position pos:line="24" pos:column="43"/></operator> <name pos:line="24" pos:column="44">count<pos:position pos:line="24" pos:column="49"/></name> <operator pos:line="24" pos:column="50">*<pos:position pos:line="24" pos:column="51"/></operator> <name pos:line="24" pos:column="52">size<pos:position pos:line="24" pos:column="56"/></name></expr>;<pos:position pos:line="24" pos:column="57"/></expr_stmt>
<expr_stmt><expr><name pos:line="25" pos:column="1">utf8<pos:position pos:line="25" pos:column="5"/></name> <operator pos:line="25" pos:column="6">=<pos:position pos:line="25" pos:column="7"/></operator> <operator pos:line="25" pos:column="8">(<pos:position pos:line="25" pos:column="9"/></operator><name pos:line="25" pos:column="9">options<pos:position pos:line="25" pos:column="16"/></name> <operator pos:line="25" pos:column="17">&amp;<pos:position pos:line="25" pos:column="22"/></operator> <name pos:line="25" pos:column="19">PCRE_UTF8<pos:position pos:line="25" pos:column="28"/></name><operator pos:line="25" pos:column="28">)<pos:position pos:line="25" pos:column="29"/></operator> <operator pos:line="25" pos:column="30">!=<pos:position pos:line="25" pos:column="32"/></operator> <literal type="number" pos:line="25" pos:column="33">0<pos:position pos:line="25" pos:column="34"/></literal></expr>;<pos:position pos:line="25" pos:column="35"/></expr_stmt>

<for pos:line="27" pos:column="1">for<control pos:line="27" pos:column="4">(<init pos:line="27" pos:column="5">;<pos:position pos:line="27" pos:column="6"/></init><condition pos:line="27" pos:column="6">;<pos:position pos:line="27" pos:column="7"/></condition><incr/>)<pos:position pos:line="27" pos:column="8"/></control>
  <block pos:line="28" pos:column="3">{
  <decl_stmt><decl><type><name pos:line="29" pos:column="3">uschar<pos:position pos:line="29" pos:column="9"/></name> <modifier pos:line="29" pos:column="10">*<pos:position pos:line="29" pos:column="11"/></modifier></type><name pos:line="29" pos:column="11">ccode<pos:position pos:line="29" pos:column="16"/></name></decl>;<pos:position pos:line="29" pos:column="17"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="30" pos:column="3">int<pos:position pos:line="30" pos:column="6"/></name></type> <name pos:line="30" pos:column="7">c<pos:position pos:line="30" pos:column="8"/></name></decl>;<pos:position pos:line="30" pos:column="9"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="31" pos:column="3">int<pos:position pos:line="31" pos:column="6"/></name></type> <name pos:line="31" pos:column="7">extra<pos:position pos:line="31" pos:column="12"/></name> <init pos:line="31" pos:column="13">= <expr><literal type="number" pos:line="31" pos:column="15">0<pos:position pos:line="31" pos:column="16"/></literal></expr></init></decl>;<pos:position pos:line="31" pos:column="17"/></decl_stmt>

  <expr_stmt><expr><call><name pos:line="33" pos:column="3">fprintf<pos:position pos:line="33" pos:column="10"/></name><argument_list pos:line="33" pos:column="10">(<argument><expr><name pos:line="33" pos:column="11">f<pos:position pos:line="33" pos:column="12"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="33" pos:column="14">"%3d "<pos:position pos:line="33" pos:column="20"/></literal></expr></argument>, <argument><expr><name pos:line="33" pos:column="22">code<pos:position pos:line="33" pos:column="26"/></name> <operator pos:line="33" pos:column="27">-<pos:position pos:line="33" pos:column="28"/></operator> <name pos:line="33" pos:column="29">codestart<pos:position pos:line="33" pos:column="38"/></name></expr></argument>)<pos:position pos:line="33" pos:column="39"/></argument_list></call></expr>;<pos:position pos:line="33" pos:column="40"/></expr_stmt>

  <if pos:line="35" pos:column="3">if <condition pos:line="35" pos:column="6">(<expr><operator pos:line="35" pos:column="7">*<pos:position pos:line="35" pos:column="8"/></operator><name pos:line="35" pos:column="8">code<pos:position pos:line="35" pos:column="12"/></name> <operator pos:line="35" pos:column="13">&gt;=<pos:position pos:line="35" pos:column="18"/></operator> <name pos:line="35" pos:column="16">OP_BRA<pos:position pos:line="35" pos:column="22"/></name></expr>)<pos:position pos:line="35" pos:column="23"/></condition><then pos:line="35" pos:column="23">
    <block pos:line="36" pos:column="5">{
    <if pos:line="37" pos:column="5">if <condition pos:line="37" pos:column="8">(<expr><operator pos:line="37" pos:column="9">*<pos:position pos:line="37" pos:column="10"/></operator><name pos:line="37" pos:column="10">code<pos:position pos:line="37" pos:column="14"/></name> <operator pos:line="37" pos:column="15">-<pos:position pos:line="37" pos:column="16"/></operator> <name pos:line="37" pos:column="17">OP_BRA<pos:position pos:line="37" pos:column="23"/></name> <operator pos:line="37" pos:column="24">&gt;<pos:position pos:line="37" pos:column="28"/></operator> <name pos:line="37" pos:column="26">EXTRACT_BASIC_MAX<pos:position pos:line="37" pos:column="43"/></name></expr>)<pos:position pos:line="37" pos:column="44"/></condition><then pos:line="37" pos:column="44">
      <block type="pseudo"><expr_stmt><expr><call><name pos:line="38" pos:column="7">fprintf<pos:position pos:line="38" pos:column="14"/></name><argument_list pos:line="38" pos:column="14">(<argument><expr><name pos:line="38" pos:column="15">f<pos:position pos:line="38" pos:column="16"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="38" pos:column="18">"%3d Bra extra\n"<pos:position pos:line="38" pos:column="35"/></literal></expr></argument>, <argument><expr><call><name pos:line="38" pos:column="37">GET<pos:position pos:line="38" pos:column="40"/></name><argument_list pos:line="38" pos:column="40">(<argument><expr><name pos:line="38" pos:column="41">code<pos:position pos:line="38" pos:column="45"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="38" pos:column="47">1<pos:position pos:line="38" pos:column="48"/></literal></expr></argument>)<pos:position pos:line="38" pos:column="49"/></argument_list></call></expr></argument>)<pos:position pos:line="38" pos:column="50"/></argument_list></call></expr>;<pos:position pos:line="38" pos:column="51"/></expr_stmt></block></then>
    <else pos:line="39" pos:column="5">else
      <block type="pseudo"><expr_stmt><expr><call><name pos:line="40" pos:column="7">fprintf<pos:position pos:line="40" pos:column="14"/></name><argument_list pos:line="40" pos:column="14">(<argument><expr><name pos:line="40" pos:column="15">f<pos:position pos:line="40" pos:column="16"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="40" pos:column="18">"%3d Bra %d\n"<pos:position pos:line="40" pos:column="32"/></literal></expr></argument>, <argument><expr><call><name pos:line="40" pos:column="34">GET<pos:position pos:line="40" pos:column="37"/></name><argument_list pos:line="40" pos:column="37">(<argument><expr><name pos:line="40" pos:column="38">code<pos:position pos:line="40" pos:column="42"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="40" pos:column="44">1<pos:position pos:line="40" pos:column="45"/></literal></expr></argument>)<pos:position pos:line="40" pos:column="46"/></argument_list></call></expr></argument>, <argument><expr><operator pos:line="40" pos:column="48">*<pos:position pos:line="40" pos:column="49"/></operator><name pos:line="40" pos:column="49">code<pos:position pos:line="40" pos:column="53"/></name> <operator pos:line="40" pos:column="54">-<pos:position pos:line="40" pos:column="55"/></operator> <name pos:line="40" pos:column="56">OP_BRA<pos:position pos:line="40" pos:column="62"/></name></expr></argument>)<pos:position pos:line="40" pos:column="63"/></argument_list></call></expr>;<pos:position pos:line="40" pos:column="64"/></expr_stmt></block></else></if>
    <expr_stmt><expr><name pos:line="41" pos:column="5">code<pos:position pos:line="41" pos:column="9"/></name> <operator pos:line="41" pos:column="10">+=<pos:position pos:line="41" pos:column="12"/></operator> <name><name pos:line="41" pos:column="13">OP_lengths<pos:position pos:line="41" pos:column="23"/></name><index pos:line="41" pos:column="23">[<expr><name pos:line="41" pos:column="24">OP_BRA<pos:position pos:line="41" pos:column="30"/></name></expr>]<pos:position pos:line="41" pos:column="31"/></index></name></expr>;<pos:position pos:line="41" pos:column="32"/></expr_stmt>
    <continue pos:line="42" pos:column="5">continue;<pos:position pos:line="42" pos:column="14"/></continue>
    }<pos:position pos:line="43" pos:column="6"/></block></then></if>

  <switch pos:line="45" pos:column="3">switch<condition pos:line="45" pos:column="9">(<expr><operator pos:line="45" pos:column="10">*<pos:position pos:line="45" pos:column="11"/></operator><name pos:line="45" pos:column="11">code<pos:position pos:line="45" pos:column="15"/></name></expr>)<pos:position pos:line="45" pos:column="16"/></condition>
    <block pos:line="46" pos:column="5">{
    <case pos:line="47" pos:column="5">case <expr><name pos:line="47" pos:column="10">OP_END<pos:position pos:line="47" pos:column="16"/></name></expr>:<pos:position pos:line="47" pos:column="17"/></case>
    <expr_stmt><expr><call><name pos:line="48" pos:column="5">fprintf<pos:position pos:line="48" pos:column="12"/></name><argument_list pos:line="48" pos:column="12">(<argument><expr><name pos:line="48" pos:column="13">f<pos:position pos:line="48" pos:column="14"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="48" pos:column="16">"    %s\n"<pos:position pos:line="48" pos:column="26"/></literal></expr></argument>, <argument><expr><name><name pos:line="48" pos:column="28">OP_names<pos:position pos:line="48" pos:column="36"/></name><index pos:line="48" pos:column="36">[<expr><operator pos:line="48" pos:column="37">*<pos:position pos:line="48" pos:column="38"/></operator><name pos:line="48" pos:column="38">code<pos:position pos:line="48" pos:column="42"/></name></expr>]<pos:position pos:line="48" pos:column="43"/></index></name></expr></argument>)<pos:position pos:line="48" pos:column="44"/></argument_list></call></expr>;<pos:position pos:line="48" pos:column="45"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="49" pos:column="5">fprintf<pos:position pos:line="49" pos:column="12"/></name><argument_list pos:line="49" pos:column="12">(<argument><expr><name pos:line="49" pos:column="13">f<pos:position pos:line="49" pos:column="14"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="49" pos:column="16">"------------------------------------------------------------------\n"<pos:position pos:line="49" pos:column="86"/></literal></expr></argument>)<pos:position pos:line="49" pos:column="87"/></argument_list></call></expr>;<pos:position pos:line="49" pos:column="88"/></expr_stmt>
    <return pos:line="50" pos:column="5">return;<pos:position pos:line="50" pos:column="12"/></return>

    <case pos:line="52" pos:column="5">case <expr><name pos:line="52" pos:column="10">OP_OPT<pos:position pos:line="52" pos:column="16"/></name></expr>:<pos:position pos:line="52" pos:column="17"/></case>
    <expr_stmt><expr><call><name pos:line="53" pos:column="5">fprintf<pos:position pos:line="53" pos:column="12"/></name><argument_list pos:line="53" pos:column="12">(<argument><expr><name pos:line="53" pos:column="13">f<pos:position pos:line="53" pos:column="14"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="53" pos:column="16">" %.2x %s"<pos:position pos:line="53" pos:column="26"/></literal></expr></argument>, <argument><expr><name><name pos:line="53" pos:column="28">code<pos:position pos:line="53" pos:column="32"/></name><index pos:line="53" pos:column="32">[<expr><literal type="number" pos:line="53" pos:column="33">1<pos:position pos:line="53" pos:column="34"/></literal></expr>]<pos:position pos:line="53" pos:column="35"/></index></name></expr></argument>, <argument><expr><name><name pos:line="53" pos:column="37">OP_names<pos:position pos:line="53" pos:column="45"/></name><index pos:line="53" pos:column="45">[<expr><operator pos:line="53" pos:column="46">*<pos:position pos:line="53" pos:column="47"/></operator><name pos:line="53" pos:column="47">code<pos:position pos:line="53" pos:column="51"/></name></expr>]<pos:position pos:line="53" pos:column="52"/></index></name></expr></argument>)<pos:position pos:line="53" pos:column="53"/></argument_list></call></expr>;<pos:position pos:line="53" pos:column="54"/></expr_stmt>
    <break pos:line="54" pos:column="5">break;<pos:position pos:line="54" pos:column="11"/></break>

    <case pos:line="56" pos:column="5">case <expr><name pos:line="56" pos:column="10">OP_CHAR<pos:position pos:line="56" pos:column="17"/></name></expr>:<pos:position pos:line="56" pos:column="18"/></case>
      <block pos:line="57" pos:column="7">{
      <expr_stmt><expr><call><name pos:line="58" pos:column="7">fprintf<pos:position pos:line="58" pos:column="14"/></name><argument_list pos:line="58" pos:column="14">(<argument><expr><name pos:line="58" pos:column="15">f<pos:position pos:line="58" pos:column="16"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="58" pos:column="18">"    "<pos:position pos:line="58" pos:column="24"/></literal></expr></argument>)<pos:position pos:line="58" pos:column="25"/></argument_list></call></expr>;<pos:position pos:line="58" pos:column="26"/></expr_stmt>
      <do pos:line="59" pos:column="7">do
        <block pos:line="60" pos:column="9">{
        <expr_stmt><expr><name pos:line="61" pos:column="9">code<pos:position pos:line="61" pos:column="13"/></name><operator pos:line="61" pos:column="13">++<pos:position pos:line="61" pos:column="15"/></operator></expr>;<pos:position pos:line="61" pos:column="16"/></expr_stmt>
        <expr_stmt><expr><name pos:line="62" pos:column="9">code<pos:position pos:line="62" pos:column="13"/></name> <operator pos:line="62" pos:column="14">+=<pos:position pos:line="62" pos:column="16"/></operator> <literal type="number" pos:line="62" pos:column="17">1<pos:position pos:line="62" pos:column="18"/></literal> <operator pos:line="62" pos:column="19">+<pos:position pos:line="62" pos:column="20"/></operator> <call><name pos:line="62" pos:column="21">print_char<pos:position pos:line="62" pos:column="31"/></name><argument_list pos:line="62" pos:column="31">(<argument><expr><name pos:line="62" pos:column="32">f<pos:position pos:line="62" pos:column="33"/></name></expr></argument>, <argument><expr><name pos:line="62" pos:column="35">code<pos:position pos:line="62" pos:column="39"/></name></expr></argument>, <argument><expr><name pos:line="62" pos:column="41">utf8<pos:position pos:line="62" pos:column="45"/></name></expr></argument>)<pos:position pos:line="62" pos:column="46"/></argument_list></call></expr>;<pos:position pos:line="62" pos:column="47"/></expr_stmt>
        }<pos:position pos:line="63" pos:column="10"/></block>
      while <condition pos:line="64" pos:column="13">(<expr><operator pos:line="64" pos:column="14">*<pos:position pos:line="64" pos:column="15"/></operator><name pos:line="64" pos:column="15">code<pos:position pos:line="64" pos:column="19"/></name> <operator pos:line="64" pos:column="20">==<pos:position pos:line="64" pos:column="22"/></operator> <name pos:line="64" pos:column="23">OP_CHAR<pos:position pos:line="64" pos:column="30"/></name></expr>)<pos:position pos:line="64" pos:column="31"/></condition>;<pos:position pos:line="64" pos:column="32"/></do>
      <expr_stmt><expr><call><name pos:line="65" pos:column="7">fprintf<pos:position pos:line="65" pos:column="14"/></name><argument_list pos:line="65" pos:column="14">(<argument><expr><name pos:line="65" pos:column="15">f<pos:position pos:line="65" pos:column="16"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="65" pos:column="18">"\n"<pos:position pos:line="65" pos:column="22"/></literal></expr></argument>)<pos:position pos:line="65" pos:column="23"/></argument_list></call></expr>;<pos:position pos:line="65" pos:column="24"/></expr_stmt>
      <continue pos:line="66" pos:column="7">continue;<pos:position pos:line="66" pos:column="16"/></continue>
      }<pos:position pos:line="67" pos:column="8"/></block>
    <break pos:line="68" pos:column="5">break;<pos:position pos:line="68" pos:column="11"/></break>

    <case pos:line="70" pos:column="5">case <expr><name pos:line="70" pos:column="10">OP_CHARNC<pos:position pos:line="70" pos:column="19"/></name></expr>:<pos:position pos:line="70" pos:column="20"/></case>
      <block pos:line="71" pos:column="7">{
      <expr_stmt><expr><call><name pos:line="72" pos:column="7">fprintf<pos:position pos:line="72" pos:column="14"/></name><argument_list pos:line="72" pos:column="14">(<argument><expr><name pos:line="72" pos:column="15">f<pos:position pos:line="72" pos:column="16"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="72" pos:column="18">" NC "<pos:position pos:line="72" pos:column="24"/></literal></expr></argument>)<pos:position pos:line="72" pos:column="25"/></argument_list></call></expr>;<pos:position pos:line="72" pos:column="26"/></expr_stmt>
      <do pos:line="73" pos:column="7">do
        <block pos:line="74" pos:column="9">{
        <expr_stmt><expr><name pos:line="75" pos:column="9">code<pos:position pos:line="75" pos:column="13"/></name><operator pos:line="75" pos:column="13">++<pos:position pos:line="75" pos:column="15"/></operator></expr>;<pos:position pos:line="75" pos:column="16"/></expr_stmt>
        <expr_stmt><expr><name pos:line="76" pos:column="9">code<pos:position pos:line="76" pos:column="13"/></name> <operator pos:line="76" pos:column="14">+=<pos:position pos:line="76" pos:column="16"/></operator> <literal type="number" pos:line="76" pos:column="17">1<pos:position pos:line="76" pos:column="18"/></literal> <operator pos:line="76" pos:column="19">+<pos:position pos:line="76" pos:column="20"/></operator> <call><name pos:line="76" pos:column="21">print_char<pos:position pos:line="76" pos:column="31"/></name><argument_list pos:line="76" pos:column="31">(<argument><expr><name pos:line="76" pos:column="32">f<pos:position pos:line="76" pos:column="33"/></name></expr></argument>, <argument><expr><name pos:line="76" pos:column="35">code<pos:position pos:line="76" pos:column="39"/></name></expr></argument>, <argument><expr><name pos:line="76" pos:column="41">utf8<pos:position pos:line="76" pos:column="45"/></name></expr></argument>)<pos:position pos:line="76" pos:column="46"/></argument_list></call></expr>;<pos:position pos:line="76" pos:column="47"/></expr_stmt>
        }<pos:position pos:line="77" pos:column="10"/></block>
      while <condition pos:line="78" pos:column="13">(<expr><operator pos:line="78" pos:column="14">*<pos:position pos:line="78" pos:column="15"/></operator><name pos:line="78" pos:column="15">code<pos:position pos:line="78" pos:column="19"/></name> <operator pos:line="78" pos:column="20">==<pos:position pos:line="78" pos:column="22"/></operator> <name pos:line="78" pos:column="23">OP_CHARNC<pos:position pos:line="78" pos:column="32"/></name></expr>)<pos:position pos:line="78" pos:column="33"/></condition>;<pos:position pos:line="78" pos:column="34"/></do>
      <expr_stmt><expr><call><name pos:line="79" pos:column="7">fprintf<pos:position pos:line="79" pos:column="14"/></name><argument_list pos:line="79" pos:column="14">(<argument><expr><name pos:line="79" pos:column="15">f<pos:position pos:line="79" pos:column="16"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="79" pos:column="18">"\n"<pos:position pos:line="79" pos:column="22"/></literal></expr></argument>)<pos:position pos:line="79" pos:column="23"/></argument_list></call></expr>;<pos:position pos:line="79" pos:column="24"/></expr_stmt>
      <continue pos:line="80" pos:column="7">continue;<pos:position pos:line="80" pos:column="16"/></continue>
      }<pos:position pos:line="81" pos:column="8"/></block>
    <break pos:line="82" pos:column="5">break;<pos:position pos:line="82" pos:column="11"/></break>

    <case pos:line="84" pos:column="5">case <expr><name pos:line="84" pos:column="10">OP_KETRMAX<pos:position pos:line="84" pos:column="20"/></name></expr>:<pos:position pos:line="84" pos:column="21"/></case>
    <case pos:line="85" pos:column="5">case <expr><name pos:line="85" pos:column="10">OP_KETRMIN<pos:position pos:line="85" pos:column="20"/></name></expr>:<pos:position pos:line="85" pos:column="21"/></case>
    <case pos:line="86" pos:column="5">case <expr><name pos:line="86" pos:column="10">OP_ALT<pos:position pos:line="86" pos:column="16"/></name></expr>:<pos:position pos:line="86" pos:column="17"/></case>
    <case pos:line="87" pos:column="5">case <expr><name pos:line="87" pos:column="10">OP_KET<pos:position pos:line="87" pos:column="16"/></name></expr>:<pos:position pos:line="87" pos:column="17"/></case>
    <case pos:line="88" pos:column="5">case <expr><name pos:line="88" pos:column="10">OP_ASSERT<pos:position pos:line="88" pos:column="19"/></name></expr>:<pos:position pos:line="88" pos:column="20"/></case>
    <case pos:line="89" pos:column="5">case <expr><name pos:line="89" pos:column="10">OP_ASSERT_NOT<pos:position pos:line="89" pos:column="23"/></name></expr>:<pos:position pos:line="89" pos:column="24"/></case>
    <case pos:line="90" pos:column="5">case <expr><name pos:line="90" pos:column="10">OP_ASSERTBACK<pos:position pos:line="90" pos:column="23"/></name></expr>:<pos:position pos:line="90" pos:column="24"/></case>
    <case pos:line="91" pos:column="5">case <expr><name pos:line="91" pos:column="10">OP_ASSERTBACK_NOT<pos:position pos:line="91" pos:column="27"/></name></expr>:<pos:position pos:line="91" pos:column="28"/></case>
    <case pos:line="92" pos:column="5">case <expr><name pos:line="92" pos:column="10">OP_ONCE<pos:position pos:line="92" pos:column="17"/></name></expr>:<pos:position pos:line="92" pos:column="18"/></case>
    <case pos:line="93" pos:column="5">case <expr><name pos:line="93" pos:column="10">OP_COND<pos:position pos:line="93" pos:column="17"/></name></expr>:<pos:position pos:line="93" pos:column="18"/></case>
    <case pos:line="94" pos:column="5">case <expr><name pos:line="94" pos:column="10">OP_REVERSE<pos:position pos:line="94" pos:column="20"/></name></expr>:<pos:position pos:line="94" pos:column="21"/></case>
    <expr_stmt><expr><call><name pos:line="95" pos:column="5">fprintf<pos:position pos:line="95" pos:column="12"/></name><argument_list pos:line="95" pos:column="12">(<argument><expr><name pos:line="95" pos:column="13">f<pos:position pos:line="95" pos:column="14"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="95" pos:column="16">"%3d %s"<pos:position pos:line="95" pos:column="24"/></literal></expr></argument>, <argument><expr><call><name pos:line="95" pos:column="26">GET<pos:position pos:line="95" pos:column="29"/></name><argument_list pos:line="95" pos:column="29">(<argument><expr><name pos:line="95" pos:column="30">code<pos:position pos:line="95" pos:column="34"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="95" pos:column="36">1<pos:position pos:line="95" pos:column="37"/></literal></expr></argument>)<pos:position pos:line="95" pos:column="38"/></argument_list></call></expr></argument>, <argument><expr><name><name pos:line="95" pos:column="40">OP_names<pos:position pos:line="95" pos:column="48"/></name><index pos:line="95" pos:column="48">[<expr><operator pos:line="95" pos:column="49">*<pos:position pos:line="95" pos:column="50"/></operator><name pos:line="95" pos:column="50">code<pos:position pos:line="95" pos:column="54"/></name></expr>]<pos:position pos:line="95" pos:column="55"/></index></name></expr></argument>)<pos:position pos:line="95" pos:column="56"/></argument_list></call></expr>;<pos:position pos:line="95" pos:column="57"/></expr_stmt>
    <break pos:line="96" pos:column="5">break;<pos:position pos:line="96" pos:column="11"/></break>

    <case pos:line="98" pos:column="5">case <expr><name pos:line="98" pos:column="10">OP_BRANUMBER<pos:position pos:line="98" pos:column="22"/></name></expr>:<pos:position pos:line="98" pos:column="23"/></case>
    <expr_stmt><expr><call><name pos:line="99" pos:column="5">printf<pos:position pos:line="99" pos:column="11"/></name><argument_list pos:line="99" pos:column="11">(<argument><expr><literal type="string" pos:line="99" pos:column="12">"%3d %s"<pos:position pos:line="99" pos:column="20"/></literal></expr></argument>, <argument><expr><call><name pos:line="99" pos:column="22">GET2<pos:position pos:line="99" pos:column="26"/></name><argument_list pos:line="99" pos:column="26">(<argument><expr><name pos:line="99" pos:column="27">code<pos:position pos:line="99" pos:column="31"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="99" pos:column="33">1<pos:position pos:line="99" pos:column="34"/></literal></expr></argument>)<pos:position pos:line="99" pos:column="35"/></argument_list></call></expr></argument>, <argument><expr><name><name pos:line="99" pos:column="37">OP_names<pos:position pos:line="99" pos:column="45"/></name><index pos:line="99" pos:column="45">[<expr><operator pos:line="99" pos:column="46">*<pos:position pos:line="99" pos:column="47"/></operator><name pos:line="99" pos:column="47">code<pos:position pos:line="99" pos:column="51"/></name></expr>]<pos:position pos:line="99" pos:column="52"/></index></name></expr></argument>)<pos:position pos:line="99" pos:column="53"/></argument_list></call></expr>;<pos:position pos:line="99" pos:column="54"/></expr_stmt>
    <break pos:line="100" pos:column="5">break;<pos:position pos:line="100" pos:column="11"/></break>

    <case pos:line="102" pos:column="5">case <expr><name pos:line="102" pos:column="10">OP_CREF<pos:position pos:line="102" pos:column="17"/></name></expr>:<pos:position pos:line="102" pos:column="18"/></case>
    <if pos:line="103" pos:column="5">if <condition pos:line="103" pos:column="8">(<expr><call><name pos:line="103" pos:column="9">GET2<pos:position pos:line="103" pos:column="13"/></name><argument_list pos:line="103" pos:column="13">(<argument><expr><name pos:line="103" pos:column="14">code<pos:position pos:line="103" pos:column="18"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="103" pos:column="20">1<pos:position pos:line="103" pos:column="21"/></literal></expr></argument>)<pos:position pos:line="103" pos:column="22"/></argument_list></call> <operator pos:line="103" pos:column="23">==<pos:position pos:line="103" pos:column="25"/></operator> <name pos:line="103" pos:column="26">CREF_RECURSE<pos:position pos:line="103" pos:column="38"/></name></expr>)<pos:position pos:line="103" pos:column="39"/></condition><then pos:line="103" pos:column="39">
      <block type="pseudo"><expr_stmt><expr><call><name pos:line="104" pos:column="7">fprintf<pos:position pos:line="104" pos:column="14"/></name><argument_list pos:line="104" pos:column="14">(<argument><expr><name pos:line="104" pos:column="15">f<pos:position pos:line="104" pos:column="16"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="104" pos:column="18">"    Cond recurse"<pos:position pos:line="104" pos:column="36"/></literal></expr></argument>)<pos:position pos:line="104" pos:column="37"/></argument_list></call></expr>;<pos:position pos:line="104" pos:column="38"/></expr_stmt></block></then>
    <else pos:line="105" pos:column="5">else
      <block type="pseudo"><expr_stmt><expr><call><name pos:line="106" pos:column="7">fprintf<pos:position pos:line="106" pos:column="14"/></name><argument_list pos:line="106" pos:column="14">(<argument><expr><name pos:line="106" pos:column="15">f<pos:position pos:line="106" pos:column="16"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="106" pos:column="18">"%3d %s"<pos:position pos:line="106" pos:column="26"/></literal></expr></argument>, <argument><expr><call><name pos:line="106" pos:column="28">GET2<pos:position pos:line="106" pos:column="32"/></name><argument_list pos:line="106" pos:column="32">(<argument><expr><name pos:line="106" pos:column="33">code<pos:position pos:line="106" pos:column="37"/></name></expr></argument>,<argument><expr><literal type="number" pos:line="106" pos:column="38">1<pos:position pos:line="106" pos:column="39"/></literal></expr></argument>)<pos:position pos:line="106" pos:column="40"/></argument_list></call></expr></argument>, <argument><expr><name><name pos:line="106" pos:column="42">OP_names<pos:position pos:line="106" pos:column="50"/></name><index pos:line="106" pos:column="50">[<expr><operator pos:line="106" pos:column="51">*<pos:position pos:line="106" pos:column="52"/></operator><name pos:line="106" pos:column="52">code<pos:position pos:line="106" pos:column="56"/></name></expr>]<pos:position pos:line="106" pos:column="57"/></index></name></expr></argument>)<pos:position pos:line="106" pos:column="58"/></argument_list></call></expr>;<pos:position pos:line="106" pos:column="59"/></expr_stmt></block></else></if>
    <break pos:line="107" pos:column="5">break;<pos:position pos:line="107" pos:column="11"/></break>

    <case pos:line="109" pos:column="5">case <expr><name pos:line="109" pos:column="10">OP_STAR<pos:position pos:line="109" pos:column="17"/></name></expr>:<pos:position pos:line="109" pos:column="18"/></case>
    <case pos:line="110" pos:column="5">case <expr><name pos:line="110" pos:column="10">OP_MINSTAR<pos:position pos:line="110" pos:column="20"/></name></expr>:<pos:position pos:line="110" pos:column="21"/></case>
    <case pos:line="111" pos:column="5">case <expr><name pos:line="111" pos:column="10">OP_PLUS<pos:position pos:line="111" pos:column="17"/></name></expr>:<pos:position pos:line="111" pos:column="18"/></case>
    <case pos:line="112" pos:column="5">case <expr><name pos:line="112" pos:column="10">OP_MINPLUS<pos:position pos:line="112" pos:column="20"/></name></expr>:<pos:position pos:line="112" pos:column="21"/></case>
    <case pos:line="113" pos:column="5">case <expr><name pos:line="113" pos:column="10">OP_QUERY<pos:position pos:line="113" pos:column="18"/></name></expr>:<pos:position pos:line="113" pos:column="19"/></case>
    <case pos:line="114" pos:column="5">case <expr><name pos:line="114" pos:column="10">OP_MINQUERY<pos:position pos:line="114" pos:column="21"/></name></expr>:<pos:position pos:line="114" pos:column="22"/></case>
    <case pos:line="115" pos:column="5">case <expr><name pos:line="115" pos:column="10">OP_TYPESTAR<pos:position pos:line="115" pos:column="21"/></name></expr>:<pos:position pos:line="115" pos:column="22"/></case>
    <case pos:line="116" pos:column="5">case <expr><name pos:line="116" pos:column="10">OP_TYPEMINSTAR<pos:position pos:line="116" pos:column="24"/></name></expr>:<pos:position pos:line="116" pos:column="25"/></case>
    <case pos:line="117" pos:column="5">case <expr><name pos:line="117" pos:column="10">OP_TYPEPLUS<pos:position pos:line="117" pos:column="21"/></name></expr>:<pos:position pos:line="117" pos:column="22"/></case>
    <case pos:line="118" pos:column="5">case <expr><name pos:line="118" pos:column="10">OP_TYPEMINPLUS<pos:position pos:line="118" pos:column="24"/></name></expr>:<pos:position pos:line="118" pos:column="25"/></case>
    <case pos:line="119" pos:column="5">case <expr><name pos:line="119" pos:column="10">OP_TYPEQUERY<pos:position pos:line="119" pos:column="22"/></name></expr>:<pos:position pos:line="119" pos:column="23"/></case>
    <case pos:line="120" pos:column="5">case <expr><name pos:line="120" pos:column="10">OP_TYPEMINQUERY<pos:position pos:line="120" pos:column="25"/></name></expr>:<pos:position pos:line="120" pos:column="26"/></case>
    <expr_stmt><expr><call><name pos:line="121" pos:column="5">fprintf<pos:position pos:line="121" pos:column="12"/></name><argument_list pos:line="121" pos:column="12">(<argument><expr><name pos:line="121" pos:column="13">f<pos:position pos:line="121" pos:column="14"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="121" pos:column="16">"    "<pos:position pos:line="121" pos:column="22"/></literal></expr></argument>)<pos:position pos:line="121" pos:column="23"/></argument_list></call></expr>;<pos:position pos:line="121" pos:column="24"/></expr_stmt>
    <if pos:line="122" pos:column="5">if <condition pos:line="122" pos:column="8">(<expr><operator pos:line="122" pos:column="9">*<pos:position pos:line="122" pos:column="10"/></operator><name pos:line="122" pos:column="10">code<pos:position pos:line="122" pos:column="14"/></name> <operator pos:line="122" pos:column="15">&gt;=<pos:position pos:line="122" pos:column="20"/></operator> <name pos:line="122" pos:column="18">OP_TYPESTAR<pos:position pos:line="122" pos:column="29"/></name></expr>)<pos:position pos:line="122" pos:column="30"/></condition><then pos:line="122" pos:column="30">
      <block pos:line="123" pos:column="7">{
      <expr_stmt><expr><call><name pos:line="124" pos:column="7">fprintf<pos:position pos:line="124" pos:column="14"/></name><argument_list pos:line="124" pos:column="14">(<argument><expr><name pos:line="124" pos:column="15">f<pos:position pos:line="124" pos:column="16"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="124" pos:column="18">"%s"<pos:position pos:line="124" pos:column="22"/></literal></expr></argument>, <argument><expr><name><name pos:line="124" pos:column="24">OP_names<pos:position pos:line="124" pos:column="32"/></name><index pos:line="124" pos:column="32">[<expr><name><name pos:line="124" pos:column="33">code<pos:position pos:line="124" pos:column="37"/></name><index pos:line="124" pos:column="37">[<expr><literal type="number" pos:line="124" pos:column="38">1<pos:position pos:line="124" pos:column="39"/></literal></expr>]<pos:position pos:line="124" pos:column="40"/></index></name></expr>]<pos:position pos:line="124" pos:column="41"/></index></name></expr></argument>)<pos:position pos:line="124" pos:column="42"/></argument_list></call></expr>;<pos:position pos:line="124" pos:column="43"/></expr_stmt>
<cpp:ifdef pos:line="125" pos:column="1">#<cpp:directive pos:line="125" pos:column="2">ifdef<pos:position pos:line="125" pos:column="7"/></cpp:directive> <name pos:line="125" pos:column="8">SUPPORT_UCP<pos:position pos:line="125" pos:column="19"/></name></cpp:ifdef>
      <if pos:line="126" pos:column="7">if <condition pos:line="126" pos:column="10">(<expr><name><name pos:line="126" pos:column="11">code<pos:position pos:line="126" pos:column="15"/></name><index pos:line="126" pos:column="15">[<expr><literal type="number" pos:line="126" pos:column="16">1<pos:position pos:line="126" pos:column="17"/></literal></expr>]<pos:position pos:line="126" pos:column="18"/></index></name> <operator pos:line="126" pos:column="19">==<pos:position pos:line="126" pos:column="21"/></operator> <name pos:line="126" pos:column="22">OP_PROP<pos:position pos:line="126" pos:column="29"/></name> <operator pos:line="126" pos:column="30">||<pos:position pos:line="126" pos:column="32"/></operator> <name><name pos:line="126" pos:column="33">code<pos:position pos:line="126" pos:column="37"/></name><index pos:line="126" pos:column="37">[<expr><literal type="number" pos:line="126" pos:column="38">1<pos:position pos:line="126" pos:column="39"/></literal></expr>]<pos:position pos:line="126" pos:column="40"/></index></name> <operator pos:line="126" pos:column="41">==<pos:position pos:line="126" pos:column="43"/></operator> <name pos:line="126" pos:column="44">OP_NOTPROP<pos:position pos:line="126" pos:column="54"/></name></expr>)<pos:position pos:line="126" pos:column="55"/></condition><then pos:line="126" pos:column="55">
        <block pos:line="127" pos:column="9">{
        <expr_stmt><expr><call><name pos:line="128" pos:column="9">fprintf<pos:position pos:line="128" pos:column="16"/></name><argument_list pos:line="128" pos:column="16">(<argument><expr><name pos:line="128" pos:column="17">f<pos:position pos:line="128" pos:column="18"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="128" pos:column="20">" %s "<pos:position pos:line="128" pos:column="26"/></literal></expr></argument>, <argument><expr><call><name pos:line="128" pos:column="28">get_ucpname<pos:position pos:line="128" pos:column="39"/></name><argument_list pos:line="128" pos:column="39">(<argument><expr><name><name pos:line="128" pos:column="40">code<pos:position pos:line="128" pos:column="44"/></name><index pos:line="128" pos:column="44">[<expr><literal type="number" pos:line="128" pos:column="45">2<pos:position pos:line="128" pos:column="46"/></literal></expr>]<pos:position pos:line="128" pos:column="47"/></index></name></expr></argument>)<pos:position pos:line="128" pos:column="48"/></argument_list></call></expr></argument>)<pos:position pos:line="128" pos:column="49"/></argument_list></call></expr>;<pos:position pos:line="128" pos:column="50"/></expr_stmt>
        <expr_stmt><expr><name pos:line="129" pos:column="9">extra<pos:position pos:line="129" pos:column="14"/></name> <operator pos:line="129" pos:column="15">=<pos:position pos:line="129" pos:column="16"/></operator> <literal type="number" pos:line="129" pos:column="17">1<pos:position pos:line="129" pos:column="18"/></literal></expr>;<pos:position pos:line="129" pos:column="19"/></expr_stmt>
        }<pos:position pos:line="130" pos:column="10"/></block></then></if>
<cpp:endif pos:line="131" pos:column="1">#<cpp:directive pos:line="131" pos:column="2">endif<pos:position pos:line="131" pos:column="7"/></cpp:directive></cpp:endif>
      }<pos:position pos:line="132" pos:column="8"/></block></then>
    <else pos:line="133" pos:column="5">else <block type="pseudo"><expr_stmt><expr><name pos:line="133" pos:column="10">extra<pos:position pos:line="133" pos:column="15"/></name> <operator pos:line="133" pos:column="16">=<pos:position pos:line="133" pos:column="17"/></operator> <call><name pos:line="133" pos:column="18">print_char<pos:position pos:line="133" pos:column="28"/></name><argument_list pos:line="133" pos:column="28">(<argument><expr><name pos:line="133" pos:column="29">f<pos:position pos:line="133" pos:column="30"/></name></expr></argument>, <argument><expr><name pos:line="133" pos:column="32">code<pos:position pos:line="133" pos:column="36"/></name><operator pos:line="133" pos:column="36">+<pos:position pos:line="133" pos:column="37"/></operator><literal type="number" pos:line="133" pos:column="37">1<pos:position pos:line="133" pos:column="38"/></literal></expr></argument>, <argument><expr><name pos:line="133" pos:column="40">utf8<pos:position pos:line="133" pos:column="44"/></name></expr></argument>)<pos:position pos:line="133" pos:column="45"/></argument_list></call></expr>;<pos:position pos:line="133" pos:column="46"/></expr_stmt></block></else></if>
    <expr_stmt><expr><call><name pos:line="134" pos:column="5">fprintf<pos:position pos:line="134" pos:column="12"/></name><argument_list pos:line="134" pos:column="12">(<argument><expr><name pos:line="134" pos:column="13">f<pos:position pos:line="134" pos:column="14"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="134" pos:column="16">"%s"<pos:position pos:line="134" pos:column="20"/></literal></expr></argument>, <argument><expr><name><name pos:line="134" pos:column="22">OP_names<pos:position pos:line="134" pos:column="30"/></name><index pos:line="134" pos:column="30">[<expr><operator pos:line="134" pos:column="31">*<pos:position pos:line="134" pos:column="32"/></operator><name pos:line="134" pos:column="32">code<pos:position pos:line="134" pos:column="36"/></name></expr>]<pos:position pos:line="134" pos:column="37"/></index></name></expr></argument>)<pos:position pos:line="134" pos:column="38"/></argument_list></call></expr>;<pos:position pos:line="134" pos:column="39"/></expr_stmt>
    <break pos:line="135" pos:column="5">break;<pos:position pos:line="135" pos:column="11"/></break>

    <case pos:line="137" pos:column="5">case <expr><name pos:line="137" pos:column="10">OP_EXACT<pos:position pos:line="137" pos:column="18"/></name></expr>:<pos:position pos:line="137" pos:column="19"/></case>
    <case pos:line="138" pos:column="5">case <expr><name pos:line="138" pos:column="10">OP_UPTO<pos:position pos:line="138" pos:column="17"/></name></expr>:<pos:position pos:line="138" pos:column="18"/></case>
    <case pos:line="139" pos:column="5">case <expr><name pos:line="139" pos:column="10">OP_MINUPTO<pos:position pos:line="139" pos:column="20"/></name></expr>:<pos:position pos:line="139" pos:column="21"/></case>
    <expr_stmt><expr><call><name pos:line="140" pos:column="5">fprintf<pos:position pos:line="140" pos:column="12"/></name><argument_list pos:line="140" pos:column="12">(<argument><expr><name pos:line="140" pos:column="13">f<pos:position pos:line="140" pos:column="14"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="140" pos:column="16">"    "<pos:position pos:line="140" pos:column="22"/></literal></expr></argument>)<pos:position pos:line="140" pos:column="23"/></argument_list></call></expr>;<pos:position pos:line="140" pos:column="24"/></expr_stmt>
    <expr_stmt><expr><name pos:line="141" pos:column="5">extra<pos:position pos:line="141" pos:column="10"/></name> <operator pos:line="141" pos:column="11">=<pos:position pos:line="141" pos:column="12"/></operator> <call><name pos:line="141" pos:column="13">print_char<pos:position pos:line="141" pos:column="23"/></name><argument_list pos:line="141" pos:column="23">(<argument><expr><name pos:line="141" pos:column="24">f<pos:position pos:line="141" pos:column="25"/></name></expr></argument>, <argument><expr><name pos:line="141" pos:column="27">code<pos:position pos:line="141" pos:column="31"/></name><operator pos:line="141" pos:column="31">+<pos:position pos:line="141" pos:column="32"/></operator><literal type="number" pos:line="141" pos:column="32">3<pos:position pos:line="141" pos:column="33"/></literal></expr></argument>, <argument><expr><name pos:line="141" pos:column="35">utf8<pos:position pos:line="141" pos:column="39"/></name></expr></argument>)<pos:position pos:line="141" pos:column="40"/></argument_list></call></expr>;<pos:position pos:line="141" pos:column="41"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="142" pos:column="5">fprintf<pos:position pos:line="142" pos:column="12"/></name><argument_list pos:line="142" pos:column="12">(<argument><expr><name pos:line="142" pos:column="13">f<pos:position pos:line="142" pos:column="14"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="142" pos:column="16">"{"<pos:position pos:line="142" pos:column="19"/></literal></expr></argument>)<pos:position pos:line="142" pos:column="20"/></argument_list></call></expr>;<pos:position pos:line="142" pos:column="21"/></expr_stmt>
    <if pos:line="143" pos:column="5">if <condition pos:line="143" pos:column="8">(<expr><operator pos:line="143" pos:column="9">*<pos:position pos:line="143" pos:column="10"/></operator><name pos:line="143" pos:column="10">code<pos:position pos:line="143" pos:column="14"/></name> <operator pos:line="143" pos:column="15">!=<pos:position pos:line="143" pos:column="17"/></operator> <name pos:line="143" pos:column="18">OP_EXACT<pos:position pos:line="143" pos:column="26"/></name></expr>)<pos:position pos:line="143" pos:column="27"/></condition><then pos:line="143" pos:column="27"> <block type="pseudo"><expr_stmt><expr><call><name pos:line="143" pos:column="28">fprintf<pos:position pos:line="143" pos:column="35"/></name><argument_list pos:line="143" pos:column="35">(<argument><expr><name pos:line="143" pos:column="36">f<pos:position pos:line="143" pos:column="37"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="143" pos:column="39">","<pos:position pos:line="143" pos:column="42"/></literal></expr></argument>)<pos:position pos:line="143" pos:column="43"/></argument_list></call></expr>;<pos:position pos:line="143" pos:column="44"/></expr_stmt></block></then></if>
    <expr_stmt><expr><call><name pos:line="144" pos:column="5">fprintf<pos:position pos:line="144" pos:column="12"/></name><argument_list pos:line="144" pos:column="12">(<argument><expr><name pos:line="144" pos:column="13">f<pos:position pos:line="144" pos:column="14"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="144" pos:column="16">"%d}"<pos:position pos:line="144" pos:column="21"/></literal></expr></argument>, <argument><expr><call><name pos:line="144" pos:column="23">GET2<pos:position pos:line="144" pos:column="27"/></name><argument_list pos:line="144" pos:column="27">(<argument><expr><name pos:line="144" pos:column="28">code<pos:position pos:line="144" pos:column="32"/></name></expr></argument>,<argument><expr><literal type="number" pos:line="144" pos:column="33">1<pos:position pos:line="144" pos:column="34"/></literal></expr></argument>)<pos:position pos:line="144" pos:column="35"/></argument_list></call></expr></argument>)<pos:position pos:line="144" pos:column="36"/></argument_list></call></expr>;<pos:position pos:line="144" pos:column="37"/></expr_stmt>
    <if pos:line="145" pos:column="5">if <condition pos:line="145" pos:column="8">(<expr><operator pos:line="145" pos:column="9">*<pos:position pos:line="145" pos:column="10"/></operator><name pos:line="145" pos:column="10">code<pos:position pos:line="145" pos:column="14"/></name> <operator pos:line="145" pos:column="15">==<pos:position pos:line="145" pos:column="17"/></operator> <name pos:line="145" pos:column="18">OP_MINUPTO<pos:position pos:line="145" pos:column="28"/></name></expr>)<pos:position pos:line="145" pos:column="29"/></condition><then pos:line="145" pos:column="29"> <block type="pseudo"><expr_stmt><expr><call><name pos:line="145" pos:column="30">fprintf<pos:position pos:line="145" pos:column="37"/></name><argument_list pos:line="145" pos:column="37">(<argument><expr><name pos:line="145" pos:column="38">f<pos:position pos:line="145" pos:column="39"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="145" pos:column="41">"?"<pos:position pos:line="145" pos:column="44"/></literal></expr></argument>)<pos:position pos:line="145" pos:column="45"/></argument_list></call></expr>;<pos:position pos:line="145" pos:column="46"/></expr_stmt></block></then></if>
    <break pos:line="146" pos:column="5">break;<pos:position pos:line="146" pos:column="11"/></break>

    <case pos:line="148" pos:column="5">case <expr><name pos:line="148" pos:column="10">OP_TYPEEXACT<pos:position pos:line="148" pos:column="22"/></name></expr>:<pos:position pos:line="148" pos:column="23"/></case>
    <case pos:line="149" pos:column="5">case <expr><name pos:line="149" pos:column="10">OP_TYPEUPTO<pos:position pos:line="149" pos:column="21"/></name></expr>:<pos:position pos:line="149" pos:column="22"/></case>
    <case pos:line="150" pos:column="5">case <expr><name pos:line="150" pos:column="10">OP_TYPEMINUPTO<pos:position pos:line="150" pos:column="24"/></name></expr>:<pos:position pos:line="150" pos:column="25"/></case>
    <expr_stmt><expr><call><name pos:line="151" pos:column="5">fprintf<pos:position pos:line="151" pos:column="12"/></name><argument_list pos:line="151" pos:column="12">(<argument><expr><name pos:line="151" pos:column="13">f<pos:position pos:line="151" pos:column="14"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="151" pos:column="16">"    %s"<pos:position pos:line="151" pos:column="24"/></literal></expr></argument>, <argument><expr><name><name pos:line="151" pos:column="26">OP_names<pos:position pos:line="151" pos:column="34"/></name><index pos:line="151" pos:column="34">[<expr><name><name pos:line="151" pos:column="35">code<pos:position pos:line="151" pos:column="39"/></name><index pos:line="151" pos:column="39">[<expr><literal type="number" pos:line="151" pos:column="40">3<pos:position pos:line="151" pos:column="41"/></literal></expr>]<pos:position pos:line="151" pos:column="42"/></index></name></expr>]<pos:position pos:line="151" pos:column="43"/></index></name></expr></argument>)<pos:position pos:line="151" pos:column="44"/></argument_list></call></expr>;<pos:position pos:line="151" pos:column="45"/></expr_stmt>
<cpp:ifdef pos:line="152" pos:column="1">#<cpp:directive pos:line="152" pos:column="2">ifdef<pos:position pos:line="152" pos:column="7"/></cpp:directive> <name pos:line="152" pos:column="8">SUPPORT_UCP<pos:position pos:line="152" pos:column="19"/></name></cpp:ifdef>
    <if pos:line="153" pos:column="5">if <condition pos:line="153" pos:column="8">(<expr><name><name pos:line="153" pos:column="9">code<pos:position pos:line="153" pos:column="13"/></name><index pos:line="153" pos:column="13">[<expr><literal type="number" pos:line="153" pos:column="14">3<pos:position pos:line="153" pos:column="15"/></literal></expr>]<pos:position pos:line="153" pos:column="16"/></index></name> <operator pos:line="153" pos:column="17">==<pos:position pos:line="153" pos:column="19"/></operator> <name pos:line="153" pos:column="20">OP_PROP<pos:position pos:line="153" pos:column="27"/></name> <operator pos:line="153" pos:column="28">||<pos:position pos:line="153" pos:column="30"/></operator> <name><name pos:line="153" pos:column="31">code<pos:position pos:line="153" pos:column="35"/></name><index pos:line="153" pos:column="35">[<expr><literal type="number" pos:line="153" pos:column="36">3<pos:position pos:line="153" pos:column="37"/></literal></expr>]<pos:position pos:line="153" pos:column="38"/></index></name> <operator pos:line="153" pos:column="39">==<pos:position pos:line="153" pos:column="41"/></operator> <name pos:line="153" pos:column="42">OP_NOTPROP<pos:position pos:line="153" pos:column="52"/></name></expr>)<pos:position pos:line="153" pos:column="53"/></condition><then pos:line="153" pos:column="53">
      <block pos:line="154" pos:column="7">{
      <expr_stmt><expr><call><name pos:line="155" pos:column="7">fprintf<pos:position pos:line="155" pos:column="14"/></name><argument_list pos:line="155" pos:column="14">(<argument><expr><name pos:line="155" pos:column="15">f<pos:position pos:line="155" pos:column="16"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="155" pos:column="18">" %s "<pos:position pos:line="155" pos:column="24"/></literal></expr></argument>, <argument><expr><call><name pos:line="155" pos:column="26">get_ucpname<pos:position pos:line="155" pos:column="37"/></name><argument_list pos:line="155" pos:column="37">(<argument><expr><name><name pos:line="155" pos:column="38">code<pos:position pos:line="155" pos:column="42"/></name><index pos:line="155" pos:column="42">[<expr><literal type="number" pos:line="155" pos:column="43">4<pos:position pos:line="155" pos:column="44"/></literal></expr>]<pos:position pos:line="155" pos:column="45"/></index></name></expr></argument>)<pos:position pos:line="155" pos:column="46"/></argument_list></call></expr></argument>)<pos:position pos:line="155" pos:column="47"/></argument_list></call></expr>;<pos:position pos:line="155" pos:column="48"/></expr_stmt>
      <expr_stmt><expr><name pos:line="156" pos:column="7">extra<pos:position pos:line="156" pos:column="12"/></name> <operator pos:line="156" pos:column="13">=<pos:position pos:line="156" pos:column="14"/></operator> <literal type="number" pos:line="156" pos:column="15">1<pos:position pos:line="156" pos:column="16"/></literal></expr>;<pos:position pos:line="156" pos:column="17"/></expr_stmt>
      }<pos:position pos:line="157" pos:column="8"/></block></then></if>
<cpp:endif pos:line="158" pos:column="1">#<cpp:directive pos:line="158" pos:column="2">endif<pos:position pos:line="158" pos:column="7"/></cpp:directive></cpp:endif>
    <expr_stmt><expr><call><name pos:line="159" pos:column="5">fprintf<pos:position pos:line="159" pos:column="12"/></name><argument_list pos:line="159" pos:column="12">(<argument><expr><name pos:line="159" pos:column="13">f<pos:position pos:line="159" pos:column="14"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="159" pos:column="16">"{"<pos:position pos:line="159" pos:column="19"/></literal></expr></argument>)<pos:position pos:line="159" pos:column="20"/></argument_list></call></expr>;<pos:position pos:line="159" pos:column="21"/></expr_stmt>
    <if pos:line="160" pos:column="5">if <condition pos:line="160" pos:column="8">(<expr><operator pos:line="160" pos:column="9">*<pos:position pos:line="160" pos:column="10"/></operator><name pos:line="160" pos:column="10">code<pos:position pos:line="160" pos:column="14"/></name> <operator pos:line="160" pos:column="15">!=<pos:position pos:line="160" pos:column="17"/></operator> <name pos:line="160" pos:column="18">OP_TYPEEXACT<pos:position pos:line="160" pos:column="30"/></name></expr>)<pos:position pos:line="160" pos:column="31"/></condition><then pos:line="160" pos:column="31"> <block type="pseudo"><expr_stmt><expr><call><name pos:line="160" pos:column="32">fprintf<pos:position pos:line="160" pos:column="39"/></name><argument_list pos:line="160" pos:column="39">(<argument><expr><name pos:line="160" pos:column="40">f<pos:position pos:line="160" pos:column="41"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="160" pos:column="43">"0,"<pos:position pos:line="160" pos:column="47"/></literal></expr></argument>)<pos:position pos:line="160" pos:column="48"/></argument_list></call></expr>;<pos:position pos:line="160" pos:column="49"/></expr_stmt></block></then></if>
    <expr_stmt><expr><call><name pos:line="161" pos:column="5">fprintf<pos:position pos:line="161" pos:column="12"/></name><argument_list pos:line="161" pos:column="12">(<argument><expr><name pos:line="161" pos:column="13">f<pos:position pos:line="161" pos:column="14"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="161" pos:column="16">"%d}"<pos:position pos:line="161" pos:column="21"/></literal></expr></argument>, <argument><expr><call><name pos:line="161" pos:column="23">GET2<pos:position pos:line="161" pos:column="27"/></name><argument_list pos:line="161" pos:column="27">(<argument><expr><name pos:line="161" pos:column="28">code<pos:position pos:line="161" pos:column="32"/></name></expr></argument>,<argument><expr><literal type="number" pos:line="161" pos:column="33">1<pos:position pos:line="161" pos:column="34"/></literal></expr></argument>)<pos:position pos:line="161" pos:column="35"/></argument_list></call></expr></argument>)<pos:position pos:line="161" pos:column="36"/></argument_list></call></expr>;<pos:position pos:line="161" pos:column="37"/></expr_stmt>
    <if pos:line="162" pos:column="5">if <condition pos:line="162" pos:column="8">(<expr><operator pos:line="162" pos:column="9">*<pos:position pos:line="162" pos:column="10"/></operator><name pos:line="162" pos:column="10">code<pos:position pos:line="162" pos:column="14"/></name> <operator pos:line="162" pos:column="15">==<pos:position pos:line="162" pos:column="17"/></operator> <name pos:line="162" pos:column="18">OP_TYPEMINUPTO<pos:position pos:line="162" pos:column="32"/></name></expr>)<pos:position pos:line="162" pos:column="33"/></condition><then pos:line="162" pos:column="33"> <block type="pseudo"><expr_stmt><expr><call><name pos:line="162" pos:column="34">fprintf<pos:position pos:line="162" pos:column="41"/></name><argument_list pos:line="162" pos:column="41">(<argument><expr><name pos:line="162" pos:column="42">f<pos:position pos:line="162" pos:column="43"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="162" pos:column="45">"?"<pos:position pos:line="162" pos:column="48"/></literal></expr></argument>)<pos:position pos:line="162" pos:column="49"/></argument_list></call></expr>;<pos:position pos:line="162" pos:column="50"/></expr_stmt></block></then></if>
    <break pos:line="163" pos:column="5">break;<pos:position pos:line="163" pos:column="11"/></break>

    <case pos:line="165" pos:column="5">case <expr><name pos:line="165" pos:column="10">OP_NOT<pos:position pos:line="165" pos:column="16"/></name></expr>:<pos:position pos:line="165" pos:column="17"/></case>
    <if pos:line="166" pos:column="5">if <condition pos:line="166" pos:column="8">(<expr><call><name pos:line="166" pos:column="9">isprint<pos:position pos:line="166" pos:column="16"/></name><argument_list pos:line="166" pos:column="16">(<argument><expr><name pos:line="166" pos:column="17">c<pos:position pos:line="166" pos:column="18"/></name> <operator pos:line="166" pos:column="19">=<pos:position pos:line="166" pos:column="20"/></operator> <name><name pos:line="166" pos:column="21">code<pos:position pos:line="166" pos:column="25"/></name><index pos:line="166" pos:column="25">[<expr><literal type="number" pos:line="166" pos:column="26">1<pos:position pos:line="166" pos:column="27"/></literal></expr>]<pos:position pos:line="166" pos:column="28"/></index></name></expr></argument>)<pos:position pos:line="166" pos:column="29"/></argument_list></call></expr>)<pos:position pos:line="166" pos:column="30"/></condition><then pos:line="166" pos:column="30"> <block type="pseudo"><expr_stmt><expr><call><name pos:line="166" pos:column="31">fprintf<pos:position pos:line="166" pos:column="38"/></name><argument_list pos:line="166" pos:column="38">(<argument><expr><name pos:line="166" pos:column="39">f<pos:position pos:line="166" pos:column="40"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="166" pos:column="42">"    [^%c]"<pos:position pos:line="166" pos:column="53"/></literal></expr></argument>, <argument><expr><name pos:line="166" pos:column="55">c<pos:position pos:line="166" pos:column="56"/></name></expr></argument>)<pos:position pos:line="166" pos:column="57"/></argument_list></call></expr>;<pos:position pos:line="166" pos:column="58"/></expr_stmt></block></then>
      <else pos:line="167" pos:column="7">else <block type="pseudo"><expr_stmt><expr><call><name pos:line="167" pos:column="12">fprintf<pos:position pos:line="167" pos:column="19"/></name><argument_list pos:line="167" pos:column="19">(<argument><expr><name pos:line="167" pos:column="20">f<pos:position pos:line="167" pos:column="21"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="167" pos:column="23">"    [^\\x%02x]"<pos:position pos:line="167" pos:column="39"/></literal></expr></argument>, <argument><expr><name pos:line="167" pos:column="41">c<pos:position pos:line="167" pos:column="42"/></name></expr></argument>)<pos:position pos:line="167" pos:column="43"/></argument_list></call></expr>;<pos:position pos:line="167" pos:column="44"/></expr_stmt></block></else></if>
    <break pos:line="168" pos:column="5">break;<pos:position pos:line="168" pos:column="11"/></break>

    <case pos:line="170" pos:column="5">case <expr><name pos:line="170" pos:column="10">OP_NOTSTAR<pos:position pos:line="170" pos:column="20"/></name></expr>:<pos:position pos:line="170" pos:column="21"/></case>
    <case pos:line="171" pos:column="5">case <expr><name pos:line="171" pos:column="10">OP_NOTMINSTAR<pos:position pos:line="171" pos:column="23"/></name></expr>:<pos:position pos:line="171" pos:column="24"/></case>
    <case pos:line="172" pos:column="5">case <expr><name pos:line="172" pos:column="10">OP_NOTPLUS<pos:position pos:line="172" pos:column="20"/></name></expr>:<pos:position pos:line="172" pos:column="21"/></case>
    <case pos:line="173" pos:column="5">case <expr><name pos:line="173" pos:column="10">OP_NOTMINPLUS<pos:position pos:line="173" pos:column="23"/></name></expr>:<pos:position pos:line="173" pos:column="24"/></case>
    <case pos:line="174" pos:column="5">case <expr><name pos:line="174" pos:column="10">OP_NOTQUERY<pos:position pos:line="174" pos:column="21"/></name></expr>:<pos:position pos:line="174" pos:column="22"/></case>
    <case pos:line="175" pos:column="5">case <expr><name pos:line="175" pos:column="10">OP_NOTMINQUERY<pos:position pos:line="175" pos:column="24"/></name></expr>:<pos:position pos:line="175" pos:column="25"/></case>
    <if pos:line="176" pos:column="5">if <condition pos:line="176" pos:column="8">(<expr><call><name pos:line="176" pos:column="9">isprint<pos:position pos:line="176" pos:column="16"/></name><argument_list pos:line="176" pos:column="16">(<argument><expr><name pos:line="176" pos:column="17">c<pos:position pos:line="176" pos:column="18"/></name> <operator pos:line="176" pos:column="19">=<pos:position pos:line="176" pos:column="20"/></operator> <name><name pos:line="176" pos:column="21">code<pos:position pos:line="176" pos:column="25"/></name><index pos:line="176" pos:column="25">[<expr><literal type="number" pos:line="176" pos:column="26">1<pos:position pos:line="176" pos:column="27"/></literal></expr>]<pos:position pos:line="176" pos:column="28"/></index></name></expr></argument>)<pos:position pos:line="176" pos:column="29"/></argument_list></call></expr>)<pos:position pos:line="176" pos:column="30"/></condition><then pos:line="176" pos:column="30"> <block type="pseudo"><expr_stmt><expr><call><name pos:line="176" pos:column="31">fprintf<pos:position pos:line="176" pos:column="38"/></name><argument_list pos:line="176" pos:column="38">(<argument><expr><name pos:line="176" pos:column="39">f<pos:position pos:line="176" pos:column="40"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="176" pos:column="42">"    [^%c]"<pos:position pos:line="176" pos:column="53"/></literal></expr></argument>, <argument><expr><name pos:line="176" pos:column="55">c<pos:position pos:line="176" pos:column="56"/></name></expr></argument>)<pos:position pos:line="176" pos:column="57"/></argument_list></call></expr>;<pos:position pos:line="176" pos:column="58"/></expr_stmt></block></then>
      <else pos:line="177" pos:column="7">else <block type="pseudo"><expr_stmt><expr><call><name pos:line="177" pos:column="12">fprintf<pos:position pos:line="177" pos:column="19"/></name><argument_list pos:line="177" pos:column="19">(<argument><expr><name pos:line="177" pos:column="20">f<pos:position pos:line="177" pos:column="21"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="177" pos:column="23">"    [^\\x%02x]"<pos:position pos:line="177" pos:column="39"/></literal></expr></argument>, <argument><expr><name pos:line="177" pos:column="41">c<pos:position pos:line="177" pos:column="42"/></name></expr></argument>)<pos:position pos:line="177" pos:column="43"/></argument_list></call></expr>;<pos:position pos:line="177" pos:column="44"/></expr_stmt></block></else></if>
    <expr_stmt><expr><call><name pos:line="178" pos:column="5">fprintf<pos:position pos:line="178" pos:column="12"/></name><argument_list pos:line="178" pos:column="12">(<argument><expr><name pos:line="178" pos:column="13">f<pos:position pos:line="178" pos:column="14"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="178" pos:column="16">"%s"<pos:position pos:line="178" pos:column="20"/></literal></expr></argument>, <argument><expr><name><name pos:line="178" pos:column="22">OP_names<pos:position pos:line="178" pos:column="30"/></name><index pos:line="178" pos:column="30">[<expr><operator pos:line="178" pos:column="31">*<pos:position pos:line="178" pos:column="32"/></operator><name pos:line="178" pos:column="32">code<pos:position pos:line="178" pos:column="36"/></name></expr>]<pos:position pos:line="178" pos:column="37"/></index></name></expr></argument>)<pos:position pos:line="178" pos:column="38"/></argument_list></call></expr>;<pos:position pos:line="178" pos:column="39"/></expr_stmt>
    <break pos:line="179" pos:column="5">break;<pos:position pos:line="179" pos:column="11"/></break>

    <case pos:line="181" pos:column="5">case <expr><name pos:line="181" pos:column="10">OP_NOTEXACT<pos:position pos:line="181" pos:column="21"/></name></expr>:<pos:position pos:line="181" pos:column="22"/></case>
    <case pos:line="182" pos:column="5">case <expr><name pos:line="182" pos:column="10">OP_NOTUPTO<pos:position pos:line="182" pos:column="20"/></name></expr>:<pos:position pos:line="182" pos:column="21"/></case>
    <case pos:line="183" pos:column="5">case <expr><name pos:line="183" pos:column="10">OP_NOTMINUPTO<pos:position pos:line="183" pos:column="23"/></name></expr>:<pos:position pos:line="183" pos:column="24"/></case>
    <if pos:line="184" pos:column="5">if <condition pos:line="184" pos:column="8">(<expr><call><name pos:line="184" pos:column="9">isprint<pos:position pos:line="184" pos:column="16"/></name><argument_list pos:line="184" pos:column="16">(<argument><expr><name pos:line="184" pos:column="17">c<pos:position pos:line="184" pos:column="18"/></name> <operator pos:line="184" pos:column="19">=<pos:position pos:line="184" pos:column="20"/></operator> <name><name pos:line="184" pos:column="21">code<pos:position pos:line="184" pos:column="25"/></name><index pos:line="184" pos:column="25">[<expr><literal type="number" pos:line="184" pos:column="26">3<pos:position pos:line="184" pos:column="27"/></literal></expr>]<pos:position pos:line="184" pos:column="28"/></index></name></expr></argument>)<pos:position pos:line="184" pos:column="29"/></argument_list></call></expr>)<pos:position pos:line="184" pos:column="30"/></condition><then pos:line="184" pos:column="30"> <block type="pseudo"><expr_stmt><expr><call><name pos:line="184" pos:column="31">fprintf<pos:position pos:line="184" pos:column="38"/></name><argument_list pos:line="184" pos:column="38">(<argument><expr><name pos:line="184" pos:column="39">f<pos:position pos:line="184" pos:column="40"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="184" pos:column="42">"    [^%c]{"<pos:position pos:line="184" pos:column="54"/></literal></expr></argument>, <argument><expr><name pos:line="184" pos:column="56">c<pos:position pos:line="184" pos:column="57"/></name></expr></argument>)<pos:position pos:line="184" pos:column="58"/></argument_list></call></expr>;<pos:position pos:line="184" pos:column="59"/></expr_stmt></block></then>
      <else pos:line="185" pos:column="7">else <block type="pseudo"><expr_stmt><expr><call><name pos:line="185" pos:column="12">fprintf<pos:position pos:line="185" pos:column="19"/></name><argument_list pos:line="185" pos:column="19">(<argument><expr><name pos:line="185" pos:column="20">f<pos:position pos:line="185" pos:column="21"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="185" pos:column="23">"    [^\\x%02x]{"<pos:position pos:line="185" pos:column="40"/></literal></expr></argument>, <argument><expr><name pos:line="185" pos:column="42">c<pos:position pos:line="185" pos:column="43"/></name></expr></argument>)<pos:position pos:line="185" pos:column="44"/></argument_list></call></expr>;<pos:position pos:line="185" pos:column="45"/></expr_stmt></block></else></if>
    <if pos:line="186" pos:column="5">if <condition pos:line="186" pos:column="8">(<expr><operator pos:line="186" pos:column="9">*<pos:position pos:line="186" pos:column="10"/></operator><name pos:line="186" pos:column="10">code<pos:position pos:line="186" pos:column="14"/></name> <operator pos:line="186" pos:column="15">!=<pos:position pos:line="186" pos:column="17"/></operator> <name pos:line="186" pos:column="18">OP_NOTEXACT<pos:position pos:line="186" pos:column="29"/></name></expr>)<pos:position pos:line="186" pos:column="30"/></condition><then pos:line="186" pos:column="30"> <block type="pseudo"><expr_stmt><expr><call><name pos:line="186" pos:column="31">fprintf<pos:position pos:line="186" pos:column="38"/></name><argument_list pos:line="186" pos:column="38">(<argument><expr><name pos:line="186" pos:column="39">f<pos:position pos:line="186" pos:column="40"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="186" pos:column="42">","<pos:position pos:line="186" pos:column="45"/></literal></expr></argument>)<pos:position pos:line="186" pos:column="46"/></argument_list></call></expr>;<pos:position pos:line="186" pos:column="47"/></expr_stmt></block></then></if>
    <expr_stmt><expr><call><name pos:line="187" pos:column="5">fprintf<pos:position pos:line="187" pos:column="12"/></name><argument_list pos:line="187" pos:column="12">(<argument><expr><name pos:line="187" pos:column="13">f<pos:position pos:line="187" pos:column="14"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="187" pos:column="16">"%d}"<pos:position pos:line="187" pos:column="21"/></literal></expr></argument>, <argument><expr><call><name pos:line="187" pos:column="23">GET2<pos:position pos:line="187" pos:column="27"/></name><argument_list pos:line="187" pos:column="27">(<argument><expr><name pos:line="187" pos:column="28">code<pos:position pos:line="187" pos:column="32"/></name></expr></argument>,<argument><expr><literal type="number" pos:line="187" pos:column="33">1<pos:position pos:line="187" pos:column="34"/></literal></expr></argument>)<pos:position pos:line="187" pos:column="35"/></argument_list></call></expr></argument>)<pos:position pos:line="187" pos:column="36"/></argument_list></call></expr>;<pos:position pos:line="187" pos:column="37"/></expr_stmt>
    <if pos:line="188" pos:column="5">if <condition pos:line="188" pos:column="8">(<expr><operator pos:line="188" pos:column="9">*<pos:position pos:line="188" pos:column="10"/></operator><name pos:line="188" pos:column="10">code<pos:position pos:line="188" pos:column="14"/></name> <operator pos:line="188" pos:column="15">==<pos:position pos:line="188" pos:column="17"/></operator> <name pos:line="188" pos:column="18">OP_NOTMINUPTO<pos:position pos:line="188" pos:column="31"/></name></expr>)<pos:position pos:line="188" pos:column="32"/></condition><then pos:line="188" pos:column="32"> <block type="pseudo"><expr_stmt><expr><call><name pos:line="188" pos:column="33">fprintf<pos:position pos:line="188" pos:column="40"/></name><argument_list pos:line="188" pos:column="40">(<argument><expr><name pos:line="188" pos:column="41">f<pos:position pos:line="188" pos:column="42"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="188" pos:column="44">"?"<pos:position pos:line="188" pos:column="47"/></literal></expr></argument>)<pos:position pos:line="188" pos:column="48"/></argument_list></call></expr>;<pos:position pos:line="188" pos:column="49"/></expr_stmt></block></then></if>
    <break pos:line="189" pos:column="5">break;<pos:position pos:line="189" pos:column="11"/></break>

    <case pos:line="191" pos:column="5">case <expr><name pos:line="191" pos:column="10">OP_RECURSE<pos:position pos:line="191" pos:column="20"/></name></expr>:<pos:position pos:line="191" pos:column="21"/></case>
    <expr_stmt><expr><call><name pos:line="192" pos:column="5">fprintf<pos:position pos:line="192" pos:column="12"/></name><argument_list pos:line="192" pos:column="12">(<argument><expr><name pos:line="192" pos:column="13">f<pos:position pos:line="192" pos:column="14"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="192" pos:column="16">"%3d %s"<pos:position pos:line="192" pos:column="24"/></literal></expr></argument>, <argument><expr><call><name pos:line="192" pos:column="26">GET<pos:position pos:line="192" pos:column="29"/></name><argument_list pos:line="192" pos:column="29">(<argument><expr><name pos:line="192" pos:column="30">code<pos:position pos:line="192" pos:column="34"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="192" pos:column="36">1<pos:position pos:line="192" pos:column="37"/></literal></expr></argument>)<pos:position pos:line="192" pos:column="38"/></argument_list></call></expr></argument>, <argument><expr><name><name pos:line="192" pos:column="40">OP_names<pos:position pos:line="192" pos:column="48"/></name><index pos:line="192" pos:column="48">[<expr><operator pos:line="192" pos:column="49">*<pos:position pos:line="192" pos:column="50"/></operator><name pos:line="192" pos:column="50">code<pos:position pos:line="192" pos:column="54"/></name></expr>]<pos:position pos:line="192" pos:column="55"/></index></name></expr></argument>)<pos:position pos:line="192" pos:column="56"/></argument_list></call></expr>;<pos:position pos:line="192" pos:column="57"/></expr_stmt>
    <break pos:line="193" pos:column="5">break;<pos:position pos:line="193" pos:column="11"/></break>

    <case pos:line="195" pos:column="5">case <expr><name pos:line="195" pos:column="10">OP_REF<pos:position pos:line="195" pos:column="16"/></name></expr>:<pos:position pos:line="195" pos:column="17"/></case>
    <expr_stmt><expr><call><name pos:line="196" pos:column="5">fprintf<pos:position pos:line="196" pos:column="12"/></name><argument_list pos:line="196" pos:column="12">(<argument><expr><name pos:line="196" pos:column="13">f<pos:position pos:line="196" pos:column="14"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="196" pos:column="16">"    \\%d"<pos:position pos:line="196" pos:column="26"/></literal></expr></argument>, <argument><expr><call><name pos:line="196" pos:column="28">GET2<pos:position pos:line="196" pos:column="32"/></name><argument_list pos:line="196" pos:column="32">(<argument><expr><name pos:line="196" pos:column="33">code<pos:position pos:line="196" pos:column="37"/></name></expr></argument>,<argument><expr><literal type="number" pos:line="196" pos:column="38">1<pos:position pos:line="196" pos:column="39"/></literal></expr></argument>)<pos:position pos:line="196" pos:column="40"/></argument_list></call></expr></argument>)<pos:position pos:line="196" pos:column="41"/></argument_list></call></expr>;<pos:position pos:line="196" pos:column="42"/></expr_stmt>
    <expr_stmt><expr><name pos:line="197" pos:column="5">ccode<pos:position pos:line="197" pos:column="10"/></name> <operator pos:line="197" pos:column="11">=<pos:position pos:line="197" pos:column="12"/></operator> <name pos:line="197" pos:column="13">code<pos:position pos:line="197" pos:column="17"/></name> <operator pos:line="197" pos:column="18">+<pos:position pos:line="197" pos:column="19"/></operator> <name><name pos:line="197" pos:column="20">OP_lengths<pos:position pos:line="197" pos:column="30"/></name><index pos:line="197" pos:column="30">[<expr><operator pos:line="197" pos:column="31">*<pos:position pos:line="197" pos:column="32"/></operator><name pos:line="197" pos:column="32">code<pos:position pos:line="197" pos:column="36"/></name></expr>]<pos:position pos:line="197" pos:column="37"/></index></name></expr>;<pos:position pos:line="197" pos:column="38"/></expr_stmt>
    <goto pos:line="198" pos:column="5">goto <name pos:line="198" pos:column="10">CLASS_REF_REPEAT<pos:position pos:line="198" pos:column="26"/></name>;<pos:position pos:line="198" pos:column="27"/></goto>

    <case pos:line="200" pos:column="5">case <expr><name pos:line="200" pos:column="10">OP_CALLOUT<pos:position pos:line="200" pos:column="20"/></name></expr>:<pos:position pos:line="200" pos:column="21"/></case>
    <expr_stmt><expr><call><name pos:line="201" pos:column="5">fprintf<pos:position pos:line="201" pos:column="12"/></name><argument_list pos:line="201" pos:column="12">(<argument><expr><name pos:line="201" pos:column="13">f<pos:position pos:line="201" pos:column="14"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="201" pos:column="16">"    %s %d %d %d"<pos:position pos:line="201" pos:column="33"/></literal></expr></argument>, <argument><expr><name><name pos:line="201" pos:column="35">OP_names<pos:position pos:line="201" pos:column="43"/></name><index pos:line="201" pos:column="43">[<expr><operator pos:line="201" pos:column="44">*<pos:position pos:line="201" pos:column="45"/></operator><name pos:line="201" pos:column="45">code<pos:position pos:line="201" pos:column="49"/></name></expr>]<pos:position pos:line="201" pos:column="50"/></index></name></expr></argument>, <argument><expr><name><name pos:line="201" pos:column="52">code<pos:position pos:line="201" pos:column="56"/></name><index pos:line="201" pos:column="56">[<expr><literal type="number" pos:line="201" pos:column="57">1<pos:position pos:line="201" pos:column="58"/></literal></expr>]<pos:position pos:line="201" pos:column="59"/></index></name></expr></argument>, <argument><expr><call><name pos:line="201" pos:column="61">GET<pos:position pos:line="201" pos:column="64"/></name><argument_list pos:line="201" pos:column="64">(<argument><expr><name pos:line="201" pos:column="65">code<pos:position pos:line="201" pos:column="69"/></name></expr></argument>,<argument><expr><literal type="number" pos:line="201" pos:column="70">2<pos:position pos:line="201" pos:column="71"/></literal></expr></argument>)<pos:position pos:line="201" pos:column="72"/></argument_list></call></expr></argument>,
      <argument><expr><call><name pos:line="202" pos:column="7">GET<pos:position pos:line="202" pos:column="10"/></name><argument_list pos:line="202" pos:column="10">(<argument><expr><name pos:line="202" pos:column="11">code<pos:position pos:line="202" pos:column="15"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="202" pos:column="17">2<pos:position pos:line="202" pos:column="18"/></literal> <operator pos:line="202" pos:column="19">+<pos:position pos:line="202" pos:column="20"/></operator> <name pos:line="202" pos:column="21">LINK_SIZE<pos:position pos:line="202" pos:column="30"/></name></expr></argument>)<pos:position pos:line="202" pos:column="31"/></argument_list></call></expr></argument>)<pos:position pos:line="202" pos:column="32"/></argument_list></call></expr>;<pos:position pos:line="202" pos:column="33"/></expr_stmt>
    <break pos:line="203" pos:column="5">break;<pos:position pos:line="203" pos:column="11"/></break>

<cpp:ifdef pos:line="205" pos:column="1">#<cpp:directive pos:line="205" pos:column="2">ifdef<pos:position pos:line="205" pos:column="7"/></cpp:directive> <name pos:line="205" pos:column="8">SUPPORT_UCP<pos:position pos:line="205" pos:column="19"/></name></cpp:ifdef>
    <case pos:line="206" pos:column="5">case <expr><name pos:line="206" pos:column="10">OP_PROP<pos:position pos:line="206" pos:column="17"/></name></expr>:<pos:position pos:line="206" pos:column="18"/></case>
    <case pos:line="207" pos:column="5">case <expr><name pos:line="207" pos:column="10">OP_NOTPROP<pos:position pos:line="207" pos:column="20"/></name></expr>:<pos:position pos:line="207" pos:column="21"/></case>
    <expr_stmt><expr><call><name pos:line="208" pos:column="5">fprintf<pos:position pos:line="208" pos:column="12"/></name><argument_list pos:line="208" pos:column="12">(<argument><expr><name pos:line="208" pos:column="13">f<pos:position pos:line="208" pos:column="14"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="208" pos:column="16">"    %s %s"<pos:position pos:line="208" pos:column="27"/></literal></expr></argument>, <argument><expr><name><name pos:line="208" pos:column="29">OP_names<pos:position pos:line="208" pos:column="37"/></name><index pos:line="208" pos:column="37">[<expr><operator pos:line="208" pos:column="38">*<pos:position pos:line="208" pos:column="39"/></operator><name pos:line="208" pos:column="39">code<pos:position pos:line="208" pos:column="43"/></name></expr>]<pos:position pos:line="208" pos:column="44"/></index></name></expr></argument>, <argument><expr><call><name pos:line="208" pos:column="46">get_ucpname<pos:position pos:line="208" pos:column="57"/></name><argument_list pos:line="208" pos:column="57">(<argument><expr><name><name pos:line="208" pos:column="58">code<pos:position pos:line="208" pos:column="62"/></name><index pos:line="208" pos:column="62">[<expr><literal type="number" pos:line="208" pos:column="63">1<pos:position pos:line="208" pos:column="64"/></literal></expr>]<pos:position pos:line="208" pos:column="65"/></index></name></expr></argument>)<pos:position pos:line="208" pos:column="66"/></argument_list></call></expr></argument>)<pos:position pos:line="208" pos:column="67"/></argument_list></call></expr>;<pos:position pos:line="208" pos:column="68"/></expr_stmt>
    <break pos:line="209" pos:column="5">break;<pos:position pos:line="209" pos:column="11"/></break>
<cpp:endif pos:line="210" pos:column="1">#<cpp:directive pos:line="210" pos:column="2">endif<pos:position pos:line="210" pos:column="7"/></cpp:directive></cpp:endif>

    <comment type="block" pos:line="212" pos:column="5">/* OP_XCLASS can only occur in UTF-8 mode. However, there's no harm in
    having this code always here, and it makes it less messy without all those
    #ifdefs. */</comment>

    <case pos:line="216" pos:column="5">case <expr><name pos:line="216" pos:column="10">OP_CLASS<pos:position pos:line="216" pos:column="18"/></name></expr>:<pos:position pos:line="216" pos:column="19"/></case>
    <case pos:line="217" pos:column="5">case <expr><name pos:line="217" pos:column="10">OP_NCLASS<pos:position pos:line="217" pos:column="19"/></name></expr>:<pos:position pos:line="217" pos:column="20"/></case>
    <case pos:line="218" pos:column="5">case <expr><name pos:line="218" pos:column="10">OP_XCLASS<pos:position pos:line="218" pos:column="19"/></name></expr>:<pos:position pos:line="218" pos:column="20"/></case>
      <block pos:line="219" pos:column="7">{
      <decl_stmt><decl><type><name pos:line="220" pos:column="7">int<pos:position pos:line="220" pos:column="10"/></name></type> <name pos:line="220" pos:column="11">i<pos:position pos:line="220" pos:column="12"/></name></decl>, <decl><type ref="prev"/><name pos:line="220" pos:column="14">min<pos:position pos:line="220" pos:column="17"/></name></decl>, <decl><type ref="prev"/><name pos:line="220" pos:column="19">max<pos:position pos:line="220" pos:column="22"/></name></decl>;<pos:position pos:line="220" pos:column="23"/></decl_stmt>
      <decl_stmt><decl><type><name pos:line="221" pos:column="7">BOOL<pos:position pos:line="221" pos:column="11"/></name></type> <name pos:line="221" pos:column="12">printmap<pos:position pos:line="221" pos:column="20"/></name></decl>;<pos:position pos:line="221" pos:column="21"/></decl_stmt>

      <expr_stmt><expr><call><name pos:line="223" pos:column="7">fprintf<pos:position pos:line="223" pos:column="14"/></name><argument_list pos:line="223" pos:column="14">(<argument><expr><name pos:line="223" pos:column="15">f<pos:position pos:line="223" pos:column="16"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="223" pos:column="18">"    ["<pos:position pos:line="223" pos:column="25"/></literal></expr></argument>)<pos:position pos:line="223" pos:column="26"/></argument_list></call></expr>;<pos:position pos:line="223" pos:column="27"/></expr_stmt>

      <if pos:line="225" pos:column="7">if <condition pos:line="225" pos:column="10">(<expr><operator pos:line="225" pos:column="11">*<pos:position pos:line="225" pos:column="12"/></operator><name pos:line="225" pos:column="12">code<pos:position pos:line="225" pos:column="16"/></name> <operator pos:line="225" pos:column="17">==<pos:position pos:line="225" pos:column="19"/></operator> <name pos:line="225" pos:column="20">OP_XCLASS<pos:position pos:line="225" pos:column="29"/></name></expr>)<pos:position pos:line="225" pos:column="30"/></condition><then pos:line="225" pos:column="30">
        <block pos:line="226" pos:column="9">{
        <expr_stmt><expr><name pos:line="227" pos:column="9">extra<pos:position pos:line="227" pos:column="14"/></name> <operator pos:line="227" pos:column="15">=<pos:position pos:line="227" pos:column="16"/></operator> <call><name pos:line="227" pos:column="17">GET<pos:position pos:line="227" pos:column="20"/></name><argument_list pos:line="227" pos:column="20">(<argument><expr><name pos:line="227" pos:column="21">code<pos:position pos:line="227" pos:column="25"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="227" pos:column="27">1<pos:position pos:line="227" pos:column="28"/></literal></expr></argument>)<pos:position pos:line="227" pos:column="29"/></argument_list></call></expr>;<pos:position pos:line="227" pos:column="30"/></expr_stmt>
        <expr_stmt><expr><name pos:line="228" pos:column="9">ccode<pos:position pos:line="228" pos:column="14"/></name> <operator pos:line="228" pos:column="15">=<pos:position pos:line="228" pos:column="16"/></operator> <name pos:line="228" pos:column="17">code<pos:position pos:line="228" pos:column="21"/></name> <operator pos:line="228" pos:column="22">+<pos:position pos:line="228" pos:column="23"/></operator> <name pos:line="228" pos:column="24">LINK_SIZE<pos:position pos:line="228" pos:column="33"/></name> <operator pos:line="228" pos:column="34">+<pos:position pos:line="228" pos:column="35"/></operator> <literal type="number" pos:line="228" pos:column="36">1<pos:position pos:line="228" pos:column="37"/></literal></expr>;<pos:position pos:line="228" pos:column="38"/></expr_stmt>
        <expr_stmt><expr><name pos:line="229" pos:column="9">printmap<pos:position pos:line="229" pos:column="17"/></name> <operator pos:line="229" pos:column="18">=<pos:position pos:line="229" pos:column="19"/></operator> <operator pos:line="229" pos:column="20">(<pos:position pos:line="229" pos:column="21"/></operator><operator pos:line="229" pos:column="21">*<pos:position pos:line="229" pos:column="22"/></operator><name pos:line="229" pos:column="22">ccode<pos:position pos:line="229" pos:column="27"/></name> <operator pos:line="229" pos:column="28">&amp;<pos:position pos:line="229" pos:column="33"/></operator> <name pos:line="229" pos:column="30">XCL_MAP<pos:position pos:line="229" pos:column="37"/></name><operator pos:line="229" pos:column="37">)<pos:position pos:line="229" pos:column="38"/></operator> <operator pos:line="229" pos:column="39">!=<pos:position pos:line="229" pos:column="41"/></operator> <literal type="number" pos:line="229" pos:column="42">0<pos:position pos:line="229" pos:column="43"/></literal></expr>;<pos:position pos:line="229" pos:column="44"/></expr_stmt>
        <if pos:line="230" pos:column="9">if <condition pos:line="230" pos:column="12">(<expr><operator pos:line="230" pos:column="13">(<pos:position pos:line="230" pos:column="14"/></operator><operator pos:line="230" pos:column="14">*<pos:position pos:line="230" pos:column="15"/></operator><name pos:line="230" pos:column="15">ccode<pos:position pos:line="230" pos:column="20"/></name><operator pos:line="230" pos:column="20">++<pos:position pos:line="230" pos:column="22"/></operator> <operator pos:line="230" pos:column="23">&amp;<pos:position pos:line="230" pos:column="28"/></operator> <name pos:line="230" pos:column="25">XCL_NOT<pos:position pos:line="230" pos:column="32"/></name><operator pos:line="230" pos:column="32">)<pos:position pos:line="230" pos:column="33"/></operator> <operator pos:line="230" pos:column="34">!=<pos:position pos:line="230" pos:column="36"/></operator> <literal type="number" pos:line="230" pos:column="37">0<pos:position pos:line="230" pos:column="38"/></literal></expr>)<pos:position pos:line="230" pos:column="39"/></condition><then pos:line="230" pos:column="39"> <block type="pseudo"><expr_stmt><expr><call><name pos:line="230" pos:column="40">fprintf<pos:position pos:line="230" pos:column="47"/></name><argument_list pos:line="230" pos:column="47">(<argument><expr><name pos:line="230" pos:column="48">f<pos:position pos:line="230" pos:column="49"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="230" pos:column="51">"^"<pos:position pos:line="230" pos:column="54"/></literal></expr></argument>)<pos:position pos:line="230" pos:column="55"/></argument_list></call></expr>;<pos:position pos:line="230" pos:column="56"/></expr_stmt></block></then></if>
        }<pos:position pos:line="231" pos:column="10"/></block></then>
      <else pos:line="232" pos:column="7">else
        <block pos:line="233" pos:column="9">{
        <expr_stmt><expr><name pos:line="234" pos:column="9">printmap<pos:position pos:line="234" pos:column="17"/></name> <operator pos:line="234" pos:column="18">=<pos:position pos:line="234" pos:column="19"/></operator> <name pos:line="234" pos:column="20">TRUE<pos:position pos:line="234" pos:column="24"/></name></expr>;<pos:position pos:line="234" pos:column="25"/></expr_stmt>
        <expr_stmt><expr><name pos:line="235" pos:column="9">ccode<pos:position pos:line="235" pos:column="14"/></name> <operator pos:line="235" pos:column="15">=<pos:position pos:line="235" pos:column="16"/></operator> <name pos:line="235" pos:column="17">code<pos:position pos:line="235" pos:column="21"/></name> <operator pos:line="235" pos:column="22">+<pos:position pos:line="235" pos:column="23"/></operator> <literal type="number" pos:line="235" pos:column="24">1<pos:position pos:line="235" pos:column="25"/></literal></expr>;<pos:position pos:line="235" pos:column="26"/></expr_stmt>
        }<pos:position pos:line="236" pos:column="10"/></block></else></if>

      <comment type="block" pos:line="238" pos:column="7">/* Print a bit map */</comment>

      <if pos:line="240" pos:column="7">if <condition pos:line="240" pos:column="10">(<expr><name pos:line="240" pos:column="11">printmap<pos:position pos:line="240" pos:column="19"/></name></expr>)<pos:position pos:line="240" pos:column="20"/></condition><then pos:line="240" pos:column="20">
        <block pos:line="241" pos:column="9">{
        <for pos:line="242" pos:column="9">for <control pos:line="242" pos:column="13">(<init><expr><name pos:line="242" pos:column="14">i<pos:position pos:line="242" pos:column="15"/></name> <operator pos:line="242" pos:column="16">=<pos:position pos:line="242" pos:column="17"/></operator> <literal type="number" pos:line="242" pos:column="18">0<pos:position pos:line="242" pos:column="19"/></literal></expr>;<pos:position pos:line="242" pos:column="20"/></init> <condition><expr><name pos:line="242" pos:column="21">i<pos:position pos:line="242" pos:column="22"/></name> <operator pos:line="242" pos:column="23">&lt;<pos:position pos:line="242" pos:column="27"/></operator> <literal type="number" pos:line="242" pos:column="25">256<pos:position pos:line="242" pos:column="28"/></literal></expr>;<pos:position pos:line="242" pos:column="29"/></condition> <incr><expr><name pos:line="242" pos:column="30">i<pos:position pos:line="242" pos:column="31"/></name><operator pos:line="242" pos:column="31">++<pos:position pos:line="242" pos:column="33"/></operator></expr></incr>)<pos:position pos:line="242" pos:column="34"/></control>
          <block pos:line="243" pos:column="11">{
          <if pos:line="244" pos:column="11">if <condition pos:line="244" pos:column="14">(<expr><operator pos:line="244" pos:column="15">(<pos:position pos:line="244" pos:column="16"/></operator><name><name pos:line="244" pos:column="16">ccode<pos:position pos:line="244" pos:column="21"/></name><index pos:line="244" pos:column="21">[<expr><name pos:line="244" pos:column="22">i<pos:position pos:line="244" pos:column="23"/></name><operator pos:line="244" pos:column="23">/<pos:position pos:line="244" pos:column="24"/></operator><literal type="number" pos:line="244" pos:column="24">8<pos:position pos:line="244" pos:column="25"/></literal></expr>]<pos:position pos:line="244" pos:column="26"/></index></name> <operator pos:line="244" pos:column="27">&amp;<pos:position pos:line="244" pos:column="32"/></operator> <operator pos:line="244" pos:column="29">(<pos:position pos:line="244" pos:column="30"/></operator><literal type="number" pos:line="244" pos:column="30">1<pos:position pos:line="244" pos:column="31"/></literal> <operator pos:line="244" pos:column="32">&lt;&lt;<pos:position pos:line="244" pos:column="40"/></operator> <operator pos:line="244" pos:column="35">(<pos:position pos:line="244" pos:column="36"/></operator><name pos:line="244" pos:column="36">i<pos:position pos:line="244" pos:column="37"/></name><operator pos:line="244" pos:column="37">&amp;<pos:position pos:line="244" pos:column="42"/></operator><literal type="number" pos:line="244" pos:column="38">7<pos:position pos:line="244" pos:column="39"/></literal><operator pos:line="244" pos:column="39">)<pos:position pos:line="244" pos:column="40"/></operator><operator pos:line="244" pos:column="40">)<pos:position pos:line="244" pos:column="41"/></operator><operator pos:line="244" pos:column="41">)<pos:position pos:line="244" pos:column="42"/></operator> <operator pos:line="244" pos:column="43">!=<pos:position pos:line="244" pos:column="45"/></operator> <literal type="number" pos:line="244" pos:column="46">0<pos:position pos:line="244" pos:column="47"/></literal></expr>)<pos:position pos:line="244" pos:column="48"/></condition><then pos:line="244" pos:column="48">
            <block pos:line="245" pos:column="13">{
            <decl_stmt><decl><type><name pos:line="246" pos:column="13">int<pos:position pos:line="246" pos:column="16"/></name></type> <name pos:line="246" pos:column="17">j<pos:position pos:line="246" pos:column="18"/></name></decl>;<pos:position pos:line="246" pos:column="19"/></decl_stmt>
            <for pos:line="247" pos:column="13">for <control pos:line="247" pos:column="17">(<init><expr><name pos:line="247" pos:column="18">j<pos:position pos:line="247" pos:column="19"/></name> <operator pos:line="247" pos:column="20">=<pos:position pos:line="247" pos:column="21"/></operator> <name pos:line="247" pos:column="22">i<pos:position pos:line="247" pos:column="23"/></name><operator pos:line="247" pos:column="23">+<pos:position pos:line="247" pos:column="24"/></operator><literal type="number" pos:line="247" pos:column="24">1<pos:position pos:line="247" pos:column="25"/></literal></expr>;<pos:position pos:line="247" pos:column="26"/></init> <condition><expr><name pos:line="247" pos:column="27">j<pos:position pos:line="247" pos:column="28"/></name> <operator pos:line="247" pos:column="29">&lt;<pos:position pos:line="247" pos:column="33"/></operator> <literal type="number" pos:line="247" pos:column="31">256<pos:position pos:line="247" pos:column="34"/></literal></expr>;<pos:position pos:line="247" pos:column="35"/></condition> <incr><expr><name pos:line="247" pos:column="36">j<pos:position pos:line="247" pos:column="37"/></name><operator pos:line="247" pos:column="37">++<pos:position pos:line="247" pos:column="39"/></operator></expr></incr>)<pos:position pos:line="247" pos:column="40"/></control>
              <block type="pseudo"><if pos:line="248" pos:column="15">if <condition pos:line="248" pos:column="18">(<expr><operator pos:line="248" pos:column="19">(<pos:position pos:line="248" pos:column="20"/></operator><name><name pos:line="248" pos:column="20">ccode<pos:position pos:line="248" pos:column="25"/></name><index pos:line="248" pos:column="25">[<expr><name pos:line="248" pos:column="26">j<pos:position pos:line="248" pos:column="27"/></name><operator pos:line="248" pos:column="27">/<pos:position pos:line="248" pos:column="28"/></operator><literal type="number" pos:line="248" pos:column="28">8<pos:position pos:line="248" pos:column="29"/></literal></expr>]<pos:position pos:line="248" pos:column="30"/></index></name> <operator pos:line="248" pos:column="31">&amp;<pos:position pos:line="248" pos:column="36"/></operator> <operator pos:line="248" pos:column="33">(<pos:position pos:line="248" pos:column="34"/></operator><literal type="number" pos:line="248" pos:column="34">1<pos:position pos:line="248" pos:column="35"/></literal> <operator pos:line="248" pos:column="36">&lt;&lt;<pos:position pos:line="248" pos:column="44"/></operator> <operator pos:line="248" pos:column="39">(<pos:position pos:line="248" pos:column="40"/></operator><name pos:line="248" pos:column="40">j<pos:position pos:line="248" pos:column="41"/></name><operator pos:line="248" pos:column="41">&amp;<pos:position pos:line="248" pos:column="46"/></operator><literal type="number" pos:line="248" pos:column="42">7<pos:position pos:line="248" pos:column="43"/></literal><operator pos:line="248" pos:column="43">)<pos:position pos:line="248" pos:column="44"/></operator><operator pos:line="248" pos:column="44">)<pos:position pos:line="248" pos:column="45"/></operator><operator pos:line="248" pos:column="45">)<pos:position pos:line="248" pos:column="46"/></operator> <operator pos:line="248" pos:column="47">==<pos:position pos:line="248" pos:column="49"/></operator> <literal type="number" pos:line="248" pos:column="50">0<pos:position pos:line="248" pos:column="51"/></literal></expr>)<pos:position pos:line="248" pos:column="52"/></condition><then pos:line="248" pos:column="52"> <block type="pseudo"><break pos:line="248" pos:column="53">break;<pos:position pos:line="248" pos:column="59"/></break></block></then></if></block></for>
            <if pos:line="249" pos:column="13">if <condition pos:line="249" pos:column="16">(<expr><name pos:line="249" pos:column="17">i<pos:position pos:line="249" pos:column="18"/></name> <operator pos:line="249" pos:column="19">==<pos:position pos:line="249" pos:column="21"/></operator> <literal type="char" pos:line="249" pos:column="22">'-'<pos:position pos:line="249" pos:column="25"/></literal> <operator pos:line="249" pos:column="26">||<pos:position pos:line="249" pos:column="28"/></operator> <name pos:line="249" pos:column="29">i<pos:position pos:line="249" pos:column="30"/></name> <operator pos:line="249" pos:column="31">==<pos:position pos:line="249" pos:column="33"/></operator> <literal type="char" pos:line="249" pos:column="34">']'<pos:position pos:line="249" pos:column="37"/></literal></expr>)<pos:position pos:line="249" pos:column="38"/></condition><then pos:line="249" pos:column="38"> <block type="pseudo"><expr_stmt><expr><call><name pos:line="249" pos:column="39">fprintf<pos:position pos:line="249" pos:column="46"/></name><argument_list pos:line="249" pos:column="46">(<argument><expr><name pos:line="249" pos:column="47">f<pos:position pos:line="249" pos:column="48"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="249" pos:column="50">"\\"<pos:position pos:line="249" pos:column="54"/></literal></expr></argument>)<pos:position pos:line="249" pos:column="55"/></argument_list></call></expr>;<pos:position pos:line="249" pos:column="56"/></expr_stmt></block></then></if>
            <if pos:line="250" pos:column="13">if <condition pos:line="250" pos:column="16">(<expr><call><name pos:line="250" pos:column="17">isprint<pos:position pos:line="250" pos:column="24"/></name><argument_list pos:line="250" pos:column="24">(<argument><expr><name pos:line="250" pos:column="25">i<pos:position pos:line="250" pos:column="26"/></name></expr></argument>)<pos:position pos:line="250" pos:column="27"/></argument_list></call></expr>)<pos:position pos:line="250" pos:column="28"/></condition><then pos:line="250" pos:column="28"> <block type="pseudo"><expr_stmt><expr><call><name pos:line="250" pos:column="29">fprintf<pos:position pos:line="250" pos:column="36"/></name><argument_list pos:line="250" pos:column="36">(<argument><expr><name pos:line="250" pos:column="37">f<pos:position pos:line="250" pos:column="38"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="250" pos:column="40">"%c"<pos:position pos:line="250" pos:column="44"/></literal></expr></argument>, <argument><expr><name pos:line="250" pos:column="46">i<pos:position pos:line="250" pos:column="47"/></name></expr></argument>)<pos:position pos:line="250" pos:column="48"/></argument_list></call></expr>;<pos:position pos:line="250" pos:column="49"/></expr_stmt></block></then> <else pos:line="250" pos:column="50">else <block type="pseudo"><expr_stmt><expr><call><name pos:line="250" pos:column="55">fprintf<pos:position pos:line="250" pos:column="62"/></name><argument_list pos:line="250" pos:column="62">(<argument><expr><name pos:line="250" pos:column="63">f<pos:position pos:line="250" pos:column="64"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="250" pos:column="66">"\\x%02x"<pos:position pos:line="250" pos:column="75"/></literal></expr></argument>, <argument><expr><name pos:line="250" pos:column="77">i<pos:position pos:line="250" pos:column="78"/></name></expr></argument>)<pos:position pos:line="250" pos:column="79"/></argument_list></call></expr>;<pos:position pos:line="250" pos:column="80"/></expr_stmt></block></else></if>
            <if pos:line="251" pos:column="13">if <condition pos:line="251" pos:column="16">(<expr><operator pos:line="251" pos:column="17">--<pos:position pos:line="251" pos:column="19"/></operator><name pos:line="251" pos:column="19">j<pos:position pos:line="251" pos:column="20"/></name> <operator pos:line="251" pos:column="21">&gt;<pos:position pos:line="251" pos:column="25"/></operator> <name pos:line="251" pos:column="23">i<pos:position pos:line="251" pos:column="24"/></name></expr>)<pos:position pos:line="251" pos:column="25"/></condition><then pos:line="251" pos:column="25">
              <block pos:line="252" pos:column="15">{
              <if pos:line="253" pos:column="15">if <condition pos:line="253" pos:column="18">(<expr><name pos:line="253" pos:column="19">j<pos:position pos:line="253" pos:column="20"/></name> <operator pos:line="253" pos:column="21">!=<pos:position pos:line="253" pos:column="23"/></operator> <name pos:line="253" pos:column="24">i<pos:position pos:line="253" pos:column="25"/></name> <operator pos:line="253" pos:column="26">+<pos:position pos:line="253" pos:column="27"/></operator> <literal type="number" pos:line="253" pos:column="28">1<pos:position pos:line="253" pos:column="29"/></literal></expr>)<pos:position pos:line="253" pos:column="30"/></condition><then pos:line="253" pos:column="30"> <block type="pseudo"><expr_stmt><expr><call><name pos:line="253" pos:column="31">fprintf<pos:position pos:line="253" pos:column="38"/></name><argument_list pos:line="253" pos:column="38">(<argument><expr><name pos:line="253" pos:column="39">f<pos:position pos:line="253" pos:column="40"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="253" pos:column="42">"-"<pos:position pos:line="253" pos:column="45"/></literal></expr></argument>)<pos:position pos:line="253" pos:column="46"/></argument_list></call></expr>;<pos:position pos:line="253" pos:column="47"/></expr_stmt></block></then></if>
              <if pos:line="254" pos:column="15">if <condition pos:line="254" pos:column="18">(<expr><name pos:line="254" pos:column="19">j<pos:position pos:line="254" pos:column="20"/></name> <operator pos:line="254" pos:column="21">==<pos:position pos:line="254" pos:column="23"/></operator> <literal type="char" pos:line="254" pos:column="24">'-'<pos:position pos:line="254" pos:column="27"/></literal> <operator pos:line="254" pos:column="28">||<pos:position pos:line="254" pos:column="30"/></operator> <name pos:line="254" pos:column="31">j<pos:position pos:line="254" pos:column="32"/></name> <operator pos:line="254" pos:column="33">==<pos:position pos:line="254" pos:column="35"/></operator> <literal type="char" pos:line="254" pos:column="36">']'<pos:position pos:line="254" pos:column="39"/></literal></expr>)<pos:position pos:line="254" pos:column="40"/></condition><then pos:line="254" pos:column="40"> <block type="pseudo"><expr_stmt><expr><call><name pos:line="254" pos:column="41">fprintf<pos:position pos:line="254" pos:column="48"/></name><argument_list pos:line="254" pos:column="48">(<argument><expr><name pos:line="254" pos:column="49">f<pos:position pos:line="254" pos:column="50"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="254" pos:column="52">"\\"<pos:position pos:line="254" pos:column="56"/></literal></expr></argument>)<pos:position pos:line="254" pos:column="57"/></argument_list></call></expr>;<pos:position pos:line="254" pos:column="58"/></expr_stmt></block></then></if>
              <if pos:line="255" pos:column="15">if <condition pos:line="255" pos:column="18">(<expr><call><name pos:line="255" pos:column="19">isprint<pos:position pos:line="255" pos:column="26"/></name><argument_list pos:line="255" pos:column="26">(<argument><expr><name pos:line="255" pos:column="27">j<pos:position pos:line="255" pos:column="28"/></name></expr></argument>)<pos:position pos:line="255" pos:column="29"/></argument_list></call></expr>)<pos:position pos:line="255" pos:column="30"/></condition><then pos:line="255" pos:column="30"> <block type="pseudo"><expr_stmt><expr><call><name pos:line="255" pos:column="31">fprintf<pos:position pos:line="255" pos:column="38"/></name><argument_list pos:line="255" pos:column="38">(<argument><expr><name pos:line="255" pos:column="39">f<pos:position pos:line="255" pos:column="40"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="255" pos:column="42">"%c"<pos:position pos:line="255" pos:column="46"/></literal></expr></argument>, <argument><expr><name pos:line="255" pos:column="48">j<pos:position pos:line="255" pos:column="49"/></name></expr></argument>)<pos:position pos:line="255" pos:column="50"/></argument_list></call></expr>;<pos:position pos:line="255" pos:column="51"/></expr_stmt></block></then> <else pos:line="255" pos:column="52">else <block type="pseudo"><expr_stmt><expr><call><name pos:line="255" pos:column="57">fprintf<pos:position pos:line="255" pos:column="64"/></name><argument_list pos:line="255" pos:column="64">(<argument><expr><name pos:line="255" pos:column="65">f<pos:position pos:line="255" pos:column="66"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="255" pos:column="68">"\\x%02x"<pos:position pos:line="255" pos:column="77"/></literal></expr></argument>, <argument><expr><name pos:line="255" pos:column="79">j<pos:position pos:line="255" pos:column="80"/></name></expr></argument>)<pos:position pos:line="255" pos:column="81"/></argument_list></call></expr>;<pos:position pos:line="255" pos:column="82"/></expr_stmt></block></else></if>
              }<pos:position pos:line="256" pos:column="16"/></block></then></if>
            <expr_stmt><expr><name pos:line="257" pos:column="13">i<pos:position pos:line="257" pos:column="14"/></name> <operator pos:line="257" pos:column="15">=<pos:position pos:line="257" pos:column="16"/></operator> <name pos:line="257" pos:column="17">j<pos:position pos:line="257" pos:column="18"/></name></expr>;<pos:position pos:line="257" pos:column="19"/></expr_stmt>
            }<pos:position pos:line="258" pos:column="14"/></block></then></if>
          }<pos:position pos:line="259" pos:column="12"/></block></for>
        <expr_stmt><expr><name pos:line="260" pos:column="9">ccode<pos:position pos:line="260" pos:column="14"/></name> <operator pos:line="260" pos:column="15">+=<pos:position pos:line="260" pos:column="17"/></operator> <literal type="number" pos:line="260" pos:column="18">32<pos:position pos:line="260" pos:column="20"/></literal></expr>;<pos:position pos:line="260" pos:column="21"/></expr_stmt>
        }<pos:position pos:line="261" pos:column="10"/></block></then></if>

      <comment type="block" pos:line="263" pos:column="7">/* For an XCLASS there is always some additional data */</comment>

      <if pos:line="265" pos:column="7">if <condition pos:line="265" pos:column="10">(<expr><operator pos:line="265" pos:column="11">*<pos:position pos:line="265" pos:column="12"/></operator><name pos:line="265" pos:column="12">code<pos:position pos:line="265" pos:column="16"/></name> <operator pos:line="265" pos:column="17">==<pos:position pos:line="265" pos:column="19"/></operator> <name pos:line="265" pos:column="20">OP_XCLASS<pos:position pos:line="265" pos:column="29"/></name></expr>)<pos:position pos:line="265" pos:column="30"/></condition><then pos:line="265" pos:column="30">
        <block pos:line="266" pos:column="9">{
        <decl_stmt><decl><type><name pos:line="267" pos:column="9">int<pos:position pos:line="267" pos:column="12"/></name></type> <name pos:line="267" pos:column="13">ch<pos:position pos:line="267" pos:column="15"/></name></decl>;<pos:position pos:line="267" pos:column="16"/></decl_stmt>
        <while pos:line="268" pos:column="9">while <condition pos:line="268" pos:column="15">(<expr><operator pos:line="268" pos:column="16">(<pos:position pos:line="268" pos:column="17"/></operator><name pos:line="268" pos:column="17">ch<pos:position pos:line="268" pos:column="19"/></name> <operator pos:line="268" pos:column="20">=<pos:position pos:line="268" pos:column="21"/></operator> <operator pos:line="268" pos:column="22">*<pos:position pos:line="268" pos:column="23"/></operator><name pos:line="268" pos:column="23">ccode<pos:position pos:line="268" pos:column="28"/></name><operator pos:line="268" pos:column="28">++<pos:position pos:line="268" pos:column="30"/></operator><operator pos:line="268" pos:column="30">)<pos:position pos:line="268" pos:column="31"/></operator> <operator pos:line="268" pos:column="32">!=<pos:position pos:line="268" pos:column="34"/></operator> <name pos:line="268" pos:column="35">XCL_END<pos:position pos:line="268" pos:column="42"/></name></expr>)<pos:position pos:line="268" pos:column="43"/></condition>
          <block pos:line="269" pos:column="11">{
<cpp:ifdef pos:line="270" pos:column="1">#<cpp:directive pos:line="270" pos:column="2">ifdef<pos:position pos:line="270" pos:column="7"/></cpp:directive> <name pos:line="270" pos:column="8">SUPPORT_UCP<pos:position pos:line="270" pos:column="19"/></name></cpp:ifdef>
          <if pos:line="271" pos:column="11">if <condition pos:line="271" pos:column="14">(<expr><name pos:line="271" pos:column="15">ch<pos:position pos:line="271" pos:column="17"/></name> <operator pos:line="271" pos:column="18">==<pos:position pos:line="271" pos:column="20"/></operator> <name pos:line="271" pos:column="21">XCL_PROP<pos:position pos:line="271" pos:column="29"/></name></expr>)<pos:position pos:line="271" pos:column="30"/></condition><then pos:line="271" pos:column="30">
            <block pos:line="272" pos:column="13">{
            <expr_stmt><expr><call><name pos:line="273" pos:column="13">fprintf<pos:position pos:line="273" pos:column="20"/></name><argument_list pos:line="273" pos:column="20">(<argument><expr><name pos:line="273" pos:column="21">f<pos:position pos:line="273" pos:column="22"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="273" pos:column="24">"\\p{%s}"<pos:position pos:line="273" pos:column="33"/></literal></expr></argument>, <argument><expr><call><name pos:line="273" pos:column="35">get_ucpname<pos:position pos:line="273" pos:column="46"/></name><argument_list pos:line="273" pos:column="46">(<argument><expr><operator pos:line="273" pos:column="47">*<pos:position pos:line="273" pos:column="48"/></operator><name pos:line="273" pos:column="48">ccode<pos:position pos:line="273" pos:column="53"/></name><operator pos:line="273" pos:column="53">++<pos:position pos:line="273" pos:column="55"/></operator></expr></argument>)<pos:position pos:line="273" pos:column="56"/></argument_list></call></expr></argument>)<pos:position pos:line="273" pos:column="57"/></argument_list></call></expr>;<pos:position pos:line="273" pos:column="58"/></expr_stmt>
            }<pos:position pos:line="274" pos:column="14"/></block></then>
          <elseif pos:line="275" pos:column="11">else <if pos:line="275" pos:column="16">if <condition pos:line="275" pos:column="19">(<expr><name pos:line="275" pos:column="20">ch<pos:position pos:line="275" pos:column="22"/></name> <operator pos:line="275" pos:column="23">==<pos:position pos:line="275" pos:column="25"/></operator> <name pos:line="275" pos:column="26">XCL_NOTPROP<pos:position pos:line="275" pos:column="37"/></name></expr>)<pos:position pos:line="275" pos:column="38"/></condition><then pos:line="275" pos:column="38">
            <block pos:line="276" pos:column="13">{
            <expr_stmt><expr><call><name pos:line="277" pos:column="13">fprintf<pos:position pos:line="277" pos:column="20"/></name><argument_list pos:line="277" pos:column="20">(<argument><expr><name pos:line="277" pos:column="21">f<pos:position pos:line="277" pos:column="22"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="277" pos:column="24">"\\P{%s}"<pos:position pos:line="277" pos:column="33"/></literal></expr></argument>, <argument><expr><call><name pos:line="277" pos:column="35">get_ucpname<pos:position pos:line="277" pos:column="46"/></name><argument_list pos:line="277" pos:column="46">(<argument><expr><operator pos:line="277" pos:column="47">*<pos:position pos:line="277" pos:column="48"/></operator><name pos:line="277" pos:column="48">ccode<pos:position pos:line="277" pos:column="53"/></name><operator pos:line="277" pos:column="53">++<pos:position pos:line="277" pos:column="55"/></operator></expr></argument>)<pos:position pos:line="277" pos:column="56"/></argument_list></call></expr></argument>)<pos:position pos:line="277" pos:column="57"/></argument_list></call></expr>;<pos:position pos:line="277" pos:column="58"/></expr_stmt>
            }<pos:position pos:line="278" pos:column="14"/></block></then></if></elseif>
          <else pos:line="279" pos:column="11">else
<cpp:endif pos:line="280" pos:column="1">#<cpp:directive pos:line="280" pos:column="2">endif<pos:position pos:line="280" pos:column="7"/></cpp:directive></cpp:endif>
            <block pos:line="281" pos:column="13">{
            <expr_stmt><expr><name pos:line="282" pos:column="13">ccode<pos:position pos:line="282" pos:column="18"/></name> <operator pos:line="282" pos:column="19">+=<pos:position pos:line="282" pos:column="21"/></operator> <literal type="number" pos:line="282" pos:column="22">1<pos:position pos:line="282" pos:column="23"/></literal> <operator pos:line="282" pos:column="24">+<pos:position pos:line="282" pos:column="25"/></operator> <call><name pos:line="282" pos:column="26">print_char<pos:position pos:line="282" pos:column="36"/></name><argument_list pos:line="282" pos:column="36">(<argument><expr><name pos:line="282" pos:column="37">f<pos:position pos:line="282" pos:column="38"/></name></expr></argument>, <argument><expr><name pos:line="282" pos:column="40">ccode<pos:position pos:line="282" pos:column="45"/></name></expr></argument>, <argument><expr><name pos:line="282" pos:column="47">TRUE<pos:position pos:line="282" pos:column="51"/></name></expr></argument>)<pos:position pos:line="282" pos:column="52"/></argument_list></call></expr>;<pos:position pos:line="282" pos:column="53"/></expr_stmt>
            <if pos:line="283" pos:column="13">if <condition pos:line="283" pos:column="16">(<expr><name pos:line="283" pos:column="17">ch<pos:position pos:line="283" pos:column="19"/></name> <operator pos:line="283" pos:column="20">==<pos:position pos:line="283" pos:column="22"/></operator> <name pos:line="283" pos:column="23">XCL_RANGE<pos:position pos:line="283" pos:column="32"/></name></expr>)<pos:position pos:line="283" pos:column="33"/></condition><then pos:line="283" pos:column="33">
              <block pos:line="284" pos:column="15">{
              <expr_stmt><expr><call><name pos:line="285" pos:column="15">fprintf<pos:position pos:line="285" pos:column="22"/></name><argument_list pos:line="285" pos:column="22">(<argument><expr><name pos:line="285" pos:column="23">f<pos:position pos:line="285" pos:column="24"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="285" pos:column="26">"-"<pos:position pos:line="285" pos:column="29"/></literal></expr></argument>)<pos:position pos:line="285" pos:column="30"/></argument_list></call></expr>;<pos:position pos:line="285" pos:column="31"/></expr_stmt>
              <expr_stmt><expr><name pos:line="286" pos:column="15">ccode<pos:position pos:line="286" pos:column="20"/></name> <operator pos:line="286" pos:column="21">+=<pos:position pos:line="286" pos:column="23"/></operator> <literal type="number" pos:line="286" pos:column="24">1<pos:position pos:line="286" pos:column="25"/></literal> <operator pos:line="286" pos:column="26">+<pos:position pos:line="286" pos:column="27"/></operator> <call><name pos:line="286" pos:column="28">print_char<pos:position pos:line="286" pos:column="38"/></name><argument_list pos:line="286" pos:column="38">(<argument><expr><name pos:line="286" pos:column="39">f<pos:position pos:line="286" pos:column="40"/></name></expr></argument>, <argument><expr><name pos:line="286" pos:column="42">ccode<pos:position pos:line="286" pos:column="47"/></name></expr></argument>, <argument><expr><name pos:line="286" pos:column="49">TRUE<pos:position pos:line="286" pos:column="53"/></name></expr></argument>)<pos:position pos:line="286" pos:column="54"/></argument_list></call></expr>;<pos:position pos:line="286" pos:column="55"/></expr_stmt>
              }<pos:position pos:line="287" pos:column="16"/></block></then></if>
            }<pos:position pos:line="288" pos:column="14"/></block></else></if>
          }<pos:position pos:line="289" pos:column="12"/></block></while>
        }<pos:position pos:line="290" pos:column="10"/></block></then></if>

      <comment type="block" pos:line="292" pos:column="7">/* Indicate a non-UTF8 class which was created by negation */</comment>

      <expr_stmt><expr><call><name pos:line="294" pos:column="7">fprintf<pos:position pos:line="294" pos:column="14"/></name><argument_list pos:line="294" pos:column="14">(<argument><expr><name pos:line="294" pos:column="15">f<pos:position pos:line="294" pos:column="16"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="294" pos:column="18">"]%s"<pos:position pos:line="294" pos:column="23"/></literal></expr></argument>, <argument><expr><ternary><condition><expr><operator pos:line="294" pos:column="25">(<pos:position pos:line="294" pos:column="26"/></operator><operator pos:line="294" pos:column="26">*<pos:position pos:line="294" pos:column="27"/></operator><name pos:line="294" pos:column="27">code<pos:position pos:line="294" pos:column="31"/></name> <operator pos:line="294" pos:column="32">==<pos:position pos:line="294" pos:column="34"/></operator> <name pos:line="294" pos:column="35">OP_NCLASS<pos:position pos:line="294" pos:column="44"/></name><operator pos:line="294" pos:column="44">)<pos:position pos:line="294" pos:column="45"/></operator></expr>?<pos:position pos:line="294" pos:column="46"/></condition><then pos:line="294" pos:column="46"> <expr><literal type="string" pos:line="294" pos:column="47">" (neg)"<pos:position pos:line="294" pos:column="55"/></literal></expr> <pos:position pos:line="294" pos:column="56"/></then><else pos:line="294" pos:column="56">: <expr><literal type="string" pos:line="294" pos:column="58">""<pos:position pos:line="294" pos:column="60"/></literal></expr></else></ternary></expr></argument>)<pos:position pos:line="294" pos:column="61"/></argument_list></call></expr>;<pos:position pos:line="294" pos:column="62"/></expr_stmt>

      <comment type="block" pos:line="296" pos:column="7">/* Handle repeats after a class or a back reference */</comment>

      <label><name pos:line="298" pos:column="7">CLASS_REF_REPEAT<pos:position pos:line="298" pos:column="23"/></name>:<pos:position pos:line="298" pos:column="24"/></label>
      <switch pos:line="299" pos:column="7">switch<condition pos:line="299" pos:column="13">(<expr><operator pos:line="299" pos:column="14">*<pos:position pos:line="299" pos:column="15"/></operator><name pos:line="299" pos:column="15">ccode<pos:position pos:line="299" pos:column="20"/></name></expr>)<pos:position pos:line="299" pos:column="21"/></condition>
        <block pos:line="300" pos:column="9">{
        <case pos:line="301" pos:column="9">case <expr><name pos:line="301" pos:column="14">OP_CRSTAR<pos:position pos:line="301" pos:column="23"/></name></expr>:<pos:position pos:line="301" pos:column="24"/></case>
        <case pos:line="302" pos:column="9">case <expr><name pos:line="302" pos:column="14">OP_CRMINSTAR<pos:position pos:line="302" pos:column="26"/></name></expr>:<pos:position pos:line="302" pos:column="27"/></case>
        <case pos:line="303" pos:column="9">case <expr><name pos:line="303" pos:column="14">OP_CRPLUS<pos:position pos:line="303" pos:column="23"/></name></expr>:<pos:position pos:line="303" pos:column="24"/></case>
        <case pos:line="304" pos:column="9">case <expr><name pos:line="304" pos:column="14">OP_CRMINPLUS<pos:position pos:line="304" pos:column="26"/></name></expr>:<pos:position pos:line="304" pos:column="27"/></case>
        <case pos:line="305" pos:column="9">case <expr><name pos:line="305" pos:column="14">OP_CRQUERY<pos:position pos:line="305" pos:column="24"/></name></expr>:<pos:position pos:line="305" pos:column="25"/></case>
        <case pos:line="306" pos:column="9">case <expr><name pos:line="306" pos:column="14">OP_CRMINQUERY<pos:position pos:line="306" pos:column="27"/></name></expr>:<pos:position pos:line="306" pos:column="28"/></case>
        <expr_stmt><expr><call><name pos:line="307" pos:column="9">fprintf<pos:position pos:line="307" pos:column="16"/></name><argument_list pos:line="307" pos:column="16">(<argument><expr><name pos:line="307" pos:column="17">f<pos:position pos:line="307" pos:column="18"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="307" pos:column="20">"%s"<pos:position pos:line="307" pos:column="24"/></literal></expr></argument>, <argument><expr><name><name pos:line="307" pos:column="26">OP_names<pos:position pos:line="307" pos:column="34"/></name><index pos:line="307" pos:column="34">[<expr><operator pos:line="307" pos:column="35">*<pos:position pos:line="307" pos:column="36"/></operator><name pos:line="307" pos:column="36">ccode<pos:position pos:line="307" pos:column="41"/></name></expr>]<pos:position pos:line="307" pos:column="42"/></index></name></expr></argument>)<pos:position pos:line="307" pos:column="43"/></argument_list></call></expr>;<pos:position pos:line="307" pos:column="44"/></expr_stmt>
        <expr_stmt><expr><name pos:line="308" pos:column="9">extra<pos:position pos:line="308" pos:column="14"/></name> <operator pos:line="308" pos:column="15">+=<pos:position pos:line="308" pos:column="17"/></operator> <name><name pos:line="308" pos:column="18">OP_lengths<pos:position pos:line="308" pos:column="28"/></name><index pos:line="308" pos:column="28">[<expr><operator pos:line="308" pos:column="29">*<pos:position pos:line="308" pos:column="30"/></operator><name pos:line="308" pos:column="30">ccode<pos:position pos:line="308" pos:column="35"/></name></expr>]<pos:position pos:line="308" pos:column="36"/></index></name></expr>;<pos:position pos:line="308" pos:column="37"/></expr_stmt>
        <break pos:line="309" pos:column="9">break;<pos:position pos:line="309" pos:column="15"/></break>

        <case pos:line="311" pos:column="9">case <expr><name pos:line="311" pos:column="14">OP_CRRANGE<pos:position pos:line="311" pos:column="24"/></name></expr>:<pos:position pos:line="311" pos:column="25"/></case>
        <case pos:line="312" pos:column="9">case <expr><name pos:line="312" pos:column="14">OP_CRMINRANGE<pos:position pos:line="312" pos:column="27"/></name></expr>:<pos:position pos:line="312" pos:column="28"/></case>
        <expr_stmt><expr><name pos:line="313" pos:column="9">min<pos:position pos:line="313" pos:column="12"/></name> <operator pos:line="313" pos:column="13">=<pos:position pos:line="313" pos:column="14"/></operator> <call><name pos:line="313" pos:column="15">GET2<pos:position pos:line="313" pos:column="19"/></name><argument_list pos:line="313" pos:column="19">(<argument><expr><name pos:line="313" pos:column="20">ccode<pos:position pos:line="313" pos:column="25"/></name></expr></argument>,<argument><expr><literal type="number" pos:line="313" pos:column="26">1<pos:position pos:line="313" pos:column="27"/></literal></expr></argument>)<pos:position pos:line="313" pos:column="28"/></argument_list></call></expr>;<pos:position pos:line="313" pos:column="29"/></expr_stmt>
        <expr_stmt><expr><name pos:line="314" pos:column="9">max<pos:position pos:line="314" pos:column="12"/></name> <operator pos:line="314" pos:column="13">=<pos:position pos:line="314" pos:column="14"/></operator> <call><name pos:line="314" pos:column="15">GET2<pos:position pos:line="314" pos:column="19"/></name><argument_list pos:line="314" pos:column="19">(<argument><expr><name pos:line="314" pos:column="20">ccode<pos:position pos:line="314" pos:column="25"/></name></expr></argument>,<argument><expr><literal type="number" pos:line="314" pos:column="26">3<pos:position pos:line="314" pos:column="27"/></literal></expr></argument>)<pos:position pos:line="314" pos:column="28"/></argument_list></call></expr>;<pos:position pos:line="314" pos:column="29"/></expr_stmt>
        <if pos:line="315" pos:column="9">if <condition pos:line="315" pos:column="12">(<expr><name pos:line="315" pos:column="13">max<pos:position pos:line="315" pos:column="16"/></name> <operator pos:line="315" pos:column="17">==<pos:position pos:line="315" pos:column="19"/></operator> <literal type="number" pos:line="315" pos:column="20">0<pos:position pos:line="315" pos:column="21"/></literal></expr>)<pos:position pos:line="315" pos:column="22"/></condition><then pos:line="315" pos:column="22"> <block type="pseudo"><expr_stmt><expr><call><name pos:line="315" pos:column="23">fprintf<pos:position pos:line="315" pos:column="30"/></name><argument_list pos:line="315" pos:column="30">(<argument><expr><name pos:line="315" pos:column="31">f<pos:position pos:line="315" pos:column="32"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="315" pos:column="34">"{%d,}"<pos:position pos:line="315" pos:column="41"/></literal></expr></argument>, <argument><expr><name pos:line="315" pos:column="43">min<pos:position pos:line="315" pos:column="46"/></name></expr></argument>)<pos:position pos:line="315" pos:column="47"/></argument_list></call></expr>;<pos:position pos:line="315" pos:column="48"/></expr_stmt></block></then>
        <else pos:line="316" pos:column="9">else <block type="pseudo"><expr_stmt><expr><call><name pos:line="316" pos:column="14">fprintf<pos:position pos:line="316" pos:column="21"/></name><argument_list pos:line="316" pos:column="21">(<argument><expr><name pos:line="316" pos:column="22">f<pos:position pos:line="316" pos:column="23"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="316" pos:column="25">"{%d,%d}"<pos:position pos:line="316" pos:column="34"/></literal></expr></argument>, <argument><expr><name pos:line="316" pos:column="36">min<pos:position pos:line="316" pos:column="39"/></name></expr></argument>, <argument><expr><name pos:line="316" pos:column="41">max<pos:position pos:line="316" pos:column="44"/></name></expr></argument>)<pos:position pos:line="316" pos:column="45"/></argument_list></call></expr>;<pos:position pos:line="316" pos:column="46"/></expr_stmt></block></else></if>
        <if pos:line="317" pos:column="9">if <condition pos:line="317" pos:column="12">(<expr><operator pos:line="317" pos:column="13">*<pos:position pos:line="317" pos:column="14"/></operator><name pos:line="317" pos:column="14">ccode<pos:position pos:line="317" pos:column="19"/></name> <operator pos:line="317" pos:column="20">==<pos:position pos:line="317" pos:column="22"/></operator> <name pos:line="317" pos:column="23">OP_CRMINRANGE<pos:position pos:line="317" pos:column="36"/></name></expr>)<pos:position pos:line="317" pos:column="37"/></condition><then pos:line="317" pos:column="37"> <block type="pseudo"><expr_stmt><expr><call><name pos:line="317" pos:column="38">fprintf<pos:position pos:line="317" pos:column="45"/></name><argument_list pos:line="317" pos:column="45">(<argument><expr><name pos:line="317" pos:column="46">f<pos:position pos:line="317" pos:column="47"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="317" pos:column="49">"?"<pos:position pos:line="317" pos:column="52"/></literal></expr></argument>)<pos:position pos:line="317" pos:column="53"/></argument_list></call></expr>;<pos:position pos:line="317" pos:column="54"/></expr_stmt></block></then></if>
        <expr_stmt><expr><name pos:line="318" pos:column="9">extra<pos:position pos:line="318" pos:column="14"/></name> <operator pos:line="318" pos:column="15">+=<pos:position pos:line="318" pos:column="17"/></operator> <name><name pos:line="318" pos:column="18">OP_lengths<pos:position pos:line="318" pos:column="28"/></name><index pos:line="318" pos:column="28">[<expr><operator pos:line="318" pos:column="29">*<pos:position pos:line="318" pos:column="30"/></operator><name pos:line="318" pos:column="30">ccode<pos:position pos:line="318" pos:column="35"/></name></expr>]<pos:position pos:line="318" pos:column="36"/></index></name></expr>;<pos:position pos:line="318" pos:column="37"/></expr_stmt>
        <break pos:line="319" pos:column="9">break;<pos:position pos:line="319" pos:column="15"/></break>
        }<pos:position pos:line="320" pos:column="10"/></block></switch>
      }<pos:position pos:line="321" pos:column="8"/></block>
    <break pos:line="322" pos:column="5">break;<pos:position pos:line="322" pos:column="11"/></break>

    <comment type="block" pos:line="324" pos:column="5">/* Anything else is just an item with no data*/</comment>

    <default pos:line="326" pos:column="5">default:<pos:position pos:line="326" pos:column="13"/></default>
    <expr_stmt><expr><call><name pos:line="327" pos:column="5">fprintf<pos:position pos:line="327" pos:column="12"/></name><argument_list pos:line="327" pos:column="12">(<argument><expr><name pos:line="327" pos:column="13">f<pos:position pos:line="327" pos:column="14"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="327" pos:column="16">"    %s"<pos:position pos:line="327" pos:column="24"/></literal></expr></argument>, <argument><expr><name><name pos:line="327" pos:column="26">OP_names<pos:position pos:line="327" pos:column="34"/></name><index pos:line="327" pos:column="34">[<expr><operator pos:line="327" pos:column="35">*<pos:position pos:line="327" pos:column="36"/></operator><name pos:line="327" pos:column="36">code<pos:position pos:line="327" pos:column="40"/></name></expr>]<pos:position pos:line="327" pos:column="41"/></index></name></expr></argument>)<pos:position pos:line="327" pos:column="42"/></argument_list></call></expr>;<pos:position pos:line="327" pos:column="43"/></expr_stmt>
    <break pos:line="328" pos:column="5">break;<pos:position pos:line="328" pos:column="11"/></break>
    }<pos:position pos:line="329" pos:column="6"/></block></switch>

  <expr_stmt><expr><name pos:line="331" pos:column="3">code<pos:position pos:line="331" pos:column="7"/></name> <operator pos:line="331" pos:column="8">+=<pos:position pos:line="331" pos:column="10"/></operator> <name><name pos:line="331" pos:column="11">OP_lengths<pos:position pos:line="331" pos:column="21"/></name><index pos:line="331" pos:column="21">[<expr><operator pos:line="331" pos:column="22">*<pos:position pos:line="331" pos:column="23"/></operator><name pos:line="331" pos:column="23">code<pos:position pos:line="331" pos:column="27"/></name></expr>]<pos:position pos:line="331" pos:column="28"/></index></name> <operator pos:line="331" pos:column="29">+<pos:position pos:line="331" pos:column="30"/></operator> <name pos:line="331" pos:column="31">extra<pos:position pos:line="331" pos:column="36"/></name></expr>;<pos:position pos:line="331" pos:column="37"/></expr_stmt>
  <expr_stmt><expr><call><name pos:line="332" pos:column="3">fprintf<pos:position pos:line="332" pos:column="10"/></name><argument_list pos:line="332" pos:column="10">(<argument><expr><name pos:line="332" pos:column="11">f<pos:position pos:line="332" pos:column="12"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="332" pos:column="14">"\n"<pos:position pos:line="332" pos:column="18"/></literal></expr></argument>)<pos:position pos:line="332" pos:column="19"/></argument_list></call></expr>;<pos:position pos:line="332" pos:column="20"/></expr_stmt>
  }<pos:position pos:line="333" pos:column="4"/></block></for>
}<pos:position pos:line="334" pos:column="2"/></block></function></unit>

<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/httpd/gumtree/httpd_function_3172.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">int<pos:position pos:line="1" pos:column="11"/></name></type> <name pos:line="1" pos:column="12">authn_cache_post_config<pos:position pos:line="1" pos:column="35"/></name><parameter_list pos:line="1" pos:column="35">(<parameter><decl><type><name pos:line="1" pos:column="36">apr_pool_t<pos:position pos:line="1" pos:column="46"/></name> <modifier pos:line="1" pos:column="47">*<pos:position pos:line="1" pos:column="48"/></modifier></type><name pos:line="1" pos:column="48">pconf<pos:position pos:line="1" pos:column="53"/></name></decl></parameter>, <parameter><decl><type><name pos:line="1" pos:column="55">apr_pool_t<pos:position pos:line="1" pos:column="65"/></name> <modifier pos:line="1" pos:column="66">*<pos:position pos:line="1" pos:column="67"/></modifier></type><name pos:line="1" pos:column="67">plog<pos:position pos:line="1" pos:column="71"/></name></decl></parameter>,
                                   <parameter><decl><type><name pos:line="2" pos:column="36">apr_pool_t<pos:position pos:line="2" pos:column="46"/></name> <modifier pos:line="2" pos:column="47">*<pos:position pos:line="2" pos:column="48"/></modifier></type><name pos:line="2" pos:column="48">ptmp<pos:position pos:line="2" pos:column="52"/></name></decl></parameter>, <parameter><decl><type><name pos:line="2" pos:column="54">server_rec<pos:position pos:line="2" pos:column="64"/></name> <modifier pos:line="2" pos:column="65">*<pos:position pos:line="2" pos:column="66"/></modifier></type><name pos:line="2" pos:column="66">s<pos:position pos:line="2" pos:column="67"/></name></decl></parameter>)<pos:position pos:line="2" pos:column="68"/></parameter_list>
<block pos:line="3" pos:column="1">{
    <decl_stmt><decl><type><name pos:line="4" pos:column="5">apr_status_t<pos:position pos:line="4" pos:column="17"/></name></type> <name pos:line="4" pos:column="18">rv<pos:position pos:line="4" pos:column="20"/></name></decl>;<pos:position pos:line="4" pos:column="21"/></decl_stmt>
    <decl_stmt><decl><type><specifier pos:line="5" pos:column="5">const<pos:position pos:line="5" pos:column="10"/></specifier> <name pos:line="5" pos:column="11">char<pos:position pos:line="5" pos:column="15"/></name> <modifier pos:line="5" pos:column="16">*<pos:position pos:line="5" pos:column="17"/></modifier></type><name pos:line="5" pos:column="17">errmsg<pos:position pos:line="5" pos:column="23"/></name></decl>;<pos:position pos:line="5" pos:column="24"/></decl_stmt>
    <decl_stmt><decl><specifier pos:line="6" pos:column="5">static<pos:position pos:line="6" pos:column="11"/></specifier> <type><name><name pos:line="6" pos:column="12">struct<pos:position pos:line="6" pos:column="18"/></name> <name pos:line="6" pos:column="19">ap_socache_hints<pos:position pos:line="6" pos:column="35"/></name></name></type> <name pos:line="6" pos:column="36">authn_cache_hints<pos:position pos:line="6" pos:column="53"/></name> <init pos:line="6" pos:column="54">= <expr><block pos:line="6" pos:column="56">{<expr><literal type="number" pos:line="6" pos:column="57">64<pos:position pos:line="6" pos:column="59"/></literal></expr>, <expr><literal type="number" pos:line="6" pos:column="61">32<pos:position pos:line="6" pos:column="63"/></literal></expr>, <expr><literal type="number" pos:line="6" pos:column="65">60000000<pos:position pos:line="6" pos:column="73"/></literal></expr>}<pos:position pos:line="6" pos:column="74"/></block></expr></init></decl>;<pos:position pos:line="6" pos:column="75"/></decl_stmt>

    <if pos:line="8" pos:column="5">if <condition pos:line="8" pos:column="8">(<expr><operator pos:line="8" pos:column="9">!<pos:position pos:line="8" pos:column="10"/></operator><name pos:line="8" pos:column="10">configured<pos:position pos:line="8" pos:column="20"/></name></expr>)<pos:position pos:line="8" pos:column="21"/></condition><then pos:line="8" pos:column="21"> <block pos:line="8" pos:column="22">{
        <return pos:line="9" pos:column="9">return <expr><name pos:line="9" pos:column="16">OK<pos:position pos:line="9" pos:column="18"/></name></expr>;<pos:position pos:line="9" pos:column="19"/></return>    <comment type="block" pos:line="9" pos:column="23">/* don't waste the overhead of creating mutex &amp; cache */</comment>
    }<pos:position pos:line="10" pos:column="6"/></block></then></if>
    <if pos:line="11" pos:column="5">if <condition pos:line="11" pos:column="8">(<expr><name pos:line="11" pos:column="9">socache_provider<pos:position pos:line="11" pos:column="25"/></name> <operator pos:line="11" pos:column="26">==<pos:position pos:line="11" pos:column="28"/></operator> <name pos:line="11" pos:column="29">NULL<pos:position pos:line="11" pos:column="33"/></name></expr>)<pos:position pos:line="11" pos:column="34"/></condition><then pos:line="11" pos:column="34"> <block pos:line="11" pos:column="35">{
        <expr_stmt><expr><call><name pos:line="12" pos:column="9">ap_log_perror<pos:position pos:line="12" pos:column="22"/></name><argument_list pos:line="12" pos:column="22">(<argument><expr><name pos:line="12" pos:column="23">APLOG_MARK<pos:position pos:line="12" pos:column="33"/></name></expr></argument>, <argument><expr><name pos:line="12" pos:column="35">APLOG_CRIT<pos:position pos:line="12" pos:column="45"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="12" pos:column="47">0<pos:position pos:line="12" pos:column="48"/></literal></expr></argument>, <argument><expr><name pos:line="12" pos:column="50">plog<pos:position pos:line="12" pos:column="54"/></name></expr></argument>,
                      <argument><expr><literal type="string" pos:line="13" pos:column="23">"Please select a socache provider with AuthnCacheSOCache "<pos:position pos:line="13" pos:column="81"/></literal>
                      <literal type="string" pos:line="14" pos:column="23">"(no default found on this platform)"<pos:position pos:line="14" pos:column="60"/></literal></expr></argument>)<pos:position pos:line="14" pos:column="61"/></argument_list></call></expr>;<pos:position pos:line="14" pos:column="62"/></expr_stmt>
        <return pos:line="15" pos:column="9">return <expr><literal type="number" pos:line="15" pos:column="16">500<pos:position pos:line="15" pos:column="19"/></literal></expr>;<pos:position pos:line="15" pos:column="20"/></return> <comment type="block" pos:line="15" pos:column="21">/* An HTTP status would be a misnomer! */</comment>
    }<pos:position pos:line="16" pos:column="6"/></block></then></if>

    <expr_stmt><expr><name pos:line="18" pos:column="5">rv<pos:position pos:line="18" pos:column="7"/></name> <operator pos:line="18" pos:column="8">=<pos:position pos:line="18" pos:column="9"/></operator> <call><name pos:line="18" pos:column="10">ap_global_mutex_create<pos:position pos:line="18" pos:column="32"/></name><argument_list pos:line="18" pos:column="32">(<argument><expr><operator pos:line="18" pos:column="33">&amp;<pos:position pos:line="18" pos:column="38"/></operator><name pos:line="18" pos:column="34">authn_cache_mutex<pos:position pos:line="18" pos:column="51"/></name></expr></argument>, <argument><expr><name pos:line="18" pos:column="53">NULL<pos:position pos:line="18" pos:column="57"/></name></expr></argument>,
                                <argument><expr><name pos:line="19" pos:column="33">authn_cache_id<pos:position pos:line="19" pos:column="47"/></name></expr></argument>, <argument><expr><name pos:line="19" pos:column="49">NULL<pos:position pos:line="19" pos:column="53"/></name></expr></argument>, <argument><expr><name pos:line="19" pos:column="55">s<pos:position pos:line="19" pos:column="56"/></name></expr></argument>, <argument><expr><name pos:line="19" pos:column="58">pconf<pos:position pos:line="19" pos:column="63"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="19" pos:column="65">0<pos:position pos:line="19" pos:column="66"/></literal></expr></argument>)<pos:position pos:line="19" pos:column="67"/></argument_list></call></expr>;<pos:position pos:line="19" pos:column="68"/></expr_stmt>
    <if pos:line="20" pos:column="5">if <condition pos:line="20" pos:column="8">(<expr><name pos:line="20" pos:column="9">rv<pos:position pos:line="20" pos:column="11"/></name> <operator pos:line="20" pos:column="12">!=<pos:position pos:line="20" pos:column="14"/></operator> <name pos:line="20" pos:column="15">APR_SUCCESS<pos:position pos:line="20" pos:column="26"/></name></expr>)<pos:position pos:line="20" pos:column="27"/></condition><then pos:line="20" pos:column="27"> <block pos:line="20" pos:column="28">{
        <expr_stmt><expr><call><name pos:line="21" pos:column="9">ap_log_perror<pos:position pos:line="21" pos:column="22"/></name><argument_list pos:line="21" pos:column="22">(<argument><expr><name pos:line="21" pos:column="23">APLOG_MARK<pos:position pos:line="21" pos:column="33"/></name></expr></argument>, <argument><expr><name pos:line="21" pos:column="35">APLOG_CRIT<pos:position pos:line="21" pos:column="45"/></name></expr></argument>, <argument><expr><name pos:line="21" pos:column="47">rv<pos:position pos:line="21" pos:column="49"/></name></expr></argument>, <argument><expr><name pos:line="21" pos:column="51">plog<pos:position pos:line="21" pos:column="55"/></name></expr></argument>,
                      <argument><expr><literal type="string" pos:line="22" pos:column="23">"failed to create %s mutex"<pos:position pos:line="22" pos:column="50"/></literal></expr></argument>, <argument><expr><name pos:line="22" pos:column="52">authn_cache_id<pos:position pos:line="22" pos:column="66"/></name></expr></argument>)<pos:position pos:line="22" pos:column="67"/></argument_list></call></expr>;<pos:position pos:line="22" pos:column="68"/></expr_stmt>
        <return pos:line="23" pos:column="9">return <expr><literal type="number" pos:line="23" pos:column="16">500<pos:position pos:line="23" pos:column="19"/></literal></expr>;<pos:position pos:line="23" pos:column="20"/></return> <comment type="block" pos:line="23" pos:column="21">/* An HTTP status would be a misnomer! */</comment>
    }<pos:position pos:line="24" pos:column="6"/></block></then></if>
    <expr_stmt><expr><call><name pos:line="25" pos:column="5">apr_pool_cleanup_register<pos:position pos:line="25" pos:column="30"/></name><argument_list pos:line="25" pos:column="30">(<argument><expr><name pos:line="25" pos:column="31">pconf<pos:position pos:line="25" pos:column="36"/></name></expr></argument>, <argument><expr><name pos:line="25" pos:column="38">NULL<pos:position pos:line="25" pos:column="42"/></name></expr></argument>, <argument><expr><name pos:line="25" pos:column="44">remove_lock<pos:position pos:line="25" pos:column="55"/></name></expr></argument>, <argument><expr><name pos:line="25" pos:column="57">apr_pool_cleanup_null<pos:position pos:line="25" pos:column="78"/></name></expr></argument>)<pos:position pos:line="25" pos:column="79"/></argument_list></call></expr>;<pos:position pos:line="25" pos:column="80"/></expr_stmt>

    <expr_stmt><expr><name pos:line="27" pos:column="5">errmsg<pos:position pos:line="27" pos:column="11"/></name> <operator pos:line="27" pos:column="12">=<pos:position pos:line="27" pos:column="13"/></operator> <call><name><name pos:line="27" pos:column="14">socache_provider<pos:position pos:line="27" pos:column="30"/></name><operator pos:line="27" pos:column="30">-&gt;<pos:position pos:line="27" pos:column="35"/></operator><name pos:line="27" pos:column="32">create<pos:position pos:line="27" pos:column="38"/></name></name><argument_list pos:line="27" pos:column="38">(<argument><expr><operator pos:line="27" pos:column="39">&amp;<pos:position pos:line="27" pos:column="44"/></operator><name pos:line="27" pos:column="40">socache_instance<pos:position pos:line="27" pos:column="56"/></name></expr></argument>, <argument><expr><name pos:line="27" pos:column="58">NULL<pos:position pos:line="27" pos:column="62"/></name></expr></argument>, <argument><expr><name pos:line="27" pos:column="64">ptmp<pos:position pos:line="27" pos:column="68"/></name></expr></argument>, <argument><expr><name pos:line="27" pos:column="70">pconf<pos:position pos:line="27" pos:column="75"/></name></expr></argument>)<pos:position pos:line="27" pos:column="76"/></argument_list></call></expr>;<pos:position pos:line="27" pos:column="77"/></expr_stmt>
    <if pos:line="28" pos:column="5">if <condition pos:line="28" pos:column="8">(<expr><name pos:line="28" pos:column="9">errmsg<pos:position pos:line="28" pos:column="15"/></name></expr>)<pos:position pos:line="28" pos:column="16"/></condition><then pos:line="28" pos:column="16"> <block pos:line="28" pos:column="17">{
        <expr_stmt><expr><call><name pos:line="29" pos:column="9">ap_log_perror<pos:position pos:line="29" pos:column="22"/></name><argument_list pos:line="29" pos:column="22">(<argument><expr><name pos:line="29" pos:column="23">APLOG_MARK<pos:position pos:line="29" pos:column="33"/></name></expr></argument>, <argument><expr><name pos:line="29" pos:column="35">APLOG_CRIT<pos:position pos:line="29" pos:column="45"/></name></expr></argument>, <argument><expr><name pos:line="29" pos:column="47">rv<pos:position pos:line="29" pos:column="49"/></name></expr></argument>, <argument><expr><name pos:line="29" pos:column="51">plog<pos:position pos:line="29" pos:column="55"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="29" pos:column="57">"%s"<pos:position pos:line="29" pos:column="61"/></literal></expr></argument>, <argument><expr><name pos:line="29" pos:column="63">errmsg<pos:position pos:line="29" pos:column="69"/></name></expr></argument>)<pos:position pos:line="29" pos:column="70"/></argument_list></call></expr>;<pos:position pos:line="29" pos:column="71"/></expr_stmt>
        <return pos:line="30" pos:column="9">return <expr><literal type="number" pos:line="30" pos:column="16">500<pos:position pos:line="30" pos:column="19"/></literal></expr>;<pos:position pos:line="30" pos:column="20"/></return> <comment type="block" pos:line="30" pos:column="21">/* An HTTP status would be a misnomer! */</comment>
    }<pos:position pos:line="31" pos:column="6"/></block></then></if>

    <expr_stmt><expr><name pos:line="33" pos:column="5">rv<pos:position pos:line="33" pos:column="7"/></name> <operator pos:line="33" pos:column="8">=<pos:position pos:line="33" pos:column="9"/></operator> <call><name><name pos:line="33" pos:column="10">socache_provider<pos:position pos:line="33" pos:column="26"/></name><operator pos:line="33" pos:column="26">-&gt;<pos:position pos:line="33" pos:column="31"/></operator><name pos:line="33" pos:column="28">init<pos:position pos:line="33" pos:column="32"/></name></name><argument_list pos:line="33" pos:column="32">(<argument><expr><name pos:line="33" pos:column="33">socache_instance<pos:position pos:line="33" pos:column="49"/></name></expr></argument>, <argument><expr><name pos:line="33" pos:column="51">authn_cache_id<pos:position pos:line="33" pos:column="65"/></name></expr></argument>,
                                <argument><expr><operator pos:line="34" pos:column="33">&amp;<pos:position pos:line="34" pos:column="38"/></operator><name pos:line="34" pos:column="34">authn_cache_hints<pos:position pos:line="34" pos:column="51"/></name></expr></argument>, <argument><expr><name pos:line="34" pos:column="53">s<pos:position pos:line="34" pos:column="54"/></name></expr></argument>, <argument><expr><name pos:line="34" pos:column="56">pconf<pos:position pos:line="34" pos:column="61"/></name></expr></argument>)<pos:position pos:line="34" pos:column="62"/></argument_list></call></expr>;<pos:position pos:line="34" pos:column="63"/></expr_stmt>
    <if pos:line="35" pos:column="5">if <condition pos:line="35" pos:column="8">(<expr><name pos:line="35" pos:column="9">rv<pos:position pos:line="35" pos:column="11"/></name> <operator pos:line="35" pos:column="12">!=<pos:position pos:line="35" pos:column="14"/></operator> <name pos:line="35" pos:column="15">APR_SUCCESS<pos:position pos:line="35" pos:column="26"/></name></expr>)<pos:position pos:line="35" pos:column="27"/></condition><then pos:line="35" pos:column="27"> <block pos:line="35" pos:column="28">{
        <expr_stmt><expr><call><name pos:line="36" pos:column="9">ap_log_perror<pos:position pos:line="36" pos:column="22"/></name><argument_list pos:line="36" pos:column="22">(<argument><expr><name pos:line="36" pos:column="23">APLOG_MARK<pos:position pos:line="36" pos:column="33"/></name></expr></argument>, <argument><expr><name pos:line="36" pos:column="35">APLOG_CRIT<pos:position pos:line="36" pos:column="45"/></name></expr></argument>, <argument><expr><name pos:line="36" pos:column="47">rv<pos:position pos:line="36" pos:column="49"/></name></expr></argument>, <argument><expr><name pos:line="36" pos:column="51">plog<pos:position pos:line="36" pos:column="55"/></name></expr></argument>,
                      <argument><expr><literal type="string" pos:line="37" pos:column="23">"failed to initialise %s cache"<pos:position pos:line="37" pos:column="54"/></literal></expr></argument>, <argument><expr><name pos:line="37" pos:column="56">authn_cache_id<pos:position pos:line="37" pos:column="70"/></name></expr></argument>)<pos:position pos:line="37" pos:column="71"/></argument_list></call></expr>;<pos:position pos:line="37" pos:column="72"/></expr_stmt>
        <return pos:line="38" pos:column="9">return <expr><literal type="number" pos:line="38" pos:column="16">500<pos:position pos:line="38" pos:column="19"/></literal></expr>;<pos:position pos:line="38" pos:column="20"/></return> <comment type="block" pos:line="38" pos:column="21">/* An HTTP status would be a misnomer! */</comment>
    }<pos:position pos:line="39" pos:column="6"/></block></then></if>
    <expr_stmt><expr><call><name pos:line="40" pos:column="5">apr_pool_cleanup_register<pos:position pos:line="40" pos:column="30"/></name><argument_list pos:line="40" pos:column="30">(<argument><expr><name pos:line="40" pos:column="31">pconf<pos:position pos:line="40" pos:column="36"/></name></expr></argument>, <argument><expr><operator pos:line="40" pos:column="38">(<pos:position pos:line="40" pos:column="39"/></operator><name pos:line="40" pos:column="39">void<pos:position pos:line="40" pos:column="43"/></name><operator pos:line="40" pos:column="43">*<pos:position pos:line="40" pos:column="44"/></operator><operator pos:line="40" pos:column="44">)<pos:position pos:line="40" pos:column="45"/></operator><name pos:line="40" pos:column="45">s<pos:position pos:line="40" pos:column="46"/></name></expr></argument>, <argument><expr><name pos:line="40" pos:column="48">destroy_cache<pos:position pos:line="40" pos:column="61"/></name></expr></argument>, <argument><expr><name pos:line="40" pos:column="63">apr_pool_cleanup_null<pos:position pos:line="40" pos:column="84"/></name></expr></argument>)<pos:position pos:line="40" pos:column="85"/></argument_list></call></expr>;<pos:position pos:line="40" pos:column="86"/></expr_stmt>
    <return pos:line="41" pos:column="5">return <expr><name pos:line="41" pos:column="12">OK<pos:position pos:line="41" pos:column="14"/></name></expr>;<pos:position pos:line="41" pos:column="15"/></return>
}<pos:position pos:line="42" pos:column="2"/></block></function></unit>

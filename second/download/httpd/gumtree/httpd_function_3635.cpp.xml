<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/httpd/gumtree/httpd_function_3635.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">int<pos:position pos:line="1" pos:column="11"/></name></type> <name pos:line="1" pos:column="12">dav_method_bind<pos:position pos:line="1" pos:column="27"/></name><parameter_list pos:line="1" pos:column="27">(<parameter><decl><type><name pos:line="1" pos:column="28">request_rec<pos:position pos:line="1" pos:column="39"/></name> <modifier pos:line="1" pos:column="40">*<pos:position pos:line="1" pos:column="41"/></modifier></type><name pos:line="1" pos:column="41">r<pos:position pos:line="1" pos:column="42"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="43"/></parameter_list>
<block pos:line="2" pos:column="1">{
    <decl_stmt><decl><type><name pos:line="3" pos:column="5">dav_resource<pos:position pos:line="3" pos:column="17"/></name> <modifier pos:line="3" pos:column="18">*<pos:position pos:line="3" pos:column="19"/></modifier></type><name pos:line="3" pos:column="19">resource<pos:position pos:line="3" pos:column="27"/></name></decl>;<pos:position pos:line="3" pos:column="28"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="4" pos:column="5">dav_resource<pos:position pos:line="4" pos:column="17"/></name> <modifier pos:line="4" pos:column="18">*<pos:position pos:line="4" pos:column="19"/></modifier></type><name pos:line="4" pos:column="19">binding<pos:position pos:line="4" pos:column="26"/></name></decl>;<pos:position pos:line="4" pos:column="27"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="5" pos:column="5">dav_auto_version_info<pos:position pos:line="5" pos:column="26"/></name></type> <name pos:line="5" pos:column="27">av_info<pos:position pos:line="5" pos:column="34"/></name></decl>;<pos:position pos:line="5" pos:column="35"/></decl_stmt>
    <decl_stmt><decl><type><specifier pos:line="6" pos:column="5">const<pos:position pos:line="6" pos:column="10"/></specifier> <name pos:line="6" pos:column="11">dav_hooks_binding<pos:position pos:line="6" pos:column="28"/></name> <modifier pos:line="6" pos:column="29">*<pos:position pos:line="6" pos:column="30"/></modifier></type><name pos:line="6" pos:column="30">binding_hooks<pos:position pos:line="6" pos:column="43"/></name> <init pos:line="6" pos:column="44">= <expr><call><name pos:line="6" pos:column="46">DAV_GET_HOOKS_BINDING<pos:position pos:line="6" pos:column="67"/></name><argument_list pos:line="6" pos:column="67">(<argument><expr><name pos:line="6" pos:column="68">r<pos:position pos:line="6" pos:column="69"/></name></expr></argument>)<pos:position pos:line="6" pos:column="70"/></argument_list></call></expr></init></decl>;<pos:position pos:line="6" pos:column="71"/></decl_stmt>
    <decl_stmt><decl><type><specifier pos:line="7" pos:column="5">const<pos:position pos:line="7" pos:column="10"/></specifier> <name pos:line="7" pos:column="11">char<pos:position pos:line="7" pos:column="15"/></name> <modifier pos:line="7" pos:column="16">*<pos:position pos:line="7" pos:column="17"/></modifier></type><name pos:line="7" pos:column="17">dest<pos:position pos:line="7" pos:column="21"/></name></decl>;<pos:position pos:line="7" pos:column="22"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="8" pos:column="5">dav_error<pos:position pos:line="8" pos:column="14"/></name> <modifier pos:line="8" pos:column="15">*<pos:position pos:line="8" pos:column="16"/></modifier></type><name pos:line="8" pos:column="16">err<pos:position pos:line="8" pos:column="19"/></name></decl>;<pos:position pos:line="8" pos:column="20"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="9" pos:column="5">dav_error<pos:position pos:line="9" pos:column="14"/></name> <modifier pos:line="9" pos:column="15">*<pos:position pos:line="9" pos:column="16"/></modifier></type><name pos:line="9" pos:column="16">err2<pos:position pos:line="9" pos:column="20"/></name></decl>;<pos:position pos:line="9" pos:column="21"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="10" pos:column="5">dav_response<pos:position pos:line="10" pos:column="17"/></name> <modifier pos:line="10" pos:column="18">*<pos:position pos:line="10" pos:column="19"/></modifier></type><name pos:line="10" pos:column="19">multi_response<pos:position pos:line="10" pos:column="33"/></name> <init pos:line="10" pos:column="34">= <expr><name pos:line="10" pos:column="36">NULL<pos:position pos:line="10" pos:column="40"/></name></expr></init></decl>;<pos:position pos:line="10" pos:column="41"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="11" pos:column="5">dav_lookup_result<pos:position pos:line="11" pos:column="22"/></name></type> <name pos:line="11" pos:column="23">lookup<pos:position pos:line="11" pos:column="29"/></name></decl>;<pos:position pos:line="11" pos:column="30"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="12" pos:column="5">int<pos:position pos:line="12" pos:column="8"/></name></type> <name pos:line="12" pos:column="9">overwrite<pos:position pos:line="12" pos:column="18"/></name></decl>;<pos:position pos:line="12" pos:column="19"/></decl_stmt>

    <comment type="block" pos:line="14" pos:column="5">/* If no bindings provider, decline the request */</comment>
    <if pos:line="15" pos:column="5">if <condition pos:line="15" pos:column="8">(<expr><name pos:line="15" pos:column="9">binding_hooks<pos:position pos:line="15" pos:column="22"/></name> <operator pos:line="15" pos:column="23">==<pos:position pos:line="15" pos:column="25"/></operator> <name pos:line="15" pos:column="26">NULL<pos:position pos:line="15" pos:column="30"/></name></expr>)<pos:position pos:line="15" pos:column="31"/></condition><then pos:line="15" pos:column="31">
        <block type="pseudo"><return pos:line="16" pos:column="9">return <expr><name pos:line="16" pos:column="16">DECLINED<pos:position pos:line="16" pos:column="24"/></name></expr>;<pos:position pos:line="16" pos:column="25"/></return></block></then></if>

    <comment type="block" pos:line="18" pos:column="5">/* Ask repository module to resolve the resource */</comment>
    <expr_stmt><expr><name pos:line="19" pos:column="5">err<pos:position pos:line="19" pos:column="8"/></name> <operator pos:line="19" pos:column="9">=<pos:position pos:line="19" pos:column="10"/></operator> <call><name pos:line="19" pos:column="11">dav_get_resource<pos:position pos:line="19" pos:column="27"/></name><argument_list pos:line="19" pos:column="27">(<argument><expr><name pos:line="19" pos:column="28">r<pos:position pos:line="19" pos:column="29"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="19" pos:column="31">0<pos:position pos:line="19" pos:column="32"/></literal></expr></argument> <comment type="block" pos:line="19" pos:column="33">/* label_allowed */</comment>, <argument><expr><literal type="number" pos:line="19" pos:column="54">0<pos:position pos:line="19" pos:column="55"/></literal></expr></argument> <comment type="block" pos:line="19" pos:column="56">/* use_checked_in */</comment>,
                           <argument><expr><operator pos:line="20" pos:column="28">&amp;<pos:position pos:line="20" pos:column="33"/></operator><name pos:line="20" pos:column="29">resource<pos:position pos:line="20" pos:column="37"/></name></expr></argument>)<pos:position pos:line="20" pos:column="38"/></argument_list></call></expr>;<pos:position pos:line="20" pos:column="39"/></expr_stmt>
    <if pos:line="21" pos:column="5">if <condition pos:line="21" pos:column="8">(<expr><name pos:line="21" pos:column="9">err<pos:position pos:line="21" pos:column="12"/></name> <operator pos:line="21" pos:column="13">!=<pos:position pos:line="21" pos:column="15"/></operator> <name pos:line="21" pos:column="16">NULL<pos:position pos:line="21" pos:column="20"/></name></expr>)<pos:position pos:line="21" pos:column="21"/></condition><then pos:line="21" pos:column="21">
        <block type="pseudo"><return pos:line="22" pos:column="9">return <expr><call><name pos:line="22" pos:column="16">dav_handle_err<pos:position pos:line="22" pos:column="30"/></name><argument_list pos:line="22" pos:column="30">(<argument><expr><name pos:line="22" pos:column="31">r<pos:position pos:line="22" pos:column="32"/></name></expr></argument>, <argument><expr><name pos:line="22" pos:column="34">err<pos:position pos:line="22" pos:column="37"/></name></expr></argument>, <argument><expr><name pos:line="22" pos:column="39">NULL<pos:position pos:line="22" pos:column="43"/></name></expr></argument>)<pos:position pos:line="22" pos:column="44"/></argument_list></call></expr>;<pos:position pos:line="22" pos:column="45"/></return></block></then></if>

    <if pos:line="24" pos:column="5">if <condition pos:line="24" pos:column="8">(<expr><operator pos:line="24" pos:column="9">!<pos:position pos:line="24" pos:column="10"/></operator><name><name pos:line="24" pos:column="10">resource<pos:position pos:line="24" pos:column="18"/></name><operator pos:line="24" pos:column="18">-&gt;<pos:position pos:line="24" pos:column="23"/></operator><name pos:line="24" pos:column="20">exists<pos:position pos:line="24" pos:column="26"/></name></name></expr>)<pos:position pos:line="24" pos:column="27"/></condition><then pos:line="24" pos:column="27"> <block pos:line="24" pos:column="28">{
        <comment type="block" pos:line="25" pos:column="9">/* Apache will supply a default error for this. */</comment>
        <return pos:line="26" pos:column="9">return <expr><name pos:line="26" pos:column="16">HTTP_NOT_FOUND<pos:position pos:line="26" pos:column="30"/></name></expr>;<pos:position pos:line="26" pos:column="31"/></return>
    }<pos:position pos:line="27" pos:column="6"/></block></then></if>

    <comment type="block" pos:line="29" pos:column="5">/* get the destination URI */</comment>
    <expr_stmt><expr><name pos:line="30" pos:column="5">dest<pos:position pos:line="30" pos:column="9"/></name> <operator pos:line="30" pos:column="10">=<pos:position pos:line="30" pos:column="11"/></operator> <call><name pos:line="30" pos:column="12">apr_table_get<pos:position pos:line="30" pos:column="25"/></name><argument_list pos:line="30" pos:column="25">(<argument><expr><name><name pos:line="30" pos:column="26">r<pos:position pos:line="30" pos:column="27"/></name><operator pos:line="30" pos:column="27">-&gt;<pos:position pos:line="30" pos:column="32"/></operator><name pos:line="30" pos:column="29">headers_in<pos:position pos:line="30" pos:column="39"/></name></name></expr></argument>, <argument><expr><literal type="string" pos:line="30" pos:column="41">"Destination"<pos:position pos:line="30" pos:column="54"/></literal></expr></argument>)<pos:position pos:line="30" pos:column="55"/></argument_list></call></expr>;<pos:position pos:line="30" pos:column="56"/></expr_stmt>
    <if pos:line="31" pos:column="5">if <condition pos:line="31" pos:column="8">(<expr><name pos:line="31" pos:column="9">dest<pos:position pos:line="31" pos:column="13"/></name> <operator pos:line="31" pos:column="14">==<pos:position pos:line="31" pos:column="16"/></operator> <name pos:line="31" pos:column="17">NULL<pos:position pos:line="31" pos:column="21"/></name></expr>)<pos:position pos:line="31" pos:column="22"/></condition><then pos:line="31" pos:column="22"> <block pos:line="31" pos:column="23">{
        <comment type="block" pos:line="32" pos:column="9">/* This supplies additional information for the default message. */</comment>
        <expr_stmt><expr><call><name pos:line="33" pos:column="9">ap_log_rerror<pos:position pos:line="33" pos:column="22"/></name><argument_list pos:line="33" pos:column="22">(<argument><expr><name pos:line="33" pos:column="23">APLOG_MARK<pos:position pos:line="33" pos:column="33"/></name></expr></argument>, <argument><expr><name pos:line="33" pos:column="35">APLOG_ERR<pos:position pos:line="33" pos:column="44"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="33" pos:column="46">0<pos:position pos:line="33" pos:column="47"/></literal></expr></argument>, <argument><expr><name pos:line="33" pos:column="49">r<pos:position pos:line="33" pos:column="50"/></name></expr></argument>,
                      <argument><expr><literal type="string" pos:line="34" pos:column="23">"The request is missing a Destination header."<pos:position pos:line="34" pos:column="69"/></literal></expr></argument>)<pos:position pos:line="34" pos:column="70"/></argument_list></call></expr>;<pos:position pos:line="34" pos:column="71"/></expr_stmt>
        <return pos:line="35" pos:column="9">return <expr><name pos:line="35" pos:column="16">HTTP_BAD_REQUEST<pos:position pos:line="35" pos:column="32"/></name></expr>;<pos:position pos:line="35" pos:column="33"/></return>
    }<pos:position pos:line="36" pos:column="6"/></block></then></if>

    <expr_stmt><expr><name pos:line="38" pos:column="5">lookup<pos:position pos:line="38" pos:column="11"/></name> <operator pos:line="38" pos:column="12">=<pos:position pos:line="38" pos:column="13"/></operator> <call><name pos:line="38" pos:column="14">dav_lookup_uri<pos:position pos:line="38" pos:column="28"/></name><argument_list pos:line="38" pos:column="28">(<argument><expr><name pos:line="38" pos:column="29">dest<pos:position pos:line="38" pos:column="33"/></name></expr></argument>, <argument><expr><name pos:line="38" pos:column="35">r<pos:position pos:line="38" pos:column="36"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="38" pos:column="38">0<pos:position pos:line="38" pos:column="39"/></literal></expr></argument> <comment type="block" pos:line="38" pos:column="40">/* must_be_absolute */</comment>)<pos:position pos:line="38" pos:column="63"/></argument_list></call></expr>;<pos:position pos:line="38" pos:column="64"/></expr_stmt>
    <if pos:line="39" pos:column="5">if <condition pos:line="39" pos:column="8">(<expr><name><name pos:line="39" pos:column="9">lookup<pos:position pos:line="39" pos:column="15"/></name><operator pos:line="39" pos:column="15">.<pos:position pos:line="39" pos:column="16"/></operator><name pos:line="39" pos:column="16">rnew<pos:position pos:line="39" pos:column="20"/></name></name> <operator pos:line="39" pos:column="21">==<pos:position pos:line="39" pos:column="23"/></operator> <name pos:line="39" pos:column="24">NULL<pos:position pos:line="39" pos:column="28"/></name></expr>)<pos:position pos:line="39" pos:column="29"/></condition><then pos:line="39" pos:column="29"> <block pos:line="39" pos:column="30">{
        <if pos:line="40" pos:column="9">if <condition pos:line="40" pos:column="12">(<expr><name><name pos:line="40" pos:column="13">lookup<pos:position pos:line="40" pos:column="19"/></name><operator pos:line="40" pos:column="19">.<pos:position pos:line="40" pos:column="20"/></operator><name pos:line="40" pos:column="20">err<pos:position pos:line="40" pos:column="23"/></name><operator pos:line="40" pos:column="23">.<pos:position pos:line="40" pos:column="24"/></operator><name pos:line="40" pos:column="24">status<pos:position pos:line="40" pos:column="30"/></name></name> <operator pos:line="40" pos:column="31">==<pos:position pos:line="40" pos:column="33"/></operator> <name pos:line="40" pos:column="34">HTTP_BAD_REQUEST<pos:position pos:line="40" pos:column="50"/></name></expr>)<pos:position pos:line="40" pos:column="51"/></condition><then pos:line="40" pos:column="51"> <block pos:line="40" pos:column="52">{
            <comment type="block" pos:line="41" pos:column="13">/* This supplies additional information for the default message. */</comment>
            <expr_stmt><expr><call><name pos:line="42" pos:column="13">ap_log_rerror<pos:position pos:line="42" pos:column="26"/></name><argument_list pos:line="42" pos:column="26">(<argument><expr><name pos:line="42" pos:column="27">APLOG_MARK<pos:position pos:line="42" pos:column="37"/></name></expr></argument>, <argument><expr><name pos:line="42" pos:column="39">APLOG_ERR<pos:position pos:line="42" pos:column="48"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="42" pos:column="50">0<pos:position pos:line="42" pos:column="51"/></literal></expr></argument>, <argument><expr><name pos:line="42" pos:column="53">r<pos:position pos:line="42" pos:column="54"/></name></expr></argument>,
                          <argument><expr><literal type="string" pos:line="43" pos:column="27">"%s"<pos:position pos:line="43" pos:column="31"/></literal></expr></argument>, <argument><expr><name><name pos:line="43" pos:column="33">lookup<pos:position pos:line="43" pos:column="39"/></name><operator pos:line="43" pos:column="39">.<pos:position pos:line="43" pos:column="40"/></operator><name pos:line="43" pos:column="40">err<pos:position pos:line="43" pos:column="43"/></name><operator pos:line="43" pos:column="43">.<pos:position pos:line="43" pos:column="44"/></operator><name pos:line="43" pos:column="44">desc<pos:position pos:line="43" pos:column="48"/></name></name></expr></argument>)<pos:position pos:line="43" pos:column="49"/></argument_list></call></expr>;<pos:position pos:line="43" pos:column="50"/></expr_stmt>
            <return pos:line="44" pos:column="13">return <expr><name pos:line="44" pos:column="20">HTTP_BAD_REQUEST<pos:position pos:line="44" pos:column="36"/></name></expr>;<pos:position pos:line="44" pos:column="37"/></return>
        }<pos:position pos:line="45" pos:column="10"/></block></then>
        <elseif pos:line="46" pos:column="9">else <if pos:line="46" pos:column="14">if <condition pos:line="46" pos:column="17">(<expr><name><name pos:line="46" pos:column="18">lookup<pos:position pos:line="46" pos:column="24"/></name><operator pos:line="46" pos:column="24">.<pos:position pos:line="46" pos:column="25"/></operator><name pos:line="46" pos:column="25">err<pos:position pos:line="46" pos:column="28"/></name><operator pos:line="46" pos:column="28">.<pos:position pos:line="46" pos:column="29"/></operator><name pos:line="46" pos:column="29">status<pos:position pos:line="46" pos:column="35"/></name></name> <operator pos:line="46" pos:column="36">==<pos:position pos:line="46" pos:column="38"/></operator> <name pos:line="46" pos:column="39">HTTP_BAD_GATEWAY<pos:position pos:line="46" pos:column="55"/></name></expr>)<pos:position pos:line="46" pos:column="56"/></condition><then pos:line="46" pos:column="56"> <block pos:line="46" pos:column="57">{
            <comment type="block" pos:line="47" pos:column="13">/* ### Bindings protocol draft 02 says to return 507
             * ### (Cross Server Binding Forbidden); Apache already defines 507
             * ### as HTTP_INSUFFICIENT_STORAGE. So, for now, we'll return
             * ### HTTP_FORBIDDEN
             */</comment>
             <return pos:line="52" pos:column="14">return <expr><call><name pos:line="52" pos:column="21">dav_error_response<pos:position pos:line="52" pos:column="39"/></name><argument_list pos:line="52" pos:column="39">(<argument><expr><name pos:line="52" pos:column="40">r<pos:position pos:line="52" pos:column="41"/></name></expr></argument>, <argument><expr><name pos:line="52" pos:column="43">HTTP_FORBIDDEN<pos:position pos:line="52" pos:column="57"/></name></expr></argument>,
                                       <argument><expr><literal type="string" pos:line="53" pos:column="40">"Cross server bindings are not "<pos:position pos:line="53" pos:column="72"/></literal>
                                       <literal type="string" pos:line="54" pos:column="40">"allowed by this server."<pos:position pos:line="54" pos:column="65"/></literal></expr></argument>)<pos:position pos:line="54" pos:column="66"/></argument_list></call></expr>;<pos:position pos:line="54" pos:column="67"/></return>
        }<pos:position pos:line="55" pos:column="10"/></block></then></if></elseif></if>

        <comment type="block" pos:line="57" pos:column="9">/* ### this assumes that dav_lookup_uri() only generates a status
         * ### that Apache can provide a status line for!! */</comment>

        <return pos:line="60" pos:column="9">return <expr><call><name pos:line="60" pos:column="16">dav_error_response<pos:position pos:line="60" pos:column="34"/></name><argument_list pos:line="60" pos:column="34">(<argument><expr><name pos:line="60" pos:column="35">r<pos:position pos:line="60" pos:column="36"/></name></expr></argument>, <argument><expr><name><name pos:line="60" pos:column="38">lookup<pos:position pos:line="60" pos:column="44"/></name><operator pos:line="60" pos:column="44">.<pos:position pos:line="60" pos:column="45"/></operator><name pos:line="60" pos:column="45">err<pos:position pos:line="60" pos:column="48"/></name><operator pos:line="60" pos:column="48">.<pos:position pos:line="60" pos:column="49"/></operator><name pos:line="60" pos:column="49">status<pos:position pos:line="60" pos:column="55"/></name></name></expr></argument>, <argument><expr><name><name pos:line="60" pos:column="57">lookup<pos:position pos:line="60" pos:column="63"/></name><operator pos:line="60" pos:column="63">.<pos:position pos:line="60" pos:column="64"/></operator><name pos:line="60" pos:column="64">err<pos:position pos:line="60" pos:column="67"/></name><operator pos:line="60" pos:column="67">.<pos:position pos:line="60" pos:column="68"/></operator><name pos:line="60" pos:column="68">desc<pos:position pos:line="60" pos:column="72"/></name></name></expr></argument>)<pos:position pos:line="60" pos:column="73"/></argument_list></call></expr>;<pos:position pos:line="60" pos:column="74"/></return>
    }<pos:position pos:line="61" pos:column="6"/></block></then></if>
    <if pos:line="62" pos:column="5">if <condition pos:line="62" pos:column="8">(<expr><name><name pos:line="62" pos:column="9">lookup<pos:position pos:line="62" pos:column="15"/></name><operator pos:line="62" pos:column="15">.<pos:position pos:line="62" pos:column="16"/></operator><name pos:line="62" pos:column="16">rnew<pos:position pos:line="62" pos:column="20"/></name><operator pos:line="62" pos:column="20">-&gt;<pos:position pos:line="62" pos:column="25"/></operator><name pos:line="62" pos:column="22">status<pos:position pos:line="62" pos:column="28"/></name></name> <operator pos:line="62" pos:column="29">!=<pos:position pos:line="62" pos:column="31"/></operator> <name pos:line="62" pos:column="32">HTTP_OK<pos:position pos:line="62" pos:column="39"/></name></expr>)<pos:position pos:line="62" pos:column="40"/></condition><then pos:line="62" pos:column="40"> <block pos:line="62" pos:column="41">{
        <comment type="block" pos:line="63" pos:column="9">/* ### how best to report this... */</comment>
        <return pos:line="64" pos:column="9">return <expr><call><name pos:line="64" pos:column="16">dav_error_response<pos:position pos:line="64" pos:column="34"/></name><argument_list pos:line="64" pos:column="34">(<argument><expr><name pos:line="64" pos:column="35">r<pos:position pos:line="64" pos:column="36"/></name></expr></argument>, <argument><expr><name><name pos:line="64" pos:column="38">lookup<pos:position pos:line="64" pos:column="44"/></name><operator pos:line="64" pos:column="44">.<pos:position pos:line="64" pos:column="45"/></operator><name pos:line="64" pos:column="45">rnew<pos:position pos:line="64" pos:column="49"/></name><operator pos:line="64" pos:column="49">-&gt;<pos:position pos:line="64" pos:column="54"/></operator><name pos:line="64" pos:column="51">status<pos:position pos:line="64" pos:column="57"/></name></name></expr></argument>,
                                  <argument><expr><literal type="string" pos:line="65" pos:column="35">"Destination URI had an error."<pos:position pos:line="65" pos:column="66"/></literal></expr></argument>)<pos:position pos:line="65" pos:column="67"/></argument_list></call></expr>;<pos:position pos:line="65" pos:column="68"/></return>
    }<pos:position pos:line="66" pos:column="6"/></block></then></if>

    <comment type="block" pos:line="68" pos:column="5">/* resolve binding resource */</comment>
    <expr_stmt><expr><name pos:line="69" pos:column="5">err<pos:position pos:line="69" pos:column="8"/></name> <operator pos:line="69" pos:column="9">=<pos:position pos:line="69" pos:column="10"/></operator> <call><name pos:line="69" pos:column="11">dav_get_resource<pos:position pos:line="69" pos:column="27"/></name><argument_list pos:line="69" pos:column="27">(<argument><expr><name><name pos:line="69" pos:column="28">lookup<pos:position pos:line="69" pos:column="34"/></name><operator pos:line="69" pos:column="34">.<pos:position pos:line="69" pos:column="35"/></operator><name pos:line="69" pos:column="35">rnew<pos:position pos:line="69" pos:column="39"/></name></name></expr></argument>, <argument><expr><literal type="number" pos:line="69" pos:column="41">0<pos:position pos:line="69" pos:column="42"/></literal></expr></argument> <comment type="block" pos:line="69" pos:column="43">/* label_allowed */</comment>,
                           <argument><expr><literal type="number" pos:line="70" pos:column="28">0<pos:position pos:line="70" pos:column="29"/></literal></expr></argument> <comment type="block" pos:line="70" pos:column="30">/* use_checked_in */</comment>, <argument><expr><operator pos:line="70" pos:column="52">&amp;<pos:position pos:line="70" pos:column="57"/></operator><name pos:line="70" pos:column="53">binding<pos:position pos:line="70" pos:column="60"/></name></expr></argument>)<pos:position pos:line="70" pos:column="61"/></argument_list></call></expr>;<pos:position pos:line="70" pos:column="62"/></expr_stmt>
    <if pos:line="71" pos:column="5">if <condition pos:line="71" pos:column="8">(<expr><name pos:line="71" pos:column="9">err<pos:position pos:line="71" pos:column="12"/></name> <operator pos:line="71" pos:column="13">!=<pos:position pos:line="71" pos:column="15"/></operator> <name pos:line="71" pos:column="16">NULL<pos:position pos:line="71" pos:column="20"/></name></expr>)<pos:position pos:line="71" pos:column="21"/></condition><then pos:line="71" pos:column="21">
        <block type="pseudo"><return pos:line="72" pos:column="9">return <expr><call><name pos:line="72" pos:column="16">dav_handle_err<pos:position pos:line="72" pos:column="30"/></name><argument_list pos:line="72" pos:column="30">(<argument><expr><name pos:line="72" pos:column="31">r<pos:position pos:line="72" pos:column="32"/></name></expr></argument>, <argument><expr><name pos:line="72" pos:column="34">err<pos:position pos:line="72" pos:column="37"/></name></expr></argument>, <argument><expr><name pos:line="72" pos:column="39">NULL<pos:position pos:line="72" pos:column="43"/></name></expr></argument>)<pos:position pos:line="72" pos:column="44"/></argument_list></call></expr>;<pos:position pos:line="72" pos:column="45"/></return></block></then></if>

    <comment type="block" pos:line="74" pos:column="5">/* are the two resources handled by the same repository? */</comment>
    <if pos:line="75" pos:column="5">if <condition pos:line="75" pos:column="8">(<expr><name><name pos:line="75" pos:column="9">resource<pos:position pos:line="75" pos:column="17"/></name><operator pos:line="75" pos:column="17">-&gt;<pos:position pos:line="75" pos:column="22"/></operator><name pos:line="75" pos:column="19">hooks<pos:position pos:line="75" pos:column="24"/></name></name> <operator pos:line="75" pos:column="25">!=<pos:position pos:line="75" pos:column="27"/></operator> <name><name pos:line="75" pos:column="28">binding<pos:position pos:line="75" pos:column="35"/></name><operator pos:line="75" pos:column="35">-&gt;<pos:position pos:line="75" pos:column="40"/></operator><name pos:line="75" pos:column="37">hooks<pos:position pos:line="75" pos:column="42"/></name></name></expr>)<pos:position pos:line="75" pos:column="43"/></condition><then pos:line="75" pos:column="43"> <block pos:line="75" pos:column="44">{
        <comment type="block" pos:line="76" pos:column="9">/* ### this message exposes some backend config, but screw it... */</comment>
        <return pos:line="77" pos:column="9">return <expr><call><name pos:line="77" pos:column="16">dav_error_response<pos:position pos:line="77" pos:column="34"/></name><argument_list pos:line="77" pos:column="34">(<argument><expr><name pos:line="77" pos:column="35">r<pos:position pos:line="77" pos:column="36"/></name></expr></argument>, <argument><expr><name pos:line="77" pos:column="38">HTTP_BAD_GATEWAY<pos:position pos:line="77" pos:column="54"/></name></expr></argument>,
                                  <argument><expr><literal type="string" pos:line="78" pos:column="35">"Destination URI is handled by a "<pos:position pos:line="78" pos:column="69"/></literal>
                                  <literal type="string" pos:line="79" pos:column="35">"different repository than the source URI. "<pos:position pos:line="79" pos:column="79"/></literal>
                                  <literal type="string" pos:line="80" pos:column="35">"BIND between repositories is not possible."<pos:position pos:line="80" pos:column="79"/></literal></expr></argument>)<pos:position pos:line="80" pos:column="80"/></argument_list></call></expr>;<pos:position pos:line="80" pos:column="81"/></return>
    }<pos:position pos:line="81" pos:column="6"/></block></then></if>

    <comment type="block" pos:line="83" pos:column="5">/* get and parse the overwrite header value */</comment>
    <if pos:line="84" pos:column="5">if <condition pos:line="84" pos:column="8">(<expr><operator pos:line="84" pos:column="9">(<pos:position pos:line="84" pos:column="10"/></operator><name pos:line="84" pos:column="10">overwrite<pos:position pos:line="84" pos:column="19"/></name> <operator pos:line="84" pos:column="20">=<pos:position pos:line="84" pos:column="21"/></operator> <call><name pos:line="84" pos:column="22">dav_get_overwrite<pos:position pos:line="84" pos:column="39"/></name><argument_list pos:line="84" pos:column="39">(<argument><expr><name pos:line="84" pos:column="40">r<pos:position pos:line="84" pos:column="41"/></name></expr></argument>)<pos:position pos:line="84" pos:column="42"/></argument_list></call><operator pos:line="84" pos:column="42">)<pos:position pos:line="84" pos:column="43"/></operator> <operator pos:line="84" pos:column="44">&lt;<pos:position pos:line="84" pos:column="48"/></operator> <literal type="number" pos:line="84" pos:column="46">0<pos:position pos:line="84" pos:column="47"/></literal></expr>)<pos:position pos:line="84" pos:column="48"/></condition><then pos:line="84" pos:column="48"> <block pos:line="84" pos:column="49">{
        <comment type="block" pos:line="85" pos:column="9">/* dav_get_overwrite() supplies additional information for the
         * default message. */</comment>
        <return pos:line="87" pos:column="9">return <expr><name pos:line="87" pos:column="16">HTTP_BAD_REQUEST<pos:position pos:line="87" pos:column="32"/></name></expr>;<pos:position pos:line="87" pos:column="33"/></return>
    }<pos:position pos:line="88" pos:column="6"/></block></then></if>

    <comment type="block" pos:line="90" pos:column="5">/* quick failure test: if dest exists and overwrite is false. */</comment>
    <if pos:line="91" pos:column="5">if <condition pos:line="91" pos:column="8">(<expr><name><name pos:line="91" pos:column="9">binding<pos:position pos:line="91" pos:column="16"/></name><operator pos:line="91" pos:column="16">-&gt;<pos:position pos:line="91" pos:column="21"/></operator><name pos:line="91" pos:column="18">exists<pos:position pos:line="91" pos:column="24"/></name></name> <operator pos:line="91" pos:column="25">&amp;&amp;<pos:position pos:line="91" pos:column="35"/></operator> <operator pos:line="91" pos:column="28">!<pos:position pos:line="91" pos:column="29"/></operator><name pos:line="91" pos:column="29">overwrite<pos:position pos:line="91" pos:column="38"/></name></expr>)<pos:position pos:line="91" pos:column="39"/></condition><then pos:line="91" pos:column="39"> <block pos:line="91" pos:column="40">{
        <return pos:line="92" pos:column="9">return <expr><call><name pos:line="92" pos:column="16">dav_error_response<pos:position pos:line="92" pos:column="34"/></name><argument_list pos:line="92" pos:column="34">(<argument><expr><name pos:line="92" pos:column="35">r<pos:position pos:line="92" pos:column="36"/></name></expr></argument>, <argument><expr><name pos:line="92" pos:column="38">HTTP_PRECONDITION_FAILED<pos:position pos:line="92" pos:column="62"/></name></expr></argument>,
                                  <argument><expr><literal type="string" pos:line="93" pos:column="35">"Destination is not empty and "<pos:position pos:line="93" pos:column="66"/></literal>
                                  <literal type="string" pos:line="94" pos:column="35">"Overwrite is not \"T\""<pos:position pos:line="94" pos:column="59"/></literal></expr></argument>)<pos:position pos:line="94" pos:column="60"/></argument_list></call></expr>;<pos:position pos:line="94" pos:column="61"/></return>
    }<pos:position pos:line="95" pos:column="6"/></block></then></if>

    <comment type="block" pos:line="97" pos:column="5">/* are the source and destination the same? */</comment>
    <if pos:line="98" pos:column="5">if <condition pos:line="98" pos:column="8">(<expr><call pos:line="98" pos:column="9">(<modifier pos:line="98" pos:column="10">*<pos:position pos:line="98" pos:column="11"/></modifier><name><name pos:line="98" pos:column="11">resource<pos:position pos:line="98" pos:column="19"/></name><operator pos:line="98" pos:column="19">-&gt;<pos:position pos:line="98" pos:column="24"/></operator><name pos:line="98" pos:column="21">hooks<pos:position pos:line="98" pos:column="26"/></name><operator pos:line="98" pos:column="26">-&gt;<pos:position pos:line="98" pos:column="31"/></operator><name pos:line="98" pos:column="28">is_same_resource<pos:position pos:line="98" pos:column="44"/></name></name>)<argument_list pos:line="98" pos:column="45">(<argument><expr><name pos:line="98" pos:column="46">resource<pos:position pos:line="98" pos:column="54"/></name></expr></argument>, <argument><expr><name pos:line="98" pos:column="56">binding<pos:position pos:line="98" pos:column="63"/></name></expr></argument>)<pos:position pos:line="98" pos:column="64"/></argument_list></call></expr>)<pos:position pos:line="98" pos:column="65"/></condition><then pos:line="98" pos:column="65"> <block pos:line="98" pos:column="66">{
        <return pos:line="99" pos:column="9">return <expr><call><name pos:line="99" pos:column="16">dav_error_response<pos:position pos:line="99" pos:column="34"/></name><argument_list pos:line="99" pos:column="34">(<argument><expr><name pos:line="99" pos:column="35">r<pos:position pos:line="99" pos:column="36"/></name></expr></argument>, <argument><expr><name pos:line="99" pos:column="38">HTTP_FORBIDDEN<pos:position pos:line="99" pos:column="52"/></name></expr></argument>,
                                  <argument><expr><literal type="string" pos:line="100" pos:column="35">"Source and Destination URIs are the same."<pos:position pos:line="100" pos:column="78"/></literal></expr></argument>)<pos:position pos:line="100" pos:column="79"/></argument_list></call></expr>;<pos:position pos:line="100" pos:column="80"/></return>
    }<pos:position pos:line="101" pos:column="6"/></block></then></if>

    <comment type="block" pos:line="103" pos:column="5">/*
     * Check If-Headers and existing locks for destination. Note that we
     * use depth==infinity since the target (hierarchy) will be deleted
     * before the move/copy is completed.
     *
     * Note that we are overwriting the target, which implies a DELETE, so
     * we are subject to the error/response rules as a DELETE. Namely, we
     * will return a 424 error if any of the validations fail.
     * (see dav_method_delete() for more information)
     */</comment>
    <if pos:line="113" pos:column="5">if <condition pos:line="113" pos:column="8">(<expr><operator pos:line="113" pos:column="9">(<pos:position pos:line="113" pos:column="10"/></operator><name pos:line="113" pos:column="10">err<pos:position pos:line="113" pos:column="13"/></name> <operator pos:line="113" pos:column="14">=<pos:position pos:line="113" pos:column="15"/></operator> <call><name pos:line="113" pos:column="16">dav_validate_request<pos:position pos:line="113" pos:column="36"/></name><argument_list pos:line="113" pos:column="36">(<argument><expr><name><name pos:line="113" pos:column="37">lookup<pos:position pos:line="113" pos:column="43"/></name><operator pos:line="113" pos:column="43">.<pos:position pos:line="113" pos:column="44"/></operator><name pos:line="113" pos:column="44">rnew<pos:position pos:line="113" pos:column="48"/></name></name></expr></argument>, <argument><expr><name pos:line="113" pos:column="50">binding<pos:position pos:line="113" pos:column="57"/></name></expr></argument>, <argument><expr><name pos:line="113" pos:column="59">DAV_INFINITY<pos:position pos:line="113" pos:column="71"/></name></expr></argument>, <argument><expr><name pos:line="113" pos:column="73">NULL<pos:position pos:line="113" pos:column="77"/></name></expr></argument>,
                                    <argument><expr><operator pos:line="114" pos:column="37">&amp;<pos:position pos:line="114" pos:column="42"/></operator><name pos:line="114" pos:column="38">multi_response<pos:position pos:line="114" pos:column="52"/></name></expr></argument>,
                                    <argument><expr><name pos:line="115" pos:column="37">DAV_VALIDATE_PARENT<pos:position pos:line="115" pos:column="56"/></name>
                                    <operator pos:line="116" pos:column="37">|<pos:position pos:line="116" pos:column="38"/></operator> <name pos:line="116" pos:column="39">DAV_VALIDATE_USE_424<pos:position pos:line="116" pos:column="59"/></name></expr></argument>, <argument><expr><name pos:line="116" pos:column="61">NULL<pos:position pos:line="116" pos:column="65"/></name></expr></argument>)<pos:position pos:line="116" pos:column="66"/></argument_list></call><operator pos:line="116" pos:column="66">)<pos:position pos:line="116" pos:column="67"/></operator> <operator pos:line="116" pos:column="68">!=<pos:position pos:line="116" pos:column="70"/></operator> <name pos:line="116" pos:column="71">NULL<pos:position pos:line="116" pos:column="75"/></name></expr>)<pos:position pos:line="116" pos:column="76"/></condition><then pos:line="116" pos:column="76"> <block pos:line="116" pos:column="77">{
        <expr_stmt><expr><name pos:line="117" pos:column="9">err<pos:position pos:line="117" pos:column="12"/></name> <operator pos:line="117" pos:column="13">=<pos:position pos:line="117" pos:column="14"/></operator> <call><name pos:line="117" pos:column="15">dav_push_error<pos:position pos:line="117" pos:column="29"/></name><argument_list pos:line="117" pos:column="29">(<argument><expr><name><name pos:line="117" pos:column="30">r<pos:position pos:line="117" pos:column="31"/></name><operator pos:line="117" pos:column="31">-&gt;<pos:position pos:line="117" pos:column="36"/></operator><name pos:line="117" pos:column="33">pool<pos:position pos:line="117" pos:column="37"/></name></name></expr></argument>, <argument><expr><name><name pos:line="117" pos:column="39">err<pos:position pos:line="117" pos:column="42"/></name><operator pos:line="117" pos:column="42">-&gt;<pos:position pos:line="117" pos:column="47"/></operator><name pos:line="117" pos:column="44">status<pos:position pos:line="117" pos:column="50"/></name></name></expr></argument>, <argument><expr><literal type="number" pos:line="117" pos:column="52">0<pos:position pos:line="117" pos:column="53"/></literal></expr></argument>,
                             <argument><expr><call><name pos:line="118" pos:column="30">apr_psprintf<pos:position pos:line="118" pos:column="42"/></name><argument_list pos:line="118" pos:column="42">(<argument><expr><name><name pos:line="118" pos:column="43">r<pos:position pos:line="118" pos:column="44"/></name><operator pos:line="118" pos:column="44">-&gt;<pos:position pos:line="118" pos:column="49"/></operator><name pos:line="118" pos:column="46">pool<pos:position pos:line="118" pos:column="50"/></name></name></expr></argument>,
                                          <argument><expr><literal type="string" pos:line="119" pos:column="43">"Could not BIND %s due to a "<pos:position pos:line="119" pos:column="72"/></literal>
                                          <literal type="string" pos:line="120" pos:column="43">"failed precondition on the "<pos:position pos:line="120" pos:column="72"/></literal>
                                          <literal type="string" pos:line="121" pos:column="43">"destination (e.g. locks)."<pos:position pos:line="121" pos:column="70"/></literal></expr></argument>,
                                          <argument><expr><call><name pos:line="122" pos:column="43">ap_escape_html<pos:position pos:line="122" pos:column="57"/></name><argument_list pos:line="122" pos:column="57">(<argument><expr><name><name pos:line="122" pos:column="58">r<pos:position pos:line="122" pos:column="59"/></name><operator pos:line="122" pos:column="59">-&gt;<pos:position pos:line="122" pos:column="64"/></operator><name pos:line="122" pos:column="61">pool<pos:position pos:line="122" pos:column="65"/></name></name></expr></argument>, <argument><expr><name><name pos:line="122" pos:column="67">r<pos:position pos:line="122" pos:column="68"/></name><operator pos:line="122" pos:column="68">-&gt;<pos:position pos:line="122" pos:column="73"/></operator><name pos:line="122" pos:column="70">uri<pos:position pos:line="122" pos:column="73"/></name></name></expr></argument>)<pos:position pos:line="122" pos:column="74"/></argument_list></call></expr></argument>)<pos:position pos:line="122" pos:column="75"/></argument_list></call></expr></argument>,
                             <argument><expr><name pos:line="123" pos:column="30">err<pos:position pos:line="123" pos:column="33"/></name></expr></argument>)<pos:position pos:line="123" pos:column="34"/></argument_list></call></expr>;<pos:position pos:line="123" pos:column="35"/></expr_stmt>
        <return pos:line="124" pos:column="9">return <expr><call><name pos:line="124" pos:column="16">dav_handle_err<pos:position pos:line="124" pos:column="30"/></name><argument_list pos:line="124" pos:column="30">(<argument><expr><name pos:line="124" pos:column="31">r<pos:position pos:line="124" pos:column="32"/></name></expr></argument>, <argument><expr><name pos:line="124" pos:column="34">err<pos:position pos:line="124" pos:column="37"/></name></expr></argument>, <argument><expr><name pos:line="124" pos:column="39">multi_response<pos:position pos:line="124" pos:column="53"/></name></expr></argument>)<pos:position pos:line="124" pos:column="54"/></argument_list></call></expr>;<pos:position pos:line="124" pos:column="55"/></return>
    }<pos:position pos:line="125" pos:column="6"/></block></then></if>

    <comment type="block" pos:line="127" pos:column="5">/* guard against creating circular bindings */</comment>
    <if pos:line="128" pos:column="5">if <condition pos:line="128" pos:column="8">(<expr><name><name pos:line="128" pos:column="9">resource<pos:position pos:line="128" pos:column="17"/></name><operator pos:line="128" pos:column="17">-&gt;<pos:position pos:line="128" pos:column="22"/></operator><name pos:line="128" pos:column="19">collection<pos:position pos:line="128" pos:column="29"/></name></name>
        <operator pos:line="129" pos:column="9">&amp;&amp;<pos:position pos:line="129" pos:column="19"/></operator> <call pos:line="129" pos:column="12">(<modifier pos:line="129" pos:column="13">*<pos:position pos:line="129" pos:column="14"/></modifier><name><name pos:line="129" pos:column="14">resource<pos:position pos:line="129" pos:column="22"/></name><operator pos:line="129" pos:column="22">-&gt;<pos:position pos:line="129" pos:column="27"/></operator><name pos:line="129" pos:column="24">hooks<pos:position pos:line="129" pos:column="29"/></name><operator pos:line="129" pos:column="29">-&gt;<pos:position pos:line="129" pos:column="34"/></operator><name pos:line="129" pos:column="31">is_parent_resource<pos:position pos:line="129" pos:column="49"/></name></name>)<argument_list pos:line="129" pos:column="50">(<argument><expr><name pos:line="129" pos:column="51">resource<pos:position pos:line="129" pos:column="59"/></name></expr></argument>, <argument><expr><name pos:line="129" pos:column="61">binding<pos:position pos:line="129" pos:column="68"/></name></expr></argument>)<pos:position pos:line="129" pos:column="69"/></argument_list></call></expr>)<pos:position pos:line="129" pos:column="70"/></condition><then pos:line="129" pos:column="70"> <block pos:line="129" pos:column="71">{
        <return pos:line="130" pos:column="9">return <expr><call><name pos:line="130" pos:column="16">dav_error_response<pos:position pos:line="130" pos:column="34"/></name><argument_list pos:line="130" pos:column="34">(<argument><expr><name pos:line="130" pos:column="35">r<pos:position pos:line="130" pos:column="36"/></name></expr></argument>, <argument><expr><name pos:line="130" pos:column="38">HTTP_FORBIDDEN<pos:position pos:line="130" pos:column="52"/></name></expr></argument>,
                                  <argument><expr><literal type="string" pos:line="131" pos:column="35">"Source collection contains the Destination."<pos:position pos:line="131" pos:column="80"/></literal></expr></argument>)<pos:position pos:line="131" pos:column="81"/></argument_list></call></expr>;<pos:position pos:line="131" pos:column="82"/></return>
    }<pos:position pos:line="132" pos:column="6"/></block></then></if>
    <if pos:line="133" pos:column="5">if <condition pos:line="133" pos:column="8">(<expr><name><name pos:line="133" pos:column="9">resource<pos:position pos:line="133" pos:column="17"/></name><operator pos:line="133" pos:column="17">-&gt;<pos:position pos:line="133" pos:column="22"/></operator><name pos:line="133" pos:column="19">collection<pos:position pos:line="133" pos:column="29"/></name></name>
        <operator pos:line="134" pos:column="9">&amp;&amp;<pos:position pos:line="134" pos:column="19"/></operator> <call pos:line="134" pos:column="12">(<modifier pos:line="134" pos:column="13">*<pos:position pos:line="134" pos:column="14"/></modifier><name><name pos:line="134" pos:column="14">resource<pos:position pos:line="134" pos:column="22"/></name><operator pos:line="134" pos:column="22">-&gt;<pos:position pos:line="134" pos:column="27"/></operator><name pos:line="134" pos:column="24">hooks<pos:position pos:line="134" pos:column="29"/></name><operator pos:line="134" pos:column="29">-&gt;<pos:position pos:line="134" pos:column="34"/></operator><name pos:line="134" pos:column="31">is_parent_resource<pos:position pos:line="134" pos:column="49"/></name></name>)<argument_list pos:line="134" pos:column="50">(<argument><expr><name pos:line="134" pos:column="51">binding<pos:position pos:line="134" pos:column="58"/></name></expr></argument>, <argument><expr><name pos:line="134" pos:column="60">resource<pos:position pos:line="134" pos:column="68"/></name></expr></argument>)<pos:position pos:line="134" pos:column="69"/></argument_list></call></expr>)<pos:position pos:line="134" pos:column="70"/></condition><then pos:line="134" pos:column="70"> <block pos:line="134" pos:column="71">{
        <comment type="block" pos:line="135" pos:column="9">/* The destination must exist (since it contains the source), and
         * a condition above implies Overwrite==T. Obviously, we cannot
         * delete the Destination before the BIND, as that would
         * delete the Source.
         */</comment>

        <return pos:line="141" pos:column="9">return <expr><call><name pos:line="141" pos:column="16">dav_error_response<pos:position pos:line="141" pos:column="34"/></name><argument_list pos:line="141" pos:column="34">(<argument><expr><name pos:line="141" pos:column="35">r<pos:position pos:line="141" pos:column="36"/></name></expr></argument>, <argument><expr><name pos:line="141" pos:column="38">HTTP_FORBIDDEN<pos:position pos:line="141" pos:column="52"/></name></expr></argument>,
                                  <argument><expr><literal type="string" pos:line="142" pos:column="35">"Destination collection contains the Source and "<pos:position pos:line="142" pos:column="84"/></literal>
                                  <literal type="string" pos:line="143" pos:column="35">"Overwrite has been specified."<pos:position pos:line="143" pos:column="66"/></literal></expr></argument>)<pos:position pos:line="143" pos:column="67"/></argument_list></call></expr>;<pos:position pos:line="143" pos:column="68"/></return>
    }<pos:position pos:line="144" pos:column="6"/></block></then></if>

    <comment type="block" pos:line="146" pos:column="5">/* prepare the destination collection for modification */</comment>
    <if pos:line="147" pos:column="5">if <condition pos:line="147" pos:column="8">(<expr><operator pos:line="147" pos:column="9">(<pos:position pos:line="147" pos:column="10"/></operator><name pos:line="147" pos:column="10">err<pos:position pos:line="147" pos:column="13"/></name> <operator pos:line="147" pos:column="14">=<pos:position pos:line="147" pos:column="15"/></operator> <call><name pos:line="147" pos:column="16">dav_auto_checkout<pos:position pos:line="147" pos:column="33"/></name><argument_list pos:line="147" pos:column="33">(<argument><expr><name pos:line="147" pos:column="34">r<pos:position pos:line="147" pos:column="35"/></name></expr></argument>, <argument><expr><name pos:line="147" pos:column="37">binding<pos:position pos:line="147" pos:column="44"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="147" pos:column="46">1<pos:position pos:line="147" pos:column="47"/></literal></expr></argument> <comment type="block" pos:line="147" pos:column="48">/* parent_only */</comment>,
                                 <argument><expr><operator pos:line="148" pos:column="34">&amp;<pos:position pos:line="148" pos:column="39"/></operator><name pos:line="148" pos:column="35">av_info<pos:position pos:line="148" pos:column="42"/></name></expr></argument>)<pos:position pos:line="148" pos:column="43"/></argument_list></call><operator pos:line="148" pos:column="43">)<pos:position pos:line="148" pos:column="44"/></operator> <operator pos:line="148" pos:column="45">!=<pos:position pos:line="148" pos:column="47"/></operator> <name pos:line="148" pos:column="48">NULL<pos:position pos:line="148" pos:column="52"/></name></expr>)<pos:position pos:line="148" pos:column="53"/></condition><then pos:line="148" pos:column="53"> <block pos:line="148" pos:column="54">{
        <comment type="block" pos:line="149" pos:column="9">/* could not make destination writable */</comment>
        <return pos:line="150" pos:column="9">return <expr><call><name pos:line="150" pos:column="16">dav_handle_err<pos:position pos:line="150" pos:column="30"/></name><argument_list pos:line="150" pos:column="30">(<argument><expr><name pos:line="150" pos:column="31">r<pos:position pos:line="150" pos:column="32"/></name></expr></argument>, <argument><expr><name pos:line="150" pos:column="34">err<pos:position pos:line="150" pos:column="37"/></name></expr></argument>, <argument><expr><name pos:line="150" pos:column="39">NULL<pos:position pos:line="150" pos:column="43"/></name></expr></argument>)<pos:position pos:line="150" pos:column="44"/></argument_list></call></expr>;<pos:position pos:line="150" pos:column="45"/></return>
    }<pos:position pos:line="151" pos:column="6"/></block></then></if>

    <comment type="block" pos:line="153" pos:column="5">/* If target exists, remove it first (we know Ovewrite must be TRUE).
     * Then try to bind to the resource.
     */</comment>
    <if pos:line="156" pos:column="5">if <condition pos:line="156" pos:column="8">(<expr><name><name pos:line="156" pos:column="9">binding<pos:position pos:line="156" pos:column="16"/></name><operator pos:line="156" pos:column="16">-&gt;<pos:position pos:line="156" pos:column="21"/></operator><name pos:line="156" pos:column="18">exists<pos:position pos:line="156" pos:column="24"/></name></name></expr>)<pos:position pos:line="156" pos:column="25"/></condition><then pos:line="156" pos:column="25">
        <block type="pseudo"><expr_stmt><expr><name pos:line="157" pos:column="9">err<pos:position pos:line="157" pos:column="12"/></name> <operator pos:line="157" pos:column="13">=<pos:position pos:line="157" pos:column="14"/></operator> <call pos:line="157" pos:column="15">(<modifier pos:line="157" pos:column="16">*<pos:position pos:line="157" pos:column="17"/></modifier><name><name pos:line="157" pos:column="17">resource<pos:position pos:line="157" pos:column="25"/></name><operator pos:line="157" pos:column="25">-&gt;<pos:position pos:line="157" pos:column="30"/></operator><name pos:line="157" pos:column="27">hooks<pos:position pos:line="157" pos:column="32"/></name><operator pos:line="157" pos:column="32">-&gt;<pos:position pos:line="157" pos:column="37"/></operator><name pos:line="157" pos:column="34">remove_resource<pos:position pos:line="157" pos:column="49"/></name></name>)<argument_list pos:line="157" pos:column="50">(<argument><expr><name pos:line="157" pos:column="51">binding<pos:position pos:line="157" pos:column="58"/></name></expr></argument>, <argument><expr><operator pos:line="157" pos:column="60">&amp;<pos:position pos:line="157" pos:column="65"/></operator><name pos:line="157" pos:column="61">multi_response<pos:position pos:line="157" pos:column="75"/></name></expr></argument>)<pos:position pos:line="157" pos:column="76"/></argument_list></call></expr>;<pos:position pos:line="157" pos:column="77"/></expr_stmt></block></then></if>

    <if pos:line="159" pos:column="5">if <condition pos:line="159" pos:column="8">(<expr><name pos:line="159" pos:column="9">err<pos:position pos:line="159" pos:column="12"/></name> <operator pos:line="159" pos:column="13">==<pos:position pos:line="159" pos:column="15"/></operator> <name pos:line="159" pos:column="16">NULL<pos:position pos:line="159" pos:column="20"/></name></expr>)<pos:position pos:line="159" pos:column="21"/></condition><then pos:line="159" pos:column="21"> <block pos:line="159" pos:column="22">{
        <expr_stmt><expr><name pos:line="160" pos:column="9">err<pos:position pos:line="160" pos:column="12"/></name> <operator pos:line="160" pos:column="13">=<pos:position pos:line="160" pos:column="14"/></operator> <call pos:line="160" pos:column="15">(<modifier pos:line="160" pos:column="16">*<pos:position pos:line="160" pos:column="17"/></modifier><name><name pos:line="160" pos:column="17">binding_hooks<pos:position pos:line="160" pos:column="30"/></name><operator pos:line="160" pos:column="30">-&gt;<pos:position pos:line="160" pos:column="35"/></operator><name pos:line="160" pos:column="32">bind_resource<pos:position pos:line="160" pos:column="45"/></name></name>)<argument_list pos:line="160" pos:column="46">(<argument><expr><name pos:line="160" pos:column="47">resource<pos:position pos:line="160" pos:column="55"/></name></expr></argument>, <argument><expr><name pos:line="160" pos:column="57">binding<pos:position pos:line="160" pos:column="64"/></name></expr></argument>)<pos:position pos:line="160" pos:column="65"/></argument_list></call></expr>;<pos:position pos:line="160" pos:column="66"/></expr_stmt>
    }<pos:position pos:line="161" pos:column="6"/></block></then></if>

    <comment type="block" pos:line="163" pos:column="5">/* restore parent collection states */</comment>
    <expr_stmt><expr><name pos:line="164" pos:column="5">err2<pos:position pos:line="164" pos:column="9"/></name> <operator pos:line="164" pos:column="10">=<pos:position pos:line="164" pos:column="11"/></operator> <call><name pos:line="164" pos:column="12">dav_auto_checkin<pos:position pos:line="164" pos:column="28"/></name><argument_list pos:line="164" pos:column="28">(<argument><expr><name pos:line="164" pos:column="29">r<pos:position pos:line="164" pos:column="30"/></name></expr></argument>, <argument><expr><name pos:line="164" pos:column="32">NULL<pos:position pos:line="164" pos:column="36"/></name></expr></argument>,
                            <argument><expr><name pos:line="165" pos:column="29">err<pos:position pos:line="165" pos:column="32"/></name> <operator pos:line="165" pos:column="33">!=<pos:position pos:line="165" pos:column="35"/></operator> <name pos:line="165" pos:column="36">NULL<pos:position pos:line="165" pos:column="40"/></name></expr></argument> <comment type="block" pos:line="165" pos:column="41">/* undo if error */</comment>,
                            <argument><expr><literal type="number" pos:line="166" pos:column="29">0<pos:position pos:line="166" pos:column="30"/></literal></expr></argument> <comment type="block" pos:line="166" pos:column="31">/* unlock */</comment>, <argument><expr><operator pos:line="166" pos:column="45">&amp;<pos:position pos:line="166" pos:column="50"/></operator><name pos:line="166" pos:column="46">av_info<pos:position pos:line="166" pos:column="53"/></name></expr></argument>)<pos:position pos:line="166" pos:column="54"/></argument_list></call></expr>;<pos:position pos:line="166" pos:column="55"/></expr_stmt>

    <comment type="block" pos:line="168" pos:column="5">/* check for error from remove/bind operations */</comment>
    <if pos:line="169" pos:column="5">if <condition pos:line="169" pos:column="8">(<expr><name pos:line="169" pos:column="9">err<pos:position pos:line="169" pos:column="12"/></name> <operator pos:line="169" pos:column="13">!=<pos:position pos:line="169" pos:column="15"/></operator> <name pos:line="169" pos:column="16">NULL<pos:position pos:line="169" pos:column="20"/></name></expr>)<pos:position pos:line="169" pos:column="21"/></condition><then pos:line="169" pos:column="21"> <block pos:line="169" pos:column="22">{
        <expr_stmt><expr><name pos:line="170" pos:column="9">err<pos:position pos:line="170" pos:column="12"/></name> <operator pos:line="170" pos:column="13">=<pos:position pos:line="170" pos:column="14"/></operator> <call><name pos:line="170" pos:column="15">dav_push_error<pos:position pos:line="170" pos:column="29"/></name><argument_list pos:line="170" pos:column="29">(<argument><expr><name><name pos:line="170" pos:column="30">r<pos:position pos:line="170" pos:column="31"/></name><operator pos:line="170" pos:column="31">-&gt;<pos:position pos:line="170" pos:column="36"/></operator><name pos:line="170" pos:column="33">pool<pos:position pos:line="170" pos:column="37"/></name></name></expr></argument>, <argument><expr><name><name pos:line="170" pos:column="39">err<pos:position pos:line="170" pos:column="42"/></name><operator pos:line="170" pos:column="42">-&gt;<pos:position pos:line="170" pos:column="47"/></operator><name pos:line="170" pos:column="44">status<pos:position pos:line="170" pos:column="50"/></name></name></expr></argument>, <argument><expr><literal type="number" pos:line="170" pos:column="52">0<pos:position pos:line="170" pos:column="53"/></literal></expr></argument>,
                             <argument><expr><call><name pos:line="171" pos:column="30">apr_psprintf<pos:position pos:line="171" pos:column="42"/></name><argument_list pos:line="171" pos:column="42">(<argument><expr><name><name pos:line="171" pos:column="43">r<pos:position pos:line="171" pos:column="44"/></name><operator pos:line="171" pos:column="44">-&gt;<pos:position pos:line="171" pos:column="49"/></operator><name pos:line="171" pos:column="46">pool<pos:position pos:line="171" pos:column="50"/></name></name></expr></argument>,
                                          <argument><expr><literal type="string" pos:line="172" pos:column="43">"Could not BIND %s."<pos:position pos:line="172" pos:column="63"/></literal></expr></argument>,
                                          <argument><expr><call><name pos:line="173" pos:column="43">ap_escape_html<pos:position pos:line="173" pos:column="57"/></name><argument_list pos:line="173" pos:column="57">(<argument><expr><name><name pos:line="173" pos:column="58">r<pos:position pos:line="173" pos:column="59"/></name><operator pos:line="173" pos:column="59">-&gt;<pos:position pos:line="173" pos:column="64"/></operator><name pos:line="173" pos:column="61">pool<pos:position pos:line="173" pos:column="65"/></name></name></expr></argument>, <argument><expr><name><name pos:line="173" pos:column="67">r<pos:position pos:line="173" pos:column="68"/></name><operator pos:line="173" pos:column="68">-&gt;<pos:position pos:line="173" pos:column="73"/></operator><name pos:line="173" pos:column="70">uri<pos:position pos:line="173" pos:column="73"/></name></name></expr></argument>)<pos:position pos:line="173" pos:column="74"/></argument_list></call></expr></argument>)<pos:position pos:line="173" pos:column="75"/></argument_list></call></expr></argument>,
                             <argument><expr><name pos:line="174" pos:column="30">err<pos:position pos:line="174" pos:column="33"/></name></expr></argument>)<pos:position pos:line="174" pos:column="34"/></argument_list></call></expr>;<pos:position pos:line="174" pos:column="35"/></expr_stmt>
        <return pos:line="175" pos:column="9">return <expr><call><name pos:line="175" pos:column="16">dav_handle_err<pos:position pos:line="175" pos:column="30"/></name><argument_list pos:line="175" pos:column="30">(<argument><expr><name pos:line="175" pos:column="31">r<pos:position pos:line="175" pos:column="32"/></name></expr></argument>, <argument><expr><name pos:line="175" pos:column="34">err<pos:position pos:line="175" pos:column="37"/></name></expr></argument>, <argument><expr><name pos:line="175" pos:column="39">multi_response<pos:position pos:line="175" pos:column="53"/></name></expr></argument>)<pos:position pos:line="175" pos:column="54"/></argument_list></call></expr>;<pos:position pos:line="175" pos:column="55"/></return>
    }<pos:position pos:line="176" pos:column="6"/></block></then></if>

    <comment type="block" pos:line="178" pos:column="5">/* check for errors from reverting writability */</comment>
    <if pos:line="179" pos:column="5">if <condition pos:line="179" pos:column="8">(<expr><name pos:line="179" pos:column="9">err2<pos:position pos:line="179" pos:column="13"/></name> <operator pos:line="179" pos:column="14">!=<pos:position pos:line="179" pos:column="16"/></operator> <name pos:line="179" pos:column="17">NULL<pos:position pos:line="179" pos:column="21"/></name></expr>)<pos:position pos:line="179" pos:column="22"/></condition><then pos:line="179" pos:column="22"> <block pos:line="179" pos:column="23">{
        <comment type="block" pos:line="180" pos:column="9">/* just log a warning */</comment>
        <expr_stmt><expr><name pos:line="181" pos:column="9">err<pos:position pos:line="181" pos:column="12"/></name> <operator pos:line="181" pos:column="13">=<pos:position pos:line="181" pos:column="14"/></operator> <call><name pos:line="181" pos:column="15">dav_push_error<pos:position pos:line="181" pos:column="29"/></name><argument_list pos:line="181" pos:column="29">(<argument><expr><name><name pos:line="181" pos:column="30">r<pos:position pos:line="181" pos:column="31"/></name><operator pos:line="181" pos:column="31">-&gt;<pos:position pos:line="181" pos:column="36"/></operator><name pos:line="181" pos:column="33">pool<pos:position pos:line="181" pos:column="37"/></name></name></expr></argument>, <argument><expr><name><name pos:line="181" pos:column="39">err2<pos:position pos:line="181" pos:column="43"/></name><operator pos:line="181" pos:column="43">-&gt;<pos:position pos:line="181" pos:column="48"/></operator><name pos:line="181" pos:column="45">status<pos:position pos:line="181" pos:column="51"/></name></name></expr></argument>, <argument><expr><literal type="number" pos:line="181" pos:column="53">0<pos:position pos:line="181" pos:column="54"/></literal></expr></argument>,
                             <argument><expr><literal type="string" pos:line="182" pos:column="30">"The BIND was successful, but there was a "<pos:position pos:line="182" pos:column="73"/></literal>
                             <literal type="string" pos:line="183" pos:column="30">"problem automatically checking in the "<pos:position pos:line="183" pos:column="70"/></literal>
                             <literal type="string" pos:line="184" pos:column="30">"source parent collection."<pos:position pos:line="184" pos:column="57"/></literal></expr></argument>,
                             <argument><expr><name pos:line="185" pos:column="30">err2<pos:position pos:line="185" pos:column="34"/></name></expr></argument>)<pos:position pos:line="185" pos:column="35"/></argument_list></call></expr>;<pos:position pos:line="185" pos:column="36"/></expr_stmt>
        <expr_stmt><expr><call><name pos:line="186" pos:column="9">dav_log_err<pos:position pos:line="186" pos:column="20"/></name><argument_list pos:line="186" pos:column="20">(<argument><expr><name pos:line="186" pos:column="21">r<pos:position pos:line="186" pos:column="22"/></name></expr></argument>, <argument><expr><name pos:line="186" pos:column="24">err<pos:position pos:line="186" pos:column="27"/></name></expr></argument>, <argument><expr><name pos:line="186" pos:column="29">APLOG_WARNING<pos:position pos:line="186" pos:column="42"/></name></expr></argument>)<pos:position pos:line="186" pos:column="43"/></argument_list></call></expr>;<pos:position pos:line="186" pos:column="44"/></expr_stmt>
    }<pos:position pos:line="187" pos:column="6"/></block></then></if>

    <comment type="block" pos:line="189" pos:column="5">/* return an appropriate response (HTTP_CREATED) */</comment>
    <comment type="block" pos:line="190" pos:column="5">/* ### spec doesn't say what happens when destination was replaced */</comment>
    <return pos:line="191" pos:column="5">return <expr><call><name pos:line="191" pos:column="12">dav_created<pos:position pos:line="191" pos:column="23"/></name><argument_list pos:line="191" pos:column="23">(<argument><expr><name pos:line="191" pos:column="24">r<pos:position pos:line="191" pos:column="25"/></name></expr></argument>, <argument><expr><name><name pos:line="191" pos:column="27">lookup<pos:position pos:line="191" pos:column="33"/></name><operator pos:line="191" pos:column="33">.<pos:position pos:line="191" pos:column="34"/></operator><name pos:line="191" pos:column="34">rnew<pos:position pos:line="191" pos:column="38"/></name><operator pos:line="191" pos:column="38">-&gt;<pos:position pos:line="191" pos:column="43"/></operator><name pos:line="191" pos:column="40">uri<pos:position pos:line="191" pos:column="43"/></name></name></expr></argument>, <argument><expr><literal type="string" pos:line="191" pos:column="45">"Binding"<pos:position pos:line="191" pos:column="54"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="191" pos:column="56">0<pos:position pos:line="191" pos:column="57"/></literal></expr></argument>)<pos:position pos:line="191" pos:column="58"/></argument_list></call></expr>;<pos:position pos:line="191" pos:column="59"/></return>
}<pos:position pos:line="192" pos:column="2"/></block></function></unit>

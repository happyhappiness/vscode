<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/httpd/gumtree/httpd_repos_function_540_httpd-2.4.20.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">int<pos:position pos:line="1" pos:column="11"/></name></type> <name pos:line="1" pos:column="12">match<pos:position pos:line="1" pos:column="17"/></name><parameter_list pos:line="1" pos:column="17">(<parameter><decl><type><name pos:line="1" pos:column="18">request_rec<pos:position pos:line="1" pos:column="29"/></name> <modifier pos:line="1" pos:column="30">*<pos:position pos:line="1" pos:column="31"/></modifier></type><name pos:line="1" pos:column="31">r<pos:position pos:line="1" pos:column="32"/></name></decl></parameter>, <parameter><decl><type><name pos:line="1" pos:column="34">unsigned<pos:position pos:line="1" pos:column="42"/></name> <name pos:line="1" pos:column="43">char<pos:position pos:line="1" pos:column="47"/></name> <modifier pos:line="1" pos:column="48">*<pos:position pos:line="1" pos:column="49"/></modifier></type><name pos:line="1" pos:column="49">s<pos:position pos:line="1" pos:column="50"/></name></decl></parameter>, <parameter><decl><type><name pos:line="1" pos:column="52">apr_size_t<pos:position pos:line="1" pos:column="62"/></name></type> <name pos:line="1" pos:column="63">nbytes<pos:position pos:line="1" pos:column="69"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="70"/></parameter_list>
<block pos:line="2" pos:column="1">{
<cpp:if pos:line="3" pos:column="1">#<cpp:directive pos:line="3" pos:column="2">if<pos:position pos:line="3" pos:column="4"/></cpp:directive> <expr><name pos:line="3" pos:column="5">MIME_MAGIC_DEBUG<pos:position pos:line="3" pos:column="21"/></name></expr></cpp:if>
    <decl_stmt><decl><type><name pos:line="4" pos:column="5">int<pos:position pos:line="4" pos:column="8"/></name></type> <name pos:line="4" pos:column="9">rule_counter<pos:position pos:line="4" pos:column="21"/></name> <init pos:line="4" pos:column="22">= <expr><literal type="number" pos:line="4" pos:column="24">0<pos:position pos:line="4" pos:column="25"/></literal></expr></init></decl>;<pos:position pos:line="4" pos:column="26"/></decl_stmt>
<cpp:endif pos:line="5" pos:column="1">#<cpp:directive pos:line="5" pos:column="2">endif<pos:position pos:line="5" pos:column="7"/></cpp:directive></cpp:endif>
    <decl_stmt><decl><type><name pos:line="6" pos:column="5">int<pos:position pos:line="6" pos:column="8"/></name></type> <name pos:line="6" pos:column="9">cont_level<pos:position pos:line="6" pos:column="19"/></name> <init pos:line="6" pos:column="20">= <expr><literal type="number" pos:line="6" pos:column="22">0<pos:position pos:line="6" pos:column="23"/></literal></expr></init></decl>;<pos:position pos:line="6" pos:column="24"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="7" pos:column="5">int<pos:position pos:line="7" pos:column="8"/></name></type> <name pos:line="7" pos:column="9">need_separator<pos:position pos:line="7" pos:column="23"/></name> <init pos:line="7" pos:column="24">= <expr><literal type="number" pos:line="7" pos:column="26">0<pos:position pos:line="7" pos:column="27"/></literal></expr></init></decl>;<pos:position pos:line="7" pos:column="28"/></decl_stmt>
    <decl_stmt><decl><type><name><name pos:line="8" pos:column="5">union<pos:position pos:line="8" pos:column="10"/></name> <name pos:line="8" pos:column="11">VALUETYPE<pos:position pos:line="8" pos:column="20"/></name></name></type> <name pos:line="8" pos:column="21">p<pos:position pos:line="8" pos:column="22"/></name></decl>;<pos:position pos:line="8" pos:column="23"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="9" pos:column="5">magic_server_config_rec<pos:position pos:line="9" pos:column="28"/></name> <modifier pos:line="9" pos:column="29">*<pos:position pos:line="9" pos:column="30"/></modifier></type><name pos:line="9" pos:column="30">conf<pos:position pos:line="9" pos:column="34"/></name> <init pos:line="9" pos:column="35">= <expr><operator pos:line="9" pos:column="37">(<pos:position pos:line="9" pos:column="38"/></operator><name pos:line="9" pos:column="38">magic_server_config_rec<pos:position pos:line="9" pos:column="61"/></name> <operator pos:line="9" pos:column="62">*<pos:position pos:line="9" pos:column="63"/></operator><operator pos:line="9" pos:column="63">)<pos:position pos:line="9" pos:column="64"/></operator>
                <call><name pos:line="10" pos:column="17">ap_get_module_config<pos:position pos:line="10" pos:column="37"/></name><argument_list pos:line="10" pos:column="37">(<argument><expr><name><name pos:line="10" pos:column="38">r<pos:position pos:line="10" pos:column="39"/></name><operator pos:line="10" pos:column="39">-&gt;<pos:position pos:line="10" pos:column="44"/></operator><name pos:line="10" pos:column="41">server<pos:position pos:line="10" pos:column="47"/></name><operator pos:line="10" pos:column="47">-&gt;<pos:position pos:line="10" pos:column="52"/></operator><name pos:line="10" pos:column="49">module_config<pos:position pos:line="10" pos:column="62"/></name></name></expr></argument>, <argument><expr><operator pos:line="10" pos:column="64">&amp;<pos:position pos:line="10" pos:column="69"/></operator><name pos:line="10" pos:column="65">mime_magic_module<pos:position pos:line="10" pos:column="82"/></name></expr></argument>)<pos:position pos:line="10" pos:column="83"/></argument_list></call></expr></init></decl>;<pos:position pos:line="10" pos:column="84"/></decl_stmt>
    <decl_stmt><decl><type><name><name pos:line="11" pos:column="5">struct<pos:position pos:line="11" pos:column="11"/></name> <name pos:line="11" pos:column="12">magic<pos:position pos:line="11" pos:column="17"/></name></name> <modifier pos:line="11" pos:column="18">*<pos:position pos:line="11" pos:column="19"/></modifier></type><name pos:line="11" pos:column="19">m<pos:position pos:line="11" pos:column="20"/></name></decl>;<pos:position pos:line="11" pos:column="21"/></decl_stmt>

<cpp:if pos:line="13" pos:column="1">#<cpp:directive pos:line="13" pos:column="2">if<pos:position pos:line="13" pos:column="4"/></cpp:directive> <expr><name pos:line="13" pos:column="5">MIME_MAGIC_DEBUG<pos:position pos:line="13" pos:column="21"/></name></expr></cpp:if>
    <expr_stmt><expr><call><name pos:line="14" pos:column="5">ap_log_rerror<pos:position pos:line="14" pos:column="18"/></name><argument_list pos:line="14" pos:column="18">(<argument><expr><name pos:line="14" pos:column="19">APLOG_MARK<pos:position pos:line="14" pos:column="29"/></name></expr></argument>, <argument><expr><name pos:line="14" pos:column="31">APLOG_DEBUG<pos:position pos:line="14" pos:column="42"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="14" pos:column="44">0<pos:position pos:line="14" pos:column="45"/></literal></expr></argument>, <argument><expr><name pos:line="14" pos:column="47">r<pos:position pos:line="14" pos:column="48"/></name></expr></argument>, <argument><expr><macro><name pos:line="14" pos:column="50">APLOGNO<pos:position pos:line="14" pos:column="57"/></name><argument_list pos:line="14" pos:column="57">(<argument><literal type="number" pos:line="14" pos:column="58">01529<pos:position pos:line="14" pos:column="63"/></literal></argument>)<pos:position pos:line="14" pos:column="64"/></argument_list></macro>
                <name pos:line="15" pos:column="17">MODNAME<pos:position pos:line="15" pos:column="24"/></name> <literal type="string" pos:line="15" pos:column="25">": match conf=%x file=%s m=%s m-&gt;next=%s last=%s"<pos:position pos:line="15" pos:column="77"/></literal></expr></argument>,
                <argument><expr><name pos:line="16" pos:column="17">conf<pos:position pos:line="16" pos:column="21"/></name></expr></argument>,
                <argument><expr><ternary><condition><expr><name><name pos:line="17" pos:column="17">conf<pos:position pos:line="17" pos:column="21"/></name><operator pos:line="17" pos:column="21">-&gt;<pos:position pos:line="17" pos:column="26"/></operator><name pos:line="17" pos:column="23">magicfile<pos:position pos:line="17" pos:column="32"/></name></name></expr> ?<pos:position pos:line="17" pos:column="34"/></condition><then pos:line="17" pos:column="34"> <expr><name><name pos:line="17" pos:column="35">conf<pos:position pos:line="17" pos:column="39"/></name><operator pos:line="17" pos:column="39">-&gt;<pos:position pos:line="17" pos:column="44"/></operator><name pos:line="17" pos:column="41">magicfile<pos:position pos:line="17" pos:column="50"/></name></name></expr> <pos:position pos:line="17" pos:column="51"/></then><else pos:line="17" pos:column="51">: <expr><literal type="string" pos:line="17" pos:column="53">"NULL"<pos:position pos:line="17" pos:column="59"/></literal></expr></else></ternary></expr></argument>,
                <argument><expr><ternary><condition><expr><name><name pos:line="18" pos:column="17">conf<pos:position pos:line="18" pos:column="21"/></name><operator pos:line="18" pos:column="21">-&gt;<pos:position pos:line="18" pos:column="26"/></operator><name pos:line="18" pos:column="23">magic<pos:position pos:line="18" pos:column="28"/></name></name></expr> ?<pos:position pos:line="18" pos:column="30"/></condition><then pos:line="18" pos:column="30"> <expr><literal type="string" pos:line="18" pos:column="31">"set"<pos:position pos:line="18" pos:column="36"/></literal></expr> <pos:position pos:line="18" pos:column="37"/></then><else pos:line="18" pos:column="37">: <expr><literal type="string" pos:line="18" pos:column="39">"NULL"<pos:position pos:line="18" pos:column="45"/></literal></expr></else></ternary></expr></argument>,
                <argument><expr><ternary><condition><expr><operator pos:line="19" pos:column="17">(<pos:position pos:line="19" pos:column="18"/></operator><name><name pos:line="19" pos:column="18">conf<pos:position pos:line="19" pos:column="22"/></name><operator pos:line="19" pos:column="22">-&gt;<pos:position pos:line="19" pos:column="27"/></operator><name pos:line="19" pos:column="24">magic<pos:position pos:line="19" pos:column="29"/></name></name> <operator pos:line="19" pos:column="30">&amp;&amp;<pos:position pos:line="19" pos:column="40"/></operator> <name><name pos:line="19" pos:column="33">conf<pos:position pos:line="19" pos:column="37"/></name><operator pos:line="19" pos:column="37">-&gt;<pos:position pos:line="19" pos:column="42"/></operator><name pos:line="19" pos:column="39">magic<pos:position pos:line="19" pos:column="44"/></name><operator pos:line="19" pos:column="44">-&gt;<pos:position pos:line="19" pos:column="49"/></operator><name pos:line="19" pos:column="46">next<pos:position pos:line="19" pos:column="50"/></name></name><operator pos:line="19" pos:column="50">)<pos:position pos:line="19" pos:column="51"/></operator></expr> ?<pos:position pos:line="19" pos:column="53"/></condition><then pos:line="19" pos:column="53"> <expr><literal type="string" pos:line="19" pos:column="54">"set"<pos:position pos:line="19" pos:column="59"/></literal></expr> <pos:position pos:line="19" pos:column="60"/></then><else pos:line="19" pos:column="60">: <expr><literal type="string" pos:line="19" pos:column="62">"NULL"<pos:position pos:line="19" pos:column="68"/></literal></expr></else></ternary></expr></argument>,
                <argument><expr><ternary><condition><expr><name><name pos:line="20" pos:column="17">conf<pos:position pos:line="20" pos:column="21"/></name><operator pos:line="20" pos:column="21">-&gt;<pos:position pos:line="20" pos:column="26"/></operator><name pos:line="20" pos:column="23">last<pos:position pos:line="20" pos:column="27"/></name></name></expr> ?<pos:position pos:line="20" pos:column="29"/></condition><then pos:line="20" pos:column="29"> <expr><literal type="string" pos:line="20" pos:column="30">"set"<pos:position pos:line="20" pos:column="35"/></literal></expr> <pos:position pos:line="20" pos:column="36"/></then><else pos:line="20" pos:column="36">: <expr><literal type="string" pos:line="20" pos:column="38">"NULL"<pos:position pos:line="20" pos:column="44"/></literal></expr></else></ternary></expr></argument>)<pos:position pos:line="20" pos:column="45"/></argument_list></call></expr>;<pos:position pos:line="20" pos:column="46"/></expr_stmt>
<cpp:endif pos:line="21" pos:column="1">#<cpp:directive pos:line="21" pos:column="2">endif<pos:position pos:line="21" pos:column="7"/></cpp:directive></cpp:endif>

<cpp:if pos:line="23" pos:column="1">#<cpp:directive pos:line="23" pos:column="2">if<pos:position pos:line="23" pos:column="4"/></cpp:directive> <expr><name pos:line="23" pos:column="5">MIME_MAGIC_DEBUG<pos:position pos:line="23" pos:column="21"/></name></expr></cpp:if>
    <for pos:line="24" pos:column="5">for <control pos:line="24" pos:column="9">(<init><expr><name pos:line="24" pos:column="10">m<pos:position pos:line="24" pos:column="11"/></name> <operator pos:line="24" pos:column="12">=<pos:position pos:line="24" pos:column="13"/></operator> <name><name pos:line="24" pos:column="14">conf<pos:position pos:line="24" pos:column="18"/></name><operator pos:line="24" pos:column="18">-&gt;<pos:position pos:line="24" pos:column="23"/></operator><name pos:line="24" pos:column="20">magic<pos:position pos:line="24" pos:column="25"/></name></name></expr>;<pos:position pos:line="24" pos:column="26"/></init> <condition><expr><name pos:line="24" pos:column="27">m<pos:position pos:line="24" pos:column="28"/></name></expr>;<pos:position pos:line="24" pos:column="29"/></condition> <incr><expr><name pos:line="24" pos:column="30">m<pos:position pos:line="24" pos:column="31"/></name> <operator pos:line="24" pos:column="32">=<pos:position pos:line="24" pos:column="33"/></operator> <name><name pos:line="24" pos:column="34">m<pos:position pos:line="24" pos:column="35"/></name><operator pos:line="24" pos:column="35">-&gt;<pos:position pos:line="24" pos:column="40"/></operator><name pos:line="24" pos:column="37">next<pos:position pos:line="24" pos:column="41"/></name></name></expr></incr>)<pos:position pos:line="24" pos:column="42"/></control> <block pos:line="24" pos:column="43">{
        <if pos:line="25" pos:column="9">if <condition pos:line="25" pos:column="12">(<expr><call><name pos:line="25" pos:column="13">apr_isprint<pos:position pos:line="25" pos:column="24"/></name><argument_list pos:line="25" pos:column="24">(<argument><expr><operator pos:line="25" pos:column="25">(<pos:position pos:line="25" pos:column="26"/></operator><operator pos:line="25" pos:column="26">(<pos:position pos:line="25" pos:column="27"/></operator><operator pos:line="25" pos:column="27">(<pos:position pos:line="25" pos:column="28"/></operator><name pos:line="25" pos:column="28">unsigned<pos:position pos:line="25" pos:column="36"/></name> <name pos:line="25" pos:column="37">long<pos:position pos:line="25" pos:column="41"/></name><operator pos:line="25" pos:column="41">)<pos:position pos:line="25" pos:column="42"/></operator> <name pos:line="25" pos:column="43">m<pos:position pos:line="25" pos:column="44"/></name><operator pos:line="25" pos:column="44">)<pos:position pos:line="25" pos:column="45"/></operator> <operator pos:line="25" pos:column="46">&gt;&gt;<pos:position pos:line="25" pos:column="51"/></operator> <literal type="number" pos:line="25" pos:column="49">24<pos:position pos:line="25" pos:column="51"/></literal><operator pos:line="25" pos:column="51">)<pos:position pos:line="25" pos:column="52"/></operator> <operator pos:line="25" pos:column="53">&amp;<pos:position pos:line="25" pos:column="58"/></operator> <literal type="number" pos:line="25" pos:column="55">255<pos:position pos:line="25" pos:column="58"/></literal></expr></argument>)<pos:position pos:line="25" pos:column="59"/></argument_list></call> <operator pos:line="25" pos:column="60">&amp;&amp;<pos:position pos:line="25" pos:column="70"/></operator>
            <call><name pos:line="26" pos:column="13">apr_isprint<pos:position pos:line="26" pos:column="24"/></name><argument_list pos:line="26" pos:column="24">(<argument><expr><operator pos:line="26" pos:column="25">(<pos:position pos:line="26" pos:column="26"/></operator><operator pos:line="26" pos:column="26">(<pos:position pos:line="26" pos:column="27"/></operator><operator pos:line="26" pos:column="27">(<pos:position pos:line="26" pos:column="28"/></operator><name pos:line="26" pos:column="28">unsigned<pos:position pos:line="26" pos:column="36"/></name> <name pos:line="26" pos:column="37">long<pos:position pos:line="26" pos:column="41"/></name><operator pos:line="26" pos:column="41">)<pos:position pos:line="26" pos:column="42"/></operator> <name pos:line="26" pos:column="43">m<pos:position pos:line="26" pos:column="44"/></name><operator pos:line="26" pos:column="44">)<pos:position pos:line="26" pos:column="45"/></operator> <operator pos:line="26" pos:column="46">&gt;&gt;<pos:position pos:line="26" pos:column="51"/></operator> <literal type="number" pos:line="26" pos:column="49">16<pos:position pos:line="26" pos:column="51"/></literal><operator pos:line="26" pos:column="51">)<pos:position pos:line="26" pos:column="52"/></operator> <operator pos:line="26" pos:column="53">&amp;<pos:position pos:line="26" pos:column="58"/></operator> <literal type="number" pos:line="26" pos:column="55">255<pos:position pos:line="26" pos:column="58"/></literal></expr></argument>)<pos:position pos:line="26" pos:column="59"/></argument_list></call> <operator pos:line="26" pos:column="60">&amp;&amp;<pos:position pos:line="26" pos:column="70"/></operator>
            <call><name pos:line="27" pos:column="13">apr_isprint<pos:position pos:line="27" pos:column="24"/></name><argument_list pos:line="27" pos:column="24">(<argument><expr><operator pos:line="27" pos:column="25">(<pos:position pos:line="27" pos:column="26"/></operator><operator pos:line="27" pos:column="26">(<pos:position pos:line="27" pos:column="27"/></operator><operator pos:line="27" pos:column="27">(<pos:position pos:line="27" pos:column="28"/></operator><name pos:line="27" pos:column="28">unsigned<pos:position pos:line="27" pos:column="36"/></name> <name pos:line="27" pos:column="37">long<pos:position pos:line="27" pos:column="41"/></name><operator pos:line="27" pos:column="41">)<pos:position pos:line="27" pos:column="42"/></operator> <name pos:line="27" pos:column="43">m<pos:position pos:line="27" pos:column="44"/></name><operator pos:line="27" pos:column="44">)<pos:position pos:line="27" pos:column="45"/></operator> <operator pos:line="27" pos:column="46">&gt;&gt;<pos:position pos:line="27" pos:column="51"/></operator> <literal type="number" pos:line="27" pos:column="49">8<pos:position pos:line="27" pos:column="50"/></literal><operator pos:line="27" pos:column="50">)<pos:position pos:line="27" pos:column="51"/></operator> <operator pos:line="27" pos:column="52">&amp;<pos:position pos:line="27" pos:column="57"/></operator> <literal type="number" pos:line="27" pos:column="54">255<pos:position pos:line="27" pos:column="57"/></literal></expr></argument>)<pos:position pos:line="27" pos:column="58"/></argument_list></call> <operator pos:line="27" pos:column="59">&amp;&amp;<pos:position pos:line="27" pos:column="69"/></operator>
            <call><name pos:line="28" pos:column="13">apr_isprint<pos:position pos:line="28" pos:column="24"/></name><argument_list pos:line="28" pos:column="24">(<argument><expr><operator pos:line="28" pos:column="25">(<pos:position pos:line="28" pos:column="26"/></operator><operator pos:line="28" pos:column="26">(<pos:position pos:line="28" pos:column="27"/></operator><name pos:line="28" pos:column="27">unsigned<pos:position pos:line="28" pos:column="35"/></name> <name pos:line="28" pos:column="36">long<pos:position pos:line="28" pos:column="40"/></name><operator pos:line="28" pos:column="40">)<pos:position pos:line="28" pos:column="41"/></operator> <name pos:line="28" pos:column="42">m<pos:position pos:line="28" pos:column="43"/></name><operator pos:line="28" pos:column="43">)<pos:position pos:line="28" pos:column="44"/></operator> <operator pos:line="28" pos:column="45">&amp;<pos:position pos:line="28" pos:column="50"/></operator> <literal type="number" pos:line="28" pos:column="47">255<pos:position pos:line="28" pos:column="50"/></literal></expr></argument>)<pos:position pos:line="28" pos:column="51"/></argument_list></call></expr>)<pos:position pos:line="28" pos:column="52"/></condition><then pos:line="28" pos:column="52"> <block pos:line="28" pos:column="53">{
            <expr_stmt><expr><call><name pos:line="29" pos:column="13">ap_log_rerror<pos:position pos:line="29" pos:column="26"/></name><argument_list pos:line="29" pos:column="26">(<argument><expr><name pos:line="29" pos:column="27">APLOG_MARK<pos:position pos:line="29" pos:column="37"/></name></expr></argument>, <argument><expr><name pos:line="29" pos:column="39">APLOG_DEBUG<pos:position pos:line="29" pos:column="50"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="29" pos:column="52">0<pos:position pos:line="29" pos:column="53"/></literal></expr></argument>, <argument><expr><name pos:line="29" pos:column="55">r<pos:position pos:line="29" pos:column="56"/></name></expr></argument>, <argument><expr><macro><name pos:line="29" pos:column="58">APLOGNO<pos:position pos:line="29" pos:column="65"/></name><argument_list pos:line="29" pos:column="65">(<argument><literal type="number" pos:line="29" pos:column="66">01530<pos:position pos:line="29" pos:column="71"/></literal></argument>)<pos:position pos:line="29" pos:column="72"/></argument_list></macro>
                        <name pos:line="30" pos:column="25">MODNAME<pos:position pos:line="30" pos:column="32"/></name> <literal type="string" pos:line="30" pos:column="33">": match: POINTER CLOBBERED! "<pos:position pos:line="30" pos:column="63"/></literal>
                        <literal type="string" pos:line="31" pos:column="25">"m=\"%c%c%c%c\""<pos:position pos:line="31" pos:column="41"/></literal></expr></argument>,
                        <argument><expr><operator pos:line="32" pos:column="25">(<pos:position pos:line="32" pos:column="26"/></operator><operator pos:line="32" pos:column="26">(<pos:position pos:line="32" pos:column="27"/></operator><operator pos:line="32" pos:column="27">(<pos:position pos:line="32" pos:column="28"/></operator><name pos:line="32" pos:column="28">unsigned<pos:position pos:line="32" pos:column="36"/></name> <name pos:line="32" pos:column="37">long<pos:position pos:line="32" pos:column="41"/></name><operator pos:line="32" pos:column="41">)<pos:position pos:line="32" pos:column="42"/></operator> <name pos:line="32" pos:column="43">m<pos:position pos:line="32" pos:column="44"/></name><operator pos:line="32" pos:column="44">)<pos:position pos:line="32" pos:column="45"/></operator> <operator pos:line="32" pos:column="46">&gt;&gt;<pos:position pos:line="32" pos:column="51"/></operator> <literal type="number" pos:line="32" pos:column="49">24<pos:position pos:line="32" pos:column="51"/></literal><operator pos:line="32" pos:column="51">)<pos:position pos:line="32" pos:column="52"/></operator> <operator pos:line="32" pos:column="53">&amp;<pos:position pos:line="32" pos:column="58"/></operator> <literal type="number" pos:line="32" pos:column="55">255<pos:position pos:line="32" pos:column="58"/></literal></expr></argument>,
                        <argument><expr><operator pos:line="33" pos:column="25">(<pos:position pos:line="33" pos:column="26"/></operator><operator pos:line="33" pos:column="26">(<pos:position pos:line="33" pos:column="27"/></operator><operator pos:line="33" pos:column="27">(<pos:position pos:line="33" pos:column="28"/></operator><name pos:line="33" pos:column="28">unsigned<pos:position pos:line="33" pos:column="36"/></name> <name pos:line="33" pos:column="37">long<pos:position pos:line="33" pos:column="41"/></name><operator pos:line="33" pos:column="41">)<pos:position pos:line="33" pos:column="42"/></operator> <name pos:line="33" pos:column="43">m<pos:position pos:line="33" pos:column="44"/></name><operator pos:line="33" pos:column="44">)<pos:position pos:line="33" pos:column="45"/></operator> <operator pos:line="33" pos:column="46">&gt;&gt;<pos:position pos:line="33" pos:column="51"/></operator> <literal type="number" pos:line="33" pos:column="49">16<pos:position pos:line="33" pos:column="51"/></literal><operator pos:line="33" pos:column="51">)<pos:position pos:line="33" pos:column="52"/></operator> <operator pos:line="33" pos:column="53">&amp;<pos:position pos:line="33" pos:column="58"/></operator> <literal type="number" pos:line="33" pos:column="55">255<pos:position pos:line="33" pos:column="58"/></literal></expr></argument>,
                        <argument><expr><operator pos:line="34" pos:column="25">(<pos:position pos:line="34" pos:column="26"/></operator><operator pos:line="34" pos:column="26">(<pos:position pos:line="34" pos:column="27"/></operator><operator pos:line="34" pos:column="27">(<pos:position pos:line="34" pos:column="28"/></operator><name pos:line="34" pos:column="28">unsigned<pos:position pos:line="34" pos:column="36"/></name> <name pos:line="34" pos:column="37">long<pos:position pos:line="34" pos:column="41"/></name><operator pos:line="34" pos:column="41">)<pos:position pos:line="34" pos:column="42"/></operator> <name pos:line="34" pos:column="43">m<pos:position pos:line="34" pos:column="44"/></name><operator pos:line="34" pos:column="44">)<pos:position pos:line="34" pos:column="45"/></operator> <operator pos:line="34" pos:column="46">&gt;&gt;<pos:position pos:line="34" pos:column="51"/></operator> <literal type="number" pos:line="34" pos:column="49">8<pos:position pos:line="34" pos:column="50"/></literal><operator pos:line="34" pos:column="50">)<pos:position pos:line="34" pos:column="51"/></operator> <operator pos:line="34" pos:column="52">&amp;<pos:position pos:line="34" pos:column="57"/></operator> <literal type="number" pos:line="34" pos:column="54">255<pos:position pos:line="34" pos:column="57"/></literal></expr></argument>,
                        <argument><expr><operator pos:line="35" pos:column="25">(<pos:position pos:line="35" pos:column="26"/></operator><operator pos:line="35" pos:column="26">(<pos:position pos:line="35" pos:column="27"/></operator><name pos:line="35" pos:column="27">unsigned<pos:position pos:line="35" pos:column="35"/></name> <name pos:line="35" pos:column="36">long<pos:position pos:line="35" pos:column="40"/></name><operator pos:line="35" pos:column="40">)<pos:position pos:line="35" pos:column="41"/></operator> <name pos:line="35" pos:column="42">m<pos:position pos:line="35" pos:column="43"/></name><operator pos:line="35" pos:column="43">)<pos:position pos:line="35" pos:column="44"/></operator> <operator pos:line="35" pos:column="45">&amp;<pos:position pos:line="35" pos:column="50"/></operator> <literal type="number" pos:line="35" pos:column="47">255<pos:position pos:line="35" pos:column="50"/></literal></expr></argument>)<pos:position pos:line="35" pos:column="51"/></argument_list></call></expr>;<pos:position pos:line="35" pos:column="52"/></expr_stmt>
            <break pos:line="36" pos:column="13">break;<pos:position pos:line="36" pos:column="19"/></break>
        }<pos:position pos:line="37" pos:column="10"/></block></then></if>
    }<pos:position pos:line="38" pos:column="6"/></block></for>
<cpp:endif pos:line="39" pos:column="1">#<cpp:directive pos:line="39" pos:column="2">endif<pos:position pos:line="39" pos:column="7"/></cpp:directive></cpp:endif>

    <for pos:line="41" pos:column="5">for <control pos:line="41" pos:column="9">(<init><expr><name pos:line="41" pos:column="10">m<pos:position pos:line="41" pos:column="11"/></name> <operator pos:line="41" pos:column="12">=<pos:position pos:line="41" pos:column="13"/></operator> <name><name pos:line="41" pos:column="14">conf<pos:position pos:line="41" pos:column="18"/></name><operator pos:line="41" pos:column="18">-&gt;<pos:position pos:line="41" pos:column="23"/></operator><name pos:line="41" pos:column="20">magic<pos:position pos:line="41" pos:column="25"/></name></name></expr>;<pos:position pos:line="41" pos:column="26"/></init> <condition><expr><name pos:line="41" pos:column="27">m<pos:position pos:line="41" pos:column="28"/></name></expr>;<pos:position pos:line="41" pos:column="29"/></condition> <incr><expr><name pos:line="41" pos:column="30">m<pos:position pos:line="41" pos:column="31"/></name> <operator pos:line="41" pos:column="32">=<pos:position pos:line="41" pos:column="33"/></operator> <name><name pos:line="41" pos:column="34">m<pos:position pos:line="41" pos:column="35"/></name><operator pos:line="41" pos:column="35">-&gt;<pos:position pos:line="41" pos:column="40"/></operator><name pos:line="41" pos:column="37">next<pos:position pos:line="41" pos:column="41"/></name></name></expr></incr>)<pos:position pos:line="41" pos:column="42"/></control> <block pos:line="41" pos:column="43">{
<cpp:if pos:line="42" pos:column="1">#<cpp:directive pos:line="42" pos:column="2">if<pos:position pos:line="42" pos:column="4"/></cpp:directive> <expr><name pos:line="42" pos:column="5">MIME_MAGIC_DEBUG<pos:position pos:line="42" pos:column="21"/></name></expr></cpp:if>
        <expr_stmt><expr><name pos:line="43" pos:column="9">rule_counter<pos:position pos:line="43" pos:column="21"/></name><operator pos:line="43" pos:column="21">++<pos:position pos:line="43" pos:column="23"/></operator></expr>;<pos:position pos:line="43" pos:column="24"/></expr_stmt>
        <expr_stmt><expr><call><name pos:line="44" pos:column="9">ap_log_rerror<pos:position pos:line="44" pos:column="22"/></name><argument_list pos:line="44" pos:column="22">(<argument><expr><name pos:line="44" pos:column="23">APLOG_MARK<pos:position pos:line="44" pos:column="33"/></name></expr></argument>, <argument><expr><name pos:line="44" pos:column="35">APLOG_DEBUG<pos:position pos:line="44" pos:column="46"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="44" pos:column="48">0<pos:position pos:line="44" pos:column="49"/></literal></expr></argument>, <argument><expr><name pos:line="44" pos:column="51">r<pos:position pos:line="44" pos:column="52"/></name></expr></argument>, <argument><expr><macro><name pos:line="44" pos:column="54">APLOGNO<pos:position pos:line="44" pos:column="61"/></name><argument_list pos:line="44" pos:column="61">(<argument><literal type="number" pos:line="44" pos:column="62">01531<pos:position pos:line="44" pos:column="67"/></literal></argument>)<pos:position pos:line="44" pos:column="68"/></argument_list></macro>
                    <name pos:line="45" pos:column="21">MODNAME<pos:position pos:line="45" pos:column="28"/></name> <literal type="string" pos:line="45" pos:column="29">": line=%d desc=%s"<pos:position pos:line="45" pos:column="48"/></literal></expr></argument>, <argument><expr><name><name pos:line="45" pos:column="50">m<pos:position pos:line="45" pos:column="51"/></name><operator pos:line="45" pos:column="51">-&gt;<pos:position pos:line="45" pos:column="56"/></operator><name pos:line="45" pos:column="53">lineno<pos:position pos:line="45" pos:column="59"/></name></name></expr></argument>, <argument><expr><name><name pos:line="45" pos:column="61">m<pos:position pos:line="45" pos:column="62"/></name><operator pos:line="45" pos:column="62">-&gt;<pos:position pos:line="45" pos:column="67"/></operator><name pos:line="45" pos:column="64">desc<pos:position pos:line="45" pos:column="68"/></name></name></expr></argument>)<pos:position pos:line="45" pos:column="69"/></argument_list></call></expr>;<pos:position pos:line="45" pos:column="70"/></expr_stmt>
<cpp:endif pos:line="46" pos:column="1">#<cpp:directive pos:line="46" pos:column="2">endif<pos:position pos:line="46" pos:column="7"/></cpp:directive></cpp:endif>

        <comment type="block" pos:line="48" pos:column="9">/* check if main entry matches */</comment>
        <if pos:line="49" pos:column="9">if <condition pos:line="49" pos:column="12">(<expr><operator pos:line="49" pos:column="13">!<pos:position pos:line="49" pos:column="14"/></operator><call><name pos:line="49" pos:column="14">mget<pos:position pos:line="49" pos:column="18"/></name><argument_list pos:line="49" pos:column="18">(<argument><expr><name pos:line="49" pos:column="19">r<pos:position pos:line="49" pos:column="20"/></name></expr></argument>, <argument><expr><operator pos:line="49" pos:column="22">&amp;<pos:position pos:line="49" pos:column="27"/></operator><name pos:line="49" pos:column="23">p<pos:position pos:line="49" pos:column="24"/></name></expr></argument>, <argument><expr><name pos:line="49" pos:column="26">s<pos:position pos:line="49" pos:column="27"/></name></expr></argument>, <argument><expr><name pos:line="49" pos:column="29">m<pos:position pos:line="49" pos:column="30"/></name></expr></argument>, <argument><expr><name pos:line="49" pos:column="32">nbytes<pos:position pos:line="49" pos:column="38"/></name></expr></argument>)<pos:position pos:line="49" pos:column="39"/></argument_list></call> <operator pos:line="49" pos:column="40">||<pos:position pos:line="49" pos:column="42"/></operator>
            <operator pos:line="50" pos:column="13">!<pos:position pos:line="50" pos:column="14"/></operator><call><name pos:line="50" pos:column="14">mcheck<pos:position pos:line="50" pos:column="20"/></name><argument_list pos:line="50" pos:column="20">(<argument><expr><name pos:line="50" pos:column="21">r<pos:position pos:line="50" pos:column="22"/></name></expr></argument>, <argument><expr><operator pos:line="50" pos:column="24">&amp;<pos:position pos:line="50" pos:column="29"/></operator><name pos:line="50" pos:column="25">p<pos:position pos:line="50" pos:column="26"/></name></expr></argument>, <argument><expr><name pos:line="50" pos:column="28">m<pos:position pos:line="50" pos:column="29"/></name></expr></argument>)<pos:position pos:line="50" pos:column="30"/></argument_list></call></expr>)<pos:position pos:line="50" pos:column="31"/></condition><then pos:line="50" pos:column="31"> <block pos:line="50" pos:column="32">{
            <decl_stmt><decl><type><name><name pos:line="51" pos:column="13">struct<pos:position pos:line="51" pos:column="19"/></name> <name pos:line="51" pos:column="20">magic<pos:position pos:line="51" pos:column="25"/></name></name> <modifier pos:line="51" pos:column="26">*<pos:position pos:line="51" pos:column="27"/></modifier></type><name pos:line="51" pos:column="27">m_cont<pos:position pos:line="51" pos:column="33"/></name></decl>;<pos:position pos:line="51" pos:column="34"/></decl_stmt>

            <comment type="block" pos:line="53" pos:column="13">/*
             * main entry didn't match, flush its continuations
             */</comment>
            <if pos:line="56" pos:column="13">if <condition pos:line="56" pos:column="16">(<expr><operator pos:line="56" pos:column="17">!<pos:position pos:line="56" pos:column="18"/></operator><name><name pos:line="56" pos:column="18">m<pos:position pos:line="56" pos:column="19"/></name><operator pos:line="56" pos:column="19">-&gt;<pos:position pos:line="56" pos:column="24"/></operator><name pos:line="56" pos:column="21">next<pos:position pos:line="56" pos:column="25"/></name></name> <operator pos:line="56" pos:column="26">||<pos:position pos:line="56" pos:column="28"/></operator> <operator pos:line="56" pos:column="29">(<pos:position pos:line="56" pos:column="30"/></operator><name><name pos:line="56" pos:column="30">m<pos:position pos:line="56" pos:column="31"/></name><operator pos:line="56" pos:column="31">-&gt;<pos:position pos:line="56" pos:column="36"/></operator><name pos:line="56" pos:column="33">next<pos:position pos:line="56" pos:column="37"/></name><operator pos:line="56" pos:column="37">-&gt;<pos:position pos:line="56" pos:column="42"/></operator><name pos:line="56" pos:column="39">cont_level<pos:position pos:line="56" pos:column="49"/></name></name> <operator pos:line="56" pos:column="50">==<pos:position pos:line="56" pos:column="52"/></operator> <literal type="number" pos:line="56" pos:column="53">0<pos:position pos:line="56" pos:column="54"/></literal><operator pos:line="56" pos:column="54">)<pos:position pos:line="56" pos:column="55"/></operator></expr>)<pos:position pos:line="56" pos:column="56"/></condition><then pos:line="56" pos:column="56"> <block pos:line="56" pos:column="57">{
                <continue pos:line="57" pos:column="17">continue;<pos:position pos:line="57" pos:column="26"/></continue>
            }<pos:position pos:line="58" pos:column="14"/></block></then></if>

            <expr_stmt><expr><name pos:line="60" pos:column="13">m_cont<pos:position pos:line="60" pos:column="19"/></name> <operator pos:line="60" pos:column="20">=<pos:position pos:line="60" pos:column="21"/></operator> <name><name pos:line="60" pos:column="22">m<pos:position pos:line="60" pos:column="23"/></name><operator pos:line="60" pos:column="23">-&gt;<pos:position pos:line="60" pos:column="28"/></operator><name pos:line="60" pos:column="25">next<pos:position pos:line="60" pos:column="29"/></name></name></expr>;<pos:position pos:line="60" pos:column="30"/></expr_stmt>
            <while pos:line="61" pos:column="13">while <condition pos:line="61" pos:column="19">(<expr><name pos:line="61" pos:column="20">m_cont<pos:position pos:line="61" pos:column="26"/></name> <operator pos:line="61" pos:column="27">&amp;&amp;<pos:position pos:line="61" pos:column="37"/></operator> <operator pos:line="61" pos:column="30">(<pos:position pos:line="61" pos:column="31"/></operator><name><name pos:line="61" pos:column="31">m_cont<pos:position pos:line="61" pos:column="37"/></name><operator pos:line="61" pos:column="37">-&gt;<pos:position pos:line="61" pos:column="42"/></operator><name pos:line="61" pos:column="39">cont_level<pos:position pos:line="61" pos:column="49"/></name></name> <operator pos:line="61" pos:column="50">!=<pos:position pos:line="61" pos:column="52"/></operator> <literal type="number" pos:line="61" pos:column="53">0<pos:position pos:line="61" pos:column="54"/></literal><operator pos:line="61" pos:column="54">)<pos:position pos:line="61" pos:column="55"/></operator></expr>)<pos:position pos:line="61" pos:column="56"/></condition> <block pos:line="61" pos:column="57">{
<cpp:if pos:line="62" pos:column="1">#<cpp:directive pos:line="62" pos:column="2">if<pos:position pos:line="62" pos:column="4"/></cpp:directive> <expr><name pos:line="62" pos:column="5">MIME_MAGIC_DEBUG<pos:position pos:line="62" pos:column="21"/></name></expr></cpp:if>
                <expr_stmt><expr><name pos:line="63" pos:column="17">rule_counter<pos:position pos:line="63" pos:column="29"/></name><operator pos:line="63" pos:column="29">++<pos:position pos:line="63" pos:column="31"/></operator></expr>;<pos:position pos:line="63" pos:column="32"/></expr_stmt>
                <expr_stmt><expr><call><name pos:line="64" pos:column="17">ap_log_rerror<pos:position pos:line="64" pos:column="30"/></name><argument_list pos:line="64" pos:column="30">(<argument><expr><name pos:line="64" pos:column="31">APLOG_MARK<pos:position pos:line="64" pos:column="41"/></name></expr></argument>, <argument><expr><name pos:line="64" pos:column="43">APLOG_DEBUG<pos:position pos:line="64" pos:column="54"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="64" pos:column="56">0<pos:position pos:line="64" pos:column="57"/></literal></expr></argument>, <argument><expr><name pos:line="64" pos:column="59">r<pos:position pos:line="64" pos:column="60"/></name></expr></argument>, <argument><expr><macro><name pos:line="64" pos:column="62">APLOGNO<pos:position pos:line="64" pos:column="69"/></name><argument_list pos:line="64" pos:column="69">(<argument><literal type="number" pos:line="64" pos:column="70">01532<pos:position pos:line="64" pos:column="75"/></literal></argument>)<pos:position pos:line="64" pos:column="76"/></argument_list></macro>
                        <name pos:line="65" pos:column="25">MODNAME<pos:position pos:line="65" pos:column="32"/></name> <literal type="string" pos:line="65" pos:column="33">": line=%d mc=%x mc-&gt;next=%x cont=%d desc=%s"<pos:position pos:line="65" pos:column="81"/></literal></expr></argument>,
                            <argument><expr><name><name pos:line="66" pos:column="29">m_cont<pos:position pos:line="66" pos:column="35"/></name><operator pos:line="66" pos:column="35">-&gt;<pos:position pos:line="66" pos:column="40"/></operator><name pos:line="66" pos:column="37">lineno<pos:position pos:line="66" pos:column="43"/></name></name></expr></argument>, <argument><expr><name pos:line="66" pos:column="45">m_cont<pos:position pos:line="66" pos:column="51"/></name></expr></argument>,
                            <argument><expr><name><name pos:line="67" pos:column="29">m_cont<pos:position pos:line="67" pos:column="35"/></name><operator pos:line="67" pos:column="35">-&gt;<pos:position pos:line="67" pos:column="40"/></operator><name pos:line="67" pos:column="37">next<pos:position pos:line="67" pos:column="41"/></name></name></expr></argument>, <argument><expr><name><name pos:line="67" pos:column="43">m_cont<pos:position pos:line="67" pos:column="49"/></name><operator pos:line="67" pos:column="49">-&gt;<pos:position pos:line="67" pos:column="54"/></operator><name pos:line="67" pos:column="51">cont_level<pos:position pos:line="67" pos:column="61"/></name></name></expr></argument>,
                            <argument><expr><name><name pos:line="68" pos:column="29">m_cont<pos:position pos:line="68" pos:column="35"/></name><operator pos:line="68" pos:column="35">-&gt;<pos:position pos:line="68" pos:column="40"/></operator><name pos:line="68" pos:column="37">desc<pos:position pos:line="68" pos:column="41"/></name></name></expr></argument>)<pos:position pos:line="68" pos:column="42"/></argument_list></call></expr>;<pos:position pos:line="68" pos:column="43"/></expr_stmt>
<cpp:endif pos:line="69" pos:column="1">#<cpp:directive pos:line="69" pos:column="2">endif<pos:position pos:line="69" pos:column="7"/></cpp:directive></cpp:endif>
                <comment type="block" pos:line="70" pos:column="17">/*
                 * this trick allows us to keep *m in sync when the continue
                 * advances the pointer
                 */</comment>
                <expr_stmt><expr><name pos:line="74" pos:column="17">m<pos:position pos:line="74" pos:column="18"/></name> <operator pos:line="74" pos:column="19">=<pos:position pos:line="74" pos:column="20"/></operator> <name pos:line="74" pos:column="21">m_cont<pos:position pos:line="74" pos:column="27"/></name></expr>;<pos:position pos:line="74" pos:column="28"/></expr_stmt>
                <expr_stmt><expr><name pos:line="75" pos:column="17">m_cont<pos:position pos:line="75" pos:column="23"/></name> <operator pos:line="75" pos:column="24">=<pos:position pos:line="75" pos:column="25"/></operator> <name><name pos:line="75" pos:column="26">m_cont<pos:position pos:line="75" pos:column="32"/></name><operator pos:line="75" pos:column="32">-&gt;<pos:position pos:line="75" pos:column="37"/></operator><name pos:line="75" pos:column="34">next<pos:position pos:line="75" pos:column="38"/></name></name></expr>;<pos:position pos:line="75" pos:column="39"/></expr_stmt>
            }<pos:position pos:line="76" pos:column="14"/></block></while>
            <continue pos:line="77" pos:column="13">continue;<pos:position pos:line="77" pos:column="22"/></continue>
        }<pos:position pos:line="78" pos:column="10"/></block></then></if>

        <comment type="block" pos:line="80" pos:column="9">/* if we get here, the main entry rule was a match */</comment>
        <comment type="block" pos:line="81" pos:column="9">/* this will be the last run through the loop */</comment>
<cpp:if pos:line="82" pos:column="1">#<cpp:directive pos:line="82" pos:column="2">if<pos:position pos:line="82" pos:column="4"/></cpp:directive> <expr><name pos:line="82" pos:column="5">MIME_MAGIC_DEBUG<pos:position pos:line="82" pos:column="21"/></name></expr></cpp:if>
        <expr_stmt><expr><call><name pos:line="83" pos:column="9">ap_log_rerror<pos:position pos:line="83" pos:column="22"/></name><argument_list pos:line="83" pos:column="22">(<argument><expr><name pos:line="83" pos:column="23">APLOG_MARK<pos:position pos:line="83" pos:column="33"/></name></expr></argument>, <argument><expr><name pos:line="83" pos:column="35">APLOG_DEBUG<pos:position pos:line="83" pos:column="46"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="83" pos:column="48">0<pos:position pos:line="83" pos:column="49"/></literal></expr></argument>, <argument><expr><name pos:line="83" pos:column="51">r<pos:position pos:line="83" pos:column="52"/></name></expr></argument>, <argument><expr><macro><name pos:line="83" pos:column="54">APLOGNO<pos:position pos:line="83" pos:column="61"/></name><argument_list pos:line="83" pos:column="61">(<argument><literal type="number" pos:line="83" pos:column="62">01533<pos:position pos:line="83" pos:column="67"/></literal></argument>)<pos:position pos:line="83" pos:column="68"/></argument_list></macro>
                    <name pos:line="84" pos:column="21">MODNAME<pos:position pos:line="84" pos:column="28"/></name> <literal type="string" pos:line="84" pos:column="29">": rule matched, line=%d type=%d %s"<pos:position pos:line="84" pos:column="65"/></literal></expr></argument>,
                    <argument><expr><name><name pos:line="85" pos:column="21">m<pos:position pos:line="85" pos:column="22"/></name><operator pos:line="85" pos:column="22">-&gt;<pos:position pos:line="85" pos:column="27"/></operator><name pos:line="85" pos:column="24">lineno<pos:position pos:line="85" pos:column="30"/></name></name></expr></argument>, <argument><expr><name><name pos:line="85" pos:column="32">m<pos:position pos:line="85" pos:column="33"/></name><operator pos:line="85" pos:column="33">-&gt;<pos:position pos:line="85" pos:column="38"/></operator><name pos:line="85" pos:column="35">type<pos:position pos:line="85" pos:column="39"/></name></name></expr></argument>,
                    <argument><expr><ternary><condition><expr><operator pos:line="86" pos:column="21">(<pos:position pos:line="86" pos:column="22"/></operator><name><name pos:line="86" pos:column="22">m<pos:position pos:line="86" pos:column="23"/></name><operator pos:line="86" pos:column="23">-&gt;<pos:position pos:line="86" pos:column="28"/></operator><name pos:line="86" pos:column="25">type<pos:position pos:line="86" pos:column="29"/></name></name> <operator pos:line="86" pos:column="30">==<pos:position pos:line="86" pos:column="32"/></operator> <name pos:line="86" pos:column="33">STRING<pos:position pos:line="86" pos:column="39"/></name><operator pos:line="86" pos:column="39">)<pos:position pos:line="86" pos:column="40"/></operator></expr> ?<pos:position pos:line="86" pos:column="42"/></condition><then pos:line="86" pos:column="42"> <expr><name><name pos:line="86" pos:column="43">m<pos:position pos:line="86" pos:column="44"/></name><operator pos:line="86" pos:column="44">-&gt;<pos:position pos:line="86" pos:column="49"/></operator><name pos:line="86" pos:column="46">value<pos:position pos:line="86" pos:column="51"/></name><operator pos:line="86" pos:column="51">.<pos:position pos:line="86" pos:column="52"/></operator><name pos:line="86" pos:column="52">s<pos:position pos:line="86" pos:column="53"/></name></name></expr> <pos:position pos:line="86" pos:column="54"/></then><else pos:line="86" pos:column="54">: <expr><literal type="string" pos:line="86" pos:column="56">""<pos:position pos:line="86" pos:column="58"/></literal></expr></else></ternary></expr></argument>)<pos:position pos:line="86" pos:column="59"/></argument_list></call></expr>;<pos:position pos:line="86" pos:column="60"/></expr_stmt>
<cpp:endif pos:line="87" pos:column="1">#<cpp:directive pos:line="87" pos:column="2">endif<pos:position pos:line="87" pos:column="7"/></cpp:directive></cpp:endif>

        <comment type="block" pos:line="89" pos:column="9">/* print the match */</comment>
        <expr_stmt><expr><call><name pos:line="90" pos:column="9">mprint<pos:position pos:line="90" pos:column="15"/></name><argument_list pos:line="90" pos:column="15">(<argument><expr><name pos:line="90" pos:column="16">r<pos:position pos:line="90" pos:column="17"/></name></expr></argument>, <argument><expr><operator pos:line="90" pos:column="19">&amp;<pos:position pos:line="90" pos:column="24"/></operator><name pos:line="90" pos:column="20">p<pos:position pos:line="90" pos:column="21"/></name></expr></argument>, <argument><expr><name pos:line="90" pos:column="23">m<pos:position pos:line="90" pos:column="24"/></name></expr></argument>)<pos:position pos:line="90" pos:column="25"/></argument_list></call></expr>;<pos:position pos:line="90" pos:column="26"/></expr_stmt>

        <comment type="block" pos:line="92" pos:column="9">/*
         * If we printed something, we'll need to print a blank before we
         * print something else.
         */</comment>
        <if pos:line="96" pos:column="9">if <condition pos:line="96" pos:column="12">(<expr><name><name pos:line="96" pos:column="13">m<pos:position pos:line="96" pos:column="14"/></name><operator pos:line="96" pos:column="14">-&gt;<pos:position pos:line="96" pos:column="19"/></operator><name pos:line="96" pos:column="16">desc<pos:position pos:line="96" pos:column="20"/></name><index pos:line="96" pos:column="20">[<expr><literal type="number" pos:line="96" pos:column="21">0<pos:position pos:line="96" pos:column="22"/></literal></expr>]<pos:position pos:line="96" pos:column="23"/></index></name></expr>)<pos:position pos:line="96" pos:column="24"/></condition><then pos:line="96" pos:column="24">
            <block type="pseudo"><expr_stmt><expr><name pos:line="97" pos:column="13">need_separator<pos:position pos:line="97" pos:column="27"/></name> <operator pos:line="97" pos:column="28">=<pos:position pos:line="97" pos:column="29"/></operator> <literal type="number" pos:line="97" pos:column="30">1<pos:position pos:line="97" pos:column="31"/></literal></expr>;<pos:position pos:line="97" pos:column="32"/></expr_stmt></block></then></if>
        <comment type="block" pos:line="98" pos:column="9">/* and any continuations that match */</comment>
        <expr_stmt><expr><name pos:line="99" pos:column="9">cont_level<pos:position pos:line="99" pos:column="19"/></name><operator pos:line="99" pos:column="19">++<pos:position pos:line="99" pos:column="21"/></operator></expr>;<pos:position pos:line="99" pos:column="22"/></expr_stmt>
        <comment type="block" pos:line="100" pos:column="9">/*
         * while (m &amp;&amp; m-&gt;next &amp;&amp; m-&gt;next-&gt;cont_level != 0 &amp;&amp; ( m = m-&gt;next
         * ))
         */</comment>
        <expr_stmt><expr><name pos:line="104" pos:column="9">m<pos:position pos:line="104" pos:column="10"/></name> <operator pos:line="104" pos:column="11">=<pos:position pos:line="104" pos:column="12"/></operator> <name><name pos:line="104" pos:column="13">m<pos:position pos:line="104" pos:column="14"/></name><operator pos:line="104" pos:column="14">-&gt;<pos:position pos:line="104" pos:column="19"/></operator><name pos:line="104" pos:column="16">next<pos:position pos:line="104" pos:column="20"/></name></name></expr>;<pos:position pos:line="104" pos:column="21"/></expr_stmt>
        <while pos:line="105" pos:column="9">while <condition pos:line="105" pos:column="15">(<expr><name pos:line="105" pos:column="16">m<pos:position pos:line="105" pos:column="17"/></name> <operator pos:line="105" pos:column="18">&amp;&amp;<pos:position pos:line="105" pos:column="28"/></operator> <operator pos:line="105" pos:column="21">(<pos:position pos:line="105" pos:column="22"/></operator><name><name pos:line="105" pos:column="22">m<pos:position pos:line="105" pos:column="23"/></name><operator pos:line="105" pos:column="23">-&gt;<pos:position pos:line="105" pos:column="28"/></operator><name pos:line="105" pos:column="25">cont_level<pos:position pos:line="105" pos:column="35"/></name></name> <operator pos:line="105" pos:column="36">!=<pos:position pos:line="105" pos:column="38"/></operator> <literal type="number" pos:line="105" pos:column="39">0<pos:position pos:line="105" pos:column="40"/></literal><operator pos:line="105" pos:column="40">)<pos:position pos:line="105" pos:column="41"/></operator></expr>)<pos:position pos:line="105" pos:column="42"/></condition> <block pos:line="105" pos:column="43">{
<cpp:if pos:line="106" pos:column="1">#<cpp:directive pos:line="106" pos:column="2">if<pos:position pos:line="106" pos:column="4"/></cpp:directive> <expr><name pos:line="106" pos:column="5">MIME_MAGIC_DEBUG<pos:position pos:line="106" pos:column="21"/></name></expr></cpp:if>
            <expr_stmt><expr><call><name pos:line="107" pos:column="13">ap_log_rerror<pos:position pos:line="107" pos:column="26"/></name><argument_list pos:line="107" pos:column="26">(<argument><expr><name pos:line="107" pos:column="27">APLOG_MARK<pos:position pos:line="107" pos:column="37"/></name></expr></argument>, <argument><expr><name pos:line="107" pos:column="39">APLOG_DEBUG<pos:position pos:line="107" pos:column="50"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="107" pos:column="52">0<pos:position pos:line="107" pos:column="53"/></literal></expr></argument>, <argument><expr><name pos:line="107" pos:column="55">r<pos:position pos:line="107" pos:column="56"/></name></expr></argument>, <argument><expr><macro><name pos:line="107" pos:column="58">APLOGNO<pos:position pos:line="107" pos:column="65"/></name><argument_list pos:line="107" pos:column="65">(<argument><literal type="number" pos:line="107" pos:column="66">01534<pos:position pos:line="107" pos:column="71"/></literal></argument>)<pos:position pos:line="107" pos:column="72"/></argument_list></macro>
                        <name pos:line="108" pos:column="25">MODNAME<pos:position pos:line="108" pos:column="32"/></name> <literal type="string" pos:line="108" pos:column="33">": match line=%d cont=%d type=%d %s"<pos:position pos:line="108" pos:column="69"/></literal></expr></argument>,
                        <argument><expr><name><name pos:line="109" pos:column="25">m<pos:position pos:line="109" pos:column="26"/></name><operator pos:line="109" pos:column="26">-&gt;<pos:position pos:line="109" pos:column="31"/></operator><name pos:line="109" pos:column="28">lineno<pos:position pos:line="109" pos:column="34"/></name></name></expr></argument>, <argument><expr><name><name pos:line="109" pos:column="36">m<pos:position pos:line="109" pos:column="37"/></name><operator pos:line="109" pos:column="37">-&gt;<pos:position pos:line="109" pos:column="42"/></operator><name pos:line="109" pos:column="39">cont_level<pos:position pos:line="109" pos:column="49"/></name></name></expr></argument>, <argument><expr><name><name pos:line="109" pos:column="51">m<pos:position pos:line="109" pos:column="52"/></name><operator pos:line="109" pos:column="52">-&gt;<pos:position pos:line="109" pos:column="57"/></operator><name pos:line="109" pos:column="54">type<pos:position pos:line="109" pos:column="58"/></name></name></expr></argument>,
                        <argument><expr><ternary><condition><expr><operator pos:line="110" pos:column="25">(<pos:position pos:line="110" pos:column="26"/></operator><name><name pos:line="110" pos:column="26">m<pos:position pos:line="110" pos:column="27"/></name><operator pos:line="110" pos:column="27">-&gt;<pos:position pos:line="110" pos:column="32"/></operator><name pos:line="110" pos:column="29">type<pos:position pos:line="110" pos:column="33"/></name></name> <operator pos:line="110" pos:column="34">==<pos:position pos:line="110" pos:column="36"/></operator> <name pos:line="110" pos:column="37">STRING<pos:position pos:line="110" pos:column="43"/></name><operator pos:line="110" pos:column="43">)<pos:position pos:line="110" pos:column="44"/></operator></expr> ?<pos:position pos:line="110" pos:column="46"/></condition><then pos:line="110" pos:column="46"> <expr><name><name pos:line="110" pos:column="47">m<pos:position pos:line="110" pos:column="48"/></name><operator pos:line="110" pos:column="48">-&gt;<pos:position pos:line="110" pos:column="53"/></operator><name pos:line="110" pos:column="50">value<pos:position pos:line="110" pos:column="55"/></name><operator pos:line="110" pos:column="55">.<pos:position pos:line="110" pos:column="56"/></operator><name pos:line="110" pos:column="56">s<pos:position pos:line="110" pos:column="57"/></name></name></expr> <pos:position pos:line="110" pos:column="58"/></then><else pos:line="110" pos:column="58">: <expr><literal type="string" pos:line="110" pos:column="60">""<pos:position pos:line="110" pos:column="62"/></literal></expr></else></ternary></expr></argument>)<pos:position pos:line="110" pos:column="63"/></argument_list></call></expr>;<pos:position pos:line="110" pos:column="64"/></expr_stmt>
<cpp:endif pos:line="111" pos:column="1">#<cpp:directive pos:line="111" pos:column="2">endif<pos:position pos:line="111" pos:column="7"/></cpp:directive></cpp:endif>
            <if pos:line="112" pos:column="13">if <condition pos:line="112" pos:column="16">(<expr><name pos:line="112" pos:column="17">cont_level<pos:position pos:line="112" pos:column="27"/></name> <operator pos:line="112" pos:column="28">&gt;=<pos:position pos:line="112" pos:column="33"/></operator> <name><name pos:line="112" pos:column="31">m<pos:position pos:line="112" pos:column="32"/></name><operator pos:line="112" pos:column="32">-&gt;<pos:position pos:line="112" pos:column="37"/></operator><name pos:line="112" pos:column="34">cont_level<pos:position pos:line="112" pos:column="44"/></name></name></expr>)<pos:position pos:line="112" pos:column="45"/></condition><then pos:line="112" pos:column="45"> <block pos:line="112" pos:column="46">{
                <if pos:line="113" pos:column="17">if <condition pos:line="113" pos:column="20">(<expr><name pos:line="113" pos:column="21">cont_level<pos:position pos:line="113" pos:column="31"/></name> <operator pos:line="113" pos:column="32">&gt;<pos:position pos:line="113" pos:column="36"/></operator> <name><name pos:line="113" pos:column="34">m<pos:position pos:line="113" pos:column="35"/></name><operator pos:line="113" pos:column="35">-&gt;<pos:position pos:line="113" pos:column="40"/></operator><name pos:line="113" pos:column="37">cont_level<pos:position pos:line="113" pos:column="47"/></name></name></expr>)<pos:position pos:line="113" pos:column="48"/></condition><then pos:line="113" pos:column="48"> <block pos:line="113" pos:column="49">{
                    <comment type="block" pos:line="114" pos:column="21">/*
                     * We're at the end of the level "cont_level"
                     * continuations.
                     */</comment>
                    <expr_stmt><expr><name pos:line="118" pos:column="21">cont_level<pos:position pos:line="118" pos:column="31"/></name> <operator pos:line="118" pos:column="32">=<pos:position pos:line="118" pos:column="33"/></operator> <name><name pos:line="118" pos:column="34">m<pos:position pos:line="118" pos:column="35"/></name><operator pos:line="118" pos:column="35">-&gt;<pos:position pos:line="118" pos:column="40"/></operator><name pos:line="118" pos:column="37">cont_level<pos:position pos:line="118" pos:column="47"/></name></name></expr>;<pos:position pos:line="118" pos:column="48"/></expr_stmt>
                }<pos:position pos:line="119" pos:column="18"/></block></then></if>
                <if pos:line="120" pos:column="17">if <condition pos:line="120" pos:column="20">(<expr><call><name pos:line="120" pos:column="21">mget<pos:position pos:line="120" pos:column="25"/></name><argument_list pos:line="120" pos:column="25">(<argument><expr><name pos:line="120" pos:column="26">r<pos:position pos:line="120" pos:column="27"/></name></expr></argument>, <argument><expr><operator pos:line="120" pos:column="29">&amp;<pos:position pos:line="120" pos:column="34"/></operator><name pos:line="120" pos:column="30">p<pos:position pos:line="120" pos:column="31"/></name></expr></argument>, <argument><expr><name pos:line="120" pos:column="33">s<pos:position pos:line="120" pos:column="34"/></name></expr></argument>, <argument><expr><name pos:line="120" pos:column="36">m<pos:position pos:line="120" pos:column="37"/></name></expr></argument>, <argument><expr><name pos:line="120" pos:column="39">nbytes<pos:position pos:line="120" pos:column="45"/></name></expr></argument>)<pos:position pos:line="120" pos:column="46"/></argument_list></call> <operator pos:line="120" pos:column="47">&amp;&amp;<pos:position pos:line="120" pos:column="57"/></operator>
                    <call><name pos:line="121" pos:column="21">mcheck<pos:position pos:line="121" pos:column="27"/></name><argument_list pos:line="121" pos:column="27">(<argument><expr><name pos:line="121" pos:column="28">r<pos:position pos:line="121" pos:column="29"/></name></expr></argument>, <argument><expr><operator pos:line="121" pos:column="31">&amp;<pos:position pos:line="121" pos:column="36"/></operator><name pos:line="121" pos:column="32">p<pos:position pos:line="121" pos:column="33"/></name></expr></argument>, <argument><expr><name pos:line="121" pos:column="35">m<pos:position pos:line="121" pos:column="36"/></name></expr></argument>)<pos:position pos:line="121" pos:column="37"/></argument_list></call></expr>)<pos:position pos:line="121" pos:column="38"/></condition><then pos:line="121" pos:column="38"> <block pos:line="121" pos:column="39">{
                    <comment type="block" pos:line="122" pos:column="21">/*
                     * This continuation matched. Print its message, with a
                     * blank before it if the previous item printed and this
                     * item isn't empty.
                     */</comment>
                    <comment type="block" pos:line="127" pos:column="21">/* space if previous printed */</comment>
                    <if pos:line="128" pos:column="21">if <condition pos:line="128" pos:column="24">(<expr><name pos:line="128" pos:column="25">need_separator<pos:position pos:line="128" pos:column="39"/></name>
                        <operator pos:line="129" pos:column="25">&amp;&amp;<pos:position pos:line="129" pos:column="35"/></operator> <operator pos:line="129" pos:column="28">(<pos:position pos:line="129" pos:column="29"/></operator><name><name pos:line="129" pos:column="29">m<pos:position pos:line="129" pos:column="30"/></name><operator pos:line="129" pos:column="30">-&gt;<pos:position pos:line="129" pos:column="35"/></operator><name pos:line="129" pos:column="32">nospflag<pos:position pos:line="129" pos:column="40"/></name></name> <operator pos:line="129" pos:column="41">==<pos:position pos:line="129" pos:column="43"/></operator> <literal type="number" pos:line="129" pos:column="44">0<pos:position pos:line="129" pos:column="45"/></literal><operator pos:line="129" pos:column="45">)<pos:position pos:line="129" pos:column="46"/></operator>
                        <operator pos:line="130" pos:column="25">&amp;&amp;<pos:position pos:line="130" pos:column="35"/></operator> <operator pos:line="130" pos:column="28">(<pos:position pos:line="130" pos:column="29"/></operator><name><name pos:line="130" pos:column="29">m<pos:position pos:line="130" pos:column="30"/></name><operator pos:line="130" pos:column="30">-&gt;<pos:position pos:line="130" pos:column="35"/></operator><name pos:line="130" pos:column="32">desc<pos:position pos:line="130" pos:column="36"/></name><index pos:line="130" pos:column="36">[<expr><literal type="number" pos:line="130" pos:column="37">0<pos:position pos:line="130" pos:column="38"/></literal></expr>]<pos:position pos:line="130" pos:column="39"/></index></name> <operator pos:line="130" pos:column="40">!=<pos:position pos:line="130" pos:column="42"/></operator> <literal type="char" pos:line="130" pos:column="43">'\0'<pos:position pos:line="130" pos:column="47"/></literal><operator pos:line="130" pos:column="47">)<pos:position pos:line="130" pos:column="48"/></operator></expr>
                        )<pos:position pos:line="131" pos:column="26"/></condition><then pos:line="131" pos:column="26"> <block pos:line="131" pos:column="27">{
                        <expr_stmt><expr><operator pos:line="132" pos:column="25">(<pos:position pos:line="132" pos:column="26"/></operator><name pos:line="132" pos:column="26">void<pos:position pos:line="132" pos:column="30"/></name><operator pos:line="132" pos:column="30">)<pos:position pos:line="132" pos:column="31"/></operator> <call><name pos:line="132" pos:column="32">magic_rsl_putchar<pos:position pos:line="132" pos:column="49"/></name><argument_list pos:line="132" pos:column="49">(<argument><expr><name pos:line="132" pos:column="50">r<pos:position pos:line="132" pos:column="51"/></name></expr></argument>, <argument><expr><literal type="char" pos:line="132" pos:column="53">' '<pos:position pos:line="132" pos:column="56"/></literal></expr></argument>)<pos:position pos:line="132" pos:column="57"/></argument_list></call></expr>;<pos:position pos:line="132" pos:column="58"/></expr_stmt>
                        <expr_stmt><expr><name pos:line="133" pos:column="25">need_separator<pos:position pos:line="133" pos:column="39"/></name> <operator pos:line="133" pos:column="40">=<pos:position pos:line="133" pos:column="41"/></operator> <literal type="number" pos:line="133" pos:column="42">0<pos:position pos:line="133" pos:column="43"/></literal></expr>;<pos:position pos:line="133" pos:column="44"/></expr_stmt>
                    }<pos:position pos:line="134" pos:column="22"/></block></then></if>
                    <expr_stmt><expr><call><name pos:line="135" pos:column="21">mprint<pos:position pos:line="135" pos:column="27"/></name><argument_list pos:line="135" pos:column="27">(<argument><expr><name pos:line="135" pos:column="28">r<pos:position pos:line="135" pos:column="29"/></name></expr></argument>, <argument><expr><operator pos:line="135" pos:column="31">&amp;<pos:position pos:line="135" pos:column="36"/></operator><name pos:line="135" pos:column="32">p<pos:position pos:line="135" pos:column="33"/></name></expr></argument>, <argument><expr><name pos:line="135" pos:column="35">m<pos:position pos:line="135" pos:column="36"/></name></expr></argument>)<pos:position pos:line="135" pos:column="37"/></argument_list></call></expr>;<pos:position pos:line="135" pos:column="38"/></expr_stmt>
                    <if pos:line="136" pos:column="21">if <condition pos:line="136" pos:column="24">(<expr><name><name pos:line="136" pos:column="25">m<pos:position pos:line="136" pos:column="26"/></name><operator pos:line="136" pos:column="26">-&gt;<pos:position pos:line="136" pos:column="31"/></operator><name pos:line="136" pos:column="28">desc<pos:position pos:line="136" pos:column="32"/></name><index pos:line="136" pos:column="32">[<expr><literal type="number" pos:line="136" pos:column="33">0<pos:position pos:line="136" pos:column="34"/></literal></expr>]<pos:position pos:line="136" pos:column="35"/></index></name></expr>)<pos:position pos:line="136" pos:column="36"/></condition><then pos:line="136" pos:column="36">
                        <block type="pseudo"><expr_stmt><expr><name pos:line="137" pos:column="25">need_separator<pos:position pos:line="137" pos:column="39"/></name> <operator pos:line="137" pos:column="40">=<pos:position pos:line="137" pos:column="41"/></operator> <literal type="number" pos:line="137" pos:column="42">1<pos:position pos:line="137" pos:column="43"/></literal></expr>;<pos:position pos:line="137" pos:column="44"/></expr_stmt></block></then></if>

                    <comment type="block" pos:line="139" pos:column="21">/*
                     * If we see any continuations at a higher level, process
                     * them.
                     */</comment>
                    <expr_stmt><expr><name pos:line="143" pos:column="21">cont_level<pos:position pos:line="143" pos:column="31"/></name><operator pos:line="143" pos:column="31">++<pos:position pos:line="143" pos:column="33"/></operator></expr>;<pos:position pos:line="143" pos:column="34"/></expr_stmt>
                }<pos:position pos:line="144" pos:column="18"/></block></then></if>
            }<pos:position pos:line="145" pos:column="14"/></block></then></if>

            <comment type="block" pos:line="147" pos:column="13">/* move to next continuation record */</comment>
            <expr_stmt><expr><name pos:line="148" pos:column="13">m<pos:position pos:line="148" pos:column="14"/></name> <operator pos:line="148" pos:column="15">=<pos:position pos:line="148" pos:column="16"/></operator> <name><name pos:line="148" pos:column="17">m<pos:position pos:line="148" pos:column="18"/></name><operator pos:line="148" pos:column="18">-&gt;<pos:position pos:line="148" pos:column="23"/></operator><name pos:line="148" pos:column="20">next<pos:position pos:line="148" pos:column="24"/></name></name></expr>;<pos:position pos:line="148" pos:column="25"/></expr_stmt>
        }<pos:position pos:line="149" pos:column="10"/></block></while>
<cpp:if pos:line="150" pos:column="1">#<cpp:directive pos:line="150" pos:column="2">if<pos:position pos:line="150" pos:column="4"/></cpp:directive> <expr><name pos:line="150" pos:column="5">MIME_MAGIC_DEBUG<pos:position pos:line="150" pos:column="21"/></name></expr></cpp:if>
        <expr_stmt><expr><call><name pos:line="151" pos:column="9">ap_log_rerror<pos:position pos:line="151" pos:column="22"/></name><argument_list pos:line="151" pos:column="22">(<argument><expr><name pos:line="151" pos:column="23">APLOG_MARK<pos:position pos:line="151" pos:column="33"/></name></expr></argument>, <argument><expr><name pos:line="151" pos:column="35">APLOG_DEBUG<pos:position pos:line="151" pos:column="46"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="151" pos:column="48">0<pos:position pos:line="151" pos:column="49"/></literal></expr></argument>, <argument><expr><name pos:line="151" pos:column="51">r<pos:position pos:line="151" pos:column="52"/></name></expr></argument>, <argument><expr><macro><name pos:line="151" pos:column="54">APLOGNO<pos:position pos:line="151" pos:column="61"/></name><argument_list pos:line="151" pos:column="61">(<argument><literal type="number" pos:line="151" pos:column="62">01535<pos:position pos:line="151" pos:column="67"/></literal></argument>)<pos:position pos:line="151" pos:column="68"/></argument_list></macro>
                    <name pos:line="152" pos:column="21">MODNAME<pos:position pos:line="152" pos:column="28"/></name> <literal type="string" pos:line="152" pos:column="29">": matched after %d rules"<pos:position pos:line="152" pos:column="55"/></literal></expr></argument>, <argument><expr><name pos:line="152" pos:column="57">rule_counter<pos:position pos:line="152" pos:column="69"/></name></expr></argument>)<pos:position pos:line="152" pos:column="70"/></argument_list></call></expr>;<pos:position pos:line="152" pos:column="71"/></expr_stmt>
<cpp:endif pos:line="153" pos:column="1">#<cpp:directive pos:line="153" pos:column="2">endif<pos:position pos:line="153" pos:column="7"/></cpp:directive></cpp:endif>
        <return pos:line="154" pos:column="9">return <expr><literal type="number" pos:line="154" pos:column="16">1<pos:position pos:line="154" pos:column="17"/></literal></expr>;<pos:position pos:line="154" pos:column="18"/></return>  <comment type="block" pos:line="154" pos:column="20">/* all through */</comment>
    }<pos:position pos:line="155" pos:column="6"/></block></for>
<cpp:if pos:line="156" pos:column="1">#<cpp:directive pos:line="156" pos:column="2">if<pos:position pos:line="156" pos:column="4"/></cpp:directive> <expr><name pos:line="156" pos:column="5">MIME_MAGIC_DEBUG<pos:position pos:line="156" pos:column="21"/></name></expr></cpp:if>
    <expr_stmt><expr><call><name pos:line="157" pos:column="5">ap_log_rerror<pos:position pos:line="157" pos:column="18"/></name><argument_list pos:line="157" pos:column="18">(<argument><expr><name pos:line="157" pos:column="19">APLOG_MARK<pos:position pos:line="157" pos:column="29"/></name></expr></argument>, <argument><expr><name pos:line="157" pos:column="31">APLOG_DEBUG<pos:position pos:line="157" pos:column="42"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="157" pos:column="44">0<pos:position pos:line="157" pos:column="45"/></literal></expr></argument>, <argument><expr><name pos:line="157" pos:column="47">r<pos:position pos:line="157" pos:column="48"/></name></expr></argument>, <argument><expr><macro><name pos:line="157" pos:column="50">APLOGNO<pos:position pos:line="157" pos:column="57"/></name><argument_list pos:line="157" pos:column="57">(<argument><literal type="number" pos:line="157" pos:column="58">01536<pos:position pos:line="157" pos:column="63"/></literal></argument>)<pos:position pos:line="157" pos:column="64"/></argument_list></macro>
                <name pos:line="158" pos:column="17">MODNAME<pos:position pos:line="158" pos:column="24"/></name> <literal type="string" pos:line="158" pos:column="25">": failed after %d rules"<pos:position pos:line="158" pos:column="50"/></literal></expr></argument>, <argument><expr><name pos:line="158" pos:column="52">rule_counter<pos:position pos:line="158" pos:column="64"/></name></expr></argument>)<pos:position pos:line="158" pos:column="65"/></argument_list></call></expr>;<pos:position pos:line="158" pos:column="66"/></expr_stmt>
<cpp:endif pos:line="159" pos:column="1">#<cpp:directive pos:line="159" pos:column="2">endif<pos:position pos:line="159" pos:column="7"/></cpp:directive></cpp:endif>
    <return pos:line="160" pos:column="5">return <expr><literal type="number" pos:line="160" pos:column="12">0<pos:position pos:line="160" pos:column="13"/></literal></expr>;<pos:position pos:line="160" pos:column="14"/></return>  <comment type="block" pos:line="160" pos:column="16">/* no match at all */</comment>
}<pos:position pos:line="161" pos:column="2"/></block></function></unit>

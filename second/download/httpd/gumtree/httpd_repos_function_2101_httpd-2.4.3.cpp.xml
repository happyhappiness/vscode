<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/httpd/gumtree/httpd_repos_function_2101_httpd-2.4.3.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">void<pos:position pos:line="1" pos:column="12"/></name><modifier pos:line="1" pos:column="12">*<pos:position pos:line="1" pos:column="13"/></modifier></type> <name pos:line="1" pos:column="14">xml2enc_merge<pos:position pos:line="1" pos:column="27"/></name><parameter_list pos:line="1" pos:column="27">(<parameter><decl><type><name pos:line="1" pos:column="28">apr_pool_t<pos:position pos:line="1" pos:column="38"/></name><modifier pos:line="1" pos:column="38">*<pos:position pos:line="1" pos:column="39"/></modifier></type> <name pos:line="1" pos:column="40">pool<pos:position pos:line="1" pos:column="44"/></name></decl></parameter>, <parameter><decl><type><name pos:line="1" pos:column="46">void<pos:position pos:line="1" pos:column="50"/></name><modifier pos:line="1" pos:column="50">*<pos:position pos:line="1" pos:column="51"/></modifier></type> <name pos:line="1" pos:column="52">BASE<pos:position pos:line="1" pos:column="56"/></name></decl></parameter>, <parameter><decl><type><name pos:line="1" pos:column="58">void<pos:position pos:line="1" pos:column="62"/></name><modifier pos:line="1" pos:column="62">*<pos:position pos:line="1" pos:column="63"/></modifier></type> <name pos:line="1" pos:column="64">ADD<pos:position pos:line="1" pos:column="67"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="68"/></parameter_list>
<block pos:line="2" pos:column="1">{
    <decl_stmt><decl><type><name pos:line="3" pos:column="5">xml2cfg<pos:position pos:line="3" pos:column="12"/></name><modifier pos:line="3" pos:column="12">*<pos:position pos:line="3" pos:column="13"/></modifier></type> <name pos:line="3" pos:column="14">base<pos:position pos:line="3" pos:column="18"/></name> <init pos:line="3" pos:column="19">= <expr><name pos:line="3" pos:column="21">BASE<pos:position pos:line="3" pos:column="25"/></name></expr></init></decl>;<pos:position pos:line="3" pos:column="26"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="4" pos:column="5">xml2cfg<pos:position pos:line="4" pos:column="12"/></name><modifier pos:line="4" pos:column="12">*<pos:position pos:line="4" pos:column="13"/></modifier></type> <name pos:line="4" pos:column="14">add<pos:position pos:line="4" pos:column="17"/></name> <init pos:line="4" pos:column="18">= <expr><name pos:line="4" pos:column="20">ADD<pos:position pos:line="4" pos:column="23"/></name></expr></init></decl>;<pos:position pos:line="4" pos:column="24"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="5" pos:column="5">xml2cfg<pos:position pos:line="5" pos:column="12"/></name><modifier pos:line="5" pos:column="12">*<pos:position pos:line="5" pos:column="13"/></modifier></type> <name pos:line="5" pos:column="14">ret<pos:position pos:line="5" pos:column="17"/></name> <init pos:line="5" pos:column="18">= <expr><call><name pos:line="5" pos:column="20">apr_pcalloc<pos:position pos:line="5" pos:column="31"/></name><argument_list pos:line="5" pos:column="31">(<argument><expr><name pos:line="5" pos:column="32">pool<pos:position pos:line="5" pos:column="36"/></name></expr></argument>, <argument><expr><sizeof pos:line="5" pos:column="38">sizeof<argument_list pos:line="5" pos:column="44">(<argument><expr><name pos:line="5" pos:column="45">xml2cfg<pos:position pos:line="5" pos:column="52"/></name></expr></argument>)<pos:position pos:line="5" pos:column="53"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="5" pos:column="54"/></argument_list></call></expr></init></decl>;<pos:position pos:line="5" pos:column="55"/></decl_stmt>
    <expr_stmt><expr><name><name pos:line="6" pos:column="5">ret<pos:position pos:line="6" pos:column="8"/></name><operator pos:line="6" pos:column="8">-&gt;<pos:position pos:line="6" pos:column="13"/></operator><name pos:line="6" pos:column="10">default_encoding<pos:position pos:line="6" pos:column="26"/></name></name> <operator pos:line="6" pos:column="27">=<pos:position pos:line="6" pos:column="28"/></operator> <ternary><condition><expr><operator pos:line="6" pos:column="29">(<pos:position pos:line="6" pos:column="30"/></operator><name><name pos:line="6" pos:column="30">add<pos:position pos:line="6" pos:column="33"/></name><operator pos:line="6" pos:column="33">-&gt;<pos:position pos:line="6" pos:column="38"/></operator><name pos:line="6" pos:column="35">default_encoding<pos:position pos:line="6" pos:column="51"/></name></name> <operator pos:line="6" pos:column="52">==<pos:position pos:line="6" pos:column="54"/></operator> <name pos:line="6" pos:column="55">XML_CHAR_ENCODING_NONE<pos:position pos:line="6" pos:column="77"/></name><operator pos:line="6" pos:column="77">)<pos:position pos:line="6" pos:column="78"/></operator></expr>
                          ?<pos:position pos:line="7" pos:column="28"/></condition><then pos:line="7" pos:column="28"> <expr><name><name pos:line="7" pos:column="29">base<pos:position pos:line="7" pos:column="33"/></name><operator pos:line="7" pos:column="33">-&gt;<pos:position pos:line="7" pos:column="38"/></operator><name pos:line="7" pos:column="35">default_encoding<pos:position pos:line="7" pos:column="51"/></name></name></expr> <pos:position pos:line="7" pos:column="52"/></then><else pos:line="7" pos:column="52">: <expr><name><name pos:line="7" pos:column="54">add<pos:position pos:line="7" pos:column="57"/></name><operator pos:line="7" pos:column="57">-&gt;<pos:position pos:line="7" pos:column="62"/></operator><name pos:line="7" pos:column="59">default_encoding<pos:position pos:line="7" pos:column="75"/></name></name></expr></else></ternary></expr> ;<pos:position pos:line="7" pos:column="77"/></expr_stmt>
    <expr_stmt><expr><name><name pos:line="8" pos:column="5">ret<pos:position pos:line="8" pos:column="8"/></name><operator pos:line="8" pos:column="8">-&gt;<pos:position pos:line="8" pos:column="13"/></operator><name pos:line="8" pos:column="10">default_charset<pos:position pos:line="8" pos:column="25"/></name></name> <operator pos:line="8" pos:column="26">=<pos:position pos:line="8" pos:column="27"/></operator> <ternary><condition><expr><name><name pos:line="8" pos:column="28">add<pos:position pos:line="8" pos:column="31"/></name><operator pos:line="8" pos:column="31">-&gt;<pos:position pos:line="8" pos:column="36"/></operator><name pos:line="8" pos:column="33">default_charset<pos:position pos:line="8" pos:column="48"/></name></name></expr>
                         ?<pos:position pos:line="9" pos:column="27"/></condition><then pos:line="9" pos:column="27"> <expr><name><name pos:line="9" pos:column="28">add<pos:position pos:line="9" pos:column="31"/></name><operator pos:line="9" pos:column="31">-&gt;<pos:position pos:line="9" pos:column="36"/></operator><name pos:line="9" pos:column="33">default_charset<pos:position pos:line="9" pos:column="48"/></name></name></expr> <pos:position pos:line="9" pos:column="49"/></then><else pos:line="9" pos:column="49">: <expr><name><name pos:line="9" pos:column="51">base<pos:position pos:line="9" pos:column="55"/></name><operator pos:line="9" pos:column="55">-&gt;<pos:position pos:line="9" pos:column="60"/></operator><name pos:line="9" pos:column="57">default_charset<pos:position pos:line="9" pos:column="72"/></name></name></expr></else></ternary></expr>;<pos:position pos:line="9" pos:column="73"/></expr_stmt>
    <expr_stmt><expr><name><name pos:line="10" pos:column="5">ret<pos:position pos:line="10" pos:column="8"/></name><operator pos:line="10" pos:column="8">-&gt;<pos:position pos:line="10" pos:column="13"/></operator><name pos:line="10" pos:column="10">skipto<pos:position pos:line="10" pos:column="16"/></name></name> <operator pos:line="10" pos:column="17">=<pos:position pos:line="10" pos:column="18"/></operator> <ternary><condition><expr><name><name pos:line="10" pos:column="19">add<pos:position pos:line="10" pos:column="22"/></name><operator pos:line="10" pos:column="22">-&gt;<pos:position pos:line="10" pos:column="27"/></operator><name pos:line="10" pos:column="24">skipto<pos:position pos:line="10" pos:column="30"/></name></name></expr> ?<pos:position pos:line="10" pos:column="32"/></condition><then pos:line="10" pos:column="32"> <expr><name><name pos:line="10" pos:column="33">add<pos:position pos:line="10" pos:column="36"/></name><operator pos:line="10" pos:column="36">-&gt;<pos:position pos:line="10" pos:column="41"/></operator><name pos:line="10" pos:column="38">skipto<pos:position pos:line="10" pos:column="44"/></name></name></expr> <pos:position pos:line="10" pos:column="45"/></then><else pos:line="10" pos:column="45">: <expr><name><name pos:line="10" pos:column="47">base<pos:position pos:line="10" pos:column="51"/></name><operator pos:line="10" pos:column="51">-&gt;<pos:position pos:line="10" pos:column="56"/></operator><name pos:line="10" pos:column="53">skipto<pos:position pos:line="10" pos:column="59"/></name></name></expr></else></ternary></expr>;<pos:position pos:line="10" pos:column="60"/></expr_stmt>
    <return pos:line="11" pos:column="5">return <expr><name pos:line="11" pos:column="12">ret<pos:position pos:line="11" pos:column="15"/></name></expr>;<pos:position pos:line="11" pos:column="16"/></return>
}<pos:position pos:line="12" pos:column="2"/></block></function></unit>

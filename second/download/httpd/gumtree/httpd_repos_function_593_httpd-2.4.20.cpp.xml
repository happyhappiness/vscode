<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/httpd/gumtree/httpd_repos_function_593_httpd-2.4.20.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">int<pos:position pos:line="1" pos:column="11"/></name></type> <name pos:line="1" pos:column="12">match_headers<pos:position pos:line="1" pos:column="25"/></name><parameter_list pos:line="1" pos:column="25">(<parameter><decl><type><name pos:line="1" pos:column="26">request_rec<pos:position pos:line="1" pos:column="37"/></name> <modifier pos:line="1" pos:column="38">*<pos:position pos:line="1" pos:column="39"/></modifier></type><name pos:line="1" pos:column="39">r<pos:position pos:line="1" pos:column="40"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="41"/></parameter_list>
<block pos:line="2" pos:column="1">{
    <decl_stmt><decl><type><name pos:line="3" pos:column="5">sei_cfg_rec<pos:position pos:line="3" pos:column="16"/></name> <modifier pos:line="3" pos:column="17">*<pos:position pos:line="3" pos:column="18"/></modifier></type><name pos:line="3" pos:column="18">sconf<pos:position pos:line="3" pos:column="23"/></name></decl>;<pos:position pos:line="3" pos:column="24"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="4" pos:column="5">sei_entry<pos:position pos:line="4" pos:column="14"/></name> <modifier pos:line="4" pos:column="15">*<pos:position pos:line="4" pos:column="16"/></modifier></type><name pos:line="4" pos:column="16">entries<pos:position pos:line="4" pos:column="23"/></name></decl>;<pos:position pos:line="4" pos:column="24"/></decl_stmt>
    <decl_stmt><decl><type><specifier pos:line="5" pos:column="5">const<pos:position pos:line="5" pos:column="10"/></specifier> <name pos:line="5" pos:column="11">apr_table_entry_t<pos:position pos:line="5" pos:column="28"/></name> <modifier pos:line="5" pos:column="29">*<pos:position pos:line="5" pos:column="30"/></modifier></type><name pos:line="5" pos:column="30">elts<pos:position pos:line="5" pos:column="34"/></name></decl>;<pos:position pos:line="5" pos:column="35"/></decl_stmt>
    <decl_stmt><decl><type><specifier pos:line="6" pos:column="5">const<pos:position pos:line="6" pos:column="10"/></specifier> <name pos:line="6" pos:column="11">char<pos:position pos:line="6" pos:column="15"/></name> <modifier pos:line="6" pos:column="16">*<pos:position pos:line="6" pos:column="17"/></modifier></type><name pos:line="6" pos:column="17">val<pos:position pos:line="6" pos:column="20"/></name></decl>, <modifier pos:line="6" pos:column="22">*<pos:position pos:line="6" pos:column="23"/></modifier><decl><type ref="prev"/><name pos:line="6" pos:column="23">err<pos:position pos:line="6" pos:column="26"/></name></decl>;<pos:position pos:line="6" pos:column="27"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="7" pos:column="5">apr_size_t<pos:position pos:line="7" pos:column="15"/></name></type> <name pos:line="7" pos:column="16">val_len<pos:position pos:line="7" pos:column="23"/></name> <init pos:line="7" pos:column="24">= <expr><literal type="number" pos:line="7" pos:column="26">0<pos:position pos:line="7" pos:column="27"/></literal></expr></init></decl>;<pos:position pos:line="7" pos:column="28"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="8" pos:column="5">int<pos:position pos:line="8" pos:column="8"/></name></type> <name pos:line="8" pos:column="9">i<pos:position pos:line="8" pos:column="10"/></name></decl>, <decl><type ref="prev"/><name pos:line="8" pos:column="12">j<pos:position pos:line="8" pos:column="13"/></name></decl>;<pos:position pos:line="8" pos:column="14"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="9" pos:column="5">char<pos:position pos:line="9" pos:column="9"/></name> <modifier pos:line="9" pos:column="10">*<pos:position pos:line="9" pos:column="11"/></modifier></type><name pos:line="9" pos:column="11">last_name<pos:position pos:line="9" pos:column="20"/></name></decl>;<pos:position pos:line="9" pos:column="21"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="10" pos:column="5">ap_regmatch_t<pos:position pos:line="10" pos:column="18"/></name></type> <name><name pos:line="10" pos:column="19">regm<pos:position pos:line="10" pos:column="23"/></name><index pos:line="10" pos:column="23">[<expr><name pos:line="10" pos:column="24">AP_MAX_REG_MATCH<pos:position pos:line="10" pos:column="40"/></name></expr>]<pos:position pos:line="10" pos:column="41"/></index></name></decl>;<pos:position pos:line="10" pos:column="42"/></decl_stmt>

    <if pos:line="12" pos:column="5">if <condition pos:line="12" pos:column="8">(<expr><operator pos:line="12" pos:column="9">!<pos:position pos:line="12" pos:column="10"/></operator><call><name pos:line="12" pos:column="10">ap_get_module_config<pos:position pos:line="12" pos:column="30"/></name><argument_list pos:line="12" pos:column="30">(<argument><expr><name><name pos:line="12" pos:column="31">r<pos:position pos:line="12" pos:column="32"/></name><operator pos:line="12" pos:column="32">-&gt;<pos:position pos:line="12" pos:column="37"/></operator><name pos:line="12" pos:column="34">request_config<pos:position pos:line="12" pos:column="48"/></name></name></expr></argument>, <argument><expr><operator pos:line="12" pos:column="50">&amp;<pos:position pos:line="12" pos:column="55"/></operator><name pos:line="12" pos:column="51">setenvif_module<pos:position pos:line="12" pos:column="66"/></name></expr></argument>)<pos:position pos:line="12" pos:column="67"/></argument_list></call></expr>)<pos:position pos:line="12" pos:column="68"/></condition><then pos:line="12" pos:column="68"> <block pos:line="12" pos:column="69">{
        <expr_stmt><expr><call><name pos:line="13" pos:column="9">ap_set_module_config<pos:position pos:line="13" pos:column="29"/></name><argument_list pos:line="13" pos:column="29">(<argument><expr><name><name pos:line="13" pos:column="30">r<pos:position pos:line="13" pos:column="31"/></name><operator pos:line="13" pos:column="31">-&gt;<pos:position pos:line="13" pos:column="36"/></operator><name pos:line="13" pos:column="33">request_config<pos:position pos:line="13" pos:column="47"/></name></name></expr></argument>, <argument><expr><operator pos:line="13" pos:column="49">&amp;<pos:position pos:line="13" pos:column="54"/></operator><name pos:line="13" pos:column="50">setenvif_module<pos:position pos:line="13" pos:column="65"/></name></expr></argument>,
                             <argument><expr><name pos:line="14" pos:column="30">SEI_MAGIC_HEIRLOOM<pos:position pos:line="14" pos:column="48"/></name></expr></argument>)<pos:position pos:line="14" pos:column="49"/></argument_list></call></expr>;<pos:position pos:line="14" pos:column="50"/></expr_stmt>
        <expr_stmt><expr><name pos:line="15" pos:column="9">sconf<pos:position pos:line="15" pos:column="14"/></name>  <operator pos:line="15" pos:column="16">=<pos:position pos:line="15" pos:column="17"/></operator> <operator pos:line="15" pos:column="18">(<pos:position pos:line="15" pos:column="19"/></operator><name pos:line="15" pos:column="19">sei_cfg_rec<pos:position pos:line="15" pos:column="30"/></name> <operator pos:line="15" pos:column="31">*<pos:position pos:line="15" pos:column="32"/></operator><operator pos:line="15" pos:column="32">)<pos:position pos:line="15" pos:column="33"/></operator> <call><name pos:line="15" pos:column="34">ap_get_module_config<pos:position pos:line="15" pos:column="54"/></name><argument_list pos:line="15" pos:column="54">(<argument><expr><name><name pos:line="15" pos:column="55">r<pos:position pos:line="15" pos:column="56"/></name><operator pos:line="15" pos:column="56">-&gt;<pos:position pos:line="15" pos:column="61"/></operator><name pos:line="15" pos:column="58">server<pos:position pos:line="15" pos:column="64"/></name><operator pos:line="15" pos:column="64">-&gt;<pos:position pos:line="15" pos:column="69"/></operator><name pos:line="15" pos:column="66">module_config<pos:position pos:line="15" pos:column="79"/></name></name></expr></argument>,
                                                      <argument><expr><operator pos:line="16" pos:column="55">&amp;<pos:position pos:line="16" pos:column="60"/></operator><name pos:line="16" pos:column="56">setenvif_module<pos:position pos:line="16" pos:column="71"/></name></expr></argument>)<pos:position pos:line="16" pos:column="72"/></argument_list></call></expr>;<pos:position pos:line="16" pos:column="73"/></expr_stmt>
    }<pos:position pos:line="17" pos:column="6"/></block></then>
    <else pos:line="18" pos:column="5">else <block pos:line="18" pos:column="10">{
        <expr_stmt><expr><name pos:line="19" pos:column="9">sconf<pos:position pos:line="19" pos:column="14"/></name> <operator pos:line="19" pos:column="15">=<pos:position pos:line="19" pos:column="16"/></operator> <operator pos:line="19" pos:column="17">(<pos:position pos:line="19" pos:column="18"/></operator><name pos:line="19" pos:column="18">sei_cfg_rec<pos:position pos:line="19" pos:column="29"/></name> <operator pos:line="19" pos:column="30">*<pos:position pos:line="19" pos:column="31"/></operator><operator pos:line="19" pos:column="31">)<pos:position pos:line="19" pos:column="32"/></operator> <call><name pos:line="19" pos:column="33">ap_get_module_config<pos:position pos:line="19" pos:column="53"/></name><argument_list pos:line="19" pos:column="53">(<argument><expr><name><name pos:line="19" pos:column="54">r<pos:position pos:line="19" pos:column="55"/></name><operator pos:line="19" pos:column="55">-&gt;<pos:position pos:line="19" pos:column="60"/></operator><name pos:line="19" pos:column="57">per_dir_config<pos:position pos:line="19" pos:column="71"/></name></name></expr></argument>,
                                                     <argument><expr><operator pos:line="20" pos:column="54">&amp;<pos:position pos:line="20" pos:column="59"/></operator><name pos:line="20" pos:column="55">setenvif_module<pos:position pos:line="20" pos:column="70"/></name></expr></argument>)<pos:position pos:line="20" pos:column="71"/></argument_list></call></expr>;<pos:position pos:line="20" pos:column="72"/></expr_stmt>
    }<pos:position pos:line="21" pos:column="6"/></block></else></if>
    <expr_stmt><expr><name pos:line="22" pos:column="5">entries<pos:position pos:line="22" pos:column="12"/></name> <operator pos:line="22" pos:column="13">=<pos:position pos:line="22" pos:column="14"/></operator> <operator pos:line="22" pos:column="15">(<pos:position pos:line="22" pos:column="16"/></operator><name pos:line="22" pos:column="16">sei_entry<pos:position pos:line="22" pos:column="25"/></name> <operator pos:line="22" pos:column="26">*<pos:position pos:line="22" pos:column="27"/></operator><operator pos:line="22" pos:column="27">)<pos:position pos:line="22" pos:column="28"/></operator> <name><name pos:line="22" pos:column="29">sconf<pos:position pos:line="22" pos:column="34"/></name><operator pos:line="22" pos:column="34">-&gt;<pos:position pos:line="22" pos:column="39"/></operator><name pos:line="22" pos:column="36">conditionals<pos:position pos:line="22" pos:column="48"/></name><operator pos:line="22" pos:column="48">-&gt;<pos:position pos:line="22" pos:column="53"/></operator><name pos:line="22" pos:column="50">elts<pos:position pos:line="22" pos:column="54"/></name></name></expr>;<pos:position pos:line="22" pos:column="55"/></expr_stmt>
    <expr_stmt><expr><name pos:line="23" pos:column="5">last_name<pos:position pos:line="23" pos:column="14"/></name> <operator pos:line="23" pos:column="15">=<pos:position pos:line="23" pos:column="16"/></operator> <name pos:line="23" pos:column="17">NULL<pos:position pos:line="23" pos:column="21"/></name></expr>;<pos:position pos:line="23" pos:column="22"/></expr_stmt>
    <expr_stmt><expr><name pos:line="24" pos:column="5">val<pos:position pos:line="24" pos:column="8"/></name> <operator pos:line="24" pos:column="9">=<pos:position pos:line="24" pos:column="10"/></operator> <name pos:line="24" pos:column="11">NULL<pos:position pos:line="24" pos:column="15"/></name></expr>;<pos:position pos:line="24" pos:column="16"/></expr_stmt>
    <for pos:line="25" pos:column="5">for <control pos:line="25" pos:column="9">(<init><expr><name pos:line="25" pos:column="10">i<pos:position pos:line="25" pos:column="11"/></name> <operator pos:line="25" pos:column="12">=<pos:position pos:line="25" pos:column="13"/></operator> <literal type="number" pos:line="25" pos:column="14">0<pos:position pos:line="25" pos:column="15"/></literal></expr>;<pos:position pos:line="25" pos:column="16"/></init> <condition><expr><name pos:line="25" pos:column="17">i<pos:position pos:line="25" pos:column="18"/></name> <operator pos:line="25" pos:column="19">&lt;<pos:position pos:line="25" pos:column="23"/></operator> <name><name pos:line="25" pos:column="21">sconf<pos:position pos:line="25" pos:column="26"/></name><operator pos:line="25" pos:column="26">-&gt;<pos:position pos:line="25" pos:column="31"/></operator><name pos:line="25" pos:column="28">conditionals<pos:position pos:line="25" pos:column="40"/></name><operator pos:line="25" pos:column="40">-&gt;<pos:position pos:line="25" pos:column="45"/></operator><name pos:line="25" pos:column="42">nelts<pos:position pos:line="25" pos:column="47"/></name></name></expr>;<pos:position pos:line="25" pos:column="48"/></condition> <incr><expr><operator pos:line="25" pos:column="49">++<pos:position pos:line="25" pos:column="51"/></operator><name pos:line="25" pos:column="51">i<pos:position pos:line="25" pos:column="52"/></name></expr></incr>)<pos:position pos:line="25" pos:column="53"/></control> <block pos:line="25" pos:column="54">{
        <decl_stmt><decl><type><name pos:line="26" pos:column="9">sei_entry<pos:position pos:line="26" pos:column="18"/></name> <modifier pos:line="26" pos:column="19">*<pos:position pos:line="26" pos:column="20"/></modifier></type><name pos:line="26" pos:column="20">b<pos:position pos:line="26" pos:column="21"/></name> <init pos:line="26" pos:column="22">= <expr><operator pos:line="26" pos:column="24">&amp;<pos:position pos:line="26" pos:column="29"/></operator><name><name pos:line="26" pos:column="25">entries<pos:position pos:line="26" pos:column="32"/></name><index pos:line="26" pos:column="32">[<expr><name pos:line="26" pos:column="33">i<pos:position pos:line="26" pos:column="34"/></name></expr>]<pos:position pos:line="26" pos:column="35"/></index></name></expr></init></decl>;<pos:position pos:line="26" pos:column="36"/></decl_stmt>

        <if pos:line="28" pos:column="9">if <condition pos:line="28" pos:column="12">(<expr><operator pos:line="28" pos:column="13">!<pos:position pos:line="28" pos:column="14"/></operator><name><name pos:line="28" pos:column="14">b<pos:position pos:line="28" pos:column="15"/></name><operator pos:line="28" pos:column="15">-&gt;<pos:position pos:line="28" pos:column="20"/></operator><name pos:line="28" pos:column="17">expr<pos:position pos:line="28" pos:column="21"/></name></name></expr>)<pos:position pos:line="28" pos:column="22"/></condition><then pos:line="28" pos:column="22"> <block pos:line="28" pos:column="23">{
            <comment type="block" pos:line="29" pos:column="13">/* Optimize the case where a bunch of directives in a row use the
             * same header.  Remember we don't need to strcmp the two header
             * names because we made sure the pointers were equal during
             * configuration.
             */</comment>
            <if pos:line="34" pos:column="13">if <condition pos:line="34" pos:column="16">(<expr><name><name pos:line="34" pos:column="17">b<pos:position pos:line="34" pos:column="18"/></name><operator pos:line="34" pos:column="18">-&gt;<pos:position pos:line="34" pos:column="23"/></operator><name pos:line="34" pos:column="20">name<pos:position pos:line="34" pos:column="24"/></name></name> <operator pos:line="34" pos:column="25">!=<pos:position pos:line="34" pos:column="27"/></operator> <name pos:line="34" pos:column="28">last_name<pos:position pos:line="34" pos:column="37"/></name></expr>)<pos:position pos:line="34" pos:column="38"/></condition><then pos:line="34" pos:column="38"> <block pos:line="34" pos:column="39">{
                <expr_stmt><expr><name pos:line="35" pos:column="17">last_name<pos:position pos:line="35" pos:column="26"/></name> <operator pos:line="35" pos:column="27">=<pos:position pos:line="35" pos:column="28"/></operator> <name><name pos:line="35" pos:column="29">b<pos:position pos:line="35" pos:column="30"/></name><operator pos:line="35" pos:column="30">-&gt;<pos:position pos:line="35" pos:column="35"/></operator><name pos:line="35" pos:column="32">name<pos:position pos:line="35" pos:column="36"/></name></name></expr>;<pos:position pos:line="35" pos:column="37"/></expr_stmt>
                <switch pos:line="36" pos:column="17">switch <condition pos:line="36" pos:column="24">(<expr><name><name pos:line="36" pos:column="25">b<pos:position pos:line="36" pos:column="26"/></name><operator pos:line="36" pos:column="26">-&gt;<pos:position pos:line="36" pos:column="31"/></operator><name pos:line="36" pos:column="28">special_type<pos:position pos:line="36" pos:column="40"/></name></name></expr>)<pos:position pos:line="36" pos:column="41"/></condition> <block pos:line="36" pos:column="42">{
                <case pos:line="37" pos:column="17">case <expr><name pos:line="37" pos:column="22">SPECIAL_REMOTE_ADDR<pos:position pos:line="37" pos:column="41"/></name></expr>:<pos:position pos:line="37" pos:column="42"/></case>
                    <expr_stmt><expr><name pos:line="38" pos:column="21">val<pos:position pos:line="38" pos:column="24"/></name> <operator pos:line="38" pos:column="25">=<pos:position pos:line="38" pos:column="26"/></operator> <name><name pos:line="38" pos:column="27">r<pos:position pos:line="38" pos:column="28"/></name><operator pos:line="38" pos:column="28">-&gt;<pos:position pos:line="38" pos:column="33"/></operator><name pos:line="38" pos:column="30">useragent_ip<pos:position pos:line="38" pos:column="42"/></name></name></expr>;<pos:position pos:line="38" pos:column="43"/></expr_stmt>
                    <break pos:line="39" pos:column="21">break;<pos:position pos:line="39" pos:column="27"/></break>
                <case pos:line="40" pos:column="17">case <expr><name pos:line="40" pos:column="22">SPECIAL_SERVER_ADDR<pos:position pos:line="40" pos:column="41"/></name></expr>:<pos:position pos:line="40" pos:column="42"/></case>
                    <expr_stmt><expr><name pos:line="41" pos:column="21">val<pos:position pos:line="41" pos:column="24"/></name> <operator pos:line="41" pos:column="25">=<pos:position pos:line="41" pos:column="26"/></operator> <name><name pos:line="41" pos:column="27">r<pos:position pos:line="41" pos:column="28"/></name><operator pos:line="41" pos:column="28">-&gt;<pos:position pos:line="41" pos:column="33"/></operator><name pos:line="41" pos:column="30">connection<pos:position pos:line="41" pos:column="40"/></name><operator pos:line="41" pos:column="40">-&gt;<pos:position pos:line="41" pos:column="45"/></operator><name pos:line="41" pos:column="42">local_ip<pos:position pos:line="41" pos:column="50"/></name></name></expr>;<pos:position pos:line="41" pos:column="51"/></expr_stmt>
                    <break pos:line="42" pos:column="21">break;<pos:position pos:line="42" pos:column="27"/></break>
                <case pos:line="43" pos:column="17">case <expr><name pos:line="43" pos:column="22">SPECIAL_REMOTE_HOST<pos:position pos:line="43" pos:column="41"/></name></expr>:<pos:position pos:line="43" pos:column="42"/></case>
                    <expr_stmt><expr><name pos:line="44" pos:column="21">val<pos:position pos:line="44" pos:column="24"/></name> <operator pos:line="44" pos:column="25">=<pos:position pos:line="44" pos:column="26"/></operator> <call><name pos:line="44" pos:column="27">ap_get_useragent_host<pos:position pos:line="44" pos:column="48"/></name><argument_list pos:line="44" pos:column="48">(<argument><expr><name pos:line="44" pos:column="49">r<pos:position pos:line="44" pos:column="50"/></name></expr></argument>, <argument><expr><name pos:line="44" pos:column="52">REMOTE_NAME<pos:position pos:line="44" pos:column="63"/></name></expr></argument>, <argument><expr><name pos:line="44" pos:column="65">NULL<pos:position pos:line="44" pos:column="69"/></name></expr></argument>)<pos:position pos:line="44" pos:column="70"/></argument_list></call></expr>;<pos:position pos:line="44" pos:column="71"/></expr_stmt>
                    <break pos:line="45" pos:column="21">break;<pos:position pos:line="45" pos:column="27"/></break>
                <case pos:line="46" pos:column="17">case <expr><name pos:line="46" pos:column="22">SPECIAL_REQUEST_URI<pos:position pos:line="46" pos:column="41"/></name></expr>:<pos:position pos:line="46" pos:column="42"/></case>
                    <expr_stmt><expr><name pos:line="47" pos:column="21">val<pos:position pos:line="47" pos:column="24"/></name> <operator pos:line="47" pos:column="25">=<pos:position pos:line="47" pos:column="26"/></operator> <name><name pos:line="47" pos:column="27">r<pos:position pos:line="47" pos:column="28"/></name><operator pos:line="47" pos:column="28">-&gt;<pos:position pos:line="47" pos:column="33"/></operator><name pos:line="47" pos:column="30">uri<pos:position pos:line="47" pos:column="33"/></name></name></expr>;<pos:position pos:line="47" pos:column="34"/></expr_stmt>
                    <break pos:line="48" pos:column="21">break;<pos:position pos:line="48" pos:column="27"/></break>
                <case pos:line="49" pos:column="17">case <expr><name pos:line="49" pos:column="22">SPECIAL_REQUEST_METHOD<pos:position pos:line="49" pos:column="44"/></name></expr>:<pos:position pos:line="49" pos:column="45"/></case>
                    <expr_stmt><expr><name pos:line="50" pos:column="21">val<pos:position pos:line="50" pos:column="24"/></name> <operator pos:line="50" pos:column="25">=<pos:position pos:line="50" pos:column="26"/></operator> <name><name pos:line="50" pos:column="27">r<pos:position pos:line="50" pos:column="28"/></name><operator pos:line="50" pos:column="28">-&gt;<pos:position pos:line="50" pos:column="33"/></operator><name pos:line="50" pos:column="30">method<pos:position pos:line="50" pos:column="36"/></name></name></expr>;<pos:position pos:line="50" pos:column="37"/></expr_stmt>
                    <break pos:line="51" pos:column="21">break;<pos:position pos:line="51" pos:column="27"/></break>
                <case pos:line="52" pos:column="17">case <expr><name pos:line="52" pos:column="22">SPECIAL_REQUEST_PROTOCOL<pos:position pos:line="52" pos:column="46"/></name></expr>:<pos:position pos:line="52" pos:column="47"/></case>
                    <expr_stmt><expr><name pos:line="53" pos:column="21">val<pos:position pos:line="53" pos:column="24"/></name> <operator pos:line="53" pos:column="25">=<pos:position pos:line="53" pos:column="26"/></operator> <name><name pos:line="53" pos:column="27">r<pos:position pos:line="53" pos:column="28"/></name><operator pos:line="53" pos:column="28">-&gt;<pos:position pos:line="53" pos:column="33"/></operator><name pos:line="53" pos:column="30">protocol<pos:position pos:line="53" pos:column="38"/></name></name></expr>;<pos:position pos:line="53" pos:column="39"/></expr_stmt>
                    <break pos:line="54" pos:column="21">break;<pos:position pos:line="54" pos:column="27"/></break>
                <case pos:line="55" pos:column="17">case <expr><name pos:line="55" pos:column="22">SPECIAL_NOT<pos:position pos:line="55" pos:column="33"/></name></expr>:<pos:position pos:line="55" pos:column="34"/></case>
                    <if pos:line="56" pos:column="21">if <condition pos:line="56" pos:column="24">(<expr><name><name pos:line="56" pos:column="25">b<pos:position pos:line="56" pos:column="26"/></name><operator pos:line="56" pos:column="26">-&gt;<pos:position pos:line="56" pos:column="31"/></operator><name pos:line="56" pos:column="28">pnamereg<pos:position pos:line="56" pos:column="36"/></name></name></expr>)<pos:position pos:line="56" pos:column="37"/></condition><then pos:line="56" pos:column="37"> <block pos:line="56" pos:column="38">{
                        <comment type="block" pos:line="57" pos:column="25">/* Matching headers_in against a regex. Iterate through
                         * the headers_in until we find a match or run out of
                         * headers.
                         */</comment>
                        <decl_stmt><decl><type><specifier pos:line="61" pos:column="25">const<pos:position pos:line="61" pos:column="30"/></specifier> <name pos:line="61" pos:column="31">apr_array_header_t<pos:position pos:line="61" pos:column="49"/></name>
                            <modifier pos:line="62" pos:column="29">*<pos:position pos:line="62" pos:column="30"/></modifier></type><name pos:line="62" pos:column="30">arr<pos:position pos:line="62" pos:column="33"/></name> <init pos:line="62" pos:column="34">= <expr><call><name pos:line="62" pos:column="36">apr_table_elts<pos:position pos:line="62" pos:column="50"/></name><argument_list pos:line="62" pos:column="50">(<argument><expr><name><name pos:line="62" pos:column="51">r<pos:position pos:line="62" pos:column="52"/></name><operator pos:line="62" pos:column="52">-&gt;<pos:position pos:line="62" pos:column="57"/></operator><name pos:line="62" pos:column="54">headers_in<pos:position pos:line="62" pos:column="64"/></name></name></expr></argument>)<pos:position pos:line="62" pos:column="65"/></argument_list></call></expr></init></decl>;<pos:position pos:line="62" pos:column="66"/></decl_stmt>

                        <expr_stmt><expr><name pos:line="64" pos:column="25">elts<pos:position pos:line="64" pos:column="29"/></name> <operator pos:line="64" pos:column="30">=<pos:position pos:line="64" pos:column="31"/></operator> <operator pos:line="64" pos:column="32">(<pos:position pos:line="64" pos:column="33"/></operator><specifier pos:line="64" pos:column="33">const<pos:position pos:line="64" pos:column="38"/></specifier> <name pos:line="64" pos:column="39">apr_table_entry_t<pos:position pos:line="64" pos:column="56"/></name> <operator pos:line="64" pos:column="57">*<pos:position pos:line="64" pos:column="58"/></operator><operator pos:line="64" pos:column="58">)<pos:position pos:line="64" pos:column="59"/></operator> <name><name pos:line="64" pos:column="60">arr<pos:position pos:line="64" pos:column="63"/></name><operator pos:line="64" pos:column="63">-&gt;<pos:position pos:line="64" pos:column="68"/></operator><name pos:line="64" pos:column="65">elts<pos:position pos:line="64" pos:column="69"/></name></name></expr>;<pos:position pos:line="64" pos:column="70"/></expr_stmt>
                        <expr_stmt><expr><name pos:line="65" pos:column="25">val<pos:position pos:line="65" pos:column="28"/></name> <operator pos:line="65" pos:column="29">=<pos:position pos:line="65" pos:column="30"/></operator> <name pos:line="65" pos:column="31">NULL<pos:position pos:line="65" pos:column="35"/></name></expr>;<pos:position pos:line="65" pos:column="36"/></expr_stmt>
                        <for pos:line="66" pos:column="25">for <control pos:line="66" pos:column="29">(<init><expr><name pos:line="66" pos:column="30">j<pos:position pos:line="66" pos:column="31"/></name> <operator pos:line="66" pos:column="32">=<pos:position pos:line="66" pos:column="33"/></operator> <literal type="number" pos:line="66" pos:column="34">0<pos:position pos:line="66" pos:column="35"/></literal></expr>;<pos:position pos:line="66" pos:column="36"/></init> <condition><expr><name pos:line="66" pos:column="37">j<pos:position pos:line="66" pos:column="38"/></name> <operator pos:line="66" pos:column="39">&lt;<pos:position pos:line="66" pos:column="43"/></operator> <name><name pos:line="66" pos:column="41">arr<pos:position pos:line="66" pos:column="44"/></name><operator pos:line="66" pos:column="44">-&gt;<pos:position pos:line="66" pos:column="49"/></operator><name pos:line="66" pos:column="46">nelts<pos:position pos:line="66" pos:column="51"/></name></name></expr>;<pos:position pos:line="66" pos:column="52"/></condition> <incr><expr><operator pos:line="66" pos:column="53">++<pos:position pos:line="66" pos:column="55"/></operator><name pos:line="66" pos:column="55">j<pos:position pos:line="66" pos:column="56"/></name></expr></incr>)<pos:position pos:line="66" pos:column="57"/></control> <block pos:line="66" pos:column="58">{
                            <if pos:line="67" pos:column="29">if <condition pos:line="67" pos:column="32">(<expr><operator pos:line="67" pos:column="33">!<pos:position pos:line="67" pos:column="34"/></operator><call><name pos:line="67" pos:column="34">ap_regexec<pos:position pos:line="67" pos:column="44"/></name><argument_list pos:line="67" pos:column="44">(<argument><expr><name><name pos:line="67" pos:column="45">b<pos:position pos:line="67" pos:column="46"/></name><operator pos:line="67" pos:column="46">-&gt;<pos:position pos:line="67" pos:column="51"/></operator><name pos:line="67" pos:column="48">pnamereg<pos:position pos:line="67" pos:column="56"/></name></name></expr></argument>, <argument><expr><name><name pos:line="67" pos:column="58">elts<pos:position pos:line="67" pos:column="62"/></name><index pos:line="67" pos:column="62">[<expr><name pos:line="67" pos:column="63">j<pos:position pos:line="67" pos:column="64"/></name></expr>]<pos:position pos:line="67" pos:column="65"/></index></name><operator pos:line="67" pos:column="65">.<pos:position pos:line="67" pos:column="66"/></operator><name pos:line="67" pos:column="66">key<pos:position pos:line="67" pos:column="69"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="67" pos:column="71">0<pos:position pos:line="67" pos:column="72"/></literal></expr></argument>, <argument><expr><name pos:line="67" pos:column="74">NULL<pos:position pos:line="67" pos:column="78"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="67" pos:column="80">0<pos:position pos:line="67" pos:column="81"/></literal></expr></argument>)<pos:position pos:line="67" pos:column="82"/></argument_list></call></expr>)<pos:position pos:line="67" pos:column="83"/></condition><then pos:line="67" pos:column="83"> <block pos:line="67" pos:column="84">{
                                <expr_stmt><expr><name pos:line="68" pos:column="33">val<pos:position pos:line="68" pos:column="36"/></name> <operator pos:line="68" pos:column="37">=<pos:position pos:line="68" pos:column="38"/></operator> <name><name pos:line="68" pos:column="39">elts<pos:position pos:line="68" pos:column="43"/></name><index pos:line="68" pos:column="43">[<expr><name pos:line="68" pos:column="44">j<pos:position pos:line="68" pos:column="45"/></name></expr>]<pos:position pos:line="68" pos:column="46"/></index></name><operator pos:line="68" pos:column="46">.<pos:position pos:line="68" pos:column="47"/></operator><name pos:line="68" pos:column="47">val<pos:position pos:line="68" pos:column="50"/></name></expr>;<pos:position pos:line="68" pos:column="51"/></expr_stmt>
                            }<pos:position pos:line="69" pos:column="30"/></block></then></if>
                        }<pos:position pos:line="70" pos:column="26"/></block></for>
                    }<pos:position pos:line="71" pos:column="22"/></block></then>
                    <else pos:line="72" pos:column="21">else <block pos:line="72" pos:column="26">{
                        <comment type="block" pos:line="73" pos:column="25">/* Not matching against a regex */</comment>
                        <expr_stmt><expr><name pos:line="74" pos:column="25">val<pos:position pos:line="74" pos:column="28"/></name> <operator pos:line="74" pos:column="29">=<pos:position pos:line="74" pos:column="30"/></operator> <call><name pos:line="74" pos:column="31">apr_table_get<pos:position pos:line="74" pos:column="44"/></name><argument_list pos:line="74" pos:column="44">(<argument><expr><name><name pos:line="74" pos:column="45">r<pos:position pos:line="74" pos:column="46"/></name><operator pos:line="74" pos:column="46">-&gt;<pos:position pos:line="74" pos:column="51"/></operator><name pos:line="74" pos:column="48">headers_in<pos:position pos:line="74" pos:column="58"/></name></name></expr></argument>, <argument><expr><name><name pos:line="74" pos:column="60">b<pos:position pos:line="74" pos:column="61"/></name><operator pos:line="74" pos:column="61">-&gt;<pos:position pos:line="74" pos:column="66"/></operator><name pos:line="74" pos:column="63">name<pos:position pos:line="74" pos:column="67"/></name></name></expr></argument>)<pos:position pos:line="74" pos:column="68"/></argument_list></call></expr>;<pos:position pos:line="74" pos:column="69"/></expr_stmt>
                        <if pos:line="75" pos:column="25">if <condition pos:line="75" pos:column="28">(<expr><name pos:line="75" pos:column="29">val<pos:position pos:line="75" pos:column="32"/></name> <operator pos:line="75" pos:column="33">==<pos:position pos:line="75" pos:column="35"/></operator> <name pos:line="75" pos:column="36">NULL<pos:position pos:line="75" pos:column="40"/></name></expr>)<pos:position pos:line="75" pos:column="41"/></condition><then pos:line="75" pos:column="41"> <block pos:line="75" pos:column="42">{
                            <expr_stmt><expr><name pos:line="76" pos:column="29">val<pos:position pos:line="76" pos:column="32"/></name> <operator pos:line="76" pos:column="33">=<pos:position pos:line="76" pos:column="34"/></operator> <call><name pos:line="76" pos:column="35">apr_table_get<pos:position pos:line="76" pos:column="48"/></name><argument_list pos:line="76" pos:column="48">(<argument><expr><name><name pos:line="76" pos:column="49">r<pos:position pos:line="76" pos:column="50"/></name><operator pos:line="76" pos:column="50">-&gt;<pos:position pos:line="76" pos:column="55"/></operator><name pos:line="76" pos:column="52">subprocess_env<pos:position pos:line="76" pos:column="66"/></name></name></expr></argument>, <argument><expr><name><name pos:line="76" pos:column="68">b<pos:position pos:line="76" pos:column="69"/></name><operator pos:line="76" pos:column="69">-&gt;<pos:position pos:line="76" pos:column="74"/></operator><name pos:line="76" pos:column="71">name<pos:position pos:line="76" pos:column="75"/></name></name></expr></argument>)<pos:position pos:line="76" pos:column="76"/></argument_list></call></expr>;<pos:position pos:line="76" pos:column="77"/></expr_stmt>
                        }<pos:position pos:line="77" pos:column="26"/></block></then></if>
                    }<pos:position pos:line="78" pos:column="22"/></block></else></if>
                }<pos:position pos:line="79" pos:column="18"/></block></switch>
                <expr_stmt><expr><name pos:line="80" pos:column="17">val_len<pos:position pos:line="80" pos:column="24"/></name> <operator pos:line="80" pos:column="25">=<pos:position pos:line="80" pos:column="26"/></operator> <ternary><condition><expr><name pos:line="80" pos:column="27">val<pos:position pos:line="80" pos:column="30"/></name></expr> ?<pos:position pos:line="80" pos:column="32"/></condition><then pos:line="80" pos:column="32"> <expr><call><name pos:line="80" pos:column="33">strlen<pos:position pos:line="80" pos:column="39"/></name><argument_list pos:line="80" pos:column="39">(<argument><expr><name pos:line="80" pos:column="40">val<pos:position pos:line="80" pos:column="43"/></name></expr></argument>)<pos:position pos:line="80" pos:column="44"/></argument_list></call></expr> <pos:position pos:line="80" pos:column="45"/></then><else pos:line="80" pos:column="45">: <expr><literal type="number" pos:line="80" pos:column="47">0<pos:position pos:line="80" pos:column="48"/></literal></expr></else></ternary></expr>;<pos:position pos:line="80" pos:column="49"/></expr_stmt>
            }<pos:position pos:line="81" pos:column="14"/></block></then></if>

        }<pos:position pos:line="83" pos:column="10"/></block></then></if>

        <comment type="block" pos:line="85" pos:column="9">/*
         * A NULL value indicates that the header field or special entity
         * wasn't present or is undefined.  Represent that as an empty string
         * so that REs like "^$" will work and allow envariable setting
         * based on missing or empty field. This is also necessary to make
         * ap_pregsub work after evaluating an ap_expr_t which does set the
         * regexp backref data.
         */</comment>
        <if pos:line="93" pos:column="9">if <condition pos:line="93" pos:column="12">(<expr><name pos:line="93" pos:column="13">val<pos:position pos:line="93" pos:column="16"/></name> <operator pos:line="93" pos:column="17">==<pos:position pos:line="93" pos:column="19"/></operator> <name pos:line="93" pos:column="20">NULL<pos:position pos:line="93" pos:column="24"/></name></expr>)<pos:position pos:line="93" pos:column="25"/></condition><then pos:line="93" pos:column="25"> <block pos:line="93" pos:column="26">{
            <expr_stmt><expr><name pos:line="94" pos:column="13">val<pos:position pos:line="94" pos:column="16"/></name> <operator pos:line="94" pos:column="17">=<pos:position pos:line="94" pos:column="18"/></operator> <literal type="string" pos:line="94" pos:column="19">""<pos:position pos:line="94" pos:column="21"/></literal></expr>;<pos:position pos:line="94" pos:column="22"/></expr_stmt>
            <expr_stmt><expr><name pos:line="95" pos:column="13">val_len<pos:position pos:line="95" pos:column="20"/></name> <operator pos:line="95" pos:column="21">=<pos:position pos:line="95" pos:column="22"/></operator> <literal type="number" pos:line="95" pos:column="23">0<pos:position pos:line="95" pos:column="24"/></literal></expr>;<pos:position pos:line="95" pos:column="25"/></expr_stmt>
        }<pos:position pos:line="96" pos:column="10"/></block></then></if>

        <if pos:line="98" pos:column="9">if <condition pos:line="98" pos:column="12">(<expr><operator pos:line="98" pos:column="13">(<pos:position pos:line="98" pos:column="14"/></operator><name><name pos:line="98" pos:column="14">b<pos:position pos:line="98" pos:column="15"/></name><operator pos:line="98" pos:column="15">-&gt;<pos:position pos:line="98" pos:column="20"/></operator><name pos:line="98" pos:column="17">pattern<pos:position pos:line="98" pos:column="24"/></name></name> <operator pos:line="98" pos:column="25">&amp;&amp;<pos:position pos:line="98" pos:column="35"/></operator> <call><name pos:line="98" pos:column="28">apr_strmatch<pos:position pos:line="98" pos:column="40"/></name><argument_list pos:line="98" pos:column="40">(<argument><expr><name><name pos:line="98" pos:column="41">b<pos:position pos:line="98" pos:column="42"/></name><operator pos:line="98" pos:column="42">-&gt;<pos:position pos:line="98" pos:column="47"/></operator><name pos:line="98" pos:column="44">pattern<pos:position pos:line="98" pos:column="51"/></name></name></expr></argument>, <argument><expr><name pos:line="98" pos:column="53">val<pos:position pos:line="98" pos:column="56"/></name></expr></argument>, <argument><expr><name pos:line="98" pos:column="58">val_len<pos:position pos:line="98" pos:column="65"/></name></expr></argument>)<pos:position pos:line="98" pos:column="66"/></argument_list></call><operator pos:line="98" pos:column="66">)<pos:position pos:line="98" pos:column="67"/></operator> <operator pos:line="98" pos:column="68">||<pos:position pos:line="98" pos:column="70"/></operator>
            <operator pos:line="99" pos:column="13">(<pos:position pos:line="99" pos:column="14"/></operator><name><name pos:line="99" pos:column="14">b<pos:position pos:line="99" pos:column="15"/></name><operator pos:line="99" pos:column="15">-&gt;<pos:position pos:line="99" pos:column="20"/></operator><name pos:line="99" pos:column="17">preg<pos:position pos:line="99" pos:column="21"/></name></name> <operator pos:line="99" pos:column="22">&amp;&amp;<pos:position pos:line="99" pos:column="32"/></operator> <operator pos:line="99" pos:column="25">!<pos:position pos:line="99" pos:column="26"/></operator><call><name pos:line="99" pos:column="26">ap_regexec<pos:position pos:line="99" pos:column="36"/></name><argument_list pos:line="99" pos:column="36">(<argument><expr><name><name pos:line="99" pos:column="37">b<pos:position pos:line="99" pos:column="38"/></name><operator pos:line="99" pos:column="38">-&gt;<pos:position pos:line="99" pos:column="43"/></operator><name pos:line="99" pos:column="40">preg<pos:position pos:line="99" pos:column="44"/></name></name></expr></argument>, <argument><expr><name pos:line="99" pos:column="46">val<pos:position pos:line="99" pos:column="49"/></name></expr></argument>, <argument><expr><name pos:line="99" pos:column="51">AP_MAX_REG_MATCH<pos:position pos:line="99" pos:column="67"/></name></expr></argument>, <argument><expr><name pos:line="99" pos:column="69">regm<pos:position pos:line="99" pos:column="73"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="99" pos:column="75">0<pos:position pos:line="99" pos:column="76"/></literal></expr></argument>)<pos:position pos:line="99" pos:column="77"/></argument_list></call><operator pos:line="99" pos:column="77">)<pos:position pos:line="99" pos:column="78"/></operator> <operator pos:line="99" pos:column="79">||<pos:position pos:line="99" pos:column="81"/></operator>
            <operator pos:line="100" pos:column="13">(<pos:position pos:line="100" pos:column="14"/></operator><name><name pos:line="100" pos:column="14">b<pos:position pos:line="100" pos:column="15"/></name><operator pos:line="100" pos:column="15">-&gt;<pos:position pos:line="100" pos:column="20"/></operator><name pos:line="100" pos:column="17">expr<pos:position pos:line="100" pos:column="21"/></name></name> <operator pos:line="100" pos:column="22">&amp;&amp;<pos:position pos:line="100" pos:column="32"/></operator> <call><name pos:line="100" pos:column="25">ap_expr_exec_re<pos:position pos:line="100" pos:column="40"/></name><argument_list pos:line="100" pos:column="40">(<argument><expr><name pos:line="100" pos:column="41">r<pos:position pos:line="100" pos:column="42"/></name></expr></argument>, <argument><expr><name><name pos:line="100" pos:column="44">b<pos:position pos:line="100" pos:column="45"/></name><operator pos:line="100" pos:column="45">-&gt;<pos:position pos:line="100" pos:column="50"/></operator><name pos:line="100" pos:column="47">expr<pos:position pos:line="100" pos:column="51"/></name></name></expr></argument>, <argument><expr><name pos:line="100" pos:column="53">AP_MAX_REG_MATCH<pos:position pos:line="100" pos:column="69"/></name></expr></argument>, <argument><expr><name pos:line="100" pos:column="71">regm<pos:position pos:line="100" pos:column="75"/></name></expr></argument>, <argument><expr><operator pos:line="100" pos:column="77">&amp;<pos:position pos:line="100" pos:column="82"/></operator><name pos:line="100" pos:column="78">val<pos:position pos:line="100" pos:column="81"/></name></expr></argument>, <argument><expr><operator pos:line="100" pos:column="83">&amp;<pos:position pos:line="100" pos:column="88"/></operator><name pos:line="100" pos:column="84">err<pos:position pos:line="100" pos:column="87"/></name></expr></argument>)<pos:position pos:line="100" pos:column="88"/></argument_list></call> <operator pos:line="100" pos:column="89">&gt;<pos:position pos:line="100" pos:column="93"/></operator> <literal type="number" pos:line="100" pos:column="91">0<pos:position pos:line="100" pos:column="92"/></literal><operator pos:line="100" pos:column="92">)<pos:position pos:line="100" pos:column="93"/></operator></expr>)<pos:position pos:line="100" pos:column="94"/></condition><then pos:line="100" pos:column="94">
        <block pos:line="101" pos:column="9">{
            <decl_stmt><decl><type><specifier pos:line="102" pos:column="13">const<pos:position pos:line="102" pos:column="18"/></specifier> <name pos:line="102" pos:column="19">apr_array_header_t<pos:position pos:line="102" pos:column="37"/></name> <modifier pos:line="102" pos:column="38">*<pos:position pos:line="102" pos:column="39"/></modifier></type><name pos:line="102" pos:column="39">arr<pos:position pos:line="102" pos:column="42"/></name> <init pos:line="102" pos:column="43">= <expr><call><name pos:line="102" pos:column="45">apr_table_elts<pos:position pos:line="102" pos:column="59"/></name><argument_list pos:line="102" pos:column="59">(<argument><expr><name><name pos:line="102" pos:column="60">b<pos:position pos:line="102" pos:column="61"/></name><operator pos:line="102" pos:column="61">-&gt;<pos:position pos:line="102" pos:column="66"/></operator><name pos:line="102" pos:column="63">features<pos:position pos:line="102" pos:column="71"/></name></name></expr></argument>)<pos:position pos:line="102" pos:column="72"/></argument_list></call></expr></init></decl>;<pos:position pos:line="102" pos:column="73"/></decl_stmt>
            <expr_stmt><expr><name pos:line="103" pos:column="13">elts<pos:position pos:line="103" pos:column="17"/></name> <operator pos:line="103" pos:column="18">=<pos:position pos:line="103" pos:column="19"/></operator> <operator pos:line="103" pos:column="20">(<pos:position pos:line="103" pos:column="21"/></operator><specifier pos:line="103" pos:column="21">const<pos:position pos:line="103" pos:column="26"/></specifier> <name pos:line="103" pos:column="27">apr_table_entry_t<pos:position pos:line="103" pos:column="44"/></name> <operator pos:line="103" pos:column="45">*<pos:position pos:line="103" pos:column="46"/></operator><operator pos:line="103" pos:column="46">)<pos:position pos:line="103" pos:column="47"/></operator> <name><name pos:line="103" pos:column="48">arr<pos:position pos:line="103" pos:column="51"/></name><operator pos:line="103" pos:column="51">-&gt;<pos:position pos:line="103" pos:column="56"/></operator><name pos:line="103" pos:column="53">elts<pos:position pos:line="103" pos:column="57"/></name></name></expr>;<pos:position pos:line="103" pos:column="58"/></expr_stmt>

            <for pos:line="105" pos:column="13">for <control pos:line="105" pos:column="17">(<init><expr><name pos:line="105" pos:column="18">j<pos:position pos:line="105" pos:column="19"/></name> <operator pos:line="105" pos:column="20">=<pos:position pos:line="105" pos:column="21"/></operator> <literal type="number" pos:line="105" pos:column="22">0<pos:position pos:line="105" pos:column="23"/></literal></expr>;<pos:position pos:line="105" pos:column="24"/></init> <condition><expr><name pos:line="105" pos:column="25">j<pos:position pos:line="105" pos:column="26"/></name> <operator pos:line="105" pos:column="27">&lt;<pos:position pos:line="105" pos:column="31"/></operator> <name><name pos:line="105" pos:column="29">arr<pos:position pos:line="105" pos:column="32"/></name><operator pos:line="105" pos:column="32">-&gt;<pos:position pos:line="105" pos:column="37"/></operator><name pos:line="105" pos:column="34">nelts<pos:position pos:line="105" pos:column="39"/></name></name></expr>;<pos:position pos:line="105" pos:column="40"/></condition> <incr><expr><operator pos:line="105" pos:column="41">++<pos:position pos:line="105" pos:column="43"/></operator><name pos:line="105" pos:column="43">j<pos:position pos:line="105" pos:column="44"/></name></expr></incr>)<pos:position pos:line="105" pos:column="45"/></control> <block pos:line="105" pos:column="46">{
                <if pos:line="106" pos:column="17">if <condition pos:line="106" pos:column="20">(<expr><operator pos:line="106" pos:column="21">*<pos:position pos:line="106" pos:column="22"/></operator><operator pos:line="106" pos:column="22">(<pos:position pos:line="106" pos:column="23"/></operator><name><name pos:line="106" pos:column="23">elts<pos:position pos:line="106" pos:column="27"/></name><index pos:line="106" pos:column="27">[<expr><name pos:line="106" pos:column="28">j<pos:position pos:line="106" pos:column="29"/></name></expr>]<pos:position pos:line="106" pos:column="30"/></index></name><operator pos:line="106" pos:column="30">.<pos:position pos:line="106" pos:column="31"/></operator><name pos:line="106" pos:column="31">val<pos:position pos:line="106" pos:column="34"/></name><operator pos:line="106" pos:column="34">)<pos:position pos:line="106" pos:column="35"/></operator> <operator pos:line="106" pos:column="36">==<pos:position pos:line="106" pos:column="38"/></operator> <literal type="char" pos:line="106" pos:column="39">'!'<pos:position pos:line="106" pos:column="42"/></literal></expr>)<pos:position pos:line="106" pos:column="43"/></condition><then pos:line="106" pos:column="43"> <block pos:line="106" pos:column="44">{
                    <expr_stmt><expr><call><name pos:line="107" pos:column="21">apr_table_unset<pos:position pos:line="107" pos:column="36"/></name><argument_list pos:line="107" pos:column="36">(<argument><expr><name><name pos:line="107" pos:column="37">r<pos:position pos:line="107" pos:column="38"/></name><operator pos:line="107" pos:column="38">-&gt;<pos:position pos:line="107" pos:column="43"/></operator><name pos:line="107" pos:column="40">subprocess_env<pos:position pos:line="107" pos:column="54"/></name></name></expr></argument>, <argument><expr><name><name pos:line="107" pos:column="56">elts<pos:position pos:line="107" pos:column="60"/></name><index pos:line="107" pos:column="60">[<expr><name pos:line="107" pos:column="61">j<pos:position pos:line="107" pos:column="62"/></name></expr>]<pos:position pos:line="107" pos:column="63"/></index></name><operator pos:line="107" pos:column="63">.<pos:position pos:line="107" pos:column="64"/></operator><name pos:line="107" pos:column="64">key<pos:position pos:line="107" pos:column="67"/></name></expr></argument>)<pos:position pos:line="107" pos:column="68"/></argument_list></call></expr>;<pos:position pos:line="107" pos:column="69"/></expr_stmt>
                }<pos:position pos:line="108" pos:column="18"/></block></then>
                <else pos:line="109" pos:column="17">else <block pos:line="109" pos:column="22">{
                    <if pos:line="110" pos:column="21">if <condition pos:line="110" pos:column="24">(<expr><operator pos:line="110" pos:column="25">!<pos:position pos:line="110" pos:column="26"/></operator><name><name pos:line="110" pos:column="26">b<pos:position pos:line="110" pos:column="27"/></name><operator pos:line="110" pos:column="27">-&gt;<pos:position pos:line="110" pos:column="32"/></operator><name pos:line="110" pos:column="29">pattern<pos:position pos:line="110" pos:column="36"/></name></name></expr>)<pos:position pos:line="110" pos:column="37"/></condition><then pos:line="110" pos:column="37"> <block pos:line="110" pos:column="38">{
                        <decl_stmt><decl><type><name pos:line="111" pos:column="25">char<pos:position pos:line="111" pos:column="29"/></name> <modifier pos:line="111" pos:column="30">*<pos:position pos:line="111" pos:column="31"/></modifier></type><name pos:line="111" pos:column="31">replaced<pos:position pos:line="111" pos:column="39"/></name> <init pos:line="111" pos:column="40">= <expr><call><name pos:line="111" pos:column="42">ap_pregsub<pos:position pos:line="111" pos:column="52"/></name><argument_list pos:line="111" pos:column="52">(<argument><expr><name><name pos:line="111" pos:column="53">r<pos:position pos:line="111" pos:column="54"/></name><operator pos:line="111" pos:column="54">-&gt;<pos:position pos:line="111" pos:column="59"/></operator><name pos:line="111" pos:column="56">pool<pos:position pos:line="111" pos:column="60"/></name></name></expr></argument>, <argument><expr><name><name pos:line="111" pos:column="62">elts<pos:position pos:line="111" pos:column="66"/></name><index pos:line="111" pos:column="66">[<expr><name pos:line="111" pos:column="67">j<pos:position pos:line="111" pos:column="68"/></name></expr>]<pos:position pos:line="111" pos:column="69"/></index></name><operator pos:line="111" pos:column="69">.<pos:position pos:line="111" pos:column="70"/></operator><name pos:line="111" pos:column="70">val<pos:position pos:line="111" pos:column="73"/></name></expr></argument>, <argument><expr><name pos:line="111" pos:column="75">val<pos:position pos:line="111" pos:column="78"/></name></expr></argument>,
                                                    <argument><expr><name pos:line="112" pos:column="53">AP_MAX_REG_MATCH<pos:position pos:line="112" pos:column="69"/></name></expr></argument>, <argument><expr><name pos:line="112" pos:column="71">regm<pos:position pos:line="112" pos:column="75"/></name></expr></argument>)<pos:position pos:line="112" pos:column="76"/></argument_list></call></expr></init></decl>;<pos:position pos:line="112" pos:column="77"/></decl_stmt>
                        <if pos:line="113" pos:column="25">if <condition pos:line="113" pos:column="28">(<expr><name pos:line="113" pos:column="29">replaced<pos:position pos:line="113" pos:column="37"/></name></expr>)<pos:position pos:line="113" pos:column="38"/></condition><then pos:line="113" pos:column="38"> <block pos:line="113" pos:column="39">{
                            <expr_stmt><expr><call><name pos:line="114" pos:column="29">apr_table_setn<pos:position pos:line="114" pos:column="43"/></name><argument_list pos:line="114" pos:column="43">(<argument><expr><name><name pos:line="114" pos:column="44">r<pos:position pos:line="114" pos:column="45"/></name><operator pos:line="114" pos:column="45">-&gt;<pos:position pos:line="114" pos:column="50"/></operator><name pos:line="114" pos:column="47">subprocess_env<pos:position pos:line="114" pos:column="61"/></name></name></expr></argument>, <argument><expr><name><name pos:line="114" pos:column="63">elts<pos:position pos:line="114" pos:column="67"/></name><index pos:line="114" pos:column="67">[<expr><name pos:line="114" pos:column="68">j<pos:position pos:line="114" pos:column="69"/></name></expr>]<pos:position pos:line="114" pos:column="70"/></index></name><operator pos:line="114" pos:column="70">.<pos:position pos:line="114" pos:column="71"/></operator><name pos:line="114" pos:column="71">key<pos:position pos:line="114" pos:column="74"/></name></expr></argument>,
                                           <argument><expr><name pos:line="115" pos:column="44">replaced<pos:position pos:line="115" pos:column="52"/></name></expr></argument>)<pos:position pos:line="115" pos:column="53"/></argument_list></call></expr>;<pos:position pos:line="115" pos:column="54"/></expr_stmt>
                        }<pos:position pos:line="116" pos:column="26"/></block></then>
                        <else pos:line="117" pos:column="25">else <block pos:line="117" pos:column="30">{
                            <expr_stmt><expr><call><name pos:line="118" pos:column="29">ap_log_rerror<pos:position pos:line="118" pos:column="42"/></name><argument_list pos:line="118" pos:column="42">(<argument><expr><name pos:line="118" pos:column="43">APLOG_MARK<pos:position pos:line="118" pos:column="53"/></name></expr></argument>, <argument><expr><name pos:line="118" pos:column="55">APLOG_CRIT<pos:position pos:line="118" pos:column="65"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="118" pos:column="67">0<pos:position pos:line="118" pos:column="68"/></literal></expr></argument>, <argument><expr><name pos:line="118" pos:column="70">r<pos:position pos:line="118" pos:column="71"/></name></expr></argument>, <argument><expr><call><name pos:line="118" pos:column="73">APLOGNO<pos:position pos:line="118" pos:column="80"/></name><argument_list pos:line="118" pos:column="80">(<argument><expr><literal type="number" pos:line="118" pos:column="81">01505<pos:position pos:line="118" pos:column="86"/></literal></expr></argument>)<pos:position pos:line="118" pos:column="87"/></argument_list></call>
                                          <literal type="string" pos:line="119" pos:column="43">"Regular expression replacement "<pos:position pos:line="119" pos:column="76"/></literal>
                                          <literal type="string" pos:line="120" pos:column="43">"failed for '%s', value too long?"<pos:position pos:line="120" pos:column="77"/></literal></expr></argument>,
                                          <argument><expr><name><name pos:line="121" pos:column="43">elts<pos:position pos:line="121" pos:column="47"/></name><index pos:line="121" pos:column="47">[<expr><name pos:line="121" pos:column="48">j<pos:position pos:line="121" pos:column="49"/></name></expr>]<pos:position pos:line="121" pos:column="50"/></index></name><operator pos:line="121" pos:column="50">.<pos:position pos:line="121" pos:column="51"/></operator><name pos:line="121" pos:column="51">key<pos:position pos:line="121" pos:column="54"/></name></expr></argument>)<pos:position pos:line="121" pos:column="55"/></argument_list></call></expr>;<pos:position pos:line="121" pos:column="56"/></expr_stmt>
                            <return pos:line="122" pos:column="29">return <expr><name pos:line="122" pos:column="36">HTTP_INTERNAL_SERVER_ERROR<pos:position pos:line="122" pos:column="62"/></name></expr>;<pos:position pos:line="122" pos:column="63"/></return>
                        }<pos:position pos:line="123" pos:column="26"/></block></else></if>
                    }<pos:position pos:line="124" pos:column="22"/></block></then>
                    <else pos:line="125" pos:column="21">else <block pos:line="125" pos:column="26">{
                        <expr_stmt><expr><call><name pos:line="126" pos:column="25">apr_table_setn<pos:position pos:line="126" pos:column="39"/></name><argument_list pos:line="126" pos:column="39">(<argument><expr><name><name pos:line="126" pos:column="40">r<pos:position pos:line="126" pos:column="41"/></name><operator pos:line="126" pos:column="41">-&gt;<pos:position pos:line="126" pos:column="46"/></operator><name pos:line="126" pos:column="43">subprocess_env<pos:position pos:line="126" pos:column="57"/></name></name></expr></argument>, <argument><expr><name><name pos:line="126" pos:column="59">elts<pos:position pos:line="126" pos:column="63"/></name><index pos:line="126" pos:column="63">[<expr><name pos:line="126" pos:column="64">j<pos:position pos:line="126" pos:column="65"/></name></expr>]<pos:position pos:line="126" pos:column="66"/></index></name><operator pos:line="126" pos:column="66">.<pos:position pos:line="126" pos:column="67"/></operator><name pos:line="126" pos:column="67">key<pos:position pos:line="126" pos:column="70"/></name></expr></argument>,
                                       <argument><expr><name><name pos:line="127" pos:column="40">elts<pos:position pos:line="127" pos:column="44"/></name><index pos:line="127" pos:column="44">[<expr><name pos:line="127" pos:column="45">j<pos:position pos:line="127" pos:column="46"/></name></expr>]<pos:position pos:line="127" pos:column="47"/></index></name><operator pos:line="127" pos:column="47">.<pos:position pos:line="127" pos:column="48"/></operator><name pos:line="127" pos:column="48">val<pos:position pos:line="127" pos:column="51"/></name></expr></argument>)<pos:position pos:line="127" pos:column="52"/></argument_list></call></expr>;<pos:position pos:line="127" pos:column="53"/></expr_stmt>
                    }<pos:position pos:line="128" pos:column="22"/></block></else></if>
                }<pos:position pos:line="129" pos:column="18"/></block></else></if>
                <expr_stmt><expr><call><name pos:line="130" pos:column="17">ap_log_rerror<pos:position pos:line="130" pos:column="30"/></name><argument_list pos:line="130" pos:column="30">(<argument><expr><name pos:line="130" pos:column="31">APLOG_MARK<pos:position pos:line="130" pos:column="41"/></name></expr></argument>, <argument><expr><name pos:line="130" pos:column="43">APLOG_TRACE2<pos:position pos:line="130" pos:column="55"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="130" pos:column="57">0<pos:position pos:line="130" pos:column="58"/></literal></expr></argument>, <argument><expr><name pos:line="130" pos:column="60">r<pos:position pos:line="130" pos:column="61"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="130" pos:column="63">"Setting %s"<pos:position pos:line="130" pos:column="75"/></literal></expr></argument>,
                              <argument><expr><name><name pos:line="131" pos:column="31">elts<pos:position pos:line="131" pos:column="35"/></name><index pos:line="131" pos:column="35">[<expr><name pos:line="131" pos:column="36">j<pos:position pos:line="131" pos:column="37"/></name></expr>]<pos:position pos:line="131" pos:column="38"/></index></name><operator pos:line="131" pos:column="38">.<pos:position pos:line="131" pos:column="39"/></operator><name pos:line="131" pos:column="39">key<pos:position pos:line="131" pos:column="42"/></name></expr></argument>)<pos:position pos:line="131" pos:column="43"/></argument_list></call></expr>;<pos:position pos:line="131" pos:column="44"/></expr_stmt>
            }<pos:position pos:line="132" pos:column="14"/></block></for>
        }<pos:position pos:line="133" pos:column="10"/></block></then></if>
    }<pos:position pos:line="134" pos:column="6"/></block></for>

    <return pos:line="136" pos:column="5">return <expr><name pos:line="136" pos:column="12">DECLINED<pos:position pos:line="136" pos:column="20"/></name></expr>;<pos:position pos:line="136" pos:column="21"/></return>
}<pos:position pos:line="137" pos:column="2"/></block></function></unit>

<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/httpd/gumtree/httpd_repos_function_2361_httpd-2.4.17.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">apr_status_t<pos:position pos:line="1" pos:column="13"/></name></type> <name pos:line="1" pos:column="14">h2_request_write_header<pos:position pos:line="1" pos:column="37"/></name><parameter_list pos:line="1" pos:column="37">(<parameter><decl><type><name pos:line="1" pos:column="38">h2_request<pos:position pos:line="1" pos:column="48"/></name> <modifier pos:line="1" pos:column="49">*<pos:position pos:line="1" pos:column="50"/></modifier></type><name pos:line="1" pos:column="50">req<pos:position pos:line="1" pos:column="53"/></name></decl></parameter>,
                                     <parameter><decl><type><specifier pos:line="2" pos:column="38">const<pos:position pos:line="2" pos:column="43"/></specifier> <name pos:line="2" pos:column="44">char<pos:position pos:line="2" pos:column="48"/></name> <modifier pos:line="2" pos:column="49">*<pos:position pos:line="2" pos:column="50"/></modifier></type><name pos:line="2" pos:column="50">name<pos:position pos:line="2" pos:column="54"/></name></decl></parameter>, <parameter><decl><type><name pos:line="2" pos:column="56">size_t<pos:position pos:line="2" pos:column="62"/></name></type> <name pos:line="2" pos:column="63">nlen<pos:position pos:line="2" pos:column="67"/></name></decl></parameter>,
                                     <parameter><decl><type><specifier pos:line="3" pos:column="38">const<pos:position pos:line="3" pos:column="43"/></specifier> <name pos:line="3" pos:column="44">char<pos:position pos:line="3" pos:column="48"/></name> <modifier pos:line="3" pos:column="49">*<pos:position pos:line="3" pos:column="50"/></modifier></type><name pos:line="3" pos:column="50">value<pos:position pos:line="3" pos:column="55"/></name></decl></parameter>, <parameter><decl><type><name pos:line="3" pos:column="57">size_t<pos:position pos:line="3" pos:column="63"/></name></type> <name pos:line="3" pos:column="64">vlen<pos:position pos:line="3" pos:column="68"/></name></decl></parameter>,
                                     <parameter><decl><type><name pos:line="4" pos:column="38">h2_mplx<pos:position pos:line="4" pos:column="45"/></name> <modifier pos:line="4" pos:column="46">*<pos:position pos:line="4" pos:column="47"/></modifier></type><name pos:line="4" pos:column="47">m<pos:position pos:line="4" pos:column="48"/></name></decl></parameter>)<pos:position pos:line="4" pos:column="49"/></parameter_list>
<block pos:line="5" pos:column="1">{
    <decl_stmt><decl><type><name pos:line="6" pos:column="5">apr_status_t<pos:position pos:line="6" pos:column="17"/></name></type> <name pos:line="6" pos:column="18">status<pos:position pos:line="6" pos:column="24"/></name> <init pos:line="6" pos:column="25">= <expr><name pos:line="6" pos:column="27">APR_SUCCESS<pos:position pos:line="6" pos:column="38"/></name></expr></init></decl>;<pos:position pos:line="6" pos:column="39"/></decl_stmt>
    
    <if pos:line="8" pos:column="5">if <condition pos:line="8" pos:column="8">(<expr><name pos:line="8" pos:column="9">nlen<pos:position pos:line="8" pos:column="13"/></name> <operator pos:line="8" pos:column="14">&lt;=<pos:position pos:line="8" pos:column="19"/></operator> <literal type="number" pos:line="8" pos:column="17">0<pos:position pos:line="8" pos:column="18"/></literal></expr>)<pos:position pos:line="8" pos:column="19"/></condition><then pos:line="8" pos:column="19"> <block pos:line="8" pos:column="20">{
        <return pos:line="9" pos:column="9">return <expr><name pos:line="9" pos:column="16">status<pos:position pos:line="9" pos:column="22"/></name></expr>;<pos:position pos:line="9" pos:column="23"/></return>
    }<pos:position pos:line="10" pos:column="6"/></block></then></if>
    
    <if pos:line="12" pos:column="5">if <condition pos:line="12" pos:column="8">(<expr><name><name pos:line="12" pos:column="9">name<pos:position pos:line="12" pos:column="13"/></name><index pos:line="12" pos:column="13">[<expr><literal type="number" pos:line="12" pos:column="14">0<pos:position pos:line="12" pos:column="15"/></literal></expr>]<pos:position pos:line="12" pos:column="16"/></index></name> <operator pos:line="12" pos:column="17">==<pos:position pos:line="12" pos:column="19"/></operator> <literal type="char" pos:line="12" pos:column="20">':'<pos:position pos:line="12" pos:column="23"/></literal></expr>)<pos:position pos:line="12" pos:column="24"/></condition><then pos:line="12" pos:column="24"> <block pos:line="12" pos:column="25">{
        <comment type="block" pos:line="13" pos:column="9">/* pseudo header, see ch. 8.1.2.3, always should come first */</comment>
        <if pos:line="14" pos:column="9">if <condition pos:line="14" pos:column="12">(<expr><name><name pos:line="14" pos:column="13">req<pos:position pos:line="14" pos:column="16"/></name><operator pos:line="14" pos:column="16">-&gt;<pos:position pos:line="14" pos:column="21"/></operator><name pos:line="14" pos:column="18">to_h1<pos:position pos:line="14" pos:column="23"/></name></name></expr>)<pos:position pos:line="14" pos:column="24"/></condition><then pos:line="14" pos:column="24"> <block pos:line="14" pos:column="25">{
            <expr_stmt><expr><call><name pos:line="15" pos:column="13">ap_log_perror<pos:position pos:line="15" pos:column="26"/></name><argument_list pos:line="15" pos:column="26">(<argument><expr><name pos:line="15" pos:column="27">APLOG_MARK<pos:position pos:line="15" pos:column="37"/></name></expr></argument>, <argument><expr><name pos:line="15" pos:column="39">APLOG_ERR<pos:position pos:line="15" pos:column="48"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="15" pos:column="50">0<pos:position pos:line="15" pos:column="51"/></literal></expr></argument>, <argument><expr><name><name pos:line="15" pos:column="53">req<pos:position pos:line="15" pos:column="56"/></name><operator pos:line="15" pos:column="56">-&gt;<pos:position pos:line="15" pos:column="61"/></operator><name pos:line="15" pos:column="58">pool<pos:position pos:line="15" pos:column="62"/></name></name></expr></argument>,
                          <argument><expr><call><name pos:line="16" pos:column="27">APLOGNO<pos:position pos:line="16" pos:column="34"/></name><argument_list pos:line="16" pos:column="34">(<argument><expr><literal type="number" pos:line="16" pos:column="35">02917<pos:position pos:line="16" pos:column="40"/></literal></expr></argument>)<pos:position pos:line="16" pos:column="41"/></argument_list></call> 
                          <literal type="string" pos:line="17" pos:column="27">"h2_request(%d): pseudo header after request start"<pos:position pos:line="17" pos:column="78"/></literal></expr></argument>,
                          <argument><expr><name><name pos:line="18" pos:column="27">req<pos:position pos:line="18" pos:column="30"/></name><operator pos:line="18" pos:column="30">-&gt;<pos:position pos:line="18" pos:column="35"/></operator><name pos:line="18" pos:column="32">id<pos:position pos:line="18" pos:column="34"/></name></name></expr></argument>)<pos:position pos:line="18" pos:column="35"/></argument_list></call></expr>;<pos:position pos:line="18" pos:column="36"/></expr_stmt>
            <return pos:line="19" pos:column="13">return <expr><name pos:line="19" pos:column="20">APR_EGENERAL<pos:position pos:line="19" pos:column="32"/></name></expr>;<pos:position pos:line="19" pos:column="33"/></return>
        }<pos:position pos:line="20" pos:column="10"/></block></then></if>
        
        <if pos:line="22" pos:column="9">if <condition pos:line="22" pos:column="12">(<expr><name pos:line="22" pos:column="13">H2_HEADER_METHOD_LEN<pos:position pos:line="22" pos:column="33"/></name> <operator pos:line="22" pos:column="34">==<pos:position pos:line="22" pos:column="36"/></operator> <name pos:line="22" pos:column="37">nlen<pos:position pos:line="22" pos:column="41"/></name>
            <operator pos:line="23" pos:column="13">&amp;&amp;<pos:position pos:line="23" pos:column="23"/></operator> <operator pos:line="23" pos:column="16">!<pos:position pos:line="23" pos:column="17"/></operator><call><name pos:line="23" pos:column="17">strncmp<pos:position pos:line="23" pos:column="24"/></name><argument_list pos:line="23" pos:column="24">(<argument><expr><name pos:line="23" pos:column="25">H2_HEADER_METHOD<pos:position pos:line="23" pos:column="41"/></name></expr></argument>, <argument><expr><name pos:line="23" pos:column="43">name<pos:position pos:line="23" pos:column="47"/></name></expr></argument>, <argument><expr><name pos:line="23" pos:column="49">nlen<pos:position pos:line="23" pos:column="53"/></name></expr></argument>)<pos:position pos:line="23" pos:column="54"/></argument_list></call></expr>)<pos:position pos:line="23" pos:column="55"/></condition><then pos:line="23" pos:column="55"> <block pos:line="23" pos:column="56">{
            <expr_stmt><expr><name><name pos:line="24" pos:column="13">req<pos:position pos:line="24" pos:column="16"/></name><operator pos:line="24" pos:column="16">-&gt;<pos:position pos:line="24" pos:column="21"/></operator><name pos:line="24" pos:column="18">method<pos:position pos:line="24" pos:column="24"/></name></name> <operator pos:line="24" pos:column="25">=<pos:position pos:line="24" pos:column="26"/></operator> <call><name pos:line="24" pos:column="27">apr_pstrndup<pos:position pos:line="24" pos:column="39"/></name><argument_list pos:line="24" pos:column="39">(<argument><expr><name><name pos:line="24" pos:column="40">req<pos:position pos:line="24" pos:column="43"/></name><operator pos:line="24" pos:column="43">-&gt;<pos:position pos:line="24" pos:column="48"/></operator><name pos:line="24" pos:column="45">pool<pos:position pos:line="24" pos:column="49"/></name></name></expr></argument>, <argument><expr><name pos:line="24" pos:column="51">value<pos:position pos:line="24" pos:column="56"/></name></expr></argument>, <argument><expr><name pos:line="24" pos:column="58">vlen<pos:position pos:line="24" pos:column="62"/></name></expr></argument>)<pos:position pos:line="24" pos:column="63"/></argument_list></call></expr>;<pos:position pos:line="24" pos:column="64"/></expr_stmt>
        }<pos:position pos:line="25" pos:column="10"/></block></then>
        <elseif pos:line="26" pos:column="9">else <if pos:line="26" pos:column="14">if <condition pos:line="26" pos:column="17">(<expr><name pos:line="26" pos:column="18">H2_HEADER_SCHEME_LEN<pos:position pos:line="26" pos:column="38"/></name> <operator pos:line="26" pos:column="39">==<pos:position pos:line="26" pos:column="41"/></operator> <name pos:line="26" pos:column="42">nlen<pos:position pos:line="26" pos:column="46"/></name>
                 <operator pos:line="27" pos:column="18">&amp;&amp;<pos:position pos:line="27" pos:column="28"/></operator> <operator pos:line="27" pos:column="21">!<pos:position pos:line="27" pos:column="22"/></operator><call><name pos:line="27" pos:column="22">strncmp<pos:position pos:line="27" pos:column="29"/></name><argument_list pos:line="27" pos:column="29">(<argument><expr><name pos:line="27" pos:column="30">H2_HEADER_SCHEME<pos:position pos:line="27" pos:column="46"/></name></expr></argument>, <argument><expr><name pos:line="27" pos:column="48">name<pos:position pos:line="27" pos:column="52"/></name></expr></argument>, <argument><expr><name pos:line="27" pos:column="54">nlen<pos:position pos:line="27" pos:column="58"/></name></expr></argument>)<pos:position pos:line="27" pos:column="59"/></argument_list></call></expr>)<pos:position pos:line="27" pos:column="60"/></condition><then pos:line="27" pos:column="60"> <block pos:line="27" pos:column="61">{
            <expr_stmt><expr><name><name pos:line="28" pos:column="13">req<pos:position pos:line="28" pos:column="16"/></name><operator pos:line="28" pos:column="16">-&gt;<pos:position pos:line="28" pos:column="21"/></operator><name pos:line="28" pos:column="18">scheme<pos:position pos:line="28" pos:column="24"/></name></name> <operator pos:line="28" pos:column="25">=<pos:position pos:line="28" pos:column="26"/></operator> <call><name pos:line="28" pos:column="27">apr_pstrndup<pos:position pos:line="28" pos:column="39"/></name><argument_list pos:line="28" pos:column="39">(<argument><expr><name><name pos:line="28" pos:column="40">req<pos:position pos:line="28" pos:column="43"/></name><operator pos:line="28" pos:column="43">-&gt;<pos:position pos:line="28" pos:column="48"/></operator><name pos:line="28" pos:column="45">pool<pos:position pos:line="28" pos:column="49"/></name></name></expr></argument>, <argument><expr><name pos:line="28" pos:column="51">value<pos:position pos:line="28" pos:column="56"/></name></expr></argument>, <argument><expr><name pos:line="28" pos:column="58">vlen<pos:position pos:line="28" pos:column="62"/></name></expr></argument>)<pos:position pos:line="28" pos:column="63"/></argument_list></call></expr>;<pos:position pos:line="28" pos:column="64"/></expr_stmt>
        }<pos:position pos:line="29" pos:column="10"/></block></then></if></elseif>
        <elseif pos:line="30" pos:column="9">else <if pos:line="30" pos:column="14">if <condition pos:line="30" pos:column="17">(<expr><name pos:line="30" pos:column="18">H2_HEADER_PATH_LEN<pos:position pos:line="30" pos:column="36"/></name> <operator pos:line="30" pos:column="37">==<pos:position pos:line="30" pos:column="39"/></operator> <name pos:line="30" pos:column="40">nlen<pos:position pos:line="30" pos:column="44"/></name>
                 <operator pos:line="31" pos:column="18">&amp;&amp;<pos:position pos:line="31" pos:column="28"/></operator> <operator pos:line="31" pos:column="21">!<pos:position pos:line="31" pos:column="22"/></operator><call><name pos:line="31" pos:column="22">strncmp<pos:position pos:line="31" pos:column="29"/></name><argument_list pos:line="31" pos:column="29">(<argument><expr><name pos:line="31" pos:column="30">H2_HEADER_PATH<pos:position pos:line="31" pos:column="44"/></name></expr></argument>, <argument><expr><name pos:line="31" pos:column="46">name<pos:position pos:line="31" pos:column="50"/></name></expr></argument>, <argument><expr><name pos:line="31" pos:column="52">nlen<pos:position pos:line="31" pos:column="56"/></name></expr></argument>)<pos:position pos:line="31" pos:column="57"/></argument_list></call></expr>)<pos:position pos:line="31" pos:column="58"/></condition><then pos:line="31" pos:column="58"> <block pos:line="31" pos:column="59">{
            <expr_stmt><expr><name><name pos:line="32" pos:column="13">req<pos:position pos:line="32" pos:column="16"/></name><operator pos:line="32" pos:column="16">-&gt;<pos:position pos:line="32" pos:column="21"/></operator><name pos:line="32" pos:column="18">path<pos:position pos:line="32" pos:column="22"/></name></name> <operator pos:line="32" pos:column="23">=<pos:position pos:line="32" pos:column="24"/></operator> <call><name pos:line="32" pos:column="25">apr_pstrndup<pos:position pos:line="32" pos:column="37"/></name><argument_list pos:line="32" pos:column="37">(<argument><expr><name><name pos:line="32" pos:column="38">req<pos:position pos:line="32" pos:column="41"/></name><operator pos:line="32" pos:column="41">-&gt;<pos:position pos:line="32" pos:column="46"/></operator><name pos:line="32" pos:column="43">pool<pos:position pos:line="32" pos:column="47"/></name></name></expr></argument>, <argument><expr><name pos:line="32" pos:column="49">value<pos:position pos:line="32" pos:column="54"/></name></expr></argument>, <argument><expr><name pos:line="32" pos:column="56">vlen<pos:position pos:line="32" pos:column="60"/></name></expr></argument>)<pos:position pos:line="32" pos:column="61"/></argument_list></call></expr>;<pos:position pos:line="32" pos:column="62"/></expr_stmt>
        }<pos:position pos:line="33" pos:column="10"/></block></then></if></elseif>
        <elseif pos:line="34" pos:column="9">else <if pos:line="34" pos:column="14">if <condition pos:line="34" pos:column="17">(<expr><name pos:line="34" pos:column="18">H2_HEADER_AUTH_LEN<pos:position pos:line="34" pos:column="36"/></name> <operator pos:line="34" pos:column="37">==<pos:position pos:line="34" pos:column="39"/></operator> <name pos:line="34" pos:column="40">nlen<pos:position pos:line="34" pos:column="44"/></name>
                 <operator pos:line="35" pos:column="18">&amp;&amp;<pos:position pos:line="35" pos:column="28"/></operator> <operator pos:line="35" pos:column="21">!<pos:position pos:line="35" pos:column="22"/></operator><call><name pos:line="35" pos:column="22">strncmp<pos:position pos:line="35" pos:column="29"/></name><argument_list pos:line="35" pos:column="29">(<argument><expr><name pos:line="35" pos:column="30">H2_HEADER_AUTH<pos:position pos:line="35" pos:column="44"/></name></expr></argument>, <argument><expr><name pos:line="35" pos:column="46">name<pos:position pos:line="35" pos:column="50"/></name></expr></argument>, <argument><expr><name pos:line="35" pos:column="52">nlen<pos:position pos:line="35" pos:column="56"/></name></expr></argument>)<pos:position pos:line="35" pos:column="57"/></argument_list></call></expr>)<pos:position pos:line="35" pos:column="58"/></condition><then pos:line="35" pos:column="58"> <block pos:line="35" pos:column="59">{
            <expr_stmt><expr><name><name pos:line="36" pos:column="13">req<pos:position pos:line="36" pos:column="16"/></name><operator pos:line="36" pos:column="16">-&gt;<pos:position pos:line="36" pos:column="21"/></operator><name pos:line="36" pos:column="18">authority<pos:position pos:line="36" pos:column="27"/></name></name> <operator pos:line="36" pos:column="28">=<pos:position pos:line="36" pos:column="29"/></operator> <call><name pos:line="36" pos:column="30">apr_pstrndup<pos:position pos:line="36" pos:column="42"/></name><argument_list pos:line="36" pos:column="42">(<argument><expr><name><name pos:line="36" pos:column="43">req<pos:position pos:line="36" pos:column="46"/></name><operator pos:line="36" pos:column="46">-&gt;<pos:position pos:line="36" pos:column="51"/></operator><name pos:line="36" pos:column="48">pool<pos:position pos:line="36" pos:column="52"/></name></name></expr></argument>, <argument><expr><name pos:line="36" pos:column="54">value<pos:position pos:line="36" pos:column="59"/></name></expr></argument>, <argument><expr><name pos:line="36" pos:column="61">vlen<pos:position pos:line="36" pos:column="65"/></name></expr></argument>)<pos:position pos:line="36" pos:column="66"/></argument_list></call></expr>;<pos:position pos:line="36" pos:column="67"/></expr_stmt>
        }<pos:position pos:line="37" pos:column="10"/></block></then></if></elseif>
        <else pos:line="38" pos:column="9">else <block pos:line="38" pos:column="14">{
            <decl_stmt><decl><type><name pos:line="39" pos:column="13">char<pos:position pos:line="39" pos:column="17"/></name></type> <name><name pos:line="39" pos:column="18">buffer<pos:position pos:line="39" pos:column="24"/></name><index pos:line="39" pos:column="24">[<expr><literal type="number" pos:line="39" pos:column="25">32<pos:position pos:line="39" pos:column="27"/></literal></expr>]<pos:position pos:line="39" pos:column="28"/></index></name></decl>;<pos:position pos:line="39" pos:column="29"/></decl_stmt>
            <expr_stmt><expr><call><name pos:line="40" pos:column="13">memset<pos:position pos:line="40" pos:column="19"/></name><argument_list pos:line="40" pos:column="19">(<argument><expr><name pos:line="40" pos:column="20">buffer<pos:position pos:line="40" pos:column="26"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="40" pos:column="28">0<pos:position pos:line="40" pos:column="29"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="40" pos:column="31">32<pos:position pos:line="40" pos:column="33"/></literal></expr></argument>)<pos:position pos:line="40" pos:column="34"/></argument_list></call></expr>;<pos:position pos:line="40" pos:column="35"/></expr_stmt>
            <expr_stmt><expr><call><name pos:line="41" pos:column="13">strncpy<pos:position pos:line="41" pos:column="20"/></name><argument_list pos:line="41" pos:column="20">(<argument><expr><name pos:line="41" pos:column="21">buffer<pos:position pos:line="41" pos:column="27"/></name></expr></argument>, <argument><expr><name pos:line="41" pos:column="29">name<pos:position pos:line="41" pos:column="33"/></name></expr></argument>, <argument><expr><ternary><condition><expr><operator pos:line="41" pos:column="35">(<pos:position pos:line="41" pos:column="36"/></operator><name pos:line="41" pos:column="36">nlen<pos:position pos:line="41" pos:column="40"/></name> <operator pos:line="41" pos:column="41">&gt;<pos:position pos:line="41" pos:column="45"/></operator> <literal type="number" pos:line="41" pos:column="43">31<pos:position pos:line="41" pos:column="45"/></literal><operator pos:line="41" pos:column="45">)<pos:position pos:line="41" pos:column="46"/></operator></expr>?<pos:position pos:line="41" pos:column="47"/></condition><then pos:line="41" pos:column="47"> <expr><literal type="number" pos:line="41" pos:column="48">31<pos:position pos:line="41" pos:column="50"/></literal></expr> <pos:position pos:line="41" pos:column="51"/></then><else pos:line="41" pos:column="51">: <expr><name pos:line="41" pos:column="53">nlen<pos:position pos:line="41" pos:column="57"/></name></expr></else></ternary></expr></argument>)<pos:position pos:line="41" pos:column="58"/></argument_list></call></expr>;<pos:position pos:line="41" pos:column="59"/></expr_stmt>
            <expr_stmt><expr><call><name pos:line="42" pos:column="13">ap_log_perror<pos:position pos:line="42" pos:column="26"/></name><argument_list pos:line="42" pos:column="26">(<argument><expr><name pos:line="42" pos:column="27">APLOG_MARK<pos:position pos:line="42" pos:column="37"/></name></expr></argument>, <argument><expr><name pos:line="42" pos:column="39">APLOG_WARNING<pos:position pos:line="42" pos:column="52"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="42" pos:column="54">0<pos:position pos:line="42" pos:column="55"/></literal></expr></argument>, <argument><expr><name><name pos:line="42" pos:column="57">req<pos:position pos:line="42" pos:column="60"/></name><operator pos:line="42" pos:column="60">-&gt;<pos:position pos:line="42" pos:column="65"/></operator><name pos:line="42" pos:column="62">pool<pos:position pos:line="42" pos:column="66"/></name></name></expr></argument>,
                          <argument><expr><call><name pos:line="43" pos:column="27">APLOGNO<pos:position pos:line="43" pos:column="34"/></name><argument_list pos:line="43" pos:column="34">(<argument><expr><literal type="number" pos:line="43" pos:column="35">02954<pos:position pos:line="43" pos:column="40"/></literal></expr></argument>)<pos:position pos:line="43" pos:column="41"/></argument_list></call> 
                          <literal type="string" pos:line="44" pos:column="27">"h2_request(%d): ignoring unknown pseudo header %s"<pos:position pos:line="44" pos:column="78"/></literal></expr></argument>,
                          <argument><expr><name><name pos:line="45" pos:column="27">req<pos:position pos:line="45" pos:column="30"/></name><operator pos:line="45" pos:column="30">-&gt;<pos:position pos:line="45" pos:column="35"/></operator><name pos:line="45" pos:column="32">id<pos:position pos:line="45" pos:column="34"/></name></name></expr></argument>, <argument><expr><name pos:line="45" pos:column="36">buffer<pos:position pos:line="45" pos:column="42"/></name></expr></argument>)<pos:position pos:line="45" pos:column="43"/></argument_list></call></expr>;<pos:position pos:line="45" pos:column="44"/></expr_stmt>
        }<pos:position pos:line="46" pos:column="10"/></block></else></if>
    }<pos:position pos:line="47" pos:column="6"/></block></then>
    <else pos:line="48" pos:column="5">else <block pos:line="48" pos:column="10">{
        <comment type="block" pos:line="49" pos:column="9">/* non-pseudo header, append to work bucket of stream */</comment>
        <if pos:line="50" pos:column="9">if <condition pos:line="50" pos:column="12">(<expr><operator pos:line="50" pos:column="13">!<pos:position pos:line="50" pos:column="14"/></operator><name><name pos:line="50" pos:column="14">req<pos:position pos:line="50" pos:column="17"/></name><operator pos:line="50" pos:column="17">-&gt;<pos:position pos:line="50" pos:column="22"/></operator><name pos:line="50" pos:column="19">to_h1<pos:position pos:line="50" pos:column="24"/></name></name></expr>)<pos:position pos:line="50" pos:column="25"/></condition><then pos:line="50" pos:column="25"> <block pos:line="50" pos:column="26">{
            <expr_stmt><expr><name pos:line="51" pos:column="13">status<pos:position pos:line="51" pos:column="19"/></name> <operator pos:line="51" pos:column="20">=<pos:position pos:line="51" pos:column="21"/></operator> <call><name pos:line="51" pos:column="22">insert_request_line<pos:position pos:line="51" pos:column="41"/></name><argument_list pos:line="51" pos:column="41">(<argument><expr><name pos:line="51" pos:column="42">req<pos:position pos:line="51" pos:column="45"/></name></expr></argument>, <argument><expr><name pos:line="51" pos:column="47">m<pos:position pos:line="51" pos:column="48"/></name></expr></argument>)<pos:position pos:line="51" pos:column="49"/></argument_list></call></expr>;<pos:position pos:line="51" pos:column="50"/></expr_stmt>
            <if pos:line="52" pos:column="13">if <condition pos:line="52" pos:column="16">(<expr><name pos:line="52" pos:column="17">status<pos:position pos:line="52" pos:column="23"/></name> <operator pos:line="52" pos:column="24">!=<pos:position pos:line="52" pos:column="26"/></operator> <name pos:line="52" pos:column="27">APR_SUCCESS<pos:position pos:line="52" pos:column="38"/></name></expr>)<pos:position pos:line="52" pos:column="39"/></condition><then pos:line="52" pos:column="39"> <block pos:line="52" pos:column="40">{
                <return pos:line="53" pos:column="17">return <expr><name pos:line="53" pos:column="24">status<pos:position pos:line="53" pos:column="30"/></name></expr>;<pos:position pos:line="53" pos:column="31"/></return>
            }<pos:position pos:line="54" pos:column="14"/></block></then></if>
        }<pos:position pos:line="55" pos:column="10"/></block></then></if>
        
        <if pos:line="57" pos:column="9">if <condition pos:line="57" pos:column="12">(<expr><name pos:line="57" pos:column="13">status<pos:position pos:line="57" pos:column="19"/></name> <operator pos:line="57" pos:column="20">==<pos:position pos:line="57" pos:column="22"/></operator> <name pos:line="57" pos:column="23">APR_SUCCESS<pos:position pos:line="57" pos:column="34"/></name></expr>)<pos:position pos:line="57" pos:column="35"/></condition><then pos:line="57" pos:column="35"> <block pos:line="57" pos:column="36">{
            <expr_stmt><expr><name pos:line="58" pos:column="13">status<pos:position pos:line="58" pos:column="19"/></name> <operator pos:line="58" pos:column="20">=<pos:position pos:line="58" pos:column="21"/></operator> <call><name pos:line="58" pos:column="22">h2_to_h1_add_header<pos:position pos:line="58" pos:column="41"/></name><argument_list pos:line="58" pos:column="41">(<argument><expr><name><name pos:line="58" pos:column="42">req<pos:position pos:line="58" pos:column="45"/></name><operator pos:line="58" pos:column="45">-&gt;<pos:position pos:line="58" pos:column="50"/></operator><name pos:line="58" pos:column="47">to_h1<pos:position pos:line="58" pos:column="52"/></name></name></expr></argument>,
                                         <argument><expr><name pos:line="59" pos:column="42">name<pos:position pos:line="59" pos:column="46"/></name></expr></argument>, <argument><expr><name pos:line="59" pos:column="48">nlen<pos:position pos:line="59" pos:column="52"/></name></expr></argument>, <argument><expr><name pos:line="59" pos:column="54">value<pos:position pos:line="59" pos:column="59"/></name></expr></argument>, <argument><expr><name pos:line="59" pos:column="61">vlen<pos:position pos:line="59" pos:column="65"/></name></expr></argument>)<pos:position pos:line="59" pos:column="66"/></argument_list></call></expr>;<pos:position pos:line="59" pos:column="67"/></expr_stmt>
        }<pos:position pos:line="60" pos:column="10"/></block></then></if>
    }<pos:position pos:line="61" pos:column="6"/></block></else></if>
    
    <return pos:line="63" pos:column="5">return <expr><name pos:line="63" pos:column="12">status<pos:position pos:line="63" pos:column="18"/></name></expr>;<pos:position pos:line="63" pos:column="19"/></return>
}<pos:position pos:line="64" pos:column="2"/></block></function></unit>

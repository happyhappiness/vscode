<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/httpd/gumtree/httpd_repos_function_1764_httpd-2.2.15.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">apr_status_t<pos:position pos:line="1" pos:column="20"/></name></type> <name pos:line="1" pos:column="21">ap_cgi_build_command<pos:position pos:line="1" pos:column="41"/></name><parameter_list pos:line="1" pos:column="41">(<parameter><decl><type><specifier pos:line="1" pos:column="42">const<pos:position pos:line="1" pos:column="47"/></specifier> <name pos:line="1" pos:column="48">char<pos:position pos:line="1" pos:column="52"/></name> <modifier pos:line="1" pos:column="53">*<pos:position pos:line="1" pos:column="54"/></modifier><modifier pos:line="1" pos:column="54">*<pos:position pos:line="1" pos:column="55"/></modifier></type><name pos:line="1" pos:column="55">cmd<pos:position pos:line="1" pos:column="58"/></name></decl></parameter>, <parameter><decl><type><specifier pos:line="1" pos:column="60">const<pos:position pos:line="1" pos:column="65"/></specifier> <name pos:line="1" pos:column="66">char<pos:position pos:line="1" pos:column="70"/></name> <modifier pos:line="1" pos:column="71">*<pos:position pos:line="1" pos:column="72"/></modifier><modifier pos:line="1" pos:column="72">*<pos:position pos:line="1" pos:column="73"/></modifier><modifier pos:line="1" pos:column="73">*<pos:position pos:line="1" pos:column="74"/></modifier></type><name pos:line="1" pos:column="74">argv<pos:position pos:line="1" pos:column="78"/></name></decl></parameter>,
                                         <parameter><decl><type><name pos:line="2" pos:column="42">request_rec<pos:position pos:line="2" pos:column="53"/></name> <modifier pos:line="2" pos:column="54">*<pos:position pos:line="2" pos:column="55"/></modifier></type><name pos:line="2" pos:column="55">r<pos:position pos:line="2" pos:column="56"/></name></decl></parameter>, <parameter><decl><type><name pos:line="2" pos:column="58">apr_pool_t<pos:position pos:line="2" pos:column="68"/></name> <modifier pos:line="2" pos:column="69">*<pos:position pos:line="2" pos:column="70"/></modifier></type><name pos:line="2" pos:column="70">p<pos:position pos:line="2" pos:column="71"/></name></decl></parameter>,
                                         <parameter><decl><type><name pos:line="3" pos:column="42">cgi_exec_info_t<pos:position pos:line="3" pos:column="57"/></name> <modifier pos:line="3" pos:column="58">*<pos:position pos:line="3" pos:column="59"/></modifier></type><name pos:line="3" pos:column="59">e_info<pos:position pos:line="3" pos:column="65"/></name></decl></parameter>)<pos:position pos:line="3" pos:column="66"/></parameter_list>
<block pos:line="4" pos:column="1">{
    <decl_stmt><decl><type><name pos:line="5" pos:column="5">char<pos:position pos:line="5" pos:column="9"/></name> <modifier pos:line="5" pos:column="10">*<pos:position pos:line="5" pos:column="11"/></modifier></type><name pos:line="5" pos:column="11">ext<pos:position pos:line="5" pos:column="14"/></name> <init pos:line="5" pos:column="15">= <expr><name pos:line="5" pos:column="17">NULL<pos:position pos:line="5" pos:column="21"/></name></expr></init></decl>;<pos:position pos:line="5" pos:column="22"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="6" pos:column="5">char<pos:position pos:line="6" pos:column="9"/></name> <modifier pos:line="6" pos:column="10">*<pos:position pos:line="6" pos:column="11"/></modifier></type><name pos:line="6" pos:column="11">cmd_only<pos:position pos:line="6" pos:column="19"/></name></decl>, <modifier pos:line="6" pos:column="21">*<pos:position pos:line="6" pos:column="22"/></modifier><decl><type ref="prev"/><name pos:line="6" pos:column="22">ptr<pos:position pos:line="6" pos:column="25"/></name></decl>;<pos:position pos:line="6" pos:column="26"/></decl_stmt>
    <decl_stmt><decl><type><specifier pos:line="7" pos:column="5">const<pos:position pos:line="7" pos:column="10"/></specifier> <name pos:line="7" pos:column="11">char<pos:position pos:line="7" pos:column="15"/></name> <modifier pos:line="7" pos:column="16">*<pos:position pos:line="7" pos:column="17"/></modifier></type><name pos:line="7" pos:column="17">new_cmd<pos:position pos:line="7" pos:column="24"/></name></decl>;<pos:position pos:line="7" pos:column="25"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="8" pos:column="5">netware_dir_config<pos:position pos:line="8" pos:column="23"/></name> <modifier pos:line="8" pos:column="24">*<pos:position pos:line="8" pos:column="25"/></modifier></type><name pos:line="8" pos:column="25">d<pos:position pos:line="8" pos:column="26"/></name></decl>;<pos:position pos:line="8" pos:column="27"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="9" pos:column="5">apr_file_t<pos:position pos:line="9" pos:column="15"/></name> <modifier pos:line="9" pos:column="16">*<pos:position pos:line="9" pos:column="17"/></modifier></type><name pos:line="9" pos:column="17">fh<pos:position pos:line="9" pos:column="19"/></name></decl>;<pos:position pos:line="9" pos:column="20"/></decl_stmt>
    <decl_stmt><decl><type><specifier pos:line="10" pos:column="5">const<pos:position pos:line="10" pos:column="10"/></specifier> <name pos:line="10" pos:column="11">char<pos:position pos:line="10" pos:column="15"/></name> <modifier pos:line="10" pos:column="16">*<pos:position pos:line="10" pos:column="17"/></modifier></type><name pos:line="10" pos:column="17">args<pos:position pos:line="10" pos:column="21"/></name> <init pos:line="10" pos:column="22">= <expr><literal type="string" pos:line="10" pos:column="24">""<pos:position pos:line="10" pos:column="26"/></literal></expr></init></decl>;<pos:position pos:line="10" pos:column="27"/></decl_stmt>

    <expr_stmt><expr><name pos:line="12" pos:column="5">d<pos:position pos:line="12" pos:column="6"/></name> <operator pos:line="12" pos:column="7">=<pos:position pos:line="12" pos:column="8"/></operator> <operator pos:line="12" pos:column="9">(<pos:position pos:line="12" pos:column="10"/></operator><name pos:line="12" pos:column="10">netware_dir_config<pos:position pos:line="12" pos:column="28"/></name> <operator pos:line="12" pos:column="29">*<pos:position pos:line="12" pos:column="30"/></operator><operator pos:line="12" pos:column="30">)<pos:position pos:line="12" pos:column="31"/></operator><call><name pos:line="12" pos:column="31">ap_get_module_config<pos:position pos:line="12" pos:column="51"/></name><argument_list pos:line="12" pos:column="51">(<argument><expr><name><name pos:line="12" pos:column="52">r<pos:position pos:line="12" pos:column="53"/></name><operator pos:line="12" pos:column="53">-&gt;<pos:position pos:line="12" pos:column="58"/></operator><name pos:line="12" pos:column="55">per_dir_config<pos:position pos:line="12" pos:column="69"/></name></name></expr></argument>,
                                               <argument><expr><operator pos:line="13" pos:column="48">&amp;<pos:position pos:line="13" pos:column="53"/></operator><name pos:line="13" pos:column="49">netware_module<pos:position pos:line="13" pos:column="63"/></name></expr></argument>)<pos:position pos:line="13" pos:column="64"/></argument_list></call></expr>;<pos:position pos:line="13" pos:column="65"/></expr_stmt>

    <if pos:line="15" pos:column="5">if <condition pos:line="15" pos:column="8">(<expr><name><name pos:line="15" pos:column="9">e_info<pos:position pos:line="15" pos:column="15"/></name><operator pos:line="15" pos:column="15">-&gt;<pos:position pos:line="15" pos:column="20"/></operator><name pos:line="15" pos:column="17">process_cgi<pos:position pos:line="15" pos:column="28"/></name></name></expr>)<pos:position pos:line="15" pos:column="29"/></condition><then pos:line="15" pos:column="29"> <block pos:line="15" pos:column="30">{
        <comment type="block" pos:line="16" pos:column="9">/* Handle the complete file name, we DON'T want to follow suexec, since
         * an unrooted command is as predictable as shooting craps in Win32.
         *
         * Notice that unlike most mime extension parsing, we have to use the
         * win32 parsing here, therefore the final extension is the only one
         * we will consider
         */</comment>
        <expr_stmt><expr><operator pos:line="23" pos:column="9">*<pos:position pos:line="23" pos:column="10"/></operator><name pos:line="23" pos:column="10">cmd<pos:position pos:line="23" pos:column="13"/></name> <operator pos:line="23" pos:column="14">=<pos:position pos:line="23" pos:column="15"/></operator> <name><name pos:line="23" pos:column="16">r<pos:position pos:line="23" pos:column="17"/></name><operator pos:line="23" pos:column="17">-&gt;<pos:position pos:line="23" pos:column="22"/></operator><name pos:line="23" pos:column="19">filename<pos:position pos:line="23" pos:column="27"/></name></name></expr>;<pos:position pos:line="23" pos:column="28"/></expr_stmt>
        <if pos:line="24" pos:column="9">if <condition pos:line="24" pos:column="12">(<expr><name><name pos:line="24" pos:column="13">r<pos:position pos:line="24" pos:column="14"/></name><operator pos:line="24" pos:column="14">-&gt;<pos:position pos:line="24" pos:column="19"/></operator><name pos:line="24" pos:column="16">args<pos:position pos:line="24" pos:column="20"/></name></name> <operator pos:line="24" pos:column="21">&amp;&amp;<pos:position pos:line="24" pos:column="31"/></operator> <name><name pos:line="24" pos:column="24">r<pos:position pos:line="24" pos:column="25"/></name><operator pos:line="24" pos:column="25">-&gt;<pos:position pos:line="24" pos:column="30"/></operator><name pos:line="24" pos:column="27">args<pos:position pos:line="24" pos:column="31"/></name><index pos:line="24" pos:column="31">[<expr><literal type="number" pos:line="24" pos:column="32">0<pos:position pos:line="24" pos:column="33"/></literal></expr>]<pos:position pos:line="24" pos:column="34"/></index></name> <operator pos:line="24" pos:column="35">&amp;&amp;<pos:position pos:line="24" pos:column="45"/></operator> <operator pos:line="24" pos:column="38">!<pos:position pos:line="24" pos:column="39"/></operator><call><name pos:line="24" pos:column="39">ap_strchr_c<pos:position pos:line="24" pos:column="50"/></name><argument_list pos:line="24" pos:column="50">(<argument><expr><name><name pos:line="24" pos:column="51">r<pos:position pos:line="24" pos:column="52"/></name><operator pos:line="24" pos:column="52">-&gt;<pos:position pos:line="24" pos:column="57"/></operator><name pos:line="24" pos:column="54">args<pos:position pos:line="24" pos:column="58"/></name></name></expr></argument>, <argument><expr><literal type="char" pos:line="24" pos:column="60">'='<pos:position pos:line="24" pos:column="63"/></literal></expr></argument>)<pos:position pos:line="24" pos:column="64"/></argument_list></call></expr>)<pos:position pos:line="24" pos:column="65"/></condition><then pos:line="24" pos:column="65"> <block pos:line="24" pos:column="66">{
            <expr_stmt><expr><name pos:line="25" pos:column="13">args<pos:position pos:line="25" pos:column="17"/></name> <operator pos:line="25" pos:column="18">=<pos:position pos:line="25" pos:column="19"/></operator> <name><name pos:line="25" pos:column="20">r<pos:position pos:line="25" pos:column="21"/></name><operator pos:line="25" pos:column="21">-&gt;<pos:position pos:line="25" pos:column="26"/></operator><name pos:line="25" pos:column="23">args<pos:position pos:line="25" pos:column="27"/></name></name></expr>;<pos:position pos:line="25" pos:column="28"/></expr_stmt>
        }<pos:position pos:line="26" pos:column="10"/></block></then></if>
    }<pos:position pos:line="27" pos:column="6"/></block></then></if>

    <expr_stmt><expr><name pos:line="29" pos:column="5">cmd_only<pos:position pos:line="29" pos:column="13"/></name> <operator pos:line="29" pos:column="14">=<pos:position pos:line="29" pos:column="15"/></operator> <call><name pos:line="29" pos:column="16">apr_pstrdup<pos:position pos:line="29" pos:column="27"/></name><argument_list pos:line="29" pos:column="27">(<argument><expr><name pos:line="29" pos:column="28">p<pos:position pos:line="29" pos:column="29"/></name></expr></argument>, <argument><expr><operator pos:line="29" pos:column="31">*<pos:position pos:line="29" pos:column="32"/></operator><name pos:line="29" pos:column="32">cmd<pos:position pos:line="29" pos:column="35"/></name></expr></argument>)<pos:position pos:line="29" pos:column="36"/></argument_list></call></expr>;<pos:position pos:line="29" pos:column="37"/></expr_stmt>
    <expr_stmt><expr><name><name pos:line="30" pos:column="5">e_info<pos:position pos:line="30" pos:column="11"/></name><operator pos:line="30" pos:column="11">-&gt;<pos:position pos:line="30" pos:column="16"/></operator><name pos:line="30" pos:column="13">cmd_type<pos:position pos:line="30" pos:column="21"/></name></name> <operator pos:line="30" pos:column="22">=<pos:position pos:line="30" pos:column="23"/></operator> <name pos:line="30" pos:column="24">APR_PROGRAM<pos:position pos:line="30" pos:column="35"/></name></expr>;<pos:position pos:line="30" pos:column="36"/></expr_stmt>

    <comment type="block" pos:line="32" pos:column="5">/* truncate any arguments from the cmd */</comment>
    <for pos:line="33" pos:column="5">for <control pos:line="33" pos:column="9">(<init><expr><name pos:line="33" pos:column="10">ptr<pos:position pos:line="33" pos:column="13"/></name> <operator pos:line="33" pos:column="14">=<pos:position pos:line="33" pos:column="15"/></operator> <name pos:line="33" pos:column="16">cmd_only<pos:position pos:line="33" pos:column="24"/></name></expr>;<pos:position pos:line="33" pos:column="25"/></init> <condition><expr><operator pos:line="33" pos:column="26">*<pos:position pos:line="33" pos:column="27"/></operator><name pos:line="33" pos:column="27">ptr<pos:position pos:line="33" pos:column="30"/></name> <operator pos:line="33" pos:column="31">&amp;&amp;<pos:position pos:line="33" pos:column="41"/></operator> <operator pos:line="33" pos:column="34">(<pos:position pos:line="33" pos:column="35"/></operator><operator pos:line="33" pos:column="35">*<pos:position pos:line="33" pos:column="36"/></operator><name pos:line="33" pos:column="36">ptr<pos:position pos:line="33" pos:column="39"/></name> <operator pos:line="33" pos:column="40">!=<pos:position pos:line="33" pos:column="42"/></operator> <literal type="char" pos:line="33" pos:column="43">' '<pos:position pos:line="33" pos:column="46"/></literal><operator pos:line="33" pos:column="46">)<pos:position pos:line="33" pos:column="47"/></operator></expr>;<pos:position pos:line="33" pos:column="48"/></condition> <incr><expr><name pos:line="33" pos:column="49">ptr<pos:position pos:line="33" pos:column="52"/></name><operator pos:line="33" pos:column="52">++<pos:position pos:line="33" pos:column="54"/></operator></expr></incr>)<pos:position pos:line="33" pos:column="55"/></control><block type="pseudo"><empty_stmt pos:line="33" pos:column="55">;<pos:position pos:line="33" pos:column="56"/></empty_stmt></block></for>
    <expr_stmt><expr><operator pos:line="34" pos:column="5">*<pos:position pos:line="34" pos:column="6"/></operator><name pos:line="34" pos:column="6">ptr<pos:position pos:line="34" pos:column="9"/></name> <operator pos:line="34" pos:column="10">=<pos:position pos:line="34" pos:column="11"/></operator> <literal type="char" pos:line="34" pos:column="12">'\0'<pos:position pos:line="34" pos:column="16"/></literal></expr>;<pos:position pos:line="34" pos:column="17"/></expr_stmt>

    <comment type="block" pos:line="36" pos:column="5">/* Figure out what the extension is so that we can matche it. */</comment>
    <expr_stmt><expr><name pos:line="37" pos:column="5">ext<pos:position pos:line="37" pos:column="8"/></name> <operator pos:line="37" pos:column="9">=<pos:position pos:line="37" pos:column="10"/></operator> <call><name pos:line="37" pos:column="11">strrchr<pos:position pos:line="37" pos:column="18"/></name><argument_list pos:line="37" pos:column="18">(<argument><expr><call><name pos:line="37" pos:column="19">apr_filepath_name_get<pos:position pos:line="37" pos:column="40"/></name><argument_list pos:line="37" pos:column="40">(<argument><expr><name pos:line="37" pos:column="41">cmd_only<pos:position pos:line="37" pos:column="49"/></name></expr></argument>)<pos:position pos:line="37" pos:column="50"/></argument_list></call></expr></argument>, <argument><expr><literal type="char" pos:line="37" pos:column="52">'.'<pos:position pos:line="37" pos:column="55"/></literal></expr></argument>)<pos:position pos:line="37" pos:column="56"/></argument_list></call></expr>;<pos:position pos:line="37" pos:column="57"/></expr_stmt>

    <comment type="block" pos:line="39" pos:column="5">/* If there isn't an extension then give it an empty string */</comment>
    <if pos:line="40" pos:column="5">if <condition pos:line="40" pos:column="8">(<expr><operator pos:line="40" pos:column="9">!<pos:position pos:line="40" pos:column="10"/></operator><name pos:line="40" pos:column="10">ext<pos:position pos:line="40" pos:column="13"/></name></expr>)<pos:position pos:line="40" pos:column="14"/></condition><then pos:line="40" pos:column="14"> <block pos:line="40" pos:column="15">{
        <expr_stmt><expr><name pos:line="41" pos:column="9">ext<pos:position pos:line="41" pos:column="12"/></name> <operator pos:line="41" pos:column="13">=<pos:position pos:line="41" pos:column="14"/></operator> <literal type="string" pos:line="41" pos:column="15">""<pos:position pos:line="41" pos:column="17"/></literal></expr>;<pos:position pos:line="41" pos:column="18"/></expr_stmt>
    }<pos:position pos:line="42" pos:column="6"/></block></then></if>

    <comment type="block" pos:line="44" pos:column="5">/* eliminate the '.' if there is one */</comment>
    <if pos:line="45" pos:column="5">if <condition pos:line="45" pos:column="8">(<expr><operator pos:line="45" pos:column="9">*<pos:position pos:line="45" pos:column="10"/></operator><name pos:line="45" pos:column="10">ext<pos:position pos:line="45" pos:column="13"/></name> <operator pos:line="45" pos:column="14">==<pos:position pos:line="45" pos:column="16"/></operator> <literal type="char" pos:line="45" pos:column="17">'.'<pos:position pos:line="45" pos:column="20"/></literal></expr>)<pos:position pos:line="45" pos:column="21"/></condition><then pos:line="45" pos:column="21">
        <block type="pseudo"><expr_stmt><expr><operator pos:line="46" pos:column="9">++<pos:position pos:line="46" pos:column="11"/></operator><name pos:line="46" pos:column="11">ext<pos:position pos:line="46" pos:column="14"/></name></expr>;<pos:position pos:line="46" pos:column="15"/></expr_stmt></block></then></if>

    <comment type="block" pos:line="48" pos:column="5">/* check if we have a registered command for the extension*/</comment>
    <expr_stmt><expr><name pos:line="49" pos:column="5">new_cmd<pos:position pos:line="49" pos:column="12"/></name> <operator pos:line="49" pos:column="13">=<pos:position pos:line="49" pos:column="14"/></operator> <call><name pos:line="49" pos:column="15">apr_table_get<pos:position pos:line="49" pos:column="28"/></name><argument_list pos:line="49" pos:column="28">(<argument><expr><name><name pos:line="49" pos:column="29">d<pos:position pos:line="49" pos:column="30"/></name><operator pos:line="49" pos:column="30">-&gt;<pos:position pos:line="49" pos:column="35"/></operator><name pos:line="49" pos:column="32">file_type_handlers<pos:position pos:line="49" pos:column="50"/></name></name></expr></argument>, <argument><expr><name pos:line="49" pos:column="52">ext<pos:position pos:line="49" pos:column="55"/></name></expr></argument>)<pos:position pos:line="49" pos:column="56"/></argument_list></call></expr>;<pos:position pos:line="49" pos:column="57"/></expr_stmt>
    <expr_stmt><expr><name><name pos:line="50" pos:column="5">e_info<pos:position pos:line="50" pos:column="11"/></name><operator pos:line="50" pos:column="11">-&gt;<pos:position pos:line="50" pos:column="16"/></operator><name pos:line="50" pos:column="13">detached<pos:position pos:line="50" pos:column="21"/></name></name> <operator pos:line="50" pos:column="22">=<pos:position pos:line="50" pos:column="23"/></operator> <literal type="number" pos:line="50" pos:column="24">1<pos:position pos:line="50" pos:column="25"/></literal></expr>;<pos:position pos:line="50" pos:column="26"/></expr_stmt>
    <if pos:line="51" pos:column="5">if <condition pos:line="51" pos:column="8">(<expr><name pos:line="51" pos:column="9">new_cmd<pos:position pos:line="51" pos:column="16"/></name> <operator pos:line="51" pos:column="17">==<pos:position pos:line="51" pos:column="19"/></operator> <name pos:line="51" pos:column="20">NULL<pos:position pos:line="51" pos:column="24"/></name></expr>)<pos:position pos:line="51" pos:column="25"/></condition><then pos:line="51" pos:column="25"> <block pos:line="51" pos:column="26">{
        <expr_stmt><expr><call><name pos:line="52" pos:column="9">ap_log_rerror<pos:position pos:line="52" pos:column="22"/></name><argument_list pos:line="52" pos:column="22">(<argument><expr><name pos:line="52" pos:column="23">APLOG_MARK<pos:position pos:line="52" pos:column="33"/></name></expr></argument>, <argument><expr><name pos:line="52" pos:column="35">APLOG_ERR<pos:position pos:line="52" pos:column="44"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="52" pos:column="46">0<pos:position pos:line="52" pos:column="47"/></literal></expr></argument>, <argument><expr><name pos:line="52" pos:column="49">r<pos:position pos:line="52" pos:column="50"/></name></expr></argument>,
                  <argument><expr><literal type="string" pos:line="53" pos:column="19">"Could not find a command associated with the %s extension"<pos:position pos:line="53" pos:column="78"/></literal></expr></argument>, <argument><expr><name pos:line="53" pos:column="80">ext<pos:position pos:line="53" pos:column="83"/></name></expr></argument>)<pos:position pos:line="53" pos:column="84"/></argument_list></call></expr>;<pos:position pos:line="53" pos:column="85"/></expr_stmt>
        <return pos:line="54" pos:column="9">return <expr><name pos:line="54" pos:column="16">APR_EBADF<pos:position pos:line="54" pos:column="25"/></name></expr>;<pos:position pos:line="54" pos:column="26"/></return>
    }<pos:position pos:line="55" pos:column="6"/></block></then></if>
    <if pos:line="56" pos:column="5">if <condition pos:line="56" pos:column="8">(<expr><call><name pos:line="56" pos:column="9">stricmp<pos:position pos:line="56" pos:column="16"/></name><argument_list pos:line="56" pos:column="16">(<argument><expr><name pos:line="56" pos:column="17">new_cmd<pos:position pos:line="56" pos:column="24"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="56" pos:column="26">"OS"<pos:position pos:line="56" pos:column="30"/></literal></expr></argument>)<pos:position pos:line="56" pos:column="31"/></argument_list></call></expr>)<pos:position pos:line="56" pos:column="32"/></condition><then pos:line="56" pos:column="32"> <block pos:line="56" pos:column="33">{
        <comment type="block" pos:line="57" pos:column="9">/* If we have a registered command then add the file that was passed in as a
          parameter to the registered command. */</comment>
        <expr_stmt><expr><operator pos:line="59" pos:column="9">*<pos:position pos:line="59" pos:column="10"/></operator><name pos:line="59" pos:column="10">cmd<pos:position pos:line="59" pos:column="13"/></name> <operator pos:line="59" pos:column="14">=<pos:position pos:line="59" pos:column="15"/></operator> <call><name pos:line="59" pos:column="16">apr_pstrcat<pos:position pos:line="59" pos:column="27"/></name> <argument_list pos:line="59" pos:column="28">(<argument><expr><name pos:line="59" pos:column="29">p<pos:position pos:line="59" pos:column="30"/></name></expr></argument>, <argument><expr><name pos:line="59" pos:column="32">new_cmd<pos:position pos:line="59" pos:column="39"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="59" pos:column="41">" "<pos:position pos:line="59" pos:column="44"/></literal></expr></argument>, <argument><expr><name pos:line="59" pos:column="46">cmd_only<pos:position pos:line="59" pos:column="54"/></name></expr></argument>, <argument><expr><name pos:line="59" pos:column="56">NULL<pos:position pos:line="59" pos:column="60"/></name></expr></argument>)<pos:position pos:line="59" pos:column="61"/></argument_list></call></expr>;<pos:position pos:line="59" pos:column="62"/></expr_stmt>

        <comment type="block" pos:line="61" pos:column="9">/* Run in its own address space if specified */</comment>
        <if pos:line="62" pos:column="9">if<condition pos:line="62" pos:column="11">(<expr><call><name pos:line="62" pos:column="12">apr_table_get<pos:position pos:line="62" pos:column="25"/></name><argument_list pos:line="62" pos:column="25">(<argument><expr><name><name pos:line="62" pos:column="26">d<pos:position pos:line="62" pos:column="27"/></name><operator pos:line="62" pos:column="27">-&gt;<pos:position pos:line="62" pos:column="32"/></operator><name pos:line="62" pos:column="29">file_handler_mode<pos:position pos:line="62" pos:column="46"/></name></name></expr></argument>, <argument><expr><name pos:line="62" pos:column="48">ext<pos:position pos:line="62" pos:column="51"/></name></expr></argument>)<pos:position pos:line="62" pos:column="52"/></argument_list></call></expr>)<pos:position pos:line="62" pos:column="53"/></condition><then pos:line="62" pos:column="53">
            <block type="pseudo"><expr_stmt><expr><name><name pos:line="63" pos:column="13">e_info<pos:position pos:line="63" pos:column="19"/></name><operator pos:line="63" pos:column="19">-&gt;<pos:position pos:line="63" pos:column="24"/></operator><name pos:line="63" pos:column="21">addrspace<pos:position pos:line="63" pos:column="30"/></name></name> <operator pos:line="63" pos:column="31">=<pos:position pos:line="63" pos:column="32"/></operator> <literal type="number" pos:line="63" pos:column="33">1<pos:position pos:line="63" pos:column="34"/></literal></expr>;<pos:position pos:line="63" pos:column="35"/></expr_stmt></block></then></if>
    }<pos:position pos:line="64" pos:column="6"/></block></then></if>

    <comment type="block" pos:line="66" pos:column="5">/* Tokenize the full command string into its arguments */</comment>
    <expr_stmt><expr><call><name pos:line="67" pos:column="5">apr_tokenize_to_argv<pos:position pos:line="67" pos:column="25"/></name><argument_list pos:line="67" pos:column="25">(<argument><expr><operator pos:line="67" pos:column="26">*<pos:position pos:line="67" pos:column="27"/></operator><name pos:line="67" pos:column="27">cmd<pos:position pos:line="67" pos:column="30"/></name></expr></argument>, <argument><expr><operator pos:line="67" pos:column="32">(<pos:position pos:line="67" pos:column="33"/></operator><name pos:line="67" pos:column="33">char<pos:position pos:line="67" pos:column="37"/></name><operator pos:line="67" pos:column="37">*<pos:position pos:line="67" pos:column="38"/></operator><operator pos:line="67" pos:column="38">*<pos:position pos:line="67" pos:column="39"/></operator><operator pos:line="67" pos:column="39">*<pos:position pos:line="67" pos:column="40"/></operator><operator pos:line="67" pos:column="40">)<pos:position pos:line="67" pos:column="41"/></operator><name pos:line="67" pos:column="41">argv<pos:position pos:line="67" pos:column="45"/></name></expr></argument>, <argument><expr><name pos:line="67" pos:column="47">p<pos:position pos:line="67" pos:column="48"/></name></expr></argument>)<pos:position pos:line="67" pos:column="49"/></argument_list></call></expr>;<pos:position pos:line="67" pos:column="50"/></expr_stmt>

    <comment type="block" pos:line="69" pos:column="5">/* The first argument should be the executible */</comment>
    <expr_stmt><expr><operator pos:line="70" pos:column="5">*<pos:position pos:line="70" pos:column="6"/></operator><name pos:line="70" pos:column="6">cmd<pos:position pos:line="70" pos:column="9"/></name> <operator pos:line="70" pos:column="10">=<pos:position pos:line="70" pos:column="11"/></operator> <call><name pos:line="70" pos:column="12">ap_server_root_relative<pos:position pos:line="70" pos:column="35"/></name><argument_list pos:line="70" pos:column="35">(<argument><expr><name pos:line="70" pos:column="36">p<pos:position pos:line="70" pos:column="37"/></name></expr></argument>, <argument><expr><operator pos:line="70" pos:column="39">*<pos:position pos:line="70" pos:column="40"/></operator><name><name pos:line="70" pos:column="40">argv<pos:position pos:line="70" pos:column="44"/></name><index pos:line="70" pos:column="44">[<expr><literal type="number" pos:line="70" pos:column="45">0<pos:position pos:line="70" pos:column="46"/></literal></expr>]<pos:position pos:line="70" pos:column="47"/></index></name></expr></argument>)<pos:position pos:line="70" pos:column="48"/></argument_list></call></expr>;<pos:position pos:line="70" pos:column="49"/></expr_stmt>

    <return pos:line="72" pos:column="5">return <expr><name pos:line="72" pos:column="12">APR_SUCCESS<pos:position pos:line="72" pos:column="23"/></name></expr>;<pos:position pos:line="72" pos:column="24"/></return>
}<pos:position pos:line="73" pos:column="2"/></block></function></unit>

<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/httpd/gumtree/httpd_repos_function_795_httpd-2.3.8.cpp" pos:tabs="8"><function><type><specifier pos:line="1" pos:column="1">const<pos:position pos:line="1" pos:column="6"/></specifier> <name pos:line="1" pos:column="7">char<pos:position pos:line="1" pos:column="11"/></name> <modifier pos:line="1" pos:column="12">*<pos:position pos:line="1" pos:column="13"/></modifier></type><name pos:line="1" pos:column="13">ssl_cmd_SSLFIPS<pos:position pos:line="1" pos:column="28"/></name><parameter_list pos:line="1" pos:column="28">(<parameter><decl><type><name pos:line="1" pos:column="29">cmd_parms<pos:position pos:line="1" pos:column="38"/></name> <modifier pos:line="1" pos:column="39">*<pos:position pos:line="1" pos:column="40"/></modifier></type><name pos:line="1" pos:column="40">cmd<pos:position pos:line="1" pos:column="43"/></name></decl></parameter>, <parameter><decl><type><name pos:line="1" pos:column="45">void<pos:position pos:line="1" pos:column="49"/></name> <modifier pos:line="1" pos:column="50">*<pos:position pos:line="1" pos:column="51"/></modifier></type><name pos:line="1" pos:column="51">dcfg<pos:position pos:line="1" pos:column="55"/></name></decl></parameter>, <parameter><decl><type><name pos:line="1" pos:column="57">int<pos:position pos:line="1" pos:column="60"/></name></type> <name pos:line="1" pos:column="61">flag<pos:position pos:line="1" pos:column="65"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="66"/></parameter_list>
<block pos:line="2" pos:column="1">{
<cpp:ifdef pos:line="3" pos:column="1">#<cpp:directive pos:line="3" pos:column="2">ifdef<pos:position pos:line="3" pos:column="7"/></cpp:directive> <name pos:line="3" pos:column="8">HAVE_FIPS<pos:position pos:line="3" pos:column="17"/></name></cpp:ifdef>
    <decl_stmt><decl><type><name pos:line="4" pos:column="5">SSLSrvConfigRec<pos:position pos:line="4" pos:column="20"/></name> <modifier pos:line="4" pos:column="21">*<pos:position pos:line="4" pos:column="22"/></modifier></type><name pos:line="4" pos:column="22">sc<pos:position pos:line="4" pos:column="24"/></name> <init pos:line="4" pos:column="25">= <expr><call><name pos:line="4" pos:column="27">mySrvConfig<pos:position pos:line="4" pos:column="38"/></name><argument_list pos:line="4" pos:column="38">(<argument><expr><name><name pos:line="4" pos:column="39">cmd<pos:position pos:line="4" pos:column="42"/></name><operator pos:line="4" pos:column="42">-&gt;<pos:position pos:line="4" pos:column="47"/></operator><name pos:line="4" pos:column="44">server<pos:position pos:line="4" pos:column="50"/></name></name></expr></argument>)<pos:position pos:line="4" pos:column="51"/></argument_list></call></expr></init></decl>;<pos:position pos:line="4" pos:column="52"/></decl_stmt>
<cpp:endif pos:line="5" pos:column="1">#<cpp:directive pos:line="5" pos:column="2">endif<pos:position pos:line="5" pos:column="7"/></cpp:directive></cpp:endif>
    <decl_stmt><decl><type><specifier pos:line="6" pos:column="5">const<pos:position pos:line="6" pos:column="10"/></specifier> <name pos:line="6" pos:column="11">char<pos:position pos:line="6" pos:column="15"/></name> <modifier pos:line="6" pos:column="16">*<pos:position pos:line="6" pos:column="17"/></modifier></type><name pos:line="6" pos:column="17">err<pos:position pos:line="6" pos:column="20"/></name></decl>;<pos:position pos:line="6" pos:column="21"/></decl_stmt>

    <if pos:line="8" pos:column="5">if <condition pos:line="8" pos:column="8">(<expr><operator pos:line="8" pos:column="9">(<pos:position pos:line="8" pos:column="10"/></operator><name pos:line="8" pos:column="10">err<pos:position pos:line="8" pos:column="13"/></name> <operator pos:line="8" pos:column="14">=<pos:position pos:line="8" pos:column="15"/></operator> <call><name pos:line="8" pos:column="16">ap_check_cmd_context<pos:position pos:line="8" pos:column="36"/></name><argument_list pos:line="8" pos:column="36">(<argument><expr><name pos:line="8" pos:column="37">cmd<pos:position pos:line="8" pos:column="40"/></name></expr></argument>, <argument><expr><name pos:line="8" pos:column="42">GLOBAL_ONLY<pos:position pos:line="8" pos:column="53"/></name></expr></argument>)<pos:position pos:line="8" pos:column="54"/></argument_list></call><operator pos:line="8" pos:column="54">)<pos:position pos:line="8" pos:column="55"/></operator></expr>)<pos:position pos:line="8" pos:column="56"/></condition><then pos:line="8" pos:column="56"> <block pos:line="8" pos:column="57">{
        <return pos:line="9" pos:column="9">return <expr><name pos:line="9" pos:column="16">err<pos:position pos:line="9" pos:column="19"/></name></expr>;<pos:position pos:line="9" pos:column="20"/></return>
    }<pos:position pos:line="10" pos:column="6"/></block></then></if>

<cpp:ifdef pos:line="12" pos:column="1">#<cpp:directive pos:line="12" pos:column="2">ifdef<pos:position pos:line="12" pos:column="7"/></cpp:directive> <name pos:line="12" pos:column="8">HAVE_FIPS<pos:position pos:line="12" pos:column="17"/></name></cpp:ifdef>
    <if pos:line="13" pos:column="5">if <condition pos:line="13" pos:column="8">(<expr><operator pos:line="13" pos:column="9">(<pos:position pos:line="13" pos:column="10"/></operator><name><name pos:line="13" pos:column="10">sc<pos:position pos:line="13" pos:column="12"/></name><operator pos:line="13" pos:column="12">-&gt;<pos:position pos:line="13" pos:column="17"/></operator><name pos:line="13" pos:column="14">fips<pos:position pos:line="13" pos:column="18"/></name></name> <operator pos:line="13" pos:column="19">!=<pos:position pos:line="13" pos:column="21"/></operator> <name pos:line="13" pos:column="22">UNSET<pos:position pos:line="13" pos:column="27"/></name><operator pos:line="13" pos:column="27">)<pos:position pos:line="13" pos:column="28"/></operator> <operator pos:line="13" pos:column="29">&amp;&amp;<pos:position pos:line="13" pos:column="39"/></operator> <operator pos:line="13" pos:column="32">(<pos:position pos:line="13" pos:column="33"/></operator><name><name pos:line="13" pos:column="33">sc<pos:position pos:line="13" pos:column="35"/></name><operator pos:line="13" pos:column="35">-&gt;<pos:position pos:line="13" pos:column="40"/></operator><name pos:line="13" pos:column="37">fips<pos:position pos:line="13" pos:column="41"/></name></name> <operator pos:line="13" pos:column="42">!=<pos:position pos:line="13" pos:column="44"/></operator> <call pos:line="13" pos:column="45">(<name pos:line="13" pos:column="46">BOOL<pos:position pos:line="13" pos:column="50"/></name>)<argument_list pos:line="13" pos:column="51">(<argument><expr><ternary><condition><expr><name pos:line="13" pos:column="52">flag<pos:position pos:line="13" pos:column="56"/></name></expr> ?<pos:position pos:line="13" pos:column="58"/></condition><then pos:line="13" pos:column="58"> <expr><name pos:line="13" pos:column="59">TRUE<pos:position pos:line="13" pos:column="63"/></name></expr> <pos:position pos:line="13" pos:column="64"/></then><else pos:line="13" pos:column="64">: <expr><name pos:line="13" pos:column="66">FALSE<pos:position pos:line="13" pos:column="71"/></name></expr></else></ternary></expr></argument>)<pos:position pos:line="13" pos:column="72"/></argument_list></call><operator pos:line="13" pos:column="72">)<pos:position pos:line="13" pos:column="73"/></operator></expr>)<pos:position pos:line="13" pos:column="74"/></condition><then pos:line="13" pos:column="74">
        <block type="pseudo"><return pos:line="14" pos:column="9">return <expr><literal type="string" pos:line="14" pos:column="16">"Conflicting SSLFIPS options, cannot be both On and Off"<pos:position pos:line="14" pos:column="72"/></literal></expr>;<pos:position pos:line="14" pos:column="73"/></return></block></then></if>
    <expr_stmt><expr><name><name pos:line="15" pos:column="5">sc<pos:position pos:line="15" pos:column="7"/></name><operator pos:line="15" pos:column="7">-&gt;<pos:position pos:line="15" pos:column="12"/></operator><name pos:line="15" pos:column="9">fips<pos:position pos:line="15" pos:column="13"/></name></name> <operator pos:line="15" pos:column="14">=<pos:position pos:line="15" pos:column="15"/></operator> <ternary><condition><expr><name pos:line="15" pos:column="16">flag<pos:position pos:line="15" pos:column="20"/></name></expr> ?<pos:position pos:line="15" pos:column="22"/></condition><then pos:line="15" pos:column="22"> <expr><name pos:line="15" pos:column="23">TRUE<pos:position pos:line="15" pos:column="27"/></name></expr> <pos:position pos:line="15" pos:column="28"/></then><else pos:line="15" pos:column="28">: <expr><name pos:line="15" pos:column="30">FALSE<pos:position pos:line="15" pos:column="35"/></name></expr></else></ternary></expr>;<pos:position pos:line="15" pos:column="36"/></expr_stmt>
<cpp:else pos:line="16" pos:column="1">#<cpp:directive pos:line="16" pos:column="2">else<pos:position pos:line="16" pos:column="6"/></cpp:directive></cpp:else>
    <if pos:line="17" pos:column="5">if <condition pos:line="17" pos:column="8">(<expr><name pos:line="17" pos:column="9">flag<pos:position pos:line="17" pos:column="13"/></name></expr>)<pos:position pos:line="17" pos:column="14"/></condition><then pos:line="17" pos:column="14">
        <block type="pseudo"><return pos:line="18" pos:column="9">return <expr><literal type="string" pos:line="18" pos:column="16">"SSLFIPS invalid, rebuild httpd and openssl compiled for FIPS"<pos:position pos:line="18" pos:column="78"/></literal></expr>;<pos:position pos:line="18" pos:column="79"/></return></block></then></if>
<cpp:endif pos:line="19" pos:column="1">#<cpp:directive pos:line="19" pos:column="2">endif<pos:position pos:line="19" pos:column="7"/></cpp:directive></cpp:endif>

    <return pos:line="21" pos:column="5">return <expr><name pos:line="21" pos:column="12">NULL<pos:position pos:line="21" pos:column="16"/></name></expr>;<pos:position pos:line="21" pos:column="17"/></return>
}<pos:position pos:line="22" pos:column="2"/></block></function></unit>

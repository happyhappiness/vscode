<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/httpd/gumtree/httpd_function_4084.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">int<pos:position pos:line="1" pos:column="11"/></name></type> <name pos:line="1" pos:column="12">uncompress<pos:position pos:line="1" pos:column="22"/></name><parameter_list pos:line="1" pos:column="22">(<parameter><decl><type><name pos:line="1" pos:column="23">request_rec<pos:position pos:line="1" pos:column="34"/></name> <modifier pos:line="1" pos:column="35">*<pos:position pos:line="1" pos:column="36"/></modifier></type><name pos:line="1" pos:column="36">r<pos:position pos:line="1" pos:column="37"/></name></decl></parameter>, <parameter><decl><type><name pos:line="1" pos:column="39">int<pos:position pos:line="1" pos:column="42"/></name></type> <name pos:line="1" pos:column="43">method<pos:position pos:line="1" pos:column="49"/></name></decl></parameter>,
                      <parameter><decl><type><name pos:line="2" pos:column="23">unsigned<pos:position pos:line="2" pos:column="31"/></name> <name pos:line="2" pos:column="32">char<pos:position pos:line="2" pos:column="36"/></name> <modifier pos:line="2" pos:column="37">*<pos:position pos:line="2" pos:column="38"/></modifier><modifier pos:line="2" pos:column="38">*<pos:position pos:line="2" pos:column="39"/></modifier></type><name pos:line="2" pos:column="39">newch<pos:position pos:line="2" pos:column="44"/></name></decl></parameter>, <parameter><decl><type><name pos:line="2" pos:column="46">apr_size_t<pos:position pos:line="2" pos:column="56"/></name></type> <name pos:line="2" pos:column="57">n<pos:position pos:line="2" pos:column="58"/></name></decl></parameter>)<pos:position pos:line="2" pos:column="59"/></parameter_list>
<block pos:line="3" pos:column="1">{
    <decl_stmt><decl><type><name><name pos:line="4" pos:column="5">struct<pos:position pos:line="4" pos:column="11"/></name> <name pos:line="4" pos:column="12">uncompress_parms<pos:position pos:line="4" pos:column="28"/></name></name></type> <name pos:line="4" pos:column="29">parm<pos:position pos:line="4" pos:column="33"/></name></decl>;<pos:position pos:line="4" pos:column="34"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="5" pos:column="5">apr_file_t<pos:position pos:line="5" pos:column="15"/></name> <modifier pos:line="5" pos:column="16">*<pos:position pos:line="5" pos:column="17"/></modifier></type><name pos:line="5" pos:column="17">pipe_out<pos:position pos:line="5" pos:column="25"/></name> <init pos:line="5" pos:column="26">= <expr><name pos:line="5" pos:column="28">NULL<pos:position pos:line="5" pos:column="32"/></name></expr></init></decl>;<pos:position pos:line="5" pos:column="33"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="6" pos:column="5">apr_pool_t<pos:position pos:line="6" pos:column="15"/></name> <modifier pos:line="6" pos:column="16">*<pos:position pos:line="6" pos:column="17"/></modifier></type><name pos:line="6" pos:column="17">sub_context<pos:position pos:line="6" pos:column="28"/></name></decl>;<pos:position pos:line="6" pos:column="29"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="7" pos:column="5">apr_status_t<pos:position pos:line="7" pos:column="17"/></name></type> <name pos:line="7" pos:column="18">rv<pos:position pos:line="7" pos:column="20"/></name></decl>;<pos:position pos:line="7" pos:column="21"/></decl_stmt>

    <expr_stmt><expr><name><name pos:line="9" pos:column="5">parm<pos:position pos:line="9" pos:column="9"/></name><operator pos:line="9" pos:column="9">.<pos:position pos:line="9" pos:column="10"/></operator><name pos:line="9" pos:column="10">r<pos:position pos:line="9" pos:column="11"/></name></name> <operator pos:line="9" pos:column="12">=<pos:position pos:line="9" pos:column="13"/></operator> <name pos:line="9" pos:column="14">r<pos:position pos:line="9" pos:column="15"/></name></expr>;<pos:position pos:line="9" pos:column="16"/></expr_stmt>
    <expr_stmt><expr><name><name pos:line="10" pos:column="5">parm<pos:position pos:line="10" pos:column="9"/></name><operator pos:line="10" pos:column="9">.<pos:position pos:line="10" pos:column="10"/></operator><name pos:line="10" pos:column="10">method<pos:position pos:line="10" pos:column="16"/></name></name> <operator pos:line="10" pos:column="17">=<pos:position pos:line="10" pos:column="18"/></operator> <name pos:line="10" pos:column="19">method<pos:position pos:line="10" pos:column="25"/></name></expr>;<pos:position pos:line="10" pos:column="26"/></expr_stmt>

    <comment type="block" pos:line="12" pos:column="5">/* We make a sub_pool so that we can collect our child early, otherwise
     * there are cases (i.e. generating directory indicies with mod_autoindex)
     * where we would end up with LOTS of zombies.
     */</comment>
    <if pos:line="16" pos:column="5">if <condition pos:line="16" pos:column="8">(<expr><call><name pos:line="16" pos:column="9">apr_pool_create<pos:position pos:line="16" pos:column="24"/></name><argument_list pos:line="16" pos:column="24">(<argument><expr><operator pos:line="16" pos:column="25">&amp;<pos:position pos:line="16" pos:column="30"/></operator><name pos:line="16" pos:column="26">sub_context<pos:position pos:line="16" pos:column="37"/></name></expr></argument>, <argument><expr><name><name pos:line="16" pos:column="39">r<pos:position pos:line="16" pos:column="40"/></name><operator pos:line="16" pos:column="40">-&gt;<pos:position pos:line="16" pos:column="45"/></operator><name pos:line="16" pos:column="42">pool<pos:position pos:line="16" pos:column="46"/></name></name></expr></argument>)<pos:position pos:line="16" pos:column="47"/></argument_list></call> <operator pos:line="16" pos:column="48">!=<pos:position pos:line="16" pos:column="50"/></operator> <name pos:line="16" pos:column="51">APR_SUCCESS<pos:position pos:line="16" pos:column="62"/></name></expr>)<pos:position pos:line="16" pos:column="63"/></condition><then pos:line="16" pos:column="63">
        <block type="pseudo"><return pos:line="17" pos:column="9">return <expr><operator pos:line="17" pos:column="16">-<pos:position pos:line="17" pos:column="17"/></operator><literal type="number" pos:line="17" pos:column="17">1<pos:position pos:line="17" pos:column="18"/></literal></expr>;<pos:position pos:line="17" pos:column="19"/></return></block></then></if>

    <if pos:line="19" pos:column="5">if <condition pos:line="19" pos:column="8">(<expr><operator pos:line="19" pos:column="9">(<pos:position pos:line="19" pos:column="10"/></operator><name pos:line="19" pos:column="10">rv<pos:position pos:line="19" pos:column="12"/></name> <operator pos:line="19" pos:column="13">=<pos:position pos:line="19" pos:column="14"/></operator> <call><name pos:line="19" pos:column="15">create_uncompress_child<pos:position pos:line="19" pos:column="38"/></name><argument_list pos:line="19" pos:column="38">(<argument><expr><operator pos:line="19" pos:column="39">&amp;<pos:position pos:line="19" pos:column="44"/></operator><name pos:line="19" pos:column="40">parm<pos:position pos:line="19" pos:column="44"/></name></expr></argument>, <argument><expr><name pos:line="19" pos:column="46">sub_context<pos:position pos:line="19" pos:column="57"/></name></expr></argument>, <argument><expr><operator pos:line="19" pos:column="59">&amp;<pos:position pos:line="19" pos:column="64"/></operator><name pos:line="19" pos:column="60">pipe_out<pos:position pos:line="19" pos:column="68"/></name></expr></argument>)<pos:position pos:line="19" pos:column="69"/></argument_list></call><operator pos:line="19" pos:column="69">)<pos:position pos:line="19" pos:column="70"/></operator> <operator pos:line="19" pos:column="71">!=<pos:position pos:line="19" pos:column="73"/></operator> <name pos:line="19" pos:column="74">APR_SUCCESS<pos:position pos:line="19" pos:column="85"/></name></expr>)<pos:position pos:line="19" pos:column="86"/></condition><then pos:line="19" pos:column="86"> <block pos:line="19" pos:column="87">{
        <expr_stmt><expr><call><name pos:line="20" pos:column="9">ap_log_rerror<pos:position pos:line="20" pos:column="22"/></name><argument_list pos:line="20" pos:column="22">(<argument><expr><name pos:line="20" pos:column="23">APLOG_MARK<pos:position pos:line="20" pos:column="33"/></name></expr></argument>, <argument><expr><name pos:line="20" pos:column="35">APLOG_ERR<pos:position pos:line="20" pos:column="44"/></name></expr></argument>, <argument><expr><name pos:line="20" pos:column="46">rv<pos:position pos:line="20" pos:column="48"/></name></expr></argument>, <argument><expr><name pos:line="20" pos:column="50">r<pos:position pos:line="20" pos:column="51"/></name></expr></argument>,
                    <argument><expr><name pos:line="21" pos:column="21">MODNAME<pos:position pos:line="21" pos:column="28"/></name> <literal type="string" pos:line="21" pos:column="29">": couldn't spawn uncompress process: %s"<pos:position pos:line="21" pos:column="70"/></literal></expr></argument>, <argument><expr><name><name pos:line="21" pos:column="72">r<pos:position pos:line="21" pos:column="73"/></name><operator pos:line="21" pos:column="73">-&gt;<pos:position pos:line="21" pos:column="78"/></operator><name pos:line="21" pos:column="75">uri<pos:position pos:line="21" pos:column="78"/></name></name></expr></argument>)<pos:position pos:line="21" pos:column="79"/></argument_list></call></expr>;<pos:position pos:line="21" pos:column="80"/></expr_stmt>
        <return pos:line="22" pos:column="9">return <expr><operator pos:line="22" pos:column="16">-<pos:position pos:line="22" pos:column="17"/></operator><literal type="number" pos:line="22" pos:column="17">1<pos:position pos:line="22" pos:column="18"/></literal></expr>;<pos:position pos:line="22" pos:column="19"/></return>
    }<pos:position pos:line="23" pos:column="6"/></block></then></if>

    <expr_stmt><expr><operator pos:line="25" pos:column="5">*<pos:position pos:line="25" pos:column="6"/></operator><name pos:line="25" pos:column="6">newch<pos:position pos:line="25" pos:column="11"/></name> <operator pos:line="25" pos:column="12">=<pos:position pos:line="25" pos:column="13"/></operator> <operator pos:line="25" pos:column="14">(<pos:position pos:line="25" pos:column="15"/></operator><name pos:line="25" pos:column="15">unsigned<pos:position pos:line="25" pos:column="23"/></name> <name pos:line="25" pos:column="24">char<pos:position pos:line="25" pos:column="28"/></name> <operator pos:line="25" pos:column="29">*<pos:position pos:line="25" pos:column="30"/></operator><operator pos:line="25" pos:column="30">)<pos:position pos:line="25" pos:column="31"/></operator> <call><name pos:line="25" pos:column="32">apr_palloc<pos:position pos:line="25" pos:column="42"/></name><argument_list pos:line="25" pos:column="42">(<argument><expr><name><name pos:line="25" pos:column="43">r<pos:position pos:line="25" pos:column="44"/></name><operator pos:line="25" pos:column="44">-&gt;<pos:position pos:line="25" pos:column="49"/></operator><name pos:line="25" pos:column="46">pool<pos:position pos:line="25" pos:column="50"/></name></name></expr></argument>, <argument><expr><name pos:line="25" pos:column="52">n<pos:position pos:line="25" pos:column="53"/></name></expr></argument>)<pos:position pos:line="25" pos:column="54"/></argument_list></call></expr>;<pos:position pos:line="25" pos:column="55"/></expr_stmt>
    <expr_stmt><expr><name pos:line="26" pos:column="5">rv<pos:position pos:line="26" pos:column="7"/></name> <operator pos:line="26" pos:column="8">=<pos:position pos:line="26" pos:column="9"/></operator> <call><name pos:line="26" pos:column="10">apr_file_read<pos:position pos:line="26" pos:column="23"/></name><argument_list pos:line="26" pos:column="23">(<argument><expr><name pos:line="26" pos:column="24">pipe_out<pos:position pos:line="26" pos:column="32"/></name></expr></argument>, <argument><expr><operator pos:line="26" pos:column="34">*<pos:position pos:line="26" pos:column="35"/></operator><name pos:line="26" pos:column="35">newch<pos:position pos:line="26" pos:column="40"/></name></expr></argument>, <argument><expr><operator pos:line="26" pos:column="42">&amp;<pos:position pos:line="26" pos:column="47"/></operator><name pos:line="26" pos:column="43">n<pos:position pos:line="26" pos:column="44"/></name></expr></argument>)<pos:position pos:line="26" pos:column="45"/></argument_list></call></expr>;<pos:position pos:line="26" pos:column="46"/></expr_stmt>
    <if pos:line="27" pos:column="5">if <condition pos:line="27" pos:column="8">(<expr><name pos:line="27" pos:column="9">n<pos:position pos:line="27" pos:column="10"/></name> <operator pos:line="27" pos:column="11">==<pos:position pos:line="27" pos:column="13"/></operator> <literal type="number" pos:line="27" pos:column="14">0<pos:position pos:line="27" pos:column="15"/></literal></expr>)<pos:position pos:line="27" pos:column="16"/></condition><then pos:line="27" pos:column="16"> <block pos:line="27" pos:column="17">{
        <expr_stmt><expr><call><name pos:line="28" pos:column="9">apr_pool_destroy<pos:position pos:line="28" pos:column="25"/></name><argument_list pos:line="28" pos:column="25">(<argument><expr><name pos:line="28" pos:column="26">sub_context<pos:position pos:line="28" pos:column="37"/></name></expr></argument>)<pos:position pos:line="28" pos:column="38"/></argument_list></call></expr>;<pos:position pos:line="28" pos:column="39"/></expr_stmt>
        <expr_stmt><expr><call><name pos:line="29" pos:column="9">ap_log_rerror<pos:position pos:line="29" pos:column="22"/></name><argument_list pos:line="29" pos:column="22">(<argument><expr><name pos:line="29" pos:column="23">APLOG_MARK<pos:position pos:line="29" pos:column="33"/></name></expr></argument>, <argument><expr><name pos:line="29" pos:column="35">APLOG_ERR<pos:position pos:line="29" pos:column="44"/></name></expr></argument>, <argument><expr><name pos:line="29" pos:column="46">rv<pos:position pos:line="29" pos:column="48"/></name></expr></argument>, <argument><expr><name pos:line="29" pos:column="50">r<pos:position pos:line="29" pos:column="51"/></name></expr></argument>,
            <argument><expr><name pos:line="30" pos:column="13">MODNAME<pos:position pos:line="30" pos:column="20"/></name> <literal type="string" pos:line="30" pos:column="21">": read failed from uncompress of %s"<pos:position pos:line="30" pos:column="58"/></literal></expr></argument>, <argument><expr><name><name pos:line="30" pos:column="60">r<pos:position pos:line="30" pos:column="61"/></name><operator pos:line="30" pos:column="61">-&gt;<pos:position pos:line="30" pos:column="66"/></operator><name pos:line="30" pos:column="63">filename<pos:position pos:line="30" pos:column="71"/></name></name></expr></argument>)<pos:position pos:line="30" pos:column="72"/></argument_list></call></expr>;<pos:position pos:line="30" pos:column="73"/></expr_stmt>
        <return pos:line="31" pos:column="9">return <expr><operator pos:line="31" pos:column="16">-<pos:position pos:line="31" pos:column="17"/></operator><literal type="number" pos:line="31" pos:column="17">1<pos:position pos:line="31" pos:column="18"/></literal></expr>;<pos:position pos:line="31" pos:column="19"/></return>
    }<pos:position pos:line="32" pos:column="6"/></block></then></if>
    <expr_stmt><expr><call><name pos:line="33" pos:column="5">apr_pool_destroy<pos:position pos:line="33" pos:column="21"/></name><argument_list pos:line="33" pos:column="21">(<argument><expr><name pos:line="33" pos:column="22">sub_context<pos:position pos:line="33" pos:column="33"/></name></expr></argument>)<pos:position pos:line="33" pos:column="34"/></argument_list></call></expr>;<pos:position pos:line="33" pos:column="35"/></expr_stmt>
    <return pos:line="34" pos:column="5">return <expr><name pos:line="34" pos:column="12">n<pos:position pos:line="34" pos:column="13"/></name></expr>;<pos:position pos:line="34" pos:column="14"/></return>
}<pos:position pos:line="35" pos:column="2"/></block></function></unit>

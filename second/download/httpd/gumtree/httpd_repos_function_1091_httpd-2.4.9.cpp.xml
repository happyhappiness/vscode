<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/httpd/gumtree/httpd_repos_function_1091_httpd-2.4.9.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">apr_status_t<pos:position pos:line="1" pos:column="20"/></name></type> <name pos:line="1" pos:column="21">lua_write_body<pos:position pos:line="1" pos:column="35"/></name><parameter_list pos:line="1" pos:column="35">(<parameter><decl><type><name pos:line="1" pos:column="36">request_rec<pos:position pos:line="1" pos:column="47"/></name> <modifier pos:line="1" pos:column="48">*<pos:position pos:line="1" pos:column="49"/></modifier></type><name pos:line="1" pos:column="49">r<pos:position pos:line="1" pos:column="50"/></name></decl></parameter>, <parameter><decl><type><name pos:line="1" pos:column="52">apr_file_t<pos:position pos:line="1" pos:column="62"/></name> <modifier pos:line="1" pos:column="63">*<pos:position pos:line="1" pos:column="64"/></modifier></type><name pos:line="1" pos:column="64">file<pos:position pos:line="1" pos:column="68"/></name></decl></parameter>, <parameter><decl><type><name pos:line="1" pos:column="70">apr_off_t<pos:position pos:line="1" pos:column="79"/></name> <modifier pos:line="1" pos:column="80">*<pos:position pos:line="1" pos:column="81"/></modifier></type><name pos:line="1" pos:column="81">size<pos:position pos:line="1" pos:column="85"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="86"/></parameter_list>
<block pos:line="2" pos:column="1">{
    <decl_stmt><decl><type><name pos:line="3" pos:column="5">apr_status_t<pos:position pos:line="3" pos:column="17"/></name></type> <name pos:line="3" pos:column="18">rc<pos:position pos:line="3" pos:column="20"/></name> <init pos:line="3" pos:column="21">= <expr><name pos:line="3" pos:column="23">OK<pos:position pos:line="3" pos:column="25"/></name></expr></init></decl>;<pos:position pos:line="3" pos:column="26"/></decl_stmt>

    <if pos:line="5" pos:column="5">if <condition pos:line="5" pos:column="8">(<expr><operator pos:line="5" pos:column="9">(<pos:position pos:line="5" pos:column="10"/></operator><name pos:line="5" pos:column="10">rc<pos:position pos:line="5" pos:column="12"/></name> <operator pos:line="5" pos:column="13">=<pos:position pos:line="5" pos:column="14"/></operator> <call><name pos:line="5" pos:column="15">ap_setup_client_block<pos:position pos:line="5" pos:column="36"/></name><argument_list pos:line="5" pos:column="36">(<argument><expr><name pos:line="5" pos:column="37">r<pos:position pos:line="5" pos:column="38"/></name></expr></argument>, <argument><expr><name pos:line="5" pos:column="40">REQUEST_CHUNKED_ERROR<pos:position pos:line="5" pos:column="61"/></name></expr></argument>)<pos:position pos:line="5" pos:column="62"/></argument_list></call><operator pos:line="5" pos:column="62">)<pos:position pos:line="5" pos:column="63"/></operator></expr>)<pos:position pos:line="5" pos:column="64"/></condition><then pos:line="5" pos:column="64">
        <block type="pseudo"><return pos:line="6" pos:column="9">return <expr><name pos:line="6" pos:column="16">rc<pos:position pos:line="6" pos:column="18"/></name></expr>;<pos:position pos:line="6" pos:column="19"/></return></block></then></if>
    <if pos:line="7" pos:column="5">if <condition pos:line="7" pos:column="8">(<expr><call><name pos:line="7" pos:column="9">ap_should_client_block<pos:position pos:line="7" pos:column="31"/></name><argument_list pos:line="7" pos:column="31">(<argument><expr><name pos:line="7" pos:column="32">r<pos:position pos:line="7" pos:column="33"/></name></expr></argument>)<pos:position pos:line="7" pos:column="34"/></argument_list></call></expr>)<pos:position pos:line="7" pos:column="35"/></condition><then pos:line="7" pos:column="35"> <block pos:line="7" pos:column="36">{
        <decl_stmt><decl><type><name pos:line="8" pos:column="9">char<pos:position pos:line="8" pos:column="13"/></name></type> <name><name pos:line="8" pos:column="14">argsbuffer<pos:position pos:line="8" pos:column="24"/></name><index pos:line="8" pos:column="24">[<expr><name pos:line="8" pos:column="25">HUGE_STRING_LEN<pos:position pos:line="8" pos:column="40"/></name></expr>]<pos:position pos:line="8" pos:column="41"/></index></name></decl>;<pos:position pos:line="8" pos:column="42"/></decl_stmt>
        <decl_stmt><decl><type><name pos:line="9" pos:column="9">apr_off_t<pos:position pos:line="9" pos:column="18"/></name></type> <name pos:line="9" pos:column="19">rsize<pos:position pos:line="9" pos:column="24"/></name></decl>,
                  <decl><type ref="prev"/><name pos:line="10" pos:column="19">len_read<pos:position pos:line="10" pos:column="27"/></name></decl>,
                  <decl><type ref="prev"/><name pos:line="11" pos:column="19">rpos<pos:position pos:line="11" pos:column="23"/></name> <init pos:line="11" pos:column="24">= <expr><literal type="number" pos:line="11" pos:column="26">0<pos:position pos:line="11" pos:column="27"/></literal></expr></init></decl>;<pos:position pos:line="11" pos:column="28"/></decl_stmt>
        <decl_stmt><decl><type><name pos:line="12" pos:column="9">apr_off_t<pos:position pos:line="12" pos:column="18"/></name></type> <name pos:line="12" pos:column="19">length<pos:position pos:line="12" pos:column="25"/></name> <init pos:line="12" pos:column="26">= <expr><name><name pos:line="12" pos:column="28">r<pos:position pos:line="12" pos:column="29"/></name><operator pos:line="12" pos:column="29">-&gt;<pos:position pos:line="12" pos:column="34"/></operator><name pos:line="12" pos:column="31">remaining<pos:position pos:line="12" pos:column="40"/></name></name></expr></init></decl>;<pos:position pos:line="12" pos:column="41"/></decl_stmt>
        <decl_stmt><decl><type><name pos:line="13" pos:column="9">apr_size_t<pos:position pos:line="13" pos:column="19"/></name></type> <name pos:line="13" pos:column="20">written<pos:position pos:line="13" pos:column="27"/></name></decl>;<pos:position pos:line="13" pos:column="28"/></decl_stmt>

        <expr_stmt><expr><operator pos:line="15" pos:column="9">*<pos:position pos:line="15" pos:column="10"/></operator><name pos:line="15" pos:column="10">size<pos:position pos:line="15" pos:column="14"/></name> <operator pos:line="15" pos:column="15">=<pos:position pos:line="15" pos:column="16"/></operator> <name pos:line="15" pos:column="17">length<pos:position pos:line="15" pos:column="23"/></name></expr>;<pos:position pos:line="15" pos:column="24"/></expr_stmt>
        <while pos:line="16" pos:column="9">while <condition pos:line="16" pos:column="15">(<expr><operator pos:line="16" pos:column="16">(<pos:position pos:line="16" pos:column="17"/></operator><name pos:line="16" pos:column="17">len_read<pos:position pos:line="16" pos:column="25"/></name> <operator pos:line="16" pos:column="26">=<pos:position pos:line="16" pos:column="27"/></operator>
                    <call><name pos:line="17" pos:column="21">ap_get_client_block<pos:position pos:line="17" pos:column="40"/></name><argument_list pos:line="17" pos:column="40">(<argument><expr><name pos:line="17" pos:column="41">r<pos:position pos:line="17" pos:column="42"/></name></expr></argument>, <argument><expr><name pos:line="17" pos:column="44">argsbuffer<pos:position pos:line="17" pos:column="54"/></name></expr></argument>,
                                        <argument><expr><sizeof pos:line="18" pos:column="41">sizeof<argument_list pos:line="18" pos:column="47">(<argument><expr><name pos:line="18" pos:column="48">argsbuffer<pos:position pos:line="18" pos:column="58"/></name></expr></argument>)<pos:position pos:line="18" pos:column="59"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="18" pos:column="60"/></argument_list></call><operator pos:line="18" pos:column="60">)<pos:position pos:line="18" pos:column="61"/></operator> <operator pos:line="18" pos:column="62">&gt;<pos:position pos:line="18" pos:column="66"/></operator> <literal type="number" pos:line="18" pos:column="64">0<pos:position pos:line="18" pos:column="65"/></literal></expr>)<pos:position pos:line="18" pos:column="66"/></condition> <block pos:line="18" pos:column="67">{
            <if pos:line="19" pos:column="13">if <condition pos:line="19" pos:column="16">(<expr><operator pos:line="19" pos:column="17">(<pos:position pos:line="19" pos:column="18"/></operator><name pos:line="19" pos:column="18">rpos<pos:position pos:line="19" pos:column="22"/></name> <operator pos:line="19" pos:column="23">+<pos:position pos:line="19" pos:column="24"/></operator> <name pos:line="19" pos:column="25">len_read<pos:position pos:line="19" pos:column="33"/></name><operator pos:line="19" pos:column="33">)<pos:position pos:line="19" pos:column="34"/></operator> <operator pos:line="19" pos:column="35">&gt;<pos:position pos:line="19" pos:column="39"/></operator> <name pos:line="19" pos:column="37">length<pos:position pos:line="19" pos:column="43"/></name></expr>)<pos:position pos:line="19" pos:column="44"/></condition><then pos:line="19" pos:column="44">
                <block type="pseudo"><expr_stmt><expr><name pos:line="20" pos:column="17">rsize<pos:position pos:line="20" pos:column="22"/></name> <operator pos:line="20" pos:column="23">=<pos:position pos:line="20" pos:column="24"/></operator> <operator pos:line="20" pos:column="25">(<pos:position pos:line="20" pos:column="26"/></operator><name pos:line="20" pos:column="26">apr_size_t<pos:position pos:line="20" pos:column="36"/></name><operator pos:line="20" pos:column="36">)<pos:position pos:line="20" pos:column="37"/></operator> <name pos:line="20" pos:column="38">length<pos:position pos:line="20" pos:column="44"/></name> <operator pos:line="20" pos:column="45">-<pos:position pos:line="20" pos:column="46"/></operator> <name pos:line="20" pos:column="47">rpos<pos:position pos:line="20" pos:column="51"/></name></expr>;<pos:position pos:line="20" pos:column="52"/></expr_stmt></block></then>
            <else pos:line="21" pos:column="13">else
                <block type="pseudo"><expr_stmt><expr><name pos:line="22" pos:column="17">rsize<pos:position pos:line="22" pos:column="22"/></name> <operator pos:line="22" pos:column="23">=<pos:position pos:line="22" pos:column="24"/></operator> <name pos:line="22" pos:column="25">len_read<pos:position pos:line="22" pos:column="33"/></name></expr>;<pos:position pos:line="22" pos:column="34"/></expr_stmt></block></else></if>

            <expr_stmt><expr><name pos:line="24" pos:column="13">rc<pos:position pos:line="24" pos:column="15"/></name> <operator pos:line="24" pos:column="16">=<pos:position pos:line="24" pos:column="17"/></operator> <call><name pos:line="24" pos:column="18">apr_file_write_full<pos:position pos:line="24" pos:column="37"/></name><argument_list pos:line="24" pos:column="37">(<argument><expr><name pos:line="24" pos:column="38">file<pos:position pos:line="24" pos:column="42"/></name></expr></argument>, <argument><expr><name pos:line="24" pos:column="44">argsbuffer<pos:position pos:line="24" pos:column="54"/></name></expr></argument>, <argument><expr><operator pos:line="24" pos:column="56">(<pos:position pos:line="24" pos:column="57"/></operator><name pos:line="24" pos:column="57">apr_size_t<pos:position pos:line="24" pos:column="67"/></name><operator pos:line="24" pos:column="67">)<pos:position pos:line="24" pos:column="68"/></operator> <name pos:line="24" pos:column="69">rsize<pos:position pos:line="24" pos:column="74"/></name></expr></argument>,
                                     <argument><expr><operator pos:line="25" pos:column="38">&amp;<pos:position pos:line="25" pos:column="43"/></operator><name pos:line="25" pos:column="39">written<pos:position pos:line="25" pos:column="46"/></name></expr></argument>)<pos:position pos:line="25" pos:column="47"/></argument_list></call></expr>;<pos:position pos:line="25" pos:column="48"/></expr_stmt>
            <if pos:line="26" pos:column="13">if <condition pos:line="26" pos:column="16">(<expr><name pos:line="26" pos:column="17">written<pos:position pos:line="26" pos:column="24"/></name> <operator pos:line="26" pos:column="25">!=<pos:position pos:line="26" pos:column="27"/></operator> <name pos:line="26" pos:column="28">rsize<pos:position pos:line="26" pos:column="33"/></name> <operator pos:line="26" pos:column="34">||<pos:position pos:line="26" pos:column="36"/></operator> <name pos:line="26" pos:column="37">rc<pos:position pos:line="26" pos:column="39"/></name> <operator pos:line="26" pos:column="40">!=<pos:position pos:line="26" pos:column="42"/></operator> <name pos:line="26" pos:column="43">OK<pos:position pos:line="26" pos:column="45"/></name></expr>)<pos:position pos:line="26" pos:column="46"/></condition><then pos:line="26" pos:column="46">
                <block type="pseudo"><return pos:line="27" pos:column="17">return <expr><name pos:line="27" pos:column="24">APR_ENOSPC<pos:position pos:line="27" pos:column="34"/></name></expr>;<pos:position pos:line="27" pos:column="35"/></return></block></then></if>
            <expr_stmt><expr><name pos:line="28" pos:column="13">rpos<pos:position pos:line="28" pos:column="17"/></name> <operator pos:line="28" pos:column="18">+=<pos:position pos:line="28" pos:column="20"/></operator> <name pos:line="28" pos:column="21">rsize<pos:position pos:line="28" pos:column="26"/></name></expr>;<pos:position pos:line="28" pos:column="27"/></expr_stmt>
        }<pos:position pos:line="29" pos:column="10"/></block></while>
    }<pos:position pos:line="30" pos:column="6"/></block></then></if>

    <return pos:line="32" pos:column="5">return <expr><name pos:line="32" pos:column="12">rc<pos:position pos:line="32" pos:column="14"/></name></expr>;<pos:position pos:line="32" pos:column="15"/></return>
}<pos:position pos:line="33" pos:column="2"/></block></function></unit>

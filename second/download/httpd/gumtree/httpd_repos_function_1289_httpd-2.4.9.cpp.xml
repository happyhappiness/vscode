<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/httpd/gumtree/httpd_repos_function_1289_httpd-2.4.9.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">int<pos:position pos:line="1" pos:column="11"/></name></type> <name pos:line="1" pos:column="12">open_entity<pos:position pos:line="1" pos:column="23"/></name><parameter_list pos:line="1" pos:column="23">(<parameter><decl><type><name pos:line="1" pos:column="24">cache_handle_t<pos:position pos:line="1" pos:column="38"/></name> <modifier pos:line="1" pos:column="39">*<pos:position pos:line="1" pos:column="40"/></modifier></type><name pos:line="1" pos:column="40">h<pos:position pos:line="1" pos:column="41"/></name></decl></parameter>, <parameter><decl><type><name pos:line="1" pos:column="43">request_rec<pos:position pos:line="1" pos:column="54"/></name> <modifier pos:line="1" pos:column="55">*<pos:position pos:line="1" pos:column="56"/></modifier></type><name pos:line="1" pos:column="56">r<pos:position pos:line="1" pos:column="57"/></name></decl></parameter>, <parameter><decl><type><specifier pos:line="1" pos:column="59">const<pos:position pos:line="1" pos:column="64"/></specifier> <name pos:line="1" pos:column="65">char<pos:position pos:line="1" pos:column="69"/></name> <modifier pos:line="1" pos:column="70">*<pos:position pos:line="1" pos:column="71"/></modifier></type><name pos:line="1" pos:column="71">key<pos:position pos:line="1" pos:column="74"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="75"/></parameter_list>
<block pos:line="2" pos:column="1">{
    <decl_stmt><decl><type><name pos:line="3" pos:column="5">cache_socache_dir_conf<pos:position pos:line="3" pos:column="27"/></name> <modifier pos:line="3" pos:column="28">*<pos:position pos:line="3" pos:column="29"/></modifier></type><name pos:line="3" pos:column="29">dconf<pos:position pos:line="3" pos:column="34"/></name> <init pos:line="3" pos:column="35">=
            <expr><call><name pos:line="4" pos:column="13">ap_get_module_config<pos:position pos:line="4" pos:column="33"/></name><argument_list pos:line="4" pos:column="33">(<argument><expr><name><name pos:line="4" pos:column="34">r<pos:position pos:line="4" pos:column="35"/></name><operator pos:line="4" pos:column="35">-&gt;<pos:position pos:line="4" pos:column="40"/></operator><name pos:line="4" pos:column="37">per_dir_config<pos:position pos:line="4" pos:column="51"/></name></name></expr></argument>, <argument><expr><operator pos:line="4" pos:column="53">&amp;<pos:position pos:line="4" pos:column="58"/></operator><name pos:line="4" pos:column="54">cache_socache_module<pos:position pos:line="4" pos:column="74"/></name></expr></argument>)<pos:position pos:line="4" pos:column="75"/></argument_list></call></expr></init></decl>;<pos:position pos:line="4" pos:column="76"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="5" pos:column="5">cache_socache_conf<pos:position pos:line="5" pos:column="23"/></name> <modifier pos:line="5" pos:column="24">*<pos:position pos:line="5" pos:column="25"/></modifier></type><name pos:line="5" pos:column="25">conf<pos:position pos:line="5" pos:column="29"/></name> <init pos:line="5" pos:column="30">= <expr><call><name pos:line="5" pos:column="32">ap_get_module_config<pos:position pos:line="5" pos:column="52"/></name><argument_list pos:line="5" pos:column="52">(<argument><expr><name><name pos:line="5" pos:column="53">r<pos:position pos:line="5" pos:column="54"/></name><operator pos:line="5" pos:column="54">-&gt;<pos:position pos:line="5" pos:column="59"/></operator><name pos:line="5" pos:column="56">server<pos:position pos:line="5" pos:column="62"/></name><operator pos:line="5" pos:column="62">-&gt;<pos:position pos:line="5" pos:column="67"/></operator><name pos:line="5" pos:column="64">module_config<pos:position pos:line="5" pos:column="77"/></name></name></expr></argument>,
            <argument><expr><operator pos:line="6" pos:column="13">&amp;<pos:position pos:line="6" pos:column="18"/></operator><name pos:line="6" pos:column="14">cache_socache_module<pos:position pos:line="6" pos:column="34"/></name></expr></argument>)<pos:position pos:line="6" pos:column="35"/></argument_list></call></expr></init></decl>;<pos:position pos:line="6" pos:column="36"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="7" pos:column="5">apr_uint32_t<pos:position pos:line="7" pos:column="17"/></name></type> <name pos:line="7" pos:column="18">format<pos:position pos:line="7" pos:column="24"/></name></decl>;<pos:position pos:line="7" pos:column="25"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="8" pos:column="5">apr_size_t<pos:position pos:line="8" pos:column="15"/></name></type> <name pos:line="8" pos:column="16">slider<pos:position pos:line="8" pos:column="22"/></name></decl>;<pos:position pos:line="8" pos:column="23"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="9" pos:column="5">unsigned<pos:position pos:line="9" pos:column="13"/></name> <name pos:line="9" pos:column="14">int<pos:position pos:line="9" pos:column="17"/></name></type> <name pos:line="9" pos:column="18">buffer_len<pos:position pos:line="9" pos:column="28"/></name></decl>;<pos:position pos:line="9" pos:column="29"/></decl_stmt>
    <decl_stmt><decl><type><specifier pos:line="10" pos:column="5">const<pos:position pos:line="10" pos:column="10"/></specifier> <name pos:line="10" pos:column="11">char<pos:position pos:line="10" pos:column="15"/></name> <modifier pos:line="10" pos:column="16">*<pos:position pos:line="10" pos:column="17"/></modifier></type><name pos:line="10" pos:column="17">nkey<pos:position pos:line="10" pos:column="21"/></name></decl>;<pos:position pos:line="10" pos:column="22"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="11" pos:column="5">apr_status_t<pos:position pos:line="11" pos:column="17"/></name></type> <name pos:line="11" pos:column="18">rc<pos:position pos:line="11" pos:column="20"/></name></decl>;<pos:position pos:line="11" pos:column="21"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="12" pos:column="5">cache_object_t<pos:position pos:line="12" pos:column="19"/></name> <modifier pos:line="12" pos:column="20">*<pos:position pos:line="12" pos:column="21"/></modifier></type><name pos:line="12" pos:column="21">obj<pos:position pos:line="12" pos:column="24"/></name></decl>;<pos:position pos:line="12" pos:column="25"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="13" pos:column="5">cache_info<pos:position pos:line="13" pos:column="15"/></name> <modifier pos:line="13" pos:column="16">*<pos:position pos:line="13" pos:column="17"/></modifier></type><name pos:line="13" pos:column="17">info<pos:position pos:line="13" pos:column="21"/></name></decl>;<pos:position pos:line="13" pos:column="22"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="14" pos:column="5">cache_socache_object_t<pos:position pos:line="14" pos:column="27"/></name> <modifier pos:line="14" pos:column="28">*<pos:position pos:line="14" pos:column="29"/></modifier></type><name pos:line="14" pos:column="29">sobj<pos:position pos:line="14" pos:column="33"/></name></decl>;<pos:position pos:line="14" pos:column="34"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="15" pos:column="5">apr_size_t<pos:position pos:line="15" pos:column="15"/></name></type> <name pos:line="15" pos:column="16">len<pos:position pos:line="15" pos:column="19"/></name></decl>;<pos:position pos:line="15" pos:column="20"/></decl_stmt>

    <expr_stmt><expr><name pos:line="17" pos:column="5">nkey<pos:position pos:line="17" pos:column="9"/></name> <operator pos:line="17" pos:column="10">=<pos:position pos:line="17" pos:column="11"/></operator> <name pos:line="17" pos:column="12">NULL<pos:position pos:line="17" pos:column="16"/></name></expr>;<pos:position pos:line="17" pos:column="17"/></expr_stmt>
    <expr_stmt><expr><name><name pos:line="18" pos:column="5">h<pos:position pos:line="18" pos:column="6"/></name><operator pos:line="18" pos:column="6">-&gt;<pos:position pos:line="18" pos:column="11"/></operator><name pos:line="18" pos:column="8">cache_obj<pos:position pos:line="18" pos:column="17"/></name></name> <operator pos:line="18" pos:column="18">=<pos:position pos:line="18" pos:column="19"/></operator> <name pos:line="18" pos:column="20">NULL<pos:position pos:line="18" pos:column="24"/></name></expr>;<pos:position pos:line="18" pos:column="25"/></expr_stmt>

    <if pos:line="20" pos:column="5">if <condition pos:line="20" pos:column="8">(<expr><operator pos:line="20" pos:column="9">!<pos:position pos:line="20" pos:column="10"/></operator><name><name pos:line="20" pos:column="10">conf<pos:position pos:line="20" pos:column="14"/></name><operator pos:line="20" pos:column="14">-&gt;<pos:position pos:line="20" pos:column="19"/></operator><name pos:line="20" pos:column="16">provider<pos:position pos:line="20" pos:column="24"/></name></name> <operator pos:line="20" pos:column="25">||<pos:position pos:line="20" pos:column="27"/></operator> <operator pos:line="20" pos:column="28">!<pos:position pos:line="20" pos:column="29"/></operator><name><name pos:line="20" pos:column="29">conf<pos:position pos:line="20" pos:column="33"/></name><operator pos:line="20" pos:column="33">-&gt;<pos:position pos:line="20" pos:column="38"/></operator><name pos:line="20" pos:column="35">provider<pos:position pos:line="20" pos:column="43"/></name><operator pos:line="20" pos:column="43">-&gt;<pos:position pos:line="20" pos:column="48"/></operator><name pos:line="20" pos:column="45">socache_instance<pos:position pos:line="20" pos:column="61"/></name></name></expr>)<pos:position pos:line="20" pos:column="62"/></condition><then pos:line="20" pos:column="62"> <block pos:line="20" pos:column="63">{
        <return pos:line="21" pos:column="9">return <expr><name pos:line="21" pos:column="16">DECLINED<pos:position pos:line="21" pos:column="24"/></name></expr>;<pos:position pos:line="21" pos:column="25"/></return>
    }<pos:position pos:line="22" pos:column="6"/></block></then></if>

    <comment type="block" pos:line="24" pos:column="5">/* Create and init the cache object */</comment>
    <expr_stmt><expr><name pos:line="25" pos:column="5">obj<pos:position pos:line="25" pos:column="8"/></name> <operator pos:line="25" pos:column="9">=<pos:position pos:line="25" pos:column="10"/></operator> <call><name pos:line="25" pos:column="11">apr_pcalloc<pos:position pos:line="25" pos:column="22"/></name><argument_list pos:line="25" pos:column="22">(<argument><expr><name><name pos:line="25" pos:column="23">r<pos:position pos:line="25" pos:column="24"/></name><operator pos:line="25" pos:column="24">-&gt;<pos:position pos:line="25" pos:column="29"/></operator><name pos:line="25" pos:column="26">pool<pos:position pos:line="25" pos:column="30"/></name></name></expr></argument>, <argument><expr><sizeof pos:line="25" pos:column="32">sizeof<argument_list pos:line="25" pos:column="38">(<argument><expr><name pos:line="25" pos:column="39">cache_object_t<pos:position pos:line="25" pos:column="53"/></name></expr></argument>)<pos:position pos:line="25" pos:column="54"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="25" pos:column="55"/></argument_list></call></expr>;<pos:position pos:line="25" pos:column="56"/></expr_stmt>
    <expr_stmt><expr><name pos:line="26" pos:column="5">sobj<pos:position pos:line="26" pos:column="9"/></name> <operator pos:line="26" pos:column="10">=<pos:position pos:line="26" pos:column="11"/></operator> <call><name pos:line="26" pos:column="12">apr_pcalloc<pos:position pos:line="26" pos:column="23"/></name><argument_list pos:line="26" pos:column="23">(<argument><expr><name><name pos:line="26" pos:column="24">r<pos:position pos:line="26" pos:column="25"/></name><operator pos:line="26" pos:column="25">-&gt;<pos:position pos:line="26" pos:column="30"/></operator><name pos:line="26" pos:column="27">pool<pos:position pos:line="26" pos:column="31"/></name></name></expr></argument>, <argument><expr><sizeof pos:line="26" pos:column="33">sizeof<argument_list pos:line="26" pos:column="39">(<argument><expr><name pos:line="26" pos:column="40">cache_socache_object_t<pos:position pos:line="26" pos:column="62"/></name></expr></argument>)<pos:position pos:line="26" pos:column="63"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="26" pos:column="64"/></argument_list></call></expr>;<pos:position pos:line="26" pos:column="65"/></expr_stmt>

    <expr_stmt><expr><name pos:line="28" pos:column="5">info<pos:position pos:line="28" pos:column="9"/></name> <operator pos:line="28" pos:column="10">=<pos:position pos:line="28" pos:column="11"/></operator> <operator pos:line="28" pos:column="12">&amp;<pos:position pos:line="28" pos:column="17"/></operator><operator pos:line="28" pos:column="13">(<pos:position pos:line="28" pos:column="14"/></operator><name><name pos:line="28" pos:column="14">obj<pos:position pos:line="28" pos:column="17"/></name><operator pos:line="28" pos:column="17">-&gt;<pos:position pos:line="28" pos:column="22"/></operator><name pos:line="28" pos:column="19">info<pos:position pos:line="28" pos:column="23"/></name></name><operator pos:line="28" pos:column="23">)<pos:position pos:line="28" pos:column="24"/></operator></expr>;<pos:position pos:line="28" pos:column="25"/></expr_stmt>

    <comment type="block" pos:line="30" pos:column="5">/* Create a temporary pool for the buffer, and destroy it if something
     * goes wrong so we don't have large buffers of unused memory hanging
     * about for the lifetime of the response.
     */</comment>
    <expr_stmt><expr><call><name pos:line="34" pos:column="5">apr_pool_create<pos:position pos:line="34" pos:column="20"/></name><argument_list pos:line="34" pos:column="20">(<argument><expr><operator pos:line="34" pos:column="21">&amp;<pos:position pos:line="34" pos:column="26"/></operator><name><name pos:line="34" pos:column="22">sobj<pos:position pos:line="34" pos:column="26"/></name><operator pos:line="34" pos:column="26">-&gt;<pos:position pos:line="34" pos:column="31"/></operator><name pos:line="34" pos:column="28">pool<pos:position pos:line="34" pos:column="32"/></name></name></expr></argument>, <argument><expr><name><name pos:line="34" pos:column="34">r<pos:position pos:line="34" pos:column="35"/></name><operator pos:line="34" pos:column="35">-&gt;<pos:position pos:line="34" pos:column="40"/></operator><name pos:line="34" pos:column="37">pool<pos:position pos:line="34" pos:column="41"/></name></name></expr></argument>)<pos:position pos:line="34" pos:column="42"/></argument_list></call></expr>;<pos:position pos:line="34" pos:column="43"/></expr_stmt>

    <expr_stmt><expr><name><name pos:line="36" pos:column="5">sobj<pos:position pos:line="36" pos:column="9"/></name><operator pos:line="36" pos:column="9">-&gt;<pos:position pos:line="36" pos:column="14"/></operator><name pos:line="36" pos:column="11">buffer<pos:position pos:line="36" pos:column="17"/></name></name> <operator pos:line="36" pos:column="18">=<pos:position pos:line="36" pos:column="19"/></operator> <call><name pos:line="36" pos:column="20">apr_palloc<pos:position pos:line="36" pos:column="30"/></name><argument_list pos:line="36" pos:column="30">(<argument><expr><name><name pos:line="36" pos:column="31">sobj<pos:position pos:line="36" pos:column="35"/></name><operator pos:line="36" pos:column="35">-&gt;<pos:position pos:line="36" pos:column="40"/></operator><name pos:line="36" pos:column="37">pool<pos:position pos:line="36" pos:column="41"/></name></name></expr></argument>, <argument><expr><name><name pos:line="36" pos:column="43">dconf<pos:position pos:line="36" pos:column="48"/></name><operator pos:line="36" pos:column="48">-&gt;<pos:position pos:line="36" pos:column="53"/></operator><name pos:line="36" pos:column="50">max<pos:position pos:line="36" pos:column="53"/></name></name> <operator pos:line="36" pos:column="54">+<pos:position pos:line="36" pos:column="55"/></operator> <literal type="number" pos:line="36" pos:column="56">1<pos:position pos:line="36" pos:column="57"/></literal></expr></argument>)<pos:position pos:line="36" pos:column="58"/></argument_list></call></expr>;<pos:position pos:line="36" pos:column="59"/></expr_stmt>
    <expr_stmt><expr><name><name pos:line="37" pos:column="5">sobj<pos:position pos:line="37" pos:column="9"/></name><operator pos:line="37" pos:column="9">-&gt;<pos:position pos:line="37" pos:column="14"/></operator><name pos:line="37" pos:column="11">buffer_len<pos:position pos:line="37" pos:column="21"/></name></name> <operator pos:line="37" pos:column="22">=<pos:position pos:line="37" pos:column="23"/></operator> <name><name pos:line="37" pos:column="24">dconf<pos:position pos:line="37" pos:column="29"/></name><operator pos:line="37" pos:column="29">-&gt;<pos:position pos:line="37" pos:column="34"/></operator><name pos:line="37" pos:column="31">max<pos:position pos:line="37" pos:column="34"/></name></name> <operator pos:line="37" pos:column="35">+<pos:position pos:line="37" pos:column="36"/></operator> <literal type="number" pos:line="37" pos:column="37">1<pos:position pos:line="37" pos:column="38"/></literal></expr>;<pos:position pos:line="37" pos:column="39"/></expr_stmt>

    <comment type="block" pos:line="39" pos:column="5">/* attempt to retrieve the cached entry */</comment>
    <if pos:line="40" pos:column="5">if <condition pos:line="40" pos:column="8">(<expr><name pos:line="40" pos:column="9">socache_mutex<pos:position pos:line="40" pos:column="22"/></name></expr>)<pos:position pos:line="40" pos:column="23"/></condition><then pos:line="40" pos:column="23"> <block pos:line="40" pos:column="24">{
        <decl_stmt><decl><type><name pos:line="41" pos:column="9">apr_status_t<pos:position pos:line="41" pos:column="21"/></name></type> <name pos:line="41" pos:column="22">status<pos:position pos:line="41" pos:column="28"/></name> <init pos:line="41" pos:column="29">= <expr><call><name pos:line="41" pos:column="31">apr_global_mutex_lock<pos:position pos:line="41" pos:column="52"/></name><argument_list pos:line="41" pos:column="52">(<argument><expr><name pos:line="41" pos:column="53">socache_mutex<pos:position pos:line="41" pos:column="66"/></name></expr></argument>)<pos:position pos:line="41" pos:column="67"/></argument_list></call></expr></init></decl>;<pos:position pos:line="41" pos:column="68"/></decl_stmt>
        <if pos:line="42" pos:column="9">if <condition pos:line="42" pos:column="12">(<expr><name pos:line="42" pos:column="13">status<pos:position pos:line="42" pos:column="19"/></name> <operator pos:line="42" pos:column="20">!=<pos:position pos:line="42" pos:column="22"/></operator> <name pos:line="42" pos:column="23">APR_SUCCESS<pos:position pos:line="42" pos:column="34"/></name></expr>)<pos:position pos:line="42" pos:column="35"/></condition><then pos:line="42" pos:column="35"> <block pos:line="42" pos:column="36">{
            <expr_stmt><expr><call><name pos:line="43" pos:column="13">ap_log_rerror<pos:position pos:line="43" pos:column="26"/></name><argument_list pos:line="43" pos:column="26">(<argument><expr><name pos:line="43" pos:column="27">APLOG_MARK<pos:position pos:line="43" pos:column="37"/></name></expr></argument>, <argument><expr><name pos:line="43" pos:column="39">APLOG_ERR<pos:position pos:line="43" pos:column="48"/></name></expr></argument>, <argument><expr><name pos:line="43" pos:column="50">status<pos:position pos:line="43" pos:column="56"/></name></expr></argument>, <argument><expr><name pos:line="43" pos:column="58">r<pos:position pos:line="43" pos:column="59"/></name></expr></argument>, <argument><expr><call><name pos:line="43" pos:column="61">APLOGNO<pos:position pos:line="43" pos:column="68"/></name><argument_list pos:line="43" pos:column="68">(<argument><expr><literal type="number" pos:line="43" pos:column="69">02350<pos:position pos:line="43" pos:column="74"/></literal></expr></argument>)<pos:position pos:line="43" pos:column="75"/></argument_list></call>
                    <literal type="string" pos:line="44" pos:column="21">"could not acquire lock, ignoring: %s"<pos:position pos:line="44" pos:column="59"/></literal></expr></argument>, <argument><expr><name><name pos:line="44" pos:column="61">obj<pos:position pos:line="44" pos:column="64"/></name><operator pos:line="44" pos:column="64">-&gt;<pos:position pos:line="44" pos:column="69"/></operator><name pos:line="44" pos:column="66">key<pos:position pos:line="44" pos:column="69"/></name></name></expr></argument>)<pos:position pos:line="44" pos:column="70"/></argument_list></call></expr>;<pos:position pos:line="44" pos:column="71"/></expr_stmt>
            <expr_stmt><expr><call><name pos:line="45" pos:column="13">apr_pool_destroy<pos:position pos:line="45" pos:column="29"/></name><argument_list pos:line="45" pos:column="29">(<argument><expr><name><name pos:line="45" pos:column="30">sobj<pos:position pos:line="45" pos:column="34"/></name><operator pos:line="45" pos:column="34">-&gt;<pos:position pos:line="45" pos:column="39"/></operator><name pos:line="45" pos:column="36">pool<pos:position pos:line="45" pos:column="40"/></name></name></expr></argument>)<pos:position pos:line="45" pos:column="41"/></argument_list></call></expr>;<pos:position pos:line="45" pos:column="42"/></expr_stmt>
            <expr_stmt><expr><name><name pos:line="46" pos:column="13">sobj<pos:position pos:line="46" pos:column="17"/></name><operator pos:line="46" pos:column="17">-&gt;<pos:position pos:line="46" pos:column="22"/></operator><name pos:line="46" pos:column="19">pool<pos:position pos:line="46" pos:column="23"/></name></name> <operator pos:line="46" pos:column="24">=<pos:position pos:line="46" pos:column="25"/></operator> <name pos:line="46" pos:column="26">NULL<pos:position pos:line="46" pos:column="30"/></name></expr>;<pos:position pos:line="46" pos:column="31"/></expr_stmt>
            <return pos:line="47" pos:column="13">return <expr><name pos:line="47" pos:column="20">DECLINED<pos:position pos:line="47" pos:column="28"/></name></expr>;<pos:position pos:line="47" pos:column="29"/></return>
        }<pos:position pos:line="48" pos:column="10"/></block></then></if>
    }<pos:position pos:line="49" pos:column="6"/></block></then></if>
    <expr_stmt><expr><name pos:line="50" pos:column="5">buffer_len<pos:position pos:line="50" pos:column="15"/></name> <operator pos:line="50" pos:column="16">=<pos:position pos:line="50" pos:column="17"/></operator> <name><name pos:line="50" pos:column="18">sobj<pos:position pos:line="50" pos:column="22"/></name><operator pos:line="50" pos:column="22">-&gt;<pos:position pos:line="50" pos:column="27"/></operator><name pos:line="50" pos:column="24">buffer_len<pos:position pos:line="50" pos:column="34"/></name></name></expr>;<pos:position pos:line="50" pos:column="35"/></expr_stmt>
    <expr_stmt><expr><name pos:line="51" pos:column="5">rc<pos:position pos:line="51" pos:column="7"/></name> <operator pos:line="51" pos:column="8">=<pos:position pos:line="51" pos:column="9"/></operator> <call><name><name pos:line="51" pos:column="10">conf<pos:position pos:line="51" pos:column="14"/></name><operator pos:line="51" pos:column="14">-&gt;<pos:position pos:line="51" pos:column="19"/></operator><name pos:line="51" pos:column="16">provider<pos:position pos:line="51" pos:column="24"/></name><operator pos:line="51" pos:column="24">-&gt;<pos:position pos:line="51" pos:column="29"/></operator><name pos:line="51" pos:column="26">socache_provider<pos:position pos:line="51" pos:column="42"/></name><operator pos:line="51" pos:column="42">-&gt;<pos:position pos:line="51" pos:column="47"/></operator><name pos:line="51" pos:column="44">retrieve<pos:position pos:line="51" pos:column="52"/></name></name><argument_list pos:line="51" pos:column="52">(
            <argument><expr><name><name pos:line="52" pos:column="13">conf<pos:position pos:line="52" pos:column="17"/></name><operator pos:line="52" pos:column="17">-&gt;<pos:position pos:line="52" pos:column="22"/></operator><name pos:line="52" pos:column="19">provider<pos:position pos:line="52" pos:column="27"/></name><operator pos:line="52" pos:column="27">-&gt;<pos:position pos:line="52" pos:column="32"/></operator><name pos:line="52" pos:column="29">socache_instance<pos:position pos:line="52" pos:column="45"/></name></name></expr></argument>, <argument><expr><name><name pos:line="52" pos:column="47">r<pos:position pos:line="52" pos:column="48"/></name><operator pos:line="52" pos:column="48">-&gt;<pos:position pos:line="52" pos:column="53"/></operator><name pos:line="52" pos:column="50">server<pos:position pos:line="52" pos:column="56"/></name></name></expr></argument>, <argument><expr><operator pos:line="52" pos:column="58">(<pos:position pos:line="52" pos:column="59"/></operator><name pos:line="52" pos:column="59">unsigned<pos:position pos:line="52" pos:column="67"/></name> <name pos:line="52" pos:column="68">char<pos:position pos:line="52" pos:column="72"/></name> <operator pos:line="52" pos:column="73">*<pos:position pos:line="52" pos:column="74"/></operator><operator pos:line="52" pos:column="74">)<pos:position pos:line="52" pos:column="75"/></operator> <name pos:line="52" pos:column="76">key<pos:position pos:line="52" pos:column="79"/></name></expr></argument>,
            <argument><expr><call><name pos:line="53" pos:column="13">strlen<pos:position pos:line="53" pos:column="19"/></name><argument_list pos:line="53" pos:column="19">(<argument><expr><name pos:line="53" pos:column="20">key<pos:position pos:line="53" pos:column="23"/></name></expr></argument>)<pos:position pos:line="53" pos:column="24"/></argument_list></call></expr></argument>, <argument><expr><name><name pos:line="53" pos:column="26">sobj<pos:position pos:line="53" pos:column="30"/></name><operator pos:line="53" pos:column="30">-&gt;<pos:position pos:line="53" pos:column="35"/></operator><name pos:line="53" pos:column="32">buffer<pos:position pos:line="53" pos:column="38"/></name></name></expr></argument>, <argument><expr><operator pos:line="53" pos:column="40">&amp;<pos:position pos:line="53" pos:column="45"/></operator><name pos:line="53" pos:column="41">buffer_len<pos:position pos:line="53" pos:column="51"/></name></expr></argument>, <argument><expr><name><name pos:line="53" pos:column="53">r<pos:position pos:line="53" pos:column="54"/></name><operator pos:line="53" pos:column="54">-&gt;<pos:position pos:line="53" pos:column="59"/></operator><name pos:line="53" pos:column="56">pool<pos:position pos:line="53" pos:column="60"/></name></name></expr></argument>)<pos:position pos:line="53" pos:column="61"/></argument_list></call></expr>;<pos:position pos:line="53" pos:column="62"/></expr_stmt>
    <if pos:line="54" pos:column="5">if <condition pos:line="54" pos:column="8">(<expr><name pos:line="54" pos:column="9">socache_mutex<pos:position pos:line="54" pos:column="22"/></name></expr>)<pos:position pos:line="54" pos:column="23"/></condition><then pos:line="54" pos:column="23"> <block pos:line="54" pos:column="24">{
        <decl_stmt><decl><type><name pos:line="55" pos:column="9">apr_status_t<pos:position pos:line="55" pos:column="21"/></name></type> <name pos:line="55" pos:column="22">status<pos:position pos:line="55" pos:column="28"/></name> <init pos:line="55" pos:column="29">= <expr><call><name pos:line="55" pos:column="31">apr_global_mutex_unlock<pos:position pos:line="55" pos:column="54"/></name><argument_list pos:line="55" pos:column="54">(<argument><expr><name pos:line="55" pos:column="55">socache_mutex<pos:position pos:line="55" pos:column="68"/></name></expr></argument>)<pos:position pos:line="55" pos:column="69"/></argument_list></call></expr></init></decl>;<pos:position pos:line="55" pos:column="70"/></decl_stmt>
        <if pos:line="56" pos:column="9">if <condition pos:line="56" pos:column="12">(<expr><name pos:line="56" pos:column="13">status<pos:position pos:line="56" pos:column="19"/></name> <operator pos:line="56" pos:column="20">!=<pos:position pos:line="56" pos:column="22"/></operator> <name pos:line="56" pos:column="23">APR_SUCCESS<pos:position pos:line="56" pos:column="34"/></name></expr>)<pos:position pos:line="56" pos:column="35"/></condition><then pos:line="56" pos:column="35"> <block pos:line="56" pos:column="36">{
            <expr_stmt><expr><call><name pos:line="57" pos:column="13">ap_log_rerror<pos:position pos:line="57" pos:column="26"/></name><argument_list pos:line="57" pos:column="26">(<argument><expr><name pos:line="57" pos:column="27">APLOG_MARK<pos:position pos:line="57" pos:column="37"/></name></expr></argument>, <argument><expr><name pos:line="57" pos:column="39">APLOG_ERR<pos:position pos:line="57" pos:column="48"/></name></expr></argument>, <argument><expr><name pos:line="57" pos:column="50">status<pos:position pos:line="57" pos:column="56"/></name></expr></argument>, <argument><expr><name pos:line="57" pos:column="58">r<pos:position pos:line="57" pos:column="59"/></name></expr></argument>, <argument><expr><call><name pos:line="57" pos:column="61">APLOGNO<pos:position pos:line="57" pos:column="68"/></name><argument_list pos:line="57" pos:column="68">(<argument><expr><literal type="number" pos:line="57" pos:column="69">02351<pos:position pos:line="57" pos:column="74"/></literal></expr></argument>)<pos:position pos:line="57" pos:column="75"/></argument_list></call>
                    <literal type="string" pos:line="58" pos:column="21">"could not release lock, ignoring: %s"<pos:position pos:line="58" pos:column="59"/></literal></expr></argument>, <argument><expr><name><name pos:line="58" pos:column="61">obj<pos:position pos:line="58" pos:column="64"/></name><operator pos:line="58" pos:column="64">-&gt;<pos:position pos:line="58" pos:column="69"/></operator><name pos:line="58" pos:column="66">key<pos:position pos:line="58" pos:column="69"/></name></name></expr></argument>)<pos:position pos:line="58" pos:column="70"/></argument_list></call></expr>;<pos:position pos:line="58" pos:column="71"/></expr_stmt>
            <expr_stmt><expr><call><name pos:line="59" pos:column="13">apr_pool_destroy<pos:position pos:line="59" pos:column="29"/></name><argument_list pos:line="59" pos:column="29">(<argument><expr><name><name pos:line="59" pos:column="30">sobj<pos:position pos:line="59" pos:column="34"/></name><operator pos:line="59" pos:column="34">-&gt;<pos:position pos:line="59" pos:column="39"/></operator><name pos:line="59" pos:column="36">pool<pos:position pos:line="59" pos:column="40"/></name></name></expr></argument>)<pos:position pos:line="59" pos:column="41"/></argument_list></call></expr>;<pos:position pos:line="59" pos:column="42"/></expr_stmt>
            <expr_stmt><expr><name><name pos:line="60" pos:column="13">sobj<pos:position pos:line="60" pos:column="17"/></name><operator pos:line="60" pos:column="17">-&gt;<pos:position pos:line="60" pos:column="22"/></operator><name pos:line="60" pos:column="19">pool<pos:position pos:line="60" pos:column="23"/></name></name> <operator pos:line="60" pos:column="24">=<pos:position pos:line="60" pos:column="25"/></operator> <name pos:line="60" pos:column="26">NULL<pos:position pos:line="60" pos:column="30"/></name></expr>;<pos:position pos:line="60" pos:column="31"/></expr_stmt>
            <return pos:line="61" pos:column="13">return <expr><name pos:line="61" pos:column="20">DECLINED<pos:position pos:line="61" pos:column="28"/></name></expr>;<pos:position pos:line="61" pos:column="29"/></return>
        }<pos:position pos:line="62" pos:column="10"/></block></then></if>
    }<pos:position pos:line="63" pos:column="6"/></block></then></if>
    <if pos:line="64" pos:column="5">if <condition pos:line="64" pos:column="8">(<expr><name pos:line="64" pos:column="9">rc<pos:position pos:line="64" pos:column="11"/></name> <operator pos:line="64" pos:column="12">!=<pos:position pos:line="64" pos:column="14"/></operator> <name pos:line="64" pos:column="15">APR_SUCCESS<pos:position pos:line="64" pos:column="26"/></name></expr>)<pos:position pos:line="64" pos:column="27"/></condition><then pos:line="64" pos:column="27"> <block pos:line="64" pos:column="28">{
        <expr_stmt><expr><call><name pos:line="65" pos:column="9">ap_log_rerror<pos:position pos:line="65" pos:column="22"/></name><argument_list pos:line="65" pos:column="22">(<argument><expr><name pos:line="65" pos:column="23">APLOG_MARK<pos:position pos:line="65" pos:column="33"/></name></expr></argument>, <argument><expr><name pos:line="65" pos:column="35">APLOG_DEBUG<pos:position pos:line="65" pos:column="46"/></name></expr></argument>, <argument><expr><name pos:line="65" pos:column="48">rc<pos:position pos:line="65" pos:column="50"/></name></expr></argument>, <argument><expr><name pos:line="65" pos:column="52">r<pos:position pos:line="65" pos:column="53"/></name></expr></argument>, <argument><expr><call><name pos:line="65" pos:column="55">APLOGNO<pos:position pos:line="65" pos:column="62"/></name><argument_list pos:line="65" pos:column="62">(<argument><expr><literal type="number" pos:line="65" pos:column="63">02352<pos:position pos:line="65" pos:column="68"/></literal></expr></argument>)<pos:position pos:line="65" pos:column="69"/></argument_list></call>
                <literal type="string" pos:line="66" pos:column="17">"Key not found in cache: %s"<pos:position pos:line="66" pos:column="45"/></literal></expr></argument>, <argument><expr><name pos:line="66" pos:column="47">key<pos:position pos:line="66" pos:column="50"/></name></expr></argument>)<pos:position pos:line="66" pos:column="51"/></argument_list></call></expr>;<pos:position pos:line="66" pos:column="52"/></expr_stmt>
        <expr_stmt><expr><call><name pos:line="67" pos:column="9">apr_pool_destroy<pos:position pos:line="67" pos:column="25"/></name><argument_list pos:line="67" pos:column="25">(<argument><expr><name><name pos:line="67" pos:column="26">sobj<pos:position pos:line="67" pos:column="30"/></name><operator pos:line="67" pos:column="30">-&gt;<pos:position pos:line="67" pos:column="35"/></operator><name pos:line="67" pos:column="32">pool<pos:position pos:line="67" pos:column="36"/></name></name></expr></argument>)<pos:position pos:line="67" pos:column="37"/></argument_list></call></expr>;<pos:position pos:line="67" pos:column="38"/></expr_stmt>
        <expr_stmt><expr><name><name pos:line="68" pos:column="9">sobj<pos:position pos:line="68" pos:column="13"/></name><operator pos:line="68" pos:column="13">-&gt;<pos:position pos:line="68" pos:column="18"/></operator><name pos:line="68" pos:column="15">pool<pos:position pos:line="68" pos:column="19"/></name></name> <operator pos:line="68" pos:column="20">=<pos:position pos:line="68" pos:column="21"/></operator> <name pos:line="68" pos:column="22">NULL<pos:position pos:line="68" pos:column="26"/></name></expr>;<pos:position pos:line="68" pos:column="27"/></expr_stmt>
        <return pos:line="69" pos:column="9">return <expr><name pos:line="69" pos:column="16">DECLINED<pos:position pos:line="69" pos:column="24"/></name></expr>;<pos:position pos:line="69" pos:column="25"/></return>
    }<pos:position pos:line="70" pos:column="6"/></block></then></if>
    <if pos:line="71" pos:column="5">if <condition pos:line="71" pos:column="8">(<expr><name pos:line="71" pos:column="9">buffer_len<pos:position pos:line="71" pos:column="19"/></name> <operator pos:line="71" pos:column="20">&gt;=<pos:position pos:line="71" pos:column="25"/></operator> <name><name pos:line="71" pos:column="23">sobj<pos:position pos:line="71" pos:column="27"/></name><operator pos:line="71" pos:column="27">-&gt;<pos:position pos:line="71" pos:column="32"/></operator><name pos:line="71" pos:column="29">buffer_len<pos:position pos:line="71" pos:column="39"/></name></name></expr>)<pos:position pos:line="71" pos:column="40"/></condition><then pos:line="71" pos:column="40"> <block pos:line="71" pos:column="41">{
        <expr_stmt><expr><call><name pos:line="72" pos:column="9">ap_log_rerror<pos:position pos:line="72" pos:column="22"/></name><argument_list pos:line="72" pos:column="22">(<argument><expr><name pos:line="72" pos:column="23">APLOG_MARK<pos:position pos:line="72" pos:column="33"/></name></expr></argument>, <argument><expr><name pos:line="72" pos:column="35">APLOG_DEBUG<pos:position pos:line="72" pos:column="46"/></name></expr></argument>, <argument><expr><name pos:line="72" pos:column="48">rc<pos:position pos:line="72" pos:column="50"/></name></expr></argument>, <argument><expr><name pos:line="72" pos:column="52">r<pos:position pos:line="72" pos:column="53"/></name></expr></argument>, <argument><expr><call><name pos:line="72" pos:column="55">APLOGNO<pos:position pos:line="72" pos:column="62"/></name><argument_list pos:line="72" pos:column="62">(<argument><expr><literal type="number" pos:line="72" pos:column="63">02353<pos:position pos:line="72" pos:column="68"/></literal></expr></argument>)<pos:position pos:line="72" pos:column="69"/></argument_list></call>
                <literal type="string" pos:line="73" pos:column="17">"Key found in cache but too big, ignoring: %s"<pos:position pos:line="73" pos:column="63"/></literal></expr></argument>, <argument><expr><name pos:line="73" pos:column="65">key<pos:position pos:line="73" pos:column="68"/></name></expr></argument>)<pos:position pos:line="73" pos:column="69"/></argument_list></call></expr>;<pos:position pos:line="73" pos:column="70"/></expr_stmt>
        <expr_stmt><expr><call><name pos:line="74" pos:column="9">apr_pool_destroy<pos:position pos:line="74" pos:column="25"/></name><argument_list pos:line="74" pos:column="25">(<argument><expr><name><name pos:line="74" pos:column="26">sobj<pos:position pos:line="74" pos:column="30"/></name><operator pos:line="74" pos:column="30">-&gt;<pos:position pos:line="74" pos:column="35"/></operator><name pos:line="74" pos:column="32">pool<pos:position pos:line="74" pos:column="36"/></name></name></expr></argument>)<pos:position pos:line="74" pos:column="37"/></argument_list></call></expr>;<pos:position pos:line="74" pos:column="38"/></expr_stmt>
        <expr_stmt><expr><name><name pos:line="75" pos:column="9">sobj<pos:position pos:line="75" pos:column="13"/></name><operator pos:line="75" pos:column="13">-&gt;<pos:position pos:line="75" pos:column="18"/></operator><name pos:line="75" pos:column="15">pool<pos:position pos:line="75" pos:column="19"/></name></name> <operator pos:line="75" pos:column="20">=<pos:position pos:line="75" pos:column="21"/></operator> <name pos:line="75" pos:column="22">NULL<pos:position pos:line="75" pos:column="26"/></name></expr>;<pos:position pos:line="75" pos:column="27"/></expr_stmt>
        <return pos:line="76" pos:column="9">return <expr><name pos:line="76" pos:column="16">DECLINED<pos:position pos:line="76" pos:column="24"/></name></expr>;<pos:position pos:line="76" pos:column="25"/></return>
    }<pos:position pos:line="77" pos:column="6"/></block></then></if>

    <comment type="block" pos:line="79" pos:column="5">/* read the format from the cache file */</comment>
    <expr_stmt><expr><call><name pos:line="80" pos:column="5">memcpy<pos:position pos:line="80" pos:column="11"/></name><argument_list pos:line="80" pos:column="11">(<argument><expr><operator pos:line="80" pos:column="12">&amp;<pos:position pos:line="80" pos:column="17"/></operator><name pos:line="80" pos:column="13">format<pos:position pos:line="80" pos:column="19"/></name></expr></argument>, <argument><expr><name><name pos:line="80" pos:column="21">sobj<pos:position pos:line="80" pos:column="25"/></name><operator pos:line="80" pos:column="25">-&gt;<pos:position pos:line="80" pos:column="30"/></operator><name pos:line="80" pos:column="27">buffer<pos:position pos:line="80" pos:column="33"/></name></name></expr></argument>, <argument><expr><sizeof pos:line="80" pos:column="35">sizeof<argument_list pos:line="80" pos:column="41">(<argument><expr><name pos:line="80" pos:column="42">format<pos:position pos:line="80" pos:column="48"/></name></expr></argument>)<pos:position pos:line="80" pos:column="49"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="80" pos:column="50"/></argument_list></call></expr>;<pos:position pos:line="80" pos:column="51"/></expr_stmt>
    <expr_stmt><expr><name pos:line="81" pos:column="5">slider<pos:position pos:line="81" pos:column="11"/></name> <operator pos:line="81" pos:column="12">=<pos:position pos:line="81" pos:column="13"/></operator> <sizeof pos:line="81" pos:column="14">sizeof<argument_list pos:line="81" pos:column="20">(<argument><expr><name pos:line="81" pos:column="21">format<pos:position pos:line="81" pos:column="27"/></name></expr></argument>)<pos:position pos:line="81" pos:column="28"/></argument_list></sizeof></expr>;<pos:position pos:line="81" pos:column="29"/></expr_stmt>

    <if pos:line="83" pos:column="5">if <condition pos:line="83" pos:column="8">(<expr><name pos:line="83" pos:column="9">format<pos:position pos:line="83" pos:column="15"/></name> <operator pos:line="83" pos:column="16">==<pos:position pos:line="83" pos:column="18"/></operator> <name pos:line="83" pos:column="19">CACHE_SOCACHE_VARY_FORMAT_VERSION<pos:position pos:line="83" pos:column="52"/></name></expr>)<pos:position pos:line="83" pos:column="53"/></condition><then pos:line="83" pos:column="53"> <block pos:line="83" pos:column="54">{
        <decl_stmt><decl><type><name pos:line="84" pos:column="9">apr_array_header_t<pos:position pos:line="84" pos:column="27"/></name><modifier pos:line="84" pos:column="27">*<pos:position pos:line="84" pos:column="28"/></modifier></type> <name pos:line="84" pos:column="29">varray<pos:position pos:line="84" pos:column="35"/></name></decl>;<pos:position pos:line="84" pos:column="36"/></decl_stmt>
        <decl_stmt><decl><type><name pos:line="85" pos:column="9">apr_time_t<pos:position pos:line="85" pos:column="19"/></name></type> <name pos:line="85" pos:column="20">expire<pos:position pos:line="85" pos:column="26"/></name></decl>;<pos:position pos:line="85" pos:column="27"/></decl_stmt>

        <expr_stmt><expr><call><name pos:line="87" pos:column="9">memcpy<pos:position pos:line="87" pos:column="15"/></name><argument_list pos:line="87" pos:column="15">(<argument><expr><operator pos:line="87" pos:column="16">&amp;<pos:position pos:line="87" pos:column="21"/></operator><name pos:line="87" pos:column="17">expire<pos:position pos:line="87" pos:column="23"/></name></expr></argument>, <argument><expr><name><name pos:line="87" pos:column="25">sobj<pos:position pos:line="87" pos:column="29"/></name><operator pos:line="87" pos:column="29">-&gt;<pos:position pos:line="87" pos:column="34"/></operator><name pos:line="87" pos:column="31">buffer<pos:position pos:line="87" pos:column="37"/></name></name> <operator pos:line="87" pos:column="38">+<pos:position pos:line="87" pos:column="39"/></operator> <name pos:line="87" pos:column="40">slider<pos:position pos:line="87" pos:column="46"/></name></expr></argument>, <argument><expr><sizeof pos:line="87" pos:column="48">sizeof<argument_list pos:line="87" pos:column="54">(<argument><expr><name pos:line="87" pos:column="55">expire<pos:position pos:line="87" pos:column="61"/></name></expr></argument>)<pos:position pos:line="87" pos:column="62"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="87" pos:column="63"/></argument_list></call></expr>;<pos:position pos:line="87" pos:column="64"/></expr_stmt>
        <expr_stmt><expr><name pos:line="88" pos:column="9">slider<pos:position pos:line="88" pos:column="15"/></name> <operator pos:line="88" pos:column="16">+=<pos:position pos:line="88" pos:column="18"/></operator> <sizeof pos:line="88" pos:column="19">sizeof<argument_list pos:line="88" pos:column="25">(<argument><expr><name pos:line="88" pos:column="26">expire<pos:position pos:line="88" pos:column="32"/></name></expr></argument>)<pos:position pos:line="88" pos:column="33"/></argument_list></sizeof></expr>;<pos:position pos:line="88" pos:column="34"/></expr_stmt>

        <expr_stmt><expr><name pos:line="90" pos:column="9">varray<pos:position pos:line="90" pos:column="15"/></name> <operator pos:line="90" pos:column="16">=<pos:position pos:line="90" pos:column="17"/></operator> <call><name pos:line="90" pos:column="18">apr_array_make<pos:position pos:line="90" pos:column="32"/></name><argument_list pos:line="90" pos:column="32">(<argument><expr><name><name pos:line="90" pos:column="33">r<pos:position pos:line="90" pos:column="34"/></name><operator pos:line="90" pos:column="34">-&gt;<pos:position pos:line="90" pos:column="39"/></operator><name pos:line="90" pos:column="36">pool<pos:position pos:line="90" pos:column="40"/></name></name></expr></argument>, <argument><expr><literal type="number" pos:line="90" pos:column="42">5<pos:position pos:line="90" pos:column="43"/></literal></expr></argument>, <argument><expr><sizeof pos:line="90" pos:column="45">sizeof<argument_list pos:line="90" pos:column="51">(<argument><expr><name pos:line="90" pos:column="52">char<pos:position pos:line="90" pos:column="56"/></name><operator pos:line="90" pos:column="56">*<pos:position pos:line="90" pos:column="57"/></operator></expr></argument>)<pos:position pos:line="90" pos:column="58"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="90" pos:column="59"/></argument_list></call></expr>;<pos:position pos:line="90" pos:column="60"/></expr_stmt>
        <expr_stmt><expr><name pos:line="91" pos:column="9">rc<pos:position pos:line="91" pos:column="11"/></name> <operator pos:line="91" pos:column="12">=<pos:position pos:line="91" pos:column="13"/></operator> <call><name pos:line="91" pos:column="14">read_array<pos:position pos:line="91" pos:column="24"/></name><argument_list pos:line="91" pos:column="24">(<argument><expr><name pos:line="91" pos:column="25">r<pos:position pos:line="91" pos:column="26"/></name></expr></argument>, <argument><expr><name pos:line="91" pos:column="28">varray<pos:position pos:line="91" pos:column="34"/></name></expr></argument>, <argument><expr><name><name pos:line="91" pos:column="36">sobj<pos:position pos:line="91" pos:column="40"/></name><operator pos:line="91" pos:column="40">-&gt;<pos:position pos:line="91" pos:column="45"/></operator><name pos:line="91" pos:column="42">buffer<pos:position pos:line="91" pos:column="48"/></name></name></expr></argument>, <argument><expr><name pos:line="91" pos:column="50">buffer_len<pos:position pos:line="91" pos:column="60"/></name></expr></argument>, <argument><expr><operator pos:line="91" pos:column="62">&amp;<pos:position pos:line="91" pos:column="67"/></operator><name pos:line="91" pos:column="63">slider<pos:position pos:line="91" pos:column="69"/></name></expr></argument>)<pos:position pos:line="91" pos:column="70"/></argument_list></call></expr>;<pos:position pos:line="91" pos:column="71"/></expr_stmt>
        <if pos:line="92" pos:column="9">if <condition pos:line="92" pos:column="12">(<expr><name pos:line="92" pos:column="13">rc<pos:position pos:line="92" pos:column="15"/></name> <operator pos:line="92" pos:column="16">!=<pos:position pos:line="92" pos:column="18"/></operator> <name pos:line="92" pos:column="19">APR_SUCCESS<pos:position pos:line="92" pos:column="30"/></name></expr>)<pos:position pos:line="92" pos:column="31"/></condition><then pos:line="92" pos:column="31"> <block pos:line="92" pos:column="32">{
            <expr_stmt><expr><call><name pos:line="93" pos:column="13">ap_log_rerror<pos:position pos:line="93" pos:column="26"/></name><argument_list pos:line="93" pos:column="26">(<argument><expr><name pos:line="93" pos:column="27">APLOG_MARK<pos:position pos:line="93" pos:column="37"/></name></expr></argument>, <argument><expr><name pos:line="93" pos:column="39">APLOG_ERR<pos:position pos:line="93" pos:column="48"/></name></expr></argument>, <argument><expr><name pos:line="93" pos:column="50">rc<pos:position pos:line="93" pos:column="52"/></name></expr></argument>, <argument><expr><name pos:line="93" pos:column="54">r<pos:position pos:line="93" pos:column="55"/></name></expr></argument>, <argument><expr><call><name pos:line="93" pos:column="57">APLOGNO<pos:position pos:line="93" pos:column="64"/></name><argument_list pos:line="93" pos:column="64">(<argument><expr><literal type="number" pos:line="93" pos:column="65">02354<pos:position pos:line="93" pos:column="70"/></literal></expr></argument>)<pos:position pos:line="93" pos:column="71"/></argument_list></call>
                    <literal type="string" pos:line="94" pos:column="21">"Cannot parse vary entry for key: %s"<pos:position pos:line="94" pos:column="58"/></literal></expr></argument>, <argument><expr><name pos:line="94" pos:column="60">key<pos:position pos:line="94" pos:column="63"/></name></expr></argument>)<pos:position pos:line="94" pos:column="64"/></argument_list></call></expr>;<pos:position pos:line="94" pos:column="65"/></expr_stmt>
            <expr_stmt><expr><call><name pos:line="95" pos:column="13">apr_pool_destroy<pos:position pos:line="95" pos:column="29"/></name><argument_list pos:line="95" pos:column="29">(<argument><expr><name><name pos:line="95" pos:column="30">sobj<pos:position pos:line="95" pos:column="34"/></name><operator pos:line="95" pos:column="34">-&gt;<pos:position pos:line="95" pos:column="39"/></operator><name pos:line="95" pos:column="36">pool<pos:position pos:line="95" pos:column="40"/></name></name></expr></argument>)<pos:position pos:line="95" pos:column="41"/></argument_list></call></expr>;<pos:position pos:line="95" pos:column="42"/></expr_stmt>
            <expr_stmt><expr><name><name pos:line="96" pos:column="13">sobj<pos:position pos:line="96" pos:column="17"/></name><operator pos:line="96" pos:column="17">-&gt;<pos:position pos:line="96" pos:column="22"/></operator><name pos:line="96" pos:column="19">pool<pos:position pos:line="96" pos:column="23"/></name></name> <operator pos:line="96" pos:column="24">=<pos:position pos:line="96" pos:column="25"/></operator> <name pos:line="96" pos:column="26">NULL<pos:position pos:line="96" pos:column="30"/></name></expr>;<pos:position pos:line="96" pos:column="31"/></expr_stmt>
            <return pos:line="97" pos:column="13">return <expr><name pos:line="97" pos:column="20">DECLINED<pos:position pos:line="97" pos:column="28"/></name></expr>;<pos:position pos:line="97" pos:column="29"/></return>
        }<pos:position pos:line="98" pos:column="10"/></block></then></if>

        <expr_stmt><expr><name pos:line="100" pos:column="9">nkey<pos:position pos:line="100" pos:column="13"/></name> <operator pos:line="100" pos:column="14">=<pos:position pos:line="100" pos:column="15"/></operator> <call><name pos:line="100" pos:column="16">regen_key<pos:position pos:line="100" pos:column="25"/></name><argument_list pos:line="100" pos:column="25">(<argument><expr><name><name pos:line="100" pos:column="26">r<pos:position pos:line="100" pos:column="27"/></name><operator pos:line="100" pos:column="27">-&gt;<pos:position pos:line="100" pos:column="32"/></operator><name pos:line="100" pos:column="29">pool<pos:position pos:line="100" pos:column="33"/></name></name></expr></argument>, <argument><expr><name><name pos:line="100" pos:column="35">r<pos:position pos:line="100" pos:column="36"/></name><operator pos:line="100" pos:column="36">-&gt;<pos:position pos:line="100" pos:column="41"/></operator><name pos:line="100" pos:column="38">headers_in<pos:position pos:line="100" pos:column="48"/></name></name></expr></argument>, <argument><expr><name pos:line="100" pos:column="50">varray<pos:position pos:line="100" pos:column="56"/></name></expr></argument>, <argument><expr><name pos:line="100" pos:column="58">key<pos:position pos:line="100" pos:column="61"/></name></expr></argument>)<pos:position pos:line="100" pos:column="62"/></argument_list></call></expr>;<pos:position pos:line="100" pos:column="63"/></expr_stmt>

        <comment type="block" pos:line="102" pos:column="9">/* attempt to retrieve the cached entry */</comment>
        <if pos:line="103" pos:column="9">if <condition pos:line="103" pos:column="12">(<expr><name pos:line="103" pos:column="13">socache_mutex<pos:position pos:line="103" pos:column="26"/></name></expr>)<pos:position pos:line="103" pos:column="27"/></condition><then pos:line="103" pos:column="27"> <block pos:line="103" pos:column="28">{
            <decl_stmt><decl><type><name pos:line="104" pos:column="13">apr_status_t<pos:position pos:line="104" pos:column="25"/></name></type> <name pos:line="104" pos:column="26">status<pos:position pos:line="104" pos:column="32"/></name> <init pos:line="104" pos:column="33">= <expr><call><name pos:line="104" pos:column="35">apr_global_mutex_lock<pos:position pos:line="104" pos:column="56"/></name><argument_list pos:line="104" pos:column="56">(<argument><expr><name pos:line="104" pos:column="57">socache_mutex<pos:position pos:line="104" pos:column="70"/></name></expr></argument>)<pos:position pos:line="104" pos:column="71"/></argument_list></call></expr></init></decl>;<pos:position pos:line="104" pos:column="72"/></decl_stmt>
            <if pos:line="105" pos:column="13">if <condition pos:line="105" pos:column="16">(<expr><name pos:line="105" pos:column="17">status<pos:position pos:line="105" pos:column="23"/></name> <operator pos:line="105" pos:column="24">!=<pos:position pos:line="105" pos:column="26"/></operator> <name pos:line="105" pos:column="27">APR_SUCCESS<pos:position pos:line="105" pos:column="38"/></name></expr>)<pos:position pos:line="105" pos:column="39"/></condition><then pos:line="105" pos:column="39"> <block pos:line="105" pos:column="40">{
                <expr_stmt><expr><call><name pos:line="106" pos:column="17">ap_log_rerror<pos:position pos:line="106" pos:column="30"/></name><argument_list pos:line="106" pos:column="30">(<argument><expr><name pos:line="106" pos:column="31">APLOG_MARK<pos:position pos:line="106" pos:column="41"/></name></expr></argument>, <argument><expr><name pos:line="106" pos:column="43">APLOG_ERR<pos:position pos:line="106" pos:column="52"/></name></expr></argument>, <argument><expr><name pos:line="106" pos:column="54">status<pos:position pos:line="106" pos:column="60"/></name></expr></argument>, <argument><expr><name pos:line="106" pos:column="62">r<pos:position pos:line="106" pos:column="63"/></name></expr></argument>, <argument><expr><call><name pos:line="106" pos:column="65">APLOGNO<pos:position pos:line="106" pos:column="72"/></name><argument_list pos:line="106" pos:column="72">(<argument><expr><literal type="number" pos:line="106" pos:column="73">02355<pos:position pos:line="106" pos:column="78"/></literal></expr></argument>)<pos:position pos:line="106" pos:column="79"/></argument_list></call>
                        <literal type="string" pos:line="107" pos:column="25">"could not acquire lock, ignoring: %s"<pos:position pos:line="107" pos:column="63"/></literal></expr></argument>, <argument><expr><name><name pos:line="107" pos:column="65">obj<pos:position pos:line="107" pos:column="68"/></name><operator pos:line="107" pos:column="68">-&gt;<pos:position pos:line="107" pos:column="73"/></operator><name pos:line="107" pos:column="70">key<pos:position pos:line="107" pos:column="73"/></name></name></expr></argument>)<pos:position pos:line="107" pos:column="74"/></argument_list></call></expr>;<pos:position pos:line="107" pos:column="75"/></expr_stmt>
                <expr_stmt><expr><call><name pos:line="108" pos:column="17">apr_pool_destroy<pos:position pos:line="108" pos:column="33"/></name><argument_list pos:line="108" pos:column="33">(<argument><expr><name><name pos:line="108" pos:column="34">sobj<pos:position pos:line="108" pos:column="38"/></name><operator pos:line="108" pos:column="38">-&gt;<pos:position pos:line="108" pos:column="43"/></operator><name pos:line="108" pos:column="40">pool<pos:position pos:line="108" pos:column="44"/></name></name></expr></argument>)<pos:position pos:line="108" pos:column="45"/></argument_list></call></expr>;<pos:position pos:line="108" pos:column="46"/></expr_stmt>
                <expr_stmt><expr><name><name pos:line="109" pos:column="17">sobj<pos:position pos:line="109" pos:column="21"/></name><operator pos:line="109" pos:column="21">-&gt;<pos:position pos:line="109" pos:column="26"/></operator><name pos:line="109" pos:column="23">pool<pos:position pos:line="109" pos:column="27"/></name></name> <operator pos:line="109" pos:column="28">=<pos:position pos:line="109" pos:column="29"/></operator> <name pos:line="109" pos:column="30">NULL<pos:position pos:line="109" pos:column="34"/></name></expr>;<pos:position pos:line="109" pos:column="35"/></expr_stmt>
                <return pos:line="110" pos:column="17">return <expr><name pos:line="110" pos:column="24">DECLINED<pos:position pos:line="110" pos:column="32"/></name></expr>;<pos:position pos:line="110" pos:column="33"/></return>
            }<pos:position pos:line="111" pos:column="14"/></block></then></if>
        }<pos:position pos:line="112" pos:column="10"/></block></then></if>
        <expr_stmt><expr><name pos:line="113" pos:column="9">buffer_len<pos:position pos:line="113" pos:column="19"/></name> <operator pos:line="113" pos:column="20">=<pos:position pos:line="113" pos:column="21"/></operator> <name><name pos:line="113" pos:column="22">sobj<pos:position pos:line="113" pos:column="26"/></name><operator pos:line="113" pos:column="26">-&gt;<pos:position pos:line="113" pos:column="31"/></operator><name pos:line="113" pos:column="28">buffer_len<pos:position pos:line="113" pos:column="38"/></name></name></expr>;<pos:position pos:line="113" pos:column="39"/></expr_stmt>
        <expr_stmt><expr><name pos:line="114" pos:column="9">rc<pos:position pos:line="114" pos:column="11"/></name> <operator pos:line="114" pos:column="12">=<pos:position pos:line="114" pos:column="13"/></operator> <call><name><name pos:line="114" pos:column="14">conf<pos:position pos:line="114" pos:column="18"/></name><operator pos:line="114" pos:column="18">-&gt;<pos:position pos:line="114" pos:column="23"/></operator><name pos:line="114" pos:column="20">provider<pos:position pos:line="114" pos:column="28"/></name><operator pos:line="114" pos:column="28">-&gt;<pos:position pos:line="114" pos:column="33"/></operator><name pos:line="114" pos:column="30">socache_provider<pos:position pos:line="114" pos:column="46"/></name><operator pos:line="114" pos:column="46">-&gt;<pos:position pos:line="114" pos:column="51"/></operator><name pos:line="114" pos:column="48">retrieve<pos:position pos:line="114" pos:column="56"/></name></name><argument_list pos:line="114" pos:column="56">(
                <argument><expr><name><name pos:line="115" pos:column="17">conf<pos:position pos:line="115" pos:column="21"/></name><operator pos:line="115" pos:column="21">-&gt;<pos:position pos:line="115" pos:column="26"/></operator><name pos:line="115" pos:column="23">provider<pos:position pos:line="115" pos:column="31"/></name><operator pos:line="115" pos:column="31">-&gt;<pos:position pos:line="115" pos:column="36"/></operator><name pos:line="115" pos:column="33">socache_instance<pos:position pos:line="115" pos:column="49"/></name></name></expr></argument>, <argument><expr><name><name pos:line="115" pos:column="51">r<pos:position pos:line="115" pos:column="52"/></name><operator pos:line="115" pos:column="52">-&gt;<pos:position pos:line="115" pos:column="57"/></operator><name pos:line="115" pos:column="54">server<pos:position pos:line="115" pos:column="60"/></name></name></expr></argument>,
                <argument><expr><operator pos:line="116" pos:column="17">(<pos:position pos:line="116" pos:column="18"/></operator><name pos:line="116" pos:column="18">unsigned<pos:position pos:line="116" pos:column="26"/></name> <name pos:line="116" pos:column="27">char<pos:position pos:line="116" pos:column="31"/></name> <operator pos:line="116" pos:column="32">*<pos:position pos:line="116" pos:column="33"/></operator><operator pos:line="116" pos:column="33">)<pos:position pos:line="116" pos:column="34"/></operator> <name pos:line="116" pos:column="35">nkey<pos:position pos:line="116" pos:column="39"/></name></expr></argument>, <argument><expr><call><name pos:line="116" pos:column="41">strlen<pos:position pos:line="116" pos:column="47"/></name><argument_list pos:line="116" pos:column="47">(<argument><expr><name pos:line="116" pos:column="48">nkey<pos:position pos:line="116" pos:column="52"/></name></expr></argument>)<pos:position pos:line="116" pos:column="53"/></argument_list></call></expr></argument>, <argument><expr><name><name pos:line="116" pos:column="55">sobj<pos:position pos:line="116" pos:column="59"/></name><operator pos:line="116" pos:column="59">-&gt;<pos:position pos:line="116" pos:column="64"/></operator><name pos:line="116" pos:column="61">buffer<pos:position pos:line="116" pos:column="67"/></name></name></expr></argument>,
                <argument><expr><operator pos:line="117" pos:column="17">&amp;<pos:position pos:line="117" pos:column="22"/></operator><name pos:line="117" pos:column="18">buffer_len<pos:position pos:line="117" pos:column="28"/></name></expr></argument>, <argument><expr><name><name pos:line="117" pos:column="30">r<pos:position pos:line="117" pos:column="31"/></name><operator pos:line="117" pos:column="31">-&gt;<pos:position pos:line="117" pos:column="36"/></operator><name pos:line="117" pos:column="33">pool<pos:position pos:line="117" pos:column="37"/></name></name></expr></argument>)<pos:position pos:line="117" pos:column="38"/></argument_list></call></expr>;<pos:position pos:line="117" pos:column="39"/></expr_stmt>
        <if pos:line="118" pos:column="9">if <condition pos:line="118" pos:column="12">(<expr><name pos:line="118" pos:column="13">socache_mutex<pos:position pos:line="118" pos:column="26"/></name></expr>)<pos:position pos:line="118" pos:column="27"/></condition><then pos:line="118" pos:column="27"> <block pos:line="118" pos:column="28">{
            <decl_stmt><decl><type><name pos:line="119" pos:column="13">apr_status_t<pos:position pos:line="119" pos:column="25"/></name></type> <name pos:line="119" pos:column="26">status<pos:position pos:line="119" pos:column="32"/></name> <init pos:line="119" pos:column="33">= <expr><call><name pos:line="119" pos:column="35">apr_global_mutex_unlock<pos:position pos:line="119" pos:column="58"/></name><argument_list pos:line="119" pos:column="58">(<argument><expr><name pos:line="119" pos:column="59">socache_mutex<pos:position pos:line="119" pos:column="72"/></name></expr></argument>)<pos:position pos:line="119" pos:column="73"/></argument_list></call></expr></init></decl>;<pos:position pos:line="119" pos:column="74"/></decl_stmt>
            <if pos:line="120" pos:column="13">if <condition pos:line="120" pos:column="16">(<expr><name pos:line="120" pos:column="17">status<pos:position pos:line="120" pos:column="23"/></name> <operator pos:line="120" pos:column="24">!=<pos:position pos:line="120" pos:column="26"/></operator> <name pos:line="120" pos:column="27">APR_SUCCESS<pos:position pos:line="120" pos:column="38"/></name></expr>)<pos:position pos:line="120" pos:column="39"/></condition><then pos:line="120" pos:column="39"> <block pos:line="120" pos:column="40">{
                <expr_stmt><expr><call><name pos:line="121" pos:column="17">ap_log_rerror<pos:position pos:line="121" pos:column="30"/></name><argument_list pos:line="121" pos:column="30">(<argument><expr><name pos:line="121" pos:column="31">APLOG_MARK<pos:position pos:line="121" pos:column="41"/></name></expr></argument>, <argument><expr><name pos:line="121" pos:column="43">APLOG_ERR<pos:position pos:line="121" pos:column="52"/></name></expr></argument>, <argument><expr><name pos:line="121" pos:column="54">status<pos:position pos:line="121" pos:column="60"/></name></expr></argument>, <argument><expr><name pos:line="121" pos:column="62">r<pos:position pos:line="121" pos:column="63"/></name></expr></argument>, <argument><expr><call><name pos:line="121" pos:column="65">APLOGNO<pos:position pos:line="121" pos:column="72"/></name><argument_list pos:line="121" pos:column="72">(<argument><expr><literal type="number" pos:line="121" pos:column="73">02356<pos:position pos:line="121" pos:column="78"/></literal></expr></argument>)<pos:position pos:line="121" pos:column="79"/></argument_list></call>
                        <literal type="string" pos:line="122" pos:column="25">"could not release lock, ignoring: %s"<pos:position pos:line="122" pos:column="63"/></literal></expr></argument>, <argument><expr><name><name pos:line="122" pos:column="65">obj<pos:position pos:line="122" pos:column="68"/></name><operator pos:line="122" pos:column="68">-&gt;<pos:position pos:line="122" pos:column="73"/></operator><name pos:line="122" pos:column="70">key<pos:position pos:line="122" pos:column="73"/></name></name></expr></argument>)<pos:position pos:line="122" pos:column="74"/></argument_list></call></expr>;<pos:position pos:line="122" pos:column="75"/></expr_stmt>
                <expr_stmt><expr><call><name pos:line="123" pos:column="17">apr_pool_destroy<pos:position pos:line="123" pos:column="33"/></name><argument_list pos:line="123" pos:column="33">(<argument><expr><name><name pos:line="123" pos:column="34">sobj<pos:position pos:line="123" pos:column="38"/></name><operator pos:line="123" pos:column="38">-&gt;<pos:position pos:line="123" pos:column="43"/></operator><name pos:line="123" pos:column="40">pool<pos:position pos:line="123" pos:column="44"/></name></name></expr></argument>)<pos:position pos:line="123" pos:column="45"/></argument_list></call></expr>;<pos:position pos:line="123" pos:column="46"/></expr_stmt>
                <expr_stmt><expr><name><name pos:line="124" pos:column="17">sobj<pos:position pos:line="124" pos:column="21"/></name><operator pos:line="124" pos:column="21">-&gt;<pos:position pos:line="124" pos:column="26"/></operator><name pos:line="124" pos:column="23">pool<pos:position pos:line="124" pos:column="27"/></name></name> <operator pos:line="124" pos:column="28">=<pos:position pos:line="124" pos:column="29"/></operator> <name pos:line="124" pos:column="30">NULL<pos:position pos:line="124" pos:column="34"/></name></expr>;<pos:position pos:line="124" pos:column="35"/></expr_stmt>
                <return pos:line="125" pos:column="17">return <expr><name pos:line="125" pos:column="24">DECLINED<pos:position pos:line="125" pos:column="32"/></name></expr>;<pos:position pos:line="125" pos:column="33"/></return>
            }<pos:position pos:line="126" pos:column="14"/></block></then></if>
        }<pos:position pos:line="127" pos:column="10"/></block></then></if>
        <if pos:line="128" pos:column="9">if <condition pos:line="128" pos:column="12">(<expr><name pos:line="128" pos:column="13">rc<pos:position pos:line="128" pos:column="15"/></name> <operator pos:line="128" pos:column="16">!=<pos:position pos:line="128" pos:column="18"/></operator> <name pos:line="128" pos:column="19">APR_SUCCESS<pos:position pos:line="128" pos:column="30"/></name></expr>)<pos:position pos:line="128" pos:column="31"/></condition><then pos:line="128" pos:column="31"> <block pos:line="128" pos:column="32">{
            <expr_stmt><expr><call><name pos:line="129" pos:column="13">ap_log_rerror<pos:position pos:line="129" pos:column="26"/></name><argument_list pos:line="129" pos:column="26">(<argument><expr><name pos:line="129" pos:column="27">APLOG_MARK<pos:position pos:line="129" pos:column="37"/></name></expr></argument>, <argument><expr><name pos:line="129" pos:column="39">APLOG_DEBUG<pos:position pos:line="129" pos:column="50"/></name></expr></argument>, <argument><expr><name pos:line="129" pos:column="52">rc<pos:position pos:line="129" pos:column="54"/></name></expr></argument>, <argument><expr><name pos:line="129" pos:column="56">r<pos:position pos:line="129" pos:column="57"/></name></expr></argument>, <argument><expr><call><name pos:line="129" pos:column="59">APLOGNO<pos:position pos:line="129" pos:column="66"/></name><argument_list pos:line="129" pos:column="66">(<argument><expr><literal type="number" pos:line="129" pos:column="67">02357<pos:position pos:line="129" pos:column="72"/></literal></expr></argument>)<pos:position pos:line="129" pos:column="73"/></argument_list></call>
                    <literal type="string" pos:line="130" pos:column="21">"Key not found in cache: %s"<pos:position pos:line="130" pos:column="49"/></literal></expr></argument>, <argument><expr><name pos:line="130" pos:column="51">key<pos:position pos:line="130" pos:column="54"/></name></expr></argument>)<pos:position pos:line="130" pos:column="55"/></argument_list></call></expr>;<pos:position pos:line="130" pos:column="56"/></expr_stmt>
            <expr_stmt><expr><call><name pos:line="131" pos:column="13">apr_pool_destroy<pos:position pos:line="131" pos:column="29"/></name><argument_list pos:line="131" pos:column="29">(<argument><expr><name><name pos:line="131" pos:column="30">sobj<pos:position pos:line="131" pos:column="34"/></name><operator pos:line="131" pos:column="34">-&gt;<pos:position pos:line="131" pos:column="39"/></operator><name pos:line="131" pos:column="36">pool<pos:position pos:line="131" pos:column="40"/></name></name></expr></argument>)<pos:position pos:line="131" pos:column="41"/></argument_list></call></expr>;<pos:position pos:line="131" pos:column="42"/></expr_stmt>
            <expr_stmt><expr><name><name pos:line="132" pos:column="13">sobj<pos:position pos:line="132" pos:column="17"/></name><operator pos:line="132" pos:column="17">-&gt;<pos:position pos:line="132" pos:column="22"/></operator><name pos:line="132" pos:column="19">pool<pos:position pos:line="132" pos:column="23"/></name></name> <operator pos:line="132" pos:column="24">=<pos:position pos:line="132" pos:column="25"/></operator> <name pos:line="132" pos:column="26">NULL<pos:position pos:line="132" pos:column="30"/></name></expr>;<pos:position pos:line="132" pos:column="31"/></expr_stmt>
            <return pos:line="133" pos:column="13">return <expr><name pos:line="133" pos:column="20">DECLINED<pos:position pos:line="133" pos:column="28"/></name></expr>;<pos:position pos:line="133" pos:column="29"/></return>
        }<pos:position pos:line="134" pos:column="10"/></block></then></if>
        <if pos:line="135" pos:column="9">if <condition pos:line="135" pos:column="12">(<expr><name pos:line="135" pos:column="13">buffer_len<pos:position pos:line="135" pos:column="23"/></name> <operator pos:line="135" pos:column="24">&gt;=<pos:position pos:line="135" pos:column="29"/></operator> <name><name pos:line="135" pos:column="27">sobj<pos:position pos:line="135" pos:column="31"/></name><operator pos:line="135" pos:column="31">-&gt;<pos:position pos:line="135" pos:column="36"/></operator><name pos:line="135" pos:column="33">buffer_len<pos:position pos:line="135" pos:column="43"/></name></name></expr>)<pos:position pos:line="135" pos:column="44"/></condition><then pos:line="135" pos:column="44"> <block pos:line="135" pos:column="45">{
            <expr_stmt><expr><call><name pos:line="136" pos:column="13">ap_log_rerror<pos:position pos:line="136" pos:column="26"/></name><argument_list pos:line="136" pos:column="26">(<argument><expr><name pos:line="136" pos:column="27">APLOG_MARK<pos:position pos:line="136" pos:column="37"/></name></expr></argument>, <argument><expr><name pos:line="136" pos:column="39">APLOG_DEBUG<pos:position pos:line="136" pos:column="50"/></name></expr></argument>, <argument><expr><name pos:line="136" pos:column="52">rc<pos:position pos:line="136" pos:column="54"/></name></expr></argument>, <argument><expr><name pos:line="136" pos:column="56">r<pos:position pos:line="136" pos:column="57"/></name></expr></argument>, <argument><expr><call><name pos:line="136" pos:column="59">APLOGNO<pos:position pos:line="136" pos:column="66"/></name><argument_list pos:line="136" pos:column="66">(<argument><expr><literal type="number" pos:line="136" pos:column="67">02358<pos:position pos:line="136" pos:column="72"/></literal></expr></argument>)<pos:position pos:line="136" pos:column="73"/></argument_list></call>
                    <literal type="string" pos:line="137" pos:column="21">"Key found in cache but too big, ignoring: %s"<pos:position pos:line="137" pos:column="67"/></literal></expr></argument>, <argument><expr><name pos:line="137" pos:column="69">key<pos:position pos:line="137" pos:column="72"/></name></expr></argument>)<pos:position pos:line="137" pos:column="73"/></argument_list></call></expr>;<pos:position pos:line="137" pos:column="74"/></expr_stmt>
            <goto pos:line="138" pos:column="13">goto <name pos:line="138" pos:column="18">fail<pos:position pos:line="138" pos:column="22"/></name>;<pos:position pos:line="138" pos:column="23"/></goto>
        }<pos:position pos:line="139" pos:column="10"/></block></then></if>

    }<pos:position pos:line="141" pos:column="6"/></block></then>
    <elseif pos:line="142" pos:column="5">else <if pos:line="142" pos:column="10">if <condition pos:line="142" pos:column="13">(<expr><name pos:line="142" pos:column="14">format<pos:position pos:line="142" pos:column="20"/></name> <operator pos:line="142" pos:column="21">!=<pos:position pos:line="142" pos:column="23"/></operator> <name pos:line="142" pos:column="24">CACHE_SOCACHE_DISK_FORMAT_VERSION<pos:position pos:line="142" pos:column="57"/></name></expr>)<pos:position pos:line="142" pos:column="58"/></condition><then pos:line="142" pos:column="58"> <block pos:line="142" pos:column="59">{
        <expr_stmt><expr><call><name pos:line="143" pos:column="9">ap_log_rerror<pos:position pos:line="143" pos:column="22"/></name><argument_list pos:line="143" pos:column="22">(<argument><expr><name pos:line="143" pos:column="23">APLOG_MARK<pos:position pos:line="143" pos:column="33"/></name></expr></argument>, <argument><expr><name pos:line="143" pos:column="35">APLOG_ERR<pos:position pos:line="143" pos:column="44"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="143" pos:column="46">0<pos:position pos:line="143" pos:column="47"/></literal></expr></argument>, <argument><expr><name pos:line="143" pos:column="49">r<pos:position pos:line="143" pos:column="50"/></name></expr></argument>, <argument><expr><call><name pos:line="143" pos:column="52">APLOGNO<pos:position pos:line="143" pos:column="59"/></name><argument_list pos:line="143" pos:column="59">(<argument><expr><literal type="number" pos:line="143" pos:column="60">02359<pos:position pos:line="143" pos:column="65"/></literal></expr></argument>)<pos:position pos:line="143" pos:column="66"/></argument_list></call>
                <literal type="string" pos:line="144" pos:column="17">"Key '%s' found in cache has version %d, expected %d, ignoring"<pos:position pos:line="144" pos:column="80"/></literal></expr></argument>,
                <argument><expr><name pos:line="145" pos:column="17">key<pos:position pos:line="145" pos:column="20"/></name></expr></argument>, <argument><expr><name pos:line="145" pos:column="22">format<pos:position pos:line="145" pos:column="28"/></name></expr></argument>, <argument><expr><name pos:line="145" pos:column="30">CACHE_SOCACHE_DISK_FORMAT_VERSION<pos:position pos:line="145" pos:column="63"/></name></expr></argument>)<pos:position pos:line="145" pos:column="64"/></argument_list></call></expr>;<pos:position pos:line="145" pos:column="65"/></expr_stmt>
        <goto pos:line="146" pos:column="9">goto <name pos:line="146" pos:column="14">fail<pos:position pos:line="146" pos:column="18"/></name>;<pos:position pos:line="146" pos:column="19"/></goto>
    }<pos:position pos:line="147" pos:column="6"/></block></then></if></elseif>
    <else pos:line="148" pos:column="5">else <block pos:line="148" pos:column="10">{
        <expr_stmt><expr><name pos:line="149" pos:column="9">nkey<pos:position pos:line="149" pos:column="13"/></name> <operator pos:line="149" pos:column="14">=<pos:position pos:line="149" pos:column="15"/></operator> <name pos:line="149" pos:column="16">key<pos:position pos:line="149" pos:column="19"/></name></expr>;<pos:position pos:line="149" pos:column="20"/></expr_stmt>
    }<pos:position pos:line="150" pos:column="6"/></block></else></if>

    <expr_stmt><expr><name><name pos:line="152" pos:column="5">obj<pos:position pos:line="152" pos:column="8"/></name><operator pos:line="152" pos:column="8">-&gt;<pos:position pos:line="152" pos:column="13"/></operator><name pos:line="152" pos:column="10">key<pos:position pos:line="152" pos:column="13"/></name></name> <operator pos:line="152" pos:column="14">=<pos:position pos:line="152" pos:column="15"/></operator> <name pos:line="152" pos:column="16">nkey<pos:position pos:line="152" pos:column="20"/></name></expr>;<pos:position pos:line="152" pos:column="21"/></expr_stmt>
    <expr_stmt><expr><name><name pos:line="153" pos:column="5">sobj<pos:position pos:line="153" pos:column="9"/></name><operator pos:line="153" pos:column="9">-&gt;<pos:position pos:line="153" pos:column="14"/></operator><name pos:line="153" pos:column="11">key<pos:position pos:line="153" pos:column="14"/></name></name> <operator pos:line="153" pos:column="15">=<pos:position pos:line="153" pos:column="16"/></operator> <name pos:line="153" pos:column="17">nkey<pos:position pos:line="153" pos:column="21"/></name></expr>;<pos:position pos:line="153" pos:column="22"/></expr_stmt>
    <expr_stmt><expr><name><name pos:line="154" pos:column="5">sobj<pos:position pos:line="154" pos:column="9"/></name><operator pos:line="154" pos:column="9">-&gt;<pos:position pos:line="154" pos:column="14"/></operator><name pos:line="154" pos:column="11">name<pos:position pos:line="154" pos:column="15"/></name></name> <operator pos:line="154" pos:column="16">=<pos:position pos:line="154" pos:column="17"/></operator> <name pos:line="154" pos:column="18">key<pos:position pos:line="154" pos:column="21"/></name></expr>;<pos:position pos:line="154" pos:column="22"/></expr_stmt>

    <if pos:line="156" pos:column="5">if <condition pos:line="156" pos:column="8">(<expr><name pos:line="156" pos:column="9">buffer_len<pos:position pos:line="156" pos:column="19"/></name> <operator pos:line="156" pos:column="20">&gt;=<pos:position pos:line="156" pos:column="25"/></operator> <sizeof pos:line="156" pos:column="23">sizeof<argument_list pos:line="156" pos:column="29">(<argument><expr><name pos:line="156" pos:column="30">cache_socache_info_t<pos:position pos:line="156" pos:column="50"/></name></expr></argument>)<pos:position pos:line="156" pos:column="51"/></argument_list></sizeof></expr>)<pos:position pos:line="156" pos:column="52"/></condition><then pos:line="156" pos:column="52"> <block pos:line="156" pos:column="53">{
        <expr_stmt><expr><call><name pos:line="157" pos:column="9">memcpy<pos:position pos:line="157" pos:column="15"/></name><argument_list pos:line="157" pos:column="15">(<argument><expr><operator pos:line="157" pos:column="16">&amp;<pos:position pos:line="157" pos:column="21"/></operator><name><name pos:line="157" pos:column="17">sobj<pos:position pos:line="157" pos:column="21"/></name><operator pos:line="157" pos:column="21">-&gt;<pos:position pos:line="157" pos:column="26"/></operator><name pos:line="157" pos:column="23">socache_info<pos:position pos:line="157" pos:column="35"/></name></name></expr></argument>, <argument><expr><name><name pos:line="157" pos:column="37">sobj<pos:position pos:line="157" pos:column="41"/></name><operator pos:line="157" pos:column="41">-&gt;<pos:position pos:line="157" pos:column="46"/></operator><name pos:line="157" pos:column="43">buffer<pos:position pos:line="157" pos:column="49"/></name></name></expr></argument>, <argument><expr><sizeof pos:line="157" pos:column="51">sizeof<argument_list pos:line="157" pos:column="57">(<argument><expr><name pos:line="157" pos:column="58">cache_socache_info_t<pos:position pos:line="157" pos:column="78"/></name></expr></argument>)<pos:position pos:line="157" pos:column="79"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="157" pos:column="80"/></argument_list></call></expr>;<pos:position pos:line="157" pos:column="81"/></expr_stmt>
    }<pos:position pos:line="158" pos:column="6"/></block></then>
    <else pos:line="159" pos:column="5">else <block pos:line="159" pos:column="10">{
        <expr_stmt><expr><call><name pos:line="160" pos:column="9">ap_log_rerror<pos:position pos:line="160" pos:column="22"/></name><argument_list pos:line="160" pos:column="22">(<argument><expr><name pos:line="160" pos:column="23">APLOG_MARK<pos:position pos:line="160" pos:column="33"/></name></expr></argument>, <argument><expr><name pos:line="160" pos:column="35">APLOG_ERR<pos:position pos:line="160" pos:column="44"/></name></expr></argument>, <argument><expr><name pos:line="160" pos:column="46">rc<pos:position pos:line="160" pos:column="48"/></name></expr></argument>, <argument><expr><name pos:line="160" pos:column="50">r<pos:position pos:line="160" pos:column="51"/></name></expr></argument>, <argument><expr><call><name pos:line="160" pos:column="53">APLOGNO<pos:position pos:line="160" pos:column="60"/></name><argument_list pos:line="160" pos:column="60">(<argument><expr><literal type="number" pos:line="160" pos:column="61">02360<pos:position pos:line="160" pos:column="66"/></literal></expr></argument>)<pos:position pos:line="160" pos:column="67"/></argument_list></call>
                <literal type="string" pos:line="161" pos:column="17">"Cache entry for key '%s' too short, removing"<pos:position pos:line="161" pos:column="63"/></literal></expr></argument>, <argument><expr><name pos:line="161" pos:column="65">nkey<pos:position pos:line="161" pos:column="69"/></name></expr></argument>)<pos:position pos:line="161" pos:column="70"/></argument_list></call></expr>;<pos:position pos:line="161" pos:column="71"/></expr_stmt>
        <goto pos:line="162" pos:column="9">goto <name pos:line="162" pos:column="14">fail<pos:position pos:line="162" pos:column="18"/></name>;<pos:position pos:line="162" pos:column="19"/></goto>
    }<pos:position pos:line="163" pos:column="6"/></block></else></if>
    <expr_stmt><expr><name pos:line="164" pos:column="5">slider<pos:position pos:line="164" pos:column="11"/></name> <operator pos:line="164" pos:column="12">=<pos:position pos:line="164" pos:column="13"/></operator> <sizeof pos:line="164" pos:column="14">sizeof<argument_list pos:line="164" pos:column="20">(<argument><expr><name pos:line="164" pos:column="21">cache_socache_info_t<pos:position pos:line="164" pos:column="41"/></name></expr></argument>)<pos:position pos:line="164" pos:column="42"/></argument_list></sizeof></expr>;<pos:position pos:line="164" pos:column="43"/></expr_stmt>

    <comment type="block" pos:line="166" pos:column="5">/* Store it away so we can get it later. */</comment>
    <expr_stmt><expr><name><name pos:line="167" pos:column="5">info<pos:position pos:line="167" pos:column="9"/></name><operator pos:line="167" pos:column="9">-&gt;<pos:position pos:line="167" pos:column="14"/></operator><name pos:line="167" pos:column="11">status<pos:position pos:line="167" pos:column="17"/></name></name> <operator pos:line="167" pos:column="18">=<pos:position pos:line="167" pos:column="19"/></operator> <name><name pos:line="167" pos:column="20">sobj<pos:position pos:line="167" pos:column="24"/></name><operator pos:line="167" pos:column="24">-&gt;<pos:position pos:line="167" pos:column="29"/></operator><name pos:line="167" pos:column="26">socache_info<pos:position pos:line="167" pos:column="38"/></name><operator pos:line="167" pos:column="38">.<pos:position pos:line="167" pos:column="39"/></operator><name pos:line="167" pos:column="39">status<pos:position pos:line="167" pos:column="45"/></name></name></expr>;<pos:position pos:line="167" pos:column="46"/></expr_stmt>
    <expr_stmt><expr><name><name pos:line="168" pos:column="5">info<pos:position pos:line="168" pos:column="9"/></name><operator pos:line="168" pos:column="9">-&gt;<pos:position pos:line="168" pos:column="14"/></operator><name pos:line="168" pos:column="11">date<pos:position pos:line="168" pos:column="15"/></name></name> <operator pos:line="168" pos:column="16">=<pos:position pos:line="168" pos:column="17"/></operator> <name><name pos:line="168" pos:column="18">sobj<pos:position pos:line="168" pos:column="22"/></name><operator pos:line="168" pos:column="22">-&gt;<pos:position pos:line="168" pos:column="27"/></operator><name pos:line="168" pos:column="24">socache_info<pos:position pos:line="168" pos:column="36"/></name><operator pos:line="168" pos:column="36">.<pos:position pos:line="168" pos:column="37"/></operator><name pos:line="168" pos:column="37">date<pos:position pos:line="168" pos:column="41"/></name></name></expr>;<pos:position pos:line="168" pos:column="42"/></expr_stmt>
    <expr_stmt><expr><name><name pos:line="169" pos:column="5">info<pos:position pos:line="169" pos:column="9"/></name><operator pos:line="169" pos:column="9">-&gt;<pos:position pos:line="169" pos:column="14"/></operator><name pos:line="169" pos:column="11">expire<pos:position pos:line="169" pos:column="17"/></name></name> <operator pos:line="169" pos:column="18">=<pos:position pos:line="169" pos:column="19"/></operator> <name><name pos:line="169" pos:column="20">sobj<pos:position pos:line="169" pos:column="24"/></name><operator pos:line="169" pos:column="24">-&gt;<pos:position pos:line="169" pos:column="29"/></operator><name pos:line="169" pos:column="26">socache_info<pos:position pos:line="169" pos:column="38"/></name><operator pos:line="169" pos:column="38">.<pos:position pos:line="169" pos:column="39"/></operator><name pos:line="169" pos:column="39">expire<pos:position pos:line="169" pos:column="45"/></name></name></expr>;<pos:position pos:line="169" pos:column="46"/></expr_stmt>
    <expr_stmt><expr><name><name pos:line="170" pos:column="5">info<pos:position pos:line="170" pos:column="9"/></name><operator pos:line="170" pos:column="9">-&gt;<pos:position pos:line="170" pos:column="14"/></operator><name pos:line="170" pos:column="11">request_time<pos:position pos:line="170" pos:column="23"/></name></name> <operator pos:line="170" pos:column="24">=<pos:position pos:line="170" pos:column="25"/></operator> <name><name pos:line="170" pos:column="26">sobj<pos:position pos:line="170" pos:column="30"/></name><operator pos:line="170" pos:column="30">-&gt;<pos:position pos:line="170" pos:column="35"/></operator><name pos:line="170" pos:column="32">socache_info<pos:position pos:line="170" pos:column="44"/></name><operator pos:line="170" pos:column="44">.<pos:position pos:line="170" pos:column="45"/></operator><name pos:line="170" pos:column="45">request_time<pos:position pos:line="170" pos:column="57"/></name></name></expr>;<pos:position pos:line="170" pos:column="58"/></expr_stmt>
    <expr_stmt><expr><name><name pos:line="171" pos:column="5">info<pos:position pos:line="171" pos:column="9"/></name><operator pos:line="171" pos:column="9">-&gt;<pos:position pos:line="171" pos:column="14"/></operator><name pos:line="171" pos:column="11">response_time<pos:position pos:line="171" pos:column="24"/></name></name> <operator pos:line="171" pos:column="25">=<pos:position pos:line="171" pos:column="26"/></operator> <name><name pos:line="171" pos:column="27">sobj<pos:position pos:line="171" pos:column="31"/></name><operator pos:line="171" pos:column="31">-&gt;<pos:position pos:line="171" pos:column="36"/></operator><name pos:line="171" pos:column="33">socache_info<pos:position pos:line="171" pos:column="45"/></name><operator pos:line="171" pos:column="45">.<pos:position pos:line="171" pos:column="46"/></operator><name pos:line="171" pos:column="46">response_time<pos:position pos:line="171" pos:column="59"/></name></name></expr>;<pos:position pos:line="171" pos:column="60"/></expr_stmt>

    <expr_stmt><expr><call><name pos:line="173" pos:column="5">memcpy<pos:position pos:line="173" pos:column="11"/></name><argument_list pos:line="173" pos:column="11">(<argument><expr><operator pos:line="173" pos:column="12">&amp;<pos:position pos:line="173" pos:column="17"/></operator><name><name pos:line="173" pos:column="13">info<pos:position pos:line="173" pos:column="17"/></name><operator pos:line="173" pos:column="17">-&gt;<pos:position pos:line="173" pos:column="22"/></operator><name pos:line="173" pos:column="19">control<pos:position pos:line="173" pos:column="26"/></name></name></expr></argument>, <argument><expr><operator pos:line="173" pos:column="28">&amp;<pos:position pos:line="173" pos:column="33"/></operator><name><name pos:line="173" pos:column="29">sobj<pos:position pos:line="173" pos:column="33"/></name><operator pos:line="173" pos:column="33">-&gt;<pos:position pos:line="173" pos:column="38"/></operator><name pos:line="173" pos:column="35">socache_info<pos:position pos:line="173" pos:column="47"/></name><operator pos:line="173" pos:column="47">.<pos:position pos:line="173" pos:column="48"/></operator><name pos:line="173" pos:column="48">control<pos:position pos:line="173" pos:column="55"/></name></name></expr></argument>, <argument><expr><sizeof pos:line="173" pos:column="57">sizeof<argument_list pos:line="173" pos:column="63">(<argument><expr><name pos:line="173" pos:column="64">cache_control_t<pos:position pos:line="173" pos:column="79"/></name></expr></argument>)<pos:position pos:line="173" pos:column="80"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="173" pos:column="81"/></argument_list></call></expr>;<pos:position pos:line="173" pos:column="82"/></expr_stmt>

    <if pos:line="175" pos:column="5">if <condition pos:line="175" pos:column="8">(<expr><name><name pos:line="175" pos:column="9">sobj<pos:position pos:line="175" pos:column="13"/></name><operator pos:line="175" pos:column="13">-&gt;<pos:position pos:line="175" pos:column="18"/></operator><name pos:line="175" pos:column="15">socache_info<pos:position pos:line="175" pos:column="27"/></name><operator pos:line="175" pos:column="27">.<pos:position pos:line="175" pos:column="28"/></operator><name pos:line="175" pos:column="28">name_len<pos:position pos:line="175" pos:column="36"/></name></name> <operator pos:line="175" pos:column="37">&lt;=<pos:position pos:line="175" pos:column="42"/></operator> <name pos:line="175" pos:column="40">buffer_len<pos:position pos:line="175" pos:column="50"/></name> <operator pos:line="175" pos:column="51">-<pos:position pos:line="175" pos:column="52"/></operator> <name pos:line="175" pos:column="53">slider<pos:position pos:line="175" pos:column="59"/></name></expr>)<pos:position pos:line="175" pos:column="60"/></condition><then pos:line="175" pos:column="60"> <block pos:line="175" pos:column="61">{
        <if pos:line="176" pos:column="9">if <condition pos:line="176" pos:column="12">(<expr><call><name pos:line="176" pos:column="13">strncmp<pos:position pos:line="176" pos:column="20"/></name><argument_list pos:line="176" pos:column="20">(<argument><expr><operator pos:line="176" pos:column="21">(<pos:position pos:line="176" pos:column="22"/></operator><specifier pos:line="176" pos:column="22">const<pos:position pos:line="176" pos:column="27"/></specifier> <name pos:line="176" pos:column="28">char<pos:position pos:line="176" pos:column="32"/></name> <operator pos:line="176" pos:column="33">*<pos:position pos:line="176" pos:column="34"/></operator><operator pos:line="176" pos:column="34">)<pos:position pos:line="176" pos:column="35"/></operator> <name><name pos:line="176" pos:column="36">sobj<pos:position pos:line="176" pos:column="40"/></name><operator pos:line="176" pos:column="40">-&gt;<pos:position pos:line="176" pos:column="45"/></operator><name pos:line="176" pos:column="42">buffer<pos:position pos:line="176" pos:column="48"/></name></name> <operator pos:line="176" pos:column="49">+<pos:position pos:line="176" pos:column="50"/></operator> <name pos:line="176" pos:column="51">slider<pos:position pos:line="176" pos:column="57"/></name></expr></argument>, <argument><expr><name><name pos:line="176" pos:column="59">sobj<pos:position pos:line="176" pos:column="63"/></name><operator pos:line="176" pos:column="63">-&gt;<pos:position pos:line="176" pos:column="68"/></operator><name pos:line="176" pos:column="65">name<pos:position pos:line="176" pos:column="69"/></name></name></expr></argument>,
                <argument><expr><name><name pos:line="177" pos:column="17">sobj<pos:position pos:line="177" pos:column="21"/></name><operator pos:line="177" pos:column="21">-&gt;<pos:position pos:line="177" pos:column="26"/></operator><name pos:line="177" pos:column="23">socache_info<pos:position pos:line="177" pos:column="35"/></name><operator pos:line="177" pos:column="35">.<pos:position pos:line="177" pos:column="36"/></operator><name pos:line="177" pos:column="36">name_len<pos:position pos:line="177" pos:column="44"/></name></name></expr></argument>)<pos:position pos:line="177" pos:column="45"/></argument_list></call></expr>)<pos:position pos:line="177" pos:column="46"/></condition><then pos:line="177" pos:column="46"> <block pos:line="177" pos:column="47">{
            <expr_stmt><expr><call><name pos:line="178" pos:column="13">ap_log_rerror<pos:position pos:line="178" pos:column="26"/></name><argument_list pos:line="178" pos:column="26">(<argument><expr><name pos:line="178" pos:column="27">APLOG_MARK<pos:position pos:line="178" pos:column="37"/></name></expr></argument>, <argument><expr><name pos:line="178" pos:column="39">APLOG_ERR<pos:position pos:line="178" pos:column="48"/></name></expr></argument>, <argument><expr><name pos:line="178" pos:column="50">rc<pos:position pos:line="178" pos:column="52"/></name></expr></argument>, <argument><expr><name pos:line="178" pos:column="54">r<pos:position pos:line="178" pos:column="55"/></name></expr></argument>, <argument><expr><call><name pos:line="178" pos:column="57">APLOGNO<pos:position pos:line="178" pos:column="64"/></name><argument_list pos:line="178" pos:column="64">(<argument><expr><literal type="number" pos:line="178" pos:column="65">02361<pos:position pos:line="178" pos:column="70"/></literal></expr></argument>)<pos:position pos:line="178" pos:column="71"/></argument_list></call>
                    <literal type="string" pos:line="179" pos:column="21">"Cache entry for key '%s' URL mismatch, ignoring"<pos:position pos:line="179" pos:column="70"/></literal></expr></argument>, <argument><expr><name pos:line="179" pos:column="72">nkey<pos:position pos:line="179" pos:column="76"/></name></expr></argument>)<pos:position pos:line="179" pos:column="77"/></argument_list></call></expr>;<pos:position pos:line="179" pos:column="78"/></expr_stmt>
            <expr_stmt><expr><call><name pos:line="180" pos:column="13">apr_pool_destroy<pos:position pos:line="180" pos:column="29"/></name><argument_list pos:line="180" pos:column="29">(<argument><expr><name><name pos:line="180" pos:column="30">sobj<pos:position pos:line="180" pos:column="34"/></name><operator pos:line="180" pos:column="34">-&gt;<pos:position pos:line="180" pos:column="39"/></operator><name pos:line="180" pos:column="36">pool<pos:position pos:line="180" pos:column="40"/></name></name></expr></argument>)<pos:position pos:line="180" pos:column="41"/></argument_list></call></expr>;<pos:position pos:line="180" pos:column="42"/></expr_stmt>
            <expr_stmt><expr><name><name pos:line="181" pos:column="13">sobj<pos:position pos:line="181" pos:column="17"/></name><operator pos:line="181" pos:column="17">-&gt;<pos:position pos:line="181" pos:column="22"/></operator><name pos:line="181" pos:column="19">pool<pos:position pos:line="181" pos:column="23"/></name></name> <operator pos:line="181" pos:column="24">=<pos:position pos:line="181" pos:column="25"/></operator> <name pos:line="181" pos:column="26">NULL<pos:position pos:line="181" pos:column="30"/></name></expr>;<pos:position pos:line="181" pos:column="31"/></expr_stmt>
            <return pos:line="182" pos:column="13">return <expr><name pos:line="182" pos:column="20">DECLINED<pos:position pos:line="182" pos:column="28"/></name></expr>;<pos:position pos:line="182" pos:column="29"/></return>
        }<pos:position pos:line="183" pos:column="10"/></block></then></if>
        <expr_stmt><expr><name pos:line="184" pos:column="9">slider<pos:position pos:line="184" pos:column="15"/></name> <operator pos:line="184" pos:column="16">+=<pos:position pos:line="184" pos:column="18"/></operator> <name><name pos:line="184" pos:column="19">sobj<pos:position pos:line="184" pos:column="23"/></name><operator pos:line="184" pos:column="23">-&gt;<pos:position pos:line="184" pos:column="28"/></operator><name pos:line="184" pos:column="25">socache_info<pos:position pos:line="184" pos:column="37"/></name><operator pos:line="184" pos:column="37">.<pos:position pos:line="184" pos:column="38"/></operator><name pos:line="184" pos:column="38">name_len<pos:position pos:line="184" pos:column="46"/></name></name></expr>;<pos:position pos:line="184" pos:column="47"/></expr_stmt>
    }<pos:position pos:line="185" pos:column="6"/></block></then>
    <else pos:line="186" pos:column="5">else <block pos:line="186" pos:column="10">{
        <expr_stmt><expr><call><name pos:line="187" pos:column="9">ap_log_rerror<pos:position pos:line="187" pos:column="22"/></name><argument_list pos:line="187" pos:column="22">(<argument><expr><name pos:line="187" pos:column="23">APLOG_MARK<pos:position pos:line="187" pos:column="33"/></name></expr></argument>, <argument><expr><name pos:line="187" pos:column="35">APLOG_ERR<pos:position pos:line="187" pos:column="44"/></name></expr></argument>, <argument><expr><name pos:line="187" pos:column="46">rc<pos:position pos:line="187" pos:column="48"/></name></expr></argument>, <argument><expr><name pos:line="187" pos:column="50">r<pos:position pos:line="187" pos:column="51"/></name></expr></argument>, <argument><expr><call><name pos:line="187" pos:column="53">APLOGNO<pos:position pos:line="187" pos:column="60"/></name><argument_list pos:line="187" pos:column="60">(<argument><expr><literal type="number" pos:line="187" pos:column="61">02362<pos:position pos:line="187" pos:column="66"/></literal></expr></argument>)<pos:position pos:line="187" pos:column="67"/></argument_list></call>
                <literal type="string" pos:line="188" pos:column="17">"Cache entry for key '%s' too short, removing"<pos:position pos:line="188" pos:column="63"/></literal></expr></argument>, <argument><expr><name pos:line="188" pos:column="65">nkey<pos:position pos:line="188" pos:column="69"/></name></expr></argument>)<pos:position pos:line="188" pos:column="70"/></argument_list></call></expr>;<pos:position pos:line="188" pos:column="71"/></expr_stmt>
        <goto pos:line="189" pos:column="9">goto <name pos:line="189" pos:column="14">fail<pos:position pos:line="189" pos:column="18"/></name>;<pos:position pos:line="189" pos:column="19"/></goto>
    }<pos:position pos:line="190" pos:column="6"/></block></else></if>

    <comment type="block" pos:line="192" pos:column="5">/* Is this a cached HEAD request? */</comment>
    <if pos:line="193" pos:column="5">if <condition pos:line="193" pos:column="8">(<expr><name><name pos:line="193" pos:column="9">sobj<pos:position pos:line="193" pos:column="13"/></name><operator pos:line="193" pos:column="13">-&gt;<pos:position pos:line="193" pos:column="18"/></operator><name pos:line="193" pos:column="15">socache_info<pos:position pos:line="193" pos:column="27"/></name><operator pos:line="193" pos:column="27">.<pos:position pos:line="193" pos:column="28"/></operator><name pos:line="193" pos:column="28">header_only<pos:position pos:line="193" pos:column="39"/></name></name> <operator pos:line="193" pos:column="40">&amp;&amp;<pos:position pos:line="193" pos:column="50"/></operator> <operator pos:line="193" pos:column="43">!<pos:position pos:line="193" pos:column="44"/></operator><name><name pos:line="193" pos:column="44">r<pos:position pos:line="193" pos:column="45"/></name><operator pos:line="193" pos:column="45">-&gt;<pos:position pos:line="193" pos:column="50"/></operator><name pos:line="193" pos:column="47">header_only<pos:position pos:line="193" pos:column="58"/></name></name></expr>)<pos:position pos:line="193" pos:column="59"/></condition><then pos:line="193" pos:column="59"> <block pos:line="193" pos:column="60">{
        <expr_stmt><expr><call><name pos:line="194" pos:column="9">ap_log_rerror<pos:position pos:line="194" pos:column="22"/></name><argument_list pos:line="194" pos:column="22">(<argument><expr><name pos:line="194" pos:column="23">APLOG_MARK<pos:position pos:line="194" pos:column="33"/></name></expr></argument>, <argument><expr><name pos:line="194" pos:column="35">APLOG_DEBUG<pos:position pos:line="194" pos:column="46"/></name></expr></argument>, <argument><expr><name pos:line="194" pos:column="48">APR_SUCCESS<pos:position pos:line="194" pos:column="59"/></name></expr></argument>, <argument><expr><name pos:line="194" pos:column="61">r<pos:position pos:line="194" pos:column="62"/></name></expr></argument>, <argument><expr><call><name pos:line="194" pos:column="64">APLOGNO<pos:position pos:line="194" pos:column="71"/></name><argument_list pos:line="194" pos:column="71">(<argument><expr><literal type="number" pos:line="194" pos:column="72">02363<pos:position pos:line="194" pos:column="77"/></literal></expr></argument>)<pos:position pos:line="194" pos:column="78"/></argument_list></call>
                <literal type="string" pos:line="195" pos:column="17">"HEAD request cached, non-HEAD requested, ignoring: %s"<pos:position pos:line="195" pos:column="72"/></literal></expr></argument>,
                <argument><expr><name><name pos:line="196" pos:column="17">sobj<pos:position pos:line="196" pos:column="21"/></name><operator pos:line="196" pos:column="21">-&gt;<pos:position pos:line="196" pos:column="26"/></operator><name pos:line="196" pos:column="23">key<pos:position pos:line="196" pos:column="26"/></name></name></expr></argument>)<pos:position pos:line="196" pos:column="27"/></argument_list></call></expr>;<pos:position pos:line="196" pos:column="28"/></expr_stmt>
        <expr_stmt><expr><call><name pos:line="197" pos:column="9">apr_pool_destroy<pos:position pos:line="197" pos:column="25"/></name><argument_list pos:line="197" pos:column="25">(<argument><expr><name><name pos:line="197" pos:column="26">sobj<pos:position pos:line="197" pos:column="30"/></name><operator pos:line="197" pos:column="30">-&gt;<pos:position pos:line="197" pos:column="35"/></operator><name pos:line="197" pos:column="32">pool<pos:position pos:line="197" pos:column="36"/></name></name></expr></argument>)<pos:position pos:line="197" pos:column="37"/></argument_list></call></expr>;<pos:position pos:line="197" pos:column="38"/></expr_stmt>
        <expr_stmt><expr><name><name pos:line="198" pos:column="9">sobj<pos:position pos:line="198" pos:column="13"/></name><operator pos:line="198" pos:column="13">-&gt;<pos:position pos:line="198" pos:column="18"/></operator><name pos:line="198" pos:column="15">pool<pos:position pos:line="198" pos:column="19"/></name></name> <operator pos:line="198" pos:column="20">=<pos:position pos:line="198" pos:column="21"/></operator> <name pos:line="198" pos:column="22">NULL<pos:position pos:line="198" pos:column="26"/></name></expr>;<pos:position pos:line="198" pos:column="27"/></expr_stmt>
        <return pos:line="199" pos:column="9">return <expr><name pos:line="199" pos:column="16">DECLINED<pos:position pos:line="199" pos:column="24"/></name></expr>;<pos:position pos:line="199" pos:column="25"/></return>
    }<pos:position pos:line="200" pos:column="6"/></block></then></if>

    <expr_stmt><expr><name><name pos:line="202" pos:column="5">h<pos:position pos:line="202" pos:column="6"/></name><operator pos:line="202" pos:column="6">-&gt;<pos:position pos:line="202" pos:column="11"/></operator><name pos:line="202" pos:column="8">req_hdrs<pos:position pos:line="202" pos:column="16"/></name></name> <operator pos:line="202" pos:column="17">=<pos:position pos:line="202" pos:column="18"/></operator> <call><name pos:line="202" pos:column="19">apr_table_make<pos:position pos:line="202" pos:column="33"/></name><argument_list pos:line="202" pos:column="33">(<argument><expr><name><name pos:line="202" pos:column="34">r<pos:position pos:line="202" pos:column="35"/></name><operator pos:line="202" pos:column="35">-&gt;<pos:position pos:line="202" pos:column="40"/></operator><name pos:line="202" pos:column="37">pool<pos:position pos:line="202" pos:column="41"/></name></name></expr></argument>, <argument><expr><literal type="number" pos:line="202" pos:column="43">20<pos:position pos:line="202" pos:column="45"/></literal></expr></argument>)<pos:position pos:line="202" pos:column="46"/></argument_list></call></expr>;<pos:position pos:line="202" pos:column="47"/></expr_stmt>
    <expr_stmt><expr><name><name pos:line="203" pos:column="5">h<pos:position pos:line="203" pos:column="6"/></name><operator pos:line="203" pos:column="6">-&gt;<pos:position pos:line="203" pos:column="11"/></operator><name pos:line="203" pos:column="8">resp_hdrs<pos:position pos:line="203" pos:column="17"/></name></name> <operator pos:line="203" pos:column="18">=<pos:position pos:line="203" pos:column="19"/></operator> <call><name pos:line="203" pos:column="20">apr_table_make<pos:position pos:line="203" pos:column="34"/></name><argument_list pos:line="203" pos:column="34">(<argument><expr><name><name pos:line="203" pos:column="35">r<pos:position pos:line="203" pos:column="36"/></name><operator pos:line="203" pos:column="36">-&gt;<pos:position pos:line="203" pos:column="41"/></operator><name pos:line="203" pos:column="38">pool<pos:position pos:line="203" pos:column="42"/></name></name></expr></argument>, <argument><expr><literal type="number" pos:line="203" pos:column="44">20<pos:position pos:line="203" pos:column="46"/></literal></expr></argument>)<pos:position pos:line="203" pos:column="47"/></argument_list></call></expr>;<pos:position pos:line="203" pos:column="48"/></expr_stmt>

    <comment type="block" pos:line="205" pos:column="5">/* Call routine to read the header lines/status line */</comment>
    <if pos:line="206" pos:column="5">if <condition pos:line="206" pos:column="8">(<expr><name pos:line="206" pos:column="9">APR_SUCCESS<pos:position pos:line="206" pos:column="20"/></name> <operator pos:line="206" pos:column="21">!=<pos:position pos:line="206" pos:column="23"/></operator> <call><name pos:line="206" pos:column="24">read_table<pos:position pos:line="206" pos:column="34"/></name><argument_list pos:line="206" pos:column="34">(<argument><expr><name pos:line="206" pos:column="35">h<pos:position pos:line="206" pos:column="36"/></name></expr></argument>, <argument><expr><name pos:line="206" pos:column="38">r<pos:position pos:line="206" pos:column="39"/></name></expr></argument>, <argument><expr><name><name pos:line="206" pos:column="41">h<pos:position pos:line="206" pos:column="42"/></name><operator pos:line="206" pos:column="42">-&gt;<pos:position pos:line="206" pos:column="47"/></operator><name pos:line="206" pos:column="44">resp_hdrs<pos:position pos:line="206" pos:column="53"/></name></name></expr></argument>, <argument><expr><name><name pos:line="206" pos:column="55">sobj<pos:position pos:line="206" pos:column="59"/></name><operator pos:line="206" pos:column="59">-&gt;<pos:position pos:line="206" pos:column="64"/></operator><name pos:line="206" pos:column="61">buffer<pos:position pos:line="206" pos:column="67"/></name></name></expr></argument>, <argument><expr><name pos:line="206" pos:column="69">buffer_len<pos:position pos:line="206" pos:column="79"/></name></expr></argument>,
            <argument><expr><operator pos:line="207" pos:column="13">&amp;<pos:position pos:line="207" pos:column="18"/></operator><name pos:line="207" pos:column="14">slider<pos:position pos:line="207" pos:column="20"/></name></expr></argument>)<pos:position pos:line="207" pos:column="21"/></argument_list></call></expr>)<pos:position pos:line="207" pos:column="22"/></condition><then pos:line="207" pos:column="22"> <block pos:line="207" pos:column="23">{
        <expr_stmt><expr><call><name pos:line="208" pos:column="9">ap_log_rerror<pos:position pos:line="208" pos:column="22"/></name><argument_list pos:line="208" pos:column="22">(<argument><expr><name pos:line="208" pos:column="23">APLOG_MARK<pos:position pos:line="208" pos:column="33"/></name></expr></argument>, <argument><expr><name pos:line="208" pos:column="35">APLOG_ERR<pos:position pos:line="208" pos:column="44"/></name></expr></argument>, <argument><expr><name pos:line="208" pos:column="46">rc<pos:position pos:line="208" pos:column="48"/></name></expr></argument>, <argument><expr><name pos:line="208" pos:column="50">r<pos:position pos:line="208" pos:column="51"/></name></expr></argument>, <argument><expr><call><name pos:line="208" pos:column="53">APLOGNO<pos:position pos:line="208" pos:column="60"/></name><argument_list pos:line="208" pos:column="60">(<argument><expr><literal type="number" pos:line="208" pos:column="61">02364<pos:position pos:line="208" pos:column="66"/></literal></expr></argument>)<pos:position pos:line="208" pos:column="67"/></argument_list></call>
                <literal type="string" pos:line="209" pos:column="17">"Cache entry for key '%s' response headers unreadable, removing"<pos:position pos:line="209" pos:column="81"/></literal></expr></argument>, <argument><expr><name pos:line="209" pos:column="83">nkey<pos:position pos:line="209" pos:column="87"/></name></expr></argument>)<pos:position pos:line="209" pos:column="88"/></argument_list></call></expr>;<pos:position pos:line="209" pos:column="89"/></expr_stmt>
        <goto pos:line="210" pos:column="9">goto <name pos:line="210" pos:column="14">fail<pos:position pos:line="210" pos:column="18"/></name>;<pos:position pos:line="210" pos:column="19"/></goto>
    }<pos:position pos:line="211" pos:column="6"/></block></then></if>
    <if pos:line="212" pos:column="5">if <condition pos:line="212" pos:column="8">(<expr><name pos:line="212" pos:column="9">APR_SUCCESS<pos:position pos:line="212" pos:column="20"/></name> <operator pos:line="212" pos:column="21">!=<pos:position pos:line="212" pos:column="23"/></operator> <call><name pos:line="212" pos:column="24">read_table<pos:position pos:line="212" pos:column="34"/></name><argument_list pos:line="212" pos:column="34">(<argument><expr><name pos:line="212" pos:column="35">h<pos:position pos:line="212" pos:column="36"/></name></expr></argument>, <argument><expr><name pos:line="212" pos:column="38">r<pos:position pos:line="212" pos:column="39"/></name></expr></argument>, <argument><expr><name><name pos:line="212" pos:column="41">h<pos:position pos:line="212" pos:column="42"/></name><operator pos:line="212" pos:column="42">-&gt;<pos:position pos:line="212" pos:column="47"/></operator><name pos:line="212" pos:column="44">req_hdrs<pos:position pos:line="212" pos:column="52"/></name></name></expr></argument>, <argument><expr><name><name pos:line="212" pos:column="54">sobj<pos:position pos:line="212" pos:column="58"/></name><operator pos:line="212" pos:column="58">-&gt;<pos:position pos:line="212" pos:column="63"/></operator><name pos:line="212" pos:column="60">buffer<pos:position pos:line="212" pos:column="66"/></name></name></expr></argument>, <argument><expr><name pos:line="212" pos:column="68">buffer_len<pos:position pos:line="212" pos:column="78"/></name></expr></argument>,
            <argument><expr><operator pos:line="213" pos:column="13">&amp;<pos:position pos:line="213" pos:column="18"/></operator><name pos:line="213" pos:column="14">slider<pos:position pos:line="213" pos:column="20"/></name></expr></argument>)<pos:position pos:line="213" pos:column="21"/></argument_list></call></expr>)<pos:position pos:line="213" pos:column="22"/></condition><then pos:line="213" pos:column="22"> <block pos:line="213" pos:column="23">{
        <expr_stmt><expr><call><name pos:line="214" pos:column="9">ap_log_rerror<pos:position pos:line="214" pos:column="22"/></name><argument_list pos:line="214" pos:column="22">(<argument><expr><name pos:line="214" pos:column="23">APLOG_MARK<pos:position pos:line="214" pos:column="33"/></name></expr></argument>, <argument><expr><name pos:line="214" pos:column="35">APLOG_ERR<pos:position pos:line="214" pos:column="44"/></name></expr></argument>, <argument><expr><name pos:line="214" pos:column="46">rc<pos:position pos:line="214" pos:column="48"/></name></expr></argument>, <argument><expr><name pos:line="214" pos:column="50">r<pos:position pos:line="214" pos:column="51"/></name></expr></argument>, <argument><expr><call><name pos:line="214" pos:column="53">APLOGNO<pos:position pos:line="214" pos:column="60"/></name><argument_list pos:line="214" pos:column="60">(<argument><expr><literal type="number" pos:line="214" pos:column="61">02365<pos:position pos:line="214" pos:column="66"/></literal></expr></argument>)<pos:position pos:line="214" pos:column="67"/></argument_list></call>
                <literal type="string" pos:line="215" pos:column="17">"Cache entry for key '%s' request headers unreadable, removing"<pos:position pos:line="215" pos:column="80"/></literal></expr></argument>, <argument><expr><name pos:line="215" pos:column="82">nkey<pos:position pos:line="215" pos:column="86"/></name></expr></argument>)<pos:position pos:line="215" pos:column="87"/></argument_list></call></expr>;<pos:position pos:line="215" pos:column="88"/></expr_stmt>
        <goto pos:line="216" pos:column="9">goto <name pos:line="216" pos:column="14">fail<pos:position pos:line="216" pos:column="18"/></name>;<pos:position pos:line="216" pos:column="19"/></goto>
    }<pos:position pos:line="217" pos:column="6"/></block></then></if>

    <comment type="block" pos:line="219" pos:column="5">/* Retrieve the body if we have one */</comment>
    <expr_stmt><expr><name><name pos:line="220" pos:column="5">sobj<pos:position pos:line="220" pos:column="9"/></name><operator pos:line="220" pos:column="9">-&gt;<pos:position pos:line="220" pos:column="14"/></operator><name pos:line="220" pos:column="11">body<pos:position pos:line="220" pos:column="15"/></name></name> <operator pos:line="220" pos:column="16">=<pos:position pos:line="220" pos:column="17"/></operator> <call><name pos:line="220" pos:column="18">apr_brigade_create<pos:position pos:line="220" pos:column="36"/></name><argument_list pos:line="220" pos:column="36">(<argument><expr><name><name pos:line="220" pos:column="37">r<pos:position pos:line="220" pos:column="38"/></name><operator pos:line="220" pos:column="38">-&gt;<pos:position pos:line="220" pos:column="43"/></operator><name pos:line="220" pos:column="40">pool<pos:position pos:line="220" pos:column="44"/></name></name></expr></argument>, <argument><expr><name><name pos:line="220" pos:column="46">r<pos:position pos:line="220" pos:column="47"/></name><operator pos:line="220" pos:column="47">-&gt;<pos:position pos:line="220" pos:column="52"/></operator><name pos:line="220" pos:column="49">connection<pos:position pos:line="220" pos:column="59"/></name><operator pos:line="220" pos:column="59">-&gt;<pos:position pos:line="220" pos:column="64"/></operator><name pos:line="220" pos:column="61">bucket_alloc<pos:position pos:line="220" pos:column="73"/></name></name></expr></argument>)<pos:position pos:line="220" pos:column="74"/></argument_list></call></expr>;<pos:position pos:line="220" pos:column="75"/></expr_stmt>
    <expr_stmt><expr><name pos:line="221" pos:column="5">len<pos:position pos:line="221" pos:column="8"/></name> <operator pos:line="221" pos:column="9">=<pos:position pos:line="221" pos:column="10"/></operator> <name pos:line="221" pos:column="11">buffer_len<pos:position pos:line="221" pos:column="21"/></name> <operator pos:line="221" pos:column="22">-<pos:position pos:line="221" pos:column="23"/></operator> <name pos:line="221" pos:column="24">slider<pos:position pos:line="221" pos:column="30"/></name></expr>;<pos:position pos:line="221" pos:column="31"/></expr_stmt>

    <comment type="block" pos:line="223" pos:column="5">/*
     *  Optimisation: if the body is small, we want to make a
     *  copy of the body and free the temporary pool, as we
     *  don't want large blocks of unused memory hanging around
     *  to the end of the response. In contrast, if the body is
     *  large, we would rather leave the body where it is in the
     *  temporary pool, and save ourselves the copy.
     */</comment>
    <if pos:line="231" pos:column="5">if <condition pos:line="231" pos:column="8">(<expr><name pos:line="231" pos:column="9">len<pos:position pos:line="231" pos:column="12"/></name> <operator pos:line="231" pos:column="13">*<pos:position pos:line="231" pos:column="14"/></operator> <literal type="number" pos:line="231" pos:column="15">2<pos:position pos:line="231" pos:column="16"/></literal> <operator pos:line="231" pos:column="17">&gt;<pos:position pos:line="231" pos:column="21"/></operator> <name><name pos:line="231" pos:column="19">dconf<pos:position pos:line="231" pos:column="24"/></name><operator pos:line="231" pos:column="24">-&gt;<pos:position pos:line="231" pos:column="29"/></operator><name pos:line="231" pos:column="26">max<pos:position pos:line="231" pos:column="29"/></name></name></expr>)<pos:position pos:line="231" pos:column="30"/></condition><then pos:line="231" pos:column="30"> <block pos:line="231" pos:column="31">{
        <decl_stmt><decl><type><name pos:line="232" pos:column="9">apr_bucket<pos:position pos:line="232" pos:column="19"/></name> <modifier pos:line="232" pos:column="20">*<pos:position pos:line="232" pos:column="21"/></modifier></type><name pos:line="232" pos:column="21">e<pos:position pos:line="232" pos:column="22"/></name></decl>;<pos:position pos:line="232" pos:column="23"/></decl_stmt>

        <comment type="block" pos:line="234" pos:column="9">/* large - use the brigade as is, we're done */</comment>
        <expr_stmt><expr><name pos:line="235" pos:column="9">e<pos:position pos:line="235" pos:column="10"/></name> <operator pos:line="235" pos:column="11">=<pos:position pos:line="235" pos:column="12"/></operator> <call><name pos:line="235" pos:column="13">apr_bucket_immortal_create<pos:position pos:line="235" pos:column="39"/></name><argument_list pos:line="235" pos:column="39">(<argument><expr><operator pos:line="235" pos:column="40">(<pos:position pos:line="235" pos:column="41"/></operator><specifier pos:line="235" pos:column="41">const<pos:position pos:line="235" pos:column="46"/></specifier> <name pos:line="235" pos:column="47">char<pos:position pos:line="235" pos:column="51"/></name> <operator pos:line="235" pos:column="52">*<pos:position pos:line="235" pos:column="53"/></operator><operator pos:line="235" pos:column="53">)<pos:position pos:line="235" pos:column="54"/></operator> <name><name pos:line="235" pos:column="55">sobj<pos:position pos:line="235" pos:column="59"/></name><operator pos:line="235" pos:column="59">-&gt;<pos:position pos:line="235" pos:column="64"/></operator><name pos:line="235" pos:column="61">buffer<pos:position pos:line="235" pos:column="67"/></name></name> <operator pos:line="235" pos:column="68">+<pos:position pos:line="235" pos:column="69"/></operator> <name pos:line="235" pos:column="70">slider<pos:position pos:line="235" pos:column="76"/></name></expr></argument>,
                <argument><expr><name pos:line="236" pos:column="17">len<pos:position pos:line="236" pos:column="20"/></name></expr></argument>, <argument><expr><name><name pos:line="236" pos:column="22">r<pos:position pos:line="236" pos:column="23"/></name><operator pos:line="236" pos:column="23">-&gt;<pos:position pos:line="236" pos:column="28"/></operator><name pos:line="236" pos:column="25">connection<pos:position pos:line="236" pos:column="35"/></name><operator pos:line="236" pos:column="35">-&gt;<pos:position pos:line="236" pos:column="40"/></operator><name pos:line="236" pos:column="37">bucket_alloc<pos:position pos:line="236" pos:column="49"/></name></name></expr></argument>)<pos:position pos:line="236" pos:column="50"/></argument_list></call></expr>;<pos:position pos:line="236" pos:column="51"/></expr_stmt>

        <expr_stmt><expr><call><name pos:line="238" pos:column="9">APR_BRIGADE_INSERT_TAIL<pos:position pos:line="238" pos:column="32"/></name><argument_list pos:line="238" pos:column="32">(<argument><expr><name><name pos:line="238" pos:column="33">sobj<pos:position pos:line="238" pos:column="37"/></name><operator pos:line="238" pos:column="37">-&gt;<pos:position pos:line="238" pos:column="42"/></operator><name pos:line="238" pos:column="39">body<pos:position pos:line="238" pos:column="43"/></name></name></expr></argument>, <argument><expr><name pos:line="238" pos:column="45">e<pos:position pos:line="238" pos:column="46"/></name></expr></argument>)<pos:position pos:line="238" pos:column="47"/></argument_list></call></expr>;<pos:position pos:line="238" pos:column="48"/></expr_stmt>
    }<pos:position pos:line="239" pos:column="6"/></block></then>
    <else pos:line="240" pos:column="5">else <block pos:line="240" pos:column="10">{

        <comment type="block" pos:line="242" pos:column="9">/* small - make a copy of the data... */</comment>
        <expr_stmt><expr><call><name pos:line="243" pos:column="9">apr_brigade_write<pos:position pos:line="243" pos:column="26"/></name><argument_list pos:line="243" pos:column="26">(<argument><expr><name><name pos:line="243" pos:column="27">sobj<pos:position pos:line="243" pos:column="31"/></name><operator pos:line="243" pos:column="31">-&gt;<pos:position pos:line="243" pos:column="36"/></operator><name pos:line="243" pos:column="33">body<pos:position pos:line="243" pos:column="37"/></name></name></expr></argument>, <argument><expr><name pos:line="243" pos:column="39">NULL<pos:position pos:line="243" pos:column="43"/></name></expr></argument>, <argument><expr><name pos:line="243" pos:column="45">NULL<pos:position pos:line="243" pos:column="49"/></name></expr></argument>, <argument><expr><operator pos:line="243" pos:column="51">(<pos:position pos:line="243" pos:column="52"/></operator><specifier pos:line="243" pos:column="52">const<pos:position pos:line="243" pos:column="57"/></specifier> <name pos:line="243" pos:column="58">char<pos:position pos:line="243" pos:column="62"/></name> <operator pos:line="243" pos:column="63">*<pos:position pos:line="243" pos:column="64"/></operator><operator pos:line="243" pos:column="64">)<pos:position pos:line="243" pos:column="65"/></operator> <name><name pos:line="243" pos:column="66">sobj<pos:position pos:line="243" pos:column="70"/></name><operator pos:line="243" pos:column="70">-&gt;<pos:position pos:line="243" pos:column="75"/></operator><name pos:line="243" pos:column="72">buffer<pos:position pos:line="243" pos:column="78"/></name></name>
                <operator pos:line="244" pos:column="17">+<pos:position pos:line="244" pos:column="18"/></operator> <name pos:line="244" pos:column="19">slider<pos:position pos:line="244" pos:column="25"/></name></expr></argument>, <argument><expr><name pos:line="244" pos:column="27">len<pos:position pos:line="244" pos:column="30"/></name></expr></argument>)<pos:position pos:line="244" pos:column="31"/></argument_list></call></expr>;<pos:position pos:line="244" pos:column="32"/></expr_stmt>

        <comment type="block" pos:line="246" pos:column="9">/* ...and get rid of the large memory buffer */</comment>
        <expr_stmt><expr><call><name pos:line="247" pos:column="9">apr_pool_destroy<pos:position pos:line="247" pos:column="25"/></name><argument_list pos:line="247" pos:column="25">(<argument><expr><name><name pos:line="247" pos:column="26">sobj<pos:position pos:line="247" pos:column="30"/></name><operator pos:line="247" pos:column="30">-&gt;<pos:position pos:line="247" pos:column="35"/></operator><name pos:line="247" pos:column="32">pool<pos:position pos:line="247" pos:column="36"/></name></name></expr></argument>)<pos:position pos:line="247" pos:column="37"/></argument_list></call></expr>;<pos:position pos:line="247" pos:column="38"/></expr_stmt>
        <expr_stmt><expr><name><name pos:line="248" pos:column="9">sobj<pos:position pos:line="248" pos:column="13"/></name><operator pos:line="248" pos:column="13">-&gt;<pos:position pos:line="248" pos:column="18"/></operator><name pos:line="248" pos:column="15">pool<pos:position pos:line="248" pos:column="19"/></name></name> <operator pos:line="248" pos:column="20">=<pos:position pos:line="248" pos:column="21"/></operator> <name pos:line="248" pos:column="22">NULL<pos:position pos:line="248" pos:column="26"/></name></expr>;<pos:position pos:line="248" pos:column="27"/></expr_stmt>
    }<pos:position pos:line="249" pos:column="6"/></block></else></if>

    <comment type="block" pos:line="251" pos:column="5">/* make the configuration stick */</comment>
    <expr_stmt><expr><name><name pos:line="252" pos:column="5">h<pos:position pos:line="252" pos:column="6"/></name><operator pos:line="252" pos:column="6">-&gt;<pos:position pos:line="252" pos:column="11"/></operator><name pos:line="252" pos:column="8">cache_obj<pos:position pos:line="252" pos:column="17"/></name></name> <operator pos:line="252" pos:column="18">=<pos:position pos:line="252" pos:column="19"/></operator> <name pos:line="252" pos:column="20">obj<pos:position pos:line="252" pos:column="23"/></name></expr>;<pos:position pos:line="252" pos:column="24"/></expr_stmt>
    <expr_stmt><expr><name><name pos:line="253" pos:column="5">obj<pos:position pos:line="253" pos:column="8"/></name><operator pos:line="253" pos:column="8">-&gt;<pos:position pos:line="253" pos:column="13"/></operator><name pos:line="253" pos:column="10">vobj<pos:position pos:line="253" pos:column="14"/></name></name> <operator pos:line="253" pos:column="15">=<pos:position pos:line="253" pos:column="16"/></operator> <name pos:line="253" pos:column="17">sobj<pos:position pos:line="253" pos:column="21"/></name></expr>;<pos:position pos:line="253" pos:column="22"/></expr_stmt>

    <return pos:line="255" pos:column="5">return <expr><name pos:line="255" pos:column="12">OK<pos:position pos:line="255" pos:column="14"/></name></expr>;<pos:position pos:line="255" pos:column="15"/></return>

<label><name pos:line="257" pos:column="1">fail<pos:position pos:line="257" pos:column="5"/></name>:<pos:position pos:line="257" pos:column="6"/></label>
    <if pos:line="258" pos:column="5">if <condition pos:line="258" pos:column="8">(<expr><name pos:line="258" pos:column="9">socache_mutex<pos:position pos:line="258" pos:column="22"/></name></expr>)<pos:position pos:line="258" pos:column="23"/></condition><then pos:line="258" pos:column="23"> <block pos:line="258" pos:column="24">{
        <decl_stmt><decl><type><name pos:line="259" pos:column="9">apr_status_t<pos:position pos:line="259" pos:column="21"/></name></type> <name pos:line="259" pos:column="22">status<pos:position pos:line="259" pos:column="28"/></name> <init pos:line="259" pos:column="29">= <expr><call><name pos:line="259" pos:column="31">apr_global_mutex_lock<pos:position pos:line="259" pos:column="52"/></name><argument_list pos:line="259" pos:column="52">(<argument><expr><name pos:line="259" pos:column="53">socache_mutex<pos:position pos:line="259" pos:column="66"/></name></expr></argument>)<pos:position pos:line="259" pos:column="67"/></argument_list></call></expr></init></decl>;<pos:position pos:line="259" pos:column="68"/></decl_stmt>
        <if pos:line="260" pos:column="9">if <condition pos:line="260" pos:column="12">(<expr><name pos:line="260" pos:column="13">status<pos:position pos:line="260" pos:column="19"/></name> <operator pos:line="260" pos:column="20">!=<pos:position pos:line="260" pos:column="22"/></operator> <name pos:line="260" pos:column="23">APR_SUCCESS<pos:position pos:line="260" pos:column="34"/></name></expr>)<pos:position pos:line="260" pos:column="35"/></condition><then pos:line="260" pos:column="35"> <block pos:line="260" pos:column="36">{
            <expr_stmt><expr><call><name pos:line="261" pos:column="13">ap_log_rerror<pos:position pos:line="261" pos:column="26"/></name><argument_list pos:line="261" pos:column="26">(<argument><expr><name pos:line="261" pos:column="27">APLOG_MARK<pos:position pos:line="261" pos:column="37"/></name></expr></argument>, <argument><expr><name pos:line="261" pos:column="39">APLOG_ERR<pos:position pos:line="261" pos:column="48"/></name></expr></argument>, <argument><expr><name pos:line="261" pos:column="50">status<pos:position pos:line="261" pos:column="56"/></name></expr></argument>, <argument><expr><name pos:line="261" pos:column="58">r<pos:position pos:line="261" pos:column="59"/></name></expr></argument>, <argument><expr><call><name pos:line="261" pos:column="61">APLOGNO<pos:position pos:line="261" pos:column="68"/></name><argument_list pos:line="261" pos:column="68">(<argument><expr><literal type="number" pos:line="261" pos:column="69">02366<pos:position pos:line="261" pos:column="74"/></literal></expr></argument>)<pos:position pos:line="261" pos:column="75"/></argument_list></call>
                    <literal type="string" pos:line="262" pos:column="21">"could not acquire lock, ignoring: %s"<pos:position pos:line="262" pos:column="59"/></literal></expr></argument>, <argument><expr><name><name pos:line="262" pos:column="61">obj<pos:position pos:line="262" pos:column="64"/></name><operator pos:line="262" pos:column="64">-&gt;<pos:position pos:line="262" pos:column="69"/></operator><name pos:line="262" pos:column="66">key<pos:position pos:line="262" pos:column="69"/></name></name></expr></argument>)<pos:position pos:line="262" pos:column="70"/></argument_list></call></expr>;<pos:position pos:line="262" pos:column="71"/></expr_stmt>
            <expr_stmt><expr><call><name pos:line="263" pos:column="13">apr_pool_destroy<pos:position pos:line="263" pos:column="29"/></name><argument_list pos:line="263" pos:column="29">(<argument><expr><name><name pos:line="263" pos:column="30">sobj<pos:position pos:line="263" pos:column="34"/></name><operator pos:line="263" pos:column="34">-&gt;<pos:position pos:line="263" pos:column="39"/></operator><name pos:line="263" pos:column="36">pool<pos:position pos:line="263" pos:column="40"/></name></name></expr></argument>)<pos:position pos:line="263" pos:column="41"/></argument_list></call></expr>;<pos:position pos:line="263" pos:column="42"/></expr_stmt>
            <expr_stmt><expr><name><name pos:line="264" pos:column="13">sobj<pos:position pos:line="264" pos:column="17"/></name><operator pos:line="264" pos:column="17">-&gt;<pos:position pos:line="264" pos:column="22"/></operator><name pos:line="264" pos:column="19">pool<pos:position pos:line="264" pos:column="23"/></name></name> <operator pos:line="264" pos:column="24">=<pos:position pos:line="264" pos:column="25"/></operator> <name pos:line="264" pos:column="26">NULL<pos:position pos:line="264" pos:column="30"/></name></expr>;<pos:position pos:line="264" pos:column="31"/></expr_stmt>
            <return pos:line="265" pos:column="13">return <expr><name pos:line="265" pos:column="20">DECLINED<pos:position pos:line="265" pos:column="28"/></name></expr>;<pos:position pos:line="265" pos:column="29"/></return>
        }<pos:position pos:line="266" pos:column="10"/></block></then></if>
    }<pos:position pos:line="267" pos:column="6"/></block></then></if>
    <expr_stmt><expr><call><name><name pos:line="268" pos:column="5">conf<pos:position pos:line="268" pos:column="9"/></name><operator pos:line="268" pos:column="9">-&gt;<pos:position pos:line="268" pos:column="14"/></operator><name pos:line="268" pos:column="11">provider<pos:position pos:line="268" pos:column="19"/></name><operator pos:line="268" pos:column="19">-&gt;<pos:position pos:line="268" pos:column="24"/></operator><name pos:line="268" pos:column="21">socache_provider<pos:position pos:line="268" pos:column="37"/></name><operator pos:line="268" pos:column="37">-&gt;<pos:position pos:line="268" pos:column="42"/></operator><name pos:line="268" pos:column="39">remove<pos:position pos:line="268" pos:column="45"/></name></name><argument_list pos:line="268" pos:column="45">(
            <argument><expr><name><name pos:line="269" pos:column="13">conf<pos:position pos:line="269" pos:column="17"/></name><operator pos:line="269" pos:column="17">-&gt;<pos:position pos:line="269" pos:column="22"/></operator><name pos:line="269" pos:column="19">provider<pos:position pos:line="269" pos:column="27"/></name><operator pos:line="269" pos:column="27">-&gt;<pos:position pos:line="269" pos:column="32"/></operator><name pos:line="269" pos:column="29">socache_instance<pos:position pos:line="269" pos:column="45"/></name></name></expr></argument>, <argument><expr><name><name pos:line="269" pos:column="47">r<pos:position pos:line="269" pos:column="48"/></name><operator pos:line="269" pos:column="48">-&gt;<pos:position pos:line="269" pos:column="53"/></operator><name pos:line="269" pos:column="50">server<pos:position pos:line="269" pos:column="56"/></name></name></expr></argument>,
            <argument><expr><operator pos:line="270" pos:column="13">(<pos:position pos:line="270" pos:column="14"/></operator><name pos:line="270" pos:column="14">unsigned<pos:position pos:line="270" pos:column="22"/></name> <name pos:line="270" pos:column="23">char<pos:position pos:line="270" pos:column="27"/></name> <operator pos:line="270" pos:column="28">*<pos:position pos:line="270" pos:column="29"/></operator><operator pos:line="270" pos:column="29">)<pos:position pos:line="270" pos:column="30"/></operator> <name pos:line="270" pos:column="31">nkey<pos:position pos:line="270" pos:column="35"/></name></expr></argument>, <argument><expr><call><name pos:line="270" pos:column="37">strlen<pos:position pos:line="270" pos:column="43"/></name><argument_list pos:line="270" pos:column="43">(<argument><expr><name pos:line="270" pos:column="44">nkey<pos:position pos:line="270" pos:column="48"/></name></expr></argument>)<pos:position pos:line="270" pos:column="49"/></argument_list></call></expr></argument>, <argument><expr><name><name pos:line="270" pos:column="51">r<pos:position pos:line="270" pos:column="52"/></name><operator pos:line="270" pos:column="52">-&gt;<pos:position pos:line="270" pos:column="57"/></operator><name pos:line="270" pos:column="54">pool<pos:position pos:line="270" pos:column="58"/></name></name></expr></argument>)<pos:position pos:line="270" pos:column="59"/></argument_list></call></expr>;<pos:position pos:line="270" pos:column="60"/></expr_stmt>
    <if pos:line="271" pos:column="5">if <condition pos:line="271" pos:column="8">(<expr><name pos:line="271" pos:column="9">socache_mutex<pos:position pos:line="271" pos:column="22"/></name></expr>)<pos:position pos:line="271" pos:column="23"/></condition><then pos:line="271" pos:column="23"> <block pos:line="271" pos:column="24">{
        <decl_stmt><decl><type><name pos:line="272" pos:column="9">apr_status_t<pos:position pos:line="272" pos:column="21"/></name></type> <name pos:line="272" pos:column="22">status<pos:position pos:line="272" pos:column="28"/></name> <init pos:line="272" pos:column="29">= <expr><call><name pos:line="272" pos:column="31">apr_global_mutex_unlock<pos:position pos:line="272" pos:column="54"/></name><argument_list pos:line="272" pos:column="54">(<argument><expr><name pos:line="272" pos:column="55">socache_mutex<pos:position pos:line="272" pos:column="68"/></name></expr></argument>)<pos:position pos:line="272" pos:column="69"/></argument_list></call></expr></init></decl>;<pos:position pos:line="272" pos:column="70"/></decl_stmt>
        <if pos:line="273" pos:column="9">if <condition pos:line="273" pos:column="12">(<expr><name pos:line="273" pos:column="13">status<pos:position pos:line="273" pos:column="19"/></name> <operator pos:line="273" pos:column="20">!=<pos:position pos:line="273" pos:column="22"/></operator> <name pos:line="273" pos:column="23">APR_SUCCESS<pos:position pos:line="273" pos:column="34"/></name></expr>)<pos:position pos:line="273" pos:column="35"/></condition><then pos:line="273" pos:column="35"> <block pos:line="273" pos:column="36">{
            <expr_stmt><expr><call><name pos:line="274" pos:column="13">ap_log_rerror<pos:position pos:line="274" pos:column="26"/></name><argument_list pos:line="274" pos:column="26">(<argument><expr><name pos:line="274" pos:column="27">APLOG_MARK<pos:position pos:line="274" pos:column="37"/></name></expr></argument>, <argument><expr><name pos:line="274" pos:column="39">APLOG_ERR<pos:position pos:line="274" pos:column="48"/></name></expr></argument>, <argument><expr><name pos:line="274" pos:column="50">status<pos:position pos:line="274" pos:column="56"/></name></expr></argument>, <argument><expr><name pos:line="274" pos:column="58">r<pos:position pos:line="274" pos:column="59"/></name></expr></argument>, <argument><expr><call><name pos:line="274" pos:column="61">APLOGNO<pos:position pos:line="274" pos:column="68"/></name><argument_list pos:line="274" pos:column="68">(<argument><expr><literal type="number" pos:line="274" pos:column="69">02367<pos:position pos:line="274" pos:column="74"/></literal></expr></argument>)<pos:position pos:line="274" pos:column="75"/></argument_list></call>
                    <literal type="string" pos:line="275" pos:column="21">"could not release lock, ignoring: %s"<pos:position pos:line="275" pos:column="59"/></literal></expr></argument>, <argument><expr><name><name pos:line="275" pos:column="61">obj<pos:position pos:line="275" pos:column="64"/></name><operator pos:line="275" pos:column="64">-&gt;<pos:position pos:line="275" pos:column="69"/></operator><name pos:line="275" pos:column="66">key<pos:position pos:line="275" pos:column="69"/></name></name></expr></argument>)<pos:position pos:line="275" pos:column="70"/></argument_list></call></expr>;<pos:position pos:line="275" pos:column="71"/></expr_stmt>
        }<pos:position pos:line="276" pos:column="10"/></block></then></if>
    }<pos:position pos:line="277" pos:column="6"/></block></then></if>
    <expr_stmt><expr><call><name pos:line="278" pos:column="5">apr_pool_destroy<pos:position pos:line="278" pos:column="21"/></name><argument_list pos:line="278" pos:column="21">(<argument><expr><name><name pos:line="278" pos:column="22">sobj<pos:position pos:line="278" pos:column="26"/></name><operator pos:line="278" pos:column="26">-&gt;<pos:position pos:line="278" pos:column="31"/></operator><name pos:line="278" pos:column="28">pool<pos:position pos:line="278" pos:column="32"/></name></name></expr></argument>)<pos:position pos:line="278" pos:column="33"/></argument_list></call></expr>;<pos:position pos:line="278" pos:column="34"/></expr_stmt>
    <expr_stmt><expr><name><name pos:line="279" pos:column="5">sobj<pos:position pos:line="279" pos:column="9"/></name><operator pos:line="279" pos:column="9">-&gt;<pos:position pos:line="279" pos:column="14"/></operator><name pos:line="279" pos:column="11">pool<pos:position pos:line="279" pos:column="15"/></name></name> <operator pos:line="279" pos:column="16">=<pos:position pos:line="279" pos:column="17"/></operator> <name pos:line="279" pos:column="18">NULL<pos:position pos:line="279" pos:column="22"/></name></expr>;<pos:position pos:line="279" pos:column="23"/></expr_stmt>
    <return pos:line="280" pos:column="5">return <expr><name pos:line="280" pos:column="12">DECLINED<pos:position pos:line="280" pos:column="20"/></name></expr>;<pos:position pos:line="280" pos:column="21"/></return>
}<pos:position pos:line="281" pos:column="2"/></block></function></unit>

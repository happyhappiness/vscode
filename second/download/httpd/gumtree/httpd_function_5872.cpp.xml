<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/httpd/gumtree/httpd_function_5872.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">apr_status_t<pos:position pos:line="1" pos:column="13"/></name></type> <name pos:line="1" pos:column="14">h2_stream_prep_read<pos:position pos:line="1" pos:column="33"/></name><parameter_list pos:line="1" pos:column="33">(<parameter><decl><type><name pos:line="1" pos:column="34">h2_stream<pos:position pos:line="1" pos:column="43"/></name> <modifier pos:line="1" pos:column="44">*<pos:position pos:line="1" pos:column="45"/></modifier></type><name pos:line="1" pos:column="45">stream<pos:position pos:line="1" pos:column="51"/></name></decl></parameter>, 
                                 <parameter><decl><type><name pos:line="2" pos:column="34">apr_size_t<pos:position pos:line="2" pos:column="44"/></name> <modifier pos:line="2" pos:column="45">*<pos:position pos:line="2" pos:column="46"/></modifier></type><name pos:line="2" pos:column="46">plen<pos:position pos:line="2" pos:column="50"/></name></decl></parameter>, <parameter><decl><type><name pos:line="2" pos:column="52">int<pos:position pos:line="2" pos:column="55"/></name> <modifier pos:line="2" pos:column="56">*<pos:position pos:line="2" pos:column="57"/></modifier></type><name pos:line="2" pos:column="57">peos<pos:position pos:line="2" pos:column="61"/></name></decl></parameter>)<pos:position pos:line="2" pos:column="62"/></parameter_list>
<block pos:line="3" pos:column="1">{
    <decl_stmt><decl><type><name pos:line="4" pos:column="5">apr_status_t<pos:position pos:line="4" pos:column="17"/></name></type> <name pos:line="4" pos:column="18">status<pos:position pos:line="4" pos:column="24"/></name> <init pos:line="4" pos:column="25">= <expr><name pos:line="4" pos:column="27">APR_SUCCESS<pos:position pos:line="4" pos:column="38"/></name></expr></init></decl>;<pos:position pos:line="4" pos:column="39"/></decl_stmt>
    <decl_stmt><decl><type><specifier pos:line="5" pos:column="5">const<pos:position pos:line="5" pos:column="10"/></specifier> <name pos:line="5" pos:column="11">char<pos:position pos:line="5" pos:column="15"/></name> <modifier pos:line="5" pos:column="16">*<pos:position pos:line="5" pos:column="17"/></modifier></type><name pos:line="5" pos:column="17">src<pos:position pos:line="5" pos:column="20"/></name></decl>;<pos:position pos:line="5" pos:column="21"/></decl_stmt>
    
    <if pos:line="7" pos:column="5">if <condition pos:line="7" pos:column="8">(<expr><name><name pos:line="7" pos:column="9">stream<pos:position pos:line="7" pos:column="15"/></name><operator pos:line="7" pos:column="15">-&gt;<pos:position pos:line="7" pos:column="20"/></operator><name pos:line="7" pos:column="17">bbout<pos:position pos:line="7" pos:column="22"/></name></name> <operator pos:line="7" pos:column="23">&amp;&amp;<pos:position pos:line="7" pos:column="33"/></operator> <operator pos:line="7" pos:column="26">!<pos:position pos:line="7" pos:column="27"/></operator><call><name pos:line="7" pos:column="27">APR_BRIGADE_EMPTY<pos:position pos:line="7" pos:column="44"/></name><argument_list pos:line="7" pos:column="44">(<argument><expr><name><name pos:line="7" pos:column="45">stream<pos:position pos:line="7" pos:column="51"/></name><operator pos:line="7" pos:column="51">-&gt;<pos:position pos:line="7" pos:column="56"/></operator><name pos:line="7" pos:column="53">bbout<pos:position pos:line="7" pos:column="58"/></name></name></expr></argument>)<pos:position pos:line="7" pos:column="59"/></argument_list></call></expr>)<pos:position pos:line="7" pos:column="60"/></condition><then pos:line="7" pos:column="60"> <block pos:line="7" pos:column="61">{
        <expr_stmt><expr><name pos:line="8" pos:column="9">src<pos:position pos:line="8" pos:column="12"/></name> <operator pos:line="8" pos:column="13">=<pos:position pos:line="8" pos:column="14"/></operator> <literal type="string" pos:line="8" pos:column="15">"stream"<pos:position pos:line="8" pos:column="23"/></literal></expr>;<pos:position pos:line="8" pos:column="24"/></expr_stmt>
        <expr_stmt><expr><name pos:line="9" pos:column="9">status<pos:position pos:line="9" pos:column="15"/></name> <operator pos:line="9" pos:column="16">=<pos:position pos:line="9" pos:column="17"/></operator> <call><name pos:line="9" pos:column="18">h2_util_bb_avail<pos:position pos:line="9" pos:column="34"/></name><argument_list pos:line="9" pos:column="34">(<argument><expr><name><name pos:line="9" pos:column="35">stream<pos:position pos:line="9" pos:column="41"/></name><operator pos:line="9" pos:column="41">-&gt;<pos:position pos:line="9" pos:column="46"/></operator><name pos:line="9" pos:column="43">bbout<pos:position pos:line="9" pos:column="48"/></name></name></expr></argument>, <argument><expr><name pos:line="9" pos:column="50">plen<pos:position pos:line="9" pos:column="54"/></name></expr></argument>, <argument><expr><name pos:line="9" pos:column="56">peos<pos:position pos:line="9" pos:column="60"/></name></expr></argument>)<pos:position pos:line="9" pos:column="61"/></argument_list></call></expr>;<pos:position pos:line="9" pos:column="62"/></expr_stmt>
        <if pos:line="10" pos:column="9">if <condition pos:line="10" pos:column="12">(<expr><name pos:line="10" pos:column="13">status<pos:position pos:line="10" pos:column="19"/></name> <operator pos:line="10" pos:column="20">==<pos:position pos:line="10" pos:column="22"/></operator> <name pos:line="10" pos:column="23">APR_SUCCESS<pos:position pos:line="10" pos:column="34"/></name> <operator pos:line="10" pos:column="35">&amp;&amp;<pos:position pos:line="10" pos:column="45"/></operator> <operator pos:line="10" pos:column="38">!<pos:position pos:line="10" pos:column="39"/></operator><operator pos:line="10" pos:column="39">*<pos:position pos:line="10" pos:column="40"/></operator><name pos:line="10" pos:column="40">peos<pos:position pos:line="10" pos:column="44"/></name> <operator pos:line="10" pos:column="45">&amp;&amp;<pos:position pos:line="10" pos:column="55"/></operator> <operator pos:line="10" pos:column="48">!<pos:position pos:line="10" pos:column="49"/></operator><operator pos:line="10" pos:column="49">*<pos:position pos:line="10" pos:column="50"/></operator><name pos:line="10" pos:column="50">plen<pos:position pos:line="10" pos:column="54"/></name></expr>)<pos:position pos:line="10" pos:column="55"/></condition><then pos:line="10" pos:column="55"> <block pos:line="10" pos:column="56">{
            <expr_stmt><expr><call><name pos:line="11" pos:column="13">apr_brigade_cleanup<pos:position pos:line="11" pos:column="32"/></name><argument_list pos:line="11" pos:column="32">(<argument><expr><name><name pos:line="11" pos:column="33">stream<pos:position pos:line="11" pos:column="39"/></name><operator pos:line="11" pos:column="39">-&gt;<pos:position pos:line="11" pos:column="44"/></operator><name pos:line="11" pos:column="41">bbout<pos:position pos:line="11" pos:column="46"/></name></name></expr></argument>)<pos:position pos:line="11" pos:column="47"/></argument_list></call></expr>;<pos:position pos:line="11" pos:column="48"/></expr_stmt>
            <return pos:line="12" pos:column="13">return <expr><call><name pos:line="12" pos:column="20">h2_stream_prep_read<pos:position pos:line="12" pos:column="39"/></name><argument_list pos:line="12" pos:column="39">(<argument><expr><name pos:line="12" pos:column="40">stream<pos:position pos:line="12" pos:column="46"/></name></expr></argument>, <argument><expr><name pos:line="12" pos:column="48">plen<pos:position pos:line="12" pos:column="52"/></name></expr></argument>, <argument><expr><name pos:line="12" pos:column="54">peos<pos:position pos:line="12" pos:column="58"/></name></expr></argument>)<pos:position pos:line="12" pos:column="59"/></argument_list></call></expr>;<pos:position pos:line="12" pos:column="60"/></return>
        }<pos:position pos:line="13" pos:column="10"/></block></then></if>
    }<pos:position pos:line="14" pos:column="6"/></block></then>
    <else pos:line="15" pos:column="5">else <block pos:line="15" pos:column="10">{
        <expr_stmt><expr><name pos:line="16" pos:column="9">src<pos:position pos:line="16" pos:column="12"/></name> <operator pos:line="16" pos:column="13">=<pos:position pos:line="16" pos:column="14"/></operator> <literal type="string" pos:line="16" pos:column="15">"mplx"<pos:position pos:line="16" pos:column="21"/></literal></expr>;<pos:position pos:line="16" pos:column="22"/></expr_stmt>
        <expr_stmt><expr><name pos:line="17" pos:column="9">status<pos:position pos:line="17" pos:column="15"/></name> <operator pos:line="17" pos:column="16">=<pos:position pos:line="17" pos:column="17"/></operator> <call><name pos:line="17" pos:column="18">h2_mplx_out_readx<pos:position pos:line="17" pos:column="35"/></name><argument_list pos:line="17" pos:column="35">(<argument><expr><name><name pos:line="17" pos:column="36">stream<pos:position pos:line="17" pos:column="42"/></name><operator pos:line="17" pos:column="42">-&gt;<pos:position pos:line="17" pos:column="47"/></operator><name pos:line="17" pos:column="44">m<pos:position pos:line="17" pos:column="45"/></name></name></expr></argument>, <argument><expr><name><name pos:line="17" pos:column="47">stream<pos:position pos:line="17" pos:column="53"/></name><operator pos:line="17" pos:column="53">-&gt;<pos:position pos:line="17" pos:column="58"/></operator><name pos:line="17" pos:column="55">id<pos:position pos:line="17" pos:column="57"/></name></name></expr></argument>, 
                                   <argument><expr><name pos:line="18" pos:column="36">NULL<pos:position pos:line="18" pos:column="40"/></name></expr></argument>, <argument><expr><name pos:line="18" pos:column="42">NULL<pos:position pos:line="18" pos:column="46"/></name></expr></argument>, <argument><expr><name pos:line="18" pos:column="48">plen<pos:position pos:line="18" pos:column="52"/></name></expr></argument>, <argument><expr><name pos:line="18" pos:column="54">peos<pos:position pos:line="18" pos:column="58"/></name></expr></argument>)<pos:position pos:line="18" pos:column="59"/></argument_list></call></expr>;<pos:position pos:line="18" pos:column="60"/></expr_stmt>
    }<pos:position pos:line="19" pos:column="6"/></block></else></if>
    <if pos:line="20" pos:column="5">if <condition pos:line="20" pos:column="8">(<expr><name pos:line="20" pos:column="9">status<pos:position pos:line="20" pos:column="15"/></name> <operator pos:line="20" pos:column="16">==<pos:position pos:line="20" pos:column="18"/></operator> <name pos:line="20" pos:column="19">APR_SUCCESS<pos:position pos:line="20" pos:column="30"/></name> <operator pos:line="20" pos:column="31">&amp;&amp;<pos:position pos:line="20" pos:column="41"/></operator> <operator pos:line="20" pos:column="34">!<pos:position pos:line="20" pos:column="35"/></operator><operator pos:line="20" pos:column="35">*<pos:position pos:line="20" pos:column="36"/></operator><name pos:line="20" pos:column="36">peos<pos:position pos:line="20" pos:column="40"/></name> <operator pos:line="20" pos:column="41">&amp;&amp;<pos:position pos:line="20" pos:column="51"/></operator> <operator pos:line="20" pos:column="44">!<pos:position pos:line="20" pos:column="45"/></operator><operator pos:line="20" pos:column="45">*<pos:position pos:line="20" pos:column="46"/></operator><name pos:line="20" pos:column="46">plen<pos:position pos:line="20" pos:column="50"/></name></expr>)<pos:position pos:line="20" pos:column="51"/></condition><then pos:line="20" pos:column="51"> <block pos:line="20" pos:column="52">{
        <expr_stmt><expr><name pos:line="21" pos:column="9">status<pos:position pos:line="21" pos:column="15"/></name> <operator pos:line="21" pos:column="16">=<pos:position pos:line="21" pos:column="17"/></operator> <name pos:line="21" pos:column="18">APR_EAGAIN<pos:position pos:line="21" pos:column="28"/></name></expr>;<pos:position pos:line="21" pos:column="29"/></expr_stmt>
    }<pos:position pos:line="22" pos:column="6"/></block></then></if>
    <expr_stmt><expr><call><name pos:line="23" pos:column="5">ap_log_cerror<pos:position pos:line="23" pos:column="18"/></name><argument_list pos:line="23" pos:column="18">(<argument><expr><name pos:line="23" pos:column="19">APLOG_MARK<pos:position pos:line="23" pos:column="29"/></name></expr></argument>, <argument><expr><name pos:line="23" pos:column="31">APLOG_TRACE1<pos:position pos:line="23" pos:column="43"/></name></expr></argument>, <argument><expr><name pos:line="23" pos:column="45">status<pos:position pos:line="23" pos:column="51"/></name></expr></argument>, <argument><expr><name><name pos:line="23" pos:column="53">stream<pos:position pos:line="23" pos:column="59"/></name><operator pos:line="23" pos:column="59">-&gt;<pos:position pos:line="23" pos:column="64"/></operator><name pos:line="23" pos:column="61">m<pos:position pos:line="23" pos:column="62"/></name><operator pos:line="23" pos:column="62">-&gt;<pos:position pos:line="23" pos:column="67"/></operator><name pos:line="23" pos:column="64">c<pos:position pos:line="23" pos:column="65"/></name></name></expr></argument>,
                  <argument><expr><literal type="string" pos:line="24" pos:column="19">"h2_stream(%ld-%d): prep_read %s, len=%ld eos=%d"<pos:position pos:line="24" pos:column="68"/></literal></expr></argument>,
                  <argument><expr><name><name pos:line="25" pos:column="19">stream<pos:position pos:line="25" pos:column="25"/></name><operator pos:line="25" pos:column="25">-&gt;<pos:position pos:line="25" pos:column="30"/></operator><name pos:line="25" pos:column="27">m<pos:position pos:line="25" pos:column="28"/></name><operator pos:line="25" pos:column="28">-&gt;<pos:position pos:line="25" pos:column="33"/></operator><name pos:line="25" pos:column="30">id<pos:position pos:line="25" pos:column="32"/></name></name></expr></argument>, <argument><expr><name><name pos:line="25" pos:column="34">stream<pos:position pos:line="25" pos:column="40"/></name><operator pos:line="25" pos:column="40">-&gt;<pos:position pos:line="25" pos:column="45"/></operator><name pos:line="25" pos:column="42">id<pos:position pos:line="25" pos:column="44"/></name></name></expr></argument>, 
                  <argument><expr><name pos:line="26" pos:column="19">src<pos:position pos:line="26" pos:column="22"/></name></expr></argument>, <argument><expr><operator pos:line="26" pos:column="24">(<pos:position pos:line="26" pos:column="25"/></operator><name pos:line="26" pos:column="25">long<pos:position pos:line="26" pos:column="29"/></name><operator pos:line="26" pos:column="29">)<pos:position pos:line="26" pos:column="30"/></operator><operator pos:line="26" pos:column="30">*<pos:position pos:line="26" pos:column="31"/></operator><name pos:line="26" pos:column="31">plen<pos:position pos:line="26" pos:column="35"/></name></expr></argument>, <argument><expr><operator pos:line="26" pos:column="37">*<pos:position pos:line="26" pos:column="38"/></operator><name pos:line="26" pos:column="38">peos<pos:position pos:line="26" pos:column="42"/></name></expr></argument>)<pos:position pos:line="26" pos:column="43"/></argument_list></call></expr>;<pos:position pos:line="26" pos:column="44"/></expr_stmt>
    <return pos:line="27" pos:column="5">return <expr><name pos:line="27" pos:column="12">status<pos:position pos:line="27" pos:column="18"/></name></expr>;<pos:position pos:line="27" pos:column="19"/></return>
}<pos:position pos:line="28" pos:column="2"/></block></function></unit>

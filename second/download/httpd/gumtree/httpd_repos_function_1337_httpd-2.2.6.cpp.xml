<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/httpd/gumtree/httpd_repos_function_1337_httpd-2.2.6.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">int<pos:position pos:line="1" pos:column="11"/></name></type> <name pos:line="1" pos:column="12">ap_process_http_async_connection<pos:position pos:line="1" pos:column="44"/></name><parameter_list pos:line="1" pos:column="44">(<parameter><decl><type><name pos:line="1" pos:column="45">conn_rec<pos:position pos:line="1" pos:column="53"/></name> <modifier pos:line="1" pos:column="54">*<pos:position pos:line="1" pos:column="55"/></modifier></type><name pos:line="1" pos:column="55">c<pos:position pos:line="1" pos:column="56"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="57"/></parameter_list>
<block pos:line="2" pos:column="1">{
    <decl_stmt><decl><type><name pos:line="3" pos:column="5">request_rec<pos:position pos:line="3" pos:column="16"/></name> <modifier pos:line="3" pos:column="17">*<pos:position pos:line="3" pos:column="18"/></modifier></type><name pos:line="3" pos:column="18">r<pos:position pos:line="3" pos:column="19"/></name></decl>;<pos:position pos:line="3" pos:column="20"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="4" pos:column="5">conn_state_t<pos:position pos:line="4" pos:column="17"/></name> <modifier pos:line="4" pos:column="18">*<pos:position pos:line="4" pos:column="19"/></modifier></type><name pos:line="4" pos:column="19">cs<pos:position pos:line="4" pos:column="21"/></name> <init pos:line="4" pos:column="22">= <expr><name><name pos:line="4" pos:column="24">c<pos:position pos:line="4" pos:column="25"/></name><operator pos:line="4" pos:column="25">-&gt;<pos:position pos:line="4" pos:column="30"/></operator><name pos:line="4" pos:column="27">cs<pos:position pos:line="4" pos:column="29"/></name></name></expr></init></decl>;<pos:position pos:line="4" pos:column="30"/></decl_stmt>

    <expr_stmt><expr><call><name pos:line="6" pos:column="5">AP_DEBUG_ASSERT<pos:position pos:line="6" pos:column="20"/></name><argument_list pos:line="6" pos:column="20">(<argument><expr><name><name pos:line="6" pos:column="21">cs<pos:position pos:line="6" pos:column="23"/></name><operator pos:line="6" pos:column="23">-&gt;<pos:position pos:line="6" pos:column="28"/></operator><name pos:line="6" pos:column="25">state<pos:position pos:line="6" pos:column="30"/></name></name> <operator pos:line="6" pos:column="31">==<pos:position pos:line="6" pos:column="33"/></operator> <name pos:line="6" pos:column="34">CONN_STATE_READ_REQUEST_LINE<pos:position pos:line="6" pos:column="62"/></name></expr></argument>)<pos:position pos:line="6" pos:column="63"/></argument_list></call></expr>;<pos:position pos:line="6" pos:column="64"/></expr_stmt>

    <while pos:line="8" pos:column="5">while <condition pos:line="8" pos:column="11">(<expr><name><name pos:line="8" pos:column="12">cs<pos:position pos:line="8" pos:column="14"/></name><operator pos:line="8" pos:column="14">-&gt;<pos:position pos:line="8" pos:column="19"/></operator><name pos:line="8" pos:column="16">state<pos:position pos:line="8" pos:column="21"/></name></name> <operator pos:line="8" pos:column="22">==<pos:position pos:line="8" pos:column="24"/></operator> <name pos:line="8" pos:column="25">CONN_STATE_READ_REQUEST_LINE<pos:position pos:line="8" pos:column="53"/></name></expr>)<pos:position pos:line="8" pos:column="54"/></condition> <block pos:line="8" pos:column="55">{
        <expr_stmt><expr><call><name pos:line="9" pos:column="9">ap_update_child_status<pos:position pos:line="9" pos:column="31"/></name><argument_list pos:line="9" pos:column="31">(<argument><expr><name><name pos:line="9" pos:column="32">c<pos:position pos:line="9" pos:column="33"/></name><operator pos:line="9" pos:column="33">-&gt;<pos:position pos:line="9" pos:column="38"/></operator><name pos:line="9" pos:column="35">sbh<pos:position pos:line="9" pos:column="38"/></name></name></expr></argument>, <argument><expr><name pos:line="9" pos:column="40">SERVER_BUSY_READ<pos:position pos:line="9" pos:column="56"/></name></expr></argument>, <argument><expr><name pos:line="9" pos:column="58">NULL<pos:position pos:line="9" pos:column="62"/></name></expr></argument>)<pos:position pos:line="9" pos:column="63"/></argument_list></call></expr>;<pos:position pos:line="9" pos:column="64"/></expr_stmt>

        <if pos:line="11" pos:column="9">if <condition pos:line="11" pos:column="12">(<expr><operator pos:line="11" pos:column="13">(<pos:position pos:line="11" pos:column="14"/></operator><name pos:line="11" pos:column="14">r<pos:position pos:line="11" pos:column="15"/></name> <operator pos:line="11" pos:column="16">=<pos:position pos:line="11" pos:column="17"/></operator> <call><name pos:line="11" pos:column="18">ap_read_request<pos:position pos:line="11" pos:column="33"/></name><argument_list pos:line="11" pos:column="33">(<argument><expr><name pos:line="11" pos:column="34">c<pos:position pos:line="11" pos:column="35"/></name></expr></argument>)<pos:position pos:line="11" pos:column="36"/></argument_list></call><operator pos:line="11" pos:column="36">)<pos:position pos:line="11" pos:column="37"/></operator></expr>)<pos:position pos:line="11" pos:column="38"/></condition><then pos:line="11" pos:column="38"> <block pos:line="11" pos:column="39">{

            <expr_stmt><expr><name><name pos:line="13" pos:column="13">c<pos:position pos:line="13" pos:column="14"/></name><operator pos:line="13" pos:column="14">-&gt;<pos:position pos:line="13" pos:column="19"/></operator><name pos:line="13" pos:column="16">keepalive<pos:position pos:line="13" pos:column="25"/></name></name> <operator pos:line="13" pos:column="26">=<pos:position pos:line="13" pos:column="27"/></operator> <name pos:line="13" pos:column="28">AP_CONN_UNKNOWN<pos:position pos:line="13" pos:column="43"/></name></expr>;<pos:position pos:line="13" pos:column="44"/></expr_stmt>
            <comment type="block" pos:line="14" pos:column="13">/* process the request if it was read without error */</comment>

            <expr_stmt><expr><call><name pos:line="16" pos:column="13">ap_update_child_status<pos:position pos:line="16" pos:column="35"/></name><argument_list pos:line="16" pos:column="35">(<argument><expr><name><name pos:line="16" pos:column="36">c<pos:position pos:line="16" pos:column="37"/></name><operator pos:line="16" pos:column="37">-&gt;<pos:position pos:line="16" pos:column="42"/></operator><name pos:line="16" pos:column="39">sbh<pos:position pos:line="16" pos:column="42"/></name></name></expr></argument>, <argument><expr><name pos:line="16" pos:column="44">SERVER_BUSY_WRITE<pos:position pos:line="16" pos:column="61"/></name></expr></argument>, <argument><expr><name pos:line="16" pos:column="63">r<pos:position pos:line="16" pos:column="64"/></name></expr></argument>)<pos:position pos:line="16" pos:column="65"/></argument_list></call></expr>;<pos:position pos:line="16" pos:column="66"/></expr_stmt>
            <if pos:line="17" pos:column="13">if <condition pos:line="17" pos:column="16">(<expr><name><name pos:line="17" pos:column="17">r<pos:position pos:line="17" pos:column="18"/></name><operator pos:line="17" pos:column="18">-&gt;<pos:position pos:line="17" pos:column="23"/></operator><name pos:line="17" pos:column="20">status<pos:position pos:line="17" pos:column="26"/></name></name> <operator pos:line="17" pos:column="27">==<pos:position pos:line="17" pos:column="29"/></operator> <name pos:line="17" pos:column="30">HTTP_OK<pos:position pos:line="17" pos:column="37"/></name></expr>)<pos:position pos:line="17" pos:column="38"/></condition><then pos:line="17" pos:column="38">
                <block type="pseudo"><expr_stmt><expr><call><name pos:line="18" pos:column="17">ap_process_request<pos:position pos:line="18" pos:column="35"/></name><argument_list pos:line="18" pos:column="35">(<argument><expr><name pos:line="18" pos:column="36">r<pos:position pos:line="18" pos:column="37"/></name></expr></argument>)<pos:position pos:line="18" pos:column="38"/></argument_list></call></expr>;<pos:position pos:line="18" pos:column="39"/></expr_stmt></block></then></if>

            <if pos:line="20" pos:column="13">if <condition pos:line="20" pos:column="16">(<expr><name pos:line="20" pos:column="17">ap_extended_status<pos:position pos:line="20" pos:column="35"/></name></expr>)<pos:position pos:line="20" pos:column="36"/></condition><then pos:line="20" pos:column="36">
                <block type="pseudo"><expr_stmt><expr><call><name pos:line="21" pos:column="17">ap_increment_counts<pos:position pos:line="21" pos:column="36"/></name><argument_list pos:line="21" pos:column="36">(<argument><expr><name><name pos:line="21" pos:column="37">c<pos:position pos:line="21" pos:column="38"/></name><operator pos:line="21" pos:column="38">-&gt;<pos:position pos:line="21" pos:column="43"/></operator><name pos:line="21" pos:column="40">sbh<pos:position pos:line="21" pos:column="43"/></name></name></expr></argument>, <argument><expr><name pos:line="21" pos:column="45">r<pos:position pos:line="21" pos:column="46"/></name></expr></argument>)<pos:position pos:line="21" pos:column="47"/></argument_list></call></expr>;<pos:position pos:line="21" pos:column="48"/></expr_stmt></block></then></if>

            <if pos:line="23" pos:column="13">if <condition pos:line="23" pos:column="16">(<expr><name><name pos:line="23" pos:column="17">c<pos:position pos:line="23" pos:column="18"/></name><operator pos:line="23" pos:column="18">-&gt;<pos:position pos:line="23" pos:column="23"/></operator><name pos:line="23" pos:column="20">keepalive<pos:position pos:line="23" pos:column="29"/></name></name> <operator pos:line="23" pos:column="30">!=<pos:position pos:line="23" pos:column="32"/></operator> <name pos:line="23" pos:column="33">AP_CONN_KEEPALIVE<pos:position pos:line="23" pos:column="50"/></name> <operator pos:line="23" pos:column="51">||<pos:position pos:line="23" pos:column="53"/></operator> <name><name pos:line="23" pos:column="54">c<pos:position pos:line="23" pos:column="55"/></name><operator pos:line="23" pos:column="55">-&gt;<pos:position pos:line="23" pos:column="60"/></operator><name pos:line="23" pos:column="57">aborted<pos:position pos:line="23" pos:column="64"/></name></name>
                    <operator pos:line="24" pos:column="21">||<pos:position pos:line="24" pos:column="23"/></operator> <call><name pos:line="24" pos:column="24">ap_graceful_stop_signalled<pos:position pos:line="24" pos:column="50"/></name><argument_list pos:line="24" pos:column="50">()<pos:position pos:line="24" pos:column="52"/></argument_list></call></expr>)<pos:position pos:line="24" pos:column="53"/></condition><then pos:line="24" pos:column="53"> <block pos:line="24" pos:column="54">{
                <expr_stmt><expr><name><name pos:line="25" pos:column="17">cs<pos:position pos:line="25" pos:column="19"/></name><operator pos:line="25" pos:column="19">-&gt;<pos:position pos:line="25" pos:column="24"/></operator><name pos:line="25" pos:column="21">state<pos:position pos:line="25" pos:column="26"/></name></name> <operator pos:line="25" pos:column="27">=<pos:position pos:line="25" pos:column="28"/></operator> <name pos:line="25" pos:column="29">CONN_STATE_LINGER<pos:position pos:line="25" pos:column="46"/></name></expr>;<pos:position pos:line="25" pos:column="47"/></expr_stmt>
            }<pos:position pos:line="26" pos:column="14"/></block></then>
            <elseif pos:line="27" pos:column="13">else <if pos:line="27" pos:column="18">if <condition pos:line="27" pos:column="21">(<expr><operator pos:line="27" pos:column="22">!<pos:position pos:line="27" pos:column="23"/></operator><name><name pos:line="27" pos:column="23">c<pos:position pos:line="27" pos:column="24"/></name><operator pos:line="27" pos:column="24">-&gt;<pos:position pos:line="27" pos:column="29"/></operator><name pos:line="27" pos:column="26">data_in_input_filters<pos:position pos:line="27" pos:column="47"/></name></name></expr>)<pos:position pos:line="27" pos:column="48"/></condition><then pos:line="27" pos:column="48"> <block pos:line="27" pos:column="49">{
                <expr_stmt><expr><name><name pos:line="28" pos:column="17">cs<pos:position pos:line="28" pos:column="19"/></name><operator pos:line="28" pos:column="19">-&gt;<pos:position pos:line="28" pos:column="24"/></operator><name pos:line="28" pos:column="21">state<pos:position pos:line="28" pos:column="26"/></name></name> <operator pos:line="28" pos:column="27">=<pos:position pos:line="28" pos:column="28"/></operator> <name pos:line="28" pos:column="29">CONN_STATE_CHECK_REQUEST_LINE_READABLE<pos:position pos:line="28" pos:column="67"/></name></expr>;<pos:position pos:line="28" pos:column="68"/></expr_stmt>
            }<pos:position pos:line="29" pos:column="14"/></block></then></if></elseif></if>

            <comment type="block" pos:line="31" pos:column="13">/* else we are pipelining.  Stay in READ_REQUEST_LINE state
             *  and stay in the loop
             */</comment>

            <expr_stmt><expr><call><name pos:line="35" pos:column="13">apr_pool_destroy<pos:position pos:line="35" pos:column="29"/></name><argument_list pos:line="35" pos:column="29">(<argument><expr><name><name pos:line="35" pos:column="30">r<pos:position pos:line="35" pos:column="31"/></name><operator pos:line="35" pos:column="31">-&gt;<pos:position pos:line="35" pos:column="36"/></operator><name pos:line="35" pos:column="33">pool<pos:position pos:line="35" pos:column="37"/></name></name></expr></argument>)<pos:position pos:line="35" pos:column="38"/></argument_list></call></expr>;<pos:position pos:line="35" pos:column="39"/></expr_stmt>
        }<pos:position pos:line="36" pos:column="10"/></block></then>
        <else pos:line="37" pos:column="9">else <block pos:line="37" pos:column="14">{   <comment type="block" pos:line="37" pos:column="18">/* ap_read_request failed - client may have closed */</comment>
            <expr_stmt><expr><name><name pos:line="38" pos:column="13">cs<pos:position pos:line="38" pos:column="15"/></name><operator pos:line="38" pos:column="15">-&gt;<pos:position pos:line="38" pos:column="20"/></operator><name pos:line="38" pos:column="17">state<pos:position pos:line="38" pos:column="22"/></name></name> <operator pos:line="38" pos:column="23">=<pos:position pos:line="38" pos:column="24"/></operator> <name pos:line="38" pos:column="25">CONN_STATE_LINGER<pos:position pos:line="38" pos:column="42"/></name></expr>;<pos:position pos:line="38" pos:column="43"/></expr_stmt>
        }<pos:position pos:line="39" pos:column="10"/></block></else></if>
    }<pos:position pos:line="40" pos:column="6"/></block></while>

    <return pos:line="42" pos:column="5">return <expr><name pos:line="42" pos:column="12">OK<pos:position pos:line="42" pos:column="14"/></name></expr>;<pos:position pos:line="42" pos:column="15"/></return>
}<pos:position pos:line="43" pos:column="2"/></block></function></unit>

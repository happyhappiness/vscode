<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/httpd/gumtree/httpd_repos_function_3073_httpd-2.0.43.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">void<pos:position pos:line="1" pos:column="12"/></name></type> <name pos:line="1" pos:column="13">free_proc_chain<pos:position pos:line="1" pos:column="28"/></name><parameter_list pos:line="1" pos:column="28">(<parameter><decl><type><name><name pos:line="1" pos:column="29">struct<pos:position pos:line="1" pos:column="35"/></name> <name pos:line="1" pos:column="36">process_chain<pos:position pos:line="1" pos:column="49"/></name></name> <modifier pos:line="1" pos:column="50">*<pos:position pos:line="1" pos:column="51"/></modifier></type><name pos:line="1" pos:column="51">procs<pos:position pos:line="1" pos:column="56"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="57"/></parameter_list>
<block pos:line="2" pos:column="1">{
    <comment type="block" pos:line="3" pos:column="5">/* Dispose of the subprocesses we've spawned off in the course of
     * whatever it was we're cleaning up now.  This may involve killing
     * some of them off...
     */</comment>
    <decl_stmt><decl><type><name><name pos:line="7" pos:column="5">struct<pos:position pos:line="7" pos:column="11"/></name> <name pos:line="7" pos:column="12">process_chain<pos:position pos:line="7" pos:column="25"/></name></name> <modifier pos:line="7" pos:column="26">*<pos:position pos:line="7" pos:column="27"/></modifier></type><name pos:line="7" pos:column="27">pc<pos:position pos:line="7" pos:column="29"/></name></decl>;<pos:position pos:line="7" pos:column="30"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="8" pos:column="5">int<pos:position pos:line="8" pos:column="8"/></name></type> <name pos:line="8" pos:column="9">need_timeout<pos:position pos:line="8" pos:column="21"/></name> <init pos:line="8" pos:column="22">= <expr><literal type="number" pos:line="8" pos:column="24">0<pos:position pos:line="8" pos:column="25"/></literal></expr></init></decl>;<pos:position pos:line="8" pos:column="26"/></decl_stmt>

    <if pos:line="10" pos:column="5">if <condition pos:line="10" pos:column="8">(<expr><operator pos:line="10" pos:column="9">!<pos:position pos:line="10" pos:column="10"/></operator><name pos:line="10" pos:column="10">procs<pos:position pos:line="10" pos:column="15"/></name></expr>)<pos:position pos:line="10" pos:column="16"/></condition><then pos:line="10" pos:column="16">
        <block type="pseudo"><return pos:line="11" pos:column="9">return;<pos:position pos:line="11" pos:column="16"/></return></block></then></if> <comment type="block" pos:line="11" pos:column="17">/* No work.  Whew! */</comment>

    <comment type="block" pos:line="13" pos:column="5">/* First, check to see if we need to do the SIGTERM, sleep, SIGKILL
     * dance with any of the processes we're cleaning up.  If we've got
     * any kill-on-sight subprocesses, ditch them now as well, so they
     * don't waste any more cycles doing whatever it is that they shouldn't
     * be doing anymore.
     */</comment>

<cpp:ifndef pos:line="20" pos:column="1">#<cpp:directive pos:line="20" pos:column="2">ifndef<pos:position pos:line="20" pos:column="8"/></cpp:directive> <name pos:line="20" pos:column="9">NEED_WAITPID<pos:position pos:line="20" pos:column="21"/></name></cpp:ifndef>
    <comment type="block" pos:line="21" pos:column="5">/* Pick up all defunct processes */</comment>
    <for pos:line="22" pos:column="5">for <control pos:line="22" pos:column="9">(<init><expr><name pos:line="22" pos:column="10">pc<pos:position pos:line="22" pos:column="12"/></name> <operator pos:line="22" pos:column="13">=<pos:position pos:line="22" pos:column="14"/></operator> <name pos:line="22" pos:column="15">procs<pos:position pos:line="22" pos:column="20"/></name></expr>;<pos:position pos:line="22" pos:column="21"/></init> <condition><expr><name pos:line="22" pos:column="22">pc<pos:position pos:line="22" pos:column="24"/></name></expr>;<pos:position pos:line="22" pos:column="25"/></condition> <incr><expr><name pos:line="22" pos:column="26">pc<pos:position pos:line="22" pos:column="28"/></name> <operator pos:line="22" pos:column="29">=<pos:position pos:line="22" pos:column="30"/></operator> <name><name pos:line="22" pos:column="31">pc<pos:position pos:line="22" pos:column="33"/></name><operator pos:line="22" pos:column="33">-&gt;<pos:position pos:line="22" pos:column="38"/></operator><name pos:line="22" pos:column="35">next<pos:position pos:line="22" pos:column="39"/></name></name></expr></incr>)<pos:position pos:line="22" pos:column="40"/></control> <block pos:line="22" pos:column="41">{
        <if pos:line="23" pos:column="9">if <condition pos:line="23" pos:column="12">(<expr><call><name pos:line="23" pos:column="13">apr_proc_wait<pos:position pos:line="23" pos:column="26"/></name><argument_list pos:line="23" pos:column="26">(<argument><expr><name><name pos:line="23" pos:column="27">pc<pos:position pos:line="23" pos:column="29"/></name><operator pos:line="23" pos:column="29">-&gt;<pos:position pos:line="23" pos:column="34"/></operator><name pos:line="23" pos:column="31">pid<pos:position pos:line="23" pos:column="34"/></name></name></expr></argument>, <argument><expr><name pos:line="23" pos:column="36">NULL<pos:position pos:line="23" pos:column="40"/></name></expr></argument>, <argument><expr><name pos:line="23" pos:column="42">NULL<pos:position pos:line="23" pos:column="46"/></name></expr></argument>, <argument><expr><name pos:line="23" pos:column="48">APR_NOWAIT<pos:position pos:line="23" pos:column="58"/></name></expr></argument>)<pos:position pos:line="23" pos:column="59"/></argument_list></call> <operator pos:line="23" pos:column="60">!=<pos:position pos:line="23" pos:column="62"/></operator> <name pos:line="23" pos:column="63">APR_CHILD_NOTDONE<pos:position pos:line="23" pos:column="80"/></name></expr>)<pos:position pos:line="23" pos:column="81"/></condition><then pos:line="23" pos:column="81">
            <block type="pseudo"><expr_stmt><expr><name><name pos:line="24" pos:column="13">pc<pos:position pos:line="24" pos:column="15"/></name><operator pos:line="24" pos:column="15">-&gt;<pos:position pos:line="24" pos:column="20"/></operator><name pos:line="24" pos:column="17">kill_how<pos:position pos:line="24" pos:column="25"/></name></name> <operator pos:line="24" pos:column="26">=<pos:position pos:line="24" pos:column="27"/></operator> <name pos:line="24" pos:column="28">APR_KILL_NEVER<pos:position pos:line="24" pos:column="42"/></name></expr>;<pos:position pos:line="24" pos:column="43"/></expr_stmt></block></then></if>
    }<pos:position pos:line="25" pos:column="6"/></block></for>
<cpp:endif pos:line="26" pos:column="1">#<cpp:directive pos:line="26" pos:column="2">endif<pos:position pos:line="26" pos:column="7"/></cpp:directive></cpp:endif> <comment type="block" pos:line="26" pos:column="8">/* !defined(NEED_WAITPID) */</comment>

    <for pos:line="28" pos:column="5">for <control pos:line="28" pos:column="9">(<init><expr><name pos:line="28" pos:column="10">pc<pos:position pos:line="28" pos:column="12"/></name> <operator pos:line="28" pos:column="13">=<pos:position pos:line="28" pos:column="14"/></operator> <name pos:line="28" pos:column="15">procs<pos:position pos:line="28" pos:column="20"/></name></expr>;<pos:position pos:line="28" pos:column="21"/></init> <condition><expr><name pos:line="28" pos:column="22">pc<pos:position pos:line="28" pos:column="24"/></name></expr>;<pos:position pos:line="28" pos:column="25"/></condition> <incr><expr><name pos:line="28" pos:column="26">pc<pos:position pos:line="28" pos:column="28"/></name> <operator pos:line="28" pos:column="29">=<pos:position pos:line="28" pos:column="30"/></operator> <name><name pos:line="28" pos:column="31">pc<pos:position pos:line="28" pos:column="33"/></name><operator pos:line="28" pos:column="33">-&gt;<pos:position pos:line="28" pos:column="38"/></operator><name pos:line="28" pos:column="35">next<pos:position pos:line="28" pos:column="39"/></name></name></expr></incr>)<pos:position pos:line="28" pos:column="40"/></control> <block pos:line="28" pos:column="41">{
        <if pos:line="29" pos:column="9">if <condition pos:line="29" pos:column="12">(<expr><operator pos:line="29" pos:column="13">(<pos:position pos:line="29" pos:column="14"/></operator><name><name pos:line="29" pos:column="14">pc<pos:position pos:line="29" pos:column="16"/></name><operator pos:line="29" pos:column="16">-&gt;<pos:position pos:line="29" pos:column="21"/></operator><name pos:line="29" pos:column="18">kill_how<pos:position pos:line="29" pos:column="26"/></name></name> <operator pos:line="29" pos:column="27">==<pos:position pos:line="29" pos:column="29"/></operator> <name pos:line="29" pos:column="30">APR_KILL_AFTER_TIMEOUT<pos:position pos:line="29" pos:column="52"/></name><operator pos:line="29" pos:column="52">)<pos:position pos:line="29" pos:column="53"/></operator>
            <operator pos:line="30" pos:column="13">||<pos:position pos:line="30" pos:column="15"/></operator> <operator pos:line="30" pos:column="16">(<pos:position pos:line="30" pos:column="17"/></operator><name><name pos:line="30" pos:column="17">pc<pos:position pos:line="30" pos:column="19"/></name><operator pos:line="30" pos:column="19">-&gt;<pos:position pos:line="30" pos:column="24"/></operator><name pos:line="30" pos:column="21">kill_how<pos:position pos:line="30" pos:column="29"/></name></name> <operator pos:line="30" pos:column="30">==<pos:position pos:line="30" pos:column="32"/></operator> <name pos:line="30" pos:column="33">APR_KILL_ONLY_ONCE<pos:position pos:line="30" pos:column="51"/></name><operator pos:line="30" pos:column="51">)<pos:position pos:line="30" pos:column="52"/></operator></expr>)<pos:position pos:line="30" pos:column="53"/></condition><then pos:line="30" pos:column="53"> <block pos:line="30" pos:column="54">{
            <comment type="block" pos:line="31" pos:column="13">/*
             * Subprocess may be dead already.  Only need the timeout if not.
             * Note: apr_proc_kill on Windows is TerminateProcess(), which is
             * similar to a SIGKILL, so always give the process a timeout
             * under Windows before killing it.
             */</comment>
<cpp:ifdef pos:line="37" pos:column="1">#<cpp:directive pos:line="37" pos:column="2">ifdef<pos:position pos:line="37" pos:column="7"/></cpp:directive> <name pos:line="37" pos:column="8">WIN32<pos:position pos:line="37" pos:column="13"/></name></cpp:ifdef>
            <expr_stmt><expr><name pos:line="38" pos:column="13">need_timeout<pos:position pos:line="38" pos:column="25"/></name> <operator pos:line="38" pos:column="26">=<pos:position pos:line="38" pos:column="27"/></operator> <literal type="number" pos:line="38" pos:column="28">1<pos:position pos:line="38" pos:column="29"/></literal></expr>;<pos:position pos:line="38" pos:column="30"/></expr_stmt>
<cpp:else pos:line="39" pos:column="1">#<cpp:directive pos:line="39" pos:column="2">else<pos:position pos:line="39" pos:column="6"/></cpp:directive></cpp:else> <comment type="block" pos:line="39" pos:column="7">/* !defined(WIN32) */</comment>
            <if pos:line="40" pos:column="13">if <condition pos:line="40" pos:column="16">(<expr><call><name pos:line="40" pos:column="17">apr_proc_kill<pos:position pos:line="40" pos:column="30"/></name><argument_list pos:line="40" pos:column="30">(<argument><expr><name><name pos:line="40" pos:column="31">pc<pos:position pos:line="40" pos:column="33"/></name><operator pos:line="40" pos:column="33">-&gt;<pos:position pos:line="40" pos:column="38"/></operator><name pos:line="40" pos:column="35">pid<pos:position pos:line="40" pos:column="38"/></name></name></expr></argument>, <argument><expr><name pos:line="40" pos:column="40">SIGTERM<pos:position pos:line="40" pos:column="47"/></name></expr></argument>)<pos:position pos:line="40" pos:column="48"/></argument_list></call> <operator pos:line="40" pos:column="49">==<pos:position pos:line="40" pos:column="51"/></operator> <name pos:line="40" pos:column="52">APR_SUCCESS<pos:position pos:line="40" pos:column="63"/></name></expr>)<pos:position pos:line="40" pos:column="64"/></condition><then pos:line="40" pos:column="64">
                <block type="pseudo"><expr_stmt><expr><name pos:line="41" pos:column="17">need_timeout<pos:position pos:line="41" pos:column="29"/></name> <operator pos:line="41" pos:column="30">=<pos:position pos:line="41" pos:column="31"/></operator> <literal type="number" pos:line="41" pos:column="32">1<pos:position pos:line="41" pos:column="33"/></literal></expr>;<pos:position pos:line="41" pos:column="34"/></expr_stmt></block></then></if>
<cpp:endif pos:line="42" pos:column="1">#<cpp:directive pos:line="42" pos:column="2">endif<pos:position pos:line="42" pos:column="7"/></cpp:directive></cpp:endif> <comment type="block" pos:line="42" pos:column="8">/* !defined(WIN32) */</comment>
        }<pos:position pos:line="43" pos:column="10"/></block></then>
        <elseif pos:line="44" pos:column="9">else <if pos:line="44" pos:column="14">if <condition pos:line="44" pos:column="17">(<expr><name><name pos:line="44" pos:column="18">pc<pos:position pos:line="44" pos:column="20"/></name><operator pos:line="44" pos:column="20">-&gt;<pos:position pos:line="44" pos:column="25"/></operator><name pos:line="44" pos:column="22">kill_how<pos:position pos:line="44" pos:column="30"/></name></name> <operator pos:line="44" pos:column="31">==<pos:position pos:line="44" pos:column="33"/></operator> <name pos:line="44" pos:column="34">APR_KILL_ALWAYS<pos:position pos:line="44" pos:column="49"/></name></expr>)<pos:position pos:line="44" pos:column="50"/></condition><then pos:line="44" pos:column="50"> <block pos:line="44" pos:column="51">{
            <expr_stmt><expr><call><name pos:line="45" pos:column="13">apr_proc_kill<pos:position pos:line="45" pos:column="26"/></name><argument_list pos:line="45" pos:column="26">(<argument><expr><name><name pos:line="45" pos:column="27">pc<pos:position pos:line="45" pos:column="29"/></name><operator pos:line="45" pos:column="29">-&gt;<pos:position pos:line="45" pos:column="34"/></operator><name pos:line="45" pos:column="31">pid<pos:position pos:line="45" pos:column="34"/></name></name></expr></argument>, <argument><expr><name pos:line="45" pos:column="36">SIGKILL<pos:position pos:line="45" pos:column="43"/></name></expr></argument>)<pos:position pos:line="45" pos:column="44"/></argument_list></call></expr>;<pos:position pos:line="45" pos:column="45"/></expr_stmt>
        }<pos:position pos:line="46" pos:column="10"/></block></then></if></elseif></if>
    }<pos:position pos:line="47" pos:column="6"/></block></for>

    <comment type="block" pos:line="49" pos:column="5">/* Sleep only if we have to... */</comment>
    <if pos:line="50" pos:column="5">if <condition pos:line="50" pos:column="8">(<expr><name pos:line="50" pos:column="9">need_timeout<pos:position pos:line="50" pos:column="21"/></name></expr>)<pos:position pos:line="50" pos:column="22"/></condition><then pos:line="50" pos:column="22">
        <block type="pseudo"><expr_stmt><expr><call><name pos:line="51" pos:column="9">apr_sleep<pos:position pos:line="51" pos:column="18"/></name><argument_list pos:line="51" pos:column="18">(<argument><expr><call><name pos:line="51" pos:column="19">apr_time_from_sec<pos:position pos:line="51" pos:column="36"/></name><argument_list pos:line="51" pos:column="36">(<argument><expr><literal type="number" pos:line="51" pos:column="37">3<pos:position pos:line="51" pos:column="38"/></literal></expr></argument>)<pos:position pos:line="51" pos:column="39"/></argument_list></call></expr></argument>)<pos:position pos:line="51" pos:column="40"/></argument_list></call></expr>;<pos:position pos:line="51" pos:column="41"/></expr_stmt></block></then></if>

    <comment type="block" pos:line="53" pos:column="5">/* OK, the scripts we just timed out for have had a chance to clean up
     * --- now, just get rid of them, and also clean up the system accounting
     * goop...
     */</comment>
    <for pos:line="57" pos:column="5">for <control pos:line="57" pos:column="9">(<init><expr><name pos:line="57" pos:column="10">pc<pos:position pos:line="57" pos:column="12"/></name> <operator pos:line="57" pos:column="13">=<pos:position pos:line="57" pos:column="14"/></operator> <name pos:line="57" pos:column="15">procs<pos:position pos:line="57" pos:column="20"/></name></expr>;<pos:position pos:line="57" pos:column="21"/></init> <condition><expr><name pos:line="57" pos:column="22">pc<pos:position pos:line="57" pos:column="24"/></name></expr>;<pos:position pos:line="57" pos:column="25"/></condition> <incr><expr><name pos:line="57" pos:column="26">pc<pos:position pos:line="57" pos:column="28"/></name> <operator pos:line="57" pos:column="29">=<pos:position pos:line="57" pos:column="30"/></operator> <name><name pos:line="57" pos:column="31">pc<pos:position pos:line="57" pos:column="33"/></name><operator pos:line="57" pos:column="33">-&gt;<pos:position pos:line="57" pos:column="38"/></operator><name pos:line="57" pos:column="35">next<pos:position pos:line="57" pos:column="39"/></name></name></expr></incr>)<pos:position pos:line="57" pos:column="40"/></control> <block pos:line="57" pos:column="41">{
        <if pos:line="58" pos:column="9">if <condition pos:line="58" pos:column="12">(<expr><name><name pos:line="58" pos:column="13">pc<pos:position pos:line="58" pos:column="15"/></name><operator pos:line="58" pos:column="15">-&gt;<pos:position pos:line="58" pos:column="20"/></operator><name pos:line="58" pos:column="17">kill_how<pos:position pos:line="58" pos:column="25"/></name></name> <operator pos:line="58" pos:column="26">==<pos:position pos:line="58" pos:column="28"/></operator> <name pos:line="58" pos:column="29">APR_KILL_AFTER_TIMEOUT<pos:position pos:line="58" pos:column="51"/></name></expr>)<pos:position pos:line="58" pos:column="52"/></condition><then pos:line="58" pos:column="52">
            <block type="pseudo"><expr_stmt><expr><call><name pos:line="59" pos:column="13">apr_proc_kill<pos:position pos:line="59" pos:column="26"/></name><argument_list pos:line="59" pos:column="26">(<argument><expr><name><name pos:line="59" pos:column="27">pc<pos:position pos:line="59" pos:column="29"/></name><operator pos:line="59" pos:column="29">-&gt;<pos:position pos:line="59" pos:column="34"/></operator><name pos:line="59" pos:column="31">pid<pos:position pos:line="59" pos:column="34"/></name></name></expr></argument>, <argument><expr><name pos:line="59" pos:column="36">SIGKILL<pos:position pos:line="59" pos:column="43"/></name></expr></argument>)<pos:position pos:line="59" pos:column="44"/></argument_list></call></expr>;<pos:position pos:line="59" pos:column="45"/></expr_stmt></block></then></if>
    }<pos:position pos:line="60" pos:column="6"/></block></for>

    <comment type="block" pos:line="62" pos:column="5">/* Now wait for all the signaled processes to die */</comment>
    <for pos:line="63" pos:column="5">for <control pos:line="63" pos:column="9">(<init><expr><name pos:line="63" pos:column="10">pc<pos:position pos:line="63" pos:column="12"/></name> <operator pos:line="63" pos:column="13">=<pos:position pos:line="63" pos:column="14"/></operator> <name pos:line="63" pos:column="15">procs<pos:position pos:line="63" pos:column="20"/></name></expr>;<pos:position pos:line="63" pos:column="21"/></init> <condition><expr><name pos:line="63" pos:column="22">pc<pos:position pos:line="63" pos:column="24"/></name></expr>;<pos:position pos:line="63" pos:column="25"/></condition> <incr><expr><name pos:line="63" pos:column="26">pc<pos:position pos:line="63" pos:column="28"/></name> <operator pos:line="63" pos:column="29">=<pos:position pos:line="63" pos:column="30"/></operator> <name><name pos:line="63" pos:column="31">pc<pos:position pos:line="63" pos:column="33"/></name><operator pos:line="63" pos:column="33">-&gt;<pos:position pos:line="63" pos:column="38"/></operator><name pos:line="63" pos:column="35">next<pos:position pos:line="63" pos:column="39"/></name></name></expr></incr>)<pos:position pos:line="63" pos:column="40"/></control> <block pos:line="63" pos:column="41">{
        <if pos:line="64" pos:column="9">if <condition pos:line="64" pos:column="12">(<expr><name><name pos:line="64" pos:column="13">pc<pos:position pos:line="64" pos:column="15"/></name><operator pos:line="64" pos:column="15">-&gt;<pos:position pos:line="64" pos:column="20"/></operator><name pos:line="64" pos:column="17">kill_how<pos:position pos:line="64" pos:column="25"/></name></name> <operator pos:line="64" pos:column="26">!=<pos:position pos:line="64" pos:column="28"/></operator> <name pos:line="64" pos:column="29">APR_KILL_NEVER<pos:position pos:line="64" pos:column="43"/></name></expr>)<pos:position pos:line="64" pos:column="44"/></condition><then pos:line="64" pos:column="44">
            <block type="pseudo"><expr_stmt><expr><operator pos:line="65" pos:column="13">(<pos:position pos:line="65" pos:column="14"/></operator><name pos:line="65" pos:column="14">void<pos:position pos:line="65" pos:column="18"/></name><operator pos:line="65" pos:column="18">)<pos:position pos:line="65" pos:column="19"/></operator><call><name pos:line="65" pos:column="19">apr_proc_wait<pos:position pos:line="65" pos:column="32"/></name><argument_list pos:line="65" pos:column="32">(<argument><expr><name><name pos:line="65" pos:column="33">pc<pos:position pos:line="65" pos:column="35"/></name><operator pos:line="65" pos:column="35">-&gt;<pos:position pos:line="65" pos:column="40"/></operator><name pos:line="65" pos:column="37">pid<pos:position pos:line="65" pos:column="40"/></name></name></expr></argument>, <argument><expr><name pos:line="65" pos:column="42">NULL<pos:position pos:line="65" pos:column="46"/></name></expr></argument>, <argument><expr><name pos:line="65" pos:column="48">NULL<pos:position pos:line="65" pos:column="52"/></name></expr></argument>, <argument><expr><name pos:line="65" pos:column="54">APR_WAIT<pos:position pos:line="65" pos:column="62"/></name></expr></argument>)<pos:position pos:line="65" pos:column="63"/></argument_list></call></expr>;<pos:position pos:line="65" pos:column="64"/></expr_stmt></block></then></if>
    }<pos:position pos:line="66" pos:column="6"/></block></for>

<cpp:ifdef pos:line="68" pos:column="1">#<cpp:directive pos:line="68" pos:column="2">ifdef<pos:position pos:line="68" pos:column="7"/></cpp:directive> <name pos:line="68" pos:column="8">WIN32<pos:position pos:line="68" pos:column="13"/></name></cpp:ifdef>
    <comment type="block" pos:line="69" pos:column="5">/*
     * XXX: Do we need an APR function to clean-up a proc_t?
     * Well ... yeah ... but we can't since it's scope is ill defined.
     * We can't dismiss the handle until the apr_proc_wait above is
     * finished with the proc_t.
     */</comment>
    <block pos:line="75" pos:column="5">{
        <for pos:line="76" pos:column="9">for <control pos:line="76" pos:column="13">(<init><expr><name pos:line="76" pos:column="14">pc<pos:position pos:line="76" pos:column="16"/></name> <operator pos:line="76" pos:column="17">=<pos:position pos:line="76" pos:column="18"/></operator> <name pos:line="76" pos:column="19">procs<pos:position pos:line="76" pos:column="24"/></name></expr>;<pos:position pos:line="76" pos:column="25"/></init> <condition><expr><name pos:line="76" pos:column="26">pc<pos:position pos:line="76" pos:column="28"/></name></expr>;<pos:position pos:line="76" pos:column="29"/></condition> <incr><expr><name pos:line="76" pos:column="30">pc<pos:position pos:line="76" pos:column="32"/></name> <operator pos:line="76" pos:column="33">=<pos:position pos:line="76" pos:column="34"/></operator> <name><name pos:line="76" pos:column="35">pc<pos:position pos:line="76" pos:column="37"/></name><operator pos:line="76" pos:column="37">-&gt;<pos:position pos:line="76" pos:column="42"/></operator><name pos:line="76" pos:column="39">next<pos:position pos:line="76" pos:column="43"/></name></name></expr></incr>)<pos:position pos:line="76" pos:column="44"/></control> <block pos:line="76" pos:column="45">{
            <if pos:line="77" pos:column="13">if <condition pos:line="77" pos:column="16">(<expr><name><name pos:line="77" pos:column="17">pc<pos:position pos:line="77" pos:column="19"/></name><operator pos:line="77" pos:column="19">-&gt;<pos:position pos:line="77" pos:column="24"/></operator><name pos:line="77" pos:column="21">pid<pos:position pos:line="77" pos:column="24"/></name><operator pos:line="77" pos:column="24">-&gt;<pos:position pos:line="77" pos:column="29"/></operator><name pos:line="77" pos:column="26">hproc<pos:position pos:line="77" pos:column="31"/></name></name></expr>)<pos:position pos:line="77" pos:column="32"/></condition><then pos:line="77" pos:column="32"> <block pos:line="77" pos:column="33">{
                <expr_stmt><expr><call><name pos:line="78" pos:column="17">CloseHandle<pos:position pos:line="78" pos:column="28"/></name><argument_list pos:line="78" pos:column="28">(<argument><expr><name><name pos:line="78" pos:column="29">pc<pos:position pos:line="78" pos:column="31"/></name><operator pos:line="78" pos:column="31">-&gt;<pos:position pos:line="78" pos:column="36"/></operator><name pos:line="78" pos:column="33">pid<pos:position pos:line="78" pos:column="36"/></name><operator pos:line="78" pos:column="36">-&gt;<pos:position pos:line="78" pos:column="41"/></operator><name pos:line="78" pos:column="38">hproc<pos:position pos:line="78" pos:column="43"/></name></name></expr></argument>)<pos:position pos:line="78" pos:column="44"/></argument_list></call></expr>;<pos:position pos:line="78" pos:column="45"/></expr_stmt>
                <expr_stmt><expr><name><name pos:line="79" pos:column="17">pc<pos:position pos:line="79" pos:column="19"/></name><operator pos:line="79" pos:column="19">-&gt;<pos:position pos:line="79" pos:column="24"/></operator><name pos:line="79" pos:column="21">pid<pos:position pos:line="79" pos:column="24"/></name><operator pos:line="79" pos:column="24">-&gt;<pos:position pos:line="79" pos:column="29"/></operator><name pos:line="79" pos:column="26">hproc<pos:position pos:line="79" pos:column="31"/></name></name> <operator pos:line="79" pos:column="32">=<pos:position pos:line="79" pos:column="33"/></operator> <name pos:line="79" pos:column="34">NULL<pos:position pos:line="79" pos:column="38"/></name></expr>;<pos:position pos:line="79" pos:column="39"/></expr_stmt>
            }<pos:position pos:line="80" pos:column="14"/></block></then></if>
        }<pos:position pos:line="81" pos:column="10"/></block></for>
    }<pos:position pos:line="82" pos:column="6"/></block>
<cpp:endif pos:line="83" pos:column="1">#<cpp:directive pos:line="83" pos:column="2">endif<pos:position pos:line="83" pos:column="7"/></cpp:directive></cpp:endif> <comment type="block" pos:line="83" pos:column="8">/* defined(WIN32) */</comment>
}<pos:position pos:line="84" pos:column="2"/></block></function></unit>

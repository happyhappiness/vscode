<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/httpd/gumtree/httpd_function_6676.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">void<pos:position pos:line="1" pos:column="5"/></name></type> <name pos:line="1" pos:column="6">h2_task_register_hooks<pos:position pos:line="1" pos:column="28"/></name><parameter_list pos:line="1" pos:column="28">(<parameter><decl><type><name pos:line="1" pos:column="29">void<pos:position pos:line="1" pos:column="33"/></name></type></decl></parameter>)<pos:position pos:line="1" pos:column="34"/></parameter_list>
<block pos:line="2" pos:column="1">{
    <comment type="block" pos:line="3" pos:column="5">/* This hook runs on new connections before mod_ssl has a say.
     * Its purpose is to prevent mod_ssl from touching our pseudo-connections
     * for streams.
     */</comment>
    <expr_stmt><expr><call><name pos:line="7" pos:column="5">ap_hook_pre_connection<pos:position pos:line="7" pos:column="27"/></name><argument_list pos:line="7" pos:column="27">(<argument><expr><name pos:line="7" pos:column="28">h2_task_pre_conn<pos:position pos:line="7" pos:column="44"/></name></expr></argument>,
                           <argument><expr><name pos:line="8" pos:column="28">NULL<pos:position pos:line="8" pos:column="32"/></name></expr></argument>, <argument><expr><name pos:line="8" pos:column="34">mod_ssl<pos:position pos:line="8" pos:column="41"/></name></expr></argument>, <argument><expr><name pos:line="8" pos:column="43">APR_HOOK_FIRST<pos:position pos:line="8" pos:column="57"/></name></expr></argument>)<pos:position pos:line="8" pos:column="58"/></argument_list></call></expr>;<pos:position pos:line="8" pos:column="59"/></expr_stmt>
    <comment type="block" pos:line="9" pos:column="5">/* When the connection processing actually starts, we might 
     * take over, if the connection is for a task.
     */</comment>
    <expr_stmt><expr><call><name pos:line="12" pos:column="5">ap_hook_process_connection<pos:position pos:line="12" pos:column="31"/></name><argument_list pos:line="12" pos:column="31">(<argument><expr><name pos:line="12" pos:column="32">h2_task_process_conn<pos:position pos:line="12" pos:column="52"/></name></expr></argument>, 
                               <argument><expr><name pos:line="13" pos:column="32">NULL<pos:position pos:line="13" pos:column="36"/></name></expr></argument>, <argument><expr><name pos:line="13" pos:column="38">NULL<pos:position pos:line="13" pos:column="42"/></name></expr></argument>, <argument><expr><name pos:line="13" pos:column="44">APR_HOOK_FIRST<pos:position pos:line="13" pos:column="58"/></name></expr></argument>)<pos:position pos:line="13" pos:column="59"/></argument_list></call></expr>;<pos:position pos:line="13" pos:column="60"/></expr_stmt>

    <expr_stmt><expr><call><name pos:line="15" pos:column="5">ap_register_output_filter<pos:position pos:line="15" pos:column="30"/></name><argument_list pos:line="15" pos:column="30">(<argument><expr><literal type="string" pos:line="15" pos:column="31">"H2_RESPONSE"<pos:position pos:line="15" pos:column="44"/></literal></expr></argument>, <argument><expr><name pos:line="15" pos:column="46">h2_response_output_filter<pos:position pos:line="15" pos:column="71"/></name></expr></argument>,
                              <argument><expr><name pos:line="16" pos:column="31">NULL<pos:position pos:line="16" pos:column="35"/></name></expr></argument>, <argument><expr><name pos:line="16" pos:column="37">AP_FTYPE_PROTOCOL<pos:position pos:line="16" pos:column="54"/></name></expr></argument>)<pos:position pos:line="16" pos:column="55"/></argument_list></call></expr>;<pos:position pos:line="16" pos:column="56"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="17" pos:column="5">ap_register_input_filter<pos:position pos:line="17" pos:column="29"/></name><argument_list pos:line="17" pos:column="29">(<argument><expr><literal type="string" pos:line="17" pos:column="30">"H2_TO_H1"<pos:position pos:line="17" pos:column="40"/></literal></expr></argument>, <argument><expr><name pos:line="17" pos:column="42">h2_filter_stream_input<pos:position pos:line="17" pos:column="64"/></name></expr></argument>,
                             <argument><expr><name pos:line="18" pos:column="30">NULL<pos:position pos:line="18" pos:column="34"/></name></expr></argument>, <argument><expr><name pos:line="18" pos:column="36">AP_FTYPE_NETWORK<pos:position pos:line="18" pos:column="52"/></name></expr></argument>)<pos:position pos:line="18" pos:column="53"/></argument_list></call></expr>;<pos:position pos:line="18" pos:column="54"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="19" pos:column="5">ap_register_output_filter<pos:position pos:line="19" pos:column="30"/></name><argument_list pos:line="19" pos:column="30">(<argument><expr><literal type="string" pos:line="19" pos:column="31">"H1_TO_H2"<pos:position pos:line="19" pos:column="41"/></literal></expr></argument>, <argument><expr><name pos:line="19" pos:column="43">h2_filter_stream_output<pos:position pos:line="19" pos:column="66"/></name></expr></argument>,
                              <argument><expr><name pos:line="20" pos:column="31">NULL<pos:position pos:line="20" pos:column="35"/></name></expr></argument>, <argument><expr><name pos:line="20" pos:column="37">AP_FTYPE_NETWORK<pos:position pos:line="20" pos:column="53"/></name></expr></argument>)<pos:position pos:line="20" pos:column="54"/></argument_list></call></expr>;<pos:position pos:line="20" pos:column="55"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="21" pos:column="5">ap_register_output_filter<pos:position pos:line="21" pos:column="30"/></name><argument_list pos:line="21" pos:column="30">(<argument><expr><literal type="string" pos:line="21" pos:column="31">"H1_TO_H2_RESP"<pos:position pos:line="21" pos:column="46"/></literal></expr></argument>, <argument><expr><name pos:line="21" pos:column="48">h2_filter_read_response<pos:position pos:line="21" pos:column="71"/></name></expr></argument>,
                              <argument><expr><name pos:line="22" pos:column="31">NULL<pos:position pos:line="22" pos:column="35"/></name></expr></argument>, <argument><expr><name pos:line="22" pos:column="37">AP_FTYPE_PROTOCOL<pos:position pos:line="22" pos:column="54"/></name></expr></argument>)<pos:position pos:line="22" pos:column="55"/></argument_list></call></expr>;<pos:position pos:line="22" pos:column="56"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="23" pos:column="5">ap_register_output_filter<pos:position pos:line="23" pos:column="30"/></name><argument_list pos:line="23" pos:column="30">(<argument><expr><literal type="string" pos:line="23" pos:column="31">"H2_TRAILERS"<pos:position pos:line="23" pos:column="44"/></literal></expr></argument>, <argument><expr><name pos:line="23" pos:column="46">h2_response_trailers_filter<pos:position pos:line="23" pos:column="73"/></name></expr></argument>,
                              <argument><expr><name pos:line="24" pos:column="31">NULL<pos:position pos:line="24" pos:column="35"/></name></expr></argument>, <argument><expr><name pos:line="24" pos:column="37">AP_FTYPE_PROTOCOL<pos:position pos:line="24" pos:column="54"/></name></expr></argument>)<pos:position pos:line="24" pos:column="55"/></argument_list></call></expr>;<pos:position pos:line="24" pos:column="56"/></expr_stmt>
}<pos:position pos:line="25" pos:column="2"/></block></function></unit>

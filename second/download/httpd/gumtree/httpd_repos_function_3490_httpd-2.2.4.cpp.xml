<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/httpd/gumtree/httpd_repos_function_3490_httpd-2.2.4.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">void<pos:position pos:line="1" pos:column="12"/></name> <modifier pos:line="1" pos:column="13">*<pos:position pos:line="1" pos:column="14"/></modifier></type><name pos:line="1" pos:column="14">pool_alloc<pos:position pos:line="1" pos:column="24"/></name><parameter_list pos:line="1" pos:column="24">(<parameter><decl><type><name pos:line="1" pos:column="25">apr_pool_t<pos:position pos:line="1" pos:column="35"/></name> <modifier pos:line="1" pos:column="36">*<pos:position pos:line="1" pos:column="37"/></modifier></type><name pos:line="1" pos:column="37">pool<pos:position pos:line="1" pos:column="41"/></name></decl></parameter>, <parameter><decl><type><name pos:line="1" pos:column="43">apr_size_t<pos:position pos:line="1" pos:column="53"/></name></type> <name pos:line="1" pos:column="54">size<pos:position pos:line="1" pos:column="58"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="59"/></parameter_list>
<block pos:line="2" pos:column="1">{
    <decl_stmt><decl><type><name pos:line="3" pos:column="5">debug_node_t<pos:position pos:line="3" pos:column="17"/></name> <modifier pos:line="3" pos:column="18">*<pos:position pos:line="3" pos:column="19"/></modifier></type><name pos:line="3" pos:column="19">node<pos:position pos:line="3" pos:column="23"/></name></decl>;<pos:position pos:line="3" pos:column="24"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="4" pos:column="5">void<pos:position pos:line="4" pos:column="9"/></name> <modifier pos:line="4" pos:column="10">*<pos:position pos:line="4" pos:column="11"/></modifier></type><name pos:line="4" pos:column="11">mem<pos:position pos:line="4" pos:column="14"/></name></decl>;<pos:position pos:line="4" pos:column="15"/></decl_stmt>

    <if pos:line="6" pos:column="5">if <condition pos:line="6" pos:column="8">(<expr><operator pos:line="6" pos:column="9">(<pos:position pos:line="6" pos:column="10"/></operator><name pos:line="6" pos:column="10">mem<pos:position pos:line="6" pos:column="13"/></name> <operator pos:line="6" pos:column="14">=<pos:position pos:line="6" pos:column="15"/></operator> <call><name pos:line="6" pos:column="16">malloc<pos:position pos:line="6" pos:column="22"/></name><argument_list pos:line="6" pos:column="22">(<argument><expr><name pos:line="6" pos:column="23">size<pos:position pos:line="6" pos:column="27"/></name></expr></argument>)<pos:position pos:line="6" pos:column="28"/></argument_list></call><operator pos:line="6" pos:column="28">)<pos:position pos:line="6" pos:column="29"/></operator> <operator pos:line="6" pos:column="30">==<pos:position pos:line="6" pos:column="32"/></operator> <name pos:line="6" pos:column="33">NULL<pos:position pos:line="6" pos:column="37"/></name></expr>)<pos:position pos:line="6" pos:column="38"/></condition><then pos:line="6" pos:column="38"> <block pos:line="6" pos:column="39">{
        <if pos:line="7" pos:column="9">if <condition pos:line="7" pos:column="12">(<expr><name><name pos:line="7" pos:column="13">pool<pos:position pos:line="7" pos:column="17"/></name><operator pos:line="7" pos:column="17">-&gt;<pos:position pos:line="7" pos:column="22"/></operator><name pos:line="7" pos:column="19">abort_fn<pos:position pos:line="7" pos:column="27"/></name></name></expr>)<pos:position pos:line="7" pos:column="28"/></condition><then pos:line="7" pos:column="28">
            <block type="pseudo"><expr_stmt><expr><call><name><name pos:line="8" pos:column="13">pool<pos:position pos:line="8" pos:column="17"/></name><operator pos:line="8" pos:column="17">-&gt;<pos:position pos:line="8" pos:column="22"/></operator><name pos:line="8" pos:column="19">abort_fn<pos:position pos:line="8" pos:column="27"/></name></name><argument_list pos:line="8" pos:column="27">(<argument><expr><name pos:line="8" pos:column="28">APR_ENOMEM<pos:position pos:line="8" pos:column="38"/></name></expr></argument>)<pos:position pos:line="8" pos:column="39"/></argument_list></call></expr>;<pos:position pos:line="8" pos:column="40"/></expr_stmt></block></then></if>

        <return pos:line="10" pos:column="9">return <expr><name pos:line="10" pos:column="16">NULL<pos:position pos:line="10" pos:column="20"/></name></expr>;<pos:position pos:line="10" pos:column="21"/></return>
    }<pos:position pos:line="11" pos:column="6"/></block></then></if>

    <expr_stmt><expr><name pos:line="13" pos:column="5">node<pos:position pos:line="13" pos:column="9"/></name> <operator pos:line="13" pos:column="10">=<pos:position pos:line="13" pos:column="11"/></operator> <name><name pos:line="13" pos:column="12">pool<pos:position pos:line="13" pos:column="16"/></name><operator pos:line="13" pos:column="16">-&gt;<pos:position pos:line="13" pos:column="21"/></operator><name pos:line="13" pos:column="18">nodes<pos:position pos:line="13" pos:column="23"/></name></name></expr>;<pos:position pos:line="13" pos:column="24"/></expr_stmt>
    <if pos:line="14" pos:column="5">if <condition pos:line="14" pos:column="8">(<expr><name pos:line="14" pos:column="9">node<pos:position pos:line="14" pos:column="13"/></name> <operator pos:line="14" pos:column="14">==<pos:position pos:line="14" pos:column="16"/></operator> <name pos:line="14" pos:column="17">NULL<pos:position pos:line="14" pos:column="21"/></name> <operator pos:line="14" pos:column="22">||<pos:position pos:line="14" pos:column="24"/></operator> <name><name pos:line="14" pos:column="25">node<pos:position pos:line="14" pos:column="29"/></name><operator pos:line="14" pos:column="29">-&gt;<pos:position pos:line="14" pos:column="34"/></operator><name pos:line="14" pos:column="31">index<pos:position pos:line="14" pos:column="36"/></name></name> <operator pos:line="14" pos:column="37">==<pos:position pos:line="14" pos:column="39"/></operator> <literal type="number" pos:line="14" pos:column="40">64<pos:position pos:line="14" pos:column="42"/></literal></expr>)<pos:position pos:line="14" pos:column="43"/></condition><then pos:line="14" pos:column="43"> <block pos:line="14" pos:column="44">{
        <if pos:line="15" pos:column="9">if <condition pos:line="15" pos:column="12">(<expr><operator pos:line="15" pos:column="13">(<pos:position pos:line="15" pos:column="14"/></operator><name pos:line="15" pos:column="14">node<pos:position pos:line="15" pos:column="18"/></name> <operator pos:line="15" pos:column="19">=<pos:position pos:line="15" pos:column="20"/></operator> <call><name pos:line="15" pos:column="21">malloc<pos:position pos:line="15" pos:column="27"/></name><argument_list pos:line="15" pos:column="27">(<argument><expr><name pos:line="15" pos:column="28">SIZEOF_DEBUG_NODE_T<pos:position pos:line="15" pos:column="47"/></name></expr></argument>)<pos:position pos:line="15" pos:column="48"/></argument_list></call><operator pos:line="15" pos:column="48">)<pos:position pos:line="15" pos:column="49"/></operator> <operator pos:line="15" pos:column="50">==<pos:position pos:line="15" pos:column="52"/></operator> <name pos:line="15" pos:column="53">NULL<pos:position pos:line="15" pos:column="57"/></name></expr>)<pos:position pos:line="15" pos:column="58"/></condition><then pos:line="15" pos:column="58"> <block pos:line="15" pos:column="59">{
            <if pos:line="16" pos:column="13">if <condition pos:line="16" pos:column="16">(<expr><name><name pos:line="16" pos:column="17">pool<pos:position pos:line="16" pos:column="21"/></name><operator pos:line="16" pos:column="21">-&gt;<pos:position pos:line="16" pos:column="26"/></operator><name pos:line="16" pos:column="23">abort_fn<pos:position pos:line="16" pos:column="31"/></name></name></expr>)<pos:position pos:line="16" pos:column="32"/></condition><then pos:line="16" pos:column="32">
                <block type="pseudo"><expr_stmt><expr><call><name><name pos:line="17" pos:column="17">pool<pos:position pos:line="17" pos:column="21"/></name><operator pos:line="17" pos:column="21">-&gt;<pos:position pos:line="17" pos:column="26"/></operator><name pos:line="17" pos:column="23">abort_fn<pos:position pos:line="17" pos:column="31"/></name></name><argument_list pos:line="17" pos:column="31">(<argument><expr><name pos:line="17" pos:column="32">APR_ENOMEM<pos:position pos:line="17" pos:column="42"/></name></expr></argument>)<pos:position pos:line="17" pos:column="43"/></argument_list></call></expr>;<pos:position pos:line="17" pos:column="44"/></expr_stmt></block></then></if>

            <return pos:line="19" pos:column="13">return <expr><name pos:line="19" pos:column="20">NULL<pos:position pos:line="19" pos:column="24"/></name></expr>;<pos:position pos:line="19" pos:column="25"/></return>
        }<pos:position pos:line="20" pos:column="10"/></block></then></if>

        <expr_stmt><expr><call><name pos:line="22" pos:column="9">memset<pos:position pos:line="22" pos:column="15"/></name><argument_list pos:line="22" pos:column="15">(<argument><expr><name pos:line="22" pos:column="16">node<pos:position pos:line="22" pos:column="20"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="22" pos:column="22">0<pos:position pos:line="22" pos:column="23"/></literal></expr></argument>, <argument><expr><name pos:line="22" pos:column="25">SIZEOF_DEBUG_NODE_T<pos:position pos:line="22" pos:column="44"/></name></expr></argument>)<pos:position pos:line="22" pos:column="45"/></argument_list></call></expr>;<pos:position pos:line="22" pos:column="46"/></expr_stmt>

        <expr_stmt><expr><name><name pos:line="24" pos:column="9">node<pos:position pos:line="24" pos:column="13"/></name><operator pos:line="24" pos:column="13">-&gt;<pos:position pos:line="24" pos:column="18"/></operator><name pos:line="24" pos:column="15">next<pos:position pos:line="24" pos:column="19"/></name></name> <operator pos:line="24" pos:column="20">=<pos:position pos:line="24" pos:column="21"/></operator> <name><name pos:line="24" pos:column="22">pool<pos:position pos:line="24" pos:column="26"/></name><operator pos:line="24" pos:column="26">-&gt;<pos:position pos:line="24" pos:column="31"/></operator><name pos:line="24" pos:column="28">nodes<pos:position pos:line="24" pos:column="33"/></name></name></expr>;<pos:position pos:line="24" pos:column="34"/></expr_stmt>
        <expr_stmt><expr><name><name pos:line="25" pos:column="9">pool<pos:position pos:line="25" pos:column="13"/></name><operator pos:line="25" pos:column="13">-&gt;<pos:position pos:line="25" pos:column="18"/></operator><name pos:line="25" pos:column="15">nodes<pos:position pos:line="25" pos:column="20"/></name></name> <operator pos:line="25" pos:column="21">=<pos:position pos:line="25" pos:column="22"/></operator> <name pos:line="25" pos:column="23">node<pos:position pos:line="25" pos:column="27"/></name></expr>;<pos:position pos:line="25" pos:column="28"/></expr_stmt>
        <expr_stmt><expr><name><name pos:line="26" pos:column="9">node<pos:position pos:line="26" pos:column="13"/></name><operator pos:line="26" pos:column="13">-&gt;<pos:position pos:line="26" pos:column="18"/></operator><name pos:line="26" pos:column="15">index<pos:position pos:line="26" pos:column="20"/></name></name> <operator pos:line="26" pos:column="21">=<pos:position pos:line="26" pos:column="22"/></operator> <literal type="number" pos:line="26" pos:column="23">0<pos:position pos:line="26" pos:column="24"/></literal></expr>;<pos:position pos:line="26" pos:column="25"/></expr_stmt>
    }<pos:position pos:line="27" pos:column="6"/></block></then></if>

    <expr_stmt><expr><name><name pos:line="29" pos:column="5">node<pos:position pos:line="29" pos:column="9"/></name><operator pos:line="29" pos:column="9">-&gt;<pos:position pos:line="29" pos:column="14"/></operator><name pos:line="29" pos:column="11">beginp<pos:position pos:line="29" pos:column="17"/></name><index pos:line="29" pos:column="17">[<expr><name><name pos:line="29" pos:column="18">node<pos:position pos:line="29" pos:column="22"/></name><operator pos:line="29" pos:column="22">-&gt;<pos:position pos:line="29" pos:column="27"/></operator><name pos:line="29" pos:column="24">index<pos:position pos:line="29" pos:column="29"/></name></name></expr>]<pos:position pos:line="29" pos:column="30"/></index></name> <operator pos:line="29" pos:column="31">=<pos:position pos:line="29" pos:column="32"/></operator> <name pos:line="29" pos:column="33">mem<pos:position pos:line="29" pos:column="36"/></name></expr>;<pos:position pos:line="29" pos:column="37"/></expr_stmt>
    <expr_stmt><expr><name><name pos:line="30" pos:column="5">node<pos:position pos:line="30" pos:column="9"/></name><operator pos:line="30" pos:column="9">-&gt;<pos:position pos:line="30" pos:column="14"/></operator><name pos:line="30" pos:column="11">endp<pos:position pos:line="30" pos:column="15"/></name><index pos:line="30" pos:column="15">[<expr><name><name pos:line="30" pos:column="16">node<pos:position pos:line="30" pos:column="20"/></name><operator pos:line="30" pos:column="20">-&gt;<pos:position pos:line="30" pos:column="25"/></operator><name pos:line="30" pos:column="22">index<pos:position pos:line="30" pos:column="27"/></name></name></expr>]<pos:position pos:line="30" pos:column="28"/></index></name> <operator pos:line="30" pos:column="29">=<pos:position pos:line="30" pos:column="30"/></operator> <operator pos:line="30" pos:column="31">(<pos:position pos:line="30" pos:column="32"/></operator><name pos:line="30" pos:column="32">char<pos:position pos:line="30" pos:column="36"/></name> <operator pos:line="30" pos:column="37">*<pos:position pos:line="30" pos:column="38"/></operator><operator pos:line="30" pos:column="38">)<pos:position pos:line="30" pos:column="39"/></operator><name pos:line="30" pos:column="39">mem<pos:position pos:line="30" pos:column="42"/></name> <operator pos:line="30" pos:column="43">+<pos:position pos:line="30" pos:column="44"/></operator> <name pos:line="30" pos:column="45">size<pos:position pos:line="30" pos:column="49"/></name></expr>;<pos:position pos:line="30" pos:column="50"/></expr_stmt>
    <expr_stmt><expr><name><name pos:line="31" pos:column="5">node<pos:position pos:line="31" pos:column="9"/></name><operator pos:line="31" pos:column="9">-&gt;<pos:position pos:line="31" pos:column="14"/></operator><name pos:line="31" pos:column="11">index<pos:position pos:line="31" pos:column="16"/></name></name><operator pos:line="31" pos:column="16">++<pos:position pos:line="31" pos:column="18"/></operator></expr>;<pos:position pos:line="31" pos:column="19"/></expr_stmt>

    <expr_stmt><expr><name><name pos:line="33" pos:column="5">pool<pos:position pos:line="33" pos:column="9"/></name><operator pos:line="33" pos:column="9">-&gt;<pos:position pos:line="33" pos:column="14"/></operator><name pos:line="33" pos:column="11">stat_alloc<pos:position pos:line="33" pos:column="21"/></name></name><operator pos:line="33" pos:column="21">++<pos:position pos:line="33" pos:column="23"/></operator></expr>;<pos:position pos:line="33" pos:column="24"/></expr_stmt>
    <expr_stmt><expr><name><name pos:line="34" pos:column="5">pool<pos:position pos:line="34" pos:column="9"/></name><operator pos:line="34" pos:column="9">-&gt;<pos:position pos:line="34" pos:column="14"/></operator><name pos:line="34" pos:column="11">stat_total_alloc<pos:position pos:line="34" pos:column="27"/></name></name><operator pos:line="34" pos:column="27">++<pos:position pos:line="34" pos:column="29"/></operator></expr>;<pos:position pos:line="34" pos:column="30"/></expr_stmt>

    <return pos:line="36" pos:column="5">return <expr><name pos:line="36" pos:column="12">mem<pos:position pos:line="36" pos:column="15"/></name></expr>;<pos:position pos:line="36" pos:column="16"/></return>
}<pos:position pos:line="37" pos:column="2"/></block></function></unit>

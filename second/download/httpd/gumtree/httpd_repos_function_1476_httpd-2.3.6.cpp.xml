<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/httpd/gumtree/httpd_repos_function_1476_httpd-2.3.6.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">apr_status_t<pos:position pos:line="1" pos:column="20"/></name></type> <name pos:line="1" pos:column="21">run_cgi_child<pos:position pos:line="1" pos:column="34"/></name><parameter_list pos:line="1" pos:column="34">(<parameter><decl><type><name pos:line="1" pos:column="35">apr_file_t<pos:position pos:line="1" pos:column="45"/></name> <modifier pos:line="1" pos:column="46">*<pos:position pos:line="1" pos:column="47"/></modifier><modifier pos:line="1" pos:column="47">*<pos:position pos:line="1" pos:column="48"/></modifier></type><name pos:line="1" pos:column="48">script_out<pos:position pos:line="1" pos:column="58"/></name></decl></parameter>,
                                  <parameter><decl><type><name pos:line="2" pos:column="35">apr_file_t<pos:position pos:line="2" pos:column="45"/></name> <modifier pos:line="2" pos:column="46">*<pos:position pos:line="2" pos:column="47"/></modifier><modifier pos:line="2" pos:column="47">*<pos:position pos:line="2" pos:column="48"/></modifier></type><name pos:line="2" pos:column="48">script_in<pos:position pos:line="2" pos:column="57"/></name></decl></parameter>,
                                  <parameter><decl><type><name pos:line="3" pos:column="35">apr_file_t<pos:position pos:line="3" pos:column="45"/></name> <modifier pos:line="3" pos:column="46">*<pos:position pos:line="3" pos:column="47"/></modifier><modifier pos:line="3" pos:column="47">*<pos:position pos:line="3" pos:column="48"/></modifier></type><name pos:line="3" pos:column="48">script_err<pos:position pos:line="3" pos:column="58"/></name></decl></parameter>,
                                  <parameter><decl><type><specifier pos:line="4" pos:column="35">const<pos:position pos:line="4" pos:column="40"/></specifier> <name pos:line="4" pos:column="41">char<pos:position pos:line="4" pos:column="45"/></name> <modifier pos:line="4" pos:column="46">*<pos:position pos:line="4" pos:column="47"/></modifier></type><name pos:line="4" pos:column="47">command<pos:position pos:line="4" pos:column="54"/></name></decl></parameter>,
                                  <parameter><decl><type><specifier pos:line="5" pos:column="35">const<pos:position pos:line="5" pos:column="40"/></specifier> <name pos:line="5" pos:column="41">char<pos:position pos:line="5" pos:column="45"/></name> <modifier pos:line="5" pos:column="46">*<pos:position pos:line="5" pos:column="47"/></modifier> <specifier pos:line="5" pos:column="48">const<pos:position pos:line="5" pos:column="53"/></specifier></type> <name><name pos:line="5" pos:column="54">argv<pos:position pos:line="5" pos:column="58"/></name><index pos:line="5" pos:column="58">[]<pos:position pos:line="5" pos:column="60"/></index></name></decl></parameter>,
                                  <parameter><decl><type><name pos:line="6" pos:column="35">request_rec<pos:position pos:line="6" pos:column="46"/></name> <modifier pos:line="6" pos:column="47">*<pos:position pos:line="6" pos:column="48"/></modifier></type><name pos:line="6" pos:column="48">r<pos:position pos:line="6" pos:column="49"/></name></decl></parameter>,
                                  <parameter><decl><type><name pos:line="7" pos:column="35">apr_pool_t<pos:position pos:line="7" pos:column="45"/></name> <modifier pos:line="7" pos:column="46">*<pos:position pos:line="7" pos:column="47"/></modifier></type><name pos:line="7" pos:column="47">p<pos:position pos:line="7" pos:column="48"/></name></decl></parameter>,
                                  <parameter><decl><type><name pos:line="8" pos:column="35">cgi_exec_info_t<pos:position pos:line="8" pos:column="50"/></name> <modifier pos:line="8" pos:column="51">*<pos:position pos:line="8" pos:column="52"/></modifier></type><name pos:line="8" pos:column="52">e_info<pos:position pos:line="8" pos:column="58"/></name></decl></parameter>)<pos:position pos:line="8" pos:column="59"/></parameter_list>
<block pos:line="9" pos:column="1">{
    <decl_stmt><decl><type><specifier pos:line="10" pos:column="5">const<pos:position pos:line="10" pos:column="10"/></specifier> <name pos:line="10" pos:column="11">char<pos:position pos:line="10" pos:column="15"/></name> <modifier pos:line="10" pos:column="16">*<pos:position pos:line="10" pos:column="17"/></modifier> <specifier pos:line="10" pos:column="18">const<pos:position pos:line="10" pos:column="23"/></specifier> <modifier pos:line="10" pos:column="24">*<pos:position pos:line="10" pos:column="25"/></modifier></type><name pos:line="10" pos:column="25">env<pos:position pos:line="10" pos:column="28"/></name></decl>;<pos:position pos:line="10" pos:column="29"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="11" pos:column="5">apr_procattr_t<pos:position pos:line="11" pos:column="19"/></name> <modifier pos:line="11" pos:column="20">*<pos:position pos:line="11" pos:column="21"/></modifier></type><name pos:line="11" pos:column="21">procattr<pos:position pos:line="11" pos:column="29"/></name></decl>;<pos:position pos:line="11" pos:column="30"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="12" pos:column="5">apr_proc_t<pos:position pos:line="12" pos:column="15"/></name> <modifier pos:line="12" pos:column="16">*<pos:position pos:line="12" pos:column="17"/></modifier></type><name pos:line="12" pos:column="17">procnew<pos:position pos:line="12" pos:column="24"/></name></decl>;<pos:position pos:line="12" pos:column="25"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="13" pos:column="5">apr_status_t<pos:position pos:line="13" pos:column="17"/></name></type> <name pos:line="13" pos:column="18">rc<pos:position pos:line="13" pos:column="20"/></name> <init pos:line="13" pos:column="21">= <expr><name pos:line="13" pos:column="23">APR_SUCCESS<pos:position pos:line="13" pos:column="34"/></name></expr></init></decl>;<pos:position pos:line="13" pos:column="35"/></decl_stmt>

<cpp:if pos:line="15" pos:column="1">#<cpp:directive pos:line="15" pos:column="2">if<pos:position pos:line="15" pos:column="4"/></cpp:directive> <expr><call><name pos:line="15" pos:column="5">defined<pos:position pos:line="15" pos:column="12"/></name><argument_list pos:line="15" pos:column="12">(<argument><expr><name pos:line="15" pos:column="13">RLIMIT_CPU<pos:position pos:line="15" pos:column="23"/></name></expr></argument>)<pos:position pos:line="15" pos:column="24"/></argument_list></call>  <operator pos:line="15" pos:column="26">||<pos:position pos:line="15" pos:column="28"/></operator> <call><name pos:line="15" pos:column="29">defined<pos:position pos:line="15" pos:column="36"/></name><argument_list pos:line="15" pos:column="36">(<argument><expr><name pos:line="15" pos:column="37">RLIMIT_NPROC<pos:position pos:line="15" pos:column="49"/></name></expr></argument>)<pos:position pos:line="15" pos:column="50"/></argument_list></call> <operator pos:line="15" pos:column="51">||<pos:position pos:line="15" pos:column="53"/></operator> \
    <call><name pos:line="16" pos:column="5">defined<pos:position pos:line="16" pos:column="12"/></name><argument_list pos:line="16" pos:column="12">(<argument><expr><name pos:line="16" pos:column="13">RLIMIT_DATA<pos:position pos:line="16" pos:column="24"/></name></expr></argument>)<pos:position pos:line="16" pos:column="25"/></argument_list></call> <operator pos:line="16" pos:column="26">||<pos:position pos:line="16" pos:column="28"/></operator> <call><name pos:line="16" pos:column="29">defined<pos:position pos:line="16" pos:column="36"/></name><argument_list pos:line="16" pos:column="36">(<argument><expr><name pos:line="16" pos:column="37">RLIMIT_VMEM<pos:position pos:line="16" pos:column="48"/></name></expr></argument>)<pos:position pos:line="16" pos:column="49"/></argument_list></call> <operator pos:line="16" pos:column="50">||<pos:position pos:line="16" pos:column="52"/></operator> <call><name pos:line="16" pos:column="53">defined<pos:position pos:line="16" pos:column="60"/></name> <argument_list pos:line="16" pos:column="61">(<argument><expr><name pos:line="16" pos:column="62">RLIMIT_AS<pos:position pos:line="16" pos:column="71"/></name></expr></argument>)<pos:position pos:line="16" pos:column="72"/></argument_list></call></expr></cpp:if>

    <decl_stmt><decl><type><name pos:line="18" pos:column="5">core_dir_config<pos:position pos:line="18" pos:column="20"/></name> <modifier pos:line="18" pos:column="21">*<pos:position pos:line="18" pos:column="22"/></modifier></type><name pos:line="18" pos:column="22">conf<pos:position pos:line="18" pos:column="26"/></name> <init pos:line="18" pos:column="27">= <expr><call><name pos:line="18" pos:column="29">ap_get_module_config<pos:position pos:line="18" pos:column="49"/></name><argument_list pos:line="18" pos:column="49">(<argument><expr><name><name pos:line="18" pos:column="50">r<pos:position pos:line="18" pos:column="51"/></name><operator pos:line="18" pos:column="51">-&gt;<pos:position pos:line="18" pos:column="56"/></operator><name pos:line="18" pos:column="53">per_dir_config<pos:position pos:line="18" pos:column="67"/></name></name></expr></argument>,
                                                 <argument><expr><operator pos:line="19" pos:column="50">&amp;<pos:position pos:line="19" pos:column="55"/></operator><name pos:line="19" pos:column="51">core_module<pos:position pos:line="19" pos:column="62"/></name></expr></argument>)<pos:position pos:line="19" pos:column="63"/></argument_list></call></expr></init></decl>;<pos:position pos:line="19" pos:column="64"/></decl_stmt>
<cpp:endif pos:line="20" pos:column="1">#<cpp:directive pos:line="20" pos:column="2">endif<pos:position pos:line="20" pos:column="7"/></cpp:directive></cpp:endif>

<cpp:ifdef pos:line="22" pos:column="1">#<cpp:directive pos:line="22" pos:column="2">ifdef<pos:position pos:line="22" pos:column="7"/></cpp:directive> <name pos:line="22" pos:column="8">DEBUG_CGI<pos:position pos:line="22" pos:column="17"/></name></cpp:ifdef>
<cpp:ifdef pos:line="23" pos:column="1">#<cpp:directive pos:line="23" pos:column="2">ifdef<pos:position pos:line="23" pos:column="7"/></cpp:directive> <name pos:line="23" pos:column="8">OS2<pos:position pos:line="23" pos:column="11"/></name></cpp:ifdef>
    <comment type="block" pos:line="24" pos:column="5">/* Under OS/2 need to use device con. */</comment>
    <decl_stmt><decl><type><name pos:line="25" pos:column="5">FILE<pos:position pos:line="25" pos:column="9"/></name> <modifier pos:line="25" pos:column="10">*<pos:position pos:line="25" pos:column="11"/></modifier></type><name pos:line="25" pos:column="11">dbg<pos:position pos:line="25" pos:column="14"/></name> <init pos:line="25" pos:column="15">= <expr><call><name pos:line="25" pos:column="17">fopen<pos:position pos:line="25" pos:column="22"/></name><argument_list pos:line="25" pos:column="22">(<argument><expr><literal type="string" pos:line="25" pos:column="23">"con"<pos:position pos:line="25" pos:column="28"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="25" pos:column="30">"w"<pos:position pos:line="25" pos:column="33"/></literal></expr></argument>)<pos:position pos:line="25" pos:column="34"/></argument_list></call></expr></init></decl>;<pos:position pos:line="25" pos:column="35"/></decl_stmt>
<cpp:else pos:line="26" pos:column="1">#<cpp:directive pos:line="26" pos:column="2">else<pos:position pos:line="26" pos:column="6"/></cpp:directive></cpp:else>
    <decl_stmt><decl><type><name pos:line="27" pos:column="5">FILE<pos:position pos:line="27" pos:column="9"/></name> <modifier pos:line="27" pos:column="10">*<pos:position pos:line="27" pos:column="11"/></modifier></type><name pos:line="27" pos:column="11">dbg<pos:position pos:line="27" pos:column="14"/></name> <init pos:line="27" pos:column="15">= <expr><call><name pos:line="27" pos:column="17">fopen<pos:position pos:line="27" pos:column="22"/></name><argument_list pos:line="27" pos:column="22">(<argument><expr><literal type="string" pos:line="27" pos:column="23">"/dev/tty"<pos:position pos:line="27" pos:column="33"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="27" pos:column="35">"w"<pos:position pos:line="27" pos:column="38"/></literal></expr></argument>)<pos:position pos:line="27" pos:column="39"/></argument_list></call></expr></init></decl>;<pos:position pos:line="27" pos:column="40"/></decl_stmt>
<cpp:endif pos:line="28" pos:column="1">#<cpp:directive pos:line="28" pos:column="2">endif<pos:position pos:line="28" pos:column="7"/></cpp:directive></cpp:endif>
    <decl_stmt><decl><type><name pos:line="29" pos:column="5">int<pos:position pos:line="29" pos:column="8"/></name></type> <name pos:line="29" pos:column="9">i<pos:position pos:line="29" pos:column="10"/></name></decl>;<pos:position pos:line="29" pos:column="11"/></decl_stmt>
<cpp:endif pos:line="30" pos:column="1">#<cpp:directive pos:line="30" pos:column="2">endif<pos:position pos:line="30" pos:column="7"/></cpp:directive></cpp:endif>

    <expr_stmt><expr><call><name pos:line="32" pos:column="5">RAISE_SIGSTOP<pos:position pos:line="32" pos:column="18"/></name><argument_list pos:line="32" pos:column="18">(<argument><expr><name pos:line="32" pos:column="19">CGI_CHILD<pos:position pos:line="32" pos:column="28"/></name></expr></argument>)<pos:position pos:line="32" pos:column="29"/></argument_list></call></expr>;<pos:position pos:line="32" pos:column="30"/></expr_stmt>
<cpp:ifdef pos:line="33" pos:column="1">#<cpp:directive pos:line="33" pos:column="2">ifdef<pos:position pos:line="33" pos:column="7"/></cpp:directive> <name pos:line="33" pos:column="8">DEBUG_CGI<pos:position pos:line="33" pos:column="17"/></name></cpp:ifdef>
    <expr_stmt><expr><call><name pos:line="34" pos:column="5">fprintf<pos:position pos:line="34" pos:column="12"/></name><argument_list pos:line="34" pos:column="12">(<argument><expr><name pos:line="34" pos:column="13">dbg<pos:position pos:line="34" pos:column="16"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="34" pos:column="18">"Attempting to exec %s as CGI child (argv0 = %s)\n"<pos:position pos:line="34" pos:column="69"/></literal></expr></argument>,
            <argument><expr><name><name pos:line="35" pos:column="13">r<pos:position pos:line="35" pos:column="14"/></name><operator pos:line="35" pos:column="14">-&gt;<pos:position pos:line="35" pos:column="19"/></operator><name pos:line="35" pos:column="16">filename<pos:position pos:line="35" pos:column="24"/></name></name></expr></argument>, <argument><expr><name><name pos:line="35" pos:column="26">argv<pos:position pos:line="35" pos:column="30"/></name><index pos:line="35" pos:column="30">[<expr><literal type="number" pos:line="35" pos:column="31">0<pos:position pos:line="35" pos:column="32"/></literal></expr>]<pos:position pos:line="35" pos:column="33"/></index></name></expr></argument>)<pos:position pos:line="35" pos:column="34"/></argument_list></call></expr>;<pos:position pos:line="35" pos:column="35"/></expr_stmt>
<cpp:endif pos:line="36" pos:column="1">#<cpp:directive pos:line="36" pos:column="2">endif<pos:position pos:line="36" pos:column="7"/></cpp:directive></cpp:endif>

    <expr_stmt><expr><name pos:line="38" pos:column="5">env<pos:position pos:line="38" pos:column="8"/></name> <operator pos:line="38" pos:column="9">=<pos:position pos:line="38" pos:column="10"/></operator> <operator pos:line="38" pos:column="11">(<pos:position pos:line="38" pos:column="12"/></operator><specifier pos:line="38" pos:column="12">const<pos:position pos:line="38" pos:column="17"/></specifier> <name pos:line="38" pos:column="18">char<pos:position pos:line="38" pos:column="22"/></name> <operator pos:line="38" pos:column="23">*<pos:position pos:line="38" pos:column="24"/></operator> <specifier pos:line="38" pos:column="25">const<pos:position pos:line="38" pos:column="30"/></specifier> <operator pos:line="38" pos:column="31">*<pos:position pos:line="38" pos:column="32"/></operator><operator pos:line="38" pos:column="32">)<pos:position pos:line="38" pos:column="33"/></operator><call><name pos:line="38" pos:column="33">ap_create_environment<pos:position pos:line="38" pos:column="54"/></name><argument_list pos:line="38" pos:column="54">(<argument><expr><name pos:line="38" pos:column="55">p<pos:position pos:line="38" pos:column="56"/></name></expr></argument>, <argument><expr><name><name pos:line="38" pos:column="58">r<pos:position pos:line="38" pos:column="59"/></name><operator pos:line="38" pos:column="59">-&gt;<pos:position pos:line="38" pos:column="64"/></operator><name pos:line="38" pos:column="61">subprocess_env<pos:position pos:line="38" pos:column="75"/></name></name></expr></argument>)<pos:position pos:line="38" pos:column="76"/></argument_list></call></expr>;<pos:position pos:line="38" pos:column="77"/></expr_stmt>

<cpp:ifdef pos:line="40" pos:column="1">#<cpp:directive pos:line="40" pos:column="2">ifdef<pos:position pos:line="40" pos:column="7"/></cpp:directive> <name pos:line="40" pos:column="8">DEBUG_CGI<pos:position pos:line="40" pos:column="17"/></name></cpp:ifdef>
    <expr_stmt><expr><call><name pos:line="41" pos:column="5">fprintf<pos:position pos:line="41" pos:column="12"/></name><argument_list pos:line="41" pos:column="12">(<argument><expr><name pos:line="41" pos:column="13">dbg<pos:position pos:line="41" pos:column="16"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="41" pos:column="18">"Environment: \n"<pos:position pos:line="41" pos:column="35"/></literal></expr></argument>)<pos:position pos:line="41" pos:column="36"/></argument_list></call></expr>;<pos:position pos:line="41" pos:column="37"/></expr_stmt>
    <for pos:line="42" pos:column="5">for <control pos:line="42" pos:column="9">(<init><expr><name pos:line="42" pos:column="10">i<pos:position pos:line="42" pos:column="11"/></name> <operator pos:line="42" pos:column="12">=<pos:position pos:line="42" pos:column="13"/></operator> <literal type="number" pos:line="42" pos:column="14">0<pos:position pos:line="42" pos:column="15"/></literal></expr>;<pos:position pos:line="42" pos:column="16"/></init> <condition><expr><name><name pos:line="42" pos:column="17">env<pos:position pos:line="42" pos:column="20"/></name><index pos:line="42" pos:column="20">[<expr><name pos:line="42" pos:column="21">i<pos:position pos:line="42" pos:column="22"/></name></expr>]<pos:position pos:line="42" pos:column="23"/></index></name></expr>;<pos:position pos:line="42" pos:column="24"/></condition> <incr><expr><operator pos:line="42" pos:column="25">++<pos:position pos:line="42" pos:column="27"/></operator><name pos:line="42" pos:column="27">i<pos:position pos:line="42" pos:column="28"/></name></expr></incr>)<pos:position pos:line="42" pos:column="29"/></control>
        <block type="pseudo"><expr_stmt><expr><call><name pos:line="43" pos:column="9">fprintf<pos:position pos:line="43" pos:column="16"/></name><argument_list pos:line="43" pos:column="16">(<argument><expr><name pos:line="43" pos:column="17">dbg<pos:position pos:line="43" pos:column="20"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="43" pos:column="22">"'%s'\n"<pos:position pos:line="43" pos:column="30"/></literal></expr></argument>, <argument><expr><name><name pos:line="43" pos:column="32">env<pos:position pos:line="43" pos:column="35"/></name><index pos:line="43" pos:column="35">[<expr><name pos:line="43" pos:column="36">i<pos:position pos:line="43" pos:column="37"/></name></expr>]<pos:position pos:line="43" pos:column="38"/></index></name></expr></argument>)<pos:position pos:line="43" pos:column="39"/></argument_list></call></expr>;<pos:position pos:line="43" pos:column="40"/></expr_stmt></block></for>
    <expr_stmt><expr><call><name pos:line="44" pos:column="5">fclose<pos:position pos:line="44" pos:column="11"/></name><argument_list pos:line="44" pos:column="11">(<argument><expr><name pos:line="44" pos:column="12">dbg<pos:position pos:line="44" pos:column="15"/></name></expr></argument>)<pos:position pos:line="44" pos:column="16"/></argument_list></call></expr>;<pos:position pos:line="44" pos:column="17"/></expr_stmt>
<cpp:endif pos:line="45" pos:column="1">#<cpp:directive pos:line="45" pos:column="2">endif<pos:position pos:line="45" pos:column="7"/></cpp:directive></cpp:endif>

    <comment type="block" pos:line="47" pos:column="5">/* Transmute ourselves into the script.
     * NB only ISINDEX scripts get decoded arguments.
     */</comment>
    <if pos:line="50" pos:column="5">if <condition pos:line="50" pos:column="8">(<expr><operator pos:line="50" pos:column="9">(<pos:position pos:line="50" pos:column="10"/></operator><operator pos:line="50" pos:column="10">(<pos:position pos:line="50" pos:column="11"/></operator><name pos:line="50" pos:column="11">rc<pos:position pos:line="50" pos:column="13"/></name> <operator pos:line="50" pos:column="14">=<pos:position pos:line="50" pos:column="15"/></operator> <call><name pos:line="50" pos:column="16">apr_procattr_create<pos:position pos:line="50" pos:column="35"/></name><argument_list pos:line="50" pos:column="35">(<argument><expr><operator pos:line="50" pos:column="36">&amp;<pos:position pos:line="50" pos:column="41"/></operator><name pos:line="50" pos:column="37">procattr<pos:position pos:line="50" pos:column="45"/></name></expr></argument>, <argument><expr><name pos:line="50" pos:column="47">p<pos:position pos:line="50" pos:column="48"/></name></expr></argument>)<pos:position pos:line="50" pos:column="49"/></argument_list></call><operator pos:line="50" pos:column="49">)<pos:position pos:line="50" pos:column="50"/></operator> <operator pos:line="50" pos:column="51">!=<pos:position pos:line="50" pos:column="53"/></operator> <name pos:line="50" pos:column="54">APR_SUCCESS<pos:position pos:line="50" pos:column="65"/></name><operator pos:line="50" pos:column="65">)<pos:position pos:line="50" pos:column="66"/></operator> <operator pos:line="50" pos:column="67">||<pos:position pos:line="50" pos:column="69"/></operator>
        <operator pos:line="51" pos:column="9">(<pos:position pos:line="51" pos:column="10"/></operator><operator pos:line="51" pos:column="10">(<pos:position pos:line="51" pos:column="11"/></operator><name pos:line="51" pos:column="11">rc<pos:position pos:line="51" pos:column="13"/></name> <operator pos:line="51" pos:column="14">=<pos:position pos:line="51" pos:column="15"/></operator> <call><name pos:line="51" pos:column="16">apr_procattr_io_set<pos:position pos:line="51" pos:column="35"/></name><argument_list pos:line="51" pos:column="35">(<argument><expr><name pos:line="51" pos:column="36">procattr<pos:position pos:line="51" pos:column="44"/></name></expr></argument>,
                                   <argument><expr><name><name pos:line="52" pos:column="36">e_info<pos:position pos:line="52" pos:column="42"/></name><operator pos:line="52" pos:column="42">-&gt;<pos:position pos:line="52" pos:column="47"/></operator><name pos:line="52" pos:column="44">in_pipe<pos:position pos:line="52" pos:column="51"/></name></name></expr></argument>,
                                   <argument><expr><name><name pos:line="53" pos:column="36">e_info<pos:position pos:line="53" pos:column="42"/></name><operator pos:line="53" pos:column="42">-&gt;<pos:position pos:line="53" pos:column="47"/></operator><name pos:line="53" pos:column="44">out_pipe<pos:position pos:line="53" pos:column="52"/></name></name></expr></argument>,
                                   <argument><expr><name><name pos:line="54" pos:column="36">e_info<pos:position pos:line="54" pos:column="42"/></name><operator pos:line="54" pos:column="42">-&gt;<pos:position pos:line="54" pos:column="47"/></operator><name pos:line="54" pos:column="44">err_pipe<pos:position pos:line="54" pos:column="52"/></name></name></expr></argument>)<pos:position pos:line="54" pos:column="53"/></argument_list></call><operator pos:line="54" pos:column="53">)<pos:position pos:line="54" pos:column="54"/></operator> <operator pos:line="54" pos:column="55">!=<pos:position pos:line="54" pos:column="57"/></operator> <name pos:line="54" pos:column="58">APR_SUCCESS<pos:position pos:line="54" pos:column="69"/></name><operator pos:line="54" pos:column="69">)<pos:position pos:line="54" pos:column="70"/></operator> <operator pos:line="54" pos:column="71">||<pos:position pos:line="54" pos:column="73"/></operator>
        <operator pos:line="55" pos:column="9">(<pos:position pos:line="55" pos:column="10"/></operator><operator pos:line="55" pos:column="10">(<pos:position pos:line="55" pos:column="11"/></operator><name pos:line="55" pos:column="11">rc<pos:position pos:line="55" pos:column="13"/></name> <operator pos:line="55" pos:column="14">=<pos:position pos:line="55" pos:column="15"/></operator> <call><name pos:line="55" pos:column="16">apr_procattr_dir_set<pos:position pos:line="55" pos:column="36"/></name><argument_list pos:line="55" pos:column="36">(<argument><expr><name pos:line="55" pos:column="37">procattr<pos:position pos:line="55" pos:column="45"/></name></expr></argument>,
                        <argument><expr><call><name pos:line="56" pos:column="25">ap_make_dirstr_parent<pos:position pos:line="56" pos:column="46"/></name><argument_list pos:line="56" pos:column="46">(<argument><expr><name><name pos:line="56" pos:column="47">r<pos:position pos:line="56" pos:column="48"/></name><operator pos:line="56" pos:column="48">-&gt;<pos:position pos:line="56" pos:column="53"/></operator><name pos:line="56" pos:column="50">pool<pos:position pos:line="56" pos:column="54"/></name></name></expr></argument>,
                                              <argument><expr><name><name pos:line="57" pos:column="47">r<pos:position pos:line="57" pos:column="48"/></name><operator pos:line="57" pos:column="48">-&gt;<pos:position pos:line="57" pos:column="53"/></operator><name pos:line="57" pos:column="50">filename<pos:position pos:line="57" pos:column="58"/></name></name></expr></argument>)<pos:position pos:line="57" pos:column="59"/></argument_list></call></expr></argument>)<pos:position pos:line="57" pos:column="60"/></argument_list></call><operator pos:line="57" pos:column="60">)<pos:position pos:line="57" pos:column="61"/></operator> <operator pos:line="57" pos:column="62">!=<pos:position pos:line="57" pos:column="64"/></operator> <name pos:line="57" pos:column="65">APR_SUCCESS<pos:position pos:line="57" pos:column="76"/></name><operator pos:line="57" pos:column="76">)<pos:position pos:line="57" pos:column="77"/></operator> <operator pos:line="57" pos:column="78">||<pos:position pos:line="57" pos:column="80"/></operator>
<cpp:ifdef pos:line="58" pos:column="1">#<cpp:directive pos:line="58" pos:column="2">ifdef<pos:position pos:line="58" pos:column="7"/></cpp:directive> <name pos:line="58" pos:column="8">RLIMIT_CPU<pos:position pos:line="58" pos:column="18"/></name></cpp:ifdef>
        <operator pos:line="59" pos:column="9">(<pos:position pos:line="59" pos:column="10"/></operator><operator pos:line="59" pos:column="10">(<pos:position pos:line="59" pos:column="11"/></operator><name pos:line="59" pos:column="11">rc<pos:position pos:line="59" pos:column="13"/></name> <operator pos:line="59" pos:column="14">=<pos:position pos:line="59" pos:column="15"/></operator> <call><name pos:line="59" pos:column="16">apr_procattr_limit_set<pos:position pos:line="59" pos:column="38"/></name><argument_list pos:line="59" pos:column="38">(<argument><expr><name pos:line="59" pos:column="39">procattr<pos:position pos:line="59" pos:column="47"/></name></expr></argument>, <argument><expr><name pos:line="59" pos:column="49">APR_LIMIT_CPU<pos:position pos:line="59" pos:column="62"/></name></expr></argument>,
                                      <argument><expr><name><name pos:line="60" pos:column="39">conf<pos:position pos:line="60" pos:column="43"/></name><operator pos:line="60" pos:column="43">-&gt;<pos:position pos:line="60" pos:column="48"/></operator><name pos:line="60" pos:column="45">limit_cpu<pos:position pos:line="60" pos:column="54"/></name></name></expr></argument>)<pos:position pos:line="60" pos:column="55"/></argument_list></call><operator pos:line="60" pos:column="55">)<pos:position pos:line="60" pos:column="56"/></operator> <operator pos:line="60" pos:column="57">!=<pos:position pos:line="60" pos:column="59"/></operator> <name pos:line="60" pos:column="60">APR_SUCCESS<pos:position pos:line="60" pos:column="71"/></name><operator pos:line="60" pos:column="71">)<pos:position pos:line="60" pos:column="72"/></operator> <operator pos:line="60" pos:column="73">||<pos:position pos:line="60" pos:column="75"/></operator>
<cpp:endif pos:line="61" pos:column="1">#<cpp:directive pos:line="61" pos:column="2">endif<pos:position pos:line="61" pos:column="7"/></cpp:directive></cpp:endif>
<cpp:if pos:line="62" pos:column="1">#<cpp:directive pos:line="62" pos:column="2">if<pos:position pos:line="62" pos:column="4"/></cpp:directive> <expr><call><name pos:line="62" pos:column="5">defined<pos:position pos:line="62" pos:column="12"/></name><argument_list pos:line="62" pos:column="12">(<argument><expr><name pos:line="62" pos:column="13">RLIMIT_DATA<pos:position pos:line="62" pos:column="24"/></name></expr></argument>)<pos:position pos:line="62" pos:column="25"/></argument_list></call> <operator pos:line="62" pos:column="26">||<pos:position pos:line="62" pos:column="28"/></operator> <call><name pos:line="62" pos:column="29">defined<pos:position pos:line="62" pos:column="36"/></name><argument_list pos:line="62" pos:column="36">(<argument><expr><name pos:line="62" pos:column="37">RLIMIT_VMEM<pos:position pos:line="62" pos:column="48"/></name></expr></argument>)<pos:position pos:line="62" pos:column="49"/></argument_list></call> <operator pos:line="62" pos:column="50">||<pos:position pos:line="62" pos:column="52"/></operator> <call><name pos:line="62" pos:column="53">defined<pos:position pos:line="62" pos:column="60"/></name><argument_list pos:line="62" pos:column="60">(<argument><expr><name pos:line="62" pos:column="61">RLIMIT_AS<pos:position pos:line="62" pos:column="70"/></name></expr></argument>)<pos:position pos:line="62" pos:column="71"/></argument_list></call></expr></cpp:if>
        <operator pos:line="63" pos:column="9">(<pos:position pos:line="63" pos:column="10"/></operator><operator pos:line="63" pos:column="10">(<pos:position pos:line="63" pos:column="11"/></operator><name pos:line="63" pos:column="11">rc<pos:position pos:line="63" pos:column="13"/></name> <operator pos:line="63" pos:column="14">=<pos:position pos:line="63" pos:column="15"/></operator> <call><name pos:line="63" pos:column="16">apr_procattr_limit_set<pos:position pos:line="63" pos:column="38"/></name><argument_list pos:line="63" pos:column="38">(<argument><expr><name pos:line="63" pos:column="39">procattr<pos:position pos:line="63" pos:column="47"/></name></expr></argument>, <argument><expr><name pos:line="63" pos:column="49">APR_LIMIT_MEM<pos:position pos:line="63" pos:column="62"/></name></expr></argument>,
                                      <argument><expr><name><name pos:line="64" pos:column="39">conf<pos:position pos:line="64" pos:column="43"/></name><operator pos:line="64" pos:column="43">-&gt;<pos:position pos:line="64" pos:column="48"/></operator><name pos:line="64" pos:column="45">limit_mem<pos:position pos:line="64" pos:column="54"/></name></name></expr></argument>)<pos:position pos:line="64" pos:column="55"/></argument_list></call><operator pos:line="64" pos:column="55">)<pos:position pos:line="64" pos:column="56"/></operator> <operator pos:line="64" pos:column="57">!=<pos:position pos:line="64" pos:column="59"/></operator> <name pos:line="64" pos:column="60">APR_SUCCESS<pos:position pos:line="64" pos:column="71"/></name><operator pos:line="64" pos:column="71">)<pos:position pos:line="64" pos:column="72"/></operator> <operator pos:line="64" pos:column="73">||<pos:position pos:line="64" pos:column="75"/></operator>
<cpp:endif pos:line="65" pos:column="1">#<cpp:directive pos:line="65" pos:column="2">endif<pos:position pos:line="65" pos:column="7"/></cpp:directive></cpp:endif>
<cpp:ifdef pos:line="66" pos:column="1">#<cpp:directive pos:line="66" pos:column="2">ifdef<pos:position pos:line="66" pos:column="7"/></cpp:directive> <name pos:line="66" pos:column="8">RLIMIT_NPROC<pos:position pos:line="66" pos:column="20"/></name></cpp:ifdef>
        <operator pos:line="67" pos:column="9">(<pos:position pos:line="67" pos:column="10"/></operator><operator pos:line="67" pos:column="10">(<pos:position pos:line="67" pos:column="11"/></operator><name pos:line="67" pos:column="11">rc<pos:position pos:line="67" pos:column="13"/></name> <operator pos:line="67" pos:column="14">=<pos:position pos:line="67" pos:column="15"/></operator> <call><name pos:line="67" pos:column="16">apr_procattr_limit_set<pos:position pos:line="67" pos:column="38"/></name><argument_list pos:line="67" pos:column="38">(<argument><expr><name pos:line="67" pos:column="39">procattr<pos:position pos:line="67" pos:column="47"/></name></expr></argument>, <argument><expr><name pos:line="67" pos:column="49">APR_LIMIT_NPROC<pos:position pos:line="67" pos:column="64"/></name></expr></argument>,
                                      <argument><expr><name><name pos:line="68" pos:column="39">conf<pos:position pos:line="68" pos:column="43"/></name><operator pos:line="68" pos:column="43">-&gt;<pos:position pos:line="68" pos:column="48"/></operator><name pos:line="68" pos:column="45">limit_nproc<pos:position pos:line="68" pos:column="56"/></name></name></expr></argument>)<pos:position pos:line="68" pos:column="57"/></argument_list></call><operator pos:line="68" pos:column="57">)<pos:position pos:line="68" pos:column="58"/></operator> <operator pos:line="68" pos:column="59">!=<pos:position pos:line="68" pos:column="61"/></operator> <name pos:line="68" pos:column="62">APR_SUCCESS<pos:position pos:line="68" pos:column="73"/></name><operator pos:line="68" pos:column="73">)<pos:position pos:line="68" pos:column="74"/></operator> <operator pos:line="68" pos:column="75">||<pos:position pos:line="68" pos:column="77"/></operator>
<cpp:endif pos:line="69" pos:column="1">#<cpp:directive pos:line="69" pos:column="2">endif<pos:position pos:line="69" pos:column="7"/></cpp:directive></cpp:endif>
        <operator pos:line="70" pos:column="9">(<pos:position pos:line="70" pos:column="10"/></operator><operator pos:line="70" pos:column="10">(<pos:position pos:line="70" pos:column="11"/></operator><name pos:line="70" pos:column="11">rc<pos:position pos:line="70" pos:column="13"/></name> <operator pos:line="70" pos:column="14">=<pos:position pos:line="70" pos:column="15"/></operator> <call><name pos:line="70" pos:column="16">apr_procattr_cmdtype_set<pos:position pos:line="70" pos:column="40"/></name><argument_list pos:line="70" pos:column="40">(<argument><expr><name pos:line="70" pos:column="41">procattr<pos:position pos:line="70" pos:column="49"/></name></expr></argument>,
                                        <argument><expr><name><name pos:line="71" pos:column="41">e_info<pos:position pos:line="71" pos:column="47"/></name><operator pos:line="71" pos:column="47">-&gt;<pos:position pos:line="71" pos:column="52"/></operator><name pos:line="71" pos:column="49">cmd_type<pos:position pos:line="71" pos:column="57"/></name></name></expr></argument>)<pos:position pos:line="71" pos:column="58"/></argument_list></call><operator pos:line="71" pos:column="58">)<pos:position pos:line="71" pos:column="59"/></operator> <operator pos:line="71" pos:column="60">!=<pos:position pos:line="71" pos:column="62"/></operator> <name pos:line="71" pos:column="63">APR_SUCCESS<pos:position pos:line="71" pos:column="74"/></name><operator pos:line="71" pos:column="74">)<pos:position pos:line="71" pos:column="75"/></operator> <operator pos:line="71" pos:column="76">||<pos:position pos:line="71" pos:column="78"/></operator>

        <operator pos:line="73" pos:column="9">(<pos:position pos:line="73" pos:column="10"/></operator><operator pos:line="73" pos:column="10">(<pos:position pos:line="73" pos:column="11"/></operator><name pos:line="73" pos:column="11">rc<pos:position pos:line="73" pos:column="13"/></name> <operator pos:line="73" pos:column="14">=<pos:position pos:line="73" pos:column="15"/></operator> <call><name pos:line="73" pos:column="16">apr_procattr_detach_set<pos:position pos:line="73" pos:column="39"/></name><argument_list pos:line="73" pos:column="39">(<argument><expr><name pos:line="73" pos:column="40">procattr<pos:position pos:line="73" pos:column="48"/></name></expr></argument>,
                                        <argument><expr><name><name pos:line="74" pos:column="41">e_info<pos:position pos:line="74" pos:column="47"/></name><operator pos:line="74" pos:column="47">-&gt;<pos:position pos:line="74" pos:column="52"/></operator><name pos:line="74" pos:column="49">detached<pos:position pos:line="74" pos:column="57"/></name></name></expr></argument>)<pos:position pos:line="74" pos:column="58"/></argument_list></call><operator pos:line="74" pos:column="58">)<pos:position pos:line="74" pos:column="59"/></operator> <operator pos:line="74" pos:column="60">!=<pos:position pos:line="74" pos:column="62"/></operator> <name pos:line="74" pos:column="63">APR_SUCCESS<pos:position pos:line="74" pos:column="74"/></name><operator pos:line="74" pos:column="74">)<pos:position pos:line="74" pos:column="75"/></operator> <operator pos:line="74" pos:column="76">||<pos:position pos:line="74" pos:column="78"/></operator>
        <operator pos:line="75" pos:column="9">(<pos:position pos:line="75" pos:column="10"/></operator><operator pos:line="75" pos:column="10">(<pos:position pos:line="75" pos:column="11"/></operator><name pos:line="75" pos:column="11">rc<pos:position pos:line="75" pos:column="13"/></name> <operator pos:line="75" pos:column="14">=<pos:position pos:line="75" pos:column="15"/></operator> <call><name pos:line="75" pos:column="16">apr_procattr_addrspace_set<pos:position pos:line="75" pos:column="42"/></name><argument_list pos:line="75" pos:column="42">(<argument><expr><name pos:line="75" pos:column="43">procattr<pos:position pos:line="75" pos:column="51"/></name></expr></argument>,
                                        <argument><expr><name><name pos:line="76" pos:column="41">e_info<pos:position pos:line="76" pos:column="47"/></name><operator pos:line="76" pos:column="47">-&gt;<pos:position pos:line="76" pos:column="52"/></operator><name pos:line="76" pos:column="49">addrspace<pos:position pos:line="76" pos:column="58"/></name></name></expr></argument>)<pos:position pos:line="76" pos:column="59"/></argument_list></call><operator pos:line="76" pos:column="59">)<pos:position pos:line="76" pos:column="60"/></operator> <operator pos:line="76" pos:column="61">!=<pos:position pos:line="76" pos:column="63"/></operator> <name pos:line="76" pos:column="64">APR_SUCCESS<pos:position pos:line="76" pos:column="75"/></name><operator pos:line="76" pos:column="75">)<pos:position pos:line="76" pos:column="76"/></operator> <operator pos:line="76" pos:column="77">||<pos:position pos:line="76" pos:column="79"/></operator>
        <operator pos:line="77" pos:column="9">(<pos:position pos:line="77" pos:column="10"/></operator><operator pos:line="77" pos:column="10">(<pos:position pos:line="77" pos:column="11"/></operator><name pos:line="77" pos:column="11">rc<pos:position pos:line="77" pos:column="13"/></name> <operator pos:line="77" pos:column="14">=<pos:position pos:line="77" pos:column="15"/></operator> <call><name pos:line="77" pos:column="16">apr_procattr_child_errfn_set<pos:position pos:line="77" pos:column="44"/></name><argument_list pos:line="77" pos:column="44">(<argument><expr><name pos:line="77" pos:column="45">procattr<pos:position pos:line="77" pos:column="53"/></name></expr></argument>, <argument><expr><name pos:line="77" pos:column="55">cgi_child_errfn<pos:position pos:line="77" pos:column="70"/></name></expr></argument>)<pos:position pos:line="77" pos:column="71"/></argument_list></call><operator pos:line="77" pos:column="71">)<pos:position pos:line="77" pos:column="72"/></operator> <operator pos:line="77" pos:column="73">!=<pos:position pos:line="77" pos:column="75"/></operator> <name pos:line="77" pos:column="76">APR_SUCCESS<pos:position pos:line="77" pos:column="87"/></name><operator pos:line="77" pos:column="87">)<pos:position pos:line="77" pos:column="88"/></operator></expr>)<pos:position pos:line="77" pos:column="89"/></condition><then pos:line="77" pos:column="89"> <block pos:line="77" pos:column="90">{
        <comment type="block" pos:line="78" pos:column="9">/* Something bad happened, tell the world. */</comment>
        <expr_stmt><expr><call><name pos:line="79" pos:column="9">ap_log_rerror<pos:position pos:line="79" pos:column="22"/></name><argument_list pos:line="79" pos:column="22">(<argument><expr><name pos:line="79" pos:column="23">APLOG_MARK<pos:position pos:line="79" pos:column="33"/></name></expr></argument>, <argument><expr><name pos:line="79" pos:column="35">APLOG_ERR<pos:position pos:line="79" pos:column="44"/></name></expr></argument>, <argument><expr><name pos:line="79" pos:column="46">rc<pos:position pos:line="79" pos:column="48"/></name></expr></argument>, <argument><expr><name pos:line="79" pos:column="50">r<pos:position pos:line="79" pos:column="51"/></name></expr></argument>,
                      <argument><expr><literal type="string" pos:line="80" pos:column="23">"couldn't set child process attributes: %s"<pos:position pos:line="80" pos:column="66"/></literal></expr></argument>, <argument><expr><name><name pos:line="80" pos:column="68">r<pos:position pos:line="80" pos:column="69"/></name><operator pos:line="80" pos:column="69">-&gt;<pos:position pos:line="80" pos:column="74"/></operator><name pos:line="80" pos:column="71">filename<pos:position pos:line="80" pos:column="79"/></name></name></expr></argument>)<pos:position pos:line="80" pos:column="80"/></argument_list></call></expr>;<pos:position pos:line="80" pos:column="81"/></expr_stmt>
    }<pos:position pos:line="81" pos:column="6"/></block></then>
    <else pos:line="82" pos:column="5">else <block pos:line="82" pos:column="10">{
        <expr_stmt><expr><name pos:line="83" pos:column="9">procnew<pos:position pos:line="83" pos:column="16"/></name> <operator pos:line="83" pos:column="17">=<pos:position pos:line="83" pos:column="18"/></operator> <call><name pos:line="83" pos:column="19">apr_pcalloc<pos:position pos:line="83" pos:column="30"/></name><argument_list pos:line="83" pos:column="30">(<argument><expr><name pos:line="83" pos:column="31">p<pos:position pos:line="83" pos:column="32"/></name></expr></argument>, <argument><expr><sizeof pos:line="83" pos:column="34">sizeof<argument_list pos:line="83" pos:column="40">(<argument><expr><operator pos:line="83" pos:column="41">*<pos:position pos:line="83" pos:column="42"/></operator><name pos:line="83" pos:column="42">procnew<pos:position pos:line="83" pos:column="49"/></name></expr></argument>)<pos:position pos:line="83" pos:column="50"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="83" pos:column="51"/></argument_list></call></expr>;<pos:position pos:line="83" pos:column="52"/></expr_stmt>
        <expr_stmt><expr><name pos:line="84" pos:column="9">rc<pos:position pos:line="84" pos:column="11"/></name> <operator pos:line="84" pos:column="12">=<pos:position pos:line="84" pos:column="13"/></operator> <call><name pos:line="84" pos:column="14">ap_os_create_privileged_process<pos:position pos:line="84" pos:column="45"/></name><argument_list pos:line="84" pos:column="45">(<argument><expr><name pos:line="84" pos:column="46">r<pos:position pos:line="84" pos:column="47"/></name></expr></argument>, <argument><expr><name pos:line="84" pos:column="49">procnew<pos:position pos:line="84" pos:column="56"/></name></expr></argument>, <argument><expr><name pos:line="84" pos:column="58">command<pos:position pos:line="84" pos:column="65"/></name></expr></argument>, <argument><expr><name pos:line="84" pos:column="67">argv<pos:position pos:line="84" pos:column="71"/></name></expr></argument>, <argument><expr><name pos:line="84" pos:column="73">env<pos:position pos:line="84" pos:column="76"/></name></expr></argument>,
                                             <argument><expr><name pos:line="85" pos:column="46">procattr<pos:position pos:line="85" pos:column="54"/></name></expr></argument>, <argument><expr><name pos:line="85" pos:column="56">p<pos:position pos:line="85" pos:column="57"/></name></expr></argument>)<pos:position pos:line="85" pos:column="58"/></argument_list></call></expr>;<pos:position pos:line="85" pos:column="59"/></expr_stmt>

        <if pos:line="87" pos:column="9">if <condition pos:line="87" pos:column="12">(<expr><name pos:line="87" pos:column="13">rc<pos:position pos:line="87" pos:column="15"/></name> <operator pos:line="87" pos:column="16">!=<pos:position pos:line="87" pos:column="18"/></operator> <name pos:line="87" pos:column="19">APR_SUCCESS<pos:position pos:line="87" pos:column="30"/></name></expr>)<pos:position pos:line="87" pos:column="31"/></condition><then pos:line="87" pos:column="31"> <block pos:line="87" pos:column="32">{
            <comment type="block" pos:line="88" pos:column="13">/* Bad things happened. Everyone should have cleaned up. */</comment>
            <expr_stmt><expr><call><name pos:line="89" pos:column="13">ap_log_rerror<pos:position pos:line="89" pos:column="26"/></name><argument_list pos:line="89" pos:column="26">(<argument><expr><name pos:line="89" pos:column="27">APLOG_MARK<pos:position pos:line="89" pos:column="37"/></name></expr></argument>, <argument><expr><name pos:line="89" pos:column="39">APLOG_ERR<pos:position pos:line="89" pos:column="48"/></name><operator pos:line="89" pos:column="48">|<pos:position pos:line="89" pos:column="49"/></operator><name pos:line="89" pos:column="49">APLOG_TOCLIENT<pos:position pos:line="89" pos:column="63"/></name></expr></argument>, <argument><expr><name pos:line="89" pos:column="65">rc<pos:position pos:line="89" pos:column="67"/></name></expr></argument>, <argument><expr><name pos:line="89" pos:column="69">r<pos:position pos:line="89" pos:column="70"/></name></expr></argument>,
                          <argument><expr><literal type="string" pos:line="90" pos:column="27">"couldn't create child process: %d: %s"<pos:position pos:line="90" pos:column="66"/></literal></expr></argument>, <argument><expr><name pos:line="90" pos:column="68">rc<pos:position pos:line="90" pos:column="70"/></name></expr></argument>,
                          <argument><expr><call><name pos:line="91" pos:column="27">apr_filepath_name_get<pos:position pos:line="91" pos:column="48"/></name><argument_list pos:line="91" pos:column="48">(<argument><expr><name><name pos:line="91" pos:column="49">r<pos:position pos:line="91" pos:column="50"/></name><operator pos:line="91" pos:column="50">-&gt;<pos:position pos:line="91" pos:column="55"/></operator><name pos:line="91" pos:column="52">filename<pos:position pos:line="91" pos:column="60"/></name></name></expr></argument>)<pos:position pos:line="91" pos:column="61"/></argument_list></call></expr></argument>)<pos:position pos:line="91" pos:column="62"/></argument_list></call></expr>;<pos:position pos:line="91" pos:column="63"/></expr_stmt>
        }<pos:position pos:line="92" pos:column="10"/></block></then>
        <else pos:line="93" pos:column="9">else <block pos:line="93" pos:column="14">{
            <expr_stmt><expr><call><name pos:line="94" pos:column="13">apr_pool_note_subprocess<pos:position pos:line="94" pos:column="37"/></name><argument_list pos:line="94" pos:column="37">(<argument><expr><name pos:line="94" pos:column="38">p<pos:position pos:line="94" pos:column="39"/></name></expr></argument>, <argument><expr><name pos:line="94" pos:column="41">procnew<pos:position pos:line="94" pos:column="48"/></name></expr></argument>, <argument><expr><name pos:line="94" pos:column="50">APR_KILL_AFTER_TIMEOUT<pos:position pos:line="94" pos:column="72"/></name></expr></argument>)<pos:position pos:line="94" pos:column="73"/></argument_list></call></expr>;<pos:position pos:line="94" pos:column="74"/></expr_stmt>

            <expr_stmt><expr><operator pos:line="96" pos:column="13">*<pos:position pos:line="96" pos:column="14"/></operator><name pos:line="96" pos:column="14">script_in<pos:position pos:line="96" pos:column="23"/></name> <operator pos:line="96" pos:column="24">=<pos:position pos:line="96" pos:column="25"/></operator> <name><name pos:line="96" pos:column="26">procnew<pos:position pos:line="96" pos:column="33"/></name><operator pos:line="96" pos:column="33">-&gt;<pos:position pos:line="96" pos:column="38"/></operator><name pos:line="96" pos:column="35">out<pos:position pos:line="96" pos:column="38"/></name></name></expr>;<pos:position pos:line="96" pos:column="39"/></expr_stmt>
            <if pos:line="97" pos:column="13">if <condition pos:line="97" pos:column="16">(<expr><operator pos:line="97" pos:column="17">!<pos:position pos:line="97" pos:column="18"/></operator><operator pos:line="97" pos:column="18">*<pos:position pos:line="97" pos:column="19"/></operator><name pos:line="97" pos:column="19">script_in<pos:position pos:line="97" pos:column="28"/></name></expr>)<pos:position pos:line="97" pos:column="29"/></condition><then pos:line="97" pos:column="29">
                <block type="pseudo"><return pos:line="98" pos:column="17">return <expr><name pos:line="98" pos:column="24">APR_EBADF<pos:position pos:line="98" pos:column="33"/></name></expr>;<pos:position pos:line="98" pos:column="34"/></return></block></then></if>
            <expr_stmt><expr><call><name pos:line="99" pos:column="13">apr_file_pipe_timeout_set<pos:position pos:line="99" pos:column="38"/></name><argument_list pos:line="99" pos:column="38">(<argument><expr><operator pos:line="99" pos:column="39">*<pos:position pos:line="99" pos:column="40"/></operator><name pos:line="99" pos:column="40">script_in<pos:position pos:line="99" pos:column="49"/></name></expr></argument>, <argument><expr><name><name pos:line="99" pos:column="51">r<pos:position pos:line="99" pos:column="52"/></name><operator pos:line="99" pos:column="52">-&gt;<pos:position pos:line="99" pos:column="57"/></operator><name pos:line="99" pos:column="54">server<pos:position pos:line="99" pos:column="60"/></name><operator pos:line="99" pos:column="60">-&gt;<pos:position pos:line="99" pos:column="65"/></operator><name pos:line="99" pos:column="62">timeout<pos:position pos:line="99" pos:column="69"/></name></name></expr></argument>)<pos:position pos:line="99" pos:column="70"/></argument_list></call></expr>;<pos:position pos:line="99" pos:column="71"/></expr_stmt>

            <if pos:line="101" pos:column="13">if <condition pos:line="101" pos:column="16">(<expr><name><name pos:line="101" pos:column="17">e_info<pos:position pos:line="101" pos:column="23"/></name><operator pos:line="101" pos:column="23">-&gt;<pos:position pos:line="101" pos:column="28"/></operator><name pos:line="101" pos:column="25">prog_type<pos:position pos:line="101" pos:column="34"/></name></name> <operator pos:line="101" pos:column="35">==<pos:position pos:line="101" pos:column="37"/></operator> <name pos:line="101" pos:column="38">RUN_AS_CGI<pos:position pos:line="101" pos:column="48"/></name></expr>)<pos:position pos:line="101" pos:column="49"/></condition><then pos:line="101" pos:column="49"> <block pos:line="101" pos:column="50">{
                <expr_stmt><expr><operator pos:line="102" pos:column="17">*<pos:position pos:line="102" pos:column="18"/></operator><name pos:line="102" pos:column="18">script_out<pos:position pos:line="102" pos:column="28"/></name> <operator pos:line="102" pos:column="29">=<pos:position pos:line="102" pos:column="30"/></operator> <name><name pos:line="102" pos:column="31">procnew<pos:position pos:line="102" pos:column="38"/></name><operator pos:line="102" pos:column="38">-&gt;<pos:position pos:line="102" pos:column="43"/></operator><name pos:line="102" pos:column="40">in<pos:position pos:line="102" pos:column="42"/></name></name></expr>;<pos:position pos:line="102" pos:column="43"/></expr_stmt>
                <if pos:line="103" pos:column="17">if <condition pos:line="103" pos:column="20">(<expr><operator pos:line="103" pos:column="21">!<pos:position pos:line="103" pos:column="22"/></operator><operator pos:line="103" pos:column="22">*<pos:position pos:line="103" pos:column="23"/></operator><name pos:line="103" pos:column="23">script_out<pos:position pos:line="103" pos:column="33"/></name></expr>)<pos:position pos:line="103" pos:column="34"/></condition><then pos:line="103" pos:column="34">
                    <block type="pseudo"><return pos:line="104" pos:column="21">return <expr><name pos:line="104" pos:column="28">APR_EBADF<pos:position pos:line="104" pos:column="37"/></name></expr>;<pos:position pos:line="104" pos:column="38"/></return></block></then></if>
                <expr_stmt><expr><call><name pos:line="105" pos:column="17">apr_file_pipe_timeout_set<pos:position pos:line="105" pos:column="42"/></name><argument_list pos:line="105" pos:column="42">(<argument><expr><operator pos:line="105" pos:column="43">*<pos:position pos:line="105" pos:column="44"/></operator><name pos:line="105" pos:column="44">script_out<pos:position pos:line="105" pos:column="54"/></name></expr></argument>, <argument><expr><name><name pos:line="105" pos:column="56">r<pos:position pos:line="105" pos:column="57"/></name><operator pos:line="105" pos:column="57">-&gt;<pos:position pos:line="105" pos:column="62"/></operator><name pos:line="105" pos:column="59">server<pos:position pos:line="105" pos:column="65"/></name><operator pos:line="105" pos:column="65">-&gt;<pos:position pos:line="105" pos:column="70"/></operator><name pos:line="105" pos:column="67">timeout<pos:position pos:line="105" pos:column="74"/></name></name></expr></argument>)<pos:position pos:line="105" pos:column="75"/></argument_list></call></expr>;<pos:position pos:line="105" pos:column="76"/></expr_stmt>

                <expr_stmt><expr><operator pos:line="107" pos:column="17">*<pos:position pos:line="107" pos:column="18"/></operator><name pos:line="107" pos:column="18">script_err<pos:position pos:line="107" pos:column="28"/></name> <operator pos:line="107" pos:column="29">=<pos:position pos:line="107" pos:column="30"/></operator> <name><name pos:line="107" pos:column="31">procnew<pos:position pos:line="107" pos:column="38"/></name><operator pos:line="107" pos:column="38">-&gt;<pos:position pos:line="107" pos:column="43"/></operator><name pos:line="107" pos:column="40">err<pos:position pos:line="107" pos:column="43"/></name></name></expr>;<pos:position pos:line="107" pos:column="44"/></expr_stmt>
                <if pos:line="108" pos:column="17">if <condition pos:line="108" pos:column="20">(<expr><operator pos:line="108" pos:column="21">!<pos:position pos:line="108" pos:column="22"/></operator><operator pos:line="108" pos:column="22">*<pos:position pos:line="108" pos:column="23"/></operator><name pos:line="108" pos:column="23">script_err<pos:position pos:line="108" pos:column="33"/></name></expr>)<pos:position pos:line="108" pos:column="34"/></condition><then pos:line="108" pos:column="34">
                    <block type="pseudo"><return pos:line="109" pos:column="21">return <expr><name pos:line="109" pos:column="28">APR_EBADF<pos:position pos:line="109" pos:column="37"/></name></expr>;<pos:position pos:line="109" pos:column="38"/></return></block></then></if>
                <expr_stmt><expr><call><name pos:line="110" pos:column="17">apr_file_pipe_timeout_set<pos:position pos:line="110" pos:column="42"/></name><argument_list pos:line="110" pos:column="42">(<argument><expr><operator pos:line="110" pos:column="43">*<pos:position pos:line="110" pos:column="44"/></operator><name pos:line="110" pos:column="44">script_err<pos:position pos:line="110" pos:column="54"/></name></expr></argument>, <argument><expr><name><name pos:line="110" pos:column="56">r<pos:position pos:line="110" pos:column="57"/></name><operator pos:line="110" pos:column="57">-&gt;<pos:position pos:line="110" pos:column="62"/></operator><name pos:line="110" pos:column="59">server<pos:position pos:line="110" pos:column="65"/></name><operator pos:line="110" pos:column="65">-&gt;<pos:position pos:line="110" pos:column="70"/></operator><name pos:line="110" pos:column="67">timeout<pos:position pos:line="110" pos:column="74"/></name></name></expr></argument>)<pos:position pos:line="110" pos:column="75"/></argument_list></call></expr>;<pos:position pos:line="110" pos:column="76"/></expr_stmt>
            }<pos:position pos:line="111" pos:column="14"/></block></then></if>
        }<pos:position pos:line="112" pos:column="10"/></block></else></if>
    }<pos:position pos:line="113" pos:column="6"/></block></else></if>
    <return pos:line="114" pos:column="5">return <expr><operator pos:line="114" pos:column="12">(<pos:position pos:line="114" pos:column="13"/></operator><name pos:line="114" pos:column="13">rc<pos:position pos:line="114" pos:column="15"/></name><operator pos:line="114" pos:column="15">)<pos:position pos:line="114" pos:column="16"/></operator></expr>;<pos:position pos:line="114" pos:column="17"/></return>
}<pos:position pos:line="115" pos:column="2"/></block></function></unit>

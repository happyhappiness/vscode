<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/httpd/gumtree/httpd_repos_function_2660_httpd-2.2.16.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">int<pos:position pos:line="1" pos:column="11"/></name></type> <name pos:line="1" pos:column="12">select_random<pos:position pos:line="1" pos:column="25"/></name><parameter_list pos:line="1" pos:column="25">(<parameter><decl><type><name pos:line="1" pos:column="26">apr_pool_t<pos:position pos:line="1" pos:column="36"/></name><modifier pos:line="1" pos:column="36">*<pos:position pos:line="1" pos:column="37"/></modifier></type> <name pos:line="1" pos:column="38">pool<pos:position pos:line="1" pos:column="42"/></name></decl></parameter>, <parameter><decl><type><name pos:line="1" pos:column="44">apr_dbd_t<pos:position pos:line="1" pos:column="53"/></name><modifier pos:line="1" pos:column="53">*<pos:position pos:line="1" pos:column="54"/></modifier></type> <name pos:line="1" pos:column="55">handle<pos:position pos:line="1" pos:column="61"/></name></decl></parameter>,
                         <parameter><decl><type><specifier pos:line="2" pos:column="26">const<pos:position pos:line="2" pos:column="31"/></specifier> <name pos:line="2" pos:column="32">apr_dbd_driver_t<pos:position pos:line="2" pos:column="48"/></name><modifier pos:line="2" pos:column="48">*<pos:position pos:line="2" pos:column="49"/></modifier></type> <name pos:line="2" pos:column="50">driver<pos:position pos:line="2" pos:column="56"/></name></decl></parameter>)<pos:position pos:line="2" pos:column="57"/></parameter_list>
<block pos:line="3" pos:column="1">{
    <decl_stmt><decl><type><name pos:line="4" pos:column="5">int<pos:position pos:line="4" pos:column="8"/></name></type> <name pos:line="4" pos:column="9">rv<pos:position pos:line="4" pos:column="11"/></name> <init pos:line="4" pos:column="12">= <expr><literal type="number" pos:line="4" pos:column="14">0<pos:position pos:line="4" pos:column="15"/></literal></expr></init></decl>;<pos:position pos:line="4" pos:column="16"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="5" pos:column="5">int<pos:position pos:line="5" pos:column="8"/></name></type> <name pos:line="5" pos:column="9">n<pos:position pos:line="5" pos:column="10"/></name></decl>;<pos:position pos:line="5" pos:column="11"/></decl_stmt>
    <decl_stmt><decl><type><specifier pos:line="6" pos:column="5">const<pos:position pos:line="6" pos:column="10"/></specifier> <name pos:line="6" pos:column="11">char<pos:position pos:line="6" pos:column="15"/></name><modifier pos:line="6" pos:column="15">*<pos:position pos:line="6" pos:column="16"/></modifier></type> <name pos:line="6" pos:column="17">entry<pos:position pos:line="6" pos:column="22"/></name></decl>;<pos:position pos:line="6" pos:column="23"/></decl_stmt>
    <decl_stmt><decl><type><specifier pos:line="7" pos:column="5">const<pos:position pos:line="7" pos:column="10"/></specifier> <name pos:line="7" pos:column="11">char<pos:position pos:line="7" pos:column="15"/></name><modifier pos:line="7" pos:column="15">*<pos:position pos:line="7" pos:column="16"/></modifier></type> <name pos:line="7" pos:column="17">statement<pos:position pos:line="7" pos:column="26"/></name> <init pos:line="7" pos:column="27">= <expr><literal type="string" pos:line="7" pos:column="29">"SELECT * FROM apr_dbd_test ORDER BY col1, col2"<pos:position pos:line="7" pos:column="77"/></literal></expr></init></decl>;<pos:position pos:line="7" pos:column="78"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="8" pos:column="5">apr_dbd_results_t<pos:position pos:line="8" pos:column="22"/></name> <modifier pos:line="8" pos:column="23">*<pos:position pos:line="8" pos:column="24"/></modifier></type><name pos:line="8" pos:column="24">res<pos:position pos:line="8" pos:column="27"/></name> <init pos:line="8" pos:column="28">= <expr><name pos:line="8" pos:column="30">NULL<pos:position pos:line="8" pos:column="34"/></name></expr></init></decl>;<pos:position pos:line="8" pos:column="35"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="9" pos:column="5">apr_dbd_row_t<pos:position pos:line="9" pos:column="18"/></name> <modifier pos:line="9" pos:column="19">*<pos:position pos:line="9" pos:column="20"/></modifier></type><name pos:line="9" pos:column="20">row<pos:position pos:line="9" pos:column="23"/></name> <init pos:line="9" pos:column="24">= <expr><name pos:line="9" pos:column="26">NULL<pos:position pos:line="9" pos:column="30"/></name></expr></init></decl>;<pos:position pos:line="9" pos:column="31"/></decl_stmt>
    <expr_stmt><expr><name pos:line="10" pos:column="5">rv<pos:position pos:line="10" pos:column="7"/></name> <operator pos:line="10" pos:column="8">=<pos:position pos:line="10" pos:column="9"/></operator> <call><name pos:line="10" pos:column="10">apr_dbd_select<pos:position pos:line="10" pos:column="24"/></name><argument_list pos:line="10" pos:column="24">(<argument><expr><name pos:line="10" pos:column="25">driver<pos:position pos:line="10" pos:column="31"/></name></expr></argument>,<argument><expr><name pos:line="10" pos:column="32">pool<pos:position pos:line="10" pos:column="36"/></name></expr></argument>,<argument><expr><name pos:line="10" pos:column="37">handle<pos:position pos:line="10" pos:column="43"/></name></expr></argument>,<argument><expr><operator pos:line="10" pos:column="44">&amp;<pos:position pos:line="10" pos:column="49"/></operator><name pos:line="10" pos:column="45">res<pos:position pos:line="10" pos:column="48"/></name></expr></argument>,<argument><expr><name pos:line="10" pos:column="49">statement<pos:position pos:line="10" pos:column="58"/></name></expr></argument>,<argument><expr><literal type="number" pos:line="10" pos:column="59">1<pos:position pos:line="10" pos:column="60"/></literal></expr></argument>)<pos:position pos:line="10" pos:column="61"/></argument_list></call></expr>;<pos:position pos:line="10" pos:column="62"/></expr_stmt>
    <if pos:line="11" pos:column="5">if <condition pos:line="11" pos:column="8">(<expr><name pos:line="11" pos:column="9">rv<pos:position pos:line="11" pos:column="11"/></name></expr>)<pos:position pos:line="11" pos:column="12"/></condition><then pos:line="11" pos:column="12"> <block pos:line="11" pos:column="13">{
        <expr_stmt><expr><call><name pos:line="12" pos:column="9">printf<pos:position pos:line="12" pos:column="15"/></name><argument_list pos:line="12" pos:column="15">(<argument><expr><literal type="string" pos:line="12" pos:column="16">"Select failed: %s"<pos:position pos:line="12" pos:column="35"/></literal></expr></argument>, <argument><expr><call><name pos:line="12" pos:column="37">apr_dbd_error<pos:position pos:line="12" pos:column="50"/></name><argument_list pos:line="12" pos:column="50">(<argument><expr><name pos:line="12" pos:column="51">driver<pos:position pos:line="12" pos:column="57"/></name></expr></argument>, <argument><expr><name pos:line="12" pos:column="59">handle<pos:position pos:line="12" pos:column="65"/></name></expr></argument>, <argument><expr><name pos:line="12" pos:column="67">rv<pos:position pos:line="12" pos:column="69"/></name></expr></argument>)<pos:position pos:line="12" pos:column="70"/></argument_list></call></expr></argument>)<pos:position pos:line="12" pos:column="71"/></argument_list></call></expr>;<pos:position pos:line="12" pos:column="72"/></expr_stmt>
        <return pos:line="13" pos:column="9">return <expr><name pos:line="13" pos:column="16">rv<pos:position pos:line="13" pos:column="18"/></name></expr>;<pos:position pos:line="13" pos:column="19"/></return>
    }<pos:position pos:line="14" pos:column="6"/></block></then></if>
    <expr_stmt><expr><name pos:line="15" pos:column="5">rv<pos:position pos:line="15" pos:column="7"/></name> <operator pos:line="15" pos:column="8">=<pos:position pos:line="15" pos:column="9"/></operator> <call><name pos:line="15" pos:column="10">apr_dbd_get_row<pos:position pos:line="15" pos:column="25"/></name><argument_list pos:line="15" pos:column="25">(<argument><expr><name pos:line="15" pos:column="26">driver<pos:position pos:line="15" pos:column="32"/></name></expr></argument>, <argument><expr><name pos:line="15" pos:column="34">pool<pos:position pos:line="15" pos:column="38"/></name></expr></argument>, <argument><expr><name pos:line="15" pos:column="40">res<pos:position pos:line="15" pos:column="43"/></name></expr></argument>, <argument><expr><operator pos:line="15" pos:column="45">&amp;<pos:position pos:line="15" pos:column="50"/></operator><name pos:line="15" pos:column="46">row<pos:position pos:line="15" pos:column="49"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="15" pos:column="51">5<pos:position pos:line="15" pos:column="52"/></literal></expr></argument>)<pos:position pos:line="15" pos:column="53"/></argument_list></call></expr> ;<pos:position pos:line="15" pos:column="55"/></expr_stmt>
    <if pos:line="16" pos:column="5">if <condition pos:line="16" pos:column="8">(<expr><name pos:line="16" pos:column="9">rv<pos:position pos:line="16" pos:column="11"/></name></expr>)<pos:position pos:line="16" pos:column="12"/></condition><then pos:line="16" pos:column="12"> <block pos:line="16" pos:column="13">{
        <expr_stmt><expr><call><name pos:line="17" pos:column="9">printf<pos:position pos:line="17" pos:column="15"/></name><argument_list pos:line="17" pos:column="15">(<argument><expr><literal type="string" pos:line="17" pos:column="16">"get_row failed: %s"<pos:position pos:line="17" pos:column="36"/></literal></expr></argument>, <argument><expr><call><name pos:line="17" pos:column="38">apr_dbd_error<pos:position pos:line="17" pos:column="51"/></name><argument_list pos:line="17" pos:column="51">(<argument><expr><name pos:line="17" pos:column="52">driver<pos:position pos:line="17" pos:column="58"/></name></expr></argument>, <argument><expr><name pos:line="17" pos:column="60">handle<pos:position pos:line="17" pos:column="66"/></name></expr></argument>, <argument><expr><name pos:line="17" pos:column="68">rv<pos:position pos:line="17" pos:column="70"/></name></expr></argument>)<pos:position pos:line="17" pos:column="71"/></argument_list></call></expr></argument>)<pos:position pos:line="17" pos:column="72"/></argument_list></call></expr>;<pos:position pos:line="17" pos:column="73"/></expr_stmt>
        <return pos:line="18" pos:column="9">return <expr><name pos:line="18" pos:column="16">rv<pos:position pos:line="18" pos:column="18"/></name></expr>;<pos:position pos:line="18" pos:column="19"/></return>
    }<pos:position pos:line="19" pos:column="6"/></block></then></if>
    <expr_stmt><expr><call><name pos:line="20" pos:column="5">printf<pos:position pos:line="20" pos:column="11"/></name><argument_list pos:line="20" pos:column="11">(<argument><expr><literal type="string" pos:line="20" pos:column="12">"ROW 5:	"<pos:position pos:line="20" pos:column="21"/></literal></expr></argument>)<pos:position pos:line="20" pos:column="27"/></argument_list></call></expr>;<pos:position pos:line="20" pos:column="28"/></expr_stmt>
    <for pos:line="21" pos:column="5">for <control pos:line="21" pos:column="9">(<init><expr><name pos:line="21" pos:column="10">n<pos:position pos:line="21" pos:column="11"/></name> <operator pos:line="21" pos:column="12">=<pos:position pos:line="21" pos:column="13"/></operator> <literal type="number" pos:line="21" pos:column="14">0<pos:position pos:line="21" pos:column="15"/></literal></expr>;<pos:position pos:line="21" pos:column="16"/></init> <condition><expr><name pos:line="21" pos:column="17">n<pos:position pos:line="21" pos:column="18"/></name> <operator pos:line="21" pos:column="19">&lt;<pos:position pos:line="21" pos:column="23"/></operator> <call><name pos:line="21" pos:column="21">apr_dbd_num_cols<pos:position pos:line="21" pos:column="37"/></name><argument_list pos:line="21" pos:column="37">(<argument><expr><name pos:line="21" pos:column="38">driver<pos:position pos:line="21" pos:column="44"/></name></expr></argument>, <argument><expr><name pos:line="21" pos:column="46">res<pos:position pos:line="21" pos:column="49"/></name></expr></argument>)<pos:position pos:line="21" pos:column="50"/></argument_list></call></expr>;<pos:position pos:line="21" pos:column="51"/></condition> <incr><expr><operator pos:line="21" pos:column="52">++<pos:position pos:line="21" pos:column="54"/></operator><name pos:line="21" pos:column="54">n<pos:position pos:line="21" pos:column="55"/></name></expr></incr>)<pos:position pos:line="21" pos:column="56"/></control> <block pos:line="21" pos:column="57">{
        <expr_stmt><expr><name pos:line="22" pos:column="9">entry<pos:position pos:line="22" pos:column="14"/></name> <operator pos:line="22" pos:column="15">=<pos:position pos:line="22" pos:column="16"/></operator> <call><name pos:line="22" pos:column="17">apr_dbd_get_entry<pos:position pos:line="22" pos:column="34"/></name><argument_list pos:line="22" pos:column="34">(<argument><expr><name pos:line="22" pos:column="35">driver<pos:position pos:line="22" pos:column="41"/></name></expr></argument>, <argument><expr><name pos:line="22" pos:column="43">row<pos:position pos:line="22" pos:column="46"/></name></expr></argument>, <argument><expr><name pos:line="22" pos:column="48">n<pos:position pos:line="22" pos:column="49"/></name></expr></argument>)<pos:position pos:line="22" pos:column="50"/></argument_list></call></expr>;<pos:position pos:line="22" pos:column="51"/></expr_stmt>
        <if pos:line="23" pos:column="9">if <condition pos:line="23" pos:column="12">(<expr><name pos:line="23" pos:column="13">entry<pos:position pos:line="23" pos:column="18"/></name> <operator pos:line="23" pos:column="19">==<pos:position pos:line="23" pos:column="21"/></operator> <name pos:line="23" pos:column="22">NULL<pos:position pos:line="23" pos:column="26"/></name></expr>)<pos:position pos:line="23" pos:column="27"/></condition><then pos:line="23" pos:column="27"> <block pos:line="23" pos:column="28">{
            <expr_stmt><expr><call><name pos:line="24" pos:column="13">printf<pos:position pos:line="24" pos:column="19"/></name><argument_list pos:line="24" pos:column="19">(<argument><expr><literal type="string" pos:line="24" pos:column="20">"(null)	"<pos:position pos:line="24" pos:column="29"/></literal></expr></argument>)<pos:position pos:line="24" pos:column="35"/></argument_list></call></expr> ;<pos:position pos:line="24" pos:column="37"/></expr_stmt>
        }<pos:position pos:line="25" pos:column="10"/></block></then>
        <else pos:line="26" pos:column="9">else <block pos:line="26" pos:column="14">{
            <expr_stmt><expr><call><name pos:line="27" pos:column="13">printf<pos:position pos:line="27" pos:column="19"/></name><argument_list pos:line="27" pos:column="19">(<argument><expr><literal type="string" pos:line="27" pos:column="20">"%s	"<pos:position pos:line="27" pos:column="25"/></literal></expr></argument>, <argument><expr><name pos:line="27" pos:column="28">entry<pos:position pos:line="27" pos:column="33"/></name></expr></argument>)<pos:position pos:line="27" pos:column="34"/></argument_list></call></expr>;<pos:position pos:line="27" pos:column="35"/></expr_stmt>
        }<pos:position pos:line="28" pos:column="10"/></block></else></if>
    }<pos:position pos:line="29" pos:column="6"/></block></for>
    <expr_stmt><expr><call><name pos:line="30" pos:column="5">fputs<pos:position pos:line="30" pos:column="10"/></name><argument_list pos:line="30" pos:column="10">(<argument><expr><literal type="string" pos:line="30" pos:column="11">"\n"<pos:position pos:line="30" pos:column="15"/></literal></expr></argument>, <argument><expr><name pos:line="30" pos:column="17">stdout<pos:position pos:line="30" pos:column="23"/></name></expr></argument>)<pos:position pos:line="30" pos:column="24"/></argument_list></call></expr>;<pos:position pos:line="30" pos:column="25"/></expr_stmt>
    <expr_stmt><expr><name pos:line="31" pos:column="5">rv<pos:position pos:line="31" pos:column="7"/></name> <operator pos:line="31" pos:column="8">=<pos:position pos:line="31" pos:column="9"/></operator> <call><name pos:line="31" pos:column="10">apr_dbd_get_row<pos:position pos:line="31" pos:column="25"/></name><argument_list pos:line="31" pos:column="25">(<argument><expr><name pos:line="31" pos:column="26">driver<pos:position pos:line="31" pos:column="32"/></name></expr></argument>, <argument><expr><name pos:line="31" pos:column="34">pool<pos:position pos:line="31" pos:column="38"/></name></expr></argument>, <argument><expr><name pos:line="31" pos:column="40">res<pos:position pos:line="31" pos:column="43"/></name></expr></argument>, <argument><expr><operator pos:line="31" pos:column="45">&amp;<pos:position pos:line="31" pos:column="50"/></operator><name pos:line="31" pos:column="46">row<pos:position pos:line="31" pos:column="49"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="31" pos:column="51">1<pos:position pos:line="31" pos:column="52"/></literal></expr></argument>)<pos:position pos:line="31" pos:column="53"/></argument_list></call></expr> ;<pos:position pos:line="31" pos:column="55"/></expr_stmt>
    <if pos:line="32" pos:column="5">if <condition pos:line="32" pos:column="8">(<expr><name pos:line="32" pos:column="9">rv<pos:position pos:line="32" pos:column="11"/></name></expr>)<pos:position pos:line="32" pos:column="12"/></condition><then pos:line="32" pos:column="12"> <block pos:line="32" pos:column="13">{
        <expr_stmt><expr><call><name pos:line="33" pos:column="9">printf<pos:position pos:line="33" pos:column="15"/></name><argument_list pos:line="33" pos:column="15">(<argument><expr><literal type="string" pos:line="33" pos:column="16">"get_row failed: %s"<pos:position pos:line="33" pos:column="36"/></literal></expr></argument>, <argument><expr><call><name pos:line="33" pos:column="38">apr_dbd_error<pos:position pos:line="33" pos:column="51"/></name><argument_list pos:line="33" pos:column="51">(<argument><expr><name pos:line="33" pos:column="52">driver<pos:position pos:line="33" pos:column="58"/></name></expr></argument>, <argument><expr><name pos:line="33" pos:column="60">handle<pos:position pos:line="33" pos:column="66"/></name></expr></argument>, <argument><expr><name pos:line="33" pos:column="68">rv<pos:position pos:line="33" pos:column="70"/></name></expr></argument>)<pos:position pos:line="33" pos:column="71"/></argument_list></call></expr></argument>)<pos:position pos:line="33" pos:column="72"/></argument_list></call></expr>;<pos:position pos:line="33" pos:column="73"/></expr_stmt>
        <return pos:line="34" pos:column="9">return <expr><name pos:line="34" pos:column="16">rv<pos:position pos:line="34" pos:column="18"/></name></expr>;<pos:position pos:line="34" pos:column="19"/></return>
    }<pos:position pos:line="35" pos:column="6"/></block></then></if>
    <expr_stmt><expr><call><name pos:line="36" pos:column="5">printf<pos:position pos:line="36" pos:column="11"/></name><argument_list pos:line="36" pos:column="11">(<argument><expr><literal type="string" pos:line="36" pos:column="12">"ROW 1:	"<pos:position pos:line="36" pos:column="21"/></literal></expr></argument>)<pos:position pos:line="36" pos:column="27"/></argument_list></call></expr>;<pos:position pos:line="36" pos:column="28"/></expr_stmt>
    <for pos:line="37" pos:column="5">for <control pos:line="37" pos:column="9">(<init><expr><name pos:line="37" pos:column="10">n<pos:position pos:line="37" pos:column="11"/></name> <operator pos:line="37" pos:column="12">=<pos:position pos:line="37" pos:column="13"/></operator> <literal type="number" pos:line="37" pos:column="14">0<pos:position pos:line="37" pos:column="15"/></literal></expr>;<pos:position pos:line="37" pos:column="16"/></init> <condition><expr><name pos:line="37" pos:column="17">n<pos:position pos:line="37" pos:column="18"/></name> <operator pos:line="37" pos:column="19">&lt;<pos:position pos:line="37" pos:column="23"/></operator> <call><name pos:line="37" pos:column="21">apr_dbd_num_cols<pos:position pos:line="37" pos:column="37"/></name><argument_list pos:line="37" pos:column="37">(<argument><expr><name pos:line="37" pos:column="38">driver<pos:position pos:line="37" pos:column="44"/></name></expr></argument>, <argument><expr><name pos:line="37" pos:column="46">res<pos:position pos:line="37" pos:column="49"/></name></expr></argument>)<pos:position pos:line="37" pos:column="50"/></argument_list></call></expr>;<pos:position pos:line="37" pos:column="51"/></condition> <incr><expr><operator pos:line="37" pos:column="52">++<pos:position pos:line="37" pos:column="54"/></operator><name pos:line="37" pos:column="54">n<pos:position pos:line="37" pos:column="55"/></name></expr></incr>)<pos:position pos:line="37" pos:column="56"/></control> <block pos:line="37" pos:column="57">{
        <expr_stmt><expr><name pos:line="38" pos:column="9">entry<pos:position pos:line="38" pos:column="14"/></name> <operator pos:line="38" pos:column="15">=<pos:position pos:line="38" pos:column="16"/></operator> <call><name pos:line="38" pos:column="17">apr_dbd_get_entry<pos:position pos:line="38" pos:column="34"/></name><argument_list pos:line="38" pos:column="34">(<argument><expr><name pos:line="38" pos:column="35">driver<pos:position pos:line="38" pos:column="41"/></name></expr></argument>, <argument><expr><name pos:line="38" pos:column="43">row<pos:position pos:line="38" pos:column="46"/></name></expr></argument>, <argument><expr><name pos:line="38" pos:column="48">n<pos:position pos:line="38" pos:column="49"/></name></expr></argument>)<pos:position pos:line="38" pos:column="50"/></argument_list></call></expr>;<pos:position pos:line="38" pos:column="51"/></expr_stmt>
        <if pos:line="39" pos:column="9">if <condition pos:line="39" pos:column="12">(<expr><name pos:line="39" pos:column="13">entry<pos:position pos:line="39" pos:column="18"/></name> <operator pos:line="39" pos:column="19">==<pos:position pos:line="39" pos:column="21"/></operator> <name pos:line="39" pos:column="22">NULL<pos:position pos:line="39" pos:column="26"/></name></expr>)<pos:position pos:line="39" pos:column="27"/></condition><then pos:line="39" pos:column="27"> <block pos:line="39" pos:column="28">{
            <expr_stmt><expr><call><name pos:line="40" pos:column="13">printf<pos:position pos:line="40" pos:column="19"/></name><argument_list pos:line="40" pos:column="19">(<argument><expr><literal type="string" pos:line="40" pos:column="20">"(null)	"<pos:position pos:line="40" pos:column="29"/></literal></expr></argument>)<pos:position pos:line="40" pos:column="35"/></argument_list></call></expr> ;<pos:position pos:line="40" pos:column="37"/></expr_stmt>
        }<pos:position pos:line="41" pos:column="10"/></block></then>
        <else pos:line="42" pos:column="9">else <block pos:line="42" pos:column="14">{
            <expr_stmt><expr><call><name pos:line="43" pos:column="13">printf<pos:position pos:line="43" pos:column="19"/></name><argument_list pos:line="43" pos:column="19">(<argument><expr><literal type="string" pos:line="43" pos:column="20">"%s	"<pos:position pos:line="43" pos:column="25"/></literal></expr></argument>, <argument><expr><name pos:line="43" pos:column="28">entry<pos:position pos:line="43" pos:column="33"/></name></expr></argument>)<pos:position pos:line="43" pos:column="34"/></argument_list></call></expr>;<pos:position pos:line="43" pos:column="35"/></expr_stmt>
        }<pos:position pos:line="44" pos:column="10"/></block></else></if>
    }<pos:position pos:line="45" pos:column="6"/></block></for>
    <expr_stmt><expr><call><name pos:line="46" pos:column="5">fputs<pos:position pos:line="46" pos:column="10"/></name><argument_list pos:line="46" pos:column="10">(<argument><expr><literal type="string" pos:line="46" pos:column="11">"\n"<pos:position pos:line="46" pos:column="15"/></literal></expr></argument>, <argument><expr><name pos:line="46" pos:column="17">stdout<pos:position pos:line="46" pos:column="23"/></name></expr></argument>)<pos:position pos:line="46" pos:column="24"/></argument_list></call></expr>;<pos:position pos:line="46" pos:column="25"/></expr_stmt>
    <expr_stmt><expr><name pos:line="47" pos:column="5">rv<pos:position pos:line="47" pos:column="7"/></name> <operator pos:line="47" pos:column="8">=<pos:position pos:line="47" pos:column="9"/></operator> <call><name pos:line="47" pos:column="10">apr_dbd_get_row<pos:position pos:line="47" pos:column="25"/></name><argument_list pos:line="47" pos:column="25">(<argument><expr><name pos:line="47" pos:column="26">driver<pos:position pos:line="47" pos:column="32"/></name></expr></argument>, <argument><expr><name pos:line="47" pos:column="34">pool<pos:position pos:line="47" pos:column="38"/></name></expr></argument>, <argument><expr><name pos:line="47" pos:column="40">res<pos:position pos:line="47" pos:column="43"/></name></expr></argument>, <argument><expr><operator pos:line="47" pos:column="45">&amp;<pos:position pos:line="47" pos:column="50"/></operator><name pos:line="47" pos:column="46">row<pos:position pos:line="47" pos:column="49"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="47" pos:column="51">11<pos:position pos:line="47" pos:column="53"/></literal></expr></argument>)<pos:position pos:line="47" pos:column="54"/></argument_list></call></expr> ;<pos:position pos:line="47" pos:column="56"/></expr_stmt>
    <if pos:line="48" pos:column="5">if <condition pos:line="48" pos:column="8">(<expr><name pos:line="48" pos:column="9">rv<pos:position pos:line="48" pos:column="11"/></name> <operator pos:line="48" pos:column="12">!=<pos:position pos:line="48" pos:column="14"/></operator> <operator pos:line="48" pos:column="15">-<pos:position pos:line="48" pos:column="16"/></operator><literal type="number" pos:line="48" pos:column="16">1<pos:position pos:line="48" pos:column="17"/></literal></expr>)<pos:position pos:line="48" pos:column="18"/></condition><then pos:line="48" pos:column="18"> <block pos:line="48" pos:column="19">{
        <expr_stmt><expr><call><name pos:line="49" pos:column="9">printf<pos:position pos:line="49" pos:column="15"/></name><argument_list pos:line="49" pos:column="15">(<argument><expr><literal type="string" pos:line="49" pos:column="16">"Oops!  get_row out of range but thinks it succeeded!\n%s\n"<pos:position pos:line="49" pos:column="76"/></literal></expr></argument>,
                <argument><expr><call><name pos:line="50" pos:column="17">apr_dbd_error<pos:position pos:line="50" pos:column="30"/></name><argument_list pos:line="50" pos:column="30">(<argument><expr><name pos:line="50" pos:column="31">driver<pos:position pos:line="50" pos:column="37"/></name></expr></argument>, <argument><expr><name pos:line="50" pos:column="39">handle<pos:position pos:line="50" pos:column="45"/></name></expr></argument>, <argument><expr><name pos:line="50" pos:column="47">rv<pos:position pos:line="50" pos:column="49"/></name></expr></argument>)<pos:position pos:line="50" pos:column="50"/></argument_list></call></expr></argument>)<pos:position pos:line="50" pos:column="51"/></argument_list></call></expr>;<pos:position pos:line="50" pos:column="52"/></expr_stmt>
        <return pos:line="51" pos:column="9">return <expr><operator pos:line="51" pos:column="16">-<pos:position pos:line="51" pos:column="17"/></operator><literal type="number" pos:line="51" pos:column="17">1<pos:position pos:line="51" pos:column="18"/></literal></expr>;<pos:position pos:line="51" pos:column="19"/></return>
    }<pos:position pos:line="52" pos:column="6"/></block></then></if>
    <expr_stmt><expr><name pos:line="53" pos:column="5">rv<pos:position pos:line="53" pos:column="7"/></name> <operator pos:line="53" pos:column="8">=<pos:position pos:line="53" pos:column="9"/></operator> <literal type="number" pos:line="53" pos:column="10">0<pos:position pos:line="53" pos:column="11"/></literal></expr>;<pos:position pos:line="53" pos:column="12"/></expr_stmt>

    <return pos:line="55" pos:column="5">return <expr><name pos:line="55" pos:column="12">rv<pos:position pos:line="55" pos:column="14"/></name></expr>;<pos:position pos:line="55" pos:column="15"/></return>
}<pos:position pos:line="56" pos:column="2"/></block></function></unit>

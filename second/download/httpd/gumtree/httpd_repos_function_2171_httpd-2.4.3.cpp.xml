<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/httpd/gumtree/httpd_repos_function_2171_httpd-2.4.3.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">apr_status_t<pos:position pos:line="1" pos:column="20"/></name></type> <name pos:line="1" pos:column="21">handle_flastmod<pos:position pos:line="1" pos:column="36"/></name><parameter_list pos:line="1" pos:column="36">(<parameter><decl><type><name pos:line="1" pos:column="37">include_ctx_t<pos:position pos:line="1" pos:column="50"/></name> <modifier pos:line="1" pos:column="51">*<pos:position pos:line="1" pos:column="52"/></modifier></type><name pos:line="1" pos:column="52">ctx<pos:position pos:line="1" pos:column="55"/></name></decl></parameter>, <parameter><decl><type><name pos:line="1" pos:column="57">ap_filter_t<pos:position pos:line="1" pos:column="68"/></name> <modifier pos:line="1" pos:column="69">*<pos:position pos:line="1" pos:column="70"/></modifier></type><name pos:line="1" pos:column="70">f<pos:position pos:line="1" pos:column="71"/></name></decl></parameter>,
                                    <parameter><decl><type><name pos:line="2" pos:column="37">apr_bucket_brigade<pos:position pos:line="2" pos:column="55"/></name> <modifier pos:line="2" pos:column="56">*<pos:position pos:line="2" pos:column="57"/></modifier></type><name pos:line="2" pos:column="57">bb<pos:position pos:line="2" pos:column="59"/></name></decl></parameter>)<pos:position pos:line="2" pos:column="60"/></parameter_list>
<block pos:line="3" pos:column="1">{
    <decl_stmt><decl><type><name pos:line="4" pos:column="5">request_rec<pos:position pos:line="4" pos:column="16"/></name> <modifier pos:line="4" pos:column="17">*<pos:position pos:line="4" pos:column="18"/></modifier></type><name pos:line="4" pos:column="18">r<pos:position pos:line="4" pos:column="19"/></name> <init pos:line="4" pos:column="20">= <expr><name><name pos:line="4" pos:column="22">f<pos:position pos:line="4" pos:column="23"/></name><operator pos:line="4" pos:column="23">-&gt;<pos:position pos:line="4" pos:column="28"/></operator><name pos:line="4" pos:column="25">r<pos:position pos:line="4" pos:column="26"/></name></name></expr></init></decl>;<pos:position pos:line="4" pos:column="27"/></decl_stmt>

    <if pos:line="6" pos:column="5">if <condition pos:line="6" pos:column="8">(<expr><operator pos:line="6" pos:column="9">!<pos:position pos:line="6" pos:column="10"/></operator><name><name pos:line="6" pos:column="10">ctx<pos:position pos:line="6" pos:column="13"/></name><operator pos:line="6" pos:column="13">-&gt;<pos:position pos:line="6" pos:column="18"/></operator><name pos:line="6" pos:column="15">argc<pos:position pos:line="6" pos:column="19"/></name></name></expr>)<pos:position pos:line="6" pos:column="20"/></condition><then pos:line="6" pos:column="20"> <block pos:line="6" pos:column="21">{
        <expr_stmt><expr><call><name pos:line="7" pos:column="9">ap_log_rerror<pos:position pos:line="7" pos:column="22"/></name><argument_list pos:line="7" pos:column="22">(<argument><expr><name pos:line="7" pos:column="23">APLOG_MARK<pos:position pos:line="7" pos:column="33"/></name></expr></argument>,
                      <argument><expr><ternary><condition><expr><operator pos:line="8" pos:column="23">(<pos:position pos:line="8" pos:column="24"/></operator><name><name pos:line="8" pos:column="24">ctx<pos:position pos:line="8" pos:column="27"/></name><operator pos:line="8" pos:column="27">-&gt;<pos:position pos:line="8" pos:column="32"/></operator><name pos:line="8" pos:column="29">flags<pos:position pos:line="8" pos:column="34"/></name></name> <operator pos:line="8" pos:column="35">&amp;<pos:position pos:line="8" pos:column="40"/></operator> <name pos:line="8" pos:column="37">SSI_FLAG_PRINTING<pos:position pos:line="8" pos:column="54"/></name><operator pos:line="8" pos:column="54">)<pos:position pos:line="8" pos:column="55"/></operator></expr>
                          ?<pos:position pos:line="9" pos:column="28"/></condition><then pos:line="9" pos:column="28"> <expr><name pos:line="9" pos:column="29">APLOG_ERR<pos:position pos:line="9" pos:column="38"/></name></expr> <pos:position pos:line="9" pos:column="39"/></then><else pos:line="9" pos:column="39">: <expr><name pos:line="9" pos:column="41">APLOG_WARNING<pos:position pos:line="9" pos:column="54"/></name></expr></else></ternary></expr></argument>,
                      <argument><expr><literal type="number" pos:line="10" pos:column="23">0<pos:position pos:line="10" pos:column="24"/></literal></expr></argument>, <argument><expr><name pos:line="10" pos:column="26">r<pos:position pos:line="10" pos:column="27"/></name></expr></argument>, <argument><expr><call><name pos:line="10" pos:column="29">APLOGNO<pos:position pos:line="10" pos:column="36"/></name><argument_list pos:line="10" pos:column="36">(<argument><expr><literal type="number" pos:line="10" pos:column="37">01351<pos:position pos:line="10" pos:column="42"/></literal></expr></argument>)<pos:position pos:line="10" pos:column="43"/></argument_list></call>
                      <literal type="string" pos:line="11" pos:column="23">"missing argument for flastmod element in %s"<pos:position pos:line="11" pos:column="68"/></literal></expr></argument>,
                      <argument><expr><name><name pos:line="12" pos:column="23">r<pos:position pos:line="12" pos:column="24"/></name><operator pos:line="12" pos:column="24">-&gt;<pos:position pos:line="12" pos:column="29"/></operator><name pos:line="12" pos:column="26">filename<pos:position pos:line="12" pos:column="34"/></name></name></expr></argument>)<pos:position pos:line="12" pos:column="35"/></argument_list></call></expr>;<pos:position pos:line="12" pos:column="36"/></expr_stmt>
    }<pos:position pos:line="13" pos:column="6"/></block></then></if>

    <if pos:line="15" pos:column="5">if <condition pos:line="15" pos:column="8">(<expr><operator pos:line="15" pos:column="9">!<pos:position pos:line="15" pos:column="10"/></operator><operator pos:line="15" pos:column="10">(<pos:position pos:line="15" pos:column="11"/></operator><name><name pos:line="15" pos:column="11">ctx<pos:position pos:line="15" pos:column="14"/></name><operator pos:line="15" pos:column="14">-&gt;<pos:position pos:line="15" pos:column="19"/></operator><name pos:line="15" pos:column="16">flags<pos:position pos:line="15" pos:column="21"/></name></name> <operator pos:line="15" pos:column="22">&amp;<pos:position pos:line="15" pos:column="27"/></operator> <name pos:line="15" pos:column="24">SSI_FLAG_PRINTING<pos:position pos:line="15" pos:column="41"/></name><operator pos:line="15" pos:column="41">)<pos:position pos:line="15" pos:column="42"/></operator></expr>)<pos:position pos:line="15" pos:column="43"/></condition><then pos:line="15" pos:column="43"> <block pos:line="15" pos:column="44">{
        <return pos:line="16" pos:column="9">return <expr><name pos:line="16" pos:column="16">APR_SUCCESS<pos:position pos:line="16" pos:column="27"/></name></expr>;<pos:position pos:line="16" pos:column="28"/></return>
    }<pos:position pos:line="17" pos:column="6"/></block></then></if>

    <if pos:line="19" pos:column="5">if <condition pos:line="19" pos:column="8">(<expr><operator pos:line="19" pos:column="9">!<pos:position pos:line="19" pos:column="10"/></operator><name><name pos:line="19" pos:column="10">ctx<pos:position pos:line="19" pos:column="13"/></name><operator pos:line="19" pos:column="13">-&gt;<pos:position pos:line="19" pos:column="18"/></operator><name pos:line="19" pos:column="15">argc<pos:position pos:line="19" pos:column="19"/></name></name></expr>)<pos:position pos:line="19" pos:column="20"/></condition><then pos:line="19" pos:column="20"> <block pos:line="19" pos:column="21">{
        <expr_stmt><expr><call><name pos:line="20" pos:column="9">SSI_CREATE_ERROR_BUCKET<pos:position pos:line="20" pos:column="32"/></name><argument_list pos:line="20" pos:column="32">(<argument><expr><name pos:line="20" pos:column="33">ctx<pos:position pos:line="20" pos:column="36"/></name></expr></argument>, <argument><expr><name pos:line="20" pos:column="38">f<pos:position pos:line="20" pos:column="39"/></name></expr></argument>, <argument><expr><name pos:line="20" pos:column="41">bb<pos:position pos:line="20" pos:column="43"/></name></expr></argument>)<pos:position pos:line="20" pos:column="44"/></argument_list></call></expr>;<pos:position pos:line="20" pos:column="45"/></expr_stmt>
        <return pos:line="21" pos:column="9">return <expr><name pos:line="21" pos:column="16">APR_SUCCESS<pos:position pos:line="21" pos:column="27"/></name></expr>;<pos:position pos:line="21" pos:column="28"/></return>
    }<pos:position pos:line="22" pos:column="6"/></block></then></if>

    <while pos:line="24" pos:column="5">while <condition pos:line="24" pos:column="11">(<expr><literal type="number" pos:line="24" pos:column="12">1<pos:position pos:line="24" pos:column="13"/></literal></expr>)<pos:position pos:line="24" pos:column="14"/></condition> <block pos:line="24" pos:column="15">{
        <decl_stmt><decl><type><name pos:line="25" pos:column="9">char<pos:position pos:line="25" pos:column="13"/></name> <modifier pos:line="25" pos:column="14">*<pos:position pos:line="25" pos:column="15"/></modifier></type><name pos:line="25" pos:column="15">tag<pos:position pos:line="25" pos:column="18"/></name>     <init pos:line="25" pos:column="23">= <expr><name pos:line="25" pos:column="25">NULL<pos:position pos:line="25" pos:column="29"/></name></expr></init></decl>;<pos:position pos:line="25" pos:column="30"/></decl_stmt>
        <decl_stmt><decl><type><name pos:line="26" pos:column="9">char<pos:position pos:line="26" pos:column="13"/></name> <modifier pos:line="26" pos:column="14">*<pos:position pos:line="26" pos:column="15"/></modifier></type><name pos:line="26" pos:column="15">tag_val<pos:position pos:line="26" pos:column="22"/></name> <init pos:line="26" pos:column="23">= <expr><name pos:line="26" pos:column="25">NULL<pos:position pos:line="26" pos:column="29"/></name></expr></init></decl>;<pos:position pos:line="26" pos:column="30"/></decl_stmt>
        <decl_stmt><decl><type><name pos:line="27" pos:column="9">apr_finfo_t<pos:position pos:line="27" pos:column="20"/></name></type>  <name pos:line="27" pos:column="22">finfo<pos:position pos:line="27" pos:column="27"/></name></decl>;<pos:position pos:line="27" pos:column="28"/></decl_stmt>
        <decl_stmt><decl><type><name pos:line="28" pos:column="9">char<pos:position pos:line="28" pos:column="13"/></name> <modifier pos:line="28" pos:column="14">*<pos:position pos:line="28" pos:column="15"/></modifier></type><name pos:line="28" pos:column="15">parsed_string<pos:position pos:line="28" pos:column="28"/></name></decl>;<pos:position pos:line="28" pos:column="29"/></decl_stmt>

        <expr_stmt><expr><call><name pos:line="30" pos:column="9">ap_ssi_get_tag_and_value<pos:position pos:line="30" pos:column="33"/></name><argument_list pos:line="30" pos:column="33">(<argument><expr><name pos:line="30" pos:column="34">ctx<pos:position pos:line="30" pos:column="37"/></name></expr></argument>, <argument><expr><operator pos:line="30" pos:column="39">&amp;<pos:position pos:line="30" pos:column="44"/></operator><name pos:line="30" pos:column="40">tag<pos:position pos:line="30" pos:column="43"/></name></expr></argument>, <argument><expr><operator pos:line="30" pos:column="45">&amp;<pos:position pos:line="30" pos:column="50"/></operator><name pos:line="30" pos:column="46">tag_val<pos:position pos:line="30" pos:column="53"/></name></expr></argument>, <argument><expr><name pos:line="30" pos:column="55">SSI_VALUE_DECODED<pos:position pos:line="30" pos:column="72"/></name></expr></argument>)<pos:position pos:line="30" pos:column="73"/></argument_list></call></expr>;<pos:position pos:line="30" pos:column="74"/></expr_stmt>
        <if pos:line="31" pos:column="9">if <condition pos:line="31" pos:column="12">(<expr><operator pos:line="31" pos:column="13">!<pos:position pos:line="31" pos:column="14"/></operator><name pos:line="31" pos:column="14">tag<pos:position pos:line="31" pos:column="17"/></name> <operator pos:line="31" pos:column="18">||<pos:position pos:line="31" pos:column="20"/></operator> <operator pos:line="31" pos:column="21">!<pos:position pos:line="31" pos:column="22"/></operator><name pos:line="31" pos:column="22">tag_val<pos:position pos:line="31" pos:column="29"/></name></expr>)<pos:position pos:line="31" pos:column="30"/></condition><then pos:line="31" pos:column="30"> <block pos:line="31" pos:column="31">{
            <break pos:line="32" pos:column="13">break;<pos:position pos:line="32" pos:column="19"/></break>
        }<pos:position pos:line="33" pos:column="10"/></block></then></if>

        <expr_stmt><expr><name pos:line="35" pos:column="9">parsed_string<pos:position pos:line="35" pos:column="22"/></name> <operator pos:line="35" pos:column="23">=<pos:position pos:line="35" pos:column="24"/></operator> <call><name pos:line="35" pos:column="25">ap_ssi_parse_string<pos:position pos:line="35" pos:column="44"/></name><argument_list pos:line="35" pos:column="44">(<argument><expr><name pos:line="35" pos:column="45">ctx<pos:position pos:line="35" pos:column="48"/></name></expr></argument>, <argument><expr><name pos:line="35" pos:column="50">tag_val<pos:position pos:line="35" pos:column="57"/></name></expr></argument>, <argument><expr><name pos:line="35" pos:column="59">NULL<pos:position pos:line="35" pos:column="63"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="35" pos:column="65">0<pos:position pos:line="35" pos:column="66"/></literal></expr></argument>,
                                            <argument><expr><name pos:line="36" pos:column="45">SSI_EXPAND_DROP_NAME<pos:position pos:line="36" pos:column="65"/></name></expr></argument>)<pos:position pos:line="36" pos:column="66"/></argument_list></call></expr>;<pos:position pos:line="36" pos:column="67"/></expr_stmt>

        <if pos:line="38" pos:column="9">if <condition pos:line="38" pos:column="12">(<expr><operator pos:line="38" pos:column="13">!<pos:position pos:line="38" pos:column="14"/></operator><call><name pos:line="38" pos:column="14">find_file<pos:position pos:line="38" pos:column="23"/></name><argument_list pos:line="38" pos:column="23">(<argument><expr><name pos:line="38" pos:column="24">r<pos:position pos:line="38" pos:column="25"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="38" pos:column="27">"flastmod"<pos:position pos:line="38" pos:column="37"/></literal></expr></argument>, <argument><expr><name pos:line="38" pos:column="39">tag<pos:position pos:line="38" pos:column="42"/></name></expr></argument>, <argument><expr><name pos:line="38" pos:column="44">parsed_string<pos:position pos:line="38" pos:column="57"/></name></expr></argument>, <argument><expr><operator pos:line="38" pos:column="59">&amp;<pos:position pos:line="38" pos:column="64"/></operator><name pos:line="38" pos:column="60">finfo<pos:position pos:line="38" pos:column="65"/></name></expr></argument>)<pos:position pos:line="38" pos:column="66"/></argument_list></call></expr>)<pos:position pos:line="38" pos:column="67"/></condition><then pos:line="38" pos:column="67"> <block pos:line="38" pos:column="68">{
            <decl_stmt><decl><type><name pos:line="39" pos:column="13">char<pos:position pos:line="39" pos:column="17"/></name> <modifier pos:line="39" pos:column="18">*<pos:position pos:line="39" pos:column="19"/></modifier></type><name pos:line="39" pos:column="19">t_val<pos:position pos:line="39" pos:column="24"/></name></decl>;<pos:position pos:line="39" pos:column="25"/></decl_stmt>
            <decl_stmt><decl><type><name pos:line="40" pos:column="13">apr_size_t<pos:position pos:line="40" pos:column="23"/></name></type> <name pos:line="40" pos:column="24">t_len<pos:position pos:line="40" pos:column="29"/></name></decl>;<pos:position pos:line="40" pos:column="30"/></decl_stmt>

            <expr_stmt><expr><name pos:line="42" pos:column="13">t_val<pos:position pos:line="42" pos:column="18"/></name> <operator pos:line="42" pos:column="19">=<pos:position pos:line="42" pos:column="20"/></operator> <call><name pos:line="42" pos:column="21">ap_ht_time<pos:position pos:line="42" pos:column="31"/></name><argument_list pos:line="42" pos:column="31">(<argument><expr><name><name pos:line="42" pos:column="32">ctx<pos:position pos:line="42" pos:column="35"/></name><operator pos:line="42" pos:column="35">-&gt;<pos:position pos:line="42" pos:column="40"/></operator><name pos:line="42" pos:column="37">pool<pos:position pos:line="42" pos:column="41"/></name></name></expr></argument>, <argument><expr><name><name pos:line="42" pos:column="43">finfo<pos:position pos:line="42" pos:column="48"/></name><operator pos:line="42" pos:column="48">.<pos:position pos:line="42" pos:column="49"/></operator><name pos:line="42" pos:column="49">mtime<pos:position pos:line="42" pos:column="54"/></name></name></expr></argument>, <argument><expr><name><name pos:line="42" pos:column="56">ctx<pos:position pos:line="42" pos:column="59"/></name><operator pos:line="42" pos:column="59">-&gt;<pos:position pos:line="42" pos:column="64"/></operator><name pos:line="42" pos:column="61">time_str<pos:position pos:line="42" pos:column="69"/></name></name></expr></argument>, <argument><expr><literal type="number" pos:line="42" pos:column="71">0<pos:position pos:line="42" pos:column="72"/></literal></expr></argument>)<pos:position pos:line="42" pos:column="73"/></argument_list></call></expr>;<pos:position pos:line="42" pos:column="74"/></expr_stmt>
            <expr_stmt><expr><name pos:line="43" pos:column="13">t_len<pos:position pos:line="43" pos:column="18"/></name> <operator pos:line="43" pos:column="19">=<pos:position pos:line="43" pos:column="20"/></operator> <call><name pos:line="43" pos:column="21">strlen<pos:position pos:line="43" pos:column="27"/></name><argument_list pos:line="43" pos:column="27">(<argument><expr><name pos:line="43" pos:column="28">t_val<pos:position pos:line="43" pos:column="33"/></name></expr></argument>)<pos:position pos:line="43" pos:column="34"/></argument_list></call></expr>;<pos:position pos:line="43" pos:column="35"/></expr_stmt>

            <expr_stmt><expr><call><name pos:line="45" pos:column="13">APR_BRIGADE_INSERT_TAIL<pos:position pos:line="45" pos:column="36"/></name><argument_list pos:line="45" pos:column="36">(<argument><expr><name pos:line="45" pos:column="37">bb<pos:position pos:line="45" pos:column="39"/></name></expr></argument>, <argument><expr><call><name pos:line="45" pos:column="41">apr_bucket_pool_create<pos:position pos:line="45" pos:column="63"/></name><argument_list pos:line="45" pos:column="63">(<argument><expr><name pos:line="45" pos:column="64">t_val<pos:position pos:line="45" pos:column="69"/></name></expr></argument>, <argument><expr><name pos:line="45" pos:column="71">t_len<pos:position pos:line="45" pos:column="76"/></name></expr></argument>,
                                    <argument><expr><name><name pos:line="46" pos:column="37">ctx<pos:position pos:line="46" pos:column="40"/></name><operator pos:line="46" pos:column="40">-&gt;<pos:position pos:line="46" pos:column="45"/></operator><name pos:line="46" pos:column="42">pool<pos:position pos:line="46" pos:column="46"/></name></name></expr></argument>, <argument><expr><name><name pos:line="46" pos:column="48">f<pos:position pos:line="46" pos:column="49"/></name><operator pos:line="46" pos:column="49">-&gt;<pos:position pos:line="46" pos:column="54"/></operator><name pos:line="46" pos:column="51">c<pos:position pos:line="46" pos:column="52"/></name><operator pos:line="46" pos:column="52">-&gt;<pos:position pos:line="46" pos:column="57"/></operator><name pos:line="46" pos:column="54">bucket_alloc<pos:position pos:line="46" pos:column="66"/></name></name></expr></argument>)<pos:position pos:line="46" pos:column="67"/></argument_list></call></expr></argument>)<pos:position pos:line="46" pos:column="68"/></argument_list></call></expr>;<pos:position pos:line="46" pos:column="69"/></expr_stmt>
        }<pos:position pos:line="47" pos:column="10"/></block></then>
        <else pos:line="48" pos:column="9">else <block pos:line="48" pos:column="14">{
            <expr_stmt><expr><call><name pos:line="49" pos:column="13">SSI_CREATE_ERROR_BUCKET<pos:position pos:line="49" pos:column="36"/></name><argument_list pos:line="49" pos:column="36">(<argument><expr><name pos:line="49" pos:column="37">ctx<pos:position pos:line="49" pos:column="40"/></name></expr></argument>, <argument><expr><name pos:line="49" pos:column="42">f<pos:position pos:line="49" pos:column="43"/></name></expr></argument>, <argument><expr><name pos:line="49" pos:column="45">bb<pos:position pos:line="49" pos:column="47"/></name></expr></argument>)<pos:position pos:line="49" pos:column="48"/></argument_list></call></expr>;<pos:position pos:line="49" pos:column="49"/></expr_stmt>
            <break pos:line="50" pos:column="13">break;<pos:position pos:line="50" pos:column="19"/></break>
        }<pos:position pos:line="51" pos:column="10"/></block></else></if>
    }<pos:position pos:line="52" pos:column="6"/></block></while>

    <return pos:line="54" pos:column="5">return <expr><name pos:line="54" pos:column="12">APR_SUCCESS<pos:position pos:line="54" pos:column="23"/></name></expr>;<pos:position pos:line="54" pos:column="24"/></return>
}<pos:position pos:line="55" pos:column="2"/></block></function></unit>

<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/httpd/gumtree/httpd_repos_function_3089_httpd-2.4.6.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">int<pos:position pos:line="1" pos:column="11"/></name></type> <name pos:line="1" pos:column="12">ssl_expr_eval_comp<pos:position pos:line="1" pos:column="30"/></name><parameter_list pos:line="1" pos:column="30">(<parameter><decl><type><name pos:line="1" pos:column="31">ap_expr_eval_ctx_t<pos:position pos:line="1" pos:column="49"/></name> <modifier pos:line="1" pos:column="50">*<pos:position pos:line="1" pos:column="51"/></modifier></type><name pos:line="1" pos:column="51">ctx<pos:position pos:line="1" pos:column="54"/></name></decl></parameter>, <parameter><decl><type><specifier pos:line="1" pos:column="56">const<pos:position pos:line="1" pos:column="61"/></specifier> <name pos:line="1" pos:column="62">ap_expr_t<pos:position pos:line="1" pos:column="71"/></name> <modifier pos:line="1" pos:column="72">*<pos:position pos:line="1" pos:column="73"/></modifier></type><name pos:line="1" pos:column="73">node<pos:position pos:line="1" pos:column="77"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="78"/></parameter_list>
<block pos:line="2" pos:column="1">{
    <decl_stmt><decl><type><specifier pos:line="3" pos:column="5">const<pos:position pos:line="3" pos:column="10"/></specifier> <name pos:line="3" pos:column="11">ap_expr_t<pos:position pos:line="3" pos:column="20"/></name> <modifier pos:line="3" pos:column="21">*<pos:position pos:line="3" pos:column="22"/></modifier></type><name pos:line="3" pos:column="22">e1<pos:position pos:line="3" pos:column="24"/></name> <init pos:line="3" pos:column="25">= <expr><name><name pos:line="3" pos:column="27">node<pos:position pos:line="3" pos:column="31"/></name><operator pos:line="3" pos:column="31">-&gt;<pos:position pos:line="3" pos:column="36"/></operator><name pos:line="3" pos:column="33">node_arg1<pos:position pos:line="3" pos:column="42"/></name></name></expr></init></decl>;<pos:position pos:line="3" pos:column="43"/></decl_stmt>
    <decl_stmt><decl><type><specifier pos:line="4" pos:column="5">const<pos:position pos:line="4" pos:column="10"/></specifier> <name pos:line="4" pos:column="11">ap_expr_t<pos:position pos:line="4" pos:column="20"/></name> <modifier pos:line="4" pos:column="21">*<pos:position pos:line="4" pos:column="22"/></modifier></type><name pos:line="4" pos:column="22">e2<pos:position pos:line="4" pos:column="24"/></name> <init pos:line="4" pos:column="25">= <expr><name><name pos:line="4" pos:column="27">node<pos:position pos:line="4" pos:column="31"/></name><operator pos:line="4" pos:column="31">-&gt;<pos:position pos:line="4" pos:column="36"/></operator><name pos:line="4" pos:column="33">node_arg2<pos:position pos:line="4" pos:column="42"/></name></name></expr></init></decl>;<pos:position pos:line="4" pos:column="43"/></decl_stmt>
    <switch pos:line="5" pos:column="5">switch <condition pos:line="5" pos:column="12">(<expr><name><name pos:line="5" pos:column="13">node<pos:position pos:line="5" pos:column="17"/></name><operator pos:line="5" pos:column="17">-&gt;<pos:position pos:line="5" pos:column="22"/></operator><name pos:line="5" pos:column="19">node_op<pos:position pos:line="5" pos:column="26"/></name></name></expr>)<pos:position pos:line="5" pos:column="27"/></condition> <block pos:line="5" pos:column="28">{
    <case pos:line="6" pos:column="5">case <expr><name pos:line="6" pos:column="10">op_EQ<pos:position pos:line="6" pos:column="15"/></name></expr>:<pos:position pos:line="6" pos:column="16"/></case>
    <case pos:line="7" pos:column="5">case <expr><name pos:line="7" pos:column="10">op_STR_EQ<pos:position pos:line="7" pos:column="19"/></name></expr>:<pos:position pos:line="7" pos:column="20"/></case>
        <return pos:line="8" pos:column="9">return <expr><operator pos:line="8" pos:column="16">(<pos:position pos:line="8" pos:column="17"/></operator><call><name pos:line="8" pos:column="17">strcmplex<pos:position pos:line="8" pos:column="26"/></name><argument_list pos:line="8" pos:column="26">(<argument><expr><call><name pos:line="8" pos:column="27">ap_expr_eval_word<pos:position pos:line="8" pos:column="44"/></name><argument_list pos:line="8" pos:column="44">(<argument><expr><name pos:line="8" pos:column="45">ctx<pos:position pos:line="8" pos:column="48"/></name></expr></argument>, <argument><expr><name pos:line="8" pos:column="50">e1<pos:position pos:line="8" pos:column="52"/></name></expr></argument>)<pos:position pos:line="8" pos:column="53"/></argument_list></call></expr></argument>, <argument><expr><call><name pos:line="8" pos:column="55">ap_expr_eval_word<pos:position pos:line="8" pos:column="72"/></name><argument_list pos:line="8" pos:column="72">(<argument><expr><name pos:line="8" pos:column="73">ctx<pos:position pos:line="8" pos:column="76"/></name></expr></argument>, <argument><expr><name pos:line="8" pos:column="78">e2<pos:position pos:line="8" pos:column="80"/></name></expr></argument>)<pos:position pos:line="8" pos:column="81"/></argument_list></call></expr></argument>)<pos:position pos:line="8" pos:column="82"/></argument_list></call> <operator pos:line="8" pos:column="83">==<pos:position pos:line="8" pos:column="85"/></operator> <literal type="number" pos:line="8" pos:column="86">0<pos:position pos:line="8" pos:column="87"/></literal><operator pos:line="8" pos:column="87">)<pos:position pos:line="8" pos:column="88"/></operator></expr>;<pos:position pos:line="8" pos:column="89"/></return>
    <case pos:line="9" pos:column="5">case <expr><name pos:line="9" pos:column="10">op_NE<pos:position pos:line="9" pos:column="15"/></name></expr>:<pos:position pos:line="9" pos:column="16"/></case>
    <case pos:line="10" pos:column="5">case <expr><name pos:line="10" pos:column="10">op_STR_NE<pos:position pos:line="10" pos:column="19"/></name></expr>:<pos:position pos:line="10" pos:column="20"/></case>
        <return pos:line="11" pos:column="9">return <expr><operator pos:line="11" pos:column="16">(<pos:position pos:line="11" pos:column="17"/></operator><call><name pos:line="11" pos:column="17">strcmplex<pos:position pos:line="11" pos:column="26"/></name><argument_list pos:line="11" pos:column="26">(<argument><expr><call><name pos:line="11" pos:column="27">ap_expr_eval_word<pos:position pos:line="11" pos:column="44"/></name><argument_list pos:line="11" pos:column="44">(<argument><expr><name pos:line="11" pos:column="45">ctx<pos:position pos:line="11" pos:column="48"/></name></expr></argument>, <argument><expr><name pos:line="11" pos:column="50">e1<pos:position pos:line="11" pos:column="52"/></name></expr></argument>)<pos:position pos:line="11" pos:column="53"/></argument_list></call></expr></argument>, <argument><expr><call><name pos:line="11" pos:column="55">ap_expr_eval_word<pos:position pos:line="11" pos:column="72"/></name><argument_list pos:line="11" pos:column="72">(<argument><expr><name pos:line="11" pos:column="73">ctx<pos:position pos:line="11" pos:column="76"/></name></expr></argument>, <argument><expr><name pos:line="11" pos:column="78">e2<pos:position pos:line="11" pos:column="80"/></name></expr></argument>)<pos:position pos:line="11" pos:column="81"/></argument_list></call></expr></argument>)<pos:position pos:line="11" pos:column="82"/></argument_list></call> <operator pos:line="11" pos:column="83">!=<pos:position pos:line="11" pos:column="85"/></operator> <literal type="number" pos:line="11" pos:column="86">0<pos:position pos:line="11" pos:column="87"/></literal><operator pos:line="11" pos:column="87">)<pos:position pos:line="11" pos:column="88"/></operator></expr>;<pos:position pos:line="11" pos:column="89"/></return>
    <case pos:line="12" pos:column="5">case <expr><name pos:line="12" pos:column="10">op_LT<pos:position pos:line="12" pos:column="15"/></name></expr>:<pos:position pos:line="12" pos:column="16"/></case>
    <case pos:line="13" pos:column="5">case <expr><name pos:line="13" pos:column="10">op_STR_LT<pos:position pos:line="13" pos:column="19"/></name></expr>:<pos:position pos:line="13" pos:column="20"/></case>
        <return pos:line="14" pos:column="9">return <expr><operator pos:line="14" pos:column="16">(<pos:position pos:line="14" pos:column="17"/></operator><call><name pos:line="14" pos:column="17">strcmplex<pos:position pos:line="14" pos:column="26"/></name><argument_list pos:line="14" pos:column="26">(<argument><expr><call><name pos:line="14" pos:column="27">ap_expr_eval_word<pos:position pos:line="14" pos:column="44"/></name><argument_list pos:line="14" pos:column="44">(<argument><expr><name pos:line="14" pos:column="45">ctx<pos:position pos:line="14" pos:column="48"/></name></expr></argument>, <argument><expr><name pos:line="14" pos:column="50">e1<pos:position pos:line="14" pos:column="52"/></name></expr></argument>)<pos:position pos:line="14" pos:column="53"/></argument_list></call></expr></argument>, <argument><expr><call><name pos:line="14" pos:column="55">ap_expr_eval_word<pos:position pos:line="14" pos:column="72"/></name><argument_list pos:line="14" pos:column="72">(<argument><expr><name pos:line="14" pos:column="73">ctx<pos:position pos:line="14" pos:column="76"/></name></expr></argument>, <argument><expr><name pos:line="14" pos:column="78">e2<pos:position pos:line="14" pos:column="80"/></name></expr></argument>)<pos:position pos:line="14" pos:column="81"/></argument_list></call></expr></argument>)<pos:position pos:line="14" pos:column="82"/></argument_list></call> <operator pos:line="14" pos:column="83">&lt;<pos:position pos:line="14" pos:column="87"/></operator>  <literal type="number" pos:line="14" pos:column="86">0<pos:position pos:line="14" pos:column="87"/></literal><operator pos:line="14" pos:column="87">)<pos:position pos:line="14" pos:column="88"/></operator></expr>;<pos:position pos:line="14" pos:column="89"/></return>
    <case pos:line="15" pos:column="5">case <expr><name pos:line="15" pos:column="10">op_LE<pos:position pos:line="15" pos:column="15"/></name></expr>:<pos:position pos:line="15" pos:column="16"/></case>
    <case pos:line="16" pos:column="5">case <expr><name pos:line="16" pos:column="10">op_STR_LE<pos:position pos:line="16" pos:column="19"/></name></expr>:<pos:position pos:line="16" pos:column="20"/></case>
        <return pos:line="17" pos:column="9">return <expr><operator pos:line="17" pos:column="16">(<pos:position pos:line="17" pos:column="17"/></operator><call><name pos:line="17" pos:column="17">strcmplex<pos:position pos:line="17" pos:column="26"/></name><argument_list pos:line="17" pos:column="26">(<argument><expr><call><name pos:line="17" pos:column="27">ap_expr_eval_word<pos:position pos:line="17" pos:column="44"/></name><argument_list pos:line="17" pos:column="44">(<argument><expr><name pos:line="17" pos:column="45">ctx<pos:position pos:line="17" pos:column="48"/></name></expr></argument>, <argument><expr><name pos:line="17" pos:column="50">e1<pos:position pos:line="17" pos:column="52"/></name></expr></argument>)<pos:position pos:line="17" pos:column="53"/></argument_list></call></expr></argument>, <argument><expr><call><name pos:line="17" pos:column="55">ap_expr_eval_word<pos:position pos:line="17" pos:column="72"/></name><argument_list pos:line="17" pos:column="72">(<argument><expr><name pos:line="17" pos:column="73">ctx<pos:position pos:line="17" pos:column="76"/></name></expr></argument>, <argument><expr><name pos:line="17" pos:column="78">e2<pos:position pos:line="17" pos:column="80"/></name></expr></argument>)<pos:position pos:line="17" pos:column="81"/></argument_list></call></expr></argument>)<pos:position pos:line="17" pos:column="82"/></argument_list></call> <operator pos:line="17" pos:column="83">&lt;=<pos:position pos:line="17" pos:column="88"/></operator> <literal type="number" pos:line="17" pos:column="86">0<pos:position pos:line="17" pos:column="87"/></literal><operator pos:line="17" pos:column="87">)<pos:position pos:line="17" pos:column="88"/></operator></expr>;<pos:position pos:line="17" pos:column="89"/></return>
    <case pos:line="18" pos:column="5">case <expr><name pos:line="18" pos:column="10">op_GT<pos:position pos:line="18" pos:column="15"/></name></expr>:<pos:position pos:line="18" pos:column="16"/></case>
    <case pos:line="19" pos:column="5">case <expr><name pos:line="19" pos:column="10">op_STR_GT<pos:position pos:line="19" pos:column="19"/></name></expr>:<pos:position pos:line="19" pos:column="20"/></case>
        <return pos:line="20" pos:column="9">return <expr><operator pos:line="20" pos:column="16">(<pos:position pos:line="20" pos:column="17"/></operator><call><name pos:line="20" pos:column="17">strcmplex<pos:position pos:line="20" pos:column="26"/></name><argument_list pos:line="20" pos:column="26">(<argument><expr><call><name pos:line="20" pos:column="27">ap_expr_eval_word<pos:position pos:line="20" pos:column="44"/></name><argument_list pos:line="20" pos:column="44">(<argument><expr><name pos:line="20" pos:column="45">ctx<pos:position pos:line="20" pos:column="48"/></name></expr></argument>, <argument><expr><name pos:line="20" pos:column="50">e1<pos:position pos:line="20" pos:column="52"/></name></expr></argument>)<pos:position pos:line="20" pos:column="53"/></argument_list></call></expr></argument>, <argument><expr><call><name pos:line="20" pos:column="55">ap_expr_eval_word<pos:position pos:line="20" pos:column="72"/></name><argument_list pos:line="20" pos:column="72">(<argument><expr><name pos:line="20" pos:column="73">ctx<pos:position pos:line="20" pos:column="76"/></name></expr></argument>, <argument><expr><name pos:line="20" pos:column="78">e2<pos:position pos:line="20" pos:column="80"/></name></expr></argument>)<pos:position pos:line="20" pos:column="81"/></argument_list></call></expr></argument>)<pos:position pos:line="20" pos:column="82"/></argument_list></call> <operator pos:line="20" pos:column="83">&gt;<pos:position pos:line="20" pos:column="87"/></operator>  <literal type="number" pos:line="20" pos:column="86">0<pos:position pos:line="20" pos:column="87"/></literal><operator pos:line="20" pos:column="87">)<pos:position pos:line="20" pos:column="88"/></operator></expr>;<pos:position pos:line="20" pos:column="89"/></return>
    <case pos:line="21" pos:column="5">case <expr><name pos:line="21" pos:column="10">op_GE<pos:position pos:line="21" pos:column="15"/></name></expr>:<pos:position pos:line="21" pos:column="16"/></case>
    <case pos:line="22" pos:column="5">case <expr><name pos:line="22" pos:column="10">op_STR_GE<pos:position pos:line="22" pos:column="19"/></name></expr>:<pos:position pos:line="22" pos:column="20"/></case>
        <return pos:line="23" pos:column="9">return <expr><operator pos:line="23" pos:column="16">(<pos:position pos:line="23" pos:column="17"/></operator><call><name pos:line="23" pos:column="17">strcmplex<pos:position pos:line="23" pos:column="26"/></name><argument_list pos:line="23" pos:column="26">(<argument><expr><call><name pos:line="23" pos:column="27">ap_expr_eval_word<pos:position pos:line="23" pos:column="44"/></name><argument_list pos:line="23" pos:column="44">(<argument><expr><name pos:line="23" pos:column="45">ctx<pos:position pos:line="23" pos:column="48"/></name></expr></argument>, <argument><expr><name pos:line="23" pos:column="50">e1<pos:position pos:line="23" pos:column="52"/></name></expr></argument>)<pos:position pos:line="23" pos:column="53"/></argument_list></call></expr></argument>, <argument><expr><call><name pos:line="23" pos:column="55">ap_expr_eval_word<pos:position pos:line="23" pos:column="72"/></name><argument_list pos:line="23" pos:column="72">(<argument><expr><name pos:line="23" pos:column="73">ctx<pos:position pos:line="23" pos:column="76"/></name></expr></argument>, <argument><expr><name pos:line="23" pos:column="78">e2<pos:position pos:line="23" pos:column="80"/></name></expr></argument>)<pos:position pos:line="23" pos:column="81"/></argument_list></call></expr></argument>)<pos:position pos:line="23" pos:column="82"/></argument_list></call> <operator pos:line="23" pos:column="83">&gt;=<pos:position pos:line="23" pos:column="88"/></operator> <literal type="number" pos:line="23" pos:column="86">0<pos:position pos:line="23" pos:column="87"/></literal><operator pos:line="23" pos:column="87">)<pos:position pos:line="23" pos:column="88"/></operator></expr>;<pos:position pos:line="23" pos:column="89"/></return>
    <default pos:line="24" pos:column="5">default:<pos:position pos:line="24" pos:column="13"/></default>
        <return pos:line="25" pos:column="9">return <expr><call><name pos:line="25" pos:column="16">ap_expr_eval_comp<pos:position pos:line="25" pos:column="33"/></name><argument_list pos:line="25" pos:column="33">(<argument><expr><name pos:line="25" pos:column="34">ctx<pos:position pos:line="25" pos:column="37"/></name></expr></argument>, <argument><expr><name pos:line="25" pos:column="39">node<pos:position pos:line="25" pos:column="43"/></name></expr></argument>)<pos:position pos:line="25" pos:column="44"/></argument_list></call></expr>;<pos:position pos:line="25" pos:column="45"/></return>
    }<pos:position pos:line="26" pos:column="6"/></block></switch>
}<pos:position pos:line="27" pos:column="2"/></block></function></unit>

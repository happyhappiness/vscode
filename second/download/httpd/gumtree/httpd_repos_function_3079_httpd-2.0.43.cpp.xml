<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/httpd/gumtree/httpd_repos_function_3079_httpd-2.0.43.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">int<pos:position pos:line="1" pos:column="4"/></name></type> <name pos:line="1" pos:column="5">win32_strftime_extra<pos:position pos:line="1" pos:column="25"/></name><parameter_list pos:line="1" pos:column="25">(<parameter><decl><type><name pos:line="1" pos:column="26">char<pos:position pos:line="1" pos:column="30"/></name> <modifier pos:line="1" pos:column="31">*<pos:position pos:line="1" pos:column="32"/></modifier></type><name pos:line="1" pos:column="32">s<pos:position pos:line="1" pos:column="33"/></name></decl></parameter>, <parameter><decl><type><name pos:line="1" pos:column="35">size_t<pos:position pos:line="1" pos:column="41"/></name></type> <name pos:line="1" pos:column="42">max<pos:position pos:line="1" pos:column="45"/></name></decl></parameter>, <parameter><decl><type><specifier pos:line="1" pos:column="47">const<pos:position pos:line="1" pos:column="52"/></specifier> <name pos:line="1" pos:column="53">char<pos:position pos:line="1" pos:column="57"/></name> <modifier pos:line="1" pos:column="58">*<pos:position pos:line="1" pos:column="59"/></modifier></type><name pos:line="1" pos:column="59">format<pos:position pos:line="1" pos:column="65"/></name></decl></parameter>,
                         <parameter><decl><type><specifier pos:line="2" pos:column="26">const<pos:position pos:line="2" pos:column="31"/></specifier> <name><name pos:line="2" pos:column="32">struct<pos:position pos:line="2" pos:column="38"/></name> <name pos:line="2" pos:column="39">tm<pos:position pos:line="2" pos:column="41"/></name></name> <modifier pos:line="2" pos:column="42">*<pos:position pos:line="2" pos:column="43"/></modifier></type><name pos:line="2" pos:column="43">tm<pos:position pos:line="2" pos:column="45"/></name></decl></parameter>)<pos:position pos:line="2" pos:column="46"/></parameter_list> <block pos:line="2" pos:column="47">{
   <comment type="block" pos:line="3" pos:column="4">/* If the new format string is bigger than max, the result string won't fit
    * anyway. If format strings are added, made sure the padding below is
    * enough */</comment>
    <decl_stmt><decl><type><name pos:line="6" pos:column="5">char<pos:position pos:line="6" pos:column="9"/></name> <modifier pos:line="6" pos:column="10">*<pos:position pos:line="6" pos:column="11"/></modifier></type><name pos:line="6" pos:column="11">new_format<pos:position pos:line="6" pos:column="21"/></name> <init pos:line="6" pos:column="22">= <expr><operator pos:line="6" pos:column="24">(<pos:position pos:line="6" pos:column="25"/></operator><name pos:line="6" pos:column="25">char<pos:position pos:line="6" pos:column="29"/></name> <operator pos:line="6" pos:column="30">*<pos:position pos:line="6" pos:column="31"/></operator><operator pos:line="6" pos:column="31">)<pos:position pos:line="6" pos:column="32"/></operator> <call><name pos:line="6" pos:column="33">malloc<pos:position pos:line="6" pos:column="39"/></name><argument_list pos:line="6" pos:column="39">(<argument><expr><name pos:line="6" pos:column="40">max<pos:position pos:line="6" pos:column="43"/></name> <operator pos:line="6" pos:column="44">+<pos:position pos:line="6" pos:column="45"/></operator> <literal type="number" pos:line="6" pos:column="46">11<pos:position pos:line="6" pos:column="48"/></literal></expr></argument>)<pos:position pos:line="6" pos:column="49"/></argument_list></call></expr></init></decl>;<pos:position pos:line="6" pos:column="50"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="7" pos:column="5">size_t<pos:position pos:line="7" pos:column="11"/></name></type> <name pos:line="7" pos:column="12">i<pos:position pos:line="7" pos:column="13"/></name></decl>, <decl><type ref="prev"/><name pos:line="7" pos:column="15">j<pos:position pos:line="7" pos:column="16"/></name></decl>, <decl><type ref="prev"/><name pos:line="7" pos:column="18">format_length<pos:position pos:line="7" pos:column="31"/></name> <init pos:line="7" pos:column="32">= <expr><call><name pos:line="7" pos:column="34">strlen<pos:position pos:line="7" pos:column="40"/></name><argument_list pos:line="7" pos:column="40">(<argument><expr><name pos:line="7" pos:column="41">format<pos:position pos:line="7" pos:column="47"/></name></expr></argument>)<pos:position pos:line="7" pos:column="48"/></argument_list></call></expr></init></decl>;<pos:position pos:line="7" pos:column="49"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="8" pos:column="5">int<pos:position pos:line="8" pos:column="8"/></name></type> <name pos:line="8" pos:column="9">return_value<pos:position pos:line="8" pos:column="21"/></name></decl>;<pos:position pos:line="8" pos:column="22"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="9" pos:column="5">int<pos:position pos:line="9" pos:column="8"/></name></type> <name pos:line="9" pos:column="9">length_written<pos:position pos:line="9" pos:column="23"/></name></decl>;<pos:position pos:line="9" pos:column="24"/></decl_stmt>

    <for pos:line="11" pos:column="5">for <control pos:line="11" pos:column="9">(<init><expr><name pos:line="11" pos:column="10">i<pos:position pos:line="11" pos:column="11"/></name> <operator pos:line="11" pos:column="12">=<pos:position pos:line="11" pos:column="13"/></operator> <literal type="number" pos:line="11" pos:column="14">0<pos:position pos:line="11" pos:column="15"/></literal></expr><operator pos:line="11" pos:column="15">,<pos:position pos:line="11" pos:column="16"/></operator> <expr><name pos:line="11" pos:column="17">j<pos:position pos:line="11" pos:column="18"/></name> <operator pos:line="11" pos:column="19">=<pos:position pos:line="11" pos:column="20"/></operator> <literal type="number" pos:line="11" pos:column="21">0<pos:position pos:line="11" pos:column="22"/></literal></expr>;<pos:position pos:line="11" pos:column="23"/></init> <condition><expr><operator pos:line="11" pos:column="24">(<pos:position pos:line="11" pos:column="25"/></operator><name pos:line="11" pos:column="25">i<pos:position pos:line="11" pos:column="26"/></name> <operator pos:line="11" pos:column="27">&lt;<pos:position pos:line="11" pos:column="31"/></operator> <name pos:line="11" pos:column="29">format_length<pos:position pos:line="11" pos:column="42"/></name> <operator pos:line="11" pos:column="43">&amp;&amp;<pos:position pos:line="11" pos:column="53"/></operator> <name pos:line="11" pos:column="46">j<pos:position pos:line="11" pos:column="47"/></name> <operator pos:line="11" pos:column="48">&lt;<pos:position pos:line="11" pos:column="52"/></operator> <name pos:line="11" pos:column="50">max<pos:position pos:line="11" pos:column="53"/></name><operator pos:line="11" pos:column="53">)<pos:position pos:line="11" pos:column="54"/></operator></expr>;<pos:position pos:line="11" pos:column="55"/></condition><incr/>)<pos:position pos:line="11" pos:column="56"/></control> <block pos:line="11" pos:column="57">{
        <if pos:line="12" pos:column="9">if <condition pos:line="12" pos:column="12">(<expr><name><name pos:line="12" pos:column="13">format<pos:position pos:line="12" pos:column="19"/></name><index pos:line="12" pos:column="19">[<expr><name pos:line="12" pos:column="20">i<pos:position pos:line="12" pos:column="21"/></name></expr>]<pos:position pos:line="12" pos:column="22"/></index></name> <operator pos:line="12" pos:column="23">!=<pos:position pos:line="12" pos:column="25"/></operator> <literal type="char" pos:line="12" pos:column="26">'%'<pos:position pos:line="12" pos:column="29"/></literal></expr>)<pos:position pos:line="12" pos:column="30"/></condition><then pos:line="12" pos:column="30"> <block pos:line="12" pos:column="31">{
            <expr_stmt><expr><name><name pos:line="13" pos:column="13">new_format<pos:position pos:line="13" pos:column="23"/></name><index pos:line="13" pos:column="23">[<expr><name pos:line="13" pos:column="24">j<pos:position pos:line="13" pos:column="25"/></name><operator pos:line="13" pos:column="25">++<pos:position pos:line="13" pos:column="27"/></operator></expr>]<pos:position pos:line="13" pos:column="28"/></index></name> <operator pos:line="13" pos:column="29">=<pos:position pos:line="13" pos:column="30"/></operator> <name><name pos:line="13" pos:column="31">format<pos:position pos:line="13" pos:column="37"/></name><index pos:line="13" pos:column="37">[<expr><name pos:line="13" pos:column="38">i<pos:position pos:line="13" pos:column="39"/></name><operator pos:line="13" pos:column="39">++<pos:position pos:line="13" pos:column="41"/></operator></expr>]<pos:position pos:line="13" pos:column="42"/></index></name></expr>;<pos:position pos:line="13" pos:column="43"/></expr_stmt>
            <continue pos:line="14" pos:column="13">continue;<pos:position pos:line="14" pos:column="22"/></continue>
        }<pos:position pos:line="15" pos:column="10"/></block></then></if>
        <switch pos:line="16" pos:column="9">switch <condition pos:line="16" pos:column="16">(<expr><name><name pos:line="16" pos:column="17">format<pos:position pos:line="16" pos:column="23"/></name><index pos:line="16" pos:column="23">[<expr><name pos:line="16" pos:column="24">i<pos:position pos:line="16" pos:column="25"/></name><operator pos:line="16" pos:column="25">+<pos:position pos:line="16" pos:column="26"/></operator><literal type="number" pos:line="16" pos:column="26">1<pos:position pos:line="16" pos:column="27"/></literal></expr>]<pos:position pos:line="16" pos:column="28"/></index></name></expr>)<pos:position pos:line="16" pos:column="29"/></condition> <block pos:line="16" pos:column="30">{
            <case pos:line="17" pos:column="13">case <expr><literal type="char" pos:line="17" pos:column="18">'C'<pos:position pos:line="17" pos:column="21"/></literal></expr>:<pos:position pos:line="17" pos:column="22"/></case>
                <expr_stmt><expr><name pos:line="18" pos:column="17">length_written<pos:position pos:line="18" pos:column="31"/></name> <operator pos:line="18" pos:column="32">=<pos:position pos:line="18" pos:column="33"/></operator> <call><name pos:line="18" pos:column="34">apr_snprintf<pos:position pos:line="18" pos:column="46"/></name><argument_list pos:line="18" pos:column="46">(<argument><expr><name pos:line="18" pos:column="47">new_format<pos:position pos:line="18" pos:column="57"/></name> <operator pos:line="18" pos:column="58">+<pos:position pos:line="18" pos:column="59"/></operator> <name pos:line="18" pos:column="60">j<pos:position pos:line="18" pos:column="61"/></name></expr></argument>, <argument><expr><name pos:line="18" pos:column="63">max<pos:position pos:line="18" pos:column="66"/></name> <operator pos:line="18" pos:column="67">-<pos:position pos:line="18" pos:column="68"/></operator> <name pos:line="18" pos:column="69">j<pos:position pos:line="18" pos:column="70"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="18" pos:column="72">"%2d"<pos:position pos:line="18" pos:column="77"/></literal></expr></argument>,
                    <argument><expr><operator pos:line="19" pos:column="21">(<pos:position pos:line="19" pos:column="22"/></operator><name><name pos:line="19" pos:column="22">tm<pos:position pos:line="19" pos:column="24"/></name><operator pos:line="19" pos:column="24">-&gt;<pos:position pos:line="19" pos:column="29"/></operator><name pos:line="19" pos:column="26">tm_year<pos:position pos:line="19" pos:column="33"/></name></name> <operator pos:line="19" pos:column="34">+<pos:position pos:line="19" pos:column="35"/></operator> <literal type="number" pos:line="19" pos:column="36">1970<pos:position pos:line="19" pos:column="40"/></literal><operator pos:line="19" pos:column="40">)<pos:position pos:line="19" pos:column="41"/></operator><operator pos:line="19" pos:column="41">/<pos:position pos:line="19" pos:column="42"/></operator><literal type="number" pos:line="19" pos:column="42">100<pos:position pos:line="19" pos:column="45"/></literal></expr></argument>)<pos:position pos:line="19" pos:column="46"/></argument_list></call></expr>;<pos:position pos:line="19" pos:column="47"/></expr_stmt>
                <expr_stmt><expr><name pos:line="20" pos:column="17">j<pos:position pos:line="20" pos:column="18"/></name> <operator pos:line="20" pos:column="19">=<pos:position pos:line="20" pos:column="20"/></operator> <ternary><condition><expr><operator pos:line="20" pos:column="21">(<pos:position pos:line="20" pos:column="22"/></operator><name pos:line="20" pos:column="22">length_written<pos:position pos:line="20" pos:column="36"/></name> <operator pos:line="20" pos:column="37">==<pos:position pos:line="20" pos:column="39"/></operator> <operator pos:line="20" pos:column="40">-<pos:position pos:line="20" pos:column="41"/></operator><literal type="number" pos:line="20" pos:column="41">1<pos:position pos:line="20" pos:column="42"/></literal><operator pos:line="20" pos:column="42">)<pos:position pos:line="20" pos:column="43"/></operator></expr> ?<pos:position pos:line="20" pos:column="45"/></condition><then pos:line="20" pos:column="45"> <expr><name pos:line="20" pos:column="46">max<pos:position pos:line="20" pos:column="49"/></name></expr> <pos:position pos:line="20" pos:column="50"/></then><else pos:line="20" pos:column="50">: <expr><operator pos:line="20" pos:column="52">(<pos:position pos:line="20" pos:column="53"/></operator><name pos:line="20" pos:column="53">j<pos:position pos:line="20" pos:column="54"/></name> <operator pos:line="20" pos:column="55">+<pos:position pos:line="20" pos:column="56"/></operator> <name pos:line="20" pos:column="57">length_written<pos:position pos:line="20" pos:column="71"/></name><operator pos:line="20" pos:column="71">)<pos:position pos:line="20" pos:column="72"/></operator></expr></else></ternary></expr>;<pos:position pos:line="20" pos:column="73"/></expr_stmt>
                <expr_stmt><expr><name pos:line="21" pos:column="17">i<pos:position pos:line="21" pos:column="18"/></name> <operator pos:line="21" pos:column="19">+=<pos:position pos:line="21" pos:column="21"/></operator> <literal type="number" pos:line="21" pos:column="22">2<pos:position pos:line="21" pos:column="23"/></literal></expr>;<pos:position pos:line="21" pos:column="24"/></expr_stmt>
                <break pos:line="22" pos:column="17">break;<pos:position pos:line="22" pos:column="23"/></break>
            <case pos:line="23" pos:column="13">case <expr><literal type="char" pos:line="23" pos:column="18">'D'<pos:position pos:line="23" pos:column="21"/></literal></expr>:<pos:position pos:line="23" pos:column="22"/></case>
                <comment type="block" pos:line="24" pos:column="17">/* Is this locale dependent? Shouldn't be...
                   Also note the year 2000 exposure here */</comment>
                <expr_stmt><expr><call><name pos:line="26" pos:column="17">memcpy<pos:position pos:line="26" pos:column="23"/></name><argument_list pos:line="26" pos:column="23">(<argument><expr><name pos:line="26" pos:column="24">new_format<pos:position pos:line="26" pos:column="34"/></name> <operator pos:line="26" pos:column="35">+<pos:position pos:line="26" pos:column="36"/></operator> <name pos:line="26" pos:column="37">j<pos:position pos:line="26" pos:column="38"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="26" pos:column="40">"%m/%d/%y"<pos:position pos:line="26" pos:column="50"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="26" pos:column="52">8<pos:position pos:line="26" pos:column="53"/></literal></expr></argument>)<pos:position pos:line="26" pos:column="54"/></argument_list></call></expr>;<pos:position pos:line="26" pos:column="55"/></expr_stmt>
                <expr_stmt><expr><name pos:line="27" pos:column="17">i<pos:position pos:line="27" pos:column="18"/></name> <operator pos:line="27" pos:column="19">+=<pos:position pos:line="27" pos:column="21"/></operator> <literal type="number" pos:line="27" pos:column="22">2<pos:position pos:line="27" pos:column="23"/></literal></expr>;<pos:position pos:line="27" pos:column="24"/></expr_stmt>
                <expr_stmt><expr><name pos:line="28" pos:column="17">j<pos:position pos:line="28" pos:column="18"/></name> <operator pos:line="28" pos:column="19">+=<pos:position pos:line="28" pos:column="21"/></operator> <literal type="number" pos:line="28" pos:column="22">8<pos:position pos:line="28" pos:column="23"/></literal></expr>;<pos:position pos:line="28" pos:column="24"/></expr_stmt>
                <break pos:line="29" pos:column="17">break;<pos:position pos:line="29" pos:column="23"/></break>
            <case pos:line="30" pos:column="13">case <expr><literal type="char" pos:line="30" pos:column="18">'r'<pos:position pos:line="30" pos:column="21"/></literal></expr>:<pos:position pos:line="30" pos:column="22"/></case>
                <expr_stmt><expr><call><name pos:line="31" pos:column="17">memcpy<pos:position pos:line="31" pos:column="23"/></name><argument_list pos:line="31" pos:column="23">(<argument><expr><name pos:line="31" pos:column="24">new_format<pos:position pos:line="31" pos:column="34"/></name> <operator pos:line="31" pos:column="35">+<pos:position pos:line="31" pos:column="36"/></operator> <name pos:line="31" pos:column="37">j<pos:position pos:line="31" pos:column="38"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="31" pos:column="40">"%I:%M:%S %p"<pos:position pos:line="31" pos:column="53"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="31" pos:column="55">11<pos:position pos:line="31" pos:column="57"/></literal></expr></argument>)<pos:position pos:line="31" pos:column="58"/></argument_list></call></expr>;<pos:position pos:line="31" pos:column="59"/></expr_stmt>
                <expr_stmt><expr><name pos:line="32" pos:column="17">i<pos:position pos:line="32" pos:column="18"/></name> <operator pos:line="32" pos:column="19">+=<pos:position pos:line="32" pos:column="21"/></operator> <literal type="number" pos:line="32" pos:column="22">2<pos:position pos:line="32" pos:column="23"/></literal></expr>;<pos:position pos:line="32" pos:column="24"/></expr_stmt>
                <expr_stmt><expr><name pos:line="33" pos:column="17">j<pos:position pos:line="33" pos:column="18"/></name> <operator pos:line="33" pos:column="19">+=<pos:position pos:line="33" pos:column="21"/></operator> <literal type="number" pos:line="33" pos:column="22">11<pos:position pos:line="33" pos:column="24"/></literal></expr>;<pos:position pos:line="33" pos:column="25"/></expr_stmt>
                <break pos:line="34" pos:column="17">break;<pos:position pos:line="34" pos:column="23"/></break>
            <case pos:line="35" pos:column="13">case <expr><literal type="char" pos:line="35" pos:column="18">'T'<pos:position pos:line="35" pos:column="21"/></literal></expr>:<pos:position pos:line="35" pos:column="22"/></case>
                <expr_stmt><expr><call><name pos:line="36" pos:column="17">memcpy<pos:position pos:line="36" pos:column="23"/></name><argument_list pos:line="36" pos:column="23">(<argument><expr><name pos:line="36" pos:column="24">new_format<pos:position pos:line="36" pos:column="34"/></name> <operator pos:line="36" pos:column="35">+<pos:position pos:line="36" pos:column="36"/></operator> <name pos:line="36" pos:column="37">j<pos:position pos:line="36" pos:column="38"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="36" pos:column="40">"%H:%M:%S"<pos:position pos:line="36" pos:column="50"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="36" pos:column="52">8<pos:position pos:line="36" pos:column="53"/></literal></expr></argument>)<pos:position pos:line="36" pos:column="54"/></argument_list></call></expr>;<pos:position pos:line="36" pos:column="55"/></expr_stmt>
                <expr_stmt><expr><name pos:line="37" pos:column="17">i<pos:position pos:line="37" pos:column="18"/></name> <operator pos:line="37" pos:column="19">+=<pos:position pos:line="37" pos:column="21"/></operator> <literal type="number" pos:line="37" pos:column="22">2<pos:position pos:line="37" pos:column="23"/></literal></expr>;<pos:position pos:line="37" pos:column="24"/></expr_stmt>
                <expr_stmt><expr><name pos:line="38" pos:column="17">j<pos:position pos:line="38" pos:column="18"/></name> <operator pos:line="38" pos:column="19">+=<pos:position pos:line="38" pos:column="21"/></operator> <literal type="number" pos:line="38" pos:column="22">8<pos:position pos:line="38" pos:column="23"/></literal></expr>;<pos:position pos:line="38" pos:column="24"/></expr_stmt>
                <break pos:line="39" pos:column="17">break;<pos:position pos:line="39" pos:column="23"/></break>
            <case pos:line="40" pos:column="13">case <expr><literal type="char" pos:line="40" pos:column="18">'e'<pos:position pos:line="40" pos:column="21"/></literal></expr>:<pos:position pos:line="40" pos:column="22"/></case>
                <expr_stmt><expr><name pos:line="41" pos:column="17">length_written<pos:position pos:line="41" pos:column="31"/></name> <operator pos:line="41" pos:column="32">=<pos:position pos:line="41" pos:column="33"/></operator> <call><name pos:line="41" pos:column="34">apr_snprintf<pos:position pos:line="41" pos:column="46"/></name><argument_list pos:line="41" pos:column="46">(<argument><expr><name pos:line="41" pos:column="47">new_format<pos:position pos:line="41" pos:column="57"/></name> <operator pos:line="41" pos:column="58">+<pos:position pos:line="41" pos:column="59"/></operator> <name pos:line="41" pos:column="60">j<pos:position pos:line="41" pos:column="61"/></name></expr></argument>, <argument><expr><name pos:line="41" pos:column="63">max<pos:position pos:line="41" pos:column="66"/></name> <operator pos:line="41" pos:column="67">-<pos:position pos:line="41" pos:column="68"/></operator> <name pos:line="41" pos:column="69">j<pos:position pos:line="41" pos:column="70"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="41" pos:column="72">"%2d"<pos:position pos:line="41" pos:column="77"/></literal></expr></argument>,
                    <argument><expr><name><name pos:line="42" pos:column="21">tm<pos:position pos:line="42" pos:column="23"/></name><operator pos:line="42" pos:column="23">-&gt;<pos:position pos:line="42" pos:column="28"/></operator><name pos:line="42" pos:column="25">tm_mday<pos:position pos:line="42" pos:column="32"/></name></name></expr></argument>)<pos:position pos:line="42" pos:column="33"/></argument_list></call></expr>;<pos:position pos:line="42" pos:column="34"/></expr_stmt>
                <expr_stmt><expr><name pos:line="43" pos:column="17">j<pos:position pos:line="43" pos:column="18"/></name> <operator pos:line="43" pos:column="19">=<pos:position pos:line="43" pos:column="20"/></operator> <ternary><condition><expr><operator pos:line="43" pos:column="21">(<pos:position pos:line="43" pos:column="22"/></operator><name pos:line="43" pos:column="22">length_written<pos:position pos:line="43" pos:column="36"/></name> <operator pos:line="43" pos:column="37">==<pos:position pos:line="43" pos:column="39"/></operator> <operator pos:line="43" pos:column="40">-<pos:position pos:line="43" pos:column="41"/></operator><literal type="number" pos:line="43" pos:column="41">1<pos:position pos:line="43" pos:column="42"/></literal><operator pos:line="43" pos:column="42">)<pos:position pos:line="43" pos:column="43"/></operator></expr> ?<pos:position pos:line="43" pos:column="45"/></condition><then pos:line="43" pos:column="45"> <expr><name pos:line="43" pos:column="46">max<pos:position pos:line="43" pos:column="49"/></name></expr> <pos:position pos:line="43" pos:column="50"/></then><else pos:line="43" pos:column="50">: <expr><operator pos:line="43" pos:column="52">(<pos:position pos:line="43" pos:column="53"/></operator><name pos:line="43" pos:column="53">j<pos:position pos:line="43" pos:column="54"/></name> <operator pos:line="43" pos:column="55">+<pos:position pos:line="43" pos:column="56"/></operator> <name pos:line="43" pos:column="57">length_written<pos:position pos:line="43" pos:column="71"/></name><operator pos:line="43" pos:column="71">)<pos:position pos:line="43" pos:column="72"/></operator></expr></else></ternary></expr>;<pos:position pos:line="43" pos:column="73"/></expr_stmt>
                <expr_stmt><expr><name pos:line="44" pos:column="17">i<pos:position pos:line="44" pos:column="18"/></name> <operator pos:line="44" pos:column="19">+=<pos:position pos:line="44" pos:column="21"/></operator> <literal type="number" pos:line="44" pos:column="22">2<pos:position pos:line="44" pos:column="23"/></literal></expr>;<pos:position pos:line="44" pos:column="24"/></expr_stmt>
                <break pos:line="45" pos:column="17">break;<pos:position pos:line="45" pos:column="23"/></break>
            <default pos:line="46" pos:column="13">default:<pos:position pos:line="46" pos:column="21"/></default>
                <comment type="block" pos:line="47" pos:column="17">/* We know we can advance two characters forward here. Also
                 * makes sure that %% is preserved. */</comment>
                <expr_stmt><expr><name><name pos:line="49" pos:column="17">new_format<pos:position pos:line="49" pos:column="27"/></name><index pos:line="49" pos:column="27">[<expr><name pos:line="49" pos:column="28">j<pos:position pos:line="49" pos:column="29"/></name><operator pos:line="49" pos:column="29">++<pos:position pos:line="49" pos:column="31"/></operator></expr>]<pos:position pos:line="49" pos:column="32"/></index></name> <operator pos:line="49" pos:column="33">=<pos:position pos:line="49" pos:column="34"/></operator> <name><name pos:line="49" pos:column="35">format<pos:position pos:line="49" pos:column="41"/></name><index pos:line="49" pos:column="41">[<expr><name pos:line="49" pos:column="42">i<pos:position pos:line="49" pos:column="43"/></name><operator pos:line="49" pos:column="43">++<pos:position pos:line="49" pos:column="45"/></operator></expr>]<pos:position pos:line="49" pos:column="46"/></index></name></expr>;<pos:position pos:line="49" pos:column="47"/></expr_stmt>
                <expr_stmt><expr><name><name pos:line="50" pos:column="17">new_format<pos:position pos:line="50" pos:column="27"/></name><index pos:line="50" pos:column="27">[<expr><name pos:line="50" pos:column="28">j<pos:position pos:line="50" pos:column="29"/></name><operator pos:line="50" pos:column="29">++<pos:position pos:line="50" pos:column="31"/></operator></expr>]<pos:position pos:line="50" pos:column="32"/></index></name> <operator pos:line="50" pos:column="33">=<pos:position pos:line="50" pos:column="34"/></operator> <name><name pos:line="50" pos:column="35">format<pos:position pos:line="50" pos:column="41"/></name><index pos:line="50" pos:column="41">[<expr><name pos:line="50" pos:column="42">i<pos:position pos:line="50" pos:column="43"/></name><operator pos:line="50" pos:column="43">++<pos:position pos:line="50" pos:column="45"/></operator></expr>]<pos:position pos:line="50" pos:column="46"/></index></name></expr>;<pos:position pos:line="50" pos:column="47"/></expr_stmt>
        }<pos:position pos:line="51" pos:column="10"/></block></switch>
    }<pos:position pos:line="52" pos:column="6"/></block></for>
    <if pos:line="53" pos:column="5">if <condition pos:line="53" pos:column="8">(<expr><name pos:line="53" pos:column="9">j<pos:position pos:line="53" pos:column="10"/></name> <operator pos:line="53" pos:column="11">&gt;=<pos:position pos:line="53" pos:column="16"/></operator> <name pos:line="53" pos:column="14">max<pos:position pos:line="53" pos:column="17"/></name></expr>)<pos:position pos:line="53" pos:column="18"/></condition><then pos:line="53" pos:column="18"> <block pos:line="53" pos:column="19">{
        <expr_stmt><expr><operator pos:line="54" pos:column="9">*<pos:position pos:line="54" pos:column="10"/></operator><name pos:line="54" pos:column="10">s<pos:position pos:line="54" pos:column="11"/></name> <operator pos:line="54" pos:column="12">=<pos:position pos:line="54" pos:column="13"/></operator> <literal type="char" pos:line="54" pos:column="14">'\0'<pos:position pos:line="54" pos:column="18"/></literal></expr>;<pos:position pos:line="54" pos:column="19"/></expr_stmt>  <comment type="block" pos:line="54" pos:column="21">/* Defensive programming, okay since output is undefined*/</comment>
        <expr_stmt><expr><name pos:line="55" pos:column="9">return_value<pos:position pos:line="55" pos:column="21"/></name> <operator pos:line="55" pos:column="22">=<pos:position pos:line="55" pos:column="23"/></operator> <literal type="number" pos:line="55" pos:column="24">0<pos:position pos:line="55" pos:column="25"/></literal></expr>;<pos:position pos:line="55" pos:column="26"/></expr_stmt>
    }<pos:position pos:line="56" pos:column="6"/></block></then> <else pos:line="56" pos:column="7">else <block pos:line="56" pos:column="12">{
        <expr_stmt><expr><name><name pos:line="57" pos:column="9">new_format<pos:position pos:line="57" pos:column="19"/></name><index pos:line="57" pos:column="19">[<expr><name pos:line="57" pos:column="20">j<pos:position pos:line="57" pos:column="21"/></name></expr>]<pos:position pos:line="57" pos:column="22"/></index></name> <operator pos:line="57" pos:column="23">=<pos:position pos:line="57" pos:column="24"/></operator> <literal type="char" pos:line="57" pos:column="25">'\0'<pos:position pos:line="57" pos:column="29"/></literal></expr>;<pos:position pos:line="57" pos:column="30"/></expr_stmt>
        <expr_stmt><expr><name pos:line="58" pos:column="9">return_value<pos:position pos:line="58" pos:column="21"/></name> <operator pos:line="58" pos:column="22">=<pos:position pos:line="58" pos:column="23"/></operator> <call><name pos:line="58" pos:column="24">strftime<pos:position pos:line="58" pos:column="32"/></name><argument_list pos:line="58" pos:column="32">(<argument><expr><name pos:line="58" pos:column="33">s<pos:position pos:line="58" pos:column="34"/></name></expr></argument>, <argument><expr><name pos:line="58" pos:column="36">max<pos:position pos:line="58" pos:column="39"/></name></expr></argument>, <argument><expr><name pos:line="58" pos:column="41">new_format<pos:position pos:line="58" pos:column="51"/></name></expr></argument>, <argument><expr><name pos:line="58" pos:column="53">tm<pos:position pos:line="58" pos:column="55"/></name></expr></argument>)<pos:position pos:line="58" pos:column="56"/></argument_list></call></expr>;<pos:position pos:line="58" pos:column="57"/></expr_stmt>
    }<pos:position pos:line="59" pos:column="6"/></block></else></if>
    <expr_stmt><expr><call><name pos:line="60" pos:column="5">free<pos:position pos:line="60" pos:column="9"/></name><argument_list pos:line="60" pos:column="9">(<argument><expr><name pos:line="60" pos:column="10">new_format<pos:position pos:line="60" pos:column="20"/></name></expr></argument>)<pos:position pos:line="60" pos:column="21"/></argument_list></call></expr>;<pos:position pos:line="60" pos:column="22"/></expr_stmt>
    <return pos:line="61" pos:column="5">return <expr><name pos:line="61" pos:column="12">return_value<pos:position pos:line="61" pos:column="24"/></name></expr>;<pos:position pos:line="61" pos:column="25"/></return>
 }<pos:position pos:line="62" pos:column="3"/></block></function></unit>

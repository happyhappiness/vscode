<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/httpd/gumtree/httpd_repos_function_2669_httpd-2.2.22.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">int<pos:position pos:line="1" pos:column="11"/></name></type> <name pos:line="1" pos:column="12">select_sequential<pos:position pos:line="1" pos:column="29"/></name><parameter_list pos:line="1" pos:column="29">(<parameter><decl><type><name pos:line="1" pos:column="30">apr_pool_t<pos:position pos:line="1" pos:column="40"/></name><modifier pos:line="1" pos:column="40">*<pos:position pos:line="1" pos:column="41"/></modifier></type> <name pos:line="1" pos:column="42">pool<pos:position pos:line="1" pos:column="46"/></name></decl></parameter>, <parameter><decl><type><name pos:line="1" pos:column="48">apr_dbd_t<pos:position pos:line="1" pos:column="57"/></name><modifier pos:line="1" pos:column="57">*<pos:position pos:line="1" pos:column="58"/></modifier></type> <name pos:line="1" pos:column="59">handle<pos:position pos:line="1" pos:column="65"/></name></decl></parameter>,
                             <parameter><decl><type><specifier pos:line="2" pos:column="30">const<pos:position pos:line="2" pos:column="35"/></specifier> <name pos:line="2" pos:column="36">apr_dbd_driver_t<pos:position pos:line="2" pos:column="52"/></name><modifier pos:line="2" pos:column="52">*<pos:position pos:line="2" pos:column="53"/></modifier></type> <name pos:line="2" pos:column="54">driver<pos:position pos:line="2" pos:column="60"/></name></decl></parameter>)<pos:position pos:line="2" pos:column="61"/></parameter_list>
<block pos:line="3" pos:column="1">{
    <decl_stmt><decl><type><name pos:line="4" pos:column="5">int<pos:position pos:line="4" pos:column="8"/></name></type> <name pos:line="4" pos:column="9">rv<pos:position pos:line="4" pos:column="11"/></name> <init pos:line="4" pos:column="12">= <expr><literal type="number" pos:line="4" pos:column="14">0<pos:position pos:line="4" pos:column="15"/></literal></expr></init></decl>;<pos:position pos:line="4" pos:column="16"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="5" pos:column="5">int<pos:position pos:line="5" pos:column="8"/></name></type> <name pos:line="5" pos:column="9">i<pos:position pos:line="5" pos:column="10"/></name> <init pos:line="5" pos:column="11">= <expr><literal type="number" pos:line="5" pos:column="13">0<pos:position pos:line="5" pos:column="14"/></literal></expr></init></decl>;<pos:position pos:line="5" pos:column="15"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="6" pos:column="5">int<pos:position pos:line="6" pos:column="8"/></name></type> <name pos:line="6" pos:column="9">n<pos:position pos:line="6" pos:column="10"/></name></decl>;<pos:position pos:line="6" pos:column="11"/></decl_stmt>
    <decl_stmt><decl><type><specifier pos:line="7" pos:column="5">const<pos:position pos:line="7" pos:column="10"/></specifier> <name pos:line="7" pos:column="11">char<pos:position pos:line="7" pos:column="15"/></name><modifier pos:line="7" pos:column="15">*<pos:position pos:line="7" pos:column="16"/></modifier></type> <name pos:line="7" pos:column="17">entry<pos:position pos:line="7" pos:column="22"/></name></decl>;<pos:position pos:line="7" pos:column="23"/></decl_stmt>
    <decl_stmt><decl><type><specifier pos:line="8" pos:column="5">const<pos:position pos:line="8" pos:column="10"/></specifier> <name pos:line="8" pos:column="11">char<pos:position pos:line="8" pos:column="15"/></name><modifier pos:line="8" pos:column="15">*<pos:position pos:line="8" pos:column="16"/></modifier></type> <name pos:line="8" pos:column="17">statement<pos:position pos:line="8" pos:column="26"/></name> <init pos:line="8" pos:column="27">= <expr><literal type="string" pos:line="8" pos:column="29">"SELECT * FROM apr_dbd_test ORDER BY col1, col2"<pos:position pos:line="8" pos:column="77"/></literal></expr></init></decl>;<pos:position pos:line="8" pos:column="78"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="9" pos:column="5">apr_dbd_results_t<pos:position pos:line="9" pos:column="22"/></name> <modifier pos:line="9" pos:column="23">*<pos:position pos:line="9" pos:column="24"/></modifier></type><name pos:line="9" pos:column="24">res<pos:position pos:line="9" pos:column="27"/></name> <init pos:line="9" pos:column="28">= <expr><name pos:line="9" pos:column="30">NULL<pos:position pos:line="9" pos:column="34"/></name></expr></init></decl>;<pos:position pos:line="9" pos:column="35"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="10" pos:column="5">apr_dbd_row_t<pos:position pos:line="10" pos:column="18"/></name> <modifier pos:line="10" pos:column="19">*<pos:position pos:line="10" pos:column="20"/></modifier></type><name pos:line="10" pos:column="20">row<pos:position pos:line="10" pos:column="23"/></name> <init pos:line="10" pos:column="24">= <expr><name pos:line="10" pos:column="26">NULL<pos:position pos:line="10" pos:column="30"/></name></expr></init></decl>;<pos:position pos:line="10" pos:column="31"/></decl_stmt>
    <expr_stmt><expr><name pos:line="11" pos:column="5">rv<pos:position pos:line="11" pos:column="7"/></name> <operator pos:line="11" pos:column="8">=<pos:position pos:line="11" pos:column="9"/></operator> <call><name pos:line="11" pos:column="10">apr_dbd_select<pos:position pos:line="11" pos:column="24"/></name><argument_list pos:line="11" pos:column="24">(<argument><expr><name pos:line="11" pos:column="25">driver<pos:position pos:line="11" pos:column="31"/></name></expr></argument>,<argument><expr><name pos:line="11" pos:column="32">pool<pos:position pos:line="11" pos:column="36"/></name></expr></argument>,<argument><expr><name pos:line="11" pos:column="37">handle<pos:position pos:line="11" pos:column="43"/></name></expr></argument>,<argument><expr><operator pos:line="11" pos:column="44">&amp;<pos:position pos:line="11" pos:column="49"/></operator><name pos:line="11" pos:column="45">res<pos:position pos:line="11" pos:column="48"/></name></expr></argument>,<argument><expr><name pos:line="11" pos:column="49">statement<pos:position pos:line="11" pos:column="58"/></name></expr></argument>,<argument><expr><literal type="number" pos:line="11" pos:column="59">0<pos:position pos:line="11" pos:column="60"/></literal></expr></argument>)<pos:position pos:line="11" pos:column="61"/></argument_list></call></expr>;<pos:position pos:line="11" pos:column="62"/></expr_stmt>
    <if pos:line="12" pos:column="5">if <condition pos:line="12" pos:column="8">(<expr><name pos:line="12" pos:column="9">rv<pos:position pos:line="12" pos:column="11"/></name></expr>)<pos:position pos:line="12" pos:column="12"/></condition><then pos:line="12" pos:column="12"> <block pos:line="12" pos:column="13">{
        <expr_stmt><expr><call><name pos:line="13" pos:column="9">printf<pos:position pos:line="13" pos:column="15"/></name><argument_list pos:line="13" pos:column="15">(<argument><expr><literal type="string" pos:line="13" pos:column="16">"Select failed: %s"<pos:position pos:line="13" pos:column="35"/></literal></expr></argument>, <argument><expr><call><name pos:line="13" pos:column="37">apr_dbd_error<pos:position pos:line="13" pos:column="50"/></name><argument_list pos:line="13" pos:column="50">(<argument><expr><name pos:line="13" pos:column="51">driver<pos:position pos:line="13" pos:column="57"/></name></expr></argument>, <argument><expr><name pos:line="13" pos:column="59">handle<pos:position pos:line="13" pos:column="65"/></name></expr></argument>, <argument><expr><name pos:line="13" pos:column="67">rv<pos:position pos:line="13" pos:column="69"/></name></expr></argument>)<pos:position pos:line="13" pos:column="70"/></argument_list></call></expr></argument>)<pos:position pos:line="13" pos:column="71"/></argument_list></call></expr>;<pos:position pos:line="13" pos:column="72"/></expr_stmt>
        <return pos:line="14" pos:column="9">return <expr><name pos:line="14" pos:column="16">rv<pos:position pos:line="14" pos:column="18"/></name></expr>;<pos:position pos:line="14" pos:column="19"/></return>
    }<pos:position pos:line="15" pos:column="6"/></block></then></if>
    <for pos:line="16" pos:column="5">for <control pos:line="16" pos:column="9">(<init><expr><name pos:line="16" pos:column="10">rv<pos:position pos:line="16" pos:column="12"/></name> <operator pos:line="16" pos:column="13">=<pos:position pos:line="16" pos:column="14"/></operator> <call><name pos:line="16" pos:column="15">apr_dbd_get_row<pos:position pos:line="16" pos:column="30"/></name><argument_list pos:line="16" pos:column="30">(<argument><expr><name pos:line="16" pos:column="31">driver<pos:position pos:line="16" pos:column="37"/></name></expr></argument>, <argument><expr><name pos:line="16" pos:column="39">pool<pos:position pos:line="16" pos:column="43"/></name></expr></argument>, <argument><expr><name pos:line="16" pos:column="45">res<pos:position pos:line="16" pos:column="48"/></name></expr></argument>, <argument><expr><operator pos:line="16" pos:column="50">&amp;<pos:position pos:line="16" pos:column="55"/></operator><name pos:line="16" pos:column="51">row<pos:position pos:line="16" pos:column="54"/></name></expr></argument>, <argument><expr><operator pos:line="16" pos:column="56">-<pos:position pos:line="16" pos:column="57"/></operator><literal type="number" pos:line="16" pos:column="57">1<pos:position pos:line="16" pos:column="58"/></literal></expr></argument>)<pos:position pos:line="16" pos:column="59"/></argument_list></call></expr>;<pos:position pos:line="16" pos:column="60"/></init>
         <condition><expr><name pos:line="17" pos:column="10">rv<pos:position pos:line="17" pos:column="12"/></name> <operator pos:line="17" pos:column="13">==<pos:position pos:line="17" pos:column="15"/></operator> <literal type="number" pos:line="17" pos:column="16">0<pos:position pos:line="17" pos:column="17"/></literal></expr>;<pos:position pos:line="17" pos:column="18"/></condition>
         <incr><expr><name pos:line="18" pos:column="10">rv<pos:position pos:line="18" pos:column="12"/></name> <operator pos:line="18" pos:column="13">=<pos:position pos:line="18" pos:column="14"/></operator> <call><name pos:line="18" pos:column="15">apr_dbd_get_row<pos:position pos:line="18" pos:column="30"/></name><argument_list pos:line="18" pos:column="30">(<argument><expr><name pos:line="18" pos:column="31">driver<pos:position pos:line="18" pos:column="37"/></name></expr></argument>, <argument><expr><name pos:line="18" pos:column="39">pool<pos:position pos:line="18" pos:column="43"/></name></expr></argument>, <argument><expr><name pos:line="18" pos:column="45">res<pos:position pos:line="18" pos:column="48"/></name></expr></argument>, <argument><expr><operator pos:line="18" pos:column="50">&amp;<pos:position pos:line="18" pos:column="55"/></operator><name pos:line="18" pos:column="51">row<pos:position pos:line="18" pos:column="54"/></name></expr></argument>, <argument><expr><operator pos:line="18" pos:column="56">-<pos:position pos:line="18" pos:column="57"/></operator><literal type="number" pos:line="18" pos:column="57">1<pos:position pos:line="18" pos:column="58"/></literal></expr></argument>)<pos:position pos:line="18" pos:column="59"/></argument_list></call></expr></incr>)<pos:position pos:line="18" pos:column="60"/></control> <block pos:line="18" pos:column="61">{
        <expr_stmt><expr><call><name pos:line="19" pos:column="9">printf<pos:position pos:line="19" pos:column="15"/></name><argument_list pos:line="19" pos:column="15">(<argument><expr><literal type="string" pos:line="19" pos:column="16">"ROW %d:	"<pos:position pos:line="19" pos:column="26"/></literal></expr></argument>, <argument><expr><operator pos:line="19" pos:column="28">++<pos:position pos:line="19" pos:column="30"/></operator><name pos:line="19" pos:column="30">i<pos:position pos:line="19" pos:column="31"/></name></expr></argument>)<pos:position pos:line="19" pos:column="32"/></argument_list></call></expr> ;<pos:position pos:line="19" pos:column="34"/></expr_stmt>
        <for pos:line="20" pos:column="9">for <control pos:line="20" pos:column="13">(<init><expr><name pos:line="20" pos:column="14">n<pos:position pos:line="20" pos:column="15"/></name> <operator pos:line="20" pos:column="16">=<pos:position pos:line="20" pos:column="17"/></operator> <literal type="number" pos:line="20" pos:column="18">0<pos:position pos:line="20" pos:column="19"/></literal></expr>;<pos:position pos:line="20" pos:column="20"/></init> <condition><expr><name pos:line="20" pos:column="21">n<pos:position pos:line="20" pos:column="22"/></name> <operator pos:line="20" pos:column="23">&lt;<pos:position pos:line="20" pos:column="27"/></operator> <call><name pos:line="20" pos:column="25">apr_dbd_num_cols<pos:position pos:line="20" pos:column="41"/></name><argument_list pos:line="20" pos:column="41">(<argument><expr><name pos:line="20" pos:column="42">driver<pos:position pos:line="20" pos:column="48"/></name></expr></argument>, <argument><expr><name pos:line="20" pos:column="50">res<pos:position pos:line="20" pos:column="53"/></name></expr></argument>)<pos:position pos:line="20" pos:column="54"/></argument_list></call></expr>;<pos:position pos:line="20" pos:column="55"/></condition> <incr><expr><operator pos:line="20" pos:column="56">++<pos:position pos:line="20" pos:column="58"/></operator><name pos:line="20" pos:column="58">n<pos:position pos:line="20" pos:column="59"/></name></expr></incr>)<pos:position pos:line="20" pos:column="60"/></control> <block pos:line="20" pos:column="61">{
            <expr_stmt><expr><name pos:line="21" pos:column="13">entry<pos:position pos:line="21" pos:column="18"/></name> <operator pos:line="21" pos:column="19">=<pos:position pos:line="21" pos:column="20"/></operator> <call><name pos:line="21" pos:column="21">apr_dbd_get_entry<pos:position pos:line="21" pos:column="38"/></name><argument_list pos:line="21" pos:column="38">(<argument><expr><name pos:line="21" pos:column="39">driver<pos:position pos:line="21" pos:column="45"/></name></expr></argument>, <argument><expr><name pos:line="21" pos:column="47">row<pos:position pos:line="21" pos:column="50"/></name></expr></argument>, <argument><expr><name pos:line="21" pos:column="52">n<pos:position pos:line="21" pos:column="53"/></name></expr></argument>)<pos:position pos:line="21" pos:column="54"/></argument_list></call></expr>;<pos:position pos:line="21" pos:column="55"/></expr_stmt>
            <if pos:line="22" pos:column="13">if <condition pos:line="22" pos:column="16">(<expr><name pos:line="22" pos:column="17">entry<pos:position pos:line="22" pos:column="22"/></name> <operator pos:line="22" pos:column="23">==<pos:position pos:line="22" pos:column="25"/></operator> <name pos:line="22" pos:column="26">NULL<pos:position pos:line="22" pos:column="30"/></name></expr>)<pos:position pos:line="22" pos:column="31"/></condition><then pos:line="22" pos:column="31"> <block pos:line="22" pos:column="32">{
                <expr_stmt><expr><call><name pos:line="23" pos:column="17">printf<pos:position pos:line="23" pos:column="23"/></name><argument_list pos:line="23" pos:column="23">(<argument><expr><literal type="string" pos:line="23" pos:column="24">"(null)	"<pos:position pos:line="23" pos:column="33"/></literal></expr></argument>)<pos:position pos:line="23" pos:column="35"/></argument_list></call></expr> ;<pos:position pos:line="23" pos:column="37"/></expr_stmt>
            }<pos:position pos:line="24" pos:column="14"/></block></then>
            <else pos:line="25" pos:column="13">else <block pos:line="25" pos:column="18">{
                <expr_stmt><expr><call><name pos:line="26" pos:column="17">printf<pos:position pos:line="26" pos:column="23"/></name><argument_list pos:line="26" pos:column="23">(<argument><expr><literal type="string" pos:line="26" pos:column="24">"%s	"<pos:position pos:line="26" pos:column="29"/></literal></expr></argument>, <argument><expr><name pos:line="26" pos:column="36">entry<pos:position pos:line="26" pos:column="41"/></name></expr></argument>)<pos:position pos:line="26" pos:column="42"/></argument_list></call></expr>;<pos:position pos:line="26" pos:column="43"/></expr_stmt>
            }<pos:position pos:line="27" pos:column="14"/></block></else></if>
        }<pos:position pos:line="28" pos:column="10"/></block></for>
	<expr_stmt><expr><call><name pos:line="29" pos:column="9">fputs<pos:position pos:line="29" pos:column="14"/></name><argument_list pos:line="29" pos:column="14">(<argument><expr><literal type="string" pos:line="29" pos:column="15">"\n"<pos:position pos:line="29" pos:column="19"/></literal></expr></argument>, <argument><expr><name pos:line="29" pos:column="21">stdout<pos:position pos:line="29" pos:column="27"/></name></expr></argument>)<pos:position pos:line="29" pos:column="28"/></argument_list></call></expr>;<pos:position pos:line="29" pos:column="29"/></expr_stmt>
    }<pos:position pos:line="30" pos:column="6"/></block></for>
    <return pos:line="31" pos:column="5">return <expr><ternary><condition><expr><operator pos:line="31" pos:column="12">(<pos:position pos:line="31" pos:column="13"/></operator><name pos:line="31" pos:column="13">rv<pos:position pos:line="31" pos:column="15"/></name> <operator pos:line="31" pos:column="16">==<pos:position pos:line="31" pos:column="18"/></operator> <operator pos:line="31" pos:column="19">-<pos:position pos:line="31" pos:column="20"/></operator><literal type="number" pos:line="31" pos:column="20">1<pos:position pos:line="31" pos:column="21"/></literal><operator pos:line="31" pos:column="21">)<pos:position pos:line="31" pos:column="22"/></operator></expr> ?<pos:position pos:line="31" pos:column="24"/></condition><then pos:line="31" pos:column="24"> <expr><literal type="number" pos:line="31" pos:column="25">0<pos:position pos:line="31" pos:column="26"/></literal></expr> <pos:position pos:line="31" pos:column="27"/></then><else pos:line="31" pos:column="27">: <expr><literal type="number" pos:line="31" pos:column="29">1<pos:position pos:line="31" pos:column="30"/></literal></expr></else></ternary></expr>;<pos:position pos:line="31" pos:column="31"/></return>
}<pos:position pos:line="32" pos:column="2"/></block></function></unit>

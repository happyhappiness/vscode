<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/httpd/gumtree/httpd_repos_function_3424_httpd-2.4.25.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">apr_array_header_t<pos:position pos:line="1" pos:column="26"/></name> <modifier pos:line="1" pos:column="27">*<pos:position pos:line="1" pos:column="28"/></modifier></type><name pos:line="1" pos:column="28">split_argv<pos:position pos:line="1" pos:column="38"/></name><parameter_list pos:line="1" pos:column="38">(<parameter><decl><type><name pos:line="1" pos:column="39">apr_pool_t<pos:position pos:line="1" pos:column="49"/></name> <modifier pos:line="1" pos:column="50">*<pos:position pos:line="1" pos:column="51"/></modifier></type><name pos:line="1" pos:column="51">p<pos:position pos:line="1" pos:column="52"/></name></decl></parameter>, <parameter><decl><type><specifier pos:line="1" pos:column="54">const<pos:position pos:line="1" pos:column="59"/></specifier> <name pos:line="1" pos:column="60">char<pos:position pos:line="1" pos:column="64"/></name> <modifier pos:line="1" pos:column="65">*<pos:position pos:line="1" pos:column="66"/></modifier></type><name pos:line="1" pos:column="66">interp<pos:position pos:line="1" pos:column="72"/></name></decl></parameter>,
                                      <parameter><decl><type><specifier pos:line="2" pos:column="39">const<pos:position pos:line="2" pos:column="44"/></specifier> <name pos:line="2" pos:column="45">char<pos:position pos:line="2" pos:column="49"/></name> <modifier pos:line="2" pos:column="50">*<pos:position pos:line="2" pos:column="51"/></modifier></type><name pos:line="2" pos:column="51">cgiprg<pos:position pos:line="2" pos:column="57"/></name></decl></parameter>, <parameter><decl><type><specifier pos:line="2" pos:column="59">const<pos:position pos:line="2" pos:column="64"/></specifier> <name pos:line="2" pos:column="65">char<pos:position pos:line="2" pos:column="69"/></name> <modifier pos:line="2" pos:column="70">*<pos:position pos:line="2" pos:column="71"/></modifier></type><name pos:line="2" pos:column="71">cgiargs<pos:position pos:line="2" pos:column="78"/></name></decl></parameter>)<pos:position pos:line="2" pos:column="79"/></parameter_list>
<block pos:line="3" pos:column="1">{
    <decl_stmt><decl><type><name pos:line="4" pos:column="5">apr_array_header_t<pos:position pos:line="4" pos:column="23"/></name> <modifier pos:line="4" pos:column="24">*<pos:position pos:line="4" pos:column="25"/></modifier></type><name pos:line="4" pos:column="25">args<pos:position pos:line="4" pos:column="29"/></name> <init pos:line="4" pos:column="30">= <expr><call><name pos:line="4" pos:column="32">apr_array_make<pos:position pos:line="4" pos:column="46"/></name><argument_list pos:line="4" pos:column="46">(<argument><expr><name pos:line="4" pos:column="47">p<pos:position pos:line="4" pos:column="48"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="4" pos:column="50">8<pos:position pos:line="4" pos:column="51"/></literal></expr></argument>, <argument><expr><sizeof pos:line="4" pos:column="53">sizeof<argument_list pos:line="4" pos:column="59">(<argument><expr><name pos:line="4" pos:column="60">char<pos:position pos:line="4" pos:column="64"/></name><operator pos:line="4" pos:column="64">*<pos:position pos:line="4" pos:column="65"/></operator></expr></argument>)<pos:position pos:line="4" pos:column="66"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="4" pos:column="67"/></argument_list></call></expr></init></decl>;<pos:position pos:line="4" pos:column="68"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="5" pos:column="5">char<pos:position pos:line="5" pos:column="9"/></name> <modifier pos:line="5" pos:column="10">*<pos:position pos:line="5" pos:column="11"/></modifier></type><name pos:line="5" pos:column="11">d<pos:position pos:line="5" pos:column="12"/></name> <init pos:line="5" pos:column="13">= <expr><call><name pos:line="5" pos:column="15">apr_palloc<pos:position pos:line="5" pos:column="25"/></name><argument_list pos:line="5" pos:column="25">(<argument><expr><name pos:line="5" pos:column="26">p<pos:position pos:line="5" pos:column="27"/></name></expr></argument>, <argument><expr><call><name pos:line="5" pos:column="29">strlen<pos:position pos:line="5" pos:column="35"/></name><argument_list pos:line="5" pos:column="35">(<argument><expr><name pos:line="5" pos:column="36">interp<pos:position pos:line="5" pos:column="42"/></name></expr></argument>)<pos:position pos:line="5" pos:column="43"/></argument_list></call><operator pos:line="5" pos:column="43">+<pos:position pos:line="5" pos:column="44"/></operator><literal type="number" pos:line="5" pos:column="44">1<pos:position pos:line="5" pos:column="45"/></literal></expr></argument>)<pos:position pos:line="5" pos:column="46"/></argument_list></call></expr></init></decl>;<pos:position pos:line="5" pos:column="47"/></decl_stmt>
    <decl_stmt><decl><type><specifier pos:line="6" pos:column="5">const<pos:position pos:line="6" pos:column="10"/></specifier> <name pos:line="6" pos:column="11">char<pos:position pos:line="6" pos:column="15"/></name> <modifier pos:line="6" pos:column="16">*<pos:position pos:line="6" pos:column="17"/></modifier></type><name pos:line="6" pos:column="17">ch<pos:position pos:line="6" pos:column="19"/></name> <init pos:line="6" pos:column="20">= <expr><name pos:line="6" pos:column="22">interp<pos:position pos:line="6" pos:column="28"/></name></expr></init></decl>;<pos:position pos:line="6" pos:column="29"/></decl_stmt>
    <decl_stmt><decl><type><specifier pos:line="7" pos:column="5">const<pos:position pos:line="7" pos:column="10"/></specifier> <name pos:line="7" pos:column="11">char<pos:position pos:line="7" pos:column="15"/></name> <modifier pos:line="7" pos:column="16">*<pos:position pos:line="7" pos:column="17"/></modifier><modifier pos:line="7" pos:column="17">*<pos:position pos:line="7" pos:column="18"/></modifier></type><name pos:line="7" pos:column="18">arg<pos:position pos:line="7" pos:column="21"/></name></decl>;<pos:position pos:line="7" pos:column="22"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="8" pos:column="5">int<pos:position pos:line="8" pos:column="8"/></name></type> <name pos:line="8" pos:column="9">prgtaken<pos:position pos:line="8" pos:column="17"/></name> <init pos:line="8" pos:column="18">= <expr><literal type="number" pos:line="8" pos:column="20">0<pos:position pos:line="8" pos:column="21"/></literal></expr></init></decl>;<pos:position pos:line="8" pos:column="22"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="9" pos:column="5">int<pos:position pos:line="9" pos:column="8"/></name></type> <name pos:line="9" pos:column="9">argtaken<pos:position pos:line="9" pos:column="17"/></name> <init pos:line="9" pos:column="18">= <expr><literal type="number" pos:line="9" pos:column="20">0<pos:position pos:line="9" pos:column="21"/></literal></expr></init></decl>;<pos:position pos:line="9" pos:column="22"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="10" pos:column="5">int<pos:position pos:line="10" pos:column="8"/></name></type> <name pos:line="10" pos:column="9">inquo<pos:position pos:line="10" pos:column="14"/></name></decl>;<pos:position pos:line="10" pos:column="15"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="11" pos:column="5">int<pos:position pos:line="11" pos:column="8"/></name></type> <name pos:line="11" pos:column="9">sl<pos:position pos:line="11" pos:column="11"/></name></decl>;<pos:position pos:line="11" pos:column="12"/></decl_stmt>

    <while pos:line="13" pos:column="5">while <condition pos:line="13" pos:column="11">(<expr><operator pos:line="13" pos:column="12">*<pos:position pos:line="13" pos:column="13"/></operator><name pos:line="13" pos:column="13">ch<pos:position pos:line="13" pos:column="15"/></name></expr>)<pos:position pos:line="13" pos:column="16"/></condition> <block pos:line="13" pos:column="17">{
        <comment type="block" pos:line="14" pos:column="9">/* Skip on through Deep Space */</comment>
        <if pos:line="15" pos:column="9">if <condition pos:line="15" pos:column="12">(<expr><call><name pos:line="15" pos:column="13">apr_isspace<pos:position pos:line="15" pos:column="24"/></name><argument_list pos:line="15" pos:column="24">(<argument><expr><operator pos:line="15" pos:column="25">*<pos:position pos:line="15" pos:column="26"/></operator><name pos:line="15" pos:column="26">ch<pos:position pos:line="15" pos:column="28"/></name></expr></argument>)<pos:position pos:line="15" pos:column="29"/></argument_list></call></expr>)<pos:position pos:line="15" pos:column="30"/></condition><then pos:line="15" pos:column="30"> <block pos:line="15" pos:column="31">{
            <expr_stmt><expr><operator pos:line="16" pos:column="13">++<pos:position pos:line="16" pos:column="15"/></operator><name pos:line="16" pos:column="15">ch<pos:position pos:line="16" pos:column="17"/></name></expr>;<pos:position pos:line="16" pos:column="18"/></expr_stmt> <continue pos:line="16" pos:column="19">continue;<pos:position pos:line="16" pos:column="28"/></continue>
        }<pos:position pos:line="17" pos:column="10"/></block></then></if>
        <comment type="block" pos:line="18" pos:column="9">/* One Arg */</comment>
        <if pos:line="19" pos:column="9">if <condition pos:line="19" pos:column="12">(<expr><operator pos:line="19" pos:column="13">(<pos:position pos:line="19" pos:column="14"/></operator><operator pos:line="19" pos:column="14">(<pos:position pos:line="19" pos:column="15"/></operator><operator pos:line="19" pos:column="15">*<pos:position pos:line="19" pos:column="16"/></operator><name pos:line="19" pos:column="16">ch<pos:position pos:line="19" pos:column="18"/></name> <operator pos:line="19" pos:column="19">==<pos:position pos:line="19" pos:column="21"/></operator> <literal type="char" pos:line="19" pos:column="22">'$'<pos:position pos:line="19" pos:column="25"/></literal><operator pos:line="19" pos:column="25">)<pos:position pos:line="19" pos:column="26"/></operator> <operator pos:line="19" pos:column="27">||<pos:position pos:line="19" pos:column="29"/></operator> <operator pos:line="19" pos:column="30">(<pos:position pos:line="19" pos:column="31"/></operator><operator pos:line="19" pos:column="31">*<pos:position pos:line="19" pos:column="32"/></operator><name pos:line="19" pos:column="32">ch<pos:position pos:line="19" pos:column="34"/></name> <operator pos:line="19" pos:column="35">==<pos:position pos:line="19" pos:column="37"/></operator> <literal type="char" pos:line="19" pos:column="38">'%'<pos:position pos:line="19" pos:column="41"/></literal><operator pos:line="19" pos:column="41">)<pos:position pos:line="19" pos:column="42"/></operator><operator pos:line="19" pos:column="42">)<pos:position pos:line="19" pos:column="43"/></operator> <operator pos:line="19" pos:column="44">&amp;&amp;<pos:position pos:line="19" pos:column="54"/></operator> <operator pos:line="19" pos:column="47">(<pos:position pos:line="19" pos:column="48"/></operator><operator pos:line="19" pos:column="48">*<pos:position pos:line="19" pos:column="49"/></operator><operator pos:line="19" pos:column="49">(<pos:position pos:line="19" pos:column="50"/></operator><name pos:line="19" pos:column="50">ch<pos:position pos:line="19" pos:column="52"/></name> <operator pos:line="19" pos:column="53">+<pos:position pos:line="19" pos:column="54"/></operator> <literal type="number" pos:line="19" pos:column="55">1<pos:position pos:line="19" pos:column="56"/></literal><operator pos:line="19" pos:column="56">)<pos:position pos:line="19" pos:column="57"/></operator> <operator pos:line="19" pos:column="58">==<pos:position pos:line="19" pos:column="60"/></operator> <literal type="char" pos:line="19" pos:column="61">'*'<pos:position pos:line="19" pos:column="64"/></literal><operator pos:line="19" pos:column="64">)<pos:position pos:line="19" pos:column="65"/></operator></expr>)<pos:position pos:line="19" pos:column="66"/></condition><then pos:line="19" pos:column="66"> <block pos:line="19" pos:column="67">{
            <decl_stmt><decl><type><specifier pos:line="20" pos:column="13">const<pos:position pos:line="20" pos:column="18"/></specifier> <name pos:line="20" pos:column="19">char<pos:position pos:line="20" pos:column="23"/></name> <modifier pos:line="20" pos:column="24">*<pos:position pos:line="20" pos:column="25"/></modifier></type><name pos:line="20" pos:column="25">cgiarg<pos:position pos:line="20" pos:column="31"/></name> <init pos:line="20" pos:column="32">= <expr><name pos:line="20" pos:column="34">cgiargs<pos:position pos:line="20" pos:column="41"/></name></expr></init></decl>;<pos:position pos:line="20" pos:column="42"/></decl_stmt>
            <expr_stmt><expr><name pos:line="21" pos:column="13">argtaken<pos:position pos:line="21" pos:column="21"/></name> <operator pos:line="21" pos:column="22">=<pos:position pos:line="21" pos:column="23"/></operator> <literal type="number" pos:line="21" pos:column="24">1<pos:position pos:line="21" pos:column="25"/></literal></expr>;<pos:position pos:line="21" pos:column="26"/></expr_stmt>
            <for pos:line="22" pos:column="13">for <control pos:line="22" pos:column="17">(<init pos:line="22" pos:column="18">;<pos:position pos:line="22" pos:column="19"/></init><condition pos:line="22" pos:column="19">;<pos:position pos:line="22" pos:column="20"/></condition><incr/>)<pos:position pos:line="22" pos:column="21"/></control> <block pos:line="22" pos:column="22">{
                <decl_stmt><decl><type><name pos:line="23" pos:column="17">char<pos:position pos:line="23" pos:column="21"/></name> <modifier pos:line="23" pos:column="22">*<pos:position pos:line="23" pos:column="23"/></modifier></type><name pos:line="23" pos:column="23">w<pos:position pos:line="23" pos:column="24"/></name> <init pos:line="23" pos:column="25">= <expr><call><name pos:line="23" pos:column="27">ap_getword_nulls<pos:position pos:line="23" pos:column="43"/></name><argument_list pos:line="23" pos:column="43">(<argument><expr><name pos:line="23" pos:column="44">p<pos:position pos:line="23" pos:column="45"/></name></expr></argument>, <argument><expr><operator pos:line="23" pos:column="47">&amp;<pos:position pos:line="23" pos:column="52"/></operator><name pos:line="23" pos:column="48">cgiarg<pos:position pos:line="23" pos:column="54"/></name></expr></argument>, <argument><expr><literal type="char" pos:line="23" pos:column="56">'+'<pos:position pos:line="23" pos:column="59"/></literal></expr></argument>)<pos:position pos:line="23" pos:column="60"/></argument_list></call></expr></init></decl>;<pos:position pos:line="23" pos:column="61"/></decl_stmt>
                <if pos:line="24" pos:column="17">if <condition pos:line="24" pos:column="20">(<expr><operator pos:line="24" pos:column="21">!<pos:position pos:line="24" pos:column="22"/></operator><operator pos:line="24" pos:column="22">*<pos:position pos:line="24" pos:column="23"/></operator><name pos:line="24" pos:column="23">w<pos:position pos:line="24" pos:column="24"/></name></expr>)<pos:position pos:line="24" pos:column="25"/></condition><then pos:line="24" pos:column="25"> <block pos:line="24" pos:column="26">{
                    <break pos:line="25" pos:column="21">break;<pos:position pos:line="25" pos:column="27"/></break>
                }<pos:position pos:line="26" pos:column="18"/></block></then></if>
                <expr_stmt><expr><call><name pos:line="27" pos:column="17">ap_unescape_url<pos:position pos:line="27" pos:column="32"/></name><argument_list pos:line="27" pos:column="32">(<argument><expr><name pos:line="27" pos:column="33">w<pos:position pos:line="27" pos:column="34"/></name></expr></argument>)<pos:position pos:line="27" pos:column="35"/></argument_list></call></expr>;<pos:position pos:line="27" pos:column="36"/></expr_stmt>
                <expr_stmt><expr><call><name pos:line="28" pos:column="17">prep_string<pos:position pos:line="28" pos:column="28"/></name><argument_list pos:line="28" pos:column="28">(<argument><expr><operator pos:line="28" pos:column="29">(<pos:position pos:line="28" pos:column="30"/></operator><specifier pos:line="28" pos:column="30">const<pos:position pos:line="28" pos:column="35"/></specifier> <name pos:line="28" pos:column="36">char<pos:position pos:line="28" pos:column="40"/></name><operator pos:line="28" pos:column="40">*<pos:position pos:line="28" pos:column="41"/></operator><operator pos:line="28" pos:column="41">*<pos:position pos:line="28" pos:column="42"/></operator><operator pos:line="28" pos:column="42">)<pos:position pos:line="28" pos:column="43"/></operator><operator pos:line="28" pos:column="43">&amp;<pos:position pos:line="28" pos:column="48"/></operator><name pos:line="28" pos:column="44">w<pos:position pos:line="28" pos:column="45"/></name></expr></argument>, <argument><expr><name pos:line="28" pos:column="47">p<pos:position pos:line="28" pos:column="48"/></name></expr></argument>)<pos:position pos:line="28" pos:column="49"/></argument_list></call></expr>;<pos:position pos:line="28" pos:column="50"/></expr_stmt>
                <expr_stmt><expr><name pos:line="29" pos:column="17">arg<pos:position pos:line="29" pos:column="20"/></name> <operator pos:line="29" pos:column="21">=<pos:position pos:line="29" pos:column="22"/></operator> <operator pos:line="29" pos:column="23">(<pos:position pos:line="29" pos:column="24"/></operator><specifier pos:line="29" pos:column="24">const<pos:position pos:line="29" pos:column="29"/></specifier> <name pos:line="29" pos:column="30">char<pos:position pos:line="29" pos:column="34"/></name><operator pos:line="29" pos:column="34">*<pos:position pos:line="29" pos:column="35"/></operator><operator pos:line="29" pos:column="35">*<pos:position pos:line="29" pos:column="36"/></operator><operator pos:line="29" pos:column="36">)<pos:position pos:line="29" pos:column="37"/></operator><call><name pos:line="29" pos:column="37">apr_array_push<pos:position pos:line="29" pos:column="51"/></name><argument_list pos:line="29" pos:column="51">(<argument><expr><name pos:line="29" pos:column="52">args<pos:position pos:line="29" pos:column="56"/></name></expr></argument>)<pos:position pos:line="29" pos:column="57"/></argument_list></call></expr>;<pos:position pos:line="29" pos:column="58"/></expr_stmt>
                <expr_stmt><expr><operator pos:line="30" pos:column="17">*<pos:position pos:line="30" pos:column="18"/></operator><name pos:line="30" pos:column="18">arg<pos:position pos:line="30" pos:column="21"/></name> <operator pos:line="30" pos:column="22">=<pos:position pos:line="30" pos:column="23"/></operator> <call><name pos:line="30" pos:column="24">ap_escape_shell_cmd<pos:position pos:line="30" pos:column="43"/></name><argument_list pos:line="30" pos:column="43">(<argument><expr><name pos:line="30" pos:column="44">p<pos:position pos:line="30" pos:column="45"/></name></expr></argument>, <argument><expr><name pos:line="30" pos:column="47">w<pos:position pos:line="30" pos:column="48"/></name></expr></argument>)<pos:position pos:line="30" pos:column="49"/></argument_list></call></expr>;<pos:position pos:line="30" pos:column="50"/></expr_stmt>
            }<pos:position pos:line="31" pos:column="14"/></block></for>
            <expr_stmt><expr><name pos:line="32" pos:column="13">ch<pos:position pos:line="32" pos:column="15"/></name> <operator pos:line="32" pos:column="16">+=<pos:position pos:line="32" pos:column="18"/></operator> <literal type="number" pos:line="32" pos:column="19">2<pos:position pos:line="32" pos:column="20"/></literal></expr>;<pos:position pos:line="32" pos:column="21"/></expr_stmt>
            <continue pos:line="33" pos:column="13">continue;<pos:position pos:line="33" pos:column="22"/></continue>
        }<pos:position pos:line="34" pos:column="10"/></block></then></if>
        <if pos:line="35" pos:column="9">if <condition pos:line="35" pos:column="12">(<expr><operator pos:line="35" pos:column="13">(<pos:position pos:line="35" pos:column="14"/></operator><operator pos:line="35" pos:column="14">(<pos:position pos:line="35" pos:column="15"/></operator><operator pos:line="35" pos:column="15">*<pos:position pos:line="35" pos:column="16"/></operator><name pos:line="35" pos:column="16">ch<pos:position pos:line="35" pos:column="18"/></name> <operator pos:line="35" pos:column="19">==<pos:position pos:line="35" pos:column="21"/></operator> <literal type="char" pos:line="35" pos:column="22">'$'<pos:position pos:line="35" pos:column="25"/></literal><operator pos:line="35" pos:column="25">)<pos:position pos:line="35" pos:column="26"/></operator> <operator pos:line="35" pos:column="27">||<pos:position pos:line="35" pos:column="29"/></operator> <operator pos:line="35" pos:column="30">(<pos:position pos:line="35" pos:column="31"/></operator><operator pos:line="35" pos:column="31">*<pos:position pos:line="35" pos:column="32"/></operator><name pos:line="35" pos:column="32">ch<pos:position pos:line="35" pos:column="34"/></name> <operator pos:line="35" pos:column="35">==<pos:position pos:line="35" pos:column="37"/></operator> <literal type="char" pos:line="35" pos:column="38">'%'<pos:position pos:line="35" pos:column="41"/></literal><operator pos:line="35" pos:column="41">)<pos:position pos:line="35" pos:column="42"/></operator><operator pos:line="35" pos:column="42">)<pos:position pos:line="35" pos:column="43"/></operator> <operator pos:line="35" pos:column="44">&amp;&amp;<pos:position pos:line="35" pos:column="54"/></operator> <operator pos:line="35" pos:column="47">(<pos:position pos:line="35" pos:column="48"/></operator><operator pos:line="35" pos:column="48">*<pos:position pos:line="35" pos:column="49"/></operator><operator pos:line="35" pos:column="49">(<pos:position pos:line="35" pos:column="50"/></operator><name pos:line="35" pos:column="50">ch<pos:position pos:line="35" pos:column="52"/></name> <operator pos:line="35" pos:column="53">+<pos:position pos:line="35" pos:column="54"/></operator> <literal type="number" pos:line="35" pos:column="55">1<pos:position pos:line="35" pos:column="56"/></literal><operator pos:line="35" pos:column="56">)<pos:position pos:line="35" pos:column="57"/></operator> <operator pos:line="35" pos:column="58">==<pos:position pos:line="35" pos:column="60"/></operator> <literal type="char" pos:line="35" pos:column="61">'1'<pos:position pos:line="35" pos:column="64"/></literal><operator pos:line="35" pos:column="64">)<pos:position pos:line="35" pos:column="65"/></operator></expr>)<pos:position pos:line="35" pos:column="66"/></condition><then pos:line="35" pos:column="66"> <block pos:line="35" pos:column="67">{
            <comment type="block" pos:line="36" pos:column="13">/* Todo: Make short name!!! */</comment>
            <expr_stmt><expr><name pos:line="37" pos:column="13">prgtaken<pos:position pos:line="37" pos:column="21"/></name> <operator pos:line="37" pos:column="22">=<pos:position pos:line="37" pos:column="23"/></operator> <literal type="number" pos:line="37" pos:column="24">1<pos:position pos:line="37" pos:column="25"/></literal></expr>;<pos:position pos:line="37" pos:column="26"/></expr_stmt>
            <expr_stmt><expr><name pos:line="38" pos:column="13">arg<pos:position pos:line="38" pos:column="16"/></name> <operator pos:line="38" pos:column="17">=<pos:position pos:line="38" pos:column="18"/></operator> <operator pos:line="38" pos:column="19">(<pos:position pos:line="38" pos:column="20"/></operator><specifier pos:line="38" pos:column="20">const<pos:position pos:line="38" pos:column="25"/></specifier> <name pos:line="38" pos:column="26">char<pos:position pos:line="38" pos:column="30"/></name><operator pos:line="38" pos:column="30">*<pos:position pos:line="38" pos:column="31"/></operator><operator pos:line="38" pos:column="31">*<pos:position pos:line="38" pos:column="32"/></operator><operator pos:line="38" pos:column="32">)<pos:position pos:line="38" pos:column="33"/></operator><call><name pos:line="38" pos:column="33">apr_array_push<pos:position pos:line="38" pos:column="47"/></name><argument_list pos:line="38" pos:column="47">(<argument><expr><name pos:line="38" pos:column="48">args<pos:position pos:line="38" pos:column="52"/></name></expr></argument>)<pos:position pos:line="38" pos:column="53"/></argument_list></call></expr>;<pos:position pos:line="38" pos:column="54"/></expr_stmt>
            <if pos:line="39" pos:column="13">if <condition pos:line="39" pos:column="16">(<expr><operator pos:line="39" pos:column="17">*<pos:position pos:line="39" pos:column="18"/></operator><name pos:line="39" pos:column="18">ch<pos:position pos:line="39" pos:column="20"/></name> <operator pos:line="39" pos:column="21">==<pos:position pos:line="39" pos:column="23"/></operator> <literal type="char" pos:line="39" pos:column="24">'%'<pos:position pos:line="39" pos:column="27"/></literal></expr>)<pos:position pos:line="39" pos:column="28"/></condition><then pos:line="39" pos:column="28"> <block pos:line="39" pos:column="29">{
                <decl_stmt><decl><type><name pos:line="40" pos:column="17">char<pos:position pos:line="40" pos:column="21"/></name> <modifier pos:line="40" pos:column="22">*<pos:position pos:line="40" pos:column="23"/></modifier></type><name pos:line="40" pos:column="23">repl<pos:position pos:line="40" pos:column="27"/></name> <init pos:line="40" pos:column="28">= <expr><call><name pos:line="40" pos:column="30">apr_pstrdup<pos:position pos:line="40" pos:column="41"/></name><argument_list pos:line="40" pos:column="41">(<argument><expr><name pos:line="40" pos:column="42">p<pos:position pos:line="40" pos:column="43"/></name></expr></argument>, <argument><expr><name pos:line="40" pos:column="45">cgiprg<pos:position pos:line="40" pos:column="51"/></name></expr></argument>)<pos:position pos:line="40" pos:column="52"/></argument_list></call></expr></init></decl>;<pos:position pos:line="40" pos:column="53"/></decl_stmt>
                <expr_stmt><expr><operator pos:line="41" pos:column="17">*<pos:position pos:line="41" pos:column="18"/></operator><name pos:line="41" pos:column="18">arg<pos:position pos:line="41" pos:column="21"/></name> <operator pos:line="41" pos:column="22">=<pos:position pos:line="41" pos:column="23"/></operator> <name pos:line="41" pos:column="24">repl<pos:position pos:line="41" pos:column="28"/></name></expr>;<pos:position pos:line="41" pos:column="29"/></expr_stmt>
                <while pos:line="42" pos:column="17">while <condition pos:line="42" pos:column="23">(<expr><operator pos:line="42" pos:column="24">(<pos:position pos:line="42" pos:column="25"/></operator><name pos:line="42" pos:column="25">repl<pos:position pos:line="42" pos:column="29"/></name> <operator pos:line="42" pos:column="30">=<pos:position pos:line="42" pos:column="31"/></operator> <call><name pos:line="42" pos:column="32">strchr<pos:position pos:line="42" pos:column="38"/></name><argument_list pos:line="42" pos:column="38">(<argument><expr><name pos:line="42" pos:column="39">repl<pos:position pos:line="42" pos:column="43"/></name></expr></argument>, <argument><expr><literal type="char" pos:line="42" pos:column="45">'/'<pos:position pos:line="42" pos:column="48"/></literal></expr></argument>)<pos:position pos:line="42" pos:column="49"/></argument_list></call><operator pos:line="42" pos:column="49">)<pos:position pos:line="42" pos:column="50"/></operator></expr>)<pos:position pos:line="42" pos:column="51"/></condition> <block pos:line="42" pos:column="52">{
                    <expr_stmt><expr><operator pos:line="43" pos:column="21">*<pos:position pos:line="43" pos:column="22"/></operator><name pos:line="43" pos:column="22">repl<pos:position pos:line="43" pos:column="26"/></name><operator pos:line="43" pos:column="26">++<pos:position pos:line="43" pos:column="28"/></operator> <operator pos:line="43" pos:column="29">=<pos:position pos:line="43" pos:column="30"/></operator> <literal type="char" pos:line="43" pos:column="31">'\\'<pos:position pos:line="43" pos:column="35"/></literal></expr>;<pos:position pos:line="43" pos:column="36"/></expr_stmt>
                }<pos:position pos:line="44" pos:column="18"/></block></while>
            }<pos:position pos:line="45" pos:column="14"/></block></then>
            <else pos:line="46" pos:column="13">else <block pos:line="46" pos:column="18">{
                <expr_stmt><expr><operator pos:line="47" pos:column="17">*<pos:position pos:line="47" pos:column="18"/></operator><name pos:line="47" pos:column="18">arg<pos:position pos:line="47" pos:column="21"/></name> <operator pos:line="47" pos:column="22">=<pos:position pos:line="47" pos:column="23"/></operator> <name pos:line="47" pos:column="24">cgiprg<pos:position pos:line="47" pos:column="30"/></name></expr>;<pos:position pos:line="47" pos:column="31"/></expr_stmt>
            }<pos:position pos:line="48" pos:column="14"/></block></else></if>
            <expr_stmt><expr><name pos:line="49" pos:column="13">ch<pos:position pos:line="49" pos:column="15"/></name> <operator pos:line="49" pos:column="16">+=<pos:position pos:line="49" pos:column="18"/></operator> <literal type="number" pos:line="49" pos:column="19">2<pos:position pos:line="49" pos:column="20"/></literal></expr>;<pos:position pos:line="49" pos:column="21"/></expr_stmt>
            <continue pos:line="50" pos:column="13">continue;<pos:position pos:line="50" pos:column="22"/></continue>
        }<pos:position pos:line="51" pos:column="10"/></block></then></if>
        <if pos:line="52" pos:column="9">if <condition pos:line="52" pos:column="12">(<expr><operator pos:line="52" pos:column="13">(<pos:position pos:line="52" pos:column="14"/></operator><operator pos:line="52" pos:column="14">*<pos:position pos:line="52" pos:column="15"/></operator><name pos:line="52" pos:column="15">ch<pos:position pos:line="52" pos:column="17"/></name> <operator pos:line="52" pos:column="18">==<pos:position pos:line="52" pos:column="20"/></operator> <literal type="char" pos:line="52" pos:column="21">'\"'<pos:position pos:line="52" pos:column="25"/></literal><operator pos:line="52" pos:column="25">)<pos:position pos:line="52" pos:column="26"/></operator> <operator pos:line="52" pos:column="27">&amp;&amp;<pos:position pos:line="52" pos:column="37"/></operator> <operator pos:line="52" pos:column="30">(<pos:position pos:line="52" pos:column="31"/></operator><operator pos:line="52" pos:column="31">(<pos:position pos:line="52" pos:column="32"/></operator><operator pos:line="52" pos:column="32">*<pos:position pos:line="52" pos:column="33"/></operator><operator pos:line="52" pos:column="33">(<pos:position pos:line="52" pos:column="34"/></operator><name pos:line="52" pos:column="34">ch<pos:position pos:line="52" pos:column="36"/></name> <operator pos:line="52" pos:column="37">+<pos:position pos:line="52" pos:column="38"/></operator> <literal type="number" pos:line="52" pos:column="39">1<pos:position pos:line="52" pos:column="40"/></literal><operator pos:line="52" pos:column="40">)<pos:position pos:line="52" pos:column="41"/></operator> <operator pos:line="52" pos:column="42">==<pos:position pos:line="52" pos:column="44"/></operator> <literal type="char" pos:line="52" pos:column="45">'$'<pos:position pos:line="52" pos:column="48"/></literal><operator pos:line="52" pos:column="48">)<pos:position pos:line="52" pos:column="49"/></operator>
                              <operator pos:line="53" pos:column="31">||<pos:position pos:line="53" pos:column="33"/></operator> <operator pos:line="53" pos:column="34">(<pos:position pos:line="53" pos:column="35"/></operator><operator pos:line="53" pos:column="35">*<pos:position pos:line="53" pos:column="36"/></operator><operator pos:line="53" pos:column="36">(<pos:position pos:line="53" pos:column="37"/></operator><name pos:line="53" pos:column="37">ch<pos:position pos:line="53" pos:column="39"/></name> <operator pos:line="53" pos:column="40">+<pos:position pos:line="53" pos:column="41"/></operator> <literal type="number" pos:line="53" pos:column="42">1<pos:position pos:line="53" pos:column="43"/></literal><operator pos:line="53" pos:column="43">)<pos:position pos:line="53" pos:column="44"/></operator> <operator pos:line="53" pos:column="45">==<pos:position pos:line="53" pos:column="47"/></operator> <literal type="char" pos:line="53" pos:column="48">'%'<pos:position pos:line="53" pos:column="51"/></literal><operator pos:line="53" pos:column="51">)<pos:position pos:line="53" pos:column="52"/></operator><operator pos:line="53" pos:column="52">)<pos:position pos:line="53" pos:column="53"/></operator> <operator pos:line="53" pos:column="54">&amp;&amp;<pos:position pos:line="53" pos:column="64"/></operator> <operator pos:line="53" pos:column="57">(<pos:position pos:line="53" pos:column="58"/></operator><operator pos:line="53" pos:column="58">*<pos:position pos:line="53" pos:column="59"/></operator><operator pos:line="53" pos:column="59">(<pos:position pos:line="53" pos:column="60"/></operator><name pos:line="53" pos:column="60">ch<pos:position pos:line="53" pos:column="62"/></name> <operator pos:line="53" pos:column="63">+<pos:position pos:line="53" pos:column="64"/></operator> <literal type="number" pos:line="53" pos:column="65">2<pos:position pos:line="53" pos:column="66"/></literal><operator pos:line="53" pos:column="66">)<pos:position pos:line="53" pos:column="67"/></operator> <operator pos:line="53" pos:column="68">==<pos:position pos:line="53" pos:column="70"/></operator> <literal type="char" pos:line="53" pos:column="71">'1'<pos:position pos:line="53" pos:column="74"/></literal><operator pos:line="53" pos:column="74">)<pos:position pos:line="53" pos:column="75"/></operator>
            <operator pos:line="54" pos:column="13">&amp;&amp;<pos:position pos:line="54" pos:column="23"/></operator> <operator pos:line="54" pos:column="16">(<pos:position pos:line="54" pos:column="17"/></operator><operator pos:line="54" pos:column="17">*<pos:position pos:line="54" pos:column="18"/></operator><operator pos:line="54" pos:column="18">(<pos:position pos:line="54" pos:column="19"/></operator><name pos:line="54" pos:column="19">ch<pos:position pos:line="54" pos:column="21"/></name> <operator pos:line="54" pos:column="22">+<pos:position pos:line="54" pos:column="23"/></operator> <literal type="number" pos:line="54" pos:column="24">3<pos:position pos:line="54" pos:column="25"/></literal><operator pos:line="54" pos:column="25">)<pos:position pos:line="54" pos:column="26"/></operator> <operator pos:line="54" pos:column="27">==<pos:position pos:line="54" pos:column="29"/></operator> <literal type="char" pos:line="54" pos:column="30">'\"'<pos:position pos:line="54" pos:column="34"/></literal><operator pos:line="54" pos:column="34">)<pos:position pos:line="54" pos:column="35"/></operator></expr>)<pos:position pos:line="54" pos:column="36"/></condition><then pos:line="54" pos:column="36"> <block pos:line="54" pos:column="37">{
            <expr_stmt><expr><name pos:line="55" pos:column="13">prgtaken<pos:position pos:line="55" pos:column="21"/></name> <operator pos:line="55" pos:column="22">=<pos:position pos:line="55" pos:column="23"/></operator> <literal type="number" pos:line="55" pos:column="24">1<pos:position pos:line="55" pos:column="25"/></literal></expr>;<pos:position pos:line="55" pos:column="26"/></expr_stmt>
            <expr_stmt><expr><name pos:line="56" pos:column="13">arg<pos:position pos:line="56" pos:column="16"/></name> <operator pos:line="56" pos:column="17">=<pos:position pos:line="56" pos:column="18"/></operator> <operator pos:line="56" pos:column="19">(<pos:position pos:line="56" pos:column="20"/></operator><specifier pos:line="56" pos:column="20">const<pos:position pos:line="56" pos:column="25"/></specifier> <name pos:line="56" pos:column="26">char<pos:position pos:line="56" pos:column="30"/></name><operator pos:line="56" pos:column="30">*<pos:position pos:line="56" pos:column="31"/></operator><operator pos:line="56" pos:column="31">*<pos:position pos:line="56" pos:column="32"/></operator><operator pos:line="56" pos:column="32">)<pos:position pos:line="56" pos:column="33"/></operator><call><name pos:line="56" pos:column="33">apr_array_push<pos:position pos:line="56" pos:column="47"/></name><argument_list pos:line="56" pos:column="47">(<argument><expr><name pos:line="56" pos:column="48">args<pos:position pos:line="56" pos:column="52"/></name></expr></argument>)<pos:position pos:line="56" pos:column="53"/></argument_list></call></expr>;<pos:position pos:line="56" pos:column="54"/></expr_stmt>
            <if pos:line="57" pos:column="13">if <condition pos:line="57" pos:column="16">(<expr><operator pos:line="57" pos:column="17">*<pos:position pos:line="57" pos:column="18"/></operator><operator pos:line="57" pos:column="18">(<pos:position pos:line="57" pos:column="19"/></operator><name pos:line="57" pos:column="19">ch<pos:position pos:line="57" pos:column="21"/></name> <operator pos:line="57" pos:column="22">+<pos:position pos:line="57" pos:column="23"/></operator> <literal type="number" pos:line="57" pos:column="24">1<pos:position pos:line="57" pos:column="25"/></literal><operator pos:line="57" pos:column="25">)<pos:position pos:line="57" pos:column="26"/></operator> <operator pos:line="57" pos:column="27">==<pos:position pos:line="57" pos:column="29"/></operator> <literal type="char" pos:line="57" pos:column="30">'%'<pos:position pos:line="57" pos:column="33"/></literal></expr>)<pos:position pos:line="57" pos:column="34"/></condition><then pos:line="57" pos:column="34"> <block pos:line="57" pos:column="35">{
                <decl_stmt><decl><type><name pos:line="58" pos:column="17">char<pos:position pos:line="58" pos:column="21"/></name> <modifier pos:line="58" pos:column="22">*<pos:position pos:line="58" pos:column="23"/></modifier></type><name pos:line="58" pos:column="23">repl<pos:position pos:line="58" pos:column="27"/></name> <init pos:line="58" pos:column="28">= <expr><call><name pos:line="58" pos:column="30">apr_pstrdup<pos:position pos:line="58" pos:column="41"/></name><argument_list pos:line="58" pos:column="41">(<argument><expr><name pos:line="58" pos:column="42">p<pos:position pos:line="58" pos:column="43"/></name></expr></argument>, <argument><expr><name pos:line="58" pos:column="45">cgiprg<pos:position pos:line="58" pos:column="51"/></name></expr></argument>)<pos:position pos:line="58" pos:column="52"/></argument_list></call></expr></init></decl>;<pos:position pos:line="58" pos:column="53"/></decl_stmt>
                <expr_stmt><expr><operator pos:line="59" pos:column="17">*<pos:position pos:line="59" pos:column="18"/></operator><name pos:line="59" pos:column="18">arg<pos:position pos:line="59" pos:column="21"/></name> <operator pos:line="59" pos:column="22">=<pos:position pos:line="59" pos:column="23"/></operator> <name pos:line="59" pos:column="24">repl<pos:position pos:line="59" pos:column="28"/></name></expr>;<pos:position pos:line="59" pos:column="29"/></expr_stmt>
                <while pos:line="60" pos:column="17">while <condition pos:line="60" pos:column="23">(<expr><operator pos:line="60" pos:column="24">(<pos:position pos:line="60" pos:column="25"/></operator><name pos:line="60" pos:column="25">repl<pos:position pos:line="60" pos:column="29"/></name> <operator pos:line="60" pos:column="30">=<pos:position pos:line="60" pos:column="31"/></operator> <call><name pos:line="60" pos:column="32">strchr<pos:position pos:line="60" pos:column="38"/></name><argument_list pos:line="60" pos:column="38">(<argument><expr><name pos:line="60" pos:column="39">repl<pos:position pos:line="60" pos:column="43"/></name></expr></argument>, <argument><expr><literal type="char" pos:line="60" pos:column="45">'/'<pos:position pos:line="60" pos:column="48"/></literal></expr></argument>)<pos:position pos:line="60" pos:column="49"/></argument_list></call><operator pos:line="60" pos:column="49">)<pos:position pos:line="60" pos:column="50"/></operator></expr>)<pos:position pos:line="60" pos:column="51"/></condition> <block pos:line="60" pos:column="52">{
                    <expr_stmt><expr><operator pos:line="61" pos:column="21">*<pos:position pos:line="61" pos:column="22"/></operator><name pos:line="61" pos:column="22">repl<pos:position pos:line="61" pos:column="26"/></name><operator pos:line="61" pos:column="26">++<pos:position pos:line="61" pos:column="28"/></operator> <operator pos:line="61" pos:column="29">=<pos:position pos:line="61" pos:column="30"/></operator> <literal type="char" pos:line="61" pos:column="31">'\\'<pos:position pos:line="61" pos:column="35"/></literal></expr>;<pos:position pos:line="61" pos:column="36"/></expr_stmt>
                }<pos:position pos:line="62" pos:column="18"/></block></while>
            }<pos:position pos:line="63" pos:column="14"/></block></then>
            <else pos:line="64" pos:column="13">else <block pos:line="64" pos:column="18">{
                <expr_stmt><expr><operator pos:line="65" pos:column="17">*<pos:position pos:line="65" pos:column="18"/></operator><name pos:line="65" pos:column="18">arg<pos:position pos:line="65" pos:column="21"/></name> <operator pos:line="65" pos:column="22">=<pos:position pos:line="65" pos:column="23"/></operator> <name pos:line="65" pos:column="24">cgiprg<pos:position pos:line="65" pos:column="30"/></name></expr>;<pos:position pos:line="65" pos:column="31"/></expr_stmt>
            }<pos:position pos:line="66" pos:column="14"/></block></else></if>
            <expr_stmt><expr><name pos:line="67" pos:column="13">ch<pos:position pos:line="67" pos:column="15"/></name> <operator pos:line="67" pos:column="16">+=<pos:position pos:line="67" pos:column="18"/></operator> <literal type="number" pos:line="67" pos:column="19">4<pos:position pos:line="67" pos:column="20"/></literal></expr>;<pos:position pos:line="67" pos:column="21"/></expr_stmt>
            <continue pos:line="68" pos:column="13">continue;<pos:position pos:line="68" pos:column="22"/></continue>
        }<pos:position pos:line="69" pos:column="10"/></block></then></if>
        <expr_stmt><expr><name pos:line="70" pos:column="9">arg<pos:position pos:line="70" pos:column="12"/></name> <operator pos:line="70" pos:column="13">=<pos:position pos:line="70" pos:column="14"/></operator> <operator pos:line="70" pos:column="15">(<pos:position pos:line="70" pos:column="16"/></operator><specifier pos:line="70" pos:column="16">const<pos:position pos:line="70" pos:column="21"/></specifier> <name pos:line="70" pos:column="22">char<pos:position pos:line="70" pos:column="26"/></name><operator pos:line="70" pos:column="26">*<pos:position pos:line="70" pos:column="27"/></operator><operator pos:line="70" pos:column="27">*<pos:position pos:line="70" pos:column="28"/></operator><operator pos:line="70" pos:column="28">)<pos:position pos:line="70" pos:column="29"/></operator><call><name pos:line="70" pos:column="29">apr_array_push<pos:position pos:line="70" pos:column="43"/></name><argument_list pos:line="70" pos:column="43">(<argument><expr><name pos:line="70" pos:column="44">args<pos:position pos:line="70" pos:column="48"/></name></expr></argument>)<pos:position pos:line="70" pos:column="49"/></argument_list></call></expr>;<pos:position pos:line="70" pos:column="50"/></expr_stmt>
        <expr_stmt><expr><operator pos:line="71" pos:column="9">*<pos:position pos:line="71" pos:column="10"/></operator><name pos:line="71" pos:column="10">arg<pos:position pos:line="71" pos:column="13"/></name> <operator pos:line="71" pos:column="14">=<pos:position pos:line="71" pos:column="15"/></operator> <name pos:line="71" pos:column="16">d<pos:position pos:line="71" pos:column="17"/></name></expr>;<pos:position pos:line="71" pos:column="18"/></expr_stmt>
        <expr_stmt><expr><name pos:line="72" pos:column="9">inquo<pos:position pos:line="72" pos:column="14"/></name> <operator pos:line="72" pos:column="15">=<pos:position pos:line="72" pos:column="16"/></operator> <literal type="number" pos:line="72" pos:column="17">0<pos:position pos:line="72" pos:column="18"/></literal></expr>;<pos:position pos:line="72" pos:column="19"/></expr_stmt>
        <while pos:line="73" pos:column="9">while <condition pos:line="73" pos:column="15">(<expr><operator pos:line="73" pos:column="16">*<pos:position pos:line="73" pos:column="17"/></operator><name pos:line="73" pos:column="17">ch<pos:position pos:line="73" pos:column="19"/></name></expr>)<pos:position pos:line="73" pos:column="20"/></condition> <block pos:line="73" pos:column="21">{
            <if pos:line="74" pos:column="13">if <condition pos:line="74" pos:column="16">(<expr><call><name pos:line="74" pos:column="17">apr_isspace<pos:position pos:line="74" pos:column="28"/></name><argument_list pos:line="74" pos:column="28">(<argument><expr><operator pos:line="74" pos:column="29">*<pos:position pos:line="74" pos:column="30"/></operator><name pos:line="74" pos:column="30">ch<pos:position pos:line="74" pos:column="32"/></name></expr></argument>)<pos:position pos:line="74" pos:column="33"/></argument_list></call> <operator pos:line="74" pos:column="34">&amp;&amp;<pos:position pos:line="74" pos:column="44"/></operator> <operator pos:line="74" pos:column="37">!<pos:position pos:line="74" pos:column="38"/></operator><name pos:line="74" pos:column="38">inquo<pos:position pos:line="74" pos:column="43"/></name></expr>)<pos:position pos:line="74" pos:column="44"/></condition><then pos:line="74" pos:column="44"> <block pos:line="74" pos:column="45">{
                <expr_stmt><expr><operator pos:line="75" pos:column="17">++<pos:position pos:line="75" pos:column="19"/></operator><name pos:line="75" pos:column="19">ch<pos:position pos:line="75" pos:column="21"/></name></expr>;<pos:position pos:line="75" pos:column="22"/></expr_stmt> <break pos:line="75" pos:column="23">break;<pos:position pos:line="75" pos:column="29"/></break>
            }<pos:position pos:line="76" pos:column="14"/></block></then></if>
            <comment type="block" pos:line="77" pos:column="13">/* Get 'em backslashes */</comment>
            <for pos:line="78" pos:column="13">for <control pos:line="78" pos:column="17">(<init><expr><name pos:line="78" pos:column="18">sl<pos:position pos:line="78" pos:column="20"/></name> <operator pos:line="78" pos:column="21">=<pos:position pos:line="78" pos:column="22"/></operator> <literal type="number" pos:line="78" pos:column="23">0<pos:position pos:line="78" pos:column="24"/></literal></expr>;<pos:position pos:line="78" pos:column="25"/></init> <condition><expr><operator pos:line="78" pos:column="26">*<pos:position pos:line="78" pos:column="27"/></operator><name pos:line="78" pos:column="27">ch<pos:position pos:line="78" pos:column="29"/></name> <operator pos:line="78" pos:column="30">==<pos:position pos:line="78" pos:column="32"/></operator> <literal type="char" pos:line="78" pos:column="33">'\\'<pos:position pos:line="78" pos:column="37"/></literal></expr>;<pos:position pos:line="78" pos:column="38"/></condition> <incr><expr><operator pos:line="78" pos:column="39">++<pos:position pos:line="78" pos:column="41"/></operator><name pos:line="78" pos:column="41">sl<pos:position pos:line="78" pos:column="43"/></name></expr></incr>)<pos:position pos:line="78" pos:column="44"/></control> <block pos:line="78" pos:column="45">{
                <expr_stmt><expr><operator pos:line="79" pos:column="17">*<pos:position pos:line="79" pos:column="18"/></operator><name pos:line="79" pos:column="18">d<pos:position pos:line="79" pos:column="19"/></name><operator pos:line="79" pos:column="19">++<pos:position pos:line="79" pos:column="21"/></operator> <operator pos:line="79" pos:column="22">=<pos:position pos:line="79" pos:column="23"/></operator> <operator pos:line="79" pos:column="24">*<pos:position pos:line="79" pos:column="25"/></operator><name pos:line="79" pos:column="25">ch<pos:position pos:line="79" pos:column="27"/></name><operator pos:line="79" pos:column="27">++<pos:position pos:line="79" pos:column="29"/></operator></expr>;<pos:position pos:line="79" pos:column="30"/></expr_stmt>
            }<pos:position pos:line="80" pos:column="14"/></block></for>
            <if pos:line="81" pos:column="13">if <condition pos:line="81" pos:column="16">(<expr><name pos:line="81" pos:column="17">sl<pos:position pos:line="81" pos:column="19"/></name> <operator pos:line="81" pos:column="20">&amp;<pos:position pos:line="81" pos:column="25"/></operator> <literal type="number" pos:line="81" pos:column="22">1<pos:position pos:line="81" pos:column="23"/></literal></expr>)<pos:position pos:line="81" pos:column="24"/></condition><then pos:line="81" pos:column="24"> <block pos:line="81" pos:column="25">{
                <comment type="block" pos:line="82" pos:column="17">/* last unmatched '\' + '"' sequence is a '"' */</comment>
                <if pos:line="83" pos:column="17">if <condition pos:line="83" pos:column="20">(<expr><operator pos:line="83" pos:column="21">*<pos:position pos:line="83" pos:column="22"/></operator><name pos:line="83" pos:column="22">ch<pos:position pos:line="83" pos:column="24"/></name> <operator pos:line="83" pos:column="25">==<pos:position pos:line="83" pos:column="27"/></operator> <literal type="char" pos:line="83" pos:column="28">'\"'<pos:position pos:line="83" pos:column="32"/></literal></expr>)<pos:position pos:line="83" pos:column="33"/></condition><then pos:line="83" pos:column="33"> <block pos:line="83" pos:column="34">{
                    <expr_stmt><expr><operator pos:line="84" pos:column="21">*<pos:position pos:line="84" pos:column="22"/></operator><operator pos:line="84" pos:column="22">(<pos:position pos:line="84" pos:column="23"/></operator><name pos:line="84" pos:column="23">d<pos:position pos:line="84" pos:column="24"/></name> <operator pos:line="84" pos:column="25">-<pos:position pos:line="84" pos:column="26"/></operator> <literal type="number" pos:line="84" pos:column="27">1<pos:position pos:line="84" pos:column="28"/></literal><operator pos:line="84" pos:column="28">)<pos:position pos:line="84" pos:column="29"/></operator> <operator pos:line="84" pos:column="30">=<pos:position pos:line="84" pos:column="31"/></operator> <operator pos:line="84" pos:column="32">*<pos:position pos:line="84" pos:column="33"/></operator><name pos:line="84" pos:column="33">ch<pos:position pos:line="84" pos:column="35"/></name><operator pos:line="84" pos:column="35">++<pos:position pos:line="84" pos:column="37"/></operator></expr>;<pos:position pos:line="84" pos:column="38"/></expr_stmt>
                }<pos:position pos:line="85" pos:column="18"/></block></then></if>
                <continue pos:line="86" pos:column="17">continue;<pos:position pos:line="86" pos:column="26"/></continue>
            }<pos:position pos:line="87" pos:column="14"/></block></then></if>
            <if pos:line="88" pos:column="13">if <condition pos:line="88" pos:column="16">(<expr><operator pos:line="88" pos:column="17">*<pos:position pos:line="88" pos:column="18"/></operator><name pos:line="88" pos:column="18">ch<pos:position pos:line="88" pos:column="20"/></name> <operator pos:line="88" pos:column="21">==<pos:position pos:line="88" pos:column="23"/></operator> <literal type="char" pos:line="88" pos:column="24">'\"'<pos:position pos:line="88" pos:column="28"/></literal></expr>)<pos:position pos:line="88" pos:column="29"/></condition><then pos:line="88" pos:column="29"> <block pos:line="88" pos:column="30">{
                <comment type="block" pos:line="89" pos:column="17">/* '""' sequence within quotes is a '"' */</comment>
                <if pos:line="90" pos:column="17">if <condition pos:line="90" pos:column="20">(<expr><operator pos:line="90" pos:column="21">*<pos:position pos:line="90" pos:column="22"/></operator><operator pos:line="90" pos:column="22">++<pos:position pos:line="90" pos:column="24"/></operator><name pos:line="90" pos:column="24">ch<pos:position pos:line="90" pos:column="26"/></name> <operator pos:line="90" pos:column="27">==<pos:position pos:line="90" pos:column="29"/></operator> <literal type="char" pos:line="90" pos:column="30">'\"'<pos:position pos:line="90" pos:column="34"/></literal> <operator pos:line="90" pos:column="35">&amp;&amp;<pos:position pos:line="90" pos:column="45"/></operator> <name pos:line="90" pos:column="38">inquo<pos:position pos:line="90" pos:column="43"/></name></expr>)<pos:position pos:line="90" pos:column="44"/></condition><then pos:line="90" pos:column="44"> <block pos:line="90" pos:column="45">{
                    <expr_stmt><expr><operator pos:line="91" pos:column="21">*<pos:position pos:line="91" pos:column="22"/></operator><name pos:line="91" pos:column="22">d<pos:position pos:line="91" pos:column="23"/></name><operator pos:line="91" pos:column="23">++<pos:position pos:line="91" pos:column="25"/></operator> <operator pos:line="91" pos:column="26">=<pos:position pos:line="91" pos:column="27"/></operator> <operator pos:line="91" pos:column="28">*<pos:position pos:line="91" pos:column="29"/></operator><name pos:line="91" pos:column="29">ch<pos:position pos:line="91" pos:column="31"/></name><operator pos:line="91" pos:column="31">++<pos:position pos:line="91" pos:column="33"/></operator></expr>;<pos:position pos:line="91" pos:column="34"/></expr_stmt> <continue pos:line="91" pos:column="35">continue;<pos:position pos:line="91" pos:column="44"/></continue>
                }<pos:position pos:line="92" pos:column="18"/></block></then></if>
                <comment type="block" pos:line="93" pos:column="17">/* Flip quote state */</comment>
                <expr_stmt><expr><name pos:line="94" pos:column="17">inquo<pos:position pos:line="94" pos:column="22"/></name> <operator pos:line="94" pos:column="23">=<pos:position pos:line="94" pos:column="24"/></operator> <operator pos:line="94" pos:column="25">!<pos:position pos:line="94" pos:column="26"/></operator><name pos:line="94" pos:column="26">inquo<pos:position pos:line="94" pos:column="31"/></name></expr>;<pos:position pos:line="94" pos:column="32"/></expr_stmt>
                <if pos:line="95" pos:column="17">if <condition pos:line="95" pos:column="20">(<expr><call><name pos:line="95" pos:column="21">apr_isspace<pos:position pos:line="95" pos:column="32"/></name><argument_list pos:line="95" pos:column="32">(<argument><expr><operator pos:line="95" pos:column="33">*<pos:position pos:line="95" pos:column="34"/></operator><name pos:line="95" pos:column="34">ch<pos:position pos:line="95" pos:column="36"/></name></expr></argument>)<pos:position pos:line="95" pos:column="37"/></argument_list></call> <operator pos:line="95" pos:column="38">&amp;&amp;<pos:position pos:line="95" pos:column="48"/></operator> <operator pos:line="95" pos:column="41">!<pos:position pos:line="95" pos:column="42"/></operator><name pos:line="95" pos:column="42">inquo<pos:position pos:line="95" pos:column="47"/></name></expr>)<pos:position pos:line="95" pos:column="48"/></condition><then pos:line="95" pos:column="48"> <block pos:line="95" pos:column="49">{
                    <expr_stmt><expr><operator pos:line="96" pos:column="21">++<pos:position pos:line="96" pos:column="23"/></operator><name pos:line="96" pos:column="23">ch<pos:position pos:line="96" pos:column="25"/></name></expr>;<pos:position pos:line="96" pos:column="26"/></expr_stmt> <break pos:line="96" pos:column="27">break;<pos:position pos:line="96" pos:column="33"/></break>
                }<pos:position pos:line="97" pos:column="18"/></block></then></if>
                <comment type="block" pos:line="98" pos:column="17">/* All other '"'s are Munched */</comment>
                <continue pos:line="99" pos:column="17">continue;<pos:position pos:line="99" pos:column="26"/></continue>
            }<pos:position pos:line="100" pos:column="14"/></block></then></if>
            <comment type="block" pos:line="101" pos:column="13">/* Anything else is, well, something else */</comment>
            <expr_stmt><expr><operator pos:line="102" pos:column="13">*<pos:position pos:line="102" pos:column="14"/></operator><name pos:line="102" pos:column="14">d<pos:position pos:line="102" pos:column="15"/></name><operator pos:line="102" pos:column="15">++<pos:position pos:line="102" pos:column="17"/></operator> <operator pos:line="102" pos:column="18">=<pos:position pos:line="102" pos:column="19"/></operator> <operator pos:line="102" pos:column="20">*<pos:position pos:line="102" pos:column="21"/></operator><name pos:line="102" pos:column="21">ch<pos:position pos:line="102" pos:column="23"/></name><operator pos:line="102" pos:column="23">++<pos:position pos:line="102" pos:column="25"/></operator></expr>;<pos:position pos:line="102" pos:column="26"/></expr_stmt>
        }<pos:position pos:line="103" pos:column="10"/></block></while>
        <comment type="block" pos:line="104" pos:column="9">/* Term that arg, already pushed on args */</comment>
        <expr_stmt><expr><operator pos:line="105" pos:column="9">*<pos:position pos:line="105" pos:column="10"/></operator><name pos:line="105" pos:column="10">d<pos:position pos:line="105" pos:column="11"/></name><operator pos:line="105" pos:column="11">++<pos:position pos:line="105" pos:column="13"/></operator> <operator pos:line="105" pos:column="14">=<pos:position pos:line="105" pos:column="15"/></operator> <literal type="char" pos:line="105" pos:column="16">'\0'<pos:position pos:line="105" pos:column="20"/></literal></expr>;<pos:position pos:line="105" pos:column="21"/></expr_stmt>
    }<pos:position pos:line="106" pos:column="6"/></block></while>

    <if pos:line="108" pos:column="5">if <condition pos:line="108" pos:column="8">(<expr><operator pos:line="108" pos:column="9">!<pos:position pos:line="108" pos:column="10"/></operator><name pos:line="108" pos:column="10">prgtaken<pos:position pos:line="108" pos:column="18"/></name></expr>)<pos:position pos:line="108" pos:column="19"/></condition><then pos:line="108" pos:column="19"> <block pos:line="108" pos:column="20">{
        <expr_stmt><expr><name pos:line="109" pos:column="9">arg<pos:position pos:line="109" pos:column="12"/></name> <operator pos:line="109" pos:column="13">=<pos:position pos:line="109" pos:column="14"/></operator> <operator pos:line="109" pos:column="15">(<pos:position pos:line="109" pos:column="16"/></operator><specifier pos:line="109" pos:column="16">const<pos:position pos:line="109" pos:column="21"/></specifier> <name pos:line="109" pos:column="22">char<pos:position pos:line="109" pos:column="26"/></name><operator pos:line="109" pos:column="26">*<pos:position pos:line="109" pos:column="27"/></operator><operator pos:line="109" pos:column="27">*<pos:position pos:line="109" pos:column="28"/></operator><operator pos:line="109" pos:column="28">)<pos:position pos:line="109" pos:column="29"/></operator><call><name pos:line="109" pos:column="29">apr_array_push<pos:position pos:line="109" pos:column="43"/></name><argument_list pos:line="109" pos:column="43">(<argument><expr><name pos:line="109" pos:column="44">args<pos:position pos:line="109" pos:column="48"/></name></expr></argument>)<pos:position pos:line="109" pos:column="49"/></argument_list></call></expr>;<pos:position pos:line="109" pos:column="50"/></expr_stmt>
        <expr_stmt><expr><operator pos:line="110" pos:column="9">*<pos:position pos:line="110" pos:column="10"/></operator><name pos:line="110" pos:column="10">arg<pos:position pos:line="110" pos:column="13"/></name> <operator pos:line="110" pos:column="14">=<pos:position pos:line="110" pos:column="15"/></operator> <name pos:line="110" pos:column="16">cgiprg<pos:position pos:line="110" pos:column="22"/></name></expr>;<pos:position pos:line="110" pos:column="23"/></expr_stmt>
    }<pos:position pos:line="111" pos:column="6"/></block></then></if>

    <if pos:line="113" pos:column="5">if <condition pos:line="113" pos:column="8">(<expr><operator pos:line="113" pos:column="9">!<pos:position pos:line="113" pos:column="10"/></operator><name pos:line="113" pos:column="10">argtaken<pos:position pos:line="113" pos:column="18"/></name></expr>)<pos:position pos:line="113" pos:column="19"/></condition><then pos:line="113" pos:column="19"> <block pos:line="113" pos:column="20">{
        <decl_stmt><decl><type><specifier pos:line="114" pos:column="9">const<pos:position pos:line="114" pos:column="14"/></specifier> <name pos:line="114" pos:column="15">char<pos:position pos:line="114" pos:column="19"/></name> <modifier pos:line="114" pos:column="20">*<pos:position pos:line="114" pos:column="21"/></modifier></type><name pos:line="114" pos:column="21">cgiarg<pos:position pos:line="114" pos:column="27"/></name> <init pos:line="114" pos:column="28">= <expr><name pos:line="114" pos:column="30">cgiargs<pos:position pos:line="114" pos:column="37"/></name></expr></init></decl>;<pos:position pos:line="114" pos:column="38"/></decl_stmt>
        <for pos:line="115" pos:column="9">for <control pos:line="115" pos:column="13">(<init pos:line="115" pos:column="14">;<pos:position pos:line="115" pos:column="15"/></init><condition pos:line="115" pos:column="15">;<pos:position pos:line="115" pos:column="16"/></condition><incr/>)<pos:position pos:line="115" pos:column="17"/></control> <block pos:line="115" pos:column="18">{
            <decl_stmt><decl><type><name pos:line="116" pos:column="13">char<pos:position pos:line="116" pos:column="17"/></name> <modifier pos:line="116" pos:column="18">*<pos:position pos:line="116" pos:column="19"/></modifier></type><name pos:line="116" pos:column="19">w<pos:position pos:line="116" pos:column="20"/></name> <init pos:line="116" pos:column="21">= <expr><call><name pos:line="116" pos:column="23">ap_getword_nulls<pos:position pos:line="116" pos:column="39"/></name><argument_list pos:line="116" pos:column="39">(<argument><expr><name pos:line="116" pos:column="40">p<pos:position pos:line="116" pos:column="41"/></name></expr></argument>, <argument><expr><operator pos:line="116" pos:column="43">&amp;<pos:position pos:line="116" pos:column="48"/></operator><name pos:line="116" pos:column="44">cgiarg<pos:position pos:line="116" pos:column="50"/></name></expr></argument>, <argument><expr><literal type="char" pos:line="116" pos:column="52">'+'<pos:position pos:line="116" pos:column="55"/></literal></expr></argument>)<pos:position pos:line="116" pos:column="56"/></argument_list></call></expr></init></decl>;<pos:position pos:line="116" pos:column="57"/></decl_stmt>
            <if pos:line="117" pos:column="13">if <condition pos:line="117" pos:column="16">(<expr><operator pos:line="117" pos:column="17">!<pos:position pos:line="117" pos:column="18"/></operator><operator pos:line="117" pos:column="18">*<pos:position pos:line="117" pos:column="19"/></operator><name pos:line="117" pos:column="19">w<pos:position pos:line="117" pos:column="20"/></name></expr>)<pos:position pos:line="117" pos:column="21"/></condition><then pos:line="117" pos:column="21"> <block pos:line="117" pos:column="22">{
                <break pos:line="118" pos:column="17">break;<pos:position pos:line="118" pos:column="23"/></break>
            }<pos:position pos:line="119" pos:column="14"/></block></then></if>
            <expr_stmt><expr><call><name pos:line="120" pos:column="13">ap_unescape_url<pos:position pos:line="120" pos:column="28"/></name><argument_list pos:line="120" pos:column="28">(<argument><expr><name pos:line="120" pos:column="29">w<pos:position pos:line="120" pos:column="30"/></name></expr></argument>)<pos:position pos:line="120" pos:column="31"/></argument_list></call></expr>;<pos:position pos:line="120" pos:column="32"/></expr_stmt>
            <expr_stmt><expr><call><name pos:line="121" pos:column="13">prep_string<pos:position pos:line="121" pos:column="24"/></name><argument_list pos:line="121" pos:column="24">(<argument><expr><operator pos:line="121" pos:column="25">(<pos:position pos:line="121" pos:column="26"/></operator><specifier pos:line="121" pos:column="26">const<pos:position pos:line="121" pos:column="31"/></specifier> <name pos:line="121" pos:column="32">char<pos:position pos:line="121" pos:column="36"/></name><operator pos:line="121" pos:column="36">*<pos:position pos:line="121" pos:column="37"/></operator><operator pos:line="121" pos:column="37">*<pos:position pos:line="121" pos:column="38"/></operator><operator pos:line="121" pos:column="38">)<pos:position pos:line="121" pos:column="39"/></operator><operator pos:line="121" pos:column="39">&amp;<pos:position pos:line="121" pos:column="44"/></operator><name pos:line="121" pos:column="40">w<pos:position pos:line="121" pos:column="41"/></name></expr></argument>, <argument><expr><name pos:line="121" pos:column="43">p<pos:position pos:line="121" pos:column="44"/></name></expr></argument>)<pos:position pos:line="121" pos:column="45"/></argument_list></call></expr>;<pos:position pos:line="121" pos:column="46"/></expr_stmt>
            <expr_stmt><expr><name pos:line="122" pos:column="13">arg<pos:position pos:line="122" pos:column="16"/></name> <operator pos:line="122" pos:column="17">=<pos:position pos:line="122" pos:column="18"/></operator> <operator pos:line="122" pos:column="19">(<pos:position pos:line="122" pos:column="20"/></operator><specifier pos:line="122" pos:column="20">const<pos:position pos:line="122" pos:column="25"/></specifier> <name pos:line="122" pos:column="26">char<pos:position pos:line="122" pos:column="30"/></name><operator pos:line="122" pos:column="30">*<pos:position pos:line="122" pos:column="31"/></operator><operator pos:line="122" pos:column="31">*<pos:position pos:line="122" pos:column="32"/></operator><operator pos:line="122" pos:column="32">)<pos:position pos:line="122" pos:column="33"/></operator><call><name pos:line="122" pos:column="33">apr_array_push<pos:position pos:line="122" pos:column="47"/></name><argument_list pos:line="122" pos:column="47">(<argument><expr><name pos:line="122" pos:column="48">args<pos:position pos:line="122" pos:column="52"/></name></expr></argument>)<pos:position pos:line="122" pos:column="53"/></argument_list></call></expr>;<pos:position pos:line="122" pos:column="54"/></expr_stmt>
            <expr_stmt><expr><operator pos:line="123" pos:column="13">*<pos:position pos:line="123" pos:column="14"/></operator><name pos:line="123" pos:column="14">arg<pos:position pos:line="123" pos:column="17"/></name> <operator pos:line="123" pos:column="18">=<pos:position pos:line="123" pos:column="19"/></operator> <call><name pos:line="123" pos:column="20">ap_escape_shell_cmd<pos:position pos:line="123" pos:column="39"/></name><argument_list pos:line="123" pos:column="39">(<argument><expr><name pos:line="123" pos:column="40">p<pos:position pos:line="123" pos:column="41"/></name></expr></argument>, <argument><expr><name pos:line="123" pos:column="43">w<pos:position pos:line="123" pos:column="44"/></name></expr></argument>)<pos:position pos:line="123" pos:column="45"/></argument_list></call></expr>;<pos:position pos:line="123" pos:column="46"/></expr_stmt>
        }<pos:position pos:line="124" pos:column="10"/></block></for>
    }<pos:position pos:line="125" pos:column="6"/></block></then></if>

    <expr_stmt><expr><name pos:line="127" pos:column="5">arg<pos:position pos:line="127" pos:column="8"/></name> <operator pos:line="127" pos:column="9">=<pos:position pos:line="127" pos:column="10"/></operator> <operator pos:line="127" pos:column="11">(<pos:position pos:line="127" pos:column="12"/></operator><specifier pos:line="127" pos:column="12">const<pos:position pos:line="127" pos:column="17"/></specifier> <name pos:line="127" pos:column="18">char<pos:position pos:line="127" pos:column="22"/></name><operator pos:line="127" pos:column="22">*<pos:position pos:line="127" pos:column="23"/></operator><operator pos:line="127" pos:column="23">*<pos:position pos:line="127" pos:column="24"/></operator><operator pos:line="127" pos:column="24">)<pos:position pos:line="127" pos:column="25"/></operator><call><name pos:line="127" pos:column="25">apr_array_push<pos:position pos:line="127" pos:column="39"/></name><argument_list pos:line="127" pos:column="39">(<argument><expr><name pos:line="127" pos:column="40">args<pos:position pos:line="127" pos:column="44"/></name></expr></argument>)<pos:position pos:line="127" pos:column="45"/></argument_list></call></expr>;<pos:position pos:line="127" pos:column="46"/></expr_stmt>
    <expr_stmt><expr><operator pos:line="128" pos:column="5">*<pos:position pos:line="128" pos:column="6"/></operator><name pos:line="128" pos:column="6">arg<pos:position pos:line="128" pos:column="9"/></name> <operator pos:line="128" pos:column="10">=<pos:position pos:line="128" pos:column="11"/></operator> <name pos:line="128" pos:column="12">NULL<pos:position pos:line="128" pos:column="16"/></name></expr>;<pos:position pos:line="128" pos:column="17"/></expr_stmt>

    <return pos:line="130" pos:column="5">return <expr><name pos:line="130" pos:column="12">args<pos:position pos:line="130" pos:column="16"/></name></expr>;<pos:position pos:line="130" pos:column="17"/></return>
}<pos:position pos:line="131" pos:column="2"/></block></function></unit>

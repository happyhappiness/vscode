<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/httpd/gumtree/httpd_repos_function_2749_httpd-2.0.65.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">int<pos:position pos:line="1" pos:column="11"/></name> <name pos:line="1" pos:column="12">PTRCALL<pos:position pos:line="1" pos:column="19"/></name>
<name pos:line="2" pos:column="1">PREFIX<pos:position pos:line="2" pos:column="7"/></name></type>(<name pos:line="2" pos:column="8">getAtts<pos:position pos:line="2" pos:column="15"/></name>)<parameter_list pos:line="2" pos:column="16">(<parameter><decl><type><specifier pos:line="2" pos:column="17">const<pos:position pos:line="2" pos:column="22"/></specifier> <name pos:line="2" pos:column="23">ENCODING<pos:position pos:line="2" pos:column="31"/></name> <modifier pos:line="2" pos:column="32">*<pos:position pos:line="2" pos:column="33"/></modifier></type><name pos:line="2" pos:column="33">enc<pos:position pos:line="2" pos:column="36"/></name></decl></parameter>, <parameter><decl><type><specifier pos:line="2" pos:column="38">const<pos:position pos:line="2" pos:column="43"/></specifier> <name pos:line="2" pos:column="44">char<pos:position pos:line="2" pos:column="48"/></name> <modifier pos:line="2" pos:column="49">*<pos:position pos:line="2" pos:column="50"/></modifier></type><name pos:line="2" pos:column="50">ptr<pos:position pos:line="2" pos:column="53"/></name></decl></parameter>,
                <parameter><decl><type><name pos:line="3" pos:column="17">int<pos:position pos:line="3" pos:column="20"/></name></type> <name pos:line="3" pos:column="21">attsMax<pos:position pos:line="3" pos:column="28"/></name></decl></parameter>, <parameter><decl><type><name pos:line="3" pos:column="30">ATTRIBUTE<pos:position pos:line="3" pos:column="39"/></name> <modifier pos:line="3" pos:column="40">*<pos:position pos:line="3" pos:column="41"/></modifier></type><name pos:line="3" pos:column="41">atts<pos:position pos:line="3" pos:column="45"/></name></decl></parameter>)<pos:position pos:line="3" pos:column="46"/></parameter_list>
<block pos:line="4" pos:column="1">{
  <enum pos:line="5" pos:column="3">enum <block pos:line="5" pos:column="8">{ <decl><name pos:line="5" pos:column="10">other<pos:position pos:line="5" pos:column="15"/></name></decl>, <decl><name pos:line="5" pos:column="17">inName<pos:position pos:line="5" pos:column="23"/></name></decl>, <decl><name pos:line="5" pos:column="25">inValue<pos:position pos:line="5" pos:column="32"/></name></decl> }<pos:position pos:line="5" pos:column="34"/></block> <decl><name pos:line="5" pos:column="35">state<pos:position pos:line="5" pos:column="40"/></name> <init pos:line="5" pos:column="41">= <expr><name pos:line="5" pos:column="43">inName<pos:position pos:line="5" pos:column="49"/></name></expr></init></decl>;<pos:position pos:line="5" pos:column="50"/></enum>
  <decl_stmt><decl><type><name pos:line="6" pos:column="3">int<pos:position pos:line="6" pos:column="6"/></name></type> <name pos:line="6" pos:column="7">nAtts<pos:position pos:line="6" pos:column="12"/></name> <init pos:line="6" pos:column="13">= <expr><literal type="number" pos:line="6" pos:column="15">0<pos:position pos:line="6" pos:column="16"/></literal></expr></init></decl>;<pos:position pos:line="6" pos:column="17"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="7" pos:column="3">int<pos:position pos:line="7" pos:column="6"/></name></type> <name pos:line="7" pos:column="7">open<pos:position pos:line="7" pos:column="11"/></name> <init pos:line="7" pos:column="12">= <expr><literal type="number" pos:line="7" pos:column="14">0<pos:position pos:line="7" pos:column="15"/></literal></expr></init></decl>;<pos:position pos:line="7" pos:column="16"/></decl_stmt> <comment type="block" pos:line="7" pos:column="17">/* defined when state == inValue;
                   initialization just to shut up compilers */</comment>

  <for pos:line="10" pos:column="3">for <control pos:line="10" pos:column="7">(<init><expr><name pos:line="10" pos:column="8">ptr<pos:position pos:line="10" pos:column="11"/></name> <operator pos:line="10" pos:column="12">+=<pos:position pos:line="10" pos:column="14"/></operator> <call><name pos:line="10" pos:column="15">MINBPC<pos:position pos:line="10" pos:column="21"/></name><argument_list pos:line="10" pos:column="21">(<argument><expr><name pos:line="10" pos:column="22">enc<pos:position pos:line="10" pos:column="25"/></name></expr></argument>)<pos:position pos:line="10" pos:column="26"/></argument_list></call></expr>;<pos:position pos:line="10" pos:column="27"/></init><condition pos:line="10" pos:column="27">;<pos:position pos:line="10" pos:column="28"/></condition> <incr><expr><name pos:line="10" pos:column="29">ptr<pos:position pos:line="10" pos:column="32"/></name> <operator pos:line="10" pos:column="33">+=<pos:position pos:line="10" pos:column="35"/></operator> <call><name pos:line="10" pos:column="36">MINBPC<pos:position pos:line="10" pos:column="42"/></name><argument_list pos:line="10" pos:column="42">(<argument><expr><name pos:line="10" pos:column="43">enc<pos:position pos:line="10" pos:column="46"/></name></expr></argument>)<pos:position pos:line="10" pos:column="47"/></argument_list></call></expr></incr>)<pos:position pos:line="10" pos:column="48"/></control> <block pos:line="10" pos:column="49">{
    <switch pos:line="11" pos:column="5">switch <condition pos:line="11" pos:column="12">(<expr><call><name pos:line="11" pos:column="13">BYTE_TYPE<pos:position pos:line="11" pos:column="22"/></name><argument_list pos:line="11" pos:column="22">(<argument><expr><name pos:line="11" pos:column="23">enc<pos:position pos:line="11" pos:column="26"/></name></expr></argument>, <argument><expr><name pos:line="11" pos:column="28">ptr<pos:position pos:line="11" pos:column="31"/></name></expr></argument>)<pos:position pos:line="11" pos:column="32"/></argument_list></call></expr>)<pos:position pos:line="11" pos:column="33"/></condition> <block pos:line="11" pos:column="34">{
<cpp:define pos:line="12" pos:column="1">#<cpp:directive pos:line="12" pos:column="2">define<pos:position pos:line="12" pos:column="8"/></cpp:directive> <cpp:macro><name pos:line="12" pos:column="9">START_NAME<pos:position pos:line="12" pos:column="19"/></name></cpp:macro> \
      <cpp:value pos:line="13" pos:column="7">if (state == other) { \
        if (nAtts &lt; attsMax) { \
          atts[nAtts].name = ptr; \
          atts[nAtts].normalized = 1; \
        } \
        state = inName; \
      }<pos:position pos:line="19" pos:column="8"/></cpp:value></cpp:define>
<cpp:define pos:line="20" pos:column="1">#<cpp:directive pos:line="20" pos:column="2">define<pos:position pos:line="20" pos:column="8"/></cpp:directive> <cpp:macro><name pos:line="20" pos:column="9">LEAD_CASE<pos:position pos:line="20" pos:column="18"/></name><parameter_list pos:line="20" pos:column="18">(<parameter><type><name pos:line="20" pos:column="19">n<pos:position pos:line="20" pos:column="20"/></name></type></parameter>)<pos:position pos:line="20" pos:column="21"/></parameter_list></cpp:macro> \
    <cpp:value pos:line="21" pos:column="5">case BT_LEAD ## n: START_NAME ptr += (n - MINBPC(enc)); break;<pos:position pos:line="21" pos:column="67"/></cpp:value></cpp:define>
    <macro><name pos:line="22" pos:column="5">LEAD_CASE<pos:position pos:line="22" pos:column="14"/></name><argument_list pos:line="22" pos:column="14">(<argument><literal type="number" pos:line="22" pos:column="15">2<pos:position pos:line="22" pos:column="16"/></literal></argument>)<pos:position pos:line="22" pos:column="17"/></argument_list></macro> <macro><name pos:line="22" pos:column="18">LEAD_CASE<pos:position pos:line="22" pos:column="27"/></name><argument_list pos:line="22" pos:column="27">(<argument><literal type="number" pos:line="22" pos:column="28">3<pos:position pos:line="22" pos:column="29"/></literal></argument>)<pos:position pos:line="22" pos:column="30"/></argument_list></macro> <macro><name pos:line="22" pos:column="31">LEAD_CASE<pos:position pos:line="22" pos:column="40"/></name><argument_list pos:line="22" pos:column="40">(<argument><literal type="number" pos:line="22" pos:column="41">4<pos:position pos:line="22" pos:column="42"/></literal></argument>)<pos:position pos:line="22" pos:column="43"/></argument_list></macro>
<cpp:undef pos:line="23" pos:column="1">#<cpp:directive pos:line="23" pos:column="2">undef<pos:position pos:line="23" pos:column="7"/></cpp:directive> <name pos:line="23" pos:column="8">LEAD_CASE<pos:position pos:line="23" pos:column="17"/></name></cpp:undef>
    <case pos:line="24" pos:column="5">case <expr><name pos:line="24" pos:column="10">BT_NONASCII<pos:position pos:line="24" pos:column="21"/></name></expr>:<pos:position pos:line="24" pos:column="22"/></case>
    <case pos:line="25" pos:column="5">case <expr><name pos:line="25" pos:column="10">BT_NMSTRT<pos:position pos:line="25" pos:column="19"/></name></expr>:<pos:position pos:line="25" pos:column="20"/></case>
    <case pos:line="26" pos:column="5">case <expr><name pos:line="26" pos:column="10">BT_HEX<pos:position pos:line="26" pos:column="16"/></name></expr>:<pos:position pos:line="26" pos:column="17"/></case>
      <macro><name pos:line="27" pos:column="7">START_NAME<pos:position pos:line="27" pos:column="17"/></name></macro>
      <break pos:line="28" pos:column="7">break;<pos:position pos:line="28" pos:column="13"/></break>
<cpp:undef pos:line="29" pos:column="1">#<cpp:directive pos:line="29" pos:column="2">undef<pos:position pos:line="29" pos:column="7"/></cpp:directive> <name pos:line="29" pos:column="8">START_NAME<pos:position pos:line="29" pos:column="18"/></name></cpp:undef>
    <case pos:line="30" pos:column="5">case <expr><name pos:line="30" pos:column="10">BT_QUOT<pos:position pos:line="30" pos:column="17"/></name></expr>:<pos:position pos:line="30" pos:column="18"/></case>
      <if pos:line="31" pos:column="7">if <condition pos:line="31" pos:column="10">(<expr><name pos:line="31" pos:column="11">state<pos:position pos:line="31" pos:column="16"/></name> <operator pos:line="31" pos:column="17">!=<pos:position pos:line="31" pos:column="19"/></operator> <name pos:line="31" pos:column="20">inValue<pos:position pos:line="31" pos:column="27"/></name></expr>)<pos:position pos:line="31" pos:column="28"/></condition><then pos:line="31" pos:column="28"> <block pos:line="31" pos:column="29">{
        <if pos:line="32" pos:column="9">if <condition pos:line="32" pos:column="12">(<expr><name pos:line="32" pos:column="13">nAtts<pos:position pos:line="32" pos:column="18"/></name> <operator pos:line="32" pos:column="19">&lt;<pos:position pos:line="32" pos:column="23"/></operator> <name pos:line="32" pos:column="21">attsMax<pos:position pos:line="32" pos:column="28"/></name></expr>)<pos:position pos:line="32" pos:column="29"/></condition><then pos:line="32" pos:column="29">
          <block type="pseudo"><expr_stmt><expr><name><name pos:line="33" pos:column="11">atts<pos:position pos:line="33" pos:column="15"/></name><index pos:line="33" pos:column="15">[<expr><name pos:line="33" pos:column="16">nAtts<pos:position pos:line="33" pos:column="21"/></name></expr>]<pos:position pos:line="33" pos:column="22"/></index></name><operator pos:line="33" pos:column="22">.<pos:position pos:line="33" pos:column="23"/></operator><name pos:line="33" pos:column="23">valuePtr<pos:position pos:line="33" pos:column="31"/></name> <operator pos:line="33" pos:column="32">=<pos:position pos:line="33" pos:column="33"/></operator> <name pos:line="33" pos:column="34">ptr<pos:position pos:line="33" pos:column="37"/></name> <operator pos:line="33" pos:column="38">+<pos:position pos:line="33" pos:column="39"/></operator> <call><name pos:line="33" pos:column="40">MINBPC<pos:position pos:line="33" pos:column="46"/></name><argument_list pos:line="33" pos:column="46">(<argument><expr><name pos:line="33" pos:column="47">enc<pos:position pos:line="33" pos:column="50"/></name></expr></argument>)<pos:position pos:line="33" pos:column="51"/></argument_list></call></expr>;<pos:position pos:line="33" pos:column="52"/></expr_stmt></block></then></if>
        <expr_stmt><expr><name pos:line="34" pos:column="9">state<pos:position pos:line="34" pos:column="14"/></name> <operator pos:line="34" pos:column="15">=<pos:position pos:line="34" pos:column="16"/></operator> <name pos:line="34" pos:column="17">inValue<pos:position pos:line="34" pos:column="24"/></name></expr>;<pos:position pos:line="34" pos:column="25"/></expr_stmt>
        <expr_stmt><expr><name pos:line="35" pos:column="9">open<pos:position pos:line="35" pos:column="13"/></name> <operator pos:line="35" pos:column="14">=<pos:position pos:line="35" pos:column="15"/></operator> <name pos:line="35" pos:column="16">BT_QUOT<pos:position pos:line="35" pos:column="23"/></name></expr>;<pos:position pos:line="35" pos:column="24"/></expr_stmt>
      }<pos:position pos:line="36" pos:column="8"/></block></then>
      <elseif pos:line="37" pos:column="7">else <if pos:line="37" pos:column="12">if <condition pos:line="37" pos:column="15">(<expr><name pos:line="37" pos:column="16">open<pos:position pos:line="37" pos:column="20"/></name> <operator pos:line="37" pos:column="21">==<pos:position pos:line="37" pos:column="23"/></operator> <name pos:line="37" pos:column="24">BT_QUOT<pos:position pos:line="37" pos:column="31"/></name></expr>)<pos:position pos:line="37" pos:column="32"/></condition><then pos:line="37" pos:column="32"> <block pos:line="37" pos:column="33">{
        <expr_stmt><expr><name pos:line="38" pos:column="9">state<pos:position pos:line="38" pos:column="14"/></name> <operator pos:line="38" pos:column="15">=<pos:position pos:line="38" pos:column="16"/></operator> <name pos:line="38" pos:column="17">other<pos:position pos:line="38" pos:column="22"/></name></expr>;<pos:position pos:line="38" pos:column="23"/></expr_stmt>
        <if pos:line="39" pos:column="9">if <condition pos:line="39" pos:column="12">(<expr><name pos:line="39" pos:column="13">nAtts<pos:position pos:line="39" pos:column="18"/></name> <operator pos:line="39" pos:column="19">&lt;<pos:position pos:line="39" pos:column="23"/></operator> <name pos:line="39" pos:column="21">attsMax<pos:position pos:line="39" pos:column="28"/></name></expr>)<pos:position pos:line="39" pos:column="29"/></condition><then pos:line="39" pos:column="29">
          <block type="pseudo"><expr_stmt><expr><name><name pos:line="40" pos:column="11">atts<pos:position pos:line="40" pos:column="15"/></name><index pos:line="40" pos:column="15">[<expr><name pos:line="40" pos:column="16">nAtts<pos:position pos:line="40" pos:column="21"/></name></expr>]<pos:position pos:line="40" pos:column="22"/></index></name><operator pos:line="40" pos:column="22">.<pos:position pos:line="40" pos:column="23"/></operator><name pos:line="40" pos:column="23">valueEnd<pos:position pos:line="40" pos:column="31"/></name> <operator pos:line="40" pos:column="32">=<pos:position pos:line="40" pos:column="33"/></operator> <name pos:line="40" pos:column="34">ptr<pos:position pos:line="40" pos:column="37"/></name></expr>;<pos:position pos:line="40" pos:column="38"/></expr_stmt></block></then></if>
        <expr_stmt><expr><name pos:line="41" pos:column="9">nAtts<pos:position pos:line="41" pos:column="14"/></name><operator pos:line="41" pos:column="14">++<pos:position pos:line="41" pos:column="16"/></operator></expr>;<pos:position pos:line="41" pos:column="17"/></expr_stmt>
      }<pos:position pos:line="42" pos:column="8"/></block></then></if></elseif></if>
      <break pos:line="43" pos:column="7">break;<pos:position pos:line="43" pos:column="13"/></break>
    <case pos:line="44" pos:column="5">case <expr><name pos:line="44" pos:column="10">BT_APOS<pos:position pos:line="44" pos:column="17"/></name></expr>:<pos:position pos:line="44" pos:column="18"/></case>
      <if pos:line="45" pos:column="7">if <condition pos:line="45" pos:column="10">(<expr><name pos:line="45" pos:column="11">state<pos:position pos:line="45" pos:column="16"/></name> <operator pos:line="45" pos:column="17">!=<pos:position pos:line="45" pos:column="19"/></operator> <name pos:line="45" pos:column="20">inValue<pos:position pos:line="45" pos:column="27"/></name></expr>)<pos:position pos:line="45" pos:column="28"/></condition><then pos:line="45" pos:column="28"> <block pos:line="45" pos:column="29">{
        <if pos:line="46" pos:column="9">if <condition pos:line="46" pos:column="12">(<expr><name pos:line="46" pos:column="13">nAtts<pos:position pos:line="46" pos:column="18"/></name> <operator pos:line="46" pos:column="19">&lt;<pos:position pos:line="46" pos:column="23"/></operator> <name pos:line="46" pos:column="21">attsMax<pos:position pos:line="46" pos:column="28"/></name></expr>)<pos:position pos:line="46" pos:column="29"/></condition><then pos:line="46" pos:column="29">
          <block type="pseudo"><expr_stmt><expr><name><name pos:line="47" pos:column="11">atts<pos:position pos:line="47" pos:column="15"/></name><index pos:line="47" pos:column="15">[<expr><name pos:line="47" pos:column="16">nAtts<pos:position pos:line="47" pos:column="21"/></name></expr>]<pos:position pos:line="47" pos:column="22"/></index></name><operator pos:line="47" pos:column="22">.<pos:position pos:line="47" pos:column="23"/></operator><name pos:line="47" pos:column="23">valuePtr<pos:position pos:line="47" pos:column="31"/></name> <operator pos:line="47" pos:column="32">=<pos:position pos:line="47" pos:column="33"/></operator> <name pos:line="47" pos:column="34">ptr<pos:position pos:line="47" pos:column="37"/></name> <operator pos:line="47" pos:column="38">+<pos:position pos:line="47" pos:column="39"/></operator> <call><name pos:line="47" pos:column="40">MINBPC<pos:position pos:line="47" pos:column="46"/></name><argument_list pos:line="47" pos:column="46">(<argument><expr><name pos:line="47" pos:column="47">enc<pos:position pos:line="47" pos:column="50"/></name></expr></argument>)<pos:position pos:line="47" pos:column="51"/></argument_list></call></expr>;<pos:position pos:line="47" pos:column="52"/></expr_stmt></block></then></if>
        <expr_stmt><expr><name pos:line="48" pos:column="9">state<pos:position pos:line="48" pos:column="14"/></name> <operator pos:line="48" pos:column="15">=<pos:position pos:line="48" pos:column="16"/></operator> <name pos:line="48" pos:column="17">inValue<pos:position pos:line="48" pos:column="24"/></name></expr>;<pos:position pos:line="48" pos:column="25"/></expr_stmt>
        <expr_stmt><expr><name pos:line="49" pos:column="9">open<pos:position pos:line="49" pos:column="13"/></name> <operator pos:line="49" pos:column="14">=<pos:position pos:line="49" pos:column="15"/></operator> <name pos:line="49" pos:column="16">BT_APOS<pos:position pos:line="49" pos:column="23"/></name></expr>;<pos:position pos:line="49" pos:column="24"/></expr_stmt>
      }<pos:position pos:line="50" pos:column="8"/></block></then>
      <elseif pos:line="51" pos:column="7">else <if pos:line="51" pos:column="12">if <condition pos:line="51" pos:column="15">(<expr><name pos:line="51" pos:column="16">open<pos:position pos:line="51" pos:column="20"/></name> <operator pos:line="51" pos:column="21">==<pos:position pos:line="51" pos:column="23"/></operator> <name pos:line="51" pos:column="24">BT_APOS<pos:position pos:line="51" pos:column="31"/></name></expr>)<pos:position pos:line="51" pos:column="32"/></condition><then pos:line="51" pos:column="32"> <block pos:line="51" pos:column="33">{
        <expr_stmt><expr><name pos:line="52" pos:column="9">state<pos:position pos:line="52" pos:column="14"/></name> <operator pos:line="52" pos:column="15">=<pos:position pos:line="52" pos:column="16"/></operator> <name pos:line="52" pos:column="17">other<pos:position pos:line="52" pos:column="22"/></name></expr>;<pos:position pos:line="52" pos:column="23"/></expr_stmt>
        <if pos:line="53" pos:column="9">if <condition pos:line="53" pos:column="12">(<expr><name pos:line="53" pos:column="13">nAtts<pos:position pos:line="53" pos:column="18"/></name> <operator pos:line="53" pos:column="19">&lt;<pos:position pos:line="53" pos:column="23"/></operator> <name pos:line="53" pos:column="21">attsMax<pos:position pos:line="53" pos:column="28"/></name></expr>)<pos:position pos:line="53" pos:column="29"/></condition><then pos:line="53" pos:column="29">
          <block type="pseudo"><expr_stmt><expr><name><name pos:line="54" pos:column="11">atts<pos:position pos:line="54" pos:column="15"/></name><index pos:line="54" pos:column="15">[<expr><name pos:line="54" pos:column="16">nAtts<pos:position pos:line="54" pos:column="21"/></name></expr>]<pos:position pos:line="54" pos:column="22"/></index></name><operator pos:line="54" pos:column="22">.<pos:position pos:line="54" pos:column="23"/></operator><name pos:line="54" pos:column="23">valueEnd<pos:position pos:line="54" pos:column="31"/></name> <operator pos:line="54" pos:column="32">=<pos:position pos:line="54" pos:column="33"/></operator> <name pos:line="54" pos:column="34">ptr<pos:position pos:line="54" pos:column="37"/></name></expr>;<pos:position pos:line="54" pos:column="38"/></expr_stmt></block></then></if>
        <expr_stmt><expr><name pos:line="55" pos:column="9">nAtts<pos:position pos:line="55" pos:column="14"/></name><operator pos:line="55" pos:column="14">++<pos:position pos:line="55" pos:column="16"/></operator></expr>;<pos:position pos:line="55" pos:column="17"/></expr_stmt>
      }<pos:position pos:line="56" pos:column="8"/></block></then></if></elseif></if>
      <break pos:line="57" pos:column="7">break;<pos:position pos:line="57" pos:column="13"/></break>
    <case pos:line="58" pos:column="5">case <expr><name pos:line="58" pos:column="10">BT_AMP<pos:position pos:line="58" pos:column="16"/></name></expr>:<pos:position pos:line="58" pos:column="17"/></case>
      <if pos:line="59" pos:column="7">if <condition pos:line="59" pos:column="10">(<expr><name pos:line="59" pos:column="11">nAtts<pos:position pos:line="59" pos:column="16"/></name> <operator pos:line="59" pos:column="17">&lt;<pos:position pos:line="59" pos:column="21"/></operator> <name pos:line="59" pos:column="19">attsMax<pos:position pos:line="59" pos:column="26"/></name></expr>)<pos:position pos:line="59" pos:column="27"/></condition><then pos:line="59" pos:column="27">
        <block type="pseudo"><expr_stmt><expr><name><name pos:line="60" pos:column="9">atts<pos:position pos:line="60" pos:column="13"/></name><index pos:line="60" pos:column="13">[<expr><name pos:line="60" pos:column="14">nAtts<pos:position pos:line="60" pos:column="19"/></name></expr>]<pos:position pos:line="60" pos:column="20"/></index></name><operator pos:line="60" pos:column="20">.<pos:position pos:line="60" pos:column="21"/></operator><name pos:line="60" pos:column="21">normalized<pos:position pos:line="60" pos:column="31"/></name> <operator pos:line="60" pos:column="32">=<pos:position pos:line="60" pos:column="33"/></operator> <literal type="number" pos:line="60" pos:column="34">0<pos:position pos:line="60" pos:column="35"/></literal></expr>;<pos:position pos:line="60" pos:column="36"/></expr_stmt></block></then></if>
      <break pos:line="61" pos:column="7">break;<pos:position pos:line="61" pos:column="13"/></break>
    <case pos:line="62" pos:column="5">case <expr><name pos:line="62" pos:column="10">BT_S<pos:position pos:line="62" pos:column="14"/></name></expr>:<pos:position pos:line="62" pos:column="15"/></case>
      <if pos:line="63" pos:column="7">if <condition pos:line="63" pos:column="10">(<expr><name pos:line="63" pos:column="11">state<pos:position pos:line="63" pos:column="16"/></name> <operator pos:line="63" pos:column="17">==<pos:position pos:line="63" pos:column="19"/></operator> <name pos:line="63" pos:column="20">inName<pos:position pos:line="63" pos:column="26"/></name></expr>)<pos:position pos:line="63" pos:column="27"/></condition><then pos:line="63" pos:column="27">
        <block type="pseudo"><expr_stmt><expr><name pos:line="64" pos:column="9">state<pos:position pos:line="64" pos:column="14"/></name> <operator pos:line="64" pos:column="15">=<pos:position pos:line="64" pos:column="16"/></operator> <name pos:line="64" pos:column="17">other<pos:position pos:line="64" pos:column="22"/></name></expr>;<pos:position pos:line="64" pos:column="23"/></expr_stmt></block></then>
      <elseif pos:line="65" pos:column="7">else <if pos:line="65" pos:column="12">if <condition pos:line="65" pos:column="15">(<expr><name pos:line="65" pos:column="16">state<pos:position pos:line="65" pos:column="21"/></name> <operator pos:line="65" pos:column="22">==<pos:position pos:line="65" pos:column="24"/></operator> <name pos:line="65" pos:column="25">inValue<pos:position pos:line="65" pos:column="32"/></name>
               <operator pos:line="66" pos:column="16">&amp;&amp;<pos:position pos:line="66" pos:column="26"/></operator> <name pos:line="66" pos:column="19">nAtts<pos:position pos:line="66" pos:column="24"/></name> <operator pos:line="66" pos:column="25">&lt;<pos:position pos:line="66" pos:column="29"/></operator> <name pos:line="66" pos:column="27">attsMax<pos:position pos:line="66" pos:column="34"/></name>
               <operator pos:line="67" pos:column="16">&amp;&amp;<pos:position pos:line="67" pos:column="26"/></operator> <name><name pos:line="67" pos:column="19">atts<pos:position pos:line="67" pos:column="23"/></name><index pos:line="67" pos:column="23">[<expr><name pos:line="67" pos:column="24">nAtts<pos:position pos:line="67" pos:column="29"/></name></expr>]<pos:position pos:line="67" pos:column="30"/></index></name><operator pos:line="67" pos:column="30">.<pos:position pos:line="67" pos:column="31"/></operator><name pos:line="67" pos:column="31">normalized<pos:position pos:line="67" pos:column="41"/></name>
               <operator pos:line="68" pos:column="16">&amp;&amp;<pos:position pos:line="68" pos:column="26"/></operator> <operator pos:line="68" pos:column="19">(<pos:position pos:line="68" pos:column="20"/></operator><name pos:line="68" pos:column="20">ptr<pos:position pos:line="68" pos:column="23"/></name> <operator pos:line="68" pos:column="24">==<pos:position pos:line="68" pos:column="26"/></operator> <name><name pos:line="68" pos:column="27">atts<pos:position pos:line="68" pos:column="31"/></name><index pos:line="68" pos:column="31">[<expr><name pos:line="68" pos:column="32">nAtts<pos:position pos:line="68" pos:column="37"/></name></expr>]<pos:position pos:line="68" pos:column="38"/></index></name><operator pos:line="68" pos:column="38">.<pos:position pos:line="68" pos:column="39"/></operator><name pos:line="68" pos:column="39">valuePtr<pos:position pos:line="68" pos:column="47"/></name>
                   <operator pos:line="69" pos:column="20">||<pos:position pos:line="69" pos:column="22"/></operator> <call><name pos:line="69" pos:column="23">BYTE_TO_ASCII<pos:position pos:line="69" pos:column="36"/></name><argument_list pos:line="69" pos:column="36">(<argument><expr><name pos:line="69" pos:column="37">enc<pos:position pos:line="69" pos:column="40"/></name></expr></argument>, <argument><expr><name pos:line="69" pos:column="42">ptr<pos:position pos:line="69" pos:column="45"/></name></expr></argument>)<pos:position pos:line="69" pos:column="46"/></argument_list></call> <operator pos:line="69" pos:column="47">!=<pos:position pos:line="69" pos:column="49"/></operator> <name pos:line="69" pos:column="50">ASCII_SPACE<pos:position pos:line="69" pos:column="61"/></name>
                   <operator pos:line="70" pos:column="20">||<pos:position pos:line="70" pos:column="22"/></operator> <call><name pos:line="70" pos:column="23">BYTE_TO_ASCII<pos:position pos:line="70" pos:column="36"/></name><argument_list pos:line="70" pos:column="36">(<argument><expr><name pos:line="70" pos:column="37">enc<pos:position pos:line="70" pos:column="40"/></name></expr></argument>, <argument><expr><name pos:line="70" pos:column="42">ptr<pos:position pos:line="70" pos:column="45"/></name> <operator pos:line="70" pos:column="46">+<pos:position pos:line="70" pos:column="47"/></operator> <call><name pos:line="70" pos:column="48">MINBPC<pos:position pos:line="70" pos:column="54"/></name><argument_list pos:line="70" pos:column="54">(<argument><expr><name pos:line="70" pos:column="55">enc<pos:position pos:line="70" pos:column="58"/></name></expr></argument>)<pos:position pos:line="70" pos:column="59"/></argument_list></call></expr></argument>)<pos:position pos:line="70" pos:column="60"/></argument_list></call> <operator pos:line="70" pos:column="61">==<pos:position pos:line="70" pos:column="63"/></operator> <name pos:line="70" pos:column="64">ASCII_SPACE<pos:position pos:line="70" pos:column="75"/></name>
                   <operator pos:line="71" pos:column="20">||<pos:position pos:line="71" pos:column="22"/></operator> <call><name pos:line="71" pos:column="23">BYTE_TYPE<pos:position pos:line="71" pos:column="32"/></name><argument_list pos:line="71" pos:column="32">(<argument><expr><name pos:line="71" pos:column="33">enc<pos:position pos:line="71" pos:column="36"/></name></expr></argument>, <argument><expr><name pos:line="71" pos:column="38">ptr<pos:position pos:line="71" pos:column="41"/></name> <operator pos:line="71" pos:column="42">+<pos:position pos:line="71" pos:column="43"/></operator> <call><name pos:line="71" pos:column="44">MINBPC<pos:position pos:line="71" pos:column="50"/></name><argument_list pos:line="71" pos:column="50">(<argument><expr><name pos:line="71" pos:column="51">enc<pos:position pos:line="71" pos:column="54"/></name></expr></argument>)<pos:position pos:line="71" pos:column="55"/></argument_list></call></expr></argument>)<pos:position pos:line="71" pos:column="56"/></argument_list></call> <operator pos:line="71" pos:column="57">==<pos:position pos:line="71" pos:column="59"/></operator> <name pos:line="71" pos:column="60">open<pos:position pos:line="71" pos:column="64"/></name><operator pos:line="71" pos:column="64">)<pos:position pos:line="71" pos:column="65"/></operator></expr>)<pos:position pos:line="71" pos:column="66"/></condition><then pos:line="71" pos:column="66">
        <block type="pseudo"><expr_stmt><expr><name><name pos:line="72" pos:column="9">atts<pos:position pos:line="72" pos:column="13"/></name><index pos:line="72" pos:column="13">[<expr><name pos:line="72" pos:column="14">nAtts<pos:position pos:line="72" pos:column="19"/></name></expr>]<pos:position pos:line="72" pos:column="20"/></index></name><operator pos:line="72" pos:column="20">.<pos:position pos:line="72" pos:column="21"/></operator><name pos:line="72" pos:column="21">normalized<pos:position pos:line="72" pos:column="31"/></name> <operator pos:line="72" pos:column="32">=<pos:position pos:line="72" pos:column="33"/></operator> <literal type="number" pos:line="72" pos:column="34">0<pos:position pos:line="72" pos:column="35"/></literal></expr>;<pos:position pos:line="72" pos:column="36"/></expr_stmt></block></then></if></elseif></if>
      <break pos:line="73" pos:column="7">break;<pos:position pos:line="73" pos:column="13"/></break>
    <case pos:line="74" pos:column="5">case <expr><name pos:line="74" pos:column="10">BT_CR<pos:position pos:line="74" pos:column="15"/></name></expr>:<pos:position pos:line="74" pos:column="16"/></case> <case pos:line="74" pos:column="17">case <expr><name pos:line="74" pos:column="22">BT_LF<pos:position pos:line="74" pos:column="27"/></name></expr>:<pos:position pos:line="74" pos:column="28"/></case>
      <comment type="block" pos:line="75" pos:column="7">/* This case ensures that the first attribute name is counted
         Apart from that we could just change state on the quote. */</comment>
      <if pos:line="77" pos:column="7">if <condition pos:line="77" pos:column="10">(<expr><name pos:line="77" pos:column="11">state<pos:position pos:line="77" pos:column="16"/></name> <operator pos:line="77" pos:column="17">==<pos:position pos:line="77" pos:column="19"/></operator> <name pos:line="77" pos:column="20">inName<pos:position pos:line="77" pos:column="26"/></name></expr>)<pos:position pos:line="77" pos:column="27"/></condition><then pos:line="77" pos:column="27">
        <block type="pseudo"><expr_stmt><expr><name pos:line="78" pos:column="9">state<pos:position pos:line="78" pos:column="14"/></name> <operator pos:line="78" pos:column="15">=<pos:position pos:line="78" pos:column="16"/></operator> <name pos:line="78" pos:column="17">other<pos:position pos:line="78" pos:column="22"/></name></expr>;<pos:position pos:line="78" pos:column="23"/></expr_stmt></block></then>
      <elseif pos:line="79" pos:column="7">else <if pos:line="79" pos:column="12">if <condition pos:line="79" pos:column="15">(<expr><name pos:line="79" pos:column="16">state<pos:position pos:line="79" pos:column="21"/></name> <operator pos:line="79" pos:column="22">==<pos:position pos:line="79" pos:column="24"/></operator> <name pos:line="79" pos:column="25">inValue<pos:position pos:line="79" pos:column="32"/></name> <operator pos:line="79" pos:column="33">&amp;&amp;<pos:position pos:line="79" pos:column="43"/></operator> <name pos:line="79" pos:column="36">nAtts<pos:position pos:line="79" pos:column="41"/></name> <operator pos:line="79" pos:column="42">&lt;<pos:position pos:line="79" pos:column="46"/></operator> <name pos:line="79" pos:column="44">attsMax<pos:position pos:line="79" pos:column="51"/></name></expr>)<pos:position pos:line="79" pos:column="52"/></condition><then pos:line="79" pos:column="52">
        <block type="pseudo"><expr_stmt><expr><name><name pos:line="80" pos:column="9">atts<pos:position pos:line="80" pos:column="13"/></name><index pos:line="80" pos:column="13">[<expr><name pos:line="80" pos:column="14">nAtts<pos:position pos:line="80" pos:column="19"/></name></expr>]<pos:position pos:line="80" pos:column="20"/></index></name><operator pos:line="80" pos:column="20">.<pos:position pos:line="80" pos:column="21"/></operator><name pos:line="80" pos:column="21">normalized<pos:position pos:line="80" pos:column="31"/></name> <operator pos:line="80" pos:column="32">=<pos:position pos:line="80" pos:column="33"/></operator> <literal type="number" pos:line="80" pos:column="34">0<pos:position pos:line="80" pos:column="35"/></literal></expr>;<pos:position pos:line="80" pos:column="36"/></expr_stmt></block></then></if></elseif></if>
      <break pos:line="81" pos:column="7">break;<pos:position pos:line="81" pos:column="13"/></break>
    <case pos:line="82" pos:column="5">case <expr><name pos:line="82" pos:column="10">BT_GT<pos:position pos:line="82" pos:column="15"/></name></expr>:<pos:position pos:line="82" pos:column="16"/></case>
    <case pos:line="83" pos:column="5">case <expr><name pos:line="83" pos:column="10">BT_SOL<pos:position pos:line="83" pos:column="16"/></name></expr>:<pos:position pos:line="83" pos:column="17"/></case>
      <if pos:line="84" pos:column="7">if <condition pos:line="84" pos:column="10">(<expr><name pos:line="84" pos:column="11">state<pos:position pos:line="84" pos:column="16"/></name> <operator pos:line="84" pos:column="17">!=<pos:position pos:line="84" pos:column="19"/></operator> <name pos:line="84" pos:column="20">inValue<pos:position pos:line="84" pos:column="27"/></name></expr>)<pos:position pos:line="84" pos:column="28"/></condition><then pos:line="84" pos:column="28">
        <block type="pseudo"><return pos:line="85" pos:column="9">return <expr><name pos:line="85" pos:column="16">nAtts<pos:position pos:line="85" pos:column="21"/></name></expr>;<pos:position pos:line="85" pos:column="22"/></return></block></then></if>
      <break pos:line="86" pos:column="7">break;<pos:position pos:line="86" pos:column="13"/></break>
    <default pos:line="87" pos:column="5">default:<pos:position pos:line="87" pos:column="13"/></default>
      <break pos:line="88" pos:column="7">break;<pos:position pos:line="88" pos:column="13"/></break>
    }<pos:position pos:line="89" pos:column="6"/></block></switch>
  }<pos:position pos:line="90" pos:column="4"/></block></for>
  <comment type="block" pos:line="91" pos:column="3">/* not reached */</comment>
}<pos:position pos:line="92" pos:column="2"/></block></function></unit>

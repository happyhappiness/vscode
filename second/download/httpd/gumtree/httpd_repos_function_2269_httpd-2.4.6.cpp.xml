<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/httpd/gumtree/httpd_repos_function_2269_httpd-2.4.6.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">char<pos:position pos:line="1" pos:column="12"/></name> <modifier pos:line="1" pos:column="13">*<pos:position pos:line="1" pos:column="14"/></modifier></type><name pos:line="1" pos:column="14">compsub<pos:position pos:line="1" pos:column="21"/></name><parameter_list pos:line="1" pos:column="21">(<parameter><decl><type><name pos:line="1" pos:column="22">sed_commands_t<pos:position pos:line="1" pos:column="36"/></name> <modifier pos:line="1" pos:column="37">*<pos:position pos:line="1" pos:column="38"/></modifier></type><name pos:line="1" pos:column="38">commands<pos:position pos:line="1" pos:column="46"/></name></decl></parameter>,
                     <parameter><decl><type><name pos:line="2" pos:column="22">sed_comp_args<pos:position pos:line="2" pos:column="35"/></name> <modifier pos:line="2" pos:column="36">*<pos:position pos:line="2" pos:column="37"/></modifier></type><name pos:line="2" pos:column="37">compargs<pos:position pos:line="2" pos:column="45"/></name></decl></parameter>, <parameter><decl><type><name pos:line="2" pos:column="47">char<pos:position pos:line="2" pos:column="51"/></name> <modifier pos:line="2" pos:column="52">*<pos:position pos:line="2" pos:column="53"/></modifier></type><name pos:line="2" pos:column="53">rhsbuf<pos:position pos:line="2" pos:column="59"/></name></decl></parameter>)<pos:position pos:line="2" pos:column="60"/></parameter_list>
<block pos:line="3" pos:column="1">{
    <decl_stmt><decl><type><name pos:line="4" pos:column="5">char<pos:position pos:line="4" pos:column="9"/></name>   <modifier pos:line="4" pos:column="12">*<pos:position pos:line="4" pos:column="13"/></modifier></type><name pos:line="4" pos:column="13">p<pos:position pos:line="4" pos:column="14"/></name></decl>, <modifier pos:line="4" pos:column="16">*<pos:position pos:line="4" pos:column="17"/></modifier><decl><type ref="prev"/><name pos:line="4" pos:column="17">q<pos:position pos:line="4" pos:column="18"/></name></decl>;<pos:position pos:line="4" pos:column="19"/></decl_stmt>

    <expr_stmt><expr><name pos:line="6" pos:column="5">p<pos:position pos:line="6" pos:column="6"/></name> <operator pos:line="6" pos:column="7">=<pos:position pos:line="6" pos:column="8"/></operator> <name pos:line="6" pos:column="9">rhsbuf<pos:position pos:line="6" pos:column="15"/></name></expr>;<pos:position pos:line="6" pos:column="16"/></expr_stmt>
    <expr_stmt><expr><name pos:line="7" pos:column="5">q<pos:position pos:line="7" pos:column="6"/></name> <operator pos:line="7" pos:column="7">=<pos:position pos:line="7" pos:column="8"/></operator> <name><name pos:line="7" pos:column="9">commands<pos:position pos:line="7" pos:column="17"/></name><operator pos:line="7" pos:column="17">-&gt;<pos:position pos:line="7" pos:column="22"/></operator><name pos:line="7" pos:column="19">cp<pos:position pos:line="7" pos:column="21"/></name></name></expr>;<pos:position pos:line="7" pos:column="22"/></expr_stmt>
    <for pos:line="8" pos:column="5">for<control pos:line="8" pos:column="8">(<init pos:line="8" pos:column="9">;<pos:position pos:line="8" pos:column="10"/></init><condition pos:line="8" pos:column="10">;<pos:position pos:line="8" pos:column="11"/></condition><incr/>)<pos:position pos:line="8" pos:column="12"/></control> <block pos:line="8" pos:column="13">{
        <if pos:line="9" pos:column="9">if<condition pos:line="9" pos:column="11">(<expr><name pos:line="9" pos:column="12">p<pos:position pos:line="9" pos:column="13"/></name> <operator pos:line="9" pos:column="14">&gt;<pos:position pos:line="9" pos:column="18"/></operator> <operator pos:line="9" pos:column="16">&amp;<pos:position pos:line="9" pos:column="21"/></operator><name><name pos:line="9" pos:column="17">commands<pos:position pos:line="9" pos:column="25"/></name><operator pos:line="9" pos:column="25">-&gt;<pos:position pos:line="9" pos:column="30"/></operator><name pos:line="9" pos:column="27">respace<pos:position pos:line="9" pos:column="34"/></name><index pos:line="9" pos:column="34">[<expr><name pos:line="9" pos:column="35">RESIZE<pos:position pos:line="9" pos:column="41"/></name><operator pos:line="9" pos:column="41">-<pos:position pos:line="9" pos:column="42"/></operator><literal type="number" pos:line="9" pos:column="42">1<pos:position pos:line="9" pos:column="43"/></literal></expr>]<pos:position pos:line="9" pos:column="44"/></index></name></expr>)<pos:position pos:line="9" pos:column="45"/></condition><then pos:line="9" pos:column="45"> <block pos:line="9" pos:column="46">{
            <expr_stmt><expr><call><name pos:line="10" pos:column="13">command_errf<pos:position pos:line="10" pos:column="25"/></name><argument_list pos:line="10" pos:column="25">(<argument><expr><name pos:line="10" pos:column="26">commands<pos:position pos:line="10" pos:column="34"/></name></expr></argument>, <argument><expr><name pos:line="10" pos:column="36">SEDERR_TMMES<pos:position pos:line="10" pos:column="48"/></name></expr></argument>, <argument><expr><name><name pos:line="10" pos:column="50">commands<pos:position pos:line="10" pos:column="58"/></name><operator pos:line="10" pos:column="58">-&gt;<pos:position pos:line="10" pos:column="63"/></operator><name pos:line="10" pos:column="60">linebuf<pos:position pos:line="10" pos:column="67"/></name></name></expr></argument>)<pos:position pos:line="10" pos:column="68"/></argument_list></call></expr>;<pos:position pos:line="10" pos:column="69"/></expr_stmt>
            <return pos:line="11" pos:column="13">return <expr><name pos:line="11" pos:column="20">NULL<pos:position pos:line="11" pos:column="24"/></name></expr>;<pos:position pos:line="11" pos:column="25"/></return>
        }<pos:position pos:line="12" pos:column="10"/></block></then></if>
        <if pos:line="13" pos:column="9">if<condition pos:line="13" pos:column="11">(<expr><operator pos:line="13" pos:column="12">(<pos:position pos:line="13" pos:column="13"/></operator><operator pos:line="13" pos:column="13">*<pos:position pos:line="13" pos:column="14"/></operator><name pos:line="13" pos:column="14">p<pos:position pos:line="13" pos:column="15"/></name> <operator pos:line="13" pos:column="16">=<pos:position pos:line="13" pos:column="17"/></operator> <operator pos:line="13" pos:column="18">*<pos:position pos:line="13" pos:column="19"/></operator><name pos:line="13" pos:column="19">q<pos:position pos:line="13" pos:column="20"/></name><operator pos:line="13" pos:column="20">++<pos:position pos:line="13" pos:column="22"/></operator><operator pos:line="13" pos:column="22">)<pos:position pos:line="13" pos:column="23"/></operator> <operator pos:line="13" pos:column="24">==<pos:position pos:line="13" pos:column="26"/></operator> <literal type="char" pos:line="13" pos:column="27">'\\'<pos:position pos:line="13" pos:column="31"/></literal></expr>)<pos:position pos:line="13" pos:column="32"/></condition><then pos:line="13" pos:column="32"> <block pos:line="13" pos:column="33">{
            <expr_stmt><expr><name pos:line="14" pos:column="13">p<pos:position pos:line="14" pos:column="14"/></name><operator pos:line="14" pos:column="14">++<pos:position pos:line="14" pos:column="16"/></operator></expr>;<pos:position pos:line="14" pos:column="17"/></expr_stmt>
            <if pos:line="15" pos:column="13">if<condition pos:line="15" pos:column="15">(<expr><name pos:line="15" pos:column="16">p<pos:position pos:line="15" pos:column="17"/></name> <operator pos:line="15" pos:column="18">&gt;<pos:position pos:line="15" pos:column="22"/></operator> <operator pos:line="15" pos:column="20">&amp;<pos:position pos:line="15" pos:column="25"/></operator><name><name pos:line="15" pos:column="21">commands<pos:position pos:line="15" pos:column="29"/></name><operator pos:line="15" pos:column="29">-&gt;<pos:position pos:line="15" pos:column="34"/></operator><name pos:line="15" pos:column="31">respace<pos:position pos:line="15" pos:column="38"/></name><index pos:line="15" pos:column="38">[<expr><name pos:line="15" pos:column="39">RESIZE<pos:position pos:line="15" pos:column="45"/></name><operator pos:line="15" pos:column="45">-<pos:position pos:line="15" pos:column="46"/></operator><literal type="number" pos:line="15" pos:column="46">1<pos:position pos:line="15" pos:column="47"/></literal></expr>]<pos:position pos:line="15" pos:column="48"/></index></name></expr>)<pos:position pos:line="15" pos:column="49"/></condition><then pos:line="15" pos:column="49"> <block pos:line="15" pos:column="50">{
                <expr_stmt><expr><call><name pos:line="16" pos:column="17">command_errf<pos:position pos:line="16" pos:column="29"/></name><argument_list pos:line="16" pos:column="29">(<argument><expr><name pos:line="16" pos:column="30">commands<pos:position pos:line="16" pos:column="38"/></name></expr></argument>, <argument><expr><name pos:line="16" pos:column="40">SEDERR_TMMES<pos:position pos:line="16" pos:column="52"/></name></expr></argument>, <argument><expr><name><name pos:line="16" pos:column="54">commands<pos:position pos:line="16" pos:column="62"/></name><operator pos:line="16" pos:column="62">-&gt;<pos:position pos:line="16" pos:column="67"/></operator><name pos:line="16" pos:column="64">linebuf<pos:position pos:line="16" pos:column="71"/></name></name></expr></argument>)<pos:position pos:line="16" pos:column="72"/></argument_list></call></expr>;<pos:position pos:line="16" pos:column="73"/></expr_stmt>
                <return pos:line="17" pos:column="17">return <expr><name pos:line="17" pos:column="24">NULL<pos:position pos:line="17" pos:column="28"/></name></expr>;<pos:position pos:line="17" pos:column="29"/></return>
            }<pos:position pos:line="18" pos:column="14"/></block></then></if>
            <expr_stmt><expr><operator pos:line="19" pos:column="13">*<pos:position pos:line="19" pos:column="14"/></operator><name pos:line="19" pos:column="14">p<pos:position pos:line="19" pos:column="15"/></name> <operator pos:line="19" pos:column="16">=<pos:position pos:line="19" pos:column="17"/></operator> <operator pos:line="19" pos:column="18">*<pos:position pos:line="19" pos:column="19"/></operator><name pos:line="19" pos:column="19">q<pos:position pos:line="19" pos:column="20"/></name><operator pos:line="19" pos:column="20">++<pos:position pos:line="19" pos:column="22"/></operator></expr>;<pos:position pos:line="19" pos:column="23"/></expr_stmt>
            <if pos:line="20" pos:column="13">if<condition pos:line="20" pos:column="15">(<expr><operator pos:line="20" pos:column="16">*<pos:position pos:line="20" pos:column="17"/></operator><name pos:line="20" pos:column="17">p<pos:position pos:line="20" pos:column="18"/></name> <operator pos:line="20" pos:column="19">&gt;<pos:position pos:line="20" pos:column="23"/></operator> <name><name pos:line="20" pos:column="21">compargs<pos:position pos:line="20" pos:column="29"/></name><operator pos:line="20" pos:column="29">-&gt;<pos:position pos:line="20" pos:column="34"/></operator><name pos:line="20" pos:column="31">nbra<pos:position pos:line="20" pos:column="35"/></name></name> <operator pos:line="20" pos:column="36">+<pos:position pos:line="20" pos:column="37"/></operator> <literal type="char" pos:line="20" pos:column="38">'0'<pos:position pos:line="20" pos:column="41"/></literal> <operator pos:line="20" pos:column="42">&amp;&amp;<pos:position pos:line="20" pos:column="52"/></operator> <operator pos:line="20" pos:column="45">*<pos:position pos:line="20" pos:column="46"/></operator><name pos:line="20" pos:column="46">p<pos:position pos:line="20" pos:column="47"/></name> <operator pos:line="20" pos:column="48">&lt;=<pos:position pos:line="20" pos:column="53"/></operator> <literal type="char" pos:line="20" pos:column="51">'9'<pos:position pos:line="20" pos:column="54"/></literal></expr>)<pos:position pos:line="20" pos:column="55"/></condition><then pos:line="20" pos:column="55"> <block pos:line="20" pos:column="56">{
                <expr_stmt><expr><call><name pos:line="21" pos:column="17">command_errf<pos:position pos:line="21" pos:column="29"/></name><argument_list pos:line="21" pos:column="29">(<argument><expr><name pos:line="21" pos:column="30">commands<pos:position pos:line="21" pos:column="38"/></name></expr></argument>, <argument><expr><name pos:line="21" pos:column="40">SEDERR_DOORNG<pos:position pos:line="21" pos:column="53"/></name></expr></argument>, <argument><expr><name><name pos:line="21" pos:column="55">commands<pos:position pos:line="21" pos:column="63"/></name><operator pos:line="21" pos:column="63">-&gt;<pos:position pos:line="21" pos:column="68"/></operator><name pos:line="21" pos:column="65">linebuf<pos:position pos:line="21" pos:column="72"/></name></name></expr></argument>)<pos:position pos:line="21" pos:column="73"/></argument_list></call></expr>;<pos:position pos:line="21" pos:column="74"/></expr_stmt>
                <return pos:line="22" pos:column="17">return <expr><name pos:line="22" pos:column="24">NULL<pos:position pos:line="22" pos:column="28"/></name></expr>;<pos:position pos:line="22" pos:column="29"/></return>
            }<pos:position pos:line="23" pos:column="14"/></block></then></if>
            <expr_stmt><expr><name pos:line="24" pos:column="13">p<pos:position pos:line="24" pos:column="14"/></name><operator pos:line="24" pos:column="14">++<pos:position pos:line="24" pos:column="16"/></operator></expr>;<pos:position pos:line="24" pos:column="17"/></expr_stmt>
            <continue pos:line="25" pos:column="13">continue;<pos:position pos:line="25" pos:column="22"/></continue>
        }<pos:position pos:line="26" pos:column="10"/></block></then></if>
        <if pos:line="27" pos:column="9">if<condition pos:line="27" pos:column="11">(<expr><operator pos:line="27" pos:column="12">*<pos:position pos:line="27" pos:column="13"/></operator><name pos:line="27" pos:column="13">p<pos:position pos:line="27" pos:column="14"/></name> <operator pos:line="27" pos:column="15">==<pos:position pos:line="27" pos:column="17"/></operator> <name><name pos:line="27" pos:column="18">commands<pos:position pos:line="27" pos:column="26"/></name><operator pos:line="27" pos:column="26">-&gt;<pos:position pos:line="27" pos:column="31"/></operator><name pos:line="27" pos:column="28">sseof<pos:position pos:line="27" pos:column="33"/></name></name></expr>)<pos:position pos:line="27" pos:column="34"/></condition><then pos:line="27" pos:column="34"> <block pos:line="27" pos:column="35">{
            <expr_stmt><expr><operator pos:line="28" pos:column="13">*<pos:position pos:line="28" pos:column="14"/></operator><name pos:line="28" pos:column="14">p<pos:position pos:line="28" pos:column="15"/></name><operator pos:line="28" pos:column="15">++<pos:position pos:line="28" pos:column="17"/></operator> <operator pos:line="28" pos:column="18">=<pos:position pos:line="28" pos:column="19"/></operator> <literal type="char" pos:line="28" pos:column="20">'\0'<pos:position pos:line="28" pos:column="24"/></literal></expr>;<pos:position pos:line="28" pos:column="25"/></expr_stmt>
            <expr_stmt><expr><name><name pos:line="29" pos:column="13">commands<pos:position pos:line="29" pos:column="21"/></name><operator pos:line="29" pos:column="21">-&gt;<pos:position pos:line="29" pos:column="26"/></operator><name pos:line="29" pos:column="23">cp<pos:position pos:line="29" pos:column="25"/></name></name> <operator pos:line="29" pos:column="26">=<pos:position pos:line="29" pos:column="27"/></operator> <name pos:line="29" pos:column="28">q<pos:position pos:line="29" pos:column="29"/></name></expr>;<pos:position pos:line="29" pos:column="30"/></expr_stmt>
            <return pos:line="30" pos:column="13">return<expr><operator pos:line="30" pos:column="19">(<pos:position pos:line="30" pos:column="20"/></operator><name pos:line="30" pos:column="20">p<pos:position pos:line="30" pos:column="21"/></name><operator pos:line="30" pos:column="21">)<pos:position pos:line="30" pos:column="22"/></operator></expr>;<pos:position pos:line="30" pos:column="23"/></return>
        }<pos:position pos:line="31" pos:column="10"/></block></then></if>
          <if pos:line="32" pos:column="11">if<condition pos:line="32" pos:column="13">(<expr><operator pos:line="32" pos:column="14">*<pos:position pos:line="32" pos:column="15"/></operator><name pos:line="32" pos:column="15">p<pos:position pos:line="32" pos:column="16"/></name><operator pos:line="32" pos:column="16">++<pos:position pos:line="32" pos:column="18"/></operator> <operator pos:line="32" pos:column="19">==<pos:position pos:line="32" pos:column="21"/></operator> <literal type="char" pos:line="32" pos:column="22">'\0'<pos:position pos:line="32" pos:column="26"/></literal></expr>)<pos:position pos:line="32" pos:column="27"/></condition><then pos:line="32" pos:column="27"> <block pos:line="32" pos:column="28">{
            <expr_stmt><expr><call><name pos:line="33" pos:column="13">command_errf<pos:position pos:line="33" pos:column="25"/></name><argument_list pos:line="33" pos:column="25">(<argument><expr><name pos:line="33" pos:column="26">commands<pos:position pos:line="33" pos:column="34"/></name></expr></argument>, <argument><expr><name pos:line="33" pos:column="36">SEDERR_EDMOSUB<pos:position pos:line="33" pos:column="50"/></name></expr></argument>, <argument><expr><name><name pos:line="33" pos:column="52">commands<pos:position pos:line="33" pos:column="60"/></name><operator pos:line="33" pos:column="60">-&gt;<pos:position pos:line="33" pos:column="65"/></operator><name pos:line="33" pos:column="62">linebuf<pos:position pos:line="33" pos:column="69"/></name></name></expr></argument>)<pos:position pos:line="33" pos:column="70"/></argument_list></call></expr>;<pos:position pos:line="33" pos:column="71"/></expr_stmt>
            <return pos:line="34" pos:column="13">return <expr><name pos:line="34" pos:column="20">NULL<pos:position pos:line="34" pos:column="24"/></name></expr>;<pos:position pos:line="34" pos:column="25"/></return>
        }<pos:position pos:line="35" pos:column="10"/></block></then></if>
    }<pos:position pos:line="36" pos:column="6"/></block></for>
}<pos:position pos:line="37" pos:column="2"/></block></function></unit>

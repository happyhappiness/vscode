<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/httpd/gumtree/httpd_repos_function_217_httpd-2.4.16.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">dav_error<pos:position pos:line="1" pos:column="17"/></name> <modifier pos:line="1" pos:column="18">*<pos:position pos:line="1" pos:column="19"/></modifier></type> <name pos:line="1" pos:column="20">dav_fs_save_lock_record<pos:position pos:line="1" pos:column="43"/></name><parameter_list pos:line="1" pos:column="43">(<parameter><decl><type><name pos:line="1" pos:column="44">dav_lockdb<pos:position pos:line="1" pos:column="54"/></name> <modifier pos:line="1" pos:column="55">*<pos:position pos:line="1" pos:column="56"/></modifier></type><name pos:line="1" pos:column="56">lockdb<pos:position pos:line="1" pos:column="62"/></name></decl></parameter>, <parameter><decl><type><name pos:line="1" pos:column="64">apr_datum_t<pos:position pos:line="1" pos:column="75"/></name></type> <name pos:line="1" pos:column="76">key<pos:position pos:line="1" pos:column="79"/></name></decl></parameter>,
                                           <parameter><decl><type><name pos:line="2" pos:column="44">dav_lock_discovery<pos:position pos:line="2" pos:column="62"/></name> <modifier pos:line="2" pos:column="63">*<pos:position pos:line="2" pos:column="64"/></modifier></type><name pos:line="2" pos:column="64">direct<pos:position pos:line="2" pos:column="70"/></name></decl></parameter>,
                                           <parameter><decl><type><name pos:line="3" pos:column="44">dav_lock_indirect<pos:position pos:line="3" pos:column="61"/></name> <modifier pos:line="3" pos:column="62">*<pos:position pos:line="3" pos:column="63"/></modifier></type><name pos:line="3" pos:column="63">indirect<pos:position pos:line="3" pos:column="71"/></name></decl></parameter>)<pos:position pos:line="3" pos:column="72"/></parameter_list>
<block pos:line="4" pos:column="1">{
    <decl_stmt><decl><type><name pos:line="5" pos:column="5">dav_error<pos:position pos:line="5" pos:column="14"/></name> <modifier pos:line="5" pos:column="15">*<pos:position pos:line="5" pos:column="16"/></modifier></type><name pos:line="5" pos:column="16">err<pos:position pos:line="5" pos:column="19"/></name></decl>;<pos:position pos:line="5" pos:column="20"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="6" pos:column="5">apr_datum_t<pos:position pos:line="6" pos:column="16"/></name></type> <name pos:line="6" pos:column="17">val<pos:position pos:line="6" pos:column="20"/></name> <init pos:line="6" pos:column="21">= <expr><block pos:line="6" pos:column="23">{ <expr><literal type="number" pos:line="6" pos:column="25">0<pos:position pos:line="6" pos:column="26"/></literal></expr> }<pos:position pos:line="6" pos:column="28"/></block></expr></init></decl>;<pos:position pos:line="6" pos:column="29"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="7" pos:column="5">char<pos:position pos:line="7" pos:column="9"/></name> <modifier pos:line="7" pos:column="10">*<pos:position pos:line="7" pos:column="11"/></modifier></type><name pos:line="7" pos:column="11">ptr<pos:position pos:line="7" pos:column="14"/></name></decl>;<pos:position pos:line="7" pos:column="15"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="8" pos:column="5">dav_lock_discovery<pos:position pos:line="8" pos:column="23"/></name> <modifier pos:line="8" pos:column="24">*<pos:position pos:line="8" pos:column="25"/></modifier></type><name pos:line="8" pos:column="25">dp<pos:position pos:line="8" pos:column="27"/></name> <init pos:line="8" pos:column="28">= <expr><name pos:line="8" pos:column="30">direct<pos:position pos:line="8" pos:column="36"/></name></expr></init></decl>;<pos:position pos:line="8" pos:column="37"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="9" pos:column="5">dav_lock_indirect<pos:position pos:line="9" pos:column="22"/></name> <modifier pos:line="9" pos:column="23">*<pos:position pos:line="9" pos:column="24"/></modifier></type><name pos:line="9" pos:column="24">ip<pos:position pos:line="9" pos:column="26"/></name> <init pos:line="9" pos:column="27">= <expr><name pos:line="9" pos:column="29">indirect<pos:position pos:line="9" pos:column="37"/></name></expr></init></decl>;<pos:position pos:line="9" pos:column="38"/></decl_stmt>

<cpp:if pos:line="11" pos:column="1">#<cpp:directive pos:line="11" pos:column="2">if<pos:position pos:line="11" pos:column="4"/></cpp:directive> <expr><name pos:line="11" pos:column="5">DAV_DEBUG<pos:position pos:line="11" pos:column="14"/></name></expr></cpp:if>
    <if pos:line="12" pos:column="5">if <condition pos:line="12" pos:column="8">(<expr><name><name pos:line="12" pos:column="9">lockdb<pos:position pos:line="12" pos:column="15"/></name><operator pos:line="12" pos:column="15">-&gt;<pos:position pos:line="12" pos:column="20"/></operator><name pos:line="12" pos:column="17">ro<pos:position pos:line="12" pos:column="19"/></name></name></expr>)<pos:position pos:line="12" pos:column="20"/></condition><then pos:line="12" pos:column="20"> <block pos:line="12" pos:column="21">{
        <return pos:line="13" pos:column="9">return <expr><call><name pos:line="13" pos:column="16">dav_new_error<pos:position pos:line="13" pos:column="29"/></name><argument_list pos:line="13" pos:column="29">(<argument><expr><name><name pos:line="13" pos:column="30">lockdb<pos:position pos:line="13" pos:column="36"/></name><operator pos:line="13" pos:column="36">-&gt;<pos:position pos:line="13" pos:column="41"/></operator><name pos:line="13" pos:column="38">info<pos:position pos:line="13" pos:column="42"/></name><operator pos:line="13" pos:column="42">-&gt;<pos:position pos:line="13" pos:column="47"/></operator><name pos:line="13" pos:column="44">pool<pos:position pos:line="13" pos:column="48"/></name></name></expr></argument>,
                             <argument><expr><name pos:line="14" pos:column="30">HTTP_INTERNAL_SERVER_ERROR<pos:position pos:line="14" pos:column="56"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="14" pos:column="58">0<pos:position pos:line="14" pos:column="59"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="14" pos:column="61">0<pos:position pos:line="14" pos:column="62"/></literal></expr></argument>,
                             <argument><expr><literal type="string" pos:line="15" pos:column="30">"INTERNAL DESIGN ERROR: the lockdb was opened "<pos:position pos:line="15" pos:column="77"/></literal>
                             <literal type="string" pos:line="16" pos:column="30">"readonly, but an attempt to save locks was "<pos:position pos:line="16" pos:column="75"/></literal>
                             <literal type="string" pos:line="17" pos:column="30">"performed."<pos:position pos:line="17" pos:column="42"/></literal></expr></argument>)<pos:position pos:line="17" pos:column="43"/></argument_list></call></expr>;<pos:position pos:line="17" pos:column="44"/></return>
    }<pos:position pos:line="18" pos:column="6"/></block></then></if>
<cpp:endif pos:line="19" pos:column="1">#<cpp:directive pos:line="19" pos:column="2">endif<pos:position pos:line="19" pos:column="7"/></cpp:directive></cpp:endif>

    <if pos:line="21" pos:column="5">if <condition pos:line="21" pos:column="8">(<expr><operator pos:line="21" pos:column="9">(<pos:position pos:line="21" pos:column="10"/></operator><name pos:line="21" pos:column="10">err<pos:position pos:line="21" pos:column="13"/></name> <operator pos:line="21" pos:column="14">=<pos:position pos:line="21" pos:column="15"/></operator> <call><name pos:line="21" pos:column="16">dav_fs_really_open_lockdb<pos:position pos:line="21" pos:column="41"/></name><argument_list pos:line="21" pos:column="41">(<argument><expr><name pos:line="21" pos:column="42">lockdb<pos:position pos:line="21" pos:column="48"/></name></expr></argument>)<pos:position pos:line="21" pos:column="49"/></argument_list></call><operator pos:line="21" pos:column="49">)<pos:position pos:line="21" pos:column="50"/></operator> <operator pos:line="21" pos:column="51">!=<pos:position pos:line="21" pos:column="53"/></operator> <name pos:line="21" pos:column="54">NULL<pos:position pos:line="21" pos:column="58"/></name></expr>)<pos:position pos:line="21" pos:column="59"/></condition><then pos:line="21" pos:column="59"> <block pos:line="21" pos:column="60">{
        <comment type="block" pos:line="22" pos:column="9">/* ### add a higher-level error? */</comment>
        <return pos:line="23" pos:column="9">return <expr><name pos:line="23" pos:column="16">err<pos:position pos:line="23" pos:column="19"/></name></expr>;<pos:position pos:line="23" pos:column="20"/></return>
    }<pos:position pos:line="24" pos:column="6"/></block></then></if>

    <comment type="block" pos:line="26" pos:column="5">/* If nothing to save, delete key */</comment>
    <if pos:line="27" pos:column="5">if <condition pos:line="27" pos:column="8">(<expr><name pos:line="27" pos:column="9">dp<pos:position pos:line="27" pos:column="11"/></name> <operator pos:line="27" pos:column="12">==<pos:position pos:line="27" pos:column="14"/></operator> <name pos:line="27" pos:column="15">NULL<pos:position pos:line="27" pos:column="19"/></name> <operator pos:line="27" pos:column="20">&amp;&amp;<pos:position pos:line="27" pos:column="30"/></operator> <name pos:line="27" pos:column="23">ip<pos:position pos:line="27" pos:column="25"/></name> <operator pos:line="27" pos:column="26">==<pos:position pos:line="27" pos:column="28"/></operator> <name pos:line="27" pos:column="29">NULL<pos:position pos:line="27" pos:column="33"/></name></expr>)<pos:position pos:line="27" pos:column="34"/></condition><then pos:line="27" pos:column="34"> <block pos:line="27" pos:column="35">{
        <comment type="block" pos:line="28" pos:column="9">/* don't fail if the key is not present */</comment>
        <comment type="block" pos:line="29" pos:column="9">/* ### but what about other errors? */</comment>
        <expr_stmt><expr><operator pos:line="30" pos:column="9">(<pos:position pos:line="30" pos:column="10"/></operator><name pos:line="30" pos:column="10">void<pos:position pos:line="30" pos:column="14"/></name><operator pos:line="30" pos:column="14">)<pos:position pos:line="30" pos:column="15"/></operator> <call><name pos:line="30" pos:column="16">dav_dbm_delete<pos:position pos:line="30" pos:column="30"/></name><argument_list pos:line="30" pos:column="30">(<argument><expr><name><name pos:line="30" pos:column="31">lockdb<pos:position pos:line="30" pos:column="37"/></name><operator pos:line="30" pos:column="37">-&gt;<pos:position pos:line="30" pos:column="42"/></operator><name pos:line="30" pos:column="39">info<pos:position pos:line="30" pos:column="43"/></name><operator pos:line="30" pos:column="43">-&gt;<pos:position pos:line="30" pos:column="48"/></operator><name pos:line="30" pos:column="45">db<pos:position pos:line="30" pos:column="47"/></name></name></expr></argument>, <argument><expr><name pos:line="30" pos:column="49">key<pos:position pos:line="30" pos:column="52"/></name></expr></argument>)<pos:position pos:line="30" pos:column="53"/></argument_list></call></expr>;<pos:position pos:line="30" pos:column="54"/></expr_stmt>
        <return pos:line="31" pos:column="9">return <expr><name pos:line="31" pos:column="16">NULL<pos:position pos:line="31" pos:column="20"/></name></expr>;<pos:position pos:line="31" pos:column="21"/></return>
    }<pos:position pos:line="32" pos:column="6"/></block></then></if>

    <while pos:line="34" pos:column="5">while<condition pos:line="34" pos:column="10">(<expr><name pos:line="34" pos:column="11">dp<pos:position pos:line="34" pos:column="13"/></name></expr>)<pos:position pos:line="34" pos:column="14"/></condition> <block pos:line="34" pos:column="15">{
        <expr_stmt><expr><name><name pos:line="35" pos:column="9">val<pos:position pos:line="35" pos:column="12"/></name><operator pos:line="35" pos:column="12">.<pos:position pos:line="35" pos:column="13"/></operator><name pos:line="35" pos:column="13">dsize<pos:position pos:line="35" pos:column="18"/></name></name> <operator pos:line="35" pos:column="19">+=<pos:position pos:line="35" pos:column="21"/></operator> <call><name pos:line="35" pos:column="22">dav_size_direct<pos:position pos:line="35" pos:column="37"/></name><argument_list pos:line="35" pos:column="37">(<argument><expr><name pos:line="35" pos:column="38">dp<pos:position pos:line="35" pos:column="40"/></name></expr></argument>)<pos:position pos:line="35" pos:column="41"/></argument_list></call></expr>;<pos:position pos:line="35" pos:column="42"/></expr_stmt>
        <expr_stmt><expr><name pos:line="36" pos:column="9">dp<pos:position pos:line="36" pos:column="11"/></name> <operator pos:line="36" pos:column="12">=<pos:position pos:line="36" pos:column="13"/></operator> <name><name pos:line="36" pos:column="14">dp<pos:position pos:line="36" pos:column="16"/></name><operator pos:line="36" pos:column="16">-&gt;<pos:position pos:line="36" pos:column="21"/></operator><name pos:line="36" pos:column="18">next<pos:position pos:line="36" pos:column="22"/></name></name></expr>;<pos:position pos:line="36" pos:column="23"/></expr_stmt>
    }<pos:position pos:line="37" pos:column="6"/></block></while>
    <while pos:line="38" pos:column="5">while<condition pos:line="38" pos:column="10">(<expr><name pos:line="38" pos:column="11">ip<pos:position pos:line="38" pos:column="13"/></name></expr>)<pos:position pos:line="38" pos:column="14"/></condition> <block pos:line="38" pos:column="15">{
        <expr_stmt><expr><name><name pos:line="39" pos:column="9">val<pos:position pos:line="39" pos:column="12"/></name><operator pos:line="39" pos:column="12">.<pos:position pos:line="39" pos:column="13"/></operator><name pos:line="39" pos:column="13">dsize<pos:position pos:line="39" pos:column="18"/></name></name> <operator pos:line="39" pos:column="19">+=<pos:position pos:line="39" pos:column="21"/></operator> <call><name pos:line="39" pos:column="22">dav_size_indirect<pos:position pos:line="39" pos:column="39"/></name><argument_list pos:line="39" pos:column="39">(<argument><expr><name pos:line="39" pos:column="40">ip<pos:position pos:line="39" pos:column="42"/></name></expr></argument>)<pos:position pos:line="39" pos:column="43"/></argument_list></call></expr>;<pos:position pos:line="39" pos:column="44"/></expr_stmt>
        <expr_stmt><expr><name pos:line="40" pos:column="9">ip<pos:position pos:line="40" pos:column="11"/></name> <operator pos:line="40" pos:column="12">=<pos:position pos:line="40" pos:column="13"/></operator> <name><name pos:line="40" pos:column="14">ip<pos:position pos:line="40" pos:column="16"/></name><operator pos:line="40" pos:column="16">-&gt;<pos:position pos:line="40" pos:column="21"/></operator><name pos:line="40" pos:column="18">next<pos:position pos:line="40" pos:column="22"/></name></name></expr>;<pos:position pos:line="40" pos:column="23"/></expr_stmt>
    }<pos:position pos:line="41" pos:column="6"/></block></while>

    <comment type="block" pos:line="43" pos:column="5">/* ### can this be apr_palloc() ? */</comment>
    <comment type="block" pos:line="44" pos:column="5">/* ### hmmm.... investigate the use of a buffer here */</comment>
    <expr_stmt><expr><name pos:line="45" pos:column="5">ptr<pos:position pos:line="45" pos:column="8"/></name> <operator pos:line="45" pos:column="9">=<pos:position pos:line="45" pos:column="10"/></operator> <name><name pos:line="45" pos:column="11">val<pos:position pos:line="45" pos:column="14"/></name><operator pos:line="45" pos:column="14">.<pos:position pos:line="45" pos:column="15"/></operator><name pos:line="45" pos:column="15">dptr<pos:position pos:line="45" pos:column="19"/></name></name> <operator pos:line="45" pos:column="20">=<pos:position pos:line="45" pos:column="21"/></operator> <call><name pos:line="45" pos:column="22">apr_pcalloc<pos:position pos:line="45" pos:column="33"/></name><argument_list pos:line="45" pos:column="33">(<argument><expr><name><name pos:line="45" pos:column="34">lockdb<pos:position pos:line="45" pos:column="40"/></name><operator pos:line="45" pos:column="40">-&gt;<pos:position pos:line="45" pos:column="45"/></operator><name pos:line="45" pos:column="42">info<pos:position pos:line="45" pos:column="46"/></name><operator pos:line="45" pos:column="46">-&gt;<pos:position pos:line="45" pos:column="51"/></operator><name pos:line="45" pos:column="48">pool<pos:position pos:line="45" pos:column="52"/></name></name></expr></argument>, <argument><expr><name><name pos:line="45" pos:column="54">val<pos:position pos:line="45" pos:column="57"/></name><operator pos:line="45" pos:column="57">.<pos:position pos:line="45" pos:column="58"/></operator><name pos:line="45" pos:column="58">dsize<pos:position pos:line="45" pos:column="63"/></name></name></expr></argument>)<pos:position pos:line="45" pos:column="64"/></argument_list></call></expr>;<pos:position pos:line="45" pos:column="65"/></expr_stmt>
    <expr_stmt><expr><name pos:line="46" pos:column="5">dp<pos:position pos:line="46" pos:column="7"/></name>  <operator pos:line="46" pos:column="9">=<pos:position pos:line="46" pos:column="10"/></operator> <name pos:line="46" pos:column="11">direct<pos:position pos:line="46" pos:column="17"/></name></expr>;<pos:position pos:line="46" pos:column="18"/></expr_stmt>
    <expr_stmt><expr><name pos:line="47" pos:column="5">ip<pos:position pos:line="47" pos:column="7"/></name>  <operator pos:line="47" pos:column="9">=<pos:position pos:line="47" pos:column="10"/></operator> <name pos:line="47" pos:column="11">indirect<pos:position pos:line="47" pos:column="19"/></name></expr>;<pos:position pos:line="47" pos:column="20"/></expr_stmt>

    <while pos:line="49" pos:column="5">while<condition pos:line="49" pos:column="10">(<expr><name pos:line="49" pos:column="11">dp<pos:position pos:line="49" pos:column="13"/></name></expr>)<pos:position pos:line="49" pos:column="14"/></condition> <block pos:line="49" pos:column="15">{
        <expr_stmt><expr><operator pos:line="50" pos:column="9">*<pos:position pos:line="50" pos:column="10"/></operator><name pos:line="50" pos:column="10">ptr<pos:position pos:line="50" pos:column="13"/></name><operator pos:line="50" pos:column="13">++<pos:position pos:line="50" pos:column="15"/></operator> <operator pos:line="50" pos:column="16">=<pos:position pos:line="50" pos:column="17"/></operator> <name pos:line="50" pos:column="18">DAV_LOCK_DIRECT<pos:position pos:line="50" pos:column="33"/></name></expr>;<pos:position pos:line="50" pos:column="34"/></expr_stmt>   <comment type="block" pos:line="50" pos:column="37">/* Direct lock - lock_discovery struct follows */</comment>
        <expr_stmt><expr><call><name pos:line="51" pos:column="9">memcpy<pos:position pos:line="51" pos:column="15"/></name><argument_list pos:line="51" pos:column="15">(<argument><expr><name pos:line="51" pos:column="16">ptr<pos:position pos:line="51" pos:column="19"/></name></expr></argument>, <argument><expr><name pos:line="51" pos:column="21">dp<pos:position pos:line="51" pos:column="23"/></name></expr></argument>, <argument><expr><sizeof pos:line="51" pos:column="25">sizeof<argument_list pos:line="51" pos:column="31">(<argument><expr><name><name pos:line="51" pos:column="32">dp<pos:position pos:line="51" pos:column="34"/></name><operator pos:line="51" pos:column="34">-&gt;<pos:position pos:line="51" pos:column="39"/></operator><name pos:line="51" pos:column="36">f<pos:position pos:line="51" pos:column="37"/></name></name></expr></argument>)<pos:position pos:line="51" pos:column="38"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="51" pos:column="39"/></argument_list></call></expr>;<pos:position pos:line="51" pos:column="40"/></expr_stmt>   <comment type="block" pos:line="51" pos:column="43">/* Fixed portion of struct */</comment>
        <expr_stmt><expr><name pos:line="52" pos:column="9">ptr<pos:position pos:line="52" pos:column="12"/></name> <operator pos:line="52" pos:column="13">+=<pos:position pos:line="52" pos:column="15"/></operator> <sizeof pos:line="52" pos:column="16">sizeof<argument_list pos:line="52" pos:column="22">(<argument><expr><name><name pos:line="52" pos:column="23">dp<pos:position pos:line="52" pos:column="25"/></name><operator pos:line="52" pos:column="25">-&gt;<pos:position pos:line="52" pos:column="30"/></operator><name pos:line="52" pos:column="27">f<pos:position pos:line="52" pos:column="28"/></name></name></expr></argument>)<pos:position pos:line="52" pos:column="29"/></argument_list></sizeof></expr>;<pos:position pos:line="52" pos:column="30"/></expr_stmt>
        <expr_stmt><expr><call><name pos:line="53" pos:column="9">memcpy<pos:position pos:line="53" pos:column="15"/></name><argument_list pos:line="53" pos:column="15">(<argument><expr><name pos:line="53" pos:column="16">ptr<pos:position pos:line="53" pos:column="19"/></name></expr></argument>, <argument><expr><name><name pos:line="53" pos:column="21">dp<pos:position pos:line="53" pos:column="23"/></name><operator pos:line="53" pos:column="23">-&gt;<pos:position pos:line="53" pos:column="28"/></operator><name pos:line="53" pos:column="25">locktoken<pos:position pos:line="53" pos:column="34"/></name></name></expr></argument>, <argument><expr><sizeof pos:line="53" pos:column="36">sizeof<argument_list pos:line="53" pos:column="42">(<argument><expr><operator pos:line="53" pos:column="43">*<pos:position pos:line="53" pos:column="44"/></operator><name><name pos:line="53" pos:column="44">dp<pos:position pos:line="53" pos:column="46"/></name><operator pos:line="53" pos:column="46">-&gt;<pos:position pos:line="53" pos:column="51"/></operator><name pos:line="53" pos:column="48">locktoken<pos:position pos:line="53" pos:column="57"/></name></name></expr></argument>)<pos:position pos:line="53" pos:column="58"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="53" pos:column="59"/></argument_list></call></expr>;<pos:position pos:line="53" pos:column="60"/></expr_stmt>
        <expr_stmt><expr><name pos:line="54" pos:column="9">ptr<pos:position pos:line="54" pos:column="12"/></name> <operator pos:line="54" pos:column="13">+=<pos:position pos:line="54" pos:column="15"/></operator> <sizeof pos:line="54" pos:column="16">sizeof<argument_list pos:line="54" pos:column="22">(<argument><expr><operator pos:line="54" pos:column="23">*<pos:position pos:line="54" pos:column="24"/></operator><name><name pos:line="54" pos:column="24">dp<pos:position pos:line="54" pos:column="26"/></name><operator pos:line="54" pos:column="26">-&gt;<pos:position pos:line="54" pos:column="31"/></operator><name pos:line="54" pos:column="28">locktoken<pos:position pos:line="54" pos:column="37"/></name></name></expr></argument>)<pos:position pos:line="54" pos:column="38"/></argument_list></sizeof></expr>;<pos:position pos:line="54" pos:column="39"/></expr_stmt>
        <if pos:line="55" pos:column="9">if <condition pos:line="55" pos:column="12">(<expr><name><name pos:line="55" pos:column="13">dp<pos:position pos:line="55" pos:column="15"/></name><operator pos:line="55" pos:column="15">-&gt;<pos:position pos:line="55" pos:column="20"/></operator><name pos:line="55" pos:column="17">owner<pos:position pos:line="55" pos:column="22"/></name></name> <operator pos:line="55" pos:column="23">==<pos:position pos:line="55" pos:column="25"/></operator> <name pos:line="55" pos:column="26">NULL<pos:position pos:line="55" pos:column="30"/></name></expr>)<pos:position pos:line="55" pos:column="31"/></condition><then pos:line="55" pos:column="31"> <block pos:line="55" pos:column="32">{
            <expr_stmt><expr><operator pos:line="56" pos:column="13">*<pos:position pos:line="56" pos:column="14"/></operator><name pos:line="56" pos:column="14">ptr<pos:position pos:line="56" pos:column="17"/></name><operator pos:line="56" pos:column="17">++<pos:position pos:line="56" pos:column="19"/></operator> <operator pos:line="56" pos:column="20">=<pos:position pos:line="56" pos:column="21"/></operator> <literal type="char" pos:line="56" pos:column="22">'\0'<pos:position pos:line="56" pos:column="26"/></literal></expr>;<pos:position pos:line="56" pos:column="27"/></expr_stmt>
        }<pos:position pos:line="57" pos:column="10"/></block></then>
        <else pos:line="58" pos:column="9">else <block pos:line="58" pos:column="14">{
            <expr_stmt><expr><call><name pos:line="59" pos:column="13">memcpy<pos:position pos:line="59" pos:column="19"/></name><argument_list pos:line="59" pos:column="19">(<argument><expr><name pos:line="59" pos:column="20">ptr<pos:position pos:line="59" pos:column="23"/></name></expr></argument>, <argument><expr><name><name pos:line="59" pos:column="25">dp<pos:position pos:line="59" pos:column="27"/></name><operator pos:line="59" pos:column="27">-&gt;<pos:position pos:line="59" pos:column="32"/></operator><name pos:line="59" pos:column="29">owner<pos:position pos:line="59" pos:column="34"/></name></name></expr></argument>, <argument><expr><call><name pos:line="59" pos:column="36">strlen<pos:position pos:line="59" pos:column="42"/></name><argument_list pos:line="59" pos:column="42">(<argument><expr><name><name pos:line="59" pos:column="43">dp<pos:position pos:line="59" pos:column="45"/></name><operator pos:line="59" pos:column="45">-&gt;<pos:position pos:line="59" pos:column="50"/></operator><name pos:line="59" pos:column="47">owner<pos:position pos:line="59" pos:column="52"/></name></name></expr></argument>)<pos:position pos:line="59" pos:column="53"/></argument_list></call> <operator pos:line="59" pos:column="54">+<pos:position pos:line="59" pos:column="55"/></operator> <literal type="number" pos:line="59" pos:column="56">1<pos:position pos:line="59" pos:column="57"/></literal></expr></argument>)<pos:position pos:line="59" pos:column="58"/></argument_list></call></expr>;<pos:position pos:line="59" pos:column="59"/></expr_stmt>
            <expr_stmt><expr><name pos:line="60" pos:column="13">ptr<pos:position pos:line="60" pos:column="16"/></name> <operator pos:line="60" pos:column="17">+=<pos:position pos:line="60" pos:column="19"/></operator> <call><name pos:line="60" pos:column="20">strlen<pos:position pos:line="60" pos:column="26"/></name><argument_list pos:line="60" pos:column="26">(<argument><expr><name><name pos:line="60" pos:column="27">dp<pos:position pos:line="60" pos:column="29"/></name><operator pos:line="60" pos:column="29">-&gt;<pos:position pos:line="60" pos:column="34"/></operator><name pos:line="60" pos:column="31">owner<pos:position pos:line="60" pos:column="36"/></name></name></expr></argument>)<pos:position pos:line="60" pos:column="37"/></argument_list></call> <operator pos:line="60" pos:column="38">+<pos:position pos:line="60" pos:column="39"/></operator> <literal type="number" pos:line="60" pos:column="40">1<pos:position pos:line="60" pos:column="41"/></literal></expr>;<pos:position pos:line="60" pos:column="42"/></expr_stmt>
        }<pos:position pos:line="61" pos:column="10"/></block></else></if>
        <if pos:line="62" pos:column="9">if <condition pos:line="62" pos:column="12">(<expr><name><name pos:line="62" pos:column="13">dp<pos:position pos:line="62" pos:column="15"/></name><operator pos:line="62" pos:column="15">-&gt;<pos:position pos:line="62" pos:column="20"/></operator><name pos:line="62" pos:column="17">auth_user<pos:position pos:line="62" pos:column="26"/></name></name> <operator pos:line="62" pos:column="27">==<pos:position pos:line="62" pos:column="29"/></operator> <name pos:line="62" pos:column="30">NULL<pos:position pos:line="62" pos:column="34"/></name></expr>)<pos:position pos:line="62" pos:column="35"/></condition><then pos:line="62" pos:column="35"> <block pos:line="62" pos:column="36">{
            <expr_stmt><expr><operator pos:line="63" pos:column="13">*<pos:position pos:line="63" pos:column="14"/></operator><name pos:line="63" pos:column="14">ptr<pos:position pos:line="63" pos:column="17"/></name><operator pos:line="63" pos:column="17">++<pos:position pos:line="63" pos:column="19"/></operator> <operator pos:line="63" pos:column="20">=<pos:position pos:line="63" pos:column="21"/></operator> <literal type="char" pos:line="63" pos:column="22">'\0'<pos:position pos:line="63" pos:column="26"/></literal></expr>;<pos:position pos:line="63" pos:column="27"/></expr_stmt>
        }<pos:position pos:line="64" pos:column="10"/></block></then>
        <else pos:line="65" pos:column="9">else <block pos:line="65" pos:column="14">{
            <expr_stmt><expr><call><name pos:line="66" pos:column="13">memcpy<pos:position pos:line="66" pos:column="19"/></name><argument_list pos:line="66" pos:column="19">(<argument><expr><name pos:line="66" pos:column="20">ptr<pos:position pos:line="66" pos:column="23"/></name></expr></argument>, <argument><expr><name><name pos:line="66" pos:column="25">dp<pos:position pos:line="66" pos:column="27"/></name><operator pos:line="66" pos:column="27">-&gt;<pos:position pos:line="66" pos:column="32"/></operator><name pos:line="66" pos:column="29">auth_user<pos:position pos:line="66" pos:column="38"/></name></name></expr></argument>, <argument><expr><call><name pos:line="66" pos:column="40">strlen<pos:position pos:line="66" pos:column="46"/></name><argument_list pos:line="66" pos:column="46">(<argument><expr><name><name pos:line="66" pos:column="47">dp<pos:position pos:line="66" pos:column="49"/></name><operator pos:line="66" pos:column="49">-&gt;<pos:position pos:line="66" pos:column="54"/></operator><name pos:line="66" pos:column="51">auth_user<pos:position pos:line="66" pos:column="60"/></name></name></expr></argument>)<pos:position pos:line="66" pos:column="61"/></argument_list></call> <operator pos:line="66" pos:column="62">+<pos:position pos:line="66" pos:column="63"/></operator> <literal type="number" pos:line="66" pos:column="64">1<pos:position pos:line="66" pos:column="65"/></literal></expr></argument>)<pos:position pos:line="66" pos:column="66"/></argument_list></call></expr>;<pos:position pos:line="66" pos:column="67"/></expr_stmt>
            <expr_stmt><expr><name pos:line="67" pos:column="13">ptr<pos:position pos:line="67" pos:column="16"/></name> <operator pos:line="67" pos:column="17">+=<pos:position pos:line="67" pos:column="19"/></operator> <call><name pos:line="67" pos:column="20">strlen<pos:position pos:line="67" pos:column="26"/></name><argument_list pos:line="67" pos:column="26">(<argument><expr><name><name pos:line="67" pos:column="27">dp<pos:position pos:line="67" pos:column="29"/></name><operator pos:line="67" pos:column="29">-&gt;<pos:position pos:line="67" pos:column="34"/></operator><name pos:line="67" pos:column="31">auth_user<pos:position pos:line="67" pos:column="40"/></name></name></expr></argument>)<pos:position pos:line="67" pos:column="41"/></argument_list></call> <operator pos:line="67" pos:column="42">+<pos:position pos:line="67" pos:column="43"/></operator> <literal type="number" pos:line="67" pos:column="44">1<pos:position pos:line="67" pos:column="45"/></literal></expr>;<pos:position pos:line="67" pos:column="46"/></expr_stmt>
        }<pos:position pos:line="68" pos:column="10"/></block></else></if>

        <expr_stmt><expr><name pos:line="70" pos:column="9">dp<pos:position pos:line="70" pos:column="11"/></name> <operator pos:line="70" pos:column="12">=<pos:position pos:line="70" pos:column="13"/></operator> <name><name pos:line="70" pos:column="14">dp<pos:position pos:line="70" pos:column="16"/></name><operator pos:line="70" pos:column="16">-&gt;<pos:position pos:line="70" pos:column="21"/></operator><name pos:line="70" pos:column="18">next<pos:position pos:line="70" pos:column="22"/></name></name></expr>;<pos:position pos:line="70" pos:column="23"/></expr_stmt>
    }<pos:position pos:line="71" pos:column="6"/></block></while>

    <while pos:line="73" pos:column="5">while<condition pos:line="73" pos:column="10">(<expr><name pos:line="73" pos:column="11">ip<pos:position pos:line="73" pos:column="13"/></name></expr>)<pos:position pos:line="73" pos:column="14"/></condition> <block pos:line="73" pos:column="15">{
        <expr_stmt><expr><operator pos:line="74" pos:column="9">*<pos:position pos:line="74" pos:column="10"/></operator><name pos:line="74" pos:column="10">ptr<pos:position pos:line="74" pos:column="13"/></name><operator pos:line="74" pos:column="13">++<pos:position pos:line="74" pos:column="15"/></operator> <operator pos:line="74" pos:column="16">=<pos:position pos:line="74" pos:column="17"/></operator> <name pos:line="74" pos:column="18">DAV_LOCK_INDIRECT<pos:position pos:line="74" pos:column="35"/></name></expr>;<pos:position pos:line="74" pos:column="36"/></expr_stmt>   <comment type="block" pos:line="74" pos:column="39">/* Indirect lock prefix */</comment>
        <expr_stmt><expr><call><name pos:line="75" pos:column="9">memcpy<pos:position pos:line="75" pos:column="15"/></name><argument_list pos:line="75" pos:column="15">(<argument><expr><name pos:line="75" pos:column="16">ptr<pos:position pos:line="75" pos:column="19"/></name></expr></argument>, <argument><expr><name><name pos:line="75" pos:column="21">ip<pos:position pos:line="75" pos:column="23"/></name><operator pos:line="75" pos:column="23">-&gt;<pos:position pos:line="75" pos:column="28"/></operator><name pos:line="75" pos:column="25">locktoken<pos:position pos:line="75" pos:column="34"/></name></name></expr></argument>, <argument><expr><sizeof pos:line="75" pos:column="36">sizeof<argument_list pos:line="75" pos:column="42">(<argument><expr><operator pos:line="75" pos:column="43">*<pos:position pos:line="75" pos:column="44"/></operator><name><name pos:line="75" pos:column="44">ip<pos:position pos:line="75" pos:column="46"/></name><operator pos:line="75" pos:column="46">-&gt;<pos:position pos:line="75" pos:column="51"/></operator><name pos:line="75" pos:column="48">locktoken<pos:position pos:line="75" pos:column="57"/></name></name></expr></argument>)<pos:position pos:line="75" pos:column="58"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="75" pos:column="59"/></argument_list></call></expr>;<pos:position pos:line="75" pos:column="60"/></expr_stmt>   <comment type="block" pos:line="75" pos:column="63">/* Locktoken */</comment>
        <expr_stmt><expr><name pos:line="76" pos:column="9">ptr<pos:position pos:line="76" pos:column="12"/></name> <operator pos:line="76" pos:column="13">+=<pos:position pos:line="76" pos:column="15"/></operator> <sizeof pos:line="76" pos:column="16">sizeof<argument_list pos:line="76" pos:column="22">(<argument><expr><operator pos:line="76" pos:column="23">*<pos:position pos:line="76" pos:column="24"/></operator><name><name pos:line="76" pos:column="24">ip<pos:position pos:line="76" pos:column="26"/></name><operator pos:line="76" pos:column="26">-&gt;<pos:position pos:line="76" pos:column="31"/></operator><name pos:line="76" pos:column="28">locktoken<pos:position pos:line="76" pos:column="37"/></name></name></expr></argument>)<pos:position pos:line="76" pos:column="38"/></argument_list></sizeof></expr>;<pos:position pos:line="76" pos:column="39"/></expr_stmt>
        <expr_stmt><expr><call><name pos:line="77" pos:column="9">memcpy<pos:position pos:line="77" pos:column="15"/></name><argument_list pos:line="77" pos:column="15">(<argument><expr><name pos:line="77" pos:column="16">ptr<pos:position pos:line="77" pos:column="19"/></name></expr></argument>, <argument><expr><operator pos:line="77" pos:column="21">&amp;<pos:position pos:line="77" pos:column="26"/></operator><name><name pos:line="77" pos:column="22">ip<pos:position pos:line="77" pos:column="24"/></name><operator pos:line="77" pos:column="24">-&gt;<pos:position pos:line="77" pos:column="29"/></operator><name pos:line="77" pos:column="26">timeout<pos:position pos:line="77" pos:column="33"/></name></name></expr></argument>, <argument><expr><sizeof pos:line="77" pos:column="35">sizeof<argument_list pos:line="77" pos:column="41">(<argument><expr><name><name pos:line="77" pos:column="42">ip<pos:position pos:line="77" pos:column="44"/></name><operator pos:line="77" pos:column="44">-&gt;<pos:position pos:line="77" pos:column="49"/></operator><name pos:line="77" pos:column="46">timeout<pos:position pos:line="77" pos:column="53"/></name></name></expr></argument>)<pos:position pos:line="77" pos:column="54"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="77" pos:column="55"/></argument_list></call></expr>;<pos:position pos:line="77" pos:column="56"/></expr_stmt>   <comment type="block" pos:line="77" pos:column="59">/* Expire time */</comment>
        <expr_stmt><expr><name pos:line="78" pos:column="9">ptr<pos:position pos:line="78" pos:column="12"/></name> <operator pos:line="78" pos:column="13">+=<pos:position pos:line="78" pos:column="15"/></operator> <sizeof pos:line="78" pos:column="16">sizeof<argument_list pos:line="78" pos:column="22">(<argument><expr><name><name pos:line="78" pos:column="23">ip<pos:position pos:line="78" pos:column="25"/></name><operator pos:line="78" pos:column="25">-&gt;<pos:position pos:line="78" pos:column="30"/></operator><name pos:line="78" pos:column="27">timeout<pos:position pos:line="78" pos:column="34"/></name></name></expr></argument>)<pos:position pos:line="78" pos:column="35"/></argument_list></sizeof></expr>;<pos:position pos:line="78" pos:column="36"/></expr_stmt>
        <expr_stmt><expr><call><name pos:line="79" pos:column="9">memcpy<pos:position pos:line="79" pos:column="15"/></name><argument_list pos:line="79" pos:column="15">(<argument><expr><name pos:line="79" pos:column="16">ptr<pos:position pos:line="79" pos:column="19"/></name></expr></argument>, <argument><expr><operator pos:line="79" pos:column="21">&amp;<pos:position pos:line="79" pos:column="26"/></operator><name><name pos:line="79" pos:column="22">ip<pos:position pos:line="79" pos:column="24"/></name><operator pos:line="79" pos:column="24">-&gt;<pos:position pos:line="79" pos:column="29"/></operator><name pos:line="79" pos:column="26">key<pos:position pos:line="79" pos:column="29"/></name><operator pos:line="79" pos:column="29">.<pos:position pos:line="79" pos:column="30"/></operator><name pos:line="79" pos:column="30">dsize<pos:position pos:line="79" pos:column="35"/></name></name></expr></argument>, <argument><expr><sizeof pos:line="79" pos:column="37">sizeof<argument_list pos:line="79" pos:column="43">(<argument><expr><name><name pos:line="79" pos:column="44">ip<pos:position pos:line="79" pos:column="46"/></name><operator pos:line="79" pos:column="46">-&gt;<pos:position pos:line="79" pos:column="51"/></operator><name pos:line="79" pos:column="48">key<pos:position pos:line="79" pos:column="51"/></name><operator pos:line="79" pos:column="51">.<pos:position pos:line="79" pos:column="52"/></operator><name pos:line="79" pos:column="52">dsize<pos:position pos:line="79" pos:column="57"/></name></name></expr></argument>)<pos:position pos:line="79" pos:column="58"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="79" pos:column="59"/></argument_list></call></expr>;<pos:position pos:line="79" pos:column="60"/></expr_stmt>   <comment type="block" pos:line="79" pos:column="63">/* Size of key */</comment>
        <expr_stmt><expr><name pos:line="80" pos:column="9">ptr<pos:position pos:line="80" pos:column="12"/></name> <operator pos:line="80" pos:column="13">+=<pos:position pos:line="80" pos:column="15"/></operator> <sizeof pos:line="80" pos:column="16">sizeof<argument_list pos:line="80" pos:column="22">(<argument><expr><name><name pos:line="80" pos:column="23">ip<pos:position pos:line="80" pos:column="25"/></name><operator pos:line="80" pos:column="25">-&gt;<pos:position pos:line="80" pos:column="30"/></operator><name pos:line="80" pos:column="27">key<pos:position pos:line="80" pos:column="30"/></name><operator pos:line="80" pos:column="30">.<pos:position pos:line="80" pos:column="31"/></operator><name pos:line="80" pos:column="31">dsize<pos:position pos:line="80" pos:column="36"/></name></name></expr></argument>)<pos:position pos:line="80" pos:column="37"/></argument_list></sizeof></expr>;<pos:position pos:line="80" pos:column="38"/></expr_stmt>
        <expr_stmt><expr><call><name pos:line="81" pos:column="9">memcpy<pos:position pos:line="81" pos:column="15"/></name><argument_list pos:line="81" pos:column="15">(<argument><expr><name pos:line="81" pos:column="16">ptr<pos:position pos:line="81" pos:column="19"/></name></expr></argument>, <argument><expr><name><name pos:line="81" pos:column="21">ip<pos:position pos:line="81" pos:column="23"/></name><operator pos:line="81" pos:column="23">-&gt;<pos:position pos:line="81" pos:column="28"/></operator><name pos:line="81" pos:column="25">key<pos:position pos:line="81" pos:column="28"/></name><operator pos:line="81" pos:column="28">.<pos:position pos:line="81" pos:column="29"/></operator><name pos:line="81" pos:column="29">dptr<pos:position pos:line="81" pos:column="33"/></name></name></expr></argument>, <argument><expr><name><name pos:line="81" pos:column="35">ip<pos:position pos:line="81" pos:column="37"/></name><operator pos:line="81" pos:column="37">-&gt;<pos:position pos:line="81" pos:column="42"/></operator><name pos:line="81" pos:column="39">key<pos:position pos:line="81" pos:column="42"/></name><operator pos:line="81" pos:column="42">.<pos:position pos:line="81" pos:column="43"/></operator><name pos:line="81" pos:column="43">dsize<pos:position pos:line="81" pos:column="48"/></name></name></expr></argument>)<pos:position pos:line="81" pos:column="49"/></argument_list></call></expr>;<pos:position pos:line="81" pos:column="50"/></expr_stmt>   <comment type="block" pos:line="81" pos:column="53">/* Key data */</comment>
        <expr_stmt><expr><name pos:line="82" pos:column="9">ptr<pos:position pos:line="82" pos:column="12"/></name> <operator pos:line="82" pos:column="13">+=<pos:position pos:line="82" pos:column="15"/></operator> <name><name pos:line="82" pos:column="16">ip<pos:position pos:line="82" pos:column="18"/></name><operator pos:line="82" pos:column="18">-&gt;<pos:position pos:line="82" pos:column="23"/></operator><name pos:line="82" pos:column="20">key<pos:position pos:line="82" pos:column="23"/></name><operator pos:line="82" pos:column="23">.<pos:position pos:line="82" pos:column="24"/></operator><name pos:line="82" pos:column="24">dsize<pos:position pos:line="82" pos:column="29"/></name></name></expr>;<pos:position pos:line="82" pos:column="30"/></expr_stmt>
        <expr_stmt><expr><name pos:line="83" pos:column="9">ip<pos:position pos:line="83" pos:column="11"/></name> <operator pos:line="83" pos:column="12">=<pos:position pos:line="83" pos:column="13"/></operator> <name><name pos:line="83" pos:column="14">ip<pos:position pos:line="83" pos:column="16"/></name><operator pos:line="83" pos:column="16">-&gt;<pos:position pos:line="83" pos:column="21"/></operator><name pos:line="83" pos:column="18">next<pos:position pos:line="83" pos:column="22"/></name></name></expr>;<pos:position pos:line="83" pos:column="23"/></expr_stmt>
    }<pos:position pos:line="84" pos:column="6"/></block></while>

    <if pos:line="86" pos:column="5">if <condition pos:line="86" pos:column="8">(<expr><operator pos:line="86" pos:column="9">(<pos:position pos:line="86" pos:column="10"/></operator><name pos:line="86" pos:column="10">err<pos:position pos:line="86" pos:column="13"/></name> <operator pos:line="86" pos:column="14">=<pos:position pos:line="86" pos:column="15"/></operator> <call><name pos:line="86" pos:column="16">dav_dbm_store<pos:position pos:line="86" pos:column="29"/></name><argument_list pos:line="86" pos:column="29">(<argument><expr><name><name pos:line="86" pos:column="30">lockdb<pos:position pos:line="86" pos:column="36"/></name><operator pos:line="86" pos:column="36">-&gt;<pos:position pos:line="86" pos:column="41"/></operator><name pos:line="86" pos:column="38">info<pos:position pos:line="86" pos:column="42"/></name><operator pos:line="86" pos:column="42">-&gt;<pos:position pos:line="86" pos:column="47"/></operator><name pos:line="86" pos:column="44">db<pos:position pos:line="86" pos:column="46"/></name></name></expr></argument>, <argument><expr><name pos:line="86" pos:column="48">key<pos:position pos:line="86" pos:column="51"/></name></expr></argument>, <argument><expr><name pos:line="86" pos:column="53">val<pos:position pos:line="86" pos:column="56"/></name></expr></argument>)<pos:position pos:line="86" pos:column="57"/></argument_list></call><operator pos:line="86" pos:column="57">)<pos:position pos:line="86" pos:column="58"/></operator> <operator pos:line="86" pos:column="59">!=<pos:position pos:line="86" pos:column="61"/></operator> <name pos:line="86" pos:column="62">NULL<pos:position pos:line="86" pos:column="66"/></name></expr>)<pos:position pos:line="86" pos:column="67"/></condition><then pos:line="86" pos:column="67"> <block pos:line="86" pos:column="68">{
        <comment type="block" pos:line="87" pos:column="9">/* ### more details? add an error_id? */</comment>
        <return pos:line="88" pos:column="9">return <expr><call><name pos:line="88" pos:column="16">dav_push_error<pos:position pos:line="88" pos:column="30"/></name><argument_list pos:line="88" pos:column="30">(<argument><expr><name><name pos:line="88" pos:column="31">lockdb<pos:position pos:line="88" pos:column="37"/></name><operator pos:line="88" pos:column="37">-&gt;<pos:position pos:line="88" pos:column="42"/></operator><name pos:line="88" pos:column="39">info<pos:position pos:line="88" pos:column="43"/></name><operator pos:line="88" pos:column="43">-&gt;<pos:position pos:line="88" pos:column="48"/></operator><name pos:line="88" pos:column="45">pool<pos:position pos:line="88" pos:column="49"/></name></name></expr></argument>,
                              <argument><expr><name pos:line="89" pos:column="31">HTTP_INTERNAL_SERVER_ERROR<pos:position pos:line="89" pos:column="57"/></name></expr></argument>,
                              <argument><expr><name pos:line="90" pos:column="31">DAV_ERR_LOCK_SAVE_LOCK<pos:position pos:line="90" pos:column="53"/></name></expr></argument>,
                              <argument><expr><literal type="string" pos:line="91" pos:column="31">"Could not save lock information."<pos:position pos:line="91" pos:column="65"/></literal></expr></argument>,
                              <argument><expr><name pos:line="92" pos:column="31">err<pos:position pos:line="92" pos:column="34"/></name></expr></argument>)<pos:position pos:line="92" pos:column="35"/></argument_list></call></expr>;<pos:position pos:line="92" pos:column="36"/></return>
    }<pos:position pos:line="93" pos:column="6"/></block></then></if>

    <return pos:line="95" pos:column="5">return <expr><name pos:line="95" pos:column="12">NULL<pos:position pos:line="95" pos:column="16"/></name></expr>;<pos:position pos:line="95" pos:column="17"/></return>
}<pos:position pos:line="96" pos:column="2"/></block></function></unit>

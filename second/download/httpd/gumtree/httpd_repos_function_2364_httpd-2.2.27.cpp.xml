<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/httpd/gumtree/httpd_repos_function_2364_httpd-2.2.27.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">void<pos:position pos:line="1" pos:column="12"/></name></type> <name pos:line="1" pos:column="13">winnt_hooks<pos:position pos:line="1" pos:column="24"/></name><parameter_list pos:line="1" pos:column="24">(<parameter><decl><type><name pos:line="1" pos:column="25">apr_pool_t<pos:position pos:line="1" pos:column="35"/></name> <modifier pos:line="1" pos:column="36">*<pos:position pos:line="1" pos:column="37"/></modifier></type><name pos:line="1" pos:column="37">p<pos:position pos:line="1" pos:column="38"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="39"/></parameter_list>
<block pos:line="2" pos:column="1">{
    <comment type="block" pos:line="3" pos:column="5">/* The prefork open_logs phase must run before the core's, or stderr
     * will be redirected to a file, and the messages won't print to the
     * console.
     */</comment>
    <decl_stmt><decl><specifier pos:line="7" pos:column="5">static<pos:position pos:line="7" pos:column="11"/></specifier> <type><specifier pos:line="7" pos:column="12">const<pos:position pos:line="7" pos:column="17"/></specifier> <name pos:line="7" pos:column="18">char<pos:position pos:line="7" pos:column="22"/></name> <modifier pos:line="7" pos:column="23">*<pos:position pos:line="7" pos:column="24"/></modifier><specifier pos:line="7" pos:column="24">const<pos:position pos:line="7" pos:column="29"/></specifier></type> <name><name pos:line="7" pos:column="30">aszSucc<pos:position pos:line="7" pos:column="37"/></name><index pos:line="7" pos:column="37">[]<pos:position pos:line="7" pos:column="39"/></index></name> <init pos:line="7" pos:column="40">= <expr><block pos:line="7" pos:column="42">{<expr><literal type="string" pos:line="7" pos:column="43">"core.c"<pos:position pos:line="7" pos:column="51"/></literal></expr>, <expr><name pos:line="7" pos:column="53">NULL<pos:position pos:line="7" pos:column="57"/></name></expr>}<pos:position pos:line="7" pos:column="58"/></block></expr></init></decl>;<pos:position pos:line="7" pos:column="59"/></decl_stmt>

    <expr_stmt><expr><call><name pos:line="9" pos:column="5">ap_hook_pre_config<pos:position pos:line="9" pos:column="23"/></name><argument_list pos:line="9" pos:column="23">(<argument><expr><name pos:line="9" pos:column="24">winnt_pre_config<pos:position pos:line="9" pos:column="40"/></name></expr></argument>, <argument><expr><name pos:line="9" pos:column="42">NULL<pos:position pos:line="9" pos:column="46"/></name></expr></argument>, <argument><expr><name pos:line="9" pos:column="48">NULL<pos:position pos:line="9" pos:column="52"/></name></expr></argument>, <argument><expr><name pos:line="9" pos:column="54">APR_HOOK_MIDDLE<pos:position pos:line="9" pos:column="69"/></name></expr></argument>)<pos:position pos:line="9" pos:column="70"/></argument_list></call></expr>;<pos:position pos:line="9" pos:column="71"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="10" pos:column="5">ap_hook_post_config<pos:position pos:line="10" pos:column="24"/></name><argument_list pos:line="10" pos:column="24">(<argument><expr><name pos:line="10" pos:column="25">winnt_post_config<pos:position pos:line="10" pos:column="42"/></name></expr></argument>, <argument><expr><name pos:line="10" pos:column="44">NULL<pos:position pos:line="10" pos:column="48"/></name></expr></argument>, <argument><expr><name pos:line="10" pos:column="50">NULL<pos:position pos:line="10" pos:column="54"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="10" pos:column="56">0<pos:position pos:line="10" pos:column="57"/></literal></expr></argument>)<pos:position pos:line="10" pos:column="58"/></argument_list></call></expr>;<pos:position pos:line="10" pos:column="59"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="11" pos:column="5">ap_hook_child_init<pos:position pos:line="11" pos:column="23"/></name><argument_list pos:line="11" pos:column="23">(<argument><expr><name pos:line="11" pos:column="24">winnt_child_init<pos:position pos:line="11" pos:column="40"/></name></expr></argument>, <argument><expr><name pos:line="11" pos:column="42">NULL<pos:position pos:line="11" pos:column="46"/></name></expr></argument>, <argument><expr><name pos:line="11" pos:column="48">NULL<pos:position pos:line="11" pos:column="52"/></name></expr></argument>, <argument><expr><name pos:line="11" pos:column="54">APR_HOOK_MIDDLE<pos:position pos:line="11" pos:column="69"/></name></expr></argument>)<pos:position pos:line="11" pos:column="70"/></argument_list></call></expr>;<pos:position pos:line="11" pos:column="71"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="12" pos:column="5">ap_hook_open_logs<pos:position pos:line="12" pos:column="22"/></name><argument_list pos:line="12" pos:column="22">(<argument><expr><name pos:line="12" pos:column="23">winnt_open_logs<pos:position pos:line="12" pos:column="38"/></name></expr></argument>, <argument><expr><name pos:line="12" pos:column="40">NULL<pos:position pos:line="12" pos:column="44"/></name></expr></argument>, <argument><expr><name pos:line="12" pos:column="46">aszSucc<pos:position pos:line="12" pos:column="53"/></name></expr></argument>, <argument><expr><name pos:line="12" pos:column="55">APR_HOOK_MIDDLE<pos:position pos:line="12" pos:column="70"/></name></expr></argument>)<pos:position pos:line="12" pos:column="71"/></argument_list></call></expr>;<pos:position pos:line="12" pos:column="72"/></expr_stmt>
}<pos:position pos:line="13" pos:column="2"/></block></function></unit>

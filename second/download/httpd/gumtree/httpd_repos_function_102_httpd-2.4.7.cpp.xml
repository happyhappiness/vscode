<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/httpd/gumtree/httpd_repos_function_102_httpd-2.4.7.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">int<pos:position pos:line="1" pos:column="11"/></name></type> <name pos:line="1" pos:column="12">get_line<pos:position pos:line="1" pos:column="20"/></name><parameter_list pos:line="1" pos:column="20">(<parameter><decl><type><name pos:line="1" pos:column="21">char<pos:position pos:line="1" pos:column="25"/></name> <modifier pos:line="1" pos:column="26">*<pos:position pos:line="1" pos:column="27"/></modifier></type><name pos:line="1" pos:column="27">s<pos:position pos:line="1" pos:column="28"/></name></decl></parameter>, <parameter><decl><type><name pos:line="1" pos:column="30">int<pos:position pos:line="1" pos:column="33"/></name></type> <name pos:line="1" pos:column="34">n<pos:position pos:line="1" pos:column="35"/></name></decl></parameter>, <parameter><decl><type><name pos:line="1" pos:column="37">apr_file_t<pos:position pos:line="1" pos:column="47"/></name> <modifier pos:line="1" pos:column="48">*<pos:position pos:line="1" pos:column="49"/></modifier></type><name pos:line="1" pos:column="49">f<pos:position pos:line="1" pos:column="50"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="51"/></parameter_list>
<block pos:line="2" pos:column="1">{
    <decl_stmt><decl><type><specifier pos:line="3" pos:column="5">register<pos:position pos:line="3" pos:column="13"/></specifier> <name pos:line="3" pos:column="14">int<pos:position pos:line="3" pos:column="17"/></name></type> <name pos:line="3" pos:column="18">i<pos:position pos:line="3" pos:column="19"/></name> <init pos:line="3" pos:column="20">= <expr><literal type="number" pos:line="3" pos:column="22">0<pos:position pos:line="3" pos:column="23"/></literal></expr></init></decl>;<pos:position pos:line="3" pos:column="24"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="4" pos:column="5">char<pos:position pos:line="4" pos:column="9"/></name></type> <name pos:line="4" pos:column="10">ch<pos:position pos:line="4" pos:column="12"/></name></decl>;<pos:position pos:line="4" pos:column="13"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="5" pos:column="5">apr_status_t<pos:position pos:line="5" pos:column="17"/></name></type> <name pos:line="5" pos:column="18">rv<pos:position pos:line="5" pos:column="20"/></name> <init pos:line="5" pos:column="21">= <expr><name pos:line="5" pos:column="23">APR_EINVAL<pos:position pos:line="5" pos:column="33"/></name></expr></init></decl>;<pos:position pos:line="5" pos:column="34"/></decl_stmt>

    <comment type="block" pos:line="7" pos:column="5">/* we need 2 remaining bytes in buffer */</comment>
    <while pos:line="8" pos:column="5">while <condition pos:line="8" pos:column="11">(<expr><name pos:line="8" pos:column="12">i<pos:position pos:line="8" pos:column="13"/></name> <operator pos:line="8" pos:column="14">&lt;<pos:position pos:line="8" pos:column="18"/></operator> <operator pos:line="8" pos:column="16">(<pos:position pos:line="8" pos:column="17"/></operator><name pos:line="8" pos:column="17">n<pos:position pos:line="8" pos:column="18"/></name> <operator pos:line="8" pos:column="19">-<pos:position pos:line="8" pos:column="20"/></operator> <literal type="number" pos:line="8" pos:column="21">2<pos:position pos:line="8" pos:column="22"/></literal><operator pos:line="8" pos:column="22">)<pos:position pos:line="8" pos:column="23"/></operator> <operator pos:line="8" pos:column="24">&amp;&amp;<pos:position pos:line="8" pos:column="34"/></operator>
           <operator pos:line="9" pos:column="12">(<pos:position pos:line="9" pos:column="13"/></operator><operator pos:line="9" pos:column="13">(<pos:position pos:line="9" pos:column="14"/></operator><name pos:line="9" pos:column="14">rv<pos:position pos:line="9" pos:column="16"/></name> <operator pos:line="9" pos:column="17">=<pos:position pos:line="9" pos:column="18"/></operator> <call><name pos:line="9" pos:column="19">apr_file_getc<pos:position pos:line="9" pos:column="32"/></name><argument_list pos:line="9" pos:column="32">(<argument><expr><operator pos:line="9" pos:column="33">&amp;<pos:position pos:line="9" pos:column="38"/></operator><name pos:line="9" pos:column="34">ch<pos:position pos:line="9" pos:column="36"/></name></expr></argument>, <argument><expr><name pos:line="9" pos:column="38">f<pos:position pos:line="9" pos:column="39"/></name></expr></argument>)<pos:position pos:line="9" pos:column="40"/></argument_list></call><operator pos:line="9" pos:column="40">)<pos:position pos:line="9" pos:column="41"/></operator> <operator pos:line="9" pos:column="42">==<pos:position pos:line="9" pos:column="44"/></operator> <name pos:line="9" pos:column="45">APR_SUCCESS<pos:position pos:line="9" pos:column="56"/></name><operator pos:line="9" pos:column="56">)<pos:position pos:line="9" pos:column="57"/></operator> <operator pos:line="9" pos:column="58">&amp;&amp;<pos:position pos:line="9" pos:column="68"/></operator> <operator pos:line="9" pos:column="61">(<pos:position pos:line="9" pos:column="62"/></operator><name pos:line="9" pos:column="62">ch<pos:position pos:line="9" pos:column="64"/></name> <operator pos:line="9" pos:column="65">!=<pos:position pos:line="9" pos:column="67"/></operator> <literal type="char" pos:line="9" pos:column="68">'\n'<pos:position pos:line="9" pos:column="72"/></literal><operator pos:line="9" pos:column="72">)<pos:position pos:line="9" pos:column="73"/></operator></expr>)<pos:position pos:line="9" pos:column="74"/></condition> <block pos:line="9" pos:column="75">{
        <expr_stmt><expr><name><name pos:line="10" pos:column="9">s<pos:position pos:line="10" pos:column="10"/></name><index pos:line="10" pos:column="10">[<expr><name pos:line="10" pos:column="11">i<pos:position pos:line="10" pos:column="12"/></name><operator pos:line="10" pos:column="12">++<pos:position pos:line="10" pos:column="14"/></operator></expr>]<pos:position pos:line="10" pos:column="15"/></index></name> <operator pos:line="10" pos:column="16">=<pos:position pos:line="10" pos:column="17"/></operator> <name pos:line="10" pos:column="18">ch<pos:position pos:line="10" pos:column="20"/></name></expr>;<pos:position pos:line="10" pos:column="21"/></expr_stmt>
    }<pos:position pos:line="11" pos:column="6"/></block></while>
    <comment type="block" pos:line="12" pos:column="5">/* First remaining byte potentially used here */</comment>
    <if pos:line="13" pos:column="5">if <condition pos:line="13" pos:column="8">(<expr><name pos:line="13" pos:column="9">ch<pos:position pos:line="13" pos:column="11"/></name> <operator pos:line="13" pos:column="12">==<pos:position pos:line="13" pos:column="14"/></operator> <literal type="char" pos:line="13" pos:column="15">'\n'<pos:position pos:line="13" pos:column="19"/></literal></expr>)<pos:position pos:line="13" pos:column="20"/></condition><then pos:line="13" pos:column="20">
        <block type="pseudo"><expr_stmt><expr><name><name pos:line="14" pos:column="9">s<pos:position pos:line="14" pos:column="10"/></name><index pos:line="14" pos:column="10">[<expr><name pos:line="14" pos:column="11">i<pos:position pos:line="14" pos:column="12"/></name><operator pos:line="14" pos:column="12">++<pos:position pos:line="14" pos:column="14"/></operator></expr>]<pos:position pos:line="14" pos:column="15"/></index></name> <operator pos:line="14" pos:column="16">=<pos:position pos:line="14" pos:column="17"/></operator> <name pos:line="14" pos:column="18">ch<pos:position pos:line="14" pos:column="20"/></name></expr>;<pos:position pos:line="14" pos:column="21"/></expr_stmt></block></then></if>
    <comment type="block" pos:line="15" pos:column="5">/* Second remaining byte used here */</comment>
    <expr_stmt><expr><name><name pos:line="16" pos:column="5">s<pos:position pos:line="16" pos:column="6"/></name><index pos:line="16" pos:column="6">[<expr><name pos:line="16" pos:column="7">i<pos:position pos:line="16" pos:column="8"/></name></expr>]<pos:position pos:line="16" pos:column="9"/></index></name> <operator pos:line="16" pos:column="10">=<pos:position pos:line="16" pos:column="11"/></operator> <literal type="char" pos:line="16" pos:column="12">'\0'<pos:position pos:line="16" pos:column="16"/></literal></expr>;<pos:position pos:line="16" pos:column="17"/></expr_stmt>

    <if pos:line="18" pos:column="5">if <condition pos:line="18" pos:column="8">(<expr><name pos:line="18" pos:column="9">rv<pos:position pos:line="18" pos:column="11"/></name> <operator pos:line="18" pos:column="12">!=<pos:position pos:line="18" pos:column="14"/></operator> <name pos:line="18" pos:column="15">APR_SUCCESS<pos:position pos:line="18" pos:column="26"/></name></expr>)<pos:position pos:line="18" pos:column="27"/></condition><then pos:line="18" pos:column="27">
        <block type="pseudo"><return pos:line="19" pos:column="9">return <expr><literal type="number" pos:line="19" pos:column="16">1<pos:position pos:line="19" pos:column="17"/></literal></expr>;<pos:position pos:line="19" pos:column="18"/></return></block></then></if>

    <return pos:line="21" pos:column="5">return <expr><literal type="number" pos:line="21" pos:column="12">0<pos:position pos:line="21" pos:column="13"/></literal></expr>;<pos:position pos:line="21" pos:column="14"/></return>
}<pos:position pos:line="22" pos:column="2"/></block></function></unit>

<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/httpd/gumtree/httpd_repos_function_3216_httpd-2.2.34.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name><name pos:line="1" pos:column="8">enum<pos:position pos:line="1" pos:column="12"/></name> <name pos:line="1" pos:column="13">XML_Error<pos:position pos:line="1" pos:column="22"/></name></name> <name pos:line="1" pos:column="23">PTRCALL<pos:position pos:line="1" pos:column="30"/></name></type>
<name pos:line="2" pos:column="1">externalParEntInitProcessor<pos:position pos:line="2" pos:column="28"/></name><parameter_list pos:line="2" pos:column="28">(<parameter><decl><type><name pos:line="2" pos:column="29">XML_Parser<pos:position pos:line="2" pos:column="39"/></name></type> <name pos:line="2" pos:column="40">parser<pos:position pos:line="2" pos:column="46"/></name></decl></parameter>,
                            <parameter><decl><type><specifier pos:line="3" pos:column="29">const<pos:position pos:line="3" pos:column="34"/></specifier> <name pos:line="3" pos:column="35">char<pos:position pos:line="3" pos:column="39"/></name> <modifier pos:line="3" pos:column="40">*<pos:position pos:line="3" pos:column="41"/></modifier></type><name pos:line="3" pos:column="41">s<pos:position pos:line="3" pos:column="42"/></name></decl></parameter>,
                            <parameter><decl><type><specifier pos:line="4" pos:column="29">const<pos:position pos:line="4" pos:column="34"/></specifier> <name pos:line="4" pos:column="35">char<pos:position pos:line="4" pos:column="39"/></name> <modifier pos:line="4" pos:column="40">*<pos:position pos:line="4" pos:column="41"/></modifier></type><name pos:line="4" pos:column="41">end<pos:position pos:line="4" pos:column="44"/></name></decl></parameter>,
                            <parameter><decl><type><specifier pos:line="5" pos:column="29">const<pos:position pos:line="5" pos:column="34"/></specifier> <name pos:line="5" pos:column="35">char<pos:position pos:line="5" pos:column="39"/></name> <modifier pos:line="5" pos:column="40">*<pos:position pos:line="5" pos:column="41"/></modifier><modifier pos:line="5" pos:column="41">*<pos:position pos:line="5" pos:column="42"/></modifier></type><name pos:line="5" pos:column="42">nextPtr<pos:position pos:line="5" pos:column="49"/></name></decl></parameter>)<pos:position pos:line="5" pos:column="50"/></parameter_list>
<block pos:line="6" pos:column="1">{
  <decl_stmt><decl><type><name><name pos:line="7" pos:column="3">enum<pos:position pos:line="7" pos:column="7"/></name> <name pos:line="7" pos:column="8">XML_Error<pos:position pos:line="7" pos:column="17"/></name></name></type> <name pos:line="7" pos:column="18">result<pos:position pos:line="7" pos:column="24"/></name> <init pos:line="7" pos:column="25">= <expr><call><name pos:line="7" pos:column="27">initializeEncoding<pos:position pos:line="7" pos:column="45"/></name><argument_list pos:line="7" pos:column="45">(<argument><expr><name pos:line="7" pos:column="46">parser<pos:position pos:line="7" pos:column="52"/></name></expr></argument>)<pos:position pos:line="7" pos:column="53"/></argument_list></call></expr></init></decl>;<pos:position pos:line="7" pos:column="54"/></decl_stmt>
  <if pos:line="8" pos:column="3">if <condition pos:line="8" pos:column="6">(<expr><name pos:line="8" pos:column="7">result<pos:position pos:line="8" pos:column="13"/></name> <operator pos:line="8" pos:column="14">!=<pos:position pos:line="8" pos:column="16"/></operator> <name pos:line="8" pos:column="17">XML_ERROR_NONE<pos:position pos:line="8" pos:column="31"/></name></expr>)<pos:position pos:line="8" pos:column="32"/></condition><then pos:line="8" pos:column="32">
    <block type="pseudo"><return pos:line="9" pos:column="5">return <expr><name pos:line="9" pos:column="12">result<pos:position pos:line="9" pos:column="18"/></name></expr>;<pos:position pos:line="9" pos:column="19"/></return></block></then></if>

  <comment type="block" pos:line="11" pos:column="3">/* we know now that XML_Parse(Buffer) has been called,
     so we consider the external parameter entity read */</comment>
  <expr_stmt><expr><name><name pos:line="13" pos:column="3">_dtd<pos:position pos:line="13" pos:column="7"/></name><operator pos:line="13" pos:column="7">-&gt;<pos:position pos:line="13" pos:column="12"/></operator><name pos:line="13" pos:column="9">paramEntityRead<pos:position pos:line="13" pos:column="24"/></name></name> <operator pos:line="13" pos:column="25">=<pos:position pos:line="13" pos:column="26"/></operator> <name pos:line="13" pos:column="27">XML_TRUE<pos:position pos:line="13" pos:column="35"/></name></expr>;<pos:position pos:line="13" pos:column="36"/></expr_stmt>

  <if pos:line="15" pos:column="3">if <condition pos:line="15" pos:column="6">(<expr><name><name pos:line="15" pos:column="7">prologState<pos:position pos:line="15" pos:column="18"/></name><operator pos:line="15" pos:column="18">.<pos:position pos:line="15" pos:column="19"/></operator><name pos:line="15" pos:column="19">inEntityValue<pos:position pos:line="15" pos:column="32"/></name></name></expr>)<pos:position pos:line="15" pos:column="33"/></condition><then pos:line="15" pos:column="33"> <block pos:line="15" pos:column="34">{
    <expr_stmt><expr><name pos:line="16" pos:column="5">processor<pos:position pos:line="16" pos:column="14"/></name> <operator pos:line="16" pos:column="15">=<pos:position pos:line="16" pos:column="16"/></operator> <name pos:line="16" pos:column="17">entityValueInitProcessor<pos:position pos:line="16" pos:column="41"/></name></expr>;<pos:position pos:line="16" pos:column="42"/></expr_stmt>
    <return pos:line="17" pos:column="5">return <expr><call><name pos:line="17" pos:column="12">entityValueInitProcessor<pos:position pos:line="17" pos:column="36"/></name><argument_list pos:line="17" pos:column="36">(<argument><expr><name pos:line="17" pos:column="37">parser<pos:position pos:line="17" pos:column="43"/></name></expr></argument>, <argument><expr><name pos:line="17" pos:column="45">s<pos:position pos:line="17" pos:column="46"/></name></expr></argument>, <argument><expr><name pos:line="17" pos:column="48">end<pos:position pos:line="17" pos:column="51"/></name></expr></argument>, <argument><expr><name pos:line="17" pos:column="53">nextPtr<pos:position pos:line="17" pos:column="60"/></name></expr></argument>)<pos:position pos:line="17" pos:column="61"/></argument_list></call></expr>;<pos:position pos:line="17" pos:column="62"/></return>
  }<pos:position pos:line="18" pos:column="4"/></block></then>
  <else pos:line="19" pos:column="3">else <block pos:line="19" pos:column="8">{
    <expr_stmt><expr><name pos:line="20" pos:column="5">processor<pos:position pos:line="20" pos:column="14"/></name> <operator pos:line="20" pos:column="15">=<pos:position pos:line="20" pos:column="16"/></operator> <name pos:line="20" pos:column="17">externalParEntProcessor<pos:position pos:line="20" pos:column="40"/></name></expr>;<pos:position pos:line="20" pos:column="41"/></expr_stmt>
    <return pos:line="21" pos:column="5">return <expr><call><name pos:line="21" pos:column="12">externalParEntProcessor<pos:position pos:line="21" pos:column="35"/></name><argument_list pos:line="21" pos:column="35">(<argument><expr><name pos:line="21" pos:column="36">parser<pos:position pos:line="21" pos:column="42"/></name></expr></argument>, <argument><expr><name pos:line="21" pos:column="44">s<pos:position pos:line="21" pos:column="45"/></name></expr></argument>, <argument><expr><name pos:line="21" pos:column="47">end<pos:position pos:line="21" pos:column="50"/></name></expr></argument>, <argument><expr><name pos:line="21" pos:column="52">nextPtr<pos:position pos:line="21" pos:column="59"/></name></expr></argument>)<pos:position pos:line="21" pos:column="60"/></argument_list></call></expr>;<pos:position pos:line="21" pos:column="61"/></return>
  }<pos:position pos:line="22" pos:column="4"/></block></else></if>
}<pos:position pos:line="23" pos:column="2"/></block></function></unit>

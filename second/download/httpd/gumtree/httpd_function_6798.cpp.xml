<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/httpd/gumtree/httpd_function_6798.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">void<pos:position pos:line="1" pos:column="12"/></name></type> <name pos:line="1" pos:column="13">task_done<pos:position pos:line="1" pos:column="22"/></name><parameter_list pos:line="1" pos:column="22">(<parameter><decl><type><name pos:line="1" pos:column="23">h2_mplx<pos:position pos:line="1" pos:column="30"/></name> <modifier pos:line="1" pos:column="31">*<pos:position pos:line="1" pos:column="32"/></modifier></type><name pos:line="1" pos:column="32">m<pos:position pos:line="1" pos:column="33"/></name></decl></parameter>, <parameter><decl><type><name pos:line="1" pos:column="35">h2_task<pos:position pos:line="1" pos:column="42"/></name> <modifier pos:line="1" pos:column="43">*<pos:position pos:line="1" pos:column="44"/></modifier></type><name pos:line="1" pos:column="44">task<pos:position pos:line="1" pos:column="48"/></name></decl></parameter>, <parameter><decl><type><name pos:line="1" pos:column="50">h2_req_engine<pos:position pos:line="1" pos:column="63"/></name> <modifier pos:line="1" pos:column="64">*<pos:position pos:line="1" pos:column="65"/></modifier></type><name pos:line="1" pos:column="65">ngn<pos:position pos:line="1" pos:column="68"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="69"/></parameter_list>
<block pos:line="2" pos:column="1">{
    <decl_stmt><decl><type><name pos:line="3" pos:column="5">h2_stream<pos:position pos:line="3" pos:column="14"/></name> <modifier pos:line="3" pos:column="15">*<pos:position pos:line="3" pos:column="16"/></modifier></type><name pos:line="3" pos:column="16">stream<pos:position pos:line="3" pos:column="22"/></name></decl>;<pos:position pos:line="3" pos:column="23"/></decl_stmt>
    
    <if pos:line="5" pos:column="5">if <condition pos:line="5" pos:column="8">(<expr><name><name pos:line="5" pos:column="9">task<pos:position pos:line="5" pos:column="13"/></name><operator pos:line="5" pos:column="13">-&gt;<pos:position pos:line="5" pos:column="18"/></operator><name pos:line="5" pos:column="15">frozen<pos:position pos:line="5" pos:column="21"/></name></name></expr>)<pos:position pos:line="5" pos:column="22"/></condition><then pos:line="5" pos:column="22"> <block pos:line="5" pos:column="23">{
        <comment type="block" pos:line="6" pos:column="9">/* this task was handed over to an engine for processing 
         * and the original worker has finished. That means the 
         * engine may start processing now. */</comment>
        <expr_stmt><expr><call><name pos:line="9" pos:column="9">h2_task_thaw<pos:position pos:line="9" pos:column="21"/></name><argument_list pos:line="9" pos:column="21">(<argument><expr><name pos:line="9" pos:column="22">task<pos:position pos:line="9" pos:column="26"/></name></expr></argument>)<pos:position pos:line="9" pos:column="27"/></argument_list></call></expr>;<pos:position pos:line="9" pos:column="28"/></expr_stmt>
        <expr_stmt><expr><call><name pos:line="10" pos:column="9">apr_thread_cond_broadcast<pos:position pos:line="10" pos:column="34"/></name><argument_list pos:line="10" pos:column="34">(<argument><expr><name><name pos:line="10" pos:column="35">m<pos:position pos:line="10" pos:column="36"/></name><operator pos:line="10" pos:column="36">-&gt;<pos:position pos:line="10" pos:column="41"/></operator><name pos:line="10" pos:column="38">task_thawed<pos:position pos:line="10" pos:column="49"/></name></name></expr></argument>)<pos:position pos:line="10" pos:column="50"/></argument_list></call></expr>;<pos:position pos:line="10" pos:column="51"/></expr_stmt>
        <return pos:line="11" pos:column="9">return;<pos:position pos:line="11" pos:column="16"/></return>
    }<pos:position pos:line="12" pos:column="6"/></block></then></if>
        
    <expr_stmt><expr><call><name pos:line="14" pos:column="5">ap_log_cerror<pos:position pos:line="14" pos:column="18"/></name><argument_list pos:line="14" pos:column="18">(<argument><expr><name pos:line="14" pos:column="19">APLOG_MARK<pos:position pos:line="14" pos:column="29"/></name></expr></argument>, <argument><expr><name pos:line="14" pos:column="31">APLOG_TRACE1<pos:position pos:line="14" pos:column="43"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="14" pos:column="45">0<pos:position pos:line="14" pos:column="46"/></literal></expr></argument>, <argument><expr><name><name pos:line="14" pos:column="48">m<pos:position pos:line="14" pos:column="49"/></name><operator pos:line="14" pos:column="49">-&gt;<pos:position pos:line="14" pos:column="54"/></operator><name pos:line="14" pos:column="51">c<pos:position pos:line="14" pos:column="52"/></name></name></expr></argument>,
                  <argument><expr><literal type="string" pos:line="15" pos:column="19">"h2_mplx(%ld): task(%s) done"<pos:position pos:line="15" pos:column="48"/></literal></expr></argument>, <argument><expr><name><name pos:line="15" pos:column="50">m<pos:position pos:line="15" pos:column="51"/></name><operator pos:line="15" pos:column="51">-&gt;<pos:position pos:line="15" pos:column="56"/></operator><name pos:line="15" pos:column="53">id<pos:position pos:line="15" pos:column="55"/></name></name></expr></argument>, <argument><expr><name><name pos:line="15" pos:column="57">task<pos:position pos:line="15" pos:column="61"/></name><operator pos:line="15" pos:column="61">-&gt;<pos:position pos:line="15" pos:column="66"/></operator><name pos:line="15" pos:column="63">id<pos:position pos:line="15" pos:column="65"/></name></name></expr></argument>)<pos:position pos:line="15" pos:column="66"/></argument_list></call></expr>;<pos:position pos:line="15" pos:column="67"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="16" pos:column="5">out_close<pos:position pos:line="16" pos:column="14"/></name><argument_list pos:line="16" pos:column="14">(<argument><expr><name pos:line="16" pos:column="15">m<pos:position pos:line="16" pos:column="16"/></name></expr></argument>, <argument><expr><name pos:line="16" pos:column="18">task<pos:position pos:line="16" pos:column="22"/></name></expr></argument>)<pos:position pos:line="16" pos:column="23"/></argument_list></call></expr>;<pos:position pos:line="16" pos:column="24"/></expr_stmt>
    
    <if pos:line="18" pos:column="5">if <condition pos:line="18" pos:column="8">(<expr><name pos:line="18" pos:column="9">ngn<pos:position pos:line="18" pos:column="12"/></name></expr>)<pos:position pos:line="18" pos:column="13"/></condition><then pos:line="18" pos:column="13"> <block pos:line="18" pos:column="14">{
        <decl_stmt><decl><type><name pos:line="19" pos:column="9">apr_off_t<pos:position pos:line="19" pos:column="18"/></name></type> <name pos:line="19" pos:column="19">bytes<pos:position pos:line="19" pos:column="24"/></name> <init pos:line="19" pos:column="25">= <expr><literal type="number" pos:line="19" pos:column="27">0<pos:position pos:line="19" pos:column="28"/></literal></expr></init></decl>;<pos:position pos:line="19" pos:column="29"/></decl_stmt>
        <expr_stmt><expr><call><name pos:line="20" pos:column="9">h2_beam_send<pos:position pos:line="20" pos:column="21"/></name><argument_list pos:line="20" pos:column="21">(<argument><expr><name><name pos:line="20" pos:column="22">task<pos:position pos:line="20" pos:column="26"/></name><operator pos:line="20" pos:column="26">-&gt;<pos:position pos:line="20" pos:column="31"/></operator><name pos:line="20" pos:column="28">output<pos:position pos:line="20" pos:column="34"/></name><operator pos:line="20" pos:column="34">.<pos:position pos:line="20" pos:column="35"/></operator><name pos:line="20" pos:column="35">beam<pos:position pos:line="20" pos:column="39"/></name></name></expr></argument>, <argument><expr><name pos:line="20" pos:column="41">NULL<pos:position pos:line="20" pos:column="45"/></name></expr></argument>, <argument><expr><name pos:line="20" pos:column="47">APR_NONBLOCK_READ<pos:position pos:line="20" pos:column="64"/></name></expr></argument>)<pos:position pos:line="20" pos:column="65"/></argument_list></call></expr>;<pos:position pos:line="20" pos:column="66"/></expr_stmt>
        <expr_stmt><expr><name pos:line="21" pos:column="9">bytes<pos:position pos:line="21" pos:column="14"/></name> <operator pos:line="21" pos:column="15">+=<pos:position pos:line="21" pos:column="17"/></operator> <call><name pos:line="21" pos:column="18">h2_beam_get_buffered<pos:position pos:line="21" pos:column="38"/></name><argument_list pos:line="21" pos:column="38">(<argument><expr><name><name pos:line="21" pos:column="39">task<pos:position pos:line="21" pos:column="43"/></name><operator pos:line="21" pos:column="43">-&gt;<pos:position pos:line="21" pos:column="48"/></operator><name pos:line="21" pos:column="45">output<pos:position pos:line="21" pos:column="51"/></name><operator pos:line="21" pos:column="51">.<pos:position pos:line="21" pos:column="52"/></operator><name pos:line="21" pos:column="52">beam<pos:position pos:line="21" pos:column="56"/></name></name></expr></argument>)<pos:position pos:line="21" pos:column="57"/></argument_list></call></expr>;<pos:position pos:line="21" pos:column="58"/></expr_stmt>
        <if pos:line="22" pos:column="9">if <condition pos:line="22" pos:column="12">(<expr><name pos:line="22" pos:column="13">bytes<pos:position pos:line="22" pos:column="18"/></name> <operator pos:line="22" pos:column="19">&gt;<pos:position pos:line="22" pos:column="23"/></operator> <literal type="number" pos:line="22" pos:column="21">0<pos:position pos:line="22" pos:column="22"/></literal></expr>)<pos:position pos:line="22" pos:column="23"/></condition><then pos:line="22" pos:column="23"> <block pos:line="22" pos:column="24">{
            <comment type="block" pos:line="23" pos:column="13">/* we need to report consumed and current buffered output
             * to the engine. The request will be streamed out or cancelled,
             * no more data is coming from it and the engine should update
             * its calculations before we destroy this information. */</comment>
            <expr_stmt><expr><call><name pos:line="27" pos:column="13">h2_req_engine_out_consumed<pos:position pos:line="27" pos:column="39"/></name><argument_list pos:line="27" pos:column="39">(<argument><expr><name pos:line="27" pos:column="40">ngn<pos:position pos:line="27" pos:column="43"/></name></expr></argument>, <argument><expr><name><name pos:line="27" pos:column="45">task<pos:position pos:line="27" pos:column="49"/></name><operator pos:line="27" pos:column="49">-&gt;<pos:position pos:line="27" pos:column="54"/></operator><name pos:line="27" pos:column="51">c<pos:position pos:line="27" pos:column="52"/></name></name></expr></argument>, <argument><expr><name pos:line="27" pos:column="54">bytes<pos:position pos:line="27" pos:column="59"/></name></expr></argument>)<pos:position pos:line="27" pos:column="60"/></argument_list></call></expr>;<pos:position pos:line="27" pos:column="61"/></expr_stmt>
        }<pos:position pos:line="28" pos:column="10"/></block></then></if>
    }<pos:position pos:line="29" pos:column="6"/></block></then></if>
    
    <if pos:line="31" pos:column="5">if <condition pos:line="31" pos:column="8">(<expr><name><name pos:line="31" pos:column="9">task<pos:position pos:line="31" pos:column="13"/></name><operator pos:line="31" pos:column="13">-&gt;<pos:position pos:line="31" pos:column="18"/></operator><name pos:line="31" pos:column="15">engine<pos:position pos:line="31" pos:column="21"/></name></name></expr>)<pos:position pos:line="31" pos:column="22"/></condition><then pos:line="31" pos:column="22"> <block pos:line="31" pos:column="23">{
        <if pos:line="32" pos:column="9">if <condition pos:line="32" pos:column="12">(<expr><operator pos:line="32" pos:column="13">!<pos:position pos:line="32" pos:column="14"/></operator><name><name pos:line="32" pos:column="14">m<pos:position pos:line="32" pos:column="15"/></name><operator pos:line="32" pos:column="15">-&gt;<pos:position pos:line="32" pos:column="20"/></operator><name pos:line="32" pos:column="17">aborted<pos:position pos:line="32" pos:column="24"/></name></name> <operator pos:line="32" pos:column="25">&amp;&amp;<pos:position pos:line="32" pos:column="35"/></operator> <operator pos:line="32" pos:column="28">!<pos:position pos:line="32" pos:column="29"/></operator><name><name pos:line="32" pos:column="29">task<pos:position pos:line="32" pos:column="33"/></name><operator pos:line="32" pos:column="33">-&gt;<pos:position pos:line="32" pos:column="38"/></operator><name pos:line="32" pos:column="35">c<pos:position pos:line="32" pos:column="36"/></name><operator pos:line="32" pos:column="36">-&gt;<pos:position pos:line="32" pos:column="41"/></operator><name pos:line="32" pos:column="38">aborted<pos:position pos:line="32" pos:column="45"/></name></name> 
            <operator pos:line="33" pos:column="13">&amp;&amp;<pos:position pos:line="33" pos:column="23"/></operator> <operator pos:line="33" pos:column="16">!<pos:position pos:line="33" pos:column="17"/></operator><call><name pos:line="33" pos:column="17">h2_req_engine_is_shutdown<pos:position pos:line="33" pos:column="42"/></name><argument_list pos:line="33" pos:column="42">(<argument><expr><name><name pos:line="33" pos:column="43">task<pos:position pos:line="33" pos:column="47"/></name><operator pos:line="33" pos:column="47">-&gt;<pos:position pos:line="33" pos:column="52"/></operator><name pos:line="33" pos:column="49">engine<pos:position pos:line="33" pos:column="55"/></name></name></expr></argument>)<pos:position pos:line="33" pos:column="56"/></argument_list></call></expr>)<pos:position pos:line="33" pos:column="57"/></condition><then pos:line="33" pos:column="57"> <block pos:line="33" pos:column="58">{
            <expr_stmt><expr><call><name pos:line="34" pos:column="13">ap_log_cerror<pos:position pos:line="34" pos:column="26"/></name><argument_list pos:line="34" pos:column="26">(<argument><expr><name pos:line="34" pos:column="27">APLOG_MARK<pos:position pos:line="34" pos:column="37"/></name></expr></argument>, <argument><expr><name pos:line="34" pos:column="39">APLOG_DEBUG<pos:position pos:line="34" pos:column="50"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="34" pos:column="52">0<pos:position pos:line="34" pos:column="53"/></literal></expr></argument>, <argument><expr><name><name pos:line="34" pos:column="55">m<pos:position pos:line="34" pos:column="56"/></name><operator pos:line="34" pos:column="56">-&gt;<pos:position pos:line="34" pos:column="61"/></operator><name pos:line="34" pos:column="58">c<pos:position pos:line="34" pos:column="59"/></name></name></expr></argument>, <argument><expr><call><name pos:line="34" pos:column="61">APLOGNO<pos:position pos:line="34" pos:column="68"/></name><argument_list pos:line="34" pos:column="68">(<argument><expr><literal type="number" pos:line="34" pos:column="69">10022<pos:position pos:line="34" pos:column="74"/></literal></expr></argument>)<pos:position pos:line="34" pos:column="75"/></argument_list></call>
                          <literal type="string" pos:line="35" pos:column="27">"h2_mplx(%ld): task(%s) has not-shutdown "<pos:position pos:line="35" pos:column="69"/></literal>
                          <literal type="string" pos:line="36" pos:column="27">"engine(%s)"<pos:position pos:line="36" pos:column="39"/></literal></expr></argument>, <argument><expr><name><name pos:line="36" pos:column="41">m<pos:position pos:line="36" pos:column="42"/></name><operator pos:line="36" pos:column="42">-&gt;<pos:position pos:line="36" pos:column="47"/></operator><name pos:line="36" pos:column="44">id<pos:position pos:line="36" pos:column="46"/></name></name></expr></argument>, <argument><expr><name><name pos:line="36" pos:column="48">task<pos:position pos:line="36" pos:column="52"/></name><operator pos:line="36" pos:column="52">-&gt;<pos:position pos:line="36" pos:column="57"/></operator><name pos:line="36" pos:column="54">id<pos:position pos:line="36" pos:column="56"/></name></name></expr></argument>, 
                          <argument><expr><call><name pos:line="37" pos:column="27">h2_req_engine_get_id<pos:position pos:line="37" pos:column="47"/></name><argument_list pos:line="37" pos:column="47">(<argument><expr><name><name pos:line="37" pos:column="48">task<pos:position pos:line="37" pos:column="52"/></name><operator pos:line="37" pos:column="52">-&gt;<pos:position pos:line="37" pos:column="57"/></operator><name pos:line="37" pos:column="54">engine<pos:position pos:line="37" pos:column="60"/></name></name></expr></argument>)<pos:position pos:line="37" pos:column="61"/></argument_list></call></expr></argument>)<pos:position pos:line="37" pos:column="62"/></argument_list></call></expr>;<pos:position pos:line="37" pos:column="63"/></expr_stmt>
        }<pos:position pos:line="38" pos:column="10"/></block></then></if>
        <expr_stmt><expr><call><name pos:line="39" pos:column="9">h2_ngn_shed_done_ngn<pos:position pos:line="39" pos:column="29"/></name><argument_list pos:line="39" pos:column="29">(<argument><expr><name><name pos:line="39" pos:column="30">m<pos:position pos:line="39" pos:column="31"/></name><operator pos:line="39" pos:column="31">-&gt;<pos:position pos:line="39" pos:column="36"/></operator><name pos:line="39" pos:column="33">ngn_shed<pos:position pos:line="39" pos:column="41"/></name></name></expr></argument>, <argument><expr><name><name pos:line="39" pos:column="43">task<pos:position pos:line="39" pos:column="47"/></name><operator pos:line="39" pos:column="47">-&gt;<pos:position pos:line="39" pos:column="52"/></operator><name pos:line="39" pos:column="49">engine<pos:position pos:line="39" pos:column="55"/></name></name></expr></argument>)<pos:position pos:line="39" pos:column="56"/></argument_list></call></expr>;<pos:position pos:line="39" pos:column="57"/></expr_stmt>
    }<pos:position pos:line="40" pos:column="6"/></block></then></if>
    
    <expr_stmt><expr><name><name pos:line="42" pos:column="5">task<pos:position pos:line="42" pos:column="9"/></name><operator pos:line="42" pos:column="9">-&gt;<pos:position pos:line="42" pos:column="14"/></operator><name pos:line="42" pos:column="11">worker_done<pos:position pos:line="42" pos:column="22"/></name></name> <operator pos:line="42" pos:column="23">=<pos:position pos:line="42" pos:column="24"/></operator> <literal type="number" pos:line="42" pos:column="25">1<pos:position pos:line="42" pos:column="26"/></literal></expr>;<pos:position pos:line="42" pos:column="27"/></expr_stmt>
    <expr_stmt><expr><name><name pos:line="43" pos:column="5">task<pos:position pos:line="43" pos:column="9"/></name><operator pos:line="43" pos:column="9">-&gt;<pos:position pos:line="43" pos:column="14"/></operator><name pos:line="43" pos:column="11">done_at<pos:position pos:line="43" pos:column="18"/></name></name> <operator pos:line="43" pos:column="19">=<pos:position pos:line="43" pos:column="20"/></operator> <call><name pos:line="43" pos:column="21">apr_time_now<pos:position pos:line="43" pos:column="33"/></name><argument_list pos:line="43" pos:column="33">()<pos:position pos:line="43" pos:column="35"/></argument_list></call></expr>;<pos:position pos:line="43" pos:column="36"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="44" pos:column="5">ap_log_cerror<pos:position pos:line="44" pos:column="18"/></name><argument_list pos:line="44" pos:column="18">(<argument><expr><name pos:line="44" pos:column="19">APLOG_MARK<pos:position pos:line="44" pos:column="29"/></name></expr></argument>, <argument><expr><name pos:line="44" pos:column="31">APLOG_TRACE2<pos:position pos:line="44" pos:column="43"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="44" pos:column="45">0<pos:position pos:line="44" pos:column="46"/></literal></expr></argument>, <argument><expr><name><name pos:line="44" pos:column="48">m<pos:position pos:line="44" pos:column="49"/></name><operator pos:line="44" pos:column="49">-&gt;<pos:position pos:line="44" pos:column="54"/></operator><name pos:line="44" pos:column="51">c<pos:position pos:line="44" pos:column="52"/></name></name></expr></argument>,
                  <argument><expr><literal type="string" pos:line="45" pos:column="19">"h2_mplx(%s): request done, %f ms elapsed"<pos:position pos:line="45" pos:column="61"/></literal></expr></argument>, <argument><expr><name><name pos:line="45" pos:column="63">task<pos:position pos:line="45" pos:column="67"/></name><operator pos:line="45" pos:column="67">-&gt;<pos:position pos:line="45" pos:column="72"/></operator><name pos:line="45" pos:column="69">id<pos:position pos:line="45" pos:column="71"/></name></name></expr></argument>, 
                  <argument><expr><operator pos:line="46" pos:column="19">(<pos:position pos:line="46" pos:column="20"/></operator><name><name pos:line="46" pos:column="20">task<pos:position pos:line="46" pos:column="24"/></name><operator pos:line="46" pos:column="24">-&gt;<pos:position pos:line="46" pos:column="29"/></operator><name pos:line="46" pos:column="26">done_at<pos:position pos:line="46" pos:column="33"/></name></name> <operator pos:line="46" pos:column="34">-<pos:position pos:line="46" pos:column="35"/></operator> <name><name pos:line="46" pos:column="36">task<pos:position pos:line="46" pos:column="40"/></name><operator pos:line="46" pos:column="40">-&gt;<pos:position pos:line="46" pos:column="45"/></operator><name pos:line="46" pos:column="42">started_at<pos:position pos:line="46" pos:column="52"/></name></name><operator pos:line="46" pos:column="52">)<pos:position pos:line="46" pos:column="53"/></operator> <operator pos:line="46" pos:column="54">/<pos:position pos:line="46" pos:column="55"/></operator> <literal type="number" pos:line="46" pos:column="56">1000.0<pos:position pos:line="46" pos:column="62"/></literal></expr></argument>)<pos:position pos:line="46" pos:column="63"/></argument_list></call></expr>;<pos:position pos:line="46" pos:column="64"/></expr_stmt>
    
    <if pos:line="48" pos:column="5">if <condition pos:line="48" pos:column="8">(<expr><name><name pos:line="48" pos:column="9">task<pos:position pos:line="48" pos:column="13"/></name><operator pos:line="48" pos:column="13">-&gt;<pos:position pos:line="48" pos:column="18"/></operator><name pos:line="48" pos:column="15">started_at<pos:position pos:line="48" pos:column="25"/></name></name> <operator pos:line="48" pos:column="26">&gt;<pos:position pos:line="48" pos:column="30"/></operator> <name><name pos:line="48" pos:column="28">m<pos:position pos:line="48" pos:column="29"/></name><operator pos:line="48" pos:column="29">-&gt;<pos:position pos:line="48" pos:column="34"/></operator><name pos:line="48" pos:column="31">last_idle_block<pos:position pos:line="48" pos:column="46"/></name></name></expr>)<pos:position pos:line="48" pos:column="47"/></condition><then pos:line="48" pos:column="47"> <block pos:line="48" pos:column="48">{
        <comment type="block" pos:line="49" pos:column="9">/* this task finished without causing an 'idle block', e.g.
         * a block by flow control.
         */</comment>
        <if pos:line="52" pos:column="9">if <condition pos:line="52" pos:column="12">(<expr><name><name pos:line="52" pos:column="13">task<pos:position pos:line="52" pos:column="17"/></name><operator pos:line="52" pos:column="17">-&gt;<pos:position pos:line="52" pos:column="22"/></operator><name pos:line="52" pos:column="19">done_at<pos:position pos:line="52" pos:column="26"/></name></name><operator pos:line="52" pos:column="26">-<pos:position pos:line="52" pos:column="27"/></operator> <name><name pos:line="52" pos:column="28">m<pos:position pos:line="52" pos:column="29"/></name><operator pos:line="52" pos:column="29">-&gt;<pos:position pos:line="52" pos:column="34"/></operator><name pos:line="52" pos:column="31">last_limit_change<pos:position pos:line="52" pos:column="48"/></name></name> <operator pos:line="52" pos:column="49">&gt;=<pos:position pos:line="52" pos:column="54"/></operator> <name><name pos:line="52" pos:column="52">m<pos:position pos:line="52" pos:column="53"/></name><operator pos:line="52" pos:column="53">-&gt;<pos:position pos:line="52" pos:column="58"/></operator><name pos:line="52" pos:column="55">limit_change_interval<pos:position pos:line="52" pos:column="76"/></name></name>
            <operator pos:line="53" pos:column="13">&amp;&amp;<pos:position pos:line="53" pos:column="23"/></operator> <name><name pos:line="53" pos:column="16">m<pos:position pos:line="53" pos:column="17"/></name><operator pos:line="53" pos:column="17">-&gt;<pos:position pos:line="53" pos:column="22"/></operator><name pos:line="53" pos:column="19">limit_active<pos:position pos:line="53" pos:column="31"/></name></name> <operator pos:line="53" pos:column="32">&lt;<pos:position pos:line="53" pos:column="36"/></operator> <name><name pos:line="53" pos:column="34">m<pos:position pos:line="53" pos:column="35"/></name><operator pos:line="53" pos:column="35">-&gt;<pos:position pos:line="53" pos:column="40"/></operator><name pos:line="53" pos:column="37">max_active<pos:position pos:line="53" pos:column="47"/></name></name></expr>)<pos:position pos:line="53" pos:column="48"/></condition><then pos:line="53" pos:column="48"> <block pos:line="53" pos:column="49">{
            <comment type="block" pos:line="54" pos:column="13">/* Well behaving stream, allow it more workers */</comment>
            <expr_stmt><expr><name><name pos:line="55" pos:column="13">m<pos:position pos:line="55" pos:column="14"/></name><operator pos:line="55" pos:column="14">-&gt;<pos:position pos:line="55" pos:column="19"/></operator><name pos:line="55" pos:column="16">limit_active<pos:position pos:line="55" pos:column="28"/></name></name> <operator pos:line="55" pos:column="29">=<pos:position pos:line="55" pos:column="30"/></operator> <call><name pos:line="55" pos:column="31">H2MIN<pos:position pos:line="55" pos:column="36"/></name><argument_list pos:line="55" pos:column="36">(<argument><expr><name><name pos:line="55" pos:column="37">m<pos:position pos:line="55" pos:column="38"/></name><operator pos:line="55" pos:column="38">-&gt;<pos:position pos:line="55" pos:column="43"/></operator><name pos:line="55" pos:column="40">limit_active<pos:position pos:line="55" pos:column="52"/></name></name> <operator pos:line="55" pos:column="53">*<pos:position pos:line="55" pos:column="54"/></operator> <literal type="number" pos:line="55" pos:column="55">2<pos:position pos:line="55" pos:column="56"/></literal></expr></argument>, 
                                     <argument><expr><name><name pos:line="56" pos:column="38">m<pos:position pos:line="56" pos:column="39"/></name><operator pos:line="56" pos:column="39">-&gt;<pos:position pos:line="56" pos:column="44"/></operator><name pos:line="56" pos:column="41">max_active<pos:position pos:line="56" pos:column="51"/></name></name></expr></argument>)<pos:position pos:line="56" pos:column="52"/></argument_list></call></expr>;<pos:position pos:line="56" pos:column="53"/></expr_stmt>
            <expr_stmt><expr><name><name pos:line="57" pos:column="13">m<pos:position pos:line="57" pos:column="14"/></name><operator pos:line="57" pos:column="14">-&gt;<pos:position pos:line="57" pos:column="19"/></operator><name pos:line="57" pos:column="16">last_limit_change<pos:position pos:line="57" pos:column="33"/></name></name> <operator pos:line="57" pos:column="34">=<pos:position pos:line="57" pos:column="35"/></operator> <name><name pos:line="57" pos:column="36">task<pos:position pos:line="57" pos:column="40"/></name><operator pos:line="57" pos:column="40">-&gt;<pos:position pos:line="57" pos:column="45"/></operator><name pos:line="57" pos:column="42">done_at<pos:position pos:line="57" pos:column="49"/></name></name></expr>;<pos:position pos:line="57" pos:column="50"/></expr_stmt>
            <expr_stmt><expr><call><name pos:line="58" pos:column="13">ap_log_cerror<pos:position pos:line="58" pos:column="26"/></name><argument_list pos:line="58" pos:column="26">(<argument><expr><name pos:line="58" pos:column="27">APLOG_MARK<pos:position pos:line="58" pos:column="37"/></name></expr></argument>, <argument><expr><name pos:line="58" pos:column="39">APLOG_TRACE1<pos:position pos:line="58" pos:column="51"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="58" pos:column="53">0<pos:position pos:line="58" pos:column="54"/></literal></expr></argument>, <argument><expr><name><name pos:line="58" pos:column="56">m<pos:position pos:line="58" pos:column="57"/></name><operator pos:line="58" pos:column="57">-&gt;<pos:position pos:line="58" pos:column="62"/></operator><name pos:line="58" pos:column="59">c<pos:position pos:line="58" pos:column="60"/></name></name></expr></argument>,
                          <argument><expr><literal type="string" pos:line="59" pos:column="27">"h2_mplx(%ld): increase worker limit to %d"<pos:position pos:line="59" pos:column="70"/></literal></expr></argument>,
                          <argument><expr><name><name pos:line="60" pos:column="27">m<pos:position pos:line="60" pos:column="28"/></name><operator pos:line="60" pos:column="28">-&gt;<pos:position pos:line="60" pos:column="33"/></operator><name pos:line="60" pos:column="30">id<pos:position pos:line="60" pos:column="32"/></name></name></expr></argument>, <argument><expr><name><name pos:line="60" pos:column="34">m<pos:position pos:line="60" pos:column="35"/></name><operator pos:line="60" pos:column="35">-&gt;<pos:position pos:line="60" pos:column="40"/></operator><name pos:line="60" pos:column="37">limit_active<pos:position pos:line="60" pos:column="49"/></name></name></expr></argument>)<pos:position pos:line="60" pos:column="50"/></argument_list></call></expr>;<pos:position pos:line="60" pos:column="51"/></expr_stmt>
        }<pos:position pos:line="61" pos:column="10"/></block></then></if>
    }<pos:position pos:line="62" pos:column="6"/></block></then></if>
    
    <expr_stmt><expr><name pos:line="64" pos:column="5">stream<pos:position pos:line="64" pos:column="11"/></name> <operator pos:line="64" pos:column="12">=<pos:position pos:line="64" pos:column="13"/></operator> <call><name pos:line="64" pos:column="14">h2_ihash_get<pos:position pos:line="64" pos:column="26"/></name><argument_list pos:line="64" pos:column="26">(<argument><expr><name><name pos:line="64" pos:column="27">m<pos:position pos:line="64" pos:column="28"/></name><operator pos:line="64" pos:column="28">-&gt;<pos:position pos:line="64" pos:column="33"/></operator><name pos:line="64" pos:column="30">streams<pos:position pos:line="64" pos:column="37"/></name></name></expr></argument>, <argument><expr><name><name pos:line="64" pos:column="39">task<pos:position pos:line="64" pos:column="43"/></name><operator pos:line="64" pos:column="43">-&gt;<pos:position pos:line="64" pos:column="48"/></operator><name pos:line="64" pos:column="45">stream_id<pos:position pos:line="64" pos:column="54"/></name></name></expr></argument>)<pos:position pos:line="64" pos:column="55"/></argument_list></call></expr>;<pos:position pos:line="64" pos:column="56"/></expr_stmt>
    <if pos:line="65" pos:column="5">if <condition pos:line="65" pos:column="8">(<expr><name pos:line="65" pos:column="9">stream<pos:position pos:line="65" pos:column="15"/></name></expr>)<pos:position pos:line="65" pos:column="16"/></condition><then pos:line="65" pos:column="16"> <block pos:line="65" pos:column="17">{
        <comment type="block" pos:line="66" pos:column="9">/* stream not done yet. */</comment>
        <if pos:line="67" pos:column="9">if <condition pos:line="67" pos:column="12">(<expr><operator pos:line="67" pos:column="13">!<pos:position pos:line="67" pos:column="14"/></operator><name><name pos:line="67" pos:column="14">m<pos:position pos:line="67" pos:column="15"/></name><operator pos:line="67" pos:column="15">-&gt;<pos:position pos:line="67" pos:column="20"/></operator><name pos:line="67" pos:column="17">aborted<pos:position pos:line="67" pos:column="24"/></name></name> <operator pos:line="67" pos:column="25">&amp;&amp;<pos:position pos:line="67" pos:column="35"/></operator> <call><name pos:line="67" pos:column="28">h2_ihash_get<pos:position pos:line="67" pos:column="40"/></name><argument_list pos:line="67" pos:column="40">(<argument><expr><name><name pos:line="67" pos:column="41">m<pos:position pos:line="67" pos:column="42"/></name><operator pos:line="67" pos:column="42">-&gt;<pos:position pos:line="67" pos:column="47"/></operator><name pos:line="67" pos:column="44">sredo<pos:position pos:line="67" pos:column="49"/></name></name></expr></argument>, <argument><expr><name><name pos:line="67" pos:column="51">stream<pos:position pos:line="67" pos:column="57"/></name><operator pos:line="67" pos:column="57">-&gt;<pos:position pos:line="67" pos:column="62"/></operator><name pos:line="67" pos:column="59">id<pos:position pos:line="67" pos:column="61"/></name></name></expr></argument>)<pos:position pos:line="67" pos:column="62"/></argument_list></call></expr>)<pos:position pos:line="67" pos:column="63"/></condition><then pos:line="67" pos:column="63"> <block pos:line="67" pos:column="64">{
            <comment type="block" pos:line="68" pos:column="13">/* reset and schedule again */</comment>
            <expr_stmt><expr><call><name pos:line="69" pos:column="13">h2_task_redo<pos:position pos:line="69" pos:column="25"/></name><argument_list pos:line="69" pos:column="25">(<argument><expr><name pos:line="69" pos:column="26">task<pos:position pos:line="69" pos:column="30"/></name></expr></argument>)<pos:position pos:line="69" pos:column="31"/></argument_list></call></expr>;<pos:position pos:line="69" pos:column="32"/></expr_stmt>
            <expr_stmt><expr><call><name pos:line="70" pos:column="13">h2_ihash_remove<pos:position pos:line="70" pos:column="28"/></name><argument_list pos:line="70" pos:column="28">(<argument><expr><name><name pos:line="70" pos:column="29">m<pos:position pos:line="70" pos:column="30"/></name><operator pos:line="70" pos:column="30">-&gt;<pos:position pos:line="70" pos:column="35"/></operator><name pos:line="70" pos:column="32">sredo<pos:position pos:line="70" pos:column="37"/></name></name></expr></argument>, <argument><expr><name><name pos:line="70" pos:column="39">stream<pos:position pos:line="70" pos:column="45"/></name><operator pos:line="70" pos:column="45">-&gt;<pos:position pos:line="70" pos:column="50"/></operator><name pos:line="70" pos:column="47">id<pos:position pos:line="70" pos:column="49"/></name></name></expr></argument>)<pos:position pos:line="70" pos:column="50"/></argument_list></call></expr>;<pos:position pos:line="70" pos:column="51"/></expr_stmt>
            <expr_stmt><expr><call><name pos:line="71" pos:column="13">h2_iq_add<pos:position pos:line="71" pos:column="22"/></name><argument_list pos:line="71" pos:column="22">(<argument><expr><name><name pos:line="71" pos:column="23">m<pos:position pos:line="71" pos:column="24"/></name><operator pos:line="71" pos:column="24">-&gt;<pos:position pos:line="71" pos:column="29"/></operator><name pos:line="71" pos:column="26">q<pos:position pos:line="71" pos:column="27"/></name></name></expr></argument>, <argument><expr><name><name pos:line="71" pos:column="29">stream<pos:position pos:line="71" pos:column="35"/></name><operator pos:line="71" pos:column="35">-&gt;<pos:position pos:line="71" pos:column="40"/></operator><name pos:line="71" pos:column="37">id<pos:position pos:line="71" pos:column="39"/></name></name></expr></argument>, <argument><expr><name pos:line="71" pos:column="41">NULL<pos:position pos:line="71" pos:column="45"/></name></expr></argument>, <argument><expr><name pos:line="71" pos:column="47">NULL<pos:position pos:line="71" pos:column="51"/></name></expr></argument>)<pos:position pos:line="71" pos:column="52"/></argument_list></call></expr>;<pos:position pos:line="71" pos:column="53"/></expr_stmt>
        }<pos:position pos:line="72" pos:column="10"/></block></then>
        <else pos:line="73" pos:column="9">else <block pos:line="73" pos:column="14">{
            <comment type="block" pos:line="74" pos:column="13">/* stream not cleaned up, stay around */</comment>
            <expr_stmt><expr><call><name pos:line="75" pos:column="13">ap_log_cerror<pos:position pos:line="75" pos:column="26"/></name><argument_list pos:line="75" pos:column="26">(<argument><expr><name pos:line="75" pos:column="27">APLOG_MARK<pos:position pos:line="75" pos:column="37"/></name></expr></argument>, <argument><expr><name pos:line="75" pos:column="39">APLOG_TRACE2<pos:position pos:line="75" pos:column="51"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="75" pos:column="53">0<pos:position pos:line="75" pos:column="54"/></literal></expr></argument>, <argument><expr><name><name pos:line="75" pos:column="56">m<pos:position pos:line="75" pos:column="57"/></name><operator pos:line="75" pos:column="57">-&gt;<pos:position pos:line="75" pos:column="62"/></operator><name pos:line="75" pos:column="59">c<pos:position pos:line="75" pos:column="60"/></name></name></expr></argument>,
                          <argument><expr><call><name pos:line="76" pos:column="27">H2_STRM_MSG<pos:position pos:line="76" pos:column="38"/></name><argument_list pos:line="76" pos:column="38">(<argument><expr><name pos:line="76" pos:column="39">stream<pos:position pos:line="76" pos:column="45"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="76" pos:column="47">"task_done, stream open"<pos:position pos:line="76" pos:column="71"/></literal></expr></argument>)<pos:position pos:line="76" pos:column="72"/></argument_list></call></expr></argument>)<pos:position pos:line="76" pos:column="73"/></argument_list></call></expr>;<pos:position pos:line="76" pos:column="74"/></expr_stmt> 
            <if pos:line="77" pos:column="13">if <condition pos:line="77" pos:column="16">(<expr><name><name pos:line="77" pos:column="17">stream<pos:position pos:line="77" pos:column="23"/></name><operator pos:line="77" pos:column="23">-&gt;<pos:position pos:line="77" pos:column="28"/></operator><name pos:line="77" pos:column="25">input<pos:position pos:line="77" pos:column="30"/></name></name></expr>)<pos:position pos:line="77" pos:column="31"/></condition><then pos:line="77" pos:column="31"> <block pos:line="77" pos:column="32">{
                <expr_stmt><expr><call><name pos:line="78" pos:column="17">h2_beam_leave<pos:position pos:line="78" pos:column="30"/></name><argument_list pos:line="78" pos:column="30">(<argument><expr><name><name pos:line="78" pos:column="31">stream<pos:position pos:line="78" pos:column="37"/></name><operator pos:line="78" pos:column="37">-&gt;<pos:position pos:line="78" pos:column="42"/></operator><name pos:line="78" pos:column="39">input<pos:position pos:line="78" pos:column="44"/></name></name></expr></argument>)<pos:position pos:line="78" pos:column="45"/></argument_list></call></expr>;<pos:position pos:line="78" pos:column="46"/></expr_stmt>
                <expr_stmt><expr><call><name pos:line="79" pos:column="17">h2_beam_mutex_disable<pos:position pos:line="79" pos:column="38"/></name><argument_list pos:line="79" pos:column="38">(<argument><expr><name><name pos:line="79" pos:column="39">stream<pos:position pos:line="79" pos:column="45"/></name><operator pos:line="79" pos:column="45">-&gt;<pos:position pos:line="79" pos:column="50"/></operator><name pos:line="79" pos:column="47">input<pos:position pos:line="79" pos:column="52"/></name></name></expr></argument>)<pos:position pos:line="79" pos:column="53"/></argument_list></call></expr>;<pos:position pos:line="79" pos:column="54"/></expr_stmt>
            }<pos:position pos:line="80" pos:column="14"/></block></then></if>
            <if pos:line="81" pos:column="13">if <condition pos:line="81" pos:column="16">(<expr><name><name pos:line="81" pos:column="17">stream<pos:position pos:line="81" pos:column="23"/></name><operator pos:line="81" pos:column="23">-&gt;<pos:position pos:line="81" pos:column="28"/></operator><name pos:line="81" pos:column="25">output<pos:position pos:line="81" pos:column="31"/></name></name></expr>)<pos:position pos:line="81" pos:column="32"/></condition><then pos:line="81" pos:column="32"> <block pos:line="81" pos:column="33">{
                <expr_stmt><expr><call><name pos:line="82" pos:column="17">h2_beam_mutex_disable<pos:position pos:line="82" pos:column="38"/></name><argument_list pos:line="82" pos:column="38">(<argument><expr><name><name pos:line="82" pos:column="39">stream<pos:position pos:line="82" pos:column="45"/></name><operator pos:line="82" pos:column="45">-&gt;<pos:position pos:line="82" pos:column="50"/></operator><name pos:line="82" pos:column="47">output<pos:position pos:line="82" pos:column="53"/></name></name></expr></argument>)<pos:position pos:line="82" pos:column="54"/></argument_list></call></expr>;<pos:position pos:line="82" pos:column="55"/></expr_stmt>
            }<pos:position pos:line="83" pos:column="14"/></block></then></if>

            <comment type="block" pos:line="85" pos:column="13">/* more data will not arrive, resume the stream */</comment>
            <expr_stmt><expr><call><name pos:line="86" pos:column="13">check_data_for<pos:position pos:line="86" pos:column="27"/></name><argument_list pos:line="86" pos:column="27">(<argument><expr><name pos:line="86" pos:column="28">m<pos:position pos:line="86" pos:column="29"/></name></expr></argument>, <argument><expr><name pos:line="86" pos:column="31">stream<pos:position pos:line="86" pos:column="37"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="86" pos:column="39">0<pos:position pos:line="86" pos:column="40"/></literal></expr></argument>)<pos:position pos:line="86" pos:column="41"/></argument_list></call></expr>;<pos:position pos:line="86" pos:column="42"/></expr_stmt>            
        }<pos:position pos:line="87" pos:column="10"/></block></else></if>
    }<pos:position pos:line="88" pos:column="6"/></block></then>
    <elseif pos:line="89" pos:column="5">else <if pos:line="89" pos:column="10">if <condition pos:line="89" pos:column="13">(<expr><operator pos:line="89" pos:column="14">(<pos:position pos:line="89" pos:column="15"/></operator><name pos:line="89" pos:column="15">stream<pos:position pos:line="89" pos:column="21"/></name> <operator pos:line="89" pos:column="22">=<pos:position pos:line="89" pos:column="23"/></operator> <call><name pos:line="89" pos:column="24">h2_ihash_get<pos:position pos:line="89" pos:column="36"/></name><argument_list pos:line="89" pos:column="36">(<argument><expr><name><name pos:line="89" pos:column="37">m<pos:position pos:line="89" pos:column="38"/></name><operator pos:line="89" pos:column="38">-&gt;<pos:position pos:line="89" pos:column="43"/></operator><name pos:line="89" pos:column="40">shold<pos:position pos:line="89" pos:column="45"/></name></name></expr></argument>, <argument><expr><name><name pos:line="89" pos:column="47">task<pos:position pos:line="89" pos:column="51"/></name><operator pos:line="89" pos:column="51">-&gt;<pos:position pos:line="89" pos:column="56"/></operator><name pos:line="89" pos:column="53">stream_id<pos:position pos:line="89" pos:column="62"/></name></name></expr></argument>)<pos:position pos:line="89" pos:column="63"/></argument_list></call><operator pos:line="89" pos:column="63">)<pos:position pos:line="89" pos:column="64"/></operator> <operator pos:line="89" pos:column="65">!=<pos:position pos:line="89" pos:column="67"/></operator> <name pos:line="89" pos:column="68">NULL<pos:position pos:line="89" pos:column="72"/></name></expr>)<pos:position pos:line="89" pos:column="73"/></condition><then pos:line="89" pos:column="73"> <block pos:line="89" pos:column="74">{
        <comment type="block" pos:line="90" pos:column="9">/* stream is done, was just waiting for this. */</comment>
        <expr_stmt><expr><call><name pos:line="91" pos:column="9">ap_log_cerror<pos:position pos:line="91" pos:column="22"/></name><argument_list pos:line="91" pos:column="22">(<argument><expr><name pos:line="91" pos:column="23">APLOG_MARK<pos:position pos:line="91" pos:column="33"/></name></expr></argument>, <argument><expr><name pos:line="91" pos:column="35">APLOG_TRACE2<pos:position pos:line="91" pos:column="47"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="91" pos:column="49">0<pos:position pos:line="91" pos:column="50"/></literal></expr></argument>, <argument><expr><name><name pos:line="91" pos:column="52">m<pos:position pos:line="91" pos:column="53"/></name><operator pos:line="91" pos:column="53">-&gt;<pos:position pos:line="91" pos:column="58"/></operator><name pos:line="91" pos:column="55">c<pos:position pos:line="91" pos:column="56"/></name></name></expr></argument>,
                      <argument><expr><call><name pos:line="92" pos:column="23">H2_STRM_MSG<pos:position pos:line="92" pos:column="34"/></name><argument_list pos:line="92" pos:column="34">(<argument><expr><name pos:line="92" pos:column="35">stream<pos:position pos:line="92" pos:column="41"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="92" pos:column="43">"task_done, in hold"<pos:position pos:line="92" pos:column="63"/></literal></expr></argument>)<pos:position pos:line="92" pos:column="64"/></argument_list></call></expr></argument>)<pos:position pos:line="92" pos:column="65"/></argument_list></call></expr>;<pos:position pos:line="92" pos:column="66"/></expr_stmt>
        <if pos:line="93" pos:column="9">if <condition pos:line="93" pos:column="12">(<expr><name><name pos:line="93" pos:column="13">stream<pos:position pos:line="93" pos:column="19"/></name><operator pos:line="93" pos:column="19">-&gt;<pos:position pos:line="93" pos:column="24"/></operator><name pos:line="93" pos:column="21">input<pos:position pos:line="93" pos:column="26"/></name></name></expr>)<pos:position pos:line="93" pos:column="27"/></condition><then pos:line="93" pos:column="27"> <block pos:line="93" pos:column="28">{
            <expr_stmt><expr><call><name pos:line="94" pos:column="13">h2_beam_leave<pos:position pos:line="94" pos:column="26"/></name><argument_list pos:line="94" pos:column="26">(<argument><expr><name><name pos:line="94" pos:column="27">stream<pos:position pos:line="94" pos:column="33"/></name><operator pos:line="94" pos:column="33">-&gt;<pos:position pos:line="94" pos:column="38"/></operator><name pos:line="94" pos:column="35">input<pos:position pos:line="94" pos:column="40"/></name></name></expr></argument>)<pos:position pos:line="94" pos:column="41"/></argument_list></call></expr>;<pos:position pos:line="94" pos:column="42"/></expr_stmt>
            <expr_stmt><expr><call><name pos:line="95" pos:column="13">h2_beam_mutex_disable<pos:position pos:line="95" pos:column="34"/></name><argument_list pos:line="95" pos:column="34">(<argument><expr><name><name pos:line="95" pos:column="35">stream<pos:position pos:line="95" pos:column="41"/></name><operator pos:line="95" pos:column="41">-&gt;<pos:position pos:line="95" pos:column="46"/></operator><name pos:line="95" pos:column="43">input<pos:position pos:line="95" pos:column="48"/></name></name></expr></argument>)<pos:position pos:line="95" pos:column="49"/></argument_list></call></expr>;<pos:position pos:line="95" pos:column="50"/></expr_stmt>
        }<pos:position pos:line="96" pos:column="10"/></block></then></if>
        <if pos:line="97" pos:column="9">if <condition pos:line="97" pos:column="12">(<expr><name><name pos:line="97" pos:column="13">stream<pos:position pos:line="97" pos:column="19"/></name><operator pos:line="97" pos:column="19">-&gt;<pos:position pos:line="97" pos:column="24"/></operator><name pos:line="97" pos:column="21">output<pos:position pos:line="97" pos:column="27"/></name></name></expr>)<pos:position pos:line="97" pos:column="28"/></condition><then pos:line="97" pos:column="28"> <block pos:line="97" pos:column="29">{
            <expr_stmt><expr><call><name pos:line="98" pos:column="13">h2_beam_mutex_disable<pos:position pos:line="98" pos:column="34"/></name><argument_list pos:line="98" pos:column="34">(<argument><expr><name><name pos:line="98" pos:column="35">stream<pos:position pos:line="98" pos:column="41"/></name><operator pos:line="98" pos:column="41">-&gt;<pos:position pos:line="98" pos:column="46"/></operator><name pos:line="98" pos:column="43">output<pos:position pos:line="98" pos:column="49"/></name></name></expr></argument>)<pos:position pos:line="98" pos:column="50"/></argument_list></call></expr>;<pos:position pos:line="98" pos:column="51"/></expr_stmt>
        }<pos:position pos:line="99" pos:column="10"/></block></then></if>
        <expr_stmt><expr><call><name pos:line="100" pos:column="9">stream_joined<pos:position pos:line="100" pos:column="22"/></name><argument_list pos:line="100" pos:column="22">(<argument><expr><name pos:line="100" pos:column="23">m<pos:position pos:line="100" pos:column="24"/></name></expr></argument>, <argument><expr><name pos:line="100" pos:column="26">stream<pos:position pos:line="100" pos:column="32"/></name></expr></argument>)<pos:position pos:line="100" pos:column="33"/></argument_list></call></expr>;<pos:position pos:line="100" pos:column="34"/></expr_stmt>
    }<pos:position pos:line="101" pos:column="6"/></block></then></if></elseif>
    <elseif pos:line="102" pos:column="5">else <if pos:line="102" pos:column="10">if <condition pos:line="102" pos:column="13">(<expr><operator pos:line="102" pos:column="14">(<pos:position pos:line="102" pos:column="15"/></operator><name pos:line="102" pos:column="15">stream<pos:position pos:line="102" pos:column="21"/></name> <operator pos:line="102" pos:column="22">=<pos:position pos:line="102" pos:column="23"/></operator> <call><name pos:line="102" pos:column="24">h2_ihash_get<pos:position pos:line="102" pos:column="36"/></name><argument_list pos:line="102" pos:column="36">(<argument><expr><name><name pos:line="102" pos:column="37">m<pos:position pos:line="102" pos:column="38"/></name><operator pos:line="102" pos:column="38">-&gt;<pos:position pos:line="102" pos:column="43"/></operator><name pos:line="102" pos:column="40">spurge<pos:position pos:line="102" pos:column="46"/></name></name></expr></argument>, <argument><expr><name><name pos:line="102" pos:column="48">task<pos:position pos:line="102" pos:column="52"/></name><operator pos:line="102" pos:column="52">-&gt;<pos:position pos:line="102" pos:column="57"/></operator><name pos:line="102" pos:column="54">stream_id<pos:position pos:line="102" pos:column="63"/></name></name></expr></argument>)<pos:position pos:line="102" pos:column="64"/></argument_list></call><operator pos:line="102" pos:column="64">)<pos:position pos:line="102" pos:column="65"/></operator> <operator pos:line="102" pos:column="66">!=<pos:position pos:line="102" pos:column="68"/></operator> <name pos:line="102" pos:column="69">NULL<pos:position pos:line="102" pos:column="73"/></name></expr>)<pos:position pos:line="102" pos:column="74"/></condition><then pos:line="102" pos:column="74"> <block pos:line="102" pos:column="75">{
        <expr_stmt><expr><call><name pos:line="103" pos:column="9">ap_log_cerror<pos:position pos:line="103" pos:column="22"/></name><argument_list pos:line="103" pos:column="22">(<argument><expr><name pos:line="103" pos:column="23">APLOG_MARK<pos:position pos:line="103" pos:column="33"/></name></expr></argument>, <argument><expr><name pos:line="103" pos:column="35">APLOG_WARNING<pos:position pos:line="103" pos:column="48"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="103" pos:column="50">0<pos:position pos:line="103" pos:column="51"/></literal></expr></argument>, <argument><expr><name><name pos:line="103" pos:column="53">m<pos:position pos:line="103" pos:column="54"/></name><operator pos:line="103" pos:column="54">-&gt;<pos:position pos:line="103" pos:column="59"/></operator><name pos:line="103" pos:column="56">c<pos:position pos:line="103" pos:column="57"/></name></name></expr></argument>,   
                      <argument><expr><call><name pos:line="104" pos:column="23">H2_STRM_LOG<pos:position pos:line="104" pos:column="34"/></name><argument_list pos:line="104" pos:column="34">(<argument><expr><call><name pos:line="104" pos:column="35">APLOGNO<pos:position pos:line="104" pos:column="42"/></name><argument_list pos:line="104" pos:column="42">(<argument><expr><literal type="number" pos:line="104" pos:column="43">03517<pos:position pos:line="104" pos:column="48"/></literal></expr></argument>)<pos:position pos:line="104" pos:column="49"/></argument_list></call></expr></argument>, <argument><expr><name pos:line="104" pos:column="51">stream<pos:position pos:line="104" pos:column="57"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="104" pos:column="59">"already in spurge"<pos:position pos:line="104" pos:column="78"/></literal></expr></argument>)<pos:position pos:line="104" pos:column="79"/></argument_list></call></expr></argument>)<pos:position pos:line="104" pos:column="80"/></argument_list></call></expr>;<pos:position pos:line="104" pos:column="81"/></expr_stmt>
        <expr_stmt><expr><call><name pos:line="105" pos:column="9">ap_assert<pos:position pos:line="105" pos:column="18"/></name><argument_list pos:line="105" pos:column="18">(<argument><expr><literal type="string" pos:line="105" pos:column="19">"stream should not be in spurge"<pos:position pos:line="105" pos:column="51"/></literal> <operator pos:line="105" pos:column="52">==<pos:position pos:line="105" pos:column="54"/></operator> <name pos:line="105" pos:column="55">NULL<pos:position pos:line="105" pos:column="59"/></name></expr></argument>)<pos:position pos:line="105" pos:column="60"/></argument_list></call></expr>;<pos:position pos:line="105" pos:column="61"/></expr_stmt>
    }<pos:position pos:line="106" pos:column="6"/></block></then></if></elseif>
    <else pos:line="107" pos:column="5">else <block pos:line="107" pos:column="10">{
        <expr_stmt><expr><call><name pos:line="108" pos:column="9">ap_log_cerror<pos:position pos:line="108" pos:column="22"/></name><argument_list pos:line="108" pos:column="22">(<argument><expr><name pos:line="108" pos:column="23">APLOG_MARK<pos:position pos:line="108" pos:column="33"/></name></expr></argument>, <argument><expr><name pos:line="108" pos:column="35">APLOG_WARNING<pos:position pos:line="108" pos:column="48"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="108" pos:column="50">0<pos:position pos:line="108" pos:column="51"/></literal></expr></argument>, <argument><expr><name><name pos:line="108" pos:column="53">m<pos:position pos:line="108" pos:column="54"/></name><operator pos:line="108" pos:column="54">-&gt;<pos:position pos:line="108" pos:column="59"/></operator><name pos:line="108" pos:column="56">c<pos:position pos:line="108" pos:column="57"/></name></name></expr></argument>, <argument><expr><call><name pos:line="108" pos:column="59">APLOGNO<pos:position pos:line="108" pos:column="66"/></name><argument_list pos:line="108" pos:column="66">(<argument><expr><literal type="number" pos:line="108" pos:column="67">03518<pos:position pos:line="108" pos:column="72"/></literal></expr></argument>)<pos:position pos:line="108" pos:column="73"/></argument_list></call>
                      <literal type="string" pos:line="109" pos:column="23">"h2_mplx(%s): task_done, stream not found"<pos:position pos:line="109" pos:column="65"/></literal></expr></argument>, 
                      <argument><expr><name><name pos:line="110" pos:column="23">task<pos:position pos:line="110" pos:column="27"/></name><operator pos:line="110" pos:column="27">-&gt;<pos:position pos:line="110" pos:column="32"/></operator><name pos:line="110" pos:column="29">id<pos:position pos:line="110" pos:column="31"/></name></name></expr></argument>)<pos:position pos:line="110" pos:column="32"/></argument_list></call></expr>;<pos:position pos:line="110" pos:column="33"/></expr_stmt>
        <expr_stmt><expr><call><name pos:line="111" pos:column="9">ap_assert<pos:position pos:line="111" pos:column="18"/></name><argument_list pos:line="111" pos:column="18">(<argument><expr><literal type="string" pos:line="111" pos:column="19">"stream should still be available"<pos:position pos:line="111" pos:column="53"/></literal> <operator pos:line="111" pos:column="54">==<pos:position pos:line="111" pos:column="56"/></operator> <name pos:line="111" pos:column="57">NULL<pos:position pos:line="111" pos:column="61"/></name></expr></argument>)<pos:position pos:line="111" pos:column="62"/></argument_list></call></expr>;<pos:position pos:line="111" pos:column="63"/></expr_stmt>
    }<pos:position pos:line="112" pos:column="6"/></block></else></if>
}<pos:position pos:line="113" pos:column="2"/></block></function></unit>

<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/httpd/gumtree/httpd_repos_function_1928_httpd-2.4.12.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">int<pos:position pos:line="1" pos:column="11"/></name></type> <name pos:line="1" pos:column="12">proxy_connect_handler<pos:position pos:line="1" pos:column="33"/></name><parameter_list pos:line="1" pos:column="33">(<parameter><decl><type><name pos:line="1" pos:column="34">request_rec<pos:position pos:line="1" pos:column="45"/></name> <modifier pos:line="1" pos:column="46">*<pos:position pos:line="1" pos:column="47"/></modifier></type><name pos:line="1" pos:column="47">r<pos:position pos:line="1" pos:column="48"/></name></decl></parameter>, <parameter><decl><type><name pos:line="1" pos:column="50">proxy_worker<pos:position pos:line="1" pos:column="62"/></name> <modifier pos:line="1" pos:column="63">*<pos:position pos:line="1" pos:column="64"/></modifier></type><name pos:line="1" pos:column="64">worker<pos:position pos:line="1" pos:column="70"/></name></decl></parameter>,
                                 <parameter><decl><type><name pos:line="2" pos:column="34">proxy_server_conf<pos:position pos:line="2" pos:column="51"/></name> <modifier pos:line="2" pos:column="52">*<pos:position pos:line="2" pos:column="53"/></modifier></type><name pos:line="2" pos:column="53">conf<pos:position pos:line="2" pos:column="57"/></name></decl></parameter>,
                                 <parameter><decl><type><name pos:line="3" pos:column="34">char<pos:position pos:line="3" pos:column="38"/></name> <modifier pos:line="3" pos:column="39">*<pos:position pos:line="3" pos:column="40"/></modifier></type><name pos:line="3" pos:column="40">url<pos:position pos:line="3" pos:column="43"/></name></decl></parameter>, <parameter><decl><type><specifier pos:line="3" pos:column="45">const<pos:position pos:line="3" pos:column="50"/></specifier> <name pos:line="3" pos:column="51">char<pos:position pos:line="3" pos:column="55"/></name> <modifier pos:line="3" pos:column="56">*<pos:position pos:line="3" pos:column="57"/></modifier></type><name pos:line="3" pos:column="57">proxyname<pos:position pos:line="3" pos:column="66"/></name></decl></parameter>,
                                 <parameter><decl><type><name pos:line="4" pos:column="34">apr_port_t<pos:position pos:line="4" pos:column="44"/></name></type> <name pos:line="4" pos:column="45">proxyport<pos:position pos:line="4" pos:column="54"/></name></decl></parameter>)<pos:position pos:line="4" pos:column="55"/></parameter_list>
<block pos:line="5" pos:column="1">{
    <decl_stmt><decl><type><name pos:line="6" pos:column="5">connect_conf<pos:position pos:line="6" pos:column="17"/></name> <modifier pos:line="6" pos:column="18">*<pos:position pos:line="6" pos:column="19"/></modifier></type><name pos:line="6" pos:column="19">c_conf<pos:position pos:line="6" pos:column="25"/></name> <init pos:line="6" pos:column="26">=
        <expr><call><name pos:line="7" pos:column="9">ap_get_module_config<pos:position pos:line="7" pos:column="29"/></name><argument_list pos:line="7" pos:column="29">(<argument><expr><name><name pos:line="7" pos:column="30">r<pos:position pos:line="7" pos:column="31"/></name><operator pos:line="7" pos:column="31">-&gt;<pos:position pos:line="7" pos:column="36"/></operator><name pos:line="7" pos:column="33">server<pos:position pos:line="7" pos:column="39"/></name><operator pos:line="7" pos:column="39">-&gt;<pos:position pos:line="7" pos:column="44"/></operator><name pos:line="7" pos:column="41">module_config<pos:position pos:line="7" pos:column="54"/></name></name></expr></argument>, <argument><expr><operator pos:line="7" pos:column="56">&amp;<pos:position pos:line="7" pos:column="61"/></operator><name pos:line="7" pos:column="57">proxy_connect_module<pos:position pos:line="7" pos:column="77"/></name></expr></argument>)<pos:position pos:line="7" pos:column="78"/></argument_list></call></expr></init></decl>;<pos:position pos:line="7" pos:column="79"/></decl_stmt>

    <decl_stmt><decl><type><name pos:line="9" pos:column="5">apr_pool_t<pos:position pos:line="9" pos:column="15"/></name> <modifier pos:line="9" pos:column="16">*<pos:position pos:line="9" pos:column="17"/></modifier></type><name pos:line="9" pos:column="17">p<pos:position pos:line="9" pos:column="18"/></name> <init pos:line="9" pos:column="19">= <expr><name><name pos:line="9" pos:column="21">r<pos:position pos:line="9" pos:column="22"/></name><operator pos:line="9" pos:column="22">-&gt;<pos:position pos:line="9" pos:column="27"/></operator><name pos:line="9" pos:column="24">pool<pos:position pos:line="9" pos:column="28"/></name></name></expr></init></decl>;<pos:position pos:line="9" pos:column="29"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="10" pos:column="5">apr_socket_t<pos:position pos:line="10" pos:column="17"/></name> <modifier pos:line="10" pos:column="18">*<pos:position pos:line="10" pos:column="19"/></modifier></type><name pos:line="10" pos:column="19">sock<pos:position pos:line="10" pos:column="23"/></name></decl>;<pos:position pos:line="10" pos:column="24"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="11" pos:column="5">conn_rec<pos:position pos:line="11" pos:column="13"/></name> <modifier pos:line="11" pos:column="14">*<pos:position pos:line="11" pos:column="15"/></modifier></type><name pos:line="11" pos:column="15">c<pos:position pos:line="11" pos:column="16"/></name> <init pos:line="11" pos:column="17">= <expr><name><name pos:line="11" pos:column="19">r<pos:position pos:line="11" pos:column="20"/></name><operator pos:line="11" pos:column="20">-&gt;<pos:position pos:line="11" pos:column="25"/></operator><name pos:line="11" pos:column="22">connection<pos:position pos:line="11" pos:column="32"/></name></name></expr></init></decl>;<pos:position pos:line="11" pos:column="33"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="12" pos:column="5">conn_rec<pos:position pos:line="12" pos:column="13"/></name> <modifier pos:line="12" pos:column="14">*<pos:position pos:line="12" pos:column="15"/></modifier></type><name pos:line="12" pos:column="15">backconn<pos:position pos:line="12" pos:column="23"/></name></decl>;<pos:position pos:line="12" pos:column="24"/></decl_stmt>

    <decl_stmt><decl><type><name pos:line="14" pos:column="5">apr_bucket_brigade<pos:position pos:line="14" pos:column="23"/></name> <modifier pos:line="14" pos:column="24">*<pos:position pos:line="14" pos:column="25"/></modifier></type><name pos:line="14" pos:column="25">bb<pos:position pos:line="14" pos:column="27"/></name> <init pos:line="14" pos:column="28">= <expr><call><name pos:line="14" pos:column="30">apr_brigade_create<pos:position pos:line="14" pos:column="48"/></name><argument_list pos:line="14" pos:column="48">(<argument><expr><name pos:line="14" pos:column="49">p<pos:position pos:line="14" pos:column="50"/></name></expr></argument>, <argument><expr><name><name pos:line="14" pos:column="52">c<pos:position pos:line="14" pos:column="53"/></name><operator pos:line="14" pos:column="53">-&gt;<pos:position pos:line="14" pos:column="58"/></operator><name pos:line="14" pos:column="55">bucket_alloc<pos:position pos:line="14" pos:column="67"/></name></name></expr></argument>)<pos:position pos:line="14" pos:column="68"/></argument_list></call></expr></init></decl>;<pos:position pos:line="14" pos:column="69"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="15" pos:column="5">apr_status_t<pos:position pos:line="15" pos:column="17"/></name></type> <name pos:line="15" pos:column="18">rv<pos:position pos:line="15" pos:column="20"/></name></decl>;<pos:position pos:line="15" pos:column="21"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="16" pos:column="5">apr_size_t<pos:position pos:line="16" pos:column="15"/></name></type> <name pos:line="16" pos:column="16">nbytes<pos:position pos:line="16" pos:column="22"/></name></decl>;<pos:position pos:line="16" pos:column="23"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="17" pos:column="5">char<pos:position pos:line="17" pos:column="9"/></name></type> <name><name pos:line="17" pos:column="10">buffer<pos:position pos:line="17" pos:column="16"/></name><index pos:line="17" pos:column="16">[<expr><name pos:line="17" pos:column="17">HUGE_STRING_LEN<pos:position pos:line="17" pos:column="32"/></name></expr>]<pos:position pos:line="17" pos:column="33"/></index></name></decl>;<pos:position pos:line="17" pos:column="34"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="18" pos:column="5">apr_socket_t<pos:position pos:line="18" pos:column="17"/></name> <modifier pos:line="18" pos:column="18">*<pos:position pos:line="18" pos:column="19"/></modifier></type><name pos:line="18" pos:column="19">client_socket<pos:position pos:line="18" pos:column="32"/></name> <init pos:line="18" pos:column="33">= <expr><call><name pos:line="18" pos:column="35">ap_get_conn_socket<pos:position pos:line="18" pos:column="53"/></name><argument_list pos:line="18" pos:column="53">(<argument><expr><name pos:line="18" pos:column="54">c<pos:position pos:line="18" pos:column="55"/></name></expr></argument>)<pos:position pos:line="18" pos:column="56"/></argument_list></call></expr></init></decl>;<pos:position pos:line="18" pos:column="57"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="19" pos:column="5">int<pos:position pos:line="19" pos:column="8"/></name></type> <name pos:line="19" pos:column="9">failed<pos:position pos:line="19" pos:column="15"/></name></decl>, <decl><type ref="prev"/><name pos:line="19" pos:column="17">rc<pos:position pos:line="19" pos:column="19"/></name></decl>;<pos:position pos:line="19" pos:column="20"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="20" pos:column="5">apr_pollset_t<pos:position pos:line="20" pos:column="18"/></name> <modifier pos:line="20" pos:column="19">*<pos:position pos:line="20" pos:column="20"/></modifier></type><name pos:line="20" pos:column="20">pollset<pos:position pos:line="20" pos:column="27"/></name></decl>;<pos:position pos:line="20" pos:column="28"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="21" pos:column="5">apr_pollfd_t<pos:position pos:line="21" pos:column="17"/></name></type> <name pos:line="21" pos:column="18">pollfd<pos:position pos:line="21" pos:column="24"/></name></decl>;<pos:position pos:line="21" pos:column="25"/></decl_stmt>
    <decl_stmt><decl><type><specifier pos:line="22" pos:column="5">const<pos:position pos:line="22" pos:column="10"/></specifier> <name pos:line="22" pos:column="11">apr_pollfd_t<pos:position pos:line="22" pos:column="23"/></name> <modifier pos:line="22" pos:column="24">*<pos:position pos:line="22" pos:column="25"/></modifier></type><name pos:line="22" pos:column="25">signalled<pos:position pos:line="22" pos:column="34"/></name></decl>;<pos:position pos:line="22" pos:column="35"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="23" pos:column="5">apr_int32_t<pos:position pos:line="23" pos:column="16"/></name></type> <name pos:line="23" pos:column="17">pollcnt<pos:position pos:line="23" pos:column="24"/></name></decl>, <decl><type ref="prev"/><name pos:line="23" pos:column="26">pi<pos:position pos:line="23" pos:column="28"/></name></decl>;<pos:position pos:line="23" pos:column="29"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="24" pos:column="5">apr_int16_t<pos:position pos:line="24" pos:column="16"/></name></type> <name pos:line="24" pos:column="17">pollevent<pos:position pos:line="24" pos:column="26"/></name></decl>;<pos:position pos:line="24" pos:column="27"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="25" pos:column="5">apr_sockaddr_t<pos:position pos:line="25" pos:column="19"/></name> <modifier pos:line="25" pos:column="20">*<pos:position pos:line="25" pos:column="21"/></modifier></type><name pos:line="25" pos:column="21">nexthop<pos:position pos:line="25" pos:column="28"/></name></decl>;<pos:position pos:line="25" pos:column="29"/></decl_stmt>

    <decl_stmt><decl><type><name pos:line="27" pos:column="5">apr_uri_t<pos:position pos:line="27" pos:column="14"/></name></type> <name pos:line="27" pos:column="15">uri<pos:position pos:line="27" pos:column="18"/></name></decl>;<pos:position pos:line="27" pos:column="19"/></decl_stmt>
    <decl_stmt><decl><type><specifier pos:line="28" pos:column="5">const<pos:position pos:line="28" pos:column="10"/></specifier> <name pos:line="28" pos:column="11">char<pos:position pos:line="28" pos:column="15"/></name> <modifier pos:line="28" pos:column="16">*<pos:position pos:line="28" pos:column="17"/></modifier></type><name pos:line="28" pos:column="17">connectname<pos:position pos:line="28" pos:column="28"/></name></decl>;<pos:position pos:line="28" pos:column="29"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="29" pos:column="5">apr_port_t<pos:position pos:line="29" pos:column="15"/></name></type> <name pos:line="29" pos:column="16">connectport<pos:position pos:line="29" pos:column="27"/></name> <init pos:line="29" pos:column="28">= <expr><literal type="number" pos:line="29" pos:column="30">0<pos:position pos:line="29" pos:column="31"/></literal></expr></init></decl>;<pos:position pos:line="29" pos:column="32"/></decl_stmt>

    <comment type="block" pos:line="31" pos:column="5">/* is this for us? */</comment>
    <if pos:line="32" pos:column="5">if <condition pos:line="32" pos:column="8">(<expr><name><name pos:line="32" pos:column="9">r<pos:position pos:line="32" pos:column="10"/></name><operator pos:line="32" pos:column="10">-&gt;<pos:position pos:line="32" pos:column="15"/></operator><name pos:line="32" pos:column="12">method_number<pos:position pos:line="32" pos:column="25"/></name></name> <operator pos:line="32" pos:column="26">!=<pos:position pos:line="32" pos:column="28"/></operator> <name pos:line="32" pos:column="29">M_CONNECT<pos:position pos:line="32" pos:column="38"/></name></expr>)<pos:position pos:line="32" pos:column="39"/></condition><then pos:line="32" pos:column="39"> <block pos:line="32" pos:column="40">{
        <expr_stmt><expr><call><name pos:line="33" pos:column="9">ap_log_rerror<pos:position pos:line="33" pos:column="22"/></name><argument_list pos:line="33" pos:column="22">(<argument><expr><name pos:line="33" pos:column="23">APLOG_MARK<pos:position pos:line="33" pos:column="33"/></name></expr></argument>, <argument><expr><name pos:line="33" pos:column="35">APLOG_TRACE1<pos:position pos:line="33" pos:column="47"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="33" pos:column="49">0<pos:position pos:line="33" pos:column="50"/></literal></expr></argument>, <argument><expr><name pos:line="33" pos:column="52">r<pos:position pos:line="33" pos:column="53"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="33" pos:column="55">"declining URL %s"<pos:position pos:line="33" pos:column="73"/></literal></expr></argument>, <argument><expr><name pos:line="33" pos:column="75">url<pos:position pos:line="33" pos:column="78"/></name></expr></argument>)<pos:position pos:line="33" pos:column="79"/></argument_list></call></expr>;<pos:position pos:line="33" pos:column="80"/></expr_stmt>
        <return pos:line="34" pos:column="9">return <expr><name pos:line="34" pos:column="16">DECLINED<pos:position pos:line="34" pos:column="24"/></name></expr>;<pos:position pos:line="34" pos:column="25"/></return>
    }<pos:position pos:line="35" pos:column="6"/></block></then></if>
    <expr_stmt><expr><call><name pos:line="36" pos:column="5">ap_log_rerror<pos:position pos:line="36" pos:column="18"/></name><argument_list pos:line="36" pos:column="18">(<argument><expr><name pos:line="36" pos:column="19">APLOG_MARK<pos:position pos:line="36" pos:column="29"/></name></expr></argument>, <argument><expr><name pos:line="36" pos:column="31">APLOG_TRACE1<pos:position pos:line="36" pos:column="43"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="36" pos:column="45">0<pos:position pos:line="36" pos:column="46"/></literal></expr></argument>, <argument><expr><name pos:line="36" pos:column="48">r<pos:position pos:line="36" pos:column="49"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="36" pos:column="51">"serving URL %s"<pos:position pos:line="36" pos:column="67"/></literal></expr></argument>, <argument><expr><name pos:line="36" pos:column="69">url<pos:position pos:line="36" pos:column="72"/></name></expr></argument>)<pos:position pos:line="36" pos:column="73"/></argument_list></call></expr>;<pos:position pos:line="36" pos:column="74"/></expr_stmt>


    <comment type="block" pos:line="39" pos:column="5">/*
     * Step One: Determine Who To Connect To
     *
     * Break up the URL to determine the host to connect to
     */</comment>

    <comment type="block" pos:line="45" pos:column="5">/* we break the URL into host, port, uri */</comment>
    <if pos:line="46" pos:column="5">if <condition pos:line="46" pos:column="8">(<expr><name pos:line="46" pos:column="9">APR_SUCCESS<pos:position pos:line="46" pos:column="20"/></name> <operator pos:line="46" pos:column="21">!=<pos:position pos:line="46" pos:column="23"/></operator> <call><name pos:line="46" pos:column="24">apr_uri_parse_hostinfo<pos:position pos:line="46" pos:column="46"/></name><argument_list pos:line="46" pos:column="46">(<argument><expr><name pos:line="46" pos:column="47">p<pos:position pos:line="46" pos:column="48"/></name></expr></argument>, <argument><expr><name pos:line="46" pos:column="50">url<pos:position pos:line="46" pos:column="53"/></name></expr></argument>, <argument><expr><operator pos:line="46" pos:column="55">&amp;<pos:position pos:line="46" pos:column="60"/></operator><name pos:line="46" pos:column="56">uri<pos:position pos:line="46" pos:column="59"/></name></expr></argument>)<pos:position pos:line="46" pos:column="60"/></argument_list></call></expr>)<pos:position pos:line="46" pos:column="61"/></condition><then pos:line="46" pos:column="61"> <block pos:line="46" pos:column="62">{
        <return pos:line="47" pos:column="9">return <expr><call><name pos:line="47" pos:column="16">ap_proxyerror<pos:position pos:line="47" pos:column="29"/></name><argument_list pos:line="47" pos:column="29">(<argument><expr><name pos:line="47" pos:column="30">r<pos:position pos:line="47" pos:column="31"/></name></expr></argument>, <argument><expr><name pos:line="47" pos:column="33">HTTP_BAD_REQUEST<pos:position pos:line="47" pos:column="49"/></name></expr></argument>,
                             <argument><expr><call><name pos:line="48" pos:column="30">apr_pstrcat<pos:position pos:line="48" pos:column="41"/></name><argument_list pos:line="48" pos:column="41">(<argument><expr><name pos:line="48" pos:column="42">p<pos:position pos:line="48" pos:column="43"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="48" pos:column="45">"URI cannot be parsed: "<pos:position pos:line="48" pos:column="69"/></literal></expr></argument>, <argument><expr><name pos:line="48" pos:column="71">url<pos:position pos:line="48" pos:column="74"/></name></expr></argument>,
                                         <argument><expr><name pos:line="49" pos:column="42">NULL<pos:position pos:line="49" pos:column="46"/></name></expr></argument>)<pos:position pos:line="49" pos:column="47"/></argument_list></call></expr></argument>)<pos:position pos:line="49" pos:column="48"/></argument_list></call></expr>;<pos:position pos:line="49" pos:column="49"/></return>
    }<pos:position pos:line="50" pos:column="6"/></block></then></if>

    <expr_stmt><expr><call><name pos:line="52" pos:column="5">ap_log_rerror<pos:position pos:line="52" pos:column="18"/></name><argument_list pos:line="52" pos:column="18">(<argument><expr><name pos:line="52" pos:column="19">APLOG_MARK<pos:position pos:line="52" pos:column="29"/></name></expr></argument>, <argument><expr><name pos:line="52" pos:column="31">APLOG_DEBUG<pos:position pos:line="52" pos:column="42"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="52" pos:column="44">0<pos:position pos:line="52" pos:column="45"/></literal></expr></argument>, <argument><expr><name pos:line="52" pos:column="47">r<pos:position pos:line="52" pos:column="48"/></name></expr></argument>, <argument><expr><call><name pos:line="52" pos:column="50">APLOGNO<pos:position pos:line="52" pos:column="57"/></name><argument_list pos:line="52" pos:column="57">(<argument><expr><literal type="number" pos:line="52" pos:column="58">01019<pos:position pos:line="52" pos:column="63"/></literal></expr></argument>)<pos:position pos:line="52" pos:column="64"/></argument_list></call>
                  <literal type="string" pos:line="53" pos:column="19">"connecting %s to %s:%d"<pos:position pos:line="53" pos:column="43"/></literal></expr></argument>, <argument><expr><name pos:line="53" pos:column="45">url<pos:position pos:line="53" pos:column="48"/></name></expr></argument>, <argument><expr><name><name pos:line="53" pos:column="50">uri<pos:position pos:line="53" pos:column="53"/></name><operator pos:line="53" pos:column="53">.<pos:position pos:line="53" pos:column="54"/></operator><name pos:line="53" pos:column="54">hostname<pos:position pos:line="53" pos:column="62"/></name></name></expr></argument>, <argument><expr><name><name pos:line="53" pos:column="64">uri<pos:position pos:line="53" pos:column="67"/></name><operator pos:line="53" pos:column="67">.<pos:position pos:line="53" pos:column="68"/></operator><name pos:line="53" pos:column="68">port<pos:position pos:line="53" pos:column="72"/></name></name></expr></argument>)<pos:position pos:line="53" pos:column="73"/></argument_list></call></expr>;<pos:position pos:line="53" pos:column="74"/></expr_stmt>

    <comment type="block" pos:line="55" pos:column="5">/* Determine host/port of next hop; from request URI or of a proxy. */</comment>
    <expr_stmt><expr><name pos:line="56" pos:column="5">connectname<pos:position pos:line="56" pos:column="16"/></name> <operator pos:line="56" pos:column="17">=<pos:position pos:line="56" pos:column="18"/></operator> <ternary><condition><expr><name pos:line="56" pos:column="19">proxyname<pos:position pos:line="56" pos:column="28"/></name></expr> ?<pos:position pos:line="56" pos:column="30"/></condition><then pos:line="56" pos:column="30"> <expr><name pos:line="56" pos:column="31">proxyname<pos:position pos:line="56" pos:column="40"/></name></expr> <pos:position pos:line="56" pos:column="41"/></then><else pos:line="56" pos:column="41">: <expr><name><name pos:line="56" pos:column="43">uri<pos:position pos:line="56" pos:column="46"/></name><operator pos:line="56" pos:column="46">.<pos:position pos:line="56" pos:column="47"/></operator><name pos:line="56" pos:column="47">hostname<pos:position pos:line="56" pos:column="55"/></name></name></expr></else></ternary></expr>;<pos:position pos:line="56" pos:column="56"/></expr_stmt>
    <expr_stmt><expr><name pos:line="57" pos:column="5">connectport<pos:position pos:line="57" pos:column="16"/></name> <operator pos:line="57" pos:column="17">=<pos:position pos:line="57" pos:column="18"/></operator> <ternary><condition><expr><name pos:line="57" pos:column="19">proxyname<pos:position pos:line="57" pos:column="28"/></name></expr> ?<pos:position pos:line="57" pos:column="30"/></condition><then pos:line="57" pos:column="30"> <expr><name pos:line="57" pos:column="31">proxyport<pos:position pos:line="57" pos:column="40"/></name></expr> <pos:position pos:line="57" pos:column="41"/></then><else pos:line="57" pos:column="41">: <expr><name><name pos:line="57" pos:column="43">uri<pos:position pos:line="57" pos:column="46"/></name><operator pos:line="57" pos:column="46">.<pos:position pos:line="57" pos:column="47"/></operator><name pos:line="57" pos:column="47">port<pos:position pos:line="57" pos:column="51"/></name></name></expr></else></ternary></expr>;<pos:position pos:line="57" pos:column="52"/></expr_stmt>

    <comment type="block" pos:line="59" pos:column="5">/* Do a DNS lookup for the next hop */</comment>
    <expr_stmt><expr><name pos:line="60" pos:column="5">rv<pos:position pos:line="60" pos:column="7"/></name> <operator pos:line="60" pos:column="8">=<pos:position pos:line="60" pos:column="9"/></operator> <call><name pos:line="60" pos:column="10">apr_sockaddr_info_get<pos:position pos:line="60" pos:column="31"/></name><argument_list pos:line="60" pos:column="31">(<argument><expr><operator pos:line="60" pos:column="32">&amp;<pos:position pos:line="60" pos:column="37"/></operator><name pos:line="60" pos:column="33">nexthop<pos:position pos:line="60" pos:column="40"/></name></expr></argument>, <argument><expr><name pos:line="60" pos:column="42">connectname<pos:position pos:line="60" pos:column="53"/></name></expr></argument>, <argument><expr><name pos:line="60" pos:column="55">APR_UNSPEC<pos:position pos:line="60" pos:column="65"/></name></expr></argument>, 
                               <argument><expr><name pos:line="61" pos:column="32">connectport<pos:position pos:line="61" pos:column="43"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="61" pos:column="45">0<pos:position pos:line="61" pos:column="46"/></literal></expr></argument>, <argument><expr><name pos:line="61" pos:column="48">p<pos:position pos:line="61" pos:column="49"/></name></expr></argument>)<pos:position pos:line="61" pos:column="50"/></argument_list></call></expr>;<pos:position pos:line="61" pos:column="51"/></expr_stmt>
    <if pos:line="62" pos:column="5">if <condition pos:line="62" pos:column="8">(<expr><name pos:line="62" pos:column="9">rv<pos:position pos:line="62" pos:column="11"/></name> <operator pos:line="62" pos:column="12">!=<pos:position pos:line="62" pos:column="14"/></operator> <name pos:line="62" pos:column="15">APR_SUCCESS<pos:position pos:line="62" pos:column="26"/></name></expr>)<pos:position pos:line="62" pos:column="27"/></condition><then pos:line="62" pos:column="27"> <block pos:line="62" pos:column="28">{
        <expr_stmt><expr><call><name pos:line="63" pos:column="9">ap_log_rerror<pos:position pos:line="63" pos:column="22"/></name><argument_list pos:line="63" pos:column="22">(<argument><expr><name pos:line="63" pos:column="23">APLOG_MARK<pos:position pos:line="63" pos:column="33"/></name></expr></argument>, <argument><expr><name pos:line="63" pos:column="35">APLOG_ERR<pos:position pos:line="63" pos:column="44"/></name></expr></argument>, <argument><expr><name pos:line="63" pos:column="46">rv<pos:position pos:line="63" pos:column="48"/></name></expr></argument>, <argument><expr><name pos:line="63" pos:column="50">r<pos:position pos:line="63" pos:column="51"/></name></expr></argument>, <argument><expr><call><name pos:line="63" pos:column="53">APLOGNO<pos:position pos:line="63" pos:column="60"/></name><argument_list pos:line="63" pos:column="60">(<argument><expr><literal type="number" pos:line="63" pos:column="61">02327<pos:position pos:line="63" pos:column="66"/></literal></expr></argument>)<pos:position pos:line="63" pos:column="67"/></argument_list></call>
                      <literal type="string" pos:line="64" pos:column="23">"failed to resolve hostname '%s'"<pos:position pos:line="64" pos:column="56"/></literal></expr></argument>, <argument><expr><name pos:line="64" pos:column="58">connectname<pos:position pos:line="64" pos:column="69"/></name></expr></argument>)<pos:position pos:line="64" pos:column="70"/></argument_list></call></expr>;<pos:position pos:line="64" pos:column="71"/></expr_stmt>
        <return pos:line="65" pos:column="9">return <expr><call><name pos:line="65" pos:column="16">ap_proxyerror<pos:position pos:line="65" pos:column="29"/></name><argument_list pos:line="65" pos:column="29">(<argument><expr><name pos:line="65" pos:column="30">r<pos:position pos:line="65" pos:column="31"/></name></expr></argument>, <argument><expr><name pos:line="65" pos:column="33">HTTP_BAD_GATEWAY<pos:position pos:line="65" pos:column="49"/></name></expr></argument>,
                             <argument><expr><call><name pos:line="66" pos:column="30">apr_pstrcat<pos:position pos:line="66" pos:column="41"/></name><argument_list pos:line="66" pos:column="41">(<argument><expr><name pos:line="66" pos:column="42">p<pos:position pos:line="66" pos:column="43"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="66" pos:column="45">"DNS lookup failure for: "<pos:position pos:line="66" pos:column="71"/></literal></expr></argument>,
                                         <argument><expr><name pos:line="67" pos:column="42">connectname<pos:position pos:line="67" pos:column="53"/></name></expr></argument>, <argument><expr><name pos:line="67" pos:column="55">NULL<pos:position pos:line="67" pos:column="59"/></name></expr></argument>)<pos:position pos:line="67" pos:column="60"/></argument_list></call></expr></argument>)<pos:position pos:line="67" pos:column="61"/></argument_list></call></expr>;<pos:position pos:line="67" pos:column="62"/></return>
    }<pos:position pos:line="68" pos:column="6"/></block></then></if>

    <comment type="block" pos:line="70" pos:column="5">/* Check ProxyBlock directive on the hostname/address.  */</comment>
    <if pos:line="71" pos:column="5">if <condition pos:line="71" pos:column="8">(<expr><call><name pos:line="71" pos:column="9">ap_proxy_checkproxyblock2<pos:position pos:line="71" pos:column="34"/></name><argument_list pos:line="71" pos:column="34">(<argument><expr><name pos:line="71" pos:column="35">r<pos:position pos:line="71" pos:column="36"/></name></expr></argument>, <argument><expr><name pos:line="71" pos:column="38">conf<pos:position pos:line="71" pos:column="42"/></name></expr></argument>, <argument><expr><name><name pos:line="71" pos:column="44">uri<pos:position pos:line="71" pos:column="47"/></name><operator pos:line="71" pos:column="47">.<pos:position pos:line="71" pos:column="48"/></operator><name pos:line="71" pos:column="48">hostname<pos:position pos:line="71" pos:column="56"/></name></name></expr></argument>, 
                                 <argument><expr><ternary><condition><expr><name pos:line="72" pos:column="34">proxyname<pos:position pos:line="72" pos:column="43"/></name></expr> ?<pos:position pos:line="72" pos:column="45"/></condition><then pos:line="72" pos:column="45"> <expr><name pos:line="72" pos:column="46">NULL<pos:position pos:line="72" pos:column="50"/></name></expr> <pos:position pos:line="72" pos:column="51"/></then><else pos:line="72" pos:column="51">: <expr><name pos:line="72" pos:column="53">nexthop<pos:position pos:line="72" pos:column="60"/></name></expr></else></ternary></expr></argument>)<pos:position pos:line="72" pos:column="61"/></argument_list></call> <operator pos:line="72" pos:column="62">!=<pos:position pos:line="72" pos:column="64"/></operator> <name pos:line="72" pos:column="65">OK<pos:position pos:line="72" pos:column="67"/></name></expr>)<pos:position pos:line="72" pos:column="68"/></condition><then pos:line="72" pos:column="68"> <block pos:line="72" pos:column="69">{
        <return pos:line="73" pos:column="9">return <expr><call><name pos:line="73" pos:column="16">ap_proxyerror<pos:position pos:line="73" pos:column="29"/></name><argument_list pos:line="73" pos:column="29">(<argument><expr><name pos:line="73" pos:column="30">r<pos:position pos:line="73" pos:column="31"/></name></expr></argument>, <argument><expr><name pos:line="73" pos:column="33">HTTP_FORBIDDEN<pos:position pos:line="73" pos:column="47"/></name></expr></argument>,
                             <argument><expr><literal type="string" pos:line="74" pos:column="30">"Connect to remote machine blocked"<pos:position pos:line="74" pos:column="65"/></literal></expr></argument>)<pos:position pos:line="74" pos:column="66"/></argument_list></call></expr>;<pos:position pos:line="74" pos:column="67"/></return>
    }<pos:position pos:line="75" pos:column="6"/></block></then></if>

    <expr_stmt><expr><call><name pos:line="77" pos:column="5">ap_log_rerror<pos:position pos:line="77" pos:column="18"/></name><argument_list pos:line="77" pos:column="18">(<argument><expr><name pos:line="77" pos:column="19">APLOG_MARK<pos:position pos:line="77" pos:column="29"/></name></expr></argument>, <argument><expr><name pos:line="77" pos:column="31">APLOG_TRACE1<pos:position pos:line="77" pos:column="43"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="77" pos:column="45">0<pos:position pos:line="77" pos:column="46"/></literal></expr></argument>, <argument><expr><name pos:line="77" pos:column="48">r<pos:position pos:line="77" pos:column="49"/></name></expr></argument>,
                  <argument><expr><literal type="string" pos:line="78" pos:column="19">"connecting to remote proxy %s on port %d"<pos:position pos:line="78" pos:column="61"/></literal></expr></argument>,
                  <argument><expr><name pos:line="79" pos:column="19">connectname<pos:position pos:line="79" pos:column="30"/></name></expr></argument>, <argument><expr><name pos:line="79" pos:column="32">connectport<pos:position pos:line="79" pos:column="43"/></name></expr></argument>)<pos:position pos:line="79" pos:column="44"/></argument_list></call></expr>;<pos:position pos:line="79" pos:column="45"/></expr_stmt>

    <comment type="block" pos:line="81" pos:column="5">/* Check if it is an allowed port */</comment>
    <if pos:line="82" pos:column="5">if<condition pos:line="82" pos:column="7">(<expr><operator pos:line="82" pos:column="8">!<pos:position pos:line="82" pos:column="9"/></operator><call><name pos:line="82" pos:column="9">allowed_port<pos:position pos:line="82" pos:column="21"/></name><argument_list pos:line="82" pos:column="21">(<argument><expr><name pos:line="82" pos:column="22">c_conf<pos:position pos:line="82" pos:column="28"/></name></expr></argument>, <argument><expr><name><name pos:line="82" pos:column="30">uri<pos:position pos:line="82" pos:column="33"/></name><operator pos:line="82" pos:column="33">.<pos:position pos:line="82" pos:column="34"/></operator><name pos:line="82" pos:column="34">port<pos:position pos:line="82" pos:column="38"/></name></name></expr></argument>)<pos:position pos:line="82" pos:column="39"/></argument_list></call></expr>)<pos:position pos:line="82" pos:column="40"/></condition><then pos:line="82" pos:column="40"> <block pos:line="82" pos:column="41">{
              <return pos:line="83" pos:column="15">return <expr><call><name pos:line="83" pos:column="22">ap_proxyerror<pos:position pos:line="83" pos:column="35"/></name><argument_list pos:line="83" pos:column="35">(<argument><expr><name pos:line="83" pos:column="36">r<pos:position pos:line="83" pos:column="37"/></name></expr></argument>, <argument><expr><name pos:line="83" pos:column="39">HTTP_FORBIDDEN<pos:position pos:line="83" pos:column="53"/></name></expr></argument>,
                                   <argument><expr><literal type="string" pos:line="84" pos:column="36">"Connect to remote machine blocked"<pos:position pos:line="84" pos:column="71"/></literal></expr></argument>)<pos:position pos:line="84" pos:column="72"/></argument_list></call></expr>;<pos:position pos:line="84" pos:column="73"/></return>
    }<pos:position pos:line="85" pos:column="6"/></block></then></if>

    <comment type="block" pos:line="87" pos:column="5">/*
     * Step Two: Make the Connection
     *
     * We have determined who to connect to. Now make the connection.
     */</comment>

    <comment type="block" pos:line="93" pos:column="5">/*
     * At this point we have a list of one or more IP addresses of
     * the machine to connect to. If configured, reorder this
     * list so that the "best candidate" is first try. "best
     * candidate" could mean the least loaded server, the fastest
     * responding server, whatever.
     *
     * For now we do nothing, ie we get DNS round robin.
     * XXX FIXME
     */</comment>
    <expr_stmt><expr><name pos:line="103" pos:column="5">failed<pos:position pos:line="103" pos:column="11"/></name> <operator pos:line="103" pos:column="12">=<pos:position pos:line="103" pos:column="13"/></operator> <call><name pos:line="103" pos:column="14">ap_proxy_connect_to_backend<pos:position pos:line="103" pos:column="41"/></name><argument_list pos:line="103" pos:column="41">(<argument><expr><operator pos:line="103" pos:column="42">&amp;<pos:position pos:line="103" pos:column="47"/></operator><name pos:line="103" pos:column="43">sock<pos:position pos:line="103" pos:column="47"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="103" pos:column="49">"CONNECT"<pos:position pos:line="103" pos:column="58"/></literal></expr></argument>, <argument><expr><name pos:line="103" pos:column="60">nexthop<pos:position pos:line="103" pos:column="67"/></name></expr></argument>,
                                         <argument><expr><name pos:line="104" pos:column="42">connectname<pos:position pos:line="104" pos:column="53"/></name></expr></argument>, <argument><expr><name pos:line="104" pos:column="55">conf<pos:position pos:line="104" pos:column="59"/></name></expr></argument>, <argument><expr><name pos:line="104" pos:column="61">r<pos:position pos:line="104" pos:column="62"/></name></expr></argument>)<pos:position pos:line="104" pos:column="63"/></argument_list></call></expr>;<pos:position pos:line="104" pos:column="64"/></expr_stmt>

    <comment type="block" pos:line="106" pos:column="5">/* handle a permanent error from the above loop */</comment>
    <if pos:line="107" pos:column="5">if <condition pos:line="107" pos:column="8">(<expr><name pos:line="107" pos:column="9">failed<pos:position pos:line="107" pos:column="15"/></name></expr>)<pos:position pos:line="107" pos:column="16"/></condition><then pos:line="107" pos:column="16"> <block pos:line="107" pos:column="17">{
        <if pos:line="108" pos:column="9">if <condition pos:line="108" pos:column="12">(<expr><name pos:line="108" pos:column="13">proxyname<pos:position pos:line="108" pos:column="22"/></name></expr>)<pos:position pos:line="108" pos:column="23"/></condition><then pos:line="108" pos:column="23"> <block pos:line="108" pos:column="24">{
            <return pos:line="109" pos:column="13">return <expr><name pos:line="109" pos:column="20">DECLINED<pos:position pos:line="109" pos:column="28"/></name></expr>;<pos:position pos:line="109" pos:column="29"/></return>
        }<pos:position pos:line="110" pos:column="10"/></block></then>
        <else pos:line="111" pos:column="9">else <block pos:line="111" pos:column="14">{
            <return pos:line="112" pos:column="13">return <expr><name pos:line="112" pos:column="20">HTTP_SERVICE_UNAVAILABLE<pos:position pos:line="112" pos:column="44"/></name></expr>;<pos:position pos:line="112" pos:column="45"/></return>
        }<pos:position pos:line="113" pos:column="10"/></block></else></if>
    }<pos:position pos:line="114" pos:column="6"/></block></then></if>

    <comment type="block" pos:line="116" pos:column="5">/* setup polling for connection */</comment>
    <expr_stmt><expr><call><name pos:line="117" pos:column="5">ap_log_rerror<pos:position pos:line="117" pos:column="18"/></name><argument_list pos:line="117" pos:column="18">(<argument><expr><name pos:line="117" pos:column="19">APLOG_MARK<pos:position pos:line="117" pos:column="29"/></name></expr></argument>, <argument><expr><name pos:line="117" pos:column="31">APLOG_TRACE2<pos:position pos:line="117" pos:column="43"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="117" pos:column="45">0<pos:position pos:line="117" pos:column="46"/></literal></expr></argument>, <argument><expr><name pos:line="117" pos:column="48">r<pos:position pos:line="117" pos:column="49"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="117" pos:column="51">"setting up poll()"<pos:position pos:line="117" pos:column="70"/></literal></expr></argument>)<pos:position pos:line="117" pos:column="71"/></argument_list></call></expr>;<pos:position pos:line="117" pos:column="72"/></expr_stmt>

    <if pos:line="119" pos:column="5">if <condition pos:line="119" pos:column="8">(<expr><operator pos:line="119" pos:column="9">(<pos:position pos:line="119" pos:column="10"/></operator><name pos:line="119" pos:column="10">rv<pos:position pos:line="119" pos:column="12"/></name> <operator pos:line="119" pos:column="13">=<pos:position pos:line="119" pos:column="14"/></operator> <call><name pos:line="119" pos:column="15">apr_pollset_create<pos:position pos:line="119" pos:column="33"/></name><argument_list pos:line="119" pos:column="33">(<argument><expr><operator pos:line="119" pos:column="34">&amp;<pos:position pos:line="119" pos:column="39"/></operator><name pos:line="119" pos:column="35">pollset<pos:position pos:line="119" pos:column="42"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="119" pos:column="44">2<pos:position pos:line="119" pos:column="45"/></literal></expr></argument>, <argument><expr><name><name pos:line="119" pos:column="47">r<pos:position pos:line="119" pos:column="48"/></name><operator pos:line="119" pos:column="48">-&gt;<pos:position pos:line="119" pos:column="53"/></operator><name pos:line="119" pos:column="50">pool<pos:position pos:line="119" pos:column="54"/></name></name></expr></argument>, <argument><expr><literal type="number" pos:line="119" pos:column="56">0<pos:position pos:line="119" pos:column="57"/></literal></expr></argument>)<pos:position pos:line="119" pos:column="58"/></argument_list></call><operator pos:line="119" pos:column="58">)<pos:position pos:line="119" pos:column="59"/></operator> <operator pos:line="119" pos:column="60">!=<pos:position pos:line="119" pos:column="62"/></operator> <name pos:line="119" pos:column="63">APR_SUCCESS<pos:position pos:line="119" pos:column="74"/></name></expr>)<pos:position pos:line="119" pos:column="75"/></condition><then pos:line="119" pos:column="75"> <block pos:line="119" pos:column="76">{
        <expr_stmt><expr><call><name pos:line="120" pos:column="9">apr_socket_close<pos:position pos:line="120" pos:column="25"/></name><argument_list pos:line="120" pos:column="25">(<argument><expr><name pos:line="120" pos:column="26">sock<pos:position pos:line="120" pos:column="30"/></name></expr></argument>)<pos:position pos:line="120" pos:column="31"/></argument_list></call></expr>;<pos:position pos:line="120" pos:column="32"/></expr_stmt>
        <expr_stmt><expr><call><name pos:line="121" pos:column="9">ap_log_rerror<pos:position pos:line="121" pos:column="22"/></name><argument_list pos:line="121" pos:column="22">(<argument><expr><name pos:line="121" pos:column="23">APLOG_MARK<pos:position pos:line="121" pos:column="33"/></name></expr></argument>, <argument><expr><name pos:line="121" pos:column="35">APLOG_ERR<pos:position pos:line="121" pos:column="44"/></name></expr></argument>, <argument><expr><name pos:line="121" pos:column="46">rv<pos:position pos:line="121" pos:column="48"/></name></expr></argument>, <argument><expr><name pos:line="121" pos:column="50">r<pos:position pos:line="121" pos:column="51"/></name></expr></argument>, <argument><expr><call><name pos:line="121" pos:column="53">APLOGNO<pos:position pos:line="121" pos:column="60"/></name><argument_list pos:line="121" pos:column="60">(<argument><expr><literal type="number" pos:line="121" pos:column="61">01020<pos:position pos:line="121" pos:column="66"/></literal></expr></argument>)<pos:position pos:line="121" pos:column="67"/></argument_list></call>
                      <literal type="string" pos:line="122" pos:column="23">"error apr_pollset_create()"<pos:position pos:line="122" pos:column="51"/></literal></expr></argument>)<pos:position pos:line="122" pos:column="52"/></argument_list></call></expr>;<pos:position pos:line="122" pos:column="53"/></expr_stmt>
        <return pos:line="123" pos:column="9">return <expr><name pos:line="123" pos:column="16">HTTP_INTERNAL_SERVER_ERROR<pos:position pos:line="123" pos:column="42"/></name></expr>;<pos:position pos:line="123" pos:column="43"/></return>
    }<pos:position pos:line="124" pos:column="6"/></block></then></if>

    <comment type="block" pos:line="126" pos:column="5">/* Add client side to the poll */</comment>
    <expr_stmt><expr><name><name pos:line="127" pos:column="5">pollfd<pos:position pos:line="127" pos:column="11"/></name><operator pos:line="127" pos:column="11">.<pos:position pos:line="127" pos:column="12"/></operator><name pos:line="127" pos:column="12">p<pos:position pos:line="127" pos:column="13"/></name></name> <operator pos:line="127" pos:column="14">=<pos:position pos:line="127" pos:column="15"/></operator> <name><name pos:line="127" pos:column="16">r<pos:position pos:line="127" pos:column="17"/></name><operator pos:line="127" pos:column="17">-&gt;<pos:position pos:line="127" pos:column="22"/></operator><name pos:line="127" pos:column="19">pool<pos:position pos:line="127" pos:column="23"/></name></name></expr>;<pos:position pos:line="127" pos:column="24"/></expr_stmt>
    <expr_stmt><expr><name><name pos:line="128" pos:column="5">pollfd<pos:position pos:line="128" pos:column="11"/></name><operator pos:line="128" pos:column="11">.<pos:position pos:line="128" pos:column="12"/></operator><name pos:line="128" pos:column="12">desc_type<pos:position pos:line="128" pos:column="21"/></name></name> <operator pos:line="128" pos:column="22">=<pos:position pos:line="128" pos:column="23"/></operator> <name pos:line="128" pos:column="24">APR_POLL_SOCKET<pos:position pos:line="128" pos:column="39"/></name></expr>;<pos:position pos:line="128" pos:column="40"/></expr_stmt>
    <expr_stmt><expr><name><name pos:line="129" pos:column="5">pollfd<pos:position pos:line="129" pos:column="11"/></name><operator pos:line="129" pos:column="11">.<pos:position pos:line="129" pos:column="12"/></operator><name pos:line="129" pos:column="12">reqevents<pos:position pos:line="129" pos:column="21"/></name></name> <operator pos:line="129" pos:column="22">=<pos:position pos:line="129" pos:column="23"/></operator> <name pos:line="129" pos:column="24">APR_POLLIN<pos:position pos:line="129" pos:column="34"/></name> <operator pos:line="129" pos:column="35">|<pos:position pos:line="129" pos:column="36"/></operator> <name pos:line="129" pos:column="37">APR_POLLHUP<pos:position pos:line="129" pos:column="48"/></name></expr>;<pos:position pos:line="129" pos:column="49"/></expr_stmt>
    <expr_stmt><expr><name><name pos:line="130" pos:column="5">pollfd<pos:position pos:line="130" pos:column="11"/></name><operator pos:line="130" pos:column="11">.<pos:position pos:line="130" pos:column="12"/></operator><name pos:line="130" pos:column="12">desc<pos:position pos:line="130" pos:column="16"/></name><operator pos:line="130" pos:column="16">.<pos:position pos:line="130" pos:column="17"/></operator><name pos:line="130" pos:column="17">s<pos:position pos:line="130" pos:column="18"/></name></name> <operator pos:line="130" pos:column="19">=<pos:position pos:line="130" pos:column="20"/></operator> <name pos:line="130" pos:column="21">client_socket<pos:position pos:line="130" pos:column="34"/></name></expr>;<pos:position pos:line="130" pos:column="35"/></expr_stmt>
    <expr_stmt><expr><name><name pos:line="131" pos:column="5">pollfd<pos:position pos:line="131" pos:column="11"/></name><operator pos:line="131" pos:column="11">.<pos:position pos:line="131" pos:column="12"/></operator><name pos:line="131" pos:column="12">client_data<pos:position pos:line="131" pos:column="23"/></name></name> <operator pos:line="131" pos:column="24">=<pos:position pos:line="131" pos:column="25"/></operator> <name pos:line="131" pos:column="26">NULL<pos:position pos:line="131" pos:column="30"/></name></expr>;<pos:position pos:line="131" pos:column="31"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="132" pos:column="5">apr_pollset_add<pos:position pos:line="132" pos:column="20"/></name><argument_list pos:line="132" pos:column="20">(<argument><expr><name pos:line="132" pos:column="21">pollset<pos:position pos:line="132" pos:column="28"/></name></expr></argument>, <argument><expr><operator pos:line="132" pos:column="30">&amp;<pos:position pos:line="132" pos:column="35"/></operator><name pos:line="132" pos:column="31">pollfd<pos:position pos:line="132" pos:column="37"/></name></expr></argument>)<pos:position pos:line="132" pos:column="38"/></argument_list></call></expr>;<pos:position pos:line="132" pos:column="39"/></expr_stmt>

    <comment type="block" pos:line="134" pos:column="5">/* Add the server side to the poll */</comment>
    <expr_stmt><expr><name><name pos:line="135" pos:column="5">pollfd<pos:position pos:line="135" pos:column="11"/></name><operator pos:line="135" pos:column="11">.<pos:position pos:line="135" pos:column="12"/></operator><name pos:line="135" pos:column="12">desc<pos:position pos:line="135" pos:column="16"/></name><operator pos:line="135" pos:column="16">.<pos:position pos:line="135" pos:column="17"/></operator><name pos:line="135" pos:column="17">s<pos:position pos:line="135" pos:column="18"/></name></name> <operator pos:line="135" pos:column="19">=<pos:position pos:line="135" pos:column="20"/></operator> <name pos:line="135" pos:column="21">sock<pos:position pos:line="135" pos:column="25"/></name></expr>;<pos:position pos:line="135" pos:column="26"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="136" pos:column="5">apr_pollset_add<pos:position pos:line="136" pos:column="20"/></name><argument_list pos:line="136" pos:column="20">(<argument><expr><name pos:line="136" pos:column="21">pollset<pos:position pos:line="136" pos:column="28"/></name></expr></argument>, <argument><expr><operator pos:line="136" pos:column="30">&amp;<pos:position pos:line="136" pos:column="35"/></operator><name pos:line="136" pos:column="31">pollfd<pos:position pos:line="136" pos:column="37"/></name></expr></argument>)<pos:position pos:line="136" pos:column="38"/></argument_list></call></expr>;<pos:position pos:line="136" pos:column="39"/></expr_stmt>

    <comment type="block" pos:line="138" pos:column="5">/*
     * Step Three: Send the Request
     *
     * Send the HTTP/1.1 CONNECT request to the remote server
     */</comment>

    <expr_stmt><expr><name pos:line="144" pos:column="5">backconn<pos:position pos:line="144" pos:column="13"/></name> <operator pos:line="144" pos:column="14">=<pos:position pos:line="144" pos:column="15"/></operator> <call><name pos:line="144" pos:column="16">ap_run_create_connection<pos:position pos:line="144" pos:column="40"/></name><argument_list pos:line="144" pos:column="40">(<argument><expr><name><name pos:line="144" pos:column="41">c<pos:position pos:line="144" pos:column="42"/></name><operator pos:line="144" pos:column="42">-&gt;<pos:position pos:line="144" pos:column="47"/></operator><name pos:line="144" pos:column="44">pool<pos:position pos:line="144" pos:column="48"/></name></name></expr></argument>, <argument><expr><name><name pos:line="144" pos:column="50">r<pos:position pos:line="144" pos:column="51"/></name><operator pos:line="144" pos:column="51">-&gt;<pos:position pos:line="144" pos:column="56"/></operator><name pos:line="144" pos:column="53">server<pos:position pos:line="144" pos:column="59"/></name></name></expr></argument>, <argument><expr><name pos:line="144" pos:column="61">sock<pos:position pos:line="144" pos:column="65"/></name></expr></argument>,
                                        <argument><expr><name><name pos:line="145" pos:column="41">c<pos:position pos:line="145" pos:column="42"/></name><operator pos:line="145" pos:column="42">-&gt;<pos:position pos:line="145" pos:column="47"/></operator><name pos:line="145" pos:column="44">id<pos:position pos:line="145" pos:column="46"/></name></name></expr></argument>, <argument><expr><name><name pos:line="145" pos:column="48">c<pos:position pos:line="145" pos:column="49"/></name><operator pos:line="145" pos:column="49">-&gt;<pos:position pos:line="145" pos:column="54"/></operator><name pos:line="145" pos:column="51">sbh<pos:position pos:line="145" pos:column="54"/></name></name></expr></argument>, <argument><expr><name><name pos:line="145" pos:column="56">c<pos:position pos:line="145" pos:column="57"/></name><operator pos:line="145" pos:column="57">-&gt;<pos:position pos:line="145" pos:column="62"/></operator><name pos:line="145" pos:column="59">bucket_alloc<pos:position pos:line="145" pos:column="71"/></name></name></expr></argument>)<pos:position pos:line="145" pos:column="72"/></argument_list></call></expr>;<pos:position pos:line="145" pos:column="73"/></expr_stmt>
    <if pos:line="146" pos:column="5">if <condition pos:line="146" pos:column="8">(<expr><operator pos:line="146" pos:column="9">!<pos:position pos:line="146" pos:column="10"/></operator><name pos:line="146" pos:column="10">backconn<pos:position pos:line="146" pos:column="18"/></name></expr>)<pos:position pos:line="146" pos:column="19"/></condition><then pos:line="146" pos:column="19"> <block pos:line="146" pos:column="20">{
        <comment type="block" pos:line="147" pos:column="9">/* peer reset */</comment>
        <expr_stmt><expr><call><name pos:line="148" pos:column="9">ap_log_rerror<pos:position pos:line="148" pos:column="22"/></name><argument_list pos:line="148" pos:column="22">(<argument><expr><name pos:line="148" pos:column="23">APLOG_MARK<pos:position pos:line="148" pos:column="33"/></name></expr></argument>, <argument><expr><name pos:line="148" pos:column="35">APLOG_INFO<pos:position pos:line="148" pos:column="45"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="148" pos:column="47">0<pos:position pos:line="148" pos:column="48"/></literal></expr></argument>, <argument><expr><name pos:line="148" pos:column="50">r<pos:position pos:line="148" pos:column="51"/></name></expr></argument>, <argument><expr><call><name pos:line="148" pos:column="53">APLOGNO<pos:position pos:line="148" pos:column="60"/></name><argument_list pos:line="148" pos:column="60">(<argument><expr><literal type="number" pos:line="148" pos:column="61">01021<pos:position pos:line="148" pos:column="66"/></literal></expr></argument>)<pos:position pos:line="148" pos:column="67"/></argument_list></call>
                      <literal type="string" pos:line="149" pos:column="23">"an error occurred creating a new connection "<pos:position pos:line="149" pos:column="69"/></literal>
                      <literal type="string" pos:line="150" pos:column="23">"to %pI (%s)"<pos:position pos:line="150" pos:column="36"/></literal></expr></argument>, <argument><expr><name pos:line="150" pos:column="38">nexthop<pos:position pos:line="150" pos:column="45"/></name></expr></argument>, <argument><expr><name pos:line="150" pos:column="47">connectname<pos:position pos:line="150" pos:column="58"/></name></expr></argument>)<pos:position pos:line="150" pos:column="59"/></argument_list></call></expr>;<pos:position pos:line="150" pos:column="60"/></expr_stmt>
        <expr_stmt><expr><call><name pos:line="151" pos:column="9">apr_socket_close<pos:position pos:line="151" pos:column="25"/></name><argument_list pos:line="151" pos:column="25">(<argument><expr><name pos:line="151" pos:column="26">sock<pos:position pos:line="151" pos:column="30"/></name></expr></argument>)<pos:position pos:line="151" pos:column="31"/></argument_list></call></expr>;<pos:position pos:line="151" pos:column="32"/></expr_stmt>
        <return pos:line="152" pos:column="9">return <expr><name pos:line="152" pos:column="16">HTTP_INTERNAL_SERVER_ERROR<pos:position pos:line="152" pos:column="42"/></name></expr>;<pos:position pos:line="152" pos:column="43"/></return>
    }<pos:position pos:line="153" pos:column="6"/></block></then></if>
    <expr_stmt><expr><call><name pos:line="154" pos:column="5">ap_proxy_ssl_disable<pos:position pos:line="154" pos:column="25"/></name><argument_list pos:line="154" pos:column="25">(<argument><expr><name pos:line="154" pos:column="26">backconn<pos:position pos:line="154" pos:column="34"/></name></expr></argument>)<pos:position pos:line="154" pos:column="35"/></argument_list></call></expr>;<pos:position pos:line="154" pos:column="36"/></expr_stmt>
    <expr_stmt><expr><name pos:line="155" pos:column="5">rc<pos:position pos:line="155" pos:column="7"/></name> <operator pos:line="155" pos:column="8">=<pos:position pos:line="155" pos:column="9"/></operator> <call><name pos:line="155" pos:column="10">ap_run_pre_connection<pos:position pos:line="155" pos:column="31"/></name><argument_list pos:line="155" pos:column="31">(<argument><expr><name pos:line="155" pos:column="32">backconn<pos:position pos:line="155" pos:column="40"/></name></expr></argument>, <argument><expr><name pos:line="155" pos:column="42">sock<pos:position pos:line="155" pos:column="46"/></name></expr></argument>)<pos:position pos:line="155" pos:column="47"/></argument_list></call></expr>;<pos:position pos:line="155" pos:column="48"/></expr_stmt>
    <if pos:line="156" pos:column="5">if <condition pos:line="156" pos:column="8">(<expr><name pos:line="156" pos:column="9">rc<pos:position pos:line="156" pos:column="11"/></name> <operator pos:line="156" pos:column="12">!=<pos:position pos:line="156" pos:column="14"/></operator> <name pos:line="156" pos:column="15">OK<pos:position pos:line="156" pos:column="17"/></name> <operator pos:line="156" pos:column="18">&amp;&amp;<pos:position pos:line="156" pos:column="28"/></operator> <name pos:line="156" pos:column="21">rc<pos:position pos:line="156" pos:column="23"/></name> <operator pos:line="156" pos:column="24">!=<pos:position pos:line="156" pos:column="26"/></operator> <name pos:line="156" pos:column="27">DONE<pos:position pos:line="156" pos:column="31"/></name></expr>)<pos:position pos:line="156" pos:column="32"/></condition><then pos:line="156" pos:column="32"> <block pos:line="156" pos:column="33">{
        <expr_stmt><expr><name><name pos:line="157" pos:column="9">backconn<pos:position pos:line="157" pos:column="17"/></name><operator pos:line="157" pos:column="17">-&gt;<pos:position pos:line="157" pos:column="22"/></operator><name pos:line="157" pos:column="19">aborted<pos:position pos:line="157" pos:column="26"/></name></name> <operator pos:line="157" pos:column="27">=<pos:position pos:line="157" pos:column="28"/></operator> <literal type="number" pos:line="157" pos:column="29">1<pos:position pos:line="157" pos:column="30"/></literal></expr>;<pos:position pos:line="157" pos:column="31"/></expr_stmt>
        <expr_stmt><expr><call><name pos:line="158" pos:column="9">ap_log_rerror<pos:position pos:line="158" pos:column="22"/></name><argument_list pos:line="158" pos:column="22">(<argument><expr><name pos:line="158" pos:column="23">APLOG_MARK<pos:position pos:line="158" pos:column="33"/></name></expr></argument>, <argument><expr><name pos:line="158" pos:column="35">APLOG_DEBUG<pos:position pos:line="158" pos:column="46"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="158" pos:column="48">0<pos:position pos:line="158" pos:column="49"/></literal></expr></argument>, <argument><expr><name pos:line="158" pos:column="51">r<pos:position pos:line="158" pos:column="52"/></name></expr></argument>, <argument><expr><call><name pos:line="158" pos:column="54">APLOGNO<pos:position pos:line="158" pos:column="61"/></name><argument_list pos:line="158" pos:column="61">(<argument><expr><literal type="number" pos:line="158" pos:column="62">01022<pos:position pos:line="158" pos:column="67"/></literal></expr></argument>)<pos:position pos:line="158" pos:column="68"/></argument_list></call>
                      <literal type="string" pos:line="159" pos:column="23">"pre_connection setup failed (%d)"<pos:position pos:line="159" pos:column="57"/></literal></expr></argument>, <argument><expr><name pos:line="159" pos:column="59">rc<pos:position pos:line="159" pos:column="61"/></name></expr></argument>)<pos:position pos:line="159" pos:column="62"/></argument_list></call></expr>;<pos:position pos:line="159" pos:column="63"/></expr_stmt>
        <return pos:line="160" pos:column="9">return <expr><name pos:line="160" pos:column="16">HTTP_INTERNAL_SERVER_ERROR<pos:position pos:line="160" pos:column="42"/></name></expr>;<pos:position pos:line="160" pos:column="43"/></return>
    }<pos:position pos:line="161" pos:column="6"/></block></then></if>

    <expr_stmt><expr><call><name pos:line="163" pos:column="5">ap_log_rerror<pos:position pos:line="163" pos:column="18"/></name><argument_list pos:line="163" pos:column="18">(<argument><expr><name pos:line="163" pos:column="19">APLOG_MARK<pos:position pos:line="163" pos:column="29"/></name></expr></argument>, <argument><expr><name pos:line="163" pos:column="31">APLOG_TRACE3<pos:position pos:line="163" pos:column="43"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="163" pos:column="45">0<pos:position pos:line="163" pos:column="46"/></literal></expr></argument>, <argument><expr><name pos:line="163" pos:column="48">r<pos:position pos:line="163" pos:column="49"/></name></expr></argument>,
                  <argument><expr><literal type="string" pos:line="164" pos:column="19">"connection complete to %pI (%s)"<pos:position pos:line="164" pos:column="52"/></literal></expr></argument>,
                  <argument><expr><name pos:line="165" pos:column="19">nexthop<pos:position pos:line="165" pos:column="26"/></name></expr></argument>, <argument><expr><name pos:line="165" pos:column="28">connectname<pos:position pos:line="165" pos:column="39"/></name></expr></argument>)<pos:position pos:line="165" pos:column="40"/></argument_list></call></expr>;<pos:position pos:line="165" pos:column="41"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="166" pos:column="5">apr_table_setn<pos:position pos:line="166" pos:column="19"/></name><argument_list pos:line="166" pos:column="19">(<argument><expr><name><name pos:line="166" pos:column="20">r<pos:position pos:line="166" pos:column="21"/></name><operator pos:line="166" pos:column="21">-&gt;<pos:position pos:line="166" pos:column="26"/></operator><name pos:line="166" pos:column="23">notes<pos:position pos:line="166" pos:column="28"/></name></name></expr></argument>, <argument><expr><literal type="string" pos:line="166" pos:column="30">"proxy-source-port"<pos:position pos:line="166" pos:column="49"/></literal></expr></argument>, <argument><expr><call><name pos:line="166" pos:column="51">apr_psprintf<pos:position pos:line="166" pos:column="63"/></name><argument_list pos:line="166" pos:column="63">(<argument><expr><name><name pos:line="166" pos:column="64">r<pos:position pos:line="166" pos:column="65"/></name><operator pos:line="166" pos:column="65">-&gt;<pos:position pos:line="166" pos:column="70"/></operator><name pos:line="166" pos:column="67">pool<pos:position pos:line="166" pos:column="71"/></name></name></expr></argument>, <argument><expr><literal type="string" pos:line="166" pos:column="73">"%hu"<pos:position pos:line="166" pos:column="78"/></literal></expr></argument>,
                   <argument><expr><name><name pos:line="167" pos:column="20">backconn<pos:position pos:line="167" pos:column="28"/></name><operator pos:line="167" pos:column="28">-&gt;<pos:position pos:line="167" pos:column="33"/></operator><name pos:line="167" pos:column="30">local_addr<pos:position pos:line="167" pos:column="40"/></name><operator pos:line="167" pos:column="40">-&gt;<pos:position pos:line="167" pos:column="45"/></operator><name pos:line="167" pos:column="42">port<pos:position pos:line="167" pos:column="46"/></name></name></expr></argument>)<pos:position pos:line="167" pos:column="47"/></argument_list></call></expr></argument>)<pos:position pos:line="167" pos:column="48"/></argument_list></call></expr>;<pos:position pos:line="167" pos:column="49"/></expr_stmt>

    <comment type="block" pos:line="169" pos:column="5">/* If we are connecting through a remote proxy, we need to pass
     * the CONNECT request on to it.
     */</comment>
    <if pos:line="172" pos:column="5">if <condition pos:line="172" pos:column="8">(<expr><name pos:line="172" pos:column="9">proxyport<pos:position pos:line="172" pos:column="18"/></name></expr>)<pos:position pos:line="172" pos:column="19"/></condition><then pos:line="172" pos:column="19"> <block pos:line="172" pos:column="20">{
    <comment type="block" pos:line="173" pos:column="5">/* FIXME: Error checking ignored.
     */</comment>
        <expr_stmt><expr><call><name pos:line="175" pos:column="9">ap_log_rerror<pos:position pos:line="175" pos:column="22"/></name><argument_list pos:line="175" pos:column="22">(<argument><expr><name pos:line="175" pos:column="23">APLOG_MARK<pos:position pos:line="175" pos:column="33"/></name></expr></argument>, <argument><expr><name pos:line="175" pos:column="35">APLOG_TRACE2<pos:position pos:line="175" pos:column="47"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="175" pos:column="49">0<pos:position pos:line="175" pos:column="50"/></literal></expr></argument>, <argument><expr><name pos:line="175" pos:column="52">r<pos:position pos:line="175" pos:column="53"/></name></expr></argument>,
                      <argument><expr><literal type="string" pos:line="176" pos:column="23">"sending the CONNECT request to the remote proxy"<pos:position pos:line="176" pos:column="72"/></literal></expr></argument>)<pos:position pos:line="176" pos:column="73"/></argument_list></call></expr>;<pos:position pos:line="176" pos:column="74"/></expr_stmt>
        <expr_stmt><expr><call><name pos:line="177" pos:column="9">ap_fprintf<pos:position pos:line="177" pos:column="19"/></name><argument_list pos:line="177" pos:column="19">(<argument><expr><name><name pos:line="177" pos:column="20">backconn<pos:position pos:line="177" pos:column="28"/></name><operator pos:line="177" pos:column="28">-&gt;<pos:position pos:line="177" pos:column="33"/></operator><name pos:line="177" pos:column="30">output_filters<pos:position pos:line="177" pos:column="44"/></name></name></expr></argument>, <argument><expr><name pos:line="177" pos:column="46">bb<pos:position pos:line="177" pos:column="48"/></name></expr></argument>,
                   <argument><expr><literal type="string" pos:line="178" pos:column="20">"CONNECT %s HTTP/1.0"<pos:position pos:line="178" pos:column="41"/></literal> <name pos:line="178" pos:column="42">CRLF<pos:position pos:line="178" pos:column="46"/></name></expr></argument>, <argument><expr><name><name pos:line="178" pos:column="48">r<pos:position pos:line="178" pos:column="49"/></name><operator pos:line="178" pos:column="49">-&gt;<pos:position pos:line="178" pos:column="54"/></operator><name pos:line="178" pos:column="51">uri<pos:position pos:line="178" pos:column="54"/></name></name></expr></argument>)<pos:position pos:line="178" pos:column="55"/></argument_list></call></expr>;<pos:position pos:line="178" pos:column="56"/></expr_stmt>
        <macro><name pos:line="179" pos:column="9">ap_fprintf<pos:position pos:line="179" pos:column="19"/></name><argument_list pos:line="179" pos:column="19">(<argument pos:line="179" pos:column="20">backconn-&gt;output_filters<pos:position pos:line="179" pos:column="44"/></argument>, <argument pos:line="179" pos:column="46">bb<pos:position pos:line="179" pos:column="48"/></argument>,
                   <argument><literal type="string" pos:line="180" pos:column="20">"Proxy-agent: %s"<pos:position pos:line="180" pos:column="37"/></literal> CRLF CRLF<pos:position pos:line="180" pos:column="47"/></argument>, <argument pos:line="180" pos:column="49">ap_get_server_banner()<pos:position pos:line="180" pos:column="71"/></argument>)<pos:position pos:line="180" pos:column="72"/></argument_list></macro><empty_stmt pos:line="180" pos:column="72">;<pos:position pos:line="180" pos:column="73"/></empty_stmt>
        <expr_stmt><expr><call><name pos:line="181" pos:column="9">ap_fflush<pos:position pos:line="181" pos:column="18"/></name><argument_list pos:line="181" pos:column="18">(<argument><expr><name><name pos:line="181" pos:column="19">backconn<pos:position pos:line="181" pos:column="27"/></name><operator pos:line="181" pos:column="27">-&gt;<pos:position pos:line="181" pos:column="32"/></operator><name pos:line="181" pos:column="29">output_filters<pos:position pos:line="181" pos:column="43"/></name></name></expr></argument>, <argument><expr><name pos:line="181" pos:column="45">bb<pos:position pos:line="181" pos:column="47"/></name></expr></argument>)<pos:position pos:line="181" pos:column="48"/></argument_list></call></expr>;<pos:position pos:line="181" pos:column="49"/></expr_stmt>
    }<pos:position pos:line="182" pos:column="6"/></block></then>
    <else pos:line="183" pos:column="5">else <block pos:line="183" pos:column="10">{
        <expr_stmt><expr><call><name pos:line="184" pos:column="9">ap_log_rerror<pos:position pos:line="184" pos:column="22"/></name><argument_list pos:line="184" pos:column="22">(<argument><expr><name pos:line="184" pos:column="23">APLOG_MARK<pos:position pos:line="184" pos:column="33"/></name></expr></argument>, <argument><expr><name pos:line="184" pos:column="35">APLOG_TRACE1<pos:position pos:line="184" pos:column="47"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="184" pos:column="49">0<pos:position pos:line="184" pos:column="50"/></literal></expr></argument>, <argument><expr><name pos:line="184" pos:column="52">r<pos:position pos:line="184" pos:column="53"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="184" pos:column="55">"Returning 200 OK"<pos:position pos:line="184" pos:column="73"/></literal></expr></argument>)<pos:position pos:line="184" pos:column="74"/></argument_list></call></expr>;<pos:position pos:line="184" pos:column="75"/></expr_stmt>
        <expr_stmt><expr><name pos:line="185" pos:column="9">nbytes<pos:position pos:line="185" pos:column="15"/></name> <operator pos:line="185" pos:column="16">=<pos:position pos:line="185" pos:column="17"/></operator> <call><name pos:line="185" pos:column="18">apr_snprintf<pos:position pos:line="185" pos:column="30"/></name><argument_list pos:line="185" pos:column="30">(<argument><expr><name pos:line="185" pos:column="31">buffer<pos:position pos:line="185" pos:column="37"/></name></expr></argument>, <argument><expr><sizeof pos:line="185" pos:column="39">sizeof<argument_list pos:line="185" pos:column="45">(<argument><expr><name pos:line="185" pos:column="46">buffer<pos:position pos:line="185" pos:column="52"/></name></expr></argument>)<pos:position pos:line="185" pos:column="53"/></argument_list></sizeof></expr></argument>,
                              <argument><expr><literal type="string" pos:line="186" pos:column="31">"HTTP/1.0 200 Connection Established"<pos:position pos:line="186" pos:column="68"/></literal> <name pos:line="186" pos:column="69">CRLF<pos:position pos:line="186" pos:column="73"/></name></expr></argument>)<pos:position pos:line="186" pos:column="74"/></argument_list></call></expr>;<pos:position pos:line="186" pos:column="75"/></expr_stmt>
        <expr_stmt><expr><call><name pos:line="187" pos:column="9">ap_xlate_proto_to_ascii<pos:position pos:line="187" pos:column="32"/></name><argument_list pos:line="187" pos:column="32">(<argument><expr><name pos:line="187" pos:column="33">buffer<pos:position pos:line="187" pos:column="39"/></name></expr></argument>, <argument><expr><name pos:line="187" pos:column="41">nbytes<pos:position pos:line="187" pos:column="47"/></name></expr></argument>)<pos:position pos:line="187" pos:column="48"/></argument_list></call></expr>;<pos:position pos:line="187" pos:column="49"/></expr_stmt>
        <expr_stmt><expr><call><name pos:line="188" pos:column="9">ap_fwrite<pos:position pos:line="188" pos:column="18"/></name><argument_list pos:line="188" pos:column="18">(<argument><expr><name><name pos:line="188" pos:column="19">c<pos:position pos:line="188" pos:column="20"/></name><operator pos:line="188" pos:column="20">-&gt;<pos:position pos:line="188" pos:column="25"/></operator><name pos:line="188" pos:column="22">output_filters<pos:position pos:line="188" pos:column="36"/></name></name></expr></argument>, <argument><expr><name pos:line="188" pos:column="38">bb<pos:position pos:line="188" pos:column="40"/></name></expr></argument>, <argument><expr><name pos:line="188" pos:column="42">buffer<pos:position pos:line="188" pos:column="48"/></name></expr></argument>, <argument><expr><name pos:line="188" pos:column="50">nbytes<pos:position pos:line="188" pos:column="56"/></name></expr></argument>)<pos:position pos:line="188" pos:column="57"/></argument_list></call></expr>;<pos:position pos:line="188" pos:column="58"/></expr_stmt>
        <expr_stmt><expr><name pos:line="189" pos:column="9">nbytes<pos:position pos:line="189" pos:column="15"/></name> <operator pos:line="189" pos:column="16">=<pos:position pos:line="189" pos:column="17"/></operator> <macro><name pos:line="189" pos:column="18">apr_snprintf<pos:position pos:line="189" pos:column="30"/></name><argument_list pos:line="189" pos:column="30">(<argument pos:line="189" pos:column="31">buffer<pos:position pos:line="189" pos:column="37"/></argument>, <argument pos:line="189" pos:column="39">sizeof(buffer)<pos:position pos:line="189" pos:column="53"/></argument>,
                              <argument><literal type="string" pos:line="190" pos:column="31">"Proxy-agent: %s"<pos:position pos:line="190" pos:column="48"/></literal> CRLF CRLF<pos:position pos:line="190" pos:column="58"/></argument>,
                              <argument pos:line="191" pos:column="31">ap_get_server_banner()<pos:position pos:line="191" pos:column="53"/></argument>)<pos:position pos:line="191" pos:column="54"/></argument_list></macro></expr>;<pos:position pos:line="191" pos:column="55"/></expr_stmt>
        <expr_stmt><expr><call><name pos:line="192" pos:column="9">ap_xlate_proto_to_ascii<pos:position pos:line="192" pos:column="32"/></name><argument_list pos:line="192" pos:column="32">(<argument><expr><name pos:line="192" pos:column="33">buffer<pos:position pos:line="192" pos:column="39"/></name></expr></argument>, <argument><expr><name pos:line="192" pos:column="41">nbytes<pos:position pos:line="192" pos:column="47"/></name></expr></argument>)<pos:position pos:line="192" pos:column="48"/></argument_list></call></expr>;<pos:position pos:line="192" pos:column="49"/></expr_stmt>
        <expr_stmt><expr><call><name pos:line="193" pos:column="9">ap_fwrite<pos:position pos:line="193" pos:column="18"/></name><argument_list pos:line="193" pos:column="18">(<argument><expr><name><name pos:line="193" pos:column="19">c<pos:position pos:line="193" pos:column="20"/></name><operator pos:line="193" pos:column="20">-&gt;<pos:position pos:line="193" pos:column="25"/></operator><name pos:line="193" pos:column="22">output_filters<pos:position pos:line="193" pos:column="36"/></name></name></expr></argument>, <argument><expr><name pos:line="193" pos:column="38">bb<pos:position pos:line="193" pos:column="40"/></name></expr></argument>, <argument><expr><name pos:line="193" pos:column="42">buffer<pos:position pos:line="193" pos:column="48"/></name></expr></argument>, <argument><expr><name pos:line="193" pos:column="50">nbytes<pos:position pos:line="193" pos:column="56"/></name></expr></argument>)<pos:position pos:line="193" pos:column="57"/></argument_list></call></expr>;<pos:position pos:line="193" pos:column="58"/></expr_stmt>
        <expr_stmt><expr><call><name pos:line="194" pos:column="9">ap_fflush<pos:position pos:line="194" pos:column="18"/></name><argument_list pos:line="194" pos:column="18">(<argument><expr><name><name pos:line="194" pos:column="19">c<pos:position pos:line="194" pos:column="20"/></name><operator pos:line="194" pos:column="20">-&gt;<pos:position pos:line="194" pos:column="25"/></operator><name pos:line="194" pos:column="22">output_filters<pos:position pos:line="194" pos:column="36"/></name></name></expr></argument>, <argument><expr><name pos:line="194" pos:column="38">bb<pos:position pos:line="194" pos:column="40"/></name></expr></argument>)<pos:position pos:line="194" pos:column="41"/></argument_list></call></expr>;<pos:position pos:line="194" pos:column="42"/></expr_stmt>
<cpp:if pos:line="195" pos:column="1">#<cpp:directive pos:line="195" pos:column="2">if<pos:position pos:line="195" pos:column="4"/></cpp:directive> <expr><literal type="number" pos:line="195" pos:column="5">0<pos:position pos:line="195" pos:column="6"/></literal></expr></cpp:if>
        <comment type="block" pos:line="196" pos:column="9">/* This is safer code, but it doesn't work yet.  I'm leaving it
         * here so that I can fix it later.
         */</comment>
        r-&gt;status = HTTP_OK;
        r-&gt;header_only = 1;
        apr_table_set(r-&gt;headers_out, "Proxy-agent: %s", ap_get_server_banner());
        ap_rflush(r);
<cpp:endif pos:line="203" pos:column="1">#<cpp:directive pos:line="203" pos:column="2">endif<pos:position pos:line="203" pos:column="7"/></cpp:directive></cpp:endif>
    }<pos:position pos:line="204" pos:column="6"/></block></else></if>

    <expr_stmt><expr><call><name pos:line="206" pos:column="5">ap_log_rerror<pos:position pos:line="206" pos:column="18"/></name><argument_list pos:line="206" pos:column="18">(<argument><expr><name pos:line="206" pos:column="19">APLOG_MARK<pos:position pos:line="206" pos:column="29"/></name></expr></argument>, <argument><expr><name pos:line="206" pos:column="31">APLOG_TRACE2<pos:position pos:line="206" pos:column="43"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="206" pos:column="45">0<pos:position pos:line="206" pos:column="46"/></literal></expr></argument>, <argument><expr><name pos:line="206" pos:column="48">r<pos:position pos:line="206" pos:column="49"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="206" pos:column="51">"setting up poll()"<pos:position pos:line="206" pos:column="70"/></literal></expr></argument>)<pos:position pos:line="206" pos:column="71"/></argument_list></call></expr>;<pos:position pos:line="206" pos:column="72"/></expr_stmt>

    <comment type="block" pos:line="208" pos:column="5">/*
     * Step Four: Handle Data Transfer
     *
     * Handle two way transfer of data over the socket (this is a tunnel).
     */</comment>

    <comment type="block" pos:line="214" pos:column="5">/* we are now acting as a tunnel - the input/output filter stacks should
     * not contain any non-connection filters.
     */</comment>
    <expr_stmt><expr><name><name pos:line="217" pos:column="5">r<pos:position pos:line="217" pos:column="6"/></name><operator pos:line="217" pos:column="6">-&gt;<pos:position pos:line="217" pos:column="11"/></operator><name pos:line="217" pos:column="8">output_filters<pos:position pos:line="217" pos:column="22"/></name></name> <operator pos:line="217" pos:column="23">=<pos:position pos:line="217" pos:column="24"/></operator> <name><name pos:line="217" pos:column="25">c<pos:position pos:line="217" pos:column="26"/></name><operator pos:line="217" pos:column="26">-&gt;<pos:position pos:line="217" pos:column="31"/></operator><name pos:line="217" pos:column="28">output_filters<pos:position pos:line="217" pos:column="42"/></name></name></expr>;<pos:position pos:line="217" pos:column="43"/></expr_stmt>
    <expr_stmt><expr><name><name pos:line="218" pos:column="5">r<pos:position pos:line="218" pos:column="6"/></name><operator pos:line="218" pos:column="6">-&gt;<pos:position pos:line="218" pos:column="11"/></operator><name pos:line="218" pos:column="8">proto_output_filters<pos:position pos:line="218" pos:column="28"/></name></name> <operator pos:line="218" pos:column="29">=<pos:position pos:line="218" pos:column="30"/></operator> <name><name pos:line="218" pos:column="31">c<pos:position pos:line="218" pos:column="32"/></name><operator pos:line="218" pos:column="32">-&gt;<pos:position pos:line="218" pos:column="37"/></operator><name pos:line="218" pos:column="34">output_filters<pos:position pos:line="218" pos:column="48"/></name></name></expr>;<pos:position pos:line="218" pos:column="49"/></expr_stmt>
    <expr_stmt><expr><name><name pos:line="219" pos:column="5">r<pos:position pos:line="219" pos:column="6"/></name><operator pos:line="219" pos:column="6">-&gt;<pos:position pos:line="219" pos:column="11"/></operator><name pos:line="219" pos:column="8">input_filters<pos:position pos:line="219" pos:column="21"/></name></name> <operator pos:line="219" pos:column="22">=<pos:position pos:line="219" pos:column="23"/></operator> <name><name pos:line="219" pos:column="24">c<pos:position pos:line="219" pos:column="25"/></name><operator pos:line="219" pos:column="25">-&gt;<pos:position pos:line="219" pos:column="30"/></operator><name pos:line="219" pos:column="27">input_filters<pos:position pos:line="219" pos:column="40"/></name></name></expr>;<pos:position pos:line="219" pos:column="41"/></expr_stmt>
    <expr_stmt><expr><name><name pos:line="220" pos:column="5">r<pos:position pos:line="220" pos:column="6"/></name><operator pos:line="220" pos:column="6">-&gt;<pos:position pos:line="220" pos:column="11"/></operator><name pos:line="220" pos:column="8">proto_input_filters<pos:position pos:line="220" pos:column="27"/></name></name> <operator pos:line="220" pos:column="28">=<pos:position pos:line="220" pos:column="29"/></operator> <name><name pos:line="220" pos:column="30">c<pos:position pos:line="220" pos:column="31"/></name><operator pos:line="220" pos:column="31">-&gt;<pos:position pos:line="220" pos:column="36"/></operator><name pos:line="220" pos:column="33">input_filters<pos:position pos:line="220" pos:column="46"/></name></name></expr>;<pos:position pos:line="220" pos:column="47"/></expr_stmt>
<comment type="block" pos:line="221" pos:column="1">/*    r-&gt;sent_bodyct = 1;*/</comment>

    <while pos:line="223" pos:column="5">while <condition pos:line="223" pos:column="11">(<expr><literal type="number" pos:line="223" pos:column="12">1<pos:position pos:line="223" pos:column="13"/></literal></expr>)<pos:position pos:line="223" pos:column="14"/></condition> <block pos:line="223" pos:column="15">{ <comment type="block" pos:line="223" pos:column="17">/* Infinite loop until error (one side closes the connection) */</comment>
        <if pos:line="224" pos:column="9">if <condition pos:line="224" pos:column="12">(<expr><operator pos:line="224" pos:column="13">(<pos:position pos:line="224" pos:column="14"/></operator><name pos:line="224" pos:column="14">rv<pos:position pos:line="224" pos:column="16"/></name> <operator pos:line="224" pos:column="17">=<pos:position pos:line="224" pos:column="18"/></operator> <call><name pos:line="224" pos:column="19">apr_pollset_poll<pos:position pos:line="224" pos:column="35"/></name><argument_list pos:line="224" pos:column="35">(<argument><expr><name pos:line="224" pos:column="36">pollset<pos:position pos:line="224" pos:column="43"/></name></expr></argument>, <argument><expr><operator pos:line="224" pos:column="45">-<pos:position pos:line="224" pos:column="46"/></operator><literal type="number" pos:line="224" pos:column="46">1<pos:position pos:line="224" pos:column="47"/></literal></expr></argument>, <argument><expr><operator pos:line="224" pos:column="49">&amp;<pos:position pos:line="224" pos:column="54"/></operator><name pos:line="224" pos:column="50">pollcnt<pos:position pos:line="224" pos:column="57"/></name></expr></argument>, <argument><expr><operator pos:line="224" pos:column="59">&amp;<pos:position pos:line="224" pos:column="64"/></operator><name pos:line="224" pos:column="60">signalled<pos:position pos:line="224" pos:column="69"/></name></expr></argument>)<pos:position pos:line="224" pos:column="70"/></argument_list></call><operator pos:line="224" pos:column="70">)<pos:position pos:line="224" pos:column="71"/></operator>
            <operator pos:line="225" pos:column="13">!=<pos:position pos:line="225" pos:column="15"/></operator> <name pos:line="225" pos:column="16">APR_SUCCESS<pos:position pos:line="225" pos:column="27"/></name></expr>)<pos:position pos:line="225" pos:column="28"/></condition><then pos:line="225" pos:column="28"> <block pos:line="225" pos:column="29">{
            <if pos:line="226" pos:column="13">if <condition pos:line="226" pos:column="16">(<expr><call><name pos:line="226" pos:column="17">APR_STATUS_IS_EINTR<pos:position pos:line="226" pos:column="36"/></name><argument_list pos:line="226" pos:column="36">(<argument><expr><name pos:line="226" pos:column="37">rv<pos:position pos:line="226" pos:column="39"/></name></expr></argument>)<pos:position pos:line="226" pos:column="40"/></argument_list></call></expr>)<pos:position pos:line="226" pos:column="41"/></condition><then pos:line="226" pos:column="41"> <block pos:line="226" pos:column="42">{
                <continue pos:line="227" pos:column="17">continue;<pos:position pos:line="227" pos:column="26"/></continue>
            }<pos:position pos:line="228" pos:column="14"/></block></then></if>
            <expr_stmt><expr><call><name pos:line="229" pos:column="13">apr_socket_close<pos:position pos:line="229" pos:column="29"/></name><argument_list pos:line="229" pos:column="29">(<argument><expr><name pos:line="229" pos:column="30">sock<pos:position pos:line="229" pos:column="34"/></name></expr></argument>)<pos:position pos:line="229" pos:column="35"/></argument_list></call></expr>;<pos:position pos:line="229" pos:column="36"/></expr_stmt>
            <expr_stmt><expr><call><name pos:line="230" pos:column="13">ap_log_rerror<pos:position pos:line="230" pos:column="26"/></name><argument_list pos:line="230" pos:column="26">(<argument><expr><name pos:line="230" pos:column="27">APLOG_MARK<pos:position pos:line="230" pos:column="37"/></name></expr></argument>, <argument><expr><name pos:line="230" pos:column="39">APLOG_ERR<pos:position pos:line="230" pos:column="48"/></name></expr></argument>, <argument><expr><name pos:line="230" pos:column="50">rv<pos:position pos:line="230" pos:column="52"/></name></expr></argument>, <argument><expr><name pos:line="230" pos:column="54">r<pos:position pos:line="230" pos:column="55"/></name></expr></argument>, <argument><expr><call><name pos:line="230" pos:column="57">APLOGNO<pos:position pos:line="230" pos:column="64"/></name><argument_list pos:line="230" pos:column="64">(<argument><expr><literal type="number" pos:line="230" pos:column="65">01023<pos:position pos:line="230" pos:column="70"/></literal></expr></argument>)<pos:position pos:line="230" pos:column="71"/></argument_list></call> <literal type="string" pos:line="230" pos:column="72">"error apr_poll()"<pos:position pos:line="230" pos:column="90"/></literal></expr></argument>)<pos:position pos:line="230" pos:column="91"/></argument_list></call></expr>;<pos:position pos:line="230" pos:column="92"/></expr_stmt>
            <return pos:line="231" pos:column="13">return <expr><name pos:line="231" pos:column="20">HTTP_INTERNAL_SERVER_ERROR<pos:position pos:line="231" pos:column="46"/></name></expr>;<pos:position pos:line="231" pos:column="47"/></return>
        }<pos:position pos:line="232" pos:column="10"/></block></then></if>
<cpp:ifdef pos:line="233" pos:column="1">#<cpp:directive pos:line="233" pos:column="2">ifdef<pos:position pos:line="233" pos:column="7"/></cpp:directive> <name pos:line="233" pos:column="8">DEBUGGING<pos:position pos:line="233" pos:column="17"/></name></cpp:ifdef>
        <expr_stmt><expr><call><name pos:line="234" pos:column="9">ap_log_rerror<pos:position pos:line="234" pos:column="22"/></name><argument_list pos:line="234" pos:column="22">(<argument><expr><name pos:line="234" pos:column="23">APLOG_MARK<pos:position pos:line="234" pos:column="33"/></name></expr></argument>, <argument><expr><name pos:line="234" pos:column="35">APLOG_DEBUG<pos:position pos:line="234" pos:column="46"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="234" pos:column="48">0<pos:position pos:line="234" pos:column="49"/></literal></expr></argument>, <argument><expr><name pos:line="234" pos:column="51">r<pos:position pos:line="234" pos:column="52"/></name></expr></argument>, <argument><expr><call><name pos:line="234" pos:column="54">APLOGNO<pos:position pos:line="234" pos:column="61"/></name><argument_list pos:line="234" pos:column="61">(<argument><expr><literal type="number" pos:line="234" pos:column="62">01024<pos:position pos:line="234" pos:column="67"/></literal></expr></argument>)<pos:position pos:line="234" pos:column="68"/></argument_list></call>
                      <literal type="string" pos:line="235" pos:column="23">"woke from poll(), i=%d"<pos:position pos:line="235" pos:column="47"/></literal></expr></argument>, <argument><expr><name pos:line="235" pos:column="49">pollcnt<pos:position pos:line="235" pos:column="56"/></name></expr></argument>)<pos:position pos:line="235" pos:column="57"/></argument_list></call></expr>;<pos:position pos:line="235" pos:column="58"/></expr_stmt>
<cpp:endif pos:line="236" pos:column="1">#<cpp:directive pos:line="236" pos:column="2">endif<pos:position pos:line="236" pos:column="7"/></cpp:directive></cpp:endif>

        <for pos:line="238" pos:column="9">for <control pos:line="238" pos:column="13">(<init><expr><name pos:line="238" pos:column="14">pi<pos:position pos:line="238" pos:column="16"/></name> <operator pos:line="238" pos:column="17">=<pos:position pos:line="238" pos:column="18"/></operator> <literal type="number" pos:line="238" pos:column="19">0<pos:position pos:line="238" pos:column="20"/></literal></expr>;<pos:position pos:line="238" pos:column="21"/></init> <condition><expr><name pos:line="238" pos:column="22">pi<pos:position pos:line="238" pos:column="24"/></name> <operator pos:line="238" pos:column="25">&lt;<pos:position pos:line="238" pos:column="29"/></operator> <name pos:line="238" pos:column="27">pollcnt<pos:position pos:line="238" pos:column="34"/></name></expr>;<pos:position pos:line="238" pos:column="35"/></condition> <incr><expr><name pos:line="238" pos:column="36">pi<pos:position pos:line="238" pos:column="38"/></name><operator pos:line="238" pos:column="38">++<pos:position pos:line="238" pos:column="40"/></operator></expr></incr>)<pos:position pos:line="238" pos:column="41"/></control> <block pos:line="238" pos:column="42">{
            <decl_stmt><decl><type><specifier pos:line="239" pos:column="13">const<pos:position pos:line="239" pos:column="18"/></specifier> <name pos:line="239" pos:column="19">apr_pollfd_t<pos:position pos:line="239" pos:column="31"/></name> <modifier pos:line="239" pos:column="32">*<pos:position pos:line="239" pos:column="33"/></modifier></type><name pos:line="239" pos:column="33">cur<pos:position pos:line="239" pos:column="36"/></name> <init pos:line="239" pos:column="37">= <expr><operator pos:line="239" pos:column="39">&amp;<pos:position pos:line="239" pos:column="44"/></operator><name><name pos:line="239" pos:column="40">signalled<pos:position pos:line="239" pos:column="49"/></name><index pos:line="239" pos:column="49">[<expr><name pos:line="239" pos:column="50">pi<pos:position pos:line="239" pos:column="52"/></name></expr>]<pos:position pos:line="239" pos:column="53"/></index></name></expr></init></decl>;<pos:position pos:line="239" pos:column="54"/></decl_stmt>

            <if pos:line="241" pos:column="13">if <condition pos:line="241" pos:column="16">(<expr><name><name pos:line="241" pos:column="17">cur<pos:position pos:line="241" pos:column="20"/></name><operator pos:line="241" pos:column="20">-&gt;<pos:position pos:line="241" pos:column="25"/></operator><name pos:line="241" pos:column="22">desc<pos:position pos:line="241" pos:column="26"/></name><operator pos:line="241" pos:column="26">.<pos:position pos:line="241" pos:column="27"/></operator><name pos:line="241" pos:column="27">s<pos:position pos:line="241" pos:column="28"/></name></name> <operator pos:line="241" pos:column="29">==<pos:position pos:line="241" pos:column="31"/></operator> <name pos:line="241" pos:column="32">sock<pos:position pos:line="241" pos:column="36"/></name></expr>)<pos:position pos:line="241" pos:column="37"/></condition><then pos:line="241" pos:column="37"> <block pos:line="241" pos:column="38">{
                <expr_stmt><expr><name pos:line="242" pos:column="17">pollevent<pos:position pos:line="242" pos:column="26"/></name> <operator pos:line="242" pos:column="27">=<pos:position pos:line="242" pos:column="28"/></operator> <name><name pos:line="242" pos:column="29">cur<pos:position pos:line="242" pos:column="32"/></name><operator pos:line="242" pos:column="32">-&gt;<pos:position pos:line="242" pos:column="37"/></operator><name pos:line="242" pos:column="34">rtnevents<pos:position pos:line="242" pos:column="43"/></name></name></expr>;<pos:position pos:line="242" pos:column="44"/></expr_stmt>
                <if pos:line="243" pos:column="17">if <condition pos:line="243" pos:column="20">(<expr><name pos:line="243" pos:column="21">pollevent<pos:position pos:line="243" pos:column="30"/></name> <operator pos:line="243" pos:column="31">&amp;<pos:position pos:line="243" pos:column="36"/></operator> <operator pos:line="243" pos:column="33">(<pos:position pos:line="243" pos:column="34"/></operator><name pos:line="243" pos:column="34">APR_POLLIN<pos:position pos:line="243" pos:column="44"/></name> <operator pos:line="243" pos:column="45">|<pos:position pos:line="243" pos:column="46"/></operator> <name pos:line="243" pos:column="47">APR_POLLHUP<pos:position pos:line="243" pos:column="58"/></name><operator pos:line="243" pos:column="58">)<pos:position pos:line="243" pos:column="59"/></operator></expr>)<pos:position pos:line="243" pos:column="60"/></condition><then pos:line="243" pos:column="60"> <block pos:line="243" pos:column="61">{
<cpp:ifdef pos:line="244" pos:column="1">#<cpp:directive pos:line="244" pos:column="2">ifdef<pos:position pos:line="244" pos:column="7"/></cpp:directive> <name pos:line="244" pos:column="8">DEBUGGING<pos:position pos:line="244" pos:column="17"/></name></cpp:ifdef>
                    <expr_stmt><expr><call><name pos:line="245" pos:column="21">ap_log_rerror<pos:position pos:line="245" pos:column="34"/></name><argument_list pos:line="245" pos:column="34">(<argument><expr><name pos:line="245" pos:column="35">APLOG_MARK<pos:position pos:line="245" pos:column="45"/></name></expr></argument>, <argument><expr><name pos:line="245" pos:column="47">APLOG_DEBUG<pos:position pos:line="245" pos:column="58"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="245" pos:column="60">0<pos:position pos:line="245" pos:column="61"/></literal></expr></argument>, <argument><expr><name pos:line="245" pos:column="63">r<pos:position pos:line="245" pos:column="64"/></name></expr></argument>, <argument><expr><call><name pos:line="245" pos:column="66">APLOGNO<pos:position pos:line="245" pos:column="73"/></name><argument_list pos:line="245" pos:column="73">(<argument><expr><literal type="number" pos:line="245" pos:column="74">01025<pos:position pos:line="245" pos:column="79"/></literal></expr></argument>)<pos:position pos:line="245" pos:column="80"/></argument_list></call>
                                  <literal type="string" pos:line="246" pos:column="35">"sock was readable"<pos:position pos:line="246" pos:column="54"/></literal></expr></argument>)<pos:position pos:line="246" pos:column="55"/></argument_list></call></expr>;<pos:position pos:line="246" pos:column="56"/></expr_stmt>
<cpp:endif pos:line="247" pos:column="1">#<cpp:directive pos:line="247" pos:column="2">endif<pos:position pos:line="247" pos:column="7"/></cpp:directive></cpp:endif>
                    <expr_stmt><expr><name pos:line="248" pos:column="21">rv<pos:position pos:line="248" pos:column="23"/></name> <operator pos:line="248" pos:column="24">=<pos:position pos:line="248" pos:column="25"/></operator> <call><name pos:line="248" pos:column="26">proxy_connect_transfer<pos:position pos:line="248" pos:column="48"/></name><argument_list pos:line="248" pos:column="48">(<argument><expr><name pos:line="248" pos:column="49">r<pos:position pos:line="248" pos:column="50"/></name></expr></argument>, <argument><expr><name pos:line="248" pos:column="52">backconn<pos:position pos:line="248" pos:column="60"/></name></expr></argument>, <argument><expr><name pos:line="248" pos:column="62">c<pos:position pos:line="248" pos:column="63"/></name></expr></argument>, <argument><expr><name pos:line="248" pos:column="65">bb<pos:position pos:line="248" pos:column="67"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="248" pos:column="69">"sock"<pos:position pos:line="248" pos:column="75"/></literal></expr></argument>)<pos:position pos:line="248" pos:column="76"/></argument_list></call></expr>;<pos:position pos:line="248" pos:column="77"/></expr_stmt>
                }<pos:position pos:line="249" pos:column="18"/></block></then>
                <elseif pos:line="250" pos:column="17">else <if pos:line="250" pos:column="22">if <condition pos:line="250" pos:column="25">(<expr><name pos:line="250" pos:column="26">pollevent<pos:position pos:line="250" pos:column="35"/></name> <operator pos:line="250" pos:column="36">&amp;<pos:position pos:line="250" pos:column="41"/></operator> <name pos:line="250" pos:column="38">APR_POLLERR<pos:position pos:line="250" pos:column="49"/></name></expr>)<pos:position pos:line="250" pos:column="50"/></condition><then pos:line="250" pos:column="50"> <block pos:line="250" pos:column="51">{
                    <expr_stmt><expr><name pos:line="251" pos:column="21">rv<pos:position pos:line="251" pos:column="23"/></name> <operator pos:line="251" pos:column="24">=<pos:position pos:line="251" pos:column="25"/></operator> <name pos:line="251" pos:column="26">APR_EPIPE<pos:position pos:line="251" pos:column="35"/></name></expr>;<pos:position pos:line="251" pos:column="36"/></expr_stmt>
                    <expr_stmt><expr><name><name pos:line="252" pos:column="21">backconn<pos:position pos:line="252" pos:column="29"/></name><operator pos:line="252" pos:column="29">-&gt;<pos:position pos:line="252" pos:column="34"/></operator><name pos:line="252" pos:column="31">aborted<pos:position pos:line="252" pos:column="38"/></name></name> <operator pos:line="252" pos:column="39">=<pos:position pos:line="252" pos:column="40"/></operator> <literal type="number" pos:line="252" pos:column="41">1<pos:position pos:line="252" pos:column="42"/></literal></expr>;<pos:position pos:line="252" pos:column="43"/></expr_stmt>
                    <expr_stmt><expr><call><name pos:line="253" pos:column="21">ap_log_rerror<pos:position pos:line="253" pos:column="34"/></name><argument_list pos:line="253" pos:column="34">(<argument><expr><name pos:line="253" pos:column="35">APLOG_MARK<pos:position pos:line="253" pos:column="45"/></name></expr></argument>, <argument><expr><name pos:line="253" pos:column="47">APLOG_NOTICE<pos:position pos:line="253" pos:column="59"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="253" pos:column="61">0<pos:position pos:line="253" pos:column="62"/></literal></expr></argument>, <argument><expr><name pos:line="253" pos:column="64">r<pos:position pos:line="253" pos:column="65"/></name></expr></argument>, <argument><expr><call><name pos:line="253" pos:column="67">APLOGNO<pos:position pos:line="253" pos:column="74"/></name><argument_list pos:line="253" pos:column="74">(<argument><expr><literal type="number" pos:line="253" pos:column="75">01026<pos:position pos:line="253" pos:column="80"/></literal></expr></argument>)<pos:position pos:line="253" pos:column="81"/></argument_list></call>
                                  <literal type="string" pos:line="254" pos:column="35">"err on backconn"<pos:position pos:line="254" pos:column="52"/></literal></expr></argument>)<pos:position pos:line="254" pos:column="53"/></argument_list></call></expr>;<pos:position pos:line="254" pos:column="54"/></expr_stmt>
                }<pos:position pos:line="255" pos:column="18"/></block></then></if></elseif></if>
            }<pos:position pos:line="256" pos:column="14"/></block></then>
            <elseif pos:line="257" pos:column="13">else <if pos:line="257" pos:column="18">if <condition pos:line="257" pos:column="21">(<expr><name><name pos:line="257" pos:column="22">cur<pos:position pos:line="257" pos:column="25"/></name><operator pos:line="257" pos:column="25">-&gt;<pos:position pos:line="257" pos:column="30"/></operator><name pos:line="257" pos:column="27">desc<pos:position pos:line="257" pos:column="31"/></name><operator pos:line="257" pos:column="31">.<pos:position pos:line="257" pos:column="32"/></operator><name pos:line="257" pos:column="32">s<pos:position pos:line="257" pos:column="33"/></name></name> <operator pos:line="257" pos:column="34">==<pos:position pos:line="257" pos:column="36"/></operator> <name pos:line="257" pos:column="37">client_socket<pos:position pos:line="257" pos:column="50"/></name></expr>)<pos:position pos:line="257" pos:column="51"/></condition><then pos:line="257" pos:column="51"> <block pos:line="257" pos:column="52">{
                <expr_stmt><expr><name pos:line="258" pos:column="17">pollevent<pos:position pos:line="258" pos:column="26"/></name> <operator pos:line="258" pos:column="27">=<pos:position pos:line="258" pos:column="28"/></operator> <name><name pos:line="258" pos:column="29">cur<pos:position pos:line="258" pos:column="32"/></name><operator pos:line="258" pos:column="32">-&gt;<pos:position pos:line="258" pos:column="37"/></operator><name pos:line="258" pos:column="34">rtnevents<pos:position pos:line="258" pos:column="43"/></name></name></expr>;<pos:position pos:line="258" pos:column="44"/></expr_stmt>
                <if pos:line="259" pos:column="17">if <condition pos:line="259" pos:column="20">(<expr><name pos:line="259" pos:column="21">pollevent<pos:position pos:line="259" pos:column="30"/></name> <operator pos:line="259" pos:column="31">&amp;<pos:position pos:line="259" pos:column="36"/></operator> <operator pos:line="259" pos:column="33">(<pos:position pos:line="259" pos:column="34"/></operator><name pos:line="259" pos:column="34">APR_POLLIN<pos:position pos:line="259" pos:column="44"/></name> <operator pos:line="259" pos:column="45">|<pos:position pos:line="259" pos:column="46"/></operator> <name pos:line="259" pos:column="47">APR_POLLHUP<pos:position pos:line="259" pos:column="58"/></name><operator pos:line="259" pos:column="58">)<pos:position pos:line="259" pos:column="59"/></operator></expr>)<pos:position pos:line="259" pos:column="60"/></condition><then pos:line="259" pos:column="60"> <block pos:line="259" pos:column="61">{
<cpp:ifdef pos:line="260" pos:column="1">#<cpp:directive pos:line="260" pos:column="2">ifdef<pos:position pos:line="260" pos:column="7"/></cpp:directive> <name pos:line="260" pos:column="8">DEBUGGING<pos:position pos:line="260" pos:column="17"/></name></cpp:ifdef>
                    <expr_stmt><expr><call><name pos:line="261" pos:column="21">ap_log_rerror<pos:position pos:line="261" pos:column="34"/></name><argument_list pos:line="261" pos:column="34">(<argument><expr><name pos:line="261" pos:column="35">APLOG_MARK<pos:position pos:line="261" pos:column="45"/></name></expr></argument>, <argument><expr><name pos:line="261" pos:column="47">APLOG_DEBUG<pos:position pos:line="261" pos:column="58"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="261" pos:column="60">0<pos:position pos:line="261" pos:column="61"/></literal></expr></argument>, <argument><expr><name pos:line="261" pos:column="63">r<pos:position pos:line="261" pos:column="64"/></name></expr></argument>, <argument><expr><call><name pos:line="261" pos:column="66">APLOGNO<pos:position pos:line="261" pos:column="73"/></name><argument_list pos:line="261" pos:column="73">(<argument><expr><literal type="number" pos:line="261" pos:column="74">01027<pos:position pos:line="261" pos:column="79"/></literal></expr></argument>)<pos:position pos:line="261" pos:column="80"/></argument_list></call>
                                  <literal type="string" pos:line="262" pos:column="35">"client was readable"<pos:position pos:line="262" pos:column="56"/></literal></expr></argument>)<pos:position pos:line="262" pos:column="57"/></argument_list></call></expr>;<pos:position pos:line="262" pos:column="58"/></expr_stmt>
<cpp:endif pos:line="263" pos:column="1">#<cpp:directive pos:line="263" pos:column="2">endif<pos:position pos:line="263" pos:column="7"/></cpp:directive></cpp:endif>
                    <expr_stmt><expr><name pos:line="264" pos:column="21">rv<pos:position pos:line="264" pos:column="23"/></name> <operator pos:line="264" pos:column="24">=<pos:position pos:line="264" pos:column="25"/></operator> <call><name pos:line="264" pos:column="26">proxy_connect_transfer<pos:position pos:line="264" pos:column="48"/></name><argument_list pos:line="264" pos:column="48">(<argument><expr><name pos:line="264" pos:column="49">r<pos:position pos:line="264" pos:column="50"/></name></expr></argument>, <argument><expr><name pos:line="264" pos:column="52">c<pos:position pos:line="264" pos:column="53"/></name></expr></argument>, <argument><expr><name pos:line="264" pos:column="55">backconn<pos:position pos:line="264" pos:column="63"/></name></expr></argument>, <argument><expr><name pos:line="264" pos:column="65">bb<pos:position pos:line="264" pos:column="67"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="264" pos:column="69">"client"<pos:position pos:line="264" pos:column="77"/></literal></expr></argument>)<pos:position pos:line="264" pos:column="78"/></argument_list></call></expr>;<pos:position pos:line="264" pos:column="79"/></expr_stmt>
                }<pos:position pos:line="265" pos:column="18"/></block></then>
                <elseif pos:line="266" pos:column="17">else <if pos:line="266" pos:column="22">if <condition pos:line="266" pos:column="25">(<expr><name pos:line="266" pos:column="26">pollevent<pos:position pos:line="266" pos:column="35"/></name> <operator pos:line="266" pos:column="36">&amp;<pos:position pos:line="266" pos:column="41"/></operator> <name pos:line="266" pos:column="38">APR_POLLERR<pos:position pos:line="266" pos:column="49"/></name></expr>)<pos:position pos:line="266" pos:column="50"/></condition><then pos:line="266" pos:column="50"> <block pos:line="266" pos:column="51">{
                    <expr_stmt><expr><name pos:line="267" pos:column="21">rv<pos:position pos:line="267" pos:column="23"/></name> <operator pos:line="267" pos:column="24">=<pos:position pos:line="267" pos:column="25"/></operator> <name pos:line="267" pos:column="26">APR_EPIPE<pos:position pos:line="267" pos:column="35"/></name></expr>;<pos:position pos:line="267" pos:column="36"/></expr_stmt>
                    <expr_stmt><expr><name><name pos:line="268" pos:column="21">c<pos:position pos:line="268" pos:column="22"/></name><operator pos:line="268" pos:column="22">-&gt;<pos:position pos:line="268" pos:column="27"/></operator><name pos:line="268" pos:column="24">aborted<pos:position pos:line="268" pos:column="31"/></name></name> <operator pos:line="268" pos:column="32">=<pos:position pos:line="268" pos:column="33"/></operator> <literal type="number" pos:line="268" pos:column="34">1<pos:position pos:line="268" pos:column="35"/></literal></expr>;<pos:position pos:line="268" pos:column="36"/></expr_stmt>
                    <expr_stmt><expr><call><name pos:line="269" pos:column="21">ap_log_rerror<pos:position pos:line="269" pos:column="34"/></name><argument_list pos:line="269" pos:column="34">(<argument><expr><name pos:line="269" pos:column="35">APLOG_MARK<pos:position pos:line="269" pos:column="45"/></name></expr></argument>, <argument><expr><name pos:line="269" pos:column="47">APLOG_NOTICE<pos:position pos:line="269" pos:column="59"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="269" pos:column="61">0<pos:position pos:line="269" pos:column="62"/></literal></expr></argument>, <argument><expr><name pos:line="269" pos:column="64">r<pos:position pos:line="269" pos:column="65"/></name></expr></argument>, <argument><expr><call><name pos:line="269" pos:column="67">APLOGNO<pos:position pos:line="269" pos:column="74"/></name><argument_list pos:line="269" pos:column="74">(<argument><expr><literal type="number" pos:line="269" pos:column="75">01026<pos:position pos:line="269" pos:column="80"/></literal></expr></argument>)<pos:position pos:line="269" pos:column="81"/></argument_list></call>
                                  <literal type="string" pos:line="270" pos:column="35">"err on client"<pos:position pos:line="270" pos:column="50"/></literal></expr></argument>)<pos:position pos:line="270" pos:column="51"/></argument_list></call></expr>;<pos:position pos:line="270" pos:column="52"/></expr_stmt>
                }<pos:position pos:line="271" pos:column="18"/></block></then></if></elseif></if>
            }<pos:position pos:line="272" pos:column="14"/></block></then></if></elseif>
            <else pos:line="273" pos:column="13">else <block pos:line="273" pos:column="18">{
                <expr_stmt><expr><name pos:line="274" pos:column="17">rv<pos:position pos:line="274" pos:column="19"/></name> <operator pos:line="274" pos:column="20">=<pos:position pos:line="274" pos:column="21"/></operator> <name pos:line="274" pos:column="22">APR_EBADF<pos:position pos:line="274" pos:column="31"/></name></expr>;<pos:position pos:line="274" pos:column="32"/></expr_stmt>
                <expr_stmt><expr><call><name pos:line="275" pos:column="17">ap_log_rerror<pos:position pos:line="275" pos:column="30"/></name><argument_list pos:line="275" pos:column="30">(<argument><expr><name pos:line="275" pos:column="31">APLOG_MARK<pos:position pos:line="275" pos:column="41"/></name></expr></argument>, <argument><expr><name pos:line="275" pos:column="43">APLOG_INFO<pos:position pos:line="275" pos:column="53"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="275" pos:column="55">0<pos:position pos:line="275" pos:column="56"/></literal></expr></argument>, <argument><expr><name pos:line="275" pos:column="58">r<pos:position pos:line="275" pos:column="59"/></name></expr></argument>, <argument><expr><call><name pos:line="275" pos:column="61">APLOGNO<pos:position pos:line="275" pos:column="68"/></name><argument_list pos:line="275" pos:column="68">(<argument><expr><literal type="number" pos:line="275" pos:column="69">01028<pos:position pos:line="275" pos:column="74"/></literal></expr></argument>)<pos:position pos:line="275" pos:column="75"/></argument_list></call>
                              <literal type="string" pos:line="276" pos:column="31">"unknown socket in pollset"<pos:position pos:line="276" pos:column="58"/></literal></expr></argument>)<pos:position pos:line="276" pos:column="59"/></argument_list></call></expr>;<pos:position pos:line="276" pos:column="60"/></expr_stmt>
            }<pos:position pos:line="277" pos:column="14"/></block></else></if>

        }<pos:position pos:line="279" pos:column="10"/></block></for>
        <if pos:line="280" pos:column="9">if <condition pos:line="280" pos:column="12">(<expr><name pos:line="280" pos:column="13">rv<pos:position pos:line="280" pos:column="15"/></name> <operator pos:line="280" pos:column="16">!=<pos:position pos:line="280" pos:column="18"/></operator> <name pos:line="280" pos:column="19">APR_SUCCESS<pos:position pos:line="280" pos:column="30"/></name></expr>)<pos:position pos:line="280" pos:column="31"/></condition><then pos:line="280" pos:column="31"> <block pos:line="280" pos:column="32">{
            <break pos:line="281" pos:column="13">break;<pos:position pos:line="281" pos:column="19"/></break>
        }<pos:position pos:line="282" pos:column="10"/></block></then></if>
    }<pos:position pos:line="283" pos:column="6"/></block></while>

    <expr_stmt><expr><call><name pos:line="285" pos:column="5">ap_log_rerror<pos:position pos:line="285" pos:column="18"/></name><argument_list pos:line="285" pos:column="18">(<argument><expr><name pos:line="285" pos:column="19">APLOG_MARK<pos:position pos:line="285" pos:column="29"/></name></expr></argument>, <argument><expr><name pos:line="285" pos:column="31">APLOG_TRACE2<pos:position pos:line="285" pos:column="43"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="285" pos:column="45">0<pos:position pos:line="285" pos:column="46"/></literal></expr></argument>, <argument><expr><name pos:line="285" pos:column="48">r<pos:position pos:line="285" pos:column="49"/></name></expr></argument>,
                  <argument><expr><literal type="string" pos:line="286" pos:column="19">"finished with poll() - cleaning up"<pos:position pos:line="286" pos:column="55"/></literal></expr></argument>)<pos:position pos:line="286" pos:column="56"/></argument_list></call></expr>;<pos:position pos:line="286" pos:column="57"/></expr_stmt>

    <comment type="block" pos:line="288" pos:column="5">/*
     * Step Five: Clean Up
     *
     * Close the socket and clean up
     */</comment>

    <if pos:line="294" pos:column="5">if <condition pos:line="294" pos:column="8">(<expr><name><name pos:line="294" pos:column="9">backconn<pos:position pos:line="294" pos:column="17"/></name><operator pos:line="294" pos:column="17">-&gt;<pos:position pos:line="294" pos:column="22"/></operator><name pos:line="294" pos:column="19">aborted<pos:position pos:line="294" pos:column="26"/></name></name></expr>)<pos:position pos:line="294" pos:column="27"/></condition><then pos:line="294" pos:column="27">
        <block type="pseudo"><expr_stmt><expr><call><name pos:line="295" pos:column="9">apr_socket_close<pos:position pos:line="295" pos:column="25"/></name><argument_list pos:line="295" pos:column="25">(<argument><expr><name pos:line="295" pos:column="26">sock<pos:position pos:line="295" pos:column="30"/></name></expr></argument>)<pos:position pos:line="295" pos:column="31"/></argument_list></call></expr>;<pos:position pos:line="295" pos:column="32"/></expr_stmt></block></then>
    <else pos:line="296" pos:column="5">else
        <block type="pseudo"><expr_stmt><expr><call><name pos:line="297" pos:column="9">ap_lingering_close<pos:position pos:line="297" pos:column="27"/></name><argument_list pos:line="297" pos:column="27">(<argument><expr><name pos:line="297" pos:column="28">backconn<pos:position pos:line="297" pos:column="36"/></name></expr></argument>)<pos:position pos:line="297" pos:column="37"/></argument_list></call></expr>;<pos:position pos:line="297" pos:column="38"/></expr_stmt></block></else></if>

    <expr_stmt><expr><name><name pos:line="299" pos:column="5">c<pos:position pos:line="299" pos:column="6"/></name><operator pos:line="299" pos:column="6">-&gt;<pos:position pos:line="299" pos:column="11"/></operator><name pos:line="299" pos:column="8">keepalive<pos:position pos:line="299" pos:column="17"/></name></name> <operator pos:line="299" pos:column="18">=<pos:position pos:line="299" pos:column="19"/></operator> <name pos:line="299" pos:column="20">AP_CONN_CLOSE<pos:position pos:line="299" pos:column="33"/></name></expr>;<pos:position pos:line="299" pos:column="34"/></expr_stmt>

    <return pos:line="301" pos:column="5">return <expr><name pos:line="301" pos:column="12">OK<pos:position pos:line="301" pos:column="14"/></name></expr>;<pos:position pos:line="301" pos:column="15"/></return>
}<pos:position pos:line="302" pos:column="2"/></block></function></unit>

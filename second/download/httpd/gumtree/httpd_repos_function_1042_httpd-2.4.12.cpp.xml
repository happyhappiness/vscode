<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/httpd/gumtree/httpd_repos_function_1042_httpd-2.4.12.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">authz_status<pos:position pos:line="1" pos:column="20"/></name></type> <name pos:line="1" pos:column="21">lua_authz_check<pos:position pos:line="1" pos:column="36"/></name><parameter_list pos:line="1" pos:column="36">(<parameter><decl><type><name pos:line="1" pos:column="37">request_rec<pos:position pos:line="1" pos:column="48"/></name> <modifier pos:line="1" pos:column="49">*<pos:position pos:line="1" pos:column="50"/></modifier></type><name pos:line="1" pos:column="50">r<pos:position pos:line="1" pos:column="51"/></name></decl></parameter>, <parameter><decl><type><specifier pos:line="1" pos:column="53">const<pos:position pos:line="1" pos:column="58"/></specifier> <name pos:line="1" pos:column="59">char<pos:position pos:line="1" pos:column="63"/></name> <modifier pos:line="1" pos:column="64">*<pos:position pos:line="1" pos:column="65"/></modifier></type><name pos:line="1" pos:column="65">require_line<pos:position pos:line="1" pos:column="77"/></name></decl></parameter>,
                                    <parameter><decl><type><specifier pos:line="2" pos:column="37">const<pos:position pos:line="2" pos:column="42"/></specifier> <name pos:line="2" pos:column="43">void<pos:position pos:line="2" pos:column="47"/></name> <modifier pos:line="2" pos:column="48">*<pos:position pos:line="2" pos:column="49"/></modifier></type><name pos:line="2" pos:column="49">parsed_require_line<pos:position pos:line="2" pos:column="68"/></name></decl></parameter>)<pos:position pos:line="2" pos:column="69"/></parameter_list>
<block pos:line="3" pos:column="1">{
    <decl_stmt><decl><type><name pos:line="4" pos:column="5">apr_pool_t<pos:position pos:line="4" pos:column="15"/></name> <modifier pos:line="4" pos:column="16">*<pos:position pos:line="4" pos:column="17"/></modifier></type><name pos:line="4" pos:column="17">pool<pos:position pos:line="4" pos:column="21"/></name></decl>;<pos:position pos:line="4" pos:column="22"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="5" pos:column="5">ap_lua_vm_spec<pos:position pos:line="5" pos:column="19"/></name> <modifier pos:line="5" pos:column="20">*<pos:position pos:line="5" pos:column="21"/></modifier></type><name pos:line="5" pos:column="21">spec<pos:position pos:line="5" pos:column="25"/></name></decl>;<pos:position pos:line="5" pos:column="26"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="6" pos:column="5">lua_State<pos:position pos:line="6" pos:column="14"/></name> <modifier pos:line="6" pos:column="15">*<pos:position pos:line="6" pos:column="16"/></modifier></type><name pos:line="6" pos:column="16">L<pos:position pos:line="6" pos:column="17"/></name></decl>;<pos:position pos:line="6" pos:column="18"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="7" pos:column="5">ap_lua_server_cfg<pos:position pos:line="7" pos:column="22"/></name> <modifier pos:line="7" pos:column="23">*<pos:position pos:line="7" pos:column="24"/></modifier></type><name pos:line="7" pos:column="24">server_cfg<pos:position pos:line="7" pos:column="34"/></name> <init pos:line="7" pos:column="35">= <expr><call><name pos:line="7" pos:column="37">ap_get_module_config<pos:position pos:line="7" pos:column="57"/></name><argument_list pos:line="7" pos:column="57">(<argument><expr><name><name pos:line="7" pos:column="58">r<pos:position pos:line="7" pos:column="59"/></name><operator pos:line="7" pos:column="59">-&gt;<pos:position pos:line="7" pos:column="64"/></operator><name pos:line="7" pos:column="61">server<pos:position pos:line="7" pos:column="67"/></name><operator pos:line="7" pos:column="67">-&gt;<pos:position pos:line="7" pos:column="72"/></operator><name pos:line="7" pos:column="69">module_config<pos:position pos:line="7" pos:column="82"/></name></name></expr></argument>,
                                                         <argument><expr><operator pos:line="8" pos:column="58">&amp;<pos:position pos:line="8" pos:column="63"/></operator><name pos:line="8" pos:column="59">lua_module<pos:position pos:line="8" pos:column="69"/></name></expr></argument>)<pos:position pos:line="8" pos:column="70"/></argument_list></call></expr></init></decl>;<pos:position pos:line="8" pos:column="71"/></decl_stmt>
    <decl_stmt><decl><type><specifier pos:line="9" pos:column="5">const<pos:position pos:line="9" pos:column="10"/></specifier> <name pos:line="9" pos:column="11">ap_lua_dir_cfg<pos:position pos:line="9" pos:column="25"/></name> <modifier pos:line="9" pos:column="26">*<pos:position pos:line="9" pos:column="27"/></modifier></type><name pos:line="9" pos:column="27">cfg<pos:position pos:line="9" pos:column="30"/></name> <init pos:line="9" pos:column="31">= <expr><call><name pos:line="9" pos:column="33">ap_get_module_config<pos:position pos:line="9" pos:column="53"/></name><argument_list pos:line="9" pos:column="53">(<argument><expr><name><name pos:line="9" pos:column="54">r<pos:position pos:line="9" pos:column="55"/></name><operator pos:line="9" pos:column="55">-&gt;<pos:position pos:line="9" pos:column="60"/></operator><name pos:line="9" pos:column="57">per_dir_config<pos:position pos:line="9" pos:column="71"/></name></name></expr></argument>,
                                                     <argument><expr><operator pos:line="10" pos:column="54">&amp;<pos:position pos:line="10" pos:column="59"/></operator><name pos:line="10" pos:column="55">lua_module<pos:position pos:line="10" pos:column="65"/></name></expr></argument>)<pos:position pos:line="10" pos:column="66"/></argument_list></call></expr></init></decl>;<pos:position pos:line="10" pos:column="67"/></decl_stmt>
    <decl_stmt><decl><type><specifier pos:line="11" pos:column="5">const<pos:position pos:line="11" pos:column="10"/></specifier> <name pos:line="11" pos:column="11">lua_authz_provider_func<pos:position pos:line="11" pos:column="34"/></name> <modifier pos:line="11" pos:column="35">*<pos:position pos:line="11" pos:column="36"/></modifier></type><name pos:line="11" pos:column="36">prov_func<pos:position pos:line="11" pos:column="45"/></name> <init pos:line="11" pos:column="46">= <expr><name pos:line="11" pos:column="48">parsed_require_line<pos:position pos:line="11" pos:column="67"/></name></expr></init></decl>;<pos:position pos:line="11" pos:column="68"/></decl_stmt>
    <decl_stmt><decl><type><specifier pos:line="12" pos:column="5">const<pos:position pos:line="12" pos:column="10"/></specifier> <name pos:line="12" pos:column="11">lua_authz_provider_spec<pos:position pos:line="12" pos:column="34"/></name> <modifier pos:line="12" pos:column="35">*<pos:position pos:line="12" pos:column="36"/></modifier></type><name pos:line="12" pos:column="36">prov_spec<pos:position pos:line="12" pos:column="45"/></name> <init pos:line="12" pos:column="46">= <expr><name><name pos:line="12" pos:column="48">prov_func<pos:position pos:line="12" pos:column="57"/></name><operator pos:line="12" pos:column="57">-&gt;<pos:position pos:line="12" pos:column="62"/></operator><name pos:line="12" pos:column="59">spec<pos:position pos:line="12" pos:column="63"/></name></name></expr></init></decl>;<pos:position pos:line="12" pos:column="64"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="13" pos:column="5">int<pos:position pos:line="13" pos:column="8"/></name></type> <name pos:line="13" pos:column="9">result<pos:position pos:line="13" pos:column="15"/></name></decl>;<pos:position pos:line="13" pos:column="16"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="14" pos:column="5">int<pos:position pos:line="14" pos:column="8"/></name></type> <name pos:line="14" pos:column="9">nargs<pos:position pos:line="14" pos:column="14"/></name> <init pos:line="14" pos:column="15">= <expr><literal type="number" pos:line="14" pos:column="17">0<pos:position pos:line="14" pos:column="18"/></literal></expr></init></decl>;<pos:position pos:line="14" pos:column="19"/></decl_stmt>

    <expr_stmt><expr><name pos:line="16" pos:column="5">spec<pos:position pos:line="16" pos:column="9"/></name> <operator pos:line="16" pos:column="10">=<pos:position pos:line="16" pos:column="11"/></operator> <call><name pos:line="16" pos:column="12">create_vm_spec<pos:position pos:line="16" pos:column="26"/></name><argument_list pos:line="16" pos:column="26">(<argument><expr><operator pos:line="16" pos:column="27">&amp;<pos:position pos:line="16" pos:column="32"/></operator><name pos:line="16" pos:column="28">pool<pos:position pos:line="16" pos:column="32"/></name></expr></argument>, <argument><expr><name pos:line="16" pos:column="34">r<pos:position pos:line="16" pos:column="35"/></name></expr></argument>, <argument><expr><name pos:line="16" pos:column="37">cfg<pos:position pos:line="16" pos:column="40"/></name></expr></argument>, <argument><expr><name pos:line="16" pos:column="42">server_cfg<pos:position pos:line="16" pos:column="52"/></name></expr></argument>, <argument><expr><name><name pos:line="16" pos:column="54">prov_spec<pos:position pos:line="16" pos:column="63"/></name><operator pos:line="16" pos:column="63">-&gt;<pos:position pos:line="16" pos:column="68"/></operator><name pos:line="16" pos:column="65">file_name<pos:position pos:line="16" pos:column="74"/></name></name></expr></argument>,
                          <argument><expr><name pos:line="17" pos:column="27">NULL<pos:position pos:line="17" pos:column="31"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="17" pos:column="33">0<pos:position pos:line="17" pos:column="34"/></literal></expr></argument>, <argument><expr><name><name pos:line="17" pos:column="36">prov_spec<pos:position pos:line="17" pos:column="45"/></name><operator pos:line="17" pos:column="45">-&gt;<pos:position pos:line="17" pos:column="50"/></operator><name pos:line="17" pos:column="47">function_name<pos:position pos:line="17" pos:column="60"/></name></name></expr></argument>, <argument><expr><literal type="string" pos:line="17" pos:column="62">"authz provider"<pos:position pos:line="17" pos:column="78"/></literal></expr></argument>)<pos:position pos:line="17" pos:column="79"/></argument_list></call></expr>;<pos:position pos:line="17" pos:column="80"/></expr_stmt>

    <expr_stmt><expr><name pos:line="19" pos:column="5">L<pos:position pos:line="19" pos:column="6"/></name> <operator pos:line="19" pos:column="7">=<pos:position pos:line="19" pos:column="8"/></operator> <call><name pos:line="19" pos:column="9">ap_lua_get_lua_state<pos:position pos:line="19" pos:column="29"/></name><argument_list pos:line="19" pos:column="29">(<argument><expr><name pos:line="19" pos:column="30">pool<pos:position pos:line="19" pos:column="34"/></name></expr></argument>, <argument><expr><name pos:line="19" pos:column="36">spec<pos:position pos:line="19" pos:column="40"/></name></expr></argument>, <argument><expr><name pos:line="19" pos:column="42">r<pos:position pos:line="19" pos:column="43"/></name></expr></argument>)<pos:position pos:line="19" pos:column="44"/></argument_list></call></expr>;<pos:position pos:line="19" pos:column="45"/></expr_stmt>
    <if pos:line="20" pos:column="5">if <condition pos:line="20" pos:column="8">(<expr><name pos:line="20" pos:column="9">L<pos:position pos:line="20" pos:column="10"/></name> <operator pos:line="20" pos:column="11">==<pos:position pos:line="20" pos:column="13"/></operator> <name pos:line="20" pos:column="14">NULL<pos:position pos:line="20" pos:column="18"/></name></expr>)<pos:position pos:line="20" pos:column="19"/></condition><then pos:line="20" pos:column="19"> <block pos:line="20" pos:column="20">{
        <expr_stmt><expr><call><name pos:line="21" pos:column="9">ap_log_rerror<pos:position pos:line="21" pos:column="22"/></name><argument_list pos:line="21" pos:column="22">(<argument><expr><name pos:line="21" pos:column="23">APLOG_MARK<pos:position pos:line="21" pos:column="33"/></name></expr></argument>, <argument><expr><name pos:line="21" pos:column="35">APLOG_ERR<pos:position pos:line="21" pos:column="44"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="21" pos:column="46">0<pos:position pos:line="21" pos:column="47"/></literal></expr></argument>, <argument><expr><name pos:line="21" pos:column="49">r<pos:position pos:line="21" pos:column="50"/></name></expr></argument>, <argument><expr><call><name pos:line="21" pos:column="52">APLOGNO<pos:position pos:line="21" pos:column="59"/></name><argument_list pos:line="21" pos:column="59">(<argument><expr><literal type="number" pos:line="21" pos:column="60">02314<pos:position pos:line="21" pos:column="65"/></literal></expr></argument>)<pos:position pos:line="21" pos:column="66"/></argument_list></call>
                      <literal type="string" pos:line="22" pos:column="23">"Unable to compile VM for authz provider %s"<pos:position pos:line="22" pos:column="67"/></literal></expr></argument>, <argument><expr><name><name pos:line="22" pos:column="69">prov_spec<pos:position pos:line="22" pos:column="78"/></name><operator pos:line="22" pos:column="78">-&gt;<pos:position pos:line="22" pos:column="83"/></operator><name pos:line="22" pos:column="80">name<pos:position pos:line="22" pos:column="84"/></name></name></expr></argument>)<pos:position pos:line="22" pos:column="85"/></argument_list></call></expr>;<pos:position pos:line="22" pos:column="86"/></expr_stmt>
        <return pos:line="23" pos:column="9">return <expr><name pos:line="23" pos:column="16">AUTHZ_GENERAL_ERROR<pos:position pos:line="23" pos:column="35"/></name></expr>;<pos:position pos:line="23" pos:column="36"/></return>
    }<pos:position pos:line="24" pos:column="6"/></block></then></if>
    <expr_stmt><expr><call><name pos:line="25" pos:column="5">lua_getglobal<pos:position pos:line="25" pos:column="18"/></name><argument_list pos:line="25" pos:column="18">(<argument><expr><name pos:line="25" pos:column="19">L<pos:position pos:line="25" pos:column="20"/></name></expr></argument>, <argument><expr><name><name pos:line="25" pos:column="22">prov_spec<pos:position pos:line="25" pos:column="31"/></name><operator pos:line="25" pos:column="31">-&gt;<pos:position pos:line="25" pos:column="36"/></operator><name pos:line="25" pos:column="33">function_name<pos:position pos:line="25" pos:column="46"/></name></name></expr></argument>)<pos:position pos:line="25" pos:column="47"/></argument_list></call></expr>;<pos:position pos:line="25" pos:column="48"/></expr_stmt>
    <if pos:line="26" pos:column="5">if <condition pos:line="26" pos:column="8">(<expr><operator pos:line="26" pos:column="9">!<pos:position pos:line="26" pos:column="10"/></operator><call><name pos:line="26" pos:column="10">lua_isfunction<pos:position pos:line="26" pos:column="24"/></name><argument_list pos:line="26" pos:column="24">(<argument><expr><name pos:line="26" pos:column="25">L<pos:position pos:line="26" pos:column="26"/></name></expr></argument>, <argument><expr><operator pos:line="26" pos:column="28">-<pos:position pos:line="26" pos:column="29"/></operator><literal type="number" pos:line="26" pos:column="29">1<pos:position pos:line="26" pos:column="30"/></literal></expr></argument>)<pos:position pos:line="26" pos:column="31"/></argument_list></call></expr>)<pos:position pos:line="26" pos:column="32"/></condition><then pos:line="26" pos:column="32"> <block pos:line="26" pos:column="33">{
        <expr_stmt><expr><call><name pos:line="27" pos:column="9">ap_log_rerror<pos:position pos:line="27" pos:column="22"/></name><argument_list pos:line="27" pos:column="22">(<argument><expr><name pos:line="27" pos:column="23">APLOG_MARK<pos:position pos:line="27" pos:column="33"/></name></expr></argument>, <argument><expr><name pos:line="27" pos:column="35">APLOG_CRIT<pos:position pos:line="27" pos:column="45"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="27" pos:column="47">0<pos:position pos:line="27" pos:column="48"/></literal></expr></argument>, <argument><expr><name pos:line="27" pos:column="50">r<pos:position pos:line="27" pos:column="51"/></name></expr></argument>, <argument><expr><call><name pos:line="27" pos:column="53">APLOGNO<pos:position pos:line="27" pos:column="60"/></name><argument_list pos:line="27" pos:column="60">(<argument><expr><literal type="number" pos:line="27" pos:column="61">02319<pos:position pos:line="27" pos:column="66"/></literal></expr></argument>)<pos:position pos:line="27" pos:column="67"/></argument_list></call>
                      <literal type="string" pos:line="28" pos:column="23">"Unable to find entry function '%s' in %s (not a valid function)"<pos:position pos:line="28" pos:column="88"/></literal></expr></argument>,
                      <argument><expr><name><name pos:line="29" pos:column="23">prov_spec<pos:position pos:line="29" pos:column="32"/></name><operator pos:line="29" pos:column="32">-&gt;<pos:position pos:line="29" pos:column="37"/></operator><name pos:line="29" pos:column="34">function_name<pos:position pos:line="29" pos:column="47"/></name></name></expr></argument>, <argument><expr><name><name pos:line="29" pos:column="49">prov_spec<pos:position pos:line="29" pos:column="58"/></name><operator pos:line="29" pos:column="58">-&gt;<pos:position pos:line="29" pos:column="63"/></operator><name pos:line="29" pos:column="60">file_name<pos:position pos:line="29" pos:column="69"/></name></name></expr></argument>)<pos:position pos:line="29" pos:column="70"/></argument_list></call></expr>;<pos:position pos:line="29" pos:column="71"/></expr_stmt>
        <expr_stmt><expr><call><name pos:line="30" pos:column="9">ap_lua_release_state<pos:position pos:line="30" pos:column="29"/></name><argument_list pos:line="30" pos:column="29">(<argument><expr><name pos:line="30" pos:column="30">L<pos:position pos:line="30" pos:column="31"/></name></expr></argument>, <argument><expr><name pos:line="30" pos:column="33">spec<pos:position pos:line="30" pos:column="37"/></name></expr></argument>, <argument><expr><name pos:line="30" pos:column="39">r<pos:position pos:line="30" pos:column="40"/></name></expr></argument>)<pos:position pos:line="30" pos:column="41"/></argument_list></call></expr>;<pos:position pos:line="30" pos:column="42"/></expr_stmt>
        <return pos:line="31" pos:column="9">return <expr><name pos:line="31" pos:column="16">AUTHZ_GENERAL_ERROR<pos:position pos:line="31" pos:column="35"/></name></expr>;<pos:position pos:line="31" pos:column="36"/></return>
    }<pos:position pos:line="32" pos:column="6"/></block></then></if>
    <expr_stmt><expr><call><name pos:line="33" pos:column="5">ap_lua_run_lua_request<pos:position pos:line="33" pos:column="27"/></name><argument_list pos:line="33" pos:column="27">(<argument><expr><name pos:line="33" pos:column="28">L<pos:position pos:line="33" pos:column="29"/></name></expr></argument>, <argument><expr><name pos:line="33" pos:column="31">r<pos:position pos:line="33" pos:column="32"/></name></expr></argument>)<pos:position pos:line="33" pos:column="33"/></argument_list></call></expr>;<pos:position pos:line="33" pos:column="34"/></expr_stmt>
    <if pos:line="34" pos:column="5">if <condition pos:line="34" pos:column="8">(<expr><name><name pos:line="34" pos:column="9">prov_func<pos:position pos:line="34" pos:column="18"/></name><operator pos:line="34" pos:column="18">-&gt;<pos:position pos:line="34" pos:column="23"/></operator><name pos:line="34" pos:column="20">args<pos:position pos:line="34" pos:column="24"/></name></name></expr>)<pos:position pos:line="34" pos:column="25"/></condition><then pos:line="34" pos:column="25"> <block pos:line="34" pos:column="26">{
        <decl_stmt><decl><type><name pos:line="35" pos:column="9">int<pos:position pos:line="35" pos:column="12"/></name></type> <name pos:line="35" pos:column="13">i<pos:position pos:line="35" pos:column="14"/></name></decl>;<pos:position pos:line="35" pos:column="15"/></decl_stmt>
        <if pos:line="36" pos:column="9">if <condition pos:line="36" pos:column="12">(<expr><operator pos:line="36" pos:column="13">!<pos:position pos:line="36" pos:column="14"/></operator><call><name pos:line="36" pos:column="14">lua_checkstack<pos:position pos:line="36" pos:column="28"/></name><argument_list pos:line="36" pos:column="28">(<argument><expr><name pos:line="36" pos:column="29">L<pos:position pos:line="36" pos:column="30"/></name></expr></argument>, <argument><expr><name><name pos:line="36" pos:column="32">prov_func<pos:position pos:line="36" pos:column="41"/></name><operator pos:line="36" pos:column="41">-&gt;<pos:position pos:line="36" pos:column="46"/></operator><name pos:line="36" pos:column="43">args<pos:position pos:line="36" pos:column="47"/></name><operator pos:line="36" pos:column="47">-&gt;<pos:position pos:line="36" pos:column="52"/></operator><name pos:line="36" pos:column="49">nelts<pos:position pos:line="36" pos:column="54"/></name></name></expr></argument>)<pos:position pos:line="36" pos:column="55"/></argument_list></call></expr>)<pos:position pos:line="36" pos:column="56"/></condition><then pos:line="36" pos:column="56"> <block pos:line="36" pos:column="57">{
            <expr_stmt><expr><call><name pos:line="37" pos:column="13">ap_log_rerror<pos:position pos:line="37" pos:column="26"/></name><argument_list pos:line="37" pos:column="26">(<argument><expr><name pos:line="37" pos:column="27">APLOG_MARK<pos:position pos:line="37" pos:column="37"/></name></expr></argument>, <argument><expr><name pos:line="37" pos:column="39">APLOG_ERR<pos:position pos:line="37" pos:column="48"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="37" pos:column="50">0<pos:position pos:line="37" pos:column="51"/></literal></expr></argument>, <argument><expr><name pos:line="37" pos:column="53">r<pos:position pos:line="37" pos:column="54"/></name></expr></argument>, <argument><expr><call><name pos:line="37" pos:column="56">APLOGNO<pos:position pos:line="37" pos:column="63"/></name><argument_list pos:line="37" pos:column="63">(<argument><expr><literal type="number" pos:line="37" pos:column="64">02315<pos:position pos:line="37" pos:column="69"/></literal></expr></argument>)<pos:position pos:line="37" pos:column="70"/></argument_list></call>
                          <literal type="string" pos:line="38" pos:column="27">"Error: authz provider %s: too many arguments"<pos:position pos:line="38" pos:column="73"/></literal></expr></argument>, <argument><expr><name><name pos:line="38" pos:column="75">prov_spec<pos:position pos:line="38" pos:column="84"/></name><operator pos:line="38" pos:column="84">-&gt;<pos:position pos:line="38" pos:column="89"/></operator><name pos:line="38" pos:column="86">name<pos:position pos:line="38" pos:column="90"/></name></name></expr></argument>)<pos:position pos:line="38" pos:column="91"/></argument_list></call></expr>;<pos:position pos:line="38" pos:column="92"/></expr_stmt>
            <expr_stmt><expr><call><name pos:line="39" pos:column="13">ap_lua_release_state<pos:position pos:line="39" pos:column="33"/></name><argument_list pos:line="39" pos:column="33">(<argument><expr><name pos:line="39" pos:column="34">L<pos:position pos:line="39" pos:column="35"/></name></expr></argument>, <argument><expr><name pos:line="39" pos:column="37">spec<pos:position pos:line="39" pos:column="41"/></name></expr></argument>, <argument><expr><name pos:line="39" pos:column="43">r<pos:position pos:line="39" pos:column="44"/></name></expr></argument>)<pos:position pos:line="39" pos:column="45"/></argument_list></call></expr>;<pos:position pos:line="39" pos:column="46"/></expr_stmt>
            <return pos:line="40" pos:column="13">return <expr><name pos:line="40" pos:column="20">AUTHZ_GENERAL_ERROR<pos:position pos:line="40" pos:column="39"/></name></expr>;<pos:position pos:line="40" pos:column="40"/></return>
        }<pos:position pos:line="41" pos:column="10"/></block></then></if>
        <for pos:line="42" pos:column="9">for <control pos:line="42" pos:column="13">(<init><expr><name pos:line="42" pos:column="14">i<pos:position pos:line="42" pos:column="15"/></name> <operator pos:line="42" pos:column="16">=<pos:position pos:line="42" pos:column="17"/></operator> <literal type="number" pos:line="42" pos:column="18">0<pos:position pos:line="42" pos:column="19"/></literal></expr>;<pos:position pos:line="42" pos:column="20"/></init> <condition><expr><name pos:line="42" pos:column="21">i<pos:position pos:line="42" pos:column="22"/></name> <operator pos:line="42" pos:column="23">&lt;<pos:position pos:line="42" pos:column="27"/></operator> <name><name pos:line="42" pos:column="25">prov_func<pos:position pos:line="42" pos:column="34"/></name><operator pos:line="42" pos:column="34">-&gt;<pos:position pos:line="42" pos:column="39"/></operator><name pos:line="42" pos:column="36">args<pos:position pos:line="42" pos:column="40"/></name><operator pos:line="42" pos:column="40">-&gt;<pos:position pos:line="42" pos:column="45"/></operator><name pos:line="42" pos:column="42">nelts<pos:position pos:line="42" pos:column="47"/></name></name></expr>;<pos:position pos:line="42" pos:column="48"/></condition> <incr><expr><name pos:line="42" pos:column="49">i<pos:position pos:line="42" pos:column="50"/></name><operator pos:line="42" pos:column="50">++<pos:position pos:line="42" pos:column="52"/></operator></expr></incr>)<pos:position pos:line="42" pos:column="53"/></control> <block pos:line="42" pos:column="54">{
            <decl_stmt><decl><type><specifier pos:line="43" pos:column="13">const<pos:position pos:line="43" pos:column="18"/></specifier> <name pos:line="43" pos:column="19">char<pos:position pos:line="43" pos:column="23"/></name> <modifier pos:line="43" pos:column="24">*<pos:position pos:line="43" pos:column="25"/></modifier></type><name pos:line="43" pos:column="25">arg<pos:position pos:line="43" pos:column="28"/></name> <init pos:line="43" pos:column="29">= <expr><call><name pos:line="43" pos:column="31">APR_ARRAY_IDX<pos:position pos:line="43" pos:column="44"/></name><argument_list pos:line="43" pos:column="44">(<argument><expr><name><name pos:line="43" pos:column="45">prov_func<pos:position pos:line="43" pos:column="54"/></name><operator pos:line="43" pos:column="54">-&gt;<pos:position pos:line="43" pos:column="59"/></operator><name pos:line="43" pos:column="56">args<pos:position pos:line="43" pos:column="60"/></name></name></expr></argument>, <argument><expr><name pos:line="43" pos:column="62">i<pos:position pos:line="43" pos:column="63"/></name></expr></argument>, <argument><expr><specifier pos:line="43" pos:column="65">const<pos:position pos:line="43" pos:column="70"/></specifier> <name pos:line="43" pos:column="71">char<pos:position pos:line="43" pos:column="75"/></name> <operator pos:line="43" pos:column="76">*<pos:position pos:line="43" pos:column="77"/></operator></expr></argument>)<pos:position pos:line="43" pos:column="78"/></argument_list></call></expr></init></decl>;<pos:position pos:line="43" pos:column="79"/></decl_stmt>
            <expr_stmt><expr><call><name pos:line="44" pos:column="13">lua_pushstring<pos:position pos:line="44" pos:column="27"/></name><argument_list pos:line="44" pos:column="27">(<argument><expr><name pos:line="44" pos:column="28">L<pos:position pos:line="44" pos:column="29"/></name></expr></argument>, <argument><expr><name pos:line="44" pos:column="31">arg<pos:position pos:line="44" pos:column="34"/></name></expr></argument>)<pos:position pos:line="44" pos:column="35"/></argument_list></call></expr>;<pos:position pos:line="44" pos:column="36"/></expr_stmt>
        }<pos:position pos:line="45" pos:column="10"/></block></for>
        <expr_stmt><expr><name pos:line="46" pos:column="9">nargs<pos:position pos:line="46" pos:column="14"/></name> <operator pos:line="46" pos:column="15">=<pos:position pos:line="46" pos:column="16"/></operator> <name><name pos:line="46" pos:column="17">prov_func<pos:position pos:line="46" pos:column="26"/></name><operator pos:line="46" pos:column="26">-&gt;<pos:position pos:line="46" pos:column="31"/></operator><name pos:line="46" pos:column="28">args<pos:position pos:line="46" pos:column="32"/></name><operator pos:line="46" pos:column="32">-&gt;<pos:position pos:line="46" pos:column="37"/></operator><name pos:line="46" pos:column="34">nelts<pos:position pos:line="46" pos:column="39"/></name></name></expr>;<pos:position pos:line="46" pos:column="40"/></expr_stmt>
    }<pos:position pos:line="47" pos:column="6"/></block></then></if>
    <if pos:line="48" pos:column="5">if <condition pos:line="48" pos:column="8">(<expr><call><name pos:line="48" pos:column="9">lua_pcall<pos:position pos:line="48" pos:column="18"/></name><argument_list pos:line="48" pos:column="18">(<argument><expr><name pos:line="48" pos:column="19">L<pos:position pos:line="48" pos:column="20"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="48" pos:column="22">1<pos:position pos:line="48" pos:column="23"/></literal> <operator pos:line="48" pos:column="24">+<pos:position pos:line="48" pos:column="25"/></operator> <name pos:line="48" pos:column="26">nargs<pos:position pos:line="48" pos:column="31"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="48" pos:column="33">1<pos:position pos:line="48" pos:column="34"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="48" pos:column="36">0<pos:position pos:line="48" pos:column="37"/></literal></expr></argument>)<pos:position pos:line="48" pos:column="38"/></argument_list></call></expr>)<pos:position pos:line="48" pos:column="39"/></condition><then pos:line="48" pos:column="39"> <block pos:line="48" pos:column="40">{
        <decl_stmt><decl><type><specifier pos:line="49" pos:column="9">const<pos:position pos:line="49" pos:column="14"/></specifier> <name pos:line="49" pos:column="15">char<pos:position pos:line="49" pos:column="19"/></name> <modifier pos:line="49" pos:column="20">*<pos:position pos:line="49" pos:column="21"/></modifier></type><name pos:line="49" pos:column="21">err<pos:position pos:line="49" pos:column="24"/></name> <init pos:line="49" pos:column="25">= <expr><call><name pos:line="49" pos:column="27">lua_tostring<pos:position pos:line="49" pos:column="39"/></name><argument_list pos:line="49" pos:column="39">(<argument><expr><name pos:line="49" pos:column="40">L<pos:position pos:line="49" pos:column="41"/></name></expr></argument>, <argument><expr><operator pos:line="49" pos:column="43">-<pos:position pos:line="49" pos:column="44"/></operator><literal type="number" pos:line="49" pos:column="44">1<pos:position pos:line="49" pos:column="45"/></literal></expr></argument>)<pos:position pos:line="49" pos:column="46"/></argument_list></call></expr></init></decl>;<pos:position pos:line="49" pos:column="47"/></decl_stmt>
        <expr_stmt><expr><call><name pos:line="50" pos:column="9">ap_log_rerror<pos:position pos:line="50" pos:column="22"/></name><argument_list pos:line="50" pos:column="22">(<argument><expr><name pos:line="50" pos:column="23">APLOG_MARK<pos:position pos:line="50" pos:column="33"/></name></expr></argument>, <argument><expr><name pos:line="50" pos:column="35">APLOG_ERR<pos:position pos:line="50" pos:column="44"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="50" pos:column="46">0<pos:position pos:line="50" pos:column="47"/></literal></expr></argument>, <argument><expr><name pos:line="50" pos:column="49">r<pos:position pos:line="50" pos:column="50"/></name></expr></argument>, <argument><expr><call><name pos:line="50" pos:column="52">APLOGNO<pos:position pos:line="50" pos:column="59"/></name><argument_list pos:line="50" pos:column="59">(<argument><expr><literal type="number" pos:line="50" pos:column="60">02316<pos:position pos:line="50" pos:column="65"/></literal></expr></argument>)<pos:position pos:line="50" pos:column="66"/></argument_list></call>
                      <literal type="string" pos:line="51" pos:column="23">"Error executing authz provider %s: %s"<pos:position pos:line="51" pos:column="62"/></literal></expr></argument>, <argument><expr><name><name pos:line="51" pos:column="64">prov_spec<pos:position pos:line="51" pos:column="73"/></name><operator pos:line="51" pos:column="73">-&gt;<pos:position pos:line="51" pos:column="78"/></operator><name pos:line="51" pos:column="75">name<pos:position pos:line="51" pos:column="79"/></name></name></expr></argument>, <argument><expr><name pos:line="51" pos:column="81">err<pos:position pos:line="51" pos:column="84"/></name></expr></argument>)<pos:position pos:line="51" pos:column="85"/></argument_list></call></expr>;<pos:position pos:line="51" pos:column="86"/></expr_stmt>
        <expr_stmt><expr><call><name pos:line="52" pos:column="9">ap_lua_release_state<pos:position pos:line="52" pos:column="29"/></name><argument_list pos:line="52" pos:column="29">(<argument><expr><name pos:line="52" pos:column="30">L<pos:position pos:line="52" pos:column="31"/></name></expr></argument>, <argument><expr><name pos:line="52" pos:column="33">spec<pos:position pos:line="52" pos:column="37"/></name></expr></argument>, <argument><expr><name pos:line="52" pos:column="39">r<pos:position pos:line="52" pos:column="40"/></name></expr></argument>)<pos:position pos:line="52" pos:column="41"/></argument_list></call></expr>;<pos:position pos:line="52" pos:column="42"/></expr_stmt>
        <return pos:line="53" pos:column="9">return <expr><name pos:line="53" pos:column="16">AUTHZ_GENERAL_ERROR<pos:position pos:line="53" pos:column="35"/></name></expr>;<pos:position pos:line="53" pos:column="36"/></return>
    }<pos:position pos:line="54" pos:column="6"/></block></then></if>
    <if pos:line="55" pos:column="5">if <condition pos:line="55" pos:column="8">(<expr><operator pos:line="55" pos:column="9">!<pos:position pos:line="55" pos:column="10"/></operator><call><name pos:line="55" pos:column="10">lua_isnumber<pos:position pos:line="55" pos:column="22"/></name><argument_list pos:line="55" pos:column="22">(<argument><expr><name pos:line="55" pos:column="23">L<pos:position pos:line="55" pos:column="24"/></name></expr></argument>, <argument><expr><operator pos:line="55" pos:column="26">-<pos:position pos:line="55" pos:column="27"/></operator><literal type="number" pos:line="55" pos:column="27">1<pos:position pos:line="55" pos:column="28"/></literal></expr></argument>)<pos:position pos:line="55" pos:column="29"/></argument_list></call></expr>)<pos:position pos:line="55" pos:column="30"/></condition><then pos:line="55" pos:column="30"> <block pos:line="55" pos:column="31">{
        <expr_stmt><expr><call><name pos:line="56" pos:column="9">ap_log_rerror<pos:position pos:line="56" pos:column="22"/></name><argument_list pos:line="56" pos:column="22">(<argument><expr><name pos:line="56" pos:column="23">APLOG_MARK<pos:position pos:line="56" pos:column="33"/></name></expr></argument>, <argument><expr><name pos:line="56" pos:column="35">APLOG_ERR<pos:position pos:line="56" pos:column="44"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="56" pos:column="46">0<pos:position pos:line="56" pos:column="47"/></literal></expr></argument>, <argument><expr><name pos:line="56" pos:column="49">r<pos:position pos:line="56" pos:column="50"/></name></expr></argument>, <argument><expr><call><name pos:line="56" pos:column="52">APLOGNO<pos:position pos:line="56" pos:column="59"/></name><argument_list pos:line="56" pos:column="59">(<argument><expr><literal type="number" pos:line="56" pos:column="60">02317<pos:position pos:line="56" pos:column="65"/></literal></expr></argument>)<pos:position pos:line="56" pos:column="66"/></argument_list></call>
                      <literal type="string" pos:line="57" pos:column="23">"Error: authz provider %s did not return integer"<pos:position pos:line="57" pos:column="72"/></literal></expr></argument>, <argument><expr><name><name pos:line="57" pos:column="74">prov_spec<pos:position pos:line="57" pos:column="83"/></name><operator pos:line="57" pos:column="83">-&gt;<pos:position pos:line="57" pos:column="88"/></operator><name pos:line="57" pos:column="85">name<pos:position pos:line="57" pos:column="89"/></name></name></expr></argument>)<pos:position pos:line="57" pos:column="90"/></argument_list></call></expr>;<pos:position pos:line="57" pos:column="91"/></expr_stmt>
        <expr_stmt><expr><call><name pos:line="58" pos:column="9">ap_lua_release_state<pos:position pos:line="58" pos:column="29"/></name><argument_list pos:line="58" pos:column="29">(<argument><expr><name pos:line="58" pos:column="30">L<pos:position pos:line="58" pos:column="31"/></name></expr></argument>, <argument><expr><name pos:line="58" pos:column="33">spec<pos:position pos:line="58" pos:column="37"/></name></expr></argument>, <argument><expr><name pos:line="58" pos:column="39">r<pos:position pos:line="58" pos:column="40"/></name></expr></argument>)<pos:position pos:line="58" pos:column="41"/></argument_list></call></expr>;<pos:position pos:line="58" pos:column="42"/></expr_stmt>
        <return pos:line="59" pos:column="9">return <expr><name pos:line="59" pos:column="16">AUTHZ_GENERAL_ERROR<pos:position pos:line="59" pos:column="35"/></name></expr>;<pos:position pos:line="59" pos:column="36"/></return>
    }<pos:position pos:line="60" pos:column="6"/></block></then></if>
    <expr_stmt><expr><name pos:line="61" pos:column="5">result<pos:position pos:line="61" pos:column="11"/></name> <operator pos:line="61" pos:column="12">=<pos:position pos:line="61" pos:column="13"/></operator> <call><name pos:line="61" pos:column="14">lua_tointeger<pos:position pos:line="61" pos:column="27"/></name><argument_list pos:line="61" pos:column="27">(<argument><expr><name pos:line="61" pos:column="28">L<pos:position pos:line="61" pos:column="29"/></name></expr></argument>, <argument><expr><operator pos:line="61" pos:column="31">-<pos:position pos:line="61" pos:column="32"/></operator><literal type="number" pos:line="61" pos:column="32">1<pos:position pos:line="61" pos:column="33"/></literal></expr></argument>)<pos:position pos:line="61" pos:column="34"/></argument_list></call></expr>;<pos:position pos:line="61" pos:column="35"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="62" pos:column="5">ap_lua_release_state<pos:position pos:line="62" pos:column="25"/></name><argument_list pos:line="62" pos:column="25">(<argument><expr><name pos:line="62" pos:column="26">L<pos:position pos:line="62" pos:column="27"/></name></expr></argument>, <argument><expr><name pos:line="62" pos:column="29">spec<pos:position pos:line="62" pos:column="33"/></name></expr></argument>, <argument><expr><name pos:line="62" pos:column="35">r<pos:position pos:line="62" pos:column="36"/></name></expr></argument>)<pos:position pos:line="62" pos:column="37"/></argument_list></call></expr>;<pos:position pos:line="62" pos:column="38"/></expr_stmt>
    <switch pos:line="63" pos:column="5">switch <condition pos:line="63" pos:column="12">(<expr><name pos:line="63" pos:column="13">result<pos:position pos:line="63" pos:column="19"/></name></expr>)<pos:position pos:line="63" pos:column="20"/></condition> <block pos:line="63" pos:column="21">{
        <case pos:line="64" pos:column="9">case <expr><name pos:line="64" pos:column="14">AUTHZ_DENIED<pos:position pos:line="64" pos:column="26"/></name></expr>:<pos:position pos:line="64" pos:column="27"/></case>
        <case pos:line="65" pos:column="9">case <expr><name pos:line="65" pos:column="14">AUTHZ_GRANTED<pos:position pos:line="65" pos:column="27"/></name></expr>:<pos:position pos:line="65" pos:column="28"/></case>
        <case pos:line="66" pos:column="9">case <expr><name pos:line="66" pos:column="14">AUTHZ_NEUTRAL<pos:position pos:line="66" pos:column="27"/></name></expr>:<pos:position pos:line="66" pos:column="28"/></case>
        <case pos:line="67" pos:column="9">case <expr><name pos:line="67" pos:column="14">AUTHZ_GENERAL_ERROR<pos:position pos:line="67" pos:column="33"/></name></expr>:<pos:position pos:line="67" pos:column="34"/></case>
        <case pos:line="68" pos:column="9">case <expr><name pos:line="68" pos:column="14">AUTHZ_DENIED_NO_USER<pos:position pos:line="68" pos:column="34"/></name></expr>:<pos:position pos:line="68" pos:column="35"/></case>
            <return pos:line="69" pos:column="13">return <expr><name pos:line="69" pos:column="20">result<pos:position pos:line="69" pos:column="26"/></name></expr>;<pos:position pos:line="69" pos:column="27"/></return>
        <default pos:line="70" pos:column="9">default:<pos:position pos:line="70" pos:column="17"/></default>
            <expr_stmt><expr><call><name pos:line="71" pos:column="13">ap_log_rerror<pos:position pos:line="71" pos:column="26"/></name><argument_list pos:line="71" pos:column="26">(<argument><expr><name pos:line="71" pos:column="27">APLOG_MARK<pos:position pos:line="71" pos:column="37"/></name></expr></argument>, <argument><expr><name pos:line="71" pos:column="39">APLOG_ERR<pos:position pos:line="71" pos:column="48"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="71" pos:column="50">0<pos:position pos:line="71" pos:column="51"/></literal></expr></argument>, <argument><expr><name pos:line="71" pos:column="53">r<pos:position pos:line="71" pos:column="54"/></name></expr></argument>, <argument><expr><call><name pos:line="71" pos:column="56">APLOGNO<pos:position pos:line="71" pos:column="63"/></name><argument_list pos:line="71" pos:column="63">(<argument><expr><literal type="number" pos:line="71" pos:column="64">02318<pos:position pos:line="71" pos:column="69"/></literal></expr></argument>)<pos:position pos:line="71" pos:column="70"/></argument_list></call>
                          <literal type="string" pos:line="72" pos:column="27">"Error: authz provider %s: invalid return value %d"<pos:position pos:line="72" pos:column="78"/></literal></expr></argument>,
                          <argument><expr><name><name pos:line="73" pos:column="27">prov_spec<pos:position pos:line="73" pos:column="36"/></name><operator pos:line="73" pos:column="36">-&gt;<pos:position pos:line="73" pos:column="41"/></operator><name pos:line="73" pos:column="38">name<pos:position pos:line="73" pos:column="42"/></name></name></expr></argument>, <argument><expr><name pos:line="73" pos:column="44">result<pos:position pos:line="73" pos:column="50"/></name></expr></argument>)<pos:position pos:line="73" pos:column="51"/></argument_list></call></expr>;<pos:position pos:line="73" pos:column="52"/></expr_stmt>
    }<pos:position pos:line="74" pos:column="6"/></block></switch>
    <return pos:line="75" pos:column="5">return <expr><name pos:line="75" pos:column="12">AUTHZ_GENERAL_ERROR<pos:position pos:line="75" pos:column="31"/></name></expr>;<pos:position pos:line="75" pos:column="32"/></return>
}<pos:position pos:line="76" pos:column="2"/></block></function></unit>

<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/httpd/gumtree/httpd_repos_function_259_httpd-2.0.44.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">void<pos:position pos:line="1" pos:column="5"/></name></type> <name pos:line="1" pos:column="6">dav_add_all_liveprop_xmlns<pos:position pos:line="1" pos:column="32"/></name><parameter_list pos:line="1" pos:column="32">(<parameter><decl><type><name pos:line="1" pos:column="33">apr_pool_t<pos:position pos:line="1" pos:column="43"/></name> <modifier pos:line="1" pos:column="44">*<pos:position pos:line="1" pos:column="45"/></modifier></type><name pos:line="1" pos:column="45">p<pos:position pos:line="1" pos:column="46"/></name></decl></parameter>, <parameter><decl><type><name pos:line="1" pos:column="48">apr_text_header<pos:position pos:line="1" pos:column="63"/></name> <modifier pos:line="1" pos:column="64">*<pos:position pos:line="1" pos:column="65"/></modifier></type><name pos:line="1" pos:column="65">phdr<pos:position pos:line="1" pos:column="69"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="70"/></parameter_list>
<block pos:line="2" pos:column="1">{
    <decl_stmt><decl><type><name pos:line="3" pos:column="5">apr_hash_index_t<pos:position pos:line="3" pos:column="21"/></name> <modifier pos:line="3" pos:column="22">*<pos:position pos:line="3" pos:column="23"/></modifier></type><name pos:line="3" pos:column="23">idx<pos:position pos:line="3" pos:column="26"/></name> <init pos:line="3" pos:column="27">= <expr><call><name pos:line="3" pos:column="29">apr_hash_first<pos:position pos:line="3" pos:column="43"/></name><argument_list pos:line="3" pos:column="43">(<argument><expr><name pos:line="3" pos:column="44">p<pos:position pos:line="3" pos:column="45"/></name></expr></argument>, <argument><expr><name pos:line="3" pos:column="47">dav_liveprop_uris<pos:position pos:line="3" pos:column="64"/></name></expr></argument>)<pos:position pos:line="3" pos:column="65"/></argument_list></call></expr></init></decl>;<pos:position pos:line="3" pos:column="66"/></decl_stmt>

    <for pos:line="5" pos:column="5">for <control pos:line="5" pos:column="9">( <init pos:line="5" pos:column="11">;<pos:position pos:line="5" pos:column="12"/></init> <condition><expr><name pos:line="5" pos:column="13">idx<pos:position pos:line="5" pos:column="16"/></name> <operator pos:line="5" pos:column="17">!=<pos:position pos:line="5" pos:column="19"/></operator> <name pos:line="5" pos:column="20">NULL<pos:position pos:line="5" pos:column="24"/></name></expr>;<pos:position pos:line="5" pos:column="25"/></condition> <incr><expr><name pos:line="5" pos:column="26">idx<pos:position pos:line="5" pos:column="29"/></name> <operator pos:line="5" pos:column="30">=<pos:position pos:line="5" pos:column="31"/></operator> <call><name pos:line="5" pos:column="32">apr_hash_next<pos:position pos:line="5" pos:column="45"/></name><argument_list pos:line="5" pos:column="45">(<argument><expr><name pos:line="5" pos:column="46">idx<pos:position pos:line="5" pos:column="49"/></name></expr></argument>)<pos:position pos:line="5" pos:column="50"/></argument_list></call></expr></incr> )<pos:position pos:line="5" pos:column="52"/></control> <block pos:line="5" pos:column="53">{
        <decl_stmt><decl><type><specifier pos:line="6" pos:column="9">const<pos:position pos:line="6" pos:column="14"/></specifier> <name pos:line="6" pos:column="15">void<pos:position pos:line="6" pos:column="19"/></name> <modifier pos:line="6" pos:column="20">*<pos:position pos:line="6" pos:column="21"/></modifier></type><name pos:line="6" pos:column="21">key<pos:position pos:line="6" pos:column="24"/></name></decl>;<pos:position pos:line="6" pos:column="25"/></decl_stmt>
        <decl_stmt><decl><type><name pos:line="7" pos:column="9">void<pos:position pos:line="7" pos:column="13"/></name> <modifier pos:line="7" pos:column="14">*<pos:position pos:line="7" pos:column="15"/></modifier></type><name pos:line="7" pos:column="15">val<pos:position pos:line="7" pos:column="18"/></name></decl>;<pos:position pos:line="7" pos:column="19"/></decl_stmt>
        <decl_stmt><decl><type><specifier pos:line="8" pos:column="9">const<pos:position pos:line="8" pos:column="14"/></specifier> <name pos:line="8" pos:column="15">char<pos:position pos:line="8" pos:column="19"/></name> <modifier pos:line="8" pos:column="20">*<pos:position pos:line="8" pos:column="21"/></modifier></type><name pos:line="8" pos:column="21">s<pos:position pos:line="8" pos:column="22"/></name></decl>;<pos:position pos:line="8" pos:column="23"/></decl_stmt>

        <expr_stmt><expr><call><name pos:line="10" pos:column="9">apr_hash_this<pos:position pos:line="10" pos:column="22"/></name><argument_list pos:line="10" pos:column="22">(<argument><expr><name pos:line="10" pos:column="23">idx<pos:position pos:line="10" pos:column="26"/></name></expr></argument>, <argument><expr><operator pos:line="10" pos:column="28">&amp;<pos:position pos:line="10" pos:column="33"/></operator><name pos:line="10" pos:column="29">key<pos:position pos:line="10" pos:column="32"/></name></expr></argument>, <argument><expr><name pos:line="10" pos:column="34">NULL<pos:position pos:line="10" pos:column="38"/></name></expr></argument>, <argument><expr><operator pos:line="10" pos:column="40">&amp;<pos:position pos:line="10" pos:column="45"/></operator><name pos:line="10" pos:column="41">val<pos:position pos:line="10" pos:column="44"/></name></expr></argument>)<pos:position pos:line="10" pos:column="45"/></argument_list></call></expr>;<pos:position pos:line="10" pos:column="46"/></expr_stmt>

        <expr_stmt><expr><name pos:line="12" pos:column="9">s<pos:position pos:line="12" pos:column="10"/></name> <operator pos:line="12" pos:column="11">=<pos:position pos:line="12" pos:column="12"/></operator> <call><name pos:line="12" pos:column="13">apr_psprintf<pos:position pos:line="12" pos:column="25"/></name><argument_list pos:line="12" pos:column="25">(<argument><expr><name pos:line="12" pos:column="26">p<pos:position pos:line="12" pos:column="27"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="12" pos:column="29">" xmlns:lp%d=\"%s\""<pos:position pos:line="12" pos:column="49"/></literal></expr></argument>, <argument><expr><operator pos:line="12" pos:column="51">(<pos:position pos:line="12" pos:column="52"/></operator><name pos:line="12" pos:column="52">int<pos:position pos:line="12" pos:column="55"/></name><operator pos:line="12" pos:column="55">)<pos:position pos:line="12" pos:column="56"/></operator><name pos:line="12" pos:column="56">val<pos:position pos:line="12" pos:column="59"/></name></expr></argument>, <argument><expr><operator pos:line="12" pos:column="61">(<pos:position pos:line="12" pos:column="62"/></operator><specifier pos:line="12" pos:column="62">const<pos:position pos:line="12" pos:column="67"/></specifier> <name pos:line="12" pos:column="68">char<pos:position pos:line="12" pos:column="72"/></name> <operator pos:line="12" pos:column="73">*<pos:position pos:line="12" pos:column="74"/></operator><operator pos:line="12" pos:column="74">)<pos:position pos:line="12" pos:column="75"/></operator><name pos:line="12" pos:column="75">key<pos:position pos:line="12" pos:column="78"/></name></expr></argument>)<pos:position pos:line="12" pos:column="79"/></argument_list></call></expr>;<pos:position pos:line="12" pos:column="80"/></expr_stmt>
        <expr_stmt><expr><call><name pos:line="13" pos:column="9">apr_text_append<pos:position pos:line="13" pos:column="24"/></name><argument_list pos:line="13" pos:column="24">(<argument><expr><name pos:line="13" pos:column="25">p<pos:position pos:line="13" pos:column="26"/></name></expr></argument>, <argument><expr><name pos:line="13" pos:column="28">phdr<pos:position pos:line="13" pos:column="32"/></name></expr></argument>, <argument><expr><name pos:line="13" pos:column="34">s<pos:position pos:line="13" pos:column="35"/></name></expr></argument>)<pos:position pos:line="13" pos:column="36"/></argument_list></call></expr>;<pos:position pos:line="13" pos:column="37"/></expr_stmt>
    }<pos:position pos:line="14" pos:column="6"/></block></for>
}<pos:position pos:line="15" pos:column="2"/></block></function></unit>

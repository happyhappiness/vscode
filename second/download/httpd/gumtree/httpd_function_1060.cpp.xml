<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/httpd/gumtree/httpd_function_1060.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">char<pos:position pos:line="1" pos:column="5"/></name> <modifier pos:line="1" pos:column="6">*<pos:position pos:line="1" pos:column="7"/></modifier></type><name pos:line="1" pos:column="7">ap_get_local_host<pos:position pos:line="1" pos:column="24"/></name><parameter_list pos:line="1" pos:column="24">(<parameter><decl><type><name pos:line="1" pos:column="25">apr_pool_t<pos:position pos:line="1" pos:column="35"/></name> <modifier pos:line="1" pos:column="36">*<pos:position pos:line="1" pos:column="37"/></modifier></type><name pos:line="1" pos:column="37">a<pos:position pos:line="1" pos:column="38"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="39"/></parameter_list>
<block pos:line="2" pos:column="1">{
<cpp:ifndef pos:line="3" pos:column="1">#<cpp:directive pos:line="3" pos:column="2">ifndef<pos:position pos:line="3" pos:column="8"/></cpp:directive> <name pos:line="3" pos:column="9">MAXHOSTNAMELEN<pos:position pos:line="3" pos:column="23"/></name></cpp:ifndef>
<cpp:define pos:line="4" pos:column="1">#<cpp:directive pos:line="4" pos:column="2">define<pos:position pos:line="4" pos:column="8"/></cpp:directive> <cpp:macro><name pos:line="4" pos:column="9">MAXHOSTNAMELEN<pos:position pos:line="4" pos:column="23"/></name></cpp:macro> <cpp:value pos:line="4" pos:column="24">256<pos:position pos:line="4" pos:column="27"/></cpp:value></cpp:define>
<cpp:endif pos:line="5" pos:column="1">#<cpp:directive pos:line="5" pos:column="2">endif<pos:position pos:line="5" pos:column="7"/></cpp:directive></cpp:endif>
    <decl_stmt><decl><type><name pos:line="6" pos:column="5">char<pos:position pos:line="6" pos:column="9"/></name></type> <name><name pos:line="6" pos:column="10">str<pos:position pos:line="6" pos:column="13"/></name><index pos:line="6" pos:column="13">[<expr><name pos:line="6" pos:column="14">MAXHOSTNAMELEN<pos:position pos:line="6" pos:column="28"/></name> <operator pos:line="6" pos:column="29">+<pos:position pos:line="6" pos:column="30"/></operator> <literal type="number" pos:line="6" pos:column="31">1<pos:position pos:line="6" pos:column="32"/></literal></expr>]<pos:position pos:line="6" pos:column="33"/></index></name></decl>;<pos:position pos:line="6" pos:column="34"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="7" pos:column="5">char<pos:position pos:line="7" pos:column="9"/></name> <modifier pos:line="7" pos:column="10">*<pos:position pos:line="7" pos:column="11"/></modifier></type><name pos:line="7" pos:column="11">server_hostname<pos:position pos:line="7" pos:column="26"/></name> <init pos:line="7" pos:column="27">= <expr><name pos:line="7" pos:column="29">NULL<pos:position pos:line="7" pos:column="33"/></name></expr></init></decl>;<pos:position pos:line="7" pos:column="34"/></decl_stmt>
    <decl_stmt><decl><type><name><name pos:line="8" pos:column="5">struct<pos:position pos:line="8" pos:column="11"/></name> <name pos:line="8" pos:column="12">hostent<pos:position pos:line="8" pos:column="19"/></name></name> <modifier pos:line="8" pos:column="20">*<pos:position pos:line="8" pos:column="21"/></modifier></type><name pos:line="8" pos:column="21">p<pos:position pos:line="8" pos:column="22"/></name></decl>;<pos:position pos:line="8" pos:column="23"/></decl_stmt>

<cpp:ifdef pos:line="10" pos:column="1">#<cpp:directive pos:line="10" pos:column="2">ifdef<pos:position pos:line="10" pos:column="7"/></cpp:directive> <name pos:line="10" pos:column="8">BEOS_R5<pos:position pos:line="10" pos:column="15"/></name></cpp:ifdef>
    <if pos:line="11" pos:column="5">if <condition pos:line="11" pos:column="8">(<expr><call><name pos:line="11" pos:column="9">gethostname<pos:position pos:line="11" pos:column="20"/></name><argument_list pos:line="11" pos:column="20">(<argument><expr><name pos:line="11" pos:column="21">str<pos:position pos:line="11" pos:column="24"/></name></expr></argument>, <argument><expr><sizeof pos:line="11" pos:column="26">sizeof<argument_list pos:line="11" pos:column="32">(<argument><expr><name pos:line="11" pos:column="33">str<pos:position pos:line="11" pos:column="36"/></name></expr></argument>)<pos:position pos:line="11" pos:column="37"/></argument_list></sizeof> <operator pos:line="11" pos:column="38">-<pos:position pos:line="11" pos:column="39"/></operator> <literal type="number" pos:line="11" pos:column="40">1<pos:position pos:line="11" pos:column="41"/></literal></expr></argument>)<pos:position pos:line="11" pos:column="42"/></argument_list></call> <operator pos:line="11" pos:column="43">==<pos:position pos:line="11" pos:column="45"/></operator> <literal type="number" pos:line="11" pos:column="46">0<pos:position pos:line="11" pos:column="47"/></literal></expr>)<pos:position pos:line="11" pos:column="48"/></condition><then pos:line="11" pos:column="48">
<cpp:else pos:line="12" pos:column="1">#<cpp:directive pos:line="12" pos:column="2">else<pos:position pos:line="12" pos:column="6"/></cpp:directive></cpp:else>
    <block type="pseudo"><if pos:line="13" pos:column="5">if <condition pos:line="13" pos:column="8">(<expr><call><name pos:line="13" pos:column="9">gethostname<pos:position pos:line="13" pos:column="20"/></name><argument_list pos:line="13" pos:column="20">(<argument><expr><name pos:line="13" pos:column="21">str<pos:position pos:line="13" pos:column="24"/></name></expr></argument>, <argument><expr><sizeof pos:line="13" pos:column="26">sizeof<argument_list pos:line="13" pos:column="32">(<argument><expr><name pos:line="13" pos:column="33">str<pos:position pos:line="13" pos:column="36"/></name></expr></argument>)<pos:position pos:line="13" pos:column="37"/></argument_list></sizeof> <operator pos:line="13" pos:column="38">-<pos:position pos:line="13" pos:column="39"/></operator> <literal type="number" pos:line="13" pos:column="40">1<pos:position pos:line="13" pos:column="41"/></literal></expr></argument>)<pos:position pos:line="13" pos:column="42"/></argument_list></call> <operator pos:line="13" pos:column="43">!=<pos:position pos:line="13" pos:column="45"/></operator> <literal type="number" pos:line="13" pos:column="46">0<pos:position pos:line="13" pos:column="47"/></literal></expr>)<pos:position pos:line="13" pos:column="48"/></condition><then pos:line="13" pos:column="48">
<cpp:endif pos:line="14" pos:column="1">#<cpp:directive pos:line="14" pos:column="2">endif<pos:position pos:line="14" pos:column="7"/></cpp:directive></cpp:endif>
    <block pos:line="15" pos:column="5">{
        <expr_stmt><expr><call><name pos:line="16" pos:column="9">ap_log_perror<pos:position pos:line="16" pos:column="22"/></name><argument_list pos:line="16" pos:column="22">(<argument><expr><name pos:line="16" pos:column="23">APLOG_MARK<pos:position pos:line="16" pos:column="33"/></name></expr></argument>, <argument><expr><name pos:line="16" pos:column="35">APLOG_STARTUP<pos:position pos:line="16" pos:column="48"/></name> <operator pos:line="16" pos:column="49">|<pos:position pos:line="16" pos:column="50"/></operator> <name pos:line="16" pos:column="51">APLOG_WARNING<pos:position pos:line="16" pos:column="64"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="16" pos:column="66">0<pos:position pos:line="16" pos:column="67"/></literal></expr></argument>, <argument><expr><name pos:line="16" pos:column="69">a<pos:position pos:line="16" pos:column="70"/></name></expr></argument>,
                     <argument><expr><literal type="string" pos:line="17" pos:column="22">"%s: gethostname() failed to determine ServerName"<pos:position pos:line="17" pos:column="72"/></literal></expr></argument>,
                     <argument><expr><name pos:line="18" pos:column="22">ap_server_argv0<pos:position pos:line="18" pos:column="37"/></name></expr></argument>)<pos:position pos:line="18" pos:column="38"/></argument_list></call></expr>;<pos:position pos:line="18" pos:column="39"/></expr_stmt>
    }<pos:position pos:line="19" pos:column="6"/></block></then>
    <else pos:line="20" pos:column="5">else 
    <block pos:line="21" pos:column="5">{
        <expr_stmt><expr><name><name pos:line="22" pos:column="9">str<pos:position pos:line="22" pos:column="12"/></name><index pos:line="22" pos:column="12">[<expr><sizeof pos:line="22" pos:column="13">sizeof<argument_list pos:line="22" pos:column="19">(<argument><expr><name pos:line="22" pos:column="20">str<pos:position pos:line="22" pos:column="23"/></name></expr></argument>)<pos:position pos:line="22" pos:column="24"/></argument_list></sizeof> <operator pos:line="22" pos:column="25">-<pos:position pos:line="22" pos:column="26"/></operator> <literal type="number" pos:line="22" pos:column="27">1<pos:position pos:line="22" pos:column="28"/></literal></expr>]<pos:position pos:line="22" pos:column="29"/></index></name> <operator pos:line="22" pos:column="30">=<pos:position pos:line="22" pos:column="31"/></operator> <literal type="char" pos:line="22" pos:column="32">'\0'<pos:position pos:line="22" pos:column="36"/></literal></expr>;<pos:position pos:line="22" pos:column="37"/></expr_stmt>
        <comment type="block" pos:line="23" pos:column="9">/* TODO: Screaming for APR-ization */</comment>
        <if pos:line="24" pos:column="9">if <condition pos:line="24" pos:column="12">(<expr><operator pos:line="24" pos:column="13">(<pos:position pos:line="24" pos:column="14"/></operator><operator pos:line="24" pos:column="14">!<pos:position pos:line="24" pos:column="15"/></operator><operator pos:line="24" pos:column="15">(<pos:position pos:line="24" pos:column="16"/></operator><name pos:line="24" pos:column="16">p<pos:position pos:line="24" pos:column="17"/></name> <operator pos:line="24" pos:column="18">=<pos:position pos:line="24" pos:column="19"/></operator> <call><name pos:line="24" pos:column="20">gethostbyname<pos:position pos:line="24" pos:column="33"/></name><argument_list pos:line="24" pos:column="33">(<argument><expr><name pos:line="24" pos:column="34">str<pos:position pos:line="24" pos:column="37"/></name></expr></argument>)<pos:position pos:line="24" pos:column="38"/></argument_list></call><operator pos:line="24" pos:column="38">)<pos:position pos:line="24" pos:column="39"/></operator><operator pos:line="24" pos:column="39">)<pos:position pos:line="24" pos:column="40"/></operator> 
            <operator pos:line="25" pos:column="13">||<pos:position pos:line="25" pos:column="15"/></operator> <operator pos:line="25" pos:column="16">(<pos:position pos:line="25" pos:column="17"/></operator><operator pos:line="25" pos:column="17">!<pos:position pos:line="25" pos:column="18"/></operator><operator pos:line="25" pos:column="18">(<pos:position pos:line="25" pos:column="19"/></operator><name pos:line="25" pos:column="19">server_hostname<pos:position pos:line="25" pos:column="34"/></name> <operator pos:line="25" pos:column="35">=<pos:position pos:line="25" pos:column="36"/></operator> <call><name pos:line="25" pos:column="37">find_fqdn<pos:position pos:line="25" pos:column="46"/></name><argument_list pos:line="25" pos:column="46">(<argument><expr><name pos:line="25" pos:column="47">a<pos:position pos:line="25" pos:column="48"/></name></expr></argument>, <argument><expr><name pos:line="25" pos:column="50">p<pos:position pos:line="25" pos:column="51"/></name></expr></argument>)<pos:position pos:line="25" pos:column="52"/></argument_list></call><operator pos:line="25" pos:column="52">)<pos:position pos:line="25" pos:column="53"/></operator><operator pos:line="25" pos:column="53">)<pos:position pos:line="25" pos:column="54"/></operator></expr>)<pos:position pos:line="25" pos:column="55"/></condition><then pos:line="25" pos:column="55"> <block pos:line="25" pos:column="56">{
            <comment type="block" pos:line="26" pos:column="13">/* Recovery - return the default servername by IP: */</comment>
            <if pos:line="27" pos:column="13">if <condition pos:line="27" pos:column="16">(<expr><name pos:line="27" pos:column="17">p<pos:position pos:line="27" pos:column="18"/></name> <operator pos:line="27" pos:column="19">&amp;&amp;<pos:position pos:line="27" pos:column="29"/></operator> <name><name pos:line="27" pos:column="22">p<pos:position pos:line="27" pos:column="23"/></name><operator pos:line="27" pos:column="23">-&gt;<pos:position pos:line="27" pos:column="28"/></operator><name pos:line="27" pos:column="25">h_addr_list<pos:position pos:line="27" pos:column="36"/></name><index pos:line="27" pos:column="36">[<expr><literal type="number" pos:line="27" pos:column="37">0<pos:position pos:line="27" pos:column="38"/></literal></expr>]<pos:position pos:line="27" pos:column="39"/></index></name></expr>)<pos:position pos:line="27" pos:column="40"/></condition><then pos:line="27" pos:column="40"> <block pos:line="27" pos:column="41">{
                <expr_stmt><expr><call><name pos:line="28" pos:column="17">apr_snprintf<pos:position pos:line="28" pos:column="29"/></name><argument_list pos:line="28" pos:column="29">(<argument><expr><name pos:line="28" pos:column="30">str<pos:position pos:line="28" pos:column="33"/></name></expr></argument>, <argument><expr><sizeof pos:line="28" pos:column="35">sizeof<argument_list pos:line="28" pos:column="41">(<argument><expr><name pos:line="28" pos:column="42">str<pos:position pos:line="28" pos:column="45"/></name></expr></argument>)<pos:position pos:line="28" pos:column="46"/></argument_list></sizeof></expr></argument>, <argument><expr><literal type="string" pos:line="28" pos:column="48">"%pA"<pos:position pos:line="28" pos:column="53"/></literal></expr></argument>, <argument><expr><name><name pos:line="28" pos:column="55">p<pos:position pos:line="28" pos:column="56"/></name><operator pos:line="28" pos:column="56">-&gt;<pos:position pos:line="28" pos:column="61"/></operator><name pos:line="28" pos:column="58">h_addr_list<pos:position pos:line="28" pos:column="69"/></name><index pos:line="28" pos:column="69">[<expr><literal type="number" pos:line="28" pos:column="70">0<pos:position pos:line="28" pos:column="71"/></literal></expr>]<pos:position pos:line="28" pos:column="72"/></index></name></expr></argument>)<pos:position pos:line="28" pos:column="73"/></argument_list></call></expr>;<pos:position pos:line="28" pos:column="74"/></expr_stmt>
                <expr_stmt><expr><name pos:line="29" pos:column="17">server_hostname<pos:position pos:line="29" pos:column="32"/></name> <operator pos:line="29" pos:column="33">=<pos:position pos:line="29" pos:column="34"/></operator> <call><name pos:line="29" pos:column="35">apr_pstrdup<pos:position pos:line="29" pos:column="46"/></name><argument_list pos:line="29" pos:column="46">(<argument><expr><name pos:line="29" pos:column="47">a<pos:position pos:line="29" pos:column="48"/></name></expr></argument>, <argument><expr><name pos:line="29" pos:column="50">str<pos:position pos:line="29" pos:column="53"/></name></expr></argument>)<pos:position pos:line="29" pos:column="54"/></argument_list></call></expr>;<pos:position pos:line="29" pos:column="55"/></expr_stmt>
                <comment type="block" pos:line="30" pos:column="17">/* We will drop through to report the IP-named server */</comment>
            }<pos:position pos:line="31" pos:column="14"/></block></then></if>
        }<pos:position pos:line="32" pos:column="10"/></block></then>
        <else pos:line="33" pos:column="9">else <block pos:line="33" pos:column="14">{
            <comment type="block" pos:line="34" pos:column="13">/* Since we found a fdqn, return it with no logged message. */</comment>
            <return pos:line="35" pos:column="13">return <expr><name pos:line="35" pos:column="20">server_hostname<pos:position pos:line="35" pos:column="35"/></name></expr>;<pos:position pos:line="35" pos:column="36"/></return>
        }<pos:position pos:line="36" pos:column="10"/></block></else></if>
    }<pos:position pos:line="37" pos:column="6"/></block></else></if></block></then></if>

    <if pos:line="39" pos:column="5">if <condition pos:line="39" pos:column="8">(<expr><operator pos:line="39" pos:column="9">!<pos:position pos:line="39" pos:column="10"/></operator><name pos:line="39" pos:column="10">server_hostname<pos:position pos:line="39" pos:column="25"/></name></expr>)<pos:position pos:line="39" pos:column="26"/></condition><then pos:line="39" pos:column="26"> 
        <block type="pseudo"><expr_stmt><expr><name pos:line="40" pos:column="9">server_hostname<pos:position pos:line="40" pos:column="24"/></name> <operator pos:line="40" pos:column="25">=<pos:position pos:line="40" pos:column="26"/></operator> <call><name pos:line="40" pos:column="27">apr_pstrdup<pos:position pos:line="40" pos:column="38"/></name><argument_list pos:line="40" pos:column="38">(<argument><expr><name pos:line="40" pos:column="39">a<pos:position pos:line="40" pos:column="40"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="40" pos:column="42">"127.0.0.1"<pos:position pos:line="40" pos:column="53"/></literal></expr></argument>)<pos:position pos:line="40" pos:column="54"/></argument_list></call></expr>;<pos:position pos:line="40" pos:column="55"/></expr_stmt></block></then></if>

    <expr_stmt><expr><call><name pos:line="42" pos:column="5">ap_log_perror<pos:position pos:line="42" pos:column="18"/></name><argument_list pos:line="42" pos:column="18">(<argument><expr><name pos:line="42" pos:column="19">APLOG_MARK<pos:position pos:line="42" pos:column="29"/></name></expr></argument>, <argument><expr><name pos:line="42" pos:column="31">APLOG_ALERT<pos:position pos:line="42" pos:column="42"/></name><operator pos:line="42" pos:column="42">|<pos:position pos:line="42" pos:column="43"/></operator><name pos:line="42" pos:column="43">APLOG_STARTUP<pos:position pos:line="42" pos:column="56"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="42" pos:column="58">0<pos:position pos:line="42" pos:column="59"/></literal></expr></argument>, <argument><expr><name pos:line="42" pos:column="61">a<pos:position pos:line="42" pos:column="62"/></name></expr></argument>,
                 <argument><expr><literal type="string" pos:line="43" pos:column="18">"%s: Could not determine the server's fully qualified "<pos:position pos:line="43" pos:column="73"/></literal>
                 <literal type="string" pos:line="44" pos:column="18">"domain name, using %s for ServerName"<pos:position pos:line="44" pos:column="56"/></literal></expr></argument>,
                 <argument><expr><name pos:line="45" pos:column="18">ap_server_argv0<pos:position pos:line="45" pos:column="33"/></name></expr></argument>, <argument><expr><name pos:line="45" pos:column="35">server_hostname<pos:position pos:line="45" pos:column="50"/></name></expr></argument>)<pos:position pos:line="45" pos:column="51"/></argument_list></call></expr>;<pos:position pos:line="45" pos:column="52"/></expr_stmt>
             
    <return pos:line="47" pos:column="5">return <expr><name pos:line="47" pos:column="12">server_hostname<pos:position pos:line="47" pos:column="27"/></name></expr>;<pos:position pos:line="47" pos:column="28"/></return>
}<pos:position pos:line="48" pos:column="2"/></block></function></unit>

<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/httpd/gumtree/httpd_repos_function_1337_httpd-2.0.55.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">int<pos:position pos:line="1" pos:column="11"/></name></type> <name pos:line="1" pos:column="12">handle_include<pos:position pos:line="1" pos:column="26"/></name><parameter_list pos:line="1" pos:column="26">(<parameter><decl><type><name pos:line="1" pos:column="27">include_ctx_t<pos:position pos:line="1" pos:column="40"/></name> <modifier pos:line="1" pos:column="41">*<pos:position pos:line="1" pos:column="42"/></modifier></type><name pos:line="1" pos:column="42">ctx<pos:position pos:line="1" pos:column="45"/></name></decl></parameter>, <parameter><decl><type><name pos:line="1" pos:column="47">apr_bucket_brigade<pos:position pos:line="1" pos:column="65"/></name> <modifier pos:line="1" pos:column="66">*<pos:position pos:line="1" pos:column="67"/></modifier><modifier pos:line="1" pos:column="67">*<pos:position pos:line="1" pos:column="68"/></modifier></type><name pos:line="1" pos:column="68">bb<pos:position pos:line="1" pos:column="70"/></name></decl></parameter>, 
                         <parameter><decl><type><name pos:line="2" pos:column="26">request_rec<pos:position pos:line="2" pos:column="37"/></name> <modifier pos:line="2" pos:column="38">*<pos:position pos:line="2" pos:column="39"/></modifier></type><name pos:line="2" pos:column="39">r<pos:position pos:line="2" pos:column="40"/></name></decl></parameter>, <parameter><decl><type><name pos:line="2" pos:column="42">ap_filter_t<pos:position pos:line="2" pos:column="53"/></name> <modifier pos:line="2" pos:column="54">*<pos:position pos:line="2" pos:column="55"/></modifier></type><name pos:line="2" pos:column="55">f<pos:position pos:line="2" pos:column="56"/></name></decl></parameter>, <parameter><decl><type><name pos:line="2" pos:column="58">apr_bucket<pos:position pos:line="2" pos:column="68"/></name> <modifier pos:line="2" pos:column="69">*<pos:position pos:line="2" pos:column="70"/></modifier></type><name pos:line="2" pos:column="70">head_ptr<pos:position pos:line="2" pos:column="78"/></name></decl></parameter>, 
                         <parameter><decl><type><name pos:line="3" pos:column="26">apr_bucket<pos:position pos:line="3" pos:column="36"/></name> <modifier pos:line="3" pos:column="37">*<pos:position pos:line="3" pos:column="38"/></modifier><modifier pos:line="3" pos:column="38">*<pos:position pos:line="3" pos:column="39"/></modifier></type><name pos:line="3" pos:column="39">inserted_head<pos:position pos:line="3" pos:column="52"/></name></decl></parameter>)<pos:position pos:line="3" pos:column="53"/></parameter_list>
<block pos:line="4" pos:column="1">{
    <decl_stmt><decl><type><name pos:line="5" pos:column="5">char<pos:position pos:line="5" pos:column="9"/></name> <modifier pos:line="5" pos:column="10">*<pos:position pos:line="5" pos:column="11"/></modifier></type><name pos:line="5" pos:column="11">tag<pos:position pos:line="5" pos:column="14"/></name>     <init pos:line="5" pos:column="19">= <expr><name pos:line="5" pos:column="21">NULL<pos:position pos:line="5" pos:column="25"/></name></expr></init></decl>;<pos:position pos:line="5" pos:column="26"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="6" pos:column="5">char<pos:position pos:line="6" pos:column="9"/></name> <modifier pos:line="6" pos:column="10">*<pos:position pos:line="6" pos:column="11"/></modifier></type><name pos:line="6" pos:column="11">tag_val<pos:position pos:line="6" pos:column="18"/></name> <init pos:line="6" pos:column="19">= <expr><name pos:line="6" pos:column="21">NULL<pos:position pos:line="6" pos:column="25"/></name></expr></init></decl>;<pos:position pos:line="6" pos:column="26"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="7" pos:column="5">apr_bucket<pos:position pos:line="7" pos:column="15"/></name>  <modifier pos:line="7" pos:column="17">*<pos:position pos:line="7" pos:column="18"/></modifier></type><name pos:line="7" pos:column="18">tmp_buck<pos:position pos:line="7" pos:column="26"/></name></decl>;<pos:position pos:line="7" pos:column="27"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="8" pos:column="5">char<pos:position pos:line="8" pos:column="9"/></name> <modifier pos:line="8" pos:column="10">*<pos:position pos:line="8" pos:column="11"/></modifier></type><name pos:line="8" pos:column="11">parsed_string<pos:position pos:line="8" pos:column="24"/></name></decl>;<pos:position pos:line="8" pos:column="25"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="9" pos:column="5">int<pos:position pos:line="9" pos:column="8"/></name></type> <name pos:line="9" pos:column="9">loglevel<pos:position pos:line="9" pos:column="17"/></name> <init pos:line="9" pos:column="18">= <expr><name pos:line="9" pos:column="20">APLOG_ERR<pos:position pos:line="9" pos:column="29"/></name></expr></init></decl>;<pos:position pos:line="9" pos:column="30"/></decl_stmt>

    <expr_stmt><expr><operator pos:line="11" pos:column="5">*<pos:position pos:line="11" pos:column="6"/></operator><name pos:line="11" pos:column="6">inserted_head<pos:position pos:line="11" pos:column="19"/></name> <operator pos:line="11" pos:column="20">=<pos:position pos:line="11" pos:column="21"/></operator> <name pos:line="11" pos:column="22">NULL<pos:position pos:line="11" pos:column="26"/></name></expr>;<pos:position pos:line="11" pos:column="27"/></expr_stmt>
    <if pos:line="12" pos:column="5">if <condition pos:line="12" pos:column="8">(<expr><name><name pos:line="12" pos:column="9">ctx<pos:position pos:line="12" pos:column="12"/></name><operator pos:line="12" pos:column="12">-&gt;<pos:position pos:line="12" pos:column="17"/></operator><name pos:line="12" pos:column="14">flags<pos:position pos:line="12" pos:column="19"/></name></name> <operator pos:line="12" pos:column="20">&amp;<pos:position pos:line="12" pos:column="25"/></operator> <name pos:line="12" pos:column="22">FLAG_PRINTING<pos:position pos:line="12" pos:column="35"/></name></expr>)<pos:position pos:line="12" pos:column="36"/></condition><then pos:line="12" pos:column="36"> <block pos:line="12" pos:column="37">{
        <while pos:line="13" pos:column="9">while <condition pos:line="13" pos:column="15">(<expr><literal type="number" pos:line="13" pos:column="16">1<pos:position pos:line="13" pos:column="17"/></literal></expr>)<pos:position pos:line="13" pos:column="18"/></condition> <block pos:line="13" pos:column="19">{
            <expr_stmt><expr><call><name pos:line="14" pos:column="13">ap_ssi_get_tag_and_value<pos:position pos:line="14" pos:column="37"/></name><argument_list pos:line="14" pos:column="37">(<argument><expr><name pos:line="14" pos:column="38">ctx<pos:position pos:line="14" pos:column="41"/></name></expr></argument>, <argument><expr><operator pos:line="14" pos:column="43">&amp;<pos:position pos:line="14" pos:column="48"/></operator><name pos:line="14" pos:column="44">tag<pos:position pos:line="14" pos:column="47"/></name></expr></argument>, <argument><expr><operator pos:line="14" pos:column="49">&amp;<pos:position pos:line="14" pos:column="54"/></operator><name pos:line="14" pos:column="50">tag_val<pos:position pos:line="14" pos:column="57"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="14" pos:column="59">1<pos:position pos:line="14" pos:column="60"/></literal></expr></argument>)<pos:position pos:line="14" pos:column="61"/></argument_list></call></expr>;<pos:position pos:line="14" pos:column="62"/></expr_stmt>
            <if pos:line="15" pos:column="13">if <condition pos:line="15" pos:column="16">(<expr><name pos:line="15" pos:column="17">tag_val<pos:position pos:line="15" pos:column="24"/></name> <operator pos:line="15" pos:column="25">==<pos:position pos:line="15" pos:column="27"/></operator> <name pos:line="15" pos:column="28">NULL<pos:position pos:line="15" pos:column="32"/></name></expr>)<pos:position pos:line="15" pos:column="33"/></condition><then pos:line="15" pos:column="33"> <block pos:line="15" pos:column="34">{
                <if pos:line="16" pos:column="17">if <condition pos:line="16" pos:column="20">(<expr><name pos:line="16" pos:column="21">tag<pos:position pos:line="16" pos:column="24"/></name> <operator pos:line="16" pos:column="25">==<pos:position pos:line="16" pos:column="27"/></operator> <name pos:line="16" pos:column="28">NULL<pos:position pos:line="16" pos:column="32"/></name></expr>)<pos:position pos:line="16" pos:column="33"/></condition><then pos:line="16" pos:column="33"> <block pos:line="16" pos:column="34">{
                    <return pos:line="17" pos:column="21">return <expr><operator pos:line="17" pos:column="28">(<pos:position pos:line="17" pos:column="29"/></operator><literal type="number" pos:line="17" pos:column="29">0<pos:position pos:line="17" pos:column="30"/></literal><operator pos:line="17" pos:column="30">)<pos:position pos:line="17" pos:column="31"/></operator></expr>;<pos:position pos:line="17" pos:column="32"/></return>
                }<pos:position pos:line="18" pos:column="18"/></block></then>
                <else pos:line="19" pos:column="17">else <block pos:line="19" pos:column="22">{
                    <return pos:line="20" pos:column="21">return <expr><operator pos:line="20" pos:column="28">(<pos:position pos:line="20" pos:column="29"/></operator><literal type="number" pos:line="20" pos:column="29">1<pos:position pos:line="20" pos:column="30"/></literal><operator pos:line="20" pos:column="30">)<pos:position pos:line="20" pos:column="31"/></operator></expr>;<pos:position pos:line="20" pos:column="32"/></return>
                }<pos:position pos:line="21" pos:column="18"/></block></else></if>
            }<pos:position pos:line="22" pos:column="14"/></block></then></if>
            <if pos:line="23" pos:column="13">if <condition pos:line="23" pos:column="16">(<expr><operator pos:line="23" pos:column="17">!<pos:position pos:line="23" pos:column="18"/></operator><call><name pos:line="23" pos:column="18">strcmp<pos:position pos:line="23" pos:column="24"/></name><argument_list pos:line="23" pos:column="24">(<argument><expr><name pos:line="23" pos:column="25">tag<pos:position pos:line="23" pos:column="28"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="23" pos:column="30">"virtual"<pos:position pos:line="23" pos:column="39"/></literal></expr></argument>)<pos:position pos:line="23" pos:column="40"/></argument_list></call> <operator pos:line="23" pos:column="41">||<pos:position pos:line="23" pos:column="43"/></operator> <operator pos:line="23" pos:column="44">!<pos:position pos:line="23" pos:column="45"/></operator><call><name pos:line="23" pos:column="45">strcmp<pos:position pos:line="23" pos:column="51"/></name><argument_list pos:line="23" pos:column="51">(<argument><expr><name pos:line="23" pos:column="52">tag<pos:position pos:line="23" pos:column="55"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="23" pos:column="57">"file"<pos:position pos:line="23" pos:column="63"/></literal></expr></argument>)<pos:position pos:line="23" pos:column="64"/></argument_list></call></expr>)<pos:position pos:line="23" pos:column="65"/></condition><then pos:line="23" pos:column="65"> <block pos:line="23" pos:column="66">{
                <decl_stmt><decl><type><name pos:line="24" pos:column="17">request_rec<pos:position pos:line="24" pos:column="28"/></name> <modifier pos:line="24" pos:column="29">*<pos:position pos:line="24" pos:column="30"/></modifier></type><name pos:line="24" pos:column="30">rr<pos:position pos:line="24" pos:column="32"/></name> <init pos:line="24" pos:column="33">= <expr><name pos:line="24" pos:column="35">NULL<pos:position pos:line="24" pos:column="39"/></name></expr></init></decl>;<pos:position pos:line="24" pos:column="40"/></decl_stmt>
                <decl_stmt><decl><type><name pos:line="25" pos:column="17">char<pos:position pos:line="25" pos:column="21"/></name> <modifier pos:line="25" pos:column="22">*<pos:position pos:line="25" pos:column="23"/></modifier></type><name pos:line="25" pos:column="23">error_fmt<pos:position pos:line="25" pos:column="32"/></name> <init pos:line="25" pos:column="33">= <expr><name pos:line="25" pos:column="35">NULL<pos:position pos:line="25" pos:column="39"/></name></expr></init></decl>;<pos:position pos:line="25" pos:column="40"/></decl_stmt>
                <decl_stmt><decl><type><name pos:line="26" pos:column="17">apr_status_t<pos:position pos:line="26" pos:column="29"/></name></type> <name pos:line="26" pos:column="30">rc<pos:position pos:line="26" pos:column="32"/></name> <init pos:line="26" pos:column="33">= <expr><name pos:line="26" pos:column="35">APR_SUCCESS<pos:position pos:line="26" pos:column="46"/></name></expr></init></decl>;<pos:position pos:line="26" pos:column="47"/></decl_stmt>

                <expr_stmt><expr><call><name pos:line="28" pos:column="17">SPLIT_AND_PASS_PRETAG_BUCKETS<pos:position pos:line="28" pos:column="46"/></name><argument_list pos:line="28" pos:column="46">(<argument><expr><operator pos:line="28" pos:column="47">*<pos:position pos:line="28" pos:column="48"/></operator><name pos:line="28" pos:column="48">bb<pos:position pos:line="28" pos:column="50"/></name></expr></argument>, <argument><expr><name pos:line="28" pos:column="52">ctx<pos:position pos:line="28" pos:column="55"/></name></expr></argument>, <argument><expr><name><name pos:line="28" pos:column="57">f<pos:position pos:line="28" pos:column="58"/></name><operator pos:line="28" pos:column="58">-&gt;<pos:position pos:line="28" pos:column="63"/></operator><name pos:line="28" pos:column="60">next<pos:position pos:line="28" pos:column="64"/></name></name></expr></argument>, <argument><expr><name pos:line="28" pos:column="66">rc<pos:position pos:line="28" pos:column="68"/></name></expr></argument>)<pos:position pos:line="28" pos:column="69"/></argument_list></call></expr>;<pos:position pos:line="28" pos:column="70"/></expr_stmt>
                <if pos:line="29" pos:column="17">if <condition pos:line="29" pos:column="20">(<expr><name pos:line="29" pos:column="21">rc<pos:position pos:line="29" pos:column="23"/></name> <operator pos:line="29" pos:column="24">!=<pos:position pos:line="29" pos:column="26"/></operator> <name pos:line="29" pos:column="27">APR_SUCCESS<pos:position pos:line="29" pos:column="38"/></name></expr>)<pos:position pos:line="29" pos:column="39"/></condition><then pos:line="29" pos:column="39"> <block pos:line="29" pos:column="40">{
                    <return pos:line="30" pos:column="21">return <expr><name pos:line="30" pos:column="28">rc<pos:position pos:line="30" pos:column="30"/></name></expr>;<pos:position pos:line="30" pos:column="31"/></return>
                }<pos:position pos:line="31" pos:column="18"/></block></then></if>
 
                <expr_stmt><expr><name pos:line="33" pos:column="17">parsed_string<pos:position pos:line="33" pos:column="30"/></name> <operator pos:line="33" pos:column="31">=<pos:position pos:line="33" pos:column="32"/></operator> <call><name pos:line="33" pos:column="33">ap_ssi_parse_string<pos:position pos:line="33" pos:column="52"/></name><argument_list pos:line="33" pos:column="52">(<argument><expr><name pos:line="33" pos:column="53">r<pos:position pos:line="33" pos:column="54"/></name></expr></argument>, <argument><expr><name pos:line="33" pos:column="56">ctx<pos:position pos:line="33" pos:column="59"/></name></expr></argument>, <argument><expr><name pos:line="33" pos:column="61">tag_val<pos:position pos:line="33" pos:column="68"/></name></expr></argument>, <argument><expr><name pos:line="33" pos:column="70">NULL<pos:position pos:line="33" pos:column="74"/></name></expr></argument>, 
                                                    <argument><expr><name pos:line="34" pos:column="53">MAX_STRING_LEN<pos:position pos:line="34" pos:column="67"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="34" pos:column="69">0<pos:position pos:line="34" pos:column="70"/></literal></expr></argument>)<pos:position pos:line="34" pos:column="71"/></argument_list></call></expr>;<pos:position pos:line="34" pos:column="72"/></expr_stmt>
                <if pos:line="35" pos:column="17">if <condition pos:line="35" pos:column="20">(<expr><name><name pos:line="35" pos:column="21">tag<pos:position pos:line="35" pos:column="24"/></name><index pos:line="35" pos:column="24">[<expr><literal type="number" pos:line="35" pos:column="25">0<pos:position pos:line="35" pos:column="26"/></literal></expr>]<pos:position pos:line="35" pos:column="27"/></index></name> <operator pos:line="35" pos:column="28">==<pos:position pos:line="35" pos:column="30"/></operator> <literal type="char" pos:line="35" pos:column="31">'f'<pos:position pos:line="35" pos:column="34"/></literal></expr>)<pos:position pos:line="35" pos:column="35"/></condition><then pos:line="35" pos:column="35"> <block pos:line="35" pos:column="36">{
                    <comment type="block" pos:line="36" pos:column="21">/* XXX: Port to apr_filepath_merge
                     * be safe; only files in this directory or below allowed 
                     */</comment>
                    <if pos:line="39" pos:column="21">if <condition pos:line="39" pos:column="24">(<expr><operator pos:line="39" pos:column="25">!<pos:position pos:line="39" pos:column="26"/></operator><call><name pos:line="39" pos:column="26">is_only_below<pos:position pos:line="39" pos:column="39"/></name><argument_list pos:line="39" pos:column="39">(<argument><expr><name pos:line="39" pos:column="40">parsed_string<pos:position pos:line="39" pos:column="53"/></name></expr></argument>)<pos:position pos:line="39" pos:column="54"/></argument_list></call></expr>)<pos:position pos:line="39" pos:column="55"/></condition><then pos:line="39" pos:column="55"> <block pos:line="39" pos:column="56">{
                        <expr_stmt><expr><name pos:line="40" pos:column="25">error_fmt<pos:position pos:line="40" pos:column="34"/></name> <operator pos:line="40" pos:column="35">=<pos:position pos:line="40" pos:column="36"/></operator> <literal type="string" pos:line="40" pos:column="37">"unable to include file \"%s\" "<pos:position pos:line="40" pos:column="69"/></literal>
                                    <literal type="string" pos:line="41" pos:column="37">"in parsed file %s"<pos:position pos:line="41" pos:column="56"/></literal></expr>;<pos:position pos:line="41" pos:column="57"/></expr_stmt>
                    }<pos:position pos:line="42" pos:column="22"/></block></then>
                    <else pos:line="43" pos:column="21">else <block pos:line="43" pos:column="26">{
                        <expr_stmt><expr><name pos:line="44" pos:column="25">rr<pos:position pos:line="44" pos:column="27"/></name> <operator pos:line="44" pos:column="28">=<pos:position pos:line="44" pos:column="29"/></operator> <call><name pos:line="44" pos:column="30">ap_sub_req_lookup_uri<pos:position pos:line="44" pos:column="51"/></name><argument_list pos:line="44" pos:column="51">(<argument><expr><name pos:line="44" pos:column="52">parsed_string<pos:position pos:line="44" pos:column="65"/></name></expr></argument>, <argument><expr><name pos:line="44" pos:column="67">r<pos:position pos:line="44" pos:column="68"/></name></expr></argument>, <argument><expr><name><name pos:line="44" pos:column="70">f<pos:position pos:line="44" pos:column="71"/></name><operator pos:line="44" pos:column="71">-&gt;<pos:position pos:line="44" pos:column="76"/></operator><name pos:line="44" pos:column="73">next<pos:position pos:line="44" pos:column="77"/></name></name></expr></argument>)<pos:position pos:line="44" pos:column="78"/></argument_list></call></expr>;<pos:position pos:line="44" pos:column="79"/></expr_stmt>
                    }<pos:position pos:line="45" pos:column="22"/></block></else></if>
                }<pos:position pos:line="46" pos:column="18"/></block></then>
                <else pos:line="47" pos:column="17">else <block pos:line="47" pos:column="22">{
                    <expr_stmt><expr><name pos:line="48" pos:column="21">rr<pos:position pos:line="48" pos:column="23"/></name> <operator pos:line="48" pos:column="24">=<pos:position pos:line="48" pos:column="25"/></operator> <call><name pos:line="48" pos:column="26">ap_sub_req_lookup_uri<pos:position pos:line="48" pos:column="47"/></name><argument_list pos:line="48" pos:column="47">(<argument><expr><name pos:line="48" pos:column="48">parsed_string<pos:position pos:line="48" pos:column="61"/></name></expr></argument>, <argument><expr><name pos:line="48" pos:column="63">r<pos:position pos:line="48" pos:column="64"/></name></expr></argument>, <argument><expr><name><name pos:line="48" pos:column="66">f<pos:position pos:line="48" pos:column="67"/></name><operator pos:line="48" pos:column="67">-&gt;<pos:position pos:line="48" pos:column="72"/></operator><name pos:line="48" pos:column="69">next<pos:position pos:line="48" pos:column="73"/></name></name></expr></argument>)<pos:position pos:line="48" pos:column="74"/></argument_list></call></expr>;<pos:position pos:line="48" pos:column="75"/></expr_stmt>
                }<pos:position pos:line="49" pos:column="18"/></block></else></if>

                <if pos:line="51" pos:column="17">if <condition pos:line="51" pos:column="20">(<expr><operator pos:line="51" pos:column="21">!<pos:position pos:line="51" pos:column="22"/></operator><name pos:line="51" pos:column="22">error_fmt<pos:position pos:line="51" pos:column="31"/></name> <operator pos:line="51" pos:column="32">&amp;&amp;<pos:position pos:line="51" pos:column="42"/></operator> <name><name pos:line="51" pos:column="35">rr<pos:position pos:line="51" pos:column="37"/></name><operator pos:line="51" pos:column="37">-&gt;<pos:position pos:line="51" pos:column="42"/></operator><name pos:line="51" pos:column="39">status<pos:position pos:line="51" pos:column="45"/></name></name> <operator pos:line="51" pos:column="46">!=<pos:position pos:line="51" pos:column="48"/></operator> <name pos:line="51" pos:column="49">HTTP_OK<pos:position pos:line="51" pos:column="56"/></name></expr>)<pos:position pos:line="51" pos:column="57"/></condition><then pos:line="51" pos:column="57"> <block pos:line="51" pos:column="58">{
                    <expr_stmt><expr><name pos:line="52" pos:column="21">error_fmt<pos:position pos:line="52" pos:column="30"/></name> <operator pos:line="52" pos:column="31">=<pos:position pos:line="52" pos:column="32"/></operator> <literal type="string" pos:line="52" pos:column="33">"unable to include \"%s\" in parsed file %s"<pos:position pos:line="52" pos:column="77"/></literal></expr>;<pos:position pos:line="52" pos:column="78"/></expr_stmt>
                }<pos:position pos:line="53" pos:column="18"/></block></then></if>

                <if pos:line="55" pos:column="17">if <condition pos:line="55" pos:column="20">(<expr><operator pos:line="55" pos:column="21">!<pos:position pos:line="55" pos:column="22"/></operator><name pos:line="55" pos:column="22">error_fmt<pos:position pos:line="55" pos:column="31"/></name> <operator pos:line="55" pos:column="32">&amp;&amp;<pos:position pos:line="55" pos:column="42"/></operator> <operator pos:line="55" pos:column="35">(<pos:position pos:line="55" pos:column="36"/></operator><name><name pos:line="55" pos:column="36">ctx<pos:position pos:line="55" pos:column="39"/></name><operator pos:line="55" pos:column="39">-&gt;<pos:position pos:line="55" pos:column="44"/></operator><name pos:line="55" pos:column="41">flags<pos:position pos:line="55" pos:column="46"/></name></name> <operator pos:line="55" pos:column="47">&amp;<pos:position pos:line="55" pos:column="52"/></operator> <name pos:line="55" pos:column="49">FLAG_NO_EXEC<pos:position pos:line="55" pos:column="61"/></name><operator pos:line="55" pos:column="61">)<pos:position pos:line="55" pos:column="62"/></operator> <operator pos:line="55" pos:column="63">&amp;&amp;<pos:position pos:line="55" pos:column="73"/></operator> 
                    <name><name pos:line="56" pos:column="21">rr<pos:position pos:line="56" pos:column="23"/></name><operator pos:line="56" pos:column="23">-&gt;<pos:position pos:line="56" pos:column="28"/></operator><name pos:line="56" pos:column="25">content_type<pos:position pos:line="56" pos:column="37"/></name></name> <operator pos:line="56" pos:column="38">&amp;&amp;<pos:position pos:line="56" pos:column="48"/></operator> 
                    <operator pos:line="57" pos:column="21">(<pos:position pos:line="57" pos:column="22"/></operator><call><name pos:line="57" pos:column="22">strncmp<pos:position pos:line="57" pos:column="29"/></name><argument_list pos:line="57" pos:column="29">(<argument><expr><name><name pos:line="57" pos:column="30">rr<pos:position pos:line="57" pos:column="32"/></name><operator pos:line="57" pos:column="32">-&gt;<pos:position pos:line="57" pos:column="37"/></operator><name pos:line="57" pos:column="34">content_type<pos:position pos:line="57" pos:column="46"/></name></name></expr></argument>, <argument><expr><literal type="string" pos:line="57" pos:column="48">"text/"<pos:position pos:line="57" pos:column="55"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="57" pos:column="57">5<pos:position pos:line="57" pos:column="58"/></literal></expr></argument>)<pos:position pos:line="57" pos:column="59"/></argument_list></call><operator pos:line="57" pos:column="59">)<pos:position pos:line="57" pos:column="60"/></operator></expr>)<pos:position pos:line="57" pos:column="61"/></condition><then pos:line="57" pos:column="61"> <block pos:line="57" pos:column="62">{
                    <expr_stmt><expr><name pos:line="58" pos:column="21">error_fmt<pos:position pos:line="58" pos:column="30"/></name> <operator pos:line="58" pos:column="31">=<pos:position pos:line="58" pos:column="32"/></operator> <literal type="string" pos:line="58" pos:column="33">"unable to include potential exec \"%s\" "<pos:position pos:line="58" pos:column="75"/></literal>
                        <literal type="string" pos:line="59" pos:column="25">"in parsed file %s"<pos:position pos:line="59" pos:column="44"/></literal></expr>;<pos:position pos:line="59" pos:column="45"/></expr_stmt>
                }<pos:position pos:line="60" pos:column="18"/></block></then></if>

                <comment type="block" pos:line="62" pos:column="17">/* See the Kludge in send_parsed_file for why */</comment>
                <comment type="block" pos:line="63" pos:column="17">/* Basically, it puts a bread crumb in here, then looks */</comment>
                <comment type="block" pos:line="64" pos:column="17">/*   for the crumb later to see if its been here.       */</comment>
                <if pos:line="65" pos:column="17">if <condition pos:line="65" pos:column="20">(<expr><name pos:line="65" pos:column="21">rr<pos:position pos:line="65" pos:column="23"/></name></expr>)<pos:position pos:line="65" pos:column="24"/></condition><then pos:line="65" pos:column="24"> 
                    <block type="pseudo"><expr_stmt><expr><call><name pos:line="66" pos:column="21">ap_set_module_config<pos:position pos:line="66" pos:column="41"/></name><argument_list pos:line="66" pos:column="41">(<argument><expr><name><name pos:line="66" pos:column="42">rr<pos:position pos:line="66" pos:column="44"/></name><operator pos:line="66" pos:column="44">-&gt;<pos:position pos:line="66" pos:column="49"/></operator><name pos:line="66" pos:column="46">request_config<pos:position pos:line="66" pos:column="60"/></name></name></expr></argument>, 
                                         <argument><expr><operator pos:line="67" pos:column="42">&amp;<pos:position pos:line="67" pos:column="47"/></operator><name pos:line="67" pos:column="43">include_module<pos:position pos:line="67" pos:column="57"/></name></expr></argument>, <argument><expr><name pos:line="67" pos:column="59">r<pos:position pos:line="67" pos:column="60"/></name></expr></argument>)<pos:position pos:line="67" pos:column="61"/></argument_list></call></expr>;<pos:position pos:line="67" pos:column="62"/></expr_stmt></block></then></if>

                <if pos:line="69" pos:column="17">if <condition pos:line="69" pos:column="20">(<expr><operator pos:line="69" pos:column="21">!<pos:position pos:line="69" pos:column="22"/></operator><name pos:line="69" pos:column="22">error_fmt<pos:position pos:line="69" pos:column="31"/></name> <operator pos:line="69" pos:column="32">&amp;&amp;<pos:position pos:line="69" pos:column="42"/></operator> <call><name pos:line="69" pos:column="35">ap_run_sub_req<pos:position pos:line="69" pos:column="49"/></name><argument_list pos:line="69" pos:column="49">(<argument><expr><name pos:line="69" pos:column="50">rr<pos:position pos:line="69" pos:column="52"/></name></expr></argument>)<pos:position pos:line="69" pos:column="53"/></argument_list></call></expr>)<pos:position pos:line="69" pos:column="54"/></condition><then pos:line="69" pos:column="54"> <block pos:line="69" pos:column="55">{
                    <expr_stmt><expr><name pos:line="70" pos:column="21">error_fmt<pos:position pos:line="70" pos:column="30"/></name> <operator pos:line="70" pos:column="31">=<pos:position pos:line="70" pos:column="32"/></operator> <literal type="string" pos:line="70" pos:column="33">"unable to include \"%s\" in parsed file %s"<pos:position pos:line="70" pos:column="77"/></literal></expr>;<pos:position pos:line="70" pos:column="78"/></expr_stmt>
                }<pos:position pos:line="71" pos:column="18"/></block></then></if>
                <if pos:line="72" pos:column="17">if <condition pos:line="72" pos:column="20">(<expr><name pos:line="72" pos:column="21">error_fmt<pos:position pos:line="72" pos:column="30"/></name></expr>)<pos:position pos:line="72" pos:column="31"/></condition><then pos:line="72" pos:column="31"> <block pos:line="72" pos:column="32">{
                    <expr_stmt><expr><call><name pos:line="73" pos:column="21">ap_log_rerror<pos:position pos:line="73" pos:column="34"/></name><argument_list pos:line="73" pos:column="34">(<argument><expr><name pos:line="73" pos:column="35">APLOG_MARK<pos:position pos:line="73" pos:column="45"/></name></expr></argument>, <argument><expr><name pos:line="73" pos:column="47">loglevel<pos:position pos:line="73" pos:column="55"/></name></expr></argument>,
                                  <argument><expr><literal type="number" pos:line="74" pos:column="35">0<pos:position pos:line="74" pos:column="36"/></literal></expr></argument>, <argument><expr><name pos:line="74" pos:column="38">r<pos:position pos:line="74" pos:column="39"/></name></expr></argument>, <argument><expr><name pos:line="74" pos:column="41">error_fmt<pos:position pos:line="74" pos:column="50"/></name></expr></argument>, <argument><expr><name pos:line="74" pos:column="52">tag_val<pos:position pos:line="74" pos:column="59"/></name></expr></argument>, <argument><expr><name><name pos:line="74" pos:column="61">r<pos:position pos:line="74" pos:column="62"/></name><operator pos:line="74" pos:column="62">-&gt;<pos:position pos:line="74" pos:column="67"/></operator><name pos:line="74" pos:column="64">filename<pos:position pos:line="74" pos:column="72"/></name></name></expr></argument>)<pos:position pos:line="74" pos:column="73"/></argument_list></call></expr>;<pos:position pos:line="74" pos:column="74"/></expr_stmt>
                    <expr_stmt><expr><call><name pos:line="75" pos:column="21">CREATE_ERROR_BUCKET<pos:position pos:line="75" pos:column="40"/></name><argument_list pos:line="75" pos:column="40">(<argument><expr><name pos:line="75" pos:column="41">ctx<pos:position pos:line="75" pos:column="44"/></name></expr></argument>, <argument><expr><name pos:line="75" pos:column="46">tmp_buck<pos:position pos:line="75" pos:column="54"/></name></expr></argument>, <argument><expr><name pos:line="75" pos:column="56">head_ptr<pos:position pos:line="75" pos:column="64"/></name></expr></argument>, 
                                        <argument><expr><operator pos:line="76" pos:column="41">*<pos:position pos:line="76" pos:column="42"/></operator><name pos:line="76" pos:column="42">inserted_head<pos:position pos:line="76" pos:column="55"/></name></expr></argument>)<pos:position pos:line="76" pos:column="56"/></argument_list></call></expr>;<pos:position pos:line="76" pos:column="57"/></expr_stmt>
                }<pos:position pos:line="77" pos:column="18"/></block></then></if>
                
                <comment type="block" pos:line="79" pos:column="17">/* Do *not* destroy the subrequest here; it may have allocated
                 * variables in this r-&gt;subprocess_env in the subrequest's
                 * r-&gt;pool, so that pool must survive as long as this request.
                 * Yes, this is a memory leak. */</comment>
            }<pos:position pos:line="83" pos:column="14"/></block></then>
            <else pos:line="84" pos:column="13">else <block pos:line="84" pos:column="18">{
                <expr_stmt><expr><call><name pos:line="85" pos:column="17">ap_log_rerror<pos:position pos:line="85" pos:column="30"/></name><argument_list pos:line="85" pos:column="30">(<argument><expr><name pos:line="85" pos:column="31">APLOG_MARK<pos:position pos:line="85" pos:column="41"/></name></expr></argument>, <argument><expr><name pos:line="85" pos:column="43">APLOG_ERR<pos:position pos:line="85" pos:column="52"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="85" pos:column="54">0<pos:position pos:line="85" pos:column="55"/></literal></expr></argument>, <argument><expr><name pos:line="85" pos:column="57">r<pos:position pos:line="85" pos:column="58"/></name></expr></argument>,
                            <argument><expr><literal type="string" pos:line="86" pos:column="29">"unknown parameter \"%s\" to tag include in %s"<pos:position pos:line="86" pos:column="76"/></literal></expr></argument>,
                            <argument><expr><name pos:line="87" pos:column="29">tag<pos:position pos:line="87" pos:column="32"/></name></expr></argument>, <argument><expr><name><name pos:line="87" pos:column="34">r<pos:position pos:line="87" pos:column="35"/></name><operator pos:line="87" pos:column="35">-&gt;<pos:position pos:line="87" pos:column="40"/></operator><name pos:line="87" pos:column="37">filename<pos:position pos:line="87" pos:column="45"/></name></name></expr></argument>)<pos:position pos:line="87" pos:column="46"/></argument_list></call></expr>;<pos:position pos:line="87" pos:column="47"/></expr_stmt>
                <expr_stmt><expr><call><name pos:line="88" pos:column="17">CREATE_ERROR_BUCKET<pos:position pos:line="88" pos:column="36"/></name><argument_list pos:line="88" pos:column="36">(<argument><expr><name pos:line="88" pos:column="37">ctx<pos:position pos:line="88" pos:column="40"/></name></expr></argument>, <argument><expr><name pos:line="88" pos:column="42">tmp_buck<pos:position pos:line="88" pos:column="50"/></name></expr></argument>, <argument><expr><name pos:line="88" pos:column="52">head_ptr<pos:position pos:line="88" pos:column="60"/></name></expr></argument>, <argument><expr><operator pos:line="88" pos:column="62">*<pos:position pos:line="88" pos:column="63"/></operator><name pos:line="88" pos:column="63">inserted_head<pos:position pos:line="88" pos:column="76"/></name></expr></argument>)<pos:position pos:line="88" pos:column="77"/></argument_list></call></expr>;<pos:position pos:line="88" pos:column="78"/></expr_stmt>
                <return pos:line="89" pos:column="17">return <expr><literal type="number" pos:line="89" pos:column="24">1<pos:position pos:line="89" pos:column="25"/></literal></expr>;<pos:position pos:line="89" pos:column="26"/></return>
            }<pos:position pos:line="90" pos:column="14"/></block></else></if>
        }<pos:position pos:line="91" pos:column="10"/></block></while>
    }<pos:position pos:line="92" pos:column="6"/></block></then></if>
    <return pos:line="93" pos:column="5">return <expr><literal type="number" pos:line="93" pos:column="12">0<pos:position pos:line="93" pos:column="13"/></literal></expr>;<pos:position pos:line="93" pos:column="14"/></return>
}<pos:position pos:line="94" pos:column="2"/></block></function></unit>

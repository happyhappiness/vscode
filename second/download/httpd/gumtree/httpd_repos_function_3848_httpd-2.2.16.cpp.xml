<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/httpd/gumtree/httpd_repos_function_3848_httpd-2.2.16.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">apr_status_t<pos:position pos:line="1" pos:column="13"/></name></type> <name pos:line="1" pos:column="14">apr_os_sock_make<pos:position pos:line="1" pos:column="30"/></name><parameter_list pos:line="1" pos:column="30">(<parameter><decl><type><name pos:line="1" pos:column="31">apr_socket_t<pos:position pos:line="1" pos:column="43"/></name> <modifier pos:line="1" pos:column="44">*<pos:position pos:line="1" pos:column="45"/></modifier><modifier pos:line="1" pos:column="45">*<pos:position pos:line="1" pos:column="46"/></modifier></type><name pos:line="1" pos:column="46">apr_sock<pos:position pos:line="1" pos:column="54"/></name></decl></parameter>, 
                              <parameter><decl><type><name pos:line="2" pos:column="31">apr_os_sock_info_t<pos:position pos:line="2" pos:column="49"/></name> <modifier pos:line="2" pos:column="50">*<pos:position pos:line="2" pos:column="51"/></modifier></type><name pos:line="2" pos:column="51">os_sock_info<pos:position pos:line="2" pos:column="63"/></name></decl></parameter>, 
                              <parameter><decl><type><name pos:line="3" pos:column="31">apr_pool_t<pos:position pos:line="3" pos:column="41"/></name> <modifier pos:line="3" pos:column="42">*<pos:position pos:line="3" pos:column="43"/></modifier></type><name pos:line="3" pos:column="43">cont<pos:position pos:line="3" pos:column="47"/></name></decl></parameter>)<pos:position pos:line="3" pos:column="48"/></parameter_list>
<block pos:line="4" pos:column="1">{
    <expr_stmt><expr><call><name pos:line="5" pos:column="5">alloc_socket<pos:position pos:line="5" pos:column="17"/></name><argument_list pos:line="5" pos:column="17">(<argument><expr><name pos:line="5" pos:column="18">apr_sock<pos:position pos:line="5" pos:column="26"/></name></expr></argument>, <argument><expr><name pos:line="5" pos:column="28">cont<pos:position pos:line="5" pos:column="32"/></name></expr></argument>)<pos:position pos:line="5" pos:column="33"/></argument_list></call></expr>;<pos:position pos:line="5" pos:column="34"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="6" pos:column="5">set_socket_vars<pos:position pos:line="6" pos:column="20"/></name><argument_list pos:line="6" pos:column="20">(<argument><expr><operator pos:line="6" pos:column="21">*<pos:position pos:line="6" pos:column="22"/></operator><name pos:line="6" pos:column="22">apr_sock<pos:position pos:line="6" pos:column="30"/></name></expr></argument>, <argument><expr><name><name pos:line="6" pos:column="32">os_sock_info<pos:position pos:line="6" pos:column="44"/></name><operator pos:line="6" pos:column="44">-&gt;<pos:position pos:line="6" pos:column="49"/></operator><name pos:line="6" pos:column="46">family<pos:position pos:line="6" pos:column="52"/></name></name></expr></argument>, <argument><expr><name><name pos:line="6" pos:column="54">os_sock_info<pos:position pos:line="6" pos:column="66"/></name><operator pos:line="6" pos:column="66">-&gt;<pos:position pos:line="6" pos:column="71"/></operator><name pos:line="6" pos:column="68">type<pos:position pos:line="6" pos:column="72"/></name></name></expr></argument>, <argument><expr><name><name pos:line="6" pos:column="74">os_sock_info<pos:position pos:line="6" pos:column="86"/></name><operator pos:line="6" pos:column="86">-&gt;<pos:position pos:line="6" pos:column="91"/></operator><name pos:line="6" pos:column="88">protocol<pos:position pos:line="6" pos:column="96"/></name></name></expr></argument>)<pos:position pos:line="6" pos:column="97"/></argument_list></call></expr>;<pos:position pos:line="6" pos:column="98"/></expr_stmt>
    <expr_stmt><expr><name><operator pos:line="7" pos:column="5">(<pos:position pos:line="7" pos:column="6"/></operator><operator pos:line="7" pos:column="6">*<pos:position pos:line="7" pos:column="7"/></operator><name pos:line="7" pos:column="7">apr_sock<pos:position pos:line="7" pos:column="15"/></name><operator pos:line="7" pos:column="15">)<pos:position pos:line="7" pos:column="16"/></operator><operator pos:line="7" pos:column="16">-&gt;<pos:position pos:line="7" pos:column="21"/></operator><name pos:line="7" pos:column="18">timeout<pos:position pos:line="7" pos:column="25"/></name></name> <operator pos:line="7" pos:column="26">=<pos:position pos:line="7" pos:column="27"/></operator> <operator pos:line="7" pos:column="28">-<pos:position pos:line="7" pos:column="29"/></operator><literal type="number" pos:line="7" pos:column="29">1<pos:position pos:line="7" pos:column="30"/></literal></expr>;<pos:position pos:line="7" pos:column="31"/></expr_stmt>
    <expr_stmt><expr><name><operator pos:line="8" pos:column="5">(<pos:position pos:line="8" pos:column="6"/></operator><operator pos:line="8" pos:column="6">*<pos:position pos:line="8" pos:column="7"/></operator><name pos:line="8" pos:column="7">apr_sock<pos:position pos:line="8" pos:column="15"/></name><operator pos:line="8" pos:column="15">)<pos:position pos:line="8" pos:column="16"/></operator><operator pos:line="8" pos:column="16">-&gt;<pos:position pos:line="8" pos:column="21"/></operator><name pos:line="8" pos:column="18">socketdes<pos:position pos:line="8" pos:column="27"/></name></name> <operator pos:line="8" pos:column="28">=<pos:position pos:line="8" pos:column="29"/></operator> <operator pos:line="8" pos:column="30">*<pos:position pos:line="8" pos:column="31"/></operator><name><name pos:line="8" pos:column="31">os_sock_info<pos:position pos:line="8" pos:column="43"/></name><operator pos:line="8" pos:column="43">-&gt;<pos:position pos:line="8" pos:column="48"/></operator><name pos:line="8" pos:column="45">os_sock<pos:position pos:line="8" pos:column="52"/></name></name></expr>;<pos:position pos:line="8" pos:column="53"/></expr_stmt>
    <if pos:line="9" pos:column="5">if <condition pos:line="9" pos:column="8">(<expr><name><name pos:line="9" pos:column="9">os_sock_info<pos:position pos:line="9" pos:column="21"/></name><operator pos:line="9" pos:column="21">-&gt;<pos:position pos:line="9" pos:column="26"/></operator><name pos:line="9" pos:column="23">local<pos:position pos:line="9" pos:column="28"/></name></name></expr>)<pos:position pos:line="9" pos:column="29"/></condition><then pos:line="9" pos:column="29"> <block pos:line="9" pos:column="30">{
        <expr_stmt><expr><call><name pos:line="10" pos:column="9">memcpy<pos:position pos:line="10" pos:column="15"/></name><argument_list pos:line="10" pos:column="15">(<argument><expr><operator pos:line="10" pos:column="16">&amp;<pos:position pos:line="10" pos:column="21"/></operator><name><operator pos:line="10" pos:column="17">(<pos:position pos:line="10" pos:column="18"/></operator><operator pos:line="10" pos:column="18">*<pos:position pos:line="10" pos:column="19"/></operator><name pos:line="10" pos:column="19">apr_sock<pos:position pos:line="10" pos:column="27"/></name><operator pos:line="10" pos:column="27">)<pos:position pos:line="10" pos:column="28"/></operator><operator pos:line="10" pos:column="28">-&gt;<pos:position pos:line="10" pos:column="33"/></operator><name><name pos:line="10" pos:column="30">local_addr<pos:position pos:line="10" pos:column="40"/></name><operator pos:line="10" pos:column="40">-&gt;<pos:position pos:line="10" pos:column="45"/></operator><name pos:line="10" pos:column="42">sa<pos:position pos:line="10" pos:column="44"/></name><operator pos:line="10" pos:column="44">.<pos:position pos:line="10" pos:column="45"/></operator><name pos:line="10" pos:column="45">sin<pos:position pos:line="10" pos:column="48"/></name></name></name></expr></argument>, 
               <argument><expr><name><name pos:line="11" pos:column="16">os_sock_info<pos:position pos:line="11" pos:column="28"/></name><operator pos:line="11" pos:column="28">-&gt;<pos:position pos:line="11" pos:column="33"/></operator><name pos:line="11" pos:column="30">local<pos:position pos:line="11" pos:column="35"/></name></name></expr></argument>, 
               <argument><expr><name><operator pos:line="12" pos:column="16">(<pos:position pos:line="12" pos:column="17"/></operator><operator pos:line="12" pos:column="17">*<pos:position pos:line="12" pos:column="18"/></operator><name pos:line="12" pos:column="18">apr_sock<pos:position pos:line="12" pos:column="26"/></name><operator pos:line="12" pos:column="26">)<pos:position pos:line="12" pos:column="27"/></operator><operator pos:line="12" pos:column="27">-&gt;<pos:position pos:line="12" pos:column="32"/></operator><name><name pos:line="12" pos:column="29">local_addr<pos:position pos:line="12" pos:column="39"/></name><operator pos:line="12" pos:column="39">-&gt;<pos:position pos:line="12" pos:column="44"/></operator><name pos:line="12" pos:column="41">salen<pos:position pos:line="12" pos:column="46"/></name></name></name></expr></argument>)<pos:position pos:line="12" pos:column="47"/></argument_list></call></expr>;<pos:position pos:line="12" pos:column="48"/></expr_stmt>
        <comment type="block" pos:line="13" pos:column="9">/* XXX IPv6 - this assumes sin_port and sin6_port at same offset */</comment>
        <expr_stmt><expr><name><operator pos:line="14" pos:column="9">(<pos:position pos:line="14" pos:column="10"/></operator><operator pos:line="14" pos:column="10">*<pos:position pos:line="14" pos:column="11"/></operator><name pos:line="14" pos:column="11">apr_sock<pos:position pos:line="14" pos:column="19"/></name><operator pos:line="14" pos:column="19">)<pos:position pos:line="14" pos:column="20"/></operator><operator pos:line="14" pos:column="20">-&gt;<pos:position pos:line="14" pos:column="25"/></operator><name><name pos:line="14" pos:column="22">local_addr<pos:position pos:line="14" pos:column="32"/></name><operator pos:line="14" pos:column="32">-&gt;<pos:position pos:line="14" pos:column="37"/></operator><name pos:line="14" pos:column="34">port<pos:position pos:line="14" pos:column="38"/></name></name></name> <operator pos:line="14" pos:column="39">=<pos:position pos:line="14" pos:column="40"/></operator> <call><name pos:line="14" pos:column="41">ntohs<pos:position pos:line="14" pos:column="46"/></name><argument_list pos:line="14" pos:column="46">(<argument><expr><name><operator pos:line="14" pos:column="47">(<pos:position pos:line="14" pos:column="48"/></operator><operator pos:line="14" pos:column="48">*<pos:position pos:line="14" pos:column="49"/></operator><name pos:line="14" pos:column="49">apr_sock<pos:position pos:line="14" pos:column="57"/></name><operator pos:line="14" pos:column="57">)<pos:position pos:line="14" pos:column="58"/></operator><operator pos:line="14" pos:column="58">-&gt;<pos:position pos:line="14" pos:column="63"/></operator><name><name pos:line="14" pos:column="60">local_addr<pos:position pos:line="14" pos:column="70"/></name><operator pos:line="14" pos:column="70">-&gt;<pos:position pos:line="14" pos:column="75"/></operator><name pos:line="14" pos:column="72">sa<pos:position pos:line="14" pos:column="74"/></name><operator pos:line="14" pos:column="74">.<pos:position pos:line="14" pos:column="75"/></operator><name pos:line="14" pos:column="75">sin<pos:position pos:line="14" pos:column="78"/></name><operator pos:line="14" pos:column="78">.<pos:position pos:line="14" pos:column="79"/></operator><name pos:line="14" pos:column="79">sin_port<pos:position pos:line="14" pos:column="87"/></name></name></name></expr></argument>)<pos:position pos:line="14" pos:column="88"/></argument_list></call></expr>;<pos:position pos:line="14" pos:column="89"/></expr_stmt>
    }<pos:position pos:line="15" pos:column="6"/></block></then>
    <else pos:line="16" pos:column="5">else <block pos:line="16" pos:column="10">{
        <expr_stmt><expr><name><operator pos:line="17" pos:column="9">(<pos:position pos:line="17" pos:column="10"/></operator><operator pos:line="17" pos:column="10">*<pos:position pos:line="17" pos:column="11"/></operator><name pos:line="17" pos:column="11">apr_sock<pos:position pos:line="17" pos:column="19"/></name><operator pos:line="17" pos:column="19">)<pos:position pos:line="17" pos:column="20"/></operator><operator pos:line="17" pos:column="20">-&gt;<pos:position pos:line="17" pos:column="25"/></operator><name pos:line="17" pos:column="22">local_port_unknown<pos:position pos:line="17" pos:column="40"/></name></name> <operator pos:line="17" pos:column="41">=<pos:position pos:line="17" pos:column="42"/></operator> <name><operator pos:line="17" pos:column="43">(<pos:position pos:line="17" pos:column="44"/></operator><operator pos:line="17" pos:column="44">*<pos:position pos:line="17" pos:column="45"/></operator><name pos:line="17" pos:column="45">apr_sock<pos:position pos:line="17" pos:column="53"/></name><operator pos:line="17" pos:column="53">)<pos:position pos:line="17" pos:column="54"/></operator><operator pos:line="17" pos:column="54">-&gt;<pos:position pos:line="17" pos:column="59"/></operator><name pos:line="17" pos:column="56">local_interface_unknown<pos:position pos:line="17" pos:column="79"/></name></name> <operator pos:line="17" pos:column="80">=<pos:position pos:line="17" pos:column="81"/></operator> <literal type="number" pos:line="17" pos:column="82">1<pos:position pos:line="17" pos:column="83"/></literal></expr>;<pos:position pos:line="17" pos:column="84"/></expr_stmt>
    }<pos:position pos:line="18" pos:column="6"/></block></else></if>
    <if pos:line="19" pos:column="5">if <condition pos:line="19" pos:column="8">(<expr><name><name pos:line="19" pos:column="9">os_sock_info<pos:position pos:line="19" pos:column="21"/></name><operator pos:line="19" pos:column="21">-&gt;<pos:position pos:line="19" pos:column="26"/></operator><name pos:line="19" pos:column="23">remote<pos:position pos:line="19" pos:column="29"/></name></name></expr>)<pos:position pos:line="19" pos:column="30"/></condition><then pos:line="19" pos:column="30"> <block pos:line="19" pos:column="31">{
<cpp:ifndef pos:line="20" pos:column="1">#<cpp:directive pos:line="20" pos:column="2">ifndef<pos:position pos:line="20" pos:column="8"/></cpp:directive> <name pos:line="20" pos:column="9">HAVE_POLL<pos:position pos:line="20" pos:column="18"/></name></cpp:ifndef>
        <expr_stmt><expr><name><operator pos:line="21" pos:column="9">(<pos:position pos:line="21" pos:column="10"/></operator><operator pos:line="21" pos:column="10">*<pos:position pos:line="21" pos:column="11"/></operator><name pos:line="21" pos:column="11">apr_sock<pos:position pos:line="21" pos:column="19"/></name><operator pos:line="21" pos:column="19">)<pos:position pos:line="21" pos:column="20"/></operator><operator pos:line="21" pos:column="20">-&gt;<pos:position pos:line="21" pos:column="25"/></operator><name pos:line="21" pos:column="22">connected<pos:position pos:line="21" pos:column="31"/></name></name> <operator pos:line="21" pos:column="32">=<pos:position pos:line="21" pos:column="33"/></operator> <literal type="number" pos:line="21" pos:column="34">1<pos:position pos:line="21" pos:column="35"/></literal></expr>;<pos:position pos:line="21" pos:column="36"/></expr_stmt>
<cpp:endif pos:line="22" pos:column="1">#<cpp:directive pos:line="22" pos:column="2">endif<pos:position pos:line="22" pos:column="7"/></cpp:directive></cpp:endif>
        <expr_stmt><expr><call><name pos:line="23" pos:column="9">memcpy<pos:position pos:line="23" pos:column="15"/></name><argument_list pos:line="23" pos:column="15">(<argument><expr><operator pos:line="23" pos:column="16">&amp;<pos:position pos:line="23" pos:column="21"/></operator><name><operator pos:line="23" pos:column="17">(<pos:position pos:line="23" pos:column="18"/></operator><operator pos:line="23" pos:column="18">*<pos:position pos:line="23" pos:column="19"/></operator><name pos:line="23" pos:column="19">apr_sock<pos:position pos:line="23" pos:column="27"/></name><operator pos:line="23" pos:column="27">)<pos:position pos:line="23" pos:column="28"/></operator><operator pos:line="23" pos:column="28">-&gt;<pos:position pos:line="23" pos:column="33"/></operator><name><name pos:line="23" pos:column="30">remote_addr<pos:position pos:line="23" pos:column="41"/></name><operator pos:line="23" pos:column="41">-&gt;<pos:position pos:line="23" pos:column="46"/></operator><name pos:line="23" pos:column="43">sa<pos:position pos:line="23" pos:column="45"/></name><operator pos:line="23" pos:column="45">.<pos:position pos:line="23" pos:column="46"/></operator><name pos:line="23" pos:column="46">sin<pos:position pos:line="23" pos:column="49"/></name></name></name></expr></argument>, 
               <argument><expr><name><name pos:line="24" pos:column="16">os_sock_info<pos:position pos:line="24" pos:column="28"/></name><operator pos:line="24" pos:column="28">-&gt;<pos:position pos:line="24" pos:column="33"/></operator><name pos:line="24" pos:column="30">remote<pos:position pos:line="24" pos:column="36"/></name></name></expr></argument>,
               <argument><expr><name><operator pos:line="25" pos:column="16">(<pos:position pos:line="25" pos:column="17"/></operator><operator pos:line="25" pos:column="17">*<pos:position pos:line="25" pos:column="18"/></operator><name pos:line="25" pos:column="18">apr_sock<pos:position pos:line="25" pos:column="26"/></name><operator pos:line="25" pos:column="26">)<pos:position pos:line="25" pos:column="27"/></operator><operator pos:line="25" pos:column="27">-&gt;<pos:position pos:line="25" pos:column="32"/></operator><name><name pos:line="25" pos:column="29">remote_addr<pos:position pos:line="25" pos:column="40"/></name><operator pos:line="25" pos:column="40">-&gt;<pos:position pos:line="25" pos:column="45"/></operator><name pos:line="25" pos:column="42">salen<pos:position pos:line="25" pos:column="47"/></name></name></name></expr></argument>)<pos:position pos:line="25" pos:column="48"/></argument_list></call></expr>;<pos:position pos:line="25" pos:column="49"/></expr_stmt>
        <comment type="block" pos:line="26" pos:column="9">/* XXX IPv6 - this assumes sin_port and sin6_port at same offset */</comment>
        <expr_stmt><expr><name><operator pos:line="27" pos:column="9">(<pos:position pos:line="27" pos:column="10"/></operator><operator pos:line="27" pos:column="10">*<pos:position pos:line="27" pos:column="11"/></operator><name pos:line="27" pos:column="11">apr_sock<pos:position pos:line="27" pos:column="19"/></name><operator pos:line="27" pos:column="19">)<pos:position pos:line="27" pos:column="20"/></operator><operator pos:line="27" pos:column="20">-&gt;<pos:position pos:line="27" pos:column="25"/></operator><name><name pos:line="27" pos:column="22">remote_addr<pos:position pos:line="27" pos:column="33"/></name><operator pos:line="27" pos:column="33">-&gt;<pos:position pos:line="27" pos:column="38"/></operator><name pos:line="27" pos:column="35">port<pos:position pos:line="27" pos:column="39"/></name></name></name> <operator pos:line="27" pos:column="40">=<pos:position pos:line="27" pos:column="41"/></operator> <call><name pos:line="27" pos:column="42">ntohs<pos:position pos:line="27" pos:column="47"/></name><argument_list pos:line="27" pos:column="47">(<argument><expr><name><operator pos:line="27" pos:column="48">(<pos:position pos:line="27" pos:column="49"/></operator><operator pos:line="27" pos:column="49">*<pos:position pos:line="27" pos:column="50"/></operator><name pos:line="27" pos:column="50">apr_sock<pos:position pos:line="27" pos:column="58"/></name><operator pos:line="27" pos:column="58">)<pos:position pos:line="27" pos:column="59"/></operator><operator pos:line="27" pos:column="59">-&gt;<pos:position pos:line="27" pos:column="64"/></operator><name><name pos:line="27" pos:column="61">remote_addr<pos:position pos:line="27" pos:column="72"/></name><operator pos:line="27" pos:column="72">-&gt;<pos:position pos:line="27" pos:column="77"/></operator><name pos:line="27" pos:column="74">sa<pos:position pos:line="27" pos:column="76"/></name><operator pos:line="27" pos:column="76">.<pos:position pos:line="27" pos:column="77"/></operator><name pos:line="27" pos:column="77">sin<pos:position pos:line="27" pos:column="80"/></name><operator pos:line="27" pos:column="80">.<pos:position pos:line="27" pos:column="81"/></operator><name pos:line="27" pos:column="81">sin_port<pos:position pos:line="27" pos:column="89"/></name></name></name></expr></argument>)<pos:position pos:line="27" pos:column="90"/></argument_list></call></expr>;<pos:position pos:line="27" pos:column="91"/></expr_stmt>
    }<pos:position pos:line="28" pos:column="6"/></block></then>
    <else pos:line="29" pos:column="5">else <block pos:line="29" pos:column="10">{
        <expr_stmt><expr><name><operator pos:line="30" pos:column="9">(<pos:position pos:line="30" pos:column="10"/></operator><operator pos:line="30" pos:column="10">*<pos:position pos:line="30" pos:column="11"/></operator><name pos:line="30" pos:column="11">apr_sock<pos:position pos:line="30" pos:column="19"/></name><operator pos:line="30" pos:column="19">)<pos:position pos:line="30" pos:column="20"/></operator><operator pos:line="30" pos:column="20">-&gt;<pos:position pos:line="30" pos:column="25"/></operator><name pos:line="30" pos:column="22">remote_addr_unknown<pos:position pos:line="30" pos:column="41"/></name></name> <operator pos:line="30" pos:column="42">=<pos:position pos:line="30" pos:column="43"/></operator> <literal type="number" pos:line="30" pos:column="44">1<pos:position pos:line="30" pos:column="45"/></literal></expr>;<pos:position pos:line="30" pos:column="46"/></expr_stmt>
    }<pos:position pos:line="31" pos:column="6"/></block></else></if>
        
    <expr_stmt><expr><name><operator pos:line="33" pos:column="5">(<pos:position pos:line="33" pos:column="6"/></operator><operator pos:line="33" pos:column="6">*<pos:position pos:line="33" pos:column="7"/></operator><name pos:line="33" pos:column="7">apr_sock<pos:position pos:line="33" pos:column="15"/></name><operator pos:line="33" pos:column="15">)<pos:position pos:line="33" pos:column="16"/></operator><operator pos:line="33" pos:column="16">-&gt;<pos:position pos:line="33" pos:column="21"/></operator><name pos:line="33" pos:column="18">inherit<pos:position pos:line="33" pos:column="25"/></name></name> <operator pos:line="33" pos:column="26">=<pos:position pos:line="33" pos:column="27"/></operator> <literal type="number" pos:line="33" pos:column="28">0<pos:position pos:line="33" pos:column="29"/></literal></expr>;<pos:position pos:line="33" pos:column="30"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="34" pos:column="5">apr_pool_cleanup_register<pos:position pos:line="34" pos:column="30"/></name><argument_list pos:line="34" pos:column="30">(<argument><expr><name><operator pos:line="34" pos:column="31">(<pos:position pos:line="34" pos:column="32"/></operator><operator pos:line="34" pos:column="32">*<pos:position pos:line="34" pos:column="33"/></operator><name pos:line="34" pos:column="33">apr_sock<pos:position pos:line="34" pos:column="41"/></name><operator pos:line="34" pos:column="41">)<pos:position pos:line="34" pos:column="42"/></operator><operator pos:line="34" pos:column="42">-&gt;<pos:position pos:line="34" pos:column="47"/></operator><name pos:line="34" pos:column="44">pool<pos:position pos:line="34" pos:column="48"/></name></name></expr></argument>, <argument><expr><operator pos:line="34" pos:column="50">(<pos:position pos:line="34" pos:column="51"/></operator><name pos:line="34" pos:column="51">void<pos:position pos:line="34" pos:column="55"/></name> <operator pos:line="34" pos:column="56">*<pos:position pos:line="34" pos:column="57"/></operator><operator pos:line="34" pos:column="57">)<pos:position pos:line="34" pos:column="58"/></operator><operator pos:line="34" pos:column="58">(<pos:position pos:line="34" pos:column="59"/></operator><operator pos:line="34" pos:column="59">*<pos:position pos:line="34" pos:column="60"/></operator><name pos:line="34" pos:column="60">apr_sock<pos:position pos:line="34" pos:column="68"/></name><operator pos:line="34" pos:column="68">)<pos:position pos:line="34" pos:column="69"/></operator></expr></argument>, 
                              <argument><expr><name pos:line="35" pos:column="31">socket_cleanup<pos:position pos:line="35" pos:column="45"/></name></expr></argument>, <argument><expr><name pos:line="35" pos:column="47">socket_cleanup<pos:position pos:line="35" pos:column="61"/></name></expr></argument>)<pos:position pos:line="35" pos:column="62"/></argument_list></call></expr>;<pos:position pos:line="35" pos:column="63"/></expr_stmt>
    <return pos:line="36" pos:column="5">return <expr><name pos:line="36" pos:column="12">APR_SUCCESS<pos:position pos:line="36" pos:column="23"/></name></expr>;<pos:position pos:line="36" pos:column="24"/></return>
}<pos:position pos:line="37" pos:column="2"/></block></function></unit>

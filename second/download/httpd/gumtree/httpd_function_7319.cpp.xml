<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/httpd/gumtree/httpd_function_7319.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">BOOL<pos:position pos:line="1" pos:column="12"/></name></type> <name pos:line="1" pos:column="13">stapling_renew_response<pos:position pos:line="1" pos:column="36"/></name><parameter_list pos:line="1" pos:column="36">(<parameter><decl><type><name pos:line="1" pos:column="37">server_rec<pos:position pos:line="1" pos:column="47"/></name> <modifier pos:line="1" pos:column="48">*<pos:position pos:line="1" pos:column="49"/></modifier></type><name pos:line="1" pos:column="49">s<pos:position pos:line="1" pos:column="50"/></name></decl></parameter>, <parameter><decl><type><name pos:line="1" pos:column="52">modssl_ctx_t<pos:position pos:line="1" pos:column="64"/></name> <modifier pos:line="1" pos:column="65">*<pos:position pos:line="1" pos:column="66"/></modifier></type><name pos:line="1" pos:column="66">mctx<pos:position pos:line="1" pos:column="70"/></name></decl></parameter>, <parameter><decl><type><name pos:line="1" pos:column="72">SSL<pos:position pos:line="1" pos:column="75"/></name> <modifier pos:line="1" pos:column="76">*<pos:position pos:line="1" pos:column="77"/></modifier></type><name pos:line="1" pos:column="77">ssl<pos:position pos:line="1" pos:column="80"/></name></decl></parameter>,
                                    <parameter><decl><type><name pos:line="2" pos:column="37">certinfo<pos:position pos:line="2" pos:column="45"/></name> <modifier pos:line="2" pos:column="46">*<pos:position pos:line="2" pos:column="47"/></modifier></type><name pos:line="2" pos:column="47">cinf<pos:position pos:line="2" pos:column="51"/></name></decl></parameter>, <parameter><decl><type><name pos:line="2" pos:column="53">OCSP_RESPONSE<pos:position pos:line="2" pos:column="66"/></name> <modifier pos:line="2" pos:column="67">*<pos:position pos:line="2" pos:column="68"/></modifier><modifier pos:line="2" pos:column="68">*<pos:position pos:line="2" pos:column="69"/></modifier></type><name pos:line="2" pos:column="69">prsp<pos:position pos:line="2" pos:column="73"/></name></decl></parameter>,
                                    <parameter><decl><type><name pos:line="3" pos:column="37">apr_pool_t<pos:position pos:line="3" pos:column="47"/></name> <modifier pos:line="3" pos:column="48">*<pos:position pos:line="3" pos:column="49"/></modifier></type><name pos:line="3" pos:column="49">pool<pos:position pos:line="3" pos:column="53"/></name></decl></parameter>)<pos:position pos:line="3" pos:column="54"/></parameter_list>
<block pos:line="4" pos:column="1">{
    <decl_stmt><decl><type><name pos:line="5" pos:column="5">conn_rec<pos:position pos:line="5" pos:column="13"/></name> <modifier pos:line="5" pos:column="14">*<pos:position pos:line="5" pos:column="15"/></modifier></type><name pos:line="5" pos:column="15">conn<pos:position pos:line="5" pos:column="19"/></name>      <init pos:line="5" pos:column="25">= <expr><operator pos:line="5" pos:column="27">(<pos:position pos:line="5" pos:column="28"/></operator><name pos:line="5" pos:column="28">conn_rec<pos:position pos:line="5" pos:column="36"/></name> <operator pos:line="5" pos:column="37">*<pos:position pos:line="5" pos:column="38"/></operator><operator pos:line="5" pos:column="38">)<pos:position pos:line="5" pos:column="39"/></operator><call><name pos:line="5" pos:column="39">SSL_get_app_data<pos:position pos:line="5" pos:column="55"/></name><argument_list pos:line="5" pos:column="55">(<argument><expr><name pos:line="5" pos:column="56">ssl<pos:position pos:line="5" pos:column="59"/></name></expr></argument>)<pos:position pos:line="5" pos:column="60"/></argument_list></call></expr></init></decl>;<pos:position pos:line="5" pos:column="61"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="6" pos:column="5">apr_pool_t<pos:position pos:line="6" pos:column="15"/></name> <modifier pos:line="6" pos:column="16">*<pos:position pos:line="6" pos:column="17"/></modifier></type><name pos:line="6" pos:column="17">vpool<pos:position pos:line="6" pos:column="22"/></name></decl>;<pos:position pos:line="6" pos:column="23"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="7" pos:column="5">OCSP_REQUEST<pos:position pos:line="7" pos:column="17"/></name> <modifier pos:line="7" pos:column="18">*<pos:position pos:line="7" pos:column="19"/></modifier></type><name pos:line="7" pos:column="19">req<pos:position pos:line="7" pos:column="22"/></name> <init pos:line="7" pos:column="23">= <expr><name pos:line="7" pos:column="25">NULL<pos:position pos:line="7" pos:column="29"/></name></expr></init></decl>;<pos:position pos:line="7" pos:column="30"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="8" pos:column="5">OCSP_CERTID<pos:position pos:line="8" pos:column="16"/></name> <modifier pos:line="8" pos:column="17">*<pos:position pos:line="8" pos:column="18"/></modifier></type><name pos:line="8" pos:column="18">id<pos:position pos:line="8" pos:column="20"/></name> <init pos:line="8" pos:column="21">= <expr><name pos:line="8" pos:column="23">NULL<pos:position pos:line="8" pos:column="27"/></name></expr></init></decl>;<pos:position pos:line="8" pos:column="28"/></decl_stmt>
    <expr_stmt><expr><call><name pos:line="9" pos:column="5">STACK_OF<pos:position pos:line="9" pos:column="13"/></name><argument_list pos:line="9" pos:column="13">(<argument><expr><name pos:line="9" pos:column="14">X509_EXTENSION<pos:position pos:line="9" pos:column="28"/></name></expr></argument>)<pos:position pos:line="9" pos:column="29"/></argument_list></call> <operator pos:line="9" pos:column="30">*<pos:position pos:line="9" pos:column="31"/></operator><name pos:line="9" pos:column="31">exts<pos:position pos:line="9" pos:column="35"/></name></expr>;<pos:position pos:line="9" pos:column="36"/></expr_stmt>
    <decl_stmt><decl><type><name pos:line="10" pos:column="5">int<pos:position pos:line="10" pos:column="8"/></name></type> <name pos:line="10" pos:column="9">i<pos:position pos:line="10" pos:column="10"/></name></decl>;<pos:position pos:line="10" pos:column="11"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="11" pos:column="5">BOOL<pos:position pos:line="11" pos:column="9"/></name></type> <name pos:line="11" pos:column="10">ok<pos:position pos:line="11" pos:column="12"/></name> <init pos:line="11" pos:column="13">= <expr><name pos:line="11" pos:column="15">FALSE<pos:position pos:line="11" pos:column="20"/></name></expr></init></decl>;<pos:position pos:line="11" pos:column="21"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="12" pos:column="5">BOOL<pos:position pos:line="12" pos:column="9"/></name></type> <name pos:line="12" pos:column="10">rv<pos:position pos:line="12" pos:column="12"/></name> <init pos:line="12" pos:column="13">= <expr><name pos:line="12" pos:column="15">TRUE<pos:position pos:line="12" pos:column="19"/></name></expr></init></decl>;<pos:position pos:line="12" pos:column="20"/></decl_stmt>
    <decl_stmt><decl><type><specifier pos:line="13" pos:column="5">const<pos:position pos:line="13" pos:column="10"/></specifier> <name pos:line="13" pos:column="11">char<pos:position pos:line="13" pos:column="15"/></name> <modifier pos:line="13" pos:column="16">*<pos:position pos:line="13" pos:column="17"/></modifier></type><name pos:line="13" pos:column="17">ocspuri<pos:position pos:line="13" pos:column="24"/></name></decl>;<pos:position pos:line="13" pos:column="25"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="14" pos:column="5">apr_uri_t<pos:position pos:line="14" pos:column="14"/></name></type> <name pos:line="14" pos:column="15">uri<pos:position pos:line="14" pos:column="18"/></name></decl>;<pos:position pos:line="14" pos:column="19"/></decl_stmt>

    <expr_stmt><expr><operator pos:line="16" pos:column="5">*<pos:position pos:line="16" pos:column="6"/></operator><name pos:line="16" pos:column="6">prsp<pos:position pos:line="16" pos:column="10"/></name> <operator pos:line="16" pos:column="11">=<pos:position pos:line="16" pos:column="12"/></operator> <name pos:line="16" pos:column="13">NULL<pos:position pos:line="16" pos:column="17"/></name></expr>;<pos:position pos:line="16" pos:column="18"/></expr_stmt>
    <comment type="block" pos:line="17" pos:column="5">/* Build up OCSP query from server certificate info */</comment>
    <expr_stmt><expr><call><name pos:line="18" pos:column="5">ap_log_error<pos:position pos:line="18" pos:column="17"/></name><argument_list pos:line="18" pos:column="17">(<argument><expr><name pos:line="18" pos:column="18">APLOG_MARK<pos:position pos:line="18" pos:column="28"/></name></expr></argument>, <argument><expr><name pos:line="18" pos:column="30">APLOG_DEBUG<pos:position pos:line="18" pos:column="41"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="18" pos:column="43">0<pos:position pos:line="18" pos:column="44"/></literal></expr></argument>, <argument><expr><name pos:line="18" pos:column="46">s<pos:position pos:line="18" pos:column="47"/></name></expr></argument>, <argument><expr><call><name pos:line="18" pos:column="49">APLOGNO<pos:position pos:line="18" pos:column="56"/></name><argument_list pos:line="18" pos:column="56">(<argument><expr><literal type="number" pos:line="18" pos:column="57">01938<pos:position pos:line="18" pos:column="62"/></literal></expr></argument>)<pos:position pos:line="18" pos:column="63"/></argument_list></call>
                 <literal type="string" pos:line="19" pos:column="18">"stapling_renew_response: querying responder"<pos:position pos:line="19" pos:column="63"/></literal></expr></argument>)<pos:position pos:line="19" pos:column="64"/></argument_list></call></expr>;<pos:position pos:line="19" pos:column="65"/></expr_stmt>

    <expr_stmt><expr><name pos:line="21" pos:column="5">req<pos:position pos:line="21" pos:column="8"/></name> <operator pos:line="21" pos:column="9">=<pos:position pos:line="21" pos:column="10"/></operator> <call><name pos:line="21" pos:column="11">OCSP_REQUEST_new<pos:position pos:line="21" pos:column="27"/></name><argument_list pos:line="21" pos:column="27">()<pos:position pos:line="21" pos:column="29"/></argument_list></call></expr>;<pos:position pos:line="21" pos:column="30"/></expr_stmt>
    <if pos:line="22" pos:column="5">if <condition pos:line="22" pos:column="8">(<expr><operator pos:line="22" pos:column="9">!<pos:position pos:line="22" pos:column="10"/></operator><name pos:line="22" pos:column="10">req<pos:position pos:line="22" pos:column="13"/></name></expr>)<pos:position pos:line="22" pos:column="14"/></condition><then pos:line="22" pos:column="14">
        <block type="pseudo"><goto pos:line="23" pos:column="9">goto <name pos:line="23" pos:column="14">err<pos:position pos:line="23" pos:column="17"/></name>;<pos:position pos:line="23" pos:column="18"/></goto></block></then></if>
    <expr_stmt><expr><name pos:line="24" pos:column="5">id<pos:position pos:line="24" pos:column="7"/></name> <operator pos:line="24" pos:column="8">=<pos:position pos:line="24" pos:column="9"/></operator> <call><name pos:line="24" pos:column="10">OCSP_CERTID_dup<pos:position pos:line="24" pos:column="25"/></name><argument_list pos:line="24" pos:column="25">(<argument><expr><name><name pos:line="24" pos:column="26">cinf<pos:position pos:line="24" pos:column="30"/></name><operator pos:line="24" pos:column="30">-&gt;<pos:position pos:line="24" pos:column="35"/></operator><name pos:line="24" pos:column="32">cid<pos:position pos:line="24" pos:column="35"/></name></name></expr></argument>)<pos:position pos:line="24" pos:column="36"/></argument_list></call></expr>;<pos:position pos:line="24" pos:column="37"/></expr_stmt>
    <if pos:line="25" pos:column="5">if <condition pos:line="25" pos:column="8">(<expr><operator pos:line="25" pos:column="9">!<pos:position pos:line="25" pos:column="10"/></operator><name pos:line="25" pos:column="10">id<pos:position pos:line="25" pos:column="12"/></name></expr>)<pos:position pos:line="25" pos:column="13"/></condition><then pos:line="25" pos:column="13">
        <block type="pseudo"><goto pos:line="26" pos:column="9">goto <name pos:line="26" pos:column="14">err<pos:position pos:line="26" pos:column="17"/></name>;<pos:position pos:line="26" pos:column="18"/></goto></block></then></if>
    <if pos:line="27" pos:column="5">if <condition pos:line="27" pos:column="8">(<expr><operator pos:line="27" pos:column="9">!<pos:position pos:line="27" pos:column="10"/></operator><call><name pos:line="27" pos:column="10">OCSP_request_add0_id<pos:position pos:line="27" pos:column="30"/></name><argument_list pos:line="27" pos:column="30">(<argument><expr><name pos:line="27" pos:column="31">req<pos:position pos:line="27" pos:column="34"/></name></expr></argument>, <argument><expr><name pos:line="27" pos:column="36">id<pos:position pos:line="27" pos:column="38"/></name></expr></argument>)<pos:position pos:line="27" pos:column="39"/></argument_list></call></expr>)<pos:position pos:line="27" pos:column="40"/></condition><then pos:line="27" pos:column="40">
        <block type="pseudo"><goto pos:line="28" pos:column="9">goto <name pos:line="28" pos:column="14">err<pos:position pos:line="28" pos:column="17"/></name>;<pos:position pos:line="28" pos:column="18"/></goto></block></then></if>
    <expr_stmt><expr><name pos:line="29" pos:column="5">id<pos:position pos:line="29" pos:column="7"/></name> <operator pos:line="29" pos:column="8">=<pos:position pos:line="29" pos:column="9"/></operator> <name pos:line="29" pos:column="10">NULL<pos:position pos:line="29" pos:column="14"/></name></expr>;<pos:position pos:line="29" pos:column="15"/></expr_stmt>
    <comment type="block" pos:line="30" pos:column="5">/* Add any extensions to the request */</comment>
    <expr_stmt><expr><call><name pos:line="31" pos:column="5">SSL_get_tlsext_status_exts<pos:position pos:line="31" pos:column="31"/></name><argument_list pos:line="31" pos:column="31">(<argument><expr><name pos:line="31" pos:column="32">ssl<pos:position pos:line="31" pos:column="35"/></name></expr></argument>, <argument><expr><operator pos:line="31" pos:column="37">&amp;<pos:position pos:line="31" pos:column="42"/></operator><name pos:line="31" pos:column="38">exts<pos:position pos:line="31" pos:column="42"/></name></expr></argument>)<pos:position pos:line="31" pos:column="43"/></argument_list></call></expr>;<pos:position pos:line="31" pos:column="44"/></expr_stmt>
    <for pos:line="32" pos:column="5">for <control pos:line="32" pos:column="9">(<init><expr><name pos:line="32" pos:column="10">i<pos:position pos:line="32" pos:column="11"/></name> <operator pos:line="32" pos:column="12">=<pos:position pos:line="32" pos:column="13"/></operator> <literal type="number" pos:line="32" pos:column="14">0<pos:position pos:line="32" pos:column="15"/></literal></expr>;<pos:position pos:line="32" pos:column="16"/></init> <condition><expr><name pos:line="32" pos:column="17">i<pos:position pos:line="32" pos:column="18"/></name> <operator pos:line="32" pos:column="19">&lt;<pos:position pos:line="32" pos:column="23"/></operator> <call><name pos:line="32" pos:column="21">sk_X509_EXTENSION_num<pos:position pos:line="32" pos:column="42"/></name><argument_list pos:line="32" pos:column="42">(<argument><expr><name pos:line="32" pos:column="43">exts<pos:position pos:line="32" pos:column="47"/></name></expr></argument>)<pos:position pos:line="32" pos:column="48"/></argument_list></call></expr>;<pos:position pos:line="32" pos:column="49"/></condition> <incr><expr><name pos:line="32" pos:column="50">i<pos:position pos:line="32" pos:column="51"/></name><operator pos:line="32" pos:column="51">++<pos:position pos:line="32" pos:column="53"/></operator></expr></incr>)<pos:position pos:line="32" pos:column="54"/></control> <block pos:line="32" pos:column="55">{
        <decl_stmt><decl><type><name pos:line="33" pos:column="9">X509_EXTENSION<pos:position pos:line="33" pos:column="23"/></name> <modifier pos:line="33" pos:column="24">*<pos:position pos:line="33" pos:column="25"/></modifier></type><name pos:line="33" pos:column="25">ext<pos:position pos:line="33" pos:column="28"/></name> <init pos:line="33" pos:column="29">= <expr><call><name pos:line="33" pos:column="31">sk_X509_EXTENSION_value<pos:position pos:line="33" pos:column="54"/></name><argument_list pos:line="33" pos:column="54">(<argument><expr><name pos:line="33" pos:column="55">exts<pos:position pos:line="33" pos:column="59"/></name></expr></argument>, <argument><expr><name pos:line="33" pos:column="61">i<pos:position pos:line="33" pos:column="62"/></name></expr></argument>)<pos:position pos:line="33" pos:column="63"/></argument_list></call></expr></init></decl>;<pos:position pos:line="33" pos:column="64"/></decl_stmt>
        <if pos:line="34" pos:column="9">if <condition pos:line="34" pos:column="12">(<expr><operator pos:line="34" pos:column="13">!<pos:position pos:line="34" pos:column="14"/></operator><call><name pos:line="34" pos:column="14">OCSP_REQUEST_add_ext<pos:position pos:line="34" pos:column="34"/></name><argument_list pos:line="34" pos:column="34">(<argument><expr><name pos:line="34" pos:column="35">req<pos:position pos:line="34" pos:column="38"/></name></expr></argument>, <argument><expr><name pos:line="34" pos:column="40">ext<pos:position pos:line="34" pos:column="43"/></name></expr></argument>, <argument><expr><operator pos:line="34" pos:column="45">-<pos:position pos:line="34" pos:column="46"/></operator><literal type="number" pos:line="34" pos:column="46">1<pos:position pos:line="34" pos:column="47"/></literal></expr></argument>)<pos:position pos:line="34" pos:column="48"/></argument_list></call></expr>)<pos:position pos:line="34" pos:column="49"/></condition><then pos:line="34" pos:column="49">
            <block type="pseudo"><goto pos:line="35" pos:column="13">goto <name pos:line="35" pos:column="18">err<pos:position pos:line="35" pos:column="21"/></name>;<pos:position pos:line="35" pos:column="22"/></goto></block></then></if>
    }<pos:position pos:line="36" pos:column="6"/></block></for>

    <if pos:line="38" pos:column="5">if <condition pos:line="38" pos:column="8">(<expr><name><name pos:line="38" pos:column="9">mctx<pos:position pos:line="38" pos:column="13"/></name><operator pos:line="38" pos:column="13">-&gt;<pos:position pos:line="38" pos:column="18"/></operator><name pos:line="38" pos:column="15">stapling_force_url<pos:position pos:line="38" pos:column="33"/></name></name></expr>)<pos:position pos:line="38" pos:column="34"/></condition><then pos:line="38" pos:column="34">
        <block type="pseudo"><expr_stmt><expr><name pos:line="39" pos:column="9">ocspuri<pos:position pos:line="39" pos:column="16"/></name> <operator pos:line="39" pos:column="17">=<pos:position pos:line="39" pos:column="18"/></operator> <name><name pos:line="39" pos:column="19">mctx<pos:position pos:line="39" pos:column="23"/></name><operator pos:line="39" pos:column="23">-&gt;<pos:position pos:line="39" pos:column="28"/></operator><name pos:line="39" pos:column="25">stapling_force_url<pos:position pos:line="39" pos:column="43"/></name></name></expr>;<pos:position pos:line="39" pos:column="44"/></expr_stmt></block></then>
    <else pos:line="40" pos:column="5">else
        <block type="pseudo"><expr_stmt><expr><name pos:line="41" pos:column="9">ocspuri<pos:position pos:line="41" pos:column="16"/></name> <operator pos:line="41" pos:column="17">=<pos:position pos:line="41" pos:column="18"/></operator> <name><name pos:line="41" pos:column="19">cinf<pos:position pos:line="41" pos:column="23"/></name><operator pos:line="41" pos:column="23">-&gt;<pos:position pos:line="41" pos:column="28"/></operator><name pos:line="41" pos:column="25">uri<pos:position pos:line="41" pos:column="28"/></name></name></expr>;<pos:position pos:line="41" pos:column="29"/></expr_stmt></block></else></if>

    <comment type="block" pos:line="43" pos:column="5">/* Create a temporary pool to constrain memory use */</comment>
    <expr_stmt><expr><call><name pos:line="44" pos:column="5">apr_pool_create<pos:position pos:line="44" pos:column="20"/></name><argument_list pos:line="44" pos:column="20">(<argument><expr><operator pos:line="44" pos:column="21">&amp;<pos:position pos:line="44" pos:column="26"/></operator><name pos:line="44" pos:column="22">vpool<pos:position pos:line="44" pos:column="27"/></name></expr></argument>, <argument><expr><name><name pos:line="44" pos:column="29">conn<pos:position pos:line="44" pos:column="33"/></name><operator pos:line="44" pos:column="33">-&gt;<pos:position pos:line="44" pos:column="38"/></operator><name pos:line="44" pos:column="35">pool<pos:position pos:line="44" pos:column="39"/></name></name></expr></argument>)<pos:position pos:line="44" pos:column="40"/></argument_list></call></expr>;<pos:position pos:line="44" pos:column="41"/></expr_stmt>

    <expr_stmt><expr><name pos:line="46" pos:column="5">ok<pos:position pos:line="46" pos:column="7"/></name> <operator pos:line="46" pos:column="8">=<pos:position pos:line="46" pos:column="9"/></operator> <call><name pos:line="46" pos:column="10">apr_uri_parse<pos:position pos:line="46" pos:column="23"/></name><argument_list pos:line="46" pos:column="23">(<argument><expr><name pos:line="46" pos:column="24">vpool<pos:position pos:line="46" pos:column="29"/></name></expr></argument>, <argument><expr><name pos:line="46" pos:column="31">ocspuri<pos:position pos:line="46" pos:column="38"/></name></expr></argument>, <argument><expr><operator pos:line="46" pos:column="40">&amp;<pos:position pos:line="46" pos:column="45"/></operator><name pos:line="46" pos:column="41">uri<pos:position pos:line="46" pos:column="44"/></name></expr></argument>)<pos:position pos:line="46" pos:column="45"/></argument_list></call></expr>;<pos:position pos:line="46" pos:column="46"/></expr_stmt>
    <if pos:line="47" pos:column="5">if <condition pos:line="47" pos:column="8">(<expr><name pos:line="47" pos:column="9">ok<pos:position pos:line="47" pos:column="11"/></name> <operator pos:line="47" pos:column="12">!=<pos:position pos:line="47" pos:column="14"/></operator> <name pos:line="47" pos:column="15">APR_SUCCESS<pos:position pos:line="47" pos:column="26"/></name></expr>)<pos:position pos:line="47" pos:column="27"/></condition><then pos:line="47" pos:column="27"> <block pos:line="47" pos:column="28">{
        <expr_stmt><expr><call><name pos:line="48" pos:column="9">ap_log_error<pos:position pos:line="48" pos:column="21"/></name><argument_list pos:line="48" pos:column="21">(<argument><expr><name pos:line="48" pos:column="22">APLOG_MARK<pos:position pos:line="48" pos:column="32"/></name></expr></argument>, <argument><expr><name pos:line="48" pos:column="34">APLOG_ERR<pos:position pos:line="48" pos:column="43"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="48" pos:column="45">0<pos:position pos:line="48" pos:column="46"/></literal></expr></argument>, <argument><expr><name pos:line="48" pos:column="48">s<pos:position pos:line="48" pos:column="49"/></name></expr></argument>, <argument><expr><call><name pos:line="48" pos:column="51">APLOGNO<pos:position pos:line="48" pos:column="58"/></name><argument_list pos:line="48" pos:column="58">(<argument><expr><literal type="number" pos:line="48" pos:column="59">01939<pos:position pos:line="48" pos:column="64"/></literal></expr></argument>)<pos:position pos:line="48" pos:column="65"/></argument_list></call>
                     <literal type="string" pos:line="49" pos:column="22">"stapling_renew_response: Error parsing uri %s"<pos:position pos:line="49" pos:column="69"/></literal></expr></argument>,
                      <argument><expr><name pos:line="50" pos:column="23">ocspuri<pos:position pos:line="50" pos:column="30"/></name></expr></argument>)<pos:position pos:line="50" pos:column="31"/></argument_list></call></expr>;<pos:position pos:line="50" pos:column="32"/></expr_stmt>
        <expr_stmt><expr><name pos:line="51" pos:column="9">rv<pos:position pos:line="51" pos:column="11"/></name> <operator pos:line="51" pos:column="12">=<pos:position pos:line="51" pos:column="13"/></operator> <name pos:line="51" pos:column="14">FALSE<pos:position pos:line="51" pos:column="19"/></name></expr>;<pos:position pos:line="51" pos:column="20"/></expr_stmt>
        <goto pos:line="52" pos:column="9">goto <name pos:line="52" pos:column="14">done<pos:position pos:line="52" pos:column="18"/></name>;<pos:position pos:line="52" pos:column="19"/></goto>
    }<pos:position pos:line="53" pos:column="6"/></block></then>
    <elseif pos:line="54" pos:column="5">else <if pos:line="54" pos:column="10">if <condition pos:line="54" pos:column="13">(<expr><call><name pos:line="54" pos:column="14">strcmp<pos:position pos:line="54" pos:column="20"/></name><argument_list pos:line="54" pos:column="20">(<argument><expr><name><name pos:line="54" pos:column="21">uri<pos:position pos:line="54" pos:column="24"/></name><operator pos:line="54" pos:column="24">.<pos:position pos:line="54" pos:column="25"/></operator><name pos:line="54" pos:column="25">scheme<pos:position pos:line="54" pos:column="31"/></name></name></expr></argument>, <argument><expr><literal type="string" pos:line="54" pos:column="33">"http"<pos:position pos:line="54" pos:column="39"/></literal></expr></argument>)<pos:position pos:line="54" pos:column="40"/></argument_list></call></expr>)<pos:position pos:line="54" pos:column="41"/></condition><then pos:line="54" pos:column="41"> <block pos:line="54" pos:column="42">{
        <expr_stmt><expr><call><name pos:line="55" pos:column="9">ap_log_error<pos:position pos:line="55" pos:column="21"/></name><argument_list pos:line="55" pos:column="21">(<argument><expr><name pos:line="55" pos:column="22">APLOG_MARK<pos:position pos:line="55" pos:column="32"/></name></expr></argument>, <argument><expr><name pos:line="55" pos:column="34">APLOG_ERR<pos:position pos:line="55" pos:column="43"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="55" pos:column="45">0<pos:position pos:line="55" pos:column="46"/></literal></expr></argument>, <argument><expr><name pos:line="55" pos:column="48">s<pos:position pos:line="55" pos:column="49"/></name></expr></argument>, <argument><expr><call><name pos:line="55" pos:column="51">APLOGNO<pos:position pos:line="55" pos:column="58"/></name><argument_list pos:line="55" pos:column="58">(<argument><expr><literal type="number" pos:line="55" pos:column="59">01940<pos:position pos:line="55" pos:column="64"/></literal></expr></argument>)<pos:position pos:line="55" pos:column="65"/></argument_list></call>
                     <literal type="string" pos:line="56" pos:column="22">"stapling_renew_response: Unsupported uri %s"<pos:position pos:line="56" pos:column="67"/></literal></expr></argument>, <argument><expr><name pos:line="56" pos:column="69">ocspuri<pos:position pos:line="56" pos:column="76"/></name></expr></argument>)<pos:position pos:line="56" pos:column="77"/></argument_list></call></expr>;<pos:position pos:line="56" pos:column="78"/></expr_stmt>
        <expr_stmt><expr><name pos:line="57" pos:column="9">rv<pos:position pos:line="57" pos:column="11"/></name> <operator pos:line="57" pos:column="12">=<pos:position pos:line="57" pos:column="13"/></operator> <name pos:line="57" pos:column="14">FALSE<pos:position pos:line="57" pos:column="19"/></name></expr>;<pos:position pos:line="57" pos:column="20"/></expr_stmt>
        <goto pos:line="58" pos:column="9">goto <name pos:line="58" pos:column="14">done<pos:position pos:line="58" pos:column="18"/></name>;<pos:position pos:line="58" pos:column="19"/></goto>
    }<pos:position pos:line="59" pos:column="6"/></block></then></if></elseif></if>

    <if pos:line="61" pos:column="5">if <condition pos:line="61" pos:column="8">(<expr><operator pos:line="61" pos:column="9">!<pos:position pos:line="61" pos:column="10"/></operator><name><name pos:line="61" pos:column="10">uri<pos:position pos:line="61" pos:column="13"/></name><operator pos:line="61" pos:column="13">.<pos:position pos:line="61" pos:column="14"/></operator><name pos:line="61" pos:column="14">port<pos:position pos:line="61" pos:column="18"/></name></name></expr>)<pos:position pos:line="61" pos:column="19"/></condition><then pos:line="61" pos:column="19"> <block pos:line="61" pos:column="20">{
        <expr_stmt><expr><name><name pos:line="62" pos:column="9">uri<pos:position pos:line="62" pos:column="12"/></name><operator pos:line="62" pos:column="12">.<pos:position pos:line="62" pos:column="13"/></operator><name pos:line="62" pos:column="13">port<pos:position pos:line="62" pos:column="17"/></name></name> <operator pos:line="62" pos:column="18">=<pos:position pos:line="62" pos:column="19"/></operator> <call><name pos:line="62" pos:column="20">apr_uri_port_of_scheme<pos:position pos:line="62" pos:column="42"/></name><argument_list pos:line="62" pos:column="42">(<argument><expr><name><name pos:line="62" pos:column="43">uri<pos:position pos:line="62" pos:column="46"/></name><operator pos:line="62" pos:column="46">.<pos:position pos:line="62" pos:column="47"/></operator><name pos:line="62" pos:column="47">scheme<pos:position pos:line="62" pos:column="53"/></name></name></expr></argument>)<pos:position pos:line="62" pos:column="54"/></argument_list></call></expr>;<pos:position pos:line="62" pos:column="55"/></expr_stmt>
    }<pos:position pos:line="63" pos:column="6"/></block></then></if>

    <expr_stmt><expr><operator pos:line="65" pos:column="5">*<pos:position pos:line="65" pos:column="6"/></operator><name pos:line="65" pos:column="6">prsp<pos:position pos:line="65" pos:column="10"/></name> <operator pos:line="65" pos:column="11">=<pos:position pos:line="65" pos:column="12"/></operator> <call><name pos:line="65" pos:column="13">modssl_dispatch_ocsp_request<pos:position pos:line="65" pos:column="41"/></name><argument_list pos:line="65" pos:column="41">(<argument><expr><operator pos:line="65" pos:column="42">&amp;<pos:position pos:line="65" pos:column="47"/></operator><name pos:line="65" pos:column="43">uri<pos:position pos:line="65" pos:column="46"/></name></expr></argument>, <argument><expr><name><name pos:line="65" pos:column="48">mctx<pos:position pos:line="65" pos:column="52"/></name><operator pos:line="65" pos:column="52">-&gt;<pos:position pos:line="65" pos:column="57"/></operator><name pos:line="65" pos:column="54">stapling_responder_timeout<pos:position pos:line="65" pos:column="80"/></name></name></expr></argument>,
                                         <argument><expr><name pos:line="66" pos:column="42">req<pos:position pos:line="66" pos:column="45"/></name></expr></argument>, <argument><expr><name pos:line="66" pos:column="47">conn<pos:position pos:line="66" pos:column="51"/></name></expr></argument>, <argument><expr><name pos:line="66" pos:column="53">vpool<pos:position pos:line="66" pos:column="58"/></name></expr></argument>)<pos:position pos:line="66" pos:column="59"/></argument_list></call></expr>;<pos:position pos:line="66" pos:column="60"/></expr_stmt>

    <expr_stmt><expr><call><name pos:line="68" pos:column="5">apr_pool_destroy<pos:position pos:line="68" pos:column="21"/></name><argument_list pos:line="68" pos:column="21">(<argument><expr><name pos:line="68" pos:column="22">vpool<pos:position pos:line="68" pos:column="27"/></name></expr></argument>)<pos:position pos:line="68" pos:column="28"/></argument_list></call></expr>;<pos:position pos:line="68" pos:column="29"/></expr_stmt>

    <if pos:line="70" pos:column="5">if <condition pos:line="70" pos:column="8">(<expr><operator pos:line="70" pos:column="9">!<pos:position pos:line="70" pos:column="10"/></operator><operator pos:line="70" pos:column="10">*<pos:position pos:line="70" pos:column="11"/></operator><name pos:line="70" pos:column="11">prsp<pos:position pos:line="70" pos:column="15"/></name></expr>)<pos:position pos:line="70" pos:column="16"/></condition><then pos:line="70" pos:column="16"> <block pos:line="70" pos:column="17">{
        <expr_stmt><expr><call><name pos:line="71" pos:column="9">ap_log_error<pos:position pos:line="71" pos:column="21"/></name><argument_list pos:line="71" pos:column="21">(<argument><expr><name pos:line="71" pos:column="22">APLOG_MARK<pos:position pos:line="71" pos:column="32"/></name></expr></argument>, <argument><expr><name pos:line="71" pos:column="34">APLOG_ERR<pos:position pos:line="71" pos:column="43"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="71" pos:column="45">0<pos:position pos:line="71" pos:column="46"/></literal></expr></argument>, <argument><expr><name pos:line="71" pos:column="48">s<pos:position pos:line="71" pos:column="49"/></name></expr></argument>, <argument><expr><call><name pos:line="71" pos:column="51">APLOGNO<pos:position pos:line="71" pos:column="58"/></name><argument_list pos:line="71" pos:column="58">(<argument><expr><literal type="number" pos:line="71" pos:column="59">01941<pos:position pos:line="71" pos:column="64"/></literal></expr></argument>)<pos:position pos:line="71" pos:column="65"/></argument_list></call>
                     <literal type="string" pos:line="72" pos:column="22">"stapling_renew_response: responder error"<pos:position pos:line="72" pos:column="64"/></literal></expr></argument>)<pos:position pos:line="72" pos:column="65"/></argument_list></call></expr>;<pos:position pos:line="72" pos:column="66"/></expr_stmt>
        <if pos:line="73" pos:column="9">if <condition pos:line="73" pos:column="12">(<expr><name><name pos:line="73" pos:column="13">mctx<pos:position pos:line="73" pos:column="17"/></name><operator pos:line="73" pos:column="17">-&gt;<pos:position pos:line="73" pos:column="22"/></operator><name pos:line="73" pos:column="19">stapling_fake_trylater<pos:position pos:line="73" pos:column="41"/></name></name></expr>)<pos:position pos:line="73" pos:column="42"/></condition><then pos:line="73" pos:column="42"> <block pos:line="73" pos:column="43">{
            <expr_stmt><expr><operator pos:line="74" pos:column="13">*<pos:position pos:line="74" pos:column="14"/></operator><name pos:line="74" pos:column="14">prsp<pos:position pos:line="74" pos:column="18"/></name> <operator pos:line="74" pos:column="19">=<pos:position pos:line="74" pos:column="20"/></operator> <call><name pos:line="74" pos:column="21">OCSP_response_create<pos:position pos:line="74" pos:column="41"/></name><argument_list pos:line="74" pos:column="41">(<argument><expr><name pos:line="74" pos:column="42">OCSP_RESPONSE_STATUS_TRYLATER<pos:position pos:line="74" pos:column="71"/></name></expr></argument>, <argument><expr><name pos:line="74" pos:column="73">NULL<pos:position pos:line="74" pos:column="77"/></name></expr></argument>)<pos:position pos:line="74" pos:column="78"/></argument_list></call></expr>;<pos:position pos:line="74" pos:column="79"/></expr_stmt>
        }<pos:position pos:line="75" pos:column="10"/></block></then>
        <else pos:line="76" pos:column="9">else <block pos:line="76" pos:column="14">{
            <goto pos:line="77" pos:column="13">goto <name pos:line="77" pos:column="18">done<pos:position pos:line="77" pos:column="22"/></name>;<pos:position pos:line="77" pos:column="23"/></goto>
        }<pos:position pos:line="78" pos:column="10"/></block></else></if>
    }<pos:position pos:line="79" pos:column="6"/></block></then>
    <else pos:line="80" pos:column="5">else <block pos:line="80" pos:column="10">{
        <decl_stmt><decl><type><name pos:line="81" pos:column="9">int<pos:position pos:line="81" pos:column="12"/></name></type> <name pos:line="81" pos:column="13">response_status<pos:position pos:line="81" pos:column="28"/></name> <init pos:line="81" pos:column="29">= <expr><call><name pos:line="81" pos:column="31">OCSP_response_status<pos:position pos:line="81" pos:column="51"/></name><argument_list pos:line="81" pos:column="51">(<argument><expr><operator pos:line="81" pos:column="52">*<pos:position pos:line="81" pos:column="53"/></operator><name pos:line="81" pos:column="53">prsp<pos:position pos:line="81" pos:column="57"/></name></expr></argument>)<pos:position pos:line="81" pos:column="58"/></argument_list></call></expr></init></decl>;<pos:position pos:line="81" pos:column="59"/></decl_stmt>

        <if pos:line="83" pos:column="9">if <condition pos:line="83" pos:column="12">(<expr><name pos:line="83" pos:column="13">response_status<pos:position pos:line="83" pos:column="28"/></name> <operator pos:line="83" pos:column="29">==<pos:position pos:line="83" pos:column="31"/></operator> <name pos:line="83" pos:column="32">OCSP_RESPONSE_STATUS_SUCCESSFUL<pos:position pos:line="83" pos:column="63"/></name></expr>)<pos:position pos:line="83" pos:column="64"/></condition><then pos:line="83" pos:column="64"> <block pos:line="83" pos:column="65">{
            <expr_stmt><expr><call><name pos:line="84" pos:column="13">ap_log_error<pos:position pos:line="84" pos:column="25"/></name><argument_list pos:line="84" pos:column="25">(<argument><expr><name pos:line="84" pos:column="26">APLOG_MARK<pos:position pos:line="84" pos:column="36"/></name></expr></argument>, <argument><expr><name pos:line="84" pos:column="38">APLOG_DEBUG<pos:position pos:line="84" pos:column="49"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="84" pos:column="51">0<pos:position pos:line="84" pos:column="52"/></literal></expr></argument>, <argument><expr><name pos:line="84" pos:column="54">s<pos:position pos:line="84" pos:column="55"/></name></expr></argument>, <argument><expr><call><name pos:line="84" pos:column="57">APLOGNO<pos:position pos:line="84" pos:column="64"/></name><argument_list pos:line="84" pos:column="64">(<argument><expr><literal type="number" pos:line="84" pos:column="65">01942<pos:position pos:line="84" pos:column="70"/></literal></expr></argument>)<pos:position pos:line="84" pos:column="71"/></argument_list></call>
                        <literal type="string" pos:line="85" pos:column="25">"stapling_renew_response: query response received"<pos:position pos:line="85" pos:column="75"/></literal></expr></argument>)<pos:position pos:line="85" pos:column="76"/></argument_list></call></expr>;<pos:position pos:line="85" pos:column="77"/></expr_stmt>
            <expr_stmt><expr><call><name pos:line="86" pos:column="13">stapling_check_response<pos:position pos:line="86" pos:column="36"/></name><argument_list pos:line="86" pos:column="36">(<argument><expr><name pos:line="86" pos:column="37">s<pos:position pos:line="86" pos:column="38"/></name></expr></argument>, <argument><expr><name pos:line="86" pos:column="40">mctx<pos:position pos:line="86" pos:column="44"/></name></expr></argument>, <argument><expr><name pos:line="86" pos:column="46">cinf<pos:position pos:line="86" pos:column="50"/></name></expr></argument>, <argument><expr><operator pos:line="86" pos:column="52">*<pos:position pos:line="86" pos:column="53"/></operator><name pos:line="86" pos:column="53">prsp<pos:position pos:line="86" pos:column="57"/></name></expr></argument>, <argument><expr><operator pos:line="86" pos:column="59">&amp;<pos:position pos:line="86" pos:column="64"/></operator><name pos:line="86" pos:column="60">ok<pos:position pos:line="86" pos:column="62"/></name></expr></argument>)<pos:position pos:line="86" pos:column="63"/></argument_list></call></expr>;<pos:position pos:line="86" pos:column="64"/></expr_stmt>
            <if pos:line="87" pos:column="13">if <condition pos:line="87" pos:column="16">(<expr><name pos:line="87" pos:column="17">ok<pos:position pos:line="87" pos:column="19"/></name> <operator pos:line="87" pos:column="20">==<pos:position pos:line="87" pos:column="22"/></operator> <name pos:line="87" pos:column="23">FALSE<pos:position pos:line="87" pos:column="28"/></name></expr>)<pos:position pos:line="87" pos:column="29"/></condition><then pos:line="87" pos:column="29"> <block pos:line="87" pos:column="30">{
                <expr_stmt><expr><call><name pos:line="88" pos:column="17">ap_log_error<pos:position pos:line="88" pos:column="29"/></name><argument_list pos:line="88" pos:column="29">(<argument><expr><name pos:line="88" pos:column="30">APLOG_MARK<pos:position pos:line="88" pos:column="40"/></name></expr></argument>, <argument><expr><name pos:line="88" pos:column="42">APLOG_ERR<pos:position pos:line="88" pos:column="51"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="88" pos:column="53">0<pos:position pos:line="88" pos:column="54"/></literal></expr></argument>, <argument><expr><name pos:line="88" pos:column="56">s<pos:position pos:line="88" pos:column="57"/></name></expr></argument>, <argument><expr><call><name pos:line="88" pos:column="59">APLOGNO<pos:position pos:line="88" pos:column="66"/></name><argument_list pos:line="88" pos:column="66">(<argument><expr><literal type="number" pos:line="88" pos:column="67">01943<pos:position pos:line="88" pos:column="72"/></literal></expr></argument>)<pos:position pos:line="88" pos:column="73"/></argument_list></call>
                             <literal type="string" pos:line="89" pos:column="30">"stapling_renew_response: error in retreived response!"<pos:position pos:line="89" pos:column="85"/></literal></expr></argument>)<pos:position pos:line="89" pos:column="86"/></argument_list></call></expr>;<pos:position pos:line="89" pos:column="87"/></expr_stmt>
            }<pos:position pos:line="90" pos:column="14"/></block></then></if>
        }<pos:position pos:line="91" pos:column="10"/></block></then>
        <else pos:line="92" pos:column="9">else <block pos:line="92" pos:column="14">{
            <expr_stmt><expr><call><name pos:line="93" pos:column="13">ap_log_error<pos:position pos:line="93" pos:column="25"/></name><argument_list pos:line="93" pos:column="25">(<argument><expr><name pos:line="93" pos:column="26">APLOG_MARK<pos:position pos:line="93" pos:column="36"/></name></expr></argument>, <argument><expr><name pos:line="93" pos:column="38">APLOG_DEBUG<pos:position pos:line="93" pos:column="49"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="93" pos:column="51">0<pos:position pos:line="93" pos:column="52"/></literal></expr></argument>, <argument><expr><name pos:line="93" pos:column="54">s<pos:position pos:line="93" pos:column="55"/></name></expr></argument>, <argument><expr><call><name pos:line="93" pos:column="57">APLOGNO<pos:position pos:line="93" pos:column="64"/></name><argument_list pos:line="93" pos:column="64">(<argument><expr><literal type="number" pos:line="93" pos:column="65">01944<pos:position pos:line="93" pos:column="70"/></literal></expr></argument>)<pos:position pos:line="93" pos:column="71"/></argument_list></call>
                         <literal type="string" pos:line="94" pos:column="26">"stapling_renew_response: responder error %s"<pos:position pos:line="94" pos:column="71"/></literal></expr></argument>,
                         <argument><expr><call><name pos:line="95" pos:column="26">OCSP_response_status_str<pos:position pos:line="95" pos:column="50"/></name><argument_list pos:line="95" pos:column="50">(<argument><expr><name pos:line="95" pos:column="51">response_status<pos:position pos:line="95" pos:column="66"/></name></expr></argument>)<pos:position pos:line="95" pos:column="67"/></argument_list></call></expr></argument>)<pos:position pos:line="95" pos:column="68"/></argument_list></call></expr>;<pos:position pos:line="95" pos:column="69"/></expr_stmt>
        }<pos:position pos:line="96" pos:column="10"/></block></else></if>
    }<pos:position pos:line="97" pos:column="6"/></block></else></if>
    <if pos:line="98" pos:column="5">if <condition pos:line="98" pos:column="8">(<expr><call><name pos:line="98" pos:column="9">stapling_cache_response<pos:position pos:line="98" pos:column="32"/></name><argument_list pos:line="98" pos:column="32">(<argument><expr><name pos:line="98" pos:column="33">s<pos:position pos:line="98" pos:column="34"/></name></expr></argument>, <argument><expr><name pos:line="98" pos:column="36">mctx<pos:position pos:line="98" pos:column="40"/></name></expr></argument>, <argument><expr><operator pos:line="98" pos:column="42">*<pos:position pos:line="98" pos:column="43"/></operator><name pos:line="98" pos:column="43">prsp<pos:position pos:line="98" pos:column="47"/></name></expr></argument>, <argument><expr><name pos:line="98" pos:column="49">cinf<pos:position pos:line="98" pos:column="53"/></name></expr></argument>, <argument><expr><name pos:line="98" pos:column="55">ok<pos:position pos:line="98" pos:column="57"/></name></expr></argument>, <argument><expr><name pos:line="98" pos:column="59">pool<pos:position pos:line="98" pos:column="63"/></name></expr></argument>)<pos:position pos:line="98" pos:column="64"/></argument_list></call> <operator pos:line="98" pos:column="65">==<pos:position pos:line="98" pos:column="67"/></operator> <name pos:line="98" pos:column="68">FALSE<pos:position pos:line="98" pos:column="73"/></name></expr>)<pos:position pos:line="98" pos:column="74"/></condition><then pos:line="98" pos:column="74"> <block pos:line="98" pos:column="75">{
        <expr_stmt><expr><call><name pos:line="99" pos:column="9">ap_log_error<pos:position pos:line="99" pos:column="21"/></name><argument_list pos:line="99" pos:column="21">(<argument><expr><name pos:line="99" pos:column="22">APLOG_MARK<pos:position pos:line="99" pos:column="32"/></name></expr></argument>, <argument><expr><name pos:line="99" pos:column="34">APLOG_ERR<pos:position pos:line="99" pos:column="43"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="99" pos:column="45">0<pos:position pos:line="99" pos:column="46"/></literal></expr></argument>, <argument><expr><name pos:line="99" pos:column="48">s<pos:position pos:line="99" pos:column="49"/></name></expr></argument>, <argument><expr><call><name pos:line="99" pos:column="51">APLOGNO<pos:position pos:line="99" pos:column="58"/></name><argument_list pos:line="99" pos:column="58">(<argument><expr><literal type="number" pos:line="99" pos:column="59">01945<pos:position pos:line="99" pos:column="64"/></literal></expr></argument>)<pos:position pos:line="99" pos:column="65"/></argument_list></call>
                     <literal type="string" pos:line="100" pos:column="22">"stapling_renew_response: error caching response!"<pos:position pos:line="100" pos:column="72"/></literal></expr></argument>)<pos:position pos:line="100" pos:column="73"/></argument_list></call></expr>;<pos:position pos:line="100" pos:column="74"/></expr_stmt>
    }<pos:position pos:line="101" pos:column="6"/></block></then></if>

<label><name pos:line="103" pos:column="1">done<pos:position pos:line="103" pos:column="5"/></name>:<pos:position pos:line="103" pos:column="6"/></label>
    <if pos:line="104" pos:column="5">if <condition pos:line="104" pos:column="8">(<expr><name pos:line="104" pos:column="9">id<pos:position pos:line="104" pos:column="11"/></name></expr>)<pos:position pos:line="104" pos:column="12"/></condition><then pos:line="104" pos:column="12">
        <block type="pseudo"><expr_stmt><expr><call><name pos:line="105" pos:column="9">OCSP_CERTID_free<pos:position pos:line="105" pos:column="25"/></name><argument_list pos:line="105" pos:column="25">(<argument><expr><name pos:line="105" pos:column="26">id<pos:position pos:line="105" pos:column="28"/></name></expr></argument>)<pos:position pos:line="105" pos:column="29"/></argument_list></call></expr>;<pos:position pos:line="105" pos:column="30"/></expr_stmt></block></then></if>
    <if pos:line="106" pos:column="5">if <condition pos:line="106" pos:column="8">(<expr><name pos:line="106" pos:column="9">req<pos:position pos:line="106" pos:column="12"/></name></expr>)<pos:position pos:line="106" pos:column="13"/></condition><then pos:line="106" pos:column="13">
        <block type="pseudo"><expr_stmt><expr><call><name pos:line="107" pos:column="9">OCSP_REQUEST_free<pos:position pos:line="107" pos:column="26"/></name><argument_list pos:line="107" pos:column="26">(<argument><expr><name pos:line="107" pos:column="27">req<pos:position pos:line="107" pos:column="30"/></name></expr></argument>)<pos:position pos:line="107" pos:column="31"/></argument_list></call></expr>;<pos:position pos:line="107" pos:column="32"/></expr_stmt></block></then></if>
    <return pos:line="108" pos:column="5">return <expr><name pos:line="108" pos:column="12">rv<pos:position pos:line="108" pos:column="14"/></name></expr>;<pos:position pos:line="108" pos:column="15"/></return>
<label><name pos:line="109" pos:column="1">err<pos:position pos:line="109" pos:column="4"/></name>:<pos:position pos:line="109" pos:column="5"/></label>
    <expr_stmt><expr><name pos:line="110" pos:column="5">rv<pos:position pos:line="110" pos:column="7"/></name> <operator pos:line="110" pos:column="8">=<pos:position pos:line="110" pos:column="9"/></operator> <name pos:line="110" pos:column="10">FALSE<pos:position pos:line="110" pos:column="15"/></name></expr>;<pos:position pos:line="110" pos:column="16"/></expr_stmt>
    <goto pos:line="111" pos:column="5">goto <name pos:line="111" pos:column="10">done<pos:position pos:line="111" pos:column="14"/></name>;<pos:position pos:line="111" pos:column="15"/></goto>
}<pos:position pos:line="112" pos:column="2"/></block></function></unit>

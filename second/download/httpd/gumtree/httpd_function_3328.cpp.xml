<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/httpd/gumtree/httpd_function_3328.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">int<pos:position pos:line="1" pos:column="11"/></name></type> <name pos:line="1" pos:column="12">privileges_req<pos:position pos:line="1" pos:column="26"/></name><parameter_list pos:line="1" pos:column="26">(<parameter><decl><type><name pos:line="1" pos:column="27">request_rec<pos:position pos:line="1" pos:column="38"/></name> <modifier pos:line="1" pos:column="39">*<pos:position pos:line="1" pos:column="40"/></modifier></type><name pos:line="1" pos:column="40">r<pos:position pos:line="1" pos:column="41"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="42"/></parameter_list>
<block pos:line="2" pos:column="1">{
    <comment type="block" pos:line="3" pos:column="5">/* secure mode: fork a process to handle the request */</comment>
    <decl_stmt><decl><type><name pos:line="4" pos:column="5">apr_proc_t<pos:position pos:line="4" pos:column="15"/></name></type> <name pos:line="4" pos:column="16">proc<pos:position pos:line="4" pos:column="20"/></name></decl>;<pos:position pos:line="4" pos:column="21"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="5" pos:column="5">apr_status_t<pos:position pos:line="5" pos:column="17"/></name></type> <name pos:line="5" pos:column="18">rv<pos:position pos:line="5" pos:column="20"/></name></decl>;<pos:position pos:line="5" pos:column="21"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="6" pos:column="5">int<pos:position pos:line="6" pos:column="8"/></name></type> <name pos:line="6" pos:column="9">exitcode<pos:position pos:line="6" pos:column="17"/></name></decl>;<pos:position pos:line="6" pos:column="18"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="7" pos:column="5">apr_exit_why_e<pos:position pos:line="7" pos:column="19"/></name></type> <name pos:line="7" pos:column="20">exitwhy<pos:position pos:line="7" pos:column="27"/></name></decl>;<pos:position pos:line="7" pos:column="28"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="8" pos:column="5">int<pos:position pos:line="8" pos:column="8"/></name></type> <name pos:line="8" pos:column="9">fork_req<pos:position pos:line="8" pos:column="17"/></name></decl>;<pos:position pos:line="8" pos:column="18"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="9" pos:column="5">priv_cfg<pos:position pos:line="9" pos:column="13"/></name> <modifier pos:line="9" pos:column="14">*<pos:position pos:line="9" pos:column="15"/></modifier></type><name pos:line="9" pos:column="15">cfg<pos:position pos:line="9" pos:column="18"/></name> <init pos:line="9" pos:column="19">= <expr><call><name pos:line="9" pos:column="21">ap_get_module_config<pos:position pos:line="9" pos:column="41"/></name><argument_list pos:line="9" pos:column="41">(<argument><expr><name><name pos:line="9" pos:column="42">r<pos:position pos:line="9" pos:column="43"/></name><operator pos:line="9" pos:column="43">-&gt;<pos:position pos:line="9" pos:column="48"/></operator><name pos:line="9" pos:column="45">server<pos:position pos:line="9" pos:column="51"/></name><operator pos:line="9" pos:column="51">-&gt;<pos:position pos:line="9" pos:column="56"/></operator><name pos:line="9" pos:column="53">module_config<pos:position pos:line="9" pos:column="66"/></name></name></expr></argument>,
                                         <argument><expr><operator pos:line="10" pos:column="42">&amp;<pos:position pos:line="10" pos:column="47"/></operator><name pos:line="10" pos:column="43">privileges_module<pos:position pos:line="10" pos:column="60"/></name></expr></argument>)<pos:position pos:line="10" pos:column="61"/></argument_list></call></expr></init></decl>;<pos:position pos:line="10" pos:column="62"/></decl_stmt>

    <decl_stmt><decl><type><name pos:line="12" pos:column="5">void<pos:position pos:line="12" pos:column="9"/></name> <modifier pos:line="12" pos:column="10">*<pos:position pos:line="12" pos:column="11"/></modifier></type><name pos:line="12" pos:column="11">breadcrumb<pos:position pos:line="12" pos:column="21"/></name> <init pos:line="12" pos:column="22">= <expr><call><name pos:line="12" pos:column="24">ap_get_module_config<pos:position pos:line="12" pos:column="44"/></name><argument_list pos:line="12" pos:column="44">(<argument><expr><name><name pos:line="12" pos:column="45">r<pos:position pos:line="12" pos:column="46"/></name><operator pos:line="12" pos:column="46">-&gt;<pos:position pos:line="12" pos:column="51"/></operator><name pos:line="12" pos:column="48">request_config<pos:position pos:line="12" pos:column="62"/></name></name></expr></argument>,
                                            <argument><expr><operator pos:line="13" pos:column="45">&amp;<pos:position pos:line="13" pos:column="50"/></operator><name pos:line="13" pos:column="46">privileges_module<pos:position pos:line="13" pos:column="63"/></name></expr></argument>)<pos:position pos:line="13" pos:column="64"/></argument_list></call></expr></init></decl>;<pos:position pos:line="13" pos:column="65"/></decl_stmt>

    <if pos:line="15" pos:column="5">if <condition pos:line="15" pos:column="8">(<expr><operator pos:line="15" pos:column="9">!<pos:position pos:line="15" pos:column="10"/></operator><name pos:line="15" pos:column="10">breadcrumb<pos:position pos:line="15" pos:column="20"/></name></expr>)<pos:position pos:line="15" pos:column="21"/></condition><then pos:line="15" pos:column="21"> <block pos:line="15" pos:column="22">{
        <comment type="block" pos:line="16" pos:column="9">/* first call: this is the vhost */</comment>
        <expr_stmt><expr><name pos:line="17" pos:column="9">fork_req<pos:position pos:line="17" pos:column="17"/></name> <operator pos:line="17" pos:column="18">=<pos:position pos:line="17" pos:column="19"/></operator> <operator pos:line="17" pos:column="20">(<pos:position pos:line="17" pos:column="21"/></operator><name><name pos:line="17" pos:column="21">cfg<pos:position pos:line="17" pos:column="24"/></name><operator pos:line="17" pos:column="24">-&gt;<pos:position pos:line="17" pos:column="29"/></operator><name pos:line="17" pos:column="26">mode<pos:position pos:line="17" pos:column="30"/></name></name> <operator pos:line="17" pos:column="31">==<pos:position pos:line="17" pos:column="33"/></operator> <name pos:line="17" pos:column="34">PRIV_SECURE<pos:position pos:line="17" pos:column="45"/></name><operator pos:line="17" pos:column="45">)<pos:position pos:line="17" pos:column="46"/></operator></expr>;<pos:position pos:line="17" pos:column="47"/></expr_stmt>

        <comment type="block" pos:line="19" pos:column="9">/* set breadcrumb */</comment>
        <expr_stmt><expr><call><name pos:line="20" pos:column="9">ap_set_module_config<pos:position pos:line="20" pos:column="29"/></name><argument_list pos:line="20" pos:column="29">(<argument><expr><name><name pos:line="20" pos:column="30">r<pos:position pos:line="20" pos:column="31"/></name><operator pos:line="20" pos:column="31">-&gt;<pos:position pos:line="20" pos:column="36"/></operator><name pos:line="20" pos:column="33">request_config<pos:position pos:line="20" pos:column="47"/></name></name></expr></argument>, <argument><expr><operator pos:line="20" pos:column="49">&amp;<pos:position pos:line="20" pos:column="54"/></operator><name pos:line="20" pos:column="50">privileges_module<pos:position pos:line="20" pos:column="67"/></name></expr></argument>, <argument><expr><operator pos:line="20" pos:column="69">&amp;<pos:position pos:line="20" pos:column="74"/></operator><name><name pos:line="20" pos:column="70">cfg<pos:position pos:line="20" pos:column="73"/></name><operator pos:line="20" pos:column="73">-&gt;<pos:position pos:line="20" pos:column="78"/></operator><name pos:line="20" pos:column="75">mode<pos:position pos:line="20" pos:column="79"/></name></name></expr></argument>)<pos:position pos:line="20" pos:column="80"/></argument_list></call></expr>;<pos:position pos:line="20" pos:column="81"/></expr_stmt>

        <comment type="block" pos:line="22" pos:column="9">/* If we have per-dir config, defer doing anything */</comment>
        <if pos:line="23" pos:column="9">if <condition pos:line="23" pos:column="12">(<expr><operator pos:line="23" pos:column="13">(<pos:position pos:line="23" pos:column="14"/></operator><name><name pos:line="23" pos:column="14">cfg<pos:position pos:line="23" pos:column="17"/></name><operator pos:line="23" pos:column="17">-&gt;<pos:position pos:line="23" pos:column="22"/></operator><name pos:line="23" pos:column="19">mode<pos:position pos:line="23" pos:column="23"/></name></name> <operator pos:line="23" pos:column="24">==<pos:position pos:line="23" pos:column="26"/></operator> <name pos:line="23" pos:column="27">PRIV_SELECTIVE<pos:position pos:line="23" pos:column="41"/></name><operator pos:line="23" pos:column="41">)<pos:position pos:line="23" pos:column="42"/></operator></expr>)<pos:position pos:line="23" pos:column="43"/></condition><then pos:line="23" pos:column="43"> <block pos:line="23" pos:column="44">{
            <comment type="block" pos:line="24" pos:column="13">/* Defer dropping privileges 'til we have a directory
             * context that'll tell us whether to fork.
             */</comment>
            <return pos:line="27" pos:column="13">return <expr><name pos:line="27" pos:column="20">DECLINED<pos:position pos:line="27" pos:column="28"/></name></expr>;<pos:position pos:line="27" pos:column="29"/></return>
        }<pos:position pos:line="28" pos:column="10"/></block></then></if>
    }<pos:position pos:line="29" pos:column="6"/></block></then>
    <else pos:line="30" pos:column="5">else <block pos:line="30" pos:column="10">{
        <comment type="block" pos:line="31" pos:column="9">/* second call is for per-directory. */</comment>
        <decl_stmt><decl><type><name pos:line="32" pos:column="9">priv_dir_cfg<pos:position pos:line="32" pos:column="21"/></name> <modifier pos:line="32" pos:column="22">*<pos:position pos:line="32" pos:column="23"/></modifier></type><name pos:line="32" pos:column="23">dcfg<pos:position pos:line="32" pos:column="27"/></name></decl>;<pos:position pos:line="32" pos:column="28"/></decl_stmt>
        <if pos:line="33" pos:column="9">if <condition pos:line="33" pos:column="12">(<expr><operator pos:line="33" pos:column="13">(<pos:position pos:line="33" pos:column="14"/></operator><name><name pos:line="33" pos:column="14">cfg<pos:position pos:line="33" pos:column="17"/></name><operator pos:line="33" pos:column="17">-&gt;<pos:position pos:line="33" pos:column="22"/></operator><name pos:line="33" pos:column="19">mode<pos:position pos:line="33" pos:column="23"/></name></name> <operator pos:line="33" pos:column="24">!=<pos:position pos:line="33" pos:column="26"/></operator> <name pos:line="33" pos:column="27">PRIV_SELECTIVE<pos:position pos:line="33" pos:column="41"/></name><operator pos:line="33" pos:column="41">)<pos:position pos:line="33" pos:column="42"/></operator></expr>)<pos:position pos:line="33" pos:column="43"/></condition><then pos:line="33" pos:column="43"> <block pos:line="33" pos:column="44">{
            <comment type="block" pos:line="34" pos:column="13">/* Our fate was already determined for the vhost -
             * nothing to do per-directory
             */</comment>
            <return pos:line="37" pos:column="13">return <expr><name pos:line="37" pos:column="20">DECLINED<pos:position pos:line="37" pos:column="28"/></name></expr>;<pos:position pos:line="37" pos:column="29"/></return>
        }<pos:position pos:line="38" pos:column="10"/></block></then></if>
        <expr_stmt><expr><name pos:line="39" pos:column="9">dcfg<pos:position pos:line="39" pos:column="13"/></name> <operator pos:line="39" pos:column="14">=<pos:position pos:line="39" pos:column="15"/></operator> <call><name pos:line="39" pos:column="16">ap_get_module_config<pos:position pos:line="39" pos:column="36"/></name><argument_list pos:line="39" pos:column="36">(<argument><expr><name><name pos:line="39" pos:column="37">r<pos:position pos:line="39" pos:column="38"/></name><operator pos:line="39" pos:column="38">-&gt;<pos:position pos:line="39" pos:column="43"/></operator><name pos:line="39" pos:column="40">per_dir_config<pos:position pos:line="39" pos:column="54"/></name></name></expr></argument>, <argument><expr><operator pos:line="39" pos:column="56">&amp;<pos:position pos:line="39" pos:column="61"/></operator><name pos:line="39" pos:column="57">privileges_module<pos:position pos:line="39" pos:column="74"/></name></expr></argument>)<pos:position pos:line="39" pos:column="75"/></argument_list></call></expr>;<pos:position pos:line="39" pos:column="76"/></expr_stmt>
        <expr_stmt><expr><name pos:line="40" pos:column="9">fork_req<pos:position pos:line="40" pos:column="17"/></name> <operator pos:line="40" pos:column="18">=<pos:position pos:line="40" pos:column="19"/></operator> <operator pos:line="40" pos:column="20">(<pos:position pos:line="40" pos:column="21"/></operator><name><name pos:line="40" pos:column="21">dcfg<pos:position pos:line="40" pos:column="25"/></name><operator pos:line="40" pos:column="25">-&gt;<pos:position pos:line="40" pos:column="30"/></operator><name pos:line="40" pos:column="27">mode<pos:position pos:line="40" pos:column="31"/></name></name> <operator pos:line="40" pos:column="32">==<pos:position pos:line="40" pos:column="34"/></operator> <name pos:line="40" pos:column="35">PRIV_SECURE<pos:position pos:line="40" pos:column="46"/></name><operator pos:line="40" pos:column="46">)<pos:position pos:line="40" pos:column="47"/></operator></expr>;<pos:position pos:line="40" pos:column="48"/></expr_stmt>
    }<pos:position pos:line="41" pos:column="6"/></block></else></if>

    <if pos:line="43" pos:column="5">if <condition pos:line="43" pos:column="8">(<expr><name pos:line="43" pos:column="9">fork_req<pos:position pos:line="43" pos:column="17"/></name></expr>)<pos:position pos:line="43" pos:column="18"/></condition><then pos:line="43" pos:column="18"> <block pos:line="43" pos:column="19">{
       <expr_stmt><expr><name pos:line="44" pos:column="8">rv<pos:position pos:line="44" pos:column="10"/></name> <operator pos:line="44" pos:column="11">=<pos:position pos:line="44" pos:column="12"/></operator> <call><name pos:line="44" pos:column="13">apr_proc_fork<pos:position pos:line="44" pos:column="26"/></name><argument_list pos:line="44" pos:column="26">(<argument><expr><operator pos:line="44" pos:column="27">&amp;<pos:position pos:line="44" pos:column="32"/></operator><name pos:line="44" pos:column="28">proc<pos:position pos:line="44" pos:column="32"/></name></expr></argument>, <argument><expr><name><name pos:line="44" pos:column="34">r<pos:position pos:line="44" pos:column="35"/></name><operator pos:line="44" pos:column="35">-&gt;<pos:position pos:line="44" pos:column="40"/></operator><name pos:line="44" pos:column="37">pool<pos:position pos:line="44" pos:column="41"/></name></name></expr></argument>)<pos:position pos:line="44" pos:column="42"/></argument_list></call></expr>;<pos:position pos:line="44" pos:column="43"/></expr_stmt>
        <switch pos:line="45" pos:column="9">switch <condition pos:line="45" pos:column="16">(<expr><name pos:line="45" pos:column="17">rv<pos:position pos:line="45" pos:column="19"/></name></expr>)<pos:position pos:line="45" pos:column="20"/></condition> <block pos:line="45" pos:column="21">{
        <case pos:line="46" pos:column="9">case <expr><name pos:line="46" pos:column="14">APR_INPARENT<pos:position pos:line="46" pos:column="26"/></name></expr>:<pos:position pos:line="46" pos:column="27"/></case>
            <expr_stmt><expr><call><name pos:line="47" pos:column="13">ap_log_rerror<pos:position pos:line="47" pos:column="26"/></name><argument_list pos:line="47" pos:column="26">(<argument><expr><name pos:line="47" pos:column="27">APLOG_MARK<pos:position pos:line="47" pos:column="37"/></name></expr></argument>, <argument><expr><name pos:line="47" pos:column="39">APLOG_DEBUG<pos:position pos:line="47" pos:column="50"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="47" pos:column="52">0<pos:position pos:line="47" pos:column="53"/></literal></expr></argument>, <argument><expr><name pos:line="47" pos:column="55">r<pos:position pos:line="47" pos:column="56"/></name></expr></argument>,
                          <argument><expr><literal type="string" pos:line="48" pos:column="27">"parent waiting for child"<pos:position pos:line="48" pos:column="53"/></literal></expr></argument>)<pos:position pos:line="48" pos:column="54"/></argument_list></call></expr>;<pos:position pos:line="48" pos:column="55"/></expr_stmt>
            <comment type="block" pos:line="49" pos:column="13">/* FIXME - does the child need to run synchronously?
             * esp. if we enable mod_privileges with threaded MPMs?
             * We do need at least to ensure r outlives the child.
             */</comment>
            <expr_stmt><expr><name pos:line="53" pos:column="13">rv<pos:position pos:line="53" pos:column="15"/></name> <operator pos:line="53" pos:column="16">=<pos:position pos:line="53" pos:column="17"/></operator> <call><name pos:line="53" pos:column="18">apr_proc_wait<pos:position pos:line="53" pos:column="31"/></name><argument_list pos:line="53" pos:column="31">(<argument><expr><operator pos:line="53" pos:column="32">&amp;<pos:position pos:line="53" pos:column="37"/></operator><name pos:line="53" pos:column="33">proc<pos:position pos:line="53" pos:column="37"/></name></expr></argument>, <argument><expr><operator pos:line="53" pos:column="39">&amp;<pos:position pos:line="53" pos:column="44"/></operator><name pos:line="53" pos:column="40">exitcode<pos:position pos:line="53" pos:column="48"/></name></expr></argument>, <argument><expr><operator pos:line="53" pos:column="50">&amp;<pos:position pos:line="53" pos:column="55"/></operator><name pos:line="53" pos:column="51">exitwhy<pos:position pos:line="53" pos:column="58"/></name></expr></argument>, <argument><expr><name pos:line="53" pos:column="60">APR_WAIT<pos:position pos:line="53" pos:column="68"/></name></expr></argument>)<pos:position pos:line="53" pos:column="69"/></argument_list></call></expr>;<pos:position pos:line="53" pos:column="70"/></expr_stmt>
            <expr_stmt><expr><call><name pos:line="54" pos:column="13">ap_log_rerror<pos:position pos:line="54" pos:column="26"/></name><argument_list pos:line="54" pos:column="26">(<argument><expr><name pos:line="54" pos:column="27">APLOG_MARK<pos:position pos:line="54" pos:column="37"/></name></expr></argument>, <argument><expr><name pos:line="54" pos:column="39">APLOG_DEBUG<pos:position pos:line="54" pos:column="50"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="54" pos:column="52">0<pos:position pos:line="54" pos:column="53"/></literal></expr></argument>, <argument><expr><name pos:line="54" pos:column="55">r<pos:position pos:line="54" pos:column="56"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="54" pos:column="58">"parent: child %s"<pos:position pos:line="54" pos:column="76"/></literal></expr></argument>,
                          <argument><expr><ternary><condition><expr><operator pos:line="55" pos:column="27">(<pos:position pos:line="55" pos:column="28"/></operator><name pos:line="55" pos:column="28">rv<pos:position pos:line="55" pos:column="30"/></name> <operator pos:line="55" pos:column="31">==<pos:position pos:line="55" pos:column="33"/></operator> <name pos:line="55" pos:column="34">APR_CHILD_DONE<pos:position pos:line="55" pos:column="48"/></name><operator pos:line="55" pos:column="48">)<pos:position pos:line="55" pos:column="49"/></operator></expr> ?<pos:position pos:line="55" pos:column="51"/></condition><then pos:line="55" pos:column="51"> <expr><literal type="string" pos:line="55" pos:column="52">"done"<pos:position pos:line="55" pos:column="58"/></literal></expr> <pos:position pos:line="55" pos:column="59"/></then><else pos:line="55" pos:column="59">: <expr><literal type="string" pos:line="55" pos:column="61">"notdone"<pos:position pos:line="55" pos:column="70"/></literal></expr></else></ternary></expr></argument>)<pos:position pos:line="55" pos:column="71"/></argument_list></call></expr>;<pos:position pos:line="55" pos:column="72"/></expr_stmt>

            <comment type="block" pos:line="57" pos:column="13">/* The child has taken responsibility for reading all input
             * and sending all output.  So we need to bow right out,
             * and even abandon "normal" housekeeping.
             */</comment>
            <expr_stmt><expr><name><name pos:line="61" pos:column="13">r<pos:position pos:line="61" pos:column="14"/></name><operator pos:line="61" pos:column="14">-&gt;<pos:position pos:line="61" pos:column="19"/></operator><name pos:line="61" pos:column="16">eos_sent<pos:position pos:line="61" pos:column="24"/></name></name> <operator pos:line="61" pos:column="25">=<pos:position pos:line="61" pos:column="26"/></operator> <literal type="number" pos:line="61" pos:column="27">1<pos:position pos:line="61" pos:column="28"/></literal></expr>;<pos:position pos:line="61" pos:column="29"/></expr_stmt>
            <expr_stmt><expr><call><name pos:line="62" pos:column="13">apr_table_unset<pos:position pos:line="62" pos:column="28"/></name><argument_list pos:line="62" pos:column="28">(<argument><expr><name><name pos:line="62" pos:column="29">r<pos:position pos:line="62" pos:column="30"/></name><operator pos:line="62" pos:column="30">-&gt;<pos:position pos:line="62" pos:column="35"/></operator><name pos:line="62" pos:column="32">headers_in<pos:position pos:line="62" pos:column="42"/></name></name></expr></argument>, <argument><expr><literal type="string" pos:line="62" pos:column="44">"Content-Type"<pos:position pos:line="62" pos:column="58"/></literal></expr></argument>)<pos:position pos:line="62" pos:column="59"/></argument_list></call></expr>;<pos:position pos:line="62" pos:column="60"/></expr_stmt>
            <expr_stmt><expr><call><name pos:line="63" pos:column="13">apr_table_unset<pos:position pos:line="63" pos:column="28"/></name><argument_list pos:line="63" pos:column="28">(<argument><expr><name><name pos:line="63" pos:column="29">r<pos:position pos:line="63" pos:column="30"/></name><operator pos:line="63" pos:column="30">-&gt;<pos:position pos:line="63" pos:column="35"/></operator><name pos:line="63" pos:column="32">headers_in<pos:position pos:line="63" pos:column="42"/></name></name></expr></argument>, <argument><expr><literal type="string" pos:line="63" pos:column="44">"Content-Length"<pos:position pos:line="63" pos:column="60"/></literal></expr></argument>)<pos:position pos:line="63" pos:column="61"/></argument_list></call></expr>;<pos:position pos:line="63" pos:column="62"/></expr_stmt>
            <comment type="block" pos:line="64" pos:column="13">/* Testing with ab and 100k requests reveals no nasties
             * so I infer we're not leaking anything like memory
             * or file descriptors.  That's nice!
             */</comment>
            <return pos:line="68" pos:column="13">return <expr><name pos:line="68" pos:column="20">DONE<pos:position pos:line="68" pos:column="24"/></name></expr>;<pos:position pos:line="68" pos:column="25"/></return>
        <case pos:line="69" pos:column="9">case <expr><name pos:line="69" pos:column="14">APR_INCHILD<pos:position pos:line="69" pos:column="25"/></name></expr>:<pos:position pos:line="69" pos:column="26"/></case>
            <expr_stmt><expr><call><name pos:line="70" pos:column="13">ap_log_rerror<pos:position pos:line="70" pos:column="26"/></name><argument_list pos:line="70" pos:column="26">(<argument><expr><name pos:line="70" pos:column="27">APLOG_MARK<pos:position pos:line="70" pos:column="37"/></name></expr></argument>, <argument><expr><name pos:line="70" pos:column="39">APLOG_DEBUG<pos:position pos:line="70" pos:column="50"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="70" pos:column="52">0<pos:position pos:line="70" pos:column="53"/></literal></expr></argument>, <argument><expr><name pos:line="70" pos:column="55">r<pos:position pos:line="70" pos:column="56"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="70" pos:column="58">"In child!"<pos:position pos:line="70" pos:column="69"/></literal></expr></argument>)<pos:position pos:line="70" pos:column="70"/></argument_list></call></expr>;<pos:position pos:line="70" pos:column="71"/></expr_stmt>
            <break pos:line="71" pos:column="13">break;<pos:position pos:line="71" pos:column="19"/></break>  <comment type="block" pos:line="71" pos:column="21">/* now we'll drop privileges in the child */</comment>
        <default pos:line="72" pos:column="9">default:<pos:position pos:line="72" pos:column="17"/></default>
            <expr_stmt><expr><call><name pos:line="73" pos:column="13">ap_log_rerror<pos:position pos:line="73" pos:column="26"/></name><argument_list pos:line="73" pos:column="26">(<argument><expr><name pos:line="73" pos:column="27">APLOG_MARK<pos:position pos:line="73" pos:column="37"/></name></expr></argument>, <argument><expr><name pos:line="73" pos:column="39">APLOG_ERR<pos:position pos:line="73" pos:column="48"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="73" pos:column="50">0<pos:position pos:line="73" pos:column="51"/></literal></expr></argument>, <argument><expr><name pos:line="73" pos:column="53">r<pos:position pos:line="73" pos:column="54"/></name></expr></argument>,
                          <argument><expr><literal type="string" pos:line="74" pos:column="27">"Failed to fork secure child process!"<pos:position pos:line="74" pos:column="65"/></literal></expr></argument>)<pos:position pos:line="74" pos:column="66"/></argument_list></call></expr>;<pos:position pos:line="74" pos:column="67"/></expr_stmt>
            <return pos:line="75" pos:column="13">return <expr><name pos:line="75" pos:column="20">HTTP_INTERNAL_SERVER_ERROR<pos:position pos:line="75" pos:column="46"/></name></expr>;<pos:position pos:line="75" pos:column="47"/></return>
        }<pos:position pos:line="76" pos:column="10"/></block></switch>
    }<pos:position pos:line="77" pos:column="6"/></block></then></if>

    <comment type="block" pos:line="79" pos:column="5">/* OK, now drop privileges. */</comment>

    <comment type="block" pos:line="81" pos:column="5">/* cleanup should happen even if something fails part-way through here */</comment>
    <expr_stmt><expr><call><name pos:line="82" pos:column="5">apr_pool_cleanup_register<pos:position pos:line="82" pos:column="30"/></name><argument_list pos:line="82" pos:column="30">(<argument><expr><name><name pos:line="82" pos:column="31">r<pos:position pos:line="82" pos:column="32"/></name><operator pos:line="82" pos:column="32">-&gt;<pos:position pos:line="82" pos:column="37"/></operator><name pos:line="82" pos:column="34">pool<pos:position pos:line="82" pos:column="38"/></name></name></expr></argument>, <argument><expr><name pos:line="82" pos:column="40">r<pos:position pos:line="82" pos:column="41"/></name></expr></argument>, <argument><expr><name pos:line="82" pos:column="43">privileges_end_req<pos:position pos:line="82" pos:column="61"/></name></expr></argument>,
                              <argument><expr><name pos:line="83" pos:column="31">apr_pool_cleanup_null<pos:position pos:line="83" pos:column="52"/></name></expr></argument>)<pos:position pos:line="83" pos:column="53"/></argument_list></call></expr>;<pos:position pos:line="83" pos:column="54"/></expr_stmt>
    <comment type="block" pos:line="84" pos:column="5">/* set user and group if configured */</comment>
    <if pos:line="85" pos:column="5">if <condition pos:line="85" pos:column="8">(<expr><name><name pos:line="85" pos:column="9">cfg<pos:position pos:line="85" pos:column="12"/></name><operator pos:line="85" pos:column="12">-&gt;<pos:position pos:line="85" pos:column="17"/></operator><name pos:line="85" pos:column="14">uid<pos:position pos:line="85" pos:column="17"/></name></name> <operator pos:line="85" pos:column="18">||<pos:position pos:line="85" pos:column="20"/></operator> <name><name pos:line="85" pos:column="21">cfg<pos:position pos:line="85" pos:column="24"/></name><operator pos:line="85" pos:column="24">-&gt;<pos:position pos:line="85" pos:column="29"/></operator><name pos:line="85" pos:column="26">gid<pos:position pos:line="85" pos:column="29"/></name></name></expr>)<pos:position pos:line="85" pos:column="30"/></condition><then pos:line="85" pos:column="30"> <block pos:line="85" pos:column="31">{
        <if pos:line="86" pos:column="9">if <condition pos:line="86" pos:column="12">(<expr><call><name pos:line="86" pos:column="13">setppriv<pos:position pos:line="86" pos:column="21"/></name><argument_list pos:line="86" pos:column="21">(<argument><expr><name pos:line="86" pos:column="22">PRIV_ON<pos:position pos:line="86" pos:column="29"/></name></expr></argument>, <argument><expr><name pos:line="86" pos:column="31">PRIV_EFFECTIVE<pos:position pos:line="86" pos:column="45"/></name></expr></argument>, <argument><expr><name pos:line="86" pos:column="47">priv_setid<pos:position pos:line="86" pos:column="57"/></name></expr></argument>)<pos:position pos:line="86" pos:column="58"/></argument_list></call> <operator pos:line="86" pos:column="59">==<pos:position pos:line="86" pos:column="61"/></operator> <operator pos:line="86" pos:column="62">-<pos:position pos:line="86" pos:column="63"/></operator><literal type="number" pos:line="86" pos:column="63">1<pos:position pos:line="86" pos:column="64"/></literal></expr>)<pos:position pos:line="86" pos:column="65"/></condition><then pos:line="86" pos:column="65"> <block pos:line="86" pos:column="66">{
            <expr_stmt><expr><call><name pos:line="87" pos:column="13">ap_log_rerror<pos:position pos:line="87" pos:column="26"/></name><argument_list pos:line="87" pos:column="26">(<argument><expr><name pos:line="87" pos:column="27">APLOG_MARK<pos:position pos:line="87" pos:column="37"/></name></expr></argument>, <argument><expr><name pos:line="87" pos:column="39">APLOG_ERR<pos:position pos:line="87" pos:column="48"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="87" pos:column="50">0<pos:position pos:line="87" pos:column="51"/></literal></expr></argument>, <argument><expr><name pos:line="87" pos:column="53">r<pos:position pos:line="87" pos:column="54"/></name></expr></argument>,
                          <argument><expr><literal type="string" pos:line="88" pos:column="27">"No privilege to set user/group"<pos:position pos:line="88" pos:column="59"/></literal></expr></argument>)<pos:position pos:line="88" pos:column="60"/></argument_list></call></expr>;<pos:position pos:line="88" pos:column="61"/></expr_stmt>
        }<pos:position pos:line="89" pos:column="10"/></block></then></if>
        <comment type="block" pos:line="90" pos:column="9">/* if we should be able to set these but can't, it could be
         * a serious security issue.  Bail out rather than risk it!
         */</comment>
        <if pos:line="93" pos:column="9">if <condition pos:line="93" pos:column="12">(<expr><name><name pos:line="93" pos:column="13">cfg<pos:position pos:line="93" pos:column="16"/></name><operator pos:line="93" pos:column="16">-&gt;<pos:position pos:line="93" pos:column="21"/></operator><name pos:line="93" pos:column="18">uid<pos:position pos:line="93" pos:column="21"/></name></name> <operator pos:line="93" pos:column="22">&amp;&amp;<pos:position pos:line="93" pos:column="32"/></operator> <operator pos:line="93" pos:column="25">(<pos:position pos:line="93" pos:column="26"/></operator><call><name pos:line="93" pos:column="26">setuid<pos:position pos:line="93" pos:column="32"/></name><argument_list pos:line="93" pos:column="32">(<argument><expr><name><name pos:line="93" pos:column="33">cfg<pos:position pos:line="93" pos:column="36"/></name><operator pos:line="93" pos:column="36">-&gt;<pos:position pos:line="93" pos:column="41"/></operator><name pos:line="93" pos:column="38">uid<pos:position pos:line="93" pos:column="41"/></name></name></expr></argument>)<pos:position pos:line="93" pos:column="42"/></argument_list></call> <operator pos:line="93" pos:column="43">==<pos:position pos:line="93" pos:column="45"/></operator> <operator pos:line="93" pos:column="46">-<pos:position pos:line="93" pos:column="47"/></operator><literal type="number" pos:line="93" pos:column="47">1<pos:position pos:line="93" pos:column="48"/></literal><operator pos:line="93" pos:column="48">)<pos:position pos:line="93" pos:column="49"/></operator></expr>)<pos:position pos:line="93" pos:column="50"/></condition><then pos:line="93" pos:column="50"> <block pos:line="93" pos:column="51">{
            <expr_stmt><expr><call><name pos:line="94" pos:column="13">ap_log_rerror<pos:position pos:line="94" pos:column="26"/></name><argument_list pos:line="94" pos:column="26">(<argument><expr><name pos:line="94" pos:column="27">APLOG_MARK<pos:position pos:line="94" pos:column="37"/></name></expr></argument>, <argument><expr><name pos:line="94" pos:column="39">APLOG_ERR<pos:position pos:line="94" pos:column="48"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="94" pos:column="50">0<pos:position pos:line="94" pos:column="51"/></literal></expr></argument>, <argument><expr><name pos:line="94" pos:column="53">r<pos:position pos:line="94" pos:column="54"/></name></expr></argument>,
                          <argument><expr><literal type="string" pos:line="95" pos:column="27">"Error setting userid"<pos:position pos:line="95" pos:column="49"/></literal></expr></argument>)<pos:position pos:line="95" pos:column="50"/></argument_list></call></expr>;<pos:position pos:line="95" pos:column="51"/></expr_stmt>
            <return pos:line="96" pos:column="13">return <expr><name pos:line="96" pos:column="20">HTTP_INTERNAL_SERVER_ERROR<pos:position pos:line="96" pos:column="46"/></name></expr>;<pos:position pos:line="96" pos:column="47"/></return>
        }<pos:position pos:line="97" pos:column="10"/></block></then></if>
        <if pos:line="98" pos:column="9">if <condition pos:line="98" pos:column="12">(<expr><name><name pos:line="98" pos:column="13">cfg<pos:position pos:line="98" pos:column="16"/></name><operator pos:line="98" pos:column="16">-&gt;<pos:position pos:line="98" pos:column="21"/></operator><name pos:line="98" pos:column="18">gid<pos:position pos:line="98" pos:column="21"/></name></name> <operator pos:line="98" pos:column="22">&amp;&amp;<pos:position pos:line="98" pos:column="32"/></operator> <operator pos:line="98" pos:column="25">(<pos:position pos:line="98" pos:column="26"/></operator><call><name pos:line="98" pos:column="26">setgid<pos:position pos:line="98" pos:column="32"/></name><argument_list pos:line="98" pos:column="32">(<argument><expr><name><name pos:line="98" pos:column="33">cfg<pos:position pos:line="98" pos:column="36"/></name><operator pos:line="98" pos:column="36">-&gt;<pos:position pos:line="98" pos:column="41"/></operator><name pos:line="98" pos:column="38">gid<pos:position pos:line="98" pos:column="41"/></name></name></expr></argument>)<pos:position pos:line="98" pos:column="42"/></argument_list></call> <operator pos:line="98" pos:column="43">==<pos:position pos:line="98" pos:column="45"/></operator> <operator pos:line="98" pos:column="46">-<pos:position pos:line="98" pos:column="47"/></operator><literal type="number" pos:line="98" pos:column="47">1<pos:position pos:line="98" pos:column="48"/></literal><operator pos:line="98" pos:column="48">)<pos:position pos:line="98" pos:column="49"/></operator></expr>)<pos:position pos:line="98" pos:column="50"/></condition><then pos:line="98" pos:column="50"> <block pos:line="98" pos:column="51">{
            <expr_stmt><expr><call><name pos:line="99" pos:column="13">ap_log_rerror<pos:position pos:line="99" pos:column="26"/></name><argument_list pos:line="99" pos:column="26">(<argument><expr><name pos:line="99" pos:column="27">APLOG_MARK<pos:position pos:line="99" pos:column="37"/></name></expr></argument>, <argument><expr><name pos:line="99" pos:column="39">APLOG_ERR<pos:position pos:line="99" pos:column="48"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="99" pos:column="50">0<pos:position pos:line="99" pos:column="51"/></literal></expr></argument>, <argument><expr><name pos:line="99" pos:column="53">r<pos:position pos:line="99" pos:column="54"/></name></expr></argument>,
                          <argument><expr><literal type="string" pos:line="100" pos:column="27">"Error setting group"<pos:position pos:line="100" pos:column="48"/></literal></expr></argument>)<pos:position pos:line="100" pos:column="49"/></argument_list></call></expr>;<pos:position pos:line="100" pos:column="50"/></expr_stmt>
            <return pos:line="101" pos:column="13">return <expr><name pos:line="101" pos:column="20">HTTP_INTERNAL_SERVER_ERROR<pos:position pos:line="101" pos:column="46"/></name></expr>;<pos:position pos:line="101" pos:column="47"/></return>
        }<pos:position pos:line="102" pos:column="10"/></block></then></if>
    }<pos:position pos:line="103" pos:column="6"/></block></then></if>
    <comment type="block" pos:line="104" pos:column="5">/* set vhost's privileges */</comment>
    <if pos:line="105" pos:column="5">if <condition pos:line="105" pos:column="8">(<expr><call><name pos:line="105" pos:column="9">setppriv<pos:position pos:line="105" pos:column="17"/></name><argument_list pos:line="105" pos:column="17">(<argument><expr><name pos:line="105" pos:column="18">PRIV_SET<pos:position pos:line="105" pos:column="26"/></name></expr></argument>, <argument><expr><name pos:line="105" pos:column="28">PRIV_EFFECTIVE<pos:position pos:line="105" pos:column="42"/></name></expr></argument>, <argument><expr><name><name pos:line="105" pos:column="44">cfg<pos:position pos:line="105" pos:column="47"/></name><operator pos:line="105" pos:column="47">-&gt;<pos:position pos:line="105" pos:column="52"/></operator><name pos:line="105" pos:column="49">priv<pos:position pos:line="105" pos:column="53"/></name></name></expr></argument>)<pos:position pos:line="105" pos:column="54"/></argument_list></call> <operator pos:line="105" pos:column="55">==<pos:position pos:line="105" pos:column="57"/></operator> <operator pos:line="105" pos:column="58">-<pos:position pos:line="105" pos:column="59"/></operator><literal type="number" pos:line="105" pos:column="59">1<pos:position pos:line="105" pos:column="60"/></literal></expr>)<pos:position pos:line="105" pos:column="61"/></condition><then pos:line="105" pos:column="61"> <block pos:line="105" pos:column="62">{
        <expr_stmt><expr><call><name pos:line="106" pos:column="9">ap_log_rerror<pos:position pos:line="106" pos:column="22"/></name><argument_list pos:line="106" pos:column="22">(<argument><expr><name pos:line="106" pos:column="23">APLOG_MARK<pos:position pos:line="106" pos:column="33"/></name></expr></argument>, <argument><expr><name pos:line="106" pos:column="35">APLOG_ERR<pos:position pos:line="106" pos:column="44"/></name></expr></argument>, <argument><expr><name pos:line="106" pos:column="46">errno<pos:position pos:line="106" pos:column="51"/></name></expr></argument>, <argument><expr><name pos:line="106" pos:column="53">r<pos:position pos:line="106" pos:column="54"/></name></expr></argument>,
                      <argument><expr><literal type="string" pos:line="107" pos:column="23">"Error setting effective privileges"<pos:position pos:line="107" pos:column="59"/></literal></expr></argument>)<pos:position pos:line="107" pos:column="60"/></argument_list></call></expr>;<pos:position pos:line="107" pos:column="61"/></expr_stmt>
        <return pos:line="108" pos:column="9">return <expr><name pos:line="108" pos:column="16">HTTP_INTERNAL_SERVER_ERROR<pos:position pos:line="108" pos:column="42"/></name></expr>;<pos:position pos:line="108" pos:column="43"/></return>
    }<pos:position pos:line="109" pos:column="6"/></block></then></if>

    <comment type="block" pos:line="111" pos:column="5">/* ... including those of any subprocesses */</comment>
    <if pos:line="112" pos:column="5">if <condition pos:line="112" pos:column="8">(<expr><call><name pos:line="112" pos:column="9">setppriv<pos:position pos:line="112" pos:column="17"/></name><argument_list pos:line="112" pos:column="17">(<argument><expr><name pos:line="112" pos:column="18">PRIV_SET<pos:position pos:line="112" pos:column="26"/></name></expr></argument>, <argument><expr><name pos:line="112" pos:column="28">PRIV_INHERITABLE<pos:position pos:line="112" pos:column="44"/></name></expr></argument>, <argument><expr><name><name pos:line="112" pos:column="46">cfg<pos:position pos:line="112" pos:column="49"/></name><operator pos:line="112" pos:column="49">-&gt;<pos:position pos:line="112" pos:column="54"/></operator><name pos:line="112" pos:column="51">child_priv<pos:position pos:line="112" pos:column="61"/></name></name></expr></argument>)<pos:position pos:line="112" pos:column="62"/></argument_list></call> <operator pos:line="112" pos:column="63">==<pos:position pos:line="112" pos:column="65"/></operator> <operator pos:line="112" pos:column="66">-<pos:position pos:line="112" pos:column="67"/></operator><literal type="number" pos:line="112" pos:column="67">1<pos:position pos:line="112" pos:column="68"/></literal></expr>)<pos:position pos:line="112" pos:column="69"/></condition><then pos:line="112" pos:column="69"> <block pos:line="112" pos:column="70">{
        <expr_stmt><expr><call><name pos:line="113" pos:column="9">ap_log_rerror<pos:position pos:line="113" pos:column="22"/></name><argument_list pos:line="113" pos:column="22">(<argument><expr><name pos:line="113" pos:column="23">APLOG_MARK<pos:position pos:line="113" pos:column="33"/></name></expr></argument>, <argument><expr><name pos:line="113" pos:column="35">APLOG_ERR<pos:position pos:line="113" pos:column="44"/></name></expr></argument>, <argument><expr><name pos:line="113" pos:column="46">errno<pos:position pos:line="113" pos:column="51"/></name></expr></argument>, <argument><expr><name pos:line="113" pos:column="53">r<pos:position pos:line="113" pos:column="54"/></name></expr></argument>,
                      <argument><expr><literal type="string" pos:line="114" pos:column="23">"Error setting inheritable privileges"<pos:position pos:line="114" pos:column="61"/></literal></expr></argument>)<pos:position pos:line="114" pos:column="62"/></argument_list></call></expr>;<pos:position pos:line="114" pos:column="63"/></expr_stmt>
        <return pos:line="115" pos:column="9">return <expr><name pos:line="115" pos:column="16">HTTP_INTERNAL_SERVER_ERROR<pos:position pos:line="115" pos:column="42"/></name></expr>;<pos:position pos:line="115" pos:column="43"/></return>
    }<pos:position pos:line="116" pos:column="6"/></block></then></if>
    <if pos:line="117" pos:column="5">if <condition pos:line="117" pos:column="8">(<expr><call><name pos:line="117" pos:column="9">setppriv<pos:position pos:line="117" pos:column="17"/></name><argument_list pos:line="117" pos:column="17">(<argument><expr><name pos:line="117" pos:column="18">PRIV_SET<pos:position pos:line="117" pos:column="26"/></name></expr></argument>, <argument><expr><name pos:line="117" pos:column="28">PRIV_LIMIT<pos:position pos:line="117" pos:column="38"/></name></expr></argument>, <argument><expr><name><name pos:line="117" pos:column="40">cfg<pos:position pos:line="117" pos:column="43"/></name><operator pos:line="117" pos:column="43">-&gt;<pos:position pos:line="117" pos:column="48"/></operator><name pos:line="117" pos:column="45">child_priv<pos:position pos:line="117" pos:column="55"/></name></name></expr></argument>)<pos:position pos:line="117" pos:column="56"/></argument_list></call> <operator pos:line="117" pos:column="57">==<pos:position pos:line="117" pos:column="59"/></operator> <operator pos:line="117" pos:column="60">-<pos:position pos:line="117" pos:column="61"/></operator><literal type="number" pos:line="117" pos:column="61">1<pos:position pos:line="117" pos:column="62"/></literal></expr>)<pos:position pos:line="117" pos:column="63"/></condition><then pos:line="117" pos:column="63"> <block pos:line="117" pos:column="64">{
        <expr_stmt><expr><call><name pos:line="118" pos:column="9">ap_log_rerror<pos:position pos:line="118" pos:column="22"/></name><argument_list pos:line="118" pos:column="22">(<argument><expr><name pos:line="118" pos:column="23">APLOG_MARK<pos:position pos:line="118" pos:column="33"/></name></expr></argument>, <argument><expr><name pos:line="118" pos:column="35">APLOG_ERR<pos:position pos:line="118" pos:column="44"/></name></expr></argument>, <argument><expr><name pos:line="118" pos:column="46">errno<pos:position pos:line="118" pos:column="51"/></name></expr></argument>, <argument><expr><name pos:line="118" pos:column="53">r<pos:position pos:line="118" pos:column="54"/></name></expr></argument>,
                      <argument><expr><literal type="string" pos:line="119" pos:column="23">"Error setting limit privileges"<pos:position pos:line="119" pos:column="55"/></literal></expr></argument>)<pos:position pos:line="119" pos:column="56"/></argument_list></call></expr>;<pos:position pos:line="119" pos:column="57"/></expr_stmt>
        <return pos:line="120" pos:column="9">return <expr><name pos:line="120" pos:column="16">HTTP_INTERNAL_SERVER_ERROR<pos:position pos:line="120" pos:column="42"/></name></expr>;<pos:position pos:line="120" pos:column="43"/></return>
    }<pos:position pos:line="121" pos:column="6"/></block></then></if>

    <comment type="block" pos:line="123" pos:column="5">/* If we're in a child process, drop down PPERM too */</comment>
    <if pos:line="124" pos:column="5">if <condition pos:line="124" pos:column="8">(<expr><name pos:line="124" pos:column="9">fork_req<pos:position pos:line="124" pos:column="17"/></name></expr>)<pos:position pos:line="124" pos:column="18"/></condition><then pos:line="124" pos:column="18"> <block pos:line="124" pos:column="19">{
        <if pos:line="125" pos:column="9">if <condition pos:line="125" pos:column="12">(<expr><call><name pos:line="125" pos:column="13">setppriv<pos:position pos:line="125" pos:column="21"/></name><argument_list pos:line="125" pos:column="21">(<argument><expr><name pos:line="125" pos:column="22">PRIV_SET<pos:position pos:line="125" pos:column="30"/></name></expr></argument>, <argument><expr><name pos:line="125" pos:column="32">PRIV_PERMITTED<pos:position pos:line="125" pos:column="46"/></name></expr></argument>, <argument><expr><name><name pos:line="125" pos:column="48">cfg<pos:position pos:line="125" pos:column="51"/></name><operator pos:line="125" pos:column="51">-&gt;<pos:position pos:line="125" pos:column="56"/></operator><name pos:line="125" pos:column="53">priv<pos:position pos:line="125" pos:column="57"/></name></name></expr></argument>)<pos:position pos:line="125" pos:column="58"/></argument_list></call> <operator pos:line="125" pos:column="59">==<pos:position pos:line="125" pos:column="61"/></operator> <operator pos:line="125" pos:column="62">-<pos:position pos:line="125" pos:column="63"/></operator><literal type="number" pos:line="125" pos:column="63">1<pos:position pos:line="125" pos:column="64"/></literal></expr>)<pos:position pos:line="125" pos:column="65"/></condition><then pos:line="125" pos:column="65"> <block pos:line="125" pos:column="66">{
            <expr_stmt><expr><call><name pos:line="126" pos:column="13">ap_log_rerror<pos:position pos:line="126" pos:column="26"/></name><argument_list pos:line="126" pos:column="26">(<argument><expr><name pos:line="126" pos:column="27">APLOG_MARK<pos:position pos:line="126" pos:column="37"/></name></expr></argument>, <argument><expr><name pos:line="126" pos:column="39">APLOG_ERR<pos:position pos:line="126" pos:column="48"/></name></expr></argument>, <argument><expr><name pos:line="126" pos:column="50">errno<pos:position pos:line="126" pos:column="55"/></name></expr></argument>, <argument><expr><name pos:line="126" pos:column="57">r<pos:position pos:line="126" pos:column="58"/></name></expr></argument>,
                          <argument><expr><literal type="string" pos:line="127" pos:column="27">"Error setting permitted privileges"<pos:position pos:line="127" pos:column="63"/></literal></expr></argument>)<pos:position pos:line="127" pos:column="64"/></argument_list></call></expr>;<pos:position pos:line="127" pos:column="65"/></expr_stmt>
            <return pos:line="128" pos:column="13">return <expr><name pos:line="128" pos:column="20">HTTP_INTERNAL_SERVER_ERROR<pos:position pos:line="128" pos:column="46"/></name></expr>;<pos:position pos:line="128" pos:column="47"/></return>
        }<pos:position pos:line="129" pos:column="10"/></block></then></if>
    }<pos:position pos:line="130" pos:column="6"/></block></then></if>

    <return pos:line="132" pos:column="5">return <expr><name pos:line="132" pos:column="12">OK<pos:position pos:line="132" pos:column="14"/></name></expr>;<pos:position pos:line="132" pos:column="15"/></return>
}<pos:position pos:line="133" pos:column="2"/></block></function></unit>

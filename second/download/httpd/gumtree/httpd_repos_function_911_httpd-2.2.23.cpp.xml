<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/httpd/gumtree/httpd_repos_function_911_httpd-2.2.23.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">void<pos:position pos:line="1" pos:column="5"/></name><modifier pos:line="1" pos:column="5">*<pos:position pos:line="1" pos:column="6"/></modifier></type> <name pos:line="1" pos:column="7">cache_hash_set<pos:position pos:line="1" pos:column="21"/></name><parameter_list pos:line="1" pos:column="21">(<parameter><decl><type><name pos:line="1" pos:column="22">cache_hash_t<pos:position pos:line="1" pos:column="34"/></name> <modifier pos:line="1" pos:column="35">*<pos:position pos:line="1" pos:column="36"/></modifier></type><name pos:line="1" pos:column="36">ht<pos:position pos:line="1" pos:column="38"/></name></decl></parameter>,
                                     <parameter><decl><type><specifier pos:line="2" pos:column="38">const<pos:position pos:line="2" pos:column="43"/></specifier> <name pos:line="2" pos:column="44">void<pos:position pos:line="2" pos:column="48"/></name> <modifier pos:line="2" pos:column="49">*<pos:position pos:line="2" pos:column="50"/></modifier></type><name pos:line="2" pos:column="50">key<pos:position pos:line="2" pos:column="53"/></name></decl></parameter>,
                                     <parameter><decl><type><name pos:line="3" pos:column="38">apr_ssize_t<pos:position pos:line="3" pos:column="49"/></name></type> <name pos:line="3" pos:column="50">klen<pos:position pos:line="3" pos:column="54"/></name></decl></parameter>,
                                     <parameter><decl><type><specifier pos:line="4" pos:column="38">const<pos:position pos:line="4" pos:column="43"/></specifier> <name pos:line="4" pos:column="44">void<pos:position pos:line="4" pos:column="48"/></name> <modifier pos:line="4" pos:column="49">*<pos:position pos:line="4" pos:column="50"/></modifier></type><name pos:line="4" pos:column="50">val<pos:position pos:line="4" pos:column="53"/></name></decl></parameter>)<pos:position pos:line="4" pos:column="54"/></parameter_list>
<block pos:line="5" pos:column="1">{
    <decl_stmt><decl><type><name pos:line="6" pos:column="5">cache_hash_entry_t<pos:position pos:line="6" pos:column="23"/></name> <modifier pos:line="6" pos:column="24">*<pos:position pos:line="6" pos:column="25"/></modifier><modifier pos:line="6" pos:column="25">*<pos:position pos:line="6" pos:column="26"/></modifier></type><name pos:line="6" pos:column="26">hep<pos:position pos:line="6" pos:column="29"/></name></decl>, <modifier pos:line="6" pos:column="31">*<pos:position pos:line="6" pos:column="32"/></modifier><decl><type ref="prev"/><name pos:line="6" pos:column="32">tmp<pos:position pos:line="6" pos:column="35"/></name></decl>;<pos:position pos:line="6" pos:column="36"/></decl_stmt>
    <decl_stmt><decl><type><specifier pos:line="7" pos:column="5">const<pos:position pos:line="7" pos:column="10"/></specifier> <name pos:line="7" pos:column="11">void<pos:position pos:line="7" pos:column="15"/></name> <modifier pos:line="7" pos:column="16">*<pos:position pos:line="7" pos:column="17"/></modifier></type><name pos:line="7" pos:column="17">tval<pos:position pos:line="7" pos:column="21"/></name></decl>;<pos:position pos:line="7" pos:column="22"/></decl_stmt>
    <expr_stmt><expr><name pos:line="8" pos:column="5">hep<pos:position pos:line="8" pos:column="8"/></name> <operator pos:line="8" pos:column="9">=<pos:position pos:line="8" pos:column="10"/></operator> <call><name pos:line="8" pos:column="11">find_entry<pos:position pos:line="8" pos:column="21"/></name><argument_list pos:line="8" pos:column="21">(<argument><expr><name pos:line="8" pos:column="22">ht<pos:position pos:line="8" pos:column="24"/></name></expr></argument>, <argument><expr><name pos:line="8" pos:column="26">key<pos:position pos:line="8" pos:column="29"/></name></expr></argument>, <argument><expr><name pos:line="8" pos:column="31">klen<pos:position pos:line="8" pos:column="35"/></name></expr></argument>, <argument><expr><name pos:line="8" pos:column="37">val<pos:position pos:line="8" pos:column="40"/></name></expr></argument>)<pos:position pos:line="8" pos:column="41"/></argument_list></call></expr>;<pos:position pos:line="8" pos:column="42"/></expr_stmt>
    <comment type="block" pos:line="9" pos:column="5">/* If hep == NULL, then the malloc() in find_entry failed */</comment>
    <if pos:line="10" pos:column="5">if <condition pos:line="10" pos:column="8">(<expr><name pos:line="10" pos:column="9">hep<pos:position pos:line="10" pos:column="12"/></name> <operator pos:line="10" pos:column="13">&amp;&amp;<pos:position pos:line="10" pos:column="23"/></operator> <operator pos:line="10" pos:column="16">*<pos:position pos:line="10" pos:column="17"/></operator><name pos:line="10" pos:column="17">hep<pos:position pos:line="10" pos:column="20"/></name></expr>)<pos:position pos:line="10" pos:column="21"/></condition><then pos:line="10" pos:column="21"> <block pos:line="10" pos:column="22">{
        <if pos:line="11" pos:column="9">if <condition pos:line="11" pos:column="12">(<expr><operator pos:line="11" pos:column="13">!<pos:position pos:line="11" pos:column="14"/></operator><name pos:line="11" pos:column="14">val<pos:position pos:line="11" pos:column="17"/></name></expr>)<pos:position pos:line="11" pos:column="18"/></condition><then pos:line="11" pos:column="18"> <block pos:line="11" pos:column="19">{
            <comment type="block" pos:line="12" pos:column="13">/* delete entry */</comment>
            <expr_stmt><expr><name pos:line="13" pos:column="13">tval<pos:position pos:line="13" pos:column="17"/></name> <operator pos:line="13" pos:column="18">=<pos:position pos:line="13" pos:column="19"/></operator> <name><operator pos:line="13" pos:column="20">(<pos:position pos:line="13" pos:column="21"/></operator><operator pos:line="13" pos:column="21">*<pos:position pos:line="13" pos:column="22"/></operator><name pos:line="13" pos:column="22">hep<pos:position pos:line="13" pos:column="25"/></name><operator pos:line="13" pos:column="25">)<pos:position pos:line="13" pos:column="26"/></operator><operator pos:line="13" pos:column="26">-&gt;<pos:position pos:line="13" pos:column="31"/></operator><name pos:line="13" pos:column="28">val<pos:position pos:line="13" pos:column="31"/></name></name></expr>;<pos:position pos:line="13" pos:column="32"/></expr_stmt>
            <expr_stmt><expr><name pos:line="14" pos:column="13">tmp<pos:position pos:line="14" pos:column="16"/></name> <operator pos:line="14" pos:column="17">=<pos:position pos:line="14" pos:column="18"/></operator> <operator pos:line="14" pos:column="19">*<pos:position pos:line="14" pos:column="20"/></operator><name pos:line="14" pos:column="20">hep<pos:position pos:line="14" pos:column="23"/></name></expr>;<pos:position pos:line="14" pos:column="24"/></expr_stmt>
            <expr_stmt><expr><operator pos:line="15" pos:column="13">*<pos:position pos:line="15" pos:column="14"/></operator><name pos:line="15" pos:column="14">hep<pos:position pos:line="15" pos:column="17"/></name> <operator pos:line="15" pos:column="18">=<pos:position pos:line="15" pos:column="19"/></operator> <name><operator pos:line="15" pos:column="20">(<pos:position pos:line="15" pos:column="21"/></operator><operator pos:line="15" pos:column="21">*<pos:position pos:line="15" pos:column="22"/></operator><name pos:line="15" pos:column="22">hep<pos:position pos:line="15" pos:column="25"/></name><operator pos:line="15" pos:column="25">)<pos:position pos:line="15" pos:column="26"/></operator><operator pos:line="15" pos:column="26">-&gt;<pos:position pos:line="15" pos:column="31"/></operator><name pos:line="15" pos:column="28">next<pos:position pos:line="15" pos:column="32"/></name></name></expr>;<pos:position pos:line="15" pos:column="33"/></expr_stmt>
            <expr_stmt><expr><call><name pos:line="16" pos:column="13">free<pos:position pos:line="16" pos:column="17"/></name><argument_list pos:line="16" pos:column="17">(<argument><expr><name pos:line="16" pos:column="18">tmp<pos:position pos:line="16" pos:column="21"/></name></expr></argument>)<pos:position pos:line="16" pos:column="22"/></argument_list></call></expr>;<pos:position pos:line="16" pos:column="23"/></expr_stmt>
            <expr_stmt><expr><operator pos:line="17" pos:column="13">--<pos:position pos:line="17" pos:column="15"/></operator><name><name pos:line="17" pos:column="15">ht<pos:position pos:line="17" pos:column="17"/></name><operator pos:line="17" pos:column="17">-&gt;<pos:position pos:line="17" pos:column="22"/></operator><name pos:line="17" pos:column="19">count<pos:position pos:line="17" pos:column="24"/></name></name></expr>;<pos:position pos:line="17" pos:column="25"/></expr_stmt>
        }<pos:position pos:line="18" pos:column="10"/></block></then>
        <else pos:line="19" pos:column="9">else <block pos:line="19" pos:column="14">{
            <comment type="block" pos:line="20" pos:column="13">/* replace entry */</comment>
            <expr_stmt><expr><name pos:line="21" pos:column="13">tval<pos:position pos:line="21" pos:column="17"/></name> <operator pos:line="21" pos:column="18">=<pos:position pos:line="21" pos:column="19"/></operator> <name><operator pos:line="21" pos:column="20">(<pos:position pos:line="21" pos:column="21"/></operator><operator pos:line="21" pos:column="21">*<pos:position pos:line="21" pos:column="22"/></operator><name pos:line="21" pos:column="22">hep<pos:position pos:line="21" pos:column="25"/></name><operator pos:line="21" pos:column="25">)<pos:position pos:line="21" pos:column="26"/></operator><operator pos:line="21" pos:column="26">-&gt;<pos:position pos:line="21" pos:column="31"/></operator><name pos:line="21" pos:column="28">val<pos:position pos:line="21" pos:column="31"/></name></name></expr>;<pos:position pos:line="21" pos:column="32"/></expr_stmt>
            <expr_stmt><expr><name><operator pos:line="22" pos:column="13">(<pos:position pos:line="22" pos:column="14"/></operator><operator pos:line="22" pos:column="14">*<pos:position pos:line="22" pos:column="15"/></operator><name pos:line="22" pos:column="15">hep<pos:position pos:line="22" pos:column="18"/></name><operator pos:line="22" pos:column="18">)<pos:position pos:line="22" pos:column="19"/></operator><operator pos:line="22" pos:column="19">-&gt;<pos:position pos:line="22" pos:column="24"/></operator><name pos:line="22" pos:column="21">val<pos:position pos:line="22" pos:column="24"/></name></name> <operator pos:line="22" pos:column="25">=<pos:position pos:line="22" pos:column="26"/></operator> <name pos:line="22" pos:column="27">val<pos:position pos:line="22" pos:column="30"/></name></expr>;<pos:position pos:line="22" pos:column="31"/></expr_stmt>
        }<pos:position pos:line="23" pos:column="10"/></block></else></if>
        <comment type="block" pos:line="24" pos:column="9">/* Return the object just removed from the cache to let the
         * caller clean it up. Cast the constness away upon return.
         */</comment>
        <return pos:line="27" pos:column="9">return <expr><operator pos:line="27" pos:column="16">(<pos:position pos:line="27" pos:column="17"/></operator><name pos:line="27" pos:column="17">void<pos:position pos:line="27" pos:column="21"/></name> <operator pos:line="27" pos:column="22">*<pos:position pos:line="27" pos:column="23"/></operator><operator pos:line="27" pos:column="23">)<pos:position pos:line="27" pos:column="24"/></operator> <name pos:line="27" pos:column="25">tval<pos:position pos:line="27" pos:column="29"/></name></expr>;<pos:position pos:line="27" pos:column="30"/></return>
    }<pos:position pos:line="28" pos:column="6"/></block></then></if>
    <comment type="block" pos:line="29" pos:column="5">/* else key not present and val==NULL */</comment>
    <return pos:line="30" pos:column="5">return <expr><name pos:line="30" pos:column="12">NULL<pos:position pos:line="30" pos:column="16"/></name></expr>;<pos:position pos:line="30" pos:column="17"/></return>
}<pos:position pos:line="31" pos:column="2"/></block></function></unit>

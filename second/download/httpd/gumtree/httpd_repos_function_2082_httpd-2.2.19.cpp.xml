<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/httpd/gumtree/httpd_repos_function_2082_httpd-2.2.19.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">apr_status_t<pos:position pos:line="1" pos:column="20"/></name></type> <name pos:line="1" pos:column="21">ap_unix_create_privileged_process<pos:position pos:line="1" pos:column="54"/></name><parameter_list pos:line="1" pos:column="54">(
                              <parameter><decl><type><name pos:line="2" pos:column="31">apr_proc_t<pos:position pos:line="2" pos:column="41"/></name> <modifier pos:line="2" pos:column="42">*<pos:position pos:line="2" pos:column="43"/></modifier></type><name pos:line="2" pos:column="43">newproc<pos:position pos:line="2" pos:column="50"/></name></decl></parameter>, <parameter><decl><type><specifier pos:line="2" pos:column="52">const<pos:position pos:line="2" pos:column="57"/></specifier> <name pos:line="2" pos:column="58">char<pos:position pos:line="2" pos:column="62"/></name> <modifier pos:line="2" pos:column="63">*<pos:position pos:line="2" pos:column="64"/></modifier></type><name pos:line="2" pos:column="64">progname<pos:position pos:line="2" pos:column="72"/></name></decl></parameter>,
                              <parameter><decl><type><specifier pos:line="3" pos:column="31">const<pos:position pos:line="3" pos:column="36"/></specifier> <name pos:line="3" pos:column="37">char<pos:position pos:line="3" pos:column="41"/></name> <modifier pos:line="3" pos:column="42">*<pos:position pos:line="3" pos:column="43"/></modifier> <specifier pos:line="3" pos:column="44">const<pos:position pos:line="3" pos:column="49"/></specifier> <modifier pos:line="3" pos:column="50">*<pos:position pos:line="3" pos:column="51"/></modifier></type><name pos:line="3" pos:column="51">args<pos:position pos:line="3" pos:column="55"/></name></decl></parameter>,
                              <parameter><decl><type><specifier pos:line="4" pos:column="31">const<pos:position pos:line="4" pos:column="36"/></specifier> <name pos:line="4" pos:column="37">char<pos:position pos:line="4" pos:column="41"/></name> <modifier pos:line="4" pos:column="42">*<pos:position pos:line="4" pos:column="43"/></modifier> <specifier pos:line="4" pos:column="44">const<pos:position pos:line="4" pos:column="49"/></specifier> <modifier pos:line="4" pos:column="50">*<pos:position pos:line="4" pos:column="51"/></modifier></type><name pos:line="4" pos:column="51">env<pos:position pos:line="4" pos:column="54"/></name></decl></parameter>,
                              <parameter><decl><type><name pos:line="5" pos:column="31">apr_procattr_t<pos:position pos:line="5" pos:column="45"/></name> <modifier pos:line="5" pos:column="46">*<pos:position pos:line="5" pos:column="47"/></modifier></type><name pos:line="5" pos:column="47">attr<pos:position pos:line="5" pos:column="51"/></name></decl></parameter>, <parameter><decl><type><name pos:line="5" pos:column="53">ap_unix_identity_t<pos:position pos:line="5" pos:column="71"/></name> <modifier pos:line="5" pos:column="72">*<pos:position pos:line="5" pos:column="73"/></modifier></type><name pos:line="5" pos:column="73">ugid<pos:position pos:line="5" pos:column="77"/></name></decl></parameter>,
                              <parameter><decl><type><name pos:line="6" pos:column="31">apr_pool_t<pos:position pos:line="6" pos:column="41"/></name> <modifier pos:line="6" pos:column="42">*<pos:position pos:line="6" pos:column="43"/></modifier></type><name pos:line="6" pos:column="43">p<pos:position pos:line="6" pos:column="44"/></name></decl></parameter>)<pos:position pos:line="6" pos:column="45"/></parameter_list>
<block pos:line="7" pos:column="1">{
    <decl_stmt><decl><type><name pos:line="8" pos:column="5">int<pos:position pos:line="8" pos:column="8"/></name></type> <name pos:line="8" pos:column="9">i<pos:position pos:line="8" pos:column="10"/></name> <init pos:line="8" pos:column="11">= <expr><literal type="number" pos:line="8" pos:column="13">0<pos:position pos:line="8" pos:column="14"/></literal></expr></init></decl>;<pos:position pos:line="8" pos:column="15"/></decl_stmt>
    <decl_stmt><decl><type><specifier pos:line="9" pos:column="5">const<pos:position pos:line="9" pos:column="10"/></specifier> <name pos:line="9" pos:column="11">char<pos:position pos:line="9" pos:column="15"/></name> <modifier pos:line="9" pos:column="16">*<pos:position pos:line="9" pos:column="17"/></modifier><modifier pos:line="9" pos:column="17">*<pos:position pos:line="9" pos:column="18"/></modifier></type><name pos:line="9" pos:column="18">newargs<pos:position pos:line="9" pos:column="25"/></name></decl>;<pos:position pos:line="9" pos:column="26"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="10" pos:column="5">char<pos:position pos:line="10" pos:column="9"/></name> <modifier pos:line="10" pos:column="10">*<pos:position pos:line="10" pos:column="11"/></modifier></type><name pos:line="10" pos:column="11">newprogname<pos:position pos:line="10" pos:column="22"/></name></decl>;<pos:position pos:line="10" pos:column="23"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="11" pos:column="5">char<pos:position pos:line="11" pos:column="9"/></name> <modifier pos:line="11" pos:column="10">*<pos:position pos:line="11" pos:column="11"/></modifier></type><name pos:line="11" pos:column="11">execuser<pos:position pos:line="11" pos:column="19"/></name></decl>, <modifier pos:line="11" pos:column="21">*<pos:position pos:line="11" pos:column="22"/></modifier><decl><type ref="prev"/><name pos:line="11" pos:column="22">execgroup<pos:position pos:line="11" pos:column="31"/></name></decl>;<pos:position pos:line="11" pos:column="32"/></decl_stmt>
    <decl_stmt><decl><type><specifier pos:line="12" pos:column="5">const<pos:position pos:line="12" pos:column="10"/></specifier> <name pos:line="12" pos:column="11">char<pos:position pos:line="12" pos:column="15"/></name> <modifier pos:line="12" pos:column="16">*<pos:position pos:line="12" pos:column="17"/></modifier></type><name pos:line="12" pos:column="17">argv0<pos:position pos:line="12" pos:column="22"/></name></decl>;<pos:position pos:line="12" pos:column="23"/></decl_stmt>

    <if pos:line="14" pos:column="5">if <condition pos:line="14" pos:column="8">(<expr><operator pos:line="14" pos:column="9">!<pos:position pos:line="14" pos:column="10"/></operator><name><name pos:line="14" pos:column="10">unixd_config<pos:position pos:line="14" pos:column="22"/></name><operator pos:line="14" pos:column="22">.<pos:position pos:line="14" pos:column="23"/></operator><name pos:line="14" pos:column="23">suexec_enabled<pos:position pos:line="14" pos:column="37"/></name></name></expr>)<pos:position pos:line="14" pos:column="38"/></condition><then pos:line="14" pos:column="38"> <block pos:line="14" pos:column="39">{
        <return pos:line="15" pos:column="9">return <expr><call><name pos:line="15" pos:column="16">apr_proc_create<pos:position pos:line="15" pos:column="31"/></name><argument_list pos:line="15" pos:column="31">(<argument><expr><name pos:line="15" pos:column="32">newproc<pos:position pos:line="15" pos:column="39"/></name></expr></argument>, <argument><expr><name pos:line="15" pos:column="41">progname<pos:position pos:line="15" pos:column="49"/></name></expr></argument>, <argument><expr><name pos:line="15" pos:column="51">args<pos:position pos:line="15" pos:column="55"/></name></expr></argument>, <argument><expr><name pos:line="15" pos:column="57">env<pos:position pos:line="15" pos:column="60"/></name></expr></argument>, <argument><expr><name pos:line="15" pos:column="62">attr<pos:position pos:line="15" pos:column="66"/></name></expr></argument>, <argument><expr><name pos:line="15" pos:column="68">p<pos:position pos:line="15" pos:column="69"/></name></expr></argument>)<pos:position pos:line="15" pos:column="70"/></argument_list></call></expr>;<pos:position pos:line="15" pos:column="71"/></return>
    }<pos:position pos:line="16" pos:column="6"/></block></then></if>

    <expr_stmt><expr><name pos:line="18" pos:column="5">argv0<pos:position pos:line="18" pos:column="10"/></name> <operator pos:line="18" pos:column="11">=<pos:position pos:line="18" pos:column="12"/></operator> <call><name pos:line="18" pos:column="13">ap_strrchr_c<pos:position pos:line="18" pos:column="25"/></name><argument_list pos:line="18" pos:column="25">(<argument><expr><name pos:line="18" pos:column="26">progname<pos:position pos:line="18" pos:column="34"/></name></expr></argument>, <argument><expr><literal type="char" pos:line="18" pos:column="36">'/'<pos:position pos:line="18" pos:column="39"/></literal></expr></argument>)<pos:position pos:line="18" pos:column="40"/></argument_list></call></expr>;<pos:position pos:line="18" pos:column="41"/></expr_stmt>
    <comment type="block" pos:line="19" pos:column="5">/* Allow suexec's "/" check to succeed */</comment>
    <if pos:line="20" pos:column="5">if <condition pos:line="20" pos:column="8">(<expr><name pos:line="20" pos:column="9">argv0<pos:position pos:line="20" pos:column="14"/></name> <operator pos:line="20" pos:column="15">!=<pos:position pos:line="20" pos:column="17"/></operator> <name pos:line="20" pos:column="18">NULL<pos:position pos:line="20" pos:column="22"/></name></expr>)<pos:position pos:line="20" pos:column="23"/></condition><then pos:line="20" pos:column="23"> <block pos:line="20" pos:column="24">{
        <expr_stmt><expr><name pos:line="21" pos:column="9">argv0<pos:position pos:line="21" pos:column="14"/></name><operator pos:line="21" pos:column="14">++<pos:position pos:line="21" pos:column="16"/></operator></expr>;<pos:position pos:line="21" pos:column="17"/></expr_stmt>
    }<pos:position pos:line="22" pos:column="6"/></block></then>
    <else pos:line="23" pos:column="5">else <block pos:line="23" pos:column="10">{
        <expr_stmt><expr><name pos:line="24" pos:column="9">argv0<pos:position pos:line="24" pos:column="14"/></name> <operator pos:line="24" pos:column="15">=<pos:position pos:line="24" pos:column="16"/></operator> <name pos:line="24" pos:column="17">progname<pos:position pos:line="24" pos:column="25"/></name></expr>;<pos:position pos:line="24" pos:column="26"/></expr_stmt>
    }<pos:position pos:line="25" pos:column="6"/></block></else></if>


    <if pos:line="28" pos:column="5">if <condition pos:line="28" pos:column="8">(<expr><name><name pos:line="28" pos:column="9">ugid<pos:position pos:line="28" pos:column="13"/></name><operator pos:line="28" pos:column="13">-&gt;<pos:position pos:line="28" pos:column="18"/></operator><name pos:line="28" pos:column="15">userdir<pos:position pos:line="28" pos:column="22"/></name></name></expr>)<pos:position pos:line="28" pos:column="23"/></condition><then pos:line="28" pos:column="23"> <block pos:line="28" pos:column="24">{
        <expr_stmt><expr><name pos:line="29" pos:column="9">execuser<pos:position pos:line="29" pos:column="17"/></name> <operator pos:line="29" pos:column="18">=<pos:position pos:line="29" pos:column="19"/></operator> <call><name pos:line="29" pos:column="20">apr_psprintf<pos:position pos:line="29" pos:column="32"/></name><argument_list pos:line="29" pos:column="32">(<argument><expr><name pos:line="29" pos:column="33">p<pos:position pos:line="29" pos:column="34"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="29" pos:column="36">"~%ld"<pos:position pos:line="29" pos:column="42"/></literal></expr></argument>, <argument><expr><operator pos:line="29" pos:column="44">(<pos:position pos:line="29" pos:column="45"/></operator><name pos:line="29" pos:column="45">long<pos:position pos:line="29" pos:column="49"/></name><operator pos:line="29" pos:column="49">)<pos:position pos:line="29" pos:column="50"/></operator> <name><name pos:line="29" pos:column="51">ugid<pos:position pos:line="29" pos:column="55"/></name><operator pos:line="29" pos:column="55">-&gt;<pos:position pos:line="29" pos:column="60"/></operator><name pos:line="29" pos:column="57">uid<pos:position pos:line="29" pos:column="60"/></name></name></expr></argument>)<pos:position pos:line="29" pos:column="61"/></argument_list></call></expr>;<pos:position pos:line="29" pos:column="62"/></expr_stmt>
    }<pos:position pos:line="30" pos:column="6"/></block></then>
    <else pos:line="31" pos:column="5">else <block pos:line="31" pos:column="10">{
        <expr_stmt><expr><name pos:line="32" pos:column="9">execuser<pos:position pos:line="32" pos:column="17"/></name> <operator pos:line="32" pos:column="18">=<pos:position pos:line="32" pos:column="19"/></operator> <call><name pos:line="32" pos:column="20">apr_psprintf<pos:position pos:line="32" pos:column="32"/></name><argument_list pos:line="32" pos:column="32">(<argument><expr><name pos:line="32" pos:column="33">p<pos:position pos:line="32" pos:column="34"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="32" pos:column="36">"%ld"<pos:position pos:line="32" pos:column="41"/></literal></expr></argument>, <argument><expr><operator pos:line="32" pos:column="43">(<pos:position pos:line="32" pos:column="44"/></operator><name pos:line="32" pos:column="44">long<pos:position pos:line="32" pos:column="48"/></name><operator pos:line="32" pos:column="48">)<pos:position pos:line="32" pos:column="49"/></operator> <name><name pos:line="32" pos:column="50">ugid<pos:position pos:line="32" pos:column="54"/></name><operator pos:line="32" pos:column="54">-&gt;<pos:position pos:line="32" pos:column="59"/></operator><name pos:line="32" pos:column="56">uid<pos:position pos:line="32" pos:column="59"/></name></name></expr></argument>)<pos:position pos:line="32" pos:column="60"/></argument_list></call></expr>;<pos:position pos:line="32" pos:column="61"/></expr_stmt>
    }<pos:position pos:line="33" pos:column="6"/></block></else></if>
    <expr_stmt><expr><name pos:line="34" pos:column="5">execgroup<pos:position pos:line="34" pos:column="14"/></name> <operator pos:line="34" pos:column="15">=<pos:position pos:line="34" pos:column="16"/></operator> <call><name pos:line="34" pos:column="17">apr_psprintf<pos:position pos:line="34" pos:column="29"/></name><argument_list pos:line="34" pos:column="29">(<argument><expr><name pos:line="34" pos:column="30">p<pos:position pos:line="34" pos:column="31"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="34" pos:column="33">"%ld"<pos:position pos:line="34" pos:column="38"/></literal></expr></argument>, <argument><expr><operator pos:line="34" pos:column="40">(<pos:position pos:line="34" pos:column="41"/></operator><name pos:line="34" pos:column="41">long<pos:position pos:line="34" pos:column="45"/></name><operator pos:line="34" pos:column="45">)<pos:position pos:line="34" pos:column="46"/></operator> <name><name pos:line="34" pos:column="47">ugid<pos:position pos:line="34" pos:column="51"/></name><operator pos:line="34" pos:column="51">-&gt;<pos:position pos:line="34" pos:column="56"/></operator><name pos:line="34" pos:column="53">gid<pos:position pos:line="34" pos:column="56"/></name></name></expr></argument>)<pos:position pos:line="34" pos:column="57"/></argument_list></call></expr>;<pos:position pos:line="34" pos:column="58"/></expr_stmt>

    <if pos:line="36" pos:column="5">if <condition pos:line="36" pos:column="8">(<expr><operator pos:line="36" pos:column="9">!<pos:position pos:line="36" pos:column="10"/></operator><name pos:line="36" pos:column="10">execuser<pos:position pos:line="36" pos:column="18"/></name> <operator pos:line="36" pos:column="19">||<pos:position pos:line="36" pos:column="21"/></operator> <operator pos:line="36" pos:column="22">!<pos:position pos:line="36" pos:column="23"/></operator><name pos:line="36" pos:column="23">execgroup<pos:position pos:line="36" pos:column="32"/></name></expr>)<pos:position pos:line="36" pos:column="33"/></condition><then pos:line="36" pos:column="33"> <block pos:line="36" pos:column="34">{
        <return pos:line="37" pos:column="9">return <expr><name pos:line="37" pos:column="16">APR_ENOMEM<pos:position pos:line="37" pos:column="26"/></name></expr>;<pos:position pos:line="37" pos:column="27"/></return>
    }<pos:position pos:line="38" pos:column="6"/></block></then></if>

    <expr_stmt><expr><name pos:line="40" pos:column="5">i<pos:position pos:line="40" pos:column="6"/></name> <operator pos:line="40" pos:column="7">=<pos:position pos:line="40" pos:column="8"/></operator> <literal type="number" pos:line="40" pos:column="9">0<pos:position pos:line="40" pos:column="10"/></literal></expr>;<pos:position pos:line="40" pos:column="11"/></expr_stmt>
    <if pos:line="41" pos:column="5">if <condition pos:line="41" pos:column="8">(<expr><name pos:line="41" pos:column="9">args<pos:position pos:line="41" pos:column="13"/></name></expr>)<pos:position pos:line="41" pos:column="14"/></condition><then pos:line="41" pos:column="14"> <block pos:line="41" pos:column="15">{
        <while pos:line="42" pos:column="9">while <condition pos:line="42" pos:column="15">(<expr><name><name pos:line="42" pos:column="16">args<pos:position pos:line="42" pos:column="20"/></name><index pos:line="42" pos:column="20">[<expr><name pos:line="42" pos:column="21">i<pos:position pos:line="42" pos:column="22"/></name></expr>]<pos:position pos:line="42" pos:column="23"/></index></name></expr>)<pos:position pos:line="42" pos:column="24"/></condition> <block pos:line="42" pos:column="25">{
            <expr_stmt><expr><name pos:line="43" pos:column="13">i<pos:position pos:line="43" pos:column="14"/></name><operator pos:line="43" pos:column="14">++<pos:position pos:line="43" pos:column="16"/></operator></expr>;<pos:position pos:line="43" pos:column="17"/></expr_stmt>
            }<pos:position pos:line="44" pos:column="14"/></block></while>
    }<pos:position pos:line="45" pos:column="6"/></block></then></if>
    <comment type="block" pos:line="46" pos:column="5">/* allocate space for 4 new args, the input args, and a null terminator */</comment>
    <expr_stmt><expr><name pos:line="47" pos:column="5">newargs<pos:position pos:line="47" pos:column="12"/></name> <operator pos:line="47" pos:column="13">=<pos:position pos:line="47" pos:column="14"/></operator> <call><name pos:line="47" pos:column="15">apr_palloc<pos:position pos:line="47" pos:column="25"/></name><argument_list pos:line="47" pos:column="25">(<argument><expr><name pos:line="47" pos:column="26">p<pos:position pos:line="47" pos:column="27"/></name></expr></argument>, <argument><expr><sizeof pos:line="47" pos:column="29">sizeof<argument_list pos:line="47" pos:column="35">(<argument><expr><name pos:line="47" pos:column="36">char<pos:position pos:line="47" pos:column="40"/></name> <operator pos:line="47" pos:column="41">*<pos:position pos:line="47" pos:column="42"/></operator></expr></argument>)<pos:position pos:line="47" pos:column="43"/></argument_list></sizeof> <operator pos:line="47" pos:column="44">*<pos:position pos:line="47" pos:column="45"/></operator> <operator pos:line="47" pos:column="46">(<pos:position pos:line="47" pos:column="47"/></operator><name pos:line="47" pos:column="47">i<pos:position pos:line="47" pos:column="48"/></name> <operator pos:line="47" pos:column="49">+<pos:position pos:line="47" pos:column="50"/></operator> <literal type="number" pos:line="47" pos:column="51">4<pos:position pos:line="47" pos:column="52"/></literal><operator pos:line="47" pos:column="52">)<pos:position pos:line="47" pos:column="53"/></operator></expr></argument>)<pos:position pos:line="47" pos:column="54"/></argument_list></call></expr>;<pos:position pos:line="47" pos:column="55"/></expr_stmt>
    <expr_stmt><expr><name pos:line="48" pos:column="5">newprogname<pos:position pos:line="48" pos:column="16"/></name> <operator pos:line="48" pos:column="17">=<pos:position pos:line="48" pos:column="18"/></operator> <name pos:line="48" pos:column="19">SUEXEC_BIN<pos:position pos:line="48" pos:column="29"/></name></expr>;<pos:position pos:line="48" pos:column="30"/></expr_stmt>
    <expr_stmt><expr><name><name pos:line="49" pos:column="5">newargs<pos:position pos:line="49" pos:column="12"/></name><index pos:line="49" pos:column="12">[<expr><literal type="number" pos:line="49" pos:column="13">0<pos:position pos:line="49" pos:column="14"/></literal></expr>]<pos:position pos:line="49" pos:column="15"/></index></name> <operator pos:line="49" pos:column="16">=<pos:position pos:line="49" pos:column="17"/></operator> <name pos:line="49" pos:column="18">SUEXEC_BIN<pos:position pos:line="49" pos:column="28"/></name></expr>;<pos:position pos:line="49" pos:column="29"/></expr_stmt>
    <expr_stmt><expr><name><name pos:line="50" pos:column="5">newargs<pos:position pos:line="50" pos:column="12"/></name><index pos:line="50" pos:column="12">[<expr><literal type="number" pos:line="50" pos:column="13">1<pos:position pos:line="50" pos:column="14"/></literal></expr>]<pos:position pos:line="50" pos:column="15"/></index></name> <operator pos:line="50" pos:column="16">=<pos:position pos:line="50" pos:column="17"/></operator> <name pos:line="50" pos:column="18">execuser<pos:position pos:line="50" pos:column="26"/></name></expr>;<pos:position pos:line="50" pos:column="27"/></expr_stmt>
    <expr_stmt><expr><name><name pos:line="51" pos:column="5">newargs<pos:position pos:line="51" pos:column="12"/></name><index pos:line="51" pos:column="12">[<expr><literal type="number" pos:line="51" pos:column="13">2<pos:position pos:line="51" pos:column="14"/></literal></expr>]<pos:position pos:line="51" pos:column="15"/></index></name> <operator pos:line="51" pos:column="16">=<pos:position pos:line="51" pos:column="17"/></operator> <name pos:line="51" pos:column="18">execgroup<pos:position pos:line="51" pos:column="27"/></name></expr>;<pos:position pos:line="51" pos:column="28"/></expr_stmt>
    <expr_stmt><expr><name><name pos:line="52" pos:column="5">newargs<pos:position pos:line="52" pos:column="12"/></name><index pos:line="52" pos:column="12">[<expr><literal type="number" pos:line="52" pos:column="13">3<pos:position pos:line="52" pos:column="14"/></literal></expr>]<pos:position pos:line="52" pos:column="15"/></index></name> <operator pos:line="52" pos:column="16">=<pos:position pos:line="52" pos:column="17"/></operator> <call><name pos:line="52" pos:column="18">apr_pstrdup<pos:position pos:line="52" pos:column="29"/></name><argument_list pos:line="52" pos:column="29">(<argument><expr><name pos:line="52" pos:column="30">p<pos:position pos:line="52" pos:column="31"/></name></expr></argument>, <argument><expr><name pos:line="52" pos:column="33">argv0<pos:position pos:line="52" pos:column="38"/></name></expr></argument>)<pos:position pos:line="52" pos:column="39"/></argument_list></call></expr>;<pos:position pos:line="52" pos:column="40"/></expr_stmt>

    <comment type="block" pos:line="54" pos:column="5">/*
    ** using a shell to execute suexec makes no sense thus
    ** we force everything to be APR_PROGRAM, and never
    ** APR_SHELLCMD
    */</comment>
    <if pos:line="59" pos:column="5">if<condition pos:line="59" pos:column="7">(<expr><call><name pos:line="59" pos:column="8">apr_procattr_cmdtype_set<pos:position pos:line="59" pos:column="32"/></name><argument_list pos:line="59" pos:column="32">(<argument><expr><name pos:line="59" pos:column="33">attr<pos:position pos:line="59" pos:column="37"/></name></expr></argument>, <argument><expr><name pos:line="59" pos:column="39">APR_PROGRAM<pos:position pos:line="59" pos:column="50"/></name></expr></argument>)<pos:position pos:line="59" pos:column="51"/></argument_list></call> <operator pos:line="59" pos:column="52">!=<pos:position pos:line="59" pos:column="54"/></operator> <name pos:line="59" pos:column="55">APR_SUCCESS<pos:position pos:line="59" pos:column="66"/></name></expr>)<pos:position pos:line="59" pos:column="67"/></condition><then pos:line="59" pos:column="67"> <block pos:line="59" pos:column="68">{
        <return pos:line="60" pos:column="9">return <expr><name pos:line="60" pos:column="16">APR_EGENERAL<pos:position pos:line="60" pos:column="28"/></name></expr>;<pos:position pos:line="60" pos:column="29"/></return>
    }<pos:position pos:line="61" pos:column="6"/></block></then></if>

    <expr_stmt><expr><name pos:line="63" pos:column="5">i<pos:position pos:line="63" pos:column="6"/></name> <operator pos:line="63" pos:column="7">=<pos:position pos:line="63" pos:column="8"/></operator> <literal type="number" pos:line="63" pos:column="9">1<pos:position pos:line="63" pos:column="10"/></literal></expr>;<pos:position pos:line="63" pos:column="11"/></expr_stmt>
    <do pos:line="64" pos:column="5">do <block pos:line="64" pos:column="8">{
        <expr_stmt><expr><name><name pos:line="65" pos:column="9">newargs<pos:position pos:line="65" pos:column="16"/></name><index pos:line="65" pos:column="16">[<expr><name pos:line="65" pos:column="17">i<pos:position pos:line="65" pos:column="18"/></name> <operator pos:line="65" pos:column="19">+<pos:position pos:line="65" pos:column="20"/></operator> <literal type="number" pos:line="65" pos:column="21">3<pos:position pos:line="65" pos:column="22"/></literal></expr>]<pos:position pos:line="65" pos:column="23"/></index></name> <operator pos:line="65" pos:column="24">=<pos:position pos:line="65" pos:column="25"/></operator> <name><name pos:line="65" pos:column="26">args<pos:position pos:line="65" pos:column="30"/></name><index pos:line="65" pos:column="30">[<expr><name pos:line="65" pos:column="31">i<pos:position pos:line="65" pos:column="32"/></name></expr>]<pos:position pos:line="65" pos:column="33"/></index></name></expr>;<pos:position pos:line="65" pos:column="34"/></expr_stmt>
    }<pos:position pos:line="66" pos:column="6"/></block> while <condition pos:line="66" pos:column="13">(<expr><name><name pos:line="66" pos:column="14">args<pos:position pos:line="66" pos:column="18"/></name><index pos:line="66" pos:column="18">[<expr><name pos:line="66" pos:column="19">i<pos:position pos:line="66" pos:column="20"/></name><operator pos:line="66" pos:column="20">++<pos:position pos:line="66" pos:column="22"/></operator></expr>]<pos:position pos:line="66" pos:column="23"/></index></name></expr>)<pos:position pos:line="66" pos:column="24"/></condition>;<pos:position pos:line="66" pos:column="25"/></do>

    <return pos:line="68" pos:column="5">return <expr><call><name pos:line="68" pos:column="12">apr_proc_create<pos:position pos:line="68" pos:column="27"/></name><argument_list pos:line="68" pos:column="27">(<argument><expr><name pos:line="68" pos:column="28">newproc<pos:position pos:line="68" pos:column="35"/></name></expr></argument>, <argument><expr><name pos:line="68" pos:column="37">newprogname<pos:position pos:line="68" pos:column="48"/></name></expr></argument>, <argument><expr><name pos:line="68" pos:column="50">newargs<pos:position pos:line="68" pos:column="57"/></name></expr></argument>, <argument><expr><name pos:line="68" pos:column="59">env<pos:position pos:line="68" pos:column="62"/></name></expr></argument>, <argument><expr><name pos:line="68" pos:column="64">attr<pos:position pos:line="68" pos:column="68"/></name></expr></argument>, <argument><expr><name pos:line="68" pos:column="70">p<pos:position pos:line="68" pos:column="71"/></name></expr></argument>)<pos:position pos:line="68" pos:column="72"/></argument_list></call></expr>;<pos:position pos:line="68" pos:column="73"/></return>
}<pos:position pos:line="69" pos:column="2"/></block></function></unit>

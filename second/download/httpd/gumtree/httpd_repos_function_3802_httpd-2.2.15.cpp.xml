<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/httpd/gumtree/httpd_repos_function_3802_httpd-2.2.15.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">apr_status_t<pos:position pos:line="1" pos:column="20"/></name></type> <name pos:line="1" pos:column="21">impl_pollcb_poll<pos:position pos:line="1" pos:column="37"/></name><parameter_list pos:line="1" pos:column="37">(<parameter><decl><type><name pos:line="1" pos:column="38">apr_pollcb_t<pos:position pos:line="1" pos:column="50"/></name> <modifier pos:line="1" pos:column="51">*<pos:position pos:line="1" pos:column="52"/></modifier></type><name pos:line="1" pos:column="52">pollcb<pos:position pos:line="1" pos:column="58"/></name></decl></parameter>,
                                     <parameter><decl><type><name pos:line="2" pos:column="38">apr_interval_time_t<pos:position pos:line="2" pos:column="57"/></name></type> <name pos:line="2" pos:column="58">timeout<pos:position pos:line="2" pos:column="65"/></name></decl></parameter>,
                                     <parameter><decl><type><name pos:line="3" pos:column="38">apr_pollcb_cb_t<pos:position pos:line="3" pos:column="53"/></name></type> <name pos:line="3" pos:column="54">func<pos:position pos:line="3" pos:column="58"/></name></decl></parameter>,
                                     <parameter><decl><type><name pos:line="4" pos:column="38">void<pos:position pos:line="4" pos:column="42"/></name> <modifier pos:line="4" pos:column="43">*<pos:position pos:line="4" pos:column="44"/></modifier></type><name pos:line="4" pos:column="44">baton<pos:position pos:line="4" pos:column="49"/></name></decl></parameter>)<pos:position pos:line="4" pos:column="50"/></parameter_list>
<block pos:line="5" pos:column="1">{
    <decl_stmt><decl><type><name pos:line="6" pos:column="5">int<pos:position pos:line="6" pos:column="8"/></name></type> <name pos:line="6" pos:column="9">ret<pos:position pos:line="6" pos:column="12"/></name></decl>, <decl><type ref="prev"/><name pos:line="6" pos:column="14">i<pos:position pos:line="6" pos:column="15"/></name></decl>;<pos:position pos:line="6" pos:column="16"/></decl_stmt>
    <decl_stmt><decl><type><name><name pos:line="7" pos:column="5">struct<pos:position pos:line="7" pos:column="11"/></name> <name pos:line="7" pos:column="12">timespec<pos:position pos:line="7" pos:column="20"/></name></name></type> <name pos:line="7" pos:column="21">tv<pos:position pos:line="7" pos:column="23"/></name></decl>, <modifier pos:line="7" pos:column="25">*<pos:position pos:line="7" pos:column="26"/></modifier><decl><type ref="prev"/><name pos:line="7" pos:column="26">tvptr<pos:position pos:line="7" pos:column="31"/></name></decl>;<pos:position pos:line="7" pos:column="32"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="8" pos:column="5">apr_status_t<pos:position pos:line="8" pos:column="17"/></name></type> <name pos:line="8" pos:column="18">rv<pos:position pos:line="8" pos:column="20"/></name> <init pos:line="8" pos:column="21">= <expr><name pos:line="8" pos:column="23">APR_SUCCESS<pos:position pos:line="8" pos:column="34"/></name></expr></init></decl>;<pos:position pos:line="8" pos:column="35"/></decl_stmt>
    
    <if pos:line="10" pos:column="5">if <condition pos:line="10" pos:column="8">(<expr><name pos:line="10" pos:column="9">timeout<pos:position pos:line="10" pos:column="16"/></name> <operator pos:line="10" pos:column="17">&lt;<pos:position pos:line="10" pos:column="21"/></operator> <literal type="number" pos:line="10" pos:column="19">0<pos:position pos:line="10" pos:column="20"/></literal></expr>)<pos:position pos:line="10" pos:column="21"/></condition><then pos:line="10" pos:column="21"> <block pos:line="10" pos:column="22">{
        <expr_stmt><expr><name pos:line="11" pos:column="9">tvptr<pos:position pos:line="11" pos:column="14"/></name> <operator pos:line="11" pos:column="15">=<pos:position pos:line="11" pos:column="16"/></operator> <name pos:line="11" pos:column="17">NULL<pos:position pos:line="11" pos:column="21"/></name></expr>;<pos:position pos:line="11" pos:column="22"/></expr_stmt>
    }<pos:position pos:line="12" pos:column="6"/></block></then>
    <else pos:line="13" pos:column="5">else <block pos:line="13" pos:column="10">{
        <expr_stmt><expr><name><name pos:line="14" pos:column="9">tv<pos:position pos:line="14" pos:column="11"/></name><operator pos:line="14" pos:column="11">.<pos:position pos:line="14" pos:column="12"/></operator><name pos:line="14" pos:column="12">tv_sec<pos:position pos:line="14" pos:column="18"/></name></name> <operator pos:line="14" pos:column="19">=<pos:position pos:line="14" pos:column="20"/></operator> <operator pos:line="14" pos:column="21">(<pos:position pos:line="14" pos:column="22"/></operator><name pos:line="14" pos:column="22">long<pos:position pos:line="14" pos:column="26"/></name><operator pos:line="14" pos:column="26">)<pos:position pos:line="14" pos:column="27"/></operator> <call><name pos:line="14" pos:column="28">apr_time_sec<pos:position pos:line="14" pos:column="40"/></name><argument_list pos:line="14" pos:column="40">(<argument><expr><name pos:line="14" pos:column="41">timeout<pos:position pos:line="14" pos:column="48"/></name></expr></argument>)<pos:position pos:line="14" pos:column="49"/></argument_list></call></expr>;<pos:position pos:line="14" pos:column="50"/></expr_stmt>
        <expr_stmt><expr><name><name pos:line="15" pos:column="9">tv<pos:position pos:line="15" pos:column="11"/></name><operator pos:line="15" pos:column="11">.<pos:position pos:line="15" pos:column="12"/></operator><name pos:line="15" pos:column="12">tv_nsec<pos:position pos:line="15" pos:column="19"/></name></name> <operator pos:line="15" pos:column="20">=<pos:position pos:line="15" pos:column="21"/></operator> <operator pos:line="15" pos:column="22">(<pos:position pos:line="15" pos:column="23"/></operator><name pos:line="15" pos:column="23">long<pos:position pos:line="15" pos:column="27"/></name><operator pos:line="15" pos:column="27">)<pos:position pos:line="15" pos:column="28"/></operator> <call><name pos:line="15" pos:column="29">apr_time_usec<pos:position pos:line="15" pos:column="42"/></name><argument_list pos:line="15" pos:column="42">(<argument><expr><name pos:line="15" pos:column="43">timeout<pos:position pos:line="15" pos:column="50"/></name></expr></argument>)<pos:position pos:line="15" pos:column="51"/></argument_list></call> <operator pos:line="15" pos:column="52">*<pos:position pos:line="15" pos:column="53"/></operator> <literal type="number" pos:line="15" pos:column="54">1000<pos:position pos:line="15" pos:column="58"/></literal></expr>;<pos:position pos:line="15" pos:column="59"/></expr_stmt>
        <expr_stmt><expr><name pos:line="16" pos:column="9">tvptr<pos:position pos:line="16" pos:column="14"/></name> <operator pos:line="16" pos:column="15">=<pos:position pos:line="16" pos:column="16"/></operator> <operator pos:line="16" pos:column="17">&amp;<pos:position pos:line="16" pos:column="22"/></operator><name pos:line="16" pos:column="18">tv<pos:position pos:line="16" pos:column="20"/></name></expr>;<pos:position pos:line="16" pos:column="21"/></expr_stmt>
    }<pos:position pos:line="17" pos:column="6"/></block></else></if>
    
    <expr_stmt><expr><name pos:line="19" pos:column="5">ret<pos:position pos:line="19" pos:column="8"/></name> <operator pos:line="19" pos:column="9">=<pos:position pos:line="19" pos:column="10"/></operator> <call><name pos:line="19" pos:column="11">kevent<pos:position pos:line="19" pos:column="17"/></name><argument_list pos:line="19" pos:column="17">(<argument><expr><name><name pos:line="19" pos:column="18">pollcb<pos:position pos:line="19" pos:column="24"/></name><operator pos:line="19" pos:column="24">-&gt;<pos:position pos:line="19" pos:column="29"/></operator><name pos:line="19" pos:column="26">fd<pos:position pos:line="19" pos:column="28"/></name></name></expr></argument>, <argument><expr><name pos:line="19" pos:column="30">NULL<pos:position pos:line="19" pos:column="34"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="19" pos:column="36">0<pos:position pos:line="19" pos:column="37"/></literal></expr></argument>, <argument><expr><name><name pos:line="19" pos:column="39">pollcb<pos:position pos:line="19" pos:column="45"/></name><operator pos:line="19" pos:column="45">-&gt;<pos:position pos:line="19" pos:column="50"/></operator><name pos:line="19" pos:column="47">pollset<pos:position pos:line="19" pos:column="54"/></name><operator pos:line="19" pos:column="54">.<pos:position pos:line="19" pos:column="55"/></operator><name pos:line="19" pos:column="55">ke<pos:position pos:line="19" pos:column="57"/></name></name></expr></argument>, <argument><expr><literal type="number" pos:line="19" pos:column="59">2<pos:position pos:line="19" pos:column="60"/></literal> <operator pos:line="19" pos:column="61">*<pos:position pos:line="19" pos:column="62"/></operator> <name><name pos:line="19" pos:column="63">pollcb<pos:position pos:line="19" pos:column="69"/></name><operator pos:line="19" pos:column="69">-&gt;<pos:position pos:line="19" pos:column="74"/></operator><name pos:line="19" pos:column="71">nalloc<pos:position pos:line="19" pos:column="77"/></name></name></expr></argument>,
                 <argument><expr><name pos:line="20" pos:column="18">tvptr<pos:position pos:line="20" pos:column="23"/></name></expr></argument>)<pos:position pos:line="20" pos:column="24"/></argument_list></call></expr>;<pos:position pos:line="20" pos:column="25"/></expr_stmt>

    <if pos:line="22" pos:column="5">if <condition pos:line="22" pos:column="8">(<expr><name pos:line="22" pos:column="9">ret<pos:position pos:line="22" pos:column="12"/></name> <operator pos:line="22" pos:column="13">&lt;<pos:position pos:line="22" pos:column="17"/></operator> <literal type="number" pos:line="22" pos:column="15">0<pos:position pos:line="22" pos:column="16"/></literal></expr>)<pos:position pos:line="22" pos:column="17"/></condition><then pos:line="22" pos:column="17"> <block pos:line="22" pos:column="18">{
        <expr_stmt><expr><name pos:line="23" pos:column="9">rv<pos:position pos:line="23" pos:column="11"/></name> <operator pos:line="23" pos:column="12">=<pos:position pos:line="23" pos:column="13"/></operator> <call><name pos:line="23" pos:column="14">apr_get_netos_error<pos:position pos:line="23" pos:column="33"/></name><argument_list pos:line="23" pos:column="33">()<pos:position pos:line="23" pos:column="35"/></argument_list></call></expr>;<pos:position pos:line="23" pos:column="36"/></expr_stmt>
    }<pos:position pos:line="24" pos:column="6"/></block></then>
    <elseif pos:line="25" pos:column="5">else <if pos:line="25" pos:column="10">if <condition pos:line="25" pos:column="13">(<expr><name pos:line="25" pos:column="14">ret<pos:position pos:line="25" pos:column="17"/></name> <operator pos:line="25" pos:column="18">==<pos:position pos:line="25" pos:column="20"/></operator> <literal type="number" pos:line="25" pos:column="21">0<pos:position pos:line="25" pos:column="22"/></literal></expr>)<pos:position pos:line="25" pos:column="23"/></condition><then pos:line="25" pos:column="23"> <block pos:line="25" pos:column="24">{
        <expr_stmt><expr><name pos:line="26" pos:column="9">rv<pos:position pos:line="26" pos:column="11"/></name> <operator pos:line="26" pos:column="12">=<pos:position pos:line="26" pos:column="13"/></operator> <name pos:line="26" pos:column="14">APR_TIMEUP<pos:position pos:line="26" pos:column="24"/></name></expr>;<pos:position pos:line="26" pos:column="25"/></expr_stmt>
    }<pos:position pos:line="27" pos:column="6"/></block></then></if></elseif>
    <else pos:line="28" pos:column="5">else <block pos:line="28" pos:column="10">{
        <for pos:line="29" pos:column="9">for <control pos:line="29" pos:column="13">(<init><expr><name pos:line="29" pos:column="14">i<pos:position pos:line="29" pos:column="15"/></name> <operator pos:line="29" pos:column="16">=<pos:position pos:line="29" pos:column="17"/></operator> <literal type="number" pos:line="29" pos:column="18">0<pos:position pos:line="29" pos:column="19"/></literal></expr>;<pos:position pos:line="29" pos:column="20"/></init> <condition><expr><name pos:line="29" pos:column="21">i<pos:position pos:line="29" pos:column="22"/></name> <operator pos:line="29" pos:column="23">&lt;<pos:position pos:line="29" pos:column="27"/></operator> <name pos:line="29" pos:column="25">ret<pos:position pos:line="29" pos:column="28"/></name></expr>;<pos:position pos:line="29" pos:column="29"/></condition> <incr><expr><name pos:line="29" pos:column="30">i<pos:position pos:line="29" pos:column="31"/></name><operator pos:line="29" pos:column="31">++<pos:position pos:line="29" pos:column="33"/></operator></expr></incr>)<pos:position pos:line="29" pos:column="34"/></control> <block pos:line="29" pos:column="35">{
            <decl_stmt><decl><type><name pos:line="30" pos:column="13">apr_pollfd_t<pos:position pos:line="30" pos:column="25"/></name> <modifier pos:line="30" pos:column="26">*<pos:position pos:line="30" pos:column="27"/></modifier></type><name pos:line="30" pos:column="27">pollfd<pos:position pos:line="30" pos:column="33"/></name> <init pos:line="30" pos:column="34">= <expr><operator pos:line="30" pos:column="36">(<pos:position pos:line="30" pos:column="37"/></operator><name pos:line="30" pos:column="37">apr_pollfd_t<pos:position pos:line="30" pos:column="49"/></name> <operator pos:line="30" pos:column="50">*<pos:position pos:line="30" pos:column="51"/></operator><operator pos:line="30" pos:column="51">)<pos:position pos:line="30" pos:column="52"/></operator><operator pos:line="30" pos:column="52">(<pos:position pos:line="30" pos:column="53"/></operator><name><name pos:line="30" pos:column="53">pollcb<pos:position pos:line="30" pos:column="59"/></name><operator pos:line="30" pos:column="59">-&gt;<pos:position pos:line="30" pos:column="64"/></operator><name pos:line="30" pos:column="61">pollset<pos:position pos:line="30" pos:column="68"/></name><operator pos:line="30" pos:column="68">.<pos:position pos:line="30" pos:column="69"/></operator><name pos:line="30" pos:column="69">ke<pos:position pos:line="30" pos:column="71"/></name><index pos:line="30" pos:column="71">[<expr><name pos:line="30" pos:column="72">i<pos:position pos:line="30" pos:column="73"/></name></expr>]<pos:position pos:line="30" pos:column="74"/></index></name><operator pos:line="30" pos:column="74">.<pos:position pos:line="30" pos:column="75"/></operator><name pos:line="30" pos:column="75">udata<pos:position pos:line="30" pos:column="80"/></name><operator pos:line="30" pos:column="80">)<pos:position pos:line="30" pos:column="81"/></operator></expr></init></decl>;<pos:position pos:line="30" pos:column="82"/></decl_stmt>
            
            <expr_stmt><expr><name><name pos:line="32" pos:column="13">pollfd<pos:position pos:line="32" pos:column="19"/></name><operator pos:line="32" pos:column="19">-&gt;<pos:position pos:line="32" pos:column="24"/></operator><name pos:line="32" pos:column="21">rtnevents<pos:position pos:line="32" pos:column="30"/></name></name> <operator pos:line="32" pos:column="31">=<pos:position pos:line="32" pos:column="32"/></operator> <call><name pos:line="32" pos:column="33">get_kqueue_revent<pos:position pos:line="32" pos:column="50"/></name><argument_list pos:line="32" pos:column="50">(<argument><expr><name><name pos:line="32" pos:column="51">pollcb<pos:position pos:line="32" pos:column="57"/></name><operator pos:line="32" pos:column="57">-&gt;<pos:position pos:line="32" pos:column="62"/></operator><name pos:line="32" pos:column="59">pollset<pos:position pos:line="32" pos:column="66"/></name><operator pos:line="32" pos:column="66">.<pos:position pos:line="32" pos:column="67"/></operator><name pos:line="32" pos:column="67">ke<pos:position pos:line="32" pos:column="69"/></name><index pos:line="32" pos:column="69">[<expr><name pos:line="32" pos:column="70">i<pos:position pos:line="32" pos:column="71"/></name></expr>]<pos:position pos:line="32" pos:column="72"/></index></name><operator pos:line="32" pos:column="72">.<pos:position pos:line="32" pos:column="73"/></operator><name pos:line="32" pos:column="73">filter<pos:position pos:line="32" pos:column="79"/></name></expr></argument>,
                                                  <argument><expr><name><name pos:line="33" pos:column="51">pollcb<pos:position pos:line="33" pos:column="57"/></name><operator pos:line="33" pos:column="57">-&gt;<pos:position pos:line="33" pos:column="62"/></operator><name pos:line="33" pos:column="59">pollset<pos:position pos:line="33" pos:column="66"/></name><operator pos:line="33" pos:column="66">.<pos:position pos:line="33" pos:column="67"/></operator><name pos:line="33" pos:column="67">ke<pos:position pos:line="33" pos:column="69"/></name><index pos:line="33" pos:column="69">[<expr><name pos:line="33" pos:column="70">i<pos:position pos:line="33" pos:column="71"/></name></expr>]<pos:position pos:line="33" pos:column="72"/></index></name><operator pos:line="33" pos:column="72">.<pos:position pos:line="33" pos:column="73"/></operator><name pos:line="33" pos:column="73">flags<pos:position pos:line="33" pos:column="78"/></name></expr></argument>)<pos:position pos:line="33" pos:column="79"/></argument_list></call></expr>;<pos:position pos:line="33" pos:column="80"/></expr_stmt>
            
            <expr_stmt><expr><name pos:line="35" pos:column="13">rv<pos:position pos:line="35" pos:column="15"/></name> <operator pos:line="35" pos:column="16">=<pos:position pos:line="35" pos:column="17"/></operator> <call><name pos:line="35" pos:column="18">func<pos:position pos:line="35" pos:column="22"/></name><argument_list pos:line="35" pos:column="22">(<argument><expr><name pos:line="35" pos:column="23">baton<pos:position pos:line="35" pos:column="28"/></name></expr></argument>, <argument><expr><name pos:line="35" pos:column="30">pollfd<pos:position pos:line="35" pos:column="36"/></name></expr></argument>)<pos:position pos:line="35" pos:column="37"/></argument_list></call></expr>;<pos:position pos:line="35" pos:column="38"/></expr_stmt>
            
            <if pos:line="37" pos:column="13">if <condition pos:line="37" pos:column="16">(<expr><name pos:line="37" pos:column="17">rv<pos:position pos:line="37" pos:column="19"/></name></expr>)<pos:position pos:line="37" pos:column="20"/></condition><then pos:line="37" pos:column="20"> <block pos:line="37" pos:column="21">{
                <return pos:line="38" pos:column="17">return <expr><name pos:line="38" pos:column="24">rv<pos:position pos:line="38" pos:column="26"/></name></expr>;<pos:position pos:line="38" pos:column="27"/></return>
            }<pos:position pos:line="39" pos:column="14"/></block></then></if>
        }<pos:position pos:line="40" pos:column="10"/></block></for>
    }<pos:position pos:line="41" pos:column="6"/></block></else></if>

    <return pos:line="43" pos:column="5">return <expr><name pos:line="43" pos:column="12">rv<pos:position pos:line="43" pos:column="14"/></name></expr>;<pos:position pos:line="43" pos:column="15"/></return>
}<pos:position pos:line="44" pos:column="2"/></block></function></unit>

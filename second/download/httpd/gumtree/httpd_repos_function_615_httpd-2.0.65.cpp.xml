<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/httpd/gumtree/httpd_repos_function_615_httpd-2.0.65.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">BOOL<pos:position pos:line="1" pos:column="5"/></name></type> <name pos:line="1" pos:column="6">SSL_X509_getCN<pos:position pos:line="1" pos:column="20"/></name><parameter_list pos:line="1" pos:column="20">(<parameter><decl><type><name pos:line="1" pos:column="21">apr_pool_t<pos:position pos:line="1" pos:column="31"/></name> <modifier pos:line="1" pos:column="32">*<pos:position pos:line="1" pos:column="33"/></modifier></type><name pos:line="1" pos:column="33">p<pos:position pos:line="1" pos:column="34"/></name></decl></parameter>, <parameter><decl><type><name pos:line="1" pos:column="36">X509<pos:position pos:line="1" pos:column="40"/></name> <modifier pos:line="1" pos:column="41">*<pos:position pos:line="1" pos:column="42"/></modifier></type><name pos:line="1" pos:column="42">xs<pos:position pos:line="1" pos:column="44"/></name></decl></parameter>, <parameter><decl><type><name pos:line="1" pos:column="46">char<pos:position pos:line="1" pos:column="50"/></name> <modifier pos:line="1" pos:column="51">*<pos:position pos:line="1" pos:column="52"/></modifier><modifier pos:line="1" pos:column="52">*<pos:position pos:line="1" pos:column="53"/></modifier></type><name pos:line="1" pos:column="53">cppCN<pos:position pos:line="1" pos:column="58"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="59"/></parameter_list>
<block pos:line="2" pos:column="1">{
    <decl_stmt><decl><type><name pos:line="3" pos:column="5">X509_NAME<pos:position pos:line="3" pos:column="14"/></name> <modifier pos:line="3" pos:column="15">*<pos:position pos:line="3" pos:column="16"/></modifier></type><name pos:line="3" pos:column="16">xsn<pos:position pos:line="3" pos:column="19"/></name></decl>;<pos:position pos:line="3" pos:column="20"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="4" pos:column="5">X509_NAME_ENTRY<pos:position pos:line="4" pos:column="20"/></name> <modifier pos:line="4" pos:column="21">*<pos:position pos:line="4" pos:column="22"/></modifier></type><name pos:line="4" pos:column="22">xsne<pos:position pos:line="4" pos:column="26"/></name></decl>;<pos:position pos:line="4" pos:column="27"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="5" pos:column="5">int<pos:position pos:line="5" pos:column="8"/></name></type> <name pos:line="5" pos:column="9">i<pos:position pos:line="5" pos:column="10"/></name></decl>, <decl><type ref="prev"/><name pos:line="5" pos:column="12">nid<pos:position pos:line="5" pos:column="15"/></name></decl>;<pos:position pos:line="5" pos:column="16"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="6" pos:column="5">unsigned<pos:position pos:line="6" pos:column="13"/></name> <name pos:line="6" pos:column="14">char<pos:position pos:line="6" pos:column="18"/></name> <modifier pos:line="6" pos:column="19">*<pos:position pos:line="6" pos:column="20"/></modifier></type><name pos:line="6" pos:column="20">data_ptr<pos:position pos:line="6" pos:column="28"/></name></decl>;<pos:position pos:line="6" pos:column="29"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="7" pos:column="5">int<pos:position pos:line="7" pos:column="8"/></name></type> <name pos:line="7" pos:column="9">data_len<pos:position pos:line="7" pos:column="17"/></name></decl>;<pos:position pos:line="7" pos:column="18"/></decl_stmt>

    <expr_stmt><expr><name pos:line="9" pos:column="5">xsn<pos:position pos:line="9" pos:column="8"/></name> <operator pos:line="9" pos:column="9">=<pos:position pos:line="9" pos:column="10"/></operator> <call><name pos:line="9" pos:column="11">X509_get_subject_name<pos:position pos:line="9" pos:column="32"/></name><argument_list pos:line="9" pos:column="32">(<argument><expr><name pos:line="9" pos:column="33">xs<pos:position pos:line="9" pos:column="35"/></name></expr></argument>)<pos:position pos:line="9" pos:column="36"/></argument_list></call></expr>;<pos:position pos:line="9" pos:column="37"/></expr_stmt>
    <for pos:line="10" pos:column="5">for <control pos:line="10" pos:column="9">(<init><expr><name pos:line="10" pos:column="10">i<pos:position pos:line="10" pos:column="11"/></name> <operator pos:line="10" pos:column="12">=<pos:position pos:line="10" pos:column="13"/></operator> <literal type="number" pos:line="10" pos:column="14">0<pos:position pos:line="10" pos:column="15"/></literal></expr>;<pos:position pos:line="10" pos:column="16"/></init> <condition><expr><name pos:line="10" pos:column="17">i<pos:position pos:line="10" pos:column="18"/></name> <operator pos:line="10" pos:column="19">&lt;<pos:position pos:line="10" pos:column="23"/></operator> <call><name pos:line="10" pos:column="21">sk_X509_NAME_ENTRY_num<pos:position pos:line="10" pos:column="43"/></name><argument_list pos:line="10" pos:column="43">(<argument><expr><operator pos:line="10" pos:column="44">(<pos:position pos:line="10" pos:column="45"/></operator><call><name pos:line="10" pos:column="45">STACK_OF<pos:position pos:line="10" pos:column="53"/></name><argument_list pos:line="10" pos:column="53">(<argument><expr><name pos:line="10" pos:column="54">X509_NAME_ENTRY<pos:position pos:line="10" pos:column="69"/></name></expr></argument>)<pos:position pos:line="10" pos:column="70"/></argument_list></call> <operator pos:line="10" pos:column="71">*<pos:position pos:line="10" pos:column="72"/></operator><operator pos:line="10" pos:column="72">)<pos:position pos:line="10" pos:column="73"/></operator>
                                           <call><name pos:line="11" pos:column="44">X509_NAME_get_entries<pos:position pos:line="11" pos:column="65"/></name><argument_list pos:line="11" pos:column="65">(<argument><expr><name pos:line="11" pos:column="66">xsn<pos:position pos:line="11" pos:column="69"/></name></expr></argument>)<pos:position pos:line="11" pos:column="70"/></argument_list></call></expr></argument>)<pos:position pos:line="11" pos:column="71"/></argument_list></call></expr>;<pos:position pos:line="11" pos:column="72"/></condition> <incr><expr><name pos:line="11" pos:column="73">i<pos:position pos:line="11" pos:column="74"/></name><operator pos:line="11" pos:column="74">++<pos:position pos:line="11" pos:column="76"/></operator></expr></incr>)<pos:position pos:line="11" pos:column="77"/></control> <block pos:line="11" pos:column="78">{
        <expr_stmt><expr><name pos:line="12" pos:column="9">xsne<pos:position pos:line="12" pos:column="13"/></name> <operator pos:line="12" pos:column="14">=<pos:position pos:line="12" pos:column="15"/></operator> <call><name pos:line="12" pos:column="16">sk_X509_NAME_ENTRY_value<pos:position pos:line="12" pos:column="40"/></name><argument_list pos:line="12" pos:column="40">(<argument><expr><operator pos:line="12" pos:column="41">(<pos:position pos:line="12" pos:column="42"/></operator><call><name pos:line="12" pos:column="42">STACK_OF<pos:position pos:line="12" pos:column="50"/></name><argument_list pos:line="12" pos:column="50">(<argument><expr><name pos:line="12" pos:column="51">X509_NAME_ENTRY<pos:position pos:line="12" pos:column="66"/></name></expr></argument>)<pos:position pos:line="12" pos:column="67"/></argument_list></call> <operator pos:line="12" pos:column="68">*<pos:position pos:line="12" pos:column="69"/></operator><operator pos:line="12" pos:column="69">)<pos:position pos:line="12" pos:column="70"/></operator>
                                         <call><name pos:line="13" pos:column="42">X509_NAME_get_entries<pos:position pos:line="13" pos:column="63"/></name><argument_list pos:line="13" pos:column="63">(<argument><expr><name pos:line="13" pos:column="64">xsn<pos:position pos:line="13" pos:column="67"/></name></expr></argument>)<pos:position pos:line="13" pos:column="68"/></argument_list></call></expr></argument>, <argument><expr><name pos:line="13" pos:column="70">i<pos:position pos:line="13" pos:column="71"/></name></expr></argument>)<pos:position pos:line="13" pos:column="72"/></argument_list></call></expr>;<pos:position pos:line="13" pos:column="73"/></expr_stmt>
        <expr_stmt><expr><name pos:line="14" pos:column="9">nid<pos:position pos:line="14" pos:column="12"/></name> <operator pos:line="14" pos:column="13">=<pos:position pos:line="14" pos:column="14"/></operator> <call><name pos:line="14" pos:column="15">OBJ_obj2nid<pos:position pos:line="14" pos:column="26"/></name><argument_list pos:line="14" pos:column="26">(<argument><expr><operator pos:line="14" pos:column="27">(<pos:position pos:line="14" pos:column="28"/></operator><name pos:line="14" pos:column="28">ASN1_OBJECT<pos:position pos:line="14" pos:column="39"/></name> <operator pos:line="14" pos:column="40">*<pos:position pos:line="14" pos:column="41"/></operator><operator pos:line="14" pos:column="41">)<pos:position pos:line="14" pos:column="42"/></operator><call><name pos:line="14" pos:column="42">X509_NAME_ENTRY_get_object<pos:position pos:line="14" pos:column="68"/></name><argument_list pos:line="14" pos:column="68">(<argument><expr><name pos:line="14" pos:column="69">xsne<pos:position pos:line="14" pos:column="73"/></name></expr></argument>)<pos:position pos:line="14" pos:column="74"/></argument_list></call></expr></argument>)<pos:position pos:line="14" pos:column="75"/></argument_list></call></expr>;<pos:position pos:line="14" pos:column="76"/></expr_stmt>
        <if pos:line="15" pos:column="9">if <condition pos:line="15" pos:column="12">(<expr><name pos:line="15" pos:column="13">nid<pos:position pos:line="15" pos:column="16"/></name> <operator pos:line="15" pos:column="17">==<pos:position pos:line="15" pos:column="19"/></operator> <name pos:line="15" pos:column="20">NID_commonName<pos:position pos:line="15" pos:column="34"/></name></expr>)<pos:position pos:line="15" pos:column="35"/></condition><then pos:line="15" pos:column="35"> <block pos:line="15" pos:column="36">{
            <expr_stmt><expr><name pos:line="16" pos:column="13">data_ptr<pos:position pos:line="16" pos:column="21"/></name> <operator pos:line="16" pos:column="22">=<pos:position pos:line="16" pos:column="23"/></operator> <call><name pos:line="16" pos:column="24">X509_NAME_ENTRY_get_data_ptr<pos:position pos:line="16" pos:column="52"/></name><argument_list pos:line="16" pos:column="52">(<argument><expr><name pos:line="16" pos:column="53">xsne<pos:position pos:line="16" pos:column="57"/></name></expr></argument>)<pos:position pos:line="16" pos:column="58"/></argument_list></call></expr>;<pos:position pos:line="16" pos:column="59"/></expr_stmt>
            <expr_stmt><expr><name pos:line="17" pos:column="13">data_len<pos:position pos:line="17" pos:column="21"/></name> <operator pos:line="17" pos:column="22">=<pos:position pos:line="17" pos:column="23"/></operator> <call><name pos:line="17" pos:column="24">X509_NAME_ENTRY_get_data_len<pos:position pos:line="17" pos:column="52"/></name><argument_list pos:line="17" pos:column="52">(<argument><expr><name pos:line="17" pos:column="53">xsne<pos:position pos:line="17" pos:column="57"/></name></expr></argument>)<pos:position pos:line="17" pos:column="58"/></argument_list></call></expr>;<pos:position pos:line="17" pos:column="59"/></expr_stmt>
            <expr_stmt><expr><operator pos:line="18" pos:column="13">*<pos:position pos:line="18" pos:column="14"/></operator><name pos:line="18" pos:column="14">cppCN<pos:position pos:line="18" pos:column="19"/></name> <operator pos:line="18" pos:column="20">=<pos:position pos:line="18" pos:column="21"/></operator> <call><name pos:line="18" pos:column="22">apr_palloc<pos:position pos:line="18" pos:column="32"/></name><argument_list pos:line="18" pos:column="32">(<argument><expr><name pos:line="18" pos:column="33">p<pos:position pos:line="18" pos:column="34"/></name></expr></argument>, <argument><expr><name pos:line="18" pos:column="36">data_len<pos:position pos:line="18" pos:column="44"/></name><operator pos:line="18" pos:column="44">+<pos:position pos:line="18" pos:column="45"/></operator><literal type="number" pos:line="18" pos:column="45">1<pos:position pos:line="18" pos:column="46"/></literal></expr></argument>)<pos:position pos:line="18" pos:column="47"/></argument_list></call></expr>;<pos:position pos:line="18" pos:column="48"/></expr_stmt>
            <expr_stmt><expr><call><name pos:line="19" pos:column="13">apr_cpystrn<pos:position pos:line="19" pos:column="24"/></name><argument_list pos:line="19" pos:column="24">(<argument><expr><operator pos:line="19" pos:column="25">*<pos:position pos:line="19" pos:column="26"/></operator><name pos:line="19" pos:column="26">cppCN<pos:position pos:line="19" pos:column="31"/></name></expr></argument>, <argument><expr><operator pos:line="19" pos:column="33">(<pos:position pos:line="19" pos:column="34"/></operator><name pos:line="19" pos:column="34">char<pos:position pos:line="19" pos:column="38"/></name> <operator pos:line="19" pos:column="39">*<pos:position pos:line="19" pos:column="40"/></operator><operator pos:line="19" pos:column="40">)<pos:position pos:line="19" pos:column="41"/></operator><name pos:line="19" pos:column="41">data_ptr<pos:position pos:line="19" pos:column="49"/></name></expr></argument>, <argument><expr><name pos:line="19" pos:column="51">data_len<pos:position pos:line="19" pos:column="59"/></name><operator pos:line="19" pos:column="59">+<pos:position pos:line="19" pos:column="60"/></operator><literal type="number" pos:line="19" pos:column="60">1<pos:position pos:line="19" pos:column="61"/></literal></expr></argument>)<pos:position pos:line="19" pos:column="62"/></argument_list></call></expr>;<pos:position pos:line="19" pos:column="63"/></expr_stmt>
            <expr_stmt><expr><operator pos:line="20" pos:column="13">(<pos:position pos:line="20" pos:column="14"/></operator><operator pos:line="20" pos:column="14">*<pos:position pos:line="20" pos:column="15"/></operator><name pos:line="20" pos:column="15">cppCN<pos:position pos:line="20" pos:column="20"/></name><operator pos:line="20" pos:column="20">)<pos:position pos:line="20" pos:column="21"/></operator><index pos:line="20" pos:column="21">[<expr><name pos:line="20" pos:column="22">data_len<pos:position pos:line="20" pos:column="30"/></name></expr>]<pos:position pos:line="20" pos:column="31"/></index> <operator pos:line="20" pos:column="32">=<pos:position pos:line="20" pos:column="33"/></operator> <name pos:line="20" pos:column="34">NUL<pos:position pos:line="20" pos:column="37"/></name></expr>;<pos:position pos:line="20" pos:column="38"/></expr_stmt>
<cpp:ifdef pos:line="21" pos:column="1">#<cpp:directive pos:line="21" pos:column="2">ifdef<pos:position pos:line="21" pos:column="7"/></cpp:directive> <name pos:line="21" pos:column="8">CHARSET_EBCDIC<pos:position pos:line="21" pos:column="22"/></name></cpp:ifdef>
            <expr_stmt><expr><call><name pos:line="22" pos:column="13">ascii2ebcdic<pos:position pos:line="22" pos:column="25"/></name><argument_list pos:line="22" pos:column="25">(<argument><expr><operator pos:line="22" pos:column="26">*<pos:position pos:line="22" pos:column="27"/></operator><name pos:line="22" pos:column="27">cppCN<pos:position pos:line="22" pos:column="32"/></name></expr></argument>, <argument><expr><operator pos:line="22" pos:column="34">*<pos:position pos:line="22" pos:column="35"/></operator><name pos:line="22" pos:column="35">cppCN<pos:position pos:line="22" pos:column="40"/></name></expr></argument>, <argument><expr><call><name pos:line="22" pos:column="42">strlen<pos:position pos:line="22" pos:column="48"/></name><argument_list pos:line="22" pos:column="48">(<argument><expr><operator pos:line="22" pos:column="49">*<pos:position pos:line="22" pos:column="50"/></operator><name pos:line="22" pos:column="50">cppCN<pos:position pos:line="22" pos:column="55"/></name></expr></argument>)<pos:position pos:line="22" pos:column="56"/></argument_list></call></expr></argument>)<pos:position pos:line="22" pos:column="57"/></argument_list></call></expr>;<pos:position pos:line="22" pos:column="58"/></expr_stmt>
<cpp:endif pos:line="23" pos:column="1">#<cpp:directive pos:line="23" pos:column="2">endif<pos:position pos:line="23" pos:column="7"/></cpp:directive></cpp:endif>
            <return pos:line="24" pos:column="13">return <expr><name pos:line="24" pos:column="20">TRUE<pos:position pos:line="24" pos:column="24"/></name></expr>;<pos:position pos:line="24" pos:column="25"/></return>
        }<pos:position pos:line="25" pos:column="10"/></block></then></if>
    }<pos:position pos:line="26" pos:column="6"/></block></for>
    <return pos:line="27" pos:column="5">return <expr><name pos:line="27" pos:column="12">FALSE<pos:position pos:line="27" pos:column="17"/></name></expr>;<pos:position pos:line="27" pos:column="18"/></return>
}<pos:position pos:line="28" pos:column="2"/></block></function></unit>

<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/httpd/gumtree/httpd_function_3156.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">authn_status<pos:position pos:line="1" pos:column="20"/></name></type> <name pos:line="1" pos:column="21">authn_dbd_password<pos:position pos:line="1" pos:column="39"/></name><parameter_list pos:line="1" pos:column="39">(<parameter><decl><type><name pos:line="1" pos:column="40">request_rec<pos:position pos:line="1" pos:column="51"/></name> <modifier pos:line="1" pos:column="52">*<pos:position pos:line="1" pos:column="53"/></modifier></type><name pos:line="1" pos:column="53">r<pos:position pos:line="1" pos:column="54"/></name></decl></parameter>, <parameter><decl><type><specifier pos:line="1" pos:column="56">const<pos:position pos:line="1" pos:column="61"/></specifier> <name pos:line="1" pos:column="62">char<pos:position pos:line="1" pos:column="66"/></name> <modifier pos:line="1" pos:column="67">*<pos:position pos:line="1" pos:column="68"/></modifier></type><name pos:line="1" pos:column="68">user<pos:position pos:line="1" pos:column="72"/></name></decl></parameter>,
                                       <parameter><decl><type><specifier pos:line="2" pos:column="40">const<pos:position pos:line="2" pos:column="45"/></specifier> <name pos:line="2" pos:column="46">char<pos:position pos:line="2" pos:column="50"/></name> <modifier pos:line="2" pos:column="51">*<pos:position pos:line="2" pos:column="52"/></modifier></type><name pos:line="2" pos:column="52">password<pos:position pos:line="2" pos:column="60"/></name></decl></parameter>)<pos:position pos:line="2" pos:column="61"/></parameter_list>
<block pos:line="3" pos:column="1">{
    <decl_stmt><decl><type><name pos:line="4" pos:column="5">apr_status_t<pos:position pos:line="4" pos:column="17"/></name></type> <name pos:line="4" pos:column="18">rv<pos:position pos:line="4" pos:column="20"/></name></decl>;<pos:position pos:line="4" pos:column="21"/></decl_stmt>
    <decl_stmt><decl><type><specifier pos:line="5" pos:column="5">const<pos:position pos:line="5" pos:column="10"/></specifier> <name pos:line="5" pos:column="11">char<pos:position pos:line="5" pos:column="15"/></name> <modifier pos:line="5" pos:column="16">*<pos:position pos:line="5" pos:column="17"/></modifier></type><name pos:line="5" pos:column="17">dbd_password<pos:position pos:line="5" pos:column="29"/></name> <init pos:line="5" pos:column="30">= <expr><name pos:line="5" pos:column="32">NULL<pos:position pos:line="5" pos:column="36"/></name></expr></init></decl>;<pos:position pos:line="5" pos:column="37"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="6" pos:column="5">apr_dbd_prepared_t<pos:position pos:line="6" pos:column="23"/></name> <modifier pos:line="6" pos:column="24">*<pos:position pos:line="6" pos:column="25"/></modifier></type><name pos:line="6" pos:column="25">statement<pos:position pos:line="6" pos:column="34"/></name></decl>;<pos:position pos:line="6" pos:column="35"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="7" pos:column="5">apr_dbd_results_t<pos:position pos:line="7" pos:column="22"/></name> <modifier pos:line="7" pos:column="23">*<pos:position pos:line="7" pos:column="24"/></modifier></type><name pos:line="7" pos:column="24">res<pos:position pos:line="7" pos:column="27"/></name> <init pos:line="7" pos:column="28">= <expr><name pos:line="7" pos:column="30">NULL<pos:position pos:line="7" pos:column="34"/></name></expr></init></decl>;<pos:position pos:line="7" pos:column="35"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="8" pos:column="5">apr_dbd_row_t<pos:position pos:line="8" pos:column="18"/></name> <modifier pos:line="8" pos:column="19">*<pos:position pos:line="8" pos:column="20"/></modifier></type><name pos:line="8" pos:column="20">row<pos:position pos:line="8" pos:column="23"/></name> <init pos:line="8" pos:column="24">= <expr><name pos:line="8" pos:column="26">NULL<pos:position pos:line="8" pos:column="30"/></name></expr></init></decl>;<pos:position pos:line="8" pos:column="31"/></decl_stmt>

    <decl_stmt><decl><type><name pos:line="10" pos:column="5">authn_dbd_conf<pos:position pos:line="10" pos:column="19"/></name> <modifier pos:line="10" pos:column="20">*<pos:position pos:line="10" pos:column="21"/></modifier></type><name pos:line="10" pos:column="21">conf<pos:position pos:line="10" pos:column="25"/></name> <init pos:line="10" pos:column="26">= <expr><call><name pos:line="10" pos:column="28">ap_get_module_config<pos:position pos:line="10" pos:column="48"/></name><argument_list pos:line="10" pos:column="48">(<argument><expr><name><name pos:line="10" pos:column="49">r<pos:position pos:line="10" pos:column="50"/></name><operator pos:line="10" pos:column="50">-&gt;<pos:position pos:line="10" pos:column="55"/></operator><name pos:line="10" pos:column="52">per_dir_config<pos:position pos:line="10" pos:column="66"/></name></name></expr></argument>,
                                                <argument><expr><operator pos:line="11" pos:column="49">&amp;<pos:position pos:line="11" pos:column="54"/></operator><name pos:line="11" pos:column="50">authn_dbd_module<pos:position pos:line="11" pos:column="66"/></name></expr></argument>)<pos:position pos:line="11" pos:column="67"/></argument_list></call></expr></init></decl>;<pos:position pos:line="11" pos:column="68"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="12" pos:column="5">ap_dbd_t<pos:position pos:line="12" pos:column="13"/></name> <modifier pos:line="12" pos:column="14">*<pos:position pos:line="12" pos:column="15"/></modifier></type><name pos:line="12" pos:column="15">dbd<pos:position pos:line="12" pos:column="18"/></name> <init pos:line="12" pos:column="19">= <expr><call><name pos:line="12" pos:column="21">authn_dbd_acquire_fn<pos:position pos:line="12" pos:column="41"/></name><argument_list pos:line="12" pos:column="41">(<argument><expr><name pos:line="12" pos:column="42">r<pos:position pos:line="12" pos:column="43"/></name></expr></argument>)<pos:position pos:line="12" pos:column="44"/></argument_list></call></expr></init></decl>;<pos:position pos:line="12" pos:column="45"/></decl_stmt>
    <if pos:line="13" pos:column="5">if <condition pos:line="13" pos:column="8">(<expr><name pos:line="13" pos:column="9">dbd<pos:position pos:line="13" pos:column="12"/></name> <operator pos:line="13" pos:column="13">==<pos:position pos:line="13" pos:column="15"/></operator> <name pos:line="13" pos:column="16">NULL<pos:position pos:line="13" pos:column="20"/></name></expr>)<pos:position pos:line="13" pos:column="21"/></condition><then pos:line="13" pos:column="21"> <block pos:line="13" pos:column="22">{
        <expr_stmt><expr><call><name pos:line="14" pos:column="9">ap_log_rerror<pos:position pos:line="14" pos:column="22"/></name><argument_list pos:line="14" pos:column="22">(<argument><expr><name pos:line="14" pos:column="23">APLOG_MARK<pos:position pos:line="14" pos:column="33"/></name></expr></argument>, <argument><expr><name pos:line="14" pos:column="35">APLOG_ERR<pos:position pos:line="14" pos:column="44"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="14" pos:column="46">0<pos:position pos:line="14" pos:column="47"/></literal></expr></argument>, <argument><expr><name pos:line="14" pos:column="49">r<pos:position pos:line="14" pos:column="50"/></name></expr></argument>,
                      <argument><expr><literal type="string" pos:line="15" pos:column="23">"Failed to acquire database connection to look up "<pos:position pos:line="15" pos:column="74"/></literal>
                      <literal type="string" pos:line="16" pos:column="23">"user '%s'"<pos:position pos:line="16" pos:column="34"/></literal></expr></argument>, <argument><expr><name pos:line="16" pos:column="36">user<pos:position pos:line="16" pos:column="40"/></name></expr></argument>)<pos:position pos:line="16" pos:column="41"/></argument_list></call></expr>;<pos:position pos:line="16" pos:column="42"/></expr_stmt>
        <return pos:line="17" pos:column="9">return <expr><name pos:line="17" pos:column="16">AUTH_GENERAL_ERROR<pos:position pos:line="17" pos:column="34"/></name></expr>;<pos:position pos:line="17" pos:column="35"/></return>
    }<pos:position pos:line="18" pos:column="6"/></block></then></if>

    <if pos:line="20" pos:column="5">if <condition pos:line="20" pos:column="8">(<expr><name><name pos:line="20" pos:column="9">conf<pos:position pos:line="20" pos:column="13"/></name><operator pos:line="20" pos:column="13">-&gt;<pos:position pos:line="20" pos:column="18"/></operator><name pos:line="20" pos:column="15">user<pos:position pos:line="20" pos:column="19"/></name></name> <operator pos:line="20" pos:column="20">==<pos:position pos:line="20" pos:column="22"/></operator> <name pos:line="20" pos:column="23">NULL<pos:position pos:line="20" pos:column="27"/></name></expr>)<pos:position pos:line="20" pos:column="28"/></condition><then pos:line="20" pos:column="28"> <block pos:line="20" pos:column="29">{
        <expr_stmt><expr><call><name pos:line="21" pos:column="9">ap_log_rerror<pos:position pos:line="21" pos:column="22"/></name><argument_list pos:line="21" pos:column="22">(<argument><expr><name pos:line="21" pos:column="23">APLOG_MARK<pos:position pos:line="21" pos:column="33"/></name></expr></argument>, <argument><expr><name pos:line="21" pos:column="35">APLOG_ERR<pos:position pos:line="21" pos:column="44"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="21" pos:column="46">0<pos:position pos:line="21" pos:column="47"/></literal></expr></argument>, <argument><expr><name pos:line="21" pos:column="49">r<pos:position pos:line="21" pos:column="50"/></name></expr></argument>,
                      <argument><expr><literal type="string" pos:line="22" pos:column="23">"No AuthDBDUserPWQuery has been specified"<pos:position pos:line="22" pos:column="65"/></literal></expr></argument>)<pos:position pos:line="22" pos:column="66"/></argument_list></call></expr>;<pos:position pos:line="22" pos:column="67"/></expr_stmt>
        <return pos:line="23" pos:column="9">return <expr><name pos:line="23" pos:column="16">AUTH_GENERAL_ERROR<pos:position pos:line="23" pos:column="34"/></name></expr>;<pos:position pos:line="23" pos:column="35"/></return>
    }<pos:position pos:line="24" pos:column="6"/></block></then></if>

    <expr_stmt><expr><name pos:line="26" pos:column="5">statement<pos:position pos:line="26" pos:column="14"/></name> <operator pos:line="26" pos:column="15">=<pos:position pos:line="26" pos:column="16"/></operator> <call><name pos:line="26" pos:column="17">apr_hash_get<pos:position pos:line="26" pos:column="29"/></name><argument_list pos:line="26" pos:column="29">(<argument><expr><name><name pos:line="26" pos:column="30">dbd<pos:position pos:line="26" pos:column="33"/></name><operator pos:line="26" pos:column="33">-&gt;<pos:position pos:line="26" pos:column="38"/></operator><name pos:line="26" pos:column="35">prepared<pos:position pos:line="26" pos:column="43"/></name></name></expr></argument>, <argument><expr><name><name pos:line="26" pos:column="45">conf<pos:position pos:line="26" pos:column="49"/></name><operator pos:line="26" pos:column="49">-&gt;<pos:position pos:line="26" pos:column="54"/></operator><name pos:line="26" pos:column="51">user<pos:position pos:line="26" pos:column="55"/></name></name></expr></argument>, <argument><expr><name pos:line="26" pos:column="57">APR_HASH_KEY_STRING<pos:position pos:line="26" pos:column="76"/></name></expr></argument>)<pos:position pos:line="26" pos:column="77"/></argument_list></call></expr>;<pos:position pos:line="26" pos:column="78"/></expr_stmt>
    <if pos:line="27" pos:column="5">if <condition pos:line="27" pos:column="8">(<expr><name pos:line="27" pos:column="9">statement<pos:position pos:line="27" pos:column="18"/></name> <operator pos:line="27" pos:column="19">==<pos:position pos:line="27" pos:column="21"/></operator> <name pos:line="27" pos:column="22">NULL<pos:position pos:line="27" pos:column="26"/></name></expr>)<pos:position pos:line="27" pos:column="27"/></condition><then pos:line="27" pos:column="27"> <block pos:line="27" pos:column="28">{
        <expr_stmt><expr><call><name pos:line="28" pos:column="9">ap_log_rerror<pos:position pos:line="28" pos:column="22"/></name><argument_list pos:line="28" pos:column="22">(<argument><expr><name pos:line="28" pos:column="23">APLOG_MARK<pos:position pos:line="28" pos:column="33"/></name></expr></argument>, <argument><expr><name pos:line="28" pos:column="35">APLOG_ERR<pos:position pos:line="28" pos:column="44"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="28" pos:column="46">0<pos:position pos:line="28" pos:column="47"/></literal></expr></argument>, <argument><expr><name pos:line="28" pos:column="49">r<pos:position pos:line="28" pos:column="50"/></name></expr></argument>,
                      <argument><expr><literal type="string" pos:line="29" pos:column="23">"A prepared statement could not be found for "<pos:position pos:line="29" pos:column="69"/></literal>
                      <literal type="string" pos:line="30" pos:column="23">"AuthDBDUserPWQuery with the key '%s'"<pos:position pos:line="30" pos:column="61"/></literal></expr></argument>, <argument><expr><name><name pos:line="30" pos:column="63">conf<pos:position pos:line="30" pos:column="67"/></name><operator pos:line="30" pos:column="67">-&gt;<pos:position pos:line="30" pos:column="72"/></operator><name pos:line="30" pos:column="69">user<pos:position pos:line="30" pos:column="73"/></name></name></expr></argument>)<pos:position pos:line="30" pos:column="74"/></argument_list></call></expr>;<pos:position pos:line="30" pos:column="75"/></expr_stmt>
        <return pos:line="31" pos:column="9">return <expr><name pos:line="31" pos:column="16">AUTH_GENERAL_ERROR<pos:position pos:line="31" pos:column="34"/></name></expr>;<pos:position pos:line="31" pos:column="35"/></return>
    }<pos:position pos:line="32" pos:column="6"/></block></then></if>
    <if pos:line="33" pos:column="5">if <condition pos:line="33" pos:column="8">(<expr><call><name pos:line="33" pos:column="9">apr_dbd_pvselect<pos:position pos:line="33" pos:column="25"/></name><argument_list pos:line="33" pos:column="25">(<argument><expr><name><name pos:line="33" pos:column="26">dbd<pos:position pos:line="33" pos:column="29"/></name><operator pos:line="33" pos:column="29">-&gt;<pos:position pos:line="33" pos:column="34"/></operator><name pos:line="33" pos:column="31">driver<pos:position pos:line="33" pos:column="37"/></name></name></expr></argument>, <argument><expr><name><name pos:line="33" pos:column="39">r<pos:position pos:line="33" pos:column="40"/></name><operator pos:line="33" pos:column="40">-&gt;<pos:position pos:line="33" pos:column="45"/></operator><name pos:line="33" pos:column="42">pool<pos:position pos:line="33" pos:column="46"/></name></name></expr></argument>, <argument><expr><name><name pos:line="33" pos:column="48">dbd<pos:position pos:line="33" pos:column="51"/></name><operator pos:line="33" pos:column="51">-&gt;<pos:position pos:line="33" pos:column="56"/></operator><name pos:line="33" pos:column="53">handle<pos:position pos:line="33" pos:column="59"/></name></name></expr></argument>, <argument><expr><operator pos:line="33" pos:column="61">&amp;<pos:position pos:line="33" pos:column="66"/></operator><name pos:line="33" pos:column="62">res<pos:position pos:line="33" pos:column="65"/></name></expr></argument>, <argument><expr><name pos:line="33" pos:column="67">statement<pos:position pos:line="33" pos:column="76"/></name></expr></argument>,
                              <argument><expr><literal type="number" pos:line="34" pos:column="31">0<pos:position pos:line="34" pos:column="32"/></literal></expr></argument>, <argument><expr><name pos:line="34" pos:column="34">user<pos:position pos:line="34" pos:column="38"/></name></expr></argument>, <argument><expr><name pos:line="34" pos:column="40">NULL<pos:position pos:line="34" pos:column="44"/></name></expr></argument>)<pos:position pos:line="34" pos:column="45"/></argument_list></call> <operator pos:line="34" pos:column="46">!=<pos:position pos:line="34" pos:column="48"/></operator> <literal type="number" pos:line="34" pos:column="49">0<pos:position pos:line="34" pos:column="50"/></literal></expr>)<pos:position pos:line="34" pos:column="51"/></condition><then pos:line="34" pos:column="51"> <block pos:line="34" pos:column="52">{
        <expr_stmt><expr><call><name pos:line="35" pos:column="9">ap_log_rerror<pos:position pos:line="35" pos:column="22"/></name><argument_list pos:line="35" pos:column="22">(<argument><expr><name pos:line="35" pos:column="23">APLOG_MARK<pos:position pos:line="35" pos:column="33"/></name></expr></argument>, <argument><expr><name pos:line="35" pos:column="35">APLOG_ERR<pos:position pos:line="35" pos:column="44"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="35" pos:column="46">0<pos:position pos:line="35" pos:column="47"/></literal></expr></argument>, <argument><expr><name pos:line="35" pos:column="49">r<pos:position pos:line="35" pos:column="50"/></name></expr></argument>,
                      <argument><expr><literal type="string" pos:line="36" pos:column="23">"Query execution error looking up '%s' "<pos:position pos:line="36" pos:column="63"/></literal>
                      <literal type="string" pos:line="37" pos:column="23">"in database"<pos:position pos:line="37" pos:column="36"/></literal></expr></argument>, <argument><expr><name pos:line="37" pos:column="38">user<pos:position pos:line="37" pos:column="42"/></name></expr></argument>)<pos:position pos:line="37" pos:column="43"/></argument_list></call></expr>;<pos:position pos:line="37" pos:column="44"/></expr_stmt>
        <return pos:line="38" pos:column="9">return <expr><name pos:line="38" pos:column="16">AUTH_GENERAL_ERROR<pos:position pos:line="38" pos:column="34"/></name></expr>;<pos:position pos:line="38" pos:column="35"/></return>
    }<pos:position pos:line="39" pos:column="6"/></block></then></if>
    <for pos:line="40" pos:column="5">for <control pos:line="40" pos:column="9">(<init><expr><name pos:line="40" pos:column="10">rv<pos:position pos:line="40" pos:column="12"/></name> <operator pos:line="40" pos:column="13">=<pos:position pos:line="40" pos:column="14"/></operator> <call><name pos:line="40" pos:column="15">apr_dbd_get_row<pos:position pos:line="40" pos:column="30"/></name><argument_list pos:line="40" pos:column="30">(<argument><expr><name><name pos:line="40" pos:column="31">dbd<pos:position pos:line="40" pos:column="34"/></name><operator pos:line="40" pos:column="34">-&gt;<pos:position pos:line="40" pos:column="39"/></operator><name pos:line="40" pos:column="36">driver<pos:position pos:line="40" pos:column="42"/></name></name></expr></argument>, <argument><expr><name><name pos:line="40" pos:column="44">r<pos:position pos:line="40" pos:column="45"/></name><operator pos:line="40" pos:column="45">-&gt;<pos:position pos:line="40" pos:column="50"/></operator><name pos:line="40" pos:column="47">pool<pos:position pos:line="40" pos:column="51"/></name></name></expr></argument>, <argument><expr><name pos:line="40" pos:column="53">res<pos:position pos:line="40" pos:column="56"/></name></expr></argument>, <argument><expr><operator pos:line="40" pos:column="58">&amp;<pos:position pos:line="40" pos:column="63"/></operator><name pos:line="40" pos:column="59">row<pos:position pos:line="40" pos:column="62"/></name></expr></argument>, <argument><expr><operator pos:line="40" pos:column="64">-<pos:position pos:line="40" pos:column="65"/></operator><literal type="number" pos:line="40" pos:column="65">1<pos:position pos:line="40" pos:column="66"/></literal></expr></argument>)<pos:position pos:line="40" pos:column="67"/></argument_list></call></expr>;<pos:position pos:line="40" pos:column="68"/></init>
         <condition><expr><name pos:line="41" pos:column="10">rv<pos:position pos:line="41" pos:column="12"/></name> <operator pos:line="41" pos:column="13">!=<pos:position pos:line="41" pos:column="15"/></operator> <operator pos:line="41" pos:column="16">-<pos:position pos:line="41" pos:column="17"/></operator><literal type="number" pos:line="41" pos:column="17">1<pos:position pos:line="41" pos:column="18"/></literal></expr>;<pos:position pos:line="41" pos:column="19"/></condition>
         <incr><expr><name pos:line="42" pos:column="10">rv<pos:position pos:line="42" pos:column="12"/></name> <operator pos:line="42" pos:column="13">=<pos:position pos:line="42" pos:column="14"/></operator> <call><name pos:line="42" pos:column="15">apr_dbd_get_row<pos:position pos:line="42" pos:column="30"/></name><argument_list pos:line="42" pos:column="30">(<argument><expr><name><name pos:line="42" pos:column="31">dbd<pos:position pos:line="42" pos:column="34"/></name><operator pos:line="42" pos:column="34">-&gt;<pos:position pos:line="42" pos:column="39"/></operator><name pos:line="42" pos:column="36">driver<pos:position pos:line="42" pos:column="42"/></name></name></expr></argument>, <argument><expr><name><name pos:line="42" pos:column="44">r<pos:position pos:line="42" pos:column="45"/></name><operator pos:line="42" pos:column="45">-&gt;<pos:position pos:line="42" pos:column="50"/></operator><name pos:line="42" pos:column="47">pool<pos:position pos:line="42" pos:column="51"/></name></name></expr></argument>, <argument><expr><name pos:line="42" pos:column="53">res<pos:position pos:line="42" pos:column="56"/></name></expr></argument>, <argument><expr><operator pos:line="42" pos:column="58">&amp;<pos:position pos:line="42" pos:column="63"/></operator><name pos:line="42" pos:column="59">row<pos:position pos:line="42" pos:column="62"/></name></expr></argument>, <argument><expr><operator pos:line="42" pos:column="64">-<pos:position pos:line="42" pos:column="65"/></operator><literal type="number" pos:line="42" pos:column="65">1<pos:position pos:line="42" pos:column="66"/></literal></expr></argument>)<pos:position pos:line="42" pos:column="67"/></argument_list></call></expr></incr>)<pos:position pos:line="42" pos:column="68"/></control> <block pos:line="42" pos:column="69">{
        <if pos:line="43" pos:column="9">if <condition pos:line="43" pos:column="12">(<expr><name pos:line="43" pos:column="13">rv<pos:position pos:line="43" pos:column="15"/></name> <operator pos:line="43" pos:column="16">!=<pos:position pos:line="43" pos:column="18"/></operator> <literal type="number" pos:line="43" pos:column="19">0<pos:position pos:line="43" pos:column="20"/></literal></expr>)<pos:position pos:line="43" pos:column="21"/></condition><then pos:line="43" pos:column="21"> <block pos:line="43" pos:column="22">{
            <expr_stmt><expr><call><name pos:line="44" pos:column="13">ap_log_rerror<pos:position pos:line="44" pos:column="26"/></name><argument_list pos:line="44" pos:column="26">(<argument><expr><name pos:line="44" pos:column="27">APLOG_MARK<pos:position pos:line="44" pos:column="37"/></name></expr></argument>, <argument><expr><name pos:line="44" pos:column="39">APLOG_ERR<pos:position pos:line="44" pos:column="48"/></name></expr></argument>, <argument><expr><name pos:line="44" pos:column="50">rv<pos:position pos:line="44" pos:column="52"/></name></expr></argument>, <argument><expr><name pos:line="44" pos:column="54">r<pos:position pos:line="44" pos:column="55"/></name></expr></argument>,
                          <argument><expr><literal type="string" pos:line="45" pos:column="27">"Error retrieving results while looking up '%s' "<pos:position pos:line="45" pos:column="76"/></literal>
                          <literal type="string" pos:line="46" pos:column="27">"in database"<pos:position pos:line="46" pos:column="40"/></literal></expr></argument>, <argument><expr><name pos:line="46" pos:column="42">user<pos:position pos:line="46" pos:column="46"/></name></expr></argument>)<pos:position pos:line="46" pos:column="47"/></argument_list></call></expr>;<pos:position pos:line="46" pos:column="48"/></expr_stmt>
            <return pos:line="47" pos:column="13">return <expr><name pos:line="47" pos:column="20">AUTH_GENERAL_ERROR<pos:position pos:line="47" pos:column="38"/></name></expr>;<pos:position pos:line="47" pos:column="39"/></return>
        }<pos:position pos:line="48" pos:column="10"/></block></then></if>
        <if pos:line="49" pos:column="9">if <condition pos:line="49" pos:column="12">(<expr><name pos:line="49" pos:column="13">dbd_password<pos:position pos:line="49" pos:column="25"/></name> <operator pos:line="49" pos:column="26">==<pos:position pos:line="49" pos:column="28"/></operator> <name pos:line="49" pos:column="29">NULL<pos:position pos:line="49" pos:column="33"/></name></expr>)<pos:position pos:line="49" pos:column="34"/></condition><then pos:line="49" pos:column="34"> <block pos:line="49" pos:column="35">{
<cpp:if pos:line="50" pos:column="1">#<cpp:directive pos:line="50" pos:column="2">if<pos:position pos:line="50" pos:column="4"/></cpp:directive> <expr><name pos:line="50" pos:column="5">APU_MAJOR_VERSION<pos:position pos:line="50" pos:column="22"/></name> <operator pos:line="50" pos:column="23">&gt;<pos:position pos:line="50" pos:column="27"/></operator> <literal type="number" pos:line="50" pos:column="25">1<pos:position pos:line="50" pos:column="26"/></literal> <operator pos:line="50" pos:column="27">||<pos:position pos:line="50" pos:column="29"/></operator> <operator pos:line="50" pos:column="30">(<pos:position pos:line="50" pos:column="31"/></operator><name pos:line="50" pos:column="31">APU_MAJOR_VERSION<pos:position pos:line="50" pos:column="48"/></name> <operator pos:line="50" pos:column="49">==<pos:position pos:line="50" pos:column="51"/></operator> <literal type="number" pos:line="50" pos:column="52">1<pos:position pos:line="50" pos:column="53"/></literal> <operator pos:line="50" pos:column="54">&amp;&amp;<pos:position pos:line="50" pos:column="64"/></operator> <name pos:line="50" pos:column="57">APU_MINOR_VERSION<pos:position pos:line="50" pos:column="74"/></name> <operator pos:line="50" pos:column="75">&gt;=<pos:position pos:line="50" pos:column="80"/></operator> <literal type="number" pos:line="50" pos:column="78">3<pos:position pos:line="50" pos:column="79"/></literal><operator pos:line="50" pos:column="79">)<pos:position pos:line="50" pos:column="80"/></operator></expr></cpp:if>
            <comment type="block" pos:line="51" pos:column="13">/* add the rest of the columns to the environment */</comment>
            <decl_stmt><decl><type><name pos:line="52" pos:column="13">int<pos:position pos:line="52" pos:column="16"/></name></type> <name pos:line="52" pos:column="17">i<pos:position pos:line="52" pos:column="18"/></name> <init pos:line="52" pos:column="19">= <expr><literal type="number" pos:line="52" pos:column="21">1<pos:position pos:line="52" pos:column="22"/></literal></expr></init></decl>;<pos:position pos:line="52" pos:column="23"/></decl_stmt>
            <decl_stmt><decl><type><specifier pos:line="53" pos:column="13">const<pos:position pos:line="53" pos:column="18"/></specifier> <name pos:line="53" pos:column="19">char<pos:position pos:line="53" pos:column="23"/></name> <modifier pos:line="53" pos:column="24">*<pos:position pos:line="53" pos:column="25"/></modifier></type><name pos:line="53" pos:column="25">name<pos:position pos:line="53" pos:column="29"/></name></decl>;<pos:position pos:line="53" pos:column="30"/></decl_stmt>
            <for pos:line="54" pos:column="13">for <control pos:line="54" pos:column="17">(<init><expr><name pos:line="54" pos:column="18">name<pos:position pos:line="54" pos:column="22"/></name> <operator pos:line="54" pos:column="23">=<pos:position pos:line="54" pos:column="24"/></operator> <call><name pos:line="54" pos:column="25">apr_dbd_get_name<pos:position pos:line="54" pos:column="41"/></name><argument_list pos:line="54" pos:column="41">(<argument><expr><name><name pos:line="54" pos:column="42">dbd<pos:position pos:line="54" pos:column="45"/></name><operator pos:line="54" pos:column="45">-&gt;<pos:position pos:line="54" pos:column="50"/></operator><name pos:line="54" pos:column="47">driver<pos:position pos:line="54" pos:column="53"/></name></name></expr></argument>, <argument><expr><name pos:line="54" pos:column="55">res<pos:position pos:line="54" pos:column="58"/></name></expr></argument>, <argument><expr><name pos:line="54" pos:column="60">i<pos:position pos:line="54" pos:column="61"/></name></expr></argument>)<pos:position pos:line="54" pos:column="62"/></argument_list></call></expr>;<pos:position pos:line="54" pos:column="63"/></init>
                 <condition><expr><name pos:line="55" pos:column="18">name<pos:position pos:line="55" pos:column="22"/></name> <operator pos:line="55" pos:column="23">!=<pos:position pos:line="55" pos:column="25"/></operator> <name pos:line="55" pos:column="26">NULL<pos:position pos:line="55" pos:column="30"/></name></expr>;<pos:position pos:line="55" pos:column="31"/></condition>
                 <incr><expr><name pos:line="56" pos:column="18">name<pos:position pos:line="56" pos:column="22"/></name> <operator pos:line="56" pos:column="23">=<pos:position pos:line="56" pos:column="24"/></operator> <call><name pos:line="56" pos:column="25">apr_dbd_get_name<pos:position pos:line="56" pos:column="41"/></name><argument_list pos:line="56" pos:column="41">(<argument><expr><name><name pos:line="56" pos:column="42">dbd<pos:position pos:line="56" pos:column="45"/></name><operator pos:line="56" pos:column="45">-&gt;<pos:position pos:line="56" pos:column="50"/></operator><name pos:line="56" pos:column="47">driver<pos:position pos:line="56" pos:column="53"/></name></name></expr></argument>, <argument><expr><name pos:line="56" pos:column="55">res<pos:position pos:line="56" pos:column="58"/></name></expr></argument>, <argument><expr><name pos:line="56" pos:column="60">i<pos:position pos:line="56" pos:column="61"/></name></expr></argument>)<pos:position pos:line="56" pos:column="62"/></argument_list></call></expr></incr>)<pos:position pos:line="56" pos:column="63"/></control> <block pos:line="56" pos:column="64">{

                <decl_stmt><decl><type><name pos:line="58" pos:column="17">char<pos:position pos:line="58" pos:column="21"/></name> <modifier pos:line="58" pos:column="22">*<pos:position pos:line="58" pos:column="23"/></modifier></type><name pos:line="58" pos:column="23">str<pos:position pos:line="58" pos:column="26"/></name> <init pos:line="58" pos:column="27">= <expr><call><name pos:line="58" pos:column="29">apr_pstrcat<pos:position pos:line="58" pos:column="40"/></name><argument_list pos:line="58" pos:column="40">(<argument><expr><name><name pos:line="58" pos:column="41">r<pos:position pos:line="58" pos:column="42"/></name><operator pos:line="58" pos:column="42">-&gt;<pos:position pos:line="58" pos:column="47"/></operator><name pos:line="58" pos:column="44">pool<pos:position pos:line="58" pos:column="48"/></name></name></expr></argument>, <argument><expr><name pos:line="58" pos:column="50">AUTHN_PREFIX<pos:position pos:line="58" pos:column="62"/></name></expr></argument>,
                                        <argument><expr><name pos:line="59" pos:column="41">name<pos:position pos:line="59" pos:column="45"/></name></expr></argument>,
                                        <argument><expr><name pos:line="60" pos:column="41">NULL<pos:position pos:line="60" pos:column="45"/></name></expr></argument>)<pos:position pos:line="60" pos:column="46"/></argument_list></call></expr></init></decl>;<pos:position pos:line="60" pos:column="47"/></decl_stmt>
                <decl_stmt><decl><type><name pos:line="61" pos:column="17">int<pos:position pos:line="61" pos:column="20"/></name></type> <name pos:line="61" pos:column="21">j<pos:position pos:line="61" pos:column="22"/></name> <init pos:line="61" pos:column="23">= <expr><sizeof pos:line="61" pos:column="25">sizeof<argument_list pos:line="61" pos:column="31">(<argument><expr><name pos:line="61" pos:column="32">AUTHN_PREFIX<pos:position pos:line="61" pos:column="44"/></name></expr></argument>)<pos:position pos:line="61" pos:column="45"/></argument_list></sizeof><operator pos:line="61" pos:column="45">-<pos:position pos:line="61" pos:column="46"/></operator><literal type="number" pos:line="61" pos:column="46">1<pos:position pos:line="61" pos:column="47"/></literal></expr></init></decl>;<pos:position pos:line="61" pos:column="48"/></decl_stmt> <comment type="block" pos:line="61" pos:column="49">/* string length of "AUTHENTICATE_", excluding the trailing NIL */</comment>
                <while pos:line="62" pos:column="17">while <condition pos:line="62" pos:column="23">(<expr><name><name pos:line="62" pos:column="24">str<pos:position pos:line="62" pos:column="27"/></name><index pos:line="62" pos:column="27">[<expr><name pos:line="62" pos:column="28">j<pos:position pos:line="62" pos:column="29"/></name></expr>]<pos:position pos:line="62" pos:column="30"/></index></name></expr>)<pos:position pos:line="62" pos:column="31"/></condition> <block pos:line="62" pos:column="32">{
                    <if pos:line="63" pos:column="21">if <condition pos:line="63" pos:column="24">(<expr><operator pos:line="63" pos:column="25">!<pos:position pos:line="63" pos:column="26"/></operator><call><name pos:line="63" pos:column="26">apr_isalnum<pos:position pos:line="63" pos:column="37"/></name><argument_list pos:line="63" pos:column="37">(<argument><expr><name><name pos:line="63" pos:column="38">str<pos:position pos:line="63" pos:column="41"/></name><index pos:line="63" pos:column="41">[<expr><name pos:line="63" pos:column="42">j<pos:position pos:line="63" pos:column="43"/></name></expr>]<pos:position pos:line="63" pos:column="44"/></index></name></expr></argument>)<pos:position pos:line="63" pos:column="45"/></argument_list></call></expr>)<pos:position pos:line="63" pos:column="46"/></condition><then pos:line="63" pos:column="46"> <block pos:line="63" pos:column="47">{
                        <expr_stmt><expr><name><name pos:line="64" pos:column="25">str<pos:position pos:line="64" pos:column="28"/></name><index pos:line="64" pos:column="28">[<expr><name pos:line="64" pos:column="29">j<pos:position pos:line="64" pos:column="30"/></name></expr>]<pos:position pos:line="64" pos:column="31"/></index></name> <operator pos:line="64" pos:column="32">=<pos:position pos:line="64" pos:column="33"/></operator> <literal type="char" pos:line="64" pos:column="34">'_'<pos:position pos:line="64" pos:column="37"/></literal></expr>;<pos:position pos:line="64" pos:column="38"/></expr_stmt>
                    }<pos:position pos:line="65" pos:column="22"/></block></then>
                    <else pos:line="66" pos:column="21">else <block pos:line="66" pos:column="26">{
                        <expr_stmt><expr><name><name pos:line="67" pos:column="25">str<pos:position pos:line="67" pos:column="28"/></name><index pos:line="67" pos:column="28">[<expr><name pos:line="67" pos:column="29">j<pos:position pos:line="67" pos:column="30"/></name></expr>]<pos:position pos:line="67" pos:column="31"/></index></name> <operator pos:line="67" pos:column="32">=<pos:position pos:line="67" pos:column="33"/></operator> <call><name pos:line="67" pos:column="34">apr_toupper<pos:position pos:line="67" pos:column="45"/></name><argument_list pos:line="67" pos:column="45">(<argument><expr><name><name pos:line="67" pos:column="46">str<pos:position pos:line="67" pos:column="49"/></name><index pos:line="67" pos:column="49">[<expr><name pos:line="67" pos:column="50">j<pos:position pos:line="67" pos:column="51"/></name></expr>]<pos:position pos:line="67" pos:column="52"/></index></name></expr></argument>)<pos:position pos:line="67" pos:column="53"/></argument_list></call></expr>;<pos:position pos:line="67" pos:column="54"/></expr_stmt>
                    }<pos:position pos:line="68" pos:column="22"/></block></else></if>
                    <expr_stmt><expr><name pos:line="69" pos:column="21">j<pos:position pos:line="69" pos:column="22"/></name><operator pos:line="69" pos:column="22">++<pos:position pos:line="69" pos:column="24"/></operator></expr>;<pos:position pos:line="69" pos:column="25"/></expr_stmt>
                }<pos:position pos:line="70" pos:column="18"/></block></while>
                <expr_stmt><expr><call><name pos:line="71" pos:column="17">apr_table_set<pos:position pos:line="71" pos:column="30"/></name><argument_list pos:line="71" pos:column="30">(<argument><expr><name><name pos:line="71" pos:column="31">r<pos:position pos:line="71" pos:column="32"/></name><operator pos:line="71" pos:column="32">-&gt;<pos:position pos:line="71" pos:column="37"/></operator><name pos:line="71" pos:column="34">subprocess_env<pos:position pos:line="71" pos:column="48"/></name></name></expr></argument>, <argument><expr><name pos:line="71" pos:column="50">str<pos:position pos:line="71" pos:column="53"/></name></expr></argument>,
                              <argument><expr><call><name pos:line="72" pos:column="31">apr_dbd_get_entry<pos:position pos:line="72" pos:column="48"/></name><argument_list pos:line="72" pos:column="48">(<argument><expr><name><name pos:line="72" pos:column="49">dbd<pos:position pos:line="72" pos:column="52"/></name><operator pos:line="72" pos:column="52">-&gt;<pos:position pos:line="72" pos:column="57"/></operator><name pos:line="72" pos:column="54">driver<pos:position pos:line="72" pos:column="60"/></name></name></expr></argument>, <argument><expr><name pos:line="72" pos:column="62">row<pos:position pos:line="72" pos:column="65"/></name></expr></argument>, <argument><expr><name pos:line="72" pos:column="67">i<pos:position pos:line="72" pos:column="68"/></name></expr></argument>)<pos:position pos:line="72" pos:column="69"/></argument_list></call></expr></argument>)<pos:position pos:line="72" pos:column="70"/></argument_list></call></expr>;<pos:position pos:line="72" pos:column="71"/></expr_stmt>
                <expr_stmt><expr><name pos:line="73" pos:column="17">i<pos:position pos:line="73" pos:column="18"/></name><operator pos:line="73" pos:column="18">++<pos:position pos:line="73" pos:column="20"/></operator></expr>;<pos:position pos:line="73" pos:column="21"/></expr_stmt>
            }<pos:position pos:line="74" pos:column="14"/></block></for>
<cpp:endif pos:line="75" pos:column="1">#<cpp:directive pos:line="75" pos:column="2">endif<pos:position pos:line="75" pos:column="7"/></cpp:directive></cpp:endif>
            <expr_stmt><expr><name pos:line="76" pos:column="13">dbd_password<pos:position pos:line="76" pos:column="25"/></name> <operator pos:line="76" pos:column="26">=<pos:position pos:line="76" pos:column="27"/></operator> <call><name pos:line="76" pos:column="28">apr_dbd_get_entry<pos:position pos:line="76" pos:column="45"/></name><argument_list pos:line="76" pos:column="45">(<argument><expr><name><name pos:line="76" pos:column="46">dbd<pos:position pos:line="76" pos:column="49"/></name><operator pos:line="76" pos:column="49">-&gt;<pos:position pos:line="76" pos:column="54"/></operator><name pos:line="76" pos:column="51">driver<pos:position pos:line="76" pos:column="57"/></name></name></expr></argument>, <argument><expr><name pos:line="76" pos:column="59">row<pos:position pos:line="76" pos:column="62"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="76" pos:column="64">0<pos:position pos:line="76" pos:column="65"/></literal></expr></argument>)<pos:position pos:line="76" pos:column="66"/></argument_list></call></expr>;<pos:position pos:line="76" pos:column="67"/></expr_stmt>
        }<pos:position pos:line="77" pos:column="10"/></block></then></if>
        <comment type="block" pos:line="78" pos:column="9">/* we can't break out here or row won't get cleaned up */</comment>
    }<pos:position pos:line="79" pos:column="6"/></block></for>

    <if pos:line="81" pos:column="5">if <condition pos:line="81" pos:column="8">(<expr><operator pos:line="81" pos:column="9">!<pos:position pos:line="81" pos:column="10"/></operator><name pos:line="81" pos:column="10">dbd_password<pos:position pos:line="81" pos:column="22"/></name></expr>)<pos:position pos:line="81" pos:column="23"/></condition><then pos:line="81" pos:column="23"> <block pos:line="81" pos:column="24">{
        <return pos:line="82" pos:column="9">return <expr><name pos:line="82" pos:column="16">AUTH_USER_NOT_FOUND<pos:position pos:line="82" pos:column="35"/></name></expr>;<pos:position pos:line="82" pos:column="36"/></return>
    }<pos:position pos:line="83" pos:column="6"/></block></then></if>
    <expr_stmt><expr><call><name pos:line="84" pos:column="5">AUTHN_CACHE_STORE<pos:position pos:line="84" pos:column="22"/></name><argument_list pos:line="84" pos:column="22">(<argument><expr><name pos:line="84" pos:column="23">r<pos:position pos:line="84" pos:column="24"/></name></expr></argument>, <argument><expr><name pos:line="84" pos:column="26">user<pos:position pos:line="84" pos:column="30"/></name></expr></argument>, <argument><expr><name pos:line="84" pos:column="32">NULL<pos:position pos:line="84" pos:column="36"/></name></expr></argument>, <argument><expr><name pos:line="84" pos:column="38">dbd_password<pos:position pos:line="84" pos:column="50"/></name></expr></argument>)<pos:position pos:line="84" pos:column="51"/></argument_list></call></expr>;<pos:position pos:line="84" pos:column="52"/></expr_stmt>

    <expr_stmt><expr><name pos:line="86" pos:column="5">rv<pos:position pos:line="86" pos:column="7"/></name> <operator pos:line="86" pos:column="8">=<pos:position pos:line="86" pos:column="9"/></operator> <call><name pos:line="86" pos:column="10">apr_password_validate<pos:position pos:line="86" pos:column="31"/></name><argument_list pos:line="86" pos:column="31">(<argument><expr><name pos:line="86" pos:column="32">password<pos:position pos:line="86" pos:column="40"/></name></expr></argument>, <argument><expr><name pos:line="86" pos:column="42">dbd_password<pos:position pos:line="86" pos:column="54"/></name></expr></argument>)<pos:position pos:line="86" pos:column="55"/></argument_list></call></expr>;<pos:position pos:line="86" pos:column="56"/></expr_stmt>

    <if pos:line="88" pos:column="5">if <condition pos:line="88" pos:column="8">(<expr><name pos:line="88" pos:column="9">rv<pos:position pos:line="88" pos:column="11"/></name> <operator pos:line="88" pos:column="12">!=<pos:position pos:line="88" pos:column="14"/></operator> <name pos:line="88" pos:column="15">APR_SUCCESS<pos:position pos:line="88" pos:column="26"/></name></expr>)<pos:position pos:line="88" pos:column="27"/></condition><then pos:line="88" pos:column="27"> <block pos:line="88" pos:column="28">{
        <return pos:line="89" pos:column="9">return <expr><name pos:line="89" pos:column="16">AUTH_DENIED<pos:position pos:line="89" pos:column="27"/></name></expr>;<pos:position pos:line="89" pos:column="28"/></return>
    }<pos:position pos:line="90" pos:column="6"/></block></then></if>

    <return pos:line="92" pos:column="5">return <expr><name pos:line="92" pos:column="12">AUTH_GRANTED<pos:position pos:line="92" pos:column="24"/></name></expr>;<pos:position pos:line="92" pos:column="25"/></return>
}<pos:position pos:line="93" pos:column="2"/></block></function></unit>

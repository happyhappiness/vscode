<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/httpd/gumtree/httpd_repos_function_59_httpd-2.4.16.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">void<pos:position pos:line="1" pos:column="12"/></name></type> <name pos:line="1" pos:column="13">delete_parent<pos:position pos:line="1" pos:column="26"/></name><parameter_list pos:line="1" pos:column="26">(<parameter><decl><type><specifier pos:line="1" pos:column="27">const<pos:position pos:line="1" pos:column="32"/></specifier> <name pos:line="1" pos:column="33">char<pos:position pos:line="1" pos:column="37"/></name> <modifier pos:line="1" pos:column="38">*<pos:position pos:line="1" pos:column="39"/></modifier></type><name pos:line="1" pos:column="39">path<pos:position pos:line="1" pos:column="43"/></name></decl></parameter>, <parameter><decl><type><specifier pos:line="1" pos:column="45">const<pos:position pos:line="1" pos:column="50"/></specifier> <name pos:line="1" pos:column="51">char<pos:position pos:line="1" pos:column="55"/></name> <modifier pos:line="1" pos:column="56">*<pos:position pos:line="1" pos:column="57"/></modifier></type><name pos:line="1" pos:column="57">basename<pos:position pos:line="1" pos:column="65"/></name></decl></parameter>,
        <parameter><decl><type><name pos:line="2" pos:column="9">apr_off_t<pos:position pos:line="2" pos:column="18"/></name> <modifier pos:line="2" pos:column="19">*<pos:position pos:line="2" pos:column="20"/></modifier></type><name pos:line="2" pos:column="20">nodes<pos:position pos:line="2" pos:column="25"/></name></decl></parameter>, <parameter><decl><type><name pos:line="2" pos:column="27">apr_pool_t<pos:position pos:line="2" pos:column="37"/></name> <modifier pos:line="2" pos:column="38">*<pos:position pos:line="2" pos:column="39"/></modifier></type><name pos:line="2" pos:column="39">pool<pos:position pos:line="2" pos:column="43"/></name></decl></parameter>)<pos:position pos:line="2" pos:column="44"/></parameter_list>
<block pos:line="3" pos:column="1">{
    <decl_stmt><decl><type><name pos:line="4" pos:column="5">char<pos:position pos:line="4" pos:column="9"/></name> <modifier pos:line="4" pos:column="10">*<pos:position pos:line="4" pos:column="11"/></modifier></type><name pos:line="4" pos:column="11">nextpath<pos:position pos:line="4" pos:column="19"/></name></decl>, <modifier pos:line="4" pos:column="21">*<pos:position pos:line="4" pos:column="22"/></modifier><decl><type ref="prev"/><name pos:line="4" pos:column="22">name<pos:position pos:line="4" pos:column="26"/></name></decl>;<pos:position pos:line="4" pos:column="27"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="5" pos:column="5">apr_pool_t<pos:position pos:line="5" pos:column="15"/></name> <modifier pos:line="5" pos:column="16">*<pos:position pos:line="5" pos:column="17"/></modifier></type><name pos:line="5" pos:column="17">p<pos:position pos:line="5" pos:column="18"/></name></decl>;<pos:position pos:line="5" pos:column="19"/></decl_stmt>

    <comment type="block" pos:line="7" pos:column="5">/* temp pool, otherwise lots of memory could be allocated */</comment>
    <expr_stmt><expr><call><name pos:line="8" pos:column="5">apr_pool_create<pos:position pos:line="8" pos:column="20"/></name><argument_list pos:line="8" pos:column="20">(<argument><expr><operator pos:line="8" pos:column="21">&amp;<pos:position pos:line="8" pos:column="26"/></operator><name pos:line="8" pos:column="22">p<pos:position pos:line="8" pos:column="23"/></name></expr></argument>, <argument><expr><name pos:line="8" pos:column="25">pool<pos:position pos:line="8" pos:column="29"/></name></expr></argument>)<pos:position pos:line="8" pos:column="30"/></argument_list></call></expr>;<pos:position pos:line="8" pos:column="31"/></expr_stmt>
    <expr_stmt><expr><name pos:line="9" pos:column="5">name<pos:position pos:line="9" pos:column="9"/></name> <operator pos:line="9" pos:column="10">=<pos:position pos:line="9" pos:column="11"/></operator> <call><name pos:line="9" pos:column="12">apr_pstrdup<pos:position pos:line="9" pos:column="23"/></name><argument_list pos:line="9" pos:column="23">(<argument><expr><name pos:line="9" pos:column="24">p<pos:position pos:line="9" pos:column="25"/></name></expr></argument>, <argument><expr><name pos:line="9" pos:column="27">basename<pos:position pos:line="9" pos:column="35"/></name></expr></argument>)<pos:position pos:line="9" pos:column="36"/></argument_list></call></expr>;<pos:position pos:line="9" pos:column="37"/></expr_stmt>

    <comment type="block" pos:line="11" pos:column="5">/* If asked to delete dirs, do so now. We don't care if it fails.
     * If it fails, it likely means there was something else there.
     */</comment>
    <if pos:line="14" pos:column="5">if <condition pos:line="14" pos:column="8">(<expr><name pos:line="14" pos:column="9">deldirs<pos:position pos:line="14" pos:column="16"/></name> <operator pos:line="14" pos:column="17">&amp;&amp;<pos:position pos:line="14" pos:column="27"/></operator> <operator pos:line="14" pos:column="20">!<pos:position pos:line="14" pos:column="21"/></operator><name pos:line="14" pos:column="21">dryrun<pos:position pos:line="14" pos:column="27"/></name></expr>)<pos:position pos:line="14" pos:column="28"/></condition><then pos:line="14" pos:column="28"> <block pos:line="14" pos:column="29">{
        <decl_stmt><decl><type><specifier pos:line="15" pos:column="9">const<pos:position pos:line="15" pos:column="14"/></specifier> <name pos:line="15" pos:column="15">char<pos:position pos:line="15" pos:column="19"/></name> <modifier pos:line="15" pos:column="20">*<pos:position pos:line="15" pos:column="21"/></modifier></type><name pos:line="15" pos:column="21">vary<pos:position pos:line="15" pos:column="25"/></name></decl>;<pos:position pos:line="15" pos:column="26"/></decl_stmt>
        <decl_stmt><decl><type><name pos:line="16" pos:column="9">char<pos:position pos:line="16" pos:column="13"/></name> <modifier pos:line="16" pos:column="14">*<pos:position pos:line="16" pos:column="15"/></modifier></type><name pos:line="16" pos:column="15">end<pos:position pos:line="16" pos:column="18"/></name> <init pos:line="16" pos:column="19">= <expr><call><name pos:line="16" pos:column="21">strrchr<pos:position pos:line="16" pos:column="28"/></name><argument_list pos:line="16" pos:column="28">(<argument><expr><name pos:line="16" pos:column="29">name<pos:position pos:line="16" pos:column="33"/></name></expr></argument>, <argument><expr><literal type="char" pos:line="16" pos:column="35">'/'<pos:position pos:line="16" pos:column="38"/></literal></expr></argument>)<pos:position pos:line="16" pos:column="39"/></argument_list></call></expr></init></decl>;<pos:position pos:line="16" pos:column="40"/></decl_stmt>
        <while pos:line="17" pos:column="9">while <condition pos:line="17" pos:column="15">(<expr><name pos:line="17" pos:column="16">end<pos:position pos:line="17" pos:column="19"/></name></expr>)<pos:position pos:line="17" pos:column="20"/></condition> <block pos:line="17" pos:column="21">{
            <expr_stmt><expr><operator pos:line="18" pos:column="13">*<pos:position pos:line="18" pos:column="14"/></operator><name pos:line="18" pos:column="14">end<pos:position pos:line="18" pos:column="17"/></name> <operator pos:line="18" pos:column="18">=<pos:position pos:line="18" pos:column="19"/></operator> <literal type="number" pos:line="18" pos:column="20">0<pos:position pos:line="18" pos:column="21"/></literal></expr>;<pos:position pos:line="18" pos:column="22"/></expr_stmt>

            <comment type="block" pos:line="20" pos:column="13">/* remove the directory */</comment>
            <expr_stmt><expr><name pos:line="21" pos:column="13">nextpath<pos:position pos:line="21" pos:column="21"/></name> <operator pos:line="21" pos:column="22">=<pos:position pos:line="21" pos:column="23"/></operator> <call><name pos:line="21" pos:column="24">apr_pstrcat<pos:position pos:line="21" pos:column="35"/></name><argument_list pos:line="21" pos:column="35">(<argument><expr><name pos:line="21" pos:column="36">p<pos:position pos:line="21" pos:column="37"/></name></expr></argument>, <argument><expr><name pos:line="21" pos:column="39">path<pos:position pos:line="21" pos:column="43"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="21" pos:column="45">"/"<pos:position pos:line="21" pos:column="48"/></literal></expr></argument>, <argument><expr><name pos:line="21" pos:column="50">name<pos:position pos:line="21" pos:column="54"/></name></expr></argument>, <argument><expr><name pos:line="21" pos:column="56">NULL<pos:position pos:line="21" pos:column="60"/></name></expr></argument>)<pos:position pos:line="21" pos:column="61"/></argument_list></call></expr>;<pos:position pos:line="21" pos:column="62"/></expr_stmt>
            <if pos:line="22" pos:column="13">if <condition pos:line="22" pos:column="16">(<expr><operator pos:line="22" pos:column="17">!<pos:position pos:line="22" pos:column="18"/></operator><call><name pos:line="22" pos:column="18">apr_dir_remove<pos:position pos:line="22" pos:column="32"/></name><argument_list pos:line="22" pos:column="32">(<argument><expr><name pos:line="22" pos:column="33">nextpath<pos:position pos:line="22" pos:column="41"/></name></expr></argument>, <argument><expr><name pos:line="22" pos:column="43">p<pos:position pos:line="22" pos:column="44"/></name></expr></argument>)<pos:position pos:line="22" pos:column="45"/></argument_list></call></expr>)<pos:position pos:line="22" pos:column="46"/></condition><then pos:line="22" pos:column="46"> <block pos:line="22" pos:column="47">{
                <expr_stmt><expr><operator pos:line="23" pos:column="17">(<pos:position pos:line="23" pos:column="18"/></operator><operator pos:line="23" pos:column="18">*<pos:position pos:line="23" pos:column="19"/></operator><name pos:line="23" pos:column="19">nodes<pos:position pos:line="23" pos:column="24"/></name><operator pos:line="23" pos:column="24">)<pos:position pos:line="23" pos:column="25"/></operator><operator pos:line="23" pos:column="25">--<pos:position pos:line="23" pos:column="27"/></operator></expr>;<pos:position pos:line="23" pos:column="28"/></expr_stmt>

                <comment type="block" pos:line="25" pos:column="17">/* vary directory found? */</comment>
                <expr_stmt><expr><name pos:line="26" pos:column="17">vary<pos:position pos:line="26" pos:column="21"/></name> <operator pos:line="26" pos:column="22">=<pos:position pos:line="26" pos:column="23"/></operator> <call><name pos:line="26" pos:column="24">strstr<pos:position pos:line="26" pos:column="30"/></name><argument_list pos:line="26" pos:column="30">(<argument><expr><name pos:line="26" pos:column="31">name<pos:position pos:line="26" pos:column="35"/></name></expr></argument>, <argument><expr><name pos:line="26" pos:column="37">CACHE_VDIR_SUFFIX<pos:position pos:line="26" pos:column="54"/></name></expr></argument>)<pos:position pos:line="26" pos:column="55"/></argument_list></call></expr>;<pos:position pos:line="26" pos:column="56"/></expr_stmt>
                <if pos:line="27" pos:column="17">if <condition pos:line="27" pos:column="20">(<expr><name pos:line="27" pos:column="21">vary<pos:position pos:line="27" pos:column="25"/></name> <operator pos:line="27" pos:column="26">&amp;&amp;<pos:position pos:line="27" pos:column="36"/></operator> <operator pos:line="27" pos:column="29">!<pos:position pos:line="27" pos:column="30"/></operator><name><name pos:line="27" pos:column="30">vary<pos:position pos:line="27" pos:column="34"/></name><index pos:line="27" pos:column="34">[<expr><sizeof pos:line="27" pos:column="35">sizeof<argument_list pos:line="27" pos:column="41">(<argument><expr><name pos:line="27" pos:column="42">CACHE_VDIR_SUFFIX<pos:position pos:line="27" pos:column="59"/></name></expr></argument>)<pos:position pos:line="27" pos:column="60"/></argument_list></sizeof> <operator pos:line="27" pos:column="61">-<pos:position pos:line="27" pos:column="62"/></operator> <literal type="number" pos:line="27" pos:column="63">1<pos:position pos:line="27" pos:column="64"/></literal></expr>]<pos:position pos:line="27" pos:column="65"/></index></name></expr>)<pos:position pos:line="27" pos:column="66"/></condition><then pos:line="27" pos:column="66"> <block pos:line="27" pos:column="67">{
                    <expr_stmt><expr><name pos:line="28" pos:column="21">nextpath<pos:position pos:line="28" pos:column="29"/></name> <operator pos:line="28" pos:column="30">=<pos:position pos:line="28" pos:column="31"/></operator> <call><name pos:line="28" pos:column="32">apr_pstrcat<pos:position pos:line="28" pos:column="43"/></name><argument_list pos:line="28" pos:column="43">(<argument><expr><name pos:line="28" pos:column="44">p<pos:position pos:line="28" pos:column="45"/></name></expr></argument>, <argument><expr><name pos:line="28" pos:column="47">path<pos:position pos:line="28" pos:column="51"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="28" pos:column="53">"/"<pos:position pos:line="28" pos:column="56"/></literal></expr></argument>, <argument><expr><call><name pos:line="28" pos:column="58">apr_pstrndup<pos:position pos:line="28" pos:column="70"/></name><argument_list pos:line="28" pos:column="70">(<argument><expr><name pos:line="28" pos:column="71">p<pos:position pos:line="28" pos:column="72"/></name></expr></argument>, <argument><expr><name pos:line="28" pos:column="74">name<pos:position pos:line="28" pos:column="78"/></name></expr></argument>, <argument><expr><name pos:line="28" pos:column="80">vary<pos:position pos:line="28" pos:column="84"/></name>
                            <operator pos:line="29" pos:column="29">-<pos:position pos:line="29" pos:column="30"/></operator> <name pos:line="29" pos:column="31">name<pos:position pos:line="29" pos:column="35"/></name></expr></argument>)<pos:position pos:line="29" pos:column="36"/></argument_list></call></expr></argument>, <argument><expr><name pos:line="29" pos:column="38">NULL<pos:position pos:line="29" pos:column="42"/></name></expr></argument>)<pos:position pos:line="29" pos:column="43"/></argument_list></call></expr>;<pos:position pos:line="29" pos:column="44"/></expr_stmt>
                    <if pos:line="30" pos:column="21">if <condition pos:line="30" pos:column="24">(<expr><operator pos:line="30" pos:column="25">!<pos:position pos:line="30" pos:column="26"/></operator><call><name pos:line="30" pos:column="26">apr_file_remove<pos:position pos:line="30" pos:column="41"/></name><argument_list pos:line="30" pos:column="41">(<argument><expr><name pos:line="30" pos:column="42">nextpath<pos:position pos:line="30" pos:column="50"/></name></expr></argument>, <argument><expr><name pos:line="30" pos:column="52">p<pos:position pos:line="30" pos:column="53"/></name></expr></argument>)<pos:position pos:line="30" pos:column="54"/></argument_list></call></expr>)<pos:position pos:line="30" pos:column="55"/></condition><then pos:line="30" pos:column="55"> <block pos:line="30" pos:column="56">{
                        <expr_stmt><expr><operator pos:line="31" pos:column="25">(<pos:position pos:line="31" pos:column="26"/></operator><operator pos:line="31" pos:column="26">*<pos:position pos:line="31" pos:column="27"/></operator><name pos:line="31" pos:column="27">nodes<pos:position pos:line="31" pos:column="32"/></name><operator pos:line="31" pos:column="32">)<pos:position pos:line="31" pos:column="33"/></operator><operator pos:line="31" pos:column="33">--<pos:position pos:line="31" pos:column="35"/></operator></expr>;<pos:position pos:line="31" pos:column="36"/></expr_stmt>
                    }<pos:position pos:line="32" pos:column="22"/></block></then></if>
                }<pos:position pos:line="33" pos:column="18"/></block></then></if>

            }<pos:position pos:line="35" pos:column="14"/></block></then>
            <else pos:line="36" pos:column="13">else <block pos:line="36" pos:column="18">{
                <break pos:line="37" pos:column="17">break;<pos:position pos:line="37" pos:column="23"/></break>
            }<pos:position pos:line="38" pos:column="14"/></block></else></if>
            <expr_stmt><expr><name pos:line="39" pos:column="13">end<pos:position pos:line="39" pos:column="16"/></name> <operator pos:line="39" pos:column="17">=<pos:position pos:line="39" pos:column="18"/></operator> <call><name pos:line="39" pos:column="19">strrchr<pos:position pos:line="39" pos:column="26"/></name><argument_list pos:line="39" pos:column="26">(<argument><expr><name pos:line="39" pos:column="27">name<pos:position pos:line="39" pos:column="31"/></name></expr></argument>, <argument><expr><literal type="char" pos:line="39" pos:column="33">'/'<pos:position pos:line="39" pos:column="36"/></literal></expr></argument>)<pos:position pos:line="39" pos:column="37"/></argument_list></call></expr>;<pos:position pos:line="39" pos:column="38"/></expr_stmt>
        }<pos:position pos:line="40" pos:column="10"/></block></while>
    }<pos:position pos:line="41" pos:column="6"/></block></then></if>

    <expr_stmt><expr><call><name pos:line="43" pos:column="5">apr_pool_destroy<pos:position pos:line="43" pos:column="21"/></name><argument_list pos:line="43" pos:column="21">(<argument><expr><name pos:line="43" pos:column="22">p<pos:position pos:line="43" pos:column="23"/></name></expr></argument>)<pos:position pos:line="43" pos:column="24"/></argument_list></call></expr>;<pos:position pos:line="43" pos:column="25"/></expr_stmt>

    <if pos:line="45" pos:column="5">if <condition pos:line="45" pos:column="8">(<expr><name pos:line="45" pos:column="9">benice<pos:position pos:line="45" pos:column="15"/></name></expr>)<pos:position pos:line="45" pos:column="16"/></condition><then pos:line="45" pos:column="16"> <block pos:line="45" pos:column="17">{
        <if pos:line="46" pos:column="9">if <condition pos:line="46" pos:column="12">(<expr><operator pos:line="46" pos:column="13">++<pos:position pos:line="46" pos:column="15"/></operator><name pos:line="46" pos:column="15">delcount<pos:position pos:line="46" pos:column="23"/></name> <operator pos:line="46" pos:column="24">&gt;=<pos:position pos:line="46" pos:column="29"/></operator> <name pos:line="46" pos:column="27">DELETE_NICE<pos:position pos:line="46" pos:column="38"/></name></expr>)<pos:position pos:line="46" pos:column="39"/></condition><then pos:line="46" pos:column="39"> <block pos:line="46" pos:column="40">{
            <expr_stmt><expr><call><name pos:line="47" pos:column="13">apr_sleep<pos:position pos:line="47" pos:column="22"/></name><argument_list pos:line="47" pos:column="22">(<argument><expr><name pos:line="47" pos:column="23">NICE_DELAY<pos:position pos:line="47" pos:column="33"/></name></expr></argument>)<pos:position pos:line="47" pos:column="34"/></argument_list></call></expr>;<pos:position pos:line="47" pos:column="35"/></expr_stmt>
            <expr_stmt><expr><name pos:line="48" pos:column="13">delcount<pos:position pos:line="48" pos:column="21"/></name> <operator pos:line="48" pos:column="22">=<pos:position pos:line="48" pos:column="23"/></operator> <literal type="number" pos:line="48" pos:column="24">0<pos:position pos:line="48" pos:column="25"/></literal></expr>;<pos:position pos:line="48" pos:column="26"/></expr_stmt>
        }<pos:position pos:line="49" pos:column="10"/></block></then></if>
    }<pos:position pos:line="50" pos:column="6"/></block></then></if>

}<pos:position pos:line="52" pos:column="2"/></block></function></unit>

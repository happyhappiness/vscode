<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/httpd/gumtree/httpd_repos_function_1359_httpd-2.0.65.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">int<pos:position pos:line="1" pos:column="11"/></name></type> <name pos:line="1" pos:column="12">is_only_below<pos:position pos:line="1" pos:column="25"/></name><parameter_list pos:line="1" pos:column="25">(<parameter><decl><type><specifier pos:line="1" pos:column="26">const<pos:position pos:line="1" pos:column="31"/></specifier> <name pos:line="1" pos:column="32">char<pos:position pos:line="1" pos:column="36"/></name> <modifier pos:line="1" pos:column="37">*<pos:position pos:line="1" pos:column="38"/></modifier></type><name pos:line="1" pos:column="38">path<pos:position pos:line="1" pos:column="42"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="43"/></parameter_list>
<block pos:line="2" pos:column="1">{
<cpp:ifdef pos:line="3" pos:column="1">#<cpp:directive pos:line="3" pos:column="2">ifdef<pos:position pos:line="3" pos:column="7"/></cpp:directive> <name pos:line="3" pos:column="8">HAVE_DRIVE_LETTERS<pos:position pos:line="3" pos:column="26"/></name></cpp:ifdef>
    <if pos:line="4" pos:column="5">if <condition pos:line="4" pos:column="8">(<expr><name><name pos:line="4" pos:column="9">path<pos:position pos:line="4" pos:column="13"/></name><index pos:line="4" pos:column="13">[<expr><literal type="number" pos:line="4" pos:column="14">1<pos:position pos:line="4" pos:column="15"/></literal></expr>]<pos:position pos:line="4" pos:column="16"/></index></name> <operator pos:line="4" pos:column="17">==<pos:position pos:line="4" pos:column="19"/></operator> <literal type="char" pos:line="4" pos:column="20">':'<pos:position pos:line="4" pos:column="23"/></literal></expr>)<pos:position pos:line="4" pos:column="24"/></condition><then pos:line="4" pos:column="24"> 
        <block type="pseudo"><return pos:line="5" pos:column="9">return <expr><literal type="number" pos:line="5" pos:column="16">0<pos:position pos:line="5" pos:column="17"/></literal></expr>;<pos:position pos:line="5" pos:column="18"/></return></block></then></if>
<cpp:endif pos:line="6" pos:column="1">#<cpp:directive pos:line="6" pos:column="2">endif<pos:position pos:line="6" pos:column="7"/></cpp:directive></cpp:endif>
<cpp:ifdef pos:line="7" pos:column="1">#<cpp:directive pos:line="7" pos:column="2">ifdef<pos:position pos:line="7" pos:column="7"/></cpp:directive> <name pos:line="7" pos:column="8">NETWARE<pos:position pos:line="7" pos:column="15"/></name></cpp:ifdef>
    <if pos:line="8" pos:column="5">if <condition pos:line="8" pos:column="8">(<expr><call><name pos:line="8" pos:column="9">ap_strchr_c<pos:position pos:line="8" pos:column="20"/></name><argument_list pos:line="8" pos:column="20">(<argument><expr><name pos:line="8" pos:column="21">path<pos:position pos:line="8" pos:column="25"/></name></expr></argument>, <argument><expr><literal type="char" pos:line="8" pos:column="27">':'<pos:position pos:line="8" pos:column="30"/></literal></expr></argument>)<pos:position pos:line="8" pos:column="31"/></argument_list></call></expr>)<pos:position pos:line="8" pos:column="32"/></condition><then pos:line="8" pos:column="32">
        <block type="pseudo"><return pos:line="9" pos:column="9">return <expr><literal type="number" pos:line="9" pos:column="16">0<pos:position pos:line="9" pos:column="17"/></literal></expr>;<pos:position pos:line="9" pos:column="18"/></return></block></then></if>
<cpp:endif pos:line="10" pos:column="1">#<cpp:directive pos:line="10" pos:column="2">endif<pos:position pos:line="10" pos:column="7"/></cpp:directive></cpp:endif>
    <if pos:line="11" pos:column="5">if <condition pos:line="11" pos:column="8">(<expr><name><name pos:line="11" pos:column="9">path<pos:position pos:line="11" pos:column="13"/></name><index pos:line="11" pos:column="13">[<expr><literal type="number" pos:line="11" pos:column="14">0<pos:position pos:line="11" pos:column="15"/></literal></expr>]<pos:position pos:line="11" pos:column="16"/></index></name> <operator pos:line="11" pos:column="17">==<pos:position pos:line="11" pos:column="19"/></operator> <literal type="char" pos:line="11" pos:column="20">'/'<pos:position pos:line="11" pos:column="23"/></literal></expr>)<pos:position pos:line="11" pos:column="24"/></condition><then pos:line="11" pos:column="24"> <block pos:line="11" pos:column="25">{
        <return pos:line="12" pos:column="9">return <expr><literal type="number" pos:line="12" pos:column="16">0<pos:position pos:line="12" pos:column="17"/></literal></expr>;<pos:position pos:line="12" pos:column="18"/></return>
    }<pos:position pos:line="13" pos:column="6"/></block></then></if>
    <while pos:line="14" pos:column="5">while <condition pos:line="14" pos:column="11">(<expr><operator pos:line="14" pos:column="12">*<pos:position pos:line="14" pos:column="13"/></operator><name pos:line="14" pos:column="13">path<pos:position pos:line="14" pos:column="17"/></name></expr>)<pos:position pos:line="14" pos:column="18"/></condition> <block pos:line="14" pos:column="19">{
        <decl_stmt><decl><type><name pos:line="15" pos:column="9">int<pos:position pos:line="15" pos:column="12"/></name></type> <name pos:line="15" pos:column="13">dots<pos:position pos:line="15" pos:column="17"/></name> <init pos:line="15" pos:column="18">= <expr><literal type="number" pos:line="15" pos:column="20">0<pos:position pos:line="15" pos:column="21"/></literal></expr></init></decl>;<pos:position pos:line="15" pos:column="22"/></decl_stmt>
        <while pos:line="16" pos:column="9">while <condition pos:line="16" pos:column="15">(<expr><name><name pos:line="16" pos:column="16">path<pos:position pos:line="16" pos:column="20"/></name><index pos:line="16" pos:column="20">[<expr><name pos:line="16" pos:column="21">dots<pos:position pos:line="16" pos:column="25"/></name></expr>]<pos:position pos:line="16" pos:column="26"/></index></name> <operator pos:line="16" pos:column="27">==<pos:position pos:line="16" pos:column="29"/></operator> <literal type="char" pos:line="16" pos:column="30">'.'<pos:position pos:line="16" pos:column="33"/></literal></expr>)<pos:position pos:line="16" pos:column="34"/></condition>
            <block type="pseudo"><expr_stmt><expr><operator pos:line="17" pos:column="13">++<pos:position pos:line="17" pos:column="15"/></operator><name pos:line="17" pos:column="15">dots<pos:position pos:line="17" pos:column="19"/></name></expr>;<pos:position pos:line="17" pos:column="20"/></expr_stmt></block></while>
<cpp:if pos:line="18" pos:column="1">#<cpp:directive pos:line="18" pos:column="2">if<pos:position pos:line="18" pos:column="4"/></cpp:directive> <expr><call><name pos:line="18" pos:column="5">defined<pos:position pos:line="18" pos:column="12"/></name><argument_list pos:line="18" pos:column="12">(<argument><expr><name pos:line="18" pos:column="13">WIN32<pos:position pos:line="18" pos:column="18"/></name></expr></argument>)<pos:position pos:line="18" pos:column="19"/></argument_list></call></expr></cpp:if> 
        <comment type="block" pos:line="19" pos:column="9">/* If the name is canonical this is redundant
         * but in security, redundancy is worthwhile.
         * Does OS2 belong here (accepts ... for ..)?
         */</comment>
        <if pos:line="23" pos:column="9">if <condition pos:line="23" pos:column="12">(<expr><name pos:line="23" pos:column="13">dots<pos:position pos:line="23" pos:column="17"/></name> <operator pos:line="23" pos:column="18">&gt;<pos:position pos:line="23" pos:column="22"/></operator> <literal type="number" pos:line="23" pos:column="20">1<pos:position pos:line="23" pos:column="21"/></literal> <operator pos:line="23" pos:column="22">&amp;&amp;<pos:position pos:line="23" pos:column="32"/></operator> <operator pos:line="23" pos:column="25">(<pos:position pos:line="23" pos:column="26"/></operator><operator pos:line="23" pos:column="26">!<pos:position pos:line="23" pos:column="27"/></operator><name><name pos:line="23" pos:column="27">path<pos:position pos:line="23" pos:column="31"/></name><index pos:line="23" pos:column="31">[<expr><name pos:line="23" pos:column="32">dots<pos:position pos:line="23" pos:column="36"/></name></expr>]<pos:position pos:line="23" pos:column="37"/></index></name> <operator pos:line="23" pos:column="38">||<pos:position pos:line="23" pos:column="40"/></operator> <name><name pos:line="23" pos:column="41">path<pos:position pos:line="23" pos:column="45"/></name><index pos:line="23" pos:column="45">[<expr><name pos:line="23" pos:column="46">dots<pos:position pos:line="23" pos:column="50"/></name></expr>]<pos:position pos:line="23" pos:column="51"/></index></name> <operator pos:line="23" pos:column="52">==<pos:position pos:line="23" pos:column="54"/></operator> <literal type="char" pos:line="23" pos:column="55">'/'<pos:position pos:line="23" pos:column="58"/></literal><operator pos:line="23" pos:column="58">)<pos:position pos:line="23" pos:column="59"/></operator></expr>)<pos:position pos:line="23" pos:column="60"/></condition><then pos:line="23" pos:column="60">
            <block type="pseudo"><return pos:line="24" pos:column="13">return <expr><literal type="number" pos:line="24" pos:column="20">0<pos:position pos:line="24" pos:column="21"/></literal></expr>;<pos:position pos:line="24" pos:column="22"/></return></block></then></if>
<cpp:else pos:line="25" pos:column="1">#<cpp:directive pos:line="25" pos:column="2">else<pos:position pos:line="25" pos:column="6"/></cpp:directive></cpp:else>
        <if pos:line="26" pos:column="9">if <condition pos:line="26" pos:column="12">(<expr><name pos:line="26" pos:column="13">dots<pos:position pos:line="26" pos:column="17"/></name> <operator pos:line="26" pos:column="18">==<pos:position pos:line="26" pos:column="20"/></operator> <literal type="number" pos:line="26" pos:column="21">2<pos:position pos:line="26" pos:column="22"/></literal> <operator pos:line="26" pos:column="23">&amp;&amp;<pos:position pos:line="26" pos:column="33"/></operator> <operator pos:line="26" pos:column="26">(<pos:position pos:line="26" pos:column="27"/></operator><operator pos:line="26" pos:column="27">!<pos:position pos:line="26" pos:column="28"/></operator><name><name pos:line="26" pos:column="28">path<pos:position pos:line="26" pos:column="32"/></name><index pos:line="26" pos:column="32">[<expr><name pos:line="26" pos:column="33">dots<pos:position pos:line="26" pos:column="37"/></name></expr>]<pos:position pos:line="26" pos:column="38"/></index></name> <operator pos:line="26" pos:column="39">||<pos:position pos:line="26" pos:column="41"/></operator> <name><name pos:line="26" pos:column="42">path<pos:position pos:line="26" pos:column="46"/></name><index pos:line="26" pos:column="46">[<expr><name pos:line="26" pos:column="47">dots<pos:position pos:line="26" pos:column="51"/></name></expr>]<pos:position pos:line="26" pos:column="52"/></index></name> <operator pos:line="26" pos:column="53">==<pos:position pos:line="26" pos:column="55"/></operator> <literal type="char" pos:line="26" pos:column="56">'/'<pos:position pos:line="26" pos:column="59"/></literal><operator pos:line="26" pos:column="59">)<pos:position pos:line="26" pos:column="60"/></operator></expr>)<pos:position pos:line="26" pos:column="61"/></condition><then pos:line="26" pos:column="61">
            <block type="pseudo"><return pos:line="27" pos:column="13">return <expr><literal type="number" pos:line="27" pos:column="20">0<pos:position pos:line="27" pos:column="21"/></literal></expr>;<pos:position pos:line="27" pos:column="22"/></return></block></then></if>
<cpp:endif pos:line="28" pos:column="1">#<cpp:directive pos:line="28" pos:column="2">endif<pos:position pos:line="28" pos:column="7"/></cpp:directive></cpp:endif>
        <expr_stmt><expr><name pos:line="29" pos:column="9">path<pos:position pos:line="29" pos:column="13"/></name> <operator pos:line="29" pos:column="14">+=<pos:position pos:line="29" pos:column="16"/></operator> <name pos:line="29" pos:column="17">dots<pos:position pos:line="29" pos:column="21"/></name></expr>;<pos:position pos:line="29" pos:column="22"/></expr_stmt>
        <comment type="block" pos:line="30" pos:column="9">/* Advance to either the null byte at the end of the
         * string or the character right after the next slash,
         * whichever comes first
         */</comment>
        <while pos:line="34" pos:column="9">while <condition pos:line="34" pos:column="15">(<expr><operator pos:line="34" pos:column="16">*<pos:position pos:line="34" pos:column="17"/></operator><name pos:line="34" pos:column="17">path<pos:position pos:line="34" pos:column="21"/></name> <operator pos:line="34" pos:column="22">&amp;&amp;<pos:position pos:line="34" pos:column="32"/></operator> <operator pos:line="34" pos:column="25">(<pos:position pos:line="34" pos:column="26"/></operator><operator pos:line="34" pos:column="26">*<pos:position pos:line="34" pos:column="27"/></operator><name pos:line="34" pos:column="27">path<pos:position pos:line="34" pos:column="31"/></name><operator pos:line="34" pos:column="31">++<pos:position pos:line="34" pos:column="33"/></operator> <operator pos:line="34" pos:column="34">!=<pos:position pos:line="34" pos:column="36"/></operator> <literal type="char" pos:line="34" pos:column="37">'/'<pos:position pos:line="34" pos:column="40"/></literal><operator pos:line="34" pos:column="40">)<pos:position pos:line="34" pos:column="41"/></operator></expr>)<pos:position pos:line="34" pos:column="42"/></condition> <block pos:line="34" pos:column="43">{
            <continue pos:line="35" pos:column="13">continue;<pos:position pos:line="35" pos:column="22"/></continue>
        }<pos:position pos:line="36" pos:column="10"/></block></while>
    }<pos:position pos:line="37" pos:column="6"/></block></while>
    <return pos:line="38" pos:column="5">return <expr><literal type="number" pos:line="38" pos:column="12">1<pos:position pos:line="38" pos:column="13"/></literal></expr>;<pos:position pos:line="38" pos:column="14"/></return>
}<pos:position pos:line="39" pos:column="2"/></block></function></unit>

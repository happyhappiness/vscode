<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/httpd/gumtree/httpd_repos_function_373_httpd-2.4.20.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">int<pos:position pos:line="1" pos:column="11"/></name></type> <name pos:line="1" pos:column="12">dav_method_copymove<pos:position pos:line="1" pos:column="31"/></name><parameter_list pos:line="1" pos:column="31">(<parameter><decl><type><name pos:line="1" pos:column="32">request_rec<pos:position pos:line="1" pos:column="43"/></name> <modifier pos:line="1" pos:column="44">*<pos:position pos:line="1" pos:column="45"/></modifier></type><name pos:line="1" pos:column="45">r<pos:position pos:line="1" pos:column="46"/></name></decl></parameter>, <parameter><decl><type><name pos:line="1" pos:column="48">int<pos:position pos:line="1" pos:column="51"/></name></type> <name pos:line="1" pos:column="52">is_move<pos:position pos:line="1" pos:column="59"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="60"/></parameter_list>
<block pos:line="2" pos:column="1">{
    <decl_stmt><decl><type><name pos:line="3" pos:column="5">dav_resource<pos:position pos:line="3" pos:column="17"/></name> <modifier pos:line="3" pos:column="18">*<pos:position pos:line="3" pos:column="19"/></modifier></type><name pos:line="3" pos:column="19">resource<pos:position pos:line="3" pos:column="27"/></name></decl>;<pos:position pos:line="3" pos:column="28"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="4" pos:column="5">dav_resource<pos:position pos:line="4" pos:column="17"/></name> <modifier pos:line="4" pos:column="18">*<pos:position pos:line="4" pos:column="19"/></modifier></type><name pos:line="4" pos:column="19">resnew<pos:position pos:line="4" pos:column="25"/></name></decl>;<pos:position pos:line="4" pos:column="26"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="5" pos:column="5">dav_auto_version_info<pos:position pos:line="5" pos:column="26"/></name></type> <name pos:line="5" pos:column="27">src_av_info<pos:position pos:line="5" pos:column="38"/></name> <init pos:line="5" pos:column="39">= <expr><block pos:line="5" pos:column="41">{ <expr><literal type="number" pos:line="5" pos:column="43">0<pos:position pos:line="5" pos:column="44"/></literal></expr> }<pos:position pos:line="5" pos:column="46"/></block></expr></init></decl>;<pos:position pos:line="5" pos:column="47"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="6" pos:column="5">dav_auto_version_info<pos:position pos:line="6" pos:column="26"/></name></type> <name pos:line="6" pos:column="27">dst_av_info<pos:position pos:line="6" pos:column="38"/></name> <init pos:line="6" pos:column="39">= <expr><block pos:line="6" pos:column="41">{ <expr><literal type="number" pos:line="6" pos:column="43">0<pos:position pos:line="6" pos:column="44"/></literal></expr> }<pos:position pos:line="6" pos:column="46"/></block></expr></init></decl>;<pos:position pos:line="6" pos:column="47"/></decl_stmt>
    <decl_stmt><decl><type><specifier pos:line="7" pos:column="5">const<pos:position pos:line="7" pos:column="10"/></specifier> <name pos:line="7" pos:column="11">char<pos:position pos:line="7" pos:column="15"/></name> <modifier pos:line="7" pos:column="16">*<pos:position pos:line="7" pos:column="17"/></modifier></type><name pos:line="7" pos:column="17">body<pos:position pos:line="7" pos:column="21"/></name></decl>;<pos:position pos:line="7" pos:column="22"/></decl_stmt>
    <decl_stmt><decl><type><specifier pos:line="8" pos:column="5">const<pos:position pos:line="8" pos:column="10"/></specifier> <name pos:line="8" pos:column="11">char<pos:position pos:line="8" pos:column="15"/></name> <modifier pos:line="8" pos:column="16">*<pos:position pos:line="8" pos:column="17"/></modifier></type><name pos:line="8" pos:column="17">dest<pos:position pos:line="8" pos:column="21"/></name></decl>;<pos:position pos:line="8" pos:column="22"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="9" pos:column="5">dav_error<pos:position pos:line="9" pos:column="14"/></name> <modifier pos:line="9" pos:column="15">*<pos:position pos:line="9" pos:column="16"/></modifier></type><name pos:line="9" pos:column="16">err<pos:position pos:line="9" pos:column="19"/></name></decl>;<pos:position pos:line="9" pos:column="20"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="10" pos:column="5">dav_error<pos:position pos:line="10" pos:column="14"/></name> <modifier pos:line="10" pos:column="15">*<pos:position pos:line="10" pos:column="16"/></modifier></type><name pos:line="10" pos:column="16">err2<pos:position pos:line="10" pos:column="20"/></name></decl>;<pos:position pos:line="10" pos:column="21"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="11" pos:column="5">dav_error<pos:position pos:line="11" pos:column="14"/></name> <modifier pos:line="11" pos:column="15">*<pos:position pos:line="11" pos:column="16"/></modifier></type><name pos:line="11" pos:column="16">err3<pos:position pos:line="11" pos:column="20"/></name></decl>;<pos:position pos:line="11" pos:column="21"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="12" pos:column="5">dav_response<pos:position pos:line="12" pos:column="17"/></name> <modifier pos:line="12" pos:column="18">*<pos:position pos:line="12" pos:column="19"/></modifier></type><name pos:line="12" pos:column="19">multi_response<pos:position pos:line="12" pos:column="33"/></name></decl>;<pos:position pos:line="12" pos:column="34"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="13" pos:column="5">dav_lookup_result<pos:position pos:line="13" pos:column="22"/></name></type> <name pos:line="13" pos:column="23">lookup<pos:position pos:line="13" pos:column="29"/></name></decl>;<pos:position pos:line="13" pos:column="30"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="14" pos:column="5">int<pos:position pos:line="14" pos:column="8"/></name></type> <name pos:line="14" pos:column="9">is_dir<pos:position pos:line="14" pos:column="15"/></name></decl>;<pos:position pos:line="14" pos:column="16"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="15" pos:column="5">int<pos:position pos:line="15" pos:column="8"/></name></type> <name pos:line="15" pos:column="9">overwrite<pos:position pos:line="15" pos:column="18"/></name></decl>;<pos:position pos:line="15" pos:column="19"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="16" pos:column="5">int<pos:position pos:line="16" pos:column="8"/></name></type> <name pos:line="16" pos:column="9">depth<pos:position pos:line="16" pos:column="14"/></name></decl>;<pos:position pos:line="16" pos:column="15"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="17" pos:column="5">int<pos:position pos:line="17" pos:column="8"/></name></type> <name pos:line="17" pos:column="9">result<pos:position pos:line="17" pos:column="15"/></name></decl>;<pos:position pos:line="17" pos:column="16"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="18" pos:column="5">dav_lockdb<pos:position pos:line="18" pos:column="15"/></name> <modifier pos:line="18" pos:column="16">*<pos:position pos:line="18" pos:column="17"/></modifier></type><name pos:line="18" pos:column="17">lockdb<pos:position pos:line="18" pos:column="23"/></name></decl>;<pos:position pos:line="18" pos:column="24"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="19" pos:column="5">int<pos:position pos:line="19" pos:column="8"/></name></type> <name pos:line="19" pos:column="9">replace_dest<pos:position pos:line="19" pos:column="21"/></name></decl>;<pos:position pos:line="19" pos:column="22"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="20" pos:column="5">int<pos:position pos:line="20" pos:column="8"/></name></type> <name pos:line="20" pos:column="9">resnew_state<pos:position pos:line="20" pos:column="21"/></name></decl>;<pos:position pos:line="20" pos:column="22"/></decl_stmt>

    <comment type="block" pos:line="22" pos:column="5">/* Ask repository module to resolve the resource */</comment>
    <expr_stmt><expr><name pos:line="23" pos:column="5">err<pos:position pos:line="23" pos:column="8"/></name> <operator pos:line="23" pos:column="9">=<pos:position pos:line="23" pos:column="10"/></operator> <call><name pos:line="23" pos:column="11">dav_get_resource<pos:position pos:line="23" pos:column="27"/></name><argument_list pos:line="23" pos:column="27">(<argument><expr><name pos:line="23" pos:column="28">r<pos:position pos:line="23" pos:column="29"/></name></expr></argument>, <argument><expr><operator pos:line="23" pos:column="31">!<pos:position pos:line="23" pos:column="32"/></operator><name pos:line="23" pos:column="32">is_move<pos:position pos:line="23" pos:column="39"/></name></expr></argument> <comment type="block" pos:line="23" pos:column="40">/* label_allowed */</comment>,
                           <argument><expr><literal type="number" pos:line="24" pos:column="28">0<pos:position pos:line="24" pos:column="29"/></literal></expr></argument> <comment type="block" pos:line="24" pos:column="30">/* use_checked_in */</comment>, <argument><expr><operator pos:line="24" pos:column="52">&amp;<pos:position pos:line="24" pos:column="57"/></operator><name pos:line="24" pos:column="53">resource<pos:position pos:line="24" pos:column="61"/></name></expr></argument>)<pos:position pos:line="24" pos:column="62"/></argument_list></call></expr>;<pos:position pos:line="24" pos:column="63"/></expr_stmt>
    <if pos:line="25" pos:column="5">if <condition pos:line="25" pos:column="8">(<expr><name pos:line="25" pos:column="9">err<pos:position pos:line="25" pos:column="12"/></name> <operator pos:line="25" pos:column="13">!=<pos:position pos:line="25" pos:column="15"/></operator> <name pos:line="25" pos:column="16">NULL<pos:position pos:line="25" pos:column="20"/></name></expr>)<pos:position pos:line="25" pos:column="21"/></condition><then pos:line="25" pos:column="21">
        <block type="pseudo"><return pos:line="26" pos:column="9">return <expr><call><name pos:line="26" pos:column="16">dav_handle_err<pos:position pos:line="26" pos:column="30"/></name><argument_list pos:line="26" pos:column="30">(<argument><expr><name pos:line="26" pos:column="31">r<pos:position pos:line="26" pos:column="32"/></name></expr></argument>, <argument><expr><name pos:line="26" pos:column="34">err<pos:position pos:line="26" pos:column="37"/></name></expr></argument>, <argument><expr><name pos:line="26" pos:column="39">NULL<pos:position pos:line="26" pos:column="43"/></name></expr></argument>)<pos:position pos:line="26" pos:column="44"/></argument_list></call></expr>;<pos:position pos:line="26" pos:column="45"/></return></block></then></if>

    <if pos:line="28" pos:column="5">if <condition pos:line="28" pos:column="8">(<expr><operator pos:line="28" pos:column="9">!<pos:position pos:line="28" pos:column="10"/></operator><name><name pos:line="28" pos:column="10">resource<pos:position pos:line="28" pos:column="18"/></name><operator pos:line="28" pos:column="18">-&gt;<pos:position pos:line="28" pos:column="23"/></operator><name pos:line="28" pos:column="20">exists<pos:position pos:line="28" pos:column="26"/></name></name></expr>)<pos:position pos:line="28" pos:column="27"/></condition><then pos:line="28" pos:column="27"> <block pos:line="28" pos:column="28">{
        <comment type="block" pos:line="29" pos:column="9">/* Apache will supply a default error for this. */</comment>
        <return pos:line="30" pos:column="9">return <expr><name pos:line="30" pos:column="16">HTTP_NOT_FOUND<pos:position pos:line="30" pos:column="30"/></name></expr>;<pos:position pos:line="30" pos:column="31"/></return>
    }<pos:position pos:line="31" pos:column="6"/></block></then></if>

    <comment type="block" pos:line="33" pos:column="5">/* If not a file or collection resource, COPY/MOVE not allowed */</comment>
    <comment type="block" pos:line="34" pos:column="5">/* ### allow COPY/MOVE of DeltaV resource types */</comment>
    <if pos:line="35" pos:column="5">if <condition pos:line="35" pos:column="8">(<expr><name><name pos:line="35" pos:column="9">resource<pos:position pos:line="35" pos:column="17"/></name><operator pos:line="35" pos:column="17">-&gt;<pos:position pos:line="35" pos:column="22"/></operator><name pos:line="35" pos:column="19">type<pos:position pos:line="35" pos:column="23"/></name></name> <operator pos:line="35" pos:column="24">!=<pos:position pos:line="35" pos:column="26"/></operator> <name pos:line="35" pos:column="27">DAV_RESOURCE_TYPE_REGULAR<pos:position pos:line="35" pos:column="52"/></name></expr>)<pos:position pos:line="35" pos:column="53"/></condition><then pos:line="35" pos:column="53"> <block pos:line="35" pos:column="54">{
        <expr_stmt><expr><name pos:line="36" pos:column="9">body<pos:position pos:line="36" pos:column="13"/></name> <operator pos:line="36" pos:column="14">=<pos:position pos:line="36" pos:column="15"/></operator> <call><name pos:line="36" pos:column="16">apr_psprintf<pos:position pos:line="36" pos:column="28"/></name><argument_list pos:line="36" pos:column="28">(<argument><expr><name><name pos:line="36" pos:column="29">r<pos:position pos:line="36" pos:column="30"/></name><operator pos:line="36" pos:column="30">-&gt;<pos:position pos:line="36" pos:column="35"/></operator><name pos:line="36" pos:column="32">pool<pos:position pos:line="36" pos:column="36"/></name></name></expr></argument>,
                            <argument><expr><literal type="string" pos:line="37" pos:column="29">"Cannot COPY/MOVE resource %s."<pos:position pos:line="37" pos:column="60"/></literal></expr></argument>,
                            <argument><expr><call><name pos:line="38" pos:column="29">ap_escape_html<pos:position pos:line="38" pos:column="43"/></name><argument_list pos:line="38" pos:column="43">(<argument><expr><name><name pos:line="38" pos:column="44">r<pos:position pos:line="38" pos:column="45"/></name><operator pos:line="38" pos:column="45">-&gt;<pos:position pos:line="38" pos:column="50"/></operator><name pos:line="38" pos:column="47">pool<pos:position pos:line="38" pos:column="51"/></name></name></expr></argument>, <argument><expr><name><name pos:line="38" pos:column="53">r<pos:position pos:line="38" pos:column="54"/></name><operator pos:line="38" pos:column="54">-&gt;<pos:position pos:line="38" pos:column="59"/></operator><name pos:line="38" pos:column="56">uri<pos:position pos:line="38" pos:column="59"/></name></name></expr></argument>)<pos:position pos:line="38" pos:column="60"/></argument_list></call></expr></argument>)<pos:position pos:line="38" pos:column="61"/></argument_list></call></expr>;<pos:position pos:line="38" pos:column="62"/></expr_stmt>
        <return pos:line="39" pos:column="9">return <expr><call><name pos:line="39" pos:column="16">dav_error_response<pos:position pos:line="39" pos:column="34"/></name><argument_list pos:line="39" pos:column="34">(<argument><expr><name pos:line="39" pos:column="35">r<pos:position pos:line="39" pos:column="36"/></name></expr></argument>, <argument><expr><name pos:line="39" pos:column="38">HTTP_METHOD_NOT_ALLOWED<pos:position pos:line="39" pos:column="61"/></name></expr></argument>, <argument><expr><name pos:line="39" pos:column="63">body<pos:position pos:line="39" pos:column="67"/></name></expr></argument>)<pos:position pos:line="39" pos:column="68"/></argument_list></call></expr>;<pos:position pos:line="39" pos:column="69"/></return>
    }<pos:position pos:line="40" pos:column="6"/></block></then></if>

    <comment type="block" pos:line="42" pos:column="5">/* get the destination URI */</comment>
    <expr_stmt><expr><name pos:line="43" pos:column="5">dest<pos:position pos:line="43" pos:column="9"/></name> <operator pos:line="43" pos:column="10">=<pos:position pos:line="43" pos:column="11"/></operator> <call><name pos:line="43" pos:column="12">apr_table_get<pos:position pos:line="43" pos:column="25"/></name><argument_list pos:line="43" pos:column="25">(<argument><expr><name><name pos:line="43" pos:column="26">r<pos:position pos:line="43" pos:column="27"/></name><operator pos:line="43" pos:column="27">-&gt;<pos:position pos:line="43" pos:column="32"/></operator><name pos:line="43" pos:column="29">headers_in<pos:position pos:line="43" pos:column="39"/></name></name></expr></argument>, <argument><expr><literal type="string" pos:line="43" pos:column="41">"Destination"<pos:position pos:line="43" pos:column="54"/></literal></expr></argument>)<pos:position pos:line="43" pos:column="55"/></argument_list></call></expr>;<pos:position pos:line="43" pos:column="56"/></expr_stmt>
    <if pos:line="44" pos:column="5">if <condition pos:line="44" pos:column="8">(<expr><name pos:line="44" pos:column="9">dest<pos:position pos:line="44" pos:column="13"/></name> <operator pos:line="44" pos:column="14">==<pos:position pos:line="44" pos:column="16"/></operator> <name pos:line="44" pos:column="17">NULL<pos:position pos:line="44" pos:column="21"/></name></expr>)<pos:position pos:line="44" pos:column="22"/></condition><then pos:line="44" pos:column="22"> <block pos:line="44" pos:column="23">{
        <comment type="block" pos:line="45" pos:column="9">/* Look in headers provided by Netscape's Roaming Profiles */</comment>
        <decl_stmt><decl><type><specifier pos:line="46" pos:column="9">const<pos:position pos:line="46" pos:column="14"/></specifier> <name pos:line="46" pos:column="15">char<pos:position pos:line="46" pos:column="19"/></name> <modifier pos:line="46" pos:column="20">*<pos:position pos:line="46" pos:column="21"/></modifier></type><name pos:line="46" pos:column="21">nscp_host<pos:position pos:line="46" pos:column="30"/></name> <init pos:line="46" pos:column="31">= <expr><call><name pos:line="46" pos:column="33">apr_table_get<pos:position pos:line="46" pos:column="46"/></name><argument_list pos:line="46" pos:column="46">(<argument><expr><name><name pos:line="46" pos:column="47">r<pos:position pos:line="46" pos:column="48"/></name><operator pos:line="46" pos:column="48">-&gt;<pos:position pos:line="46" pos:column="53"/></operator><name pos:line="46" pos:column="50">headers_in<pos:position pos:line="46" pos:column="60"/></name></name></expr></argument>, <argument><expr><literal type="string" pos:line="46" pos:column="62">"Host"<pos:position pos:line="46" pos:column="68"/></literal></expr></argument>)<pos:position pos:line="46" pos:column="69"/></argument_list></call></expr></init></decl>;<pos:position pos:line="46" pos:column="70"/></decl_stmt>
        <decl_stmt><decl><type><specifier pos:line="47" pos:column="9">const<pos:position pos:line="47" pos:column="14"/></specifier> <name pos:line="47" pos:column="15">char<pos:position pos:line="47" pos:column="19"/></name> <modifier pos:line="47" pos:column="20">*<pos:position pos:line="47" pos:column="21"/></modifier></type><name pos:line="47" pos:column="21">nscp_path<pos:position pos:line="47" pos:column="30"/></name> <init pos:line="47" pos:column="31">= <expr><call><name pos:line="47" pos:column="33">apr_table_get<pos:position pos:line="47" pos:column="46"/></name><argument_list pos:line="47" pos:column="46">(<argument><expr><name><name pos:line="47" pos:column="47">r<pos:position pos:line="47" pos:column="48"/></name><operator pos:line="47" pos:column="48">-&gt;<pos:position pos:line="47" pos:column="53"/></operator><name pos:line="47" pos:column="50">headers_in<pos:position pos:line="47" pos:column="60"/></name></name></expr></argument>, <argument><expr><literal type="string" pos:line="47" pos:column="62">"New-uri"<pos:position pos:line="47" pos:column="71"/></literal></expr></argument>)<pos:position pos:line="47" pos:column="72"/></argument_list></call></expr></init></decl>;<pos:position pos:line="47" pos:column="73"/></decl_stmt>

        <if pos:line="49" pos:column="9">if <condition pos:line="49" pos:column="12">(<expr><name pos:line="49" pos:column="13">nscp_host<pos:position pos:line="49" pos:column="22"/></name> <operator pos:line="49" pos:column="23">!=<pos:position pos:line="49" pos:column="25"/></operator> <name pos:line="49" pos:column="26">NULL<pos:position pos:line="49" pos:column="30"/></name> <operator pos:line="49" pos:column="31">&amp;&amp;<pos:position pos:line="49" pos:column="41"/></operator> <name pos:line="49" pos:column="34">nscp_path<pos:position pos:line="49" pos:column="43"/></name> <operator pos:line="49" pos:column="44">!=<pos:position pos:line="49" pos:column="46"/></operator> <name pos:line="49" pos:column="47">NULL<pos:position pos:line="49" pos:column="51"/></name></expr>)<pos:position pos:line="49" pos:column="52"/></condition><then pos:line="49" pos:column="52">
            <block type="pseudo"><expr_stmt><expr><name pos:line="50" pos:column="13">dest<pos:position pos:line="50" pos:column="17"/></name> <operator pos:line="50" pos:column="18">=<pos:position pos:line="50" pos:column="19"/></operator> <call><name pos:line="50" pos:column="20">apr_psprintf<pos:position pos:line="50" pos:column="32"/></name><argument_list pos:line="50" pos:column="32">(<argument><expr><name><name pos:line="50" pos:column="33">r<pos:position pos:line="50" pos:column="34"/></name><operator pos:line="50" pos:column="34">-&gt;<pos:position pos:line="50" pos:column="39"/></operator><name pos:line="50" pos:column="36">pool<pos:position pos:line="50" pos:column="40"/></name></name></expr></argument>, <argument><expr><literal type="string" pos:line="50" pos:column="42">"http://%s%s"<pos:position pos:line="50" pos:column="55"/></literal></expr></argument>, <argument><expr><name pos:line="50" pos:column="57">nscp_host<pos:position pos:line="50" pos:column="66"/></name></expr></argument>, <argument><expr><name pos:line="50" pos:column="68">nscp_path<pos:position pos:line="50" pos:column="77"/></name></expr></argument>)<pos:position pos:line="50" pos:column="78"/></argument_list></call></expr>;<pos:position pos:line="50" pos:column="79"/></expr_stmt></block></then></if>
    }<pos:position pos:line="51" pos:column="6"/></block></then></if>
    <if pos:line="52" pos:column="5">if <condition pos:line="52" pos:column="8">(<expr><name pos:line="52" pos:column="9">dest<pos:position pos:line="52" pos:column="13"/></name> <operator pos:line="52" pos:column="14">==<pos:position pos:line="52" pos:column="16"/></operator> <name pos:line="52" pos:column="17">NULL<pos:position pos:line="52" pos:column="21"/></name></expr>)<pos:position pos:line="52" pos:column="22"/></condition><then pos:line="52" pos:column="22"> <block pos:line="52" pos:column="23">{
        <comment type="block" pos:line="53" pos:column="9">/* This supplies additional information for the default message. */</comment>
        <expr_stmt><expr><call><name pos:line="54" pos:column="9">ap_log_rerror<pos:position pos:line="54" pos:column="22"/></name><argument_list pos:line="54" pos:column="22">(<argument><expr><name pos:line="54" pos:column="23">APLOG_MARK<pos:position pos:line="54" pos:column="33"/></name></expr></argument>, <argument><expr><name pos:line="54" pos:column="35">APLOG_ERR<pos:position pos:line="54" pos:column="44"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="54" pos:column="46">0<pos:position pos:line="54" pos:column="47"/></literal></expr></argument>, <argument><expr><name pos:line="54" pos:column="49">r<pos:position pos:line="54" pos:column="50"/></name></expr></argument>, <argument><expr><call><name pos:line="54" pos:column="52">APLOGNO<pos:position pos:line="54" pos:column="59"/></name><argument_list pos:line="54" pos:column="59">(<argument><expr><literal type="number" pos:line="54" pos:column="60">00591<pos:position pos:line="54" pos:column="65"/></literal></expr></argument>)<pos:position pos:line="54" pos:column="66"/></argument_list></call>
                      <literal type="string" pos:line="55" pos:column="23">"The request is missing a Destination header."<pos:position pos:line="55" pos:column="69"/></literal></expr></argument>)<pos:position pos:line="55" pos:column="70"/></argument_list></call></expr>;<pos:position pos:line="55" pos:column="71"/></expr_stmt>
        <return pos:line="56" pos:column="9">return <expr><name pos:line="56" pos:column="16">HTTP_BAD_REQUEST<pos:position pos:line="56" pos:column="32"/></name></expr>;<pos:position pos:line="56" pos:column="33"/></return>
    }<pos:position pos:line="57" pos:column="6"/></block></then></if>

    <expr_stmt><expr><name pos:line="59" pos:column="5">lookup<pos:position pos:line="59" pos:column="11"/></name> <operator pos:line="59" pos:column="12">=<pos:position pos:line="59" pos:column="13"/></operator> <call><name pos:line="59" pos:column="14">dav_lookup_uri<pos:position pos:line="59" pos:column="28"/></name><argument_list pos:line="59" pos:column="28">(<argument><expr><name pos:line="59" pos:column="29">dest<pos:position pos:line="59" pos:column="33"/></name></expr></argument>, <argument><expr><name pos:line="59" pos:column="35">r<pos:position pos:line="59" pos:column="36"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="59" pos:column="38">1<pos:position pos:line="59" pos:column="39"/></literal></expr></argument> <comment type="block" pos:line="59" pos:column="40">/* must_be_absolute */</comment>)<pos:position pos:line="59" pos:column="63"/></argument_list></call></expr>;<pos:position pos:line="59" pos:column="64"/></expr_stmt>
    <if pos:line="60" pos:column="5">if <condition pos:line="60" pos:column="8">(<expr><name><name pos:line="60" pos:column="9">lookup<pos:position pos:line="60" pos:column="15"/></name><operator pos:line="60" pos:column="15">.<pos:position pos:line="60" pos:column="16"/></operator><name pos:line="60" pos:column="16">rnew<pos:position pos:line="60" pos:column="20"/></name></name> <operator pos:line="60" pos:column="21">==<pos:position pos:line="60" pos:column="23"/></operator> <name pos:line="60" pos:column="24">NULL<pos:position pos:line="60" pos:column="28"/></name></expr>)<pos:position pos:line="60" pos:column="29"/></condition><then pos:line="60" pos:column="29"> <block pos:line="60" pos:column="30">{
        <if pos:line="61" pos:column="9">if <condition pos:line="61" pos:column="12">(<expr><name><name pos:line="61" pos:column="13">lookup<pos:position pos:line="61" pos:column="19"/></name><operator pos:line="61" pos:column="19">.<pos:position pos:line="61" pos:column="20"/></operator><name pos:line="61" pos:column="20">err<pos:position pos:line="61" pos:column="23"/></name><operator pos:line="61" pos:column="23">.<pos:position pos:line="61" pos:column="24"/></operator><name pos:line="61" pos:column="24">status<pos:position pos:line="61" pos:column="30"/></name></name> <operator pos:line="61" pos:column="31">==<pos:position pos:line="61" pos:column="33"/></operator> <name pos:line="61" pos:column="34">HTTP_BAD_REQUEST<pos:position pos:line="61" pos:column="50"/></name></expr>)<pos:position pos:line="61" pos:column="51"/></condition><then pos:line="61" pos:column="51"> <block pos:line="61" pos:column="52">{
            <comment type="block" pos:line="62" pos:column="13">/* This supplies additional information for the default message. */</comment>
            <expr_stmt><expr><call><name pos:line="63" pos:column="13">ap_log_rerror<pos:position pos:line="63" pos:column="26"/></name><argument_list pos:line="63" pos:column="26">(<argument><expr><name pos:line="63" pos:column="27">APLOG_MARK<pos:position pos:line="63" pos:column="37"/></name></expr></argument>, <argument><expr><name pos:line="63" pos:column="39">APLOG_ERR<pos:position pos:line="63" pos:column="48"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="63" pos:column="50">0<pos:position pos:line="63" pos:column="51"/></literal></expr></argument>, <argument><expr><name pos:line="63" pos:column="53">r<pos:position pos:line="63" pos:column="54"/></name></expr></argument>, <argument><expr><call><name pos:line="63" pos:column="56">APLOGNO<pos:position pos:line="63" pos:column="63"/></name><argument_list pos:line="63" pos:column="63">(<argument><expr><literal type="number" pos:line="63" pos:column="64">00592<pos:position pos:line="63" pos:column="69"/></literal></expr></argument>)<pos:position pos:line="63" pos:column="70"/></argument_list></call>
                          <literal type="string" pos:line="64" pos:column="27">"%s"<pos:position pos:line="64" pos:column="31"/></literal></expr></argument>, <argument><expr><name><name pos:line="64" pos:column="33">lookup<pos:position pos:line="64" pos:column="39"/></name><operator pos:line="64" pos:column="39">.<pos:position pos:line="64" pos:column="40"/></operator><name pos:line="64" pos:column="40">err<pos:position pos:line="64" pos:column="43"/></name><operator pos:line="64" pos:column="43">.<pos:position pos:line="64" pos:column="44"/></operator><name pos:line="64" pos:column="44">desc<pos:position pos:line="64" pos:column="48"/></name></name></expr></argument>)<pos:position pos:line="64" pos:column="49"/></argument_list></call></expr>;<pos:position pos:line="64" pos:column="50"/></expr_stmt>
            <return pos:line="65" pos:column="13">return <expr><name pos:line="65" pos:column="20">HTTP_BAD_REQUEST<pos:position pos:line="65" pos:column="36"/></name></expr>;<pos:position pos:line="65" pos:column="37"/></return>
        }<pos:position pos:line="66" pos:column="10"/></block></then></if>

        <comment type="block" pos:line="68" pos:column="9">/* ### this assumes that dav_lookup_uri() only generates a status
         * ### that Apache can provide a status line for!! */</comment>

        <return pos:line="71" pos:column="9">return <expr><call><name pos:line="71" pos:column="16">dav_error_response<pos:position pos:line="71" pos:column="34"/></name><argument_list pos:line="71" pos:column="34">(<argument><expr><name pos:line="71" pos:column="35">r<pos:position pos:line="71" pos:column="36"/></name></expr></argument>, <argument><expr><name><name pos:line="71" pos:column="38">lookup<pos:position pos:line="71" pos:column="44"/></name><operator pos:line="71" pos:column="44">.<pos:position pos:line="71" pos:column="45"/></operator><name pos:line="71" pos:column="45">err<pos:position pos:line="71" pos:column="48"/></name><operator pos:line="71" pos:column="48">.<pos:position pos:line="71" pos:column="49"/></operator><name pos:line="71" pos:column="49">status<pos:position pos:line="71" pos:column="55"/></name></name></expr></argument>, <argument><expr><name><name pos:line="71" pos:column="57">lookup<pos:position pos:line="71" pos:column="63"/></name><operator pos:line="71" pos:column="63">.<pos:position pos:line="71" pos:column="64"/></operator><name pos:line="71" pos:column="64">err<pos:position pos:line="71" pos:column="67"/></name><operator pos:line="71" pos:column="67">.<pos:position pos:line="71" pos:column="68"/></operator><name pos:line="71" pos:column="68">desc<pos:position pos:line="71" pos:column="72"/></name></name></expr></argument>)<pos:position pos:line="71" pos:column="73"/></argument_list></call></expr>;<pos:position pos:line="71" pos:column="74"/></return>
    }<pos:position pos:line="72" pos:column="6"/></block></then></if>
    <if pos:line="73" pos:column="5">if <condition pos:line="73" pos:column="8">(<expr><name><name pos:line="73" pos:column="9">lookup<pos:position pos:line="73" pos:column="15"/></name><operator pos:line="73" pos:column="15">.<pos:position pos:line="73" pos:column="16"/></operator><name pos:line="73" pos:column="16">rnew<pos:position pos:line="73" pos:column="20"/></name><operator pos:line="73" pos:column="20">-&gt;<pos:position pos:line="73" pos:column="25"/></operator><name pos:line="73" pos:column="22">status<pos:position pos:line="73" pos:column="28"/></name></name> <operator pos:line="73" pos:column="29">!=<pos:position pos:line="73" pos:column="31"/></operator> <name pos:line="73" pos:column="32">HTTP_OK<pos:position pos:line="73" pos:column="39"/></name></expr>)<pos:position pos:line="73" pos:column="40"/></condition><then pos:line="73" pos:column="40"> <block pos:line="73" pos:column="41">{
        <decl_stmt><decl><type><specifier pos:line="74" pos:column="9">const<pos:position pos:line="74" pos:column="14"/></specifier> <name pos:line="74" pos:column="15">char<pos:position pos:line="74" pos:column="19"/></name> <modifier pos:line="74" pos:column="20">*<pos:position pos:line="74" pos:column="21"/></modifier></type><name pos:line="74" pos:column="21">auth<pos:position pos:line="74" pos:column="25"/></name> <init pos:line="74" pos:column="26">= <expr><call><name pos:line="74" pos:column="28">apr_table_get<pos:position pos:line="74" pos:column="41"/></name><argument_list pos:line="74" pos:column="41">(<argument><expr><name><name pos:line="74" pos:column="42">lookup<pos:position pos:line="74" pos:column="48"/></name><operator pos:line="74" pos:column="48">.<pos:position pos:line="74" pos:column="49"/></operator><name pos:line="74" pos:column="49">rnew<pos:position pos:line="74" pos:column="53"/></name><operator pos:line="74" pos:column="53">-&gt;<pos:position pos:line="74" pos:column="58"/></operator><name pos:line="74" pos:column="55">err_headers_out<pos:position pos:line="74" pos:column="70"/></name></name></expr></argument>,
                                        <argument><expr><literal type="string" pos:line="75" pos:column="41">"WWW-Authenticate"<pos:position pos:line="75" pos:column="59"/></literal></expr></argument>)<pos:position pos:line="75" pos:column="60"/></argument_list></call></expr></init></decl>;<pos:position pos:line="75" pos:column="61"/></decl_stmt>
        <if pos:line="76" pos:column="9">if <condition pos:line="76" pos:column="12">(<expr><name><name pos:line="76" pos:column="13">lookup<pos:position pos:line="76" pos:column="19"/></name><operator pos:line="76" pos:column="19">.<pos:position pos:line="76" pos:column="20"/></operator><name pos:line="76" pos:column="20">rnew<pos:position pos:line="76" pos:column="24"/></name><operator pos:line="76" pos:column="24">-&gt;<pos:position pos:line="76" pos:column="29"/></operator><name pos:line="76" pos:column="26">status<pos:position pos:line="76" pos:column="32"/></name></name> <operator pos:line="76" pos:column="33">==<pos:position pos:line="76" pos:column="35"/></operator> <name pos:line="76" pos:column="36">HTTP_UNAUTHORIZED<pos:position pos:line="76" pos:column="53"/></name> <operator pos:line="76" pos:column="54">&amp;&amp;<pos:position pos:line="76" pos:column="64"/></operator> <name pos:line="76" pos:column="57">auth<pos:position pos:line="76" pos:column="61"/></name> <operator pos:line="76" pos:column="62">!=<pos:position pos:line="76" pos:column="64"/></operator> <name pos:line="76" pos:column="65">NULL<pos:position pos:line="76" pos:column="69"/></name></expr>)<pos:position pos:line="76" pos:column="70"/></condition><then pos:line="76" pos:column="70"> <block pos:line="76" pos:column="71">{
            <comment type="block" pos:line="77" pos:column="13">/* propagate the WWW-Authorization header up from the
             * subreq so the client sees it. */</comment>
            <expr_stmt><expr><call><name pos:line="79" pos:column="13">apr_table_setn<pos:position pos:line="79" pos:column="27"/></name><argument_list pos:line="79" pos:column="27">(<argument><expr><name><name pos:line="79" pos:column="28">r<pos:position pos:line="79" pos:column="29"/></name><operator pos:line="79" pos:column="29">-&gt;<pos:position pos:line="79" pos:column="34"/></operator><name pos:line="79" pos:column="31">err_headers_out<pos:position pos:line="79" pos:column="46"/></name></name></expr></argument>, <argument><expr><literal type="string" pos:line="79" pos:column="48">"WWW-Authenticate"<pos:position pos:line="79" pos:column="66"/></literal></expr></argument>,
                           <argument><expr><call><name pos:line="80" pos:column="28">apr_pstrdup<pos:position pos:line="80" pos:column="39"/></name><argument_list pos:line="80" pos:column="39">(<argument><expr><name><name pos:line="80" pos:column="40">r<pos:position pos:line="80" pos:column="41"/></name><operator pos:line="80" pos:column="41">-&gt;<pos:position pos:line="80" pos:column="46"/></operator><name pos:line="80" pos:column="43">pool<pos:position pos:line="80" pos:column="47"/></name></name></expr></argument>, <argument><expr><name pos:line="80" pos:column="49">auth<pos:position pos:line="80" pos:column="53"/></name></expr></argument>)<pos:position pos:line="80" pos:column="54"/></argument_list></call></expr></argument>)<pos:position pos:line="80" pos:column="55"/></argument_list></call></expr>;<pos:position pos:line="80" pos:column="56"/></expr_stmt>
        }<pos:position pos:line="81" pos:column="10"/></block></then></if>

        <comment type="block" pos:line="83" pos:column="9">/* ### how best to report this... */</comment>
        <return pos:line="84" pos:column="9">return <expr><call><name pos:line="84" pos:column="16">dav_error_response<pos:position pos:line="84" pos:column="34"/></name><argument_list pos:line="84" pos:column="34">(<argument><expr><name pos:line="84" pos:column="35">r<pos:position pos:line="84" pos:column="36"/></name></expr></argument>, <argument><expr><name><name pos:line="84" pos:column="38">lookup<pos:position pos:line="84" pos:column="44"/></name><operator pos:line="84" pos:column="44">.<pos:position pos:line="84" pos:column="45"/></operator><name pos:line="84" pos:column="45">rnew<pos:position pos:line="84" pos:column="49"/></name><operator pos:line="84" pos:column="49">-&gt;<pos:position pos:line="84" pos:column="54"/></operator><name pos:line="84" pos:column="51">status<pos:position pos:line="84" pos:column="57"/></name></name></expr></argument>,
                                  <argument><expr><literal type="string" pos:line="85" pos:column="35">"Destination URI had an error."<pos:position pos:line="85" pos:column="66"/></literal></expr></argument>)<pos:position pos:line="85" pos:column="67"/></argument_list></call></expr>;<pos:position pos:line="85" pos:column="68"/></return>
    }<pos:position pos:line="86" pos:column="6"/></block></then></if>

    <comment type="block" pos:line="88" pos:column="5">/* Resolve destination resource */</comment>
    <expr_stmt><expr><name pos:line="89" pos:column="5">err<pos:position pos:line="89" pos:column="8"/></name> <operator pos:line="89" pos:column="9">=<pos:position pos:line="89" pos:column="10"/></operator> <call><name pos:line="89" pos:column="11">dav_get_resource<pos:position pos:line="89" pos:column="27"/></name><argument_list pos:line="89" pos:column="27">(<argument><expr><name><name pos:line="89" pos:column="28">lookup<pos:position pos:line="89" pos:column="34"/></name><operator pos:line="89" pos:column="34">.<pos:position pos:line="89" pos:column="35"/></operator><name pos:line="89" pos:column="35">rnew<pos:position pos:line="89" pos:column="39"/></name></name></expr></argument>, <argument><expr><literal type="number" pos:line="89" pos:column="41">0<pos:position pos:line="89" pos:column="42"/></literal></expr></argument> <comment type="block" pos:line="89" pos:column="43">/* label_allowed */</comment>,
                           <argument><expr><literal type="number" pos:line="90" pos:column="28">0<pos:position pos:line="90" pos:column="29"/></literal></expr></argument> <comment type="block" pos:line="90" pos:column="30">/* use_checked_in */</comment>, <argument><expr><operator pos:line="90" pos:column="52">&amp;<pos:position pos:line="90" pos:column="57"/></operator><name pos:line="90" pos:column="53">resnew<pos:position pos:line="90" pos:column="59"/></name></expr></argument>)<pos:position pos:line="90" pos:column="60"/></argument_list></call></expr>;<pos:position pos:line="90" pos:column="61"/></expr_stmt>
    <if pos:line="91" pos:column="5">if <condition pos:line="91" pos:column="8">(<expr><name pos:line="91" pos:column="9">err<pos:position pos:line="91" pos:column="12"/></name> <operator pos:line="91" pos:column="13">!=<pos:position pos:line="91" pos:column="15"/></operator> <name pos:line="91" pos:column="16">NULL<pos:position pos:line="91" pos:column="20"/></name></expr>)<pos:position pos:line="91" pos:column="21"/></condition><then pos:line="91" pos:column="21">
        <block type="pseudo"><return pos:line="92" pos:column="9">return <expr><call><name pos:line="92" pos:column="16">dav_handle_err<pos:position pos:line="92" pos:column="30"/></name><argument_list pos:line="92" pos:column="30">(<argument><expr><name pos:line="92" pos:column="31">r<pos:position pos:line="92" pos:column="32"/></name></expr></argument>, <argument><expr><name pos:line="92" pos:column="34">err<pos:position pos:line="92" pos:column="37"/></name></expr></argument>, <argument><expr><name pos:line="92" pos:column="39">NULL<pos:position pos:line="92" pos:column="43"/></name></expr></argument>)<pos:position pos:line="92" pos:column="44"/></argument_list></call></expr>;<pos:position pos:line="92" pos:column="45"/></return></block></then></if>

    <comment type="block" pos:line="94" pos:column="5">/* are the two resources handled by the same repository? */</comment>
    <if pos:line="95" pos:column="5">if <condition pos:line="95" pos:column="8">(<expr><name><name pos:line="95" pos:column="9">resource<pos:position pos:line="95" pos:column="17"/></name><operator pos:line="95" pos:column="17">-&gt;<pos:position pos:line="95" pos:column="22"/></operator><name pos:line="95" pos:column="19">hooks<pos:position pos:line="95" pos:column="24"/></name></name> <operator pos:line="95" pos:column="25">!=<pos:position pos:line="95" pos:column="27"/></operator> <name><name pos:line="95" pos:column="28">resnew<pos:position pos:line="95" pos:column="34"/></name><operator pos:line="95" pos:column="34">-&gt;<pos:position pos:line="95" pos:column="39"/></operator><name pos:line="95" pos:column="36">hooks<pos:position pos:line="95" pos:column="41"/></name></name></expr>)<pos:position pos:line="95" pos:column="42"/></condition><then pos:line="95" pos:column="42"> <block pos:line="95" pos:column="43">{
        <comment type="block" pos:line="96" pos:column="9">/* ### this message exposes some backend config, but screw it... */</comment>
        <return pos:line="97" pos:column="9">return <expr><call><name pos:line="97" pos:column="16">dav_error_response<pos:position pos:line="97" pos:column="34"/></name><argument_list pos:line="97" pos:column="34">(<argument><expr><name pos:line="97" pos:column="35">r<pos:position pos:line="97" pos:column="36"/></name></expr></argument>, <argument><expr><name pos:line="97" pos:column="38">HTTP_BAD_GATEWAY<pos:position pos:line="97" pos:column="54"/></name></expr></argument>,
                                  <argument><expr><literal type="string" pos:line="98" pos:column="35">"Destination URI is handled by a "<pos:position pos:line="98" pos:column="69"/></literal>
                                  <literal type="string" pos:line="99" pos:column="35">"different repository than the source URI. "<pos:position pos:line="99" pos:column="79"/></literal>
                                  <literal type="string" pos:line="100" pos:column="35">"MOVE or COPY between repositories is "<pos:position pos:line="100" pos:column="74"/></literal>
                                  <literal type="string" pos:line="101" pos:column="35">"not possible."<pos:position pos:line="101" pos:column="50"/></literal></expr></argument>)<pos:position pos:line="101" pos:column="51"/></argument_list></call></expr>;<pos:position pos:line="101" pos:column="52"/></return>
    }<pos:position pos:line="102" pos:column="6"/></block></then></if>

    <comment type="block" pos:line="104" pos:column="5">/* get and parse the overwrite header value */</comment>
    <if pos:line="105" pos:column="5">if <condition pos:line="105" pos:column="8">(<expr><operator pos:line="105" pos:column="9">(<pos:position pos:line="105" pos:column="10"/></operator><name pos:line="105" pos:column="10">overwrite<pos:position pos:line="105" pos:column="19"/></name> <operator pos:line="105" pos:column="20">=<pos:position pos:line="105" pos:column="21"/></operator> <call><name pos:line="105" pos:column="22">dav_get_overwrite<pos:position pos:line="105" pos:column="39"/></name><argument_list pos:line="105" pos:column="39">(<argument><expr><name pos:line="105" pos:column="40">r<pos:position pos:line="105" pos:column="41"/></name></expr></argument>)<pos:position pos:line="105" pos:column="42"/></argument_list></call><operator pos:line="105" pos:column="42">)<pos:position pos:line="105" pos:column="43"/></operator> <operator pos:line="105" pos:column="44">&lt;<pos:position pos:line="105" pos:column="48"/></operator> <literal type="number" pos:line="105" pos:column="46">0<pos:position pos:line="105" pos:column="47"/></literal></expr>)<pos:position pos:line="105" pos:column="48"/></condition><then pos:line="105" pos:column="48"> <block pos:line="105" pos:column="49">{
        <comment type="block" pos:line="106" pos:column="9">/* dav_get_overwrite() supplies additional information for the
         * default message. */</comment>
        <return pos:line="108" pos:column="9">return <expr><name pos:line="108" pos:column="16">HTTP_BAD_REQUEST<pos:position pos:line="108" pos:column="32"/></name></expr>;<pos:position pos:line="108" pos:column="33"/></return>
    }<pos:position pos:line="109" pos:column="6"/></block></then></if>

    <comment type="block" pos:line="111" pos:column="5">/* quick failure test: if dest exists and overwrite is false. */</comment>
    <if pos:line="112" pos:column="5">if <condition pos:line="112" pos:column="8">(<expr><name><name pos:line="112" pos:column="9">resnew<pos:position pos:line="112" pos:column="15"/></name><operator pos:line="112" pos:column="15">-&gt;<pos:position pos:line="112" pos:column="20"/></operator><name pos:line="112" pos:column="17">exists<pos:position pos:line="112" pos:column="23"/></name></name> <operator pos:line="112" pos:column="24">&amp;&amp;<pos:position pos:line="112" pos:column="34"/></operator> <operator pos:line="112" pos:column="27">!<pos:position pos:line="112" pos:column="28"/></operator><name pos:line="112" pos:column="28">overwrite<pos:position pos:line="112" pos:column="37"/></name></expr>)<pos:position pos:line="112" pos:column="38"/></condition><then pos:line="112" pos:column="38"> <block pos:line="112" pos:column="39">{
        <comment type="block" pos:line="113" pos:column="9">/* Supply some text for the error response body. */</comment>
        <return pos:line="114" pos:column="9">return <expr><call><name pos:line="114" pos:column="16">dav_error_response<pos:position pos:line="114" pos:column="34"/></name><argument_list pos:line="114" pos:column="34">(<argument><expr><name pos:line="114" pos:column="35">r<pos:position pos:line="114" pos:column="36"/></name></expr></argument>, <argument><expr><name pos:line="114" pos:column="38">HTTP_PRECONDITION_FAILED<pos:position pos:line="114" pos:column="62"/></name></expr></argument>,
                                  <argument><expr><literal type="string" pos:line="115" pos:column="35">"Destination is not empty and "<pos:position pos:line="115" pos:column="66"/></literal>
                                  <literal type="string" pos:line="116" pos:column="35">"Overwrite is not \"T\""<pos:position pos:line="116" pos:column="59"/></literal></expr></argument>)<pos:position pos:line="116" pos:column="60"/></argument_list></call></expr>;<pos:position pos:line="116" pos:column="61"/></return>
    }<pos:position pos:line="117" pos:column="6"/></block></then></if>

    <comment type="block" pos:line="119" pos:column="5">/* are the source and destination the same? */</comment>
    <if pos:line="120" pos:column="5">if <condition pos:line="120" pos:column="8">(<expr><call pos:line="120" pos:column="9">(<modifier pos:line="120" pos:column="10">*<pos:position pos:line="120" pos:column="11"/></modifier><name><name pos:line="120" pos:column="11">resource<pos:position pos:line="120" pos:column="19"/></name><operator pos:line="120" pos:column="19">-&gt;<pos:position pos:line="120" pos:column="24"/></operator><name pos:line="120" pos:column="21">hooks<pos:position pos:line="120" pos:column="26"/></name><operator pos:line="120" pos:column="26">-&gt;<pos:position pos:line="120" pos:column="31"/></operator><name pos:line="120" pos:column="28">is_same_resource<pos:position pos:line="120" pos:column="44"/></name></name>)<argument_list pos:line="120" pos:column="45">(<argument><expr><name pos:line="120" pos:column="46">resource<pos:position pos:line="120" pos:column="54"/></name></expr></argument>, <argument><expr><name pos:line="120" pos:column="56">resnew<pos:position pos:line="120" pos:column="62"/></name></expr></argument>)<pos:position pos:line="120" pos:column="63"/></argument_list></call></expr>)<pos:position pos:line="120" pos:column="64"/></condition><then pos:line="120" pos:column="64"> <block pos:line="120" pos:column="65">{
        <comment type="block" pos:line="121" pos:column="9">/* Supply some text for the error response body. */</comment>
        <return pos:line="122" pos:column="9">return <expr><call><name pos:line="122" pos:column="16">dav_error_response<pos:position pos:line="122" pos:column="34"/></name><argument_list pos:line="122" pos:column="34">(<argument><expr><name pos:line="122" pos:column="35">r<pos:position pos:line="122" pos:column="36"/></name></expr></argument>, <argument><expr><name pos:line="122" pos:column="38">HTTP_FORBIDDEN<pos:position pos:line="122" pos:column="52"/></name></expr></argument>,
                                  <argument><expr><literal type="string" pos:line="123" pos:column="35">"Source and Destination URIs are the same."<pos:position pos:line="123" pos:column="78"/></literal></expr></argument>)<pos:position pos:line="123" pos:column="79"/></argument_list></call></expr>;<pos:position pos:line="123" pos:column="80"/></return>

    }<pos:position pos:line="125" pos:column="6"/></block></then></if>

    <expr_stmt><expr><name pos:line="127" pos:column="5">is_dir<pos:position pos:line="127" pos:column="11"/></name> <operator pos:line="127" pos:column="12">=<pos:position pos:line="127" pos:column="13"/></operator> <name><name pos:line="127" pos:column="14">resource<pos:position pos:line="127" pos:column="22"/></name><operator pos:line="127" pos:column="22">-&gt;<pos:position pos:line="127" pos:column="27"/></operator><name pos:line="127" pos:column="24">collection<pos:position pos:line="127" pos:column="34"/></name></name></expr>;<pos:position pos:line="127" pos:column="35"/></expr_stmt>

    <comment type="block" pos:line="129" pos:column="5">/* get and parse the Depth header value. "0" and "infinity" are legal. */</comment>
    <if pos:line="130" pos:column="5">if <condition pos:line="130" pos:column="8">(<expr><operator pos:line="130" pos:column="9">(<pos:position pos:line="130" pos:column="10"/></operator><name pos:line="130" pos:column="10">depth<pos:position pos:line="130" pos:column="15"/></name> <operator pos:line="130" pos:column="16">=<pos:position pos:line="130" pos:column="17"/></operator> <call><name pos:line="130" pos:column="18">dav_get_depth<pos:position pos:line="130" pos:column="31"/></name><argument_list pos:line="130" pos:column="31">(<argument><expr><name pos:line="130" pos:column="32">r<pos:position pos:line="130" pos:column="33"/></name></expr></argument>, <argument><expr><name pos:line="130" pos:column="35">DAV_INFINITY<pos:position pos:line="130" pos:column="47"/></name></expr></argument>)<pos:position pos:line="130" pos:column="48"/></argument_list></call><operator pos:line="130" pos:column="48">)<pos:position pos:line="130" pos:column="49"/></operator> <operator pos:line="130" pos:column="50">&lt;<pos:position pos:line="130" pos:column="54"/></operator> <literal type="number" pos:line="130" pos:column="52">0<pos:position pos:line="130" pos:column="53"/></literal></expr>)<pos:position pos:line="130" pos:column="54"/></condition><then pos:line="130" pos:column="54"> <block pos:line="130" pos:column="55">{
        <comment type="block" pos:line="131" pos:column="9">/* dav_get_depth() supplies additional information for the
         * default message. */</comment>
        <return pos:line="133" pos:column="9">return <expr><name pos:line="133" pos:column="16">HTTP_BAD_REQUEST<pos:position pos:line="133" pos:column="32"/></name></expr>;<pos:position pos:line="133" pos:column="33"/></return>
    }<pos:position pos:line="134" pos:column="6"/></block></then></if>
    <if pos:line="135" pos:column="5">if <condition pos:line="135" pos:column="8">(<expr><name pos:line="135" pos:column="9">depth<pos:position pos:line="135" pos:column="14"/></name> <operator pos:line="135" pos:column="15">==<pos:position pos:line="135" pos:column="17"/></operator> <literal type="number" pos:line="135" pos:column="18">1<pos:position pos:line="135" pos:column="19"/></literal></expr>)<pos:position pos:line="135" pos:column="20"/></condition><then pos:line="135" pos:column="20"> <block pos:line="135" pos:column="21">{
        <comment type="block" pos:line="136" pos:column="9">/* This supplies additional information for the default message. */</comment>
        <expr_stmt><expr><call><name pos:line="137" pos:column="9">ap_log_rerror<pos:position pos:line="137" pos:column="22"/></name><argument_list pos:line="137" pos:column="22">(<argument><expr><name pos:line="137" pos:column="23">APLOG_MARK<pos:position pos:line="137" pos:column="33"/></name></expr></argument>, <argument><expr><name pos:line="137" pos:column="35">APLOG_ERR<pos:position pos:line="137" pos:column="44"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="137" pos:column="46">0<pos:position pos:line="137" pos:column="47"/></literal></expr></argument>, <argument><expr><name pos:line="137" pos:column="49">r<pos:position pos:line="137" pos:column="50"/></name></expr></argument>, <argument><expr><call><name pos:line="137" pos:column="52">APLOGNO<pos:position pos:line="137" pos:column="59"/></name><argument_list pos:line="137" pos:column="59">(<argument><expr><literal type="number" pos:line="137" pos:column="60">00593<pos:position pos:line="137" pos:column="65"/></literal></expr></argument>)<pos:position pos:line="137" pos:column="66"/></argument_list></call>
                      <literal type="string" pos:line="138" pos:column="23">"Depth must be \"0\" or \"infinity\" for COPY or MOVE."<pos:position pos:line="138" pos:column="78"/></literal></expr></argument>)<pos:position pos:line="138" pos:column="79"/></argument_list></call></expr>;<pos:position pos:line="138" pos:column="80"/></expr_stmt>
        <return pos:line="139" pos:column="9">return <expr><name pos:line="139" pos:column="16">HTTP_BAD_REQUEST<pos:position pos:line="139" pos:column="32"/></name></expr>;<pos:position pos:line="139" pos:column="33"/></return>
    }<pos:position pos:line="140" pos:column="6"/></block></then></if>
    <if pos:line="141" pos:column="5">if <condition pos:line="141" pos:column="8">(<expr><name pos:line="141" pos:column="9">is_move<pos:position pos:line="141" pos:column="16"/></name> <operator pos:line="141" pos:column="17">&amp;&amp;<pos:position pos:line="141" pos:column="27"/></operator> <name pos:line="141" pos:column="20">is_dir<pos:position pos:line="141" pos:column="26"/></name> <operator pos:line="141" pos:column="27">&amp;&amp;<pos:position pos:line="141" pos:column="37"/></operator> <name pos:line="141" pos:column="30">depth<pos:position pos:line="141" pos:column="35"/></name> <operator pos:line="141" pos:column="36">!=<pos:position pos:line="141" pos:column="38"/></operator> <name pos:line="141" pos:column="39">DAV_INFINITY<pos:position pos:line="141" pos:column="51"/></name></expr>)<pos:position pos:line="141" pos:column="52"/></condition><then pos:line="141" pos:column="52"> <block pos:line="141" pos:column="53">{
        <comment type="block" pos:line="142" pos:column="9">/* This supplies additional information for the default message. */</comment>
        <expr_stmt><expr><call><name pos:line="143" pos:column="9">ap_log_rerror<pos:position pos:line="143" pos:column="22"/></name><argument_list pos:line="143" pos:column="22">(<argument><expr><name pos:line="143" pos:column="23">APLOG_MARK<pos:position pos:line="143" pos:column="33"/></name></expr></argument>, <argument><expr><name pos:line="143" pos:column="35">APLOG_ERR<pos:position pos:line="143" pos:column="44"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="143" pos:column="46">0<pos:position pos:line="143" pos:column="47"/></literal></expr></argument>, <argument><expr><name pos:line="143" pos:column="49">r<pos:position pos:line="143" pos:column="50"/></name></expr></argument>, <argument><expr><call><name pos:line="143" pos:column="52">APLOGNO<pos:position pos:line="143" pos:column="59"/></name><argument_list pos:line="143" pos:column="59">(<argument><expr><literal type="number" pos:line="143" pos:column="60">00594<pos:position pos:line="143" pos:column="65"/></literal></expr></argument>)<pos:position pos:line="143" pos:column="66"/></argument_list></call>
                      <literal type="string" pos:line="144" pos:column="23">"Depth must be \"infinity\" when moving a collection."<pos:position pos:line="144" pos:column="77"/></literal></expr></argument>)<pos:position pos:line="144" pos:column="78"/></argument_list></call></expr>;<pos:position pos:line="144" pos:column="79"/></expr_stmt>
        <return pos:line="145" pos:column="9">return <expr><name pos:line="145" pos:column="16">HTTP_BAD_REQUEST<pos:position pos:line="145" pos:column="32"/></name></expr>;<pos:position pos:line="145" pos:column="33"/></return>
    }<pos:position pos:line="146" pos:column="6"/></block></then></if>

    <comment type="block" pos:line="148" pos:column="5">/*
     * Check If-Headers and existing locks for each resource in the source.
     * We will return a 424 response with a DAV:multistatus body.
     * The multistatus responses will contain the information about any
     * resource that fails the validation.
     *
     * We check the parent resource, too, if this is a MOVE. Moving the
     * resource effectively removes it from the parent collection, so we
     * must ensure that we have met the appropriate conditions.
     *
     * If a problem occurs with the Request-URI itself, then a plain error
     * (rather than a multistatus) will be returned.
     */</comment>
    <if pos:line="161" pos:column="5">if <condition pos:line="161" pos:column="8">(<expr><operator pos:line="161" pos:column="9">(<pos:position pos:line="161" pos:column="10"/></operator><name pos:line="161" pos:column="10">err<pos:position pos:line="161" pos:column="13"/></name> <operator pos:line="161" pos:column="14">=<pos:position pos:line="161" pos:column="15"/></operator> <call><name pos:line="161" pos:column="16">dav_validate_request<pos:position pos:line="161" pos:column="36"/></name><argument_list pos:line="161" pos:column="36">(<argument><expr><name pos:line="161" pos:column="37">r<pos:position pos:line="161" pos:column="38"/></name></expr></argument>, <argument><expr><name pos:line="161" pos:column="40">resource<pos:position pos:line="161" pos:column="48"/></name></expr></argument>, <argument><expr><name pos:line="161" pos:column="50">depth<pos:position pos:line="161" pos:column="55"/></name></expr></argument>, <argument><expr><name pos:line="161" pos:column="57">NULL<pos:position pos:line="161" pos:column="61"/></name></expr></argument>,
                                    <argument><expr><operator pos:line="162" pos:column="37">&amp;<pos:position pos:line="162" pos:column="42"/></operator><name pos:line="162" pos:column="38">multi_response<pos:position pos:line="162" pos:column="52"/></name></expr></argument>,
                                    <argument><expr><operator pos:line="163" pos:column="37">(<pos:position pos:line="163" pos:column="38"/></operator><ternary><condition><expr><name pos:line="163" pos:column="38">is_move<pos:position pos:line="163" pos:column="45"/></name></expr> ?<pos:position pos:line="163" pos:column="47"/></condition><then pos:line="163" pos:column="47"> <expr><name pos:line="163" pos:column="48">DAV_VALIDATE_PARENT<pos:position pos:line="163" pos:column="67"/></name></expr>
                                             <pos:position pos:line="164" pos:column="46"/></then><else pos:line="164" pos:column="46">: <expr><name pos:line="164" pos:column="48">DAV_VALIDATE_RESOURCE<pos:position pos:line="164" pos:column="69"/></name>
                                               <operator pos:line="165" pos:column="48">|<pos:position pos:line="165" pos:column="49"/></operator> <name pos:line="165" pos:column="50">DAV_VALIDATE_NO_MODIFY<pos:position pos:line="165" pos:column="72"/></name></expr></else></ternary><operator pos:line="165" pos:column="72">)<pos:position pos:line="165" pos:column="73"/></operator>
                                    <operator pos:line="166" pos:column="37">|<pos:position pos:line="166" pos:column="38"/></operator> <name pos:line="166" pos:column="39">DAV_VALIDATE_USE_424<pos:position pos:line="166" pos:column="59"/></name></expr></argument>,
                                    <argument><expr><name pos:line="167" pos:column="37">NULL<pos:position pos:line="167" pos:column="41"/></name></expr></argument>)<pos:position pos:line="167" pos:column="42"/></argument_list></call><operator pos:line="167" pos:column="42">)<pos:position pos:line="167" pos:column="43"/></operator> <operator pos:line="167" pos:column="44">!=<pos:position pos:line="167" pos:column="46"/></operator> <name pos:line="167" pos:column="47">NULL<pos:position pos:line="167" pos:column="51"/></name></expr>)<pos:position pos:line="167" pos:column="52"/></condition><then pos:line="167" pos:column="52"> <block pos:line="167" pos:column="53">{
        <expr_stmt><expr><name pos:line="168" pos:column="9">err<pos:position pos:line="168" pos:column="12"/></name> <operator pos:line="168" pos:column="13">=<pos:position pos:line="168" pos:column="14"/></operator> <call><name pos:line="168" pos:column="15">dav_push_error<pos:position pos:line="168" pos:column="29"/></name><argument_list pos:line="168" pos:column="29">(<argument><expr><name><name pos:line="168" pos:column="30">r<pos:position pos:line="168" pos:column="31"/></name><operator pos:line="168" pos:column="31">-&gt;<pos:position pos:line="168" pos:column="36"/></operator><name pos:line="168" pos:column="33">pool<pos:position pos:line="168" pos:column="37"/></name></name></expr></argument>, <argument><expr><name><name pos:line="168" pos:column="39">err<pos:position pos:line="168" pos:column="42"/></name><operator pos:line="168" pos:column="42">-&gt;<pos:position pos:line="168" pos:column="47"/></operator><name pos:line="168" pos:column="44">status<pos:position pos:line="168" pos:column="50"/></name></name></expr></argument>, <argument><expr><literal type="number" pos:line="168" pos:column="52">0<pos:position pos:line="168" pos:column="53"/></literal></expr></argument>,
                             <argument><expr><call><name pos:line="169" pos:column="30">apr_psprintf<pos:position pos:line="169" pos:column="42"/></name><argument_list pos:line="169" pos:column="42">(<argument><expr><name><name pos:line="169" pos:column="43">r<pos:position pos:line="169" pos:column="44"/></name><operator pos:line="169" pos:column="44">-&gt;<pos:position pos:line="169" pos:column="49"/></operator><name pos:line="169" pos:column="46">pool<pos:position pos:line="169" pos:column="50"/></name></name></expr></argument>,
                                          <argument><expr><literal type="string" pos:line="170" pos:column="43">"Could not %s %s due to a failed "<pos:position pos:line="170" pos:column="77"/></literal>
                                          <literal type="string" pos:line="171" pos:column="43">"precondition on the source "<pos:position pos:line="171" pos:column="72"/></literal>
                                          <literal type="string" pos:line="172" pos:column="43">"(e.g. locks)."<pos:position pos:line="172" pos:column="58"/></literal></expr></argument>,
                                          <argument><expr><ternary><condition><expr><name pos:line="173" pos:column="43">is_move<pos:position pos:line="173" pos:column="50"/></name></expr> ?<pos:position pos:line="173" pos:column="52"/></condition><then pos:line="173" pos:column="52"> <expr><literal type="string" pos:line="173" pos:column="53">"MOVE"<pos:position pos:line="173" pos:column="59"/></literal></expr> <pos:position pos:line="173" pos:column="60"/></then><else pos:line="173" pos:column="60">: <expr><literal type="string" pos:line="173" pos:column="62">"COPY"<pos:position pos:line="173" pos:column="68"/></literal></expr></else></ternary></expr></argument>,
                                          <argument><expr><call><name pos:line="174" pos:column="43">ap_escape_html<pos:position pos:line="174" pos:column="57"/></name><argument_list pos:line="174" pos:column="57">(<argument><expr><name><name pos:line="174" pos:column="58">r<pos:position pos:line="174" pos:column="59"/></name><operator pos:line="174" pos:column="59">-&gt;<pos:position pos:line="174" pos:column="64"/></operator><name pos:line="174" pos:column="61">pool<pos:position pos:line="174" pos:column="65"/></name></name></expr></argument>, <argument><expr><name><name pos:line="174" pos:column="67">r<pos:position pos:line="174" pos:column="68"/></name><operator pos:line="174" pos:column="68">-&gt;<pos:position pos:line="174" pos:column="73"/></operator><name pos:line="174" pos:column="70">uri<pos:position pos:line="174" pos:column="73"/></name></name></expr></argument>)<pos:position pos:line="174" pos:column="74"/></argument_list></call></expr></argument>)<pos:position pos:line="174" pos:column="75"/></argument_list></call></expr></argument>,
                             <argument><expr><name pos:line="175" pos:column="30">err<pos:position pos:line="175" pos:column="33"/></name></expr></argument>)<pos:position pos:line="175" pos:column="34"/></argument_list></call></expr>;<pos:position pos:line="175" pos:column="35"/></expr_stmt>
        <return pos:line="176" pos:column="9">return <expr><call><name pos:line="176" pos:column="16">dav_handle_err<pos:position pos:line="176" pos:column="30"/></name><argument_list pos:line="176" pos:column="30">(<argument><expr><name pos:line="176" pos:column="31">r<pos:position pos:line="176" pos:column="32"/></name></expr></argument>, <argument><expr><name pos:line="176" pos:column="34">err<pos:position pos:line="176" pos:column="37"/></name></expr></argument>, <argument><expr><name pos:line="176" pos:column="39">multi_response<pos:position pos:line="176" pos:column="53"/></name></expr></argument>)<pos:position pos:line="176" pos:column="54"/></argument_list></call></expr>;<pos:position pos:line="176" pos:column="55"/></return>
    }<pos:position pos:line="177" pos:column="6"/></block></then></if>

    <comment type="block" pos:line="179" pos:column="5">/*
     * Check If-Headers and existing locks for destination. Note that we
     * use depth==infinity since the target (hierarchy) will be deleted
     * before the move/copy is completed.
     *
     * Note that we are overwriting the target, which implies a DELETE, so
     * we are subject to the error/response rules as a DELETE. Namely, we
     * will return a 424 error if any of the validations fail.
     * (see dav_method_delete() for more information)
     */</comment>
    <if pos:line="189" pos:column="5">if <condition pos:line="189" pos:column="8">(<expr><operator pos:line="189" pos:column="9">(<pos:position pos:line="189" pos:column="10"/></operator><name pos:line="189" pos:column="10">err<pos:position pos:line="189" pos:column="13"/></name> <operator pos:line="189" pos:column="14">=<pos:position pos:line="189" pos:column="15"/></operator> <call><name pos:line="189" pos:column="16">dav_validate_request<pos:position pos:line="189" pos:column="36"/></name><argument_list pos:line="189" pos:column="36">(<argument><expr><name><name pos:line="189" pos:column="37">lookup<pos:position pos:line="189" pos:column="43"/></name><operator pos:line="189" pos:column="43">.<pos:position pos:line="189" pos:column="44"/></operator><name pos:line="189" pos:column="44">rnew<pos:position pos:line="189" pos:column="48"/></name></name></expr></argument>, <argument><expr><name pos:line="189" pos:column="50">resnew<pos:position pos:line="189" pos:column="56"/></name></expr></argument>, <argument><expr><name pos:line="189" pos:column="58">DAV_INFINITY<pos:position pos:line="189" pos:column="70"/></name></expr></argument>, <argument><expr><name pos:line="189" pos:column="72">NULL<pos:position pos:line="189" pos:column="76"/></name></expr></argument>,
                                    <argument><expr><operator pos:line="190" pos:column="37">&amp;<pos:position pos:line="190" pos:column="42"/></operator><name pos:line="190" pos:column="38">multi_response<pos:position pos:line="190" pos:column="52"/></name></expr></argument>,
                                    <argument><expr><name pos:line="191" pos:column="37">DAV_VALIDATE_PARENT<pos:position pos:line="191" pos:column="56"/></name>
                                    <operator pos:line="192" pos:column="37">|<pos:position pos:line="192" pos:column="38"/></operator> <name pos:line="192" pos:column="39">DAV_VALIDATE_USE_424<pos:position pos:line="192" pos:column="59"/></name></expr></argument>, <argument><expr><name pos:line="192" pos:column="61">NULL<pos:position pos:line="192" pos:column="65"/></name></expr></argument>)<pos:position pos:line="192" pos:column="66"/></argument_list></call><operator pos:line="192" pos:column="66">)<pos:position pos:line="192" pos:column="67"/></operator> <operator pos:line="192" pos:column="68">!=<pos:position pos:line="192" pos:column="70"/></operator> <name pos:line="192" pos:column="71">NULL<pos:position pos:line="192" pos:column="75"/></name></expr>)<pos:position pos:line="192" pos:column="76"/></condition><then pos:line="192" pos:column="76"> <block pos:line="192" pos:column="77">{
        <expr_stmt><expr><name pos:line="193" pos:column="9">err<pos:position pos:line="193" pos:column="12"/></name> <operator pos:line="193" pos:column="13">=<pos:position pos:line="193" pos:column="14"/></operator> <call><name pos:line="193" pos:column="15">dav_push_error<pos:position pos:line="193" pos:column="29"/></name><argument_list pos:line="193" pos:column="29">(<argument><expr><name><name pos:line="193" pos:column="30">r<pos:position pos:line="193" pos:column="31"/></name><operator pos:line="193" pos:column="31">-&gt;<pos:position pos:line="193" pos:column="36"/></operator><name pos:line="193" pos:column="33">pool<pos:position pos:line="193" pos:column="37"/></name></name></expr></argument>, <argument><expr><name><name pos:line="193" pos:column="39">err<pos:position pos:line="193" pos:column="42"/></name><operator pos:line="193" pos:column="42">-&gt;<pos:position pos:line="193" pos:column="47"/></operator><name pos:line="193" pos:column="44">status<pos:position pos:line="193" pos:column="50"/></name></name></expr></argument>, <argument><expr><literal type="number" pos:line="193" pos:column="52">0<pos:position pos:line="193" pos:column="53"/></literal></expr></argument>,
                             <argument><expr><call><name pos:line="194" pos:column="30">apr_psprintf<pos:position pos:line="194" pos:column="42"/></name><argument_list pos:line="194" pos:column="42">(<argument><expr><name><name pos:line="194" pos:column="43">r<pos:position pos:line="194" pos:column="44"/></name><operator pos:line="194" pos:column="44">-&gt;<pos:position pos:line="194" pos:column="49"/></operator><name pos:line="194" pos:column="46">pool<pos:position pos:line="194" pos:column="50"/></name></name></expr></argument>,
                                          <argument><expr><literal type="string" pos:line="195" pos:column="43">"Could not MOVE/COPY %s due to a "<pos:position pos:line="195" pos:column="77"/></literal>
                                          <literal type="string" pos:line="196" pos:column="43">"failed precondition on the "<pos:position pos:line="196" pos:column="72"/></literal>
                                          <literal type="string" pos:line="197" pos:column="43">"destination (e.g. locks)."<pos:position pos:line="197" pos:column="70"/></literal></expr></argument>,
                                          <argument><expr><call><name pos:line="198" pos:column="43">ap_escape_html<pos:position pos:line="198" pos:column="57"/></name><argument_list pos:line="198" pos:column="57">(<argument><expr><name><name pos:line="198" pos:column="58">r<pos:position pos:line="198" pos:column="59"/></name><operator pos:line="198" pos:column="59">-&gt;<pos:position pos:line="198" pos:column="64"/></operator><name pos:line="198" pos:column="61">pool<pos:position pos:line="198" pos:column="65"/></name></name></expr></argument>, <argument><expr><name><name pos:line="198" pos:column="67">r<pos:position pos:line="198" pos:column="68"/></name><operator pos:line="198" pos:column="68">-&gt;<pos:position pos:line="198" pos:column="73"/></operator><name pos:line="198" pos:column="70">uri<pos:position pos:line="198" pos:column="73"/></name></name></expr></argument>)<pos:position pos:line="198" pos:column="74"/></argument_list></call></expr></argument>)<pos:position pos:line="198" pos:column="75"/></argument_list></call></expr></argument>,
                             <argument><expr><name pos:line="199" pos:column="30">err<pos:position pos:line="199" pos:column="33"/></name></expr></argument>)<pos:position pos:line="199" pos:column="34"/></argument_list></call></expr>;<pos:position pos:line="199" pos:column="35"/></expr_stmt>
        <return pos:line="200" pos:column="9">return <expr><call><name pos:line="200" pos:column="16">dav_handle_err<pos:position pos:line="200" pos:column="30"/></name><argument_list pos:line="200" pos:column="30">(<argument><expr><name pos:line="200" pos:column="31">r<pos:position pos:line="200" pos:column="32"/></name></expr></argument>, <argument><expr><name pos:line="200" pos:column="34">err<pos:position pos:line="200" pos:column="37"/></name></expr></argument>, <argument><expr><name pos:line="200" pos:column="39">multi_response<pos:position pos:line="200" pos:column="53"/></name></expr></argument>)<pos:position pos:line="200" pos:column="54"/></argument_list></call></expr>;<pos:position pos:line="200" pos:column="55"/></return>
    }<pos:position pos:line="201" pos:column="6"/></block></then></if>

    <if pos:line="203" pos:column="5">if <condition pos:line="203" pos:column="8">(<expr><name pos:line="203" pos:column="9">is_dir<pos:position pos:line="203" pos:column="15"/></name>
        <operator pos:line="204" pos:column="9">&amp;&amp;<pos:position pos:line="204" pos:column="19"/></operator> <name pos:line="204" pos:column="12">depth<pos:position pos:line="204" pos:column="17"/></name> <operator pos:line="204" pos:column="18">==<pos:position pos:line="204" pos:column="20"/></operator> <name pos:line="204" pos:column="21">DAV_INFINITY<pos:position pos:line="204" pos:column="33"/></name>
        <operator pos:line="205" pos:column="9">&amp;&amp;<pos:position pos:line="205" pos:column="19"/></operator> <call pos:line="205" pos:column="12">(<modifier pos:line="205" pos:column="13">*<pos:position pos:line="205" pos:column="14"/></modifier><name><name pos:line="205" pos:column="14">resource<pos:position pos:line="205" pos:column="22"/></name><operator pos:line="205" pos:column="22">-&gt;<pos:position pos:line="205" pos:column="27"/></operator><name pos:line="205" pos:column="24">hooks<pos:position pos:line="205" pos:column="29"/></name><operator pos:line="205" pos:column="29">-&gt;<pos:position pos:line="205" pos:column="34"/></operator><name pos:line="205" pos:column="31">is_parent_resource<pos:position pos:line="205" pos:column="49"/></name></name>)<argument_list pos:line="205" pos:column="50">(<argument><expr><name pos:line="205" pos:column="51">resource<pos:position pos:line="205" pos:column="59"/></name></expr></argument>, <argument><expr><name pos:line="205" pos:column="61">resnew<pos:position pos:line="205" pos:column="67"/></name></expr></argument>)<pos:position pos:line="205" pos:column="68"/></argument_list></call></expr>)<pos:position pos:line="205" pos:column="69"/></condition><then pos:line="205" pos:column="69"> <block pos:line="205" pos:column="70">{
        <comment type="block" pos:line="206" pos:column="9">/* Supply some text for the error response body. */</comment>
        <return pos:line="207" pos:column="9">return <expr><call><name pos:line="207" pos:column="16">dav_error_response<pos:position pos:line="207" pos:column="34"/></name><argument_list pos:line="207" pos:column="34">(<argument><expr><name pos:line="207" pos:column="35">r<pos:position pos:line="207" pos:column="36"/></name></expr></argument>, <argument><expr><name pos:line="207" pos:column="38">HTTP_FORBIDDEN<pos:position pos:line="207" pos:column="52"/></name></expr></argument>,
                                  <argument><expr><literal type="string" pos:line="208" pos:column="35">"Source collection contains the "<pos:position pos:line="208" pos:column="68"/></literal>
                                  <literal type="string" pos:line="209" pos:column="35">"Destination."<pos:position pos:line="209" pos:column="49"/></literal></expr></argument>)<pos:position pos:line="209" pos:column="50"/></argument_list></call></expr>;<pos:position pos:line="209" pos:column="51"/></return>

    }<pos:position pos:line="211" pos:column="6"/></block></then></if>
    <if pos:line="212" pos:column="5">if <condition pos:line="212" pos:column="8">(<expr><name pos:line="212" pos:column="9">is_dir<pos:position pos:line="212" pos:column="15"/></name>
        <operator pos:line="213" pos:column="9">&amp;&amp;<pos:position pos:line="213" pos:column="19"/></operator> <call pos:line="213" pos:column="12">(<modifier pos:line="213" pos:column="13">*<pos:position pos:line="213" pos:column="14"/></modifier><name><name pos:line="213" pos:column="14">resnew<pos:position pos:line="213" pos:column="20"/></name><operator pos:line="213" pos:column="20">-&gt;<pos:position pos:line="213" pos:column="25"/></operator><name pos:line="213" pos:column="22">hooks<pos:position pos:line="213" pos:column="27"/></name><operator pos:line="213" pos:column="27">-&gt;<pos:position pos:line="213" pos:column="32"/></operator><name pos:line="213" pos:column="29">is_parent_resource<pos:position pos:line="213" pos:column="47"/></name></name>)<argument_list pos:line="213" pos:column="48">(<argument><expr><name pos:line="213" pos:column="49">resnew<pos:position pos:line="213" pos:column="55"/></name></expr></argument>, <argument><expr><name pos:line="213" pos:column="57">resource<pos:position pos:line="213" pos:column="65"/></name></expr></argument>)<pos:position pos:line="213" pos:column="66"/></argument_list></call></expr>)<pos:position pos:line="213" pos:column="67"/></condition><then pos:line="213" pos:column="67"> <block pos:line="213" pos:column="68">{
        <comment type="block" pos:line="214" pos:column="9">/* The destination must exist (since it contains the source), and
         * a condition above implies Overwrite==T. Obviously, we cannot
         * delete the Destination before the MOVE/COPY, as that would
         * delete the Source.
         */</comment>

        <comment type="block" pos:line="220" pos:column="9">/* Supply some text for the error response body. */</comment>
        <return pos:line="221" pos:column="9">return <expr><call><name pos:line="221" pos:column="16">dav_error_response<pos:position pos:line="221" pos:column="34"/></name><argument_list pos:line="221" pos:column="34">(<argument><expr><name pos:line="221" pos:column="35">r<pos:position pos:line="221" pos:column="36"/></name></expr></argument>, <argument><expr><name pos:line="221" pos:column="38">HTTP_FORBIDDEN<pos:position pos:line="221" pos:column="52"/></name></expr></argument>,
                                  <argument><expr><literal type="string" pos:line="222" pos:column="35">"Destination collection contains the Source "<pos:position pos:line="222" pos:column="80"/></literal>
                                  <literal type="string" pos:line="223" pos:column="35">"and Overwrite has been specified."<pos:position pos:line="223" pos:column="70"/></literal></expr></argument>)<pos:position pos:line="223" pos:column="71"/></argument_list></call></expr>;<pos:position pos:line="223" pos:column="72"/></return>
    }<pos:position pos:line="224" pos:column="6"/></block></then></if>

    <comment type="block" pos:line="226" pos:column="5">/* ### for now, we don't need anything in the body */</comment>
    <if pos:line="227" pos:column="5">if <condition pos:line="227" pos:column="8">(<expr><operator pos:line="227" pos:column="9">(<pos:position pos:line="227" pos:column="10"/></operator><name pos:line="227" pos:column="10">result<pos:position pos:line="227" pos:column="16"/></name> <operator pos:line="227" pos:column="17">=<pos:position pos:line="227" pos:column="18"/></operator> <call><name pos:line="227" pos:column="19">ap_discard_request_body<pos:position pos:line="227" pos:column="42"/></name><argument_list pos:line="227" pos:column="42">(<argument><expr><name pos:line="227" pos:column="43">r<pos:position pos:line="227" pos:column="44"/></name></expr></argument>)<pos:position pos:line="227" pos:column="45"/></argument_list></call><operator pos:line="227" pos:column="45">)<pos:position pos:line="227" pos:column="46"/></operator> <operator pos:line="227" pos:column="47">!=<pos:position pos:line="227" pos:column="49"/></operator> <name pos:line="227" pos:column="50">OK<pos:position pos:line="227" pos:column="52"/></name></expr>)<pos:position pos:line="227" pos:column="53"/></condition><then pos:line="227" pos:column="53"> <block pos:line="227" pos:column="54">{
        <return pos:line="228" pos:column="9">return <expr><name pos:line="228" pos:column="16">result<pos:position pos:line="228" pos:column="22"/></name></expr>;<pos:position pos:line="228" pos:column="23"/></return>
    }<pos:position pos:line="229" pos:column="6"/></block></then></if>

    <if pos:line="231" pos:column="5">if <condition pos:line="231" pos:column="8">(<expr><operator pos:line="231" pos:column="9">(<pos:position pos:line="231" pos:column="10"/></operator><name pos:line="231" pos:column="10">err<pos:position pos:line="231" pos:column="13"/></name> <operator pos:line="231" pos:column="14">=<pos:position pos:line="231" pos:column="15"/></operator> <call><name pos:line="231" pos:column="16">dav_open_lockdb<pos:position pos:line="231" pos:column="31"/></name><argument_list pos:line="231" pos:column="31">(<argument><expr><name pos:line="231" pos:column="32">r<pos:position pos:line="231" pos:column="33"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="231" pos:column="35">0<pos:position pos:line="231" pos:column="36"/></literal></expr></argument>, <argument><expr><operator pos:line="231" pos:column="38">&amp;<pos:position pos:line="231" pos:column="43"/></operator><name pos:line="231" pos:column="39">lockdb<pos:position pos:line="231" pos:column="45"/></name></expr></argument>)<pos:position pos:line="231" pos:column="46"/></argument_list></call><operator pos:line="231" pos:column="46">)<pos:position pos:line="231" pos:column="47"/></operator> <operator pos:line="231" pos:column="48">!=<pos:position pos:line="231" pos:column="50"/></operator> <name pos:line="231" pos:column="51">NULL<pos:position pos:line="231" pos:column="55"/></name></expr>)<pos:position pos:line="231" pos:column="56"/></condition><then pos:line="231" pos:column="56"> <block pos:line="231" pos:column="57">{
        <comment type="block" pos:line="232" pos:column="9">/* ### add a higher-level description? */</comment>
        <return pos:line="233" pos:column="9">return <expr><call><name pos:line="233" pos:column="16">dav_handle_err<pos:position pos:line="233" pos:column="30"/></name><argument_list pos:line="233" pos:column="30">(<argument><expr><name pos:line="233" pos:column="31">r<pos:position pos:line="233" pos:column="32"/></name></expr></argument>, <argument><expr><name pos:line="233" pos:column="34">err<pos:position pos:line="233" pos:column="37"/></name></expr></argument>, <argument><expr><name pos:line="233" pos:column="39">NULL<pos:position pos:line="233" pos:column="43"/></name></expr></argument>)<pos:position pos:line="233" pos:column="44"/></argument_list></call></expr>;<pos:position pos:line="233" pos:column="45"/></return>
    }<pos:position pos:line="234" pos:column="6"/></block></then></if>

    <comment type="block" pos:line="236" pos:column="5">/* remove any locks from the old resources */</comment>
    <comment type="block" pos:line="237" pos:column="5">/*
     * ### this is Yet Another Traversal. if we do a rename(), then we
     * ### really don't have to do this in some cases since the inode
     * ### values will remain constant across the move. but we can't
     * ### know that fact from outside the provider :-(
     *
     * ### note that we now have a problem atomicity in the move/copy
     * ### since a failure after this would have removed locks (technically,
     * ### this is okay to do, but really...)
     */</comment>
    <if pos:line="247" pos:column="5">if <condition pos:line="247" pos:column="8">(<expr><name pos:line="247" pos:column="9">is_move<pos:position pos:line="247" pos:column="16"/></name> <operator pos:line="247" pos:column="17">&amp;&amp;<pos:position pos:line="247" pos:column="27"/></operator> <name pos:line="247" pos:column="20">lockdb<pos:position pos:line="247" pos:column="26"/></name> <operator pos:line="247" pos:column="27">!=<pos:position pos:line="247" pos:column="29"/></operator> <name pos:line="247" pos:column="30">NULL<pos:position pos:line="247" pos:column="34"/></name></expr>)<pos:position pos:line="247" pos:column="35"/></condition><then pos:line="247" pos:column="35"> <block pos:line="247" pos:column="36">{
        <comment type="block" pos:line="248" pos:column="9">/* ### this is wrong! it blasts direct locks on parent resources */</comment>
        <comment type="block" pos:line="249" pos:column="9">/* ### pass lockdb! */</comment>
        <expr_stmt><expr><operator pos:line="250" pos:column="9">(<pos:position pos:line="250" pos:column="10"/></operator><name pos:line="250" pos:column="10">void<pos:position pos:line="250" pos:column="14"/></name><operator pos:line="250" pos:column="14">)<pos:position pos:line="250" pos:column="15"/></operator><call><name pos:line="250" pos:column="15">dav_unlock<pos:position pos:line="250" pos:column="25"/></name><argument_list pos:line="250" pos:column="25">(<argument><expr><name pos:line="250" pos:column="26">r<pos:position pos:line="250" pos:column="27"/></name></expr></argument>, <argument><expr><name pos:line="250" pos:column="29">resource<pos:position pos:line="250" pos:column="37"/></name></expr></argument>, <argument><expr><name pos:line="250" pos:column="39">NULL<pos:position pos:line="250" pos:column="43"/></name></expr></argument>)<pos:position pos:line="250" pos:column="44"/></argument_list></call></expr>;<pos:position pos:line="250" pos:column="45"/></expr_stmt>
    }<pos:position pos:line="251" pos:column="6"/></block></then></if>

    <comment type="block" pos:line="253" pos:column="5">/* if this is a move, then the source parent collection will be modified */</comment>
    <if pos:line="254" pos:column="5">if <condition pos:line="254" pos:column="8">(<expr><name pos:line="254" pos:column="9">is_move<pos:position pos:line="254" pos:column="16"/></name></expr>)<pos:position pos:line="254" pos:column="17"/></condition><then pos:line="254" pos:column="17"> <block pos:line="254" pos:column="18">{
        <if pos:line="255" pos:column="9">if <condition pos:line="255" pos:column="12">(<expr><operator pos:line="255" pos:column="13">(<pos:position pos:line="255" pos:column="14"/></operator><name pos:line="255" pos:column="14">err<pos:position pos:line="255" pos:column="17"/></name> <operator pos:line="255" pos:column="18">=<pos:position pos:line="255" pos:column="19"/></operator> <call><name pos:line="255" pos:column="20">dav_auto_checkout<pos:position pos:line="255" pos:column="37"/></name><argument_list pos:line="255" pos:column="37">(<argument><expr><name pos:line="255" pos:column="38">r<pos:position pos:line="255" pos:column="39"/></name></expr></argument>, <argument><expr><name pos:line="255" pos:column="41">resource<pos:position pos:line="255" pos:column="49"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="255" pos:column="51">1<pos:position pos:line="255" pos:column="52"/></literal></expr></argument> <comment type="block" pos:line="255" pos:column="53">/* parent_only */</comment>,
                                     <argument><expr><operator pos:line="256" pos:column="38">&amp;<pos:position pos:line="256" pos:column="43"/></operator><name pos:line="256" pos:column="39">src_av_info<pos:position pos:line="256" pos:column="50"/></name></expr></argument>)<pos:position pos:line="256" pos:column="51"/></argument_list></call><operator pos:line="256" pos:column="51">)<pos:position pos:line="256" pos:column="52"/></operator> <operator pos:line="256" pos:column="53">!=<pos:position pos:line="256" pos:column="55"/></operator> <name pos:line="256" pos:column="56">NULL<pos:position pos:line="256" pos:column="60"/></name></expr>)<pos:position pos:line="256" pos:column="61"/></condition><then pos:line="256" pos:column="61"> <block pos:line="256" pos:column="62">{
            <if pos:line="257" pos:column="13">if <condition pos:line="257" pos:column="16">(<expr><name pos:line="257" pos:column="17">lockdb<pos:position pos:line="257" pos:column="23"/></name> <operator pos:line="257" pos:column="24">!=<pos:position pos:line="257" pos:column="26"/></operator> <name pos:line="257" pos:column="27">NULL<pos:position pos:line="257" pos:column="31"/></name></expr>)<pos:position pos:line="257" pos:column="32"/></condition><then pos:line="257" pos:column="32">
                <block type="pseudo"><expr_stmt><expr><call pos:line="258" pos:column="17">(<modifier pos:line="258" pos:column="18">*<pos:position pos:line="258" pos:column="19"/></modifier><name><name pos:line="258" pos:column="19">lockdb<pos:position pos:line="258" pos:column="25"/></name><operator pos:line="258" pos:column="25">-&gt;<pos:position pos:line="258" pos:column="30"/></operator><name pos:line="258" pos:column="27">hooks<pos:position pos:line="258" pos:column="32"/></name><operator pos:line="258" pos:column="32">-&gt;<pos:position pos:line="258" pos:column="37"/></operator><name pos:line="258" pos:column="34">close_lockdb<pos:position pos:line="258" pos:column="46"/></name></name>)<argument_list pos:line="258" pos:column="47">(<argument><expr><name pos:line="258" pos:column="48">lockdb<pos:position pos:line="258" pos:column="54"/></name></expr></argument>)<pos:position pos:line="258" pos:column="55"/></argument_list></call></expr>;<pos:position pos:line="258" pos:column="56"/></expr_stmt></block></then></if>

            <comment type="block" pos:line="260" pos:column="13">/* ### add a higher-level description? */</comment>
            <return pos:line="261" pos:column="13">return <expr><call><name pos:line="261" pos:column="20">dav_handle_err<pos:position pos:line="261" pos:column="34"/></name><argument_list pos:line="261" pos:column="34">(<argument><expr><name pos:line="261" pos:column="35">r<pos:position pos:line="261" pos:column="36"/></name></expr></argument>, <argument><expr><name pos:line="261" pos:column="38">err<pos:position pos:line="261" pos:column="41"/></name></expr></argument>, <argument><expr><name pos:line="261" pos:column="43">NULL<pos:position pos:line="261" pos:column="47"/></name></expr></argument>)<pos:position pos:line="261" pos:column="48"/></argument_list></call></expr>;<pos:position pos:line="261" pos:column="49"/></return>
        }<pos:position pos:line="262" pos:column="10"/></block></then></if>
    }<pos:position pos:line="263" pos:column="6"/></block></then></if>

    <comment type="block" pos:line="265" pos:column="5">/*
     * Remember the initial state of the destination, so the lock system
     * can be notified as to how it changed.
     */</comment>
    <expr_stmt><expr><name pos:line="269" pos:column="5">resnew_state<pos:position pos:line="269" pos:column="17"/></name> <operator pos:line="269" pos:column="18">=<pos:position pos:line="269" pos:column="19"/></operator> <call><name pos:line="269" pos:column="20">dav_get_resource_state<pos:position pos:line="269" pos:column="42"/></name><argument_list pos:line="269" pos:column="42">(<argument><expr><name><name pos:line="269" pos:column="43">lookup<pos:position pos:line="269" pos:column="49"/></name><operator pos:line="269" pos:column="49">.<pos:position pos:line="269" pos:column="50"/></operator><name pos:line="269" pos:column="50">rnew<pos:position pos:line="269" pos:column="54"/></name></name></expr></argument>, <argument><expr><name pos:line="269" pos:column="56">resnew<pos:position pos:line="269" pos:column="62"/></name></expr></argument>)<pos:position pos:line="269" pos:column="63"/></argument_list></call></expr>;<pos:position pos:line="269" pos:column="64"/></expr_stmt>

    <comment type="block" pos:line="271" pos:column="5">/* In a MOVE operation, the destination is replaced by the source.
     * In a COPY operation, if the destination exists, is under version
     * control, and is the same resource type as the source,
     * then it should not be replaced, but modified to be a copy of
     * the source.
     */</comment>
    <if pos:line="277" pos:column="5">if <condition pos:line="277" pos:column="8">(<expr><operator pos:line="277" pos:column="9">!<pos:position pos:line="277" pos:column="10"/></operator><name><name pos:line="277" pos:column="10">resnew<pos:position pos:line="277" pos:column="16"/></name><operator pos:line="277" pos:column="16">-&gt;<pos:position pos:line="277" pos:column="21"/></operator><name pos:line="277" pos:column="18">exists<pos:position pos:line="277" pos:column="24"/></name></name></expr>)<pos:position pos:line="277" pos:column="25"/></condition><then pos:line="277" pos:column="25">
        <block type="pseudo"><expr_stmt><expr><name pos:line="278" pos:column="9">replace_dest<pos:position pos:line="278" pos:column="21"/></name> <operator pos:line="278" pos:column="22">=<pos:position pos:line="278" pos:column="23"/></operator> <literal type="number" pos:line="278" pos:column="24">0<pos:position pos:line="278" pos:column="25"/></literal></expr>;<pos:position pos:line="278" pos:column="26"/></expr_stmt></block></then>
    <elseif pos:line="279" pos:column="5">else <if pos:line="279" pos:column="10">if <condition pos:line="279" pos:column="13">(<expr><name pos:line="279" pos:column="14">is_move<pos:position pos:line="279" pos:column="21"/></name> <operator pos:line="279" pos:column="22">||<pos:position pos:line="279" pos:column="24"/></operator> <operator pos:line="279" pos:column="25">!<pos:position pos:line="279" pos:column="26"/></operator><name><name pos:line="279" pos:column="26">resource<pos:position pos:line="279" pos:column="34"/></name><operator pos:line="279" pos:column="34">-&gt;<pos:position pos:line="279" pos:column="39"/></operator><name pos:line="279" pos:column="36">versioned<pos:position pos:line="279" pos:column="45"/></name></name></expr>)<pos:position pos:line="279" pos:column="46"/></condition><then pos:line="279" pos:column="46">
        <block type="pseudo"><expr_stmt><expr><name pos:line="280" pos:column="9">replace_dest<pos:position pos:line="280" pos:column="21"/></name> <operator pos:line="280" pos:column="22">=<pos:position pos:line="280" pos:column="23"/></operator> <literal type="number" pos:line="280" pos:column="24">1<pos:position pos:line="280" pos:column="25"/></literal></expr>;<pos:position pos:line="280" pos:column="26"/></expr_stmt></block></then></if></elseif>
    <elseif pos:line="281" pos:column="5">else <if pos:line="281" pos:column="10">if <condition pos:line="281" pos:column="13">(<expr><name><name pos:line="281" pos:column="14">resource<pos:position pos:line="281" pos:column="22"/></name><operator pos:line="281" pos:column="22">-&gt;<pos:position pos:line="281" pos:column="27"/></operator><name pos:line="281" pos:column="24">type<pos:position pos:line="281" pos:column="28"/></name></name> <operator pos:line="281" pos:column="29">!=<pos:position pos:line="281" pos:column="31"/></operator> <name><name pos:line="281" pos:column="32">resnew<pos:position pos:line="281" pos:column="38"/></name><operator pos:line="281" pos:column="38">-&gt;<pos:position pos:line="281" pos:column="43"/></operator><name pos:line="281" pos:column="40">type<pos:position pos:line="281" pos:column="44"/></name></name></expr>)<pos:position pos:line="281" pos:column="45"/></condition><then pos:line="281" pos:column="45">
        <block type="pseudo"><expr_stmt><expr><name pos:line="282" pos:column="9">replace_dest<pos:position pos:line="282" pos:column="21"/></name> <operator pos:line="282" pos:column="22">=<pos:position pos:line="282" pos:column="23"/></operator> <literal type="number" pos:line="282" pos:column="24">1<pos:position pos:line="282" pos:column="25"/></literal></expr>;<pos:position pos:line="282" pos:column="26"/></expr_stmt></block></then></if></elseif>
    <elseif pos:line="283" pos:column="5">else <if pos:line="283" pos:column="10">if <condition pos:line="283" pos:column="13">(<expr><operator pos:line="283" pos:column="14">(<pos:position pos:line="283" pos:column="15"/></operator><name><name pos:line="283" pos:column="15">resource<pos:position pos:line="283" pos:column="23"/></name><operator pos:line="283" pos:column="23">-&gt;<pos:position pos:line="283" pos:column="28"/></operator><name pos:line="283" pos:column="25">collection<pos:position pos:line="283" pos:column="35"/></name></name> <operator pos:line="283" pos:column="36">==<pos:position pos:line="283" pos:column="38"/></operator> <literal type="number" pos:line="283" pos:column="39">0<pos:position pos:line="283" pos:column="40"/></literal><operator pos:line="283" pos:column="40">)<pos:position pos:line="283" pos:column="41"/></operator> <operator pos:line="283" pos:column="42">!=<pos:position pos:line="283" pos:column="44"/></operator> <operator pos:line="283" pos:column="45">(<pos:position pos:line="283" pos:column="46"/></operator><name><name pos:line="283" pos:column="46">resnew<pos:position pos:line="283" pos:column="52"/></name><operator pos:line="283" pos:column="52">-&gt;<pos:position pos:line="283" pos:column="57"/></operator><name pos:line="283" pos:column="54">collection<pos:position pos:line="283" pos:column="64"/></name></name> <operator pos:line="283" pos:column="65">==<pos:position pos:line="283" pos:column="67"/></operator> <literal type="number" pos:line="283" pos:column="68">0<pos:position pos:line="283" pos:column="69"/></literal><operator pos:line="283" pos:column="69">)<pos:position pos:line="283" pos:column="70"/></operator></expr>)<pos:position pos:line="283" pos:column="71"/></condition><then pos:line="283" pos:column="71">
        <block type="pseudo"><expr_stmt><expr><name pos:line="284" pos:column="9">replace_dest<pos:position pos:line="284" pos:column="21"/></name> <operator pos:line="284" pos:column="22">=<pos:position pos:line="284" pos:column="23"/></operator> <literal type="number" pos:line="284" pos:column="24">1<pos:position pos:line="284" pos:column="25"/></literal></expr>;<pos:position pos:line="284" pos:column="26"/></expr_stmt></block></then></if></elseif>
    <else pos:line="285" pos:column="5">else
        <block type="pseudo"><expr_stmt><expr><name pos:line="286" pos:column="9">replace_dest<pos:position pos:line="286" pos:column="21"/></name> <operator pos:line="286" pos:column="22">=<pos:position pos:line="286" pos:column="23"/></operator> <literal type="number" pos:line="286" pos:column="24">0<pos:position pos:line="286" pos:column="25"/></literal></expr>;<pos:position pos:line="286" pos:column="26"/></expr_stmt></block></else></if>

    <comment type="block" pos:line="288" pos:column="5">/* If the destination must be created or replaced,
     * make sure the parent collection is writable
     */</comment>
    <if pos:line="291" pos:column="5">if <condition pos:line="291" pos:column="8">(<expr><operator pos:line="291" pos:column="9">!<pos:position pos:line="291" pos:column="10"/></operator><name><name pos:line="291" pos:column="10">resnew<pos:position pos:line="291" pos:column="16"/></name><operator pos:line="291" pos:column="16">-&gt;<pos:position pos:line="291" pos:column="21"/></operator><name pos:line="291" pos:column="18">exists<pos:position pos:line="291" pos:column="24"/></name></name> <operator pos:line="291" pos:column="25">||<pos:position pos:line="291" pos:column="27"/></operator> <name pos:line="291" pos:column="28">replace_dest<pos:position pos:line="291" pos:column="40"/></name></expr>)<pos:position pos:line="291" pos:column="41"/></condition><then pos:line="291" pos:column="41"> <block pos:line="291" pos:column="42">{
        <if pos:line="292" pos:column="9">if <condition pos:line="292" pos:column="12">(<expr><operator pos:line="292" pos:column="13">(<pos:position pos:line="292" pos:column="14"/></operator><name pos:line="292" pos:column="14">err<pos:position pos:line="292" pos:column="17"/></name> <operator pos:line="292" pos:column="18">=<pos:position pos:line="292" pos:column="19"/></operator> <call><name pos:line="292" pos:column="20">dav_auto_checkout<pos:position pos:line="292" pos:column="37"/></name><argument_list pos:line="292" pos:column="37">(<argument><expr><name pos:line="292" pos:column="38">r<pos:position pos:line="292" pos:column="39"/></name></expr></argument>, <argument><expr><name pos:line="292" pos:column="41">resnew<pos:position pos:line="292" pos:column="47"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="292" pos:column="49">1<pos:position pos:line="292" pos:column="50"/></literal></expr></argument> <comment type="block" pos:line="292" pos:column="51">/*parent_only*/</comment>,
                                     <argument><expr><operator pos:line="293" pos:column="38">&amp;<pos:position pos:line="293" pos:column="43"/></operator><name pos:line="293" pos:column="39">dst_av_info<pos:position pos:line="293" pos:column="50"/></name></expr></argument>)<pos:position pos:line="293" pos:column="51"/></argument_list></call><operator pos:line="293" pos:column="51">)<pos:position pos:line="293" pos:column="52"/></operator> <operator pos:line="293" pos:column="53">!=<pos:position pos:line="293" pos:column="55"/></operator> <name pos:line="293" pos:column="56">NULL<pos:position pos:line="293" pos:column="60"/></name></expr>)<pos:position pos:line="293" pos:column="61"/></condition><then pos:line="293" pos:column="61"> <block pos:line="293" pos:column="62">{
            <comment type="block" pos:line="294" pos:column="13">/* could not make destination writable:
             * if move, restore state of source parent
             */</comment>
            <if pos:line="297" pos:column="13">if <condition pos:line="297" pos:column="16">(<expr><name pos:line="297" pos:column="17">is_move<pos:position pos:line="297" pos:column="24"/></name></expr>)<pos:position pos:line="297" pos:column="25"/></condition><then pos:line="297" pos:column="25"> <block pos:line="297" pos:column="26">{
                <expr_stmt><expr><operator pos:line="298" pos:column="17">(<pos:position pos:line="298" pos:column="18"/></operator><name pos:line="298" pos:column="18">void<pos:position pos:line="298" pos:column="22"/></name><operator pos:line="298" pos:column="22">)<pos:position pos:line="298" pos:column="23"/></operator><call><name pos:line="298" pos:column="23">dav_auto_checkin<pos:position pos:line="298" pos:column="39"/></name><argument_list pos:line="298" pos:column="39">(<argument><expr><name pos:line="298" pos:column="40">r<pos:position pos:line="298" pos:column="41"/></name></expr></argument>, <argument><expr><name pos:line="298" pos:column="43">NULL<pos:position pos:line="298" pos:column="47"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="298" pos:column="49">1<pos:position pos:line="298" pos:column="50"/></literal></expr></argument> <comment type="block" pos:line="298" pos:column="51">/* undo */</comment>,
                                       <argument><expr><literal type="number" pos:line="299" pos:column="40">0<pos:position pos:line="299" pos:column="41"/></literal></expr></argument> <comment type="block" pos:line="299" pos:column="42">/*unlock*/</comment>, <argument><expr><operator pos:line="299" pos:column="54">&amp;<pos:position pos:line="299" pos:column="59"/></operator><name pos:line="299" pos:column="55">src_av_info<pos:position pos:line="299" pos:column="66"/></name></expr></argument>)<pos:position pos:line="299" pos:column="67"/></argument_list></call></expr>;<pos:position pos:line="299" pos:column="68"/></expr_stmt>
            }<pos:position pos:line="300" pos:column="14"/></block></then></if>

            <if pos:line="302" pos:column="13">if <condition pos:line="302" pos:column="16">(<expr><name pos:line="302" pos:column="17">lockdb<pos:position pos:line="302" pos:column="23"/></name> <operator pos:line="302" pos:column="24">!=<pos:position pos:line="302" pos:column="26"/></operator> <name pos:line="302" pos:column="27">NULL<pos:position pos:line="302" pos:column="31"/></name></expr>)<pos:position pos:line="302" pos:column="32"/></condition><then pos:line="302" pos:column="32">
                <block type="pseudo"><expr_stmt><expr><call pos:line="303" pos:column="17">(<modifier pos:line="303" pos:column="18">*<pos:position pos:line="303" pos:column="19"/></modifier><name><name pos:line="303" pos:column="19">lockdb<pos:position pos:line="303" pos:column="25"/></name><operator pos:line="303" pos:column="25">-&gt;<pos:position pos:line="303" pos:column="30"/></operator><name pos:line="303" pos:column="27">hooks<pos:position pos:line="303" pos:column="32"/></name><operator pos:line="303" pos:column="32">-&gt;<pos:position pos:line="303" pos:column="37"/></operator><name pos:line="303" pos:column="34">close_lockdb<pos:position pos:line="303" pos:column="46"/></name></name>)<argument_list pos:line="303" pos:column="47">(<argument><expr><name pos:line="303" pos:column="48">lockdb<pos:position pos:line="303" pos:column="54"/></name></expr></argument>)<pos:position pos:line="303" pos:column="55"/></argument_list></call></expr>;<pos:position pos:line="303" pos:column="56"/></expr_stmt></block></then></if>

            <comment type="block" pos:line="305" pos:column="13">/* ### add a higher-level description? */</comment>
            <return pos:line="306" pos:column="13">return <expr><call><name pos:line="306" pos:column="20">dav_handle_err<pos:position pos:line="306" pos:column="34"/></name><argument_list pos:line="306" pos:column="34">(<argument><expr><name pos:line="306" pos:column="35">r<pos:position pos:line="306" pos:column="36"/></name></expr></argument>, <argument><expr><name pos:line="306" pos:column="38">err<pos:position pos:line="306" pos:column="41"/></name></expr></argument>, <argument><expr><name pos:line="306" pos:column="43">NULL<pos:position pos:line="306" pos:column="47"/></name></expr></argument>)<pos:position pos:line="306" pos:column="48"/></argument_list></call></expr>;<pos:position pos:line="306" pos:column="49"/></return>
        }<pos:position pos:line="307" pos:column="10"/></block></then></if>
    }<pos:position pos:line="308" pos:column="6"/></block></then></if>

    <comment type="block" pos:line="310" pos:column="5">/* If source and destination parents are the same, then
     * use the same resource object, so status updates to one are reflected
     * in the other, when doing auto-versioning. Otherwise,
     * we may try to checkin the parent twice.
     */</comment>
    <if pos:line="315" pos:column="5">if <condition pos:line="315" pos:column="8">(<expr><name><name pos:line="315" pos:column="9">src_av_info<pos:position pos:line="315" pos:column="20"/></name><operator pos:line="315" pos:column="20">.<pos:position pos:line="315" pos:column="21"/></operator><name pos:line="315" pos:column="21">parent_resource<pos:position pos:line="315" pos:column="36"/></name></name> <operator pos:line="315" pos:column="37">!=<pos:position pos:line="315" pos:column="39"/></operator> <name pos:line="315" pos:column="40">NULL<pos:position pos:line="315" pos:column="44"/></name>
        <operator pos:line="316" pos:column="9">&amp;&amp;<pos:position pos:line="316" pos:column="19"/></operator> <name><name pos:line="316" pos:column="12">dst_av_info<pos:position pos:line="316" pos:column="23"/></name><operator pos:line="316" pos:column="23">.<pos:position pos:line="316" pos:column="24"/></operator><name pos:line="316" pos:column="24">parent_resource<pos:position pos:line="316" pos:column="39"/></name></name> <operator pos:line="316" pos:column="40">!=<pos:position pos:line="316" pos:column="42"/></operator> <name pos:line="316" pos:column="43">NULL<pos:position pos:line="316" pos:column="47"/></name>
        <operator pos:line="317" pos:column="9">&amp;&amp;<pos:position pos:line="317" pos:column="19"/></operator> <call pos:line="317" pos:column="12">(<modifier pos:line="317" pos:column="13">*<pos:position pos:line="317" pos:column="14"/></modifier><name><name pos:line="317" pos:column="14">src_av_info<pos:position pos:line="317" pos:column="25"/></name><operator pos:line="317" pos:column="25">.<pos:position pos:line="317" pos:column="26"/></operator><name pos:line="317" pos:column="26">parent_resource<pos:position pos:line="317" pos:column="41"/></name><operator pos:line="317" pos:column="41">-&gt;<pos:position pos:line="317" pos:column="46"/></operator><name pos:line="317" pos:column="43">hooks<pos:position pos:line="317" pos:column="48"/></name><operator pos:line="317" pos:column="48">-&gt;<pos:position pos:line="317" pos:column="53"/></operator><name pos:line="317" pos:column="50">is_same_resource<pos:position pos:line="317" pos:column="66"/></name></name>)
            <argument_list pos:line="318" pos:column="13">(<argument><expr><name><name pos:line="318" pos:column="14">src_av_info<pos:position pos:line="318" pos:column="25"/></name><operator pos:line="318" pos:column="25">.<pos:position pos:line="318" pos:column="26"/></operator><name pos:line="318" pos:column="26">parent_resource<pos:position pos:line="318" pos:column="41"/></name></name></expr></argument>, <argument><expr><name><name pos:line="318" pos:column="43">dst_av_info<pos:position pos:line="318" pos:column="54"/></name><operator pos:line="318" pos:column="54">.<pos:position pos:line="318" pos:column="55"/></operator><name pos:line="318" pos:column="55">parent_resource<pos:position pos:line="318" pos:column="70"/></name></name></expr></argument>)<pos:position pos:line="318" pos:column="71"/></argument_list></call></expr>)<pos:position pos:line="318" pos:column="72"/></condition><then pos:line="318" pos:column="72"> <block pos:line="318" pos:column="73">{

        <expr_stmt><expr><name><name pos:line="320" pos:column="9">dst_av_info<pos:position pos:line="320" pos:column="20"/></name><operator pos:line="320" pos:column="20">.<pos:position pos:line="320" pos:column="21"/></operator><name pos:line="320" pos:column="21">parent_resource<pos:position pos:line="320" pos:column="36"/></name></name> <operator pos:line="320" pos:column="37">=<pos:position pos:line="320" pos:column="38"/></operator> <name><name pos:line="320" pos:column="39">src_av_info<pos:position pos:line="320" pos:column="50"/></name><operator pos:line="320" pos:column="50">.<pos:position pos:line="320" pos:column="51"/></operator><name pos:line="320" pos:column="51">parent_resource<pos:position pos:line="320" pos:column="66"/></name></name></expr>;<pos:position pos:line="320" pos:column="67"/></expr_stmt>
    }<pos:position pos:line="321" pos:column="6"/></block></then></if>

    <comment type="block" pos:line="323" pos:column="5">/* If destination is being replaced, remove it first
     * (we know Ovewrite must be TRUE). Then try to copy/move the resource.
     */</comment>
    <if pos:line="326" pos:column="5">if <condition pos:line="326" pos:column="8">(<expr><name pos:line="326" pos:column="9">replace_dest<pos:position pos:line="326" pos:column="21"/></name></expr>)<pos:position pos:line="326" pos:column="22"/></condition><then pos:line="326" pos:column="22">
        <block type="pseudo"><expr_stmt><expr><name pos:line="327" pos:column="9">err<pos:position pos:line="327" pos:column="12"/></name> <operator pos:line="327" pos:column="13">=<pos:position pos:line="327" pos:column="14"/></operator> <call pos:line="327" pos:column="15">(<modifier pos:line="327" pos:column="16">*<pos:position pos:line="327" pos:column="17"/></modifier><name><name pos:line="327" pos:column="17">resnew<pos:position pos:line="327" pos:column="23"/></name><operator pos:line="327" pos:column="23">-&gt;<pos:position pos:line="327" pos:column="28"/></operator><name pos:line="327" pos:column="25">hooks<pos:position pos:line="327" pos:column="30"/></name><operator pos:line="327" pos:column="30">-&gt;<pos:position pos:line="327" pos:column="35"/></operator><name pos:line="327" pos:column="32">remove_resource<pos:position pos:line="327" pos:column="47"/></name></name>)<argument_list pos:line="327" pos:column="48">(<argument><expr><name pos:line="327" pos:column="49">resnew<pos:position pos:line="327" pos:column="55"/></name></expr></argument>, <argument><expr><operator pos:line="327" pos:column="57">&amp;<pos:position pos:line="327" pos:column="62"/></operator><name pos:line="327" pos:column="58">multi_response<pos:position pos:line="327" pos:column="72"/></name></expr></argument>)<pos:position pos:line="327" pos:column="73"/></argument_list></call></expr>;<pos:position pos:line="327" pos:column="74"/></expr_stmt></block></then></if>

    <if pos:line="329" pos:column="5">if <condition pos:line="329" pos:column="8">(<expr><name pos:line="329" pos:column="9">err<pos:position pos:line="329" pos:column="12"/></name> <operator pos:line="329" pos:column="13">==<pos:position pos:line="329" pos:column="15"/></operator> <name pos:line="329" pos:column="16">NULL<pos:position pos:line="329" pos:column="20"/></name></expr>)<pos:position pos:line="329" pos:column="21"/></condition><then pos:line="329" pos:column="21"> <block pos:line="329" pos:column="22">{
        <if pos:line="330" pos:column="9">if <condition pos:line="330" pos:column="12">(<expr><name pos:line="330" pos:column="13">is_move<pos:position pos:line="330" pos:column="20"/></name></expr>)<pos:position pos:line="330" pos:column="21"/></condition><then pos:line="330" pos:column="21">
            <block type="pseudo"><expr_stmt><expr><name pos:line="331" pos:column="13">err<pos:position pos:line="331" pos:column="16"/></name> <operator pos:line="331" pos:column="17">=<pos:position pos:line="331" pos:column="18"/></operator> <call pos:line="331" pos:column="19">(<modifier pos:line="331" pos:column="20">*<pos:position pos:line="331" pos:column="21"/></modifier><name><name pos:line="331" pos:column="21">resource<pos:position pos:line="331" pos:column="29"/></name><operator pos:line="331" pos:column="29">-&gt;<pos:position pos:line="331" pos:column="34"/></operator><name pos:line="331" pos:column="31">hooks<pos:position pos:line="331" pos:column="36"/></name><operator pos:line="331" pos:column="36">-&gt;<pos:position pos:line="331" pos:column="41"/></operator><name pos:line="331" pos:column="38">move_resource<pos:position pos:line="331" pos:column="51"/></name></name>)<argument_list pos:line="331" pos:column="52">(<argument><expr><name pos:line="331" pos:column="53">resource<pos:position pos:line="331" pos:column="61"/></name></expr></argument>, <argument><expr><name pos:line="331" pos:column="63">resnew<pos:position pos:line="331" pos:column="69"/></name></expr></argument>,
                                                    <argument><expr><operator pos:line="332" pos:column="53">&amp;<pos:position pos:line="332" pos:column="58"/></operator><name pos:line="332" pos:column="54">multi_response<pos:position pos:line="332" pos:column="68"/></name></expr></argument>)<pos:position pos:line="332" pos:column="69"/></argument_list></call></expr>;<pos:position pos:line="332" pos:column="70"/></expr_stmt></block></then>
        <else pos:line="333" pos:column="9">else
            <block type="pseudo"><expr_stmt><expr><name pos:line="334" pos:column="13">err<pos:position pos:line="334" pos:column="16"/></name> <operator pos:line="334" pos:column="17">=<pos:position pos:line="334" pos:column="18"/></operator> <call pos:line="334" pos:column="19">(<modifier pos:line="334" pos:column="20">*<pos:position pos:line="334" pos:column="21"/></modifier><name><name pos:line="334" pos:column="21">resource<pos:position pos:line="334" pos:column="29"/></name><operator pos:line="334" pos:column="29">-&gt;<pos:position pos:line="334" pos:column="34"/></operator><name pos:line="334" pos:column="31">hooks<pos:position pos:line="334" pos:column="36"/></name><operator pos:line="334" pos:column="36">-&gt;<pos:position pos:line="334" pos:column="41"/></operator><name pos:line="334" pos:column="38">copy_resource<pos:position pos:line="334" pos:column="51"/></name></name>)<argument_list pos:line="334" pos:column="52">(<argument><expr><name pos:line="334" pos:column="53">resource<pos:position pos:line="334" pos:column="61"/></name></expr></argument>, <argument><expr><name pos:line="334" pos:column="63">resnew<pos:position pos:line="334" pos:column="69"/></name></expr></argument>, <argument><expr><name pos:line="334" pos:column="71">depth<pos:position pos:line="334" pos:column="76"/></name></expr></argument>,
                                                    <argument><expr><operator pos:line="335" pos:column="53">&amp;<pos:position pos:line="335" pos:column="58"/></operator><name pos:line="335" pos:column="54">multi_response<pos:position pos:line="335" pos:column="68"/></name></expr></argument>)<pos:position pos:line="335" pos:column="69"/></argument_list></call></expr>;<pos:position pos:line="335" pos:column="70"/></expr_stmt></block></else></if>
    }<pos:position pos:line="336" pos:column="6"/></block></then></if>

    <comment type="block" pos:line="338" pos:column="5">/* perform any auto-versioning cleanup */</comment>
    <expr_stmt><expr><name pos:line="339" pos:column="5">err2<pos:position pos:line="339" pos:column="9"/></name> <operator pos:line="339" pos:column="10">=<pos:position pos:line="339" pos:column="11"/></operator> <call><name pos:line="339" pos:column="12">dav_auto_checkin<pos:position pos:line="339" pos:column="28"/></name><argument_list pos:line="339" pos:column="28">(<argument><expr><name pos:line="339" pos:column="29">r<pos:position pos:line="339" pos:column="30"/></name></expr></argument>, <argument><expr><name pos:line="339" pos:column="32">NULL<pos:position pos:line="339" pos:column="36"/></name></expr></argument>, <argument><expr><name pos:line="339" pos:column="38">err<pos:position pos:line="339" pos:column="41"/></name> <operator pos:line="339" pos:column="42">!=<pos:position pos:line="339" pos:column="44"/></operator> <name pos:line="339" pos:column="45">NULL<pos:position pos:line="339" pos:column="49"/></name></expr></argument> <comment type="block" pos:line="339" pos:column="50">/* undo if error */</comment>,
                            <argument><expr><literal type="number" pos:line="340" pos:column="29">0<pos:position pos:line="340" pos:column="30"/></literal></expr></argument> <comment type="block" pos:line="340" pos:column="31">/*unlock*/</comment>, <argument><expr><operator pos:line="340" pos:column="43">&amp;<pos:position pos:line="340" pos:column="48"/></operator><name pos:line="340" pos:column="44">dst_av_info<pos:position pos:line="340" pos:column="55"/></name></expr></argument>)<pos:position pos:line="340" pos:column="56"/></argument_list></call></expr>;<pos:position pos:line="340" pos:column="57"/></expr_stmt>

    <if pos:line="342" pos:column="5">if <condition pos:line="342" pos:column="8">(<expr><name pos:line="342" pos:column="9">is_move<pos:position pos:line="342" pos:column="16"/></name></expr>)<pos:position pos:line="342" pos:column="17"/></condition><then pos:line="342" pos:column="17"> <block pos:line="342" pos:column="18">{
        <expr_stmt><expr><name pos:line="343" pos:column="9">err3<pos:position pos:line="343" pos:column="13"/></name> <operator pos:line="343" pos:column="14">=<pos:position pos:line="343" pos:column="15"/></operator> <call><name pos:line="343" pos:column="16">dav_auto_checkin<pos:position pos:line="343" pos:column="32"/></name><argument_list pos:line="343" pos:column="32">(<argument><expr><name pos:line="343" pos:column="33">r<pos:position pos:line="343" pos:column="34"/></name></expr></argument>, <argument><expr><name pos:line="343" pos:column="36">NULL<pos:position pos:line="343" pos:column="40"/></name></expr></argument>, <argument><expr><name pos:line="343" pos:column="42">err<pos:position pos:line="343" pos:column="45"/></name> <operator pos:line="343" pos:column="46">!=<pos:position pos:line="343" pos:column="48"/></operator> <name pos:line="343" pos:column="49">NULL<pos:position pos:line="343" pos:column="53"/></name></expr></argument> <comment type="block" pos:line="343" pos:column="54">/* undo if error */</comment>,
                                <argument><expr><literal type="number" pos:line="344" pos:column="33">0<pos:position pos:line="344" pos:column="34"/></literal></expr></argument> <comment type="block" pos:line="344" pos:column="35">/*unlock*/</comment>, <argument><expr><operator pos:line="344" pos:column="47">&amp;<pos:position pos:line="344" pos:column="52"/></operator><name pos:line="344" pos:column="48">src_av_info<pos:position pos:line="344" pos:column="59"/></name></expr></argument>)<pos:position pos:line="344" pos:column="60"/></argument_list></call></expr>;<pos:position pos:line="344" pos:column="61"/></expr_stmt>
    }<pos:position pos:line="345" pos:column="6"/></block></then>
    <else pos:line="346" pos:column="5">else
        <block type="pseudo"><expr_stmt><expr><name pos:line="347" pos:column="9">err3<pos:position pos:line="347" pos:column="13"/></name> <operator pos:line="347" pos:column="14">=<pos:position pos:line="347" pos:column="15"/></operator> <name pos:line="347" pos:column="16">NULL<pos:position pos:line="347" pos:column="20"/></name></expr>;<pos:position pos:line="347" pos:column="21"/></expr_stmt></block></else></if>

    <comment type="block" pos:line="349" pos:column="5">/* check for error from remove/copy/move operations */</comment>
    <if pos:line="350" pos:column="5">if <condition pos:line="350" pos:column="8">(<expr><name pos:line="350" pos:column="9">err<pos:position pos:line="350" pos:column="12"/></name> <operator pos:line="350" pos:column="13">!=<pos:position pos:line="350" pos:column="15"/></operator> <name pos:line="350" pos:column="16">NULL<pos:position pos:line="350" pos:column="20"/></name></expr>)<pos:position pos:line="350" pos:column="21"/></condition><then pos:line="350" pos:column="21"> <block pos:line="350" pos:column="22">{
        <if pos:line="351" pos:column="9">if <condition pos:line="351" pos:column="12">(<expr><name pos:line="351" pos:column="13">lockdb<pos:position pos:line="351" pos:column="19"/></name> <operator pos:line="351" pos:column="20">!=<pos:position pos:line="351" pos:column="22"/></operator> <name pos:line="351" pos:column="23">NULL<pos:position pos:line="351" pos:column="27"/></name></expr>)<pos:position pos:line="351" pos:column="28"/></condition><then pos:line="351" pos:column="28">
            <block type="pseudo"><expr_stmt><expr><call pos:line="352" pos:column="13">(<modifier pos:line="352" pos:column="14">*<pos:position pos:line="352" pos:column="15"/></modifier><name><name pos:line="352" pos:column="15">lockdb<pos:position pos:line="352" pos:column="21"/></name><operator pos:line="352" pos:column="21">-&gt;<pos:position pos:line="352" pos:column="26"/></operator><name pos:line="352" pos:column="23">hooks<pos:position pos:line="352" pos:column="28"/></name><operator pos:line="352" pos:column="28">-&gt;<pos:position pos:line="352" pos:column="33"/></operator><name pos:line="352" pos:column="30">close_lockdb<pos:position pos:line="352" pos:column="42"/></name></name>)<argument_list pos:line="352" pos:column="43">(<argument><expr><name pos:line="352" pos:column="44">lockdb<pos:position pos:line="352" pos:column="50"/></name></expr></argument>)<pos:position pos:line="352" pos:column="51"/></argument_list></call></expr>;<pos:position pos:line="352" pos:column="52"/></expr_stmt></block></then></if>

        <expr_stmt><expr><name pos:line="354" pos:column="9">err<pos:position pos:line="354" pos:column="12"/></name> <operator pos:line="354" pos:column="13">=<pos:position pos:line="354" pos:column="14"/></operator> <call><name pos:line="354" pos:column="15">dav_push_error<pos:position pos:line="354" pos:column="29"/></name><argument_list pos:line="354" pos:column="29">(<argument><expr><name><name pos:line="354" pos:column="30">r<pos:position pos:line="354" pos:column="31"/></name><operator pos:line="354" pos:column="31">-&gt;<pos:position pos:line="354" pos:column="36"/></operator><name pos:line="354" pos:column="33">pool<pos:position pos:line="354" pos:column="37"/></name></name></expr></argument>, <argument><expr><name><name pos:line="354" pos:column="39">err<pos:position pos:line="354" pos:column="42"/></name><operator pos:line="354" pos:column="42">-&gt;<pos:position pos:line="354" pos:column="47"/></operator><name pos:line="354" pos:column="44">status<pos:position pos:line="354" pos:column="50"/></name></name></expr></argument>, <argument><expr><literal type="number" pos:line="354" pos:column="52">0<pos:position pos:line="354" pos:column="53"/></literal></expr></argument>,
                             <argument><expr><call><name pos:line="355" pos:column="30">apr_psprintf<pos:position pos:line="355" pos:column="42"/></name><argument_list pos:line="355" pos:column="42">(<argument><expr><name><name pos:line="355" pos:column="43">r<pos:position pos:line="355" pos:column="44"/></name><operator pos:line="355" pos:column="44">-&gt;<pos:position pos:line="355" pos:column="49"/></operator><name pos:line="355" pos:column="46">pool<pos:position pos:line="355" pos:column="50"/></name></name></expr></argument>,
                                          <argument><expr><literal type="string" pos:line="356" pos:column="43">"Could not MOVE/COPY %s."<pos:position pos:line="356" pos:column="68"/></literal></expr></argument>,
                                          <argument><expr><call><name pos:line="357" pos:column="43">ap_escape_html<pos:position pos:line="357" pos:column="57"/></name><argument_list pos:line="357" pos:column="57">(<argument><expr><name><name pos:line="357" pos:column="58">r<pos:position pos:line="357" pos:column="59"/></name><operator pos:line="357" pos:column="59">-&gt;<pos:position pos:line="357" pos:column="64"/></operator><name pos:line="357" pos:column="61">pool<pos:position pos:line="357" pos:column="65"/></name></name></expr></argument>, <argument><expr><name><name pos:line="357" pos:column="67">r<pos:position pos:line="357" pos:column="68"/></name><operator pos:line="357" pos:column="68">-&gt;<pos:position pos:line="357" pos:column="73"/></operator><name pos:line="357" pos:column="70">uri<pos:position pos:line="357" pos:column="73"/></name></name></expr></argument>)<pos:position pos:line="357" pos:column="74"/></argument_list></call></expr></argument>)<pos:position pos:line="357" pos:column="75"/></argument_list></call></expr></argument>,
                             <argument><expr><name pos:line="358" pos:column="30">err<pos:position pos:line="358" pos:column="33"/></name></expr></argument>)<pos:position pos:line="358" pos:column="34"/></argument_list></call></expr>;<pos:position pos:line="358" pos:column="35"/></expr_stmt>
        <return pos:line="359" pos:column="9">return <expr><call><name pos:line="359" pos:column="16">dav_handle_err<pos:position pos:line="359" pos:column="30"/></name><argument_list pos:line="359" pos:column="30">(<argument><expr><name pos:line="359" pos:column="31">r<pos:position pos:line="359" pos:column="32"/></name></expr></argument>, <argument><expr><name pos:line="359" pos:column="34">err<pos:position pos:line="359" pos:column="37"/></name></expr></argument>, <argument><expr><name pos:line="359" pos:column="39">multi_response<pos:position pos:line="359" pos:column="53"/></name></expr></argument>)<pos:position pos:line="359" pos:column="54"/></argument_list></call></expr>;<pos:position pos:line="359" pos:column="55"/></return>
    }<pos:position pos:line="360" pos:column="6"/></block></then></if>

    <comment type="block" pos:line="362" pos:column="5">/* check for errors from auto-versioning */</comment>
    <if pos:line="363" pos:column="5">if <condition pos:line="363" pos:column="8">(<expr><name pos:line="363" pos:column="9">err2<pos:position pos:line="363" pos:column="13"/></name> <operator pos:line="363" pos:column="14">!=<pos:position pos:line="363" pos:column="16"/></operator> <name pos:line="363" pos:column="17">NULL<pos:position pos:line="363" pos:column="21"/></name></expr>)<pos:position pos:line="363" pos:column="22"/></condition><then pos:line="363" pos:column="22"> <block pos:line="363" pos:column="23">{
        <comment type="block" pos:line="364" pos:column="9">/* just log a warning */</comment>
        <expr_stmt><expr><name pos:line="365" pos:column="9">err<pos:position pos:line="365" pos:column="12"/></name> <operator pos:line="365" pos:column="13">=<pos:position pos:line="365" pos:column="14"/></operator> <call><name pos:line="365" pos:column="15">dav_push_error<pos:position pos:line="365" pos:column="29"/></name><argument_list pos:line="365" pos:column="29">(<argument><expr><name><name pos:line="365" pos:column="30">r<pos:position pos:line="365" pos:column="31"/></name><operator pos:line="365" pos:column="31">-&gt;<pos:position pos:line="365" pos:column="36"/></operator><name pos:line="365" pos:column="33">pool<pos:position pos:line="365" pos:column="37"/></name></name></expr></argument>, <argument><expr><name><name pos:line="365" pos:column="39">err2<pos:position pos:line="365" pos:column="43"/></name><operator pos:line="365" pos:column="43">-&gt;<pos:position pos:line="365" pos:column="48"/></operator><name pos:line="365" pos:column="45">status<pos:position pos:line="365" pos:column="51"/></name></name></expr></argument>, <argument><expr><literal type="number" pos:line="365" pos:column="53">0<pos:position pos:line="365" pos:column="54"/></literal></expr></argument>,
                             <argument><expr><literal type="string" pos:line="366" pos:column="30">"The MOVE/COPY was successful, but there was a "<pos:position pos:line="366" pos:column="78"/></literal>
                             <literal type="string" pos:line="367" pos:column="30">"problem automatically checking in the "<pos:position pos:line="367" pos:column="70"/></literal>
                             <literal type="string" pos:line="368" pos:column="30">"source parent collection."<pos:position pos:line="368" pos:column="57"/></literal></expr></argument>,
                             <argument><expr><name pos:line="369" pos:column="30">err2<pos:position pos:line="369" pos:column="34"/></name></expr></argument>)<pos:position pos:line="369" pos:column="35"/></argument_list></call></expr>;<pos:position pos:line="369" pos:column="36"/></expr_stmt>
        <expr_stmt><expr><call><name pos:line="370" pos:column="9">dav_log_err<pos:position pos:line="370" pos:column="20"/></name><argument_list pos:line="370" pos:column="20">(<argument><expr><name pos:line="370" pos:column="21">r<pos:position pos:line="370" pos:column="22"/></name></expr></argument>, <argument><expr><name pos:line="370" pos:column="24">err<pos:position pos:line="370" pos:column="27"/></name></expr></argument>, <argument><expr><name pos:line="370" pos:column="29">APLOG_WARNING<pos:position pos:line="370" pos:column="42"/></name></expr></argument>)<pos:position pos:line="370" pos:column="43"/></argument_list></call></expr>;<pos:position pos:line="370" pos:column="44"/></expr_stmt>
    }<pos:position pos:line="371" pos:column="6"/></block></then></if>
    <if pos:line="372" pos:column="5">if <condition pos:line="372" pos:column="8">(<expr><name pos:line="372" pos:column="9">err3<pos:position pos:line="372" pos:column="13"/></name> <operator pos:line="372" pos:column="14">!=<pos:position pos:line="372" pos:column="16"/></operator> <name pos:line="372" pos:column="17">NULL<pos:position pos:line="372" pos:column="21"/></name></expr>)<pos:position pos:line="372" pos:column="22"/></condition><then pos:line="372" pos:column="22"> <block pos:line="372" pos:column="23">{
        <comment type="block" pos:line="373" pos:column="9">/* just log a warning */</comment>
        <expr_stmt><expr><name pos:line="374" pos:column="9">err<pos:position pos:line="374" pos:column="12"/></name> <operator pos:line="374" pos:column="13">=<pos:position pos:line="374" pos:column="14"/></operator> <call><name pos:line="374" pos:column="15">dav_push_error<pos:position pos:line="374" pos:column="29"/></name><argument_list pos:line="374" pos:column="29">(<argument><expr><name><name pos:line="374" pos:column="30">r<pos:position pos:line="374" pos:column="31"/></name><operator pos:line="374" pos:column="31">-&gt;<pos:position pos:line="374" pos:column="36"/></operator><name pos:line="374" pos:column="33">pool<pos:position pos:line="374" pos:column="37"/></name></name></expr></argument>, <argument><expr><name><name pos:line="374" pos:column="39">err3<pos:position pos:line="374" pos:column="43"/></name><operator pos:line="374" pos:column="43">-&gt;<pos:position pos:line="374" pos:column="48"/></operator><name pos:line="374" pos:column="45">status<pos:position pos:line="374" pos:column="51"/></name></name></expr></argument>, <argument><expr><literal type="number" pos:line="374" pos:column="53">0<pos:position pos:line="374" pos:column="54"/></literal></expr></argument>,
                             <argument><expr><literal type="string" pos:line="375" pos:column="30">"The MOVE/COPY was successful, but there was a "<pos:position pos:line="375" pos:column="78"/></literal>
                             <literal type="string" pos:line="376" pos:column="30">"problem automatically checking in the "<pos:position pos:line="376" pos:column="70"/></literal>
                             <literal type="string" pos:line="377" pos:column="30">"destination or its parent collection."<pos:position pos:line="377" pos:column="69"/></literal></expr></argument>,
                             <argument><expr><name pos:line="378" pos:column="30">err3<pos:position pos:line="378" pos:column="34"/></name></expr></argument>)<pos:position pos:line="378" pos:column="35"/></argument_list></call></expr>;<pos:position pos:line="378" pos:column="36"/></expr_stmt>
        <expr_stmt><expr><call><name pos:line="379" pos:column="9">dav_log_err<pos:position pos:line="379" pos:column="20"/></name><argument_list pos:line="379" pos:column="20">(<argument><expr><name pos:line="379" pos:column="21">r<pos:position pos:line="379" pos:column="22"/></name></expr></argument>, <argument><expr><name pos:line="379" pos:column="24">err<pos:position pos:line="379" pos:column="27"/></name></expr></argument>, <argument><expr><name pos:line="379" pos:column="29">APLOG_WARNING<pos:position pos:line="379" pos:column="42"/></name></expr></argument>)<pos:position pos:line="379" pos:column="43"/></argument_list></call></expr>;<pos:position pos:line="379" pos:column="44"/></expr_stmt>
    }<pos:position pos:line="380" pos:column="6"/></block></then></if>

    <comment type="block" pos:line="382" pos:column="5">/* propagate any indirect locks at the target */</comment>
    <if pos:line="383" pos:column="5">if <condition pos:line="383" pos:column="8">(<expr><name pos:line="383" pos:column="9">lockdb<pos:position pos:line="383" pos:column="15"/></name> <operator pos:line="383" pos:column="16">!=<pos:position pos:line="383" pos:column="18"/></operator> <name pos:line="383" pos:column="19">NULL<pos:position pos:line="383" pos:column="23"/></name></expr>)<pos:position pos:line="383" pos:column="24"/></condition><then pos:line="383" pos:column="24"> <block pos:line="383" pos:column="25">{

        <comment type="block" pos:line="385" pos:column="9">/* notify lock system that we have created/replaced a resource */</comment>
        <expr_stmt><expr><name pos:line="386" pos:column="9">err<pos:position pos:line="386" pos:column="12"/></name> <operator pos:line="386" pos:column="13">=<pos:position pos:line="386" pos:column="14"/></operator> <call><name pos:line="386" pos:column="15">dav_notify_created<pos:position pos:line="386" pos:column="33"/></name><argument_list pos:line="386" pos:column="33">(<argument><expr><name pos:line="386" pos:column="34">r<pos:position pos:line="386" pos:column="35"/></name></expr></argument>, <argument><expr><name pos:line="386" pos:column="37">lockdb<pos:position pos:line="386" pos:column="43"/></name></expr></argument>, <argument><expr><name pos:line="386" pos:column="45">resnew<pos:position pos:line="386" pos:column="51"/></name></expr></argument>, <argument><expr><name pos:line="386" pos:column="53">resnew_state<pos:position pos:line="386" pos:column="65"/></name></expr></argument>, <argument><expr><name pos:line="386" pos:column="67">depth<pos:position pos:line="386" pos:column="72"/></name></expr></argument>)<pos:position pos:line="386" pos:column="73"/></argument_list></call></expr>;<pos:position pos:line="386" pos:column="74"/></expr_stmt>

        <expr_stmt><expr><call pos:line="388" pos:column="9">(<modifier pos:line="388" pos:column="10">*<pos:position pos:line="388" pos:column="11"/></modifier><name><name pos:line="388" pos:column="11">lockdb<pos:position pos:line="388" pos:column="17"/></name><operator pos:line="388" pos:column="17">-&gt;<pos:position pos:line="388" pos:column="22"/></operator><name pos:line="388" pos:column="19">hooks<pos:position pos:line="388" pos:column="24"/></name><operator pos:line="388" pos:column="24">-&gt;<pos:position pos:line="388" pos:column="29"/></operator><name pos:line="388" pos:column="26">close_lockdb<pos:position pos:line="388" pos:column="38"/></name></name>)<argument_list pos:line="388" pos:column="39">(<argument><expr><name pos:line="388" pos:column="40">lockdb<pos:position pos:line="388" pos:column="46"/></name></expr></argument>)<pos:position pos:line="388" pos:column="47"/></argument_list></call></expr>;<pos:position pos:line="388" pos:column="48"/></expr_stmt>

        <if pos:line="390" pos:column="9">if <condition pos:line="390" pos:column="12">(<expr><name pos:line="390" pos:column="13">err<pos:position pos:line="390" pos:column="16"/></name> <operator pos:line="390" pos:column="17">!=<pos:position pos:line="390" pos:column="19"/></operator> <name pos:line="390" pos:column="20">NULL<pos:position pos:line="390" pos:column="24"/></name></expr>)<pos:position pos:line="390" pos:column="25"/></condition><then pos:line="390" pos:column="25"> <block pos:line="390" pos:column="26">{
            <comment type="block" pos:line="391" pos:column="13">/* The move/copy was successful, but the locking failed. */</comment>
            <expr_stmt><expr><name pos:line="392" pos:column="13">err<pos:position pos:line="392" pos:column="16"/></name> <operator pos:line="392" pos:column="17">=<pos:position pos:line="392" pos:column="18"/></operator> <call><name pos:line="392" pos:column="19">dav_push_error<pos:position pos:line="392" pos:column="33"/></name><argument_list pos:line="392" pos:column="33">(<argument><expr><name><name pos:line="392" pos:column="34">r<pos:position pos:line="392" pos:column="35"/></name><operator pos:line="392" pos:column="35">-&gt;<pos:position pos:line="392" pos:column="40"/></operator><name pos:line="392" pos:column="37">pool<pos:position pos:line="392" pos:column="41"/></name></name></expr></argument>, <argument><expr><name><name pos:line="392" pos:column="43">err<pos:position pos:line="392" pos:column="46"/></name><operator pos:line="392" pos:column="46">-&gt;<pos:position pos:line="392" pos:column="51"/></operator><name pos:line="392" pos:column="48">status<pos:position pos:line="392" pos:column="54"/></name></name></expr></argument>, <argument><expr><literal type="number" pos:line="392" pos:column="56">0<pos:position pos:line="392" pos:column="57"/></literal></expr></argument>,
                                 <argument><expr><literal type="string" pos:line="393" pos:column="34">"The MOVE/COPY was successful, but there "<pos:position pos:line="393" pos:column="76"/></literal>
                                 <literal type="string" pos:line="394" pos:column="34">"was a problem updating the lock "<pos:position pos:line="394" pos:column="68"/></literal>
                                 <literal type="string" pos:line="395" pos:column="34">"information."<pos:position pos:line="395" pos:column="48"/></literal></expr></argument>,
                                 <argument><expr><name pos:line="396" pos:column="34">err<pos:position pos:line="396" pos:column="37"/></name></expr></argument>)<pos:position pos:line="396" pos:column="38"/></argument_list></call></expr>;<pos:position pos:line="396" pos:column="39"/></expr_stmt>
            <return pos:line="397" pos:column="13">return <expr><call><name pos:line="397" pos:column="20">dav_handle_err<pos:position pos:line="397" pos:column="34"/></name><argument_list pos:line="397" pos:column="34">(<argument><expr><name pos:line="397" pos:column="35">r<pos:position pos:line="397" pos:column="36"/></name></expr></argument>, <argument><expr><name pos:line="397" pos:column="38">err<pos:position pos:line="397" pos:column="41"/></name></expr></argument>, <argument><expr><name pos:line="397" pos:column="43">NULL<pos:position pos:line="397" pos:column="47"/></name></expr></argument>)<pos:position pos:line="397" pos:column="48"/></argument_list></call></expr>;<pos:position pos:line="397" pos:column="49"/></return>
        }<pos:position pos:line="398" pos:column="10"/></block></then></if>
    }<pos:position pos:line="399" pos:column="6"/></block></then></if>

    <comment type="block" pos:line="401" pos:column="5">/* return an appropriate response (HTTP_CREATED or HTTP_NO_CONTENT) */</comment>
    <return pos:line="402" pos:column="5">return <expr><call><name pos:line="402" pos:column="12">dav_created<pos:position pos:line="402" pos:column="23"/></name><argument_list pos:line="402" pos:column="23">(<argument><expr><name pos:line="402" pos:column="24">r<pos:position pos:line="402" pos:column="25"/></name></expr></argument>, <argument><expr><name><name pos:line="402" pos:column="27">lookup<pos:position pos:line="402" pos:column="33"/></name><operator pos:line="402" pos:column="33">.<pos:position pos:line="402" pos:column="34"/></operator><name pos:line="402" pos:column="34">rnew<pos:position pos:line="402" pos:column="38"/></name><operator pos:line="402" pos:column="38">-&gt;<pos:position pos:line="402" pos:column="43"/></operator><name pos:line="402" pos:column="40">unparsed_uri<pos:position pos:line="402" pos:column="52"/></name></name></expr></argument>, <argument><expr><literal type="string" pos:line="402" pos:column="54">"Destination"<pos:position pos:line="402" pos:column="67"/></literal></expr></argument>,
                       <argument><expr><name pos:line="403" pos:column="24">resnew_state<pos:position pos:line="403" pos:column="36"/></name> <operator pos:line="403" pos:column="37">==<pos:position pos:line="403" pos:column="39"/></operator> <name pos:line="403" pos:column="40">DAV_RESOURCE_EXISTS<pos:position pos:line="403" pos:column="59"/></name></expr></argument>)<pos:position pos:line="403" pos:column="60"/></argument_list></call></expr>;<pos:position pos:line="403" pos:column="61"/></return>
}<pos:position pos:line="404" pos:column="2"/></block></function></unit>

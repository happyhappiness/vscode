<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/httpd/gumtree/httpd_repos_function_1090_httpd-2.2.17.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">char<pos:position pos:line="1" pos:column="12"/></name> <modifier pos:line="1" pos:column="13">*<pos:position pos:line="1" pos:column="14"/></modifier></type><name pos:line="1" pos:column="14">try_alias_list<pos:position pos:line="1" pos:column="28"/></name><parameter_list pos:line="1" pos:column="28">(<parameter><decl><type><name pos:line="1" pos:column="29">request_rec<pos:position pos:line="1" pos:column="40"/></name> <modifier pos:line="1" pos:column="41">*<pos:position pos:line="1" pos:column="42"/></modifier></type><name pos:line="1" pos:column="42">r<pos:position pos:line="1" pos:column="43"/></name></decl></parameter>, <parameter><decl><type><name pos:line="1" pos:column="45">apr_array_header_t<pos:position pos:line="1" pos:column="63"/></name> <modifier pos:line="1" pos:column="64">*<pos:position pos:line="1" pos:column="65"/></modifier></type><name pos:line="1" pos:column="65">aliases<pos:position pos:line="1" pos:column="72"/></name></decl></parameter>,
                            <parameter><decl><type><name pos:line="2" pos:column="29">int<pos:position pos:line="2" pos:column="32"/></name></type> <name pos:line="2" pos:column="33">doesc<pos:position pos:line="2" pos:column="38"/></name></decl></parameter>, <parameter><decl><type><name pos:line="2" pos:column="40">int<pos:position pos:line="2" pos:column="43"/></name> <modifier pos:line="2" pos:column="44">*<pos:position pos:line="2" pos:column="45"/></modifier></type><name pos:line="2" pos:column="45">status<pos:position pos:line="2" pos:column="51"/></name></decl></parameter>)<pos:position pos:line="2" pos:column="52"/></parameter_list>
<block pos:line="3" pos:column="1">{
    <decl_stmt><decl><type><name pos:line="4" pos:column="5">alias_entry<pos:position pos:line="4" pos:column="16"/></name> <modifier pos:line="4" pos:column="17">*<pos:position pos:line="4" pos:column="18"/></modifier></type><name pos:line="4" pos:column="18">entries<pos:position pos:line="4" pos:column="25"/></name> <init pos:line="4" pos:column="26">= <expr><operator pos:line="4" pos:column="28">(<pos:position pos:line="4" pos:column="29"/></operator><name pos:line="4" pos:column="29">alias_entry<pos:position pos:line="4" pos:column="40"/></name> <operator pos:line="4" pos:column="41">*<pos:position pos:line="4" pos:column="42"/></operator><operator pos:line="4" pos:column="42">)<pos:position pos:line="4" pos:column="43"/></operator> <name><name pos:line="4" pos:column="44">aliases<pos:position pos:line="4" pos:column="51"/></name><operator pos:line="4" pos:column="51">-&gt;<pos:position pos:line="4" pos:column="56"/></operator><name pos:line="4" pos:column="53">elts<pos:position pos:line="4" pos:column="57"/></name></name></expr></init></decl>;<pos:position pos:line="4" pos:column="58"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="5" pos:column="5">ap_regmatch_t<pos:position pos:line="5" pos:column="18"/></name></type> <name><name pos:line="5" pos:column="19">regm<pos:position pos:line="5" pos:column="23"/></name><index pos:line="5" pos:column="23">[<expr><name pos:line="5" pos:column="24">AP_MAX_REG_MATCH<pos:position pos:line="5" pos:column="40"/></name></expr>]<pos:position pos:line="5" pos:column="41"/></index></name></decl>;<pos:position pos:line="5" pos:column="42"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="6" pos:column="5">char<pos:position pos:line="6" pos:column="9"/></name> <modifier pos:line="6" pos:column="10">*<pos:position pos:line="6" pos:column="11"/></modifier></type><name pos:line="6" pos:column="11">found<pos:position pos:line="6" pos:column="16"/></name> <init pos:line="6" pos:column="17">= <expr><name pos:line="6" pos:column="19">NULL<pos:position pos:line="6" pos:column="23"/></name></expr></init></decl>;<pos:position pos:line="6" pos:column="24"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="7" pos:column="5">int<pos:position pos:line="7" pos:column="8"/></name></type> <name pos:line="7" pos:column="9">i<pos:position pos:line="7" pos:column="10"/></name></decl>;<pos:position pos:line="7" pos:column="11"/></decl_stmt>

    <for pos:line="9" pos:column="5">for <control pos:line="9" pos:column="9">(<init><expr><name pos:line="9" pos:column="10">i<pos:position pos:line="9" pos:column="11"/></name> <operator pos:line="9" pos:column="12">=<pos:position pos:line="9" pos:column="13"/></operator> <literal type="number" pos:line="9" pos:column="14">0<pos:position pos:line="9" pos:column="15"/></literal></expr>;<pos:position pos:line="9" pos:column="16"/></init> <condition><expr><name pos:line="9" pos:column="17">i<pos:position pos:line="9" pos:column="18"/></name> <operator pos:line="9" pos:column="19">&lt;<pos:position pos:line="9" pos:column="23"/></operator> <name><name pos:line="9" pos:column="21">aliases<pos:position pos:line="9" pos:column="28"/></name><operator pos:line="9" pos:column="28">-&gt;<pos:position pos:line="9" pos:column="33"/></operator><name pos:line="9" pos:column="30">nelts<pos:position pos:line="9" pos:column="35"/></name></name></expr>;<pos:position pos:line="9" pos:column="36"/></condition> <incr><expr><operator pos:line="9" pos:column="37">++<pos:position pos:line="9" pos:column="39"/></operator><name pos:line="9" pos:column="39">i<pos:position pos:line="9" pos:column="40"/></name></expr></incr>)<pos:position pos:line="9" pos:column="41"/></control> <block pos:line="9" pos:column="42">{
        <decl_stmt><decl><type><name pos:line="10" pos:column="9">alias_entry<pos:position pos:line="10" pos:column="20"/></name> <modifier pos:line="10" pos:column="21">*<pos:position pos:line="10" pos:column="22"/></modifier></type><name pos:line="10" pos:column="22">p<pos:position pos:line="10" pos:column="23"/></name> <init pos:line="10" pos:column="24">= <expr><operator pos:line="10" pos:column="26">&amp;<pos:position pos:line="10" pos:column="31"/></operator><name><name pos:line="10" pos:column="27">entries<pos:position pos:line="10" pos:column="34"/></name><index pos:line="10" pos:column="34">[<expr><name pos:line="10" pos:column="35">i<pos:position pos:line="10" pos:column="36"/></name></expr>]<pos:position pos:line="10" pos:column="37"/></index></name></expr></init></decl>;<pos:position pos:line="10" pos:column="38"/></decl_stmt>
        <decl_stmt><decl><type><name pos:line="11" pos:column="9">int<pos:position pos:line="11" pos:column="12"/></name></type> <name pos:line="11" pos:column="13">l<pos:position pos:line="11" pos:column="14"/></name></decl>;<pos:position pos:line="11" pos:column="15"/></decl_stmt>

        <if pos:line="13" pos:column="9">if <condition pos:line="13" pos:column="12">(<expr><name><name pos:line="13" pos:column="13">p<pos:position pos:line="13" pos:column="14"/></name><operator pos:line="13" pos:column="14">-&gt;<pos:position pos:line="13" pos:column="19"/></operator><name pos:line="13" pos:column="16">regexp<pos:position pos:line="13" pos:column="22"/></name></name></expr>)<pos:position pos:line="13" pos:column="23"/></condition><then pos:line="13" pos:column="23"> <block pos:line="13" pos:column="24">{
            <if pos:line="14" pos:column="13">if <condition pos:line="14" pos:column="16">(<expr><operator pos:line="14" pos:column="17">!<pos:position pos:line="14" pos:column="18"/></operator><call><name pos:line="14" pos:column="18">ap_regexec<pos:position pos:line="14" pos:column="28"/></name><argument_list pos:line="14" pos:column="28">(<argument><expr><name><name pos:line="14" pos:column="29">p<pos:position pos:line="14" pos:column="30"/></name><operator pos:line="14" pos:column="30">-&gt;<pos:position pos:line="14" pos:column="35"/></operator><name pos:line="14" pos:column="32">regexp<pos:position pos:line="14" pos:column="38"/></name></name></expr></argument>, <argument><expr><name><name pos:line="14" pos:column="40">r<pos:position pos:line="14" pos:column="41"/></name><operator pos:line="14" pos:column="41">-&gt;<pos:position pos:line="14" pos:column="46"/></operator><name pos:line="14" pos:column="43">uri<pos:position pos:line="14" pos:column="46"/></name></name></expr></argument>, <argument><expr><name pos:line="14" pos:column="48">AP_MAX_REG_MATCH<pos:position pos:line="14" pos:column="64"/></name></expr></argument>, <argument><expr><name pos:line="14" pos:column="66">regm<pos:position pos:line="14" pos:column="70"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="14" pos:column="72">0<pos:position pos:line="14" pos:column="73"/></literal></expr></argument>)<pos:position pos:line="14" pos:column="74"/></argument_list></call></expr>)<pos:position pos:line="14" pos:column="75"/></condition><then pos:line="14" pos:column="75"> <block pos:line="14" pos:column="76">{
                <if pos:line="15" pos:column="17">if <condition pos:line="15" pos:column="20">(<expr><name><name pos:line="15" pos:column="21">p<pos:position pos:line="15" pos:column="22"/></name><operator pos:line="15" pos:column="22">-&gt;<pos:position pos:line="15" pos:column="27"/></operator><name pos:line="15" pos:column="24">real<pos:position pos:line="15" pos:column="28"/></name></name></expr>)<pos:position pos:line="15" pos:column="29"/></condition><then pos:line="15" pos:column="29"> <block pos:line="15" pos:column="30">{
                    <expr_stmt><expr><name pos:line="16" pos:column="21">found<pos:position pos:line="16" pos:column="26"/></name> <operator pos:line="16" pos:column="27">=<pos:position pos:line="16" pos:column="28"/></operator> <call><name pos:line="16" pos:column="29">ap_pregsub<pos:position pos:line="16" pos:column="39"/></name><argument_list pos:line="16" pos:column="39">(<argument><expr><name><name pos:line="16" pos:column="40">r<pos:position pos:line="16" pos:column="41"/></name><operator pos:line="16" pos:column="41">-&gt;<pos:position pos:line="16" pos:column="46"/></operator><name pos:line="16" pos:column="43">pool<pos:position pos:line="16" pos:column="47"/></name></name></expr></argument>, <argument><expr><name><name pos:line="16" pos:column="49">p<pos:position pos:line="16" pos:column="50"/></name><operator pos:line="16" pos:column="50">-&gt;<pos:position pos:line="16" pos:column="55"/></operator><name pos:line="16" pos:column="52">real<pos:position pos:line="16" pos:column="56"/></name></name></expr></argument>, <argument><expr><name><name pos:line="16" pos:column="58">r<pos:position pos:line="16" pos:column="59"/></name><operator pos:line="16" pos:column="59">-&gt;<pos:position pos:line="16" pos:column="64"/></operator><name pos:line="16" pos:column="61">uri<pos:position pos:line="16" pos:column="64"/></name></name></expr></argument>,
                                       <argument><expr><name pos:line="17" pos:column="40">AP_MAX_REG_MATCH<pos:position pos:line="17" pos:column="56"/></name></expr></argument>, <argument><expr><name pos:line="17" pos:column="58">regm<pos:position pos:line="17" pos:column="62"/></name></expr></argument>)<pos:position pos:line="17" pos:column="63"/></argument_list></call></expr>;<pos:position pos:line="17" pos:column="64"/></expr_stmt>
                    <if pos:line="18" pos:column="21">if <condition pos:line="18" pos:column="24">(<expr><name pos:line="18" pos:column="25">found<pos:position pos:line="18" pos:column="30"/></name> <operator pos:line="18" pos:column="31">&amp;&amp;<pos:position pos:line="18" pos:column="41"/></operator> <name pos:line="18" pos:column="34">doesc<pos:position pos:line="18" pos:column="39"/></name></expr>)<pos:position pos:line="18" pos:column="40"/></condition><then pos:line="18" pos:column="40"> <block pos:line="18" pos:column="41">{
                        <decl_stmt><decl><type><name pos:line="19" pos:column="25">apr_uri_t<pos:position pos:line="19" pos:column="34"/></name></type> <name pos:line="19" pos:column="35">uri<pos:position pos:line="19" pos:column="38"/></name></decl>;<pos:position pos:line="19" pos:column="39"/></decl_stmt>
                        <expr_stmt><expr><call><name pos:line="20" pos:column="25">apr_uri_parse<pos:position pos:line="20" pos:column="38"/></name><argument_list pos:line="20" pos:column="38">(<argument><expr><name><name pos:line="20" pos:column="39">r<pos:position pos:line="20" pos:column="40"/></name><operator pos:line="20" pos:column="40">-&gt;<pos:position pos:line="20" pos:column="45"/></operator><name pos:line="20" pos:column="42">pool<pos:position pos:line="20" pos:column="46"/></name></name></expr></argument>, <argument><expr><name pos:line="20" pos:column="48">found<pos:position pos:line="20" pos:column="53"/></name></expr></argument>, <argument><expr><operator pos:line="20" pos:column="55">&amp;<pos:position pos:line="20" pos:column="60"/></operator><name pos:line="20" pos:column="56">uri<pos:position pos:line="20" pos:column="59"/></name></expr></argument>)<pos:position pos:line="20" pos:column="60"/></argument_list></call></expr>;<pos:position pos:line="20" pos:column="61"/></expr_stmt>
                        <comment type="block" pos:line="21" pos:column="25">/* Do not escape the query string or fragment. */</comment>
                        <expr_stmt><expr><name pos:line="22" pos:column="25">found<pos:position pos:line="22" pos:column="30"/></name> <operator pos:line="22" pos:column="31">=<pos:position pos:line="22" pos:column="32"/></operator> <call><name pos:line="22" pos:column="33">apr_uri_unparse<pos:position pos:line="22" pos:column="48"/></name><argument_list pos:line="22" pos:column="48">(<argument><expr><name><name pos:line="22" pos:column="49">r<pos:position pos:line="22" pos:column="50"/></name><operator pos:line="22" pos:column="50">-&gt;<pos:position pos:line="22" pos:column="55"/></operator><name pos:line="22" pos:column="52">pool<pos:position pos:line="22" pos:column="56"/></name></name></expr></argument>, <argument><expr><operator pos:line="22" pos:column="58">&amp;<pos:position pos:line="22" pos:column="63"/></operator><name pos:line="22" pos:column="59">uri<pos:position pos:line="22" pos:column="62"/></name></expr></argument>,
                                                <argument><expr><name pos:line="23" pos:column="49">APR_URI_UNP_OMITQUERY<pos:position pos:line="23" pos:column="70"/></name></expr></argument>)<pos:position pos:line="23" pos:column="71"/></argument_list></call></expr>;<pos:position pos:line="23" pos:column="72"/></expr_stmt>
                        <expr_stmt><expr><name pos:line="24" pos:column="25">found<pos:position pos:line="24" pos:column="30"/></name> <operator pos:line="24" pos:column="31">=<pos:position pos:line="24" pos:column="32"/></operator> <call><name pos:line="24" pos:column="33">ap_escape_uri<pos:position pos:line="24" pos:column="46"/></name><argument_list pos:line="24" pos:column="46">(<argument><expr><name><name pos:line="24" pos:column="47">r<pos:position pos:line="24" pos:column="48"/></name><operator pos:line="24" pos:column="48">-&gt;<pos:position pos:line="24" pos:column="53"/></operator><name pos:line="24" pos:column="50">pool<pos:position pos:line="24" pos:column="54"/></name></name></expr></argument>, <argument><expr><name pos:line="24" pos:column="56">found<pos:position pos:line="24" pos:column="61"/></name></expr></argument>)<pos:position pos:line="24" pos:column="62"/></argument_list></call></expr>;<pos:position pos:line="24" pos:column="63"/></expr_stmt>
                        <if pos:line="25" pos:column="25">if <condition pos:line="25" pos:column="28">(<expr><name><name pos:line="25" pos:column="29">uri<pos:position pos:line="25" pos:column="32"/></name><operator pos:line="25" pos:column="32">.<pos:position pos:line="25" pos:column="33"/></operator><name pos:line="25" pos:column="33">query<pos:position pos:line="25" pos:column="38"/></name></name></expr>)<pos:position pos:line="25" pos:column="39"/></condition><then pos:line="25" pos:column="39"> <block pos:line="25" pos:column="40">{
                            <expr_stmt><expr><name pos:line="26" pos:column="29">found<pos:position pos:line="26" pos:column="34"/></name> <operator pos:line="26" pos:column="35">=<pos:position pos:line="26" pos:column="36"/></operator> <call><name pos:line="26" pos:column="37">apr_pstrcat<pos:position pos:line="26" pos:column="48"/></name><argument_list pos:line="26" pos:column="48">(<argument><expr><name><name pos:line="26" pos:column="49">r<pos:position pos:line="26" pos:column="50"/></name><operator pos:line="26" pos:column="50">-&gt;<pos:position pos:line="26" pos:column="55"/></operator><name pos:line="26" pos:column="52">pool<pos:position pos:line="26" pos:column="56"/></name></name></expr></argument>, <argument><expr><name pos:line="26" pos:column="58">found<pos:position pos:line="26" pos:column="63"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="26" pos:column="65">"?"<pos:position pos:line="26" pos:column="68"/></literal></expr></argument>,
                                                <argument><expr><name><name pos:line="27" pos:column="49">uri<pos:position pos:line="27" pos:column="52"/></name><operator pos:line="27" pos:column="52">.<pos:position pos:line="27" pos:column="53"/></operator><name pos:line="27" pos:column="53">query<pos:position pos:line="27" pos:column="58"/></name></name></expr></argument>, <argument><expr><name pos:line="27" pos:column="60">NULL<pos:position pos:line="27" pos:column="64"/></name></expr></argument>)<pos:position pos:line="27" pos:column="65"/></argument_list></call></expr>;<pos:position pos:line="27" pos:column="66"/></expr_stmt>
                        }<pos:position pos:line="28" pos:column="26"/></block></then></if>
                        <if pos:line="29" pos:column="25">if <condition pos:line="29" pos:column="28">(<expr><name><name pos:line="29" pos:column="29">uri<pos:position pos:line="29" pos:column="32"/></name><operator pos:line="29" pos:column="32">.<pos:position pos:line="29" pos:column="33"/></operator><name pos:line="29" pos:column="33">fragment<pos:position pos:line="29" pos:column="41"/></name></name></expr>)<pos:position pos:line="29" pos:column="42"/></condition><then pos:line="29" pos:column="42"> <block pos:line="29" pos:column="43">{
                            <expr_stmt><expr><name pos:line="30" pos:column="29">found<pos:position pos:line="30" pos:column="34"/></name> <operator pos:line="30" pos:column="35">=<pos:position pos:line="30" pos:column="36"/></operator> <call><name pos:line="30" pos:column="37">apr_pstrcat<pos:position pos:line="30" pos:column="48"/></name><argument_list pos:line="30" pos:column="48">(<argument><expr><name><name pos:line="30" pos:column="49">r<pos:position pos:line="30" pos:column="50"/></name><operator pos:line="30" pos:column="50">-&gt;<pos:position pos:line="30" pos:column="55"/></operator><name pos:line="30" pos:column="52">pool<pos:position pos:line="30" pos:column="56"/></name></name></expr></argument>, <argument><expr><name pos:line="30" pos:column="58">found<pos:position pos:line="30" pos:column="63"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="30" pos:column="65">"#"<pos:position pos:line="30" pos:column="68"/></literal></expr></argument>,
                                                <argument><expr><name><name pos:line="31" pos:column="49">uri<pos:position pos:line="31" pos:column="52"/></name><operator pos:line="31" pos:column="52">.<pos:position pos:line="31" pos:column="53"/></operator><name pos:line="31" pos:column="53">fragment<pos:position pos:line="31" pos:column="61"/></name></name></expr></argument>, <argument><expr><name pos:line="31" pos:column="63">NULL<pos:position pos:line="31" pos:column="67"/></name></expr></argument>)<pos:position pos:line="31" pos:column="68"/></argument_list></call></expr>;<pos:position pos:line="31" pos:column="69"/></expr_stmt>
                        }<pos:position pos:line="32" pos:column="26"/></block></then></if>
                    }<pos:position pos:line="33" pos:column="22"/></block></then></if>
                }<pos:position pos:line="34" pos:column="18"/></block></then>
                <else pos:line="35" pos:column="17">else <block pos:line="35" pos:column="22">{
                    <comment type="block" pos:line="36" pos:column="21">/* need something non-null */</comment>
                    <expr_stmt><expr><name pos:line="37" pos:column="21">found<pos:position pos:line="37" pos:column="26"/></name> <operator pos:line="37" pos:column="27">=<pos:position pos:line="37" pos:column="28"/></operator> <call><name pos:line="37" pos:column="29">apr_pstrdup<pos:position pos:line="37" pos:column="40"/></name><argument_list pos:line="37" pos:column="40">(<argument><expr><name><name pos:line="37" pos:column="41">r<pos:position pos:line="37" pos:column="42"/></name><operator pos:line="37" pos:column="42">-&gt;<pos:position pos:line="37" pos:column="47"/></operator><name pos:line="37" pos:column="44">pool<pos:position pos:line="37" pos:column="48"/></name></name></expr></argument>, <argument><expr><literal type="string" pos:line="37" pos:column="50">""<pos:position pos:line="37" pos:column="52"/></literal></expr></argument>)<pos:position pos:line="37" pos:column="53"/></argument_list></call></expr>;<pos:position pos:line="37" pos:column="54"/></expr_stmt>
                }<pos:position pos:line="38" pos:column="18"/></block></else></if>
            }<pos:position pos:line="39" pos:column="14"/></block></then></if>
        }<pos:position pos:line="40" pos:column="10"/></block></then>
        <else pos:line="41" pos:column="9">else <block pos:line="41" pos:column="14">{
            <expr_stmt><expr><name pos:line="42" pos:column="13">l<pos:position pos:line="42" pos:column="14"/></name> <operator pos:line="42" pos:column="15">=<pos:position pos:line="42" pos:column="16"/></operator> <call><name pos:line="42" pos:column="17">alias_matches<pos:position pos:line="42" pos:column="30"/></name><argument_list pos:line="42" pos:column="30">(<argument><expr><name><name pos:line="42" pos:column="31">r<pos:position pos:line="42" pos:column="32"/></name><operator pos:line="42" pos:column="32">-&gt;<pos:position pos:line="42" pos:column="37"/></operator><name pos:line="42" pos:column="34">uri<pos:position pos:line="42" pos:column="37"/></name></name></expr></argument>, <argument><expr><name><name pos:line="42" pos:column="39">p<pos:position pos:line="42" pos:column="40"/></name><operator pos:line="42" pos:column="40">-&gt;<pos:position pos:line="42" pos:column="45"/></operator><name pos:line="42" pos:column="42">fake<pos:position pos:line="42" pos:column="46"/></name></name></expr></argument>)<pos:position pos:line="42" pos:column="47"/></argument_list></call></expr>;<pos:position pos:line="42" pos:column="48"/></expr_stmt>

            <if pos:line="44" pos:column="13">if <condition pos:line="44" pos:column="16">(<expr><name pos:line="44" pos:column="17">l<pos:position pos:line="44" pos:column="18"/></name> <operator pos:line="44" pos:column="19">&gt;<pos:position pos:line="44" pos:column="23"/></operator> <literal type="number" pos:line="44" pos:column="21">0<pos:position pos:line="44" pos:column="22"/></literal></expr>)<pos:position pos:line="44" pos:column="23"/></condition><then pos:line="44" pos:column="23"> <block pos:line="44" pos:column="24">{
                <if pos:line="45" pos:column="17">if <condition pos:line="45" pos:column="20">(<expr><name pos:line="45" pos:column="21">doesc<pos:position pos:line="45" pos:column="26"/></name></expr>)<pos:position pos:line="45" pos:column="27"/></condition><then pos:line="45" pos:column="27"> <block pos:line="45" pos:column="28">{
                    <decl_stmt><decl><type><name pos:line="46" pos:column="21">char<pos:position pos:line="46" pos:column="25"/></name> <modifier pos:line="46" pos:column="26">*<pos:position pos:line="46" pos:column="27"/></modifier></type><name pos:line="46" pos:column="27">escurl<pos:position pos:line="46" pos:column="33"/></name></decl>;<pos:position pos:line="46" pos:column="34"/></decl_stmt>
                    <expr_stmt><expr><name pos:line="47" pos:column="21">escurl<pos:position pos:line="47" pos:column="27"/></name> <operator pos:line="47" pos:column="28">=<pos:position pos:line="47" pos:column="29"/></operator> <call><name pos:line="47" pos:column="30">ap_os_escape_path<pos:position pos:line="47" pos:column="47"/></name><argument_list pos:line="47" pos:column="47">(<argument><expr><name><name pos:line="47" pos:column="48">r<pos:position pos:line="47" pos:column="49"/></name><operator pos:line="47" pos:column="49">-&gt;<pos:position pos:line="47" pos:column="54"/></operator><name pos:line="47" pos:column="51">pool<pos:position pos:line="47" pos:column="55"/></name></name></expr></argument>, <argument><expr><name><name pos:line="47" pos:column="57">r<pos:position pos:line="47" pos:column="58"/></name><operator pos:line="47" pos:column="58">-&gt;<pos:position pos:line="47" pos:column="63"/></operator><name pos:line="47" pos:column="60">uri<pos:position pos:line="47" pos:column="63"/></name></name> <operator pos:line="47" pos:column="64">+<pos:position pos:line="47" pos:column="65"/></operator> <name pos:line="47" pos:column="66">l<pos:position pos:line="47" pos:column="67"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="47" pos:column="69">1<pos:position pos:line="47" pos:column="70"/></literal></expr></argument>)<pos:position pos:line="47" pos:column="71"/></argument_list></call></expr>;<pos:position pos:line="47" pos:column="72"/></expr_stmt>

                    <expr_stmt><expr><name pos:line="49" pos:column="21">found<pos:position pos:line="49" pos:column="26"/></name> <operator pos:line="49" pos:column="27">=<pos:position pos:line="49" pos:column="28"/></operator> <call><name pos:line="49" pos:column="29">apr_pstrcat<pos:position pos:line="49" pos:column="40"/></name><argument_list pos:line="49" pos:column="40">(<argument><expr><name><name pos:line="49" pos:column="41">r<pos:position pos:line="49" pos:column="42"/></name><operator pos:line="49" pos:column="42">-&gt;<pos:position pos:line="49" pos:column="47"/></operator><name pos:line="49" pos:column="44">pool<pos:position pos:line="49" pos:column="48"/></name></name></expr></argument>, <argument><expr><name><name pos:line="49" pos:column="50">p<pos:position pos:line="49" pos:column="51"/></name><operator pos:line="49" pos:column="51">-&gt;<pos:position pos:line="49" pos:column="56"/></operator><name pos:line="49" pos:column="53">real<pos:position pos:line="49" pos:column="57"/></name></name></expr></argument>, <argument><expr><name pos:line="49" pos:column="59">escurl<pos:position pos:line="49" pos:column="65"/></name></expr></argument>, <argument><expr><name pos:line="49" pos:column="67">NULL<pos:position pos:line="49" pos:column="71"/></name></expr></argument>)<pos:position pos:line="49" pos:column="72"/></argument_list></call></expr>;<pos:position pos:line="49" pos:column="73"/></expr_stmt>
                }<pos:position pos:line="50" pos:column="18"/></block></then>
                <else pos:line="51" pos:column="17">else
                    <block type="pseudo"><expr_stmt><expr><name pos:line="52" pos:column="21">found<pos:position pos:line="52" pos:column="26"/></name> <operator pos:line="52" pos:column="27">=<pos:position pos:line="52" pos:column="28"/></operator> <call><name pos:line="52" pos:column="29">apr_pstrcat<pos:position pos:line="52" pos:column="40"/></name><argument_list pos:line="52" pos:column="40">(<argument><expr><name><name pos:line="52" pos:column="41">r<pos:position pos:line="52" pos:column="42"/></name><operator pos:line="52" pos:column="42">-&gt;<pos:position pos:line="52" pos:column="47"/></operator><name pos:line="52" pos:column="44">pool<pos:position pos:line="52" pos:column="48"/></name></name></expr></argument>, <argument><expr><name><name pos:line="52" pos:column="50">p<pos:position pos:line="52" pos:column="51"/></name><operator pos:line="52" pos:column="51">-&gt;<pos:position pos:line="52" pos:column="56"/></operator><name pos:line="52" pos:column="53">real<pos:position pos:line="52" pos:column="57"/></name></name></expr></argument>, <argument><expr><name><name pos:line="52" pos:column="59">r<pos:position pos:line="52" pos:column="60"/></name><operator pos:line="52" pos:column="60">-&gt;<pos:position pos:line="52" pos:column="65"/></operator><name pos:line="52" pos:column="62">uri<pos:position pos:line="52" pos:column="65"/></name></name> <operator pos:line="52" pos:column="66">+<pos:position pos:line="52" pos:column="67"/></operator> <name pos:line="52" pos:column="68">l<pos:position pos:line="52" pos:column="69"/></name></expr></argument>, <argument><expr><name pos:line="52" pos:column="71">NULL<pos:position pos:line="52" pos:column="75"/></name></expr></argument>)<pos:position pos:line="52" pos:column="76"/></argument_list></call></expr>;<pos:position pos:line="52" pos:column="77"/></expr_stmt></block></else></if>
            }<pos:position pos:line="53" pos:column="14"/></block></then></if>
        }<pos:position pos:line="54" pos:column="10"/></block></else></if>

        <if pos:line="56" pos:column="9">if <condition pos:line="56" pos:column="12">(<expr><name pos:line="56" pos:column="13">found<pos:position pos:line="56" pos:column="18"/></name></expr>)<pos:position pos:line="56" pos:column="19"/></condition><then pos:line="56" pos:column="19"> <block pos:line="56" pos:column="20">{
            <if pos:line="57" pos:column="13">if <condition pos:line="57" pos:column="16">(<expr><name><name pos:line="57" pos:column="17">p<pos:position pos:line="57" pos:column="18"/></name><operator pos:line="57" pos:column="18">-&gt;<pos:position pos:line="57" pos:column="23"/></operator><name pos:line="57" pos:column="20">handler<pos:position pos:line="57" pos:column="27"/></name></name></expr>)<pos:position pos:line="57" pos:column="28"/></condition><then pos:line="57" pos:column="28"> <block pos:line="57" pos:column="29">{    <comment type="block" pos:line="57" pos:column="34">/* Set handler, and leave a note for mod_cgi */</comment>
                <expr_stmt><expr><name><name pos:line="58" pos:column="17">r<pos:position pos:line="58" pos:column="18"/></name><operator pos:line="58" pos:column="18">-&gt;<pos:position pos:line="58" pos:column="23"/></operator><name pos:line="58" pos:column="20">handler<pos:position pos:line="58" pos:column="27"/></name></name> <operator pos:line="58" pos:column="28">=<pos:position pos:line="58" pos:column="29"/></operator> <name><name pos:line="58" pos:column="30">p<pos:position pos:line="58" pos:column="31"/></name><operator pos:line="58" pos:column="31">-&gt;<pos:position pos:line="58" pos:column="36"/></operator><name pos:line="58" pos:column="33">handler<pos:position pos:line="58" pos:column="40"/></name></name></expr>;<pos:position pos:line="58" pos:column="41"/></expr_stmt>
                <expr_stmt><expr><call><name pos:line="59" pos:column="17">apr_table_setn<pos:position pos:line="59" pos:column="31"/></name><argument_list pos:line="59" pos:column="31">(<argument><expr><name><name pos:line="59" pos:column="32">r<pos:position pos:line="59" pos:column="33"/></name><operator pos:line="59" pos:column="33">-&gt;<pos:position pos:line="59" pos:column="38"/></operator><name pos:line="59" pos:column="35">notes<pos:position pos:line="59" pos:column="40"/></name></name></expr></argument>, <argument><expr><literal type="string" pos:line="59" pos:column="42">"alias-forced-type"<pos:position pos:line="59" pos:column="61"/></literal></expr></argument>, <argument><expr><name><name pos:line="59" pos:column="63">r<pos:position pos:line="59" pos:column="64"/></name><operator pos:line="59" pos:column="64">-&gt;<pos:position pos:line="59" pos:column="69"/></operator><name pos:line="59" pos:column="66">handler<pos:position pos:line="59" pos:column="73"/></name></name></expr></argument>)<pos:position pos:line="59" pos:column="74"/></argument_list></call></expr>;<pos:position pos:line="59" pos:column="75"/></expr_stmt>
            }<pos:position pos:line="60" pos:column="14"/></block></then></if>
            <comment type="block" pos:line="61" pos:column="13">/* XXX This is as SLOW as can be, next step, we optimize
             * and merge to whatever part of the found path was already
             * canonicalized.  After I finish eliminating os canonical.
             * Better fail test for ap_server_root_relative needed here.
             */</comment>
            <if pos:line="66" pos:column="13">if <condition pos:line="66" pos:column="16">(<expr><operator pos:line="66" pos:column="17">!<pos:position pos:line="66" pos:column="18"/></operator><name pos:line="66" pos:column="18">doesc<pos:position pos:line="66" pos:column="23"/></name></expr>)<pos:position pos:line="66" pos:column="24"/></condition><then pos:line="66" pos:column="24"> <block pos:line="66" pos:column="25">{
                <expr_stmt><expr><name pos:line="67" pos:column="17">found<pos:position pos:line="67" pos:column="22"/></name> <operator pos:line="67" pos:column="23">=<pos:position pos:line="67" pos:column="24"/></operator> <call><name pos:line="67" pos:column="25">ap_server_root_relative<pos:position pos:line="67" pos:column="48"/></name><argument_list pos:line="67" pos:column="48">(<argument><expr><name><name pos:line="67" pos:column="49">r<pos:position pos:line="67" pos:column="50"/></name><operator pos:line="67" pos:column="50">-&gt;<pos:position pos:line="67" pos:column="55"/></operator><name pos:line="67" pos:column="52">pool<pos:position pos:line="67" pos:column="56"/></name></name></expr></argument>, <argument><expr><name pos:line="67" pos:column="58">found<pos:position pos:line="67" pos:column="63"/></name></expr></argument>)<pos:position pos:line="67" pos:column="64"/></argument_list></call></expr>;<pos:position pos:line="67" pos:column="65"/></expr_stmt>
            }<pos:position pos:line="68" pos:column="14"/></block></then></if>
            <if pos:line="69" pos:column="13">if <condition pos:line="69" pos:column="16">(<expr><name pos:line="69" pos:column="17">found<pos:position pos:line="69" pos:column="22"/></name></expr>)<pos:position pos:line="69" pos:column="23"/></condition><then pos:line="69" pos:column="23"> <block pos:line="69" pos:column="24">{
                <expr_stmt><expr><operator pos:line="70" pos:column="17">*<pos:position pos:line="70" pos:column="18"/></operator><name pos:line="70" pos:column="18">status<pos:position pos:line="70" pos:column="24"/></name> <operator pos:line="70" pos:column="25">=<pos:position pos:line="70" pos:column="26"/></operator> <name><name pos:line="70" pos:column="27">p<pos:position pos:line="70" pos:column="28"/></name><operator pos:line="70" pos:column="28">-&gt;<pos:position pos:line="70" pos:column="33"/></operator><name pos:line="70" pos:column="30">redir_status<pos:position pos:line="70" pos:column="42"/></name></name></expr>;<pos:position pos:line="70" pos:column="43"/></expr_stmt>
            }<pos:position pos:line="71" pos:column="14"/></block></then></if>
            <return pos:line="72" pos:column="13">return <expr><name pos:line="72" pos:column="20">found<pos:position pos:line="72" pos:column="25"/></name></expr>;<pos:position pos:line="72" pos:column="26"/></return>
        }<pos:position pos:line="73" pos:column="10"/></block></then></if>

    }<pos:position pos:line="75" pos:column="6"/></block></for>

    <return pos:line="77" pos:column="5">return <expr><name pos:line="77" pos:column="12">NULL<pos:position pos:line="77" pos:column="16"/></name></expr>;<pos:position pos:line="77" pos:column="17"/></return>
}<pos:position pos:line="78" pos:column="2"/></block></function></unit>

<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/httpd/gumtree/httpd_repos_function_1109_httpd-2.0.44.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name><name pos:line="1" pos:column="8">struct<pos:position pos:line="1" pos:column="14"/></name> <name pos:line="1" pos:column="15">ent<pos:position pos:line="1" pos:column="18"/></name></name> <modifier pos:line="1" pos:column="19">*<pos:position pos:line="1" pos:column="20"/></modifier></type><name pos:line="1" pos:column="20">make_parent_entry<pos:position pos:line="1" pos:column="37"/></name><parameter_list pos:line="1" pos:column="37">(<parameter><decl><type><name pos:line="1" pos:column="38">apr_int32_t<pos:position pos:line="1" pos:column="49"/></name></type> <name pos:line="1" pos:column="50">autoindex_opts<pos:position pos:line="1" pos:column="64"/></name></decl></parameter>,
                                     <parameter><decl><type><name pos:line="2" pos:column="38">autoindex_config_rec<pos:position pos:line="2" pos:column="58"/></name> <modifier pos:line="2" pos:column="59">*<pos:position pos:line="2" pos:column="60"/></modifier></type><name pos:line="2" pos:column="60">d<pos:position pos:line="2" pos:column="61"/></name></decl></parameter>,
                                     <parameter><decl><type><name pos:line="3" pos:column="38">request_rec<pos:position pos:line="3" pos:column="49"/></name> <modifier pos:line="3" pos:column="50">*<pos:position pos:line="3" pos:column="51"/></modifier></type><name pos:line="3" pos:column="51">r<pos:position pos:line="3" pos:column="52"/></name></decl></parameter>, <parameter><decl><type><name pos:line="3" pos:column="54">char<pos:position pos:line="3" pos:column="58"/></name></type> <name pos:line="3" pos:column="59">keyid<pos:position pos:line="3" pos:column="64"/></name></decl></parameter>, 
                                     <parameter><decl><type><name pos:line="4" pos:column="38">char<pos:position pos:line="4" pos:column="42"/></name></type> <name pos:line="4" pos:column="43">direction<pos:position pos:line="4" pos:column="52"/></name></decl></parameter>)<pos:position pos:line="4" pos:column="53"/></parameter_list>
<block pos:line="5" pos:column="1">{
    <decl_stmt><decl><type><name><name pos:line="6" pos:column="5">struct<pos:position pos:line="6" pos:column="11"/></name> <name pos:line="6" pos:column="12">ent<pos:position pos:line="6" pos:column="15"/></name></name> <modifier pos:line="6" pos:column="16">*<pos:position pos:line="6" pos:column="17"/></modifier></type><name pos:line="6" pos:column="17">p<pos:position pos:line="6" pos:column="18"/></name> <init pos:line="6" pos:column="19">= <expr><operator pos:line="6" pos:column="21">(<pos:position pos:line="6" pos:column="22"/></operator>struct <name pos:line="6" pos:column="29">ent<pos:position pos:line="6" pos:column="32"/></name> <operator pos:line="6" pos:column="33">*<pos:position pos:line="6" pos:column="34"/></operator><operator pos:line="6" pos:column="34">)<pos:position pos:line="6" pos:column="35"/></operator> <call><name pos:line="6" pos:column="36">apr_pcalloc<pos:position pos:line="6" pos:column="47"/></name><argument_list pos:line="6" pos:column="47">(<argument><expr><name><name pos:line="6" pos:column="48">r<pos:position pos:line="6" pos:column="49"/></name><operator pos:line="6" pos:column="49">-&gt;<pos:position pos:line="6" pos:column="54"/></operator><name pos:line="6" pos:column="51">pool<pos:position pos:line="6" pos:column="55"/></name></name></expr></argument>, <argument><expr><sizeof pos:line="6" pos:column="57">sizeof<argument_list pos:line="6" pos:column="63">(<argument><expr pos:line="6" pos:column="64">struct <name pos:line="6" pos:column="71">ent<pos:position pos:line="6" pos:column="74"/></name></expr></argument>)<pos:position pos:line="6" pos:column="75"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="6" pos:column="76"/></argument_list></call></expr></init></decl>;<pos:position pos:line="6" pos:column="77"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="7" pos:column="5">char<pos:position pos:line="7" pos:column="9"/></name> <modifier pos:line="7" pos:column="10">*<pos:position pos:line="7" pos:column="11"/></modifier></type><name pos:line="7" pos:column="11">testpath<pos:position pos:line="7" pos:column="19"/></name></decl>;<pos:position pos:line="7" pos:column="20"/></decl_stmt>
    <comment type="block" pos:line="8" pos:column="5">/*
     * p-&gt;name is now the true parent URI.
     * testpath is a crafted lie, so that the syntax '/some/..'
     * (or simply '..')be used to describe 'up' from '/some/'
     * when processeing IndexIgnore, and Icon|Alt|Desc configs.
     */</comment>

    <comment type="block" pos:line="15" pos:column="5">/* The output has always been to the parent.  Don't make ourself
     * our own parent (worthless cyclical reference).
     */</comment>
    <if pos:line="18" pos:column="5">if <condition pos:line="18" pos:column="8">(<expr><operator pos:line="18" pos:column="9">!<pos:position pos:line="18" pos:column="10"/></operator><operator pos:line="18" pos:column="10">(<pos:position pos:line="18" pos:column="11"/></operator><name><name pos:line="18" pos:column="11">p<pos:position pos:line="18" pos:column="12"/></name><operator pos:line="18" pos:column="12">-&gt;<pos:position pos:line="18" pos:column="17"/></operator><name pos:line="18" pos:column="14">name<pos:position pos:line="18" pos:column="18"/></name></name> <operator pos:line="18" pos:column="19">=<pos:position pos:line="18" pos:column="20"/></operator> <call><name pos:line="18" pos:column="21">ap_make_full_path<pos:position pos:line="18" pos:column="38"/></name><argument_list pos:line="18" pos:column="38">(<argument><expr><name><name pos:line="18" pos:column="39">r<pos:position pos:line="18" pos:column="40"/></name><operator pos:line="18" pos:column="40">-&gt;<pos:position pos:line="18" pos:column="45"/></operator><name pos:line="18" pos:column="42">pool<pos:position pos:line="18" pos:column="46"/></name></name></expr></argument>, <argument><expr><name><name pos:line="18" pos:column="48">r<pos:position pos:line="18" pos:column="49"/></name><operator pos:line="18" pos:column="49">-&gt;<pos:position pos:line="18" pos:column="54"/></operator><name pos:line="18" pos:column="51">uri<pos:position pos:line="18" pos:column="54"/></name></name></expr></argument>, <argument><expr><literal type="string" pos:line="18" pos:column="56">"../"<pos:position pos:line="18" pos:column="61"/></literal></expr></argument>)<pos:position pos:line="18" pos:column="62"/></argument_list></call><operator pos:line="18" pos:column="62">)<pos:position pos:line="18" pos:column="63"/></operator></expr>)<pos:position pos:line="18" pos:column="64"/></condition><then pos:line="18" pos:column="64"> <block pos:line="18" pos:column="65">{
        <return pos:line="19" pos:column="9">return <expr><operator pos:line="19" pos:column="16">(<pos:position pos:line="19" pos:column="17"/></operator><name pos:line="19" pos:column="17">NULL<pos:position pos:line="19" pos:column="21"/></name><operator pos:line="19" pos:column="21">)<pos:position pos:line="19" pos:column="22"/></operator></expr>;<pos:position pos:line="19" pos:column="23"/></return>
    }<pos:position pos:line="20" pos:column="6"/></block></then></if>
    <expr_stmt><expr><call><name pos:line="21" pos:column="5">ap_getparents<pos:position pos:line="21" pos:column="18"/></name><argument_list pos:line="21" pos:column="18">(<argument><expr><name><name pos:line="21" pos:column="19">p<pos:position pos:line="21" pos:column="20"/></name><operator pos:line="21" pos:column="20">-&gt;<pos:position pos:line="21" pos:column="25"/></operator><name pos:line="21" pos:column="22">name<pos:position pos:line="21" pos:column="26"/></name></name></expr></argument>)<pos:position pos:line="21" pos:column="27"/></argument_list></call></expr>;<pos:position pos:line="21" pos:column="28"/></expr_stmt>
    <if pos:line="22" pos:column="5">if <condition pos:line="22" pos:column="8">(<expr><operator pos:line="22" pos:column="9">!<pos:position pos:line="22" pos:column="10"/></operator><operator pos:line="22" pos:column="10">*<pos:position pos:line="22" pos:column="11"/></operator><name><name pos:line="22" pos:column="11">p<pos:position pos:line="22" pos:column="12"/></name><operator pos:line="22" pos:column="12">-&gt;<pos:position pos:line="22" pos:column="17"/></operator><name pos:line="22" pos:column="14">name<pos:position pos:line="22" pos:column="18"/></name></name></expr>)<pos:position pos:line="22" pos:column="19"/></condition><then pos:line="22" pos:column="19"> <block pos:line="22" pos:column="20">{
        <return pos:line="23" pos:column="9">return <expr><operator pos:line="23" pos:column="16">(<pos:position pos:line="23" pos:column="17"/></operator><name pos:line="23" pos:column="17">NULL<pos:position pos:line="23" pos:column="21"/></name><operator pos:line="23" pos:column="21">)<pos:position pos:line="23" pos:column="22"/></operator></expr>;<pos:position pos:line="23" pos:column="23"/></return>
    }<pos:position pos:line="24" pos:column="6"/></block></then></if>

    <comment type="block" pos:line="26" pos:column="5">/* IndexIgnore has always compared "/thispath/.." */</comment>
    <expr_stmt><expr><name pos:line="27" pos:column="5">testpath<pos:position pos:line="27" pos:column="13"/></name> <operator pos:line="27" pos:column="14">=<pos:position pos:line="27" pos:column="15"/></operator> <call><name pos:line="27" pos:column="16">ap_make_full_path<pos:position pos:line="27" pos:column="33"/></name><argument_list pos:line="27" pos:column="33">(<argument><expr><name><name pos:line="27" pos:column="34">r<pos:position pos:line="27" pos:column="35"/></name><operator pos:line="27" pos:column="35">-&gt;<pos:position pos:line="27" pos:column="40"/></operator><name pos:line="27" pos:column="37">pool<pos:position pos:line="27" pos:column="41"/></name></name></expr></argument>, <argument><expr><name><name pos:line="27" pos:column="43">r<pos:position pos:line="27" pos:column="44"/></name><operator pos:line="27" pos:column="44">-&gt;<pos:position pos:line="27" pos:column="49"/></operator><name pos:line="27" pos:column="46">filename<pos:position pos:line="27" pos:column="54"/></name></name></expr></argument>, <argument><expr><literal type="string" pos:line="27" pos:column="56">".."<pos:position pos:line="27" pos:column="60"/></literal></expr></argument>)<pos:position pos:line="27" pos:column="61"/></argument_list></call></expr>;<pos:position pos:line="27" pos:column="62"/></expr_stmt>
    <if pos:line="28" pos:column="5">if <condition pos:line="28" pos:column="8">(<expr><call><name pos:line="28" pos:column="9">ignore_entry<pos:position pos:line="28" pos:column="21"/></name><argument_list pos:line="28" pos:column="21">(<argument><expr><name pos:line="28" pos:column="22">d<pos:position pos:line="28" pos:column="23"/></name></expr></argument>, <argument><expr><name pos:line="28" pos:column="25">testpath<pos:position pos:line="28" pos:column="33"/></name></expr></argument>)<pos:position pos:line="28" pos:column="34"/></argument_list></call></expr>)<pos:position pos:line="28" pos:column="35"/></condition><then pos:line="28" pos:column="35"> <block pos:line="28" pos:column="36">{
        <return pos:line="29" pos:column="9">return <expr><operator pos:line="29" pos:column="16">(<pos:position pos:line="29" pos:column="17"/></operator><name pos:line="29" pos:column="17">NULL<pos:position pos:line="29" pos:column="21"/></name><operator pos:line="29" pos:column="21">)<pos:position pos:line="29" pos:column="22"/></operator></expr>;<pos:position pos:line="29" pos:column="23"/></return>
    }<pos:position pos:line="30" pos:column="6"/></block></then></if>

    <expr_stmt><expr><name><name pos:line="32" pos:column="5">p<pos:position pos:line="32" pos:column="6"/></name><operator pos:line="32" pos:column="6">-&gt;<pos:position pos:line="32" pos:column="11"/></operator><name pos:line="32" pos:column="8">size<pos:position pos:line="32" pos:column="12"/></name></name> <operator pos:line="32" pos:column="13">=<pos:position pos:line="32" pos:column="14"/></operator> <operator pos:line="32" pos:column="15">-<pos:position pos:line="32" pos:column="16"/></operator><literal type="number" pos:line="32" pos:column="16">1<pos:position pos:line="32" pos:column="17"/></literal></expr>;<pos:position pos:line="32" pos:column="18"/></expr_stmt>
    <expr_stmt><expr><name><name pos:line="33" pos:column="5">p<pos:position pos:line="33" pos:column="6"/></name><operator pos:line="33" pos:column="6">-&gt;<pos:position pos:line="33" pos:column="11"/></operator><name pos:line="33" pos:column="8">lm<pos:position pos:line="33" pos:column="10"/></name></name> <operator pos:line="33" pos:column="11">=<pos:position pos:line="33" pos:column="12"/></operator> <operator pos:line="33" pos:column="13">-<pos:position pos:line="33" pos:column="14"/></operator><literal type="number" pos:line="33" pos:column="14">1<pos:position pos:line="33" pos:column="15"/></literal></expr>;<pos:position pos:line="33" pos:column="16"/></expr_stmt>
    <expr_stmt><expr><name><name pos:line="34" pos:column="5">p<pos:position pos:line="34" pos:column="6"/></name><operator pos:line="34" pos:column="6">-&gt;<pos:position pos:line="34" pos:column="11"/></operator><name pos:line="34" pos:column="8">key<pos:position pos:line="34" pos:column="11"/></name></name> <operator pos:line="34" pos:column="12">=<pos:position pos:line="34" pos:column="13"/></operator> <call><name pos:line="34" pos:column="14">apr_toupper<pos:position pos:line="34" pos:column="25"/></name><argument_list pos:line="34" pos:column="25">(<argument><expr><name pos:line="34" pos:column="26">keyid<pos:position pos:line="34" pos:column="31"/></name></expr></argument>)<pos:position pos:line="34" pos:column="32"/></argument_list></call></expr>;<pos:position pos:line="34" pos:column="33"/></expr_stmt>
    <expr_stmt><expr><name><name pos:line="35" pos:column="5">p<pos:position pos:line="35" pos:column="6"/></name><operator pos:line="35" pos:column="6">-&gt;<pos:position pos:line="35" pos:column="11"/></operator><name pos:line="35" pos:column="8">ascending<pos:position pos:line="35" pos:column="17"/></name></name> <operator pos:line="35" pos:column="18">=<pos:position pos:line="35" pos:column="19"/></operator> <operator pos:line="35" pos:column="20">(<pos:position pos:line="35" pos:column="21"/></operator><call><name pos:line="35" pos:column="21">apr_toupper<pos:position pos:line="35" pos:column="32"/></name><argument_list pos:line="35" pos:column="32">(<argument><expr><name pos:line="35" pos:column="33">direction<pos:position pos:line="35" pos:column="42"/></name></expr></argument>)<pos:position pos:line="35" pos:column="43"/></argument_list></call> <operator pos:line="35" pos:column="44">==<pos:position pos:line="35" pos:column="46"/></operator> <name pos:line="35" pos:column="47">D_ASCENDING<pos:position pos:line="35" pos:column="58"/></name><operator pos:line="35" pos:column="58">)<pos:position pos:line="35" pos:column="59"/></operator></expr>;<pos:position pos:line="35" pos:column="60"/></expr_stmt>
    <expr_stmt><expr><name><name pos:line="36" pos:column="5">p<pos:position pos:line="36" pos:column="6"/></name><operator pos:line="36" pos:column="6">-&gt;<pos:position pos:line="36" pos:column="11"/></operator><name pos:line="36" pos:column="8">version_sort<pos:position pos:line="36" pos:column="20"/></name></name> <operator pos:line="36" pos:column="21">=<pos:position pos:line="36" pos:column="22"/></operator> <name pos:line="36" pos:column="23">autoindex_opts<pos:position pos:line="36" pos:column="37"/></name> <operator pos:line="36" pos:column="38">&amp;<pos:position pos:line="36" pos:column="43"/></operator> <name pos:line="36" pos:column="40">VERSION_SORT<pos:position pos:line="36" pos:column="52"/></name></expr>;<pos:position pos:line="36" pos:column="53"/></expr_stmt>
    <if pos:line="37" pos:column="5">if <condition pos:line="37" pos:column="8">(<expr><name pos:line="37" pos:column="9">autoindex_opts<pos:position pos:line="37" pos:column="23"/></name> <operator pos:line="37" pos:column="24">&amp;<pos:position pos:line="37" pos:column="29"/></operator> <name pos:line="37" pos:column="26">FANCY_INDEXING<pos:position pos:line="37" pos:column="40"/></name></expr>)<pos:position pos:line="37" pos:column="41"/></condition><then pos:line="37" pos:column="41"> <block pos:line="37" pos:column="42">{
        <if pos:line="38" pos:column="9">if <condition pos:line="38" pos:column="12">(<expr><operator pos:line="38" pos:column="13">!<pos:position pos:line="38" pos:column="14"/></operator><operator pos:line="38" pos:column="14">(<pos:position pos:line="38" pos:column="15"/></operator><name><name pos:line="38" pos:column="15">p<pos:position pos:line="38" pos:column="16"/></name><operator pos:line="38" pos:column="16">-&gt;<pos:position pos:line="38" pos:column="21"/></operator><name pos:line="38" pos:column="18">icon<pos:position pos:line="38" pos:column="22"/></name></name> <operator pos:line="38" pos:column="23">=<pos:position pos:line="38" pos:column="24"/></operator> <call><name pos:line="38" pos:column="25">find_default_icon<pos:position pos:line="38" pos:column="42"/></name><argument_list pos:line="38" pos:column="42">(<argument><expr><name pos:line="38" pos:column="43">d<pos:position pos:line="38" pos:column="44"/></name></expr></argument>, <argument><expr><name pos:line="38" pos:column="46">testpath<pos:position pos:line="38" pos:column="54"/></name></expr></argument>)<pos:position pos:line="38" pos:column="55"/></argument_list></call><operator pos:line="38" pos:column="55">)<pos:position pos:line="38" pos:column="56"/></operator></expr>)<pos:position pos:line="38" pos:column="57"/></condition><then pos:line="38" pos:column="57"> <block pos:line="38" pos:column="58">{
            <expr_stmt><expr><name><name pos:line="39" pos:column="13">p<pos:position pos:line="39" pos:column="14"/></name><operator pos:line="39" pos:column="14">-&gt;<pos:position pos:line="39" pos:column="19"/></operator><name pos:line="39" pos:column="16">icon<pos:position pos:line="39" pos:column="20"/></name></name> <operator pos:line="39" pos:column="21">=<pos:position pos:line="39" pos:column="22"/></operator> <call><name pos:line="39" pos:column="23">find_default_icon<pos:position pos:line="39" pos:column="40"/></name><argument_list pos:line="39" pos:column="40">(<argument><expr><name pos:line="39" pos:column="41">d<pos:position pos:line="39" pos:column="42"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="39" pos:column="44">"^^DIRECTORY^^"<pos:position pos:line="39" pos:column="59"/></literal></expr></argument>)<pos:position pos:line="39" pos:column="60"/></argument_list></call></expr>;<pos:position pos:line="39" pos:column="61"/></expr_stmt>
        }<pos:position pos:line="40" pos:column="10"/></block></then></if>
        <if pos:line="41" pos:column="9">if <condition pos:line="41" pos:column="12">(<expr><operator pos:line="41" pos:column="13">!<pos:position pos:line="41" pos:column="14"/></operator><operator pos:line="41" pos:column="14">(<pos:position pos:line="41" pos:column="15"/></operator><name><name pos:line="41" pos:column="15">p<pos:position pos:line="41" pos:column="16"/></name><operator pos:line="41" pos:column="16">-&gt;<pos:position pos:line="41" pos:column="21"/></operator><name pos:line="41" pos:column="18">alt<pos:position pos:line="41" pos:column="21"/></name></name> <operator pos:line="41" pos:column="22">=<pos:position pos:line="41" pos:column="23"/></operator> <call><name pos:line="41" pos:column="24">find_default_alt<pos:position pos:line="41" pos:column="40"/></name><argument_list pos:line="41" pos:column="40">(<argument><expr><name pos:line="41" pos:column="41">d<pos:position pos:line="41" pos:column="42"/></name></expr></argument>, <argument><expr><name pos:line="41" pos:column="44">testpath<pos:position pos:line="41" pos:column="52"/></name></expr></argument>)<pos:position pos:line="41" pos:column="53"/></argument_list></call><operator pos:line="41" pos:column="53">)<pos:position pos:line="41" pos:column="54"/></operator></expr>)<pos:position pos:line="41" pos:column="55"/></condition><then pos:line="41" pos:column="55"> <block pos:line="41" pos:column="56">{
            <if pos:line="42" pos:column="13">if <condition pos:line="42" pos:column="16">(<expr><operator pos:line="42" pos:column="17">!<pos:position pos:line="42" pos:column="18"/></operator><operator pos:line="42" pos:column="18">(<pos:position pos:line="42" pos:column="19"/></operator><name><name pos:line="42" pos:column="19">p<pos:position pos:line="42" pos:column="20"/></name><operator pos:line="42" pos:column="20">-&gt;<pos:position pos:line="42" pos:column="25"/></operator><name pos:line="42" pos:column="22">alt<pos:position pos:line="42" pos:column="25"/></name></name> <operator pos:line="42" pos:column="26">=<pos:position pos:line="42" pos:column="27"/></operator> <call><name pos:line="42" pos:column="28">find_default_alt<pos:position pos:line="42" pos:column="44"/></name><argument_list pos:line="42" pos:column="44">(<argument><expr><name pos:line="42" pos:column="45">d<pos:position pos:line="42" pos:column="46"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="42" pos:column="48">"^^DIRECTORY^^"<pos:position pos:line="42" pos:column="63"/></literal></expr></argument>)<pos:position pos:line="42" pos:column="64"/></argument_list></call><operator pos:line="42" pos:column="64">)<pos:position pos:line="42" pos:column="65"/></operator></expr>)<pos:position pos:line="42" pos:column="66"/></condition><then pos:line="42" pos:column="66"> <block pos:line="42" pos:column="67">{
                <expr_stmt><expr><name><name pos:line="43" pos:column="17">p<pos:position pos:line="43" pos:column="18"/></name><operator pos:line="43" pos:column="18">-&gt;<pos:position pos:line="43" pos:column="23"/></operator><name pos:line="43" pos:column="20">alt<pos:position pos:line="43" pos:column="23"/></name></name> <operator pos:line="43" pos:column="24">=<pos:position pos:line="43" pos:column="25"/></operator> <literal type="string" pos:line="43" pos:column="26">"DIR"<pos:position pos:line="43" pos:column="31"/></literal></expr>;<pos:position pos:line="43" pos:column="32"/></expr_stmt>
            }<pos:position pos:line="44" pos:column="14"/></block></then></if>
        }<pos:position pos:line="45" pos:column="10"/></block></then></if>
        <expr_stmt><expr><name><name pos:line="46" pos:column="9">p<pos:position pos:line="46" pos:column="10"/></name><operator pos:line="46" pos:column="10">-&gt;<pos:position pos:line="46" pos:column="15"/></operator><name pos:line="46" pos:column="12">desc<pos:position pos:line="46" pos:column="16"/></name></name> <operator pos:line="46" pos:column="17">=<pos:position pos:line="46" pos:column="18"/></operator> <call><name pos:line="46" pos:column="19">find_desc<pos:position pos:line="46" pos:column="28"/></name><argument_list pos:line="46" pos:column="28">(<argument><expr><name pos:line="46" pos:column="29">d<pos:position pos:line="46" pos:column="30"/></name></expr></argument>, <argument><expr><name pos:line="46" pos:column="32">testpath<pos:position pos:line="46" pos:column="40"/></name></expr></argument>)<pos:position pos:line="46" pos:column="41"/></argument_list></call></expr>;<pos:position pos:line="46" pos:column="42"/></expr_stmt>
    }<pos:position pos:line="47" pos:column="6"/></block></then></if>
    <return pos:line="48" pos:column="5">return <expr><name pos:line="48" pos:column="12">p<pos:position pos:line="48" pos:column="13"/></name></expr>;<pos:position pos:line="48" pos:column="14"/></return>
}<pos:position pos:line="49" pos:column="2"/></block></function></unit>

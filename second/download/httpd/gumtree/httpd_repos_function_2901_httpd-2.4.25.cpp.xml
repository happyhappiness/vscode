<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/httpd/gumtree/httpd_repos_function_2901_httpd-2.4.25.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">void<pos:position pos:line="1" pos:column="12"/></name></type> <name pos:line="1" pos:column="13">dump_content<pos:position pos:line="1" pos:column="25"/></name><parameter_list pos:line="1" pos:column="25">(<parameter><decl><type><name pos:line="1" pos:column="26">saxctxt<pos:position pos:line="1" pos:column="33"/></name> <modifier pos:line="1" pos:column="34">*<pos:position pos:line="1" pos:column="35"/></modifier></type><name pos:line="1" pos:column="35">ctx<pos:position pos:line="1" pos:column="38"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="39"/></parameter_list>
<block pos:line="2" pos:column="1">{
    <decl_stmt><decl><type><name pos:line="3" pos:column="5">urlmap<pos:position pos:line="3" pos:column="11"/></name> <modifier pos:line="3" pos:column="12">*<pos:position pos:line="3" pos:column="13"/></modifier></type><name pos:line="3" pos:column="13">m<pos:position pos:line="3" pos:column="14"/></name></decl>;<pos:position pos:line="3" pos:column="15"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="4" pos:column="5">char<pos:position pos:line="4" pos:column="9"/></name> <modifier pos:line="4" pos:column="10">*<pos:position pos:line="4" pos:column="11"/></modifier></type><name pos:line="4" pos:column="11">found<pos:position pos:line="4" pos:column="16"/></name></decl>;<pos:position pos:line="4" pos:column="17"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="5" pos:column="5">size_t<pos:position pos:line="5" pos:column="11"/></name></type> <name pos:line="5" pos:column="12">s_from<pos:position pos:line="5" pos:column="18"/></name></decl>, <decl><type ref="prev"/><name pos:line="5" pos:column="20">s_to<pos:position pos:line="5" pos:column="24"/></name></decl>;<pos:position pos:line="5" pos:column="25"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="6" pos:column="5">size_t<pos:position pos:line="6" pos:column="11"/></name></type> <name pos:line="6" pos:column="12">match<pos:position pos:line="6" pos:column="17"/></name></decl>;<pos:position pos:line="6" pos:column="18"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="7" pos:column="5">char<pos:position pos:line="7" pos:column="9"/></name></type> <name pos:line="7" pos:column="10">c<pos:position pos:line="7" pos:column="11"/></name> <init pos:line="7" pos:column="12">= <expr><literal type="number" pos:line="7" pos:column="14">0<pos:position pos:line="7" pos:column="15"/></literal></expr></init></decl>;<pos:position pos:line="7" pos:column="16"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="8" pos:column="5">int<pos:position pos:line="8" pos:column="8"/></name></type> <name pos:line="8" pos:column="9">nmatch<pos:position pos:line="8" pos:column="15"/></name></decl>;<pos:position pos:line="8" pos:column="16"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="9" pos:column="5">ap_regmatch_t<pos:position pos:line="9" pos:column="18"/></name></type> <name><name pos:line="9" pos:column="19">pmatch<pos:position pos:line="9" pos:column="25"/></name><index pos:line="9" pos:column="25">[<expr><literal type="number" pos:line="9" pos:column="26">10<pos:position pos:line="9" pos:column="28"/></literal></expr>]<pos:position pos:line="9" pos:column="29"/></index></name></decl>;<pos:position pos:line="9" pos:column="30"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="10" pos:column="5">char<pos:position pos:line="10" pos:column="9"/></name> <modifier pos:line="10" pos:column="10">*<pos:position pos:line="10" pos:column="11"/></modifier></type><name pos:line="10" pos:column="11">subs<pos:position pos:line="10" pos:column="15"/></name></decl>;<pos:position pos:line="10" pos:column="16"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="11" pos:column="5">size_t<pos:position pos:line="11" pos:column="11"/></name></type> <name pos:line="11" pos:column="12">len<pos:position pos:line="11" pos:column="15"/></name></decl>, <decl><type ref="prev"/><name pos:line="11" pos:column="17">offs<pos:position pos:line="11" pos:column="21"/></name></decl>;<pos:position pos:line="11" pos:column="22"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="12" pos:column="5">urlmap<pos:position pos:line="12" pos:column="11"/></name> <modifier pos:line="12" pos:column="12">*<pos:position pos:line="12" pos:column="13"/></modifier></type><name pos:line="12" pos:column="13">themap<pos:position pos:line="12" pos:column="19"/></name> <init pos:line="12" pos:column="20">= <expr><name><name pos:line="12" pos:column="22">ctx<pos:position pos:line="12" pos:column="25"/></name><operator pos:line="12" pos:column="25">-&gt;<pos:position pos:line="12" pos:column="30"/></operator><name pos:line="12" pos:column="27">map<pos:position pos:line="12" pos:column="30"/></name></name></expr></init></decl>;<pos:position pos:line="12" pos:column="31"/></decl_stmt>
<cpp:ifndef pos:line="13" pos:column="1">#<cpp:directive pos:line="13" pos:column="2">ifndef<pos:position pos:line="13" pos:column="8"/></cpp:directive> <name pos:line="13" pos:column="9">GO_FASTER<pos:position pos:line="13" pos:column="18"/></name></cpp:ifndef>
    <decl_stmt><decl><type><name pos:line="14" pos:column="5">int<pos:position pos:line="14" pos:column="8"/></name></type> <name pos:line="14" pos:column="9">verbose<pos:position pos:line="14" pos:column="16"/></name> <init pos:line="14" pos:column="17">= <expr><call><name pos:line="14" pos:column="19">APLOGrtrace1<pos:position pos:line="14" pos:column="31"/></name><argument_list pos:line="14" pos:column="31">(<argument><expr><name><name pos:line="14" pos:column="32">ctx<pos:position pos:line="14" pos:column="35"/></name><operator pos:line="14" pos:column="35">-&gt;<pos:position pos:line="14" pos:column="40"/></operator><name pos:line="14" pos:column="37">f<pos:position pos:line="14" pos:column="38"/></name><operator pos:line="14" pos:column="38">-&gt;<pos:position pos:line="14" pos:column="43"/></operator><name pos:line="14" pos:column="40">r<pos:position pos:line="14" pos:column="41"/></name></name></expr></argument>)<pos:position pos:line="14" pos:column="42"/></argument_list></call></expr></init></decl>;<pos:position pos:line="14" pos:column="43"/></decl_stmt>
<cpp:endif pos:line="15" pos:column="1">#<cpp:directive pos:line="15" pos:column="2">endif<pos:position pos:line="15" pos:column="7"/></cpp:directive></cpp:endif>

    <expr_stmt><expr><call><name pos:line="17" pos:column="5">pappend<pos:position pos:line="17" pos:column="12"/></name><argument_list pos:line="17" pos:column="12">(<argument><expr><name pos:line="17" pos:column="13">ctx<pos:position pos:line="17" pos:column="16"/></name></expr></argument>, <argument><expr><operator pos:line="17" pos:column="18">&amp;<pos:position pos:line="17" pos:column="23"/></operator><name pos:line="17" pos:column="19">c<pos:position pos:line="17" pos:column="20"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="17" pos:column="22">1<pos:position pos:line="17" pos:column="23"/></literal></expr></argument>)<pos:position pos:line="17" pos:column="24"/></argument_list></call></expr>;<pos:position pos:line="17" pos:column="25"/></expr_stmt>        <comment type="block" pos:line="17" pos:column="33">/* append null byte */</comment>
        <comment type="block" pos:line="18" pos:column="9">/* parse the text for URLs */</comment>
    <for pos:line="19" pos:column="5">for <control pos:line="19" pos:column="9">(<init><expr><name pos:line="19" pos:column="10">m<pos:position pos:line="19" pos:column="11"/></name> <operator pos:line="19" pos:column="12">=<pos:position pos:line="19" pos:column="13"/></operator> <name pos:line="19" pos:column="14">themap<pos:position pos:line="19" pos:column="20"/></name></expr>;<pos:position pos:line="19" pos:column="21"/></init> <condition><expr><name pos:line="19" pos:column="22">m<pos:position pos:line="19" pos:column="23"/></name></expr>;<pos:position pos:line="19" pos:column="24"/></condition> <incr><expr><name pos:line="19" pos:column="25">m<pos:position pos:line="19" pos:column="26"/></name> <operator pos:line="19" pos:column="27">=<pos:position pos:line="19" pos:column="28"/></operator> <name><name pos:line="19" pos:column="29">m<pos:position pos:line="19" pos:column="30"/></name><operator pos:line="19" pos:column="30">-&gt;<pos:position pos:line="19" pos:column="35"/></operator><name pos:line="19" pos:column="32">next<pos:position pos:line="19" pos:column="36"/></name></name></expr></incr>)<pos:position pos:line="19" pos:column="37"/></control> <block pos:line="19" pos:column="38">{
        <if pos:line="20" pos:column="9">if <condition pos:line="20" pos:column="12">(<expr><operator pos:line="20" pos:column="13">!<pos:position pos:line="20" pos:column="14"/></operator><operator pos:line="20" pos:column="14">(<pos:position pos:line="20" pos:column="15"/></operator><name><name pos:line="20" pos:column="15">m<pos:position pos:line="20" pos:column="16"/></name><operator pos:line="20" pos:column="16">-&gt;<pos:position pos:line="20" pos:column="21"/></operator><name pos:line="20" pos:column="18">flags<pos:position pos:line="20" pos:column="23"/></name></name> <operator pos:line="20" pos:column="24">&amp;<pos:position pos:line="20" pos:column="29"/></operator> <name pos:line="20" pos:column="26">M_CDATA<pos:position pos:line="20" pos:column="33"/></name><operator pos:line="20" pos:column="33">)<pos:position pos:line="20" pos:column="34"/></operator></expr>)<pos:position pos:line="20" pos:column="35"/></condition><then pos:line="20" pos:column="35">
            <block type="pseudo"><continue pos:line="21" pos:column="13">continue;<pos:position pos:line="21" pos:column="22"/></continue></block></then></if>
        <if pos:line="22" pos:column="9">if <condition pos:line="22" pos:column="12">(<expr><name><name pos:line="22" pos:column="13">m<pos:position pos:line="22" pos:column="14"/></name><operator pos:line="22" pos:column="14">-&gt;<pos:position pos:line="22" pos:column="19"/></operator><name pos:line="22" pos:column="16">flags<pos:position pos:line="22" pos:column="21"/></name></name> <operator pos:line="22" pos:column="22">&amp;<pos:position pos:line="22" pos:column="27"/></operator> <name pos:line="22" pos:column="24">M_REGEX<pos:position pos:line="22" pos:column="31"/></name></expr>)<pos:position pos:line="22" pos:column="32"/></condition><then pos:line="22" pos:column="32"> <block pos:line="22" pos:column="33">{
            <expr_stmt><expr><name pos:line="23" pos:column="13">nmatch<pos:position pos:line="23" pos:column="19"/></name> <operator pos:line="23" pos:column="20">=<pos:position pos:line="23" pos:column="21"/></operator> <literal type="number" pos:line="23" pos:column="22">10<pos:position pos:line="23" pos:column="24"/></literal></expr>;<pos:position pos:line="23" pos:column="25"/></expr_stmt>
            <expr_stmt><expr><name pos:line="24" pos:column="13">offs<pos:position pos:line="24" pos:column="17"/></name> <operator pos:line="24" pos:column="18">=<pos:position pos:line="24" pos:column="19"/></operator> <literal type="number" pos:line="24" pos:column="20">0<pos:position pos:line="24" pos:column="21"/></literal></expr>;<pos:position pos:line="24" pos:column="22"/></expr_stmt>
            <while pos:line="25" pos:column="13">while <condition pos:line="25" pos:column="19">(<expr><operator pos:line="25" pos:column="20">!<pos:position pos:line="25" pos:column="21"/></operator><call><name pos:line="25" pos:column="21">ap_regexec<pos:position pos:line="25" pos:column="31"/></name><argument_list pos:line="25" pos:column="31">(<argument><expr><name><name pos:line="25" pos:column="32">m<pos:position pos:line="25" pos:column="33"/></name><operator pos:line="25" pos:column="33">-&gt;<pos:position pos:line="25" pos:column="38"/></operator><name pos:line="25" pos:column="35">from<pos:position pos:line="25" pos:column="39"/></name><operator pos:line="25" pos:column="39">.<pos:position pos:line="25" pos:column="40"/></operator><name pos:line="25" pos:column="40">r<pos:position pos:line="25" pos:column="41"/></name></name></expr></argument>, <argument><expr><name><name pos:line="25" pos:column="43">ctx<pos:position pos:line="25" pos:column="46"/></name><operator pos:line="25" pos:column="46">-&gt;<pos:position pos:line="25" pos:column="51"/></operator><name pos:line="25" pos:column="48">buf<pos:position pos:line="25" pos:column="51"/></name></name><operator pos:line="25" pos:column="51">+<pos:position pos:line="25" pos:column="52"/></operator><name pos:line="25" pos:column="52">offs<pos:position pos:line="25" pos:column="56"/></name></expr></argument>, <argument><expr><name pos:line="25" pos:column="58">nmatch<pos:position pos:line="25" pos:column="64"/></name></expr></argument>, <argument><expr><name pos:line="25" pos:column="66">pmatch<pos:position pos:line="25" pos:column="72"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="25" pos:column="74">0<pos:position pos:line="25" pos:column="75"/></literal></expr></argument>)<pos:position pos:line="25" pos:column="76"/></argument_list></call></expr>)<pos:position pos:line="25" pos:column="77"/></condition> <block pos:line="25" pos:column="78">{
                <expr_stmt><expr><name pos:line="26" pos:column="17">match<pos:position pos:line="26" pos:column="22"/></name> <operator pos:line="26" pos:column="23">=<pos:position pos:line="26" pos:column="24"/></operator> <name><name pos:line="26" pos:column="25">pmatch<pos:position pos:line="26" pos:column="31"/></name><index pos:line="26" pos:column="31">[<expr><literal type="number" pos:line="26" pos:column="32">0<pos:position pos:line="26" pos:column="33"/></literal></expr>]<pos:position pos:line="26" pos:column="34"/></index></name><operator pos:line="26" pos:column="34">.<pos:position pos:line="26" pos:column="35"/></operator><name pos:line="26" pos:column="35">rm_so<pos:position pos:line="26" pos:column="40"/></name></expr>;<pos:position pos:line="26" pos:column="41"/></expr_stmt>
                <expr_stmt><expr><name pos:line="27" pos:column="17">s_from<pos:position pos:line="27" pos:column="23"/></name> <operator pos:line="27" pos:column="24">=<pos:position pos:line="27" pos:column="25"/></operator> <name><name pos:line="27" pos:column="26">pmatch<pos:position pos:line="27" pos:column="32"/></name><index pos:line="27" pos:column="32">[<expr><literal type="number" pos:line="27" pos:column="33">0<pos:position pos:line="27" pos:column="34"/></literal></expr>]<pos:position pos:line="27" pos:column="35"/></index></name><operator pos:line="27" pos:column="35">.<pos:position pos:line="27" pos:column="36"/></operator><name pos:line="27" pos:column="36">rm_eo<pos:position pos:line="27" pos:column="41"/></name> <operator pos:line="27" pos:column="42">-<pos:position pos:line="27" pos:column="43"/></operator> <name pos:line="27" pos:column="44">match<pos:position pos:line="27" pos:column="49"/></name></expr>;<pos:position pos:line="27" pos:column="50"/></expr_stmt>
                <expr_stmt><expr><name pos:line="28" pos:column="17">subs<pos:position pos:line="28" pos:column="21"/></name> <operator pos:line="28" pos:column="22">=<pos:position pos:line="28" pos:column="23"/></operator> <call><name pos:line="28" pos:column="24">ap_pregsub<pos:position pos:line="28" pos:column="34"/></name><argument_list pos:line="28" pos:column="34">(<argument><expr><name><name pos:line="28" pos:column="35">ctx<pos:position pos:line="28" pos:column="38"/></name><operator pos:line="28" pos:column="38">-&gt;<pos:position pos:line="28" pos:column="43"/></operator><name pos:line="28" pos:column="40">f<pos:position pos:line="28" pos:column="41"/></name><operator pos:line="28" pos:column="41">-&gt;<pos:position pos:line="28" pos:column="46"/></operator><name pos:line="28" pos:column="43">r<pos:position pos:line="28" pos:column="44"/></name><operator pos:line="28" pos:column="44">-&gt;<pos:position pos:line="28" pos:column="49"/></operator><name pos:line="28" pos:column="46">pool<pos:position pos:line="28" pos:column="50"/></name></name></expr></argument>, <argument><expr><name><name pos:line="28" pos:column="52">m<pos:position pos:line="28" pos:column="53"/></name><operator pos:line="28" pos:column="53">-&gt;<pos:position pos:line="28" pos:column="58"/></operator><name pos:line="28" pos:column="55">to<pos:position pos:line="28" pos:column="57"/></name></name></expr></argument>, <argument><expr><name><name pos:line="28" pos:column="59">ctx<pos:position pos:line="28" pos:column="62"/></name><operator pos:line="28" pos:column="62">-&gt;<pos:position pos:line="28" pos:column="67"/></operator><name pos:line="28" pos:column="64">buf<pos:position pos:line="28" pos:column="67"/></name></name><operator pos:line="28" pos:column="67">+<pos:position pos:line="28" pos:column="68"/></operator><name pos:line="28" pos:column="68">offs<pos:position pos:line="28" pos:column="72"/></name></expr></argument>,
                                  <argument><expr><name pos:line="29" pos:column="35">nmatch<pos:position pos:line="29" pos:column="41"/></name></expr></argument>, <argument><expr><name pos:line="29" pos:column="43">pmatch<pos:position pos:line="29" pos:column="49"/></name></expr></argument>)<pos:position pos:line="29" pos:column="50"/></argument_list></call></expr>;<pos:position pos:line="29" pos:column="51"/></expr_stmt>
                <expr_stmt><expr><name pos:line="30" pos:column="17">s_to<pos:position pos:line="30" pos:column="21"/></name> <operator pos:line="30" pos:column="22">=<pos:position pos:line="30" pos:column="23"/></operator> <call><name pos:line="30" pos:column="24">strlen<pos:position pos:line="30" pos:column="30"/></name><argument_list pos:line="30" pos:column="30">(<argument><expr><name pos:line="30" pos:column="31">subs<pos:position pos:line="30" pos:column="35"/></name></expr></argument>)<pos:position pos:line="30" pos:column="36"/></argument_list></call></expr>;<pos:position pos:line="30" pos:column="37"/></expr_stmt>
                <expr_stmt><expr><name pos:line="31" pos:column="17">len<pos:position pos:line="31" pos:column="20"/></name> <operator pos:line="31" pos:column="21">=<pos:position pos:line="31" pos:column="22"/></operator> <call><name pos:line="31" pos:column="23">strlen<pos:position pos:line="31" pos:column="29"/></name><argument_list pos:line="31" pos:column="29">(<argument><expr><name><name pos:line="31" pos:column="30">ctx<pos:position pos:line="31" pos:column="33"/></name><operator pos:line="31" pos:column="33">-&gt;<pos:position pos:line="31" pos:column="38"/></operator><name pos:line="31" pos:column="35">buf<pos:position pos:line="31" pos:column="38"/></name></name></expr></argument>)<pos:position pos:line="31" pos:column="39"/></argument_list></call></expr>;<pos:position pos:line="31" pos:column="40"/></expr_stmt>
                <expr_stmt><expr><name pos:line="32" pos:column="17">offs<pos:position pos:line="32" pos:column="21"/></name> <operator pos:line="32" pos:column="22">+=<pos:position pos:line="32" pos:column="24"/></operator> <name pos:line="32" pos:column="25">match<pos:position pos:line="32" pos:column="30"/></name></expr>;<pos:position pos:line="32" pos:column="31"/></expr_stmt>
                <macro><name pos:line="33" pos:column="17">VERBOSEB<pos:position pos:line="33" pos:column="25"/></name><argument_list pos:line="33" pos:column="25">(
                    <argument pos:line="34" pos:column="21">const char *f = apr_pstrndup(ctx-&gt;f-&gt;r-&gt;pool,
                    ctx-&gt;buf + offs, s_from);
                    ap_log_rerror(APLOG_MARK, APLOG_TRACE3, <literal type="number" pos:line="36" pos:column="61">0<pos:position pos:line="36" pos:column="62"/></literal>, ctx-&gt;f-&gt;r,
                                  <literal type="string" pos:line="37" pos:column="35">"C/RX: match at %s, substituting %s"<pos:position pos:line="37" pos:column="71"/></literal>, f, subs);<pos:position pos:line="37" pos:column="82"/></argument>
                )<pos:position pos:line="38" pos:column="18"/></argument_list></macro>
                <if pos:line="39" pos:column="17">if <condition pos:line="39" pos:column="20">(<expr><name pos:line="39" pos:column="21">s_to<pos:position pos:line="39" pos:column="25"/></name> <operator pos:line="39" pos:column="26">&gt;<pos:position pos:line="39" pos:column="30"/></operator> <name pos:line="39" pos:column="28">s_from<pos:position pos:line="39" pos:column="34"/></name></expr>)<pos:position pos:line="39" pos:column="35"/></condition><then pos:line="39" pos:column="35"> <block pos:line="39" pos:column="36">{
                    <expr_stmt><expr><call><name pos:line="40" pos:column="21">preserve<pos:position pos:line="40" pos:column="29"/></name><argument_list pos:line="40" pos:column="29">(<argument><expr><name pos:line="40" pos:column="30">ctx<pos:position pos:line="40" pos:column="33"/></name></expr></argument>, <argument><expr><name pos:line="40" pos:column="35">s_to<pos:position pos:line="40" pos:column="39"/></name> <operator pos:line="40" pos:column="40">-<pos:position pos:line="40" pos:column="41"/></operator> <name pos:line="40" pos:column="42">s_from<pos:position pos:line="40" pos:column="48"/></name></expr></argument>)<pos:position pos:line="40" pos:column="49"/></argument_list></call></expr>;<pos:position pos:line="40" pos:column="50"/></expr_stmt>
                    <expr_stmt><expr><call><name pos:line="41" pos:column="21">memmove<pos:position pos:line="41" pos:column="28"/></name><argument_list pos:line="41" pos:column="28">(<argument><expr><name><name pos:line="41" pos:column="29">ctx<pos:position pos:line="41" pos:column="32"/></name><operator pos:line="41" pos:column="32">-&gt;<pos:position pos:line="41" pos:column="37"/></operator><name pos:line="41" pos:column="34">buf<pos:position pos:line="41" pos:column="37"/></name></name><operator pos:line="41" pos:column="37">+<pos:position pos:line="41" pos:column="38"/></operator><name pos:line="41" pos:column="38">offs<pos:position pos:line="41" pos:column="42"/></name><operator pos:line="41" pos:column="42">+<pos:position pos:line="41" pos:column="43"/></operator><name pos:line="41" pos:column="43">s_to<pos:position pos:line="41" pos:column="47"/></name></expr></argument>, <argument><expr><name><name pos:line="41" pos:column="49">ctx<pos:position pos:line="41" pos:column="52"/></name><operator pos:line="41" pos:column="52">-&gt;<pos:position pos:line="41" pos:column="57"/></operator><name pos:line="41" pos:column="54">buf<pos:position pos:line="41" pos:column="57"/></name></name><operator pos:line="41" pos:column="57">+<pos:position pos:line="41" pos:column="58"/></operator><name pos:line="41" pos:column="58">offs<pos:position pos:line="41" pos:column="62"/></name><operator pos:line="41" pos:column="62">+<pos:position pos:line="41" pos:column="63"/></operator><name pos:line="41" pos:column="63">s_from<pos:position pos:line="41" pos:column="69"/></name></expr></argument>,
                            <argument><expr><name pos:line="42" pos:column="29">len<pos:position pos:line="42" pos:column="32"/></name> <operator pos:line="42" pos:column="33">+<pos:position pos:line="42" pos:column="34"/></operator> <literal type="number" pos:line="42" pos:column="35">1<pos:position pos:line="42" pos:column="36"/></literal> <operator pos:line="42" pos:column="37">-<pos:position pos:line="42" pos:column="38"/></operator> <name pos:line="42" pos:column="39">s_from<pos:position pos:line="42" pos:column="45"/></name> <operator pos:line="42" pos:column="46">-<pos:position pos:line="42" pos:column="47"/></operator> <name pos:line="42" pos:column="48">offs<pos:position pos:line="42" pos:column="52"/></name></expr></argument>)<pos:position pos:line="42" pos:column="53"/></argument_list></call></expr>;<pos:position pos:line="42" pos:column="54"/></expr_stmt>
                    <expr_stmt><expr><call><name pos:line="43" pos:column="21">memcpy<pos:position pos:line="43" pos:column="27"/></name><argument_list pos:line="43" pos:column="27">(<argument><expr><name><name pos:line="43" pos:column="28">ctx<pos:position pos:line="43" pos:column="31"/></name><operator pos:line="43" pos:column="31">-&gt;<pos:position pos:line="43" pos:column="36"/></operator><name pos:line="43" pos:column="33">buf<pos:position pos:line="43" pos:column="36"/></name></name><operator pos:line="43" pos:column="36">+<pos:position pos:line="43" pos:column="37"/></operator><name pos:line="43" pos:column="37">offs<pos:position pos:line="43" pos:column="41"/></name></expr></argument>, <argument><expr><name pos:line="43" pos:column="43">subs<pos:position pos:line="43" pos:column="47"/></name></expr></argument>, <argument><expr><name pos:line="43" pos:column="49">s_to<pos:position pos:line="43" pos:column="53"/></name></expr></argument>)<pos:position pos:line="43" pos:column="54"/></argument_list></call></expr>;<pos:position pos:line="43" pos:column="55"/></expr_stmt>
                }<pos:position pos:line="44" pos:column="18"/></block></then>
                <else pos:line="45" pos:column="17">else <block pos:line="45" pos:column="22">{
                    <expr_stmt><expr><call><name pos:line="46" pos:column="21">memcpy<pos:position pos:line="46" pos:column="27"/></name><argument_list pos:line="46" pos:column="27">(<argument><expr><name><name pos:line="46" pos:column="28">ctx<pos:position pos:line="46" pos:column="31"/></name><operator pos:line="46" pos:column="31">-&gt;<pos:position pos:line="46" pos:column="36"/></operator><name pos:line="46" pos:column="33">buf<pos:position pos:line="46" pos:column="36"/></name></name> <operator pos:line="46" pos:column="37">+<pos:position pos:line="46" pos:column="38"/></operator> <name pos:line="46" pos:column="39">offs<pos:position pos:line="46" pos:column="43"/></name></expr></argument>, <argument><expr><name pos:line="46" pos:column="45">subs<pos:position pos:line="46" pos:column="49"/></name></expr></argument>, <argument><expr><name pos:line="46" pos:column="51">s_to<pos:position pos:line="46" pos:column="55"/></name></expr></argument>)<pos:position pos:line="46" pos:column="56"/></argument_list></call></expr>;<pos:position pos:line="46" pos:column="57"/></expr_stmt>
                    <expr_stmt><expr><call><name pos:line="47" pos:column="21">memmove<pos:position pos:line="47" pos:column="28"/></name><argument_list pos:line="47" pos:column="28">(<argument><expr><name><name pos:line="47" pos:column="29">ctx<pos:position pos:line="47" pos:column="32"/></name><operator pos:line="47" pos:column="32">-&gt;<pos:position pos:line="47" pos:column="37"/></operator><name pos:line="47" pos:column="34">buf<pos:position pos:line="47" pos:column="37"/></name></name><operator pos:line="47" pos:column="37">+<pos:position pos:line="47" pos:column="38"/></operator><name pos:line="47" pos:column="38">offs<pos:position pos:line="47" pos:column="42"/></name><operator pos:line="47" pos:column="42">+<pos:position pos:line="47" pos:column="43"/></operator><name pos:line="47" pos:column="43">s_to<pos:position pos:line="47" pos:column="47"/></name></expr></argument>, <argument><expr><name><name pos:line="47" pos:column="49">ctx<pos:position pos:line="47" pos:column="52"/></name><operator pos:line="47" pos:column="52">-&gt;<pos:position pos:line="47" pos:column="57"/></operator><name pos:line="47" pos:column="54">buf<pos:position pos:line="47" pos:column="57"/></name></name><operator pos:line="47" pos:column="57">+<pos:position pos:line="47" pos:column="58"/></operator><name pos:line="47" pos:column="58">offs<pos:position pos:line="47" pos:column="62"/></name><operator pos:line="47" pos:column="62">+<pos:position pos:line="47" pos:column="63"/></operator><name pos:line="47" pos:column="63">s_from<pos:position pos:line="47" pos:column="69"/></name></expr></argument>,
                            <argument><expr><name pos:line="48" pos:column="29">len<pos:position pos:line="48" pos:column="32"/></name> <operator pos:line="48" pos:column="33">+<pos:position pos:line="48" pos:column="34"/></operator> <literal type="number" pos:line="48" pos:column="35">1<pos:position pos:line="48" pos:column="36"/></literal> <operator pos:line="48" pos:column="37">-<pos:position pos:line="48" pos:column="38"/></operator> <name pos:line="48" pos:column="39">s_from<pos:position pos:line="48" pos:column="45"/></name> <operator pos:line="48" pos:column="46">-<pos:position pos:line="48" pos:column="47"/></operator> <name pos:line="48" pos:column="48">offs<pos:position pos:line="48" pos:column="52"/></name></expr></argument>)<pos:position pos:line="48" pos:column="53"/></argument_list></call></expr>;<pos:position pos:line="48" pos:column="54"/></expr_stmt>
                }<pos:position pos:line="49" pos:column="18"/></block></else></if>
                <expr_stmt><expr><name pos:line="50" pos:column="17">offs<pos:position pos:line="50" pos:column="21"/></name> <operator pos:line="50" pos:column="22">+=<pos:position pos:line="50" pos:column="24"/></operator> <name pos:line="50" pos:column="25">s_to<pos:position pos:line="50" pos:column="29"/></name></expr>;<pos:position pos:line="50" pos:column="30"/></expr_stmt>
            }<pos:position pos:line="51" pos:column="14"/></block></while>
        }<pos:position pos:line="52" pos:column="10"/></block></then>
        <else pos:line="53" pos:column="9">else <block pos:line="53" pos:column="14">{
            <expr_stmt><expr><name pos:line="54" pos:column="13">s_from<pos:position pos:line="54" pos:column="19"/></name> <operator pos:line="54" pos:column="20">=<pos:position pos:line="54" pos:column="21"/></operator> <call><name pos:line="54" pos:column="22">strlen<pos:position pos:line="54" pos:column="28"/></name><argument_list pos:line="54" pos:column="28">(<argument><expr><name><name pos:line="54" pos:column="29">m<pos:position pos:line="54" pos:column="30"/></name><operator pos:line="54" pos:column="30">-&gt;<pos:position pos:line="54" pos:column="35"/></operator><name pos:line="54" pos:column="32">from<pos:position pos:line="54" pos:column="36"/></name><operator pos:line="54" pos:column="36">.<pos:position pos:line="54" pos:column="37"/></operator><name pos:line="54" pos:column="37">c<pos:position pos:line="54" pos:column="38"/></name></name></expr></argument>)<pos:position pos:line="54" pos:column="39"/></argument_list></call></expr>;<pos:position pos:line="54" pos:column="40"/></expr_stmt>
            <expr_stmt><expr><name pos:line="55" pos:column="13">s_to<pos:position pos:line="55" pos:column="17"/></name> <operator pos:line="55" pos:column="18">=<pos:position pos:line="55" pos:column="19"/></operator> <call><name pos:line="55" pos:column="20">strlen<pos:position pos:line="55" pos:column="26"/></name><argument_list pos:line="55" pos:column="26">(<argument><expr><name><name pos:line="55" pos:column="27">m<pos:position pos:line="55" pos:column="28"/></name><operator pos:line="55" pos:column="28">-&gt;<pos:position pos:line="55" pos:column="33"/></operator><name pos:line="55" pos:column="30">to<pos:position pos:line="55" pos:column="32"/></name></name></expr></argument>)<pos:position pos:line="55" pos:column="33"/></argument_list></call></expr>;<pos:position pos:line="55" pos:column="34"/></expr_stmt>
            <for pos:line="56" pos:column="13">for <control pos:line="56" pos:column="17">(<init><expr><name pos:line="56" pos:column="18">found<pos:position pos:line="56" pos:column="23"/></name> <operator pos:line="56" pos:column="24">=<pos:position pos:line="56" pos:column="25"/></operator> <call><name pos:line="56" pos:column="26">strstr<pos:position pos:line="56" pos:column="32"/></name><argument_list pos:line="56" pos:column="32">(<argument><expr><name><name pos:line="56" pos:column="33">ctx<pos:position pos:line="56" pos:column="36"/></name><operator pos:line="56" pos:column="36">-&gt;<pos:position pos:line="56" pos:column="41"/></operator><name pos:line="56" pos:column="38">buf<pos:position pos:line="56" pos:column="41"/></name></name></expr></argument>, <argument><expr><name><name pos:line="56" pos:column="43">m<pos:position pos:line="56" pos:column="44"/></name><operator pos:line="56" pos:column="44">-&gt;<pos:position pos:line="56" pos:column="49"/></operator><name pos:line="56" pos:column="46">from<pos:position pos:line="56" pos:column="50"/></name><operator pos:line="56" pos:column="50">.<pos:position pos:line="56" pos:column="51"/></operator><name pos:line="56" pos:column="51">c<pos:position pos:line="56" pos:column="52"/></name></name></expr></argument>)<pos:position pos:line="56" pos:column="53"/></argument_list></call></expr>;<pos:position pos:line="56" pos:column="54"/></init> <condition><expr><name pos:line="56" pos:column="55">found<pos:position pos:line="56" pos:column="60"/></name></expr>;<pos:position pos:line="56" pos:column="61"/></condition>
                 <incr><expr><name pos:line="57" pos:column="18">found<pos:position pos:line="57" pos:column="23"/></name> <operator pos:line="57" pos:column="24">=<pos:position pos:line="57" pos:column="25"/></operator> <call><name pos:line="57" pos:column="26">strstr<pos:position pos:line="57" pos:column="32"/></name><argument_list pos:line="57" pos:column="32">(<argument><expr><name><name pos:line="57" pos:column="33">ctx<pos:position pos:line="57" pos:column="36"/></name><operator pos:line="57" pos:column="36">-&gt;<pos:position pos:line="57" pos:column="41"/></operator><name pos:line="57" pos:column="38">buf<pos:position pos:line="57" pos:column="41"/></name></name><operator pos:line="57" pos:column="41">+<pos:position pos:line="57" pos:column="42"/></operator><name pos:line="57" pos:column="42">match<pos:position pos:line="57" pos:column="47"/></name><operator pos:line="57" pos:column="47">+<pos:position pos:line="57" pos:column="48"/></operator><name pos:line="57" pos:column="48">s_to<pos:position pos:line="57" pos:column="52"/></name></expr></argument>, <argument><expr><name><name pos:line="57" pos:column="54">m<pos:position pos:line="57" pos:column="55"/></name><operator pos:line="57" pos:column="55">-&gt;<pos:position pos:line="57" pos:column="60"/></operator><name pos:line="57" pos:column="57">from<pos:position pos:line="57" pos:column="61"/></name><operator pos:line="57" pos:column="61">.<pos:position pos:line="57" pos:column="62"/></operator><name pos:line="57" pos:column="62">c<pos:position pos:line="57" pos:column="63"/></name></name></expr></argument>)<pos:position pos:line="57" pos:column="64"/></argument_list></call></expr></incr>)<pos:position pos:line="57" pos:column="65"/></control> <block pos:line="57" pos:column="66">{
                <expr_stmt><expr><name pos:line="58" pos:column="17">match<pos:position pos:line="58" pos:column="22"/></name> <operator pos:line="58" pos:column="23">=<pos:position pos:line="58" pos:column="24"/></operator> <name pos:line="58" pos:column="25">found<pos:position pos:line="58" pos:column="30"/></name> <operator pos:line="58" pos:column="31">-<pos:position pos:line="58" pos:column="32"/></operator> <name><name pos:line="58" pos:column="33">ctx<pos:position pos:line="58" pos:column="36"/></name><operator pos:line="58" pos:column="36">-&gt;<pos:position pos:line="58" pos:column="41"/></operator><name pos:line="58" pos:column="38">buf<pos:position pos:line="58" pos:column="41"/></name></name></expr>;<pos:position pos:line="58" pos:column="42"/></expr_stmt>
                <if pos:line="59" pos:column="17">if <condition pos:line="59" pos:column="20">(<expr><operator pos:line="59" pos:column="21">(<pos:position pos:line="59" pos:column="22"/></operator><name><name pos:line="59" pos:column="22">m<pos:position pos:line="59" pos:column="23"/></name><operator pos:line="59" pos:column="23">-&gt;<pos:position pos:line="59" pos:column="28"/></operator><name pos:line="59" pos:column="25">flags<pos:position pos:line="59" pos:column="30"/></name></name> <operator pos:line="59" pos:column="31">&amp;<pos:position pos:line="59" pos:column="36"/></operator> <name pos:line="59" pos:column="33">M_ATSTART<pos:position pos:line="59" pos:column="42"/></name><operator pos:line="59" pos:column="42">)<pos:position pos:line="59" pos:column="43"/></operator> <operator pos:line="59" pos:column="44">&amp;&amp;<pos:position pos:line="59" pos:column="54"/></operator> <operator pos:line="59" pos:column="47">(<pos:position pos:line="59" pos:column="48"/></operator><name pos:line="59" pos:column="48">match<pos:position pos:line="59" pos:column="53"/></name> <operator pos:line="59" pos:column="54">!=<pos:position pos:line="59" pos:column="56"/></operator> <literal type="number" pos:line="59" pos:column="57">0<pos:position pos:line="59" pos:column="58"/></literal><operator pos:line="59" pos:column="58">)<pos:position pos:line="59" pos:column="59"/></operator></expr>)<pos:position pos:line="59" pos:column="60"/></condition><then pos:line="59" pos:column="60">
                    <block type="pseudo"><break pos:line="60" pos:column="21">break;<pos:position pos:line="60" pos:column="27"/></break></block></then></if>
                <expr_stmt><expr><name pos:line="61" pos:column="17">len<pos:position pos:line="61" pos:column="20"/></name> <operator pos:line="61" pos:column="21">=<pos:position pos:line="61" pos:column="22"/></operator> <call><name pos:line="61" pos:column="23">strlen<pos:position pos:line="61" pos:column="29"/></name><argument_list pos:line="61" pos:column="29">(<argument><expr><name><name pos:line="61" pos:column="30">ctx<pos:position pos:line="61" pos:column="33"/></name><operator pos:line="61" pos:column="33">-&gt;<pos:position pos:line="61" pos:column="38"/></operator><name pos:line="61" pos:column="35">buf<pos:position pos:line="61" pos:column="38"/></name></name></expr></argument>)<pos:position pos:line="61" pos:column="39"/></argument_list></call></expr>;<pos:position pos:line="61" pos:column="40"/></expr_stmt>
                <if pos:line="62" pos:column="17">if <condition pos:line="62" pos:column="20">(<expr><operator pos:line="62" pos:column="21">(<pos:position pos:line="62" pos:column="22"/></operator><name><name pos:line="62" pos:column="22">m<pos:position pos:line="62" pos:column="23"/></name><operator pos:line="62" pos:column="23">-&gt;<pos:position pos:line="62" pos:column="28"/></operator><name pos:line="62" pos:column="25">flags<pos:position pos:line="62" pos:column="30"/></name></name> <operator pos:line="62" pos:column="31">&amp;<pos:position pos:line="62" pos:column="36"/></operator> <name pos:line="62" pos:column="33">M_ATEND<pos:position pos:line="62" pos:column="40"/></name><operator pos:line="62" pos:column="40">)<pos:position pos:line="62" pos:column="41"/></operator> <operator pos:line="62" pos:column="42">&amp;&amp;<pos:position pos:line="62" pos:column="52"/></operator> <operator pos:line="62" pos:column="45">(<pos:position pos:line="62" pos:column="46"/></operator><name pos:line="62" pos:column="46">match<pos:position pos:line="62" pos:column="51"/></name> <operator pos:line="62" pos:column="52">&lt;<pos:position pos:line="62" pos:column="56"/></operator> <operator pos:line="62" pos:column="54">(<pos:position pos:line="62" pos:column="55"/></operator><name pos:line="62" pos:column="55">len<pos:position pos:line="62" pos:column="58"/></name> <operator pos:line="62" pos:column="59">-<pos:position pos:line="62" pos:column="60"/></operator> <name pos:line="62" pos:column="61">s_from<pos:position pos:line="62" pos:column="67"/></name><operator pos:line="62" pos:column="67">)<pos:position pos:line="62" pos:column="68"/></operator><operator pos:line="62" pos:column="68">)<pos:position pos:line="62" pos:column="69"/></operator></expr>)<pos:position pos:line="62" pos:column="70"/></condition><then pos:line="62" pos:column="70">
                    <block type="pseudo"><continue pos:line="63" pos:column="21">continue;<pos:position pos:line="63" pos:column="30"/></continue></block></then></if>
                <expr_stmt><expr><call><name pos:line="64" pos:column="17">VERBOSE<pos:position pos:line="64" pos:column="24"/></name><argument_list pos:line="64" pos:column="24">(<argument><expr><call><name pos:line="64" pos:column="25">ap_log_rerror<pos:position pos:line="64" pos:column="38"/></name><argument_list pos:line="64" pos:column="38">(<argument><expr><name pos:line="64" pos:column="39">APLOG_MARK<pos:position pos:line="64" pos:column="49"/></name></expr></argument>, <argument><expr><name pos:line="64" pos:column="51">APLOG_TRACE3<pos:position pos:line="64" pos:column="63"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="64" pos:column="65">0<pos:position pos:line="64" pos:column="66"/></literal></expr></argument>, <argument><expr><name><name pos:line="64" pos:column="68">ctx<pos:position pos:line="64" pos:column="71"/></name><operator pos:line="64" pos:column="71">-&gt;<pos:position pos:line="64" pos:column="76"/></operator><name pos:line="64" pos:column="73">f<pos:position pos:line="64" pos:column="74"/></name><operator pos:line="64" pos:column="74">-&gt;<pos:position pos:line="64" pos:column="79"/></operator><name pos:line="64" pos:column="76">r<pos:position pos:line="64" pos:column="77"/></name></name></expr></argument>,
                                      <argument><expr><literal type="string" pos:line="65" pos:column="39">"C: matched %s, substituting %s"<pos:position pos:line="65" pos:column="71"/></literal></expr></argument>,
                                      <argument><expr><name><name pos:line="66" pos:column="39">m<pos:position pos:line="66" pos:column="40"/></name><operator pos:line="66" pos:column="40">-&gt;<pos:position pos:line="66" pos:column="45"/></operator><name pos:line="66" pos:column="42">from<pos:position pos:line="66" pos:column="46"/></name><operator pos:line="66" pos:column="46">.<pos:position pos:line="66" pos:column="47"/></operator><name pos:line="66" pos:column="47">c<pos:position pos:line="66" pos:column="48"/></name></name></expr></argument>, <argument><expr><name><name pos:line="66" pos:column="50">m<pos:position pos:line="66" pos:column="51"/></name><operator pos:line="66" pos:column="51">-&gt;<pos:position pos:line="66" pos:column="56"/></operator><name pos:line="66" pos:column="53">to<pos:position pos:line="66" pos:column="55"/></name></name></expr></argument>)<pos:position pos:line="66" pos:column="56"/></argument_list></call></expr></argument>)<pos:position pos:line="66" pos:column="57"/></argument_list></call></expr>;<pos:position pos:line="66" pos:column="58"/></expr_stmt>
                <if pos:line="67" pos:column="17">if <condition pos:line="67" pos:column="20">(<expr><name pos:line="67" pos:column="21">s_to<pos:position pos:line="67" pos:column="25"/></name> <operator pos:line="67" pos:column="26">&gt;<pos:position pos:line="67" pos:column="30"/></operator> <name pos:line="67" pos:column="28">s_from<pos:position pos:line="67" pos:column="34"/></name></expr>)<pos:position pos:line="67" pos:column="35"/></condition><then pos:line="67" pos:column="35"> <block pos:line="67" pos:column="36">{
                    <expr_stmt><expr><call><name pos:line="68" pos:column="21">preserve<pos:position pos:line="68" pos:column="29"/></name><argument_list pos:line="68" pos:column="29">(<argument><expr><name pos:line="68" pos:column="30">ctx<pos:position pos:line="68" pos:column="33"/></name></expr></argument>, <argument><expr><name pos:line="68" pos:column="35">s_to<pos:position pos:line="68" pos:column="39"/></name> <operator pos:line="68" pos:column="40">-<pos:position pos:line="68" pos:column="41"/></operator> <name pos:line="68" pos:column="42">s_from<pos:position pos:line="68" pos:column="48"/></name></expr></argument>)<pos:position pos:line="68" pos:column="49"/></argument_list></call></expr>;<pos:position pos:line="68" pos:column="50"/></expr_stmt>
                    <expr_stmt><expr><call><name pos:line="69" pos:column="21">memmove<pos:position pos:line="69" pos:column="28"/></name><argument_list pos:line="69" pos:column="28">(<argument><expr><name><name pos:line="69" pos:column="29">ctx<pos:position pos:line="69" pos:column="32"/></name><operator pos:line="69" pos:column="32">-&gt;<pos:position pos:line="69" pos:column="37"/></operator><name pos:line="69" pos:column="34">buf<pos:position pos:line="69" pos:column="37"/></name></name><operator pos:line="69" pos:column="37">+<pos:position pos:line="69" pos:column="38"/></operator><name pos:line="69" pos:column="38">match<pos:position pos:line="69" pos:column="43"/></name><operator pos:line="69" pos:column="43">+<pos:position pos:line="69" pos:column="44"/></operator><name pos:line="69" pos:column="44">s_to<pos:position pos:line="69" pos:column="48"/></name></expr></argument>, <argument><expr><name><name pos:line="69" pos:column="50">ctx<pos:position pos:line="69" pos:column="53"/></name><operator pos:line="69" pos:column="53">-&gt;<pos:position pos:line="69" pos:column="58"/></operator><name pos:line="69" pos:column="55">buf<pos:position pos:line="69" pos:column="58"/></name></name><operator pos:line="69" pos:column="58">+<pos:position pos:line="69" pos:column="59"/></operator><name pos:line="69" pos:column="59">match<pos:position pos:line="69" pos:column="64"/></name><operator pos:line="69" pos:column="64">+<pos:position pos:line="69" pos:column="65"/></operator><name pos:line="69" pos:column="65">s_from<pos:position pos:line="69" pos:column="71"/></name></expr></argument>,
                            <argument><expr><name pos:line="70" pos:column="29">len<pos:position pos:line="70" pos:column="32"/></name> <operator pos:line="70" pos:column="33">+<pos:position pos:line="70" pos:column="34"/></operator> <literal type="number" pos:line="70" pos:column="35">1<pos:position pos:line="70" pos:column="36"/></literal> <operator pos:line="70" pos:column="37">-<pos:position pos:line="70" pos:column="38"/></operator> <name pos:line="70" pos:column="39">s_from<pos:position pos:line="70" pos:column="45"/></name> <operator pos:line="70" pos:column="46">-<pos:position pos:line="70" pos:column="47"/></operator> <name pos:line="70" pos:column="48">match<pos:position pos:line="70" pos:column="53"/></name></expr></argument>)<pos:position pos:line="70" pos:column="54"/></argument_list></call></expr>;<pos:position pos:line="70" pos:column="55"/></expr_stmt>
                    <expr_stmt><expr><call><name pos:line="71" pos:column="21">memcpy<pos:position pos:line="71" pos:column="27"/></name><argument_list pos:line="71" pos:column="27">(<argument><expr><name><name pos:line="71" pos:column="28">ctx<pos:position pos:line="71" pos:column="31"/></name><operator pos:line="71" pos:column="31">-&gt;<pos:position pos:line="71" pos:column="36"/></operator><name pos:line="71" pos:column="33">buf<pos:position pos:line="71" pos:column="36"/></name></name><operator pos:line="71" pos:column="36">+<pos:position pos:line="71" pos:column="37"/></operator><name pos:line="71" pos:column="37">match<pos:position pos:line="71" pos:column="42"/></name></expr></argument>, <argument><expr><name><name pos:line="71" pos:column="44">m<pos:position pos:line="71" pos:column="45"/></name><operator pos:line="71" pos:column="45">-&gt;<pos:position pos:line="71" pos:column="50"/></operator><name pos:line="71" pos:column="47">to<pos:position pos:line="71" pos:column="49"/></name></name></expr></argument>, <argument><expr><name pos:line="71" pos:column="51">s_to<pos:position pos:line="71" pos:column="55"/></name></expr></argument>)<pos:position pos:line="71" pos:column="56"/></argument_list></call></expr>;<pos:position pos:line="71" pos:column="57"/></expr_stmt>
                }<pos:position pos:line="72" pos:column="18"/></block></then>
                <else pos:line="73" pos:column="17">else <block pos:line="73" pos:column="22">{
                    <expr_stmt><expr><call><name pos:line="74" pos:column="21">memcpy<pos:position pos:line="74" pos:column="27"/></name><argument_list pos:line="74" pos:column="27">(<argument><expr><name><name pos:line="74" pos:column="28">ctx<pos:position pos:line="74" pos:column="31"/></name><operator pos:line="74" pos:column="31">-&gt;<pos:position pos:line="74" pos:column="36"/></operator><name pos:line="74" pos:column="33">buf<pos:position pos:line="74" pos:column="36"/></name></name><operator pos:line="74" pos:column="36">+<pos:position pos:line="74" pos:column="37"/></operator><name pos:line="74" pos:column="37">match<pos:position pos:line="74" pos:column="42"/></name></expr></argument>, <argument><expr><name><name pos:line="74" pos:column="44">m<pos:position pos:line="74" pos:column="45"/></name><operator pos:line="74" pos:column="45">-&gt;<pos:position pos:line="74" pos:column="50"/></operator><name pos:line="74" pos:column="47">to<pos:position pos:line="74" pos:column="49"/></name></name></expr></argument>, <argument><expr><name pos:line="74" pos:column="51">s_to<pos:position pos:line="74" pos:column="55"/></name></expr></argument>)<pos:position pos:line="74" pos:column="56"/></argument_list></call></expr>;<pos:position pos:line="74" pos:column="57"/></expr_stmt>
                    <expr_stmt><expr><call><name pos:line="75" pos:column="21">memmove<pos:position pos:line="75" pos:column="28"/></name><argument_list pos:line="75" pos:column="28">(<argument><expr><name><name pos:line="75" pos:column="29">ctx<pos:position pos:line="75" pos:column="32"/></name><operator pos:line="75" pos:column="32">-&gt;<pos:position pos:line="75" pos:column="37"/></operator><name pos:line="75" pos:column="34">buf<pos:position pos:line="75" pos:column="37"/></name></name><operator pos:line="75" pos:column="37">+<pos:position pos:line="75" pos:column="38"/></operator><name pos:line="75" pos:column="38">match<pos:position pos:line="75" pos:column="43"/></name><operator pos:line="75" pos:column="43">+<pos:position pos:line="75" pos:column="44"/></operator><name pos:line="75" pos:column="44">s_to<pos:position pos:line="75" pos:column="48"/></name></expr></argument>, <argument><expr><name><name pos:line="75" pos:column="50">ctx<pos:position pos:line="75" pos:column="53"/></name><operator pos:line="75" pos:column="53">-&gt;<pos:position pos:line="75" pos:column="58"/></operator><name pos:line="75" pos:column="55">buf<pos:position pos:line="75" pos:column="58"/></name></name><operator pos:line="75" pos:column="58">+<pos:position pos:line="75" pos:column="59"/></operator><name pos:line="75" pos:column="59">match<pos:position pos:line="75" pos:column="64"/></name><operator pos:line="75" pos:column="64">+<pos:position pos:line="75" pos:column="65"/></operator><name pos:line="75" pos:column="65">s_from<pos:position pos:line="75" pos:column="71"/></name></expr></argument>,
                            <argument><expr><name pos:line="76" pos:column="29">len<pos:position pos:line="76" pos:column="32"/></name> <operator pos:line="76" pos:column="33">+<pos:position pos:line="76" pos:column="34"/></operator> <literal type="number" pos:line="76" pos:column="35">1<pos:position pos:line="76" pos:column="36"/></literal> <operator pos:line="76" pos:column="37">-<pos:position pos:line="76" pos:column="38"/></operator> <name pos:line="76" pos:column="39">s_from<pos:position pos:line="76" pos:column="45"/></name> <operator pos:line="76" pos:column="46">-<pos:position pos:line="76" pos:column="47"/></operator> <name pos:line="76" pos:column="48">match<pos:position pos:line="76" pos:column="53"/></name></expr></argument>)<pos:position pos:line="76" pos:column="54"/></argument_list></call></expr>;<pos:position pos:line="76" pos:column="55"/></expr_stmt>
                }<pos:position pos:line="77" pos:column="18"/></block></else></if>
            }<pos:position pos:line="78" pos:column="14"/></block></for>
        }<pos:position pos:line="79" pos:column="10"/></block></else></if>
    }<pos:position pos:line="80" pos:column="6"/></block></for>
    <expr_stmt><expr><call><name pos:line="81" pos:column="5">AP_fwrite<pos:position pos:line="81" pos:column="14"/></name><argument_list pos:line="81" pos:column="14">(<argument><expr><name pos:line="81" pos:column="15">ctx<pos:position pos:line="81" pos:column="18"/></name></expr></argument>, <argument><expr><name><name pos:line="81" pos:column="20">ctx<pos:position pos:line="81" pos:column="23"/></name><operator pos:line="81" pos:column="23">-&gt;<pos:position pos:line="81" pos:column="28"/></operator><name pos:line="81" pos:column="25">buf<pos:position pos:line="81" pos:column="28"/></name></name></expr></argument>, <argument><expr><call><name pos:line="81" pos:column="30">strlen<pos:position pos:line="81" pos:column="36"/></name><argument_list pos:line="81" pos:column="36">(<argument><expr><name><name pos:line="81" pos:column="37">ctx<pos:position pos:line="81" pos:column="40"/></name><operator pos:line="81" pos:column="40">-&gt;<pos:position pos:line="81" pos:column="45"/></operator><name pos:line="81" pos:column="42">buf<pos:position pos:line="81" pos:column="45"/></name></name></expr></argument>)<pos:position pos:line="81" pos:column="46"/></argument_list></call></expr></argument>, <argument><expr><literal type="number" pos:line="81" pos:column="48">1<pos:position pos:line="81" pos:column="49"/></literal></expr></argument>)<pos:position pos:line="81" pos:column="50"/></argument_list></call></expr>;<pos:position pos:line="81" pos:column="51"/></expr_stmt>
}<pos:position pos:line="82" pos:column="2"/></block></function></unit>

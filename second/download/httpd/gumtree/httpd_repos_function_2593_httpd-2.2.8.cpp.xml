<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/httpd/gumtree/httpd_repos_function_2593_httpd-2.2.8.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">void<pos:position pos:line="1" pos:column="5"/></name></type> <name pos:line="1" pos:column="6">abts_run_test<pos:position pos:line="1" pos:column="19"/></name><parameter_list pos:line="1" pos:column="19">(<parameter><decl><type><name pos:line="1" pos:column="20">abts_suite<pos:position pos:line="1" pos:column="30"/></name> <modifier pos:line="1" pos:column="31">*<pos:position pos:line="1" pos:column="32"/></modifier></type><name pos:line="1" pos:column="32">ts<pos:position pos:line="1" pos:column="34"/></name></decl></parameter>, <parameter><decl><type><name pos:line="1" pos:column="36">test_func<pos:position pos:line="1" pos:column="45"/></name></type> <name pos:line="1" pos:column="46">f<pos:position pos:line="1" pos:column="47"/></name></decl></parameter>, <parameter><decl><type><name pos:line="1" pos:column="49">void<pos:position pos:line="1" pos:column="53"/></name> <modifier pos:line="1" pos:column="54">*<pos:position pos:line="1" pos:column="55"/></modifier></type><name pos:line="1" pos:column="55">value<pos:position pos:line="1" pos:column="60"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="61"/></parameter_list>
<block pos:line="2" pos:column="1">{
    <decl_stmt><decl><type><name pos:line="3" pos:column="5">abts_case<pos:position pos:line="3" pos:column="14"/></name> <modifier pos:line="3" pos:column="15">*<pos:position pos:line="3" pos:column="16"/></modifier></type><name pos:line="3" pos:column="16">tc<pos:position pos:line="3" pos:column="18"/></name></decl>;<pos:position pos:line="3" pos:column="19"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="4" pos:column="5">sub_suite<pos:position pos:line="4" pos:column="14"/></name> <modifier pos:line="4" pos:column="15">*<pos:position pos:line="4" pos:column="16"/></modifier></type><name pos:line="4" pos:column="16">ss<pos:position pos:line="4" pos:column="18"/></name></decl>;<pos:position pos:line="4" pos:column="19"/></decl_stmt>

    <if pos:line="6" pos:column="5">if <condition pos:line="6" pos:column="8">(<expr><operator pos:line="6" pos:column="9">!<pos:position pos:line="6" pos:column="10"/></operator><call><name pos:line="6" pos:column="10">should_test_run<pos:position pos:line="6" pos:column="25"/></name><argument_list pos:line="6" pos:column="25">(<argument><expr><name><name pos:line="6" pos:column="26">ts<pos:position pos:line="6" pos:column="28"/></name><operator pos:line="6" pos:column="28">-&gt;<pos:position pos:line="6" pos:column="33"/></operator><name pos:line="6" pos:column="30">tail<pos:position pos:line="6" pos:column="34"/></name><operator pos:line="6" pos:column="34">-&gt;<pos:position pos:line="6" pos:column="39"/></operator><name pos:line="6" pos:column="36">name<pos:position pos:line="6" pos:column="40"/></name></name></expr></argument>)<pos:position pos:line="6" pos:column="41"/></argument_list></call></expr>)<pos:position pos:line="6" pos:column="42"/></condition><then pos:line="6" pos:column="42"> <block pos:line="6" pos:column="43">{
        <return pos:line="7" pos:column="9">return;<pos:position pos:line="7" pos:column="16"/></return>
    }<pos:position pos:line="8" pos:column="6"/></block></then></if>
    <expr_stmt><expr><name pos:line="9" pos:column="5">ss<pos:position pos:line="9" pos:column="7"/></name> <operator pos:line="9" pos:column="8">=<pos:position pos:line="9" pos:column="9"/></operator> <name><name pos:line="9" pos:column="10">ts<pos:position pos:line="9" pos:column="12"/></name><operator pos:line="9" pos:column="12">-&gt;<pos:position pos:line="9" pos:column="17"/></operator><name pos:line="9" pos:column="14">tail<pos:position pos:line="9" pos:column="18"/></name></name></expr>;<pos:position pos:line="9" pos:column="19"/></expr_stmt>

    <expr_stmt><expr><name pos:line="11" pos:column="5">tc<pos:position pos:line="11" pos:column="7"/></name> <operator pos:line="11" pos:column="8">=<pos:position pos:line="11" pos:column="9"/></operator> <call><name pos:line="11" pos:column="10">malloc<pos:position pos:line="11" pos:column="16"/></name><argument_list pos:line="11" pos:column="16">(<argument><expr><sizeof pos:line="11" pos:column="17">sizeof<argument_list pos:line="11" pos:column="23">(<argument><expr><operator pos:line="11" pos:column="24">*<pos:position pos:line="11" pos:column="25"/></operator><name pos:line="11" pos:column="25">tc<pos:position pos:line="11" pos:column="27"/></name></expr></argument>)<pos:position pos:line="11" pos:column="28"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="11" pos:column="29"/></argument_list></call></expr>;<pos:position pos:line="11" pos:column="30"/></expr_stmt>
    <expr_stmt><expr><name><name pos:line="12" pos:column="5">tc<pos:position pos:line="12" pos:column="7"/></name><operator pos:line="12" pos:column="7">-&gt;<pos:position pos:line="12" pos:column="12"/></operator><name pos:line="12" pos:column="9">failed<pos:position pos:line="12" pos:column="15"/></name></name> <operator pos:line="12" pos:column="16">=<pos:position pos:line="12" pos:column="17"/></operator> <literal type="number" pos:line="12" pos:column="18">0<pos:position pos:line="12" pos:column="19"/></literal></expr>;<pos:position pos:line="12" pos:column="20"/></expr_stmt>
    <expr_stmt><expr><name><name pos:line="13" pos:column="5">tc<pos:position pos:line="13" pos:column="7"/></name><operator pos:line="13" pos:column="7">-&gt;<pos:position pos:line="13" pos:column="12"/></operator><name pos:line="13" pos:column="9">suite<pos:position pos:line="13" pos:column="14"/></name></name> <operator pos:line="13" pos:column="15">=<pos:position pos:line="13" pos:column="16"/></operator> <name pos:line="13" pos:column="17">ss<pos:position pos:line="13" pos:column="19"/></name></expr>;<pos:position pos:line="13" pos:column="20"/></expr_stmt>
    
    <expr_stmt><expr><name><name pos:line="15" pos:column="5">ss<pos:position pos:line="15" pos:column="7"/></name><operator pos:line="15" pos:column="7">-&gt;<pos:position pos:line="15" pos:column="12"/></operator><name pos:line="15" pos:column="9">num_test<pos:position pos:line="15" pos:column="17"/></name></name><operator pos:line="15" pos:column="17">++<pos:position pos:line="15" pos:column="19"/></operator></expr>;<pos:position pos:line="15" pos:column="20"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="16" pos:column="5">update_status<pos:position pos:line="16" pos:column="18"/></name><argument_list pos:line="16" pos:column="18">()<pos:position pos:line="16" pos:column="20"/></argument_list></call></expr>;<pos:position pos:line="16" pos:column="21"/></expr_stmt>

    <expr_stmt><expr><call><name pos:line="18" pos:column="5">f<pos:position pos:line="18" pos:column="6"/></name><argument_list pos:line="18" pos:column="6">(<argument><expr><name pos:line="18" pos:column="7">tc<pos:position pos:line="18" pos:column="9"/></name></expr></argument>, <argument><expr><name pos:line="18" pos:column="11">value<pos:position pos:line="18" pos:column="16"/></name></expr></argument>)<pos:position pos:line="18" pos:column="17"/></argument_list></call></expr>;<pos:position pos:line="18" pos:column="18"/></expr_stmt>
    
    <if pos:line="20" pos:column="5">if <condition pos:line="20" pos:column="8">(<expr><name><name pos:line="20" pos:column="9">tc<pos:position pos:line="20" pos:column="11"/></name><operator pos:line="20" pos:column="11">-&gt;<pos:position pos:line="20" pos:column="16"/></operator><name pos:line="20" pos:column="13">failed<pos:position pos:line="20" pos:column="19"/></name></name></expr>)<pos:position pos:line="20" pos:column="20"/></condition><then pos:line="20" pos:column="20"> <block pos:line="20" pos:column="21">{
        <expr_stmt><expr><name><name pos:line="21" pos:column="9">ss<pos:position pos:line="21" pos:column="11"/></name><operator pos:line="21" pos:column="11">-&gt;<pos:position pos:line="21" pos:column="16"/></operator><name pos:line="21" pos:column="13">failed<pos:position pos:line="21" pos:column="19"/></name></name><operator pos:line="21" pos:column="19">++<pos:position pos:line="21" pos:column="21"/></operator></expr>;<pos:position pos:line="21" pos:column="22"/></expr_stmt>
    }<pos:position pos:line="22" pos:column="6"/></block></then></if>
    <expr_stmt><expr><call><name pos:line="23" pos:column="5">free<pos:position pos:line="23" pos:column="9"/></name><argument_list pos:line="23" pos:column="9">(<argument><expr><name pos:line="23" pos:column="10">tc<pos:position pos:line="23" pos:column="12"/></name></expr></argument>)<pos:position pos:line="23" pos:column="13"/></argument_list></call></expr>;<pos:position pos:line="23" pos:column="14"/></expr_stmt>
}<pos:position pos:line="24" pos:column="2"/></block></function></unit>

<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/httpd/gumtree/httpd_repos_function_1562_httpd-2.2.23.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">apr_status_t<pos:position pos:line="1" pos:column="20"/></name></type> <name pos:line="1" pos:column="21">ajp_unmarshal_response<pos:position pos:line="1" pos:column="43"/></name><parameter_list pos:line="1" pos:column="43">(<parameter><decl><type><name pos:line="1" pos:column="44">ajp_msg_t<pos:position pos:line="1" pos:column="53"/></name> <modifier pos:line="1" pos:column="54">*<pos:position pos:line="1" pos:column="55"/></modifier></type><name pos:line="1" pos:column="55">msg<pos:position pos:line="1" pos:column="58"/></name></decl></parameter>,
                                           <parameter><decl><type><name pos:line="2" pos:column="44">request_rec<pos:position pos:line="2" pos:column="55"/></name> <modifier pos:line="2" pos:column="56">*<pos:position pos:line="2" pos:column="57"/></modifier></type><name pos:line="2" pos:column="57">r<pos:position pos:line="2" pos:column="58"/></name></decl></parameter>,
                                           <parameter><decl><type><name pos:line="3" pos:column="44">proxy_dir_conf<pos:position pos:line="3" pos:column="58"/></name> <modifier pos:line="3" pos:column="59">*<pos:position pos:line="3" pos:column="60"/></modifier></type><name pos:line="3" pos:column="60">dconf<pos:position pos:line="3" pos:column="65"/></name></decl></parameter>)<pos:position pos:line="3" pos:column="66"/></parameter_list>
<block pos:line="4" pos:column="1">{
    <decl_stmt><decl><type><name pos:line="5" pos:column="5">apr_uint16_t<pos:position pos:line="5" pos:column="17"/></name></type> <name pos:line="5" pos:column="18">status<pos:position pos:line="5" pos:column="24"/></name></decl>;<pos:position pos:line="5" pos:column="25"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="6" pos:column="5">apr_status_t<pos:position pos:line="6" pos:column="17"/></name></type> <name pos:line="6" pos:column="18">rc<pos:position pos:line="6" pos:column="20"/></name></decl>;<pos:position pos:line="6" pos:column="21"/></decl_stmt>
    <decl_stmt><decl><type><specifier pos:line="7" pos:column="5">const<pos:position pos:line="7" pos:column="10"/></specifier> <name pos:line="7" pos:column="11">char<pos:position pos:line="7" pos:column="15"/></name> <modifier pos:line="7" pos:column="16">*<pos:position pos:line="7" pos:column="17"/></modifier></type><name pos:line="7" pos:column="17">ptr<pos:position pos:line="7" pos:column="20"/></name></decl>;<pos:position pos:line="7" pos:column="21"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="8" pos:column="5">apr_uint16_t<pos:position pos:line="8" pos:column="17"/></name></type>  <name pos:line="8" pos:column="19">num_headers<pos:position pos:line="8" pos:column="30"/></name></decl>;<pos:position pos:line="8" pos:column="31"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="9" pos:column="5">int<pos:position pos:line="9" pos:column="8"/></name></type> <name pos:line="9" pos:column="9">i<pos:position pos:line="9" pos:column="10"/></name></decl>;<pos:position pos:line="9" pos:column="11"/></decl_stmt>

    <expr_stmt><expr><name pos:line="11" pos:column="5">rc<pos:position pos:line="11" pos:column="7"/></name> <operator pos:line="11" pos:column="8">=<pos:position pos:line="11" pos:column="9"/></operator> <call><name pos:line="11" pos:column="10">ajp_msg_get_uint16<pos:position pos:line="11" pos:column="28"/></name><argument_list pos:line="11" pos:column="28">(<argument><expr><name pos:line="11" pos:column="29">msg<pos:position pos:line="11" pos:column="32"/></name></expr></argument>, <argument><expr><operator pos:line="11" pos:column="34">&amp;<pos:position pos:line="11" pos:column="39"/></operator><name pos:line="11" pos:column="35">status<pos:position pos:line="11" pos:column="41"/></name></expr></argument>)<pos:position pos:line="11" pos:column="42"/></argument_list></call></expr>;<pos:position pos:line="11" pos:column="43"/></expr_stmt>

    <if pos:line="13" pos:column="5">if <condition pos:line="13" pos:column="8">(<expr><name pos:line="13" pos:column="9">rc<pos:position pos:line="13" pos:column="11"/></name> <operator pos:line="13" pos:column="12">!=<pos:position pos:line="13" pos:column="14"/></operator> <name pos:line="13" pos:column="15">APR_SUCCESS<pos:position pos:line="13" pos:column="26"/></name></expr>)<pos:position pos:line="13" pos:column="27"/></condition><then pos:line="13" pos:column="27"> <block pos:line="13" pos:column="28">{
         <expr_stmt><expr><call><name pos:line="14" pos:column="10">ap_log_error<pos:position pos:line="14" pos:column="22"/></name><argument_list pos:line="14" pos:column="22">(<argument><expr><name pos:line="14" pos:column="23">APLOG_MARK<pos:position pos:line="14" pos:column="33"/></name></expr></argument>, <argument><expr><name pos:line="14" pos:column="35">APLOG_ERR<pos:position pos:line="14" pos:column="44"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="14" pos:column="46">0<pos:position pos:line="14" pos:column="47"/></literal></expr></argument>, <argument><expr><name><name pos:line="14" pos:column="49">r<pos:position pos:line="14" pos:column="50"/></name><operator pos:line="14" pos:column="50">-&gt;<pos:position pos:line="14" pos:column="55"/></operator><name pos:line="14" pos:column="52">server<pos:position pos:line="14" pos:column="58"/></name></name></expr></argument>,
                <argument><expr><literal type="string" pos:line="15" pos:column="17">"ajp_unmarshal_response: Null status"<pos:position pos:line="15" pos:column="54"/></literal></expr></argument>)<pos:position pos:line="15" pos:column="55"/></argument_list></call></expr>;<pos:position pos:line="15" pos:column="56"/></expr_stmt>
        <return pos:line="16" pos:column="9">return <expr><name pos:line="16" pos:column="16">rc<pos:position pos:line="16" pos:column="18"/></name></expr>;<pos:position pos:line="16" pos:column="19"/></return>
    }<pos:position pos:line="17" pos:column="6"/></block></then></if>
    <expr_stmt><expr><name><name pos:line="18" pos:column="5">r<pos:position pos:line="18" pos:column="6"/></name><operator pos:line="18" pos:column="6">-&gt;<pos:position pos:line="18" pos:column="11"/></operator><name pos:line="18" pos:column="8">status<pos:position pos:line="18" pos:column="14"/></name></name> <operator pos:line="18" pos:column="15">=<pos:position pos:line="18" pos:column="16"/></operator> <name pos:line="18" pos:column="17">status<pos:position pos:line="18" pos:column="23"/></name></expr>;<pos:position pos:line="18" pos:column="24"/></expr_stmt>

    <expr_stmt><expr><name pos:line="20" pos:column="5">rc<pos:position pos:line="20" pos:column="7"/></name> <operator pos:line="20" pos:column="8">=<pos:position pos:line="20" pos:column="9"/></operator> <call><name pos:line="20" pos:column="10">ajp_msg_get_string<pos:position pos:line="20" pos:column="28"/></name><argument_list pos:line="20" pos:column="28">(<argument><expr><name pos:line="20" pos:column="29">msg<pos:position pos:line="20" pos:column="32"/></name></expr></argument>, <argument><expr><operator pos:line="20" pos:column="34">&amp;<pos:position pos:line="20" pos:column="39"/></operator><name pos:line="20" pos:column="35">ptr<pos:position pos:line="20" pos:column="38"/></name></expr></argument>)<pos:position pos:line="20" pos:column="39"/></argument_list></call></expr>;<pos:position pos:line="20" pos:column="40"/></expr_stmt>
    <if pos:line="21" pos:column="5">if <condition pos:line="21" pos:column="8">(<expr><name pos:line="21" pos:column="9">rc<pos:position pos:line="21" pos:column="11"/></name> <operator pos:line="21" pos:column="12">==<pos:position pos:line="21" pos:column="14"/></operator> <name pos:line="21" pos:column="15">APR_SUCCESS<pos:position pos:line="21" pos:column="26"/></name></expr>)<pos:position pos:line="21" pos:column="27"/></condition><then pos:line="21" pos:column="27"> <block pos:line="21" pos:column="28">{
<cpp:if pos:line="22" pos:column="1">#<cpp:directive pos:line="22" pos:column="2">if<pos:position pos:line="22" pos:column="4"/></cpp:directive> <expr><call><name pos:line="22" pos:column="5">defined<pos:position pos:line="22" pos:column="12"/></name><argument_list pos:line="22" pos:column="12">(<argument><expr><name pos:line="22" pos:column="13">AS400<pos:position pos:line="22" pos:column="18"/></name></expr></argument>)<pos:position pos:line="22" pos:column="19"/></argument_list></call> <operator pos:line="22" pos:column="20">||<pos:position pos:line="22" pos:column="22"/></operator> <call><name pos:line="22" pos:column="23">defined<pos:position pos:line="22" pos:column="30"/></name><argument_list pos:line="22" pos:column="30">(<argument><expr><name pos:line="22" pos:column="31">_OSD_POSIX<pos:position pos:line="22" pos:column="41"/></name></expr></argument>)<pos:position pos:line="22" pos:column="42"/></argument_list></call></expr></cpp:if> <comment type="block" pos:line="22" pos:column="43">/* EBCDIC platforms */</comment>
        <expr_stmt><expr><name pos:line="23" pos:column="9">ptr<pos:position pos:line="23" pos:column="12"/></name> <operator pos:line="23" pos:column="13">=<pos:position pos:line="23" pos:column="14"/></operator> <call><name pos:line="23" pos:column="15">apr_pstrdup<pos:position pos:line="23" pos:column="26"/></name><argument_list pos:line="23" pos:column="26">(<argument><expr><name><name pos:line="23" pos:column="27">r<pos:position pos:line="23" pos:column="28"/></name><operator pos:line="23" pos:column="28">-&gt;<pos:position pos:line="23" pos:column="33"/></operator><name pos:line="23" pos:column="30">pool<pos:position pos:line="23" pos:column="34"/></name></name></expr></argument>, <argument><expr><name pos:line="23" pos:column="36">ptr<pos:position pos:line="23" pos:column="39"/></name></expr></argument>)<pos:position pos:line="23" pos:column="40"/></argument_list></call></expr>;<pos:position pos:line="23" pos:column="41"/></expr_stmt>
        <expr_stmt><expr><call><name pos:line="24" pos:column="9">ap_xlate_proto_from_ascii<pos:position pos:line="24" pos:column="34"/></name><argument_list pos:line="24" pos:column="34">(<argument><expr><name pos:line="24" pos:column="35">ptr<pos:position pos:line="24" pos:column="38"/></name></expr></argument>, <argument><expr><call><name pos:line="24" pos:column="40">strlen<pos:position pos:line="24" pos:column="46"/></name><argument_list pos:line="24" pos:column="46">(<argument><expr><name pos:line="24" pos:column="47">ptr<pos:position pos:line="24" pos:column="50"/></name></expr></argument>)<pos:position pos:line="24" pos:column="51"/></argument_list></call></expr></argument>)<pos:position pos:line="24" pos:column="52"/></argument_list></call></expr>;<pos:position pos:line="24" pos:column="53"/></expr_stmt>
<cpp:endif pos:line="25" pos:column="1">#<cpp:directive pos:line="25" pos:column="2">endif<pos:position pos:line="25" pos:column="7"/></cpp:directive></cpp:endif>
        <expr_stmt><expr><name><name pos:line="26" pos:column="9">r<pos:position pos:line="26" pos:column="10"/></name><operator pos:line="26" pos:column="10">-&gt;<pos:position pos:line="26" pos:column="15"/></operator><name pos:line="26" pos:column="12">status_line<pos:position pos:line="26" pos:column="23"/></name></name> <operator pos:line="26" pos:column="24">=<pos:position pos:line="26" pos:column="25"/></operator>  <call><name pos:line="26" pos:column="27">apr_psprintf<pos:position pos:line="26" pos:column="39"/></name><argument_list pos:line="26" pos:column="39">(<argument><expr><name><name pos:line="26" pos:column="40">r<pos:position pos:line="26" pos:column="41"/></name><operator pos:line="26" pos:column="41">-&gt;<pos:position pos:line="26" pos:column="46"/></operator><name pos:line="26" pos:column="43">pool<pos:position pos:line="26" pos:column="47"/></name></name></expr></argument>, <argument><expr><literal type="string" pos:line="26" pos:column="49">"%d %s"<pos:position pos:line="26" pos:column="56"/></literal></expr></argument>, <argument><expr><name pos:line="26" pos:column="58">status<pos:position pos:line="26" pos:column="64"/></name></expr></argument>, <argument><expr><name pos:line="26" pos:column="66">ptr<pos:position pos:line="26" pos:column="69"/></name></expr></argument>)<pos:position pos:line="26" pos:column="70"/></argument_list></call></expr>;<pos:position pos:line="26" pos:column="71"/></expr_stmt>
    }<pos:position pos:line="27" pos:column="6"/></block></then> <else pos:line="27" pos:column="7">else <block pos:line="27" pos:column="12">{
        <expr_stmt><expr><name><name pos:line="28" pos:column="9">r<pos:position pos:line="28" pos:column="10"/></name><operator pos:line="28" pos:column="10">-&gt;<pos:position pos:line="28" pos:column="15"/></operator><name pos:line="28" pos:column="12">status_line<pos:position pos:line="28" pos:column="23"/></name></name> <operator pos:line="28" pos:column="24">=<pos:position pos:line="28" pos:column="25"/></operator> <name pos:line="28" pos:column="26">NULL<pos:position pos:line="28" pos:column="30"/></name></expr>;<pos:position pos:line="28" pos:column="31"/></expr_stmt>
    }<pos:position pos:line="29" pos:column="6"/></block></else></if>

    <expr_stmt><expr><call><name pos:line="31" pos:column="5">ap_log_error<pos:position pos:line="31" pos:column="17"/></name><argument_list pos:line="31" pos:column="17">(<argument><expr><name pos:line="31" pos:column="18">APLOG_MARK<pos:position pos:line="31" pos:column="28"/></name></expr></argument>, <argument><expr><name pos:line="31" pos:column="30">APLOG_DEBUG<pos:position pos:line="31" pos:column="41"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="31" pos:column="43">0<pos:position pos:line="31" pos:column="44"/></literal></expr></argument>, <argument><expr><name><name pos:line="31" pos:column="46">r<pos:position pos:line="31" pos:column="47"/></name><operator pos:line="31" pos:column="47">-&gt;<pos:position pos:line="31" pos:column="52"/></operator><name pos:line="31" pos:column="49">server<pos:position pos:line="31" pos:column="55"/></name></name></expr></argument>,
           <argument><expr><literal type="string" pos:line="32" pos:column="12">"ajp_unmarshal_response: status = %d"<pos:position pos:line="32" pos:column="49"/></literal></expr></argument>, <argument><expr><name pos:line="32" pos:column="51">status<pos:position pos:line="32" pos:column="57"/></name></expr></argument>)<pos:position pos:line="32" pos:column="58"/></argument_list></call></expr>;<pos:position pos:line="32" pos:column="59"/></expr_stmt>

    <expr_stmt><expr><name pos:line="34" pos:column="5">rc<pos:position pos:line="34" pos:column="7"/></name> <operator pos:line="34" pos:column="8">=<pos:position pos:line="34" pos:column="9"/></operator> <call><name pos:line="34" pos:column="10">ajp_msg_get_uint16<pos:position pos:line="34" pos:column="28"/></name><argument_list pos:line="34" pos:column="28">(<argument><expr><name pos:line="34" pos:column="29">msg<pos:position pos:line="34" pos:column="32"/></name></expr></argument>, <argument><expr><operator pos:line="34" pos:column="34">&amp;<pos:position pos:line="34" pos:column="39"/></operator><name pos:line="34" pos:column="35">num_headers<pos:position pos:line="34" pos:column="46"/></name></expr></argument>)<pos:position pos:line="34" pos:column="47"/></argument_list></call></expr>;<pos:position pos:line="34" pos:column="48"/></expr_stmt>
    <if pos:line="35" pos:column="5">if <condition pos:line="35" pos:column="8">(<expr><name pos:line="35" pos:column="9">rc<pos:position pos:line="35" pos:column="11"/></name> <operator pos:line="35" pos:column="12">==<pos:position pos:line="35" pos:column="14"/></operator> <name pos:line="35" pos:column="15">APR_SUCCESS<pos:position pos:line="35" pos:column="26"/></name></expr>)<pos:position pos:line="35" pos:column="27"/></condition><then pos:line="35" pos:column="27"> <block pos:line="35" pos:column="28">{
        <decl_stmt><decl><type><name pos:line="36" pos:column="9">apr_table_t<pos:position pos:line="36" pos:column="20"/></name> <modifier pos:line="36" pos:column="21">*<pos:position pos:line="36" pos:column="22"/></modifier></type><name pos:line="36" pos:column="22">save_table<pos:position pos:line="36" pos:column="32"/></name></decl>;<pos:position pos:line="36" pos:column="33"/></decl_stmt>

        <comment type="block" pos:line="38" pos:column="9">/* First, tuck away all already existing cookies */</comment>
        <comment type="block" pos:line="39" pos:column="9">/*
         * Could optimize here, but just in case we want to
         * also save other headers, keep this logic.
         */</comment>
        <expr_stmt><expr><name pos:line="43" pos:column="9">save_table<pos:position pos:line="43" pos:column="19"/></name> <operator pos:line="43" pos:column="20">=<pos:position pos:line="43" pos:column="21"/></operator> <call><name pos:line="43" pos:column="22">apr_table_make<pos:position pos:line="43" pos:column="36"/></name><argument_list pos:line="43" pos:column="36">(<argument><expr><name><name pos:line="43" pos:column="37">r<pos:position pos:line="43" pos:column="38"/></name><operator pos:line="43" pos:column="38">-&gt;<pos:position pos:line="43" pos:column="43"/></operator><name pos:line="43" pos:column="40">pool<pos:position pos:line="43" pos:column="44"/></name></name></expr></argument>, <argument><expr><name pos:line="43" pos:column="46">num_headers<pos:position pos:line="43" pos:column="57"/></name> <operator pos:line="43" pos:column="58">+<pos:position pos:line="43" pos:column="59"/></operator> <literal type="number" pos:line="43" pos:column="60">2<pos:position pos:line="43" pos:column="61"/></literal></expr></argument>)<pos:position pos:line="43" pos:column="62"/></argument_list></call></expr>;<pos:position pos:line="43" pos:column="63"/></expr_stmt>
        <expr_stmt><expr><call><name pos:line="44" pos:column="9">apr_table_do<pos:position pos:line="44" pos:column="21"/></name><argument_list pos:line="44" pos:column="21">(<argument><expr><name pos:line="44" pos:column="22">addit_dammit<pos:position pos:line="44" pos:column="34"/></name></expr></argument>, <argument><expr><name pos:line="44" pos:column="36">save_table<pos:position pos:line="44" pos:column="46"/></name></expr></argument>, <argument><expr><name><name pos:line="44" pos:column="48">r<pos:position pos:line="44" pos:column="49"/></name><operator pos:line="44" pos:column="49">-&gt;<pos:position pos:line="44" pos:column="54"/></operator><name pos:line="44" pos:column="51">headers_out<pos:position pos:line="44" pos:column="62"/></name></name></expr></argument>,
                     <argument><expr><literal type="string" pos:line="45" pos:column="22">"Set-Cookie"<pos:position pos:line="45" pos:column="34"/></literal></expr></argument>, <argument><expr><name pos:line="45" pos:column="36">NULL<pos:position pos:line="45" pos:column="40"/></name></expr></argument>)<pos:position pos:line="45" pos:column="41"/></argument_list></call></expr>;<pos:position pos:line="45" pos:column="42"/></expr_stmt>
        <expr_stmt><expr><name><name pos:line="46" pos:column="9">r<pos:position pos:line="46" pos:column="10"/></name><operator pos:line="46" pos:column="10">-&gt;<pos:position pos:line="46" pos:column="15"/></operator><name pos:line="46" pos:column="12">headers_out<pos:position pos:line="46" pos:column="23"/></name></name> <operator pos:line="46" pos:column="24">=<pos:position pos:line="46" pos:column="25"/></operator> <name pos:line="46" pos:column="26">save_table<pos:position pos:line="46" pos:column="36"/></name></expr>;<pos:position pos:line="46" pos:column="37"/></expr_stmt>
    }<pos:position pos:line="47" pos:column="6"/></block></then> <else pos:line="47" pos:column="7">else <block pos:line="47" pos:column="12">{
        <expr_stmt><expr><name><name pos:line="48" pos:column="9">r<pos:position pos:line="48" pos:column="10"/></name><operator pos:line="48" pos:column="10">-&gt;<pos:position pos:line="48" pos:column="15"/></operator><name pos:line="48" pos:column="12">headers_out<pos:position pos:line="48" pos:column="23"/></name></name> <operator pos:line="48" pos:column="24">=<pos:position pos:line="48" pos:column="25"/></operator> <name pos:line="48" pos:column="26">NULL<pos:position pos:line="48" pos:column="30"/></name></expr>;<pos:position pos:line="48" pos:column="31"/></expr_stmt>
        <expr_stmt><expr><name pos:line="49" pos:column="9">num_headers<pos:position pos:line="49" pos:column="20"/></name> <operator pos:line="49" pos:column="21">=<pos:position pos:line="49" pos:column="22"/></operator> <literal type="number" pos:line="49" pos:column="23">0<pos:position pos:line="49" pos:column="24"/></literal></expr>;<pos:position pos:line="49" pos:column="25"/></expr_stmt>
    }<pos:position pos:line="50" pos:column="6"/></block></else></if>

    <expr_stmt><expr><call><name pos:line="52" pos:column="5">ap_log_error<pos:position pos:line="52" pos:column="17"/></name><argument_list pos:line="52" pos:column="17">(<argument><expr><name pos:line="52" pos:column="18">APLOG_MARK<pos:position pos:line="52" pos:column="28"/></name></expr></argument>, <argument><expr><name pos:line="52" pos:column="30">APLOG_DEBUG<pos:position pos:line="52" pos:column="41"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="52" pos:column="43">0<pos:position pos:line="52" pos:column="44"/></literal></expr></argument>, <argument><expr><name><name pos:line="52" pos:column="46">r<pos:position pos:line="52" pos:column="47"/></name><operator pos:line="52" pos:column="47">-&gt;<pos:position pos:line="52" pos:column="52"/></operator><name pos:line="52" pos:column="49">server<pos:position pos:line="52" pos:column="55"/></name></name></expr></argument>,
           <argument><expr><literal type="string" pos:line="53" pos:column="12">"ajp_unmarshal_response: Number of headers is = %d"<pos:position pos:line="53" pos:column="63"/></literal></expr></argument>,
           <argument><expr><name pos:line="54" pos:column="12">num_headers<pos:position pos:line="54" pos:column="23"/></name></expr></argument>)<pos:position pos:line="54" pos:column="24"/></argument_list></call></expr>;<pos:position pos:line="54" pos:column="25"/></expr_stmt>

    <for pos:line="56" pos:column="5">for<control pos:line="56" pos:column="8">(<init><expr><name pos:line="56" pos:column="9">i<pos:position pos:line="56" pos:column="10"/></name> <operator pos:line="56" pos:column="11">=<pos:position pos:line="56" pos:column="12"/></operator> <literal type="number" pos:line="56" pos:column="13">0<pos:position pos:line="56" pos:column="14"/></literal></expr> ;<pos:position pos:line="56" pos:column="16"/></init> <condition><expr><name pos:line="56" pos:column="17">i<pos:position pos:line="56" pos:column="18"/></name> <operator pos:line="56" pos:column="19">&lt;<pos:position pos:line="56" pos:column="23"/></operator> <operator pos:line="56" pos:column="21">(<pos:position pos:line="56" pos:column="22"/></operator><name pos:line="56" pos:column="22">int<pos:position pos:line="56" pos:column="25"/></name><operator pos:line="56" pos:column="25">)<pos:position pos:line="56" pos:column="26"/></operator> <name pos:line="56" pos:column="27">num_headers<pos:position pos:line="56" pos:column="38"/></name></expr> ;<pos:position pos:line="56" pos:column="40"/></condition> <incr><expr><name pos:line="56" pos:column="41">i<pos:position pos:line="56" pos:column="42"/></name><operator pos:line="56" pos:column="42">++<pos:position pos:line="56" pos:column="44"/></operator></expr></incr>)<pos:position pos:line="56" pos:column="45"/></control> <block pos:line="56" pos:column="46">{
        <decl_stmt><decl><type><name pos:line="57" pos:column="9">apr_uint16_t<pos:position pos:line="57" pos:column="21"/></name></type> <name pos:line="57" pos:column="22">name<pos:position pos:line="57" pos:column="26"/></name></decl>;<pos:position pos:line="57" pos:column="27"/></decl_stmt>
        <decl_stmt><decl><type><specifier pos:line="58" pos:column="9">const<pos:position pos:line="58" pos:column="14"/></specifier> <name pos:line="58" pos:column="15">char<pos:position pos:line="58" pos:column="19"/></name> <modifier pos:line="58" pos:column="20">*<pos:position pos:line="58" pos:column="21"/></modifier></type><name pos:line="58" pos:column="21">stringname<pos:position pos:line="58" pos:column="31"/></name></decl>;<pos:position pos:line="58" pos:column="32"/></decl_stmt>
        <decl_stmt><decl><type><specifier pos:line="59" pos:column="9">const<pos:position pos:line="59" pos:column="14"/></specifier> <name pos:line="59" pos:column="15">char<pos:position pos:line="59" pos:column="19"/></name> <modifier pos:line="59" pos:column="20">*<pos:position pos:line="59" pos:column="21"/></modifier></type><name pos:line="59" pos:column="21">value<pos:position pos:line="59" pos:column="26"/></name></decl>;<pos:position pos:line="59" pos:column="27"/></decl_stmt>
        <expr_stmt><expr><name pos:line="60" pos:column="9">rc<pos:position pos:line="60" pos:column="11"/></name>  <operator pos:line="60" pos:column="13">=<pos:position pos:line="60" pos:column="14"/></operator> <call><name pos:line="60" pos:column="15">ajp_msg_peek_uint16<pos:position pos:line="60" pos:column="34"/></name><argument_list pos:line="60" pos:column="34">(<argument><expr><name pos:line="60" pos:column="35">msg<pos:position pos:line="60" pos:column="38"/></name></expr></argument>, <argument><expr><operator pos:line="60" pos:column="40">&amp;<pos:position pos:line="60" pos:column="45"/></operator><name pos:line="60" pos:column="41">name<pos:position pos:line="60" pos:column="45"/></name></expr></argument>)<pos:position pos:line="60" pos:column="46"/></argument_list></call></expr>;<pos:position pos:line="60" pos:column="47"/></expr_stmt>
        <if pos:line="61" pos:column="9">if <condition pos:line="61" pos:column="12">(<expr><name pos:line="61" pos:column="13">rc<pos:position pos:line="61" pos:column="15"/></name> <operator pos:line="61" pos:column="16">!=<pos:position pos:line="61" pos:column="18"/></operator> <name pos:line="61" pos:column="19">APR_SUCCESS<pos:position pos:line="61" pos:column="30"/></name></expr>)<pos:position pos:line="61" pos:column="31"/></condition><then pos:line="61" pos:column="31"> <block pos:line="61" pos:column="32">{
            <return pos:line="62" pos:column="13">return <expr><name pos:line="62" pos:column="20">rc<pos:position pos:line="62" pos:column="22"/></name></expr>;<pos:position pos:line="62" pos:column="23"/></return>
        }<pos:position pos:line="63" pos:column="10"/></block></then></if>

        <if pos:line="65" pos:column="9">if <condition pos:line="65" pos:column="12">(<expr><operator pos:line="65" pos:column="13">(<pos:position pos:line="65" pos:column="14"/></operator><name pos:line="65" pos:column="14">name<pos:position pos:line="65" pos:column="18"/></name> <operator pos:line="65" pos:column="19">&amp;<pos:position pos:line="65" pos:column="24"/></operator> <literal type="number" pos:line="65" pos:column="21">0XFF00<pos:position pos:line="65" pos:column="27"/></literal><operator pos:line="65" pos:column="27">)<pos:position pos:line="65" pos:column="28"/></operator> <operator pos:line="65" pos:column="29">==<pos:position pos:line="65" pos:column="31"/></operator> <literal type="number" pos:line="65" pos:column="32">0XA000<pos:position pos:line="65" pos:column="38"/></literal></expr>)<pos:position pos:line="65" pos:column="39"/></condition><then pos:line="65" pos:column="39"> <block pos:line="65" pos:column="40">{
            <expr_stmt><expr><call><name pos:line="66" pos:column="13">ajp_msg_get_uint16<pos:position pos:line="66" pos:column="31"/></name><argument_list pos:line="66" pos:column="31">(<argument><expr><name pos:line="66" pos:column="32">msg<pos:position pos:line="66" pos:column="35"/></name></expr></argument>, <argument><expr><operator pos:line="66" pos:column="37">&amp;<pos:position pos:line="66" pos:column="42"/></operator><name pos:line="66" pos:column="38">name<pos:position pos:line="66" pos:column="42"/></name></expr></argument>)<pos:position pos:line="66" pos:column="43"/></argument_list></call></expr>;<pos:position pos:line="66" pos:column="44"/></expr_stmt>
            <expr_stmt><expr><name pos:line="67" pos:column="13">stringname<pos:position pos:line="67" pos:column="23"/></name> <operator pos:line="67" pos:column="24">=<pos:position pos:line="67" pos:column="25"/></operator> <call><name pos:line="67" pos:column="26">long_res_header_for_sc<pos:position pos:line="67" pos:column="48"/></name><argument_list pos:line="67" pos:column="48">(<argument><expr><name pos:line="67" pos:column="49">name<pos:position pos:line="67" pos:column="53"/></name></expr></argument>)<pos:position pos:line="67" pos:column="54"/></argument_list></call></expr>;<pos:position pos:line="67" pos:column="55"/></expr_stmt>
            <if pos:line="68" pos:column="13">if <condition pos:line="68" pos:column="16">(<expr><name pos:line="68" pos:column="17">stringname<pos:position pos:line="68" pos:column="27"/></name> <operator pos:line="68" pos:column="28">==<pos:position pos:line="68" pos:column="30"/></operator> <name pos:line="68" pos:column="31">NULL<pos:position pos:line="68" pos:column="35"/></name></expr>)<pos:position pos:line="68" pos:column="36"/></condition><then pos:line="68" pos:column="36"> <block pos:line="68" pos:column="37">{
                <expr_stmt><expr><call><name pos:line="69" pos:column="17">ap_log_error<pos:position pos:line="69" pos:column="29"/></name><argument_list pos:line="69" pos:column="29">(<argument><expr><name pos:line="69" pos:column="30">APLOG_MARK<pos:position pos:line="69" pos:column="40"/></name></expr></argument>, <argument><expr><name pos:line="69" pos:column="42">APLOG_ERR<pos:position pos:line="69" pos:column="51"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="69" pos:column="53">0<pos:position pos:line="69" pos:column="54"/></literal></expr></argument>, <argument><expr><name><name pos:line="69" pos:column="56">r<pos:position pos:line="69" pos:column="57"/></name><operator pos:line="69" pos:column="57">-&gt;<pos:position pos:line="69" pos:column="62"/></operator><name pos:line="69" pos:column="59">server<pos:position pos:line="69" pos:column="65"/></name></name></expr></argument>,
                       <argument><expr><literal type="string" pos:line="70" pos:column="24">"ajp_unmarshal_response: "<pos:position pos:line="70" pos:column="50"/></literal>
                       <literal type="string" pos:line="71" pos:column="24">"No such sc (%08x)"<pos:position pos:line="71" pos:column="43"/></literal></expr></argument>,
                       <argument><expr><name pos:line="72" pos:column="24">name<pos:position pos:line="72" pos:column="28"/></name></expr></argument>)<pos:position pos:line="72" pos:column="29"/></argument_list></call></expr>;<pos:position pos:line="72" pos:column="30"/></expr_stmt>
                <return pos:line="73" pos:column="17">return <expr><name pos:line="73" pos:column="24">AJP_EBAD_HEADER<pos:position pos:line="73" pos:column="39"/></name></expr>;<pos:position pos:line="73" pos:column="40"/></return>
            }<pos:position pos:line="74" pos:column="14"/></block></then></if>
        }<pos:position pos:line="75" pos:column="10"/></block></then> <else pos:line="75" pos:column="11">else <block pos:line="75" pos:column="16">{
            <expr_stmt><expr><name pos:line="76" pos:column="13">name<pos:position pos:line="76" pos:column="17"/></name> <operator pos:line="76" pos:column="18">=<pos:position pos:line="76" pos:column="19"/></operator> <literal type="number" pos:line="76" pos:column="20">0<pos:position pos:line="76" pos:column="21"/></literal></expr>;<pos:position pos:line="76" pos:column="22"/></expr_stmt>
            <expr_stmt><expr><name pos:line="77" pos:column="13">rc<pos:position pos:line="77" pos:column="15"/></name> <operator pos:line="77" pos:column="16">=<pos:position pos:line="77" pos:column="17"/></operator> <call><name pos:line="77" pos:column="18">ajp_msg_get_string<pos:position pos:line="77" pos:column="36"/></name><argument_list pos:line="77" pos:column="36">(<argument><expr><name pos:line="77" pos:column="37">msg<pos:position pos:line="77" pos:column="40"/></name></expr></argument>, <argument><expr><operator pos:line="77" pos:column="42">&amp;<pos:position pos:line="77" pos:column="47"/></operator><name pos:line="77" pos:column="43">stringname<pos:position pos:line="77" pos:column="53"/></name></expr></argument>)<pos:position pos:line="77" pos:column="54"/></argument_list></call></expr>;<pos:position pos:line="77" pos:column="55"/></expr_stmt>
            <if pos:line="78" pos:column="13">if <condition pos:line="78" pos:column="16">(<expr><name pos:line="78" pos:column="17">rc<pos:position pos:line="78" pos:column="19"/></name> <operator pos:line="78" pos:column="20">!=<pos:position pos:line="78" pos:column="22"/></operator> <name pos:line="78" pos:column="23">APR_SUCCESS<pos:position pos:line="78" pos:column="34"/></name></expr>)<pos:position pos:line="78" pos:column="35"/></condition><then pos:line="78" pos:column="35"> <block pos:line="78" pos:column="36">{
                <expr_stmt><expr><call><name pos:line="79" pos:column="17">ap_log_error<pos:position pos:line="79" pos:column="29"/></name><argument_list pos:line="79" pos:column="29">(<argument><expr><name pos:line="79" pos:column="30">APLOG_MARK<pos:position pos:line="79" pos:column="40"/></name></expr></argument>, <argument><expr><name pos:line="79" pos:column="42">APLOG_ERR<pos:position pos:line="79" pos:column="51"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="79" pos:column="53">0<pos:position pos:line="79" pos:column="54"/></literal></expr></argument>, <argument><expr><name><name pos:line="79" pos:column="56">r<pos:position pos:line="79" pos:column="57"/></name><operator pos:line="79" pos:column="57">-&gt;<pos:position pos:line="79" pos:column="62"/></operator><name pos:line="79" pos:column="59">server<pos:position pos:line="79" pos:column="65"/></name></name></expr></argument>,
                       <argument><expr><literal type="string" pos:line="80" pos:column="24">"ajp_unmarshal_response: "<pos:position pos:line="80" pos:column="50"/></literal>
                       <literal type="string" pos:line="81" pos:column="24">"Null header name"<pos:position pos:line="81" pos:column="42"/></literal></expr></argument>)<pos:position pos:line="81" pos:column="43"/></argument_list></call></expr>;<pos:position pos:line="81" pos:column="44"/></expr_stmt>
                <return pos:line="82" pos:column="17">return <expr><name pos:line="82" pos:column="24">rc<pos:position pos:line="82" pos:column="26"/></name></expr>;<pos:position pos:line="82" pos:column="27"/></return>
            }<pos:position pos:line="83" pos:column="14"/></block></then></if>
<cpp:if pos:line="84" pos:column="1">#<cpp:directive pos:line="84" pos:column="2">if<pos:position pos:line="84" pos:column="4"/></cpp:directive> <expr><call><name pos:line="84" pos:column="5">defined<pos:position pos:line="84" pos:column="12"/></name><argument_list pos:line="84" pos:column="12">(<argument><expr><name pos:line="84" pos:column="13">AS400<pos:position pos:line="84" pos:column="18"/></name></expr></argument>)<pos:position pos:line="84" pos:column="19"/></argument_list></call> <operator pos:line="84" pos:column="20">||<pos:position pos:line="84" pos:column="22"/></operator> <call><name pos:line="84" pos:column="23">defined<pos:position pos:line="84" pos:column="30"/></name><argument_list pos:line="84" pos:column="30">(<argument><expr><name pos:line="84" pos:column="31">_OSD_POSIX<pos:position pos:line="84" pos:column="41"/></name></expr></argument>)<pos:position pos:line="84" pos:column="42"/></argument_list></call></expr></cpp:if>
            <expr_stmt><expr><call><name pos:line="85" pos:column="13">ap_xlate_proto_from_ascii<pos:position pos:line="85" pos:column="38"/></name><argument_list pos:line="85" pos:column="38">(<argument><expr><name pos:line="85" pos:column="39">stringname<pos:position pos:line="85" pos:column="49"/></name></expr></argument>, <argument><expr><call><name pos:line="85" pos:column="51">strlen<pos:position pos:line="85" pos:column="57"/></name><argument_list pos:line="85" pos:column="57">(<argument><expr><name pos:line="85" pos:column="58">stringname<pos:position pos:line="85" pos:column="68"/></name></expr></argument>)<pos:position pos:line="85" pos:column="69"/></argument_list></call></expr></argument>)<pos:position pos:line="85" pos:column="70"/></argument_list></call></expr>;<pos:position pos:line="85" pos:column="71"/></expr_stmt>
<cpp:endif pos:line="86" pos:column="1">#<cpp:directive pos:line="86" pos:column="2">endif<pos:position pos:line="86" pos:column="7"/></cpp:directive></cpp:endif>
        }<pos:position pos:line="87" pos:column="10"/></block></else></if>

        <expr_stmt><expr><name pos:line="89" pos:column="9">rc<pos:position pos:line="89" pos:column="11"/></name> <operator pos:line="89" pos:column="12">=<pos:position pos:line="89" pos:column="13"/></operator> <call><name pos:line="89" pos:column="14">ajp_msg_get_string<pos:position pos:line="89" pos:column="32"/></name><argument_list pos:line="89" pos:column="32">(<argument><expr><name pos:line="89" pos:column="33">msg<pos:position pos:line="89" pos:column="36"/></name></expr></argument>, <argument><expr><operator pos:line="89" pos:column="38">&amp;<pos:position pos:line="89" pos:column="43"/></operator><name pos:line="89" pos:column="39">value<pos:position pos:line="89" pos:column="44"/></name></expr></argument>)<pos:position pos:line="89" pos:column="45"/></argument_list></call></expr>;<pos:position pos:line="89" pos:column="46"/></expr_stmt>
        <if pos:line="90" pos:column="9">if <condition pos:line="90" pos:column="12">(<expr><name pos:line="90" pos:column="13">rc<pos:position pos:line="90" pos:column="15"/></name> <operator pos:line="90" pos:column="16">!=<pos:position pos:line="90" pos:column="18"/></operator> <name pos:line="90" pos:column="19">APR_SUCCESS<pos:position pos:line="90" pos:column="30"/></name></expr>)<pos:position pos:line="90" pos:column="31"/></condition><then pos:line="90" pos:column="31"> <block pos:line="90" pos:column="32">{
            <expr_stmt><expr><call><name pos:line="91" pos:column="13">ap_log_error<pos:position pos:line="91" pos:column="25"/></name><argument_list pos:line="91" pos:column="25">(<argument><expr><name pos:line="91" pos:column="26">APLOG_MARK<pos:position pos:line="91" pos:column="36"/></name></expr></argument>, <argument><expr><name pos:line="91" pos:column="38">APLOG_ERR<pos:position pos:line="91" pos:column="47"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="91" pos:column="49">0<pos:position pos:line="91" pos:column="50"/></literal></expr></argument>, <argument><expr><name><name pos:line="91" pos:column="52">r<pos:position pos:line="91" pos:column="53"/></name><operator pos:line="91" pos:column="53">-&gt;<pos:position pos:line="91" pos:column="58"/></operator><name pos:line="91" pos:column="55">server<pos:position pos:line="91" pos:column="61"/></name></name></expr></argument>,
                   <argument><expr><literal type="string" pos:line="92" pos:column="20">"ajp_unmarshal_response: "<pos:position pos:line="92" pos:column="46"/></literal>
                   <literal type="string" pos:line="93" pos:column="20">"Null header value"<pos:position pos:line="93" pos:column="39"/></literal></expr></argument>)<pos:position pos:line="93" pos:column="40"/></argument_list></call></expr>;<pos:position pos:line="93" pos:column="41"/></expr_stmt>
            <return pos:line="94" pos:column="13">return <expr><name pos:line="94" pos:column="20">rc<pos:position pos:line="94" pos:column="22"/></name></expr>;<pos:position pos:line="94" pos:column="23"/></return>
        }<pos:position pos:line="95" pos:column="10"/></block></then></if>

        <comment type="block" pos:line="97" pos:column="9">/* Set-Cookie need additional processing */</comment>
        <if pos:line="98" pos:column="9">if <condition pos:line="98" pos:column="12">(<expr><operator pos:line="98" pos:column="13">!<pos:position pos:line="98" pos:column="14"/></operator><call><name pos:line="98" pos:column="14">strcasecmp<pos:position pos:line="98" pos:column="24"/></name><argument_list pos:line="98" pos:column="24">(<argument><expr><name pos:line="98" pos:column="25">stringname<pos:position pos:line="98" pos:column="35"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="98" pos:column="37">"Set-Cookie"<pos:position pos:line="98" pos:column="49"/></literal></expr></argument>)<pos:position pos:line="98" pos:column="50"/></argument_list></call></expr>)<pos:position pos:line="98" pos:column="51"/></condition><then pos:line="98" pos:column="51"> <block pos:line="98" pos:column="52">{
            <expr_stmt><expr><name pos:line="99" pos:column="13">value<pos:position pos:line="99" pos:column="18"/></name> <operator pos:line="99" pos:column="19">=<pos:position pos:line="99" pos:column="20"/></operator> <call><name pos:line="99" pos:column="21">ap_proxy_cookie_reverse_map<pos:position pos:line="99" pos:column="48"/></name><argument_list pos:line="99" pos:column="48">(<argument><expr><name pos:line="99" pos:column="49">r<pos:position pos:line="99" pos:column="50"/></name></expr></argument>, <argument><expr><name pos:line="99" pos:column="52">dconf<pos:position pos:line="99" pos:column="57"/></name></expr></argument>, <argument><expr><name pos:line="99" pos:column="59">value<pos:position pos:line="99" pos:column="64"/></name></expr></argument>)<pos:position pos:line="99" pos:column="65"/></argument_list></call></expr>;<pos:position pos:line="99" pos:column="66"/></expr_stmt>
        }<pos:position pos:line="100" pos:column="10"/></block></then>
        <comment type="block" pos:line="101" pos:column="9">/* Location, Content-Location, URI and Destination need additional
         * processing */</comment>
        <elseif pos:line="103" pos:column="9">else <if pos:line="103" pos:column="14">if <condition pos:line="103" pos:column="17">(<expr><operator pos:line="103" pos:column="18">!<pos:position pos:line="103" pos:column="19"/></operator><call><name pos:line="103" pos:column="19">strcasecmp<pos:position pos:line="103" pos:column="29"/></name><argument_list pos:line="103" pos:column="29">(<argument><expr><name pos:line="103" pos:column="30">stringname<pos:position pos:line="103" pos:column="40"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="103" pos:column="42">"Location"<pos:position pos:line="103" pos:column="52"/></literal></expr></argument>)<pos:position pos:line="103" pos:column="53"/></argument_list></call>
                 <operator pos:line="104" pos:column="18">||<pos:position pos:line="104" pos:column="20"/></operator> <operator pos:line="104" pos:column="21">!<pos:position pos:line="104" pos:column="22"/></operator><call><name pos:line="104" pos:column="22">strcasecmp<pos:position pos:line="104" pos:column="32"/></name><argument_list pos:line="104" pos:column="32">(<argument><expr><name pos:line="104" pos:column="33">stringname<pos:position pos:line="104" pos:column="43"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="104" pos:column="45">"Content-Location"<pos:position pos:line="104" pos:column="63"/></literal></expr></argument>)<pos:position pos:line="104" pos:column="64"/></argument_list></call>
                 <operator pos:line="105" pos:column="18">||<pos:position pos:line="105" pos:column="20"/></operator> <operator pos:line="105" pos:column="21">!<pos:position pos:line="105" pos:column="22"/></operator><call><name pos:line="105" pos:column="22">strcasecmp<pos:position pos:line="105" pos:column="32"/></name><argument_list pos:line="105" pos:column="32">(<argument><expr><name pos:line="105" pos:column="33">stringname<pos:position pos:line="105" pos:column="43"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="105" pos:column="45">"URI"<pos:position pos:line="105" pos:column="50"/></literal></expr></argument>)<pos:position pos:line="105" pos:column="51"/></argument_list></call>
                 <operator pos:line="106" pos:column="18">||<pos:position pos:line="106" pos:column="20"/></operator> <operator pos:line="106" pos:column="21">!<pos:position pos:line="106" pos:column="22"/></operator><call><name pos:line="106" pos:column="22">strcasecmp<pos:position pos:line="106" pos:column="32"/></name><argument_list pos:line="106" pos:column="32">(<argument><expr><name pos:line="106" pos:column="33">stringname<pos:position pos:line="106" pos:column="43"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="106" pos:column="45">"Destination"<pos:position pos:line="106" pos:column="58"/></literal></expr></argument>)<pos:position pos:line="106" pos:column="59"/></argument_list></call></expr>)<pos:position pos:line="106" pos:column="60"/></condition><then pos:line="106" pos:column="60">
        <block pos:line="107" pos:column="9">{
          <expr_stmt><expr><name pos:line="108" pos:column="11">value<pos:position pos:line="108" pos:column="16"/></name> <operator pos:line="108" pos:column="17">=<pos:position pos:line="108" pos:column="18"/></operator> <call><name pos:line="108" pos:column="19">ap_proxy_location_reverse_map<pos:position pos:line="108" pos:column="48"/></name><argument_list pos:line="108" pos:column="48">(<argument><expr><name pos:line="108" pos:column="49">r<pos:position pos:line="108" pos:column="50"/></name></expr></argument>, <argument><expr><name pos:line="108" pos:column="52">dconf<pos:position pos:line="108" pos:column="57"/></name></expr></argument>, <argument><expr><name pos:line="108" pos:column="59">value<pos:position pos:line="108" pos:column="64"/></name></expr></argument>)<pos:position pos:line="108" pos:column="65"/></argument_list></call></expr>;<pos:position pos:line="108" pos:column="66"/></expr_stmt>
        }<pos:position pos:line="109" pos:column="10"/></block></then></if></elseif></if>

<cpp:if pos:line="111" pos:column="1">#<cpp:directive pos:line="111" pos:column="2">if<pos:position pos:line="111" pos:column="4"/></cpp:directive> <expr><call><name pos:line="111" pos:column="5">defined<pos:position pos:line="111" pos:column="12"/></name><argument_list pos:line="111" pos:column="12">(<argument><expr><name pos:line="111" pos:column="13">AS400<pos:position pos:line="111" pos:column="18"/></name></expr></argument>)<pos:position pos:line="111" pos:column="19"/></argument_list></call> <operator pos:line="111" pos:column="20">||<pos:position pos:line="111" pos:column="22"/></operator> <call><name pos:line="111" pos:column="23">defined<pos:position pos:line="111" pos:column="30"/></name><argument_list pos:line="111" pos:column="30">(<argument><expr><name pos:line="111" pos:column="31">_OSD_POSIX<pos:position pos:line="111" pos:column="41"/></name></expr></argument>)<pos:position pos:line="111" pos:column="42"/></argument_list></call></expr></cpp:if>
        <expr_stmt><expr><call><name pos:line="112" pos:column="9">ap_xlate_proto_from_ascii<pos:position pos:line="112" pos:column="34"/></name><argument_list pos:line="112" pos:column="34">(<argument><expr><name pos:line="112" pos:column="35">value<pos:position pos:line="112" pos:column="40"/></name></expr></argument>, <argument><expr><call><name pos:line="112" pos:column="42">strlen<pos:position pos:line="112" pos:column="48"/></name><argument_list pos:line="112" pos:column="48">(<argument><expr><name pos:line="112" pos:column="49">value<pos:position pos:line="112" pos:column="54"/></name></expr></argument>)<pos:position pos:line="112" pos:column="55"/></argument_list></call></expr></argument>)<pos:position pos:line="112" pos:column="56"/></argument_list></call></expr>;<pos:position pos:line="112" pos:column="57"/></expr_stmt>
<cpp:endif pos:line="113" pos:column="1">#<cpp:directive pos:line="113" pos:column="2">endif<pos:position pos:line="113" pos:column="7"/></cpp:directive></cpp:endif>
        <expr_stmt><expr><call><name pos:line="114" pos:column="9">ap_log_error<pos:position pos:line="114" pos:column="21"/></name><argument_list pos:line="114" pos:column="21">(<argument><expr><name pos:line="114" pos:column="22">APLOG_MARK<pos:position pos:line="114" pos:column="32"/></name></expr></argument>, <argument><expr><name pos:line="114" pos:column="34">APLOG_DEBUG<pos:position pos:line="114" pos:column="45"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="114" pos:column="47">0<pos:position pos:line="114" pos:column="48"/></literal></expr></argument>, <argument><expr><name><name pos:line="114" pos:column="50">r<pos:position pos:line="114" pos:column="51"/></name><operator pos:line="114" pos:column="51">-&gt;<pos:position pos:line="114" pos:column="56"/></operator><name pos:line="114" pos:column="53">server<pos:position pos:line="114" pos:column="59"/></name></name></expr></argument>,
               <argument><expr><literal type="string" pos:line="115" pos:column="16">"ajp_unmarshal_response: Header[%d] [%s] = [%s]"<pos:position pos:line="115" pos:column="64"/></literal></expr></argument>,
                       <argument><expr><name pos:line="116" pos:column="24">i<pos:position pos:line="116" pos:column="25"/></name></expr></argument>, <argument><expr><name pos:line="116" pos:column="27">stringname<pos:position pos:line="116" pos:column="37"/></name></expr></argument>, <argument><expr><name pos:line="116" pos:column="39">value<pos:position pos:line="116" pos:column="44"/></name></expr></argument>)<pos:position pos:line="116" pos:column="45"/></argument_list></call></expr>;<pos:position pos:line="116" pos:column="46"/></expr_stmt>

        <expr_stmt><expr><call><name pos:line="118" pos:column="9">apr_table_add<pos:position pos:line="118" pos:column="22"/></name><argument_list pos:line="118" pos:column="22">(<argument><expr><name><name pos:line="118" pos:column="23">r<pos:position pos:line="118" pos:column="24"/></name><operator pos:line="118" pos:column="24">-&gt;<pos:position pos:line="118" pos:column="29"/></operator><name pos:line="118" pos:column="26">headers_out<pos:position pos:line="118" pos:column="37"/></name></name></expr></argument>, <argument><expr><name pos:line="118" pos:column="39">stringname<pos:position pos:line="118" pos:column="49"/></name></expr></argument>, <argument><expr><name pos:line="118" pos:column="51">value<pos:position pos:line="118" pos:column="56"/></name></expr></argument>)<pos:position pos:line="118" pos:column="57"/></argument_list></call></expr>;<pos:position pos:line="118" pos:column="58"/></expr_stmt>

        <comment type="block" pos:line="120" pos:column="9">/* Content-type needs an additional handling */</comment>
        <if pos:line="121" pos:column="9">if <condition pos:line="121" pos:column="12">(<expr><call><name pos:line="121" pos:column="13">strcasecmp<pos:position pos:line="121" pos:column="23"/></name><argument_list pos:line="121" pos:column="23">(<argument><expr><name pos:line="121" pos:column="24">stringname<pos:position pos:line="121" pos:column="34"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="121" pos:column="36">"Content-Type"<pos:position pos:line="121" pos:column="50"/></literal></expr></argument>)<pos:position pos:line="121" pos:column="51"/></argument_list></call> <operator pos:line="121" pos:column="52">==<pos:position pos:line="121" pos:column="54"/></operator> <literal type="number" pos:line="121" pos:column="55">0<pos:position pos:line="121" pos:column="56"/></literal></expr>)<pos:position pos:line="121" pos:column="57"/></condition><then pos:line="121" pos:column="57"> <block pos:line="121" pos:column="58">{
             <comment type="block" pos:line="122" pos:column="14">/* add corresponding filter */</comment>
            <expr_stmt><expr><call><name pos:line="123" pos:column="13">ap_set_content_type<pos:position pos:line="123" pos:column="32"/></name><argument_list pos:line="123" pos:column="32">(<argument><expr><name pos:line="123" pos:column="33">r<pos:position pos:line="123" pos:column="34"/></name></expr></argument>, <argument><expr><call><name pos:line="123" pos:column="36">apr_pstrdup<pos:position pos:line="123" pos:column="47"/></name><argument_list pos:line="123" pos:column="47">(<argument><expr><name><name pos:line="123" pos:column="48">r<pos:position pos:line="123" pos:column="49"/></name><operator pos:line="123" pos:column="49">-&gt;<pos:position pos:line="123" pos:column="54"/></operator><name pos:line="123" pos:column="51">pool<pos:position pos:line="123" pos:column="55"/></name></name></expr></argument>, <argument><expr><name pos:line="123" pos:column="57">value<pos:position pos:line="123" pos:column="62"/></name></expr></argument>)<pos:position pos:line="123" pos:column="63"/></argument_list></call></expr></argument>)<pos:position pos:line="123" pos:column="64"/></argument_list></call></expr>;<pos:position pos:line="123" pos:column="65"/></expr_stmt>
            <expr_stmt><expr><call><name pos:line="124" pos:column="13">ap_log_error<pos:position pos:line="124" pos:column="25"/></name><argument_list pos:line="124" pos:column="25">(<argument><expr><name pos:line="124" pos:column="26">APLOG_MARK<pos:position pos:line="124" pos:column="36"/></name></expr></argument>, <argument><expr><name pos:line="124" pos:column="38">APLOG_DEBUG<pos:position pos:line="124" pos:column="49"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="124" pos:column="51">0<pos:position pos:line="124" pos:column="52"/></literal></expr></argument>, <argument><expr><name><name pos:line="124" pos:column="54">r<pos:position pos:line="124" pos:column="55"/></name><operator pos:line="124" pos:column="55">-&gt;<pos:position pos:line="124" pos:column="60"/></operator><name pos:line="124" pos:column="57">server<pos:position pos:line="124" pos:column="63"/></name></name></expr></argument>,
               <argument><expr><literal type="string" pos:line="125" pos:column="16">"ajp_unmarshal_response: ap_set_content_type done"<pos:position pos:line="125" pos:column="66"/></literal></expr></argument>)<pos:position pos:line="125" pos:column="67"/></argument_list></call></expr>;<pos:position pos:line="125" pos:column="68"/></expr_stmt>
        }<pos:position pos:line="126" pos:column="10"/></block></then></if>
    }<pos:position pos:line="127" pos:column="6"/></block></for>

    <return pos:line="129" pos:column="5">return <expr><name pos:line="129" pos:column="12">APR_SUCCESS<pos:position pos:line="129" pos:column="23"/></name></expr>;<pos:position pos:line="129" pos:column="24"/></return>
}<pos:position pos:line="130" pos:column="2"/></block></function></unit>

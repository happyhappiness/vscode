<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/httpd/gumtree/httpd_function_6762.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">void<pos:position pos:line="1" pos:column="12"/></name></type> <name pos:line="1" pos:column="13">check_write_size<pos:position pos:line="1" pos:column="29"/></name><parameter_list pos:line="1" pos:column="29">(<parameter><decl><type><name pos:line="1" pos:column="30">h2_conn_io<pos:position pos:line="1" pos:column="40"/></name> <modifier pos:line="1" pos:column="41">*<pos:position pos:line="1" pos:column="42"/></modifier></type><name pos:line="1" pos:column="42">io<pos:position pos:line="1" pos:column="44"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="45"/></parameter_list> 
<block pos:line="2" pos:column="1">{
    <if pos:line="3" pos:column="5">if <condition pos:line="3" pos:column="8">(<expr><name><name pos:line="3" pos:column="9">io<pos:position pos:line="3" pos:column="11"/></name><operator pos:line="3" pos:column="11">-&gt;<pos:position pos:line="3" pos:column="16"/></operator><name pos:line="3" pos:column="13">write_size<pos:position pos:line="3" pos:column="23"/></name></name> <operator pos:line="3" pos:column="24">&gt;<pos:position pos:line="3" pos:column="28"/></operator> <name pos:line="3" pos:column="26">WRITE_SIZE_INITIAL<pos:position pos:line="3" pos:column="44"/></name> 
        <operator pos:line="4" pos:column="9">&amp;&amp;<pos:position pos:line="4" pos:column="19"/></operator> <operator pos:line="4" pos:column="12">(<pos:position pos:line="4" pos:column="13"/></operator><name><name pos:line="4" pos:column="13">io<pos:position pos:line="4" pos:column="15"/></name><operator pos:line="4" pos:column="15">-&gt;<pos:position pos:line="4" pos:column="20"/></operator><name pos:line="4" pos:column="17">cooldown_usecs<pos:position pos:line="4" pos:column="31"/></name></name> <operator pos:line="4" pos:column="32">&gt;<pos:position pos:line="4" pos:column="36"/></operator> <literal type="number" pos:line="4" pos:column="34">0<pos:position pos:line="4" pos:column="35"/></literal><operator pos:line="4" pos:column="35">)<pos:position pos:line="4" pos:column="36"/></operator>
        <operator pos:line="5" pos:column="9">&amp;&amp;<pos:position pos:line="5" pos:column="19"/></operator> <operator pos:line="5" pos:column="12">(<pos:position pos:line="5" pos:column="13"/></operator><call><name pos:line="5" pos:column="13">apr_time_now<pos:position pos:line="5" pos:column="25"/></name><argument_list pos:line="5" pos:column="25">()<pos:position pos:line="5" pos:column="27"/></argument_list></call> <operator pos:line="5" pos:column="28">-<pos:position pos:line="5" pos:column="29"/></operator> <name><name pos:line="5" pos:column="30">io<pos:position pos:line="5" pos:column="32"/></name><operator pos:line="5" pos:column="32">-&gt;<pos:position pos:line="5" pos:column="37"/></operator><name pos:line="5" pos:column="34">last_write<pos:position pos:line="5" pos:column="44"/></name></name><operator pos:line="5" pos:column="44">)<pos:position pos:line="5" pos:column="45"/></operator> <operator pos:line="5" pos:column="46">&gt;=<pos:position pos:line="5" pos:column="51"/></operator> <name><name pos:line="5" pos:column="49">io<pos:position pos:line="5" pos:column="51"/></name><operator pos:line="5" pos:column="51">-&gt;<pos:position pos:line="5" pos:column="56"/></operator><name pos:line="5" pos:column="53">cooldown_usecs<pos:position pos:line="5" pos:column="67"/></name></name></expr>)<pos:position pos:line="5" pos:column="68"/></condition><then pos:line="5" pos:column="68"> <block pos:line="5" pos:column="69">{
        <comment type="block" pos:line="6" pos:column="9">/* long time not written, reset write size */</comment>
        <expr_stmt><expr><name><name pos:line="7" pos:column="9">io<pos:position pos:line="7" pos:column="11"/></name><operator pos:line="7" pos:column="11">-&gt;<pos:position pos:line="7" pos:column="16"/></operator><name pos:line="7" pos:column="13">write_size<pos:position pos:line="7" pos:column="23"/></name></name> <operator pos:line="7" pos:column="24">=<pos:position pos:line="7" pos:column="25"/></operator> <name pos:line="7" pos:column="26">WRITE_SIZE_INITIAL<pos:position pos:line="7" pos:column="44"/></name></expr>;<pos:position pos:line="7" pos:column="45"/></expr_stmt>
        <expr_stmt><expr><name><name pos:line="8" pos:column="9">io<pos:position pos:line="8" pos:column="11"/></name><operator pos:line="8" pos:column="11">-&gt;<pos:position pos:line="8" pos:column="16"/></operator><name pos:line="8" pos:column="13">bytes_written<pos:position pos:line="8" pos:column="26"/></name></name> <operator pos:line="8" pos:column="27">=<pos:position pos:line="8" pos:column="28"/></operator> <literal type="number" pos:line="8" pos:column="29">0<pos:position pos:line="8" pos:column="30"/></literal></expr>;<pos:position pos:line="8" pos:column="31"/></expr_stmt>
        <expr_stmt><expr><call><name pos:line="9" pos:column="9">ap_log_cerror<pos:position pos:line="9" pos:column="22"/></name><argument_list pos:line="9" pos:column="22">(<argument><expr><name pos:line="9" pos:column="23">APLOG_MARK<pos:position pos:line="9" pos:column="33"/></name></expr></argument>, <argument><expr><name pos:line="9" pos:column="35">APLOG_TRACE4<pos:position pos:line="9" pos:column="47"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="9" pos:column="49">0<pos:position pos:line="9" pos:column="50"/></literal></expr></argument>, <argument><expr><name><name pos:line="9" pos:column="52">io<pos:position pos:line="9" pos:column="54"/></name><operator pos:line="9" pos:column="54">-&gt;<pos:position pos:line="9" pos:column="59"/></operator><name pos:line="9" pos:column="56">c<pos:position pos:line="9" pos:column="57"/></name></name></expr></argument>,
                      <argument><expr><literal type="string" pos:line="10" pos:column="23">"h2_conn_io(%ld): timeout write size reset to %ld"<pos:position pos:line="10" pos:column="73"/></literal></expr></argument>, 
                      <argument><expr><operator pos:line="11" pos:column="23">(<pos:position pos:line="11" pos:column="24"/></operator><name pos:line="11" pos:column="24">long<pos:position pos:line="11" pos:column="28"/></name><operator pos:line="11" pos:column="28">)<pos:position pos:line="11" pos:column="29"/></operator><name><name pos:line="11" pos:column="29">io<pos:position pos:line="11" pos:column="31"/></name><operator pos:line="11" pos:column="31">-&gt;<pos:position pos:line="11" pos:column="36"/></operator><name pos:line="11" pos:column="33">c<pos:position pos:line="11" pos:column="34"/></name><operator pos:line="11" pos:column="34">-&gt;<pos:position pos:line="11" pos:column="39"/></operator><name pos:line="11" pos:column="36">id<pos:position pos:line="11" pos:column="38"/></name></name></expr></argument>, <argument><expr><operator pos:line="11" pos:column="40">(<pos:position pos:line="11" pos:column="41"/></operator><name pos:line="11" pos:column="41">long<pos:position pos:line="11" pos:column="45"/></name><operator pos:line="11" pos:column="45">)<pos:position pos:line="11" pos:column="46"/></operator><name><name pos:line="11" pos:column="46">io<pos:position pos:line="11" pos:column="48"/></name><operator pos:line="11" pos:column="48">-&gt;<pos:position pos:line="11" pos:column="53"/></operator><name pos:line="11" pos:column="50">write_size<pos:position pos:line="11" pos:column="60"/></name></name></expr></argument>)<pos:position pos:line="11" pos:column="61"/></argument_list></call></expr>;<pos:position pos:line="11" pos:column="62"/></expr_stmt>
    }<pos:position pos:line="12" pos:column="6"/></block></then>
    <elseif pos:line="13" pos:column="5">else <if pos:line="13" pos:column="10">if <condition pos:line="13" pos:column="13">(<expr><name><name pos:line="13" pos:column="14">io<pos:position pos:line="13" pos:column="16"/></name><operator pos:line="13" pos:column="16">-&gt;<pos:position pos:line="13" pos:column="21"/></operator><name pos:line="13" pos:column="18">write_size<pos:position pos:line="13" pos:column="28"/></name></name> <operator pos:line="13" pos:column="29">&lt;<pos:position pos:line="13" pos:column="33"/></operator> <name pos:line="13" pos:column="31">WRITE_SIZE_MAX<pos:position pos:line="13" pos:column="45"/></name> 
             <operator pos:line="14" pos:column="14">&amp;&amp;<pos:position pos:line="14" pos:column="24"/></operator> <name><name pos:line="14" pos:column="17">io<pos:position pos:line="14" pos:column="19"/></name><operator pos:line="14" pos:column="19">-&gt;<pos:position pos:line="14" pos:column="24"/></operator><name pos:line="14" pos:column="21">bytes_written<pos:position pos:line="14" pos:column="34"/></name></name> <operator pos:line="14" pos:column="35">&gt;=<pos:position pos:line="14" pos:column="40"/></operator> <name><name pos:line="14" pos:column="38">io<pos:position pos:line="14" pos:column="40"/></name><operator pos:line="14" pos:column="40">-&gt;<pos:position pos:line="14" pos:column="45"/></operator><name pos:line="14" pos:column="42">warmup_size<pos:position pos:line="14" pos:column="53"/></name></name></expr>)<pos:position pos:line="14" pos:column="54"/></condition><then pos:line="14" pos:column="54"> <block pos:line="14" pos:column="55">{
        <comment type="block" pos:line="15" pos:column="9">/* connection is hot, use max size */</comment>
        <expr_stmt><expr><name><name pos:line="16" pos:column="9">io<pos:position pos:line="16" pos:column="11"/></name><operator pos:line="16" pos:column="11">-&gt;<pos:position pos:line="16" pos:column="16"/></operator><name pos:line="16" pos:column="13">write_size<pos:position pos:line="16" pos:column="23"/></name></name> <operator pos:line="16" pos:column="24">=<pos:position pos:line="16" pos:column="25"/></operator> <name pos:line="16" pos:column="26">WRITE_SIZE_MAX<pos:position pos:line="16" pos:column="40"/></name></expr>;<pos:position pos:line="16" pos:column="41"/></expr_stmt>
        <expr_stmt><expr><call><name pos:line="17" pos:column="9">ap_log_cerror<pos:position pos:line="17" pos:column="22"/></name><argument_list pos:line="17" pos:column="22">(<argument><expr><name pos:line="17" pos:column="23">APLOG_MARK<pos:position pos:line="17" pos:column="33"/></name></expr></argument>, <argument><expr><name pos:line="17" pos:column="35">APLOG_TRACE4<pos:position pos:line="17" pos:column="47"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="17" pos:column="49">0<pos:position pos:line="17" pos:column="50"/></literal></expr></argument>, <argument><expr><name><name pos:line="17" pos:column="52">io<pos:position pos:line="17" pos:column="54"/></name><operator pos:line="17" pos:column="54">-&gt;<pos:position pos:line="17" pos:column="59"/></operator><name pos:line="17" pos:column="56">c<pos:position pos:line="17" pos:column="57"/></name></name></expr></argument>,
                      <argument><expr><literal type="string" pos:line="18" pos:column="23">"h2_conn_io(%ld): threshold reached, write size now %ld"<pos:position pos:line="18" pos:column="79"/></literal></expr></argument>, 
                      <argument><expr><operator pos:line="19" pos:column="23">(<pos:position pos:line="19" pos:column="24"/></operator><name pos:line="19" pos:column="24">long<pos:position pos:line="19" pos:column="28"/></name><operator pos:line="19" pos:column="28">)<pos:position pos:line="19" pos:column="29"/></operator><name><name pos:line="19" pos:column="29">io<pos:position pos:line="19" pos:column="31"/></name><operator pos:line="19" pos:column="31">-&gt;<pos:position pos:line="19" pos:column="36"/></operator><name pos:line="19" pos:column="33">c<pos:position pos:line="19" pos:column="34"/></name><operator pos:line="19" pos:column="34">-&gt;<pos:position pos:line="19" pos:column="39"/></operator><name pos:line="19" pos:column="36">id<pos:position pos:line="19" pos:column="38"/></name></name></expr></argument>, <argument><expr><operator pos:line="19" pos:column="40">(<pos:position pos:line="19" pos:column="41"/></operator><name pos:line="19" pos:column="41">long<pos:position pos:line="19" pos:column="45"/></name><operator pos:line="19" pos:column="45">)<pos:position pos:line="19" pos:column="46"/></operator><name><name pos:line="19" pos:column="46">io<pos:position pos:line="19" pos:column="48"/></name><operator pos:line="19" pos:column="48">-&gt;<pos:position pos:line="19" pos:column="53"/></operator><name pos:line="19" pos:column="50">write_size<pos:position pos:line="19" pos:column="60"/></name></name></expr></argument>)<pos:position pos:line="19" pos:column="61"/></argument_list></call></expr>;<pos:position pos:line="19" pos:column="62"/></expr_stmt>
    }<pos:position pos:line="20" pos:column="6"/></block></then></if></elseif></if>
}<pos:position pos:line="21" pos:column="2"/></block></function></unit>

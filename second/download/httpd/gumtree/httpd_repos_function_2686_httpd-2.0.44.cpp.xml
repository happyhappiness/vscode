<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/httpd/gumtree/httpd_repos_function_2686_httpd-2.0.44.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">apr_status_t<pos:position pos:line="1" pos:column="20"/></name></type> <name pos:line="1" pos:column="21">getpwnam_safe<pos:position pos:line="1" pos:column="34"/></name><parameter_list pos:line="1" pos:column="34">(<parameter><decl><type><specifier pos:line="1" pos:column="35">const<pos:position pos:line="1" pos:column="40"/></specifier> <name pos:line="1" pos:column="41">char<pos:position pos:line="1" pos:column="45"/></name> <modifier pos:line="1" pos:column="46">*<pos:position pos:line="1" pos:column="47"/></modifier></type><name pos:line="1" pos:column="47">username<pos:position pos:line="1" pos:column="55"/></name></decl></parameter>,
                                  <parameter><decl><type><name><name pos:line="2" pos:column="35">struct<pos:position pos:line="2" pos:column="41"/></name> <name pos:line="2" pos:column="42">passwd<pos:position pos:line="2" pos:column="48"/></name></name> <modifier pos:line="2" pos:column="49">*<pos:position pos:line="2" pos:column="50"/></modifier></type><name pos:line="2" pos:column="50">pw<pos:position pos:line="2" pos:column="52"/></name></decl></parameter>,
                                  <parameter><decl><type><name pos:line="3" pos:column="35">char<pos:position pos:line="3" pos:column="39"/></name></type> <name><name pos:line="3" pos:column="40">pwbuf<pos:position pos:line="3" pos:column="45"/></name><index pos:line="3" pos:column="45">[<expr><name pos:line="3" pos:column="46">PWBUF_SIZE<pos:position pos:line="3" pos:column="56"/></name></expr>]<pos:position pos:line="3" pos:column="57"/></index></name></decl></parameter>)<pos:position pos:line="3" pos:column="58"/></parameter_list>
<block pos:line="4" pos:column="1">{
    <decl_stmt><decl><type><name><name pos:line="5" pos:column="5">struct<pos:position pos:line="5" pos:column="11"/></name> <name pos:line="5" pos:column="12">passwd<pos:position pos:line="5" pos:column="18"/></name></name> <modifier pos:line="5" pos:column="19">*<pos:position pos:line="5" pos:column="20"/></modifier></type><name pos:line="5" pos:column="20">pwptr<pos:position pos:line="5" pos:column="25"/></name></decl>;<pos:position pos:line="5" pos:column="26"/></decl_stmt>
<cpp:if pos:line="6" pos:column="1">#<cpp:directive pos:line="6" pos:column="2">if<pos:position pos:line="6" pos:column="4"/></cpp:directive> <expr><name pos:line="6" pos:column="5">APR_HAS_THREADS<pos:position pos:line="6" pos:column="20"/></name> <operator pos:line="6" pos:column="21">&amp;&amp;<pos:position pos:line="6" pos:column="31"/></operator> <call><name pos:line="6" pos:column="24">defined<pos:position pos:line="6" pos:column="31"/></name><argument_list pos:line="6" pos:column="31">(<argument><expr><name pos:line="6" pos:column="32">_POSIX_THREAD_SAFE_FUNCTIONS<pos:position pos:line="6" pos:column="60"/></name></expr></argument>)<pos:position pos:line="6" pos:column="61"/></argument_list></call> <operator pos:line="6" pos:column="62">&amp;&amp;<pos:position pos:line="6" pos:column="72"/></operator> <call><name pos:line="6" pos:column="65">defined<pos:position pos:line="6" pos:column="72"/></name><argument_list pos:line="6" pos:column="72">(<argument><expr><name pos:line="6" pos:column="73">HAVE_GETPWNAM_R<pos:position pos:line="6" pos:column="88"/></name></expr></argument>)<pos:position pos:line="6" pos:column="89"/></argument_list></call></expr></cpp:if>
    <comment type="block" pos:line="7" pos:column="5">/* IRIX getpwnam_r() returns 0 and sets pwptr to NULL on failure */</comment>
    <if pos:line="8" pos:column="5">if <condition pos:line="8" pos:column="8">(<expr><operator pos:line="8" pos:column="9">!<pos:position pos:line="8" pos:column="10"/></operator><call><name pos:line="8" pos:column="10">getpwnam_r<pos:position pos:line="8" pos:column="20"/></name><argument_list pos:line="8" pos:column="20">(<argument><expr><name pos:line="8" pos:column="21">username<pos:position pos:line="8" pos:column="29"/></name></expr></argument>, <argument><expr><name pos:line="8" pos:column="31">pw<pos:position pos:line="8" pos:column="33"/></name></expr></argument>, <argument><expr><name pos:line="8" pos:column="35">pwbuf<pos:position pos:line="8" pos:column="40"/></name></expr></argument>, <argument><expr><name pos:line="8" pos:column="42">PWBUF_SIZE<pos:position pos:line="8" pos:column="52"/></name></expr></argument>, <argument><expr><operator pos:line="8" pos:column="54">&amp;<pos:position pos:line="8" pos:column="59"/></operator><name pos:line="8" pos:column="55">pwptr<pos:position pos:line="8" pos:column="60"/></name></expr></argument>)<pos:position pos:line="8" pos:column="61"/></argument_list></call> <operator pos:line="8" pos:column="62">&amp;&amp;<pos:position pos:line="8" pos:column="72"/></operator> <name pos:line="8" pos:column="65">pwptr<pos:position pos:line="8" pos:column="70"/></name></expr>)<pos:position pos:line="8" pos:column="71"/></condition><then pos:line="8" pos:column="71"> <block pos:line="8" pos:column="72">{
        <comment type="block" pos:line="9" pos:column="9">/* nothing extra to do on success */</comment>
<cpp:else pos:line="10" pos:column="1">#<cpp:directive pos:line="10" pos:column="2">else<pos:position pos:line="10" pos:column="6"/></cpp:directive></cpp:else>
    <if pos:line="11" pos:column="5">if <condition pos:line="11" pos:column="8">(<expr><operator pos:line="11" pos:column="9">(<pos:position pos:line="11" pos:column="10"/></operator><name pos:line="11" pos:column="10">pwptr<pos:position pos:line="11" pos:column="15"/></name> <operator pos:line="11" pos:column="16">=<pos:position pos:line="11" pos:column="17"/></operator> <call><name pos:line="11" pos:column="18">getpwnam<pos:position pos:line="11" pos:column="26"/></name><argument_list pos:line="11" pos:column="26">(<argument><expr><name pos:line="11" pos:column="27">username<pos:position pos:line="11" pos:column="35"/></name></expr></argument>)<pos:position pos:line="11" pos:column="36"/></argument_list></call><operator pos:line="11" pos:column="36">)<pos:position pos:line="11" pos:column="37"/></operator> <operator pos:line="11" pos:column="38">!=<pos:position pos:line="11" pos:column="40"/></operator> <name pos:line="11" pos:column="41">NULL<pos:position pos:line="11" pos:column="45"/></name></expr>)<pos:position pos:line="11" pos:column="46"/></condition><then pos:line="11" pos:column="46"> <block pos:line="11" pos:column="47">{
        <expr_stmt><expr><call><name pos:line="12" pos:column="9">memcpy<pos:position pos:line="12" pos:column="15"/></name><argument_list pos:line="12" pos:column="15">(<argument><expr><name pos:line="12" pos:column="16">pw<pos:position pos:line="12" pos:column="18"/></name></expr></argument>, <argument><expr><name pos:line="12" pos:column="20">pwptr<pos:position pos:line="12" pos:column="25"/></name></expr></argument>, <argument><expr><sizeof pos:line="12" pos:column="27">sizeof <name><pos:position pos:line="12" pos:column="34"/></name></sizeof>*<name pos:line="12" pos:column="35">pw<pos:position pos:line="12" pos:column="37"/></name></expr></argument>)<pos:position pos:line="12" pos:column="38"/></argument_list></call></expr>;<pos:position pos:line="12" pos:column="39"/></expr_stmt>
<cpp:endif pos:line="13" pos:column="1">#<cpp:directive pos:line="13" pos:column="2">endif<pos:position pos:line="13" pos:column="7"/></cpp:directive></cpp:endif>
    }<pos:position pos:line="14" pos:column="6"/></block></then>
    <else pos:line="15" pos:column="5">else <block pos:line="15" pos:column="10">{
        <if pos:line="16" pos:column="9">if <condition pos:line="16" pos:column="12">(<expr><name pos:line="16" pos:column="13">errno<pos:position pos:line="16" pos:column="18"/></name> <operator pos:line="16" pos:column="19">==<pos:position pos:line="16" pos:column="21"/></operator> <literal type="number" pos:line="16" pos:column="22">0<pos:position pos:line="16" pos:column="23"/></literal></expr>)<pos:position pos:line="16" pos:column="24"/></condition><then pos:line="16" pos:column="24"> <block pos:line="16" pos:column="25">{
            <comment type="block" pos:line="17" pos:column="13">/* this can happen with getpwnam() on FreeBSD 4.3 */</comment>
            <return pos:line="18" pos:column="13">return <expr><name pos:line="18" pos:column="20">APR_EGENERAL<pos:position pos:line="18" pos:column="32"/></name></expr>;<pos:position pos:line="18" pos:column="33"/></return>
        }<pos:position pos:line="19" pos:column="10"/></block></then></if>
        <return pos:line="20" pos:column="9">return <expr><name pos:line="20" pos:column="16">errno<pos:position pos:line="20" pos:column="21"/></name></expr>;<pos:position pos:line="20" pos:column="22"/></return>
    }<pos:position pos:line="21" pos:column="6"/></block></else></if>
    <return pos:line="22" pos:column="5">return <expr><name pos:line="22" pos:column="12">APR_SUCCESS<pos:position pos:line="22" pos:column="23"/></name></expr>;<pos:position pos:line="22" pos:column="24"/></return>
}<pos:position pos:line="23" pos:column="2"/></block></then></if>

<macro><name pos:line="25" pos:column="1">APR_DECLARE<pos:position pos:line="25" pos:column="12"/></name><argument_list pos:line="25" pos:column="12">(<argument pos:line="25" pos:column="13">apr_status_t<pos:position pos:line="25" pos:column="25"/></argument>)<pos:position pos:line="25" pos:column="26"/></argument_list></macro> <macro><name pos:line="25" pos:column="27">apr_uid_homepath_get<pos:position pos:line="25" pos:column="47"/></name><argument_list pos:line="25" pos:column="47">(<argument pos:line="25" pos:column="48">char **dirname<pos:position pos:line="25" pos:column="62"/></argument>,
                                               <argument pos:line="26" pos:column="48">const char *username<pos:position pos:line="26" pos:column="68"/></argument>,
                                               <argument pos:line="27" pos:column="48">apr_pool_t *p<pos:position pos:line="27" pos:column="61"/></argument>)<pos:position pos:line="27" pos:column="62"/></argument_list></macro>
<block pos:line="28" pos:column="1">{
    <decl_stmt><decl><type><name><name pos:line="29" pos:column="5">struct<pos:position pos:line="29" pos:column="11"/></name> <name pos:line="29" pos:column="12">passwd<pos:position pos:line="29" pos:column="18"/></name></name></type> <name pos:line="29" pos:column="19">pw<pos:position pos:line="29" pos:column="21"/></name></decl>;<pos:position pos:line="29" pos:column="22"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="30" pos:column="5">char<pos:position pos:line="30" pos:column="9"/></name></type> <name><name pos:line="30" pos:column="10">pwbuf<pos:position pos:line="30" pos:column="15"/></name><index pos:line="30" pos:column="15">[<expr><name pos:line="30" pos:column="16">PWBUF_SIZE<pos:position pos:line="30" pos:column="26"/></name></expr>]<pos:position pos:line="30" pos:column="27"/></index></name></decl>;<pos:position pos:line="30" pos:column="28"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="31" pos:column="5">apr_status_t<pos:position pos:line="31" pos:column="17"/></name></type> <name pos:line="31" pos:column="18">rv<pos:position pos:line="31" pos:column="20"/></name></decl>;<pos:position pos:line="31" pos:column="21"/></decl_stmt>

    <if pos:line="33" pos:column="5">if <condition pos:line="33" pos:column="8">(<expr><operator pos:line="33" pos:column="9">(<pos:position pos:line="33" pos:column="10"/></operator><name pos:line="33" pos:column="10">rv<pos:position pos:line="33" pos:column="12"/></name> <operator pos:line="33" pos:column="13">=<pos:position pos:line="33" pos:column="14"/></operator> <call><name pos:line="33" pos:column="15">getpwnam_safe<pos:position pos:line="33" pos:column="28"/></name><argument_list pos:line="33" pos:column="28">(<argument><expr><name pos:line="33" pos:column="29">username<pos:position pos:line="33" pos:column="37"/></name></expr></argument>, <argument><expr><operator pos:line="33" pos:column="39">&amp;<pos:position pos:line="33" pos:column="44"/></operator><name pos:line="33" pos:column="40">pw<pos:position pos:line="33" pos:column="42"/></name></expr></argument>, <argument><expr><name pos:line="33" pos:column="44">pwbuf<pos:position pos:line="33" pos:column="49"/></name></expr></argument>)<pos:position pos:line="33" pos:column="50"/></argument_list></call><operator pos:line="33" pos:column="50">)<pos:position pos:line="33" pos:column="51"/></operator> <operator pos:line="33" pos:column="52">!=<pos:position pos:line="33" pos:column="54"/></operator> <name pos:line="33" pos:column="55">APR_SUCCESS<pos:position pos:line="33" pos:column="66"/></name></expr>)<pos:position pos:line="33" pos:column="67"/></condition><then pos:line="33" pos:column="67">
        <block type="pseudo"><return pos:line="34" pos:column="9">return <expr><name pos:line="34" pos:column="16">rv<pos:position pos:line="34" pos:column="18"/></name></expr>;<pos:position pos:line="34" pos:column="19"/></return></block></then></if>

<cpp:ifdef pos:line="36" pos:column="1">#<cpp:directive pos:line="36" pos:column="2">ifdef<pos:position pos:line="36" pos:column="7"/></cpp:directive> <name pos:line="36" pos:column="8">OS2<pos:position pos:line="36" pos:column="11"/></name></cpp:ifdef>
    <comment type="block" pos:line="37" pos:column="5">/* Need to manually add user name for OS/2 */</comment>
    <expr_stmt><expr><operator pos:line="38" pos:column="5">*<pos:position pos:line="38" pos:column="6"/></operator><name pos:line="38" pos:column="6">dirname<pos:position pos:line="38" pos:column="13"/></name> <operator pos:line="38" pos:column="14">=<pos:position pos:line="38" pos:column="15"/></operator> <call><name pos:line="38" pos:column="16">apr_pstrcat<pos:position pos:line="38" pos:column="27"/></name><argument_list pos:line="38" pos:column="27">(<argument><expr><name pos:line="38" pos:column="28">p<pos:position pos:line="38" pos:column="29"/></name></expr></argument>, <argument><expr><name><name pos:line="38" pos:column="31">pw<pos:position pos:line="38" pos:column="33"/></name><operator pos:line="38" pos:column="33">.<pos:position pos:line="38" pos:column="34"/></operator><name pos:line="38" pos:column="34">pw_dir<pos:position pos:line="38" pos:column="40"/></name></name></expr></argument>, <argument><expr><name><name pos:line="38" pos:column="42">pw<pos:position pos:line="38" pos:column="44"/></name><operator pos:line="38" pos:column="44">.<pos:position pos:line="38" pos:column="45"/></operator><name pos:line="38" pos:column="45">pw_name<pos:position pos:line="38" pos:column="52"/></name></name></expr></argument>, <argument><expr><name pos:line="38" pos:column="54">NULL<pos:position pos:line="38" pos:column="58"/></name></expr></argument>)<pos:position pos:line="38" pos:column="59"/></argument_list></call></expr>;<pos:position pos:line="38" pos:column="60"/></expr_stmt>
<cpp:else pos:line="39" pos:column="1">#<cpp:directive pos:line="39" pos:column="2">else<pos:position pos:line="39" pos:column="6"/></cpp:directive></cpp:else>
    <expr_stmt><expr><operator pos:line="40" pos:column="5">*<pos:position pos:line="40" pos:column="6"/></operator><name pos:line="40" pos:column="6">dirname<pos:position pos:line="40" pos:column="13"/></name> <operator pos:line="40" pos:column="14">=<pos:position pos:line="40" pos:column="15"/></operator> <call><name pos:line="40" pos:column="16">apr_pstrdup<pos:position pos:line="40" pos:column="27"/></name><argument_list pos:line="40" pos:column="27">(<argument><expr><name pos:line="40" pos:column="28">p<pos:position pos:line="40" pos:column="29"/></name></expr></argument>, <argument><expr><name><name pos:line="40" pos:column="31">pw<pos:position pos:line="40" pos:column="33"/></name><operator pos:line="40" pos:column="33">.<pos:position pos:line="40" pos:column="34"/></operator><name pos:line="40" pos:column="34">pw_dir<pos:position pos:line="40" pos:column="40"/></name></name></expr></argument>)<pos:position pos:line="40" pos:column="41"/></argument_list></call></expr>;<pos:position pos:line="40" pos:column="42"/></expr_stmt>
<cpp:endif pos:line="41" pos:column="1">#<cpp:directive pos:line="41" pos:column="2">endif<pos:position pos:line="41" pos:column="7"/></cpp:directive></cpp:endif>
    <return pos:line="42" pos:column="5">return <expr><name pos:line="42" pos:column="12">APR_SUCCESS<pos:position pos:line="42" pos:column="23"/></name></expr>;<pos:position pos:line="42" pos:column="24"/></return>
}<pos:position pos:line="43" pos:column="2"/></block>



<macro><name pos:line="47" pos:column="1">APR_DECLARE<pos:position pos:line="47" pos:column="12"/></name><argument_list pos:line="47" pos:column="12">(<argument pos:line="47" pos:column="13">apr_status_t<pos:position pos:line="47" pos:column="25"/></argument>)<pos:position pos:line="47" pos:column="26"/></argument_list></macro> <macro><name pos:line="47" pos:column="27">apr_uid_current<pos:position pos:line="47" pos:column="42"/></name><argument_list pos:line="47" pos:column="42">(<argument pos:line="47" pos:column="43">apr_uid_t *uid<pos:position pos:line="47" pos:column="57"/></argument>,
                                          <argument pos:line="48" pos:column="43">apr_gid_t *gid<pos:position pos:line="48" pos:column="57"/></argument>,
                                          <argument pos:line="49" pos:column="43">apr_pool_t *p<pos:position pos:line="49" pos:column="56"/></argument>)<pos:position pos:line="49" pos:column="57"/></argument_list></macro>
<block pos:line="50" pos:column="1">{
    <expr_stmt><expr><operator pos:line="51" pos:column="5">*<pos:position pos:line="51" pos:column="6"/></operator><name pos:line="51" pos:column="6">uid<pos:position pos:line="51" pos:column="9"/></name> <operator pos:line="51" pos:column="10">=<pos:position pos:line="51" pos:column="11"/></operator> <call><name pos:line="51" pos:column="12">getuid<pos:position pos:line="51" pos:column="18"/></name><argument_list pos:line="51" pos:column="18">()<pos:position pos:line="51" pos:column="20"/></argument_list></call></expr>;<pos:position pos:line="51" pos:column="21"/></expr_stmt>
    <expr_stmt><expr><operator pos:line="52" pos:column="5">*<pos:position pos:line="52" pos:column="6"/></operator><name pos:line="52" pos:column="6">gid<pos:position pos:line="52" pos:column="9"/></name> <operator pos:line="52" pos:column="10">=<pos:position pos:line="52" pos:column="11"/></operator> <call><name pos:line="52" pos:column="12">getgid<pos:position pos:line="52" pos:column="18"/></name><argument_list pos:line="52" pos:column="18">()<pos:position pos:line="52" pos:column="20"/></argument_list></call></expr>;<pos:position pos:line="52" pos:column="21"/></expr_stmt>
  
    <return pos:line="54" pos:column="5">return <expr><name pos:line="54" pos:column="12">APR_SUCCESS<pos:position pos:line="54" pos:column="23"/></name></expr>;<pos:position pos:line="54" pos:column="24"/></return>
}<pos:position pos:line="55" pos:column="2"/></block>




<macro><name pos:line="60" pos:column="1">APR_DECLARE<pos:position pos:line="60" pos:column="12"/></name><argument_list pos:line="60" pos:column="12">(<argument pos:line="60" pos:column="13">apr_status_t<pos:position pos:line="60" pos:column="25"/></argument>)<pos:position pos:line="60" pos:column="26"/></argument_list></macro> <macro><name pos:line="60" pos:column="27">apr_uid_get<pos:position pos:line="60" pos:column="38"/></name><argument_list pos:line="60" pos:column="38">(<argument pos:line="60" pos:column="39">apr_uid_t *uid<pos:position pos:line="60" pos:column="53"/></argument>, <argument pos:line="60" pos:column="55">apr_gid_t *gid<pos:position pos:line="60" pos:column="69"/></argument>,
                                      <argument pos:line="61" pos:column="39">const char *username<pos:position pos:line="61" pos:column="59"/></argument>, <argument pos:line="61" pos:column="61">apr_pool_t *p<pos:position pos:line="61" pos:column="74"/></argument>)<pos:position pos:line="61" pos:column="75"/></argument_list></macro>
<block pos:line="62" pos:column="1">{
    <decl_stmt><decl><type><name><name pos:line="63" pos:column="5">struct<pos:position pos:line="63" pos:column="11"/></name> <name pos:line="63" pos:column="12">passwd<pos:position pos:line="63" pos:column="18"/></name></name></type> <name pos:line="63" pos:column="19">pw<pos:position pos:line="63" pos:column="21"/></name></decl>;<pos:position pos:line="63" pos:column="22"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="64" pos:column="5">char<pos:position pos:line="64" pos:column="9"/></name></type> <name><name pos:line="64" pos:column="10">pwbuf<pos:position pos:line="64" pos:column="15"/></name><index pos:line="64" pos:column="15">[<expr><name pos:line="64" pos:column="16">PWBUF_SIZE<pos:position pos:line="64" pos:column="26"/></name></expr>]<pos:position pos:line="64" pos:column="27"/></index></name></decl>;<pos:position pos:line="64" pos:column="28"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="65" pos:column="5">apr_status_t<pos:position pos:line="65" pos:column="17"/></name></type> <name pos:line="65" pos:column="18">rv<pos:position pos:line="65" pos:column="20"/></name></decl>;<pos:position pos:line="65" pos:column="21"/></decl_stmt>
        
    <if pos:line="67" pos:column="5">if <condition pos:line="67" pos:column="8">(<expr><operator pos:line="67" pos:column="9">(<pos:position pos:line="67" pos:column="10"/></operator><name pos:line="67" pos:column="10">rv<pos:position pos:line="67" pos:column="12"/></name> <operator pos:line="67" pos:column="13">=<pos:position pos:line="67" pos:column="14"/></operator> <call><name pos:line="67" pos:column="15">getpwnam_safe<pos:position pos:line="67" pos:column="28"/></name><argument_list pos:line="67" pos:column="28">(<argument><expr><name pos:line="67" pos:column="29">username<pos:position pos:line="67" pos:column="37"/></name></expr></argument>, <argument><expr><operator pos:line="67" pos:column="39">&amp;<pos:position pos:line="67" pos:column="44"/></operator><name pos:line="67" pos:column="40">pw<pos:position pos:line="67" pos:column="42"/></name></expr></argument>, <argument><expr><name pos:line="67" pos:column="44">pwbuf<pos:position pos:line="67" pos:column="49"/></name></expr></argument>)<pos:position pos:line="67" pos:column="50"/></argument_list></call><operator pos:line="67" pos:column="50">)<pos:position pos:line="67" pos:column="51"/></operator> <operator pos:line="67" pos:column="52">!=<pos:position pos:line="67" pos:column="54"/></operator> <name pos:line="67" pos:column="55">APR_SUCCESS<pos:position pos:line="67" pos:column="66"/></name></expr>)<pos:position pos:line="67" pos:column="67"/></condition><then pos:line="67" pos:column="67">
        <block type="pseudo"><return pos:line="68" pos:column="9">return <expr><name pos:line="68" pos:column="16">rv<pos:position pos:line="68" pos:column="18"/></name></expr>;<pos:position pos:line="68" pos:column="19"/></return></block></then></if>

    <expr_stmt><expr><operator pos:line="70" pos:column="5">*<pos:position pos:line="70" pos:column="6"/></operator><name pos:line="70" pos:column="6">uid<pos:position pos:line="70" pos:column="9"/></name> <operator pos:line="70" pos:column="10">=<pos:position pos:line="70" pos:column="11"/></operator> <name><name pos:line="70" pos:column="12">pw<pos:position pos:line="70" pos:column="14"/></name><operator pos:line="70" pos:column="14">.<pos:position pos:line="70" pos:column="15"/></operator><name pos:line="70" pos:column="15">pw_uid<pos:position pos:line="70" pos:column="21"/></name></name></expr>;<pos:position pos:line="70" pos:column="22"/></expr_stmt>
    <expr_stmt><expr><operator pos:line="71" pos:column="5">*<pos:position pos:line="71" pos:column="6"/></operator><name pos:line="71" pos:column="6">gid<pos:position pos:line="71" pos:column="9"/></name> <operator pos:line="71" pos:column="10">=<pos:position pos:line="71" pos:column="11"/></operator> <name><name pos:line="71" pos:column="12">pw<pos:position pos:line="71" pos:column="14"/></name><operator pos:line="71" pos:column="14">.<pos:position pos:line="71" pos:column="15"/></operator><name pos:line="71" pos:column="15">pw_gid<pos:position pos:line="71" pos:column="21"/></name></name></expr>;<pos:position pos:line="71" pos:column="22"/></expr_stmt>

    <return pos:line="73" pos:column="5">return <expr><name pos:line="73" pos:column="12">APR_SUCCESS<pos:position pos:line="73" pos:column="23"/></name></expr>;<pos:position pos:line="73" pos:column="24"/></return>
}<pos:position pos:line="74" pos:column="2"/></block>

<macro><name pos:line="76" pos:column="1">APR_DECLARE<pos:position pos:line="76" pos:column="12"/></name><argument_list pos:line="76" pos:column="12">(<argument pos:line="76" pos:column="13">apr_status_t<pos:position pos:line="76" pos:column="25"/></argument>)<pos:position pos:line="76" pos:column="26"/></argument_list></macro> <macro><name pos:line="76" pos:column="27">apr_uid_name_get<pos:position pos:line="76" pos:column="43"/></name><argument_list pos:line="76" pos:column="43">(<argument pos:line="76" pos:column="44">char **username<pos:position pos:line="76" pos:column="59"/></argument>, <argument pos:line="76" pos:column="61">apr_uid_t userid<pos:position pos:line="76" pos:column="77"/></argument>,
                                           <argument pos:line="77" pos:column="44">apr_pool_t *p<pos:position pos:line="77" pos:column="57"/></argument>)<pos:position pos:line="77" pos:column="58"/></argument_list></macro>
<block pos:line="78" pos:column="1">{
    <decl_stmt><decl><type><name><name pos:line="79" pos:column="5">struct<pos:position pos:line="79" pos:column="11"/></name> <name pos:line="79" pos:column="12">passwd<pos:position pos:line="79" pos:column="18"/></name></name> <modifier pos:line="79" pos:column="19">*<pos:position pos:line="79" pos:column="20"/></modifier></type><name pos:line="79" pos:column="20">pw<pos:position pos:line="79" pos:column="22"/></name></decl>;<pos:position pos:line="79" pos:column="23"/></decl_stmt>
<cpp:if pos:line="80" pos:column="1">#<cpp:directive pos:line="80" pos:column="2">if<pos:position pos:line="80" pos:column="4"/></cpp:directive> <expr><name pos:line="80" pos:column="5">APR_HAS_THREADS<pos:position pos:line="80" pos:column="20"/></name> <operator pos:line="80" pos:column="21">&amp;&amp;<pos:position pos:line="80" pos:column="31"/></operator> <call><name pos:line="80" pos:column="24">defined<pos:position pos:line="80" pos:column="31"/></name><argument_list pos:line="80" pos:column="31">(<argument><expr><name pos:line="80" pos:column="32">_POSIX_THREAD_SAFE_FUNCTIONS<pos:position pos:line="80" pos:column="60"/></name></expr></argument>)<pos:position pos:line="80" pos:column="61"/></argument_list></call> <operator pos:line="80" pos:column="62">&amp;&amp;<pos:position pos:line="80" pos:column="72"/></operator> <call><name pos:line="80" pos:column="65">defined<pos:position pos:line="80" pos:column="72"/></name><argument_list pos:line="80" pos:column="72">(<argument><expr><name pos:line="80" pos:column="73">HAVE_GETPWUID_R<pos:position pos:line="80" pos:column="88"/></name></expr></argument>)<pos:position pos:line="80" pos:column="89"/></argument_list></call></expr></cpp:if>
    <decl_stmt><decl><type><name><name pos:line="81" pos:column="5">struct<pos:position pos:line="81" pos:column="11"/></name> <name pos:line="81" pos:column="12">passwd<pos:position pos:line="81" pos:column="18"/></name></name></type> <name pos:line="81" pos:column="19">pwd<pos:position pos:line="81" pos:column="22"/></name></decl>;<pos:position pos:line="81" pos:column="23"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="82" pos:column="5">char<pos:position pos:line="82" pos:column="9"/></name></type> <name><name pos:line="82" pos:column="10">pwbuf<pos:position pos:line="82" pos:column="15"/></name><index pos:line="82" pos:column="15">[<expr><name pos:line="82" pos:column="16">PWBUF_SIZE<pos:position pos:line="82" pos:column="26"/></name></expr>]<pos:position pos:line="82" pos:column="27"/></index></name></decl>;<pos:position pos:line="82" pos:column="28"/></decl_stmt>

    <if pos:line="84" pos:column="5">if <condition pos:line="84" pos:column="8">(<expr><call><name pos:line="84" pos:column="9">getpwuid_r<pos:position pos:line="84" pos:column="19"/></name><argument_list pos:line="84" pos:column="19">(<argument><expr><name pos:line="84" pos:column="20">userid<pos:position pos:line="84" pos:column="26"/></name></expr></argument>, <argument><expr><operator pos:line="84" pos:column="28">&amp;<pos:position pos:line="84" pos:column="33"/></operator><name pos:line="84" pos:column="29">pwd<pos:position pos:line="84" pos:column="32"/></name></expr></argument>, <argument><expr><name pos:line="84" pos:column="34">pwbuf<pos:position pos:line="84" pos:column="39"/></name></expr></argument>, <argument><expr><sizeof pos:line="84" pos:column="41">sizeof<argument_list pos:line="84" pos:column="47">(<argument><expr><name pos:line="84" pos:column="48">pwbuf<pos:position pos:line="84" pos:column="53"/></name></expr></argument>)<pos:position pos:line="84" pos:column="54"/></argument_list></sizeof></expr></argument>, <argument><expr><operator pos:line="84" pos:column="56">&amp;<pos:position pos:line="84" pos:column="61"/></operator><name pos:line="84" pos:column="57">pw<pos:position pos:line="84" pos:column="59"/></name></expr></argument>)<pos:position pos:line="84" pos:column="60"/></argument_list></call></expr>)<pos:position pos:line="84" pos:column="61"/></condition><then pos:line="84" pos:column="61"> <block pos:line="84" pos:column="62">{
<cpp:else pos:line="85" pos:column="1">#<cpp:directive pos:line="85" pos:column="2">else<pos:position pos:line="85" pos:column="6"/></cpp:directive></cpp:else>
    <if pos:line="86" pos:column="5">if <condition pos:line="86" pos:column="8">(<expr><operator pos:line="86" pos:column="9">(<pos:position pos:line="86" pos:column="10"/></operator><name pos:line="86" pos:column="10">pw<pos:position pos:line="86" pos:column="12"/></name> <operator pos:line="86" pos:column="13">=<pos:position pos:line="86" pos:column="14"/></operator> <call><name pos:line="86" pos:column="15">getpwuid<pos:position pos:line="86" pos:column="23"/></name><argument_list pos:line="86" pos:column="23">(<argument><expr><name pos:line="86" pos:column="24">userid<pos:position pos:line="86" pos:column="30"/></name></expr></argument>)<pos:position pos:line="86" pos:column="31"/></argument_list></call><operator pos:line="86" pos:column="31">)<pos:position pos:line="86" pos:column="32"/></operator> <operator pos:line="86" pos:column="33">==<pos:position pos:line="86" pos:column="35"/></operator> <name pos:line="86" pos:column="36">NULL<pos:position pos:line="86" pos:column="40"/></name></expr>)<pos:position pos:line="86" pos:column="41"/></condition><then pos:line="86" pos:column="41"> <block pos:line="86" pos:column="42">{
<cpp:endif pos:line="87" pos:column="1">#<cpp:directive pos:line="87" pos:column="2">endif<pos:position pos:line="87" pos:column="7"/></cpp:directive></cpp:endif>
        <return pos:line="88" pos:column="9">return <expr><name pos:line="88" pos:column="16">errno<pos:position pos:line="88" pos:column="21"/></name></expr>;<pos:position pos:line="88" pos:column="22"/></return>
    }<pos:position pos:line="89" pos:column="6"/></block></then></if>
    <expr_stmt><expr><operator pos:line="90" pos:column="5">*<pos:position pos:line="90" pos:column="6"/></operator><name pos:line="90" pos:column="6">username<pos:position pos:line="90" pos:column="14"/></name> <operator pos:line="90" pos:column="15">=<pos:position pos:line="90" pos:column="16"/></operator> <call><name pos:line="90" pos:column="17">apr_pstrdup<pos:position pos:line="90" pos:column="28"/></name><argument_list pos:line="90" pos:column="28">(<argument><expr><name pos:line="90" pos:column="29">p<pos:position pos:line="90" pos:column="30"/></name></expr></argument>, <argument><expr><name><name pos:line="90" pos:column="32">pw<pos:position pos:line="90" pos:column="34"/></name><operator pos:line="90" pos:column="34">-&gt;<pos:position pos:line="90" pos:column="39"/></operator><name pos:line="90" pos:column="36">pw_name<pos:position pos:line="90" pos:column="43"/></name></name></expr></argument>)<pos:position pos:line="90" pos:column="44"/></argument_list></call></expr>;<pos:position pos:line="90" pos:column="45"/></expr_stmt>
    <return pos:line="91" pos:column="5">return <expr><name pos:line="91" pos:column="12">APR_SUCCESS<pos:position pos:line="91" pos:column="23"/></name></expr>;<pos:position pos:line="91" pos:column="24"/></return>
}<pos:position pos:line="92" pos:column="2"/></block></then></if>

<comment type="block" pos:line="94" pos:column="1">/* deprecated */</comment>  
<macro><name pos:line="95" pos:column="1">APR_DECLARE<pos:position pos:line="95" pos:column="12"/></name><argument_list pos:line="95" pos:column="12">(<argument pos:line="95" pos:column="13">apr_status_t<pos:position pos:line="95" pos:column="25"/></argument>)<pos:position pos:line="95" pos:column="26"/></argument_list></macro> <macro><name pos:line="95" pos:column="27">apr_get_home_directory<pos:position pos:line="95" pos:column="49"/></name><argument_list pos:line="95" pos:column="49">(<argument pos:line="95" pos:column="50">char **dirname<pos:position pos:line="95" pos:column="64"/></argument>,
                                                 <argument pos:line="96" pos:column="50">const char *username<pos:position pos:line="96" pos:column="70"/></argument>,
                                                 <argument pos:line="97" pos:column="50">apr_pool_t *p<pos:position pos:line="97" pos:column="63"/></argument>)<pos:position pos:line="97" pos:column="64"/></argument_list></macro>
<block pos:line="98" pos:column="1">{
    <return pos:line="99" pos:column="5">return <expr><call><name pos:line="99" pos:column="12">apr_uid_homepath_get<pos:position pos:line="99" pos:column="32"/></name><argument_list pos:line="99" pos:column="32">(<argument><expr><name pos:line="99" pos:column="33">dirname<pos:position pos:line="99" pos:column="40"/></name></expr></argument>, <argument><expr><name pos:line="99" pos:column="42">username<pos:position pos:line="99" pos:column="50"/></name></expr></argument>, <argument><expr><name pos:line="99" pos:column="52">p<pos:position pos:line="99" pos:column="53"/></name></expr></argument>)<pos:position pos:line="99" pos:column="54"/></argument_list></call></expr>;<pos:position pos:line="99" pos:column="55"/></return>
}<pos:position pos:line="100" pos:column="2"/></block>

<comment type="block" pos:line="102" pos:column="1">/* deprecated */</comment>
<macro><name pos:line="103" pos:column="1">APR_DECLARE<pos:position pos:line="103" pos:column="12"/></name><argument_list pos:line="103" pos:column="12">(<argument pos:line="103" pos:column="13">apr_status_t<pos:position pos:line="103" pos:column="25"/></argument>)<pos:position pos:line="103" pos:column="26"/></argument_list></macro> <macro><name pos:line="103" pos:column="27">apr_get_userid<pos:position pos:line="103" pos:column="41"/></name><argument_list pos:line="103" pos:column="41">(<argument pos:line="103" pos:column="42">apr_uid_t *uid<pos:position pos:line="103" pos:column="56"/></argument>, <argument pos:line="103" pos:column="58">apr_gid_t *gid<pos:position pos:line="103" pos:column="72"/></argument>,
                                         <argument pos:line="104" pos:column="42">const char *username<pos:position pos:line="104" pos:column="62"/></argument>, <argument pos:line="104" pos:column="64">apr_pool_t *p<pos:position pos:line="104" pos:column="77"/></argument>)<pos:position pos:line="104" pos:column="78"/></argument_list></macro>
<block pos:line="105" pos:column="1">{
    <return pos:line="106" pos:column="5">return <expr><call><name pos:line="106" pos:column="12">apr_uid_get<pos:position pos:line="106" pos:column="23"/></name><argument_list pos:line="106" pos:column="23">(<argument><expr><name pos:line="106" pos:column="24">uid<pos:position pos:line="106" pos:column="27"/></name></expr></argument>, <argument><expr><name pos:line="106" pos:column="29">gid<pos:position pos:line="106" pos:column="32"/></name></expr></argument>, <argument><expr><name pos:line="106" pos:column="34">username<pos:position pos:line="106" pos:column="42"/></name></expr></argument>, <argument><expr><name pos:line="106" pos:column="44">p<pos:position pos:line="106" pos:column="45"/></name></expr></argument>)<pos:position pos:line="106" pos:column="46"/></argument_list></call></expr>;<pos:position pos:line="106" pos:column="47"/></return>
}<pos:position pos:line="107" pos:column="2"/></block>

<comment type="block" pos:line="109" pos:column="1">/* deprecated */</comment>
<macro><name pos:line="110" pos:column="1">APR_DECLARE<pos:position pos:line="110" pos:column="12"/></name><argument_list pos:line="110" pos:column="12">(<argument pos:line="110" pos:column="13">apr_status_t<pos:position pos:line="110" pos:column="25"/></argument>)<pos:position pos:line="110" pos:column="26"/></argument_list></macro> <macro><name pos:line="110" pos:column="27">apr_current_userid<pos:position pos:line="110" pos:column="45"/></name><argument_list pos:line="110" pos:column="45">(<argument pos:line="110" pos:column="46">apr_uid_t *uid<pos:position pos:line="110" pos:column="60"/></argument>,
                                             <argument pos:line="111" pos:column="46">apr_gid_t *gid<pos:position pos:line="111" pos:column="60"/></argument>,
                                             <argument pos:line="112" pos:column="46">apr_pool_t *p<pos:position pos:line="112" pos:column="59"/></argument>)<pos:position pos:line="112" pos:column="60"/></argument_list></macro>
<block pos:line="113" pos:column="1">{
    <return pos:line="114" pos:column="5">return <expr><call><name pos:line="114" pos:column="12">apr_uid_current<pos:position pos:line="114" pos:column="27"/></name><argument_list pos:line="114" pos:column="27">(<argument><expr><name pos:line="114" pos:column="28">uid<pos:position pos:line="114" pos:column="31"/></name></expr></argument>, <argument><expr><name pos:line="114" pos:column="33">gid<pos:position pos:line="114" pos:column="36"/></name></expr></argument>, <argument><expr><name pos:line="114" pos:column="38">p<pos:position pos:line="114" pos:column="39"/></name></expr></argument>)<pos:position pos:line="114" pos:column="40"/></argument_list></call></expr>;<pos:position pos:line="114" pos:column="41"/></return>
}<pos:position pos:line="115" pos:column="2"/></block>

<comment type="block" pos:line="117" pos:column="1">/* deprecated */</comment>
<macro><name pos:line="118" pos:column="1">APR_DECLARE<pos:position pos:line="118" pos:column="12"/></name><argument_list pos:line="118" pos:column="12">(<argument pos:line="118" pos:column="13">apr_status_t<pos:position pos:line="118" pos:column="25"/></argument>)<pos:position pos:line="118" pos:column="26"/></argument_list></macro> <macro><name pos:line="118" pos:column="27">apr_get_username<pos:position pos:line="118" pos:column="43"/></name><argument_list pos:line="118" pos:column="43">(<argument pos:line="118" pos:column="44">char **username<pos:position pos:line="118" pos:column="59"/></argument>, <argument pos:line="118" pos:column="61">apr_uid_t userid<pos:position pos:line="118" pos:column="77"/></argument>, 
                                           <argument pos:line="119" pos:column="44">apr_pool_t *p<pos:position pos:line="119" pos:column="57"/></argument>)<pos:position pos:line="119" pos:column="58"/></argument_list></macro>
<block pos:line="120" pos:column="1">{
    <return pos:line="121" pos:column="5">return <expr><call><name pos:line="121" pos:column="12">apr_uid_name_get<pos:position pos:line="121" pos:column="28"/></name><argument_list pos:line="121" pos:column="28">(<argument><expr><name pos:line="121" pos:column="29">username<pos:position pos:line="121" pos:column="37"/></name></expr></argument>, <argument><expr><name pos:line="121" pos:column="39">userid<pos:position pos:line="121" pos:column="45"/></name></expr></argument>, <argument><expr><name pos:line="121" pos:column="47">p<pos:position pos:line="121" pos:column="48"/></name></expr></argument>)<pos:position pos:line="121" pos:column="49"/></argument_list></call></expr>;<pos:position pos:line="121" pos:column="50"/></return>
}<pos:position pos:line="122" pos:column="2"/></block></block></block></function></unit>

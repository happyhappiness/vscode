<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/httpd/gumtree/httpd_repos_function_3112_httpd-2.4.25.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">int<pos:position pos:line="1" pos:column="11"/></name></type> <name pos:line="1" pos:column="12">include_fixup<pos:position pos:line="1" pos:column="25"/></name><parameter_list pos:line="1" pos:column="25">(<parameter><decl><type><name pos:line="1" pos:column="26">request_rec<pos:position pos:line="1" pos:column="37"/></name> <modifier pos:line="1" pos:column="38">*<pos:position pos:line="1" pos:column="39"/></modifier></type><name pos:line="1" pos:column="39">r<pos:position pos:line="1" pos:column="40"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="41"/></parameter_list>
<block pos:line="2" pos:column="1">{
    <if pos:line="3" pos:column="5">if <condition pos:line="3" pos:column="8">(<expr><name><name pos:line="3" pos:column="9">r<pos:position pos:line="3" pos:column="10"/></name><operator pos:line="3" pos:column="10">-&gt;<pos:position pos:line="3" pos:column="15"/></operator><name pos:line="3" pos:column="12">handler<pos:position pos:line="3" pos:column="19"/></name></name> <operator pos:line="3" pos:column="20">&amp;&amp;<pos:position pos:line="3" pos:column="30"/></operator> <operator pos:line="3" pos:column="23">(<pos:position pos:line="3" pos:column="24"/></operator><call><name pos:line="3" pos:column="24">strcmp<pos:position pos:line="3" pos:column="30"/></name><argument_list pos:line="3" pos:column="30">(<argument><expr><name><name pos:line="3" pos:column="31">r<pos:position pos:line="3" pos:column="32"/></name><operator pos:line="3" pos:column="32">-&gt;<pos:position pos:line="3" pos:column="37"/></operator><name pos:line="3" pos:column="34">handler<pos:position pos:line="3" pos:column="41"/></name></name></expr></argument>, <argument><expr><literal type="string" pos:line="3" pos:column="43">"server-parsed"<pos:position pos:line="3" pos:column="58"/></literal></expr></argument>)<pos:position pos:line="3" pos:column="59"/></argument_list></call> <operator pos:line="3" pos:column="60">==<pos:position pos:line="3" pos:column="62"/></operator> <literal type="number" pos:line="3" pos:column="63">0<pos:position pos:line="3" pos:column="64"/></literal><operator pos:line="3" pos:column="64">)<pos:position pos:line="3" pos:column="65"/></operator></expr>)<pos:position pos:line="3" pos:column="66"/></condition><then pos:line="3" pos:column="66">
    <block pos:line="4" pos:column="5">{
        <if pos:line="5" pos:column="9">if <condition pos:line="5" pos:column="12">(<expr><operator pos:line="5" pos:column="13">!<pos:position pos:line="5" pos:column="14"/></operator><name><name pos:line="5" pos:column="14">r<pos:position pos:line="5" pos:column="15"/></name><operator pos:line="5" pos:column="15">-&gt;<pos:position pos:line="5" pos:column="20"/></operator><name pos:line="5" pos:column="17">content_type<pos:position pos:line="5" pos:column="29"/></name></name> <operator pos:line="5" pos:column="30">||<pos:position pos:line="5" pos:column="32"/></operator> <operator pos:line="5" pos:column="33">!<pos:position pos:line="5" pos:column="34"/></operator><operator pos:line="5" pos:column="34">*<pos:position pos:line="5" pos:column="35"/></operator><name><name pos:line="5" pos:column="35">r<pos:position pos:line="5" pos:column="36"/></name><operator pos:line="5" pos:column="36">-&gt;<pos:position pos:line="5" pos:column="41"/></operator><name pos:line="5" pos:column="38">content_type<pos:position pos:line="5" pos:column="50"/></name></name></expr>)<pos:position pos:line="5" pos:column="51"/></condition><then pos:line="5" pos:column="51"> <block pos:line="5" pos:column="52">{
            <expr_stmt><expr><call><name pos:line="6" pos:column="13">ap_set_content_type<pos:position pos:line="6" pos:column="32"/></name><argument_list pos:line="6" pos:column="32">(<argument><expr><name pos:line="6" pos:column="33">r<pos:position pos:line="6" pos:column="34"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="6" pos:column="36">"text/html"<pos:position pos:line="6" pos:column="47"/></literal></expr></argument>)<pos:position pos:line="6" pos:column="48"/></argument_list></call></expr>;<pos:position pos:line="6" pos:column="49"/></expr_stmt>
        }<pos:position pos:line="7" pos:column="10"/></block></then></if>
        <expr_stmt><expr><name><name pos:line="8" pos:column="9">r<pos:position pos:line="8" pos:column="10"/></name><operator pos:line="8" pos:column="10">-&gt;<pos:position pos:line="8" pos:column="15"/></operator><name pos:line="8" pos:column="12">handler<pos:position pos:line="8" pos:column="19"/></name></name> <operator pos:line="8" pos:column="20">=<pos:position pos:line="8" pos:column="21"/></operator> <literal type="string" pos:line="8" pos:column="22">"default-handler"<pos:position pos:line="8" pos:column="39"/></literal></expr>;<pos:position pos:line="8" pos:column="40"/></expr_stmt>
    }<pos:position pos:line="9" pos:column="6"/></block></then>
    <else pos:line="10" pos:column="5">else
<cpp:if pos:line="11" pos:column="1">#<cpp:directive pos:line="11" pos:column="2">if<pos:position pos:line="11" pos:column="4"/></cpp:directive> <expr><call><name pos:line="11" pos:column="5">defined<pos:position pos:line="11" pos:column="12"/></name><argument_list pos:line="11" pos:column="12">(<argument><expr><name pos:line="11" pos:column="13">OS2<pos:position pos:line="11" pos:column="16"/></name></expr></argument>)<pos:position pos:line="11" pos:column="17"/></argument_list></call> <operator pos:line="11" pos:column="18">||<pos:position pos:line="11" pos:column="20"/></operator> <call><name pos:line="11" pos:column="21">defined<pos:position pos:line="11" pos:column="28"/></name><argument_list pos:line="11" pos:column="28">(<argument><expr><name pos:line="11" pos:column="29">WIN32<pos:position pos:line="11" pos:column="34"/></name></expr></argument>)<pos:position pos:line="11" pos:column="35"/></argument_list></call> <operator pos:line="11" pos:column="36">||<pos:position pos:line="11" pos:column="38"/></operator> <call><name pos:line="11" pos:column="39">defined<pos:position pos:line="11" pos:column="46"/></name><argument_list pos:line="11" pos:column="46">(<argument><expr><name pos:line="11" pos:column="47">NETWARE<pos:position pos:line="11" pos:column="54"/></name></expr></argument>)<pos:position pos:line="11" pos:column="55"/></argument_list></call></expr></cpp:if>
    <comment type="block" pos:line="12" pos:column="5">/* These OS's don't support xbithack. This is being worked on. */</comment>
    <block pos:line="13" pos:column="5">{
        <return pos:line="14" pos:column="9">return <expr><name pos:line="14" pos:column="16">DECLINED<pos:position pos:line="14" pos:column="24"/></name></expr>;<pos:position pos:line="14" pos:column="25"/></return>
    }<pos:position pos:line="15" pos:column="6"/></block></else></if>
<cpp:else pos:line="16" pos:column="1">#<cpp:directive pos:line="16" pos:column="2">else<pos:position pos:line="16" pos:column="6"/></cpp:directive></cpp:else>
    <block pos:line="17" pos:column="5">{
        <decl_stmt><decl><type><name pos:line="18" pos:column="9">include_dir_config<pos:position pos:line="18" pos:column="27"/></name> <modifier pos:line="18" pos:column="28">*<pos:position pos:line="18" pos:column="29"/></modifier></type><name pos:line="18" pos:column="29">conf<pos:position pos:line="18" pos:column="33"/></name> <init pos:line="18" pos:column="34">= <expr><call><name pos:line="18" pos:column="36">ap_get_module_config<pos:position pos:line="18" pos:column="56"/></name><argument_list pos:line="18" pos:column="56">(<argument><expr><name><name pos:line="18" pos:column="57">r<pos:position pos:line="18" pos:column="58"/></name><operator pos:line="18" pos:column="58">-&gt;<pos:position pos:line="18" pos:column="63"/></operator><name pos:line="18" pos:column="60">per_dir_config<pos:position pos:line="18" pos:column="74"/></name></name></expr></argument>,
                                                        <argument><expr><operator pos:line="19" pos:column="57">&amp;<pos:position pos:line="19" pos:column="62"/></operator><name pos:line="19" pos:column="58">include_module<pos:position pos:line="19" pos:column="72"/></name></expr></argument>)<pos:position pos:line="19" pos:column="73"/></argument_list></call></expr></init></decl>;<pos:position pos:line="19" pos:column="74"/></decl_stmt>

        <if pos:line="21" pos:column="9">if <condition pos:line="21" pos:column="12">(<expr><name><name pos:line="21" pos:column="13">conf<pos:position pos:line="21" pos:column="17"/></name><operator pos:line="21" pos:column="17">-&gt;<pos:position pos:line="21" pos:column="22"/></operator><name pos:line="21" pos:column="19">xbithack<pos:position pos:line="21" pos:column="27"/></name></name> <operator pos:line="21" pos:column="28">==<pos:position pos:line="21" pos:column="30"/></operator> <name pos:line="21" pos:column="31">XBITHACK_OFF<pos:position pos:line="21" pos:column="43"/></name> <operator pos:line="21" pos:column="44">||<pos:position pos:line="21" pos:column="46"/></operator>
            <operator pos:line="22" pos:column="13">(<pos:position pos:line="22" pos:column="14"/></operator><name pos:line="22" pos:column="14">DEFAULT_XBITHACK<pos:position pos:line="22" pos:column="30"/></name> <operator pos:line="22" pos:column="31">==<pos:position pos:line="22" pos:column="33"/></operator> <name pos:line="22" pos:column="34">XBITHACK_OFF<pos:position pos:line="22" pos:column="46"/></name> <operator pos:line="22" pos:column="47">&amp;&amp;<pos:position pos:line="22" pos:column="57"/></operator>
             <name><name pos:line="23" pos:column="14">conf<pos:position pos:line="23" pos:column="18"/></name><operator pos:line="23" pos:column="18">-&gt;<pos:position pos:line="23" pos:column="23"/></operator><name pos:line="23" pos:column="20">xbithack<pos:position pos:line="23" pos:column="28"/></name></name> <operator pos:line="23" pos:column="29">==<pos:position pos:line="23" pos:column="31"/></operator> <name pos:line="23" pos:column="32">XBITHACK_UNSET<pos:position pos:line="23" pos:column="46"/></name><operator pos:line="23" pos:column="46">)<pos:position pos:line="23" pos:column="47"/></operator></expr>)<pos:position pos:line="23" pos:column="48"/></condition><then pos:line="23" pos:column="48">
        <block pos:line="24" pos:column="9">{
            <return pos:line="25" pos:column="13">return <expr><name pos:line="25" pos:column="20">DECLINED<pos:position pos:line="25" pos:column="28"/></name></expr>;<pos:position pos:line="25" pos:column="29"/></return>
        }<pos:position pos:line="26" pos:column="10"/></block></then></if>

        <if pos:line="28" pos:column="9">if <condition pos:line="28" pos:column="12">(<expr><operator pos:line="28" pos:column="13">!<pos:position pos:line="28" pos:column="14"/></operator><operator pos:line="28" pos:column="14">(<pos:position pos:line="28" pos:column="15"/></operator><name><name pos:line="28" pos:column="15">r<pos:position pos:line="28" pos:column="16"/></name><operator pos:line="28" pos:column="16">-&gt;<pos:position pos:line="28" pos:column="21"/></operator><name pos:line="28" pos:column="18">finfo<pos:position pos:line="28" pos:column="23"/></name><operator pos:line="28" pos:column="23">.<pos:position pos:line="28" pos:column="24"/></operator><name pos:line="28" pos:column="24">protection<pos:position pos:line="28" pos:column="34"/></name></name> <operator pos:line="28" pos:column="35">&amp;<pos:position pos:line="28" pos:column="40"/></operator> <name pos:line="28" pos:column="37">APR_UEXECUTE<pos:position pos:line="28" pos:column="49"/></name><operator pos:line="28" pos:column="49">)<pos:position pos:line="28" pos:column="50"/></operator></expr>)<pos:position pos:line="28" pos:column="51"/></condition><then pos:line="28" pos:column="51"> <block pos:line="28" pos:column="52">{
            <return pos:line="29" pos:column="13">return <expr><name pos:line="29" pos:column="20">DECLINED<pos:position pos:line="29" pos:column="28"/></name></expr>;<pos:position pos:line="29" pos:column="29"/></return>
        }<pos:position pos:line="30" pos:column="10"/></block></then></if>

        <if pos:line="32" pos:column="9">if <condition pos:line="32" pos:column="12">(<expr><operator pos:line="32" pos:column="13">!<pos:position pos:line="32" pos:column="14"/></operator><name><name pos:line="32" pos:column="14">r<pos:position pos:line="32" pos:column="15"/></name><operator pos:line="32" pos:column="15">-&gt;<pos:position pos:line="32" pos:column="20"/></operator><name pos:line="32" pos:column="17">content_type<pos:position pos:line="32" pos:column="29"/></name></name> <operator pos:line="32" pos:column="30">||<pos:position pos:line="32" pos:column="32"/></operator> <call><name pos:line="32" pos:column="33">strncmp<pos:position pos:line="32" pos:column="40"/></name><argument_list pos:line="32" pos:column="40">(<argument><expr><name><name pos:line="32" pos:column="41">r<pos:position pos:line="32" pos:column="42"/></name><operator pos:line="32" pos:column="42">-&gt;<pos:position pos:line="32" pos:column="47"/></operator><name pos:line="32" pos:column="44">content_type<pos:position pos:line="32" pos:column="56"/></name></name></expr></argument>, <argument><expr><literal type="string" pos:line="32" pos:column="58">"text/html"<pos:position pos:line="32" pos:column="69"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="32" pos:column="71">9<pos:position pos:line="32" pos:column="72"/></literal></expr></argument>)<pos:position pos:line="32" pos:column="73"/></argument_list></call></expr>)<pos:position pos:line="32" pos:column="74"/></condition><then pos:line="32" pos:column="74"> <block pos:line="32" pos:column="75">{
            <return pos:line="33" pos:column="13">return <expr><name pos:line="33" pos:column="20">DECLINED<pos:position pos:line="33" pos:column="28"/></name></expr>;<pos:position pos:line="33" pos:column="29"/></return>
        }<pos:position pos:line="34" pos:column="10"/></block></then></if>
    }<pos:position pos:line="35" pos:column="6"/></block>
<cpp:endif pos:line="36" pos:column="1">#<cpp:directive pos:line="36" pos:column="2">endif<pos:position pos:line="36" pos:column="7"/></cpp:directive></cpp:endif>

    <comment type="block" pos:line="38" pos:column="5">/* We always return declined, because the default handler actually
     * serves the file.  All we have to do is add the filter.
     */</comment>
    <expr_stmt><expr><call><name pos:line="41" pos:column="5">ap_add_output_filter<pos:position pos:line="41" pos:column="25"/></name><argument_list pos:line="41" pos:column="25">(<argument><expr><literal type="string" pos:line="41" pos:column="26">"INCLUDES"<pos:position pos:line="41" pos:column="36"/></literal></expr></argument>, <argument><expr><name pos:line="41" pos:column="38">NULL<pos:position pos:line="41" pos:column="42"/></name></expr></argument>, <argument><expr><name pos:line="41" pos:column="44">r<pos:position pos:line="41" pos:column="45"/></name></expr></argument>, <argument><expr><name><name pos:line="41" pos:column="47">r<pos:position pos:line="41" pos:column="48"/></name><operator pos:line="41" pos:column="48">-&gt;<pos:position pos:line="41" pos:column="53"/></operator><name pos:line="41" pos:column="50">connection<pos:position pos:line="41" pos:column="60"/></name></name></expr></argument>)<pos:position pos:line="41" pos:column="61"/></argument_list></call></expr>;<pos:position pos:line="41" pos:column="62"/></expr_stmt>
    <return pos:line="42" pos:column="5">return <expr><name pos:line="42" pos:column="12">DECLINED<pos:position pos:line="42" pos:column="20"/></name></expr>;<pos:position pos:line="42" pos:column="21"/></return>
}<pos:position pos:line="43" pos:column="2"/></block></function></unit>

<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/httpd/gumtree/httpd_function_3013.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">authz_status<pos:position pos:line="1" pos:column="20"/></name></type> <name pos:line="1" pos:column="21">dbdgroup_check_authorization<pos:position pos:line="1" pos:column="49"/></name><parameter_list pos:line="1" pos:column="49">(<parameter><decl><type><name pos:line="1" pos:column="50">request_rec<pos:position pos:line="1" pos:column="61"/></name> <modifier pos:line="1" pos:column="62">*<pos:position pos:line="1" pos:column="63"/></modifier></type><name pos:line="1" pos:column="63">r<pos:position pos:line="1" pos:column="64"/></name></decl></parameter>,
                                              <parameter><decl><type><specifier pos:line="2" pos:column="47">const<pos:position pos:line="2" pos:column="52"/></specifier> <name pos:line="2" pos:column="53">char<pos:position pos:line="2" pos:column="57"/></name> <modifier pos:line="2" pos:column="58">*<pos:position pos:line="2" pos:column="59"/></modifier></type><name pos:line="2" pos:column="59">require_args<pos:position pos:line="2" pos:column="71"/></name></decl></parameter>)<pos:position pos:line="2" pos:column="72"/></parameter_list>
<block pos:line="3" pos:column="1">{
    <decl_stmt><decl><type><name pos:line="4" pos:column="5">int<pos:position pos:line="4" pos:column="8"/></name></type> <name pos:line="4" pos:column="9">i<pos:position pos:line="4" pos:column="10"/></name></decl>, <decl><type ref="prev"/><name pos:line="4" pos:column="12">rv<pos:position pos:line="4" pos:column="14"/></name></decl>;<pos:position pos:line="4" pos:column="15"/></decl_stmt>
    <decl_stmt><decl><type><specifier pos:line="5" pos:column="5">const<pos:position pos:line="5" pos:column="10"/></specifier> <name pos:line="5" pos:column="11">char<pos:position pos:line="5" pos:column="15"/></name> <modifier pos:line="5" pos:column="16">*<pos:position pos:line="5" pos:column="17"/></modifier></type><name pos:line="5" pos:column="17">w<pos:position pos:line="5" pos:column="18"/></name></decl>;<pos:position pos:line="5" pos:column="19"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="6" pos:column="5">apr_array_header_t<pos:position pos:line="6" pos:column="23"/></name> <modifier pos:line="6" pos:column="24">*<pos:position pos:line="6" pos:column="25"/></modifier></type><name pos:line="6" pos:column="25">groups<pos:position pos:line="6" pos:column="31"/></name> <init pos:line="6" pos:column="32">= <expr><name pos:line="6" pos:column="34">NULL<pos:position pos:line="6" pos:column="38"/></name></expr></init></decl>;<pos:position pos:line="6" pos:column="39"/></decl_stmt>
    <decl_stmt><decl><type><specifier pos:line="7" pos:column="5">const<pos:position pos:line="7" pos:column="10"/></specifier> <name pos:line="7" pos:column="11">char<pos:position pos:line="7" pos:column="15"/></name> <modifier pos:line="7" pos:column="16">*<pos:position pos:line="7" pos:column="17"/></modifier></type><name pos:line="7" pos:column="17">t<pos:position pos:line="7" pos:column="18"/></name></decl>;<pos:position pos:line="7" pos:column="19"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="8" pos:column="5">authz_dbd_cfg<pos:position pos:line="8" pos:column="18"/></name> <modifier pos:line="8" pos:column="19">*<pos:position pos:line="8" pos:column="20"/></modifier></type><name pos:line="8" pos:column="20">cfg<pos:position pos:line="8" pos:column="23"/></name> <init pos:line="8" pos:column="24">= <expr><call><name pos:line="8" pos:column="26">ap_get_module_config<pos:position pos:line="8" pos:column="46"/></name><argument_list pos:line="8" pos:column="46">(<argument><expr><name><name pos:line="8" pos:column="47">r<pos:position pos:line="8" pos:column="48"/></name><operator pos:line="8" pos:column="48">-&gt;<pos:position pos:line="8" pos:column="53"/></operator><name pos:line="8" pos:column="50">per_dir_config<pos:position pos:line="8" pos:column="64"/></name></name></expr></argument>,
                                              <argument><expr><operator pos:line="9" pos:column="47">&amp;<pos:position pos:line="9" pos:column="52"/></operator><name pos:line="9" pos:column="48">authz_dbd_module<pos:position pos:line="9" pos:column="64"/></name></expr></argument>)<pos:position pos:line="9" pos:column="65"/></argument_list></call></expr></init></decl>;<pos:position pos:line="9" pos:column="66"/></decl_stmt>

    <if pos:line="11" pos:column="5">if <condition pos:line="11" pos:column="8">(<expr><operator pos:line="11" pos:column="9">!<pos:position pos:line="11" pos:column="10"/></operator><name><name pos:line="11" pos:column="10">r<pos:position pos:line="11" pos:column="11"/></name><operator pos:line="11" pos:column="11">-&gt;<pos:position pos:line="11" pos:column="16"/></operator><name pos:line="11" pos:column="13">user<pos:position pos:line="11" pos:column="17"/></name></name></expr>)<pos:position pos:line="11" pos:column="18"/></condition><then pos:line="11" pos:column="18"> <block pos:line="11" pos:column="19">{
        <expr_stmt><expr><call><name pos:line="12" pos:column="9">ap_log_rerror<pos:position pos:line="12" pos:column="22"/></name><argument_list pos:line="12" pos:column="22">(<argument><expr><name pos:line="12" pos:column="23">APLOG_MARK<pos:position pos:line="12" pos:column="33"/></name></expr></argument>, <argument><expr><name pos:line="12" pos:column="35">APLOG_ERR<pos:position pos:line="12" pos:column="44"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="12" pos:column="46">0<pos:position pos:line="12" pos:column="47"/></literal></expr></argument>, <argument><expr><name pos:line="12" pos:column="49">r<pos:position pos:line="12" pos:column="50"/></name></expr></argument>,
            <argument><expr><literal type="string" pos:line="13" pos:column="13">"access to %s failed, reason: no authenticated user"<pos:position pos:line="13" pos:column="65"/></literal></expr></argument>, <argument><expr><name><name pos:line="13" pos:column="67">r<pos:position pos:line="13" pos:column="68"/></name><operator pos:line="13" pos:column="68">-&gt;<pos:position pos:line="13" pos:column="73"/></operator><name pos:line="13" pos:column="70">uri<pos:position pos:line="13" pos:column="73"/></name></name></expr></argument>)<pos:position pos:line="13" pos:column="74"/></argument_list></call></expr>;<pos:position pos:line="13" pos:column="75"/></expr_stmt>
        <return pos:line="14" pos:column="9">return <expr><name pos:line="14" pos:column="16">AUTHZ_DENIED<pos:position pos:line="14" pos:column="28"/></name></expr>;<pos:position pos:line="14" pos:column="29"/></return>
    }<pos:position pos:line="15" pos:column="6"/></block></then></if>

    <if pos:line="17" pos:column="5">if <condition pos:line="17" pos:column="8">(<expr><name pos:line="17" pos:column="9">groups<pos:position pos:line="17" pos:column="15"/></name> <operator pos:line="17" pos:column="16">==<pos:position pos:line="17" pos:column="18"/></operator> <name pos:line="17" pos:column="19">NULL<pos:position pos:line="17" pos:column="23"/></name></expr>)<pos:position pos:line="17" pos:column="24"/></condition><then pos:line="17" pos:column="24"> <block pos:line="17" pos:column="25">{
        <expr_stmt><expr><name pos:line="18" pos:column="9">groups<pos:position pos:line="18" pos:column="15"/></name> <operator pos:line="18" pos:column="16">=<pos:position pos:line="18" pos:column="17"/></operator> <call><name pos:line="18" pos:column="18">apr_array_make<pos:position pos:line="18" pos:column="32"/></name><argument_list pos:line="18" pos:column="32">(<argument><expr><name><name pos:line="18" pos:column="33">r<pos:position pos:line="18" pos:column="34"/></name><operator pos:line="18" pos:column="34">-&gt;<pos:position pos:line="18" pos:column="39"/></operator><name pos:line="18" pos:column="36">pool<pos:position pos:line="18" pos:column="40"/></name></name></expr></argument>, <argument><expr><literal type="number" pos:line="18" pos:column="42">4<pos:position pos:line="18" pos:column="43"/></literal></expr></argument>, <argument><expr><sizeof pos:line="18" pos:column="45">sizeof<argument_list pos:line="18" pos:column="51">(<argument><expr><specifier pos:line="18" pos:column="52">const<pos:position pos:line="18" pos:column="57"/></specifier> <name pos:line="18" pos:column="58">char<pos:position pos:line="18" pos:column="62"/></name><operator pos:line="18" pos:column="62">*<pos:position pos:line="18" pos:column="63"/></operator></expr></argument>)<pos:position pos:line="18" pos:column="64"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="18" pos:column="65"/></argument_list></call></expr>;<pos:position pos:line="18" pos:column="66"/></expr_stmt>
        <expr_stmt><expr><name pos:line="19" pos:column="9">rv<pos:position pos:line="19" pos:column="11"/></name> <operator pos:line="19" pos:column="12">=<pos:position pos:line="19" pos:column="13"/></operator> <call><name pos:line="19" pos:column="14">authz_dbd_group_query<pos:position pos:line="19" pos:column="35"/></name><argument_list pos:line="19" pos:column="35">(<argument><expr><name pos:line="19" pos:column="36">r<pos:position pos:line="19" pos:column="37"/></name></expr></argument>, <argument><expr><name pos:line="19" pos:column="39">cfg<pos:position pos:line="19" pos:column="42"/></name></expr></argument>, <argument><expr><name pos:line="19" pos:column="44">groups<pos:position pos:line="19" pos:column="50"/></name></expr></argument>)<pos:position pos:line="19" pos:column="51"/></argument_list></call></expr>;<pos:position pos:line="19" pos:column="52"/></expr_stmt>
        <if pos:line="20" pos:column="9">if <condition pos:line="20" pos:column="12">(<expr><name pos:line="20" pos:column="13">rv<pos:position pos:line="20" pos:column="15"/></name> <operator pos:line="20" pos:column="16">!=<pos:position pos:line="20" pos:column="18"/></operator> <name pos:line="20" pos:column="19">OK<pos:position pos:line="20" pos:column="21"/></name></expr>)<pos:position pos:line="20" pos:column="22"/></condition><then pos:line="20" pos:column="22"> <block pos:line="20" pos:column="23">{
            <return pos:line="21" pos:column="13">return <expr><name pos:line="21" pos:column="20">AUTHZ_GENERAL_ERROR<pos:position pos:line="21" pos:column="39"/></name></expr>;<pos:position pos:line="21" pos:column="40"/></return>
        }<pos:position pos:line="22" pos:column="10"/></block></then></if>
    }<pos:position pos:line="23" pos:column="6"/></block></then></if>

    <expr_stmt><expr><name pos:line="25" pos:column="5">t<pos:position pos:line="25" pos:column="6"/></name> <operator pos:line="25" pos:column="7">=<pos:position pos:line="25" pos:column="8"/></operator> <name pos:line="25" pos:column="9">require_args<pos:position pos:line="25" pos:column="21"/></name></expr>;<pos:position pos:line="25" pos:column="22"/></expr_stmt>
    <while pos:line="26" pos:column="5">while <condition pos:line="26" pos:column="11">(<expr><name><name pos:line="26" pos:column="12">t<pos:position pos:line="26" pos:column="13"/></name><index pos:line="26" pos:column="13">[<expr><literal type="number" pos:line="26" pos:column="14">0<pos:position pos:line="26" pos:column="15"/></literal></expr>]<pos:position pos:line="26" pos:column="16"/></index></name></expr>)<pos:position pos:line="26" pos:column="17"/></condition> <block pos:line="26" pos:column="18">{
        <expr_stmt><expr><name pos:line="27" pos:column="9">w<pos:position pos:line="27" pos:column="10"/></name> <operator pos:line="27" pos:column="11">=<pos:position pos:line="27" pos:column="12"/></operator> <call><name pos:line="27" pos:column="13">ap_getword_white<pos:position pos:line="27" pos:column="29"/></name><argument_list pos:line="27" pos:column="29">(<argument><expr><name><name pos:line="27" pos:column="30">r<pos:position pos:line="27" pos:column="31"/></name><operator pos:line="27" pos:column="31">-&gt;<pos:position pos:line="27" pos:column="36"/></operator><name pos:line="27" pos:column="33">pool<pos:position pos:line="27" pos:column="37"/></name></name></expr></argument>, <argument><expr><operator pos:line="27" pos:column="39">&amp;<pos:position pos:line="27" pos:column="44"/></operator><name pos:line="27" pos:column="40">t<pos:position pos:line="27" pos:column="41"/></name></expr></argument>)<pos:position pos:line="27" pos:column="42"/></argument_list></call></expr>;<pos:position pos:line="27" pos:column="43"/></expr_stmt>
        <for pos:line="28" pos:column="9">for <control pos:line="28" pos:column="13">(<init><expr><name pos:line="28" pos:column="14">i<pos:position pos:line="28" pos:column="15"/></name><operator pos:line="28" pos:column="15">=<pos:position pos:line="28" pos:column="16"/></operator><literal type="number" pos:line="28" pos:column="16">0<pos:position pos:line="28" pos:column="17"/></literal></expr>;<pos:position pos:line="28" pos:column="18"/></init> <condition><expr><name pos:line="28" pos:column="19">i<pos:position pos:line="28" pos:column="20"/></name> <operator pos:line="28" pos:column="21">&lt;<pos:position pos:line="28" pos:column="25"/></operator> <name><name pos:line="28" pos:column="23">groups<pos:position pos:line="28" pos:column="29"/></name><operator pos:line="28" pos:column="29">-&gt;<pos:position pos:line="28" pos:column="34"/></operator><name pos:line="28" pos:column="31">nelts<pos:position pos:line="28" pos:column="36"/></name></name></expr>;<pos:position pos:line="28" pos:column="37"/></condition> <incr><expr><operator pos:line="28" pos:column="38">++<pos:position pos:line="28" pos:column="40"/></operator><name pos:line="28" pos:column="40">i<pos:position pos:line="28" pos:column="41"/></name></expr></incr>)<pos:position pos:line="28" pos:column="42"/></control> <block pos:line="28" pos:column="43">{
            <if pos:line="29" pos:column="13">if <condition pos:line="29" pos:column="16">(<expr><operator pos:line="29" pos:column="17">!<pos:position pos:line="29" pos:column="18"/></operator><call><name pos:line="29" pos:column="18">strcmp<pos:position pos:line="29" pos:column="24"/></name><argument_list pos:line="29" pos:column="24">(<argument><expr><name pos:line="29" pos:column="25">w<pos:position pos:line="29" pos:column="26"/></name></expr></argument>, <argument><expr><operator pos:line="29" pos:column="28">(<pos:position pos:line="29" pos:column="29"/></operator><operator pos:line="29" pos:column="29">(<pos:position pos:line="29" pos:column="30"/></operator><specifier pos:line="29" pos:column="30">const<pos:position pos:line="29" pos:column="35"/></specifier> <name pos:line="29" pos:column="36">char<pos:position pos:line="29" pos:column="40"/></name><operator pos:line="29" pos:column="40">*<pos:position pos:line="29" pos:column="41"/></operator><operator pos:line="29" pos:column="41">*<pos:position pos:line="29" pos:column="42"/></operator><operator pos:line="29" pos:column="42">)<pos:position pos:line="29" pos:column="43"/></operator><name><name pos:line="29" pos:column="43">groups<pos:position pos:line="29" pos:column="49"/></name><operator pos:line="29" pos:column="49">-&gt;<pos:position pos:line="29" pos:column="54"/></operator><name pos:line="29" pos:column="51">elts<pos:position pos:line="29" pos:column="55"/></name></name><operator pos:line="29" pos:column="55">)<pos:position pos:line="29" pos:column="56"/></operator><index pos:line="29" pos:column="56">[<expr><name pos:line="29" pos:column="57">i<pos:position pos:line="29" pos:column="58"/></name></expr>]<pos:position pos:line="29" pos:column="59"/></index></expr></argument>)<pos:position pos:line="29" pos:column="60"/></argument_list></call></expr>)<pos:position pos:line="29" pos:column="61"/></condition><then pos:line="29" pos:column="61"> <block pos:line="29" pos:column="62">{
                <return pos:line="30" pos:column="17">return <expr><name pos:line="30" pos:column="24">AUTHZ_GRANTED<pos:position pos:line="30" pos:column="37"/></name></expr>;<pos:position pos:line="30" pos:column="38"/></return>
            }<pos:position pos:line="31" pos:column="14"/></block></then></if>
        }<pos:position pos:line="32" pos:column="10"/></block></for>
    }<pos:position pos:line="33" pos:column="6"/></block></while>

    <return pos:line="35" pos:column="5">return <expr><name pos:line="35" pos:column="12">AUTHZ_DENIED<pos:position pos:line="35" pos:column="24"/></name></expr>;<pos:position pos:line="35" pos:column="25"/></return>
}<pos:position pos:line="36" pos:column="2"/></block></function></unit>

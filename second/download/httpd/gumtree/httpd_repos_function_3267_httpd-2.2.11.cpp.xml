<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/httpd/gumtree/httpd_repos_function_3267_httpd-2.2.11.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">apr_ldap_rebind_entry_t<pos:position pos:line="1" pos:column="31"/></name> <modifier pos:line="1" pos:column="32">*<pos:position pos:line="1" pos:column="33"/></modifier></type><name pos:line="1" pos:column="33">apr_ldap_rebind_lookup<pos:position pos:line="1" pos:column="55"/></name><parameter_list pos:line="1" pos:column="55">(<parameter><decl><type><name pos:line="1" pos:column="56">LDAP<pos:position pos:line="1" pos:column="60"/></name> <modifier pos:line="1" pos:column="61">*<pos:position pos:line="1" pos:column="62"/></modifier></type><name pos:line="1" pos:column="62">ld<pos:position pos:line="1" pos:column="64"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="65"/></parameter_list>
<block pos:line="2" pos:column="1">{
    <decl_stmt><decl><type><name pos:line="3" pos:column="5">apr_ldap_rebind_entry_t<pos:position pos:line="3" pos:column="28"/></name> <modifier pos:line="3" pos:column="29">*<pos:position pos:line="3" pos:column="30"/></modifier></type><name pos:line="3" pos:column="30">tmp_xref<pos:position pos:line="3" pos:column="38"/></name></decl>, <modifier pos:line="3" pos:column="40">*<pos:position pos:line="3" pos:column="41"/></modifier><decl><type ref="prev"/><name pos:line="3" pos:column="41">match<pos:position pos:line="3" pos:column="46"/></name> <init pos:line="3" pos:column="47">= <expr><name pos:line="3" pos:column="49">NULL<pos:position pos:line="3" pos:column="53"/></name></expr></init></decl>;<pos:position pos:line="3" pos:column="54"/></decl_stmt>

<cpp:ifdef pos:line="5" pos:column="1">#<cpp:directive pos:line="5" pos:column="2">ifdef<pos:position pos:line="5" pos:column="7"/></cpp:directive> <name pos:line="5" pos:column="8">NETWARE<pos:position pos:line="5" pos:column="15"/></name></cpp:ifdef>
    <decl_stmt><decl><type><name pos:line="6" pos:column="5">get_apd<pos:position pos:line="6" pos:column="12"/></name></type>
<cpp:endif pos:line="7" pos:column="1">#<cpp:directive pos:line="7" pos:column="2">endif<pos:position pos:line="7" pos:column="7"/></cpp:directive></cpp:endif>

<cpp:if pos:line="9" pos:column="1">#<cpp:directive pos:line="9" pos:column="2">if<pos:position pos:line="9" pos:column="4"/></cpp:directive> <expr><name pos:line="9" pos:column="5">APR_HAS_THREADS<pos:position pos:line="9" pos:column="20"/></name></expr></cpp:if>
    <name pos:line="10" pos:column="5">apr_thread_mutex_lock<pos:position pos:line="10" pos:column="26"/></name><argument_list pos:line="10" pos:column="26">(<argument><expr><name pos:line="10" pos:column="27">apr_ldap_xref_lock<pos:position pos:line="10" pos:column="45"/></name></expr></argument>)<pos:position pos:line="10" pos:column="46"/></argument_list></decl>;<pos:position pos:line="10" pos:column="47"/></decl_stmt>
<cpp:endif pos:line="11" pos:column="1">#<cpp:directive pos:line="11" pos:column="2">endif<pos:position pos:line="11" pos:column="7"/></cpp:directive></cpp:endif>
    <expr_stmt><expr><name pos:line="12" pos:column="5">tmp_xref<pos:position pos:line="12" pos:column="13"/></name> <operator pos:line="12" pos:column="14">=<pos:position pos:line="12" pos:column="15"/></operator> <name pos:line="12" pos:column="16">xref_head<pos:position pos:line="12" pos:column="25"/></name></expr>;<pos:position pos:line="12" pos:column="26"/></expr_stmt>

    <while pos:line="14" pos:column="5">while <condition pos:line="14" pos:column="11">(<expr><name pos:line="14" pos:column="12">tmp_xref<pos:position pos:line="14" pos:column="20"/></name></expr>)<pos:position pos:line="14" pos:column="21"/></condition> <block pos:line="14" pos:column="22">{
        <if pos:line="15" pos:column="9">if <condition pos:line="15" pos:column="12">(<expr><name><name pos:line="15" pos:column="13">tmp_xref<pos:position pos:line="15" pos:column="21"/></name><operator pos:line="15" pos:column="21">-&gt;<pos:position pos:line="15" pos:column="26"/></operator><name pos:line="15" pos:column="23">index<pos:position pos:line="15" pos:column="28"/></name></name> <operator pos:line="15" pos:column="29">==<pos:position pos:line="15" pos:column="31"/></operator> <name pos:line="15" pos:column="32">ld<pos:position pos:line="15" pos:column="34"/></name></expr>)<pos:position pos:line="15" pos:column="35"/></condition><then pos:line="15" pos:column="35"> <block pos:line="15" pos:column="36">{
            <expr_stmt><expr><name pos:line="16" pos:column="13">match<pos:position pos:line="16" pos:column="18"/></name> <operator pos:line="16" pos:column="19">=<pos:position pos:line="16" pos:column="20"/></operator> <name pos:line="16" pos:column="21">tmp_xref<pos:position pos:line="16" pos:column="29"/></name></expr>;<pos:position pos:line="16" pos:column="30"/></expr_stmt>
            <expr_stmt><expr><name pos:line="17" pos:column="13">tmp_xref<pos:position pos:line="17" pos:column="21"/></name> <operator pos:line="17" pos:column="22">=<pos:position pos:line="17" pos:column="23"/></operator> <name pos:line="17" pos:column="24">NULL<pos:position pos:line="17" pos:column="28"/></name></expr>;<pos:position pos:line="17" pos:column="29"/></expr_stmt>
        }<pos:position pos:line="18" pos:column="10"/></block></then>
        <else pos:line="19" pos:column="9">else <block pos:line="19" pos:column="14">{
            <expr_stmt><expr><name pos:line="20" pos:column="13">tmp_xref<pos:position pos:line="20" pos:column="21"/></name> <operator pos:line="20" pos:column="22">=<pos:position pos:line="20" pos:column="23"/></operator> <name><name pos:line="20" pos:column="24">tmp_xref<pos:position pos:line="20" pos:column="32"/></name><operator pos:line="20" pos:column="32">-&gt;<pos:position pos:line="20" pos:column="37"/></operator><name pos:line="20" pos:column="34">next<pos:position pos:line="20" pos:column="38"/></name></name></expr>;<pos:position pos:line="20" pos:column="39"/></expr_stmt>
        }<pos:position pos:line="21" pos:column="10"/></block></else></if>
    }<pos:position pos:line="22" pos:column="6"/></block></while>

<cpp:if pos:line="24" pos:column="1">#<cpp:directive pos:line="24" pos:column="2">if<pos:position pos:line="24" pos:column="4"/></cpp:directive> <expr><name pos:line="24" pos:column="5">APR_HAS_THREADS<pos:position pos:line="24" pos:column="20"/></name></expr></cpp:if>
    <expr_stmt><expr><call><name pos:line="25" pos:column="5">apr_thread_mutex_unlock<pos:position pos:line="25" pos:column="28"/></name><argument_list pos:line="25" pos:column="28">(<argument><expr><name pos:line="25" pos:column="29">apr_ldap_xref_lock<pos:position pos:line="25" pos:column="47"/></name></expr></argument>)<pos:position pos:line="25" pos:column="48"/></argument_list></call></expr>;<pos:position pos:line="25" pos:column="49"/></expr_stmt>
<cpp:endif pos:line="26" pos:column="1">#<cpp:directive pos:line="26" pos:column="2">endif<pos:position pos:line="26" pos:column="7"/></cpp:directive></cpp:endif>

    <return pos:line="28" pos:column="5">return <expr><operator pos:line="28" pos:column="12">(<pos:position pos:line="28" pos:column="13"/></operator><name pos:line="28" pos:column="13">match<pos:position pos:line="28" pos:column="18"/></name><operator pos:line="28" pos:column="18">)<pos:position pos:line="28" pos:column="19"/></operator></expr>;<pos:position pos:line="28" pos:column="20"/></return>
}<pos:position pos:line="29" pos:column="2"/></block></function></unit>

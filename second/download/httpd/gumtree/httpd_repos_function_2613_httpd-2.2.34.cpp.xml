<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/httpd/gumtree/httpd_repos_function_2613_httpd-2.2.34.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">char<pos:position pos:line="1" pos:column="12"/></name></type> <name pos:line="1" pos:column="13">master_main<pos:position pos:line="1" pos:column="24"/></name><parameter_list pos:line="1" pos:column="24">()<pos:position pos:line="1" pos:column="26"/></parameter_list>
<block pos:line="2" pos:column="1">{
    <decl_stmt><decl><type><name pos:line="3" pos:column="5">server_rec<pos:position pos:line="3" pos:column="15"/></name> <modifier pos:line="3" pos:column="16">*<pos:position pos:line="3" pos:column="17"/></modifier></type><name pos:line="3" pos:column="17">s<pos:position pos:line="3" pos:column="18"/></name> <init pos:line="3" pos:column="19">= <expr><name pos:line="3" pos:column="21">ap_server_conf<pos:position pos:line="3" pos:column="35"/></name></expr></init></decl>;<pos:position pos:line="3" pos:column="36"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="4" pos:column="5">ap_listen_rec<pos:position pos:line="4" pos:column="18"/></name> <modifier pos:line="4" pos:column="19">*<pos:position pos:line="4" pos:column="20"/></modifier></type><name pos:line="4" pos:column="20">lr<pos:position pos:line="4" pos:column="22"/></name></decl>;<pos:position pos:line="4" pos:column="23"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="5" pos:column="5">parent_info_t<pos:position pos:line="5" pos:column="18"/></name> <modifier pos:line="5" pos:column="19">*<pos:position pos:line="5" pos:column="20"/></modifier></type><name pos:line="5" pos:column="20">parent_info<pos:position pos:line="5" pos:column="31"/></name></decl>;<pos:position pos:line="5" pos:column="32"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="6" pos:column="5">char<pos:position pos:line="6" pos:column="9"/></name> <modifier pos:line="6" pos:column="10">*<pos:position pos:line="6" pos:column="11"/></modifier></type><name pos:line="6" pos:column="11">listener_shm_name<pos:position pos:line="6" pos:column="28"/></name></decl>;<pos:position pos:line="6" pos:column="29"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="7" pos:column="5">int<pos:position pos:line="7" pos:column="8"/></name></type> <name pos:line="7" pos:column="9">listener_num<pos:position pos:line="7" pos:column="21"/></name></decl>, <decl><type ref="prev"/><name pos:line="7" pos:column="23">num_listeners<pos:position pos:line="7" pos:column="36"/></name></decl>, <decl><type ref="prev"/><name pos:line="7" pos:column="38">slot<pos:position pos:line="7" pos:column="42"/></name></decl>;<pos:position pos:line="7" pos:column="43"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="8" pos:column="5">ULONG<pos:position pos:line="8" pos:column="10"/></name></type> <name pos:line="8" pos:column="11">rc<pos:position pos:line="8" pos:column="13"/></name></decl>;<pos:position pos:line="8" pos:column="14"/></decl_stmt>

    <expr_stmt><expr><call><name pos:line="10" pos:column="5">printf<pos:position pos:line="10" pos:column="11"/></name><argument_list pos:line="10" pos:column="11">(<argument><expr><literal type="string" pos:line="10" pos:column="12">"%s \n"<pos:position pos:line="10" pos:column="19"/></literal></expr></argument>, <argument><expr><call><name pos:line="10" pos:column="21">ap_get_server_description<pos:position pos:line="10" pos:column="46"/></name><argument_list pos:line="10" pos:column="46">()<pos:position pos:line="10" pos:column="48"/></argument_list></call></expr></argument>)<pos:position pos:line="10" pos:column="49"/></argument_list></call></expr>;<pos:position pos:line="10" pos:column="50"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="11" pos:column="5">set_signals<pos:position pos:line="11" pos:column="16"/></name><argument_list pos:line="11" pos:column="16">()<pos:position pos:line="11" pos:column="18"/></argument_list></call></expr>;<pos:position pos:line="11" pos:column="19"/></expr_stmt>

    <if pos:line="13" pos:column="5">if <condition pos:line="13" pos:column="8">(<expr><call><name pos:line="13" pos:column="9">ap_setup_listeners<pos:position pos:line="13" pos:column="27"/></name><argument_list pos:line="13" pos:column="27">(<argument><expr><name pos:line="13" pos:column="28">ap_server_conf<pos:position pos:line="13" pos:column="42"/></name></expr></argument>)<pos:position pos:line="13" pos:column="43"/></argument_list></call> <operator pos:line="13" pos:column="44">&lt;<pos:position pos:line="13" pos:column="48"/></operator> <literal type="number" pos:line="13" pos:column="46">1<pos:position pos:line="13" pos:column="47"/></literal></expr>)<pos:position pos:line="13" pos:column="48"/></condition><then pos:line="13" pos:column="48"> <block pos:line="13" pos:column="49">{
        <expr_stmt><expr><call><name pos:line="14" pos:column="9">ap_log_error<pos:position pos:line="14" pos:column="21"/></name><argument_list pos:line="14" pos:column="21">(<argument><expr><name pos:line="14" pos:column="22">APLOG_MARK<pos:position pos:line="14" pos:column="32"/></name></expr></argument>, <argument><expr><name pos:line="14" pos:column="34">APLOG_ALERT<pos:position pos:line="14" pos:column="45"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="14" pos:column="47">0<pos:position pos:line="14" pos:column="48"/></literal></expr></argument>, <argument><expr><name pos:line="14" pos:column="50">s<pos:position pos:line="14" pos:column="51"/></name></expr></argument>,
                     <argument><expr><literal type="string" pos:line="15" pos:column="22">"no listening sockets available, shutting down"<pos:position pos:line="15" pos:column="69"/></literal></expr></argument>)<pos:position pos:line="15" pos:column="70"/></argument_list></call></expr>;<pos:position pos:line="15" pos:column="71"/></expr_stmt>
        <return pos:line="16" pos:column="9">return <expr><name pos:line="16" pos:column="16">FALSE<pos:position pos:line="16" pos:column="21"/></name></expr>;<pos:position pos:line="16" pos:column="22"/></return>
    }<pos:position pos:line="17" pos:column="6"/></block></then></if>

    <comment type="block" pos:line="19" pos:column="5">/* Allocate a shared memory block for the array of listeners */</comment>
    <for pos:line="20" pos:column="5">for <control pos:line="20" pos:column="9">(<init><expr><name pos:line="20" pos:column="10">num_listeners<pos:position pos:line="20" pos:column="23"/></name> <operator pos:line="20" pos:column="24">=<pos:position pos:line="20" pos:column="25"/></operator> <literal type="number" pos:line="20" pos:column="26">0<pos:position pos:line="20" pos:column="27"/></literal></expr><operator pos:line="20" pos:column="27">,<pos:position pos:line="20" pos:column="28"/></operator> <expr><name pos:line="20" pos:column="29">lr<pos:position pos:line="20" pos:column="31"/></name> <operator pos:line="20" pos:column="32">=<pos:position pos:line="20" pos:column="33"/></operator> <name pos:line="20" pos:column="34">ap_listeners<pos:position pos:line="20" pos:column="46"/></name></expr>;<pos:position pos:line="20" pos:column="47"/></init> <condition><expr><name pos:line="20" pos:column="48">lr<pos:position pos:line="20" pos:column="50"/></name></expr>;<pos:position pos:line="20" pos:column="51"/></condition> <incr><expr><name pos:line="20" pos:column="52">lr<pos:position pos:line="20" pos:column="54"/></name> <operator pos:line="20" pos:column="55">=<pos:position pos:line="20" pos:column="56"/></operator> <name><name pos:line="20" pos:column="57">lr<pos:position pos:line="20" pos:column="59"/></name><operator pos:line="20" pos:column="59">-&gt;<pos:position pos:line="20" pos:column="64"/></operator><name pos:line="20" pos:column="61">next<pos:position pos:line="20" pos:column="65"/></name></name></expr></incr>)<pos:position pos:line="20" pos:column="66"/></control> <block pos:line="20" pos:column="67">{
        <expr_stmt><expr><name pos:line="21" pos:column="9">num_listeners<pos:position pos:line="21" pos:column="22"/></name><operator pos:line="21" pos:column="22">++<pos:position pos:line="21" pos:column="24"/></operator></expr>;<pos:position pos:line="21" pos:column="25"/></expr_stmt>
    }<pos:position pos:line="22" pos:column="6"/></block></for>

    <expr_stmt><expr><name pos:line="24" pos:column="5">listener_shm_name<pos:position pos:line="24" pos:column="22"/></name> <operator pos:line="24" pos:column="23">=<pos:position pos:line="24" pos:column="24"/></operator> <call><name pos:line="24" pos:column="25">apr_psprintf<pos:position pos:line="24" pos:column="37"/></name><argument_list pos:line="24" pos:column="37">(<argument><expr><name pos:line="24" pos:column="38">pconf<pos:position pos:line="24" pos:column="43"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="24" pos:column="45">"/sharemem/httpd/parent_info.%d"<pos:position pos:line="24" pos:column="77"/></literal></expr></argument>, <argument><expr><call><name pos:line="24" pos:column="79">getpid<pos:position pos:line="24" pos:column="85"/></name><argument_list pos:line="24" pos:column="85">()<pos:position pos:line="24" pos:column="87"/></argument_list></call></expr></argument>)<pos:position pos:line="24" pos:column="88"/></argument_list></call></expr>;<pos:position pos:line="24" pos:column="89"/></expr_stmt>
    <expr_stmt><expr><name pos:line="25" pos:column="5">rc<pos:position pos:line="25" pos:column="7"/></name> <operator pos:line="25" pos:column="8">=<pos:position pos:line="25" pos:column="9"/></operator> <call><name pos:line="25" pos:column="10">DosAllocSharedMem<pos:position pos:line="25" pos:column="27"/></name><argument_list pos:line="25" pos:column="27">(<argument><expr><operator pos:line="25" pos:column="28">(<pos:position pos:line="25" pos:column="29"/></operator><name pos:line="25" pos:column="29">PPVOID<pos:position pos:line="25" pos:column="35"/></name><operator pos:line="25" pos:column="35">)<pos:position pos:line="25" pos:column="36"/></operator><operator pos:line="25" pos:column="36">&amp;<pos:position pos:line="25" pos:column="41"/></operator><name pos:line="25" pos:column="37">parent_info<pos:position pos:line="25" pos:column="48"/></name></expr></argument>, <argument><expr><name pos:line="25" pos:column="50">listener_shm_name<pos:position pos:line="25" pos:column="67"/></name></expr></argument>,
                           <argument><expr><sizeof pos:line="26" pos:column="28">sizeof<argument_list pos:line="26" pos:column="34">(<argument><expr><name pos:line="26" pos:column="35">parent_info_t<pos:position pos:line="26" pos:column="48"/></name></expr></argument>)<pos:position pos:line="26" pos:column="49"/></argument_list></sizeof> <operator pos:line="26" pos:column="50">+<pos:position pos:line="26" pos:column="51"/></operator> <name pos:line="26" pos:column="52">num_listeners<pos:position pos:line="26" pos:column="65"/></name> <operator pos:line="26" pos:column="66">*<pos:position pos:line="26" pos:column="67"/></operator> <sizeof pos:line="26" pos:column="68">sizeof<argument_list pos:line="26" pos:column="74">(<argument><expr><name pos:line="26" pos:column="75">listen_socket_t<pos:position pos:line="26" pos:column="90"/></name></expr></argument>)<pos:position pos:line="26" pos:column="91"/></argument_list></sizeof></expr></argument>,
                           <argument><expr><name pos:line="27" pos:column="28">PAG_READ<pos:position pos:line="27" pos:column="36"/></name><operator pos:line="27" pos:column="36">|<pos:position pos:line="27" pos:column="37"/></operator><name pos:line="27" pos:column="37">PAG_WRITE<pos:position pos:line="27" pos:column="46"/></name><operator pos:line="27" pos:column="46">|<pos:position pos:line="27" pos:column="47"/></operator><name pos:line="27" pos:column="47">PAG_COMMIT<pos:position pos:line="27" pos:column="57"/></name></expr></argument>)<pos:position pos:line="27" pos:column="58"/></argument_list></call></expr>;<pos:position pos:line="27" pos:column="59"/></expr_stmt>

    <if pos:line="29" pos:column="5">if <condition pos:line="29" pos:column="8">(<expr><name pos:line="29" pos:column="9">rc<pos:position pos:line="29" pos:column="11"/></name></expr>)<pos:position pos:line="29" pos:column="12"/></condition><then pos:line="29" pos:column="12"> <block pos:line="29" pos:column="13">{
        <expr_stmt><expr><call><name pos:line="30" pos:column="9">ap_log_error<pos:position pos:line="30" pos:column="21"/></name><argument_list pos:line="30" pos:column="21">(<argument><expr><name pos:line="30" pos:column="22">APLOG_MARK<pos:position pos:line="30" pos:column="32"/></name></expr></argument>, <argument><expr><name pos:line="30" pos:column="34">APLOG_ALERT<pos:position pos:line="30" pos:column="45"/></name></expr></argument>, <argument><expr><call><name pos:line="30" pos:column="47">APR_FROM_OS_ERROR<pos:position pos:line="30" pos:column="64"/></name><argument_list pos:line="30" pos:column="64">(<argument><expr><name pos:line="30" pos:column="65">rc<pos:position pos:line="30" pos:column="67"/></name></expr></argument>)<pos:position pos:line="30" pos:column="68"/></argument_list></call></expr></argument>, <argument><expr><name pos:line="30" pos:column="70">s<pos:position pos:line="30" pos:column="71"/></name></expr></argument>,
                     <argument><expr><literal type="string" pos:line="31" pos:column="22">"failure allocating shared memory, shutting down"<pos:position pos:line="31" pos:column="71"/></literal></expr></argument>)<pos:position pos:line="31" pos:column="72"/></argument_list></call></expr>;<pos:position pos:line="31" pos:column="73"/></expr_stmt>
        <return pos:line="32" pos:column="9">return <expr><name pos:line="32" pos:column="16">FALSE<pos:position pos:line="32" pos:column="21"/></name></expr>;<pos:position pos:line="32" pos:column="22"/></return>
    }<pos:position pos:line="33" pos:column="6"/></block></then></if>

    <comment type="block" pos:line="35" pos:column="5">/* Store the listener sockets in the shared memory area for our children to see */</comment>
    <for pos:line="36" pos:column="5">for <control pos:line="36" pos:column="9">(<init><expr><name pos:line="36" pos:column="10">listener_num<pos:position pos:line="36" pos:column="22"/></name> <operator pos:line="36" pos:column="23">=<pos:position pos:line="36" pos:column="24"/></operator> <literal type="number" pos:line="36" pos:column="25">0<pos:position pos:line="36" pos:column="26"/></literal></expr><operator pos:line="36" pos:column="26">,<pos:position pos:line="36" pos:column="27"/></operator> <expr><name pos:line="36" pos:column="28">lr<pos:position pos:line="36" pos:column="30"/></name> <operator pos:line="36" pos:column="31">=<pos:position pos:line="36" pos:column="32"/></operator> <name pos:line="36" pos:column="33">ap_listeners<pos:position pos:line="36" pos:column="45"/></name></expr>;<pos:position pos:line="36" pos:column="46"/></init> <condition><expr><name pos:line="36" pos:column="47">lr<pos:position pos:line="36" pos:column="49"/></name></expr>;<pos:position pos:line="36" pos:column="50"/></condition> <incr><expr><name pos:line="36" pos:column="51">lr<pos:position pos:line="36" pos:column="53"/></name> <operator pos:line="36" pos:column="54">=<pos:position pos:line="36" pos:column="55"/></operator> <name><name pos:line="36" pos:column="56">lr<pos:position pos:line="36" pos:column="58"/></name><operator pos:line="36" pos:column="58">-&gt;<pos:position pos:line="36" pos:column="63"/></operator><name pos:line="36" pos:column="60">next<pos:position pos:line="36" pos:column="64"/></name></name></expr><operator pos:line="36" pos:column="64">,<pos:position pos:line="36" pos:column="65"/></operator> <expr><name pos:line="36" pos:column="66">listener_num<pos:position pos:line="36" pos:column="78"/></name><operator pos:line="36" pos:column="78">++<pos:position pos:line="36" pos:column="80"/></operator></expr></incr>)<pos:position pos:line="36" pos:column="81"/></control> <block pos:line="36" pos:column="82">{
        <expr_stmt><expr><call><name pos:line="37" pos:column="9">apr_os_sock_get<pos:position pos:line="37" pos:column="24"/></name><argument_list pos:line="37" pos:column="24">(<argument><expr><operator pos:line="37" pos:column="25">&amp;<pos:position pos:line="37" pos:column="30"/></operator><name><name pos:line="37" pos:column="26">parent_info<pos:position pos:line="37" pos:column="37"/></name><operator pos:line="37" pos:column="37">-&gt;<pos:position pos:line="37" pos:column="42"/></operator><name pos:line="37" pos:column="39">listeners<pos:position pos:line="37" pos:column="48"/></name><index pos:line="37" pos:column="48">[<expr><name pos:line="37" pos:column="49">listener_num<pos:position pos:line="37" pos:column="61"/></name></expr>]<pos:position pos:line="37" pos:column="62"/></index></name><operator pos:line="37" pos:column="62">.<pos:position pos:line="37" pos:column="63"/></operator><name pos:line="37" pos:column="63">listen_fd<pos:position pos:line="37" pos:column="72"/></name></expr></argument>, <argument><expr><name><name pos:line="37" pos:column="74">lr<pos:position pos:line="37" pos:column="76"/></name><operator pos:line="37" pos:column="76">-&gt;<pos:position pos:line="37" pos:column="81"/></operator><name pos:line="37" pos:column="78">sd<pos:position pos:line="37" pos:column="80"/></name></name></expr></argument>)<pos:position pos:line="37" pos:column="81"/></argument_list></call></expr>;<pos:position pos:line="37" pos:column="82"/></expr_stmt>
    }<pos:position pos:line="38" pos:column="6"/></block></for>

    <comment type="block" pos:line="40" pos:column="5">/* Create mutex to prevent multiple child processes from detecting
     * a connection with apr_poll()
     */</comment>

    <expr_stmt><expr><name pos:line="44" pos:column="5">rc<pos:position pos:line="44" pos:column="7"/></name> <operator pos:line="44" pos:column="8">=<pos:position pos:line="44" pos:column="9"/></operator> <call><name pos:line="44" pos:column="10">DosCreateMutexSem<pos:position pos:line="44" pos:column="27"/></name><argument_list pos:line="44" pos:column="27">(<argument><expr><name pos:line="44" pos:column="28">NULL<pos:position pos:line="44" pos:column="32"/></name></expr></argument>, <argument><expr><operator pos:line="44" pos:column="34">&amp;<pos:position pos:line="44" pos:column="39"/></operator><name pos:line="44" pos:column="35">ap_mpm_accept_mutex<pos:position pos:line="44" pos:column="54"/></name></expr></argument>, <argument><expr><name pos:line="44" pos:column="56">DC_SEM_SHARED<pos:position pos:line="44" pos:column="69"/></name></expr></argument>, <argument><expr><name pos:line="44" pos:column="71">FALSE<pos:position pos:line="44" pos:column="76"/></name></expr></argument>)<pos:position pos:line="44" pos:column="77"/></argument_list></call></expr>;<pos:position pos:line="44" pos:column="78"/></expr_stmt>

    <if pos:line="46" pos:column="5">if <condition pos:line="46" pos:column="8">(<expr><name pos:line="46" pos:column="9">rc<pos:position pos:line="46" pos:column="11"/></name></expr>)<pos:position pos:line="46" pos:column="12"/></condition><then pos:line="46" pos:column="12"> <block pos:line="46" pos:column="13">{
        <expr_stmt><expr><call><name pos:line="47" pos:column="9">ap_log_error<pos:position pos:line="47" pos:column="21"/></name><argument_list pos:line="47" pos:column="21">(<argument><expr><name pos:line="47" pos:column="22">APLOG_MARK<pos:position pos:line="47" pos:column="32"/></name></expr></argument>, <argument><expr><name pos:line="47" pos:column="34">APLOG_ALERT<pos:position pos:line="47" pos:column="45"/></name></expr></argument>, <argument><expr><call><name pos:line="47" pos:column="47">APR_FROM_OS_ERROR<pos:position pos:line="47" pos:column="64"/></name><argument_list pos:line="47" pos:column="64">(<argument><expr><name pos:line="47" pos:column="65">rc<pos:position pos:line="47" pos:column="67"/></name></expr></argument>)<pos:position pos:line="47" pos:column="68"/></argument_list></call></expr></argument>, <argument><expr><name pos:line="47" pos:column="70">s<pos:position pos:line="47" pos:column="71"/></name></expr></argument>,
                     <argument><expr><literal type="string" pos:line="48" pos:column="22">"failure creating accept mutex, shutting down"<pos:position pos:line="48" pos:column="68"/></literal></expr></argument>)<pos:position pos:line="48" pos:column="69"/></argument_list></call></expr>;<pos:position pos:line="48" pos:column="70"/></expr_stmt>
        <return pos:line="49" pos:column="9">return <expr><name pos:line="49" pos:column="16">FALSE<pos:position pos:line="49" pos:column="21"/></name></expr>;<pos:position pos:line="49" pos:column="22"/></return>
    }<pos:position pos:line="50" pos:column="6"/></block></then></if>

    <expr_stmt><expr><name><name pos:line="52" pos:column="5">parent_info<pos:position pos:line="52" pos:column="16"/></name><operator pos:line="52" pos:column="16">-&gt;<pos:position pos:line="52" pos:column="21"/></operator><name pos:line="52" pos:column="18">accept_mutex<pos:position pos:line="52" pos:column="30"/></name></name> <operator pos:line="52" pos:column="31">=<pos:position pos:line="52" pos:column="32"/></operator> <name pos:line="52" pos:column="33">ap_mpm_accept_mutex<pos:position pos:line="52" pos:column="52"/></name></expr>;<pos:position pos:line="52" pos:column="53"/></expr_stmt>

    <comment type="block" pos:line="54" pos:column="5">/* Allocate shared memory for scoreboard */</comment>
    <if pos:line="55" pos:column="5">if <condition pos:line="55" pos:column="8">(<expr><name pos:line="55" pos:column="9">ap_scoreboard_image<pos:position pos:line="55" pos:column="28"/></name> <operator pos:line="55" pos:column="29">==<pos:position pos:line="55" pos:column="31"/></operator> <name pos:line="55" pos:column="32">NULL<pos:position pos:line="55" pos:column="36"/></name></expr>)<pos:position pos:line="55" pos:column="37"/></condition><then pos:line="55" pos:column="37"> <block pos:line="55" pos:column="38">{
        <decl_stmt><decl><type><name pos:line="56" pos:column="9">void<pos:position pos:line="56" pos:column="13"/></name> <modifier pos:line="56" pos:column="14">*<pos:position pos:line="56" pos:column="15"/></modifier></type><name pos:line="56" pos:column="15">sb_mem<pos:position pos:line="56" pos:column="21"/></name></decl>;<pos:position pos:line="56" pos:column="22"/></decl_stmt>
        <expr_stmt><expr><name pos:line="57" pos:column="9">rc<pos:position pos:line="57" pos:column="11"/></name> <operator pos:line="57" pos:column="12">=<pos:position pos:line="57" pos:column="13"/></operator> <call><name pos:line="57" pos:column="14">DosAllocSharedMem<pos:position pos:line="57" pos:column="31"/></name><argument_list pos:line="57" pos:column="31">(<argument><expr><operator pos:line="57" pos:column="32">&amp;<pos:position pos:line="57" pos:column="37"/></operator><name pos:line="57" pos:column="33">sb_mem<pos:position pos:line="57" pos:column="39"/></name></expr></argument>, <argument><expr><name pos:line="57" pos:column="41">ap_scoreboard_fname<pos:position pos:line="57" pos:column="60"/></name></expr></argument>,
                               <argument><expr><call><name pos:line="58" pos:column="32">ap_calc_scoreboard_size<pos:position pos:line="58" pos:column="55"/></name><argument_list pos:line="58" pos:column="55">()<pos:position pos:line="58" pos:column="57"/></argument_list></call></expr></argument>,
                               <argument><expr><name pos:line="59" pos:column="32">PAG_COMMIT<pos:position pos:line="59" pos:column="42"/></name><operator pos:line="59" pos:column="42">|<pos:position pos:line="59" pos:column="43"/></operator><name pos:line="59" pos:column="43">PAG_READ<pos:position pos:line="59" pos:column="51"/></name><operator pos:line="59" pos:column="51">|<pos:position pos:line="59" pos:column="52"/></operator><name pos:line="59" pos:column="52">PAG_WRITE<pos:position pos:line="59" pos:column="61"/></name></expr></argument>)<pos:position pos:line="59" pos:column="62"/></argument_list></call></expr>;<pos:position pos:line="59" pos:column="63"/></expr_stmt>

        <if pos:line="61" pos:column="9">if <condition pos:line="61" pos:column="12">(<expr><name pos:line="61" pos:column="13">rc<pos:position pos:line="61" pos:column="15"/></name></expr>)<pos:position pos:line="61" pos:column="16"/></condition><then pos:line="61" pos:column="16"> <block pos:line="61" pos:column="17">{
            <expr_stmt><expr><call><name pos:line="62" pos:column="13">ap_log_error<pos:position pos:line="62" pos:column="25"/></name><argument_list pos:line="62" pos:column="25">(<argument><expr><name pos:line="62" pos:column="26">APLOG_MARK<pos:position pos:line="62" pos:column="36"/></name></expr></argument>, <argument><expr><name pos:line="62" pos:column="38">APLOG_ERR<pos:position pos:line="62" pos:column="47"/></name></expr></argument>, <argument><expr><call><name pos:line="62" pos:column="49">APR_FROM_OS_ERROR<pos:position pos:line="62" pos:column="66"/></name><argument_list pos:line="62" pos:column="66">(<argument><expr><name pos:line="62" pos:column="67">rc<pos:position pos:line="62" pos:column="69"/></name></expr></argument>)<pos:position pos:line="62" pos:column="70"/></argument_list></call></expr></argument>, <argument><expr><name pos:line="62" pos:column="72">ap_server_conf<pos:position pos:line="62" pos:column="86"/></name></expr></argument>,
                         <argument><expr><literal type="string" pos:line="63" pos:column="26">"unable to allocate shared memory for scoreboard , exiting"<pos:position pos:line="63" pos:column="85"/></literal></expr></argument>)<pos:position pos:line="63" pos:column="86"/></argument_list></call></expr>;<pos:position pos:line="63" pos:column="87"/></expr_stmt>
            <return pos:line="64" pos:column="13">return <expr><name pos:line="64" pos:column="20">FALSE<pos:position pos:line="64" pos:column="25"/></name></expr>;<pos:position pos:line="64" pos:column="26"/></return>
        }<pos:position pos:line="65" pos:column="10"/></block></then></if>

        <expr_stmt><expr><call><name pos:line="67" pos:column="9">ap_init_scoreboard<pos:position pos:line="67" pos:column="27"/></name><argument_list pos:line="67" pos:column="27">(<argument><expr><name pos:line="67" pos:column="28">sb_mem<pos:position pos:line="67" pos:column="34"/></name></expr></argument>)<pos:position pos:line="67" pos:column="35"/></argument_list></call></expr>;<pos:position pos:line="67" pos:column="36"/></expr_stmt>
    }<pos:position pos:line="68" pos:column="6"/></block></then></if>

    <expr_stmt><expr><name><name pos:line="70" pos:column="5">ap_scoreboard_image<pos:position pos:line="70" pos:column="24"/></name><operator pos:line="70" pos:column="24">-&gt;<pos:position pos:line="70" pos:column="29"/></operator><name pos:line="70" pos:column="26">global<pos:position pos:line="70" pos:column="32"/></name><operator pos:line="70" pos:column="32">-&gt;<pos:position pos:line="70" pos:column="37"/></operator><name pos:line="70" pos:column="34">restart_time<pos:position pos:line="70" pos:column="46"/></name></name> <operator pos:line="70" pos:column="47">=<pos:position pos:line="70" pos:column="48"/></operator> <call><name pos:line="70" pos:column="49">apr_time_now<pos:position pos:line="70" pos:column="61"/></name><argument_list pos:line="70" pos:column="61">()<pos:position pos:line="70" pos:column="63"/></argument_list></call></expr>;<pos:position pos:line="70" pos:column="64"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="71" pos:column="5">ap_log_error<pos:position pos:line="71" pos:column="17"/></name><argument_list pos:line="71" pos:column="17">(<argument><expr><name pos:line="71" pos:column="18">APLOG_MARK<pos:position pos:line="71" pos:column="28"/></name></expr></argument>, <argument><expr><name pos:line="71" pos:column="30">APLOG_NOTICE<pos:position pos:line="71" pos:column="42"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="71" pos:column="44">0<pos:position pos:line="71" pos:column="45"/></literal></expr></argument>, <argument><expr><name pos:line="71" pos:column="47">ap_server_conf<pos:position pos:line="71" pos:column="61"/></name></expr></argument>,
                <argument><expr><literal type="string" pos:line="72" pos:column="17">"%s configured -- resuming normal operations"<pos:position pos:line="72" pos:column="62"/></literal></expr></argument>,
                <argument><expr><call><name pos:line="73" pos:column="17">ap_get_server_description<pos:position pos:line="73" pos:column="42"/></name><argument_list pos:line="73" pos:column="42">()<pos:position pos:line="73" pos:column="44"/></argument_list></call></expr></argument>)<pos:position pos:line="73" pos:column="45"/></argument_list></call></expr>;<pos:position pos:line="73" pos:column="46"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="74" pos:column="5">ap_log_error<pos:position pos:line="74" pos:column="17"/></name><argument_list pos:line="74" pos:column="17">(<argument><expr><name pos:line="74" pos:column="18">APLOG_MARK<pos:position pos:line="74" pos:column="28"/></name></expr></argument>, <argument><expr><name pos:line="74" pos:column="30">APLOG_INFO<pos:position pos:line="74" pos:column="40"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="74" pos:column="42">0<pos:position pos:line="74" pos:column="43"/></literal></expr></argument>, <argument><expr><name pos:line="74" pos:column="45">ap_server_conf<pos:position pos:line="74" pos:column="59"/></name></expr></argument>,
                <argument><expr><literal type="string" pos:line="75" pos:column="17">"Server built: %s"<pos:position pos:line="75" pos:column="35"/></literal></expr></argument>, <argument><expr><call><name pos:line="75" pos:column="37">ap_get_server_built<pos:position pos:line="75" pos:column="56"/></name><argument_list pos:line="75" pos:column="56">()<pos:position pos:line="75" pos:column="58"/></argument_list></call></expr></argument>)<pos:position pos:line="75" pos:column="59"/></argument_list></call></expr>;<pos:position pos:line="75" pos:column="60"/></expr_stmt>
<cpp:ifdef pos:line="76" pos:column="1">#<cpp:directive pos:line="76" pos:column="2">ifdef<pos:position pos:line="76" pos:column="7"/></cpp:directive> <name pos:line="76" pos:column="8">AP_MPM_WANT_SET_ACCEPT_LOCK_MECH<pos:position pos:line="76" pos:column="40"/></name></cpp:ifdef>
    <expr_stmt><expr><call><name pos:line="77" pos:column="5">ap_log_error<pos:position pos:line="77" pos:column="17"/></name><argument_list pos:line="77" pos:column="17">(<argument><expr><name pos:line="77" pos:column="18">APLOG_MARK<pos:position pos:line="77" pos:column="28"/></name></expr></argument>, <argument><expr><name pos:line="77" pos:column="30">APLOG_DEBUG<pos:position pos:line="77" pos:column="41"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="77" pos:column="43">0<pos:position pos:line="77" pos:column="44"/></literal></expr></argument>, <argument><expr><name pos:line="77" pos:column="46">ap_server_conf<pos:position pos:line="77" pos:column="60"/></name></expr></argument>,
                <argument><expr><literal type="string" pos:line="78" pos:column="17">"AcceptMutex: %s (default: %s)"<pos:position pos:line="78" pos:column="48"/></literal></expr></argument>,
                <argument><expr><call><name pos:line="79" pos:column="17">apr_proc_mutex_name<pos:position pos:line="79" pos:column="36"/></name><argument_list pos:line="79" pos:column="36">(<argument><expr><name pos:line="79" pos:column="37">accept_mutex<pos:position pos:line="79" pos:column="49"/></name></expr></argument>)<pos:position pos:line="79" pos:column="50"/></argument_list></call></expr></argument>,
                <argument><expr><call><name pos:line="80" pos:column="17">apr_proc_mutex_defname<pos:position pos:line="80" pos:column="39"/></name><argument_list pos:line="80" pos:column="39">()<pos:position pos:line="80" pos:column="41"/></argument_list></call></expr></argument>)<pos:position pos:line="80" pos:column="42"/></argument_list></call></expr>;<pos:position pos:line="80" pos:column="43"/></expr_stmt>
<cpp:endif pos:line="81" pos:column="1">#<cpp:directive pos:line="81" pos:column="2">endif<pos:position pos:line="81" pos:column="7"/></cpp:directive></cpp:endif>
    <if pos:line="82" pos:column="5">if <condition pos:line="82" pos:column="8">(<expr><name pos:line="82" pos:column="9">one_process<pos:position pos:line="82" pos:column="20"/></name></expr>)<pos:position pos:line="82" pos:column="21"/></condition><then pos:line="82" pos:column="21"> <block pos:line="82" pos:column="22">{
        <expr_stmt><expr><name><name pos:line="83" pos:column="9">ap_scoreboard_image<pos:position pos:line="83" pos:column="28"/></name><operator pos:line="83" pos:column="28">-&gt;<pos:position pos:line="83" pos:column="33"/></operator><name pos:line="83" pos:column="30">parent<pos:position pos:line="83" pos:column="36"/></name><index pos:line="83" pos:column="36">[<expr><literal type="number" pos:line="83" pos:column="37">0<pos:position pos:line="83" pos:column="38"/></literal></expr>]<pos:position pos:line="83" pos:column="39"/></index></name><operator pos:line="83" pos:column="39">.<pos:position pos:line="83" pos:column="40"/></operator><name pos:line="83" pos:column="40">pid<pos:position pos:line="83" pos:column="43"/></name> <operator pos:line="83" pos:column="44">=<pos:position pos:line="83" pos:column="45"/></operator> <call><name pos:line="83" pos:column="46">getpid<pos:position pos:line="83" pos:column="52"/></name><argument_list pos:line="83" pos:column="52">()<pos:position pos:line="83" pos:column="54"/></argument_list></call></expr>;<pos:position pos:line="83" pos:column="55"/></expr_stmt>
        <expr_stmt><expr><call><name pos:line="84" pos:column="9">ap_mpm_child_main<pos:position pos:line="84" pos:column="26"/></name><argument_list pos:line="84" pos:column="26">(<argument><expr><name pos:line="84" pos:column="27">pconf<pos:position pos:line="84" pos:column="32"/></name></expr></argument>)<pos:position pos:line="84" pos:column="33"/></argument_list></call></expr>;<pos:position pos:line="84" pos:column="34"/></expr_stmt>
        <return pos:line="85" pos:column="9">return <expr><name pos:line="85" pos:column="16">FALSE<pos:position pos:line="85" pos:column="21"/></name></expr>;<pos:position pos:line="85" pos:column="22"/></return>
    }<pos:position pos:line="86" pos:column="6"/></block></then></if>

    <while pos:line="88" pos:column="5">while <condition pos:line="88" pos:column="11">(<expr><operator pos:line="88" pos:column="12">!<pos:position pos:line="88" pos:column="13"/></operator><name pos:line="88" pos:column="13">restart_pending<pos:position pos:line="88" pos:column="28"/></name> <operator pos:line="88" pos:column="29">&amp;&amp;<pos:position pos:line="88" pos:column="39"/></operator> <operator pos:line="88" pos:column="32">!<pos:position pos:line="88" pos:column="33"/></operator><name pos:line="88" pos:column="33">shutdown_pending<pos:position pos:line="88" pos:column="49"/></name></expr>)<pos:position pos:line="88" pos:column="50"/></condition> <block pos:line="88" pos:column="51">{
        <decl_stmt><decl><type><name pos:line="89" pos:column="9">RESULTCODES<pos:position pos:line="89" pos:column="20"/></name></type> <name pos:line="89" pos:column="21">proc_rc<pos:position pos:line="89" pos:column="28"/></name></decl>;<pos:position pos:line="89" pos:column="29"/></decl_stmt>
        <decl_stmt><decl><type><name pos:line="90" pos:column="9">PID<pos:position pos:line="90" pos:column="12"/></name></type> <name pos:line="90" pos:column="13">child_pid<pos:position pos:line="90" pos:column="22"/></name></decl>;<pos:position pos:line="90" pos:column="23"/></decl_stmt>
        <decl_stmt><decl><type><name pos:line="91" pos:column="9">int<pos:position pos:line="91" pos:column="12"/></name></type> <name pos:line="91" pos:column="13">active_children<pos:position pos:line="91" pos:column="28"/></name> <init pos:line="91" pos:column="29">= <expr><literal type="number" pos:line="91" pos:column="31">0<pos:position pos:line="91" pos:column="32"/></literal></expr></init></decl>;<pos:position pos:line="91" pos:column="33"/></decl_stmt>

        <comment type="block" pos:line="93" pos:column="9">/* Count number of active children */</comment>
        <for pos:line="94" pos:column="9">for <control pos:line="94" pos:column="13">(<init><expr><name pos:line="94" pos:column="14">slot<pos:position pos:line="94" pos:column="18"/></name><operator pos:line="94" pos:column="18">=<pos:position pos:line="94" pos:column="19"/></operator><literal type="number" pos:line="94" pos:column="19">0<pos:position pos:line="94" pos:column="20"/></literal></expr>;<pos:position pos:line="94" pos:column="21"/></init> <condition><expr><name pos:line="94" pos:column="22">slot<pos:position pos:line="94" pos:column="26"/></name> <operator pos:line="94" pos:column="27">&lt;<pos:position pos:line="94" pos:column="31"/></operator> <name pos:line="94" pos:column="29">HARD_SERVER_LIMIT<pos:position pos:line="94" pos:column="46"/></name></expr>;<pos:position pos:line="94" pos:column="47"/></condition> <incr><expr><name pos:line="94" pos:column="48">slot<pos:position pos:line="94" pos:column="52"/></name><operator pos:line="94" pos:column="52">++<pos:position pos:line="94" pos:column="54"/></operator></expr></incr>)<pos:position pos:line="94" pos:column="55"/></control> <block pos:line="94" pos:column="56">{
            <expr_stmt><expr><name pos:line="95" pos:column="13">active_children<pos:position pos:line="95" pos:column="28"/></name> <operator pos:line="95" pos:column="29">+=<pos:position pos:line="95" pos:column="31"/></operator> <name><name pos:line="95" pos:column="32">ap_scoreboard_image<pos:position pos:line="95" pos:column="51"/></name><operator pos:line="95" pos:column="51">-&gt;<pos:position pos:line="95" pos:column="56"/></operator><name pos:line="95" pos:column="53">parent<pos:position pos:line="95" pos:column="59"/></name><index pos:line="95" pos:column="59">[<expr><name pos:line="95" pos:column="60">slot<pos:position pos:line="95" pos:column="64"/></name></expr>]<pos:position pos:line="95" pos:column="65"/></index></name><operator pos:line="95" pos:column="65">.<pos:position pos:line="95" pos:column="66"/></operator><name pos:line="95" pos:column="66">pid<pos:position pos:line="95" pos:column="69"/></name> <operator pos:line="95" pos:column="70">!=<pos:position pos:line="95" pos:column="72"/></operator> <literal type="number" pos:line="95" pos:column="73">0<pos:position pos:line="95" pos:column="74"/></literal> <operator pos:line="95" pos:column="75">&amp;&amp;<pos:position pos:line="95" pos:column="85"/></operator>
                <operator pos:line="96" pos:column="17">!<pos:position pos:line="96" pos:column="18"/></operator><name><name pos:line="96" pos:column="18">ap_scoreboard_image<pos:position pos:line="96" pos:column="37"/></name><operator pos:line="96" pos:column="37">-&gt;<pos:position pos:line="96" pos:column="42"/></operator><name pos:line="96" pos:column="39">parent<pos:position pos:line="96" pos:column="45"/></name><index pos:line="96" pos:column="45">[<expr><name pos:line="96" pos:column="46">slot<pos:position pos:line="96" pos:column="50"/></name></expr>]<pos:position pos:line="96" pos:column="51"/></index></name><operator pos:line="96" pos:column="51">.<pos:position pos:line="96" pos:column="52"/></operator><name pos:line="96" pos:column="52">quiescing<pos:position pos:line="96" pos:column="61"/></name></expr>;<pos:position pos:line="96" pos:column="62"/></expr_stmt>
        }<pos:position pos:line="97" pos:column="10"/></block></for>

        <comment type="block" pos:line="99" pos:column="9">/* Spawn children if needed */</comment>
        <for pos:line="100" pos:column="9">for <control pos:line="100" pos:column="13">(<init><expr><name pos:line="100" pos:column="14">slot<pos:position pos:line="100" pos:column="18"/></name><operator pos:line="100" pos:column="18">=<pos:position pos:line="100" pos:column="19"/></operator><literal type="number" pos:line="100" pos:column="19">0<pos:position pos:line="100" pos:column="20"/></literal></expr>;<pos:position pos:line="100" pos:column="21"/></init> <condition><expr><name pos:line="100" pos:column="22">slot<pos:position pos:line="100" pos:column="26"/></name> <operator pos:line="100" pos:column="27">&lt;<pos:position pos:line="100" pos:column="31"/></operator> <name pos:line="100" pos:column="29">HARD_SERVER_LIMIT<pos:position pos:line="100" pos:column="46"/></name> <operator pos:line="100" pos:column="47">&amp;&amp;<pos:position pos:line="100" pos:column="57"/></operator> <name pos:line="100" pos:column="50">active_children<pos:position pos:line="100" pos:column="65"/></name> <operator pos:line="100" pos:column="66">&lt;<pos:position pos:line="100" pos:column="70"/></operator> <name pos:line="100" pos:column="68">ap_daemons_to_start<pos:position pos:line="100" pos:column="87"/></name></expr>;<pos:position pos:line="100" pos:column="88"/></condition> <incr><expr><name pos:line="100" pos:column="89">slot<pos:position pos:line="100" pos:column="93"/></name><operator pos:line="100" pos:column="93">++<pos:position pos:line="100" pos:column="95"/></operator></expr></incr>)<pos:position pos:line="100" pos:column="96"/></control> <block pos:line="100" pos:column="97">{
            <if pos:line="101" pos:column="13">if <condition pos:line="101" pos:column="16">(<expr><name><name pos:line="101" pos:column="17">ap_scoreboard_image<pos:position pos:line="101" pos:column="36"/></name><operator pos:line="101" pos:column="36">-&gt;<pos:position pos:line="101" pos:column="41"/></operator><name pos:line="101" pos:column="38">parent<pos:position pos:line="101" pos:column="44"/></name><index pos:line="101" pos:column="44">[<expr><name pos:line="101" pos:column="45">slot<pos:position pos:line="101" pos:column="49"/></name></expr>]<pos:position pos:line="101" pos:column="50"/></index></name><operator pos:line="101" pos:column="50">.<pos:position pos:line="101" pos:column="51"/></operator><name pos:line="101" pos:column="51">pid<pos:position pos:line="101" pos:column="54"/></name> <operator pos:line="101" pos:column="55">==<pos:position pos:line="101" pos:column="57"/></operator> <literal type="number" pos:line="101" pos:column="58">0<pos:position pos:line="101" pos:column="59"/></literal></expr>)<pos:position pos:line="101" pos:column="60"/></condition><then pos:line="101" pos:column="60"> <block pos:line="101" pos:column="61">{
                <expr_stmt><expr><call><name pos:line="102" pos:column="17">spawn_child<pos:position pos:line="102" pos:column="28"/></name><argument_list pos:line="102" pos:column="28">(<argument><expr><name pos:line="102" pos:column="29">slot<pos:position pos:line="102" pos:column="33"/></name></expr></argument>)<pos:position pos:line="102" pos:column="34"/></argument_list></call></expr>;<pos:position pos:line="102" pos:column="35"/></expr_stmt>
                <expr_stmt><expr><name pos:line="103" pos:column="17">active_children<pos:position pos:line="103" pos:column="32"/></name><operator pos:line="103" pos:column="32">++<pos:position pos:line="103" pos:column="34"/></operator></expr>;<pos:position pos:line="103" pos:column="35"/></expr_stmt>
            }<pos:position pos:line="104" pos:column="14"/></block></then></if>
        }<pos:position pos:line="105" pos:column="10"/></block></for>

        <expr_stmt><expr><name pos:line="107" pos:column="9">rc<pos:position pos:line="107" pos:column="11"/></name> <operator pos:line="107" pos:column="12">=<pos:position pos:line="107" pos:column="13"/></operator> <call><name pos:line="107" pos:column="14">DosWaitChild<pos:position pos:line="107" pos:column="26"/></name><argument_list pos:line="107" pos:column="26">(<argument><expr><name pos:line="107" pos:column="27">DCWA_PROCESSTREE<pos:position pos:line="107" pos:column="43"/></name></expr></argument>, <argument><expr><name pos:line="107" pos:column="45">DCWW_NOWAIT<pos:position pos:line="107" pos:column="56"/></name></expr></argument>, <argument><expr><operator pos:line="107" pos:column="58">&amp;<pos:position pos:line="107" pos:column="63"/></operator><name pos:line="107" pos:column="59">proc_rc<pos:position pos:line="107" pos:column="66"/></name></expr></argument>, <argument><expr><operator pos:line="107" pos:column="68">&amp;<pos:position pos:line="107" pos:column="73"/></operator><name pos:line="107" pos:column="69">child_pid<pos:position pos:line="107" pos:column="78"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="107" pos:column="80">0<pos:position pos:line="107" pos:column="81"/></literal></expr></argument>)<pos:position pos:line="107" pos:column="82"/></argument_list></call></expr>;<pos:position pos:line="107" pos:column="83"/></expr_stmt>

        <if pos:line="109" pos:column="9">if <condition pos:line="109" pos:column="12">(<expr><name pos:line="109" pos:column="13">rc<pos:position pos:line="109" pos:column="15"/></name> <operator pos:line="109" pos:column="16">==<pos:position pos:line="109" pos:column="18"/></operator> <literal type="number" pos:line="109" pos:column="19">0<pos:position pos:line="109" pos:column="20"/></literal></expr>)<pos:position pos:line="109" pos:column="21"/></condition><then pos:line="109" pos:column="21"> <block pos:line="109" pos:column="22">{
            <comment type="block" pos:line="110" pos:column="13">/* A child has terminated, remove its scoreboard entry &amp; terminate if necessary */</comment>
            <for pos:line="111" pos:column="13">for <control pos:line="111" pos:column="17">(<init><expr><name pos:line="111" pos:column="18">slot<pos:position pos:line="111" pos:column="22"/></name><operator pos:line="111" pos:column="22">=<pos:position pos:line="111" pos:column="23"/></operator><literal type="number" pos:line="111" pos:column="23">0<pos:position pos:line="111" pos:column="24"/></literal></expr>;<pos:position pos:line="111" pos:column="25"/></init> <condition><expr><name><name pos:line="111" pos:column="26">ap_scoreboard_image<pos:position pos:line="111" pos:column="45"/></name><operator pos:line="111" pos:column="45">-&gt;<pos:position pos:line="111" pos:column="50"/></operator><name pos:line="111" pos:column="47">parent<pos:position pos:line="111" pos:column="53"/></name><index pos:line="111" pos:column="53">[<expr><name pos:line="111" pos:column="54">slot<pos:position pos:line="111" pos:column="58"/></name></expr>]<pos:position pos:line="111" pos:column="59"/></index></name><operator pos:line="111" pos:column="59">.<pos:position pos:line="111" pos:column="60"/></operator><macro><name pos:line="111" pos:column="60">pid<pos:position pos:line="111" pos:column="63"/></name></macro></expr></condition></control></for></block></then></if></block></while></block></function></unit>

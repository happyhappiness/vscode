<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/httpd/gumtree/httpd_repos_function_3711_httpd-2.2.19.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">APR_INLINE<pos:position pos:line="1" pos:column="18"/></name> <name pos:line="1" pos:column="19">int<pos:position pos:line="1" pos:column="22"/></name></type> <name pos:line="1" pos:column="23">fnmatch_ch<pos:position pos:line="1" pos:column="33"/></name><parameter_list pos:line="1" pos:column="33">(<parameter><decl><type><specifier pos:line="1" pos:column="34">const<pos:position pos:line="1" pos:column="39"/></specifier> <name pos:line="1" pos:column="40">char<pos:position pos:line="1" pos:column="44"/></name> <modifier pos:line="1" pos:column="45">*<pos:position pos:line="1" pos:column="46"/></modifier><modifier pos:line="1" pos:column="46">*<pos:position pos:line="1" pos:column="47"/></modifier></type><name pos:line="1" pos:column="47">pattern<pos:position pos:line="1" pos:column="54"/></name></decl></parameter>, <parameter><decl><type><specifier pos:line="1" pos:column="56">const<pos:position pos:line="1" pos:column="61"/></specifier> <name pos:line="1" pos:column="62">char<pos:position pos:line="1" pos:column="66"/></name> <modifier pos:line="1" pos:column="67">*<pos:position pos:line="1" pos:column="68"/></modifier><modifier pos:line="1" pos:column="68">*<pos:position pos:line="1" pos:column="69"/></modifier></type><name pos:line="1" pos:column="69">string<pos:position pos:line="1" pos:column="75"/></name></decl></parameter>, <parameter><decl><type><name pos:line="1" pos:column="77">int<pos:position pos:line="1" pos:column="80"/></name></type> <name pos:line="1" pos:column="81">flags<pos:position pos:line="1" pos:column="86"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="87"/></parameter_list>
<block pos:line="2" pos:column="1">{
    <decl_stmt><decl><type><specifier pos:line="3" pos:column="5">const<pos:position pos:line="3" pos:column="10"/></specifier> <name pos:line="3" pos:column="11">char<pos:position pos:line="3" pos:column="15"/></name> <modifier pos:line="3" pos:column="16">*<pos:position pos:line="3" pos:column="17"/></modifier> <specifier pos:line="3" pos:column="18">const<pos:position pos:line="3" pos:column="23"/></specifier></type> <name pos:line="3" pos:column="24">mismatch<pos:position pos:line="3" pos:column="32"/></name> <init pos:line="3" pos:column="33">= <expr><operator pos:line="3" pos:column="35">*<pos:position pos:line="3" pos:column="36"/></operator><name pos:line="3" pos:column="36">pattern<pos:position pos:line="3" pos:column="43"/></name></expr></init></decl>;<pos:position pos:line="3" pos:column="44"/></decl_stmt>
    <decl_stmt><decl><type><specifier pos:line="4" pos:column="5">const<pos:position pos:line="4" pos:column="10"/></specifier> <name pos:line="4" pos:column="11">int<pos:position pos:line="4" pos:column="14"/></name></type> <name pos:line="4" pos:column="15">nocase<pos:position pos:line="4" pos:column="21"/></name> <init pos:line="4" pos:column="22">= <expr><operator pos:line="4" pos:column="24">!<pos:position pos:line="4" pos:column="25"/></operator><operator pos:line="4" pos:column="25">!<pos:position pos:line="4" pos:column="26"/></operator><operator pos:line="4" pos:column="26">(<pos:position pos:line="4" pos:column="27"/></operator><name pos:line="4" pos:column="27">flags<pos:position pos:line="4" pos:column="32"/></name> <operator pos:line="4" pos:column="33">&amp;<pos:position pos:line="4" pos:column="38"/></operator> <name pos:line="4" pos:column="35">APR_FNM_CASE_BLIND<pos:position pos:line="4" pos:column="53"/></name><operator pos:line="4" pos:column="53">)<pos:position pos:line="4" pos:column="54"/></operator></expr></init></decl>;<pos:position pos:line="4" pos:column="55"/></decl_stmt>
    <decl_stmt><decl><type><specifier pos:line="5" pos:column="5">const<pos:position pos:line="5" pos:column="10"/></specifier> <name pos:line="5" pos:column="11">int<pos:position pos:line="5" pos:column="14"/></name></type> <name pos:line="5" pos:column="15">escape<pos:position pos:line="5" pos:column="21"/></name> <init pos:line="5" pos:column="22">= <expr><operator pos:line="5" pos:column="24">!<pos:position pos:line="5" pos:column="25"/></operator><operator pos:line="5" pos:column="25">(<pos:position pos:line="5" pos:column="26"/></operator><name pos:line="5" pos:column="26">flags<pos:position pos:line="5" pos:column="31"/></name> <operator pos:line="5" pos:column="32">&amp;<pos:position pos:line="5" pos:column="37"/></operator> <name pos:line="5" pos:column="34">APR_FNM_NOESCAPE<pos:position pos:line="5" pos:column="50"/></name><operator pos:line="5" pos:column="50">)<pos:position pos:line="5" pos:column="51"/></operator></expr></init></decl>;<pos:position pos:line="5" pos:column="52"/></decl_stmt>
    <decl_stmt><decl><type><specifier pos:line="6" pos:column="5">const<pos:position pos:line="6" pos:column="10"/></specifier> <name pos:line="6" pos:column="11">int<pos:position pos:line="6" pos:column="14"/></name></type> <name pos:line="6" pos:column="15">slash<pos:position pos:line="6" pos:column="20"/></name> <init pos:line="6" pos:column="21">= <expr><operator pos:line="6" pos:column="23">!<pos:position pos:line="6" pos:column="24"/></operator><operator pos:line="6" pos:column="24">!<pos:position pos:line="6" pos:column="25"/></operator><operator pos:line="6" pos:column="25">(<pos:position pos:line="6" pos:column="26"/></operator><name pos:line="6" pos:column="26">flags<pos:position pos:line="6" pos:column="31"/></name> <operator pos:line="6" pos:column="32">&amp;<pos:position pos:line="6" pos:column="37"/></operator> <name pos:line="6" pos:column="34">APR_FNM_PATHNAME<pos:position pos:line="6" pos:column="50"/></name><operator pos:line="6" pos:column="50">)<pos:position pos:line="6" pos:column="51"/></operator></expr></init></decl>;<pos:position pos:line="6" pos:column="52"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="7" pos:column="5">int<pos:position pos:line="7" pos:column="8"/></name></type> <name pos:line="7" pos:column="9">result<pos:position pos:line="7" pos:column="15"/></name> <init pos:line="7" pos:column="16">= <expr><name pos:line="7" pos:column="18">APR_FNM_NOMATCH<pos:position pos:line="7" pos:column="33"/></name></expr></init></decl>;<pos:position pos:line="7" pos:column="34"/></decl_stmt>
    <decl_stmt><decl><type><specifier pos:line="8" pos:column="5">const<pos:position pos:line="8" pos:column="10"/></specifier> <name pos:line="8" pos:column="11">char<pos:position pos:line="8" pos:column="15"/></name> <modifier pos:line="8" pos:column="16">*<pos:position pos:line="8" pos:column="17"/></modifier></type><name pos:line="8" pos:column="17">startch<pos:position pos:line="8" pos:column="24"/></name></decl>;<pos:position pos:line="8" pos:column="25"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="9" pos:column="5">int<pos:position pos:line="9" pos:column="8"/></name></type> <name pos:line="9" pos:column="9">negate<pos:position pos:line="9" pos:column="15"/></name></decl>;<pos:position pos:line="9" pos:column="16"/></decl_stmt>

    <if pos:line="11" pos:column="5">if <condition pos:line="11" pos:column="8">(<expr><operator pos:line="11" pos:column="9">*<pos:position pos:line="11" pos:column="10"/></operator><operator pos:line="11" pos:column="10">*<pos:position pos:line="11" pos:column="11"/></operator><name pos:line="11" pos:column="11">pattern<pos:position pos:line="11" pos:column="18"/></name> <operator pos:line="11" pos:column="19">==<pos:position pos:line="11" pos:column="21"/></operator> <literal type="char" pos:line="11" pos:column="22">'['<pos:position pos:line="11" pos:column="25"/></literal></expr>)<pos:position pos:line="11" pos:column="26"/></condition><then pos:line="11" pos:column="26">
    <block pos:line="12" pos:column="5">{
        <expr_stmt><expr><operator pos:line="13" pos:column="9">++<pos:position pos:line="13" pos:column="11"/></operator><operator pos:line="13" pos:column="11">*<pos:position pos:line="13" pos:column="12"/></operator><name pos:line="13" pos:column="12">pattern<pos:position pos:line="13" pos:column="19"/></name></expr>;<pos:position pos:line="13" pos:column="20"/></expr_stmt>

        <comment type="block" pos:line="15" pos:column="9">/* Handle negation, either leading ! or ^ operators (never both) */</comment>
        <expr_stmt><expr><name pos:line="16" pos:column="9">negate<pos:position pos:line="16" pos:column="15"/></name> <operator pos:line="16" pos:column="16">=<pos:position pos:line="16" pos:column="17"/></operator> <operator pos:line="16" pos:column="18">(<pos:position pos:line="16" pos:column="19"/></operator><operator pos:line="16" pos:column="19">(<pos:position pos:line="16" pos:column="20"/></operator><operator pos:line="16" pos:column="20">*<pos:position pos:line="16" pos:column="21"/></operator><operator pos:line="16" pos:column="21">*<pos:position pos:line="16" pos:column="22"/></operator><name pos:line="16" pos:column="22">pattern<pos:position pos:line="16" pos:column="29"/></name> <operator pos:line="16" pos:column="30">==<pos:position pos:line="16" pos:column="32"/></operator> <literal type="char" pos:line="16" pos:column="33">'!'<pos:position pos:line="16" pos:column="36"/></literal><operator pos:line="16" pos:column="36">)<pos:position pos:line="16" pos:column="37"/></operator> <operator pos:line="16" pos:column="38">||<pos:position pos:line="16" pos:column="40"/></operator> <operator pos:line="16" pos:column="41">(<pos:position pos:line="16" pos:column="42"/></operator><operator pos:line="16" pos:column="42">*<pos:position pos:line="16" pos:column="43"/></operator><operator pos:line="16" pos:column="43">*<pos:position pos:line="16" pos:column="44"/></operator><name pos:line="16" pos:column="44">pattern<pos:position pos:line="16" pos:column="51"/></name> <operator pos:line="16" pos:column="52">==<pos:position pos:line="16" pos:column="54"/></operator> <literal type="char" pos:line="16" pos:column="55">'^'<pos:position pos:line="16" pos:column="58"/></literal><operator pos:line="16" pos:column="58">)<pos:position pos:line="16" pos:column="59"/></operator><operator pos:line="16" pos:column="59">)<pos:position pos:line="16" pos:column="60"/></operator></expr>;<pos:position pos:line="16" pos:column="61"/></expr_stmt>
        <if pos:line="17" pos:column="9">if <condition pos:line="17" pos:column="12">(<expr><name pos:line="17" pos:column="13">negate<pos:position pos:line="17" pos:column="19"/></name></expr>)<pos:position pos:line="17" pos:column="20"/></condition><then pos:line="17" pos:column="20">
            <block type="pseudo"><expr_stmt><expr><operator pos:line="18" pos:column="13">++<pos:position pos:line="18" pos:column="15"/></operator><operator pos:line="18" pos:column="15">*<pos:position pos:line="18" pos:column="16"/></operator><name pos:line="18" pos:column="16">pattern<pos:position pos:line="18" pos:column="23"/></name></expr>;<pos:position pos:line="18" pos:column="24"/></expr_stmt></block></then></if>

        <comment type="block" pos:line="20" pos:column="9">/* ']' is an ordinary character at the start of the range pattern */</comment>
        <if pos:line="21" pos:column="9">if <condition pos:line="21" pos:column="12">(<expr><operator pos:line="21" pos:column="13">*<pos:position pos:line="21" pos:column="14"/></operator><operator pos:line="21" pos:column="14">*<pos:position pos:line="21" pos:column="15"/></operator><name pos:line="21" pos:column="15">pattern<pos:position pos:line="21" pos:column="22"/></name> <operator pos:line="21" pos:column="23">==<pos:position pos:line="21" pos:column="25"/></operator> <literal type="char" pos:line="21" pos:column="26">']'<pos:position pos:line="21" pos:column="29"/></literal></expr>)<pos:position pos:line="21" pos:column="30"/></condition><then pos:line="21" pos:column="30">
            <block type="pseudo"><goto pos:line="22" pos:column="13">goto <name pos:line="22" pos:column="18">leadingclosebrace<pos:position pos:line="22" pos:column="35"/></name>;<pos:position pos:line="22" pos:column="36"/></goto></block></then></if>

        <while pos:line="24" pos:column="9">while <condition pos:line="24" pos:column="15">(<expr><operator pos:line="24" pos:column="16">*<pos:position pos:line="24" pos:column="17"/></operator><operator pos:line="24" pos:column="17">*<pos:position pos:line="24" pos:column="18"/></operator><name pos:line="24" pos:column="18">pattern<pos:position pos:line="24" pos:column="25"/></name></expr>)<pos:position pos:line="24" pos:column="26"/></condition>
        <block pos:line="25" pos:column="9">{
            <if pos:line="26" pos:column="13">if <condition pos:line="26" pos:column="16">(<expr><operator pos:line="26" pos:column="17">*<pos:position pos:line="26" pos:column="18"/></operator><operator pos:line="26" pos:column="18">*<pos:position pos:line="26" pos:column="19"/></operator><name pos:line="26" pos:column="19">pattern<pos:position pos:line="26" pos:column="26"/></name> <operator pos:line="26" pos:column="27">==<pos:position pos:line="26" pos:column="29"/></operator> <literal type="char" pos:line="26" pos:column="30">']'<pos:position pos:line="26" pos:column="33"/></literal></expr>)<pos:position pos:line="26" pos:column="34"/></condition><then pos:line="26" pos:column="34"> <block pos:line="26" pos:column="35">{
                <expr_stmt><expr><operator pos:line="27" pos:column="17">++<pos:position pos:line="27" pos:column="19"/></operator><operator pos:line="27" pos:column="19">*<pos:position pos:line="27" pos:column="20"/></operator><name pos:line="27" pos:column="20">pattern<pos:position pos:line="27" pos:column="27"/></name></expr>;<pos:position pos:line="27" pos:column="28"/></expr_stmt>
                <comment type="block" pos:line="28" pos:column="17">/* XXX: Fix for MBCS character width */</comment>
                <expr_stmt><expr><operator pos:line="29" pos:column="17">++<pos:position pos:line="29" pos:column="19"/></operator><operator pos:line="29" pos:column="19">*<pos:position pos:line="29" pos:column="20"/></operator><name pos:line="29" pos:column="20">string<pos:position pos:line="29" pos:column="26"/></name></expr>;<pos:position pos:line="29" pos:column="27"/></expr_stmt>
                <return pos:line="30" pos:column="17">return <expr><operator pos:line="30" pos:column="24">(<pos:position pos:line="30" pos:column="25"/></operator><name pos:line="30" pos:column="25">result<pos:position pos:line="30" pos:column="31"/></name> <operator pos:line="30" pos:column="32">^<pos:position pos:line="30" pos:column="33"/></operator> <name pos:line="30" pos:column="34">negate<pos:position pos:line="30" pos:column="40"/></name><operator pos:line="30" pos:column="40">)<pos:position pos:line="30" pos:column="41"/></operator></expr>;<pos:position pos:line="30" pos:column="42"/></return>
            }<pos:position pos:line="31" pos:column="14"/></block></then></if>

            <if pos:line="33" pos:column="13">if <condition pos:line="33" pos:column="16">(<expr><name pos:line="33" pos:column="17">escape<pos:position pos:line="33" pos:column="23"/></name> <operator pos:line="33" pos:column="24">&amp;&amp;<pos:position pos:line="33" pos:column="34"/></operator> <operator pos:line="33" pos:column="27">(<pos:position pos:line="33" pos:column="28"/></operator><operator pos:line="33" pos:column="28">*<pos:position pos:line="33" pos:column="29"/></operator><operator pos:line="33" pos:column="29">*<pos:position pos:line="33" pos:column="30"/></operator><name pos:line="33" pos:column="30">pattern<pos:position pos:line="33" pos:column="37"/></name> <operator pos:line="33" pos:column="38">==<pos:position pos:line="33" pos:column="40"/></operator> <literal type="char" pos:line="33" pos:column="41">'\\'<pos:position pos:line="33" pos:column="45"/></literal><operator pos:line="33" pos:column="45">)<pos:position pos:line="33" pos:column="46"/></operator></expr>)<pos:position pos:line="33" pos:column="47"/></condition><then pos:line="33" pos:column="47"> <block pos:line="33" pos:column="48">{
                <expr_stmt><expr><operator pos:line="34" pos:column="17">++<pos:position pos:line="34" pos:column="19"/></operator><operator pos:line="34" pos:column="19">*<pos:position pos:line="34" pos:column="20"/></operator><name pos:line="34" pos:column="20">pattern<pos:position pos:line="34" pos:column="27"/></name></expr>;<pos:position pos:line="34" pos:column="28"/></expr_stmt>

                <comment type="block" pos:line="36" pos:column="17">/* Patterns must be terminated with ']', not EOS */</comment>
                <if pos:line="37" pos:column="17">if <condition pos:line="37" pos:column="20">(<expr><operator pos:line="37" pos:column="21">!<pos:position pos:line="37" pos:column="22"/></operator><operator pos:line="37" pos:column="22">*<pos:position pos:line="37" pos:column="23"/></operator><operator pos:line="37" pos:column="23">*<pos:position pos:line="37" pos:column="24"/></operator><name pos:line="37" pos:column="24">pattern<pos:position pos:line="37" pos:column="31"/></name></expr>)<pos:position pos:line="37" pos:column="32"/></condition><then pos:line="37" pos:column="32">
                    <block type="pseudo"><break pos:line="38" pos:column="21">break;<pos:position pos:line="38" pos:column="27"/></break></block></then></if>
            }<pos:position pos:line="39" pos:column="14"/></block></then></if>

            <comment type="block" pos:line="41" pos:column="13">/* Patterns must be terminated with ']' not '/' */</comment>
            <if pos:line="42" pos:column="13">if <condition pos:line="42" pos:column="16">(<expr><name pos:line="42" pos:column="17">slash<pos:position pos:line="42" pos:column="22"/></name> <operator pos:line="42" pos:column="23">&amp;&amp;<pos:position pos:line="42" pos:column="33"/></operator> <operator pos:line="42" pos:column="26">(<pos:position pos:line="42" pos:column="27"/></operator><operator pos:line="42" pos:column="27">*<pos:position pos:line="42" pos:column="28"/></operator><operator pos:line="42" pos:column="28">*<pos:position pos:line="42" pos:column="29"/></operator><name pos:line="42" pos:column="29">pattern<pos:position pos:line="42" pos:column="36"/></name> <operator pos:line="42" pos:column="37">==<pos:position pos:line="42" pos:column="39"/></operator> <literal type="char" pos:line="42" pos:column="40">'/'<pos:position pos:line="42" pos:column="43"/></literal><operator pos:line="42" pos:column="43">)<pos:position pos:line="42" pos:column="44"/></operator></expr>)<pos:position pos:line="42" pos:column="45"/></condition><then pos:line="42" pos:column="45">
                <block type="pseudo"><break pos:line="43" pos:column="17">break;<pos:position pos:line="43" pos:column="23"/></break></block></then></if>

<label><name pos:line="45" pos:column="1">leadingclosebrace<pos:position pos:line="45" pos:column="18"/></name>:<pos:position pos:line="45" pos:column="19"/></label>
            <comment type="block" pos:line="46" pos:column="13">/* Look at only well-formed range patterns; 
             * "x-]" is not allowed unless escaped ("x-\]")
             * XXX: Fix for locale/MBCS character width
             */</comment>
            <if pos:line="50" pos:column="13">if <condition pos:line="50" pos:column="16">(<expr><operator pos:line="50" pos:column="17">(<pos:position pos:line="50" pos:column="18"/></operator><operator pos:line="50" pos:column="18">(<pos:position pos:line="50" pos:column="19"/></operator><operator pos:line="50" pos:column="19">*<pos:position pos:line="50" pos:column="20"/></operator><name pos:line="50" pos:column="20">pattern<pos:position pos:line="50" pos:column="27"/></name><operator pos:line="50" pos:column="27">)<pos:position pos:line="50" pos:column="28"/></operator><index pos:line="50" pos:column="28">[<expr><literal type="number" pos:line="50" pos:column="29">1<pos:position pos:line="50" pos:column="30"/></literal></expr>]<pos:position pos:line="50" pos:column="31"/></index> <operator pos:line="50" pos:column="32">==<pos:position pos:line="50" pos:column="34"/></operator> <literal type="char" pos:line="50" pos:column="35">'-'<pos:position pos:line="50" pos:column="38"/></literal><operator pos:line="50" pos:column="38">)<pos:position pos:line="50" pos:column="39"/></operator> <operator pos:line="50" pos:column="40">&amp;&amp;<pos:position pos:line="50" pos:column="50"/></operator> <operator pos:line="50" pos:column="43">(<pos:position pos:line="50" pos:column="44"/></operator><operator pos:line="50" pos:column="44">(<pos:position pos:line="50" pos:column="45"/></operator><operator pos:line="50" pos:column="45">*<pos:position pos:line="50" pos:column="46"/></operator><name pos:line="50" pos:column="46">pattern<pos:position pos:line="50" pos:column="53"/></name><operator pos:line="50" pos:column="53">)<pos:position pos:line="50" pos:column="54"/></operator><index pos:line="50" pos:column="54">[<expr><literal type="number" pos:line="50" pos:column="55">2<pos:position pos:line="50" pos:column="56"/></literal></expr>]<pos:position pos:line="50" pos:column="57"/></index> <operator pos:line="50" pos:column="58">!=<pos:position pos:line="50" pos:column="60"/></operator> <literal type="char" pos:line="50" pos:column="61">']'<pos:position pos:line="50" pos:column="64"/></literal><operator pos:line="50" pos:column="64">)<pos:position pos:line="50" pos:column="65"/></operator></expr>)<pos:position pos:line="50" pos:column="66"/></condition><then pos:line="50" pos:column="66">
            <block pos:line="51" pos:column="13">{
                <expr_stmt><expr><name pos:line="52" pos:column="17">startch<pos:position pos:line="52" pos:column="24"/></name> <operator pos:line="52" pos:column="25">=<pos:position pos:line="52" pos:column="26"/></operator> <operator pos:line="52" pos:column="27">*<pos:position pos:line="52" pos:column="28"/></operator><name pos:line="52" pos:column="28">pattern<pos:position pos:line="52" pos:column="35"/></name></expr>;<pos:position pos:line="52" pos:column="36"/></expr_stmt>
                <expr_stmt><expr><operator pos:line="53" pos:column="17">*<pos:position pos:line="53" pos:column="18"/></operator><name pos:line="53" pos:column="18">pattern<pos:position pos:line="53" pos:column="25"/></name> <operator pos:line="53" pos:column="26">+=<pos:position pos:line="53" pos:column="28"/></operator> <ternary><condition><expr><operator pos:line="53" pos:column="29">(<pos:position pos:line="53" pos:column="30"/></operator><name pos:line="53" pos:column="30">escape<pos:position pos:line="53" pos:column="36"/></name> <operator pos:line="53" pos:column="37">&amp;&amp;<pos:position pos:line="53" pos:column="47"/></operator> <operator pos:line="53" pos:column="40">(<pos:position pos:line="53" pos:column="41"/></operator><operator pos:line="53" pos:column="41">(<pos:position pos:line="53" pos:column="42"/></operator><operator pos:line="53" pos:column="42">*<pos:position pos:line="53" pos:column="43"/></operator><name pos:line="53" pos:column="43">pattern<pos:position pos:line="53" pos:column="50"/></name><operator pos:line="53" pos:column="50">)<pos:position pos:line="53" pos:column="51"/></operator><index pos:line="53" pos:column="51">[<expr><literal type="number" pos:line="53" pos:column="52">2<pos:position pos:line="53" pos:column="53"/></literal></expr>]<pos:position pos:line="53" pos:column="54"/></index> <operator pos:line="53" pos:column="55">==<pos:position pos:line="53" pos:column="57"/></operator> <literal type="char" pos:line="53" pos:column="58">'\\'<pos:position pos:line="53" pos:column="62"/></literal><operator pos:line="53" pos:column="62">)<pos:position pos:line="53" pos:column="63"/></operator><operator pos:line="53" pos:column="63">)<pos:position pos:line="53" pos:column="64"/></operator></expr> ?<pos:position pos:line="53" pos:column="66"/></condition><then pos:line="53" pos:column="66"> <expr><literal type="number" pos:line="53" pos:column="67">3<pos:position pos:line="53" pos:column="68"/></literal></expr> <pos:position pos:line="53" pos:column="69"/></then><else pos:line="53" pos:column="69">: <expr><literal type="number" pos:line="53" pos:column="71">2<pos:position pos:line="53" pos:column="72"/></literal></expr></else></ternary></expr>;<pos:position pos:line="53" pos:column="73"/></expr_stmt>

                <comment type="block" pos:line="55" pos:column="17">/* NOT a properly balanced [expr] pattern, EOS terminated 
                 * or ranges containing a slash in FNM_PATHNAME mode pattern
                 * fall out to to the rewind and test '[' literal code path
                 */</comment>
                <if pos:line="59" pos:column="17">if <condition pos:line="59" pos:column="20">(<expr><operator pos:line="59" pos:column="21">!<pos:position pos:line="59" pos:column="22"/></operator><operator pos:line="59" pos:column="22">*<pos:position pos:line="59" pos:column="23"/></operator><operator pos:line="59" pos:column="23">*<pos:position pos:line="59" pos:column="24"/></operator><name pos:line="59" pos:column="24">pattern<pos:position pos:line="59" pos:column="31"/></name> <operator pos:line="59" pos:column="32">||<pos:position pos:line="59" pos:column="34"/></operator> <operator pos:line="59" pos:column="35">(<pos:position pos:line="59" pos:column="36"/></operator><name pos:line="59" pos:column="36">slash<pos:position pos:line="59" pos:column="41"/></name> <operator pos:line="59" pos:column="42">&amp;&amp;<pos:position pos:line="59" pos:column="52"/></operator> <operator pos:line="59" pos:column="45">(<pos:position pos:line="59" pos:column="46"/></operator><operator pos:line="59" pos:column="46">*<pos:position pos:line="59" pos:column="47"/></operator><operator pos:line="59" pos:column="47">*<pos:position pos:line="59" pos:column="48"/></operator><name pos:line="59" pos:column="48">pattern<pos:position pos:line="59" pos:column="55"/></name> <operator pos:line="59" pos:column="56">==<pos:position pos:line="59" pos:column="58"/></operator> <literal type="char" pos:line="59" pos:column="59">'/'<pos:position pos:line="59" pos:column="62"/></literal><operator pos:line="59" pos:column="62">)<pos:position pos:line="59" pos:column="63"/></operator><operator pos:line="59" pos:column="63">)<pos:position pos:line="59" pos:column="64"/></operator></expr>)<pos:position pos:line="59" pos:column="65"/></condition><then pos:line="59" pos:column="65">
                    <block type="pseudo"><break pos:line="60" pos:column="21">break;<pos:position pos:line="60" pos:column="27"/></break></block></then></if>

                <comment type="block" pos:line="62" pos:column="17">/* XXX: handle locale/MBCS comparison, advance by MBCS char width */</comment>
                <if pos:line="63" pos:column="17">if <condition pos:line="63" pos:column="20">(<expr><operator pos:line="63" pos:column="21">(<pos:position pos:line="63" pos:column="22"/></operator><operator pos:line="63" pos:column="22">*<pos:position pos:line="63" pos:column="23"/></operator><operator pos:line="63" pos:column="23">*<pos:position pos:line="63" pos:column="24"/></operator><name pos:line="63" pos:column="24">string<pos:position pos:line="63" pos:column="30"/></name> <operator pos:line="63" pos:column="31">&gt;=<pos:position pos:line="63" pos:column="36"/></operator> <operator pos:line="63" pos:column="34">*<pos:position pos:line="63" pos:column="35"/></operator><name pos:line="63" pos:column="35">startch<pos:position pos:line="63" pos:column="42"/></name><operator pos:line="63" pos:column="42">)<pos:position pos:line="63" pos:column="43"/></operator> <operator pos:line="63" pos:column="44">&amp;&amp;<pos:position pos:line="63" pos:column="54"/></operator> <operator pos:line="63" pos:column="47">(<pos:position pos:line="63" pos:column="48"/></operator><operator pos:line="63" pos:column="48">*<pos:position pos:line="63" pos:column="49"/></operator><operator pos:line="63" pos:column="49">*<pos:position pos:line="63" pos:column="50"/></operator><name pos:line="63" pos:column="50">string<pos:position pos:line="63" pos:column="56"/></name> <operator pos:line="63" pos:column="57">&lt;=<pos:position pos:line="63" pos:column="62"/></operator> <operator pos:line="63" pos:column="60">*<pos:position pos:line="63" pos:column="61"/></operator><operator pos:line="63" pos:column="61">*<pos:position pos:line="63" pos:column="62"/></operator><name pos:line="63" pos:column="62">pattern<pos:position pos:line="63" pos:column="69"/></name><operator pos:line="63" pos:column="69">)<pos:position pos:line="63" pos:column="70"/></operator></expr>)<pos:position pos:line="63" pos:column="71"/></condition><then pos:line="63" pos:column="71">
                    <block type="pseudo"><expr_stmt><expr><name pos:line="64" pos:column="21">result<pos:position pos:line="64" pos:column="27"/></name> <operator pos:line="64" pos:column="28">=<pos:position pos:line="64" pos:column="29"/></operator> <literal type="number" pos:line="64" pos:column="30">0<pos:position pos:line="64" pos:column="31"/></literal></expr>;<pos:position pos:line="64" pos:column="32"/></expr_stmt></block></then>
                <elseif pos:line="65" pos:column="17">else <if pos:line="65" pos:column="22">if <condition pos:line="65" pos:column="25">(<expr><name pos:line="65" pos:column="26">nocase<pos:position pos:line="65" pos:column="32"/></name> <operator pos:line="65" pos:column="33">&amp;&amp;<pos:position pos:line="65" pos:column="43"/></operator> <operator pos:line="65" pos:column="36">(<pos:position pos:line="65" pos:column="37"/></operator><call><name pos:line="65" pos:column="37">isupper<pos:position pos:line="65" pos:column="44"/></name><argument_list pos:line="65" pos:column="44">(<argument><expr><operator pos:line="65" pos:column="45">*<pos:position pos:line="65" pos:column="46"/></operator><operator pos:line="65" pos:column="46">*<pos:position pos:line="65" pos:column="47"/></operator><name pos:line="65" pos:column="47">string<pos:position pos:line="65" pos:column="53"/></name></expr></argument>)<pos:position pos:line="65" pos:column="54"/></argument_list></call> <operator pos:line="65" pos:column="55">||<pos:position pos:line="65" pos:column="57"/></operator> <call><name pos:line="65" pos:column="58">isupper<pos:position pos:line="65" pos:column="65"/></name><argument_list pos:line="65" pos:column="65">(<argument><expr><operator pos:line="65" pos:column="66">*<pos:position pos:line="65" pos:column="67"/></operator><name pos:line="65" pos:column="67">startch<pos:position pos:line="65" pos:column="74"/></name></expr></argument>)<pos:position pos:line="65" pos:column="75"/></argument_list></call>
                                                      <operator pos:line="66" pos:column="55">||<pos:position pos:line="66" pos:column="57"/></operator> <call><name pos:line="66" pos:column="58">isupper<pos:position pos:line="66" pos:column="65"/></name><argument_list pos:line="66" pos:column="65">(<argument><expr><operator pos:line="66" pos:column="66">*<pos:position pos:line="66" pos:column="67"/></operator><operator pos:line="66" pos:column="67">*<pos:position pos:line="66" pos:column="68"/></operator><name pos:line="66" pos:column="68">pattern<pos:position pos:line="66" pos:column="75"/></name></expr></argument>)<pos:position pos:line="66" pos:column="76"/></argument_list></call><operator pos:line="66" pos:column="76">)<pos:position pos:line="66" pos:column="77"/></operator>
                            <operator pos:line="67" pos:column="29">&amp;&amp;<pos:position pos:line="67" pos:column="39"/></operator> <operator pos:line="67" pos:column="32">(<pos:position pos:line="67" pos:column="33"/></operator><call><name pos:line="67" pos:column="33">tolower<pos:position pos:line="67" pos:column="40"/></name><argument_list pos:line="67" pos:column="40">(<argument><expr><operator pos:line="67" pos:column="41">*<pos:position pos:line="67" pos:column="42"/></operator><operator pos:line="67" pos:column="42">*<pos:position pos:line="67" pos:column="43"/></operator><name pos:line="67" pos:column="43">string<pos:position pos:line="67" pos:column="49"/></name></expr></argument>)<pos:position pos:line="67" pos:column="50"/></argument_list></call> <operator pos:line="67" pos:column="51">&gt;=<pos:position pos:line="67" pos:column="56"/></operator> <call><name pos:line="67" pos:column="54">tolower<pos:position pos:line="67" pos:column="61"/></name><argument_list pos:line="67" pos:column="61">(<argument><expr><operator pos:line="67" pos:column="62">*<pos:position pos:line="67" pos:column="63"/></operator><name pos:line="67" pos:column="63">startch<pos:position pos:line="67" pos:column="70"/></name></expr></argument>)<pos:position pos:line="67" pos:column="71"/></argument_list></call><operator pos:line="67" pos:column="71">)<pos:position pos:line="67" pos:column="72"/></operator> 
                            <operator pos:line="68" pos:column="29">&amp;&amp;<pos:position pos:line="68" pos:column="39"/></operator> <operator pos:line="68" pos:column="32">(<pos:position pos:line="68" pos:column="33"/></operator><call><name pos:line="68" pos:column="33">tolower<pos:position pos:line="68" pos:column="40"/></name><argument_list pos:line="68" pos:column="40">(<argument><expr><operator pos:line="68" pos:column="41">*<pos:position pos:line="68" pos:column="42"/></operator><operator pos:line="68" pos:column="42">*<pos:position pos:line="68" pos:column="43"/></operator><name pos:line="68" pos:column="43">string<pos:position pos:line="68" pos:column="49"/></name></expr></argument>)<pos:position pos:line="68" pos:column="50"/></argument_list></call> <operator pos:line="68" pos:column="51">&lt;=<pos:position pos:line="68" pos:column="56"/></operator> <call><name pos:line="68" pos:column="54">tolower<pos:position pos:line="68" pos:column="61"/></name><argument_list pos:line="68" pos:column="61">(<argument><expr><operator pos:line="68" pos:column="62">*<pos:position pos:line="68" pos:column="63"/></operator><operator pos:line="68" pos:column="63">*<pos:position pos:line="68" pos:column="64"/></operator><name pos:line="68" pos:column="64">pattern<pos:position pos:line="68" pos:column="71"/></name></expr></argument>)<pos:position pos:line="68" pos:column="72"/></argument_list></call><operator pos:line="68" pos:column="72">)<pos:position pos:line="68" pos:column="73"/></operator></expr>)<pos:position pos:line="68" pos:column="74"/></condition><then pos:line="68" pos:column="74">
                    <block type="pseudo"><expr_stmt><expr><name pos:line="69" pos:column="21">result<pos:position pos:line="69" pos:column="27"/></name> <operator pos:line="69" pos:column="28">=<pos:position pos:line="69" pos:column="29"/></operator> <literal type="number" pos:line="69" pos:column="30">0<pos:position pos:line="69" pos:column="31"/></literal></expr>;<pos:position pos:line="69" pos:column="32"/></expr_stmt></block></then></if></elseif></if>

                <expr_stmt><expr><operator pos:line="71" pos:column="17">++<pos:position pos:line="71" pos:column="19"/></operator><operator pos:line="71" pos:column="19">*<pos:position pos:line="71" pos:column="20"/></operator><name pos:line="71" pos:column="20">pattern<pos:position pos:line="71" pos:column="27"/></name></expr>;<pos:position pos:line="71" pos:column="28"/></expr_stmt>
                <continue pos:line="72" pos:column="17">continue;<pos:position pos:line="72" pos:column="26"/></continue>
            }<pos:position pos:line="73" pos:column="14"/></block></then></if>

            <comment type="block" pos:line="75" pos:column="13">/* XXX: handle locale/MBCS comparison, advance by MBCS char width */</comment>
            <if pos:line="76" pos:column="13">if <condition pos:line="76" pos:column="16">(<expr><operator pos:line="76" pos:column="17">(<pos:position pos:line="76" pos:column="18"/></operator><operator pos:line="76" pos:column="18">*<pos:position pos:line="76" pos:column="19"/></operator><operator pos:line="76" pos:column="19">*<pos:position pos:line="76" pos:column="20"/></operator><name pos:line="76" pos:column="20">string<pos:position pos:line="76" pos:column="26"/></name> <operator pos:line="76" pos:column="27">==<pos:position pos:line="76" pos:column="29"/></operator> <operator pos:line="76" pos:column="30">*<pos:position pos:line="76" pos:column="31"/></operator><operator pos:line="76" pos:column="31">*<pos:position pos:line="76" pos:column="32"/></operator><name pos:line="76" pos:column="32">pattern<pos:position pos:line="76" pos:column="39"/></name><operator pos:line="76" pos:column="39">)<pos:position pos:line="76" pos:column="40"/></operator></expr>)<pos:position pos:line="76" pos:column="41"/></condition><then pos:line="76" pos:column="41">
                <block type="pseudo"><expr_stmt><expr><name pos:line="77" pos:column="17">result<pos:position pos:line="77" pos:column="23"/></name> <operator pos:line="77" pos:column="24">=<pos:position pos:line="77" pos:column="25"/></operator> <literal type="number" pos:line="77" pos:column="26">0<pos:position pos:line="77" pos:column="27"/></literal></expr>;<pos:position pos:line="77" pos:column="28"/></expr_stmt></block></then>
            <elseif pos:line="78" pos:column="13">else <if pos:line="78" pos:column="18">if <condition pos:line="78" pos:column="21">(<expr><name pos:line="78" pos:column="22">nocase<pos:position pos:line="78" pos:column="28"/></name> <operator pos:line="78" pos:column="29">&amp;&amp;<pos:position pos:line="78" pos:column="39"/></operator> <operator pos:line="78" pos:column="32">(<pos:position pos:line="78" pos:column="33"/></operator><call><name pos:line="78" pos:column="33">isupper<pos:position pos:line="78" pos:column="40"/></name><argument_list pos:line="78" pos:column="40">(<argument><expr><operator pos:line="78" pos:column="41">*<pos:position pos:line="78" pos:column="42"/></operator><operator pos:line="78" pos:column="42">*<pos:position pos:line="78" pos:column="43"/></operator><name pos:line="78" pos:column="43">string<pos:position pos:line="78" pos:column="49"/></name></expr></argument>)<pos:position pos:line="78" pos:column="50"/></argument_list></call> <operator pos:line="78" pos:column="51">||<pos:position pos:line="78" pos:column="53"/></operator> <call><name pos:line="78" pos:column="54">isupper<pos:position pos:line="78" pos:column="61"/></name><argument_list pos:line="78" pos:column="61">(<argument><expr><operator pos:line="78" pos:column="62">*<pos:position pos:line="78" pos:column="63"/></operator><operator pos:line="78" pos:column="63">*<pos:position pos:line="78" pos:column="64"/></operator><name pos:line="78" pos:column="64">pattern<pos:position pos:line="78" pos:column="71"/></name></expr></argument>)<pos:position pos:line="78" pos:column="72"/></argument_list></call><operator pos:line="78" pos:column="72">)<pos:position pos:line="78" pos:column="73"/></operator>
                            <operator pos:line="79" pos:column="29">&amp;&amp;<pos:position pos:line="79" pos:column="39"/></operator> <operator pos:line="79" pos:column="32">(<pos:position pos:line="79" pos:column="33"/></operator><call><name pos:line="79" pos:column="33">tolower<pos:position pos:line="79" pos:column="40"/></name><argument_list pos:line="79" pos:column="40">(<argument><expr><operator pos:line="79" pos:column="41">*<pos:position pos:line="79" pos:column="42"/></operator><operator pos:line="79" pos:column="42">*<pos:position pos:line="79" pos:column="43"/></operator><name pos:line="79" pos:column="43">string<pos:position pos:line="79" pos:column="49"/></name></expr></argument>)<pos:position pos:line="79" pos:column="50"/></argument_list></call> <operator pos:line="79" pos:column="51">==<pos:position pos:line="79" pos:column="53"/></operator> <call><name pos:line="79" pos:column="54">tolower<pos:position pos:line="79" pos:column="61"/></name><argument_list pos:line="79" pos:column="61">(<argument><expr><operator pos:line="79" pos:column="62">*<pos:position pos:line="79" pos:column="63"/></operator><operator pos:line="79" pos:column="63">*<pos:position pos:line="79" pos:column="64"/></operator><name pos:line="79" pos:column="64">pattern<pos:position pos:line="79" pos:column="71"/></name></expr></argument>)<pos:position pos:line="79" pos:column="72"/></argument_list></call><operator pos:line="79" pos:column="72">)<pos:position pos:line="79" pos:column="73"/></operator></expr>)<pos:position pos:line="79" pos:column="74"/></condition><then pos:line="79" pos:column="74">
                <block type="pseudo"><expr_stmt><expr><name pos:line="80" pos:column="17">result<pos:position pos:line="80" pos:column="23"/></name> <operator pos:line="80" pos:column="24">=<pos:position pos:line="80" pos:column="25"/></operator> <literal type="number" pos:line="80" pos:column="26">0<pos:position pos:line="80" pos:column="27"/></literal></expr>;<pos:position pos:line="80" pos:column="28"/></expr_stmt></block></then></if></elseif></if>

            <expr_stmt><expr><operator pos:line="82" pos:column="13">++<pos:position pos:line="82" pos:column="15"/></operator><operator pos:line="82" pos:column="15">*<pos:position pos:line="82" pos:column="16"/></operator><name pos:line="82" pos:column="16">pattern<pos:position pos:line="82" pos:column="23"/></name></expr>;<pos:position pos:line="82" pos:column="24"/></expr_stmt>
        }<pos:position pos:line="83" pos:column="10"/></block></while>

        <comment type="block" pos:line="85" pos:column="9">/* NOT a properly balanced [expr] pattern; Rewind
         * and reset result to test '[' literal
         */</comment>
        <expr_stmt><expr><operator pos:line="88" pos:column="9">*<pos:position pos:line="88" pos:column="10"/></operator><name pos:line="88" pos:column="10">pattern<pos:position pos:line="88" pos:column="17"/></name> <operator pos:line="88" pos:column="18">=<pos:position pos:line="88" pos:column="19"/></operator> <name pos:line="88" pos:column="20">mismatch<pos:position pos:line="88" pos:column="28"/></name></expr>;<pos:position pos:line="88" pos:column="29"/></expr_stmt>
        <expr_stmt><expr><name pos:line="89" pos:column="9">result<pos:position pos:line="89" pos:column="15"/></name> <operator pos:line="89" pos:column="16">=<pos:position pos:line="89" pos:column="17"/></operator> <name pos:line="89" pos:column="18">APR_FNM_NOMATCH<pos:position pos:line="89" pos:column="33"/></name></expr>;<pos:position pos:line="89" pos:column="34"/></expr_stmt>
    }<pos:position pos:line="90" pos:column="6"/></block></then>
    <elseif pos:line="91" pos:column="5">else <if pos:line="91" pos:column="10">if <condition pos:line="91" pos:column="13">(<expr><operator pos:line="91" pos:column="14">*<pos:position pos:line="91" pos:column="15"/></operator><operator pos:line="91" pos:column="15">*<pos:position pos:line="91" pos:column="16"/></operator><name pos:line="91" pos:column="16">pattern<pos:position pos:line="91" pos:column="23"/></name> <operator pos:line="91" pos:column="24">==<pos:position pos:line="91" pos:column="26"/></operator> <literal type="char" pos:line="91" pos:column="27">'?'<pos:position pos:line="91" pos:column="30"/></literal></expr>)<pos:position pos:line="91" pos:column="31"/></condition><then pos:line="91" pos:column="31"> <block pos:line="91" pos:column="32">{
        <comment type="block" pos:line="92" pos:column="9">/* Optimize '?' match before unescaping **pattern */</comment>
        <if pos:line="93" pos:column="9">if <condition pos:line="93" pos:column="12">(<expr><operator pos:line="93" pos:column="13">!<pos:position pos:line="93" pos:column="14"/></operator><operator pos:line="93" pos:column="14">*<pos:position pos:line="93" pos:column="15"/></operator><operator pos:line="93" pos:column="15">*<pos:position pos:line="93" pos:column="16"/></operator><name pos:line="93" pos:column="16">string<pos:position pos:line="93" pos:column="22"/></name> <operator pos:line="93" pos:column="23">||<pos:position pos:line="93" pos:column="25"/></operator> <operator pos:line="93" pos:column="26">(<pos:position pos:line="93" pos:column="27"/></operator><name pos:line="93" pos:column="27">slash<pos:position pos:line="93" pos:column="32"/></name> <operator pos:line="93" pos:column="33">&amp;&amp;<pos:position pos:line="93" pos:column="43"/></operator> <operator pos:line="93" pos:column="36">(<pos:position pos:line="93" pos:column="37"/></operator><operator pos:line="93" pos:column="37">*<pos:position pos:line="93" pos:column="38"/></operator><operator pos:line="93" pos:column="38">*<pos:position pos:line="93" pos:column="39"/></operator><name pos:line="93" pos:column="39">string<pos:position pos:line="93" pos:column="45"/></name> <operator pos:line="93" pos:column="46">==<pos:position pos:line="93" pos:column="48"/></operator> <literal type="char" pos:line="93" pos:column="49">'/'<pos:position pos:line="93" pos:column="52"/></literal><operator pos:line="93" pos:column="52">)<pos:position pos:line="93" pos:column="53"/></operator><operator pos:line="93" pos:column="53">)<pos:position pos:line="93" pos:column="54"/></operator></expr>)<pos:position pos:line="93" pos:column="55"/></condition><then pos:line="93" pos:column="55">
            <block type="pseudo"><return pos:line="94" pos:column="13">return <expr><name pos:line="94" pos:column="20">APR_FNM_NOMATCH<pos:position pos:line="94" pos:column="35"/></name></expr>;<pos:position pos:line="94" pos:column="36"/></return></block></then></if>
        <expr_stmt><expr><name pos:line="95" pos:column="9">result<pos:position pos:line="95" pos:column="15"/></name> <operator pos:line="95" pos:column="16">=<pos:position pos:line="95" pos:column="17"/></operator> <literal type="number" pos:line="95" pos:column="18">0<pos:position pos:line="95" pos:column="19"/></literal></expr>;<pos:position pos:line="95" pos:column="20"/></expr_stmt>
        <goto pos:line="96" pos:column="9">goto <name pos:line="96" pos:column="14">fnmatch_ch_success<pos:position pos:line="96" pos:column="32"/></name>;<pos:position pos:line="96" pos:column="33"/></goto>
    }<pos:position pos:line="97" pos:column="6"/></block></then></if></elseif>
    <elseif pos:line="98" pos:column="5">else <if pos:line="98" pos:column="10">if <condition pos:line="98" pos:column="13">(<expr><name pos:line="98" pos:column="14">escape<pos:position pos:line="98" pos:column="20"/></name> <operator pos:line="98" pos:column="21">&amp;&amp;<pos:position pos:line="98" pos:column="31"/></operator> <operator pos:line="98" pos:column="24">(<pos:position pos:line="98" pos:column="25"/></operator><operator pos:line="98" pos:column="25">*<pos:position pos:line="98" pos:column="26"/></operator><operator pos:line="98" pos:column="26">*<pos:position pos:line="98" pos:column="27"/></operator><name pos:line="98" pos:column="27">pattern<pos:position pos:line="98" pos:column="34"/></name> <operator pos:line="98" pos:column="35">==<pos:position pos:line="98" pos:column="37"/></operator> <literal type="char" pos:line="98" pos:column="38">'\\'<pos:position pos:line="98" pos:column="42"/></literal><operator pos:line="98" pos:column="42">)<pos:position pos:line="98" pos:column="43"/></operator> <operator pos:line="98" pos:column="44">&amp;&amp;<pos:position pos:line="98" pos:column="54"/></operator> <operator pos:line="98" pos:column="47">(<pos:position pos:line="98" pos:column="48"/></operator><operator pos:line="98" pos:column="48">*<pos:position pos:line="98" pos:column="49"/></operator><name pos:line="98" pos:column="49">pattern<pos:position pos:line="98" pos:column="56"/></name><operator pos:line="98" pos:column="56">)<pos:position pos:line="98" pos:column="57"/></operator><index pos:line="98" pos:column="57">[<expr><literal type="number" pos:line="98" pos:column="58">1<pos:position pos:line="98" pos:column="59"/></literal></expr>]<pos:position pos:line="98" pos:column="60"/></index></expr>)<pos:position pos:line="98" pos:column="61"/></condition><then pos:line="98" pos:column="61"> <block pos:line="98" pos:column="62">{
        <expr_stmt><expr><operator pos:line="99" pos:column="9">++<pos:position pos:line="99" pos:column="11"/></operator><operator pos:line="99" pos:column="11">*<pos:position pos:line="99" pos:column="12"/></operator><name pos:line="99" pos:column="12">pattern<pos:position pos:line="99" pos:column="19"/></name></expr>;<pos:position pos:line="99" pos:column="20"/></expr_stmt>
    }<pos:position pos:line="100" pos:column="6"/></block></then></if></elseif></if>

    <comment type="block" pos:line="102" pos:column="5">/* XXX: handle locale/MBCS comparison, advance by the MBCS char width */</comment>
    <if pos:line="103" pos:column="5">if <condition pos:line="103" pos:column="8">(<expr><operator pos:line="103" pos:column="9">*<pos:position pos:line="103" pos:column="10"/></operator><operator pos:line="103" pos:column="10">*<pos:position pos:line="103" pos:column="11"/></operator><name pos:line="103" pos:column="11">string<pos:position pos:line="103" pos:column="17"/></name> <operator pos:line="103" pos:column="18">==<pos:position pos:line="103" pos:column="20"/></operator> <operator pos:line="103" pos:column="21">*<pos:position pos:line="103" pos:column="22"/></operator><operator pos:line="103" pos:column="22">*<pos:position pos:line="103" pos:column="23"/></operator><name pos:line="103" pos:column="23">pattern<pos:position pos:line="103" pos:column="30"/></name></expr>)<pos:position pos:line="103" pos:column="31"/></condition><then pos:line="103" pos:column="31">
        <block type="pseudo"><expr_stmt><expr><name pos:line="104" pos:column="9">result<pos:position pos:line="104" pos:column="15"/></name> <operator pos:line="104" pos:column="16">=<pos:position pos:line="104" pos:column="17"/></operator> <literal type="number" pos:line="104" pos:column="18">0<pos:position pos:line="104" pos:column="19"/></literal></expr>;<pos:position pos:line="104" pos:column="20"/></expr_stmt></block></then>
    <elseif pos:line="105" pos:column="5">else <if pos:line="105" pos:column="10">if <condition pos:line="105" pos:column="13">(<expr><name pos:line="105" pos:column="14">nocase<pos:position pos:line="105" pos:column="20"/></name> <operator pos:line="105" pos:column="21">&amp;&amp;<pos:position pos:line="105" pos:column="31"/></operator> <operator pos:line="105" pos:column="24">(<pos:position pos:line="105" pos:column="25"/></operator><call><name pos:line="105" pos:column="25">isupper<pos:position pos:line="105" pos:column="32"/></name><argument_list pos:line="105" pos:column="32">(<argument><expr><operator pos:line="105" pos:column="33">*<pos:position pos:line="105" pos:column="34"/></operator><operator pos:line="105" pos:column="34">*<pos:position pos:line="105" pos:column="35"/></operator><name pos:line="105" pos:column="35">string<pos:position pos:line="105" pos:column="41"/></name></expr></argument>)<pos:position pos:line="105" pos:column="42"/></argument_list></call> <operator pos:line="105" pos:column="43">||<pos:position pos:line="105" pos:column="45"/></operator> <call><name pos:line="105" pos:column="46">isupper<pos:position pos:line="105" pos:column="53"/></name><argument_list pos:line="105" pos:column="53">(<argument><expr><operator pos:line="105" pos:column="54">*<pos:position pos:line="105" pos:column="55"/></operator><operator pos:line="105" pos:column="55">*<pos:position pos:line="105" pos:column="56"/></operator><name pos:line="105" pos:column="56">pattern<pos:position pos:line="105" pos:column="63"/></name></expr></argument>)<pos:position pos:line="105" pos:column="64"/></argument_list></call><operator pos:line="105" pos:column="64">)<pos:position pos:line="105" pos:column="65"/></operator>
                    <operator pos:line="106" pos:column="21">&amp;&amp;<pos:position pos:line="106" pos:column="31"/></operator> <operator pos:line="106" pos:column="24">(<pos:position pos:line="106" pos:column="25"/></operator><call><name pos:line="106" pos:column="25">tolower<pos:position pos:line="106" pos:column="32"/></name><argument_list pos:line="106" pos:column="32">(<argument><expr><operator pos:line="106" pos:column="33">*<pos:position pos:line="106" pos:column="34"/></operator><operator pos:line="106" pos:column="34">*<pos:position pos:line="106" pos:column="35"/></operator><name pos:line="106" pos:column="35">string<pos:position pos:line="106" pos:column="41"/></name></expr></argument>)<pos:position pos:line="106" pos:column="42"/></argument_list></call> <operator pos:line="106" pos:column="43">==<pos:position pos:line="106" pos:column="45"/></operator> <call><name pos:line="106" pos:column="46">tolower<pos:position pos:line="106" pos:column="53"/></name><argument_list pos:line="106" pos:column="53">(<argument><expr><operator pos:line="106" pos:column="54">*<pos:position pos:line="106" pos:column="55"/></operator><operator pos:line="106" pos:column="55">*<pos:position pos:line="106" pos:column="56"/></operator><name pos:line="106" pos:column="56">pattern<pos:position pos:line="106" pos:column="63"/></name></expr></argument>)<pos:position pos:line="106" pos:column="64"/></argument_list></call><operator pos:line="106" pos:column="64">)<pos:position pos:line="106" pos:column="65"/></operator></expr>)<pos:position pos:line="106" pos:column="66"/></condition><then pos:line="106" pos:column="66">
        <block type="pseudo"><expr_stmt><expr><name pos:line="107" pos:column="9">result<pos:position pos:line="107" pos:column="15"/></name> <operator pos:line="107" pos:column="16">=<pos:position pos:line="107" pos:column="17"/></operator> <literal type="number" pos:line="107" pos:column="18">0<pos:position pos:line="107" pos:column="19"/></literal></expr>;<pos:position pos:line="107" pos:column="20"/></expr_stmt></block></then></if></elseif></if>

    <comment type="block" pos:line="109" pos:column="5">/* Refuse to advance over trailing slash or nulls
     */</comment>
    <if pos:line="111" pos:column="5">if <condition pos:line="111" pos:column="8">(<expr><operator pos:line="111" pos:column="9">!<pos:position pos:line="111" pos:column="10"/></operator><operator pos:line="111" pos:column="10">*<pos:position pos:line="111" pos:column="11"/></operator><operator pos:line="111" pos:column="11">*<pos:position pos:line="111" pos:column="12"/></operator><name pos:line="111" pos:column="12">string<pos:position pos:line="111" pos:column="18"/></name> <operator pos:line="111" pos:column="19">||<pos:position pos:line="111" pos:column="21"/></operator> <operator pos:line="111" pos:column="22">!<pos:position pos:line="111" pos:column="23"/></operator><operator pos:line="111" pos:column="23">*<pos:position pos:line="111" pos:column="24"/></operator><operator pos:line="111" pos:column="24">*<pos:position pos:line="111" pos:column="25"/></operator><name pos:line="111" pos:column="25">pattern<pos:position pos:line="111" pos:column="32"/></name> <operator pos:line="111" pos:column="33">||<pos:position pos:line="111" pos:column="35"/></operator> <operator pos:line="111" pos:column="36">(<pos:position pos:line="111" pos:column="37"/></operator><name pos:line="111" pos:column="37">slash<pos:position pos:line="111" pos:column="42"/></name> <operator pos:line="111" pos:column="43">&amp;&amp;<pos:position pos:line="111" pos:column="53"/></operator> <operator pos:line="111" pos:column="46">(<pos:position pos:line="111" pos:column="47"/></operator><operator pos:line="111" pos:column="47">(<pos:position pos:line="111" pos:column="48"/></operator><operator pos:line="111" pos:column="48">*<pos:position pos:line="111" pos:column="49"/></operator><operator pos:line="111" pos:column="49">*<pos:position pos:line="111" pos:column="50"/></operator><name pos:line="111" pos:column="50">string<pos:position pos:line="111" pos:column="56"/></name> <operator pos:line="111" pos:column="57">==<pos:position pos:line="111" pos:column="59"/></operator> <literal type="char" pos:line="111" pos:column="60">'/'<pos:position pos:line="111" pos:column="63"/></literal><operator pos:line="111" pos:column="63">)<pos:position pos:line="111" pos:column="64"/></operator> <operator pos:line="111" pos:column="65">||<pos:position pos:line="111" pos:column="67"/></operator> <operator pos:line="111" pos:column="68">(<pos:position pos:line="111" pos:column="69"/></operator><operator pos:line="111" pos:column="69">*<pos:position pos:line="111" pos:column="70"/></operator><operator pos:line="111" pos:column="70">*<pos:position pos:line="111" pos:column="71"/></operator><name pos:line="111" pos:column="71">pattern<pos:position pos:line="111" pos:column="78"/></name> <operator pos:line="111" pos:column="79">==<pos:position pos:line="111" pos:column="81"/></operator> <literal type="char" pos:line="111" pos:column="82">'/'<pos:position pos:line="111" pos:column="85"/></literal><operator pos:line="111" pos:column="85">)<pos:position pos:line="111" pos:column="86"/></operator><operator pos:line="111" pos:column="86">)<pos:position pos:line="111" pos:column="87"/></operator><operator pos:line="111" pos:column="87">)<pos:position pos:line="111" pos:column="88"/></operator></expr>)<pos:position pos:line="111" pos:column="89"/></condition><then pos:line="111" pos:column="89">
        <block type="pseudo"><return pos:line="112" pos:column="9">return <expr><name pos:line="112" pos:column="16">result<pos:position pos:line="112" pos:column="22"/></name></expr>;<pos:position pos:line="112" pos:column="23"/></return></block></then></if>

<label><name pos:line="114" pos:column="1">fnmatch_ch_success<pos:position pos:line="114" pos:column="19"/></name>:<pos:position pos:line="114" pos:column="20"/></label>
    <expr_stmt><expr><operator pos:line="115" pos:column="5">++<pos:position pos:line="115" pos:column="7"/></operator><operator pos:line="115" pos:column="7">*<pos:position pos:line="115" pos:column="8"/></operator><name pos:line="115" pos:column="8">pattern<pos:position pos:line="115" pos:column="15"/></name></expr>;<pos:position pos:line="115" pos:column="16"/></expr_stmt>
    <expr_stmt><expr><operator pos:line="116" pos:column="5">++<pos:position pos:line="116" pos:column="7"/></operator><operator pos:line="116" pos:column="7">*<pos:position pos:line="116" pos:column="8"/></operator><name pos:line="116" pos:column="8">string<pos:position pos:line="116" pos:column="14"/></name></expr>;<pos:position pos:line="116" pos:column="15"/></expr_stmt>
    <return pos:line="117" pos:column="5">return <expr><name pos:line="117" pos:column="12">result<pos:position pos:line="117" pos:column="18"/></name></expr>;<pos:position pos:line="117" pos:column="19"/></return>
}<pos:position pos:line="118" pos:column="2"/></block></function></unit>

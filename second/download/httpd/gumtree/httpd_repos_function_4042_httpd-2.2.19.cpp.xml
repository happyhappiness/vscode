<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/httpd/gumtree/httpd_repos_function_4042_httpd-2.2.19.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">int<pos:position pos:line="1" pos:column="11"/></name></type>
<name pos:line="2" pos:column="1">match<pos:position pos:line="2" pos:column="6"/></name><parameter_list pos:line="2" pos:column="6">(<parameter><decl><type><name pos:line="2" pos:column="7">REGISTER<pos:position pos:line="2" pos:column="15"/></name> <specifier pos:line="2" pos:column="16">const<pos:position pos:line="2" pos:column="21"/></specifier> <name pos:line="2" pos:column="22">uschar<pos:position pos:line="2" pos:column="28"/></name> <modifier pos:line="2" pos:column="29">*<pos:position pos:line="2" pos:column="30"/></modifier></type><name pos:line="2" pos:column="30">eptr<pos:position pos:line="2" pos:column="34"/></name></decl></parameter>, <parameter><decl><type><name pos:line="2" pos:column="36">REGISTER<pos:position pos:line="2" pos:column="44"/></name> <specifier pos:line="2" pos:column="45">const<pos:position pos:line="2" pos:column="50"/></specifier> <name pos:line="2" pos:column="51">uschar<pos:position pos:line="2" pos:column="57"/></name> <modifier pos:line="2" pos:column="58">*<pos:position pos:line="2" pos:column="59"/></modifier></type><name pos:line="2" pos:column="59">ecode<pos:position pos:line="2" pos:column="64"/></name></decl></parameter>,
  <parameter><decl><type><name pos:line="3" pos:column="3">int<pos:position pos:line="3" pos:column="6"/></name></type> <name pos:line="3" pos:column="7">offset_top<pos:position pos:line="3" pos:column="17"/></name></decl></parameter>, <parameter><decl><type><name pos:line="3" pos:column="19">match_data<pos:position pos:line="3" pos:column="29"/></name> <modifier pos:line="3" pos:column="30">*<pos:position pos:line="3" pos:column="31"/></modifier></type><name pos:line="3" pos:column="31">md<pos:position pos:line="3" pos:column="33"/></name></decl></parameter>, <parameter><decl><type><name pos:line="3" pos:column="35">unsigned<pos:position pos:line="3" pos:column="43"/></name> <name pos:line="3" pos:column="44">long<pos:position pos:line="3" pos:column="48"/></name> <name pos:line="3" pos:column="49">int<pos:position pos:line="3" pos:column="52"/></name></type> <name pos:line="3" pos:column="53">ims<pos:position pos:line="3" pos:column="56"/></name></decl></parameter>, <parameter><decl><type><name pos:line="3" pos:column="58">eptrblock<pos:position pos:line="3" pos:column="67"/></name> <modifier pos:line="3" pos:column="68">*<pos:position pos:line="3" pos:column="69"/></modifier></type><name pos:line="3" pos:column="69">eptrb<pos:position pos:line="3" pos:column="74"/></name></decl></parameter>,
  <parameter><decl><type><name pos:line="4" pos:column="3">int<pos:position pos:line="4" pos:column="6"/></name></type> <name pos:line="4" pos:column="7">flags<pos:position pos:line="4" pos:column="12"/></name></decl></parameter>)<pos:position pos:line="4" pos:column="13"/></parameter_list>
<block pos:line="5" pos:column="1">{
<comment type="block" pos:line="6" pos:column="1">/* These variables do not need to be preserved over recursion in this function,
so they can be ordinary variables in all cases. Mark them with "register"
because they are used a lot in loops. */</comment>

<decl_stmt><decl><type><specifier pos:line="10" pos:column="1">register<pos:position pos:line="10" pos:column="9"/></specifier> <name pos:line="10" pos:column="10">int<pos:position pos:line="10" pos:column="13"/></name></type> <name pos:line="10" pos:column="14">rrc<pos:position pos:line="10" pos:column="17"/></name></decl>;<pos:position pos:line="10" pos:column="18"/></decl_stmt>    <comment type="block" pos:line="10" pos:column="22">/* Returns from recursive calls */</comment>
<decl_stmt><decl><type><specifier pos:line="11" pos:column="1">register<pos:position pos:line="11" pos:column="9"/></specifier> <name pos:line="11" pos:column="10">int<pos:position pos:line="11" pos:column="13"/></name></type> <name pos:line="11" pos:column="14">i<pos:position pos:line="11" pos:column="15"/></name></decl>;<pos:position pos:line="11" pos:column="16"/></decl_stmt>      <comment type="block" pos:line="11" pos:column="22">/* Used for loops not involving calls to RMATCH() */</comment>
<decl_stmt><decl><type><specifier pos:line="12" pos:column="1">register<pos:position pos:line="12" pos:column="9"/></specifier> <name pos:line="12" pos:column="10">int<pos:position pos:line="12" pos:column="13"/></name></type> <name pos:line="12" pos:column="14">c<pos:position pos:line="12" pos:column="15"/></name></decl>;<pos:position pos:line="12" pos:column="16"/></decl_stmt>      <comment type="block" pos:line="12" pos:column="22">/* Character values not kept over RMATCH() calls */</comment>

<comment type="block" pos:line="14" pos:column="1">/* When recursion is not being used, all "local" variables that have to be
preserved over calls to RMATCH() are part of a "frame" which is obtained from
heap storage. Set up the top-level frame here; others are obtained from the
heap whenever RMATCH() does a "recursion". See the macro definitions above. */</comment>

<cpp:ifdef pos:line="19" pos:column="1">#<cpp:directive pos:line="19" pos:column="2">ifdef<pos:position pos:line="19" pos:column="7"/></cpp:directive> <name pos:line="19" pos:column="8">NO_RECURSE<pos:position pos:line="19" pos:column="18"/></name></cpp:ifdef>
<decl_stmt><decl><type><name pos:line="20" pos:column="1">heapframe<pos:position pos:line="20" pos:column="10"/></name> <modifier pos:line="20" pos:column="11">*<pos:position pos:line="20" pos:column="12"/></modifier></type><name pos:line="20" pos:column="12">frame<pos:position pos:line="20" pos:column="17"/></name> <init pos:line="20" pos:column="18">= <expr><call pos:line="20" pos:column="20">(<name pos:line="20" pos:column="21">pcre_stack_malloc<pos:position pos:line="20" pos:column="38"/></name>)<argument_list pos:line="20" pos:column="39">(<argument><expr><sizeof pos:line="20" pos:column="40">sizeof<argument_list pos:line="20" pos:column="46">(<argument><expr><name pos:line="20" pos:column="47">heapframe<pos:position pos:line="20" pos:column="56"/></name></expr></argument>)<pos:position pos:line="20" pos:column="57"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="20" pos:column="58"/></argument_list></call></expr></init></decl>;<pos:position pos:line="20" pos:column="59"/></decl_stmt>
<expr_stmt><expr><name><name pos:line="21" pos:column="1">frame<pos:position pos:line="21" pos:column="6"/></name><operator pos:line="21" pos:column="6">-&gt;<pos:position pos:line="21" pos:column="11"/></operator><name pos:line="21" pos:column="8">Xprevframe<pos:position pos:line="21" pos:column="18"/></name></name> <operator pos:line="21" pos:column="19">=<pos:position pos:line="21" pos:column="20"/></operator> <name pos:line="21" pos:column="21">NULL<pos:position pos:line="21" pos:column="25"/></name></expr>;<pos:position pos:line="21" pos:column="26"/></expr_stmt>            <comment type="block" pos:line="21" pos:column="38">/* Marks the top level */</comment>

<comment type="block" pos:line="23" pos:column="1">/* Copy in the original argument variables */</comment>

<expr_stmt><expr><name><name pos:line="25" pos:column="1">frame<pos:position pos:line="25" pos:column="6"/></name><operator pos:line="25" pos:column="6">-&gt;<pos:position pos:line="25" pos:column="11"/></operator><name pos:line="25" pos:column="8">Xeptr<pos:position pos:line="25" pos:column="13"/></name></name> <operator pos:line="25" pos:column="14">=<pos:position pos:line="25" pos:column="15"/></operator> <name pos:line="25" pos:column="16">eptr<pos:position pos:line="25" pos:column="20"/></name></expr>;<pos:position pos:line="25" pos:column="21"/></expr_stmt>
<expr_stmt><expr><name><name pos:line="26" pos:column="1">frame<pos:position pos:line="26" pos:column="6"/></name><operator pos:line="26" pos:column="6">-&gt;<pos:position pos:line="26" pos:column="11"/></operator><name pos:line="26" pos:column="8">Xecode<pos:position pos:line="26" pos:column="14"/></name></name> <operator pos:line="26" pos:column="15">=<pos:position pos:line="26" pos:column="16"/></operator> <name pos:line="26" pos:column="17">ecode<pos:position pos:line="26" pos:column="22"/></name></expr>;<pos:position pos:line="26" pos:column="23"/></expr_stmt>
<expr_stmt><expr><name><name pos:line="27" pos:column="1">frame<pos:position pos:line="27" pos:column="6"/></name><operator pos:line="27" pos:column="6">-&gt;<pos:position pos:line="27" pos:column="11"/></operator><name pos:line="27" pos:column="8">Xoffset_top<pos:position pos:line="27" pos:column="19"/></name></name> <operator pos:line="27" pos:column="20">=<pos:position pos:line="27" pos:column="21"/></operator> <name pos:line="27" pos:column="22">offset_top<pos:position pos:line="27" pos:column="32"/></name></expr>;<pos:position pos:line="27" pos:column="33"/></expr_stmt>
<expr_stmt><expr><name><name pos:line="28" pos:column="1">frame<pos:position pos:line="28" pos:column="6"/></name><operator pos:line="28" pos:column="6">-&gt;<pos:position pos:line="28" pos:column="11"/></operator><name pos:line="28" pos:column="8">Xims<pos:position pos:line="28" pos:column="12"/></name></name> <operator pos:line="28" pos:column="13">=<pos:position pos:line="28" pos:column="14"/></operator> <name pos:line="28" pos:column="15">ims<pos:position pos:line="28" pos:column="18"/></name></expr>;<pos:position pos:line="28" pos:column="19"/></expr_stmt>
<expr_stmt><expr><name><name pos:line="29" pos:column="1">frame<pos:position pos:line="29" pos:column="6"/></name><operator pos:line="29" pos:column="6">-&gt;<pos:position pos:line="29" pos:column="11"/></operator><name pos:line="29" pos:column="8">Xeptrb<pos:position pos:line="29" pos:column="14"/></name></name> <operator pos:line="29" pos:column="15">=<pos:position pos:line="29" pos:column="16"/></operator> <name pos:line="29" pos:column="17">eptrb<pos:position pos:line="29" pos:column="22"/></name></expr>;<pos:position pos:line="29" pos:column="23"/></expr_stmt>
<expr_stmt><expr><name><name pos:line="30" pos:column="1">frame<pos:position pos:line="30" pos:column="6"/></name><operator pos:line="30" pos:column="6">-&gt;<pos:position pos:line="30" pos:column="11"/></operator><name pos:line="30" pos:column="8">Xflags<pos:position pos:line="30" pos:column="14"/></name></name> <operator pos:line="30" pos:column="15">=<pos:position pos:line="30" pos:column="16"/></operator> <name pos:line="30" pos:column="17">flags<pos:position pos:line="30" pos:column="22"/></name></expr>;<pos:position pos:line="30" pos:column="23"/></expr_stmt>

<comment type="block" pos:line="32" pos:column="1">/* This is where control jumps back to to effect "recursion" */</comment>

<label><name pos:line="34" pos:column="1">HEAP_RECURSE<pos:position pos:line="34" pos:column="13"/></name>:<pos:position pos:line="34" pos:column="14"/></label>

<comment type="block" pos:line="36" pos:column="1">/* Macros make the argument variables come from the current frame */</comment>

<cpp:define pos:line="38" pos:column="1">#<cpp:directive pos:line="38" pos:column="2">define<pos:position pos:line="38" pos:column="8"/></cpp:directive> <cpp:macro><name pos:line="38" pos:column="9">eptr<pos:position pos:line="38" pos:column="13"/></name></cpp:macro>               <cpp:value pos:line="38" pos:column="28">frame-&gt;Xeptr<pos:position pos:line="38" pos:column="40"/></cpp:value></cpp:define>
<cpp:define pos:line="39" pos:column="1">#<cpp:directive pos:line="39" pos:column="2">define<pos:position pos:line="39" pos:column="8"/></cpp:directive> <cpp:macro><name pos:line="39" pos:column="9">ecode<pos:position pos:line="39" pos:column="14"/></name></cpp:macro>              <cpp:value pos:line="39" pos:column="28">frame-&gt;Xecode<pos:position pos:line="39" pos:column="41"/></cpp:value></cpp:define>
<cpp:define pos:line="40" pos:column="1">#<cpp:directive pos:line="40" pos:column="2">define<pos:position pos:line="40" pos:column="8"/></cpp:directive> <cpp:macro><name pos:line="40" pos:column="9">offset_top<pos:position pos:line="40" pos:column="19"/></name></cpp:macro>         <cpp:value pos:line="40" pos:column="28">frame-&gt;Xoffset_top<pos:position pos:line="40" pos:column="46"/></cpp:value></cpp:define>
<cpp:define pos:line="41" pos:column="1">#<cpp:directive pos:line="41" pos:column="2">define<pos:position pos:line="41" pos:column="8"/></cpp:directive> <cpp:macro><name pos:line="41" pos:column="9">ims<pos:position pos:line="41" pos:column="12"/></name></cpp:macro>                <cpp:value pos:line="41" pos:column="28">frame-&gt;Xims<pos:position pos:line="41" pos:column="39"/></cpp:value></cpp:define>
<cpp:define pos:line="42" pos:column="1">#<cpp:directive pos:line="42" pos:column="2">define<pos:position pos:line="42" pos:column="8"/></cpp:directive> <cpp:macro><name pos:line="42" pos:column="9">eptrb<pos:position pos:line="42" pos:column="14"/></name></cpp:macro>              <cpp:value pos:line="42" pos:column="28">frame-&gt;Xeptrb<pos:position pos:line="42" pos:column="41"/></cpp:value></cpp:define>
<cpp:define pos:line="43" pos:column="1">#<cpp:directive pos:line="43" pos:column="2">define<pos:position pos:line="43" pos:column="8"/></cpp:directive> <cpp:macro><name pos:line="43" pos:column="9">flags<pos:position pos:line="43" pos:column="14"/></name></cpp:macro>              <cpp:value pos:line="43" pos:column="28">frame-&gt;Xflags<pos:position pos:line="43" pos:column="41"/></cpp:value></cpp:define>

<comment type="block" pos:line="45" pos:column="1">/* Ditto for the local variables */</comment>

<cpp:ifdef pos:line="47" pos:column="1">#<cpp:directive pos:line="47" pos:column="2">ifdef<pos:position pos:line="47" pos:column="7"/></cpp:directive> <name pos:line="47" pos:column="8">SUPPORT_UTF8<pos:position pos:line="47" pos:column="20"/></name></cpp:ifdef>
<cpp:define pos:line="48" pos:column="1">#<cpp:directive pos:line="48" pos:column="2">define<pos:position pos:line="48" pos:column="8"/></cpp:directive> <cpp:macro><name pos:line="48" pos:column="9">charptr<pos:position pos:line="48" pos:column="16"/></name></cpp:macro>            <cpp:value pos:line="48" pos:column="28">frame-&gt;Xcharptr<pos:position pos:line="48" pos:column="43"/></cpp:value></cpp:define>
<cpp:endif pos:line="49" pos:column="1">#<cpp:directive pos:line="49" pos:column="2">endif<pos:position pos:line="49" pos:column="7"/></cpp:directive></cpp:endif>
<cpp:define pos:line="50" pos:column="1">#<cpp:directive pos:line="50" pos:column="2">define<pos:position pos:line="50" pos:column="8"/></cpp:directive> <cpp:macro><name pos:line="50" pos:column="9">callpat<pos:position pos:line="50" pos:column="16"/></name></cpp:macro>            <cpp:value pos:line="50" pos:column="28">frame-&gt;Xcallpat<pos:position pos:line="50" pos:column="43"/></cpp:value></cpp:define>
<cpp:define pos:line="51" pos:column="1">#<cpp:directive pos:line="51" pos:column="2">define<pos:position pos:line="51" pos:column="8"/></cpp:directive> <cpp:macro><name pos:line="51" pos:column="9">data<pos:position pos:line="51" pos:column="13"/></name></cpp:macro>               <cpp:value pos:line="51" pos:column="28">frame-&gt;Xdata<pos:position pos:line="51" pos:column="40"/></cpp:value></cpp:define>
<cpp:define pos:line="52" pos:column="1">#<cpp:directive pos:line="52" pos:column="2">define<pos:position pos:line="52" pos:column="8"/></cpp:directive> <cpp:macro><name pos:line="52" pos:column="9">next<pos:position pos:line="52" pos:column="13"/></name></cpp:macro>               <cpp:value pos:line="52" pos:column="28">frame-&gt;Xnext<pos:position pos:line="52" pos:column="40"/></cpp:value></cpp:define>
<cpp:define pos:line="53" pos:column="1">#<cpp:directive pos:line="53" pos:column="2">define<pos:position pos:line="53" pos:column="8"/></cpp:directive> <cpp:macro><name pos:line="53" pos:column="9">pp<pos:position pos:line="53" pos:column="11"/></name></cpp:macro>                 <cpp:value pos:line="53" pos:column="28">frame-&gt;Xpp<pos:position pos:line="53" pos:column="38"/></cpp:value></cpp:define>
<cpp:define pos:line="54" pos:column="1">#<cpp:directive pos:line="54" pos:column="2">define<pos:position pos:line="54" pos:column="8"/></cpp:directive> <cpp:macro><name pos:line="54" pos:column="9">prev<pos:position pos:line="54" pos:column="13"/></name></cpp:macro>               <cpp:value pos:line="54" pos:column="28">frame-&gt;Xprev<pos:position pos:line="54" pos:column="40"/></cpp:value></cpp:define>
<cpp:define pos:line="55" pos:column="1">#<cpp:directive pos:line="55" pos:column="2">define<pos:position pos:line="55" pos:column="8"/></cpp:directive> <cpp:macro><name pos:line="55" pos:column="9">saved_eptr<pos:position pos:line="55" pos:column="19"/></name></cpp:macro>         <cpp:value pos:line="55" pos:column="28">frame-&gt;Xsaved_eptr<pos:position pos:line="55" pos:column="46"/></cpp:value></cpp:define>

<cpp:define pos:line="57" pos:column="1">#<cpp:directive pos:line="57" pos:column="2">define<pos:position pos:line="57" pos:column="8"/></cpp:directive> <cpp:macro><name pos:line="57" pos:column="9">new_recursive<pos:position pos:line="57" pos:column="22"/></name></cpp:macro>      <cpp:value pos:line="57" pos:column="28">frame-&gt;Xnew_recursive<pos:position pos:line="57" pos:column="49"/></cpp:value></cpp:define>

<cpp:define pos:line="59" pos:column="1">#<cpp:directive pos:line="59" pos:column="2">define<pos:position pos:line="59" pos:column="8"/></cpp:directive> <cpp:macro><name pos:line="59" pos:column="9">cur_is_word<pos:position pos:line="59" pos:column="20"/></name></cpp:macro>        <cpp:value pos:line="59" pos:column="28">frame-&gt;Xcur_is_word<pos:position pos:line="59" pos:column="47"/></cpp:value></cpp:define>
<cpp:define pos:line="60" pos:column="1">#<cpp:directive pos:line="60" pos:column="2">define<pos:position pos:line="60" pos:column="8"/></cpp:directive> <cpp:macro><name pos:line="60" pos:column="9">condition<pos:position pos:line="60" pos:column="18"/></name></cpp:macro>          <cpp:value pos:line="60" pos:column="28">frame-&gt;Xcondition<pos:position pos:line="60" pos:column="45"/></cpp:value></cpp:define>
<cpp:define pos:line="61" pos:column="1">#<cpp:directive pos:line="61" pos:column="2">define<pos:position pos:line="61" pos:column="8"/></cpp:directive> <cpp:macro><name pos:line="61" pos:column="9">minimize<pos:position pos:line="61" pos:column="17"/></name></cpp:macro>           <cpp:value pos:line="61" pos:column="28">frame-&gt;Xminimize<pos:position pos:line="61" pos:column="44"/></cpp:value></cpp:define>
<cpp:define pos:line="62" pos:column="1">#<cpp:directive pos:line="62" pos:column="2">define<pos:position pos:line="62" pos:column="8"/></cpp:directive> <cpp:macro><name pos:line="62" pos:column="9">prev_is_word<pos:position pos:line="62" pos:column="21"/></name></cpp:macro>       <cpp:value pos:line="62" pos:column="28">frame-&gt;Xprev_is_word<pos:position pos:line="62" pos:column="48"/></cpp:value></cpp:define>

<cpp:define pos:line="64" pos:column="1">#<cpp:directive pos:line="64" pos:column="2">define<pos:position pos:line="64" pos:column="8"/></cpp:directive> <cpp:macro><name pos:line="64" pos:column="9">original_ims<pos:position pos:line="64" pos:column="21"/></name></cpp:macro>       <cpp:value pos:line="64" pos:column="28">frame-&gt;Xoriginal_ims<pos:position pos:line="64" pos:column="48"/></cpp:value></cpp:define>

<cpp:ifdef pos:line="66" pos:column="1">#<cpp:directive pos:line="66" pos:column="2">ifdef<pos:position pos:line="66" pos:column="7"/></cpp:directive> <name pos:line="66" pos:column="8">SUPPORT_UCP<pos:position pos:line="66" pos:column="19"/></name></cpp:ifdef>
<cpp:define pos:line="67" pos:column="1">#<cpp:directive pos:line="67" pos:column="2">define<pos:position pos:line="67" pos:column="8"/></cpp:directive> <cpp:macro><name pos:line="67" pos:column="9">prop_type<pos:position pos:line="67" pos:column="18"/></name></cpp:macro>          <cpp:value pos:line="67" pos:column="28">frame-&gt;Xprop_type<pos:position pos:line="67" pos:column="45"/></cpp:value></cpp:define>
<cpp:define pos:line="68" pos:column="1">#<cpp:directive pos:line="68" pos:column="2">define<pos:position pos:line="68" pos:column="8"/></cpp:directive> <cpp:macro><name pos:line="68" pos:column="9">prop_fail_result<pos:position pos:line="68" pos:column="25"/></name></cpp:macro>   <cpp:value pos:line="68" pos:column="28">frame-&gt;Xprop_fail_result<pos:position pos:line="68" pos:column="52"/></cpp:value></cpp:define>
<cpp:define pos:line="69" pos:column="1">#<cpp:directive pos:line="69" pos:column="2">define<pos:position pos:line="69" pos:column="8"/></cpp:directive> <cpp:macro><name pos:line="69" pos:column="9">prop_category<pos:position pos:line="69" pos:column="22"/></name></cpp:macro>      <cpp:value pos:line="69" pos:column="28">frame-&gt;Xprop_category<pos:position pos:line="69" pos:column="49"/></cpp:value></cpp:define>
<cpp:define pos:line="70" pos:column="1">#<cpp:directive pos:line="70" pos:column="2">define<pos:position pos:line="70" pos:column="8"/></cpp:directive> <cpp:macro><name pos:line="70" pos:column="9">prop_chartype<pos:position pos:line="70" pos:column="22"/></name></cpp:macro>      <cpp:value pos:line="70" pos:column="28">frame-&gt;Xprop_chartype<pos:position pos:line="70" pos:column="49"/></cpp:value></cpp:define>
<cpp:define pos:line="71" pos:column="1">#<cpp:directive pos:line="71" pos:column="2">define<pos:position pos:line="71" pos:column="8"/></cpp:directive> <cpp:macro><name pos:line="71" pos:column="9">prop_othercase<pos:position pos:line="71" pos:column="23"/></name></cpp:macro>     <cpp:value pos:line="71" pos:column="28">frame-&gt;Xprop_othercase<pos:position pos:line="71" pos:column="50"/></cpp:value></cpp:define>
<cpp:define pos:line="72" pos:column="1">#<cpp:directive pos:line="72" pos:column="2">define<pos:position pos:line="72" pos:column="8"/></cpp:directive> <cpp:macro><name pos:line="72" pos:column="9">prop_test_against<pos:position pos:line="72" pos:column="26"/></name></cpp:macro>  <cpp:value pos:line="72" pos:column="28">frame-&gt;Xprop_test_against<pos:position pos:line="72" pos:column="53"/></cpp:value></cpp:define>
<cpp:define pos:line="73" pos:column="1">#<cpp:directive pos:line="73" pos:column="2">define<pos:position pos:line="73" pos:column="8"/></cpp:directive> <cpp:macro><name pos:line="73" pos:column="9">prop_test_variable<pos:position pos:line="73" pos:column="27"/></name></cpp:macro> <cpp:value pos:line="73" pos:column="28">frame-&gt;Xprop_test_variable<pos:position pos:line="73" pos:column="54"/></cpp:value></cpp:define>
<cpp:endif pos:line="74" pos:column="1">#<cpp:directive pos:line="74" pos:column="2">endif<pos:position pos:line="74" pos:column="7"/></cpp:directive></cpp:endif>

<cpp:define pos:line="76" pos:column="1">#<cpp:directive pos:line="76" pos:column="2">define<pos:position pos:line="76" pos:column="8"/></cpp:directive> <cpp:macro><name pos:line="76" pos:column="9">ctype<pos:position pos:line="76" pos:column="14"/></name></cpp:macro>              <cpp:value pos:line="76" pos:column="28">frame-&gt;Xctype<pos:position pos:line="76" pos:column="41"/></cpp:value></cpp:define>
<cpp:define pos:line="77" pos:column="1">#<cpp:directive pos:line="77" pos:column="2">define<pos:position pos:line="77" pos:column="8"/></cpp:directive> <cpp:macro><name pos:line="77" pos:column="9">fc<pos:position pos:line="77" pos:column="11"/></name></cpp:macro>                 <cpp:value pos:line="77" pos:column="28">frame-&gt;Xfc<pos:position pos:line="77" pos:column="38"/></cpp:value></cpp:define>
<cpp:define pos:line="78" pos:column="1">#<cpp:directive pos:line="78" pos:column="2">define<pos:position pos:line="78" pos:column="8"/></cpp:directive> <cpp:macro><name pos:line="78" pos:column="9">fi<pos:position pos:line="78" pos:column="11"/></name></cpp:macro>                 <cpp:value pos:line="78" pos:column="28">frame-&gt;Xfi<pos:position pos:line="78" pos:column="38"/></cpp:value></cpp:define>
<cpp:define pos:line="79" pos:column="1">#<cpp:directive pos:line="79" pos:column="2">define<pos:position pos:line="79" pos:column="8"/></cpp:directive> <cpp:macro><name pos:line="79" pos:column="9">length<pos:position pos:line="79" pos:column="15"/></name></cpp:macro>             <cpp:value pos:line="79" pos:column="28">frame-&gt;Xlength<pos:position pos:line="79" pos:column="42"/></cpp:value></cpp:define>
<cpp:define pos:line="80" pos:column="1">#<cpp:directive pos:line="80" pos:column="2">define<pos:position pos:line="80" pos:column="8"/></cpp:directive> <cpp:macro><name pos:line="80" pos:column="9">max<pos:position pos:line="80" pos:column="12"/></name></cpp:macro>                <cpp:value pos:line="80" pos:column="28">frame-&gt;Xmax<pos:position pos:line="80" pos:column="39"/></cpp:value></cpp:define>
<cpp:define pos:line="81" pos:column="1">#<cpp:directive pos:line="81" pos:column="2">define<pos:position pos:line="81" pos:column="8"/></cpp:directive> <cpp:macro><name pos:line="81" pos:column="9">min<pos:position pos:line="81" pos:column="12"/></name></cpp:macro>                <cpp:value pos:line="81" pos:column="28">frame-&gt;Xmin<pos:position pos:line="81" pos:column="39"/></cpp:value></cpp:define>
<cpp:define pos:line="82" pos:column="1">#<cpp:directive pos:line="82" pos:column="2">define<pos:position pos:line="82" pos:column="8"/></cpp:directive> <cpp:macro><name pos:line="82" pos:column="9">number<pos:position pos:line="82" pos:column="15"/></name></cpp:macro>             <cpp:value pos:line="82" pos:column="28">frame-&gt;Xnumber<pos:position pos:line="82" pos:column="42"/></cpp:value></cpp:define>
<cpp:define pos:line="83" pos:column="1">#<cpp:directive pos:line="83" pos:column="2">define<pos:position pos:line="83" pos:column="8"/></cpp:directive> <cpp:macro><name pos:line="83" pos:column="9">offset<pos:position pos:line="83" pos:column="15"/></name></cpp:macro>             <cpp:value pos:line="83" pos:column="28">frame-&gt;Xoffset<pos:position pos:line="83" pos:column="42"/></cpp:value></cpp:define>
<cpp:define pos:line="84" pos:column="1">#<cpp:directive pos:line="84" pos:column="2">define<pos:position pos:line="84" pos:column="8"/></cpp:directive> <cpp:macro><name pos:line="84" pos:column="9">op<pos:position pos:line="84" pos:column="11"/></name></cpp:macro>                 <cpp:value pos:line="84" pos:column="28">frame-&gt;Xop<pos:position pos:line="84" pos:column="38"/></cpp:value></cpp:define>
<cpp:define pos:line="85" pos:column="1">#<cpp:directive pos:line="85" pos:column="2">define<pos:position pos:line="85" pos:column="8"/></cpp:directive> <cpp:macro><name pos:line="85" pos:column="9">save_capture_last<pos:position pos:line="85" pos:column="26"/></name></cpp:macro>  <cpp:value pos:line="85" pos:column="28">frame-&gt;Xsave_capture_last<pos:position pos:line="85" pos:column="53"/></cpp:value></cpp:define>
<cpp:define pos:line="86" pos:column="1">#<cpp:directive pos:line="86" pos:column="2">define<pos:position pos:line="86" pos:column="8"/></cpp:directive> <cpp:macro><name pos:line="86" pos:column="9">save_offset1<pos:position pos:line="86" pos:column="21"/></name></cpp:macro>       <cpp:value pos:line="86" pos:column="28">frame-&gt;Xsave_offset1<pos:position pos:line="86" pos:column="48"/></cpp:value></cpp:define>
<cpp:define pos:line="87" pos:column="1">#<cpp:directive pos:line="87" pos:column="2">define<pos:position pos:line="87" pos:column="8"/></cpp:directive> <cpp:macro><name pos:line="87" pos:column="9">save_offset2<pos:position pos:line="87" pos:column="21"/></name></cpp:macro>       <cpp:value pos:line="87" pos:column="28">frame-&gt;Xsave_offset2<pos:position pos:line="87" pos:column="48"/></cpp:value></cpp:define>
<cpp:define pos:line="88" pos:column="1">#<cpp:directive pos:line="88" pos:column="2">define<pos:position pos:line="88" pos:column="8"/></cpp:directive> <cpp:macro><name pos:line="88" pos:column="9">save_offset3<pos:position pos:line="88" pos:column="21"/></name></cpp:macro>       <cpp:value pos:line="88" pos:column="28">frame-&gt;Xsave_offset3<pos:position pos:line="88" pos:column="48"/></cpp:value></cpp:define>
<cpp:define pos:line="89" pos:column="1">#<cpp:directive pos:line="89" pos:column="2">define<pos:position pos:line="89" pos:column="8"/></cpp:directive> <cpp:macro><name pos:line="89" pos:column="9">stacksave<pos:position pos:line="89" pos:column="18"/></name></cpp:macro>          <cpp:value pos:line="89" pos:column="28">frame-&gt;Xstacksave<pos:position pos:line="89" pos:column="45"/></cpp:value></cpp:define>

<cpp:define pos:line="91" pos:column="1">#<cpp:directive pos:line="91" pos:column="2">define<pos:position pos:line="91" pos:column="8"/></cpp:directive> <cpp:macro><name pos:line="91" pos:column="9">newptrb<pos:position pos:line="91" pos:column="16"/></name></cpp:macro>            <cpp:value pos:line="91" pos:column="28">frame-&gt;Xnewptrb<pos:position pos:line="91" pos:column="43"/></cpp:value></cpp:define>

<comment type="block" pos:line="93" pos:column="1">/* When recursion is being used, local variables are allocated on the stack and
get preserved during recursion in the normal way. In this environment, fi and
i, and fc and c, can be the same variables. */</comment>

<cpp:else pos:line="97" pos:column="1">#<cpp:directive pos:line="97" pos:column="2">else<pos:position pos:line="97" pos:column="6"/></cpp:directive></cpp:else>
<cpp:define pos:line="98" pos:column="1">#<cpp:directive pos:line="98" pos:column="2">define<pos:position pos:line="98" pos:column="8"/></cpp:directive> <cpp:macro><name pos:line="98" pos:column="9">fi<pos:position pos:line="98" pos:column="11"/></name></cpp:macro> <cpp:value pos:line="98" pos:column="12">i<pos:position pos:line="98" pos:column="13"/></cpp:value></cpp:define>
<cpp:define pos:line="99" pos:column="1">#<cpp:directive pos:line="99" pos:column="2">define<pos:position pos:line="99" pos:column="8"/></cpp:directive> <cpp:macro><name pos:line="99" pos:column="9">fc<pos:position pos:line="99" pos:column="11"/></name></cpp:macro> <cpp:value pos:line="99" pos:column="12">c<pos:position pos:line="99" pos:column="13"/></cpp:value></cpp:define>


<cpp:ifdef pos:line="102" pos:column="1">#<cpp:directive pos:line="102" pos:column="2">ifdef<pos:position pos:line="102" pos:column="7"/></cpp:directive> <name pos:line="102" pos:column="8">SUPPORT_UTF8<pos:position pos:line="102" pos:column="20"/></name></cpp:ifdef>                <comment type="block" pos:line="102" pos:column="36">/* Many of these variables are used ony */</comment>
<decl_stmt><decl><type><specifier pos:line="103" pos:column="1">const<pos:position pos:line="103" pos:column="6"/></specifier> <name pos:line="103" pos:column="7">uschar<pos:position pos:line="103" pos:column="13"/></name> <modifier pos:line="103" pos:column="14">*<pos:position pos:line="103" pos:column="15"/></modifier></type><name pos:line="103" pos:column="15">charptr<pos:position pos:line="103" pos:column="22"/></name></decl>;<pos:position pos:line="103" pos:column="23"/></decl_stmt>             <comment type="block" pos:line="103" pos:column="36">/* small blocks of the code. My normal  */</comment>
<cpp:endif pos:line="104" pos:column="1">#<cpp:directive pos:line="104" pos:column="2">endif<pos:position pos:line="104" pos:column="7"/></cpp:directive></cpp:endif>                             <comment type="block" pos:line="104" pos:column="36">/* style of coding would have declared  */</comment>
<decl_stmt><decl><type><specifier pos:line="105" pos:column="1">const<pos:position pos:line="105" pos:column="6"/></specifier> <name pos:line="105" pos:column="7">uschar<pos:position pos:line="105" pos:column="13"/></name> <modifier pos:line="105" pos:column="14">*<pos:position pos:line="105" pos:column="15"/></modifier></type><name pos:line="105" pos:column="15">callpat<pos:position pos:line="105" pos:column="22"/></name></decl>;<pos:position pos:line="105" pos:column="23"/></decl_stmt>             <comment type="block" pos:line="105" pos:column="36">/* them within each of those blocks.    */</comment>
<decl_stmt><decl><type><specifier pos:line="106" pos:column="1">const<pos:position pos:line="106" pos:column="6"/></specifier> <name pos:line="106" pos:column="7">uschar<pos:position pos:line="106" pos:column="13"/></name> <modifier pos:line="106" pos:column="14">*<pos:position pos:line="106" pos:column="15"/></modifier></type><name pos:line="106" pos:column="15">data<pos:position pos:line="106" pos:column="19"/></name></decl>;<pos:position pos:line="106" pos:column="20"/></decl_stmt>                <comment type="block" pos:line="106" pos:column="36">/* However, in order to accommodate the */</comment>
<decl_stmt><decl><type><specifier pos:line="107" pos:column="1">const<pos:position pos:line="107" pos:column="6"/></specifier> <name pos:line="107" pos:column="7">uschar<pos:position pos:line="107" pos:column="13"/></name> <modifier pos:line="107" pos:column="14">*<pos:position pos:line="107" pos:column="15"/></modifier></type><name pos:line="107" pos:column="15">next<pos:position pos:line="107" pos:column="19"/></name></decl>;<pos:position pos:line="107" pos:column="20"/></decl_stmt>                <comment type="block" pos:line="107" pos:column="36">/* version of this code that uses an    */</comment>
<decl_stmt><decl><type><specifier pos:line="108" pos:column="1">const<pos:position pos:line="108" pos:column="6"/></specifier> <name pos:line="108" pos:column="7">uschar<pos:position pos:line="108" pos:column="13"/></name> <modifier pos:line="108" pos:column="14">*<pos:position pos:line="108" pos:column="15"/></modifier></type><name pos:line="108" pos:column="15">pp<pos:position pos:line="108" pos:column="17"/></name></decl>;<pos:position pos:line="108" pos:column="18"/></decl_stmt>                  <comment type="block" pos:line="108" pos:column="36">/* external "stack" implemented on the  */</comment>
<decl_stmt><decl><type><specifier pos:line="109" pos:column="1">const<pos:position pos:line="109" pos:column="6"/></specifier> <name pos:line="109" pos:column="7">uschar<pos:position pos:line="109" pos:column="13"/></name> <modifier pos:line="109" pos:column="14">*<pos:position pos:line="109" pos:column="15"/></modifier></type><name pos:line="109" pos:column="15">prev<pos:position pos:line="109" pos:column="19"/></name></decl>;<pos:position pos:line="109" pos:column="20"/></decl_stmt>                <comment type="block" pos:line="109" pos:column="36">/* heap, it is easier to declare them   */</comment>
<decl_stmt><decl><type><specifier pos:line="110" pos:column="1">const<pos:position pos:line="110" pos:column="6"/></specifier> <name pos:line="110" pos:column="7">uschar<pos:position pos:line="110" pos:column="13"/></name> <modifier pos:line="110" pos:column="14">*<pos:position pos:line="110" pos:column="15"/></modifier></type><name pos:line="110" pos:column="15">saved_eptr<pos:position pos:line="110" pos:column="25"/></name></decl>;<pos:position pos:line="110" pos:column="26"/></decl_stmt>          <comment type="block" pos:line="110" pos:column="36">/* all here, so the declarations can    */</comment>
                                   <comment type="block" pos:line="111" pos:column="36">/* be cut out in a block. The only      */</comment>
<decl_stmt><decl><type><name pos:line="112" pos:column="1">recursion_info<pos:position pos:line="112" pos:column="15"/></name></type> <name pos:line="112" pos:column="16">new_recursive<pos:position pos:line="112" pos:column="29"/></name></decl>;<pos:position pos:line="112" pos:column="30"/></decl_stmt>      <comment type="block" pos:line="112" pos:column="36">/* declarations within blocks below are */</comment>
                                   <comment type="block" pos:line="113" pos:column="36">/* for variables that do not have to    */</comment>
<decl_stmt><decl><type><name pos:line="114" pos:column="1">BOOL<pos:position pos:line="114" pos:column="5"/></name></type> <name pos:line="114" pos:column="6">cur_is_word<pos:position pos:line="114" pos:column="17"/></name></decl>;<pos:position pos:line="114" pos:column="18"/></decl_stmt>                  <comment type="block" pos:line="114" pos:column="36">/* be preserved over a recursive call   */</comment>
<decl_stmt><decl><type><name pos:line="115" pos:column="1">BOOL<pos:position pos:line="115" pos:column="5"/></name></type> <name pos:line="115" pos:column="6">condition<pos:position pos:line="115" pos:column="15"/></name></decl>;<pos:position pos:line="115" pos:column="16"/></decl_stmt>                    <comment type="block" pos:line="115" pos:column="36">/* to RMATCH().                         */</comment>
<decl_stmt><decl><type><name pos:line="116" pos:column="1">BOOL<pos:position pos:line="116" pos:column="5"/></name></type> <name pos:line="116" pos:column="6">minimize<pos:position pos:line="116" pos:column="14"/></name></decl>;<pos:position pos:line="116" pos:column="15"/></decl_stmt>
<decl_stmt><decl><type><name pos:line="117" pos:column="1">BOOL<pos:position pos:line="117" pos:column="5"/></name></type> <name pos:line="117" pos:column="6">prev_is_word<pos:position pos:line="117" pos:column="18"/></name></decl>;<pos:position pos:line="117" pos:column="19"/></decl_stmt>

<decl_stmt><decl><type><name pos:line="119" pos:column="1">unsigned<pos:position pos:line="119" pos:column="9"/></name> <name pos:line="119" pos:column="10">long<pos:position pos:line="119" pos:column="14"/></name> <name pos:line="119" pos:column="15">int<pos:position pos:line="119" pos:column="18"/></name></type> <name pos:line="119" pos:column="19">original_ims<pos:position pos:line="119" pos:column="31"/></name></decl>;<pos:position pos:line="119" pos:column="32"/></decl_stmt>

<cpp:ifdef pos:line="121" pos:column="1">#<cpp:directive pos:line="121" pos:column="2">ifdef<pos:position pos:line="121" pos:column="7"/></cpp:directive> <name pos:line="121" pos:column="8">SUPPORT_UCP<pos:position pos:line="121" pos:column="19"/></name></cpp:ifdef>
<decl_stmt><decl><type><name pos:line="122" pos:column="1">int<pos:position pos:line="122" pos:column="4"/></name></type> <name pos:line="122" pos:column="5">prop_type<pos:position pos:line="122" pos:column="14"/></name></decl>;<pos:position pos:line="122" pos:column="15"/></decl_stmt>
<decl_stmt><decl><type><name pos:line="123" pos:column="1">int<pos:position pos:line="123" pos:column="4"/></name></type> <name pos:line="123" pos:column="5">prop_fail_result<pos:position pos:line="123" pos:column="21"/></name></decl>;<pos:position pos:line="123" pos:column="22"/></decl_stmt>
<decl_stmt><decl><type><name pos:line="124" pos:column="1">int<pos:position pos:line="124" pos:column="4"/></name></type> <name pos:line="124" pos:column="5">prop_category<pos:position pos:line="124" pos:column="18"/></name></decl>;<pos:position pos:line="124" pos:column="19"/></decl_stmt>
<decl_stmt><decl><type><name pos:line="125" pos:column="1">int<pos:position pos:line="125" pos:column="4"/></name></type> <name pos:line="125" pos:column="5">prop_chartype<pos:position pos:line="125" pos:column="18"/></name></decl>;<pos:position pos:line="125" pos:column="19"/></decl_stmt>
<decl_stmt><decl><type><name pos:line="126" pos:column="1">int<pos:position pos:line="126" pos:column="4"/></name></type> <name pos:line="126" pos:column="5">prop_othercase<pos:position pos:line="126" pos:column="19"/></name></decl>;<pos:position pos:line="126" pos:column="20"/></decl_stmt>
<decl_stmt><decl><type><name pos:line="127" pos:column="1">int<pos:position pos:line="127" pos:column="4"/></name></type> <name pos:line="127" pos:column="5">prop_test_against<pos:position pos:line="127" pos:column="22"/></name></decl>;<pos:position pos:line="127" pos:column="23"/></decl_stmt>
<decl_stmt><decl><type><name pos:line="128" pos:column="1">int<pos:position pos:line="128" pos:column="4"/></name> <modifier pos:line="128" pos:column="5">*<pos:position pos:line="128" pos:column="6"/></modifier></type><name pos:line="128" pos:column="6">prop_test_variable<pos:position pos:line="128" pos:column="24"/></name></decl>;<pos:position pos:line="128" pos:column="25"/></decl_stmt>
<cpp:endif pos:line="129" pos:column="1">#<cpp:directive pos:line="129" pos:column="2">endif<pos:position pos:line="129" pos:column="7"/></cpp:directive></cpp:endif>

<decl_stmt><decl><type><name pos:line="131" pos:column="1">int<pos:position pos:line="131" pos:column="4"/></name></type> <name pos:line="131" pos:column="5">ctype<pos:position pos:line="131" pos:column="10"/></name></decl>;<pos:position pos:line="131" pos:column="11"/></decl_stmt>
<decl_stmt><decl><type><name pos:line="132" pos:column="1">int<pos:position pos:line="132" pos:column="4"/></name></type> <name pos:line="132" pos:column="5">length<pos:position pos:line="132" pos:column="11"/></name></decl>;<pos:position pos:line="132" pos:column="12"/></decl_stmt>
<decl_stmt><decl><type><name pos:line="133" pos:column="1">int<pos:position pos:line="133" pos:column="4"/></name></type> <name pos:line="133" pos:column="5">max<pos:position pos:line="133" pos:column="8"/></name></decl>;<pos:position pos:line="133" pos:column="9"/></decl_stmt>
<decl_stmt><decl><type><name pos:line="134" pos:column="1">int<pos:position pos:line="134" pos:column="4"/></name></type> <name pos:line="134" pos:column="5">min<pos:position pos:line="134" pos:column="8"/></name></decl>;<pos:position pos:line="134" pos:column="9"/></decl_stmt>
<decl_stmt><decl><type><name pos:line="135" pos:column="1">int<pos:position pos:line="135" pos:column="4"/></name></type> <name pos:line="135" pos:column="5">number<pos:position pos:line="135" pos:column="11"/></name></decl>;<pos:position pos:line="135" pos:column="12"/></decl_stmt>
<decl_stmt><decl><type><name pos:line="136" pos:column="1">int<pos:position pos:line="136" pos:column="4"/></name></type> <name pos:line="136" pos:column="5">offset<pos:position pos:line="136" pos:column="11"/></name></decl>;<pos:position pos:line="136" pos:column="12"/></decl_stmt>
<decl_stmt><decl><type><name pos:line="137" pos:column="1">int<pos:position pos:line="137" pos:column="4"/></name></type> <name pos:line="137" pos:column="5">op<pos:position pos:line="137" pos:column="7"/></name></decl>;<pos:position pos:line="137" pos:column="8"/></decl_stmt>
<decl_stmt><decl><type><name pos:line="138" pos:column="1">int<pos:position pos:line="138" pos:column="4"/></name></type> <name pos:line="138" pos:column="5">save_capture_last<pos:position pos:line="138" pos:column="22"/></name></decl>;<pos:position pos:line="138" pos:column="23"/></decl_stmt>
<decl_stmt><decl><type><name pos:line="139" pos:column="1">int<pos:position pos:line="139" pos:column="4"/></name></type> <name pos:line="139" pos:column="5">save_offset1<pos:position pos:line="139" pos:column="17"/></name></decl>, <decl><type ref="prev"/><name pos:line="139" pos:column="19">save_offset2<pos:position pos:line="139" pos:column="31"/></name></decl>, <decl><type ref="prev"/><name pos:line="139" pos:column="33">save_offset3<pos:position pos:line="139" pos:column="45"/></name></decl>;<pos:position pos:line="139" pos:column="46"/></decl_stmt>
<decl_stmt><decl><type><name pos:line="140" pos:column="1">int<pos:position pos:line="140" pos:column="4"/></name></type> <name><name pos:line="140" pos:column="5">stacksave<pos:position pos:line="140" pos:column="14"/></name><index pos:line="140" pos:column="14">[<expr><name pos:line="140" pos:column="15">REC_STACK_SAVE_MAX<pos:position pos:line="140" pos:column="33"/></name></expr>]<pos:position pos:line="140" pos:column="34"/></index></name></decl>;<pos:position pos:line="140" pos:column="35"/></decl_stmt>

<decl_stmt><decl><type><name pos:line="142" pos:column="1">eptrblock<pos:position pos:line="142" pos:column="10"/></name></type> <name pos:line="142" pos:column="11">newptrb<pos:position pos:line="142" pos:column="18"/></name></decl>;<pos:position pos:line="142" pos:column="19"/></decl_stmt>
<cpp:endif pos:line="143" pos:column="1">#<cpp:directive pos:line="143" pos:column="2">endif<pos:position pos:line="143" pos:column="7"/></cpp:directive></cpp:endif>

<comment type="block" pos:line="145" pos:column="1">/* These statements are here to stop the compiler complaining about unitialized
variables. */</comment>

<cpp:ifdef pos:line="148" pos:column="1">#<cpp:directive pos:line="148" pos:column="2">ifdef<pos:position pos:line="148" pos:column="7"/></cpp:directive> <name pos:line="148" pos:column="8">SUPPORT_UCP<pos:position pos:line="148" pos:column="19"/></name></cpp:ifdef>
<expr_stmt><expr><name pos:line="149" pos:column="1">prop_fail_result<pos:position pos:line="149" pos:column="17"/></name> <operator pos:line="149" pos:column="18">=<pos:position pos:line="149" pos:column="19"/></operator> <literal type="number" pos:line="149" pos:column="20">0<pos:position pos:line="149" pos:column="21"/></literal></expr>;<pos:position pos:line="149" pos:column="22"/></expr_stmt>
<expr_stmt><expr><name pos:line="150" pos:column="1">prop_test_against<pos:position pos:line="150" pos:column="18"/></name> <operator pos:line="150" pos:column="19">=<pos:position pos:line="150" pos:column="20"/></operator> <literal type="number" pos:line="150" pos:column="21">0<pos:position pos:line="150" pos:column="22"/></literal></expr>;<pos:position pos:line="150" pos:column="23"/></expr_stmt>
<expr_stmt><expr><name pos:line="151" pos:column="1">prop_test_variable<pos:position pos:line="151" pos:column="19"/></name> <operator pos:line="151" pos:column="20">=<pos:position pos:line="151" pos:column="21"/></operator> <name pos:line="151" pos:column="22">NULL<pos:position pos:line="151" pos:column="26"/></name></expr>;<pos:position pos:line="151" pos:column="27"/></expr_stmt>
<cpp:endif pos:line="152" pos:column="1">#<cpp:directive pos:line="152" pos:column="2">endif<pos:position pos:line="152" pos:column="7"/></cpp:directive></cpp:endif>

<comment type="block" pos:line="154" pos:column="1">/* OK, now we can get on with the real code of the function. Recursion is
specified by the macros RMATCH and RRETURN. When NO_RECURSE is *not* defined,
these just turn into a recursive call to match() and a "return", respectively.
However, RMATCH isn't like a function call because it's quite a complicated
macro. It has to be used in one particular way. This shouldn't, however, impact
performance when true recursion is being used. */</comment>

<if pos:line="161" pos:column="1">if <condition pos:line="161" pos:column="4">(<expr><name><name pos:line="161" pos:column="5">md<pos:position pos:line="161" pos:column="7"/></name><operator pos:line="161" pos:column="7">-&gt;<pos:position pos:line="161" pos:column="12"/></operator><name pos:line="161" pos:column="9">match_call_count<pos:position pos:line="161" pos:column="25"/></name></name><operator pos:line="161" pos:column="25">++<pos:position pos:line="161" pos:column="27"/></operator> <operator pos:line="161" pos:column="28">&gt;=<pos:position pos:line="161" pos:column="33"/></operator> <name><name pos:line="161" pos:column="31">md<pos:position pos:line="161" pos:column="33"/></name><operator pos:line="161" pos:column="33">-&gt;<pos:position pos:line="161" pos:column="38"/></operator><name pos:line="161" pos:column="35">match_limit<pos:position pos:line="161" pos:column="46"/></name></name></expr>)<pos:position pos:line="161" pos:column="47"/></condition><then pos:line="161" pos:column="47"> <block type="pseudo"><expr_stmt><expr><call><name pos:line="161" pos:column="48">RRETURN<pos:position pos:line="161" pos:column="55"/></name><argument_list pos:line="161" pos:column="55">(<argument><expr><name pos:line="161" pos:column="56">PCRE_ERROR_MATCHLIMIT<pos:position pos:line="161" pos:column="77"/></name></expr></argument>)<pos:position pos:line="161" pos:column="78"/></argument_list></call></expr>;<pos:position pos:line="161" pos:column="79"/></expr_stmt></block></then></if>

<expr_stmt><expr><name pos:line="163" pos:column="1">original_ims<pos:position pos:line="163" pos:column="13"/></name> <operator pos:line="163" pos:column="14">=<pos:position pos:line="163" pos:column="15"/></operator> <name pos:line="163" pos:column="16">ims<pos:position pos:line="163" pos:column="19"/></name></expr>;<pos:position pos:line="163" pos:column="20"/></expr_stmt>    <comment type="block" pos:line="163" pos:column="24">/* Save for resetting on ')' */</comment>

<comment type="block" pos:line="165" pos:column="1">/* At the start of a bracketed group, add the current subject pointer to the
stack of such pointers, to be re-instated at the end of the group when we hit
the closing ket. When match() is called in other circumstances, we don't add to
this stack. */</comment>

<if pos:line="170" pos:column="1">if <condition pos:line="170" pos:column="4">(<expr><operator pos:line="170" pos:column="5">(<pos:position pos:line="170" pos:column="6"/></operator><name pos:line="170" pos:column="6">flags<pos:position pos:line="170" pos:column="11"/></name> <operator pos:line="170" pos:column="12">&amp;<pos:position pos:line="170" pos:column="17"/></operator> <name pos:line="170" pos:column="14">match_isgroup<pos:position pos:line="170" pos:column="27"/></name><operator pos:line="170" pos:column="27">)<pos:position pos:line="170" pos:column="28"/></operator> <operator pos:line="170" pos:column="29">!=<pos:position pos:line="170" pos:column="31"/></operator> <literal type="number" pos:line="170" pos:column="32">0<pos:position pos:line="170" pos:column="33"/></literal></expr>)<pos:position pos:line="170" pos:column="34"/></condition><then pos:line="170" pos:column="34">
  <block pos:line="171" pos:column="3">{
  <expr_stmt><expr><name><name pos:line="172" pos:column="3">newptrb<pos:position pos:line="172" pos:column="10"/></name><operator pos:line="172" pos:column="10">.<pos:position pos:line="172" pos:column="11"/></operator><name pos:line="172" pos:column="11">epb_prev<pos:position pos:line="172" pos:column="19"/></name></name> <operator pos:line="172" pos:column="20">=<pos:position pos:line="172" pos:column="21"/></operator> <name pos:line="172" pos:column="22">eptrb<pos:position pos:line="172" pos:column="27"/></name></expr>;<pos:position pos:line="172" pos:column="28"/></expr_stmt>
  <expr_stmt><expr><name><name pos:line="173" pos:column="3">newptrb<pos:position pos:line="173" pos:column="10"/></name><operator pos:line="173" pos:column="10">.<pos:position pos:line="173" pos:column="11"/></operator><name pos:line="173" pos:column="11">epb_saved_eptr<pos:position pos:line="173" pos:column="25"/></name></name> <operator pos:line="173" pos:column="26">=<pos:position pos:line="173" pos:column="27"/></operator> <name pos:line="173" pos:column="28">eptr<pos:position pos:line="173" pos:column="32"/></name></expr>;<pos:position pos:line="173" pos:column="33"/></expr_stmt>
  <expr_stmt><expr><name pos:line="174" pos:column="3">eptrb<pos:position pos:line="174" pos:column="8"/></name> <operator pos:line="174" pos:column="9">=<pos:position pos:line="174" pos:column="10"/></operator> <operator pos:line="174" pos:column="11">&amp;<pos:position pos:line="174" pos:column="16"/></operator><name pos:line="174" pos:column="12">newptrb<pos:position pos:line="174" pos:column="19"/></name></expr>;<pos:position pos:line="174" pos:column="20"/></expr_stmt>
  }<pos:position pos:line="175" pos:column="4"/></block></then></if>

<comment type="block" pos:line="177" pos:column="1">/* Now start processing the operations. */</comment>

<for pos:line="179" pos:column="1">for <control pos:line="179" pos:column="5">(<init pos:line="179" pos:column="6">;<pos:position pos:line="179" pos:column="7"/></init><condition pos:line="179" pos:column="7">;<pos:position pos:line="179" pos:column="8"/></condition><incr/>)<pos:position pos:line="179" pos:column="9"/></control>
  <block pos:line="180" pos:column="3">{
  <expr_stmt><expr><name pos:line="181" pos:column="3">op<pos:position pos:line="181" pos:column="5"/></name> <operator pos:line="181" pos:column="6">=<pos:position pos:line="181" pos:column="7"/></operator> <operator pos:line="181" pos:column="8">*<pos:position pos:line="181" pos:column="9"/></operator><name pos:line="181" pos:column="9">ecode<pos:position pos:line="181" pos:column="14"/></name></expr>;<pos:position pos:line="181" pos:column="15"/></expr_stmt>
  <expr_stmt><expr><name pos:line="182" pos:column="3">minimize<pos:position pos:line="182" pos:column="11"/></name> <operator pos:line="182" pos:column="12">=<pos:position pos:line="182" pos:column="13"/></operator> <name pos:line="182" pos:column="14">FALSE<pos:position pos:line="182" pos:column="19"/></name></expr>;<pos:position pos:line="182" pos:column="20"/></expr_stmt>

  <comment type="block" pos:line="184" pos:column="3">/* For partial matching, remember if we ever hit the end of the subject after
  matching at least one subject character. */</comment>

  <if pos:line="187" pos:column="3">if <condition pos:line="187" pos:column="6">(<expr><name><name pos:line="187" pos:column="7">md<pos:position pos:line="187" pos:column="9"/></name><operator pos:line="187" pos:column="9">-&gt;<pos:position pos:line="187" pos:column="14"/></operator><name pos:line="187" pos:column="11">partial<pos:position pos:line="187" pos:column="18"/></name></name> <operator pos:line="187" pos:column="19">&amp;&amp;<pos:position pos:line="187" pos:column="29"/></operator>
      <name pos:line="188" pos:column="7">eptr<pos:position pos:line="188" pos:column="11"/></name> <operator pos:line="188" pos:column="12">&gt;=<pos:position pos:line="188" pos:column="17"/></operator> <name><name pos:line="188" pos:column="15">md<pos:position pos:line="188" pos:column="17"/></name><operator pos:line="188" pos:column="17">-&gt;<pos:position pos:line="188" pos:column="22"/></operator><name pos:line="188" pos:column="19">end_subject<pos:position pos:line="188" pos:column="30"/></name></name> <operator pos:line="188" pos:column="31">&amp;&amp;<pos:position pos:line="188" pos:column="41"/></operator>
      <name pos:line="189" pos:column="7">eptr<pos:position pos:line="189" pos:column="11"/></name> <operator pos:line="189" pos:column="12">&gt;<pos:position pos:line="189" pos:column="16"/></operator> <name><name pos:line="189" pos:column="14">md<pos:position pos:line="189" pos:column="16"/></name><operator pos:line="189" pos:column="16">-&gt;<pos:position pos:line="189" pos:column="21"/></operator><name pos:line="189" pos:column="18">start_match<pos:position pos:line="189" pos:column="29"/></name></name></expr>)<pos:position pos:line="189" pos:column="30"/></condition><then pos:line="189" pos:column="30">
    <block type="pseudo"><expr_stmt><expr><name><name pos:line="190" pos:column="5">md<pos:position pos:line="190" pos:column="7"/></name><operator pos:line="190" pos:column="7">-&gt;<pos:position pos:line="190" pos:column="12"/></operator><name pos:line="190" pos:column="9">hitend<pos:position pos:line="190" pos:column="15"/></name></name> <operator pos:line="190" pos:column="16">=<pos:position pos:line="190" pos:column="17"/></operator> <name pos:line="190" pos:column="18">TRUE<pos:position pos:line="190" pos:column="22"/></name></expr>;<pos:position pos:line="190" pos:column="23"/></expr_stmt></block></then></if>

  <comment type="block" pos:line="192" pos:column="3">/* Opening capturing bracket. If there is space in the offset vector, save
  the current subject position in the working slot at the top of the vector. We
  mustn't change the current values of the data slot, because they may be set
  from a previous iteration of this group, and be referred to by a reference
  inside the group.

  If the bracket fails to match, we need to restore this value and also the
  values of the final offsets, in case they were set by a previous iteration of
  the same bracket.

  If there isn't enough space in the offset vector, treat this as if it were a
  non-capturing bracket. Don't worry about setting the flag for the error case
  here; that is handled in the code for KET. */</comment>

  <if pos:line="206" pos:column="3">if <condition pos:line="206" pos:column="6">(<expr><name pos:line="206" pos:column="7">op<pos:position pos:line="206" pos:column="9"/></name> <operator pos:line="206" pos:column="10">&gt;<pos:position pos:line="206" pos:column="14"/></operator> <name pos:line="206" pos:column="12">OP_BRA<pos:position pos:line="206" pos:column="18"/></name></expr>)<pos:position pos:line="206" pos:column="19"/></condition><then pos:line="206" pos:column="19">
    <block pos:line="207" pos:column="5">{
    <expr_stmt><expr><name pos:line="208" pos:column="5">number<pos:position pos:line="208" pos:column="11"/></name> <operator pos:line="208" pos:column="12">=<pos:position pos:line="208" pos:column="13"/></operator> <name pos:line="208" pos:column="14">op<pos:position pos:line="208" pos:column="16"/></name> <operator pos:line="208" pos:column="17">-<pos:position pos:line="208" pos:column="18"/></operator> <name pos:line="208" pos:column="19">OP_BRA<pos:position pos:line="208" pos:column="25"/></name></expr>;<pos:position pos:line="208" pos:column="26"/></expr_stmt>

    <comment type="block" pos:line="210" pos:column="5">/* For extended extraction brackets (large number), we have to fish out the
    number from a dummy opcode at the start. */</comment>

    <if pos:line="213" pos:column="5">if <condition pos:line="213" pos:column="8">(<expr><name pos:line="213" pos:column="9">number<pos:position pos:line="213" pos:column="15"/></name> <operator pos:line="213" pos:column="16">&gt;<pos:position pos:line="213" pos:column="20"/></operator> <name pos:line="213" pos:column="18">EXTRACT_BASIC_MAX<pos:position pos:line="213" pos:column="35"/></name></expr>)<pos:position pos:line="213" pos:column="36"/></condition><then pos:line="213" pos:column="36">
      <block type="pseudo"><expr_stmt><expr><name pos:line="214" pos:column="7">number<pos:position pos:line="214" pos:column="13"/></name> <operator pos:line="214" pos:column="14">=<pos:position pos:line="214" pos:column="15"/></operator> <call><name pos:line="214" pos:column="16">GET2<pos:position pos:line="214" pos:column="20"/></name><argument_list pos:line="214" pos:column="20">(<argument><expr><name pos:line="214" pos:column="21">ecode<pos:position pos:line="214" pos:column="26"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="214" pos:column="28">2<pos:position pos:line="214" pos:column="29"/></literal><operator pos:line="214" pos:column="29">+<pos:position pos:line="214" pos:column="30"/></operator><name pos:line="214" pos:column="30">LINK_SIZE<pos:position pos:line="214" pos:column="39"/></name></expr></argument>)<pos:position pos:line="214" pos:column="40"/></argument_list></call></expr>;<pos:position pos:line="214" pos:column="41"/></expr_stmt></block></then></if>
    <expr_stmt><expr><name pos:line="215" pos:column="5">offset<pos:position pos:line="215" pos:column="11"/></name> <operator pos:line="215" pos:column="12">=<pos:position pos:line="215" pos:column="13"/></operator> <name pos:line="215" pos:column="14">number<pos:position pos:line="215" pos:column="20"/></name> <operator pos:line="215" pos:column="21">&lt;&lt;<pos:position pos:line="215" pos:column="29"/></operator> <literal type="number" pos:line="215" pos:column="24">1<pos:position pos:line="215" pos:column="25"/></literal></expr>;<pos:position pos:line="215" pos:column="26"/></expr_stmt>

<cpp:ifdef pos:line="217" pos:column="1">#<cpp:directive pos:line="217" pos:column="2">ifdef<pos:position pos:line="217" pos:column="7"/></cpp:directive> <name pos:line="217" pos:column="8">DEBUG<pos:position pos:line="217" pos:column="13"/></name></cpp:ifdef>
    <expr_stmt><expr><call><name pos:line="218" pos:column="5">printf<pos:position pos:line="218" pos:column="11"/></name><argument_list pos:line="218" pos:column="11">(<argument><expr><literal type="string" pos:line="218" pos:column="12">"start bracket %d subject="<pos:position pos:line="218" pos:column="39"/></literal></expr></argument>, <argument><expr><name pos:line="218" pos:column="41">number<pos:position pos:line="218" pos:column="47"/></name></expr></argument>)<pos:position pos:line="218" pos:column="48"/></argument_list></call></expr>;<pos:position pos:line="218" pos:column="49"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="219" pos:column="5">pchars<pos:position pos:line="219" pos:column="11"/></name><argument_list pos:line="219" pos:column="11">(<argument><expr><name pos:line="219" pos:column="12">eptr<pos:position pos:line="219" pos:column="16"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="219" pos:column="18">16<pos:position pos:line="219" pos:column="20"/></literal></expr></argument>, <argument><expr><name pos:line="219" pos:column="22">TRUE<pos:position pos:line="219" pos:column="26"/></name></expr></argument>, <argument><expr><name pos:line="219" pos:column="28">md<pos:position pos:line="219" pos:column="30"/></name></expr></argument>)<pos:position pos:line="219" pos:column="31"/></argument_list></call></expr>;<pos:position pos:line="219" pos:column="32"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="220" pos:column="5">printf<pos:position pos:line="220" pos:column="11"/></name><argument_list pos:line="220" pos:column="11">(<argument><expr><literal type="string" pos:line="220" pos:column="12">"\n"<pos:position pos:line="220" pos:column="16"/></literal></expr></argument>)<pos:position pos:line="220" pos:column="17"/></argument_list></call></expr>;<pos:position pos:line="220" pos:column="18"/></expr_stmt>
<cpp:endif pos:line="221" pos:column="1">#<cpp:directive pos:line="221" pos:column="2">endif<pos:position pos:line="221" pos:column="7"/></cpp:directive></cpp:endif>

    <if pos:line="223" pos:column="5">if <condition pos:line="223" pos:column="8">(<expr><name pos:line="223" pos:column="9">offset<pos:position pos:line="223" pos:column="15"/></name> <operator pos:line="223" pos:column="16">&lt;<pos:position pos:line="223" pos:column="20"/></operator> <name><name pos:line="223" pos:column="18">md<pos:position pos:line="223" pos:column="20"/></name><operator pos:line="223" pos:column="20">-&gt;<pos:position pos:line="223" pos:column="25"/></operator><name pos:line="223" pos:column="22">offset_max<pos:position pos:line="223" pos:column="32"/></name></name></expr>)<pos:position pos:line="223" pos:column="33"/></condition><then pos:line="223" pos:column="33">
      <block pos:line="224" pos:column="7">{
      <expr_stmt><expr><name pos:line="225" pos:column="7">save_offset1<pos:position pos:line="225" pos:column="19"/></name> <operator pos:line="225" pos:column="20">=<pos:position pos:line="225" pos:column="21"/></operator> <name><name pos:line="225" pos:column="22">md<pos:position pos:line="225" pos:column="24"/></name><operator pos:line="225" pos:column="24">-&gt;<pos:position pos:line="225" pos:column="29"/></operator><name pos:line="225" pos:column="26">offset_vector<pos:position pos:line="225" pos:column="39"/></name><index pos:line="225" pos:column="39">[<expr><name pos:line="225" pos:column="40">offset<pos:position pos:line="225" pos:column="46"/></name></expr>]<pos:position pos:line="225" pos:column="47"/></index></name></expr>;<pos:position pos:line="225" pos:column="48"/></expr_stmt>
      <expr_stmt><expr><name pos:line="226" pos:column="7">save_offset2<pos:position pos:line="226" pos:column="19"/></name> <operator pos:line="226" pos:column="20">=<pos:position pos:line="226" pos:column="21"/></operator> <name><name pos:line="226" pos:column="22">md<pos:position pos:line="226" pos:column="24"/></name><operator pos:line="226" pos:column="24">-&gt;<pos:position pos:line="226" pos:column="29"/></operator><name pos:line="226" pos:column="26">offset_vector<pos:position pos:line="226" pos:column="39"/></name><index pos:line="226" pos:column="39">[<expr><name pos:line="226" pos:column="40">offset<pos:position pos:line="226" pos:column="46"/></name><operator pos:line="226" pos:column="46">+<pos:position pos:line="226" pos:column="47"/></operator><literal type="number" pos:line="226" pos:column="47">1<pos:position pos:line="226" pos:column="48"/></literal></expr>]<pos:position pos:line="226" pos:column="49"/></index></name></expr>;<pos:position pos:line="226" pos:column="50"/></expr_stmt>
      <expr_stmt><expr><name pos:line="227" pos:column="7">save_offset3<pos:position pos:line="227" pos:column="19"/></name> <operator pos:line="227" pos:column="20">=<pos:position pos:line="227" pos:column="21"/></operator> <name><name pos:line="227" pos:column="22">md<pos:position pos:line="227" pos:column="24"/></name><operator pos:line="227" pos:column="24">-&gt;<pos:position pos:line="227" pos:column="29"/></operator><name pos:line="227" pos:column="26">offset_vector<pos:position pos:line="227" pos:column="39"/></name><index pos:line="227" pos:column="39">[<expr><name><name pos:line="227" pos:column="40">md<pos:position pos:line="227" pos:column="42"/></name><operator pos:line="227" pos:column="42">-&gt;<pos:position pos:line="227" pos:column="47"/></operator><name pos:line="227" pos:column="44">offset_end<pos:position pos:line="227" pos:column="54"/></name></name> <operator pos:line="227" pos:column="55">-<pos:position pos:line="227" pos:column="56"/></operator> <name pos:line="227" pos:column="57">number<pos:position pos:line="227" pos:column="63"/></name></expr>]<pos:position pos:line="227" pos:column="64"/></index></name></expr>;<pos:position pos:line="227" pos:column="65"/></expr_stmt>
      <expr_stmt><expr><name pos:line="228" pos:column="7">save_capture_last<pos:position pos:line="228" pos:column="24"/></name> <operator pos:line="228" pos:column="25">=<pos:position pos:line="228" pos:column="26"/></operator> <name><name pos:line="228" pos:column="27">md<pos:position pos:line="228" pos:column="29"/></name><operator pos:line="228" pos:column="29">-&gt;<pos:position pos:line="228" pos:column="34"/></operator><name pos:line="228" pos:column="31">capture_last<pos:position pos:line="228" pos:column="43"/></name></name></expr>;<pos:position pos:line="228" pos:column="44"/></expr_stmt>

      <expr_stmt><expr><call><name pos:line="230" pos:column="7">DPRINTF<pos:position pos:line="230" pos:column="14"/></name><argument_list pos:line="230" pos:column="14">(<argument><expr><operator pos:line="230" pos:column="15">(<pos:position pos:line="230" pos:column="16"/></operator><literal type="string" pos:line="230" pos:column="16">"saving %d %d %d\n"<pos:position pos:line="230" pos:column="35"/></literal><operator pos:line="230" pos:column="35">,<pos:position pos:line="230" pos:column="36"/></operator> <name pos:line="230" pos:column="37">save_offset1<pos:position pos:line="230" pos:column="49"/></name><operator pos:line="230" pos:column="49">,<pos:position pos:line="230" pos:column="50"/></operator> <name pos:line="230" pos:column="51">save_offset2<pos:position pos:line="230" pos:column="63"/></name><operator pos:line="230" pos:column="63">,<pos:position pos:line="230" pos:column="64"/></operator> <name pos:line="230" pos:column="65">save_offset3<pos:position pos:line="230" pos:column="77"/></name><operator pos:line="230" pos:column="77">)<pos:position pos:line="230" pos:column="78"/></operator></expr></argument>)<pos:position pos:line="230" pos:column="79"/></argument_list></call></expr>;<pos:position pos:line="230" pos:column="80"/></expr_stmt>
      <expr_stmt><expr><name><name pos:line="231" pos:column="7">md<pos:position pos:line="231" pos:column="9"/></name><operator pos:line="231" pos:column="9">-&gt;<pos:position pos:line="231" pos:column="14"/></operator><name pos:line="231" pos:column="11">offset_vector<pos:position pos:line="231" pos:column="24"/></name><index pos:line="231" pos:column="24">[<expr><name><name pos:line="231" pos:column="25">md<pos:position pos:line="231" pos:column="27"/></name><operator pos:line="231" pos:column="27">-&gt;<pos:position pos:line="231" pos:column="32"/></operator><name pos:line="231" pos:column="29">offset_end<pos:position pos:line="231" pos:column="39"/></name></name> <operator pos:line="231" pos:column="40">-<pos:position pos:line="231" pos:column="41"/></operator> <name pos:line="231" pos:column="42">number<pos:position pos:line="231" pos:column="48"/></name></expr>]<pos:position pos:line="231" pos:column="49"/></index></name> <operator pos:line="231" pos:column="50">=<pos:position pos:line="231" pos:column="51"/></operator> <name pos:line="231" pos:column="52">eptr<pos:position pos:line="231" pos:column="56"/></name> <operator pos:line="231" pos:column="57">-<pos:position pos:line="231" pos:column="58"/></operator> <name><name pos:line="231" pos:column="59">md<pos:position pos:line="231" pos:column="61"/></name><operator pos:line="231" pos:column="61">-&gt;<pos:position pos:line="231" pos:column="66"/></operator><name pos:line="231" pos:column="63">start_subject<pos:position pos:line="231" pos:column="76"/></name></name></expr>;<pos:position pos:line="231" pos:column="77"/></expr_stmt>

      <do pos:line="233" pos:column="7">do
        <block pos:line="234" pos:column="9">{
        <expr_stmt><expr><call><name pos:line="235" pos:column="9">RMATCH<pos:position pos:line="235" pos:column="15"/></name><argument_list pos:line="235" pos:column="15">(<argument><expr><name pos:line="235" pos:column="16">rrc<pos:position pos:line="235" pos:column="19"/></name></expr></argument>, <argument><expr><name pos:line="235" pos:column="21">eptr<pos:position pos:line="235" pos:column="25"/></name></expr></argument>, <argument><expr><name pos:line="235" pos:column="27">ecode<pos:position pos:line="235" pos:column="32"/></name> <operator pos:line="235" pos:column="33">+<pos:position pos:line="235" pos:column="34"/></operator> <literal type="number" pos:line="235" pos:column="35">1<pos:position pos:line="235" pos:column="36"/></literal> <operator pos:line="235" pos:column="37">+<pos:position pos:line="235" pos:column="38"/></operator> <name pos:line="235" pos:column="39">LINK_SIZE<pos:position pos:line="235" pos:column="48"/></name></expr></argument>, <argument><expr><name pos:line="235" pos:column="50">offset_top<pos:position pos:line="235" pos:column="60"/></name></expr></argument>, <argument><expr><name pos:line="235" pos:column="62">md<pos:position pos:line="235" pos:column="64"/></name></expr></argument>, <argument><expr><name pos:line="235" pos:column="66">ims<pos:position pos:line="235" pos:column="69"/></name></expr></argument>, <argument><expr><name pos:line="235" pos:column="71">eptrb<pos:position pos:line="235" pos:column="76"/></name></expr></argument>,
          <argument><expr><name pos:line="236" pos:column="11">match_isgroup<pos:position pos:line="236" pos:column="24"/></name></expr></argument>)<pos:position pos:line="236" pos:column="25"/></argument_list></call></expr>;<pos:position pos:line="236" pos:column="26"/></expr_stmt>
        <if pos:line="237" pos:column="9">if <condition pos:line="237" pos:column="12">(<expr><name pos:line="237" pos:column="13">rrc<pos:position pos:line="237" pos:column="16"/></name> <operator pos:line="237" pos:column="17">!=<pos:position pos:line="237" pos:column="19"/></operator> <name pos:line="237" pos:column="20">MATCH_NOMATCH<pos:position pos:line="237" pos:column="33"/></name></expr>)<pos:position pos:line="237" pos:column="34"/></condition><then pos:line="237" pos:column="34"> <block type="pseudo"><expr_stmt><expr><call><name pos:line="237" pos:column="35">RRETURN<pos:position pos:line="237" pos:column="42"/></name><argument_list pos:line="237" pos:column="42">(<argument><expr><name pos:line="237" pos:column="43">rrc<pos:position pos:line="237" pos:column="46"/></name></expr></argument>)<pos:position pos:line="237" pos:column="47"/></argument_list></call></expr>;<pos:position pos:line="237" pos:column="48"/></expr_stmt></block></then></if>
        <expr_stmt><expr><name><name pos:line="238" pos:column="9">md<pos:position pos:line="238" pos:column="11"/></name><operator pos:line="238" pos:column="11">-&gt;<pos:position pos:line="238" pos:column="16"/></operator><name pos:line="238" pos:column="13">capture_last<pos:position pos:line="238" pos:column="25"/></name></name> <operator pos:line="238" pos:column="26">=<pos:position pos:line="238" pos:column="27"/></operator> <name pos:line="238" pos:column="28">save_capture_last<pos:position pos:line="238" pos:column="45"/></name></expr>;<pos:position pos:line="238" pos:column="46"/></expr_stmt>
        <expr_stmt><expr><name pos:line="239" pos:column="9">ecode<pos:position pos:line="239" pos:column="14"/></name> <operator pos:line="239" pos:column="15">+=<pos:position pos:line="239" pos:column="17"/></operator> <call><name pos:line="239" pos:column="18">GET<pos:position pos:line="239" pos:column="21"/></name><argument_list pos:line="239" pos:column="21">(<argument><expr><name pos:line="239" pos:column="22">ecode<pos:position pos:line="239" pos:column="27"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="239" pos:column="29">1<pos:position pos:line="239" pos:column="30"/></literal></expr></argument>)<pos:position pos:line="239" pos:column="31"/></argument_list></call></expr>;<pos:position pos:line="239" pos:column="32"/></expr_stmt>
        }<pos:position pos:line="240" pos:column="10"/></block>
      while <condition pos:line="241" pos:column="13">(<expr><operator pos:line="241" pos:column="14">*<pos:position pos:line="241" pos:column="15"/></operator><name pos:line="241" pos:column="15">ecode<pos:position pos:line="241" pos:column="20"/></name> <operator pos:line="241" pos:column="21">==<pos:position pos:line="241" pos:column="23"/></operator> <name pos:line="241" pos:column="24">OP_ALT<pos:position pos:line="241" pos:column="30"/></name></expr>)<pos:position pos:line="241" pos:column="31"/></condition>;<pos:position pos:line="241" pos:column="32"/></do>

      <expr_stmt><expr><call><name pos:line="243" pos:column="7">DPRINTF<pos:position pos:line="243" pos:column="14"/></name><argument_list pos:line="243" pos:column="14">(<argument><expr><operator pos:line="243" pos:column="15">(<pos:position pos:line="243" pos:column="16"/></operator><literal type="string" pos:line="243" pos:column="16">"bracket %d failed\n"<pos:position pos:line="243" pos:column="37"/></literal><operator pos:line="243" pos:column="37">,<pos:position pos:line="243" pos:column="38"/></operator> <name pos:line="243" pos:column="39">number<pos:position pos:line="243" pos:column="45"/></name><operator pos:line="243" pos:column="45">)<pos:position pos:line="243" pos:column="46"/></operator></expr></argument>)<pos:position pos:line="243" pos:column="47"/></argument_list></call></expr>;<pos:position pos:line="243" pos:column="48"/></expr_stmt>

      <expr_stmt><expr><name><name pos:line="245" pos:column="7">md<pos:position pos:line="245" pos:column="9"/></name><operator pos:line="245" pos:column="9">-&gt;<pos:position pos:line="245" pos:column="14"/></operator><name pos:line="245" pos:column="11">offset_vector<pos:position pos:line="245" pos:column="24"/></name><index pos:line="245" pos:column="24">[<expr><name pos:line="245" pos:column="25">offset<pos:position pos:line="245" pos:column="31"/></name></expr>]<pos:position pos:line="245" pos:column="32"/></index></name> <operator pos:line="245" pos:column="33">=<pos:position pos:line="245" pos:column="34"/></operator> <name pos:line="245" pos:column="35">save_offset1<pos:position pos:line="245" pos:column="47"/></name></expr>;<pos:position pos:line="245" pos:column="48"/></expr_stmt>
      <expr_stmt><expr><name><name pos:line="246" pos:column="7">md<pos:position pos:line="246" pos:column="9"/></name><operator pos:line="246" pos:column="9">-&gt;<pos:position pos:line="246" pos:column="14"/></operator><name pos:line="246" pos:column="11">offset_vector<pos:position pos:line="246" pos:column="24"/></name><index pos:line="246" pos:column="24">[<expr><name pos:line="246" pos:column="25">offset<pos:position pos:line="246" pos:column="31"/></name><operator pos:line="246" pos:column="31">+<pos:position pos:line="246" pos:column="32"/></operator><literal type="number" pos:line="246" pos:column="32">1<pos:position pos:line="246" pos:column="33"/></literal></expr>]<pos:position pos:line="246" pos:column="34"/></index></name> <operator pos:line="246" pos:column="35">=<pos:position pos:line="246" pos:column="36"/></operator> <name pos:line="246" pos:column="37">save_offset2<pos:position pos:line="246" pos:column="49"/></name></expr>;<pos:position pos:line="246" pos:column="50"/></expr_stmt>
      <expr_stmt><expr><name><name pos:line="247" pos:column="7">md<pos:position pos:line="247" pos:column="9"/></name><operator pos:line="247" pos:column="9">-&gt;<pos:position pos:line="247" pos:column="14"/></operator><name pos:line="247" pos:column="11">offset_vector<pos:position pos:line="247" pos:column="24"/></name><index pos:line="247" pos:column="24">[<expr><name><name pos:line="247" pos:column="25">md<pos:position pos:line="247" pos:column="27"/></name><operator pos:line="247" pos:column="27">-&gt;<pos:position pos:line="247" pos:column="32"/></operator><name pos:line="247" pos:column="29">offset_end<pos:position pos:line="247" pos:column="39"/></name></name> <operator pos:line="247" pos:column="40">-<pos:position pos:line="247" pos:column="41"/></operator> <name pos:line="247" pos:column="42">number<pos:position pos:line="247" pos:column="48"/></name></expr>]<pos:position pos:line="247" pos:column="49"/></index></name> <operator pos:line="247" pos:column="50">=<pos:position pos:line="247" pos:column="51"/></operator> <name pos:line="247" pos:column="52">save_offset3<pos:position pos:line="247" pos:column="64"/></name></expr>;<pos:position pos:line="247" pos:column="65"/></expr_stmt>

      <expr_stmt><expr><call><name pos:line="249" pos:column="7">RRETURN<pos:position pos:line="249" pos:column="14"/></name><argument_list pos:line="249" pos:column="14">(<argument><expr><name pos:line="249" pos:column="15">MATCH_NOMATCH<pos:position pos:line="249" pos:column="28"/></name></expr></argument>)<pos:position pos:line="249" pos:column="29"/></argument_list></call></expr>;<pos:position pos:line="249" pos:column="30"/></expr_stmt>
      }<pos:position pos:line="250" pos:column="8"/></block></then>

    <comment type="block" pos:line="252" pos:column="5">/* Insufficient room for saving captured contents */</comment>

    <else pos:line="254" pos:column="5">else <block type="pseudo"><expr_stmt><expr><name pos:line="254" pos:column="10">op<pos:position pos:line="254" pos:column="12"/></name> <operator pos:line="254" pos:column="13">=<pos:position pos:line="254" pos:column="14"/></operator> <name pos:line="254" pos:column="15">OP_BRA<pos:position pos:line="254" pos:column="21"/></name></expr>;<pos:position pos:line="254" pos:column="22"/></expr_stmt></block></else></if>
    }<pos:position pos:line="255" pos:column="6"/></block></then></if>

  <comment type="block" pos:line="257" pos:column="3">/* Other types of node can be handled by a switch */</comment>

  <switch pos:line="259" pos:column="3">switch<condition pos:line="259" pos:column="9">(<expr><name pos:line="259" pos:column="10">op<pos:position pos:line="259" pos:column="12"/></name></expr>)<pos:position pos:line="259" pos:column="13"/></condition>
    <block pos:line="260" pos:column="5">{
    <case pos:line="261" pos:column="5">case <expr><name pos:line="261" pos:column="10">OP_BRA<pos:position pos:line="261" pos:column="16"/></name></expr>:<pos:position pos:line="261" pos:column="17"/></case>     <comment type="block" pos:line="261" pos:column="22">/* Non-capturing bracket: optimized */</comment>
    <expr_stmt><expr><call><name pos:line="262" pos:column="5">DPRINTF<pos:position pos:line="262" pos:column="12"/></name><argument_list pos:line="262" pos:column="12">(<argument><expr><operator pos:line="262" pos:column="13">(<pos:position pos:line="262" pos:column="14"/></operator><literal type="string" pos:line="262" pos:column="14">"start bracket 0\n"<pos:position pos:line="262" pos:column="33"/></literal><operator pos:line="262" pos:column="33">)<pos:position pos:line="262" pos:column="34"/></operator></expr></argument>)<pos:position pos:line="262" pos:column="35"/></argument_list></call></expr>;<pos:position pos:line="262" pos:column="36"/></expr_stmt>
    <do pos:line="263" pos:column="5">do
      <block pos:line="264" pos:column="7">{
      <expr_stmt><expr><call><name pos:line="265" pos:column="7">RMATCH<pos:position pos:line="265" pos:column="13"/></name><argument_list pos:line="265" pos:column="13">(<argument><expr><name pos:line="265" pos:column="14">rrc<pos:position pos:line="265" pos:column="17"/></name></expr></argument>, <argument><expr><name pos:line="265" pos:column="19">eptr<pos:position pos:line="265" pos:column="23"/></name></expr></argument>, <argument><expr><name pos:line="265" pos:column="25">ecode<pos:position pos:line="265" pos:column="30"/></name> <operator pos:line="265" pos:column="31">+<pos:position pos:line="265" pos:column="32"/></operator> <literal type="number" pos:line="265" pos:column="33">1<pos:position pos:line="265" pos:column="34"/></literal> <operator pos:line="265" pos:column="35">+<pos:position pos:line="265" pos:column="36"/></operator> <name pos:line="265" pos:column="37">LINK_SIZE<pos:position pos:line="265" pos:column="46"/></name></expr></argument>, <argument><expr><name pos:line="265" pos:column="48">offset_top<pos:position pos:line="265" pos:column="58"/></name></expr></argument>, <argument><expr><name pos:line="265" pos:column="60">md<pos:position pos:line="265" pos:column="62"/></name></expr></argument>, <argument><expr><name pos:line="265" pos:column="64">ims<pos:position pos:line="265" pos:column="67"/></name></expr></argument>, <argument><expr><name pos:line="265" pos:column="69">eptrb<pos:position pos:line="265" pos:column="74"/></name></expr></argument>,
        <argument><expr><name pos:line="266" pos:column="9">match_isgroup<pos:position pos:line="266" pos:column="22"/></name></expr></argument>)<pos:position pos:line="266" pos:column="23"/></argument_list></call></expr>;<pos:position pos:line="266" pos:column="24"/></expr_stmt>
      <if pos:line="267" pos:column="7">if <condition pos:line="267" pos:column="10">(<expr><name pos:line="267" pos:column="11">rrc<pos:position pos:line="267" pos:column="14"/></name> <operator pos:line="267" pos:column="15">!=<pos:position pos:line="267" pos:column="17"/></operator> <name pos:line="267" pos:column="18">MATCH_NOMATCH<pos:position pos:line="267" pos:column="31"/></name></expr>)<pos:position pos:line="267" pos:column="32"/></condition><then pos:line="267" pos:column="32"> <block type="pseudo"><expr_stmt><expr><call><name pos:line="267" pos:column="33">RRETURN<pos:position pos:line="267" pos:column="40"/></name><argument_list pos:line="267" pos:column="40">(<argument><expr><name pos:line="267" pos:column="41">rrc<pos:position pos:line="267" pos:column="44"/></name></expr></argument>)<pos:position pos:line="267" pos:column="45"/></argument_list></call></expr>;<pos:position pos:line="267" pos:column="46"/></expr_stmt></block></then></if>
      <expr_stmt><expr><name pos:line="268" pos:column="7">ecode<pos:position pos:line="268" pos:column="12"/></name> <operator pos:line="268" pos:column="13">+=<pos:position pos:line="268" pos:column="15"/></operator> <call><name pos:line="268" pos:column="16">GET<pos:position pos:line="268" pos:column="19"/></name><argument_list pos:line="268" pos:column="19">(<argument><expr><name pos:line="268" pos:column="20">ecode<pos:position pos:line="268" pos:column="25"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="268" pos:column="27">1<pos:position pos:line="268" pos:column="28"/></literal></expr></argument>)<pos:position pos:line="268" pos:column="29"/></argument_list></call></expr>;<pos:position pos:line="268" pos:column="30"/></expr_stmt>
      }<pos:position pos:line="269" pos:column="8"/></block>
    while <condition pos:line="270" pos:column="11">(<expr><operator pos:line="270" pos:column="12">*<pos:position pos:line="270" pos:column="13"/></operator><name pos:line="270" pos:column="13">ecode<pos:position pos:line="270" pos:column="18"/></name> <operator pos:line="270" pos:column="19">==<pos:position pos:line="270" pos:column="21"/></operator> <name pos:line="270" pos:column="22">OP_ALT<pos:position pos:line="270" pos:column="28"/></name></expr>)<pos:position pos:line="270" pos:column="29"/></condition>;<pos:position pos:line="270" pos:column="30"/></do>
    <expr_stmt><expr><call><name pos:line="271" pos:column="5">DPRINTF<pos:position pos:line="271" pos:column="12"/></name><argument_list pos:line="271" pos:column="12">(<argument><expr><operator pos:line="271" pos:column="13">(<pos:position pos:line="271" pos:column="14"/></operator><literal type="string" pos:line="271" pos:column="14">"bracket 0 failed\n"<pos:position pos:line="271" pos:column="34"/></literal><operator pos:line="271" pos:column="34">)<pos:position pos:line="271" pos:column="35"/></operator></expr></argument>)<pos:position pos:line="271" pos:column="36"/></argument_list></call></expr>;<pos:position pos:line="271" pos:column="37"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="272" pos:column="5">RRETURN<pos:position pos:line="272" pos:column="12"/></name><argument_list pos:line="272" pos:column="12">(<argument><expr><name pos:line="272" pos:column="13">MATCH_NOMATCH<pos:position pos:line="272" pos:column="26"/></name></expr></argument>)<pos:position pos:line="272" pos:column="27"/></argument_list></call></expr>;<pos:position pos:line="272" pos:column="28"/></expr_stmt>

    <comment type="block" pos:line="274" pos:column="5">/* Conditional group: compilation checked that there are no more than
    two branches. If the condition is false, skipping the first branch takes us
    past the end if there is only one branch, but that's OK because that is
    exactly what going to the ket would do. */</comment>

    <case pos:line="279" pos:column="5">case <expr><name pos:line="279" pos:column="10">OP_COND<pos:position pos:line="279" pos:column="17"/></name></expr>:<pos:position pos:line="279" pos:column="18"/></case>
    <if pos:line="280" pos:column="5">if <condition pos:line="280" pos:column="8">(<expr><name><name pos:line="280" pos:column="9">ecode<pos:position pos:line="280" pos:column="14"/></name><index pos:line="280" pos:column="14">[<expr><name pos:line="280" pos:column="15">LINK_SIZE<pos:position pos:line="280" pos:column="24"/></name><operator pos:line="280" pos:column="24">+<pos:position pos:line="280" pos:column="25"/></operator><literal type="number" pos:line="280" pos:column="25">1<pos:position pos:line="280" pos:column="26"/></literal></expr>]<pos:position pos:line="280" pos:column="27"/></index></name> <operator pos:line="280" pos:column="28">==<pos:position pos:line="280" pos:column="30"/></operator> <name pos:line="280" pos:column="31">OP_CREF<pos:position pos:line="280" pos:column="38"/></name></expr>)<pos:position pos:line="280" pos:column="39"/></condition><then pos:line="280" pos:column="39"> <comment type="block" pos:line="280" pos:column="40">/* Condition extract or recurse test */</comment>
      <block pos:line="281" pos:column="7">{
      <expr_stmt><expr><name pos:line="282" pos:column="7">offset<pos:position pos:line="282" pos:column="13"/></name> <operator pos:line="282" pos:column="14">=<pos:position pos:line="282" pos:column="15"/></operator> <call><name pos:line="282" pos:column="16">GET2<pos:position pos:line="282" pos:column="20"/></name><argument_list pos:line="282" pos:column="20">(<argument><expr><name pos:line="282" pos:column="21">ecode<pos:position pos:line="282" pos:column="26"/></name></expr></argument>, <argument><expr><name pos:line="282" pos:column="28">LINK_SIZE<pos:position pos:line="282" pos:column="37"/></name><operator pos:line="282" pos:column="37">+<pos:position pos:line="282" pos:column="38"/></operator><literal type="number" pos:line="282" pos:column="38">2<pos:position pos:line="282" pos:column="39"/></literal></expr></argument>)<pos:position pos:line="282" pos:column="40"/></argument_list></call> <operator pos:line="282" pos:column="41">&lt;&lt;<pos:position pos:line="282" pos:column="49"/></operator> <literal type="number" pos:line="282" pos:column="44">1<pos:position pos:line="282" pos:column="45"/></literal></expr>;<pos:position pos:line="282" pos:column="46"/></expr_stmt>  <comment type="block" pos:line="282" pos:column="48">/* Doubled ref number */</comment>
      <expr_stmt><expr><name pos:line="283" pos:column="7">condition<pos:position pos:line="283" pos:column="16"/></name> <operator pos:line="283" pos:column="17">=<pos:position pos:line="283" pos:column="18"/></operator> <ternary><condition><expr><operator pos:line="283" pos:column="19">(<pos:position pos:line="283" pos:column="20"/></operator><name pos:line="283" pos:column="20">offset<pos:position pos:line="283" pos:column="26"/></name> <operator pos:line="283" pos:column="27">==<pos:position pos:line="283" pos:column="29"/></operator> <name pos:line="283" pos:column="30">CREF_RECURSE<pos:position pos:line="283" pos:column="42"/></name> <operator pos:line="283" pos:column="43">*<pos:position pos:line="283" pos:column="44"/></operator> <literal type="number" pos:line="283" pos:column="45">2<pos:position pos:line="283" pos:column="46"/></literal><operator pos:line="283" pos:column="46">)<pos:position pos:line="283" pos:column="47"/></operator></expr>?<pos:position pos:line="283" pos:column="48"/></condition><then pos:line="283" pos:column="48">
        <expr><operator pos:line="284" pos:column="9">(<pos:position pos:line="284" pos:column="10"/></operator><name><name pos:line="284" pos:column="10">md<pos:position pos:line="284" pos:column="12"/></name><operator pos:line="284" pos:column="12">-&gt;<pos:position pos:line="284" pos:column="17"/></operator><name pos:line="284" pos:column="14">recursive<pos:position pos:line="284" pos:column="23"/></name></name> <operator pos:line="284" pos:column="24">!=<pos:position pos:line="284" pos:column="26"/></operator> <name pos:line="284" pos:column="27">NULL<pos:position pos:line="284" pos:column="31"/></name><operator pos:line="284" pos:column="31">)<pos:position pos:line="284" pos:column="32"/></operator></expr> <pos:position pos:line="284" pos:column="33"/></then><else pos:line="284" pos:column="33">:
        <expr><operator pos:line="285" pos:column="9">(<pos:position pos:line="285" pos:column="10"/></operator><name pos:line="285" pos:column="10">offset<pos:position pos:line="285" pos:column="16"/></name> <operator pos:line="285" pos:column="17">&lt;<pos:position pos:line="285" pos:column="21"/></operator> <name pos:line="285" pos:column="19">offset_top<pos:position pos:line="285" pos:column="29"/></name> <operator pos:line="285" pos:column="30">&amp;&amp;<pos:position pos:line="285" pos:column="40"/></operator> <name><name pos:line="285" pos:column="33">md<pos:position pos:line="285" pos:column="35"/></name><operator pos:line="285" pos:column="35">-&gt;<pos:position pos:line="285" pos:column="40"/></operator><name pos:line="285" pos:column="37">offset_vector<pos:position pos:line="285" pos:column="50"/></name><index pos:line="285" pos:column="50">[<expr><name pos:line="285" pos:column="51">offset<pos:position pos:line="285" pos:column="57"/></name></expr>]<pos:position pos:line="285" pos:column="58"/></index></name> <operator pos:line="285" pos:column="59">&gt;=<pos:position pos:line="285" pos:column="64"/></operator> <literal type="number" pos:line="285" pos:column="62">0<pos:position pos:line="285" pos:column="63"/></literal><operator pos:line="285" pos:column="63">)<pos:position pos:line="285" pos:column="64"/></operator></expr></else></ternary></expr>;<pos:position pos:line="285" pos:column="65"/></expr_stmt>
      <expr_stmt><expr><call><name pos:line="286" pos:column="7">RMATCH<pos:position pos:line="286" pos:column="13"/></name><argument_list pos:line="286" pos:column="13">(<argument><expr><name pos:line="286" pos:column="14">rrc<pos:position pos:line="286" pos:column="17"/></name></expr></argument>, <argument><expr><name pos:line="286" pos:column="19">eptr<pos:position pos:line="286" pos:column="23"/></name></expr></argument>, <argument><expr><name pos:line="286" pos:column="25">ecode<pos:position pos:line="286" pos:column="30"/></name> <operator pos:line="286" pos:column="31">+<pos:position pos:line="286" pos:column="32"/></operator> <operator pos:line="286" pos:column="33">(<pos:position pos:line="286" pos:column="34"/></operator><ternary><condition><expr><name pos:line="286" pos:column="34">condition<pos:position pos:line="286" pos:column="43"/></name></expr>?<pos:position pos:line="286" pos:column="44"/></condition><then pos:line="286" pos:column="44">
        <expr><operator pos:line="287" pos:column="9">(<pos:position pos:line="287" pos:column="10"/></operator><name pos:line="287" pos:column="10">LINK_SIZE<pos:position pos:line="287" pos:column="19"/></name> <operator pos:line="287" pos:column="20">+<pos:position pos:line="287" pos:column="21"/></operator> <literal type="number" pos:line="287" pos:column="22">4<pos:position pos:line="287" pos:column="23"/></literal><operator pos:line="287" pos:column="23">)<pos:position pos:line="287" pos:column="24"/></operator></expr> <pos:position pos:line="287" pos:column="25"/></then><else pos:line="287" pos:column="25">: <expr><operator pos:line="287" pos:column="27">(<pos:position pos:line="287" pos:column="28"/></operator><name pos:line="287" pos:column="28">LINK_SIZE<pos:position pos:line="287" pos:column="37"/></name> <operator pos:line="287" pos:column="38">+<pos:position pos:line="287" pos:column="39"/></operator> <literal type="number" pos:line="287" pos:column="40">1<pos:position pos:line="287" pos:column="41"/></literal> <operator pos:line="287" pos:column="42">+<pos:position pos:line="287" pos:column="43"/></operator> <call><name pos:line="287" pos:column="44">GET<pos:position pos:line="287" pos:column="47"/></name><argument_list pos:line="287" pos:column="47">(<argument><expr><name pos:line="287" pos:column="48">ecode<pos:position pos:line="287" pos:column="53"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="287" pos:column="55">1<pos:position pos:line="287" pos:column="56"/></literal></expr></argument>)<pos:position pos:line="287" pos:column="57"/></argument_list></call><operator pos:line="287" pos:column="57">)<pos:position pos:line="287" pos:column="58"/></operator></expr></else></ternary><operator pos:line="287" pos:column="58">)<pos:position pos:line="287" pos:column="59"/></operator></expr></argument>,
        <argument><expr><name pos:line="288" pos:column="9">offset_top<pos:position pos:line="288" pos:column="19"/></name></expr></argument>, <argument><expr><name pos:line="288" pos:column="21">md<pos:position pos:line="288" pos:column="23"/></name></expr></argument>, <argument><expr><name pos:line="288" pos:column="25">ims<pos:position pos:line="288" pos:column="28"/></name></expr></argument>, <argument><expr><name pos:line="288" pos:column="30">eptrb<pos:position pos:line="288" pos:column="35"/></name></expr></argument>, <argument><expr><name pos:line="288" pos:column="37">match_isgroup<pos:position pos:line="288" pos:column="50"/></name></expr></argument>)<pos:position pos:line="288" pos:column="51"/></argument_list></call></expr>;<pos:position pos:line="288" pos:column="52"/></expr_stmt>
      <expr_stmt><expr><call><name pos:line="289" pos:column="7">RRETURN<pos:position pos:line="289" pos:column="14"/></name><argument_list pos:line="289" pos:column="14">(<argument><expr><name pos:line="289" pos:column="15">rrc<pos:position pos:line="289" pos:column="18"/></name></expr></argument>)<pos:position pos:line="289" pos:column="19"/></argument_list></call></expr>;<pos:position pos:line="289" pos:column="20"/></expr_stmt>
      }<pos:position pos:line="290" pos:column="8"/></block></then>

    <comment type="block" pos:line="292" pos:column="5">/* The condition is an assertion. Call match() to evaluate it - setting
    the final argument TRUE causes it to stop at the end of an assertion. */</comment>

    <else pos:line="295" pos:column="5">else
      <block pos:line="296" pos:column="7">{
      <expr_stmt><expr><call><name pos:line="297" pos:column="7">RMATCH<pos:position pos:line="297" pos:column="13"/></name><argument_list pos:line="297" pos:column="13">(<argument><expr><name pos:line="297" pos:column="14">rrc<pos:position pos:line="297" pos:column="17"/></name></expr></argument>, <argument><expr><name pos:line="297" pos:column="19">eptr<pos:position pos:line="297" pos:column="23"/></name></expr></argument>, <argument><expr><name pos:line="297" pos:column="25">ecode<pos:position pos:line="297" pos:column="30"/></name> <operator pos:line="297" pos:column="31">+<pos:position pos:line="297" pos:column="32"/></operator> <literal type="number" pos:line="297" pos:column="33">1<pos:position pos:line="297" pos:column="34"/></literal> <operator pos:line="297" pos:column="35">+<pos:position pos:line="297" pos:column="36"/></operator> <name pos:line="297" pos:column="37">LINK_SIZE<pos:position pos:line="297" pos:column="46"/></name></expr></argument>, <argument><expr><name pos:line="297" pos:column="48">offset_top<pos:position pos:line="297" pos:column="58"/></name></expr></argument>, <argument><expr><name pos:line="297" pos:column="60">md<pos:position pos:line="297" pos:column="62"/></name></expr></argument>, <argument><expr><name pos:line="297" pos:column="64">ims<pos:position pos:line="297" pos:column="67"/></name></expr></argument>, <argument><expr><name pos:line="297" pos:column="69">NULL<pos:position pos:line="297" pos:column="73"/></name></expr></argument>,
          <argument><expr><name pos:line="298" pos:column="11">match_condassert<pos:position pos:line="298" pos:column="27"/></name> <operator pos:line="298" pos:column="28">|<pos:position pos:line="298" pos:column="29"/></operator> <name pos:line="298" pos:column="30">match_isgroup<pos:position pos:line="298" pos:column="43"/></name></expr></argument>)<pos:position pos:line="298" pos:column="44"/></argument_list></call></expr>;<pos:position pos:line="298" pos:column="45"/></expr_stmt>
      <if pos:line="299" pos:column="7">if <condition pos:line="299" pos:column="10">(<expr><name pos:line="299" pos:column="11">rrc<pos:position pos:line="299" pos:column="14"/></name> <operator pos:line="299" pos:column="15">==<pos:position pos:line="299" pos:column="17"/></operator> <name pos:line="299" pos:column="18">MATCH_MATCH<pos:position pos:line="299" pos:column="29"/></name></expr>)<pos:position pos:line="299" pos:column="30"/></condition><then pos:line="299" pos:column="30">
        <block pos:line="300" pos:column="9">{
        <expr_stmt><expr><name pos:line="301" pos:column="9">ecode<pos:position pos:line="301" pos:column="14"/></name> <operator pos:line="301" pos:column="15">+=<pos:position pos:line="301" pos:column="17"/></operator> <literal type="number" pos:line="301" pos:column="18">1<pos:position pos:line="301" pos:column="19"/></literal> <operator pos:line="301" pos:column="20">+<pos:position pos:line="301" pos:column="21"/></operator> <name pos:line="301" pos:column="22">LINK_SIZE<pos:position pos:line="301" pos:column="31"/></name> <operator pos:line="301" pos:column="32">+<pos:position pos:line="301" pos:column="33"/></operator> <call><name pos:line="301" pos:column="34">GET<pos:position pos:line="301" pos:column="37"/></name><argument_list pos:line="301" pos:column="37">(<argument><expr><name pos:line="301" pos:column="38">ecode<pos:position pos:line="301" pos:column="43"/></name></expr></argument>, <argument><expr><name pos:line="301" pos:column="45">LINK_SIZE<pos:position pos:line="301" pos:column="54"/></name><operator pos:line="301" pos:column="54">+<pos:position pos:line="301" pos:column="55"/></operator><literal type="number" pos:line="301" pos:column="55">2<pos:position pos:line="301" pos:column="56"/></literal></expr></argument>)<pos:position pos:line="301" pos:column="57"/></argument_list></call></expr>;<pos:position pos:line="301" pos:column="58"/></expr_stmt>
        <while pos:line="302" pos:column="9">while <condition pos:line="302" pos:column="15">(<expr><operator pos:line="302" pos:column="16">*<pos:position pos:line="302" pos:column="17"/></operator><name pos:line="302" pos:column="17">ecode<pos:position pos:line="302" pos:column="22"/></name> <operator pos:line="302" pos:column="23">==<pos:position pos:line="302" pos:column="25"/></operator> <name pos:line="302" pos:column="26">OP_ALT<pos:position pos:line="302" pos:column="32"/></name></expr>)<pos:position pos:line="302" pos:column="33"/></condition> <block type="pseudo"><expr_stmt><expr><name pos:line="302" pos:column="34">ecode<pos:position pos:line="302" pos:column="39"/></name> <operator pos:line="302" pos:column="40">+=<pos:position pos:line="302" pos:column="42"/></operator> <call><name pos:line="302" pos:column="43">GET<pos:position pos:line="302" pos:column="46"/></name><argument_list pos:line="302" pos:column="46">(<argument><expr><name pos:line="302" pos:column="47">ecode<pos:position pos:line="302" pos:column="52"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="302" pos:column="54">1<pos:position pos:line="302" pos:column="55"/></literal></expr></argument>)<pos:position pos:line="302" pos:column="56"/></argument_list></call></expr>;<pos:position pos:line="302" pos:column="57"/></expr_stmt></block></while>
        }<pos:position pos:line="303" pos:column="10"/></block></then>
      <elseif pos:line="304" pos:column="7">else <if pos:line="304" pos:column="12">if <condition pos:line="304" pos:column="15">(<expr><name pos:line="304" pos:column="16">rrc<pos:position pos:line="304" pos:column="19"/></name> <operator pos:line="304" pos:column="20">!=<pos:position pos:line="304" pos:column="22"/></operator> <name pos:line="304" pos:column="23">MATCH_NOMATCH<pos:position pos:line="304" pos:column="36"/></name></expr>)<pos:position pos:line="304" pos:column="37"/></condition><then pos:line="304" pos:column="37">
        <block pos:line="305" pos:column="9">{
        <expr_stmt><expr><call><name pos:line="306" pos:column="9">RRETURN<pos:position pos:line="306" pos:column="16"/></name><argument_list pos:line="306" pos:column="16">(<argument><expr><name pos:line="306" pos:column="17">rrc<pos:position pos:line="306" pos:column="20"/></name></expr></argument>)<pos:position pos:line="306" pos:column="21"/></argument_list></call></expr>;<pos:position pos:line="306" pos:column="22"/></expr_stmt>         <comment type="block" pos:line="306" pos:column="31">/* Need braces because of following else */</comment>
        }<pos:position pos:line="307" pos:column="10"/></block></then></if></elseif>
      <else pos:line="308" pos:column="7">else <block type="pseudo"><expr_stmt><expr><name pos:line="308" pos:column="12">ecode<pos:position pos:line="308" pos:column="17"/></name> <operator pos:line="308" pos:column="18">+=<pos:position pos:line="308" pos:column="20"/></operator> <call><name pos:line="308" pos:column="21">GET<pos:position pos:line="308" pos:column="24"/></name><argument_list pos:line="308" pos:column="24">(<argument><expr><name pos:line="308" pos:column="25">ecode<pos:position pos:line="308" pos:column="30"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="308" pos:column="32">1<pos:position pos:line="308" pos:column="33"/></literal></expr></argument>)<pos:position pos:line="308" pos:column="34"/></argument_list></call></expr>;<pos:position pos:line="308" pos:column="35"/></expr_stmt></block></else></if>
      <expr_stmt><expr><call><name pos:line="309" pos:column="7">RMATCH<pos:position pos:line="309" pos:column="13"/></name><argument_list pos:line="309" pos:column="13">(<argument><expr><name pos:line="309" pos:column="14">rrc<pos:position pos:line="309" pos:column="17"/></name></expr></argument>, <argument><expr><name pos:line="309" pos:column="19">eptr<pos:position pos:line="309" pos:column="23"/></name></expr></argument>, <argument><expr><name pos:line="309" pos:column="25">ecode<pos:position pos:line="309" pos:column="30"/></name> <operator pos:line="309" pos:column="31">+<pos:position pos:line="309" pos:column="32"/></operator> <literal type="number" pos:line="309" pos:column="33">1<pos:position pos:line="309" pos:column="34"/></literal> <operator pos:line="309" pos:column="35">+<pos:position pos:line="309" pos:column="36"/></operator> <name pos:line="309" pos:column="37">LINK_SIZE<pos:position pos:line="309" pos:column="46"/></name></expr></argument>, <argument><expr><name pos:line="309" pos:column="48">offset_top<pos:position pos:line="309" pos:column="58"/></name></expr></argument>, <argument><expr><name pos:line="309" pos:column="60">md<pos:position pos:line="309" pos:column="62"/></name></expr></argument>, <argument><expr><name pos:line="309" pos:column="64">ims<pos:position pos:line="309" pos:column="67"/></name></expr></argument>, <argument><expr><name pos:line="309" pos:column="69">eptrb<pos:position pos:line="309" pos:column="74"/></name></expr></argument>,
        <argument><expr><name pos:line="310" pos:column="9">match_isgroup<pos:position pos:line="310" pos:column="22"/></name></expr></argument>)<pos:position pos:line="310" pos:column="23"/></argument_list></call></expr>;<pos:position pos:line="310" pos:column="24"/></expr_stmt>
      <expr_stmt><expr><call><name pos:line="311" pos:column="7">RRETURN<pos:position pos:line="311" pos:column="14"/></name><argument_list pos:line="311" pos:column="14">(<argument><expr><name pos:line="311" pos:column="15">rrc<pos:position pos:line="311" pos:column="18"/></name></expr></argument>)<pos:position pos:line="311" pos:column="19"/></argument_list></call></expr>;<pos:position pos:line="311" pos:column="20"/></expr_stmt>
      }<pos:position pos:line="312" pos:column="8"/></block></else></if>
    <comment type="block" pos:line="313" pos:column="5">/* Control never reaches here */</comment>

    <comment type="block" pos:line="315" pos:column="5">/* Skip over conditional reference or large extraction number data if
    encountered. */</comment>

    <case pos:line="318" pos:column="5">case <expr><name pos:line="318" pos:column="10">OP_CREF<pos:position pos:line="318" pos:column="17"/></name></expr>:<pos:position pos:line="318" pos:column="18"/></case>
    <case pos:line="319" pos:column="5">case <expr><name pos:line="319" pos:column="10">OP_BRANUMBER<pos:position pos:line="319" pos:column="22"/></name></expr>:<pos:position pos:line="319" pos:column="23"/></case>
    <expr_stmt><expr><name pos:line="320" pos:column="5">ecode<pos:position pos:line="320" pos:column="10"/></name> <operator pos:line="320" pos:column="11">+=<pos:position pos:line="320" pos:column="13"/></operator> <literal type="number" pos:line="320" pos:column="14">3<pos:position pos:line="320" pos:column="15"/></literal></expr>;<pos:position pos:line="320" pos:column="16"/></expr_stmt>
    <break pos:line="321" pos:column="5">break;<pos:position pos:line="321" pos:column="11"/></break>

    <comment type="block" pos:line="323" pos:column="5">/* End of the pattern. If we are in a recursion, we should restore the
    offsets appropriately and continue from after the call. */</comment>

    <case pos:line="326" pos:column="5">case <expr><name pos:line="326" pos:column="10">OP_END<pos:position pos:line="326" pos:column="16"/></name></expr>:<pos:position pos:line="326" pos:column="17"/></case>
    <if pos:line="327" pos:column="5">if <condition pos:line="327" pos:column="8">(<expr><name><name pos:line="327" pos:column="9">md<pos:position pos:line="327" pos:column="11"/></name><operator pos:line="327" pos:column="11">-&gt;<pos:position pos:line="327" pos:column="16"/></operator><name pos:line="327" pos:column="13">recursive<pos:position pos:line="327" pos:column="22"/></name></name> <operator pos:line="327" pos:column="23">!=<pos:position pos:line="327" pos:column="25"/></operator> <name pos:line="327" pos:column="26">NULL<pos:position pos:line="327" pos:column="30"/></name> <operator pos:line="327" pos:column="31">&amp;&amp;<pos:position pos:line="327" pos:column="41"/></operator> <name><name pos:line="327" pos:column="34">md<pos:position pos:line="327" pos:column="36"/></name><operator pos:line="327" pos:column="36">-&gt;<pos:position pos:line="327" pos:column="41"/></operator><name pos:line="327" pos:column="38">recursive<pos:position pos:line="327" pos:column="47"/></name><operator pos:line="327" pos:column="47">-&gt;<pos:position pos:line="327" pos:column="52"/></operator><name pos:line="327" pos:column="49">group_num<pos:position pos:line="327" pos:column="58"/></name></name> <operator pos:line="327" pos:column="59">==<pos:position pos:line="327" pos:column="61"/></operator> <literal type="number" pos:line="327" pos:column="62">0<pos:position pos:line="327" pos:column="63"/></literal></expr>)<pos:position pos:line="327" pos:column="64"/></condition><then pos:line="327" pos:column="64">
      <block pos:line="328" pos:column="7">{
      <decl_stmt><decl><type><name pos:line="329" pos:column="7">recursion_info<pos:position pos:line="329" pos:column="21"/></name> <modifier pos:line="329" pos:column="22">*<pos:position pos:line="329" pos:column="23"/></modifier></type><name pos:line="329" pos:column="23">rec<pos:position pos:line="329" pos:column="26"/></name> <init pos:line="329" pos:column="27">= <expr><name><name pos:line="329" pos:column="29">md<pos:position pos:line="329" pos:column="31"/></name><operator pos:line="329" pos:column="31">-&gt;<pos:position pos:line="329" pos:column="36"/></operator><name pos:line="329" pos:column="33">recursive<pos:position pos:line="329" pos:column="42"/></name></name></expr></init></decl>;<pos:position pos:line="329" pos:column="43"/></decl_stmt>
      <expr_stmt><expr><call><name pos:line="330" pos:column="7">DPRINTF<pos:position pos:line="330" pos:column="14"/></name><argument_list pos:line="330" pos:column="14">(<argument><expr><operator pos:line="330" pos:column="15">(<pos:position pos:line="330" pos:column="16"/></operator><literal type="string" pos:line="330" pos:column="16">"Hit the end in a (?0) recursion\n"<pos:position pos:line="330" pos:column="51"/></literal><operator pos:line="330" pos:column="51">)<pos:position pos:line="330" pos:column="52"/></operator></expr></argument>)<pos:position pos:line="330" pos:column="53"/></argument_list></call></expr>;<pos:position pos:line="330" pos:column="54"/></expr_stmt>
      <expr_stmt><expr><name><name pos:line="331" pos:column="7">md<pos:position pos:line="331" pos:column="9"/></name><operator pos:line="331" pos:column="9">-&gt;<pos:position pos:line="331" pos:column="14"/></operator><name pos:line="331" pos:column="11">recursive<pos:position pos:line="331" pos:column="20"/></name></name> <operator pos:line="331" pos:column="21">=<pos:position pos:line="331" pos:column="22"/></operator> <name><name pos:line="331" pos:column="23">rec<pos:position pos:line="331" pos:column="26"/></name><operator pos:line="331" pos:column="26">-&gt;<pos:position pos:line="331" pos:column="31"/></operator><name pos:line="331" pos:column="28">prevrec<pos:position pos:line="331" pos:column="35"/></name></name></expr>;<pos:position pos:line="331" pos:column="36"/></expr_stmt>
      <expr_stmt><expr><call><name pos:line="332" pos:column="7">memmove<pos:position pos:line="332" pos:column="14"/></name><argument_list pos:line="332" pos:column="14">(<argument><expr><name><name pos:line="332" pos:column="15">md<pos:position pos:line="332" pos:column="17"/></name><operator pos:line="332" pos:column="17">-&gt;<pos:position pos:line="332" pos:column="22"/></operator><name pos:line="332" pos:column="19">offset_vector<pos:position pos:line="332" pos:column="32"/></name></name></expr></argument>, <argument><expr><name><name pos:line="332" pos:column="34">rec<pos:position pos:line="332" pos:column="37"/></name><operator pos:line="332" pos:column="37">-&gt;<pos:position pos:line="332" pos:column="42"/></operator><name pos:line="332" pos:column="39">offset_save<pos:position pos:line="332" pos:column="50"/></name></name></expr></argument>,
        <argument><expr><name><name pos:line="333" pos:column="9">rec<pos:position pos:line="333" pos:column="12"/></name><operator pos:line="333" pos:column="12">-&gt;<pos:position pos:line="333" pos:column="17"/></operator><name pos:line="333" pos:column="14">saved_max<pos:position pos:line="333" pos:column="23"/></name></name> <operator pos:line="333" pos:column="24">*<pos:position pos:line="333" pos:column="25"/></operator> <sizeof pos:line="333" pos:column="26">sizeof<argument_list pos:line="333" pos:column="32">(<argument><expr><name pos:line="333" pos:column="33">int<pos:position pos:line="333" pos:column="36"/></name></expr></argument>)<pos:position pos:line="333" pos:column="37"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="333" pos:column="38"/></argument_list></call></expr>;<pos:position pos:line="333" pos:column="39"/></expr_stmt>
      <expr_stmt><expr><name><name pos:line="334" pos:column="7">md<pos:position pos:line="334" pos:column="9"/></name><operator pos:line="334" pos:column="9">-&gt;<pos:position pos:line="334" pos:column="14"/></operator><name pos:line="334" pos:column="11">start_match<pos:position pos:line="334" pos:column="22"/></name></name> <operator pos:line="334" pos:column="23">=<pos:position pos:line="334" pos:column="24"/></operator> <name><name pos:line="334" pos:column="25">rec<pos:position pos:line="334" pos:column="28"/></name><operator pos:line="334" pos:column="28">-&gt;<pos:position pos:line="334" pos:column="33"/></operator><name pos:line="334" pos:column="30">save_start<pos:position pos:line="334" pos:column="40"/></name></name></expr>;<pos:position pos:line="334" pos:column="41"/></expr_stmt>
      <expr_stmt><expr><name pos:line="335" pos:column="7">ims<pos:position pos:line="335" pos:column="10"/></name> <operator pos:line="335" pos:column="11">=<pos:position pos:line="335" pos:column="12"/></operator> <name pos:line="335" pos:column="13">original_ims<pos:position pos:line="335" pos:column="25"/></name></expr>;<pos:position pos:line="335" pos:column="26"/></expr_stmt>
      <expr_stmt><expr><name pos:line="336" pos:column="7">ecode<pos:position pos:line="336" pos:column="12"/></name> <operator pos:line="336" pos:column="13">=<pos:position pos:line="336" pos:column="14"/></operator> <name><name pos:line="336" pos:column="15">rec<pos:position pos:line="336" pos:column="18"/></name><operator pos:line="336" pos:column="18">-&gt;<pos:position pos:line="336" pos:column="23"/></operator><name pos:line="336" pos:column="20">after_call<pos:position pos:line="336" pos:column="30"/></name></name></expr>;<pos:position pos:line="336" pos:column="31"/></expr_stmt>
      <break pos:line="337" pos:column="7">break;<pos:position pos:line="337" pos:column="13"/></break>
      }<pos:position pos:line="338" pos:column="8"/></block></then></if>

    <comment type="block" pos:line="340" pos:column="5">/* Otherwise, if PCRE_NOTEMPTY is set, fail if we have matched an empty
    string - backtracking will then try other alternatives, if any. */</comment>

    <if pos:line="343" pos:column="5">if <condition pos:line="343" pos:column="8">(<expr><name><name pos:line="343" pos:column="9">md<pos:position pos:line="343" pos:column="11"/></name><operator pos:line="343" pos:column="11">-&gt;<pos:position pos:line="343" pos:column="16"/></operator><name pos:line="343" pos:column="13">notempty<pos:position pos:line="343" pos:column="21"/></name></name> <operator pos:line="343" pos:column="22">&amp;&amp;<pos:position pos:line="343" pos:column="32"/></operator> <name pos:line="343" pos:column="25">eptr<pos:position pos:line="343" pos:column="29"/></name> <operator pos:line="343" pos:column="30">==<pos:position pos:line="343" pos:column="32"/></operator> <name><name pos:line="343" pos:column="33">md<pos:position pos:line="343" pos:column="35"/></name><operator pos:line="343" pos:column="35">-&gt;<pos:position pos:line="343" pos:column="40"/></operator><name pos:line="343" pos:column="37">start_match<pos:position pos:line="343" pos:column="48"/></name></name></expr>)<pos:position pos:line="343" pos:column="49"/></condition><then pos:line="343" pos:column="49"> <block type="pseudo"><expr_stmt><expr><call><name pos:line="343" pos:column="50">RRETURN<pos:position pos:line="343" pos:column="57"/></name><argument_list pos:line="343" pos:column="57">(<argument><expr><name pos:line="343" pos:column="58">MATCH_NOMATCH<pos:position pos:line="343" pos:column="71"/></name></expr></argument>)<pos:position pos:line="343" pos:column="72"/></argument_list></call></expr>;<pos:position pos:line="343" pos:column="73"/></expr_stmt></block></then></if>
    <expr_stmt><expr><name><name pos:line="344" pos:column="5">md<pos:position pos:line="344" pos:column="7"/></name><operator pos:line="344" pos:column="7">-&gt;<pos:position pos:line="344" pos:column="12"/></operator><name pos:line="344" pos:column="9">end_match_ptr<pos:position pos:line="344" pos:column="22"/></name></name> <operator pos:line="344" pos:column="23">=<pos:position pos:line="344" pos:column="24"/></operator> <name pos:line="344" pos:column="25">eptr<pos:position pos:line="344" pos:column="29"/></name></expr>;<pos:position pos:line="344" pos:column="30"/></expr_stmt>          <comment type="block" pos:line="344" pos:column="40">/* Record where we ended */</comment>
    <expr_stmt><expr><name><name pos:line="345" pos:column="5">md<pos:position pos:line="345" pos:column="7"/></name><operator pos:line="345" pos:column="7">-&gt;<pos:position pos:line="345" pos:column="12"/></operator><name pos:line="345" pos:column="9">end_offset_top<pos:position pos:line="345" pos:column="23"/></name></name> <operator pos:line="345" pos:column="24">=<pos:position pos:line="345" pos:column="25"/></operator> <name pos:line="345" pos:column="26">offset_top<pos:position pos:line="345" pos:column="36"/></name></expr>;<pos:position pos:line="345" pos:column="37"/></expr_stmt>   <comment type="block" pos:line="345" pos:column="40">/* and how many extracts were taken */</comment>
    <expr_stmt><expr><call><name pos:line="346" pos:column="5">RRETURN<pos:position pos:line="346" pos:column="12"/></name><argument_list pos:line="346" pos:column="12">(<argument><expr><name pos:line="346" pos:column="13">MATCH_MATCH<pos:position pos:line="346" pos:column="24"/></name></expr></argument>)<pos:position pos:line="346" pos:column="25"/></argument_list></call></expr>;<pos:position pos:line="346" pos:column="26"/></expr_stmt>

    <comment type="block" pos:line="348" pos:column="5">/* Change option settings */</comment>

    <case pos:line="350" pos:column="5">case <expr><name pos:line="350" pos:column="10">OP_OPT<pos:position pos:line="350" pos:column="16"/></name></expr>:<pos:position pos:line="350" pos:column="17"/></case>
    <expr_stmt><expr><name pos:line="351" pos:column="5">ims<pos:position pos:line="351" pos:column="8"/></name> <operator pos:line="351" pos:column="9">=<pos:position pos:line="351" pos:column="10"/></operator> <name><name pos:line="351" pos:column="11">ecode<pos:position pos:line="351" pos:column="16"/></name><index pos:line="351" pos:column="16">[<expr><literal type="number" pos:line="351" pos:column="17">1<pos:position pos:line="351" pos:column="18"/></literal></expr>]<pos:position pos:line="351" pos:column="19"/></index></name></expr>;<pos:position pos:line="351" pos:column="20"/></expr_stmt>
    <expr_stmt><expr><name pos:line="352" pos:column="5">ecode<pos:position pos:line="352" pos:column="10"/></name> <operator pos:line="352" pos:column="11">+=<pos:position pos:line="352" pos:column="13"/></operator> <literal type="number" pos:line="352" pos:column="14">2<pos:position pos:line="352" pos:column="15"/></literal></expr>;<pos:position pos:line="352" pos:column="16"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="353" pos:column="5">DPRINTF<pos:position pos:line="353" pos:column="12"/></name><argument_list pos:line="353" pos:column="12">(<argument><expr><operator pos:line="353" pos:column="13">(<pos:position pos:line="353" pos:column="14"/></operator><literal type="string" pos:line="353" pos:column="14">"ims set to %02lx\n"<pos:position pos:line="353" pos:column="34"/></literal><operator pos:line="353" pos:column="34">,<pos:position pos:line="353" pos:column="35"/></operator> <name pos:line="353" pos:column="36">ims<pos:position pos:line="353" pos:column="39"/></name><operator pos:line="353" pos:column="39">)<pos:position pos:line="353" pos:column="40"/></operator></expr></argument>)<pos:position pos:line="353" pos:column="41"/></argument_list></call></expr>;<pos:position pos:line="353" pos:column="42"/></expr_stmt>
    <break pos:line="354" pos:column="5">break;<pos:position pos:line="354" pos:column="11"/></break>

    <comment type="block" pos:line="356" pos:column="5">/* Assertion brackets. Check the alternative branches in turn - the
    matching won't pass the KET for an assertion. If any one branch matches,
    the assertion is true. Lookbehind assertions have an OP_REVERSE item at the
    start of each branch to move the current point backwards, so the code at
    this level is identical to the lookahead case. */</comment>

    <case pos:line="362" pos:column="5">case <expr><name pos:line="362" pos:column="10">OP_ASSERT<pos:position pos:line="362" pos:column="19"/></name></expr>:<pos:position pos:line="362" pos:column="20"/></case>
    <case pos:line="363" pos:column="5">case <expr><name pos:line="363" pos:column="10">OP_ASSERTBACK<pos:position pos:line="363" pos:column="23"/></name></expr>:<pos:position pos:line="363" pos:column="24"/></case>
    <do pos:line="364" pos:column="5">do
      <block pos:line="365" pos:column="7">{
      <expr_stmt><expr><call><name pos:line="366" pos:column="7">RMATCH<pos:position pos:line="366" pos:column="13"/></name><argument_list pos:line="366" pos:column="13">(<argument><expr><name pos:line="366" pos:column="14">rrc<pos:position pos:line="366" pos:column="17"/></name></expr></argument>, <argument><expr><name pos:line="366" pos:column="19">eptr<pos:position pos:line="366" pos:column="23"/></name></expr></argument>, <argument><expr><name pos:line="366" pos:column="25">ecode<pos:position pos:line="366" pos:column="30"/></name> <operator pos:line="366" pos:column="31">+<pos:position pos:line="366" pos:column="32"/></operator> <literal type="number" pos:line="366" pos:column="33">1<pos:position pos:line="366" pos:column="34"/></literal> <operator pos:line="366" pos:column="35">+<pos:position pos:line="366" pos:column="36"/></operator> <name pos:line="366" pos:column="37">LINK_SIZE<pos:position pos:line="366" pos:column="46"/></name></expr></argument>, <argument><expr><name pos:line="366" pos:column="48">offset_top<pos:position pos:line="366" pos:column="58"/></name></expr></argument>, <argument><expr><name pos:line="366" pos:column="60">md<pos:position pos:line="366" pos:column="62"/></name></expr></argument>, <argument><expr><name pos:line="366" pos:column="64">ims<pos:position pos:line="366" pos:column="67"/></name></expr></argument>, <argument><expr><name pos:line="366" pos:column="69">NULL<pos:position pos:line="366" pos:column="73"/></name></expr></argument>,
        <argument><expr><name pos:line="367" pos:column="9">match_isgroup<pos:position pos:line="367" pos:column="22"/></name></expr></argument>)<pos:position pos:line="367" pos:column="23"/></argument_list></call></expr>;<pos:position pos:line="367" pos:column="24"/></expr_stmt>
      <if pos:line="368" pos:column="7">if <condition pos:line="368" pos:column="10">(<expr><name pos:line="368" pos:column="11">rrc<pos:position pos:line="368" pos:column="14"/></name> <operator pos:line="368" pos:column="15">==<pos:position pos:line="368" pos:column="17"/></operator> <name pos:line="368" pos:column="18">MATCH_MATCH<pos:position pos:line="368" pos:column="29"/></name></expr>)<pos:position pos:line="368" pos:column="30"/></condition><then pos:line="368" pos:column="30"> <block type="pseudo"><break pos:line="368" pos:column="31">break;<pos:position pos:line="368" pos:column="37"/></break></block></then></if>
      <if pos:line="369" pos:column="7">if <condition pos:line="369" pos:column="10">(<expr><name pos:line="369" pos:column="11">rrc<pos:position pos:line="369" pos:column="14"/></name> <operator pos:line="369" pos:column="15">!=<pos:position pos:line="369" pos:column="17"/></operator> <name pos:line="369" pos:column="18">MATCH_NOMATCH<pos:position pos:line="369" pos:column="31"/></name></expr>)<pos:position pos:line="369" pos:column="32"/></condition><then pos:line="369" pos:column="32"> <block type="pseudo"><expr_stmt><expr><call><name pos:line="369" pos:column="33">RRETURN<pos:position pos:line="369" pos:column="40"/></name><argument_list pos:line="369" pos:column="40">(<argument><expr><name pos:line="369" pos:column="41">rrc<pos:position pos:line="369" pos:column="44"/></name></expr></argument>)<pos:position pos:line="369" pos:column="45"/></argument_list></call></expr>;<pos:position pos:line="369" pos:column="46"/></expr_stmt></block></then></if>
      <expr_stmt><expr><name pos:line="370" pos:column="7">ecode<pos:position pos:line="370" pos:column="12"/></name> <operator pos:line="370" pos:column="13">+=<pos:position pos:line="370" pos:column="15"/></operator> <call><name pos:line="370" pos:column="16">GET<pos:position pos:line="370" pos:column="19"/></name><argument_list pos:line="370" pos:column="19">(<argument><expr><name pos:line="370" pos:column="20">ecode<pos:position pos:line="370" pos:column="25"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="370" pos:column="27">1<pos:position pos:line="370" pos:column="28"/></literal></expr></argument>)<pos:position pos:line="370" pos:column="29"/></argument_list></call></expr>;<pos:position pos:line="370" pos:column="30"/></expr_stmt>
      }<pos:position pos:line="371" pos:column="8"/></block>
    while <condition pos:line="372" pos:column="11">(<expr><operator pos:line="372" pos:column="12">*<pos:position pos:line="372" pos:column="13"/></operator><name pos:line="372" pos:column="13">ecode<pos:position pos:line="372" pos:column="18"/></name> <operator pos:line="372" pos:column="19">==<pos:position pos:line="372" pos:column="21"/></operator> <name pos:line="372" pos:column="22">OP_ALT<pos:position pos:line="372" pos:column="28"/></name></expr>)<pos:position pos:line="372" pos:column="29"/></condition>;<pos:position pos:line="372" pos:column="30"/></do>
    <if pos:line="373" pos:column="5">if <condition pos:line="373" pos:column="8">(<expr><operator pos:line="373" pos:column="9">*<pos:position pos:line="373" pos:column="10"/></operator><name pos:line="373" pos:column="10">ecode<pos:position pos:line="373" pos:column="15"/></name> <operator pos:line="373" pos:column="16">==<pos:position pos:line="373" pos:column="18"/></operator> <name pos:line="373" pos:column="19">OP_KET<pos:position pos:line="373" pos:column="25"/></name></expr>)<pos:position pos:line="373" pos:column="26"/></condition><then pos:line="373" pos:column="26"> <block type="pseudo"><expr_stmt><expr><call><name pos:line="373" pos:column="27">RRETURN<pos:position pos:line="373" pos:column="34"/></name><argument_list pos:line="373" pos:column="34">(<argument><expr><name pos:line="373" pos:column="35">MATCH_NOMATCH<pos:position pos:line="373" pos:column="48"/></name></expr></argument>)<pos:position pos:line="373" pos:column="49"/></argument_list></call></expr>;<pos:position pos:line="373" pos:column="50"/></expr_stmt></block></then></if>

    <comment type="block" pos:line="375" pos:column="5">/* If checking an assertion for a condition, return MATCH_MATCH. */</comment>

    <if pos:line="377" pos:column="5">if <condition pos:line="377" pos:column="8">(<expr><operator pos:line="377" pos:column="9">(<pos:position pos:line="377" pos:column="10"/></operator><name pos:line="377" pos:column="10">flags<pos:position pos:line="377" pos:column="15"/></name> <operator pos:line="377" pos:column="16">&amp;<pos:position pos:line="377" pos:column="21"/></operator> <name pos:line="377" pos:column="18">match_condassert<pos:position pos:line="377" pos:column="34"/></name><operator pos:line="377" pos:column="34">)<pos:position pos:line="377" pos:column="35"/></operator> <operator pos:line="377" pos:column="36">!=<pos:position pos:line="377" pos:column="38"/></operator> <literal type="number" pos:line="377" pos:column="39">0<pos:position pos:line="377" pos:column="40"/></literal></expr>)<pos:position pos:line="377" pos:column="41"/></condition><then pos:line="377" pos:column="41"> <block type="pseudo"><expr_stmt><expr><call><name pos:line="377" pos:column="42">RRETURN<pos:position pos:line="377" pos:column="49"/></name><argument_list pos:line="377" pos:column="49">(<argument><expr><name pos:line="377" pos:column="50">MATCH_MATCH<pos:position pos:line="377" pos:column="61"/></name></expr></argument>)<pos:position pos:line="377" pos:column="62"/></argument_list></call></expr>;<pos:position pos:line="377" pos:column="63"/></expr_stmt></block></then></if>

    <comment type="block" pos:line="379" pos:column="5">/* Continue from after the assertion, updating the offsets high water
    mark, since extracts may have been taken during the assertion. */</comment>

    <do pos:line="382" pos:column="5">do <block type="pseudo"><expr_stmt><expr><name pos:line="382" pos:column="8">ecode<pos:position pos:line="382" pos:column="13"/></name> <operator pos:line="382" pos:column="14">+=<pos:position pos:line="382" pos:column="16"/></operator> <call><name pos:line="382" pos:column="17">GET<pos:position pos:line="382" pos:column="20"/></name><argument_list pos:line="382" pos:column="20">(<argument><expr><name pos:line="382" pos:column="21">ecode<pos:position pos:line="382" pos:column="26"/></name></expr></argument>,<argument><expr><literal type="number" pos:line="382" pos:column="27">1<pos:position pos:line="382" pos:column="28"/></literal></expr></argument>)<pos:position pos:line="382" pos:column="29"/></argument_list></call></expr>;<pos:position pos:line="382" pos:column="30"/></expr_stmt></block> while <condition pos:line="382" pos:column="37">(<expr><operator pos:line="382" pos:column="38">*<pos:position pos:line="382" pos:column="39"/></operator><name pos:line="382" pos:column="39">ecode<pos:position pos:line="382" pos:column="44"/></name> <operator pos:line="382" pos:column="45">==<pos:position pos:line="382" pos:column="47"/></operator> <name pos:line="382" pos:column="48">OP_ALT<pos:position pos:line="382" pos:column="54"/></name></expr>)<pos:position pos:line="382" pos:column="55"/></condition>;<pos:position pos:line="382" pos:column="56"/></do>
    <expr_stmt><expr><name pos:line="383" pos:column="5">ecode<pos:position pos:line="383" pos:column="10"/></name> <operator pos:line="383" pos:column="11">+=<pos:position pos:line="383" pos:column="13"/></operator> <literal type="number" pos:line="383" pos:column="14">1<pos:position pos:line="383" pos:column="15"/></literal> <operator pos:line="383" pos:column="16">+<pos:position pos:line="383" pos:column="17"/></operator> <name pos:line="383" pos:column="18">LINK_SIZE<pos:position pos:line="383" pos:column="27"/></name></expr>;<pos:position pos:line="383" pos:column="28"/></expr_stmt>
    <expr_stmt><expr><name pos:line="384" pos:column="5">offset_top<pos:position pos:line="384" pos:column="15"/></name> <operator pos:line="384" pos:column="16">=<pos:position pos:line="384" pos:column="17"/></operator> <name><name pos:line="384" pos:column="18">md<pos:position pos:line="384" pos:column="20"/></name><operator pos:line="384" pos:column="20">-&gt;<pos:position pos:line="384" pos:column="25"/></operator><name pos:line="384" pos:column="22">end_offset_top<pos:position pos:line="384" pos:column="36"/></name></name></expr>;<pos:position pos:line="384" pos:column="37"/></expr_stmt>
    <continue pos:line="385" pos:column="5">continue;<pos:position pos:line="385" pos:column="14"/></continue>

    <comment type="block" pos:line="387" pos:column="5">/* Negative assertion: all branches must fail to match */</comment>

    <case pos:line="389" pos:column="5">case <expr><name pos:line="389" pos:column="10">OP_ASSERT_NOT<pos:position pos:line="389" pos:column="23"/></name></expr>:<pos:position pos:line="389" pos:column="24"/></case>
    <case pos:line="390" pos:column="5">case <expr><name pos:line="390" pos:column="10">OP_ASSERTBACK_NOT<pos:position pos:line="390" pos:column="27"/></name></expr>:<pos:position pos:line="390" pos:column="28"/></case>
    <do pos:line="391" pos:column="5">do
      <block pos:line="392" pos:column="7">{
      <expr_stmt><expr><call><name pos:line="393" pos:column="7">RMATCH<pos:position pos:line="393" pos:column="13"/></name><argument_list pos:line="393" pos:column="13">(<argument><expr><name pos:line="393" pos:column="14">rrc<pos:position pos:line="393" pos:column="17"/></name></expr></argument>, <argument><expr><name pos:line="393" pos:column="19">eptr<pos:position pos:line="393" pos:column="23"/></name></expr></argument>, <argument><expr><name pos:line="393" pos:column="25">ecode<pos:position pos:line="393" pos:column="30"/></name> <operator pos:line="393" pos:column="31">+<pos:position pos:line="393" pos:column="32"/></operator> <literal type="number" pos:line="393" pos:column="33">1<pos:position pos:line="393" pos:column="34"/></literal> <operator pos:line="393" pos:column="35">+<pos:position pos:line="393" pos:column="36"/></operator> <name pos:line="393" pos:column="37">LINK_SIZE<pos:position pos:line="393" pos:column="46"/></name></expr></argument>, <argument><expr><name pos:line="393" pos:column="48">offset_top<pos:position pos:line="393" pos:column="58"/></name></expr></argument>, <argument><expr><name pos:line="393" pos:column="60">md<pos:position pos:line="393" pos:column="62"/></name></expr></argument>, <argument><expr><name pos:line="393" pos:column="64">ims<pos:position pos:line="393" pos:column="67"/></name></expr></argument>, <argument><expr><name pos:line="393" pos:column="69">NULL<pos:position pos:line="393" pos:column="73"/></name></expr></argument>,
        <argument><expr><name pos:line="394" pos:column="9">match_isgroup<pos:position pos:line="394" pos:column="22"/></name></expr></argument>)<pos:position pos:line="394" pos:column="23"/></argument_list></call></expr>;<pos:position pos:line="394" pos:column="24"/></expr_stmt>
      <if pos:line="395" pos:column="7">if <condition pos:line="395" pos:column="10">(<expr><name pos:line="395" pos:column="11">rrc<pos:position pos:line="395" pos:column="14"/></name> <operator pos:line="395" pos:column="15">==<pos:position pos:line="395" pos:column="17"/></operator> <name pos:line="395" pos:column="18">MATCH_MATCH<pos:position pos:line="395" pos:column="29"/></name></expr>)<pos:position pos:line="395" pos:column="30"/></condition><then pos:line="395" pos:column="30"> <block type="pseudo"><expr_stmt><expr><call><name pos:line="395" pos:column="31">RRETURN<pos:position pos:line="395" pos:column="38"/></name><argument_list pos:line="395" pos:column="38">(<argument><expr><name pos:line="395" pos:column="39">MATCH_NOMATCH<pos:position pos:line="395" pos:column="52"/></name></expr></argument>)<pos:position pos:line="395" pos:column="53"/></argument_list></call></expr>;<pos:position pos:line="395" pos:column="54"/></expr_stmt></block></then></if>
      <if pos:line="396" pos:column="7">if <condition pos:line="396" pos:column="10">(<expr><name pos:line="396" pos:column="11">rrc<pos:position pos:line="396" pos:column="14"/></name> <operator pos:line="396" pos:column="15">!=<pos:position pos:line="396" pos:column="17"/></operator> <name pos:line="396" pos:column="18">MATCH_NOMATCH<pos:position pos:line="396" pos:column="31"/></name></expr>)<pos:position pos:line="396" pos:column="32"/></condition><then pos:line="396" pos:column="32"> <block type="pseudo"><expr_stmt><expr><call><name pos:line="396" pos:column="33">RRETURN<pos:position pos:line="396" pos:column="40"/></name><argument_list pos:line="396" pos:column="40">(<argument><expr><name pos:line="396" pos:column="41">rrc<pos:position pos:line="396" pos:column="44"/></name></expr></argument>)<pos:position pos:line="396" pos:column="45"/></argument_list></call></expr>;<pos:position pos:line="396" pos:column="46"/></expr_stmt></block></then></if>
      <expr_stmt><expr><name pos:line="397" pos:column="7">ecode<pos:position pos:line="397" pos:column="12"/></name> <operator pos:line="397" pos:column="13">+=<pos:position pos:line="397" pos:column="15"/></operator> <call><name pos:line="397" pos:column="16">GET<pos:position pos:line="397" pos:column="19"/></name><argument_list pos:line="397" pos:column="19">(<argument><expr><name pos:line="397" pos:column="20">ecode<pos:position pos:line="397" pos:column="25"/></name></expr></argument>,<argument><expr><literal type="number" pos:line="397" pos:column="26">1<pos:position pos:line="397" pos:column="27"/></literal></expr></argument>)<pos:position pos:line="397" pos:column="28"/></argument_list></call></expr>;<pos:position pos:line="397" pos:column="29"/></expr_stmt>
      }<pos:position pos:line="398" pos:column="8"/></block>
    while <condition pos:line="399" pos:column="11">(<expr><operator pos:line="399" pos:column="12">*<pos:position pos:line="399" pos:column="13"/></operator><name pos:line="399" pos:column="13">ecode<pos:position pos:line="399" pos:column="18"/></name> <operator pos:line="399" pos:column="19">==<pos:position pos:line="399" pos:column="21"/></operator> <name pos:line="399" pos:column="22">OP_ALT<pos:position pos:line="399" pos:column="28"/></name></expr>)<pos:position pos:line="399" pos:column="29"/></condition>;<pos:position pos:line="399" pos:column="30"/></do>

    <if pos:line="401" pos:column="5">if <condition pos:line="401" pos:column="8">(<expr><operator pos:line="401" pos:column="9">(<pos:position pos:line="401" pos:column="10"/></operator><name pos:line="401" pos:column="10">flags<pos:position pos:line="401" pos:column="15"/></name> <operator pos:line="401" pos:column="16">&amp;<pos:position pos:line="401" pos:column="21"/></operator> <name pos:line="401" pos:column="18">match_condassert<pos:position pos:line="401" pos:column="34"/></name><operator pos:line="401" pos:column="34">)<pos:position pos:line="401" pos:column="35"/></operator> <operator pos:line="401" pos:column="36">!=<pos:position pos:line="401" pos:column="38"/></operator> <literal type="number" pos:line="401" pos:column="39">0<pos:position pos:line="401" pos:column="40"/></literal></expr>)<pos:position pos:line="401" pos:column="41"/></condition><then pos:line="401" pos:column="41"> <block type="pseudo"><expr_stmt><expr><call><name pos:line="401" pos:column="42">RRETURN<pos:position pos:line="401" pos:column="49"/></name><argument_list pos:line="401" pos:column="49">(<argument><expr><name pos:line="401" pos:column="50">MATCH_MATCH<pos:position pos:line="401" pos:column="61"/></name></expr></argument>)<pos:position pos:line="401" pos:column="62"/></argument_list></call></expr>;<pos:position pos:line="401" pos:column="63"/></expr_stmt></block></then></if>

    <expr_stmt><expr><name pos:line="403" pos:column="5">ecode<pos:position pos:line="403" pos:column="10"/></name> <operator pos:line="403" pos:column="11">+=<pos:position pos:line="403" pos:column="13"/></operator> <literal type="number" pos:line="403" pos:column="14">1<pos:position pos:line="403" pos:column="15"/></literal> <operator pos:line="403" pos:column="16">+<pos:position pos:line="403" pos:column="17"/></operator> <name pos:line="403" pos:column="18">LINK_SIZE<pos:position pos:line="403" pos:column="27"/></name></expr>;<pos:position pos:line="403" pos:column="28"/></expr_stmt>
    <continue pos:line="404" pos:column="5">continue;<pos:position pos:line="404" pos:column="14"/></continue>

    <comment type="block" pos:line="406" pos:column="5">/* Move the subject pointer back. This occurs only at the start of
    each branch of a lookbehind assertion. If we are too close to the start to
    move back, this match function fails. When working with UTF-8 we move
    back a number of characters, not bytes. */</comment>

    <case pos:line="411" pos:column="5">case <expr><name pos:line="411" pos:column="10">OP_REVERSE<pos:position pos:line="411" pos:column="20"/></name></expr>:<pos:position pos:line="411" pos:column="21"/></case>
<cpp:ifdef pos:line="412" pos:column="1">#<cpp:directive pos:line="412" pos:column="2">ifdef<pos:position pos:line="412" pos:column="7"/></cpp:directive> <name pos:line="412" pos:column="8">SUPPORT_UTF8<pos:position pos:line="412" pos:column="20"/></name></cpp:ifdef>
    <if pos:line="413" pos:column="5">if <condition pos:line="413" pos:column="8">(<expr><name><name pos:line="413" pos:column="9">md<pos:position pos:line="413" pos:column="11"/></name><operator pos:line="413" pos:column="11">-&gt;<pos:position pos:line="413" pos:column="16"/></operator><name pos:line="413" pos:column="13">utf8<pos:position pos:line="413" pos:column="17"/></name></name></expr>)<pos:position pos:line="413" pos:column="18"/></condition><then pos:line="413" pos:column="18">
      <block pos:line="414" pos:column="7">{
      <expr_stmt><expr><name pos:line="415" pos:column="7">c<pos:position pos:line="415" pos:column="8"/></name> <operator pos:line="415" pos:column="9">=<pos:position pos:line="415" pos:column="10"/></operator> <call><name pos:line="415" pos:column="11">GET<pos:position pos:line="415" pos:column="14"/></name><argument_list pos:line="415" pos:column="14">(<argument><expr><name pos:line="415" pos:column="15">ecode<pos:position pos:line="415" pos:column="20"/></name></expr></argument>,<argument><expr><literal type="number" pos:line="415" pos:column="21">1<pos:position pos:line="415" pos:column="22"/></literal></expr></argument>)<pos:position pos:line="415" pos:column="23"/></argument_list></call></expr>;<pos:position pos:line="415" pos:column="24"/></expr_stmt>
      <for pos:line="416" pos:column="7">for <control pos:line="416" pos:column="11">(<init><expr><name pos:line="416" pos:column="12">i<pos:position pos:line="416" pos:column="13"/></name> <operator pos:line="416" pos:column="14">=<pos:position pos:line="416" pos:column="15"/></operator> <literal type="number" pos:line="416" pos:column="16">0<pos:position pos:line="416" pos:column="17"/></literal></expr>;<pos:position pos:line="416" pos:column="18"/></init> <condition><expr><name pos:line="416" pos:column="19">i<pos:position pos:line="416" pos:column="20"/></name> <operator pos:line="416" pos:column="21">&lt;<pos:position pos:line="416" pos:column="25"/></operator> <name pos:line="416" pos:column="23">c<pos:position pos:line="416" pos:column="24"/></name></expr>;<pos:position pos:line="416" pos:column="25"/></condition> <incr><expr><name pos:line="416" pos:column="26">i<pos:position pos:line="416" pos:column="27"/></name><operator pos:line="416" pos:column="27">++<pos:position pos:line="416" pos:column="29"/></operator></expr></incr>)<pos:position pos:line="416" pos:column="30"/></control>
        <block pos:line="417" pos:column="9">{
        <expr_stmt><expr><name pos:line="418" pos:column="9">eptr<pos:position pos:line="418" pos:column="13"/></name><operator pos:line="418" pos:column="13">--<pos:position pos:line="418" pos:column="15"/></operator></expr>;<pos:position pos:line="418" pos:column="16"/></expr_stmt>
        <if pos:line="419" pos:column="9">if <condition pos:line="419" pos:column="12">(<expr><name pos:line="419" pos:column="13">eptr<pos:position pos:line="419" pos:column="17"/></name> <operator pos:line="419" pos:column="18">&lt;<pos:position pos:line="419" pos:column="22"/></operator> <name><name pos:line="419" pos:column="20">md<pos:position pos:line="419" pos:column="22"/></name><operator pos:line="419" pos:column="22">-&gt;<pos:position pos:line="419" pos:column="27"/></operator><name pos:line="419" pos:column="24">start_subject<pos:position pos:line="419" pos:column="37"/></name></name></expr>)<pos:position pos:line="419" pos:column="38"/></condition><then pos:line="419" pos:column="38"> <block type="pseudo"><expr_stmt><expr><call><name pos:line="419" pos:column="39">RRETURN<pos:position pos:line="419" pos:column="46"/></name><argument_list pos:line="419" pos:column="46">(<argument><expr><name pos:line="419" pos:column="47">MATCH_NOMATCH<pos:position pos:line="419" pos:column="60"/></name></expr></argument>)<pos:position pos:line="419" pos:column="61"/></argument_list></call></expr>;<pos:position pos:line="419" pos:column="62"/></expr_stmt></block></then></if>
        <macro><name pos:line="420" pos:column="9">BACKCHAR<pos:position pos:line="420" pos:column="17"/></name><argument_list pos:line="420" pos:column="17">(<argument pos:line="420" pos:column="18">eptr<pos:position pos:line="420" pos:column="22"/></argument>)<pos:position pos:line="420" pos:column="23"/></argument_list></macro>
        }<pos:position pos:line="421" pos:column="10"/></block></for>
      }<pos:position pos:line="422" pos:column="8"/></block></then>
    <else pos:line="423" pos:column="5">else
<cpp:endif pos:line="424" pos:column="1">#<cpp:directive pos:line="424" pos:column="2">endif<pos:position pos:line="424" pos:column="7"/></cpp:directive></cpp:endif>

    <comment type="block" pos:line="426" pos:column="5">/* No UTF-8 support, or not in UTF-8 mode: count is byte count */</comment>

      <block pos:line="428" pos:column="7">{
      <expr_stmt><expr><name pos:line="429" pos:column="7">eptr<pos:position pos:line="429" pos:column="11"/></name> <operator pos:line="429" pos:column="12">-=<pos:position pos:line="429" pos:column="14"/></operator> <call><name pos:line="429" pos:column="15">GET<pos:position pos:line="429" pos:column="18"/></name><argument_list pos:line="429" pos:column="18">(<argument><expr><name pos:line="429" pos:column="19">ecode<pos:position pos:line="429" pos:column="24"/></name></expr></argument>,<argument><expr><literal type="number" pos:line="429" pos:column="25">1<pos:position pos:line="429" pos:column="26"/></literal></expr></argument>)<pos:position pos:line="429" pos:column="27"/></argument_list></call></expr>;<pos:position pos:line="429" pos:column="28"/></expr_stmt>
      <if pos:line="430" pos:column="7">if <condition pos:line="430" pos:column="10">(<expr><name pos:line="430" pos:column="11">eptr<pos:position pos:line="430" pos:column="15"/></name> <operator pos:line="430" pos:column="16">&lt;<pos:position pos:line="430" pos:column="20"/></operator> <name><name pos:line="430" pos:column="18">md<pos:position pos:line="430" pos:column="20"/></name><operator pos:line="430" pos:column="20">-&gt;<pos:position pos:line="430" pos:column="25"/></operator><name pos:line="430" pos:column="22">start_subject<pos:position pos:line="430" pos:column="35"/></name></name></expr>)<pos:position pos:line="430" pos:column="36"/></condition><then pos:line="430" pos:column="36"> <block type="pseudo"><expr_stmt><expr><call><name pos:line="430" pos:column="37">RRETURN<pos:position pos:line="430" pos:column="44"/></name><argument_list pos:line="430" pos:column="44">(<argument><expr><name pos:line="430" pos:column="45">MATCH_NOMATCH<pos:position pos:line="430" pos:column="58"/></name></expr></argument>)<pos:position pos:line="430" pos:column="59"/></argument_list></call></expr>;<pos:position pos:line="430" pos:column="60"/></expr_stmt></block></then></if>
      }<pos:position pos:line="431" pos:column="8"/></block></else></if>

    <comment type="block" pos:line="433" pos:column="5">/* Skip to next op code */</comment>

    <expr_stmt><expr><name pos:line="435" pos:column="5">ecode<pos:position pos:line="435" pos:column="10"/></name> <operator pos:line="435" pos:column="11">+=<pos:position pos:line="435" pos:column="13"/></operator> <literal type="number" pos:line="435" pos:column="14">1<pos:position pos:line="435" pos:column="15"/></literal> <operator pos:line="435" pos:column="16">+<pos:position pos:line="435" pos:column="17"/></operator> <name pos:line="435" pos:column="18">LINK_SIZE<pos:position pos:line="435" pos:column="27"/></name></expr>;<pos:position pos:line="435" pos:column="28"/></expr_stmt>
    <break pos:line="436" pos:column="5">break;<pos:position pos:line="436" pos:column="11"/></break>

    <comment type="block" pos:line="438" pos:column="5">/* The callout item calls an external function, if one is provided, passing
    details of the match so far. This is mainly for debugging, though the
    function is able to force a failure. */</comment>

    <case pos:line="442" pos:column="5">case <expr><name pos:line="442" pos:column="10">OP_CALLOUT<pos:position pos:line="442" pos:column="20"/></name></expr>:<pos:position pos:line="442" pos:column="21"/></case>
    <if pos:line="443" pos:column="5">if <condition pos:line="443" pos:column="8">(<expr><name pos:line="443" pos:column="9">pcre_callout<pos:position pos:line="443" pos:column="21"/></name> <operator pos:line="443" pos:column="22">!=<pos:position pos:line="443" pos:column="24"/></operator> <name pos:line="443" pos:column="25">NULL<pos:position pos:line="443" pos:column="29"/></name></expr>)<pos:position pos:line="443" pos:column="30"/></condition><then pos:line="443" pos:column="30">
      <block pos:line="444" pos:column="7">{
      <decl_stmt><decl><type><name pos:line="445" pos:column="7">pcre_callout_block<pos:position pos:line="445" pos:column="25"/></name></type> <name pos:line="445" pos:column="26">cb<pos:position pos:line="445" pos:column="28"/></name></decl>;<pos:position pos:line="445" pos:column="29"/></decl_stmt>
      <expr_stmt><expr><name><name pos:line="446" pos:column="7">cb<pos:position pos:line="446" pos:column="9"/></name><operator pos:line="446" pos:column="9">.<pos:position pos:line="446" pos:column="10"/></operator><name pos:line="446" pos:column="10">version<pos:position pos:line="446" pos:column="17"/></name></name>          <operator pos:line="446" pos:column="27">=<pos:position pos:line="446" pos:column="28"/></operator> <literal type="number" pos:line="446" pos:column="29">1<pos:position pos:line="446" pos:column="30"/></literal></expr>;<pos:position pos:line="446" pos:column="31"/></expr_stmt>   <comment type="block" pos:line="446" pos:column="34">/* Version 1 of the callout block */</comment>
      <expr_stmt><expr><name><name pos:line="447" pos:column="7">cb<pos:position pos:line="447" pos:column="9"/></name><operator pos:line="447" pos:column="9">.<pos:position pos:line="447" pos:column="10"/></operator><name pos:line="447" pos:column="10">callout_number<pos:position pos:line="447" pos:column="24"/></name></name>   <operator pos:line="447" pos:column="27">=<pos:position pos:line="447" pos:column="28"/></operator> <name><name pos:line="447" pos:column="29">ecode<pos:position pos:line="447" pos:column="34"/></name><index pos:line="447" pos:column="34">[<expr><literal type="number" pos:line="447" pos:column="35">1<pos:position pos:line="447" pos:column="36"/></literal></expr>]<pos:position pos:line="447" pos:column="37"/></index></name></expr>;<pos:position pos:line="447" pos:column="38"/></expr_stmt>
      <expr_stmt><expr><name><name pos:line="448" pos:column="7">cb<pos:position pos:line="448" pos:column="9"/></name><operator pos:line="448" pos:column="9">.<pos:position pos:line="448" pos:column="10"/></operator><name pos:line="448" pos:column="10">offset_vector<pos:position pos:line="448" pos:column="23"/></name></name>    <operator pos:line="448" pos:column="27">=<pos:position pos:line="448" pos:column="28"/></operator> <name><name pos:line="448" pos:column="29">md<pos:position pos:line="448" pos:column="31"/></name><operator pos:line="448" pos:column="31">-&gt;<pos:position pos:line="448" pos:column="36"/></operator><name pos:line="448" pos:column="33">offset_vector<pos:position pos:line="448" pos:column="46"/></name></name></expr>;<pos:position pos:line="448" pos:column="47"/></expr_stmt>
      <expr_stmt><expr><name><name pos:line="449" pos:column="7">cb<pos:position pos:line="449" pos:column="9"/></name><operator pos:line="449" pos:column="9">.<pos:position pos:line="449" pos:column="10"/></operator><name pos:line="449" pos:column="10">subject<pos:position pos:line="449" pos:column="17"/></name></name>          <operator pos:line="449" pos:column="27">=<pos:position pos:line="449" pos:column="28"/></operator> <operator pos:line="449" pos:column="29">(<pos:position pos:line="449" pos:column="30"/></operator><specifier pos:line="449" pos:column="30">const<pos:position pos:line="449" pos:column="35"/></specifier> <name pos:line="449" pos:column="36">char<pos:position pos:line="449" pos:column="40"/></name> <operator pos:line="449" pos:column="41">*<pos:position pos:line="449" pos:column="42"/></operator><operator pos:line="449" pos:column="42">)<pos:position pos:line="449" pos:column="43"/></operator><name><name pos:line="449" pos:column="43">md<pos:position pos:line="449" pos:column="45"/></name><operator pos:line="449" pos:column="45">-&gt;<pos:position pos:line="449" pos:column="50"/></operator><name pos:line="449" pos:column="47">start_subject<pos:position pos:line="449" pos:column="60"/></name></name></expr>;<pos:position pos:line="449" pos:column="61"/></expr_stmt>
      <expr_stmt><expr><name><name pos:line="450" pos:column="7">cb<pos:position pos:line="450" pos:column="9"/></name><operator pos:line="450" pos:column="9">.<pos:position pos:line="450" pos:column="10"/></operator><name pos:line="450" pos:column="10">subject_length<pos:position pos:line="450" pos:column="24"/></name></name>   <operator pos:line="450" pos:column="27">=<pos:position pos:line="450" pos:column="28"/></operator> <name><name pos:line="450" pos:column="29">md<pos:position pos:line="450" pos:column="31"/></name><operator pos:line="450" pos:column="31">-&gt;<pos:position pos:line="450" pos:column="36"/></operator><name pos:line="450" pos:column="33">end_subject<pos:position pos:line="450" pos:column="44"/></name></name> <operator pos:line="450" pos:column="45">-<pos:position pos:line="450" pos:column="46"/></operator> <name><name pos:line="450" pos:column="47">md<pos:position pos:line="450" pos:column="49"/></name><operator pos:line="450" pos:column="49">-&gt;<pos:position pos:line="450" pos:column="54"/></operator><name pos:line="450" pos:column="51">start_subject<pos:position pos:line="450" pos:column="64"/></name></name></expr>;<pos:position pos:line="450" pos:column="65"/></expr_stmt>
      <expr_stmt><expr><name><name pos:line="451" pos:column="7">cb<pos:position pos:line="451" pos:column="9"/></name><operator pos:line="451" pos:column="9">.<pos:position pos:line="451" pos:column="10"/></operator><name pos:line="451" pos:column="10">start_match<pos:position pos:line="451" pos:column="21"/></name></name>      <operator pos:line="451" pos:column="27">=<pos:position pos:line="451" pos:column="28"/></operator> <name><name pos:line="451" pos:column="29">md<pos:position pos:line="451" pos:column="31"/></name><operator pos:line="451" pos:column="31">-&gt;<pos:position pos:line="451" pos:column="36"/></operator><name pos:line="451" pos:column="33">start_match<pos:position pos:line="451" pos:column="44"/></name></name> <operator pos:line="451" pos:column="45">-<pos:position pos:line="451" pos:column="46"/></operator> <name><name pos:line="451" pos:column="47">md<pos:position pos:line="451" pos:column="49"/></name><operator pos:line="451" pos:column="49">-&gt;<pos:position pos:line="451" pos:column="54"/></operator><name pos:line="451" pos:column="51">start_subject<pos:position pos:line="451" pos:column="64"/></name></name></expr>;<pos:position pos:line="451" pos:column="65"/></expr_stmt>
      <expr_stmt><expr><name><name pos:line="452" pos:column="7">cb<pos:position pos:line="452" pos:column="9"/></name><operator pos:line="452" pos:column="9">.<pos:position pos:line="452" pos:column="10"/></operator><name pos:line="452" pos:column="10">current_position<pos:position pos:line="452" pos:column="26"/></name></name> <operator pos:line="452" pos:column="27">=<pos:position pos:line="452" pos:column="28"/></operator> <name pos:line="452" pos:column="29">eptr<pos:position pos:line="452" pos:column="33"/></name> <operator pos:line="452" pos:column="34">-<pos:position pos:line="452" pos:column="35"/></operator> <name><name pos:line="452" pos:column="36">md<pos:position pos:line="452" pos:column="38"/></name><operator pos:line="452" pos:column="38">-&gt;<pos:position pos:line="452" pos:column="43"/></operator><name pos:line="452" pos:column="40">start_subject<pos:position pos:line="452" pos:column="53"/></name></name></expr>;<pos:position pos:line="452" pos:column="54"/></expr_stmt>
      <expr_stmt><expr><name><name pos:line="453" pos:column="7">cb<pos:position pos:line="453" pos:column="9"/></name><operator pos:line="453" pos:column="9">.<pos:position pos:line="453" pos:column="10"/></operator><name pos:line="453" pos:column="10">pattern_position<pos:position pos:line="453" pos:column="26"/></name></name> <operator pos:line="453" pos:column="27">=<pos:position pos:line="453" pos:column="28"/></operator> <call><name pos:line="453" pos:column="29">GET<pos:position pos:line="453" pos:column="32"/></name><argument_list pos:line="453" pos:column="32">(<argument><expr><name pos:line="453" pos:column="33">ecode<pos:position pos:line="453" pos:column="38"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="453" pos:column="40">2<pos:position pos:line="453" pos:column="41"/></literal></expr></argument>)<pos:position pos:line="453" pos:column="42"/></argument_list></call></expr>;<pos:position pos:line="453" pos:column="43"/></expr_stmt>
      <expr_stmt><expr><name><name pos:line="454" pos:column="7">cb<pos:position pos:line="454" pos:column="9"/></name><operator pos:line="454" pos:column="9">.<pos:position pos:line="454" pos:column="10"/></operator><name pos:line="454" pos:column="10">next_item_length<pos:position pos:line="454" pos:column="26"/></name></name> <operator pos:line="454" pos:column="27">=<pos:position pos:line="454" pos:column="28"/></operator> <call><name pos:line="454" pos:column="29">GET<pos:position pos:line="454" pos:column="32"/></name><argument_list pos:line="454" pos:column="32">(<argument><expr><name pos:line="454" pos:column="33">ecode<pos:position pos:line="454" pos:column="38"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="454" pos:column="40">2<pos:position pos:line="454" pos:column="41"/></literal> <operator pos:line="454" pos:column="42">+<pos:position pos:line="454" pos:column="43"/></operator> <name pos:line="454" pos:column="44">LINK_SIZE<pos:position pos:line="454" pos:column="53"/></name></expr></argument>)<pos:position pos:line="454" pos:column="54"/></argument_list></call></expr>;<pos:position pos:line="454" pos:column="55"/></expr_stmt>
      <expr_stmt><expr><name><name pos:line="455" pos:column="7">cb<pos:position pos:line="455" pos:column="9"/></name><operator pos:line="455" pos:column="9">.<pos:position pos:line="455" pos:column="10"/></operator><name pos:line="455" pos:column="10">capture_top<pos:position pos:line="455" pos:column="21"/></name></name>      <operator pos:line="455" pos:column="27">=<pos:position pos:line="455" pos:column="28"/></operator> <name pos:line="455" pos:column="29">offset_top<pos:position pos:line="455" pos:column="39"/></name><operator pos:line="455" pos:column="39">/<pos:position pos:line="455" pos:column="40"/></operator><literal type="number" pos:line="455" pos:column="40">2<pos:position pos:line="455" pos:column="41"/></literal></expr>;<pos:position pos:line="455" pos:column="42"/></expr_stmt>
      <expr_stmt><expr><name><name pos:line="456" pos:column="7">cb<pos:position pos:line="456" pos:column="9"/></name><operator pos:line="456" pos:column="9">.<pos:position pos:line="456" pos:column="10"/></operator><name pos:line="456" pos:column="10">capture_last<pos:position pos:line="456" pos:column="22"/></name></name>     <operator pos:line="456" pos:column="27">=<pos:position pos:line="456" pos:column="28"/></operator> <name><name pos:line="456" pos:column="29">md<pos:position pos:line="456" pos:column="31"/></name><operator pos:line="456" pos:column="31">-&gt;<pos:position pos:line="456" pos:column="36"/></operator><name pos:line="456" pos:column="33">capture_last<pos:position pos:line="456" pos:column="45"/></name></name></expr>;<pos:position pos:line="456" pos:column="46"/></expr_stmt>
      <expr_stmt><expr><name><name pos:line="457" pos:column="7">cb<pos:position pos:line="457" pos:column="9"/></name><operator pos:line="457" pos:column="9">.<pos:position pos:line="457" pos:column="10"/></operator><name pos:line="457" pos:column="10">callout_data<pos:position pos:line="457" pos:column="22"/></name></name>     <operator pos:line="457" pos:column="27">=<pos:position pos:line="457" pos:column="28"/></operator> <name><name pos:line="457" pos:column="29">md<pos:position pos:line="457" pos:column="31"/></name><operator pos:line="457" pos:column="31">-&gt;<pos:position pos:line="457" pos:column="36"/></operator><name pos:line="457" pos:column="33">callout_data<pos:position pos:line="457" pos:column="45"/></name></name></expr>;<pos:position pos:line="457" pos:column="46"/></expr_stmt>
      <if pos:line="458" pos:column="7">if <condition pos:line="458" pos:column="10">(<expr><operator pos:line="458" pos:column="11">(<pos:position pos:line="458" pos:column="12"/></operator><name pos:line="458" pos:column="12">rrc<pos:position pos:line="458" pos:column="15"/></name> <operator pos:line="458" pos:column="16">=<pos:position pos:line="458" pos:column="17"/></operator> <call pos:line="458" pos:column="18">(<modifier pos:line="458" pos:column="19">*<pos:position pos:line="458" pos:column="20"/></modifier><name pos:line="458" pos:column="20">pcre_callout<pos:position pos:line="458" pos:column="32"/></name>)<argument_list pos:line="458" pos:column="33">(<argument><expr><operator pos:line="458" pos:column="34">&amp;<pos:position pos:line="458" pos:column="39"/></operator><name pos:line="458" pos:column="35">cb<pos:position pos:line="458" pos:column="37"/></name></expr></argument>)<pos:position pos:line="458" pos:column="38"/></argument_list></call><operator pos:line="458" pos:column="38">)<pos:position pos:line="458" pos:column="39"/></operator> <operator pos:line="458" pos:column="40">&gt;<pos:position pos:line="458" pos:column="44"/></operator> <literal type="number" pos:line="458" pos:column="42">0<pos:position pos:line="458" pos:column="43"/></literal></expr>)<pos:position pos:line="458" pos:column="44"/></condition><then pos:line="458" pos:column="44"> <block type="pseudo"><expr_stmt><expr><call><name pos:line="458" pos:column="45">RRETURN<pos:position pos:line="458" pos:column="52"/></name><argument_list pos:line="458" pos:column="52">(<argument><expr><name pos:line="458" pos:column="53">MATCH_NOMATCH<pos:position pos:line="458" pos:column="66"/></name></expr></argument>)<pos:position pos:line="458" pos:column="67"/></argument_list></call></expr>;<pos:position pos:line="458" pos:column="68"/></expr_stmt></block></then></if>
      <if pos:line="459" pos:column="7">if <condition pos:line="459" pos:column="10">(<expr><name pos:line="459" pos:column="11">rrc<pos:position pos:line="459" pos:column="14"/></name> <operator pos:line="459" pos:column="15">&lt;<pos:position pos:line="459" pos:column="19"/></operator> <literal type="number" pos:line="459" pos:column="17">0<pos:position pos:line="459" pos:column="18"/></literal></expr>)<pos:position pos:line="459" pos:column="19"/></condition><then pos:line="459" pos:column="19"> <block type="pseudo"><expr_stmt><expr><call><name pos:line="459" pos:column="20">RRETURN<pos:position pos:line="459" pos:column="27"/></name><argument_list pos:line="459" pos:column="27">(<argument><expr><name pos:line="459" pos:column="28">rrc<pos:position pos:line="459" pos:column="31"/></name></expr></argument>)<pos:position pos:line="459" pos:column="32"/></argument_list></call></expr>;<pos:position pos:line="459" pos:column="33"/></expr_stmt></block></then></if>
      }<pos:position pos:line="460" pos:column="8"/></block></then></if>
    <expr_stmt><expr><name pos:line="461" pos:column="5">ecode<pos:position pos:line="461" pos:column="10"/></name> <operator pos:line="461" pos:column="11">+=<pos:position pos:line="461" pos:column="13"/></operator> <literal type="number" pos:line="461" pos:column="14">2<pos:position pos:line="461" pos:column="15"/></literal> <operator pos:line="461" pos:column="16">+<pos:position pos:line="461" pos:column="17"/></operator> <literal type="number" pos:line="461" pos:column="18">2<pos:position pos:line="461" pos:column="19"/></literal><operator pos:line="461" pos:column="19">*<pos:position pos:line="461" pos:column="20"/></operator><name pos:line="461" pos:column="20">LINK_SIZE<pos:position pos:line="461" pos:column="29"/></name></expr>;<pos:position pos:line="461" pos:column="30"/></expr_stmt>
    <break pos:line="462" pos:column="5">break;<pos:position pos:line="462" pos:column="11"/></break>

    <comment type="block" pos:line="464" pos:column="5">/* Recursion either matches the current regex, or some subexpression. The
    offset data is the offset to the starting bracket from the start of the
    whole pattern. (This is so that it works from duplicated subpatterns.)

    If there are any capturing brackets started but not finished, we have to
    save their starting points and reinstate them after the recursion. However,
    we don't know how many such there are (offset_top records the completed
    total) so we just have to save all the potential data. There may be up to
    65535 such values, which is too large to put on the stack, but using malloc
    for small numbers seems expensive. As a compromise, the stack is used when
    there are no more than REC_STACK_SAVE_MAX values to store; otherwise malloc
    is used. A problem is what to do if the malloc fails ... there is no way of
    returning to the top level with an error. Save the top REC_STACK_SAVE_MAX
    values on the stack, and accept that the rest may be wrong.

    There are also other values that have to be saved. We use a chained
    sequence of blocks that actually live on the stack. Thanks to Robin Houston
    for the original version of this logic. */</comment>

    <case pos:line="483" pos:column="5">case <expr><name pos:line="483" pos:column="10">OP_RECURSE<pos:position pos:line="483" pos:column="20"/></name></expr>:<pos:position pos:line="483" pos:column="21"/></case>
      <block pos:line="484" pos:column="7">{
      <expr_stmt><expr><name pos:line="485" pos:column="7">callpat<pos:position pos:line="485" pos:column="14"/></name> <operator pos:line="485" pos:column="15">=<pos:position pos:line="485" pos:column="16"/></operator> <name><name pos:line="485" pos:column="17">md<pos:position pos:line="485" pos:column="19"/></name><operator pos:line="485" pos:column="19">-&gt;<pos:position pos:line="485" pos:column="24"/></operator><name pos:line="485" pos:column="21">start_code<pos:position pos:line="485" pos:column="31"/></name></name> <operator pos:line="485" pos:column="32">+<pos:position pos:line="485" pos:column="33"/></operator> <call><name pos:line="485" pos:column="34">GET<pos:position pos:line="485" pos:column="37"/></name><argument_list pos:line="485" pos:column="37">(<argument><expr><name pos:line="485" pos:column="38">ecode<pos:position pos:line="485" pos:column="43"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="485" pos:column="45">1<pos:position pos:line="485" pos:column="46"/></literal></expr></argument>)<pos:position pos:line="485" pos:column="47"/></argument_list></call></expr>;<pos:position pos:line="485" pos:column="48"/></expr_stmt>
      <expr_stmt><expr><name><name pos:line="486" pos:column="7">new_recursive<pos:position pos:line="486" pos:column="20"/></name><operator pos:line="486" pos:column="20">.<pos:position pos:line="486" pos:column="21"/></operator><name pos:line="486" pos:column="21">group_num<pos:position pos:line="486" pos:column="30"/></name></name> <operator pos:line="486" pos:column="31">=<pos:position pos:line="486" pos:column="32"/></operator> <operator pos:line="486" pos:column="33">*<pos:position pos:line="486" pos:column="34"/></operator><name pos:line="486" pos:column="34">callpat<pos:position pos:line="486" pos:column="41"/></name> <operator pos:line="486" pos:column="42">-<pos:position pos:line="486" pos:column="43"/></operator> <name pos:line="486" pos:column="44">OP_BRA<pos:position pos:line="486" pos:column="50"/></name></expr>;<pos:position pos:line="486" pos:column="51"/></expr_stmt>

      <comment type="block" pos:line="488" pos:column="7">/* For extended extraction brackets (large number), we have to fish out
      the number from a dummy opcode at the start. */</comment>

      <if pos:line="491" pos:column="7">if <condition pos:line="491" pos:column="10">(<expr><name><name pos:line="491" pos:column="11">new_recursive<pos:position pos:line="491" pos:column="24"/></name><operator pos:line="491" pos:column="24">.<pos:position pos:line="491" pos:column="25"/></operator><name pos:line="491" pos:column="25">group_num<pos:position pos:line="491" pos:column="34"/></name></name> <operator pos:line="491" pos:column="35">&gt;<pos:position pos:line="491" pos:column="39"/></operator> <name pos:line="491" pos:column="37">EXTRACT_BASIC_MAX<pos:position pos:line="491" pos:column="54"/></name></expr>)<pos:position pos:line="491" pos:column="55"/></condition><then pos:line="491" pos:column="55">
        <block type="pseudo"><expr_stmt><expr><name><name pos:line="492" pos:column="9">new_recursive<pos:position pos:line="492" pos:column="22"/></name><operator pos:line="492" pos:column="22">.<pos:position pos:line="492" pos:column="23"/></operator><name pos:line="492" pos:column="23">group_num<pos:position pos:line="492" pos:column="32"/></name></name> <operator pos:line="492" pos:column="33">=<pos:position pos:line="492" pos:column="34"/></operator> <call><name pos:line="492" pos:column="35">GET2<pos:position pos:line="492" pos:column="39"/></name><argument_list pos:line="492" pos:column="39">(<argument><expr><name pos:line="492" pos:column="40">callpat<pos:position pos:line="492" pos:column="47"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="492" pos:column="49">2<pos:position pos:line="492" pos:column="50"/></literal><operator pos:line="492" pos:column="50">+<pos:position pos:line="492" pos:column="51"/></operator><name pos:line="492" pos:column="51">LINK_SIZE<pos:position pos:line="492" pos:column="60"/></name></expr></argument>)<pos:position pos:line="492" pos:column="61"/></argument_list></call></expr>;<pos:position pos:line="492" pos:column="62"/></expr_stmt></block></then></if>

      <comment type="block" pos:line="494" pos:column="7">/* Add to "recursing stack" */</comment>

      <expr_stmt><expr><name><name pos:line="496" pos:column="7">new_recursive<pos:position pos:line="496" pos:column="20"/></name><operator pos:line="496" pos:column="20">.<pos:position pos:line="496" pos:column="21"/></operator><name pos:line="496" pos:column="21">prevrec<pos:position pos:line="496" pos:column="28"/></name></name> <operator pos:line="496" pos:column="29">=<pos:position pos:line="496" pos:column="30"/></operator> <name><name pos:line="496" pos:column="31">md<pos:position pos:line="496" pos:column="33"/></name><operator pos:line="496" pos:column="33">-&gt;<pos:position pos:line="496" pos:column="38"/></operator><name pos:line="496" pos:column="35">recursive<pos:position pos:line="496" pos:column="44"/></name></name></expr>;<pos:position pos:line="496" pos:column="45"/></expr_stmt>
      <expr_stmt><expr><name><name pos:line="497" pos:column="7">md<pos:position pos:line="497" pos:column="9"/></name><operator pos:line="497" pos:column="9">-&gt;<pos:position pos:line="497" pos:column="14"/></operator><name pos:line="497" pos:column="11">recursive<pos:position pos:line="497" pos:column="20"/></name></name> <operator pos:line="497" pos:column="21">=<pos:position pos:line="497" pos:column="22"/></operator> <operator pos:line="497" pos:column="23">&amp;<pos:position pos:line="497" pos:column="28"/></operator><name pos:line="497" pos:column="24">new_recursive<pos:position pos:line="497" pos:column="37"/></name></expr>;<pos:position pos:line="497" pos:column="38"/></expr_stmt>

      <comment type="block" pos:line="499" pos:column="7">/* Find where to continue from afterwards */</comment>

      <expr_stmt><expr><name pos:line="501" pos:column="7">ecode<pos:position pos:line="501" pos:column="12"/></name> <operator pos:line="501" pos:column="13">+=<pos:position pos:line="501" pos:column="15"/></operator> <literal type="number" pos:line="501" pos:column="16">1<pos:position pos:line="501" pos:column="17"/></literal> <operator pos:line="501" pos:column="18">+<pos:position pos:line="501" pos:column="19"/></operator> <name pos:line="501" pos:column="20">LINK_SIZE<pos:position pos:line="501" pos:column="29"/></name></expr>;<pos:position pos:line="501" pos:column="30"/></expr_stmt>
      <expr_stmt><expr><name><name pos:line="502" pos:column="7">new_recursive<pos:position pos:line="502" pos:column="20"/></name><operator pos:line="502" pos:column="20">.<pos:position pos:line="502" pos:column="21"/></operator><name pos:line="502" pos:column="21">after_call<pos:position pos:line="502" pos:column="31"/></name></name> <operator pos:line="502" pos:column="32">=<pos:position pos:line="502" pos:column="33"/></operator> <name pos:line="502" pos:column="34">ecode<pos:position pos:line="502" pos:column="39"/></name></expr>;<pos:position pos:line="502" pos:column="40"/></expr_stmt>

      <comment type="block" pos:line="504" pos:column="7">/* Now save the offset data. */</comment>

      <expr_stmt><expr><name><name pos:line="506" pos:column="7">new_recursive<pos:position pos:line="506" pos:column="20"/></name><operator pos:line="506" pos:column="20">.<pos:position pos:line="506" pos:column="21"/></operator><name pos:line="506" pos:column="21">saved_max<pos:position pos:line="506" pos:column="30"/></name></name> <operator pos:line="506" pos:column="31">=<pos:position pos:line="506" pos:column="32"/></operator> <name><name pos:line="506" pos:column="33">md<pos:position pos:line="506" pos:column="35"/></name><operator pos:line="506" pos:column="35">-&gt;<pos:position pos:line="506" pos:column="40"/></operator><name pos:line="506" pos:column="37">offset_end<pos:position pos:line="506" pos:column="47"/></name></name></expr>;<pos:position pos:line="506" pos:column="48"/></expr_stmt>
      <if pos:line="507" pos:column="7">if <condition pos:line="507" pos:column="10">(<expr><name><name pos:line="507" pos:column="11">new_recursive<pos:position pos:line="507" pos:column="24"/></name><operator pos:line="507" pos:column="24">.<pos:position pos:line="507" pos:column="25"/></operator><name pos:line="507" pos:column="25">saved_max<pos:position pos:line="507" pos:column="34"/></name></name> <operator pos:line="507" pos:column="35">&lt;=<pos:position pos:line="507" pos:column="40"/></operator> <name pos:line="507" pos:column="38">REC_STACK_SAVE_MAX<pos:position pos:line="507" pos:column="56"/></name></expr>)<pos:position pos:line="507" pos:column="57"/></condition><then pos:line="507" pos:column="57">
        <block type="pseudo"><expr_stmt><expr><name><name pos:line="508" pos:column="9">new_recursive<pos:position pos:line="508" pos:column="22"/></name><operator pos:line="508" pos:column="22">.<pos:position pos:line="508" pos:column="23"/></operator><name pos:line="508" pos:column="23">offset_save<pos:position pos:line="508" pos:column="34"/></name></name> <operator pos:line="508" pos:column="35">=<pos:position pos:line="508" pos:column="36"/></operator> <name pos:line="508" pos:column="37">stacksave<pos:position pos:line="508" pos:column="46"/></name></expr>;<pos:position pos:line="508" pos:column="47"/></expr_stmt></block></then>
      <else pos:line="509" pos:column="7">else
        <block pos:line="510" pos:column="9">{
        <expr_stmt><expr><name><name pos:line="511" pos:column="9">new_recursive<pos:position pos:line="511" pos:column="22"/></name><operator pos:line="511" pos:column="22">.<pos:position pos:line="511" pos:column="23"/></operator><name pos:line="511" pos:column="23">offset_save<pos:position pos:line="511" pos:column="34"/></name></name> <operator pos:line="511" pos:column="35">=<pos:position pos:line="511" pos:column="36"/></operator>
          <operator pos:line="512" pos:column="11">(<pos:position pos:line="512" pos:column="12"/></operator><name pos:line="512" pos:column="12">int<pos:position pos:line="512" pos:column="15"/></name> <operator pos:line="512" pos:column="16">*<pos:position pos:line="512" pos:column="17"/></operator><operator pos:line="512" pos:column="17">)<pos:position pos:line="512" pos:column="18"/></operator><call pos:line="512" pos:column="18">(<name pos:line="512" pos:column="19">pcre_malloc<pos:position pos:line="512" pos:column="30"/></name>)<argument_list pos:line="512" pos:column="31">(<argument><expr><name><name pos:line="512" pos:column="32">new_recursive<pos:position pos:line="512" pos:column="45"/></name><operator pos:line="512" pos:column="45">.<pos:position pos:line="512" pos:column="46"/></operator><name pos:line="512" pos:column="46">saved_max<pos:position pos:line="512" pos:column="55"/></name></name> <operator pos:line="512" pos:column="56">*<pos:position pos:line="512" pos:column="57"/></operator> <sizeof pos:line="512" pos:column="58">sizeof<argument_list pos:line="512" pos:column="64">(<argument><expr><name pos:line="512" pos:column="65">int<pos:position pos:line="512" pos:column="68"/></name></expr></argument>)<pos:position pos:line="512" pos:column="69"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="512" pos:column="70"/></argument_list></call></expr>;<pos:position pos:line="512" pos:column="71"/></expr_stmt>
        <if pos:line="513" pos:column="9">if <condition pos:line="513" pos:column="12">(<expr><name><name pos:line="513" pos:column="13">new_recursive<pos:position pos:line="513" pos:column="26"/></name><operator pos:line="513" pos:column="26">.<pos:position pos:line="513" pos:column="27"/></operator><name pos:line="513" pos:column="27">offset_save<pos:position pos:line="513" pos:column="38"/></name></name> <operator pos:line="513" pos:column="39">==<pos:position pos:line="513" pos:column="41"/></operator> <name pos:line="513" pos:column="42">NULL<pos:position pos:line="513" pos:column="46"/></name></expr>)<pos:position pos:line="513" pos:column="47"/></condition><then pos:line="513" pos:column="47"> <block type="pseudo"><expr_stmt><expr><call><name pos:line="513" pos:column="48">RRETURN<pos:position pos:line="513" pos:column="55"/></name><argument_list pos:line="513" pos:column="55">(<argument><expr><name pos:line="513" pos:column="56">PCRE_ERROR_NOMEMORY<pos:position pos:line="513" pos:column="75"/></name></expr></argument>)<pos:position pos:line="513" pos:column="76"/></argument_list></call></expr>;<pos:position pos:line="513" pos:column="77"/></expr_stmt></block></then></if>
        }<pos:position pos:line="514" pos:column="10"/></block></else></if>

      <expr_stmt><expr><call><name pos:line="516" pos:column="7">memcpy<pos:position pos:line="516" pos:column="13"/></name><argument_list pos:line="516" pos:column="13">(<argument><expr><name><name pos:line="516" pos:column="14">new_recursive<pos:position pos:line="516" pos:column="27"/></name><operator pos:line="516" pos:column="27">.<pos:position pos:line="516" pos:column="28"/></operator><name pos:line="516" pos:column="28">offset_save<pos:position pos:line="516" pos:column="39"/></name></name></expr></argument>, <argument><expr><name><name pos:line="516" pos:column="41">md<pos:position pos:line="516" pos:column="43"/></name><operator pos:line="516" pos:column="43">-&gt;<pos:position pos:line="516" pos:column="48"/></operator><name pos:line="516" pos:column="45">offset_vector<pos:position pos:line="516" pos:column="58"/></name></name></expr></argument>,
            <argument><expr><name><name pos:line="517" pos:column="13">new_recursive<pos:position pos:line="517" pos:column="26"/></name><operator pos:line="517" pos:column="26">.<pos:position pos:line="517" pos:column="27"/></operator><name pos:line="517" pos:column="27">saved_max<pos:position pos:line="517" pos:column="36"/></name></name> <operator pos:line="517" pos:column="37">*<pos:position pos:line="517" pos:column="38"/></operator> <sizeof pos:line="517" pos:column="39">sizeof<argument_list pos:line="517" pos:column="45">(<argument><expr><name pos:line="517" pos:column="46">int<pos:position pos:line="517" pos:column="49"/></name></expr></argument>)<pos:position pos:line="517" pos:column="50"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="517" pos:column="51"/></argument_list></call></expr>;<pos:position pos:line="517" pos:column="52"/></expr_stmt>
      <expr_stmt><expr><name><name pos:line="518" pos:column="7">new_recursive<pos:position pos:line="518" pos:column="20"/></name><operator pos:line="518" pos:column="20">.<pos:position pos:line="518" pos:column="21"/></operator><name pos:line="518" pos:column="21">save_start<pos:position pos:line="518" pos:column="31"/></name></name> <operator pos:line="518" pos:column="32">=<pos:position pos:line="518" pos:column="33"/></operator> <name><name pos:line="518" pos:column="34">md<pos:position pos:line="518" pos:column="36"/></name><operator pos:line="518" pos:column="36">-&gt;<pos:position pos:line="518" pos:column="41"/></operator><name pos:line="518" pos:column="38">start_match<pos:position pos:line="518" pos:column="49"/></name></name></expr>;<pos:position pos:line="518" pos:column="50"/></expr_stmt>
      <expr_stmt><expr><name><name pos:line="519" pos:column="7">md<pos:position pos:line="519" pos:column="9"/></name><operator pos:line="519" pos:column="9">-&gt;<pos:position pos:line="519" pos:column="14"/></operator><name pos:line="519" pos:column="11">start_match<pos:position pos:line="519" pos:column="22"/></name></name> <operator pos:line="519" pos:column="23">=<pos:position pos:line="519" pos:column="24"/></operator> <name pos:line="519" pos:column="25">eptr<pos:position pos:line="519" pos:column="29"/></name></expr>;<pos:position pos:line="519" pos:column="30"/></expr_stmt>

      <comment type="block" pos:line="521" pos:column="7">/* OK, now we can do the recursion. For each top-level alternative we
      restore the offset and recursion data. */</comment>

      <expr_stmt><expr><call><name pos:line="524" pos:column="7">DPRINTF<pos:position pos:line="524" pos:column="14"/></name><argument_list pos:line="524" pos:column="14">(<argument><expr><operator pos:line="524" pos:column="15">(<pos:position pos:line="524" pos:column="16"/></operator><literal type="string" pos:line="524" pos:column="16">"Recursing into group %d\n"<pos:position pos:line="524" pos:column="43"/></literal><operator pos:line="524" pos:column="43">,<pos:position pos:line="524" pos:column="44"/></operator> <name><name pos:line="524" pos:column="45">new_recursive<pos:position pos:line="524" pos:column="58"/></name><operator pos:line="524" pos:column="58">.<pos:position pos:line="524" pos:column="59"/></operator><name pos:line="524" pos:column="59">group_num<pos:position pos:line="524" pos:column="68"/></name></name><operator pos:line="524" pos:column="68">)<pos:position pos:line="524" pos:column="69"/></operator></expr></argument>)<pos:position pos:line="524" pos:column="70"/></argument_list></call></expr>;<pos:position pos:line="524" pos:column="71"/></expr_stmt>
      <do pos:line="525" pos:column="7">do
        <block pos:line="526" pos:column="9">{
        <expr_stmt><expr><call><name pos:line="527" pos:column="9">RMATCH<pos:position pos:line="527" pos:column="15"/></name><argument_list pos:line="527" pos:column="15">(<argument><expr><name pos:line="527" pos:column="16">rrc<pos:position pos:line="527" pos:column="19"/></name></expr></argument>, <argument><expr><name pos:line="527" pos:column="21">eptr<pos:position pos:line="527" pos:column="25"/></name></expr></argument>, <argument><expr><name pos:line="527" pos:column="27">callpat<pos:position pos:line="527" pos:column="34"/></name> <operator pos:line="527" pos:column="35">+<pos:position pos:line="527" pos:column="36"/></operator> <literal type="number" pos:line="527" pos:column="37">1<pos:position pos:line="527" pos:column="38"/></literal> <operator pos:line="527" pos:column="39">+<pos:position pos:line="527" pos:column="40"/></operator> <name pos:line="527" pos:column="41">LINK_SIZE<pos:position pos:line="527" pos:column="50"/></name></expr></argument>, <argument><expr><name pos:line="527" pos:column="52">offset_top<pos:position pos:line="527" pos:column="62"/></name></expr></argument>, <argument><expr><name pos:line="527" pos:column="64">md<pos:position pos:line="527" pos:column="66"/></name></expr></argument>, <argument><expr><name pos:line="527" pos:column="68">ims<pos:position pos:line="527" pos:column="71"/></name></expr></argument>,
            <argument><expr><name pos:line="528" pos:column="13">eptrb<pos:position pos:line="528" pos:column="18"/></name></expr></argument>, <argument><expr><name pos:line="528" pos:column="20">match_isgroup<pos:position pos:line="528" pos:column="33"/></name></expr></argument>)<pos:position pos:line="528" pos:column="34"/></argument_list></call></expr>;<pos:position pos:line="528" pos:column="35"/></expr_stmt>
        <if pos:line="529" pos:column="9">if <condition pos:line="529" pos:column="12">(<expr><name pos:line="529" pos:column="13">rrc<pos:position pos:line="529" pos:column="16"/></name> <operator pos:line="529" pos:column="17">==<pos:position pos:line="529" pos:column="19"/></operator> <name pos:line="529" pos:column="20">MATCH_MATCH<pos:position pos:line="529" pos:column="31"/></name></expr>)<pos:position pos:line="529" pos:column="32"/></condition><then pos:line="529" pos:column="32">
          <block pos:line="530" pos:column="11">{
          <expr_stmt><expr><name><name pos:line="531" pos:column="11">md<pos:position pos:line="531" pos:column="13"/></name><operator pos:line="531" pos:column="13">-&gt;<pos:position pos:line="531" pos:column="18"/></operator><name pos:line="531" pos:column="15">recursive<pos:position pos:line="531" pos:column="24"/></name></name> <operator pos:line="531" pos:column="25">=<pos:position pos:line="531" pos:column="26"/></operator> <name><name pos:line="531" pos:column="27">new_recursive<pos:position pos:line="531" pos:column="40"/></name><operator pos:line="531" pos:column="40">.<pos:position pos:line="531" pos:column="41"/></operator><name pos:line="531" pos:column="41">prevrec<pos:position pos:line="531" pos:column="48"/></name></name></expr>;<pos:position pos:line="531" pos:column="49"/></expr_stmt>
          <if pos:line="532" pos:column="11">if <condition pos:line="532" pos:column="14">(<expr><name><name pos:line="532" pos:column="15">new_recursive<pos:position pos:line="532" pos:column="28"/></name><operator pos:line="532" pos:column="28">.<pos:position pos:line="532" pos:column="29"/></operator><name pos:line="532" pos:column="29">offset_save<pos:position pos:line="532" pos:column="40"/></name></name> <operator pos:line="532" pos:column="41">!=<pos:position pos:line="532" pos:column="43"/></operator> <name pos:line="532" pos:column="44">stacksave<pos:position pos:line="532" pos:column="53"/></name></expr>)<pos:position pos:line="532" pos:column="54"/></condition><then pos:line="532" pos:column="54">
            <block type="pseudo"><expr_stmt><expr><call pos:line="533" pos:column="13">(<name pos:line="533" pos:column="14">pcre_free<pos:position pos:line="533" pos:column="23"/></name>)<argument_list pos:line="533" pos:column="24">(<argument><expr><name><name pos:line="533" pos:column="25">new_recursive<pos:position pos:line="533" pos:column="38"/></name><operator pos:line="533" pos:column="38">.<pos:position pos:line="533" pos:column="39"/></operator><name pos:line="533" pos:column="39">offset_save<pos:position pos:line="533" pos:column="50"/></name></name></expr></argument>)<pos:position pos:line="533" pos:column="51"/></argument_list></call></expr>;<pos:position pos:line="533" pos:column="52"/></expr_stmt></block></then></if>
          <expr_stmt><expr><call><name pos:line="534" pos:column="11">RRETURN<pos:position pos:line="534" pos:column="18"/></name><argument_list pos:line="534" pos:column="18">(<argument><expr><name pos:line="534" pos:column="19">MATCH_MATCH<pos:position pos:line="534" pos:column="30"/></name></expr></argument>)<pos:position pos:line="534" pos:column="31"/></argument_list></call></expr>;<pos:position pos:line="534" pos:column="32"/></expr_stmt>
          }<pos:position pos:line="535" pos:column="12"/></block></then>
        <elseif pos:line="536" pos:column="9">else <if pos:line="536" pos:column="14">if <condition pos:line="536" pos:column="17">(<expr><name pos:line="536" pos:column="18">rrc<pos:position pos:line="536" pos:column="21"/></name> <operator pos:line="536" pos:column="22">!=<pos:position pos:line="536" pos:column="24"/></operator> <name pos:line="536" pos:column="25">MATCH_NOMATCH<pos:position pos:line="536" pos:column="38"/></name></expr>)<pos:position pos:line="536" pos:column="39"/></condition><then pos:line="536" pos:column="39"> <block type="pseudo"><expr_stmt><expr><call><name pos:line="536" pos:column="40">RRETURN<pos:position pos:line="536" pos:column="47"/></name><argument_list pos:line="536" pos:column="47">(<argument><expr><name pos:line="536" pos:column="48">rrc<pos:position pos:line="536" pos:column="51"/></name></expr></argument>)<pos:position pos:line="536" pos:column="52"/></argument_list></call></expr>;<pos:position pos:line="536" pos:column="53"/></expr_stmt></block></then></if></elseif></if>

        <expr_stmt><expr><name><name pos:line="538" pos:column="9">md<pos:position pos:line="538" pos:column="11"/></name><operator pos:line="538" pos:column="11">-&gt;<pos:position pos:line="538" pos:column="16"/></operator><name pos:line="538" pos:column="13">recursive<pos:position pos:line="538" pos:column="22"/></name></name> <operator pos:line="538" pos:column="23">=<pos:position pos:line="538" pos:column="24"/></operator> <operator pos:line="538" pos:column="25">&amp;<pos:position pos:line="538" pos:column="30"/></operator><name pos:line="538" pos:column="26">new_recursive<pos:position pos:line="538" pos:column="39"/></name></expr>;<pos:position pos:line="538" pos:column="40"/></expr_stmt>
        <expr_stmt><expr><call><name pos:line="539" pos:column="9">memcpy<pos:position pos:line="539" pos:column="15"/></name><argument_list pos:line="539" pos:column="15">(<argument><expr><name><name pos:line="539" pos:column="16">md<pos:position pos:line="539" pos:column="18"/></name><operator pos:line="539" pos:column="18">-&gt;<pos:position pos:line="539" pos:column="23"/></operator><name pos:line="539" pos:column="20">offset_vector<pos:position pos:line="539" pos:column="33"/></name></name></expr></argument>, <argument><expr><name><name pos:line="539" pos:column="35">new_recursive<pos:position pos:line="539" pos:column="48"/></name><operator pos:line="539" pos:column="48">.<pos:position pos:line="539" pos:column="49"/></operator><name pos:line="539" pos:column="49">offset_save<pos:position pos:line="539" pos:column="60"/></name></name></expr></argument>,
            <argument><expr><name><name pos:line="540" pos:column="13">new_recursive<pos:position pos:line="540" pos:column="26"/></name><operator pos:line="540" pos:column="26">.<pos:position pos:line="540" pos:column="27"/></operator><name pos:line="540" pos:column="27">saved_max<pos:position pos:line="540" pos:column="36"/></name></name> <operator pos:line="540" pos:column="37">*<pos:position pos:line="540" pos:column="38"/></operator> <sizeof pos:line="540" pos:column="39">sizeof<argument_list pos:line="540" pos:column="45">(<argument><expr><name pos:line="540" pos:column="46">int<pos:position pos:line="540" pos:column="49"/></name></expr></argument>)<pos:position pos:line="540" pos:column="50"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="540" pos:column="51"/></argument_list></call></expr>;<pos:position pos:line="540" pos:column="52"/></expr_stmt>
        <expr_stmt><expr><name pos:line="541" pos:column="9">callpat<pos:position pos:line="541" pos:column="16"/></name> <operator pos:line="541" pos:column="17">+=<pos:position pos:line="541" pos:column="19"/></operator> <call><name pos:line="541" pos:column="20">GET<pos:position pos:line="541" pos:column="23"/></name><argument_list pos:line="541" pos:column="23">(<argument><expr><name pos:line="541" pos:column="24">callpat<pos:position pos:line="541" pos:column="31"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="541" pos:column="33">1<pos:position pos:line="541" pos:column="34"/></literal></expr></argument>)<pos:position pos:line="541" pos:column="35"/></argument_list></call></expr>;<pos:position pos:line="541" pos:column="36"/></expr_stmt>
        }<pos:position pos:line="542" pos:column="10"/></block>
      while <condition pos:line="543" pos:column="13">(<expr><operator pos:line="543" pos:column="14">*<pos:position pos:line="543" pos:column="15"/></operator><name pos:line="543" pos:column="15">callpat<pos:position pos:line="543" pos:column="22"/></name> <operator pos:line="543" pos:column="23">==<pos:position pos:line="543" pos:column="25"/></operator> <name pos:line="543" pos:column="26">OP_ALT<pos:position pos:line="543" pos:column="32"/></name></expr>)<pos:position pos:line="543" pos:column="33"/></condition>;<pos:position pos:line="543" pos:column="34"/></do>

      <expr_stmt><expr><call><name pos:line="545" pos:column="7">DPRINTF<pos:position pos:line="545" pos:column="14"/></name><argument_list pos:line="545" pos:column="14">(<argument><expr><operator pos:line="545" pos:column="15">(<pos:position pos:line="545" pos:column="16"/></operator><literal type="string" pos:line="545" pos:column="16">"Recursion didn't match\n"<pos:position pos:line="545" pos:column="42"/></literal><operator pos:line="545" pos:column="42">)<pos:position pos:line="545" pos:column="43"/></operator></expr></argument>)<pos:position pos:line="545" pos:column="44"/></argument_list></call></expr>;<pos:position pos:line="545" pos:column="45"/></expr_stmt>
      <expr_stmt><expr><name><name pos:line="546" pos:column="7">md<pos:position pos:line="546" pos:column="9"/></name><operator pos:line="546" pos:column="9">-&gt;<pos:position pos:line="546" pos:column="14"/></operator><name pos:line="546" pos:column="11">recursive<pos:position pos:line="546" pos:column="20"/></name></name> <operator pos:line="546" pos:column="21">=<pos:position pos:line="546" pos:column="22"/></operator> <name><name pos:line="546" pos:column="23">new_recursive<pos:position pos:line="546" pos:column="36"/></name><operator pos:line="546" pos:column="36">.<pos:position pos:line="546" pos:column="37"/></operator><name pos:line="546" pos:column="37">prevrec<pos:position pos:line="546" pos:column="44"/></name></name></expr>;<pos:position pos:line="546" pos:column="45"/></expr_stmt>
      <if pos:line="547" pos:column="7">if <condition pos:line="547" pos:column="10">(<expr><name><name pos:line="547" pos:column="11">new_recursive<pos:position pos:line="547" pos:column="24"/></name><operator pos:line="547" pos:column="24">.<pos:position pos:line="547" pos:column="25"/></operator><name pos:line="547" pos:column="25">offset_save<pos:position pos:line="547" pos:column="36"/></name></name> <operator pos:line="547" pos:column="37">!=<pos:position pos:line="547" pos:column="39"/></operator> <name pos:line="547" pos:column="40">stacksave<pos:position pos:line="547" pos:column="49"/></name></expr>)<pos:position pos:line="547" pos:column="50"/></condition><then pos:line="547" pos:column="50">
        <block type="pseudo"><expr_stmt><expr><call pos:line="548" pos:column="9">(<name pos:line="548" pos:column="10">pcre_free<pos:position pos:line="548" pos:column="19"/></name>)<argument_list pos:line="548" pos:column="20">(<argument><expr><name><name pos:line="548" pos:column="21">new_recursive<pos:position pos:line="548" pos:column="34"/></name><operator pos:line="548" pos:column="34">.<pos:position pos:line="548" pos:column="35"/></operator><name pos:line="548" pos:column="35">offset_save<pos:position pos:line="548" pos:column="46"/></name></name></expr></argument>)<pos:position pos:line="548" pos:column="47"/></argument_list></call></expr>;<pos:position pos:line="548" pos:column="48"/></expr_stmt></block></then></if>
      <expr_stmt><expr><call><name pos:line="549" pos:column="7">RRETURN<pos:position pos:line="549" pos:column="14"/></name><argument_list pos:line="549" pos:column="14">(<argument><expr><name pos:line="549" pos:column="15">MATCH_NOMATCH<pos:position pos:line="549" pos:column="28"/></name></expr></argument>)<pos:position pos:line="549" pos:column="29"/></argument_list></call></expr>;<pos:position pos:line="549" pos:column="30"/></expr_stmt>
      }<pos:position pos:line="550" pos:column="8"/></block>
    <comment type="block" pos:line="551" pos:column="5">/* Control never reaches here */</comment>

    <comment type="block" pos:line="553" pos:column="5">/* "Once" brackets are like assertion brackets except that after a match,
    the point in the subject string is not moved back. Thus there can never be
    a move back into the brackets. Friedl calls these "atomic" subpatterns.
    Check the alternative branches in turn - the matching won't pass the KET
    for this kind of subpattern. If any one branch matches, we carry on as at
    the end of a normal bracket, leaving the subject pointer. */</comment>

    <case pos:line="560" pos:column="5">case <expr><name pos:line="560" pos:column="10">OP_ONCE<pos:position pos:line="560" pos:column="17"/></name></expr>:<pos:position pos:line="560" pos:column="18"/></case>
      <block pos:line="561" pos:column="7">{
      <expr_stmt><expr><name pos:line="562" pos:column="7">prev<pos:position pos:line="562" pos:column="11"/></name> <operator pos:line="562" pos:column="12">=<pos:position pos:line="562" pos:column="13"/></operator> <name pos:line="562" pos:column="14">ecode<pos:position pos:line="562" pos:column="19"/></name></expr>;<pos:position pos:line="562" pos:column="20"/></expr_stmt>
      <expr_stmt><expr><name pos:line="563" pos:column="7">saved_eptr<pos:position pos:line="563" pos:column="17"/></name> <operator pos:line="563" pos:column="18">=<pos:position pos:line="563" pos:column="19"/></operator> <name pos:line="563" pos:column="20">eptr<pos:position pos:line="563" pos:column="24"/></name></expr>;<pos:position pos:line="563" pos:column="25"/></expr_stmt>

      <do pos:line="565" pos:column="7">do
        <block pos:line="566" pos:column="9">{
        <expr_stmt><expr><call><name pos:line="567" pos:column="9">RMATCH<pos:position pos:line="567" pos:column="15"/></name><argument_list pos:line="567" pos:column="15">(<argument><expr><name pos:line="567" pos:column="16">rrc<pos:position pos:line="567" pos:column="19"/></name></expr></argument>, <argument><expr><name pos:line="567" pos:column="21">eptr<pos:position pos:line="567" pos:column="25"/></name></expr></argument>, <argument><expr><name pos:line="567" pos:column="27">ecode<pos:position pos:line="567" pos:column="32"/></name> <operator pos:line="567" pos:column="33">+<pos:position pos:line="567" pos:column="34"/></operator> <literal type="number" pos:line="567" pos:column="35">1<pos:position pos:line="567" pos:column="36"/></literal> <operator pos:line="567" pos:column="37">+<pos:position pos:line="567" pos:column="38"/></operator> <name pos:line="567" pos:column="39">LINK_SIZE<pos:position pos:line="567" pos:column="48"/></name></expr></argument>, <argument><expr><name pos:line="567" pos:column="50">offset_top<pos:position pos:line="567" pos:column="60"/></name></expr></argument>, <argument><expr><name pos:line="567" pos:column="62">md<pos:position pos:line="567" pos:column="64"/></name></expr></argument>, <argument><expr><name pos:line="567" pos:column="66">ims<pos:position pos:line="567" pos:column="69"/></name></expr></argument>,
          <argument><expr><name pos:line="568" pos:column="11">eptrb<pos:position pos:line="568" pos:column="16"/></name></expr></argument>, <argument><expr><name pos:line="568" pos:column="18">match_isgroup<pos:position pos:line="568" pos:column="31"/></name></expr></argument>)<pos:position pos:line="568" pos:column="32"/></argument_list></call></expr>;<pos:position pos:line="568" pos:column="33"/></expr_stmt>
        <if pos:line="569" pos:column="9">if <condition pos:line="569" pos:column="12">(<expr><name pos:line="569" pos:column="13">rrc<pos:position pos:line="569" pos:column="16"/></name> <operator pos:line="569" pos:column="17">==<pos:position pos:line="569" pos:column="19"/></operator> <name pos:line="569" pos:column="20">MATCH_MATCH<pos:position pos:line="569" pos:column="31"/></name></expr>)<pos:position pos:line="569" pos:column="32"/></condition><then pos:line="569" pos:column="32"> <block type="pseudo"><break pos:line="569" pos:column="33">break;<pos:position pos:line="569" pos:column="39"/></break></block></then></if>
        <if pos:line="570" pos:column="9">if <condition pos:line="570" pos:column="12">(<expr><name pos:line="570" pos:column="13">rrc<pos:position pos:line="570" pos:column="16"/></name> <operator pos:line="570" pos:column="17">!=<pos:position pos:line="570" pos:column="19"/></operator> <name pos:line="570" pos:column="20">MATCH_NOMATCH<pos:position pos:line="570" pos:column="33"/></name></expr>)<pos:position pos:line="570" pos:column="34"/></condition><then pos:line="570" pos:column="34"> <block type="pseudo"><expr_stmt><expr><call><name pos:line="570" pos:column="35">RRETURN<pos:position pos:line="570" pos:column="42"/></name><argument_list pos:line="570" pos:column="42">(<argument><expr><name pos:line="570" pos:column="43">rrc<pos:position pos:line="570" pos:column="46"/></name></expr></argument>)<pos:position pos:line="570" pos:column="47"/></argument_list></call></expr>;<pos:position pos:line="570" pos:column="48"/></expr_stmt></block></then></if>
        <expr_stmt><expr><name pos:line="571" pos:column="9">ecode<pos:position pos:line="571" pos:column="14"/></name> <operator pos:line="571" pos:column="15">+=<pos:position pos:line="571" pos:column="17"/></operator> <call><name pos:line="571" pos:column="18">GET<pos:position pos:line="571" pos:column="21"/></name><argument_list pos:line="571" pos:column="21">(<argument><expr><name pos:line="571" pos:column="22">ecode<pos:position pos:line="571" pos:column="27"/></name></expr></argument>,<argument><expr><literal type="number" pos:line="571" pos:column="28">1<pos:position pos:line="571" pos:column="29"/></literal></expr></argument>)<pos:position pos:line="571" pos:column="30"/></argument_list></call></expr>;<pos:position pos:line="571" pos:column="31"/></expr_stmt>
        }<pos:position pos:line="572" pos:column="10"/></block>
      while <condition pos:line="573" pos:column="13">(<expr><operator pos:line="573" pos:column="14">*<pos:position pos:line="573" pos:column="15"/></operator><name pos:line="573" pos:column="15">ecode<pos:position pos:line="573" pos:column="20"/></name> <operator pos:line="573" pos:column="21">==<pos:position pos:line="573" pos:column="23"/></operator> <name pos:line="573" pos:column="24">OP_ALT<pos:position pos:line="573" pos:column="30"/></name></expr>)<pos:position pos:line="573" pos:column="31"/></condition>;<pos:position pos:line="573" pos:column="32"/></do>

      <comment type="block" pos:line="575" pos:column="7">/* If hit the end of the group (which could be repeated), fail */</comment>

      <if pos:line="577" pos:column="7">if <condition pos:line="577" pos:column="10">(<expr><operator pos:line="577" pos:column="11">*<pos:position pos:line="577" pos:column="12"/></operator><name pos:line="577" pos:column="12">ecode<pos:position pos:line="577" pos:column="17"/></name> <operator pos:line="577" pos:column="18">!=<pos:position pos:line="577" pos:column="20"/></operator> <name pos:line="577" pos:column="21">OP_ONCE<pos:position pos:line="577" pos:column="28"/></name> <operator pos:line="577" pos:column="29">&amp;&amp;<pos:position pos:line="577" pos:column="39"/></operator> <operator pos:line="577" pos:column="32">*<pos:position pos:line="577" pos:column="33"/></operator><name pos:line="577" pos:column="33">ecode<pos:position pos:line="577" pos:column="38"/></name> <operator pos:line="577" pos:column="39">!=<pos:position pos:line="577" pos:column="41"/></operator> <name pos:line="577" pos:column="42">OP_ALT<pos:position pos:line="577" pos:column="48"/></name></expr>)<pos:position pos:line="577" pos:column="49"/></condition><then pos:line="577" pos:column="49"> <block type="pseudo"><expr_stmt><expr><call><name pos:line="577" pos:column="50">RRETURN<pos:position pos:line="577" pos:column="57"/></name><argument_list pos:line="577" pos:column="57">(<argument><expr><name pos:line="577" pos:column="58">MATCH_NOMATCH<pos:position pos:line="577" pos:column="71"/></name></expr></argument>)<pos:position pos:line="577" pos:column="72"/></argument_list></call></expr>;<pos:position pos:line="577" pos:column="73"/></expr_stmt></block></then></if>

      <comment type="block" pos:line="579" pos:column="7">/* Continue as from after the assertion, updating the offsets high water
      mark, since extracts may have been taken. */</comment>

      <do pos:line="582" pos:column="7">do <block type="pseudo"><expr_stmt><expr><name pos:line="582" pos:column="10">ecode<pos:position pos:line="582" pos:column="15"/></name> <operator pos:line="582" pos:column="16">+=<pos:position pos:line="582" pos:column="18"/></operator> <call><name pos:line="582" pos:column="19">GET<pos:position pos:line="582" pos:column="22"/></name><argument_list pos:line="582" pos:column="22">(<argument><expr><name pos:line="582" pos:column="23">ecode<pos:position pos:line="582" pos:column="28"/></name></expr></argument>,<argument><expr><literal type="number" pos:line="582" pos:column="29">1<pos:position pos:line="582" pos:column="30"/></literal></expr></argument>)<pos:position pos:line="582" pos:column="31"/></argument_list></call></expr>;<pos:position pos:line="582" pos:column="32"/></expr_stmt></block> while <condition pos:line="582" pos:column="39">(<expr><operator pos:line="582" pos:column="40">*<pos:position pos:line="582" pos:column="41"/></operator><name pos:line="582" pos:column="41">ecode<pos:position pos:line="582" pos:column="46"/></name> <operator pos:line="582" pos:column="47">==<pos:position pos:line="582" pos:column="49"/></operator> <name pos:line="582" pos:column="50">OP_ALT<pos:position pos:line="582" pos:column="56"/></name></expr>)<pos:position pos:line="582" pos:column="57"/></condition>;<pos:position pos:line="582" pos:column="58"/></do>

      <expr_stmt><expr><name pos:line="584" pos:column="7">offset_top<pos:position pos:line="584" pos:column="17"/></name> <operator pos:line="584" pos:column="18">=<pos:position pos:line="584" pos:column="19"/></operator> <name><name pos:line="584" pos:column="20">md<pos:position pos:line="584" pos:column="22"/></name><operator pos:line="584" pos:column="22">-&gt;<pos:position pos:line="584" pos:column="27"/></operator><name pos:line="584" pos:column="24">end_offset_top<pos:position pos:line="584" pos:column="38"/></name></name></expr>;<pos:position pos:line="584" pos:column="39"/></expr_stmt>
      <expr_stmt><expr><name pos:line="585" pos:column="7">eptr<pos:position pos:line="585" pos:column="11"/></name> <operator pos:line="585" pos:column="12">=<pos:position pos:line="585" pos:column="13"/></operator> <name><name pos:line="585" pos:column="14">md<pos:position pos:line="585" pos:column="16"/></name><operator pos:line="585" pos:column="16">-&gt;<pos:position pos:line="585" pos:column="21"/></operator><name pos:line="585" pos:column="18">end_match_ptr<pos:position pos:line="585" pos:column="31"/></name></name></expr>;<pos:position pos:line="585" pos:column="32"/></expr_stmt>

      <comment type="block" pos:line="587" pos:column="7">/* For a non-repeating ket, just continue at this level. This also
      happens for a repeating ket if no characters were matched in the group.
      This is the forcible breaking of infinite loops as implemented in Perl
      5.005. If there is an options reset, it will get obeyed in the normal
      course of events. */</comment>

      <if pos:line="593" pos:column="7">if <condition pos:line="593" pos:column="10">(<expr><operator pos:line="593" pos:column="11">*<pos:position pos:line="593" pos:column="12"/></operator><name pos:line="593" pos:column="12">ecode<pos:position pos:line="593" pos:column="17"/></name> <operator pos:line="593" pos:column="18">==<pos:position pos:line="593" pos:column="20"/></operator> <name pos:line="593" pos:column="21">OP_KET<pos:position pos:line="593" pos:column="27"/></name> <operator pos:line="593" pos:column="28">||<pos:position pos:line="593" pos:column="30"/></operator> <name pos:line="593" pos:column="31">eptr<pos:position pos:line="593" pos:column="35"/></name> <operator pos:line="593" pos:column="36">==<pos:position pos:line="593" pos:column="38"/></operator> <name pos:line="593" pos:column="39">saved_eptr<pos:position pos:line="593" pos:column="49"/></name></expr>)<pos:position pos:line="593" pos:column="50"/></condition><then pos:line="593" pos:column="50">
        <block pos:line="594" pos:column="9">{
        <expr_stmt><expr><name pos:line="595" pos:column="9">ecode<pos:position pos:line="595" pos:column="14"/></name> <operator pos:line="595" pos:column="15">+=<pos:position pos:line="595" pos:column="17"/></operator> <literal type="number" pos:line="595" pos:column="18">1<pos:position pos:line="595" pos:column="19"/></literal><operator pos:line="595" pos:column="19">+<pos:position pos:line="595" pos:column="20"/></operator><name pos:line="595" pos:column="20">LINK_SIZE<pos:position pos:line="595" pos:column="29"/></name></expr>;<pos:position pos:line="595" pos:column="30"/></expr_stmt>
        <break pos:line="596" pos:column="9">break;<pos:position pos:line="596" pos:column="15"/></break>
        }<pos:position pos:line="597" pos:column="10"/></block></then></if>

      <comment type="block" pos:line="599" pos:column="7">/* The repeating kets try the rest of the pattern or restart from the
      preceding bracket, in the appropriate order. We need to reset any options
      that changed within the bracket before re-running it, so check the next
      opcode. */</comment>

      <if pos:line="604" pos:column="7">if <condition pos:line="604" pos:column="10">(<expr><name><name pos:line="604" pos:column="11">ecode<pos:position pos:line="604" pos:column="16"/></name><index pos:line="604" pos:column="16">[<expr><literal type="number" pos:line="604" pos:column="17">1<pos:position pos:line="604" pos:column="18"/></literal><operator pos:line="604" pos:column="18">+<pos:position pos:line="604" pos:column="19"/></operator><name pos:line="604" pos:column="19">LINK_SIZE<pos:position pos:line="604" pos:column="28"/></name></expr>]<pos:position pos:line="604" pos:column="29"/></index></name> <operator pos:line="604" pos:column="30">==<pos:position pos:line="604" pos:column="32"/></operator> <name pos:line="604" pos:column="33">OP_OPT<pos:position pos:line="604" pos:column="39"/></name></expr>)<pos:position pos:line="604" pos:column="40"/></condition><then pos:line="604" pos:column="40">
        <block pos:line="605" pos:column="9">{
        <expr_stmt><expr><name pos:line="606" pos:column="9">ims<pos:position pos:line="606" pos:column="12"/></name> <operator pos:line="606" pos:column="13">=<pos:position pos:line="606" pos:column="14"/></operator> <operator pos:line="606" pos:column="15">(<pos:position pos:line="606" pos:column="16"/></operator><name pos:line="606" pos:column="16">ims<pos:position pos:line="606" pos:column="19"/></name> <operator pos:line="606" pos:column="20">&amp;<pos:position pos:line="606" pos:column="25"/></operator> <operator pos:line="606" pos:column="22">~<pos:position pos:line="606" pos:column="23"/></operator><name pos:line="606" pos:column="23">PCRE_IMS<pos:position pos:line="606" pos:column="31"/></name><operator pos:line="606" pos:column="31">)<pos:position pos:line="606" pos:column="32"/></operator> <operator pos:line="606" pos:column="33">|<pos:position pos:line="606" pos:column="34"/></operator> <name><name pos:line="606" pos:column="35">ecode<pos:position pos:line="606" pos:column="40"/></name><index pos:line="606" pos:column="40">[<expr><literal type="number" pos:line="606" pos:column="41">4<pos:position pos:line="606" pos:column="42"/></literal></expr>]<pos:position pos:line="606" pos:column="43"/></index></name></expr>;<pos:position pos:line="606" pos:column="44"/></expr_stmt>
        <expr_stmt><expr><call><name pos:line="607" pos:column="9">DPRINTF<pos:position pos:line="607" pos:column="16"/></name><argument_list pos:line="607" pos:column="16">(<argument><expr><operator pos:line="607" pos:column="17">(<pos:position pos:line="607" pos:column="18"/></operator><literal type="string" pos:line="607" pos:column="18">"ims set to %02lx at group repeat\n"<pos:position pos:line="607" pos:column="54"/></literal><operator pos:line="607" pos:column="54">,<pos:position pos:line="607" pos:column="55"/></operator> <name pos:line="607" pos:column="56">ims<pos:position pos:line="607" pos:column="59"/></name><operator pos:line="607" pos:column="59">)<pos:position pos:line="607" pos:column="60"/></operator></expr></argument>)<pos:position pos:line="607" pos:column="61"/></argument_list></call></expr>;<pos:position pos:line="607" pos:column="62"/></expr_stmt>
        }<pos:position pos:line="608" pos:column="10"/></block></then></if>

      <if pos:line="610" pos:column="7">if <condition pos:line="610" pos:column="10">(<expr><operator pos:line="610" pos:column="11">*<pos:position pos:line="610" pos:column="12"/></operator><name pos:line="610" pos:column="12">ecode<pos:position pos:line="610" pos:column="17"/></name> <operator pos:line="610" pos:column="18">==<pos:position pos:line="610" pos:column="20"/></operator> <name pos:line="610" pos:column="21">OP_KETRMIN<pos:position pos:line="610" pos:column="31"/></name></expr>)<pos:position pos:line="610" pos:column="32"/></condition><then pos:line="610" pos:column="32">
        <block pos:line="611" pos:column="9">{
        <expr_stmt><expr><call><name pos:line="612" pos:column="9">RMATCH<pos:position pos:line="612" pos:column="15"/></name><argument_list pos:line="612" pos:column="15">(<argument><expr><name pos:line="612" pos:column="16">rrc<pos:position pos:line="612" pos:column="19"/></name></expr></argument>, <argument><expr><name pos:line="612" pos:column="21">eptr<pos:position pos:line="612" pos:column="25"/></name></expr></argument>, <argument><expr><name pos:line="612" pos:column="27">ecode<pos:position pos:line="612" pos:column="32"/></name> <operator pos:line="612" pos:column="33">+<pos:position pos:line="612" pos:column="34"/></operator> <literal type="number" pos:line="612" pos:column="35">1<pos:position pos:line="612" pos:column="36"/></literal> <operator pos:line="612" pos:column="37">+<pos:position pos:line="612" pos:column="38"/></operator> <name pos:line="612" pos:column="39">LINK_SIZE<pos:position pos:line="612" pos:column="48"/></name></expr></argument>, <argument><expr><name pos:line="612" pos:column="50">offset_top<pos:position pos:line="612" pos:column="60"/></name></expr></argument>, <argument><expr><name pos:line="612" pos:column="62">md<pos:position pos:line="612" pos:column="64"/></name></expr></argument>, <argument><expr><name pos:line="612" pos:column="66">ims<pos:position pos:line="612" pos:column="69"/></name></expr></argument>, <argument><expr><name pos:line="612" pos:column="71">eptrb<pos:position pos:line="612" pos:column="76"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="612" pos:column="78">0<pos:position pos:line="612" pos:column="79"/></literal></expr></argument>)<pos:position pos:line="612" pos:column="80"/></argument_list></call></expr>;<pos:position pos:line="612" pos:column="81"/></expr_stmt>
        <if pos:line="613" pos:column="9">if <condition pos:line="613" pos:column="12">(<expr><name pos:line="613" pos:column="13">rrc<pos:position pos:line="613" pos:column="16"/></name> <operator pos:line="613" pos:column="17">!=<pos:position pos:line="613" pos:column="19"/></operator> <name pos:line="613" pos:column="20">MATCH_NOMATCH<pos:position pos:line="613" pos:column="33"/></name></expr>)<pos:position pos:line="613" pos:column="34"/></condition><then pos:line="613" pos:column="34"> <block type="pseudo"><expr_stmt><expr><call><name pos:line="613" pos:column="35">RRETURN<pos:position pos:line="613" pos:column="42"/></name><argument_list pos:line="613" pos:column="42">(<argument><expr><name pos:line="613" pos:column="43">rrc<pos:position pos:line="613" pos:column="46"/></name></expr></argument>)<pos:position pos:line="613" pos:column="47"/></argument_list></call></expr>;<pos:position pos:line="613" pos:column="48"/></expr_stmt></block></then></if>
        <expr_stmt><expr><call><name pos:line="614" pos:column="9">RMATCH<pos:position pos:line="614" pos:column="15"/></name><argument_list pos:line="614" pos:column="15">(<argument><expr><name pos:line="614" pos:column="16">rrc<pos:position pos:line="614" pos:column="19"/></name></expr></argument>, <argument><expr><name pos:line="614" pos:column="21">eptr<pos:position pos:line="614" pos:column="25"/></name></expr></argument>, <argument><expr><name pos:line="614" pos:column="27">prev<pos:position pos:line="614" pos:column="31"/></name></expr></argument>, <argument><expr><name pos:line="614" pos:column="33">offset_top<pos:position pos:line="614" pos:column="43"/></name></expr></argument>, <argument><expr><name pos:line="614" pos:column="45">md<pos:position pos:line="614" pos:column="47"/></name></expr></argument>, <argument><expr><name pos:line="614" pos:column="49">ims<pos:position pos:line="614" pos:column="52"/></name></expr></argument>, <argument><expr><name pos:line="614" pos:column="54">eptrb<pos:position pos:line="614" pos:column="59"/></name></expr></argument>, <argument><expr><name pos:line="614" pos:column="61">match_isgroup<pos:position pos:line="614" pos:column="74"/></name></expr></argument>)<pos:position pos:line="614" pos:column="75"/></argument_list></call></expr>;<pos:position pos:line="614" pos:column="76"/></expr_stmt>
        <if pos:line="615" pos:column="9">if <condition pos:line="615" pos:column="12">(<expr><name pos:line="615" pos:column="13">rrc<pos:position pos:line="615" pos:column="16"/></name> <operator pos:line="615" pos:column="17">!=<pos:position pos:line="615" pos:column="19"/></operator> <name pos:line="615" pos:column="20">MATCH_NOMATCH<pos:position pos:line="615" pos:column="33"/></name></expr>)<pos:position pos:line="615" pos:column="34"/></condition><then pos:line="615" pos:column="34"> <block type="pseudo"><expr_stmt><expr><call><name pos:line="615" pos:column="35">RRETURN<pos:position pos:line="615" pos:column="42"/></name><argument_list pos:line="615" pos:column="42">(<argument><expr><name pos:line="615" pos:column="43">rrc<pos:position pos:line="615" pos:column="46"/></name></expr></argument>)<pos:position pos:line="615" pos:column="47"/></argument_list></call></expr>;<pos:position pos:line="615" pos:column="48"/></expr_stmt></block></then></if>
        }<pos:position pos:line="616" pos:column="10"/></block></then>
      <else pos:line="617" pos:column="7">else  <comment type="block" pos:line="617" pos:column="13">/* OP_KETRMAX */</comment>
        <block pos:line="618" pos:column="9">{
        <expr_stmt><expr><call><name pos:line="619" pos:column="9">RMATCH<pos:position pos:line="619" pos:column="15"/></name><argument_list pos:line="619" pos:column="15">(<argument><expr><name pos:line="619" pos:column="16">rrc<pos:position pos:line="619" pos:column="19"/></name></expr></argument>, <argument><expr><name pos:line="619" pos:column="21">eptr<pos:position pos:line="619" pos:column="25"/></name></expr></argument>, <argument><expr><name pos:line="619" pos:column="27">prev<pos:position pos:line="619" pos:column="31"/></name></expr></argument>, <argument><expr><name pos:line="619" pos:column="33">offset_top<pos:position pos:line="619" pos:column="43"/></name></expr></argument>, <argument><expr><name pos:line="619" pos:column="45">md<pos:position pos:line="619" pos:column="47"/></name></expr></argument>, <argument><expr><name pos:line="619" pos:column="49">ims<pos:position pos:line="619" pos:column="52"/></name></expr></argument>, <argument><expr><name pos:line="619" pos:column="54">eptrb<pos:position pos:line="619" pos:column="59"/></name></expr></argument>, <argument><expr><name pos:line="619" pos:column="61">match_isgroup<pos:position pos:line="619" pos:column="74"/></name></expr></argument>)<pos:position pos:line="619" pos:column="75"/></argument_list></call></expr>;<pos:position pos:line="619" pos:column="76"/></expr_stmt>
        <if pos:line="620" pos:column="9">if <condition pos:line="620" pos:column="12">(<expr><name pos:line="620" pos:column="13">rrc<pos:position pos:line="620" pos:column="16"/></name> <operator pos:line="620" pos:column="17">!=<pos:position pos:line="620" pos:column="19"/></operator> <name pos:line="620" pos:column="20">MATCH_NOMATCH<pos:position pos:line="620" pos:column="33"/></name></expr>)<pos:position pos:line="620" pos:column="34"/></condition><then pos:line="620" pos:column="34"> <block type="pseudo"><expr_stmt><expr><call><name pos:line="620" pos:column="35">RRETURN<pos:position pos:line="620" pos:column="42"/></name><argument_list pos:line="620" pos:column="42">(<argument><expr><name pos:line="620" pos:column="43">rrc<pos:position pos:line="620" pos:column="46"/></name></expr></argument>)<pos:position pos:line="620" pos:column="47"/></argument_list></call></expr>;<pos:position pos:line="620" pos:column="48"/></expr_stmt></block></then></if>
        <expr_stmt><expr><call><name pos:line="621" pos:column="9">RMATCH<pos:position pos:line="621" pos:column="15"/></name><argument_list pos:line="621" pos:column="15">(<argument><expr><name pos:line="621" pos:column="16">rrc<pos:position pos:line="621" pos:column="19"/></name></expr></argument>, <argument><expr><name pos:line="621" pos:column="21">eptr<pos:position pos:line="621" pos:column="25"/></name></expr></argument>, <argument><expr><name pos:line="621" pos:column="27">ecode<pos:position pos:line="621" pos:column="32"/></name> <operator pos:line="621" pos:column="33">+<pos:position pos:line="621" pos:column="34"/></operator> <literal type="number" pos:line="621" pos:column="35">1<pos:position pos:line="621" pos:column="36"/></literal><operator pos:line="621" pos:column="36">+<pos:position pos:line="621" pos:column="37"/></operator><name pos:line="621" pos:column="37">LINK_SIZE<pos:position pos:line="621" pos:column="46"/></name></expr></argument>, <argument><expr><name pos:line="621" pos:column="48">offset_top<pos:position pos:line="621" pos:column="58"/></name></expr></argument>, <argument><expr><name pos:line="621" pos:column="60">md<pos:position pos:line="621" pos:column="62"/></name></expr></argument>, <argument><expr><name pos:line="621" pos:column="64">ims<pos:position pos:line="621" pos:column="67"/></name></expr></argument>, <argument><expr><name pos:line="621" pos:column="69">eptrb<pos:position pos:line="621" pos:column="74"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="621" pos:column="76">0<pos:position pos:line="621" pos:column="77"/></literal></expr></argument>)<pos:position pos:line="621" pos:column="78"/></argument_list></call></expr>;<pos:position pos:line="621" pos:column="79"/></expr_stmt>
        <if pos:line="622" pos:column="9">if <condition pos:line="622" pos:column="12">(<expr><name pos:line="622" pos:column="13">rrc<pos:position pos:line="622" pos:column="16"/></name> <operator pos:line="622" pos:column="17">!=<pos:position pos:line="622" pos:column="19"/></operator> <name pos:line="622" pos:column="20">MATCH_NOMATCH<pos:position pos:line="622" pos:column="33"/></name></expr>)<pos:position pos:line="622" pos:column="34"/></condition><then pos:line="622" pos:column="34"> <block type="pseudo"><expr_stmt><expr><call><name pos:line="622" pos:column="35">RRETURN<pos:position pos:line="622" pos:column="42"/></name><argument_list pos:line="622" pos:column="42">(<argument><expr><name pos:line="622" pos:column="43">rrc<pos:position pos:line="622" pos:column="46"/></name></expr></argument>)<pos:position pos:line="622" pos:column="47"/></argument_list></call></expr>;<pos:position pos:line="622" pos:column="48"/></expr_stmt></block></then></if>
        }<pos:position pos:line="623" pos:column="10"/></block></else></if>
      }<pos:position pos:line="624" pos:column="8"/></block>
    <expr_stmt><expr><call><name pos:line="625" pos:column="5">RRETURN<pos:position pos:line="625" pos:column="12"/></name><argument_list pos:line="625" pos:column="12">(<argument><expr><name pos:line="625" pos:column="13">MATCH_NOMATCH<pos:position pos:line="625" pos:column="26"/></name></expr></argument>)<pos:position pos:line="625" pos:column="27"/></argument_list></call></expr>;<pos:position pos:line="625" pos:column="28"/></expr_stmt>

    <comment type="block" pos:line="627" pos:column="5">/* An alternation is the end of a branch; scan along to find the end of the
    bracketed group and go to there. */</comment>

    <case pos:line="630" pos:column="5">case <expr><name pos:line="630" pos:column="10">OP_ALT<pos:position pos:line="630" pos:column="16"/></name></expr>:<pos:position pos:line="630" pos:column="17"/></case>
    <do pos:line="631" pos:column="5">do <block type="pseudo"><expr_stmt><expr><name pos:line="631" pos:column="8">ecode<pos:position pos:line="631" pos:column="13"/></name> <operator pos:line="631" pos:column="14">+=<pos:position pos:line="631" pos:column="16"/></operator> <call><name pos:line="631" pos:column="17">GET<pos:position pos:line="631" pos:column="20"/></name><argument_list pos:line="631" pos:column="20">(<argument><expr><name pos:line="631" pos:column="21">ecode<pos:position pos:line="631" pos:column="26"/></name></expr></argument>,<argument><expr><literal type="number" pos:line="631" pos:column="27">1<pos:position pos:line="631" pos:column="28"/></literal></expr></argument>)<pos:position pos:line="631" pos:column="29"/></argument_list></call></expr>;<pos:position pos:line="631" pos:column="30"/></expr_stmt></block> while <condition pos:line="631" pos:column="37">(<expr><operator pos:line="631" pos:column="38">*<pos:position pos:line="631" pos:column="39"/></operator><name pos:line="631" pos:column="39">ecode<pos:position pos:line="631" pos:column="44"/></name> <operator pos:line="631" pos:column="45">==<pos:position pos:line="631" pos:column="47"/></operator> <name pos:line="631" pos:column="48">OP_ALT<pos:position pos:line="631" pos:column="54"/></name></expr>)<pos:position pos:line="631" pos:column="55"/></condition>;<pos:position pos:line="631" pos:column="56"/></do>
    <break pos:line="632" pos:column="5">break;<pos:position pos:line="632" pos:column="11"/></break>

    <comment type="block" pos:line="634" pos:column="5">/* BRAZERO and BRAMINZERO occur just before a bracket group, indicating
    that it may occur zero times. It may repeat infinitely, or not at all -
    i.e. it could be ()* or ()? in the pattern. Brackets with fixed upper
    repeat limits are compiled as a number of copies, with the optional ones
    preceded by BRAZERO or BRAMINZERO. */</comment>

    <case pos:line="640" pos:column="5">case <expr><name pos:line="640" pos:column="10">OP_BRAZERO<pos:position pos:line="640" pos:column="20"/></name></expr>:<pos:position pos:line="640" pos:column="21"/></case>
      <block pos:line="641" pos:column="7">{
      <expr_stmt><expr><name pos:line="642" pos:column="7">next<pos:position pos:line="642" pos:column="11"/></name> <operator pos:line="642" pos:column="12">=<pos:position pos:line="642" pos:column="13"/></operator> <name pos:line="642" pos:column="14">ecode<pos:position pos:line="642" pos:column="19"/></name><operator pos:line="642" pos:column="19">+<pos:position pos:line="642" pos:column="20"/></operator><literal type="number" pos:line="642" pos:column="20">1<pos:position pos:line="642" pos:column="21"/></literal></expr>;<pos:position pos:line="642" pos:column="22"/></expr_stmt>
      <expr_stmt><expr><call><name pos:line="643" pos:column="7">RMATCH<pos:position pos:line="643" pos:column="13"/></name><argument_list pos:line="643" pos:column="13">(<argument><expr><name pos:line="643" pos:column="14">rrc<pos:position pos:line="643" pos:column="17"/></name></expr></argument>, <argument><expr><name pos:line="643" pos:column="19">eptr<pos:position pos:line="643" pos:column="23"/></name></expr></argument>, <argument><expr><name pos:line="643" pos:column="25">next<pos:position pos:line="643" pos:column="29"/></name></expr></argument>, <argument><expr><name pos:line="643" pos:column="31">offset_top<pos:position pos:line="643" pos:column="41"/></name></expr></argument>, <argument><expr><name pos:line="643" pos:column="43">md<pos:position pos:line="643" pos:column="45"/></name></expr></argument>, <argument><expr><name pos:line="643" pos:column="47">ims<pos:position pos:line="643" pos:column="50"/></name></expr></argument>, <argument><expr><name pos:line="643" pos:column="52">eptrb<pos:position pos:line="643" pos:column="57"/></name></expr></argument>, <argument><expr><name pos:line="643" pos:column="59">match_isgroup<pos:position pos:line="643" pos:column="72"/></name></expr></argument>)<pos:position pos:line="643" pos:column="73"/></argument_list></call></expr>;<pos:position pos:line="643" pos:column="74"/></expr_stmt>
      <if pos:line="644" pos:column="7">if <condition pos:line="644" pos:column="10">(<expr><name pos:line="644" pos:column="11">rrc<pos:position pos:line="644" pos:column="14"/></name> <operator pos:line="644" pos:column="15">!=<pos:position pos:line="644" pos:column="17"/></operator> <name pos:line="644" pos:column="18">MATCH_NOMATCH<pos:position pos:line="644" pos:column="31"/></name></expr>)<pos:position pos:line="644" pos:column="32"/></condition><then pos:line="644" pos:column="32"> <block type="pseudo"><expr_stmt><expr><call><name pos:line="644" pos:column="33">RRETURN<pos:position pos:line="644" pos:column="40"/></name><argument_list pos:line="644" pos:column="40">(<argument><expr><name pos:line="644" pos:column="41">rrc<pos:position pos:line="644" pos:column="44"/></name></expr></argument>)<pos:position pos:line="644" pos:column="45"/></argument_list></call></expr>;<pos:position pos:line="644" pos:column="46"/></expr_stmt></block></then></if>
      <do pos:line="645" pos:column="7">do <block type="pseudo"><expr_stmt><expr><name pos:line="645" pos:column="10">next<pos:position pos:line="645" pos:column="14"/></name> <operator pos:line="645" pos:column="15">+=<pos:position pos:line="645" pos:column="17"/></operator> <call><name pos:line="645" pos:column="18">GET<pos:position pos:line="645" pos:column="21"/></name><argument_list pos:line="645" pos:column="21">(<argument><expr><name pos:line="645" pos:column="22">next<pos:position pos:line="645" pos:column="26"/></name></expr></argument>,<argument><expr><literal type="number" pos:line="645" pos:column="27">1<pos:position pos:line="645" pos:column="28"/></literal></expr></argument>)<pos:position pos:line="645" pos:column="29"/></argument_list></call></expr>;<pos:position pos:line="645" pos:column="30"/></expr_stmt></block> while <condition pos:line="645" pos:column="37">(<expr><operator pos:line="645" pos:column="38">*<pos:position pos:line="645" pos:column="39"/></operator><name pos:line="645" pos:column="39">next<pos:position pos:line="645" pos:column="43"/></name> <operator pos:line="645" pos:column="44">==<pos:position pos:line="645" pos:column="46"/></operator> <name pos:line="645" pos:column="47">OP_ALT<pos:position pos:line="645" pos:column="53"/></name></expr>)<pos:position pos:line="645" pos:column="54"/></condition>;<pos:position pos:line="645" pos:column="55"/></do>
      <expr_stmt><expr><name pos:line="646" pos:column="7">ecode<pos:position pos:line="646" pos:column="12"/></name> <operator pos:line="646" pos:column="13">=<pos:position pos:line="646" pos:column="14"/></operator> <name pos:line="646" pos:column="15">next<pos:position pos:line="646" pos:column="19"/></name> <operator pos:line="646" pos:column="20">+<pos:position pos:line="646" pos:column="21"/></operator> <literal type="number" pos:line="646" pos:column="22">1<pos:position pos:line="646" pos:column="23"/></literal><operator pos:line="646" pos:column="23">+<pos:position pos:line="646" pos:column="24"/></operator><name pos:line="646" pos:column="24">LINK_SIZE<pos:position pos:line="646" pos:column="33"/></name></expr>;<pos:position pos:line="646" pos:column="34"/></expr_stmt>
      }<pos:position pos:line="647" pos:column="8"/></block>
    <break pos:line="648" pos:column="5">break;<pos:position pos:line="648" pos:column="11"/></break>

    <case pos:line="650" pos:column="5">case <expr><name pos:line="650" pos:column="10">OP_BRAMINZERO<pos:position pos:line="650" pos:column="23"/></name></expr>:<pos:position pos:line="650" pos:column="24"/></case>
      <block pos:line="651" pos:column="7">{
      <expr_stmt><expr><name pos:line="652" pos:column="7">next<pos:position pos:line="652" pos:column="11"/></name> <operator pos:line="652" pos:column="12">=<pos:position pos:line="652" pos:column="13"/></operator> <name pos:line="652" pos:column="14">ecode<pos:position pos:line="652" pos:column="19"/></name><operator pos:line="652" pos:column="19">+<pos:position pos:line="652" pos:column="20"/></operator><literal type="number" pos:line="652" pos:column="20">1<pos:position pos:line="652" pos:column="21"/></literal></expr>;<pos:position pos:line="652" pos:column="22"/></expr_stmt>
      <do pos:line="653" pos:column="7">do <block type="pseudo"><expr_stmt><expr><name pos:line="653" pos:column="10">next<pos:position pos:line="653" pos:column="14"/></name> <operator pos:line="653" pos:column="15">+=<pos:position pos:line="653" pos:column="17"/></operator> <call><name pos:line="653" pos:column="18">GET<pos:position pos:line="653" pos:column="21"/></name><argument_list pos:line="653" pos:column="21">(<argument><expr><name pos:line="653" pos:column="22">next<pos:position pos:line="653" pos:column="26"/></name></expr></argument>,<argument><expr><literal type="number" pos:line="653" pos:column="27">1<pos:position pos:line="653" pos:column="28"/></literal></expr></argument>)<pos:position pos:line="653" pos:column="29"/></argument_list></call></expr>;<pos:position pos:line="653" pos:column="30"/></expr_stmt></block> while <condition pos:line="653" pos:column="37">(<expr><operator pos:line="653" pos:column="38">*<pos:position pos:line="653" pos:column="39"/></operator><name pos:line="653" pos:column="39">next<pos:position pos:line="653" pos:column="43"/></name> <operator pos:line="653" pos:column="44">==<pos:position pos:line="653" pos:column="46"/></operator> <name pos:line="653" pos:column="47">OP_ALT<pos:position pos:line="653" pos:column="53"/></name></expr>)<pos:position pos:line="653" pos:column="54"/></condition>;<pos:position pos:line="653" pos:column="55"/></do>
      <expr_stmt><expr><call><name pos:line="654" pos:column="7">RMATCH<pos:position pos:line="654" pos:column="13"/></name><argument_list pos:line="654" pos:column="13">(<argument><expr><name pos:line="654" pos:column="14">rrc<pos:position pos:line="654" pos:column="17"/></name></expr></argument>, <argument><expr><name pos:line="654" pos:column="19">eptr<pos:position pos:line="654" pos:column="23"/></name></expr></argument>, <argument><expr><name pos:line="654" pos:column="25">next<pos:position pos:line="654" pos:column="29"/></name> <operator pos:line="654" pos:column="30">+<pos:position pos:line="654" pos:column="31"/></operator> <literal type="number" pos:line="654" pos:column="32">1<pos:position pos:line="654" pos:column="33"/></literal><operator pos:line="654" pos:column="33">+<pos:position pos:line="654" pos:column="34"/></operator><name pos:line="654" pos:column="34">LINK_SIZE<pos:position pos:line="654" pos:column="43"/></name></expr></argument>, <argument><expr><name pos:line="654" pos:column="45">offset_top<pos:position pos:line="654" pos:column="55"/></name></expr></argument>, <argument><expr><name pos:line="654" pos:column="57">md<pos:position pos:line="654" pos:column="59"/></name></expr></argument>, <argument><expr><name pos:line="654" pos:column="61">ims<pos:position pos:line="654" pos:column="64"/></name></expr></argument>, <argument><expr><name pos:line="654" pos:column="66">eptrb<pos:position pos:line="654" pos:column="71"/></name></expr></argument>,
        <argument><expr><name pos:line="655" pos:column="9">match_isgroup<pos:position pos:line="655" pos:column="22"/></name></expr></argument>)<pos:position pos:line="655" pos:column="23"/></argument_list></call></expr>;<pos:position pos:line="655" pos:column="24"/></expr_stmt>
      <if pos:line="656" pos:column="7">if <condition pos:line="656" pos:column="10">(<expr><name pos:line="656" pos:column="11">rrc<pos:position pos:line="656" pos:column="14"/></name> <operator pos:line="656" pos:column="15">!=<pos:position pos:line="656" pos:column="17"/></operator> <name pos:line="656" pos:column="18">MATCH_NOMATCH<pos:position pos:line="656" pos:column="31"/></name></expr>)<pos:position pos:line="656" pos:column="32"/></condition><then pos:line="656" pos:column="32"> <block type="pseudo"><expr_stmt><expr><call><name pos:line="656" pos:column="33">RRETURN<pos:position pos:line="656" pos:column="40"/></name><argument_list pos:line="656" pos:column="40">(<argument><expr><name pos:line="656" pos:column="41">rrc<pos:position pos:line="656" pos:column="44"/></name></expr></argument>)<pos:position pos:line="656" pos:column="45"/></argument_list></call></expr>;<pos:position pos:line="656" pos:column="46"/></expr_stmt></block></then></if>
      <expr_stmt><expr><name pos:line="657" pos:column="7">ecode<pos:position pos:line="657" pos:column="12"/></name><operator pos:line="657" pos:column="12">++<pos:position pos:line="657" pos:column="14"/></operator></expr>;<pos:position pos:line="657" pos:column="15"/></expr_stmt>
      }<pos:position pos:line="658" pos:column="8"/></block>
    <break pos:line="659" pos:column="5">break;<pos:position pos:line="659" pos:column="11"/></break>

    <comment type="block" pos:line="661" pos:column="5">/* End of a group, repeated or non-repeating. If we are at the end of
    an assertion "group", stop matching and return MATCH_MATCH, but record the
    current high water mark for use by positive assertions. Do this also
    for the "once" (not-backup up) groups. */</comment>

    <case pos:line="666" pos:column="5">case <expr><name pos:line="666" pos:column="10">OP_KET<pos:position pos:line="666" pos:column="16"/></name></expr>:<pos:position pos:line="666" pos:column="17"/></case>
    <case pos:line="667" pos:column="5">case <expr><name pos:line="667" pos:column="10">OP_KETRMIN<pos:position pos:line="667" pos:column="20"/></name></expr>:<pos:position pos:line="667" pos:column="21"/></case>
    <case pos:line="668" pos:column="5">case <expr><name pos:line="668" pos:column="10">OP_KETRMAX<pos:position pos:line="668" pos:column="20"/></name></expr>:<pos:position pos:line="668" pos:column="21"/></case>
      <block pos:line="669" pos:column="7">{
      <expr_stmt><expr><name pos:line="670" pos:column="7">prev<pos:position pos:line="670" pos:column="11"/></name> <operator pos:line="670" pos:column="12">=<pos:position pos:line="670" pos:column="13"/></operator> <name pos:line="670" pos:column="14">ecode<pos:position pos:line="670" pos:column="19"/></name> <operator pos:line="670" pos:column="20">-<pos:position pos:line="670" pos:column="21"/></operator> <call><name pos:line="670" pos:column="22">GET<pos:position pos:line="670" pos:column="25"/></name><argument_list pos:line="670" pos:column="25">(<argument><expr><name pos:line="670" pos:column="26">ecode<pos:position pos:line="670" pos:column="31"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="670" pos:column="33">1<pos:position pos:line="670" pos:column="34"/></literal></expr></argument>)<pos:position pos:line="670" pos:column="35"/></argument_list></call></expr>;<pos:position pos:line="670" pos:column="36"/></expr_stmt>
      <expr_stmt><expr><name pos:line="671" pos:column="7">saved_eptr<pos:position pos:line="671" pos:column="17"/></name> <operator pos:line="671" pos:column="18">=<pos:position pos:line="671" pos:column="19"/></operator> <name><name pos:line="671" pos:column="20">eptrb<pos:position pos:line="671" pos:column="25"/></name><operator pos:line="671" pos:column="25">-&gt;<pos:position pos:line="671" pos:column="30"/></operator><name pos:line="671" pos:column="27">epb_saved_eptr<pos:position pos:line="671" pos:column="41"/></name></name></expr>;<pos:position pos:line="671" pos:column="42"/></expr_stmt>

      <comment type="block" pos:line="673" pos:column="7">/* Back up the stack of bracket start pointers. */</comment>

      <expr_stmt><expr><name pos:line="675" pos:column="7">eptrb<pos:position pos:line="675" pos:column="12"/></name> <operator pos:line="675" pos:column="13">=<pos:position pos:line="675" pos:column="14"/></operator> <name><name pos:line="675" pos:column="15">eptrb<pos:position pos:line="675" pos:column="20"/></name><operator pos:line="675" pos:column="20">-&gt;<pos:position pos:line="675" pos:column="25"/></operator><name pos:line="675" pos:column="22">epb_prev<pos:position pos:line="675" pos:column="30"/></name></name></expr>;<pos:position pos:line="675" pos:column="31"/></expr_stmt>

      <if pos:line="677" pos:column="7">if <condition pos:line="677" pos:column="10">(<expr><operator pos:line="677" pos:column="11">*<pos:position pos:line="677" pos:column="12"/></operator><name pos:line="677" pos:column="12">prev<pos:position pos:line="677" pos:column="16"/></name> <operator pos:line="677" pos:column="17">==<pos:position pos:line="677" pos:column="19"/></operator> <name pos:line="677" pos:column="20">OP_ASSERT<pos:position pos:line="677" pos:column="29"/></name> <operator pos:line="677" pos:column="30">||<pos:position pos:line="677" pos:column="32"/></operator> <operator pos:line="677" pos:column="33">*<pos:position pos:line="677" pos:column="34"/></operator><name pos:line="677" pos:column="34">prev<pos:position pos:line="677" pos:column="38"/></name> <operator pos:line="677" pos:column="39">==<pos:position pos:line="677" pos:column="41"/></operator> <name pos:line="677" pos:column="42">OP_ASSERT_NOT<pos:position pos:line="677" pos:column="55"/></name> <operator pos:line="677" pos:column="56">||<pos:position pos:line="677" pos:column="58"/></operator>
          <operator pos:line="678" pos:column="11">*<pos:position pos:line="678" pos:column="12"/></operator><name pos:line="678" pos:column="12">prev<pos:position pos:line="678" pos:column="16"/></name> <operator pos:line="678" pos:column="17">==<pos:position pos:line="678" pos:column="19"/></operator> <name pos:line="678" pos:column="20">OP_ASSERTBACK<pos:position pos:line="678" pos:column="33"/></name> <operator pos:line="678" pos:column="34">||<pos:position pos:line="678" pos:column="36"/></operator> <operator pos:line="678" pos:column="37">*<pos:position pos:line="678" pos:column="38"/></operator><name pos:line="678" pos:column="38">prev<pos:position pos:line="678" pos:column="42"/></name> <operator pos:line="678" pos:column="43">==<pos:position pos:line="678" pos:column="45"/></operator> <name pos:line="678" pos:column="46">OP_ASSERTBACK_NOT<pos:position pos:line="678" pos:column="63"/></name> <operator pos:line="678" pos:column="64">||<pos:position pos:line="678" pos:column="66"/></operator>
          <operator pos:line="679" pos:column="11">*<pos:position pos:line="679" pos:column="12"/></operator><name pos:line="679" pos:column="12">prev<pos:position pos:line="679" pos:column="16"/></name> <operator pos:line="679" pos:column="17">==<pos:position pos:line="679" pos:column="19"/></operator> <name pos:line="679" pos:column="20">OP_ONCE<pos:position pos:line="679" pos:column="27"/></name></expr>)<pos:position pos:line="679" pos:column="28"/></condition><then pos:line="679" pos:column="28">
        <block pos:line="680" pos:column="9">{
        <expr_stmt><expr><name><name pos:line="681" pos:column="9">md<pos:position pos:line="681" pos:column="11"/></name><operator pos:line="681" pos:column="11">-&gt;<pos:position pos:line="681" pos:column="16"/></operator><name pos:line="681" pos:column="13">end_match_ptr<pos:position pos:line="681" pos:column="26"/></name></name> <operator pos:line="681" pos:column="27">=<pos:position pos:line="681" pos:column="28"/></operator> <name pos:line="681" pos:column="29">eptr<pos:position pos:line="681" pos:column="33"/></name></expr>;<pos:position pos:line="681" pos:column="34"/></expr_stmt>      <comment type="block" pos:line="681" pos:column="40">/* For ONCE */</comment>
        <expr_stmt><expr><name><name pos:line="682" pos:column="9">md<pos:position pos:line="682" pos:column="11"/></name><operator pos:line="682" pos:column="11">-&gt;<pos:position pos:line="682" pos:column="16"/></operator><name pos:line="682" pos:column="13">end_offset_top<pos:position pos:line="682" pos:column="27"/></name></name> <operator pos:line="682" pos:column="28">=<pos:position pos:line="682" pos:column="29"/></operator> <name pos:line="682" pos:column="30">offset_top<pos:position pos:line="682" pos:column="40"/></name></expr>;<pos:position pos:line="682" pos:column="41"/></expr_stmt>
        <expr_stmt><expr><call><name pos:line="683" pos:column="9">RRETURN<pos:position pos:line="683" pos:column="16"/></name><argument_list pos:line="683" pos:column="16">(<argument><expr><name pos:line="683" pos:column="17">MATCH_MATCH<pos:position pos:line="683" pos:column="28"/></name></expr></argument>)<pos:position pos:line="683" pos:column="29"/></argument_list></call></expr>;<pos:position pos:line="683" pos:column="30"/></expr_stmt>
        }<pos:position pos:line="684" pos:column="10"/></block></then></if>

      <comment type="block" pos:line="686" pos:column="7">/* In all other cases except a conditional group we have to check the
      group number back at the start and if necessary complete handling an
      extraction by setting the offsets and bumping the high water mark. */</comment>

      <if pos:line="690" pos:column="7">if <condition pos:line="690" pos:column="10">(<expr><operator pos:line="690" pos:column="11">*<pos:position pos:line="690" pos:column="12"/></operator><name pos:line="690" pos:column="12">prev<pos:position pos:line="690" pos:column="16"/></name> <operator pos:line="690" pos:column="17">!=<pos:position pos:line="690" pos:column="19"/></operator> <name pos:line="690" pos:column="20">OP_COND<pos:position pos:line="690" pos:column="27"/></name></expr>)<pos:position pos:line="690" pos:column="28"/></condition><then pos:line="690" pos:column="28">
        <block pos:line="691" pos:column="9">{
        <expr_stmt><expr><name pos:line="692" pos:column="9">number<pos:position pos:line="692" pos:column="15"/></name> <operator pos:line="692" pos:column="16">=<pos:position pos:line="692" pos:column="17"/></operator> <operator pos:line="692" pos:column="18">*<pos:position pos:line="692" pos:column="19"/></operator><name pos:line="692" pos:column="19">prev<pos:position pos:line="692" pos:column="23"/></name> <operator pos:line="692" pos:column="24">-<pos:position pos:line="692" pos:column="25"/></operator> <name pos:line="692" pos:column="26">OP_BRA<pos:position pos:line="692" pos:column="32"/></name></expr>;<pos:position pos:line="692" pos:column="33"/></expr_stmt>

        <comment type="block" pos:line="694" pos:column="9">/* For extended extraction brackets (large number), we have to fish out
        the number from a dummy opcode at the start. */</comment>

        <if pos:line="697" pos:column="9">if <condition pos:line="697" pos:column="12">(<expr><name pos:line="697" pos:column="13">number<pos:position pos:line="697" pos:column="19"/></name> <operator pos:line="697" pos:column="20">&gt;<pos:position pos:line="697" pos:column="24"/></operator> <name pos:line="697" pos:column="22">EXTRACT_BASIC_MAX<pos:position pos:line="697" pos:column="39"/></name></expr>)<pos:position pos:line="697" pos:column="40"/></condition><then pos:line="697" pos:column="40"> <block type="pseudo"><expr_stmt><expr><name pos:line="697" pos:column="41">number<pos:position pos:line="697" pos:column="47"/></name> <operator pos:line="697" pos:column="48">=<pos:position pos:line="697" pos:column="49"/></operator> <call><name pos:line="697" pos:column="50">GET2<pos:position pos:line="697" pos:column="54"/></name><argument_list pos:line="697" pos:column="54">(<argument><expr><name pos:line="697" pos:column="55">prev<pos:position pos:line="697" pos:column="59"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="697" pos:column="61">2<pos:position pos:line="697" pos:column="62"/></literal><operator pos:line="697" pos:column="62">+<pos:position pos:line="697" pos:column="63"/></operator><name pos:line="697" pos:column="63">LINK_SIZE<pos:position pos:line="697" pos:column="72"/></name></expr></argument>)<pos:position pos:line="697" pos:column="73"/></argument_list></call></expr>;<pos:position pos:line="697" pos:column="74"/></expr_stmt></block></then></if>
        <expr_stmt><expr><name pos:line="698" pos:column="9">offset<pos:position pos:line="698" pos:column="15"/></name> <operator pos:line="698" pos:column="16">=<pos:position pos:line="698" pos:column="17"/></operator> <name pos:line="698" pos:column="18">number<pos:position pos:line="698" pos:column="24"/></name> <operator pos:line="698" pos:column="25">&lt;&lt;<pos:position pos:line="698" pos:column="33"/></operator> <literal type="number" pos:line="698" pos:column="28">1<pos:position pos:line="698" pos:column="29"/></literal></expr>;<pos:position pos:line="698" pos:column="30"/></expr_stmt>

<cpp:ifdef pos:line="700" pos:column="1">#<cpp:directive pos:line="700" pos:column="2">ifdef<pos:position pos:line="700" pos:column="7"/></cpp:directive> <name pos:line="700" pos:column="8">DEBUG<pos:position pos:line="700" pos:column="13"/></name></cpp:ifdef>
        <expr_stmt><expr><call><name pos:line="701" pos:column="9">printf<pos:position pos:line="701" pos:column="15"/></name><argument_list pos:line="701" pos:column="15">(<argument><expr><literal type="string" pos:line="701" pos:column="16">"end bracket %d"<pos:position pos:line="701" pos:column="32"/></literal></expr></argument>, <argument><expr><name pos:line="701" pos:column="34">number<pos:position pos:line="701" pos:column="40"/></name></expr></argument>)<pos:position pos:line="701" pos:column="41"/></argument_list></call></expr>;<pos:position pos:line="701" pos:column="42"/></expr_stmt>
        <expr_stmt><expr><call><name pos:line="702" pos:column="9">printf<pos:position pos:line="702" pos:column="15"/></name><argument_list pos:line="702" pos:column="15">(<argument><expr><literal type="string" pos:line="702" pos:column="16">"\n"<pos:position pos:line="702" pos:column="20"/></literal></expr></argument>)<pos:position pos:line="702" pos:column="21"/></argument_list></call></expr>;<pos:position pos:line="702" pos:column="22"/></expr_stmt>
<cpp:endif pos:line="703" pos:column="1">#<cpp:directive pos:line="703" pos:column="2">endif<pos:position pos:line="703" pos:column="7"/></cpp:directive></cpp:endif>

        <comment type="block" pos:line="705" pos:column="9">/* Test for a numbered group. This includes groups called as a result
        of recursion. Note that whole-pattern recursion is coded as a recurse
        into group 0, so it won't be picked up here. Instead, we catch it when
        the OP_END is reached. */</comment>

        <if pos:line="710" pos:column="9">if <condition pos:line="710" pos:column="12">(<expr><name pos:line="710" pos:column="13">number<pos:position pos:line="710" pos:column="19"/></name> <operator pos:line="710" pos:column="20">&gt;<pos:position pos:line="710" pos:column="24"/></operator> <literal type="number" pos:line="710" pos:column="22">0<pos:position pos:line="710" pos:column="23"/></literal></expr>)<pos:position pos:line="710" pos:column="24"/></condition><then pos:line="710" pos:column="24">
          <block pos:line="711" pos:column="11">{
          <expr_stmt><expr><name><name pos:line="712" pos:column="11">md<pos:position pos:line="712" pos:column="13"/></name><operator pos:line="712" pos:column="13">-&gt;<pos:position pos:line="712" pos:column="18"/></operator><name pos:line="712" pos:column="15">capture_last<pos:position pos:line="712" pos:column="27"/></name></name> <operator pos:line="712" pos:column="28">=<pos:position pos:line="712" pos:column="29"/></operator> <name pos:line="712" pos:column="30">number<pos:position pos:line="712" pos:column="36"/></name></expr>;<pos:position pos:line="712" pos:column="37"/></expr_stmt>
          <if pos:line="713" pos:column="11">if <condition pos:line="713" pos:column="14">(<expr><name pos:line="713" pos:column="15">offset<pos:position pos:line="713" pos:column="21"/></name> <operator pos:line="713" pos:column="22">&gt;=<pos:position pos:line="713" pos:column="27"/></operator> <name><name pos:line="713" pos:column="25">md<pos:position pos:line="713" pos:column="27"/></name><operator pos:line="713" pos:column="27">-&gt;<pos:position pos:line="713" pos:column="32"/></operator><name pos:line="713" pos:column="29">offset_max<pos:position pos:line="713" pos:column="39"/></name></name></expr>)<pos:position pos:line="713" pos:column="40"/></condition><then pos:line="713" pos:column="40"> <block type="pseudo"><expr_stmt><expr><name><name pos:line="713" pos:column="41">md<pos:position pos:line="713" pos:column="43"/></name><operator pos:line="713" pos:column="43">-&gt;<pos:position pos:line="713" pos:column="48"/></operator><name pos:line="713" pos:column="45">offset_overflow<pos:position pos:line="713" pos:column="60"/></name></name> <operator pos:line="713" pos:column="61">=<pos:position pos:line="713" pos:column="62"/></operator> <name pos:line="713" pos:column="63">TRUE<pos:position pos:line="713" pos:column="67"/></name></expr>;<pos:position pos:line="713" pos:column="68"/></expr_stmt></block></then> <else pos:line="713" pos:column="69">else
            <block pos:line="714" pos:column="13">{
            <expr_stmt><expr><name><name pos:line="715" pos:column="13">md<pos:position pos:line="715" pos:column="15"/></name><operator pos:line="715" pos:column="15">-&gt;<pos:position pos:line="715" pos:column="20"/></operator><name pos:line="715" pos:column="17">offset_vector<pos:position pos:line="715" pos:column="30"/></name><index pos:line="715" pos:column="30">[<expr><name pos:line="715" pos:column="31">offset<pos:position pos:line="715" pos:column="37"/></name></expr>]<pos:position pos:line="715" pos:column="38"/></index></name> <operator pos:line="715" pos:column="39">=<pos:position pos:line="715" pos:column="40"/></operator>
              <name><name pos:line="716" pos:column="15">md<pos:position pos:line="716" pos:column="17"/></name><operator pos:line="716" pos:column="17">-&gt;<pos:position pos:line="716" pos:column="22"/></operator><name pos:line="716" pos:column="19">offset_vector<pos:position pos:line="716" pos:column="32"/></name><index pos:line="716" pos:column="32">[<expr><name><name pos:line="716" pos:column="33">md<pos:position pos:line="716" pos:column="35"/></name><operator pos:line="716" pos:column="35">-&gt;<pos:position pos:line="716" pos:column="40"/></operator><name pos:line="716" pos:column="37">offset_end<pos:position pos:line="716" pos:column="47"/></name></name> <operator pos:line="716" pos:column="48">-<pos:position pos:line="716" pos:column="49"/></operator> <name pos:line="716" pos:column="50">number<pos:position pos:line="716" pos:column="56"/></name></expr>]<pos:position pos:line="716" pos:column="57"/></index></name></expr>;<pos:position pos:line="716" pos:column="58"/></expr_stmt>
            <expr_stmt><expr><name><name pos:line="717" pos:column="13">md<pos:position pos:line="717" pos:column="15"/></name><operator pos:line="717" pos:column="15">-&gt;<pos:position pos:line="717" pos:column="20"/></operator><name pos:line="717" pos:column="17">offset_vector<pos:position pos:line="717" pos:column="30"/></name><index pos:line="717" pos:column="30">[<expr><name pos:line="717" pos:column="31">offset<pos:position pos:line="717" pos:column="37"/></name><operator pos:line="717" pos:column="37">+<pos:position pos:line="717" pos:column="38"/></operator><literal type="number" pos:line="717" pos:column="38">1<pos:position pos:line="717" pos:column="39"/></literal></expr>]<pos:position pos:line="717" pos:column="40"/></index></name> <operator pos:line="717" pos:column="41">=<pos:position pos:line="717" pos:column="42"/></operator> <name pos:line="717" pos:column="43">eptr<pos:position pos:line="717" pos:column="47"/></name> <operator pos:line="717" pos:column="48">-<pos:position pos:line="717" pos:column="49"/></operator> <name><name pos:line="717" pos:column="50">md<pos:position pos:line="717" pos:column="52"/></name><operator pos:line="717" pos:column="52">-&gt;<pos:position pos:line="717" pos:column="57"/></operator><name pos:line="717" pos:column="54">start_subject<pos:position pos:line="717" pos:column="67"/></name></name></expr>;<pos:position pos:line="717" pos:column="68"/></expr_stmt>
            <if pos:line="718" pos:column="13">if <condition pos:line="718" pos:column="16">(<expr><name pos:line="718" pos:column="17">offset_top<pos:position pos:line="718" pos:column="27"/></name> <operator pos:line="718" pos:column="28">&lt;=<pos:position pos:line="718" pos:column="33"/></operator> <name pos:line="718" pos:column="31">offset<pos:position pos:line="718" pos:column="37"/></name></expr>)<pos:position pos:line="718" pos:column="38"/></condition><then pos:line="718" pos:column="38"> <block type="pseudo"><expr_stmt><expr><name pos:line="718" pos:column="39">offset_top<pos:position pos:line="718" pos:column="49"/></name> <operator pos:line="718" pos:column="50">=<pos:position pos:line="718" pos:column="51"/></operator> <name pos:line="718" pos:column="52">offset<pos:position pos:line="718" pos:column="58"/></name> <operator pos:line="718" pos:column="59">+<pos:position pos:line="718" pos:column="60"/></operator> <literal type="number" pos:line="718" pos:column="61">2<pos:position pos:line="718" pos:column="62"/></literal></expr>;<pos:position pos:line="718" pos:column="63"/></expr_stmt></block></then></if>
            }<pos:position pos:line="719" pos:column="14"/></block></else></if>

          <comment type="block" pos:line="721" pos:column="11">/* Handle a recursively called group. Restore the offsets
          appropriately and continue from after the call. */</comment>

          <if pos:line="724" pos:column="11">if <condition pos:line="724" pos:column="14">(<expr><name><name pos:line="724" pos:column="15">md<pos:position pos:line="724" pos:column="17"/></name><operator pos:line="724" pos:column="17">-&gt;<pos:position pos:line="724" pos:column="22"/></operator><name pos:line="724" pos:column="19">recursive<pos:position pos:line="724" pos:column="28"/></name></name> <operator pos:line="724" pos:column="29">!=<pos:position pos:line="724" pos:column="31"/></operator> <name pos:line="724" pos:column="32">NULL<pos:position pos:line="724" pos:column="36"/></name> <operator pos:line="724" pos:column="37">&amp;&amp;<pos:position pos:line="724" pos:column="47"/></operator> <name><name pos:line="724" pos:column="40">md<pos:position pos:line="724" pos:column="42"/></name><operator pos:line="724" pos:column="42">-&gt;<pos:position pos:line="724" pos:column="47"/></operator><name pos:line="724" pos:column="44">recursive<pos:position pos:line="724" pos:column="53"/></name><operator pos:line="724" pos:column="53">-&gt;<pos:position pos:line="724" pos:column="58"/></operator><name pos:line="724" pos:column="55">group_num<pos:position pos:line="724" pos:column="64"/></name></name> <operator pos:line="724" pos:column="65">==<pos:position pos:line="724" pos:column="67"/></operator> <name pos:line="724" pos:column="68">number<pos:position pos:line="724" pos:column="74"/></name></expr>)<pos:position pos:line="724" pos:column="75"/></condition><then pos:line="724" pos:column="75">
            <block pos:line="725" pos:column="13">{
            <decl_stmt><decl><type><name pos:line="726" pos:column="13">recursion_info<pos:position pos:line="726" pos:column="27"/></name> <modifier pos:line="726" pos:column="28">*<pos:position pos:line="726" pos:column="29"/></modifier></type><name pos:line="726" pos:column="29">rec<pos:position pos:line="726" pos:column="32"/></name> <init pos:line="726" pos:column="33">= <expr><name><name pos:line="726" pos:column="35">md<pos:position pos:line="726" pos:column="37"/></name><operator pos:line="726" pos:column="37">-&gt;<pos:position pos:line="726" pos:column="42"/></operator><name pos:line="726" pos:column="39">recursive<pos:position pos:line="726" pos:column="48"/></name></name></expr></init></decl>;<pos:position pos:line="726" pos:column="49"/></decl_stmt>
            <expr_stmt><expr><call><name pos:line="727" pos:column="13">DPRINTF<pos:position pos:line="727" pos:column="20"/></name><argument_list pos:line="727" pos:column="20">(<argument><expr><operator pos:line="727" pos:column="21">(<pos:position pos:line="727" pos:column="22"/></operator><literal type="string" pos:line="727" pos:column="22">"Recursion (%d) succeeded - continuing\n"<pos:position pos:line="727" pos:column="63"/></literal><operator pos:line="727" pos:column="63">,<pos:position pos:line="727" pos:column="64"/></operator> <name pos:line="727" pos:column="65">number<pos:position pos:line="727" pos:column="71"/></name><operator pos:line="727" pos:column="71">)<pos:position pos:line="727" pos:column="72"/></operator></expr></argument>)<pos:position pos:line="727" pos:column="73"/></argument_list></call></expr>;<pos:position pos:line="727" pos:column="74"/></expr_stmt>
            <expr_stmt><expr><name><name pos:line="728" pos:column="13">md<pos:position pos:line="728" pos:column="15"/></name><operator pos:line="728" pos:column="15">-&gt;<pos:position pos:line="728" pos:column="20"/></operator><name pos:line="728" pos:column="17">recursive<pos:position pos:line="728" pos:column="26"/></name></name> <operator pos:line="728" pos:column="27">=<pos:position pos:line="728" pos:column="28"/></operator> <name><name pos:line="728" pos:column="29">rec<pos:position pos:line="728" pos:column="32"/></name><operator pos:line="728" pos:column="32">-&gt;<pos:position pos:line="728" pos:column="37"/></operator><name pos:line="728" pos:column="34">prevrec<pos:position pos:line="728" pos:column="41"/></name></name></expr>;<pos:position pos:line="728" pos:column="42"/></expr_stmt>
            <expr_stmt><expr><name><name pos:line="729" pos:column="13">md<pos:position pos:line="729" pos:column="15"/></name><operator pos:line="729" pos:column="15">-&gt;<pos:position pos:line="729" pos:column="20"/></operator><name pos:line="729" pos:column="17">start_match<pos:position pos:line="729" pos:column="28"/></name></name> <operator pos:line="729" pos:column="29">=<pos:position pos:line="729" pos:column="30"/></operator> <name><name pos:line="729" pos:column="31">rec<pos:position pos:line="729" pos:column="34"/></name><operator pos:line="729" pos:column="34">-&gt;<pos:position pos:line="729" pos:column="39"/></operator><name pos:line="729" pos:column="36">save_start<pos:position pos:line="729" pos:column="46"/></name></name></expr>;<pos:position pos:line="729" pos:column="47"/></expr_stmt>
            <expr_stmt><expr><call><name pos:line="730" pos:column="13">memcpy<pos:position pos:line="730" pos:column="19"/></name><argument_list pos:line="730" pos:column="19">(<argument><expr><name><name pos:line="730" pos:column="20">md<pos:position pos:line="730" pos:column="22"/></name><operator pos:line="730" pos:column="22">-&gt;<pos:position pos:line="730" pos:column="27"/></operator><name pos:line="730" pos:column="24">offset_vector<pos:position pos:line="730" pos:column="37"/></name></name></expr></argument>, <argument><expr><name><name pos:line="730" pos:column="39">rec<pos:position pos:line="730" pos:column="42"/></name><operator pos:line="730" pos:column="42">-&gt;<pos:position pos:line="730" pos:column="47"/></operator><name pos:line="730" pos:column="44">offset_save<pos:position pos:line="730" pos:column="55"/></name></name></expr></argument>,
              <argument><expr><name><name pos:line="731" pos:column="15">rec<pos:position pos:line="731" pos:column="18"/></name><operator pos:line="731" pos:column="18">-&gt;<pos:position pos:line="731" pos:column="23"/></operator><name pos:line="731" pos:column="20">saved_max<pos:position pos:line="731" pos:column="29"/></name></name> <operator pos:line="731" pos:column="30">*<pos:position pos:line="731" pos:column="31"/></operator> <sizeof pos:line="731" pos:column="32">sizeof<argument_list pos:line="731" pos:column="38">(<argument><expr><name pos:line="731" pos:column="39">int<pos:position pos:line="731" pos:column="42"/></name></expr></argument>)<pos:position pos:line="731" pos:column="43"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="731" pos:column="44"/></argument_list></call></expr>;<pos:position pos:line="731" pos:column="45"/></expr_stmt>
            <expr_stmt><expr><name pos:line="732" pos:column="13">ecode<pos:position pos:line="732" pos:column="18"/></name> <operator pos:line="732" pos:column="19">=<pos:position pos:line="732" pos:column="20"/></operator> <name><name pos:line="732" pos:column="21">rec<pos:position pos:line="732" pos:column="24"/></name><operator pos:line="732" pos:column="24">-&gt;<pos:position pos:line="732" pos:column="29"/></operator><name pos:line="732" pos:column="26">after_call<pos:position pos:line="732" pos:column="36"/></name></name></expr>;<pos:position pos:line="732" pos:column="37"/></expr_stmt>
            <expr_stmt><expr><name pos:line="733" pos:column="13">ims<pos:position pos:line="733" pos:column="16"/></name> <operator pos:line="733" pos:column="17">=<pos:position pos:line="733" pos:column="18"/></operator> <name pos:line="733" pos:column="19">original_ims<pos:position pos:line="733" pos:column="31"/></name></expr>;<pos:position pos:line="733" pos:column="32"/></expr_stmt>
            <break pos:line="734" pos:column="13">break;<pos:position pos:line="734" pos:column="19"/></break>
            }<pos:position pos:line="735" pos:column="14"/></block></then></if>
          }<pos:position pos:line="736" pos:column="12"/></block></then></if>
        }<pos:position pos:line="737" pos:column="10"/></block></then></if>

      <comment type="block" pos:line="739" pos:column="7">/* Reset the value of the ims flags, in case they got changed during
      the group. */</comment>

      <expr_stmt><expr><name pos:line="742" pos:column="7">ims<pos:position pos:line="742" pos:column="10"/></name> <operator pos:line="742" pos:column="11">=<pos:position pos:line="742" pos:column="12"/></operator> <name pos:line="742" pos:column="13">original_ims<pos:position pos:line="742" pos:column="25"/></name></expr>;<pos:position pos:line="742" pos:column="26"/></expr_stmt>
      <expr_stmt><expr><call><name pos:line="743" pos:column="7">DPRINTF<pos:position pos:line="743" pos:column="14"/></name><argument_list pos:line="743" pos:column="14">(<argument><expr><operator pos:line="743" pos:column="15">(<pos:position pos:line="743" pos:column="16"/></operator><literal type="string" pos:line="743" pos:column="16">"ims reset to %02lx\n"<pos:position pos:line="743" pos:column="38"/></literal><operator pos:line="743" pos:column="38">,<pos:position pos:line="743" pos:column="39"/></operator> <name pos:line="743" pos:column="40">ims<pos:position pos:line="743" pos:column="43"/></name><operator pos:line="743" pos:column="43">)<pos:position pos:line="743" pos:column="44"/></operator></expr></argument>)<pos:position pos:line="743" pos:column="45"/></argument_list></call></expr>;<pos:position pos:line="743" pos:column="46"/></expr_stmt>

      <comment type="block" pos:line="745" pos:column="7">/* For a non-repeating ket, just continue at this level. This also
      happens for a repeating ket if no characters were matched in the group.
      This is the forcible breaking of infinite loops as implemented in Perl
      5.005. If there is an options reset, it will get obeyed in the normal
      course of events. */</comment>

      <if pos:line="751" pos:column="7">if <condition pos:line="751" pos:column="10">(<expr><operator pos:line="751" pos:column="11">*<pos:position pos:line="751" pos:column="12"/></operator><name pos:line="751" pos:column="12">ecode<pos:position pos:line="751" pos:column="17"/></name> <operator pos:line="751" pos:column="18">==<pos:position pos:line="751" pos:column="20"/></operator> <name pos:line="751" pos:column="21">OP_KET<pos:position pos:line="751" pos:column="27"/></name> <operator pos:line="751" pos:column="28">||<pos:position pos:line="751" pos:column="30"/></operator> <name pos:line="751" pos:column="31">eptr<pos:position pos:line="751" pos:column="35"/></name> <operator pos:line="751" pos:column="36">==<pos:position pos:line="751" pos:column="38"/></operator> <name pos:line="751" pos:column="39">saved_eptr<pos:position pos:line="751" pos:column="49"/></name></expr>)<pos:position pos:line="751" pos:column="50"/></condition><then pos:line="751" pos:column="50">
        <block pos:line="752" pos:column="9">{
        <expr_stmt><expr><name pos:line="753" pos:column="9">ecode<pos:position pos:line="753" pos:column="14"/></name> <operator pos:line="753" pos:column="15">+=<pos:position pos:line="753" pos:column="17"/></operator> <literal type="number" pos:line="753" pos:column="18">1<pos:position pos:line="753" pos:column="19"/></literal> <operator pos:line="753" pos:column="20">+<pos:position pos:line="753" pos:column="21"/></operator> <name pos:line="753" pos:column="22">LINK_SIZE<pos:position pos:line="753" pos:column="31"/></name></expr>;<pos:position pos:line="753" pos:column="32"/></expr_stmt>
        <break pos:line="754" pos:column="9">break;<pos:position pos:line="754" pos:column="15"/></break>
        }<pos:position pos:line="755" pos:column="10"/></block></then></if>

      <comment type="block" pos:line="757" pos:column="7">/* The repeating kets try the rest of the pattern or restart from the
      preceding bracket, in the appropriate order. */</comment>

      <if pos:line="760" pos:column="7">if <condition pos:line="760" pos:column="10">(<expr><operator pos:line="760" pos:column="11">*<pos:position pos:line="760" pos:column="12"/></operator><name pos:line="760" pos:column="12">ecode<pos:position pos:line="760" pos:column="17"/></name> <operator pos:line="760" pos:column="18">==<pos:position pos:line="760" pos:column="20"/></operator> <name pos:line="760" pos:column="21">OP_KETRMIN<pos:position pos:line="760" pos:column="31"/></name></expr>)<pos:position pos:line="760" pos:column="32"/></condition><then pos:line="760" pos:column="32">
        <block pos:line="761" pos:column="9">{
        <expr_stmt><expr><call><name pos:line="762" pos:column="9">RMATCH<pos:position pos:line="762" pos:column="15"/></name><argument_list pos:line="762" pos:column="15">(<argument><expr><name pos:line="762" pos:column="16">rrc<pos:position pos:line="762" pos:column="19"/></name></expr></argument>, <argument><expr><name pos:line="762" pos:column="21">eptr<pos:position pos:line="762" pos:column="25"/></name></expr></argument>, <argument><expr><name pos:line="762" pos:column="27">ecode<pos:position pos:line="762" pos:column="32"/></name> <operator pos:line="762" pos:column="33">+<pos:position pos:line="762" pos:column="34"/></operator> <literal type="number" pos:line="762" pos:column="35">1<pos:position pos:line="762" pos:column="36"/></literal><operator pos:line="762" pos:column="36">+<pos:position pos:line="762" pos:column="37"/></operator><name pos:line="762" pos:column="37">LINK_SIZE<pos:position pos:line="762" pos:column="46"/></name></expr></argument>, <argument><expr><name pos:line="762" pos:column="48">offset_top<pos:position pos:line="762" pos:column="58"/></name></expr></argument>, <argument><expr><name pos:line="762" pos:column="60">md<pos:position pos:line="762" pos:column="62"/></name></expr></argument>, <argument><expr><name pos:line="762" pos:column="64">ims<pos:position pos:line="762" pos:column="67"/></name></expr></argument>, <argument><expr><name pos:line="762" pos:column="69">eptrb<pos:position pos:line="762" pos:column="74"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="762" pos:column="76">0<pos:position pos:line="762" pos:column="77"/></literal></expr></argument>)<pos:position pos:line="762" pos:column="78"/></argument_list></call></expr>;<pos:position pos:line="762" pos:column="79"/></expr_stmt>
        <if pos:line="763" pos:column="9">if <condition pos:line="763" pos:column="12">(<expr><name pos:line="763" pos:column="13">rrc<pos:position pos:line="763" pos:column="16"/></name> <operator pos:line="763" pos:column="17">!=<pos:position pos:line="763" pos:column="19"/></operator> <name pos:line="763" pos:column="20">MATCH_NOMATCH<pos:position pos:line="763" pos:column="33"/></name></expr>)<pos:position pos:line="763" pos:column="34"/></condition><then pos:line="763" pos:column="34"> <block type="pseudo"><expr_stmt><expr><call><name pos:line="763" pos:column="35">RRETURN<pos:position pos:line="763" pos:column="42"/></name><argument_list pos:line="763" pos:column="42">(<argument><expr><name pos:line="763" pos:column="43">rrc<pos:position pos:line="763" pos:column="46"/></name></expr></argument>)<pos:position pos:line="763" pos:column="47"/></argument_list></call></expr>;<pos:position pos:line="763" pos:column="48"/></expr_stmt></block></then></if>
        <expr_stmt><expr><call><name pos:line="764" pos:column="9">RMATCH<pos:position pos:line="764" pos:column="15"/></name><argument_list pos:line="764" pos:column="15">(<argument><expr><name pos:line="764" pos:column="16">rrc<pos:position pos:line="764" pos:column="19"/></name></expr></argument>, <argument><expr><name pos:line="764" pos:column="21">eptr<pos:position pos:line="764" pos:column="25"/></name></expr></argument>, <argument><expr><name pos:line="764" pos:column="27">prev<pos:position pos:line="764" pos:column="31"/></name></expr></argument>, <argument><expr><name pos:line="764" pos:column="33">offset_top<pos:position pos:line="764" pos:column="43"/></name></expr></argument>, <argument><expr><name pos:line="764" pos:column="45">md<pos:position pos:line="764" pos:column="47"/></name></expr></argument>, <argument><expr><name pos:line="764" pos:column="49">ims<pos:position pos:line="764" pos:column="52"/></name></expr></argument>, <argument><expr><name pos:line="764" pos:column="54">eptrb<pos:position pos:line="764" pos:column="59"/></name></expr></argument>, <argument><expr><name pos:line="764" pos:column="61">match_isgroup<pos:position pos:line="764" pos:column="74"/></name></expr></argument>)<pos:position pos:line="764" pos:column="75"/></argument_list></call></expr>;<pos:position pos:line="764" pos:column="76"/></expr_stmt>
        <if pos:line="765" pos:column="9">if <condition pos:line="765" pos:column="12">(<expr><name pos:line="765" pos:column="13">rrc<pos:position pos:line="765" pos:column="16"/></name> <operator pos:line="765" pos:column="17">!=<pos:position pos:line="765" pos:column="19"/></operator> <name pos:line="765" pos:column="20">MATCH_NOMATCH<pos:position pos:line="765" pos:column="33"/></name></expr>)<pos:position pos:line="765" pos:column="34"/></condition><then pos:line="765" pos:column="34"> <block type="pseudo"><expr_stmt><expr><call><name pos:line="765" pos:column="35">RRETURN<pos:position pos:line="765" pos:column="42"/></name><argument_list pos:line="765" pos:column="42">(<argument><expr><name pos:line="765" pos:column="43">rrc<pos:position pos:line="765" pos:column="46"/></name></expr></argument>)<pos:position pos:line="765" pos:column="47"/></argument_list></call></expr>;<pos:position pos:line="765" pos:column="48"/></expr_stmt></block></then></if>
        }<pos:position pos:line="766" pos:column="10"/></block></then>
      <else pos:line="767" pos:column="7">else  <comment type="block" pos:line="767" pos:column="13">/* OP_KETRMAX */</comment>
        <block pos:line="768" pos:column="9">{
        <expr_stmt><expr><call><name pos:line="769" pos:column="9">RMATCH<pos:position pos:line="769" pos:column="15"/></name><argument_list pos:line="769" pos:column="15">(<argument><expr><name pos:line="769" pos:column="16">rrc<pos:position pos:line="769" pos:column="19"/></name></expr></argument>, <argument><expr><name pos:line="769" pos:column="21">eptr<pos:position pos:line="769" pos:column="25"/></name></expr></argument>, <argument><expr><name pos:line="769" pos:column="27">prev<pos:position pos:line="769" pos:column="31"/></name></expr></argument>, <argument><expr><name pos:line="769" pos:column="33">offset_top<pos:position pos:line="769" pos:column="43"/></name></expr></argument>, <argument><expr><name pos:line="769" pos:column="45">md<pos:position pos:line="769" pos:column="47"/></name></expr></argument>, <argument><expr><name pos:line="769" pos:column="49">ims<pos:position pos:line="769" pos:column="52"/></name></expr></argument>, <argument><expr><name pos:line="769" pos:column="54">eptrb<pos:position pos:line="769" pos:column="59"/></name></expr></argument>, <argument><expr><name pos:line="769" pos:column="61">match_isgroup<pos:position pos:line="769" pos:column="74"/></name></expr></argument>)<pos:position pos:line="769" pos:column="75"/></argument_list></call></expr>;<pos:position pos:line="769" pos:column="76"/></expr_stmt>
        <if pos:line="770" pos:column="9">if <condition pos:line="770" pos:column="12">(<expr><name pos:line="770" pos:column="13">rrc<pos:position pos:line="770" pos:column="16"/></name> <operator pos:line="770" pos:column="17">!=<pos:position pos:line="770" pos:column="19"/></operator> <name pos:line="770" pos:column="20">MATCH_NOMATCH<pos:position pos:line="770" pos:column="33"/></name></expr>)<pos:position pos:line="770" pos:column="34"/></condition><then pos:line="770" pos:column="34"> <block type="pseudo"><expr_stmt><expr><call><name pos:line="770" pos:column="35">RRETURN<pos:position pos:line="770" pos:column="42"/></name><argument_list pos:line="770" pos:column="42">(<argument><expr><name pos:line="770" pos:column="43">rrc<pos:position pos:line="770" pos:column="46"/></name></expr></argument>)<pos:position pos:line="770" pos:column="47"/></argument_list></call></expr>;<pos:position pos:line="770" pos:column="48"/></expr_stmt></block></then></if>
        <expr_stmt><expr><call><name pos:line="771" pos:column="9">RMATCH<pos:position pos:line="771" pos:column="15"/></name><argument_list pos:line="771" pos:column="15">(<argument><expr><name pos:line="771" pos:column="16">rrc<pos:position pos:line="771" pos:column="19"/></name></expr></argument>, <argument><expr><name pos:line="771" pos:column="21">eptr<pos:position pos:line="771" pos:column="25"/></name></expr></argument>, <argument><expr><name pos:line="771" pos:column="27">ecode<pos:position pos:line="771" pos:column="32"/></name> <operator pos:line="771" pos:column="33">+<pos:position pos:line="771" pos:column="34"/></operator> <literal type="number" pos:line="771" pos:column="35">1<pos:position pos:line="771" pos:column="36"/></literal><operator pos:line="771" pos:column="36">+<pos:position pos:line="771" pos:column="37"/></operator><name pos:line="771" pos:column="37">LINK_SIZE<pos:position pos:line="771" pos:column="46"/></name></expr></argument>, <argument><expr><name pos:line="771" pos:column="48">offset_top<pos:position pos:line="771" pos:column="58"/></name></expr></argument>, <argument><expr><name pos:line="771" pos:column="60">md<pos:position pos:line="771" pos:column="62"/></name></expr></argument>, <argument><expr><name pos:line="771" pos:column="64">ims<pos:position pos:line="771" pos:column="67"/></name></expr></argument>, <argument><expr><name pos:line="771" pos:column="69">eptrb<pos:position pos:line="771" pos:column="74"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="771" pos:column="76">0<pos:position pos:line="771" pos:column="77"/></literal></expr></argument>)<pos:position pos:line="771" pos:column="78"/></argument_list></call></expr>;<pos:position pos:line="771" pos:column="79"/></expr_stmt>
        <if pos:line="772" pos:column="9">if <condition pos:line="772" pos:column="12">(<expr><name pos:line="772" pos:column="13">rrc<pos:position pos:line="772" pos:column="16"/></name> <operator pos:line="772" pos:column="17">!=<pos:position pos:line="772" pos:column="19"/></operator> <name pos:line="772" pos:column="20">MATCH_NOMATCH<pos:position pos:line="772" pos:column="33"/></name></expr>)<pos:position pos:line="772" pos:column="34"/></condition><then pos:line="772" pos:column="34"> <block type="pseudo"><expr_stmt><expr><call><name pos:line="772" pos:column="35">RRETURN<pos:position pos:line="772" pos:column="42"/></name><argument_list pos:line="772" pos:column="42">(<argument><expr><name pos:line="772" pos:column="43">rrc<pos:position pos:line="772" pos:column="46"/></name></expr></argument>)<pos:position pos:line="772" pos:column="47"/></argument_list></call></expr>;<pos:position pos:line="772" pos:column="48"/></expr_stmt></block></then></if>
        }<pos:position pos:line="773" pos:column="10"/></block></else></if>
      }<pos:position pos:line="774" pos:column="8"/></block>

    <expr_stmt><expr><call><name pos:line="776" pos:column="5">RRETURN<pos:position pos:line="776" pos:column="12"/></name><argument_list pos:line="776" pos:column="12">(<argument><expr><name pos:line="776" pos:column="13">MATCH_NOMATCH<pos:position pos:line="776" pos:column="26"/></name></expr></argument>)<pos:position pos:line="776" pos:column="27"/></argument_list></call></expr>;<pos:position pos:line="776" pos:column="28"/></expr_stmt>

    <comment type="block" pos:line="778" pos:column="5">/* Start of subject unless notbol, or after internal newline if multiline */</comment>

    <case pos:line="780" pos:column="5">case <expr><name pos:line="780" pos:column="10">OP_CIRC<pos:position pos:line="780" pos:column="17"/></name></expr>:<pos:position pos:line="780" pos:column="18"/></case>
    <if pos:line="781" pos:column="5">if <condition pos:line="781" pos:column="8">(<expr><name><name pos:line="781" pos:column="9">md<pos:position pos:line="781" pos:column="11"/></name><operator pos:line="781" pos:column="11">-&gt;<pos:position pos:line="781" pos:column="16"/></operator><name pos:line="781" pos:column="13">notbol<pos:position pos:line="781" pos:column="19"/></name></name> <operator pos:line="781" pos:column="20">&amp;&amp;<pos:position pos:line="781" pos:column="30"/></operator> <name pos:line="781" pos:column="23">eptr<pos:position pos:line="781" pos:column="27"/></name> <operator pos:line="781" pos:column="28">==<pos:position pos:line="781" pos:column="30"/></operator> <name><name pos:line="781" pos:column="31">md<pos:position pos:line="781" pos:column="33"/></name><operator pos:line="781" pos:column="33">-&gt;<pos:position pos:line="781" pos:column="38"/></operator><name pos:line="781" pos:column="35">start_subject<pos:position pos:line="781" pos:column="48"/></name></name></expr>)<pos:position pos:line="781" pos:column="49"/></condition><then pos:line="781" pos:column="49"> <block type="pseudo"><expr_stmt><expr><call><name pos:line="781" pos:column="50">RRETURN<pos:position pos:line="781" pos:column="57"/></name><argument_list pos:line="781" pos:column="57">(<argument><expr><name pos:line="781" pos:column="58">MATCH_NOMATCH<pos:position pos:line="781" pos:column="71"/></name></expr></argument>)<pos:position pos:line="781" pos:column="72"/></argument_list></call></expr>;<pos:position pos:line="781" pos:column="73"/></expr_stmt></block></then></if>
    <if pos:line="782" pos:column="5">if <condition pos:line="782" pos:column="8">(<expr><operator pos:line="782" pos:column="9">(<pos:position pos:line="782" pos:column="10"/></operator><name pos:line="782" pos:column="10">ims<pos:position pos:line="782" pos:column="13"/></name> <operator pos:line="782" pos:column="14">&amp;<pos:position pos:line="782" pos:column="19"/></operator> <name pos:line="782" pos:column="16">PCRE_MULTILINE<pos:position pos:line="782" pos:column="30"/></name><operator pos:line="782" pos:column="30">)<pos:position pos:line="782" pos:column="31"/></operator> <operator pos:line="782" pos:column="32">!=<pos:position pos:line="782" pos:column="34"/></operator> <literal type="number" pos:line="782" pos:column="35">0<pos:position pos:line="782" pos:column="36"/></literal></expr>)<pos:position pos:line="782" pos:column="37"/></condition><then pos:line="782" pos:column="37">
      <block pos:line="783" pos:column="7">{
      <if pos:line="784" pos:column="7">if <condition pos:line="784" pos:column="10">(<expr><name pos:line="784" pos:column="11">eptr<pos:position pos:line="784" pos:column="15"/></name> <operator pos:line="784" pos:column="16">!=<pos:position pos:line="784" pos:column="18"/></operator> <name><name pos:line="784" pos:column="19">md<pos:position pos:line="784" pos:column="21"/></name><operator pos:line="784" pos:column="21">-&gt;<pos:position pos:line="784" pos:column="26"/></operator><name pos:line="784" pos:column="23">start_subject<pos:position pos:line="784" pos:column="36"/></name></name> <operator pos:line="784" pos:column="37">&amp;&amp;<pos:position pos:line="784" pos:column="47"/></operator> <name><name pos:line="784" pos:column="40">eptr<pos:position pos:line="784" pos:column="44"/></name><index pos:line="784" pos:column="44">[<expr><operator pos:line="784" pos:column="45">-<pos:position pos:line="784" pos:column="46"/></operator><literal type="number" pos:line="784" pos:column="46">1<pos:position pos:line="784" pos:column="47"/></literal></expr>]<pos:position pos:line="784" pos:column="48"/></index></name> <operator pos:line="784" pos:column="49">!=<pos:position pos:line="784" pos:column="51"/></operator> <name pos:line="784" pos:column="52">NEWLINE<pos:position pos:line="784" pos:column="59"/></name></expr>)<pos:position pos:line="784" pos:column="60"/></condition><then pos:line="784" pos:column="60">
        <block type="pseudo"><expr_stmt><expr><call><name pos:line="785" pos:column="9">RRETURN<pos:position pos:line="785" pos:column="16"/></name><argument_list pos:line="785" pos:column="16">(<argument><expr><name pos:line="785" pos:column="17">MATCH_NOMATCH<pos:position pos:line="785" pos:column="30"/></name></expr></argument>)<pos:position pos:line="785" pos:column="31"/></argument_list></call></expr>;<pos:position pos:line="785" pos:column="32"/></expr_stmt></block></then></if>
      <expr_stmt><expr><name pos:line="786" pos:column="7">ecode<pos:position pos:line="786" pos:column="12"/></name><operator pos:line="786" pos:column="12">++<pos:position pos:line="786" pos:column="14"/></operator></expr>;<pos:position pos:line="786" pos:column="15"/></expr_stmt>
      <break pos:line="787" pos:column="7">break;<pos:position pos:line="787" pos:column="13"/></break>
      }<pos:position pos:line="788" pos:column="8"/></block></then></if>
    <comment type="block" pos:line="789" pos:column="5">/* ... else fall through */</comment>

    <comment type="block" pos:line="791" pos:column="5">/* Start of subject assertion */</comment>

    <case pos:line="793" pos:column="5">case <expr><name pos:line="793" pos:column="10">OP_SOD<pos:position pos:line="793" pos:column="16"/></name></expr>:<pos:position pos:line="793" pos:column="17"/></case>
    <if pos:line="794" pos:column="5">if <condition pos:line="794" pos:column="8">(<expr><name pos:line="794" pos:column="9">eptr<pos:position pos:line="794" pos:column="13"/></name> <operator pos:line="794" pos:column="14">!=<pos:position pos:line="794" pos:column="16"/></operator> <name><name pos:line="794" pos:column="17">md<pos:position pos:line="794" pos:column="19"/></name><operator pos:line="794" pos:column="19">-&gt;<pos:position pos:line="794" pos:column="24"/></operator><name pos:line="794" pos:column="21">start_subject<pos:position pos:line="794" pos:column="34"/></name></name></expr>)<pos:position pos:line="794" pos:column="35"/></condition><then pos:line="794" pos:column="35"> <block type="pseudo"><expr_stmt><expr><call><name pos:line="794" pos:column="36">RRETURN<pos:position pos:line="794" pos:column="43"/></name><argument_list pos:line="794" pos:column="43">(<argument><expr><name pos:line="794" pos:column="44">MATCH_NOMATCH<pos:position pos:line="794" pos:column="57"/></name></expr></argument>)<pos:position pos:line="794" pos:column="58"/></argument_list></call></expr>;<pos:position pos:line="794" pos:column="59"/></expr_stmt></block></then></if>
    <expr_stmt><expr><name pos:line="795" pos:column="5">ecode<pos:position pos:line="795" pos:column="10"/></name><operator pos:line="795" pos:column="10">++<pos:position pos:line="795" pos:column="12"/></operator></expr>;<pos:position pos:line="795" pos:column="13"/></expr_stmt>
    <break pos:line="796" pos:column="5">break;<pos:position pos:line="796" pos:column="11"/></break>

    <comment type="block" pos:line="798" pos:column="5">/* Start of match assertion */</comment>

    <case pos:line="800" pos:column="5">case <expr><name pos:line="800" pos:column="10">OP_SOM<pos:position pos:line="800" pos:column="16"/></name></expr>:<pos:position pos:line="800" pos:column="17"/></case>
    <if pos:line="801" pos:column="5">if <condition pos:line="801" pos:column="8">(<expr><name pos:line="801" pos:column="9">eptr<pos:position pos:line="801" pos:column="13"/></name> <operator pos:line="801" pos:column="14">!=<pos:position pos:line="801" pos:column="16"/></operator> <name><name pos:line="801" pos:column="17">md<pos:position pos:line="801" pos:column="19"/></name><operator pos:line="801" pos:column="19">-&gt;<pos:position pos:line="801" pos:column="24"/></operator><name pos:line="801" pos:column="21">start_subject<pos:position pos:line="801" pos:column="34"/></name></name> <operator pos:line="801" pos:column="35">+<pos:position pos:line="801" pos:column="36"/></operator> <name><name pos:line="801" pos:column="37">md<pos:position pos:line="801" pos:column="39"/></name><operator pos:line="801" pos:column="39">-&gt;<pos:position pos:line="801" pos:column="44"/></operator><name pos:line="801" pos:column="41">start_offset<pos:position pos:line="801" pos:column="53"/></name></name></expr>)<pos:position pos:line="801" pos:column="54"/></condition><then pos:line="801" pos:column="54"> <block type="pseudo"><expr_stmt><expr><call><name pos:line="801" pos:column="55">RRETURN<pos:position pos:line="801" pos:column="62"/></name><argument_list pos:line="801" pos:column="62">(<argument><expr><name pos:line="801" pos:column="63">MATCH_NOMATCH<pos:position pos:line="801" pos:column="76"/></name></expr></argument>)<pos:position pos:line="801" pos:column="77"/></argument_list></call></expr>;<pos:position pos:line="801" pos:column="78"/></expr_stmt></block></then></if>
    <expr_stmt><expr><name pos:line="802" pos:column="5">ecode<pos:position pos:line="802" pos:column="10"/></name><operator pos:line="802" pos:column="10">++<pos:position pos:line="802" pos:column="12"/></operator></expr>;<pos:position pos:line="802" pos:column="13"/></expr_stmt>
    <break pos:line="803" pos:column="5">break;<pos:position pos:line="803" pos:column="11"/></break>

    <comment type="block" pos:line="805" pos:column="5">/* Assert before internal newline if multiline, or before a terminating
    newline unless endonly is set, else end of subject unless noteol is set. */</comment>

    <case pos:line="808" pos:column="5">case <expr><name pos:line="808" pos:column="10">OP_DOLL<pos:position pos:line="808" pos:column="17"/></name></expr>:<pos:position pos:line="808" pos:column="18"/></case>
    <if pos:line="809" pos:column="5">if <condition pos:line="809" pos:column="8">(<expr><operator pos:line="809" pos:column="9">(<pos:position pos:line="809" pos:column="10"/></operator><name pos:line="809" pos:column="10">ims<pos:position pos:line="809" pos:column="13"/></name> <operator pos:line="809" pos:column="14">&amp;<pos:position pos:line="809" pos:column="19"/></operator> <name pos:line="809" pos:column="16">PCRE_MULTILINE<pos:position pos:line="809" pos:column="30"/></name><operator pos:line="809" pos:column="30">)<pos:position pos:line="809" pos:column="31"/></operator> <operator pos:line="809" pos:column="32">!=<pos:position pos:line="809" pos:column="34"/></operator> <literal type="number" pos:line="809" pos:column="35">0<pos:position pos:line="809" pos:column="36"/></literal></expr>)<pos:position pos:line="809" pos:column="37"/></condition><then pos:line="809" pos:column="37">
      <block pos:line="810" pos:column="7">{
      <if pos:line="811" pos:column="7">if <condition pos:line="811" pos:column="10">(<expr><name pos:line="811" pos:column="11">eptr<pos:position pos:line="811" pos:column="15"/></name> <operator pos:line="811" pos:column="16">&lt;<pos:position pos:line="811" pos:column="20"/></operator> <name><name pos:line="811" pos:column="18">md<pos:position pos:line="811" pos:column="20"/></name><operator pos:line="811" pos:column="20">-&gt;<pos:position pos:line="811" pos:column="25"/></operator><name pos:line="811" pos:column="22">end_subject<pos:position pos:line="811" pos:column="33"/></name></name></expr>)<pos:position pos:line="811" pos:column="34"/></condition><then pos:line="811" pos:column="34">
        <block pos:line="812" pos:column="9">{ <if pos:line="812" pos:column="11">if <condition pos:line="812" pos:column="14">(<expr><operator pos:line="812" pos:column="15">*<pos:position pos:line="812" pos:column="16"/></operator><name pos:line="812" pos:column="16">eptr<pos:position pos:line="812" pos:column="20"/></name> <operator pos:line="812" pos:column="21">!=<pos:position pos:line="812" pos:column="23"/></operator> <name pos:line="812" pos:column="24">NEWLINE<pos:position pos:line="812" pos:column="31"/></name></expr>)<pos:position pos:line="812" pos:column="32"/></condition><then pos:line="812" pos:column="32"> <block type="pseudo"><expr_stmt><expr><call><name pos:line="812" pos:column="33">RRETURN<pos:position pos:line="812" pos:column="40"/></name><argument_list pos:line="812" pos:column="40">(<argument><expr><name pos:line="812" pos:column="41">MATCH_NOMATCH<pos:position pos:line="812" pos:column="54"/></name></expr></argument>)<pos:position pos:line="812" pos:column="55"/></argument_list></call></expr>;<pos:position pos:line="812" pos:column="56"/></expr_stmt></block></then></if> }<pos:position pos:line="812" pos:column="58"/></block></then>
      <else pos:line="813" pos:column="7">else
        <block pos:line="814" pos:column="9">{ <if pos:line="814" pos:column="11">if <condition pos:line="814" pos:column="14">(<expr><name><name pos:line="814" pos:column="15">md<pos:position pos:line="814" pos:column="17"/></name><operator pos:line="814" pos:column="17">-&gt;<pos:position pos:line="814" pos:column="22"/></operator><name pos:line="814" pos:column="19">noteol<pos:position pos:line="814" pos:column="25"/></name></name></expr>)<pos:position pos:line="814" pos:column="26"/></condition><then pos:line="814" pos:column="26"> <block type="pseudo"><expr_stmt><expr><call><name pos:line="814" pos:column="27">RRETURN<pos:position pos:line="814" pos:column="34"/></name><argument_list pos:line="814" pos:column="34">(<argument><expr><name pos:line="814" pos:column="35">MATCH_NOMATCH<pos:position pos:line="814" pos:column="48"/></name></expr></argument>)<pos:position pos:line="814" pos:column="49"/></argument_list></call></expr>;<pos:position pos:line="814" pos:column="50"/></expr_stmt></block></then></if> }<pos:position pos:line="814" pos:column="52"/></block></else></if>
      <expr_stmt><expr><name pos:line="815" pos:column="7">ecode<pos:position pos:line="815" pos:column="12"/></name><operator pos:line="815" pos:column="12">++<pos:position pos:line="815" pos:column="14"/></operator></expr>;<pos:position pos:line="815" pos:column="15"/></expr_stmt>
      <break pos:line="816" pos:column="7">break;<pos:position pos:line="816" pos:column="13"/></break>
      }<pos:position pos:line="817" pos:column="8"/></block></then>
    <else pos:line="818" pos:column="5">else
      <block pos:line="819" pos:column="7">{
      <if pos:line="820" pos:column="7">if <condition pos:line="820" pos:column="10">(<expr><name><name pos:line="820" pos:column="11">md<pos:position pos:line="820" pos:column="13"/></name><operator pos:line="820" pos:column="13">-&gt;<pos:position pos:line="820" pos:column="18"/></operator><name pos:line="820" pos:column="15">noteol<pos:position pos:line="820" pos:column="21"/></name></name></expr>)<pos:position pos:line="820" pos:column="22"/></condition><then pos:line="820" pos:column="22"> <block type="pseudo"><expr_stmt><expr><call><name pos:line="820" pos:column="23">RRETURN<pos:position pos:line="820" pos:column="30"/></name><argument_list pos:line="820" pos:column="30">(<argument><expr><name pos:line="820" pos:column="31">MATCH_NOMATCH<pos:position pos:line="820" pos:column="44"/></name></expr></argument>)<pos:position pos:line="820" pos:column="45"/></argument_list></call></expr>;<pos:position pos:line="820" pos:column="46"/></expr_stmt></block></then></if>
      <if pos:line="821" pos:column="7">if <condition pos:line="821" pos:column="10">(<expr><operator pos:line="821" pos:column="11">!<pos:position pos:line="821" pos:column="12"/></operator><name><name pos:line="821" pos:column="12">md<pos:position pos:line="821" pos:column="14"/></name><operator pos:line="821" pos:column="14">-&gt;<pos:position pos:line="821" pos:column="19"/></operator><name pos:line="821" pos:column="16">endonly<pos:position pos:line="821" pos:column="23"/></name></name></expr>)<pos:position pos:line="821" pos:column="24"/></condition><then pos:line="821" pos:column="24">
        <block pos:line="822" pos:column="9">{
        <if pos:line="823" pos:column="9">if <condition pos:line="823" pos:column="12">(<expr><name pos:line="823" pos:column="13">eptr<pos:position pos:line="823" pos:column="17"/></name> <operator pos:line="823" pos:column="18">&lt;<pos:position pos:line="823" pos:column="22"/></operator> <name><name pos:line="823" pos:column="20">md<pos:position pos:line="823" pos:column="22"/></name><operator pos:line="823" pos:column="22">-&gt;<pos:position pos:line="823" pos:column="27"/></operator><name pos:line="823" pos:column="24">end_subject<pos:position pos:line="823" pos:column="35"/></name></name> <operator pos:line="823" pos:column="36">-<pos:position pos:line="823" pos:column="37"/></operator> <literal type="number" pos:line="823" pos:column="38">1<pos:position pos:line="823" pos:column="39"/></literal> <operator pos:line="823" pos:column="40">||<pos:position pos:line="823" pos:column="42"/></operator>
           <operator pos:line="824" pos:column="12">(<pos:position pos:line="824" pos:column="13"/></operator><name pos:line="824" pos:column="13">eptr<pos:position pos:line="824" pos:column="17"/></name> <operator pos:line="824" pos:column="18">==<pos:position pos:line="824" pos:column="20"/></operator> <name><name pos:line="824" pos:column="21">md<pos:position pos:line="824" pos:column="23"/></name><operator pos:line="824" pos:column="23">-&gt;<pos:position pos:line="824" pos:column="28"/></operator><name pos:line="824" pos:column="25">end_subject<pos:position pos:line="824" pos:column="36"/></name></name> <operator pos:line="824" pos:column="37">-<pos:position pos:line="824" pos:column="38"/></operator> <literal type="number" pos:line="824" pos:column="39">1<pos:position pos:line="824" pos:column="40"/></literal> <operator pos:line="824" pos:column="41">&amp;&amp;<pos:position pos:line="824" pos:column="51"/></operator> <operator pos:line="824" pos:column="44">*<pos:position pos:line="824" pos:column="45"/></operator><name pos:line="824" pos:column="45">eptr<pos:position pos:line="824" pos:column="49"/></name> <operator pos:line="824" pos:column="50">!=<pos:position pos:line="824" pos:column="52"/></operator> <name pos:line="824" pos:column="53">NEWLINE<pos:position pos:line="824" pos:column="60"/></name><operator pos:line="824" pos:column="60">)<pos:position pos:line="824" pos:column="61"/></operator></expr>)<pos:position pos:line="824" pos:column="62"/></condition><then pos:line="824" pos:column="62">
          <block type="pseudo"><expr_stmt><expr><call><name pos:line="825" pos:column="11">RRETURN<pos:position pos:line="825" pos:column="18"/></name><argument_list pos:line="825" pos:column="18">(<argument><expr><name pos:line="825" pos:column="19">MATCH_NOMATCH<pos:position pos:line="825" pos:column="32"/></name></expr></argument>)<pos:position pos:line="825" pos:column="33"/></argument_list></call></expr>;<pos:position pos:line="825" pos:column="34"/></expr_stmt></block></then></if>
        <expr_stmt><expr><name pos:line="826" pos:column="9">ecode<pos:position pos:line="826" pos:column="14"/></name><operator pos:line="826" pos:column="14">++<pos:position pos:line="826" pos:column="16"/></operator></expr>;<pos:position pos:line="826" pos:column="17"/></expr_stmt>
        <break pos:line="827" pos:column="9">break;<pos:position pos:line="827" pos:column="15"/></break>
        }<pos:position pos:line="828" pos:column="10"/></block></then></if>
      }<pos:position pos:line="829" pos:column="8"/></block></else></if>
    <comment type="block" pos:line="830" pos:column="5">/* ... else fall through */</comment>

    <comment type="block" pos:line="832" pos:column="5">/* End of subject assertion (\z) */</comment>

    <case pos:line="834" pos:column="5">case <expr><name pos:line="834" pos:column="10">OP_EOD<pos:position pos:line="834" pos:column="16"/></name></expr>:<pos:position pos:line="834" pos:column="17"/></case>
    <if pos:line="835" pos:column="5">if <condition pos:line="835" pos:column="8">(<expr><name pos:line="835" pos:column="9">eptr<pos:position pos:line="835" pos:column="13"/></name> <operator pos:line="835" pos:column="14">&lt;<pos:position pos:line="835" pos:column="18"/></operator> <name><name pos:line="835" pos:column="16">md<pos:position pos:line="835" pos:column="18"/></name><operator pos:line="835" pos:column="18">-&gt;<pos:position pos:line="835" pos:column="23"/></operator><name pos:line="835" pos:column="20">end_subject<pos:position pos:line="835" pos:column="31"/></name></name></expr>)<pos:position pos:line="835" pos:column="32"/></condition><then pos:line="835" pos:column="32"> <block type="pseudo"><expr_stmt><expr><call><name pos:line="835" pos:column="33">RRETURN<pos:position pos:line="835" pos:column="40"/></name><argument_list pos:line="835" pos:column="40">(<argument><expr><name pos:line="835" pos:column="41">MATCH_NOMATCH<pos:position pos:line="835" pos:column="54"/></name></expr></argument>)<pos:position pos:line="835" pos:column="55"/></argument_list></call></expr>;<pos:position pos:line="835" pos:column="56"/></expr_stmt></block></then></if>
    <expr_stmt><expr><name pos:line="836" pos:column="5">ecode<pos:position pos:line="836" pos:column="10"/></name><operator pos:line="836" pos:column="10">++<pos:position pos:line="836" pos:column="12"/></operator></expr>;<pos:position pos:line="836" pos:column="13"/></expr_stmt>
    <break pos:line="837" pos:column="5">break;<pos:position pos:line="837" pos:column="11"/></break>

    <comment type="block" pos:line="839" pos:column="5">/* End of subject or ending \n assertion (\Z) */</comment>

    <case pos:line="841" pos:column="5">case <expr><name pos:line="841" pos:column="10">OP_EODN<pos:position pos:line="841" pos:column="17"/></name></expr>:<pos:position pos:line="841" pos:column="18"/></case>
    <if pos:line="842" pos:column="5">if <condition pos:line="842" pos:column="8">(<expr><name pos:line="842" pos:column="9">eptr<pos:position pos:line="842" pos:column="13"/></name> <operator pos:line="842" pos:column="14">&lt;<pos:position pos:line="842" pos:column="18"/></operator> <name><name pos:line="842" pos:column="16">md<pos:position pos:line="842" pos:column="18"/></name><operator pos:line="842" pos:column="18">-&gt;<pos:position pos:line="842" pos:column="23"/></operator><name pos:line="842" pos:column="20">end_subject<pos:position pos:line="842" pos:column="31"/></name></name> <operator pos:line="842" pos:column="32">-<pos:position pos:line="842" pos:column="33"/></operator> <literal type="number" pos:line="842" pos:column="34">1<pos:position pos:line="842" pos:column="35"/></literal> <operator pos:line="842" pos:column="36">||<pos:position pos:line="842" pos:column="38"/></operator>
       <operator pos:line="843" pos:column="8">(<pos:position pos:line="843" pos:column="9"/></operator><name pos:line="843" pos:column="9">eptr<pos:position pos:line="843" pos:column="13"/></name> <operator pos:line="843" pos:column="14">==<pos:position pos:line="843" pos:column="16"/></operator> <name><name pos:line="843" pos:column="17">md<pos:position pos:line="843" pos:column="19"/></name><operator pos:line="843" pos:column="19">-&gt;<pos:position pos:line="843" pos:column="24"/></operator><name pos:line="843" pos:column="21">end_subject<pos:position pos:line="843" pos:column="32"/></name></name> <operator pos:line="843" pos:column="33">-<pos:position pos:line="843" pos:column="34"/></operator> <literal type="number" pos:line="843" pos:column="35">1<pos:position pos:line="843" pos:column="36"/></literal> <operator pos:line="843" pos:column="37">&amp;&amp;<pos:position pos:line="843" pos:column="47"/></operator> <operator pos:line="843" pos:column="40">*<pos:position pos:line="843" pos:column="41"/></operator><name pos:line="843" pos:column="41">eptr<pos:position pos:line="843" pos:column="45"/></name> <operator pos:line="843" pos:column="46">!=<pos:position pos:line="843" pos:column="48"/></operator> <name pos:line="843" pos:column="49">NEWLINE<pos:position pos:line="843" pos:column="56"/></name><operator pos:line="843" pos:column="56">)<pos:position pos:line="843" pos:column="57"/></operator></expr>)<pos:position pos:line="843" pos:column="58"/></condition><then pos:line="843" pos:column="58"> <block type="pseudo"><expr_stmt><expr><call><name pos:line="843" pos:column="59">RRETURN<pos:position pos:line="843" pos:column="66"/></name><argument_list pos:line="843" pos:column="66">(<argument><expr><name pos:line="843" pos:column="67">MATCH_NOMATCH<pos:position pos:line="843" pos:column="80"/></name></expr></argument>)<pos:position pos:line="843" pos:column="81"/></argument_list></call></expr>;<pos:position pos:line="843" pos:column="82"/></expr_stmt></block></then></if>
    <expr_stmt><expr><name pos:line="844" pos:column="5">ecode<pos:position pos:line="844" pos:column="10"/></name><operator pos:line="844" pos:column="10">++<pos:position pos:line="844" pos:column="12"/></operator></expr>;<pos:position pos:line="844" pos:column="13"/></expr_stmt>
    <break pos:line="845" pos:column="5">break;<pos:position pos:line="845" pos:column="11"/></break>

    <comment type="block" pos:line="847" pos:column="5">/* Word boundary assertions */</comment>

    <case pos:line="849" pos:column="5">case <expr><name pos:line="849" pos:column="10">OP_NOT_WORD_BOUNDARY<pos:position pos:line="849" pos:column="30"/></name></expr>:<pos:position pos:line="849" pos:column="31"/></case>
    <case pos:line="850" pos:column="5">case <expr><name pos:line="850" pos:column="10">OP_WORD_BOUNDARY<pos:position pos:line="850" pos:column="26"/></name></expr>:<pos:position pos:line="850" pos:column="27"/></case>
      <block pos:line="851" pos:column="7">{

      <comment type="block" pos:line="853" pos:column="7">/* Find out if the previous and current characters are "word" characters.
      It takes a bit more work in UTF-8 mode. Characters &gt; 255 are assumed to
      be "non-word" characters. */</comment>

<cpp:ifdef pos:line="857" pos:column="1">#<cpp:directive pos:line="857" pos:column="2">ifdef<pos:position pos:line="857" pos:column="7"/></cpp:directive> <name pos:line="857" pos:column="8">SUPPORT_UTF8<pos:position pos:line="857" pos:column="20"/></name></cpp:ifdef>
      <if pos:line="858" pos:column="7">if <condition pos:line="858" pos:column="10">(<expr><name><name pos:line="858" pos:column="11">md<pos:position pos:line="858" pos:column="13"/></name><operator pos:line="858" pos:column="13">-&gt;<pos:position pos:line="858" pos:column="18"/></operator><name pos:line="858" pos:column="15">utf8<pos:position pos:line="858" pos:column="19"/></name></name></expr>)<pos:position pos:line="858" pos:column="20"/></condition><then pos:line="858" pos:column="20">
        <block pos:line="859" pos:column="9">{
        <if pos:line="860" pos:column="9">if <condition pos:line="860" pos:column="12">(<expr><name pos:line="860" pos:column="13">eptr<pos:position pos:line="860" pos:column="17"/></name> <operator pos:line="860" pos:column="18">==<pos:position pos:line="860" pos:column="20"/></operator> <name><name pos:line="860" pos:column="21">md<pos:position pos:line="860" pos:column="23"/></name><operator pos:line="860" pos:column="23">-&gt;<pos:position pos:line="860" pos:column="28"/></operator><name pos:line="860" pos:column="25">start_subject<pos:position pos:line="860" pos:column="38"/></name></name></expr>)<pos:position pos:line="860" pos:column="39"/></condition><then pos:line="860" pos:column="39"> <block type="pseudo"><expr_stmt><expr><name pos:line="860" pos:column="40">prev_is_word<pos:position pos:line="860" pos:column="52"/></name> <operator pos:line="860" pos:column="53">=<pos:position pos:line="860" pos:column="54"/></operator> <name pos:line="860" pos:column="55">FALSE<pos:position pos:line="860" pos:column="60"/></name></expr>;<pos:position pos:line="860" pos:column="61"/></expr_stmt></block></then> <else pos:line="860" pos:column="62">else
          <block pos:line="861" pos:column="11">{
          <decl_stmt><decl><type><specifier pos:line="862" pos:column="11">const<pos:position pos:line="862" pos:column="16"/></specifier> <name pos:line="862" pos:column="17">uschar<pos:position pos:line="862" pos:column="23"/></name> <modifier pos:line="862" pos:column="24">*<pos:position pos:line="862" pos:column="25"/></modifier></type><name pos:line="862" pos:column="25">lastptr<pos:position pos:line="862" pos:column="32"/></name> <init pos:line="862" pos:column="33">= <expr><name pos:line="862" pos:column="35">eptr<pos:position pos:line="862" pos:column="39"/></name> <operator pos:line="862" pos:column="40">-<pos:position pos:line="862" pos:column="41"/></operator> <literal type="number" pos:line="862" pos:column="42">1<pos:position pos:line="862" pos:column="43"/></literal></expr></init></decl>;<pos:position pos:line="862" pos:column="44"/></decl_stmt>
          <while pos:line="863" pos:column="11">while<condition pos:line="863" pos:column="16">(<expr><operator pos:line="863" pos:column="17">(<pos:position pos:line="863" pos:column="18"/></operator><operator pos:line="863" pos:column="18">*<pos:position pos:line="863" pos:column="19"/></operator><name pos:line="863" pos:column="19">lastptr<pos:position pos:line="863" pos:column="26"/></name> <operator pos:line="863" pos:column="27">&amp;<pos:position pos:line="863" pos:column="32"/></operator> <literal type="number" pos:line="863" pos:column="29">0xc0<pos:position pos:line="863" pos:column="33"/></literal><operator pos:line="863" pos:column="33">)<pos:position pos:line="863" pos:column="34"/></operator> <operator pos:line="863" pos:column="35">==<pos:position pos:line="863" pos:column="37"/></operator> <literal type="number" pos:line="863" pos:column="38">0x80<pos:position pos:line="863" pos:column="42"/></literal></expr>)<pos:position pos:line="863" pos:column="43"/></condition> <block type="pseudo"><expr_stmt><expr><name pos:line="863" pos:column="44">lastptr<pos:position pos:line="863" pos:column="51"/></name><operator pos:line="863" pos:column="51">--<pos:position pos:line="863" pos:column="53"/></operator></expr>;<pos:position pos:line="863" pos:column="54"/></expr_stmt></block></while>
          <expr_stmt><expr><call><name pos:line="864" pos:column="11">GETCHAR<pos:position pos:line="864" pos:column="18"/></name><argument_list pos:line="864" pos:column="18">(<argument><expr><name pos:line="864" pos:column="19">c<pos:position pos:line="864" pos:column="20"/></name></expr></argument>, <argument><expr><name pos:line="864" pos:column="22">lastptr<pos:position pos:line="864" pos:column="29"/></name></expr></argument>)<pos:position pos:line="864" pos:column="30"/></argument_list></call></expr>;<pos:position pos:line="864" pos:column="31"/></expr_stmt>
          <expr_stmt><expr><name pos:line="865" pos:column="11">prev_is_word<pos:position pos:line="865" pos:column="23"/></name> <operator pos:line="865" pos:column="24">=<pos:position pos:line="865" pos:column="25"/></operator> <name pos:line="865" pos:column="26">c<pos:position pos:line="865" pos:column="27"/></name> <operator pos:line="865" pos:column="28">&lt;<pos:position pos:line="865" pos:column="32"/></operator> <literal type="number" pos:line="865" pos:column="30">256<pos:position pos:line="865" pos:column="33"/></literal> <operator pos:line="865" pos:column="34">&amp;&amp;<pos:position pos:line="865" pos:column="44"/></operator> <operator pos:line="865" pos:column="37">(<pos:position pos:line="865" pos:column="38"/></operator><name><name pos:line="865" pos:column="38">md<pos:position pos:line="865" pos:column="40"/></name><operator pos:line="865" pos:column="40">-&gt;<pos:position pos:line="865" pos:column="45"/></operator><name pos:line="865" pos:column="42">ctypes<pos:position pos:line="865" pos:column="48"/></name><index pos:line="865" pos:column="48">[<expr><name pos:line="865" pos:column="49">c<pos:position pos:line="865" pos:column="50"/></name></expr>]<pos:position pos:line="865" pos:column="51"/></index></name> <operator pos:line="865" pos:column="52">&amp;<pos:position pos:line="865" pos:column="57"/></operator> <name pos:line="865" pos:column="54">ctype_word<pos:position pos:line="865" pos:column="64"/></name><operator pos:line="865" pos:column="64">)<pos:position pos:line="865" pos:column="65"/></operator> <operator pos:line="865" pos:column="66">!=<pos:position pos:line="865" pos:column="68"/></operator> <literal type="number" pos:line="865" pos:column="69">0<pos:position pos:line="865" pos:column="70"/></literal></expr>;<pos:position pos:line="865" pos:column="71"/></expr_stmt>
          }<pos:position pos:line="866" pos:column="12"/></block></else></if>
        <if pos:line="867" pos:column="9">if <condition pos:line="867" pos:column="12">(<expr><name pos:line="867" pos:column="13">eptr<pos:position pos:line="867" pos:column="17"/></name> <operator pos:line="867" pos:column="18">&gt;=<pos:position pos:line="867" pos:column="23"/></operator> <name><name pos:line="867" pos:column="21">md<pos:position pos:line="867" pos:column="23"/></name><operator pos:line="867" pos:column="23">-&gt;<pos:position pos:line="867" pos:column="28"/></operator><name pos:line="867" pos:column="25">end_subject<pos:position pos:line="867" pos:column="36"/></name></name></expr>)<pos:position pos:line="867" pos:column="37"/></condition><then pos:line="867" pos:column="37"> <block type="pseudo"><expr_stmt><expr><name pos:line="867" pos:column="38">cur_is_word<pos:position pos:line="867" pos:column="49"/></name> <operator pos:line="867" pos:column="50">=<pos:position pos:line="867" pos:column="51"/></operator> <name pos:line="867" pos:column="52">FALSE<pos:position pos:line="867" pos:column="57"/></name></expr>;<pos:position pos:line="867" pos:column="58"/></expr_stmt></block></then> <else pos:line="867" pos:column="59">else
          <block pos:line="868" pos:column="11">{
          <expr_stmt><expr><call><name pos:line="869" pos:column="11">GETCHAR<pos:position pos:line="869" pos:column="18"/></name><argument_list pos:line="869" pos:column="18">(<argument><expr><name pos:line="869" pos:column="19">c<pos:position pos:line="869" pos:column="20"/></name></expr></argument>, <argument><expr><name pos:line="869" pos:column="22">eptr<pos:position pos:line="869" pos:column="26"/></name></expr></argument>)<pos:position pos:line="869" pos:column="27"/></argument_list></call></expr>;<pos:position pos:line="869" pos:column="28"/></expr_stmt>
          <expr_stmt><expr><name pos:line="870" pos:column="11">cur_is_word<pos:position pos:line="870" pos:column="22"/></name> <operator pos:line="870" pos:column="23">=<pos:position pos:line="870" pos:column="24"/></operator> <name pos:line="870" pos:column="25">c<pos:position pos:line="870" pos:column="26"/></name> <operator pos:line="870" pos:column="27">&lt;<pos:position pos:line="870" pos:column="31"/></operator> <literal type="number" pos:line="870" pos:column="29">256<pos:position pos:line="870" pos:column="32"/></literal> <operator pos:line="870" pos:column="33">&amp;&amp;<pos:position pos:line="870" pos:column="43"/></operator> <operator pos:line="870" pos:column="36">(<pos:position pos:line="870" pos:column="37"/></operator><name><name pos:line="870" pos:column="37">md<pos:position pos:line="870" pos:column="39"/></name><operator pos:line="870" pos:column="39">-&gt;<pos:position pos:line="870" pos:column="44"/></operator><name pos:line="870" pos:column="41">ctypes<pos:position pos:line="870" pos:column="47"/></name><index pos:line="870" pos:column="47">[<expr><name pos:line="870" pos:column="48">c<pos:position pos:line="870" pos:column="49"/></name></expr>]<pos:position pos:line="870" pos:column="50"/></index></name> <operator pos:line="870" pos:column="51">&amp;<pos:position pos:line="870" pos:column="56"/></operator> <name pos:line="870" pos:column="53">ctype_word<pos:position pos:line="870" pos:column="63"/></name><operator pos:line="870" pos:column="63">)<pos:position pos:line="870" pos:column="64"/></operator> <operator pos:line="870" pos:column="65">!=<pos:position pos:line="870" pos:column="67"/></operator> <literal type="number" pos:line="870" pos:column="68">0<pos:position pos:line="870" pos:column="69"/></literal></expr>;<pos:position pos:line="870" pos:column="70"/></expr_stmt>
          }<pos:position pos:line="871" pos:column="12"/></block></else></if>
        }<pos:position pos:line="872" pos:column="10"/></block></then>
      <else pos:line="873" pos:column="7">else
<cpp:endif pos:line="874" pos:column="1">#<cpp:directive pos:line="874" pos:column="2">endif<pos:position pos:line="874" pos:column="7"/></cpp:directive></cpp:endif>

      <comment type="block" pos:line="876" pos:column="7">/* More streamlined when not in UTF-8 mode */</comment>

        <block pos:line="878" pos:column="9">{
        <expr_stmt><expr><name pos:line="879" pos:column="9">prev_is_word<pos:position pos:line="879" pos:column="21"/></name> <operator pos:line="879" pos:column="22">=<pos:position pos:line="879" pos:column="23"/></operator> <operator pos:line="879" pos:column="24">(<pos:position pos:line="879" pos:column="25"/></operator><name pos:line="879" pos:column="25">eptr<pos:position pos:line="879" pos:column="29"/></name> <operator pos:line="879" pos:column="30">!=<pos:position pos:line="879" pos:column="32"/></operator> <name><name pos:line="879" pos:column="33">md<pos:position pos:line="879" pos:column="35"/></name><operator pos:line="879" pos:column="35">-&gt;<pos:position pos:line="879" pos:column="40"/></operator><name pos:line="879" pos:column="37">start_subject<pos:position pos:line="879" pos:column="50"/></name></name><operator pos:line="879" pos:column="50">)<pos:position pos:line="879" pos:column="51"/></operator> <operator pos:line="879" pos:column="52">&amp;&amp;<pos:position pos:line="879" pos:column="62"/></operator>
          <operator pos:line="880" pos:column="11">(<pos:position pos:line="880" pos:column="12"/></operator><operator pos:line="880" pos:column="12">(<pos:position pos:line="880" pos:column="13"/></operator><name><name pos:line="880" pos:column="13">md<pos:position pos:line="880" pos:column="15"/></name><operator pos:line="880" pos:column="15">-&gt;<pos:position pos:line="880" pos:column="20"/></operator><name pos:line="880" pos:column="17">ctypes<pos:position pos:line="880" pos:column="23"/></name><index pos:line="880" pos:column="23">[<expr><name><name pos:line="880" pos:column="24">eptr<pos:position pos:line="880" pos:column="28"/></name><index pos:line="880" pos:column="28">[<expr><operator pos:line="880" pos:column="29">-<pos:position pos:line="880" pos:column="30"/></operator><literal type="number" pos:line="880" pos:column="30">1<pos:position pos:line="880" pos:column="31"/></literal></expr>]<pos:position pos:line="880" pos:column="32"/></index></name></expr>]<pos:position pos:line="880" pos:column="33"/></index></name> <operator pos:line="880" pos:column="34">&amp;<pos:position pos:line="880" pos:column="39"/></operator> <name pos:line="880" pos:column="36">ctype_word<pos:position pos:line="880" pos:column="46"/></name><operator pos:line="880" pos:column="46">)<pos:position pos:line="880" pos:column="47"/></operator> <operator pos:line="880" pos:column="48">!=<pos:position pos:line="880" pos:column="50"/></operator> <literal type="number" pos:line="880" pos:column="51">0<pos:position pos:line="880" pos:column="52"/></literal><operator pos:line="880" pos:column="52">)<pos:position pos:line="880" pos:column="53"/></operator></expr>;<pos:position pos:line="880" pos:column="54"/></expr_stmt>
        <expr_stmt><expr><name pos:line="881" pos:column="9">cur_is_word<pos:position pos:line="881" pos:column="20"/></name> <operator pos:line="881" pos:column="21">=<pos:position pos:line="881" pos:column="22"/></operator> <operator pos:line="881" pos:column="23">(<pos:position pos:line="881" pos:column="24"/></operator><name pos:line="881" pos:column="24">eptr<pos:position pos:line="881" pos:column="28"/></name> <operator pos:line="881" pos:column="29">&lt;<pos:position pos:line="881" pos:column="33"/></operator> <name><name pos:line="881" pos:column="31">md<pos:position pos:line="881" pos:column="33"/></name><operator pos:line="881" pos:column="33">-&gt;<pos:position pos:line="881" pos:column="38"/></operator><name pos:line="881" pos:column="35">end_subject<pos:position pos:line="881" pos:column="46"/></name></name><operator pos:line="881" pos:column="46">)<pos:position pos:line="881" pos:column="47"/></operator> <operator pos:line="881" pos:column="48">&amp;&amp;<pos:position pos:line="881" pos:column="58"/></operator>
          <operator pos:line="882" pos:column="11">(<pos:position pos:line="882" pos:column="12"/></operator><operator pos:line="882" pos:column="12">(<pos:position pos:line="882" pos:column="13"/></operator><name><name pos:line="882" pos:column="13">md<pos:position pos:line="882" pos:column="15"/></name><operator pos:line="882" pos:column="15">-&gt;<pos:position pos:line="882" pos:column="20"/></operator><name pos:line="882" pos:column="17">ctypes<pos:position pos:line="882" pos:column="23"/></name><index pos:line="882" pos:column="23">[<expr><operator pos:line="882" pos:column="24">*<pos:position pos:line="882" pos:column="25"/></operator><name pos:line="882" pos:column="25">eptr<pos:position pos:line="882" pos:column="29"/></name></expr>]<pos:position pos:line="882" pos:column="30"/></index></name> <operator pos:line="882" pos:column="31">&amp;<pos:position pos:line="882" pos:column="36"/></operator> <name pos:line="882" pos:column="33">ctype_word<pos:position pos:line="882" pos:column="43"/></name><operator pos:line="882" pos:column="43">)<pos:position pos:line="882" pos:column="44"/></operator> <operator pos:line="882" pos:column="45">!=<pos:position pos:line="882" pos:column="47"/></operator> <literal type="number" pos:line="882" pos:column="48">0<pos:position pos:line="882" pos:column="49"/></literal><operator pos:line="882" pos:column="49">)<pos:position pos:line="882" pos:column="50"/></operator></expr>;<pos:position pos:line="882" pos:column="51"/></expr_stmt>
        }<pos:position pos:line="883" pos:column="10"/></block></else></if>

      <comment type="block" pos:line="885" pos:column="7">/* Now see if the situation is what we want */</comment>

      <if pos:line="887" pos:column="7">if <condition pos:line="887" pos:column="10">(<expr><ternary><condition><expr><operator pos:line="887" pos:column="11">(<pos:position pos:line="887" pos:column="12"/></operator><operator pos:line="887" pos:column="12">*<pos:position pos:line="887" pos:column="13"/></operator><name pos:line="887" pos:column="13">ecode<pos:position pos:line="887" pos:column="18"/></name><operator pos:line="887" pos:column="18">++<pos:position pos:line="887" pos:column="20"/></operator> <operator pos:line="887" pos:column="21">==<pos:position pos:line="887" pos:column="23"/></operator> <name pos:line="887" pos:column="24">OP_WORD_BOUNDARY<pos:position pos:line="887" pos:column="40"/></name><operator pos:line="887" pos:column="40">)<pos:position pos:line="887" pos:column="41"/></operator></expr>?<pos:position pos:line="887" pos:column="42"/></condition><then pos:line="887" pos:column="42">
           <expr><name pos:line="888" pos:column="12">cur_is_word<pos:position pos:line="888" pos:column="23"/></name> <operator pos:line="888" pos:column="24">==<pos:position pos:line="888" pos:column="26"/></operator> <name pos:line="888" pos:column="27">prev_is_word<pos:position pos:line="888" pos:column="39"/></name></expr> <pos:position pos:line="888" pos:column="40"/></then><else pos:line="888" pos:column="40">: <expr><name pos:line="888" pos:column="42">cur_is_word<pos:position pos:line="888" pos:column="53"/></name> <operator pos:line="888" pos:column="54">!=<pos:position pos:line="888" pos:column="56"/></operator> <name pos:line="888" pos:column="57">prev_is_word<pos:position pos:line="888" pos:column="69"/></name></expr></else></ternary></expr>)<pos:position pos:line="888" pos:column="70"/></condition><then pos:line="888" pos:column="70">
        <block type="pseudo"><expr_stmt><expr><call><name pos:line="889" pos:column="9">RRETURN<pos:position pos:line="889" pos:column="16"/></name><argument_list pos:line="889" pos:column="16">(<argument><expr><name pos:line="889" pos:column="17">MATCH_NOMATCH<pos:position pos:line="889" pos:column="30"/></name></expr></argument>)<pos:position pos:line="889" pos:column="31"/></argument_list></call></expr>;<pos:position pos:line="889" pos:column="32"/></expr_stmt></block></then></if>
      }<pos:position pos:line="890" pos:column="8"/></block>
    <break pos:line="891" pos:column="5">break;<pos:position pos:line="891" pos:column="11"/></break>

    <comment type="block" pos:line="893" pos:column="5">/* Match a single character type; inline for speed */</comment>

    <case pos:line="895" pos:column="5">case <expr><name pos:line="895" pos:column="10">OP_ANY<pos:position pos:line="895" pos:column="16"/></name></expr>:<pos:position pos:line="895" pos:column="17"/></case>
    <if pos:line="896" pos:column="5">if <condition pos:line="896" pos:column="8">(<expr><operator pos:line="896" pos:column="9">(<pos:position pos:line="896" pos:column="10"/></operator><name pos:line="896" pos:column="10">ims<pos:position pos:line="896" pos:column="13"/></name> <operator pos:line="896" pos:column="14">&amp;<pos:position pos:line="896" pos:column="19"/></operator> <name pos:line="896" pos:column="16">PCRE_DOTALL<pos:position pos:line="896" pos:column="27"/></name><operator pos:line="896" pos:column="27">)<pos:position pos:line="896" pos:column="28"/></operator> <operator pos:line="896" pos:column="29">==<pos:position pos:line="896" pos:column="31"/></operator> <literal type="number" pos:line="896" pos:column="32">0<pos:position pos:line="896" pos:column="33"/></literal> <operator pos:line="896" pos:column="34">&amp;&amp;<pos:position pos:line="896" pos:column="44"/></operator> <name pos:line="896" pos:column="37">eptr<pos:position pos:line="896" pos:column="41"/></name> <operator pos:line="896" pos:column="42">&lt;<pos:position pos:line="896" pos:column="46"/></operator> <name><name pos:line="896" pos:column="44">md<pos:position pos:line="896" pos:column="46"/></name><operator pos:line="896" pos:column="46">-&gt;<pos:position pos:line="896" pos:column="51"/></operator><name pos:line="896" pos:column="48">end_subject<pos:position pos:line="896" pos:column="59"/></name></name> <operator pos:line="896" pos:column="60">&amp;&amp;<pos:position pos:line="896" pos:column="70"/></operator> <operator pos:line="896" pos:column="63">*<pos:position pos:line="896" pos:column="64"/></operator><name pos:line="896" pos:column="64">eptr<pos:position pos:line="896" pos:column="68"/></name> <operator pos:line="896" pos:column="69">==<pos:position pos:line="896" pos:column="71"/></operator> <name pos:line="896" pos:column="72">NEWLINE<pos:position pos:line="896" pos:column="79"/></name></expr>)<pos:position pos:line="896" pos:column="80"/></condition><then pos:line="896" pos:column="80">
      <block type="pseudo"><expr_stmt><expr><call><name pos:line="897" pos:column="7">RRETURN<pos:position pos:line="897" pos:column="14"/></name><argument_list pos:line="897" pos:column="14">(<argument><expr><name pos:line="897" pos:column="15">MATCH_NOMATCH<pos:position pos:line="897" pos:column="28"/></name></expr></argument>)<pos:position pos:line="897" pos:column="29"/></argument_list></call></expr>;<pos:position pos:line="897" pos:column="30"/></expr_stmt></block></then></if>
    <if pos:line="898" pos:column="5">if <condition pos:line="898" pos:column="8">(<expr><name pos:line="898" pos:column="9">eptr<pos:position pos:line="898" pos:column="13"/></name><operator pos:line="898" pos:column="13">++<pos:position pos:line="898" pos:column="15"/></operator> <operator pos:line="898" pos:column="16">&gt;=<pos:position pos:line="898" pos:column="21"/></operator> <name><name pos:line="898" pos:column="19">md<pos:position pos:line="898" pos:column="21"/></name><operator pos:line="898" pos:column="21">-&gt;<pos:position pos:line="898" pos:column="26"/></operator><name pos:line="898" pos:column="23">end_subject<pos:position pos:line="898" pos:column="34"/></name></name></expr>)<pos:position pos:line="898" pos:column="35"/></condition><then pos:line="898" pos:column="35"> <block type="pseudo"><expr_stmt><expr><call><name pos:line="898" pos:column="36">RRETURN<pos:position pos:line="898" pos:column="43"/></name><argument_list pos:line="898" pos:column="43">(<argument><expr><name pos:line="898" pos:column="44">MATCH_NOMATCH<pos:position pos:line="898" pos:column="57"/></name></expr></argument>)<pos:position pos:line="898" pos:column="58"/></argument_list></call></expr>;<pos:position pos:line="898" pos:column="59"/></expr_stmt></block></then></if>
<cpp:ifdef pos:line="899" pos:column="1">#<cpp:directive pos:line="899" pos:column="2">ifdef<pos:position pos:line="899" pos:column="7"/></cpp:directive> <name pos:line="899" pos:column="8">SUPPORT_UTF8<pos:position pos:line="899" pos:column="20"/></name></cpp:ifdef>
    <if pos:line="900" pos:column="5">if <condition pos:line="900" pos:column="8">(<expr><name><name pos:line="900" pos:column="9">md<pos:position pos:line="900" pos:column="11"/></name><operator pos:line="900" pos:column="11">-&gt;<pos:position pos:line="900" pos:column="16"/></operator><name pos:line="900" pos:column="13">utf8<pos:position pos:line="900" pos:column="17"/></name></name></expr>)<pos:position pos:line="900" pos:column="18"/></condition><then pos:line="900" pos:column="18">
      <block type="pseudo"><while pos:line="901" pos:column="7">while <condition pos:line="901" pos:column="13">(<expr><name pos:line="901" pos:column="14">eptr<pos:position pos:line="901" pos:column="18"/></name> <operator pos:line="901" pos:column="19">&lt;<pos:position pos:line="901" pos:column="23"/></operator> <name><name pos:line="901" pos:column="21">md<pos:position pos:line="901" pos:column="23"/></name><operator pos:line="901" pos:column="23">-&gt;<pos:position pos:line="901" pos:column="28"/></operator><name pos:line="901" pos:column="25">end_subject<pos:position pos:line="901" pos:column="36"/></name></name> <operator pos:line="901" pos:column="37">&amp;&amp;<pos:position pos:line="901" pos:column="47"/></operator> <operator pos:line="901" pos:column="40">(<pos:position pos:line="901" pos:column="41"/></operator><operator pos:line="901" pos:column="41">*<pos:position pos:line="901" pos:column="42"/></operator><name pos:line="901" pos:column="42">eptr<pos:position pos:line="901" pos:column="46"/></name> <operator pos:line="901" pos:column="47">&amp;<pos:position pos:line="901" pos:column="52"/></operator> <literal type="number" pos:line="901" pos:column="49">0xc0<pos:position pos:line="901" pos:column="53"/></literal><operator pos:line="901" pos:column="53">)<pos:position pos:line="901" pos:column="54"/></operator> <operator pos:line="901" pos:column="55">==<pos:position pos:line="901" pos:column="57"/></operator> <literal type="number" pos:line="901" pos:column="58">0x80<pos:position pos:line="901" pos:column="62"/></literal></expr>)<pos:position pos:line="901" pos:column="63"/></condition> <block type="pseudo"><expr_stmt><expr><name pos:line="901" pos:column="64">eptr<pos:position pos:line="901" pos:column="68"/></name><operator pos:line="901" pos:column="68">++<pos:position pos:line="901" pos:column="70"/></operator></expr>;<pos:position pos:line="901" pos:column="71"/></expr_stmt></block></while></block></then></if>
<cpp:endif pos:line="902" pos:column="1">#<cpp:directive pos:line="902" pos:column="2">endif<pos:position pos:line="902" pos:column="7"/></cpp:directive></cpp:endif>
    <expr_stmt><expr><name pos:line="903" pos:column="5">ecode<pos:position pos:line="903" pos:column="10"/></name><operator pos:line="903" pos:column="10">++<pos:position pos:line="903" pos:column="12"/></operator></expr>;<pos:position pos:line="903" pos:column="13"/></expr_stmt>
    <break pos:line="904" pos:column="5">break;<pos:position pos:line="904" pos:column="11"/></break>

    <comment type="block" pos:line="906" pos:column="5">/* Match a single byte, even in UTF-8 mode. This opcode really does match
    any byte, even newline, independent of the setting of PCRE_DOTALL. */</comment>

    <case pos:line="909" pos:column="5">case <expr><name pos:line="909" pos:column="10">OP_ANYBYTE<pos:position pos:line="909" pos:column="20"/></name></expr>:<pos:position pos:line="909" pos:column="21"/></case>
    <if pos:line="910" pos:column="5">if <condition pos:line="910" pos:column="8">(<expr><name pos:line="910" pos:column="9">eptr<pos:position pos:line="910" pos:column="13"/></name><operator pos:line="910" pos:column="13">++<pos:position pos:line="910" pos:column="15"/></operator> <operator pos:line="910" pos:column="16">&gt;=<pos:position pos:line="910" pos:column="21"/></operator> <name><name pos:line="910" pos:column="19">md<pos:position pos:line="910" pos:column="21"/></name><operator pos:line="910" pos:column="21">-&gt;<pos:position pos:line="910" pos:column="26"/></operator><name pos:line="910" pos:column="23">end_subject<pos:position pos:line="910" pos:column="34"/></name></name></expr>)<pos:position pos:line="910" pos:column="35"/></condition><then pos:line="910" pos:column="35"> <block type="pseudo"><expr_stmt><expr><call><name pos:line="910" pos:column="36">RRETURN<pos:position pos:line="910" pos:column="43"/></name><argument_list pos:line="910" pos:column="43">(<argument><expr><name pos:line="910" pos:column="44">MATCH_NOMATCH<pos:position pos:line="910" pos:column="57"/></name></expr></argument>)<pos:position pos:line="910" pos:column="58"/></argument_list></call></expr>;<pos:position pos:line="910" pos:column="59"/></expr_stmt></block></then></if>
    <expr_stmt><expr><name pos:line="911" pos:column="5">ecode<pos:position pos:line="911" pos:column="10"/></name><operator pos:line="911" pos:column="10">++<pos:position pos:line="911" pos:column="12"/></operator></expr>;<pos:position pos:line="911" pos:column="13"/></expr_stmt>
    <break pos:line="912" pos:column="5">break;<pos:position pos:line="912" pos:column="11"/></break>

    <case pos:line="914" pos:column="5">case <expr><name pos:line="914" pos:column="10">OP_NOT_DIGIT<pos:position pos:line="914" pos:column="22"/></name></expr>:<pos:position pos:line="914" pos:column="23"/></case>
    <if pos:line="915" pos:column="5">if <condition pos:line="915" pos:column="8">(<expr><name pos:line="915" pos:column="9">eptr<pos:position pos:line="915" pos:column="13"/></name> <operator pos:line="915" pos:column="14">&gt;=<pos:position pos:line="915" pos:column="19"/></operator> <name><name pos:line="915" pos:column="17">md<pos:position pos:line="915" pos:column="19"/></name><operator pos:line="915" pos:column="19">-&gt;<pos:position pos:line="915" pos:column="24"/></operator><name pos:line="915" pos:column="21">end_subject<pos:position pos:line="915" pos:column="32"/></name></name></expr>)<pos:position pos:line="915" pos:column="33"/></condition><then pos:line="915" pos:column="33"> <block type="pseudo"><expr_stmt><expr><call><name pos:line="915" pos:column="34">RRETURN<pos:position pos:line="915" pos:column="41"/></name><argument_list pos:line="915" pos:column="41">(<argument><expr><name pos:line="915" pos:column="42">MATCH_NOMATCH<pos:position pos:line="915" pos:column="55"/></name></expr></argument>)<pos:position pos:line="915" pos:column="56"/></argument_list></call></expr>;<pos:position pos:line="915" pos:column="57"/></expr_stmt></block></then></if>
    <expr_stmt><expr><call><name pos:line="916" pos:column="5">GETCHARINCTEST<pos:position pos:line="916" pos:column="19"/></name><argument_list pos:line="916" pos:column="19">(<argument><expr><name pos:line="916" pos:column="20">c<pos:position pos:line="916" pos:column="21"/></name></expr></argument>, <argument><expr><name pos:line="916" pos:column="23">eptr<pos:position pos:line="916" pos:column="27"/></name></expr></argument>)<pos:position pos:line="916" pos:column="28"/></argument_list></call></expr>;<pos:position pos:line="916" pos:column="29"/></expr_stmt>
    <if pos:line="917" pos:column="5">if <condition pos:line="917" pos:column="8">(
<cpp:ifdef pos:line="918" pos:column="1">#<cpp:directive pos:line="918" pos:column="2">ifdef<pos:position pos:line="918" pos:column="7"/></cpp:directive> <name pos:line="918" pos:column="8">SUPPORT_UTF8<pos:position pos:line="918" pos:column="20"/></name></cpp:ifdef>
       <expr><name pos:line="919" pos:column="8">c<pos:position pos:line="919" pos:column="9"/></name> <operator pos:line="919" pos:column="10">&lt;<pos:position pos:line="919" pos:column="14"/></operator> <literal type="number" pos:line="919" pos:column="12">256<pos:position pos:line="919" pos:column="15"/></literal> <operator pos:line="919" pos:column="16">&amp;&amp;<pos:position pos:line="919" pos:column="26"/></operator>
<cpp:endif pos:line="920" pos:column="1">#<cpp:directive pos:line="920" pos:column="2">endif<pos:position pos:line="920" pos:column="7"/></cpp:directive></cpp:endif>
       <operator pos:line="921" pos:column="8">(<pos:position pos:line="921" pos:column="9"/></operator><name><name pos:line="921" pos:column="9">md<pos:position pos:line="921" pos:column="11"/></name><operator pos:line="921" pos:column="11">-&gt;<pos:position pos:line="921" pos:column="16"/></operator><name pos:line="921" pos:column="13">ctypes<pos:position pos:line="921" pos:column="19"/></name><index pos:line="921" pos:column="19">[<expr><name pos:line="921" pos:column="20">c<pos:position pos:line="921" pos:column="21"/></name></expr>]<pos:position pos:line="921" pos:column="22"/></index></name> <operator pos:line="921" pos:column="23">&amp;<pos:position pos:line="921" pos:column="28"/></operator> <name pos:line="921" pos:column="25">ctype_digit<pos:position pos:line="921" pos:column="36"/></name><operator pos:line="921" pos:column="36">)<pos:position pos:line="921" pos:column="37"/></operator> <operator pos:line="921" pos:column="38">!=<pos:position pos:line="921" pos:column="40"/></operator> <literal type="number" pos:line="921" pos:column="41">0<pos:position pos:line="921" pos:column="42"/></literal></expr>
       )<pos:position pos:line="922" pos:column="9"/></condition><then pos:line="922" pos:column="9">
      <block type="pseudo"><expr_stmt><expr><call><name pos:line="923" pos:column="7">RRETURN<pos:position pos:line="923" pos:column="14"/></name><argument_list pos:line="923" pos:column="14">(<argument><expr><name pos:line="923" pos:column="15">MATCH_NOMATCH<pos:position pos:line="923" pos:column="28"/></name></expr></argument>)<pos:position pos:line="923" pos:column="29"/></argument_list></call></expr>;<pos:position pos:line="923" pos:column="30"/></expr_stmt></block></then></if>
    <expr_stmt><expr><name pos:line="924" pos:column="5">ecode<pos:position pos:line="924" pos:column="10"/></name><operator pos:line="924" pos:column="10">++<pos:position pos:line="924" pos:column="12"/></operator></expr>;<pos:position pos:line="924" pos:column="13"/></expr_stmt>
    <break pos:line="925" pos:column="5">break;<pos:position pos:line="925" pos:column="11"/></break>

    <case pos:line="927" pos:column="5">case <expr><name pos:line="927" pos:column="10">OP_DIGIT<pos:position pos:line="927" pos:column="18"/></name></expr>:<pos:position pos:line="927" pos:column="19"/></case>
    <if pos:line="928" pos:column="5">if <condition pos:line="928" pos:column="8">(<expr><name pos:line="928" pos:column="9">eptr<pos:position pos:line="928" pos:column="13"/></name> <operator pos:line="928" pos:column="14">&gt;=<pos:position pos:line="928" pos:column="19"/></operator> <name><name pos:line="928" pos:column="17">md<pos:position pos:line="928" pos:column="19"/></name><operator pos:line="928" pos:column="19">-&gt;<pos:position pos:line="928" pos:column="24"/></operator><name pos:line="928" pos:column="21">end_subject<pos:position pos:line="928" pos:column="32"/></name></name></expr>)<pos:position pos:line="928" pos:column="33"/></condition><then pos:line="928" pos:column="33"> <block type="pseudo"><expr_stmt><expr><call><name pos:line="928" pos:column="34">RRETURN<pos:position pos:line="928" pos:column="41"/></name><argument_list pos:line="928" pos:column="41">(<argument><expr><name pos:line="928" pos:column="42">MATCH_NOMATCH<pos:position pos:line="928" pos:column="55"/></name></expr></argument>)<pos:position pos:line="928" pos:column="56"/></argument_list></call></expr>;<pos:position pos:line="928" pos:column="57"/></expr_stmt></block></then></if>
    <expr_stmt><expr><call><name pos:line="929" pos:column="5">GETCHARINCTEST<pos:position pos:line="929" pos:column="19"/></name><argument_list pos:line="929" pos:column="19">(<argument><expr><name pos:line="929" pos:column="20">c<pos:position pos:line="929" pos:column="21"/></name></expr></argument>, <argument><expr><name pos:line="929" pos:column="23">eptr<pos:position pos:line="929" pos:column="27"/></name></expr></argument>)<pos:position pos:line="929" pos:column="28"/></argument_list></call></expr>;<pos:position pos:line="929" pos:column="29"/></expr_stmt>
    <if pos:line="930" pos:column="5">if <condition pos:line="930" pos:column="8">(
<cpp:ifdef pos:line="931" pos:column="1">#<cpp:directive pos:line="931" pos:column="2">ifdef<pos:position pos:line="931" pos:column="7"/></cpp:directive> <name pos:line="931" pos:column="8">SUPPORT_UTF8<pos:position pos:line="931" pos:column="20"/></name></cpp:ifdef>
       <expr><name pos:line="932" pos:column="8">c<pos:position pos:line="932" pos:column="9"/></name> <operator pos:line="932" pos:column="10">&gt;=<pos:position pos:line="932" pos:column="15"/></operator> <literal type="number" pos:line="932" pos:column="13">256<pos:position pos:line="932" pos:column="16"/></literal> <operator pos:line="932" pos:column="17">||<pos:position pos:line="932" pos:column="19"/></operator>
<cpp:endif pos:line="933" pos:column="1">#<cpp:directive pos:line="933" pos:column="2">endif<pos:position pos:line="933" pos:column="7"/></cpp:directive></cpp:endif>
       <operator pos:line="934" pos:column="8">(<pos:position pos:line="934" pos:column="9"/></operator><name><name pos:line="934" pos:column="9">md<pos:position pos:line="934" pos:column="11"/></name><operator pos:line="934" pos:column="11">-&gt;<pos:position pos:line="934" pos:column="16"/></operator><name pos:line="934" pos:column="13">ctypes<pos:position pos:line="934" pos:column="19"/></name><index pos:line="934" pos:column="19">[<expr><name pos:line="934" pos:column="20">c<pos:position pos:line="934" pos:column="21"/></name></expr>]<pos:position pos:line="934" pos:column="22"/></index></name> <operator pos:line="934" pos:column="23">&amp;<pos:position pos:line="934" pos:column="28"/></operator> <name pos:line="934" pos:column="25">ctype_digit<pos:position pos:line="934" pos:column="36"/></name><operator pos:line="934" pos:column="36">)<pos:position pos:line="934" pos:column="37"/></operator> <operator pos:line="934" pos:column="38">==<pos:position pos:line="934" pos:column="40"/></operator> <literal type="number" pos:line="934" pos:column="41">0<pos:position pos:line="934" pos:column="42"/></literal></expr>
       )<pos:position pos:line="935" pos:column="9"/></condition><then pos:line="935" pos:column="9">
      <block type="pseudo"><expr_stmt><expr><call><name pos:line="936" pos:column="7">RRETURN<pos:position pos:line="936" pos:column="14"/></name><argument_list pos:line="936" pos:column="14">(<argument><expr><name pos:line="936" pos:column="15">MATCH_NOMATCH<pos:position pos:line="936" pos:column="28"/></name></expr></argument>)<pos:position pos:line="936" pos:column="29"/></argument_list></call></expr>;<pos:position pos:line="936" pos:column="30"/></expr_stmt></block></then></if>
    <expr_stmt><expr><name pos:line="937" pos:column="5">ecode<pos:position pos:line="937" pos:column="10"/></name><operator pos:line="937" pos:column="10">++<pos:position pos:line="937" pos:column="12"/></operator></expr>;<pos:position pos:line="937" pos:column="13"/></expr_stmt>
    <break pos:line="938" pos:column="5">break;<pos:position pos:line="938" pos:column="11"/></break>

    <case pos:line="940" pos:column="5">case <expr><name pos:line="940" pos:column="10">OP_NOT_WHITESPACE<pos:position pos:line="940" pos:column="27"/></name></expr>:<pos:position pos:line="940" pos:column="28"/></case>
    <if pos:line="941" pos:column="5">if <condition pos:line="941" pos:column="8">(<expr><name pos:line="941" pos:column="9">eptr<pos:position pos:line="941" pos:column="13"/></name> <operator pos:line="941" pos:column="14">&gt;=<pos:position pos:line="941" pos:column="19"/></operator> <name><name pos:line="941" pos:column="17">md<pos:position pos:line="941" pos:column="19"/></name><operator pos:line="941" pos:column="19">-&gt;<pos:position pos:line="941" pos:column="24"/></operator><name pos:line="941" pos:column="21">end_subject<pos:position pos:line="941" pos:column="32"/></name></name></expr>)<pos:position pos:line="941" pos:column="33"/></condition><then pos:line="941" pos:column="33"> <block type="pseudo"><expr_stmt><expr><call><name pos:line="941" pos:column="34">RRETURN<pos:position pos:line="941" pos:column="41"/></name><argument_list pos:line="941" pos:column="41">(<argument><expr><name pos:line="941" pos:column="42">MATCH_NOMATCH<pos:position pos:line="941" pos:column="55"/></name></expr></argument>)<pos:position pos:line="941" pos:column="56"/></argument_list></call></expr>;<pos:position pos:line="941" pos:column="57"/></expr_stmt></block></then></if>
    <expr_stmt><expr><call><name pos:line="942" pos:column="5">GETCHARINCTEST<pos:position pos:line="942" pos:column="19"/></name><argument_list pos:line="942" pos:column="19">(<argument><expr><name pos:line="942" pos:column="20">c<pos:position pos:line="942" pos:column="21"/></name></expr></argument>, <argument><expr><name pos:line="942" pos:column="23">eptr<pos:position pos:line="942" pos:column="27"/></name></expr></argument>)<pos:position pos:line="942" pos:column="28"/></argument_list></call></expr>;<pos:position pos:line="942" pos:column="29"/></expr_stmt>
    <if pos:line="943" pos:column="5">if <condition pos:line="943" pos:column="8">(
<cpp:ifdef pos:line="944" pos:column="1">#<cpp:directive pos:line="944" pos:column="2">ifdef<pos:position pos:line="944" pos:column="7"/></cpp:directive> <name pos:line="944" pos:column="8">SUPPORT_UTF8<pos:position pos:line="944" pos:column="20"/></name></cpp:ifdef>
       <expr><name pos:line="945" pos:column="8">c<pos:position pos:line="945" pos:column="9"/></name> <operator pos:line="945" pos:column="10">&lt;<pos:position pos:line="945" pos:column="14"/></operator> <literal type="number" pos:line="945" pos:column="12">256<pos:position pos:line="945" pos:column="15"/></literal> <operator pos:line="945" pos:column="16">&amp;&amp;<pos:position pos:line="945" pos:column="26"/></operator>
<cpp:endif pos:line="946" pos:column="1">#<cpp:directive pos:line="946" pos:column="2">endif<pos:position pos:line="946" pos:column="7"/></cpp:directive></cpp:endif>
       <operator pos:line="947" pos:column="8">(<pos:position pos:line="947" pos:column="9"/></operator><name><name pos:line="947" pos:column="9">md<pos:position pos:line="947" pos:column="11"/></name><operator pos:line="947" pos:column="11">-&gt;<pos:position pos:line="947" pos:column="16"/></operator><name pos:line="947" pos:column="13">ctypes<pos:position pos:line="947" pos:column="19"/></name><index pos:line="947" pos:column="19">[<expr><name pos:line="947" pos:column="20">c<pos:position pos:line="947" pos:column="21"/></name></expr>]<pos:position pos:line="947" pos:column="22"/></index></name> <operator pos:line="947" pos:column="23">&amp;<pos:position pos:line="947" pos:column="28"/></operator> <name pos:line="947" pos:column="25">ctype_space<pos:position pos:line="947" pos:column="36"/></name><operator pos:line="947" pos:column="36">)<pos:position pos:line="947" pos:column="37"/></operator> <operator pos:line="947" pos:column="38">!=<pos:position pos:line="947" pos:column="40"/></operator> <literal type="number" pos:line="947" pos:column="41">0<pos:position pos:line="947" pos:column="42"/></literal></expr>
       )<pos:position pos:line="948" pos:column="9"/></condition><then pos:line="948" pos:column="9">
      <block type="pseudo"><expr_stmt><expr><call><name pos:line="949" pos:column="7">RRETURN<pos:position pos:line="949" pos:column="14"/></name><argument_list pos:line="949" pos:column="14">(<argument><expr><name pos:line="949" pos:column="15">MATCH_NOMATCH<pos:position pos:line="949" pos:column="28"/></name></expr></argument>)<pos:position pos:line="949" pos:column="29"/></argument_list></call></expr>;<pos:position pos:line="949" pos:column="30"/></expr_stmt></block></then></if>
    <expr_stmt><expr><name pos:line="950" pos:column="5">ecode<pos:position pos:line="950" pos:column="10"/></name><operator pos:line="950" pos:column="10">++<pos:position pos:line="950" pos:column="12"/></operator></expr>;<pos:position pos:line="950" pos:column="13"/></expr_stmt>
    <break pos:line="951" pos:column="5">break;<pos:position pos:line="951" pos:column="11"/></break>

    <case pos:line="953" pos:column="5">case <expr><name pos:line="953" pos:column="10">OP_WHITESPACE<pos:position pos:line="953" pos:column="23"/></name></expr>:<pos:position pos:line="953" pos:column="24"/></case>
    <if pos:line="954" pos:column="5">if <condition pos:line="954" pos:column="8">(<expr><name pos:line="954" pos:column="9">eptr<pos:position pos:line="954" pos:column="13"/></name> <operator pos:line="954" pos:column="14">&gt;=<pos:position pos:line="954" pos:column="19"/></operator> <name><name pos:line="954" pos:column="17">md<pos:position pos:line="954" pos:column="19"/></name><operator pos:line="954" pos:column="19">-&gt;<pos:position pos:line="954" pos:column="24"/></operator><name pos:line="954" pos:column="21">end_subject<pos:position pos:line="954" pos:column="32"/></name></name></expr>)<pos:position pos:line="954" pos:column="33"/></condition><then pos:line="954" pos:column="33"> <block type="pseudo"><expr_stmt><expr><call><name pos:line="954" pos:column="34">RRETURN<pos:position pos:line="954" pos:column="41"/></name><argument_list pos:line="954" pos:column="41">(<argument><expr><name pos:line="954" pos:column="42">MATCH_NOMATCH<pos:position pos:line="954" pos:column="55"/></name></expr></argument>)<pos:position pos:line="954" pos:column="56"/></argument_list></call></expr>;<pos:position pos:line="954" pos:column="57"/></expr_stmt></block></then></if>
    <expr_stmt><expr><call><name pos:line="955" pos:column="5">GETCHARINCTEST<pos:position pos:line="955" pos:column="19"/></name><argument_list pos:line="955" pos:column="19">(<argument><expr><name pos:line="955" pos:column="20">c<pos:position pos:line="955" pos:column="21"/></name></expr></argument>, <argument><expr><name pos:line="955" pos:column="23">eptr<pos:position pos:line="955" pos:column="27"/></name></expr></argument>)<pos:position pos:line="955" pos:column="28"/></argument_list></call></expr>;<pos:position pos:line="955" pos:column="29"/></expr_stmt>
    <if pos:line="956" pos:column="5">if <condition pos:line="956" pos:column="8">(
<cpp:ifdef pos:line="957" pos:column="1">#<cpp:directive pos:line="957" pos:column="2">ifdef<pos:position pos:line="957" pos:column="7"/></cpp:directive> <name pos:line="957" pos:column="8">SUPPORT_UTF8<pos:position pos:line="957" pos:column="20"/></name></cpp:ifdef>
       <expr><name pos:line="958" pos:column="8">c<pos:position pos:line="958" pos:column="9"/></name> <operator pos:line="958" pos:column="10">&gt;=<pos:position pos:line="958" pos:column="15"/></operator> <literal type="number" pos:line="958" pos:column="13">256<pos:position pos:line="958" pos:column="16"/></literal> <operator pos:line="958" pos:column="17">||<pos:position pos:line="958" pos:column="19"/></operator>
<cpp:endif pos:line="959" pos:column="1">#<cpp:directive pos:line="959" pos:column="2">endif<pos:position pos:line="959" pos:column="7"/></cpp:directive></cpp:endif>
       <operator pos:line="960" pos:column="8">(<pos:position pos:line="960" pos:column="9"/></operator><name><name pos:line="960" pos:column="9">md<pos:position pos:line="960" pos:column="11"/></name><operator pos:line="960" pos:column="11">-&gt;<pos:position pos:line="960" pos:column="16"/></operator><name pos:line="960" pos:column="13">ctypes<pos:position pos:line="960" pos:column="19"/></name><index pos:line="960" pos:column="19">[<expr><name pos:line="960" pos:column="20">c<pos:position pos:line="960" pos:column="21"/></name></expr>]<pos:position pos:line="960" pos:column="22"/></index></name> <operator pos:line="960" pos:column="23">&amp;<pos:position pos:line="960" pos:column="28"/></operator> <name pos:line="960" pos:column="25">ctype_space<pos:position pos:line="960" pos:column="36"/></name><operator pos:line="960" pos:column="36">)<pos:position pos:line="960" pos:column="37"/></operator> <operator pos:line="960" pos:column="38">==<pos:position pos:line="960" pos:column="40"/></operator> <literal type="number" pos:line="960" pos:column="41">0<pos:position pos:line="960" pos:column="42"/></literal></expr>
       )<pos:position pos:line="961" pos:column="9"/></condition><then pos:line="961" pos:column="9">
      <block type="pseudo"><expr_stmt><expr><call><name pos:line="962" pos:column="7">RRETURN<pos:position pos:line="962" pos:column="14"/></name><argument_list pos:line="962" pos:column="14">(<argument><expr><name pos:line="962" pos:column="15">MATCH_NOMATCH<pos:position pos:line="962" pos:column="28"/></name></expr></argument>)<pos:position pos:line="962" pos:column="29"/></argument_list></call></expr>;<pos:position pos:line="962" pos:column="30"/></expr_stmt></block></then></if>
    <expr_stmt><expr><name pos:line="963" pos:column="5">ecode<pos:position pos:line="963" pos:column="10"/></name><operator pos:line="963" pos:column="10">++<pos:position pos:line="963" pos:column="12"/></operator></expr>;<pos:position pos:line="963" pos:column="13"/></expr_stmt>
    <break pos:line="964" pos:column="5">break;<pos:position pos:line="964" pos:column="11"/></break>

    <case pos:line="966" pos:column="5">case <expr><name pos:line="966" pos:column="10">OP_NOT_WORDCHAR<pos:position pos:line="966" pos:column="25"/></name></expr>:<pos:position pos:line="966" pos:column="26"/></case>
    <if pos:line="967" pos:column="5">if <condition pos:line="967" pos:column="8">(<expr><name pos:line="967" pos:column="9">eptr<pos:position pos:line="967" pos:column="13"/></name> <operator pos:line="967" pos:column="14">&gt;=<pos:position pos:line="967" pos:column="19"/></operator> <name><name pos:line="967" pos:column="17">md<pos:position pos:line="967" pos:column="19"/></name><operator pos:line="967" pos:column="19">-&gt;<pos:position pos:line="967" pos:column="24"/></operator><name pos:line="967" pos:column="21">end_subject<pos:position pos:line="967" pos:column="32"/></name></name></expr>)<pos:position pos:line="967" pos:column="33"/></condition><then pos:line="967" pos:column="33"> <block type="pseudo"><expr_stmt><expr><call><name pos:line="967" pos:column="34">RRETURN<pos:position pos:line="967" pos:column="41"/></name><argument_list pos:line="967" pos:column="41">(<argument><expr><name pos:line="967" pos:column="42">MATCH_NOMATCH<pos:position pos:line="967" pos:column="55"/></name></expr></argument>)<pos:position pos:line="967" pos:column="56"/></argument_list></call></expr>;<pos:position pos:line="967" pos:column="57"/></expr_stmt></block></then></if>
    <expr_stmt><expr><call><name pos:line="968" pos:column="5">GETCHARINCTEST<pos:position pos:line="968" pos:column="19"/></name><argument_list pos:line="968" pos:column="19">(<argument><expr><name pos:line="968" pos:column="20">c<pos:position pos:line="968" pos:column="21"/></name></expr></argument>, <argument><expr><name pos:line="968" pos:column="23">eptr<pos:position pos:line="968" pos:column="27"/></name></expr></argument>)<pos:position pos:line="968" pos:column="28"/></argument_list></call></expr>;<pos:position pos:line="968" pos:column="29"/></expr_stmt>
    <if pos:line="969" pos:column="5">if <condition pos:line="969" pos:column="8">(
<cpp:ifdef pos:line="970" pos:column="1">#<cpp:directive pos:line="970" pos:column="2">ifdef<pos:position pos:line="970" pos:column="7"/></cpp:directive> <name pos:line="970" pos:column="8">SUPPORT_UTF8<pos:position pos:line="970" pos:column="20"/></name></cpp:ifdef>
       <expr><name pos:line="971" pos:column="8">c<pos:position pos:line="971" pos:column="9"/></name> <operator pos:line="971" pos:column="10">&lt;<pos:position pos:line="971" pos:column="14"/></operator> <literal type="number" pos:line="971" pos:column="12">256<pos:position pos:line="971" pos:column="15"/></literal> <operator pos:line="971" pos:column="16">&amp;&amp;<pos:position pos:line="971" pos:column="26"/></operator>
<cpp:endif pos:line="972" pos:column="1">#<cpp:directive pos:line="972" pos:column="2">endif<pos:position pos:line="972" pos:column="7"/></cpp:directive></cpp:endif>
       <operator pos:line="973" pos:column="8">(<pos:position pos:line="973" pos:column="9"/></operator><name><name pos:line="973" pos:column="9">md<pos:position pos:line="973" pos:column="11"/></name><operator pos:line="973" pos:column="11">-&gt;<pos:position pos:line="973" pos:column="16"/></operator><name pos:line="973" pos:column="13">ctypes<pos:position pos:line="973" pos:column="19"/></name><index pos:line="973" pos:column="19">[<expr><name pos:line="973" pos:column="20">c<pos:position pos:line="973" pos:column="21"/></name></expr>]<pos:position pos:line="973" pos:column="22"/></index></name> <operator pos:line="973" pos:column="23">&amp;<pos:position pos:line="973" pos:column="28"/></operator> <name pos:line="973" pos:column="25">ctype_word<pos:position pos:line="973" pos:column="35"/></name><operator pos:line="973" pos:column="35">)<pos:position pos:line="973" pos:column="36"/></operator> <operator pos:line="973" pos:column="37">!=<pos:position pos:line="973" pos:column="39"/></operator> <literal type="number" pos:line="973" pos:column="40">0<pos:position pos:line="973" pos:column="41"/></literal></expr>
       )<pos:position pos:line="974" pos:column="9"/></condition><then pos:line="974" pos:column="9">
      <block type="pseudo"><expr_stmt><expr><call><name pos:line="975" pos:column="7">RRETURN<pos:position pos:line="975" pos:column="14"/></name><argument_list pos:line="975" pos:column="14">(<argument><expr><name pos:line="975" pos:column="15">MATCH_NOMATCH<pos:position pos:line="975" pos:column="28"/></name></expr></argument>)<pos:position pos:line="975" pos:column="29"/></argument_list></call></expr>;<pos:position pos:line="975" pos:column="30"/></expr_stmt></block></then></if>
    <expr_stmt><expr><name pos:line="976" pos:column="5">ecode<pos:position pos:line="976" pos:column="10"/></name><operator pos:line="976" pos:column="10">++<pos:position pos:line="976" pos:column="12"/></operator></expr>;<pos:position pos:line="976" pos:column="13"/></expr_stmt>
    <break pos:line="977" pos:column="5">break;<pos:position pos:line="977" pos:column="11"/></break>

    <case pos:line="979" pos:column="5">case <expr><name pos:line="979" pos:column="10">OP_WORDCHAR<pos:position pos:line="979" pos:column="21"/></name></expr>:<pos:position pos:line="979" pos:column="22"/></case>
    <if pos:line="980" pos:column="5">if <condition pos:line="980" pos:column="8">(<expr><name pos:line="980" pos:column="9">eptr<pos:position pos:line="980" pos:column="13"/></name> <operator pos:line="980" pos:column="14">&gt;=<pos:position pos:line="980" pos:column="19"/></operator> <name><name pos:line="980" pos:column="17">md<pos:position pos:line="980" pos:column="19"/></name><operator pos:line="980" pos:column="19">-&gt;<pos:position pos:line="980" pos:column="24"/></operator><name pos:line="980" pos:column="21">end_subject<pos:position pos:line="980" pos:column="32"/></name></name></expr>)<pos:position pos:line="980" pos:column="33"/></condition><then pos:line="980" pos:column="33"> <block type="pseudo"><expr_stmt><expr><call><name pos:line="980" pos:column="34">RRETURN<pos:position pos:line="980" pos:column="41"/></name><argument_list pos:line="980" pos:column="41">(<argument><expr><name pos:line="980" pos:column="42">MATCH_NOMATCH<pos:position pos:line="980" pos:column="55"/></name></expr></argument>)<pos:position pos:line="980" pos:column="56"/></argument_list></call></expr>;<pos:position pos:line="980" pos:column="57"/></expr_stmt></block></then></if>
    <expr_stmt><expr><call><name pos:line="981" pos:column="5">GETCHARINCTEST<pos:position pos:line="981" pos:column="19"/></name><argument_list pos:line="981" pos:column="19">(<argument><expr><name pos:line="981" pos:column="20">c<pos:position pos:line="981" pos:column="21"/></name></expr></argument>, <argument><expr><name pos:line="981" pos:column="23">eptr<pos:position pos:line="981" pos:column="27"/></name></expr></argument>)<pos:position pos:line="981" pos:column="28"/></argument_list></call></expr>;<pos:position pos:line="981" pos:column="29"/></expr_stmt>
    <if pos:line="982" pos:column="5">if <condition pos:line="982" pos:column="8">(
<cpp:ifdef pos:line="983" pos:column="1">#<cpp:directive pos:line="983" pos:column="2">ifdef<pos:position pos:line="983" pos:column="7"/></cpp:directive> <name pos:line="983" pos:column="8">SUPPORT_UTF8<pos:position pos:line="983" pos:column="20"/></name></cpp:ifdef>
       <expr><name pos:line="984" pos:column="8">c<pos:position pos:line="984" pos:column="9"/></name> <operator pos:line="984" pos:column="10">&gt;=<pos:position pos:line="984" pos:column="15"/></operator> <literal type="number" pos:line="984" pos:column="13">256<pos:position pos:line="984" pos:column="16"/></literal> <operator pos:line="984" pos:column="17">||<pos:position pos:line="984" pos:column="19"/></operator>
<cpp:endif pos:line="985" pos:column="1">#<cpp:directive pos:line="985" pos:column="2">endif<pos:position pos:line="985" pos:column="7"/></cpp:directive></cpp:endif>
       <operator pos:line="986" pos:column="8">(<pos:position pos:line="986" pos:column="9"/></operator><name><name pos:line="986" pos:column="9">md<pos:position pos:line="986" pos:column="11"/></name><operator pos:line="986" pos:column="11">-&gt;<pos:position pos:line="986" pos:column="16"/></operator><name pos:line="986" pos:column="13">ctypes<pos:position pos:line="986" pos:column="19"/></name><index pos:line="986" pos:column="19">[<expr><name pos:line="986" pos:column="20">c<pos:position pos:line="986" pos:column="21"/></name></expr>]<pos:position pos:line="986" pos:column="22"/></index></name> <operator pos:line="986" pos:column="23">&amp;<pos:position pos:line="986" pos:column="28"/></operator> <name pos:line="986" pos:column="25">ctype_word<pos:position pos:line="986" pos:column="35"/></name><operator pos:line="986" pos:column="35">)<pos:position pos:line="986" pos:column="36"/></operator> <operator pos:line="986" pos:column="37">==<pos:position pos:line="986" pos:column="39"/></operator> <literal type="number" pos:line="986" pos:column="40">0<pos:position pos:line="986" pos:column="41"/></literal></expr>
       )<pos:position pos:line="987" pos:column="9"/></condition><then pos:line="987" pos:column="9">
      <block type="pseudo"><expr_stmt><expr><call><name pos:line="988" pos:column="7">RRETURN<pos:position pos:line="988" pos:column="14"/></name><argument_list pos:line="988" pos:column="14">(<argument><expr><name pos:line="988" pos:column="15">MATCH_NOMATCH<pos:position pos:line="988" pos:column="28"/></name></expr></argument>)<pos:position pos:line="988" pos:column="29"/></argument_list></call></expr>;<pos:position pos:line="988" pos:column="30"/></expr_stmt></block></then></if>
    <expr_stmt><expr><name pos:line="989" pos:column="5">ecode<pos:position pos:line="989" pos:column="10"/></name><operator pos:line="989" pos:column="10">++<pos:position pos:line="989" pos:column="12"/></operator></expr>;<pos:position pos:line="989" pos:column="13"/></expr_stmt>
    <break pos:line="990" pos:column="5">break;<pos:position pos:line="990" pos:column="11"/></break>

<cpp:ifdef pos:line="992" pos:column="1">#<cpp:directive pos:line="992" pos:column="2">ifdef<pos:position pos:line="992" pos:column="7"/></cpp:directive> <name pos:line="992" pos:column="8">SUPPORT_UCP<pos:position pos:line="992" pos:column="19"/></name></cpp:ifdef>
    <comment type="block" pos:line="993" pos:column="5">/* Check the next character by Unicode property. We will get here only
    if the support is in the binary; otherwise a compile-time error occurs. */</comment>

    <case pos:line="996" pos:column="5">case <expr><name pos:line="996" pos:column="10">OP_PROP<pos:position pos:line="996" pos:column="17"/></name></expr>:<pos:position pos:line="996" pos:column="18"/></case>
    <case pos:line="997" pos:column="5">case <expr><name pos:line="997" pos:column="10">OP_NOTPROP<pos:position pos:line="997" pos:column="20"/></name></expr>:<pos:position pos:line="997" pos:column="21"/></case>
    <if pos:line="998" pos:column="5">if <condition pos:line="998" pos:column="8">(<expr><name pos:line="998" pos:column="9">eptr<pos:position pos:line="998" pos:column="13"/></name> <operator pos:line="998" pos:column="14">&gt;=<pos:position pos:line="998" pos:column="19"/></operator> <name><name pos:line="998" pos:column="17">md<pos:position pos:line="998" pos:column="19"/></name><operator pos:line="998" pos:column="19">-&gt;<pos:position pos:line="998" pos:column="24"/></operator><name pos:line="998" pos:column="21">end_subject<pos:position pos:line="998" pos:column="32"/></name></name></expr>)<pos:position pos:line="998" pos:column="33"/></condition><then pos:line="998" pos:column="33"> <block type="pseudo"><expr_stmt><expr><call><name pos:line="998" pos:column="34">RRETURN<pos:position pos:line="998" pos:column="41"/></name><argument_list pos:line="998" pos:column="41">(<argument><expr><name pos:line="998" pos:column="42">MATCH_NOMATCH<pos:position pos:line="998" pos:column="55"/></name></expr></argument>)<pos:position pos:line="998" pos:column="56"/></argument_list></call></expr>;<pos:position pos:line="998" pos:column="57"/></expr_stmt></block></then></if>
    <expr_stmt><expr><call><name pos:line="999" pos:column="5">GETCHARINCTEST<pos:position pos:line="999" pos:column="19"/></name><argument_list pos:line="999" pos:column="19">(<argument><expr><name pos:line="999" pos:column="20">c<pos:position pos:line="999" pos:column="21"/></name></expr></argument>, <argument><expr><name pos:line="999" pos:column="23">eptr<pos:position pos:line="999" pos:column="27"/></name></expr></argument>)<pos:position pos:line="999" pos:column="28"/></argument_list></call></expr>;<pos:position pos:line="999" pos:column="29"/></expr_stmt>
      <block pos:line="1000" pos:column="7">{
      <decl_stmt><decl><type><name pos:line="1001" pos:column="7">int<pos:position pos:line="1001" pos:column="10"/></name></type> <name pos:line="1001" pos:column="11">chartype<pos:position pos:line="1001" pos:column="19"/></name></decl>, <decl><type ref="prev"/><name pos:line="1001" pos:column="21">rqdtype<pos:position pos:line="1001" pos:column="28"/></name></decl>;<pos:position pos:line="1001" pos:column="29"/></decl_stmt>
      <decl_stmt><decl><type><name pos:line="1002" pos:column="7">int<pos:position pos:line="1002" pos:column="10"/></name></type> <name pos:line="1002" pos:column="11">othercase<pos:position pos:line="1002" pos:column="20"/></name></decl>;<pos:position pos:line="1002" pos:column="21"/></decl_stmt>
      <decl_stmt><decl><type><name pos:line="1003" pos:column="7">int<pos:position pos:line="1003" pos:column="10"/></name></type> <name pos:line="1003" pos:column="11">category<pos:position pos:line="1003" pos:column="19"/></name> <init pos:line="1003" pos:column="20">= <expr><call><name pos:line="1003" pos:column="22">ucp_findchar<pos:position pos:line="1003" pos:column="34"/></name><argument_list pos:line="1003" pos:column="34">(<argument><expr><name pos:line="1003" pos:column="35">c<pos:position pos:line="1003" pos:column="36"/></name></expr></argument>, <argument><expr><operator pos:line="1003" pos:column="38">&amp;<pos:position pos:line="1003" pos:column="43"/></operator><name pos:line="1003" pos:column="39">chartype<pos:position pos:line="1003" pos:column="47"/></name></expr></argument>, <argument><expr><operator pos:line="1003" pos:column="49">&amp;<pos:position pos:line="1003" pos:column="54"/></operator><name pos:line="1003" pos:column="50">othercase<pos:position pos:line="1003" pos:column="59"/></name></expr></argument>)<pos:position pos:line="1003" pos:column="60"/></argument_list></call></expr></init></decl>;<pos:position pos:line="1003" pos:column="61"/></decl_stmt>

      <expr_stmt><expr><name pos:line="1005" pos:column="7">rqdtype<pos:position pos:line="1005" pos:column="14"/></name> <operator pos:line="1005" pos:column="15">=<pos:position pos:line="1005" pos:column="16"/></operator> <operator pos:line="1005" pos:column="17">*<pos:position pos:line="1005" pos:column="18"/></operator><operator pos:line="1005" pos:column="18">(<pos:position pos:line="1005" pos:column="19"/></operator><operator pos:line="1005" pos:column="19">++<pos:position pos:line="1005" pos:column="21"/></operator><name pos:line="1005" pos:column="21">ecode<pos:position pos:line="1005" pos:column="26"/></name><operator pos:line="1005" pos:column="26">)<pos:position pos:line="1005" pos:column="27"/></operator></expr>;<pos:position pos:line="1005" pos:column="28"/></expr_stmt>
      <expr_stmt><expr><name pos:line="1006" pos:column="7">ecode<pos:position pos:line="1006" pos:column="12"/></name><operator pos:line="1006" pos:column="12">++<pos:position pos:line="1006" pos:column="14"/></operator></expr>;<pos:position pos:line="1006" pos:column="15"/></expr_stmt>

      <if pos:line="1008" pos:column="7">if <condition pos:line="1008" pos:column="10">(<expr><name pos:line="1008" pos:column="11">rqdtype<pos:position pos:line="1008" pos:column="18"/></name> <operator pos:line="1008" pos:column="19">&gt;=<pos:position pos:line="1008" pos:column="24"/></operator> <literal type="number" pos:line="1008" pos:column="22">128<pos:position pos:line="1008" pos:column="25"/></literal></expr>)<pos:position pos:line="1008" pos:column="26"/></condition><then pos:line="1008" pos:column="26">
        <block pos:line="1009" pos:column="9">{
        <if pos:line="1010" pos:column="9">if <condition pos:line="1010" pos:column="12">(<expr><operator pos:line="1010" pos:column="13">(<pos:position pos:line="1010" pos:column="14"/></operator><name pos:line="1010" pos:column="14">rqdtype<pos:position pos:line="1010" pos:column="21"/></name> <operator pos:line="1010" pos:column="22">-<pos:position pos:line="1010" pos:column="23"/></operator> <literal type="number" pos:line="1010" pos:column="24">128<pos:position pos:line="1010" pos:column="27"/></literal> <operator pos:line="1010" pos:column="28">!=<pos:position pos:line="1010" pos:column="30"/></operator> <name pos:line="1010" pos:column="31">category<pos:position pos:line="1010" pos:column="39"/></name><operator pos:line="1010" pos:column="39">)<pos:position pos:line="1010" pos:column="40"/></operator> <operator pos:line="1010" pos:column="41">==<pos:position pos:line="1010" pos:column="43"/></operator> <operator pos:line="1010" pos:column="44">(<pos:position pos:line="1010" pos:column="45"/></operator><name pos:line="1010" pos:column="45">op<pos:position pos:line="1010" pos:column="47"/></name> <operator pos:line="1010" pos:column="48">==<pos:position pos:line="1010" pos:column="50"/></operator> <name pos:line="1010" pos:column="51">OP_PROP<pos:position pos:line="1010" pos:column="58"/></name><operator pos:line="1010" pos:column="58">)<pos:position pos:line="1010" pos:column="59"/></operator></expr>)<pos:position pos:line="1010" pos:column="60"/></condition><then pos:line="1010" pos:column="60">
          <block type="pseudo"><expr_stmt><expr><call><name pos:line="1011" pos:column="11">RRETURN<pos:position pos:line="1011" pos:column="18"/></name><argument_list pos:line="1011" pos:column="18">(<argument><expr><name pos:line="1011" pos:column="19">MATCH_NOMATCH<pos:position pos:line="1011" pos:column="32"/></name></expr></argument>)<pos:position pos:line="1011" pos:column="33"/></argument_list></call></expr>;<pos:position pos:line="1011" pos:column="34"/></expr_stmt></block></then></if>
        }<pos:position pos:line="1012" pos:column="10"/></block></then>
      <else pos:line="1013" pos:column="7">else
        <block pos:line="1014" pos:column="9">{
        <if pos:line="1015" pos:column="9">if <condition pos:line="1015" pos:column="12">(<expr><operator pos:line="1015" pos:column="13">(<pos:position pos:line="1015" pos:column="14"/></operator><name pos:line="1015" pos:column="14">rqdtype<pos:position pos:line="1015" pos:column="21"/></name> <operator pos:line="1015" pos:column="22">!=<pos:position pos:line="1015" pos:column="24"/></operator> <name pos:line="1015" pos:column="25">chartype<pos:position pos:line="1015" pos:column="33"/></name><operator pos:line="1015" pos:column="33">)<pos:position pos:line="1015" pos:column="34"/></operator> <operator pos:line="1015" pos:column="35">==<pos:position pos:line="1015" pos:column="37"/></operator> <operator pos:line="1015" pos:column="38">(<pos:position pos:line="1015" pos:column="39"/></operator><name pos:line="1015" pos:column="39">op<pos:position pos:line="1015" pos:column="41"/></name> <operator pos:line="1015" pos:column="42">==<pos:position pos:line="1015" pos:column="44"/></operator> <name pos:line="1015" pos:column="45">OP_PROP<pos:position pos:line="1015" pos:column="52"/></name><operator pos:line="1015" pos:column="52">)<pos:position pos:line="1015" pos:column="53"/></operator></expr>)<pos:position pos:line="1015" pos:column="54"/></condition><then pos:line="1015" pos:column="54">
          <block type="pseudo"><expr_stmt><expr><call><name pos:line="1016" pos:column="11">RRETURN<pos:position pos:line="1016" pos:column="18"/></name><argument_list pos:line="1016" pos:column="18">(<argument><expr><name pos:line="1016" pos:column="19">MATCH_NOMATCH<pos:position pos:line="1016" pos:column="32"/></name></expr></argument>)<pos:position pos:line="1016" pos:column="33"/></argument_list></call></expr>;<pos:position pos:line="1016" pos:column="34"/></expr_stmt></block></then></if>
        }<pos:position pos:line="1017" pos:column="10"/></block></else></if>
      }<pos:position pos:line="1018" pos:column="8"/></block>
    <break pos:line="1019" pos:column="5">break;<pos:position pos:line="1019" pos:column="11"/></break>

    <comment type="block" pos:line="1021" pos:column="5">/* Match an extended Unicode sequence. We will get here only if the support
    is in the binary; otherwise a compile-time error occurs. */</comment>

    <case pos:line="1024" pos:column="5">case <expr><name pos:line="1024" pos:column="10">OP_EXTUNI<pos:position pos:line="1024" pos:column="19"/></name></expr>:<pos:position pos:line="1024" pos:column="20"/></case>
    <if pos:line="1025" pos:column="5">if <condition pos:line="1025" pos:column="8">(<expr><name pos:line="1025" pos:column="9">eptr<pos:position pos:line="1025" pos:column="13"/></name> <operator pos:line="1025" pos:column="14">&gt;=<pos:position pos:line="1025" pos:column="19"/></operator> <name><name pos:line="1025" pos:column="17">md<pos:position pos:line="1025" pos:column="19"/></name><operator pos:line="1025" pos:column="19">-&gt;<pos:position pos:line="1025" pos:column="24"/></operator><name pos:line="1025" pos:column="21">end_subject<pos:position pos:line="1025" pos:column="32"/></name></name></expr>)<pos:position pos:line="1025" pos:column="33"/></condition><then pos:line="1025" pos:column="33"> <block type="pseudo"><expr_stmt><expr><call><name pos:line="1025" pos:column="34">RRETURN<pos:position pos:line="1025" pos:column="41"/></name><argument_list pos:line="1025" pos:column="41">(<argument><expr><name pos:line="1025" pos:column="42">MATCH_NOMATCH<pos:position pos:line="1025" pos:column="55"/></name></expr></argument>)<pos:position pos:line="1025" pos:column="56"/></argument_list></call></expr>;<pos:position pos:line="1025" pos:column="57"/></expr_stmt></block></then></if>
    <expr_stmt><expr><call><name pos:line="1026" pos:column="5">GETCHARINCTEST<pos:position pos:line="1026" pos:column="19"/></name><argument_list pos:line="1026" pos:column="19">(<argument><expr><name pos:line="1026" pos:column="20">c<pos:position pos:line="1026" pos:column="21"/></name></expr></argument>, <argument><expr><name pos:line="1026" pos:column="23">eptr<pos:position pos:line="1026" pos:column="27"/></name></expr></argument>)<pos:position pos:line="1026" pos:column="28"/></argument_list></call></expr>;<pos:position pos:line="1026" pos:column="29"/></expr_stmt>
      <block pos:line="1027" pos:column="7">{
      <decl_stmt><decl><type><name pos:line="1028" pos:column="7">int<pos:position pos:line="1028" pos:column="10"/></name></type> <name pos:line="1028" pos:column="11">chartype<pos:position pos:line="1028" pos:column="19"/></name></decl>;<pos:position pos:line="1028" pos:column="20"/></decl_stmt>
      <decl_stmt><decl><type><name pos:line="1029" pos:column="7">int<pos:position pos:line="1029" pos:column="10"/></name></type> <name pos:line="1029" pos:column="11">othercase<pos:position pos:line="1029" pos:column="20"/></name></decl>;<pos:position pos:line="1029" pos:column="21"/></decl_stmt>
      <decl_stmt><decl><type><name pos:line="1030" pos:column="7">int<pos:position pos:line="1030" pos:column="10"/></name></type> <name pos:line="1030" pos:column="11">category<pos:position pos:line="1030" pos:column="19"/></name> <init pos:line="1030" pos:column="20">= <expr><call><name pos:line="1030" pos:column="22">ucp_findchar<pos:position pos:line="1030" pos:column="34"/></name><argument_list pos:line="1030" pos:column="34">(<argument><expr><name pos:line="1030" pos:column="35">c<pos:position pos:line="1030" pos:column="36"/></name></expr></argument>, <argument><expr><operator pos:line="1030" pos:column="38">&amp;<pos:position pos:line="1030" pos:column="43"/></operator><name pos:line="1030" pos:column="39">chartype<pos:position pos:line="1030" pos:column="47"/></name></expr></argument>, <argument><expr><operator pos:line="1030" pos:column="49">&amp;<pos:position pos:line="1030" pos:column="54"/></operator><name pos:line="1030" pos:column="50">othercase<pos:position pos:line="1030" pos:column="59"/></name></expr></argument>)<pos:position pos:line="1030" pos:column="60"/></argument_list></call></expr></init></decl>;<pos:position pos:line="1030" pos:column="61"/></decl_stmt>
      <if pos:line="1031" pos:column="7">if <condition pos:line="1031" pos:column="10">(<expr><name pos:line="1031" pos:column="11">category<pos:position pos:line="1031" pos:column="19"/></name> <operator pos:line="1031" pos:column="20">==<pos:position pos:line="1031" pos:column="22"/></operator> <name pos:line="1031" pos:column="23">ucp_M<pos:position pos:line="1031" pos:column="28"/></name></expr>)<pos:position pos:line="1031" pos:column="29"/></condition><then pos:line="1031" pos:column="29"> <block type="pseudo"><expr_stmt><expr><call><name pos:line="1031" pos:column="30">RRETURN<pos:position pos:line="1031" pos:column="37"/></name><argument_list pos:line="1031" pos:column="37">(<argument><expr><name pos:line="1031" pos:column="38">MATCH_NOMATCH<pos:position pos:line="1031" pos:column="51"/></name></expr></argument>)<pos:position pos:line="1031" pos:column="52"/></argument_list></call></expr>;<pos:position pos:line="1031" pos:column="53"/></expr_stmt></block></then></if>
      <while pos:line="1032" pos:column="7">while <condition pos:line="1032" pos:column="13">(<expr><name pos:line="1032" pos:column="14">eptr<pos:position pos:line="1032" pos:column="18"/></name> <operator pos:line="1032" pos:column="19">&lt;<pos:position pos:line="1032" pos:column="23"/></operator> <name><name pos:line="1032" pos:column="21">md<pos:position pos:line="1032" pos:column="23"/></name><operator pos:line="1032" pos:column="23">-&gt;<pos:position pos:line="1032" pos:column="28"/></operator><name pos:line="1032" pos:column="25">end_subject<pos:position pos:line="1032" pos:column="36"/></name></name></expr>)<pos:position pos:line="1032" pos:column="37"/></condition>
        <block pos:line="1033" pos:column="9">{
        <decl_stmt><decl><type><name pos:line="1034" pos:column="9">int<pos:position pos:line="1034" pos:column="12"/></name></type> <name pos:line="1034" pos:column="13">len<pos:position pos:line="1034" pos:column="16"/></name> <init pos:line="1034" pos:column="17">= <expr><literal type="number" pos:line="1034" pos:column="19">1<pos:position pos:line="1034" pos:column="20"/></literal></expr></init></decl>;<pos:position pos:line="1034" pos:column="21"/></decl_stmt>
        <if pos:line="1035" pos:column="9">if <condition pos:line="1035" pos:column="12">(<expr><operator pos:line="1035" pos:column="13">!<pos:position pos:line="1035" pos:column="14"/></operator><name><name pos:line="1035" pos:column="14">md<pos:position pos:line="1035" pos:column="16"/></name><operator pos:line="1035" pos:column="16">-&gt;<pos:position pos:line="1035" pos:column="21"/></operator><name pos:line="1035" pos:column="18">utf8<pos:position pos:line="1035" pos:column="22"/></name></name></expr>)<pos:position pos:line="1035" pos:column="23"/></condition><then pos:line="1035" pos:column="23"> <block type="pseudo"><expr_stmt><expr><name pos:line="1035" pos:column="24">c<pos:position pos:line="1035" pos:column="25"/></name> <operator pos:line="1035" pos:column="26">=<pos:position pos:line="1035" pos:column="27"/></operator> <operator pos:line="1035" pos:column="28">*<pos:position pos:line="1035" pos:column="29"/></operator><name pos:line="1035" pos:column="29">eptr<pos:position pos:line="1035" pos:column="33"/></name></expr>;<pos:position pos:line="1035" pos:column="34"/></expr_stmt></block></then> <else pos:line="1035" pos:column="35">else
          <block pos:line="1036" pos:column="11">{
          <expr_stmt><expr><call><name pos:line="1037" pos:column="11">GETCHARLEN<pos:position pos:line="1037" pos:column="21"/></name><argument_list pos:line="1037" pos:column="21">(<argument><expr><name pos:line="1037" pos:column="22">c<pos:position pos:line="1037" pos:column="23"/></name></expr></argument>, <argument><expr><name pos:line="1037" pos:column="25">eptr<pos:position pos:line="1037" pos:column="29"/></name></expr></argument>, <argument><expr><name pos:line="1037" pos:column="31">len<pos:position pos:line="1037" pos:column="34"/></name></expr></argument>)<pos:position pos:line="1037" pos:column="35"/></argument_list></call></expr>;<pos:position pos:line="1037" pos:column="36"/></expr_stmt>
          }<pos:position pos:line="1038" pos:column="12"/></block></else></if>
        <expr_stmt><expr><name pos:line="1039" pos:column="9">category<pos:position pos:line="1039" pos:column="17"/></name> <operator pos:line="1039" pos:column="18">=<pos:position pos:line="1039" pos:column="19"/></operator> <call><name pos:line="1039" pos:column="20">ucp_findchar<pos:position pos:line="1039" pos:column="32"/></name><argument_list pos:line="1039" pos:column="32">(<argument><expr><name pos:line="1039" pos:column="33">c<pos:position pos:line="1039" pos:column="34"/></name></expr></argument>, <argument><expr><operator pos:line="1039" pos:column="36">&amp;<pos:position pos:line="1039" pos:column="41"/></operator><name pos:line="1039" pos:column="37">chartype<pos:position pos:line="1039" pos:column="45"/></name></expr></argument>, <argument><expr><operator pos:line="1039" pos:column="47">&amp;<pos:position pos:line="1039" pos:column="52"/></operator><name pos:line="1039" pos:column="48">othercase<pos:position pos:line="1039" pos:column="57"/></name></expr></argument>)<pos:position pos:line="1039" pos:column="58"/></argument_list></call></expr>;<pos:position pos:line="1039" pos:column="59"/></expr_stmt>
        <if pos:line="1040" pos:column="9">if <condition pos:line="1040" pos:column="12">(<expr><name pos:line="1040" pos:column="13">category<pos:position pos:line="1040" pos:column="21"/></name> <operator pos:line="1040" pos:column="22">!=<pos:position pos:line="1040" pos:column="24"/></operator> <name pos:line="1040" pos:column="25">ucp_M<pos:position pos:line="1040" pos:column="30"/></name></expr>)<pos:position pos:line="1040" pos:column="31"/></condition><then pos:line="1040" pos:column="31"> <block type="pseudo"><break pos:line="1040" pos:column="32">break;<pos:position pos:line="1040" pos:column="38"/></break></block></then></if>
        <expr_stmt><expr><name pos:line="1041" pos:column="9">eptr<pos:position pos:line="1041" pos:column="13"/></name> <operator pos:line="1041" pos:column="14">+=<pos:position pos:line="1041" pos:column="16"/></operator> <name pos:line="1041" pos:column="17">len<pos:position pos:line="1041" pos:column="20"/></name></expr>;<pos:position pos:line="1041" pos:column="21"/></expr_stmt>
        }<pos:position pos:line="1042" pos:column="10"/></block></while>
      }<pos:position pos:line="1043" pos:column="8"/></block>
    <expr_stmt><expr><name pos:line="1044" pos:column="5">ecode<pos:position pos:line="1044" pos:column="10"/></name><operator pos:line="1044" pos:column="10">++<pos:position pos:line="1044" pos:column="12"/></operator></expr>;<pos:position pos:line="1044" pos:column="13"/></expr_stmt>
    <break pos:line="1045" pos:column="5">break;<pos:position pos:line="1045" pos:column="11"/></break>
<cpp:endif pos:line="1046" pos:column="1">#<cpp:directive pos:line="1046" pos:column="2">endif<pos:position pos:line="1046" pos:column="7"/></cpp:directive></cpp:endif>


    <comment type="block" pos:line="1049" pos:column="5">/* Match a back reference, possibly repeatedly. Look past the end of the
    item to see if there is repeat information following. The code is similar
    to that for character classes, but repeated for efficiency. Then obey
    similar code to character type repeats - written out again for speed.
    However, if the referenced string is the empty string, always treat
    it as matched, any number of times (otherwise there could be infinite
    loops). */</comment>

    <case pos:line="1057" pos:column="5">case <expr><name pos:line="1057" pos:column="10">OP_REF<pos:position pos:line="1057" pos:column="16"/></name></expr>:<pos:position pos:line="1057" pos:column="17"/></case>
      <block pos:line="1058" pos:column="7">{
      <expr_stmt><expr><name pos:line="1059" pos:column="7">offset<pos:position pos:line="1059" pos:column="13"/></name> <operator pos:line="1059" pos:column="14">=<pos:position pos:line="1059" pos:column="15"/></operator> <call><name pos:line="1059" pos:column="16">GET2<pos:position pos:line="1059" pos:column="20"/></name><argument_list pos:line="1059" pos:column="20">(<argument><expr><name pos:line="1059" pos:column="21">ecode<pos:position pos:line="1059" pos:column="26"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="1059" pos:column="28">1<pos:position pos:line="1059" pos:column="29"/></literal></expr></argument>)<pos:position pos:line="1059" pos:column="30"/></argument_list></call> <operator pos:line="1059" pos:column="31">&lt;&lt;<pos:position pos:line="1059" pos:column="39"/></operator> <literal type="number" pos:line="1059" pos:column="34">1<pos:position pos:line="1059" pos:column="35"/></literal></expr>;<pos:position pos:line="1059" pos:column="36"/></expr_stmt>               <comment type="block" pos:line="1059" pos:column="51">/* Doubled ref number */</comment>
      <expr_stmt><expr><name pos:line="1060" pos:column="7">ecode<pos:position pos:line="1060" pos:column="12"/></name> <operator pos:line="1060" pos:column="13">+=<pos:position pos:line="1060" pos:column="15"/></operator> <literal type="number" pos:line="1060" pos:column="16">3<pos:position pos:line="1060" pos:column="17"/></literal></expr>;<pos:position pos:line="1060" pos:column="18"/></expr_stmt>                                 <comment type="block" pos:line="1060" pos:column="51">/* Advance past item */</comment>

      <comment type="block" pos:line="1062" pos:column="7">/* If the reference is unset, set the length to be longer than the amount
      of subject left; this ensures that every attempt at a match fails. We
      can't just fail here, because of the possibility of quantifiers with zero
      minima. */</comment>

      <expr_stmt><expr><name pos:line="1067" pos:column="7">length<pos:position pos:line="1067" pos:column="13"/></name> <operator pos:line="1067" pos:column="14">=<pos:position pos:line="1067" pos:column="15"/></operator> <ternary><condition><expr><operator pos:line="1067" pos:column="16">(<pos:position pos:line="1067" pos:column="17"/></operator><name pos:line="1067" pos:column="17">offset<pos:position pos:line="1067" pos:column="23"/></name> <operator pos:line="1067" pos:column="24">&gt;=<pos:position pos:line="1067" pos:column="29"/></operator> <name pos:line="1067" pos:column="27">offset_top<pos:position pos:line="1067" pos:column="37"/></name> <operator pos:line="1067" pos:column="38">||<pos:position pos:line="1067" pos:column="40"/></operator> <name><name pos:line="1067" pos:column="41">md<pos:position pos:line="1067" pos:column="43"/></name><operator pos:line="1067" pos:column="43">-&gt;<pos:position pos:line="1067" pos:column="48"/></operator><name pos:line="1067" pos:column="45">offset_vector<pos:position pos:line="1067" pos:column="58"/></name><index pos:line="1067" pos:column="58">[<expr><name pos:line="1067" pos:column="59">offset<pos:position pos:line="1067" pos:column="65"/></name></expr>]<pos:position pos:line="1067" pos:column="66"/></index></name> <operator pos:line="1067" pos:column="67">&lt;<pos:position pos:line="1067" pos:column="71"/></operator> <literal type="number" pos:line="1067" pos:column="69">0<pos:position pos:line="1067" pos:column="70"/></literal><operator pos:line="1067" pos:column="70">)<pos:position pos:line="1067" pos:column="71"/></operator></expr>?<pos:position pos:line="1067" pos:column="72"/></condition><then pos:line="1067" pos:column="72">
        <expr><name><name pos:line="1068" pos:column="9">md<pos:position pos:line="1068" pos:column="11"/></name><operator pos:line="1068" pos:column="11">-&gt;<pos:position pos:line="1068" pos:column="16"/></operator><name pos:line="1068" pos:column="13">end_subject<pos:position pos:line="1068" pos:column="24"/></name></name> <operator pos:line="1068" pos:column="25">-<pos:position pos:line="1068" pos:column="26"/></operator> <name pos:line="1068" pos:column="27">eptr<pos:position pos:line="1068" pos:column="31"/></name> <operator pos:line="1068" pos:column="32">+<pos:position pos:line="1068" pos:column="33"/></operator> <literal type="number" pos:line="1068" pos:column="34">1<pos:position pos:line="1068" pos:column="35"/></literal></expr> <pos:position pos:line="1068" pos:column="36"/></then><else pos:line="1068" pos:column="36">:
        <expr><name><name pos:line="1069" pos:column="9">md<pos:position pos:line="1069" pos:column="11"/></name><operator pos:line="1069" pos:column="11">-&gt;<pos:position pos:line="1069" pos:column="16"/></operator><name pos:line="1069" pos:column="13">offset_vector<pos:position pos:line="1069" pos:column="26"/></name><index pos:line="1069" pos:column="26">[<expr><name pos:line="1069" pos:column="27">offset<pos:position pos:line="1069" pos:column="33"/></name><operator pos:line="1069" pos:column="33">+<pos:position pos:line="1069" pos:column="34"/></operator><literal type="number" pos:line="1069" pos:column="34">1<pos:position pos:line="1069" pos:column="35"/></literal></expr>]<pos:position pos:line="1069" pos:column="36"/></index></name> <operator pos:line="1069" pos:column="37">-<pos:position pos:line="1069" pos:column="38"/></operator> <name><name pos:line="1069" pos:column="39">md<pos:position pos:line="1069" pos:column="41"/></name><operator pos:line="1069" pos:column="41">-&gt;<pos:position pos:line="1069" pos:column="46"/></operator><name pos:line="1069" pos:column="43">offset_vector<pos:position pos:line="1069" pos:column="56"/></name><index pos:line="1069" pos:column="56">[<expr><name pos:line="1069" pos:column="57">offset<pos:position pos:line="1069" pos:column="63"/></name></expr>]<pos:position pos:line="1069" pos:column="64"/></index></name></expr></else></ternary></expr>;<pos:position pos:line="1069" pos:column="65"/></expr_stmt>

      <comment type="block" pos:line="1071" pos:column="7">/* Set up for repetition, or handle the non-repeated case */</comment>

      <switch pos:line="1073" pos:column="7">switch <condition pos:line="1073" pos:column="14">(<expr><operator pos:line="1073" pos:column="15">*<pos:position pos:line="1073" pos:column="16"/></operator><name pos:line="1073" pos:column="16">ecode<pos:position pos:line="1073" pos:column="21"/></name></expr>)<pos:position pos:line="1073" pos:column="22"/></condition>
        <block pos:line="1074" pos:column="9">{
        <case pos:line="1075" pos:column="9">case <expr><name pos:line="1075" pos:column="14">OP_CRSTAR<pos:position pos:line="1075" pos:column="23"/></name></expr>:<pos:position pos:line="1075" pos:column="24"/></case>
        <case pos:line="1076" pos:column="9">case <expr><name pos:line="1076" pos:column="14">OP_CRMINSTAR<pos:position pos:line="1076" pos:column="26"/></name></expr>:<pos:position pos:line="1076" pos:column="27"/></case>
        <case pos:line="1077" pos:column="9">case <expr><name pos:line="1077" pos:column="14">OP_CRPLUS<pos:position pos:line="1077" pos:column="23"/></name></expr>:<pos:position pos:line="1077" pos:column="24"/></case>
        <case pos:line="1078" pos:column="9">case <expr><name pos:line="1078" pos:column="14">OP_CRMINPLUS<pos:position pos:line="1078" pos:column="26"/></name></expr>:<pos:position pos:line="1078" pos:column="27"/></case>
        <case pos:line="1079" pos:column="9">case <expr><name pos:line="1079" pos:column="14">OP_CRQUERY<pos:position pos:line="1079" pos:column="24"/></name></expr>:<pos:position pos:line="1079" pos:column="25"/></case>
        <case pos:line="1080" pos:column="9">case <expr><name pos:line="1080" pos:column="14">OP_CRMINQUERY<pos:position pos:line="1080" pos:column="27"/></name></expr>:<pos:position pos:line="1080" pos:column="28"/></case>
        <expr_stmt><expr><name pos:line="1081" pos:column="9">c<pos:position pos:line="1081" pos:column="10"/></name> <operator pos:line="1081" pos:column="11">=<pos:position pos:line="1081" pos:column="12"/></operator> <operator pos:line="1081" pos:column="13">*<pos:position pos:line="1081" pos:column="14"/></operator><name pos:line="1081" pos:column="14">ecode<pos:position pos:line="1081" pos:column="19"/></name><operator pos:line="1081" pos:column="19">++<pos:position pos:line="1081" pos:column="21"/></operator> <operator pos:line="1081" pos:column="22">-<pos:position pos:line="1081" pos:column="23"/></operator> <name pos:line="1081" pos:column="24">OP_CRSTAR<pos:position pos:line="1081" pos:column="33"/></name></expr>;<pos:position pos:line="1081" pos:column="34"/></expr_stmt>
        <expr_stmt><expr><name pos:line="1082" pos:column="9">minimize<pos:position pos:line="1082" pos:column="17"/></name> <operator pos:line="1082" pos:column="18">=<pos:position pos:line="1082" pos:column="19"/></operator> <operator pos:line="1082" pos:column="20">(<pos:position pos:line="1082" pos:column="21"/></operator><name pos:line="1082" pos:column="21">c<pos:position pos:line="1082" pos:column="22"/></name> <operator pos:line="1082" pos:column="23">&amp;<pos:position pos:line="1082" pos:column="28"/></operator> <literal type="number" pos:line="1082" pos:column="25">1<pos:position pos:line="1082" pos:column="26"/></literal><operator pos:line="1082" pos:column="26">)<pos:position pos:line="1082" pos:column="27"/></operator> <operator pos:line="1082" pos:column="28">!=<pos:position pos:line="1082" pos:column="30"/></operator> <literal type="number" pos:line="1082" pos:column="31">0<pos:position pos:line="1082" pos:column="32"/></literal></expr>;<pos:position pos:line="1082" pos:column="33"/></expr_stmt>
        <expr_stmt><expr><name pos:line="1083" pos:column="9">min<pos:position pos:line="1083" pos:column="12"/></name> <operator pos:line="1083" pos:column="13">=<pos:position pos:line="1083" pos:column="14"/></operator> <name><name pos:line="1083" pos:column="15">rep_min<pos:position pos:line="1083" pos:column="22"/></name><index pos:line="1083" pos:column="22">[<expr><name pos:line="1083" pos:column="23">c<pos:position pos:line="1083" pos:column="24"/></name></expr>]<pos:position pos:line="1083" pos:column="25"/></index></name></expr>;<pos:position pos:line="1083" pos:column="26"/></expr_stmt>                 <comment type="block" pos:line="1083" pos:column="43">/* Pick up values from tables; */</comment>
        <expr_stmt><expr><name pos:line="1084" pos:column="9">max<pos:position pos:line="1084" pos:column="12"/></name> <operator pos:line="1084" pos:column="13">=<pos:position pos:line="1084" pos:column="14"/></operator> <name><name pos:line="1084" pos:column="15">rep_max<pos:position pos:line="1084" pos:column="22"/></name><index pos:line="1084" pos:column="22">[<expr><name pos:line="1084" pos:column="23">c<pos:position pos:line="1084" pos:column="24"/></name></expr>]<pos:position pos:line="1084" pos:column="25"/></index></name></expr>;<pos:position pos:line="1084" pos:column="26"/></expr_stmt>                 <comment type="block" pos:line="1084" pos:column="43">/* zero for max =&gt; infinity */</comment>
        <if pos:line="1085" pos:column="9">if <condition pos:line="1085" pos:column="12">(<expr><name pos:line="1085" pos:column="13">max<pos:position pos:line="1085" pos:column="16"/></name> <operator pos:line="1085" pos:column="17">==<pos:position pos:line="1085" pos:column="19"/></operator> <literal type="number" pos:line="1085" pos:column="20">0<pos:position pos:line="1085" pos:column="21"/></literal></expr>)<pos:position pos:line="1085" pos:column="22"/></condition><then pos:line="1085" pos:column="22"> <block type="pseudo"><expr_stmt><expr><name pos:line="1085" pos:column="23">max<pos:position pos:line="1085" pos:column="26"/></name> <operator pos:line="1085" pos:column="27">=<pos:position pos:line="1085" pos:column="28"/></operator> <name pos:line="1085" pos:column="29">INT_MAX<pos:position pos:line="1085" pos:column="36"/></name></expr>;<pos:position pos:line="1085" pos:column="37"/></expr_stmt></block></then></if>
        <break pos:line="1086" pos:column="9">break;<pos:position pos:line="1086" pos:column="15"/></break>

        <case pos:line="1088" pos:column="9">case <expr><name pos:line="1088" pos:column="14">OP_CRRANGE<pos:position pos:line="1088" pos:column="24"/></name></expr>:<pos:position pos:line="1088" pos:column="25"/></case>
        <case pos:line="1089" pos:column="9">case <expr><name pos:line="1089" pos:column="14">OP_CRMINRANGE<pos:position pos:line="1089" pos:column="27"/></name></expr>:<pos:position pos:line="1089" pos:column="28"/></case>
        <expr_stmt><expr><name pos:line="1090" pos:column="9">minimize<pos:position pos:line="1090" pos:column="17"/></name> <operator pos:line="1090" pos:column="18">=<pos:position pos:line="1090" pos:column="19"/></operator> <operator pos:line="1090" pos:column="20">(<pos:position pos:line="1090" pos:column="21"/></operator><operator pos:line="1090" pos:column="21">*<pos:position pos:line="1090" pos:column="22"/></operator><name pos:line="1090" pos:column="22">ecode<pos:position pos:line="1090" pos:column="27"/></name> <operator pos:line="1090" pos:column="28">==<pos:position pos:line="1090" pos:column="30"/></operator> <name pos:line="1090" pos:column="31">OP_CRMINRANGE<pos:position pos:line="1090" pos:column="44"/></name><operator pos:line="1090" pos:column="44">)<pos:position pos:line="1090" pos:column="45"/></operator></expr>;<pos:position pos:line="1090" pos:column="46"/></expr_stmt>
        <expr_stmt><expr><name pos:line="1091" pos:column="9">min<pos:position pos:line="1091" pos:column="12"/></name> <operator pos:line="1091" pos:column="13">=<pos:position pos:line="1091" pos:column="14"/></operator> <call><name pos:line="1091" pos:column="15">GET2<pos:position pos:line="1091" pos:column="19"/></name><argument_list pos:line="1091" pos:column="19">(<argument><expr><name pos:line="1091" pos:column="20">ecode<pos:position pos:line="1091" pos:column="25"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="1091" pos:column="27">1<pos:position pos:line="1091" pos:column="28"/></literal></expr></argument>)<pos:position pos:line="1091" pos:column="29"/></argument_list></call></expr>;<pos:position pos:line="1091" pos:column="30"/></expr_stmt>
        <expr_stmt><expr><name pos:line="1092" pos:column="9">max<pos:position pos:line="1092" pos:column="12"/></name> <operator pos:line="1092" pos:column="13">=<pos:position pos:line="1092" pos:column="14"/></operator> <call><name pos:line="1092" pos:column="15">GET2<pos:position pos:line="1092" pos:column="19"/></name><argument_list pos:line="1092" pos:column="19">(<argument><expr><name pos:line="1092" pos:column="20">ecode<pos:position pos:line="1092" pos:column="25"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="1092" pos:column="27">3<pos:position pos:line="1092" pos:column="28"/></literal></expr></argument>)<pos:position pos:line="1092" pos:column="29"/></argument_list></call></expr>;<pos:position pos:line="1092" pos:column="30"/></expr_stmt>
        <if pos:line="1093" pos:column="9">if <condition pos:line="1093" pos:column="12">(<expr><name pos:line="1093" pos:column="13">max<pos:position pos:line="1093" pos:column="16"/></name> <operator pos:line="1093" pos:column="17">==<pos:position pos:line="1093" pos:column="19"/></operator> <literal type="number" pos:line="1093" pos:column="20">0<pos:position pos:line="1093" pos:column="21"/></literal></expr>)<pos:position pos:line="1093" pos:column="22"/></condition><then pos:line="1093" pos:column="22"> <block type="pseudo"><expr_stmt><expr><name pos:line="1093" pos:column="23">max<pos:position pos:line="1093" pos:column="26"/></name> <operator pos:line="1093" pos:column="27">=<pos:position pos:line="1093" pos:column="28"/></operator> <name pos:line="1093" pos:column="29">INT_MAX<pos:position pos:line="1093" pos:column="36"/></name></expr>;<pos:position pos:line="1093" pos:column="37"/></expr_stmt></block></then></if>
        <expr_stmt><expr><name pos:line="1094" pos:column="9">ecode<pos:position pos:line="1094" pos:column="14"/></name> <operator pos:line="1094" pos:column="15">+=<pos:position pos:line="1094" pos:column="17"/></operator> <literal type="number" pos:line="1094" pos:column="18">5<pos:position pos:line="1094" pos:column="19"/></literal></expr>;<pos:position pos:line="1094" pos:column="20"/></expr_stmt>
        <break pos:line="1095" pos:column="9">break;<pos:position pos:line="1095" pos:column="15"/></break>

        <default pos:line="1097" pos:column="9">default:<pos:position pos:line="1097" pos:column="17"/></default>               <comment type="block" pos:line="1097" pos:column="32">/* No repeat follows */</comment>
        <if pos:line="1098" pos:column="9">if <condition pos:line="1098" pos:column="12">(<expr><operator pos:line="1098" pos:column="13">!<pos:position pos:line="1098" pos:column="14"/></operator><call><name pos:line="1098" pos:column="14">match_ref<pos:position pos:line="1098" pos:column="23"/></name><argument_list pos:line="1098" pos:column="23">(<argument><expr><name pos:line="1098" pos:column="24">offset<pos:position pos:line="1098" pos:column="30"/></name></expr></argument>, <argument><expr><name pos:line="1098" pos:column="32">eptr<pos:position pos:line="1098" pos:column="36"/></name></expr></argument>, <argument><expr><name pos:line="1098" pos:column="38">length<pos:position pos:line="1098" pos:column="44"/></name></expr></argument>, <argument><expr><name pos:line="1098" pos:column="46">md<pos:position pos:line="1098" pos:column="48"/></name></expr></argument>, <argument><expr><name pos:line="1098" pos:column="50">ims<pos:position pos:line="1098" pos:column="53"/></name></expr></argument>)<pos:position pos:line="1098" pos:column="54"/></argument_list></call></expr>)<pos:position pos:line="1098" pos:column="55"/></condition><then pos:line="1098" pos:column="55"> <block type="pseudo"><expr_stmt><expr><call><name pos:line="1098" pos:column="56">RRETURN<pos:position pos:line="1098" pos:column="63"/></name><argument_list pos:line="1098" pos:column="63">(<argument><expr><name pos:line="1098" pos:column="64">MATCH_NOMATCH<pos:position pos:line="1098" pos:column="77"/></name></expr></argument>)<pos:position pos:line="1098" pos:column="78"/></argument_list></call></expr>;<pos:position pos:line="1098" pos:column="79"/></expr_stmt></block></then></if>
        <expr_stmt><expr><name pos:line="1099" pos:column="9">eptr<pos:position pos:line="1099" pos:column="13"/></name> <operator pos:line="1099" pos:column="14">+=<pos:position pos:line="1099" pos:column="16"/></operator> <name pos:line="1099" pos:column="17">length<pos:position pos:line="1099" pos:column="23"/></name></expr>;<pos:position pos:line="1099" pos:column="24"/></expr_stmt>
        <continue pos:line="1100" pos:column="9">continue;<pos:position pos:line="1100" pos:column="18"/></continue>              <comment type="block" pos:line="1100" pos:column="32">/* With the main loop */</comment>
        }<pos:position pos:line="1101" pos:column="10"/></block></switch>

      <comment type="block" pos:line="1103" pos:column="7">/* If the length of the reference is zero, just continue with the
      main loop. */</comment>

      <if pos:line="1106" pos:column="7">if <condition pos:line="1106" pos:column="10">(<expr><name pos:line="1106" pos:column="11">length<pos:position pos:line="1106" pos:column="17"/></name> <operator pos:line="1106" pos:column="18">==<pos:position pos:line="1106" pos:column="20"/></operator> <literal type="number" pos:line="1106" pos:column="21">0<pos:position pos:line="1106" pos:column="22"/></literal></expr>)<pos:position pos:line="1106" pos:column="23"/></condition><then pos:line="1106" pos:column="23"> <block type="pseudo"><continue pos:line="1106" pos:column="24">continue;<pos:position pos:line="1106" pos:column="33"/></continue></block></then></if>

      <comment type="block" pos:line="1108" pos:column="7">/* First, ensure the minimum number of matches are present. We get back
      the length of the reference string explicitly rather than passing the
      address of eptr, so that eptr can be a register variable. */</comment>

      <for pos:line="1112" pos:column="7">for <control pos:line="1112" pos:column="11">(<init><expr><name pos:line="1112" pos:column="12">i<pos:position pos:line="1112" pos:column="13"/></name> <operator pos:line="1112" pos:column="14">=<pos:position pos:line="1112" pos:column="15"/></operator> <literal type="number" pos:line="1112" pos:column="16">1<pos:position pos:line="1112" pos:column="17"/></literal></expr>;<pos:position pos:line="1112" pos:column="18"/></init> <condition><expr><name pos:line="1112" pos:column="19">i<pos:position pos:line="1112" pos:column="20"/></name> <operator pos:line="1112" pos:column="21">&lt;=<pos:position pos:line="1112" pos:column="26"/></operator> <name pos:line="1112" pos:column="24">min<pos:position pos:line="1112" pos:column="27"/></name></expr>;<pos:position pos:line="1112" pos:column="28"/></condition> <incr><expr><name pos:line="1112" pos:column="29">i<pos:position pos:line="1112" pos:column="30"/></name><operator pos:line="1112" pos:column="30">++<pos:position pos:line="1112" pos:column="32"/></operator></expr></incr>)<pos:position pos:line="1112" pos:column="33"/></control>
        <block pos:line="1113" pos:column="9">{
        <if pos:line="1114" pos:column="9">if <condition pos:line="1114" pos:column="12">(<expr><operator pos:line="1114" pos:column="13">!<pos:position pos:line="1114" pos:column="14"/></operator><call><name pos:line="1114" pos:column="14">match_ref<pos:position pos:line="1114" pos:column="23"/></name><argument_list pos:line="1114" pos:column="23">(<argument><expr><name pos:line="1114" pos:column="24">offset<pos:position pos:line="1114" pos:column="30"/></name></expr></argument>, <argument><expr><name pos:line="1114" pos:column="32">eptr<pos:position pos:line="1114" pos:column="36"/></name></expr></argument>, <argument><expr><name pos:line="1114" pos:column="38">length<pos:position pos:line="1114" pos:column="44"/></name></expr></argument>, <argument><expr><name pos:line="1114" pos:column="46">md<pos:position pos:line="1114" pos:column="48"/></name></expr></argument>, <argument><expr><name pos:line="1114" pos:column="50">ims<pos:position pos:line="1114" pos:column="53"/></name></expr></argument>)<pos:position pos:line="1114" pos:column="54"/></argument_list></call></expr>)<pos:position pos:line="1114" pos:column="55"/></condition><then pos:line="1114" pos:column="55"> <block type="pseudo"><expr_stmt><expr><call><name pos:line="1114" pos:column="56">RRETURN<pos:position pos:line="1114" pos:column="63"/></name><argument_list pos:line="1114" pos:column="63">(<argument><expr><name pos:line="1114" pos:column="64">MATCH_NOMATCH<pos:position pos:line="1114" pos:column="77"/></name></expr></argument>)<pos:position pos:line="1114" pos:column="78"/></argument_list></call></expr>;<pos:position pos:line="1114" pos:column="79"/></expr_stmt></block></then></if>
        <expr_stmt><expr><name pos:line="1115" pos:column="9">eptr<pos:position pos:line="1115" pos:column="13"/></name> <operator pos:line="1115" pos:column="14">+=<pos:position pos:line="1115" pos:column="16"/></operator> <name pos:line="1115" pos:column="17">length<pos:position pos:line="1115" pos:column="23"/></name></expr>;<pos:position pos:line="1115" pos:column="24"/></expr_stmt>
        }<pos:position pos:line="1116" pos:column="10"/></block></for>

      <comment type="block" pos:line="1118" pos:column="7">/* If min = max, continue at the same level without recursion.
      They are not both allowed to be zero. */</comment>

      <if pos:line="1121" pos:column="7">if <condition pos:line="1121" pos:column="10">(<expr><name pos:line="1121" pos:column="11">min<pos:position pos:line="1121" pos:column="14"/></name> <operator pos:line="1121" pos:column="15">==<pos:position pos:line="1121" pos:column="17"/></operator> <name pos:line="1121" pos:column="18">max<pos:position pos:line="1121" pos:column="21"/></name></expr>)<pos:position pos:line="1121" pos:column="22"/></condition><then pos:line="1121" pos:column="22"> <block type="pseudo"><continue pos:line="1121" pos:column="23">continue;<pos:position pos:line="1121" pos:column="32"/></continue></block></then></if>

      <comment type="block" pos:line="1123" pos:column="7">/* If minimizing, keep trying and advancing the pointer */</comment>

      <if pos:line="1125" pos:column="7">if <condition pos:line="1125" pos:column="10">(<expr><name pos:line="1125" pos:column="11">minimize<pos:position pos:line="1125" pos:column="19"/></name></expr>)<pos:position pos:line="1125" pos:column="20"/></condition><then pos:line="1125" pos:column="20">
        <block pos:line="1126" pos:column="9">{
        <for pos:line="1127" pos:column="9">for <control pos:line="1127" pos:column="13">(<init><expr><name pos:line="1127" pos:column="14">fi<pos:position pos:line="1127" pos:column="16"/></name> <operator pos:line="1127" pos:column="17">=<pos:position pos:line="1127" pos:column="18"/></operator> <name pos:line="1127" pos:column="19">min<pos:position pos:line="1127" pos:column="22"/></name></expr>;<pos:position pos:line="1127" pos:column="23"/></init><condition pos:line="1127" pos:column="23">;<pos:position pos:line="1127" pos:column="24"/></condition> <incr><expr><name pos:line="1127" pos:column="25">fi<pos:position pos:line="1127" pos:column="27"/></name><operator pos:line="1127" pos:column="27">++<pos:position pos:line="1127" pos:column="29"/></operator></expr></incr>)<pos:position pos:line="1127" pos:column="30"/></control>
          <block pos:line="1128" pos:column="11">{
          <expr_stmt><expr><call><name pos:line="1129" pos:column="11">RMATCH<pos:position pos:line="1129" pos:column="17"/></name><argument_list pos:line="1129" pos:column="17">(<argument><expr><name pos:line="1129" pos:column="18">rrc<pos:position pos:line="1129" pos:column="21"/></name></expr></argument>, <argument><expr><name pos:line="1129" pos:column="23">eptr<pos:position pos:line="1129" pos:column="27"/></name></expr></argument>, <argument><expr><name pos:line="1129" pos:column="29">ecode<pos:position pos:line="1129" pos:column="34"/></name></expr></argument>, <argument><expr><name pos:line="1129" pos:column="36">offset_top<pos:position pos:line="1129" pos:column="46"/></name></expr></argument>, <argument><expr><name pos:line="1129" pos:column="48">md<pos:position pos:line="1129" pos:column="50"/></name></expr></argument>, <argument><expr><name pos:line="1129" pos:column="52">ims<pos:position pos:line="1129" pos:column="55"/></name></expr></argument>, <argument><expr><name pos:line="1129" pos:column="57">eptrb<pos:position pos:line="1129" pos:column="62"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="1129" pos:column="64">0<pos:position pos:line="1129" pos:column="65"/></literal></expr></argument>)<pos:position pos:line="1129" pos:column="66"/></argument_list></call></expr>;<pos:position pos:line="1129" pos:column="67"/></expr_stmt>
          <if pos:line="1130" pos:column="11">if <condition pos:line="1130" pos:column="14">(<expr><name pos:line="1130" pos:column="15">rrc<pos:position pos:line="1130" pos:column="18"/></name> <operator pos:line="1130" pos:column="19">!=<pos:position pos:line="1130" pos:column="21"/></operator> <name pos:line="1130" pos:column="22">MATCH_NOMATCH<pos:position pos:line="1130" pos:column="35"/></name></expr>)<pos:position pos:line="1130" pos:column="36"/></condition><then pos:line="1130" pos:column="36"> <block type="pseudo"><expr_stmt><expr><call><name pos:line="1130" pos:column="37">RRETURN<pos:position pos:line="1130" pos:column="44"/></name><argument_list pos:line="1130" pos:column="44">(<argument><expr><name pos:line="1130" pos:column="45">rrc<pos:position pos:line="1130" pos:column="48"/></name></expr></argument>)<pos:position pos:line="1130" pos:column="49"/></argument_list></call></expr>;<pos:position pos:line="1130" pos:column="50"/></expr_stmt></block></then></if>
          <if pos:line="1131" pos:column="11">if <condition pos:line="1131" pos:column="14">(<expr><name pos:line="1131" pos:column="15">fi<pos:position pos:line="1131" pos:column="17"/></name> <operator pos:line="1131" pos:column="18">&gt;=<pos:position pos:line="1131" pos:column="23"/></operator> <name pos:line="1131" pos:column="21">max<pos:position pos:line="1131" pos:column="24"/></name> <operator pos:line="1131" pos:column="25">||<pos:position pos:line="1131" pos:column="27"/></operator> <operator pos:line="1131" pos:column="28">!<pos:position pos:line="1131" pos:column="29"/></operator><call><name pos:line="1131" pos:column="29">match_ref<pos:position pos:line="1131" pos:column="38"/></name><argument_list pos:line="1131" pos:column="38">(<argument><expr><name pos:line="1131" pos:column="39">offset<pos:position pos:line="1131" pos:column="45"/></name></expr></argument>, <argument><expr><name pos:line="1131" pos:column="47">eptr<pos:position pos:line="1131" pos:column="51"/></name></expr></argument>, <argument><expr><name pos:line="1131" pos:column="53">length<pos:position pos:line="1131" pos:column="59"/></name></expr></argument>, <argument><expr><name pos:line="1131" pos:column="61">md<pos:position pos:line="1131" pos:column="63"/></name></expr></argument>, <argument><expr><name pos:line="1131" pos:column="65">ims<pos:position pos:line="1131" pos:column="68"/></name></expr></argument>)<pos:position pos:line="1131" pos:column="69"/></argument_list></call></expr>)<pos:position pos:line="1131" pos:column="70"/></condition><then pos:line="1131" pos:column="70">
            <block type="pseudo"><expr_stmt><expr><call><name pos:line="1132" pos:column="13">RRETURN<pos:position pos:line="1132" pos:column="20"/></name><argument_list pos:line="1132" pos:column="20">(<argument><expr><name pos:line="1132" pos:column="21">MATCH_NOMATCH<pos:position pos:line="1132" pos:column="34"/></name></expr></argument>)<pos:position pos:line="1132" pos:column="35"/></argument_list></call></expr>;<pos:position pos:line="1132" pos:column="36"/></expr_stmt></block></then></if>
          <expr_stmt><expr><name pos:line="1133" pos:column="11">eptr<pos:position pos:line="1133" pos:column="15"/></name> <operator pos:line="1133" pos:column="16">+=<pos:position pos:line="1133" pos:column="18"/></operator> <name pos:line="1133" pos:column="19">length<pos:position pos:line="1133" pos:column="25"/></name></expr>;<pos:position pos:line="1133" pos:column="26"/></expr_stmt>
          }<pos:position pos:line="1134" pos:column="12"/></block></for>
        <comment type="block" pos:line="1135" pos:column="9">/* Control never gets here */</comment>
        }<pos:position pos:line="1136" pos:column="10"/></block></then>

      <comment type="block" pos:line="1138" pos:column="7">/* If maximizing, find the longest string and work backwards */</comment>

      <else pos:line="1140" pos:column="7">else
        <block pos:line="1141" pos:column="9">{
        <expr_stmt><expr><name pos:line="1142" pos:column="9">pp<pos:position pos:line="1142" pos:column="11"/></name> <operator pos:line="1142" pos:column="12">=<pos:position pos:line="1142" pos:column="13"/></operator> <name pos:line="1142" pos:column="14">eptr<pos:position pos:line="1142" pos:column="18"/></name></expr>;<pos:position pos:line="1142" pos:column="19"/></expr_stmt>
        <for pos:line="1143" pos:column="9">for <control pos:line="1143" pos:column="13">(<init><expr><name pos:line="1143" pos:column="14">i<pos:position pos:line="1143" pos:column="15"/></name> <operator pos:line="1143" pos:column="16">=<pos:position pos:line="1143" pos:column="17"/></operator> <name pos:line="1143" pos:column="18">min<pos:position pos:line="1143" pos:column="21"/></name></expr>;<pos:position pos:line="1143" pos:column="22"/></init> <condition><expr><name pos:line="1143" pos:column="23">i<pos:position pos:line="1143" pos:column="24"/></name> <operator pos:line="1143" pos:column="25">&lt;<pos:position pos:line="1143" pos:column="29"/></operator> <name pos:line="1143" pos:column="27">max<pos:position pos:line="1143" pos:column="30"/></name></expr>;<pos:position pos:line="1143" pos:column="31"/></condition> <incr><expr><name pos:line="1143" pos:column="32">i<pos:position pos:line="1143" pos:column="33"/></name><operator pos:line="1143" pos:column="33">++<pos:position pos:line="1143" pos:column="35"/></operator></expr></incr>)<pos:position pos:line="1143" pos:column="36"/></control>
          <block pos:line="1144" pos:column="11">{
          <if pos:line="1145" pos:column="11">if <condition pos:line="1145" pos:column="14">(<expr><operator pos:line="1145" pos:column="15">!<pos:position pos:line="1145" pos:column="16"/></operator><call><name pos:line="1145" pos:column="16">match_ref<pos:position pos:line="1145" pos:column="25"/></name><argument_list pos:line="1145" pos:column="25">(<argument><expr><name pos:line="1145" pos:column="26">offset<pos:position pos:line="1145" pos:column="32"/></name></expr></argument>, <argument><expr><name pos:line="1145" pos:column="34">eptr<pos:position pos:line="1145" pos:column="38"/></name></expr></argument>, <argument><expr><name pos:line="1145" pos:column="40">length<pos:position pos:line="1145" pos:column="46"/></name></expr></argument>, <argument><expr><name pos:line="1145" pos:column="48">md<pos:position pos:line="1145" pos:column="50"/></name></expr></argument>, <argument><expr><name pos:line="1145" pos:column="52">ims<pos:position pos:line="1145" pos:column="55"/></name></expr></argument>)<pos:position pos:line="1145" pos:column="56"/></argument_list></call></expr>)<pos:position pos:line="1145" pos:column="57"/></condition><then pos:line="1145" pos:column="57"> <block type="pseudo"><break pos:line="1145" pos:column="58">break;<pos:position pos:line="1145" pos:column="64"/></break></block></then></if>
          <expr_stmt><expr><name pos:line="1146" pos:column="11">eptr<pos:position pos:line="1146" pos:column="15"/></name> <operator pos:line="1146" pos:column="16">+=<pos:position pos:line="1146" pos:column="18"/></operator> <name pos:line="1146" pos:column="19">length<pos:position pos:line="1146" pos:column="25"/></name></expr>;<pos:position pos:line="1146" pos:column="26"/></expr_stmt>
          }<pos:position pos:line="1147" pos:column="12"/></block></for>
        <while pos:line="1148" pos:column="9">while <condition pos:line="1148" pos:column="15">(<expr><name pos:line="1148" pos:column="16">eptr<pos:position pos:line="1148" pos:column="20"/></name> <operator pos:line="1148" pos:column="21">&gt;=<pos:position pos:line="1148" pos:column="26"/></operator> <name pos:line="1148" pos:column="24">pp<pos:position pos:line="1148" pos:column="26"/></name></expr>)<pos:position pos:line="1148" pos:column="27"/></condition>
          <block pos:line="1149" pos:column="11">{
          <expr_stmt><expr><call><name pos:line="1150" pos:column="11">RMATCH<pos:position pos:line="1150" pos:column="17"/></name><argument_list pos:line="1150" pos:column="17">(<argument><expr><name pos:line="1150" pos:column="18">rrc<pos:position pos:line="1150" pos:column="21"/></name></expr></argument>, <argument><expr><name pos:line="1150" pos:column="23">eptr<pos:position pos:line="1150" pos:column="27"/></name></expr></argument>, <argument><expr><name pos:line="1150" pos:column="29">ecode<pos:position pos:line="1150" pos:column="34"/></name></expr></argument>, <argument><expr><name pos:line="1150" pos:column="36">offset_top<pos:position pos:line="1150" pos:column="46"/></name></expr></argument>, <argument><expr><name pos:line="1150" pos:column="48">md<pos:position pos:line="1150" pos:column="50"/></name></expr></argument>, <argument><expr><name pos:line="1150" pos:column="52">ims<pos:position pos:line="1150" pos:column="55"/></name></expr></argument>, <argument><expr><name pos:line="1150" pos:column="57">eptrb<pos:position pos:line="1150" pos:column="62"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="1150" pos:column="64">0<pos:position pos:line="1150" pos:column="65"/></literal></expr></argument>)<pos:position pos:line="1150" pos:column="66"/></argument_list></call></expr>;<pos:position pos:line="1150" pos:column="67"/></expr_stmt>
          <if pos:line="1151" pos:column="11">if <condition pos:line="1151" pos:column="14">(<expr><name pos:line="1151" pos:column="15">rrc<pos:position pos:line="1151" pos:column="18"/></name> <operator pos:line="1151" pos:column="19">!=<pos:position pos:line="1151" pos:column="21"/></operator> <name pos:line="1151" pos:column="22">MATCH_NOMATCH<pos:position pos:line="1151" pos:column="35"/></name></expr>)<pos:position pos:line="1151" pos:column="36"/></condition><then pos:line="1151" pos:column="36"> <block type="pseudo"><expr_stmt><expr><call><name pos:line="1151" pos:column="37">RRETURN<pos:position pos:line="1151" pos:column="44"/></name><argument_list pos:line="1151" pos:column="44">(<argument><expr><name pos:line="1151" pos:column="45">rrc<pos:position pos:line="1151" pos:column="48"/></name></expr></argument>)<pos:position pos:line="1151" pos:column="49"/></argument_list></call></expr>;<pos:position pos:line="1151" pos:column="50"/></expr_stmt></block></then></if>
          <expr_stmt><expr><name pos:line="1152" pos:column="11">eptr<pos:position pos:line="1152" pos:column="15"/></name> <operator pos:line="1152" pos:column="16">-=<pos:position pos:line="1152" pos:column="18"/></operator> <name pos:line="1152" pos:column="19">length<pos:position pos:line="1152" pos:column="25"/></name></expr>;<pos:position pos:line="1152" pos:column="26"/></expr_stmt>
          }<pos:position pos:line="1153" pos:column="12"/></block></while>
        <expr_stmt><expr><call><name pos:line="1154" pos:column="9">RRETURN<pos:position pos:line="1154" pos:column="16"/></name><argument_list pos:line="1154" pos:column="16">(<argument><expr><name pos:line="1154" pos:column="17">MATCH_NOMATCH<pos:position pos:line="1154" pos:column="30"/></name></expr></argument>)<pos:position pos:line="1154" pos:column="31"/></argument_list></call></expr>;<pos:position pos:line="1154" pos:column="32"/></expr_stmt>
        }<pos:position pos:line="1155" pos:column="10"/></block></else></if>
      }<pos:position pos:line="1156" pos:column="8"/></block>
    <comment type="block" pos:line="1157" pos:column="5">/* Control never gets here */</comment>



    <comment type="block" pos:line="1161" pos:column="5">/* Match a bit-mapped character class, possibly repeatedly. This op code is
    used when all the characters in the class have values in the range 0-255,
    and either the matching is caseful, or the characters are in the range
    0-127 when UTF-8 processing is enabled. The only difference between
    OP_CLASS and OP_NCLASS occurs when a data character outside the range is
    encountered.

    First, look past the end of the item to see if there is repeat information
    following. Then obey similar code to character type repeats - written out
    again for speed. */</comment>

    <case pos:line="1172" pos:column="5">case <expr><name pos:line="1172" pos:column="10">OP_NCLASS<pos:position pos:line="1172" pos:column="19"/></name></expr>:<pos:position pos:line="1172" pos:column="20"/></case>
    <case pos:line="1173" pos:column="5">case <expr><name pos:line="1173" pos:column="10">OP_CLASS<pos:position pos:line="1173" pos:column="18"/></name></expr>:<pos:position pos:line="1173" pos:column="19"/></case>
      <block pos:line="1174" pos:column="7">{
      <expr_stmt><expr><name pos:line="1175" pos:column="7">data<pos:position pos:line="1175" pos:column="11"/></name> <operator pos:line="1175" pos:column="12">=<pos:position pos:line="1175" pos:column="13"/></operator> <name pos:line="1175" pos:column="14">ecode<pos:position pos:line="1175" pos:column="19"/></name> <operator pos:line="1175" pos:column="20">+<pos:position pos:line="1175" pos:column="21"/></operator> <literal type="number" pos:line="1175" pos:column="22">1<pos:position pos:line="1175" pos:column="23"/></literal></expr>;<pos:position pos:line="1175" pos:column="24"/></expr_stmt>                <comment type="block" pos:line="1175" pos:column="40">/* Save for matching */</comment>
      <expr_stmt><expr><name pos:line="1176" pos:column="7">ecode<pos:position pos:line="1176" pos:column="12"/></name> <operator pos:line="1176" pos:column="13">+=<pos:position pos:line="1176" pos:column="15"/></operator> <literal type="number" pos:line="1176" pos:column="16">33<pos:position pos:line="1176" pos:column="18"/></literal></expr>;<pos:position pos:line="1176" pos:column="19"/></expr_stmt>                     <comment type="block" pos:line="1176" pos:column="40">/* Advance past the item */</comment>

      <switch pos:line="1178" pos:column="7">switch <condition pos:line="1178" pos:column="14">(<expr><operator pos:line="1178" pos:column="15">*<pos:position pos:line="1178" pos:column="16"/></operator><name pos:line="1178" pos:column="16">ecode<pos:position pos:line="1178" pos:column="21"/></name></expr>)<pos:position pos:line="1178" pos:column="22"/></condition>
        <block pos:line="1179" pos:column="9">{
        <case pos:line="1180" pos:column="9">case <expr><name pos:line="1180" pos:column="14">OP_CRSTAR<pos:position pos:line="1180" pos:column="23"/></name></expr>:<pos:position pos:line="1180" pos:column="24"/></case>
        <case pos:line="1181" pos:column="9">case <expr><name pos:line="1181" pos:column="14">OP_CRMINSTAR<pos:position pos:line="1181" pos:column="26"/></name></expr>:<pos:position pos:line="1181" pos:column="27"/></case>
        <case pos:line="1182" pos:column="9">case <expr><name pos:line="1182" pos:column="14">OP_CRPLUS<pos:position pos:line="1182" pos:column="23"/></name></expr>:<pos:position pos:line="1182" pos:column="24"/></case>
        <case pos:line="1183" pos:column="9">case <expr><name pos:line="1183" pos:column="14">OP_CRMINPLUS<pos:position pos:line="1183" pos:column="26"/></name></expr>:<pos:position pos:line="1183" pos:column="27"/></case>
        <case pos:line="1184" pos:column="9">case <expr><name pos:line="1184" pos:column="14">OP_CRQUERY<pos:position pos:line="1184" pos:column="24"/></name></expr>:<pos:position pos:line="1184" pos:column="25"/></case>
        <case pos:line="1185" pos:column="9">case <expr><name pos:line="1185" pos:column="14">OP_CRMINQUERY<pos:position pos:line="1185" pos:column="27"/></name></expr>:<pos:position pos:line="1185" pos:column="28"/></case>
        <expr_stmt><expr><name pos:line="1186" pos:column="9">c<pos:position pos:line="1186" pos:column="10"/></name> <operator pos:line="1186" pos:column="11">=<pos:position pos:line="1186" pos:column="12"/></operator> <operator pos:line="1186" pos:column="13">*<pos:position pos:line="1186" pos:column="14"/></operator><name pos:line="1186" pos:column="14">ecode<pos:position pos:line="1186" pos:column="19"/></name><operator pos:line="1186" pos:column="19">++<pos:position pos:line="1186" pos:column="21"/></operator> <operator pos:line="1186" pos:column="22">-<pos:position pos:line="1186" pos:column="23"/></operator> <name pos:line="1186" pos:column="24">OP_CRSTAR<pos:position pos:line="1186" pos:column="33"/></name></expr>;<pos:position pos:line="1186" pos:column="34"/></expr_stmt>
        <expr_stmt><expr><name pos:line="1187" pos:column="9">minimize<pos:position pos:line="1187" pos:column="17"/></name> <operator pos:line="1187" pos:column="18">=<pos:position pos:line="1187" pos:column="19"/></operator> <operator pos:line="1187" pos:column="20">(<pos:position pos:line="1187" pos:column="21"/></operator><name pos:line="1187" pos:column="21">c<pos:position pos:line="1187" pos:column="22"/></name> <operator pos:line="1187" pos:column="23">&amp;<pos:position pos:line="1187" pos:column="28"/></operator> <literal type="number" pos:line="1187" pos:column="25">1<pos:position pos:line="1187" pos:column="26"/></literal><operator pos:line="1187" pos:column="26">)<pos:position pos:line="1187" pos:column="27"/></operator> <operator pos:line="1187" pos:column="28">!=<pos:position pos:line="1187" pos:column="30"/></operator> <literal type="number" pos:line="1187" pos:column="31">0<pos:position pos:line="1187" pos:column="32"/></literal></expr>;<pos:position pos:line="1187" pos:column="33"/></expr_stmt>
        <expr_stmt><expr><name pos:line="1188" pos:column="9">min<pos:position pos:line="1188" pos:column="12"/></name> <operator pos:line="1188" pos:column="13">=<pos:position pos:line="1188" pos:column="14"/></operator> <name><name pos:line="1188" pos:column="15">rep_min<pos:position pos:line="1188" pos:column="22"/></name><index pos:line="1188" pos:column="22">[<expr><name pos:line="1188" pos:column="23">c<pos:position pos:line="1188" pos:column="24"/></name></expr>]<pos:position pos:line="1188" pos:column="25"/></index></name></expr>;<pos:position pos:line="1188" pos:column="26"/></expr_stmt>                 <comment type="block" pos:line="1188" pos:column="43">/* Pick up values from tables; */</comment>
        <expr_stmt><expr><name pos:line="1189" pos:column="9">max<pos:position pos:line="1189" pos:column="12"/></name> <operator pos:line="1189" pos:column="13">=<pos:position pos:line="1189" pos:column="14"/></operator> <name><name pos:line="1189" pos:column="15">rep_max<pos:position pos:line="1189" pos:column="22"/></name><index pos:line="1189" pos:column="22">[<expr><name pos:line="1189" pos:column="23">c<pos:position pos:line="1189" pos:column="24"/></name></expr>]<pos:position pos:line="1189" pos:column="25"/></index></name></expr>;<pos:position pos:line="1189" pos:column="26"/></expr_stmt>                 <comment type="block" pos:line="1189" pos:column="43">/* zero for max =&gt; infinity */</comment>
        <if pos:line="1190" pos:column="9">if <condition pos:line="1190" pos:column="12">(<expr><name pos:line="1190" pos:column="13">max<pos:position pos:line="1190" pos:column="16"/></name> <operator pos:line="1190" pos:column="17">==<pos:position pos:line="1190" pos:column="19"/></operator> <literal type="number" pos:line="1190" pos:column="20">0<pos:position pos:line="1190" pos:column="21"/></literal></expr>)<pos:position pos:line="1190" pos:column="22"/></condition><then pos:line="1190" pos:column="22"> <block type="pseudo"><expr_stmt><expr><name pos:line="1190" pos:column="23">max<pos:position pos:line="1190" pos:column="26"/></name> <operator pos:line="1190" pos:column="27">=<pos:position pos:line="1190" pos:column="28"/></operator> <name pos:line="1190" pos:column="29">INT_MAX<pos:position pos:line="1190" pos:column="36"/></name></expr>;<pos:position pos:line="1190" pos:column="37"/></expr_stmt></block></then></if>
        <break pos:line="1191" pos:column="9">break;<pos:position pos:line="1191" pos:column="15"/></break>

        <case pos:line="1193" pos:column="9">case <expr><name pos:line="1193" pos:column="14">OP_CRRANGE<pos:position pos:line="1193" pos:column="24"/></name></expr>:<pos:position pos:line="1193" pos:column="25"/></case>
        <case pos:line="1194" pos:column="9">case <expr><name pos:line="1194" pos:column="14">OP_CRMINRANGE<pos:position pos:line="1194" pos:column="27"/></name></expr>:<pos:position pos:line="1194" pos:column="28"/></case>
        <expr_stmt><expr><name pos:line="1195" pos:column="9">minimize<pos:position pos:line="1195" pos:column="17"/></name> <operator pos:line="1195" pos:column="18">=<pos:position pos:line="1195" pos:column="19"/></operator> <operator pos:line="1195" pos:column="20">(<pos:position pos:line="1195" pos:column="21"/></operator><operator pos:line="1195" pos:column="21">*<pos:position pos:line="1195" pos:column="22"/></operator><name pos:line="1195" pos:column="22">ecode<pos:position pos:line="1195" pos:column="27"/></name> <operator pos:line="1195" pos:column="28">==<pos:position pos:line="1195" pos:column="30"/></operator> <name pos:line="1195" pos:column="31">OP_CRMINRANGE<pos:position pos:line="1195" pos:column="44"/></name><operator pos:line="1195" pos:column="44">)<pos:position pos:line="1195" pos:column="45"/></operator></expr>;<pos:position pos:line="1195" pos:column="46"/></expr_stmt>
        <expr_stmt><expr><name pos:line="1196" pos:column="9">min<pos:position pos:line="1196" pos:column="12"/></name> <operator pos:line="1196" pos:column="13">=<pos:position pos:line="1196" pos:column="14"/></operator> <call><name pos:line="1196" pos:column="15">GET2<pos:position pos:line="1196" pos:column="19"/></name><argument_list pos:line="1196" pos:column="19">(<argument><expr><name pos:line="1196" pos:column="20">ecode<pos:position pos:line="1196" pos:column="25"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="1196" pos:column="27">1<pos:position pos:line="1196" pos:column="28"/></literal></expr></argument>)<pos:position pos:line="1196" pos:column="29"/></argument_list></call></expr>;<pos:position pos:line="1196" pos:column="30"/></expr_stmt>
        <expr_stmt><expr><name pos:line="1197" pos:column="9">max<pos:position pos:line="1197" pos:column="12"/></name> <operator pos:line="1197" pos:column="13">=<pos:position pos:line="1197" pos:column="14"/></operator> <call><name pos:line="1197" pos:column="15">GET2<pos:position pos:line="1197" pos:column="19"/></name><argument_list pos:line="1197" pos:column="19">(<argument><expr><name pos:line="1197" pos:column="20">ecode<pos:position pos:line="1197" pos:column="25"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="1197" pos:column="27">3<pos:position pos:line="1197" pos:column="28"/></literal></expr></argument>)<pos:position pos:line="1197" pos:column="29"/></argument_list></call></expr>;<pos:position pos:line="1197" pos:column="30"/></expr_stmt>
        <if pos:line="1198" pos:column="9">if <condition pos:line="1198" pos:column="12">(<expr><name pos:line="1198" pos:column="13">max<pos:position pos:line="1198" pos:column="16"/></name> <operator pos:line="1198" pos:column="17">==<pos:position pos:line="1198" pos:column="19"/></operator> <literal type="number" pos:line="1198" pos:column="20">0<pos:position pos:line="1198" pos:column="21"/></literal></expr>)<pos:position pos:line="1198" pos:column="22"/></condition><then pos:line="1198" pos:column="22"> <block type="pseudo"><expr_stmt><expr><name pos:line="1198" pos:column="23">max<pos:position pos:line="1198" pos:column="26"/></name> <operator pos:line="1198" pos:column="27">=<pos:position pos:line="1198" pos:column="28"/></operator> <name pos:line="1198" pos:column="29">INT_MAX<pos:position pos:line="1198" pos:column="36"/></name></expr>;<pos:position pos:line="1198" pos:column="37"/></expr_stmt></block></then></if>
        <expr_stmt><expr><name pos:line="1199" pos:column="9">ecode<pos:position pos:line="1199" pos:column="14"/></name> <operator pos:line="1199" pos:column="15">+=<pos:position pos:line="1199" pos:column="17"/></operator> <literal type="number" pos:line="1199" pos:column="18">5<pos:position pos:line="1199" pos:column="19"/></literal></expr>;<pos:position pos:line="1199" pos:column="20"/></expr_stmt>
        <break pos:line="1200" pos:column="9">break;<pos:position pos:line="1200" pos:column="15"/></break>

        <default pos:line="1202" pos:column="9">default:<pos:position pos:line="1202" pos:column="17"/></default>               <comment type="block" pos:line="1202" pos:column="32">/* No repeat follows */</comment>
        <expr_stmt><expr><name pos:line="1203" pos:column="9">min<pos:position pos:line="1203" pos:column="12"/></name> <operator pos:line="1203" pos:column="13">=<pos:position pos:line="1203" pos:column="14"/></operator> <name pos:line="1203" pos:column="15">max<pos:position pos:line="1203" pos:column="18"/></name> <operator pos:line="1203" pos:column="19">=<pos:position pos:line="1203" pos:column="20"/></operator> <literal type="number" pos:line="1203" pos:column="21">1<pos:position pos:line="1203" pos:column="22"/></literal></expr>;<pos:position pos:line="1203" pos:column="23"/></expr_stmt>
        <break pos:line="1204" pos:column="9">break;<pos:position pos:line="1204" pos:column="15"/></break>
        }<pos:position pos:line="1205" pos:column="10"/></block></switch>

      <comment type="block" pos:line="1207" pos:column="7">/* First, ensure the minimum number of matches are present. */</comment>

<cpp:ifdef pos:line="1209" pos:column="1">#<cpp:directive pos:line="1209" pos:column="2">ifdef<pos:position pos:line="1209" pos:column="7"/></cpp:directive> <name pos:line="1209" pos:column="8">SUPPORT_UTF8<pos:position pos:line="1209" pos:column="20"/></name></cpp:ifdef>
      <comment type="block" pos:line="1210" pos:column="7">/* UTF-8 mode */</comment>
      <if pos:line="1211" pos:column="7">if <condition pos:line="1211" pos:column="10">(<expr><name><name pos:line="1211" pos:column="11">md<pos:position pos:line="1211" pos:column="13"/></name><operator pos:line="1211" pos:column="13">-&gt;<pos:position pos:line="1211" pos:column="18"/></operator><name pos:line="1211" pos:column="15">utf8<pos:position pos:line="1211" pos:column="19"/></name></name></expr>)<pos:position pos:line="1211" pos:column="20"/></condition><then pos:line="1211" pos:column="20">
        <block pos:line="1212" pos:column="9">{
        <for pos:line="1213" pos:column="9">for <control pos:line="1213" pos:column="13">(<init><expr><name pos:line="1213" pos:column="14">i<pos:position pos:line="1213" pos:column="15"/></name> <operator pos:line="1213" pos:column="16">=<pos:position pos:line="1213" pos:column="17"/></operator> <literal type="number" pos:line="1213" pos:column="18">1<pos:position pos:line="1213" pos:column="19"/></literal></expr>;<pos:position pos:line="1213" pos:column="20"/></init> <condition><expr><name pos:line="1213" pos:column="21">i<pos:position pos:line="1213" pos:column="22"/></name> <operator pos:line="1213" pos:column="23">&lt;=<pos:position pos:line="1213" pos:column="28"/></operator> <name pos:line="1213" pos:column="26">min<pos:position pos:line="1213" pos:column="29"/></name></expr>;<pos:position pos:line="1213" pos:column="30"/></condition> <incr><expr><name pos:line="1213" pos:column="31">i<pos:position pos:line="1213" pos:column="32"/></name><operator pos:line="1213" pos:column="32">++<pos:position pos:line="1213" pos:column="34"/></operator></expr></incr>)<pos:position pos:line="1213" pos:column="35"/></control>
          <block pos:line="1214" pos:column="11">{
          <if pos:line="1215" pos:column="11">if <condition pos:line="1215" pos:column="14">(<expr><name pos:line="1215" pos:column="15">eptr<pos:position pos:line="1215" pos:column="19"/></name> <operator pos:line="1215" pos:column="20">&gt;=<pos:position pos:line="1215" pos:column="25"/></operator> <name><name pos:line="1215" pos:column="23">md<pos:position pos:line="1215" pos:column="25"/></name><operator pos:line="1215" pos:column="25">-&gt;<pos:position pos:line="1215" pos:column="30"/></operator><name pos:line="1215" pos:column="27">end_subject<pos:position pos:line="1215" pos:column="38"/></name></name></expr>)<pos:position pos:line="1215" pos:column="39"/></condition><then pos:line="1215" pos:column="39"> <block type="pseudo"><expr_stmt><expr><call><name pos:line="1215" pos:column="40">RRETURN<pos:position pos:line="1215" pos:column="47"/></name><argument_list pos:line="1215" pos:column="47">(<argument><expr><name pos:line="1215" pos:column="48">MATCH_NOMATCH<pos:position pos:line="1215" pos:column="61"/></name></expr></argument>)<pos:position pos:line="1215" pos:column="62"/></argument_list></call></expr>;<pos:position pos:line="1215" pos:column="63"/></expr_stmt></block></then></if>
          <expr_stmt><expr><call><name pos:line="1216" pos:column="11">GETCHARINC<pos:position pos:line="1216" pos:column="21"/></name><argument_list pos:line="1216" pos:column="21">(<argument><expr><name pos:line="1216" pos:column="22">c<pos:position pos:line="1216" pos:column="23"/></name></expr></argument>, <argument><expr><name pos:line="1216" pos:column="25">eptr<pos:position pos:line="1216" pos:column="29"/></name></expr></argument>)<pos:position pos:line="1216" pos:column="30"/></argument_list></call></expr>;<pos:position pos:line="1216" pos:column="31"/></expr_stmt>
          <if pos:line="1217" pos:column="11">if <condition pos:line="1217" pos:column="14">(<expr><name pos:line="1217" pos:column="15">c<pos:position pos:line="1217" pos:column="16"/></name> <operator pos:line="1217" pos:column="17">&gt;<pos:position pos:line="1217" pos:column="21"/></operator> <literal type="number" pos:line="1217" pos:column="19">255<pos:position pos:line="1217" pos:column="22"/></literal></expr>)<pos:position pos:line="1217" pos:column="23"/></condition><then pos:line="1217" pos:column="23">
            <block pos:line="1218" pos:column="13">{
            <if pos:line="1219" pos:column="13">if <condition pos:line="1219" pos:column="16">(<expr><name pos:line="1219" pos:column="17">op<pos:position pos:line="1219" pos:column="19"/></name> <operator pos:line="1219" pos:column="20">==<pos:position pos:line="1219" pos:column="22"/></operator> <name pos:line="1219" pos:column="23">OP_CLASS<pos:position pos:line="1219" pos:column="31"/></name></expr>)<pos:position pos:line="1219" pos:column="32"/></condition><then pos:line="1219" pos:column="32"> <block type="pseudo"><expr_stmt><expr><call><name pos:line="1219" pos:column="33">RRETURN<pos:position pos:line="1219" pos:column="40"/></name><argument_list pos:line="1219" pos:column="40">(<argument><expr><name pos:line="1219" pos:column="41">MATCH_NOMATCH<pos:position pos:line="1219" pos:column="54"/></name></expr></argument>)<pos:position pos:line="1219" pos:column="55"/></argument_list></call></expr>;<pos:position pos:line="1219" pos:column="56"/></expr_stmt></block></then></if>
            }<pos:position pos:line="1220" pos:column="14"/></block></then>
          <else pos:line="1221" pos:column="11">else
            <block pos:line="1222" pos:column="13">{
            <if pos:line="1223" pos:column="13">if <condition pos:line="1223" pos:column="16">(<expr><operator pos:line="1223" pos:column="17">(<pos:position pos:line="1223" pos:column="18"/></operator><name><name pos:line="1223" pos:column="18">data<pos:position pos:line="1223" pos:column="22"/></name><index pos:line="1223" pos:column="22">[<expr><name pos:line="1223" pos:column="23">c<pos:position pos:line="1223" pos:column="24"/></name><operator pos:line="1223" pos:column="24">/<pos:position pos:line="1223" pos:column="25"/></operator><literal type="number" pos:line="1223" pos:column="25">8<pos:position pos:line="1223" pos:column="26"/></literal></expr>]<pos:position pos:line="1223" pos:column="27"/></index></name> <operator pos:line="1223" pos:column="28">&amp;<pos:position pos:line="1223" pos:column="33"/></operator> <operator pos:line="1223" pos:column="30">(<pos:position pos:line="1223" pos:column="31"/></operator><literal type="number" pos:line="1223" pos:column="31">1<pos:position pos:line="1223" pos:column="32"/></literal> <operator pos:line="1223" pos:column="33">&lt;&lt;<pos:position pos:line="1223" pos:column="41"/></operator> <operator pos:line="1223" pos:column="36">(<pos:position pos:line="1223" pos:column="37"/></operator><name pos:line="1223" pos:column="37">c<pos:position pos:line="1223" pos:column="38"/></name><operator pos:line="1223" pos:column="38">&amp;<pos:position pos:line="1223" pos:column="43"/></operator><literal type="number" pos:line="1223" pos:column="39">7<pos:position pos:line="1223" pos:column="40"/></literal><operator pos:line="1223" pos:column="40">)<pos:position pos:line="1223" pos:column="41"/></operator><operator pos:line="1223" pos:column="41">)<pos:position pos:line="1223" pos:column="42"/></operator><operator pos:line="1223" pos:column="42">)<pos:position pos:line="1223" pos:column="43"/></operator> <operator pos:line="1223" pos:column="44">==<pos:position pos:line="1223" pos:column="46"/></operator> <literal type="number" pos:line="1223" pos:column="47">0<pos:position pos:line="1223" pos:column="48"/></literal></expr>)<pos:position pos:line="1223" pos:column="49"/></condition><then pos:line="1223" pos:column="49"> <block type="pseudo"><expr_stmt><expr><call><name pos:line="1223" pos:column="50">RRETURN<pos:position pos:line="1223" pos:column="57"/></name><argument_list pos:line="1223" pos:column="57">(<argument><expr><name pos:line="1223" pos:column="58">MATCH_NOMATCH<pos:position pos:line="1223" pos:column="71"/></name></expr></argument>)<pos:position pos:line="1223" pos:column="72"/></argument_list></call></expr>;<pos:position pos:line="1223" pos:column="73"/></expr_stmt></block></then></if>
            }<pos:position pos:line="1224" pos:column="14"/></block></else></if>
          }<pos:position pos:line="1225" pos:column="12"/></block></for>
        }<pos:position pos:line="1226" pos:column="10"/></block></then>
      <else pos:line="1227" pos:column="7">else
<cpp:endif pos:line="1228" pos:column="1">#<cpp:directive pos:line="1228" pos:column="2">endif<pos:position pos:line="1228" pos:column="7"/></cpp:directive></cpp:endif>
      <comment type="block" pos:line="1229" pos:column="7">/* Not UTF-8 mode */</comment>
        <block pos:line="1230" pos:column="9">{
        <for pos:line="1231" pos:column="9">for <control pos:line="1231" pos:column="13">(<init><expr><name pos:line="1231" pos:column="14">i<pos:position pos:line="1231" pos:column="15"/></name> <operator pos:line="1231" pos:column="16">=<pos:position pos:line="1231" pos:column="17"/></operator> <literal type="number" pos:line="1231" pos:column="18">1<pos:position pos:line="1231" pos:column="19"/></literal></expr>;<pos:position pos:line="1231" pos:column="20"/></init> <condition><expr><name pos:line="1231" pos:column="21">i<pos:position pos:line="1231" pos:column="22"/></name> <operator pos:line="1231" pos:column="23">&lt;=<pos:position pos:line="1231" pos:column="28"/></operator> <name pos:line="1231" pos:column="26">min<pos:position pos:line="1231" pos:column="29"/></name></expr>;<pos:position pos:line="1231" pos:column="30"/></condition> <incr><expr><name pos:line="1231" pos:column="31">i<pos:position pos:line="1231" pos:column="32"/></name><operator pos:line="1231" pos:column="32">++<pos:position pos:line="1231" pos:column="34"/></operator></expr></incr>)<pos:position pos:line="1231" pos:column="35"/></control>
          <block pos:line="1232" pos:column="11">{
          <if pos:line="1233" pos:column="11">if <condition pos:line="1233" pos:column="14">(<expr><name pos:line="1233" pos:column="15">eptr<pos:position pos:line="1233" pos:column="19"/></name> <operator pos:line="1233" pos:column="20">&gt;=<pos:position pos:line="1233" pos:column="25"/></operator> <name><name pos:line="1233" pos:column="23">md<pos:position pos:line="1233" pos:column="25"/></name><operator pos:line="1233" pos:column="25">-&gt;<pos:position pos:line="1233" pos:column="30"/></operator><name pos:line="1233" pos:column="27">end_subject<pos:position pos:line="1233" pos:column="38"/></name></name></expr>)<pos:position pos:line="1233" pos:column="39"/></condition><then pos:line="1233" pos:column="39"> <block type="pseudo"><expr_stmt><expr><call><name pos:line="1233" pos:column="40">RRETURN<pos:position pos:line="1233" pos:column="47"/></name><argument_list pos:line="1233" pos:column="47">(<argument><expr><name pos:line="1233" pos:column="48">MATCH_NOMATCH<pos:position pos:line="1233" pos:column="61"/></name></expr></argument>)<pos:position pos:line="1233" pos:column="62"/></argument_list></call></expr>;<pos:position pos:line="1233" pos:column="63"/></expr_stmt></block></then></if>
          <expr_stmt><expr><name pos:line="1234" pos:column="11">c<pos:position pos:line="1234" pos:column="12"/></name> <operator pos:line="1234" pos:column="13">=<pos:position pos:line="1234" pos:column="14"/></operator> <operator pos:line="1234" pos:column="15">*<pos:position pos:line="1234" pos:column="16"/></operator><name pos:line="1234" pos:column="16">eptr<pos:position pos:line="1234" pos:column="20"/></name><operator pos:line="1234" pos:column="20">++<pos:position pos:line="1234" pos:column="22"/></operator></expr>;<pos:position pos:line="1234" pos:column="23"/></expr_stmt>
          <if pos:line="1235" pos:column="11">if <condition pos:line="1235" pos:column="14">(<expr><operator pos:line="1235" pos:column="15">(<pos:position pos:line="1235" pos:column="16"/></operator><name><name pos:line="1235" pos:column="16">data<pos:position pos:line="1235" pos:column="20"/></name><index pos:line="1235" pos:column="20">[<expr><name pos:line="1235" pos:column="21">c<pos:position pos:line="1235" pos:column="22"/></name><operator pos:line="1235" pos:column="22">/<pos:position pos:line="1235" pos:column="23"/></operator><literal type="number" pos:line="1235" pos:column="23">8<pos:position pos:line="1235" pos:column="24"/></literal></expr>]<pos:position pos:line="1235" pos:column="25"/></index></name> <operator pos:line="1235" pos:column="26">&amp;<pos:position pos:line="1235" pos:column="31"/></operator> <operator pos:line="1235" pos:column="28">(<pos:position pos:line="1235" pos:column="29"/></operator><literal type="number" pos:line="1235" pos:column="29">1<pos:position pos:line="1235" pos:column="30"/></literal> <operator pos:line="1235" pos:column="31">&lt;&lt;<pos:position pos:line="1235" pos:column="39"/></operator> <operator pos:line="1235" pos:column="34">(<pos:position pos:line="1235" pos:column="35"/></operator><name pos:line="1235" pos:column="35">c<pos:position pos:line="1235" pos:column="36"/></name><operator pos:line="1235" pos:column="36">&amp;<pos:position pos:line="1235" pos:column="41"/></operator><literal type="number" pos:line="1235" pos:column="37">7<pos:position pos:line="1235" pos:column="38"/></literal><operator pos:line="1235" pos:column="38">)<pos:position pos:line="1235" pos:column="39"/></operator><operator pos:line="1235" pos:column="39">)<pos:position pos:line="1235" pos:column="40"/></operator><operator pos:line="1235" pos:column="40">)<pos:position pos:line="1235" pos:column="41"/></operator> <operator pos:line="1235" pos:column="42">==<pos:position pos:line="1235" pos:column="44"/></operator> <literal type="number" pos:line="1235" pos:column="45">0<pos:position pos:line="1235" pos:column="46"/></literal></expr>)<pos:position pos:line="1235" pos:column="47"/></condition><then pos:line="1235" pos:column="47"> <block type="pseudo"><expr_stmt><expr><call><name pos:line="1235" pos:column="48">RRETURN<pos:position pos:line="1235" pos:column="55"/></name><argument_list pos:line="1235" pos:column="55">(<argument><expr><name pos:line="1235" pos:column="56">MATCH_NOMATCH<pos:position pos:line="1235" pos:column="69"/></name></expr></argument>)<pos:position pos:line="1235" pos:column="70"/></argument_list></call></expr>;<pos:position pos:line="1235" pos:column="71"/></expr_stmt></block></then></if>
          }<pos:position pos:line="1236" pos:column="12"/></block></for>
        }<pos:position pos:line="1237" pos:column="10"/></block></else></if>

      <comment type="block" pos:line="1239" pos:column="7">/* If max == min we can continue with the main loop without the
      need to recurse. */</comment>

      <if pos:line="1242" pos:column="7">if <condition pos:line="1242" pos:column="10">(<expr><name pos:line="1242" pos:column="11">min<pos:position pos:line="1242" pos:column="14"/></name> <operator pos:line="1242" pos:column="15">==<pos:position pos:line="1242" pos:column="17"/></operator> <name pos:line="1242" pos:column="18">max<pos:position pos:line="1242" pos:column="21"/></name></expr>)<pos:position pos:line="1242" pos:column="22"/></condition><then pos:line="1242" pos:column="22"> <block type="pseudo"><continue pos:line="1242" pos:column="23">continue;<pos:position pos:line="1242" pos:column="32"/></continue></block></then></if>

      <comment type="block" pos:line="1244" pos:column="7">/* If minimizing, keep testing the rest of the expression and advancing
      the pointer while it matches the class. */</comment>

      <if pos:line="1247" pos:column="7">if <condition pos:line="1247" pos:column="10">(<expr><name pos:line="1247" pos:column="11">minimize<pos:position pos:line="1247" pos:column="19"/></name></expr>)<pos:position pos:line="1247" pos:column="20"/></condition><then pos:line="1247" pos:column="20">
        <block pos:line="1248" pos:column="9">{
<cpp:ifdef pos:line="1249" pos:column="1">#<cpp:directive pos:line="1249" pos:column="2">ifdef<pos:position pos:line="1249" pos:column="7"/></cpp:directive> <name pos:line="1249" pos:column="8">SUPPORT_UTF8<pos:position pos:line="1249" pos:column="20"/></name></cpp:ifdef>
        <comment type="block" pos:line="1250" pos:column="9">/* UTF-8 mode */</comment>
        <if pos:line="1251" pos:column="9">if <condition pos:line="1251" pos:column="12">(<expr><name><name pos:line="1251" pos:column="13">md<pos:position pos:line="1251" pos:column="15"/></name><operator pos:line="1251" pos:column="15">-&gt;<pos:position pos:line="1251" pos:column="20"/></operator><name pos:line="1251" pos:column="17">utf8<pos:position pos:line="1251" pos:column="21"/></name></name></expr>)<pos:position pos:line="1251" pos:column="22"/></condition><then pos:line="1251" pos:column="22">
          <block pos:line="1252" pos:column="11">{
          <for pos:line="1253" pos:column="11">for <control pos:line="1253" pos:column="15">(<init><expr><name pos:line="1253" pos:column="16">fi<pos:position pos:line="1253" pos:column="18"/></name> <operator pos:line="1253" pos:column="19">=<pos:position pos:line="1253" pos:column="20"/></operator> <name pos:line="1253" pos:column="21">min<pos:position pos:line="1253" pos:column="24"/></name></expr>;<pos:position pos:line="1253" pos:column="25"/></init><condition pos:line="1253" pos:column="25">;<pos:position pos:line="1253" pos:column="26"/></condition> <incr><expr><name pos:line="1253" pos:column="27">fi<pos:position pos:line="1253" pos:column="29"/></name><operator pos:line="1253" pos:column="29">++<pos:position pos:line="1253" pos:column="31"/></operator></expr></incr>)<pos:position pos:line="1253" pos:column="32"/></control>
            <block pos:line="1254" pos:column="13">{
            <expr_stmt><expr><call><name pos:line="1255" pos:column="13">RMATCH<pos:position pos:line="1255" pos:column="19"/></name><argument_list pos:line="1255" pos:column="19">(<argument><expr><name pos:line="1255" pos:column="20">rrc<pos:position pos:line="1255" pos:column="23"/></name></expr></argument>, <argument><expr><name pos:line="1255" pos:column="25">eptr<pos:position pos:line="1255" pos:column="29"/></name></expr></argument>, <argument><expr><name pos:line="1255" pos:column="31">ecode<pos:position pos:line="1255" pos:column="36"/></name></expr></argument>, <argument><expr><name pos:line="1255" pos:column="38">offset_top<pos:position pos:line="1255" pos:column="48"/></name></expr></argument>, <argument><expr><name pos:line="1255" pos:column="50">md<pos:position pos:line="1255" pos:column="52"/></name></expr></argument>, <argument><expr><name pos:line="1255" pos:column="54">ims<pos:position pos:line="1255" pos:column="57"/></name></expr></argument>, <argument><expr><name pos:line="1255" pos:column="59">eptrb<pos:position pos:line="1255" pos:column="64"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="1255" pos:column="66">0<pos:position pos:line="1255" pos:column="67"/></literal></expr></argument>)<pos:position pos:line="1255" pos:column="68"/></argument_list></call></expr>;<pos:position pos:line="1255" pos:column="69"/></expr_stmt>
            <if pos:line="1256" pos:column="13">if <condition pos:line="1256" pos:column="16">(<expr><name pos:line="1256" pos:column="17">rrc<pos:position pos:line="1256" pos:column="20"/></name> <operator pos:line="1256" pos:column="21">!=<pos:position pos:line="1256" pos:column="23"/></operator> <name pos:line="1256" pos:column="24">MATCH_NOMATCH<pos:position pos:line="1256" pos:column="37"/></name></expr>)<pos:position pos:line="1256" pos:column="38"/></condition><then pos:line="1256" pos:column="38"> <block type="pseudo"><expr_stmt><expr><call><name pos:line="1256" pos:column="39">RRETURN<pos:position pos:line="1256" pos:column="46"/></name><argument_list pos:line="1256" pos:column="46">(<argument><expr><name pos:line="1256" pos:column="47">rrc<pos:position pos:line="1256" pos:column="50"/></name></expr></argument>)<pos:position pos:line="1256" pos:column="51"/></argument_list></call></expr>;<pos:position pos:line="1256" pos:column="52"/></expr_stmt></block></then></if>
            <if pos:line="1257" pos:column="13">if <condition pos:line="1257" pos:column="16">(<expr><name pos:line="1257" pos:column="17">fi<pos:position pos:line="1257" pos:column="19"/></name> <operator pos:line="1257" pos:column="20">&gt;=<pos:position pos:line="1257" pos:column="25"/></operator> <name pos:line="1257" pos:column="23">max<pos:position pos:line="1257" pos:column="26"/></name> <operator pos:line="1257" pos:column="27">||<pos:position pos:line="1257" pos:column="29"/></operator> <name pos:line="1257" pos:column="30">eptr<pos:position pos:line="1257" pos:column="34"/></name> <operator pos:line="1257" pos:column="35">&gt;=<pos:position pos:line="1257" pos:column="40"/></operator> <name><name pos:line="1257" pos:column="38">md<pos:position pos:line="1257" pos:column="40"/></name><operator pos:line="1257" pos:column="40">-&gt;<pos:position pos:line="1257" pos:column="45"/></operator><name pos:line="1257" pos:column="42">end_subject<pos:position pos:line="1257" pos:column="53"/></name></name></expr>)<pos:position pos:line="1257" pos:column="54"/></condition><then pos:line="1257" pos:column="54"> <block type="pseudo"><expr_stmt><expr><call><name pos:line="1257" pos:column="55">RRETURN<pos:position pos:line="1257" pos:column="62"/></name><argument_list pos:line="1257" pos:column="62">(<argument><expr><name pos:line="1257" pos:column="63">MATCH_NOMATCH<pos:position pos:line="1257" pos:column="76"/></name></expr></argument>)<pos:position pos:line="1257" pos:column="77"/></argument_list></call></expr>;<pos:position pos:line="1257" pos:column="78"/></expr_stmt></block></then></if>
            <expr_stmt><expr><call><name pos:line="1258" pos:column="13">GETCHARINC<pos:position pos:line="1258" pos:column="23"/></name><argument_list pos:line="1258" pos:column="23">(<argument><expr><name pos:line="1258" pos:column="24">c<pos:position pos:line="1258" pos:column="25"/></name></expr></argument>, <argument><expr><name pos:line="1258" pos:column="27">eptr<pos:position pos:line="1258" pos:column="31"/></name></expr></argument>)<pos:position pos:line="1258" pos:column="32"/></argument_list></call></expr>;<pos:position pos:line="1258" pos:column="33"/></expr_stmt>
            <if pos:line="1259" pos:column="13">if <condition pos:line="1259" pos:column="16">(<expr><name pos:line="1259" pos:column="17">c<pos:position pos:line="1259" pos:column="18"/></name> <operator pos:line="1259" pos:column="19">&gt;<pos:position pos:line="1259" pos:column="23"/></operator> <literal type="number" pos:line="1259" pos:column="21">255<pos:position pos:line="1259" pos:column="24"/></literal></expr>)<pos:position pos:line="1259" pos:column="25"/></condition><then pos:line="1259" pos:column="25">
              <block pos:line="1260" pos:column="15">{
              <if pos:line="1261" pos:column="15">if <condition pos:line="1261" pos:column="18">(<expr><name pos:line="1261" pos:column="19">op<pos:position pos:line="1261" pos:column="21"/></name> <operator pos:line="1261" pos:column="22">==<pos:position pos:line="1261" pos:column="24"/></operator> <name pos:line="1261" pos:column="25">OP_CLASS<pos:position pos:line="1261" pos:column="33"/></name></expr>)<pos:position pos:line="1261" pos:column="34"/></condition><then pos:line="1261" pos:column="34"> <block type="pseudo"><expr_stmt><expr><call><name pos:line="1261" pos:column="35">RRETURN<pos:position pos:line="1261" pos:column="42"/></name><argument_list pos:line="1261" pos:column="42">(<argument><expr><name pos:line="1261" pos:column="43">MATCH_NOMATCH<pos:position pos:line="1261" pos:column="56"/></name></expr></argument>)<pos:position pos:line="1261" pos:column="57"/></argument_list></call></expr>;<pos:position pos:line="1261" pos:column="58"/></expr_stmt></block></then></if>
              }<pos:position pos:line="1262" pos:column="16"/></block></then>
            <else pos:line="1263" pos:column="13">else
              <block pos:line="1264" pos:column="15">{
              <if pos:line="1265" pos:column="15">if <condition pos:line="1265" pos:column="18">(<expr><operator pos:line="1265" pos:column="19">(<pos:position pos:line="1265" pos:column="20"/></operator><name><name pos:line="1265" pos:column="20">data<pos:position pos:line="1265" pos:column="24"/></name><index pos:line="1265" pos:column="24">[<expr><name pos:line="1265" pos:column="25">c<pos:position pos:line="1265" pos:column="26"/></name><operator pos:line="1265" pos:column="26">/<pos:position pos:line="1265" pos:column="27"/></operator><literal type="number" pos:line="1265" pos:column="27">8<pos:position pos:line="1265" pos:column="28"/></literal></expr>]<pos:position pos:line="1265" pos:column="29"/></index></name> <operator pos:line="1265" pos:column="30">&amp;<pos:position pos:line="1265" pos:column="35"/></operator> <operator pos:line="1265" pos:column="32">(<pos:position pos:line="1265" pos:column="33"/></operator><literal type="number" pos:line="1265" pos:column="33">1<pos:position pos:line="1265" pos:column="34"/></literal> <operator pos:line="1265" pos:column="35">&lt;&lt;<pos:position pos:line="1265" pos:column="43"/></operator> <operator pos:line="1265" pos:column="38">(<pos:position pos:line="1265" pos:column="39"/></operator><name pos:line="1265" pos:column="39">c<pos:position pos:line="1265" pos:column="40"/></name><operator pos:line="1265" pos:column="40">&amp;<pos:position pos:line="1265" pos:column="45"/></operator><literal type="number" pos:line="1265" pos:column="41">7<pos:position pos:line="1265" pos:column="42"/></literal><operator pos:line="1265" pos:column="42">)<pos:position pos:line="1265" pos:column="43"/></operator><operator pos:line="1265" pos:column="43">)<pos:position pos:line="1265" pos:column="44"/></operator><operator pos:line="1265" pos:column="44">)<pos:position pos:line="1265" pos:column="45"/></operator> <operator pos:line="1265" pos:column="46">==<pos:position pos:line="1265" pos:column="48"/></operator> <literal type="number" pos:line="1265" pos:column="49">0<pos:position pos:line="1265" pos:column="50"/></literal></expr>)<pos:position pos:line="1265" pos:column="51"/></condition><then pos:line="1265" pos:column="51"> <block type="pseudo"><expr_stmt><expr><call><name pos:line="1265" pos:column="52">RRETURN<pos:position pos:line="1265" pos:column="59"/></name><argument_list pos:line="1265" pos:column="59">(<argument><expr><name pos:line="1265" pos:column="60">MATCH_NOMATCH<pos:position pos:line="1265" pos:column="73"/></name></expr></argument>)<pos:position pos:line="1265" pos:column="74"/></argument_list></call></expr>;<pos:position pos:line="1265" pos:column="75"/></expr_stmt></block></then></if>
              }<pos:position pos:line="1266" pos:column="16"/></block></else></if>
            }<pos:position pos:line="1267" pos:column="14"/></block></for>
          }<pos:position pos:line="1268" pos:column="12"/></block></then>
        <else pos:line="1269" pos:column="9">else
<cpp:endif pos:line="1270" pos:column="1">#<cpp:directive pos:line="1270" pos:column="2">endif<pos:position pos:line="1270" pos:column="7"/></cpp:directive></cpp:endif>
        <comment type="block" pos:line="1271" pos:column="9">/* Not UTF-8 mode */</comment>
          <block pos:line="1272" pos:column="11">{
          <for pos:line="1273" pos:column="11">for <control pos:line="1273" pos:column="15">(<init><expr><name pos:line="1273" pos:column="16">fi<pos:position pos:line="1273" pos:column="18"/></name> <operator pos:line="1273" pos:column="19">=<pos:position pos:line="1273" pos:column="20"/></operator> <name pos:line="1273" pos:column="21">min<pos:position pos:line="1273" pos:column="24"/></name></expr>;<pos:position pos:line="1273" pos:column="25"/></init><condition pos:line="1273" pos:column="25">;<pos:position pos:line="1273" pos:column="26"/></condition> <incr><expr><name pos:line="1273" pos:column="27">fi<pos:position pos:line="1273" pos:column="29"/></name><operator pos:line="1273" pos:column="29">++<pos:position pos:line="1273" pos:column="31"/></operator></expr></incr>)<pos:position pos:line="1273" pos:column="32"/></control>
            <block pos:line="1274" pos:column="13">{
            <expr_stmt><expr><call><name pos:line="1275" pos:column="13">RMATCH<pos:position pos:line="1275" pos:column="19"/></name><argument_list pos:line="1275" pos:column="19">(<argument><expr><name pos:line="1275" pos:column="20">rrc<pos:position pos:line="1275" pos:column="23"/></name></expr></argument>, <argument><expr><name pos:line="1275" pos:column="25">eptr<pos:position pos:line="1275" pos:column="29"/></name></expr></argument>, <argument><expr><name pos:line="1275" pos:column="31">ecode<pos:position pos:line="1275" pos:column="36"/></name></expr></argument>, <argument><expr><name pos:line="1275" pos:column="38">offset_top<pos:position pos:line="1275" pos:column="48"/></name></expr></argument>, <argument><expr><name pos:line="1275" pos:column="50">md<pos:position pos:line="1275" pos:column="52"/></name></expr></argument>, <argument><expr><name pos:line="1275" pos:column="54">ims<pos:position pos:line="1275" pos:column="57"/></name></expr></argument>, <argument><expr><name pos:line="1275" pos:column="59">eptrb<pos:position pos:line="1275" pos:column="64"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="1275" pos:column="66">0<pos:position pos:line="1275" pos:column="67"/></literal></expr></argument>)<pos:position pos:line="1275" pos:column="68"/></argument_list></call></expr>;<pos:position pos:line="1275" pos:column="69"/></expr_stmt>
            <if pos:line="1276" pos:column="13">if <condition pos:line="1276" pos:column="16">(<expr><name pos:line="1276" pos:column="17">rrc<pos:position pos:line="1276" pos:column="20"/></name> <operator pos:line="1276" pos:column="21">!=<pos:position pos:line="1276" pos:column="23"/></operator> <name pos:line="1276" pos:column="24">MATCH_NOMATCH<pos:position pos:line="1276" pos:column="37"/></name></expr>)<pos:position pos:line="1276" pos:column="38"/></condition><then pos:line="1276" pos:column="38"> <block type="pseudo"><expr_stmt><expr><call><name pos:line="1276" pos:column="39">RRETURN<pos:position pos:line="1276" pos:column="46"/></name><argument_list pos:line="1276" pos:column="46">(<argument><expr><name pos:line="1276" pos:column="47">rrc<pos:position pos:line="1276" pos:column="50"/></name></expr></argument>)<pos:position pos:line="1276" pos:column="51"/></argument_list></call></expr>;<pos:position pos:line="1276" pos:column="52"/></expr_stmt></block></then></if>
            <if pos:line="1277" pos:column="13">if <condition pos:line="1277" pos:column="16">(<expr><name pos:line="1277" pos:column="17">fi<pos:position pos:line="1277" pos:column="19"/></name> <operator pos:line="1277" pos:column="20">&gt;=<pos:position pos:line="1277" pos:column="25"/></operator> <name pos:line="1277" pos:column="23">max<pos:position pos:line="1277" pos:column="26"/></name> <operator pos:line="1277" pos:column="27">||<pos:position pos:line="1277" pos:column="29"/></operator> <name pos:line="1277" pos:column="30">eptr<pos:position pos:line="1277" pos:column="34"/></name> <operator pos:line="1277" pos:column="35">&gt;=<pos:position pos:line="1277" pos:column="40"/></operator> <name><name pos:line="1277" pos:column="38">md<pos:position pos:line="1277" pos:column="40"/></name><operator pos:line="1277" pos:column="40">-&gt;<pos:position pos:line="1277" pos:column="45"/></operator><name pos:line="1277" pos:column="42">end_subject<pos:position pos:line="1277" pos:column="53"/></name></name></expr>)<pos:position pos:line="1277" pos:column="54"/></condition><then pos:line="1277" pos:column="54"> <block type="pseudo"><expr_stmt><expr><call><name pos:line="1277" pos:column="55">RRETURN<pos:position pos:line="1277" pos:column="62"/></name><argument_list pos:line="1277" pos:column="62">(<argument><expr><name pos:line="1277" pos:column="63">MATCH_NOMATCH<pos:position pos:line="1277" pos:column="76"/></name></expr></argument>)<pos:position pos:line="1277" pos:column="77"/></argument_list></call></expr>;<pos:position pos:line="1277" pos:column="78"/></expr_stmt></block></then></if>
            <expr_stmt><expr><name pos:line="1278" pos:column="13">c<pos:position pos:line="1278" pos:column="14"/></name> <operator pos:line="1278" pos:column="15">=<pos:position pos:line="1278" pos:column="16"/></operator> <operator pos:line="1278" pos:column="17">*<pos:position pos:line="1278" pos:column="18"/></operator><name pos:line="1278" pos:column="18">eptr<pos:position pos:line="1278" pos:column="22"/></name><operator pos:line="1278" pos:column="22">++<pos:position pos:line="1278" pos:column="24"/></operator></expr>;<pos:position pos:line="1278" pos:column="25"/></expr_stmt>
            <if pos:line="1279" pos:column="13">if <condition pos:line="1279" pos:column="16">(<expr><operator pos:line="1279" pos:column="17">(<pos:position pos:line="1279" pos:column="18"/></operator><name><name pos:line="1279" pos:column="18">data<pos:position pos:line="1279" pos:column="22"/></name><index pos:line="1279" pos:column="22">[<expr><name pos:line="1279" pos:column="23">c<pos:position pos:line="1279" pos:column="24"/></name><operator pos:line="1279" pos:column="24">/<pos:position pos:line="1279" pos:column="25"/></operator><literal type="number" pos:line="1279" pos:column="25">8<pos:position pos:line="1279" pos:column="26"/></literal></expr>]<pos:position pos:line="1279" pos:column="27"/></index></name> <operator pos:line="1279" pos:column="28">&amp;<pos:position pos:line="1279" pos:column="33"/></operator> <operator pos:line="1279" pos:column="30">(<pos:position pos:line="1279" pos:column="31"/></operator><literal type="number" pos:line="1279" pos:column="31">1<pos:position pos:line="1279" pos:column="32"/></literal> <operator pos:line="1279" pos:column="33">&lt;&lt;<pos:position pos:line="1279" pos:column="41"/></operator> <operator pos:line="1279" pos:column="36">(<pos:position pos:line="1279" pos:column="37"/></operator><name pos:line="1279" pos:column="37">c<pos:position pos:line="1279" pos:column="38"/></name><operator pos:line="1279" pos:column="38">&amp;<pos:position pos:line="1279" pos:column="43"/></operator><literal type="number" pos:line="1279" pos:column="39">7<pos:position pos:line="1279" pos:column="40"/></literal><operator pos:line="1279" pos:column="40">)<pos:position pos:line="1279" pos:column="41"/></operator><operator pos:line="1279" pos:column="41">)<pos:position pos:line="1279" pos:column="42"/></operator><operator pos:line="1279" pos:column="42">)<pos:position pos:line="1279" pos:column="43"/></operator> <operator pos:line="1279" pos:column="44">==<pos:position pos:line="1279" pos:column="46"/></operator> <literal type="number" pos:line="1279" pos:column="47">0<pos:position pos:line="1279" pos:column="48"/></literal></expr>)<pos:position pos:line="1279" pos:column="49"/></condition><then pos:line="1279" pos:column="49"> <block type="pseudo"><expr_stmt><expr><call><name pos:line="1279" pos:column="50">RRETURN<pos:position pos:line="1279" pos:column="57"/></name><argument_list pos:line="1279" pos:column="57">(<argument><expr><name pos:line="1279" pos:column="58">MATCH_NOMATCH<pos:position pos:line="1279" pos:column="71"/></name></expr></argument>)<pos:position pos:line="1279" pos:column="72"/></argument_list></call></expr>;<pos:position pos:line="1279" pos:column="73"/></expr_stmt></block></then></if>
            }<pos:position pos:line="1280" pos:column="14"/></block></for>
          }<pos:position pos:line="1281" pos:column="12"/></block></else></if>
        <comment type="block" pos:line="1282" pos:column="9">/* Control never gets here */</comment>
        }<pos:position pos:line="1283" pos:column="10"/></block></then>

      <comment type="block" pos:line="1285" pos:column="7">/* If maximizing, find the longest possible run, then work backwards. */</comment>

      <else pos:line="1287" pos:column="7">else
        <block pos:line="1288" pos:column="9">{
        <expr_stmt><expr><name pos:line="1289" pos:column="9">pp<pos:position pos:line="1289" pos:column="11"/></name> <operator pos:line="1289" pos:column="12">=<pos:position pos:line="1289" pos:column="13"/></operator> <name pos:line="1289" pos:column="14">eptr<pos:position pos:line="1289" pos:column="18"/></name></expr>;<pos:position pos:line="1289" pos:column="19"/></expr_stmt>

<cpp:ifdef pos:line="1291" pos:column="1">#<cpp:directive pos:line="1291" pos:column="2">ifdef<pos:position pos:line="1291" pos:column="7"/></cpp:directive> <name pos:line="1291" pos:column="8">SUPPORT_UTF8<pos:position pos:line="1291" pos:column="20"/></name></cpp:ifdef>
        <comment type="block" pos:line="1292" pos:column="9">/* UTF-8 mode */</comment>
        <if pos:line="1293" pos:column="9">if <condition pos:line="1293" pos:column="12">(<expr><name><name pos:line="1293" pos:column="13">md<pos:position pos:line="1293" pos:column="15"/></name><operator pos:line="1293" pos:column="15">-&gt;<pos:position pos:line="1293" pos:column="20"/></operator><name pos:line="1293" pos:column="17">utf8<pos:position pos:line="1293" pos:column="21"/></name></name></expr>)<pos:position pos:line="1293" pos:column="22"/></condition><then pos:line="1293" pos:column="22">
          <block pos:line="1294" pos:column="11">{
          <for pos:line="1295" pos:column="11">for <control pos:line="1295" pos:column="15">(<init><expr><name pos:line="1295" pos:column="16">i<pos:position pos:line="1295" pos:column="17"/></name> <operator pos:line="1295" pos:column="18">=<pos:position pos:line="1295" pos:column="19"/></operator> <name pos:line="1295" pos:column="20">min<pos:position pos:line="1295" pos:column="23"/></name></expr>;<pos:position pos:line="1295" pos:column="24"/></init> <condition><expr><name pos:line="1295" pos:column="25">i<pos:position pos:line="1295" pos:column="26"/></name> <operator pos:line="1295" pos:column="27">&lt;<pos:position pos:line="1295" pos:column="31"/></operator> <name pos:line="1295" pos:column="29">max<pos:position pos:line="1295" pos:column="32"/></name></expr>;<pos:position pos:line="1295" pos:column="33"/></condition> <incr><expr><name pos:line="1295" pos:column="34">i<pos:position pos:line="1295" pos:column="35"/></name><operator pos:line="1295" pos:column="35">++<pos:position pos:line="1295" pos:column="37"/></operator></expr></incr>)<pos:position pos:line="1295" pos:column="38"/></control>
            <block pos:line="1296" pos:column="13">{
            <decl_stmt><decl><type><name pos:line="1297" pos:column="13">int<pos:position pos:line="1297" pos:column="16"/></name></type> <name pos:line="1297" pos:column="17">len<pos:position pos:line="1297" pos:column="20"/></name> <init pos:line="1297" pos:column="21">= <expr><literal type="number" pos:line="1297" pos:column="23">1<pos:position pos:line="1297" pos:column="24"/></literal></expr></init></decl>;<pos:position pos:line="1297" pos:column="25"/></decl_stmt>
            <if pos:line="1298" pos:column="13">if <condition pos:line="1298" pos:column="16">(<expr><name pos:line="1298" pos:column="17">eptr<pos:position pos:line="1298" pos:column="21"/></name> <operator pos:line="1298" pos:column="22">&gt;=<pos:position pos:line="1298" pos:column="27"/></operator> <name><name pos:line="1298" pos:column="25">md<pos:position pos:line="1298" pos:column="27"/></name><operator pos:line="1298" pos:column="27">-&gt;<pos:position pos:line="1298" pos:column="32"/></operator><name pos:line="1298" pos:column="29">end_subject<pos:position pos:line="1298" pos:column="40"/></name></name></expr>)<pos:position pos:line="1298" pos:column="41"/></condition><then pos:line="1298" pos:column="41"> <block type="pseudo"><break pos:line="1298" pos:column="42">break;<pos:position pos:line="1298" pos:column="48"/></break></block></then></if>
            <expr_stmt><expr><call><name pos:line="1299" pos:column="13">GETCHARLEN<pos:position pos:line="1299" pos:column="23"/></name><argument_list pos:line="1299" pos:column="23">(<argument><expr><name pos:line="1299" pos:column="24">c<pos:position pos:line="1299" pos:column="25"/></name></expr></argument>, <argument><expr><name pos:line="1299" pos:column="27">eptr<pos:position pos:line="1299" pos:column="31"/></name></expr></argument>, <argument><expr><name pos:line="1299" pos:column="33">len<pos:position pos:line="1299" pos:column="36"/></name></expr></argument>)<pos:position pos:line="1299" pos:column="37"/></argument_list></call></expr>;<pos:position pos:line="1299" pos:column="38"/></expr_stmt>
            <if pos:line="1300" pos:column="13">if <condition pos:line="1300" pos:column="16">(<expr><name pos:line="1300" pos:column="17">c<pos:position pos:line="1300" pos:column="18"/></name> <operator pos:line="1300" pos:column="19">&gt;<pos:position pos:line="1300" pos:column="23"/></operator> <literal type="number" pos:line="1300" pos:column="21">255<pos:position pos:line="1300" pos:column="24"/></literal></expr>)<pos:position pos:line="1300" pos:column="25"/></condition><then pos:line="1300" pos:column="25">
              <block pos:line="1301" pos:column="15">{
              <if pos:line="1302" pos:column="15">if <condition pos:line="1302" pos:column="18">(<expr><name pos:line="1302" pos:column="19">op<pos:position pos:line="1302" pos:column="21"/></name> <operator pos:line="1302" pos:column="22">==<pos:position pos:line="1302" pos:column="24"/></operator> <name pos:line="1302" pos:column="25">OP_CLASS<pos:position pos:line="1302" pos:column="33"/></name></expr>)<pos:position pos:line="1302" pos:column="34"/></condition><then pos:line="1302" pos:column="34"> <block type="pseudo"><break pos:line="1302" pos:column="35">break;<pos:position pos:line="1302" pos:column="41"/></break></block></then></if>
              }<pos:position pos:line="1303" pos:column="16"/></block></then>
            <else pos:line="1304" pos:column="13">else
              <block pos:line="1305" pos:column="15">{
              <if pos:line="1306" pos:column="15">if <condition pos:line="1306" pos:column="18">(<expr><operator pos:line="1306" pos:column="19">(<pos:position pos:line="1306" pos:column="20"/></operator><name><name pos:line="1306" pos:column="20">data<pos:position pos:line="1306" pos:column="24"/></name><index pos:line="1306" pos:column="24">[<expr><name pos:line="1306" pos:column="25">c<pos:position pos:line="1306" pos:column="26"/></name><operator pos:line="1306" pos:column="26">/<pos:position pos:line="1306" pos:column="27"/></operator><literal type="number" pos:line="1306" pos:column="27">8<pos:position pos:line="1306" pos:column="28"/></literal></expr>]<pos:position pos:line="1306" pos:column="29"/></index></name> <operator pos:line="1306" pos:column="30">&amp;<pos:position pos:line="1306" pos:column="35"/></operator> <operator pos:line="1306" pos:column="32">(<pos:position pos:line="1306" pos:column="33"/></operator><literal type="number" pos:line="1306" pos:column="33">1<pos:position pos:line="1306" pos:column="34"/></literal> <operator pos:line="1306" pos:column="35">&lt;&lt;<pos:position pos:line="1306" pos:column="43"/></operator> <operator pos:line="1306" pos:column="38">(<pos:position pos:line="1306" pos:column="39"/></operator><name pos:line="1306" pos:column="39">c<pos:position pos:line="1306" pos:column="40"/></name><operator pos:line="1306" pos:column="40">&amp;<pos:position pos:line="1306" pos:column="45"/></operator><literal type="number" pos:line="1306" pos:column="41">7<pos:position pos:line="1306" pos:column="42"/></literal><operator pos:line="1306" pos:column="42">)<pos:position pos:line="1306" pos:column="43"/></operator><operator pos:line="1306" pos:column="43">)<pos:position pos:line="1306" pos:column="44"/></operator><operator pos:line="1306" pos:column="44">)<pos:position pos:line="1306" pos:column="45"/></operator> <operator pos:line="1306" pos:column="46">==<pos:position pos:line="1306" pos:column="48"/></operator> <literal type="number" pos:line="1306" pos:column="49">0<pos:position pos:line="1306" pos:column="50"/></literal></expr>)<pos:position pos:line="1306" pos:column="51"/></condition><then pos:line="1306" pos:column="51"> <block type="pseudo"><break pos:line="1306" pos:column="52">break;<pos:position pos:line="1306" pos:column="58"/></break></block></then></if>
              }<pos:position pos:line="1307" pos:column="16"/></block></else></if>
            <expr_stmt><expr><name pos:line="1308" pos:column="13">eptr<pos:position pos:line="1308" pos:column="17"/></name> <operator pos:line="1308" pos:column="18">+=<pos:position pos:line="1308" pos:column="20"/></operator> <name pos:line="1308" pos:column="21">len<pos:position pos:line="1308" pos:column="24"/></name></expr>;<pos:position pos:line="1308" pos:column="25"/></expr_stmt>
            }<pos:position pos:line="1309" pos:column="14"/></block></for>
          <for pos:line="1310" pos:column="11">for <control pos:line="1310" pos:column="15">(<init pos:line="1310" pos:column="16">;<pos:position pos:line="1310" pos:column="17"/></init><condition pos:line="1310" pos:column="17">;<pos:position pos:line="1310" pos:column="18"/></condition><incr/>)<pos:position pos:line="1310" pos:column="19"/></control>
            <block pos:line="1311" pos:column="13">{
            <expr_stmt><expr><call><name pos:line="1312" pos:column="13">RMATCH<pos:position pos:line="1312" pos:column="19"/></name><argument_list pos:line="1312" pos:column="19">(<argument><expr><name pos:line="1312" pos:column="20">rrc<pos:position pos:line="1312" pos:column="23"/></name></expr></argument>, <argument><expr><name pos:line="1312" pos:column="25">eptr<pos:position pos:line="1312" pos:column="29"/></name></expr></argument>, <argument><expr><name pos:line="1312" pos:column="31">ecode<pos:position pos:line="1312" pos:column="36"/></name></expr></argument>, <argument><expr><name pos:line="1312" pos:column="38">offset_top<pos:position pos:line="1312" pos:column="48"/></name></expr></argument>, <argument><expr><name pos:line="1312" pos:column="50">md<pos:position pos:line="1312" pos:column="52"/></name></expr></argument>, <argument><expr><name pos:line="1312" pos:column="54">ims<pos:position pos:line="1312" pos:column="57"/></name></expr></argument>, <argument><expr><name pos:line="1312" pos:column="59">eptrb<pos:position pos:line="1312" pos:column="64"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="1312" pos:column="66">0<pos:position pos:line="1312" pos:column="67"/></literal></expr></argument>)<pos:position pos:line="1312" pos:column="68"/></argument_list></call></expr>;<pos:position pos:line="1312" pos:column="69"/></expr_stmt>
            <if pos:line="1313" pos:column="13">if <condition pos:line="1313" pos:column="16">(<expr><name pos:line="1313" pos:column="17">rrc<pos:position pos:line="1313" pos:column="20"/></name> <operator pos:line="1313" pos:column="21">!=<pos:position pos:line="1313" pos:column="23"/></operator> <name pos:line="1313" pos:column="24">MATCH_NOMATCH<pos:position pos:line="1313" pos:column="37"/></name></expr>)<pos:position pos:line="1313" pos:column="38"/></condition><then pos:line="1313" pos:column="38"> <block type="pseudo"><expr_stmt><expr><call><name pos:line="1313" pos:column="39">RRETURN<pos:position pos:line="1313" pos:column="46"/></name><argument_list pos:line="1313" pos:column="46">(<argument><expr><name pos:line="1313" pos:column="47">rrc<pos:position pos:line="1313" pos:column="50"/></name></expr></argument>)<pos:position pos:line="1313" pos:column="51"/></argument_list></call></expr>;<pos:position pos:line="1313" pos:column="52"/></expr_stmt></block></then></if>
            <if pos:line="1314" pos:column="13">if <condition pos:line="1314" pos:column="16">(<expr><name pos:line="1314" pos:column="17">eptr<pos:position pos:line="1314" pos:column="21"/></name><operator pos:line="1314" pos:column="21">--<pos:position pos:line="1314" pos:column="23"/></operator> <operator pos:line="1314" pos:column="24">==<pos:position pos:line="1314" pos:column="26"/></operator> <name pos:line="1314" pos:column="27">pp<pos:position pos:line="1314" pos:column="29"/></name></expr>)<pos:position pos:line="1314" pos:column="30"/></condition><then pos:line="1314" pos:column="30"> <block type="pseudo"><break pos:line="1314" pos:column="31">break;<pos:position pos:line="1314" pos:column="37"/></break></block></then></if>        <comment type="block" pos:line="1314" pos:column="45">/* Stop if tried at original pos */</comment>
            <expr_stmt><expr><call><name pos:line="1315" pos:column="13">BACKCHAR<pos:position pos:line="1315" pos:column="21"/></name><argument_list pos:line="1315" pos:column="21">(<argument><expr><name pos:line="1315" pos:column="22">eptr<pos:position pos:line="1315" pos:column="26"/></name></expr></argument>)<pos:position pos:line="1315" pos:column="27"/></argument_list></call></expr>;<pos:position pos:line="1315" pos:column="28"/></expr_stmt>
            }<pos:position pos:line="1316" pos:column="14"/></block></for>
          }<pos:position pos:line="1317" pos:column="12"/></block></then>
        <else pos:line="1318" pos:column="9">else
<cpp:endif pos:line="1319" pos:column="1">#<cpp:directive pos:line="1319" pos:column="2">endif<pos:position pos:line="1319" pos:column="7"/></cpp:directive></cpp:endif>
          <comment type="block" pos:line="1320" pos:column="11">/* Not UTF-8 mode */</comment>
          <block pos:line="1321" pos:column="11">{
          <for pos:line="1322" pos:column="11">for <control pos:line="1322" pos:column="15">(<init><expr><name pos:line="1322" pos:column="16">i<pos:position pos:line="1322" pos:column="17"/></name> <operator pos:line="1322" pos:column="18">=<pos:position pos:line="1322" pos:column="19"/></operator> <name pos:line="1322" pos:column="20">min<pos:position pos:line="1322" pos:column="23"/></name></expr>;<pos:position pos:line="1322" pos:column="24"/></init> <condition><expr><name pos:line="1322" pos:column="25">i<pos:position pos:line="1322" pos:column="26"/></name> <operator pos:line="1322" pos:column="27">&lt;<pos:position pos:line="1322" pos:column="31"/></operator> <name pos:line="1322" pos:column="29">max<pos:position pos:line="1322" pos:column="32"/></name></expr>;<pos:position pos:line="1322" pos:column="33"/></condition> <incr><expr><name pos:line="1322" pos:column="34">i<pos:position pos:line="1322" pos:column="35"/></name><operator pos:line="1322" pos:column="35">++<pos:position pos:line="1322" pos:column="37"/></operator></expr></incr>)<pos:position pos:line="1322" pos:column="38"/></control>
            <block pos:line="1323" pos:column="13">{
            <if pos:line="1324" pos:column="13">if <condition pos:line="1324" pos:column="16">(<expr><name pos:line="1324" pos:column="17">eptr<pos:position pos:line="1324" pos:column="21"/></name> <operator pos:line="1324" pos:column="22">&gt;=<pos:position pos:line="1324" pos:column="27"/></operator> <name><name pos:line="1324" pos:column="25">md<pos:position pos:line="1324" pos:column="27"/></name><operator pos:line="1324" pos:column="27">-&gt;<pos:position pos:line="1324" pos:column="32"/></operator><name pos:line="1324" pos:column="29">end_subject<pos:position pos:line="1324" pos:column="40"/></name></name></expr>)<pos:position pos:line="1324" pos:column="41"/></condition><then pos:line="1324" pos:column="41"> <block type="pseudo"><break pos:line="1324" pos:column="42">break;<pos:position pos:line="1324" pos:column="48"/></break></block></then></if>
            <expr_stmt><expr><name pos:line="1325" pos:column="13">c<pos:position pos:line="1325" pos:column="14"/></name> <operator pos:line="1325" pos:column="15">=<pos:position pos:line="1325" pos:column="16"/></operator> <operator pos:line="1325" pos:column="17">*<pos:position pos:line="1325" pos:column="18"/></operator><name pos:line="1325" pos:column="18">eptr<pos:position pos:line="1325" pos:column="22"/></name></expr>;<pos:position pos:line="1325" pos:column="23"/></expr_stmt>
            <if pos:line="1326" pos:column="13">if <condition pos:line="1326" pos:column="16">(<expr><operator pos:line="1326" pos:column="17">(<pos:position pos:line="1326" pos:column="18"/></operator><name><name pos:line="1326" pos:column="18">data<pos:position pos:line="1326" pos:column="22"/></name><index pos:line="1326" pos:column="22">[<expr><name pos:line="1326" pos:column="23">c<pos:position pos:line="1326" pos:column="24"/></name><operator pos:line="1326" pos:column="24">/<pos:position pos:line="1326" pos:column="25"/></operator><literal type="number" pos:line="1326" pos:column="25">8<pos:position pos:line="1326" pos:column="26"/></literal></expr>]<pos:position pos:line="1326" pos:column="27"/></index></name> <operator pos:line="1326" pos:column="28">&amp;<pos:position pos:line="1326" pos:column="33"/></operator> <operator pos:line="1326" pos:column="30">(<pos:position pos:line="1326" pos:column="31"/></operator><literal type="number" pos:line="1326" pos:column="31">1<pos:position pos:line="1326" pos:column="32"/></literal> <operator pos:line="1326" pos:column="33">&lt;&lt;<pos:position pos:line="1326" pos:column="41"/></operator> <operator pos:line="1326" pos:column="36">(<pos:position pos:line="1326" pos:column="37"/></operator><name pos:line="1326" pos:column="37">c<pos:position pos:line="1326" pos:column="38"/></name><operator pos:line="1326" pos:column="38">&amp;<pos:position pos:line="1326" pos:column="43"/></operator><literal type="number" pos:line="1326" pos:column="39">7<pos:position pos:line="1326" pos:column="40"/></literal><operator pos:line="1326" pos:column="40">)<pos:position pos:line="1326" pos:column="41"/></operator><operator pos:line="1326" pos:column="41">)<pos:position pos:line="1326" pos:column="42"/></operator><operator pos:line="1326" pos:column="42">)<pos:position pos:line="1326" pos:column="43"/></operator> <operator pos:line="1326" pos:column="44">==<pos:position pos:line="1326" pos:column="46"/></operator> <literal type="number" pos:line="1326" pos:column="47">0<pos:position pos:line="1326" pos:column="48"/></literal></expr>)<pos:position pos:line="1326" pos:column="49"/></condition><then pos:line="1326" pos:column="49"> <block type="pseudo"><break pos:line="1326" pos:column="50">break;<pos:position pos:line="1326" pos:column="56"/></break></block></then></if>
            <expr_stmt><expr><name pos:line="1327" pos:column="13">eptr<pos:position pos:line="1327" pos:column="17"/></name><operator pos:line="1327" pos:column="17">++<pos:position pos:line="1327" pos:column="19"/></operator></expr>;<pos:position pos:line="1327" pos:column="20"/></expr_stmt>
            }<pos:position pos:line="1328" pos:column="14"/></block></for>
          <while pos:line="1329" pos:column="11">while <condition pos:line="1329" pos:column="17">(<expr><name pos:line="1329" pos:column="18">eptr<pos:position pos:line="1329" pos:column="22"/></name> <operator pos:line="1329" pos:column="23">&gt;=<pos:position pos:line="1329" pos:column="28"/></operator> <name pos:line="1329" pos:column="26">pp<pos:position pos:line="1329" pos:column="28"/></name></expr>)<pos:position pos:line="1329" pos:column="29"/></condition>
            <block pos:line="1330" pos:column="13">{
            <expr_stmt><expr><call><name pos:line="1331" pos:column="13">RMATCH<pos:position pos:line="1331" pos:column="19"/></name><argument_list pos:line="1331" pos:column="19">(<argument><expr><name pos:line="1331" pos:column="20">rrc<pos:position pos:line="1331" pos:column="23"/></name></expr></argument>, <argument><expr><name pos:line="1331" pos:column="25">eptr<pos:position pos:line="1331" pos:column="29"/></name></expr></argument>, <argument><expr><name pos:line="1331" pos:column="31">ecode<pos:position pos:line="1331" pos:column="36"/></name></expr></argument>, <argument><expr><name pos:line="1331" pos:column="38">offset_top<pos:position pos:line="1331" pos:column="48"/></name></expr></argument>, <argument><expr><name pos:line="1331" pos:column="50">md<pos:position pos:line="1331" pos:column="52"/></name></expr></argument>, <argument><expr><name pos:line="1331" pos:column="54">ims<pos:position pos:line="1331" pos:column="57"/></name></expr></argument>, <argument><expr><name pos:line="1331" pos:column="59">eptrb<pos:position pos:line="1331" pos:column="64"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="1331" pos:column="66">0<pos:position pos:line="1331" pos:column="67"/></literal></expr></argument>)<pos:position pos:line="1331" pos:column="68"/></argument_list></call></expr>;<pos:position pos:line="1331" pos:column="69"/></expr_stmt>
            <expr_stmt><expr><name pos:line="1332" pos:column="13">eptr<pos:position pos:line="1332" pos:column="17"/></name><operator pos:line="1332" pos:column="17">--<pos:position pos:line="1332" pos:column="19"/></operator></expr>;<pos:position pos:line="1332" pos:column="20"/></expr_stmt>
            <if pos:line="1333" pos:column="13">if <condition pos:line="1333" pos:column="16">(<expr><name pos:line="1333" pos:column="17">rrc<pos:position pos:line="1333" pos:column="20"/></name> <operator pos:line="1333" pos:column="21">!=<pos:position pos:line="1333" pos:column="23"/></operator> <name pos:line="1333" pos:column="24">MATCH_NOMATCH<pos:position pos:line="1333" pos:column="37"/></name></expr>)<pos:position pos:line="1333" pos:column="38"/></condition><then pos:line="1333" pos:column="38"> <block type="pseudo"><expr_stmt><expr><call><name pos:line="1333" pos:column="39">RRETURN<pos:position pos:line="1333" pos:column="46"/></name><argument_list pos:line="1333" pos:column="46">(<argument><expr><name pos:line="1333" pos:column="47">rrc<pos:position pos:line="1333" pos:column="50"/></name></expr></argument>)<pos:position pos:line="1333" pos:column="51"/></argument_list></call></expr>;<pos:position pos:line="1333" pos:column="52"/></expr_stmt></block></then></if>
            }<pos:position pos:line="1334" pos:column="14"/></block></while>
          }<pos:position pos:line="1335" pos:column="12"/></block></else></if>

        <expr_stmt><expr><call><name pos:line="1337" pos:column="9">RRETURN<pos:position pos:line="1337" pos:column="16"/></name><argument_list pos:line="1337" pos:column="16">(<argument><expr><name pos:line="1337" pos:column="17">MATCH_NOMATCH<pos:position pos:line="1337" pos:column="30"/></name></expr></argument>)<pos:position pos:line="1337" pos:column="31"/></argument_list></call></expr>;<pos:position pos:line="1337" pos:column="32"/></expr_stmt>
        }<pos:position pos:line="1338" pos:column="10"/></block></else></if>
      }<pos:position pos:line="1339" pos:column="8"/></block>
    <comment type="block" pos:line="1340" pos:column="5">/* Control never gets here */</comment>


    <comment type="block" pos:line="1343" pos:column="5">/* Match an extended character class. This opcode is encountered only
    in UTF-8 mode, because that's the only time it is compiled. */</comment>

<cpp:ifdef pos:line="1346" pos:column="1">#<cpp:directive pos:line="1346" pos:column="2">ifdef<pos:position pos:line="1346" pos:column="7"/></cpp:directive> <name pos:line="1346" pos:column="8">SUPPORT_UTF8<pos:position pos:line="1346" pos:column="20"/></name></cpp:ifdef>
    <case pos:line="1347" pos:column="5">case <expr><name pos:line="1347" pos:column="10">OP_XCLASS<pos:position pos:line="1347" pos:column="19"/></name></expr>:<pos:position pos:line="1347" pos:column="20"/></case>
      <block pos:line="1348" pos:column="7">{
      <expr_stmt><expr><name pos:line="1349" pos:column="7">data<pos:position pos:line="1349" pos:column="11"/></name> <operator pos:line="1349" pos:column="12">=<pos:position pos:line="1349" pos:column="13"/></operator> <name pos:line="1349" pos:column="14">ecode<pos:position pos:line="1349" pos:column="19"/></name> <operator pos:line="1349" pos:column="20">+<pos:position pos:line="1349" pos:column="21"/></operator> <literal type="number" pos:line="1349" pos:column="22">1<pos:position pos:line="1349" pos:column="23"/></literal> <operator pos:line="1349" pos:column="24">+<pos:position pos:line="1349" pos:column="25"/></operator> <name pos:line="1349" pos:column="26">LINK_SIZE<pos:position pos:line="1349" pos:column="35"/></name></expr>;<pos:position pos:line="1349" pos:column="36"/></expr_stmt>                <comment type="block" pos:line="1349" pos:column="52">/* Save for matching */</comment>
      <expr_stmt><expr><name pos:line="1350" pos:column="7">ecode<pos:position pos:line="1350" pos:column="12"/></name> <operator pos:line="1350" pos:column="13">+=<pos:position pos:line="1350" pos:column="15"/></operator> <call><name pos:line="1350" pos:column="16">GET<pos:position pos:line="1350" pos:column="19"/></name><argument_list pos:line="1350" pos:column="19">(<argument><expr><name pos:line="1350" pos:column="20">ecode<pos:position pos:line="1350" pos:column="25"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="1350" pos:column="27">1<pos:position pos:line="1350" pos:column="28"/></literal></expr></argument>)<pos:position pos:line="1350" pos:column="29"/></argument_list></call></expr>;<pos:position pos:line="1350" pos:column="30"/></expr_stmt>                      <comment type="block" pos:line="1350" pos:column="52">/* Advance past the item */</comment>

      <switch pos:line="1352" pos:column="7">switch <condition pos:line="1352" pos:column="14">(<expr><operator pos:line="1352" pos:column="15">*<pos:position pos:line="1352" pos:column="16"/></operator><name pos:line="1352" pos:column="16">ecode<pos:position pos:line="1352" pos:column="21"/></name></expr>)<pos:position pos:line="1352" pos:column="22"/></condition>
        <block pos:line="1353" pos:column="9">{
        <case pos:line="1354" pos:column="9">case <expr><name pos:line="1354" pos:column="14">OP_CRSTAR<pos:position pos:line="1354" pos:column="23"/></name></expr>:<pos:position pos:line="1354" pos:column="24"/></case>
        <case pos:line="1355" pos:column="9">case <expr><name pos:line="1355" pos:column="14">OP_CRMINSTAR<pos:position pos:line="1355" pos:column="26"/></name></expr>:<pos:position pos:line="1355" pos:column="27"/></case>
        <case pos:line="1356" pos:column="9">case <expr><name pos:line="1356" pos:column="14">OP_CRPLUS<pos:position pos:line="1356" pos:column="23"/></name></expr>:<pos:position pos:line="1356" pos:column="24"/></case>
        <case pos:line="1357" pos:column="9">case <expr><name pos:line="1357" pos:column="14">OP_CRMINPLUS<pos:position pos:line="1357" pos:column="26"/></name></expr>:<pos:position pos:line="1357" pos:column="27"/></case>
        <case pos:line="1358" pos:column="9">case <expr><name pos:line="1358" pos:column="14">OP_CRQUERY<pos:position pos:line="1358" pos:column="24"/></name></expr>:<pos:position pos:line="1358" pos:column="25"/></case>
        <case pos:line="1359" pos:column="9">case <expr><name pos:line="1359" pos:column="14">OP_CRMINQUERY<pos:position pos:line="1359" pos:column="27"/></name></expr>:<pos:position pos:line="1359" pos:column="28"/></case>
        <expr_stmt><expr><name pos:line="1360" pos:column="9">c<pos:position pos:line="1360" pos:column="10"/></name> <operator pos:line="1360" pos:column="11">=<pos:position pos:line="1360" pos:column="12"/></operator> <operator pos:line="1360" pos:column="13">*<pos:position pos:line="1360" pos:column="14"/></operator><name pos:line="1360" pos:column="14">ecode<pos:position pos:line="1360" pos:column="19"/></name><operator pos:line="1360" pos:column="19">++<pos:position pos:line="1360" pos:column="21"/></operator> <operator pos:line="1360" pos:column="22">-<pos:position pos:line="1360" pos:column="23"/></operator> <name pos:line="1360" pos:column="24">OP_CRSTAR<pos:position pos:line="1360" pos:column="33"/></name></expr>;<pos:position pos:line="1360" pos:column="34"/></expr_stmt>
        <expr_stmt><expr><name pos:line="1361" pos:column="9">minimize<pos:position pos:line="1361" pos:column="17"/></name> <operator pos:line="1361" pos:column="18">=<pos:position pos:line="1361" pos:column="19"/></operator> <operator pos:line="1361" pos:column="20">(<pos:position pos:line="1361" pos:column="21"/></operator><name pos:line="1361" pos:column="21">c<pos:position pos:line="1361" pos:column="22"/></name> <operator pos:line="1361" pos:column="23">&amp;<pos:position pos:line="1361" pos:column="28"/></operator> <literal type="number" pos:line="1361" pos:column="25">1<pos:position pos:line="1361" pos:column="26"/></literal><operator pos:line="1361" pos:column="26">)<pos:position pos:line="1361" pos:column="27"/></operator> <operator pos:line="1361" pos:column="28">!=<pos:position pos:line="1361" pos:column="30"/></operator> <literal type="number" pos:line="1361" pos:column="31">0<pos:position pos:line="1361" pos:column="32"/></literal></expr>;<pos:position pos:line="1361" pos:column="33"/></expr_stmt>
        <expr_stmt><expr><name pos:line="1362" pos:column="9">min<pos:position pos:line="1362" pos:column="12"/></name> <operator pos:line="1362" pos:column="13">=<pos:position pos:line="1362" pos:column="14"/></operator> <name><name pos:line="1362" pos:column="15">rep_min<pos:position pos:line="1362" pos:column="22"/></name><index pos:line="1362" pos:column="22">[<expr><name pos:line="1362" pos:column="23">c<pos:position pos:line="1362" pos:column="24"/></name></expr>]<pos:position pos:line="1362" pos:column="25"/></index></name></expr>;<pos:position pos:line="1362" pos:column="26"/></expr_stmt>                 <comment type="block" pos:line="1362" pos:column="43">/* Pick up values from tables; */</comment>
        <expr_stmt><expr><name pos:line="1363" pos:column="9">max<pos:position pos:line="1363" pos:column="12"/></name> <operator pos:line="1363" pos:column="13">=<pos:position pos:line="1363" pos:column="14"/></operator> <name><name pos:line="1363" pos:column="15">rep_max<pos:position pos:line="1363" pos:column="22"/></name><index pos:line="1363" pos:column="22">[<expr><name pos:line="1363" pos:column="23">c<pos:position pos:line="1363" pos:column="24"/></name></expr>]<pos:position pos:line="1363" pos:column="25"/></index></name></expr>;<pos:position pos:line="1363" pos:column="26"/></expr_stmt>                 <comment type="block" pos:line="1363" pos:column="43">/* zero for max =&gt; infinity */</comment>
        <if pos:line="1364" pos:column="9">if <condition pos:line="1364" pos:column="12">(<expr><name pos:line="1364" pos:column="13">max<pos:position pos:line="1364" pos:column="16"/></name> <operator pos:line="1364" pos:column="17">==<pos:position pos:line="1364" pos:column="19"/></operator> <literal type="number" pos:line="1364" pos:column="20">0<pos:position pos:line="1364" pos:column="21"/></literal></expr>)<pos:position pos:line="1364" pos:column="22"/></condition><then pos:line="1364" pos:column="22"> <block type="pseudo"><expr_stmt><expr><name pos:line="1364" pos:column="23">max<pos:position pos:line="1364" pos:column="26"/></name> <operator pos:line="1364" pos:column="27">=<pos:position pos:line="1364" pos:column="28"/></operator> <name pos:line="1364" pos:column="29">INT_MAX<pos:position pos:line="1364" pos:column="36"/></name></expr>;<pos:position pos:line="1364" pos:column="37"/></expr_stmt></block></then></if>
        <break pos:line="1365" pos:column="9">break;<pos:position pos:line="1365" pos:column="15"/></break>

        <case pos:line="1367" pos:column="9">case <expr><name pos:line="1367" pos:column="14">OP_CRRANGE<pos:position pos:line="1367" pos:column="24"/></name></expr>:<pos:position pos:line="1367" pos:column="25"/></case>
        <case pos:line="1368" pos:column="9">case <expr><name pos:line="1368" pos:column="14">OP_CRMINRANGE<pos:position pos:line="1368" pos:column="27"/></name></expr>:<pos:position pos:line="1368" pos:column="28"/></case>
        <expr_stmt><expr><name pos:line="1369" pos:column="9">minimize<pos:position pos:line="1369" pos:column="17"/></name> <operator pos:line="1369" pos:column="18">=<pos:position pos:line="1369" pos:column="19"/></operator> <operator pos:line="1369" pos:column="20">(<pos:position pos:line="1369" pos:column="21"/></operator><operator pos:line="1369" pos:column="21">*<pos:position pos:line="1369" pos:column="22"/></operator><name pos:line="1369" pos:column="22">ecode<pos:position pos:line="1369" pos:column="27"/></name> <operator pos:line="1369" pos:column="28">==<pos:position pos:line="1369" pos:column="30"/></operator> <name pos:line="1369" pos:column="31">OP_CRMINRANGE<pos:position pos:line="1369" pos:column="44"/></name><operator pos:line="1369" pos:column="44">)<pos:position pos:line="1369" pos:column="45"/></operator></expr>;<pos:position pos:line="1369" pos:column="46"/></expr_stmt>
        <expr_stmt><expr><name pos:line="1370" pos:column="9">min<pos:position pos:line="1370" pos:column="12"/></name> <operator pos:line="1370" pos:column="13">=<pos:position pos:line="1370" pos:column="14"/></operator> <call><name pos:line="1370" pos:column="15">GET2<pos:position pos:line="1370" pos:column="19"/></name><argument_list pos:line="1370" pos:column="19">(<argument><expr><name pos:line="1370" pos:column="20">ecode<pos:position pos:line="1370" pos:column="25"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="1370" pos:column="27">1<pos:position pos:line="1370" pos:column="28"/></literal></expr></argument>)<pos:position pos:line="1370" pos:column="29"/></argument_list></call></expr>;<pos:position pos:line="1370" pos:column="30"/></expr_stmt>
        <expr_stmt><expr><name pos:line="1371" pos:column="9">max<pos:position pos:line="1371" pos:column="12"/></name> <operator pos:line="1371" pos:column="13">=<pos:position pos:line="1371" pos:column="14"/></operator> <call><name pos:line="1371" pos:column="15">GET2<pos:position pos:line="1371" pos:column="19"/></name><argument_list pos:line="1371" pos:column="19">(<argument><expr><name pos:line="1371" pos:column="20">ecode<pos:position pos:line="1371" pos:column="25"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="1371" pos:column="27">3<pos:position pos:line="1371" pos:column="28"/></literal></expr></argument>)<pos:position pos:line="1371" pos:column="29"/></argument_list></call></expr>;<pos:position pos:line="1371" pos:column="30"/></expr_stmt>
        <if pos:line="1372" pos:column="9">if <condition pos:line="1372" pos:column="12">(<expr><name pos:line="1372" pos:column="13">max<pos:position pos:line="1372" pos:column="16"/></name> <operator pos:line="1372" pos:column="17">==<pos:position pos:line="1372" pos:column="19"/></operator> <literal type="number" pos:line="1372" pos:column="20">0<pos:position pos:line="1372" pos:column="21"/></literal></expr>)<pos:position pos:line="1372" pos:column="22"/></condition><then pos:line="1372" pos:column="22"> <block type="pseudo"><expr_stmt><expr><name pos:line="1372" pos:column="23">max<pos:position pos:line="1372" pos:column="26"/></name> <operator pos:line="1372" pos:column="27">=<pos:position pos:line="1372" pos:column="28"/></operator> <name pos:line="1372" pos:column="29">INT_MAX<pos:position pos:line="1372" pos:column="36"/></name></expr>;<pos:position pos:line="1372" pos:column="37"/></expr_stmt></block></then></if>
        <expr_stmt><expr><name pos:line="1373" pos:column="9">ecode<pos:position pos:line="1373" pos:column="14"/></name> <operator pos:line="1373" pos:column="15">+=<pos:position pos:line="1373" pos:column="17"/></operator> <literal type="number" pos:line="1373" pos:column="18">5<pos:position pos:line="1373" pos:column="19"/></literal></expr>;<pos:position pos:line="1373" pos:column="20"/></expr_stmt>
        <break pos:line="1374" pos:column="9">break;<pos:position pos:line="1374" pos:column="15"/></break>

        <default pos:line="1376" pos:column="9">default:<pos:position pos:line="1376" pos:column="17"/></default>               <comment type="block" pos:line="1376" pos:column="32">/* No repeat follows */</comment>
        <expr_stmt><expr><name pos:line="1377" pos:column="9">min<pos:position pos:line="1377" pos:column="12"/></name> <operator pos:line="1377" pos:column="13">=<pos:position pos:line="1377" pos:column="14"/></operator> <name pos:line="1377" pos:column="15">max<pos:position pos:line="1377" pos:column="18"/></name> <operator pos:line="1377" pos:column="19">=<pos:position pos:line="1377" pos:column="20"/></operator> <literal type="number" pos:line="1377" pos:column="21">1<pos:position pos:line="1377" pos:column="22"/></literal></expr>;<pos:position pos:line="1377" pos:column="23"/></expr_stmt>
        <break pos:line="1378" pos:column="9">break;<pos:position pos:line="1378" pos:column="15"/></break>
        }<pos:position pos:line="1379" pos:column="10"/></block></switch>

      <comment type="block" pos:line="1381" pos:column="7">/* First, ensure the minimum number of matches are present. */</comment>

      <for pos:line="1383" pos:column="7">for <control pos:line="1383" pos:column="11">(<init><expr><name pos:line="1383" pos:column="12">i<pos:position pos:line="1383" pos:column="13"/></name> <operator pos:line="1383" pos:column="14">=<pos:position pos:line="1383" pos:column="15"/></operator> <literal type="number" pos:line="1383" pos:column="16">1<pos:position pos:line="1383" pos:column="17"/></literal></expr>;<pos:position pos:line="1383" pos:column="18"/></init> <condition><expr><name pos:line="1383" pos:column="19">i<pos:position pos:line="1383" pos:column="20"/></name> <operator pos:line="1383" pos:column="21">&lt;=<pos:position pos:line="1383" pos:column="26"/></operator> <name pos:line="1383" pos:column="24">min<pos:position pos:line="1383" pos:column="27"/></name></expr>;<pos:position pos:line="1383" pos:column="28"/></condition> <incr><expr><name pos:line="1383" pos:column="29">i<pos:position pos:line="1383" pos:column="30"/></name><operator pos:line="1383" pos:column="30">++<pos:position pos:line="1383" pos:column="32"/></operator></expr></incr>)<pos:position pos:line="1383" pos:column="33"/></control>
        <block pos:line="1384" pos:column="9">{
        <if pos:line="1385" pos:column="9">if <condition pos:line="1385" pos:column="12">(<expr><name pos:line="1385" pos:column="13">eptr<pos:position pos:line="1385" pos:column="17"/></name> <operator pos:line="1385" pos:column="18">&gt;=<pos:position pos:line="1385" pos:column="23"/></operator> <name><name pos:line="1385" pos:column="21">md<pos:position pos:line="1385" pos:column="23"/></name><operator pos:line="1385" pos:column="23">-&gt;<pos:position pos:line="1385" pos:column="28"/></operator><name pos:line="1385" pos:column="25">end_subject<pos:position pos:line="1385" pos:column="36"/></name></name></expr>)<pos:position pos:line="1385" pos:column="37"/></condition><then pos:line="1385" pos:column="37"> <block type="pseudo"><expr_stmt><expr><call><name pos:line="1385" pos:column="38">RRETURN<pos:position pos:line="1385" pos:column="45"/></name><argument_list pos:line="1385" pos:column="45">(<argument><expr><name pos:line="1385" pos:column="46">MATCH_NOMATCH<pos:position pos:line="1385" pos:column="59"/></name></expr></argument>)<pos:position pos:line="1385" pos:column="60"/></argument_list></call></expr>;<pos:position pos:line="1385" pos:column="61"/></expr_stmt></block></then></if>
        <expr_stmt><expr><call><name pos:line="1386" pos:column="9">GETCHARINC<pos:position pos:line="1386" pos:column="19"/></name><argument_list pos:line="1386" pos:column="19">(<argument><expr><name pos:line="1386" pos:column="20">c<pos:position pos:line="1386" pos:column="21"/></name></expr></argument>, <argument><expr><name pos:line="1386" pos:column="23">eptr<pos:position pos:line="1386" pos:column="27"/></name></expr></argument>)<pos:position pos:line="1386" pos:column="28"/></argument_list></call></expr>;<pos:position pos:line="1386" pos:column="29"/></expr_stmt>
        <if pos:line="1387" pos:column="9">if <condition pos:line="1387" pos:column="12">(<expr><operator pos:line="1387" pos:column="13">!<pos:position pos:line="1387" pos:column="14"/></operator><call><name pos:line="1387" pos:column="14">match_xclass<pos:position pos:line="1387" pos:column="26"/></name><argument_list pos:line="1387" pos:column="26">(<argument><expr><name pos:line="1387" pos:column="27">c<pos:position pos:line="1387" pos:column="28"/></name></expr></argument>, <argument><expr><name pos:line="1387" pos:column="30">data<pos:position pos:line="1387" pos:column="34"/></name></expr></argument>)<pos:position pos:line="1387" pos:column="35"/></argument_list></call></expr>)<pos:position pos:line="1387" pos:column="36"/></condition><then pos:line="1387" pos:column="36"> <block type="pseudo"><expr_stmt><expr><call><name pos:line="1387" pos:column="37">RRETURN<pos:position pos:line="1387" pos:column="44"/></name><argument_list pos:line="1387" pos:column="44">(<argument><expr><name pos:line="1387" pos:column="45">MATCH_NOMATCH<pos:position pos:line="1387" pos:column="58"/></name></expr></argument>)<pos:position pos:line="1387" pos:column="59"/></argument_list></call></expr>;<pos:position pos:line="1387" pos:column="60"/></expr_stmt></block></then></if>
        }<pos:position pos:line="1388" pos:column="10"/></block></for>

      <comment type="block" pos:line="1390" pos:column="7">/* If max == min we can continue with the main loop without the
      need to recurse. */</comment>

      <if pos:line="1393" pos:column="7">if <condition pos:line="1393" pos:column="10">(<expr><name pos:line="1393" pos:column="11">min<pos:position pos:line="1393" pos:column="14"/></name> <operator pos:line="1393" pos:column="15">==<pos:position pos:line="1393" pos:column="17"/></operator> <name pos:line="1393" pos:column="18">max<pos:position pos:line="1393" pos:column="21"/></name></expr>)<pos:position pos:line="1393" pos:column="22"/></condition><then pos:line="1393" pos:column="22"> <block type="pseudo"><continue pos:line="1393" pos:column="23">continue;<pos:position pos:line="1393" pos:column="32"/></continue></block></then></if>

      <comment type="block" pos:line="1395" pos:column="7">/* If minimizing, keep testing the rest of the expression and advancing
      the pointer while it matches the class. */</comment>

      <if pos:line="1398" pos:column="7">if <condition pos:line="1398" pos:column="10">(<expr><name pos:line="1398" pos:column="11">minimize<pos:position pos:line="1398" pos:column="19"/></name></expr>)<pos:position pos:line="1398" pos:column="20"/></condition><then pos:line="1398" pos:column="20">
        <block pos:line="1399" pos:column="9">{
        <for pos:line="1400" pos:column="9">for <control pos:line="1400" pos:column="13">(<init><expr><name pos:line="1400" pos:column="14">fi<pos:position pos:line="1400" pos:column="16"/></name> <operator pos:line="1400" pos:column="17">=<pos:position pos:line="1400" pos:column="18"/></operator> <name pos:line="1400" pos:column="19">min<pos:position pos:line="1400" pos:column="22"/></name></expr>;<pos:position pos:line="1400" pos:column="23"/></init><condition pos:line="1400" pos:column="23">;<pos:position pos:line="1400" pos:column="24"/></condition> <incr><expr><name pos:line="1400" pos:column="25">fi<pos:position pos:line="1400" pos:column="27"/></name><operator pos:line="1400" pos:column="27">++<pos:position pos:line="1400" pos:column="29"/></operator></expr></incr>)<pos:position pos:line="1400" pos:column="30"/></control>
          <block pos:line="1401" pos:column="11">{
          <expr_stmt><expr><call><name pos:line="1402" pos:column="11">RMATCH<pos:position pos:line="1402" pos:column="17"/></name><argument_list pos:line="1402" pos:column="17">(<argument><expr><name pos:line="1402" pos:column="18">rrc<pos:position pos:line="1402" pos:column="21"/></name></expr></argument>, <argument><expr><name pos:line="1402" pos:column="23">eptr<pos:position pos:line="1402" pos:column="27"/></name></expr></argument>, <argument><expr><name pos:line="1402" pos:column="29">ecode<pos:position pos:line="1402" pos:column="34"/></name></expr></argument>, <argument><expr><name pos:line="1402" pos:column="36">offset_top<pos:position pos:line="1402" pos:column="46"/></name></expr></argument>, <argument><expr><name pos:line="1402" pos:column="48">md<pos:position pos:line="1402" pos:column="50"/></name></expr></argument>, <argument><expr><name pos:line="1402" pos:column="52">ims<pos:position pos:line="1402" pos:column="55"/></name></expr></argument>, <argument><expr><name pos:line="1402" pos:column="57">eptrb<pos:position pos:line="1402" pos:column="62"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="1402" pos:column="64">0<pos:position pos:line="1402" pos:column="65"/></literal></expr></argument>)<pos:position pos:line="1402" pos:column="66"/></argument_list></call></expr>;<pos:position pos:line="1402" pos:column="67"/></expr_stmt>
          <if pos:line="1403" pos:column="11">if <condition pos:line="1403" pos:column="14">(<expr><name pos:line="1403" pos:column="15">rrc<pos:position pos:line="1403" pos:column="18"/></name> <operator pos:line="1403" pos:column="19">!=<pos:position pos:line="1403" pos:column="21"/></operator> <name pos:line="1403" pos:column="22">MATCH_NOMATCH<pos:position pos:line="1403" pos:column="35"/></name></expr>)<pos:position pos:line="1403" pos:column="36"/></condition><then pos:line="1403" pos:column="36"> <block type="pseudo"><expr_stmt><expr><call><name pos:line="1403" pos:column="37">RRETURN<pos:position pos:line="1403" pos:column="44"/></name><argument_list pos:line="1403" pos:column="44">(<argument><expr><name pos:line="1403" pos:column="45">rrc<pos:position pos:line="1403" pos:column="48"/></name></expr></argument>)<pos:position pos:line="1403" pos:column="49"/></argument_list></call></expr>;<pos:position pos:line="1403" pos:column="50"/></expr_stmt></block></then></if>
          <if pos:line="1404" pos:column="11">if <condition pos:line="1404" pos:column="14">(<expr><name pos:line="1404" pos:column="15">fi<pos:position pos:line="1404" pos:column="17"/></name> <operator pos:line="1404" pos:column="18">&gt;=<pos:position pos:line="1404" pos:column="23"/></operator> <name pos:line="1404" pos:column="21">max<pos:position pos:line="1404" pos:column="24"/></name> <operator pos:line="1404" pos:column="25">||<pos:position pos:line="1404" pos:column="27"/></operator> <name pos:line="1404" pos:column="28">eptr<pos:position pos:line="1404" pos:column="32"/></name> <operator pos:line="1404" pos:column="33">&gt;=<pos:position pos:line="1404" pos:column="38"/></operator> <name><name pos:line="1404" pos:column="36">md<pos:position pos:line="1404" pos:column="38"/></name><operator pos:line="1404" pos:column="38">-&gt;<pos:position pos:line="1404" pos:column="43"/></operator><name pos:line="1404" pos:column="40">end_subject<pos:position pos:line="1404" pos:column="51"/></name></name></expr>)<pos:position pos:line="1404" pos:column="52"/></condition><then pos:line="1404" pos:column="52"> <block type="pseudo"><expr_stmt><expr><call><name pos:line="1404" pos:column="53">RRETURN<pos:position pos:line="1404" pos:column="60"/></name><argument_list pos:line="1404" pos:column="60">(<argument><expr><name pos:line="1404" pos:column="61">MATCH_NOMATCH<pos:position pos:line="1404" pos:column="74"/></name></expr></argument>)<pos:position pos:line="1404" pos:column="75"/></argument_list></call></expr>;<pos:position pos:line="1404" pos:column="76"/></expr_stmt></block></then></if>
          <expr_stmt><expr><call><name pos:line="1405" pos:column="11">GETCHARINC<pos:position pos:line="1405" pos:column="21"/></name><argument_list pos:line="1405" pos:column="21">(<argument><expr><name pos:line="1405" pos:column="22">c<pos:position pos:line="1405" pos:column="23"/></name></expr></argument>, <argument><expr><name pos:line="1405" pos:column="25">eptr<pos:position pos:line="1405" pos:column="29"/></name></expr></argument>)<pos:position pos:line="1405" pos:column="30"/></argument_list></call></expr>;<pos:position pos:line="1405" pos:column="31"/></expr_stmt>
          <if pos:line="1406" pos:column="11">if <condition pos:line="1406" pos:column="14">(<expr><operator pos:line="1406" pos:column="15">!<pos:position pos:line="1406" pos:column="16"/></operator><call><name pos:line="1406" pos:column="16">match_xclass<pos:position pos:line="1406" pos:column="28"/></name><argument_list pos:line="1406" pos:column="28">(<argument><expr><name pos:line="1406" pos:column="29">c<pos:position pos:line="1406" pos:column="30"/></name></expr></argument>, <argument><expr><name pos:line="1406" pos:column="32">data<pos:position pos:line="1406" pos:column="36"/></name></expr></argument>)<pos:position pos:line="1406" pos:column="37"/></argument_list></call></expr>)<pos:position pos:line="1406" pos:column="38"/></condition><then pos:line="1406" pos:column="38"> <block type="pseudo"><expr_stmt><expr><call><name pos:line="1406" pos:column="39">RRETURN<pos:position pos:line="1406" pos:column="46"/></name><argument_list pos:line="1406" pos:column="46">(<argument><expr><name pos:line="1406" pos:column="47">MATCH_NOMATCH<pos:position pos:line="1406" pos:column="60"/></name></expr></argument>)<pos:position pos:line="1406" pos:column="61"/></argument_list></call></expr>;<pos:position pos:line="1406" pos:column="62"/></expr_stmt></block></then></if>
          }<pos:position pos:line="1407" pos:column="12"/></block></for>
        <comment type="block" pos:line="1408" pos:column="9">/* Control never gets here */</comment>
        }<pos:position pos:line="1409" pos:column="10"/></block></then>

      <comment type="block" pos:line="1411" pos:column="7">/* If maximizing, find the longest possible run, then work backwards. */</comment>

      <else pos:line="1413" pos:column="7">else
        <block pos:line="1414" pos:column="9">{
        <expr_stmt><expr><name pos:line="1415" pos:column="9">pp<pos:position pos:line="1415" pos:column="11"/></name> <operator pos:line="1415" pos:column="12">=<pos:position pos:line="1415" pos:column="13"/></operator> <name pos:line="1415" pos:column="14">eptr<pos:position pos:line="1415" pos:column="18"/></name></expr>;<pos:position pos:line="1415" pos:column="19"/></expr_stmt>
        <for pos:line="1416" pos:column="9">for <control pos:line="1416" pos:column="13">(<init><expr><name pos:line="1416" pos:column="14">i<pos:position pos:line="1416" pos:column="15"/></name> <operator pos:line="1416" pos:column="16">=<pos:position pos:line="1416" pos:column="17"/></operator> <name pos:line="1416" pos:column="18">min<pos:position pos:line="1416" pos:column="21"/></name></expr>;<pos:position pos:line="1416" pos:column="22"/></init> <condition><expr><name pos:line="1416" pos:column="23">i<pos:position pos:line="1416" pos:column="24"/></name> <operator pos:line="1416" pos:column="25">&lt;<pos:position pos:line="1416" pos:column="29"/></operator> <name pos:line="1416" pos:column="27">max<pos:position pos:line="1416" pos:column="30"/></name></expr>;<pos:position pos:line="1416" pos:column="31"/></condition> <incr><expr><name pos:line="1416" pos:column="32">i<pos:position pos:line="1416" pos:column="33"/></name><operator pos:line="1416" pos:column="33">++<pos:position pos:line="1416" pos:column="35"/></operator></expr></incr>)<pos:position pos:line="1416" pos:column="36"/></control>
          <block pos:line="1417" pos:column="11">{
          <decl_stmt><decl><type><name pos:line="1418" pos:column="11">int<pos:position pos:line="1418" pos:column="14"/></name></type> <name pos:line="1418" pos:column="15">len<pos:position pos:line="1418" pos:column="18"/></name> <init pos:line="1418" pos:column="19">= <expr><literal type="number" pos:line="1418" pos:column="21">1<pos:position pos:line="1418" pos:column="22"/></literal></expr></init></decl>;<pos:position pos:line="1418" pos:column="23"/></decl_stmt>
          <if pos:line="1419" pos:column="11">if <condition pos:line="1419" pos:column="14">(<expr><name pos:line="1419" pos:column="15">eptr<pos:position pos:line="1419" pos:column="19"/></name> <operator pos:line="1419" pos:column="20">&gt;=<pos:position pos:line="1419" pos:column="25"/></operator> <name><name pos:line="1419" pos:column="23">md<pos:position pos:line="1419" pos:column="25"/></name><operator pos:line="1419" pos:column="25">-&gt;<pos:position pos:line="1419" pos:column="30"/></operator><name pos:line="1419" pos:column="27">end_subject<pos:position pos:line="1419" pos:column="38"/></name></name></expr>)<pos:position pos:line="1419" pos:column="39"/></condition><then pos:line="1419" pos:column="39"> <block type="pseudo"><break pos:line="1419" pos:column="40">break;<pos:position pos:line="1419" pos:column="46"/></break></block></then></if>
          <expr_stmt><expr><call><name pos:line="1420" pos:column="11">GETCHARLEN<pos:position pos:line="1420" pos:column="21"/></name><argument_list pos:line="1420" pos:column="21">(<argument><expr><name pos:line="1420" pos:column="22">c<pos:position pos:line="1420" pos:column="23"/></name></expr></argument>, <argument><expr><name pos:line="1420" pos:column="25">eptr<pos:position pos:line="1420" pos:column="29"/></name></expr></argument>, <argument><expr><name pos:line="1420" pos:column="31">len<pos:position pos:line="1420" pos:column="34"/></name></expr></argument>)<pos:position pos:line="1420" pos:column="35"/></argument_list></call></expr>;<pos:position pos:line="1420" pos:column="36"/></expr_stmt>
          <if pos:line="1421" pos:column="11">if <condition pos:line="1421" pos:column="14">(<expr><operator pos:line="1421" pos:column="15">!<pos:position pos:line="1421" pos:column="16"/></operator><call><name pos:line="1421" pos:column="16">match_xclass<pos:position pos:line="1421" pos:column="28"/></name><argument_list pos:line="1421" pos:column="28">(<argument><expr><name pos:line="1421" pos:column="29">c<pos:position pos:line="1421" pos:column="30"/></name></expr></argument>, <argument><expr><name pos:line="1421" pos:column="32">data<pos:position pos:line="1421" pos:column="36"/></name></expr></argument>)<pos:position pos:line="1421" pos:column="37"/></argument_list></call></expr>)<pos:position pos:line="1421" pos:column="38"/></condition><then pos:line="1421" pos:column="38"> <block type="pseudo"><break pos:line="1421" pos:column="39">break;<pos:position pos:line="1421" pos:column="45"/></break></block></then></if>
          <expr_stmt><expr><name pos:line="1422" pos:column="11">eptr<pos:position pos:line="1422" pos:column="15"/></name> <operator pos:line="1422" pos:column="16">+=<pos:position pos:line="1422" pos:column="18"/></operator> <name pos:line="1422" pos:column="19">len<pos:position pos:line="1422" pos:column="22"/></name></expr>;<pos:position pos:line="1422" pos:column="23"/></expr_stmt>
          }<pos:position pos:line="1423" pos:column="12"/></block></for>
        <for pos:line="1424" pos:column="9">for<control pos:line="1424" pos:column="12">(<init pos:line="1424" pos:column="13">;<pos:position pos:line="1424" pos:column="14"/></init><condition pos:line="1424" pos:column="14">;<pos:position pos:line="1424" pos:column="15"/></condition><incr/>)<pos:position pos:line="1424" pos:column="16"/></control>
          <block pos:line="1425" pos:column="11">{
          <expr_stmt><expr><call><name pos:line="1426" pos:column="11">RMATCH<pos:position pos:line="1426" pos:column="17"/></name><argument_list pos:line="1426" pos:column="17">(<argument><expr><name pos:line="1426" pos:column="18">rrc<pos:position pos:line="1426" pos:column="21"/></name></expr></argument>, <argument><expr><name pos:line="1426" pos:column="23">eptr<pos:position pos:line="1426" pos:column="27"/></name></expr></argument>, <argument><expr><name pos:line="1426" pos:column="29">ecode<pos:position pos:line="1426" pos:column="34"/></name></expr></argument>, <argument><expr><name pos:line="1426" pos:column="36">offset_top<pos:position pos:line="1426" pos:column="46"/></name></expr></argument>, <argument><expr><name pos:line="1426" pos:column="48">md<pos:position pos:line="1426" pos:column="50"/></name></expr></argument>, <argument><expr><name pos:line="1426" pos:column="52">ims<pos:position pos:line="1426" pos:column="55"/></name></expr></argument>, <argument><expr><name pos:line="1426" pos:column="57">eptrb<pos:position pos:line="1426" pos:column="62"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="1426" pos:column="64">0<pos:position pos:line="1426" pos:column="65"/></literal></expr></argument>)<pos:position pos:line="1426" pos:column="66"/></argument_list></call></expr>;<pos:position pos:line="1426" pos:column="67"/></expr_stmt>
          <if pos:line="1427" pos:column="11">if <condition pos:line="1427" pos:column="14">(<expr><name pos:line="1427" pos:column="15">rrc<pos:position pos:line="1427" pos:column="18"/></name> <operator pos:line="1427" pos:column="19">!=<pos:position pos:line="1427" pos:column="21"/></operator> <name pos:line="1427" pos:column="22">MATCH_NOMATCH<pos:position pos:line="1427" pos:column="35"/></name></expr>)<pos:position pos:line="1427" pos:column="36"/></condition><then pos:line="1427" pos:column="36"> <block type="pseudo"><expr_stmt><expr><call><name pos:line="1427" pos:column="37">RRETURN<pos:position pos:line="1427" pos:column="44"/></name><argument_list pos:line="1427" pos:column="44">(<argument><expr><name pos:line="1427" pos:column="45">rrc<pos:position pos:line="1427" pos:column="48"/></name></expr></argument>)<pos:position pos:line="1427" pos:column="49"/></argument_list></call></expr>;<pos:position pos:line="1427" pos:column="50"/></expr_stmt></block></then></if>
          <if pos:line="1428" pos:column="11">if <condition pos:line="1428" pos:column="14">(<expr><name pos:line="1428" pos:column="15">eptr<pos:position pos:line="1428" pos:column="19"/></name><operator pos:line="1428" pos:column="19">--<pos:position pos:line="1428" pos:column="21"/></operator> <operator pos:line="1428" pos:column="22">==<pos:position pos:line="1428" pos:column="24"/></operator> <name pos:line="1428" pos:column="25">pp<pos:position pos:line="1428" pos:column="27"/></name></expr>)<pos:position pos:line="1428" pos:column="28"/></condition><then pos:line="1428" pos:column="28"> <block type="pseudo"><break pos:line="1428" pos:column="29">break;<pos:position pos:line="1428" pos:column="35"/></break></block></then></if>        <comment type="block" pos:line="1428" pos:column="43">/* Stop if tried at original pos */</comment>
          <macro><name pos:line="1429" pos:column="11">BACKCHAR<pos:position pos:line="1429" pos:column="19"/></name><argument_list pos:line="1429" pos:column="19">(<argument pos:line="1429" pos:column="20">eptr<pos:position pos:line="1429" pos:column="24"/></argument>)<pos:position pos:line="1429" pos:column="25"/></argument_list></macro>
          }<pos:position pos:line="1430" pos:column="12"/></block></for>
        <expr_stmt><expr><call><name pos:line="1431" pos:column="9">RRETURN<pos:position pos:line="1431" pos:column="16"/></name><argument_list pos:line="1431" pos:column="16">(<argument><expr><name pos:line="1431" pos:column="17">MATCH_NOMATCH<pos:position pos:line="1431" pos:column="30"/></name></expr></argument>)<pos:position pos:line="1431" pos:column="31"/></argument_list></call></expr>;<pos:position pos:line="1431" pos:column="32"/></expr_stmt>
        }<pos:position pos:line="1432" pos:column="10"/></block></else></if>

      <comment type="block" pos:line="1434" pos:column="7">/* Control never gets here */</comment>
      }<pos:position pos:line="1435" pos:column="8"/></block>
<cpp:endif pos:line="1436" pos:column="1">#<cpp:directive pos:line="1436" pos:column="2">endif<pos:position pos:line="1436" pos:column="7"/></cpp:directive></cpp:endif>    <comment type="block" pos:line="1436" pos:column="11">/* End of XCLASS */</comment>

    <comment type="block" pos:line="1438" pos:column="5">/* Match a single character, casefully */</comment>

    <case pos:line="1440" pos:column="5">case <expr><name pos:line="1440" pos:column="10">OP_CHAR<pos:position pos:line="1440" pos:column="17"/></name></expr>:<pos:position pos:line="1440" pos:column="18"/></case>
<cpp:ifdef pos:line="1441" pos:column="1">#<cpp:directive pos:line="1441" pos:column="2">ifdef<pos:position pos:line="1441" pos:column="7"/></cpp:directive> <name pos:line="1441" pos:column="8">SUPPORT_UTF8<pos:position pos:line="1441" pos:column="20"/></name></cpp:ifdef>
    <if pos:line="1442" pos:column="5">if <condition pos:line="1442" pos:column="8">(<expr><name><name pos:line="1442" pos:column="9">md<pos:position pos:line="1442" pos:column="11"/></name><operator pos:line="1442" pos:column="11">-&gt;<pos:position pos:line="1442" pos:column="16"/></operator><name pos:line="1442" pos:column="13">utf8<pos:position pos:line="1442" pos:column="17"/></name></name></expr>)<pos:position pos:line="1442" pos:column="18"/></condition><then pos:line="1442" pos:column="18">
      <block pos:line="1443" pos:column="7">{
      <expr_stmt><expr><name pos:line="1444" pos:column="7">length<pos:position pos:line="1444" pos:column="13"/></name> <operator pos:line="1444" pos:column="14">=<pos:position pos:line="1444" pos:column="15"/></operator> <literal type="number" pos:line="1444" pos:column="16">1<pos:position pos:line="1444" pos:column="17"/></literal></expr>;<pos:position pos:line="1444" pos:column="18"/></expr_stmt>
      <expr_stmt><expr><name pos:line="1445" pos:column="7">ecode<pos:position pos:line="1445" pos:column="12"/></name><operator pos:line="1445" pos:column="12">++<pos:position pos:line="1445" pos:column="14"/></operator></expr>;<pos:position pos:line="1445" pos:column="15"/></expr_stmt>
      <expr_stmt><expr><call><name pos:line="1446" pos:column="7">GETCHARLEN<pos:position pos:line="1446" pos:column="17"/></name><argument_list pos:line="1446" pos:column="17">(<argument><expr><name pos:line="1446" pos:column="18">fc<pos:position pos:line="1446" pos:column="20"/></name></expr></argument>, <argument><expr><name pos:line="1446" pos:column="22">ecode<pos:position pos:line="1446" pos:column="27"/></name></expr></argument>, <argument><expr><name pos:line="1446" pos:column="29">length<pos:position pos:line="1446" pos:column="35"/></name></expr></argument>)<pos:position pos:line="1446" pos:column="36"/></argument_list></call></expr>;<pos:position pos:line="1446" pos:column="37"/></expr_stmt>
      <if pos:line="1447" pos:column="7">if <condition pos:line="1447" pos:column="10">(<expr><name pos:line="1447" pos:column="11">length<pos:position pos:line="1447" pos:column="17"/></name> <operator pos:line="1447" pos:column="18">&gt;<pos:position pos:line="1447" pos:column="22"/></operator> <name><name pos:line="1447" pos:column="20">md<pos:position pos:line="1447" pos:column="22"/></name><operator pos:line="1447" pos:column="22">-&gt;<pos:position pos:line="1447" pos:column="27"/></operator><name pos:line="1447" pos:column="24">end_subject<pos:position pos:line="1447" pos:column="35"/></name></name> <operator pos:line="1447" pos:column="36">-<pos:position pos:line="1447" pos:column="37"/></operator> <name pos:line="1447" pos:column="38">eptr<pos:position pos:line="1447" pos:column="42"/></name></expr>)<pos:position pos:line="1447" pos:column="43"/></condition><then pos:line="1447" pos:column="43"> <block type="pseudo"><expr_stmt><expr><call><name pos:line="1447" pos:column="44">RRETURN<pos:position pos:line="1447" pos:column="51"/></name><argument_list pos:line="1447" pos:column="51">(<argument><expr><name pos:line="1447" pos:column="52">MATCH_NOMATCH<pos:position pos:line="1447" pos:column="65"/></name></expr></argument>)<pos:position pos:line="1447" pos:column="66"/></argument_list></call></expr>;<pos:position pos:line="1447" pos:column="67"/></expr_stmt></block></then></if>
      <while pos:line="1448" pos:column="7">while <condition pos:line="1448" pos:column="13">(<expr><name pos:line="1448" pos:column="14">length<pos:position pos:line="1448" pos:column="20"/></name><operator pos:line="1448" pos:column="20">--<pos:position pos:line="1448" pos:column="22"/></operator> <operator pos:line="1448" pos:column="23">&gt;<pos:position pos:line="1448" pos:column="27"/></operator> <literal type="number" pos:line="1448" pos:column="25">0<pos:position pos:line="1448" pos:column="26"/></literal></expr>)<pos:position pos:line="1448" pos:column="27"/></condition> <block type="pseudo"><if pos:line="1448" pos:column="28">if <condition pos:line="1448" pos:column="31">(<expr><operator pos:line="1448" pos:column="32">*<pos:position pos:line="1448" pos:column="33"/></operator><name pos:line="1448" pos:column="33">ecode<pos:position pos:line="1448" pos:column="38"/></name><operator pos:line="1448" pos:column="38">++<pos:position pos:line="1448" pos:column="40"/></operator> <operator pos:line="1448" pos:column="41">!=<pos:position pos:line="1448" pos:column="43"/></operator> <operator pos:line="1448" pos:column="44">*<pos:position pos:line="1448" pos:column="45"/></operator><name pos:line="1448" pos:column="45">eptr<pos:position pos:line="1448" pos:column="49"/></name><operator pos:line="1448" pos:column="49">++<pos:position pos:line="1448" pos:column="51"/></operator></expr>)<pos:position pos:line="1448" pos:column="52"/></condition><then pos:line="1448" pos:column="52"> <block type="pseudo"><expr_stmt><expr><call><name pos:line="1448" pos:column="53">RRETURN<pos:position pos:line="1448" pos:column="60"/></name><argument_list pos:line="1448" pos:column="60">(<argument><expr><name pos:line="1448" pos:column="61">MATCH_NOMATCH<pos:position pos:line="1448" pos:column="74"/></name></expr></argument>)<pos:position pos:line="1448" pos:column="75"/></argument_list></call></expr>;<pos:position pos:line="1448" pos:column="76"/></expr_stmt></block></then></if></block></while>
      }<pos:position pos:line="1449" pos:column="8"/></block></then>
    <else pos:line="1450" pos:column="5">else
<cpp:endif pos:line="1451" pos:column="1">#<cpp:directive pos:line="1451" pos:column="2">endif<pos:position pos:line="1451" pos:column="7"/></cpp:directive></cpp:endif>

    <comment type="block" pos:line="1453" pos:column="5">/* Non-UTF-8 mode */</comment>
      <block pos:line="1454" pos:column="7">{
      <if pos:line="1455" pos:column="7">if <condition pos:line="1455" pos:column="10">(<expr><name><name pos:line="1455" pos:column="11">md<pos:position pos:line="1455" pos:column="13"/></name><operator pos:line="1455" pos:column="13">-&gt;<pos:position pos:line="1455" pos:column="18"/></operator><name pos:line="1455" pos:column="15">end_subject<pos:position pos:line="1455" pos:column="26"/></name></name> <operator pos:line="1455" pos:column="27">-<pos:position pos:line="1455" pos:column="28"/></operator> <name pos:line="1455" pos:column="29">eptr<pos:position pos:line="1455" pos:column="33"/></name> <operator pos:line="1455" pos:column="34">&lt;<pos:position pos:line="1455" pos:column="38"/></operator> <literal type="number" pos:line="1455" pos:column="36">1<pos:position pos:line="1455" pos:column="37"/></literal></expr>)<pos:position pos:line="1455" pos:column="38"/></condition><then pos:line="1455" pos:column="38"> <block type="pseudo"><expr_stmt><expr><call><name pos:line="1455" pos:column="39">RRETURN<pos:position pos:line="1455" pos:column="46"/></name><argument_list pos:line="1455" pos:column="46">(<argument><expr><name pos:line="1455" pos:column="47">MATCH_NOMATCH<pos:position pos:line="1455" pos:column="60"/></name></expr></argument>)<pos:position pos:line="1455" pos:column="61"/></argument_list></call></expr>;<pos:position pos:line="1455" pos:column="62"/></expr_stmt></block></then></if>
      <if pos:line="1456" pos:column="7">if <condition pos:line="1456" pos:column="10">(<expr><name><name pos:line="1456" pos:column="11">ecode<pos:position pos:line="1456" pos:column="16"/></name><index pos:line="1456" pos:column="16">[<expr><literal type="number" pos:line="1456" pos:column="17">1<pos:position pos:line="1456" pos:column="18"/></literal></expr>]<pos:position pos:line="1456" pos:column="19"/></index></name> <operator pos:line="1456" pos:column="20">!=<pos:position pos:line="1456" pos:column="22"/></operator> <operator pos:line="1456" pos:column="23">*<pos:position pos:line="1456" pos:column="24"/></operator><name pos:line="1456" pos:column="24">eptr<pos:position pos:line="1456" pos:column="28"/></name><operator pos:line="1456" pos:column="28">++<pos:position pos:line="1456" pos:column="30"/></operator></expr>)<pos:position pos:line="1456" pos:column="31"/></condition><then pos:line="1456" pos:column="31"> <block type="pseudo"><expr_stmt><expr><call><name pos:line="1456" pos:column="32">RRETURN<pos:position pos:line="1456" pos:column="39"/></name><argument_list pos:line="1456" pos:column="39">(<argument><expr><name pos:line="1456" pos:column="40">MATCH_NOMATCH<pos:position pos:line="1456" pos:column="53"/></name></expr></argument>)<pos:position pos:line="1456" pos:column="54"/></argument_list></call></expr>;<pos:position pos:line="1456" pos:column="55"/></expr_stmt></block></then></if>
      <expr_stmt><expr><name pos:line="1457" pos:column="7">ecode<pos:position pos:line="1457" pos:column="12"/></name> <operator pos:line="1457" pos:column="13">+=<pos:position pos:line="1457" pos:column="15"/></operator> <literal type="number" pos:line="1457" pos:column="16">2<pos:position pos:line="1457" pos:column="17"/></literal></expr>;<pos:position pos:line="1457" pos:column="18"/></expr_stmt>
      }<pos:position pos:line="1458" pos:column="8"/></block></else></if>
    <break pos:line="1459" pos:column="5">break;<pos:position pos:line="1459" pos:column="11"/></break>

    <comment type="block" pos:line="1461" pos:column="5">/* Match a single character, caselessly */</comment>

    <case pos:line="1463" pos:column="5">case <expr><name pos:line="1463" pos:column="10">OP_CHARNC<pos:position pos:line="1463" pos:column="19"/></name></expr>:<pos:position pos:line="1463" pos:column="20"/></case>
<cpp:ifdef pos:line="1464" pos:column="1">#<cpp:directive pos:line="1464" pos:column="2">ifdef<pos:position pos:line="1464" pos:column="7"/></cpp:directive> <name pos:line="1464" pos:column="8">SUPPORT_UTF8<pos:position pos:line="1464" pos:column="20"/></name></cpp:ifdef>
    <if pos:line="1465" pos:column="5">if <condition pos:line="1465" pos:column="8">(<expr><name><name pos:line="1465" pos:column="9">md<pos:position pos:line="1465" pos:column="11"/></name><operator pos:line="1465" pos:column="11">-&gt;<pos:position pos:line="1465" pos:column="16"/></operator><name pos:line="1465" pos:column="13">utf8<pos:position pos:line="1465" pos:column="17"/></name></name></expr>)<pos:position pos:line="1465" pos:column="18"/></condition><then pos:line="1465" pos:column="18">
      <block pos:line="1466" pos:column="7">{
      <expr_stmt><expr><name pos:line="1467" pos:column="7">length<pos:position pos:line="1467" pos:column="13"/></name> <operator pos:line="1467" pos:column="14">=<pos:position pos:line="1467" pos:column="15"/></operator> <literal type="number" pos:line="1467" pos:column="16">1<pos:position pos:line="1467" pos:column="17"/></literal></expr>;<pos:position pos:line="1467" pos:column="18"/></expr_stmt>
      <expr_stmt><expr><name pos:line="1468" pos:column="7">ecode<pos:position pos:line="1468" pos:column="12"/></name><operator pos:line="1468" pos:column="12">++<pos:position pos:line="1468" pos:column="14"/></operator></expr>;<pos:position pos:line="1468" pos:column="15"/></expr_stmt>
      <expr_stmt><expr><call><name pos:line="1469" pos:column="7">GETCHARLEN<pos:position pos:line="1469" pos:column="17"/></name><argument_list pos:line="1469" pos:column="17">(<argument><expr><name pos:line="1469" pos:column="18">fc<pos:position pos:line="1469" pos:column="20"/></name></expr></argument>, <argument><expr><name pos:line="1469" pos:column="22">ecode<pos:position pos:line="1469" pos:column="27"/></name></expr></argument>, <argument><expr><name pos:line="1469" pos:column="29">length<pos:position pos:line="1469" pos:column="35"/></name></expr></argument>)<pos:position pos:line="1469" pos:column="36"/></argument_list></call></expr>;<pos:position pos:line="1469" pos:column="37"/></expr_stmt>

      <if pos:line="1471" pos:column="7">if <condition pos:line="1471" pos:column="10">(<expr><name pos:line="1471" pos:column="11">length<pos:position pos:line="1471" pos:column="17"/></name> <operator pos:line="1471" pos:column="18">&gt;<pos:position pos:line="1471" pos:column="22"/></operator> <name><name pos:line="1471" pos:column="20">md<pos:position pos:line="1471" pos:column="22"/></name><operator pos:line="1471" pos:column="22">-&gt;<pos:position pos:line="1471" pos:column="27"/></operator><name pos:line="1471" pos:column="24">end_subject<pos:position pos:line="1471" pos:column="35"/></name></name> <operator pos:line="1471" pos:column="36">-<pos:position pos:line="1471" pos:column="37"/></operator> <name pos:line="1471" pos:column="38">eptr<pos:position pos:line="1471" pos:column="42"/></name></expr>)<pos:position pos:line="1471" pos:column="43"/></condition><then pos:line="1471" pos:column="43"> <block type="pseudo"><expr_stmt><expr><call><name pos:line="1471" pos:column="44">RRETURN<pos:position pos:line="1471" pos:column="51"/></name><argument_list pos:line="1471" pos:column="51">(<argument><expr><name pos:line="1471" pos:column="52">MATCH_NOMATCH<pos:position pos:line="1471" pos:column="65"/></name></expr></argument>)<pos:position pos:line="1471" pos:column="66"/></argument_list></call></expr>;<pos:position pos:line="1471" pos:column="67"/></expr_stmt></block></then></if>

      <comment type="block" pos:line="1473" pos:column="7">/* If the pattern character's value is &lt; 128, we have only one byte, and
      can use the fast lookup table. */</comment>

      <if pos:line="1476" pos:column="7">if <condition pos:line="1476" pos:column="10">(<expr><name pos:line="1476" pos:column="11">fc<pos:position pos:line="1476" pos:column="13"/></name> <operator pos:line="1476" pos:column="14">&lt;<pos:position pos:line="1476" pos:column="18"/></operator> <literal type="number" pos:line="1476" pos:column="16">128<pos:position pos:line="1476" pos:column="19"/></literal></expr>)<pos:position pos:line="1476" pos:column="20"/></condition><then pos:line="1476" pos:column="20">
        <block pos:line="1477" pos:column="9">{
        <if pos:line="1478" pos:column="9">if <condition pos:line="1478" pos:column="12">(<expr><name><name pos:line="1478" pos:column="13">md<pos:position pos:line="1478" pos:column="15"/></name><operator pos:line="1478" pos:column="15">-&gt;<pos:position pos:line="1478" pos:column="20"/></operator><name pos:line="1478" pos:column="17">lcc<pos:position pos:line="1478" pos:column="20"/></name><index pos:line="1478" pos:column="20">[<expr><operator pos:line="1478" pos:column="21">*<pos:position pos:line="1478" pos:column="22"/></operator><name pos:line="1478" pos:column="22">ecode<pos:position pos:line="1478" pos:column="27"/></name><operator pos:line="1478" pos:column="27">++<pos:position pos:line="1478" pos:column="29"/></operator></expr>]<pos:position pos:line="1478" pos:column="30"/></index></name> <operator pos:line="1478" pos:column="31">!=<pos:position pos:line="1478" pos:column="33"/></operator> <name><name pos:line="1478" pos:column="34">md<pos:position pos:line="1478" pos:column="36"/></name><operator pos:line="1478" pos:column="36">-&gt;<pos:position pos:line="1478" pos:column="41"/></operator><name pos:line="1478" pos:column="38">lcc<pos:position pos:line="1478" pos:column="41"/></name><index pos:line="1478" pos:column="41">[<expr><operator pos:line="1478" pos:column="42">*<pos:position pos:line="1478" pos:column="43"/></operator><name pos:line="1478" pos:column="43">eptr<pos:position pos:line="1478" pos:column="47"/></name><operator pos:line="1478" pos:column="47">++<pos:position pos:line="1478" pos:column="49"/></operator></expr>]<pos:position pos:line="1478" pos:column="50"/></index></name></expr>)<pos:position pos:line="1478" pos:column="51"/></condition><then pos:line="1478" pos:column="51"> <block type="pseudo"><expr_stmt><expr><call><name pos:line="1478" pos:column="52">RRETURN<pos:position pos:line="1478" pos:column="59"/></name><argument_list pos:line="1478" pos:column="59">(<argument><expr><name pos:line="1478" pos:column="60">MATCH_NOMATCH<pos:position pos:line="1478" pos:column="73"/></name></expr></argument>)<pos:position pos:line="1478" pos:column="74"/></argument_list></call></expr>;<pos:position pos:line="1478" pos:column="75"/></expr_stmt></block></then></if>
        }<pos:position pos:line="1479" pos:column="10"/></block></then>

      <comment type="block" pos:line="1481" pos:column="7">/* Otherwise we must pick up the subject character */</comment>

      <else pos:line="1483" pos:column="7">else
        <block pos:line="1484" pos:column="9">{
        <decl_stmt><decl><type><name pos:line="1485" pos:column="9">int<pos:position pos:line="1485" pos:column="12"/></name></type> <name pos:line="1485" pos:column="13">dc<pos:position pos:line="1485" pos:column="15"/></name></decl>;<pos:position pos:line="1485" pos:column="16"/></decl_stmt>
        <expr_stmt><expr><call><name pos:line="1486" pos:column="9">GETCHARINC<pos:position pos:line="1486" pos:column="19"/></name><argument_list pos:line="1486" pos:column="19">(<argument><expr><name pos:line="1486" pos:column="20">dc<pos:position pos:line="1486" pos:column="22"/></name></expr></argument>, <argument><expr><name pos:line="1486" pos:column="24">eptr<pos:position pos:line="1486" pos:column="28"/></name></expr></argument>)<pos:position pos:line="1486" pos:column="29"/></argument_list></call></expr>;<pos:position pos:line="1486" pos:column="30"/></expr_stmt>
        <expr_stmt><expr><name pos:line="1487" pos:column="9">ecode<pos:position pos:line="1487" pos:column="14"/></name> <operator pos:line="1487" pos:column="15">+=<pos:position pos:line="1487" pos:column="17"/></operator> <name pos:line="1487" pos:column="18">length<pos:position pos:line="1487" pos:column="24"/></name></expr>;<pos:position pos:line="1487" pos:column="25"/></expr_stmt>

        <comment type="block" pos:line="1489" pos:column="9">/* If we have Unicode property support, we can use it to test the other
        case of the character, if there is one. The result of ucp_findchar() is
        &lt; 0 if the char isn't found, and othercase is returned as zero if there
        isn't one. */</comment>

        <if pos:line="1494" pos:column="9">if <condition pos:line="1494" pos:column="12">(<expr><name pos:line="1494" pos:column="13">fc<pos:position pos:line="1494" pos:column="15"/></name> <operator pos:line="1494" pos:column="16">!=<pos:position pos:line="1494" pos:column="18"/></operator> <name pos:line="1494" pos:column="19">dc<pos:position pos:line="1494" pos:column="21"/></name></expr>)<pos:position pos:line="1494" pos:column="22"/></condition><then pos:line="1494" pos:column="22">
          <block pos:line="1495" pos:column="11">{
<cpp:ifdef pos:line="1496" pos:column="1">#<cpp:directive pos:line="1496" pos:column="2">ifdef<pos:position pos:line="1496" pos:column="7"/></cpp:directive> <name pos:line="1496" pos:column="8">SUPPORT_UCP<pos:position pos:line="1496" pos:column="19"/></name></cpp:ifdef>
          <decl_stmt><decl><type><name pos:line="1497" pos:column="11">int<pos:position pos:line="1497" pos:column="14"/></name></type> <name pos:line="1497" pos:column="15">chartype<pos:position pos:line="1497" pos:column="23"/></name></decl>;<pos:position pos:line="1497" pos:column="24"/></decl_stmt>
          <decl_stmt><decl><type><name pos:line="1498" pos:column="11">int<pos:position pos:line="1498" pos:column="14"/></name></type> <name pos:line="1498" pos:column="15">othercase<pos:position pos:line="1498" pos:column="24"/></name></decl>;<pos:position pos:line="1498" pos:column="25"/></decl_stmt>
          <if pos:line="1499" pos:column="11">if <condition pos:line="1499" pos:column="14">(<expr><call><name pos:line="1499" pos:column="15">ucp_findchar<pos:position pos:line="1499" pos:column="27"/></name><argument_list pos:line="1499" pos:column="27">(<argument><expr><name pos:line="1499" pos:column="28">fc<pos:position pos:line="1499" pos:column="30"/></name></expr></argument>, <argument><expr><operator pos:line="1499" pos:column="32">&amp;<pos:position pos:line="1499" pos:column="37"/></operator><name pos:line="1499" pos:column="33">chartype<pos:position pos:line="1499" pos:column="41"/></name></expr></argument>, <argument><expr><operator pos:line="1499" pos:column="43">&amp;<pos:position pos:line="1499" pos:column="48"/></operator><name pos:line="1499" pos:column="44">othercase<pos:position pos:line="1499" pos:column="53"/></name></expr></argument>)<pos:position pos:line="1499" pos:column="54"/></argument_list></call> <operator pos:line="1499" pos:column="55">&lt;<pos:position pos:line="1499" pos:column="59"/></operator> <literal type="number" pos:line="1499" pos:column="57">0<pos:position pos:line="1499" pos:column="58"/></literal> <operator pos:line="1499" pos:column="59">||<pos:position pos:line="1499" pos:column="61"/></operator> <name pos:line="1499" pos:column="62">dc<pos:position pos:line="1499" pos:column="64"/></name> <operator pos:line="1499" pos:column="65">!=<pos:position pos:line="1499" pos:column="67"/></operator> <name pos:line="1499" pos:column="68">othercase<pos:position pos:line="1499" pos:column="77"/></name></expr>)<pos:position pos:line="1499" pos:column="78"/></condition><then pos:line="1499" pos:column="78">
<cpp:endif pos:line="1500" pos:column="1">#<cpp:directive pos:line="1500" pos:column="2">endif<pos:position pos:line="1500" pos:column="7"/></cpp:directive></cpp:endif>
            <block type="pseudo"><expr_stmt><expr><call><name pos:line="1501" pos:column="13">RRETURN<pos:position pos:line="1501" pos:column="20"/></name><argument_list pos:line="1501" pos:column="20">(<argument><expr><name pos:line="1501" pos:column="21">MATCH_NOMATCH<pos:position pos:line="1501" pos:column="34"/></name></expr></argument>)<pos:position pos:line="1501" pos:column="35"/></argument_list></call></expr>;<pos:position pos:line="1501" pos:column="36"/></expr_stmt></block></then></if>
          }<pos:position pos:line="1502" pos:column="12"/></block></then></if>
        }<pos:position pos:line="1503" pos:column="10"/></block></else></if>
      }<pos:position pos:line="1504" pos:column="8"/></block></then>
    <else pos:line="1505" pos:column="5">else
<cpp:endif pos:line="1506" pos:column="1">#<cpp:directive pos:line="1506" pos:column="2">endif<pos:position pos:line="1506" pos:column="7"/></cpp:directive></cpp:endif>   <comment type="block" pos:line="1506" pos:column="10">/* SUPPORT_UTF8 */</comment>

    <comment type="block" pos:line="1508" pos:column="5">/* Non-UTF-8 mode */</comment>
      <block pos:line="1509" pos:column="7">{
      <if pos:line="1510" pos:column="7">if <condition pos:line="1510" pos:column="10">(<expr><name><name pos:line="1510" pos:column="11">md<pos:position pos:line="1510" pos:column="13"/></name><operator pos:line="1510" pos:column="13">-&gt;<pos:position pos:line="1510" pos:column="18"/></operator><name pos:line="1510" pos:column="15">end_subject<pos:position pos:line="1510" pos:column="26"/></name></name> <operator pos:line="1510" pos:column="27">-<pos:position pos:line="1510" pos:column="28"/></operator> <name pos:line="1510" pos:column="29">eptr<pos:position pos:line="1510" pos:column="33"/></name> <operator pos:line="1510" pos:column="34">&lt;<pos:position pos:line="1510" pos:column="38"/></operator> <literal type="number" pos:line="1510" pos:column="36">1<pos:position pos:line="1510" pos:column="37"/></literal></expr>)<pos:position pos:line="1510" pos:column="38"/></condition><then pos:line="1510" pos:column="38"> <block type="pseudo"><expr_stmt><expr><call><name pos:line="1510" pos:column="39">RRETURN<pos:position pos:line="1510" pos:column="46"/></name><argument_list pos:line="1510" pos:column="46">(<argument><expr><name pos:line="1510" pos:column="47">MATCH_NOMATCH<pos:position pos:line="1510" pos:column="60"/></name></expr></argument>)<pos:position pos:line="1510" pos:column="61"/></argument_list></call></expr>;<pos:position pos:line="1510" pos:column="62"/></expr_stmt></block></then></if>
      <if pos:line="1511" pos:column="7">if <condition pos:line="1511" pos:column="10">(<expr><name><name pos:line="1511" pos:column="11">md<pos:position pos:line="1511" pos:column="13"/></name><operator pos:line="1511" pos:column="13">-&gt;<pos:position pos:line="1511" pos:column="18"/></operator><name pos:line="1511" pos:column="15">lcc<pos:position pos:line="1511" pos:column="18"/></name><index pos:line="1511" pos:column="18">[<expr><name><name pos:line="1511" pos:column="19">ecode<pos:position pos:line="1511" pos:column="24"/></name><index pos:line="1511" pos:column="24">[<expr><literal type="number" pos:line="1511" pos:column="25">1<pos:position pos:line="1511" pos:column="26"/></literal></expr>]<pos:position pos:line="1511" pos:column="27"/></index></name></expr>]<pos:position pos:line="1511" pos:column="28"/></index></name> <operator pos:line="1511" pos:column="29">!=<pos:position pos:line="1511" pos:column="31"/></operator> <name><name pos:line="1511" pos:column="32">md<pos:position pos:line="1511" pos:column="34"/></name><operator pos:line="1511" pos:column="34">-&gt;<pos:position pos:line="1511" pos:column="39"/></operator><name pos:line="1511" pos:column="36">lcc<pos:position pos:line="1511" pos:column="39"/></name><index pos:line="1511" pos:column="39">[<expr><operator pos:line="1511" pos:column="40">*<pos:position pos:line="1511" pos:column="41"/></operator><name pos:line="1511" pos:column="41">eptr<pos:position pos:line="1511" pos:column="45"/></name><operator pos:line="1511" pos:column="45">++<pos:position pos:line="1511" pos:column="47"/></operator></expr>]<pos:position pos:line="1511" pos:column="48"/></index></name></expr>)<pos:position pos:line="1511" pos:column="49"/></condition><then pos:line="1511" pos:column="49"> <block type="pseudo"><expr_stmt><expr><call><name pos:line="1511" pos:column="50">RRETURN<pos:position pos:line="1511" pos:column="57"/></name><argument_list pos:line="1511" pos:column="57">(<argument><expr><name pos:line="1511" pos:column="58">MATCH_NOMATCH<pos:position pos:line="1511" pos:column="71"/></name></expr></argument>)<pos:position pos:line="1511" pos:column="72"/></argument_list></call></expr>;<pos:position pos:line="1511" pos:column="73"/></expr_stmt></block></then></if>
      <expr_stmt><expr><name pos:line="1512" pos:column="7">ecode<pos:position pos:line="1512" pos:column="12"/></name> <operator pos:line="1512" pos:column="13">+=<pos:position pos:line="1512" pos:column="15"/></operator> <literal type="number" pos:line="1512" pos:column="16">2<pos:position pos:line="1512" pos:column="17"/></literal></expr>;<pos:position pos:line="1512" pos:column="18"/></expr_stmt>
      }<pos:position pos:line="1513" pos:column="8"/></block></else></if>
    <break pos:line="1514" pos:column="5">break;<pos:position pos:line="1514" pos:column="11"/></break>

    <comment type="block" pos:line="1516" pos:column="5">/* Match a single character repeatedly; different opcodes share code. */</comment>

    <case pos:line="1518" pos:column="5">case <expr><name pos:line="1518" pos:column="10">OP_EXACT<pos:position pos:line="1518" pos:column="18"/></name></expr>:<pos:position pos:line="1518" pos:column="19"/></case>
    <expr_stmt><expr><name pos:line="1519" pos:column="5">min<pos:position pos:line="1519" pos:column="8"/></name> <operator pos:line="1519" pos:column="9">=<pos:position pos:line="1519" pos:column="10"/></operator> <name pos:line="1519" pos:column="11">max<pos:position pos:line="1519" pos:column="14"/></name> <operator pos:line="1519" pos:column="15">=<pos:position pos:line="1519" pos:column="16"/></operator> <call><name pos:line="1519" pos:column="17">GET2<pos:position pos:line="1519" pos:column="21"/></name><argument_list pos:line="1519" pos:column="21">(<argument><expr><name pos:line="1519" pos:column="22">ecode<pos:position pos:line="1519" pos:column="27"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="1519" pos:column="29">1<pos:position pos:line="1519" pos:column="30"/></literal></expr></argument>)<pos:position pos:line="1519" pos:column="31"/></argument_list></call></expr>;<pos:position pos:line="1519" pos:column="32"/></expr_stmt>
    <expr_stmt><expr><name pos:line="1520" pos:column="5">ecode<pos:position pos:line="1520" pos:column="10"/></name> <operator pos:line="1520" pos:column="11">+=<pos:position pos:line="1520" pos:column="13"/></operator> <literal type="number" pos:line="1520" pos:column="14">3<pos:position pos:line="1520" pos:column="15"/></literal></expr>;<pos:position pos:line="1520" pos:column="16"/></expr_stmt>
    <goto pos:line="1521" pos:column="5">goto <name pos:line="1521" pos:column="10">REPEATCHAR<pos:position pos:line="1521" pos:column="20"/></name>;<pos:position pos:line="1521" pos:column="21"/></goto>

    <case pos:line="1523" pos:column="5">case <expr><name pos:line="1523" pos:column="10">OP_UPTO<pos:position pos:line="1523" pos:column="17"/></name></expr>:<pos:position pos:line="1523" pos:column="18"/></case>
    <case pos:line="1524" pos:column="5">case <expr><name pos:line="1524" pos:column="10">OP_MINUPTO<pos:position pos:line="1524" pos:column="20"/></name></expr>:<pos:position pos:line="1524" pos:column="21"/></case>
    <expr_stmt><expr><name pos:line="1525" pos:column="5">min<pos:position pos:line="1525" pos:column="8"/></name> <operator pos:line="1525" pos:column="9">=<pos:position pos:line="1525" pos:column="10"/></operator> <literal type="number" pos:line="1525" pos:column="11">0<pos:position pos:line="1525" pos:column="12"/></literal></expr>;<pos:position pos:line="1525" pos:column="13"/></expr_stmt>
    <expr_stmt><expr><name pos:line="1526" pos:column="5">max<pos:position pos:line="1526" pos:column="8"/></name> <operator pos:line="1526" pos:column="9">=<pos:position pos:line="1526" pos:column="10"/></operator> <call><name pos:line="1526" pos:column="11">GET2<pos:position pos:line="1526" pos:column="15"/></name><argument_list pos:line="1526" pos:column="15">(<argument><expr><name pos:line="1526" pos:column="16">ecode<pos:position pos:line="1526" pos:column="21"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="1526" pos:column="23">1<pos:position pos:line="1526" pos:column="24"/></literal></expr></argument>)<pos:position pos:line="1526" pos:column="25"/></argument_list></call></expr>;<pos:position pos:line="1526" pos:column="26"/></expr_stmt>
    <expr_stmt><expr><name pos:line="1527" pos:column="5">minimize<pos:position pos:line="1527" pos:column="13"/></name> <operator pos:line="1527" pos:column="14">=<pos:position pos:line="1527" pos:column="15"/></operator> <operator pos:line="1527" pos:column="16">*<pos:position pos:line="1527" pos:column="17"/></operator><name pos:line="1527" pos:column="17">ecode<pos:position pos:line="1527" pos:column="22"/></name> <operator pos:line="1527" pos:column="23">==<pos:position pos:line="1527" pos:column="25"/></operator> <name pos:line="1527" pos:column="26">OP_MINUPTO<pos:position pos:line="1527" pos:column="36"/></name></expr>;<pos:position pos:line="1527" pos:column="37"/></expr_stmt>
    <expr_stmt><expr><name pos:line="1528" pos:column="5">ecode<pos:position pos:line="1528" pos:column="10"/></name> <operator pos:line="1528" pos:column="11">+=<pos:position pos:line="1528" pos:column="13"/></operator> <literal type="number" pos:line="1528" pos:column="14">3<pos:position pos:line="1528" pos:column="15"/></literal></expr>;<pos:position pos:line="1528" pos:column="16"/></expr_stmt>
    <goto pos:line="1529" pos:column="5">goto <name pos:line="1529" pos:column="10">REPEATCHAR<pos:position pos:line="1529" pos:column="20"/></name>;<pos:position pos:line="1529" pos:column="21"/></goto>

    <case pos:line="1531" pos:column="5">case <expr><name pos:line="1531" pos:column="10">OP_STAR<pos:position pos:line="1531" pos:column="17"/></name></expr>:<pos:position pos:line="1531" pos:column="18"/></case>
    <case pos:line="1532" pos:column="5">case <expr><name pos:line="1532" pos:column="10">OP_MINSTAR<pos:position pos:line="1532" pos:column="20"/></name></expr>:<pos:position pos:line="1532" pos:column="21"/></case>
    <case pos:line="1533" pos:column="5">case <expr><name pos:line="1533" pos:column="10">OP_PLUS<pos:position pos:line="1533" pos:column="17"/></name></expr>:<pos:position pos:line="1533" pos:column="18"/></case>
    <case pos:line="1534" pos:column="5">case <expr><name pos:line="1534" pos:column="10">OP_MINPLUS<pos:position pos:line="1534" pos:column="20"/></name></expr>:<pos:position pos:line="1534" pos:column="21"/></case>
    <case pos:line="1535" pos:column="5">case <expr><name pos:line="1535" pos:column="10">OP_QUERY<pos:position pos:line="1535" pos:column="18"/></name></expr>:<pos:position pos:line="1535" pos:column="19"/></case>
    <case pos:line="1536" pos:column="5">case <expr><name pos:line="1536" pos:column="10">OP_MINQUERY<pos:position pos:line="1536" pos:column="21"/></name></expr>:<pos:position pos:line="1536" pos:column="22"/></case>
    <expr_stmt><expr><name pos:line="1537" pos:column="5">c<pos:position pos:line="1537" pos:column="6"/></name> <operator pos:line="1537" pos:column="7">=<pos:position pos:line="1537" pos:column="8"/></operator> <operator pos:line="1537" pos:column="9">*<pos:position pos:line="1537" pos:column="10"/></operator><name pos:line="1537" pos:column="10">ecode<pos:position pos:line="1537" pos:column="15"/></name><operator pos:line="1537" pos:column="15">++<pos:position pos:line="1537" pos:column="17"/></operator> <operator pos:line="1537" pos:column="18">-<pos:position pos:line="1537" pos:column="19"/></operator> <name pos:line="1537" pos:column="20">OP_STAR<pos:position pos:line="1537" pos:column="27"/></name></expr>;<pos:position pos:line="1537" pos:column="28"/></expr_stmt>
    <expr_stmt><expr><name pos:line="1538" pos:column="5">minimize<pos:position pos:line="1538" pos:column="13"/></name> <operator pos:line="1538" pos:column="14">=<pos:position pos:line="1538" pos:column="15"/></operator> <operator pos:line="1538" pos:column="16">(<pos:position pos:line="1538" pos:column="17"/></operator><name pos:line="1538" pos:column="17">c<pos:position pos:line="1538" pos:column="18"/></name> <operator pos:line="1538" pos:column="19">&amp;<pos:position pos:line="1538" pos:column="24"/></operator> <literal type="number" pos:line="1538" pos:column="21">1<pos:position pos:line="1538" pos:column="22"/></literal><operator pos:line="1538" pos:column="22">)<pos:position pos:line="1538" pos:column="23"/></operator> <operator pos:line="1538" pos:column="24">!=<pos:position pos:line="1538" pos:column="26"/></operator> <literal type="number" pos:line="1538" pos:column="27">0<pos:position pos:line="1538" pos:column="28"/></literal></expr>;<pos:position pos:line="1538" pos:column="29"/></expr_stmt>
    <expr_stmt><expr><name pos:line="1539" pos:column="5">min<pos:position pos:line="1539" pos:column="8"/></name> <operator pos:line="1539" pos:column="9">=<pos:position pos:line="1539" pos:column="10"/></operator> <name><name pos:line="1539" pos:column="11">rep_min<pos:position pos:line="1539" pos:column="18"/></name><index pos:line="1539" pos:column="18">[<expr><name pos:line="1539" pos:column="19">c<pos:position pos:line="1539" pos:column="20"/></name></expr>]<pos:position pos:line="1539" pos:column="21"/></index></name></expr>;<pos:position pos:line="1539" pos:column="22"/></expr_stmt>                 <comment type="block" pos:line="1539" pos:column="39">/* Pick up values from tables; */</comment>
    <expr_stmt><expr><name pos:line="1540" pos:column="5">max<pos:position pos:line="1540" pos:column="8"/></name> <operator pos:line="1540" pos:column="9">=<pos:position pos:line="1540" pos:column="10"/></operator> <name><name pos:line="1540" pos:column="11">rep_max<pos:position pos:line="1540" pos:column="18"/></name><index pos:line="1540" pos:column="18">[<expr><name pos:line="1540" pos:column="19">c<pos:position pos:line="1540" pos:column="20"/></name></expr>]<pos:position pos:line="1540" pos:column="21"/></index></name></expr>;<pos:position pos:line="1540" pos:column="22"/></expr_stmt>                 <comment type="block" pos:line="1540" pos:column="39">/* zero for max =&gt; infinity */</comment>
    <if pos:line="1541" pos:column="5">if <condition pos:line="1541" pos:column="8">(<expr><name pos:line="1541" pos:column="9">max<pos:position pos:line="1541" pos:column="12"/></name> <operator pos:line="1541" pos:column="13">==<pos:position pos:line="1541" pos:column="15"/></operator> <literal type="number" pos:line="1541" pos:column="16">0<pos:position pos:line="1541" pos:column="17"/></literal></expr>)<pos:position pos:line="1541" pos:column="18"/></condition><then pos:line="1541" pos:column="18"> <block type="pseudo"><expr_stmt><expr><name pos:line="1541" pos:column="19">max<pos:position pos:line="1541" pos:column="22"/></name> <operator pos:line="1541" pos:column="23">=<pos:position pos:line="1541" pos:column="24"/></operator> <name pos:line="1541" pos:column="25">INT_MAX<pos:position pos:line="1541" pos:column="32"/></name></expr>;<pos:position pos:line="1541" pos:column="33"/></expr_stmt></block></then></if>

    <comment type="block" pos:line="1543" pos:column="5">/* Common code for all repeated single-character matches. We can give
    up quickly if there are fewer than the minimum number of characters left in
    the subject. */</comment>

    <label><name pos:line="1547" pos:column="5">REPEATCHAR<pos:position pos:line="1547" pos:column="15"/></name>:<pos:position pos:line="1547" pos:column="16"/></label>
<cpp:ifdef pos:line="1548" pos:column="1">#<cpp:directive pos:line="1548" pos:column="2">ifdef<pos:position pos:line="1548" pos:column="7"/></cpp:directive> <name pos:line="1548" pos:column="8">SUPPORT_UTF8<pos:position pos:line="1548" pos:column="20"/></name></cpp:ifdef>
    <if pos:line="1549" pos:column="5">if <condition pos:line="1549" pos:column="8">(<expr><name><name pos:line="1549" pos:column="9">md<pos:position pos:line="1549" pos:column="11"/></name><operator pos:line="1549" pos:column="11">-&gt;<pos:position pos:line="1549" pos:column="16"/></operator><name pos:line="1549" pos:column="13">utf8<pos:position pos:line="1549" pos:column="17"/></name></name></expr>)<pos:position pos:line="1549" pos:column="18"/></condition><then pos:line="1549" pos:column="18">
      <block pos:line="1550" pos:column="7">{
      <expr_stmt><expr><name pos:line="1551" pos:column="7">length<pos:position pos:line="1551" pos:column="13"/></name> <operator pos:line="1551" pos:column="14">=<pos:position pos:line="1551" pos:column="15"/></operator> <literal type="number" pos:line="1551" pos:column="16">1<pos:position pos:line="1551" pos:column="17"/></literal></expr>;<pos:position pos:line="1551" pos:column="18"/></expr_stmt>
      <expr_stmt><expr><name pos:line="1552" pos:column="7">charptr<pos:position pos:line="1552" pos:column="14"/></name> <operator pos:line="1552" pos:column="15">=<pos:position pos:line="1552" pos:column="16"/></operator> <name pos:line="1552" pos:column="17">ecode<pos:position pos:line="1552" pos:column="22"/></name></expr>;<pos:position pos:line="1552" pos:column="23"/></expr_stmt>
      <expr_stmt><expr><call><name pos:line="1553" pos:column="7">GETCHARLEN<pos:position pos:line="1553" pos:column="17"/></name><argument_list pos:line="1553" pos:column="17">(<argument><expr><name pos:line="1553" pos:column="18">fc<pos:position pos:line="1553" pos:column="20"/></name></expr></argument>, <argument><expr><name pos:line="1553" pos:column="22">ecode<pos:position pos:line="1553" pos:column="27"/></name></expr></argument>, <argument><expr><name pos:line="1553" pos:column="29">length<pos:position pos:line="1553" pos:column="35"/></name></expr></argument>)<pos:position pos:line="1553" pos:column="36"/></argument_list></call></expr>;<pos:position pos:line="1553" pos:column="37"/></expr_stmt>
      <if pos:line="1554" pos:column="7">if <condition pos:line="1554" pos:column="10">(<expr><name pos:line="1554" pos:column="11">min<pos:position pos:line="1554" pos:column="14"/></name> <operator pos:line="1554" pos:column="15">*<pos:position pos:line="1554" pos:column="16"/></operator> <name pos:line="1554" pos:column="17">length<pos:position pos:line="1554" pos:column="23"/></name> <operator pos:line="1554" pos:column="24">&gt;<pos:position pos:line="1554" pos:column="28"/></operator> <name><name pos:line="1554" pos:column="26">md<pos:position pos:line="1554" pos:column="28"/></name><operator pos:line="1554" pos:column="28">-&gt;<pos:position pos:line="1554" pos:column="33"/></operator><name pos:line="1554" pos:column="30">end_subject<pos:position pos:line="1554" pos:column="41"/></name></name> <operator pos:line="1554" pos:column="42">-<pos:position pos:line="1554" pos:column="43"/></operator> <name pos:line="1554" pos:column="44">eptr<pos:position pos:line="1554" pos:column="48"/></name></expr>)<pos:position pos:line="1554" pos:column="49"/></condition><then pos:line="1554" pos:column="49"> <block type="pseudo"><expr_stmt><expr><call><name pos:line="1554" pos:column="50">RRETURN<pos:position pos:line="1554" pos:column="57"/></name><argument_list pos:line="1554" pos:column="57">(<argument><expr><name pos:line="1554" pos:column="58">MATCH_NOMATCH<pos:position pos:line="1554" pos:column="71"/></name></expr></argument>)<pos:position pos:line="1554" pos:column="72"/></argument_list></call></expr>;<pos:position pos:line="1554" pos:column="73"/></expr_stmt></block></then></if>
      <expr_stmt><expr><name pos:line="1555" pos:column="7">ecode<pos:position pos:line="1555" pos:column="12"/></name> <operator pos:line="1555" pos:column="13">+=<pos:position pos:line="1555" pos:column="15"/></operator> <name pos:line="1555" pos:column="16">length<pos:position pos:line="1555" pos:column="22"/></name></expr>;<pos:position pos:line="1555" pos:column="23"/></expr_stmt>

      <comment type="block" pos:line="1557" pos:column="7">/* Handle multibyte character matching specially here. There is
      support for caseless matching if UCP support is present. */</comment>

      <if pos:line="1560" pos:column="7">if <condition pos:line="1560" pos:column="10">(<expr><name pos:line="1560" pos:column="11">length<pos:position pos:line="1560" pos:column="17"/></name> <operator pos:line="1560" pos:column="18">&gt;<pos:position pos:line="1560" pos:column="22"/></operator> <literal type="number" pos:line="1560" pos:column="20">1<pos:position pos:line="1560" pos:column="21"/></literal></expr>)<pos:position pos:line="1560" pos:column="22"/></condition><then pos:line="1560" pos:column="22">
        <block pos:line="1561" pos:column="9">{
        <decl_stmt><decl><type><name pos:line="1562" pos:column="9">int<pos:position pos:line="1562" pos:column="12"/></name></type> <name pos:line="1562" pos:column="13">oclength<pos:position pos:line="1562" pos:column="21"/></name> <init pos:line="1562" pos:column="22">= <expr><literal type="number" pos:line="1562" pos:column="24">0<pos:position pos:line="1562" pos:column="25"/></literal></expr></init></decl>;<pos:position pos:line="1562" pos:column="26"/></decl_stmt>
        <decl_stmt><decl><type><name pos:line="1563" pos:column="9">uschar<pos:position pos:line="1563" pos:column="15"/></name></type> <name><name pos:line="1563" pos:column="16">occhars<pos:position pos:line="1563" pos:column="23"/></name><index pos:line="1563" pos:column="23">[<expr><literal type="number" pos:line="1563" pos:column="24">8<pos:position pos:line="1563" pos:column="25"/></literal></expr>]<pos:position pos:line="1563" pos:column="26"/></index></name></decl>;<pos:position pos:line="1563" pos:column="27"/></decl_stmt>

<cpp:ifdef pos:line="1565" pos:column="1">#<cpp:directive pos:line="1565" pos:column="2">ifdef<pos:position pos:line="1565" pos:column="7"/></cpp:directive> <name pos:line="1565" pos:column="8">SUPPORT_UCP<pos:position pos:line="1565" pos:column="19"/></name></cpp:ifdef>
        <decl_stmt><decl><type><name pos:line="1566" pos:column="9">int<pos:position pos:line="1566" pos:column="12"/></name></type> <name pos:line="1566" pos:column="13">othercase<pos:position pos:line="1566" pos:column="22"/></name></decl>;<pos:position pos:line="1566" pos:column="23"/></decl_stmt>
        <decl_stmt><decl><type><name pos:line="1567" pos:column="9">int<pos:position pos:line="1567" pos:column="12"/></name></type> <name pos:line="1567" pos:column="13">chartype<pos:position pos:line="1567" pos:column="21"/></name></decl>;<pos:position pos:line="1567" pos:column="22"/></decl_stmt>
        <if pos:line="1568" pos:column="9">if <condition pos:line="1568" pos:column="12">(<expr><operator pos:line="1568" pos:column="13">(<pos:position pos:line="1568" pos:column="14"/></operator><name pos:line="1568" pos:column="14">ims<pos:position pos:line="1568" pos:column="17"/></name> <operator pos:line="1568" pos:column="18">&amp;<pos:position pos:line="1568" pos:column="23"/></operator> <name pos:line="1568" pos:column="20">PCRE_CASELESS<pos:position pos:line="1568" pos:column="33"/></name><operator pos:line="1568" pos:column="33">)<pos:position pos:line="1568" pos:column="34"/></operator> <operator pos:line="1568" pos:column="35">!=<pos:position pos:line="1568" pos:column="37"/></operator> <literal type="number" pos:line="1568" pos:column="38">0<pos:position pos:line="1568" pos:column="39"/></literal> <operator pos:line="1568" pos:column="40">&amp;&amp;<pos:position pos:line="1568" pos:column="50"/></operator>
             <call><name pos:line="1569" pos:column="14">ucp_findchar<pos:position pos:line="1569" pos:column="26"/></name><argument_list pos:line="1569" pos:column="26">(<argument><expr><name pos:line="1569" pos:column="27">fc<pos:position pos:line="1569" pos:column="29"/></name></expr></argument>, <argument><expr><operator pos:line="1569" pos:column="31">&amp;<pos:position pos:line="1569" pos:column="36"/></operator><name pos:line="1569" pos:column="32">chartype<pos:position pos:line="1569" pos:column="40"/></name></expr></argument>, <argument><expr><operator pos:line="1569" pos:column="42">&amp;<pos:position pos:line="1569" pos:column="47"/></operator><name pos:line="1569" pos:column="43">othercase<pos:position pos:line="1569" pos:column="52"/></name></expr></argument>)<pos:position pos:line="1569" pos:column="53"/></argument_list></call> <operator pos:line="1569" pos:column="54">&gt;=<pos:position pos:line="1569" pos:column="59"/></operator> <literal type="number" pos:line="1569" pos:column="57">0<pos:position pos:line="1569" pos:column="58"/></literal> <operator pos:line="1569" pos:column="59">&amp;&amp;<pos:position pos:line="1569" pos:column="69"/></operator>
             <name pos:line="1570" pos:column="14">othercase<pos:position pos:line="1570" pos:column="23"/></name> <operator pos:line="1570" pos:column="24">&gt;<pos:position pos:line="1570" pos:column="28"/></operator> <literal type="number" pos:line="1570" pos:column="26">0<pos:position pos:line="1570" pos:column="27"/></literal></expr>)<pos:position pos:line="1570" pos:column="28"/></condition><then pos:line="1570" pos:column="28">
          <block type="pseudo"><expr_stmt><expr><name pos:line="1571" pos:column="11">oclength<pos:position pos:line="1571" pos:column="19"/></name> <operator pos:line="1571" pos:column="20">=<pos:position pos:line="1571" pos:column="21"/></operator> <call><name pos:line="1571" pos:column="22">ord2utf8<pos:position pos:line="1571" pos:column="30"/></name><argument_list pos:line="1571" pos:column="30">(<argument><expr><name pos:line="1571" pos:column="31">othercase<pos:position pos:line="1571" pos:column="40"/></name></expr></argument>, <argument><expr><name pos:line="1571" pos:column="42">occhars<pos:position pos:line="1571" pos:column="49"/></name></expr></argument>)<pos:position pos:line="1571" pos:column="50"/></argument_list></call></expr>;<pos:position pos:line="1571" pos:column="51"/></expr_stmt></block></then></if>
<cpp:endif pos:line="1572" pos:column="1">#<cpp:directive pos:line="1572" pos:column="2">endif<pos:position pos:line="1572" pos:column="7"/></cpp:directive></cpp:endif>  <comment type="block" pos:line="1572" pos:column="9">/* SUPPORT_UCP */</comment>

        <for pos:line="1574" pos:column="9">for <control pos:line="1574" pos:column="13">(<init><expr><name pos:line="1574" pos:column="14">i<pos:position pos:line="1574" pos:column="15"/></name> <operator pos:line="1574" pos:column="16">=<pos:position pos:line="1574" pos:column="17"/></operator> <literal type="number" pos:line="1574" pos:column="18">1<pos:position pos:line="1574" pos:column="19"/></literal></expr>;<pos:position pos:line="1574" pos:column="20"/></init> <condition><expr><name pos:line="1574" pos:column="21">i<pos:position pos:line="1574" pos:column="22"/></name> <operator pos:line="1574" pos:column="23">&lt;=<pos:position pos:line="1574" pos:column="28"/></operator> <name pos:line="1574" pos:column="26">min<pos:position pos:line="1574" pos:column="29"/></name></expr>;<pos:position pos:line="1574" pos:column="30"/></condition> <incr><expr><name pos:line="1574" pos:column="31">i<pos:position pos:line="1574" pos:column="32"/></name><operator pos:line="1574" pos:column="32">++<pos:position pos:line="1574" pos:column="34"/></operator></expr></incr>)<pos:position pos:line="1574" pos:column="35"/></control>
          <block pos:line="1575" pos:column="11">{
          <if pos:line="1576" pos:column="11">if <condition pos:line="1576" pos:column="14">(<expr><call><name pos:line="1576" pos:column="15">memcmp<pos:position pos:line="1576" pos:column="21"/></name><argument_list pos:line="1576" pos:column="21">(<argument><expr><name pos:line="1576" pos:column="22">eptr<pos:position pos:line="1576" pos:column="26"/></name></expr></argument>, <argument><expr><name pos:line="1576" pos:column="28">charptr<pos:position pos:line="1576" pos:column="35"/></name></expr></argument>, <argument><expr><name pos:line="1576" pos:column="37">length<pos:position pos:line="1576" pos:column="43"/></name></expr></argument>)<pos:position pos:line="1576" pos:column="44"/></argument_list></call> <operator pos:line="1576" pos:column="45">==<pos:position pos:line="1576" pos:column="47"/></operator> <literal type="number" pos:line="1576" pos:column="48">0<pos:position pos:line="1576" pos:column="49"/></literal></expr>)<pos:position pos:line="1576" pos:column="50"/></condition><then pos:line="1576" pos:column="50"> <block type="pseudo"><expr_stmt><expr><name pos:line="1576" pos:column="51">eptr<pos:position pos:line="1576" pos:column="55"/></name> <operator pos:line="1576" pos:column="56">+=<pos:position pos:line="1576" pos:column="58"/></operator> <name pos:line="1576" pos:column="59">length<pos:position pos:line="1576" pos:column="65"/></name></expr>;<pos:position pos:line="1576" pos:column="66"/></expr_stmt></block></then>
          <comment type="block" pos:line="1577" pos:column="11">/* Need braces because of following else */</comment>
          <elseif pos:line="1578" pos:column="11">else <if pos:line="1578" pos:column="16">if <condition pos:line="1578" pos:column="19">(<expr><name pos:line="1578" pos:column="20">oclength<pos:position pos:line="1578" pos:column="28"/></name> <operator pos:line="1578" pos:column="29">==<pos:position pos:line="1578" pos:column="31"/></operator> <literal type="number" pos:line="1578" pos:column="32">0<pos:position pos:line="1578" pos:column="33"/></literal></expr>)<pos:position pos:line="1578" pos:column="34"/></condition><then pos:line="1578" pos:column="34"> <block pos:line="1578" pos:column="35">{ <expr_stmt><expr><call><name pos:line="1578" pos:column="37">RRETURN<pos:position pos:line="1578" pos:column="44"/></name><argument_list pos:line="1578" pos:column="44">(<argument><expr><name pos:line="1578" pos:column="45">MATCH_NOMATCH<pos:position pos:line="1578" pos:column="58"/></name></expr></argument>)<pos:position pos:line="1578" pos:column="59"/></argument_list></call></expr>;<pos:position pos:line="1578" pos:column="60"/></expr_stmt> }<pos:position pos:line="1578" pos:column="62"/></block></then></if></elseif>
          <else pos:line="1579" pos:column="11">else
            <block pos:line="1580" pos:column="13">{
            <if pos:line="1581" pos:column="13">if <condition pos:line="1581" pos:column="16">(<expr><call><name pos:line="1581" pos:column="17">memcmp<pos:position pos:line="1581" pos:column="23"/></name><argument_list pos:line="1581" pos:column="23">(<argument><expr><name pos:line="1581" pos:column="24">eptr<pos:position pos:line="1581" pos:column="28"/></name></expr></argument>, <argument><expr><name pos:line="1581" pos:column="30">occhars<pos:position pos:line="1581" pos:column="37"/></name></expr></argument>, <argument><expr><name pos:line="1581" pos:column="39">oclength<pos:position pos:line="1581" pos:column="47"/></name></expr></argument>)<pos:position pos:line="1581" pos:column="48"/></argument_list></call> <operator pos:line="1581" pos:column="49">!=<pos:position pos:line="1581" pos:column="51"/></operator> <literal type="number" pos:line="1581" pos:column="52">0<pos:position pos:line="1581" pos:column="53"/></literal></expr>)<pos:position pos:line="1581" pos:column="54"/></condition><then pos:line="1581" pos:column="54"> <block type="pseudo"><expr_stmt><expr><call><name pos:line="1581" pos:column="55">RRETURN<pos:position pos:line="1581" pos:column="62"/></name><argument_list pos:line="1581" pos:column="62">(<argument><expr><name pos:line="1581" pos:column="63">MATCH_NOMATCH<pos:position pos:line="1581" pos:column="76"/></name></expr></argument>)<pos:position pos:line="1581" pos:column="77"/></argument_list></call></expr>;<pos:position pos:line="1581" pos:column="78"/></expr_stmt></block></then></if>
            <expr_stmt><expr><name pos:line="1582" pos:column="13">eptr<pos:position pos:line="1582" pos:column="17"/></name> <operator pos:line="1582" pos:column="18">+=<pos:position pos:line="1582" pos:column="20"/></operator> <name pos:line="1582" pos:column="21">oclength<pos:position pos:line="1582" pos:column="29"/></name></expr>;<pos:position pos:line="1582" pos:column="30"/></expr_stmt>
            }<pos:position pos:line="1583" pos:column="14"/></block></else></if>
          }<pos:position pos:line="1584" pos:column="12"/></block></for>

        <if pos:line="1586" pos:column="9">if <condition pos:line="1586" pos:column="12">(<expr><name pos:line="1586" pos:column="13">min<pos:position pos:line="1586" pos:column="16"/></name> <operator pos:line="1586" pos:column="17">==<pos:position pos:line="1586" pos:column="19"/></operator> <name pos:line="1586" pos:column="20">max<pos:position pos:line="1586" pos:column="23"/></name></expr>)<pos:position pos:line="1586" pos:column="24"/></condition><then pos:line="1586" pos:column="24"> <block type="pseudo"><continue pos:line="1586" pos:column="25">continue;<pos:position pos:line="1586" pos:column="34"/></continue></block></then></if>

        <if pos:line="1588" pos:column="9">if <condition pos:line="1588" pos:column="12">(<expr><name pos:line="1588" pos:column="13">minimize<pos:position pos:line="1588" pos:column="21"/></name></expr>)<pos:position pos:line="1588" pos:column="22"/></condition><then pos:line="1588" pos:column="22">
          <block pos:line="1589" pos:column="11">{
          <for pos:line="1590" pos:column="11">for <control pos:line="1590" pos:column="15">(<init><expr><name pos:line="1590" pos:column="16">fi<pos:position pos:line="1590" pos:column="18"/></name> <operator pos:line="1590" pos:column="19">=<pos:position pos:line="1590" pos:column="20"/></operator> <name pos:line="1590" pos:column="21">min<pos:position pos:line="1590" pos:column="24"/></name></expr>;<pos:position pos:line="1590" pos:column="25"/></init><condition pos:line="1590" pos:column="25">;<pos:position pos:line="1590" pos:column="26"/></condition> <incr><expr><name pos:line="1590" pos:column="27">fi<pos:position pos:line="1590" pos:column="29"/></name><operator pos:line="1590" pos:column="29">++<pos:position pos:line="1590" pos:column="31"/></operator></expr></incr>)<pos:position pos:line="1590" pos:column="32"/></control>
            <block pos:line="1591" pos:column="13">{
            <expr_stmt><expr><call><name pos:line="1592" pos:column="13">RMATCH<pos:position pos:line="1592" pos:column="19"/></name><argument_list pos:line="1592" pos:column="19">(<argument><expr><name pos:line="1592" pos:column="20">rrc<pos:position pos:line="1592" pos:column="23"/></name></expr></argument>, <argument><expr><name pos:line="1592" pos:column="25">eptr<pos:position pos:line="1592" pos:column="29"/></name></expr></argument>, <argument><expr><name pos:line="1592" pos:column="31">ecode<pos:position pos:line="1592" pos:column="36"/></name></expr></argument>, <argument><expr><name pos:line="1592" pos:column="38">offset_top<pos:position pos:line="1592" pos:column="48"/></name></expr></argument>, <argument><expr><name pos:line="1592" pos:column="50">md<pos:position pos:line="1592" pos:column="52"/></name></expr></argument>, <argument><expr><name pos:line="1592" pos:column="54">ims<pos:position pos:line="1592" pos:column="57"/></name></expr></argument>, <argument><expr><name pos:line="1592" pos:column="59">eptrb<pos:position pos:line="1592" pos:column="64"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="1592" pos:column="66">0<pos:position pos:line="1592" pos:column="67"/></literal></expr></argument>)<pos:position pos:line="1592" pos:column="68"/></argument_list></call></expr>;<pos:position pos:line="1592" pos:column="69"/></expr_stmt>
            <if pos:line="1593" pos:column="13">if <condition pos:line="1593" pos:column="16">(<expr><name pos:line="1593" pos:column="17">rrc<pos:position pos:line="1593" pos:column="20"/></name> <operator pos:line="1593" pos:column="21">!=<pos:position pos:line="1593" pos:column="23"/></operator> <name pos:line="1593" pos:column="24">MATCH_NOMATCH<pos:position pos:line="1593" pos:column="37"/></name></expr>)<pos:position pos:line="1593" pos:column="38"/></condition><then pos:line="1593" pos:column="38"> <block type="pseudo"><expr_stmt><expr><call><name pos:line="1593" pos:column="39">RRETURN<pos:position pos:line="1593" pos:column="46"/></name><argument_list pos:line="1593" pos:column="46">(<argument><expr><name pos:line="1593" pos:column="47">rrc<pos:position pos:line="1593" pos:column="50"/></name></expr></argument>)<pos:position pos:line="1593" pos:column="51"/></argument_list></call></expr>;<pos:position pos:line="1593" pos:column="52"/></expr_stmt></block></then></if>
            <if pos:line="1594" pos:column="13">if <condition pos:line="1594" pos:column="16">(<expr><name pos:line="1594" pos:column="17">fi<pos:position pos:line="1594" pos:column="19"/></name> <operator pos:line="1594" pos:column="20">&gt;=<pos:position pos:line="1594" pos:column="25"/></operator> <name pos:line="1594" pos:column="23">max<pos:position pos:line="1594" pos:column="26"/></name> <operator pos:line="1594" pos:column="27">||<pos:position pos:line="1594" pos:column="29"/></operator> <name pos:line="1594" pos:column="30">eptr<pos:position pos:line="1594" pos:column="34"/></name> <operator pos:line="1594" pos:column="35">&gt;=<pos:position pos:line="1594" pos:column="40"/></operator> <name><name pos:line="1594" pos:column="38">md<pos:position pos:line="1594" pos:column="40"/></name><operator pos:line="1594" pos:column="40">-&gt;<pos:position pos:line="1594" pos:column="45"/></operator><name pos:line="1594" pos:column="42">end_subject<pos:position pos:line="1594" pos:column="53"/></name></name></expr>)<pos:position pos:line="1594" pos:column="54"/></condition><then pos:line="1594" pos:column="54"> <block type="pseudo"><expr_stmt><expr><call><name pos:line="1594" pos:column="55">RRETURN<pos:position pos:line="1594" pos:column="62"/></name><argument_list pos:line="1594" pos:column="62">(<argument><expr><name pos:line="1594" pos:column="63">MATCH_NOMATCH<pos:position pos:line="1594" pos:column="76"/></name></expr></argument>)<pos:position pos:line="1594" pos:column="77"/></argument_list></call></expr>;<pos:position pos:line="1594" pos:column="78"/></expr_stmt></block></then></if>
            <if pos:line="1595" pos:column="13">if <condition pos:line="1595" pos:column="16">(<expr><call><name pos:line="1595" pos:column="17">memcmp<pos:position pos:line="1595" pos:column="23"/></name><argument_list pos:line="1595" pos:column="23">(<argument><expr><name pos:line="1595" pos:column="24">eptr<pos:position pos:line="1595" pos:column="28"/></name></expr></argument>, <argument><expr><name pos:line="1595" pos:column="30">charptr<pos:position pos:line="1595" pos:column="37"/></name></expr></argument>, <argument><expr><name pos:line="1595" pos:column="39">length<pos:position pos:line="1595" pos:column="45"/></name></expr></argument>)<pos:position pos:line="1595" pos:column="46"/></argument_list></call> <operator pos:line="1595" pos:column="47">==<pos:position pos:line="1595" pos:column="49"/></operator> <literal type="number" pos:line="1595" pos:column="50">0<pos:position pos:line="1595" pos:column="51"/></literal></expr>)<pos:position pos:line="1595" pos:column="52"/></condition><then pos:line="1595" pos:column="52"> <block type="pseudo"><expr_stmt><expr><name pos:line="1595" pos:column="53">eptr<pos:position pos:line="1595" pos:column="57"/></name> <operator pos:line="1595" pos:column="58">+=<pos:position pos:line="1595" pos:column="60"/></operator> <name pos:line="1595" pos:column="61">length<pos:position pos:line="1595" pos:column="67"/></name></expr>;<pos:position pos:line="1595" pos:column="68"/></expr_stmt></block></then>
            <comment type="block" pos:line="1596" pos:column="13">/* Need braces because of following else */</comment>
            <elseif pos:line="1597" pos:column="13">else <if pos:line="1597" pos:column="18">if <condition pos:line="1597" pos:column="21">(<expr><name pos:line="1597" pos:column="22">oclength<pos:position pos:line="1597" pos:column="30"/></name> <operator pos:line="1597" pos:column="31">==<pos:position pos:line="1597" pos:column="33"/></operator> <literal type="number" pos:line="1597" pos:column="34">0<pos:position pos:line="1597" pos:column="35"/></literal></expr>)<pos:position pos:line="1597" pos:column="36"/></condition><then pos:line="1597" pos:column="36"> <block pos:line="1597" pos:column="37">{ <expr_stmt><expr><call><name pos:line="1597" pos:column="39">RRETURN<pos:position pos:line="1597" pos:column="46"/></name><argument_list pos:line="1597" pos:column="46">(<argument><expr><name pos:line="1597" pos:column="47">MATCH_NOMATCH<pos:position pos:line="1597" pos:column="60"/></name></expr></argument>)<pos:position pos:line="1597" pos:column="61"/></argument_list></call></expr>;<pos:position pos:line="1597" pos:column="62"/></expr_stmt> }<pos:position pos:line="1597" pos:column="64"/></block></then></if></elseif>
            <else pos:line="1598" pos:column="13">else
              <block pos:line="1599" pos:column="15">{
              <if pos:line="1600" pos:column="15">if <condition pos:line="1600" pos:column="18">(<expr><call><name pos:line="1600" pos:column="19">memcmp<pos:position pos:line="1600" pos:column="25"/></name><argument_list pos:line="1600" pos:column="25">(<argument><expr><name pos:line="1600" pos:column="26">eptr<pos:position pos:line="1600" pos:column="30"/></name></expr></argument>, <argument><expr><name pos:line="1600" pos:column="32">occhars<pos:position pos:line="1600" pos:column="39"/></name></expr></argument>, <argument><expr><name pos:line="1600" pos:column="41">oclength<pos:position pos:line="1600" pos:column="49"/></name></expr></argument>)<pos:position pos:line="1600" pos:column="50"/></argument_list></call> <operator pos:line="1600" pos:column="51">!=<pos:position pos:line="1600" pos:column="53"/></operator> <literal type="number" pos:line="1600" pos:column="54">0<pos:position pos:line="1600" pos:column="55"/></literal></expr>)<pos:position pos:line="1600" pos:column="56"/></condition><then pos:line="1600" pos:column="56"> <block type="pseudo"><expr_stmt><expr><call><name pos:line="1600" pos:column="57">RRETURN<pos:position pos:line="1600" pos:column="64"/></name><argument_list pos:line="1600" pos:column="64">(<argument><expr><name pos:line="1600" pos:column="65">MATCH_NOMATCH<pos:position pos:line="1600" pos:column="78"/></name></expr></argument>)<pos:position pos:line="1600" pos:column="79"/></argument_list></call></expr>;<pos:position pos:line="1600" pos:column="80"/></expr_stmt></block></then></if>
              <expr_stmt><expr><name pos:line="1601" pos:column="15">eptr<pos:position pos:line="1601" pos:column="19"/></name> <operator pos:line="1601" pos:column="20">+=<pos:position pos:line="1601" pos:column="22"/></operator> <name pos:line="1601" pos:column="23">oclength<pos:position pos:line="1601" pos:column="31"/></name></expr>;<pos:position pos:line="1601" pos:column="32"/></expr_stmt>
              }<pos:position pos:line="1602" pos:column="16"/></block></else></if>
            }<pos:position pos:line="1603" pos:column="14"/></block></for>
          <comment type="block" pos:line="1604" pos:column="11">/* Control never gets here */</comment>
          }<pos:position pos:line="1605" pos:column="12"/></block></then>
        <else pos:line="1606" pos:column="9">else
          <block pos:line="1607" pos:column="11">{
          <expr_stmt><expr><name pos:line="1608" pos:column="11">pp<pos:position pos:line="1608" pos:column="13"/></name> <operator pos:line="1608" pos:column="14">=<pos:position pos:line="1608" pos:column="15"/></operator> <name pos:line="1608" pos:column="16">eptr<pos:position pos:line="1608" pos:column="20"/></name></expr>;<pos:position pos:line="1608" pos:column="21"/></expr_stmt>
          <for pos:line="1609" pos:column="11">for <control pos:line="1609" pos:column="15">(<init><expr><name pos:line="1609" pos:column="16">i<pos:position pos:line="1609" pos:column="17"/></name> <operator pos:line="1609" pos:column="18">=<pos:position pos:line="1609" pos:column="19"/></operator> <name pos:line="1609" pos:column="20">min<pos:position pos:line="1609" pos:column="23"/></name></expr>;<pos:position pos:line="1609" pos:column="24"/></init> <condition><expr><name pos:line="1609" pos:column="25">i<pos:position pos:line="1609" pos:column="26"/></name> <operator pos:line="1609" pos:column="27">&lt;<pos:position pos:line="1609" pos:column="31"/></operator> <name pos:line="1609" pos:column="29">max<pos:position pos:line="1609" pos:column="32"/></name></expr>;<pos:position pos:line="1609" pos:column="33"/></condition> <incr><expr><name pos:line="1609" pos:column="34">i<pos:position pos:line="1609" pos:column="35"/></name><operator pos:line="1609" pos:column="35">++<pos:position pos:line="1609" pos:column="37"/></operator></expr></incr>)<pos:position pos:line="1609" pos:column="38"/></control>
            <block pos:line="1610" pos:column="13">{
            <if pos:line="1611" pos:column="13">if <condition pos:line="1611" pos:column="16">(<expr><name pos:line="1611" pos:column="17">eptr<pos:position pos:line="1611" pos:column="21"/></name> <operator pos:line="1611" pos:column="22">&gt;<pos:position pos:line="1611" pos:column="26"/></operator> <name><name pos:line="1611" pos:column="24">md<pos:position pos:line="1611" pos:column="26"/></name><operator pos:line="1611" pos:column="26">-&gt;<pos:position pos:line="1611" pos:column="31"/></operator><name pos:line="1611" pos:column="28">end_subject<pos:position pos:line="1611" pos:column="39"/></name></name> <operator pos:line="1611" pos:column="40">-<pos:position pos:line="1611" pos:column="41"/></operator> <name pos:line="1611" pos:column="42">length<pos:position pos:line="1611" pos:column="48"/></name></expr>)<pos:position pos:line="1611" pos:column="49"/></condition><then pos:line="1611" pos:column="49"> <block type="pseudo"><break pos:line="1611" pos:column="50">break;<pos:position pos:line="1611" pos:column="56"/></break></block></then></if>
            <if pos:line="1612" pos:column="13">if <condition pos:line="1612" pos:column="16">(<expr><call><name pos:line="1612" pos:column="17">memcmp<pos:position pos:line="1612" pos:column="23"/></name><argument_list pos:line="1612" pos:column="23">(<argument><expr><name pos:line="1612" pos:column="24">eptr<pos:position pos:line="1612" pos:column="28"/></name></expr></argument>, <argument><expr><name pos:line="1612" pos:column="30">charptr<pos:position pos:line="1612" pos:column="37"/></name></expr></argument>, <argument><expr><name pos:line="1612" pos:column="39">length<pos:position pos:line="1612" pos:column="45"/></name></expr></argument>)<pos:position pos:line="1612" pos:column="46"/></argument_list></call> <operator pos:line="1612" pos:column="47">==<pos:position pos:line="1612" pos:column="49"/></operator> <literal type="number" pos:line="1612" pos:column="50">0<pos:position pos:line="1612" pos:column="51"/></literal></expr>)<pos:position pos:line="1612" pos:column="52"/></condition><then pos:line="1612" pos:column="52"> <block type="pseudo"><expr_stmt><expr><name pos:line="1612" pos:column="53">eptr<pos:position pos:line="1612" pos:column="57"/></name> <operator pos:line="1612" pos:column="58">+=<pos:position pos:line="1612" pos:column="60"/></operator> <name pos:line="1612" pos:column="61">length<pos:position pos:line="1612" pos:column="67"/></name></expr>;<pos:position pos:line="1612" pos:column="68"/></expr_stmt></block></then>
            <elseif pos:line="1613" pos:column="13">else <if pos:line="1613" pos:column="18">if <condition pos:line="1613" pos:column="21">(<expr><name pos:line="1613" pos:column="22">oclength<pos:position pos:line="1613" pos:column="30"/></name> <operator pos:line="1613" pos:column="31">==<pos:position pos:line="1613" pos:column="33"/></operator> <literal type="number" pos:line="1613" pos:column="34">0<pos:position pos:line="1613" pos:column="35"/></literal></expr>)<pos:position pos:line="1613" pos:column="36"/></condition><then pos:line="1613" pos:column="36"> <block type="pseudo"><break pos:line="1613" pos:column="37">break;<pos:position pos:line="1613" pos:column="43"/></break></block></then></if></elseif>
            <else pos:line="1614" pos:column="13">else
              <block pos:line="1615" pos:column="15">{
              <if pos:line="1616" pos:column="15">if <condition pos:line="1616" pos:column="18">(<expr><call><name pos:line="1616" pos:column="19">memcmp<pos:position pos:line="1616" pos:column="25"/></name><argument_list pos:line="1616" pos:column="25">(<argument><expr><name pos:line="1616" pos:column="26">eptr<pos:position pos:line="1616" pos:column="30"/></name></expr></argument>, <argument><expr><name pos:line="1616" pos:column="32">occhars<pos:position pos:line="1616" pos:column="39"/></name></expr></argument>, <argument><expr><name pos:line="1616" pos:column="41">oclength<pos:position pos:line="1616" pos:column="49"/></name></expr></argument>)<pos:position pos:line="1616" pos:column="50"/></argument_list></call> <operator pos:line="1616" pos:column="51">!=<pos:position pos:line="1616" pos:column="53"/></operator> <literal type="number" pos:line="1616" pos:column="54">0<pos:position pos:line="1616" pos:column="55"/></literal></expr>)<pos:position pos:line="1616" pos:column="56"/></condition><then pos:line="1616" pos:column="56"> <block type="pseudo"><break pos:line="1616" pos:column="57">break;<pos:position pos:line="1616" pos:column="63"/></break></block></then></if>
              <expr_stmt><expr><name pos:line="1617" pos:column="15">eptr<pos:position pos:line="1617" pos:column="19"/></name> <operator pos:line="1617" pos:column="20">+=<pos:position pos:line="1617" pos:column="22"/></operator> <name pos:line="1617" pos:column="23">oclength<pos:position pos:line="1617" pos:column="31"/></name></expr>;<pos:position pos:line="1617" pos:column="32"/></expr_stmt>
              }<pos:position pos:line="1618" pos:column="16"/></block></else></if>
            }<pos:position pos:line="1619" pos:column="14"/></block></for>
          <while pos:line="1620" pos:column="11">while <condition pos:line="1620" pos:column="17">(<expr><name pos:line="1620" pos:column="18">eptr<pos:position pos:line="1620" pos:column="22"/></name> <operator pos:line="1620" pos:column="23">&gt;=<pos:position pos:line="1620" pos:column="28"/></operator> <name pos:line="1620" pos:column="26">pp<pos:position pos:line="1620" pos:column="28"/></name></expr>)<pos:position pos:line="1620" pos:column="29"/></condition>
           <block pos:line="1621" pos:column="12">{
           <expr_stmt><expr><call><name pos:line="1622" pos:column="12">RMATCH<pos:position pos:line="1622" pos:column="18"/></name><argument_list pos:line="1622" pos:column="18">(<argument><expr><name pos:line="1622" pos:column="19">rrc<pos:position pos:line="1622" pos:column="22"/></name></expr></argument>, <argument><expr><name pos:line="1622" pos:column="24">eptr<pos:position pos:line="1622" pos:column="28"/></name></expr></argument>, <argument><expr><name pos:line="1622" pos:column="30">ecode<pos:position pos:line="1622" pos:column="35"/></name></expr></argument>, <argument><expr><name pos:line="1622" pos:column="37">offset_top<pos:position pos:line="1622" pos:column="47"/></name></expr></argument>, <argument><expr><name pos:line="1622" pos:column="49">md<pos:position pos:line="1622" pos:column="51"/></name></expr></argument>, <argument><expr><name pos:line="1622" pos:column="53">ims<pos:position pos:line="1622" pos:column="56"/></name></expr></argument>, <argument><expr><name pos:line="1622" pos:column="58">eptrb<pos:position pos:line="1622" pos:column="63"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="1622" pos:column="65">0<pos:position pos:line="1622" pos:column="66"/></literal></expr></argument>)<pos:position pos:line="1622" pos:column="67"/></argument_list></call></expr>;<pos:position pos:line="1622" pos:column="68"/></expr_stmt>
           <if pos:line="1623" pos:column="12">if <condition pos:line="1623" pos:column="15">(<expr><name pos:line="1623" pos:column="16">rrc<pos:position pos:line="1623" pos:column="19"/></name> <operator pos:line="1623" pos:column="20">!=<pos:position pos:line="1623" pos:column="22"/></operator> <name pos:line="1623" pos:column="23">MATCH_NOMATCH<pos:position pos:line="1623" pos:column="36"/></name></expr>)<pos:position pos:line="1623" pos:column="37"/></condition><then pos:line="1623" pos:column="37"> <block type="pseudo"><expr_stmt><expr><call><name pos:line="1623" pos:column="38">RRETURN<pos:position pos:line="1623" pos:column="45"/></name><argument_list pos:line="1623" pos:column="45">(<argument><expr><name pos:line="1623" pos:column="46">rrc<pos:position pos:line="1623" pos:column="49"/></name></expr></argument>)<pos:position pos:line="1623" pos:column="50"/></argument_list></call></expr>;<pos:position pos:line="1623" pos:column="51"/></expr_stmt></block></then></if>
           <expr_stmt><expr><name pos:line="1624" pos:column="12">eptr<pos:position pos:line="1624" pos:column="16"/></name> <operator pos:line="1624" pos:column="17">-=<pos:position pos:line="1624" pos:column="19"/></operator> <name pos:line="1624" pos:column="20">length<pos:position pos:line="1624" pos:column="26"/></name></expr>;<pos:position pos:line="1624" pos:column="27"/></expr_stmt>
           }<pos:position pos:line="1625" pos:column="13"/></block></while>
          <expr_stmt><expr><call><name pos:line="1626" pos:column="11">RRETURN<pos:position pos:line="1626" pos:column="18"/></name><argument_list pos:line="1626" pos:column="18">(<argument><expr><name pos:line="1626" pos:column="19">MATCH_NOMATCH<pos:position pos:line="1626" pos:column="32"/></name></expr></argument>)<pos:position pos:line="1626" pos:column="33"/></argument_list></call></expr>;<pos:position pos:line="1626" pos:column="34"/></expr_stmt>
          }<pos:position pos:line="1627" pos:column="12"/></block></else></if>
        <comment type="block" pos:line="1628" pos:column="9">/* Control never gets here */</comment>
        }<pos:position pos:line="1629" pos:column="10"/></block></then></if>

      <comment type="block" pos:line="1631" pos:column="7">/* If the length of a UTF-8 character is 1, we fall through here, and
      obey the code as for non-UTF-8 characters below, though in this case the
      value of fc will always be &lt; 128. */</comment>
      }<pos:position pos:line="1634" pos:column="8"/></block></then>
    <else pos:line="1635" pos:column="5">else
<cpp:endif pos:line="1636" pos:column="1">#<cpp:directive pos:line="1636" pos:column="2">endif<pos:position pos:line="1636" pos:column="7"/></cpp:directive></cpp:endif>  <comment type="block" pos:line="1636" pos:column="9">/* SUPPORT_UTF8 */</comment>

    <comment type="block" pos:line="1638" pos:column="5">/* When not in UTF-8 mode, load a single-byte character. */</comment>
      <block pos:line="1639" pos:column="7">{
      <if pos:line="1640" pos:column="7">if <condition pos:line="1640" pos:column="10">(<expr><name pos:line="1640" pos:column="11">min<pos:position pos:line="1640" pos:column="14"/></name> <operator pos:line="1640" pos:column="15">&gt;<pos:position pos:line="1640" pos:column="19"/></operator> <name><name pos:line="1640" pos:column="17">md<pos:position pos:line="1640" pos:column="19"/></name><operator pos:line="1640" pos:column="19">-&gt;<pos:position pos:line="1640" pos:column="24"/></operator><name pos:line="1640" pos:column="21">end_subject<pos:position pos:line="1640" pos:column="32"/></name></name> <operator pos:line="1640" pos:column="33">-<pos:position pos:line="1640" pos:column="34"/></operator> <name pos:line="1640" pos:column="35">eptr<pos:position pos:line="1640" pos:column="39"/></name></expr>)<pos:position pos:line="1640" pos:column="40"/></condition><then pos:line="1640" pos:column="40"> <block type="pseudo"><expr_stmt><expr><call><name pos:line="1640" pos:column="41">RRETURN<pos:position pos:line="1640" pos:column="48"/></name><argument_list pos:line="1640" pos:column="48">(<argument><expr><name pos:line="1640" pos:column="49">MATCH_NOMATCH<pos:position pos:line="1640" pos:column="62"/></name></expr></argument>)<pos:position pos:line="1640" pos:column="63"/></argument_list></call></expr>;<pos:position pos:line="1640" pos:column="64"/></expr_stmt></block></then></if>
      <expr_stmt><expr><name pos:line="1641" pos:column="7">fc<pos:position pos:line="1641" pos:column="9"/></name> <operator pos:line="1641" pos:column="10">=<pos:position pos:line="1641" pos:column="11"/></operator> <operator pos:line="1641" pos:column="12">*<pos:position pos:line="1641" pos:column="13"/></operator><name pos:line="1641" pos:column="13">ecode<pos:position pos:line="1641" pos:column="18"/></name><operator pos:line="1641" pos:column="18">++<pos:position pos:line="1641" pos:column="20"/></operator></expr>;<pos:position pos:line="1641" pos:column="21"/></expr_stmt>
      }<pos:position pos:line="1642" pos:column="8"/></block></else></if>

    <comment type="block" pos:line="1644" pos:column="5">/* The value of fc at this point is always less than 256, though we may or
    may not be in UTF-8 mode. The code is duplicated for the caseless and
    caseful cases, for speed, since matching characters is likely to be quite
    common. First, ensure the minimum number of matches are present. If min =
    max, continue at the same level without recursing. Otherwise, if
    minimizing, keep trying the rest of the expression and advancing one
    matching character if failing, up to the maximum. Alternatively, if
    maximizing, find the maximum number of characters and work backwards. */</comment>

    <expr_stmt><expr><call><name pos:line="1653" pos:column="5">DPRINTF<pos:position pos:line="1653" pos:column="12"/></name><argument_list pos:line="1653" pos:column="12">(<argument><expr><operator pos:line="1653" pos:column="13">(<pos:position pos:line="1653" pos:column="14"/></operator><literal type="string" pos:line="1653" pos:column="14">"matching %c{%d,%d} against subject %.*s\n"<pos:position pos:line="1653" pos:column="57"/></literal><operator pos:line="1653" pos:column="57">,<pos:position pos:line="1653" pos:column="58"/></operator> <name pos:line="1653" pos:column="59">fc<pos:position pos:line="1653" pos:column="61"/></name><operator pos:line="1653" pos:column="61">,<pos:position pos:line="1653" pos:column="62"/></operator> <name pos:line="1653" pos:column="63">min<pos:position pos:line="1653" pos:column="66"/></name><operator pos:line="1653" pos:column="66">,<pos:position pos:line="1653" pos:column="67"/></operator> <name pos:line="1653" pos:column="68">max<pos:position pos:line="1653" pos:column="71"/></name><operator pos:line="1653" pos:column="71">,<pos:position pos:line="1653" pos:column="72"/></operator>
      <name pos:line="1654" pos:column="7">max<pos:position pos:line="1654" pos:column="10"/></name><operator pos:line="1654" pos:column="10">,<pos:position pos:line="1654" pos:column="11"/></operator> <name pos:line="1654" pos:column="12">eptr<pos:position pos:line="1654" pos:column="16"/></name><operator pos:line="1654" pos:column="16">)<pos:position pos:line="1654" pos:column="17"/></operator></expr></argument>)<pos:position pos:line="1654" pos:column="18"/></argument_list></call></expr>;<pos:position pos:line="1654" pos:column="19"/></expr_stmt>

    <if pos:line="1656" pos:column="5">if <condition pos:line="1656" pos:column="8">(<expr><operator pos:line="1656" pos:column="9">(<pos:position pos:line="1656" pos:column="10"/></operator><name pos:line="1656" pos:column="10">ims<pos:position pos:line="1656" pos:column="13"/></name> <operator pos:line="1656" pos:column="14">&amp;<pos:position pos:line="1656" pos:column="19"/></operator> <name pos:line="1656" pos:column="16">PCRE_CASELESS<pos:position pos:line="1656" pos:column="29"/></name><operator pos:line="1656" pos:column="29">)<pos:position pos:line="1656" pos:column="30"/></operator> <operator pos:line="1656" pos:column="31">!=<pos:position pos:line="1656" pos:column="33"/></operator> <literal type="number" pos:line="1656" pos:column="34">0<pos:position pos:line="1656" pos:column="35"/></literal></expr>)<pos:position pos:line="1656" pos:column="36"/></condition><then pos:line="1656" pos:column="36">
      <block pos:line="1657" pos:column="7">{
      <expr_stmt><expr><name pos:line="1658" pos:column="7">fc<pos:position pos:line="1658" pos:column="9"/></name> <operator pos:line="1658" pos:column="10">=<pos:position pos:line="1658" pos:column="11"/></operator> <name><name pos:line="1658" pos:column="12">md<pos:position pos:line="1658" pos:column="14"/></name><operator pos:line="1658" pos:column="14">-&gt;<pos:position pos:line="1658" pos:column="19"/></operator><name pos:line="1658" pos:column="16">lcc<pos:position pos:line="1658" pos:column="19"/></name><index pos:line="1658" pos:column="19">[<expr><name pos:line="1658" pos:column="20">fc<pos:position pos:line="1658" pos:column="22"/></name></expr>]<pos:position pos:line="1658" pos:column="23"/></index></name></expr>;<pos:position pos:line="1658" pos:column="24"/></expr_stmt>
      <for pos:line="1659" pos:column="7">for <control pos:line="1659" pos:column="11">(<init><expr><name pos:line="1659" pos:column="12">i<pos:position pos:line="1659" pos:column="13"/></name> <operator pos:line="1659" pos:column="14">=<pos:position pos:line="1659" pos:column="15"/></operator> <literal type="number" pos:line="1659" pos:column="16">1<pos:position pos:line="1659" pos:column="17"/></literal></expr>;<pos:position pos:line="1659" pos:column="18"/></init> <condition><expr><name pos:line="1659" pos:column="19">i<pos:position pos:line="1659" pos:column="20"/></name> <operator pos:line="1659" pos:column="21">&lt;=<pos:position pos:line="1659" pos:column="26"/></operator> <name pos:line="1659" pos:column="24">min<pos:position pos:line="1659" pos:column="27"/></name></expr>;<pos:position pos:line="1659" pos:column="28"/></condition> <incr><expr><name pos:line="1659" pos:column="29">i<pos:position pos:line="1659" pos:column="30"/></name><operator pos:line="1659" pos:column="30">++<pos:position pos:line="1659" pos:column="32"/></operator></expr></incr>)<pos:position pos:line="1659" pos:column="33"/></control>
        <block type="pseudo"><if pos:line="1660" pos:column="9">if <condition pos:line="1660" pos:column="12">(<expr><name pos:line="1660" pos:column="13">fc<pos:position pos:line="1660" pos:column="15"/></name> <operator pos:line="1660" pos:column="16">!=<pos:position pos:line="1660" pos:column="18"/></operator> <name><name pos:line="1660" pos:column="19">md<pos:position pos:line="1660" pos:column="21"/></name><operator pos:line="1660" pos:column="21">-&gt;<pos:position pos:line="1660" pos:column="26"/></operator><name pos:line="1660" pos:column="23">lcc<pos:position pos:line="1660" pos:column="26"/></name><index pos:line="1660" pos:column="26">[<expr><operator pos:line="1660" pos:column="27">*<pos:position pos:line="1660" pos:column="28"/></operator><name pos:line="1660" pos:column="28">eptr<pos:position pos:line="1660" pos:column="32"/></name><operator pos:line="1660" pos:column="32">++<pos:position pos:line="1660" pos:column="34"/></operator></expr>]<pos:position pos:line="1660" pos:column="35"/></index></name></expr>)<pos:position pos:line="1660" pos:column="36"/></condition><then pos:line="1660" pos:column="36"> <block type="pseudo"><expr_stmt><expr><call><name pos:line="1660" pos:column="37">RRETURN<pos:position pos:line="1660" pos:column="44"/></name><argument_list pos:line="1660" pos:column="44">(<argument><expr><name pos:line="1660" pos:column="45">MATCH_NOMATCH<pos:position pos:line="1660" pos:column="58"/></name></expr></argument>)<pos:position pos:line="1660" pos:column="59"/></argument_list></call></expr>;<pos:position pos:line="1660" pos:column="60"/></expr_stmt></block></then></if></block></for>
      <if pos:line="1661" pos:column="7">if <condition pos:line="1661" pos:column="10">(<expr><name pos:line="1661" pos:column="11">min<pos:position pos:line="1661" pos:column="14"/></name> <operator pos:line="1661" pos:column="15">==<pos:position pos:line="1661" pos:column="17"/></operator> <name pos:line="1661" pos:column="18">max<pos:position pos:line="1661" pos:column="21"/></name></expr>)<pos:position pos:line="1661" pos:column="22"/></condition><then pos:line="1661" pos:column="22"> <block type="pseudo"><continue pos:line="1661" pos:column="23">continue;<pos:position pos:line="1661" pos:column="32"/></continue></block></then></if>
      <if pos:line="1662" pos:column="7">if <condition pos:line="1662" pos:column="10">(<expr><name pos:line="1662" pos:column="11">minimize<pos:position pos:line="1662" pos:column="19"/></name></expr>)<pos:position pos:line="1662" pos:column="20"/></condition><then pos:line="1662" pos:column="20">
        <block pos:line="1663" pos:column="9">{
        <for pos:line="1664" pos:column="9">for <control pos:line="1664" pos:column="13">(<init><expr><name pos:line="1664" pos:column="14">fi<pos:position pos:line="1664" pos:column="16"/></name> <operator pos:line="1664" pos:column="17">=<pos:position pos:line="1664" pos:column="18"/></operator> <name pos:line="1664" pos:column="19">min<pos:position pos:line="1664" pos:column="22"/></name></expr>;<pos:position pos:line="1664" pos:column="23"/></init><condition pos:line="1664" pos:column="23">;<pos:position pos:line="1664" pos:column="24"/></condition> <incr><expr><name pos:line="1664" pos:column="25">fi<pos:position pos:line="1664" pos:column="27"/></name><operator pos:line="1664" pos:column="27">++<pos:position pos:line="1664" pos:column="29"/></operator></expr></incr>)<pos:position pos:line="1664" pos:column="30"/></control>
          <block pos:line="1665" pos:column="11">{
          <expr_stmt><expr><call><name pos:line="1666" pos:column="11">RMATCH<pos:position pos:line="1666" pos:column="17"/></name><argument_list pos:line="1666" pos:column="17">(<argument><expr><name pos:line="1666" pos:column="18">rrc<pos:position pos:line="1666" pos:column="21"/></name></expr></argument>, <argument><expr><name pos:line="1666" pos:column="23">eptr<pos:position pos:line="1666" pos:column="27"/></name></expr></argument>, <argument><expr><name pos:line="1666" pos:column="29">ecode<pos:position pos:line="1666" pos:column="34"/></name></expr></argument>, <argument><expr><name pos:line="1666" pos:column="36">offset_top<pos:position pos:line="1666" pos:column="46"/></name></expr></argument>, <argument><expr><name pos:line="1666" pos:column="48">md<pos:position pos:line="1666" pos:column="50"/></name></expr></argument>, <argument><expr><name pos:line="1666" pos:column="52">ims<pos:position pos:line="1666" pos:column="55"/></name></expr></argument>, <argument><expr><name pos:line="1666" pos:column="57">eptrb<pos:position pos:line="1666" pos:column="62"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="1666" pos:column="64">0<pos:position pos:line="1666" pos:column="65"/></literal></expr></argument>)<pos:position pos:line="1666" pos:column="66"/></argument_list></call></expr>;<pos:position pos:line="1666" pos:column="67"/></expr_stmt>
          <if pos:line="1667" pos:column="11">if <condition pos:line="1667" pos:column="14">(<expr><name pos:line="1667" pos:column="15">rrc<pos:position pos:line="1667" pos:column="18"/></name> <operator pos:line="1667" pos:column="19">!=<pos:position pos:line="1667" pos:column="21"/></operator> <name pos:line="1667" pos:column="22">MATCH_NOMATCH<pos:position pos:line="1667" pos:column="35"/></name></expr>)<pos:position pos:line="1667" pos:column="36"/></condition><then pos:line="1667" pos:column="36"> <block type="pseudo"><expr_stmt><expr><call><name pos:line="1667" pos:column="37">RRETURN<pos:position pos:line="1667" pos:column="44"/></name><argument_list pos:line="1667" pos:column="44">(<argument><expr><name pos:line="1667" pos:column="45">rrc<pos:position pos:line="1667" pos:column="48"/></name></expr></argument>)<pos:position pos:line="1667" pos:column="49"/></argument_list></call></expr>;<pos:position pos:line="1667" pos:column="50"/></expr_stmt></block></then></if>
          <if pos:line="1668" pos:column="11">if <condition pos:line="1668" pos:column="14">(<expr><name pos:line="1668" pos:column="15">fi<pos:position pos:line="1668" pos:column="17"/></name> <operator pos:line="1668" pos:column="18">&gt;=<pos:position pos:line="1668" pos:column="23"/></operator> <name pos:line="1668" pos:column="21">max<pos:position pos:line="1668" pos:column="24"/></name> <operator pos:line="1668" pos:column="25">||<pos:position pos:line="1668" pos:column="27"/></operator> <name pos:line="1668" pos:column="28">eptr<pos:position pos:line="1668" pos:column="32"/></name> <operator pos:line="1668" pos:column="33">&gt;=<pos:position pos:line="1668" pos:column="38"/></operator> <name><name pos:line="1668" pos:column="36">md<pos:position pos:line="1668" pos:column="38"/></name><operator pos:line="1668" pos:column="38">-&gt;<pos:position pos:line="1668" pos:column="43"/></operator><name pos:line="1668" pos:column="40">end_subject<pos:position pos:line="1668" pos:column="51"/></name></name> <operator pos:line="1668" pos:column="52">||<pos:position pos:line="1668" pos:column="54"/></operator>
              <name pos:line="1669" pos:column="15">fc<pos:position pos:line="1669" pos:column="17"/></name> <operator pos:line="1669" pos:column="18">!=<pos:position pos:line="1669" pos:column="20"/></operator> <name><name pos:line="1669" pos:column="21">md<pos:position pos:line="1669" pos:column="23"/></name><operator pos:line="1669" pos:column="23">-&gt;<pos:position pos:line="1669" pos:column="28"/></operator><name pos:line="1669" pos:column="25">lcc<pos:position pos:line="1669" pos:column="28"/></name><index pos:line="1669" pos:column="28">[<expr><operator pos:line="1669" pos:column="29">*<pos:position pos:line="1669" pos:column="30"/></operator><name pos:line="1669" pos:column="30">eptr<pos:position pos:line="1669" pos:column="34"/></name><operator pos:line="1669" pos:column="34">++<pos:position pos:line="1669" pos:column="36"/></operator></expr>]<pos:position pos:line="1669" pos:column="37"/></index></name></expr>)<pos:position pos:line="1669" pos:column="38"/></condition><then pos:line="1669" pos:column="38">
            <block type="pseudo"><expr_stmt><expr><call><name pos:line="1670" pos:column="13">RRETURN<pos:position pos:line="1670" pos:column="20"/></name><argument_list pos:line="1670" pos:column="20">(<argument><expr><name pos:line="1670" pos:column="21">MATCH_NOMATCH<pos:position pos:line="1670" pos:column="34"/></name></expr></argument>)<pos:position pos:line="1670" pos:column="35"/></argument_list></call></expr>;<pos:position pos:line="1670" pos:column="36"/></expr_stmt></block></then></if>
          }<pos:position pos:line="1671" pos:column="12"/></block></for>
        <comment type="block" pos:line="1672" pos:column="9">/* Control never gets here */</comment>
        }<pos:position pos:line="1673" pos:column="10"/></block></then>
      <else pos:line="1674" pos:column="7">else
        <block pos:line="1675" pos:column="9">{
        <expr_stmt><expr><name pos:line="1676" pos:column="9">pp<pos:position pos:line="1676" pos:column="11"/></name> <operator pos:line="1676" pos:column="12">=<pos:position pos:line="1676" pos:column="13"/></operator> <name pos:line="1676" pos:column="14">eptr<pos:position pos:line="1676" pos:column="18"/></name></expr>;<pos:position pos:line="1676" pos:column="19"/></expr_stmt>
        <for pos:line="1677" pos:column="9">for <control pos:line="1677" pos:column="13">(<init><expr><name pos:line="1677" pos:column="14">i<pos:position pos:line="1677" pos:column="15"/></name> <operator pos:line="1677" pos:column="16">=<pos:position pos:line="1677" pos:column="17"/></operator> <name pos:line="1677" pos:column="18">min<pos:position pos:line="1677" pos:column="21"/></name></expr>;<pos:position pos:line="1677" pos:column="22"/></init> <condition><expr><name pos:line="1677" pos:column="23">i<pos:position pos:line="1677" pos:column="24"/></name> <operator pos:line="1677" pos:column="25">&lt;<pos:position pos:line="1677" pos:column="29"/></operator> <name pos:line="1677" pos:column="27">max<pos:position pos:line="1677" pos:column="30"/></name></expr>;<pos:position pos:line="1677" pos:column="31"/></condition> <incr><expr><name pos:line="1677" pos:column="32">i<pos:position pos:line="1677" pos:column="33"/></name><operator pos:line="1677" pos:column="33">++<pos:position pos:line="1677" pos:column="35"/></operator></expr></incr>)<pos:position pos:line="1677" pos:column="36"/></control>
          <block pos:line="1678" pos:column="11">{
          <if pos:line="1679" pos:column="11">if <condition pos:line="1679" pos:column="14">(<expr><name pos:line="1679" pos:column="15">eptr<pos:position pos:line="1679" pos:column="19"/></name> <operator pos:line="1679" pos:column="20">&gt;=<pos:position pos:line="1679" pos:column="25"/></operator> <name><name pos:line="1679" pos:column="23">md<pos:position pos:line="1679" pos:column="25"/></name><operator pos:line="1679" pos:column="25">-&gt;<pos:position pos:line="1679" pos:column="30"/></operator><name pos:line="1679" pos:column="27">end_subject<pos:position pos:line="1679" pos:column="38"/></name></name> <operator pos:line="1679" pos:column="39">||<pos:position pos:line="1679" pos:column="41"/></operator> <name pos:line="1679" pos:column="42">fc<pos:position pos:line="1679" pos:column="44"/></name> <operator pos:line="1679" pos:column="45">!=<pos:position pos:line="1679" pos:column="47"/></operator> <name><name pos:line="1679" pos:column="48">md<pos:position pos:line="1679" pos:column="50"/></name><operator pos:line="1679" pos:column="50">-&gt;<pos:position pos:line="1679" pos:column="55"/></operator><name pos:line="1679" pos:column="52">lcc<pos:position pos:line="1679" pos:column="55"/></name><index pos:line="1679" pos:column="55">[<expr><operator pos:line="1679" pos:column="56">*<pos:position pos:line="1679" pos:column="57"/></operator><name pos:line="1679" pos:column="57">eptr<pos:position pos:line="1679" pos:column="61"/></name></expr>]<pos:position pos:line="1679" pos:column="62"/></index></name></expr>)<pos:position pos:line="1679" pos:column="63"/></condition><then pos:line="1679" pos:column="63"> <block type="pseudo"><break pos:line="1679" pos:column="64">break;<pos:position pos:line="1679" pos:column="70"/></break></block></then></if>
          <expr_stmt><expr><name pos:line="1680" pos:column="11">eptr<pos:position pos:line="1680" pos:column="15"/></name><operator pos:line="1680" pos:column="15">++<pos:position pos:line="1680" pos:column="17"/></operator></expr>;<pos:position pos:line="1680" pos:column="18"/></expr_stmt>
          }<pos:position pos:line="1681" pos:column="12"/></block></for>
        <while pos:line="1682" pos:column="9">while <condition pos:line="1682" pos:column="15">(<expr><name pos:line="1682" pos:column="16">eptr<pos:position pos:line="1682" pos:column="20"/></name> <operator pos:line="1682" pos:column="21">&gt;=<pos:position pos:line="1682" pos:column="26"/></operator> <name pos:line="1682" pos:column="24">pp<pos:position pos:line="1682" pos:column="26"/></name></expr>)<pos:position pos:line="1682" pos:column="27"/></condition>
          <block pos:line="1683" pos:column="11">{
          <expr_stmt><expr><call><name pos:line="1684" pos:column="11">RMATCH<pos:position pos:line="1684" pos:column="17"/></name><argument_list pos:line="1684" pos:column="17">(<argument><expr><name pos:line="1684" pos:column="18">rrc<pos:position pos:line="1684" pos:column="21"/></name></expr></argument>, <argument><expr><name pos:line="1684" pos:column="23">eptr<pos:position pos:line="1684" pos:column="27"/></name></expr></argument>, <argument><expr><name pos:line="1684" pos:column="29">ecode<pos:position pos:line="1684" pos:column="34"/></name></expr></argument>, <argument><expr><name pos:line="1684" pos:column="36">offset_top<pos:position pos:line="1684" pos:column="46"/></name></expr></argument>, <argument><expr><name pos:line="1684" pos:column="48">md<pos:position pos:line="1684" pos:column="50"/></name></expr></argument>, <argument><expr><name pos:line="1684" pos:column="52">ims<pos:position pos:line="1684" pos:column="55"/></name></expr></argument>, <argument><expr><name pos:line="1684" pos:column="57">eptrb<pos:position pos:line="1684" pos:column="62"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="1684" pos:column="64">0<pos:position pos:line="1684" pos:column="65"/></literal></expr></argument>)<pos:position pos:line="1684" pos:column="66"/></argument_list></call></expr>;<pos:position pos:line="1684" pos:column="67"/></expr_stmt>
          <expr_stmt><expr><name pos:line="1685" pos:column="11">eptr<pos:position pos:line="1685" pos:column="15"/></name><operator pos:line="1685" pos:column="15">--<pos:position pos:line="1685" pos:column="17"/></operator></expr>;<pos:position pos:line="1685" pos:column="18"/></expr_stmt>
          <if pos:line="1686" pos:column="11">if <condition pos:line="1686" pos:column="14">(<expr><name pos:line="1686" pos:column="15">rrc<pos:position pos:line="1686" pos:column="18"/></name> <operator pos:line="1686" pos:column="19">!=<pos:position pos:line="1686" pos:column="21"/></operator> <name pos:line="1686" pos:column="22">MATCH_NOMATCH<pos:position pos:line="1686" pos:column="35"/></name></expr>)<pos:position pos:line="1686" pos:column="36"/></condition><then pos:line="1686" pos:column="36"> <block type="pseudo"><expr_stmt><expr><call><name pos:line="1686" pos:column="37">RRETURN<pos:position pos:line="1686" pos:column="44"/></name><argument_list pos:line="1686" pos:column="44">(<argument><expr><name pos:line="1686" pos:column="45">rrc<pos:position pos:line="1686" pos:column="48"/></name></expr></argument>)<pos:position pos:line="1686" pos:column="49"/></argument_list></call></expr>;<pos:position pos:line="1686" pos:column="50"/></expr_stmt></block></then></if>
          }<pos:position pos:line="1687" pos:column="12"/></block></while>
        <expr_stmt><expr><call><name pos:line="1688" pos:column="9">RRETURN<pos:position pos:line="1688" pos:column="16"/></name><argument_list pos:line="1688" pos:column="16">(<argument><expr><name pos:line="1688" pos:column="17">MATCH_NOMATCH<pos:position pos:line="1688" pos:column="30"/></name></expr></argument>)<pos:position pos:line="1688" pos:column="31"/></argument_list></call></expr>;<pos:position pos:line="1688" pos:column="32"/></expr_stmt>
        }<pos:position pos:line="1689" pos:column="10"/></block></else></if>
      <comment type="block" pos:line="1690" pos:column="7">/* Control never gets here */</comment>
      }<pos:position pos:line="1691" pos:column="8"/></block></then>

    <comment type="block" pos:line="1693" pos:column="5">/* Caseful comparisons (includes all multi-byte characters) */</comment>

    <else pos:line="1695" pos:column="5">else
      <block pos:line="1696" pos:column="7">{
      <for pos:line="1697" pos:column="7">for <control pos:line="1697" pos:column="11">(<init><expr><name pos:line="1697" pos:column="12">i<pos:position pos:line="1697" pos:column="13"/></name> <operator pos:line="1697" pos:column="14">=<pos:position pos:line="1697" pos:column="15"/></operator> <literal type="number" pos:line="1697" pos:column="16">1<pos:position pos:line="1697" pos:column="17"/></literal></expr>;<pos:position pos:line="1697" pos:column="18"/></init> <condition><expr><name pos:line="1697" pos:column="19">i<pos:position pos:line="1697" pos:column="20"/></name> <operator pos:line="1697" pos:column="21">&lt;=<pos:position pos:line="1697" pos:column="26"/></operator> <name pos:line="1697" pos:column="24">min<pos:position pos:line="1697" pos:column="27"/></name></expr>;<pos:position pos:line="1697" pos:column="28"/></condition> <incr><expr><name pos:line="1697" pos:column="29">i<pos:position pos:line="1697" pos:column="30"/></name><operator pos:line="1697" pos:column="30">++<pos:position pos:line="1697" pos:column="32"/></operator></expr></incr>)<pos:position pos:line="1697" pos:column="33"/></control> <block type="pseudo"><if pos:line="1697" pos:column="34">if <condition pos:line="1697" pos:column="37">(<expr><name pos:line="1697" pos:column="38">fc<pos:position pos:line="1697" pos:column="40"/></name> <operator pos:line="1697" pos:column="41">!=<pos:position pos:line="1697" pos:column="43"/></operator> <operator pos:line="1697" pos:column="44">*<pos:position pos:line="1697" pos:column="45"/></operator><name pos:line="1697" pos:column="45">eptr<pos:position pos:line="1697" pos:column="49"/></name><operator pos:line="1697" pos:column="49">++<pos:position pos:line="1697" pos:column="51"/></operator></expr>)<pos:position pos:line="1697" pos:column="52"/></condition><then pos:line="1697" pos:column="52"> <block type="pseudo"><expr_stmt><expr><call><name pos:line="1697" pos:column="53">RRETURN<pos:position pos:line="1697" pos:column="60"/></name><argument_list pos:line="1697" pos:column="60">(<argument><expr><name pos:line="1697" pos:column="61">MATCH_NOMATCH<pos:position pos:line="1697" pos:column="74"/></name></expr></argument>)<pos:position pos:line="1697" pos:column="75"/></argument_list></call></expr>;<pos:position pos:line="1697" pos:column="76"/></expr_stmt></block></then></if></block></for>
      <if pos:line="1698" pos:column="7">if <condition pos:line="1698" pos:column="10">(<expr><name pos:line="1698" pos:column="11">min<pos:position pos:line="1698" pos:column="14"/></name> <operator pos:line="1698" pos:column="15">==<pos:position pos:line="1698" pos:column="17"/></operator> <name pos:line="1698" pos:column="18">max<pos:position pos:line="1698" pos:column="21"/></name></expr>)<pos:position pos:line="1698" pos:column="22"/></condition><then pos:line="1698" pos:column="22"> <block type="pseudo"><continue pos:line="1698" pos:column="23">continue;<pos:position pos:line="1698" pos:column="32"/></continue></block></then></if>
      <if pos:line="1699" pos:column="7">if <condition pos:line="1699" pos:column="10">(<expr><name pos:line="1699" pos:column="11">minimize<pos:position pos:line="1699" pos:column="19"/></name></expr>)<pos:position pos:line="1699" pos:column="20"/></condition><then pos:line="1699" pos:column="20">
        <block pos:line="1700" pos:column="9">{
        <for pos:line="1701" pos:column="9">for <control pos:line="1701" pos:column="13">(<init><expr><name pos:line="1701" pos:column="14">fi<pos:position pos:line="1701" pos:column="16"/></name> <operator pos:line="1701" pos:column="17">=<pos:position pos:line="1701" pos:column="18"/></operator> <name pos:line="1701" pos:column="19">min<pos:position pos:line="1701" pos:column="22"/></name></expr>;<pos:position pos:line="1701" pos:column="23"/></init><condition pos:line="1701" pos:column="23">;<pos:position pos:line="1701" pos:column="24"/></condition> <incr><expr><name pos:line="1701" pos:column="25">fi<pos:position pos:line="1701" pos:column="27"/></name><operator pos:line="1701" pos:column="27">++<pos:position pos:line="1701" pos:column="29"/></operator></expr></incr>)<pos:position pos:line="1701" pos:column="30"/></control>
          <block pos:line="1702" pos:column="11">{
          <expr_stmt><expr><call><name pos:line="1703" pos:column="11">RMATCH<pos:position pos:line="1703" pos:column="17"/></name><argument_list pos:line="1703" pos:column="17">(<argument><expr><name pos:line="1703" pos:column="18">rrc<pos:position pos:line="1703" pos:column="21"/></name></expr></argument>, <argument><expr><name pos:line="1703" pos:column="23">eptr<pos:position pos:line="1703" pos:column="27"/></name></expr></argument>, <argument><expr><name pos:line="1703" pos:column="29">ecode<pos:position pos:line="1703" pos:column="34"/></name></expr></argument>, <argument><expr><name pos:line="1703" pos:column="36">offset_top<pos:position pos:line="1703" pos:column="46"/></name></expr></argument>, <argument><expr><name pos:line="1703" pos:column="48">md<pos:position pos:line="1703" pos:column="50"/></name></expr></argument>, <argument><expr><name pos:line="1703" pos:column="52">ims<pos:position pos:line="1703" pos:column="55"/></name></expr></argument>, <argument><expr><name pos:line="1703" pos:column="57">eptrb<pos:position pos:line="1703" pos:column="62"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="1703" pos:column="64">0<pos:position pos:line="1703" pos:column="65"/></literal></expr></argument>)<pos:position pos:line="1703" pos:column="66"/></argument_list></call></expr>;<pos:position pos:line="1703" pos:column="67"/></expr_stmt>
          <if pos:line="1704" pos:column="11">if <condition pos:line="1704" pos:column="14">(<expr><name pos:line="1704" pos:column="15">rrc<pos:position pos:line="1704" pos:column="18"/></name> <operator pos:line="1704" pos:column="19">!=<pos:position pos:line="1704" pos:column="21"/></operator> <name pos:line="1704" pos:column="22">MATCH_NOMATCH<pos:position pos:line="1704" pos:column="35"/></name></expr>)<pos:position pos:line="1704" pos:column="36"/></condition><then pos:line="1704" pos:column="36"> <block type="pseudo"><expr_stmt><expr><call><name pos:line="1704" pos:column="37">RRETURN<pos:position pos:line="1704" pos:column="44"/></name><argument_list pos:line="1704" pos:column="44">(<argument><expr><name pos:line="1704" pos:column="45">rrc<pos:position pos:line="1704" pos:column="48"/></name></expr></argument>)<pos:position pos:line="1704" pos:column="49"/></argument_list></call></expr>;<pos:position pos:line="1704" pos:column="50"/></expr_stmt></block></then></if>
          <if pos:line="1705" pos:column="11">if <condition pos:line="1705" pos:column="14">(<expr><name pos:line="1705" pos:column="15">fi<pos:position pos:line="1705" pos:column="17"/></name> <operator pos:line="1705" pos:column="18">&gt;=<pos:position pos:line="1705" pos:column="23"/></operator> <name pos:line="1705" pos:column="21">max<pos:position pos:line="1705" pos:column="24"/></name> <operator pos:line="1705" pos:column="25">||<pos:position pos:line="1705" pos:column="27"/></operator> <name pos:line="1705" pos:column="28">eptr<pos:position pos:line="1705" pos:column="32"/></name> <operator pos:line="1705" pos:column="33">&gt;=<pos:position pos:line="1705" pos:column="38"/></operator> <name><name pos:line="1705" pos:column="36">md<pos:position pos:line="1705" pos:column="38"/></name><operator pos:line="1705" pos:column="38">-&gt;<pos:position pos:line="1705" pos:column="43"/></operator><name pos:line="1705" pos:column="40">end_subject<pos:position pos:line="1705" pos:column="51"/></name></name> <operator pos:line="1705" pos:column="52">||<pos:position pos:line="1705" pos:column="54"/></operator> <name pos:line="1705" pos:column="55">fc<pos:position pos:line="1705" pos:column="57"/></name> <operator pos:line="1705" pos:column="58">!=<pos:position pos:line="1705" pos:column="60"/></operator> <operator pos:line="1705" pos:column="61">*<pos:position pos:line="1705" pos:column="62"/></operator><name pos:line="1705" pos:column="62">eptr<pos:position pos:line="1705" pos:column="66"/></name><operator pos:line="1705" pos:column="66">++<pos:position pos:line="1705" pos:column="68"/></operator></expr>)<pos:position pos:line="1705" pos:column="69"/></condition><then pos:line="1705" pos:column="69">
            <block type="pseudo"><expr_stmt><expr><call><name pos:line="1706" pos:column="13">RRETURN<pos:position pos:line="1706" pos:column="20"/></name><argument_list pos:line="1706" pos:column="20">(<argument><expr><name pos:line="1706" pos:column="21">MATCH_NOMATCH<pos:position pos:line="1706" pos:column="34"/></name></expr></argument>)<pos:position pos:line="1706" pos:column="35"/></argument_list></call></expr>;<pos:position pos:line="1706" pos:column="36"/></expr_stmt></block></then></if>
          }<pos:position pos:line="1707" pos:column="12"/></block></for>
        <comment type="block" pos:line="1708" pos:column="9">/* Control never gets here */</comment>
        }<pos:position pos:line="1709" pos:column="10"/></block></then>
      <else pos:line="1710" pos:column="7">else
        <block pos:line="1711" pos:column="9">{
        <expr_stmt><expr><name pos:line="1712" pos:column="9">pp<pos:position pos:line="1712" pos:column="11"/></name> <operator pos:line="1712" pos:column="12">=<pos:position pos:line="1712" pos:column="13"/></operator> <name pos:line="1712" pos:column="14">eptr<pos:position pos:line="1712" pos:column="18"/></name></expr>;<pos:position pos:line="1712" pos:column="19"/></expr_stmt>
        <for pos:line="1713" pos:column="9">for <control pos:line="1713" pos:column="13">(<init><expr><name pos:line="1713" pos:column="14">i<pos:position pos:line="1713" pos:column="15"/></name> <operator pos:line="1713" pos:column="16">=<pos:position pos:line="1713" pos:column="17"/></operator> <name pos:line="1713" pos:column="18">min<pos:position pos:line="1713" pos:column="21"/></name></expr>;<pos:position pos:line="1713" pos:column="22"/></init> <condition><expr><name pos:line="1713" pos:column="23">i<pos:position pos:line="1713" pos:column="24"/></name> <operator pos:line="1713" pos:column="25">&lt;<pos:position pos:line="1713" pos:column="29"/></operator> <name pos:line="1713" pos:column="27">max<pos:position pos:line="1713" pos:column="30"/></name></expr>;<pos:position pos:line="1713" pos:column="31"/></condition> <incr><expr><name pos:line="1713" pos:column="32">i<pos:position pos:line="1713" pos:column="33"/></name><operator pos:line="1713" pos:column="33">++<pos:position pos:line="1713" pos:column="35"/></operator></expr></incr>)<pos:position pos:line="1713" pos:column="36"/></control>
          <block pos:line="1714" pos:column="11">{
          <if pos:line="1715" pos:column="11">if <condition pos:line="1715" pos:column="14">(<expr><name pos:line="1715" pos:column="15">eptr<pos:position pos:line="1715" pos:column="19"/></name> <operator pos:line="1715" pos:column="20">&gt;=<pos:position pos:line="1715" pos:column="25"/></operator> <name><name pos:line="1715" pos:column="23">md<pos:position pos:line="1715" pos:column="25"/></name><operator pos:line="1715" pos:column="25">-&gt;<pos:position pos:line="1715" pos:column="30"/></operator><name pos:line="1715" pos:column="27">end_subject<pos:position pos:line="1715" pos:column="38"/></name></name> <operator pos:line="1715" pos:column="39">||<pos:position pos:line="1715" pos:column="41"/></operator> <name pos:line="1715" pos:column="42">fc<pos:position pos:line="1715" pos:column="44"/></name> <operator pos:line="1715" pos:column="45">!=<pos:position pos:line="1715" pos:column="47"/></operator> <operator pos:line="1715" pos:column="48">*<pos:position pos:line="1715" pos:column="49"/></operator><name pos:line="1715" pos:column="49">eptr<pos:position pos:line="1715" pos:column="53"/></name></expr>)<pos:position pos:line="1715" pos:column="54"/></condition><then pos:line="1715" pos:column="54"> <block type="pseudo"><break pos:line="1715" pos:column="55">break;<pos:position pos:line="1715" pos:column="61"/></break></block></then></if>
          <expr_stmt><expr><name pos:line="1716" pos:column="11">eptr<pos:position pos:line="1716" pos:column="15"/></name><operator pos:line="1716" pos:column="15">++<pos:position pos:line="1716" pos:column="17"/></operator></expr>;<pos:position pos:line="1716" pos:column="18"/></expr_stmt>
          }<pos:position pos:line="1717" pos:column="12"/></block></for>
        <while pos:line="1718" pos:column="9">while <condition pos:line="1718" pos:column="15">(<expr><name pos:line="1718" pos:column="16">eptr<pos:position pos:line="1718" pos:column="20"/></name> <operator pos:line="1718" pos:column="21">&gt;=<pos:position pos:line="1718" pos:column="26"/></operator> <name pos:line="1718" pos:column="24">pp<pos:position pos:line="1718" pos:column="26"/></name></expr>)<pos:position pos:line="1718" pos:column="27"/></condition>
          <block pos:line="1719" pos:column="11">{
          <expr_stmt><expr><call><name pos:line="1720" pos:column="11">RMATCH<pos:position pos:line="1720" pos:column="17"/></name><argument_list pos:line="1720" pos:column="17">(<argument><expr><name pos:line="1720" pos:column="18">rrc<pos:position pos:line="1720" pos:column="21"/></name></expr></argument>, <argument><expr><name pos:line="1720" pos:column="23">eptr<pos:position pos:line="1720" pos:column="27"/></name></expr></argument>, <argument><expr><name pos:line="1720" pos:column="29">ecode<pos:position pos:line="1720" pos:column="34"/></name></expr></argument>, <argument><expr><name pos:line="1720" pos:column="36">offset_top<pos:position pos:line="1720" pos:column="46"/></name></expr></argument>, <argument><expr><name pos:line="1720" pos:column="48">md<pos:position pos:line="1720" pos:column="50"/></name></expr></argument>, <argument><expr><name pos:line="1720" pos:column="52">ims<pos:position pos:line="1720" pos:column="55"/></name></expr></argument>, <argument><expr><name pos:line="1720" pos:column="57">eptrb<pos:position pos:line="1720" pos:column="62"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="1720" pos:column="64">0<pos:position pos:line="1720" pos:column="65"/></literal></expr></argument>)<pos:position pos:line="1720" pos:column="66"/></argument_list></call></expr>;<pos:position pos:line="1720" pos:column="67"/></expr_stmt>
          <expr_stmt><expr><name pos:line="1721" pos:column="11">eptr<pos:position pos:line="1721" pos:column="15"/></name><operator pos:line="1721" pos:column="15">--<pos:position pos:line="1721" pos:column="17"/></operator></expr>;<pos:position pos:line="1721" pos:column="18"/></expr_stmt>
          <if pos:line="1722" pos:column="11">if <condition pos:line="1722" pos:column="14">(<expr><name pos:line="1722" pos:column="15">rrc<pos:position pos:line="1722" pos:column="18"/></name> <operator pos:line="1722" pos:column="19">!=<pos:position pos:line="1722" pos:column="21"/></operator> <name pos:line="1722" pos:column="22">MATCH_NOMATCH<pos:position pos:line="1722" pos:column="35"/></name></expr>)<pos:position pos:line="1722" pos:column="36"/></condition><then pos:line="1722" pos:column="36"> <block type="pseudo"><expr_stmt><expr><call><name pos:line="1722" pos:column="37">RRETURN<pos:position pos:line="1722" pos:column="44"/></name><argument_list pos:line="1722" pos:column="44">(<argument><expr><name pos:line="1722" pos:column="45">rrc<pos:position pos:line="1722" pos:column="48"/></name></expr></argument>)<pos:position pos:line="1722" pos:column="49"/></argument_list></call></expr>;<pos:position pos:line="1722" pos:column="50"/></expr_stmt></block></then></if>
          }<pos:position pos:line="1723" pos:column="12"/></block></while>
        <expr_stmt><expr><call><name pos:line="1724" pos:column="9">RRETURN<pos:position pos:line="1724" pos:column="16"/></name><argument_list pos:line="1724" pos:column="16">(<argument><expr><name pos:line="1724" pos:column="17">MATCH_NOMATCH<pos:position pos:line="1724" pos:column="30"/></name></expr></argument>)<pos:position pos:line="1724" pos:column="31"/></argument_list></call></expr>;<pos:position pos:line="1724" pos:column="32"/></expr_stmt>
        }<pos:position pos:line="1725" pos:column="10"/></block></else></if>
      }<pos:position pos:line="1726" pos:column="8"/></block></else></if>
    <comment type="block" pos:line="1727" pos:column="5">/* Control never gets here */</comment>

    <comment type="block" pos:line="1729" pos:column="5">/* Match a negated single one-byte character. The character we are
    checking can be multibyte. */</comment>

    <case pos:line="1732" pos:column="5">case <expr><name pos:line="1732" pos:column="10">OP_NOT<pos:position pos:line="1732" pos:column="16"/></name></expr>:<pos:position pos:line="1732" pos:column="17"/></case>
    <if pos:line="1733" pos:column="5">if <condition pos:line="1733" pos:column="8">(<expr><name pos:line="1733" pos:column="9">eptr<pos:position pos:line="1733" pos:column="13"/></name> <operator pos:line="1733" pos:column="14">&gt;=<pos:position pos:line="1733" pos:column="19"/></operator> <name><name pos:line="1733" pos:column="17">md<pos:position pos:line="1733" pos:column="19"/></name><operator pos:line="1733" pos:column="19">-&gt;<pos:position pos:line="1733" pos:column="24"/></operator><name pos:line="1733" pos:column="21">end_subject<pos:position pos:line="1733" pos:column="32"/></name></name></expr>)<pos:position pos:line="1733" pos:column="33"/></condition><then pos:line="1733" pos:column="33"> <block type="pseudo"><expr_stmt><expr><call><name pos:line="1733" pos:column="34">RRETURN<pos:position pos:line="1733" pos:column="41"/></name><argument_list pos:line="1733" pos:column="41">(<argument><expr><name pos:line="1733" pos:column="42">MATCH_NOMATCH<pos:position pos:line="1733" pos:column="55"/></name></expr></argument>)<pos:position pos:line="1733" pos:column="56"/></argument_list></call></expr>;<pos:position pos:line="1733" pos:column="57"/></expr_stmt></block></then></if>
    <expr_stmt><expr><name pos:line="1734" pos:column="5">ecode<pos:position pos:line="1734" pos:column="10"/></name><operator pos:line="1734" pos:column="10">++<pos:position pos:line="1734" pos:column="12"/></operator></expr>;<pos:position pos:line="1734" pos:column="13"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="1735" pos:column="5">GETCHARINCTEST<pos:position pos:line="1735" pos:column="19"/></name><argument_list pos:line="1735" pos:column="19">(<argument><expr><name pos:line="1735" pos:column="20">c<pos:position pos:line="1735" pos:column="21"/></name></expr></argument>, <argument><expr><name pos:line="1735" pos:column="23">eptr<pos:position pos:line="1735" pos:column="27"/></name></expr></argument>)<pos:position pos:line="1735" pos:column="28"/></argument_list></call></expr>;<pos:position pos:line="1735" pos:column="29"/></expr_stmt>
    <if pos:line="1736" pos:column="5">if <condition pos:line="1736" pos:column="8">(<expr><operator pos:line="1736" pos:column="9">(<pos:position pos:line="1736" pos:column="10"/></operator><name pos:line="1736" pos:column="10">ims<pos:position pos:line="1736" pos:column="13"/></name> <operator pos:line="1736" pos:column="14">&amp;<pos:position pos:line="1736" pos:column="19"/></operator> <name pos:line="1736" pos:column="16">PCRE_CASELESS<pos:position pos:line="1736" pos:column="29"/></name><operator pos:line="1736" pos:column="29">)<pos:position pos:line="1736" pos:column="30"/></operator> <operator pos:line="1736" pos:column="31">!=<pos:position pos:line="1736" pos:column="33"/></operator> <literal type="number" pos:line="1736" pos:column="34">0<pos:position pos:line="1736" pos:column="35"/></literal></expr>)<pos:position pos:line="1736" pos:column="36"/></condition><then pos:line="1736" pos:column="36">
      <block pos:line="1737" pos:column="7">{
<cpp:ifdef pos:line="1738" pos:column="1">#<cpp:directive pos:line="1738" pos:column="2">ifdef<pos:position pos:line="1738" pos:column="7"/></cpp:directive> <name pos:line="1738" pos:column="8">SUPPORT_UTF8<pos:position pos:line="1738" pos:column="20"/></name></cpp:ifdef>
      <if pos:line="1739" pos:column="7">if <condition pos:line="1739" pos:column="10">(<expr><name pos:line="1739" pos:column="11">c<pos:position pos:line="1739" pos:column="12"/></name> <operator pos:line="1739" pos:column="13">&lt;<pos:position pos:line="1739" pos:column="17"/></operator> <literal type="number" pos:line="1739" pos:column="15">256<pos:position pos:line="1739" pos:column="18"/></literal></expr>)<pos:position pos:line="1739" pos:column="19"/></condition><then pos:line="1739" pos:column="19">
<cpp:endif pos:line="1740" pos:column="1">#<cpp:directive pos:line="1740" pos:column="2">endif<pos:position pos:line="1740" pos:column="7"/></cpp:directive></cpp:endif>
      <block type="pseudo"><expr_stmt><expr><name pos:line="1741" pos:column="7">c<pos:position pos:line="1741" pos:column="8"/></name> <operator pos:line="1741" pos:column="9">=<pos:position pos:line="1741" pos:column="10"/></operator> <name><name pos:line="1741" pos:column="11">md<pos:position pos:line="1741" pos:column="13"/></name><operator pos:line="1741" pos:column="13">-&gt;<pos:position pos:line="1741" pos:column="18"/></operator><name pos:line="1741" pos:column="15">lcc<pos:position pos:line="1741" pos:column="18"/></name><index pos:line="1741" pos:column="18">[<expr><name pos:line="1741" pos:column="19">c<pos:position pos:line="1741" pos:column="20"/></name></expr>]<pos:position pos:line="1741" pos:column="21"/></index></name></expr>;<pos:position pos:line="1741" pos:column="22"/></expr_stmt></block></then></if>
      <if pos:line="1742" pos:column="7">if <condition pos:line="1742" pos:column="10">(<expr><name><name pos:line="1742" pos:column="11">md<pos:position pos:line="1742" pos:column="13"/></name><operator pos:line="1742" pos:column="13">-&gt;<pos:position pos:line="1742" pos:column="18"/></operator><name pos:line="1742" pos:column="15">lcc<pos:position pos:line="1742" pos:column="18"/></name><index pos:line="1742" pos:column="18">[<expr><operator pos:line="1742" pos:column="19">*<pos:position pos:line="1742" pos:column="20"/></operator><name pos:line="1742" pos:column="20">ecode<pos:position pos:line="1742" pos:column="25"/></name><operator pos:line="1742" pos:column="25">++<pos:position pos:line="1742" pos:column="27"/></operator></expr>]<pos:position pos:line="1742" pos:column="28"/></index></name> <operator pos:line="1742" pos:column="29">==<pos:position pos:line="1742" pos:column="31"/></operator> <name pos:line="1742" pos:column="32">c<pos:position pos:line="1742" pos:column="33"/></name></expr>)<pos:position pos:line="1742" pos:column="34"/></condition><then pos:line="1742" pos:column="34"> <block type="pseudo"><expr_stmt><expr><call><name pos:line="1742" pos:column="35">RRETURN<pos:position pos:line="1742" pos:column="42"/></name><argument_list pos:line="1742" pos:column="42">(<argument><expr><name pos:line="1742" pos:column="43">MATCH_NOMATCH<pos:position pos:line="1742" pos:column="56"/></name></expr></argument>)<pos:position pos:line="1742" pos:column="57"/></argument_list></call></expr>;<pos:position pos:line="1742" pos:column="58"/></expr_stmt></block></then></if>
      }<pos:position pos:line="1743" pos:column="8"/></block></then>
    <else pos:line="1744" pos:column="5">else
      <block pos:line="1745" pos:column="7">{
      <if pos:line="1746" pos:column="7">if <condition pos:line="1746" pos:column="10">(<expr><operator pos:line="1746" pos:column="11">*<pos:position pos:line="1746" pos:column="12"/></operator><name pos:line="1746" pos:column="12">ecode<pos:position pos:line="1746" pos:column="17"/></name><operator pos:line="1746" pos:column="17">++<pos:position pos:line="1746" pos:column="19"/></operator> <operator pos:line="1746" pos:column="20">==<pos:position pos:line="1746" pos:column="22"/></operator> <name pos:line="1746" pos:column="23">c<pos:position pos:line="1746" pos:column="24"/></name></expr>)<pos:position pos:line="1746" pos:column="25"/></condition><then pos:line="1746" pos:column="25"> <block type="pseudo"><expr_stmt><expr><call><name pos:line="1746" pos:column="26">RRETURN<pos:position pos:line="1746" pos:column="33"/></name><argument_list pos:line="1746" pos:column="33">(<argument><expr><name pos:line="1746" pos:column="34">MATCH_NOMATCH<pos:position pos:line="1746" pos:column="47"/></name></expr></argument>)<pos:position pos:line="1746" pos:column="48"/></argument_list></call></expr>;<pos:position pos:line="1746" pos:column="49"/></expr_stmt></block></then></if>
      }<pos:position pos:line="1747" pos:column="8"/></block></else></if>
    <break pos:line="1748" pos:column="5">break;<pos:position pos:line="1748" pos:column="11"/></break>

    <comment type="block" pos:line="1750" pos:column="5">/* Match a negated single one-byte character repeatedly. This is almost a
    repeat of the code for a repeated single character, but I haven't found a
    nice way of commoning these up that doesn't require a test of the
    positive/negative option for each character match. Maybe that wouldn't add
    very much to the time taken, but character matching *is* what this is all
    about... */</comment>

    <case pos:line="1757" pos:column="5">case <expr><name pos:line="1757" pos:column="10">OP_NOTEXACT<pos:position pos:line="1757" pos:column="21"/></name></expr>:<pos:position pos:line="1757" pos:column="22"/></case>
    <expr_stmt><expr><name pos:line="1758" pos:column="5">min<pos:position pos:line="1758" pos:column="8"/></name> <operator pos:line="1758" pos:column="9">=<pos:position pos:line="1758" pos:column="10"/></operator> <name pos:line="1758" pos:column="11">max<pos:position pos:line="1758" pos:column="14"/></name> <operator pos:line="1758" pos:column="15">=<pos:position pos:line="1758" pos:column="16"/></operator> <call><name pos:line="1758" pos:column="17">GET2<pos:position pos:line="1758" pos:column="21"/></name><argument_list pos:line="1758" pos:column="21">(<argument><expr><name pos:line="1758" pos:column="22">ecode<pos:position pos:line="1758" pos:column="27"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="1758" pos:column="29">1<pos:position pos:line="1758" pos:column="30"/></literal></expr></argument>)<pos:position pos:line="1758" pos:column="31"/></argument_list></call></expr>;<pos:position pos:line="1758" pos:column="32"/></expr_stmt>
    <expr_stmt><expr><name pos:line="1759" pos:column="5">ecode<pos:position pos:line="1759" pos:column="10"/></name> <operator pos:line="1759" pos:column="11">+=<pos:position pos:line="1759" pos:column="13"/></operator> <literal type="number" pos:line="1759" pos:column="14">3<pos:position pos:line="1759" pos:column="15"/></literal></expr>;<pos:position pos:line="1759" pos:column="16"/></expr_stmt>
    <goto pos:line="1760" pos:column="5">goto <name pos:line="1760" pos:column="10">REPEATNOTCHAR<pos:position pos:line="1760" pos:column="23"/></name>;<pos:position pos:line="1760" pos:column="24"/></goto>

    <case pos:line="1762" pos:column="5">case <expr><name pos:line="1762" pos:column="10">OP_NOTUPTO<pos:position pos:line="1762" pos:column="20"/></name></expr>:<pos:position pos:line="1762" pos:column="21"/></case>
    <case pos:line="1763" pos:column="5">case <expr><name pos:line="1763" pos:column="10">OP_NOTMINUPTO<pos:position pos:line="1763" pos:column="23"/></name></expr>:<pos:position pos:line="1763" pos:column="24"/></case>
    <expr_stmt><expr><name pos:line="1764" pos:column="5">min<pos:position pos:line="1764" pos:column="8"/></name> <operator pos:line="1764" pos:column="9">=<pos:position pos:line="1764" pos:column="10"/></operator> <literal type="number" pos:line="1764" pos:column="11">0<pos:position pos:line="1764" pos:column="12"/></literal></expr>;<pos:position pos:line="1764" pos:column="13"/></expr_stmt>
    <expr_stmt><expr><name pos:line="1765" pos:column="5">max<pos:position pos:line="1765" pos:column="8"/></name> <operator pos:line="1765" pos:column="9">=<pos:position pos:line="1765" pos:column="10"/></operator> <call><name pos:line="1765" pos:column="11">GET2<pos:position pos:line="1765" pos:column="15"/></name><argument_list pos:line="1765" pos:column="15">(<argument><expr><name pos:line="1765" pos:column="16">ecode<pos:position pos:line="1765" pos:column="21"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="1765" pos:column="23">1<pos:position pos:line="1765" pos:column="24"/></literal></expr></argument>)<pos:position pos:line="1765" pos:column="25"/></argument_list></call></expr>;<pos:position pos:line="1765" pos:column="26"/></expr_stmt>
    <expr_stmt><expr><name pos:line="1766" pos:column="5">minimize<pos:position pos:line="1766" pos:column="13"/></name> <operator pos:line="1766" pos:column="14">=<pos:position pos:line="1766" pos:column="15"/></operator> <operator pos:line="1766" pos:column="16">*<pos:position pos:line="1766" pos:column="17"/></operator><name pos:line="1766" pos:column="17">ecode<pos:position pos:line="1766" pos:column="22"/></name> <operator pos:line="1766" pos:column="23">==<pos:position pos:line="1766" pos:column="25"/></operator> <name pos:line="1766" pos:column="26">OP_NOTMINUPTO<pos:position pos:line="1766" pos:column="39"/></name></expr>;<pos:position pos:line="1766" pos:column="40"/></expr_stmt>
    <expr_stmt><expr><name pos:line="1767" pos:column="5">ecode<pos:position pos:line="1767" pos:column="10"/></name> <operator pos:line="1767" pos:column="11">+=<pos:position pos:line="1767" pos:column="13"/></operator> <literal type="number" pos:line="1767" pos:column="14">3<pos:position pos:line="1767" pos:column="15"/></literal></expr>;<pos:position pos:line="1767" pos:column="16"/></expr_stmt>
    <goto pos:line="1768" pos:column="5">goto <name pos:line="1768" pos:column="10">REPEATNOTCHAR<pos:position pos:line="1768" pos:column="23"/></name>;<pos:position pos:line="1768" pos:column="24"/></goto>

    <case pos:line="1770" pos:column="5">case <expr><name pos:line="1770" pos:column="10">OP_NOTSTAR<pos:position pos:line="1770" pos:column="20"/></name></expr>:<pos:position pos:line="1770" pos:column="21"/></case>
    <case pos:line="1771" pos:column="5">case <expr><name pos:line="1771" pos:column="10">OP_NOTMINSTAR<pos:position pos:line="1771" pos:column="23"/></name></expr>:<pos:position pos:line="1771" pos:column="24"/></case>
    <case pos:line="1772" pos:column="5">case <expr><name pos:line="1772" pos:column="10">OP_NOTPLUS<pos:position pos:line="1772" pos:column="20"/></name></expr>:<pos:position pos:line="1772" pos:column="21"/></case>
    <case pos:line="1773" pos:column="5">case <expr><name pos:line="1773" pos:column="10">OP_NOTMINPLUS<pos:position pos:line="1773" pos:column="23"/></name></expr>:<pos:position pos:line="1773" pos:column="24"/></case>
    <case pos:line="1774" pos:column="5">case <expr><name pos:line="1774" pos:column="10">OP_NOTQUERY<pos:position pos:line="1774" pos:column="21"/></name></expr>:<pos:position pos:line="1774" pos:column="22"/></case>
    <case pos:line="1775" pos:column="5">case <expr><name pos:line="1775" pos:column="10">OP_NOTMINQUERY<pos:position pos:line="1775" pos:column="24"/></name></expr>:<pos:position pos:line="1775" pos:column="25"/></case>
    <expr_stmt><expr><name pos:line="1776" pos:column="5">c<pos:position pos:line="1776" pos:column="6"/></name> <operator pos:line="1776" pos:column="7">=<pos:position pos:line="1776" pos:column="8"/></operator> <operator pos:line="1776" pos:column="9">*<pos:position pos:line="1776" pos:column="10"/></operator><name pos:line="1776" pos:column="10">ecode<pos:position pos:line="1776" pos:column="15"/></name><operator pos:line="1776" pos:column="15">++<pos:position pos:line="1776" pos:column="17"/></operator> <operator pos:line="1776" pos:column="18">-<pos:position pos:line="1776" pos:column="19"/></operator> <name pos:line="1776" pos:column="20">OP_NOTSTAR<pos:position pos:line="1776" pos:column="30"/></name></expr>;<pos:position pos:line="1776" pos:column="31"/></expr_stmt>
    <expr_stmt><expr><name pos:line="1777" pos:column="5">minimize<pos:position pos:line="1777" pos:column="13"/></name> <operator pos:line="1777" pos:column="14">=<pos:position pos:line="1777" pos:column="15"/></operator> <operator pos:line="1777" pos:column="16">(<pos:position pos:line="1777" pos:column="17"/></operator><name pos:line="1777" pos:column="17">c<pos:position pos:line="1777" pos:column="18"/></name> <operator pos:line="1777" pos:column="19">&amp;<pos:position pos:line="1777" pos:column="24"/></operator> <literal type="number" pos:line="1777" pos:column="21">1<pos:position pos:line="1777" pos:column="22"/></literal><operator pos:line="1777" pos:column="22">)<pos:position pos:line="1777" pos:column="23"/></operator> <operator pos:line="1777" pos:column="24">!=<pos:position pos:line="1777" pos:column="26"/></operator> <literal type="number" pos:line="1777" pos:column="27">0<pos:position pos:line="1777" pos:column="28"/></literal></expr>;<pos:position pos:line="1777" pos:column="29"/></expr_stmt>
    <expr_stmt><expr><name pos:line="1778" pos:column="5">min<pos:position pos:line="1778" pos:column="8"/></name> <operator pos:line="1778" pos:column="9">=<pos:position pos:line="1778" pos:column="10"/></operator> <name><name pos:line="1778" pos:column="11">rep_min<pos:position pos:line="1778" pos:column="18"/></name><index pos:line="1778" pos:column="18">[<expr><name pos:line="1778" pos:column="19">c<pos:position pos:line="1778" pos:column="20"/></name></expr>]<pos:position pos:line="1778" pos:column="21"/></index></name></expr>;<pos:position pos:line="1778" pos:column="22"/></expr_stmt>                 <comment type="block" pos:line="1778" pos:column="39">/* Pick up values from tables; */</comment>
    <expr_stmt><expr><name pos:line="1779" pos:column="5">max<pos:position pos:line="1779" pos:column="8"/></name> <operator pos:line="1779" pos:column="9">=<pos:position pos:line="1779" pos:column="10"/></operator> <name><name pos:line="1779" pos:column="11">rep_max<pos:position pos:line="1779" pos:column="18"/></name><index pos:line="1779" pos:column="18">[<expr><name pos:line="1779" pos:column="19">c<pos:position pos:line="1779" pos:column="20"/></name></expr>]<pos:position pos:line="1779" pos:column="21"/></index></name></expr>;<pos:position pos:line="1779" pos:column="22"/></expr_stmt>                 <comment type="block" pos:line="1779" pos:column="39">/* zero for max =&gt; infinity */</comment>
    <if pos:line="1780" pos:column="5">if <condition pos:line="1780" pos:column="8">(<expr><name pos:line="1780" pos:column="9">max<pos:position pos:line="1780" pos:column="12"/></name> <operator pos:line="1780" pos:column="13">==<pos:position pos:line="1780" pos:column="15"/></operator> <literal type="number" pos:line="1780" pos:column="16">0<pos:position pos:line="1780" pos:column="17"/></literal></expr>)<pos:position pos:line="1780" pos:column="18"/></condition><then pos:line="1780" pos:column="18"> <block type="pseudo"><expr_stmt><expr><name pos:line="1780" pos:column="19">max<pos:position pos:line="1780" pos:column="22"/></name> <operator pos:line="1780" pos:column="23">=<pos:position pos:line="1780" pos:column="24"/></operator> <name pos:line="1780" pos:column="25">INT_MAX<pos:position pos:line="1780" pos:column="32"/></name></expr>;<pos:position pos:line="1780" pos:column="33"/></expr_stmt></block></then></if>

    <comment type="block" pos:line="1782" pos:column="5">/* Common code for all repeated single-byte matches. We can give up quickly
    if there are fewer than the minimum number of bytes left in the
    subject. */</comment>

    <label><name pos:line="1786" pos:column="5">REPEATNOTCHAR<pos:position pos:line="1786" pos:column="18"/></name>:<pos:position pos:line="1786" pos:column="19"/></label>
    <if pos:line="1787" pos:column="5">if <condition pos:line="1787" pos:column="8">(<expr><name pos:line="1787" pos:column="9">min<pos:position pos:line="1787" pos:column="12"/></name> <operator pos:line="1787" pos:column="13">&gt;<pos:position pos:line="1787" pos:column="17"/></operator> <name><name pos:line="1787" pos:column="15">md<pos:position pos:line="1787" pos:column="17"/></name><operator pos:line="1787" pos:column="17">-&gt;<pos:position pos:line="1787" pos:column="22"/></operator><name pos:line="1787" pos:column="19">end_subject<pos:position pos:line="1787" pos:column="30"/></name></name> <operator pos:line="1787" pos:column="31">-<pos:position pos:line="1787" pos:column="32"/></operator> <name pos:line="1787" pos:column="33">eptr<pos:position pos:line="1787" pos:column="37"/></name></expr>)<pos:position pos:line="1787" pos:column="38"/></condition><then pos:line="1787" pos:column="38"> <block type="pseudo"><expr_stmt><expr><call><name pos:line="1787" pos:column="39">RRETURN<pos:position pos:line="1787" pos:column="46"/></name><argument_list pos:line="1787" pos:column="46">(<argument><expr><name pos:line="1787" pos:column="47">MATCH_NOMATCH<pos:position pos:line="1787" pos:column="60"/></name></expr></argument>)<pos:position pos:line="1787" pos:column="61"/></argument_list></call></expr>;<pos:position pos:line="1787" pos:column="62"/></expr_stmt></block></then></if>
    <expr_stmt><expr><name pos:line="1788" pos:column="5">fc<pos:position pos:line="1788" pos:column="7"/></name> <operator pos:line="1788" pos:column="8">=<pos:position pos:line="1788" pos:column="9"/></operator> <operator pos:line="1788" pos:column="10">*<pos:position pos:line="1788" pos:column="11"/></operator><name pos:line="1788" pos:column="11">ecode<pos:position pos:line="1788" pos:column="16"/></name><operator pos:line="1788" pos:column="16">++<pos:position pos:line="1788" pos:column="18"/></operator></expr>;<pos:position pos:line="1788" pos:column="19"/></expr_stmt>

    <comment type="block" pos:line="1790" pos:column="5">/* The code is duplicated for the caseless and caseful cases, for speed,
    since matching characters is likely to be quite common. First, ensure the
    minimum number of matches are present. If min = max, continue at the same
    level without recursing. Otherwise, if minimizing, keep trying the rest of
    the expression and advancing one matching character if failing, up to the
    maximum. Alternatively, if maximizing, find the maximum number of
    characters and work backwards. */</comment>

    <expr_stmt><expr><call><name pos:line="1798" pos:column="5">DPRINTF<pos:position pos:line="1798" pos:column="12"/></name><argument_list pos:line="1798" pos:column="12">(<argument><expr><operator pos:line="1798" pos:column="13">(<pos:position pos:line="1798" pos:column="14"/></operator><literal type="string" pos:line="1798" pos:column="14">"negative matching %c{%d,%d} against subject %.*s\n"<pos:position pos:line="1798" pos:column="66"/></literal><operator pos:line="1798" pos:column="66">,<pos:position pos:line="1798" pos:column="67"/></operator> <name pos:line="1798" pos:column="68">fc<pos:position pos:line="1798" pos:column="70"/></name><operator pos:line="1798" pos:column="70">,<pos:position pos:line="1798" pos:column="71"/></operator> <name pos:line="1798" pos:column="72">min<pos:position pos:line="1798" pos:column="75"/></name><operator pos:line="1798" pos:column="75">,<pos:position pos:line="1798" pos:column="76"/></operator> <name pos:line="1798" pos:column="77">max<pos:position pos:line="1798" pos:column="80"/></name><operator pos:line="1798" pos:column="80">,<pos:position pos:line="1798" pos:column="81"/></operator>
      <name pos:line="1799" pos:column="7">max<pos:position pos:line="1799" pos:column="10"/></name><operator pos:line="1799" pos:column="10">,<pos:position pos:line="1799" pos:column="11"/></operator> <name pos:line="1799" pos:column="12">eptr<pos:position pos:line="1799" pos:column="16"/></name><operator pos:line="1799" pos:column="16">)<pos:position pos:line="1799" pos:column="17"/></operator></expr></argument>)<pos:position pos:line="1799" pos:column="18"/></argument_list></call></expr>;<pos:position pos:line="1799" pos:column="19"/></expr_stmt>

    <if pos:line="1801" pos:column="5">if <condition pos:line="1801" pos:column="8">(<expr><operator pos:line="1801" pos:column="9">(<pos:position pos:line="1801" pos:column="10"/></operator><name pos:line="1801" pos:column="10">ims<pos:position pos:line="1801" pos:column="13"/></name> <operator pos:line="1801" pos:column="14">&amp;<pos:position pos:line="1801" pos:column="19"/></operator> <name pos:line="1801" pos:column="16">PCRE_CASELESS<pos:position pos:line="1801" pos:column="29"/></name><operator pos:line="1801" pos:column="29">)<pos:position pos:line="1801" pos:column="30"/></operator> <operator pos:line="1801" pos:column="31">!=<pos:position pos:line="1801" pos:column="33"/></operator> <literal type="number" pos:line="1801" pos:column="34">0<pos:position pos:line="1801" pos:column="35"/></literal></expr>)<pos:position pos:line="1801" pos:column="36"/></condition><then pos:line="1801" pos:column="36">
      <block pos:line="1802" pos:column="7">{
      <expr_stmt><expr><name pos:line="1803" pos:column="7">fc<pos:position pos:line="1803" pos:column="9"/></name> <operator pos:line="1803" pos:column="10">=<pos:position pos:line="1803" pos:column="11"/></operator> <name><name pos:line="1803" pos:column="12">md<pos:position pos:line="1803" pos:column="14"/></name><operator pos:line="1803" pos:column="14">-&gt;<pos:position pos:line="1803" pos:column="19"/></operator><name pos:line="1803" pos:column="16">lcc<pos:position pos:line="1803" pos:column="19"/></name><index pos:line="1803" pos:column="19">[<expr><name pos:line="1803" pos:column="20">fc<pos:position pos:line="1803" pos:column="22"/></name></expr>]<pos:position pos:line="1803" pos:column="23"/></index></name></expr>;<pos:position pos:line="1803" pos:column="24"/></expr_stmt>

<cpp:ifdef pos:line="1805" pos:column="1">#<cpp:directive pos:line="1805" pos:column="2">ifdef<pos:position pos:line="1805" pos:column="7"/></cpp:directive> <name pos:line="1805" pos:column="8">SUPPORT_UTF8<pos:position pos:line="1805" pos:column="20"/></name></cpp:ifdef>
      <comment type="block" pos:line="1806" pos:column="7">/* UTF-8 mode */</comment>
      <if pos:line="1807" pos:column="7">if <condition pos:line="1807" pos:column="10">(<expr><name><name pos:line="1807" pos:column="11">md<pos:position pos:line="1807" pos:column="13"/></name><operator pos:line="1807" pos:column="13">-&gt;<pos:position pos:line="1807" pos:column="18"/></operator><name pos:line="1807" pos:column="15">utf8<pos:position pos:line="1807" pos:column="19"/></name></name></expr>)<pos:position pos:line="1807" pos:column="20"/></condition><then pos:line="1807" pos:column="20">
        <block pos:line="1808" pos:column="9">{
        <decl_stmt><decl><type><specifier pos:line="1809" pos:column="9">register<pos:position pos:line="1809" pos:column="17"/></specifier> <name pos:line="1809" pos:column="18">int<pos:position pos:line="1809" pos:column="21"/></name></type> <name pos:line="1809" pos:column="22">d<pos:position pos:line="1809" pos:column="23"/></name></decl>;<pos:position pos:line="1809" pos:column="24"/></decl_stmt>
        <for pos:line="1810" pos:column="9">for <control pos:line="1810" pos:column="13">(<init><expr><name pos:line="1810" pos:column="14">i<pos:position pos:line="1810" pos:column="15"/></name> <operator pos:line="1810" pos:column="16">=<pos:position pos:line="1810" pos:column="17"/></operator> <literal type="number" pos:line="1810" pos:column="18">1<pos:position pos:line="1810" pos:column="19"/></literal></expr>;<pos:position pos:line="1810" pos:column="20"/></init> <condition><expr><name pos:line="1810" pos:column="21">i<pos:position pos:line="1810" pos:column="22"/></name> <operator pos:line="1810" pos:column="23">&lt;=<pos:position pos:line="1810" pos:column="28"/></operator> <name pos:line="1810" pos:column="26">min<pos:position pos:line="1810" pos:column="29"/></name></expr>;<pos:position pos:line="1810" pos:column="30"/></condition> <incr><expr><name pos:line="1810" pos:column="31">i<pos:position pos:line="1810" pos:column="32"/></name><operator pos:line="1810" pos:column="32">++<pos:position pos:line="1810" pos:column="34"/></operator></expr></incr>)<pos:position pos:line="1810" pos:column="35"/></control>
          <block pos:line="1811" pos:column="11">{
          <expr_stmt><expr><call><name pos:line="1812" pos:column="11">GETCHARINC<pos:position pos:line="1812" pos:column="21"/></name><argument_list pos:line="1812" pos:column="21">(<argument><expr><name pos:line="1812" pos:column="22">d<pos:position pos:line="1812" pos:column="23"/></name></expr></argument>, <argument><expr><name pos:line="1812" pos:column="25">eptr<pos:position pos:line="1812" pos:column="29"/></name></expr></argument>)<pos:position pos:line="1812" pos:column="30"/></argument_list></call></expr>;<pos:position pos:line="1812" pos:column="31"/></expr_stmt>
          <if pos:line="1813" pos:column="11">if <condition pos:line="1813" pos:column="14">(<expr><name pos:line="1813" pos:column="15">d<pos:position pos:line="1813" pos:column="16"/></name> <operator pos:line="1813" pos:column="17">&lt;<pos:position pos:line="1813" pos:column="21"/></operator> <literal type="number" pos:line="1813" pos:column="19">256<pos:position pos:line="1813" pos:column="22"/></literal></expr>)<pos:position pos:line="1813" pos:column="23"/></condition><then pos:line="1813" pos:column="23"> <block type="pseudo"><expr_stmt><expr><name pos:line="1813" pos:column="24">d<pos:position pos:line="1813" pos:column="25"/></name> <operator pos:line="1813" pos:column="26">=<pos:position pos:line="1813" pos:column="27"/></operator> <name><name pos:line="1813" pos:column="28">md<pos:position pos:line="1813" pos:column="30"/></name><operator pos:line="1813" pos:column="30">-&gt;<pos:position pos:line="1813" pos:column="35"/></operator><name pos:line="1813" pos:column="32">lcc<pos:position pos:line="1813" pos:column="35"/></name><index pos:line="1813" pos:column="35">[<expr><name pos:line="1813" pos:column="36">d<pos:position pos:line="1813" pos:column="37"/></name></expr>]<pos:position pos:line="1813" pos:column="38"/></index></name></expr>;<pos:position pos:line="1813" pos:column="39"/></expr_stmt></block></then></if>
          <if pos:line="1814" pos:column="11">if <condition pos:line="1814" pos:column="14">(<expr><name pos:line="1814" pos:column="15">fc<pos:position pos:line="1814" pos:column="17"/></name> <operator pos:line="1814" pos:column="18">==<pos:position pos:line="1814" pos:column="20"/></operator> <name pos:line="1814" pos:column="21">d<pos:position pos:line="1814" pos:column="22"/></name></expr>)<pos:position pos:line="1814" pos:column="23"/></condition><then pos:line="1814" pos:column="23"> <block type="pseudo"><expr_stmt><expr><call><name pos:line="1814" pos:column="24">RRETURN<pos:position pos:line="1814" pos:column="31"/></name><argument_list pos:line="1814" pos:column="31">(<argument><expr><name pos:line="1814" pos:column="32">MATCH_NOMATCH<pos:position pos:line="1814" pos:column="45"/></name></expr></argument>)<pos:position pos:line="1814" pos:column="46"/></argument_list></call></expr>;<pos:position pos:line="1814" pos:column="47"/></expr_stmt></block></then></if>
          }<pos:position pos:line="1815" pos:column="12"/></block></for>
        }<pos:position pos:line="1816" pos:column="10"/></block></then>
      <else pos:line="1817" pos:column="7">else
<cpp:endif pos:line="1818" pos:column="1">#<cpp:directive pos:line="1818" pos:column="2">endif<pos:position pos:line="1818" pos:column="7"/></cpp:directive></cpp:endif>

      <comment type="block" pos:line="1820" pos:column="7">/* Not UTF-8 mode */</comment>
        <block pos:line="1821" pos:column="9">{
        <for pos:line="1822" pos:column="9">for <control pos:line="1822" pos:column="13">(<init><expr><name pos:line="1822" pos:column="14">i<pos:position pos:line="1822" pos:column="15"/></name> <operator pos:line="1822" pos:column="16">=<pos:position pos:line="1822" pos:column="17"/></operator> <literal type="number" pos:line="1822" pos:column="18">1<pos:position pos:line="1822" pos:column="19"/></literal></expr>;<pos:position pos:line="1822" pos:column="20"/></init> <condition><expr><name pos:line="1822" pos:column="21">i<pos:position pos:line="1822" pos:column="22"/></name> <operator pos:line="1822" pos:column="23">&lt;=<pos:position pos:line="1822" pos:column="28"/></operator> <name pos:line="1822" pos:column="26">min<pos:position pos:line="1822" pos:column="29"/></name></expr>;<pos:position pos:line="1822" pos:column="30"/></condition> <incr><expr><name pos:line="1822" pos:column="31">i<pos:position pos:line="1822" pos:column="32"/></name><operator pos:line="1822" pos:column="32">++<pos:position pos:line="1822" pos:column="34"/></operator></expr></incr>)<pos:position pos:line="1822" pos:column="35"/></control>
          <block type="pseudo"><if pos:line="1823" pos:column="11">if <condition pos:line="1823" pos:column="14">(<expr><name pos:line="1823" pos:column="15">fc<pos:position pos:line="1823" pos:column="17"/></name> <operator pos:line="1823" pos:column="18">==<pos:position pos:line="1823" pos:column="20"/></operator> <name><name pos:line="1823" pos:column="21">md<pos:position pos:line="1823" pos:column="23"/></name><operator pos:line="1823" pos:column="23">-&gt;<pos:position pos:line="1823" pos:column="28"/></operator><name pos:line="1823" pos:column="25">lcc<pos:position pos:line="1823" pos:column="28"/></name><index pos:line="1823" pos:column="28">[<expr><operator pos:line="1823" pos:column="29">*<pos:position pos:line="1823" pos:column="30"/></operator><name pos:line="1823" pos:column="30">eptr<pos:position pos:line="1823" pos:column="34"/></name><operator pos:line="1823" pos:column="34">++<pos:position pos:line="1823" pos:column="36"/></operator></expr>]<pos:position pos:line="1823" pos:column="37"/></index></name></expr>)<pos:position pos:line="1823" pos:column="38"/></condition><then pos:line="1823" pos:column="38"> <block type="pseudo"><expr_stmt><expr><call><name pos:line="1823" pos:column="39">RRETURN<pos:position pos:line="1823" pos:column="46"/></name><argument_list pos:line="1823" pos:column="46">(<argument><expr><name pos:line="1823" pos:column="47">MATCH_NOMATCH<pos:position pos:line="1823" pos:column="60"/></name></expr></argument>)<pos:position pos:line="1823" pos:column="61"/></argument_list></call></expr>;<pos:position pos:line="1823" pos:column="62"/></expr_stmt></block></then></if></block></for>
        }<pos:position pos:line="1824" pos:column="10"/></block></else></if>

      <if pos:line="1826" pos:column="7">if <condition pos:line="1826" pos:column="10">(<expr><name pos:line="1826" pos:column="11">min<pos:position pos:line="1826" pos:column="14"/></name> <operator pos:line="1826" pos:column="15">==<pos:position pos:line="1826" pos:column="17"/></operator> <name pos:line="1826" pos:column="18">max<pos:position pos:line="1826" pos:column="21"/></name></expr>)<pos:position pos:line="1826" pos:column="22"/></condition><then pos:line="1826" pos:column="22"> <block type="pseudo"><continue pos:line="1826" pos:column="23">continue;<pos:position pos:line="1826" pos:column="32"/></continue></block></then></if>

      <if pos:line="1828" pos:column="7">if <condition pos:line="1828" pos:column="10">(<expr><name pos:line="1828" pos:column="11">minimize<pos:position pos:line="1828" pos:column="19"/></name></expr>)<pos:position pos:line="1828" pos:column="20"/></condition><then pos:line="1828" pos:column="20">
        <block pos:line="1829" pos:column="9">{
<cpp:ifdef pos:line="1830" pos:column="1">#<cpp:directive pos:line="1830" pos:column="2">ifdef<pos:position pos:line="1830" pos:column="7"/></cpp:directive> <name pos:line="1830" pos:column="8">SUPPORT_UTF8<pos:position pos:line="1830" pos:column="20"/></name></cpp:ifdef>
        <comment type="block" pos:line="1831" pos:column="9">/* UTF-8 mode */</comment>
        <if pos:line="1832" pos:column="9">if <condition pos:line="1832" pos:column="12">(<expr><name><name pos:line="1832" pos:column="13">md<pos:position pos:line="1832" pos:column="15"/></name><operator pos:line="1832" pos:column="15">-&gt;<pos:position pos:line="1832" pos:column="20"/></operator><name pos:line="1832" pos:column="17">utf8<pos:position pos:line="1832" pos:column="21"/></name></name></expr>)<pos:position pos:line="1832" pos:column="22"/></condition><then pos:line="1832" pos:column="22">
          <block pos:line="1833" pos:column="11">{
          <decl_stmt><decl><type><specifier pos:line="1834" pos:column="11">register<pos:position pos:line="1834" pos:column="19"/></specifier> <name pos:line="1834" pos:column="20">int<pos:position pos:line="1834" pos:column="23"/></name></type> <name pos:line="1834" pos:column="24">d<pos:position pos:line="1834" pos:column="25"/></name></decl>;<pos:position pos:line="1834" pos:column="26"/></decl_stmt>
          <for pos:line="1835" pos:column="11">for <control pos:line="1835" pos:column="15">(<init><expr><name pos:line="1835" pos:column="16">fi<pos:position pos:line="1835" pos:column="18"/></name> <operator pos:line="1835" pos:column="19">=<pos:position pos:line="1835" pos:column="20"/></operator> <name pos:line="1835" pos:column="21">min<pos:position pos:line="1835" pos:column="24"/></name></expr>;<pos:position pos:line="1835" pos:column="25"/></init><condition pos:line="1835" pos:column="25">;<pos:position pos:line="1835" pos:column="26"/></condition> <incr><expr><name pos:line="1835" pos:column="27">fi<pos:position pos:line="1835" pos:column="29"/></name><operator pos:line="1835" pos:column="29">++<pos:position pos:line="1835" pos:column="31"/></operator></expr></incr>)<pos:position pos:line="1835" pos:column="32"/></control>
            <block pos:line="1836" pos:column="13">{
            <expr_stmt><expr><call><name pos:line="1837" pos:column="13">RMATCH<pos:position pos:line="1837" pos:column="19"/></name><argument_list pos:line="1837" pos:column="19">(<argument><expr><name pos:line="1837" pos:column="20">rrc<pos:position pos:line="1837" pos:column="23"/></name></expr></argument>, <argument><expr><name pos:line="1837" pos:column="25">eptr<pos:position pos:line="1837" pos:column="29"/></name></expr></argument>, <argument><expr><name pos:line="1837" pos:column="31">ecode<pos:position pos:line="1837" pos:column="36"/></name></expr></argument>, <argument><expr><name pos:line="1837" pos:column="38">offset_top<pos:position pos:line="1837" pos:column="48"/></name></expr></argument>, <argument><expr><name pos:line="1837" pos:column="50">md<pos:position pos:line="1837" pos:column="52"/></name></expr></argument>, <argument><expr><name pos:line="1837" pos:column="54">ims<pos:position pos:line="1837" pos:column="57"/></name></expr></argument>, <argument><expr><name pos:line="1837" pos:column="59">eptrb<pos:position pos:line="1837" pos:column="64"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="1837" pos:column="66">0<pos:position pos:line="1837" pos:column="67"/></literal></expr></argument>)<pos:position pos:line="1837" pos:column="68"/></argument_list></call></expr>;<pos:position pos:line="1837" pos:column="69"/></expr_stmt>
            <if pos:line="1838" pos:column="13">if <condition pos:line="1838" pos:column="16">(<expr><name pos:line="1838" pos:column="17">rrc<pos:position pos:line="1838" pos:column="20"/></name> <operator pos:line="1838" pos:column="21">!=<pos:position pos:line="1838" pos:column="23"/></operator> <name pos:line="1838" pos:column="24">MATCH_NOMATCH<pos:position pos:line="1838" pos:column="37"/></name></expr>)<pos:position pos:line="1838" pos:column="38"/></condition><then pos:line="1838" pos:column="38"> <block type="pseudo"><expr_stmt><expr><call><name pos:line="1838" pos:column="39">RRETURN<pos:position pos:line="1838" pos:column="46"/></name><argument_list pos:line="1838" pos:column="46">(<argument><expr><name pos:line="1838" pos:column="47">rrc<pos:position pos:line="1838" pos:column="50"/></name></expr></argument>)<pos:position pos:line="1838" pos:column="51"/></argument_list></call></expr>;<pos:position pos:line="1838" pos:column="52"/></expr_stmt></block></then></if>
            <expr_stmt><expr><call><name pos:line="1839" pos:column="13">GETCHARINC<pos:position pos:line="1839" pos:column="23"/></name><argument_list pos:line="1839" pos:column="23">(<argument><expr><name pos:line="1839" pos:column="24">d<pos:position pos:line="1839" pos:column="25"/></name></expr></argument>, <argument><expr><name pos:line="1839" pos:column="27">eptr<pos:position pos:line="1839" pos:column="31"/></name></expr></argument>)<pos:position pos:line="1839" pos:column="32"/></argument_list></call></expr>;<pos:position pos:line="1839" pos:column="33"/></expr_stmt>
            <if pos:line="1840" pos:column="13">if <condition pos:line="1840" pos:column="16">(<expr><name pos:line="1840" pos:column="17">d<pos:position pos:line="1840" pos:column="18"/></name> <operator pos:line="1840" pos:column="19">&lt;<pos:position pos:line="1840" pos:column="23"/></operator> <literal type="number" pos:line="1840" pos:column="21">256<pos:position pos:line="1840" pos:column="24"/></literal></expr>)<pos:position pos:line="1840" pos:column="25"/></condition><then pos:line="1840" pos:column="25"> <block type="pseudo"><expr_stmt><expr><name pos:line="1840" pos:column="26">d<pos:position pos:line="1840" pos:column="27"/></name> <operator pos:line="1840" pos:column="28">=<pos:position pos:line="1840" pos:column="29"/></operator> <name><name pos:line="1840" pos:column="30">md<pos:position pos:line="1840" pos:column="32"/></name><operator pos:line="1840" pos:column="32">-&gt;<pos:position pos:line="1840" pos:column="37"/></operator><name pos:line="1840" pos:column="34">lcc<pos:position pos:line="1840" pos:column="37"/></name><index pos:line="1840" pos:column="37">[<expr><name pos:line="1840" pos:column="38">d<pos:position pos:line="1840" pos:column="39"/></name></expr>]<pos:position pos:line="1840" pos:column="40"/></index></name></expr>;<pos:position pos:line="1840" pos:column="41"/></expr_stmt></block></then></if>
            <if pos:line="1841" pos:column="13">if <condition pos:line="1841" pos:column="16">(<expr><name pos:line="1841" pos:column="17">fi<pos:position pos:line="1841" pos:column="19"/></name> <operator pos:line="1841" pos:column="20">&gt;=<pos:position pos:line="1841" pos:column="25"/></operator> <name pos:line="1841" pos:column="23">max<pos:position pos:line="1841" pos:column="26"/></name> <operator pos:line="1841" pos:column="27">||<pos:position pos:line="1841" pos:column="29"/></operator> <name pos:line="1841" pos:column="30">eptr<pos:position pos:line="1841" pos:column="34"/></name> <operator pos:line="1841" pos:column="35">&gt;=<pos:position pos:line="1841" pos:column="40"/></operator> <name><name pos:line="1841" pos:column="38">md<pos:position pos:line="1841" pos:column="40"/></name><operator pos:line="1841" pos:column="40">-&gt;<pos:position pos:line="1841" pos:column="45"/></operator><name pos:line="1841" pos:column="42">end_subject<pos:position pos:line="1841" pos:column="53"/></name></name> <operator pos:line="1841" pos:column="54">||<pos:position pos:line="1841" pos:column="56"/></operator> <name pos:line="1841" pos:column="57">fc<pos:position pos:line="1841" pos:column="59"/></name> <operator pos:line="1841" pos:column="60">==<pos:position pos:line="1841" pos:column="62"/></operator> <name pos:line="1841" pos:column="63">d<pos:position pos:line="1841" pos:column="64"/></name></expr>)<pos:position pos:line="1841" pos:column="65"/></condition><then pos:line="1841" pos:column="65">
              <block type="pseudo"><expr_stmt><expr><call><name pos:line="1842" pos:column="15">RRETURN<pos:position pos:line="1842" pos:column="22"/></name><argument_list pos:line="1842" pos:column="22">(<argument><expr><name pos:line="1842" pos:column="23">MATCH_NOMATCH<pos:position pos:line="1842" pos:column="36"/></name></expr></argument>)<pos:position pos:line="1842" pos:column="37"/></argument_list></call></expr>;<pos:position pos:line="1842" pos:column="38"/></expr_stmt></block></then></if>
            }<pos:position pos:line="1843" pos:column="14"/></block></for>
          }<pos:position pos:line="1844" pos:column="12"/></block></then>
        <else pos:line="1845" pos:column="9">else
<cpp:endif pos:line="1846" pos:column="1">#<cpp:directive pos:line="1846" pos:column="2">endif<pos:position pos:line="1846" pos:column="7"/></cpp:directive></cpp:endif>
        <comment type="block" pos:line="1847" pos:column="9">/* Not UTF-8 mode */</comment>
          <block pos:line="1848" pos:column="11">{
          <for pos:line="1849" pos:column="11">for <control pos:line="1849" pos:column="15">(<init><expr><name pos:line="1849" pos:column="16">fi<pos:position pos:line="1849" pos:column="18"/></name> <operator pos:line="1849" pos:column="19">=<pos:position pos:line="1849" pos:column="20"/></operator> <name pos:line="1849" pos:column="21">min<pos:position pos:line="1849" pos:column="24"/></name></expr>;<pos:position pos:line="1849" pos:column="25"/></init><condition pos:line="1849" pos:column="25">;<pos:position pos:line="1849" pos:column="26"/></condition> <incr><expr><name pos:line="1849" pos:column="27">fi<pos:position pos:line="1849" pos:column="29"/></name><operator pos:line="1849" pos:column="29">++<pos:position pos:line="1849" pos:column="31"/></operator></expr></incr>)<pos:position pos:line="1849" pos:column="32"/></control>
            <block pos:line="1850" pos:column="13">{
            <expr_stmt><expr><call><name pos:line="1851" pos:column="13">RMATCH<pos:position pos:line="1851" pos:column="19"/></name><argument_list pos:line="1851" pos:column="19">(<argument><expr><name pos:line="1851" pos:column="20">rrc<pos:position pos:line="1851" pos:column="23"/></name></expr></argument>, <argument><expr><name pos:line="1851" pos:column="25">eptr<pos:position pos:line="1851" pos:column="29"/></name></expr></argument>, <argument><expr><name pos:line="1851" pos:column="31">ecode<pos:position pos:line="1851" pos:column="36"/></name></expr></argument>, <argument><expr><name pos:line="1851" pos:column="38">offset_top<pos:position pos:line="1851" pos:column="48"/></name></expr></argument>, <argument><expr><name pos:line="1851" pos:column="50">md<pos:position pos:line="1851" pos:column="52"/></name></expr></argument>, <argument><expr><name pos:line="1851" pos:column="54">ims<pos:position pos:line="1851" pos:column="57"/></name></expr></argument>, <argument><expr><name pos:line="1851" pos:column="59">eptrb<pos:position pos:line="1851" pos:column="64"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="1851" pos:column="66">0<pos:position pos:line="1851" pos:column="67"/></literal></expr></argument>)<pos:position pos:line="1851" pos:column="68"/></argument_list></call></expr>;<pos:position pos:line="1851" pos:column="69"/></expr_stmt>
            <if pos:line="1852" pos:column="13">if <condition pos:line="1852" pos:column="16">(<expr><name pos:line="1852" pos:column="17">rrc<pos:position pos:line="1852" pos:column="20"/></name> <operator pos:line="1852" pos:column="21">!=<pos:position pos:line="1852" pos:column="23"/></operator> <name pos:line="1852" pos:column="24">MATCH_NOMATCH<pos:position pos:line="1852" pos:column="37"/></name></expr>)<pos:position pos:line="1852" pos:column="38"/></condition><then pos:line="1852" pos:column="38"> <block type="pseudo"><expr_stmt><expr><call><name pos:line="1852" pos:column="39">RRETURN<pos:position pos:line="1852" pos:column="46"/></name><argument_list pos:line="1852" pos:column="46">(<argument><expr><name pos:line="1852" pos:column="47">rrc<pos:position pos:line="1852" pos:column="50"/></name></expr></argument>)<pos:position pos:line="1852" pos:column="51"/></argument_list></call></expr>;<pos:position pos:line="1852" pos:column="52"/></expr_stmt></block></then></if>
            <if pos:line="1853" pos:column="13">if <condition pos:line="1853" pos:column="16">(<expr><name pos:line="1853" pos:column="17">fi<pos:position pos:line="1853" pos:column="19"/></name> <operator pos:line="1853" pos:column="20">&gt;=<pos:position pos:line="1853" pos:column="25"/></operator> <name pos:line="1853" pos:column="23">max<pos:position pos:line="1853" pos:column="26"/></name> <operator pos:line="1853" pos:column="27">||<pos:position pos:line="1853" pos:column="29"/></operator> <name pos:line="1853" pos:column="30">eptr<pos:position pos:line="1853" pos:column="34"/></name> <operator pos:line="1853" pos:column="35">&gt;=<pos:position pos:line="1853" pos:column="40"/></operator> <name><name pos:line="1853" pos:column="38">md<pos:position pos:line="1853" pos:column="40"/></name><operator pos:line="1853" pos:column="40">-&gt;<pos:position pos:line="1853" pos:column="45"/></operator><name pos:line="1853" pos:column="42">end_subject<pos:position pos:line="1853" pos:column="53"/></name></name> <operator pos:line="1853" pos:column="54">||<pos:position pos:line="1853" pos:column="56"/></operator> <name pos:line="1853" pos:column="57">fc<pos:position pos:line="1853" pos:column="59"/></name> <operator pos:line="1853" pos:column="60">==<pos:position pos:line="1853" pos:column="62"/></operator> <name><name pos:line="1853" pos:column="63">md<pos:position pos:line="1853" pos:column="65"/></name><operator pos:line="1853" pos:column="65">-&gt;<pos:position pos:line="1853" pos:column="70"/></operator><name pos:line="1853" pos:column="67">lcc<pos:position pos:line="1853" pos:column="70"/></name><index pos:line="1853" pos:column="70">[<expr><operator pos:line="1853" pos:column="71">*<pos:position pos:line="1853" pos:column="72"/></operator><name pos:line="1853" pos:column="72">eptr<pos:position pos:line="1853" pos:column="76"/></name><operator pos:line="1853" pos:column="76">++<pos:position pos:line="1853" pos:column="78"/></operator></expr>]<pos:position pos:line="1853" pos:column="79"/></index></name></expr>)<pos:position pos:line="1853" pos:column="80"/></condition><then pos:line="1853" pos:column="80">
              <block type="pseudo"><expr_stmt><expr><call><name pos:line="1854" pos:column="15">RRETURN<pos:position pos:line="1854" pos:column="22"/></name><argument_list pos:line="1854" pos:column="22">(<argument><expr><name pos:line="1854" pos:column="23">MATCH_NOMATCH<pos:position pos:line="1854" pos:column="36"/></name></expr></argument>)<pos:position pos:line="1854" pos:column="37"/></argument_list></call></expr>;<pos:position pos:line="1854" pos:column="38"/></expr_stmt></block></then></if>
            }<pos:position pos:line="1855" pos:column="14"/></block></for>
          }<pos:position pos:line="1856" pos:column="12"/></block></else></if>
        <comment type="block" pos:line="1857" pos:column="9">/* Control never gets here */</comment>
        }<pos:position pos:line="1858" pos:column="10"/></block></then>

      <comment type="block" pos:line="1860" pos:column="7">/* Maximize case */</comment>

      <else pos:line="1862" pos:column="7">else
        <block pos:line="1863" pos:column="9">{
        <expr_stmt><expr><name pos:line="1864" pos:column="9">pp<pos:position pos:line="1864" pos:column="11"/></name> <operator pos:line="1864" pos:column="12">=<pos:position pos:line="1864" pos:column="13"/></operator> <name pos:line="1864" pos:column="14">eptr<pos:position pos:line="1864" pos:column="18"/></name></expr>;<pos:position pos:line="1864" pos:column="19"/></expr_stmt>

<cpp:ifdef pos:line="1866" pos:column="1">#<cpp:directive pos:line="1866" pos:column="2">ifdef<pos:position pos:line="1866" pos:column="7"/></cpp:directive> <name pos:line="1866" pos:column="8">SUPPORT_UTF8<pos:position pos:line="1866" pos:column="20"/></name></cpp:ifdef>
        <comment type="block" pos:line="1867" pos:column="9">/* UTF-8 mode */</comment>
        <if pos:line="1868" pos:column="9">if <condition pos:line="1868" pos:column="12">(<expr><name><name pos:line="1868" pos:column="13">md<pos:position pos:line="1868" pos:column="15"/></name><operator pos:line="1868" pos:column="15">-&gt;<pos:position pos:line="1868" pos:column="20"/></operator><name pos:line="1868" pos:column="17">utf8<pos:position pos:line="1868" pos:column="21"/></name></name></expr>)<pos:position pos:line="1868" pos:column="22"/></condition><then pos:line="1868" pos:column="22">
          <block pos:line="1869" pos:column="11">{
          <decl_stmt><decl><type><specifier pos:line="1870" pos:column="11">register<pos:position pos:line="1870" pos:column="19"/></specifier> <name pos:line="1870" pos:column="20">int<pos:position pos:line="1870" pos:column="23"/></name></type> <name pos:line="1870" pos:column="24">d<pos:position pos:line="1870" pos:column="25"/></name></decl>;<pos:position pos:line="1870" pos:column="26"/></decl_stmt>
          <for pos:line="1871" pos:column="11">for <control pos:line="1871" pos:column="15">(<init><expr><name pos:line="1871" pos:column="16">i<pos:position pos:line="1871" pos:column="17"/></name> <operator pos:line="1871" pos:column="18">=<pos:position pos:line="1871" pos:column="19"/></operator> <name pos:line="1871" pos:column="20">min<pos:position pos:line="1871" pos:column="23"/></name></expr>;<pos:position pos:line="1871" pos:column="24"/></init> <condition><expr><name pos:line="1871" pos:column="25">i<pos:position pos:line="1871" pos:column="26"/></name> <operator pos:line="1871" pos:column="27">&lt;<pos:position pos:line="1871" pos:column="31"/></operator> <name pos:line="1871" pos:column="29">max<pos:position pos:line="1871" pos:column="32"/></name></expr>;<pos:position pos:line="1871" pos:column="33"/></condition> <incr><expr><name pos:line="1871" pos:column="34">i<pos:position pos:line="1871" pos:column="35"/></name><operator pos:line="1871" pos:column="35">++<pos:position pos:line="1871" pos:column="37"/></operator></expr></incr>)<pos:position pos:line="1871" pos:column="38"/></control>
            <block pos:line="1872" pos:column="13">{
            <decl_stmt><decl><type><name pos:line="1873" pos:column="13">int<pos:position pos:line="1873" pos:column="16"/></name></type> <name pos:line="1873" pos:column="17">len<pos:position pos:line="1873" pos:column="20"/></name> <init pos:line="1873" pos:column="21">= <expr><literal type="number" pos:line="1873" pos:column="23">1<pos:position pos:line="1873" pos:column="24"/></literal></expr></init></decl>;<pos:position pos:line="1873" pos:column="25"/></decl_stmt>
            <if pos:line="1874" pos:column="13">if <condition pos:line="1874" pos:column="16">(<expr><name pos:line="1874" pos:column="17">eptr<pos:position pos:line="1874" pos:column="21"/></name> <operator pos:line="1874" pos:column="22">&gt;=<pos:position pos:line="1874" pos:column="27"/></operator> <name><name pos:line="1874" pos:column="25">md<pos:position pos:line="1874" pos:column="27"/></name><operator pos:line="1874" pos:column="27">-&gt;<pos:position pos:line="1874" pos:column="32"/></operator><name pos:line="1874" pos:column="29">end_subject<pos:position pos:line="1874" pos:column="40"/></name></name></expr>)<pos:position pos:line="1874" pos:column="41"/></condition><then pos:line="1874" pos:column="41"> <block type="pseudo"><break pos:line="1874" pos:column="42">break;<pos:position pos:line="1874" pos:column="48"/></break></block></then></if>
            <expr_stmt><expr><call><name pos:line="1875" pos:column="13">GETCHARLEN<pos:position pos:line="1875" pos:column="23"/></name><argument_list pos:line="1875" pos:column="23">(<argument><expr><name pos:line="1875" pos:column="24">d<pos:position pos:line="1875" pos:column="25"/></name></expr></argument>, <argument><expr><name pos:line="1875" pos:column="27">eptr<pos:position pos:line="1875" pos:column="31"/></name></expr></argument>, <argument><expr><name pos:line="1875" pos:column="33">len<pos:position pos:line="1875" pos:column="36"/></name></expr></argument>)<pos:position pos:line="1875" pos:column="37"/></argument_list></call></expr>;<pos:position pos:line="1875" pos:column="38"/></expr_stmt>
            <if pos:line="1876" pos:column="13">if <condition pos:line="1876" pos:column="16">(<expr><name pos:line="1876" pos:column="17">d<pos:position pos:line="1876" pos:column="18"/></name> <operator pos:line="1876" pos:column="19">&lt;<pos:position pos:line="1876" pos:column="23"/></operator> <literal type="number" pos:line="1876" pos:column="21">256<pos:position pos:line="1876" pos:column="24"/></literal></expr>)<pos:position pos:line="1876" pos:column="25"/></condition><then pos:line="1876" pos:column="25"> <block type="pseudo"><expr_stmt><expr><name pos:line="1876" pos:column="26">d<pos:position pos:line="1876" pos:column="27"/></name> <operator pos:line="1876" pos:column="28">=<pos:position pos:line="1876" pos:column="29"/></operator> <name><name pos:line="1876" pos:column="30">md<pos:position pos:line="1876" pos:column="32"/></name><operator pos:line="1876" pos:column="32">-&gt;<pos:position pos:line="1876" pos:column="37"/></operator><name pos:line="1876" pos:column="34">lcc<pos:position pos:line="1876" pos:column="37"/></name><index pos:line="1876" pos:column="37">[<expr><name pos:line="1876" pos:column="38">d<pos:position pos:line="1876" pos:column="39"/></name></expr>]<pos:position pos:line="1876" pos:column="40"/></index></name></expr>;<pos:position pos:line="1876" pos:column="41"/></expr_stmt></block></then></if>
            <if pos:line="1877" pos:column="13">if <condition pos:line="1877" pos:column="16">(<expr><name pos:line="1877" pos:column="17">fc<pos:position pos:line="1877" pos:column="19"/></name> <operator pos:line="1877" pos:column="20">==<pos:position pos:line="1877" pos:column="22"/></operator> <name pos:line="1877" pos:column="23">d<pos:position pos:line="1877" pos:column="24"/></name></expr>)<pos:position pos:line="1877" pos:column="25"/></condition><then pos:line="1877" pos:column="25"> <block type="pseudo"><break pos:line="1877" pos:column="26">break;<pos:position pos:line="1877" pos:column="32"/></break></block></then></if>
            <expr_stmt><expr><name pos:line="1878" pos:column="13">eptr<pos:position pos:line="1878" pos:column="17"/></name> <operator pos:line="1878" pos:column="18">+=<pos:position pos:line="1878" pos:column="20"/></operator> <name pos:line="1878" pos:column="21">len<pos:position pos:line="1878" pos:column="24"/></name></expr>;<pos:position pos:line="1878" pos:column="25"/></expr_stmt>
            }<pos:position pos:line="1879" pos:column="14"/></block></for>
          <for pos:line="1880" pos:column="11">for<control pos:line="1880" pos:column="14">(<init pos:line="1880" pos:column="15">;<pos:position pos:line="1880" pos:column="16"/></init><condition pos:line="1880" pos:column="16">;<pos:position pos:line="1880" pos:column="17"/></condition><incr/>)<pos:position pos:line="1880" pos:column="18"/></control>
            <block pos:line="1881" pos:column="13">{
            <expr_stmt><expr><call><name pos:line="1882" pos:column="13">RMATCH<pos:position pos:line="1882" pos:column="19"/></name><argument_list pos:line="1882" pos:column="19">(<argument><expr><name pos:line="1882" pos:column="20">rrc<pos:position pos:line="1882" pos:column="23"/></name></expr></argument>, <argument><expr><name pos:line="1882" pos:column="25">eptr<pos:position pos:line="1882" pos:column="29"/></name></expr></argument>, <argument><expr><name pos:line="1882" pos:column="31">ecode<pos:position pos:line="1882" pos:column="36"/></name></expr></argument>, <argument><expr><name pos:line="1882" pos:column="38">offset_top<pos:position pos:line="1882" pos:column="48"/></name></expr></argument>, <argument><expr><name pos:line="1882" pos:column="50">md<pos:position pos:line="1882" pos:column="52"/></name></expr></argument>, <argument><expr><name pos:line="1882" pos:column="54">ims<pos:position pos:line="1882" pos:column="57"/></name></expr></argument>, <argument><expr><name pos:line="1882" pos:column="59">eptrb<pos:position pos:line="1882" pos:column="64"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="1882" pos:column="66">0<pos:position pos:line="1882" pos:column="67"/></literal></expr></argument>)<pos:position pos:line="1882" pos:column="68"/></argument_list></call></expr>;<pos:position pos:line="1882" pos:column="69"/></expr_stmt>
            <if pos:line="1883" pos:column="13">if <condition pos:line="1883" pos:column="16">(<expr><name pos:line="1883" pos:column="17">rrc<pos:position pos:line="1883" pos:column="20"/></name> <operator pos:line="1883" pos:column="21">!=<pos:position pos:line="1883" pos:column="23"/></operator> <name pos:line="1883" pos:column="24">MATCH_NOMATCH<pos:position pos:line="1883" pos:column="37"/></name></expr>)<pos:position pos:line="1883" pos:column="38"/></condition><then pos:line="1883" pos:column="38"> <block type="pseudo"><expr_stmt><expr><call><name pos:line="1883" pos:column="39">RRETURN<pos:position pos:line="1883" pos:column="46"/></name><argument_list pos:line="1883" pos:column="46">(<argument><expr><name pos:line="1883" pos:column="47">rrc<pos:position pos:line="1883" pos:column="50"/></name></expr></argument>)<pos:position pos:line="1883" pos:column="51"/></argument_list></call></expr>;<pos:position pos:line="1883" pos:column="52"/></expr_stmt></block></then></if>
            <if pos:line="1884" pos:column="13">if <condition pos:line="1884" pos:column="16">(<expr><name pos:line="1884" pos:column="17">eptr<pos:position pos:line="1884" pos:column="21"/></name><operator pos:line="1884" pos:column="21">--<pos:position pos:line="1884" pos:column="23"/></operator> <operator pos:line="1884" pos:column="24">==<pos:position pos:line="1884" pos:column="26"/></operator> <name pos:line="1884" pos:column="27">pp<pos:position pos:line="1884" pos:column="29"/></name></expr>)<pos:position pos:line="1884" pos:column="30"/></condition><then pos:line="1884" pos:column="30"> <block type="pseudo"><break pos:line="1884" pos:column="31">break;<pos:position pos:line="1884" pos:column="37"/></break></block></then></if>        <comment type="block" pos:line="1884" pos:column="45">/* Stop if tried at original pos */</comment>
            <expr_stmt><expr><call><name pos:line="1885" pos:column="13">BACKCHAR<pos:position pos:line="1885" pos:column="21"/></name><argument_list pos:line="1885" pos:column="21">(<argument><expr><name pos:line="1885" pos:column="22">eptr<pos:position pos:line="1885" pos:column="26"/></name></expr></argument>)<pos:position pos:line="1885" pos:column="27"/></argument_list></call></expr>;<pos:position pos:line="1885" pos:column="28"/></expr_stmt>
            }<pos:position pos:line="1886" pos:column="14"/></block></for>
          }<pos:position pos:line="1887" pos:column="12"/></block></then>
        <else pos:line="1888" pos:column="9">else
<cpp:endif pos:line="1889" pos:column="1">#<cpp:directive pos:line="1889" pos:column="2">endif<pos:position pos:line="1889" pos:column="7"/></cpp:directive></cpp:endif>
        <comment type="block" pos:line="1890" pos:column="9">/* Not UTF-8 mode */</comment>
          <block pos:line="1891" pos:column="11">{
          <for pos:line="1892" pos:column="11">for <control pos:line="1892" pos:column="15">(<init><expr><name pos:line="1892" pos:column="16">i<pos:position pos:line="1892" pos:column="17"/></name> <operator pos:line="1892" pos:column="18">=<pos:position pos:line="1892" pos:column="19"/></operator> <name pos:line="1892" pos:column="20">min<pos:position pos:line="1892" pos:column="23"/></name></expr>;<pos:position pos:line="1892" pos:column="24"/></init> <condition><expr><name pos:line="1892" pos:column="25">i<pos:position pos:line="1892" pos:column="26"/></name> <operator pos:line="1892" pos:column="27">&lt;<pos:position pos:line="1892" pos:column="31"/></operator> <name pos:line="1892" pos:column="29">max<pos:position pos:line="1892" pos:column="32"/></name></expr>;<pos:position pos:line="1892" pos:column="33"/></condition> <incr><expr><name pos:line="1892" pos:column="34">i<pos:position pos:line="1892" pos:column="35"/></name><operator pos:line="1892" pos:column="35">++<pos:position pos:line="1892" pos:column="37"/></operator></expr></incr>)<pos:position pos:line="1892" pos:column="38"/></control>
            <block pos:line="1893" pos:column="13">{
            <if pos:line="1894" pos:column="13">if <condition pos:line="1894" pos:column="16">(<expr><name pos:line="1894" pos:column="17">eptr<pos:position pos:line="1894" pos:column="21"/></name> <operator pos:line="1894" pos:column="22">&gt;=<pos:position pos:line="1894" pos:column="27"/></operator> <name><name pos:line="1894" pos:column="25">md<pos:position pos:line="1894" pos:column="27"/></name><operator pos:line="1894" pos:column="27">-&gt;<pos:position pos:line="1894" pos:column="32"/></operator><name pos:line="1894" pos:column="29">end_subject<pos:position pos:line="1894" pos:column="40"/></name></name> <operator pos:line="1894" pos:column="41">||<pos:position pos:line="1894" pos:column="43"/></operator> <name pos:line="1894" pos:column="44">fc<pos:position pos:line="1894" pos:column="46"/></name> <operator pos:line="1894" pos:column="47">==<pos:position pos:line="1894" pos:column="49"/></operator> <name><name pos:line="1894" pos:column="50">md<pos:position pos:line="1894" pos:column="52"/></name><operator pos:line="1894" pos:column="52">-&gt;<pos:position pos:line="1894" pos:column="57"/></operator><name pos:line="1894" pos:column="54">lcc<pos:position pos:line="1894" pos:column="57"/></name><index pos:line="1894" pos:column="57">[<expr><operator pos:line="1894" pos:column="58">*<pos:position pos:line="1894" pos:column="59"/></operator><name pos:line="1894" pos:column="59">eptr<pos:position pos:line="1894" pos:column="63"/></name></expr>]<pos:position pos:line="1894" pos:column="64"/></index></name></expr>)<pos:position pos:line="1894" pos:column="65"/></condition><then pos:line="1894" pos:column="65"> <block type="pseudo"><break pos:line="1894" pos:column="66">break;<pos:position pos:line="1894" pos:column="72"/></break></block></then></if>
            <expr_stmt><expr><name pos:line="1895" pos:column="13">eptr<pos:position pos:line="1895" pos:column="17"/></name><operator pos:line="1895" pos:column="17">++<pos:position pos:line="1895" pos:column="19"/></operator></expr>;<pos:position pos:line="1895" pos:column="20"/></expr_stmt>
            }<pos:position pos:line="1896" pos:column="14"/></block></for>
          <while pos:line="1897" pos:column="11">while <condition pos:line="1897" pos:column="17">(<expr><name pos:line="1897" pos:column="18">eptr<pos:position pos:line="1897" pos:column="22"/></name> <operator pos:line="1897" pos:column="23">&gt;=<pos:position pos:line="1897" pos:column="28"/></operator> <name pos:line="1897" pos:column="26">pp<pos:position pos:line="1897" pos:column="28"/></name></expr>)<pos:position pos:line="1897" pos:column="29"/></condition>
            <block pos:line="1898" pos:column="13">{
            <expr_stmt><expr><call><name pos:line="1899" pos:column="13">RMATCH<pos:position pos:line="1899" pos:column="19"/></name><argument_list pos:line="1899" pos:column="19">(<argument><expr><name pos:line="1899" pos:column="20">rrc<pos:position pos:line="1899" pos:column="23"/></name></expr></argument>, <argument><expr><name pos:line="1899" pos:column="25">eptr<pos:position pos:line="1899" pos:column="29"/></name></expr></argument>, <argument><expr><name pos:line="1899" pos:column="31">ecode<pos:position pos:line="1899" pos:column="36"/></name></expr></argument>, <argument><expr><name pos:line="1899" pos:column="38">offset_top<pos:position pos:line="1899" pos:column="48"/></name></expr></argument>, <argument><expr><name pos:line="1899" pos:column="50">md<pos:position pos:line="1899" pos:column="52"/></name></expr></argument>, <argument><expr><name pos:line="1899" pos:column="54">ims<pos:position pos:line="1899" pos:column="57"/></name></expr></argument>, <argument><expr><name pos:line="1899" pos:column="59">eptrb<pos:position pos:line="1899" pos:column="64"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="1899" pos:column="66">0<pos:position pos:line="1899" pos:column="67"/></literal></expr></argument>)<pos:position pos:line="1899" pos:column="68"/></argument_list></call></expr>;<pos:position pos:line="1899" pos:column="69"/></expr_stmt>
            <if pos:line="1900" pos:column="13">if <condition pos:line="1900" pos:column="16">(<expr><name pos:line="1900" pos:column="17">rrc<pos:position pos:line="1900" pos:column="20"/></name> <operator pos:line="1900" pos:column="21">!=<pos:position pos:line="1900" pos:column="23"/></operator> <name pos:line="1900" pos:column="24">MATCH_NOMATCH<pos:position pos:line="1900" pos:column="37"/></name></expr>)<pos:position pos:line="1900" pos:column="38"/></condition><then pos:line="1900" pos:column="38"> <block type="pseudo"><expr_stmt><expr><call><name pos:line="1900" pos:column="39">RRETURN<pos:position pos:line="1900" pos:column="46"/></name><argument_list pos:line="1900" pos:column="46">(<argument><expr><name pos:line="1900" pos:column="47">rrc<pos:position pos:line="1900" pos:column="50"/></name></expr></argument>)<pos:position pos:line="1900" pos:column="51"/></argument_list></call></expr>;<pos:position pos:line="1900" pos:column="52"/></expr_stmt></block></then></if>
            <expr_stmt><expr><name pos:line="1901" pos:column="13">eptr<pos:position pos:line="1901" pos:column="17"/></name><operator pos:line="1901" pos:column="17">--<pos:position pos:line="1901" pos:column="19"/></operator></expr>;<pos:position pos:line="1901" pos:column="20"/></expr_stmt>
            }<pos:position pos:line="1902" pos:column="14"/></block></while>
          }<pos:position pos:line="1903" pos:column="12"/></block></else></if>

        <expr_stmt><expr><call><name pos:line="1905" pos:column="9">RRETURN<pos:position pos:line="1905" pos:column="16"/></name><argument_list pos:line="1905" pos:column="16">(<argument><expr><name pos:line="1905" pos:column="17">MATCH_NOMATCH<pos:position pos:line="1905" pos:column="30"/></name></expr></argument>)<pos:position pos:line="1905" pos:column="31"/></argument_list></call></expr>;<pos:position pos:line="1905" pos:column="32"/></expr_stmt>
        }<pos:position pos:line="1906" pos:column="10"/></block></else></if>
      <comment type="block" pos:line="1907" pos:column="7">/* Control never gets here */</comment>
      }<pos:position pos:line="1908" pos:column="8"/></block></then>

    <comment type="block" pos:line="1910" pos:column="5">/* Caseful comparisons */</comment>

    <else pos:line="1912" pos:column="5">else
      <block pos:line="1913" pos:column="7">{
<cpp:ifdef pos:line="1914" pos:column="1">#<cpp:directive pos:line="1914" pos:column="2">ifdef<pos:position pos:line="1914" pos:column="7"/></cpp:directive> <name pos:line="1914" pos:column="8">SUPPORT_UTF8<pos:position pos:line="1914" pos:column="20"/></name></cpp:ifdef>
      <comment type="block" pos:line="1915" pos:column="7">/* UTF-8 mode */</comment>
      <if pos:line="1916" pos:column="7">if <condition pos:line="1916" pos:column="10">(<expr><name><name pos:line="1916" pos:column="11">md<pos:position pos:line="1916" pos:column="13"/></name><operator pos:line="1916" pos:column="13">-&gt;<pos:position pos:line="1916" pos:column="18"/></operator><name pos:line="1916" pos:column="15">utf8<pos:position pos:line="1916" pos:column="19"/></name></name></expr>)<pos:position pos:line="1916" pos:column="20"/></condition><then pos:line="1916" pos:column="20">
        <block pos:line="1917" pos:column="9">{
        <decl_stmt><decl><type><specifier pos:line="1918" pos:column="9">register<pos:position pos:line="1918" pos:column="17"/></specifier> <name pos:line="1918" pos:column="18">int<pos:position pos:line="1918" pos:column="21"/></name></type> <name pos:line="1918" pos:column="22">d<pos:position pos:line="1918" pos:column="23"/></name></decl>;<pos:position pos:line="1918" pos:column="24"/></decl_stmt>
        <for pos:line="1919" pos:column="9">for <control pos:line="1919" pos:column="13">(<init><expr><name pos:line="1919" pos:column="14">i<pos:position pos:line="1919" pos:column="15"/></name> <operator pos:line="1919" pos:column="16">=<pos:position pos:line="1919" pos:column="17"/></operator> <literal type="number" pos:line="1919" pos:column="18">1<pos:position pos:line="1919" pos:column="19"/></literal></expr>;<pos:position pos:line="1919" pos:column="20"/></init> <condition><expr><name pos:line="1919" pos:column="21">i<pos:position pos:line="1919" pos:column="22"/></name> <operator pos:line="1919" pos:column="23">&lt;=<pos:position pos:line="1919" pos:column="28"/></operator> <name pos:line="1919" pos:column="26">min<pos:position pos:line="1919" pos:column="29"/></name></expr>;<pos:position pos:line="1919" pos:column="30"/></condition> <incr><expr><name pos:line="1919" pos:column="31">i<pos:position pos:line="1919" pos:column="32"/></name><operator pos:line="1919" pos:column="32">++<pos:position pos:line="1919" pos:column="34"/></operator></expr></incr>)<pos:position pos:line="1919" pos:column="35"/></control>
          <block pos:line="1920" pos:column="11">{
          <expr_stmt><expr><call><name pos:line="1921" pos:column="11">GETCHARINC<pos:position pos:line="1921" pos:column="21"/></name><argument_list pos:line="1921" pos:column="21">(<argument><expr><name pos:line="1921" pos:column="22">d<pos:position pos:line="1921" pos:column="23"/></name></expr></argument>, <argument><expr><name pos:line="1921" pos:column="25">eptr<pos:position pos:line="1921" pos:column="29"/></name></expr></argument>)<pos:position pos:line="1921" pos:column="30"/></argument_list></call></expr>;<pos:position pos:line="1921" pos:column="31"/></expr_stmt>
          <if pos:line="1922" pos:column="11">if <condition pos:line="1922" pos:column="14">(<expr><name pos:line="1922" pos:column="15">fc<pos:position pos:line="1922" pos:column="17"/></name> <operator pos:line="1922" pos:column="18">==<pos:position pos:line="1922" pos:column="20"/></operator> <name pos:line="1922" pos:column="21">d<pos:position pos:line="1922" pos:column="22"/></name></expr>)<pos:position pos:line="1922" pos:column="23"/></condition><then pos:line="1922" pos:column="23"> <block type="pseudo"><expr_stmt><expr><call><name pos:line="1922" pos:column="24">RRETURN<pos:position pos:line="1922" pos:column="31"/></name><argument_list pos:line="1922" pos:column="31">(<argument><expr><name pos:line="1922" pos:column="32">MATCH_NOMATCH<pos:position pos:line="1922" pos:column="45"/></name></expr></argument>)<pos:position pos:line="1922" pos:column="46"/></argument_list></call></expr>;<pos:position pos:line="1922" pos:column="47"/></expr_stmt></block></then></if>
          }<pos:position pos:line="1923" pos:column="12"/></block></for>
        }<pos:position pos:line="1924" pos:column="10"/></block></then>
      <else pos:line="1925" pos:column="7">else
<cpp:endif pos:line="1926" pos:column="1">#<cpp:directive pos:line="1926" pos:column="2">endif<pos:position pos:line="1926" pos:column="7"/></cpp:directive></cpp:endif>
      <comment type="block" pos:line="1927" pos:column="7">/* Not UTF-8 mode */</comment>
        <block pos:line="1928" pos:column="9">{
        <for pos:line="1929" pos:column="9">for <control pos:line="1929" pos:column="13">(<init><expr><name pos:line="1929" pos:column="14">i<pos:position pos:line="1929" pos:column="15"/></name> <operator pos:line="1929" pos:column="16">=<pos:position pos:line="1929" pos:column="17"/></operator> <literal type="number" pos:line="1929" pos:column="18">1<pos:position pos:line="1929" pos:column="19"/></literal></expr>;<pos:position pos:line="1929" pos:column="20"/></init> <condition><expr><name pos:line="1929" pos:column="21">i<pos:position pos:line="1929" pos:column="22"/></name> <operator pos:line="1929" pos:column="23">&lt;=<pos:position pos:line="1929" pos:column="28"/></operator> <name pos:line="1929" pos:column="26">min<pos:position pos:line="1929" pos:column="29"/></name></expr>;<pos:position pos:line="1929" pos:column="30"/></condition> <incr><expr><name pos:line="1929" pos:column="31">i<pos:position pos:line="1929" pos:column="32"/></name><operator pos:line="1929" pos:column="32">++<pos:position pos:line="1929" pos:column="34"/></operator></expr></incr>)<pos:position pos:line="1929" pos:column="35"/></control>
          <block type="pseudo"><if pos:line="1930" pos:column="11">if <condition pos:line="1930" pos:column="14">(<expr><name pos:line="1930" pos:column="15">fc<pos:position pos:line="1930" pos:column="17"/></name> <operator pos:line="1930" pos:column="18">==<pos:position pos:line="1930" pos:column="20"/></operator> <operator pos:line="1930" pos:column="21">*<pos:position pos:line="1930" pos:column="22"/></operator><name pos:line="1930" pos:column="22">eptr<pos:position pos:line="1930" pos:column="26"/></name><operator pos:line="1930" pos:column="26">++<pos:position pos:line="1930" pos:column="28"/></operator></expr>)<pos:position pos:line="1930" pos:column="29"/></condition><then pos:line="1930" pos:column="29"> <block type="pseudo"><expr_stmt><expr><call><name pos:line="1930" pos:column="30">RRETURN<pos:position pos:line="1930" pos:column="37"/></name><argument_list pos:line="1930" pos:column="37">(<argument><expr><name pos:line="1930" pos:column="38">MATCH_NOMATCH<pos:position pos:line="1930" pos:column="51"/></name></expr></argument>)<pos:position pos:line="1930" pos:column="52"/></argument_list></call></expr>;<pos:position pos:line="1930" pos:column="53"/></expr_stmt></block></then></if></block></for>
        }<pos:position pos:line="1931" pos:column="10"/></block></else></if>

      <if pos:line="1933" pos:column="7">if <condition pos:line="1933" pos:column="10">(<expr><name pos:line="1933" pos:column="11">min<pos:position pos:line="1933" pos:column="14"/></name> <operator pos:line="1933" pos:column="15">==<pos:position pos:line="1933" pos:column="17"/></operator> <name pos:line="1933" pos:column="18">max<pos:position pos:line="1933" pos:column="21"/></name></expr>)<pos:position pos:line="1933" pos:column="22"/></condition><then pos:line="1933" pos:column="22"> <block type="pseudo"><continue pos:line="1933" pos:column="23">continue;<pos:position pos:line="1933" pos:column="32"/></continue></block></then></if>

      <if pos:line="1935" pos:column="7">if <condition pos:line="1935" pos:column="10">(<expr><name pos:line="1935" pos:column="11">minimize<pos:position pos:line="1935" pos:column="19"/></name></expr>)<pos:position pos:line="1935" pos:column="20"/></condition><then pos:line="1935" pos:column="20">
        <block pos:line="1936" pos:column="9">{
<cpp:ifdef pos:line="1937" pos:column="1">#<cpp:directive pos:line="1937" pos:column="2">ifdef<pos:position pos:line="1937" pos:column="7"/></cpp:directive> <name pos:line="1937" pos:column="8">SUPPORT_UTF8<pos:position pos:line="1937" pos:column="20"/></name></cpp:ifdef>
        <comment type="block" pos:line="1938" pos:column="9">/* UTF-8 mode */</comment>
        <if pos:line="1939" pos:column="9">if <condition pos:line="1939" pos:column="12">(<expr><name><name pos:line="1939" pos:column="13">md<pos:position pos:line="1939" pos:column="15"/></name><operator pos:line="1939" pos:column="15">-&gt;<pos:position pos:line="1939" pos:column="20"/></operator><name pos:line="1939" pos:column="17">utf8<pos:position pos:line="1939" pos:column="21"/></name></name></expr>)<pos:position pos:line="1939" pos:column="22"/></condition><then pos:line="1939" pos:column="22">
          <block pos:line="1940" pos:column="11">{
          <decl_stmt><decl><type><specifier pos:line="1941" pos:column="11">register<pos:position pos:line="1941" pos:column="19"/></specifier> <name pos:line="1941" pos:column="20">int<pos:position pos:line="1941" pos:column="23"/></name></type> <name pos:line="1941" pos:column="24">d<pos:position pos:line="1941" pos:column="25"/></name></decl>;<pos:position pos:line="1941" pos:column="26"/></decl_stmt>
          <for pos:line="1942" pos:column="11">for <control pos:line="1942" pos:column="15">(<init><expr><name pos:line="1942" pos:column="16">fi<pos:position pos:line="1942" pos:column="18"/></name> <operator pos:line="1942" pos:column="19">=<pos:position pos:line="1942" pos:column="20"/></operator> <name pos:line="1942" pos:column="21">min<pos:position pos:line="1942" pos:column="24"/></name></expr>;<pos:position pos:line="1942" pos:column="25"/></init><condition pos:line="1942" pos:column="25">;<pos:position pos:line="1942" pos:column="26"/></condition> <incr><expr><name pos:line="1942" pos:column="27">fi<pos:position pos:line="1942" pos:column="29"/></name><operator pos:line="1942" pos:column="29">++<pos:position pos:line="1942" pos:column="31"/></operator></expr></incr>)<pos:position pos:line="1942" pos:column="32"/></control>
            <block pos:line="1943" pos:column="13">{
            <expr_stmt><expr><call><name pos:line="1944" pos:column="13">RMATCH<pos:position pos:line="1944" pos:column="19"/></name><argument_list pos:line="1944" pos:column="19">(<argument><expr><name pos:line="1944" pos:column="20">rrc<pos:position pos:line="1944" pos:column="23"/></name></expr></argument>, <argument><expr><name pos:line="1944" pos:column="25">eptr<pos:position pos:line="1944" pos:column="29"/></name></expr></argument>, <argument><expr><name pos:line="1944" pos:column="31">ecode<pos:position pos:line="1944" pos:column="36"/></name></expr></argument>, <argument><expr><name pos:line="1944" pos:column="38">offset_top<pos:position pos:line="1944" pos:column="48"/></name></expr></argument>, <argument><expr><name pos:line="1944" pos:column="50">md<pos:position pos:line="1944" pos:column="52"/></name></expr></argument>, <argument><expr><name pos:line="1944" pos:column="54">ims<pos:position pos:line="1944" pos:column="57"/></name></expr></argument>, <argument><expr><name pos:line="1944" pos:column="59">eptrb<pos:position pos:line="1944" pos:column="64"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="1944" pos:column="66">0<pos:position pos:line="1944" pos:column="67"/></literal></expr></argument>)<pos:position pos:line="1944" pos:column="68"/></argument_list></call></expr>;<pos:position pos:line="1944" pos:column="69"/></expr_stmt>
            <if pos:line="1945" pos:column="13">if <condition pos:line="1945" pos:column="16">(<expr><name pos:line="1945" pos:column="17">rrc<pos:position pos:line="1945" pos:column="20"/></name> <operator pos:line="1945" pos:column="21">!=<pos:position pos:line="1945" pos:column="23"/></operator> <name pos:line="1945" pos:column="24">MATCH_NOMATCH<pos:position pos:line="1945" pos:column="37"/></name></expr>)<pos:position pos:line="1945" pos:column="38"/></condition><then pos:line="1945" pos:column="38"> <block type="pseudo"><expr_stmt><expr><call><name pos:line="1945" pos:column="39">RRETURN<pos:position pos:line="1945" pos:column="46"/></name><argument_list pos:line="1945" pos:column="46">(<argument><expr><name pos:line="1945" pos:column="47">rrc<pos:position pos:line="1945" pos:column="50"/></name></expr></argument>)<pos:position pos:line="1945" pos:column="51"/></argument_list></call></expr>;<pos:position pos:line="1945" pos:column="52"/></expr_stmt></block></then></if>
            <expr_stmt><expr><call><name pos:line="1946" pos:column="13">GETCHARINC<pos:position pos:line="1946" pos:column="23"/></name><argument_list pos:line="1946" pos:column="23">(<argument><expr><name pos:line="1946" pos:column="24">d<pos:position pos:line="1946" pos:column="25"/></name></expr></argument>, <argument><expr><name pos:line="1946" pos:column="27">eptr<pos:position pos:line="1946" pos:column="31"/></name></expr></argument>)<pos:position pos:line="1946" pos:column="32"/></argument_list></call></expr>;<pos:position pos:line="1946" pos:column="33"/></expr_stmt>
            <if pos:line="1947" pos:column="13">if <condition pos:line="1947" pos:column="16">(<expr><name pos:line="1947" pos:column="17">fi<pos:position pos:line="1947" pos:column="19"/></name> <operator pos:line="1947" pos:column="20">&gt;=<pos:position pos:line="1947" pos:column="25"/></operator> <name pos:line="1947" pos:column="23">max<pos:position pos:line="1947" pos:column="26"/></name> <operator pos:line="1947" pos:column="27">||<pos:position pos:line="1947" pos:column="29"/></operator> <name pos:line="1947" pos:column="30">eptr<pos:position pos:line="1947" pos:column="34"/></name> <operator pos:line="1947" pos:column="35">&gt;=<pos:position pos:line="1947" pos:column="40"/></operator> <name><name pos:line="1947" pos:column="38">md<pos:position pos:line="1947" pos:column="40"/></name><operator pos:line="1947" pos:column="40">-&gt;<pos:position pos:line="1947" pos:column="45"/></operator><name pos:line="1947" pos:column="42">end_subject<pos:position pos:line="1947" pos:column="53"/></name></name> <operator pos:line="1947" pos:column="54">||<pos:position pos:line="1947" pos:column="56"/></operator> <name pos:line="1947" pos:column="57">fc<pos:position pos:line="1947" pos:column="59"/></name> <operator pos:line="1947" pos:column="60">==<pos:position pos:line="1947" pos:column="62"/></operator> <name pos:line="1947" pos:column="63">d<pos:position pos:line="1947" pos:column="64"/></name></expr>)<pos:position pos:line="1947" pos:column="65"/></condition><then pos:line="1947" pos:column="65">
              <block type="pseudo"><expr_stmt><expr><call><name pos:line="1948" pos:column="15">RRETURN<pos:position pos:line="1948" pos:column="22"/></name><argument_list pos:line="1948" pos:column="22">(<argument><expr><name pos:line="1948" pos:column="23">MATCH_NOMATCH<pos:position pos:line="1948" pos:column="36"/></name></expr></argument>)<pos:position pos:line="1948" pos:column="37"/></argument_list></call></expr>;<pos:position pos:line="1948" pos:column="38"/></expr_stmt></block></then></if>
            }<pos:position pos:line="1949" pos:column="14"/></block></for>
          }<pos:position pos:line="1950" pos:column="12"/></block></then>
        <else pos:line="1951" pos:column="9">else
<cpp:endif pos:line="1952" pos:column="1">#<cpp:directive pos:line="1952" pos:column="2">endif<pos:position pos:line="1952" pos:column="7"/></cpp:directive></cpp:endif>
        <comment type="block" pos:line="1953" pos:column="9">/* Not UTF-8 mode */</comment>
          <block pos:line="1954" pos:column="11">{
          <for pos:line="1955" pos:column="11">for <control pos:line="1955" pos:column="15">(<init><expr><name pos:line="1955" pos:column="16">fi<pos:position pos:line="1955" pos:column="18"/></name> <operator pos:line="1955" pos:column="19">=<pos:position pos:line="1955" pos:column="20"/></operator> <name pos:line="1955" pos:column="21">min<pos:position pos:line="1955" pos:column="24"/></name></expr>;<pos:position pos:line="1955" pos:column="25"/></init><condition pos:line="1955" pos:column="25">;<pos:position pos:line="1955" pos:column="26"/></condition> <incr><expr><name pos:line="1955" pos:column="27">fi<pos:position pos:line="1955" pos:column="29"/></name><operator pos:line="1955" pos:column="29">++<pos:position pos:line="1955" pos:column="31"/></operator></expr></incr>)<pos:position pos:line="1955" pos:column="32"/></control>
            <block pos:line="1956" pos:column="13">{
            <expr_stmt><expr><call><name pos:line="1957" pos:column="13">RMATCH<pos:position pos:line="1957" pos:column="19"/></name><argument_list pos:line="1957" pos:column="19">(<argument><expr><name pos:line="1957" pos:column="20">rrc<pos:position pos:line="1957" pos:column="23"/></name></expr></argument>, <argument><expr><name pos:line="1957" pos:column="25">eptr<pos:position pos:line="1957" pos:column="29"/></name></expr></argument>, <argument><expr><name pos:line="1957" pos:column="31">ecode<pos:position pos:line="1957" pos:column="36"/></name></expr></argument>, <argument><expr><name pos:line="1957" pos:column="38">offset_top<pos:position pos:line="1957" pos:column="48"/></name></expr></argument>, <argument><expr><name pos:line="1957" pos:column="50">md<pos:position pos:line="1957" pos:column="52"/></name></expr></argument>, <argument><expr><name pos:line="1957" pos:column="54">ims<pos:position pos:line="1957" pos:column="57"/></name></expr></argument>, <argument><expr><name pos:line="1957" pos:column="59">eptrb<pos:position pos:line="1957" pos:column="64"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="1957" pos:column="66">0<pos:position pos:line="1957" pos:column="67"/></literal></expr></argument>)<pos:position pos:line="1957" pos:column="68"/></argument_list></call></expr>;<pos:position pos:line="1957" pos:column="69"/></expr_stmt>
            <if pos:line="1958" pos:column="13">if <condition pos:line="1958" pos:column="16">(<expr><name pos:line="1958" pos:column="17">rrc<pos:position pos:line="1958" pos:column="20"/></name> <operator pos:line="1958" pos:column="21">!=<pos:position pos:line="1958" pos:column="23"/></operator> <name pos:line="1958" pos:column="24">MATCH_NOMATCH<pos:position pos:line="1958" pos:column="37"/></name></expr>)<pos:position pos:line="1958" pos:column="38"/></condition><then pos:line="1958" pos:column="38"> <block type="pseudo"><expr_stmt><expr><call><name pos:line="1958" pos:column="39">RRETURN<pos:position pos:line="1958" pos:column="46"/></name><argument_list pos:line="1958" pos:column="46">(<argument><expr><name pos:line="1958" pos:column="47">rrc<pos:position pos:line="1958" pos:column="50"/></name></expr></argument>)<pos:position pos:line="1958" pos:column="51"/></argument_list></call></expr>;<pos:position pos:line="1958" pos:column="52"/></expr_stmt></block></then></if>
            <if pos:line="1959" pos:column="13">if <condition pos:line="1959" pos:column="16">(<expr><name pos:line="1959" pos:column="17">fi<pos:position pos:line="1959" pos:column="19"/></name> <operator pos:line="1959" pos:column="20">&gt;=<pos:position pos:line="1959" pos:column="25"/></operator> <name pos:line="1959" pos:column="23">max<pos:position pos:line="1959" pos:column="26"/></name> <operator pos:line="1959" pos:column="27">||<pos:position pos:line="1959" pos:column="29"/></operator> <name pos:line="1959" pos:column="30">eptr<pos:position pos:line="1959" pos:column="34"/></name> <operator pos:line="1959" pos:column="35">&gt;=<pos:position pos:line="1959" pos:column="40"/></operator> <name><name pos:line="1959" pos:column="38">md<pos:position pos:line="1959" pos:column="40"/></name><operator pos:line="1959" pos:column="40">-&gt;<pos:position pos:line="1959" pos:column="45"/></operator><name pos:line="1959" pos:column="42">end_subject<pos:position pos:line="1959" pos:column="53"/></name></name> <operator pos:line="1959" pos:column="54">||<pos:position pos:line="1959" pos:column="56"/></operator> <name pos:line="1959" pos:column="57">fc<pos:position pos:line="1959" pos:column="59"/></name> <operator pos:line="1959" pos:column="60">==<pos:position pos:line="1959" pos:column="62"/></operator> <operator pos:line="1959" pos:column="63">*<pos:position pos:line="1959" pos:column="64"/></operator><name pos:line="1959" pos:column="64">eptr<pos:position pos:line="1959" pos:column="68"/></name><operator pos:line="1959" pos:column="68">++<pos:position pos:line="1959" pos:column="70"/></operator></expr>)<pos:position pos:line="1959" pos:column="71"/></condition><then pos:line="1959" pos:column="71">
              <block type="pseudo"><expr_stmt><expr><call><name pos:line="1960" pos:column="15">RRETURN<pos:position pos:line="1960" pos:column="22"/></name><argument_list pos:line="1960" pos:column="22">(<argument><expr><name pos:line="1960" pos:column="23">MATCH_NOMATCH<pos:position pos:line="1960" pos:column="36"/></name></expr></argument>)<pos:position pos:line="1960" pos:column="37"/></argument_list></call></expr>;<pos:position pos:line="1960" pos:column="38"/></expr_stmt></block></then></if>
            }<pos:position pos:line="1961" pos:column="14"/></block></for>
          }<pos:position pos:line="1962" pos:column="12"/></block></else></if>
        <comment type="block" pos:line="1963" pos:column="9">/* Control never gets here */</comment>
        }<pos:position pos:line="1964" pos:column="10"/></block></then>

      <comment type="block" pos:line="1966" pos:column="7">/* Maximize case */</comment>

      <else pos:line="1968" pos:column="7">else
        <block pos:line="1969" pos:column="9">{
        <expr_stmt><expr><name pos:line="1970" pos:column="9">pp<pos:position pos:line="1970" pos:column="11"/></name> <operator pos:line="1970" pos:column="12">=<pos:position pos:line="1970" pos:column="13"/></operator> <name pos:line="1970" pos:column="14">eptr<pos:position pos:line="1970" pos:column="18"/></name></expr>;<pos:position pos:line="1970" pos:column="19"/></expr_stmt>

<cpp:ifdef pos:line="1972" pos:column="1">#<cpp:directive pos:line="1972" pos:column="2">ifdef<pos:position pos:line="1972" pos:column="7"/></cpp:directive> <name pos:line="1972" pos:column="8">SUPPORT_UTF8<pos:position pos:line="1972" pos:column="20"/></name></cpp:ifdef>
        <comment type="block" pos:line="1973" pos:column="9">/* UTF-8 mode */</comment>
        <if pos:line="1974" pos:column="9">if <condition pos:line="1974" pos:column="12">(<expr><name><name pos:line="1974" pos:column="13">md<pos:position pos:line="1974" pos:column="15"/></name><operator pos:line="1974" pos:column="15">-&gt;<pos:position pos:line="1974" pos:column="20"/></operator><name pos:line="1974" pos:column="17">utf8<pos:position pos:line="1974" pos:column="21"/></name></name></expr>)<pos:position pos:line="1974" pos:column="22"/></condition><then pos:line="1974" pos:column="22">
          <block pos:line="1975" pos:column="11">{
          <decl_stmt><decl><type><specifier pos:line="1976" pos:column="11">register<pos:position pos:line="1976" pos:column="19"/></specifier> <name pos:line="1976" pos:column="20">int<pos:position pos:line="1976" pos:column="23"/></name></type> <name pos:line="1976" pos:column="24">d<pos:position pos:line="1976" pos:column="25"/></name></decl>;<pos:position pos:line="1976" pos:column="26"/></decl_stmt>
          <for pos:line="1977" pos:column="11">for <control pos:line="1977" pos:column="15">(<init><expr><name pos:line="1977" pos:column="16">i<pos:position pos:line="1977" pos:column="17"/></name> <operator pos:line="1977" pos:column="18">=<pos:position pos:line="1977" pos:column="19"/></operator> <name pos:line="1977" pos:column="20">min<pos:position pos:line="1977" pos:column="23"/></name></expr>;<pos:position pos:line="1977" pos:column="24"/></init> <condition><expr><name pos:line="1977" pos:column="25">i<pos:position pos:line="1977" pos:column="26"/></name> <operator pos:line="1977" pos:column="27">&lt;<pos:position pos:line="1977" pos:column="31"/></operator> <name pos:line="1977" pos:column="29">max<pos:position pos:line="1977" pos:column="32"/></name></expr>;<pos:position pos:line="1977" pos:column="33"/></condition> <incr><expr><name pos:line="1977" pos:column="34">i<pos:position pos:line="1977" pos:column="35"/></name><operator pos:line="1977" pos:column="35">++<pos:position pos:line="1977" pos:column="37"/></operator></expr></incr>)<pos:position pos:line="1977" pos:column="38"/></control>
            <block pos:line="1978" pos:column="13">{
            <decl_stmt><decl><type><name pos:line="1979" pos:column="13">int<pos:position pos:line="1979" pos:column="16"/></name></type> <name pos:line="1979" pos:column="17">len<pos:position pos:line="1979" pos:column="20"/></name> <init pos:line="1979" pos:column="21">= <expr><literal type="number" pos:line="1979" pos:column="23">1<pos:position pos:line="1979" pos:column="24"/></literal></expr></init></decl>;<pos:position pos:line="1979" pos:column="25"/></decl_stmt>
            <if pos:line="1980" pos:column="13">if <condition pos:line="1980" pos:column="16">(<expr><name pos:line="1980" pos:column="17">eptr<pos:position pos:line="1980" pos:column="21"/></name> <operator pos:line="1980" pos:column="22">&gt;=<pos:position pos:line="1980" pos:column="27"/></operator> <name><name pos:line="1980" pos:column="25">md<pos:position pos:line="1980" pos:column="27"/></name><operator pos:line="1980" pos:column="27">-&gt;<pos:position pos:line="1980" pos:column="32"/></operator><name pos:line="1980" pos:column="29">end_subject<pos:position pos:line="1980" pos:column="40"/></name></name></expr>)<pos:position pos:line="1980" pos:column="41"/></condition><then pos:line="1980" pos:column="41"> <block type="pseudo"><break pos:line="1980" pos:column="42">break;<pos:position pos:line="1980" pos:column="48"/></break></block></then></if>
            <expr_stmt><expr><call><name pos:line="1981" pos:column="13">GETCHARLEN<pos:position pos:line="1981" pos:column="23"/></name><argument_list pos:line="1981" pos:column="23">(<argument><expr><name pos:line="1981" pos:column="24">d<pos:position pos:line="1981" pos:column="25"/></name></expr></argument>, <argument><expr><name pos:line="1981" pos:column="27">eptr<pos:position pos:line="1981" pos:column="31"/></name></expr></argument>, <argument><expr><name pos:line="1981" pos:column="33">len<pos:position pos:line="1981" pos:column="36"/></name></expr></argument>)<pos:position pos:line="1981" pos:column="37"/></argument_list></call></expr>;<pos:position pos:line="1981" pos:column="38"/></expr_stmt>
            <if pos:line="1982" pos:column="13">if <condition pos:line="1982" pos:column="16">(<expr><name pos:line="1982" pos:column="17">fc<pos:position pos:line="1982" pos:column="19"/></name> <operator pos:line="1982" pos:column="20">==<pos:position pos:line="1982" pos:column="22"/></operator> <name pos:line="1982" pos:column="23">d<pos:position pos:line="1982" pos:column="24"/></name></expr>)<pos:position pos:line="1982" pos:column="25"/></condition><then pos:line="1982" pos:column="25"> <block type="pseudo"><break pos:line="1982" pos:column="26">break;<pos:position pos:line="1982" pos:column="32"/></break></block></then></if>
            <expr_stmt><expr><name pos:line="1983" pos:column="13">eptr<pos:position pos:line="1983" pos:column="17"/></name> <operator pos:line="1983" pos:column="18">+=<pos:position pos:line="1983" pos:column="20"/></operator> <name pos:line="1983" pos:column="21">len<pos:position pos:line="1983" pos:column="24"/></name></expr>;<pos:position pos:line="1983" pos:column="25"/></expr_stmt>
            }<pos:position pos:line="1984" pos:column="14"/></block></for>
          <for pos:line="1985" pos:column="11">for<control pos:line="1985" pos:column="14">(<init pos:line="1985" pos:column="15">;<pos:position pos:line="1985" pos:column="16"/></init><condition pos:line="1985" pos:column="16">;<pos:position pos:line="1985" pos:column="17"/></condition><incr/>)<pos:position pos:line="1985" pos:column="18"/></control>
            <block pos:line="1986" pos:column="13">{
            <expr_stmt><expr><call><name pos:line="1987" pos:column="13">RMATCH<pos:position pos:line="1987" pos:column="19"/></name><argument_list pos:line="1987" pos:column="19">(<argument><expr><name pos:line="1987" pos:column="20">rrc<pos:position pos:line="1987" pos:column="23"/></name></expr></argument>, <argument><expr><name pos:line="1987" pos:column="25">eptr<pos:position pos:line="1987" pos:column="29"/></name></expr></argument>, <argument><expr><name pos:line="1987" pos:column="31">ecode<pos:position pos:line="1987" pos:column="36"/></name></expr></argument>, <argument><expr><name pos:line="1987" pos:column="38">offset_top<pos:position pos:line="1987" pos:column="48"/></name></expr></argument>, <argument><expr><name pos:line="1987" pos:column="50">md<pos:position pos:line="1987" pos:column="52"/></name></expr></argument>, <argument><expr><name pos:line="1987" pos:column="54">ims<pos:position pos:line="1987" pos:column="57"/></name></expr></argument>, <argument><expr><name pos:line="1987" pos:column="59">eptrb<pos:position pos:line="1987" pos:column="64"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="1987" pos:column="66">0<pos:position pos:line="1987" pos:column="67"/></literal></expr></argument>)<pos:position pos:line="1987" pos:column="68"/></argument_list></call></expr>;<pos:position pos:line="1987" pos:column="69"/></expr_stmt>
            <if pos:line="1988" pos:column="13">if <condition pos:line="1988" pos:column="16">(<expr><name pos:line="1988" pos:column="17">rrc<pos:position pos:line="1988" pos:column="20"/></name> <operator pos:line="1988" pos:column="21">!=<pos:position pos:line="1988" pos:column="23"/></operator> <name pos:line="1988" pos:column="24">MATCH_NOMATCH<pos:position pos:line="1988" pos:column="37"/></name></expr>)<pos:position pos:line="1988" pos:column="38"/></condition><then pos:line="1988" pos:column="38"> <block type="pseudo"><expr_stmt><expr><call><name pos:line="1988" pos:column="39">RRETURN<pos:position pos:line="1988" pos:column="46"/></name><argument_list pos:line="1988" pos:column="46">(<argument><expr><name pos:line="1988" pos:column="47">rrc<pos:position pos:line="1988" pos:column="50"/></name></expr></argument>)<pos:position pos:line="1988" pos:column="51"/></argument_list></call></expr>;<pos:position pos:line="1988" pos:column="52"/></expr_stmt></block></then></if>
            <if pos:line="1989" pos:column="13">if <condition pos:line="1989" pos:column="16">(<expr><name pos:line="1989" pos:column="17">eptr<pos:position pos:line="1989" pos:column="21"/></name><operator pos:line="1989" pos:column="21">--<pos:position pos:line="1989" pos:column="23"/></operator> <operator pos:line="1989" pos:column="24">==<pos:position pos:line="1989" pos:column="26"/></operator> <name pos:line="1989" pos:column="27">pp<pos:position pos:line="1989" pos:column="29"/></name></expr>)<pos:position pos:line="1989" pos:column="30"/></condition><then pos:line="1989" pos:column="30"> <block type="pseudo"><break pos:line="1989" pos:column="31">break;<pos:position pos:line="1989" pos:column="37"/></break></block></then></if>        <comment type="block" pos:line="1989" pos:column="45">/* Stop if tried at original pos */</comment>
            <expr_stmt><expr><call><name pos:line="1990" pos:column="13">BACKCHAR<pos:position pos:line="1990" pos:column="21"/></name><argument_list pos:line="1990" pos:column="21">(<argument><expr><name pos:line="1990" pos:column="22">eptr<pos:position pos:line="1990" pos:column="26"/></name></expr></argument>)<pos:position pos:line="1990" pos:column="27"/></argument_list></call></expr>;<pos:position pos:line="1990" pos:column="28"/></expr_stmt>
            }<pos:position pos:line="1991" pos:column="14"/></block></for>
          }<pos:position pos:line="1992" pos:column="12"/></block></then>
        <else pos:line="1993" pos:column="9">else
<cpp:endif pos:line="1994" pos:column="1">#<cpp:directive pos:line="1994" pos:column="2">endif<pos:position pos:line="1994" pos:column="7"/></cpp:directive></cpp:endif>
        <comment type="block" pos:line="1995" pos:column="9">/* Not UTF-8 mode */</comment>
          <block pos:line="1996" pos:column="11">{
          <for pos:line="1997" pos:column="11">for <control pos:line="1997" pos:column="15">(<init><expr><name pos:line="1997" pos:column="16">i<pos:position pos:line="1997" pos:column="17"/></name> <operator pos:line="1997" pos:column="18">=<pos:position pos:line="1997" pos:column="19"/></operator> <name pos:line="1997" pos:column="20">min<pos:position pos:line="1997" pos:column="23"/></name></expr>;<pos:position pos:line="1997" pos:column="24"/></init> <condition><expr><name pos:line="1997" pos:column="25">i<pos:position pos:line="1997" pos:column="26"/></name> <operator pos:line="1997" pos:column="27">&lt;<pos:position pos:line="1997" pos:column="31"/></operator> <name pos:line="1997" pos:column="29">max<pos:position pos:line="1997" pos:column="32"/></name></expr>;<pos:position pos:line="1997" pos:column="33"/></condition> <incr><expr><name pos:line="1997" pos:column="34">i<pos:position pos:line="1997" pos:column="35"/></name><operator pos:line="1997" pos:column="35">++<pos:position pos:line="1997" pos:column="37"/></operator></expr></incr>)<pos:position pos:line="1997" pos:column="38"/></control>
            <block pos:line="1998" pos:column="13">{
            <if pos:line="1999" pos:column="13">if <condition pos:line="1999" pos:column="16">(<expr><name pos:line="1999" pos:column="17">eptr<pos:position pos:line="1999" pos:column="21"/></name> <operator pos:line="1999" pos:column="22">&gt;=<pos:position pos:line="1999" pos:column="27"/></operator> <name><name pos:line="1999" pos:column="25">md<pos:position pos:line="1999" pos:column="27"/></name><operator pos:line="1999" pos:column="27">-&gt;<pos:position pos:line="1999" pos:column="32"/></operator><name pos:line="1999" pos:column="29">end_subject<pos:position pos:line="1999" pos:column="40"/></name></name> <operator pos:line="1999" pos:column="41">||<pos:position pos:line="1999" pos:column="43"/></operator> <name pos:line="1999" pos:column="44">fc<pos:position pos:line="1999" pos:column="46"/></name> <operator pos:line="1999" pos:column="47">==<pos:position pos:line="1999" pos:column="49"/></operator> <operator pos:line="1999" pos:column="50">*<pos:position pos:line="1999" pos:column="51"/></operator><name pos:line="1999" pos:column="51">eptr<pos:position pos:line="1999" pos:column="55"/></name></expr>)<pos:position pos:line="1999" pos:column="56"/></condition><then pos:line="1999" pos:column="56"> <block type="pseudo"><break pos:line="1999" pos:column="57">break;<pos:position pos:line="1999" pos:column="63"/></break></block></then></if>
            <expr_stmt><expr><name pos:line="2000" pos:column="13">eptr<pos:position pos:line="2000" pos:column="17"/></name><operator pos:line="2000" pos:column="17">++<pos:position pos:line="2000" pos:column="19"/></operator></expr>;<pos:position pos:line="2000" pos:column="20"/></expr_stmt>
            }<pos:position pos:line="2001" pos:column="14"/></block></for>
          <while pos:line="2002" pos:column="11">while <condition pos:line="2002" pos:column="17">(<expr><name pos:line="2002" pos:column="18">eptr<pos:position pos:line="2002" pos:column="22"/></name> <operator pos:line="2002" pos:column="23">&gt;=<pos:position pos:line="2002" pos:column="28"/></operator> <name pos:line="2002" pos:column="26">pp<pos:position pos:line="2002" pos:column="28"/></name></expr>)<pos:position pos:line="2002" pos:column="29"/></condition>
            <block pos:line="2003" pos:column="13">{
            <expr_stmt><expr><call><name pos:line="2004" pos:column="13">RMATCH<pos:position pos:line="2004" pos:column="19"/></name><argument_list pos:line="2004" pos:column="19">(<argument><expr><name pos:line="2004" pos:column="20">rrc<pos:position pos:line="2004" pos:column="23"/></name></expr></argument>, <argument><expr><name pos:line="2004" pos:column="25">eptr<pos:position pos:line="2004" pos:column="29"/></name></expr></argument>, <argument><expr><name pos:line="2004" pos:column="31">ecode<pos:position pos:line="2004" pos:column="36"/></name></expr></argument>, <argument><expr><name pos:line="2004" pos:column="38">offset_top<pos:position pos:line="2004" pos:column="48"/></name></expr></argument>, <argument><expr><name pos:line="2004" pos:column="50">md<pos:position pos:line="2004" pos:column="52"/></name></expr></argument>, <argument><expr><name pos:line="2004" pos:column="54">ims<pos:position pos:line="2004" pos:column="57"/></name></expr></argument>, <argument><expr><name pos:line="2004" pos:column="59">eptrb<pos:position pos:line="2004" pos:column="64"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="2004" pos:column="66">0<pos:position pos:line="2004" pos:column="67"/></literal></expr></argument>)<pos:position pos:line="2004" pos:column="68"/></argument_list></call></expr>;<pos:position pos:line="2004" pos:column="69"/></expr_stmt>
            <if pos:line="2005" pos:column="13">if <condition pos:line="2005" pos:column="16">(<expr><name pos:line="2005" pos:column="17">rrc<pos:position pos:line="2005" pos:column="20"/></name> <operator pos:line="2005" pos:column="21">!=<pos:position pos:line="2005" pos:column="23"/></operator> <name pos:line="2005" pos:column="24">MATCH_NOMATCH<pos:position pos:line="2005" pos:column="37"/></name></expr>)<pos:position pos:line="2005" pos:column="38"/></condition><then pos:line="2005" pos:column="38"> <block type="pseudo"><expr_stmt><expr><call><name pos:line="2005" pos:column="39">RRETURN<pos:position pos:line="2005" pos:column="46"/></name><argument_list pos:line="2005" pos:column="46">(<argument><expr><name pos:line="2005" pos:column="47">rrc<pos:position pos:line="2005" pos:column="50"/></name></expr></argument>)<pos:position pos:line="2005" pos:column="51"/></argument_list></call></expr>;<pos:position pos:line="2005" pos:column="52"/></expr_stmt></block></then></if>
            <expr_stmt><expr><name pos:line="2006" pos:column="13">eptr<pos:position pos:line="2006" pos:column="17"/></name><operator pos:line="2006" pos:column="17">--<pos:position pos:line="2006" pos:column="19"/></operator></expr>;<pos:position pos:line="2006" pos:column="20"/></expr_stmt>
            }<pos:position pos:line="2007" pos:column="14"/></block></while>
          }<pos:position pos:line="2008" pos:column="12"/></block></else></if>

        <expr_stmt><expr><call><name pos:line="2010" pos:column="9">RRETURN<pos:position pos:line="2010" pos:column="16"/></name><argument_list pos:line="2010" pos:column="16">(<argument><expr><name pos:line="2010" pos:column="17">MATCH_NOMATCH<pos:position pos:line="2010" pos:column="30"/></name></expr></argument>)<pos:position pos:line="2010" pos:column="31"/></argument_list></call></expr>;<pos:position pos:line="2010" pos:column="32"/></expr_stmt>
        }<pos:position pos:line="2011" pos:column="10"/></block></else></if>
      }<pos:position pos:line="2012" pos:column="8"/></block></else></if>
    <comment type="block" pos:line="2013" pos:column="5">/* Control never gets here */</comment>

    <comment type="block" pos:line="2015" pos:column="5">/* Match a single character type repeatedly; several different opcodes
    share code. This is very similar to the code for single characters, but we
    repeat it in the interests of efficiency. */</comment>

    <case pos:line="2019" pos:column="5">case <expr><name pos:line="2019" pos:column="10">OP_TYPEEXACT<pos:position pos:line="2019" pos:column="22"/></name></expr>:<pos:position pos:line="2019" pos:column="23"/></case>
    <expr_stmt><expr><name pos:line="2020" pos:column="5">min<pos:position pos:line="2020" pos:column="8"/></name> <operator pos:line="2020" pos:column="9">=<pos:position pos:line="2020" pos:column="10"/></operator> <name pos:line="2020" pos:column="11">max<pos:position pos:line="2020" pos:column="14"/></name> <operator pos:line="2020" pos:column="15">=<pos:position pos:line="2020" pos:column="16"/></operator> <call><name pos:line="2020" pos:column="17">GET2<pos:position pos:line="2020" pos:column="21"/></name><argument_list pos:line="2020" pos:column="21">(<argument><expr><name pos:line="2020" pos:column="22">ecode<pos:position pos:line="2020" pos:column="27"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="2020" pos:column="29">1<pos:position pos:line="2020" pos:column="30"/></literal></expr></argument>)<pos:position pos:line="2020" pos:column="31"/></argument_list></call></expr>;<pos:position pos:line="2020" pos:column="32"/></expr_stmt>
    <expr_stmt><expr><name pos:line="2021" pos:column="5">minimize<pos:position pos:line="2021" pos:column="13"/></name> <operator pos:line="2021" pos:column="14">=<pos:position pos:line="2021" pos:column="15"/></operator> <name pos:line="2021" pos:column="16">TRUE<pos:position pos:line="2021" pos:column="20"/></name></expr>;<pos:position pos:line="2021" pos:column="21"/></expr_stmt>
    <expr_stmt><expr><name pos:line="2022" pos:column="5">ecode<pos:position pos:line="2022" pos:column="10"/></name> <operator pos:line="2022" pos:column="11">+=<pos:position pos:line="2022" pos:column="13"/></operator> <literal type="number" pos:line="2022" pos:column="14">3<pos:position pos:line="2022" pos:column="15"/></literal></expr>;<pos:position pos:line="2022" pos:column="16"/></expr_stmt>
    <goto pos:line="2023" pos:column="5">goto <name pos:line="2023" pos:column="10">REPEATTYPE<pos:position pos:line="2023" pos:column="20"/></name>;<pos:position pos:line="2023" pos:column="21"/></goto>

    <case pos:line="2025" pos:column="5">case <expr><name pos:line="2025" pos:column="10">OP_TYPEUPTO<pos:position pos:line="2025" pos:column="21"/></name></expr>:<pos:position pos:line="2025" pos:column="22"/></case>
    <case pos:line="2026" pos:column="5">case <expr><name pos:line="2026" pos:column="10">OP_TYPEMINUPTO<pos:position pos:line="2026" pos:column="24"/></name></expr>:<pos:position pos:line="2026" pos:column="25"/></case>
    <expr_stmt><expr><name pos:line="2027" pos:column="5">min<pos:position pos:line="2027" pos:column="8"/></name> <operator pos:line="2027" pos:column="9">=<pos:position pos:line="2027" pos:column="10"/></operator> <literal type="number" pos:line="2027" pos:column="11">0<pos:position pos:line="2027" pos:column="12"/></literal></expr>;<pos:position pos:line="2027" pos:column="13"/></expr_stmt>
    <expr_stmt><expr><name pos:line="2028" pos:column="5">max<pos:position pos:line="2028" pos:column="8"/></name> <operator pos:line="2028" pos:column="9">=<pos:position pos:line="2028" pos:column="10"/></operator> <call><name pos:line="2028" pos:column="11">GET2<pos:position pos:line="2028" pos:column="15"/></name><argument_list pos:line="2028" pos:column="15">(<argument><expr><name pos:line="2028" pos:column="16">ecode<pos:position pos:line="2028" pos:column="21"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="2028" pos:column="23">1<pos:position pos:line="2028" pos:column="24"/></literal></expr></argument>)<pos:position pos:line="2028" pos:column="25"/></argument_list></call></expr>;<pos:position pos:line="2028" pos:column="26"/></expr_stmt>
    <expr_stmt><expr><name pos:line="2029" pos:column="5">minimize<pos:position pos:line="2029" pos:column="13"/></name> <operator pos:line="2029" pos:column="14">=<pos:position pos:line="2029" pos:column="15"/></operator> <operator pos:line="2029" pos:column="16">*<pos:position pos:line="2029" pos:column="17"/></operator><name pos:line="2029" pos:column="17">ecode<pos:position pos:line="2029" pos:column="22"/></name> <operator pos:line="2029" pos:column="23">==<pos:position pos:line="2029" pos:column="25"/></operator> <name pos:line="2029" pos:column="26">OP_TYPEMINUPTO<pos:position pos:line="2029" pos:column="40"/></name></expr>;<pos:position pos:line="2029" pos:column="41"/></expr_stmt>
    <expr_stmt><expr><name pos:line="2030" pos:column="5">ecode<pos:position pos:line="2030" pos:column="10"/></name> <operator pos:line="2030" pos:column="11">+=<pos:position pos:line="2030" pos:column="13"/></operator> <literal type="number" pos:line="2030" pos:column="14">3<pos:position pos:line="2030" pos:column="15"/></literal></expr>;<pos:position pos:line="2030" pos:column="16"/></expr_stmt>
    <goto pos:line="2031" pos:column="5">goto <name pos:line="2031" pos:column="10">REPEATTYPE<pos:position pos:line="2031" pos:column="20"/></name>;<pos:position pos:line="2031" pos:column="21"/></goto>

    <case pos:line="2033" pos:column="5">case <expr><name pos:line="2033" pos:column="10">OP_TYPESTAR<pos:position pos:line="2033" pos:column="21"/></name></expr>:<pos:position pos:line="2033" pos:column="22"/></case>
    <case pos:line="2034" pos:column="5">case <expr><name pos:line="2034" pos:column="10">OP_TYPEMINSTAR<pos:position pos:line="2034" pos:column="24"/></name></expr>:<pos:position pos:line="2034" pos:column="25"/></case>
    <case pos:line="2035" pos:column="5">case <expr><name pos:line="2035" pos:column="10">OP_TYPEPLUS<pos:position pos:line="2035" pos:column="21"/></name></expr>:<pos:position pos:line="2035" pos:column="22"/></case>
    <case pos:line="2036" pos:column="5">case <expr><name pos:line="2036" pos:column="10">OP_TYPEMINPLUS<pos:position pos:line="2036" pos:column="24"/></name></expr>:<pos:position pos:line="2036" pos:column="25"/></case>
    <case pos:line="2037" pos:column="5">case <expr><name pos:line="2037" pos:column="10">OP_TYPEQUERY<pos:position pos:line="2037" pos:column="22"/></name></expr>:<pos:position pos:line="2037" pos:column="23"/></case>
    <case pos:line="2038" pos:column="5">case <expr><name pos:line="2038" pos:column="10">OP_TYPEMINQUERY<pos:position pos:line="2038" pos:column="25"/></name></expr>:<pos:position pos:line="2038" pos:column="26"/></case>
    <expr_stmt><expr><name pos:line="2039" pos:column="5">c<pos:position pos:line="2039" pos:column="6"/></name> <operator pos:line="2039" pos:column="7">=<pos:position pos:line="2039" pos:column="8"/></operator> <operator pos:line="2039" pos:column="9">*<pos:position pos:line="2039" pos:column="10"/></operator><name pos:line="2039" pos:column="10">ecode<pos:position pos:line="2039" pos:column="15"/></name><operator pos:line="2039" pos:column="15">++<pos:position pos:line="2039" pos:column="17"/></operator> <operator pos:line="2039" pos:column="18">-<pos:position pos:line="2039" pos:column="19"/></operator> <name pos:line="2039" pos:column="20">OP_TYPESTAR<pos:position pos:line="2039" pos:column="31"/></name></expr>;<pos:position pos:line="2039" pos:column="32"/></expr_stmt>
    <expr_stmt><expr><name pos:line="2040" pos:column="5">minimize<pos:position pos:line="2040" pos:column="13"/></name> <operator pos:line="2040" pos:column="14">=<pos:position pos:line="2040" pos:column="15"/></operator> <operator pos:line="2040" pos:column="16">(<pos:position pos:line="2040" pos:column="17"/></operator><name pos:line="2040" pos:column="17">c<pos:position pos:line="2040" pos:column="18"/></name> <operator pos:line="2040" pos:column="19">&amp;<pos:position pos:line="2040" pos:column="24"/></operator> <literal type="number" pos:line="2040" pos:column="21">1<pos:position pos:line="2040" pos:column="22"/></literal><operator pos:line="2040" pos:column="22">)<pos:position pos:line="2040" pos:column="23"/></operator> <operator pos:line="2040" pos:column="24">!=<pos:position pos:line="2040" pos:column="26"/></operator> <literal type="number" pos:line="2040" pos:column="27">0<pos:position pos:line="2040" pos:column="28"/></literal></expr>;<pos:position pos:line="2040" pos:column="29"/></expr_stmt>
    <expr_stmt><expr><name pos:line="2041" pos:column="5">min<pos:position pos:line="2041" pos:column="8"/></name> <operator pos:line="2041" pos:column="9">=<pos:position pos:line="2041" pos:column="10"/></operator> <name><name pos:line="2041" pos:column="11">rep_min<pos:position pos:line="2041" pos:column="18"/></name><index pos:line="2041" pos:column="18">[<expr><name pos:line="2041" pos:column="19">c<pos:position pos:line="2041" pos:column="20"/></name></expr>]<pos:position pos:line="2041" pos:column="21"/></index></name></expr>;<pos:position pos:line="2041" pos:column="22"/></expr_stmt>                 <comment type="block" pos:line="2041" pos:column="39">/* Pick up values from tables; */</comment>
    <expr_stmt><expr><name pos:line="2042" pos:column="5">max<pos:position pos:line="2042" pos:column="8"/></name> <operator pos:line="2042" pos:column="9">=<pos:position pos:line="2042" pos:column="10"/></operator> <name><name pos:line="2042" pos:column="11">rep_max<pos:position pos:line="2042" pos:column="18"/></name><index pos:line="2042" pos:column="18">[<expr><name pos:line="2042" pos:column="19">c<pos:position pos:line="2042" pos:column="20"/></name></expr>]<pos:position pos:line="2042" pos:column="21"/></index></name></expr>;<pos:position pos:line="2042" pos:column="22"/></expr_stmt>                 <comment type="block" pos:line="2042" pos:column="39">/* zero for max =&gt; infinity */</comment>
    <if pos:line="2043" pos:column="5">if <condition pos:line="2043" pos:column="8">(<expr><name pos:line="2043" pos:column="9">max<pos:position pos:line="2043" pos:column="12"/></name> <operator pos:line="2043" pos:column="13">==<pos:position pos:line="2043" pos:column="15"/></operator> <literal type="number" pos:line="2043" pos:column="16">0<pos:position pos:line="2043" pos:column="17"/></literal></expr>)<pos:position pos:line="2043" pos:column="18"/></condition><then pos:line="2043" pos:column="18"> <block type="pseudo"><expr_stmt><expr><name pos:line="2043" pos:column="19">max<pos:position pos:line="2043" pos:column="22"/></name> <operator pos:line="2043" pos:column="23">=<pos:position pos:line="2043" pos:column="24"/></operator> <name pos:line="2043" pos:column="25">INT_MAX<pos:position pos:line="2043" pos:column="32"/></name></expr>;<pos:position pos:line="2043" pos:column="33"/></expr_stmt></block></then></if>

    <comment type="block" pos:line="2045" pos:column="5">/* Common code for all repeated single character type matches. Note that
    in UTF-8 mode, '.' matches a character of any length, but for the other
    character types, the valid characters are all one-byte long. */</comment>

    <label><name pos:line="2049" pos:column="5">REPEATTYPE<pos:position pos:line="2049" pos:column="15"/></name>:<pos:position pos:line="2049" pos:column="16"/></label>
    <expr_stmt><expr><name pos:line="2050" pos:column="5">ctype<pos:position pos:line="2050" pos:column="10"/></name> <operator pos:line="2050" pos:column="11">=<pos:position pos:line="2050" pos:column="12"/></operator> <operator pos:line="2050" pos:column="13">*<pos:position pos:line="2050" pos:column="14"/></operator><name pos:line="2050" pos:column="14">ecode<pos:position pos:line="2050" pos:column="19"/></name><operator pos:line="2050" pos:column="19">++<pos:position pos:line="2050" pos:column="21"/></operator></expr>;<pos:position pos:line="2050" pos:column="22"/></expr_stmt>      <comment type="block" pos:line="2050" pos:column="28">/* Code for the character type */</comment>

<cpp:ifdef pos:line="2052" pos:column="1">#<cpp:directive pos:line="2052" pos:column="2">ifdef<pos:position pos:line="2052" pos:column="7"/></cpp:directive> <name pos:line="2052" pos:column="8">SUPPORT_UCP<pos:position pos:line="2052" pos:column="19"/></name></cpp:ifdef>
    <if pos:line="2053" pos:column="5">if <condition pos:line="2053" pos:column="8">(<expr><name pos:line="2053" pos:column="9">ctype<pos:position pos:line="2053" pos:column="14"/></name> <operator pos:line="2053" pos:column="15">==<pos:position pos:line="2053" pos:column="17"/></operator> <name pos:line="2053" pos:column="18">OP_PROP<pos:position pos:line="2053" pos:column="25"/></name> <operator pos:line="2053" pos:column="26">||<pos:position pos:line="2053" pos:column="28"/></operator> <name pos:line="2053" pos:column="29">ctype<pos:position pos:line="2053" pos:column="34"/></name> <operator pos:line="2053" pos:column="35">==<pos:position pos:line="2053" pos:column="37"/></operator> <name pos:line="2053" pos:column="38">OP_NOTPROP<pos:position pos:line="2053" pos:column="48"/></name></expr>)<pos:position pos:line="2053" pos:column="49"/></condition><then pos:line="2053" pos:column="49">
      <block pos:line="2054" pos:column="7">{
      <expr_stmt><expr><name pos:line="2055" pos:column="7">prop_fail_result<pos:position pos:line="2055" pos:column="23"/></name> <operator pos:line="2055" pos:column="24">=<pos:position pos:line="2055" pos:column="25"/></operator> <name pos:line="2055" pos:column="26">ctype<pos:position pos:line="2055" pos:column="31"/></name> <operator pos:line="2055" pos:column="32">==<pos:position pos:line="2055" pos:column="34"/></operator> <name pos:line="2055" pos:column="35">OP_NOTPROP<pos:position pos:line="2055" pos:column="45"/></name></expr>;<pos:position pos:line="2055" pos:column="46"/></expr_stmt>
      <expr_stmt><expr><name pos:line="2056" pos:column="7">prop_type<pos:position pos:line="2056" pos:column="16"/></name> <operator pos:line="2056" pos:column="17">=<pos:position pos:line="2056" pos:column="18"/></operator> <operator pos:line="2056" pos:column="19">*<pos:position pos:line="2056" pos:column="20"/></operator><name pos:line="2056" pos:column="20">ecode<pos:position pos:line="2056" pos:column="25"/></name><operator pos:line="2056" pos:column="25">++<pos:position pos:line="2056" pos:column="27"/></operator></expr>;<pos:position pos:line="2056" pos:column="28"/></expr_stmt>
      <if pos:line="2057" pos:column="7">if <condition pos:line="2057" pos:column="10">(<expr><name pos:line="2057" pos:column="11">prop_type<pos:position pos:line="2057" pos:column="20"/></name> <operator pos:line="2057" pos:column="21">&gt;=<pos:position pos:line="2057" pos:column="26"/></operator> <literal type="number" pos:line="2057" pos:column="24">128<pos:position pos:line="2057" pos:column="27"/></literal></expr>)<pos:position pos:line="2057" pos:column="28"/></condition><then pos:line="2057" pos:column="28">
        <block pos:line="2058" pos:column="9">{
        <expr_stmt><expr><name pos:line="2059" pos:column="9">prop_test_against<pos:position pos:line="2059" pos:column="26"/></name> <operator pos:line="2059" pos:column="27">=<pos:position pos:line="2059" pos:column="28"/></operator> <name pos:line="2059" pos:column="29">prop_type<pos:position pos:line="2059" pos:column="38"/></name> <operator pos:line="2059" pos:column="39">-<pos:position pos:line="2059" pos:column="40"/></operator> <literal type="number" pos:line="2059" pos:column="41">128<pos:position pos:line="2059" pos:column="44"/></literal></expr>;<pos:position pos:line="2059" pos:column="45"/></expr_stmt>
        <expr_stmt><expr><name pos:line="2060" pos:column="9">prop_test_variable<pos:position pos:line="2060" pos:column="27"/></name> <operator pos:line="2060" pos:column="28">=<pos:position pos:line="2060" pos:column="29"/></operator> <operator pos:line="2060" pos:column="30">&amp;<pos:position pos:line="2060" pos:column="35"/></operator><name pos:line="2060" pos:column="31">prop_category<pos:position pos:line="2060" pos:column="44"/></name></expr>;<pos:position pos:line="2060" pos:column="45"/></expr_stmt>
        }<pos:position pos:line="2061" pos:column="10"/></block></then>
      <else pos:line="2062" pos:column="7">else
        <block pos:line="2063" pos:column="9">{
        <expr_stmt><expr><name pos:line="2064" pos:column="9">prop_test_against<pos:position pos:line="2064" pos:column="26"/></name> <operator pos:line="2064" pos:column="27">=<pos:position pos:line="2064" pos:column="28"/></operator> <name pos:line="2064" pos:column="29">prop_type<pos:position pos:line="2064" pos:column="38"/></name></expr>;<pos:position pos:line="2064" pos:column="39"/></expr_stmt>
        <expr_stmt><expr><name pos:line="2065" pos:column="9">prop_test_variable<pos:position pos:line="2065" pos:column="27"/></name> <operator pos:line="2065" pos:column="28">=<pos:position pos:line="2065" pos:column="29"/></operator> <operator pos:line="2065" pos:column="30">&amp;<pos:position pos:line="2065" pos:column="35"/></operator><name pos:line="2065" pos:column="31">prop_chartype<pos:position pos:line="2065" pos:column="44"/></name></expr>;<pos:position pos:line="2065" pos:column="45"/></expr_stmt>
        }<pos:position pos:line="2066" pos:column="10"/></block></else></if>
      }<pos:position pos:line="2067" pos:column="8"/></block></then>
    <else pos:line="2068" pos:column="5">else <block type="pseudo"><expr_stmt><expr><name pos:line="2068" pos:column="10">prop_type<pos:position pos:line="2068" pos:column="19"/></name> <operator pos:line="2068" pos:column="20">=<pos:position pos:line="2068" pos:column="21"/></operator> <operator pos:line="2068" pos:column="22">-<pos:position pos:line="2068" pos:column="23"/></operator><literal type="number" pos:line="2068" pos:column="23">1<pos:position pos:line="2068" pos:column="24"/></literal></expr>;<pos:position pos:line="2068" pos:column="25"/></expr_stmt></block></else></if>
<cpp:endif pos:line="2069" pos:column="1">#<cpp:directive pos:line="2069" pos:column="2">endif<pos:position pos:line="2069" pos:column="7"/></cpp:directive></cpp:endif>

    <comment type="block" pos:line="2071" pos:column="5">/* First, ensure the minimum number of matches are present. Use inline
    code for maximizing the speed, and do the type test once at the start
    (i.e. keep it out of the loop). Also we can test that there are at least
    the minimum number of bytes before we start. This isn't as effective in
    UTF-8 mode, but it does no harm. Separate the UTF-8 code completely as that
    is tidier. Also separate the UCP code, which can be the same for both UTF-8
    and single-bytes. */</comment>

    <if pos:line="2079" pos:column="5">if <condition pos:line="2079" pos:column="8">(<expr><name pos:line="2079" pos:column="9">min<pos:position pos:line="2079" pos:column="12"/></name> <operator pos:line="2079" pos:column="13">&gt;<pos:position pos:line="2079" pos:column="17"/></operator> <name><name pos:line="2079" pos:column="15">md<pos:position pos:line="2079" pos:column="17"/></name><operator pos:line="2079" pos:column="17">-&gt;<pos:position pos:line="2079" pos:column="22"/></operator><name pos:line="2079" pos:column="19">end_subject<pos:position pos:line="2079" pos:column="30"/></name></name> <operator pos:line="2079" pos:column="31">-<pos:position pos:line="2079" pos:column="32"/></operator> <name pos:line="2079" pos:column="33">eptr<pos:position pos:line="2079" pos:column="37"/></name></expr>)<pos:position pos:line="2079" pos:column="38"/></condition><then pos:line="2079" pos:column="38"> <block type="pseudo"><expr_stmt><expr><call><name pos:line="2079" pos:column="39">RRETURN<pos:position pos:line="2079" pos:column="46"/></name><argument_list pos:line="2079" pos:column="46">(<argument><expr><name pos:line="2079" pos:column="47">MATCH_NOMATCH<pos:position pos:line="2079" pos:column="60"/></name></expr></argument>)<pos:position pos:line="2079" pos:column="61"/></argument_list></call></expr>;<pos:position pos:line="2079" pos:column="62"/></expr_stmt></block></then></if>
    <if pos:line="2080" pos:column="5">if <condition pos:line="2080" pos:column="8">(<expr><name pos:line="2080" pos:column="9">min<pos:position pos:line="2080" pos:column="12"/></name> <operator pos:line="2080" pos:column="13">&gt;<pos:position pos:line="2080" pos:column="17"/></operator> <literal type="number" pos:line="2080" pos:column="15">0<pos:position pos:line="2080" pos:column="16"/></literal></expr>)<pos:position pos:line="2080" pos:column="17"/></condition><then pos:line="2080" pos:column="17">
      <block pos:line="2081" pos:column="7">{
<cpp:ifdef pos:line="2082" pos:column="1">#<cpp:directive pos:line="2082" pos:column="2">ifdef<pos:position pos:line="2082" pos:column="7"/></cpp:directive> <name pos:line="2082" pos:column="8">SUPPORT_UCP<pos:position pos:line="2082" pos:column="19"/></name></cpp:ifdef>
      <if pos:line="2083" pos:column="7">if <condition pos:line="2083" pos:column="10">(<expr><name pos:line="2083" pos:column="11">prop_type<pos:position pos:line="2083" pos:column="20"/></name> <operator pos:line="2083" pos:column="21">&gt;<pos:position pos:line="2083" pos:column="25"/></operator> <literal type="number" pos:line="2083" pos:column="23">0<pos:position pos:line="2083" pos:column="24"/></literal></expr>)<pos:position pos:line="2083" pos:column="25"/></condition><then pos:line="2083" pos:column="25">
        <block pos:line="2084" pos:column="9">{
        <for pos:line="2085" pos:column="9">for <control pos:line="2085" pos:column="13">(<init><expr><name pos:line="2085" pos:column="14">i<pos:position pos:line="2085" pos:column="15"/></name> <operator pos:line="2085" pos:column="16">=<pos:position pos:line="2085" pos:column="17"/></operator> <literal type="number" pos:line="2085" pos:column="18">1<pos:position pos:line="2085" pos:column="19"/></literal></expr>;<pos:position pos:line="2085" pos:column="20"/></init> <condition><expr><name pos:line="2085" pos:column="21">i<pos:position pos:line="2085" pos:column="22"/></name> <operator pos:line="2085" pos:column="23">&lt;=<pos:position pos:line="2085" pos:column="28"/></operator> <name pos:line="2085" pos:column="26">min<pos:position pos:line="2085" pos:column="29"/></name></expr>;<pos:position pos:line="2085" pos:column="30"/></condition> <incr><expr><name pos:line="2085" pos:column="31">i<pos:position pos:line="2085" pos:column="32"/></name><operator pos:line="2085" pos:column="32">++<pos:position pos:line="2085" pos:column="34"/></operator></expr></incr>)<pos:position pos:line="2085" pos:column="35"/></control>
          <block pos:line="2086" pos:column="11">{
          <expr_stmt><expr><call><name pos:line="2087" pos:column="11">GETCHARINC<pos:position pos:line="2087" pos:column="21"/></name><argument_list pos:line="2087" pos:column="21">(<argument><expr><name pos:line="2087" pos:column="22">c<pos:position pos:line="2087" pos:column="23"/></name></expr></argument>, <argument><expr><name pos:line="2087" pos:column="25">eptr<pos:position pos:line="2087" pos:column="29"/></name></expr></argument>)<pos:position pos:line="2087" pos:column="30"/></argument_list></call></expr>;<pos:position pos:line="2087" pos:column="31"/></expr_stmt>
          <expr_stmt><expr><name pos:line="2088" pos:column="11">prop_category<pos:position pos:line="2088" pos:column="24"/></name> <operator pos:line="2088" pos:column="25">=<pos:position pos:line="2088" pos:column="26"/></operator> <call><name pos:line="2088" pos:column="27">ucp_findchar<pos:position pos:line="2088" pos:column="39"/></name><argument_list pos:line="2088" pos:column="39">(<argument><expr><name pos:line="2088" pos:column="40">c<pos:position pos:line="2088" pos:column="41"/></name></expr></argument>, <argument><expr><operator pos:line="2088" pos:column="43">&amp;<pos:position pos:line="2088" pos:column="48"/></operator><name pos:line="2088" pos:column="44">prop_chartype<pos:position pos:line="2088" pos:column="57"/></name></expr></argument>, <argument><expr><operator pos:line="2088" pos:column="59">&amp;<pos:position pos:line="2088" pos:column="64"/></operator><name pos:line="2088" pos:column="60">prop_othercase<pos:position pos:line="2088" pos:column="74"/></name></expr></argument>)<pos:position pos:line="2088" pos:column="75"/></argument_list></call></expr>;<pos:position pos:line="2088" pos:column="76"/></expr_stmt>
          <if pos:line="2089" pos:column="11">if <condition pos:line="2089" pos:column="14">(<expr><operator pos:line="2089" pos:column="15">(<pos:position pos:line="2089" pos:column="16"/></operator><operator pos:line="2089" pos:column="16">*<pos:position pos:line="2089" pos:column="17"/></operator><name pos:line="2089" pos:column="17">prop_test_variable<pos:position pos:line="2089" pos:column="35"/></name> <operator pos:line="2089" pos:column="36">==<pos:position pos:line="2089" pos:column="38"/></operator> <name pos:line="2089" pos:column="39">prop_test_against<pos:position pos:line="2089" pos:column="56"/></name><operator pos:line="2089" pos:column="56">)<pos:position pos:line="2089" pos:column="57"/></operator> <operator pos:line="2089" pos:column="58">==<pos:position pos:line="2089" pos:column="60"/></operator> <name pos:line="2089" pos:column="61">prop_fail_result<pos:position pos:line="2089" pos:column="77"/></name></expr>)<pos:position pos:line="2089" pos:column="78"/></condition><then pos:line="2089" pos:column="78">
            <block type="pseudo"><expr_stmt><expr><call><name pos:line="2090" pos:column="13">RRETURN<pos:position pos:line="2090" pos:column="20"/></name><argument_list pos:line="2090" pos:column="20">(<argument><expr><name pos:line="2090" pos:column="21">MATCH_NOMATCH<pos:position pos:line="2090" pos:column="34"/></name></expr></argument>)<pos:position pos:line="2090" pos:column="35"/></argument_list></call></expr>;<pos:position pos:line="2090" pos:column="36"/></expr_stmt></block></then></if>
          }<pos:position pos:line="2091" pos:column="12"/></block></for>
        }<pos:position pos:line="2092" pos:column="10"/></block></then>

      <comment type="block" pos:line="2094" pos:column="7">/* Match extended Unicode sequences. We will get here only if the
      support is in the binary; otherwise a compile-time error occurs. */</comment>

      <elseif pos:line="2097" pos:column="7">else <if pos:line="2097" pos:column="12">if <condition pos:line="2097" pos:column="15">(<expr><name pos:line="2097" pos:column="16">ctype<pos:position pos:line="2097" pos:column="21"/></name> <operator pos:line="2097" pos:column="22">==<pos:position pos:line="2097" pos:column="24"/></operator> <name pos:line="2097" pos:column="25">OP_EXTUNI<pos:position pos:line="2097" pos:column="34"/></name></expr>)<pos:position pos:line="2097" pos:column="35"/></condition><then pos:line="2097" pos:column="35">
        <block pos:line="2098" pos:column="9">{
        <for pos:line="2099" pos:column="9">for <control pos:line="2099" pos:column="13">(<init><expr><name pos:line="2099" pos:column="14">i<pos:position pos:line="2099" pos:column="15"/></name> <operator pos:line="2099" pos:column="16">=<pos:position pos:line="2099" pos:column="17"/></operator> <literal type="number" pos:line="2099" pos:column="18">1<pos:position pos:line="2099" pos:column="19"/></literal></expr>;<pos:position pos:line="2099" pos:column="20"/></init> <condition><expr><name pos:line="2099" pos:column="21">i<pos:position pos:line="2099" pos:column="22"/></name> <operator pos:line="2099" pos:column="23">&lt;=<pos:position pos:line="2099" pos:column="28"/></operator> <name pos:line="2099" pos:column="26">min<pos:position pos:line="2099" pos:column="29"/></name></expr>;<pos:position pos:line="2099" pos:column="30"/></condition> <incr><expr><name pos:line="2099" pos:column="31">i<pos:position pos:line="2099" pos:column="32"/></name><operator pos:line="2099" pos:column="32">++<pos:position pos:line="2099" pos:column="34"/></operator></expr></incr>)<pos:position pos:line="2099" pos:column="35"/></control>
          <block pos:line="2100" pos:column="11">{
          <expr_stmt><expr><call><name pos:line="2101" pos:column="11">GETCHARINCTEST<pos:position pos:line="2101" pos:column="25"/></name><argument_list pos:line="2101" pos:column="25">(<argument><expr><name pos:line="2101" pos:column="26">c<pos:position pos:line="2101" pos:column="27"/></name></expr></argument>, <argument><expr><name pos:line="2101" pos:column="29">eptr<pos:position pos:line="2101" pos:column="33"/></name></expr></argument>)<pos:position pos:line="2101" pos:column="34"/></argument_list></call></expr>;<pos:position pos:line="2101" pos:column="35"/></expr_stmt>
          <expr_stmt><expr><name pos:line="2102" pos:column="11">prop_category<pos:position pos:line="2102" pos:column="24"/></name> <operator pos:line="2102" pos:column="25">=<pos:position pos:line="2102" pos:column="26"/></operator> <call><name pos:line="2102" pos:column="27">ucp_findchar<pos:position pos:line="2102" pos:column="39"/></name><argument_list pos:line="2102" pos:column="39">(<argument><expr><name pos:line="2102" pos:column="40">c<pos:position pos:line="2102" pos:column="41"/></name></expr></argument>, <argument><expr><operator pos:line="2102" pos:column="43">&amp;<pos:position pos:line="2102" pos:column="48"/></operator><name pos:line="2102" pos:column="44">prop_chartype<pos:position pos:line="2102" pos:column="57"/></name></expr></argument>, <argument><expr><operator pos:line="2102" pos:column="59">&amp;<pos:position pos:line="2102" pos:column="64"/></operator><name pos:line="2102" pos:column="60">prop_othercase<pos:position pos:line="2102" pos:column="74"/></name></expr></argument>)<pos:position pos:line="2102" pos:column="75"/></argument_list></call></expr>;<pos:position pos:line="2102" pos:column="76"/></expr_stmt>
          <if pos:line="2103" pos:column="11">if <condition pos:line="2103" pos:column="14">(<expr><name pos:line="2103" pos:column="15">prop_category<pos:position pos:line="2103" pos:column="28"/></name> <operator pos:line="2103" pos:column="29">==<pos:position pos:line="2103" pos:column="31"/></operator> <name pos:line="2103" pos:column="32">ucp_M<pos:position pos:line="2103" pos:column="37"/></name></expr>)<pos:position pos:line="2103" pos:column="38"/></condition><then pos:line="2103" pos:column="38"> <block type="pseudo"><expr_stmt><expr><call><name pos:line="2103" pos:column="39">RRETURN<pos:position pos:line="2103" pos:column="46"/></name><argument_list pos:line="2103" pos:column="46">(<argument><expr><name pos:line="2103" pos:column="47">MATCH_NOMATCH<pos:position pos:line="2103" pos:column="60"/></name></expr></argument>)<pos:position pos:line="2103" pos:column="61"/></argument_list></call></expr>;<pos:position pos:line="2103" pos:column="62"/></expr_stmt></block></then></if>
          <while pos:line="2104" pos:column="11">while <condition pos:line="2104" pos:column="17">(<expr><name pos:line="2104" pos:column="18">eptr<pos:position pos:line="2104" pos:column="22"/></name> <operator pos:line="2104" pos:column="23">&lt;<pos:position pos:line="2104" pos:column="27"/></operator> <name><name pos:line="2104" pos:column="25">md<pos:position pos:line="2104" pos:column="27"/></name><operator pos:line="2104" pos:column="27">-&gt;<pos:position pos:line="2104" pos:column="32"/></operator><name pos:line="2104" pos:column="29">end_subject<pos:position pos:line="2104" pos:column="40"/></name></name></expr>)<pos:position pos:line="2104" pos:column="41"/></condition>
            <block pos:line="2105" pos:column="13">{
            <decl_stmt><decl><type><name pos:line="2106" pos:column="13">int<pos:position pos:line="2106" pos:column="16"/></name></type> <name pos:line="2106" pos:column="17">len<pos:position pos:line="2106" pos:column="20"/></name> <init pos:line="2106" pos:column="21">= <expr><literal type="number" pos:line="2106" pos:column="23">1<pos:position pos:line="2106" pos:column="24"/></literal></expr></init></decl>;<pos:position pos:line="2106" pos:column="25"/></decl_stmt>
            <if pos:line="2107" pos:column="13">if <condition pos:line="2107" pos:column="16">(<expr><operator pos:line="2107" pos:column="17">!<pos:position pos:line="2107" pos:column="18"/></operator><name><name pos:line="2107" pos:column="18">md<pos:position pos:line="2107" pos:column="20"/></name><operator pos:line="2107" pos:column="20">-&gt;<pos:position pos:line="2107" pos:column="25"/></operator><name pos:line="2107" pos:column="22">utf8<pos:position pos:line="2107" pos:column="26"/></name></name></expr>)<pos:position pos:line="2107" pos:column="27"/></condition><then pos:line="2107" pos:column="27"> <block type="pseudo"><expr_stmt><expr><name pos:line="2107" pos:column="28">c<pos:position pos:line="2107" pos:column="29"/></name> <operator pos:line="2107" pos:column="30">=<pos:position pos:line="2107" pos:column="31"/></operator> <operator pos:line="2107" pos:column="32">*<pos:position pos:line="2107" pos:column="33"/></operator><name pos:line="2107" pos:column="33">eptr<pos:position pos:line="2107" pos:column="37"/></name></expr>;<pos:position pos:line="2107" pos:column="38"/></expr_stmt></block></then> <else pos:line="2107" pos:column="39">else
              <block pos:line="2108" pos:column="15">{
              <expr_stmt><expr><call><name pos:line="2109" pos:column="15">GETCHARLEN<pos:position pos:line="2109" pos:column="25"/></name><argument_list pos:line="2109" pos:column="25">(<argument><expr><name pos:line="2109" pos:column="26">c<pos:position pos:line="2109" pos:column="27"/></name></expr></argument>, <argument><expr><name pos:line="2109" pos:column="29">eptr<pos:position pos:line="2109" pos:column="33"/></name></expr></argument>, <argument><expr><name pos:line="2109" pos:column="35">len<pos:position pos:line="2109" pos:column="38"/></name></expr></argument>)<pos:position pos:line="2109" pos:column="39"/></argument_list></call></expr>;<pos:position pos:line="2109" pos:column="40"/></expr_stmt>
              }<pos:position pos:line="2110" pos:column="16"/></block></else></if>
            <expr_stmt><expr><name pos:line="2111" pos:column="13">prop_category<pos:position pos:line="2111" pos:column="26"/></name> <operator pos:line="2111" pos:column="27">=<pos:position pos:line="2111" pos:column="28"/></operator> <call><name pos:line="2111" pos:column="29">ucp_findchar<pos:position pos:line="2111" pos:column="41"/></name><argument_list pos:line="2111" pos:column="41">(<argument><expr><name pos:line="2111" pos:column="42">c<pos:position pos:line="2111" pos:column="43"/></name></expr></argument>, <argument><expr><operator pos:line="2111" pos:column="45">&amp;<pos:position pos:line="2111" pos:column="50"/></operator><name pos:line="2111" pos:column="46">prop_chartype<pos:position pos:line="2111" pos:column="59"/></name></expr></argument>, <argument><expr><operator pos:line="2111" pos:column="61">&amp;<pos:position pos:line="2111" pos:column="66"/></operator><name pos:line="2111" pos:column="62">prop_othercase<pos:position pos:line="2111" pos:column="76"/></name></expr></argument>)<pos:position pos:line="2111" pos:column="77"/></argument_list></call></expr>;<pos:position pos:line="2111" pos:column="78"/></expr_stmt>
            <if pos:line="2112" pos:column="13">if <condition pos:line="2112" pos:column="16">(<expr><name pos:line="2112" pos:column="17">prop_category<pos:position pos:line="2112" pos:column="30"/></name> <operator pos:line="2112" pos:column="31">!=<pos:position pos:line="2112" pos:column="33"/></operator> <name pos:line="2112" pos:column="34">ucp_M<pos:position pos:line="2112" pos:column="39"/></name></expr>)<pos:position pos:line="2112" pos:column="40"/></condition><then pos:line="2112" pos:column="40"> <block type="pseudo"><break pos:line="2112" pos:column="41">break;<pos:position pos:line="2112" pos:column="47"/></break></block></then></if>
            <expr_stmt><expr><name pos:line="2113" pos:column="13">eptr<pos:position pos:line="2113" pos:column="17"/></name> <operator pos:line="2113" pos:column="18">+=<pos:position pos:line="2113" pos:column="20"/></operator> <name pos:line="2113" pos:column="21">len<pos:position pos:line="2113" pos:column="24"/></name></expr>;<pos:position pos:line="2113" pos:column="25"/></expr_stmt>
            }<pos:position pos:line="2114" pos:column="14"/></block></while>
          }<pos:position pos:line="2115" pos:column="12"/></block></for>
        }<pos:position pos:line="2116" pos:column="10"/></block></then></if></elseif>

      <elseif pos:line="2118" pos:column="7">else
<cpp:endif pos:line="2119" pos:column="1">#<cpp:directive pos:line="2119" pos:column="2">endif<pos:position pos:line="2119" pos:column="7"/></cpp:directive></cpp:endif>     <comment type="block" pos:line="2119" pos:column="12">/* SUPPORT_UCP */</comment>

<comment type="block" pos:line="2121" pos:column="1">/* Handle all other cases when the coding is UTF-8 */</comment>

<cpp:ifdef pos:line="2123" pos:column="1">#<cpp:directive pos:line="2123" pos:column="2">ifdef<pos:position pos:line="2123" pos:column="7"/></cpp:directive> <name pos:line="2123" pos:column="8">SUPPORT_UTF8<pos:position pos:line="2123" pos:column="20"/></name></cpp:ifdef>
      <if pos:line="2124" pos:column="7">if <condition pos:line="2124" pos:column="10">(<expr><name><name pos:line="2124" pos:column="11">md<pos:position pos:line="2124" pos:column="13"/></name><operator pos:line="2124" pos:column="13">-&gt;<pos:position pos:line="2124" pos:column="18"/></operator><name pos:line="2124" pos:column="15">utf8<pos:position pos:line="2124" pos:column="19"/></name></name></expr>)<pos:position pos:line="2124" pos:column="20"/></condition><then pos:line="2124" pos:column="20"> <block type="pseudo"><switch pos:line="2124" pos:column="21">switch<condition pos:line="2124" pos:column="27">(<expr><name pos:line="2124" pos:column="28">ctype<pos:position pos:line="2124" pos:column="33"/></name></expr>)<pos:position pos:line="2124" pos:column="34"/></condition>
        <block pos:line="2125" pos:column="9">{
        <case pos:line="2126" pos:column="9">case <expr><name pos:line="2126" pos:column="14">OP_ANY<pos:position pos:line="2126" pos:column="20"/></name></expr>:<pos:position pos:line="2126" pos:column="21"/></case>
        <for pos:line="2127" pos:column="9">for <control pos:line="2127" pos:column="13">(<init><expr><name pos:line="2127" pos:column="14">i<pos:position pos:line="2127" pos:column="15"/></name> <operator pos:line="2127" pos:column="16">=<pos:position pos:line="2127" pos:column="17"/></operator> <literal type="number" pos:line="2127" pos:column="18">1<pos:position pos:line="2127" pos:column="19"/></literal></expr>;<pos:position pos:line="2127" pos:column="20"/></init> <condition><expr><name pos:line="2127" pos:column="21">i<pos:position pos:line="2127" pos:column="22"/></name> <operator pos:line="2127" pos:column="23">&lt;=<pos:position pos:line="2127" pos:column="28"/></operator> <name pos:line="2127" pos:column="26">min<pos:position pos:line="2127" pos:column="29"/></name></expr>;<pos:position pos:line="2127" pos:column="30"/></condition> <incr><expr><name pos:line="2127" pos:column="31">i<pos:position pos:line="2127" pos:column="32"/></name><operator pos:line="2127" pos:column="32">++<pos:position pos:line="2127" pos:column="34"/></operator></expr></incr>)<pos:position pos:line="2127" pos:column="35"/></control>
          <block pos:line="2128" pos:column="11">{
          <if pos:line="2129" pos:column="11">if <condition pos:line="2129" pos:column="14">(<expr><name pos:line="2129" pos:column="15">eptr<pos:position pos:line="2129" pos:column="19"/></name> <operator pos:line="2129" pos:column="20">&gt;=<pos:position pos:line="2129" pos:column="25"/></operator> <name><name pos:line="2129" pos:column="23">md<pos:position pos:line="2129" pos:column="25"/></name><operator pos:line="2129" pos:column="25">-&gt;<pos:position pos:line="2129" pos:column="30"/></operator><name pos:line="2129" pos:column="27">end_subject<pos:position pos:line="2129" pos:column="38"/></name></name> <operator pos:line="2129" pos:column="39">||<pos:position pos:line="2129" pos:column="41"/></operator>
             <operator pos:line="2130" pos:column="14">(<pos:position pos:line="2130" pos:column="15"/></operator><operator pos:line="2130" pos:column="15">*<pos:position pos:line="2130" pos:column="16"/></operator><name pos:line="2130" pos:column="16">eptr<pos:position pos:line="2130" pos:column="20"/></name><operator pos:line="2130" pos:column="20">++<pos:position pos:line="2130" pos:column="22"/></operator> <operator pos:line="2130" pos:column="23">==<pos:position pos:line="2130" pos:column="25"/></operator> <name pos:line="2130" pos:column="26">NEWLINE<pos:position pos:line="2130" pos:column="33"/></name> <operator pos:line="2130" pos:column="34">&amp;&amp;<pos:position pos:line="2130" pos:column="44"/></operator> <operator pos:line="2130" pos:column="37">(<pos:position pos:line="2130" pos:column="38"/></operator><name pos:line="2130" pos:column="38">ims<pos:position pos:line="2130" pos:column="41"/></name> <operator pos:line="2130" pos:column="42">&amp;<pos:position pos:line="2130" pos:column="47"/></operator> <name pos:line="2130" pos:column="44">PCRE_DOTALL<pos:position pos:line="2130" pos:column="55"/></name><operator pos:line="2130" pos:column="55">)<pos:position pos:line="2130" pos:column="56"/></operator> <operator pos:line="2130" pos:column="57">==<pos:position pos:line="2130" pos:column="59"/></operator> <literal type="number" pos:line="2130" pos:column="60">0<pos:position pos:line="2130" pos:column="61"/></literal><operator pos:line="2130" pos:column="61">)<pos:position pos:line="2130" pos:column="62"/></operator></expr>)<pos:position pos:line="2130" pos:column="63"/></condition><then pos:line="2130" pos:column="63">
            <block type="pseudo"><expr_stmt><expr><call><name pos:line="2131" pos:column="13">RRETURN<pos:position pos:line="2131" pos:column="20"/></name><argument_list pos:line="2131" pos:column="20">(<argument><expr><name pos:line="2131" pos:column="21">MATCH_NOMATCH<pos:position pos:line="2131" pos:column="34"/></name></expr></argument>)<pos:position pos:line="2131" pos:column="35"/></argument_list></call></expr>;<pos:position pos:line="2131" pos:column="36"/></expr_stmt></block></then></if>
          <while pos:line="2132" pos:column="11">while <condition pos:line="2132" pos:column="17">(<expr><name pos:line="2132" pos:column="18">eptr<pos:position pos:line="2132" pos:column="22"/></name> <operator pos:line="2132" pos:column="23">&lt;<pos:position pos:line="2132" pos:column="27"/></operator> <name><name pos:line="2132" pos:column="25">md<pos:position pos:line="2132" pos:column="27"/></name><operator pos:line="2132" pos:column="27">-&gt;<pos:position pos:line="2132" pos:column="32"/></operator><name pos:line="2132" pos:column="29">end_subject<pos:position pos:line="2132" pos:column="40"/></name></name> <operator pos:line="2132" pos:column="41">&amp;&amp;<pos:position pos:line="2132" pos:column="51"/></operator> <operator pos:line="2132" pos:column="44">(<pos:position pos:line="2132" pos:column="45"/></operator><operator pos:line="2132" pos:column="45">*<pos:position pos:line="2132" pos:column="46"/></operator><name pos:line="2132" pos:column="46">eptr<pos:position pos:line="2132" pos:column="50"/></name> <operator pos:line="2132" pos:column="51">&amp;<pos:position pos:line="2132" pos:column="56"/></operator> <literal type="number" pos:line="2132" pos:column="53">0xc0<pos:position pos:line="2132" pos:column="57"/></literal><operator pos:line="2132" pos:column="57">)<pos:position pos:line="2132" pos:column="58"/></operator> <operator pos:line="2132" pos:column="59">==<pos:position pos:line="2132" pos:column="61"/></operator> <literal type="number" pos:line="2132" pos:column="62">0x80<pos:position pos:line="2132" pos:column="66"/></literal></expr>)<pos:position pos:line="2132" pos:column="67"/></condition> <block type="pseudo"><expr_stmt><expr><name pos:line="2132" pos:column="68">eptr<pos:position pos:line="2132" pos:column="72"/></name><operator pos:line="2132" pos:column="72">++<pos:position pos:line="2132" pos:column="74"/></operator></expr>;<pos:position pos:line="2132" pos:column="75"/></expr_stmt></block></while>
          }<pos:position pos:line="2133" pos:column="12"/></block></for>
        <break pos:line="2134" pos:column="9">break;<pos:position pos:line="2134" pos:column="15"/></break>

        <case pos:line="2136" pos:column="9">case <expr><name pos:line="2136" pos:column="14">OP_ANYBYTE<pos:position pos:line="2136" pos:column="24"/></name></expr>:<pos:position pos:line="2136" pos:column="25"/></case>
        <expr_stmt><expr><name pos:line="2137" pos:column="9">eptr<pos:position pos:line="2137" pos:column="13"/></name> <operator pos:line="2137" pos:column="14">+=<pos:position pos:line="2137" pos:column="16"/></operator> <name pos:line="2137" pos:column="17">min<pos:position pos:line="2137" pos:column="20"/></name></expr>;<pos:position pos:line="2137" pos:column="21"/></expr_stmt>
        <break pos:line="2138" pos:column="9">break;<pos:position pos:line="2138" pos:column="15"/></break>

        <case pos:line="2140" pos:column="9">case <expr><name pos:line="2140" pos:column="14">OP_NOT_DIGIT<pos:position pos:line="2140" pos:column="26"/></name></expr>:<pos:position pos:line="2140" pos:column="27"/></case>
        <for pos:line="2141" pos:column="9">for <control pos:line="2141" pos:column="13">(<init><expr><name pos:line="2141" pos:column="14">i<pos:position pos:line="2141" pos:column="15"/></name> <operator pos:line="2141" pos:column="16">=<pos:position pos:line="2141" pos:column="17"/></operator> <literal type="number" pos:line="2141" pos:column="18">1<pos:position pos:line="2141" pos:column="19"/></literal></expr>;<pos:position pos:line="2141" pos:column="20"/></init> <condition><expr><name pos:line="2141" pos:column="21">i<pos:position pos:line="2141" pos:column="22"/></name> <operator pos:line="2141" pos:column="23">&lt;=<pos:position pos:line="2141" pos:column="28"/></operator> <name pos:line="2141" pos:column="26">min<pos:position pos:line="2141" pos:column="29"/></name></expr>;<pos:position pos:line="2141" pos:column="30"/></condition> <incr><expr><name pos:line="2141" pos:column="31">i<pos:position pos:line="2141" pos:column="32"/></name><operator pos:line="2141" pos:column="32">++<pos:position pos:line="2141" pos:column="34"/></operator></expr></incr>)<pos:position pos:line="2141" pos:column="35"/></control>
          <block pos:line="2142" pos:column="11">{
          <if pos:line="2143" pos:column="11">if <condition pos:line="2143" pos:column="14">(<expr><name pos:line="2143" pos:column="15">eptr<pos:position pos:line="2143" pos:column="19"/></name> <operator pos:line="2143" pos:column="20">&gt;=<pos:position pos:line="2143" pos:column="25"/></operator> <name><name pos:line="2143" pos:column="23">md<pos:position pos:line="2143" pos:column="25"/></name><operator pos:line="2143" pos:column="25">-&gt;<pos:position pos:line="2143" pos:column="30"/></operator><name pos:line="2143" pos:column="27">end_subject<pos:position pos:line="2143" pos:column="38"/></name></name></expr>)<pos:position pos:line="2143" pos:column="39"/></condition><then pos:line="2143" pos:column="39"> <block type="pseudo"><expr_stmt><expr><call><name pos:line="2143" pos:column="40">RRETURN<pos:position pos:line="2143" pos:column="47"/></name><argument_list pos:line="2143" pos:column="47">(<argument><expr><name pos:line="2143" pos:column="48">MATCH_NOMATCH<pos:position pos:line="2143" pos:column="61"/></name></expr></argument>)<pos:position pos:line="2143" pos:column="62"/></argument_list></call></expr>;<pos:position pos:line="2143" pos:column="63"/></expr_stmt></block></then></if>
          <expr_stmt><expr><call><name pos:line="2144" pos:column="11">GETCHARINC<pos:position pos:line="2144" pos:column="21"/></name><argument_list pos:line="2144" pos:column="21">(<argument><expr><name pos:line="2144" pos:column="22">c<pos:position pos:line="2144" pos:column="23"/></name></expr></argument>, <argument><expr><name pos:line="2144" pos:column="25">eptr<pos:position pos:line="2144" pos:column="29"/></name></expr></argument>)<pos:position pos:line="2144" pos:column="30"/></argument_list></call></expr>;<pos:position pos:line="2144" pos:column="31"/></expr_stmt>
          <if pos:line="2145" pos:column="11">if <condition pos:line="2145" pos:column="14">(<expr><name pos:line="2145" pos:column="15">c<pos:position pos:line="2145" pos:column="16"/></name> <operator pos:line="2145" pos:column="17">&lt;<pos:position pos:line="2145" pos:column="21"/></operator> <literal type="number" pos:line="2145" pos:column="19">128<pos:position pos:line="2145" pos:column="22"/></literal> <operator pos:line="2145" pos:column="23">&amp;&amp;<pos:position pos:line="2145" pos:column="33"/></operator> <operator pos:line="2145" pos:column="26">(<pos:position pos:line="2145" pos:column="27"/></operator><name><name pos:line="2145" pos:column="27">md<pos:position pos:line="2145" pos:column="29"/></name><operator pos:line="2145" pos:column="29">-&gt;<pos:position pos:line="2145" pos:column="34"/></operator><name pos:line="2145" pos:column="31">ctypes<pos:position pos:line="2145" pos:column="37"/></name><index pos:line="2145" pos:column="37">[<expr><name pos:line="2145" pos:column="38">c<pos:position pos:line="2145" pos:column="39"/></name></expr>]<pos:position pos:line="2145" pos:column="40"/></index></name> <operator pos:line="2145" pos:column="41">&amp;<pos:position pos:line="2145" pos:column="46"/></operator> <name pos:line="2145" pos:column="43">ctype_digit<pos:position pos:line="2145" pos:column="54"/></name><operator pos:line="2145" pos:column="54">)<pos:position pos:line="2145" pos:column="55"/></operator> <operator pos:line="2145" pos:column="56">!=<pos:position pos:line="2145" pos:column="58"/></operator> <literal type="number" pos:line="2145" pos:column="59">0<pos:position pos:line="2145" pos:column="60"/></literal></expr>)<pos:position pos:line="2145" pos:column="61"/></condition><then pos:line="2145" pos:column="61">
            <block type="pseudo"><expr_stmt><expr><call><name pos:line="2146" pos:column="13">RRETURN<pos:position pos:line="2146" pos:column="20"/></name><argument_list pos:line="2146" pos:column="20">(<argument><expr><name pos:line="2146" pos:column="21">MATCH_NOMATCH<pos:position pos:line="2146" pos:column="34"/></name></expr></argument>)<pos:position pos:line="2146" pos:column="35"/></argument_list></call></expr>;<pos:position pos:line="2146" pos:column="36"/></expr_stmt></block></then></if>
          }<pos:position pos:line="2147" pos:column="12"/></block></for>
        <break pos:line="2148" pos:column="9">break;<pos:position pos:line="2148" pos:column="15"/></break>

        <case pos:line="2150" pos:column="9">case <expr><name pos:line="2150" pos:column="14">OP_DIGIT<pos:position pos:line="2150" pos:column="22"/></name></expr>:<pos:position pos:line="2150" pos:column="23"/></case>
        <for pos:line="2151" pos:column="9">for <control pos:line="2151" pos:column="13">(<init><expr><name pos:line="2151" pos:column="14">i<pos:position pos:line="2151" pos:column="15"/></name> <operator pos:line="2151" pos:column="16">=<pos:position pos:line="2151" pos:column="17"/></operator> <literal type="number" pos:line="2151" pos:column="18">1<pos:position pos:line="2151" pos:column="19"/></literal></expr>;<pos:position pos:line="2151" pos:column="20"/></init> <condition><expr><name pos:line="2151" pos:column="21">i<pos:position pos:line="2151" pos:column="22"/></name> <operator pos:line="2151" pos:column="23">&lt;=<pos:position pos:line="2151" pos:column="28"/></operator> <name pos:line="2151" pos:column="26">min<pos:position pos:line="2151" pos:column="29"/></name></expr>;<pos:position pos:line="2151" pos:column="30"/></condition> <incr><expr><name pos:line="2151" pos:column="31">i<pos:position pos:line="2151" pos:column="32"/></name><operator pos:line="2151" pos:column="32">++<pos:position pos:line="2151" pos:column="34"/></operator></expr></incr>)<pos:position pos:line="2151" pos:column="35"/></control>
          <block pos:line="2152" pos:column="11">{
          <if pos:line="2153" pos:column="11">if <condition pos:line="2153" pos:column="14">(<expr><name pos:line="2153" pos:column="15">eptr<pos:position pos:line="2153" pos:column="19"/></name> <operator pos:line="2153" pos:column="20">&gt;=<pos:position pos:line="2153" pos:column="25"/></operator> <name><name pos:line="2153" pos:column="23">md<pos:position pos:line="2153" pos:column="25"/></name><operator pos:line="2153" pos:column="25">-&gt;<pos:position pos:line="2153" pos:column="30"/></operator><name pos:line="2153" pos:column="27">end_subject<pos:position pos:line="2153" pos:column="38"/></name></name> <operator pos:line="2153" pos:column="39">||<pos:position pos:line="2153" pos:column="41"/></operator>
             <operator pos:line="2154" pos:column="14">*<pos:position pos:line="2154" pos:column="15"/></operator><name pos:line="2154" pos:column="15">eptr<pos:position pos:line="2154" pos:column="19"/></name> <operator pos:line="2154" pos:column="20">&gt;=<pos:position pos:line="2154" pos:column="25"/></operator> <literal type="number" pos:line="2154" pos:column="23">128<pos:position pos:line="2154" pos:column="26"/></literal> <operator pos:line="2154" pos:column="27">||<pos:position pos:line="2154" pos:column="29"/></operator> <operator pos:line="2154" pos:column="30">(<pos:position pos:line="2154" pos:column="31"/></operator><name><name pos:line="2154" pos:column="31">md<pos:position pos:line="2154" pos:column="33"/></name><operator pos:line="2154" pos:column="33">-&gt;<pos:position pos:line="2154" pos:column="38"/></operator><name pos:line="2154" pos:column="35">ctypes<pos:position pos:line="2154" pos:column="41"/></name><index pos:line="2154" pos:column="41">[<expr><operator pos:line="2154" pos:column="42">*<pos:position pos:line="2154" pos:column="43"/></operator><name pos:line="2154" pos:column="43">eptr<pos:position pos:line="2154" pos:column="47"/></name><operator pos:line="2154" pos:column="47">++<pos:position pos:line="2154" pos:column="49"/></operator></expr>]<pos:position pos:line="2154" pos:column="50"/></index></name> <operator pos:line="2154" pos:column="51">&amp;<pos:position pos:line="2154" pos:column="56"/></operator> <name pos:line="2154" pos:column="53">ctype_digit<pos:position pos:line="2154" pos:column="64"/></name><operator pos:line="2154" pos:column="64">)<pos:position pos:line="2154" pos:column="65"/></operator> <operator pos:line="2154" pos:column="66">==<pos:position pos:line="2154" pos:column="68"/></operator> <literal type="number" pos:line="2154" pos:column="69">0<pos:position pos:line="2154" pos:column="70"/></literal></expr>)<pos:position pos:line="2154" pos:column="71"/></condition><then pos:line="2154" pos:column="71">
            <block type="pseudo"><expr_stmt><expr><call><name pos:line="2155" pos:column="13">RRETURN<pos:position pos:line="2155" pos:column="20"/></name><argument_list pos:line="2155" pos:column="20">(<argument><expr><name pos:line="2155" pos:column="21">MATCH_NOMATCH<pos:position pos:line="2155" pos:column="34"/></name></expr></argument>)<pos:position pos:line="2155" pos:column="35"/></argument_list></call></expr>;<pos:position pos:line="2155" pos:column="36"/></expr_stmt></block></then></if>
          <comment type="block" pos:line="2156" pos:column="11">/* No need to skip more bytes - we know it's a 1-byte character */</comment>
          }<pos:position pos:line="2157" pos:column="12"/></block></for>
        <break pos:line="2158" pos:column="9">break;<pos:position pos:line="2158" pos:column="15"/></break>

        <case pos:line="2160" pos:column="9">case <expr><name pos:line="2160" pos:column="14">OP_NOT_WHITESPACE<pos:position pos:line="2160" pos:column="31"/></name></expr>:<pos:position pos:line="2160" pos:column="32"/></case>
        <for pos:line="2161" pos:column="9">for <control pos:line="2161" pos:column="13">(<init><expr><name pos:line="2161" pos:column="14">i<pos:position pos:line="2161" pos:column="15"/></name> <operator pos:line="2161" pos:column="16">=<pos:position pos:line="2161" pos:column="17"/></operator> <literal type="number" pos:line="2161" pos:column="18">1<pos:position pos:line="2161" pos:column="19"/></literal></expr>;<pos:position pos:line="2161" pos:column="20"/></init> <condition><expr><name pos:line="2161" pos:column="21">i<pos:position pos:line="2161" pos:column="22"/></name> <operator pos:line="2161" pos:column="23">&lt;=<pos:position pos:line="2161" pos:column="28"/></operator> <name pos:line="2161" pos:column="26">min<pos:position pos:line="2161" pos:column="29"/></name></expr>;<pos:position pos:line="2161" pos:column="30"/></condition> <incr><expr><name pos:line="2161" pos:column="31">i<pos:position pos:line="2161" pos:column="32"/></name><operator pos:line="2161" pos:column="32">++<pos:position pos:line="2161" pos:column="34"/></operator></expr></incr>)<pos:position pos:line="2161" pos:column="35"/></control>
          <block pos:line="2162" pos:column="11">{
          <if pos:line="2163" pos:column="11">if <condition pos:line="2163" pos:column="14">(<expr><name pos:line="2163" pos:column="15">eptr<pos:position pos:line="2163" pos:column="19"/></name> <operator pos:line="2163" pos:column="20">&gt;=<pos:position pos:line="2163" pos:column="25"/></operator> <name><name pos:line="2163" pos:column="23">md<pos:position pos:line="2163" pos:column="25"/></name><operator pos:line="2163" pos:column="25">-&gt;<pos:position pos:line="2163" pos:column="30"/></operator><name pos:line="2163" pos:column="27">end_subject<pos:position pos:line="2163" pos:column="38"/></name></name> <operator pos:line="2163" pos:column="39">||<pos:position pos:line="2163" pos:column="41"/></operator>
             <operator pos:line="2164" pos:column="14">(<pos:position pos:line="2164" pos:column="15"/></operator><operator pos:line="2164" pos:column="15">*<pos:position pos:line="2164" pos:column="16"/></operator><name pos:line="2164" pos:column="16">eptr<pos:position pos:line="2164" pos:column="20"/></name> <operator pos:line="2164" pos:column="21">&lt;<pos:position pos:line="2164" pos:column="25"/></operator> <literal type="number" pos:line="2164" pos:column="23">128<pos:position pos:line="2164" pos:column="26"/></literal> <operator pos:line="2164" pos:column="27">&amp;&amp;<pos:position pos:line="2164" pos:column="37"/></operator> <operator pos:line="2164" pos:column="30">(<pos:position pos:line="2164" pos:column="31"/></operator><name><name pos:line="2164" pos:column="31">md<pos:position pos:line="2164" pos:column="33"/></name><operator pos:line="2164" pos:column="33">-&gt;<pos:position pos:line="2164" pos:column="38"/></operator><name pos:line="2164" pos:column="35">ctypes<pos:position pos:line="2164" pos:column="41"/></name><index pos:line="2164" pos:column="41">[<expr><operator pos:line="2164" pos:column="42">*<pos:position pos:line="2164" pos:column="43"/></operator><name pos:line="2164" pos:column="43">eptr<pos:position pos:line="2164" pos:column="47"/></name><operator pos:line="2164" pos:column="47">++<pos:position pos:line="2164" pos:column="49"/></operator></expr>]<pos:position pos:line="2164" pos:column="50"/></index></name> <operator pos:line="2164" pos:column="51">&amp;<pos:position pos:line="2164" pos:column="56"/></operator> <name pos:line="2164" pos:column="53">ctype_space<pos:position pos:line="2164" pos:column="64"/></name><operator pos:line="2164" pos:column="64">)<pos:position pos:line="2164" pos:column="65"/></operator> <operator pos:line="2164" pos:column="66">!=<pos:position pos:line="2164" pos:column="68"/></operator> <literal type="number" pos:line="2164" pos:column="69">0<pos:position pos:line="2164" pos:column="70"/></literal><operator pos:line="2164" pos:column="70">)<pos:position pos:line="2164" pos:column="71"/></operator></expr>)<pos:position pos:line="2164" pos:column="72"/></condition><then pos:line="2164" pos:column="72">
            <block type="pseudo"><expr_stmt><expr><call><name pos:line="2165" pos:column="13">RRETURN<pos:position pos:line="2165" pos:column="20"/></name><argument_list pos:line="2165" pos:column="20">(<argument><expr><name pos:line="2165" pos:column="21">MATCH_NOMATCH<pos:position pos:line="2165" pos:column="34"/></name></expr></argument>)<pos:position pos:line="2165" pos:column="35"/></argument_list></call></expr>;<pos:position pos:line="2165" pos:column="36"/></expr_stmt></block></then></if>
          <while pos:line="2166" pos:column="11">while <condition pos:line="2166" pos:column="17">(<expr><name pos:line="2166" pos:column="18">eptr<pos:position pos:line="2166" pos:column="22"/></name> <operator pos:line="2166" pos:column="23">&lt;<pos:position pos:line="2166" pos:column="27"/></operator> <name><name pos:line="2166" pos:column="25">md<pos:position pos:line="2166" pos:column="27"/></name><operator pos:line="2166" pos:column="27">-&gt;<pos:position pos:line="2166" pos:column="32"/></operator><name pos:line="2166" pos:column="29">end_subject<pos:position pos:line="2166" pos:column="40"/></name></name> <operator pos:line="2166" pos:column="41">&amp;&amp;<pos:position pos:line="2166" pos:column="51"/></operator> <operator pos:line="2166" pos:column="44">(<pos:position pos:line="2166" pos:column="45"/></operator><operator pos:line="2166" pos:column="45">*<pos:position pos:line="2166" pos:column="46"/></operator><name pos:line="2166" pos:column="46">eptr<pos:position pos:line="2166" pos:column="50"/></name> <operator pos:line="2166" pos:column="51">&amp;<pos:position pos:line="2166" pos:column="56"/></operator> <literal type="number" pos:line="2166" pos:column="53">0xc0<pos:position pos:line="2166" pos:column="57"/></literal><operator pos:line="2166" pos:column="57">)<pos:position pos:line="2166" pos:column="58"/></operator> <operator pos:line="2166" pos:column="59">==<pos:position pos:line="2166" pos:column="61"/></operator> <literal type="number" pos:line="2166" pos:column="62">0x80<pos:position pos:line="2166" pos:column="66"/></literal></expr>)<pos:position pos:line="2166" pos:column="67"/></condition> <block type="pseudo"><expr_stmt><expr><name pos:line="2166" pos:column="68">eptr<pos:position pos:line="2166" pos:column="72"/></name><operator pos:line="2166" pos:column="72">++<pos:position pos:line="2166" pos:column="74"/></operator></expr>;<pos:position pos:line="2166" pos:column="75"/></expr_stmt></block></while>
          }<pos:position pos:line="2167" pos:column="12"/></block></for>
        <break pos:line="2168" pos:column="9">break;<pos:position pos:line="2168" pos:column="15"/></break>

        <case pos:line="2170" pos:column="9">case <expr><name pos:line="2170" pos:column="14">OP_WHITESPACE<pos:position pos:line="2170" pos:column="27"/></name></expr>:<pos:position pos:line="2170" pos:column="28"/></case>
        <for pos:line="2171" pos:column="9">for <control pos:line="2171" pos:column="13">(<init><expr><name pos:line="2171" pos:column="14">i<pos:position pos:line="2171" pos:column="15"/></name> <operator pos:line="2171" pos:column="16">=<pos:position pos:line="2171" pos:column="17"/></operator> <literal type="number" pos:line="2171" pos:column="18">1<pos:position pos:line="2171" pos:column="19"/></literal></expr>;<pos:position pos:line="2171" pos:column="20"/></init> <condition><expr><name pos:line="2171" pos:column="21">i<pos:position pos:line="2171" pos:column="22"/></name> <operator pos:line="2171" pos:column="23">&lt;=<pos:position pos:line="2171" pos:column="28"/></operator> <name pos:line="2171" pos:column="26">min<pos:position pos:line="2171" pos:column="29"/></name></expr>;<pos:position pos:line="2171" pos:column="30"/></condition> <incr><expr><name pos:line="2171" pos:column="31">i<pos:position pos:line="2171" pos:column="32"/></name><operator pos:line="2171" pos:column="32">++<pos:position pos:line="2171" pos:column="34"/></operator></expr></incr>)<pos:position pos:line="2171" pos:column="35"/></control>
          <block pos:line="2172" pos:column="11">{
          <if pos:line="2173" pos:column="11">if <condition pos:line="2173" pos:column="14">(<expr><name pos:line="2173" pos:column="15">eptr<pos:position pos:line="2173" pos:column="19"/></name> <operator pos:line="2173" pos:column="20">&gt;=<pos:position pos:line="2173" pos:column="25"/></operator> <name><name pos:line="2173" pos:column="23">md<pos:position pos:line="2173" pos:column="25"/></name><operator pos:line="2173" pos:column="25">-&gt;<pos:position pos:line="2173" pos:column="30"/></operator><name pos:line="2173" pos:column="27">end_subject<pos:position pos:line="2173" pos:column="38"/></name></name> <operator pos:line="2173" pos:column="39">||<pos:position pos:line="2173" pos:column="41"/></operator>
             <operator pos:line="2174" pos:column="14">*<pos:position pos:line="2174" pos:column="15"/></operator><name pos:line="2174" pos:column="15">eptr<pos:position pos:line="2174" pos:column="19"/></name> <operator pos:line="2174" pos:column="20">&gt;=<pos:position pos:line="2174" pos:column="25"/></operator> <literal type="number" pos:line="2174" pos:column="23">128<pos:position pos:line="2174" pos:column="26"/></literal> <operator pos:line="2174" pos:column="27">||<pos:position pos:line="2174" pos:column="29"/></operator> <operator pos:line="2174" pos:column="30">(<pos:position pos:line="2174" pos:column="31"/></operator><name><name pos:line="2174" pos:column="31">md<pos:position pos:line="2174" pos:column="33"/></name><operator pos:line="2174" pos:column="33">-&gt;<pos:position pos:line="2174" pos:column="38"/></operator><name pos:line="2174" pos:column="35">ctypes<pos:position pos:line="2174" pos:column="41"/></name><index pos:line="2174" pos:column="41">[<expr><operator pos:line="2174" pos:column="42">*<pos:position pos:line="2174" pos:column="43"/></operator><name pos:line="2174" pos:column="43">eptr<pos:position pos:line="2174" pos:column="47"/></name><operator pos:line="2174" pos:column="47">++<pos:position pos:line="2174" pos:column="49"/></operator></expr>]<pos:position pos:line="2174" pos:column="50"/></index></name> <operator pos:line="2174" pos:column="51">&amp;<pos:position pos:line="2174" pos:column="56"/></operator> <name pos:line="2174" pos:column="53">ctype_space<pos:position pos:line="2174" pos:column="64"/></name><operator pos:line="2174" pos:column="64">)<pos:position pos:line="2174" pos:column="65"/></operator> <operator pos:line="2174" pos:column="66">==<pos:position pos:line="2174" pos:column="68"/></operator> <literal type="number" pos:line="2174" pos:column="69">0<pos:position pos:line="2174" pos:column="70"/></literal></expr>)<pos:position pos:line="2174" pos:column="71"/></condition><then pos:line="2174" pos:column="71">
            <block type="pseudo"><expr_stmt><expr><call><name pos:line="2175" pos:column="13">RRETURN<pos:position pos:line="2175" pos:column="20"/></name><argument_list pos:line="2175" pos:column="20">(<argument><expr><name pos:line="2175" pos:column="21">MATCH_NOMATCH<pos:position pos:line="2175" pos:column="34"/></name></expr></argument>)<pos:position pos:line="2175" pos:column="35"/></argument_list></call></expr>;<pos:position pos:line="2175" pos:column="36"/></expr_stmt></block></then></if>
          <comment type="block" pos:line="2176" pos:column="11">/* No need to skip more bytes - we know it's a 1-byte character */</comment>
          }<pos:position pos:line="2177" pos:column="12"/></block></for>
        <break pos:line="2178" pos:column="9">break;<pos:position pos:line="2178" pos:column="15"/></break>

        <case pos:line="2180" pos:column="9">case <expr><name pos:line="2180" pos:column="14">OP_NOT_WORDCHAR<pos:position pos:line="2180" pos:column="29"/></name></expr>:<pos:position pos:line="2180" pos:column="30"/></case>
        <for pos:line="2181" pos:column="9">for <control pos:line="2181" pos:column="13">(<init><expr><name pos:line="2181" pos:column="14">i<pos:position pos:line="2181" pos:column="15"/></name> <operator pos:line="2181" pos:column="16">=<pos:position pos:line="2181" pos:column="17"/></operator> <literal type="number" pos:line="2181" pos:column="18">1<pos:position pos:line="2181" pos:column="19"/></literal></expr>;<pos:position pos:line="2181" pos:column="20"/></init> <condition><expr><name pos:line="2181" pos:column="21">i<pos:position pos:line="2181" pos:column="22"/></name> <operator pos:line="2181" pos:column="23">&lt;=<pos:position pos:line="2181" pos:column="28"/></operator> <name pos:line="2181" pos:column="26">min<pos:position pos:line="2181" pos:column="29"/></name></expr>;<pos:position pos:line="2181" pos:column="30"/></condition> <incr><expr><name pos:line="2181" pos:column="31">i<pos:position pos:line="2181" pos:column="32"/></name><operator pos:line="2181" pos:column="32">++<pos:position pos:line="2181" pos:column="34"/></operator></expr></incr>)<pos:position pos:line="2181" pos:column="35"/></control>
          <block pos:line="2182" pos:column="11">{
          <if pos:line="2183" pos:column="11">if <condition pos:line="2183" pos:column="14">(<expr><name pos:line="2183" pos:column="15">eptr<pos:position pos:line="2183" pos:column="19"/></name> <operator pos:line="2183" pos:column="20">&gt;=<pos:position pos:line="2183" pos:column="25"/></operator> <name><name pos:line="2183" pos:column="23">md<pos:position pos:line="2183" pos:column="25"/></name><operator pos:line="2183" pos:column="25">-&gt;<pos:position pos:line="2183" pos:column="30"/></operator><name pos:line="2183" pos:column="27">end_subject<pos:position pos:line="2183" pos:column="38"/></name></name> <operator pos:line="2183" pos:column="39">||<pos:position pos:line="2183" pos:column="41"/></operator>
             <operator pos:line="2184" pos:column="14">(<pos:position pos:line="2184" pos:column="15"/></operator><operator pos:line="2184" pos:column="15">*<pos:position pos:line="2184" pos:column="16"/></operator><name pos:line="2184" pos:column="16">eptr<pos:position pos:line="2184" pos:column="20"/></name> <operator pos:line="2184" pos:column="21">&lt;<pos:position pos:line="2184" pos:column="25"/></operator> <literal type="number" pos:line="2184" pos:column="23">128<pos:position pos:line="2184" pos:column="26"/></literal> <operator pos:line="2184" pos:column="27">&amp;&amp;<pos:position pos:line="2184" pos:column="37"/></operator> <operator pos:line="2184" pos:column="30">(<pos:position pos:line="2184" pos:column="31"/></operator><name><name pos:line="2184" pos:column="31">md<pos:position pos:line="2184" pos:column="33"/></name><operator pos:line="2184" pos:column="33">-&gt;<pos:position pos:line="2184" pos:column="38"/></operator><name pos:line="2184" pos:column="35">ctypes<pos:position pos:line="2184" pos:column="41"/></name><index pos:line="2184" pos:column="41">[<expr><operator pos:line="2184" pos:column="42">*<pos:position pos:line="2184" pos:column="43"/></operator><name pos:line="2184" pos:column="43">eptr<pos:position pos:line="2184" pos:column="47"/></name><operator pos:line="2184" pos:column="47">++<pos:position pos:line="2184" pos:column="49"/></operator></expr>]<pos:position pos:line="2184" pos:column="50"/></index></name> <operator pos:line="2184" pos:column="51">&amp;<pos:position pos:line="2184" pos:column="56"/></operator> <name pos:line="2184" pos:column="53">ctype_word<pos:position pos:line="2184" pos:column="63"/></name><operator pos:line="2184" pos:column="63">)<pos:position pos:line="2184" pos:column="64"/></operator> <operator pos:line="2184" pos:column="65">!=<pos:position pos:line="2184" pos:column="67"/></operator> <literal type="number" pos:line="2184" pos:column="68">0<pos:position pos:line="2184" pos:column="69"/></literal><operator pos:line="2184" pos:column="69">)<pos:position pos:line="2184" pos:column="70"/></operator></expr>)<pos:position pos:line="2184" pos:column="71"/></condition><then pos:line="2184" pos:column="71">
            <block type="pseudo"><expr_stmt><expr><call><name pos:line="2185" pos:column="13">RRETURN<pos:position pos:line="2185" pos:column="20"/></name><argument_list pos:line="2185" pos:column="20">(<argument><expr><name pos:line="2185" pos:column="21">MATCH_NOMATCH<pos:position pos:line="2185" pos:column="34"/></name></expr></argument>)<pos:position pos:line="2185" pos:column="35"/></argument_list></call></expr>;<pos:position pos:line="2185" pos:column="36"/></expr_stmt></block></then></if>
          <while pos:line="2186" pos:column="11">while <condition pos:line="2186" pos:column="17">(<expr><name pos:line="2186" pos:column="18">eptr<pos:position pos:line="2186" pos:column="22"/></name> <operator pos:line="2186" pos:column="23">&lt;<pos:position pos:line="2186" pos:column="27"/></operator> <name><name pos:line="2186" pos:column="25">md<pos:position pos:line="2186" pos:column="27"/></name><operator pos:line="2186" pos:column="27">-&gt;<pos:position pos:line="2186" pos:column="32"/></operator><name pos:line="2186" pos:column="29">end_subject<pos:position pos:line="2186" pos:column="40"/></name></name> <operator pos:line="2186" pos:column="41">&amp;&amp;<pos:position pos:line="2186" pos:column="51"/></operator> <operator pos:line="2186" pos:column="44">(<pos:position pos:line="2186" pos:column="45"/></operator><operator pos:line="2186" pos:column="45">*<pos:position pos:line="2186" pos:column="46"/></operator><name pos:line="2186" pos:column="46">eptr<pos:position pos:line="2186" pos:column="50"/></name> <operator pos:line="2186" pos:column="51">&amp;<pos:position pos:line="2186" pos:column="56"/></operator> <literal type="number" pos:line="2186" pos:column="53">0xc0<pos:position pos:line="2186" pos:column="57"/></literal><operator pos:line="2186" pos:column="57">)<pos:position pos:line="2186" pos:column="58"/></operator> <operator pos:line="2186" pos:column="59">==<pos:position pos:line="2186" pos:column="61"/></operator> <literal type="number" pos:line="2186" pos:column="62">0x80<pos:position pos:line="2186" pos:column="66"/></literal></expr>)<pos:position pos:line="2186" pos:column="67"/></condition> <block type="pseudo"><expr_stmt><expr><name pos:line="2186" pos:column="68">eptr<pos:position pos:line="2186" pos:column="72"/></name><operator pos:line="2186" pos:column="72">++<pos:position pos:line="2186" pos:column="74"/></operator></expr>;<pos:position pos:line="2186" pos:column="75"/></expr_stmt></block></while>
          }<pos:position pos:line="2187" pos:column="12"/></block></for>
        <break pos:line="2188" pos:column="9">break;<pos:position pos:line="2188" pos:column="15"/></break>

        <case pos:line="2190" pos:column="9">case <expr><name pos:line="2190" pos:column="14">OP_WORDCHAR<pos:position pos:line="2190" pos:column="25"/></name></expr>:<pos:position pos:line="2190" pos:column="26"/></case>
        <for pos:line="2191" pos:column="9">for <control pos:line="2191" pos:column="13">(<init><expr><name pos:line="2191" pos:column="14">i<pos:position pos:line="2191" pos:column="15"/></name> <operator pos:line="2191" pos:column="16">=<pos:position pos:line="2191" pos:column="17"/></operator> <literal type="number" pos:line="2191" pos:column="18">1<pos:position pos:line="2191" pos:column="19"/></literal></expr>;<pos:position pos:line="2191" pos:column="20"/></init> <condition><expr><name pos:line="2191" pos:column="21">i<pos:position pos:line="2191" pos:column="22"/></name> <operator pos:line="2191" pos:column="23">&lt;=<pos:position pos:line="2191" pos:column="28"/></operator> <name pos:line="2191" pos:column="26">min<pos:position pos:line="2191" pos:column="29"/></name></expr>;<pos:position pos:line="2191" pos:column="30"/></condition> <incr><expr><name pos:line="2191" pos:column="31">i<pos:position pos:line="2191" pos:column="32"/></name><operator pos:line="2191" pos:column="32">++<pos:position pos:line="2191" pos:column="34"/></operator></expr></incr>)<pos:position pos:line="2191" pos:column="35"/></control>
          <block pos:line="2192" pos:column="11">{
          <if pos:line="2193" pos:column="11">if <condition pos:line="2193" pos:column="14">(<expr><name pos:line="2193" pos:column="15">eptr<pos:position pos:line="2193" pos:column="19"/></name> <operator pos:line="2193" pos:column="20">&gt;=<pos:position pos:line="2193" pos:column="25"/></operator> <name><name pos:line="2193" pos:column="23">md<pos:position pos:line="2193" pos:column="25"/></name><operator pos:line="2193" pos:column="25">-&gt;<pos:position pos:line="2193" pos:column="30"/></operator><name pos:line="2193" pos:column="27">end_subject<pos:position pos:line="2193" pos:column="38"/></name></name> <operator pos:line="2193" pos:column="39">||<pos:position pos:line="2193" pos:column="41"/></operator>
             <operator pos:line="2194" pos:column="14">*<pos:position pos:line="2194" pos:column="15"/></operator><name pos:line="2194" pos:column="15">eptr<pos:position pos:line="2194" pos:column="19"/></name> <operator pos:line="2194" pos:column="20">&gt;=<pos:position pos:line="2194" pos:column="25"/></operator> <literal type="number" pos:line="2194" pos:column="23">128<pos:position pos:line="2194" pos:column="26"/></literal> <operator pos:line="2194" pos:column="27">||<pos:position pos:line="2194" pos:column="29"/></operator> <operator pos:line="2194" pos:column="30">(<pos:position pos:line="2194" pos:column="31"/></operator><name><name pos:line="2194" pos:column="31">md<pos:position pos:line="2194" pos:column="33"/></name><operator pos:line="2194" pos:column="33">-&gt;<pos:position pos:line="2194" pos:column="38"/></operator><name pos:line="2194" pos:column="35">ctypes<pos:position pos:line="2194" pos:column="41"/></name><index pos:line="2194" pos:column="41">[<expr><operator pos:line="2194" pos:column="42">*<pos:position pos:line="2194" pos:column="43"/></operator><name pos:line="2194" pos:column="43">eptr<pos:position pos:line="2194" pos:column="47"/></name><operator pos:line="2194" pos:column="47">++<pos:position pos:line="2194" pos:column="49"/></operator></expr>]<pos:position pos:line="2194" pos:column="50"/></index></name> <operator pos:line="2194" pos:column="51">&amp;<pos:position pos:line="2194" pos:column="56"/></operator> <name pos:line="2194" pos:column="53">ctype_word<pos:position pos:line="2194" pos:column="63"/></name><operator pos:line="2194" pos:column="63">)<pos:position pos:line="2194" pos:column="64"/></operator> <operator pos:line="2194" pos:column="65">==<pos:position pos:line="2194" pos:column="67"/></operator> <literal type="number" pos:line="2194" pos:column="68">0<pos:position pos:line="2194" pos:column="69"/></literal></expr>)<pos:position pos:line="2194" pos:column="70"/></condition><then pos:line="2194" pos:column="70">
            <block type="pseudo"><expr_stmt><expr><call><name pos:line="2195" pos:column="13">RRETURN<pos:position pos:line="2195" pos:column="20"/></name><argument_list pos:line="2195" pos:column="20">(<argument><expr><name pos:line="2195" pos:column="21">MATCH_NOMATCH<pos:position pos:line="2195" pos:column="34"/></name></expr></argument>)<pos:position pos:line="2195" pos:column="35"/></argument_list></call></expr>;<pos:position pos:line="2195" pos:column="36"/></expr_stmt></block></then></if>
          <comment type="block" pos:line="2196" pos:column="11">/* No need to skip more bytes - we know it's a 1-byte character */</comment>
          }<pos:position pos:line="2197" pos:column="12"/></block></for>
        <break pos:line="2198" pos:column="9">break;<pos:position pos:line="2198" pos:column="15"/></break>

        <default pos:line="2200" pos:column="9">default:<pos:position pos:line="2200" pos:column="17"/></default>
        <expr_stmt><expr><call><name pos:line="2201" pos:column="9">RRETURN<pos:position pos:line="2201" pos:column="16"/></name><argument_list pos:line="2201" pos:column="16">(<argument><expr><name pos:line="2201" pos:column="17">PCRE_ERROR_INTERNAL<pos:position pos:line="2201" pos:column="36"/></name></expr></argument>)<pos:position pos:line="2201" pos:column="37"/></argument_list></call></expr>;<pos:position pos:line="2201" pos:column="38"/></expr_stmt>
        }<pos:position pos:line="2202" pos:column="10"/></block></switch></block></then></if></elseif>  <comment type="block" pos:line="2202" pos:column="12">/* End switch(ctype) */</comment>

      <else pos:line="2204" pos:column="7">else
<cpp:endif pos:line="2205" pos:column="1">#<cpp:directive pos:line="2205" pos:column="2">endif<pos:position pos:line="2205" pos:column="7"/></cpp:directive></cpp:endif>     <comment type="block" pos:line="2205" pos:column="12">/* SUPPORT_UTF8 */</comment>

      <comment type="block" pos:line="2207" pos:column="7">/* Code for the non-UTF-8 case for minimum matching of operators other
      than OP_PROP and OP_NOTPROP. */</comment>

      <block type="pseudo"><switch pos:line="2210" pos:column="7">switch<condition pos:line="2210" pos:column="13">(<expr><name pos:line="2210" pos:column="14">ctype<pos:position pos:line="2210" pos:column="19"/></name></expr>)<pos:position pos:line="2210" pos:column="20"/></condition>
        <block pos:line="2211" pos:column="9">{
        <case pos:line="2212" pos:column="9">case <expr><name pos:line="2212" pos:column="14">OP_ANY<pos:position pos:line="2212" pos:column="20"/></name></expr>:<pos:position pos:line="2212" pos:column="21"/></case>
        <if pos:line="2213" pos:column="9">if <condition pos:line="2213" pos:column="12">(<expr><operator pos:line="2213" pos:column="13">(<pos:position pos:line="2213" pos:column="14"/></operator><name pos:line="2213" pos:column="14">ims<pos:position pos:line="2213" pos:column="17"/></name> <operator pos:line="2213" pos:column="18">&amp;<pos:position pos:line="2213" pos:column="23"/></operator> <name pos:line="2213" pos:column="20">PCRE_DOTALL<pos:position pos:line="2213" pos:column="31"/></name><operator pos:line="2213" pos:column="31">)<pos:position pos:line="2213" pos:column="32"/></operator> <operator pos:line="2213" pos:column="33">==<pos:position pos:line="2213" pos:column="35"/></operator> <literal type="number" pos:line="2213" pos:column="36">0<pos:position pos:line="2213" pos:column="37"/></literal></expr>)<pos:position pos:line="2213" pos:column="38"/></condition><then pos:line="2213" pos:column="38">
          <block pos:line="2214" pos:column="11">{
          <for pos:line="2215" pos:column="11">for <control pos:line="2215" pos:column="15">(<init><expr><name pos:line="2215" pos:column="16">i<pos:position pos:line="2215" pos:column="17"/></name> <operator pos:line="2215" pos:column="18">=<pos:position pos:line="2215" pos:column="19"/></operator> <literal type="number" pos:line="2215" pos:column="20">1<pos:position pos:line="2215" pos:column="21"/></literal></expr>;<pos:position pos:line="2215" pos:column="22"/></init> <condition><expr><name pos:line="2215" pos:column="23">i<pos:position pos:line="2215" pos:column="24"/></name> <operator pos:line="2215" pos:column="25">&lt;=<pos:position pos:line="2215" pos:column="30"/></operator> <name pos:line="2215" pos:column="28">min<pos:position pos:line="2215" pos:column="31"/></name></expr>;<pos:position pos:line="2215" pos:column="32"/></condition> <incr><expr><name pos:line="2215" pos:column="33">i<pos:position pos:line="2215" pos:column="34"/></name><operator pos:line="2215" pos:column="34">++<pos:position pos:line="2215" pos:column="36"/></operator></expr></incr>)<pos:position pos:line="2215" pos:column="37"/></control>
            <block type="pseudo"><if pos:line="2216" pos:column="13">if <condition pos:line="2216" pos:column="16">(<expr><operator pos:line="2216" pos:column="17">*<pos:position pos:line="2216" pos:column="18"/></operator><name pos:line="2216" pos:column="18">eptr<pos:position pos:line="2216" pos:column="22"/></name><operator pos:line="2216" pos:column="22">++<pos:position pos:line="2216" pos:column="24"/></operator> <operator pos:line="2216" pos:column="25">==<pos:position pos:line="2216" pos:column="27"/></operator> <name pos:line="2216" pos:column="28">NEWLINE<pos:position pos:line="2216" pos:column="35"/></name></expr>)<pos:position pos:line="2216" pos:column="36"/></condition><then pos:line="2216" pos:column="36"> <block type="pseudo"><expr_stmt><expr><call><name pos:line="2216" pos:column="37">RRETURN<pos:position pos:line="2216" pos:column="44"/></name><argument_list pos:line="2216" pos:column="44">(<argument><expr><name pos:line="2216" pos:column="45">MATCH_NOMATCH<pos:position pos:line="2216" pos:column="58"/></name></expr></argument>)<pos:position pos:line="2216" pos:column="59"/></argument_list></call></expr>;<pos:position pos:line="2216" pos:column="60"/></expr_stmt></block></then></if></block></for>
          }<pos:position pos:line="2217" pos:column="12"/></block></then>
        <else pos:line="2218" pos:column="9">else <block type="pseudo"><expr_stmt><expr><name pos:line="2218" pos:column="14">eptr<pos:position pos:line="2218" pos:column="18"/></name> <operator pos:line="2218" pos:column="19">+=<pos:position pos:line="2218" pos:column="21"/></operator> <name pos:line="2218" pos:column="22">min<pos:position pos:line="2218" pos:column="25"/></name></expr>;<pos:position pos:line="2218" pos:column="26"/></expr_stmt></block></else></if>
        <break pos:line="2219" pos:column="9">break;<pos:position pos:line="2219" pos:column="15"/></break>

        <case pos:line="2221" pos:column="9">case <expr><name pos:line="2221" pos:column="14">OP_ANYBYTE<pos:position pos:line="2221" pos:column="24"/></name></expr>:<pos:position pos:line="2221" pos:column="25"/></case>
        <expr_stmt><expr><name pos:line="2222" pos:column="9">eptr<pos:position pos:line="2222" pos:column="13"/></name> <operator pos:line="2222" pos:column="14">+=<pos:position pos:line="2222" pos:column="16"/></operator> <name pos:line="2222" pos:column="17">min<pos:position pos:line="2222" pos:column="20"/></name></expr>;<pos:position pos:line="2222" pos:column="21"/></expr_stmt>
        <break pos:line="2223" pos:column="9">break;<pos:position pos:line="2223" pos:column="15"/></break>

        <case pos:line="2225" pos:column="9">case <expr><name pos:line="2225" pos:column="14">OP_NOT_DIGIT<pos:position pos:line="2225" pos:column="26"/></name></expr>:<pos:position pos:line="2225" pos:column="27"/></case>
        <for pos:line="2226" pos:column="9">for <control pos:line="2226" pos:column="13">(<init><expr><name pos:line="2226" pos:column="14">i<pos:position pos:line="2226" pos:column="15"/></name> <operator pos:line="2226" pos:column="16">=<pos:position pos:line="2226" pos:column="17"/></operator> <literal type="number" pos:line="2226" pos:column="18">1<pos:position pos:line="2226" pos:column="19"/></literal></expr>;<pos:position pos:line="2226" pos:column="20"/></init> <condition><expr><name pos:line="2226" pos:column="21">i<pos:position pos:line="2226" pos:column="22"/></name> <operator pos:line="2226" pos:column="23">&lt;=<pos:position pos:line="2226" pos:column="28"/></operator> <name pos:line="2226" pos:column="26">min<pos:position pos:line="2226" pos:column="29"/></name></expr>;<pos:position pos:line="2226" pos:column="30"/></condition> <incr><expr><name pos:line="2226" pos:column="31">i<pos:position pos:line="2226" pos:column="32"/></name><operator pos:line="2226" pos:column="32">++<pos:position pos:line="2226" pos:column="34"/></operator></expr></incr>)<pos:position pos:line="2226" pos:column="35"/></control>
          <block type="pseudo"><if pos:line="2227" pos:column="11">if <condition pos:line="2227" pos:column="14">(<expr><operator pos:line="2227" pos:column="15">(<pos:position pos:line="2227" pos:column="16"/></operator><name><name pos:line="2227" pos:column="16">md<pos:position pos:line="2227" pos:column="18"/></name><operator pos:line="2227" pos:column="18">-&gt;<pos:position pos:line="2227" pos:column="23"/></operator><name pos:line="2227" pos:column="20">ctypes<pos:position pos:line="2227" pos:column="26"/></name><index pos:line="2227" pos:column="26">[<expr><operator pos:line="2227" pos:column="27">*<pos:position pos:line="2227" pos:column="28"/></operator><name pos:line="2227" pos:column="28">eptr<pos:position pos:line="2227" pos:column="32"/></name><operator pos:line="2227" pos:column="32">++<pos:position pos:line="2227" pos:column="34"/></operator></expr>]<pos:position pos:line="2227" pos:column="35"/></index></name> <operator pos:line="2227" pos:column="36">&amp;<pos:position pos:line="2227" pos:column="41"/></operator> <name pos:line="2227" pos:column="38">ctype_digit<pos:position pos:line="2227" pos:column="49"/></name><operator pos:line="2227" pos:column="49">)<pos:position pos:line="2227" pos:column="50"/></operator> <operator pos:line="2227" pos:column="51">!=<pos:position pos:line="2227" pos:column="53"/></operator> <literal type="number" pos:line="2227" pos:column="54">0<pos:position pos:line="2227" pos:column="55"/></literal></expr>)<pos:position pos:line="2227" pos:column="56"/></condition><then pos:line="2227" pos:column="56"> <block type="pseudo"><expr_stmt><expr><call><name pos:line="2227" pos:column="57">RRETURN<pos:position pos:line="2227" pos:column="64"/></name><argument_list pos:line="2227" pos:column="64">(<argument><expr><name pos:line="2227" pos:column="65">MATCH_NOMATCH<pos:position pos:line="2227" pos:column="78"/></name></expr></argument>)<pos:position pos:line="2227" pos:column="79"/></argument_list></call></expr>;<pos:position pos:line="2227" pos:column="80"/></expr_stmt></block></then></if></block></for>
        <break pos:line="2228" pos:column="9">break;<pos:position pos:line="2228" pos:column="15"/></break>

        <case pos:line="2230" pos:column="9">case <expr><name pos:line="2230" pos:column="14">OP_DIGIT<pos:position pos:line="2230" pos:column="22"/></name></expr>:<pos:position pos:line="2230" pos:column="23"/></case>
        <for pos:line="2231" pos:column="9">for <control pos:line="2231" pos:column="13">(<init><expr><name pos:line="2231" pos:column="14">i<pos:position pos:line="2231" pos:column="15"/></name> <operator pos:line="2231" pos:column="16">=<pos:position pos:line="2231" pos:column="17"/></operator> <literal type="number" pos:line="2231" pos:column="18">1<pos:position pos:line="2231" pos:column="19"/></literal></expr>;<pos:position pos:line="2231" pos:column="20"/></init> <condition><expr><name pos:line="2231" pos:column="21">i<pos:position pos:line="2231" pos:column="22"/></name> <operator pos:line="2231" pos:column="23">&lt;=<pos:position pos:line="2231" pos:column="28"/></operator> <name pos:line="2231" pos:column="26">min<pos:position pos:line="2231" pos:column="29"/></name></expr>;<pos:position pos:line="2231" pos:column="30"/></condition> <incr><expr><name pos:line="2231" pos:column="31">i<pos:position pos:line="2231" pos:column="32"/></name><operator pos:line="2231" pos:column="32">++<pos:position pos:line="2231" pos:column="34"/></operator></expr></incr>)<pos:position pos:line="2231" pos:column="35"/></control>
          <block type="pseudo"><if pos:line="2232" pos:column="11">if <condition pos:line="2232" pos:column="14">(<expr><operator pos:line="2232" pos:column="15">(<pos:position pos:line="2232" pos:column="16"/></operator><name><name pos:line="2232" pos:column="16">md<pos:position pos:line="2232" pos:column="18"/></name><operator pos:line="2232" pos:column="18">-&gt;<pos:position pos:line="2232" pos:column="23"/></operator><name pos:line="2232" pos:column="20">ctypes<pos:position pos:line="2232" pos:column="26"/></name><index pos:line="2232" pos:column="26">[<expr><operator pos:line="2232" pos:column="27">*<pos:position pos:line="2232" pos:column="28"/></operator><name pos:line="2232" pos:column="28">eptr<pos:position pos:line="2232" pos:column="32"/></name><operator pos:line="2232" pos:column="32">++<pos:position pos:line="2232" pos:column="34"/></operator></expr>]<pos:position pos:line="2232" pos:column="35"/></index></name> <operator pos:line="2232" pos:column="36">&amp;<pos:position pos:line="2232" pos:column="41"/></operator> <name pos:line="2232" pos:column="38">ctype_digit<pos:position pos:line="2232" pos:column="49"/></name><operator pos:line="2232" pos:column="49">)<pos:position pos:line="2232" pos:column="50"/></operator> <operator pos:line="2232" pos:column="51">==<pos:position pos:line="2232" pos:column="53"/></operator> <literal type="number" pos:line="2232" pos:column="54">0<pos:position pos:line="2232" pos:column="55"/></literal></expr>)<pos:position pos:line="2232" pos:column="56"/></condition><then pos:line="2232" pos:column="56"> <block type="pseudo"><expr_stmt><expr><call><name pos:line="2232" pos:column="57">RRETURN<pos:position pos:line="2232" pos:column="64"/></name><argument_list pos:line="2232" pos:column="64">(<argument><expr><name pos:line="2232" pos:column="65">MATCH_NOMATCH<pos:position pos:line="2232" pos:column="78"/></name></expr></argument>)<pos:position pos:line="2232" pos:column="79"/></argument_list></call></expr>;<pos:position pos:line="2232" pos:column="80"/></expr_stmt></block></then></if></block></for>
        <break pos:line="2233" pos:column="9">break;<pos:position pos:line="2233" pos:column="15"/></break>

        <case pos:line="2235" pos:column="9">case <expr><name pos:line="2235" pos:column="14">OP_NOT_WHITESPACE<pos:position pos:line="2235" pos:column="31"/></name></expr>:<pos:position pos:line="2235" pos:column="32"/></case>
        <for pos:line="2236" pos:column="9">for <control pos:line="2236" pos:column="13">(<init><expr><name pos:line="2236" pos:column="14">i<pos:position pos:line="2236" pos:column="15"/></name> <operator pos:line="2236" pos:column="16">=<pos:position pos:line="2236" pos:column="17"/></operator> <literal type="number" pos:line="2236" pos:column="18">1<pos:position pos:line="2236" pos:column="19"/></literal></expr>;<pos:position pos:line="2236" pos:column="20"/></init> <condition><expr><name pos:line="2236" pos:column="21">i<pos:position pos:line="2236" pos:column="22"/></name> <operator pos:line="2236" pos:column="23">&lt;=<pos:position pos:line="2236" pos:column="28"/></operator> <name pos:line="2236" pos:column="26">min<pos:position pos:line="2236" pos:column="29"/></name></expr>;<pos:position pos:line="2236" pos:column="30"/></condition> <incr><expr><name pos:line="2236" pos:column="31">i<pos:position pos:line="2236" pos:column="32"/></name><operator pos:line="2236" pos:column="32">++<pos:position pos:line="2236" pos:column="34"/></operator></expr></incr>)<pos:position pos:line="2236" pos:column="35"/></control>
          <block type="pseudo"><if pos:line="2237" pos:column="11">if <condition pos:line="2237" pos:column="14">(<expr><operator pos:line="2237" pos:column="15">(<pos:position pos:line="2237" pos:column="16"/></operator><name><name pos:line="2237" pos:column="16">md<pos:position pos:line="2237" pos:column="18"/></name><operator pos:line="2237" pos:column="18">-&gt;<pos:position pos:line="2237" pos:column="23"/></operator><name pos:line="2237" pos:column="20">ctypes<pos:position pos:line="2237" pos:column="26"/></name><index pos:line="2237" pos:column="26">[<expr><operator pos:line="2237" pos:column="27">*<pos:position pos:line="2237" pos:column="28"/></operator><name pos:line="2237" pos:column="28">eptr<pos:position pos:line="2237" pos:column="32"/></name><operator pos:line="2237" pos:column="32">++<pos:position pos:line="2237" pos:column="34"/></operator></expr>]<pos:position pos:line="2237" pos:column="35"/></index></name> <operator pos:line="2237" pos:column="36">&amp;<pos:position pos:line="2237" pos:column="41"/></operator> <name pos:line="2237" pos:column="38">ctype_space<pos:position pos:line="2237" pos:column="49"/></name><operator pos:line="2237" pos:column="49">)<pos:position pos:line="2237" pos:column="50"/></operator> <operator pos:line="2237" pos:column="51">!=<pos:position pos:line="2237" pos:column="53"/></operator> <literal type="number" pos:line="2237" pos:column="54">0<pos:position pos:line="2237" pos:column="55"/></literal></expr>)<pos:position pos:line="2237" pos:column="56"/></condition><then pos:line="2237" pos:column="56"> <block type="pseudo"><expr_stmt><expr><call><name pos:line="2237" pos:column="57">RRETURN<pos:position pos:line="2237" pos:column="64"/></name><argument_list pos:line="2237" pos:column="64">(<argument><expr><name pos:line="2237" pos:column="65">MATCH_NOMATCH<pos:position pos:line="2237" pos:column="78"/></name></expr></argument>)<pos:position pos:line="2237" pos:column="79"/></argument_list></call></expr>;<pos:position pos:line="2237" pos:column="80"/></expr_stmt></block></then></if></block></for>
        <break pos:line="2238" pos:column="9">break;<pos:position pos:line="2238" pos:column="15"/></break>

        <case pos:line="2240" pos:column="9">case <expr><name pos:line="2240" pos:column="14">OP_WHITESPACE<pos:position pos:line="2240" pos:column="27"/></name></expr>:<pos:position pos:line="2240" pos:column="28"/></case>
        <for pos:line="2241" pos:column="9">for <control pos:line="2241" pos:column="13">(<init><expr><name pos:line="2241" pos:column="14">i<pos:position pos:line="2241" pos:column="15"/></name> <operator pos:line="2241" pos:column="16">=<pos:position pos:line="2241" pos:column="17"/></operator> <literal type="number" pos:line="2241" pos:column="18">1<pos:position pos:line="2241" pos:column="19"/></literal></expr>;<pos:position pos:line="2241" pos:column="20"/></init> <condition><expr><name pos:line="2241" pos:column="21">i<pos:position pos:line="2241" pos:column="22"/></name> <operator pos:line="2241" pos:column="23">&lt;=<pos:position pos:line="2241" pos:column="28"/></operator> <name pos:line="2241" pos:column="26">min<pos:position pos:line="2241" pos:column="29"/></name></expr>;<pos:position pos:line="2241" pos:column="30"/></condition> <incr><expr><name pos:line="2241" pos:column="31">i<pos:position pos:line="2241" pos:column="32"/></name><operator pos:line="2241" pos:column="32">++<pos:position pos:line="2241" pos:column="34"/></operator></expr></incr>)<pos:position pos:line="2241" pos:column="35"/></control>
          <block type="pseudo"><if pos:line="2242" pos:column="11">if <condition pos:line="2242" pos:column="14">(<expr><operator pos:line="2242" pos:column="15">(<pos:position pos:line="2242" pos:column="16"/></operator><name><name pos:line="2242" pos:column="16">md<pos:position pos:line="2242" pos:column="18"/></name><operator pos:line="2242" pos:column="18">-&gt;<pos:position pos:line="2242" pos:column="23"/></operator><name pos:line="2242" pos:column="20">ctypes<pos:position pos:line="2242" pos:column="26"/></name><index pos:line="2242" pos:column="26">[<expr><operator pos:line="2242" pos:column="27">*<pos:position pos:line="2242" pos:column="28"/></operator><name pos:line="2242" pos:column="28">eptr<pos:position pos:line="2242" pos:column="32"/></name><operator pos:line="2242" pos:column="32">++<pos:position pos:line="2242" pos:column="34"/></operator></expr>]<pos:position pos:line="2242" pos:column="35"/></index></name> <operator pos:line="2242" pos:column="36">&amp;<pos:position pos:line="2242" pos:column="41"/></operator> <name pos:line="2242" pos:column="38">ctype_space<pos:position pos:line="2242" pos:column="49"/></name><operator pos:line="2242" pos:column="49">)<pos:position pos:line="2242" pos:column="50"/></operator> <operator pos:line="2242" pos:column="51">==<pos:position pos:line="2242" pos:column="53"/></operator> <literal type="number" pos:line="2242" pos:column="54">0<pos:position pos:line="2242" pos:column="55"/></literal></expr>)<pos:position pos:line="2242" pos:column="56"/></condition><then pos:line="2242" pos:column="56"> <block type="pseudo"><expr_stmt><expr><call><name pos:line="2242" pos:column="57">RRETURN<pos:position pos:line="2242" pos:column="64"/></name><argument_list pos:line="2242" pos:column="64">(<argument><expr><name pos:line="2242" pos:column="65">MATCH_NOMATCH<pos:position pos:line="2242" pos:column="78"/></name></expr></argument>)<pos:position pos:line="2242" pos:column="79"/></argument_list></call></expr>;<pos:position pos:line="2242" pos:column="80"/></expr_stmt></block></then></if></block></for>
        <break pos:line="2243" pos:column="9">break;<pos:position pos:line="2243" pos:column="15"/></break>

        <case pos:line="2245" pos:column="9">case <expr><name pos:line="2245" pos:column="14">OP_NOT_WORDCHAR<pos:position pos:line="2245" pos:column="29"/></name></expr>:<pos:position pos:line="2245" pos:column="30"/></case>
        <for pos:line="2246" pos:column="9">for <control pos:line="2246" pos:column="13">(<init><expr><name pos:line="2246" pos:column="14">i<pos:position pos:line="2246" pos:column="15"/></name> <operator pos:line="2246" pos:column="16">=<pos:position pos:line="2246" pos:column="17"/></operator> <literal type="number" pos:line="2246" pos:column="18">1<pos:position pos:line="2246" pos:column="19"/></literal></expr>;<pos:position pos:line="2246" pos:column="20"/></init> <condition><expr><name pos:line="2246" pos:column="21">i<pos:position pos:line="2246" pos:column="22"/></name> <operator pos:line="2246" pos:column="23">&lt;=<pos:position pos:line="2246" pos:column="28"/></operator> <name pos:line="2246" pos:column="26">min<pos:position pos:line="2246" pos:column="29"/></name></expr>;<pos:position pos:line="2246" pos:column="30"/></condition> <incr><expr><name pos:line="2246" pos:column="31">i<pos:position pos:line="2246" pos:column="32"/></name><operator pos:line="2246" pos:column="32">++<pos:position pos:line="2246" pos:column="34"/></operator></expr></incr>)<pos:position pos:line="2246" pos:column="35"/></control>
          <block type="pseudo"><if pos:line="2247" pos:column="11">if <condition pos:line="2247" pos:column="14">(<expr><operator pos:line="2247" pos:column="15">(<pos:position pos:line="2247" pos:column="16"/></operator><name><name pos:line="2247" pos:column="16">md<pos:position pos:line="2247" pos:column="18"/></name><operator pos:line="2247" pos:column="18">-&gt;<pos:position pos:line="2247" pos:column="23"/></operator><name pos:line="2247" pos:column="20">ctypes<pos:position pos:line="2247" pos:column="26"/></name><index pos:line="2247" pos:column="26">[<expr><operator pos:line="2247" pos:column="27">*<pos:position pos:line="2247" pos:column="28"/></operator><name pos:line="2247" pos:column="28">eptr<pos:position pos:line="2247" pos:column="32"/></name><operator pos:line="2247" pos:column="32">++<pos:position pos:line="2247" pos:column="34"/></operator></expr>]<pos:position pos:line="2247" pos:column="35"/></index></name> <operator pos:line="2247" pos:column="36">&amp;<pos:position pos:line="2247" pos:column="41"/></operator> <name pos:line="2247" pos:column="38">ctype_word<pos:position pos:line="2247" pos:column="48"/></name><operator pos:line="2247" pos:column="48">)<pos:position pos:line="2247" pos:column="49"/></operator> <operator pos:line="2247" pos:column="50">!=<pos:position pos:line="2247" pos:column="52"/></operator> <literal type="number" pos:line="2247" pos:column="53">0<pos:position pos:line="2247" pos:column="54"/></literal></expr>)<pos:position pos:line="2247" pos:column="55"/></condition><then pos:line="2247" pos:column="55">
            <block type="pseudo"><expr_stmt><expr><call><name pos:line="2248" pos:column="13">RRETURN<pos:position pos:line="2248" pos:column="20"/></name><argument_list pos:line="2248" pos:column="20">(<argument><expr><name pos:line="2248" pos:column="21">MATCH_NOMATCH<pos:position pos:line="2248" pos:column="34"/></name></expr></argument>)<pos:position pos:line="2248" pos:column="35"/></argument_list></call></expr>;<pos:position pos:line="2248" pos:column="36"/></expr_stmt></block></then></if></block></for>
        <break pos:line="2249" pos:column="9">break;<pos:position pos:line="2249" pos:column="15"/></break>

        <case pos:line="2251" pos:column="9">case <expr><name pos:line="2251" pos:column="14">OP_WORDCHAR<pos:position pos:line="2251" pos:column="25"/></name></expr>:<pos:position pos:line="2251" pos:column="26"/></case>
        <for pos:line="2252" pos:column="9">for <control pos:line="2252" pos:column="13">(<init><expr><name pos:line="2252" pos:column="14">i<pos:position pos:line="2252" pos:column="15"/></name> <operator pos:line="2252" pos:column="16">=<pos:position pos:line="2252" pos:column="17"/></operator> <literal type="number" pos:line="2252" pos:column="18">1<pos:position pos:line="2252" pos:column="19"/></literal></expr>;<pos:position pos:line="2252" pos:column="20"/></init> <condition><expr><name pos:line="2252" pos:column="21">i<pos:position pos:line="2252" pos:column="22"/></name> <operator pos:line="2252" pos:column="23">&lt;=<pos:position pos:line="2252" pos:column="28"/></operator> <name pos:line="2252" pos:column="26">min<pos:position pos:line="2252" pos:column="29"/></name></expr>;<pos:position pos:line="2252" pos:column="30"/></condition> <incr><expr><name pos:line="2252" pos:column="31">i<pos:position pos:line="2252" pos:column="32"/></name><operator pos:line="2252" pos:column="32">++<pos:position pos:line="2252" pos:column="34"/></operator></expr></incr>)<pos:position pos:line="2252" pos:column="35"/></control>
          <block type="pseudo"><if pos:line="2253" pos:column="11">if <condition pos:line="2253" pos:column="14">(<expr><operator pos:line="2253" pos:column="15">(<pos:position pos:line="2253" pos:column="16"/></operator><name><name pos:line="2253" pos:column="16">md<pos:position pos:line="2253" pos:column="18"/></name><operator pos:line="2253" pos:column="18">-&gt;<pos:position pos:line="2253" pos:column="23"/></operator><name pos:line="2253" pos:column="20">ctypes<pos:position pos:line="2253" pos:column="26"/></name><index pos:line="2253" pos:column="26">[<expr><operator pos:line="2253" pos:column="27">*<pos:position pos:line="2253" pos:column="28"/></operator><name pos:line="2253" pos:column="28">eptr<pos:position pos:line="2253" pos:column="32"/></name><operator pos:line="2253" pos:column="32">++<pos:position pos:line="2253" pos:column="34"/></operator></expr>]<pos:position pos:line="2253" pos:column="35"/></index></name> <operator pos:line="2253" pos:column="36">&amp;<pos:position pos:line="2253" pos:column="41"/></operator> <name pos:line="2253" pos:column="38">ctype_word<pos:position pos:line="2253" pos:column="48"/></name><operator pos:line="2253" pos:column="48">)<pos:position pos:line="2253" pos:column="49"/></operator> <operator pos:line="2253" pos:column="50">==<pos:position pos:line="2253" pos:column="52"/></operator> <literal type="number" pos:line="2253" pos:column="53">0<pos:position pos:line="2253" pos:column="54"/></literal></expr>)<pos:position pos:line="2253" pos:column="55"/></condition><then pos:line="2253" pos:column="55">
            <block type="pseudo"><expr_stmt><expr><call><name pos:line="2254" pos:column="13">RRETURN<pos:position pos:line="2254" pos:column="20"/></name><argument_list pos:line="2254" pos:column="20">(<argument><expr><name pos:line="2254" pos:column="21">MATCH_NOMATCH<pos:position pos:line="2254" pos:column="34"/></name></expr></argument>)<pos:position pos:line="2254" pos:column="35"/></argument_list></call></expr>;<pos:position pos:line="2254" pos:column="36"/></expr_stmt></block></then></if></block></for>
        <break pos:line="2255" pos:column="9">break;<pos:position pos:line="2255" pos:column="15"/></break>

        <default pos:line="2257" pos:column="9">default:<pos:position pos:line="2257" pos:column="17"/></default>
        <expr_stmt><expr><call><name pos:line="2258" pos:column="9">RRETURN<pos:position pos:line="2258" pos:column="16"/></name><argument_list pos:line="2258" pos:column="16">(<argument><expr><name pos:line="2258" pos:column="17">PCRE_ERROR_INTERNAL<pos:position pos:line="2258" pos:column="36"/></name></expr></argument>)<pos:position pos:line="2258" pos:column="37"/></argument_list></call></expr>;<pos:position pos:line="2258" pos:column="38"/></expr_stmt>
        }<pos:position pos:line="2259" pos:column="10"/></block></switch></block></else></if>
      }<pos:position pos:line="2260" pos:column="8"/></block></then></if>

    <comment type="block" pos:line="2262" pos:column="5">/* If min = max, continue at the same level without recursing */</comment>

    <if pos:line="2264" pos:column="5">if <condition pos:line="2264" pos:column="8">(<expr><name pos:line="2264" pos:column="9">min<pos:position pos:line="2264" pos:column="12"/></name> <operator pos:line="2264" pos:column="13">==<pos:position pos:line="2264" pos:column="15"/></operator> <name pos:line="2264" pos:column="16">max<pos:position pos:line="2264" pos:column="19"/></name></expr>)<pos:position pos:line="2264" pos:column="20"/></condition><then pos:line="2264" pos:column="20"> <block type="pseudo"><continue pos:line="2264" pos:column="21">continue;<pos:position pos:line="2264" pos:column="30"/></continue></block></then></if>

    <comment type="block" pos:line="2266" pos:column="5">/* If minimizing, we have to test the rest of the pattern before each
    subsequent match. Again, separate the UTF-8 case for speed, and also
    separate the UCP cases. */</comment>

    <if pos:line="2270" pos:column="5">if <condition pos:line="2270" pos:column="8">(<expr><name pos:line="2270" pos:column="9">minimize<pos:position pos:line="2270" pos:column="17"/></name></expr>)<pos:position pos:line="2270" pos:column="18"/></condition><then pos:line="2270" pos:column="18">
      <block pos:line="2271" pos:column="7">{
<cpp:ifdef pos:line="2272" pos:column="1">#<cpp:directive pos:line="2272" pos:column="2">ifdef<pos:position pos:line="2272" pos:column="7"/></cpp:directive> <name pos:line="2272" pos:column="8">SUPPORT_UCP<pos:position pos:line="2272" pos:column="19"/></name></cpp:ifdef>
      <if pos:line="2273" pos:column="7">if <condition pos:line="2273" pos:column="10">(<expr><name pos:line="2273" pos:column="11">prop_type<pos:position pos:line="2273" pos:column="20"/></name> <operator pos:line="2273" pos:column="21">&gt;<pos:position pos:line="2273" pos:column="25"/></operator> <literal type="number" pos:line="2273" pos:column="23">0<pos:position pos:line="2273" pos:column="24"/></literal></expr>)<pos:position pos:line="2273" pos:column="25"/></condition><then pos:line="2273" pos:column="25">
        <block pos:line="2274" pos:column="9">{
        <for pos:line="2275" pos:column="9">for <control pos:line="2275" pos:column="13">(<init><expr><name pos:line="2275" pos:column="14">fi<pos:position pos:line="2275" pos:column="16"/></name> <operator pos:line="2275" pos:column="17">=<pos:position pos:line="2275" pos:column="18"/></operator> <name pos:line="2275" pos:column="19">min<pos:position pos:line="2275" pos:column="22"/></name></expr>;<pos:position pos:line="2275" pos:column="23"/></init><condition pos:line="2275" pos:column="23">;<pos:position pos:line="2275" pos:column="24"/></condition> <incr><expr><name pos:line="2275" pos:column="25">fi<pos:position pos:line="2275" pos:column="27"/></name><operator pos:line="2275" pos:column="27">++<pos:position pos:line="2275" pos:column="29"/></operator></expr></incr>)<pos:position pos:line="2275" pos:column="30"/></control>
          <block pos:line="2276" pos:column="11">{
          <expr_stmt><expr><call><name pos:line="2277" pos:column="11">RMATCH<pos:position pos:line="2277" pos:column="17"/></name><argument_list pos:line="2277" pos:column="17">(<argument><expr><name pos:line="2277" pos:column="18">rrc<pos:position pos:line="2277" pos:column="21"/></name></expr></argument>, <argument><expr><name pos:line="2277" pos:column="23">eptr<pos:position pos:line="2277" pos:column="27"/></name></expr></argument>, <argument><expr><name pos:line="2277" pos:column="29">ecode<pos:position pos:line="2277" pos:column="34"/></name></expr></argument>, <argument><expr><name pos:line="2277" pos:column="36">offset_top<pos:position pos:line="2277" pos:column="46"/></name></expr></argument>, <argument><expr><name pos:line="2277" pos:column="48">md<pos:position pos:line="2277" pos:column="50"/></name></expr></argument>, <argument><expr><name pos:line="2277" pos:column="52">ims<pos:position pos:line="2277" pos:column="55"/></name></expr></argument>, <argument><expr><name pos:line="2277" pos:column="57">eptrb<pos:position pos:line="2277" pos:column="62"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="2277" pos:column="64">0<pos:position pos:line="2277" pos:column="65"/></literal></expr></argument>)<pos:position pos:line="2277" pos:column="66"/></argument_list></call></expr>;<pos:position pos:line="2277" pos:column="67"/></expr_stmt>
          <if pos:line="2278" pos:column="11">if <condition pos:line="2278" pos:column="14">(<expr><name pos:line="2278" pos:column="15">rrc<pos:position pos:line="2278" pos:column="18"/></name> <operator pos:line="2278" pos:column="19">!=<pos:position pos:line="2278" pos:column="21"/></operator> <name pos:line="2278" pos:column="22">MATCH_NOMATCH<pos:position pos:line="2278" pos:column="35"/></name></expr>)<pos:position pos:line="2278" pos:column="36"/></condition><then pos:line="2278" pos:column="36"> <block type="pseudo"><expr_stmt><expr><call><name pos:line="2278" pos:column="37">RRETURN<pos:position pos:line="2278" pos:column="44"/></name><argument_list pos:line="2278" pos:column="44">(<argument><expr><name pos:line="2278" pos:column="45">rrc<pos:position pos:line="2278" pos:column="48"/></name></expr></argument>)<pos:position pos:line="2278" pos:column="49"/></argument_list></call></expr>;<pos:position pos:line="2278" pos:column="50"/></expr_stmt></block></then></if>
          <if pos:line="2279" pos:column="11">if <condition pos:line="2279" pos:column="14">(<expr><name pos:line="2279" pos:column="15">fi<pos:position pos:line="2279" pos:column="17"/></name> <operator pos:line="2279" pos:column="18">&gt;=<pos:position pos:line="2279" pos:column="23"/></operator> <name pos:line="2279" pos:column="21">max<pos:position pos:line="2279" pos:column="24"/></name> <operator pos:line="2279" pos:column="25">||<pos:position pos:line="2279" pos:column="27"/></operator> <name pos:line="2279" pos:column="28">eptr<pos:position pos:line="2279" pos:column="32"/></name> <operator pos:line="2279" pos:column="33">&gt;=<pos:position pos:line="2279" pos:column="38"/></operator> <name><name pos:line="2279" pos:column="36">md<pos:position pos:line="2279" pos:column="38"/></name><operator pos:line="2279" pos:column="38">-&gt;<pos:position pos:line="2279" pos:column="43"/></operator><name pos:line="2279" pos:column="40">end_subject<pos:position pos:line="2279" pos:column="51"/></name></name></expr>)<pos:position pos:line="2279" pos:column="52"/></condition><then pos:line="2279" pos:column="52"> <block type="pseudo"><expr_stmt><expr><call><name pos:line="2279" pos:column="53">RRETURN<pos:position pos:line="2279" pos:column="60"/></name><argument_list pos:line="2279" pos:column="60">(<argument><expr><name pos:line="2279" pos:column="61">MATCH_NOMATCH<pos:position pos:line="2279" pos:column="74"/></name></expr></argument>)<pos:position pos:line="2279" pos:column="75"/></argument_list></call></expr>;<pos:position pos:line="2279" pos:column="76"/></expr_stmt></block></then></if>
          <expr_stmt><expr><call><name pos:line="2280" pos:column="11">GETCHARINC<pos:position pos:line="2280" pos:column="21"/></name><argument_list pos:line="2280" pos:column="21">(<argument><expr><name pos:line="2280" pos:column="22">c<pos:position pos:line="2280" pos:column="23"/></name></expr></argument>, <argument><expr><name pos:line="2280" pos:column="25">eptr<pos:position pos:line="2280" pos:column="29"/></name></expr></argument>)<pos:position pos:line="2280" pos:column="30"/></argument_list></call></expr>;<pos:position pos:line="2280" pos:column="31"/></expr_stmt>
          <expr_stmt><expr><name pos:line="2281" pos:column="11">prop_category<pos:position pos:line="2281" pos:column="24"/></name> <operator pos:line="2281" pos:column="25">=<pos:position pos:line="2281" pos:column="26"/></operator> <call><name pos:line="2281" pos:column="27">ucp_findchar<pos:position pos:line="2281" pos:column="39"/></name><argument_list pos:line="2281" pos:column="39">(<argument><expr><name pos:line="2281" pos:column="40">c<pos:position pos:line="2281" pos:column="41"/></name></expr></argument>, <argument><expr><operator pos:line="2281" pos:column="43">&amp;<pos:position pos:line="2281" pos:column="48"/></operator><name pos:line="2281" pos:column="44">prop_chartype<pos:position pos:line="2281" pos:column="57"/></name></expr></argument>, <argument><expr><operator pos:line="2281" pos:column="59">&amp;<pos:position pos:line="2281" pos:column="64"/></operator><name pos:line="2281" pos:column="60">prop_othercase<pos:position pos:line="2281" pos:column="74"/></name></expr></argument>)<pos:position pos:line="2281" pos:column="75"/></argument_list></call></expr>;<pos:position pos:line="2281" pos:column="76"/></expr_stmt>
          <if pos:line="2282" pos:column="11">if <condition pos:line="2282" pos:column="14">(<expr><operator pos:line="2282" pos:column="15">(<pos:position pos:line="2282" pos:column="16"/></operator><operator pos:line="2282" pos:column="16">*<pos:position pos:line="2282" pos:column="17"/></operator><name pos:line="2282" pos:column="17">prop_test_variable<pos:position pos:line="2282" pos:column="35"/></name> <operator pos:line="2282" pos:column="36">==<pos:position pos:line="2282" pos:column="38"/></operator> <name pos:line="2282" pos:column="39">prop_test_against<pos:position pos:line="2282" pos:column="56"/></name><operator pos:line="2282" pos:column="56">)<pos:position pos:line="2282" pos:column="57"/></operator> <operator pos:line="2282" pos:column="58">==<pos:position pos:line="2282" pos:column="60"/></operator> <name pos:line="2282" pos:column="61">prop_fail_result<pos:position pos:line="2282" pos:column="77"/></name></expr>)<pos:position pos:line="2282" pos:column="78"/></condition><then pos:line="2282" pos:column="78">
            <block type="pseudo"><expr_stmt><expr><call><name pos:line="2283" pos:column="13">RRETURN<pos:position pos:line="2283" pos:column="20"/></name><argument_list pos:line="2283" pos:column="20">(<argument><expr><name pos:line="2283" pos:column="21">MATCH_NOMATCH<pos:position pos:line="2283" pos:column="34"/></name></expr></argument>)<pos:position pos:line="2283" pos:column="35"/></argument_list></call></expr>;<pos:position pos:line="2283" pos:column="36"/></expr_stmt></block></then></if>
          }<pos:position pos:line="2284" pos:column="12"/></block></for>
        }<pos:position pos:line="2285" pos:column="10"/></block></then>

      <comment type="block" pos:line="2287" pos:column="7">/* Match extended Unicode sequences. We will get here only if the
      support is in the binary; otherwise a compile-time error occurs. */</comment>

      <elseif pos:line="2290" pos:column="7">else <if pos:line="2290" pos:column="12">if <condition pos:line="2290" pos:column="15">(<expr><name pos:line="2290" pos:column="16">ctype<pos:position pos:line="2290" pos:column="21"/></name> <operator pos:line="2290" pos:column="22">==<pos:position pos:line="2290" pos:column="24"/></operator> <name pos:line="2290" pos:column="25">OP_EXTUNI<pos:position pos:line="2290" pos:column="34"/></name></expr>)<pos:position pos:line="2290" pos:column="35"/></condition><then pos:line="2290" pos:column="35">
        <block pos:line="2291" pos:column="9">{
        <for pos:line="2292" pos:column="9">for <control pos:line="2292" pos:column="13">(<init><expr><name pos:line="2292" pos:column="14">fi<pos:position pos:line="2292" pos:column="16"/></name> <operator pos:line="2292" pos:column="17">=<pos:position pos:line="2292" pos:column="18"/></operator> <name pos:line="2292" pos:column="19">min<pos:position pos:line="2292" pos:column="22"/></name></expr>;<pos:position pos:line="2292" pos:column="23"/></init><condition pos:line="2292" pos:column="23">;<pos:position pos:line="2292" pos:column="24"/></condition> <incr><expr><name pos:line="2292" pos:column="25">fi<pos:position pos:line="2292" pos:column="27"/></name><operator pos:line="2292" pos:column="27">++<pos:position pos:line="2292" pos:column="29"/></operator></expr></incr>)<pos:position pos:line="2292" pos:column="30"/></control>
          <block pos:line="2293" pos:column="11">{
          <expr_stmt><expr><call><name pos:line="2294" pos:column="11">RMATCH<pos:position pos:line="2294" pos:column="17"/></name><argument_list pos:line="2294" pos:column="17">(<argument><expr><name pos:line="2294" pos:column="18">rrc<pos:position pos:line="2294" pos:column="21"/></name></expr></argument>, <argument><expr><name pos:line="2294" pos:column="23">eptr<pos:position pos:line="2294" pos:column="27"/></name></expr></argument>, <argument><expr><name pos:line="2294" pos:column="29">ecode<pos:position pos:line="2294" pos:column="34"/></name></expr></argument>, <argument><expr><name pos:line="2294" pos:column="36">offset_top<pos:position pos:line="2294" pos:column="46"/></name></expr></argument>, <argument><expr><name pos:line="2294" pos:column="48">md<pos:position pos:line="2294" pos:column="50"/></name></expr></argument>, <argument><expr><name pos:line="2294" pos:column="52">ims<pos:position pos:line="2294" pos:column="55"/></name></expr></argument>, <argument><expr><name pos:line="2294" pos:column="57">eptrb<pos:position pos:line="2294" pos:column="62"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="2294" pos:column="64">0<pos:position pos:line="2294" pos:column="65"/></literal></expr></argument>)<pos:position pos:line="2294" pos:column="66"/></argument_list></call></expr>;<pos:position pos:line="2294" pos:column="67"/></expr_stmt>
          <if pos:line="2295" pos:column="11">if <condition pos:line="2295" pos:column="14">(<expr><name pos:line="2295" pos:column="15">rrc<pos:position pos:line="2295" pos:column="18"/></name> <operator pos:line="2295" pos:column="19">!=<pos:position pos:line="2295" pos:column="21"/></operator> <name pos:line="2295" pos:column="22">MATCH_NOMATCH<pos:position pos:line="2295" pos:column="35"/></name></expr>)<pos:position pos:line="2295" pos:column="36"/></condition><then pos:line="2295" pos:column="36"> <block type="pseudo"><expr_stmt><expr><call><name pos:line="2295" pos:column="37">RRETURN<pos:position pos:line="2295" pos:column="44"/></name><argument_list pos:line="2295" pos:column="44">(<argument><expr><name pos:line="2295" pos:column="45">rrc<pos:position pos:line="2295" pos:column="48"/></name></expr></argument>)<pos:position pos:line="2295" pos:column="49"/></argument_list></call></expr>;<pos:position pos:line="2295" pos:column="50"/></expr_stmt></block></then></if>
          <if pos:line="2296" pos:column="11">if <condition pos:line="2296" pos:column="14">(<expr><name pos:line="2296" pos:column="15">fi<pos:position pos:line="2296" pos:column="17"/></name> <operator pos:line="2296" pos:column="18">&gt;=<pos:position pos:line="2296" pos:column="23"/></operator> <name pos:line="2296" pos:column="21">max<pos:position pos:line="2296" pos:column="24"/></name> <operator pos:line="2296" pos:column="25">||<pos:position pos:line="2296" pos:column="27"/></operator> <name pos:line="2296" pos:column="28">eptr<pos:position pos:line="2296" pos:column="32"/></name> <operator pos:line="2296" pos:column="33">&gt;=<pos:position pos:line="2296" pos:column="38"/></operator> <name><name pos:line="2296" pos:column="36">md<pos:position pos:line="2296" pos:column="38"/></name><operator pos:line="2296" pos:column="38">-&gt;<pos:position pos:line="2296" pos:column="43"/></operator><name pos:line="2296" pos:column="40">end_subject<pos:position pos:line="2296" pos:column="51"/></name></name></expr>)<pos:position pos:line="2296" pos:column="52"/></condition><then pos:line="2296" pos:column="52"> <block type="pseudo"><expr_stmt><expr><call><name pos:line="2296" pos:column="53">RRETURN<pos:position pos:line="2296" pos:column="60"/></name><argument_list pos:line="2296" pos:column="60">(<argument><expr><name pos:line="2296" pos:column="61">MATCH_NOMATCH<pos:position pos:line="2296" pos:column="74"/></name></expr></argument>)<pos:position pos:line="2296" pos:column="75"/></argument_list></call></expr>;<pos:position pos:line="2296" pos:column="76"/></expr_stmt></block></then></if>
          <expr_stmt><expr><call><name pos:line="2297" pos:column="11">GETCHARINCTEST<pos:position pos:line="2297" pos:column="25"/></name><argument_list pos:line="2297" pos:column="25">(<argument><expr><name pos:line="2297" pos:column="26">c<pos:position pos:line="2297" pos:column="27"/></name></expr></argument>, <argument><expr><name pos:line="2297" pos:column="29">eptr<pos:position pos:line="2297" pos:column="33"/></name></expr></argument>)<pos:position pos:line="2297" pos:column="34"/></argument_list></call></expr>;<pos:position pos:line="2297" pos:column="35"/></expr_stmt>
          <expr_stmt><expr><name pos:line="2298" pos:column="11">prop_category<pos:position pos:line="2298" pos:column="24"/></name> <operator pos:line="2298" pos:column="25">=<pos:position pos:line="2298" pos:column="26"/></operator> <call><name pos:line="2298" pos:column="27">ucp_findchar<pos:position pos:line="2298" pos:column="39"/></name><argument_list pos:line="2298" pos:column="39">(<argument><expr><name pos:line="2298" pos:column="40">c<pos:position pos:line="2298" pos:column="41"/></name></expr></argument>, <argument><expr><operator pos:line="2298" pos:column="43">&amp;<pos:position pos:line="2298" pos:column="48"/></operator><name pos:line="2298" pos:column="44">prop_chartype<pos:position pos:line="2298" pos:column="57"/></name></expr></argument>, <argument><expr><operator pos:line="2298" pos:column="59">&amp;<pos:position pos:line="2298" pos:column="64"/></operator><name pos:line="2298" pos:column="60">prop_othercase<pos:position pos:line="2298" pos:column="74"/></name></expr></argument>)<pos:position pos:line="2298" pos:column="75"/></argument_list></call></expr>;<pos:position pos:line="2298" pos:column="76"/></expr_stmt>
          <if pos:line="2299" pos:column="11">if <condition pos:line="2299" pos:column="14">(<expr><name pos:line="2299" pos:column="15">prop_category<pos:position pos:line="2299" pos:column="28"/></name> <operator pos:line="2299" pos:column="29">==<pos:position pos:line="2299" pos:column="31"/></operator> <name pos:line="2299" pos:column="32">ucp_M<pos:position pos:line="2299" pos:column="37"/></name></expr>)<pos:position pos:line="2299" pos:column="38"/></condition><then pos:line="2299" pos:column="38"> <block type="pseudo"><expr_stmt><expr><call><name pos:line="2299" pos:column="39">RRETURN<pos:position pos:line="2299" pos:column="46"/></name><argument_list pos:line="2299" pos:column="46">(<argument><expr><name pos:line="2299" pos:column="47">MATCH_NOMATCH<pos:position pos:line="2299" pos:column="60"/></name></expr></argument>)<pos:position pos:line="2299" pos:column="61"/></argument_list></call></expr>;<pos:position pos:line="2299" pos:column="62"/></expr_stmt></block></then></if>
          <while pos:line="2300" pos:column="11">while <condition pos:line="2300" pos:column="17">(<expr><name pos:line="2300" pos:column="18">eptr<pos:position pos:line="2300" pos:column="22"/></name> <operator pos:line="2300" pos:column="23">&lt;<pos:position pos:line="2300" pos:column="27"/></operator> <name><name pos:line="2300" pos:column="25">md<pos:position pos:line="2300" pos:column="27"/></name><operator pos:line="2300" pos:column="27">-&gt;<pos:position pos:line="2300" pos:column="32"/></operator><name pos:line="2300" pos:column="29">end_subject<pos:position pos:line="2300" pos:column="40"/></name></name></expr>)<pos:position pos:line="2300" pos:column="41"/></condition>
            <block pos:line="2301" pos:column="13">{
            <decl_stmt><decl><type><name pos:line="2302" pos:column="13">int<pos:position pos:line="2302" pos:column="16"/></name></type> <name pos:line="2302" pos:column="17">len<pos:position pos:line="2302" pos:column="20"/></name> <init pos:line="2302" pos:column="21">= <expr><literal type="number" pos:line="2302" pos:column="23">1<pos:position pos:line="2302" pos:column="24"/></literal></expr></init></decl>;<pos:position pos:line="2302" pos:column="25"/></decl_stmt>
            <if pos:line="2303" pos:column="13">if <condition pos:line="2303" pos:column="16">(<expr><operator pos:line="2303" pos:column="17">!<pos:position pos:line="2303" pos:column="18"/></operator><name><name pos:line="2303" pos:column="18">md<pos:position pos:line="2303" pos:column="20"/></name><operator pos:line="2303" pos:column="20">-&gt;<pos:position pos:line="2303" pos:column="25"/></operator><name pos:line="2303" pos:column="22">utf8<pos:position pos:line="2303" pos:column="26"/></name></name></expr>)<pos:position pos:line="2303" pos:column="27"/></condition><then pos:line="2303" pos:column="27"> <block type="pseudo"><expr_stmt><expr><name pos:line="2303" pos:column="28">c<pos:position pos:line="2303" pos:column="29"/></name> <operator pos:line="2303" pos:column="30">=<pos:position pos:line="2303" pos:column="31"/></operator> <operator pos:line="2303" pos:column="32">*<pos:position pos:line="2303" pos:column="33"/></operator><name pos:line="2303" pos:column="33">eptr<pos:position pos:line="2303" pos:column="37"/></name></expr>;<pos:position pos:line="2303" pos:column="38"/></expr_stmt></block></then> <else pos:line="2303" pos:column="39">else
              <block pos:line="2304" pos:column="15">{
              <expr_stmt><expr><call><name pos:line="2305" pos:column="15">GETCHARLEN<pos:position pos:line="2305" pos:column="25"/></name><argument_list pos:line="2305" pos:column="25">(<argument><expr><name pos:line="2305" pos:column="26">c<pos:position pos:line="2305" pos:column="27"/></name></expr></argument>, <argument><expr><name pos:line="2305" pos:column="29">eptr<pos:position pos:line="2305" pos:column="33"/></name></expr></argument>, <argument><expr><name pos:line="2305" pos:column="35">len<pos:position pos:line="2305" pos:column="38"/></name></expr></argument>)<pos:position pos:line="2305" pos:column="39"/></argument_list></call></expr>;<pos:position pos:line="2305" pos:column="40"/></expr_stmt>
              }<pos:position pos:line="2306" pos:column="16"/></block></else></if>
            <expr_stmt><expr><name pos:line="2307" pos:column="13">prop_category<pos:position pos:line="2307" pos:column="26"/></name> <operator pos:line="2307" pos:column="27">=<pos:position pos:line="2307" pos:column="28"/></operator> <call><name pos:line="2307" pos:column="29">ucp_findchar<pos:position pos:line="2307" pos:column="41"/></name><argument_list pos:line="2307" pos:column="41">(<argument><expr><name pos:line="2307" pos:column="42">c<pos:position pos:line="2307" pos:column="43"/></name></expr></argument>, <argument><expr><operator pos:line="2307" pos:column="45">&amp;<pos:position pos:line="2307" pos:column="50"/></operator><name pos:line="2307" pos:column="46">prop_chartype<pos:position pos:line="2307" pos:column="59"/></name></expr></argument>, <argument><expr><operator pos:line="2307" pos:column="61">&amp;<pos:position pos:line="2307" pos:column="66"/></operator><name pos:line="2307" pos:column="62">prop_othercase<pos:position pos:line="2307" pos:column="76"/></name></expr></argument>)<pos:position pos:line="2307" pos:column="77"/></argument_list></call></expr>;<pos:position pos:line="2307" pos:column="78"/></expr_stmt>
            <if pos:line="2308" pos:column="13">if <condition pos:line="2308" pos:column="16">(<expr><name pos:line="2308" pos:column="17">prop_category<pos:position pos:line="2308" pos:column="30"/></name> <operator pos:line="2308" pos:column="31">!=<pos:position pos:line="2308" pos:column="33"/></operator> <name pos:line="2308" pos:column="34">ucp_M<pos:position pos:line="2308" pos:column="39"/></name></expr>)<pos:position pos:line="2308" pos:column="40"/></condition><then pos:line="2308" pos:column="40"> <block type="pseudo"><break pos:line="2308" pos:column="41">break;<pos:position pos:line="2308" pos:column="47"/></break></block></then></if>
            <expr_stmt><expr><name pos:line="2309" pos:column="13">eptr<pos:position pos:line="2309" pos:column="17"/></name> <operator pos:line="2309" pos:column="18">+=<pos:position pos:line="2309" pos:column="20"/></operator> <name pos:line="2309" pos:column="21">len<pos:position pos:line="2309" pos:column="24"/></name></expr>;<pos:position pos:line="2309" pos:column="25"/></expr_stmt>
            }<pos:position pos:line="2310" pos:column="14"/></block></while>
          }<pos:position pos:line="2311" pos:column="12"/></block></for>
        }<pos:position pos:line="2312" pos:column="10"/></block></then></if></elseif>

      <elseif pos:line="2314" pos:column="7">else
<cpp:endif pos:line="2315" pos:column="1">#<cpp:directive pos:line="2315" pos:column="2">endif<pos:position pos:line="2315" pos:column="7"/></cpp:directive></cpp:endif>     <comment type="block" pos:line="2315" pos:column="12">/* SUPPORT_UCP */</comment>

<cpp:ifdef pos:line="2317" pos:column="1">#<cpp:directive pos:line="2317" pos:column="2">ifdef<pos:position pos:line="2317" pos:column="7"/></cpp:directive> <name pos:line="2317" pos:column="8">SUPPORT_UTF8<pos:position pos:line="2317" pos:column="20"/></name></cpp:ifdef>
      <comment type="block" pos:line="2318" pos:column="7">/* UTF-8 mode */</comment>
      <if pos:line="2319" pos:column="7">if <condition pos:line="2319" pos:column="10">(<expr><name><name pos:line="2319" pos:column="11">md<pos:position pos:line="2319" pos:column="13"/></name><operator pos:line="2319" pos:column="13">-&gt;<pos:position pos:line="2319" pos:column="18"/></operator><name pos:line="2319" pos:column="15">utf8<pos:position pos:line="2319" pos:column="19"/></name></name></expr>)<pos:position pos:line="2319" pos:column="20"/></condition><then pos:line="2319" pos:column="20">
        <block pos:line="2320" pos:column="9">{
        <for pos:line="2321" pos:column="9">for <control pos:line="2321" pos:column="13">(<init><expr><name pos:line="2321" pos:column="14">fi<pos:position pos:line="2321" pos:column="16"/></name> <operator pos:line="2321" pos:column="17">=<pos:position pos:line="2321" pos:column="18"/></operator> <name pos:line="2321" pos:column="19">min<pos:position pos:line="2321" pos:column="22"/></name></expr>;<pos:position pos:line="2321" pos:column="23"/></init><condition pos:line="2321" pos:column="23">;<pos:position pos:line="2321" pos:column="24"/></condition> <incr><expr><name pos:line="2321" pos:column="25">fi<pos:position pos:line="2321" pos:column="27"/></name><operator pos:line="2321" pos:column="27">++<pos:position pos:line="2321" pos:column="29"/></operator></expr></incr>)<pos:position pos:line="2321" pos:column="30"/></control>
          <block pos:line="2322" pos:column="11">{
          <expr_stmt><expr><call><name pos:line="2323" pos:column="11">RMATCH<pos:position pos:line="2323" pos:column="17"/></name><argument_list pos:line="2323" pos:column="17">(<argument><expr><name pos:line="2323" pos:column="18">rrc<pos:position pos:line="2323" pos:column="21"/></name></expr></argument>, <argument><expr><name pos:line="2323" pos:column="23">eptr<pos:position pos:line="2323" pos:column="27"/></name></expr></argument>, <argument><expr><name pos:line="2323" pos:column="29">ecode<pos:position pos:line="2323" pos:column="34"/></name></expr></argument>, <argument><expr><name pos:line="2323" pos:column="36">offset_top<pos:position pos:line="2323" pos:column="46"/></name></expr></argument>, <argument><expr><name pos:line="2323" pos:column="48">md<pos:position pos:line="2323" pos:column="50"/></name></expr></argument>, <argument><expr><name pos:line="2323" pos:column="52">ims<pos:position pos:line="2323" pos:column="55"/></name></expr></argument>, <argument><expr><name pos:line="2323" pos:column="57">eptrb<pos:position pos:line="2323" pos:column="62"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="2323" pos:column="64">0<pos:position pos:line="2323" pos:column="65"/></literal></expr></argument>)<pos:position pos:line="2323" pos:column="66"/></argument_list></call></expr>;<pos:position pos:line="2323" pos:column="67"/></expr_stmt>
          <if pos:line="2324" pos:column="11">if <condition pos:line="2324" pos:column="14">(<expr><name pos:line="2324" pos:column="15">rrc<pos:position pos:line="2324" pos:column="18"/></name> <operator pos:line="2324" pos:column="19">!=<pos:position pos:line="2324" pos:column="21"/></operator> <name pos:line="2324" pos:column="22">MATCH_NOMATCH<pos:position pos:line="2324" pos:column="35"/></name></expr>)<pos:position pos:line="2324" pos:column="36"/></condition><then pos:line="2324" pos:column="36"> <block type="pseudo"><expr_stmt><expr><call><name pos:line="2324" pos:column="37">RRETURN<pos:position pos:line="2324" pos:column="44"/></name><argument_list pos:line="2324" pos:column="44">(<argument><expr><name pos:line="2324" pos:column="45">rrc<pos:position pos:line="2324" pos:column="48"/></name></expr></argument>)<pos:position pos:line="2324" pos:column="49"/></argument_list></call></expr>;<pos:position pos:line="2324" pos:column="50"/></expr_stmt></block></then></if>
          <if pos:line="2325" pos:column="11">if <condition pos:line="2325" pos:column="14">(<expr><name pos:line="2325" pos:column="15">fi<pos:position pos:line="2325" pos:column="17"/></name> <operator pos:line="2325" pos:column="18">&gt;=<pos:position pos:line="2325" pos:column="23"/></operator> <name pos:line="2325" pos:column="21">max<pos:position pos:line="2325" pos:column="24"/></name> <operator pos:line="2325" pos:column="25">||<pos:position pos:line="2325" pos:column="27"/></operator> <name pos:line="2325" pos:column="28">eptr<pos:position pos:line="2325" pos:column="32"/></name> <operator pos:line="2325" pos:column="33">&gt;=<pos:position pos:line="2325" pos:column="38"/></operator> <name><name pos:line="2325" pos:column="36">md<pos:position pos:line="2325" pos:column="38"/></name><operator pos:line="2325" pos:column="38">-&gt;<pos:position pos:line="2325" pos:column="43"/></operator><name pos:line="2325" pos:column="40">end_subject<pos:position pos:line="2325" pos:column="51"/></name></name></expr>)<pos:position pos:line="2325" pos:column="52"/></condition><then pos:line="2325" pos:column="52"> <block type="pseudo"><expr_stmt><expr><call><name pos:line="2325" pos:column="53">RRETURN<pos:position pos:line="2325" pos:column="60"/></name><argument_list pos:line="2325" pos:column="60">(<argument><expr><name pos:line="2325" pos:column="61">MATCH_NOMATCH<pos:position pos:line="2325" pos:column="74"/></name></expr></argument>)<pos:position pos:line="2325" pos:column="75"/></argument_list></call></expr>;<pos:position pos:line="2325" pos:column="76"/></expr_stmt></block></then></if>

          <expr_stmt><expr><call><name pos:line="2327" pos:column="11">GETCHARINC<pos:position pos:line="2327" pos:column="21"/></name><argument_list pos:line="2327" pos:column="21">(<argument><expr><name pos:line="2327" pos:column="22">c<pos:position pos:line="2327" pos:column="23"/></name></expr></argument>, <argument><expr><name pos:line="2327" pos:column="25">eptr<pos:position pos:line="2327" pos:column="29"/></name></expr></argument>)<pos:position pos:line="2327" pos:column="30"/></argument_list></call></expr>;<pos:position pos:line="2327" pos:column="31"/></expr_stmt>
          <switch pos:line="2328" pos:column="11">switch<condition pos:line="2328" pos:column="17">(<expr><name pos:line="2328" pos:column="18">ctype<pos:position pos:line="2328" pos:column="23"/></name></expr>)<pos:position pos:line="2328" pos:column="24"/></condition>
            <block pos:line="2329" pos:column="13">{
            <case pos:line="2330" pos:column="13">case <expr><name pos:line="2330" pos:column="18">OP_ANY<pos:position pos:line="2330" pos:column="24"/></name></expr>:<pos:position pos:line="2330" pos:column="25"/></case>
            <if pos:line="2331" pos:column="13">if <condition pos:line="2331" pos:column="16">(<expr><operator pos:line="2331" pos:column="17">(<pos:position pos:line="2331" pos:column="18"/></operator><name pos:line="2331" pos:column="18">ims<pos:position pos:line="2331" pos:column="21"/></name> <operator pos:line="2331" pos:column="22">&amp;<pos:position pos:line="2331" pos:column="27"/></operator> <name pos:line="2331" pos:column="24">PCRE_DOTALL<pos:position pos:line="2331" pos:column="35"/></name><operator pos:line="2331" pos:column="35">)<pos:position pos:line="2331" pos:column="36"/></operator> <operator pos:line="2331" pos:column="37">==<pos:position pos:line="2331" pos:column="39"/></operator> <literal type="number" pos:line="2331" pos:column="40">0<pos:position pos:line="2331" pos:column="41"/></literal> <operator pos:line="2331" pos:column="42">&amp;&amp;<pos:position pos:line="2331" pos:column="52"/></operator> <name pos:line="2331" pos:column="45">c<pos:position pos:line="2331" pos:column="46"/></name> <operator pos:line="2331" pos:column="47">==<pos:position pos:line="2331" pos:column="49"/></operator> <name pos:line="2331" pos:column="50">NEWLINE<pos:position pos:line="2331" pos:column="57"/></name></expr>)<pos:position pos:line="2331" pos:column="58"/></condition><then pos:line="2331" pos:column="58"> <block type="pseudo"><expr_stmt><expr><call><name pos:line="2331" pos:column="59">RRETURN<pos:position pos:line="2331" pos:column="66"/></name><argument_list pos:line="2331" pos:column="66">(<argument><expr><name pos:line="2331" pos:column="67">MATCH_NOMATCH<pos:position pos:line="2331" pos:column="80"/></name></expr></argument>)<pos:position pos:line="2331" pos:column="81"/></argument_list></call></expr>;<pos:position pos:line="2331" pos:column="82"/></expr_stmt></block></then></if>
            <break pos:line="2332" pos:column="13">break;<pos:position pos:line="2332" pos:column="19"/></break>

            <case pos:line="2334" pos:column="13">case <expr><name pos:line="2334" pos:column="18">OP_ANYBYTE<pos:position pos:line="2334" pos:column="28"/></name></expr>:<pos:position pos:line="2334" pos:column="29"/></case>
            <break pos:line="2335" pos:column="13">break;<pos:position pos:line="2335" pos:column="19"/></break>

            <case pos:line="2337" pos:column="13">case <expr><name pos:line="2337" pos:column="18">OP_NOT_DIGIT<pos:position pos:line="2337" pos:column="30"/></name></expr>:<pos:position pos:line="2337" pos:column="31"/></case>
            <if pos:line="2338" pos:column="13">if <condition pos:line="2338" pos:column="16">(<expr><name pos:line="2338" pos:column="17">c<pos:position pos:line="2338" pos:column="18"/></name> <operator pos:line="2338" pos:column="19">&lt;<pos:position pos:line="2338" pos:column="23"/></operator> <literal type="number" pos:line="2338" pos:column="21">256<pos:position pos:line="2338" pos:column="24"/></literal> <operator pos:line="2338" pos:column="25">&amp;&amp;<pos:position pos:line="2338" pos:column="35"/></operator> <operator pos:line="2338" pos:column="28">(<pos:position pos:line="2338" pos:column="29"/></operator><name><name pos:line="2338" pos:column="29">md<pos:position pos:line="2338" pos:column="31"/></name><operator pos:line="2338" pos:column="31">-&gt;<pos:position pos:line="2338" pos:column="36"/></operator><name pos:line="2338" pos:column="33">ctypes<pos:position pos:line="2338" pos:column="39"/></name><index pos:line="2338" pos:column="39">[<expr><name pos:line="2338" pos:column="40">c<pos:position pos:line="2338" pos:column="41"/></name></expr>]<pos:position pos:line="2338" pos:column="42"/></index></name> <operator pos:line="2338" pos:column="43">&amp;<pos:position pos:line="2338" pos:column="48"/></operator> <name pos:line="2338" pos:column="45">ctype_digit<pos:position pos:line="2338" pos:column="56"/></name><operator pos:line="2338" pos:column="56">)<pos:position pos:line="2338" pos:column="57"/></operator> <operator pos:line="2338" pos:column="58">!=<pos:position pos:line="2338" pos:column="60"/></operator> <literal type="number" pos:line="2338" pos:column="61">0<pos:position pos:line="2338" pos:column="62"/></literal></expr>)<pos:position pos:line="2338" pos:column="63"/></condition><then pos:line="2338" pos:column="63">
              <block type="pseudo"><expr_stmt><expr><call><name pos:line="2339" pos:column="15">RRETURN<pos:position pos:line="2339" pos:column="22"/></name><argument_list pos:line="2339" pos:column="22">(<argument><expr><name pos:line="2339" pos:column="23">MATCH_NOMATCH<pos:position pos:line="2339" pos:column="36"/></name></expr></argument>)<pos:position pos:line="2339" pos:column="37"/></argument_list></call></expr>;<pos:position pos:line="2339" pos:column="38"/></expr_stmt></block></then></if>
            <break pos:line="2340" pos:column="13">break;<pos:position pos:line="2340" pos:column="19"/></break>

            <case pos:line="2342" pos:column="13">case <expr><name pos:line="2342" pos:column="18">OP_DIGIT<pos:position pos:line="2342" pos:column="26"/></name></expr>:<pos:position pos:line="2342" pos:column="27"/></case>
            <if pos:line="2343" pos:column="13">if <condition pos:line="2343" pos:column="16">(<expr><name pos:line="2343" pos:column="17">c<pos:position pos:line="2343" pos:column="18"/></name> <operator pos:line="2343" pos:column="19">&gt;=<pos:position pos:line="2343" pos:column="24"/></operator> <literal type="number" pos:line="2343" pos:column="22">256<pos:position pos:line="2343" pos:column="25"/></literal> <operator pos:line="2343" pos:column="26">||<pos:position pos:line="2343" pos:column="28"/></operator> <operator pos:line="2343" pos:column="29">(<pos:position pos:line="2343" pos:column="30"/></operator><name><name pos:line="2343" pos:column="30">md<pos:position pos:line="2343" pos:column="32"/></name><operator pos:line="2343" pos:column="32">-&gt;<pos:position pos:line="2343" pos:column="37"/></operator><name pos:line="2343" pos:column="34">ctypes<pos:position pos:line="2343" pos:column="40"/></name><index pos:line="2343" pos:column="40">[<expr><name pos:line="2343" pos:column="41">c<pos:position pos:line="2343" pos:column="42"/></name></expr>]<pos:position pos:line="2343" pos:column="43"/></index></name> <operator pos:line="2343" pos:column="44">&amp;<pos:position pos:line="2343" pos:column="49"/></operator> <name pos:line="2343" pos:column="46">ctype_digit<pos:position pos:line="2343" pos:column="57"/></name><operator pos:line="2343" pos:column="57">)<pos:position pos:line="2343" pos:column="58"/></operator> <operator pos:line="2343" pos:column="59">==<pos:position pos:line="2343" pos:column="61"/></operator> <literal type="number" pos:line="2343" pos:column="62">0<pos:position pos:line="2343" pos:column="63"/></literal></expr>)<pos:position pos:line="2343" pos:column="64"/></condition><then pos:line="2343" pos:column="64">
              <block type="pseudo"><expr_stmt><expr><call><name pos:line="2344" pos:column="15">RRETURN<pos:position pos:line="2344" pos:column="22"/></name><argument_list pos:line="2344" pos:column="22">(<argument><expr><name pos:line="2344" pos:column="23">MATCH_NOMATCH<pos:position pos:line="2344" pos:column="36"/></name></expr></argument>)<pos:position pos:line="2344" pos:column="37"/></argument_list></call></expr>;<pos:position pos:line="2344" pos:column="38"/></expr_stmt></block></then></if>
            <break pos:line="2345" pos:column="13">break;<pos:position pos:line="2345" pos:column="19"/></break>

            <case pos:line="2347" pos:column="13">case <expr><name pos:line="2347" pos:column="18">OP_NOT_WHITESPACE<pos:position pos:line="2347" pos:column="35"/></name></expr>:<pos:position pos:line="2347" pos:column="36"/></case>
            <if pos:line="2348" pos:column="13">if <condition pos:line="2348" pos:column="16">(<expr><name pos:line="2348" pos:column="17">c<pos:position pos:line="2348" pos:column="18"/></name> <operator pos:line="2348" pos:column="19">&lt;<pos:position pos:line="2348" pos:column="23"/></operator> <literal type="number" pos:line="2348" pos:column="21">256<pos:position pos:line="2348" pos:column="24"/></literal> <operator pos:line="2348" pos:column="25">&amp;&amp;<pos:position pos:line="2348" pos:column="35"/></operator> <operator pos:line="2348" pos:column="28">(<pos:position pos:line="2348" pos:column="29"/></operator><name><name pos:line="2348" pos:column="29">md<pos:position pos:line="2348" pos:column="31"/></name><operator pos:line="2348" pos:column="31">-&gt;<pos:position pos:line="2348" pos:column="36"/></operator><name pos:line="2348" pos:column="33">ctypes<pos:position pos:line="2348" pos:column="39"/></name><index pos:line="2348" pos:column="39">[<expr><name pos:line="2348" pos:column="40">c<pos:position pos:line="2348" pos:column="41"/></name></expr>]<pos:position pos:line="2348" pos:column="42"/></index></name> <operator pos:line="2348" pos:column="43">&amp;<pos:position pos:line="2348" pos:column="48"/></operator> <name pos:line="2348" pos:column="45">ctype_space<pos:position pos:line="2348" pos:column="56"/></name><operator pos:line="2348" pos:column="56">)<pos:position pos:line="2348" pos:column="57"/></operator> <operator pos:line="2348" pos:column="58">!=<pos:position pos:line="2348" pos:column="60"/></operator> <literal type="number" pos:line="2348" pos:column="61">0<pos:position pos:line="2348" pos:column="62"/></literal></expr>)<pos:position pos:line="2348" pos:column="63"/></condition><then pos:line="2348" pos:column="63">
              <block type="pseudo"><expr_stmt><expr><call><name pos:line="2349" pos:column="15">RRETURN<pos:position pos:line="2349" pos:column="22"/></name><argument_list pos:line="2349" pos:column="22">(<argument><expr><name pos:line="2349" pos:column="23">MATCH_NOMATCH<pos:position pos:line="2349" pos:column="36"/></name></expr></argument>)<pos:position pos:line="2349" pos:column="37"/></argument_list></call></expr>;<pos:position pos:line="2349" pos:column="38"/></expr_stmt></block></then></if>
            <break pos:line="2350" pos:column="13">break;<pos:position pos:line="2350" pos:column="19"/></break>

            <case pos:line="2352" pos:column="13">case <expr><name pos:line="2352" pos:column="18">OP_WHITESPACE<pos:position pos:line="2352" pos:column="31"/></name></expr>:<pos:position pos:line="2352" pos:column="32"/></case>
            <if pos:line="2353" pos:column="13">if  <condition pos:line="2353" pos:column="17">(<expr><name pos:line="2353" pos:column="18">c<pos:position pos:line="2353" pos:column="19"/></name> <operator pos:line="2353" pos:column="20">&gt;=<pos:position pos:line="2353" pos:column="25"/></operator> <literal type="number" pos:line="2353" pos:column="23">256<pos:position pos:line="2353" pos:column="26"/></literal> <operator pos:line="2353" pos:column="27">||<pos:position pos:line="2353" pos:column="29"/></operator> <operator pos:line="2353" pos:column="30">(<pos:position pos:line="2353" pos:column="31"/></operator><name><name pos:line="2353" pos:column="31">md<pos:position pos:line="2353" pos:column="33"/></name><operator pos:line="2353" pos:column="33">-&gt;<pos:position pos:line="2353" pos:column="38"/></operator><name pos:line="2353" pos:column="35">ctypes<pos:position pos:line="2353" pos:column="41"/></name><index pos:line="2353" pos:column="41">[<expr><name pos:line="2353" pos:column="42">c<pos:position pos:line="2353" pos:column="43"/></name></expr>]<pos:position pos:line="2353" pos:column="44"/></index></name> <operator pos:line="2353" pos:column="45">&amp;<pos:position pos:line="2353" pos:column="50"/></operator> <name pos:line="2353" pos:column="47">ctype_space<pos:position pos:line="2353" pos:column="58"/></name><operator pos:line="2353" pos:column="58">)<pos:position pos:line="2353" pos:column="59"/></operator> <operator pos:line="2353" pos:column="60">==<pos:position pos:line="2353" pos:column="62"/></operator> <literal type="number" pos:line="2353" pos:column="63">0<pos:position pos:line="2353" pos:column="64"/></literal></expr>)<pos:position pos:line="2353" pos:column="65"/></condition><then pos:line="2353" pos:column="65">
              <block type="pseudo"><expr_stmt><expr><call><name pos:line="2354" pos:column="15">RRETURN<pos:position pos:line="2354" pos:column="22"/></name><argument_list pos:line="2354" pos:column="22">(<argument><expr><name pos:line="2354" pos:column="23">MATCH_NOMATCH<pos:position pos:line="2354" pos:column="36"/></name></expr></argument>)<pos:position pos:line="2354" pos:column="37"/></argument_list></call></expr>;<pos:position pos:line="2354" pos:column="38"/></expr_stmt></block></then></if>
            <break pos:line="2355" pos:column="13">break;<pos:position pos:line="2355" pos:column="19"/></break>

            <case pos:line="2357" pos:column="13">case <expr><name pos:line="2357" pos:column="18">OP_NOT_WORDCHAR<pos:position pos:line="2357" pos:column="33"/></name></expr>:<pos:position pos:line="2357" pos:column="34"/></case>
            <if pos:line="2358" pos:column="13">if <condition pos:line="2358" pos:column="16">(<expr><name pos:line="2358" pos:column="17">c<pos:position pos:line="2358" pos:column="18"/></name> <operator pos:line="2358" pos:column="19">&lt;<pos:position pos:line="2358" pos:column="23"/></operator> <literal type="number" pos:line="2358" pos:column="21">256<pos:position pos:line="2358" pos:column="24"/></literal> <operator pos:line="2358" pos:column="25">&amp;&amp;<pos:position pos:line="2358" pos:column="35"/></operator> <operator pos:line="2358" pos:column="28">(<pos:position pos:line="2358" pos:column="29"/></operator><name><name pos:line="2358" pos:column="29">md<pos:position pos:line="2358" pos:column="31"/></name><operator pos:line="2358" pos:column="31">-&gt;<pos:position pos:line="2358" pos:column="36"/></operator><name pos:line="2358" pos:column="33">ctypes<pos:position pos:line="2358" pos:column="39"/></name><index pos:line="2358" pos:column="39">[<expr><name pos:line="2358" pos:column="40">c<pos:position pos:line="2358" pos:column="41"/></name></expr>]<pos:position pos:line="2358" pos:column="42"/></index></name> <operator pos:line="2358" pos:column="43">&amp;<pos:position pos:line="2358" pos:column="48"/></operator> <name pos:line="2358" pos:column="45">ctype_word<pos:position pos:line="2358" pos:column="55"/></name><operator pos:line="2358" pos:column="55">)<pos:position pos:line="2358" pos:column="56"/></operator> <operator pos:line="2358" pos:column="57">!=<pos:position pos:line="2358" pos:column="59"/></operator> <literal type="number" pos:line="2358" pos:column="60">0<pos:position pos:line="2358" pos:column="61"/></literal></expr>)<pos:position pos:line="2358" pos:column="62"/></condition><then pos:line="2358" pos:column="62">
              <block type="pseudo"><expr_stmt><expr><call><name pos:line="2359" pos:column="15">RRETURN<pos:position pos:line="2359" pos:column="22"/></name><argument_list pos:line="2359" pos:column="22">(<argument><expr><name pos:line="2359" pos:column="23">MATCH_NOMATCH<pos:position pos:line="2359" pos:column="36"/></name></expr></argument>)<pos:position pos:line="2359" pos:column="37"/></argument_list></call></expr>;<pos:position pos:line="2359" pos:column="38"/></expr_stmt></block></then></if>
            <break pos:line="2360" pos:column="13">break;<pos:position pos:line="2360" pos:column="19"/></break>

            <case pos:line="2362" pos:column="13">case <expr><name pos:line="2362" pos:column="18">OP_WORDCHAR<pos:position pos:line="2362" pos:column="29"/></name></expr>:<pos:position pos:line="2362" pos:column="30"/></case>
            <if pos:line="2363" pos:column="13">if <condition pos:line="2363" pos:column="16">(<expr><name pos:line="2363" pos:column="17">c<pos:position pos:line="2363" pos:column="18"/></name> <operator pos:line="2363" pos:column="19">&gt;=<pos:position pos:line="2363" pos:column="24"/></operator> <literal type="number" pos:line="2363" pos:column="22">256<pos:position pos:line="2363" pos:column="25"/></literal> <operator pos:line="2363" pos:column="26">&amp;&amp;<pos:position pos:line="2363" pos:column="36"/></operator> <operator pos:line="2363" pos:column="29">(<pos:position pos:line="2363" pos:column="30"/></operator><name><name pos:line="2363" pos:column="30">md<pos:position pos:line="2363" pos:column="32"/></name><operator pos:line="2363" pos:column="32">-&gt;<pos:position pos:line="2363" pos:column="37"/></operator><name pos:line="2363" pos:column="34">ctypes<pos:position pos:line="2363" pos:column="40"/></name><index pos:line="2363" pos:column="40">[<expr><name pos:line="2363" pos:column="41">c<pos:position pos:line="2363" pos:column="42"/></name></expr>]<pos:position pos:line="2363" pos:column="43"/></index></name> <operator pos:line="2363" pos:column="44">&amp;<pos:position pos:line="2363" pos:column="49"/></operator> <name pos:line="2363" pos:column="46">ctype_word<pos:position pos:line="2363" pos:column="56"/></name><operator pos:line="2363" pos:column="56">)<pos:position pos:line="2363" pos:column="57"/></operator> <operator pos:line="2363" pos:column="58">==<pos:position pos:line="2363" pos:column="60"/></operator> <literal type="number" pos:line="2363" pos:column="61">0<pos:position pos:line="2363" pos:column="62"/></literal></expr>)<pos:position pos:line="2363" pos:column="63"/></condition><then pos:line="2363" pos:column="63">
              <block type="pseudo"><expr_stmt><expr><call><name pos:line="2364" pos:column="15">RRETURN<pos:position pos:line="2364" pos:column="22"/></name><argument_list pos:line="2364" pos:column="22">(<argument><expr><name pos:line="2364" pos:column="23">MATCH_NOMATCH<pos:position pos:line="2364" pos:column="36"/></name></expr></argument>)<pos:position pos:line="2364" pos:column="37"/></argument_list></call></expr>;<pos:position pos:line="2364" pos:column="38"/></expr_stmt></block></then></if>
            <break pos:line="2365" pos:column="13">break;<pos:position pos:line="2365" pos:column="19"/></break>

            <default pos:line="2367" pos:column="13">default:<pos:position pos:line="2367" pos:column="21"/></default>
            <expr_stmt><expr><call><name pos:line="2368" pos:column="13">RRETURN<pos:position pos:line="2368" pos:column="20"/></name><argument_list pos:line="2368" pos:column="20">(<argument><expr><name pos:line="2368" pos:column="21">PCRE_ERROR_INTERNAL<pos:position pos:line="2368" pos:column="40"/></name></expr></argument>)<pos:position pos:line="2368" pos:column="41"/></argument_list></call></expr>;<pos:position pos:line="2368" pos:column="42"/></expr_stmt>
            }<pos:position pos:line="2369" pos:column="14"/></block></switch>
          }<pos:position pos:line="2370" pos:column="12"/></block></for>
        }<pos:position pos:line="2371" pos:column="10"/></block></then></if></elseif>
      <else pos:line="2372" pos:column="7">else
<cpp:endif pos:line="2373" pos:column="1">#<cpp:directive pos:line="2373" pos:column="2">endif<pos:position pos:line="2373" pos:column="7"/></cpp:directive></cpp:endif>
      <comment type="block" pos:line="2374" pos:column="7">/* Not UTF-8 mode */</comment>
        <block pos:line="2375" pos:column="9">{
        <for pos:line="2376" pos:column="9">for <control pos:line="2376" pos:column="13">(<init><expr><name pos:line="2376" pos:column="14">fi<pos:position pos:line="2376" pos:column="16"/></name> <operator pos:line="2376" pos:column="17">=<pos:position pos:line="2376" pos:column="18"/></operator> <name pos:line="2376" pos:column="19">min<pos:position pos:line="2376" pos:column="22"/></name></expr>;<pos:position pos:line="2376" pos:column="23"/></init><condition pos:line="2376" pos:column="23">;<pos:position pos:line="2376" pos:column="24"/></condition> <incr><expr><name pos:line="2376" pos:column="25">fi<pos:position pos:line="2376" pos:column="27"/></name><operator pos:line="2376" pos:column="27">++<pos:position pos:line="2376" pos:column="29"/></operator></expr></incr>)<pos:position pos:line="2376" pos:column="30"/></control>
          <block pos:line="2377" pos:column="11">{
          <expr_stmt><expr><call><name pos:line="2378" pos:column="11">RMATCH<pos:position pos:line="2378" pos:column="17"/></name><argument_list pos:line="2378" pos:column="17">(<argument><expr><name pos:line="2378" pos:column="18">rrc<pos:position pos:line="2378" pos:column="21"/></name></expr></argument>, <argument><expr><name pos:line="2378" pos:column="23">eptr<pos:position pos:line="2378" pos:column="27"/></name></expr></argument>, <argument><expr><name pos:line="2378" pos:column="29">ecode<pos:position pos:line="2378" pos:column="34"/></name></expr></argument>, <argument><expr><name pos:line="2378" pos:column="36">offset_top<pos:position pos:line="2378" pos:column="46"/></name></expr></argument>, <argument><expr><name pos:line="2378" pos:column="48">md<pos:position pos:line="2378" pos:column="50"/></name></expr></argument>, <argument><expr><name pos:line="2378" pos:column="52">ims<pos:position pos:line="2378" pos:column="55"/></name></expr></argument>, <argument><expr><name pos:line="2378" pos:column="57">eptrb<pos:position pos:line="2378" pos:column="62"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="2378" pos:column="64">0<pos:position pos:line="2378" pos:column="65"/></literal></expr></argument>)<pos:position pos:line="2378" pos:column="66"/></argument_list></call></expr>;<pos:position pos:line="2378" pos:column="67"/></expr_stmt>
          <if pos:line="2379" pos:column="11">if <condition pos:line="2379" pos:column="14">(<expr><name pos:line="2379" pos:column="15">rrc<pos:position pos:line="2379" pos:column="18"/></name> <operator pos:line="2379" pos:column="19">!=<pos:position pos:line="2379" pos:column="21"/></operator> <name pos:line="2379" pos:column="22">MATCH_NOMATCH<pos:position pos:line="2379" pos:column="35"/></name></expr>)<pos:position pos:line="2379" pos:column="36"/></condition><then pos:line="2379" pos:column="36"> <block type="pseudo"><expr_stmt><expr><call><name pos:line="2379" pos:column="37">RRETURN<pos:position pos:line="2379" pos:column="44"/></name><argument_list pos:line="2379" pos:column="44">(<argument><expr><name pos:line="2379" pos:column="45">rrc<pos:position pos:line="2379" pos:column="48"/></name></expr></argument>)<pos:position pos:line="2379" pos:column="49"/></argument_list></call></expr>;<pos:position pos:line="2379" pos:column="50"/></expr_stmt></block></then></if>
          <if pos:line="2380" pos:column="11">if <condition pos:line="2380" pos:column="14">(<expr><name pos:line="2380" pos:column="15">fi<pos:position pos:line="2380" pos:column="17"/></name> <operator pos:line="2380" pos:column="18">&gt;=<pos:position pos:line="2380" pos:column="23"/></operator> <name pos:line="2380" pos:column="21">max<pos:position pos:line="2380" pos:column="24"/></name> <operator pos:line="2380" pos:column="25">||<pos:position pos:line="2380" pos:column="27"/></operator> <name pos:line="2380" pos:column="28">eptr<pos:position pos:line="2380" pos:column="32"/></name> <operator pos:line="2380" pos:column="33">&gt;=<pos:position pos:line="2380" pos:column="38"/></operator> <name><name pos:line="2380" pos:column="36">md<pos:position pos:line="2380" pos:column="38"/></name><operator pos:line="2380" pos:column="38">-&gt;<pos:position pos:line="2380" pos:column="43"/></operator><name pos:line="2380" pos:column="40">end_subject<pos:position pos:line="2380" pos:column="51"/></name></name></expr>)<pos:position pos:line="2380" pos:column="52"/></condition><then pos:line="2380" pos:column="52"> <block type="pseudo"><expr_stmt><expr><call><name pos:line="2380" pos:column="53">RRETURN<pos:position pos:line="2380" pos:column="60"/></name><argument_list pos:line="2380" pos:column="60">(<argument><expr><name pos:line="2380" pos:column="61">MATCH_NOMATCH<pos:position pos:line="2380" pos:column="74"/></name></expr></argument>)<pos:position pos:line="2380" pos:column="75"/></argument_list></call></expr>;<pos:position pos:line="2380" pos:column="76"/></expr_stmt></block></then></if>
          <expr_stmt><expr><name pos:line="2381" pos:column="11">c<pos:position pos:line="2381" pos:column="12"/></name> <operator pos:line="2381" pos:column="13">=<pos:position pos:line="2381" pos:column="14"/></operator> <operator pos:line="2381" pos:column="15">*<pos:position pos:line="2381" pos:column="16"/></operator><name pos:line="2381" pos:column="16">eptr<pos:position pos:line="2381" pos:column="20"/></name><operator pos:line="2381" pos:column="20">++<pos:position pos:line="2381" pos:column="22"/></operator></expr>;<pos:position pos:line="2381" pos:column="23"/></expr_stmt>
          <switch pos:line="2382" pos:column="11">switch<condition pos:line="2382" pos:column="17">(<expr><name pos:line="2382" pos:column="18">ctype<pos:position pos:line="2382" pos:column="23"/></name></expr>)<pos:position pos:line="2382" pos:column="24"/></condition>
            <block pos:line="2383" pos:column="13">{
            <case pos:line="2384" pos:column="13">case <expr><name pos:line="2384" pos:column="18">OP_ANY<pos:position pos:line="2384" pos:column="24"/></name></expr>:<pos:position pos:line="2384" pos:column="25"/></case>
            <if pos:line="2385" pos:column="13">if <condition pos:line="2385" pos:column="16">(<expr><operator pos:line="2385" pos:column="17">(<pos:position pos:line="2385" pos:column="18"/></operator><name pos:line="2385" pos:column="18">ims<pos:position pos:line="2385" pos:column="21"/></name> <operator pos:line="2385" pos:column="22">&amp;<pos:position pos:line="2385" pos:column="27"/></operator> <name pos:line="2385" pos:column="24">PCRE_DOTALL<pos:position pos:line="2385" pos:column="35"/></name><operator pos:line="2385" pos:column="35">)<pos:position pos:line="2385" pos:column="36"/></operator> <operator pos:line="2385" pos:column="37">==<pos:position pos:line="2385" pos:column="39"/></operator> <literal type="number" pos:line="2385" pos:column="40">0<pos:position pos:line="2385" pos:column="41"/></literal> <operator pos:line="2385" pos:column="42">&amp;&amp;<pos:position pos:line="2385" pos:column="52"/></operator> <name pos:line="2385" pos:column="45">c<pos:position pos:line="2385" pos:column="46"/></name> <operator pos:line="2385" pos:column="47">==<pos:position pos:line="2385" pos:column="49"/></operator> <name pos:line="2385" pos:column="50">NEWLINE<pos:position pos:line="2385" pos:column="57"/></name></expr>)<pos:position pos:line="2385" pos:column="58"/></condition><then pos:line="2385" pos:column="58"> <block type="pseudo"><expr_stmt><expr><call><name pos:line="2385" pos:column="59">RRETURN<pos:position pos:line="2385" pos:column="66"/></name><argument_list pos:line="2385" pos:column="66">(<argument><expr><name pos:line="2385" pos:column="67">MATCH_NOMATCH<pos:position pos:line="2385" pos:column="80"/></name></expr></argument>)<pos:position pos:line="2385" pos:column="81"/></argument_list></call></expr>;<pos:position pos:line="2385" pos:column="82"/></expr_stmt></block></then></if>
            <break pos:line="2386" pos:column="13">break;<pos:position pos:line="2386" pos:column="19"/></break>

            <case pos:line="2388" pos:column="13">case <expr><name pos:line="2388" pos:column="18">OP_ANYBYTE<pos:position pos:line="2388" pos:column="28"/></name></expr>:<pos:position pos:line="2388" pos:column="29"/></case>
            <break pos:line="2389" pos:column="13">break;<pos:position pos:line="2389" pos:column="19"/></break>

            <case pos:line="2391" pos:column="13">case <expr><name pos:line="2391" pos:column="18">OP_NOT_DIGIT<pos:position pos:line="2391" pos:column="30"/></name></expr>:<pos:position pos:line="2391" pos:column="31"/></case>
            <if pos:line="2392" pos:column="13">if <condition pos:line="2392" pos:column="16">(<expr><operator pos:line="2392" pos:column="17">(<pos:position pos:line="2392" pos:column="18"/></operator><name><name pos:line="2392" pos:column="18">md<pos:position pos:line="2392" pos:column="20"/></name><operator pos:line="2392" pos:column="20">-&gt;<pos:position pos:line="2392" pos:column="25"/></operator><name pos:line="2392" pos:column="22">ctypes<pos:position pos:line="2392" pos:column="28"/></name><index pos:line="2392" pos:column="28">[<expr><name pos:line="2392" pos:column="29">c<pos:position pos:line="2392" pos:column="30"/></name></expr>]<pos:position pos:line="2392" pos:column="31"/></index></name> <operator pos:line="2392" pos:column="32">&amp;<pos:position pos:line="2392" pos:column="37"/></operator> <name pos:line="2392" pos:column="34">ctype_digit<pos:position pos:line="2392" pos:column="45"/></name><operator pos:line="2392" pos:column="45">)<pos:position pos:line="2392" pos:column="46"/></operator> <operator pos:line="2392" pos:column="47">!=<pos:position pos:line="2392" pos:column="49"/></operator> <literal type="number" pos:line="2392" pos:column="50">0<pos:position pos:line="2392" pos:column="51"/></literal></expr>)<pos:position pos:line="2392" pos:column="52"/></condition><then pos:line="2392" pos:column="52"> <block type="pseudo"><expr_stmt><expr><call><name pos:line="2392" pos:column="53">RRETURN<pos:position pos:line="2392" pos:column="60"/></name><argument_list pos:line="2392" pos:column="60">(<argument><expr><name pos:line="2392" pos:column="61">MATCH_NOMATCH<pos:position pos:line="2392" pos:column="74"/></name></expr></argument>)<pos:position pos:line="2392" pos:column="75"/></argument_list></call></expr>;<pos:position pos:line="2392" pos:column="76"/></expr_stmt></block></then></if>
            <break pos:line="2393" pos:column="13">break;<pos:position pos:line="2393" pos:column="19"/></break>

            <case pos:line="2395" pos:column="13">case <expr><name pos:line="2395" pos:column="18">OP_DIGIT<pos:position pos:line="2395" pos:column="26"/></name></expr>:<pos:position pos:line="2395" pos:column="27"/></case>
            <if pos:line="2396" pos:column="13">if <condition pos:line="2396" pos:column="16">(<expr><operator pos:line="2396" pos:column="17">(<pos:position pos:line="2396" pos:column="18"/></operator><name><name pos:line="2396" pos:column="18">md<pos:position pos:line="2396" pos:column="20"/></name><operator pos:line="2396" pos:column="20">-&gt;<pos:position pos:line="2396" pos:column="25"/></operator><name pos:line="2396" pos:column="22">ctypes<pos:position pos:line="2396" pos:column="28"/></name><index pos:line="2396" pos:column="28">[<expr><name pos:line="2396" pos:column="29">c<pos:position pos:line="2396" pos:column="30"/></name></expr>]<pos:position pos:line="2396" pos:column="31"/></index></name> <operator pos:line="2396" pos:column="32">&amp;<pos:position pos:line="2396" pos:column="37"/></operator> <name pos:line="2396" pos:column="34">ctype_digit<pos:position pos:line="2396" pos:column="45"/></name><operator pos:line="2396" pos:column="45">)<pos:position pos:line="2396" pos:column="46"/></operator> <operator pos:line="2396" pos:column="47">==<pos:position pos:line="2396" pos:column="49"/></operator> <literal type="number" pos:line="2396" pos:column="50">0<pos:position pos:line="2396" pos:column="51"/></literal></expr>)<pos:position pos:line="2396" pos:column="52"/></condition><then pos:line="2396" pos:column="52"> <block type="pseudo"><expr_stmt><expr><call><name pos:line="2396" pos:column="53">RRETURN<pos:position pos:line="2396" pos:column="60"/></name><argument_list pos:line="2396" pos:column="60">(<argument><expr><name pos:line="2396" pos:column="61">MATCH_NOMATCH<pos:position pos:line="2396" pos:column="74"/></name></expr></argument>)<pos:position pos:line="2396" pos:column="75"/></argument_list></call></expr>;<pos:position pos:line="2396" pos:column="76"/></expr_stmt></block></then></if>
            <break pos:line="2397" pos:column="13">break;<pos:position pos:line="2397" pos:column="19"/></break>

            <case pos:line="2399" pos:column="13">case <expr><name pos:line="2399" pos:column="18">OP_NOT_WHITESPACE<pos:position pos:line="2399" pos:column="35"/></name></expr>:<pos:position pos:line="2399" pos:column="36"/></case>
            <if pos:line="2400" pos:column="13">if <condition pos:line="2400" pos:column="16">(<expr><operator pos:line="2400" pos:column="17">(<pos:position pos:line="2400" pos:column="18"/></operator><name><name pos:line="2400" pos:column="18">md<pos:position pos:line="2400" pos:column="20"/></name><operator pos:line="2400" pos:column="20">-&gt;<pos:position pos:line="2400" pos:column="25"/></operator><name pos:line="2400" pos:column="22">ctypes<pos:position pos:line="2400" pos:column="28"/></name><index pos:line="2400" pos:column="28">[<expr><name pos:line="2400" pos:column="29">c<pos:position pos:line="2400" pos:column="30"/></name></expr>]<pos:position pos:line="2400" pos:column="31"/></index></name> <operator pos:line="2400" pos:column="32">&amp;<pos:position pos:line="2400" pos:column="37"/></operator> <name pos:line="2400" pos:column="34">ctype_space<pos:position pos:line="2400" pos:column="45"/></name><operator pos:line="2400" pos:column="45">)<pos:position pos:line="2400" pos:column="46"/></operator> <operator pos:line="2400" pos:column="47">!=<pos:position pos:line="2400" pos:column="49"/></operator> <literal type="number" pos:line="2400" pos:column="50">0<pos:position pos:line="2400" pos:column="51"/></literal></expr>)<pos:position pos:line="2400" pos:column="52"/></condition><then pos:line="2400" pos:column="52"> <block type="pseudo"><expr_stmt><expr><call><name pos:line="2400" pos:column="53">RRETURN<pos:position pos:line="2400" pos:column="60"/></name><argument_list pos:line="2400" pos:column="60">(<argument><expr><name pos:line="2400" pos:column="61">MATCH_NOMATCH<pos:position pos:line="2400" pos:column="74"/></name></expr></argument>)<pos:position pos:line="2400" pos:column="75"/></argument_list></call></expr>;<pos:position pos:line="2400" pos:column="76"/></expr_stmt></block></then></if>
            <break pos:line="2401" pos:column="13">break;<pos:position pos:line="2401" pos:column="19"/></break>

            <case pos:line="2403" pos:column="13">case <expr><name pos:line="2403" pos:column="18">OP_WHITESPACE<pos:position pos:line="2403" pos:column="31"/></name></expr>:<pos:position pos:line="2403" pos:column="32"/></case>
            <if pos:line="2404" pos:column="13">if  <condition pos:line="2404" pos:column="17">(<expr><operator pos:line="2404" pos:column="18">(<pos:position pos:line="2404" pos:column="19"/></operator><name><name pos:line="2404" pos:column="19">md<pos:position pos:line="2404" pos:column="21"/></name><operator pos:line="2404" pos:column="21">-&gt;<pos:position pos:line="2404" pos:column="26"/></operator><name pos:line="2404" pos:column="23">ctypes<pos:position pos:line="2404" pos:column="29"/></name><index pos:line="2404" pos:column="29">[<expr><name pos:line="2404" pos:column="30">c<pos:position pos:line="2404" pos:column="31"/></name></expr>]<pos:position pos:line="2404" pos:column="32"/></index></name> <operator pos:line="2404" pos:column="33">&amp;<pos:position pos:line="2404" pos:column="38"/></operator> <name pos:line="2404" pos:column="35">ctype_space<pos:position pos:line="2404" pos:column="46"/></name><operator pos:line="2404" pos:column="46">)<pos:position pos:line="2404" pos:column="47"/></operator> <operator pos:line="2404" pos:column="48">==<pos:position pos:line="2404" pos:column="50"/></operator> <literal type="number" pos:line="2404" pos:column="51">0<pos:position pos:line="2404" pos:column="52"/></literal></expr>)<pos:position pos:line="2404" pos:column="53"/></condition><then pos:line="2404" pos:column="53"> <block type="pseudo"><expr_stmt><expr><call><name pos:line="2404" pos:column="54">RRETURN<pos:position pos:line="2404" pos:column="61"/></name><argument_list pos:line="2404" pos:column="61">(<argument><expr><name pos:line="2404" pos:column="62">MATCH_NOMATCH<pos:position pos:line="2404" pos:column="75"/></name></expr></argument>)<pos:position pos:line="2404" pos:column="76"/></argument_list></call></expr>;<pos:position pos:line="2404" pos:column="77"/></expr_stmt></block></then></if>
            <break pos:line="2405" pos:column="13">break;<pos:position pos:line="2405" pos:column="19"/></break>

            <case pos:line="2407" pos:column="13">case <expr><name pos:line="2407" pos:column="18">OP_NOT_WORDCHAR<pos:position pos:line="2407" pos:column="33"/></name></expr>:<pos:position pos:line="2407" pos:column="34"/></case>
            <if pos:line="2408" pos:column="13">if <condition pos:line="2408" pos:column="16">(<expr><operator pos:line="2408" pos:column="17">(<pos:position pos:line="2408" pos:column="18"/></operator><name><name pos:line="2408" pos:column="18">md<pos:position pos:line="2408" pos:column="20"/></name><operator pos:line="2408" pos:column="20">-&gt;<pos:position pos:line="2408" pos:column="25"/></operator><name pos:line="2408" pos:column="22">ctypes<pos:position pos:line="2408" pos:column="28"/></name><index pos:line="2408" pos:column="28">[<expr><name pos:line="2408" pos:column="29">c<pos:position pos:line="2408" pos:column="30"/></name></expr>]<pos:position pos:line="2408" pos:column="31"/></index></name> <operator pos:line="2408" pos:column="32">&amp;<pos:position pos:line="2408" pos:column="37"/></operator> <name pos:line="2408" pos:column="34">ctype_word<pos:position pos:line="2408" pos:column="44"/></name><operator pos:line="2408" pos:column="44">)<pos:position pos:line="2408" pos:column="45"/></operator> <operator pos:line="2408" pos:column="46">!=<pos:position pos:line="2408" pos:column="48"/></operator> <literal type="number" pos:line="2408" pos:column="49">0<pos:position pos:line="2408" pos:column="50"/></literal></expr>)<pos:position pos:line="2408" pos:column="51"/></condition><then pos:line="2408" pos:column="51"> <block type="pseudo"><expr_stmt><expr><call><name pos:line="2408" pos:column="52">RRETURN<pos:position pos:line="2408" pos:column="59"/></name><argument_list pos:line="2408" pos:column="59">(<argument><expr><name pos:line="2408" pos:column="60">MATCH_NOMATCH<pos:position pos:line="2408" pos:column="73"/></name></expr></argument>)<pos:position pos:line="2408" pos:column="74"/></argument_list></call></expr>;<pos:position pos:line="2408" pos:column="75"/></expr_stmt></block></then></if>
            <break pos:line="2409" pos:column="13">break;<pos:position pos:line="2409" pos:column="19"/></break>

            <case pos:line="2411" pos:column="13">case <expr><name pos:line="2411" pos:column="18">OP_WORDCHAR<pos:position pos:line="2411" pos:column="29"/></name></expr>:<pos:position pos:line="2411" pos:column="30"/></case>
            <if pos:line="2412" pos:column="13">if <condition pos:line="2412" pos:column="16">(<expr><operator pos:line="2412" pos:column="17">(<pos:position pos:line="2412" pos:column="18"/></operator><name><name pos:line="2412" pos:column="18">md<pos:position pos:line="2412" pos:column="20"/></name><operator pos:line="2412" pos:column="20">-&gt;<pos:position pos:line="2412" pos:column="25"/></operator><name pos:line="2412" pos:column="22">ctypes<pos:position pos:line="2412" pos:column="28"/></name><index pos:line="2412" pos:column="28">[<expr><name pos:line="2412" pos:column="29">c<pos:position pos:line="2412" pos:column="30"/></name></expr>]<pos:position pos:line="2412" pos:column="31"/></index></name> <operator pos:line="2412" pos:column="32">&amp;<pos:position pos:line="2412" pos:column="37"/></operator> <name pos:line="2412" pos:column="34">ctype_word<pos:position pos:line="2412" pos:column="44"/></name><operator pos:line="2412" pos:column="44">)<pos:position pos:line="2412" pos:column="45"/></operator> <operator pos:line="2412" pos:column="46">==<pos:position pos:line="2412" pos:column="48"/></operator> <literal type="number" pos:line="2412" pos:column="49">0<pos:position pos:line="2412" pos:column="50"/></literal></expr>)<pos:position pos:line="2412" pos:column="51"/></condition><then pos:line="2412" pos:column="51"> <block type="pseudo"><expr_stmt><expr><call><name pos:line="2412" pos:column="52">RRETURN<pos:position pos:line="2412" pos:column="59"/></name><argument_list pos:line="2412" pos:column="59">(<argument><expr><name pos:line="2412" pos:column="60">MATCH_NOMATCH<pos:position pos:line="2412" pos:column="73"/></name></expr></argument>)<pos:position pos:line="2412" pos:column="74"/></argument_list></call></expr>;<pos:position pos:line="2412" pos:column="75"/></expr_stmt></block></then></if>
            <break pos:line="2413" pos:column="13">break;<pos:position pos:line="2413" pos:column="19"/></break>

            <default pos:line="2415" pos:column="13">default:<pos:position pos:line="2415" pos:column="21"/></default>
            <expr_stmt><expr><call><name pos:line="2416" pos:column="13">RRETURN<pos:position pos:line="2416" pos:column="20"/></name><argument_list pos:line="2416" pos:column="20">(<argument><expr><name pos:line="2416" pos:column="21">PCRE_ERROR_INTERNAL<pos:position pos:line="2416" pos:column="40"/></name></expr></argument>)<pos:position pos:line="2416" pos:column="41"/></argument_list></call></expr>;<pos:position pos:line="2416" pos:column="42"/></expr_stmt>
            }<pos:position pos:line="2417" pos:column="14"/></block></switch>
          }<pos:position pos:line="2418" pos:column="12"/></block></for>
        }<pos:position pos:line="2419" pos:column="10"/></block></else></if>
      <comment type="block" pos:line="2420" pos:column="7">/* Control never gets here */</comment>
      }<pos:position pos:line="2421" pos:column="8"/></block></then>

    <comment type="block" pos:line="2423" pos:column="5">/* If maximizing it is worth using inline code for speed, doing the type
    test once at the start (i.e. keep it out of the loop). Again, keep the
    UTF-8 and UCP stuff separate. */</comment>

    <else pos:line="2427" pos:column="5">else
      <block pos:line="2428" pos:column="7">{
      <expr_stmt><expr><name pos:line="2429" pos:column="7">pp<pos:position pos:line="2429" pos:column="9"/></name> <operator pos:line="2429" pos:column="10">=<pos:position pos:line="2429" pos:column="11"/></operator> <name pos:line="2429" pos:column="12">eptr<pos:position pos:line="2429" pos:column="16"/></name></expr>;<pos:position pos:line="2429" pos:column="17"/></expr_stmt>  <comment type="block" pos:line="2429" pos:column="19">/* Remember where we started */</comment>

<cpp:ifdef pos:line="2431" pos:column="1">#<cpp:directive pos:line="2431" pos:column="2">ifdef<pos:position pos:line="2431" pos:column="7"/></cpp:directive> <name pos:line="2431" pos:column="8">SUPPORT_UCP<pos:position pos:line="2431" pos:column="19"/></name></cpp:ifdef>
      <if pos:line="2432" pos:column="7">if <condition pos:line="2432" pos:column="10">(<expr><name pos:line="2432" pos:column="11">prop_type<pos:position pos:line="2432" pos:column="20"/></name> <operator pos:line="2432" pos:column="21">&gt;<pos:position pos:line="2432" pos:column="25"/></operator> <literal type="number" pos:line="2432" pos:column="23">0<pos:position pos:line="2432" pos:column="24"/></literal></expr>)<pos:position pos:line="2432" pos:column="25"/></condition><then pos:line="2432" pos:column="25">
        <block pos:line="2433" pos:column="9">{
        <for pos:line="2434" pos:column="9">for <control pos:line="2434" pos:column="13">(<init><expr><name pos:line="2434" pos:column="14">i<pos:position pos:line="2434" pos:column="15"/></name> <operator pos:line="2434" pos:column="16">=<pos:position pos:line="2434" pos:column="17"/></operator> <name pos:line="2434" pos:column="18">min<pos:position pos:line="2434" pos:column="21"/></name></expr>;<pos:position pos:line="2434" pos:column="22"/></init> <condition><expr><name pos:line="2434" pos:column="23">i<pos:position pos:line="2434" pos:column="24"/></name> <operator pos:line="2434" pos:column="25">&lt;<pos:position pos:line="2434" pos:column="29"/></operator> <name pos:line="2434" pos:column="27">max<pos:position pos:line="2434" pos:column="30"/></name></expr>;<pos:position pos:line="2434" pos:column="31"/></condition> <incr><expr><name pos:line="2434" pos:column="32">i<pos:position pos:line="2434" pos:column="33"/></name><operator pos:line="2434" pos:column="33">++<pos:position pos:line="2434" pos:column="35"/></operator></expr></incr>)<pos:position pos:line="2434" pos:column="36"/></control>
          <block pos:line="2435" pos:column="11">{
          <decl_stmt><decl><type><name pos:line="2436" pos:column="11">int<pos:position pos:line="2436" pos:column="14"/></name></type> <name pos:line="2436" pos:column="15">len<pos:position pos:line="2436" pos:column="18"/></name> <init pos:line="2436" pos:column="19">= <expr><literal type="number" pos:line="2436" pos:column="21">1<pos:position pos:line="2436" pos:column="22"/></literal></expr></init></decl>;<pos:position pos:line="2436" pos:column="23"/></decl_stmt>
          <if pos:line="2437" pos:column="11">if <condition pos:line="2437" pos:column="14">(<expr><name pos:line="2437" pos:column="15">eptr<pos:position pos:line="2437" pos:column="19"/></name> <operator pos:line="2437" pos:column="20">&gt;=<pos:position pos:line="2437" pos:column="25"/></operator> <name><name pos:line="2437" pos:column="23">md<pos:position pos:line="2437" pos:column="25"/></name><operator pos:line="2437" pos:column="25">-&gt;<pos:position pos:line="2437" pos:column="30"/></operator><name pos:line="2437" pos:column="27">end_subject<pos:position pos:line="2437" pos:column="38"/></name></name></expr>)<pos:position pos:line="2437" pos:column="39"/></condition><then pos:line="2437" pos:column="39"> <block type="pseudo"><break pos:line="2437" pos:column="40">break;<pos:position pos:line="2437" pos:column="46"/></break></block></then></if>
          <expr_stmt><expr><call><name pos:line="2438" pos:column="11">GETCHARLEN<pos:position pos:line="2438" pos:column="21"/></name><argument_list pos:line="2438" pos:column="21">(<argument><expr><name pos:line="2438" pos:column="22">c<pos:position pos:line="2438" pos:column="23"/></name></expr></argument>, <argument><expr><name pos:line="2438" pos:column="25">eptr<pos:position pos:line="2438" pos:column="29"/></name></expr></argument>, <argument><expr><name pos:line="2438" pos:column="31">len<pos:position pos:line="2438" pos:column="34"/></name></expr></argument>)<pos:position pos:line="2438" pos:column="35"/></argument_list></call></expr>;<pos:position pos:line="2438" pos:column="36"/></expr_stmt>
          <expr_stmt><expr><name pos:line="2439" pos:column="11">prop_category<pos:position pos:line="2439" pos:column="24"/></name> <operator pos:line="2439" pos:column="25">=<pos:position pos:line="2439" pos:column="26"/></operator> <call><name pos:line="2439" pos:column="27">ucp_findchar<pos:position pos:line="2439" pos:column="39"/></name><argument_list pos:line="2439" pos:column="39">(<argument><expr><name pos:line="2439" pos:column="40">c<pos:position pos:line="2439" pos:column="41"/></name></expr></argument>, <argument><expr><operator pos:line="2439" pos:column="43">&amp;<pos:position pos:line="2439" pos:column="48"/></operator><name pos:line="2439" pos:column="44">prop_chartype<pos:position pos:line="2439" pos:column="57"/></name></expr></argument>, <argument><expr><operator pos:line="2439" pos:column="59">&amp;<pos:position pos:line="2439" pos:column="64"/></operator><name pos:line="2439" pos:column="60">prop_othercase<pos:position pos:line="2439" pos:column="74"/></name></expr></argument>)<pos:position pos:line="2439" pos:column="75"/></argument_list></call></expr>;<pos:position pos:line="2439" pos:column="76"/></expr_stmt>
          <if pos:line="2440" pos:column="11">if <condition pos:line="2440" pos:column="14">(<expr><operator pos:line="2440" pos:column="15">(<pos:position pos:line="2440" pos:column="16"/></operator><operator pos:line="2440" pos:column="16">*<pos:position pos:line="2440" pos:column="17"/></operator><name pos:line="2440" pos:column="17">prop_test_variable<pos:position pos:line="2440" pos:column="35"/></name> <operator pos:line="2440" pos:column="36">==<pos:position pos:line="2440" pos:column="38"/></operator> <name pos:line="2440" pos:column="39">prop_test_against<pos:position pos:line="2440" pos:column="56"/></name><operator pos:line="2440" pos:column="56">)<pos:position pos:line="2440" pos:column="57"/></operator> <operator pos:line="2440" pos:column="58">==<pos:position pos:line="2440" pos:column="60"/></operator> <name pos:line="2440" pos:column="61">prop_fail_result<pos:position pos:line="2440" pos:column="77"/></name></expr>)<pos:position pos:line="2440" pos:column="78"/></condition><then pos:line="2440" pos:column="78">
            <block type="pseudo"><break pos:line="2441" pos:column="13">break;<pos:position pos:line="2441" pos:column="19"/></break></block></then></if>
          <expr_stmt><expr><name pos:line="2442" pos:column="11">eptr<pos:position pos:line="2442" pos:column="15"/></name><operator pos:line="2442" pos:column="15">+=<pos:position pos:line="2442" pos:column="17"/></operator> <name pos:line="2442" pos:column="18">len<pos:position pos:line="2442" pos:column="21"/></name></expr>;<pos:position pos:line="2442" pos:column="22"/></expr_stmt>
          }<pos:position pos:line="2443" pos:column="12"/></block></for>

        <comment type="block" pos:line="2445" pos:column="9">/* eptr is now past the end of the maximum run */</comment>

        <for pos:line="2447" pos:column="9">for<control pos:line="2447" pos:column="12">(<init pos:line="2447" pos:column="13">;<pos:position pos:line="2447" pos:column="14"/></init><condition pos:line="2447" pos:column="14">;<pos:position pos:line="2447" pos:column="15"/></condition><incr/>)<pos:position pos:line="2447" pos:column="16"/></control>
          <block pos:line="2448" pos:column="11">{
          <expr_stmt><expr><call><name pos:line="2449" pos:column="11">RMATCH<pos:position pos:line="2449" pos:column="17"/></name><argument_list pos:line="2449" pos:column="17">(<argument><expr><name pos:line="2449" pos:column="18">rrc<pos:position pos:line="2449" pos:column="21"/></name></expr></argument>, <argument><expr><name pos:line="2449" pos:column="23">eptr<pos:position pos:line="2449" pos:column="27"/></name></expr></argument>, <argument><expr><name pos:line="2449" pos:column="29">ecode<pos:position pos:line="2449" pos:column="34"/></name></expr></argument>, <argument><expr><name pos:line="2449" pos:column="36">offset_top<pos:position pos:line="2449" pos:column="46"/></name></expr></argument>, <argument><expr><name pos:line="2449" pos:column="48">md<pos:position pos:line="2449" pos:column="50"/></name></expr></argument>, <argument><expr><name pos:line="2449" pos:column="52">ims<pos:position pos:line="2449" pos:column="55"/></name></expr></argument>, <argument><expr><name pos:line="2449" pos:column="57">eptrb<pos:position pos:line="2449" pos:column="62"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="2449" pos:column="64">0<pos:position pos:line="2449" pos:column="65"/></literal></expr></argument>)<pos:position pos:line="2449" pos:column="66"/></argument_list></call></expr>;<pos:position pos:line="2449" pos:column="67"/></expr_stmt>
          <if pos:line="2450" pos:column="11">if <condition pos:line="2450" pos:column="14">(<expr><name pos:line="2450" pos:column="15">rrc<pos:position pos:line="2450" pos:column="18"/></name> <operator pos:line="2450" pos:column="19">!=<pos:position pos:line="2450" pos:column="21"/></operator> <name pos:line="2450" pos:column="22">MATCH_NOMATCH<pos:position pos:line="2450" pos:column="35"/></name></expr>)<pos:position pos:line="2450" pos:column="36"/></condition><then pos:line="2450" pos:column="36"> <block type="pseudo"><expr_stmt><expr><call><name pos:line="2450" pos:column="37">RRETURN<pos:position pos:line="2450" pos:column="44"/></name><argument_list pos:line="2450" pos:column="44">(<argument><expr><name pos:line="2450" pos:column="45">rrc<pos:position pos:line="2450" pos:column="48"/></name></expr></argument>)<pos:position pos:line="2450" pos:column="49"/></argument_list></call></expr>;<pos:position pos:line="2450" pos:column="50"/></expr_stmt></block></then></if>
          <if pos:line="2451" pos:column="11">if <condition pos:line="2451" pos:column="14">(<expr><name pos:line="2451" pos:column="15">eptr<pos:position pos:line="2451" pos:column="19"/></name><operator pos:line="2451" pos:column="19">--<pos:position pos:line="2451" pos:column="21"/></operator> <operator pos:line="2451" pos:column="22">==<pos:position pos:line="2451" pos:column="24"/></operator> <name pos:line="2451" pos:column="25">pp<pos:position pos:line="2451" pos:column="27"/></name></expr>)<pos:position pos:line="2451" pos:column="28"/></condition><then pos:line="2451" pos:column="28"> <block type="pseudo"><break pos:line="2451" pos:column="29">break;<pos:position pos:line="2451" pos:column="35"/></break></block></then></if>        <comment type="block" pos:line="2451" pos:column="43">/* Stop if tried at original pos */</comment>
          <expr_stmt><expr><call><name pos:line="2452" pos:column="11">BACKCHAR<pos:position pos:line="2452" pos:column="19"/></name><argument_list pos:line="2452" pos:column="19">(<argument><expr><name pos:line="2452" pos:column="20">eptr<pos:position pos:line="2452" pos:column="24"/></name></expr></argument>)<pos:position pos:line="2452" pos:column="25"/></argument_list></call></expr>;<pos:position pos:line="2452" pos:column="26"/></expr_stmt>
          }<pos:position pos:line="2453" pos:column="12"/></block></for>
        }<pos:position pos:line="2454" pos:column="10"/></block></then>

      <comment type="block" pos:line="2456" pos:column="7">/* Match extended Unicode sequences. We will get here only if the
      support is in the binary; otherwise a compile-time error occurs. */</comment>

      <elseif pos:line="2459" pos:column="7">else <if pos:line="2459" pos:column="12">if <condition pos:line="2459" pos:column="15">(<expr><name pos:line="2459" pos:column="16">ctype<pos:position pos:line="2459" pos:column="21"/></name> <operator pos:line="2459" pos:column="22">==<pos:position pos:line="2459" pos:column="24"/></operator> <name pos:line="2459" pos:column="25">OP_EXTUNI<pos:position pos:line="2459" pos:column="34"/></name></expr>)<pos:position pos:line="2459" pos:column="35"/></condition><then pos:line="2459" pos:column="35">
        <block pos:line="2460" pos:column="9">{
        <for pos:line="2461" pos:column="9">for <control pos:line="2461" pos:column="13">(<init><expr><name pos:line="2461" pos:column="14">i<pos:position pos:line="2461" pos:column="15"/></name> <operator pos:line="2461" pos:column="16">=<pos:position pos:line="2461" pos:column="17"/></operator> <name pos:line="2461" pos:column="18">min<pos:position pos:line="2461" pos:column="21"/></name></expr>;<pos:position pos:line="2461" pos:column="22"/></init> <condition><expr><name pos:line="2461" pos:column="23">i<pos:position pos:line="2461" pos:column="24"/></name> <operator pos:line="2461" pos:column="25">&lt;<pos:position pos:line="2461" pos:column="29"/></operator> <name pos:line="2461" pos:column="27">max<pos:position pos:line="2461" pos:column="30"/></name></expr>;<pos:position pos:line="2461" pos:column="31"/></condition> <incr><expr><name pos:line="2461" pos:column="32">i<pos:position pos:line="2461" pos:column="33"/></name><operator pos:line="2461" pos:column="33">++<pos:position pos:line="2461" pos:column="35"/></operator></expr></incr>)<pos:position pos:line="2461" pos:column="36"/></control>
          <block pos:line="2462" pos:column="11">{
          <if pos:line="2463" pos:column="11">if <condition pos:line="2463" pos:column="14">(<expr><name pos:line="2463" pos:column="15">eptr<pos:position pos:line="2463" pos:column="19"/></name> <operator pos:line="2463" pos:column="20">&gt;=<pos:position pos:line="2463" pos:column="25"/></operator> <name><name pos:line="2463" pos:column="23">md<pos:position pos:line="2463" pos:column="25"/></name><operator pos:line="2463" pos:column="25">-&gt;<pos:position pos:line="2463" pos:column="30"/></operator><name pos:line="2463" pos:column="27">end_subject<pos:position pos:line="2463" pos:column="38"/></name></name></expr>)<pos:position pos:line="2463" pos:column="39"/></condition><then pos:line="2463" pos:column="39"> <block type="pseudo"><break pos:line="2463" pos:column="40">break;<pos:position pos:line="2463" pos:column="46"/></break></block></then></if>
          <expr_stmt><expr><call><name pos:line="2464" pos:column="11">GETCHARINCTEST<pos:position pos:line="2464" pos:column="25"/></name><argument_list pos:line="2464" pos:column="25">(<argument><expr><name pos:line="2464" pos:column="26">c<pos:position pos:line="2464" pos:column="27"/></name></expr></argument>, <argument><expr><name pos:line="2464" pos:column="29">eptr<pos:position pos:line="2464" pos:column="33"/></name></expr></argument>)<pos:position pos:line="2464" pos:column="34"/></argument_list></call></expr>;<pos:position pos:line="2464" pos:column="35"/></expr_stmt>
          <expr_stmt><expr><name pos:line="2465" pos:column="11">prop_category<pos:position pos:line="2465" pos:column="24"/></name> <operator pos:line="2465" pos:column="25">=<pos:position pos:line="2465" pos:column="26"/></operator> <call><name pos:line="2465" pos:column="27">ucp_findchar<pos:position pos:line="2465" pos:column="39"/></name><argument_list pos:line="2465" pos:column="39">(<argument><expr><name pos:line="2465" pos:column="40">c<pos:position pos:line="2465" pos:column="41"/></name></expr></argument>, <argument><expr><operator pos:line="2465" pos:column="43">&amp;<pos:position pos:line="2465" pos:column="48"/></operator><name pos:line="2465" pos:column="44">prop_chartype<pos:position pos:line="2465" pos:column="57"/></name></expr></argument>, <argument><expr><operator pos:line="2465" pos:column="59">&amp;<pos:position pos:line="2465" pos:column="64"/></operator><name pos:line="2465" pos:column="60">prop_othercase<pos:position pos:line="2465" pos:column="74"/></name></expr></argument>)<pos:position pos:line="2465" pos:column="75"/></argument_list></call></expr>;<pos:position pos:line="2465" pos:column="76"/></expr_stmt>
          <if pos:line="2466" pos:column="11">if <condition pos:line="2466" pos:column="14">(<expr><name pos:line="2466" pos:column="15">prop_category<pos:position pos:line="2466" pos:column="28"/></name> <operator pos:line="2466" pos:column="29">==<pos:position pos:line="2466" pos:column="31"/></operator> <name pos:line="2466" pos:column="32">ucp_M<pos:position pos:line="2466" pos:column="37"/></name></expr>)<pos:position pos:line="2466" pos:column="38"/></condition><then pos:line="2466" pos:column="38"> <block type="pseudo"><break pos:line="2466" pos:column="39">break;<pos:position pos:line="2466" pos:column="45"/></break></block></then></if>
          <while pos:line="2467" pos:column="11">while <condition pos:line="2467" pos:column="17">(<expr><name pos:line="2467" pos:column="18">eptr<pos:position pos:line="2467" pos:column="22"/></name> <operator pos:line="2467" pos:column="23">&lt;<pos:position pos:line="2467" pos:column="27"/></operator> <name><name pos:line="2467" pos:column="25">md<pos:position pos:line="2467" pos:column="27"/></name><operator pos:line="2467" pos:column="27">-&gt;<pos:position pos:line="2467" pos:column="32"/></operator><name pos:line="2467" pos:column="29">end_subject<pos:position pos:line="2467" pos:column="40"/></name></name></expr>)<pos:position pos:line="2467" pos:column="41"/></condition>
            <block pos:line="2468" pos:column="13">{
            <decl_stmt><decl><type><name pos:line="2469" pos:column="13">int<pos:position pos:line="2469" pos:column="16"/></name></type> <name pos:line="2469" pos:column="17">len<pos:position pos:line="2469" pos:column="20"/></name> <init pos:line="2469" pos:column="21">= <expr><literal type="number" pos:line="2469" pos:column="23">1<pos:position pos:line="2469" pos:column="24"/></literal></expr></init></decl>;<pos:position pos:line="2469" pos:column="25"/></decl_stmt>
            <if pos:line="2470" pos:column="13">if <condition pos:line="2470" pos:column="16">(<expr><operator pos:line="2470" pos:column="17">!<pos:position pos:line="2470" pos:column="18"/></operator><name><name pos:line="2470" pos:column="18">md<pos:position pos:line="2470" pos:column="20"/></name><operator pos:line="2470" pos:column="20">-&gt;<pos:position pos:line="2470" pos:column="25"/></operator><name pos:line="2470" pos:column="22">utf8<pos:position pos:line="2470" pos:column="26"/></name></name></expr>)<pos:position pos:line="2470" pos:column="27"/></condition><then pos:line="2470" pos:column="27"> <block type="pseudo"><expr_stmt><expr><name pos:line="2470" pos:column="28">c<pos:position pos:line="2470" pos:column="29"/></name> <operator pos:line="2470" pos:column="30">=<pos:position pos:line="2470" pos:column="31"/></operator> <operator pos:line="2470" pos:column="32">*<pos:position pos:line="2470" pos:column="33"/></operator><name pos:line="2470" pos:column="33">eptr<pos:position pos:line="2470" pos:column="37"/></name></expr>;<pos:position pos:line="2470" pos:column="38"/></expr_stmt></block></then> <else pos:line="2470" pos:column="39">else
              <block pos:line="2471" pos:column="15">{
              <expr_stmt><expr><call><name pos:line="2472" pos:column="15">GETCHARLEN<pos:position pos:line="2472" pos:column="25"/></name><argument_list pos:line="2472" pos:column="25">(<argument><expr><name pos:line="2472" pos:column="26">c<pos:position pos:line="2472" pos:column="27"/></name></expr></argument>, <argument><expr><name pos:line="2472" pos:column="29">eptr<pos:position pos:line="2472" pos:column="33"/></name></expr></argument>, <argument><expr><name pos:line="2472" pos:column="35">len<pos:position pos:line="2472" pos:column="38"/></name></expr></argument>)<pos:position pos:line="2472" pos:column="39"/></argument_list></call></expr>;<pos:position pos:line="2472" pos:column="40"/></expr_stmt>
              }<pos:position pos:line="2473" pos:column="16"/></block></else></if>
            <expr_stmt><expr><name pos:line="2474" pos:column="13">prop_category<pos:position pos:line="2474" pos:column="26"/></name> <operator pos:line="2474" pos:column="27">=<pos:position pos:line="2474" pos:column="28"/></operator> <call><name pos:line="2474" pos:column="29">ucp_findchar<pos:position pos:line="2474" pos:column="41"/></name><argument_list pos:line="2474" pos:column="41">(<argument><expr><name pos:line="2474" pos:column="42">c<pos:position pos:line="2474" pos:column="43"/></name></expr></argument>, <argument><expr><operator pos:line="2474" pos:column="45">&amp;<pos:position pos:line="2474" pos:column="50"/></operator><name pos:line="2474" pos:column="46">prop_chartype<pos:position pos:line="2474" pos:column="59"/></name></expr></argument>, <argument><expr><operator pos:line="2474" pos:column="61">&amp;<pos:position pos:line="2474" pos:column="66"/></operator><name pos:line="2474" pos:column="62">prop_othercase<pos:position pos:line="2474" pos:column="76"/></name></expr></argument>)<pos:position pos:line="2474" pos:column="77"/></argument_list></call></expr>;<pos:position pos:line="2474" pos:column="78"/></expr_stmt>
            <if pos:line="2475" pos:column="13">if <condition pos:line="2475" pos:column="16">(<expr><name pos:line="2475" pos:column="17">prop_category<pos:position pos:line="2475" pos:column="30"/></name> <operator pos:line="2475" pos:column="31">!=<pos:position pos:line="2475" pos:column="33"/></operator> <name pos:line="2475" pos:column="34">ucp_M<pos:position pos:line="2475" pos:column="39"/></name></expr>)<pos:position pos:line="2475" pos:column="40"/></condition><then pos:line="2475" pos:column="40"> <block type="pseudo"><break pos:line="2475" pos:column="41">break;<pos:position pos:line="2475" pos:column="47"/></break></block></then></if>
            <expr_stmt><expr><name pos:line="2476" pos:column="13">eptr<pos:position pos:line="2476" pos:column="17"/></name> <operator pos:line="2476" pos:column="18">+=<pos:position pos:line="2476" pos:column="20"/></operator> <name pos:line="2476" pos:column="21">len<pos:position pos:line="2476" pos:column="24"/></name></expr>;<pos:position pos:line="2476" pos:column="25"/></expr_stmt>
            }<pos:position pos:line="2477" pos:column="14"/></block></while>
          }<pos:position pos:line="2478" pos:column="12"/></block></for>

        <comment type="block" pos:line="2480" pos:column="9">/* eptr is now past the end of the maximum run */</comment>

        <for pos:line="2482" pos:column="9">for<control pos:line="2482" pos:column="12">(<init pos:line="2482" pos:column="13">;<pos:position pos:line="2482" pos:column="14"/></init><condition pos:line="2482" pos:column="14">;<pos:position pos:line="2482" pos:column="15"/></condition><incr/>)<pos:position pos:line="2482" pos:column="16"/></control>
          <block pos:line="2483" pos:column="11">{
          <expr_stmt><expr><call><name pos:line="2484" pos:column="11">RMATCH<pos:position pos:line="2484" pos:column="17"/></name><argument_list pos:line="2484" pos:column="17">(<argument><expr><name pos:line="2484" pos:column="18">rrc<pos:position pos:line="2484" pos:column="21"/></name></expr></argument>, <argument><expr><name pos:line="2484" pos:column="23">eptr<pos:position pos:line="2484" pos:column="27"/></name></expr></argument>, <argument><expr><name pos:line="2484" pos:column="29">ecode<pos:position pos:line="2484" pos:column="34"/></name></expr></argument>, <argument><expr><name pos:line="2484" pos:column="36">offset_top<pos:position pos:line="2484" pos:column="46"/></name></expr></argument>, <argument><expr><name pos:line="2484" pos:column="48">md<pos:position pos:line="2484" pos:column="50"/></name></expr></argument>, <argument><expr><name pos:line="2484" pos:column="52">ims<pos:position pos:line="2484" pos:column="55"/></name></expr></argument>, <argument><expr><name pos:line="2484" pos:column="57">eptrb<pos:position pos:line="2484" pos:column="62"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="2484" pos:column="64">0<pos:position pos:line="2484" pos:column="65"/></literal></expr></argument>)<pos:position pos:line="2484" pos:column="66"/></argument_list></call></expr>;<pos:position pos:line="2484" pos:column="67"/></expr_stmt>
          <if pos:line="2485" pos:column="11">if <condition pos:line="2485" pos:column="14">(<expr><name pos:line="2485" pos:column="15">rrc<pos:position pos:line="2485" pos:column="18"/></name> <operator pos:line="2485" pos:column="19">!=<pos:position pos:line="2485" pos:column="21"/></operator> <name pos:line="2485" pos:column="22">MATCH_NOMATCH<pos:position pos:line="2485" pos:column="35"/></name></expr>)<pos:position pos:line="2485" pos:column="36"/></condition><then pos:line="2485" pos:column="36"> <block type="pseudo"><expr_stmt><expr><call><name pos:line="2485" pos:column="37">RRETURN<pos:position pos:line="2485" pos:column="44"/></name><argument_list pos:line="2485" pos:column="44">(<argument><expr><name pos:line="2485" pos:column="45">rrc<pos:position pos:line="2485" pos:column="48"/></name></expr></argument>)<pos:position pos:line="2485" pos:column="49"/></argument_list></call></expr>;<pos:position pos:line="2485" pos:column="50"/></expr_stmt></block></then></if>
          <if pos:line="2486" pos:column="11">if <condition pos:line="2486" pos:column="14">(<expr><name pos:line="2486" pos:column="15">eptr<pos:position pos:line="2486" pos:column="19"/></name><operator pos:line="2486" pos:column="19">--<pos:position pos:line="2486" pos:column="21"/></operator> <operator pos:line="2486" pos:column="22">==<pos:position pos:line="2486" pos:column="24"/></operator> <name pos:line="2486" pos:column="25">pp<pos:position pos:line="2486" pos:column="27"/></name></expr>)<pos:position pos:line="2486" pos:column="28"/></condition><then pos:line="2486" pos:column="28"> <block type="pseudo"><break pos:line="2486" pos:column="29">break;<pos:position pos:line="2486" pos:column="35"/></break></block></then></if>        <comment type="block" pos:line="2486" pos:column="43">/* Stop if tried at original pos */</comment>
          <for pos:line="2487" pos:column="11">for <control pos:line="2487" pos:column="15">(<init pos:line="2487" pos:column="16">;<pos:position pos:line="2487" pos:column="17"/></init><condition pos:line="2487" pos:column="17">;<pos:position pos:line="2487" pos:column="18"/></condition><incr/>)<pos:position pos:line="2487" pos:column="19"/></control>                        <comment type="block" pos:line="2487" pos:column="43">/* Move back over one extended */</comment>
            <block pos:line="2488" pos:column="13">{
            <decl_stmt><decl><type><name pos:line="2489" pos:column="13">int<pos:position pos:line="2489" pos:column="16"/></name></type> <name pos:line="2489" pos:column="17">len<pos:position pos:line="2489" pos:column="20"/></name> <init pos:line="2489" pos:column="21">= <expr><literal type="number" pos:line="2489" pos:column="23">1<pos:position pos:line="2489" pos:column="24"/></literal></expr></init></decl>;<pos:position pos:line="2489" pos:column="25"/></decl_stmt>
            <expr_stmt><expr><call><name pos:line="2490" pos:column="13">BACKCHAR<pos:position pos:line="2490" pos:column="21"/></name><argument_list pos:line="2490" pos:column="21">(<argument><expr><name pos:line="2490" pos:column="22">eptr<pos:position pos:line="2490" pos:column="26"/></name></expr></argument>)<pos:position pos:line="2490" pos:column="27"/></argument_list></call></expr>;<pos:position pos:line="2490" pos:column="28"/></expr_stmt>
            <if pos:line="2491" pos:column="13">if <condition pos:line="2491" pos:column="16">(<expr><operator pos:line="2491" pos:column="17">!<pos:position pos:line="2491" pos:column="18"/></operator><name><name pos:line="2491" pos:column="18">md<pos:position pos:line="2491" pos:column="20"/></name><operator pos:line="2491" pos:column="20">-&gt;<pos:position pos:line="2491" pos:column="25"/></operator><name pos:line="2491" pos:column="22">utf8<pos:position pos:line="2491" pos:column="26"/></name></name></expr>)<pos:position pos:line="2491" pos:column="27"/></condition><then pos:line="2491" pos:column="27"> <block type="pseudo"><expr_stmt><expr><name pos:line="2491" pos:column="28">c<pos:position pos:line="2491" pos:column="29"/></name> <operator pos:line="2491" pos:column="30">=<pos:position pos:line="2491" pos:column="31"/></operator> <operator pos:line="2491" pos:column="32">*<pos:position pos:line="2491" pos:column="33"/></operator><name pos:line="2491" pos:column="33">eptr<pos:position pos:line="2491" pos:column="37"/></name></expr>;<pos:position pos:line="2491" pos:column="38"/></expr_stmt></block></then> <else pos:line="2491" pos:column="39">else
              <block pos:line="2492" pos:column="15">{
              <expr_stmt><expr><call><name pos:line="2493" pos:column="15">GETCHARLEN<pos:position pos:line="2493" pos:column="25"/></name><argument_list pos:line="2493" pos:column="25">(<argument><expr><name pos:line="2493" pos:column="26">c<pos:position pos:line="2493" pos:column="27"/></name></expr></argument>, <argument><expr><name pos:line="2493" pos:column="29">eptr<pos:position pos:line="2493" pos:column="33"/></name></expr></argument>, <argument><expr><name pos:line="2493" pos:column="35">len<pos:position pos:line="2493" pos:column="38"/></name></expr></argument>)<pos:position pos:line="2493" pos:column="39"/></argument_list></call></expr>;<pos:position pos:line="2493" pos:column="40"/></expr_stmt>
              }<pos:position pos:line="2494" pos:column="16"/></block></else></if>
            <expr_stmt><expr><name pos:line="2495" pos:column="13">prop_category<pos:position pos:line="2495" pos:column="26"/></name> <operator pos:line="2495" pos:column="27">=<pos:position pos:line="2495" pos:column="28"/></operator> <call><name pos:line="2495" pos:column="29">ucp_findchar<pos:position pos:line="2495" pos:column="41"/></name><argument_list pos:line="2495" pos:column="41">(<argument><expr><name pos:line="2495" pos:column="42">c<pos:position pos:line="2495" pos:column="43"/></name></expr></argument>, <argument><expr><operator pos:line="2495" pos:column="45">&amp;<pos:position pos:line="2495" pos:column="50"/></operator><name pos:line="2495" pos:column="46">prop_chartype<pos:position pos:line="2495" pos:column="59"/></name></expr></argument>, <argument><expr><operator pos:line="2495" pos:column="61">&amp;<pos:position pos:line="2495" pos:column="66"/></operator><name pos:line="2495" pos:column="62">prop_othercase<pos:position pos:line="2495" pos:column="76"/></name></expr></argument>)<pos:position pos:line="2495" pos:column="77"/></argument_list></call></expr>;<pos:position pos:line="2495" pos:column="78"/></expr_stmt>
            <if pos:line="2496" pos:column="13">if <condition pos:line="2496" pos:column="16">(<expr><name pos:line="2496" pos:column="17">prop_category<pos:position pos:line="2496" pos:column="30"/></name> <operator pos:line="2496" pos:column="31">!=<pos:position pos:line="2496" pos:column="33"/></operator> <name pos:line="2496" pos:column="34">ucp_M<pos:position pos:line="2496" pos:column="39"/></name></expr>)<pos:position pos:line="2496" pos:column="40"/></condition><then pos:line="2496" pos:column="40"> <block type="pseudo"><break pos:line="2496" pos:column="41">break;<pos:position pos:line="2496" pos:column="47"/></break></block></then></if>
            <expr_stmt><expr><name pos:line="2497" pos:column="13">eptr<pos:position pos:line="2497" pos:column="17"/></name><operator pos:line="2497" pos:column="17">--<pos:position pos:line="2497" pos:column="19"/></operator></expr>;<pos:position pos:line="2497" pos:column="20"/></expr_stmt>
            }<pos:position pos:line="2498" pos:column="14"/></block></for>
          }<pos:position pos:line="2499" pos:column="12"/></block></for>
        }<pos:position pos:line="2500" pos:column="10"/></block></then></if></elseif>

      <elseif pos:line="2502" pos:column="7">else
<cpp:endif pos:line="2503" pos:column="1">#<cpp:directive pos:line="2503" pos:column="2">endif<pos:position pos:line="2503" pos:column="7"/></cpp:directive></cpp:endif>   <comment type="block" pos:line="2503" pos:column="10">/* SUPPORT_UCP */</comment>

<cpp:ifdef pos:line="2505" pos:column="1">#<cpp:directive pos:line="2505" pos:column="2">ifdef<pos:position pos:line="2505" pos:column="7"/></cpp:directive> <name pos:line="2505" pos:column="8">SUPPORT_UTF8<pos:position pos:line="2505" pos:column="20"/></name></cpp:ifdef>
      <comment type="block" pos:line="2506" pos:column="7">/* UTF-8 mode */</comment>

      <if pos:line="2508" pos:column="7">if <condition pos:line="2508" pos:column="10">(<expr><name><name pos:line="2508" pos:column="11">md<pos:position pos:line="2508" pos:column="13"/></name><operator pos:line="2508" pos:column="13">-&gt;<pos:position pos:line="2508" pos:column="18"/></operator><name pos:line="2508" pos:column="15">utf8<pos:position pos:line="2508" pos:column="19"/></name></name></expr>)<pos:position pos:line="2508" pos:column="20"/></condition><then pos:line="2508" pos:column="20">
        <block pos:line="2509" pos:column="9">{
        <switch pos:line="2510" pos:column="9">switch<condition pos:line="2510" pos:column="15">(<expr><name pos:line="2510" pos:column="16">ctype<pos:position pos:line="2510" pos:column="21"/></name></expr>)<pos:position pos:line="2510" pos:column="22"/></condition>
          <block pos:line="2511" pos:column="11">{
          <case pos:line="2512" pos:column="11">case <expr><name pos:line="2512" pos:column="16">OP_ANY<pos:position pos:line="2512" pos:column="22"/></name></expr>:<pos:position pos:line="2512" pos:column="23"/></case>

          <comment type="block" pos:line="2514" pos:column="11">/* Special code is required for UTF8, but when the maximum is unlimited
          we don't need it, so we repeat the non-UTF8 code. This is probably
          worth it, because .* is quite a common idiom. */</comment>

          <if pos:line="2518" pos:column="11">if <condition pos:line="2518" pos:column="14">(<expr><name pos:line="2518" pos:column="15">max<pos:position pos:line="2518" pos:column="18"/></name> <operator pos:line="2518" pos:column="19">&lt;<pos:position pos:line="2518" pos:column="23"/></operator> <name pos:line="2518" pos:column="21">INT_MAX<pos:position pos:line="2518" pos:column="28"/></name></expr>)<pos:position pos:line="2518" pos:column="29"/></condition><then pos:line="2518" pos:column="29">
            <block pos:line="2519" pos:column="13">{
            <if pos:line="2520" pos:column="13">if <condition pos:line="2520" pos:column="16">(<expr><operator pos:line="2520" pos:column="17">(<pos:position pos:line="2520" pos:column="18"/></operator><name pos:line="2520" pos:column="18">ims<pos:position pos:line="2520" pos:column="21"/></name> <operator pos:line="2520" pos:column="22">&amp;<pos:position pos:line="2520" pos:column="27"/></operator> <name pos:line="2520" pos:column="24">PCRE_DOTALL<pos:position pos:line="2520" pos:column="35"/></name><operator pos:line="2520" pos:column="35">)<pos:position pos:line="2520" pos:column="36"/></operator> <operator pos:line="2520" pos:column="37">==<pos:position pos:line="2520" pos:column="39"/></operator> <literal type="number" pos:line="2520" pos:column="40">0<pos:position pos:line="2520" pos:column="41"/></literal></expr>)<pos:position pos:line="2520" pos:column="42"/></condition><then pos:line="2520" pos:column="42">
              <block pos:line="2521" pos:column="15">{
              <for pos:line="2522" pos:column="15">for <control pos:line="2522" pos:column="19">(<init><expr><name pos:line="2522" pos:column="20">i<pos:position pos:line="2522" pos:column="21"/></name> <operator pos:line="2522" pos:column="22">=<pos:position pos:line="2522" pos:column="23"/></operator> <name pos:line="2522" pos:column="24">min<pos:position pos:line="2522" pos:column="27"/></name></expr>;<pos:position pos:line="2522" pos:column="28"/></init> <condition><expr><name pos:line="2522" pos:column="29">i<pos:position pos:line="2522" pos:column="30"/></name> <operator pos:line="2522" pos:column="31">&lt;<pos:position pos:line="2522" pos:column="35"/></operator> <name pos:line="2522" pos:column="33">max<pos:position pos:line="2522" pos:column="36"/></name></expr>;<pos:position pos:line="2522" pos:column="37"/></condition> <incr><expr><name pos:line="2522" pos:column="38">i<pos:position pos:line="2522" pos:column="39"/></name><operator pos:line="2522" pos:column="39">++<pos:position pos:line="2522" pos:column="41"/></operator></expr></incr>)<pos:position pos:line="2522" pos:column="42"/></control>
                <block pos:line="2523" pos:column="17">{
                <if pos:line="2524" pos:column="17">if <condition pos:line="2524" pos:column="20">(<expr><name pos:line="2524" pos:column="21">eptr<pos:position pos:line="2524" pos:column="25"/></name> <operator pos:line="2524" pos:column="26">&gt;=<pos:position pos:line="2524" pos:column="31"/></operator> <name><name pos:line="2524" pos:column="29">md<pos:position pos:line="2524" pos:column="31"/></name><operator pos:line="2524" pos:column="31">-&gt;<pos:position pos:line="2524" pos:column="36"/></operator><name pos:line="2524" pos:column="33">end_subject<pos:position pos:line="2524" pos:column="44"/></name></name> <operator pos:line="2524" pos:column="45">||<pos:position pos:line="2524" pos:column="47"/></operator> <operator pos:line="2524" pos:column="48">*<pos:position pos:line="2524" pos:column="49"/></operator><name pos:line="2524" pos:column="49">eptr<pos:position pos:line="2524" pos:column="53"/></name> <operator pos:line="2524" pos:column="54">==<pos:position pos:line="2524" pos:column="56"/></operator> <name pos:line="2524" pos:column="57">NEWLINE<pos:position pos:line="2524" pos:column="64"/></name></expr>)<pos:position pos:line="2524" pos:column="65"/></condition><then pos:line="2524" pos:column="65"> <block type="pseudo"><break pos:line="2524" pos:column="66">break;<pos:position pos:line="2524" pos:column="72"/></break></block></then></if>
                <expr_stmt><expr><name pos:line="2525" pos:column="17">eptr<pos:position pos:line="2525" pos:column="21"/></name><operator pos:line="2525" pos:column="21">++<pos:position pos:line="2525" pos:column="23"/></operator></expr>;<pos:position pos:line="2525" pos:column="24"/></expr_stmt>
                <while pos:line="2526" pos:column="17">while <condition pos:line="2526" pos:column="23">(<expr><name pos:line="2526" pos:column="24">eptr<pos:position pos:line="2526" pos:column="28"/></name> <operator pos:line="2526" pos:column="29">&lt;<pos:position pos:line="2526" pos:column="33"/></operator> <name><name pos:line="2526" pos:column="31">md<pos:position pos:line="2526" pos:column="33"/></name><operator pos:line="2526" pos:column="33">-&gt;<pos:position pos:line="2526" pos:column="38"/></operator><name pos:line="2526" pos:column="35">end_subject<pos:position pos:line="2526" pos:column="46"/></name></name> <operator pos:line="2526" pos:column="47">&amp;&amp;<pos:position pos:line="2526" pos:column="57"/></operator> <operator pos:line="2526" pos:column="50">(<pos:position pos:line="2526" pos:column="51"/></operator><operator pos:line="2526" pos:column="51">*<pos:position pos:line="2526" pos:column="52"/></operator><name pos:line="2526" pos:column="52">eptr<pos:position pos:line="2526" pos:column="56"/></name> <operator pos:line="2526" pos:column="57">&amp;<pos:position pos:line="2526" pos:column="62"/></operator> <literal type="number" pos:line="2526" pos:column="59">0xc0<pos:position pos:line="2526" pos:column="63"/></literal><operator pos:line="2526" pos:column="63">)<pos:position pos:line="2526" pos:column="64"/></operator> <operator pos:line="2526" pos:column="65">==<pos:position pos:line="2526" pos:column="67"/></operator> <literal type="number" pos:line="2526" pos:column="68">0x80<pos:position pos:line="2526" pos:column="72"/></literal></expr>)<pos:position pos:line="2526" pos:column="73"/></condition> <block type="pseudo"><expr_stmt><expr><name pos:line="2526" pos:column="74">eptr<pos:position pos:line="2526" pos:column="78"/></name><operator pos:line="2526" pos:column="78">++<pos:position pos:line="2526" pos:column="80"/></operator></expr>;<pos:position pos:line="2526" pos:column="81"/></expr_stmt></block></while>
                }<pos:position pos:line="2527" pos:column="18"/></block></for>
              }<pos:position pos:line="2528" pos:column="16"/></block></then>
            <else pos:line="2529" pos:column="13">else
              <block pos:line="2530" pos:column="15">{
              <for pos:line="2531" pos:column="15">for <control pos:line="2531" pos:column="19">(<init><expr><name pos:line="2531" pos:column="20">i<pos:position pos:line="2531" pos:column="21"/></name> <operator pos:line="2531" pos:column="22">=<pos:position pos:line="2531" pos:column="23"/></operator> <name pos:line="2531" pos:column="24">min<pos:position pos:line="2531" pos:column="27"/></name></expr>;<pos:position pos:line="2531" pos:column="28"/></init> <condition><expr><name pos:line="2531" pos:column="29">i<pos:position pos:line="2531" pos:column="30"/></name> <operator pos:line="2531" pos:column="31">&lt;<pos:position pos:line="2531" pos:column="35"/></operator> <name pos:line="2531" pos:column="33">max<pos:position pos:line="2531" pos:column="36"/></name></expr>;<pos:position pos:line="2531" pos:column="37"/></condition> <incr><expr><name pos:line="2531" pos:column="38">i<pos:position pos:line="2531" pos:column="39"/></name><operator pos:line="2531" pos:column="39">++<pos:position pos:line="2531" pos:column="41"/></operator></expr></incr>)<pos:position pos:line="2531" pos:column="42"/></control>
                <block pos:line="2532" pos:column="17">{
                <expr_stmt><expr><name pos:line="2533" pos:column="17">eptr<pos:position pos:line="2533" pos:column="21"/></name><operator pos:line="2533" pos:column="21">++<pos:position pos:line="2533" pos:column="23"/></operator></expr>;<pos:position pos:line="2533" pos:column="24"/></expr_stmt>
                <while pos:line="2534" pos:column="17">while <condition pos:line="2534" pos:column="23">(<expr><name pos:line="2534" pos:column="24">eptr<pos:position pos:line="2534" pos:column="28"/></name> <operator pos:line="2534" pos:column="29">&lt;<pos:position pos:line="2534" pos:column="33"/></operator> <name><name pos:line="2534" pos:column="31">md<pos:position pos:line="2534" pos:column="33"/></name><operator pos:line="2534" pos:column="33">-&gt;<pos:position pos:line="2534" pos:column="38"/></operator><name pos:line="2534" pos:column="35">end_subject<pos:position pos:line="2534" pos:column="46"/></name></name> <operator pos:line="2534" pos:column="47">&amp;&amp;<pos:position pos:line="2534" pos:column="57"/></operator> <operator pos:line="2534" pos:column="50">(<pos:position pos:line="2534" pos:column="51"/></operator><operator pos:line="2534" pos:column="51">*<pos:position pos:line="2534" pos:column="52"/></operator><name pos:line="2534" pos:column="52">eptr<pos:position pos:line="2534" pos:column="56"/></name> <operator pos:line="2534" pos:column="57">&amp;<pos:position pos:line="2534" pos:column="62"/></operator> <literal type="number" pos:line="2534" pos:column="59">0xc0<pos:position pos:line="2534" pos:column="63"/></literal><operator pos:line="2534" pos:column="63">)<pos:position pos:line="2534" pos:column="64"/></operator> <operator pos:line="2534" pos:column="65">==<pos:position pos:line="2534" pos:column="67"/></operator> <literal type="number" pos:line="2534" pos:column="68">0x80<pos:position pos:line="2534" pos:column="72"/></literal></expr>)<pos:position pos:line="2534" pos:column="73"/></condition> <block type="pseudo"><expr_stmt><expr><name pos:line="2534" pos:column="74">eptr<pos:position pos:line="2534" pos:column="78"/></name><operator pos:line="2534" pos:column="78">++<pos:position pos:line="2534" pos:column="80"/></operator></expr>;<pos:position pos:line="2534" pos:column="81"/></expr_stmt></block></while>
                }<pos:position pos:line="2535" pos:column="18"/></block></for>
              }<pos:position pos:line="2536" pos:column="16"/></block></else></if>
            }<pos:position pos:line="2537" pos:column="14"/></block></then>

          <comment type="block" pos:line="2539" pos:column="11">/* Handle unlimited UTF-8 repeat */</comment>

          <else pos:line="2541" pos:column="11">else
            <block pos:line="2542" pos:column="13">{
            <if pos:line="2543" pos:column="13">if <condition pos:line="2543" pos:column="16">(<expr><operator pos:line="2543" pos:column="17">(<pos:position pos:line="2543" pos:column="18"/></operator><name pos:line="2543" pos:column="18">ims<pos:position pos:line="2543" pos:column="21"/></name> <operator pos:line="2543" pos:column="22">&amp;<pos:position pos:line="2543" pos:column="27"/></operator> <name pos:line="2543" pos:column="24">PCRE_DOTALL<pos:position pos:line="2543" pos:column="35"/></name><operator pos:line="2543" pos:column="35">)<pos:position pos:line="2543" pos:column="36"/></operator> <operator pos:line="2543" pos:column="37">==<pos:position pos:line="2543" pos:column="39"/></operator> <literal type="number" pos:line="2543" pos:column="40">0<pos:position pos:line="2543" pos:column="41"/></literal></expr>)<pos:position pos:line="2543" pos:column="42"/></condition><then pos:line="2543" pos:column="42">
              <block pos:line="2544" pos:column="15">{
              <for pos:line="2545" pos:column="15">for <control pos:line="2545" pos:column="19">(<init><expr><name pos:line="2545" pos:column="20">i<pos:position pos:line="2545" pos:column="21"/></name> <operator pos:line="2545" pos:column="22">=<pos:position pos:line="2545" pos:column="23"/></operator> <name pos:line="2545" pos:column="24">min<pos:position pos:line="2545" pos:column="27"/></name></expr>;<pos:position pos:line="2545" pos:column="28"/></init> <condition><expr><name pos:line="2545" pos:column="29">i<pos:position pos:line="2545" pos:column="30"/></name> <operator pos:line="2545" pos:column="31">&lt;<pos:position pos:line="2545" pos:column="35"/></operator> <name pos:line="2545" pos:column="33">max<pos:position pos:line="2545" pos:column="36"/></name></expr>;<pos:position pos:line="2545" pos:column="37"/></condition> <incr><expr><name pos:line="2545" pos:column="38">i<pos:position pos:line="2545" pos:column="39"/></name><operator pos:line="2545" pos:column="39">++<pos:position pos:line="2545" pos:column="41"/></operator></expr></incr>)<pos:position pos:line="2545" pos:column="42"/></control>
                <block pos:line="2546" pos:column="17">{
                <if pos:line="2547" pos:column="17">if <condition pos:line="2547" pos:column="20">(<expr><name pos:line="2547" pos:column="21">eptr<pos:position pos:line="2547" pos:column="25"/></name> <operator pos:line="2547" pos:column="26">&gt;=<pos:position pos:line="2547" pos:column="31"/></operator> <name><name pos:line="2547" pos:column="29">md<pos:position pos:line="2547" pos:column="31"/></name><operator pos:line="2547" pos:column="31">-&gt;<pos:position pos:line="2547" pos:column="36"/></operator><name pos:line="2547" pos:column="33">end_subject<pos:position pos:line="2547" pos:column="44"/></name></name> <operator pos:line="2547" pos:column="45">||<pos:position pos:line="2547" pos:column="47"/></operator> <operator pos:line="2547" pos:column="48">*<pos:position pos:line="2547" pos:column="49"/></operator><name pos:line="2547" pos:column="49">eptr<pos:position pos:line="2547" pos:column="53"/></name> <operator pos:line="2547" pos:column="54">==<pos:position pos:line="2547" pos:column="56"/></operator> <name pos:line="2547" pos:column="57">NEWLINE<pos:position pos:line="2547" pos:column="64"/></name></expr>)<pos:position pos:line="2547" pos:column="65"/></condition><then pos:line="2547" pos:column="65"> <block type="pseudo"><break pos:line="2547" pos:column="66">break;<pos:position pos:line="2547" pos:column="72"/></break></block></then></if>
                <expr_stmt><expr><name pos:line="2548" pos:column="17">eptr<pos:position pos:line="2548" pos:column="21"/></name><operator pos:line="2548" pos:column="21">++<pos:position pos:line="2548" pos:column="23"/></operator></expr>;<pos:position pos:line="2548" pos:column="24"/></expr_stmt>
                }<pos:position pos:line="2549" pos:column="18"/></block></for>
              <break pos:line="2550" pos:column="15">break;<pos:position pos:line="2550" pos:column="21"/></break>
              }<pos:position pos:line="2551" pos:column="16"/></block></then>
            <else pos:line="2552" pos:column="13">else
              <block pos:line="2553" pos:column="15">{
              <expr_stmt><expr><name pos:line="2554" pos:column="15">c<pos:position pos:line="2554" pos:column="16"/></name> <operator pos:line="2554" pos:column="17">=<pos:position pos:line="2554" pos:column="18"/></operator> <name pos:line="2554" pos:column="19">max<pos:position pos:line="2554" pos:column="22"/></name> <operator pos:line="2554" pos:column="23">-<pos:position pos:line="2554" pos:column="24"/></operator> <name pos:line="2554" pos:column="25">min<pos:position pos:line="2554" pos:column="28"/></name></expr>;<pos:position pos:line="2554" pos:column="29"/></expr_stmt>
              <if pos:line="2555" pos:column="15">if <condition pos:line="2555" pos:column="18">(<expr><name pos:line="2555" pos:column="19">c<pos:position pos:line="2555" pos:column="20"/></name> <operator pos:line="2555" pos:column="21">&gt;<pos:position pos:line="2555" pos:column="25"/></operator> <name><name pos:line="2555" pos:column="23">md<pos:position pos:line="2555" pos:column="25"/></name><operator pos:line="2555" pos:column="25">-&gt;<pos:position pos:line="2555" pos:column="30"/></operator><name pos:line="2555" pos:column="27">end_subject<pos:position pos:line="2555" pos:column="38"/></name></name> <operator pos:line="2555" pos:column="39">-<pos:position pos:line="2555" pos:column="40"/></operator> <name pos:line="2555" pos:column="41">eptr<pos:position pos:line="2555" pos:column="45"/></name></expr>)<pos:position pos:line="2555" pos:column="46"/></condition><then pos:line="2555" pos:column="46"> <block type="pseudo"><expr_stmt><expr><name pos:line="2555" pos:column="47">c<pos:position pos:line="2555" pos:column="48"/></name> <operator pos:line="2555" pos:column="49">=<pos:position pos:line="2555" pos:column="50"/></operator> <name><name pos:line="2555" pos:column="51">md<pos:position pos:line="2555" pos:column="53"/></name><operator pos:line="2555" pos:column="53">-&gt;<pos:position pos:line="2555" pos:column="58"/></operator><name pos:line="2555" pos:column="55">end_subject<pos:position pos:line="2555" pos:column="66"/></name></name> <operator pos:line="2555" pos:column="67">-<pos:position pos:line="2555" pos:column="68"/></operator> <name pos:line="2555" pos:column="69">eptr<pos:position pos:line="2555" pos:column="73"/></name></expr>;<pos:position pos:line="2555" pos:column="74"/></expr_stmt></block></then></if>
              <expr_stmt><expr><name pos:line="2556" pos:column="15">eptr<pos:position pos:line="2556" pos:column="19"/></name> <operator pos:line="2556" pos:column="20">+=<pos:position pos:line="2556" pos:column="22"/></operator> <name pos:line="2556" pos:column="23">c<pos:position pos:line="2556" pos:column="24"/></name></expr>;<pos:position pos:line="2556" pos:column="25"/></expr_stmt>
              }<pos:position pos:line="2557" pos:column="16"/></block></else></if>
            }<pos:position pos:line="2558" pos:column="14"/></block></else></if>
          <break pos:line="2559" pos:column="11">break;<pos:position pos:line="2559" pos:column="17"/></break>

          <comment type="block" pos:line="2561" pos:column="11">/* The byte case is the same as non-UTF8 */</comment>

          <case pos:line="2563" pos:column="11">case <expr><name pos:line="2563" pos:column="16">OP_ANYBYTE<pos:position pos:line="2563" pos:column="26"/></name></expr>:<pos:position pos:line="2563" pos:column="27"/></case>
          <expr_stmt><expr><name pos:line="2564" pos:column="11">c<pos:position pos:line="2564" pos:column="12"/></name> <operator pos:line="2564" pos:column="13">=<pos:position pos:line="2564" pos:column="14"/></operator> <name pos:line="2564" pos:column="15">max<pos:position pos:line="2564" pos:column="18"/></name> <operator pos:line="2564" pos:column="19">-<pos:position pos:line="2564" pos:column="20"/></operator> <name pos:line="2564" pos:column="21">min<pos:position pos:line="2564" pos:column="24"/></name></expr>;<pos:position pos:line="2564" pos:column="25"/></expr_stmt>
          <if pos:line="2565" pos:column="11">if <condition pos:line="2565" pos:column="14">(<expr><name pos:line="2565" pos:column="15">c<pos:position pos:line="2565" pos:column="16"/></name> <operator pos:line="2565" pos:column="17">&gt;<pos:position pos:line="2565" pos:column="21"/></operator> <name><name pos:line="2565" pos:column="19">md<pos:position pos:line="2565" pos:column="21"/></name><operator pos:line="2565" pos:column="21">-&gt;<pos:position pos:line="2565" pos:column="26"/></operator><name pos:line="2565" pos:column="23">end_subject<pos:position pos:line="2565" pos:column="34"/></name></name> <operator pos:line="2565" pos:column="35">-<pos:position pos:line="2565" pos:column="36"/></operator> <name pos:line="2565" pos:column="37">eptr<pos:position pos:line="2565" pos:column="41"/></name></expr>)<pos:position pos:line="2565" pos:column="42"/></condition><then pos:line="2565" pos:column="42"> <block type="pseudo"><expr_stmt><expr><name pos:line="2565" pos:column="43">c<pos:position pos:line="2565" pos:column="44"/></name> <operator pos:line="2565" pos:column="45">=<pos:position pos:line="2565" pos:column="46"/></operator> <name><name pos:line="2565" pos:column="47">md<pos:position pos:line="2565" pos:column="49"/></name><operator pos:line="2565" pos:column="49">-&gt;<pos:position pos:line="2565" pos:column="54"/></operator><name pos:line="2565" pos:column="51">end_subject<pos:position pos:line="2565" pos:column="62"/></name></name> <operator pos:line="2565" pos:column="63">-<pos:position pos:line="2565" pos:column="64"/></operator> <name pos:line="2565" pos:column="65">eptr<pos:position pos:line="2565" pos:column="69"/></name></expr>;<pos:position pos:line="2565" pos:column="70"/></expr_stmt></block></then></if>
          <expr_stmt><expr><name pos:line="2566" pos:column="11">eptr<pos:position pos:line="2566" pos:column="15"/></name> <operator pos:line="2566" pos:column="16">+=<pos:position pos:line="2566" pos:column="18"/></operator> <name pos:line="2566" pos:column="19">c<pos:position pos:line="2566" pos:column="20"/></name></expr>;<pos:position pos:line="2566" pos:column="21"/></expr_stmt>
          <break pos:line="2567" pos:column="11">break;<pos:position pos:line="2567" pos:column="17"/></break>

          <case pos:line="2569" pos:column="11">case <expr><name pos:line="2569" pos:column="16">OP_NOT_DIGIT<pos:position pos:line="2569" pos:column="28"/></name></expr>:<pos:position pos:line="2569" pos:column="29"/></case>
          <for pos:line="2570" pos:column="11">for <control pos:line="2570" pos:column="15">(<init><expr><name pos:line="2570" pos:column="16">i<pos:position pos:line="2570" pos:column="17"/></name> <operator pos:line="2570" pos:column="18">=<pos:position pos:line="2570" pos:column="19"/></operator> <name pos:line="2570" pos:column="20">min<pos:position pos:line="2570" pos:column="23"/></name></expr>;<pos:position pos:line="2570" pos:column="24"/></init> <condition><expr><name pos:line="2570" pos:column="25">i<pos:position pos:line="2570" pos:column="26"/></name> <operator pos:line="2570" pos:column="27">&lt;<pos:position pos:line="2570" pos:column="31"/></operator> <name pos:line="2570" pos:column="29">max<pos:position pos:line="2570" pos:column="32"/></name></expr>;<pos:position pos:line="2570" pos:column="33"/></condition> <incr><expr><name pos:line="2570" pos:column="34">i<pos:position pos:line="2570" pos:column="35"/></name><operator pos:line="2570" pos:column="35">++<pos:position pos:line="2570" pos:column="37"/></operator></expr></incr>)<pos:position pos:line="2570" pos:column="38"/></control>
            <block pos:line="2571" pos:column="13">{
            <decl_stmt><decl><type><name pos:line="2572" pos:column="13">int<pos:position pos:line="2572" pos:column="16"/></name></type> <name pos:line="2572" pos:column="17">len<pos:position pos:line="2572" pos:column="20"/></name> <init pos:line="2572" pos:column="21">= <expr><literal type="number" pos:line="2572" pos:column="23">1<pos:position pos:line="2572" pos:column="24"/></literal></expr></init></decl>;<pos:position pos:line="2572" pos:column="25"/></decl_stmt>
            <if pos:line="2573" pos:column="13">if <condition pos:line="2573" pos:column="16">(<expr><name pos:line="2573" pos:column="17">eptr<pos:position pos:line="2573" pos:column="21"/></name> <operator pos:line="2573" pos:column="22">&gt;=<pos:position pos:line="2573" pos:column="27"/></operator> <name><name pos:line="2573" pos:column="25">md<pos:position pos:line="2573" pos:column="27"/></name><operator pos:line="2573" pos:column="27">-&gt;<pos:position pos:line="2573" pos:column="32"/></operator><name pos:line="2573" pos:column="29">end_subject<pos:position pos:line="2573" pos:column="40"/></name></name></expr>)<pos:position pos:line="2573" pos:column="41"/></condition><then pos:line="2573" pos:column="41"> <block type="pseudo"><break pos:line="2573" pos:column="42">break;<pos:position pos:line="2573" pos:column="48"/></break></block></then></if>
            <expr_stmt><expr><call><name pos:line="2574" pos:column="13">GETCHARLEN<pos:position pos:line="2574" pos:column="23"/></name><argument_list pos:line="2574" pos:column="23">(<argument><expr><name pos:line="2574" pos:column="24">c<pos:position pos:line="2574" pos:column="25"/></name></expr></argument>, <argument><expr><name pos:line="2574" pos:column="27">eptr<pos:position pos:line="2574" pos:column="31"/></name></expr></argument>, <argument><expr><name pos:line="2574" pos:column="33">len<pos:position pos:line="2574" pos:column="36"/></name></expr></argument>)<pos:position pos:line="2574" pos:column="37"/></argument_list></call></expr>;<pos:position pos:line="2574" pos:column="38"/></expr_stmt>
            <if pos:line="2575" pos:column="13">if <condition pos:line="2575" pos:column="16">(<expr><name pos:line="2575" pos:column="17">c<pos:position pos:line="2575" pos:column="18"/></name> <operator pos:line="2575" pos:column="19">&lt;<pos:position pos:line="2575" pos:column="23"/></operator> <literal type="number" pos:line="2575" pos:column="21">256<pos:position pos:line="2575" pos:column="24"/></literal> <operator pos:line="2575" pos:column="25">&amp;&amp;<pos:position pos:line="2575" pos:column="35"/></operator> <operator pos:line="2575" pos:column="28">(<pos:position pos:line="2575" pos:column="29"/></operator><name><name pos:line="2575" pos:column="29">md<pos:position pos:line="2575" pos:column="31"/></name><operator pos:line="2575" pos:column="31">-&gt;<pos:position pos:line="2575" pos:column="36"/></operator><name pos:line="2575" pos:column="33">ctypes<pos:position pos:line="2575" pos:column="39"/></name><index pos:line="2575" pos:column="39">[<expr><name pos:line="2575" pos:column="40">c<pos:position pos:line="2575" pos:column="41"/></name></expr>]<pos:position pos:line="2575" pos:column="42"/></index></name> <operator pos:line="2575" pos:column="43">&amp;<pos:position pos:line="2575" pos:column="48"/></operator> <name pos:line="2575" pos:column="45">ctype_digit<pos:position pos:line="2575" pos:column="56"/></name><operator pos:line="2575" pos:column="56">)<pos:position pos:line="2575" pos:column="57"/></operator> <operator pos:line="2575" pos:column="58">!=<pos:position pos:line="2575" pos:column="60"/></operator> <literal type="number" pos:line="2575" pos:column="61">0<pos:position pos:line="2575" pos:column="62"/></literal></expr>)<pos:position pos:line="2575" pos:column="63"/></condition><then pos:line="2575" pos:column="63"> <block type="pseudo"><break pos:line="2575" pos:column="64">break;<pos:position pos:line="2575" pos:column="70"/></break></block></then></if>
            <expr_stmt><expr><name pos:line="2576" pos:column="13">eptr<pos:position pos:line="2576" pos:column="17"/></name><operator pos:line="2576" pos:column="17">+=<pos:position pos:line="2576" pos:column="19"/></operator> <name pos:line="2576" pos:column="20">len<pos:position pos:line="2576" pos:column="23"/></name></expr>;<pos:position pos:line="2576" pos:column="24"/></expr_stmt>
            }<pos:position pos:line="2577" pos:column="14"/></block></for>
          <break pos:line="2578" pos:column="11">break;<pos:position pos:line="2578" pos:column="17"/></break>

          <case pos:line="2580" pos:column="11">case <expr><name pos:line="2580" pos:column="16">OP_DIGIT<pos:position pos:line="2580" pos:column="24"/></name></expr>:<pos:position pos:line="2580" pos:column="25"/></case>
          <for pos:line="2581" pos:column="11">for <control pos:line="2581" pos:column="15">(<init><expr><name pos:line="2581" pos:column="16">i<pos:position pos:line="2581" pos:column="17"/></name> <operator pos:line="2581" pos:column="18">=<pos:position pos:line="2581" pos:column="19"/></operator> <name pos:line="2581" pos:column="20">min<pos:position pos:line="2581" pos:column="23"/></name></expr>;<pos:position pos:line="2581" pos:column="24"/></init> <condition><expr><name pos:line="2581" pos:column="25">i<pos:position pos:line="2581" pos:column="26"/></name> <operator pos:line="2581" pos:column="27">&lt;<pos:position pos:line="2581" pos:column="31"/></operator> <name pos:line="2581" pos:column="29">max<pos:position pos:line="2581" pos:column="32"/></name></expr>;<pos:position pos:line="2581" pos:column="33"/></condition> <incr><expr><name pos:line="2581" pos:column="34">i<pos:position pos:line="2581" pos:column="35"/></name><operator pos:line="2581" pos:column="35">++<pos:position pos:line="2581" pos:column="37"/></operator></expr></incr>)<pos:position pos:line="2581" pos:column="38"/></control>
            <block pos:line="2582" pos:column="13">{
            <decl_stmt><decl><type><name pos:line="2583" pos:column="13">int<pos:position pos:line="2583" pos:column="16"/></name></type> <name pos:line="2583" pos:column="17">len<pos:position pos:line="2583" pos:column="20"/></name> <init pos:line="2583" pos:column="21">= <expr><literal type="number" pos:line="2583" pos:column="23">1<pos:position pos:line="2583" pos:column="24"/></literal></expr></init></decl>;<pos:position pos:line="2583" pos:column="25"/></decl_stmt>
            <if pos:line="2584" pos:column="13">if <condition pos:line="2584" pos:column="16">(<expr><name pos:line="2584" pos:column="17">eptr<pos:position pos:line="2584" pos:column="21"/></name> <operator pos:line="2584" pos:column="22">&gt;=<pos:position pos:line="2584" pos:column="27"/></operator> <name><name pos:line="2584" pos:column="25">md<pos:position pos:line="2584" pos:column="27"/></name><operator pos:line="2584" pos:column="27">-&gt;<pos:position pos:line="2584" pos:column="32"/></operator><name pos:line="2584" pos:column="29">end_subject<pos:position pos:line="2584" pos:column="40"/></name></name></expr>)<pos:position pos:line="2584" pos:column="41"/></condition><then pos:line="2584" pos:column="41"> <block type="pseudo"><break pos:line="2584" pos:column="42">break;<pos:position pos:line="2584" pos:column="48"/></break></block></then></if>
            <expr_stmt><expr><call><name pos:line="2585" pos:column="13">GETCHARLEN<pos:position pos:line="2585" pos:column="23"/></name><argument_list pos:line="2585" pos:column="23">(<argument><expr><name pos:line="2585" pos:column="24">c<pos:position pos:line="2585" pos:column="25"/></name></expr></argument>, <argument><expr><name pos:line="2585" pos:column="27">eptr<pos:position pos:line="2585" pos:column="31"/></name></expr></argument>, <argument><expr><name pos:line="2585" pos:column="33">len<pos:position pos:line="2585" pos:column="36"/></name></expr></argument>)<pos:position pos:line="2585" pos:column="37"/></argument_list></call></expr>;<pos:position pos:line="2585" pos:column="38"/></expr_stmt>
            <if pos:line="2586" pos:column="13">if <condition pos:line="2586" pos:column="16">(<expr><name pos:line="2586" pos:column="17">c<pos:position pos:line="2586" pos:column="18"/></name> <operator pos:line="2586" pos:column="19">&gt;=<pos:position pos:line="2586" pos:column="24"/></operator> <literal type="number" pos:line="2586" pos:column="22">256<pos:position pos:line="2586" pos:column="25"/></literal> <operator pos:line="2586" pos:column="26">||<pos:position pos:line="2586" pos:column="28"/></operator><operator pos:line="2586" pos:column="28">(<pos:position pos:line="2586" pos:column="29"/></operator><name><name pos:line="2586" pos:column="29">md<pos:position pos:line="2586" pos:column="31"/></name><operator pos:line="2586" pos:column="31">-&gt;<pos:position pos:line="2586" pos:column="36"/></operator><name pos:line="2586" pos:column="33">ctypes<pos:position pos:line="2586" pos:column="39"/></name><index pos:line="2586" pos:column="39">[<expr><name pos:line="2586" pos:column="40">c<pos:position pos:line="2586" pos:column="41"/></name></expr>]<pos:position pos:line="2586" pos:column="42"/></index></name> <operator pos:line="2586" pos:column="43">&amp;<pos:position pos:line="2586" pos:column="48"/></operator> <name pos:line="2586" pos:column="45">ctype_digit<pos:position pos:line="2586" pos:column="56"/></name><operator pos:line="2586" pos:column="56">)<pos:position pos:line="2586" pos:column="57"/></operator> <operator pos:line="2586" pos:column="58">==<pos:position pos:line="2586" pos:column="60"/></operator> <literal type="number" pos:line="2586" pos:column="61">0<pos:position pos:line="2586" pos:column="62"/></literal></expr>)<pos:position pos:line="2586" pos:column="63"/></condition><then pos:line="2586" pos:column="63"> <block type="pseudo"><break pos:line="2586" pos:column="64">break;<pos:position pos:line="2586" pos:column="70"/></break></block></then></if>
            <expr_stmt><expr><name pos:line="2587" pos:column="13">eptr<pos:position pos:line="2587" pos:column="17"/></name><operator pos:line="2587" pos:column="17">+=<pos:position pos:line="2587" pos:column="19"/></operator> <name pos:line="2587" pos:column="20">len<pos:position pos:line="2587" pos:column="23"/></name></expr>;<pos:position pos:line="2587" pos:column="24"/></expr_stmt>
            }<pos:position pos:line="2588" pos:column="14"/></block></for>
          <break pos:line="2589" pos:column="11">break;<pos:position pos:line="2589" pos:column="17"/></break>

          <case pos:line="2591" pos:column="11">case <expr><name pos:line="2591" pos:column="16">OP_NOT_WHITESPACE<pos:position pos:line="2591" pos:column="33"/></name></expr>:<pos:position pos:line="2591" pos:column="34"/></case>
          <for pos:line="2592" pos:column="11">for <control pos:line="2592" pos:column="15">(<init><expr><name pos:line="2592" pos:column="16">i<pos:position pos:line="2592" pos:column="17"/></name> <operator pos:line="2592" pos:column="18">=<pos:position pos:line="2592" pos:column="19"/></operator> <name pos:line="2592" pos:column="20">min<pos:position pos:line="2592" pos:column="23"/></name></expr>;<pos:position pos:line="2592" pos:column="24"/></init> <condition><expr><name pos:line="2592" pos:column="25">i<pos:position pos:line="2592" pos:column="26"/></name> <operator pos:line="2592" pos:column="27">&lt;<pos:position pos:line="2592" pos:column="31"/></operator> <name pos:line="2592" pos:column="29">max<pos:position pos:line="2592" pos:column="32"/></name></expr>;<pos:position pos:line="2592" pos:column="33"/></condition> <incr><expr><name pos:line="2592" pos:column="34">i<pos:position pos:line="2592" pos:column="35"/></name><operator pos:line="2592" pos:column="35">++<pos:position pos:line="2592" pos:column="37"/></operator></expr></incr>)<pos:position pos:line="2592" pos:column="38"/></control>
            <block pos:line="2593" pos:column="13">{
            <decl_stmt><decl><type><name pos:line="2594" pos:column="13">int<pos:position pos:line="2594" pos:column="16"/></name></type> <name pos:line="2594" pos:column="17">len<pos:position pos:line="2594" pos:column="20"/></name> <init pos:line="2594" pos:column="21">= <expr><literal type="number" pos:line="2594" pos:column="23">1<pos:position pos:line="2594" pos:column="24"/></literal></expr></init></decl>;<pos:position pos:line="2594" pos:column="25"/></decl_stmt>
            <if pos:line="2595" pos:column="13">if <condition pos:line="2595" pos:column="16">(<expr><name pos:line="2595" pos:column="17">eptr<pos:position pos:line="2595" pos:column="21"/></name> <operator pos:line="2595" pos:column="22">&gt;=<pos:position pos:line="2595" pos:column="27"/></operator> <name><name pos:line="2595" pos:column="25">md<pos:position pos:line="2595" pos:column="27"/></name><operator pos:line="2595" pos:column="27">-&gt;<pos:position pos:line="2595" pos:column="32"/></operator><name pos:line="2595" pos:column="29">end_subject<pos:position pos:line="2595" pos:column="40"/></name></name></expr>)<pos:position pos:line="2595" pos:column="41"/></condition><then pos:line="2595" pos:column="41"> <block type="pseudo"><break pos:line="2595" pos:column="42">break;<pos:position pos:line="2595" pos:column="48"/></break></block></then></if>
            <expr_stmt><expr><call><name pos:line="2596" pos:column="13">GETCHARLEN<pos:position pos:line="2596" pos:column="23"/></name><argument_list pos:line="2596" pos:column="23">(<argument><expr><name pos:line="2596" pos:column="24">c<pos:position pos:line="2596" pos:column="25"/></name></expr></argument>, <argument><expr><name pos:line="2596" pos:column="27">eptr<pos:position pos:line="2596" pos:column="31"/></name></expr></argument>, <argument><expr><name pos:line="2596" pos:column="33">len<pos:position pos:line="2596" pos:column="36"/></name></expr></argument>)<pos:position pos:line="2596" pos:column="37"/></argument_list></call></expr>;<pos:position pos:line="2596" pos:column="38"/></expr_stmt>
            <if pos:line="2597" pos:column="13">if <condition pos:line="2597" pos:column="16">(<expr><name pos:line="2597" pos:column="17">c<pos:position pos:line="2597" pos:column="18"/></name> <operator pos:line="2597" pos:column="19">&lt;<pos:position pos:line="2597" pos:column="23"/></operator> <literal type="number" pos:line="2597" pos:column="21">256<pos:position pos:line="2597" pos:column="24"/></literal> <operator pos:line="2597" pos:column="25">&amp;&amp;<pos:position pos:line="2597" pos:column="35"/></operator> <operator pos:line="2597" pos:column="28">(<pos:position pos:line="2597" pos:column="29"/></operator><name><name pos:line="2597" pos:column="29">md<pos:position pos:line="2597" pos:column="31"/></name><operator pos:line="2597" pos:column="31">-&gt;<pos:position pos:line="2597" pos:column="36"/></operator><name pos:line="2597" pos:column="33">ctypes<pos:position pos:line="2597" pos:column="39"/></name><index pos:line="2597" pos:column="39">[<expr><name pos:line="2597" pos:column="40">c<pos:position pos:line="2597" pos:column="41"/></name></expr>]<pos:position pos:line="2597" pos:column="42"/></index></name> <operator pos:line="2597" pos:column="43">&amp;<pos:position pos:line="2597" pos:column="48"/></operator> <name pos:line="2597" pos:column="45">ctype_space<pos:position pos:line="2597" pos:column="56"/></name><operator pos:line="2597" pos:column="56">)<pos:position pos:line="2597" pos:column="57"/></operator> <operator pos:line="2597" pos:column="58">!=<pos:position pos:line="2597" pos:column="60"/></operator> <literal type="number" pos:line="2597" pos:column="61">0<pos:position pos:line="2597" pos:column="62"/></literal></expr>)<pos:position pos:line="2597" pos:column="63"/></condition><then pos:line="2597" pos:column="63"> <block type="pseudo"><break pos:line="2597" pos:column="64">break;<pos:position pos:line="2597" pos:column="70"/></break></block></then></if>
            <expr_stmt><expr><name pos:line="2598" pos:column="13">eptr<pos:position pos:line="2598" pos:column="17"/></name><operator pos:line="2598" pos:column="17">+=<pos:position pos:line="2598" pos:column="19"/></operator> <name pos:line="2598" pos:column="20">len<pos:position pos:line="2598" pos:column="23"/></name></expr>;<pos:position pos:line="2598" pos:column="24"/></expr_stmt>
            }<pos:position pos:line="2599" pos:column="14"/></block></for>
          <break pos:line="2600" pos:column="11">break;<pos:position pos:line="2600" pos:column="17"/></break>

          <case pos:line="2602" pos:column="11">case <expr><name pos:line="2602" pos:column="16">OP_WHITESPACE<pos:position pos:line="2602" pos:column="29"/></name></expr>:<pos:position pos:line="2602" pos:column="30"/></case>
          <for pos:line="2603" pos:column="11">for <control pos:line="2603" pos:column="15">(<init><expr><name pos:line="2603" pos:column="16">i<pos:position pos:line="2603" pos:column="17"/></name> <operator pos:line="2603" pos:column="18">=<pos:position pos:line="2603" pos:column="19"/></operator> <name pos:line="2603" pos:column="20">min<pos:position pos:line="2603" pos:column="23"/></name></expr>;<pos:position pos:line="2603" pos:column="24"/></init> <condition><expr><name pos:line="2603" pos:column="25">i<pos:position pos:line="2603" pos:column="26"/></name> <operator pos:line="2603" pos:column="27">&lt;<pos:position pos:line="2603" pos:column="31"/></operator> <name pos:line="2603" pos:column="29">max<pos:position pos:line="2603" pos:column="32"/></name></expr>;<pos:position pos:line="2603" pos:column="33"/></condition> <incr><expr><name pos:line="2603" pos:column="34">i<pos:position pos:line="2603" pos:column="35"/></name><operator pos:line="2603" pos:column="35">++<pos:position pos:line="2603" pos:column="37"/></operator></expr></incr>)<pos:position pos:line="2603" pos:column="38"/></control>
            <block pos:line="2604" pos:column="13">{
            <decl_stmt><decl><type><name pos:line="2605" pos:column="13">int<pos:position pos:line="2605" pos:column="16"/></name></type> <name pos:line="2605" pos:column="17">len<pos:position pos:line="2605" pos:column="20"/></name> <init pos:line="2605" pos:column="21">= <expr><literal type="number" pos:line="2605" pos:column="23">1<pos:position pos:line="2605" pos:column="24"/></literal></expr></init></decl>;<pos:position pos:line="2605" pos:column="25"/></decl_stmt>
            <if pos:line="2606" pos:column="13">if <condition pos:line="2606" pos:column="16">(<expr><name pos:line="2606" pos:column="17">eptr<pos:position pos:line="2606" pos:column="21"/></name> <operator pos:line="2606" pos:column="22">&gt;=<pos:position pos:line="2606" pos:column="27"/></operator> <name><name pos:line="2606" pos:column="25">md<pos:position pos:line="2606" pos:column="27"/></name><operator pos:line="2606" pos:column="27">-&gt;<pos:position pos:line="2606" pos:column="32"/></operator><name pos:line="2606" pos:column="29">end_subject<pos:position pos:line="2606" pos:column="40"/></name></name></expr>)<pos:position pos:line="2606" pos:column="41"/></condition><then pos:line="2606" pos:column="41"> <block type="pseudo"><break pos:line="2606" pos:column="42">break;<pos:position pos:line="2606" pos:column="48"/></break></block></then></if>
            <expr_stmt><expr><call><name pos:line="2607" pos:column="13">GETCHARLEN<pos:position pos:line="2607" pos:column="23"/></name><argument_list pos:line="2607" pos:column="23">(<argument><expr><name pos:line="2607" pos:column="24">c<pos:position pos:line="2607" pos:column="25"/></name></expr></argument>, <argument><expr><name pos:line="2607" pos:column="27">eptr<pos:position pos:line="2607" pos:column="31"/></name></expr></argument>, <argument><expr><name pos:line="2607" pos:column="33">len<pos:position pos:line="2607" pos:column="36"/></name></expr></argument>)<pos:position pos:line="2607" pos:column="37"/></argument_list></call></expr>;<pos:position pos:line="2607" pos:column="38"/></expr_stmt>
            <if pos:line="2608" pos:column="13">if <condition pos:line="2608" pos:column="16">(<expr><name pos:line="2608" pos:column="17">c<pos:position pos:line="2608" pos:column="18"/></name> <operator pos:line="2608" pos:column="19">&gt;=<pos:position pos:line="2608" pos:column="24"/></operator> <literal type="number" pos:line="2608" pos:column="22">256<pos:position pos:line="2608" pos:column="25"/></literal> <operator pos:line="2608" pos:column="26">||<pos:position pos:line="2608" pos:column="28"/></operator><operator pos:line="2608" pos:column="28">(<pos:position pos:line="2608" pos:column="29"/></operator><name><name pos:line="2608" pos:column="29">md<pos:position pos:line="2608" pos:column="31"/></name><operator pos:line="2608" pos:column="31">-&gt;<pos:position pos:line="2608" pos:column="36"/></operator><name pos:line="2608" pos:column="33">ctypes<pos:position pos:line="2608" pos:column="39"/></name><index pos:line="2608" pos:column="39">[<expr><name pos:line="2608" pos:column="40">c<pos:position pos:line="2608" pos:column="41"/></name></expr>]<pos:position pos:line="2608" pos:column="42"/></index></name> <operator pos:line="2608" pos:column="43">&amp;<pos:position pos:line="2608" pos:column="48"/></operator> <name pos:line="2608" pos:column="45">ctype_space<pos:position pos:line="2608" pos:column="56"/></name><operator pos:line="2608" pos:column="56">)<pos:position pos:line="2608" pos:column="57"/></operator> <operator pos:line="2608" pos:column="58">==<pos:position pos:line="2608" pos:column="60"/></operator> <literal type="number" pos:line="2608" pos:column="61">0<pos:position pos:line="2608" pos:column="62"/></literal></expr>)<pos:position pos:line="2608" pos:column="63"/></condition><then pos:line="2608" pos:column="63"> <block type="pseudo"><break pos:line="2608" pos:column="64">break;<pos:position pos:line="2608" pos:column="70"/></break></block></then></if>
            <expr_stmt><expr><name pos:line="2609" pos:column="13">eptr<pos:position pos:line="2609" pos:column="17"/></name><operator pos:line="2609" pos:column="17">+=<pos:position pos:line="2609" pos:column="19"/></operator> <name pos:line="2609" pos:column="20">len<pos:position pos:line="2609" pos:column="23"/></name></expr>;<pos:position pos:line="2609" pos:column="24"/></expr_stmt>
            }<pos:position pos:line="2610" pos:column="14"/></block></for>
          <break pos:line="2611" pos:column="11">break;<pos:position pos:line="2611" pos:column="17"/></break>

          <case pos:line="2613" pos:column="11">case <expr><name pos:line="2613" pos:column="16">OP_NOT_WORDCHAR<pos:position pos:line="2613" pos:column="31"/></name></expr>:<pos:position pos:line="2613" pos:column="32"/></case>
          <for pos:line="2614" pos:column="11">for <control pos:line="2614" pos:column="15">(<init><expr><name pos:line="2614" pos:column="16">i<pos:position pos:line="2614" pos:column="17"/></name> <operator pos:line="2614" pos:column="18">=<pos:position pos:line="2614" pos:column="19"/></operator> <name pos:line="2614" pos:column="20">min<pos:position pos:line="2614" pos:column="23"/></name></expr>;<pos:position pos:line="2614" pos:column="24"/></init> <condition><expr><name pos:line="2614" pos:column="25">i<pos:position pos:line="2614" pos:column="26"/></name> <operator pos:line="2614" pos:column="27">&lt;<pos:position pos:line="2614" pos:column="31"/></operator> <name pos:line="2614" pos:column="29">max<pos:position pos:line="2614" pos:column="32"/></name></expr>;<pos:position pos:line="2614" pos:column="33"/></condition> <incr><expr><name pos:line="2614" pos:column="34">i<pos:position pos:line="2614" pos:column="35"/></name><operator pos:line="2614" pos:column="35">++<pos:position pos:line="2614" pos:column="37"/></operator></expr></incr>)<pos:position pos:line="2614" pos:column="38"/></control>
            <block pos:line="2615" pos:column="13">{
            <decl_stmt><decl><type><name pos:line="2616" pos:column="13">int<pos:position pos:line="2616" pos:column="16"/></name></type> <name pos:line="2616" pos:column="17">len<pos:position pos:line="2616" pos:column="20"/></name> <init pos:line="2616" pos:column="21">= <expr><literal type="number" pos:line="2616" pos:column="23">1<pos:position pos:line="2616" pos:column="24"/></literal></expr></init></decl>;<pos:position pos:line="2616" pos:column="25"/></decl_stmt>
            <if pos:line="2617" pos:column="13">if <condition pos:line="2617" pos:column="16">(<expr><name pos:line="2617" pos:column="17">eptr<pos:position pos:line="2617" pos:column="21"/></name> <operator pos:line="2617" pos:column="22">&gt;=<pos:position pos:line="2617" pos:column="27"/></operator> <name><name pos:line="2617" pos:column="25">md<pos:position pos:line="2617" pos:column="27"/></name><operator pos:line="2617" pos:column="27">-&gt;<pos:position pos:line="2617" pos:column="32"/></operator><name pos:line="2617" pos:column="29">end_subject<pos:position pos:line="2617" pos:column="40"/></name></name></expr>)<pos:position pos:line="2617" pos:column="41"/></condition><then pos:line="2617" pos:column="41"> <block type="pseudo"><break pos:line="2617" pos:column="42">break;<pos:position pos:line="2617" pos:column="48"/></break></block></then></if>
            <expr_stmt><expr><call><name pos:line="2618" pos:column="13">GETCHARLEN<pos:position pos:line="2618" pos:column="23"/></name><argument_list pos:line="2618" pos:column="23">(<argument><expr><name pos:line="2618" pos:column="24">c<pos:position pos:line="2618" pos:column="25"/></name></expr></argument>, <argument><expr><name pos:line="2618" pos:column="27">eptr<pos:position pos:line="2618" pos:column="31"/></name></expr></argument>, <argument><expr><name pos:line="2618" pos:column="33">len<pos:position pos:line="2618" pos:column="36"/></name></expr></argument>)<pos:position pos:line="2618" pos:column="37"/></argument_list></call></expr>;<pos:position pos:line="2618" pos:column="38"/></expr_stmt>
            <if pos:line="2619" pos:column="13">if <condition pos:line="2619" pos:column="16">(<expr><name pos:line="2619" pos:column="17">c<pos:position pos:line="2619" pos:column="18"/></name> <operator pos:line="2619" pos:column="19">&lt;<pos:position pos:line="2619" pos:column="23"/></operator> <literal type="number" pos:line="2619" pos:column="21">256<pos:position pos:line="2619" pos:column="24"/></literal> <operator pos:line="2619" pos:column="25">&amp;&amp;<pos:position pos:line="2619" pos:column="35"/></operator> <operator pos:line="2619" pos:column="28">(<pos:position pos:line="2619" pos:column="29"/></operator><name><name pos:line="2619" pos:column="29">md<pos:position pos:line="2619" pos:column="31"/></name><operator pos:line="2619" pos:column="31">-&gt;<pos:position pos:line="2619" pos:column="36"/></operator><name pos:line="2619" pos:column="33">ctypes<pos:position pos:line="2619" pos:column="39"/></name><index pos:line="2619" pos:column="39">[<expr><name pos:line="2619" pos:column="40">c<pos:position pos:line="2619" pos:column="41"/></name></expr>]<pos:position pos:line="2619" pos:column="42"/></index></name> <operator pos:line="2619" pos:column="43">&amp;<pos:position pos:line="2619" pos:column="48"/></operator> <name pos:line="2619" pos:column="45">ctype_word<pos:position pos:line="2619" pos:column="55"/></name><operator pos:line="2619" pos:column="55">)<pos:position pos:line="2619" pos:column="56"/></operator> <operator pos:line="2619" pos:column="57">!=<pos:position pos:line="2619" pos:column="59"/></operator> <literal type="number" pos:line="2619" pos:column="60">0<pos:position pos:line="2619" pos:column="61"/></literal></expr>)<pos:position pos:line="2619" pos:column="62"/></condition><then pos:line="2619" pos:column="62"> <block type="pseudo"><break pos:line="2619" pos:column="63">break;<pos:position pos:line="2619" pos:column="69"/></break></block></then></if>
            <expr_stmt><expr><name pos:line="2620" pos:column="13">eptr<pos:position pos:line="2620" pos:column="17"/></name><operator pos:line="2620" pos:column="17">+=<pos:position pos:line="2620" pos:column="19"/></operator> <name pos:line="2620" pos:column="20">len<pos:position pos:line="2620" pos:column="23"/></name></expr>;<pos:position pos:line="2620" pos:column="24"/></expr_stmt>
            }<pos:position pos:line="2621" pos:column="14"/></block></for>
          <break pos:line="2622" pos:column="11">break;<pos:position pos:line="2622" pos:column="17"/></break>

          <case pos:line="2624" pos:column="11">case <expr><name pos:line="2624" pos:column="16">OP_WORDCHAR<pos:position pos:line="2624" pos:column="27"/></name></expr>:<pos:position pos:line="2624" pos:column="28"/></case>
          <for pos:line="2625" pos:column="11">for <control pos:line="2625" pos:column="15">(<init><expr><name pos:line="2625" pos:column="16">i<pos:position pos:line="2625" pos:column="17"/></name> <operator pos:line="2625" pos:column="18">=<pos:position pos:line="2625" pos:column="19"/></operator> <name pos:line="2625" pos:column="20">min<pos:position pos:line="2625" pos:column="23"/></name></expr>;<pos:position pos:line="2625" pos:column="24"/></init> <condition><expr><name pos:line="2625" pos:column="25">i<pos:position pos:line="2625" pos:column="26"/></name> <operator pos:line="2625" pos:column="27">&lt;<pos:position pos:line="2625" pos:column="31"/></operator> <name pos:line="2625" pos:column="29">max<pos:position pos:line="2625" pos:column="32"/></name></expr>;<pos:position pos:line="2625" pos:column="33"/></condition> <incr><expr><name pos:line="2625" pos:column="34">i<pos:position pos:line="2625" pos:column="35"/></name><operator pos:line="2625" pos:column="35">++<pos:position pos:line="2625" pos:column="37"/></operator></expr></incr>)<pos:position pos:line="2625" pos:column="38"/></control>
            <block pos:line="2626" pos:column="13">{
            <decl_stmt><decl><type><name pos:line="2627" pos:column="13">int<pos:position pos:line="2627" pos:column="16"/></name></type> <name pos:line="2627" pos:column="17">len<pos:position pos:line="2627" pos:column="20"/></name> <init pos:line="2627" pos:column="21">= <expr><literal type="number" pos:line="2627" pos:column="23">1<pos:position pos:line="2627" pos:column="24"/></literal></expr></init></decl>;<pos:position pos:line="2627" pos:column="25"/></decl_stmt>
            <if pos:line="2628" pos:column="13">if <condition pos:line="2628" pos:column="16">(<expr><name pos:line="2628" pos:column="17">eptr<pos:position pos:line="2628" pos:column="21"/></name> <operator pos:line="2628" pos:column="22">&gt;=<pos:position pos:line="2628" pos:column="27"/></operator> <name><name pos:line="2628" pos:column="25">md<pos:position pos:line="2628" pos:column="27"/></name><operator pos:line="2628" pos:column="27">-&gt;<pos:position pos:line="2628" pos:column="32"/></operator><name pos:line="2628" pos:column="29">end_subject<pos:position pos:line="2628" pos:column="40"/></name></name></expr>)<pos:position pos:line="2628" pos:column="41"/></condition><then pos:line="2628" pos:column="41"> <block type="pseudo"><break pos:line="2628" pos:column="42">break;<pos:position pos:line="2628" pos:column="48"/></break></block></then></if>
            <expr_stmt><expr><call><name pos:line="2629" pos:column="13">GETCHARLEN<pos:position pos:line="2629" pos:column="23"/></name><argument_list pos:line="2629" pos:column="23">(<argument><expr><name pos:line="2629" pos:column="24">c<pos:position pos:line="2629" pos:column="25"/></name></expr></argument>, <argument><expr><name pos:line="2629" pos:column="27">eptr<pos:position pos:line="2629" pos:column="31"/></name></expr></argument>, <argument><expr><name pos:line="2629" pos:column="33">len<pos:position pos:line="2629" pos:column="36"/></name></expr></argument>)<pos:position pos:line="2629" pos:column="37"/></argument_list></call></expr>;<pos:position pos:line="2629" pos:column="38"/></expr_stmt>
            <if pos:line="2630" pos:column="13">if <condition pos:line="2630" pos:column="16">(<expr><name pos:line="2630" pos:column="17">c<pos:position pos:line="2630" pos:column="18"/></name> <operator pos:line="2630" pos:column="19">&gt;=<pos:position pos:line="2630" pos:column="24"/></operator> <literal type="number" pos:line="2630" pos:column="22">256<pos:position pos:line="2630" pos:column="25"/></literal> <operator pos:line="2630" pos:column="26">||<pos:position pos:line="2630" pos:column="28"/></operator> <operator pos:line="2630" pos:column="29">(<pos:position pos:line="2630" pos:column="30"/></operator><name><name pos:line="2630" pos:column="30">md<pos:position pos:line="2630" pos:column="32"/></name><operator pos:line="2630" pos:column="32">-&gt;<pos:position pos:line="2630" pos:column="37"/></operator><name pos:line="2630" pos:column="34">ctypes<pos:position pos:line="2630" pos:column="40"/></name><index pos:line="2630" pos:column="40">[<expr><name pos:line="2630" pos:column="41">c<pos:position pos:line="2630" pos:column="42"/></name></expr>]<pos:position pos:line="2630" pos:column="43"/></index></name> <operator pos:line="2630" pos:column="44">&amp;<pos:position pos:line="2630" pos:column="49"/></operator> <name pos:line="2630" pos:column="46">ctype_word<pos:position pos:line="2630" pos:column="56"/></name><operator pos:line="2630" pos:column="56">)<pos:position pos:line="2630" pos:column="57"/></operator> <operator pos:line="2630" pos:column="58">==<pos:position pos:line="2630" pos:column="60"/></operator> <literal type="number" pos:line="2630" pos:column="61">0<pos:position pos:line="2630" pos:column="62"/></literal></expr>)<pos:position pos:line="2630" pos:column="63"/></condition><then pos:line="2630" pos:column="63"> <block type="pseudo"><break pos:line="2630" pos:column="64">break;<pos:position pos:line="2630" pos:column="70"/></break></block></then></if>
            <expr_stmt><expr><name pos:line="2631" pos:column="13">eptr<pos:position pos:line="2631" pos:column="17"/></name><operator pos:line="2631" pos:column="17">+=<pos:position pos:line="2631" pos:column="19"/></operator> <name pos:line="2631" pos:column="20">len<pos:position pos:line="2631" pos:column="23"/></name></expr>;<pos:position pos:line="2631" pos:column="24"/></expr_stmt>
            }<pos:position pos:line="2632" pos:column="14"/></block></for>
          <break pos:line="2633" pos:column="11">break;<pos:position pos:line="2633" pos:column="17"/></break>

          <default pos:line="2635" pos:column="11">default:<pos:position pos:line="2635" pos:column="19"/></default>
          <expr_stmt><expr><call><name pos:line="2636" pos:column="11">RRETURN<pos:position pos:line="2636" pos:column="18"/></name><argument_list pos:line="2636" pos:column="18">(<argument><expr><name pos:line="2636" pos:column="19">PCRE_ERROR_INTERNAL<pos:position pos:line="2636" pos:column="38"/></name></expr></argument>)<pos:position pos:line="2636" pos:column="39"/></argument_list></call></expr>;<pos:position pos:line="2636" pos:column="40"/></expr_stmt>
          }<pos:position pos:line="2637" pos:column="12"/></block></switch>

        <comment type="block" pos:line="2639" pos:column="9">/* eptr is now past the end of the maximum run */</comment>

        <for pos:line="2641" pos:column="9">for<control pos:line="2641" pos:column="12">(<init pos:line="2641" pos:column="13">;<pos:position pos:line="2641" pos:column="14"/></init><condition pos:line="2641" pos:column="14">;<pos:position pos:line="2641" pos:column="15"/></condition><incr/>)<pos:position pos:line="2641" pos:column="16"/></control>
          <block pos:line="2642" pos:column="11">{
          <expr_stmt><expr><call><name pos:line="2643" pos:column="11">RMATCH<pos:position pos:line="2643" pos:column="17"/></name><argument_list pos:line="2643" pos:column="17">(<argument><expr><name pos:line="2643" pos:column="18">rrc<pos:position pos:line="2643" pos:column="21"/></name></expr></argument>, <argument><expr><name pos:line="2643" pos:column="23">eptr<pos:position pos:line="2643" pos:column="27"/></name></expr></argument>, <argument><expr><name pos:line="2643" pos:column="29">ecode<pos:position pos:line="2643" pos:column="34"/></name></expr></argument>, <argument><expr><name pos:line="2643" pos:column="36">offset_top<pos:position pos:line="2643" pos:column="46"/></name></expr></argument>, <argument><expr><name pos:line="2643" pos:column="48">md<pos:position pos:line="2643" pos:column="50"/></name></expr></argument>, <argument><expr><name pos:line="2643" pos:column="52">ims<pos:position pos:line="2643" pos:column="55"/></name></expr></argument>, <argument><expr><name pos:line="2643" pos:column="57">eptrb<pos:position pos:line="2643" pos:column="62"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="2643" pos:column="64">0<pos:position pos:line="2643" pos:column="65"/></literal></expr></argument>)<pos:position pos:line="2643" pos:column="66"/></argument_list></call></expr>;<pos:position pos:line="2643" pos:column="67"/></expr_stmt>
          <if pos:line="2644" pos:column="11">if <condition pos:line="2644" pos:column="14">(<expr><name pos:line="2644" pos:column="15">rrc<pos:position pos:line="2644" pos:column="18"/></name> <operator pos:line="2644" pos:column="19">!=<pos:position pos:line="2644" pos:column="21"/></operator> <name pos:line="2644" pos:column="22">MATCH_NOMATCH<pos:position pos:line="2644" pos:column="35"/></name></expr>)<pos:position pos:line="2644" pos:column="36"/></condition><then pos:line="2644" pos:column="36"> <block type="pseudo"><expr_stmt><expr><call><name pos:line="2644" pos:column="37">RRETURN<pos:position pos:line="2644" pos:column="44"/></name><argument_list pos:line="2644" pos:column="44">(<argument><expr><name pos:line="2644" pos:column="45">rrc<pos:position pos:line="2644" pos:column="48"/></name></expr></argument>)<pos:position pos:line="2644" pos:column="49"/></argument_list></call></expr>;<pos:position pos:line="2644" pos:column="50"/></expr_stmt></block></then></if>
          <if pos:line="2645" pos:column="11">if <condition pos:line="2645" pos:column="14">(<expr><name pos:line="2645" pos:column="15">eptr<pos:position pos:line="2645" pos:column="19"/></name><operator pos:line="2645" pos:column="19">--<pos:position pos:line="2645" pos:column="21"/></operator> <operator pos:line="2645" pos:column="22">==<pos:position pos:line="2645" pos:column="24"/></operator> <name pos:line="2645" pos:column="25">pp<pos:position pos:line="2645" pos:column="27"/></name></expr>)<pos:position pos:line="2645" pos:column="28"/></condition><then pos:line="2645" pos:column="28"> <block type="pseudo"><break pos:line="2645" pos:column="29">break;<pos:position pos:line="2645" pos:column="35"/></break></block></then></if>        <comment type="block" pos:line="2645" pos:column="43">/* Stop if tried at original pos */</comment>
          <expr_stmt><expr><call><name pos:line="2646" pos:column="11">BACKCHAR<pos:position pos:line="2646" pos:column="19"/></name><argument_list pos:line="2646" pos:column="19">(<argument><expr><name pos:line="2646" pos:column="20">eptr<pos:position pos:line="2646" pos:column="24"/></name></expr></argument>)<pos:position pos:line="2646" pos:column="25"/></argument_list></call></expr>;<pos:position pos:line="2646" pos:column="26"/></expr_stmt>
          }<pos:position pos:line="2647" pos:column="12"/></block></for>
        }<pos:position pos:line="2648" pos:column="10"/></block></then></if></elseif>
      <else pos:line="2649" pos:column="7">else
<cpp:endif pos:line="2650" pos:column="1">#<cpp:directive pos:line="2650" pos:column="2">endif<pos:position pos:line="2650" pos:column="7"/></cpp:directive></cpp:endif>

      <comment type="block" pos:line="2652" pos:column="7">/* Not UTF-8 mode */</comment>
        <block pos:line="2653" pos:column="9">{
        <switch pos:line="2654" pos:column="9">switch<condition pos:line="2654" pos:column="15">(<expr><name pos:line="2654" pos:column="16">ctype<pos:position pos:line="2654" pos:column="21"/></name></expr>)<pos:position pos:line="2654" pos:column="22"/></condition>
          <block pos:line="2655" pos:column="11">{
          <case pos:line="2656" pos:column="11">case <expr><name pos:line="2656" pos:column="16">OP_ANY<pos:position pos:line="2656" pos:column="22"/></name></expr>:<pos:position pos:line="2656" pos:column="23"/></case>
          <if pos:line="2657" pos:column="11">if <condition pos:line="2657" pos:column="14">(<expr><operator pos:line="2657" pos:column="15">(<pos:position pos:line="2657" pos:column="16"/></operator><name pos:line="2657" pos:column="16">ims<pos:position pos:line="2657" pos:column="19"/></name> <operator pos:line="2657" pos:column="20">&amp;<pos:position pos:line="2657" pos:column="25"/></operator> <name pos:line="2657" pos:column="22">PCRE_DOTALL<pos:position pos:line="2657" pos:column="33"/></name><operator pos:line="2657" pos:column="33">)<pos:position pos:line="2657" pos:column="34"/></operator> <operator pos:line="2657" pos:column="35">==<pos:position pos:line="2657" pos:column="37"/></operator> <literal type="number" pos:line="2657" pos:column="38">0<pos:position pos:line="2657" pos:column="39"/></literal></expr>)<pos:position pos:line="2657" pos:column="40"/></condition><then pos:line="2657" pos:column="40">
            <block pos:line="2658" pos:column="13">{
            <for pos:line="2659" pos:column="13">for <control pos:line="2659" pos:column="17">(<init><expr><name pos:line="2659" pos:column="18">i<pos:position pos:line="2659" pos:column="19"/></name> <operator pos:line="2659" pos:column="20">=<pos:position pos:line="2659" pos:column="21"/></operator> <name pos:line="2659" pos:column="22">min<pos:position pos:line="2659" pos:column="25"/></name></expr>;<pos:position pos:line="2659" pos:column="26"/></init> <condition><expr><name pos:line="2659" pos:column="27">i<pos:position pos:line="2659" pos:column="28"/></name> <operator pos:line="2659" pos:column="29">&lt;<pos:position pos:line="2659" pos:column="33"/></operator> <name pos:line="2659" pos:column="31">max<pos:position pos:line="2659" pos:column="34"/></name></expr>;<pos:position pos:line="2659" pos:column="35"/></condition> <incr><expr><name pos:line="2659" pos:column="36">i<pos:position pos:line="2659" pos:column="37"/></name><operator pos:line="2659" pos:column="37">++<pos:position pos:line="2659" pos:column="39"/></operator></expr></incr>)<pos:position pos:line="2659" pos:column="40"/></control>
              <block pos:line="2660" pos:column="15">{
              <if pos:line="2661" pos:column="15">if <condition pos:line="2661" pos:column="18">(<expr><name pos:line="2661" pos:column="19">eptr<pos:position pos:line="2661" pos:column="23"/></name> <operator pos:line="2661" pos:column="24">&gt;=<pos:position pos:line="2661" pos:column="29"/></operator> <name><name pos:line="2661" pos:column="27">md<pos:position pos:line="2661" pos:column="29"/></name><operator pos:line="2661" pos:column="29">-&gt;<pos:position pos:line="2661" pos:column="34"/></operator><name pos:line="2661" pos:column="31">end_subject<pos:position pos:line="2661" pos:column="42"/></name></name> <operator pos:line="2661" pos:column="43">||<pos:position pos:line="2661" pos:column="45"/></operator> <operator pos:line="2661" pos:column="46">*<pos:position pos:line="2661" pos:column="47"/></operator><name pos:line="2661" pos:column="47">eptr<pos:position pos:line="2661" pos:column="51"/></name> <operator pos:line="2661" pos:column="52">==<pos:position pos:line="2661" pos:column="54"/></operator> <name pos:line="2661" pos:column="55">NEWLINE<pos:position pos:line="2661" pos:column="62"/></name></expr>)<pos:position pos:line="2661" pos:column="63"/></condition><then pos:line="2661" pos:column="63"> <block type="pseudo"><break pos:line="2661" pos:column="64">break;<pos:position pos:line="2661" pos:column="70"/></break></block></then></if>
              <expr_stmt><expr><name pos:line="2662" pos:column="15">eptr<pos:position pos:line="2662" pos:column="19"/></name><operator pos:line="2662" pos:column="19">++<pos:position pos:line="2662" pos:column="21"/></operator></expr>;<pos:position pos:line="2662" pos:column="22"/></expr_stmt>
              }<pos:position pos:line="2663" pos:column="16"/></block></for>
            <break pos:line="2664" pos:column="13">break;<pos:position pos:line="2664" pos:column="19"/></break>
            }<pos:position pos:line="2665" pos:column="14"/></block></then></if>
          <comment type="block" pos:line="2666" pos:column="11">/* For DOTALL case, fall through and treat as \C */</comment>

          <case pos:line="2668" pos:column="11">case <expr><name pos:line="2668" pos:column="16">OP_ANYBYTE<pos:position pos:line="2668" pos:column="26"/></name></expr>:<pos:position pos:line="2668" pos:column="27"/></case>
          <expr_stmt><expr><name pos:line="2669" pos:column="11">c<pos:position pos:line="2669" pos:column="12"/></name> <operator pos:line="2669" pos:column="13">=<pos:position pos:line="2669" pos:column="14"/></operator> <name pos:line="2669" pos:column="15">max<pos:position pos:line="2669" pos:column="18"/></name> <operator pos:line="2669" pos:column="19">-<pos:position pos:line="2669" pos:column="20"/></operator> <name pos:line="2669" pos:column="21">min<pos:position pos:line="2669" pos:column="24"/></name></expr>;<pos:position pos:line="2669" pos:column="25"/></expr_stmt>
          <if pos:line="2670" pos:column="11">if <condition pos:line="2670" pos:column="14">(<expr><name pos:line="2670" pos:column="15">c<pos:position pos:line="2670" pos:column="16"/></name> <operator pos:line="2670" pos:column="17">&gt;<pos:position pos:line="2670" pos:column="21"/></operator> <name><name pos:line="2670" pos:column="19">md<pos:position pos:line="2670" pos:column="21"/></name><operator pos:line="2670" pos:column="21">-&gt;<pos:position pos:line="2670" pos:column="26"/></operator><name pos:line="2670" pos:column="23">end_subject<pos:position pos:line="2670" pos:column="34"/></name></name> <operator pos:line="2670" pos:column="35">-<pos:position pos:line="2670" pos:column="36"/></operator> <name pos:line="2670" pos:column="37">eptr<pos:position pos:line="2670" pos:column="41"/></name></expr>)<pos:position pos:line="2670" pos:column="42"/></condition><then pos:line="2670" pos:column="42"> <block type="pseudo"><expr_stmt><expr><name pos:line="2670" pos:column="43">c<pos:position pos:line="2670" pos:column="44"/></name> <operator pos:line="2670" pos:column="45">=<pos:position pos:line="2670" pos:column="46"/></operator> <name><name pos:line="2670" pos:column="47">md<pos:position pos:line="2670" pos:column="49"/></name><operator pos:line="2670" pos:column="49">-&gt;<pos:position pos:line="2670" pos:column="54"/></operator><name pos:line="2670" pos:column="51">end_subject<pos:position pos:line="2670" pos:column="62"/></name></name> <operator pos:line="2670" pos:column="63">-<pos:position pos:line="2670" pos:column="64"/></operator> <name pos:line="2670" pos:column="65">eptr<pos:position pos:line="2670" pos:column="69"/></name></expr>;<pos:position pos:line="2670" pos:column="70"/></expr_stmt></block></then></if>
          <expr_stmt><expr><name pos:line="2671" pos:column="11">eptr<pos:position pos:line="2671" pos:column="15"/></name> <operator pos:line="2671" pos:column="16">+=<pos:position pos:line="2671" pos:column="18"/></operator> <name pos:line="2671" pos:column="19">c<pos:position pos:line="2671" pos:column="20"/></name></expr>;<pos:position pos:line="2671" pos:column="21"/></expr_stmt>
          <break pos:line="2672" pos:column="11">break;<pos:position pos:line="2672" pos:column="17"/></break>

          <case pos:line="2674" pos:column="11">case <expr><name pos:line="2674" pos:column="16">OP_NOT_DIGIT<pos:position pos:line="2674" pos:column="28"/></name></expr>:<pos:position pos:line="2674" pos:column="29"/></case>
          <for pos:line="2675" pos:column="11">for <control pos:line="2675" pos:column="15">(<init><expr><name pos:line="2675" pos:column="16">i<pos:position pos:line="2675" pos:column="17"/></name> <operator pos:line="2675" pos:column="18">=<pos:position pos:line="2675" pos:column="19"/></operator> <name pos:line="2675" pos:column="20">min<pos:position pos:line="2675" pos:column="23"/></name></expr>;<pos:position pos:line="2675" pos:column="24"/></init> <condition><expr><name pos:line="2675" pos:column="25">i<pos:position pos:line="2675" pos:column="26"/></name> <operator pos:line="2675" pos:column="27">&lt;<pos:position pos:line="2675" pos:column="31"/></operator> <name pos:line="2675" pos:column="29">max<pos:position pos:line="2675" pos:column="32"/></name></expr>;<pos:position pos:line="2675" pos:column="33"/></condition> <incr><expr><name pos:line="2675" pos:column="34">i<pos:position pos:line="2675" pos:column="35"/></name><operator pos:line="2675" pos:column="35">++<pos:position pos:line="2675" pos:column="37"/></operator></expr></incr>)<pos:position pos:line="2675" pos:column="38"/></control>
            <block pos:line="2676" pos:column="13">{
            <if pos:line="2677" pos:column="13">if <condition pos:line="2677" pos:column="16">(<expr><name pos:line="2677" pos:column="17">eptr<pos:position pos:line="2677" pos:column="21"/></name> <operator pos:line="2677" pos:column="22">&gt;=<pos:position pos:line="2677" pos:column="27"/></operator> <name><name pos:line="2677" pos:column="25">md<pos:position pos:line="2677" pos:column="27"/></name><operator pos:line="2677" pos:column="27">-&gt;<pos:position pos:line="2677" pos:column="32"/></operator><name pos:line="2677" pos:column="29">end_subject<pos:position pos:line="2677" pos:column="40"/></name></name> <operator pos:line="2677" pos:column="41">||<pos:position pos:line="2677" pos:column="43"/></operator> <operator pos:line="2677" pos:column="44">(<pos:position pos:line="2677" pos:column="45"/></operator><name><name pos:line="2677" pos:column="45">md<pos:position pos:line="2677" pos:column="47"/></name><operator pos:line="2677" pos:column="47">-&gt;<pos:position pos:line="2677" pos:column="52"/></operator><name pos:line="2677" pos:column="49">ctypes<pos:position pos:line="2677" pos:column="55"/></name><index pos:line="2677" pos:column="55">[<expr><operator pos:line="2677" pos:column="56">*<pos:position pos:line="2677" pos:column="57"/></operator><name pos:line="2677" pos:column="57">eptr<pos:position pos:line="2677" pos:column="61"/></name></expr>]<pos:position pos:line="2677" pos:column="62"/></index></name> <operator pos:line="2677" pos:column="63">&amp;<pos:position pos:line="2677" pos:column="68"/></operator> <name pos:line="2677" pos:column="65">ctype_digit<pos:position pos:line="2677" pos:column="76"/></name><operator pos:line="2677" pos:column="76">)<pos:position pos:line="2677" pos:column="77"/></operator> <operator pos:line="2677" pos:column="78">!=<pos:position pos:line="2677" pos:column="80"/></operator> <literal type="number" pos:line="2677" pos:column="81">0<pos:position pos:line="2677" pos:column="82"/></literal></expr>)<pos:position pos:line="2677" pos:column="83"/></condition><then pos:line="2677" pos:column="83">
              <block type="pseudo"><break pos:line="2678" pos:column="15">break;<pos:position pos:line="2678" pos:column="21"/></break></block></then></if>
            <expr_stmt><expr><name pos:line="2679" pos:column="13">eptr<pos:position pos:line="2679" pos:column="17"/></name><operator pos:line="2679" pos:column="17">++<pos:position pos:line="2679" pos:column="19"/></operator></expr>;<pos:position pos:line="2679" pos:column="20"/></expr_stmt>
            }<pos:position pos:line="2680" pos:column="14"/></block></for>
          <break pos:line="2681" pos:column="11">break;<pos:position pos:line="2681" pos:column="17"/></break>

          <case pos:line="2683" pos:column="11">case <expr><name pos:line="2683" pos:column="16">OP_DIGIT<pos:position pos:line="2683" pos:column="24"/></name></expr>:<pos:position pos:line="2683" pos:column="25"/></case>
          <for pos:line="2684" pos:column="11">for <control pos:line="2684" pos:column="15">(<init><expr><name pos:line="2684" pos:column="16">i<pos:position pos:line="2684" pos:column="17"/></name> <operator pos:line="2684" pos:column="18">=<pos:position pos:line="2684" pos:column="19"/></operator> <name pos:line="2684" pos:column="20">min<pos:position pos:line="2684" pos:column="23"/></name></expr>;<pos:position pos:line="2684" pos:column="24"/></init> <condition><expr><name pos:line="2684" pos:column="25">i<pos:position pos:line="2684" pos:column="26"/></name> <operator pos:line="2684" pos:column="27">&lt;<pos:position pos:line="2684" pos:column="31"/></operator> <name pos:line="2684" pos:column="29">max<pos:position pos:line="2684" pos:column="32"/></name></expr>;<pos:position pos:line="2684" pos:column="33"/></condition> <incr><expr><name pos:line="2684" pos:column="34">i<pos:position pos:line="2684" pos:column="35"/></name><operator pos:line="2684" pos:column="35">++<pos:position pos:line="2684" pos:column="37"/></operator></expr></incr>)<pos:position pos:line="2684" pos:column="38"/></control>
            <block pos:line="2685" pos:column="13">{
            <if pos:line="2686" pos:column="13">if <condition pos:line="2686" pos:column="16">(<expr><name pos:line="2686" pos:column="17">eptr<pos:position pos:line="2686" pos:column="21"/></name> <operator pos:line="2686" pos:column="22">&gt;=<pos:position pos:line="2686" pos:column="27"/></operator> <name><name pos:line="2686" pos:column="25">md<pos:position pos:line="2686" pos:column="27"/></name><operator pos:line="2686" pos:column="27">-&gt;<pos:position pos:line="2686" pos:column="32"/></operator><name pos:line="2686" pos:column="29">end_subject<pos:position pos:line="2686" pos:column="40"/></name></name> <operator pos:line="2686" pos:column="41">||<pos:position pos:line="2686" pos:column="43"/></operator> <operator pos:line="2686" pos:column="44">(<pos:position pos:line="2686" pos:column="45"/></operator><name><name pos:line="2686" pos:column="45">md<pos:position pos:line="2686" pos:column="47"/></name><operator pos:line="2686" pos:column="47">-&gt;<pos:position pos:line="2686" pos:column="52"/></operator><name pos:line="2686" pos:column="49">ctypes<pos:position pos:line="2686" pos:column="55"/></name><index pos:line="2686" pos:column="55">[<expr><operator pos:line="2686" pos:column="56">*<pos:position pos:line="2686" pos:column="57"/></operator><name pos:line="2686" pos:column="57">eptr<pos:position pos:line="2686" pos:column="61"/></name></expr>]<pos:position pos:line="2686" pos:column="62"/></index></name> <operator pos:line="2686" pos:column="63">&amp;<pos:position pos:line="2686" pos:column="68"/></operator> <name pos:line="2686" pos:column="65">ctype_digit<pos:position pos:line="2686" pos:column="76"/></name><operator pos:line="2686" pos:column="76">)<pos:position pos:line="2686" pos:column="77"/></operator> <operator pos:line="2686" pos:column="78">==<pos:position pos:line="2686" pos:column="80"/></operator> <literal type="number" pos:line="2686" pos:column="81">0<pos:position pos:line="2686" pos:column="82"/></literal></expr>)<pos:position pos:line="2686" pos:column="83"/></condition><then pos:line="2686" pos:column="83">
              <block type="pseudo"><break pos:line="2687" pos:column="15">break;<pos:position pos:line="2687" pos:column="21"/></break></block></then></if>
            <expr_stmt><expr><name pos:line="2688" pos:column="13">eptr<pos:position pos:line="2688" pos:column="17"/></name><operator pos:line="2688" pos:column="17">++<pos:position pos:line="2688" pos:column="19"/></operator></expr>;<pos:position pos:line="2688" pos:column="20"/></expr_stmt>
            }<pos:position pos:line="2689" pos:column="14"/></block></for>
          <break pos:line="2690" pos:column="11">break;<pos:position pos:line="2690" pos:column="17"/></break>

          <case pos:line="2692" pos:column="11">case <expr><name pos:line="2692" pos:column="16">OP_NOT_WHITESPACE<pos:position pos:line="2692" pos:column="33"/></name></expr>:<pos:position pos:line="2692" pos:column="34"/></case>
          <for pos:line="2693" pos:column="11">for <control pos:line="2693" pos:column="15">(<init><expr><name pos:line="2693" pos:column="16">i<pos:position pos:line="2693" pos:column="17"/></name> <operator pos:line="2693" pos:column="18">=<pos:position pos:line="2693" pos:column="19"/></operator> <name pos:line="2693" pos:column="20">min<pos:position pos:line="2693" pos:column="23"/></name></expr>;<pos:position pos:line="2693" pos:column="24"/></init> <condition><expr><name pos:line="2693" pos:column="25">i<pos:position pos:line="2693" pos:column="26"/></name> <operator pos:line="2693" pos:column="27">&lt;<pos:position pos:line="2693" pos:column="31"/></operator> <name pos:line="2693" pos:column="29">max<pos:position pos:line="2693" pos:column="32"/></name></expr>;<pos:position pos:line="2693" pos:column="33"/></condition> <incr><expr><name pos:line="2693" pos:column="34">i<pos:position pos:line="2693" pos:column="35"/></name><operator pos:line="2693" pos:column="35">++<pos:position pos:line="2693" pos:column="37"/></operator></expr></incr>)<pos:position pos:line="2693" pos:column="38"/></control>
            <block pos:line="2694" pos:column="13">{
            <if pos:line="2695" pos:column="13">if <condition pos:line="2695" pos:column="16">(<expr><name pos:line="2695" pos:column="17">eptr<pos:position pos:line="2695" pos:column="21"/></name> <operator pos:line="2695" pos:column="22">&gt;=<pos:position pos:line="2695" pos:column="27"/></operator> <name><name pos:line="2695" pos:column="25">md<pos:position pos:line="2695" pos:column="27"/></name><operator pos:line="2695" pos:column="27">-&gt;<pos:position pos:line="2695" pos:column="32"/></operator><name pos:line="2695" pos:column="29">end_subject<pos:position pos:line="2695" pos:column="40"/></name></name> <operator pos:line="2695" pos:column="41">||<pos:position pos:line="2695" pos:column="43"/></operator> <operator pos:line="2695" pos:column="44">(<pos:position pos:line="2695" pos:column="45"/></operator><name><name pos:line="2695" pos:column="45">md<pos:position pos:line="2695" pos:column="47"/></name><operator pos:line="2695" pos:column="47">-&gt;<pos:position pos:line="2695" pos:column="52"/></operator><name pos:line="2695" pos:column="49">ctypes<pos:position pos:line="2695" pos:column="55"/></name><index pos:line="2695" pos:column="55">[<expr><operator pos:line="2695" pos:column="56">*<pos:position pos:line="2695" pos:column="57"/></operator><name pos:line="2695" pos:column="57">eptr<pos:position pos:line="2695" pos:column="61"/></name></expr>]<pos:position pos:line="2695" pos:column="62"/></index></name> <operator pos:line="2695" pos:column="63">&amp;<pos:position pos:line="2695" pos:column="68"/></operator> <name pos:line="2695" pos:column="65">ctype_space<pos:position pos:line="2695" pos:column="76"/></name><operator pos:line="2695" pos:column="76">)<pos:position pos:line="2695" pos:column="77"/></operator> <operator pos:line="2695" pos:column="78">!=<pos:position pos:line="2695" pos:column="80"/></operator> <literal type="number" pos:line="2695" pos:column="81">0<pos:position pos:line="2695" pos:column="82"/></literal></expr>)<pos:position pos:line="2695" pos:column="83"/></condition><then pos:line="2695" pos:column="83">
              <block type="pseudo"><break pos:line="2696" pos:column="15">break;<pos:position pos:line="2696" pos:column="21"/></break></block></then></if>
            <expr_stmt><expr><name pos:line="2697" pos:column="13">eptr<pos:position pos:line="2697" pos:column="17"/></name><operator pos:line="2697" pos:column="17">++<pos:position pos:line="2697" pos:column="19"/></operator></expr>;<pos:position pos:line="2697" pos:column="20"/></expr_stmt>
            }<pos:position pos:line="2698" pos:column="14"/></block></for>
          <break pos:line="2699" pos:column="11">break;<pos:position pos:line="2699" pos:column="17"/></break>

          <case pos:line="2701" pos:column="11">case <expr><name pos:line="2701" pos:column="16">OP_WHITESPACE<pos:position pos:line="2701" pos:column="29"/></name></expr>:<pos:position pos:line="2701" pos:column="30"/></case>
          <for pos:line="2702" pos:column="11">for <control pos:line="2702" pos:column="15">(<init><expr><name pos:line="2702" pos:column="16">i<pos:position pos:line="2702" pos:column="17"/></name> <operator pos:line="2702" pos:column="18">=<pos:position pos:line="2702" pos:column="19"/></operator> <name pos:line="2702" pos:column="20">min<pos:position pos:line="2702" pos:column="23"/></name></expr>;<pos:position pos:line="2702" pos:column="24"/></init> <condition><expr><name pos:line="2702" pos:column="25">i<pos:position pos:line="2702" pos:column="26"/></name> <operator pos:line="2702" pos:column="27">&lt;<pos:position pos:line="2702" pos:column="31"/></operator> <name pos:line="2702" pos:column="29">max<pos:position pos:line="2702" pos:column="32"/></name></expr>;<pos:position pos:line="2702" pos:column="33"/></condition> <incr><expr><name pos:line="2702" pos:column="34">i<pos:position pos:line="2702" pos:column="35"/></name><operator pos:line="2702" pos:column="35">++<pos:position pos:line="2702" pos:column="37"/></operator></expr></incr>)<pos:position pos:line="2702" pos:column="38"/></control>
            <block pos:line="2703" pos:column="13">{
            <if pos:line="2704" pos:column="13">if <condition pos:line="2704" pos:column="16">(<expr><name pos:line="2704" pos:column="17">eptr<pos:position pos:line="2704" pos:column="21"/></name> <operator pos:line="2704" pos:column="22">&gt;=<pos:position pos:line="2704" pos:column="27"/></operator> <name><name pos:line="2704" pos:column="25">md<pos:position pos:line="2704" pos:column="27"/></name><operator pos:line="2704" pos:column="27">-&gt;<pos:position pos:line="2704" pos:column="32"/></operator><name pos:line="2704" pos:column="29">end_subject<pos:position pos:line="2704" pos:column="40"/></name></name> <operator pos:line="2704" pos:column="41">||<pos:position pos:line="2704" pos:column="43"/></operator> <operator pos:line="2704" pos:column="44">(<pos:position pos:line="2704" pos:column="45"/></operator><name><name pos:line="2704" pos:column="45">md<pos:position pos:line="2704" pos:column="47"/></name><operator pos:line="2704" pos:column="47">-&gt;<pos:position pos:line="2704" pos:column="52"/></operator><name pos:line="2704" pos:column="49">ctypes<pos:position pos:line="2704" pos:column="55"/></name><index pos:line="2704" pos:column="55">[<expr><operator pos:line="2704" pos:column="56">*<pos:position pos:line="2704" pos:column="57"/></operator><name pos:line="2704" pos:column="57">eptr<pos:position pos:line="2704" pos:column="61"/></name></expr>]<pos:position pos:line="2704" pos:column="62"/></index></name> <operator pos:line="2704" pos:column="63">&amp;<pos:position pos:line="2704" pos:column="68"/></operator> <name pos:line="2704" pos:column="65">ctype_space<pos:position pos:line="2704" pos:column="76"/></name><operator pos:line="2704" pos:column="76">)<pos:position pos:line="2704" pos:column="77"/></operator> <operator pos:line="2704" pos:column="78">==<pos:position pos:line="2704" pos:column="80"/></operator> <literal type="number" pos:line="2704" pos:column="81">0<pos:position pos:line="2704" pos:column="82"/></literal></expr>)<pos:position pos:line="2704" pos:column="83"/></condition><then pos:line="2704" pos:column="83">
              <block type="pseudo"><break pos:line="2705" pos:column="15">break;<pos:position pos:line="2705" pos:column="21"/></break></block></then></if>
            <expr_stmt><expr><name pos:line="2706" pos:column="13">eptr<pos:position pos:line="2706" pos:column="17"/></name><operator pos:line="2706" pos:column="17">++<pos:position pos:line="2706" pos:column="19"/></operator></expr>;<pos:position pos:line="2706" pos:column="20"/></expr_stmt>
            }<pos:position pos:line="2707" pos:column="14"/></block></for>
          <break pos:line="2708" pos:column="11">break;<pos:position pos:line="2708" pos:column="17"/></break>

          <case pos:line="2710" pos:column="11">case <expr><name pos:line="2710" pos:column="16">OP_NOT_WORDCHAR<pos:position pos:line="2710" pos:column="31"/></name></expr>:<pos:position pos:line="2710" pos:column="32"/></case>
          <for pos:line="2711" pos:column="11">for <control pos:line="2711" pos:column="15">(<init><expr><name pos:line="2711" pos:column="16">i<pos:position pos:line="2711" pos:column="17"/></name> <operator pos:line="2711" pos:column="18">=<pos:position pos:line="2711" pos:column="19"/></operator> <name pos:line="2711" pos:column="20">min<pos:position pos:line="2711" pos:column="23"/></name></expr>;<pos:position pos:line="2711" pos:column="24"/></init> <condition><expr><name pos:line="2711" pos:column="25">i<pos:position pos:line="2711" pos:column="26"/></name> <operator pos:line="2711" pos:column="27">&lt;<pos:position pos:line="2711" pos:column="31"/></operator> <name pos:line="2711" pos:column="29">max<pos:position pos:line="2711" pos:column="32"/></name></expr>;<pos:position pos:line="2711" pos:column="33"/></condition> <incr><expr><name pos:line="2711" pos:column="34">i<pos:position pos:line="2711" pos:column="35"/></name><operator pos:line="2711" pos:column="35">++<pos:position pos:line="2711" pos:column="37"/></operator></expr></incr>)<pos:position pos:line="2711" pos:column="38"/></control>
            <block pos:line="2712" pos:column="13">{
            <if pos:line="2713" pos:column="13">if <condition pos:line="2713" pos:column="16">(<expr><name pos:line="2713" pos:column="17">eptr<pos:position pos:line="2713" pos:column="21"/></name> <operator pos:line="2713" pos:column="22">&gt;=<pos:position pos:line="2713" pos:column="27"/></operator> <name><name pos:line="2713" pos:column="25">md<pos:position pos:line="2713" pos:column="27"/></name><operator pos:line="2713" pos:column="27">-&gt;<pos:position pos:line="2713" pos:column="32"/></operator><name pos:line="2713" pos:column="29">end_subject<pos:position pos:line="2713" pos:column="40"/></name></name> <operator pos:line="2713" pos:column="41">||<pos:position pos:line="2713" pos:column="43"/></operator> <operator pos:line="2713" pos:column="44">(<pos:position pos:line="2713" pos:column="45"/></operator><name><name pos:line="2713" pos:column="45">md<pos:position pos:line="2713" pos:column="47"/></name><operator pos:line="2713" pos:column="47">-&gt;<pos:position pos:line="2713" pos:column="52"/></operator><name pos:line="2713" pos:column="49">ctypes<pos:position pos:line="2713" pos:column="55"/></name><index pos:line="2713" pos:column="55">[<expr><operator pos:line="2713" pos:column="56">*<pos:position pos:line="2713" pos:column="57"/></operator><name pos:line="2713" pos:column="57">eptr<pos:position pos:line="2713" pos:column="61"/></name></expr>]<pos:position pos:line="2713" pos:column="62"/></index></name> <operator pos:line="2713" pos:column="63">&amp;<pos:position pos:line="2713" pos:column="68"/></operator> <name pos:line="2713" pos:column="65">ctype_word<pos:position pos:line="2713" pos:column="75"/></name><operator pos:line="2713" pos:column="75">)<pos:position pos:line="2713" pos:column="76"/></operator> <operator pos:line="2713" pos:column="77">!=<pos:position pos:line="2713" pos:column="79"/></operator> <literal type="number" pos:line="2713" pos:column="80">0<pos:position pos:line="2713" pos:column="81"/></literal></expr>)<pos:position pos:line="2713" pos:column="82"/></condition><then pos:line="2713" pos:column="82">
              <block type="pseudo"><break pos:line="2714" pos:column="15">break;<pos:position pos:line="2714" pos:column="21"/></break></block></then></if>
            <expr_stmt><expr><name pos:line="2715" pos:column="13">eptr<pos:position pos:line="2715" pos:column="17"/></name><operator pos:line="2715" pos:column="17">++<pos:position pos:line="2715" pos:column="19"/></operator></expr>;<pos:position pos:line="2715" pos:column="20"/></expr_stmt>
            }<pos:position pos:line="2716" pos:column="14"/></block></for>
          <break pos:line="2717" pos:column="11">break;<pos:position pos:line="2717" pos:column="17"/></break>

          <case pos:line="2719" pos:column="11">case <expr><name pos:line="2719" pos:column="16">OP_WORDCHAR<pos:position pos:line="2719" pos:column="27"/></name></expr>:<pos:position pos:line="2719" pos:column="28"/></case>
          <for pos:line="2720" pos:column="11">for <control pos:line="2720" pos:column="15">(<init><expr><name pos:line="2720" pos:column="16">i<pos:position pos:line="2720" pos:column="17"/></name> <operator pos:line="2720" pos:column="18">=<pos:position pos:line="2720" pos:column="19"/></operator> <name pos:line="2720" pos:column="20">min<pos:position pos:line="2720" pos:column="23"/></name></expr>;<pos:position pos:line="2720" pos:column="24"/></init> <condition><expr><name pos:line="2720" pos:column="25">i<pos:position pos:line="2720" pos:column="26"/></name> <operator pos:line="2720" pos:column="27">&lt;<pos:position pos:line="2720" pos:column="31"/></operator> <name pos:line="2720" pos:column="29">max<pos:position pos:line="2720" pos:column="32"/></name></expr>;<pos:position pos:line="2720" pos:column="33"/></condition> <incr><expr><name pos:line="2720" pos:column="34">i<pos:position pos:line="2720" pos:column="35"/></name><operator pos:line="2720" pos:column="35">++<pos:position pos:line="2720" pos:column="37"/></operator></expr></incr>)<pos:position pos:line="2720" pos:column="38"/></control>
            <block pos:line="2721" pos:column="13">{
            <if pos:line="2722" pos:column="13">if <condition pos:line="2722" pos:column="16">(<expr><name pos:line="2722" pos:column="17">eptr<pos:position pos:line="2722" pos:column="21"/></name> <operator pos:line="2722" pos:column="22">&gt;=<pos:position pos:line="2722" pos:column="27"/></operator> <name><name pos:line="2722" pos:column="25">md<pos:position pos:line="2722" pos:column="27"/></name><operator pos:line="2722" pos:column="27">-&gt;<pos:position pos:line="2722" pos:column="32"/></operator><name pos:line="2722" pos:column="29">end_subject<pos:position pos:line="2722" pos:column="40"/></name></name> <operator pos:line="2722" pos:column="41">||<pos:position pos:line="2722" pos:column="43"/></operator> <operator pos:line="2722" pos:column="44">(<pos:position pos:line="2722" pos:column="45"/></operator><name><name pos:line="2722" pos:column="45">md<pos:position pos:line="2722" pos:column="47"/></name><operator pos:line="2722" pos:column="47">-&gt;<pos:position pos:line="2722" pos:column="52"/></operator><name pos:line="2722" pos:column="49">ctypes<pos:position pos:line="2722" pos:column="55"/></name><index pos:line="2722" pos:column="55">[<expr><operator pos:line="2722" pos:column="56">*<pos:position pos:line="2722" pos:column="57"/></operator><name pos:line="2722" pos:column="57">eptr<pos:position pos:line="2722" pos:column="61"/></name></expr>]<pos:position pos:line="2722" pos:column="62"/></index></name> <operator pos:line="2722" pos:column="63">&amp;<pos:position pos:line="2722" pos:column="68"/></operator> <name pos:line="2722" pos:column="65">ctype_word<pos:position pos:line="2722" pos:column="75"/></name><operator pos:line="2722" pos:column="75">)<pos:position pos:line="2722" pos:column="76"/></operator> <operator pos:line="2722" pos:column="77">==<pos:position pos:line="2722" pos:column="79"/></operator> <literal type="number" pos:line="2722" pos:column="80">0<pos:position pos:line="2722" pos:column="81"/></literal></expr>)<pos:position pos:line="2722" pos:column="82"/></condition><then pos:line="2722" pos:column="82">
              <block type="pseudo"><break pos:line="2723" pos:column="15">break;<pos:position pos:line="2723" pos:column="21"/></break></block></then></if>
            <expr_stmt><expr><name pos:line="2724" pos:column="13">eptr<pos:position pos:line="2724" pos:column="17"/></name><operator pos:line="2724" pos:column="17">++<pos:position pos:line="2724" pos:column="19"/></operator></expr>;<pos:position pos:line="2724" pos:column="20"/></expr_stmt>
            }<pos:position pos:line="2725" pos:column="14"/></block></for>
          <break pos:line="2726" pos:column="11">break;<pos:position pos:line="2726" pos:column="17"/></break>

          <default pos:line="2728" pos:column="11">default:<pos:position pos:line="2728" pos:column="19"/></default>
          <expr_stmt><expr><call><name pos:line="2729" pos:column="11">RRETURN<pos:position pos:line="2729" pos:column="18"/></name><argument_list pos:line="2729" pos:column="18">(<argument><expr><name pos:line="2729" pos:column="19">PCRE_ERROR_INTERNAL<pos:position pos:line="2729" pos:column="38"/></name></expr></argument>)<pos:position pos:line="2729" pos:column="39"/></argument_list></call></expr>;<pos:position pos:line="2729" pos:column="40"/></expr_stmt>
          }<pos:position pos:line="2730" pos:column="12"/></block></switch>

        <comment type="block" pos:line="2732" pos:column="9">/* eptr is now past the end of the maximum run */</comment>

        <while pos:line="2734" pos:column="9">while <condition pos:line="2734" pos:column="15">(<expr><name pos:line="2734" pos:column="16">eptr<pos:position pos:line="2734" pos:column="20"/></name> <operator pos:line="2734" pos:column="21">&gt;=<pos:position pos:line="2734" pos:column="26"/></operator> <name pos:line="2734" pos:column="24">pp<pos:position pos:line="2734" pos:column="26"/></name></expr>)<pos:position pos:line="2734" pos:column="27"/></condition>
          <block pos:line="2735" pos:column="11">{
          <expr_stmt><expr><call><name pos:line="2736" pos:column="11">RMATCH<pos:position pos:line="2736" pos:column="17"/></name><argument_list pos:line="2736" pos:column="17">(<argument><expr><name pos:line="2736" pos:column="18">rrc<pos:position pos:line="2736" pos:column="21"/></name></expr></argument>, <argument><expr><name pos:line="2736" pos:column="23">eptr<pos:position pos:line="2736" pos:column="27"/></name></expr></argument>, <argument><expr><name pos:line="2736" pos:column="29">ecode<pos:position pos:line="2736" pos:column="34"/></name></expr></argument>, <argument><expr><name pos:line="2736" pos:column="36">offset_top<pos:position pos:line="2736" pos:column="46"/></name></expr></argument>, <argument><expr><name pos:line="2736" pos:column="48">md<pos:position pos:line="2736" pos:column="50"/></name></expr></argument>, <argument><expr><name pos:line="2736" pos:column="52">ims<pos:position pos:line="2736" pos:column="55"/></name></expr></argument>, <argument><expr><name pos:line="2736" pos:column="57">eptrb<pos:position pos:line="2736" pos:column="62"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="2736" pos:column="64">0<pos:position pos:line="2736" pos:column="65"/></literal></expr></argument>)<pos:position pos:line="2736" pos:column="66"/></argument_list></call></expr>;<pos:position pos:line="2736" pos:column="67"/></expr_stmt>
          <expr_stmt><expr><name pos:line="2737" pos:column="11">eptr<pos:position pos:line="2737" pos:column="15"/></name><operator pos:line="2737" pos:column="15">--<pos:position pos:line="2737" pos:column="17"/></operator></expr>;<pos:position pos:line="2737" pos:column="18"/></expr_stmt>
          <if pos:line="2738" pos:column="11">if <condition pos:line="2738" pos:column="14">(<expr><name pos:line="2738" pos:column="15">rrc<pos:position pos:line="2738" pos:column="18"/></name> <operator pos:line="2738" pos:column="19">!=<pos:position pos:line="2738" pos:column="21"/></operator> <name pos:line="2738" pos:column="22">MATCH_NOMATCH<pos:position pos:line="2738" pos:column="35"/></name></expr>)<pos:position pos:line="2738" pos:column="36"/></condition><then pos:line="2738" pos:column="36"> <block type="pseudo"><expr_stmt><expr><call><name pos:line="2738" pos:column="37">RRETURN<pos:position pos:line="2738" pos:column="44"/></name><argument_list pos:line="2738" pos:column="44">(<argument><expr><name pos:line="2738" pos:column="45">rrc<pos:position pos:line="2738" pos:column="48"/></name></expr></argument>)<pos:position pos:line="2738" pos:column="49"/></argument_list></call></expr>;<pos:position pos:line="2738" pos:column="50"/></expr_stmt></block></then></if>
          }<pos:position pos:line="2739" pos:column="12"/></block></while>
        }<pos:position pos:line="2740" pos:column="10"/></block></else></if>

      <comment type="block" pos:line="2742" pos:column="7">/* Get here if we can't make it match with any permitted repetitions */</comment>

      <expr_stmt><expr><call><name pos:line="2744" pos:column="7">RRETURN<pos:position pos:line="2744" pos:column="14"/></name><argument_list pos:line="2744" pos:column="14">(<argument><expr><name pos:line="2744" pos:column="15">MATCH_NOMATCH<pos:position pos:line="2744" pos:column="28"/></name></expr></argument>)<pos:position pos:line="2744" pos:column="29"/></argument_list></call></expr>;<pos:position pos:line="2744" pos:column="30"/></expr_stmt>
      }<pos:position pos:line="2745" pos:column="8"/></block></else></if>
    <comment type="block" pos:line="2746" pos:column="5">/* Control never gets here */</comment>

    <comment type="block" pos:line="2748" pos:column="5">/* There's been some horrible disaster. Since all codes &gt; OP_BRA are
    for capturing brackets, and there shouldn't be any gaps between 0 and
    OP_BRA, arrival here can only mean there is something seriously wrong
    in the code above or the OP_xxx definitions. */</comment>

    <default pos:line="2753" pos:column="5">default:<pos:position pos:line="2753" pos:column="13"/></default>
    <expr_stmt><expr><call><name pos:line="2754" pos:column="5">DPRINTF<pos:position pos:line="2754" pos:column="12"/></name><argument_list pos:line="2754" pos:column="12">(<argument><expr><operator pos:line="2754" pos:column="13">(<pos:position pos:line="2754" pos:column="14"/></operator><literal type="string" pos:line="2754" pos:column="14">"Unknown opcode %d\n"<pos:position pos:line="2754" pos:column="35"/></literal><operator pos:line="2754" pos:column="35">,<pos:position pos:line="2754" pos:column="36"/></operator> <operator pos:line="2754" pos:column="37">*<pos:position pos:line="2754" pos:column="38"/></operator><name pos:line="2754" pos:column="38">ecode<pos:position pos:line="2754" pos:column="43"/></name><operator pos:line="2754" pos:column="43">)<pos:position pos:line="2754" pos:column="44"/></operator></expr></argument>)<pos:position pos:line="2754" pos:column="45"/></argument_list></call></expr>;<pos:position pos:line="2754" pos:column="46"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="2755" pos:column="5">RRETURN<pos:position pos:line="2755" pos:column="12"/></name><argument_list pos:line="2755" pos:column="12">(<argument><expr><name pos:line="2755" pos:column="13">PCRE_ERROR_UNKNOWN_NODE<pos:position pos:line="2755" pos:column="36"/></name></expr></argument>)<pos:position pos:line="2755" pos:column="37"/></argument_list></call></expr>;<pos:position pos:line="2755" pos:column="38"/></expr_stmt>
    }<pos:position pos:line="2756" pos:column="6"/></block></switch>

  <comment type="block" pos:line="2758" pos:column="3">/* Do not stick any code in here without much thought; it is assumed
  that "continue" in the code above comes out to here to repeat the main
  loop. */</comment>

  }<pos:position pos:line="2762" pos:column="4"/></block></for>             <comment type="block" pos:line="2762" pos:column="17">/* End of main loop */</comment>
<comment type="block" pos:line="2763" pos:column="1">/* Control never reaches here */</comment>
}<pos:position pos:line="2764" pos:column="2"/></block></function></unit>

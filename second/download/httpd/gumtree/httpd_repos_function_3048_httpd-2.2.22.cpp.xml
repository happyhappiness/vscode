<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/httpd/gumtree/httpd_repos_function_3048_httpd-2.2.22.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">apr_status_t<pos:position pos:line="1" pos:column="20"/></name></type> <name pos:line="1" pos:column="21">crypto_init<pos:position pos:line="1" pos:column="32"/></name><parameter_list pos:line="1" pos:column="32">(<parameter><decl><type><name pos:line="1" pos:column="33">apr_pool_t<pos:position pos:line="1" pos:column="43"/></name> <modifier pos:line="1" pos:column="44">*<pos:position pos:line="1" pos:column="45"/></modifier></type><name pos:line="1" pos:column="45">pool<pos:position pos:line="1" pos:column="49"/></name></decl></parameter>, <parameter><decl><type><specifier pos:line="1" pos:column="51">const<pos:position pos:line="1" pos:column="56"/></specifier> <name pos:line="1" pos:column="57">char<pos:position pos:line="1" pos:column="61"/></name> <modifier pos:line="1" pos:column="62">*<pos:position pos:line="1" pos:column="63"/></modifier></type><name pos:line="1" pos:column="63">params<pos:position pos:line="1" pos:column="69"/></name></decl></parameter>, <parameter><decl><type><name pos:line="1" pos:column="71">int<pos:position pos:line="1" pos:column="74"/></name> <modifier pos:line="1" pos:column="75">*<pos:position pos:line="1" pos:column="76"/></modifier></type><name pos:line="1" pos:column="76">rc<pos:position pos:line="1" pos:column="78"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="79"/></parameter_list>
<block pos:line="2" pos:column="1">{
    <decl_stmt><decl><type><name pos:line="3" pos:column="5">SECStatus<pos:position pos:line="3" pos:column="14"/></name></type> <name pos:line="3" pos:column="15">s<pos:position pos:line="3" pos:column="16"/></name></decl>;<pos:position pos:line="3" pos:column="17"/></decl_stmt>
    <decl_stmt><decl><type><specifier pos:line="4" pos:column="5">const<pos:position pos:line="4" pos:column="10"/></specifier> <name pos:line="4" pos:column="11">char<pos:position pos:line="4" pos:column="15"/></name> <modifier pos:line="4" pos:column="16">*<pos:position pos:line="4" pos:column="17"/></modifier></type><name pos:line="4" pos:column="17">dir<pos:position pos:line="4" pos:column="20"/></name> <init pos:line="4" pos:column="21">= <expr><name pos:line="4" pos:column="23">NULL<pos:position pos:line="4" pos:column="27"/></name></expr></init></decl>;<pos:position pos:line="4" pos:column="28"/></decl_stmt>
    <decl_stmt><decl><type><specifier pos:line="5" pos:column="5">const<pos:position pos:line="5" pos:column="10"/></specifier> <name pos:line="5" pos:column="11">char<pos:position pos:line="5" pos:column="15"/></name> <modifier pos:line="5" pos:column="16">*<pos:position pos:line="5" pos:column="17"/></modifier></type><name pos:line="5" pos:column="17">keyPrefix<pos:position pos:line="5" pos:column="26"/></name> <init pos:line="5" pos:column="27">= <expr><name pos:line="5" pos:column="29">NULL<pos:position pos:line="5" pos:column="33"/></name></expr></init></decl>;<pos:position pos:line="5" pos:column="34"/></decl_stmt>
    <decl_stmt><decl><type><specifier pos:line="6" pos:column="5">const<pos:position pos:line="6" pos:column="10"/></specifier> <name pos:line="6" pos:column="11">char<pos:position pos:line="6" pos:column="15"/></name> <modifier pos:line="6" pos:column="16">*<pos:position pos:line="6" pos:column="17"/></modifier></type><name pos:line="6" pos:column="17">certPrefix<pos:position pos:line="6" pos:column="27"/></name> <init pos:line="6" pos:column="28">= <expr><name pos:line="6" pos:column="30">NULL<pos:position pos:line="6" pos:column="34"/></name></expr></init></decl>;<pos:position pos:line="6" pos:column="35"/></decl_stmt>
    <decl_stmt><decl><type><specifier pos:line="7" pos:column="5">const<pos:position pos:line="7" pos:column="10"/></specifier> <name pos:line="7" pos:column="11">char<pos:position pos:line="7" pos:column="15"/></name> <modifier pos:line="7" pos:column="16">*<pos:position pos:line="7" pos:column="17"/></modifier></type><name pos:line="7" pos:column="17">secmod<pos:position pos:line="7" pos:column="23"/></name> <init pos:line="7" pos:column="24">= <expr><name pos:line="7" pos:column="26">NULL<pos:position pos:line="7" pos:column="30"/></name></expr></init></decl>;<pos:position pos:line="7" pos:column="31"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="8" pos:column="5">int<pos:position pos:line="8" pos:column="8"/></name></type> <name pos:line="8" pos:column="9">noinit<pos:position pos:line="8" pos:column="15"/></name> <init pos:line="8" pos:column="16">= <expr><literal type="number" pos:line="8" pos:column="18">0<pos:position pos:line="8" pos:column="19"/></literal></expr></init></decl>;<pos:position pos:line="8" pos:column="20"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="9" pos:column="5">PRUint32<pos:position pos:line="9" pos:column="13"/></name></type> <name pos:line="9" pos:column="14">flags<pos:position pos:line="9" pos:column="19"/></name> <init pos:line="9" pos:column="20">= <expr><literal type="number" pos:line="9" pos:column="22">0<pos:position pos:line="9" pos:column="23"/></literal></expr></init></decl>;<pos:position pos:line="9" pos:column="24"/></decl_stmt>

    <struct pos:line="11" pos:column="5">struct <block pos:line="11" pos:column="12">{<public type="default" pos:line="11" pos:column="13">
        <decl_stmt><decl><type><specifier pos:line="12" pos:column="9">const<pos:position pos:line="12" pos:column="14"/></specifier> <name pos:line="12" pos:column="15">char<pos:position pos:line="12" pos:column="19"/></name> <modifier pos:line="12" pos:column="20">*<pos:position pos:line="12" pos:column="21"/></modifier></type><name pos:line="12" pos:column="21">field<pos:position pos:line="12" pos:column="26"/></name></decl>;<pos:position pos:line="12" pos:column="27"/></decl_stmt>
        <decl_stmt><decl><type><specifier pos:line="13" pos:column="9">const<pos:position pos:line="13" pos:column="14"/></specifier> <name pos:line="13" pos:column="15">char<pos:position pos:line="13" pos:column="19"/></name> <modifier pos:line="13" pos:column="20">*<pos:position pos:line="13" pos:column="21"/></modifier></type><name pos:line="13" pos:column="21">value<pos:position pos:line="13" pos:column="26"/></name></decl>;<pos:position pos:line="13" pos:column="27"/></decl_stmt>
        <decl_stmt><decl><type><name pos:line="14" pos:column="9">int<pos:position pos:line="14" pos:column="12"/></name></type> <name pos:line="14" pos:column="13">set<pos:position pos:line="14" pos:column="16"/></name></decl>;<pos:position pos:line="14" pos:column="17"/></decl_stmt>
    <pos:position pos:line="15" pos:column="5"/></public>}<pos:position pos:line="15" pos:column="6"/></block> <decl><name><name pos:line="15" pos:column="7">fields<pos:position pos:line="15" pos:column="13"/></name><index pos:line="15" pos:column="13">[]<pos:position pos:line="15" pos:column="15"/></index></name> <init pos:line="15" pos:column="16">= <expr><block pos:line="15" pos:column="18">{
        <expr><block pos:line="16" pos:column="9">{ <expr><literal type="string" pos:line="16" pos:column="11">"dir"<pos:position pos:line="16" pos:column="16"/></literal></expr>, <expr><name pos:line="16" pos:column="18">NULL<pos:position pos:line="16" pos:column="22"/></name></expr>, <expr><literal type="number" pos:line="16" pos:column="24">0<pos:position pos:line="16" pos:column="25"/></literal></expr> }<pos:position pos:line="16" pos:column="27"/></block></expr>,
        <expr><block pos:line="17" pos:column="9">{ <expr><literal type="string" pos:line="17" pos:column="11">"key3"<pos:position pos:line="17" pos:column="17"/></literal></expr>, <expr><name pos:line="17" pos:column="19">NULL<pos:position pos:line="17" pos:column="23"/></name></expr>, <expr><literal type="number" pos:line="17" pos:column="25">0<pos:position pos:line="17" pos:column="26"/></literal></expr> }<pos:position pos:line="17" pos:column="28"/></block></expr>,
        <expr><block pos:line="18" pos:column="9">{ <expr><literal type="string" pos:line="18" pos:column="11">"cert7"<pos:position pos:line="18" pos:column="18"/></literal></expr>, <expr><name pos:line="18" pos:column="20">NULL<pos:position pos:line="18" pos:column="24"/></name></expr>, <expr><literal type="number" pos:line="18" pos:column="26">0<pos:position pos:line="18" pos:column="27"/></literal></expr> }<pos:position pos:line="18" pos:column="29"/></block></expr>,
        <expr><block pos:line="19" pos:column="9">{ <expr><literal type="string" pos:line="19" pos:column="11">"secmod"<pos:position pos:line="19" pos:column="19"/></literal></expr>, <expr><name pos:line="19" pos:column="21">NULL<pos:position pos:line="19" pos:column="25"/></name></expr>, <expr><literal type="number" pos:line="19" pos:column="27">0<pos:position pos:line="19" pos:column="28"/></literal></expr> }<pos:position pos:line="19" pos:column="30"/></block></expr>,
        <expr><block pos:line="20" pos:column="9">{ <expr><literal type="string" pos:line="20" pos:column="11">"noinit"<pos:position pos:line="20" pos:column="19"/></literal></expr>, <expr><name pos:line="20" pos:column="21">NULL<pos:position pos:line="20" pos:column="25"/></name></expr>, <expr><literal type="number" pos:line="20" pos:column="27">0<pos:position pos:line="20" pos:column="28"/></literal></expr> }<pos:position pos:line="20" pos:column="30"/></block></expr>,
        <expr><block pos:line="21" pos:column="9">{ <expr><name pos:line="21" pos:column="11">NULL<pos:position pos:line="21" pos:column="15"/></name></expr>, <expr><name pos:line="21" pos:column="17">NULL<pos:position pos:line="21" pos:column="21"/></name></expr>, <expr><literal type="number" pos:line="21" pos:column="23">0<pos:position pos:line="21" pos:column="24"/></literal></expr> }<pos:position pos:line="21" pos:column="26"/></block></expr>
    }<pos:position pos:line="22" pos:column="6"/></block></expr></init></decl>;<pos:position pos:line="22" pos:column="7"/></struct>
    <decl_stmt><decl><type><specifier pos:line="23" pos:column="5">const<pos:position pos:line="23" pos:column="10"/></specifier> <name pos:line="23" pos:column="11">char<pos:position pos:line="23" pos:column="15"/></name> <modifier pos:line="23" pos:column="16">*<pos:position pos:line="23" pos:column="17"/></modifier></type><name pos:line="23" pos:column="17">ptr<pos:position pos:line="23" pos:column="20"/></name></decl>;<pos:position pos:line="23" pos:column="21"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="24" pos:column="5">size_t<pos:position pos:line="24" pos:column="11"/></name></type> <name pos:line="24" pos:column="12">klen<pos:position pos:line="24" pos:column="16"/></name></decl>;<pos:position pos:line="24" pos:column="17"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="25" pos:column="5">char<pos:position pos:line="25" pos:column="9"/></name> <modifier pos:line="25" pos:column="10">*<pos:position pos:line="25" pos:column="11"/></modifier><modifier pos:line="25" pos:column="11">*<pos:position pos:line="25" pos:column="12"/></modifier></type><name pos:line="25" pos:column="12">elts<pos:position pos:line="25" pos:column="16"/></name> <init pos:line="25" pos:column="17">= <expr><name pos:line="25" pos:column="19">NULL<pos:position pos:line="25" pos:column="23"/></name></expr></init></decl>;<pos:position pos:line="25" pos:column="24"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="26" pos:column="5">char<pos:position pos:line="26" pos:column="9"/></name> <modifier pos:line="26" pos:column="10">*<pos:position pos:line="26" pos:column="11"/></modifier></type><name pos:line="26" pos:column="11">elt<pos:position pos:line="26" pos:column="14"/></name></decl>;<pos:position pos:line="26" pos:column="15"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="27" pos:column="5">int<pos:position pos:line="27" pos:column="8"/></name></type> <name pos:line="27" pos:column="9">i<pos:position pos:line="27" pos:column="10"/></name> <init pos:line="27" pos:column="11">= <expr><literal type="number" pos:line="27" pos:column="13">0<pos:position pos:line="27" pos:column="14"/></literal></expr></init></decl>, <decl><type ref="prev"/><name pos:line="27" pos:column="16">j<pos:position pos:line="27" pos:column="17"/></name></decl>;<pos:position pos:line="27" pos:column="18"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="28" pos:column="5">apr_status_t<pos:position pos:line="28" pos:column="17"/></name></type> <name pos:line="28" pos:column="18">status<pos:position pos:line="28" pos:column="24"/></name></decl>;<pos:position pos:line="28" pos:column="25"/></decl_stmt>

    <if pos:line="30" pos:column="5">if <condition pos:line="30" pos:column="8">(<expr><name pos:line="30" pos:column="9">params<pos:position pos:line="30" pos:column="15"/></name></expr>)<pos:position pos:line="30" pos:column="16"/></condition><then pos:line="30" pos:column="16"> <block pos:line="30" pos:column="17">{
        <if pos:line="31" pos:column="9">if <condition pos:line="31" pos:column="12">(<expr><name pos:line="31" pos:column="13">APR_SUCCESS<pos:position pos:line="31" pos:column="24"/></name> <operator pos:line="31" pos:column="25">!=<pos:position pos:line="31" pos:column="27"/></operator> <operator pos:line="31" pos:column="28">(<pos:position pos:line="31" pos:column="29"/></operator><name pos:line="31" pos:column="29">status<pos:position pos:line="31" pos:column="35"/></name> <operator pos:line="31" pos:column="36">=<pos:position pos:line="31" pos:column="37"/></operator> <call><name pos:line="31" pos:column="38">apr_tokenize_to_argv<pos:position pos:line="31" pos:column="58"/></name><argument_list pos:line="31" pos:column="58">(<argument><expr><name pos:line="31" pos:column="59">params<pos:position pos:line="31" pos:column="65"/></name></expr></argument>, <argument><expr><operator pos:line="31" pos:column="67">&amp;<pos:position pos:line="31" pos:column="72"/></operator><name pos:line="31" pos:column="68">elts<pos:position pos:line="31" pos:column="72"/></name></expr></argument>, <argument><expr><name pos:line="31" pos:column="74">pool<pos:position pos:line="31" pos:column="78"/></name></expr></argument>)<pos:position pos:line="31" pos:column="79"/></argument_list></call><operator pos:line="31" pos:column="79">)<pos:position pos:line="31" pos:column="80"/></operator></expr>)<pos:position pos:line="31" pos:column="81"/></condition><then pos:line="31" pos:column="81"> <block pos:line="31" pos:column="82">{
            <return pos:line="32" pos:column="13">return <expr><name pos:line="32" pos:column="20">status<pos:position pos:line="32" pos:column="26"/></name></expr>;<pos:position pos:line="32" pos:column="27"/></return>
        }<pos:position pos:line="33" pos:column="10"/></block></then></if>
        <while pos:line="34" pos:column="9">while <condition pos:line="34" pos:column="15">(<expr><operator pos:line="34" pos:column="16">(<pos:position pos:line="34" pos:column="17"/></operator><name pos:line="34" pos:column="17">elt<pos:position pos:line="34" pos:column="20"/></name> <operator pos:line="34" pos:column="21">=<pos:position pos:line="34" pos:column="22"/></operator> <name><name pos:line="34" pos:column="23">elts<pos:position pos:line="34" pos:column="27"/></name><index pos:line="34" pos:column="27">[<expr><name pos:line="34" pos:column="28">i<pos:position pos:line="34" pos:column="29"/></name></expr>]<pos:position pos:line="34" pos:column="30"/></index></name><operator pos:line="34" pos:column="30">)<pos:position pos:line="34" pos:column="31"/></operator></expr>)<pos:position pos:line="34" pos:column="32"/></condition> <block pos:line="34" pos:column="33">{
            <expr_stmt><expr><name pos:line="35" pos:column="13">ptr<pos:position pos:line="35" pos:column="16"/></name> <operator pos:line="35" pos:column="17">=<pos:position pos:line="35" pos:column="18"/></operator> <call><name pos:line="35" pos:column="19">strchr<pos:position pos:line="35" pos:column="25"/></name><argument_list pos:line="35" pos:column="25">(<argument><expr><name pos:line="35" pos:column="26">elt<pos:position pos:line="35" pos:column="29"/></name></expr></argument>, <argument><expr><literal type="char" pos:line="35" pos:column="31">'='<pos:position pos:line="35" pos:column="34"/></literal></expr></argument>)<pos:position pos:line="35" pos:column="35"/></argument_list></call></expr>;<pos:position pos:line="35" pos:column="36"/></expr_stmt>
            <if pos:line="36" pos:column="13">if <condition pos:line="36" pos:column="16">(<expr><name pos:line="36" pos:column="17">ptr<pos:position pos:line="36" pos:column="20"/></name></expr>)<pos:position pos:line="36" pos:column="21"/></condition><then pos:line="36" pos:column="21"> <block pos:line="36" pos:column="22">{
                <for pos:line="37" pos:column="17">for <control pos:line="37" pos:column="21">(<init><expr><name pos:line="37" pos:column="22">klen<pos:position pos:line="37" pos:column="26"/></name> <operator pos:line="37" pos:column="27">=<pos:position pos:line="37" pos:column="28"/></operator> <name pos:line="37" pos:column="29">ptr<pos:position pos:line="37" pos:column="32"/></name> <operator pos:line="37" pos:column="33">-<pos:position pos:line="37" pos:column="34"/></operator> <name pos:line="37" pos:column="35">elt<pos:position pos:line="37" pos:column="38"/></name></expr>;<pos:position pos:line="37" pos:column="39"/></init> <condition><expr><name pos:line="37" pos:column="40">klen<pos:position pos:line="37" pos:column="44"/></name> <operator pos:line="37" pos:column="45">&amp;&amp;<pos:position pos:line="37" pos:column="55"/></operator> <call><name pos:line="37" pos:column="48">apr_isspace<pos:position pos:line="37" pos:column="59"/></name><argument_list pos:line="37" pos:column="59">(<argument><expr><name><name pos:line="37" pos:column="60">elt<pos:position pos:line="37" pos:column="63"/></name><index pos:line="37" pos:column="63">[<expr><name pos:line="37" pos:column="64">klen<pos:position pos:line="37" pos:column="68"/></name> <operator pos:line="37" pos:column="69">-<pos:position pos:line="37" pos:column="70"/></operator> <literal type="number" pos:line="37" pos:column="71">1<pos:position pos:line="37" pos:column="72"/></literal></expr>]<pos:position pos:line="37" pos:column="73"/></index></name></expr></argument>)<pos:position pos:line="37" pos:column="74"/></argument_list></call></expr>;<pos:position pos:line="37" pos:column="75"/></condition> <incr><expr><operator pos:line="37" pos:column="76">--<pos:position pos:line="37" pos:column="78"/></operator><name pos:line="37" pos:column="78">klen<pos:position pos:line="37" pos:column="82"/></name></expr></incr>)<pos:position pos:line="37" pos:column="83"/></control>
                    <block type="pseudo"><empty_stmt pos:line="38" pos:column="21">;<pos:position pos:line="38" pos:column="22"/></empty_stmt></block></for>
                <expr_stmt><expr><name pos:line="39" pos:column="17">ptr<pos:position pos:line="39" pos:column="20"/></name><operator pos:line="39" pos:column="20">++<pos:position pos:line="39" pos:column="22"/></operator></expr>;<pos:position pos:line="39" pos:column="23"/></expr_stmt>
            }<pos:position pos:line="40" pos:column="14"/></block></then>
            <else pos:line="41" pos:column="13">else <block pos:line="41" pos:column="18">{
                <for pos:line="42" pos:column="17">for <control pos:line="42" pos:column="21">(<init><expr><name pos:line="42" pos:column="22">klen<pos:position pos:line="42" pos:column="26"/></name> <operator pos:line="42" pos:column="27">=<pos:position pos:line="42" pos:column="28"/></operator> <call><name pos:line="42" pos:column="29">strlen<pos:position pos:line="42" pos:column="35"/></name><argument_list pos:line="42" pos:column="35">(<argument><expr><name pos:line="42" pos:column="36">elt<pos:position pos:line="42" pos:column="39"/></name></expr></argument>)<pos:position pos:line="42" pos:column="40"/></argument_list></call></expr>;<pos:position pos:line="42" pos:column="41"/></init> <condition><expr><name pos:line="42" pos:column="42">klen<pos:position pos:line="42" pos:column="46"/></name> <operator pos:line="42" pos:column="47">&amp;&amp;<pos:position pos:line="42" pos:column="57"/></operator> <call><name pos:line="42" pos:column="50">apr_isspace<pos:position pos:line="42" pos:column="61"/></name><argument_list pos:line="42" pos:column="61">(<argument><expr><name><name pos:line="42" pos:column="62">elt<pos:position pos:line="42" pos:column="65"/></name><index pos:line="42" pos:column="65">[<expr><name pos:line="42" pos:column="66">klen<pos:position pos:line="42" pos:column="70"/></name> <operator pos:line="42" pos:column="71">-<pos:position pos:line="42" pos:column="72"/></operator> <literal type="number" pos:line="42" pos:column="73">1<pos:position pos:line="42" pos:column="74"/></literal></expr>]<pos:position pos:line="42" pos:column="75"/></index></name></expr></argument>)<pos:position pos:line="42" pos:column="76"/></argument_list></call></expr>;<pos:position pos:line="42" pos:column="77"/></condition> <incr><expr><operator pos:line="42" pos:column="78">--<pos:position pos:line="42" pos:column="80"/></operator><name pos:line="42" pos:column="80">klen<pos:position pos:line="42" pos:column="84"/></name></expr></incr>)<pos:position pos:line="42" pos:column="85"/></control>
                    <block type="pseudo"><empty_stmt pos:line="43" pos:column="21">;<pos:position pos:line="43" pos:column="22"/></empty_stmt></block></for>
            }<pos:position pos:line="44" pos:column="14"/></block></else></if>
            <expr_stmt><expr><name><name pos:line="45" pos:column="13">elt<pos:position pos:line="45" pos:column="16"/></name><index pos:line="45" pos:column="16">[<expr><name pos:line="45" pos:column="17">klen<pos:position pos:line="45" pos:column="21"/></name></expr>]<pos:position pos:line="45" pos:column="22"/></index></name> <operator pos:line="45" pos:column="23">=<pos:position pos:line="45" pos:column="24"/></operator> <literal type="number" pos:line="45" pos:column="25">0<pos:position pos:line="45" pos:column="26"/></literal></expr>;<pos:position pos:line="45" pos:column="27"/></expr_stmt>

            <for pos:line="47" pos:column="13">for <control pos:line="47" pos:column="17">(<init><expr><name pos:line="47" pos:column="18">j<pos:position pos:line="47" pos:column="19"/></name> <operator pos:line="47" pos:column="20">=<pos:position pos:line="47" pos:column="21"/></operator> <literal type="number" pos:line="47" pos:column="22">0<pos:position pos:line="47" pos:column="23"/></literal></expr>;<pos:position pos:line="47" pos:column="24"/></init> <condition><expr><name><name pos:line="47" pos:column="25">fields<pos:position pos:line="47" pos:column="31"/></name><index pos:line="47" pos:column="31">[<expr><name pos:line="47" pos:column="32">j<pos:position pos:line="47" pos:column="33"/></name></expr>]<pos:position pos:line="47" pos:column="34"/></index></name><operator pos:line="47" pos:column="34">.<pos:position pos:line="47" pos:column="35"/></operator><name pos:line="47" pos:column="35">field<pos:position pos:line="47" pos:column="40"/></name> <operator pos:line="47" pos:column="41">!=<pos:position pos:line="47" pos:column="43"/></operator> <name pos:line="47" pos:column="44">NULL<pos:position pos:line="47" pos:column="48"/></name></expr>;<pos:position pos:line="47" pos:column="49"/></condition> <incr><expr><operator pos:line="47" pos:column="50">++<pos:position pos:line="47" pos:column="52"/></operator><name pos:line="47" pos:column="52">j<pos:position pos:line="47" pos:column="53"/></name></expr></incr>)<pos:position pos:line="47" pos:column="54"/></control> <block pos:line="47" pos:column="55">{
                <if pos:line="48" pos:column="17">if <condition pos:line="48" pos:column="20">(<expr><name pos:line="48" pos:column="21">klen<pos:position pos:line="48" pos:column="25"/></name> <operator pos:line="48" pos:column="26">&amp;&amp;<pos:position pos:line="48" pos:column="36"/></operator> <operator pos:line="48" pos:column="29">!<pos:position pos:line="48" pos:column="30"/></operator><call><name pos:line="48" pos:column="30">strcasecmp<pos:position pos:line="48" pos:column="40"/></name><argument_list pos:line="48" pos:column="40">(<argument><expr><name><name pos:line="48" pos:column="41">fields<pos:position pos:line="48" pos:column="47"/></name><index pos:line="48" pos:column="47">[<expr><name pos:line="48" pos:column="48">j<pos:position pos:line="48" pos:column="49"/></name></expr>]<pos:position pos:line="48" pos:column="50"/></index></name><operator pos:line="48" pos:column="50">.<pos:position pos:line="48" pos:column="51"/></operator><name pos:line="48" pos:column="51">field<pos:position pos:line="48" pos:column="56"/></name></expr></argument>, <argument><expr><name pos:line="48" pos:column="58">elt<pos:position pos:line="48" pos:column="61"/></name></expr></argument>)<pos:position pos:line="48" pos:column="62"/></argument_list></call></expr>)<pos:position pos:line="48" pos:column="63"/></condition><then pos:line="48" pos:column="63"> <block pos:line="48" pos:column="64">{
                    <expr_stmt><expr><name><name pos:line="49" pos:column="21">fields<pos:position pos:line="49" pos:column="27"/></name><index pos:line="49" pos:column="27">[<expr><name pos:line="49" pos:column="28">j<pos:position pos:line="49" pos:column="29"/></name></expr>]<pos:position pos:line="49" pos:column="30"/></index></name><operator pos:line="49" pos:column="30">.<pos:position pos:line="49" pos:column="31"/></operator><name pos:line="49" pos:column="31">set<pos:position pos:line="49" pos:column="34"/></name> <operator pos:line="49" pos:column="35">=<pos:position pos:line="49" pos:column="36"/></operator> <literal type="number" pos:line="49" pos:column="37">1<pos:position pos:line="49" pos:column="38"/></literal></expr>;<pos:position pos:line="49" pos:column="39"/></expr_stmt>
                    <if pos:line="50" pos:column="21">if <condition pos:line="50" pos:column="24">(<expr><name pos:line="50" pos:column="25">ptr<pos:position pos:line="50" pos:column="28"/></name></expr>)<pos:position pos:line="50" pos:column="29"/></condition><then pos:line="50" pos:column="29"> <block pos:line="50" pos:column="30">{
                        <expr_stmt><expr><name><name pos:line="51" pos:column="25">fields<pos:position pos:line="51" pos:column="31"/></name><index pos:line="51" pos:column="31">[<expr><name pos:line="51" pos:column="32">j<pos:position pos:line="51" pos:column="33"/></name></expr>]<pos:position pos:line="51" pos:column="34"/></index></name><operator pos:line="51" pos:column="34">.<pos:position pos:line="51" pos:column="35"/></operator><name pos:line="51" pos:column="35">value<pos:position pos:line="51" pos:column="40"/></name> <operator pos:line="51" pos:column="41">=<pos:position pos:line="51" pos:column="42"/></operator> <name pos:line="51" pos:column="43">ptr<pos:position pos:line="51" pos:column="46"/></name></expr>;<pos:position pos:line="51" pos:column="47"/></expr_stmt>
                    }<pos:position pos:line="52" pos:column="22"/></block></then></if>
                    <break pos:line="53" pos:column="21">break;<pos:position pos:line="53" pos:column="27"/></break>
                }<pos:position pos:line="54" pos:column="18"/></block></then></if>
            }<pos:position pos:line="55" pos:column="14"/></block></for>

            <expr_stmt><expr><name pos:line="57" pos:column="13">i<pos:position pos:line="57" pos:column="14"/></name><operator pos:line="57" pos:column="14">++<pos:position pos:line="57" pos:column="16"/></operator></expr>;<pos:position pos:line="57" pos:column="17"/></expr_stmt>
        }<pos:position pos:line="58" pos:column="10"/></block></while>
        <expr_stmt><expr><name pos:line="59" pos:column="9">dir<pos:position pos:line="59" pos:column="12"/></name> <operator pos:line="59" pos:column="13">=<pos:position pos:line="59" pos:column="14"/></operator> <name><name pos:line="59" pos:column="15">fields<pos:position pos:line="59" pos:column="21"/></name><index pos:line="59" pos:column="21">[<expr><literal type="number" pos:line="59" pos:column="22">0<pos:position pos:line="59" pos:column="23"/></literal></expr>]<pos:position pos:line="59" pos:column="24"/></index></name><operator pos:line="59" pos:column="24">.<pos:position pos:line="59" pos:column="25"/></operator><name pos:line="59" pos:column="25">value<pos:position pos:line="59" pos:column="30"/></name></expr>;<pos:position pos:line="59" pos:column="31"/></expr_stmt>
        <expr_stmt><expr><name pos:line="60" pos:column="9">keyPrefix<pos:position pos:line="60" pos:column="18"/></name> <operator pos:line="60" pos:column="19">=<pos:position pos:line="60" pos:column="20"/></operator> <name><name pos:line="60" pos:column="21">fields<pos:position pos:line="60" pos:column="27"/></name><index pos:line="60" pos:column="27">[<expr><literal type="number" pos:line="60" pos:column="28">1<pos:position pos:line="60" pos:column="29"/></literal></expr>]<pos:position pos:line="60" pos:column="30"/></index></name><operator pos:line="60" pos:column="30">.<pos:position pos:line="60" pos:column="31"/></operator><name pos:line="60" pos:column="31">value<pos:position pos:line="60" pos:column="36"/></name></expr>;<pos:position pos:line="60" pos:column="37"/></expr_stmt>
        <expr_stmt><expr><name pos:line="61" pos:column="9">certPrefix<pos:position pos:line="61" pos:column="19"/></name> <operator pos:line="61" pos:column="20">=<pos:position pos:line="61" pos:column="21"/></operator> <name><name pos:line="61" pos:column="22">fields<pos:position pos:line="61" pos:column="28"/></name><index pos:line="61" pos:column="28">[<expr><literal type="number" pos:line="61" pos:column="29">2<pos:position pos:line="61" pos:column="30"/></literal></expr>]<pos:position pos:line="61" pos:column="31"/></index></name><operator pos:line="61" pos:column="31">.<pos:position pos:line="61" pos:column="32"/></operator><name pos:line="61" pos:column="32">value<pos:position pos:line="61" pos:column="37"/></name></expr>;<pos:position pos:line="61" pos:column="38"/></expr_stmt>
        <expr_stmt><expr><name pos:line="62" pos:column="9">secmod<pos:position pos:line="62" pos:column="15"/></name> <operator pos:line="62" pos:column="16">=<pos:position pos:line="62" pos:column="17"/></operator> <name><name pos:line="62" pos:column="18">fields<pos:position pos:line="62" pos:column="24"/></name><index pos:line="62" pos:column="24">[<expr><literal type="number" pos:line="62" pos:column="25">3<pos:position pos:line="62" pos:column="26"/></literal></expr>]<pos:position pos:line="62" pos:column="27"/></index></name><operator pos:line="62" pos:column="27">.<pos:position pos:line="62" pos:column="28"/></operator><name pos:line="62" pos:column="28">value<pos:position pos:line="62" pos:column="33"/></name></expr>;<pos:position pos:line="62" pos:column="34"/></expr_stmt>
        <expr_stmt><expr><name pos:line="63" pos:column="9">noinit<pos:position pos:line="63" pos:column="15"/></name> <operator pos:line="63" pos:column="16">=<pos:position pos:line="63" pos:column="17"/></operator> <name><name pos:line="63" pos:column="18">fields<pos:position pos:line="63" pos:column="24"/></name><index pos:line="63" pos:column="24">[<expr><literal type="number" pos:line="63" pos:column="25">4<pos:position pos:line="63" pos:column="26"/></literal></expr>]<pos:position pos:line="63" pos:column="27"/></index></name><operator pos:line="63" pos:column="27">.<pos:position pos:line="63" pos:column="28"/></operator><name pos:line="63" pos:column="28">set<pos:position pos:line="63" pos:column="31"/></name></expr>;<pos:position pos:line="63" pos:column="32"/></expr_stmt>
    }<pos:position pos:line="64" pos:column="6"/></block></then></if>

    <comment type="block" pos:line="66" pos:column="5">/* if we've been asked to bypass, do so here */</comment>
    <if pos:line="67" pos:column="5">if <condition pos:line="67" pos:column="8">(<expr><name pos:line="67" pos:column="9">noinit<pos:position pos:line="67" pos:column="15"/></name></expr>)<pos:position pos:line="67" pos:column="16"/></condition><then pos:line="67" pos:column="16"> <block pos:line="67" pos:column="17">{
        <return pos:line="68" pos:column="9">return <expr><name pos:line="68" pos:column="16">APR_SUCCESS<pos:position pos:line="68" pos:column="27"/></name></expr>;<pos:position pos:line="68" pos:column="28"/></return>
    }<pos:position pos:line="69" pos:column="6"/></block></then></if>

    <comment type="block" pos:line="71" pos:column="5">/* sanity check - we can only initialise NSS once */</comment>
    <if pos:line="72" pos:column="5">if <condition pos:line="72" pos:column="8">(<expr><call><name pos:line="72" pos:column="9">NSS_IsInitialized<pos:position pos:line="72" pos:column="26"/></name><argument_list pos:line="72" pos:column="26">()<pos:position pos:line="72" pos:column="28"/></argument_list></call></expr>)<pos:position pos:line="72" pos:column="29"/></condition><then pos:line="72" pos:column="29"> <block pos:line="72" pos:column="30">{
        <return pos:line="73" pos:column="9">return <expr><name pos:line="73" pos:column="16">APR_EREINIT<pos:position pos:line="73" pos:column="27"/></name></expr>;<pos:position pos:line="73" pos:column="28"/></return>
    }<pos:position pos:line="74" pos:column="6"/></block></then></if>

    <expr_stmt><expr><call><name pos:line="76" pos:column="5">apr_pool_cleanup_register<pos:position pos:line="76" pos:column="30"/></name><argument_list pos:line="76" pos:column="30">(<argument><expr><name pos:line="76" pos:column="31">pool<pos:position pos:line="76" pos:column="35"/></name></expr></argument>, <argument><expr><name pos:line="76" pos:column="37">pool<pos:position pos:line="76" pos:column="41"/></name></expr></argument>, <argument><expr><name pos:line="76" pos:column="43">crypto_shutdown_helper<pos:position pos:line="76" pos:column="65"/></name></expr></argument>,
            <argument><expr><name pos:line="77" pos:column="13">apr_pool_cleanup_null<pos:position pos:line="77" pos:column="34"/></name></expr></argument>)<pos:position pos:line="77" pos:column="35"/></argument_list></call></expr>;<pos:position pos:line="77" pos:column="36"/></expr_stmt>

    <if pos:line="79" pos:column="5">if <condition pos:line="79" pos:column="8">(<expr><name pos:line="79" pos:column="9">keyPrefix<pos:position pos:line="79" pos:column="18"/></name> <operator pos:line="79" pos:column="19">||<pos:position pos:line="79" pos:column="21"/></operator> <name pos:line="79" pos:column="22">certPrefix<pos:position pos:line="79" pos:column="32"/></name> <operator pos:line="79" pos:column="33">||<pos:position pos:line="79" pos:column="35"/></operator> <name pos:line="79" pos:column="36">secmod<pos:position pos:line="79" pos:column="42"/></name></expr>)<pos:position pos:line="79" pos:column="43"/></condition><then pos:line="79" pos:column="43"> <block pos:line="79" pos:column="44">{
        <expr_stmt><expr><name pos:line="80" pos:column="9">s<pos:position pos:line="80" pos:column="10"/></name> <operator pos:line="80" pos:column="11">=<pos:position pos:line="80" pos:column="12"/></operator> <call><name pos:line="80" pos:column="13">NSS_Initialize<pos:position pos:line="80" pos:column="27"/></name><argument_list pos:line="80" pos:column="27">(<argument><expr><name pos:line="80" pos:column="28">dir<pos:position pos:line="80" pos:column="31"/></name></expr></argument>, <argument><expr><name pos:line="80" pos:column="33">certPrefix<pos:position pos:line="80" pos:column="43"/></name></expr></argument>, <argument><expr><name pos:line="80" pos:column="45">keyPrefix<pos:position pos:line="80" pos:column="54"/></name></expr></argument>, <argument><expr><name pos:line="80" pos:column="56">secmod<pos:position pos:line="80" pos:column="62"/></name></expr></argument>, <argument><expr><name pos:line="80" pos:column="64">flags<pos:position pos:line="80" pos:column="69"/></name></expr></argument>)<pos:position pos:line="80" pos:column="70"/></argument_list></call></expr>;<pos:position pos:line="80" pos:column="71"/></expr_stmt>
    }<pos:position pos:line="81" pos:column="6"/></block></then>
    <elseif pos:line="82" pos:column="5">else <if pos:line="82" pos:column="10">if <condition pos:line="82" pos:column="13">(<expr><name pos:line="82" pos:column="14">dir<pos:position pos:line="82" pos:column="17"/></name></expr>)<pos:position pos:line="82" pos:column="18"/></condition><then pos:line="82" pos:column="18"> <block pos:line="82" pos:column="19">{
        <expr_stmt><expr><name pos:line="83" pos:column="9">s<pos:position pos:line="83" pos:column="10"/></name> <operator pos:line="83" pos:column="11">=<pos:position pos:line="83" pos:column="12"/></operator> <call><name pos:line="83" pos:column="13">NSS_InitReadWrite<pos:position pos:line="83" pos:column="30"/></name><argument_list pos:line="83" pos:column="30">(<argument><expr><name pos:line="83" pos:column="31">dir<pos:position pos:line="83" pos:column="34"/></name></expr></argument>)<pos:position pos:line="83" pos:column="35"/></argument_list></call></expr>;<pos:position pos:line="83" pos:column="36"/></expr_stmt>
    }<pos:position pos:line="84" pos:column="6"/></block></then></if></elseif>
    <else pos:line="85" pos:column="5">else <block pos:line="85" pos:column="10">{
        <expr_stmt><expr><name pos:line="86" pos:column="9">s<pos:position pos:line="86" pos:column="10"/></name> <operator pos:line="86" pos:column="11">=<pos:position pos:line="86" pos:column="12"/></operator> <call><name pos:line="86" pos:column="13">NSS_NoDB_Init<pos:position pos:line="86" pos:column="26"/></name><argument_list pos:line="86" pos:column="26">(<argument><expr><name pos:line="86" pos:column="27">NULL<pos:position pos:line="86" pos:column="31"/></name></expr></argument>)<pos:position pos:line="86" pos:column="32"/></argument_list></call></expr>;<pos:position pos:line="86" pos:column="33"/></expr_stmt>
    }<pos:position pos:line="87" pos:column="6"/></block></else></if>
    <if pos:line="88" pos:column="5">if <condition pos:line="88" pos:column="8">(<expr><name pos:line="88" pos:column="9">s<pos:position pos:line="88" pos:column="10"/></name> <operator pos:line="88" pos:column="11">!=<pos:position pos:line="88" pos:column="13"/></operator> <name pos:line="88" pos:column="14">SECSuccess<pos:position pos:line="88" pos:column="24"/></name></expr>)<pos:position pos:line="88" pos:column="25"/></condition><then pos:line="88" pos:column="25"> <block pos:line="88" pos:column="26">{
        <if pos:line="89" pos:column="9">if <condition pos:line="89" pos:column="12">(<expr><name pos:line="89" pos:column="13">rc<pos:position pos:line="89" pos:column="15"/></name></expr>)<pos:position pos:line="89" pos:column="16"/></condition><then pos:line="89" pos:column="16"> <block pos:line="89" pos:column="17">{
            <expr_stmt><expr><operator pos:line="90" pos:column="13">*<pos:position pos:line="90" pos:column="14"/></operator><name pos:line="90" pos:column="14">rc<pos:position pos:line="90" pos:column="16"/></name> <operator pos:line="90" pos:column="17">=<pos:position pos:line="90" pos:column="18"/></operator> <call><name pos:line="90" pos:column="19">PR_GetError<pos:position pos:line="90" pos:column="30"/></name><argument_list pos:line="90" pos:column="30">()<pos:position pos:line="90" pos:column="32"/></argument_list></call></expr>;<pos:position pos:line="90" pos:column="33"/></expr_stmt>
        }<pos:position pos:line="91" pos:column="10"/></block></then></if>
        <return pos:line="92" pos:column="9">return <expr><name pos:line="92" pos:column="16">APR_ECRYPT<pos:position pos:line="92" pos:column="26"/></name></expr>;<pos:position pos:line="92" pos:column="27"/></return>
    }<pos:position pos:line="93" pos:column="6"/></block></then></if>

    <return pos:line="95" pos:column="5">return <expr><name pos:line="95" pos:column="12">APR_SUCCESS<pos:position pos:line="95" pos:column="23"/></name></expr>;<pos:position pos:line="95" pos:column="24"/></return>

}<pos:position pos:line="97" pos:column="2"/></block></function></unit>

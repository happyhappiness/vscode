<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/httpd/gumtree/httpd_repos_function_1247_httpd-2.2.34.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">void<pos:position pos:line="1" pos:column="12"/></name></type> <name pos:line="1" pos:column="13">set_charset_quality<pos:position pos:line="1" pos:column="32"/></name><parameter_list pos:line="1" pos:column="32">(<parameter><decl><type><name pos:line="1" pos:column="33">negotiation_state<pos:position pos:line="1" pos:column="50"/></name> <modifier pos:line="1" pos:column="51">*<pos:position pos:line="1" pos:column="52"/></modifier></type><name pos:line="1" pos:column="52">neg<pos:position pos:line="1" pos:column="55"/></name></decl></parameter>, <parameter><decl><type><name pos:line="1" pos:column="57">var_rec<pos:position pos:line="1" pos:column="64"/></name> <modifier pos:line="1" pos:column="65">*<pos:position pos:line="1" pos:column="66"/></modifier></type><name pos:line="1" pos:column="66">variant<pos:position pos:line="1" pos:column="73"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="74"/></parameter_list>
<block pos:line="2" pos:column="1">{
    <decl_stmt><decl><type><name pos:line="3" pos:column="5">int<pos:position pos:line="3" pos:column="8"/></name></type> <name pos:line="3" pos:column="9">i<pos:position pos:line="3" pos:column="10"/></name></decl>;<pos:position pos:line="3" pos:column="11"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="4" pos:column="5">accept_rec<pos:position pos:line="4" pos:column="15"/></name> <modifier pos:line="4" pos:column="16">*<pos:position pos:line="4" pos:column="17"/></modifier></type><name pos:line="4" pos:column="17">accept_recs<pos:position pos:line="4" pos:column="28"/></name></decl>;<pos:position pos:line="4" pos:column="29"/></decl_stmt>
    <decl_stmt><decl><type><specifier pos:line="5" pos:column="5">const<pos:position pos:line="5" pos:column="10"/></specifier> <name pos:line="5" pos:column="11">char<pos:position pos:line="5" pos:column="15"/></name> <modifier pos:line="5" pos:column="16">*<pos:position pos:line="5" pos:column="17"/></modifier></type><name pos:line="5" pos:column="17">charset<pos:position pos:line="5" pos:column="24"/></name> <init pos:line="5" pos:column="25">= <expr><name><name pos:line="5" pos:column="27">variant<pos:position pos:line="5" pos:column="34"/></name><operator pos:line="5" pos:column="34">-&gt;<pos:position pos:line="5" pos:column="39"/></operator><name pos:line="5" pos:column="36">content_charset<pos:position pos:line="5" pos:column="51"/></name></name></expr></init></decl>;<pos:position pos:line="5" pos:column="52"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="6" pos:column="5">accept_rec<pos:position pos:line="6" pos:column="15"/></name> <modifier pos:line="6" pos:column="16">*<pos:position pos:line="6" pos:column="17"/></modifier></type><name pos:line="6" pos:column="17">star<pos:position pos:line="6" pos:column="21"/></name> <init pos:line="6" pos:column="22">= <expr><name pos:line="6" pos:column="24">NULL<pos:position pos:line="6" pos:column="28"/></name></expr></init></decl>;<pos:position pos:line="6" pos:column="29"/></decl_stmt>

    <comment type="block" pos:line="8" pos:column="5">/* if no Accept-Charset: header, leave quality alone (will
     * remain at the default value of 1)
     */</comment>
    <if pos:line="11" pos:column="5">if <condition pos:line="11" pos:column="8">(<expr><operator pos:line="11" pos:column="9">!<pos:position pos:line="11" pos:column="10"/></operator><name><name pos:line="11" pos:column="10">neg<pos:position pos:line="11" pos:column="13"/></name><operator pos:line="11" pos:column="13">-&gt;<pos:position pos:line="11" pos:column="18"/></operator><name pos:line="11" pos:column="15">accept_charsets<pos:position pos:line="11" pos:column="30"/></name></name></expr>)<pos:position pos:line="11" pos:column="31"/></condition><then pos:line="11" pos:column="31"> <block pos:line="11" pos:column="32">{
        <if pos:line="12" pos:column="9">if <condition pos:line="12" pos:column="12">(<expr><name pos:line="12" pos:column="13">charset<pos:position pos:line="12" pos:column="20"/></name> <operator pos:line="12" pos:column="21">&amp;&amp;<pos:position pos:line="12" pos:column="31"/></operator> <operator pos:line="12" pos:column="24">*<pos:position pos:line="12" pos:column="25"/></operator><name pos:line="12" pos:column="25">charset<pos:position pos:line="12" pos:column="32"/></name></expr>)<pos:position pos:line="12" pos:column="33"/></condition><then pos:line="12" pos:column="33">
            <block type="pseudo"><expr_stmt><expr><name><name pos:line="13" pos:column="13">variant<pos:position pos:line="13" pos:column="20"/></name><operator pos:line="13" pos:column="20">-&gt;<pos:position pos:line="13" pos:column="25"/></operator><name pos:line="13" pos:column="22">definite<pos:position pos:line="13" pos:column="30"/></name></name> <operator pos:line="13" pos:column="31">=<pos:position pos:line="13" pos:column="32"/></operator> <literal type="number" pos:line="13" pos:column="33">0<pos:position pos:line="13" pos:column="34"/></literal></expr>;<pos:position pos:line="13" pos:column="35"/></expr_stmt></block></then></if>
        <return pos:line="14" pos:column="9">return;<pos:position pos:line="14" pos:column="16"/></return>
    }<pos:position pos:line="15" pos:column="6"/></block></then></if>

    <expr_stmt><expr><name pos:line="17" pos:column="5">accept_recs<pos:position pos:line="17" pos:column="16"/></name> <operator pos:line="17" pos:column="17">=<pos:position pos:line="17" pos:column="18"/></operator> <operator pos:line="17" pos:column="19">(<pos:position pos:line="17" pos:column="20"/></operator><name pos:line="17" pos:column="20">accept_rec<pos:position pos:line="17" pos:column="30"/></name> <operator pos:line="17" pos:column="31">*<pos:position pos:line="17" pos:column="32"/></operator><operator pos:line="17" pos:column="32">)<pos:position pos:line="17" pos:column="33"/></operator> <name><name pos:line="17" pos:column="34">neg<pos:position pos:line="17" pos:column="37"/></name><operator pos:line="17" pos:column="37">-&gt;<pos:position pos:line="17" pos:column="42"/></operator><name pos:line="17" pos:column="39">accept_charsets<pos:position pos:line="17" pos:column="54"/></name><operator pos:line="17" pos:column="54">-&gt;<pos:position pos:line="17" pos:column="59"/></operator><name pos:line="17" pos:column="56">elts<pos:position pos:line="17" pos:column="60"/></name></name></expr>;<pos:position pos:line="17" pos:column="61"/></expr_stmt>

    <if pos:line="19" pos:column="5">if <condition pos:line="19" pos:column="8">(<expr><name pos:line="19" pos:column="9">charset<pos:position pos:line="19" pos:column="16"/></name> <operator pos:line="19" pos:column="17">==<pos:position pos:line="19" pos:column="19"/></operator> <name pos:line="19" pos:column="20">NULL<pos:position pos:line="19" pos:column="24"/></name> <operator pos:line="19" pos:column="25">||<pos:position pos:line="19" pos:column="27"/></operator> <operator pos:line="19" pos:column="28">!<pos:position pos:line="19" pos:column="29"/></operator><operator pos:line="19" pos:column="29">*<pos:position pos:line="19" pos:column="30"/></operator><name pos:line="19" pos:column="30">charset<pos:position pos:line="19" pos:column="37"/></name></expr>)<pos:position pos:line="19" pos:column="38"/></condition><then pos:line="19" pos:column="38"> <block pos:line="19" pos:column="39">{
        <comment type="block" pos:line="20" pos:column="9">/* Charset of variant not known */</comment>

        <comment type="block" pos:line="22" pos:column="9">/* if not a text / * type, leave quality alone */</comment>
        <if pos:line="23" pos:column="9">if <condition pos:line="23" pos:column="12">(<expr><operator pos:line="23" pos:column="13">!<pos:position pos:line="23" pos:column="14"/></operator><operator pos:line="23" pos:column="14">(<pos:position pos:line="23" pos:column="15"/></operator><operator pos:line="23" pos:column="15">!<pos:position pos:line="23" pos:column="16"/></operator><call><name pos:line="23" pos:column="16">strncmp<pos:position pos:line="23" pos:column="23"/></name><argument_list pos:line="23" pos:column="23">(<argument><expr><name><name pos:line="23" pos:column="24">variant<pos:position pos:line="23" pos:column="31"/></name><operator pos:line="23" pos:column="31">-&gt;<pos:position pos:line="23" pos:column="36"/></operator><name pos:line="23" pos:column="33">mime_type<pos:position pos:line="23" pos:column="42"/></name></name></expr></argument>, <argument><expr><literal type="string" pos:line="23" pos:column="44">"text/"<pos:position pos:line="23" pos:column="51"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="23" pos:column="53">5<pos:position pos:line="23" pos:column="54"/></literal></expr></argument>)<pos:position pos:line="23" pos:column="55"/></argument_list></call>
              <operator pos:line="24" pos:column="15">||<pos:position pos:line="24" pos:column="17"/></operator> <operator pos:line="24" pos:column="18">!<pos:position pos:line="24" pos:column="19"/></operator><call><name pos:line="24" pos:column="19">strcmp<pos:position pos:line="24" pos:column="25"/></name><argument_list pos:line="24" pos:column="25">(<argument><expr><name><name pos:line="24" pos:column="26">variant<pos:position pos:line="24" pos:column="33"/></name><operator pos:line="24" pos:column="33">-&gt;<pos:position pos:line="24" pos:column="38"/></operator><name pos:line="24" pos:column="35">mime_type<pos:position pos:line="24" pos:column="44"/></name></name></expr></argument>, <argument><expr><name pos:line="24" pos:column="46">INCLUDES_MAGIC_TYPE<pos:position pos:line="24" pos:column="65"/></name></expr></argument>)<pos:position pos:line="24" pos:column="66"/></argument_list></call>
              <operator pos:line="25" pos:column="15">||<pos:position pos:line="25" pos:column="17"/></operator> <operator pos:line="25" pos:column="18">!<pos:position pos:line="25" pos:column="19"/></operator><call><name pos:line="25" pos:column="19">strcmp<pos:position pos:line="25" pos:column="25"/></name><argument_list pos:line="25" pos:column="25">(<argument><expr><name><name pos:line="25" pos:column="26">variant<pos:position pos:line="25" pos:column="33"/></name><operator pos:line="25" pos:column="33">-&gt;<pos:position pos:line="25" pos:column="38"/></operator><name pos:line="25" pos:column="35">mime_type<pos:position pos:line="25" pos:column="44"/></name></name></expr></argument>, <argument><expr><name pos:line="25" pos:column="46">INCLUDES_MAGIC_TYPE3<pos:position pos:line="25" pos:column="66"/></name></expr></argument>)<pos:position pos:line="25" pos:column="67"/></argument_list></call>
              <operator pos:line="26" pos:column="15">)<pos:position pos:line="26" pos:column="16"/></operator></expr>)<pos:position pos:line="26" pos:column="17"/></condition><then pos:line="26" pos:column="17">
            <block type="pseudo"><return pos:line="27" pos:column="13">return;<pos:position pos:line="27" pos:column="20"/></return></block></then></if>

        <comment type="block" pos:line="29" pos:column="9">/* Don't go guessing if we are in strict header mode,
         * e.g. when running the rvsa, as any guess won't be reflected
         * in the variant list or content-location headers.
         */</comment>
        <if pos:line="33" pos:column="9">if <condition pos:line="33" pos:column="12">(<expr><name><name pos:line="33" pos:column="13">neg<pos:position pos:line="33" pos:column="16"/></name><operator pos:line="33" pos:column="16">-&gt;<pos:position pos:line="33" pos:column="21"/></operator><name pos:line="33" pos:column="18">dont_fiddle_headers<pos:position pos:line="33" pos:column="37"/></name></name></expr>)<pos:position pos:line="33" pos:column="38"/></condition><then pos:line="33" pos:column="38">
            <block type="pseudo"><return pos:line="34" pos:column="13">return;<pos:position pos:line="34" pos:column="20"/></return></block></then></if>

        <expr_stmt><expr><name pos:line="36" pos:column="9">charset<pos:position pos:line="36" pos:column="16"/></name> <operator pos:line="36" pos:column="17">=<pos:position pos:line="36" pos:column="18"/></operator> <literal type="string" pos:line="36" pos:column="19">"iso-8859-1"<pos:position pos:line="36" pos:column="31"/></literal></expr>;<pos:position pos:line="36" pos:column="32"/></expr_stmt> <comment type="block" pos:line="36" pos:column="33">/* The default charset for HTTP text types */</comment>
    }<pos:position pos:line="37" pos:column="6"/></block></then></if>

    <comment type="block" pos:line="39" pos:column="5">/*
     * Go through each of the items on the Accept-Charset header,
     * looking for a match with this variant's charset. If none
     * match, charset is unacceptable, so set quality to 0.
     */</comment>
    <for pos:line="44" pos:column="5">for <control pos:line="44" pos:column="9">(<init><expr><name pos:line="44" pos:column="10">i<pos:position pos:line="44" pos:column="11"/></name> <operator pos:line="44" pos:column="12">=<pos:position pos:line="44" pos:column="13"/></operator> <literal type="number" pos:line="44" pos:column="14">0<pos:position pos:line="44" pos:column="15"/></literal></expr>;<pos:position pos:line="44" pos:column="16"/></init> <condition><expr><name pos:line="44" pos:column="17">i<pos:position pos:line="44" pos:column="18"/></name> <operator pos:line="44" pos:column="19">&lt;<pos:position pos:line="44" pos:column="23"/></operator> <name><name pos:line="44" pos:column="21">neg<pos:position pos:line="44" pos:column="24"/></name><operator pos:line="44" pos:column="24">-&gt;<pos:position pos:line="44" pos:column="29"/></operator><name pos:line="44" pos:column="26">accept_charsets<pos:position pos:line="44" pos:column="41"/></name><operator pos:line="44" pos:column="41">-&gt;<pos:position pos:line="44" pos:column="46"/></operator><name pos:line="44" pos:column="43">nelts<pos:position pos:line="44" pos:column="48"/></name></name></expr>;<pos:position pos:line="44" pos:column="49"/></condition> <incr><expr><operator pos:line="44" pos:column="50">++<pos:position pos:line="44" pos:column="52"/></operator><name pos:line="44" pos:column="52">i<pos:position pos:line="44" pos:column="53"/></name></expr></incr>)<pos:position pos:line="44" pos:column="54"/></control> <block pos:line="44" pos:column="55">{

        <decl_stmt><decl><type><name pos:line="46" pos:column="9">accept_rec<pos:position pos:line="46" pos:column="19"/></name> <modifier pos:line="46" pos:column="20">*<pos:position pos:line="46" pos:column="21"/></modifier></type><name pos:line="46" pos:column="21">type<pos:position pos:line="46" pos:column="25"/></name> <init pos:line="46" pos:column="26">= <expr><operator pos:line="46" pos:column="28">&amp;<pos:position pos:line="46" pos:column="33"/></operator><name><name pos:line="46" pos:column="29">accept_recs<pos:position pos:line="46" pos:column="40"/></name><index pos:line="46" pos:column="40">[<expr><name pos:line="46" pos:column="41">i<pos:position pos:line="46" pos:column="42"/></name></expr>]<pos:position pos:line="46" pos:column="43"/></index></name></expr></init></decl>;<pos:position pos:line="46" pos:column="44"/></decl_stmt>

        <if pos:line="48" pos:column="9">if <condition pos:line="48" pos:column="12">(<expr><operator pos:line="48" pos:column="13">!<pos:position pos:line="48" pos:column="14"/></operator><call><name pos:line="48" pos:column="14">strcmp<pos:position pos:line="48" pos:column="20"/></name><argument_list pos:line="48" pos:column="20">(<argument><expr><name><name pos:line="48" pos:column="21">type<pos:position pos:line="48" pos:column="25"/></name><operator pos:line="48" pos:column="25">-&gt;<pos:position pos:line="48" pos:column="30"/></operator><name pos:line="48" pos:column="27">name<pos:position pos:line="48" pos:column="31"/></name></name></expr></argument>, <argument><expr><name pos:line="48" pos:column="33">charset<pos:position pos:line="48" pos:column="40"/></name></expr></argument>)<pos:position pos:line="48" pos:column="41"/></argument_list></call></expr>)<pos:position pos:line="48" pos:column="42"/></condition><then pos:line="48" pos:column="42"> <block pos:line="48" pos:column="43">{
            <expr_stmt><expr><name><name pos:line="49" pos:column="13">variant<pos:position pos:line="49" pos:column="20"/></name><operator pos:line="49" pos:column="20">-&gt;<pos:position pos:line="49" pos:column="25"/></operator><name pos:line="49" pos:column="22">charset_quality<pos:position pos:line="49" pos:column="37"/></name></name> <operator pos:line="49" pos:column="38">=<pos:position pos:line="49" pos:column="39"/></operator> <name><name pos:line="49" pos:column="40">type<pos:position pos:line="49" pos:column="44"/></name><operator pos:line="49" pos:column="44">-&gt;<pos:position pos:line="49" pos:column="49"/></operator><name pos:line="49" pos:column="46">quality<pos:position pos:line="49" pos:column="53"/></name></name></expr>;<pos:position pos:line="49" pos:column="54"/></expr_stmt>
            <return pos:line="50" pos:column="13">return;<pos:position pos:line="50" pos:column="20"/></return>
        }<pos:position pos:line="51" pos:column="10"/></block></then>
        <elseif pos:line="52" pos:column="9">else <if pos:line="52" pos:column="14">if <condition pos:line="52" pos:column="17">(<expr><call><name pos:line="52" pos:column="18">strcmp<pos:position pos:line="52" pos:column="24"/></name><argument_list pos:line="52" pos:column="24">(<argument><expr><name><name pos:line="52" pos:column="25">type<pos:position pos:line="52" pos:column="29"/></name><operator pos:line="52" pos:column="29">-&gt;<pos:position pos:line="52" pos:column="34"/></operator><name pos:line="52" pos:column="31">name<pos:position pos:line="52" pos:column="35"/></name></name></expr></argument>, <argument><expr><literal type="string" pos:line="52" pos:column="37">"*"<pos:position pos:line="52" pos:column="40"/></literal></expr></argument>)<pos:position pos:line="52" pos:column="41"/></argument_list></call> <operator pos:line="52" pos:column="42">==<pos:position pos:line="52" pos:column="44"/></operator> <literal type="number" pos:line="52" pos:column="45">0<pos:position pos:line="52" pos:column="46"/></literal></expr>)<pos:position pos:line="52" pos:column="47"/></condition><then pos:line="52" pos:column="47"> <block pos:line="52" pos:column="48">{
            <expr_stmt><expr><name pos:line="53" pos:column="13">star<pos:position pos:line="53" pos:column="17"/></name> <operator pos:line="53" pos:column="18">=<pos:position pos:line="53" pos:column="19"/></operator> <name pos:line="53" pos:column="20">type<pos:position pos:line="53" pos:column="24"/></name></expr>;<pos:position pos:line="53" pos:column="25"/></expr_stmt>
        }<pos:position pos:line="54" pos:column="10"/></block></then></if></elseif></if>
    }<pos:position pos:line="55" pos:column="6"/></block></for>
    <comment type="block" pos:line="56" pos:column="5">/* No explicit match */</comment>
    <if pos:line="57" pos:column="5">if <condition pos:line="57" pos:column="8">(<expr><name pos:line="57" pos:column="9">star<pos:position pos:line="57" pos:column="13"/></name></expr>)<pos:position pos:line="57" pos:column="14"/></condition><then pos:line="57" pos:column="14"> <block pos:line="57" pos:column="15">{
        <expr_stmt><expr><name><name pos:line="58" pos:column="9">variant<pos:position pos:line="58" pos:column="16"/></name><operator pos:line="58" pos:column="16">-&gt;<pos:position pos:line="58" pos:column="21"/></operator><name pos:line="58" pos:column="18">charset_quality<pos:position pos:line="58" pos:column="33"/></name></name> <operator pos:line="58" pos:column="34">=<pos:position pos:line="58" pos:column="35"/></operator> <name><name pos:line="58" pos:column="36">star<pos:position pos:line="58" pos:column="40"/></name><operator pos:line="58" pos:column="40">-&gt;<pos:position pos:line="58" pos:column="45"/></operator><name pos:line="58" pos:column="42">quality<pos:position pos:line="58" pos:column="49"/></name></name></expr>;<pos:position pos:line="58" pos:column="50"/></expr_stmt>
        <expr_stmt><expr><name><name pos:line="59" pos:column="9">variant<pos:position pos:line="59" pos:column="16"/></name><operator pos:line="59" pos:column="16">-&gt;<pos:position pos:line="59" pos:column="21"/></operator><name pos:line="59" pos:column="18">definite<pos:position pos:line="59" pos:column="26"/></name></name> <operator pos:line="59" pos:column="27">=<pos:position pos:line="59" pos:column="28"/></operator> <literal type="number" pos:line="59" pos:column="29">0<pos:position pos:line="59" pos:column="30"/></literal></expr>;<pos:position pos:line="59" pos:column="31"/></expr_stmt>
        <return pos:line="60" pos:column="9">return;<pos:position pos:line="60" pos:column="16"/></return>
    }<pos:position pos:line="61" pos:column="6"/></block></then></if>
    <comment type="block" pos:line="62" pos:column="5">/* If this variant is in charset iso-8859-1, the default is 1.0 */</comment>
    <if pos:line="63" pos:column="5">if <condition pos:line="63" pos:column="8">(<expr><call><name pos:line="63" pos:column="9">strcmp<pos:position pos:line="63" pos:column="15"/></name><argument_list pos:line="63" pos:column="15">(<argument><expr><name pos:line="63" pos:column="16">charset<pos:position pos:line="63" pos:column="23"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="63" pos:column="25">"iso-8859-1"<pos:position pos:line="63" pos:column="37"/></literal></expr></argument>)<pos:position pos:line="63" pos:column="38"/></argument_list></call> <operator pos:line="63" pos:column="39">==<pos:position pos:line="63" pos:column="41"/></operator> <literal type="number" pos:line="63" pos:column="42">0<pos:position pos:line="63" pos:column="43"/></literal></expr>)<pos:position pos:line="63" pos:column="44"/></condition><then pos:line="63" pos:column="44"> <block pos:line="63" pos:column="45">{
        <expr_stmt><expr><name><name pos:line="64" pos:column="9">variant<pos:position pos:line="64" pos:column="16"/></name><operator pos:line="64" pos:column="16">-&gt;<pos:position pos:line="64" pos:column="21"/></operator><name pos:line="64" pos:column="18">charset_quality<pos:position pos:line="64" pos:column="33"/></name></name> <operator pos:line="64" pos:column="34">=<pos:position pos:line="64" pos:column="35"/></operator> <literal type="number" pos:line="64" pos:column="36">1.0f<pos:position pos:line="64" pos:column="40"/></literal></expr>;<pos:position pos:line="64" pos:column="41"/></expr_stmt>
    }<pos:position pos:line="65" pos:column="6"/></block></then>
    <else pos:line="66" pos:column="5">else <block pos:line="66" pos:column="10">{
        <expr_stmt><expr><name><name pos:line="67" pos:column="9">variant<pos:position pos:line="67" pos:column="16"/></name><operator pos:line="67" pos:column="16">-&gt;<pos:position pos:line="67" pos:column="21"/></operator><name pos:line="67" pos:column="18">charset_quality<pos:position pos:line="67" pos:column="33"/></name></name> <operator pos:line="67" pos:column="34">=<pos:position pos:line="67" pos:column="35"/></operator> <literal type="number" pos:line="67" pos:column="36">0.0f<pos:position pos:line="67" pos:column="40"/></literal></expr>;<pos:position pos:line="67" pos:column="41"/></expr_stmt>
    }<pos:position pos:line="68" pos:column="6"/></block></else></if>
}<pos:position pos:line="69" pos:column="2"/></block></function></unit>

<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/httpd/gumtree/httpd_repos_function_3441_httpd-2.2.27.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">int<pos:position pos:line="1" pos:column="4"/></name></type> <name pos:line="1" pos:column="5">main<pos:position pos:line="1" pos:column="9"/></name><parameter_list pos:line="1" pos:column="9">(<parameter><decl><type><name pos:line="1" pos:column="10">int<pos:position pos:line="1" pos:column="13"/></name></type> <name pos:line="1" pos:column="14">argc<pos:position pos:line="1" pos:column="18"/></name></decl></parameter>, <parameter><decl><type><name pos:line="1" pos:column="20">char<pos:position pos:line="1" pos:column="24"/></name> <modifier pos:line="1" pos:column="25">*<pos:position pos:line="1" pos:column="26"/></modifier><modifier pos:line="1" pos:column="26">*<pos:position pos:line="1" pos:column="27"/></modifier></type><name pos:line="1" pos:column="27">argv<pos:position pos:line="1" pos:column="31"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="32"/></parameter_list>
<block pos:line="2" pos:column="1">{
    <decl_stmt><decl><type><name pos:line="3" pos:column="5">apr_pool_t<pos:position pos:line="3" pos:column="15"/></name> <modifier pos:line="3" pos:column="16">*<pos:position pos:line="3" pos:column="17"/></modifier></type><name pos:line="3" pos:column="17">pool<pos:position pos:line="3" pos:column="21"/></name></decl>;<pos:position pos:line="3" pos:column="22"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="4" pos:column="5">apr_status_t<pos:position pos:line="4" pos:column="17"/></name></type> <name pos:line="4" pos:column="18">rv<pos:position pos:line="4" pos:column="20"/></name></decl>;<pos:position pos:line="4" pos:column="21"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="5" pos:column="5">int<pos:position pos:line="5" pos:column="8"/></name></type> <name pos:line="5" pos:column="9">i<pos:position pos:line="5" pos:column="10"/></name></decl>;<pos:position pos:line="5" pos:column="11"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="6" pos:column="5">int<pos:position pos:line="6" pos:column="8"/></name></type> <name pos:line="6" pos:column="9">nTests<pos:position pos:line="6" pos:column="15"/></name> <init pos:line="6" pos:column="16">= <expr><sizeof pos:line="6" pos:column="18">sizeof<argument_list pos:line="6" pos:column="24">(<argument><expr><name pos:line="6" pos:column="25">testRuns<pos:position pos:line="6" pos:column="33"/></name></expr></argument>)<pos:position pos:line="6" pos:column="34"/></argument_list></sizeof> <operator pos:line="6" pos:column="35">/<pos:position pos:line="6" pos:column="36"/></operator> <sizeof pos:line="6" pos:column="37">sizeof<argument_list pos:line="6" pos:column="43">(<argument><expr><name><name pos:line="6" pos:column="44">testRuns<pos:position pos:line="6" pos:column="52"/></name><index pos:line="6" pos:column="52">[<expr><literal type="number" pos:line="6" pos:column="53">0<pos:position pos:line="6" pos:column="54"/></literal></expr>]<pos:position pos:line="6" pos:column="55"/></index></name></expr></argument>)<pos:position pos:line="6" pos:column="56"/></argument_list></sizeof></expr></init></decl>;<pos:position pos:line="6" pos:column="57"/></decl_stmt>
    <decl_stmt><decl><type><name><name pos:line="7" pos:column="5">struct<pos:position pos:line="7" pos:column="11"/></name> <name pos:line="7" pos:column="12">testResult<pos:position pos:line="7" pos:column="22"/></name></name> <modifier pos:line="7" pos:column="23">*<pos:position pos:line="7" pos:column="24"/></modifier></type><name pos:line="7" pos:column="24">results<pos:position pos:line="7" pos:column="31"/></name></decl>;<pos:position pos:line="7" pos:column="32"/></decl_stmt>

    <expr_stmt><expr><call><name pos:line="9" pos:column="5">printf<pos:position pos:line="9" pos:column="11"/></name><argument_list pos:line="9" pos:column="11">(<argument><expr><literal type="string" pos:line="9" pos:column="12">"APR Test Application: sockperf\n"<pos:position pos:line="9" pos:column="46"/></literal></expr></argument>)<pos:position pos:line="9" pos:column="47"/></argument_list></call></expr>;<pos:position pos:line="9" pos:column="48"/></expr_stmt>

    <expr_stmt><expr><call><name pos:line="11" pos:column="5">apr_initialize<pos:position pos:line="11" pos:column="19"/></name><argument_list pos:line="11" pos:column="19">()<pos:position pos:line="11" pos:column="21"/></argument_list></call></expr>;<pos:position pos:line="11" pos:column="22"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="12" pos:column="5">atexit<pos:position pos:line="12" pos:column="11"/></name><argument_list pos:line="12" pos:column="11">(<argument><expr><name pos:line="12" pos:column="12">apr_terminate<pos:position pos:line="12" pos:column="25"/></name></expr></argument>)<pos:position pos:line="12" pos:column="26"/></argument_list></call></expr>;<pos:position pos:line="12" pos:column="27"/></expr_stmt>

    <expr_stmt><expr><call><name pos:line="14" pos:column="5">apr_pool_create<pos:position pos:line="14" pos:column="20"/></name><argument_list pos:line="14" pos:column="20">(<argument><expr><operator pos:line="14" pos:column="21">&amp;<pos:position pos:line="14" pos:column="26"/></operator><name pos:line="14" pos:column="22">pool<pos:position pos:line="14" pos:column="26"/></name></expr></argument>, <argument><expr><name pos:line="14" pos:column="28">NULL<pos:position pos:line="14" pos:column="32"/></name></expr></argument>)<pos:position pos:line="14" pos:column="33"/></argument_list></call></expr>;<pos:position pos:line="14" pos:column="34"/></expr_stmt>

    <expr_stmt><expr><name pos:line="16" pos:column="5">results<pos:position pos:line="16" pos:column="12"/></name> <operator pos:line="16" pos:column="13">=<pos:position pos:line="16" pos:column="14"/></operator> <operator pos:line="16" pos:column="15">(<pos:position pos:line="16" pos:column="16"/></operator>struct <name pos:line="16" pos:column="23">testResult<pos:position pos:line="16" pos:column="33"/></name> <operator pos:line="16" pos:column="34">*<pos:position pos:line="16" pos:column="35"/></operator><operator pos:line="16" pos:column="35">)<pos:position pos:line="16" pos:column="36"/></operator><call><name pos:line="16" pos:column="36">apr_pcalloc<pos:position pos:line="16" pos:column="47"/></name><argument_list pos:line="16" pos:column="47">(<argument><expr><name pos:line="16" pos:column="48">pool<pos:position pos:line="16" pos:column="52"/></name></expr></argument>, 
                                        <argument><expr><sizeof pos:line="17" pos:column="41">sizeof<argument_list pos:line="17" pos:column="47">(<argument><expr><operator pos:line="17" pos:column="48">*<pos:position pos:line="17" pos:column="49"/></operator><name pos:line="17" pos:column="49">results<pos:position pos:line="17" pos:column="56"/></name></expr></argument>)<pos:position pos:line="17" pos:column="57"/></argument_list></sizeof> <operator pos:line="17" pos:column="58">*<pos:position pos:line="17" pos:column="59"/></operator> <name pos:line="17" pos:column="60">nTests<pos:position pos:line="17" pos:column="66"/></name></expr></argument>)<pos:position pos:line="17" pos:column="67"/></argument_list></call></expr>;<pos:position pos:line="17" pos:column="68"/></expr_stmt>

    <for pos:line="19" pos:column="5">for <control pos:line="19" pos:column="9">(<init><expr><name pos:line="19" pos:column="10">i<pos:position pos:line="19" pos:column="11"/></name> <operator pos:line="19" pos:column="12">=<pos:position pos:line="19" pos:column="13"/></operator> <literal type="number" pos:line="19" pos:column="14">0<pos:position pos:line="19" pos:column="15"/></literal></expr>;<pos:position pos:line="19" pos:column="16"/></init> <condition><expr><name pos:line="19" pos:column="17">i<pos:position pos:line="19" pos:column="18"/></name> <operator pos:line="19" pos:column="19">&lt;<pos:position pos:line="19" pos:column="23"/></operator> <name pos:line="19" pos:column="21">nTests<pos:position pos:line="19" pos:column="27"/></name></expr>;<pos:position pos:line="19" pos:column="28"/></condition> <incr><expr><name pos:line="19" pos:column="29">i<pos:position pos:line="19" pos:column="30"/></name><operator pos:line="19" pos:column="30">++<pos:position pos:line="19" pos:column="32"/></operator></expr></incr>)<pos:position pos:line="19" pos:column="33"/></control> <block pos:line="19" pos:column="34">{
        <expr_stmt><expr><call><name pos:line="20" pos:column="9">printf<pos:position pos:line="20" pos:column="15"/></name><argument_list pos:line="20" pos:column="15">(<argument><expr><literal type="string" pos:line="20" pos:column="16">"Test -&gt; %c\n"<pos:position pos:line="20" pos:column="33"/></literal></expr></argument>, <argument><expr><name><name pos:line="20" pos:column="32">testRuns<pos:position pos:line="20" pos:column="40"/></name><index pos:line="20" pos:column="40">[<expr><name pos:line="20" pos:column="41">i<pos:position pos:line="20" pos:column="42"/></name></expr>]<pos:position pos:line="20" pos:column="43"/></index></name><operator pos:line="20" pos:column="43">.<pos:position pos:line="20" pos:column="44"/></operator><name pos:line="20" pos:column="44">c<pos:position pos:line="20" pos:column="45"/></name></expr></argument>)<pos:position pos:line="20" pos:column="46"/></argument_list></call></expr>;<pos:position pos:line="20" pos:column="47"/></expr_stmt>
        <expr_stmt><expr><name><name pos:line="21" pos:column="9">results<pos:position pos:line="21" pos:column="16"/></name><index pos:line="21" pos:column="16">[<expr><name pos:line="21" pos:column="17">i<pos:position pos:line="21" pos:column="18"/></name></expr>]<pos:position pos:line="21" pos:column="19"/></index></name><operator pos:line="21" pos:column="19">.<pos:position pos:line="21" pos:column="20"/></operator><name pos:line="21" pos:column="20">size<pos:position pos:line="21" pos:column="24"/></name> <operator pos:line="21" pos:column="25">=<pos:position pos:line="21" pos:column="26"/></operator> <name><name pos:line="21" pos:column="27">testRuns<pos:position pos:line="21" pos:column="35"/></name><index pos:line="21" pos:column="35">[<expr><name pos:line="21" pos:column="36">i<pos:position pos:line="21" pos:column="37"/></name></expr>]<pos:position pos:line="21" pos:column="38"/></index></name><operator pos:line="21" pos:column="38">.<pos:position pos:line="21" pos:column="39"/></operator><name pos:line="21" pos:column="39">size<pos:position pos:line="21" pos:column="43"/></name> <operator pos:line="21" pos:column="44">*<pos:position pos:line="21" pos:column="45"/></operator> <operator pos:line="21" pos:column="46">(<pos:position pos:line="21" pos:column="47"/></operator><name pos:line="21" pos:column="47">apr_size_t<pos:position pos:line="21" pos:column="57"/></name><operator pos:line="21" pos:column="57">)<pos:position pos:line="21" pos:column="58"/></operator><name pos:line="21" pos:column="58">TEST_SIZE<pos:position pos:line="21" pos:column="67"/></name></expr>;<pos:position pos:line="21" pos:column="68"/></expr_stmt>
        <expr_stmt><expr><name pos:line="22" pos:column="9">rv<pos:position pos:line="22" pos:column="11"/></name> <operator pos:line="22" pos:column="12">=<pos:position pos:line="22" pos:column="13"/></operator> <call><name pos:line="22" pos:column="14">runTest<pos:position pos:line="22" pos:column="21"/></name><argument_list pos:line="22" pos:column="21">(<argument><expr><operator pos:line="22" pos:column="22">&amp;<pos:position pos:line="22" pos:column="27"/></operator><name><name pos:line="22" pos:column="23">testRuns<pos:position pos:line="22" pos:column="31"/></name><index pos:line="22" pos:column="31">[<expr><name pos:line="22" pos:column="32">i<pos:position pos:line="22" pos:column="33"/></name></expr>]<pos:position pos:line="22" pos:column="34"/></index></name></expr></argument>, <argument><expr><operator pos:line="22" pos:column="36">&amp;<pos:position pos:line="22" pos:column="41"/></operator><name><name pos:line="22" pos:column="37">results<pos:position pos:line="22" pos:column="44"/></name><index pos:line="22" pos:column="44">[<expr><name pos:line="22" pos:column="45">i<pos:position pos:line="22" pos:column="46"/></name></expr>]<pos:position pos:line="22" pos:column="47"/></index></name></expr></argument>, <argument><expr><name pos:line="22" pos:column="49">pool<pos:position pos:line="22" pos:column="53"/></name></expr></argument>)<pos:position pos:line="22" pos:column="54"/></argument_list></call></expr>;<pos:position pos:line="22" pos:column="55"/></expr_stmt>
        <if pos:line="23" pos:column="9">if <condition pos:line="23" pos:column="12">(<expr><name pos:line="23" pos:column="13">rv<pos:position pos:line="23" pos:column="15"/></name> <operator pos:line="23" pos:column="16">!=<pos:position pos:line="23" pos:column="18"/></operator> <name pos:line="23" pos:column="19">APR_SUCCESS<pos:position pos:line="23" pos:column="30"/></name></expr>)<pos:position pos:line="23" pos:column="31"/></condition><then pos:line="23" pos:column="31"> <block pos:line="23" pos:column="32">{
            <comment type="block" pos:line="24" pos:column="13">/* error already reported */</comment>
            <expr_stmt><expr><call><name pos:line="25" pos:column="13">exit<pos:position pos:line="25" pos:column="17"/></name><argument_list pos:line="25" pos:column="17">(<argument><expr><literal type="number" pos:line="25" pos:column="18">1<pos:position pos:line="25" pos:column="19"/></literal></expr></argument>)<pos:position pos:line="25" pos:column="20"/></argument_list></call></expr>;<pos:position pos:line="25" pos:column="21"/></expr_stmt>
        }<pos:position pos:line="26" pos:column="10"/></block></then></if>
    }<pos:position pos:line="27" pos:column="6"/></block></for>

    <expr_stmt><expr><call><name pos:line="29" pos:column="5">printf<pos:position pos:line="29" pos:column="11"/></name><argument_list pos:line="29" pos:column="11">(<argument><expr><literal type="string" pos:line="29" pos:column="12">"Tests Complete!\n"<pos:position pos:line="29" pos:column="31"/></literal></expr></argument>)<pos:position pos:line="29" pos:column="32"/></argument_list></call></expr>;<pos:position pos:line="29" pos:column="33"/></expr_stmt>
    <for pos:line="30" pos:column="5">for <control pos:line="30" pos:column="9">(<init><expr><name pos:line="30" pos:column="10">i<pos:position pos:line="30" pos:column="11"/></name> <operator pos:line="30" pos:column="12">=<pos:position pos:line="30" pos:column="13"/></operator> <literal type="number" pos:line="30" pos:column="14">0<pos:position pos:line="30" pos:column="15"/></literal></expr>;<pos:position pos:line="30" pos:column="16"/></init> <condition><expr><name pos:line="30" pos:column="17">i<pos:position pos:line="30" pos:column="18"/></name> <operator pos:line="30" pos:column="19">&lt;<pos:position pos:line="30" pos:column="23"/></operator> <name pos:line="30" pos:column="21">nTests<pos:position pos:line="30" pos:column="27"/></name></expr>;<pos:position pos:line="30" pos:column="28"/></condition> <incr><expr><name pos:line="30" pos:column="29">i<pos:position pos:line="30" pos:column="30"/></name><operator pos:line="30" pos:column="30">++<pos:position pos:line="30" pos:column="32"/></operator></expr></incr>)<pos:position pos:line="30" pos:column="33"/></control> <block pos:line="30" pos:column="34">{
        <decl_stmt><decl><type><name pos:line="31" pos:column="9">int<pos:position pos:line="31" pos:column="12"/></name></type> <name pos:line="31" pos:column="13">j<pos:position pos:line="31" pos:column="14"/></name></decl>;<pos:position pos:line="31" pos:column="15"/></decl_stmt>
        <decl_stmt><decl><type><name pos:line="32" pos:column="9">apr_time_t<pos:position pos:line="32" pos:column="19"/></name></type> <name pos:line="32" pos:column="20">totTime<pos:position pos:line="32" pos:column="27"/></name> <init pos:line="32" pos:column="28">= <expr><literal type="number" pos:line="32" pos:column="30">0<pos:position pos:line="32" pos:column="31"/></literal></expr></init></decl>;<pos:position pos:line="32" pos:column="32"/></decl_stmt>
        <expr_stmt><expr><call><name pos:line="33" pos:column="9">printf<pos:position pos:line="33" pos:column="15"/></name><argument_list pos:line="33" pos:column="15">(<argument><expr><literal type="string" pos:line="33" pos:column="16">"%10d byte block:\n"<pos:position pos:line="33" pos:column="36"/></literal></expr></argument>, <argument><expr><name><name pos:line="33" pos:column="38">results<pos:position pos:line="33" pos:column="45"/></name><index pos:line="33" pos:column="45">[<expr><name pos:line="33" pos:column="46">i<pos:position pos:line="33" pos:column="47"/></name></expr>]<pos:position pos:line="33" pos:column="48"/></index></name><operator pos:line="33" pos:column="48">.<pos:position pos:line="33" pos:column="49"/></operator><name pos:line="33" pos:column="49">size<pos:position pos:line="33" pos:column="53"/></name></expr></argument>)<pos:position pos:line="33" pos:column="54"/></argument_list></call></expr>;<pos:position pos:line="33" pos:column="55"/></expr_stmt>
        <expr_stmt><expr><call><name pos:line="34" pos:column="9">printf<pos:position pos:line="34" pos:column="15"/></name><argument_list pos:line="34" pos:column="15">(<argument><expr><literal type="string" pos:line="34" pos:column="16">"\t%2d iterations : "<pos:position pos:line="34" pos:column="37"/></literal></expr></argument>, <argument><expr><name><name pos:line="34" pos:column="39">results<pos:position pos:line="34" pos:column="46"/></name><index pos:line="34" pos:column="46">[<expr><name pos:line="34" pos:column="47">i<pos:position pos:line="34" pos:column="48"/></name></expr>]<pos:position pos:line="34" pos:column="49"/></index></name><operator pos:line="34" pos:column="49">.<pos:position pos:line="34" pos:column="50"/></operator><name pos:line="34" pos:column="50">iters<pos:position pos:line="34" pos:column="55"/></name></expr></argument>)<pos:position pos:line="34" pos:column="56"/></argument_list></call></expr>;<pos:position pos:line="34" pos:column="57"/></expr_stmt>
        <for pos:line="35" pos:column="9">for <control pos:line="35" pos:column="13">(<init><expr><name pos:line="35" pos:column="14">j<pos:position pos:line="35" pos:column="15"/></name> <operator pos:line="35" pos:column="16">=<pos:position pos:line="35" pos:column="17"/></operator> <literal type="number" pos:line="35" pos:column="18">0<pos:position pos:line="35" pos:column="19"/></literal></expr>;<pos:position pos:line="35" pos:column="20"/></init> <condition><expr><name pos:line="35" pos:column="21">j<pos:position pos:line="35" pos:column="22"/></name> <operator pos:line="35" pos:column="23">&lt;<pos:position pos:line="35" pos:column="27"/></operator> <name><name pos:line="35" pos:column="25">results<pos:position pos:line="35" pos:column="32"/></name><index pos:line="35" pos:column="32">[<expr><name pos:line="35" pos:column="33">i<pos:position pos:line="35" pos:column="34"/></name></expr>]<pos:position pos:line="35" pos:column="35"/></index></name><operator pos:line="35" pos:column="35">.<pos:position pos:line="35" pos:column="36"/></operator><name pos:line="35" pos:column="36">iters<pos:position pos:line="35" pos:column="41"/></name></expr>;<pos:position pos:line="35" pos:column="42"/></condition> <incr><expr><name pos:line="35" pos:column="43">j<pos:position pos:line="35" pos:column="44"/></name><operator pos:line="35" pos:column="44">++<pos:position pos:line="35" pos:column="46"/></operator></expr></incr>)<pos:position pos:line="35" pos:column="47"/></control> <block pos:line="35" pos:column="48">{
            <expr_stmt><expr><call><name pos:line="36" pos:column="13">printf<pos:position pos:line="36" pos:column="19"/></name><argument_list pos:line="36" pos:column="19">(<argument><expr><literal type="string" pos:line="36" pos:column="20">"%6"<pos:position pos:line="36" pos:column="24"/></literal> <name pos:line="36" pos:column="25">APR_TIME_T_FMT<pos:position pos:line="36" pos:column="39"/></name></expr></argument>, <argument><expr><name><name pos:line="36" pos:column="41">results<pos:position pos:line="36" pos:column="48"/></name><index pos:line="36" pos:column="48">[<expr><name pos:line="36" pos:column="49">i<pos:position pos:line="36" pos:column="50"/></name></expr>]<pos:position pos:line="36" pos:column="51"/></index></name><operator pos:line="36" pos:column="51">.<pos:position pos:line="36" pos:column="52"/></operator><name><name pos:line="36" pos:column="52">msecs<pos:position pos:line="36" pos:column="57"/></name><index pos:line="36" pos:column="57">[<expr><name pos:line="36" pos:column="58">j<pos:position pos:line="36" pos:column="59"/></name></expr>]<pos:position pos:line="36" pos:column="60"/></index></name></expr></argument>)<pos:position pos:line="36" pos:column="61"/></argument_list></call></expr>;<pos:position pos:line="36" pos:column="62"/></expr_stmt>
            <expr_stmt><expr><name pos:line="37" pos:column="13">totTime<pos:position pos:line="37" pos:column="20"/></name> <operator pos:line="37" pos:column="21">+=<pos:position pos:line="37" pos:column="23"/></operator> <name><name pos:line="37" pos:column="24">results<pos:position pos:line="37" pos:column="31"/></name><index pos:line="37" pos:column="31">[<expr><name pos:line="37" pos:column="32">i<pos:position pos:line="37" pos:column="33"/></name></expr>]<pos:position pos:line="37" pos:column="34"/></index></name><operator pos:line="37" pos:column="34">.<pos:position pos:line="37" pos:column="35"/></operator><name><name pos:line="37" pos:column="35">msecs<pos:position pos:line="37" pos:column="40"/></name><index pos:line="37" pos:column="40">[<expr><name pos:line="37" pos:column="41">j<pos:position pos:line="37" pos:column="42"/></name></expr>]<pos:position pos:line="37" pos:column="43"/></index></name></expr>;<pos:position pos:line="37" pos:column="44"/></expr_stmt>
        }<pos:position pos:line="38" pos:column="10"/></block></for>
        <expr_stmt><expr><call><name pos:line="39" pos:column="9">printf<pos:position pos:line="39" pos:column="15"/></name><argument_list pos:line="39" pos:column="15">(<argument><expr><literal type="string" pos:line="39" pos:column="16">"&lt;\n"<pos:position pos:line="39" pos:column="24"/></literal></expr></argument>)<pos:position pos:line="39" pos:column="22"/></argument_list></call></expr>;<pos:position pos:line="39" pos:column="23"/></expr_stmt>
        <expr_stmt><expr><call><name pos:line="40" pos:column="9">printf<pos:position pos:line="40" pos:column="15"/></name><argument_list pos:line="40" pos:column="15">(<argument><expr><literal type="string" pos:line="40" pos:column="16">"\t  Average: %6"<pos:position pos:line="40" pos:column="33"/></literal> <name pos:line="40" pos:column="34">APR_TIME_T_FMT<pos:position pos:line="40" pos:column="48"/></name> <literal type="string" pos:line="40" pos:column="49">"\n"<pos:position pos:line="40" pos:column="53"/></literal></expr></argument>,
               <argument><expr><name pos:line="41" pos:column="16">totTime<pos:position pos:line="41" pos:column="23"/></name> <operator pos:line="41" pos:column="24">/<pos:position pos:line="41" pos:column="25"/></operator> <name><name pos:line="41" pos:column="26">results<pos:position pos:line="41" pos:column="33"/></name><index pos:line="41" pos:column="33">[<expr><name pos:line="41" pos:column="34">i<pos:position pos:line="41" pos:column="35"/></name></expr>]<pos:position pos:line="41" pos:column="36"/></index></name><operator pos:line="41" pos:column="36">.<pos:position pos:line="41" pos:column="37"/></operator><name pos:line="41" pos:column="37">iters<pos:position pos:line="41" pos:column="42"/></name></expr></argument>)<pos:position pos:line="41" pos:column="43"/></argument_list></call></expr>;<pos:position pos:line="41" pos:column="44"/></expr_stmt>
    }<pos:position pos:line="42" pos:column="6"/></block></for>

    <return pos:line="44" pos:column="5">return <expr><literal type="number" pos:line="44" pos:column="12">0<pos:position pos:line="44" pos:column="13"/></literal></expr>;<pos:position pos:line="44" pos:column="14"/></return>
}<pos:position pos:line="45" pos:column="2"/></block></function></unit>

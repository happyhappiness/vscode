<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/httpd/gumtree/httpd_function_548.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">int<pos:position pos:line="1" pos:column="4"/></name></type> <name pos:line="1" pos:column="5">ssl_io_buffer_fill<pos:position pos:line="1" pos:column="23"/></name><parameter_list pos:line="1" pos:column="23">(<parameter><decl><type><name pos:line="1" pos:column="24">request_rec<pos:position pos:line="1" pos:column="35"/></name> <modifier pos:line="1" pos:column="36">*<pos:position pos:line="1" pos:column="37"/></modifier></type><name pos:line="1" pos:column="37">r<pos:position pos:line="1" pos:column="38"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="39"/></parameter_list>
<block pos:line="2" pos:column="1">{
    <decl_stmt><decl><type><name pos:line="3" pos:column="5">conn_rec<pos:position pos:line="3" pos:column="13"/></name> <modifier pos:line="3" pos:column="14">*<pos:position pos:line="3" pos:column="15"/></modifier></type><name pos:line="3" pos:column="15">c<pos:position pos:line="3" pos:column="16"/></name> <init pos:line="3" pos:column="17">= <expr><name><name pos:line="3" pos:column="19">r<pos:position pos:line="3" pos:column="20"/></name><operator pos:line="3" pos:column="20">-&gt;<pos:position pos:line="3" pos:column="25"/></operator><name pos:line="3" pos:column="22">connection<pos:position pos:line="3" pos:column="32"/></name></name></expr></init></decl>;<pos:position pos:line="3" pos:column="33"/></decl_stmt>
    <decl_stmt><decl><type><name><name pos:line="4" pos:column="5">struct<pos:position pos:line="4" pos:column="11"/></name> <name pos:line="4" pos:column="12">modssl_buffer_ctx<pos:position pos:line="4" pos:column="29"/></name></name> <modifier pos:line="4" pos:column="30">*<pos:position pos:line="4" pos:column="31"/></modifier></type><name pos:line="4" pos:column="31">ctx<pos:position pos:line="4" pos:column="34"/></name></decl>;<pos:position pos:line="4" pos:column="35"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="5" pos:column="5">apr_bucket_brigade<pos:position pos:line="5" pos:column="23"/></name> <modifier pos:line="5" pos:column="24">*<pos:position pos:line="5" pos:column="25"/></modifier></type><name pos:line="5" pos:column="25">tempb<pos:position pos:line="5" pos:column="30"/></name></decl>;<pos:position pos:line="5" pos:column="31"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="6" pos:column="5">apr_off_t<pos:position pos:line="6" pos:column="14"/></name></type> <name pos:line="6" pos:column="15">total<pos:position pos:line="6" pos:column="20"/></name> <init pos:line="6" pos:column="21">= <expr><literal type="number" pos:line="6" pos:column="23">0<pos:position pos:line="6" pos:column="24"/></literal></expr></init></decl>;<pos:position pos:line="6" pos:column="25"/></decl_stmt> <comment type="block" pos:line="6" pos:column="26">/* total length buffered */</comment>
    <decl_stmt><decl><type><name pos:line="7" pos:column="5">int<pos:position pos:line="7" pos:column="8"/></name></type> <name pos:line="7" pos:column="9">eos<pos:position pos:line="7" pos:column="12"/></name> <init pos:line="7" pos:column="13">= <expr><literal type="number" pos:line="7" pos:column="15">0<pos:position pos:line="7" pos:column="16"/></literal></expr></init></decl>;<pos:position pos:line="7" pos:column="17"/></decl_stmt> <comment type="block" pos:line="7" pos:column="18">/* non-zero once EOS is seen */</comment>
    
    <comment type="block" pos:line="9" pos:column="5">/* Create the context which will be passed to the input filter;
     * containing a setaside pool and a brigade which constrain the
     * lifetime of the buffered data. */</comment>
    <expr_stmt><expr><name pos:line="12" pos:column="5">ctx<pos:position pos:line="12" pos:column="8"/></name> <operator pos:line="12" pos:column="9">=<pos:position pos:line="12" pos:column="10"/></operator> <call><name pos:line="12" pos:column="11">apr_palloc<pos:position pos:line="12" pos:column="21"/></name><argument_list pos:line="12" pos:column="21">(<argument><expr><name><name pos:line="12" pos:column="22">r<pos:position pos:line="12" pos:column="23"/></name><operator pos:line="12" pos:column="23">-&gt;<pos:position pos:line="12" pos:column="28"/></operator><name pos:line="12" pos:column="25">pool<pos:position pos:line="12" pos:column="29"/></name></name></expr></argument>, <argument><expr><sizeof pos:line="12" pos:column="31">sizeof <name><pos:position pos:line="12" pos:column="38"/></name></sizeof>*<name pos:line="12" pos:column="39">ctx<pos:position pos:line="12" pos:column="42"/></name></expr></argument>)<pos:position pos:line="12" pos:column="43"/></argument_list></call></expr>;<pos:position pos:line="12" pos:column="44"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="13" pos:column="5">apr_pool_create<pos:position pos:line="13" pos:column="20"/></name><argument_list pos:line="13" pos:column="20">(<argument><expr><operator pos:line="13" pos:column="21">&amp;<pos:position pos:line="13" pos:column="26"/></operator><name><name pos:line="13" pos:column="22">ctx<pos:position pos:line="13" pos:column="25"/></name><operator pos:line="13" pos:column="25">-&gt;<pos:position pos:line="13" pos:column="30"/></operator><name pos:line="13" pos:column="27">pool<pos:position pos:line="13" pos:column="31"/></name></name></expr></argument>, <argument><expr><name><name pos:line="13" pos:column="33">r<pos:position pos:line="13" pos:column="34"/></name><operator pos:line="13" pos:column="34">-&gt;<pos:position pos:line="13" pos:column="39"/></operator><name pos:line="13" pos:column="36">pool<pos:position pos:line="13" pos:column="40"/></name></name></expr></argument>)<pos:position pos:line="13" pos:column="41"/></argument_list></call></expr>;<pos:position pos:line="13" pos:column="42"/></expr_stmt>
    <expr_stmt><expr><name><name pos:line="14" pos:column="5">ctx<pos:position pos:line="14" pos:column="8"/></name><operator pos:line="14" pos:column="8">-&gt;<pos:position pos:line="14" pos:column="13"/></operator><name pos:line="14" pos:column="10">bb<pos:position pos:line="14" pos:column="12"/></name></name> <operator pos:line="14" pos:column="13">=<pos:position pos:line="14" pos:column="14"/></operator> <call><name pos:line="14" pos:column="15">apr_brigade_create<pos:position pos:line="14" pos:column="33"/></name><argument_list pos:line="14" pos:column="33">(<argument><expr><name><name pos:line="14" pos:column="34">ctx<pos:position pos:line="14" pos:column="37"/></name><operator pos:line="14" pos:column="37">-&gt;<pos:position pos:line="14" pos:column="42"/></operator><name pos:line="14" pos:column="39">pool<pos:position pos:line="14" pos:column="43"/></name></name></expr></argument>, <argument><expr><name><name pos:line="14" pos:column="45">c<pos:position pos:line="14" pos:column="46"/></name><operator pos:line="14" pos:column="46">-&gt;<pos:position pos:line="14" pos:column="51"/></operator><name pos:line="14" pos:column="48">bucket_alloc<pos:position pos:line="14" pos:column="60"/></name></name></expr></argument>)<pos:position pos:line="14" pos:column="61"/></argument_list></call></expr>;<pos:position pos:line="14" pos:column="62"/></expr_stmt>

    <comment type="block" pos:line="16" pos:column="5">/* ... and a temporary brigade. */</comment>
    <expr_stmt><expr><name pos:line="17" pos:column="5">tempb<pos:position pos:line="17" pos:column="10"/></name> <operator pos:line="17" pos:column="11">=<pos:position pos:line="17" pos:column="12"/></operator> <call><name pos:line="17" pos:column="13">apr_brigade_create<pos:position pos:line="17" pos:column="31"/></name><argument_list pos:line="17" pos:column="31">(<argument><expr><name><name pos:line="17" pos:column="32">r<pos:position pos:line="17" pos:column="33"/></name><operator pos:line="17" pos:column="33">-&gt;<pos:position pos:line="17" pos:column="38"/></operator><name pos:line="17" pos:column="35">pool<pos:position pos:line="17" pos:column="39"/></name></name></expr></argument>, <argument><expr><name><name pos:line="17" pos:column="41">c<pos:position pos:line="17" pos:column="42"/></name><operator pos:line="17" pos:column="42">-&gt;<pos:position pos:line="17" pos:column="47"/></operator><name pos:line="17" pos:column="44">bucket_alloc<pos:position pos:line="17" pos:column="56"/></name></name></expr></argument>)<pos:position pos:line="17" pos:column="57"/></argument_list></call></expr>;<pos:position pos:line="17" pos:column="58"/></expr_stmt>

    <expr_stmt><expr><call><name pos:line="19" pos:column="5">ap_log_rerror<pos:position pos:line="19" pos:column="18"/></name><argument_list pos:line="19" pos:column="18">(<argument><expr><name pos:line="19" pos:column="19">APLOG_MARK<pos:position pos:line="19" pos:column="29"/></name></expr></argument>, <argument><expr><name pos:line="19" pos:column="31">APLOG_DEBUG<pos:position pos:line="19" pos:column="42"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="19" pos:column="44">0<pos:position pos:line="19" pos:column="45"/></literal></expr></argument>, <argument><expr><name pos:line="19" pos:column="47">r<pos:position pos:line="19" pos:column="48"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="19" pos:column="50">"filling buffer"<pos:position pos:line="19" pos:column="66"/></literal></expr></argument>)<pos:position pos:line="19" pos:column="67"/></argument_list></call></expr>;<pos:position pos:line="19" pos:column="68"/></expr_stmt>

    <do pos:line="21" pos:column="5">do <block pos:line="21" pos:column="8">{
        <decl_stmt><decl><type><name pos:line="22" pos:column="9">apr_status_t<pos:position pos:line="22" pos:column="21"/></name></type> <name pos:line="22" pos:column="22">rv<pos:position pos:line="22" pos:column="24"/></name></decl>;<pos:position pos:line="22" pos:column="25"/></decl_stmt>
        <decl_stmt><decl><type><name pos:line="23" pos:column="9">apr_bucket<pos:position pos:line="23" pos:column="19"/></name> <modifier pos:line="23" pos:column="20">*<pos:position pos:line="23" pos:column="21"/></modifier></type><name pos:line="23" pos:column="21">e<pos:position pos:line="23" pos:column="22"/></name></decl>, <modifier pos:line="23" pos:column="24">*<pos:position pos:line="23" pos:column="25"/></modifier><decl><type ref="prev"/><name pos:line="23" pos:column="25">next<pos:position pos:line="23" pos:column="29"/></name></decl>;<pos:position pos:line="23" pos:column="30"/></decl_stmt>

        <comment type="block" pos:line="25" pos:column="9">/* The request body is read from the protocol-level input
         * filters; the buffering filter will reinject it from that
         * level, allowing content/resource filters to run later, if
         * necessary. */</comment>

        <expr_stmt><expr><name pos:line="30" pos:column="9">rv<pos:position pos:line="30" pos:column="11"/></name> <operator pos:line="30" pos:column="12">=<pos:position pos:line="30" pos:column="13"/></operator> <call><name pos:line="30" pos:column="14">ap_get_brigade<pos:position pos:line="30" pos:column="28"/></name><argument_list pos:line="30" pos:column="28">(<argument><expr><name><name pos:line="30" pos:column="29">r<pos:position pos:line="30" pos:column="30"/></name><operator pos:line="30" pos:column="30">-&gt;<pos:position pos:line="30" pos:column="35"/></operator><name pos:line="30" pos:column="32">proto_input_filters<pos:position pos:line="30" pos:column="51"/></name></name></expr></argument>, <argument><expr><name pos:line="30" pos:column="53">tempb<pos:position pos:line="30" pos:column="58"/></name></expr></argument>, <argument><expr><name pos:line="30" pos:column="60">AP_MODE_READBYTES<pos:position pos:line="30" pos:column="77"/></name></expr></argument>,
                            <argument><expr><name pos:line="31" pos:column="29">APR_BLOCK_READ<pos:position pos:line="31" pos:column="43"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="31" pos:column="45">8192<pos:position pos:line="31" pos:column="49"/></literal></expr></argument>)<pos:position pos:line="31" pos:column="50"/></argument_list></call></expr>;<pos:position pos:line="31" pos:column="51"/></expr_stmt>
        <if pos:line="32" pos:column="9">if <condition pos:line="32" pos:column="12">(<expr><name pos:line="32" pos:column="13">rv<pos:position pos:line="32" pos:column="15"/></name></expr>)<pos:position pos:line="32" pos:column="16"/></condition><then pos:line="32" pos:column="16"> <block pos:line="32" pos:column="17">{
            <expr_stmt><expr><call><name pos:line="33" pos:column="13">ap_log_rerror<pos:position pos:line="33" pos:column="26"/></name><argument_list pos:line="33" pos:column="26">(<argument><expr><name pos:line="33" pos:column="27">APLOG_MARK<pos:position pos:line="33" pos:column="37"/></name></expr></argument>, <argument><expr><name pos:line="33" pos:column="39">APLOG_ERR<pos:position pos:line="33" pos:column="48"/></name></expr></argument>, <argument><expr><name pos:line="33" pos:column="50">rv<pos:position pos:line="33" pos:column="52"/></name></expr></argument>, <argument><expr><name pos:line="33" pos:column="54">r<pos:position pos:line="33" pos:column="55"/></name></expr></argument>,
                          <argument><expr><literal type="string" pos:line="34" pos:column="27">"could not read request body for SSL buffer"<pos:position pos:line="34" pos:column="71"/></literal></expr></argument>)<pos:position pos:line="34" pos:column="72"/></argument_list></call></expr>;<pos:position pos:line="34" pos:column="73"/></expr_stmt>
            <return pos:line="35" pos:column="13">return <expr><name pos:line="35" pos:column="20">HTTP_INTERNAL_SERVER_ERROR<pos:position pos:line="35" pos:column="46"/></name></expr>;<pos:position pos:line="35" pos:column="47"/></return>
        }<pos:position pos:line="36" pos:column="10"/></block></then></if>
        
        <comment type="block" pos:line="38" pos:column="9">/* Iterate through the returned brigade: setaside each bucket
         * into the context's pool and move it into the brigade. */</comment>
        <for pos:line="40" pos:column="9">for <control pos:line="40" pos:column="13">(<init><expr><name pos:line="40" pos:column="14">e<pos:position pos:line="40" pos:column="15"/></name> <operator pos:line="40" pos:column="16">=<pos:position pos:line="40" pos:column="17"/></operator> <call><name pos:line="40" pos:column="18">APR_BRIGADE_FIRST<pos:position pos:line="40" pos:column="35"/></name><argument_list pos:line="40" pos:column="35">(<argument><expr><name pos:line="40" pos:column="36">tempb<pos:position pos:line="40" pos:column="41"/></name></expr></argument>)<pos:position pos:line="40" pos:column="42"/></argument_list></call></expr>;<pos:position pos:line="40" pos:column="43"/></init> 
             <condition><expr><name pos:line="41" pos:column="14">e<pos:position pos:line="41" pos:column="15"/></name> <operator pos:line="41" pos:column="16">!=<pos:position pos:line="41" pos:column="18"/></operator> <call><name pos:line="41" pos:column="19">APR_BRIGADE_SENTINEL<pos:position pos:line="41" pos:column="39"/></name><argument_list pos:line="41" pos:column="39">(<argument><expr><name pos:line="41" pos:column="40">tempb<pos:position pos:line="41" pos:column="45"/></name></expr></argument>)<pos:position pos:line="41" pos:column="46"/></argument_list></call> <operator pos:line="41" pos:column="47">&amp;&amp;<pos:position pos:line="41" pos:column="57"/></operator> <operator pos:line="41" pos:column="50">!<pos:position pos:line="41" pos:column="51"/></operator><name pos:line="41" pos:column="51">eos<pos:position pos:line="41" pos:column="54"/></name></expr>;<pos:position pos:line="41" pos:column="55"/></condition> <incr><expr><name pos:line="41" pos:column="56">e<pos:position pos:line="41" pos:column="57"/></name> <operator pos:line="41" pos:column="58">=<pos:position pos:line="41" pos:column="59"/></operator> <name pos:line="41" pos:column="60">next<pos:position pos:line="41" pos:column="64"/></name></expr></incr>)<pos:position pos:line="41" pos:column="65"/></control> <block pos:line="41" pos:column="66">{
            <decl_stmt><decl><type><specifier pos:line="42" pos:column="13">const<pos:position pos:line="42" pos:column="18"/></specifier> <name pos:line="42" pos:column="19">char<pos:position pos:line="42" pos:column="23"/></name> <modifier pos:line="42" pos:column="24">*<pos:position pos:line="42" pos:column="25"/></modifier></type><name pos:line="42" pos:column="25">data<pos:position pos:line="42" pos:column="29"/></name></decl>;<pos:position pos:line="42" pos:column="30"/></decl_stmt>
            <decl_stmt><decl><type><name pos:line="43" pos:column="13">apr_size_t<pos:position pos:line="43" pos:column="23"/></name></type> <name pos:line="43" pos:column="24">len<pos:position pos:line="43" pos:column="27"/></name></decl>;<pos:position pos:line="43" pos:column="28"/></decl_stmt>

            <expr_stmt><expr><name pos:line="45" pos:column="13">next<pos:position pos:line="45" pos:column="17"/></name> <operator pos:line="45" pos:column="18">=<pos:position pos:line="45" pos:column="19"/></operator> <call><name pos:line="45" pos:column="20">APR_BUCKET_NEXT<pos:position pos:line="45" pos:column="35"/></name><argument_list pos:line="45" pos:column="35">(<argument><expr><name pos:line="45" pos:column="36">e<pos:position pos:line="45" pos:column="37"/></name></expr></argument>)<pos:position pos:line="45" pos:column="38"/></argument_list></call></expr>;<pos:position pos:line="45" pos:column="39"/></expr_stmt>

            <if pos:line="47" pos:column="13">if <condition pos:line="47" pos:column="16">(<expr><call><name pos:line="47" pos:column="17">APR_BUCKET_IS_EOS<pos:position pos:line="47" pos:column="34"/></name><argument_list pos:line="47" pos:column="34">(<argument><expr><name pos:line="47" pos:column="35">e<pos:position pos:line="47" pos:column="36"/></name></expr></argument>)<pos:position pos:line="47" pos:column="37"/></argument_list></call></expr>)<pos:position pos:line="47" pos:column="38"/></condition><then pos:line="47" pos:column="38"> <block pos:line="47" pos:column="39">{
                <expr_stmt><expr><name pos:line="48" pos:column="17">eos<pos:position pos:line="48" pos:column="20"/></name> <operator pos:line="48" pos:column="21">=<pos:position pos:line="48" pos:column="22"/></operator> <literal type="number" pos:line="48" pos:column="23">1<pos:position pos:line="48" pos:column="24"/></literal></expr>;<pos:position pos:line="48" pos:column="25"/></expr_stmt>
            }<pos:position pos:line="49" pos:column="14"/></block></then> <elseif pos:line="49" pos:column="15">else <if pos:line="49" pos:column="20">if <condition pos:line="49" pos:column="23">(<expr><operator pos:line="49" pos:column="24">!<pos:position pos:line="49" pos:column="25"/></operator><call><name pos:line="49" pos:column="25">APR_BUCKET_IS_METADATA<pos:position pos:line="49" pos:column="47"/></name><argument_list pos:line="49" pos:column="47">(<argument><expr><name pos:line="49" pos:column="48">e<pos:position pos:line="49" pos:column="49"/></name></expr></argument>)<pos:position pos:line="49" pos:column="50"/></argument_list></call></expr>)<pos:position pos:line="49" pos:column="51"/></condition><then pos:line="49" pos:column="51"> <block pos:line="49" pos:column="52">{
                <expr_stmt><expr><name pos:line="50" pos:column="17">rv<pos:position pos:line="50" pos:column="19"/></name> <operator pos:line="50" pos:column="20">=<pos:position pos:line="50" pos:column="21"/></operator> <call><name pos:line="50" pos:column="22">apr_bucket_read<pos:position pos:line="50" pos:column="37"/></name><argument_list pos:line="50" pos:column="37">(<argument><expr><name pos:line="50" pos:column="38">e<pos:position pos:line="50" pos:column="39"/></name></expr></argument>, <argument><expr><operator pos:line="50" pos:column="41">&amp;<pos:position pos:line="50" pos:column="46"/></operator><name pos:line="50" pos:column="42">data<pos:position pos:line="50" pos:column="46"/></name></expr></argument>, <argument><expr><operator pos:line="50" pos:column="48">&amp;<pos:position pos:line="50" pos:column="53"/></operator><name pos:line="50" pos:column="49">len<pos:position pos:line="50" pos:column="52"/></name></expr></argument>, <argument><expr><name pos:line="50" pos:column="54">APR_BLOCK_READ<pos:position pos:line="50" pos:column="68"/></name></expr></argument>)<pos:position pos:line="50" pos:column="69"/></argument_list></call></expr>;<pos:position pos:line="50" pos:column="70"/></expr_stmt>
                <if pos:line="51" pos:column="17">if <condition pos:line="51" pos:column="20">(<expr><name pos:line="51" pos:column="21">rv<pos:position pos:line="51" pos:column="23"/></name> <operator pos:line="51" pos:column="24">!=<pos:position pos:line="51" pos:column="26"/></operator> <name pos:line="51" pos:column="27">APR_SUCCESS<pos:position pos:line="51" pos:column="38"/></name></expr>)<pos:position pos:line="51" pos:column="39"/></condition><then pos:line="51" pos:column="39"> <block pos:line="51" pos:column="40">{
                    <expr_stmt><expr><call><name pos:line="52" pos:column="21">ap_log_rerror<pos:position pos:line="52" pos:column="34"/></name><argument_list pos:line="52" pos:column="34">(<argument><expr><name pos:line="52" pos:column="35">APLOG_MARK<pos:position pos:line="52" pos:column="45"/></name></expr></argument>, <argument><expr><name pos:line="52" pos:column="47">APLOG_ERR<pos:position pos:line="52" pos:column="56"/></name></expr></argument>, <argument><expr><name pos:line="52" pos:column="58">rv<pos:position pos:line="52" pos:column="60"/></name></expr></argument>, <argument><expr><name pos:line="52" pos:column="62">r<pos:position pos:line="52" pos:column="63"/></name></expr></argument>,
                                  <argument><expr><literal type="string" pos:line="53" pos:column="35">"could not read bucket for SSL buffer"<pos:position pos:line="53" pos:column="73"/></literal></expr></argument>)<pos:position pos:line="53" pos:column="74"/></argument_list></call></expr>;<pos:position pos:line="53" pos:column="75"/></expr_stmt>
                    <return pos:line="54" pos:column="21">return <expr><name pos:line="54" pos:column="28">HTTP_INTERNAL_SERVER_ERROR<pos:position pos:line="54" pos:column="54"/></name></expr>;<pos:position pos:line="54" pos:column="55"/></return>
                }<pos:position pos:line="55" pos:column="18"/></block></then></if>
                <expr_stmt><expr><name pos:line="56" pos:column="17">total<pos:position pos:line="56" pos:column="22"/></name> <operator pos:line="56" pos:column="23">+=<pos:position pos:line="56" pos:column="25"/></operator> <name pos:line="56" pos:column="26">len<pos:position pos:line="56" pos:column="29"/></name></expr>;<pos:position pos:line="56" pos:column="30"/></expr_stmt>
            }<pos:position pos:line="57" pos:column="14"/></block></then></if></elseif></if>
                
            <expr_stmt><expr><name pos:line="59" pos:column="13">rv<pos:position pos:line="59" pos:column="15"/></name> <operator pos:line="59" pos:column="16">=<pos:position pos:line="59" pos:column="17"/></operator> <call><name pos:line="59" pos:column="18">apr_bucket_setaside<pos:position pos:line="59" pos:column="37"/></name><argument_list pos:line="59" pos:column="37">(<argument><expr><name pos:line="59" pos:column="38">e<pos:position pos:line="59" pos:column="39"/></name></expr></argument>, <argument><expr><name><name pos:line="59" pos:column="41">ctx<pos:position pos:line="59" pos:column="44"/></name><operator pos:line="59" pos:column="44">-&gt;<pos:position pos:line="59" pos:column="49"/></operator><name pos:line="59" pos:column="46">pool<pos:position pos:line="59" pos:column="50"/></name></name></expr></argument>)<pos:position pos:line="59" pos:column="51"/></argument_list></call></expr>;<pos:position pos:line="59" pos:column="52"/></expr_stmt>
            <if pos:line="60" pos:column="13">if <condition pos:line="60" pos:column="16">(<expr><name pos:line="60" pos:column="17">rv<pos:position pos:line="60" pos:column="19"/></name> <operator pos:line="60" pos:column="20">!=<pos:position pos:line="60" pos:column="22"/></operator> <name pos:line="60" pos:column="23">APR_SUCCESS<pos:position pos:line="60" pos:column="34"/></name></expr>)<pos:position pos:line="60" pos:column="35"/></condition><then pos:line="60" pos:column="35"> <block pos:line="60" pos:column="36">{
                <expr_stmt><expr><call><name pos:line="61" pos:column="17">ap_log_rerror<pos:position pos:line="61" pos:column="30"/></name><argument_list pos:line="61" pos:column="30">(<argument><expr><name pos:line="61" pos:column="31">APLOG_MARK<pos:position pos:line="61" pos:column="41"/></name></expr></argument>, <argument><expr><name pos:line="61" pos:column="43">APLOG_ERR<pos:position pos:line="61" pos:column="52"/></name></expr></argument>, <argument><expr><name pos:line="61" pos:column="54">rv<pos:position pos:line="61" pos:column="56"/></name></expr></argument>, <argument><expr><name pos:line="61" pos:column="58">r<pos:position pos:line="61" pos:column="59"/></name></expr></argument>,
                              <argument><expr><literal type="string" pos:line="62" pos:column="31">"could not setaside bucket for SSL buffer"<pos:position pos:line="62" pos:column="73"/></literal></expr></argument>)<pos:position pos:line="62" pos:column="74"/></argument_list></call></expr>;<pos:position pos:line="62" pos:column="75"/></expr_stmt>
                <return pos:line="63" pos:column="17">return <expr><name pos:line="63" pos:column="24">HTTP_INTERNAL_SERVER_ERROR<pos:position pos:line="63" pos:column="50"/></name></expr>;<pos:position pos:line="63" pos:column="51"/></return>
            }<pos:position pos:line="64" pos:column="14"/></block></then></if>
            
            <expr_stmt><expr><call><name pos:line="66" pos:column="13">APR_BUCKET_REMOVE<pos:position pos:line="66" pos:column="30"/></name><argument_list pos:line="66" pos:column="30">(<argument><expr><name pos:line="66" pos:column="31">e<pos:position pos:line="66" pos:column="32"/></name></expr></argument>)<pos:position pos:line="66" pos:column="33"/></argument_list></call></expr>;<pos:position pos:line="66" pos:column="34"/></expr_stmt>
            <expr_stmt><expr><call><name pos:line="67" pos:column="13">APR_BRIGADE_INSERT_TAIL<pos:position pos:line="67" pos:column="36"/></name><argument_list pos:line="67" pos:column="36">(<argument><expr><name><name pos:line="67" pos:column="37">ctx<pos:position pos:line="67" pos:column="40"/></name><operator pos:line="67" pos:column="40">-&gt;<pos:position pos:line="67" pos:column="45"/></operator><name pos:line="67" pos:column="42">bb<pos:position pos:line="67" pos:column="44"/></name></name></expr></argument>, <argument><expr><name pos:line="67" pos:column="46">e<pos:position pos:line="67" pos:column="47"/></name></expr></argument>)<pos:position pos:line="67" pos:column="48"/></argument_list></call></expr>;<pos:position pos:line="67" pos:column="49"/></expr_stmt>
        }<pos:position pos:line="68" pos:column="10"/></block></for>

        <expr_stmt><expr><call><name pos:line="70" pos:column="9">ap_log_rerror<pos:position pos:line="70" pos:column="22"/></name><argument_list pos:line="70" pos:column="22">(<argument><expr><name pos:line="70" pos:column="23">APLOG_MARK<pos:position pos:line="70" pos:column="33"/></name></expr></argument>, <argument><expr><name pos:line="70" pos:column="35">APLOG_DEBUG<pos:position pos:line="70" pos:column="46"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="70" pos:column="48">0<pos:position pos:line="70" pos:column="49"/></literal></expr></argument>, <argument><expr><name pos:line="70" pos:column="51">r<pos:position pos:line="70" pos:column="52"/></name></expr></argument>, 
                      <argument><expr><literal type="string" pos:line="71" pos:column="23">"total of %"<pos:position pos:line="71" pos:column="35"/></literal> <name pos:line="71" pos:column="36">APR_OFF_T_FMT<pos:position pos:line="71" pos:column="49"/></name> <literal type="string" pos:line="71" pos:column="50">" bytes in buffer, eos=%d"<pos:position pos:line="71" pos:column="76"/></literal></expr></argument>,
                      <argument><expr><name pos:line="72" pos:column="23">total<pos:position pos:line="72" pos:column="28"/></name></expr></argument>, <argument><expr><name pos:line="72" pos:column="30">eos<pos:position pos:line="72" pos:column="33"/></name></expr></argument>)<pos:position pos:line="72" pos:column="34"/></argument_list></call></expr>;<pos:position pos:line="72" pos:column="35"/></expr_stmt>

        <comment type="block" pos:line="74" pos:column="9">/* Fail if this exceeds the maximum buffer size. */</comment>
        <if pos:line="75" pos:column="9">if <condition pos:line="75" pos:column="12">(<expr><name pos:line="75" pos:column="13">total<pos:position pos:line="75" pos:column="18"/></name> <operator pos:line="75" pos:column="19">&gt;<pos:position pos:line="75" pos:column="23"/></operator> <name pos:line="75" pos:column="21">SSL_MAX_IO_BUFFER<pos:position pos:line="75" pos:column="38"/></name></expr>)<pos:position pos:line="75" pos:column="39"/></condition><then pos:line="75" pos:column="39"> <block pos:line="75" pos:column="40">{
            <expr_stmt><expr><call><name pos:line="76" pos:column="13">ap_log_rerror<pos:position pos:line="76" pos:column="26"/></name><argument_list pos:line="76" pos:column="26">(<argument><expr><name pos:line="76" pos:column="27">APLOG_MARK<pos:position pos:line="76" pos:column="37"/></name></expr></argument>, <argument><expr><name pos:line="76" pos:column="39">APLOG_ERR<pos:position pos:line="76" pos:column="48"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="76" pos:column="50">0<pos:position pos:line="76" pos:column="51"/></literal></expr></argument>, <argument><expr><name pos:line="76" pos:column="53">r<pos:position pos:line="76" pos:column="54"/></name></expr></argument>,
                          <argument><expr><literal type="string" pos:line="77" pos:column="27">"request body exceeds maximum size for SSL buffer"<pos:position pos:line="77" pos:column="77"/></literal></expr></argument>)<pos:position pos:line="77" pos:column="78"/></argument_list></call></expr>;<pos:position pos:line="77" pos:column="79"/></expr_stmt>
            <return pos:line="78" pos:column="13">return <expr><name pos:line="78" pos:column="20">HTTP_REQUEST_ENTITY_TOO_LARGE<pos:position pos:line="78" pos:column="49"/></name></expr>;<pos:position pos:line="78" pos:column="50"/></return>
        }<pos:position pos:line="79" pos:column="10"/></block></then></if>

    }<pos:position pos:line="81" pos:column="6"/></block> while <condition pos:line="81" pos:column="13">(<expr><operator pos:line="81" pos:column="14">!<pos:position pos:line="81" pos:column="15"/></operator><name pos:line="81" pos:column="15">eos<pos:position pos:line="81" pos:column="18"/></name></expr>)<pos:position pos:line="81" pos:column="19"/></condition>;<pos:position pos:line="81" pos:column="20"/></do>

    <expr_stmt><expr><call><name pos:line="83" pos:column="5">apr_brigade_destroy<pos:position pos:line="83" pos:column="24"/></name><argument_list pos:line="83" pos:column="24">(<argument><expr><name pos:line="83" pos:column="25">tempb<pos:position pos:line="83" pos:column="30"/></name></expr></argument>)<pos:position pos:line="83" pos:column="31"/></argument_list></call></expr>;<pos:position pos:line="83" pos:column="32"/></expr_stmt>

    <comment type="block" pos:line="85" pos:column="5">/* Insert the filter which will supply the buffered data. */</comment>
    <expr_stmt><expr><call><name pos:line="86" pos:column="5">ap_add_input_filter<pos:position pos:line="86" pos:column="24"/></name><argument_list pos:line="86" pos:column="24">(<argument><expr><name pos:line="86" pos:column="25">ssl_io_buffer<pos:position pos:line="86" pos:column="38"/></name></expr></argument>, <argument><expr><name pos:line="86" pos:column="40">ctx<pos:position pos:line="86" pos:column="43"/></name></expr></argument>, <argument><expr><name pos:line="86" pos:column="45">r<pos:position pos:line="86" pos:column="46"/></name></expr></argument>, <argument><expr><name pos:line="86" pos:column="48">c<pos:position pos:line="86" pos:column="49"/></name></expr></argument>)<pos:position pos:line="86" pos:column="50"/></argument_list></call></expr>;<pos:position pos:line="86" pos:column="51"/></expr_stmt>

    <return pos:line="88" pos:column="5">return <expr><literal type="number" pos:line="88" pos:column="12">0<pos:position pos:line="88" pos:column="13"/></literal></expr>;<pos:position pos:line="88" pos:column="14"/></return>
}<pos:position pos:line="89" pos:column="2"/></block></function></unit>

<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/httpd/gumtree/httpd_function_7177.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">void<pos:position pos:line="1" pos:column="12"/></name></type> <name pos:line="1" pos:column="13">store_slotmem<pos:position pos:line="1" pos:column="26"/></name><parameter_list pos:line="1" pos:column="26">(<parameter><decl><type><name pos:line="1" pos:column="27">ap_slotmem_instance_t<pos:position pos:line="1" pos:column="48"/></name> <modifier pos:line="1" pos:column="49">*<pos:position pos:line="1" pos:column="50"/></modifier></type><name pos:line="1" pos:column="50">slotmem<pos:position pos:line="1" pos:column="57"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="58"/></parameter_list>
<block pos:line="2" pos:column="1">{
    <decl_stmt><decl><type><name pos:line="3" pos:column="5">apr_file_t<pos:position pos:line="3" pos:column="15"/></name> <modifier pos:line="3" pos:column="16">*<pos:position pos:line="3" pos:column="17"/></modifier></type><name pos:line="3" pos:column="17">fp<pos:position pos:line="3" pos:column="19"/></name></decl>;<pos:position pos:line="3" pos:column="20"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="4" pos:column="5">apr_status_t<pos:position pos:line="4" pos:column="17"/></name></type> <name pos:line="4" pos:column="18">rv<pos:position pos:line="4" pos:column="20"/></name></decl>;<pos:position pos:line="4" pos:column="21"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="5" pos:column="5">apr_size_t<pos:position pos:line="5" pos:column="15"/></name></type> <name pos:line="5" pos:column="16">nbytes<pos:position pos:line="5" pos:column="22"/></name></decl>;<pos:position pos:line="5" pos:column="23"/></decl_stmt>
    <decl_stmt><decl><type><specifier pos:line="6" pos:column="5">const<pos:position pos:line="6" pos:column="10"/></specifier> <name pos:line="6" pos:column="11">char<pos:position pos:line="6" pos:column="15"/></name> <modifier pos:line="6" pos:column="16">*<pos:position pos:line="6" pos:column="17"/></modifier></type><name pos:line="6" pos:column="17">storename<pos:position pos:line="6" pos:column="26"/></name></decl>;<pos:position pos:line="6" pos:column="27"/></decl_stmt>

    <expr_stmt><expr><name pos:line="8" pos:column="5">storename<pos:position pos:line="8" pos:column="14"/></name> <operator pos:line="8" pos:column="15">=<pos:position pos:line="8" pos:column="16"/></operator> <call><name pos:line="8" pos:column="17">slotmem_filename<pos:position pos:line="8" pos:column="33"/></name><argument_list pos:line="8" pos:column="33">(<argument><expr><name><name pos:line="8" pos:column="34">slotmem<pos:position pos:line="8" pos:column="41"/></name><operator pos:line="8" pos:column="41">-&gt;<pos:position pos:line="8" pos:column="46"/></operator><name pos:line="8" pos:column="43">gpool<pos:position pos:line="8" pos:column="48"/></name></name></expr></argument>, <argument><expr><name><name pos:line="8" pos:column="50">slotmem<pos:position pos:line="8" pos:column="57"/></name><operator pos:line="8" pos:column="57">-&gt;<pos:position pos:line="8" pos:column="62"/></operator><name pos:line="8" pos:column="59">name<pos:position pos:line="8" pos:column="63"/></name></name></expr></argument>, <argument><expr><literal type="number" pos:line="8" pos:column="65">1<pos:position pos:line="8" pos:column="66"/></literal></expr></argument>)<pos:position pos:line="8" pos:column="67"/></argument_list></call></expr>;<pos:position pos:line="8" pos:column="68"/></expr_stmt>

    <expr_stmt><expr><call><name pos:line="10" pos:column="5">ap_log_error<pos:position pos:line="10" pos:column="17"/></name><argument_list pos:line="10" pos:column="17">(<argument><expr><name pos:line="10" pos:column="18">APLOG_MARK<pos:position pos:line="10" pos:column="28"/></name></expr></argument>, <argument><expr><name pos:line="10" pos:column="30">APLOG_DEBUG<pos:position pos:line="10" pos:column="41"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="10" pos:column="43">0<pos:position pos:line="10" pos:column="44"/></literal></expr></argument>, <argument><expr><name pos:line="10" pos:column="46">ap_server_conf<pos:position pos:line="10" pos:column="60"/></name></expr></argument>, <argument><expr><call><name pos:line="10" pos:column="62">APLOGNO<pos:position pos:line="10" pos:column="69"/></name><argument_list pos:line="10" pos:column="69">(<argument><expr><literal type="number" pos:line="10" pos:column="70">02334<pos:position pos:line="10" pos:column="75"/></literal></expr></argument>)<pos:position pos:line="10" pos:column="76"/></argument_list></call>
                 <literal type="string" pos:line="11" pos:column="18">"storing %s"<pos:position pos:line="11" pos:column="30"/></literal></expr></argument>, <argument><expr><name pos:line="11" pos:column="32">storename<pos:position pos:line="11" pos:column="41"/></name></expr></argument>)<pos:position pos:line="11" pos:column="42"/></argument_list></call></expr>;<pos:position pos:line="11" pos:column="43"/></expr_stmt>

    <if pos:line="13" pos:column="5">if <condition pos:line="13" pos:column="8">(<expr><name pos:line="13" pos:column="9">storename<pos:position pos:line="13" pos:column="18"/></name></expr>)<pos:position pos:line="13" pos:column="19"/></condition><then pos:line="13" pos:column="19"> <block pos:line="13" pos:column="20">{
        <expr_stmt><expr><name pos:line="14" pos:column="9">rv<pos:position pos:line="14" pos:column="11"/></name> <operator pos:line="14" pos:column="12">=<pos:position pos:line="14" pos:column="13"/></operator> <call><name pos:line="14" pos:column="14">apr_file_open<pos:position pos:line="14" pos:column="27"/></name><argument_list pos:line="14" pos:column="27">(<argument><expr><operator pos:line="14" pos:column="28">&amp;<pos:position pos:line="14" pos:column="33"/></operator><name pos:line="14" pos:column="29">fp<pos:position pos:line="14" pos:column="31"/></name></expr></argument>, <argument><expr><name pos:line="14" pos:column="33">storename<pos:position pos:line="14" pos:column="42"/></name></expr></argument>, <argument><expr><name pos:line="14" pos:column="44">APR_CREATE<pos:position pos:line="14" pos:column="54"/></name> <operator pos:line="14" pos:column="55">|<pos:position pos:line="14" pos:column="56"/></operator> <name pos:line="14" pos:column="57">APR_READ<pos:position pos:line="14" pos:column="65"/></name> <operator pos:line="14" pos:column="66">|<pos:position pos:line="14" pos:column="67"/></operator> <name pos:line="14" pos:column="68">APR_WRITE<pos:position pos:line="14" pos:column="77"/></name></expr></argument>,
                           <argument><expr><name pos:line="15" pos:column="28">APR_OS_DEFAULT<pos:position pos:line="15" pos:column="42"/></name></expr></argument>, <argument><expr><name><name pos:line="15" pos:column="44">slotmem<pos:position pos:line="15" pos:column="51"/></name><operator pos:line="15" pos:column="51">-&gt;<pos:position pos:line="15" pos:column="56"/></operator><name pos:line="15" pos:column="53">gpool<pos:position pos:line="15" pos:column="58"/></name></name></expr></argument>)<pos:position pos:line="15" pos:column="59"/></argument_list></call></expr>;<pos:position pos:line="15" pos:column="60"/></expr_stmt>
        <if pos:line="16" pos:column="9">if <condition pos:line="16" pos:column="12">(<expr><call><name pos:line="16" pos:column="13">APR_STATUS_IS_EEXIST<pos:position pos:line="16" pos:column="33"/></name><argument_list pos:line="16" pos:column="33">(<argument><expr><name pos:line="16" pos:column="34">rv<pos:position pos:line="16" pos:column="36"/></name></expr></argument>)<pos:position pos:line="16" pos:column="37"/></argument_list></call></expr>)<pos:position pos:line="16" pos:column="38"/></condition><then pos:line="16" pos:column="38"> <block pos:line="16" pos:column="39">{
            <expr_stmt><expr><call><name pos:line="17" pos:column="13">apr_file_remove<pos:position pos:line="17" pos:column="28"/></name><argument_list pos:line="17" pos:column="28">(<argument><expr><name pos:line="17" pos:column="29">storename<pos:position pos:line="17" pos:column="38"/></name></expr></argument>, <argument><expr><name><name pos:line="17" pos:column="40">slotmem<pos:position pos:line="17" pos:column="47"/></name><operator pos:line="17" pos:column="47">-&gt;<pos:position pos:line="17" pos:column="52"/></operator><name pos:line="17" pos:column="49">gpool<pos:position pos:line="17" pos:column="54"/></name></name></expr></argument>)<pos:position pos:line="17" pos:column="55"/></argument_list></call></expr>;<pos:position pos:line="17" pos:column="56"/></expr_stmt>
            <expr_stmt><expr><name pos:line="18" pos:column="13">rv<pos:position pos:line="18" pos:column="15"/></name> <operator pos:line="18" pos:column="16">=<pos:position pos:line="18" pos:column="17"/></operator> <call><name pos:line="18" pos:column="18">apr_file_open<pos:position pos:line="18" pos:column="31"/></name><argument_list pos:line="18" pos:column="31">(<argument><expr><operator pos:line="18" pos:column="32">&amp;<pos:position pos:line="18" pos:column="37"/></operator><name pos:line="18" pos:column="33">fp<pos:position pos:line="18" pos:column="35"/></name></expr></argument>, <argument><expr><name pos:line="18" pos:column="37">storename<pos:position pos:line="18" pos:column="46"/></name></expr></argument>, <argument><expr><name pos:line="18" pos:column="48">APR_CREATE<pos:position pos:line="18" pos:column="58"/></name> <operator pos:line="18" pos:column="59">|<pos:position pos:line="18" pos:column="60"/></operator> <name pos:line="18" pos:column="61">APR_READ<pos:position pos:line="18" pos:column="69"/></name> <operator pos:line="18" pos:column="70">|<pos:position pos:line="18" pos:column="71"/></operator> <name pos:line="18" pos:column="72">APR_WRITE<pos:position pos:line="18" pos:column="81"/></name></expr></argument>,
                               <argument><expr><name pos:line="19" pos:column="32">APR_OS_DEFAULT<pos:position pos:line="19" pos:column="46"/></name></expr></argument>, <argument><expr><name><name pos:line="19" pos:column="48">slotmem<pos:position pos:line="19" pos:column="55"/></name><operator pos:line="19" pos:column="55">-&gt;<pos:position pos:line="19" pos:column="60"/></operator><name pos:line="19" pos:column="57">gpool<pos:position pos:line="19" pos:column="62"/></name></name></expr></argument>)<pos:position pos:line="19" pos:column="63"/></argument_list></call></expr>;<pos:position pos:line="19" pos:column="64"/></expr_stmt>
        }<pos:position pos:line="20" pos:column="10"/></block></then></if>
        <if pos:line="21" pos:column="9">if <condition pos:line="21" pos:column="12">(<expr><name pos:line="21" pos:column="13">rv<pos:position pos:line="21" pos:column="15"/></name> <operator pos:line="21" pos:column="16">!=<pos:position pos:line="21" pos:column="18"/></operator> <name pos:line="21" pos:column="19">APR_SUCCESS<pos:position pos:line="21" pos:column="30"/></name></expr>)<pos:position pos:line="21" pos:column="31"/></condition><then pos:line="21" pos:column="31"> <block pos:line="21" pos:column="32">{
            <return pos:line="22" pos:column="13">return;<pos:position pos:line="22" pos:column="20"/></return>
        }<pos:position pos:line="23" pos:column="10"/></block></then></if>
        <if pos:line="24" pos:column="9">if <condition pos:line="24" pos:column="12">(<expr><call><name pos:line="24" pos:column="13">AP_SLOTMEM_IS_CLEARINUSE<pos:position pos:line="24" pos:column="37"/></name><argument_list pos:line="24" pos:column="37">(<argument><expr><name pos:line="24" pos:column="38">slotmem<pos:position pos:line="24" pos:column="45"/></name></expr></argument>)<pos:position pos:line="24" pos:column="46"/></argument_list></call></expr>)<pos:position pos:line="24" pos:column="47"/></condition><then pos:line="24" pos:column="47"> <block pos:line="24" pos:column="48">{
            <expr_stmt><expr><call><name pos:line="25" pos:column="13">slotmem_clearinuse<pos:position pos:line="25" pos:column="31"/></name><argument_list pos:line="25" pos:column="31">(<argument><expr><name pos:line="25" pos:column="32">slotmem<pos:position pos:line="25" pos:column="39"/></name></expr></argument>)<pos:position pos:line="25" pos:column="40"/></argument_list></call></expr>;<pos:position pos:line="25" pos:column="41"/></expr_stmt>
        }<pos:position pos:line="26" pos:column="10"/></block></then></if>
        <expr_stmt><expr><name pos:line="27" pos:column="9">nbytes<pos:position pos:line="27" pos:column="15"/></name> <operator pos:line="27" pos:column="16">=<pos:position pos:line="27" pos:column="17"/></operator> <operator pos:line="27" pos:column="18">(<pos:position pos:line="27" pos:column="19"/></operator><name><name pos:line="27" pos:column="19">slotmem<pos:position pos:line="27" pos:column="26"/></name><operator pos:line="27" pos:column="26">-&gt;<pos:position pos:line="27" pos:column="31"/></operator><name pos:line="27" pos:column="28">desc<pos:position pos:line="27" pos:column="32"/></name><operator pos:line="27" pos:column="32">.<pos:position pos:line="27" pos:column="33"/></operator><name pos:line="27" pos:column="33">size<pos:position pos:line="27" pos:column="37"/></name></name> <operator pos:line="27" pos:column="38">*<pos:position pos:line="27" pos:column="39"/></operator> <name><name pos:line="27" pos:column="40">slotmem<pos:position pos:line="27" pos:column="47"/></name><operator pos:line="27" pos:column="47">-&gt;<pos:position pos:line="27" pos:column="52"/></operator><name pos:line="27" pos:column="49">desc<pos:position pos:line="27" pos:column="53"/></name><operator pos:line="27" pos:column="53">.<pos:position pos:line="27" pos:column="54"/></operator><name pos:line="27" pos:column="54">num<pos:position pos:line="27" pos:column="57"/></name></name><operator pos:line="27" pos:column="57">)<pos:position pos:line="27" pos:column="58"/></operator> <operator pos:line="27" pos:column="59">+<pos:position pos:line="27" pos:column="60"/></operator>
                 <operator pos:line="28" pos:column="18">(<pos:position pos:line="28" pos:column="19"/></operator><name><name pos:line="28" pos:column="19">slotmem<pos:position pos:line="28" pos:column="26"/></name><operator pos:line="28" pos:column="26">-&gt;<pos:position pos:line="28" pos:column="31"/></operator><name pos:line="28" pos:column="28">desc<pos:position pos:line="28" pos:column="32"/></name><operator pos:line="28" pos:column="32">.<pos:position pos:line="28" pos:column="33"/></operator><name pos:line="28" pos:column="33">num<pos:position pos:line="28" pos:column="36"/></name></name> <operator pos:line="28" pos:column="37">*<pos:position pos:line="28" pos:column="38"/></operator> <sizeof pos:line="28" pos:column="39">sizeof<argument_list pos:line="28" pos:column="45">(<argument><expr><name pos:line="28" pos:column="46">char<pos:position pos:line="28" pos:column="50"/></name></expr></argument>)<pos:position pos:line="28" pos:column="51"/></argument_list></sizeof><operator pos:line="28" pos:column="51">)<pos:position pos:line="28" pos:column="52"/></operator> <operator pos:line="28" pos:column="53">+<pos:position pos:line="28" pos:column="54"/></operator> <name pos:line="28" pos:column="55">AP_UNSIGNEDINT_OFFSET<pos:position pos:line="28" pos:column="76"/></name></expr>;<pos:position pos:line="28" pos:column="77"/></expr_stmt>
        <comment type="block" pos:line="29" pos:column="9">/* XXX: Error handling */</comment>
        <expr_stmt><expr><call><name pos:line="30" pos:column="9">apr_file_write_full<pos:position pos:line="30" pos:column="28"/></name><argument_list pos:line="30" pos:column="28">(<argument><expr><name pos:line="30" pos:column="29">fp<pos:position pos:line="30" pos:column="31"/></name></expr></argument>, <argument><expr><name><name pos:line="30" pos:column="33">slotmem<pos:position pos:line="30" pos:column="40"/></name><operator pos:line="30" pos:column="40">-&gt;<pos:position pos:line="30" pos:column="45"/></operator><name pos:line="30" pos:column="42">persist<pos:position pos:line="30" pos:column="49"/></name></name></expr></argument>, <argument><expr><name pos:line="30" pos:column="51">nbytes<pos:position pos:line="30" pos:column="57"/></name></expr></argument>, <argument><expr><name pos:line="30" pos:column="59">NULL<pos:position pos:line="30" pos:column="63"/></name></expr></argument>)<pos:position pos:line="30" pos:column="64"/></argument_list></call></expr>;<pos:position pos:line="30" pos:column="65"/></expr_stmt>
        <expr_stmt><expr><call><name pos:line="31" pos:column="9">apr_file_close<pos:position pos:line="31" pos:column="23"/></name><argument_list pos:line="31" pos:column="23">(<argument><expr><name pos:line="31" pos:column="24">fp<pos:position pos:line="31" pos:column="26"/></name></expr></argument>)<pos:position pos:line="31" pos:column="27"/></argument_list></call></expr>;<pos:position pos:line="31" pos:column="28"/></expr_stmt>
    }<pos:position pos:line="32" pos:column="6"/></block></then></if>
}<pos:position pos:line="33" pos:column="2"/></block></function></unit>

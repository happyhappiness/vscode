<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/httpd/gumtree/httpd_function_4094.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">int<pos:position pos:line="1" pos:column="11"/></name></type> <name pos:line="1" pos:column="12">unique_id_global_init<pos:position pos:line="1" pos:column="33"/></name><parameter_list pos:line="1" pos:column="33">(<parameter><decl><type><name pos:line="1" pos:column="34">apr_pool_t<pos:position pos:line="1" pos:column="44"/></name> <modifier pos:line="1" pos:column="45">*<pos:position pos:line="1" pos:column="46"/></modifier></type><name pos:line="1" pos:column="46">p<pos:position pos:line="1" pos:column="47"/></name></decl></parameter>, <parameter><decl><type><name pos:line="1" pos:column="49">apr_pool_t<pos:position pos:line="1" pos:column="59"/></name> <modifier pos:line="1" pos:column="60">*<pos:position pos:line="1" pos:column="61"/></modifier></type><name pos:line="1" pos:column="61">plog<pos:position pos:line="1" pos:column="65"/></name></decl></parameter>, <parameter><decl><type><name pos:line="1" pos:column="67">apr_pool_t<pos:position pos:line="1" pos:column="77"/></name> <modifier pos:line="1" pos:column="78">*<pos:position pos:line="1" pos:column="79"/></modifier></type><name pos:line="1" pos:column="79">ptemp<pos:position pos:line="1" pos:column="84"/></name></decl></parameter>, <parameter><decl><type><name pos:line="1" pos:column="86">server_rec<pos:position pos:line="1" pos:column="96"/></name> <modifier pos:line="1" pos:column="97">*<pos:position pos:line="1" pos:column="98"/></modifier></type><name pos:line="1" pos:column="98">main_server<pos:position pos:line="1" pos:column="109"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="110"/></parameter_list>
<block pos:line="2" pos:column="1">{
    <decl_stmt><decl><type><name pos:line="3" pos:column="5">char<pos:position pos:line="3" pos:column="9"/></name></type> <name><name pos:line="3" pos:column="10">str<pos:position pos:line="3" pos:column="13"/></name><index pos:line="3" pos:column="13">[<expr><name pos:line="3" pos:column="14">APRMAXHOSTLEN<pos:position pos:line="3" pos:column="27"/></name> <operator pos:line="3" pos:column="28">+<pos:position pos:line="3" pos:column="29"/></operator> <literal type="number" pos:line="3" pos:column="30">1<pos:position pos:line="3" pos:column="31"/></literal></expr>]<pos:position pos:line="3" pos:column="32"/></index></name></decl>;<pos:position pos:line="3" pos:column="33"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="4" pos:column="5">apr_status_t<pos:position pos:line="4" pos:column="17"/></name></type> <name pos:line="4" pos:column="18">rv<pos:position pos:line="4" pos:column="20"/></name></decl>;<pos:position pos:line="4" pos:column="21"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="5" pos:column="5">char<pos:position pos:line="5" pos:column="9"/></name> <modifier pos:line="5" pos:column="10">*<pos:position pos:line="5" pos:column="11"/></modifier></type><name pos:line="5" pos:column="11">ipaddrstr<pos:position pos:line="5" pos:column="20"/></name></decl>;<pos:position pos:line="5" pos:column="21"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="6" pos:column="5">apr_sockaddr_t<pos:position pos:line="6" pos:column="19"/></name> <modifier pos:line="6" pos:column="20">*<pos:position pos:line="6" pos:column="21"/></modifier></type><name pos:line="6" pos:column="21">sockaddr<pos:position pos:line="6" pos:column="29"/></name></decl>;<pos:position pos:line="6" pos:column="30"/></decl_stmt>

    <comment type="block" pos:line="8" pos:column="5">/*
     * Calculate the sizes and offsets in cur_unique_id.
     */</comment>
    <expr_stmt><expr><name><name pos:line="11" pos:column="5">unique_id_rec_offset<pos:position pos:line="11" pos:column="25"/></name><index pos:line="11" pos:column="25">[<expr><literal type="number" pos:line="11" pos:column="26">0<pos:position pos:line="11" pos:column="27"/></literal></expr>]<pos:position pos:line="11" pos:column="28"/></index></name> <operator pos:line="11" pos:column="29">=<pos:position pos:line="11" pos:column="30"/></operator> <call><name pos:line="11" pos:column="31">APR_OFFSETOF<pos:position pos:line="11" pos:column="43"/></name><argument_list pos:line="11" pos:column="43">(<argument><expr><name pos:line="11" pos:column="44">unique_id_rec<pos:position pos:line="11" pos:column="57"/></name></expr></argument>, <argument><expr><name pos:line="11" pos:column="59">stamp<pos:position pos:line="11" pos:column="64"/></name></expr></argument>)<pos:position pos:line="11" pos:column="65"/></argument_list></call></expr>;<pos:position pos:line="11" pos:column="66"/></expr_stmt>
    <expr_stmt><expr><name><name pos:line="12" pos:column="5">unique_id_rec_size<pos:position pos:line="12" pos:column="23"/></name><index pos:line="12" pos:column="23">[<expr><literal type="number" pos:line="12" pos:column="24">0<pos:position pos:line="12" pos:column="25"/></literal></expr>]<pos:position pos:line="12" pos:column="26"/></index></name> <operator pos:line="12" pos:column="27">=<pos:position pos:line="12" pos:column="28"/></operator> <sizeof pos:line="12" pos:column="29">sizeof<argument_list pos:line="12" pos:column="35">(<argument><expr><name><name pos:line="12" pos:column="36">cur_unique_id<pos:position pos:line="12" pos:column="49"/></name><operator pos:line="12" pos:column="49">.<pos:position pos:line="12" pos:column="50"/></operator><name pos:line="12" pos:column="50">stamp<pos:position pos:line="12" pos:column="55"/></name></name></expr></argument>)<pos:position pos:line="12" pos:column="56"/></argument_list></sizeof></expr>;<pos:position pos:line="12" pos:column="57"/></expr_stmt>
    <expr_stmt><expr><name><name pos:line="13" pos:column="5">unique_id_rec_offset<pos:position pos:line="13" pos:column="25"/></name><index pos:line="13" pos:column="25">[<expr><literal type="number" pos:line="13" pos:column="26">1<pos:position pos:line="13" pos:column="27"/></literal></expr>]<pos:position pos:line="13" pos:column="28"/></index></name> <operator pos:line="13" pos:column="29">=<pos:position pos:line="13" pos:column="30"/></operator> <call><name pos:line="13" pos:column="31">APR_OFFSETOF<pos:position pos:line="13" pos:column="43"/></name><argument_list pos:line="13" pos:column="43">(<argument><expr><name pos:line="13" pos:column="44">unique_id_rec<pos:position pos:line="13" pos:column="57"/></name></expr></argument>, <argument><expr><name pos:line="13" pos:column="59">in_addr<pos:position pos:line="13" pos:column="66"/></name></expr></argument>)<pos:position pos:line="13" pos:column="67"/></argument_list></call></expr>;<pos:position pos:line="13" pos:column="68"/></expr_stmt>
    <expr_stmt><expr><name><name pos:line="14" pos:column="5">unique_id_rec_size<pos:position pos:line="14" pos:column="23"/></name><index pos:line="14" pos:column="23">[<expr><literal type="number" pos:line="14" pos:column="24">1<pos:position pos:line="14" pos:column="25"/></literal></expr>]<pos:position pos:line="14" pos:column="26"/></index></name> <operator pos:line="14" pos:column="27">=<pos:position pos:line="14" pos:column="28"/></operator> <sizeof pos:line="14" pos:column="29">sizeof<argument_list pos:line="14" pos:column="35">(<argument><expr><name><name pos:line="14" pos:column="36">cur_unique_id<pos:position pos:line="14" pos:column="49"/></name><operator pos:line="14" pos:column="49">.<pos:position pos:line="14" pos:column="50"/></operator><name pos:line="14" pos:column="50">in_addr<pos:position pos:line="14" pos:column="57"/></name></name></expr></argument>)<pos:position pos:line="14" pos:column="58"/></argument_list></sizeof></expr>;<pos:position pos:line="14" pos:column="59"/></expr_stmt>
    <expr_stmt><expr><name><name pos:line="15" pos:column="5">unique_id_rec_offset<pos:position pos:line="15" pos:column="25"/></name><index pos:line="15" pos:column="25">[<expr><literal type="number" pos:line="15" pos:column="26">2<pos:position pos:line="15" pos:column="27"/></literal></expr>]<pos:position pos:line="15" pos:column="28"/></index></name> <operator pos:line="15" pos:column="29">=<pos:position pos:line="15" pos:column="30"/></operator> <call><name pos:line="15" pos:column="31">APR_OFFSETOF<pos:position pos:line="15" pos:column="43"/></name><argument_list pos:line="15" pos:column="43">(<argument><expr><name pos:line="15" pos:column="44">unique_id_rec<pos:position pos:line="15" pos:column="57"/></name></expr></argument>, <argument><expr><name pos:line="15" pos:column="59">pid<pos:position pos:line="15" pos:column="62"/></name></expr></argument>)<pos:position pos:line="15" pos:column="63"/></argument_list></call></expr>;<pos:position pos:line="15" pos:column="64"/></expr_stmt>
    <expr_stmt><expr><name><name pos:line="16" pos:column="5">unique_id_rec_size<pos:position pos:line="16" pos:column="23"/></name><index pos:line="16" pos:column="23">[<expr><literal type="number" pos:line="16" pos:column="24">2<pos:position pos:line="16" pos:column="25"/></literal></expr>]<pos:position pos:line="16" pos:column="26"/></index></name> <operator pos:line="16" pos:column="27">=<pos:position pos:line="16" pos:column="28"/></operator> <sizeof pos:line="16" pos:column="29">sizeof<argument_list pos:line="16" pos:column="35">(<argument><expr><name><name pos:line="16" pos:column="36">cur_unique_id<pos:position pos:line="16" pos:column="49"/></name><operator pos:line="16" pos:column="49">.<pos:position pos:line="16" pos:column="50"/></operator><name pos:line="16" pos:column="50">pid<pos:position pos:line="16" pos:column="53"/></name></name></expr></argument>)<pos:position pos:line="16" pos:column="54"/></argument_list></sizeof></expr>;<pos:position pos:line="16" pos:column="55"/></expr_stmt>
    <expr_stmt><expr><name><name pos:line="17" pos:column="5">unique_id_rec_offset<pos:position pos:line="17" pos:column="25"/></name><index pos:line="17" pos:column="25">[<expr><literal type="number" pos:line="17" pos:column="26">3<pos:position pos:line="17" pos:column="27"/></literal></expr>]<pos:position pos:line="17" pos:column="28"/></index></name> <operator pos:line="17" pos:column="29">=<pos:position pos:line="17" pos:column="30"/></operator> <call><name pos:line="17" pos:column="31">APR_OFFSETOF<pos:position pos:line="17" pos:column="43"/></name><argument_list pos:line="17" pos:column="43">(<argument><expr><name pos:line="17" pos:column="44">unique_id_rec<pos:position pos:line="17" pos:column="57"/></name></expr></argument>, <argument><expr><name pos:line="17" pos:column="59">counter<pos:position pos:line="17" pos:column="66"/></name></expr></argument>)<pos:position pos:line="17" pos:column="67"/></argument_list></call></expr>;<pos:position pos:line="17" pos:column="68"/></expr_stmt>
    <expr_stmt><expr><name><name pos:line="18" pos:column="5">unique_id_rec_size<pos:position pos:line="18" pos:column="23"/></name><index pos:line="18" pos:column="23">[<expr><literal type="number" pos:line="18" pos:column="24">3<pos:position pos:line="18" pos:column="25"/></literal></expr>]<pos:position pos:line="18" pos:column="26"/></index></name> <operator pos:line="18" pos:column="27">=<pos:position pos:line="18" pos:column="28"/></operator> <sizeof pos:line="18" pos:column="29">sizeof<argument_list pos:line="18" pos:column="35">(<argument><expr><name><name pos:line="18" pos:column="36">cur_unique_id<pos:position pos:line="18" pos:column="49"/></name><operator pos:line="18" pos:column="49">.<pos:position pos:line="18" pos:column="50"/></operator><name pos:line="18" pos:column="50">counter<pos:position pos:line="18" pos:column="57"/></name></name></expr></argument>)<pos:position pos:line="18" pos:column="58"/></argument_list></sizeof></expr>;<pos:position pos:line="18" pos:column="59"/></expr_stmt>
    <expr_stmt><expr><name><name pos:line="19" pos:column="5">unique_id_rec_offset<pos:position pos:line="19" pos:column="25"/></name><index pos:line="19" pos:column="25">[<expr><literal type="number" pos:line="19" pos:column="26">4<pos:position pos:line="19" pos:column="27"/></literal></expr>]<pos:position pos:line="19" pos:column="28"/></index></name> <operator pos:line="19" pos:column="29">=<pos:position pos:line="19" pos:column="30"/></operator> <call><name pos:line="19" pos:column="31">APR_OFFSETOF<pos:position pos:line="19" pos:column="43"/></name><argument_list pos:line="19" pos:column="43">(<argument><expr><name pos:line="19" pos:column="44">unique_id_rec<pos:position pos:line="19" pos:column="57"/></name></expr></argument>, <argument><expr><name pos:line="19" pos:column="59">thread_index<pos:position pos:line="19" pos:column="71"/></name></expr></argument>)<pos:position pos:line="19" pos:column="72"/></argument_list></call></expr>;<pos:position pos:line="19" pos:column="73"/></expr_stmt>
    <expr_stmt><expr><name><name pos:line="20" pos:column="5">unique_id_rec_size<pos:position pos:line="20" pos:column="23"/></name><index pos:line="20" pos:column="23">[<expr><literal type="number" pos:line="20" pos:column="24">4<pos:position pos:line="20" pos:column="25"/></literal></expr>]<pos:position pos:line="20" pos:column="26"/></index></name> <operator pos:line="20" pos:column="27">=<pos:position pos:line="20" pos:column="28"/></operator> <sizeof pos:line="20" pos:column="29">sizeof<argument_list pos:line="20" pos:column="35">(<argument><expr><name><name pos:line="20" pos:column="36">cur_unique_id<pos:position pos:line="20" pos:column="49"/></name><operator pos:line="20" pos:column="49">.<pos:position pos:line="20" pos:column="50"/></operator><name pos:line="20" pos:column="50">thread_index<pos:position pos:line="20" pos:column="62"/></name></name></expr></argument>)<pos:position pos:line="20" pos:column="63"/></argument_list></sizeof></expr>;<pos:position pos:line="20" pos:column="64"/></expr_stmt>
    <expr_stmt><expr><name pos:line="21" pos:column="5">unique_id_rec_total_size<pos:position pos:line="21" pos:column="29"/></name> <operator pos:line="21" pos:column="30">=<pos:position pos:line="21" pos:column="31"/></operator> <name><name pos:line="21" pos:column="32">unique_id_rec_size<pos:position pos:line="21" pos:column="50"/></name><index pos:line="21" pos:column="50">[<expr><literal type="number" pos:line="21" pos:column="51">0<pos:position pos:line="21" pos:column="52"/></literal></expr>]<pos:position pos:line="21" pos:column="53"/></index></name> <operator pos:line="21" pos:column="54">+<pos:position pos:line="21" pos:column="55"/></operator> <name><name pos:line="21" pos:column="56">unique_id_rec_size<pos:position pos:line="21" pos:column="74"/></name><index pos:line="21" pos:column="74">[<expr><literal type="number" pos:line="21" pos:column="75">1<pos:position pos:line="21" pos:column="76"/></literal></expr>]<pos:position pos:line="21" pos:column="77"/></index></name> <operator pos:line="21" pos:column="78">+<pos:position pos:line="21" pos:column="79"/></operator>
                               <name><name pos:line="22" pos:column="32">unique_id_rec_size<pos:position pos:line="22" pos:column="50"/></name><index pos:line="22" pos:column="50">[<expr><literal type="number" pos:line="22" pos:column="51">2<pos:position pos:line="22" pos:column="52"/></literal></expr>]<pos:position pos:line="22" pos:column="53"/></index></name> <operator pos:line="22" pos:column="54">+<pos:position pos:line="22" pos:column="55"/></operator> <name><name pos:line="22" pos:column="56">unique_id_rec_size<pos:position pos:line="22" pos:column="74"/></name><index pos:line="22" pos:column="74">[<expr><literal type="number" pos:line="22" pos:column="75">3<pos:position pos:line="22" pos:column="76"/></literal></expr>]<pos:position pos:line="22" pos:column="77"/></index></name> <operator pos:line="22" pos:column="78">+<pos:position pos:line="22" pos:column="79"/></operator>
                               <name><name pos:line="23" pos:column="32">unique_id_rec_size<pos:position pos:line="23" pos:column="50"/></name><index pos:line="23" pos:column="50">[<expr><literal type="number" pos:line="23" pos:column="51">4<pos:position pos:line="23" pos:column="52"/></literal></expr>]<pos:position pos:line="23" pos:column="53"/></index></name></expr>;<pos:position pos:line="23" pos:column="54"/></expr_stmt>

    <comment type="block" pos:line="25" pos:column="5">/*
     * Calculate the size of the structure when encoded.
     */</comment>
    <expr_stmt><expr><name pos:line="28" pos:column="5">unique_id_rec_size_uu<pos:position pos:line="28" pos:column="26"/></name> <operator pos:line="28" pos:column="27">=<pos:position pos:line="28" pos:column="28"/></operator> <operator pos:line="28" pos:column="29">(<pos:position pos:line="28" pos:column="30"/></operator><name pos:line="28" pos:column="30">unique_id_rec_total_size<pos:position pos:line="28" pos:column="54"/></name><operator pos:line="28" pos:column="54">*<pos:position pos:line="28" pos:column="55"/></operator><literal type="number" pos:line="28" pos:column="55">8<pos:position pos:line="28" pos:column="56"/></literal><operator pos:line="28" pos:column="56">+<pos:position pos:line="28" pos:column="57"/></operator><literal type="number" pos:line="28" pos:column="57">5<pos:position pos:line="28" pos:column="58"/></literal><operator pos:line="28" pos:column="58">)<pos:position pos:line="28" pos:column="59"/></operator><operator pos:line="28" pos:column="59">/<pos:position pos:line="28" pos:column="60"/></operator><literal type="number" pos:line="28" pos:column="60">6<pos:position pos:line="28" pos:column="61"/></literal></expr>;<pos:position pos:line="28" pos:column="62"/></expr_stmt>

    <comment type="block" pos:line="30" pos:column="5">/*
     * Now get the global in_addr.  Note that it is not sufficient to use one
     * of the addresses from the main_server, since those aren't as likely to
     * be unique as the physical address of the machine
     */</comment>
    <if pos:line="35" pos:column="5">if <condition pos:line="35" pos:column="8">(<expr><operator pos:line="35" pos:column="9">(<pos:position pos:line="35" pos:column="10"/></operator><name pos:line="35" pos:column="10">rv<pos:position pos:line="35" pos:column="12"/></name> <operator pos:line="35" pos:column="13">=<pos:position pos:line="35" pos:column="14"/></operator> <call><name pos:line="35" pos:column="15">apr_gethostname<pos:position pos:line="35" pos:column="30"/></name><argument_list pos:line="35" pos:column="30">(<argument><expr><name pos:line="35" pos:column="31">str<pos:position pos:line="35" pos:column="34"/></name></expr></argument>, <argument><expr><sizeof pos:line="35" pos:column="36">sizeof<argument_list pos:line="35" pos:column="42">(<argument><expr><name pos:line="35" pos:column="43">str<pos:position pos:line="35" pos:column="46"/></name></expr></argument>)<pos:position pos:line="35" pos:column="47"/></argument_list></sizeof> <operator pos:line="35" pos:column="48">-<pos:position pos:line="35" pos:column="49"/></operator> <literal type="number" pos:line="35" pos:column="50">1<pos:position pos:line="35" pos:column="51"/></literal></expr></argument>, <argument><expr><name pos:line="35" pos:column="53">p<pos:position pos:line="35" pos:column="54"/></name></expr></argument>)<pos:position pos:line="35" pos:column="55"/></argument_list></call><operator pos:line="35" pos:column="55">)<pos:position pos:line="35" pos:column="56"/></operator> <operator pos:line="35" pos:column="57">!=<pos:position pos:line="35" pos:column="59"/></operator> <name pos:line="35" pos:column="60">APR_SUCCESS<pos:position pos:line="35" pos:column="71"/></name></expr>)<pos:position pos:line="35" pos:column="72"/></condition><then pos:line="35" pos:column="72"> <block pos:line="35" pos:column="73">{
        <expr_stmt><expr><call><name pos:line="36" pos:column="9">ap_log_error<pos:position pos:line="36" pos:column="21"/></name><argument_list pos:line="36" pos:column="21">(<argument><expr><name pos:line="36" pos:column="22">APLOG_MARK<pos:position pos:line="36" pos:column="32"/></name></expr></argument>, <argument><expr><name pos:line="36" pos:column="34">APLOG_ALERT<pos:position pos:line="36" pos:column="45"/></name></expr></argument>, <argument><expr><name pos:line="36" pos:column="47">rv<pos:position pos:line="36" pos:column="49"/></name></expr></argument>, <argument><expr><name pos:line="36" pos:column="51">main_server<pos:position pos:line="36" pos:column="62"/></name></expr></argument>,
          <argument><expr><literal type="string" pos:line="37" pos:column="11">"mod_unique_id: unable to find hostname of the server"<pos:position pos:line="37" pos:column="65"/></literal></expr></argument>)<pos:position pos:line="37" pos:column="66"/></argument_list></call></expr>;<pos:position pos:line="37" pos:column="67"/></expr_stmt>
        <return pos:line="38" pos:column="9">return <expr><name pos:line="38" pos:column="16">HTTP_INTERNAL_SERVER_ERROR<pos:position pos:line="38" pos:column="42"/></name></expr>;<pos:position pos:line="38" pos:column="43"/></return>
    }<pos:position pos:line="39" pos:column="6"/></block></then></if>

    <if pos:line="41" pos:column="5">if <condition pos:line="41" pos:column="8">(<expr><operator pos:line="41" pos:column="9">(<pos:position pos:line="41" pos:column="10"/></operator><name pos:line="41" pos:column="10">rv<pos:position pos:line="41" pos:column="12"/></name> <operator pos:line="41" pos:column="13">=<pos:position pos:line="41" pos:column="14"/></operator> <call><name pos:line="41" pos:column="15">apr_sockaddr_info_get<pos:position pos:line="41" pos:column="36"/></name><argument_list pos:line="41" pos:column="36">(<argument><expr><operator pos:line="41" pos:column="37">&amp;<pos:position pos:line="41" pos:column="42"/></operator><name pos:line="41" pos:column="38">sockaddr<pos:position pos:line="41" pos:column="46"/></name></expr></argument>, <argument><expr><name pos:line="41" pos:column="48">str<pos:position pos:line="41" pos:column="51"/></name></expr></argument>, <argument><expr><name pos:line="41" pos:column="53">AF_INET<pos:position pos:line="41" pos:column="60"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="41" pos:column="62">0<pos:position pos:line="41" pos:column="63"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="41" pos:column="65">0<pos:position pos:line="41" pos:column="66"/></literal></expr></argument>, <argument><expr><name pos:line="41" pos:column="68">p<pos:position pos:line="41" pos:column="69"/></name></expr></argument>)<pos:position pos:line="41" pos:column="70"/></argument_list></call><operator pos:line="41" pos:column="70">)<pos:position pos:line="41" pos:column="71"/></operator> <operator pos:line="41" pos:column="72">==<pos:position pos:line="41" pos:column="74"/></operator> <name pos:line="41" pos:column="75">APR_SUCCESS<pos:position pos:line="41" pos:column="86"/></name></expr>)<pos:position pos:line="41" pos:column="87"/></condition><then pos:line="41" pos:column="87"> <block pos:line="41" pos:column="88">{
        <expr_stmt><expr><name pos:line="42" pos:column="9">global_in_addr<pos:position pos:line="42" pos:column="23"/></name> <operator pos:line="42" pos:column="24">=<pos:position pos:line="42" pos:column="25"/></operator> <name><name pos:line="42" pos:column="26">sockaddr<pos:position pos:line="42" pos:column="34"/></name><operator pos:line="42" pos:column="34">-&gt;<pos:position pos:line="42" pos:column="39"/></operator><name pos:line="42" pos:column="36">sa<pos:position pos:line="42" pos:column="38"/></name><operator pos:line="42" pos:column="38">.<pos:position pos:line="42" pos:column="39"/></operator><name pos:line="42" pos:column="39">sin<pos:position pos:line="42" pos:column="42"/></name><operator pos:line="42" pos:column="42">.<pos:position pos:line="42" pos:column="43"/></operator><name pos:line="42" pos:column="43">sin_addr<pos:position pos:line="42" pos:column="51"/></name><operator pos:line="42" pos:column="51">.<pos:position pos:line="42" pos:column="52"/></operator><name pos:line="42" pos:column="52">s_addr<pos:position pos:line="42" pos:column="58"/></name></name></expr>;<pos:position pos:line="42" pos:column="59"/></expr_stmt>
    }<pos:position pos:line="43" pos:column="6"/></block></then>
    <else pos:line="44" pos:column="5">else <block pos:line="44" pos:column="10">{
        <expr_stmt><expr><call><name pos:line="45" pos:column="9">ap_log_error<pos:position pos:line="45" pos:column="21"/></name><argument_list pos:line="45" pos:column="21">(<argument><expr><name pos:line="45" pos:column="22">APLOG_MARK<pos:position pos:line="45" pos:column="32"/></name></expr></argument>, <argument><expr><name pos:line="45" pos:column="34">APLOG_ALERT<pos:position pos:line="45" pos:column="45"/></name></expr></argument>, <argument><expr><name pos:line="45" pos:column="47">rv<pos:position pos:line="45" pos:column="49"/></name></expr></argument>, <argument><expr><name pos:line="45" pos:column="51">main_server<pos:position pos:line="45" pos:column="62"/></name></expr></argument>,
                    <argument><expr><literal type="string" pos:line="46" pos:column="21">"mod_unique_id: unable to find IPv4 address of \"%s\""<pos:position pos:line="46" pos:column="75"/></literal></expr></argument>, <argument><expr><name pos:line="46" pos:column="77">str<pos:position pos:line="46" pos:column="80"/></name></expr></argument>)<pos:position pos:line="46" pos:column="81"/></argument_list></call></expr>;<pos:position pos:line="46" pos:column="82"/></expr_stmt>
<cpp:if pos:line="47" pos:column="1">#<cpp:directive pos:line="47" pos:column="2">if<pos:position pos:line="47" pos:column="4"/></cpp:directive> <expr><name pos:line="47" pos:column="5">APR_HAVE_IPV6<pos:position pos:line="47" pos:column="18"/></name></expr></cpp:if>
        <if pos:line="48" pos:column="9">if <condition pos:line="48" pos:column="12">(<expr><operator pos:line="48" pos:column="13">(<pos:position pos:line="48" pos:column="14"/></operator><name pos:line="48" pos:column="14">rv<pos:position pos:line="48" pos:column="16"/></name> <operator pos:line="48" pos:column="17">=<pos:position pos:line="48" pos:column="18"/></operator> <call><name pos:line="48" pos:column="19">apr_sockaddr_info_get<pos:position pos:line="48" pos:column="40"/></name><argument_list pos:line="48" pos:column="40">(<argument><expr><operator pos:line="48" pos:column="41">&amp;<pos:position pos:line="48" pos:column="46"/></operator><name pos:line="48" pos:column="42">sockaddr<pos:position pos:line="48" pos:column="50"/></name></expr></argument>, <argument><expr><name pos:line="48" pos:column="52">str<pos:position pos:line="48" pos:column="55"/></name></expr></argument>, <argument><expr><name pos:line="48" pos:column="57">AF_INET6<pos:position pos:line="48" pos:column="65"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="48" pos:column="67">0<pos:position pos:line="48" pos:column="68"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="48" pos:column="70">0<pos:position pos:line="48" pos:column="71"/></literal></expr></argument>, <argument><expr><name pos:line="48" pos:column="73">p<pos:position pos:line="48" pos:column="74"/></name></expr></argument>)<pos:position pos:line="48" pos:column="75"/></argument_list></call><operator pos:line="48" pos:column="75">)<pos:position pos:line="48" pos:column="76"/></operator> <operator pos:line="48" pos:column="77">==<pos:position pos:line="48" pos:column="79"/></operator> <name pos:line="48" pos:column="80">APR_SUCCESS<pos:position pos:line="48" pos:column="91"/></name></expr>)<pos:position pos:line="48" pos:column="92"/></condition><then pos:line="48" pos:column="92"> <block pos:line="48" pos:column="93">{
            <expr_stmt><expr><call><name pos:line="49" pos:column="13">memcpy<pos:position pos:line="49" pos:column="19"/></name><argument_list pos:line="49" pos:column="19">(<argument><expr><operator pos:line="49" pos:column="20">&amp;<pos:position pos:line="49" pos:column="25"/></operator><name pos:line="49" pos:column="21">global_in_addr<pos:position pos:line="49" pos:column="35"/></name></expr></argument>,
                   <argument><expr><operator pos:line="50" pos:column="20">(<pos:position pos:line="50" pos:column="21"/></operator><name pos:line="50" pos:column="21">char<pos:position pos:line="50" pos:column="25"/></name> <operator pos:line="50" pos:column="26">*<pos:position pos:line="50" pos:column="27"/></operator><operator pos:line="50" pos:column="27">)<pos:position pos:line="50" pos:column="28"/></operator><name><name pos:line="50" pos:column="28">sockaddr<pos:position pos:line="50" pos:column="36"/></name><operator pos:line="50" pos:column="36">-&gt;<pos:position pos:line="50" pos:column="41"/></operator><name pos:line="50" pos:column="38">ipaddr_ptr<pos:position pos:line="50" pos:column="48"/></name></name> <operator pos:line="50" pos:column="49">+<pos:position pos:line="50" pos:column="50"/></operator> <name><name pos:line="50" pos:column="51">sockaddr<pos:position pos:line="50" pos:column="59"/></name><operator pos:line="50" pos:column="59">-&gt;<pos:position pos:line="50" pos:column="64"/></operator><name pos:line="50" pos:column="61">ipaddr_len<pos:position pos:line="50" pos:column="71"/></name></name> <operator pos:line="50" pos:column="72">-<pos:position pos:line="50" pos:column="73"/></operator> <sizeof pos:line="50" pos:column="74">sizeof<argument_list pos:line="50" pos:column="80">(<argument><expr><name pos:line="50" pos:column="81">global_in_addr<pos:position pos:line="50" pos:column="95"/></name></expr></argument>)<pos:position pos:line="50" pos:column="96"/></argument_list></sizeof></expr></argument>,
                   <argument><expr><sizeof pos:line="51" pos:column="20">sizeof<argument_list pos:line="51" pos:column="26">(<argument><expr><name pos:line="51" pos:column="27">global_in_addr<pos:position pos:line="51" pos:column="41"/></name></expr></argument>)<pos:position pos:line="51" pos:column="42"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="51" pos:column="43"/></argument_list></call></expr>;<pos:position pos:line="51" pos:column="44"/></expr_stmt>
            <expr_stmt><expr><call><name pos:line="52" pos:column="13">ap_log_error<pos:position pos:line="52" pos:column="25"/></name><argument_list pos:line="52" pos:column="25">(<argument><expr><name pos:line="52" pos:column="26">APLOG_MARK<pos:position pos:line="52" pos:column="36"/></name></expr></argument>, <argument><expr><name pos:line="52" pos:column="38">APLOG_ALERT<pos:position pos:line="52" pos:column="49"/></name></expr></argument>, <argument><expr><name pos:line="52" pos:column="51">rv<pos:position pos:line="52" pos:column="53"/></name></expr></argument>, <argument><expr><name pos:line="52" pos:column="55">main_server<pos:position pos:line="52" pos:column="66"/></name></expr></argument>,
                         <argument><expr><literal type="string" pos:line="53" pos:column="26">"mod_unique_id: using low-order bits of IPv6 address "<pos:position pos:line="53" pos:column="80"/></literal>
                         <literal type="string" pos:line="54" pos:column="26">"as if they were unique"<pos:position pos:line="54" pos:column="50"/></literal></expr></argument>)<pos:position pos:line="54" pos:column="51"/></argument_list></call></expr>;<pos:position pos:line="54" pos:column="52"/></expr_stmt>
        }<pos:position pos:line="55" pos:column="10"/></block></then>
        <else pos:line="56" pos:column="9">else
<cpp:endif pos:line="57" pos:column="1">#<cpp:directive pos:line="57" pos:column="2">endif<pos:position pos:line="57" pos:column="7"/></cpp:directive></cpp:endif>
        <block type="pseudo"><return pos:line="58" pos:column="9">return <expr><name pos:line="58" pos:column="16">HTTP_INTERNAL_SERVER_ERROR<pos:position pos:line="58" pos:column="42"/></name></expr>;<pos:position pos:line="58" pos:column="43"/></return></block></else></if>
    }<pos:position pos:line="59" pos:column="6"/></block></else></if>

    <expr_stmt><expr><call><name pos:line="61" pos:column="5">apr_sockaddr_ip_get<pos:position pos:line="61" pos:column="24"/></name><argument_list pos:line="61" pos:column="24">(<argument><expr><operator pos:line="61" pos:column="25">&amp;<pos:position pos:line="61" pos:column="30"/></operator><name pos:line="61" pos:column="26">ipaddrstr<pos:position pos:line="61" pos:column="35"/></name></expr></argument>, <argument><expr><name pos:line="61" pos:column="37">sockaddr<pos:position pos:line="61" pos:column="45"/></name></expr></argument>)<pos:position pos:line="61" pos:column="46"/></argument_list></call></expr>;<pos:position pos:line="61" pos:column="47"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="62" pos:column="5">ap_log_error<pos:position pos:line="62" pos:column="17"/></name><argument_list pos:line="62" pos:column="17">(<argument><expr><name pos:line="62" pos:column="18">APLOG_MARK<pos:position pos:line="62" pos:column="28"/></name></expr></argument>, <argument><expr><name pos:line="62" pos:column="30">APLOG_INFO<pos:position pos:line="62" pos:column="40"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="62" pos:column="42">0<pos:position pos:line="62" pos:column="43"/></literal></expr></argument>, <argument><expr><name pos:line="62" pos:column="45">main_server<pos:position pos:line="62" pos:column="56"/></name></expr></argument>,
                <argument><expr><literal type="string" pos:line="63" pos:column="17">"mod_unique_id: using ip addr %s"<pos:position pos:line="63" pos:column="50"/></literal></expr></argument>,
                 <argument><expr><name pos:line="64" pos:column="18">ipaddrstr<pos:position pos:line="64" pos:column="27"/></name></expr></argument>)<pos:position pos:line="64" pos:column="28"/></argument_list></call></expr>;<pos:position pos:line="64" pos:column="29"/></expr_stmt>

    <comment type="block" pos:line="66" pos:column="5">/*
     * If the server is pummelled with restart requests we could possibly end
     * up in a situation where we're starting again during the same second
     * that has been used in previous identifiers.  Avoid that situation.
     *
     * In truth, for this to actually happen not only would it have to restart
     * in the same second, but it would have to somehow get the same pids as
     * one of the other servers that was running in that second. Which would
     * mean a 64k wraparound on pids ... not very likely at all.
     *
     * But protecting against it is relatively cheap.  We just sleep into the
     * next second.
     */</comment>
    <expr_stmt><expr><call><name pos:line="79" pos:column="5">apr_sleep<pos:position pos:line="79" pos:column="14"/></name><argument_list pos:line="79" pos:column="14">(<argument><expr><call><name pos:line="79" pos:column="15">apr_time_from_sec<pos:position pos:line="79" pos:column="32"/></name><argument_list pos:line="79" pos:column="32">(<argument><expr><literal type="number" pos:line="79" pos:column="33">1<pos:position pos:line="79" pos:column="34"/></literal></expr></argument>)<pos:position pos:line="79" pos:column="35"/></argument_list></call> <operator pos:line="79" pos:column="36">-<pos:position pos:line="79" pos:column="37"/></operator> <call><name pos:line="79" pos:column="38">apr_time_usec<pos:position pos:line="79" pos:column="51"/></name><argument_list pos:line="79" pos:column="51">(<argument><expr><call><name pos:line="79" pos:column="52">apr_time_now<pos:position pos:line="79" pos:column="64"/></name><argument_list pos:line="79" pos:column="64">()<pos:position pos:line="79" pos:column="66"/></argument_list></call></expr></argument>)<pos:position pos:line="79" pos:column="67"/></argument_list></call></expr></argument>)<pos:position pos:line="79" pos:column="68"/></argument_list></call></expr>;<pos:position pos:line="79" pos:column="69"/></expr_stmt>
    <return pos:line="80" pos:column="5">return <expr><name pos:line="80" pos:column="12">OK<pos:position pos:line="80" pos:column="14"/></name></expr>;<pos:position pos:line="80" pos:column="15"/></return>
}<pos:position pos:line="81" pos:column="2"/></block></function></unit>

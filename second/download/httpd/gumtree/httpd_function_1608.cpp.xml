<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/httpd/gumtree/httpd_function_1608.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">int<pos:position pos:line="1" pos:column="11"/></name></type> <name pos:line="1" pos:column="12">check_header<pos:position pos:line="1" pos:column="24"/></name><parameter_list pos:line="1" pos:column="24">(<parameter><decl><type><name><name pos:line="1" pos:column="25">struct<pos:position pos:line="1" pos:column="31"/></name> <name pos:line="1" pos:column="32">check_header_ctx<pos:position pos:line="1" pos:column="48"/></name></name> <modifier pos:line="1" pos:column="49">*<pos:position pos:line="1" pos:column="50"/></modifier></type><name pos:line="1" pos:column="50">ctx<pos:position pos:line="1" pos:column="53"/></name></decl></parameter>,
                        <parameter><decl><type><specifier pos:line="2" pos:column="25">const<pos:position pos:line="2" pos:column="30"/></specifier> <name pos:line="2" pos:column="31">char<pos:position pos:line="2" pos:column="35"/></name> <modifier pos:line="2" pos:column="36">*<pos:position pos:line="2" pos:column="37"/></modifier></type><name pos:line="2" pos:column="37">name<pos:position pos:line="2" pos:column="41"/></name></decl></parameter>, <parameter><decl><type><specifier pos:line="2" pos:column="43">const<pos:position pos:line="2" pos:column="48"/></specifier> <name pos:line="2" pos:column="49">char<pos:position pos:line="2" pos:column="53"/></name> <modifier pos:line="2" pos:column="54">*<pos:position pos:line="2" pos:column="55"/></modifier><modifier pos:line="2" pos:column="55">*<pos:position pos:line="2" pos:column="56"/></modifier></type><name pos:line="2" pos:column="56">val<pos:position pos:line="2" pos:column="59"/></name></decl></parameter>)<pos:position pos:line="2" pos:column="60"/></parameter_list>
<block pos:line="3" pos:column="1">{
    <decl_stmt><decl><type><specifier pos:line="4" pos:column="5">const<pos:position pos:line="4" pos:column="10"/></specifier> <name pos:line="4" pos:column="11">char<pos:position pos:line="4" pos:column="15"/></name> <modifier pos:line="4" pos:column="16">*<pos:position pos:line="4" pos:column="17"/></modifier></type><name pos:line="4" pos:column="17">pos<pos:position pos:line="4" pos:column="20"/></name></decl>, <modifier pos:line="4" pos:column="22">*<pos:position pos:line="4" pos:column="23"/></modifier><decl><type ref="prev"/><name pos:line="4" pos:column="23">end<pos:position pos:line="4" pos:column="26"/></name></decl>;<pos:position pos:line="4" pos:column="27"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="5" pos:column="5">char<pos:position pos:line="5" pos:column="9"/></name> <modifier pos:line="5" pos:column="10">*<pos:position pos:line="5" pos:column="11"/></modifier></type><name pos:line="5" pos:column="11">dst<pos:position pos:line="5" pos:column="14"/></name> <init pos:line="5" pos:column="15">= <expr><name pos:line="5" pos:column="17">NULL<pos:position pos:line="5" pos:column="21"/></name></expr></init></decl>;<pos:position pos:line="5" pos:column="22"/></decl_stmt>

    <if pos:line="7" pos:column="5">if <condition pos:line="7" pos:column="8">(<expr><name><name pos:line="7" pos:column="9">name<pos:position pos:line="7" pos:column="13"/></name><index pos:line="7" pos:column="13">[<expr><literal type="number" pos:line="7" pos:column="14">0<pos:position pos:line="7" pos:column="15"/></literal></expr>]<pos:position pos:line="7" pos:column="16"/></index></name> <operator pos:line="7" pos:column="17">==<pos:position pos:line="7" pos:column="19"/></operator> <literal type="char" pos:line="7" pos:column="20">'\0'<pos:position pos:line="7" pos:column="24"/></literal></expr>)<pos:position pos:line="7" pos:column="25"/></condition><then pos:line="7" pos:column="25"> <block pos:line="7" pos:column="26">{
        <expr_stmt><expr><call><name pos:line="8" pos:column="9">ap_log_rerror<pos:position pos:line="8" pos:column="22"/></name><argument_list pos:line="8" pos:column="22">(<argument><expr><name pos:line="8" pos:column="23">APLOG_MARK<pos:position pos:line="8" pos:column="33"/></name></expr></argument>, <argument><expr><name pos:line="8" pos:column="35">APLOG_ERR<pos:position pos:line="8" pos:column="44"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="8" pos:column="46">0<pos:position pos:line="8" pos:column="47"/></literal></expr></argument>, <argument><expr><name><name pos:line="8" pos:column="49">ctx<pos:position pos:line="8" pos:column="52"/></name><operator pos:line="8" pos:column="52">-&gt;<pos:position pos:line="8" pos:column="57"/></operator><name pos:line="8" pos:column="54">r<pos:position pos:line="8" pos:column="55"/></name></name></expr></argument>,
                      <argument><expr><literal type="string" pos:line="9" pos:column="23">"Empty response header name, aborting request"<pos:position pos:line="9" pos:column="69"/></literal></expr></argument>)<pos:position pos:line="9" pos:column="70"/></argument_list></call></expr>;<pos:position pos:line="9" pos:column="71"/></expr_stmt>
        <return pos:line="10" pos:column="9">return <expr><literal type="number" pos:line="10" pos:column="16">0<pos:position pos:line="10" pos:column="17"/></literal></expr>;<pos:position pos:line="10" pos:column="18"/></return>
    }<pos:position pos:line="11" pos:column="6"/></block></then></if>

    <if pos:line="13" pos:column="5">if <condition pos:line="13" pos:column="8">(<expr><name><name pos:line="13" pos:column="9">ctx<pos:position pos:line="13" pos:column="12"/></name><operator pos:line="13" pos:column="12">-&gt;<pos:position pos:line="13" pos:column="17"/></operator><name pos:line="13" pos:column="14">strict<pos:position pos:line="13" pos:column="20"/></name></name></expr>)<pos:position pos:line="13" pos:column="21"/></condition><then pos:line="13" pos:column="21"> <block pos:line="13" pos:column="22">{ 
        <expr_stmt><expr><name pos:line="14" pos:column="9">end<pos:position pos:line="14" pos:column="12"/></name> <operator pos:line="14" pos:column="13">=<pos:position pos:line="14" pos:column="14"/></operator> <call><name pos:line="14" pos:column="15">ap_scan_http_token<pos:position pos:line="14" pos:column="33"/></name><argument_list pos:line="14" pos:column="33">(<argument><expr><name pos:line="14" pos:column="34">name<pos:position pos:line="14" pos:column="38"/></name></expr></argument>)<pos:position pos:line="14" pos:column="39"/></argument_list></call></expr>;<pos:position pos:line="14" pos:column="40"/></expr_stmt>
    }<pos:position pos:line="15" pos:column="6"/></block></then>
    <else pos:line="16" pos:column="5">else <block pos:line="16" pos:column="10">{
        <expr_stmt><expr><name pos:line="17" pos:column="9">end<pos:position pos:line="17" pos:column="12"/></name> <operator pos:line="17" pos:column="13">=<pos:position pos:line="17" pos:column="14"/></operator> <call><name pos:line="17" pos:column="15">ap_scan_vchar_obstext<pos:position pos:line="17" pos:column="36"/></name><argument_list pos:line="17" pos:column="36">(<argument><expr><name pos:line="17" pos:column="37">name<pos:position pos:line="17" pos:column="41"/></name></expr></argument>)<pos:position pos:line="17" pos:column="42"/></argument_list></call></expr>;<pos:position pos:line="17" pos:column="43"/></expr_stmt>
    }<pos:position pos:line="18" pos:column="6"/></block></else></if>
    <if pos:line="19" pos:column="5">if <condition pos:line="19" pos:column="8">(<expr><operator pos:line="19" pos:column="9">*<pos:position pos:line="19" pos:column="10"/></operator><name pos:line="19" pos:column="10">end<pos:position pos:line="19" pos:column="13"/></name></expr>)<pos:position pos:line="19" pos:column="14"/></condition><then pos:line="19" pos:column="14"> <block pos:line="19" pos:column="15">{
        <expr_stmt><expr><call><name pos:line="20" pos:column="9">ap_log_rerror<pos:position pos:line="20" pos:column="22"/></name><argument_list pos:line="20" pos:column="22">(<argument><expr><name pos:line="20" pos:column="23">APLOG_MARK<pos:position pos:line="20" pos:column="33"/></name></expr></argument>, <argument><expr><name pos:line="20" pos:column="35">APLOG_ERR<pos:position pos:line="20" pos:column="44"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="20" pos:column="46">0<pos:position pos:line="20" pos:column="47"/></literal></expr></argument>, <argument><expr><name><name pos:line="20" pos:column="49">ctx<pos:position pos:line="20" pos:column="52"/></name><operator pos:line="20" pos:column="52">-&gt;<pos:position pos:line="20" pos:column="57"/></operator><name pos:line="20" pos:column="54">r<pos:position pos:line="20" pos:column="55"/></name></name></expr></argument>,
                      <argument><expr><literal type="string" pos:line="21" pos:column="23">"Response header name '%s' contains invalid "<pos:position pos:line="21" pos:column="68"/></literal>
                      <literal type="string" pos:line="22" pos:column="23">"characters, aborting request"<pos:position pos:line="22" pos:column="53"/></literal></expr></argument>,
                      <argument><expr><name pos:line="23" pos:column="23">name<pos:position pos:line="23" pos:column="27"/></name></expr></argument>)<pos:position pos:line="23" pos:column="28"/></argument_list></call></expr>;<pos:position pos:line="23" pos:column="29"/></expr_stmt>
        <return pos:line="24" pos:column="9">return <expr><literal type="number" pos:line="24" pos:column="16">0<pos:position pos:line="24" pos:column="17"/></literal></expr>;<pos:position pos:line="24" pos:column="18"/></return>
    }<pos:position pos:line="25" pos:column="6"/></block></then></if>

    <for pos:line="27" pos:column="5">for <control pos:line="27" pos:column="9">(<init><expr><name pos:line="27" pos:column="10">pos<pos:position pos:line="27" pos:column="13"/></name> <operator pos:line="27" pos:column="14">=<pos:position pos:line="27" pos:column="15"/></operator> <operator pos:line="27" pos:column="16">*<pos:position pos:line="27" pos:column="17"/></operator><name pos:line="27" pos:column="17">val<pos:position pos:line="27" pos:column="20"/></name></expr>;<pos:position pos:line="27" pos:column="21"/></init> <condition><expr><operator pos:line="27" pos:column="22">*<pos:position pos:line="27" pos:column="23"/></operator><name pos:line="27" pos:column="23">pos<pos:position pos:line="27" pos:column="26"/></name></expr>;<pos:position pos:line="27" pos:column="27"/></condition> <incr><expr><name pos:line="27" pos:column="28">pos<pos:position pos:line="27" pos:column="31"/></name> <operator pos:line="27" pos:column="32">=<pos:position pos:line="27" pos:column="33"/></operator> <name pos:line="27" pos:column="34">end<pos:position pos:line="27" pos:column="37"/></name></expr></incr>)<pos:position pos:line="27" pos:column="38"/></control> <block pos:line="27" pos:column="39">{
        <expr_stmt><expr><name pos:line="28" pos:column="9">end<pos:position pos:line="28" pos:column="12"/></name> <operator pos:line="28" pos:column="13">=<pos:position pos:line="28" pos:column="14"/></operator> <call><name pos:line="28" pos:column="15">ap_scan_http_field_content<pos:position pos:line="28" pos:column="41"/></name><argument_list pos:line="28" pos:column="41">(<argument><expr><name pos:line="28" pos:column="42">pos<pos:position pos:line="28" pos:column="45"/></name></expr></argument>)<pos:position pos:line="28" pos:column="46"/></argument_list></call></expr>;<pos:position pos:line="28" pos:column="47"/></expr_stmt>
        <if pos:line="29" pos:column="9">if <condition pos:line="29" pos:column="12">(<expr><operator pos:line="29" pos:column="13">*<pos:position pos:line="29" pos:column="14"/></operator><name pos:line="29" pos:column="14">end<pos:position pos:line="29" pos:column="17"/></name></expr>)<pos:position pos:line="29" pos:column="18"/></condition><then pos:line="29" pos:column="18"> <block pos:line="29" pos:column="19">{
            <if pos:line="30" pos:column="13">if <condition pos:line="30" pos:column="16">(<expr><name><name pos:line="30" pos:column="17">end<pos:position pos:line="30" pos:column="20"/></name><index pos:line="30" pos:column="20">[<expr><literal type="number" pos:line="30" pos:column="21">0<pos:position pos:line="30" pos:column="22"/></literal></expr>]<pos:position pos:line="30" pos:column="23"/></index></name> <operator pos:line="30" pos:column="24">!=<pos:position pos:line="30" pos:column="26"/></operator> <name pos:line="30" pos:column="27">CR<pos:position pos:line="30" pos:column="29"/></name> <operator pos:line="30" pos:column="30">||<pos:position pos:line="30" pos:column="32"/></operator> <name><name pos:line="30" pos:column="33">end<pos:position pos:line="30" pos:column="36"/></name><index pos:line="30" pos:column="36">[<expr><literal type="number" pos:line="30" pos:column="37">1<pos:position pos:line="30" pos:column="38"/></literal></expr>]<pos:position pos:line="30" pos:column="39"/></index></name> <operator pos:line="30" pos:column="40">!=<pos:position pos:line="30" pos:column="42"/></operator> <name pos:line="30" pos:column="43">LF<pos:position pos:line="30" pos:column="45"/></name> <operator pos:line="30" pos:column="46">||<pos:position pos:line="30" pos:column="48"/></operator> <operator pos:line="30" pos:column="49">(<pos:position pos:line="30" pos:column="50"/></operator><name><name pos:line="30" pos:column="50">end<pos:position pos:line="30" pos:column="53"/></name><index pos:line="30" pos:column="53">[<expr><literal type="number" pos:line="30" pos:column="54">2<pos:position pos:line="30" pos:column="55"/></literal></expr>]<pos:position pos:line="30" pos:column="56"/></index></name> <operator pos:line="30" pos:column="57">!=<pos:position pos:line="30" pos:column="59"/></operator> <literal type="char" pos:line="30" pos:column="60">' '<pos:position pos:line="30" pos:column="63"/></literal> <operator pos:line="30" pos:column="64">&amp;&amp;<pos:position pos:line="30" pos:column="74"/></operator>
                                                 <name><name pos:line="31" pos:column="50">end<pos:position pos:line="31" pos:column="53"/></name><index pos:line="31" pos:column="53">[<expr><literal type="number" pos:line="31" pos:column="54">2<pos:position pos:line="31" pos:column="55"/></literal></expr>]<pos:position pos:line="31" pos:column="56"/></index></name> <operator pos:line="31" pos:column="57">!=<pos:position pos:line="31" pos:column="59"/></operator> <literal type="char" pos:line="31" pos:column="60">'\t'<pos:position pos:line="31" pos:column="64"/></literal><operator pos:line="31" pos:column="64">)<pos:position pos:line="31" pos:column="65"/></operator></expr>)<pos:position pos:line="31" pos:column="66"/></condition><then pos:line="31" pos:column="66"> <block pos:line="31" pos:column="67">{
                <expr_stmt><expr><call><name pos:line="32" pos:column="17">ap_log_rerror<pos:position pos:line="32" pos:column="30"/></name><argument_list pos:line="32" pos:column="30">(<argument><expr><name pos:line="32" pos:column="31">APLOG_MARK<pos:position pos:line="32" pos:column="41"/></name></expr></argument>, <argument><expr><name pos:line="32" pos:column="43">APLOG_ERR<pos:position pos:line="32" pos:column="52"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="32" pos:column="54">0<pos:position pos:line="32" pos:column="55"/></literal></expr></argument>, <argument><expr><name><name pos:line="32" pos:column="57">ctx<pos:position pos:line="32" pos:column="60"/></name><operator pos:line="32" pos:column="60">-&gt;<pos:position pos:line="32" pos:column="65"/></operator><name pos:line="32" pos:column="62">r<pos:position pos:line="32" pos:column="63"/></name></name></expr></argument>,
                              <argument><expr><literal type="string" pos:line="33" pos:column="31">"Response header '%s' value of '%s' contains "<pos:position pos:line="33" pos:column="77"/></literal>
                              <literal type="string" pos:line="34" pos:column="31">"invalid characters, aborting request"<pos:position pos:line="34" pos:column="69"/></literal></expr></argument>,
                              <argument><expr><name pos:line="35" pos:column="31">name<pos:position pos:line="35" pos:column="35"/></name></expr></argument>, <argument><expr><name pos:line="35" pos:column="37">pos<pos:position pos:line="35" pos:column="40"/></name></expr></argument>)<pos:position pos:line="35" pos:column="41"/></argument_list></call></expr>;<pos:position pos:line="35" pos:column="42"/></expr_stmt>
                <return pos:line="36" pos:column="17">return <expr><literal type="number" pos:line="36" pos:column="24">0<pos:position pos:line="36" pos:column="25"/></literal></expr>;<pos:position pos:line="36" pos:column="26"/></return>
            }<pos:position pos:line="37" pos:column="14"/></block></then></if>
            <if pos:line="38" pos:column="13">if <condition pos:line="38" pos:column="16">(<expr><operator pos:line="38" pos:column="17">!<pos:position pos:line="38" pos:column="18"/></operator><name pos:line="38" pos:column="18">dst<pos:position pos:line="38" pos:column="21"/></name></expr>)<pos:position pos:line="38" pos:column="22"/></condition><then pos:line="38" pos:column="22"> <block pos:line="38" pos:column="23">{
                <expr_stmt><expr><operator pos:line="39" pos:column="17">*<pos:position pos:line="39" pos:column="18"/></operator><name pos:line="39" pos:column="18">val<pos:position pos:line="39" pos:column="21"/></name> <operator pos:line="39" pos:column="22">=<pos:position pos:line="39" pos:column="23"/></operator> <name pos:line="39" pos:column="24">dst<pos:position pos:line="39" pos:column="27"/></name> <operator pos:line="39" pos:column="28">=<pos:position pos:line="39" pos:column="29"/></operator> <call><name pos:line="39" pos:column="30">apr_palloc<pos:position pos:line="39" pos:column="40"/></name><argument_list pos:line="39" pos:column="40">(<argument><expr><name><name pos:line="39" pos:column="41">ctx<pos:position pos:line="39" pos:column="44"/></name><operator pos:line="39" pos:column="44">-&gt;<pos:position pos:line="39" pos:column="49"/></operator><name pos:line="39" pos:column="46">r<pos:position pos:line="39" pos:column="47"/></name><operator pos:line="39" pos:column="47">-&gt;<pos:position pos:line="39" pos:column="52"/></operator><name pos:line="39" pos:column="49">pool<pos:position pos:line="39" pos:column="53"/></name></name></expr></argument>, <argument><expr><call><name pos:line="39" pos:column="55">strlen<pos:position pos:line="39" pos:column="61"/></name><argument_list pos:line="39" pos:column="61">(<argument><expr><operator pos:line="39" pos:column="62">*<pos:position pos:line="39" pos:column="63"/></operator><name pos:line="39" pos:column="63">val<pos:position pos:line="39" pos:column="66"/></name></expr></argument>)<pos:position pos:line="39" pos:column="67"/></argument_list></call> <operator pos:line="39" pos:column="68">+<pos:position pos:line="39" pos:column="69"/></operator> <literal type="number" pos:line="39" pos:column="70">1<pos:position pos:line="39" pos:column="71"/></literal></expr></argument>)<pos:position pos:line="39" pos:column="72"/></argument_list></call></expr>;<pos:position pos:line="39" pos:column="73"/></expr_stmt>
            }<pos:position pos:line="40" pos:column="14"/></block></then></if>
        }<pos:position pos:line="41" pos:column="10"/></block></then></if>
        <if pos:line="42" pos:column="9">if <condition pos:line="42" pos:column="12">(<expr><name pos:line="42" pos:column="13">dst<pos:position pos:line="42" pos:column="16"/></name></expr>)<pos:position pos:line="42" pos:column="17"/></condition><then pos:line="42" pos:column="17"> <block pos:line="42" pos:column="18">{
            <expr_stmt><expr><call><name pos:line="43" pos:column="13">memcpy<pos:position pos:line="43" pos:column="19"/></name><argument_list pos:line="43" pos:column="19">(<argument><expr><name pos:line="43" pos:column="20">dst<pos:position pos:line="43" pos:column="23"/></name></expr></argument>, <argument><expr><name pos:line="43" pos:column="25">pos<pos:position pos:line="43" pos:column="28"/></name></expr></argument>, <argument><expr><name pos:line="43" pos:column="30">end<pos:position pos:line="43" pos:column="33"/></name> <operator pos:line="43" pos:column="34">-<pos:position pos:line="43" pos:column="35"/></operator> <name pos:line="43" pos:column="36">pos<pos:position pos:line="43" pos:column="39"/></name></expr></argument>)<pos:position pos:line="43" pos:column="40"/></argument_list></call></expr>;<pos:position pos:line="43" pos:column="41"/></expr_stmt>
            <expr_stmt><expr><name pos:line="44" pos:column="13">dst<pos:position pos:line="44" pos:column="16"/></name> <operator pos:line="44" pos:column="17">+=<pos:position pos:line="44" pos:column="19"/></operator> <name pos:line="44" pos:column="20">end<pos:position pos:line="44" pos:column="23"/></name> <operator pos:line="44" pos:column="24">-<pos:position pos:line="44" pos:column="25"/></operator> <name pos:line="44" pos:column="26">pos<pos:position pos:line="44" pos:column="29"/></name></expr>;<pos:position pos:line="44" pos:column="30"/></expr_stmt>
            <if pos:line="45" pos:column="13">if <condition pos:line="45" pos:column="16">(<expr><operator pos:line="45" pos:column="17">*<pos:position pos:line="45" pos:column="18"/></operator><name pos:line="45" pos:column="18">end<pos:position pos:line="45" pos:column="21"/></name></expr>)<pos:position pos:line="45" pos:column="22"/></condition><then pos:line="45" pos:column="22"> <block pos:line="45" pos:column="23">{
                <comment type="block" pos:line="46" pos:column="17">/* skip folding and replace with a single space */</comment>
                <expr_stmt><expr><name pos:line="47" pos:column="17">end<pos:position pos:line="47" pos:column="20"/></name> <operator pos:line="47" pos:column="21">+=<pos:position pos:line="47" pos:column="23"/></operator> <literal type="number" pos:line="47" pos:column="24">3<pos:position pos:line="47" pos:column="25"/></literal> <operator pos:line="47" pos:column="26">+<pos:position pos:line="47" pos:column="27"/></operator> <call><name pos:line="47" pos:column="28">strspn<pos:position pos:line="47" pos:column="34"/></name><argument_list pos:line="47" pos:column="34">(<argument><expr><name pos:line="47" pos:column="35">end<pos:position pos:line="47" pos:column="38"/></name> <operator pos:line="47" pos:column="39">+<pos:position pos:line="47" pos:column="40"/></operator> <literal type="number" pos:line="47" pos:column="41">3<pos:position pos:line="47" pos:column="42"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="47" pos:column="44">"\t "<pos:position pos:line="47" pos:column="49"/></literal></expr></argument>)<pos:position pos:line="47" pos:column="50"/></argument_list></call></expr>;<pos:position pos:line="47" pos:column="51"/></expr_stmt>
                <expr_stmt><expr><operator pos:line="48" pos:column="17">*<pos:position pos:line="48" pos:column="18"/></operator><name pos:line="48" pos:column="18">dst<pos:position pos:line="48" pos:column="21"/></name><operator pos:line="48" pos:column="21">++<pos:position pos:line="48" pos:column="23"/></operator> <operator pos:line="48" pos:column="24">=<pos:position pos:line="48" pos:column="25"/></operator> <literal type="char" pos:line="48" pos:column="26">' '<pos:position pos:line="48" pos:column="29"/></literal></expr>;<pos:position pos:line="48" pos:column="30"/></expr_stmt>
            }<pos:position pos:line="49" pos:column="14"/></block></then></if>
        }<pos:position pos:line="50" pos:column="10"/></block></then></if>
    }<pos:position pos:line="51" pos:column="6"/></block></for>
    <if pos:line="52" pos:column="5">if <condition pos:line="52" pos:column="8">(<expr><name pos:line="52" pos:column="9">dst<pos:position pos:line="52" pos:column="12"/></name></expr>)<pos:position pos:line="52" pos:column="13"/></condition><then pos:line="52" pos:column="13"> <block pos:line="52" pos:column="14">{
        <expr_stmt><expr><operator pos:line="53" pos:column="9">*<pos:position pos:line="53" pos:column="10"/></operator><name pos:line="53" pos:column="10">dst<pos:position pos:line="53" pos:column="13"/></name> <operator pos:line="53" pos:column="14">=<pos:position pos:line="53" pos:column="15"/></operator> <literal type="char" pos:line="53" pos:column="16">'\0'<pos:position pos:line="53" pos:column="20"/></literal></expr>;<pos:position pos:line="53" pos:column="21"/></expr_stmt>
    }<pos:position pos:line="54" pos:column="6"/></block></then></if>
    <return pos:line="55" pos:column="5">return <expr><literal type="number" pos:line="55" pos:column="12">1<pos:position pos:line="55" pos:column="13"/></literal></expr>;<pos:position pos:line="55" pos:column="14"/></return>
}<pos:position pos:line="56" pos:column="2"/></block></function></unit>

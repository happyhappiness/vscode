<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/httpd/gumtree/httpd_repos_function_828_httpd-2.2.23.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">int<pos:position pos:line="1" pos:column="11"/></name></type> <name pos:line="1" pos:column="12">ssl_find_vhost<pos:position pos:line="1" pos:column="26"/></name><parameter_list pos:line="1" pos:column="26">(<parameter><decl><type><name pos:line="1" pos:column="27">void<pos:position pos:line="1" pos:column="31"/></name> <modifier pos:line="1" pos:column="32">*<pos:position pos:line="1" pos:column="33"/></modifier></type><name pos:line="1" pos:column="33">servername<pos:position pos:line="1" pos:column="43"/></name></decl></parameter>, <parameter><decl><type><name pos:line="1" pos:column="45">conn_rec<pos:position pos:line="1" pos:column="53"/></name> <modifier pos:line="1" pos:column="54">*<pos:position pos:line="1" pos:column="55"/></modifier></type><name pos:line="1" pos:column="55">c<pos:position pos:line="1" pos:column="56"/></name></decl></parameter>, <parameter><decl><type><name pos:line="1" pos:column="58">server_rec<pos:position pos:line="1" pos:column="68"/></name> <modifier pos:line="1" pos:column="69">*<pos:position pos:line="1" pos:column="70"/></modifier></type><name pos:line="1" pos:column="70">s<pos:position pos:line="1" pos:column="71"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="72"/></parameter_list> 
<block pos:line="2" pos:column="1">{
    <decl_stmt><decl><type><name pos:line="3" pos:column="5">SSLSrvConfigRec<pos:position pos:line="3" pos:column="20"/></name> <modifier pos:line="3" pos:column="21">*<pos:position pos:line="3" pos:column="22"/></modifier></type><name pos:line="3" pos:column="22">sc<pos:position pos:line="3" pos:column="24"/></name></decl>;<pos:position pos:line="3" pos:column="25"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="4" pos:column="5">SSL<pos:position pos:line="4" pos:column="8"/></name> <modifier pos:line="4" pos:column="9">*<pos:position pos:line="4" pos:column="10"/></modifier></type><name pos:line="4" pos:column="10">ssl<pos:position pos:line="4" pos:column="13"/></name></decl>;<pos:position pos:line="4" pos:column="14"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="5" pos:column="5">BOOL<pos:position pos:line="5" pos:column="9"/></name></type> <name pos:line="5" pos:column="10">found<pos:position pos:line="5" pos:column="15"/></name> <init pos:line="5" pos:column="16">= <expr><name pos:line="5" pos:column="18">FALSE<pos:position pos:line="5" pos:column="23"/></name></expr></init></decl>;<pos:position pos:line="5" pos:column="24"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="6" pos:column="5">apr_array_header_t<pos:position pos:line="6" pos:column="23"/></name> <modifier pos:line="6" pos:column="24">*<pos:position pos:line="6" pos:column="25"/></modifier></type><name pos:line="6" pos:column="25">names<pos:position pos:line="6" pos:column="30"/></name></decl>;<pos:position pos:line="6" pos:column="31"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="7" pos:column="5">int<pos:position pos:line="7" pos:column="8"/></name></type> <name pos:line="7" pos:column="9">i<pos:position pos:line="7" pos:column="10"/></name></decl>;<pos:position pos:line="7" pos:column="11"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="8" pos:column="5">SSLConnRec<pos:position pos:line="8" pos:column="15"/></name> <modifier pos:line="8" pos:column="16">*<pos:position pos:line="8" pos:column="17"/></modifier></type><name pos:line="8" pos:column="17">sslcon<pos:position pos:line="8" pos:column="23"/></name></decl>;<pos:position pos:line="8" pos:column="24"/></decl_stmt>

    <comment type="block" pos:line="10" pos:column="5">/* check ServerName */</comment>
    <if pos:line="11" pos:column="5">if <condition pos:line="11" pos:column="8">(<expr><operator pos:line="11" pos:column="9">!<pos:position pos:line="11" pos:column="10"/></operator><call><name pos:line="11" pos:column="10">strcasecmp<pos:position pos:line="11" pos:column="20"/></name><argument_list pos:line="11" pos:column="20">(<argument><expr><name pos:line="11" pos:column="21">servername<pos:position pos:line="11" pos:column="31"/></name></expr></argument>, <argument><expr><name><name pos:line="11" pos:column="33">s<pos:position pos:line="11" pos:column="34"/></name><operator pos:line="11" pos:column="34">-&gt;<pos:position pos:line="11" pos:column="39"/></operator><name pos:line="11" pos:column="36">server_hostname<pos:position pos:line="11" pos:column="51"/></name></name></expr></argument>)<pos:position pos:line="11" pos:column="52"/></argument_list></call></expr>)<pos:position pos:line="11" pos:column="53"/></condition><then pos:line="11" pos:column="53"> <block pos:line="11" pos:column="54">{
        <expr_stmt><expr><name pos:line="12" pos:column="9">found<pos:position pos:line="12" pos:column="14"/></name> <operator pos:line="12" pos:column="15">=<pos:position pos:line="12" pos:column="16"/></operator> <name pos:line="12" pos:column="17">TRUE<pos:position pos:line="12" pos:column="21"/></name></expr>;<pos:position pos:line="12" pos:column="22"/></expr_stmt>
    }<pos:position pos:line="13" pos:column="6"/></block></then></if>

    <comment type="block" pos:line="15" pos:column="5">/* 
     * if not matched yet, check ServerAlias entries
     * (adapted from vhost.c:matches_aliases())
     */</comment>
    <if pos:line="19" pos:column="5">if <condition pos:line="19" pos:column="8">(<expr><operator pos:line="19" pos:column="9">!<pos:position pos:line="19" pos:column="10"/></operator><name pos:line="19" pos:column="10">found<pos:position pos:line="19" pos:column="15"/></name></expr>)<pos:position pos:line="19" pos:column="16"/></condition><then pos:line="19" pos:column="16"> <block pos:line="19" pos:column="17">{
        <expr_stmt><expr><name pos:line="20" pos:column="9">names<pos:position pos:line="20" pos:column="14"/></name> <operator pos:line="20" pos:column="15">=<pos:position pos:line="20" pos:column="16"/></operator> <name><name pos:line="20" pos:column="17">s<pos:position pos:line="20" pos:column="18"/></name><operator pos:line="20" pos:column="18">-&gt;<pos:position pos:line="20" pos:column="23"/></operator><name pos:line="20" pos:column="20">names<pos:position pos:line="20" pos:column="25"/></name></name></expr>;<pos:position pos:line="20" pos:column="26"/></expr_stmt>
        <if pos:line="21" pos:column="9">if <condition pos:line="21" pos:column="12">(<expr><name pos:line="21" pos:column="13">names<pos:position pos:line="21" pos:column="18"/></name></expr>)<pos:position pos:line="21" pos:column="19"/></condition><then pos:line="21" pos:column="19"> <block pos:line="21" pos:column="20">{
            <decl_stmt><decl><type><name pos:line="22" pos:column="13">char<pos:position pos:line="22" pos:column="17"/></name> <modifier pos:line="22" pos:column="18">*<pos:position pos:line="22" pos:column="19"/></modifier><modifier pos:line="22" pos:column="19">*<pos:position pos:line="22" pos:column="20"/></modifier></type><name pos:line="22" pos:column="20">name<pos:position pos:line="22" pos:column="24"/></name> <init pos:line="22" pos:column="25">= <expr><operator pos:line="22" pos:column="27">(<pos:position pos:line="22" pos:column="28"/></operator><name pos:line="22" pos:column="28">char<pos:position pos:line="22" pos:column="32"/></name> <operator pos:line="22" pos:column="33">*<pos:position pos:line="22" pos:column="34"/></operator><operator pos:line="22" pos:column="34">*<pos:position pos:line="22" pos:column="35"/></operator><operator pos:line="22" pos:column="35">)<pos:position pos:line="22" pos:column="36"/></operator><name><name pos:line="22" pos:column="36">names<pos:position pos:line="22" pos:column="41"/></name><operator pos:line="22" pos:column="41">-&gt;<pos:position pos:line="22" pos:column="46"/></operator><name pos:line="22" pos:column="43">elts<pos:position pos:line="22" pos:column="47"/></name></name></expr></init></decl>;<pos:position pos:line="22" pos:column="48"/></decl_stmt>
            <for pos:line="23" pos:column="13">for <control pos:line="23" pos:column="17">(<init><expr><name pos:line="23" pos:column="18">i<pos:position pos:line="23" pos:column="19"/></name> <operator pos:line="23" pos:column="20">=<pos:position pos:line="23" pos:column="21"/></operator> <literal type="number" pos:line="23" pos:column="22">0<pos:position pos:line="23" pos:column="23"/></literal></expr>;<pos:position pos:line="23" pos:column="24"/></init> <condition><expr><name pos:line="23" pos:column="25">i<pos:position pos:line="23" pos:column="26"/></name> <operator pos:line="23" pos:column="27">&lt;<pos:position pos:line="23" pos:column="31"/></operator> <name><name pos:line="23" pos:column="29">names<pos:position pos:line="23" pos:column="34"/></name><operator pos:line="23" pos:column="34">-&gt;<pos:position pos:line="23" pos:column="39"/></operator><name pos:line="23" pos:column="36">nelts<pos:position pos:line="23" pos:column="41"/></name></name></expr>;<pos:position pos:line="23" pos:column="42"/></condition> <incr><expr><operator pos:line="23" pos:column="43">++<pos:position pos:line="23" pos:column="45"/></operator><name pos:line="23" pos:column="45">i<pos:position pos:line="23" pos:column="46"/></name></expr></incr>)<pos:position pos:line="23" pos:column="47"/></control> <block pos:line="23" pos:column="48">{
                <if pos:line="24" pos:column="17">if <condition pos:line="24" pos:column="20">(<expr><operator pos:line="24" pos:column="21">!<pos:position pos:line="24" pos:column="22"/></operator><name><name pos:line="24" pos:column="22">name<pos:position pos:line="24" pos:column="26"/></name><index pos:line="24" pos:column="26">[<expr><name pos:line="24" pos:column="27">i<pos:position pos:line="24" pos:column="28"/></name></expr>]<pos:position pos:line="24" pos:column="29"/></index></name></expr>)<pos:position pos:line="24" pos:column="30"/></condition><then pos:line="24" pos:column="30">
                    <block type="pseudo"><continue pos:line="25" pos:column="21">continue;<pos:position pos:line="25" pos:column="30"/></continue></block></then></if>
                <if pos:line="26" pos:column="17">if <condition pos:line="26" pos:column="20">(<expr><operator pos:line="26" pos:column="21">!<pos:position pos:line="26" pos:column="22"/></operator><call><name pos:line="26" pos:column="22">strcasecmp<pos:position pos:line="26" pos:column="32"/></name><argument_list pos:line="26" pos:column="32">(<argument><expr><name pos:line="26" pos:column="33">servername<pos:position pos:line="26" pos:column="43"/></name></expr></argument>, <argument><expr><name><name pos:line="26" pos:column="45">name<pos:position pos:line="26" pos:column="49"/></name><index pos:line="26" pos:column="49">[<expr><name pos:line="26" pos:column="50">i<pos:position pos:line="26" pos:column="51"/></name></expr>]<pos:position pos:line="26" pos:column="52"/></index></name></expr></argument>)<pos:position pos:line="26" pos:column="53"/></argument_list></call></expr>)<pos:position pos:line="26" pos:column="54"/></condition><then pos:line="26" pos:column="54"> <block pos:line="26" pos:column="55">{
                    <expr_stmt><expr><name pos:line="27" pos:column="21">found<pos:position pos:line="27" pos:column="26"/></name> <operator pos:line="27" pos:column="27">=<pos:position pos:line="27" pos:column="28"/></operator> <name pos:line="27" pos:column="29">TRUE<pos:position pos:line="27" pos:column="33"/></name></expr>;<pos:position pos:line="27" pos:column="34"/></expr_stmt>
                    <break pos:line="28" pos:column="21">break;<pos:position pos:line="28" pos:column="27"/></break>
                }<pos:position pos:line="29" pos:column="18"/></block></then></if>
            }<pos:position pos:line="30" pos:column="14"/></block></for>
        }<pos:position pos:line="31" pos:column="10"/></block></then></if>
    }<pos:position pos:line="32" pos:column="6"/></block></then></if>

    <comment type="block" pos:line="34" pos:column="5">/* if still no match, check ServerAlias entries with wildcards */</comment>
    <if pos:line="35" pos:column="5">if <condition pos:line="35" pos:column="8">(<expr><operator pos:line="35" pos:column="9">!<pos:position pos:line="35" pos:column="10"/></operator><name pos:line="35" pos:column="10">found<pos:position pos:line="35" pos:column="15"/></name></expr>)<pos:position pos:line="35" pos:column="16"/></condition><then pos:line="35" pos:column="16"> <block pos:line="35" pos:column="17">{
        <expr_stmt><expr><name pos:line="36" pos:column="9">names<pos:position pos:line="36" pos:column="14"/></name> <operator pos:line="36" pos:column="15">=<pos:position pos:line="36" pos:column="16"/></operator> <name><name pos:line="36" pos:column="17">s<pos:position pos:line="36" pos:column="18"/></name><operator pos:line="36" pos:column="18">-&gt;<pos:position pos:line="36" pos:column="23"/></operator><name pos:line="36" pos:column="20">wild_names<pos:position pos:line="36" pos:column="30"/></name></name></expr>;<pos:position pos:line="36" pos:column="31"/></expr_stmt>
        <if pos:line="37" pos:column="9">if <condition pos:line="37" pos:column="12">(<expr><name pos:line="37" pos:column="13">names<pos:position pos:line="37" pos:column="18"/></name></expr>)<pos:position pos:line="37" pos:column="19"/></condition><then pos:line="37" pos:column="19"> <block pos:line="37" pos:column="20">{
            <decl_stmt><decl><type><name pos:line="38" pos:column="13">char<pos:position pos:line="38" pos:column="17"/></name> <modifier pos:line="38" pos:column="18">*<pos:position pos:line="38" pos:column="19"/></modifier><modifier pos:line="38" pos:column="19">*<pos:position pos:line="38" pos:column="20"/></modifier></type><name pos:line="38" pos:column="20">name<pos:position pos:line="38" pos:column="24"/></name> <init pos:line="38" pos:column="25">= <expr><operator pos:line="38" pos:column="27">(<pos:position pos:line="38" pos:column="28"/></operator><name pos:line="38" pos:column="28">char<pos:position pos:line="38" pos:column="32"/></name> <operator pos:line="38" pos:column="33">*<pos:position pos:line="38" pos:column="34"/></operator><operator pos:line="38" pos:column="34">*<pos:position pos:line="38" pos:column="35"/></operator><operator pos:line="38" pos:column="35">)<pos:position pos:line="38" pos:column="36"/></operator><name><name pos:line="38" pos:column="36">names<pos:position pos:line="38" pos:column="41"/></name><operator pos:line="38" pos:column="41">-&gt;<pos:position pos:line="38" pos:column="46"/></operator><name pos:line="38" pos:column="43">elts<pos:position pos:line="38" pos:column="47"/></name></name></expr></init></decl>;<pos:position pos:line="38" pos:column="48"/></decl_stmt>
            <for pos:line="39" pos:column="13">for <control pos:line="39" pos:column="17">(<init><expr><name pos:line="39" pos:column="18">i<pos:position pos:line="39" pos:column="19"/></name> <operator pos:line="39" pos:column="20">=<pos:position pos:line="39" pos:column="21"/></operator> <literal type="number" pos:line="39" pos:column="22">0<pos:position pos:line="39" pos:column="23"/></literal></expr>;<pos:position pos:line="39" pos:column="24"/></init> <condition><expr><name pos:line="39" pos:column="25">i<pos:position pos:line="39" pos:column="26"/></name> <operator pos:line="39" pos:column="27">&lt;<pos:position pos:line="39" pos:column="31"/></operator> <name><name pos:line="39" pos:column="29">names<pos:position pos:line="39" pos:column="34"/></name><operator pos:line="39" pos:column="34">-&gt;<pos:position pos:line="39" pos:column="39"/></operator><name pos:line="39" pos:column="36">nelts<pos:position pos:line="39" pos:column="41"/></name></name></expr>;<pos:position pos:line="39" pos:column="42"/></condition> <incr><expr><operator pos:line="39" pos:column="43">++<pos:position pos:line="39" pos:column="45"/></operator><name pos:line="39" pos:column="45">i<pos:position pos:line="39" pos:column="46"/></name></expr></incr>)<pos:position pos:line="39" pos:column="47"/></control> <block pos:line="39" pos:column="48">{
                <if pos:line="40" pos:column="17">if <condition pos:line="40" pos:column="20">(<expr><operator pos:line="40" pos:column="21">!<pos:position pos:line="40" pos:column="22"/></operator><name><name pos:line="40" pos:column="22">name<pos:position pos:line="40" pos:column="26"/></name><index pos:line="40" pos:column="26">[<expr><name pos:line="40" pos:column="27">i<pos:position pos:line="40" pos:column="28"/></name></expr>]<pos:position pos:line="40" pos:column="29"/></index></name></expr>)<pos:position pos:line="40" pos:column="30"/></condition><then pos:line="40" pos:column="30">
                    <block type="pseudo"><continue pos:line="41" pos:column="21">continue;<pos:position pos:line="41" pos:column="30"/></continue></block></then></if>
                <if pos:line="42" pos:column="17">if <condition pos:line="42" pos:column="20">(<expr><operator pos:line="42" pos:column="21">!<pos:position pos:line="42" pos:column="22"/></operator><call><name pos:line="42" pos:column="22">ap_strcasecmp_match<pos:position pos:line="42" pos:column="41"/></name><argument_list pos:line="42" pos:column="41">(<argument><expr><name pos:line="42" pos:column="42">servername<pos:position pos:line="42" pos:column="52"/></name></expr></argument>, <argument><expr><name><name pos:line="42" pos:column="54">name<pos:position pos:line="42" pos:column="58"/></name><index pos:line="42" pos:column="58">[<expr><name pos:line="42" pos:column="59">i<pos:position pos:line="42" pos:column="60"/></name></expr>]<pos:position pos:line="42" pos:column="61"/></index></name></expr></argument>)<pos:position pos:line="42" pos:column="62"/></argument_list></call></expr>)<pos:position pos:line="42" pos:column="63"/></condition><then pos:line="42" pos:column="63"> <block pos:line="42" pos:column="64">{
                    <expr_stmt><expr><name pos:line="43" pos:column="21">found<pos:position pos:line="43" pos:column="26"/></name> <operator pos:line="43" pos:column="27">=<pos:position pos:line="43" pos:column="28"/></operator> <name pos:line="43" pos:column="29">TRUE<pos:position pos:line="43" pos:column="33"/></name></expr>;<pos:position pos:line="43" pos:column="34"/></expr_stmt>
                    <break pos:line="44" pos:column="21">break;<pos:position pos:line="44" pos:column="27"/></break>
                }<pos:position pos:line="45" pos:column="18"/></block></then></if>
            }<pos:position pos:line="46" pos:column="14"/></block></for>
        }<pos:position pos:line="47" pos:column="10"/></block></then></if>
    }<pos:position pos:line="48" pos:column="6"/></block></then></if>

    <comment type="block" pos:line="50" pos:column="5">/* set SSL_CTX (if matched) */</comment>
    <expr_stmt><expr><name pos:line="51" pos:column="5">sslcon<pos:position pos:line="51" pos:column="11"/></name> <operator pos:line="51" pos:column="12">=<pos:position pos:line="51" pos:column="13"/></operator> <call><name pos:line="51" pos:column="14">myConnConfig<pos:position pos:line="51" pos:column="26"/></name><argument_list pos:line="51" pos:column="26">(<argument><expr><name pos:line="51" pos:column="27">c<pos:position pos:line="51" pos:column="28"/></name></expr></argument>)<pos:position pos:line="51" pos:column="29"/></argument_list></call></expr>;<pos:position pos:line="51" pos:column="30"/></expr_stmt>
    <if pos:line="52" pos:column="5">if <condition pos:line="52" pos:column="8">(<expr><name pos:line="52" pos:column="9">found<pos:position pos:line="52" pos:column="14"/></name> <operator pos:line="52" pos:column="15">&amp;&amp;<pos:position pos:line="52" pos:column="25"/></operator> <operator pos:line="52" pos:column="18">(<pos:position pos:line="52" pos:column="19"/></operator><name pos:line="52" pos:column="19">ssl<pos:position pos:line="52" pos:column="22"/></name> <operator pos:line="52" pos:column="23">=<pos:position pos:line="52" pos:column="24"/></operator> <name><name pos:line="52" pos:column="25">sslcon<pos:position pos:line="52" pos:column="31"/></name><operator pos:line="52" pos:column="31">-&gt;<pos:position pos:line="52" pos:column="36"/></operator><name pos:line="52" pos:column="33">ssl<pos:position pos:line="52" pos:column="36"/></name></name><operator pos:line="52" pos:column="36">)<pos:position pos:line="52" pos:column="37"/></operator> <operator pos:line="52" pos:column="38">&amp;&amp;<pos:position pos:line="52" pos:column="48"/></operator>
        <operator pos:line="53" pos:column="9">(<pos:position pos:line="53" pos:column="10"/></operator><name pos:line="53" pos:column="10">sc<pos:position pos:line="53" pos:column="12"/></name> <operator pos:line="53" pos:column="13">=<pos:position pos:line="53" pos:column="14"/></operator> <call><name pos:line="53" pos:column="15">mySrvConfig<pos:position pos:line="53" pos:column="26"/></name><argument_list pos:line="53" pos:column="26">(<argument><expr><name pos:line="53" pos:column="27">s<pos:position pos:line="53" pos:column="28"/></name></expr></argument>)<pos:position pos:line="53" pos:column="29"/></argument_list></call><operator pos:line="53" pos:column="29">)<pos:position pos:line="53" pos:column="30"/></operator></expr>)<pos:position pos:line="53" pos:column="31"/></condition><then pos:line="53" pos:column="31"> <block pos:line="53" pos:column="32">{
        <expr_stmt><expr><call><name pos:line="54" pos:column="9">SSL_set_SSL_CTX<pos:position pos:line="54" pos:column="24"/></name><argument_list pos:line="54" pos:column="24">(<argument><expr><name pos:line="54" pos:column="25">ssl<pos:position pos:line="54" pos:column="28"/></name></expr></argument>, <argument><expr><name><name pos:line="54" pos:column="30">sc<pos:position pos:line="54" pos:column="32"/></name><operator pos:line="54" pos:column="32">-&gt;<pos:position pos:line="54" pos:column="37"/></operator><name pos:line="54" pos:column="34">server<pos:position pos:line="54" pos:column="40"/></name><operator pos:line="54" pos:column="40">-&gt;<pos:position pos:line="54" pos:column="45"/></operator><name pos:line="54" pos:column="42">ssl_ctx<pos:position pos:line="54" pos:column="49"/></name></name></expr></argument>)<pos:position pos:line="54" pos:column="50"/></argument_list></call></expr>;<pos:position pos:line="54" pos:column="51"/></expr_stmt>
        <comment type="block" pos:line="55" pos:column="9">/*
         * SSL_set_SSL_CTX() only deals with the server cert,
         * so we need to duplicate a few additional settings
         * from the ctx by hand
         */</comment>
        <expr_stmt><expr><call><name pos:line="60" pos:column="9">SSL_set_options<pos:position pos:line="60" pos:column="24"/></name><argument_list pos:line="60" pos:column="24">(<argument><expr><name pos:line="60" pos:column="25">ssl<pos:position pos:line="60" pos:column="28"/></name></expr></argument>, <argument><expr><call><name pos:line="60" pos:column="30">SSL_CTX_get_options<pos:position pos:line="60" pos:column="49"/></name><argument_list pos:line="60" pos:column="49">(<argument><expr><name><name pos:line="60" pos:column="50">ssl<pos:position pos:line="60" pos:column="53"/></name><operator pos:line="60" pos:column="53">-&gt;<pos:position pos:line="60" pos:column="58"/></operator><name pos:line="60" pos:column="55">ctx<pos:position pos:line="60" pos:column="58"/></name></name></expr></argument>)<pos:position pos:line="60" pos:column="59"/></argument_list></call></expr></argument>)<pos:position pos:line="60" pos:column="60"/></argument_list></call></expr>;<pos:position pos:line="60" pos:column="61"/></expr_stmt>
        <if pos:line="61" pos:column="9">if <condition pos:line="61" pos:column="12">(<expr><operator pos:line="61" pos:column="13">(<pos:position pos:line="61" pos:column="14"/></operator><call><name pos:line="61" pos:column="14">SSL_get_verify_mode<pos:position pos:line="61" pos:column="33"/></name><argument_list pos:line="61" pos:column="33">(<argument><expr><name pos:line="61" pos:column="34">ssl<pos:position pos:line="61" pos:column="37"/></name></expr></argument>)<pos:position pos:line="61" pos:column="38"/></argument_list></call> <operator pos:line="61" pos:column="39">==<pos:position pos:line="61" pos:column="41"/></operator> <name pos:line="61" pos:column="42">SSL_VERIFY_NONE<pos:position pos:line="61" pos:column="57"/></name><operator pos:line="61" pos:column="57">)<pos:position pos:line="61" pos:column="58"/></operator> <operator pos:line="61" pos:column="59">||<pos:position pos:line="61" pos:column="61"/></operator>
            <operator pos:line="62" pos:column="13">(<pos:position pos:line="62" pos:column="14"/></operator><call><name pos:line="62" pos:column="14">SSL_num_renegotiations<pos:position pos:line="62" pos:column="36"/></name><argument_list pos:line="62" pos:column="36">(<argument><expr><name pos:line="62" pos:column="37">ssl<pos:position pos:line="62" pos:column="40"/></name></expr></argument>)<pos:position pos:line="62" pos:column="41"/></argument_list></call> <operator pos:line="62" pos:column="42">==<pos:position pos:line="62" pos:column="44"/></operator> <literal type="number" pos:line="62" pos:column="45">0<pos:position pos:line="62" pos:column="46"/></literal><operator pos:line="62" pos:column="46">)<pos:position pos:line="62" pos:column="47"/></operator></expr>)<pos:position pos:line="62" pos:column="48"/></condition><then pos:line="62" pos:column="48"> <block pos:line="62" pos:column="49">{
           <comment type="block" pos:line="63" pos:column="12">/*
            * Only initialize the verification settings from the ctx
            * if they are not yet set, or if we're called when a new
            * SSL connection is set up (num_renegotiations == 0).
            * Otherwise, we would possibly reset a per-directory
            * configuration which was put into effect by ssl_hook_Access.
            */</comment>
            <expr_stmt><expr><call><name pos:line="70" pos:column="13">SSL_set_verify<pos:position pos:line="70" pos:column="27"/></name><argument_list pos:line="70" pos:column="27">(<argument><expr><name pos:line="70" pos:column="28">ssl<pos:position pos:line="70" pos:column="31"/></name></expr></argument>, <argument><expr><call><name pos:line="70" pos:column="33">SSL_CTX_get_verify_mode<pos:position pos:line="70" pos:column="56"/></name><argument_list pos:line="70" pos:column="56">(<argument><expr><name><name pos:line="70" pos:column="57">ssl<pos:position pos:line="70" pos:column="60"/></name><operator pos:line="70" pos:column="60">-&gt;<pos:position pos:line="70" pos:column="65"/></operator><name pos:line="70" pos:column="62">ctx<pos:position pos:line="70" pos:column="65"/></name></name></expr></argument>)<pos:position pos:line="70" pos:column="66"/></argument_list></call></expr></argument>,
                           <argument><expr><call><name pos:line="71" pos:column="28">SSL_CTX_get_verify_callback<pos:position pos:line="71" pos:column="55"/></name><argument_list pos:line="71" pos:column="55">(<argument><expr><name><name pos:line="71" pos:column="56">ssl<pos:position pos:line="71" pos:column="59"/></name><operator pos:line="71" pos:column="59">-&gt;<pos:position pos:line="71" pos:column="64"/></operator><name pos:line="71" pos:column="61">ctx<pos:position pos:line="71" pos:column="64"/></name></name></expr></argument>)<pos:position pos:line="71" pos:column="65"/></argument_list></call></expr></argument>)<pos:position pos:line="71" pos:column="66"/></argument_list></call></expr>;<pos:position pos:line="71" pos:column="67"/></expr_stmt>
        }<pos:position pos:line="72" pos:column="10"/></block></then></if>

        <comment type="block" pos:line="74" pos:column="9">/*
         * Save the found server into our SSLConnRec for later
         * retrieval
         */</comment>
        <expr_stmt><expr><name><name pos:line="78" pos:column="9">sslcon<pos:position pos:line="78" pos:column="15"/></name><operator pos:line="78" pos:column="15">-&gt;<pos:position pos:line="78" pos:column="20"/></operator><name pos:line="78" pos:column="17">server<pos:position pos:line="78" pos:column="23"/></name></name> <operator pos:line="78" pos:column="24">=<pos:position pos:line="78" pos:column="25"/></operator> <name pos:line="78" pos:column="26">s<pos:position pos:line="78" pos:column="27"/></name></expr>;<pos:position pos:line="78" pos:column="28"/></expr_stmt>

        <comment type="block" pos:line="80" pos:column="9">/*
         * There is one special filter callback, which is set
         * very early depending on the base_server's log level.
         * If this is not the first vhost we're now selecting
         * (and the first vhost doesn't use APLOG_DEBUG), then
         * we need to set that callback here.
         */</comment>
        <if pos:line="87" pos:column="9">if <condition pos:line="87" pos:column="12">(<expr><name><name pos:line="87" pos:column="13">s<pos:position pos:line="87" pos:column="14"/></name><operator pos:line="87" pos:column="14">-&gt;<pos:position pos:line="87" pos:column="19"/></operator><name pos:line="87" pos:column="16">loglevel<pos:position pos:line="87" pos:column="24"/></name></name> <operator pos:line="87" pos:column="25">&gt;=<pos:position pos:line="87" pos:column="30"/></operator> <name pos:line="87" pos:column="28">APLOG_DEBUG<pos:position pos:line="87" pos:column="39"/></name></expr>)<pos:position pos:line="87" pos:column="40"/></condition><then pos:line="87" pos:column="40"> <block pos:line="87" pos:column="41">{
            <expr_stmt><expr><call><name pos:line="88" pos:column="13">BIO_set_callback<pos:position pos:line="88" pos:column="29"/></name><argument_list pos:line="88" pos:column="29">(<argument><expr><call><name pos:line="88" pos:column="30">SSL_get_rbio<pos:position pos:line="88" pos:column="42"/></name><argument_list pos:line="88" pos:column="42">(<argument><expr><name pos:line="88" pos:column="43">ssl<pos:position pos:line="88" pos:column="46"/></name></expr></argument>)<pos:position pos:line="88" pos:column="47"/></argument_list></call></expr></argument>, <argument><expr><name pos:line="88" pos:column="49">ssl_io_data_cb<pos:position pos:line="88" pos:column="63"/></name></expr></argument>)<pos:position pos:line="88" pos:column="64"/></argument_list></call></expr>;<pos:position pos:line="88" pos:column="65"/></expr_stmt>
            <expr_stmt><expr><call><name pos:line="89" pos:column="13">BIO_set_callback_arg<pos:position pos:line="89" pos:column="33"/></name><argument_list pos:line="89" pos:column="33">(<argument><expr><call><name pos:line="89" pos:column="34">SSL_get_rbio<pos:position pos:line="89" pos:column="46"/></name><argument_list pos:line="89" pos:column="46">(<argument><expr><name pos:line="89" pos:column="47">ssl<pos:position pos:line="89" pos:column="50"/></name></expr></argument>)<pos:position pos:line="89" pos:column="51"/></argument_list></call></expr></argument>, <argument><expr><operator pos:line="89" pos:column="53">(<pos:position pos:line="89" pos:column="54"/></operator><name pos:line="89" pos:column="54">void<pos:position pos:line="89" pos:column="58"/></name> <operator pos:line="89" pos:column="59">*<pos:position pos:line="89" pos:column="60"/></operator><operator pos:line="89" pos:column="60">)<pos:position pos:line="89" pos:column="61"/></operator><name pos:line="89" pos:column="61">ssl<pos:position pos:line="89" pos:column="64"/></name></expr></argument>)<pos:position pos:line="89" pos:column="65"/></argument_list></call></expr>;<pos:position pos:line="89" pos:column="66"/></expr_stmt>
        }<pos:position pos:line="90" pos:column="10"/></block></then></if>

        <return pos:line="92" pos:column="9">return <expr><literal type="number" pos:line="92" pos:column="16">1<pos:position pos:line="92" pos:column="17"/></literal></expr>;<pos:position pos:line="92" pos:column="18"/></return>
    }<pos:position pos:line="93" pos:column="6"/></block></then></if>

    <return pos:line="95" pos:column="5">return <expr><literal type="number" pos:line="95" pos:column="12">0<pos:position pos:line="95" pos:column="13"/></literal></expr>;<pos:position pos:line="95" pos:column="14"/></return>
}<pos:position pos:line="96" pos:column="2"/></block></function></unit>

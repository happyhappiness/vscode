<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/httpd/gumtree/httpd_function_2469.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">int<pos:position pos:line="1" pos:column="11"/></name></type> <name pos:line="1" pos:column="12">read_request_line<pos:position pos:line="1" pos:column="29"/></name><parameter_list pos:line="1" pos:column="29">(<parameter><decl><type><name pos:line="1" pos:column="30">request_rec<pos:position pos:line="1" pos:column="41"/></name> <modifier pos:line="1" pos:column="42">*<pos:position pos:line="1" pos:column="43"/></modifier></type><name pos:line="1" pos:column="43">r<pos:position pos:line="1" pos:column="44"/></name></decl></parameter>, <parameter><decl><type><name pos:line="1" pos:column="46">apr_bucket_brigade<pos:position pos:line="1" pos:column="64"/></name> <modifier pos:line="1" pos:column="65">*<pos:position pos:line="1" pos:column="66"/></modifier></type><name pos:line="1" pos:column="66">bb<pos:position pos:line="1" pos:column="68"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="69"/></parameter_list>
<block pos:line="2" pos:column="1">{
    <decl_stmt><decl><type><specifier pos:line="3" pos:column="5">const<pos:position pos:line="3" pos:column="10"/></specifier> <name pos:line="3" pos:column="11">char<pos:position pos:line="3" pos:column="15"/></name> <modifier pos:line="3" pos:column="16">*<pos:position pos:line="3" pos:column="17"/></modifier></type><name pos:line="3" pos:column="17">ll<pos:position pos:line="3" pos:column="19"/></name></decl>;<pos:position pos:line="3" pos:column="20"/></decl_stmt>
    <decl_stmt><decl><type><specifier pos:line="4" pos:column="5">const<pos:position pos:line="4" pos:column="10"/></specifier> <name pos:line="4" pos:column="11">char<pos:position pos:line="4" pos:column="15"/></name> <modifier pos:line="4" pos:column="16">*<pos:position pos:line="4" pos:column="17"/></modifier></type><name pos:line="4" pos:column="17">uri<pos:position pos:line="4" pos:column="20"/></name></decl>;<pos:position pos:line="4" pos:column="21"/></decl_stmt>
    <decl_stmt><decl><type><specifier pos:line="5" pos:column="5">const<pos:position pos:line="5" pos:column="10"/></specifier> <name pos:line="5" pos:column="11">char<pos:position pos:line="5" pos:column="15"/></name> <modifier pos:line="5" pos:column="16">*<pos:position pos:line="5" pos:column="17"/></modifier></type><name pos:line="5" pos:column="17">pro<pos:position pos:line="5" pos:column="20"/></name></decl>;<pos:position pos:line="5" pos:column="21"/></decl_stmt>

<cpp:if pos:line="7" pos:column="1">#<cpp:directive pos:line="7" pos:column="2">if<pos:position pos:line="7" pos:column="4"/></cpp:directive> <expr><literal type="number" pos:line="7" pos:column="5">0<pos:position pos:line="7" pos:column="6"/></literal></expr></cpp:if>
    conn_rec *conn = r-&gt;connection;
<cpp:endif pos:line="9" pos:column="1">#<cpp:directive pos:line="9" pos:column="2">endif<pos:position pos:line="9" pos:column="7"/></cpp:directive></cpp:endif>
    <decl_stmt><decl><type><name pos:line="10" pos:column="5">int<pos:position pos:line="10" pos:column="8"/></name></type> <name pos:line="10" pos:column="9">major<pos:position pos:line="10" pos:column="14"/></name> <init pos:line="10" pos:column="15">= <expr><literal type="number" pos:line="10" pos:column="17">1<pos:position pos:line="10" pos:column="18"/></literal></expr></init></decl>, <decl><type ref="prev"/><name pos:line="10" pos:column="20">minor<pos:position pos:line="10" pos:column="25"/></name> <init pos:line="10" pos:column="26">= <expr><literal type="number" pos:line="10" pos:column="28">0<pos:position pos:line="10" pos:column="29"/></literal></expr></init></decl>;<pos:position pos:line="10" pos:column="30"/></decl_stmt>   <comment type="block" pos:line="10" pos:column="33">/* Assume HTTP/1.0 if non-"HTTP" protocol */</comment>
    <decl_stmt><decl><type><name pos:line="11" pos:column="5">char<pos:position pos:line="11" pos:column="9"/></name></type> <name><name pos:line="11" pos:column="10">http<pos:position pos:line="11" pos:column="14"/></name><index pos:line="11" pos:column="14">[<expr><literal type="number" pos:line="11" pos:column="15">5<pos:position pos:line="11" pos:column="16"/></literal></expr>]<pos:position pos:line="11" pos:column="17"/></index></name></decl>;<pos:position pos:line="11" pos:column="18"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="12" pos:column="5">apr_size_t<pos:position pos:line="12" pos:column="15"/></name></type> <name pos:line="12" pos:column="16">len<pos:position pos:line="12" pos:column="19"/></name></decl>;<pos:position pos:line="12" pos:column="20"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="13" pos:column="5">int<pos:position pos:line="13" pos:column="8"/></name></type> <name pos:line="13" pos:column="9">num_blank_lines<pos:position pos:line="13" pos:column="24"/></name> <init pos:line="13" pos:column="25">= <expr><literal type="number" pos:line="13" pos:column="27">0<pos:position pos:line="13" pos:column="28"/></literal></expr></init></decl>;<pos:position pos:line="13" pos:column="29"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="14" pos:column="5">int<pos:position pos:line="14" pos:column="8"/></name></type> <name pos:line="14" pos:column="9">max_blank_lines<pos:position pos:line="14" pos:column="24"/></name> <init pos:line="14" pos:column="25">= <expr><name><name pos:line="14" pos:column="27">r<pos:position pos:line="14" pos:column="28"/></name><operator pos:line="14" pos:column="28">-&gt;<pos:position pos:line="14" pos:column="33"/></operator><name pos:line="14" pos:column="30">server<pos:position pos:line="14" pos:column="36"/></name><operator pos:line="14" pos:column="36">-&gt;<pos:position pos:line="14" pos:column="41"/></operator><name pos:line="14" pos:column="38">limit_req_fields<pos:position pos:line="14" pos:column="54"/></name></name></expr></init></decl>;<pos:position pos:line="14" pos:column="55"/></decl_stmt>

    <if pos:line="16" pos:column="5">if <condition pos:line="16" pos:column="8">(<expr><name pos:line="16" pos:column="9">max_blank_lines<pos:position pos:line="16" pos:column="24"/></name> <operator pos:line="16" pos:column="25">&lt;=<pos:position pos:line="16" pos:column="30"/></operator> <literal type="number" pos:line="16" pos:column="28">0<pos:position pos:line="16" pos:column="29"/></literal></expr>)<pos:position pos:line="16" pos:column="30"/></condition><then pos:line="16" pos:column="30"> <block pos:line="16" pos:column="31">{
        <expr_stmt><expr><name pos:line="17" pos:column="9">max_blank_lines<pos:position pos:line="17" pos:column="24"/></name> <operator pos:line="17" pos:column="25">=<pos:position pos:line="17" pos:column="26"/></operator> <name pos:line="17" pos:column="27">DEFAULT_LIMIT_REQUEST_FIELDS<pos:position pos:line="17" pos:column="55"/></name></expr>;<pos:position pos:line="17" pos:column="56"/></expr_stmt>
    }<pos:position pos:line="18" pos:column="6"/></block></then></if>

    <comment type="block" pos:line="20" pos:column="5">/* Read past empty lines until we get a real request line,
     * a read error, the connection closes (EOF), or we timeout.
     *
     * We skip empty lines because browsers have to tack a CRLF on to the end
     * of POSTs to support old CERN webservers.  But note that we may not
     * have flushed any previous response completely to the client yet.
     * We delay the flush as long as possible so that we can improve
     * performance for clients that are pipelining requests.  If a request
     * is pipelined then we won't block during the (implicit) read() below.
     * If the requests aren't pipelined, then the client is still waiting
     * for the final buffer flush from us, and we will block in the implicit
     * read().  B_SAFEREAD ensures that the BUFF layer flushes if it will
     * have to block during a read.
     */</comment>

    <do pos:line="35" pos:column="5">do <block pos:line="35" pos:column="8">{
        <decl_stmt><decl><type><name pos:line="36" pos:column="9">apr_status_t<pos:position pos:line="36" pos:column="21"/></name></type> <name pos:line="36" pos:column="22">rv<pos:position pos:line="36" pos:column="24"/></name></decl>;<pos:position pos:line="36" pos:column="25"/></decl_stmt>

        <comment type="block" pos:line="38" pos:column="9">/* insure ap_rgetline allocates memory each time thru the loop
         * if there are empty lines
         */</comment>
        <expr_stmt><expr><name><name pos:line="41" pos:column="9">r<pos:position pos:line="41" pos:column="10"/></name><operator pos:line="41" pos:column="10">-&gt;<pos:position pos:line="41" pos:column="15"/></operator><name pos:line="41" pos:column="12">the_request<pos:position pos:line="41" pos:column="23"/></name></name> <operator pos:line="41" pos:column="24">=<pos:position pos:line="41" pos:column="25"/></operator> <name pos:line="41" pos:column="26">NULL<pos:position pos:line="41" pos:column="30"/></name></expr>;<pos:position pos:line="41" pos:column="31"/></expr_stmt>
        <expr_stmt><expr><name pos:line="42" pos:column="9">rv<pos:position pos:line="42" pos:column="11"/></name> <operator pos:line="42" pos:column="12">=<pos:position pos:line="42" pos:column="13"/></operator> <call><name pos:line="42" pos:column="14">ap_rgetline<pos:position pos:line="42" pos:column="25"/></name><argument_list pos:line="42" pos:column="25">(<argument><expr><operator pos:line="42" pos:column="26">&amp;<pos:position pos:line="42" pos:column="31"/></operator><operator pos:line="42" pos:column="27">(<pos:position pos:line="42" pos:column="28"/></operator><name><name pos:line="42" pos:column="28">r<pos:position pos:line="42" pos:column="29"/></name><operator pos:line="42" pos:column="29">-&gt;<pos:position pos:line="42" pos:column="34"/></operator><name pos:line="42" pos:column="31">the_request<pos:position pos:line="42" pos:column="42"/></name></name><operator pos:line="42" pos:column="42">)<pos:position pos:line="42" pos:column="43"/></operator></expr></argument>, <argument><expr><call pos:line="42" pos:column="45">(<name pos:line="42" pos:column="46">apr_size_t<pos:position pos:line="42" pos:column="56"/></name>)<argument_list pos:line="42" pos:column="57">(<argument><expr><name><name pos:line="42" pos:column="58">r<pos:position pos:line="42" pos:column="59"/></name><operator pos:line="42" pos:column="59">-&gt;<pos:position pos:line="42" pos:column="64"/></operator><name pos:line="42" pos:column="61">server<pos:position pos:line="42" pos:column="67"/></name><operator pos:line="42" pos:column="67">-&gt;<pos:position pos:line="42" pos:column="72"/></operator><name pos:line="42" pos:column="69">limit_req_line<pos:position pos:line="42" pos:column="83"/></name></name> <operator pos:line="42" pos:column="84">+<pos:position pos:line="42" pos:column="85"/></operator> <literal type="number" pos:line="42" pos:column="86">2<pos:position pos:line="42" pos:column="87"/></literal></expr></argument>)<pos:position pos:line="42" pos:column="88"/></argument_list></call></expr></argument>,
                         <argument><expr><operator pos:line="43" pos:column="26">&amp;<pos:position pos:line="43" pos:column="31"/></operator><name pos:line="43" pos:column="27">len<pos:position pos:line="43" pos:column="30"/></name></expr></argument>, <argument><expr><name pos:line="43" pos:column="32">r<pos:position pos:line="43" pos:column="33"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="43" pos:column="35">0<pos:position pos:line="43" pos:column="36"/></literal></expr></argument>, <argument><expr><name pos:line="43" pos:column="38">bb<pos:position pos:line="43" pos:column="40"/></name></expr></argument>)<pos:position pos:line="43" pos:column="41"/></argument_list></call></expr>;<pos:position pos:line="43" pos:column="42"/></expr_stmt>

        <if pos:line="45" pos:column="9">if <condition pos:line="45" pos:column="12">(<expr><name pos:line="45" pos:column="13">rv<pos:position pos:line="45" pos:column="15"/></name> <operator pos:line="45" pos:column="16">!=<pos:position pos:line="45" pos:column="18"/></operator> <name pos:line="45" pos:column="19">APR_SUCCESS<pos:position pos:line="45" pos:column="30"/></name></expr>)<pos:position pos:line="45" pos:column="31"/></condition><then pos:line="45" pos:column="31"> <block pos:line="45" pos:column="32">{
            <expr_stmt><expr><name><name pos:line="46" pos:column="13">r<pos:position pos:line="46" pos:column="14"/></name><operator pos:line="46" pos:column="14">-&gt;<pos:position pos:line="46" pos:column="19"/></operator><name pos:line="46" pos:column="16">request_time<pos:position pos:line="46" pos:column="28"/></name></name> <operator pos:line="46" pos:column="29">=<pos:position pos:line="46" pos:column="30"/></operator> <call><name pos:line="46" pos:column="31">apr_time_now<pos:position pos:line="46" pos:column="43"/></name><argument_list pos:line="46" pos:column="43">()<pos:position pos:line="46" pos:column="45"/></argument_list></call></expr>;<pos:position pos:line="46" pos:column="46"/></expr_stmt>

            <comment type="block" pos:line="48" pos:column="13">/* ap_rgetline returns APR_ENOSPC if it fills up the
             * buffer before finding the end-of-line.  This is only going to
             * happen if it exceeds the configured limit for a request-line.
             */</comment>
            <if pos:line="52" pos:column="13">if <condition pos:line="52" pos:column="16">(<expr><name pos:line="52" pos:column="17">rv<pos:position pos:line="52" pos:column="19"/></name> <operator pos:line="52" pos:column="20">==<pos:position pos:line="52" pos:column="22"/></operator> <name pos:line="52" pos:column="23">APR_ENOSPC<pos:position pos:line="52" pos:column="33"/></name></expr>)<pos:position pos:line="52" pos:column="34"/></condition><then pos:line="52" pos:column="34"> <block pos:line="52" pos:column="35">{
                <expr_stmt><expr><name><name pos:line="53" pos:column="17">r<pos:position pos:line="53" pos:column="18"/></name><operator pos:line="53" pos:column="18">-&gt;<pos:position pos:line="53" pos:column="23"/></operator><name pos:line="53" pos:column="20">status<pos:position pos:line="53" pos:column="26"/></name></name>    <operator pos:line="53" pos:column="30">=<pos:position pos:line="53" pos:column="31"/></operator> <name pos:line="53" pos:column="32">HTTP_REQUEST_URI_TOO_LARGE<pos:position pos:line="53" pos:column="58"/></name></expr>;<pos:position pos:line="53" pos:column="59"/></expr_stmt>
                <expr_stmt><expr><name><name pos:line="54" pos:column="17">r<pos:position pos:line="54" pos:column="18"/></name><operator pos:line="54" pos:column="18">-&gt;<pos:position pos:line="54" pos:column="23"/></operator><name pos:line="54" pos:column="20">proto_num<pos:position pos:line="54" pos:column="29"/></name></name> <operator pos:line="54" pos:column="30">=<pos:position pos:line="54" pos:column="31"/></operator> <call><name pos:line="54" pos:column="32">HTTP_VERSION<pos:position pos:line="54" pos:column="44"/></name><argument_list pos:line="54" pos:column="44">(<argument><expr><literal type="number" pos:line="54" pos:column="45">1<pos:position pos:line="54" pos:column="46"/></literal></expr></argument>,<argument><expr><literal type="number" pos:line="54" pos:column="47">0<pos:position pos:line="54" pos:column="48"/></literal></expr></argument>)<pos:position pos:line="54" pos:column="49"/></argument_list></call></expr>;<pos:position pos:line="54" pos:column="50"/></expr_stmt>
                <expr_stmt><expr><name><name pos:line="55" pos:column="17">r<pos:position pos:line="55" pos:column="18"/></name><operator pos:line="55" pos:column="18">-&gt;<pos:position pos:line="55" pos:column="23"/></operator><name pos:line="55" pos:column="20">protocol<pos:position pos:line="55" pos:column="28"/></name></name>  <operator pos:line="55" pos:column="30">=<pos:position pos:line="55" pos:column="31"/></operator> <call><name pos:line="55" pos:column="32">apr_pstrdup<pos:position pos:line="55" pos:column="43"/></name><argument_list pos:line="55" pos:column="43">(<argument><expr><name><name pos:line="55" pos:column="44">r<pos:position pos:line="55" pos:column="45"/></name><operator pos:line="55" pos:column="45">-&gt;<pos:position pos:line="55" pos:column="50"/></operator><name pos:line="55" pos:column="47">pool<pos:position pos:line="55" pos:column="51"/></name></name></expr></argument>, <argument><expr><literal type="string" pos:line="55" pos:column="53">"HTTP/1.0"<pos:position pos:line="55" pos:column="63"/></literal></expr></argument>)<pos:position pos:line="55" pos:column="64"/></argument_list></call></expr>;<pos:position pos:line="55" pos:column="65"/></expr_stmt>
            }<pos:position pos:line="56" pos:column="14"/></block></then>
            <elseif pos:line="57" pos:column="13">else <if pos:line="57" pos:column="18">if <condition pos:line="57" pos:column="21">(<expr><name pos:line="57" pos:column="22">rv<pos:position pos:line="57" pos:column="24"/></name> <operator pos:line="57" pos:column="25">==<pos:position pos:line="57" pos:column="27"/></operator> <name pos:line="57" pos:column="28">APR_TIMEUP<pos:position pos:line="57" pos:column="38"/></name></expr>)<pos:position pos:line="57" pos:column="39"/></condition><then pos:line="57" pos:column="39"> <block pos:line="57" pos:column="40">{
                <expr_stmt><expr><name><name pos:line="58" pos:column="17">r<pos:position pos:line="58" pos:column="18"/></name><operator pos:line="58" pos:column="18">-&gt;<pos:position pos:line="58" pos:column="23"/></operator><name pos:line="58" pos:column="20">status<pos:position pos:line="58" pos:column="26"/></name></name> <operator pos:line="58" pos:column="27">=<pos:position pos:line="58" pos:column="28"/></operator> <name pos:line="58" pos:column="29">HTTP_REQUEST_TIME_OUT<pos:position pos:line="58" pos:column="50"/></name></expr>;<pos:position pos:line="58" pos:column="51"/></expr_stmt>
            }<pos:position pos:line="59" pos:column="14"/></block></then></if></elseif>
            <elseif pos:line="60" pos:column="13">else <if pos:line="60" pos:column="18">if <condition pos:line="60" pos:column="21">(<expr><name pos:line="60" pos:column="22">rv<pos:position pos:line="60" pos:column="24"/></name> <operator pos:line="60" pos:column="25">==<pos:position pos:line="60" pos:column="27"/></operator> <name pos:line="60" pos:column="28">APR_EINVAL<pos:position pos:line="60" pos:column="38"/></name></expr>)<pos:position pos:line="60" pos:column="39"/></condition><then pos:line="60" pos:column="39"> <block pos:line="60" pos:column="40">{
                <expr_stmt><expr><name><name pos:line="61" pos:column="17">r<pos:position pos:line="61" pos:column="18"/></name><operator pos:line="61" pos:column="18">-&gt;<pos:position pos:line="61" pos:column="23"/></operator><name pos:line="61" pos:column="20">status<pos:position pos:line="61" pos:column="26"/></name></name> <operator pos:line="61" pos:column="27">=<pos:position pos:line="61" pos:column="28"/></operator> <name pos:line="61" pos:column="29">HTTP_BAD_REQUEST<pos:position pos:line="61" pos:column="45"/></name></expr>;<pos:position pos:line="61" pos:column="46"/></expr_stmt>
            }<pos:position pos:line="62" pos:column="14"/></block></then></if></elseif></if>
            <return pos:line="63" pos:column="13">return <expr><literal type="number" pos:line="63" pos:column="20">0<pos:position pos:line="63" pos:column="21"/></literal></expr>;<pos:position pos:line="63" pos:column="22"/></return>
        }<pos:position pos:line="64" pos:column="10"/></block></then></if>
    }<pos:position pos:line="65" pos:column="6"/></block> while <condition pos:line="65" pos:column="13">(<expr><operator pos:line="65" pos:column="14">(<pos:position pos:line="65" pos:column="15"/></operator><name pos:line="65" pos:column="15">len<pos:position pos:line="65" pos:column="18"/></name> <operator pos:line="65" pos:column="19">&lt;=<pos:position pos:line="65" pos:column="24"/></operator> <literal type="number" pos:line="65" pos:column="22">0<pos:position pos:line="65" pos:column="23"/></literal><operator pos:line="65" pos:column="23">)<pos:position pos:line="65" pos:column="24"/></operator> <operator pos:line="65" pos:column="25">&amp;&amp;<pos:position pos:line="65" pos:column="35"/></operator> <operator pos:line="65" pos:column="28">(<pos:position pos:line="65" pos:column="29"/></operator><operator pos:line="65" pos:column="29">++<pos:position pos:line="65" pos:column="31"/></operator><name pos:line="65" pos:column="31">num_blank_lines<pos:position pos:line="65" pos:column="46"/></name> <operator pos:line="65" pos:column="47">&lt;<pos:position pos:line="65" pos:column="51"/></operator> <name pos:line="65" pos:column="49">max_blank_lines<pos:position pos:line="65" pos:column="64"/></name><operator pos:line="65" pos:column="64">)<pos:position pos:line="65" pos:column="65"/></operator></expr>)<pos:position pos:line="65" pos:column="66"/></condition>;<pos:position pos:line="65" pos:column="67"/></do>

    <if pos:line="67" pos:column="5">if <condition pos:line="67" pos:column="8">(<expr><call><name pos:line="67" pos:column="9">APLOGrtrace5<pos:position pos:line="67" pos:column="21"/></name><argument_list pos:line="67" pos:column="21">(<argument><expr><name pos:line="67" pos:column="22">r<pos:position pos:line="67" pos:column="23"/></name></expr></argument>)<pos:position pos:line="67" pos:column="24"/></argument_list></call></expr>)<pos:position pos:line="67" pos:column="25"/></condition><then pos:line="67" pos:column="25"> <block pos:line="67" pos:column="26">{
        <expr_stmt><expr><call><name pos:line="68" pos:column="9">ap_log_rerror<pos:position pos:line="68" pos:column="22"/></name><argument_list pos:line="68" pos:column="22">(<argument><expr><name pos:line="68" pos:column="23">APLOG_MARK<pos:position pos:line="68" pos:column="33"/></name></expr></argument>, <argument><expr><name pos:line="68" pos:column="35">APLOG_TRACE5<pos:position pos:line="68" pos:column="47"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="68" pos:column="49">0<pos:position pos:line="68" pos:column="50"/></literal></expr></argument>, <argument><expr><name pos:line="68" pos:column="52">r<pos:position pos:line="68" pos:column="53"/></name></expr></argument>,
                      <argument><expr><literal type="string" pos:line="69" pos:column="23">"Request received from client: %s"<pos:position pos:line="69" pos:column="57"/></literal></expr></argument>,
                      <argument><expr><call><name pos:line="70" pos:column="23">ap_escape_logitem<pos:position pos:line="70" pos:column="40"/></name><argument_list pos:line="70" pos:column="40">(<argument><expr><name><name pos:line="70" pos:column="41">r<pos:position pos:line="70" pos:column="42"/></name><operator pos:line="70" pos:column="42">-&gt;<pos:position pos:line="70" pos:column="47"/></operator><name pos:line="70" pos:column="44">pool<pos:position pos:line="70" pos:column="48"/></name></name></expr></argument>, <argument><expr><name><name pos:line="70" pos:column="50">r<pos:position pos:line="70" pos:column="51"/></name><operator pos:line="70" pos:column="51">-&gt;<pos:position pos:line="70" pos:column="56"/></operator><name pos:line="70" pos:column="53">the_request<pos:position pos:line="70" pos:column="64"/></name></name></expr></argument>)<pos:position pos:line="70" pos:column="65"/></argument_list></call></expr></argument>)<pos:position pos:line="70" pos:column="66"/></argument_list></call></expr>;<pos:position pos:line="70" pos:column="67"/></expr_stmt>
    }<pos:position pos:line="71" pos:column="6"/></block></then></if>

    <comment type="block" pos:line="73" pos:column="5">/* we've probably got something to do, ignore graceful restart requests */</comment>

    <expr_stmt><expr><name><name pos:line="75" pos:column="5">r<pos:position pos:line="75" pos:column="6"/></name><operator pos:line="75" pos:column="6">-&gt;<pos:position pos:line="75" pos:column="11"/></operator><name pos:line="75" pos:column="8">request_time<pos:position pos:line="75" pos:column="20"/></name></name> <operator pos:line="75" pos:column="21">=<pos:position pos:line="75" pos:column="22"/></operator> <call><name pos:line="75" pos:column="23">apr_time_now<pos:position pos:line="75" pos:column="35"/></name><argument_list pos:line="75" pos:column="35">()<pos:position pos:line="75" pos:column="37"/></argument_list></call></expr>;<pos:position pos:line="75" pos:column="38"/></expr_stmt>
    <expr_stmt><expr><name pos:line="76" pos:column="5">ll<pos:position pos:line="76" pos:column="7"/></name> <operator pos:line="76" pos:column="8">=<pos:position pos:line="76" pos:column="9"/></operator> <name><name pos:line="76" pos:column="10">r<pos:position pos:line="76" pos:column="11"/></name><operator pos:line="76" pos:column="11">-&gt;<pos:position pos:line="76" pos:column="16"/></operator><name pos:line="76" pos:column="13">the_request<pos:position pos:line="76" pos:column="24"/></name></name></expr>;<pos:position pos:line="76" pos:column="25"/></expr_stmt>
    <expr_stmt><expr><name><name pos:line="77" pos:column="5">r<pos:position pos:line="77" pos:column="6"/></name><operator pos:line="77" pos:column="6">-&gt;<pos:position pos:line="77" pos:column="11"/></operator><name pos:line="77" pos:column="8">method<pos:position pos:line="77" pos:column="14"/></name></name> <operator pos:line="77" pos:column="15">=<pos:position pos:line="77" pos:column="16"/></operator> <call><name pos:line="77" pos:column="17">ap_getword_white<pos:position pos:line="77" pos:column="33"/></name><argument_list pos:line="77" pos:column="33">(<argument><expr><name><name pos:line="77" pos:column="34">r<pos:position pos:line="77" pos:column="35"/></name><operator pos:line="77" pos:column="35">-&gt;<pos:position pos:line="77" pos:column="40"/></operator><name pos:line="77" pos:column="37">pool<pos:position pos:line="77" pos:column="41"/></name></name></expr></argument>, <argument><expr><operator pos:line="77" pos:column="43">&amp;<pos:position pos:line="77" pos:column="48"/></operator><name pos:line="77" pos:column="44">ll<pos:position pos:line="77" pos:column="46"/></name></expr></argument>)<pos:position pos:line="77" pos:column="47"/></argument_list></call></expr>;<pos:position pos:line="77" pos:column="48"/></expr_stmt>

<cpp:if pos:line="79" pos:column="1">#<cpp:directive pos:line="79" pos:column="2">if<pos:position pos:line="79" pos:column="4"/></cpp:directive> <expr><literal type="number" pos:line="79" pos:column="5">0<pos:position pos:line="79" pos:column="6"/></literal></expr></cpp:if>
<comment type="block" pos:line="80" pos:column="1">/* XXX If we want to keep track of the Method, the protocol module should do
 * it.  That support isn't in the scoreboard yet.  Hopefully next week
 * sometime.   rbb */</comment>
    ap_update_connection_status(AP_CHILD_THREAD_FROM_ID(conn-&gt;id), "Method",
                                r-&gt;method);
<cpp:endif pos:line="85" pos:column="1">#<cpp:directive pos:line="85" pos:column="2">endif<pos:position pos:line="85" pos:column="7"/></cpp:directive></cpp:endif>

    <expr_stmt><expr><name pos:line="87" pos:column="5">uri<pos:position pos:line="87" pos:column="8"/></name> <operator pos:line="87" pos:column="9">=<pos:position pos:line="87" pos:column="10"/></operator> <call><name pos:line="87" pos:column="11">ap_getword_white<pos:position pos:line="87" pos:column="27"/></name><argument_list pos:line="87" pos:column="27">(<argument><expr><name><name pos:line="87" pos:column="28">r<pos:position pos:line="87" pos:column="29"/></name><operator pos:line="87" pos:column="29">-&gt;<pos:position pos:line="87" pos:column="34"/></operator><name pos:line="87" pos:column="31">pool<pos:position pos:line="87" pos:column="35"/></name></name></expr></argument>, <argument><expr><operator pos:line="87" pos:column="37">&amp;<pos:position pos:line="87" pos:column="42"/></operator><name pos:line="87" pos:column="38">ll<pos:position pos:line="87" pos:column="40"/></name></expr></argument>)<pos:position pos:line="87" pos:column="41"/></argument_list></call></expr>;<pos:position pos:line="87" pos:column="42"/></expr_stmt>

    <comment type="block" pos:line="89" pos:column="5">/* Provide quick information about the request method as soon as known */</comment>

    <expr_stmt><expr><name><name pos:line="91" pos:column="5">r<pos:position pos:line="91" pos:column="6"/></name><operator pos:line="91" pos:column="6">-&gt;<pos:position pos:line="91" pos:column="11"/></operator><name pos:line="91" pos:column="8">method_number<pos:position pos:line="91" pos:column="21"/></name></name> <operator pos:line="91" pos:column="22">=<pos:position pos:line="91" pos:column="23"/></operator> <call><name pos:line="91" pos:column="24">ap_method_number_of<pos:position pos:line="91" pos:column="43"/></name><argument_list pos:line="91" pos:column="43">(<argument><expr><name><name pos:line="91" pos:column="44">r<pos:position pos:line="91" pos:column="45"/></name><operator pos:line="91" pos:column="45">-&gt;<pos:position pos:line="91" pos:column="50"/></operator><name pos:line="91" pos:column="47">method<pos:position pos:line="91" pos:column="53"/></name></name></expr></argument>)<pos:position pos:line="91" pos:column="54"/></argument_list></call></expr>;<pos:position pos:line="91" pos:column="55"/></expr_stmt>
    <if pos:line="92" pos:column="5">if <condition pos:line="92" pos:column="8">(<expr><name><name pos:line="92" pos:column="9">r<pos:position pos:line="92" pos:column="10"/></name><operator pos:line="92" pos:column="10">-&gt;<pos:position pos:line="92" pos:column="15"/></operator><name pos:line="92" pos:column="12">method_number<pos:position pos:line="92" pos:column="25"/></name></name> <operator pos:line="92" pos:column="26">==<pos:position pos:line="92" pos:column="28"/></operator> <name pos:line="92" pos:column="29">M_GET<pos:position pos:line="92" pos:column="34"/></name> <operator pos:line="92" pos:column="35">&amp;&amp;<pos:position pos:line="92" pos:column="45"/></operator> <name><name pos:line="92" pos:column="38">r<pos:position pos:line="92" pos:column="39"/></name><operator pos:line="92" pos:column="39">-&gt;<pos:position pos:line="92" pos:column="44"/></operator><name pos:line="92" pos:column="41">method<pos:position pos:line="92" pos:column="47"/></name><index pos:line="92" pos:column="47">[<expr><literal type="number" pos:line="92" pos:column="48">0<pos:position pos:line="92" pos:column="49"/></literal></expr>]<pos:position pos:line="92" pos:column="50"/></index></name> <operator pos:line="92" pos:column="51">==<pos:position pos:line="92" pos:column="53"/></operator> <literal type="char" pos:line="92" pos:column="54">'H'<pos:position pos:line="92" pos:column="57"/></literal></expr>)<pos:position pos:line="92" pos:column="58"/></condition><then pos:line="92" pos:column="58"> <block pos:line="92" pos:column="59">{
        <expr_stmt><expr><name><name pos:line="93" pos:column="9">r<pos:position pos:line="93" pos:column="10"/></name><operator pos:line="93" pos:column="10">-&gt;<pos:position pos:line="93" pos:column="15"/></operator><name pos:line="93" pos:column="12">header_only<pos:position pos:line="93" pos:column="23"/></name></name> <operator pos:line="93" pos:column="24">=<pos:position pos:line="93" pos:column="25"/></operator> <literal type="number" pos:line="93" pos:column="26">1<pos:position pos:line="93" pos:column="27"/></literal></expr>;<pos:position pos:line="93" pos:column="28"/></expr_stmt>
    }<pos:position pos:line="94" pos:column="6"/></block></then></if>

    <expr_stmt><expr><call><name pos:line="96" pos:column="5">ap_parse_uri<pos:position pos:line="96" pos:column="17"/></name><argument_list pos:line="96" pos:column="17">(<argument><expr><name pos:line="96" pos:column="18">r<pos:position pos:line="96" pos:column="19"/></name></expr></argument>, <argument><expr><name pos:line="96" pos:column="21">uri<pos:position pos:line="96" pos:column="24"/></name></expr></argument>)<pos:position pos:line="96" pos:column="25"/></argument_list></call></expr>;<pos:position pos:line="96" pos:column="26"/></expr_stmt>

    <if pos:line="98" pos:column="5">if <condition pos:line="98" pos:column="8">(<expr><name><name pos:line="98" pos:column="9">ll<pos:position pos:line="98" pos:column="11"/></name><index pos:line="98" pos:column="11">[<expr><literal type="number" pos:line="98" pos:column="12">0<pos:position pos:line="98" pos:column="13"/></literal></expr>]<pos:position pos:line="98" pos:column="14"/></index></name></expr>)<pos:position pos:line="98" pos:column="15"/></condition><then pos:line="98" pos:column="15"> <block pos:line="98" pos:column="16">{
        <expr_stmt><expr><name><name pos:line="99" pos:column="9">r<pos:position pos:line="99" pos:column="10"/></name><operator pos:line="99" pos:column="10">-&gt;<pos:position pos:line="99" pos:column="15"/></operator><name pos:line="99" pos:column="12">assbackwards<pos:position pos:line="99" pos:column="24"/></name></name> <operator pos:line="99" pos:column="25">=<pos:position pos:line="99" pos:column="26"/></operator> <literal type="number" pos:line="99" pos:column="27">0<pos:position pos:line="99" pos:column="28"/></literal></expr>;<pos:position pos:line="99" pos:column="29"/></expr_stmt>
        <expr_stmt><expr><name pos:line="100" pos:column="9">pro<pos:position pos:line="100" pos:column="12"/></name> <operator pos:line="100" pos:column="13">=<pos:position pos:line="100" pos:column="14"/></operator> <name pos:line="100" pos:column="15">ll<pos:position pos:line="100" pos:column="17"/></name></expr>;<pos:position pos:line="100" pos:column="18"/></expr_stmt>
        <expr_stmt><expr><name pos:line="101" pos:column="9">len<pos:position pos:line="101" pos:column="12"/></name> <operator pos:line="101" pos:column="13">=<pos:position pos:line="101" pos:column="14"/></operator> <call><name pos:line="101" pos:column="15">strlen<pos:position pos:line="101" pos:column="21"/></name><argument_list pos:line="101" pos:column="21">(<argument><expr><name pos:line="101" pos:column="22">ll<pos:position pos:line="101" pos:column="24"/></name></expr></argument>)<pos:position pos:line="101" pos:column="25"/></argument_list></call></expr>;<pos:position pos:line="101" pos:column="26"/></expr_stmt>
    }<pos:position pos:line="102" pos:column="6"/></block></then> <else pos:line="102" pos:column="7">else <block pos:line="102" pos:column="12">{
        <expr_stmt><expr><name><name pos:line="103" pos:column="9">r<pos:position pos:line="103" pos:column="10"/></name><operator pos:line="103" pos:column="10">-&gt;<pos:position pos:line="103" pos:column="15"/></operator><name pos:line="103" pos:column="12">assbackwards<pos:position pos:line="103" pos:column="24"/></name></name> <operator pos:line="103" pos:column="25">=<pos:position pos:line="103" pos:column="26"/></operator> <literal type="number" pos:line="103" pos:column="27">1<pos:position pos:line="103" pos:column="28"/></literal></expr>;<pos:position pos:line="103" pos:column="29"/></expr_stmt>
        <expr_stmt><expr><name pos:line="104" pos:column="9">pro<pos:position pos:line="104" pos:column="12"/></name> <operator pos:line="104" pos:column="13">=<pos:position pos:line="104" pos:column="14"/></operator> <literal type="string" pos:line="104" pos:column="15">"HTTP/0.9"<pos:position pos:line="104" pos:column="25"/></literal></expr>;<pos:position pos:line="104" pos:column="26"/></expr_stmt>
        <expr_stmt><expr><name pos:line="105" pos:column="9">len<pos:position pos:line="105" pos:column="12"/></name> <operator pos:line="105" pos:column="13">=<pos:position pos:line="105" pos:column="14"/></operator> <literal type="number" pos:line="105" pos:column="15">8<pos:position pos:line="105" pos:column="16"/></literal></expr>;<pos:position pos:line="105" pos:column="17"/></expr_stmt>
    }<pos:position pos:line="106" pos:column="6"/></block></else></if>
    <expr_stmt><expr><name><name pos:line="107" pos:column="5">r<pos:position pos:line="107" pos:column="6"/></name><operator pos:line="107" pos:column="6">-&gt;<pos:position pos:line="107" pos:column="11"/></operator><name pos:line="107" pos:column="8">protocol<pos:position pos:line="107" pos:column="16"/></name></name> <operator pos:line="107" pos:column="17">=<pos:position pos:line="107" pos:column="18"/></operator> <call><name pos:line="107" pos:column="19">apr_pstrmemdup<pos:position pos:line="107" pos:column="33"/></name><argument_list pos:line="107" pos:column="33">(<argument><expr><name><name pos:line="107" pos:column="34">r<pos:position pos:line="107" pos:column="35"/></name><operator pos:line="107" pos:column="35">-&gt;<pos:position pos:line="107" pos:column="40"/></operator><name pos:line="107" pos:column="37">pool<pos:position pos:line="107" pos:column="41"/></name></name></expr></argument>, <argument><expr><name pos:line="107" pos:column="43">pro<pos:position pos:line="107" pos:column="46"/></name></expr></argument>, <argument><expr><name pos:line="107" pos:column="48">len<pos:position pos:line="107" pos:column="51"/></name></expr></argument>)<pos:position pos:line="107" pos:column="52"/></argument_list></call></expr>;<pos:position pos:line="107" pos:column="53"/></expr_stmt>

    <comment type="block" pos:line="109" pos:column="5">/* XXX ap_update_connection_status(conn-&gt;id, "Protocol", r-&gt;protocol); */</comment>

    <comment type="block" pos:line="111" pos:column="5">/* Avoid sscanf in the common case */</comment>
    <if pos:line="112" pos:column="5">if <condition pos:line="112" pos:column="8">(<expr><name pos:line="112" pos:column="9">len<pos:position pos:line="112" pos:column="12"/></name> <operator pos:line="112" pos:column="13">==<pos:position pos:line="112" pos:column="15"/></operator> <literal type="number" pos:line="112" pos:column="16">8<pos:position pos:line="112" pos:column="17"/></literal>
        <operator pos:line="113" pos:column="9">&amp;&amp;<pos:position pos:line="113" pos:column="19"/></operator> <name><name pos:line="113" pos:column="12">pro<pos:position pos:line="113" pos:column="15"/></name><index pos:line="113" pos:column="15">[<expr><literal type="number" pos:line="113" pos:column="16">0<pos:position pos:line="113" pos:column="17"/></literal></expr>]<pos:position pos:line="113" pos:column="18"/></index></name> <operator pos:line="113" pos:column="19">==<pos:position pos:line="113" pos:column="21"/></operator> <literal type="char" pos:line="113" pos:column="22">'H'<pos:position pos:line="113" pos:column="25"/></literal> <operator pos:line="113" pos:column="26">&amp;&amp;<pos:position pos:line="113" pos:column="36"/></operator> <name><name pos:line="113" pos:column="29">pro<pos:position pos:line="113" pos:column="32"/></name><index pos:line="113" pos:column="32">[<expr><literal type="number" pos:line="113" pos:column="33">1<pos:position pos:line="113" pos:column="34"/></literal></expr>]<pos:position pos:line="113" pos:column="35"/></index></name> <operator pos:line="113" pos:column="36">==<pos:position pos:line="113" pos:column="38"/></operator> <literal type="char" pos:line="113" pos:column="39">'T'<pos:position pos:line="113" pos:column="42"/></literal> <operator pos:line="113" pos:column="43">&amp;&amp;<pos:position pos:line="113" pos:column="53"/></operator> <name><name pos:line="113" pos:column="46">pro<pos:position pos:line="113" pos:column="49"/></name><index pos:line="113" pos:column="49">[<expr><literal type="number" pos:line="113" pos:column="50">2<pos:position pos:line="113" pos:column="51"/></literal></expr>]<pos:position pos:line="113" pos:column="52"/></index></name> <operator pos:line="113" pos:column="53">==<pos:position pos:line="113" pos:column="55"/></operator> <literal type="char" pos:line="113" pos:column="56">'T'<pos:position pos:line="113" pos:column="59"/></literal> <operator pos:line="113" pos:column="60">&amp;&amp;<pos:position pos:line="113" pos:column="70"/></operator> <name><name pos:line="113" pos:column="63">pro<pos:position pos:line="113" pos:column="66"/></name><index pos:line="113" pos:column="66">[<expr><literal type="number" pos:line="113" pos:column="67">3<pos:position pos:line="113" pos:column="68"/></literal></expr>]<pos:position pos:line="113" pos:column="69"/></index></name> <operator pos:line="113" pos:column="70">==<pos:position pos:line="113" pos:column="72"/></operator> <literal type="char" pos:line="113" pos:column="73">'P'<pos:position pos:line="113" pos:column="76"/></literal>
        <operator pos:line="114" pos:column="9">&amp;&amp;<pos:position pos:line="114" pos:column="19"/></operator> <name><name pos:line="114" pos:column="12">pro<pos:position pos:line="114" pos:column="15"/></name><index pos:line="114" pos:column="15">[<expr><literal type="number" pos:line="114" pos:column="16">4<pos:position pos:line="114" pos:column="17"/></literal></expr>]<pos:position pos:line="114" pos:column="18"/></index></name> <operator pos:line="114" pos:column="19">==<pos:position pos:line="114" pos:column="21"/></operator> <literal type="char" pos:line="114" pos:column="22">'/'<pos:position pos:line="114" pos:column="25"/></literal> <operator pos:line="114" pos:column="26">&amp;&amp;<pos:position pos:line="114" pos:column="36"/></operator> <call><name pos:line="114" pos:column="29">apr_isdigit<pos:position pos:line="114" pos:column="40"/></name><argument_list pos:line="114" pos:column="40">(<argument><expr><name><name pos:line="114" pos:column="41">pro<pos:position pos:line="114" pos:column="44"/></name><index pos:line="114" pos:column="44">[<expr><literal type="number" pos:line="114" pos:column="45">5<pos:position pos:line="114" pos:column="46"/></literal></expr>]<pos:position pos:line="114" pos:column="47"/></index></name></expr></argument>)<pos:position pos:line="114" pos:column="48"/></argument_list></call> <operator pos:line="114" pos:column="49">&amp;&amp;<pos:position pos:line="114" pos:column="59"/></operator> <name><name pos:line="114" pos:column="52">pro<pos:position pos:line="114" pos:column="55"/></name><index pos:line="114" pos:column="55">[<expr><literal type="number" pos:line="114" pos:column="56">6<pos:position pos:line="114" pos:column="57"/></literal></expr>]<pos:position pos:line="114" pos:column="58"/></index></name> <operator pos:line="114" pos:column="59">==<pos:position pos:line="114" pos:column="61"/></operator> <literal type="char" pos:line="114" pos:column="62">'.'<pos:position pos:line="114" pos:column="65"/></literal>
        <operator pos:line="115" pos:column="9">&amp;&amp;<pos:position pos:line="115" pos:column="19"/></operator> <call><name pos:line="115" pos:column="12">apr_isdigit<pos:position pos:line="115" pos:column="23"/></name><argument_list pos:line="115" pos:column="23">(<argument><expr><name><name pos:line="115" pos:column="24">pro<pos:position pos:line="115" pos:column="27"/></name><index pos:line="115" pos:column="27">[<expr><literal type="number" pos:line="115" pos:column="28">7<pos:position pos:line="115" pos:column="29"/></literal></expr>]<pos:position pos:line="115" pos:column="30"/></index></name></expr></argument>)<pos:position pos:line="115" pos:column="31"/></argument_list></call></expr>)<pos:position pos:line="115" pos:column="32"/></condition><then pos:line="115" pos:column="32"> <block pos:line="115" pos:column="33">{
        <expr_stmt><expr><name><name pos:line="116" pos:column="9">r<pos:position pos:line="116" pos:column="10"/></name><operator pos:line="116" pos:column="10">-&gt;<pos:position pos:line="116" pos:column="15"/></operator><name pos:line="116" pos:column="12">proto_num<pos:position pos:line="116" pos:column="21"/></name></name> <operator pos:line="116" pos:column="22">=<pos:position pos:line="116" pos:column="23"/></operator> <call><name pos:line="116" pos:column="24">HTTP_VERSION<pos:position pos:line="116" pos:column="36"/></name><argument_list pos:line="116" pos:column="36">(<argument><expr><name><name pos:line="116" pos:column="37">pro<pos:position pos:line="116" pos:column="40"/></name><index pos:line="116" pos:column="40">[<expr><literal type="number" pos:line="116" pos:column="41">5<pos:position pos:line="116" pos:column="42"/></literal></expr>]<pos:position pos:line="116" pos:column="43"/></index></name> <operator pos:line="116" pos:column="44">-<pos:position pos:line="116" pos:column="45"/></operator> <literal type="char" pos:line="116" pos:column="46">'0'<pos:position pos:line="116" pos:column="49"/></literal></expr></argument>, <argument><expr><name><name pos:line="116" pos:column="51">pro<pos:position pos:line="116" pos:column="54"/></name><index pos:line="116" pos:column="54">[<expr><literal type="number" pos:line="116" pos:column="55">7<pos:position pos:line="116" pos:column="56"/></literal></expr>]<pos:position pos:line="116" pos:column="57"/></index></name> <operator pos:line="116" pos:column="58">-<pos:position pos:line="116" pos:column="59"/></operator> <literal type="char" pos:line="116" pos:column="60">'0'<pos:position pos:line="116" pos:column="63"/></literal></expr></argument>)<pos:position pos:line="116" pos:column="64"/></argument_list></call></expr>;<pos:position pos:line="116" pos:column="65"/></expr_stmt>
    }<pos:position pos:line="117" pos:column="6"/></block></then>
    <elseif pos:line="118" pos:column="5">else <if pos:line="118" pos:column="10">if <condition pos:line="118" pos:column="13">(<expr><literal type="number" pos:line="118" pos:column="14">3<pos:position pos:line="118" pos:column="15"/></literal> <operator pos:line="118" pos:column="16">==<pos:position pos:line="118" pos:column="18"/></operator> <call><name pos:line="118" pos:column="19">sscanf<pos:position pos:line="118" pos:column="25"/></name><argument_list pos:line="118" pos:column="25">(<argument><expr><name><name pos:line="118" pos:column="26">r<pos:position pos:line="118" pos:column="27"/></name><operator pos:line="118" pos:column="27">-&gt;<pos:position pos:line="118" pos:column="32"/></operator><name pos:line="118" pos:column="29">protocol<pos:position pos:line="118" pos:column="37"/></name></name></expr></argument>, <argument><expr><literal type="string" pos:line="118" pos:column="39">"%4s/%u.%u"<pos:position pos:line="118" pos:column="50"/></literal></expr></argument>, <argument><expr><name pos:line="118" pos:column="52">http<pos:position pos:line="118" pos:column="56"/></name></expr></argument>, <argument><expr><operator pos:line="118" pos:column="58">&amp;<pos:position pos:line="118" pos:column="63"/></operator><name pos:line="118" pos:column="59">major<pos:position pos:line="118" pos:column="64"/></name></expr></argument>, <argument><expr><operator pos:line="118" pos:column="66">&amp;<pos:position pos:line="118" pos:column="71"/></operator><name pos:line="118" pos:column="67">minor<pos:position pos:line="118" pos:column="72"/></name></expr></argument>)<pos:position pos:line="118" pos:column="73"/></argument_list></call>
             <operator pos:line="119" pos:column="14">&amp;&amp;<pos:position pos:line="119" pos:column="24"/></operator> <operator pos:line="119" pos:column="17">(<pos:position pos:line="119" pos:column="18"/></operator><call><name pos:line="119" pos:column="18">strcasecmp<pos:position pos:line="119" pos:column="28"/></name><argument_list pos:line="119" pos:column="28">(<argument><expr><literal type="string" pos:line="119" pos:column="29">"http"<pos:position pos:line="119" pos:column="35"/></literal></expr></argument>, <argument><expr><name pos:line="119" pos:column="37">http<pos:position pos:line="119" pos:column="41"/></name></expr></argument>)<pos:position pos:line="119" pos:column="42"/></argument_list></call> <operator pos:line="119" pos:column="43">==<pos:position pos:line="119" pos:column="45"/></operator> <literal type="number" pos:line="119" pos:column="46">0<pos:position pos:line="119" pos:column="47"/></literal><operator pos:line="119" pos:column="47">)<pos:position pos:line="119" pos:column="48"/></operator>
             <operator pos:line="120" pos:column="14">&amp;&amp;<pos:position pos:line="120" pos:column="24"/></operator> <operator pos:line="120" pos:column="17">(<pos:position pos:line="120" pos:column="18"/></operator><name pos:line="120" pos:column="18">minor<pos:position pos:line="120" pos:column="23"/></name> <operator pos:line="120" pos:column="24">&lt;<pos:position pos:line="120" pos:column="28"/></operator> <call><name pos:line="120" pos:column="26">HTTP_VERSION<pos:position pos:line="120" pos:column="38"/></name><argument_list pos:line="120" pos:column="38">(<argument><expr><literal type="number" pos:line="120" pos:column="39">1<pos:position pos:line="120" pos:column="40"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="120" pos:column="42">0<pos:position pos:line="120" pos:column="43"/></literal></expr></argument>)<pos:position pos:line="120" pos:column="44"/></argument_list></call><operator pos:line="120" pos:column="44">)<pos:position pos:line="120" pos:column="45"/></operator></expr> )<pos:position pos:line="120" pos:column="47"/></condition><then pos:line="120" pos:column="47"> <comment type="block" pos:line="120" pos:column="48">/* don't allow HTTP/0.1000 */</comment>
        <block type="pseudo"><expr_stmt><expr><name><name pos:line="121" pos:column="9">r<pos:position pos:line="121" pos:column="10"/></name><operator pos:line="121" pos:column="10">-&gt;<pos:position pos:line="121" pos:column="15"/></operator><name pos:line="121" pos:column="12">proto_num<pos:position pos:line="121" pos:column="21"/></name></name> <operator pos:line="121" pos:column="22">=<pos:position pos:line="121" pos:column="23"/></operator> <call><name pos:line="121" pos:column="24">HTTP_VERSION<pos:position pos:line="121" pos:column="36"/></name><argument_list pos:line="121" pos:column="36">(<argument><expr><name pos:line="121" pos:column="37">major<pos:position pos:line="121" pos:column="42"/></name></expr></argument>, <argument><expr><name pos:line="121" pos:column="44">minor<pos:position pos:line="121" pos:column="49"/></name></expr></argument>)<pos:position pos:line="121" pos:column="50"/></argument_list></call></expr>;<pos:position pos:line="121" pos:column="51"/></expr_stmt></block></then></if></elseif>
    <else pos:line="122" pos:column="5">else
        <block type="pseudo"><expr_stmt><expr><name><name pos:line="123" pos:column="9">r<pos:position pos:line="123" pos:column="10"/></name><operator pos:line="123" pos:column="10">-&gt;<pos:position pos:line="123" pos:column="15"/></operator><name pos:line="123" pos:column="12">proto_num<pos:position pos:line="123" pos:column="21"/></name></name> <operator pos:line="123" pos:column="22">=<pos:position pos:line="123" pos:column="23"/></operator> <call><name pos:line="123" pos:column="24">HTTP_VERSION<pos:position pos:line="123" pos:column="36"/></name><argument_list pos:line="123" pos:column="36">(<argument><expr><literal type="number" pos:line="123" pos:column="37">1<pos:position pos:line="123" pos:column="38"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="123" pos:column="40">0<pos:position pos:line="123" pos:column="41"/></literal></expr></argument>)<pos:position pos:line="123" pos:column="42"/></argument_list></call></expr>;<pos:position pos:line="123" pos:column="43"/></expr_stmt></block></else></if>

    <return pos:line="125" pos:column="5">return <expr><literal type="number" pos:line="125" pos:column="12">1<pos:position pos:line="125" pos:column="13"/></literal></expr>;<pos:position pos:line="125" pos:column="14"/></return>
}<pos:position pos:line="126" pos:column="2"/></block></function></unit>

<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/httpd/gumtree/httpd_repos_function_752_httpd-2.3.6.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">void<pos:position pos:line="1" pos:column="12"/></name></type> <name pos:line="1" pos:column="13">ssl_io_data_dump<pos:position pos:line="1" pos:column="29"/></name><parameter_list pos:line="1" pos:column="29">(<parameter><decl><type><name pos:line="1" pos:column="30">server_rec<pos:position pos:line="1" pos:column="40"/></name> <modifier pos:line="1" pos:column="41">*<pos:position pos:line="1" pos:column="42"/></modifier></type><name pos:line="1" pos:column="42">srvr<pos:position pos:line="1" pos:column="46"/></name></decl></parameter>,
                             <parameter><decl><type><name pos:line="2" pos:column="30">MODSSL_BIO_CB_ARG_TYPE<pos:position pos:line="2" pos:column="52"/></name> <modifier pos:line="2" pos:column="53">*<pos:position pos:line="2" pos:column="54"/></modifier></type><name pos:line="2" pos:column="54">s<pos:position pos:line="2" pos:column="55"/></name></decl></parameter>,
                             <parameter><decl><type><name pos:line="3" pos:column="30">long<pos:position pos:line="3" pos:column="34"/></name></type> <name pos:line="3" pos:column="35">len<pos:position pos:line="3" pos:column="38"/></name></decl></parameter>)<pos:position pos:line="3" pos:column="39"/></parameter_list>
<block pos:line="4" pos:column="1">{
    <decl_stmt><decl><type><name pos:line="5" pos:column="5">char<pos:position pos:line="5" pos:column="9"/></name></type> <name><name pos:line="5" pos:column="10">buf<pos:position pos:line="5" pos:column="13"/></name><index pos:line="5" pos:column="13">[<expr><literal type="number" pos:line="5" pos:column="14">256<pos:position pos:line="5" pos:column="17"/></literal></expr>]<pos:position pos:line="5" pos:column="18"/></index></name></decl>;<pos:position pos:line="5" pos:column="19"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="6" pos:column="5">char<pos:position pos:line="6" pos:column="9"/></name></type> <name><name pos:line="6" pos:column="10">tmp<pos:position pos:line="6" pos:column="13"/></name><index pos:line="6" pos:column="13">[<expr><literal type="number" pos:line="6" pos:column="14">64<pos:position pos:line="6" pos:column="16"/></literal></expr>]<pos:position pos:line="6" pos:column="17"/></index></name></decl>;<pos:position pos:line="6" pos:column="18"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="7" pos:column="5">int<pos:position pos:line="7" pos:column="8"/></name></type> <name pos:line="7" pos:column="9">i<pos:position pos:line="7" pos:column="10"/></name></decl>, <decl><type ref="prev"/><name pos:line="7" pos:column="12">j<pos:position pos:line="7" pos:column="13"/></name></decl>, <decl><type ref="prev"/><name pos:line="7" pos:column="15">rows<pos:position pos:line="7" pos:column="19"/></name></decl>, <decl><type ref="prev"/><name pos:line="7" pos:column="21">trunc<pos:position pos:line="7" pos:column="26"/></name></decl>;<pos:position pos:line="7" pos:column="27"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="8" pos:column="5">unsigned<pos:position pos:line="8" pos:column="13"/></name> <name pos:line="8" pos:column="14">char<pos:position pos:line="8" pos:column="18"/></name></type> <name pos:line="8" pos:column="19">ch<pos:position pos:line="8" pos:column="21"/></name></decl>;<pos:position pos:line="8" pos:column="22"/></decl_stmt>

    <expr_stmt><expr><name pos:line="10" pos:column="5">trunc<pos:position pos:line="10" pos:column="10"/></name> <operator pos:line="10" pos:column="11">=<pos:position pos:line="10" pos:column="12"/></operator> <literal type="number" pos:line="10" pos:column="13">0<pos:position pos:line="10" pos:column="14"/></literal></expr>;<pos:position pos:line="10" pos:column="15"/></expr_stmt>
    <for pos:line="11" pos:column="5">for<control pos:line="11" pos:column="8">(<init pos:line="11" pos:column="9">;<pos:position pos:line="11" pos:column="10"/></init> <condition><expr><operator pos:line="11" pos:column="11">(<pos:position pos:line="11" pos:column="12"/></operator><name pos:line="11" pos:column="12">len<pos:position pos:line="11" pos:column="15"/></name> <operator pos:line="11" pos:column="16">&gt;<pos:position pos:line="11" pos:column="20"/></operator> <literal type="number" pos:line="11" pos:column="18">0<pos:position pos:line="11" pos:column="19"/></literal><operator pos:line="11" pos:column="19">)<pos:position pos:line="11" pos:column="20"/></operator> <operator pos:line="11" pos:column="21">&amp;&amp;<pos:position pos:line="11" pos:column="31"/></operator> <operator pos:line="11" pos:column="24">(<pos:position pos:line="11" pos:column="25"/></operator><operator pos:line="11" pos:column="25">(<pos:position pos:line="11" pos:column="26"/></operator><name><name pos:line="11" pos:column="26">s<pos:position pos:line="11" pos:column="27"/></name><index pos:line="11" pos:column="27">[<expr><name pos:line="11" pos:column="28">len<pos:position pos:line="11" pos:column="31"/></name><operator pos:line="11" pos:column="31">-<pos:position pos:line="11" pos:column="32"/></operator><literal type="number" pos:line="11" pos:column="32">1<pos:position pos:line="11" pos:column="33"/></literal></expr>]<pos:position pos:line="11" pos:column="34"/></index></name> <operator pos:line="11" pos:column="35">==<pos:position pos:line="11" pos:column="37"/></operator> <literal type="char" pos:line="11" pos:column="38">' '<pos:position pos:line="11" pos:column="41"/></literal><operator pos:line="11" pos:column="41">)<pos:position pos:line="11" pos:column="42"/></operator> <operator pos:line="11" pos:column="43">||<pos:position pos:line="11" pos:column="45"/></operator> <operator pos:line="11" pos:column="46">(<pos:position pos:line="11" pos:column="47"/></operator><name><name pos:line="11" pos:column="47">s<pos:position pos:line="11" pos:column="48"/></name><index pos:line="11" pos:column="48">[<expr><name pos:line="11" pos:column="49">len<pos:position pos:line="11" pos:column="52"/></name><operator pos:line="11" pos:column="52">-<pos:position pos:line="11" pos:column="53"/></operator><literal type="number" pos:line="11" pos:column="53">1<pos:position pos:line="11" pos:column="54"/></literal></expr>]<pos:position pos:line="11" pos:column="55"/></index></name> <operator pos:line="11" pos:column="56">==<pos:position pos:line="11" pos:column="58"/></operator> <literal type="char" pos:line="11" pos:column="59">'\0'<pos:position pos:line="11" pos:column="63"/></literal><operator pos:line="11" pos:column="63">)<pos:position pos:line="11" pos:column="64"/></operator><operator pos:line="11" pos:column="64">)<pos:position pos:line="11" pos:column="65"/></operator></expr>;<pos:position pos:line="11" pos:column="66"/></condition> <incr><expr><name pos:line="11" pos:column="67">len<pos:position pos:line="11" pos:column="70"/></name><operator pos:line="11" pos:column="70">--<pos:position pos:line="11" pos:column="72"/></operator></expr></incr>)<pos:position pos:line="11" pos:column="73"/></control>
        <block type="pseudo"><expr_stmt><expr><name pos:line="12" pos:column="9">trunc<pos:position pos:line="12" pos:column="14"/></name><operator pos:line="12" pos:column="14">++<pos:position pos:line="12" pos:column="16"/></operator></expr>;<pos:position pos:line="12" pos:column="17"/></expr_stmt></block></for>
    <expr_stmt><expr><name pos:line="13" pos:column="5">rows<pos:position pos:line="13" pos:column="9"/></name> <operator pos:line="13" pos:column="10">=<pos:position pos:line="13" pos:column="11"/></operator> <operator pos:line="13" pos:column="12">(<pos:position pos:line="13" pos:column="13"/></operator><name pos:line="13" pos:column="13">len<pos:position pos:line="13" pos:column="16"/></name> <operator pos:line="13" pos:column="17">/<pos:position pos:line="13" pos:column="18"/></operator> <name pos:line="13" pos:column="19">DUMP_WIDTH<pos:position pos:line="13" pos:column="29"/></name><operator pos:line="13" pos:column="29">)<pos:position pos:line="13" pos:column="30"/></operator></expr>;<pos:position pos:line="13" pos:column="31"/></expr_stmt>
    <if pos:line="14" pos:column="5">if <condition pos:line="14" pos:column="8">(<expr><operator pos:line="14" pos:column="9">(<pos:position pos:line="14" pos:column="10"/></operator><name pos:line="14" pos:column="10">rows<pos:position pos:line="14" pos:column="14"/></name> <operator pos:line="14" pos:column="15">*<pos:position pos:line="14" pos:column="16"/></operator> <name pos:line="14" pos:column="17">DUMP_WIDTH<pos:position pos:line="14" pos:column="27"/></name><operator pos:line="14" pos:column="27">)<pos:position pos:line="14" pos:column="28"/></operator> <operator pos:line="14" pos:column="29">&lt;<pos:position pos:line="14" pos:column="33"/></operator> <name pos:line="14" pos:column="31">len<pos:position pos:line="14" pos:column="34"/></name></expr>)<pos:position pos:line="14" pos:column="35"/></condition><then pos:line="14" pos:column="35">
        <block type="pseudo"><expr_stmt><expr><name pos:line="15" pos:column="9">rows<pos:position pos:line="15" pos:column="13"/></name><operator pos:line="15" pos:column="13">++<pos:position pos:line="15" pos:column="15"/></operator></expr>;<pos:position pos:line="15" pos:column="16"/></expr_stmt></block></then></if>
    <expr_stmt><expr><call><name pos:line="16" pos:column="5">ap_log_error<pos:position pos:line="16" pos:column="17"/></name><argument_list pos:line="16" pos:column="17">(<argument><expr><name pos:line="16" pos:column="18">APLOG_MARK<pos:position pos:line="16" pos:column="28"/></name></expr></argument>, <argument><expr><name pos:line="16" pos:column="30">APLOG_TRACE7<pos:position pos:line="16" pos:column="42"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="16" pos:column="44">0<pos:position pos:line="16" pos:column="45"/></literal></expr></argument>, <argument><expr><name pos:line="16" pos:column="47">srvr<pos:position pos:line="16" pos:column="51"/></name></expr></argument>,
            <argument><expr><literal type="string" pos:line="17" pos:column="13">"+-------------------------------------------------------------------------+"<pos:position pos:line="17" pos:column="90"/></literal></expr></argument>)<pos:position pos:line="17" pos:column="91"/></argument_list></call></expr>;<pos:position pos:line="17" pos:column="92"/></expr_stmt>
    <for pos:line="18" pos:column="5">for<control pos:line="18" pos:column="8">(<init><expr><name pos:line="18" pos:column="9">i<pos:position pos:line="18" pos:column="10"/></name> <operator pos:line="18" pos:column="11">=<pos:position pos:line="18" pos:column="12"/></operator> <literal type="number" pos:line="18" pos:column="13">0<pos:position pos:line="18" pos:column="14"/></literal></expr> ;<pos:position pos:line="18" pos:column="16"/></init> <condition><expr><name pos:line="18" pos:column="17">i<pos:position pos:line="18" pos:column="18"/></name><operator pos:line="18" pos:column="18">&lt;<pos:position pos:line="18" pos:column="22"/></operator> <name pos:line="18" pos:column="20">rows<pos:position pos:line="18" pos:column="24"/></name></expr>;<pos:position pos:line="18" pos:column="25"/></condition> <incr><expr><name pos:line="18" pos:column="26">i<pos:position pos:line="18" pos:column="27"/></name><operator pos:line="18" pos:column="27">++<pos:position pos:line="18" pos:column="29"/></operator></expr></incr>)<pos:position pos:line="18" pos:column="30"/></control> <block pos:line="18" pos:column="31">{
<cpp:if pos:line="19" pos:column="1">#<cpp:directive pos:line="19" pos:column="2">if<pos:position pos:line="19" pos:column="4"/></cpp:directive> <expr><name pos:line="19" pos:column="5">APR_CHARSET_EBCDIC<pos:position pos:line="19" pos:column="23"/></name></expr></cpp:if>
        <decl_stmt><decl><type><name pos:line="20" pos:column="9">char<pos:position pos:line="20" pos:column="13"/></name></type> <name><name pos:line="20" pos:column="14">ebcdic_text<pos:position pos:line="20" pos:column="25"/></name><index pos:line="20" pos:column="25">[<expr><name pos:line="20" pos:column="26">DUMP_WIDTH<pos:position pos:line="20" pos:column="36"/></name></expr>]<pos:position pos:line="20" pos:column="37"/></index></name></decl>;<pos:position pos:line="20" pos:column="38"/></decl_stmt>
        <expr_stmt><expr><name pos:line="21" pos:column="9">j<pos:position pos:line="21" pos:column="10"/></name> <operator pos:line="21" pos:column="11">=<pos:position pos:line="21" pos:column="12"/></operator> <name pos:line="21" pos:column="13">DUMP_WIDTH<pos:position pos:line="21" pos:column="23"/></name></expr>;<pos:position pos:line="21" pos:column="24"/></expr_stmt>
        <if pos:line="22" pos:column="9">if <condition pos:line="22" pos:column="12">(<expr><operator pos:line="22" pos:column="13">(<pos:position pos:line="22" pos:column="14"/></operator><name pos:line="22" pos:column="14">i<pos:position pos:line="22" pos:column="15"/></name> <operator pos:line="22" pos:column="16">*<pos:position pos:line="22" pos:column="17"/></operator> <name pos:line="22" pos:column="18">DUMP_WIDTH<pos:position pos:line="22" pos:column="28"/></name> <operator pos:line="22" pos:column="29">+<pos:position pos:line="22" pos:column="30"/></operator> <name pos:line="22" pos:column="31">j<pos:position pos:line="22" pos:column="32"/></name><operator pos:line="22" pos:column="32">)<pos:position pos:line="22" pos:column="33"/></operator> <operator pos:line="22" pos:column="34">&gt;<pos:position pos:line="22" pos:column="38"/></operator> <name pos:line="22" pos:column="36">len<pos:position pos:line="22" pos:column="39"/></name></expr>)<pos:position pos:line="22" pos:column="40"/></condition><then pos:line="22" pos:column="40">
            <block type="pseudo"><expr_stmt><expr><name pos:line="23" pos:column="13">j<pos:position pos:line="23" pos:column="14"/></name> <operator pos:line="23" pos:column="15">=<pos:position pos:line="23" pos:column="16"/></operator> <name pos:line="23" pos:column="17">len<pos:position pos:line="23" pos:column="20"/></name> <operator pos:line="23" pos:column="21">%<pos:position pos:line="23" pos:column="22"/></operator> <name pos:line="23" pos:column="23">DUMP_WIDTH<pos:position pos:line="23" pos:column="33"/></name></expr>;<pos:position pos:line="23" pos:column="34"/></expr_stmt></block></then></if>
        <if pos:line="24" pos:column="9">if <condition pos:line="24" pos:column="12">(<expr><name pos:line="24" pos:column="13">j<pos:position pos:line="24" pos:column="14"/></name> <operator pos:line="24" pos:column="15">==<pos:position pos:line="24" pos:column="17"/></operator> <literal type="number" pos:line="24" pos:column="18">0<pos:position pos:line="24" pos:column="19"/></literal></expr>)<pos:position pos:line="24" pos:column="20"/></condition><then pos:line="24" pos:column="20">
            <block type="pseudo"><expr_stmt><expr><name pos:line="25" pos:column="13">j<pos:position pos:line="25" pos:column="14"/></name> <operator pos:line="25" pos:column="15">=<pos:position pos:line="25" pos:column="16"/></operator> <name pos:line="25" pos:column="17">DUMP_WIDTH<pos:position pos:line="25" pos:column="27"/></name></expr>;<pos:position pos:line="25" pos:column="28"/></expr_stmt></block></then></if>
        <expr_stmt><expr><call><name pos:line="26" pos:column="9">memcpy<pos:position pos:line="26" pos:column="15"/></name><argument_list pos:line="26" pos:column="15">(<argument><expr><name pos:line="26" pos:column="16">ebcdic_text<pos:position pos:line="26" pos:column="27"/></name></expr></argument>,<argument><expr><operator pos:line="26" pos:column="28">(<pos:position pos:line="26" pos:column="29"/></operator><name pos:line="26" pos:column="29">char<pos:position pos:line="26" pos:column="33"/></name> <operator pos:line="26" pos:column="34">*<pos:position pos:line="26" pos:column="35"/></operator><operator pos:line="26" pos:column="35">)<pos:position pos:line="26" pos:column="36"/></operator><operator pos:line="26" pos:column="36">(<pos:position pos:line="26" pos:column="37"/></operator><name pos:line="26" pos:column="37">s<pos:position pos:line="26" pos:column="38"/></name><operator pos:line="26" pos:column="38">)<pos:position pos:line="26" pos:column="39"/></operator> <operator pos:line="26" pos:column="40">+<pos:position pos:line="26" pos:column="41"/></operator> <name pos:line="26" pos:column="42">i<pos:position pos:line="26" pos:column="43"/></name> <operator pos:line="26" pos:column="44">*<pos:position pos:line="26" pos:column="45"/></operator> <name pos:line="26" pos:column="46">DUMP_WIDTH<pos:position pos:line="26" pos:column="56"/></name></expr></argument>, <argument><expr><name pos:line="26" pos:column="58">j<pos:position pos:line="26" pos:column="59"/></name></expr></argument>)<pos:position pos:line="26" pos:column="60"/></argument_list></call></expr>;<pos:position pos:line="26" pos:column="61"/></expr_stmt>
        <expr_stmt><expr><call><name pos:line="27" pos:column="9">ap_xlate_proto_from_ascii<pos:position pos:line="27" pos:column="34"/></name><argument_list pos:line="27" pos:column="34">(<argument><expr><name pos:line="27" pos:column="35">ebcdic_text<pos:position pos:line="27" pos:column="46"/></name></expr></argument>, <argument><expr><name pos:line="27" pos:column="48">j<pos:position pos:line="27" pos:column="49"/></name></expr></argument>)<pos:position pos:line="27" pos:column="50"/></argument_list></call></expr>;<pos:position pos:line="27" pos:column="51"/></expr_stmt>
<cpp:endif pos:line="28" pos:column="1">#<cpp:directive pos:line="28" pos:column="2">endif<pos:position pos:line="28" pos:column="7"/></cpp:directive></cpp:endif> <comment type="block" pos:line="28" pos:column="8">/* APR_CHARSET_EBCDIC */</comment>
        <expr_stmt><expr><call><name pos:line="29" pos:column="9">apr_snprintf<pos:position pos:line="29" pos:column="21"/></name><argument_list pos:line="29" pos:column="21">(<argument><expr><name pos:line="29" pos:column="22">tmp<pos:position pos:line="29" pos:column="25"/></name></expr></argument>, <argument><expr><sizeof pos:line="29" pos:column="27">sizeof<argument_list pos:line="29" pos:column="33">(<argument><expr><name pos:line="29" pos:column="34">tmp<pos:position pos:line="29" pos:column="37"/></name></expr></argument>)<pos:position pos:line="29" pos:column="38"/></argument_list></sizeof></expr></argument>, <argument><expr><literal type="string" pos:line="29" pos:column="40">"| %04x: "<pos:position pos:line="29" pos:column="50"/></literal></expr></argument>, <argument><expr><name pos:line="29" pos:column="52">i<pos:position pos:line="29" pos:column="53"/></name> <operator pos:line="29" pos:column="54">*<pos:position pos:line="29" pos:column="55"/></operator> <name pos:line="29" pos:column="56">DUMP_WIDTH<pos:position pos:line="29" pos:column="66"/></name></expr></argument>)<pos:position pos:line="29" pos:column="67"/></argument_list></call></expr>;<pos:position pos:line="29" pos:column="68"/></expr_stmt>
        <expr_stmt><expr><call><name pos:line="30" pos:column="9">apr_cpystrn<pos:position pos:line="30" pos:column="20"/></name><argument_list pos:line="30" pos:column="20">(<argument><expr><name pos:line="30" pos:column="21">buf<pos:position pos:line="30" pos:column="24"/></name></expr></argument>, <argument><expr><name pos:line="30" pos:column="26">tmp<pos:position pos:line="30" pos:column="29"/></name></expr></argument>, <argument><expr><sizeof pos:line="30" pos:column="31">sizeof<argument_list pos:line="30" pos:column="37">(<argument><expr><name pos:line="30" pos:column="38">buf<pos:position pos:line="30" pos:column="41"/></name></expr></argument>)<pos:position pos:line="30" pos:column="42"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="30" pos:column="43"/></argument_list></call></expr>;<pos:position pos:line="30" pos:column="44"/></expr_stmt>
        <for pos:line="31" pos:column="9">for <control pos:line="31" pos:column="13">(<init><expr><name pos:line="31" pos:column="14">j<pos:position pos:line="31" pos:column="15"/></name> <operator pos:line="31" pos:column="16">=<pos:position pos:line="31" pos:column="17"/></operator> <literal type="number" pos:line="31" pos:column="18">0<pos:position pos:line="31" pos:column="19"/></literal></expr>;<pos:position pos:line="31" pos:column="20"/></init> <condition><expr><name pos:line="31" pos:column="21">j<pos:position pos:line="31" pos:column="22"/></name> <operator pos:line="31" pos:column="23">&lt;<pos:position pos:line="31" pos:column="27"/></operator> <name pos:line="31" pos:column="25">DUMP_WIDTH<pos:position pos:line="31" pos:column="35"/></name></expr>;<pos:position pos:line="31" pos:column="36"/></condition> <incr><expr><name pos:line="31" pos:column="37">j<pos:position pos:line="31" pos:column="38"/></name><operator pos:line="31" pos:column="38">++<pos:position pos:line="31" pos:column="40"/></operator></expr></incr>)<pos:position pos:line="31" pos:column="41"/></control> <block pos:line="31" pos:column="42">{
            <if pos:line="32" pos:column="13">if <condition pos:line="32" pos:column="16">(<expr><operator pos:line="32" pos:column="17">(<pos:position pos:line="32" pos:column="18"/></operator><operator pos:line="32" pos:column="18">(<pos:position pos:line="32" pos:column="19"/></operator><name pos:line="32" pos:column="19">i<pos:position pos:line="32" pos:column="20"/></name> <operator pos:line="32" pos:column="21">*<pos:position pos:line="32" pos:column="22"/></operator> <name pos:line="32" pos:column="23">DUMP_WIDTH<pos:position pos:line="32" pos:column="33"/></name><operator pos:line="32" pos:column="33">)<pos:position pos:line="32" pos:column="34"/></operator> <operator pos:line="32" pos:column="35">+<pos:position pos:line="32" pos:column="36"/></operator> <name pos:line="32" pos:column="37">j<pos:position pos:line="32" pos:column="38"/></name><operator pos:line="32" pos:column="38">)<pos:position pos:line="32" pos:column="39"/></operator> <operator pos:line="32" pos:column="40">&gt;=<pos:position pos:line="32" pos:column="45"/></operator> <name pos:line="32" pos:column="43">len<pos:position pos:line="32" pos:column="46"/></name></expr>)<pos:position pos:line="32" pos:column="47"/></condition><then pos:line="32" pos:column="47">
                <block type="pseudo"><expr_stmt><expr><call><name pos:line="33" pos:column="17">apr_cpystrn<pos:position pos:line="33" pos:column="28"/></name><argument_list pos:line="33" pos:column="28">(<argument><expr><name pos:line="33" pos:column="29">buf<pos:position pos:line="33" pos:column="32"/></name><operator pos:line="33" pos:column="32">+<pos:position pos:line="33" pos:column="33"/></operator><call><name pos:line="33" pos:column="33">strlen<pos:position pos:line="33" pos:column="39"/></name><argument_list pos:line="33" pos:column="39">(<argument><expr><name pos:line="33" pos:column="40">buf<pos:position pos:line="33" pos:column="43"/></name></expr></argument>)<pos:position pos:line="33" pos:column="44"/></argument_list></call></expr></argument>, <argument><expr><literal type="string" pos:line="33" pos:column="46">"   "<pos:position pos:line="33" pos:column="51"/></literal></expr></argument>, <argument><expr><sizeof pos:line="33" pos:column="53">sizeof<argument_list pos:line="33" pos:column="59">(<argument><expr><name pos:line="33" pos:column="60">buf<pos:position pos:line="33" pos:column="63"/></name></expr></argument>)<pos:position pos:line="33" pos:column="64"/></argument_list></sizeof><operator pos:line="33" pos:column="64">-<pos:position pos:line="33" pos:column="65"/></operator><call><name pos:line="33" pos:column="65">strlen<pos:position pos:line="33" pos:column="71"/></name><argument_list pos:line="33" pos:column="71">(<argument><expr><name pos:line="33" pos:column="72">buf<pos:position pos:line="33" pos:column="75"/></name></expr></argument>)<pos:position pos:line="33" pos:column="76"/></argument_list></call></expr></argument>)<pos:position pos:line="33" pos:column="77"/></argument_list></call></expr>;<pos:position pos:line="33" pos:column="78"/></expr_stmt></block></then>
            <else pos:line="34" pos:column="13">else <block pos:line="34" pos:column="18">{
                <expr_stmt><expr><name pos:line="35" pos:column="17">ch<pos:position pos:line="35" pos:column="19"/></name> <operator pos:line="35" pos:column="20">=<pos:position pos:line="35" pos:column="21"/></operator> <operator pos:line="35" pos:column="22">(<pos:position pos:line="35" pos:column="23"/></operator><operator pos:line="35" pos:column="23">(<pos:position pos:line="35" pos:column="24"/></operator><name pos:line="35" pos:column="24">unsigned<pos:position pos:line="35" pos:column="32"/></name> <name pos:line="35" pos:column="33">char<pos:position pos:line="35" pos:column="37"/></name><operator pos:line="35" pos:column="37">)<pos:position pos:line="35" pos:column="38"/></operator><operator pos:line="35" pos:column="38">*<pos:position pos:line="35" pos:column="39"/></operator><operator pos:line="35" pos:column="39">(<pos:position pos:line="35" pos:column="40"/></operator><operator pos:line="35" pos:column="40">(<pos:position pos:line="35" pos:column="41"/></operator><name pos:line="35" pos:column="41">char<pos:position pos:line="35" pos:column="45"/></name> <operator pos:line="35" pos:column="46">*<pos:position pos:line="35" pos:column="47"/></operator><operator pos:line="35" pos:column="47">)<pos:position pos:line="35" pos:column="48"/></operator><operator pos:line="35" pos:column="48">(<pos:position pos:line="35" pos:column="49"/></operator><name pos:line="35" pos:column="49">s<pos:position pos:line="35" pos:column="50"/></name><operator pos:line="35" pos:column="50">)<pos:position pos:line="35" pos:column="51"/></operator> <operator pos:line="35" pos:column="52">+<pos:position pos:line="35" pos:column="53"/></operator> <name pos:line="35" pos:column="54">i<pos:position pos:line="35" pos:column="55"/></name> <operator pos:line="35" pos:column="56">*<pos:position pos:line="35" pos:column="57"/></operator> <name pos:line="35" pos:column="58">DUMP_WIDTH<pos:position pos:line="35" pos:column="68"/></name> <operator pos:line="35" pos:column="69">+<pos:position pos:line="35" pos:column="70"/></operator> <name pos:line="35" pos:column="71">j<pos:position pos:line="35" pos:column="72"/></name><operator pos:line="35" pos:column="72">)<pos:position pos:line="35" pos:column="73"/></operator><operator pos:line="35" pos:column="73">)<pos:position pos:line="35" pos:column="74"/></operator> <operator pos:line="35" pos:column="75">&amp;<pos:position pos:line="35" pos:column="80"/></operator> <literal type="number" pos:line="35" pos:column="77">0xff<pos:position pos:line="35" pos:column="81"/></literal></expr>;<pos:position pos:line="35" pos:column="82"/></expr_stmt>
                <expr_stmt><expr><call><name pos:line="36" pos:column="17">apr_snprintf<pos:position pos:line="36" pos:column="29"/></name><argument_list pos:line="36" pos:column="29">(<argument><expr><name pos:line="36" pos:column="30">tmp<pos:position pos:line="36" pos:column="33"/></name></expr></argument>, <argument><expr><sizeof pos:line="36" pos:column="35">sizeof<argument_list pos:line="36" pos:column="41">(<argument><expr><name pos:line="36" pos:column="42">tmp<pos:position pos:line="36" pos:column="45"/></name></expr></argument>)<pos:position pos:line="36" pos:column="46"/></argument_list></sizeof></expr></argument>, <argument><expr><literal type="string" pos:line="36" pos:column="48">"%02x%c"<pos:position pos:line="36" pos:column="56"/></literal></expr></argument>, <argument><expr><name pos:line="36" pos:column="58">ch<pos:position pos:line="36" pos:column="60"/></name></expr></argument> , <argument><expr><ternary><condition><expr><name pos:line="36" pos:column="63">j<pos:position pos:line="36" pos:column="64"/></name><operator pos:line="36" pos:column="64">==<pos:position pos:line="36" pos:column="66"/></operator><literal type="number" pos:line="36" pos:column="66">7<pos:position pos:line="36" pos:column="67"/></literal></expr> ?<pos:position pos:line="36" pos:column="69"/></condition><then pos:line="36" pos:column="69"> <expr><literal type="char" pos:line="36" pos:column="70">'-'<pos:position pos:line="36" pos:column="73"/></literal></expr> <pos:position pos:line="36" pos:column="74"/></then><else pos:line="36" pos:column="74">: <expr><literal type="char" pos:line="36" pos:column="76">' '<pos:position pos:line="36" pos:column="79"/></literal></expr></else></ternary></expr></argument>)<pos:position pos:line="36" pos:column="80"/></argument_list></call></expr>;<pos:position pos:line="36" pos:column="81"/></expr_stmt>
                <expr_stmt><expr><call><name pos:line="37" pos:column="17">apr_cpystrn<pos:position pos:line="37" pos:column="28"/></name><argument_list pos:line="37" pos:column="28">(<argument><expr><name pos:line="37" pos:column="29">buf<pos:position pos:line="37" pos:column="32"/></name><operator pos:line="37" pos:column="32">+<pos:position pos:line="37" pos:column="33"/></operator><call><name pos:line="37" pos:column="33">strlen<pos:position pos:line="37" pos:column="39"/></name><argument_list pos:line="37" pos:column="39">(<argument><expr><name pos:line="37" pos:column="40">buf<pos:position pos:line="37" pos:column="43"/></name></expr></argument>)<pos:position pos:line="37" pos:column="44"/></argument_list></call></expr></argument>, <argument><expr><name pos:line="37" pos:column="46">tmp<pos:position pos:line="37" pos:column="49"/></name></expr></argument>, <argument><expr><sizeof pos:line="37" pos:column="51">sizeof<argument_list pos:line="37" pos:column="57">(<argument><expr><name pos:line="37" pos:column="58">buf<pos:position pos:line="37" pos:column="61"/></name></expr></argument>)<pos:position pos:line="37" pos:column="62"/></argument_list></sizeof><operator pos:line="37" pos:column="62">-<pos:position pos:line="37" pos:column="63"/></operator><call><name pos:line="37" pos:column="63">strlen<pos:position pos:line="37" pos:column="69"/></name><argument_list pos:line="37" pos:column="69">(<argument><expr><name pos:line="37" pos:column="70">buf<pos:position pos:line="37" pos:column="73"/></name></expr></argument>)<pos:position pos:line="37" pos:column="74"/></argument_list></call></expr></argument>)<pos:position pos:line="37" pos:column="75"/></argument_list></call></expr>;<pos:position pos:line="37" pos:column="76"/></expr_stmt>
            }<pos:position pos:line="38" pos:column="14"/></block></else></if>
        }<pos:position pos:line="39" pos:column="10"/></block></for>
        <expr_stmt><expr><call><name pos:line="40" pos:column="9">apr_cpystrn<pos:position pos:line="40" pos:column="20"/></name><argument_list pos:line="40" pos:column="20">(<argument><expr><name pos:line="40" pos:column="21">buf<pos:position pos:line="40" pos:column="24"/></name><operator pos:line="40" pos:column="24">+<pos:position pos:line="40" pos:column="25"/></operator><call><name pos:line="40" pos:column="25">strlen<pos:position pos:line="40" pos:column="31"/></name><argument_list pos:line="40" pos:column="31">(<argument><expr><name pos:line="40" pos:column="32">buf<pos:position pos:line="40" pos:column="35"/></name></expr></argument>)<pos:position pos:line="40" pos:column="36"/></argument_list></call></expr></argument>, <argument><expr><literal type="string" pos:line="40" pos:column="38">" "<pos:position pos:line="40" pos:column="41"/></literal></expr></argument>, <argument><expr><sizeof pos:line="40" pos:column="43">sizeof<argument_list pos:line="40" pos:column="49">(<argument><expr><name pos:line="40" pos:column="50">buf<pos:position pos:line="40" pos:column="53"/></name></expr></argument>)<pos:position pos:line="40" pos:column="54"/></argument_list></sizeof><operator pos:line="40" pos:column="54">-<pos:position pos:line="40" pos:column="55"/></operator><call><name pos:line="40" pos:column="55">strlen<pos:position pos:line="40" pos:column="61"/></name><argument_list pos:line="40" pos:column="61">(<argument><expr><name pos:line="40" pos:column="62">buf<pos:position pos:line="40" pos:column="65"/></name></expr></argument>)<pos:position pos:line="40" pos:column="66"/></argument_list></call></expr></argument>)<pos:position pos:line="40" pos:column="67"/></argument_list></call></expr>;<pos:position pos:line="40" pos:column="68"/></expr_stmt>
        <for pos:line="41" pos:column="9">for <control pos:line="41" pos:column="13">(<init><expr><name pos:line="41" pos:column="14">j<pos:position pos:line="41" pos:column="15"/></name> <operator pos:line="41" pos:column="16">=<pos:position pos:line="41" pos:column="17"/></operator> <literal type="number" pos:line="41" pos:column="18">0<pos:position pos:line="41" pos:column="19"/></literal></expr>;<pos:position pos:line="41" pos:column="20"/></init> <condition><expr><name pos:line="41" pos:column="21">j<pos:position pos:line="41" pos:column="22"/></name> <operator pos:line="41" pos:column="23">&lt;<pos:position pos:line="41" pos:column="27"/></operator> <name pos:line="41" pos:column="25">DUMP_WIDTH<pos:position pos:line="41" pos:column="35"/></name></expr>;<pos:position pos:line="41" pos:column="36"/></condition> <incr><expr><name pos:line="41" pos:column="37">j<pos:position pos:line="41" pos:column="38"/></name><operator pos:line="41" pos:column="38">++<pos:position pos:line="41" pos:column="40"/></operator></expr></incr>)<pos:position pos:line="41" pos:column="41"/></control> <block pos:line="41" pos:column="42">{
            <if pos:line="42" pos:column="13">if <condition pos:line="42" pos:column="16">(<expr><operator pos:line="42" pos:column="17">(<pos:position pos:line="42" pos:column="18"/></operator><operator pos:line="42" pos:column="18">(<pos:position pos:line="42" pos:column="19"/></operator><name pos:line="42" pos:column="19">i<pos:position pos:line="42" pos:column="20"/></name> <operator pos:line="42" pos:column="21">*<pos:position pos:line="42" pos:column="22"/></operator> <name pos:line="42" pos:column="23">DUMP_WIDTH<pos:position pos:line="42" pos:column="33"/></name><operator pos:line="42" pos:column="33">)<pos:position pos:line="42" pos:column="34"/></operator> <operator pos:line="42" pos:column="35">+<pos:position pos:line="42" pos:column="36"/></operator> <name pos:line="42" pos:column="37">j<pos:position pos:line="42" pos:column="38"/></name><operator pos:line="42" pos:column="38">)<pos:position pos:line="42" pos:column="39"/></operator> <operator pos:line="42" pos:column="40">&gt;=<pos:position pos:line="42" pos:column="45"/></operator> <name pos:line="42" pos:column="43">len<pos:position pos:line="42" pos:column="46"/></name></expr>)<pos:position pos:line="42" pos:column="47"/></condition><then pos:line="42" pos:column="47">
                <block type="pseudo"><expr_stmt><expr><call><name pos:line="43" pos:column="17">apr_cpystrn<pos:position pos:line="43" pos:column="28"/></name><argument_list pos:line="43" pos:column="28">(<argument><expr><name pos:line="43" pos:column="29">buf<pos:position pos:line="43" pos:column="32"/></name><operator pos:line="43" pos:column="32">+<pos:position pos:line="43" pos:column="33"/></operator><call><name pos:line="43" pos:column="33">strlen<pos:position pos:line="43" pos:column="39"/></name><argument_list pos:line="43" pos:column="39">(<argument><expr><name pos:line="43" pos:column="40">buf<pos:position pos:line="43" pos:column="43"/></name></expr></argument>)<pos:position pos:line="43" pos:column="44"/></argument_list></call></expr></argument>, <argument><expr><literal type="string" pos:line="43" pos:column="46">" "<pos:position pos:line="43" pos:column="49"/></literal></expr></argument>, <argument><expr><sizeof pos:line="43" pos:column="51">sizeof<argument_list pos:line="43" pos:column="57">(<argument><expr><name pos:line="43" pos:column="58">buf<pos:position pos:line="43" pos:column="61"/></name></expr></argument>)<pos:position pos:line="43" pos:column="62"/></argument_list></sizeof><operator pos:line="43" pos:column="62">-<pos:position pos:line="43" pos:column="63"/></operator><call><name pos:line="43" pos:column="63">strlen<pos:position pos:line="43" pos:column="69"/></name><argument_list pos:line="43" pos:column="69">(<argument><expr><name pos:line="43" pos:column="70">buf<pos:position pos:line="43" pos:column="73"/></name></expr></argument>)<pos:position pos:line="43" pos:column="74"/></argument_list></call></expr></argument>)<pos:position pos:line="43" pos:column="75"/></argument_list></call></expr>;<pos:position pos:line="43" pos:column="76"/></expr_stmt></block></then>
            <else pos:line="44" pos:column="13">else <block pos:line="44" pos:column="18">{
                <expr_stmt><expr><name pos:line="45" pos:column="17">ch<pos:position pos:line="45" pos:column="19"/></name> <operator pos:line="45" pos:column="20">=<pos:position pos:line="45" pos:column="21"/></operator> <operator pos:line="45" pos:column="22">(<pos:position pos:line="45" pos:column="23"/></operator><operator pos:line="45" pos:column="23">(<pos:position pos:line="45" pos:column="24"/></operator><name pos:line="45" pos:column="24">unsigned<pos:position pos:line="45" pos:column="32"/></name> <name pos:line="45" pos:column="33">char<pos:position pos:line="45" pos:column="37"/></name><operator pos:line="45" pos:column="37">)<pos:position pos:line="45" pos:column="38"/></operator><operator pos:line="45" pos:column="38">*<pos:position pos:line="45" pos:column="39"/></operator><operator pos:line="45" pos:column="39">(<pos:position pos:line="45" pos:column="40"/></operator><operator pos:line="45" pos:column="40">(<pos:position pos:line="45" pos:column="41"/></operator><name pos:line="45" pos:column="41">char<pos:position pos:line="45" pos:column="45"/></name> <operator pos:line="45" pos:column="46">*<pos:position pos:line="45" pos:column="47"/></operator><operator pos:line="45" pos:column="47">)<pos:position pos:line="45" pos:column="48"/></operator><operator pos:line="45" pos:column="48">(<pos:position pos:line="45" pos:column="49"/></operator><name pos:line="45" pos:column="49">s<pos:position pos:line="45" pos:column="50"/></name><operator pos:line="45" pos:column="50">)<pos:position pos:line="45" pos:column="51"/></operator> <operator pos:line="45" pos:column="52">+<pos:position pos:line="45" pos:column="53"/></operator> <name pos:line="45" pos:column="54">i<pos:position pos:line="45" pos:column="55"/></name> <operator pos:line="45" pos:column="56">*<pos:position pos:line="45" pos:column="57"/></operator> <name pos:line="45" pos:column="58">DUMP_WIDTH<pos:position pos:line="45" pos:column="68"/></name> <operator pos:line="45" pos:column="69">+<pos:position pos:line="45" pos:column="70"/></operator> <name pos:line="45" pos:column="71">j<pos:position pos:line="45" pos:column="72"/></name><operator pos:line="45" pos:column="72">)<pos:position pos:line="45" pos:column="73"/></operator><operator pos:line="45" pos:column="73">)<pos:position pos:line="45" pos:column="74"/></operator> <operator pos:line="45" pos:column="75">&amp;<pos:position pos:line="45" pos:column="80"/></operator> <literal type="number" pos:line="45" pos:column="77">0xff<pos:position pos:line="45" pos:column="81"/></literal></expr>;<pos:position pos:line="45" pos:column="82"/></expr_stmt>
<cpp:if pos:line="46" pos:column="1">#<cpp:directive pos:line="46" pos:column="2">if<pos:position pos:line="46" pos:column="4"/></cpp:directive> <expr><name pos:line="46" pos:column="5">APR_CHARSET_EBCDIC<pos:position pos:line="46" pos:column="23"/></name></expr></cpp:if>
                <expr_stmt><expr><call><name pos:line="47" pos:column="17">apr_snprintf<pos:position pos:line="47" pos:column="29"/></name><argument_list pos:line="47" pos:column="29">(<argument><expr><name pos:line="47" pos:column="30">tmp<pos:position pos:line="47" pos:column="33"/></name></expr></argument>, <argument><expr><sizeof pos:line="47" pos:column="35">sizeof<argument_list pos:line="47" pos:column="41">(<argument><expr><name pos:line="47" pos:column="42">tmp<pos:position pos:line="47" pos:column="45"/></name></expr></argument>)<pos:position pos:line="47" pos:column="46"/></argument_list></sizeof></expr></argument>, <argument><expr><literal type="string" pos:line="47" pos:column="48">"%c"<pos:position pos:line="47" pos:column="52"/></literal></expr></argument>, <argument><expr><ternary><condition><expr><operator pos:line="47" pos:column="54">(<pos:position pos:line="47" pos:column="55"/></operator><name pos:line="47" pos:column="55">ch<pos:position pos:line="47" pos:column="57"/></name> <operator pos:line="47" pos:column="58">&gt;=<pos:position pos:line="47" pos:column="63"/></operator> <literal type="number" pos:line="47" pos:column="61">0x20<pos:position pos:line="47" pos:column="65"/></literal> <operator pos:line="47" pos:column="66">&amp;&amp;<pos:position pos:line="47" pos:column="76"/></operator> <name pos:line="47" pos:column="69">ch<pos:position pos:line="47" pos:column="71"/></name> <operator pos:line="47" pos:column="72">&lt;=<pos:position pos:line="47" pos:column="77"/></operator> <literal type="number" pos:line="47" pos:column="75">0x7F<pos:position pos:line="47" pos:column="79"/></literal><operator pos:line="47" pos:column="79">)<pos:position pos:line="47" pos:column="80"/></operator></expr> ?<pos:position pos:line="47" pos:column="82"/></condition><then pos:line="47" pos:column="82"> <expr><name><name pos:line="47" pos:column="83">ebcdic_text<pos:position pos:line="47" pos:column="94"/></name><index pos:line="47" pos:column="94">[<expr><name pos:line="47" pos:column="95">j<pos:position pos:line="47" pos:column="96"/></name></expr>]<pos:position pos:line="47" pos:column="97"/></index></name></expr> <pos:position pos:line="47" pos:column="98"/></then><else pos:line="47" pos:column="98">: <expr><literal type="char" pos:line="47" pos:column="100">'.'<pos:position pos:line="47" pos:column="103"/></literal></expr></else></ternary></expr></argument>)<pos:position pos:line="47" pos:column="104"/></argument_list></call></expr>;<pos:position pos:line="47" pos:column="105"/></expr_stmt>
<cpp:else pos:line="48" pos:column="1">#<cpp:directive pos:line="48" pos:column="2">else<pos:position pos:line="48" pos:column="6"/></cpp:directive></cpp:else> <comment type="block" pos:line="48" pos:column="7">/* APR_CHARSET_EBCDIC */</comment>
                <expr_stmt><expr><call><name pos:line="49" pos:column="17">apr_snprintf<pos:position pos:line="49" pos:column="29"/></name><argument_list pos:line="49" pos:column="29">(<argument><expr><name pos:line="49" pos:column="30">tmp<pos:position pos:line="49" pos:column="33"/></name></expr></argument>, <argument><expr><sizeof pos:line="49" pos:column="35">sizeof<argument_list pos:line="49" pos:column="41">(<argument><expr><name pos:line="49" pos:column="42">tmp<pos:position pos:line="49" pos:column="45"/></name></expr></argument>)<pos:position pos:line="49" pos:column="46"/></argument_list></sizeof></expr></argument>, <argument><expr><literal type="string" pos:line="49" pos:column="48">"%c"<pos:position pos:line="49" pos:column="52"/></literal></expr></argument>, <argument><expr><ternary><condition><expr><operator pos:line="49" pos:column="54">(<pos:position pos:line="49" pos:column="55"/></operator><operator pos:line="49" pos:column="55">(<pos:position pos:line="49" pos:column="56"/></operator><name pos:line="49" pos:column="56">ch<pos:position pos:line="49" pos:column="58"/></name> <operator pos:line="49" pos:column="59">&gt;=<pos:position pos:line="49" pos:column="64"/></operator> <literal type="char" pos:line="49" pos:column="62">' '<pos:position pos:line="49" pos:column="65"/></literal><operator pos:line="49" pos:column="65">)<pos:position pos:line="49" pos:column="66"/></operator> <operator pos:line="49" pos:column="67">&amp;&amp;<pos:position pos:line="49" pos:column="77"/></operator> <operator pos:line="49" pos:column="70">(<pos:position pos:line="49" pos:column="71"/></operator><name pos:line="49" pos:column="71">ch<pos:position pos:line="49" pos:column="73"/></name> <operator pos:line="49" pos:column="74">&lt;=<pos:position pos:line="49" pos:column="79"/></operator> <literal type="char" pos:line="49" pos:column="77">'~'<pos:position pos:line="49" pos:column="80"/></literal><operator pos:line="49" pos:column="80">)<pos:position pos:line="49" pos:column="81"/></operator><operator pos:line="49" pos:column="81">)<pos:position pos:line="49" pos:column="82"/></operator></expr> ?<pos:position pos:line="49" pos:column="84"/></condition><then pos:line="49" pos:column="84"> <expr><name pos:line="49" pos:column="85">ch<pos:position pos:line="49" pos:column="87"/></name></expr> <pos:position pos:line="49" pos:column="88"/></then><else pos:line="49" pos:column="88">: <expr><literal type="char" pos:line="49" pos:column="90">'.'<pos:position pos:line="49" pos:column="93"/></literal></expr></else></ternary></expr></argument>)<pos:position pos:line="49" pos:column="94"/></argument_list></call></expr>;<pos:position pos:line="49" pos:column="95"/></expr_stmt>
<cpp:endif pos:line="50" pos:column="1">#<cpp:directive pos:line="50" pos:column="2">endif<pos:position pos:line="50" pos:column="7"/></cpp:directive></cpp:endif> <comment type="block" pos:line="50" pos:column="8">/* APR_CHARSET_EBCDIC */</comment>
                <expr_stmt><expr><call><name pos:line="51" pos:column="17">apr_cpystrn<pos:position pos:line="51" pos:column="28"/></name><argument_list pos:line="51" pos:column="28">(<argument><expr><name pos:line="51" pos:column="29">buf<pos:position pos:line="51" pos:column="32"/></name><operator pos:line="51" pos:column="32">+<pos:position pos:line="51" pos:column="33"/></operator><call><name pos:line="51" pos:column="33">strlen<pos:position pos:line="51" pos:column="39"/></name><argument_list pos:line="51" pos:column="39">(<argument><expr><name pos:line="51" pos:column="40">buf<pos:position pos:line="51" pos:column="43"/></name></expr></argument>)<pos:position pos:line="51" pos:column="44"/></argument_list></call></expr></argument>, <argument><expr><name pos:line="51" pos:column="46">tmp<pos:position pos:line="51" pos:column="49"/></name></expr></argument>, <argument><expr><sizeof pos:line="51" pos:column="51">sizeof<argument_list pos:line="51" pos:column="57">(<argument><expr><name pos:line="51" pos:column="58">buf<pos:position pos:line="51" pos:column="61"/></name></expr></argument>)<pos:position pos:line="51" pos:column="62"/></argument_list></sizeof><operator pos:line="51" pos:column="62">-<pos:position pos:line="51" pos:column="63"/></operator><call><name pos:line="51" pos:column="63">strlen<pos:position pos:line="51" pos:column="69"/></name><argument_list pos:line="51" pos:column="69">(<argument><expr><name pos:line="51" pos:column="70">buf<pos:position pos:line="51" pos:column="73"/></name></expr></argument>)<pos:position pos:line="51" pos:column="74"/></argument_list></call></expr></argument>)<pos:position pos:line="51" pos:column="75"/></argument_list></call></expr>;<pos:position pos:line="51" pos:column="76"/></expr_stmt>
            }<pos:position pos:line="52" pos:column="14"/></block></else></if>
        }<pos:position pos:line="53" pos:column="10"/></block></for>
        <expr_stmt><expr><call><name pos:line="54" pos:column="9">apr_cpystrn<pos:position pos:line="54" pos:column="20"/></name><argument_list pos:line="54" pos:column="20">(<argument><expr><name pos:line="54" pos:column="21">buf<pos:position pos:line="54" pos:column="24"/></name><operator pos:line="54" pos:column="24">+<pos:position pos:line="54" pos:column="25"/></operator><call><name pos:line="54" pos:column="25">strlen<pos:position pos:line="54" pos:column="31"/></name><argument_list pos:line="54" pos:column="31">(<argument><expr><name pos:line="54" pos:column="32">buf<pos:position pos:line="54" pos:column="35"/></name></expr></argument>)<pos:position pos:line="54" pos:column="36"/></argument_list></call></expr></argument>, <argument><expr><literal type="string" pos:line="54" pos:column="38">" |"<pos:position pos:line="54" pos:column="42"/></literal></expr></argument>, <argument><expr><sizeof pos:line="54" pos:column="44">sizeof<argument_list pos:line="54" pos:column="50">(<argument><expr><name pos:line="54" pos:column="51">buf<pos:position pos:line="54" pos:column="54"/></name></expr></argument>)<pos:position pos:line="54" pos:column="55"/></argument_list></sizeof><operator pos:line="54" pos:column="55">-<pos:position pos:line="54" pos:column="56"/></operator><call><name pos:line="54" pos:column="56">strlen<pos:position pos:line="54" pos:column="62"/></name><argument_list pos:line="54" pos:column="62">(<argument><expr><name pos:line="54" pos:column="63">buf<pos:position pos:line="54" pos:column="66"/></name></expr></argument>)<pos:position pos:line="54" pos:column="67"/></argument_list></call></expr></argument>)<pos:position pos:line="54" pos:column="68"/></argument_list></call></expr>;<pos:position pos:line="54" pos:column="69"/></expr_stmt>
        <expr_stmt><expr><call><name pos:line="55" pos:column="9">ap_log_error<pos:position pos:line="55" pos:column="21"/></name><argument_list pos:line="55" pos:column="21">(<argument><expr><name pos:line="55" pos:column="22">APLOG_MARK<pos:position pos:line="55" pos:column="32"/></name></expr></argument>, <argument><expr><name pos:line="55" pos:column="34">APLOG_TRACE7<pos:position pos:line="55" pos:column="46"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="55" pos:column="48">0<pos:position pos:line="55" pos:column="49"/></literal></expr></argument>, <argument><expr><name pos:line="55" pos:column="51">srvr<pos:position pos:line="55" pos:column="55"/></name></expr></argument>,
                     <argument><expr><literal type="string" pos:line="56" pos:column="22">"%s"<pos:position pos:line="56" pos:column="26"/></literal></expr></argument>, <argument><expr><name pos:line="56" pos:column="28">buf<pos:position pos:line="56" pos:column="31"/></name></expr></argument>)<pos:position pos:line="56" pos:column="32"/></argument_list></call></expr>;<pos:position pos:line="56" pos:column="33"/></expr_stmt>
    }<pos:position pos:line="57" pos:column="6"/></block></for>
    <if pos:line="58" pos:column="5">if <condition pos:line="58" pos:column="8">(<expr><name pos:line="58" pos:column="9">trunc<pos:position pos:line="58" pos:column="14"/></name> <operator pos:line="58" pos:column="15">&gt;<pos:position pos:line="58" pos:column="19"/></operator> <literal type="number" pos:line="58" pos:column="17">0<pos:position pos:line="58" pos:column="18"/></literal></expr>)<pos:position pos:line="58" pos:column="19"/></condition><then pos:line="58" pos:column="19">
        <block type="pseudo"><expr_stmt><expr><call><name pos:line="59" pos:column="9">ap_log_error<pos:position pos:line="59" pos:column="21"/></name><argument_list pos:line="59" pos:column="21">(<argument><expr><name pos:line="59" pos:column="22">APLOG_MARK<pos:position pos:line="59" pos:column="32"/></name></expr></argument>, <argument><expr><name pos:line="59" pos:column="34">APLOG_TRACE7<pos:position pos:line="59" pos:column="46"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="59" pos:column="48">0<pos:position pos:line="59" pos:column="49"/></literal></expr></argument>, <argument><expr><name pos:line="59" pos:column="51">srvr<pos:position pos:line="59" pos:column="55"/></name></expr></argument>,
                <argument><expr><literal type="string" pos:line="60" pos:column="17">"| %04ld - &lt;SPACES/NULS&gt;"<pos:position pos:line="60" pos:column="48"/></literal></expr></argument>, <argument><expr><name pos:line="60" pos:column="44">len<pos:position pos:line="60" pos:column="47"/></name> <operator pos:line="60" pos:column="48">+<pos:position pos:line="60" pos:column="49"/></operator> <name pos:line="60" pos:column="50">trunc<pos:position pos:line="60" pos:column="55"/></name></expr></argument>)<pos:position pos:line="60" pos:column="56"/></argument_list></call></expr>;<pos:position pos:line="60" pos:column="57"/></expr_stmt></block></then></if>
    <expr_stmt><expr><call><name pos:line="61" pos:column="5">ap_log_error<pos:position pos:line="61" pos:column="17"/></name><argument_list pos:line="61" pos:column="17">(<argument><expr><name pos:line="61" pos:column="18">APLOG_MARK<pos:position pos:line="61" pos:column="28"/></name></expr></argument>, <argument><expr><name pos:line="61" pos:column="30">APLOG_TRACE7<pos:position pos:line="61" pos:column="42"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="61" pos:column="44">0<pos:position pos:line="61" pos:column="45"/></literal></expr></argument>, <argument><expr><name pos:line="61" pos:column="47">srvr<pos:position pos:line="61" pos:column="51"/></name></expr></argument>,
            <argument><expr><literal type="string" pos:line="62" pos:column="13">"+-------------------------------------------------------------------------+"<pos:position pos:line="62" pos:column="90"/></literal></expr></argument>)<pos:position pos:line="62" pos:column="91"/></argument_list></call></expr>;<pos:position pos:line="62" pos:column="92"/></expr_stmt>
    <return pos:line="63" pos:column="5">return;<pos:position pos:line="63" pos:column="12"/></return>
}<pos:position pos:line="64" pos:column="2"/></block></function></unit>

<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/httpd/gumtree/httpd_repos_function_3661_httpd-2.2.23.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">apr_status_t<pos:position pos:line="1" pos:column="13"/></name></type> <name pos:line="1" pos:column="14">apr_file_trunc<pos:position pos:line="1" pos:column="28"/></name><parameter_list pos:line="1" pos:column="28">(<parameter><decl><type><name pos:line="1" pos:column="29">apr_file_t<pos:position pos:line="1" pos:column="39"/></name> <modifier pos:line="1" pos:column="40">*<pos:position pos:line="1" pos:column="41"/></modifier></type><name pos:line="1" pos:column="41">fp<pos:position pos:line="1" pos:column="43"/></name></decl></parameter>, <parameter><decl><type><name pos:line="1" pos:column="45">apr_off_t<pos:position pos:line="1" pos:column="54"/></name></type> <name pos:line="1" pos:column="55">offset<pos:position pos:line="1" pos:column="61"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="62"/></parameter_list>
<block pos:line="2" pos:column="1">{
    <if pos:line="3" pos:column="5">if <condition pos:line="3" pos:column="8">(<expr><name><name pos:line="3" pos:column="9">fp<pos:position pos:line="3" pos:column="11"/></name><operator pos:line="3" pos:column="11">-&gt;<pos:position pos:line="3" pos:column="16"/></operator><name pos:line="3" pos:column="13">buffered<pos:position pos:line="3" pos:column="21"/></name></name></expr>)<pos:position pos:line="3" pos:column="22"/></condition><then pos:line="3" pos:column="22"> <block pos:line="3" pos:column="23">{
        <decl_stmt><decl><type><name pos:line="4" pos:column="9">int<pos:position pos:line="4" pos:column="12"/></name></type> <name pos:line="4" pos:column="13">rc<pos:position pos:line="4" pos:column="15"/></name> <init pos:line="4" pos:column="16">= <expr><literal type="number" pos:line="4" pos:column="18">0<pos:position pos:line="4" pos:column="19"/></literal></expr></init></decl>;<pos:position pos:line="4" pos:column="20"/></decl_stmt>
        <expr_stmt><expr><call><name pos:line="5" pos:column="9">file_lock<pos:position pos:line="5" pos:column="18"/></name><argument_list pos:line="5" pos:column="18">(<argument><expr><name pos:line="5" pos:column="19">fp<pos:position pos:line="5" pos:column="21"/></name></expr></argument>)<pos:position pos:line="5" pos:column="22"/></argument_list></call></expr>;<pos:position pos:line="5" pos:column="23"/></expr_stmt>
        <if pos:line="6" pos:column="9">if <condition pos:line="6" pos:column="12">(<expr><name><name pos:line="6" pos:column="13">fp<pos:position pos:line="6" pos:column="15"/></name><operator pos:line="6" pos:column="15">-&gt;<pos:position pos:line="6" pos:column="20"/></operator><name pos:line="6" pos:column="17">direction<pos:position pos:line="6" pos:column="26"/></name></name> <operator pos:line="6" pos:column="27">==<pos:position pos:line="6" pos:column="29"/></operator> <literal type="number" pos:line="6" pos:column="30">1<pos:position pos:line="6" pos:column="31"/></literal> <operator pos:line="6" pos:column="32">&amp;&amp;<pos:position pos:line="6" pos:column="42"/></operator> <name><name pos:line="6" pos:column="35">fp<pos:position pos:line="6" pos:column="37"/></name><operator pos:line="6" pos:column="37">-&gt;<pos:position pos:line="6" pos:column="42"/></operator><name pos:line="6" pos:column="39">bufpos<pos:position pos:line="6" pos:column="45"/></name></name> <operator pos:line="6" pos:column="46">!=<pos:position pos:line="6" pos:column="48"/></operator> <literal type="number" pos:line="6" pos:column="49">0<pos:position pos:line="6" pos:column="50"/></literal></expr>)<pos:position pos:line="6" pos:column="51"/></condition><then pos:line="6" pos:column="51"> <block pos:line="6" pos:column="52">{
            <decl_stmt><decl><type><name pos:line="7" pos:column="13">apr_off_t<pos:position pos:line="7" pos:column="22"/></name></type> <name pos:line="7" pos:column="23">len<pos:position pos:line="7" pos:column="26"/></name> <init pos:line="7" pos:column="27">= <expr><name><name pos:line="7" pos:column="29">fp<pos:position pos:line="7" pos:column="31"/></name><operator pos:line="7" pos:column="31">-&gt;<pos:position pos:line="7" pos:column="36"/></operator><name pos:line="7" pos:column="33">filePtr<pos:position pos:line="7" pos:column="40"/></name></name> <operator pos:line="7" pos:column="41">+<pos:position pos:line="7" pos:column="42"/></operator> <name><name pos:line="7" pos:column="43">fp<pos:position pos:line="7" pos:column="45"/></name><operator pos:line="7" pos:column="45">-&gt;<pos:position pos:line="7" pos:column="50"/></operator><name pos:line="7" pos:column="47">bufpos<pos:position pos:line="7" pos:column="53"/></name></name></expr></init></decl>;<pos:position pos:line="7" pos:column="54"/></decl_stmt>
            <if pos:line="8" pos:column="13">if <condition pos:line="8" pos:column="16">(<expr><name pos:line="8" pos:column="17">offset<pos:position pos:line="8" pos:column="23"/></name> <operator pos:line="8" pos:column="24">&lt;<pos:position pos:line="8" pos:column="28"/></operator> <name pos:line="8" pos:column="26">len<pos:position pos:line="8" pos:column="29"/></name></expr>)<pos:position pos:line="8" pos:column="30"/></condition><then pos:line="8" pos:column="30"> <block pos:line="8" pos:column="31">{
                <comment type="block" pos:line="9" pos:column="17">/* New file end fall below our write buffer limit.
                 * Figure out if and what needs to be flushed.
                 */</comment>
                <decl_stmt><decl><type><name pos:line="12" pos:column="17">apr_off_t<pos:position pos:line="12" pos:column="26"/></name></type> <name pos:line="12" pos:column="27">off<pos:position pos:line="12" pos:column="30"/></name> <init pos:line="12" pos:column="31">= <expr><name pos:line="12" pos:column="33">len<pos:position pos:line="12" pos:column="36"/></name> <operator pos:line="12" pos:column="37">-<pos:position pos:line="12" pos:column="38"/></operator> <name pos:line="12" pos:column="39">offset<pos:position pos:line="12" pos:column="45"/></name></expr></init></decl>;<pos:position pos:line="12" pos:column="46"/></decl_stmt>
                <if pos:line="13" pos:column="17">if <condition pos:line="13" pos:column="20">(<expr><name pos:line="13" pos:column="21">off<pos:position pos:line="13" pos:column="24"/></name> <operator pos:line="13" pos:column="25">&gt;=<pos:position pos:line="13" pos:column="30"/></operator> <literal type="number" pos:line="13" pos:column="28">0<pos:position pos:line="13" pos:column="29"/></literal> <operator pos:line="13" pos:column="30">&amp;&amp;<pos:position pos:line="13" pos:column="40"/></operator> <name pos:line="13" pos:column="33">off<pos:position pos:line="13" pos:column="36"/></name> <operator pos:line="13" pos:column="37">&lt;=<pos:position pos:line="13" pos:column="42"/></operator> <name><name pos:line="13" pos:column="40">fp<pos:position pos:line="13" pos:column="42"/></name><operator pos:line="13" pos:column="42">-&gt;<pos:position pos:line="13" pos:column="47"/></operator><name pos:line="13" pos:column="44">bufpos<pos:position pos:line="13" pos:column="50"/></name></name></expr>)<pos:position pos:line="13" pos:column="51"/></condition><then pos:line="13" pos:column="51">
                    <block type="pseudo"><expr_stmt><expr><name><name pos:line="14" pos:column="21">fp<pos:position pos:line="14" pos:column="23"/></name><operator pos:line="14" pos:column="23">-&gt;<pos:position pos:line="14" pos:column="28"/></operator><name pos:line="14" pos:column="25">bufpos<pos:position pos:line="14" pos:column="31"/></name></name> <operator pos:line="14" pos:column="32">=<pos:position pos:line="14" pos:column="33"/></operator> <name><name pos:line="14" pos:column="34">fp<pos:position pos:line="14" pos:column="36"/></name><operator pos:line="14" pos:column="36">-&gt;<pos:position pos:line="14" pos:column="41"/></operator><name pos:line="14" pos:column="38">bufpos<pos:position pos:line="14" pos:column="44"/></name></name> <operator pos:line="14" pos:column="45">-<pos:position pos:line="14" pos:column="46"/></operator> <operator pos:line="14" pos:column="47">(<pos:position pos:line="14" pos:column="48"/></operator><name pos:line="14" pos:column="48">size_t<pos:position pos:line="14" pos:column="54"/></name><operator pos:line="14" pos:column="54">)<pos:position pos:line="14" pos:column="55"/></operator><name pos:line="14" pos:column="55">off<pos:position pos:line="14" pos:column="58"/></name></expr>;<pos:position pos:line="14" pos:column="59"/></expr_stmt></block></then>
                <else pos:line="15" pos:column="17">else
                    <block type="pseudo"><expr_stmt><expr><name><name pos:line="16" pos:column="21">fp<pos:position pos:line="16" pos:column="23"/></name><operator pos:line="16" pos:column="23">-&gt;<pos:position pos:line="16" pos:column="28"/></operator><name pos:line="16" pos:column="25">bufpos<pos:position pos:line="16" pos:column="31"/></name></name> <operator pos:line="16" pos:column="32">=<pos:position pos:line="16" pos:column="33"/></operator> <literal type="number" pos:line="16" pos:column="34">0<pos:position pos:line="16" pos:column="35"/></literal></expr>;<pos:position pos:line="16" pos:column="36"/></expr_stmt></block></else></if>
            }<pos:position pos:line="17" pos:column="14"/></block></then></if>
            <expr_stmt><expr><name pos:line="18" pos:column="13">rc<pos:position pos:line="18" pos:column="15"/></name> <operator pos:line="18" pos:column="16">=<pos:position pos:line="18" pos:column="17"/></operator> <call><name pos:line="18" pos:column="18">apr_file_flush_locked<pos:position pos:line="18" pos:column="39"/></name><argument_list pos:line="18" pos:column="39">(<argument><expr><name pos:line="18" pos:column="40">fp<pos:position pos:line="18" pos:column="42"/></name></expr></argument>)<pos:position pos:line="18" pos:column="43"/></argument_list></call></expr>;<pos:position pos:line="18" pos:column="44"/></expr_stmt>
            <comment type="block" pos:line="19" pos:column="13">/* Reset buffer positions for write mode */</comment>
            <expr_stmt><expr><name><name pos:line="20" pos:column="13">fp<pos:position pos:line="20" pos:column="15"/></name><operator pos:line="20" pos:column="15">-&gt;<pos:position pos:line="20" pos:column="20"/></operator><name pos:line="20" pos:column="17">bufpos<pos:position pos:line="20" pos:column="23"/></name></name> <operator pos:line="20" pos:column="24">=<pos:position pos:line="20" pos:column="25"/></operator> <name><name pos:line="20" pos:column="26">fp<pos:position pos:line="20" pos:column="28"/></name><operator pos:line="20" pos:column="28">-&gt;<pos:position pos:line="20" pos:column="33"/></operator><name pos:line="20" pos:column="30">direction<pos:position pos:line="20" pos:column="39"/></name></name> <operator pos:line="20" pos:column="40">=<pos:position pos:line="20" pos:column="41"/></operator> <name><name pos:line="20" pos:column="42">fp<pos:position pos:line="20" pos:column="44"/></name><operator pos:line="20" pos:column="44">-&gt;<pos:position pos:line="20" pos:column="49"/></operator><name pos:line="20" pos:column="46">dataRead<pos:position pos:line="20" pos:column="54"/></name></name> <operator pos:line="20" pos:column="55">=<pos:position pos:line="20" pos:column="56"/></operator> <literal type="number" pos:line="20" pos:column="57">0<pos:position pos:line="20" pos:column="58"/></literal></expr>;<pos:position pos:line="20" pos:column="59"/></expr_stmt>
        }<pos:position pos:line="21" pos:column="10"/></block></then></if>
        <if pos:line="22" pos:column="9">if <condition pos:line="22" pos:column="12">(<expr><name pos:line="22" pos:column="13">rc<pos:position pos:line="22" pos:column="15"/></name></expr>)<pos:position pos:line="22" pos:column="16"/></condition><then pos:line="22" pos:column="16"> <block pos:line="22" pos:column="17">{
            <return pos:line="23" pos:column="13">return <expr><name pos:line="23" pos:column="20">rc<pos:position pos:line="23" pos:column="22"/></name></expr>;<pos:position pos:line="23" pos:column="23"/></return>
        }<pos:position pos:line="24" pos:column="10"/></block></then></if>
        <expr_stmt><expr><call><name pos:line="25" pos:column="9">file_unlock<pos:position pos:line="25" pos:column="20"/></name><argument_list pos:line="25" pos:column="20">(<argument><expr><name pos:line="25" pos:column="21">fp<pos:position pos:line="25" pos:column="23"/></name></expr></argument>)<pos:position pos:line="25" pos:column="24"/></argument_list></call></expr>;<pos:position pos:line="25" pos:column="25"/></expr_stmt>
    }<pos:position pos:line="26" pos:column="6"/></block></then></if>
    <if pos:line="27" pos:column="5">if <condition pos:line="27" pos:column="8">(<expr><call><name pos:line="27" pos:column="9">ftruncate<pos:position pos:line="27" pos:column="18"/></name><argument_list pos:line="27" pos:column="18">(<argument><expr><name><name pos:line="27" pos:column="19">fp<pos:position pos:line="27" pos:column="21"/></name><operator pos:line="27" pos:column="21">-&gt;<pos:position pos:line="27" pos:column="26"/></operator><name pos:line="27" pos:column="23">filedes<pos:position pos:line="27" pos:column="30"/></name></name></expr></argument>, <argument><expr><name pos:line="27" pos:column="32">offset<pos:position pos:line="27" pos:column="38"/></name></expr></argument>)<pos:position pos:line="27" pos:column="39"/></argument_list></call> <operator pos:line="27" pos:column="40">==<pos:position pos:line="27" pos:column="42"/></operator> <operator pos:line="27" pos:column="43">-<pos:position pos:line="27" pos:column="44"/></operator><literal type="number" pos:line="27" pos:column="44">1<pos:position pos:line="27" pos:column="45"/></literal></expr>)<pos:position pos:line="27" pos:column="46"/></condition><then pos:line="27" pos:column="46"> <block pos:line="27" pos:column="47">{
        <return pos:line="28" pos:column="9">return <expr><name pos:line="28" pos:column="16">errno<pos:position pos:line="28" pos:column="21"/></name></expr>;<pos:position pos:line="28" pos:column="22"/></return>
    }<pos:position pos:line="29" pos:column="6"/></block></then></if>
    <return pos:line="30" pos:column="5">return <expr><call><name pos:line="30" pos:column="12">apr_file_seek<pos:position pos:line="30" pos:column="25"/></name><argument_list pos:line="30" pos:column="25">(<argument><expr><name pos:line="30" pos:column="26">fp<pos:position pos:line="30" pos:column="28"/></name></expr></argument>, <argument><expr><name pos:line="30" pos:column="30">APR_SET<pos:position pos:line="30" pos:column="37"/></name></expr></argument>, <argument><expr><operator pos:line="30" pos:column="39">&amp;<pos:position pos:line="30" pos:column="44"/></operator><name pos:line="30" pos:column="40">offset<pos:position pos:line="30" pos:column="46"/></name></expr></argument>)<pos:position pos:line="30" pos:column="47"/></argument_list></call></expr>;<pos:position pos:line="30" pos:column="48"/></return>
}<pos:position pos:line="31" pos:column="2"/></block></function></unit>

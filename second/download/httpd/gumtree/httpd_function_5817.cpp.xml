<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/httpd/gumtree/httpd_function_5817.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">apr_status_t<pos:position pos:line="1" pos:column="13"/></name></type> <name pos:line="1" pos:column="14">h2_request_end_headers<pos:position pos:line="1" pos:column="36"/></name><parameter_list pos:line="1" pos:column="36">(<parameter><decl><type><name pos:line="1" pos:column="37">h2_request<pos:position pos:line="1" pos:column="47"/></name> <modifier pos:line="1" pos:column="48">*<pos:position pos:line="1" pos:column="49"/></modifier></type><name pos:line="1" pos:column="49">req<pos:position pos:line="1" pos:column="52"/></name></decl></parameter>, <parameter><decl><type><name pos:line="1" pos:column="54">apr_pool_t<pos:position pos:line="1" pos:column="64"/></name> <modifier pos:line="1" pos:column="65">*<pos:position pos:line="1" pos:column="66"/></modifier></type><name pos:line="1" pos:column="66">pool<pos:position pos:line="1" pos:column="70"/></name></decl></parameter>, <parameter><decl><type><name pos:line="1" pos:column="72">int<pos:position pos:line="1" pos:column="75"/></name></type> <name pos:line="1" pos:column="76">eos<pos:position pos:line="1" pos:column="79"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="80"/></parameter_list>
<block pos:line="2" pos:column="1">{
    <decl_stmt><decl><type><specifier pos:line="3" pos:column="5">const<pos:position pos:line="3" pos:column="10"/></specifier> <name pos:line="3" pos:column="11">char<pos:position pos:line="3" pos:column="15"/></name> <modifier pos:line="3" pos:column="16">*<pos:position pos:line="3" pos:column="17"/></modifier></type><name pos:line="3" pos:column="17">s<pos:position pos:line="3" pos:column="18"/></name></decl>;<pos:position pos:line="3" pos:column="19"/></decl_stmt>
    
    <if pos:line="5" pos:column="5">if <condition pos:line="5" pos:column="8">(<expr><name><name pos:line="5" pos:column="9">req<pos:position pos:line="5" pos:column="12"/></name><operator pos:line="5" pos:column="12">-&gt;<pos:position pos:line="5" pos:column="17"/></operator><name pos:line="5" pos:column="14">eoh<pos:position pos:line="5" pos:column="17"/></name></name></expr>)<pos:position pos:line="5" pos:column="18"/></condition><then pos:line="5" pos:column="18"> <block pos:line="5" pos:column="19">{
        <return pos:line="6" pos:column="9">return <expr><name pos:line="6" pos:column="16">APR_EINVAL<pos:position pos:line="6" pos:column="26"/></name></expr>;<pos:position pos:line="6" pos:column="27"/></return>
    }<pos:position pos:line="7" pos:column="6"/></block></then></if>

    <comment type="block" pos:line="9" pos:column="5">/* Always set the "Host" header from :authority, see rfc7540, ch. 8.1.2.3 */</comment>
    <if pos:line="10" pos:column="5">if <condition pos:line="10" pos:column="8">(<expr><operator pos:line="10" pos:column="9">!<pos:position pos:line="10" pos:column="10"/></operator><name><name pos:line="10" pos:column="10">req<pos:position pos:line="10" pos:column="13"/></name><operator pos:line="10" pos:column="13">-&gt;<pos:position pos:line="10" pos:column="18"/></operator><name pos:line="10" pos:column="15">authority<pos:position pos:line="10" pos:column="24"/></name></name></expr>)<pos:position pos:line="10" pos:column="25"/></condition><then pos:line="10" pos:column="25"> <block pos:line="10" pos:column="26">{
        <return pos:line="11" pos:column="9">return <expr><name pos:line="11" pos:column="16">APR_BADARG<pos:position pos:line="11" pos:column="26"/></name></expr>;<pos:position pos:line="11" pos:column="27"/></return>
    }<pos:position pos:line="12" pos:column="6"/></block></then></if>
    <expr_stmt><expr><call><name pos:line="13" pos:column="5">apr_table_setn<pos:position pos:line="13" pos:column="19"/></name><argument_list pos:line="13" pos:column="19">(<argument><expr><name><name pos:line="13" pos:column="20">req<pos:position pos:line="13" pos:column="23"/></name><operator pos:line="13" pos:column="23">-&gt;<pos:position pos:line="13" pos:column="28"/></operator><name pos:line="13" pos:column="25">headers<pos:position pos:line="13" pos:column="32"/></name></name></expr></argument>, <argument><expr><literal type="string" pos:line="13" pos:column="34">"Host"<pos:position pos:line="13" pos:column="40"/></literal></expr></argument>, <argument><expr><name><name pos:line="13" pos:column="42">req<pos:position pos:line="13" pos:column="45"/></name><operator pos:line="13" pos:column="45">-&gt;<pos:position pos:line="13" pos:column="50"/></operator><name pos:line="13" pos:column="47">authority<pos:position pos:line="13" pos:column="56"/></name></name></expr></argument>)<pos:position pos:line="13" pos:column="57"/></argument_list></call></expr>;<pos:position pos:line="13" pos:column="58"/></expr_stmt>

    <expr_stmt><expr><name pos:line="15" pos:column="5">s<pos:position pos:line="15" pos:column="6"/></name> <operator pos:line="15" pos:column="7">=<pos:position pos:line="15" pos:column="8"/></operator> <call><name pos:line="15" pos:column="9">apr_table_get<pos:position pos:line="15" pos:column="22"/></name><argument_list pos:line="15" pos:column="22">(<argument><expr><name><name pos:line="15" pos:column="23">req<pos:position pos:line="15" pos:column="26"/></name><operator pos:line="15" pos:column="26">-&gt;<pos:position pos:line="15" pos:column="31"/></operator><name pos:line="15" pos:column="28">headers<pos:position pos:line="15" pos:column="35"/></name></name></expr></argument>, <argument><expr><literal type="string" pos:line="15" pos:column="37">"Content-Length"<pos:position pos:line="15" pos:column="53"/></literal></expr></argument>)<pos:position pos:line="15" pos:column="54"/></argument_list></call></expr>;<pos:position pos:line="15" pos:column="55"/></expr_stmt>
    <if pos:line="16" pos:column="5">if <condition pos:line="16" pos:column="8">(<expr><name pos:line="16" pos:column="9">s<pos:position pos:line="16" pos:column="10"/></name></expr>)<pos:position pos:line="16" pos:column="11"/></condition><then pos:line="16" pos:column="11"> <block pos:line="16" pos:column="12">{
        <if pos:line="17" pos:column="9">if <condition pos:line="17" pos:column="12">(<expr><call><name pos:line="17" pos:column="13">inspect_clen<pos:position pos:line="17" pos:column="25"/></name><argument_list pos:line="17" pos:column="25">(<argument><expr><name pos:line="17" pos:column="26">req<pos:position pos:line="17" pos:column="29"/></name></expr></argument>, <argument><expr><name pos:line="17" pos:column="31">s<pos:position pos:line="17" pos:column="32"/></name></expr></argument>)<pos:position pos:line="17" pos:column="33"/></argument_list></call> <operator pos:line="17" pos:column="34">!=<pos:position pos:line="17" pos:column="36"/></operator> <name pos:line="17" pos:column="37">APR_SUCCESS<pos:position pos:line="17" pos:column="48"/></name></expr>)<pos:position pos:line="17" pos:column="49"/></condition><then pos:line="17" pos:column="49"> <block pos:line="17" pos:column="50">{
            <expr_stmt><expr><call><name pos:line="18" pos:column="13">ap_log_perror<pos:position pos:line="18" pos:column="26"/></name><argument_list pos:line="18" pos:column="26">(<argument><expr><name pos:line="18" pos:column="27">APLOG_MARK<pos:position pos:line="18" pos:column="37"/></name></expr></argument>, <argument><expr><name pos:line="18" pos:column="39">APLOG_WARNING<pos:position pos:line="18" pos:column="52"/></name></expr></argument>, <argument><expr><name pos:line="18" pos:column="54">APR_EINVAL<pos:position pos:line="18" pos:column="64"/></name></expr></argument>, <argument><expr><name pos:line="18" pos:column="66">pool<pos:position pos:line="18" pos:column="70"/></name></expr></argument>,
                          <argument><expr><call><name pos:line="19" pos:column="27">APLOGNO<pos:position pos:line="19" pos:column="34"/></name><argument_list pos:line="19" pos:column="34">(<argument><expr><literal type="number" pos:line="19" pos:column="35">02959<pos:position pos:line="19" pos:column="40"/></literal></expr></argument>)<pos:position pos:line="19" pos:column="41"/></argument_list></call> 
                          <literal type="string" pos:line="20" pos:column="27">"h2_request(%d): content-length value not parsed: %s"<pos:position pos:line="20" pos:column="80"/></literal></expr></argument>,
                          <argument><expr><name><name pos:line="21" pos:column="27">req<pos:position pos:line="21" pos:column="30"/></name><operator pos:line="21" pos:column="30">-&gt;<pos:position pos:line="21" pos:column="35"/></operator><name pos:line="21" pos:column="32">id<pos:position pos:line="21" pos:column="34"/></name></name></expr></argument>, <argument><expr><name pos:line="21" pos:column="36">s<pos:position pos:line="21" pos:column="37"/></name></expr></argument>)<pos:position pos:line="21" pos:column="38"/></argument_list></call></expr>;<pos:position pos:line="21" pos:column="39"/></expr_stmt>
            <return pos:line="22" pos:column="13">return <expr><name pos:line="22" pos:column="20">APR_EINVAL<pos:position pos:line="22" pos:column="30"/></name></expr>;<pos:position pos:line="22" pos:column="31"/></return>
        }<pos:position pos:line="23" pos:column="10"/></block></then></if>
    }<pos:position pos:line="24" pos:column="6"/></block></then>
    <else pos:line="25" pos:column="5">else <block pos:line="25" pos:column="10">{
        <comment type="block" pos:line="26" pos:column="9">/* no content-length given */</comment>
        <expr_stmt><expr><name><name pos:line="27" pos:column="9">req<pos:position pos:line="27" pos:column="12"/></name><operator pos:line="27" pos:column="12">-&gt;<pos:position pos:line="27" pos:column="17"/></operator><name pos:line="27" pos:column="14">content_length<pos:position pos:line="27" pos:column="28"/></name></name> <operator pos:line="27" pos:column="29">=<pos:position pos:line="27" pos:column="30"/></operator> <operator pos:line="27" pos:column="31">-<pos:position pos:line="27" pos:column="32"/></operator><literal type="number" pos:line="27" pos:column="32">1<pos:position pos:line="27" pos:column="33"/></literal></expr>;<pos:position pos:line="27" pos:column="34"/></expr_stmt>
        <if pos:line="28" pos:column="9">if <condition pos:line="28" pos:column="12">(<expr><operator pos:line="28" pos:column="13">!<pos:position pos:line="28" pos:column="14"/></operator><name pos:line="28" pos:column="14">eos<pos:position pos:line="28" pos:column="17"/></name></expr>)<pos:position pos:line="28" pos:column="18"/></condition><then pos:line="28" pos:column="18"> <block pos:line="28" pos:column="19">{
            <comment type="block" pos:line="29" pos:column="13">/* We have not seen a content-length and have no eos,
             * simulate a chunked encoding for our HTTP/1.1 infrastructure,
             * in case we have "H2SerializeHeaders on" here
             */</comment>
            <expr_stmt><expr><name><name pos:line="33" pos:column="13">req<pos:position pos:line="33" pos:column="16"/></name><operator pos:line="33" pos:column="16">-&gt;<pos:position pos:line="33" pos:column="21"/></operator><name pos:line="33" pos:column="18">chunked<pos:position pos:line="33" pos:column="25"/></name></name> <operator pos:line="33" pos:column="26">=<pos:position pos:line="33" pos:column="27"/></operator> <literal type="number" pos:line="33" pos:column="28">1<pos:position pos:line="33" pos:column="29"/></literal></expr>;<pos:position pos:line="33" pos:column="30"/></expr_stmt>
            <expr_stmt><expr><call><name pos:line="34" pos:column="13">apr_table_mergen<pos:position pos:line="34" pos:column="29"/></name><argument_list pos:line="34" pos:column="29">(<argument><expr><name><name pos:line="34" pos:column="30">req<pos:position pos:line="34" pos:column="33"/></name><operator pos:line="34" pos:column="33">-&gt;<pos:position pos:line="34" pos:column="38"/></operator><name pos:line="34" pos:column="35">headers<pos:position pos:line="34" pos:column="42"/></name></name></expr></argument>, <argument><expr><literal type="string" pos:line="34" pos:column="44">"Transfer-Encoding"<pos:position pos:line="34" pos:column="63"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="34" pos:column="65">"chunked"<pos:position pos:line="34" pos:column="74"/></literal></expr></argument>)<pos:position pos:line="34" pos:column="75"/></argument_list></call></expr>;<pos:position pos:line="34" pos:column="76"/></expr_stmt>
        }<pos:position pos:line="35" pos:column="10"/></block></then>
        <elseif pos:line="36" pos:column="9">else <if pos:line="36" pos:column="14">if <condition pos:line="36" pos:column="17">(<expr><call><name pos:line="36" pos:column="18">apr_table_get<pos:position pos:line="36" pos:column="31"/></name><argument_list pos:line="36" pos:column="31">(<argument><expr><name><name pos:line="36" pos:column="32">req<pos:position pos:line="36" pos:column="35"/></name><operator pos:line="36" pos:column="35">-&gt;<pos:position pos:line="36" pos:column="40"/></operator><name pos:line="36" pos:column="37">headers<pos:position pos:line="36" pos:column="44"/></name></name></expr></argument>, <argument><expr><literal type="string" pos:line="36" pos:column="46">"Content-Type"<pos:position pos:line="36" pos:column="60"/></literal></expr></argument>)<pos:position pos:line="36" pos:column="61"/></argument_list></call></expr>)<pos:position pos:line="36" pos:column="62"/></condition><then pos:line="36" pos:column="62"> <block pos:line="36" pos:column="63">{
            <comment type="block" pos:line="37" pos:column="13">/* If we have a content-type, but already see eos, no more
             * data will come. Signal a zero content length explicitly.
             */</comment>
            <expr_stmt><expr><call><name pos:line="40" pos:column="13">apr_table_setn<pos:position pos:line="40" pos:column="27"/></name><argument_list pos:line="40" pos:column="27">(<argument><expr><name><name pos:line="40" pos:column="28">req<pos:position pos:line="40" pos:column="31"/></name><operator pos:line="40" pos:column="31">-&gt;<pos:position pos:line="40" pos:column="36"/></operator><name pos:line="40" pos:column="33">headers<pos:position pos:line="40" pos:column="40"/></name></name></expr></argument>, <argument><expr><literal type="string" pos:line="40" pos:column="42">"Content-Length"<pos:position pos:line="40" pos:column="58"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="40" pos:column="60">"0"<pos:position pos:line="40" pos:column="63"/></literal></expr></argument>)<pos:position pos:line="40" pos:column="64"/></argument_list></call></expr>;<pos:position pos:line="40" pos:column="65"/></expr_stmt>
        }<pos:position pos:line="41" pos:column="10"/></block></then></if></elseif></if>
    }<pos:position pos:line="42" pos:column="6"/></block></else></if>

    <expr_stmt><expr><name><name pos:line="44" pos:column="5">req<pos:position pos:line="44" pos:column="8"/></name><operator pos:line="44" pos:column="8">-&gt;<pos:position pos:line="44" pos:column="13"/></operator><name pos:line="44" pos:column="10">eoh<pos:position pos:line="44" pos:column="13"/></name></name> <operator pos:line="44" pos:column="14">=<pos:position pos:line="44" pos:column="15"/></operator> <literal type="number" pos:line="44" pos:column="16">1<pos:position pos:line="44" pos:column="17"/></literal></expr>;<pos:position pos:line="44" pos:column="18"/></expr_stmt>
    
    <comment type="block" pos:line="46" pos:column="5">/* In the presence of trailers, force behaviour of chunked encoding */</comment>
    <expr_stmt><expr><name pos:line="47" pos:column="5">s<pos:position pos:line="47" pos:column="6"/></name> <operator pos:line="47" pos:column="7">=<pos:position pos:line="47" pos:column="8"/></operator> <call><name pos:line="47" pos:column="9">apr_table_get<pos:position pos:line="47" pos:column="22"/></name><argument_list pos:line="47" pos:column="22">(<argument><expr><name><name pos:line="47" pos:column="23">req<pos:position pos:line="47" pos:column="26"/></name><operator pos:line="47" pos:column="26">-&gt;<pos:position pos:line="47" pos:column="31"/></operator><name pos:line="47" pos:column="28">headers<pos:position pos:line="47" pos:column="35"/></name></name></expr></argument>, <argument><expr><literal type="string" pos:line="47" pos:column="37">"Trailer"<pos:position pos:line="47" pos:column="46"/></literal></expr></argument>)<pos:position pos:line="47" pos:column="47"/></argument_list></call></expr>;<pos:position pos:line="47" pos:column="48"/></expr_stmt>
    <if pos:line="48" pos:column="5">if <condition pos:line="48" pos:column="8">(<expr><name pos:line="48" pos:column="9">s<pos:position pos:line="48" pos:column="10"/></name> <operator pos:line="48" pos:column="11">&amp;&amp;<pos:position pos:line="48" pos:column="21"/></operator> <name><name pos:line="48" pos:column="14">s<pos:position pos:line="48" pos:column="15"/></name><index pos:line="48" pos:column="15">[<expr><literal type="number" pos:line="48" pos:column="16">0<pos:position pos:line="48" pos:column="17"/></literal></expr>]<pos:position pos:line="48" pos:column="18"/></index></name></expr>)<pos:position pos:line="48" pos:column="19"/></condition><then pos:line="48" pos:column="19"> <block pos:line="48" pos:column="20">{
        <expr_stmt><expr><name><name pos:line="49" pos:column="9">req<pos:position pos:line="49" pos:column="12"/></name><operator pos:line="49" pos:column="12">-&gt;<pos:position pos:line="49" pos:column="17"/></operator><name pos:line="49" pos:column="14">trailers<pos:position pos:line="49" pos:column="22"/></name></name> <operator pos:line="49" pos:column="23">=<pos:position pos:line="49" pos:column="24"/></operator> <call><name pos:line="49" pos:column="25">apr_table_make<pos:position pos:line="49" pos:column="39"/></name><argument_list pos:line="49" pos:column="39">(<argument><expr><name pos:line="49" pos:column="40">pool<pos:position pos:line="49" pos:column="44"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="49" pos:column="46">5<pos:position pos:line="49" pos:column="47"/></literal></expr></argument>)<pos:position pos:line="49" pos:column="48"/></argument_list></call></expr>;<pos:position pos:line="49" pos:column="49"/></expr_stmt>
        <if pos:line="50" pos:column="9">if <condition pos:line="50" pos:column="12">(<expr><operator pos:line="50" pos:column="13">!<pos:position pos:line="50" pos:column="14"/></operator><name><name pos:line="50" pos:column="14">req<pos:position pos:line="50" pos:column="17"/></name><operator pos:line="50" pos:column="17">-&gt;<pos:position pos:line="50" pos:column="22"/></operator><name pos:line="50" pos:column="19">chunked<pos:position pos:line="50" pos:column="26"/></name></name></expr>)<pos:position pos:line="50" pos:column="27"/></condition><then pos:line="50" pos:column="27"> <block pos:line="50" pos:column="28">{
            <expr_stmt><expr><name><name pos:line="51" pos:column="13">req<pos:position pos:line="51" pos:column="16"/></name><operator pos:line="51" pos:column="16">-&gt;<pos:position pos:line="51" pos:column="21"/></operator><name pos:line="51" pos:column="18">chunked<pos:position pos:line="51" pos:column="25"/></name></name> <operator pos:line="51" pos:column="26">=<pos:position pos:line="51" pos:column="27"/></operator> <literal type="number" pos:line="51" pos:column="28">1<pos:position pos:line="51" pos:column="29"/></literal></expr>;<pos:position pos:line="51" pos:column="30"/></expr_stmt>
            <expr_stmt><expr><call><name pos:line="52" pos:column="13">apr_table_mergen<pos:position pos:line="52" pos:column="29"/></name><argument_list pos:line="52" pos:column="29">(<argument><expr><name><name pos:line="52" pos:column="30">req<pos:position pos:line="52" pos:column="33"/></name><operator pos:line="52" pos:column="33">-&gt;<pos:position pos:line="52" pos:column="38"/></operator><name pos:line="52" pos:column="35">headers<pos:position pos:line="52" pos:column="42"/></name></name></expr></argument>, <argument><expr><literal type="string" pos:line="52" pos:column="44">"Transfer-Encoding"<pos:position pos:line="52" pos:column="63"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="52" pos:column="65">"chunked"<pos:position pos:line="52" pos:column="74"/></literal></expr></argument>)<pos:position pos:line="52" pos:column="75"/></argument_list></call></expr>;<pos:position pos:line="52" pos:column="76"/></expr_stmt>
        }<pos:position pos:line="53" pos:column="10"/></block></then></if>
    }<pos:position pos:line="54" pos:column="6"/></block></then></if>
    
    <return pos:line="56" pos:column="5">return <expr><name pos:line="56" pos:column="12">APR_SUCCESS<pos:position pos:line="56" pos:column="23"/></name></expr>;<pos:position pos:line="56" pos:column="24"/></return>
}<pos:position pos:line="57" pos:column="2"/></block></function></unit>

<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/httpd/gumtree/httpd_repos_function_2845_httpd-2.2.34.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">void<pos:position pos:line="1" pos:column="12"/></name></type> <name pos:line="1" pos:column="13">odbc_init<pos:position pos:line="1" pos:column="22"/></name><parameter_list pos:line="1" pos:column="22">(<parameter><decl><type><name pos:line="1" pos:column="23">apr_pool_t<pos:position pos:line="1" pos:column="33"/></name> <modifier pos:line="1" pos:column="34">*<pos:position pos:line="1" pos:column="35"/></modifier></type><name pos:line="1" pos:column="35">pool<pos:position pos:line="1" pos:column="39"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="40"/></parameter_list>
<block pos:line="2" pos:column="1">{
    <decl_stmt><decl><type><name pos:line="3" pos:column="5">SQLRETURN<pos:position pos:line="3" pos:column="14"/></name></type> <name pos:line="3" pos:column="15">rc<pos:position pos:line="3" pos:column="17"/></name></decl>;<pos:position pos:line="3" pos:column="18"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="4" pos:column="5">char<pos:position pos:line="4" pos:column="9"/></name> <modifier pos:line="4" pos:column="10">*<pos:position pos:line="4" pos:column="11"/></modifier></type><name pos:line="4" pos:column="11">step<pos:position pos:line="4" pos:column="15"/></name></decl>;<pos:position pos:line="4" pos:column="16"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="5" pos:column="5">apr_version_t<pos:position pos:line="5" pos:column="18"/></name></type> <name pos:line="5" pos:column="19">apuver<pos:position pos:line="5" pos:column="25"/></name></decl>;<pos:position pos:line="5" pos:column="26"/></decl_stmt>
    
    <expr_stmt><expr><call><name pos:line="7" pos:column="5">apu_version<pos:position pos:line="7" pos:column="16"/></name><argument_list pos:line="7" pos:column="16">(<argument><expr><operator pos:line="7" pos:column="17">&amp;<pos:position pos:line="7" pos:column="22"/></operator><name pos:line="7" pos:column="18">apuver<pos:position pos:line="7" pos:column="24"/></name></expr></argument>)<pos:position pos:line="7" pos:column="25"/></argument_list></call></expr>;<pos:position pos:line="7" pos:column="26"/></expr_stmt>
    <if pos:line="8" pos:column="5">if <condition pos:line="8" pos:column="8">(<expr><name><name pos:line="8" pos:column="9">apuver<pos:position pos:line="8" pos:column="15"/></name><operator pos:line="8" pos:column="15">.<pos:position pos:line="8" pos:column="16"/></operator><name pos:line="8" pos:column="16">major<pos:position pos:line="8" pos:column="21"/></name></name> <operator pos:line="8" pos:column="22">!=<pos:position pos:line="8" pos:column="24"/></operator> <name pos:line="8" pos:column="25">DRIVER_APU_VERSION_MAJOR<pos:position pos:line="8" pos:column="49"/></name> 
        <operator pos:line="9" pos:column="9">||<pos:position pos:line="9" pos:column="11"/></operator> <name><name pos:line="9" pos:column="12">apuver<pos:position pos:line="9" pos:column="18"/></name><operator pos:line="9" pos:column="18">.<pos:position pos:line="9" pos:column="19"/></operator><name pos:line="9" pos:column="19">minor<pos:position pos:line="9" pos:column="24"/></name></name> <operator pos:line="9" pos:column="25">!=<pos:position pos:line="9" pos:column="27"/></operator> <name pos:line="9" pos:column="28">DRIVER_APU_VERSION_MINOR<pos:position pos:line="9" pos:column="52"/></name></expr>)<pos:position pos:line="9" pos:column="53"/></condition><then pos:line="9" pos:column="53"> <block pos:line="9" pos:column="54">{
            <decl_stmt><decl><type><name pos:line="10" pos:column="13">apr_file_t<pos:position pos:line="10" pos:column="23"/></name> <modifier pos:line="10" pos:column="24">*<pos:position pos:line="10" pos:column="25"/></modifier></type><name pos:line="10" pos:column="25">se<pos:position pos:line="10" pos:column="27"/></name></decl>;<pos:position pos:line="10" pos:column="28"/></decl_stmt>

            <expr_stmt><expr><call><name pos:line="12" pos:column="13">apr_file_open_stderr<pos:position pos:line="12" pos:column="33"/></name><argument_list pos:line="12" pos:column="33">(<argument><expr><operator pos:line="12" pos:column="34">&amp;<pos:position pos:line="12" pos:column="39"/></operator><name pos:line="12" pos:column="35">se<pos:position pos:line="12" pos:column="37"/></name></expr></argument>, <argument><expr><name pos:line="12" pos:column="39">pool<pos:position pos:line="12" pos:column="43"/></name></expr></argument>)<pos:position pos:line="12" pos:column="44"/></argument_list></call></expr>;<pos:position pos:line="12" pos:column="45"/></expr_stmt>
            <expr_stmt><expr><call><name pos:line="13" pos:column="13">apr_file_printf<pos:position pos:line="13" pos:column="28"/></name><argument_list pos:line="13" pos:column="28">(<argument><expr><name pos:line="13" pos:column="29">se<pos:position pos:line="13" pos:column="31"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="13" pos:column="33">"Incorrect "<pos:position pos:line="13" pos:column="45"/></literal> <name pos:line="13" pos:column="46">ODBC_DRIVER_STRING<pos:position pos:line="13" pos:column="64"/></name> <literal type="string" pos:line="13" pos:column="65">" dbd driver version\n"<pos:position pos:line="13" pos:column="88"/></literal>
                <literal type="string" pos:line="14" pos:column="17">"Attempt to load APU version %d.%d driver with APU version %d.%d\n"<pos:position pos:line="14" pos:column="84"/></literal></expr></argument>,
                <argument><expr><name pos:line="15" pos:column="17">DRIVER_APU_VERSION_MAJOR<pos:position pos:line="15" pos:column="41"/></name></expr></argument>, <argument><expr><name pos:line="15" pos:column="43">DRIVER_APU_VERSION_MINOR<pos:position pos:line="15" pos:column="67"/></name></expr></argument>, 
                <argument><expr><name><name pos:line="16" pos:column="17">apuver<pos:position pos:line="16" pos:column="23"/></name><operator pos:line="16" pos:column="23">.<pos:position pos:line="16" pos:column="24"/></operator><name pos:line="16" pos:column="24">major<pos:position pos:line="16" pos:column="29"/></name></name></expr></argument>, <argument><expr><name><name pos:line="16" pos:column="31">apuver<pos:position pos:line="16" pos:column="37"/></name><operator pos:line="16" pos:column="37">.<pos:position pos:line="16" pos:column="38"/></operator><name pos:line="16" pos:column="38">minor<pos:position pos:line="16" pos:column="43"/></name></name></expr></argument>)<pos:position pos:line="16" pos:column="44"/></argument_list></call></expr>;<pos:position pos:line="16" pos:column="45"/></expr_stmt>
        <expr_stmt><expr><call><name pos:line="17" pos:column="9">abort<pos:position pos:line="17" pos:column="14"/></name><argument_list pos:line="17" pos:column="14">()<pos:position pos:line="17" pos:column="16"/></argument_list></call></expr>;<pos:position pos:line="17" pos:column="17"/></expr_stmt>
    }<pos:position pos:line="18" pos:column="6"/></block></then></if>

    <if pos:line="20" pos:column="5">if <condition pos:line="20" pos:column="8">(<expr><name pos:line="20" pos:column="9">henv<pos:position pos:line="20" pos:column="13"/></name></expr>)<pos:position pos:line="20" pos:column="14"/></condition><then pos:line="20" pos:column="14"> 
        <block type="pseudo"><return pos:line="21" pos:column="9">return;<pos:position pos:line="21" pos:column="16"/></return></block></then></if>

    <expr_stmt><expr><name pos:line="23" pos:column="5">step<pos:position pos:line="23" pos:column="9"/></name> <operator pos:line="23" pos:column="10">=<pos:position pos:line="23" pos:column="11"/></operator> <literal type="string" pos:line="23" pos:column="12">"SQLAllocHandle (SQL_HANDLE_ENV)"<pos:position pos:line="23" pos:column="45"/></literal></expr>;<pos:position pos:line="23" pos:column="46"/></expr_stmt>
    <expr_stmt><expr><name pos:line="24" pos:column="5">rc<pos:position pos:line="24" pos:column="7"/></name> <operator pos:line="24" pos:column="8">=<pos:position pos:line="24" pos:column="9"/></operator> <call><name pos:line="24" pos:column="10">SQLAllocHandle<pos:position pos:line="24" pos:column="24"/></name><argument_list pos:line="24" pos:column="24">(<argument><expr><name pos:line="24" pos:column="25">SQL_HANDLE_ENV<pos:position pos:line="24" pos:column="39"/></name></expr></argument>, <argument><expr><name pos:line="24" pos:column="41">SQL_NULL_HANDLE<pos:position pos:line="24" pos:column="56"/></name></expr></argument>, <argument><expr><operator pos:line="24" pos:column="58">&amp;<pos:position pos:line="24" pos:column="63"/></operator><name pos:line="24" pos:column="59">henv<pos:position pos:line="24" pos:column="63"/></name></expr></argument>)<pos:position pos:line="24" pos:column="64"/></argument_list></call></expr>;<pos:position pos:line="24" pos:column="65"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="25" pos:column="5">apr_pool_cleanup_register<pos:position pos:line="25" pos:column="30"/></name><argument_list pos:line="25" pos:column="30">(<argument><expr><name pos:line="25" pos:column="31">pool<pos:position pos:line="25" pos:column="35"/></name></expr></argument>, <argument><expr><name pos:line="25" pos:column="37">henv<pos:position pos:line="25" pos:column="41"/></name></expr></argument>, <argument><expr><name pos:line="25" pos:column="43">odbc_close_env<pos:position pos:line="25" pos:column="57"/></name></expr></argument>, <argument><expr><name pos:line="25" pos:column="59">apr_pool_cleanup_null<pos:position pos:line="25" pos:column="80"/></name></expr></argument>)<pos:position pos:line="25" pos:column="81"/></argument_list></call></expr>;<pos:position pos:line="25" pos:column="82"/></expr_stmt>
    <if pos:line="26" pos:column="5">if <condition pos:line="26" pos:column="8">(<expr><call><name pos:line="26" pos:column="9">SQL_SUCCEEDED<pos:position pos:line="26" pos:column="22"/></name><argument_list pos:line="26" pos:column="22">(<argument><expr><name pos:line="26" pos:column="23">rc<pos:position pos:line="26" pos:column="25"/></name></expr></argument>)<pos:position pos:line="26" pos:column="26"/></argument_list></call></expr>)<pos:position pos:line="26" pos:column="27"/></condition><then pos:line="26" pos:column="27"> <block pos:line="26" pos:column="28">{
        <expr_stmt><expr><name pos:line="27" pos:column="9">step<pos:position pos:line="27" pos:column="13"/></name> <operator pos:line="27" pos:column="14">=<pos:position pos:line="27" pos:column="15"/></operator> <literal type="string" pos:line="27" pos:column="16">"SQLSetEnvAttr"<pos:position pos:line="27" pos:column="31"/></literal></expr>;<pos:position pos:line="27" pos:column="32"/></expr_stmt>
        <expr_stmt><expr><name pos:line="28" pos:column="9">rc<pos:position pos:line="28" pos:column="11"/></name> <operator pos:line="28" pos:column="12">=<pos:position pos:line="28" pos:column="13"/></operator> <call><name pos:line="28" pos:column="14">SQLSetEnvAttr<pos:position pos:line="28" pos:column="27"/></name><argument_list pos:line="28" pos:column="27">(<argument><expr><name pos:line="28" pos:column="28">henv<pos:position pos:line="28" pos:column="32"/></name></expr></argument>,<argument><expr><name pos:line="28" pos:column="33">SQL_ATTR_ODBC_VERSION<pos:position pos:line="28" pos:column="54"/></name></expr></argument>,
                          <argument><expr><operator pos:line="29" pos:column="27">(<pos:position pos:line="29" pos:column="28"/></operator><name pos:line="29" pos:column="28">SQLPOINTER<pos:position pos:line="29" pos:column="38"/></name><operator pos:line="29" pos:column="38">)<pos:position pos:line="29" pos:column="39"/></operator><name pos:line="29" pos:column="39">SQL_OV_ODBC3<pos:position pos:line="29" pos:column="51"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="29" pos:column="53">0<pos:position pos:line="29" pos:column="54"/></literal></expr></argument>)<pos:position pos:line="29" pos:column="55"/></argument_list></call></expr>;<pos:position pos:line="29" pos:column="56"/></expr_stmt>
    }<pos:position pos:line="30" pos:column="6"/></block></then>
    <else pos:line="31" pos:column="5">else <block pos:line="31" pos:column="10">{
        <decl_stmt><decl><type><name pos:line="32" pos:column="9">apr_dbd_t<pos:position pos:line="32" pos:column="18"/></name></type> <name pos:line="32" pos:column="19">tmp_dbc<pos:position pos:line="32" pos:column="26"/></name></decl>;<pos:position pos:line="32" pos:column="27"/></decl_stmt>
        <decl_stmt><decl><type><name pos:line="33" pos:column="9">SQLHANDLE<pos:position pos:line="33" pos:column="18"/></name></type> <name pos:line="33" pos:column="19">err_h<pos:position pos:line="33" pos:column="24"/></name> <init pos:line="33" pos:column="25">= <expr><name pos:line="33" pos:column="27">henv<pos:position pos:line="33" pos:column="31"/></name></expr></init></decl>;<pos:position pos:line="33" pos:column="32"/></decl_stmt>

        <expr_stmt><expr><name><name pos:line="35" pos:column="9">tmp_dbc<pos:position pos:line="35" pos:column="16"/></name><operator pos:line="35" pos:column="16">.<pos:position pos:line="35" pos:column="17"/></operator><name pos:line="35" pos:column="17">pool<pos:position pos:line="35" pos:column="21"/></name></name> <operator pos:line="35" pos:column="22">=<pos:position pos:line="35" pos:column="23"/></operator> <name pos:line="35" pos:column="24">pool<pos:position pos:line="35" pos:column="28"/></name></expr>;<pos:position pos:line="35" pos:column="29"/></expr_stmt>
        <expr_stmt><expr><name><name pos:line="36" pos:column="9">tmp_dbc<pos:position pos:line="36" pos:column="16"/></name><operator pos:line="36" pos:column="16">.<pos:position pos:line="36" pos:column="17"/></operator><name pos:line="36" pos:column="17">dbname<pos:position pos:line="36" pos:column="23"/></name></name> <operator pos:line="36" pos:column="24">=<pos:position pos:line="36" pos:column="25"/></operator> <name pos:line="36" pos:column="26">NULL<pos:position pos:line="36" pos:column="30"/></name></expr>;<pos:position pos:line="36" pos:column="31"/></expr_stmt>
        <expr_stmt><expr><call><name pos:line="37" pos:column="9">CHECK_ERROR<pos:position pos:line="37" pos:column="20"/></name><argument_list pos:line="37" pos:column="20">(<argument><expr><operator pos:line="37" pos:column="21">&amp;<pos:position pos:line="37" pos:column="26"/></operator><name pos:line="37" pos:column="22">tmp_dbc<pos:position pos:line="37" pos:column="29"/></name></expr></argument>, <argument><expr><name pos:line="37" pos:column="31">step<pos:position pos:line="37" pos:column="35"/></name></expr></argument>, <argument><expr><name pos:line="37" pos:column="37">rc<pos:position pos:line="37" pos:column="39"/></name></expr></argument>, <argument><expr><name pos:line="37" pos:column="41">SQL_HANDLE_ENV<pos:position pos:line="37" pos:column="55"/></name></expr></argument>, <argument><expr><name pos:line="37" pos:column="57">err_h<pos:position pos:line="37" pos:column="62"/></name></expr></argument>)<pos:position pos:line="37" pos:column="63"/></argument_list></call></expr>;<pos:position pos:line="37" pos:column="64"/></expr_stmt>
    }<pos:position pos:line="38" pos:column="6"/></block></else></if>
}<pos:position pos:line="39" pos:column="2"/></block></function></unit>

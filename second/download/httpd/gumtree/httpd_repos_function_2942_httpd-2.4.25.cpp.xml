<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/httpd/gumtree/httpd_repos_function_2942_httpd-2.4.25.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">apr_status_t<pos:position pos:line="1" pos:column="20"/></name></type> <name pos:line="1" pos:column="21">sed_request_filter<pos:position pos:line="1" pos:column="39"/></name><parameter_list pos:line="1" pos:column="39">(<parameter><decl><type><name pos:line="1" pos:column="40">ap_filter_t<pos:position pos:line="1" pos:column="51"/></name> <modifier pos:line="1" pos:column="52">*<pos:position pos:line="1" pos:column="53"/></modifier></type><name pos:line="1" pos:column="53">f<pos:position pos:line="1" pos:column="54"/></name></decl></parameter>,
                                       <parameter><decl><type><name pos:line="2" pos:column="40">apr_bucket_brigade<pos:position pos:line="2" pos:column="58"/></name> <modifier pos:line="2" pos:column="59">*<pos:position pos:line="2" pos:column="60"/></modifier></type><name pos:line="2" pos:column="60">bb<pos:position pos:line="2" pos:column="62"/></name></decl></parameter>,
                                       <parameter><decl><type><name pos:line="3" pos:column="40">ap_input_mode_t<pos:position pos:line="3" pos:column="55"/></name></type> <name pos:line="3" pos:column="56">mode<pos:position pos:line="3" pos:column="60"/></name></decl></parameter>,
                                       <parameter><decl><type><name pos:line="4" pos:column="40">apr_read_type_e<pos:position pos:line="4" pos:column="55"/></name></type> <name pos:line="4" pos:column="56">block<pos:position pos:line="4" pos:column="61"/></name></decl></parameter>,
                                       <parameter><decl><type><name pos:line="5" pos:column="40">apr_off_t<pos:position pos:line="5" pos:column="49"/></name></type> <name pos:line="5" pos:column="50">readbytes<pos:position pos:line="5" pos:column="59"/></name></decl></parameter>)<pos:position pos:line="5" pos:column="60"/></parameter_list>
<block pos:line="6" pos:column="1">{
    <decl_stmt><decl><type><name pos:line="7" pos:column="5">sed_config<pos:position pos:line="7" pos:column="15"/></name> <modifier pos:line="7" pos:column="16">*<pos:position pos:line="7" pos:column="17"/></modifier></type><name pos:line="7" pos:column="17">cfg<pos:position pos:line="7" pos:column="20"/></name> <init pos:line="7" pos:column="21">= <expr><call><name pos:line="7" pos:column="23">ap_get_module_config<pos:position pos:line="7" pos:column="43"/></name><argument_list pos:line="7" pos:column="43">(<argument><expr><name><name pos:line="7" pos:column="44">f<pos:position pos:line="7" pos:column="45"/></name><operator pos:line="7" pos:column="45">-&gt;<pos:position pos:line="7" pos:column="50"/></operator><name pos:line="7" pos:column="47">r<pos:position pos:line="7" pos:column="48"/></name><operator pos:line="7" pos:column="48">-&gt;<pos:position pos:line="7" pos:column="53"/></operator><name pos:line="7" pos:column="50">per_dir_config<pos:position pos:line="7" pos:column="64"/></name></name></expr></argument>,
                                           <argument><expr><operator pos:line="8" pos:column="44">&amp;<pos:position pos:line="8" pos:column="49"/></operator><name pos:line="8" pos:column="45">sed_module<pos:position pos:line="8" pos:column="55"/></name></expr></argument>)<pos:position pos:line="8" pos:column="56"/></argument_list></call></expr></init></decl>;<pos:position pos:line="8" pos:column="57"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="9" pos:column="5">sed_filter_ctxt<pos:position pos:line="9" pos:column="20"/></name> <modifier pos:line="9" pos:column="21">*<pos:position pos:line="9" pos:column="22"/></modifier></type><name pos:line="9" pos:column="22">ctx<pos:position pos:line="9" pos:column="25"/></name> <init pos:line="9" pos:column="26">= <expr><name><name pos:line="9" pos:column="28">f<pos:position pos:line="9" pos:column="29"/></name><operator pos:line="9" pos:column="29">-&gt;<pos:position pos:line="9" pos:column="34"/></operator><name pos:line="9" pos:column="31">ctx<pos:position pos:line="9" pos:column="34"/></name></name></expr></init></decl>;<pos:position pos:line="9" pos:column="35"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="10" pos:column="5">apr_status_t<pos:position pos:line="10" pos:column="17"/></name></type> <name pos:line="10" pos:column="18">status<pos:position pos:line="10" pos:column="24"/></name></decl>;<pos:position pos:line="10" pos:column="25"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="11" pos:column="5">apr_bucket_brigade<pos:position pos:line="11" pos:column="23"/></name> <modifier pos:line="11" pos:column="24">*<pos:position pos:line="11" pos:column="25"/></modifier></type><name pos:line="11" pos:column="25">bbinp<pos:position pos:line="11" pos:column="30"/></name></decl>;<pos:position pos:line="11" pos:column="31"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="12" pos:column="5">sed_expr_config<pos:position pos:line="12" pos:column="20"/></name> <modifier pos:line="12" pos:column="21">*<pos:position pos:line="12" pos:column="22"/></modifier></type><name pos:line="12" pos:column="22">sed_cfg<pos:position pos:line="12" pos:column="29"/></name> <init pos:line="12" pos:column="30">= <expr><operator pos:line="12" pos:column="32">&amp;<pos:position pos:line="12" pos:column="37"/></operator><name><name pos:line="12" pos:column="33">cfg<pos:position pos:line="12" pos:column="36"/></name><operator pos:line="12" pos:column="36">-&gt;<pos:position pos:line="12" pos:column="41"/></operator><name pos:line="12" pos:column="38">input<pos:position pos:line="12" pos:column="43"/></name></name></expr></init></decl>;<pos:position pos:line="12" pos:column="44"/></decl_stmt>

    <if pos:line="14" pos:column="5">if <condition pos:line="14" pos:column="8">(<expr><name pos:line="14" pos:column="9">mode<pos:position pos:line="14" pos:column="13"/></name> <operator pos:line="14" pos:column="14">!=<pos:position pos:line="14" pos:column="16"/></operator> <name pos:line="14" pos:column="17">AP_MODE_READBYTES<pos:position pos:line="14" pos:column="34"/></name></expr>)<pos:position pos:line="14" pos:column="35"/></condition><then pos:line="14" pos:column="35"> <block pos:line="14" pos:column="36">{
        <return pos:line="15" pos:column="9">return <expr><call><name pos:line="15" pos:column="16">ap_get_brigade<pos:position pos:line="15" pos:column="30"/></name><argument_list pos:line="15" pos:column="30">(<argument><expr><name><name pos:line="15" pos:column="31">f<pos:position pos:line="15" pos:column="32"/></name><operator pos:line="15" pos:column="32">-&gt;<pos:position pos:line="15" pos:column="37"/></operator><name pos:line="15" pos:column="34">next<pos:position pos:line="15" pos:column="38"/></name></name></expr></argument>, <argument><expr><name pos:line="15" pos:column="40">bb<pos:position pos:line="15" pos:column="42"/></name></expr></argument>, <argument><expr><name pos:line="15" pos:column="44">mode<pos:position pos:line="15" pos:column="48"/></name></expr></argument>, <argument><expr><name pos:line="15" pos:column="50">block<pos:position pos:line="15" pos:column="55"/></name></expr></argument>, <argument><expr><name pos:line="15" pos:column="57">readbytes<pos:position pos:line="15" pos:column="66"/></name></expr></argument>)<pos:position pos:line="15" pos:column="67"/></argument_list></call></expr>;<pos:position pos:line="15" pos:column="68"/></return>
    }<pos:position pos:line="16" pos:column="6"/></block></then></if>

    <if pos:line="18" pos:column="5">if <condition pos:line="18" pos:column="8">(<expr><operator pos:line="18" pos:column="9">(<pos:position pos:line="18" pos:column="10"/></operator><name pos:line="18" pos:column="10">sed_cfg<pos:position pos:line="18" pos:column="17"/></name> <operator pos:line="18" pos:column="18">==<pos:position pos:line="18" pos:column="20"/></operator> <name pos:line="18" pos:column="21">NULL<pos:position pos:line="18" pos:column="25"/></name><operator pos:line="18" pos:column="25">)<pos:position pos:line="18" pos:column="26"/></operator> <operator pos:line="18" pos:column="27">||<pos:position pos:line="18" pos:column="29"/></operator> <operator pos:line="18" pos:column="30">(<pos:position pos:line="18" pos:column="31"/></operator><name><name pos:line="18" pos:column="31">sed_cfg<pos:position pos:line="18" pos:column="38"/></name><operator pos:line="18" pos:column="38">-&gt;<pos:position pos:line="18" pos:column="43"/></operator><name pos:line="18" pos:column="40">sed_cmds<pos:position pos:line="18" pos:column="48"/></name></name> <operator pos:line="18" pos:column="49">==<pos:position pos:line="18" pos:column="51"/></operator> <name pos:line="18" pos:column="52">NULL<pos:position pos:line="18" pos:column="56"/></name><operator pos:line="18" pos:column="56">)<pos:position pos:line="18" pos:column="57"/></operator></expr>)<pos:position pos:line="18" pos:column="58"/></condition><then pos:line="18" pos:column="58"> <block pos:line="18" pos:column="59">{
        <comment type="block" pos:line="19" pos:column="9">/* No sed expression */</comment>
        <return pos:line="20" pos:column="9">return <expr><call><name pos:line="20" pos:column="16">ap_get_brigade<pos:position pos:line="20" pos:column="30"/></name><argument_list pos:line="20" pos:column="30">(<argument><expr><name><name pos:line="20" pos:column="31">f<pos:position pos:line="20" pos:column="32"/></name><operator pos:line="20" pos:column="32">-&gt;<pos:position pos:line="20" pos:column="37"/></operator><name pos:line="20" pos:column="34">next<pos:position pos:line="20" pos:column="38"/></name></name></expr></argument>, <argument><expr><name pos:line="20" pos:column="40">bb<pos:position pos:line="20" pos:column="42"/></name></expr></argument>, <argument><expr><name pos:line="20" pos:column="44">mode<pos:position pos:line="20" pos:column="48"/></name></expr></argument>, <argument><expr><name pos:line="20" pos:column="50">block<pos:position pos:line="20" pos:column="55"/></name></expr></argument>, <argument><expr><name pos:line="20" pos:column="57">readbytes<pos:position pos:line="20" pos:column="66"/></name></expr></argument>)<pos:position pos:line="20" pos:column="67"/></argument_list></call></expr>;<pos:position pos:line="20" pos:column="68"/></return>
    }<pos:position pos:line="21" pos:column="6"/></block></then></if>

    <if pos:line="23" pos:column="5">if <condition pos:line="23" pos:column="8">(<expr><operator pos:line="23" pos:column="9">!<pos:position pos:line="23" pos:column="10"/></operator><name pos:line="23" pos:column="10">ctx<pos:position pos:line="23" pos:column="13"/></name></expr>)<pos:position pos:line="23" pos:column="14"/></condition><then pos:line="23" pos:column="14"> <block pos:line="23" pos:column="15">{
        <if pos:line="24" pos:column="9">if <condition pos:line="24" pos:column="12">(<expr><operator pos:line="24" pos:column="13">!<pos:position pos:line="24" pos:column="14"/></operator><call><name pos:line="24" pos:column="14">ap_is_initial_req<pos:position pos:line="24" pos:column="31"/></name><argument_list pos:line="24" pos:column="31">(<argument><expr><name><name pos:line="24" pos:column="32">f<pos:position pos:line="24" pos:column="33"/></name><operator pos:line="24" pos:column="33">-&gt;<pos:position pos:line="24" pos:column="38"/></operator><name pos:line="24" pos:column="35">r<pos:position pos:line="24" pos:column="36"/></name></name></expr></argument>)<pos:position pos:line="24" pos:column="37"/></argument_list></call></expr>)<pos:position pos:line="24" pos:column="38"/></condition><then pos:line="24" pos:column="38"> <block pos:line="24" pos:column="39">{
            <expr_stmt><expr><call><name pos:line="25" pos:column="13">ap_remove_input_filter<pos:position pos:line="25" pos:column="35"/></name><argument_list pos:line="25" pos:column="35">(<argument><expr><name pos:line="25" pos:column="36">f<pos:position pos:line="25" pos:column="37"/></name></expr></argument>)<pos:position pos:line="25" pos:column="38"/></argument_list></call></expr>;<pos:position pos:line="25" pos:column="39"/></expr_stmt>
            <comment type="block" pos:line="26" pos:column="13">/* XXX : Should we filter the sub requests too */</comment>
            <return pos:line="27" pos:column="13">return <expr><call><name pos:line="27" pos:column="20">ap_get_brigade<pos:position pos:line="27" pos:column="34"/></name><argument_list pos:line="27" pos:column="34">(<argument><expr><name><name pos:line="27" pos:column="35">f<pos:position pos:line="27" pos:column="36"/></name><operator pos:line="27" pos:column="36">-&gt;<pos:position pos:line="27" pos:column="41"/></operator><name pos:line="27" pos:column="38">next<pos:position pos:line="27" pos:column="42"/></name></name></expr></argument>, <argument><expr><name pos:line="27" pos:column="44">bb<pos:position pos:line="27" pos:column="46"/></name></expr></argument>, <argument><expr><name pos:line="27" pos:column="48">mode<pos:position pos:line="27" pos:column="52"/></name></expr></argument>, <argument><expr><name pos:line="27" pos:column="54">block<pos:position pos:line="27" pos:column="59"/></name></expr></argument>, <argument><expr><name pos:line="27" pos:column="61">readbytes<pos:position pos:line="27" pos:column="70"/></name></expr></argument>)<pos:position pos:line="27" pos:column="71"/></argument_list></call></expr>;<pos:position pos:line="27" pos:column="72"/></return>
        }<pos:position pos:line="28" pos:column="10"/></block></then></if>
        <expr_stmt><expr><name pos:line="29" pos:column="9">status<pos:position pos:line="29" pos:column="15"/></name> <operator pos:line="29" pos:column="16">=<pos:position pos:line="29" pos:column="17"/></operator> <call><name pos:line="29" pos:column="18">init_context<pos:position pos:line="29" pos:column="30"/></name><argument_list pos:line="29" pos:column="30">(<argument><expr><name pos:line="29" pos:column="31">f<pos:position pos:line="29" pos:column="32"/></name></expr></argument>, <argument><expr><name pos:line="29" pos:column="34">sed_cfg<pos:position pos:line="29" pos:column="41"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="29" pos:column="43">0<pos:position pos:line="29" pos:column="44"/></literal></expr></argument>)<pos:position pos:line="29" pos:column="45"/></argument_list></call></expr>;<pos:position pos:line="29" pos:column="46"/></expr_stmt>
        <if pos:line="30" pos:column="9">if <condition pos:line="30" pos:column="12">(<expr><name pos:line="30" pos:column="13">status<pos:position pos:line="30" pos:column="19"/></name> <operator pos:line="30" pos:column="20">!=<pos:position pos:line="30" pos:column="22"/></operator> <name pos:line="30" pos:column="23">APR_SUCCESS<pos:position pos:line="30" pos:column="34"/></name></expr>)<pos:position pos:line="30" pos:column="35"/></condition><then pos:line="30" pos:column="35">
             <block type="pseudo"><return pos:line="31" pos:column="14">return <expr><name pos:line="31" pos:column="21">status<pos:position pos:line="31" pos:column="27"/></name></expr>;<pos:position pos:line="31" pos:column="28"/></return></block></then></if>
        <expr_stmt><expr><name pos:line="32" pos:column="9">ctx<pos:position pos:line="32" pos:column="12"/></name> <operator pos:line="32" pos:column="13">=<pos:position pos:line="32" pos:column="14"/></operator> <name><name pos:line="32" pos:column="15">f<pos:position pos:line="32" pos:column="16"/></name><operator pos:line="32" pos:column="16">-&gt;<pos:position pos:line="32" pos:column="21"/></operator><name pos:line="32" pos:column="18">ctx<pos:position pos:line="32" pos:column="21"/></name></name></expr>;<pos:position pos:line="32" pos:column="22"/></expr_stmt>
        <expr_stmt><expr><name><name pos:line="33" pos:column="9">ctx<pos:position pos:line="33" pos:column="12"/></name><operator pos:line="33" pos:column="12">-&gt;<pos:position pos:line="33" pos:column="17"/></operator><name pos:line="33" pos:column="14">bb<pos:position pos:line="33" pos:column="16"/></name></name>    <operator pos:line="33" pos:column="20">=<pos:position pos:line="33" pos:column="21"/></operator> <call><name pos:line="33" pos:column="22">apr_brigade_create<pos:position pos:line="33" pos:column="40"/></name><argument_list pos:line="33" pos:column="40">(<argument><expr><name><name pos:line="33" pos:column="41">f<pos:position pos:line="33" pos:column="42"/></name><operator pos:line="33" pos:column="42">-&gt;<pos:position pos:line="33" pos:column="47"/></operator><name pos:line="33" pos:column="44">r<pos:position pos:line="33" pos:column="45"/></name><operator pos:line="33" pos:column="45">-&gt;<pos:position pos:line="33" pos:column="50"/></operator><name pos:line="33" pos:column="47">pool<pos:position pos:line="33" pos:column="51"/></name></name></expr></argument>, <argument><expr><name><name pos:line="33" pos:column="53">f<pos:position pos:line="33" pos:column="54"/></name><operator pos:line="33" pos:column="54">-&gt;<pos:position pos:line="33" pos:column="59"/></operator><name pos:line="33" pos:column="56">c<pos:position pos:line="33" pos:column="57"/></name><operator pos:line="33" pos:column="57">-&gt;<pos:position pos:line="33" pos:column="62"/></operator><name pos:line="33" pos:column="59">bucket_alloc<pos:position pos:line="33" pos:column="71"/></name></name></expr></argument>)<pos:position pos:line="33" pos:column="72"/></argument_list></call></expr>;<pos:position pos:line="33" pos:column="73"/></expr_stmt>
        <expr_stmt><expr><name><name pos:line="34" pos:column="9">ctx<pos:position pos:line="34" pos:column="12"/></name><operator pos:line="34" pos:column="12">-&gt;<pos:position pos:line="34" pos:column="17"/></operator><name pos:line="34" pos:column="14">bbinp<pos:position pos:line="34" pos:column="19"/></name></name> <operator pos:line="34" pos:column="20">=<pos:position pos:line="34" pos:column="21"/></operator> <call><name pos:line="34" pos:column="22">apr_brigade_create<pos:position pos:line="34" pos:column="40"/></name><argument_list pos:line="34" pos:column="40">(<argument><expr><name><name pos:line="34" pos:column="41">f<pos:position pos:line="34" pos:column="42"/></name><operator pos:line="34" pos:column="42">-&gt;<pos:position pos:line="34" pos:column="47"/></operator><name pos:line="34" pos:column="44">r<pos:position pos:line="34" pos:column="45"/></name><operator pos:line="34" pos:column="45">-&gt;<pos:position pos:line="34" pos:column="50"/></operator><name pos:line="34" pos:column="47">pool<pos:position pos:line="34" pos:column="51"/></name></name></expr></argument>, <argument><expr><name><name pos:line="34" pos:column="53">f<pos:position pos:line="34" pos:column="54"/></name><operator pos:line="34" pos:column="54">-&gt;<pos:position pos:line="34" pos:column="59"/></operator><name pos:line="34" pos:column="56">c<pos:position pos:line="34" pos:column="57"/></name><operator pos:line="34" pos:column="57">-&gt;<pos:position pos:line="34" pos:column="62"/></operator><name pos:line="34" pos:column="59">bucket_alloc<pos:position pos:line="34" pos:column="71"/></name></name></expr></argument>)<pos:position pos:line="34" pos:column="72"/></argument_list></call></expr>;<pos:position pos:line="34" pos:column="73"/></expr_stmt>
    }<pos:position pos:line="35" pos:column="6"/></block></then></if>

    <expr_stmt><expr><name pos:line="37" pos:column="5">bbinp<pos:position pos:line="37" pos:column="10"/></name> <operator pos:line="37" pos:column="11">=<pos:position pos:line="37" pos:column="12"/></operator> <name><name pos:line="37" pos:column="13">ctx<pos:position pos:line="37" pos:column="16"/></name><operator pos:line="37" pos:column="16">-&gt;<pos:position pos:line="37" pos:column="21"/></operator><name pos:line="37" pos:column="18">bbinp<pos:position pos:line="37" pos:column="23"/></name></name></expr>;<pos:position pos:line="37" pos:column="24"/></expr_stmt>

    <comment type="block" pos:line="39" pos:column="5">/* Here is the logic :
     * Read the readbytes data from next level fiter into bbinp. Loop through
     * the buckets in bbinp and read the data from buckets and invoke
     * sed_eval_buffer on the data. libsed will generate its output using
     * sed_write_output which will add data in ctx-&gt;bb. Do it until it have
     * atleast one bucket in ctx-&gt;bb. At the end of data eos bucket
     * should be there.
     *
     * Once eos bucket is seen, then invoke sed_finalize_eval to clear the
     * output. If the last byte of data is not a new line character then sed
     * will add a new line to the data that is default sed behaviour. Note
     * that using this filter with POST data, caller may not expect this
     * behaviour.
     *
     * If next level fiter generate the flush bucket, we can't do much about
     * it. If we want to return the flush bucket in brigade bb (to the caller)
     * the question is where to add it?
     */</comment>
    <while pos:line="57" pos:column="5">while <condition pos:line="57" pos:column="11">(<expr><call><name pos:line="57" pos:column="12">APR_BRIGADE_EMPTY<pos:position pos:line="57" pos:column="29"/></name><argument_list pos:line="57" pos:column="29">(<argument><expr><name><name pos:line="57" pos:column="30">ctx<pos:position pos:line="57" pos:column="33"/></name><operator pos:line="57" pos:column="33">-&gt;<pos:position pos:line="57" pos:column="38"/></operator><name pos:line="57" pos:column="35">bb<pos:position pos:line="57" pos:column="37"/></name></name></expr></argument>)<pos:position pos:line="57" pos:column="38"/></argument_list></call></expr>)<pos:position pos:line="57" pos:column="39"/></condition> <block pos:line="57" pos:column="40">{
        <decl_stmt><decl><type><name pos:line="58" pos:column="9">apr_bucket<pos:position pos:line="58" pos:column="19"/></name> <modifier pos:line="58" pos:column="20">*<pos:position pos:line="58" pos:column="21"/></modifier></type><name pos:line="58" pos:column="21">b<pos:position pos:line="58" pos:column="22"/></name></decl>;<pos:position pos:line="58" pos:column="23"/></decl_stmt>

        <comment type="block" pos:line="60" pos:column="9">/* read the bytes from next level filter */</comment>
        <expr_stmt><expr><call><name pos:line="61" pos:column="9">apr_brigade_cleanup<pos:position pos:line="61" pos:column="28"/></name><argument_list pos:line="61" pos:column="28">(<argument><expr><name pos:line="61" pos:column="29">bbinp<pos:position pos:line="61" pos:column="34"/></name></expr></argument>)<pos:position pos:line="61" pos:column="35"/></argument_list></call></expr>;<pos:position pos:line="61" pos:column="36"/></expr_stmt>
        <expr_stmt><expr><name pos:line="62" pos:column="9">status<pos:position pos:line="62" pos:column="15"/></name> <operator pos:line="62" pos:column="16">=<pos:position pos:line="62" pos:column="17"/></operator> <call><name pos:line="62" pos:column="18">ap_get_brigade<pos:position pos:line="62" pos:column="32"/></name><argument_list pos:line="62" pos:column="32">(<argument><expr><name><name pos:line="62" pos:column="33">f<pos:position pos:line="62" pos:column="34"/></name><operator pos:line="62" pos:column="34">-&gt;<pos:position pos:line="62" pos:column="39"/></operator><name pos:line="62" pos:column="36">next<pos:position pos:line="62" pos:column="40"/></name></name></expr></argument>, <argument><expr><name pos:line="62" pos:column="42">bbinp<pos:position pos:line="62" pos:column="47"/></name></expr></argument>, <argument><expr><name pos:line="62" pos:column="49">mode<pos:position pos:line="62" pos:column="53"/></name></expr></argument>, <argument><expr><name pos:line="62" pos:column="55">block<pos:position pos:line="62" pos:column="60"/></name></expr></argument>, <argument><expr><name pos:line="62" pos:column="62">readbytes<pos:position pos:line="62" pos:column="71"/></name></expr></argument>)<pos:position pos:line="62" pos:column="72"/></argument_list></call></expr>;<pos:position pos:line="62" pos:column="73"/></expr_stmt>
        <if pos:line="63" pos:column="9">if <condition pos:line="63" pos:column="12">(<expr><name pos:line="63" pos:column="13">status<pos:position pos:line="63" pos:column="19"/></name> <operator pos:line="63" pos:column="20">!=<pos:position pos:line="63" pos:column="22"/></operator> <name pos:line="63" pos:column="23">APR_SUCCESS<pos:position pos:line="63" pos:column="34"/></name></expr>)<pos:position pos:line="63" pos:column="35"/></condition><then pos:line="63" pos:column="35"> <block pos:line="63" pos:column="36">{
            <return pos:line="64" pos:column="13">return <expr><name pos:line="64" pos:column="20">status<pos:position pos:line="64" pos:column="26"/></name></expr>;<pos:position pos:line="64" pos:column="27"/></return>
        }<pos:position pos:line="65" pos:column="10"/></block></then></if>
        <for pos:line="66" pos:column="9">for <control pos:line="66" pos:column="13">(<init><expr><name pos:line="66" pos:column="14">b<pos:position pos:line="66" pos:column="15"/></name> <operator pos:line="66" pos:column="16">=<pos:position pos:line="66" pos:column="17"/></operator> <call><name pos:line="66" pos:column="18">APR_BRIGADE_FIRST<pos:position pos:line="66" pos:column="35"/></name><argument_list pos:line="66" pos:column="35">(<argument><expr><name pos:line="66" pos:column="36">bbinp<pos:position pos:line="66" pos:column="41"/></name></expr></argument>)<pos:position pos:line="66" pos:column="42"/></argument_list></call></expr>;<pos:position pos:line="66" pos:column="43"/></init> <condition><expr><name pos:line="66" pos:column="44">b<pos:position pos:line="66" pos:column="45"/></name> <operator pos:line="66" pos:column="46">!=<pos:position pos:line="66" pos:column="48"/></operator> <call><name pos:line="66" pos:column="49">APR_BRIGADE_SENTINEL<pos:position pos:line="66" pos:column="69"/></name><argument_list pos:line="66" pos:column="69">(<argument><expr><name pos:line="66" pos:column="70">bbinp<pos:position pos:line="66" pos:column="75"/></name></expr></argument>)<pos:position pos:line="66" pos:column="76"/></argument_list></call></expr>;<pos:position pos:line="66" pos:column="77"/></condition>
             <incr><expr><name pos:line="67" pos:column="14">b<pos:position pos:line="67" pos:column="15"/></name> <operator pos:line="67" pos:column="16">=<pos:position pos:line="67" pos:column="17"/></operator> <call><name pos:line="67" pos:column="18">APR_BUCKET_NEXT<pos:position pos:line="67" pos:column="33"/></name><argument_list pos:line="67" pos:column="33">(<argument><expr><name pos:line="67" pos:column="34">b<pos:position pos:line="67" pos:column="35"/></name></expr></argument>)<pos:position pos:line="67" pos:column="36"/></argument_list></call></expr></incr>)<pos:position pos:line="67" pos:column="37"/></control> <block pos:line="67" pos:column="38">{
            <decl_stmt><decl><type><specifier pos:line="68" pos:column="13">const<pos:position pos:line="68" pos:column="18"/></specifier> <name pos:line="68" pos:column="19">char<pos:position pos:line="68" pos:column="23"/></name> <modifier pos:line="68" pos:column="24">*<pos:position pos:line="68" pos:column="25"/></modifier></type><name pos:line="68" pos:column="25">buf<pos:position pos:line="68" pos:column="28"/></name> <init pos:line="68" pos:column="29">= <expr><name pos:line="68" pos:column="31">NULL<pos:position pos:line="68" pos:column="35"/></name></expr></init></decl>;<pos:position pos:line="68" pos:column="36"/></decl_stmt>
            <decl_stmt><decl><type><name pos:line="69" pos:column="13">apr_size_t<pos:position pos:line="69" pos:column="23"/></name></type> <name pos:line="69" pos:column="24">bytes<pos:position pos:line="69" pos:column="29"/></name></decl>;<pos:position pos:line="69" pos:column="30"/></decl_stmt>

            <if pos:line="71" pos:column="13">if <condition pos:line="71" pos:column="16">(<expr><call><name pos:line="71" pos:column="17">APR_BUCKET_IS_EOS<pos:position pos:line="71" pos:column="34"/></name><argument_list pos:line="71" pos:column="34">(<argument><expr><name pos:line="71" pos:column="35">b<pos:position pos:line="71" pos:column="36"/></name></expr></argument>)<pos:position pos:line="71" pos:column="37"/></argument_list></call></expr>)<pos:position pos:line="71" pos:column="38"/></condition><then pos:line="71" pos:column="38"> <block pos:line="71" pos:column="39">{
                <comment type="block" pos:line="72" pos:column="17">/* eos bucket. Clear the internal sed buffers */</comment>
                <expr_stmt><expr><call><name pos:line="73" pos:column="17">sed_finalize_eval<pos:position pos:line="73" pos:column="34"/></name><argument_list pos:line="73" pos:column="34">(<argument><expr><operator pos:line="73" pos:column="35">&amp;<pos:position pos:line="73" pos:column="40"/></operator><name><name pos:line="73" pos:column="36">ctx<pos:position pos:line="73" pos:column="39"/></name><operator pos:line="73" pos:column="39">-&gt;<pos:position pos:line="73" pos:column="44"/></operator><name pos:line="73" pos:column="41">eval<pos:position pos:line="73" pos:column="45"/></name></name></expr></argument>, <argument><expr><name pos:line="73" pos:column="47">ctx<pos:position pos:line="73" pos:column="50"/></name></expr></argument>)<pos:position pos:line="73" pos:column="51"/></argument_list></call></expr>;<pos:position pos:line="73" pos:column="52"/></expr_stmt>
                <expr_stmt><expr><call><name pos:line="74" pos:column="17">flush_output_buffer<pos:position pos:line="74" pos:column="36"/></name><argument_list pos:line="74" pos:column="36">(<argument><expr><name pos:line="74" pos:column="37">ctx<pos:position pos:line="74" pos:column="40"/></name></expr></argument>)<pos:position pos:line="74" pos:column="41"/></argument_list></call></expr>;<pos:position pos:line="74" pos:column="42"/></expr_stmt>
                <expr_stmt><expr><call><name pos:line="75" pos:column="17">APR_BUCKET_REMOVE<pos:position pos:line="75" pos:column="34"/></name><argument_list pos:line="75" pos:column="34">(<argument><expr><name pos:line="75" pos:column="35">b<pos:position pos:line="75" pos:column="36"/></name></expr></argument>)<pos:position pos:line="75" pos:column="37"/></argument_list></call></expr>;<pos:position pos:line="75" pos:column="38"/></expr_stmt>
                <expr_stmt><expr><call><name pos:line="76" pos:column="17">APR_BRIGADE_INSERT_TAIL<pos:position pos:line="76" pos:column="40"/></name><argument_list pos:line="76" pos:column="40">(<argument><expr><name><name pos:line="76" pos:column="41">ctx<pos:position pos:line="76" pos:column="44"/></name><operator pos:line="76" pos:column="44">-&gt;<pos:position pos:line="76" pos:column="49"/></operator><name pos:line="76" pos:column="46">bb<pos:position pos:line="76" pos:column="48"/></name></name></expr></argument>, <argument><expr><name pos:line="76" pos:column="50">b<pos:position pos:line="76" pos:column="51"/></name></expr></argument>)<pos:position pos:line="76" pos:column="52"/></argument_list></call></expr>;<pos:position pos:line="76" pos:column="53"/></expr_stmt>
                <break pos:line="77" pos:column="17">break;<pos:position pos:line="77" pos:column="23"/></break>
            }<pos:position pos:line="78" pos:column="14"/></block></then>
            <elseif pos:line="79" pos:column="13">else <if pos:line="79" pos:column="18">if <condition pos:line="79" pos:column="21">(<expr><call><name pos:line="79" pos:column="22">APR_BUCKET_IS_FLUSH<pos:position pos:line="79" pos:column="41"/></name><argument_list pos:line="79" pos:column="41">(<argument><expr><name pos:line="79" pos:column="42">b<pos:position pos:line="79" pos:column="43"/></name></expr></argument>)<pos:position pos:line="79" pos:column="44"/></argument_list></call></expr>)<pos:position pos:line="79" pos:column="45"/></condition><then pos:line="79" pos:column="45"> <block pos:line="79" pos:column="46">{
                <comment type="block" pos:line="80" pos:column="17">/* What should we do with flush bucket */</comment>
                <continue pos:line="81" pos:column="17">continue;<pos:position pos:line="81" pos:column="26"/></continue>
            }<pos:position pos:line="82" pos:column="14"/></block></then></if></elseif></if>
            <if pos:line="83" pos:column="13">if <condition pos:line="83" pos:column="16">(<expr><call><name pos:line="83" pos:column="17">apr_bucket_read<pos:position pos:line="83" pos:column="32"/></name><argument_list pos:line="83" pos:column="32">(<argument><expr><name pos:line="83" pos:column="33">b<pos:position pos:line="83" pos:column="34"/></name></expr></argument>, <argument><expr><operator pos:line="83" pos:column="36">&amp;<pos:position pos:line="83" pos:column="41"/></operator><name pos:line="83" pos:column="37">buf<pos:position pos:line="83" pos:column="40"/></name></expr></argument>, <argument><expr><operator pos:line="83" pos:column="42">&amp;<pos:position pos:line="83" pos:column="47"/></operator><name pos:line="83" pos:column="43">bytes<pos:position pos:line="83" pos:column="48"/></name></expr></argument>, <argument><expr><name pos:line="83" pos:column="50">APR_BLOCK_READ<pos:position pos:line="83" pos:column="64"/></name></expr></argument>)<pos:position pos:line="83" pos:column="65"/></argument_list></call>
                     <operator pos:line="84" pos:column="22">==<pos:position pos:line="84" pos:column="24"/></operator> <name pos:line="84" pos:column="25">APR_SUCCESS<pos:position pos:line="84" pos:column="36"/></name></expr>)<pos:position pos:line="84" pos:column="37"/></condition><then pos:line="84" pos:column="37"> <block pos:line="84" pos:column="38">{
                <expr_stmt><expr><name pos:line="85" pos:column="17">status<pos:position pos:line="85" pos:column="23"/></name> <operator pos:line="85" pos:column="24">=<pos:position pos:line="85" pos:column="25"/></operator> <call><name pos:line="85" pos:column="26">sed_eval_buffer<pos:position pos:line="85" pos:column="41"/></name><argument_list pos:line="85" pos:column="41">(<argument><expr><operator pos:line="85" pos:column="42">&amp;<pos:position pos:line="85" pos:column="47"/></operator><name><name pos:line="85" pos:column="43">ctx<pos:position pos:line="85" pos:column="46"/></name><operator pos:line="85" pos:column="46">-&gt;<pos:position pos:line="85" pos:column="51"/></operator><name pos:line="85" pos:column="48">eval<pos:position pos:line="85" pos:column="52"/></name></name></expr></argument>, <argument><expr><name pos:line="85" pos:column="54">buf<pos:position pos:line="85" pos:column="57"/></name></expr></argument>, <argument><expr><name pos:line="85" pos:column="59">bytes<pos:position pos:line="85" pos:column="64"/></name></expr></argument>, <argument><expr><name pos:line="85" pos:column="66">ctx<pos:position pos:line="85" pos:column="69"/></name></expr></argument>)<pos:position pos:line="85" pos:column="70"/></argument_list></call></expr>;<pos:position pos:line="85" pos:column="71"/></expr_stmt>
                <if pos:line="86" pos:column="17">if <condition pos:line="86" pos:column="20">(<expr><name pos:line="86" pos:column="21">status<pos:position pos:line="86" pos:column="27"/></name> <operator pos:line="86" pos:column="28">!=<pos:position pos:line="86" pos:column="30"/></operator> <name pos:line="86" pos:column="31">APR_SUCCESS<pos:position pos:line="86" pos:column="42"/></name></expr>)<pos:position pos:line="86" pos:column="43"/></condition><then pos:line="86" pos:column="43">
                    <block type="pseudo"><return pos:line="87" pos:column="21">return <expr><name pos:line="87" pos:column="28">status<pos:position pos:line="87" pos:column="34"/></name></expr>;<pos:position pos:line="87" pos:column="35"/></return></block></then></if>
                <expr_stmt><expr><call><name pos:line="88" pos:column="17">flush_output_buffer<pos:position pos:line="88" pos:column="36"/></name><argument_list pos:line="88" pos:column="36">(<argument><expr><name pos:line="88" pos:column="37">ctx<pos:position pos:line="88" pos:column="40"/></name></expr></argument>)<pos:position pos:line="88" pos:column="41"/></argument_list></call></expr>;<pos:position pos:line="88" pos:column="42"/></expr_stmt>
            }<pos:position pos:line="89" pos:column="14"/></block></then></if>
        }<pos:position pos:line="90" pos:column="10"/></block></for>
    }<pos:position pos:line="91" pos:column="6"/></block></while>

    <if pos:line="93" pos:column="5">if <condition pos:line="93" pos:column="8">(<expr><operator pos:line="93" pos:column="9">!<pos:position pos:line="93" pos:column="10"/></operator><call><name pos:line="93" pos:column="10">APR_BRIGADE_EMPTY<pos:position pos:line="93" pos:column="27"/></name><argument_list pos:line="93" pos:column="27">(<argument><expr><name><name pos:line="93" pos:column="28">ctx<pos:position pos:line="93" pos:column="31"/></name><operator pos:line="93" pos:column="31">-&gt;<pos:position pos:line="93" pos:column="36"/></operator><name pos:line="93" pos:column="33">bb<pos:position pos:line="93" pos:column="35"/></name></name></expr></argument>)<pos:position pos:line="93" pos:column="36"/></argument_list></call></expr>)<pos:position pos:line="93" pos:column="37"/></condition><then pos:line="93" pos:column="37"> <block pos:line="93" pos:column="38">{
        <decl_stmt><decl><type><name pos:line="94" pos:column="9">apr_bucket<pos:position pos:line="94" pos:column="19"/></name> <modifier pos:line="94" pos:column="20">*<pos:position pos:line="94" pos:column="21"/></modifier></type><name pos:line="94" pos:column="21">b<pos:position pos:line="94" pos:column="22"/></name> <init pos:line="94" pos:column="23">= <expr><name pos:line="94" pos:column="25">NULL<pos:position pos:line="94" pos:column="29"/></name></expr></init></decl>;<pos:position pos:line="94" pos:column="30"/></decl_stmt>

        <if pos:line="96" pos:column="9">if <condition pos:line="96" pos:column="12">(<expr><call><name pos:line="96" pos:column="13">apr_brigade_partition<pos:position pos:line="96" pos:column="34"/></name><argument_list pos:line="96" pos:column="34">(<argument><expr><name><name pos:line="96" pos:column="35">ctx<pos:position pos:line="96" pos:column="38"/></name><operator pos:line="96" pos:column="38">-&gt;<pos:position pos:line="96" pos:column="43"/></operator><name pos:line="96" pos:column="40">bb<pos:position pos:line="96" pos:column="42"/></name></name></expr></argument>, <argument><expr><name pos:line="96" pos:column="44">readbytes<pos:position pos:line="96" pos:column="53"/></name></expr></argument>, <argument><expr><operator pos:line="96" pos:column="55">&amp;<pos:position pos:line="96" pos:column="60"/></operator><name pos:line="96" pos:column="56">b<pos:position pos:line="96" pos:column="57"/></name></expr></argument>)<pos:position pos:line="96" pos:column="58"/></argument_list></call> <operator pos:line="96" pos:column="59">==<pos:position pos:line="96" pos:column="61"/></operator> <name pos:line="96" pos:column="62">APR_INCOMPLETE<pos:position pos:line="96" pos:column="76"/></name></expr>)<pos:position pos:line="96" pos:column="77"/></condition><then pos:line="96" pos:column="77"> <block pos:line="96" pos:column="78">{
            <expr_stmt><expr><call><name pos:line="97" pos:column="13">APR_BRIGADE_CONCAT<pos:position pos:line="97" pos:column="31"/></name><argument_list pos:line="97" pos:column="31">(<argument><expr><name pos:line="97" pos:column="32">bb<pos:position pos:line="97" pos:column="34"/></name></expr></argument>, <argument><expr><name><name pos:line="97" pos:column="36">ctx<pos:position pos:line="97" pos:column="39"/></name><operator pos:line="97" pos:column="39">-&gt;<pos:position pos:line="97" pos:column="44"/></operator><name pos:line="97" pos:column="41">bb<pos:position pos:line="97" pos:column="43"/></name></name></expr></argument>)<pos:position pos:line="97" pos:column="44"/></argument_list></call></expr>;<pos:position pos:line="97" pos:column="45"/></expr_stmt>
        }<pos:position pos:line="98" pos:column="10"/></block></then>
        <else pos:line="99" pos:column="9">else <block pos:line="99" pos:column="14">{
            <expr_stmt><expr><call><name pos:line="100" pos:column="13">APR_BRIGADE_CONCAT<pos:position pos:line="100" pos:column="31"/></name><argument_list pos:line="100" pos:column="31">(<argument><expr><name pos:line="100" pos:column="32">bb<pos:position pos:line="100" pos:column="34"/></name></expr></argument>, <argument><expr><name><name pos:line="100" pos:column="36">ctx<pos:position pos:line="100" pos:column="39"/></name><operator pos:line="100" pos:column="39">-&gt;<pos:position pos:line="100" pos:column="44"/></operator><name pos:line="100" pos:column="41">bb<pos:position pos:line="100" pos:column="43"/></name></name></expr></argument>)<pos:position pos:line="100" pos:column="44"/></argument_list></call></expr>;<pos:position pos:line="100" pos:column="45"/></expr_stmt>
            <expr_stmt><expr><call><name pos:line="101" pos:column="13">apr_brigade_split_ex<pos:position pos:line="101" pos:column="33"/></name><argument_list pos:line="101" pos:column="33">(<argument><expr><name pos:line="101" pos:column="34">bb<pos:position pos:line="101" pos:column="36"/></name></expr></argument>, <argument><expr><name pos:line="101" pos:column="38">b<pos:position pos:line="101" pos:column="39"/></name></expr></argument>, <argument><expr><name><name pos:line="101" pos:column="41">ctx<pos:position pos:line="101" pos:column="44"/></name><operator pos:line="101" pos:column="44">-&gt;<pos:position pos:line="101" pos:column="49"/></operator><name pos:line="101" pos:column="46">bb<pos:position pos:line="101" pos:column="48"/></name></name></expr></argument>)<pos:position pos:line="101" pos:column="49"/></argument_list></call></expr>;<pos:position pos:line="101" pos:column="50"/></expr_stmt>
        }<pos:position pos:line="102" pos:column="10"/></block></else></if>
    }<pos:position pos:line="103" pos:column="6"/></block></then></if>
    <return pos:line="104" pos:column="5">return <expr><name pos:line="104" pos:column="12">APR_SUCCESS<pos:position pos:line="104" pos:column="23"/></name></expr>;<pos:position pos:line="104" pos:column="24"/></return>
}<pos:position pos:line="105" pos:column="2"/></block></function></unit>

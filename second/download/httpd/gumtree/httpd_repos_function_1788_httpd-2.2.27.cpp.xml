<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/httpd/gumtree/httpd_repos_function_1788_httpd-2.2.27.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">int<pos:position pos:line="1" pos:column="11"/></name></type> <name pos:line="1" pos:column="12">make_secure_socket<pos:position pos:line="1" pos:column="30"/></name><parameter_list pos:line="1" pos:column="30">(<parameter><decl><type><name pos:line="1" pos:column="31">apr_pool_t<pos:position pos:line="1" pos:column="41"/></name> <modifier pos:line="1" pos:column="42">*<pos:position pos:line="1" pos:column="43"/></modifier></type><name pos:line="1" pos:column="43">pconf<pos:position pos:line="1" pos:column="48"/></name></decl></parameter>, <parameter><decl><type><specifier pos:line="1" pos:column="50">const<pos:position pos:line="1" pos:column="55"/></specifier> <name><name pos:line="1" pos:column="56">struct<pos:position pos:line="1" pos:column="62"/></name> <name pos:line="1" pos:column="63">sockaddr_in<pos:position pos:line="1" pos:column="74"/></name></name> <modifier pos:line="1" pos:column="75">*<pos:position pos:line="1" pos:column="76"/></modifier></type><name pos:line="1" pos:column="76">server<pos:position pos:line="1" pos:column="82"/></name></decl></parameter>,
                              <parameter><decl><type><name pos:line="2" pos:column="31">char<pos:position pos:line="2" pos:column="35"/></name><modifier pos:line="2" pos:column="35">*<pos:position pos:line="2" pos:column="36"/></modifier></type> <name pos:line="2" pos:column="37">key<pos:position pos:line="2" pos:column="40"/></name></decl></parameter>, <parameter><decl><type><name pos:line="2" pos:column="42">int<pos:position pos:line="2" pos:column="45"/></name></type> <name pos:line="2" pos:column="46">mutual<pos:position pos:line="2" pos:column="52"/></name></decl></parameter>, <parameter><decl><type><name pos:line="2" pos:column="54">server_rec<pos:position pos:line="2" pos:column="64"/></name> <modifier pos:line="2" pos:column="65">*<pos:position pos:line="2" pos:column="66"/></modifier></type><name pos:line="2" pos:column="66">sconf<pos:position pos:line="2" pos:column="71"/></name></decl></parameter>)<pos:position pos:line="2" pos:column="72"/></parameter_list>
<block pos:line="3" pos:column="1">{
    <decl_stmt><decl><type><name pos:line="4" pos:column="5">int<pos:position pos:line="4" pos:column="8"/></name></type> <name pos:line="4" pos:column="9">s<pos:position pos:line="4" pos:column="10"/></name></decl>;<pos:position pos:line="4" pos:column="11"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="5" pos:column="5">char<pos:position pos:line="5" pos:column="9"/></name></type> <name><name pos:line="5" pos:column="10">addr<pos:position pos:line="5" pos:column="14"/></name><index pos:line="5" pos:column="14">[<expr><name pos:line="5" pos:column="15">MAX_ADDRESS<pos:position pos:line="5" pos:column="26"/></name></expr>]<pos:position pos:line="5" pos:column="27"/></index></name></decl>;<pos:position pos:line="5" pos:column="28"/></decl_stmt>
    <decl_stmt><decl><type><name><name pos:line="6" pos:column="5">struct<pos:position pos:line="6" pos:column="11"/></name> <name pos:line="6" pos:column="12">sslserveropts<pos:position pos:line="6" pos:column="25"/></name></name></type> <name pos:line="6" pos:column="26">opts<pos:position pos:line="6" pos:column="30"/></name></decl>;<pos:position pos:line="6" pos:column="31"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="7" pos:column="5">unsigned<pos:position pos:line="7" pos:column="13"/></name> <name pos:line="7" pos:column="14">int<pos:position pos:line="7" pos:column="17"/></name></type> <name pos:line="7" pos:column="18">optParam<pos:position pos:line="7" pos:column="26"/></name></decl>;<pos:position pos:line="7" pos:column="27"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="8" pos:column="5">WSAPROTOCOL_INFO<pos:position pos:line="8" pos:column="21"/></name></type> <name pos:line="8" pos:column="22">SecureProtoInfo<pos:position pos:line="8" pos:column="37"/></name></decl>;<pos:position pos:line="8" pos:column="38"/></decl_stmt>

    <if pos:line="10" pos:column="5">if <condition pos:line="10" pos:column="8">(<expr><name><name pos:line="10" pos:column="9">server<pos:position pos:line="10" pos:column="15"/></name><operator pos:line="10" pos:column="15">-&gt;<pos:position pos:line="10" pos:column="20"/></operator><name pos:line="10" pos:column="17">sin_addr<pos:position pos:line="10" pos:column="25"/></name><operator pos:line="10" pos:column="25">.<pos:position pos:line="10" pos:column="26"/></operator><name pos:line="10" pos:column="26">s_addr<pos:position pos:line="10" pos:column="32"/></name></name> <operator pos:line="10" pos:column="33">!=<pos:position pos:line="10" pos:column="35"/></operator> <call><name pos:line="10" pos:column="36">htonl<pos:position pos:line="10" pos:column="41"/></name><argument_list pos:line="10" pos:column="41">(<argument><expr><name pos:line="10" pos:column="42">INADDR_ANY<pos:position pos:line="10" pos:column="52"/></name></expr></argument>)<pos:position pos:line="10" pos:column="53"/></argument_list></call></expr>)<pos:position pos:line="10" pos:column="54"/></condition><then pos:line="10" pos:column="54">
        <block type="pseudo"><expr_stmt><expr><call><name pos:line="11" pos:column="9">apr_snprintf<pos:position pos:line="11" pos:column="21"/></name><argument_list pos:line="11" pos:column="21">(<argument><expr><name pos:line="11" pos:column="22">addr<pos:position pos:line="11" pos:column="26"/></name></expr></argument>, <argument><expr><sizeof pos:line="11" pos:column="28">sizeof<argument_list pos:line="11" pos:column="34">(<argument><expr><name pos:line="11" pos:column="35">addr<pos:position pos:line="11" pos:column="39"/></name></expr></argument>)<pos:position pos:line="11" pos:column="40"/></argument_list></sizeof></expr></argument>, <argument><expr><literal type="string" pos:line="11" pos:column="42">"address %s port %d"<pos:position pos:line="11" pos:column="62"/></literal></expr></argument>,
            <argument><expr><call><name pos:line="12" pos:column="13">inet_ntoa<pos:position pos:line="12" pos:column="22"/></name><argument_list pos:line="12" pos:column="22">(<argument><expr><name><name pos:line="12" pos:column="23">server<pos:position pos:line="12" pos:column="29"/></name><operator pos:line="12" pos:column="29">-&gt;<pos:position pos:line="12" pos:column="34"/></operator><name pos:line="12" pos:column="31">sin_addr<pos:position pos:line="12" pos:column="39"/></name></name></expr></argument>)<pos:position pos:line="12" pos:column="40"/></argument_list></call></expr></argument>, <argument><expr><call><name pos:line="12" pos:column="42">ntohs<pos:position pos:line="12" pos:column="47"/></name><argument_list pos:line="12" pos:column="47">(<argument><expr><name><name pos:line="12" pos:column="48">server<pos:position pos:line="12" pos:column="54"/></name><operator pos:line="12" pos:column="54">-&gt;<pos:position pos:line="12" pos:column="59"/></operator><name pos:line="12" pos:column="56">sin_port<pos:position pos:line="12" pos:column="64"/></name></name></expr></argument>)<pos:position pos:line="12" pos:column="65"/></argument_list></call></expr></argument>)<pos:position pos:line="12" pos:column="66"/></argument_list></call></expr>;<pos:position pos:line="12" pos:column="67"/></expr_stmt></block></then>
    <else pos:line="13" pos:column="5">else
        <block type="pseudo"><expr_stmt><expr><call><name pos:line="14" pos:column="9">apr_snprintf<pos:position pos:line="14" pos:column="21"/></name><argument_list pos:line="14" pos:column="21">(<argument><expr><name pos:line="14" pos:column="22">addr<pos:position pos:line="14" pos:column="26"/></name></expr></argument>, <argument><expr><sizeof pos:line="14" pos:column="28">sizeof<argument_list pos:line="14" pos:column="34">(<argument><expr><name pos:line="14" pos:column="35">addr<pos:position pos:line="14" pos:column="39"/></name></expr></argument>)<pos:position pos:line="14" pos:column="40"/></argument_list></sizeof></expr></argument>, <argument><expr><literal type="string" pos:line="14" pos:column="42">"port %d"<pos:position pos:line="14" pos:column="51"/></literal></expr></argument>, <argument><expr><call><name pos:line="14" pos:column="53">ntohs<pos:position pos:line="14" pos:column="58"/></name><argument_list pos:line="14" pos:column="58">(<argument><expr><name><name pos:line="14" pos:column="59">server<pos:position pos:line="14" pos:column="65"/></name><operator pos:line="14" pos:column="65">-&gt;<pos:position pos:line="14" pos:column="70"/></operator><name pos:line="14" pos:column="67">sin_port<pos:position pos:line="14" pos:column="75"/></name></name></expr></argument>)<pos:position pos:line="14" pos:column="76"/></argument_list></call></expr></argument>)<pos:position pos:line="14" pos:column="77"/></argument_list></call></expr>;<pos:position pos:line="14" pos:column="78"/></expr_stmt></block></else></if>

    <comment type="block" pos:line="16" pos:column="5">/* note that because we're about to slack we don't use psocket */</comment>
    <expr_stmt><expr><call><name pos:line="17" pos:column="5">memset<pos:position pos:line="17" pos:column="11"/></name><argument_list pos:line="17" pos:column="11">(<argument><expr><operator pos:line="17" pos:column="12">&amp;<pos:position pos:line="17" pos:column="17"/></operator><name pos:line="17" pos:column="13">SecureProtoInfo<pos:position pos:line="17" pos:column="28"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="17" pos:column="30">0<pos:position pos:line="17" pos:column="31"/></literal></expr></argument>, <argument><expr><sizeof pos:line="17" pos:column="33">sizeof<argument_list pos:line="17" pos:column="39">(<argument><expr><name pos:line="17" pos:column="40">WSAPROTOCOL_INFO<pos:position pos:line="17" pos:column="56"/></name></expr></argument>)<pos:position pos:line="17" pos:column="57"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="17" pos:column="58"/></argument_list></call></expr>;<pos:position pos:line="17" pos:column="59"/></expr_stmt>

    <expr_stmt><expr><name><name pos:line="19" pos:column="5">SecureProtoInfo<pos:position pos:line="19" pos:column="20"/></name><operator pos:line="19" pos:column="20">.<pos:position pos:line="19" pos:column="21"/></operator><name pos:line="19" pos:column="21">iAddressFamily<pos:position pos:line="19" pos:column="35"/></name></name> <operator pos:line="19" pos:column="36">=<pos:position pos:line="19" pos:column="37"/></operator> <name pos:line="19" pos:column="38">AF_INET<pos:position pos:line="19" pos:column="45"/></name></expr>;<pos:position pos:line="19" pos:column="46"/></expr_stmt>
    <expr_stmt><expr><name><name pos:line="20" pos:column="5">SecureProtoInfo<pos:position pos:line="20" pos:column="20"/></name><operator pos:line="20" pos:column="20">.<pos:position pos:line="20" pos:column="21"/></operator><name pos:line="20" pos:column="21">iSocketType<pos:position pos:line="20" pos:column="32"/></name></name> <operator pos:line="20" pos:column="33">=<pos:position pos:line="20" pos:column="34"/></operator> <name pos:line="20" pos:column="35">SOCK_STREAM<pos:position pos:line="20" pos:column="46"/></name></expr>;<pos:position pos:line="20" pos:column="47"/></expr_stmt>
    <expr_stmt><expr><name><name pos:line="21" pos:column="5">SecureProtoInfo<pos:position pos:line="21" pos:column="20"/></name><operator pos:line="21" pos:column="20">.<pos:position pos:line="21" pos:column="21"/></operator><name pos:line="21" pos:column="21">iProtocol<pos:position pos:line="21" pos:column="30"/></name></name> <operator pos:line="21" pos:column="31">=<pos:position pos:line="21" pos:column="32"/></operator> <name pos:line="21" pos:column="33">IPPROTO_TCP<pos:position pos:line="21" pos:column="44"/></name></expr>;<pos:position pos:line="21" pos:column="45"/></expr_stmt>
    <expr_stmt><expr><name><name pos:line="22" pos:column="5">SecureProtoInfo<pos:position pos:line="22" pos:column="20"/></name><operator pos:line="22" pos:column="20">.<pos:position pos:line="22" pos:column="21"/></operator><name pos:line="22" pos:column="21">iSecurityScheme<pos:position pos:line="22" pos:column="36"/></name></name> <operator pos:line="22" pos:column="37">=<pos:position pos:line="22" pos:column="38"/></operator> <name pos:line="22" pos:column="39">SECURITY_PROTOCOL_SSL<pos:position pos:line="22" pos:column="60"/></name></expr>;<pos:position pos:line="22" pos:column="61"/></expr_stmt>

    <expr_stmt><expr><name pos:line="24" pos:column="5">s<pos:position pos:line="24" pos:column="6"/></name> <operator pos:line="24" pos:column="7">=<pos:position pos:line="24" pos:column="8"/></operator> <call><name pos:line="24" pos:column="9">WSASocket<pos:position pos:line="24" pos:column="18"/></name><argument_list pos:line="24" pos:column="18">(<argument><expr><name pos:line="24" pos:column="19">AF_INET<pos:position pos:line="24" pos:column="26"/></name></expr></argument>, <argument><expr><name pos:line="24" pos:column="28">SOCK_STREAM<pos:position pos:line="24" pos:column="39"/></name></expr></argument>, <argument><expr><name pos:line="24" pos:column="41">IPPROTO_TCP<pos:position pos:line="24" pos:column="52"/></name></expr></argument>,
            <argument><expr><operator pos:line="25" pos:column="13">(<pos:position pos:line="25" pos:column="14"/></operator><name pos:line="25" pos:column="14">LPWSAPROTOCOL_INFO<pos:position pos:line="25" pos:column="32"/></name><operator pos:line="25" pos:column="32">)<pos:position pos:line="25" pos:column="33"/></operator><operator pos:line="25" pos:column="33">&amp;<pos:position pos:line="25" pos:column="38"/></operator><name pos:line="25" pos:column="34">SecureProtoInfo<pos:position pos:line="25" pos:column="49"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="25" pos:column="51">0<pos:position pos:line="25" pos:column="52"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="25" pos:column="54">0<pos:position pos:line="25" pos:column="55"/></literal></expr></argument>)<pos:position pos:line="25" pos:column="56"/></argument_list></call></expr>;<pos:position pos:line="25" pos:column="57"/></expr_stmt>

    <if pos:line="27" pos:column="5">if <condition pos:line="27" pos:column="8">(<expr><name pos:line="27" pos:column="9">s<pos:position pos:line="27" pos:column="10"/></name> <operator pos:line="27" pos:column="11">==<pos:position pos:line="27" pos:column="13"/></operator> <name pos:line="27" pos:column="14">INVALID_SOCKET<pos:position pos:line="27" pos:column="28"/></name></expr>)<pos:position pos:line="27" pos:column="29"/></condition><then pos:line="27" pos:column="29"> <block pos:line="27" pos:column="30">{
        <expr_stmt><expr><call><name pos:line="28" pos:column="9">ap_log_error<pos:position pos:line="28" pos:column="21"/></name><argument_list pos:line="28" pos:column="21">(<argument><expr><name pos:line="28" pos:column="22">APLOG_MARK<pos:position pos:line="28" pos:column="32"/></name></expr></argument>, <argument><expr><name pos:line="28" pos:column="34">APLOG_CRIT<pos:position pos:line="28" pos:column="44"/></name></expr></argument>, <argument><expr><call><name pos:line="28" pos:column="46">WSAGetLastError<pos:position pos:line="28" pos:column="61"/></name><argument_list pos:line="28" pos:column="61">()<pos:position pos:line="28" pos:column="63"/></argument_list></call></expr></argument>, <argument><expr><name pos:line="28" pos:column="65">sconf<pos:position pos:line="28" pos:column="70"/></name></expr></argument>,
                     <argument><expr><literal type="string" pos:line="29" pos:column="22">"make_secure_socket: failed to get a socket for %s"<pos:position pos:line="29" pos:column="73"/></literal></expr></argument>,
                     <argument><expr><name pos:line="30" pos:column="22">addr<pos:position pos:line="30" pos:column="26"/></name></expr></argument>)<pos:position pos:line="30" pos:column="27"/></argument_list></call></expr>;<pos:position pos:line="30" pos:column="28"/></expr_stmt>
        <return pos:line="31" pos:column="9">return <expr><operator pos:line="31" pos:column="16">-<pos:position pos:line="31" pos:column="17"/></operator><literal type="number" pos:line="31" pos:column="17">1<pos:position pos:line="31" pos:column="18"/></literal></expr>;<pos:position pos:line="31" pos:column="19"/></return>
    }<pos:position pos:line="32" pos:column="6"/></block></then></if>

    <if pos:line="34" pos:column="5">if <condition pos:line="34" pos:column="8">(<expr><operator pos:line="34" pos:column="9">!<pos:position pos:line="34" pos:column="10"/></operator><name pos:line="34" pos:column="10">mutual<pos:position pos:line="34" pos:column="16"/></name></expr>)<pos:position pos:line="34" pos:column="17"/></condition><then pos:line="34" pos:column="17"> <block pos:line="34" pos:column="18">{
        <expr_stmt><expr><name pos:line="35" pos:column="9">optParam<pos:position pos:line="35" pos:column="17"/></name> <operator pos:line="35" pos:column="18">=<pos:position pos:line="35" pos:column="19"/></operator> <name pos:line="35" pos:column="20">SO_SSL_ENABLE<pos:position pos:line="35" pos:column="33"/></name> <operator pos:line="35" pos:column="34">|<pos:position pos:line="35" pos:column="35"/></operator> <name pos:line="35" pos:column="36">SO_SSL_SERVER<pos:position pos:line="35" pos:column="49"/></name></expr>;<pos:position pos:line="35" pos:column="50"/></expr_stmt>

        <if pos:line="37" pos:column="9">if <condition pos:line="37" pos:column="12">(<expr><call><name pos:line="37" pos:column="13">WSAIoctl<pos:position pos:line="37" pos:column="21"/></name><argument_list pos:line="37" pos:column="21">(<argument><expr><name pos:line="37" pos:column="22">s<pos:position pos:line="37" pos:column="23"/></name></expr></argument>, <argument><expr><name pos:line="37" pos:column="25">SO_SSL_SET_FLAGS<pos:position pos:line="37" pos:column="41"/></name></expr></argument>, <argument><expr><operator pos:line="37" pos:column="43">(<pos:position pos:line="37" pos:column="44"/></operator><name pos:line="37" pos:column="44">char<pos:position pos:line="37" pos:column="48"/></name> <operator pos:line="37" pos:column="49">*<pos:position pos:line="37" pos:column="50"/></operator><operator pos:line="37" pos:column="50">)<pos:position pos:line="37" pos:column="51"/></operator><operator pos:line="37" pos:column="51">&amp;<pos:position pos:line="37" pos:column="56"/></operator><name pos:line="37" pos:column="52">optParam<pos:position pos:line="37" pos:column="60"/></name></expr></argument>,
            <argument><expr><sizeof pos:line="38" pos:column="13">sizeof<argument_list pos:line="38" pos:column="19">(<argument><expr><name pos:line="38" pos:column="20">optParam<pos:position pos:line="38" pos:column="28"/></name></expr></argument>)<pos:position pos:line="38" pos:column="29"/></argument_list></sizeof></expr></argument>, <argument><expr><name pos:line="38" pos:column="31">NULL<pos:position pos:line="38" pos:column="35"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="38" pos:column="37">0<pos:position pos:line="38" pos:column="38"/></literal></expr></argument>, <argument><expr><name pos:line="38" pos:column="40">NULL<pos:position pos:line="38" pos:column="44"/></name></expr></argument>, <argument><expr><name pos:line="38" pos:column="46">NULL<pos:position pos:line="38" pos:column="50"/></name></expr></argument>, <argument><expr><name pos:line="38" pos:column="52">NULL<pos:position pos:line="38" pos:column="56"/></name></expr></argument>)<pos:position pos:line="38" pos:column="57"/></argument_list></call></expr>)<pos:position pos:line="38" pos:column="58"/></condition><then pos:line="38" pos:column="58"> <block pos:line="38" pos:column="59">{
            <expr_stmt><expr><call><name pos:line="39" pos:column="13">ap_log_error<pos:position pos:line="39" pos:column="25"/></name><argument_list pos:line="39" pos:column="25">(<argument><expr><name pos:line="39" pos:column="26">APLOG_MARK<pos:position pos:line="39" pos:column="36"/></name></expr></argument>, <argument><expr><name pos:line="39" pos:column="38">APLOG_CRIT<pos:position pos:line="39" pos:column="48"/></name></expr></argument>, <argument><expr><call><name pos:line="39" pos:column="50">WSAGetLastError<pos:position pos:line="39" pos:column="65"/></name><argument_list pos:line="39" pos:column="65">()<pos:position pos:line="39" pos:column="67"/></argument_list></call></expr></argument>, <argument><expr><name pos:line="39" pos:column="69">sconf<pos:position pos:line="39" pos:column="74"/></name></expr></argument>,
                         <argument><expr><literal type="string" pos:line="40" pos:column="26">"make_secure_socket: for %s, WSAIoctl: "<pos:position pos:line="40" pos:column="66"/></literal>
                         <literal type="string" pos:line="41" pos:column="26">"(SO_SSL_SET_FLAGS)"<pos:position pos:line="41" pos:column="46"/></literal></expr></argument>, <argument><expr><name pos:line="41" pos:column="48">addr<pos:position pos:line="41" pos:column="52"/></name></expr></argument>)<pos:position pos:line="41" pos:column="53"/></argument_list></call></expr>;<pos:position pos:line="41" pos:column="54"/></expr_stmt>
            <return pos:line="42" pos:column="13">return <expr><operator pos:line="42" pos:column="20">-<pos:position pos:line="42" pos:column="21"/></operator><literal type="number" pos:line="42" pos:column="21">1<pos:position pos:line="42" pos:column="22"/></literal></expr>;<pos:position pos:line="42" pos:column="23"/></return>
        }<pos:position pos:line="43" pos:column="10"/></block></then></if>
    }<pos:position pos:line="44" pos:column="6"/></block></then></if>

    <expr_stmt><expr><name><name pos:line="46" pos:column="5">opts<pos:position pos:line="46" pos:column="9"/></name><operator pos:line="46" pos:column="9">.<pos:position pos:line="46" pos:column="10"/></operator><name pos:line="46" pos:column="10">cert<pos:position pos:line="46" pos:column="14"/></name></name> <operator pos:line="46" pos:column="15">=<pos:position pos:line="46" pos:column="16"/></operator> <name pos:line="46" pos:column="17">key<pos:position pos:line="46" pos:column="20"/></name></expr>;<pos:position pos:line="46" pos:column="21"/></expr_stmt>
    <expr_stmt><expr><name><name pos:line="47" pos:column="5">opts<pos:position pos:line="47" pos:column="9"/></name><operator pos:line="47" pos:column="9">.<pos:position pos:line="47" pos:column="10"/></operator><name pos:line="47" pos:column="10">certlen<pos:position pos:line="47" pos:column="17"/></name></name> <operator pos:line="47" pos:column="18">=<pos:position pos:line="47" pos:column="19"/></operator> <call><name pos:line="47" pos:column="20">strlen<pos:position pos:line="47" pos:column="26"/></name><argument_list pos:line="47" pos:column="26">(<argument><expr><name pos:line="47" pos:column="27">key<pos:position pos:line="47" pos:column="30"/></name></expr></argument>)<pos:position pos:line="47" pos:column="31"/></argument_list></call></expr>;<pos:position pos:line="47" pos:column="32"/></expr_stmt>
    <expr_stmt><expr><name><name pos:line="48" pos:column="5">opts<pos:position pos:line="48" pos:column="9"/></name><operator pos:line="48" pos:column="9">.<pos:position pos:line="48" pos:column="10"/></operator><name pos:line="48" pos:column="10">sidtimeout<pos:position pos:line="48" pos:column="20"/></name></name> <operator pos:line="48" pos:column="21">=<pos:position pos:line="48" pos:column="22"/></operator> <literal type="number" pos:line="48" pos:column="23">0<pos:position pos:line="48" pos:column="24"/></literal></expr>;<pos:position pos:line="48" pos:column="25"/></expr_stmt>
    <expr_stmt><expr><name><name pos:line="49" pos:column="5">opts<pos:position pos:line="49" pos:column="9"/></name><operator pos:line="49" pos:column="9">.<pos:position pos:line="49" pos:column="10"/></operator><name pos:line="49" pos:column="10">sidentries<pos:position pos:line="49" pos:column="20"/></name></name> <operator pos:line="49" pos:column="21">=<pos:position pos:line="49" pos:column="22"/></operator> <literal type="number" pos:line="49" pos:column="23">0<pos:position pos:line="49" pos:column="24"/></literal></expr>;<pos:position pos:line="49" pos:column="25"/></expr_stmt>
    <expr_stmt><expr><name><name pos:line="50" pos:column="5">opts<pos:position pos:line="50" pos:column="9"/></name><operator pos:line="50" pos:column="9">.<pos:position pos:line="50" pos:column="10"/></operator><name pos:line="50" pos:column="10">siddir<pos:position pos:line="50" pos:column="16"/></name></name> <operator pos:line="50" pos:column="17">=<pos:position pos:line="50" pos:column="18"/></operator> <name pos:line="50" pos:column="19">NULL<pos:position pos:line="50" pos:column="23"/></name></expr>;<pos:position pos:line="50" pos:column="24"/></expr_stmt>

    <if pos:line="52" pos:column="5">if <condition pos:line="52" pos:column="8">(<expr><call><name pos:line="52" pos:column="9">WSAIoctl<pos:position pos:line="52" pos:column="17"/></name><argument_list pos:line="52" pos:column="17">(<argument><expr><name pos:line="52" pos:column="18">s<pos:position pos:line="52" pos:column="19"/></name></expr></argument>, <argument><expr><name pos:line="52" pos:column="21">SO_SSL_SET_SERVER<pos:position pos:line="52" pos:column="38"/></name></expr></argument>, <argument><expr><operator pos:line="52" pos:column="40">(<pos:position pos:line="52" pos:column="41"/></operator><name pos:line="52" pos:column="41">char<pos:position pos:line="52" pos:column="45"/></name> <operator pos:line="52" pos:column="46">*<pos:position pos:line="52" pos:column="47"/></operator><operator pos:line="52" pos:column="47">)<pos:position pos:line="52" pos:column="48"/></operator><operator pos:line="52" pos:column="48">&amp;<pos:position pos:line="52" pos:column="53"/></operator><name pos:line="52" pos:column="49">opts<pos:position pos:line="52" pos:column="53"/></name></expr></argument>, <argument><expr><sizeof pos:line="52" pos:column="55">sizeof<argument_list pos:line="52" pos:column="61">(<argument><expr><name pos:line="52" pos:column="62">opts<pos:position pos:line="52" pos:column="66"/></name></expr></argument>)<pos:position pos:line="52" pos:column="67"/></argument_list></sizeof></expr></argument>,
        <argument><expr><name pos:line="53" pos:column="9">NULL<pos:position pos:line="53" pos:column="13"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="53" pos:column="15">0<pos:position pos:line="53" pos:column="16"/></literal></expr></argument>, <argument><expr><name pos:line="53" pos:column="18">NULL<pos:position pos:line="53" pos:column="22"/></name></expr></argument>, <argument><expr><name pos:line="53" pos:column="24">NULL<pos:position pos:line="53" pos:column="28"/></name></expr></argument>, <argument><expr><name pos:line="53" pos:column="30">NULL<pos:position pos:line="53" pos:column="34"/></name></expr></argument>)<pos:position pos:line="53" pos:column="35"/></argument_list></call> <operator pos:line="53" pos:column="36">!=<pos:position pos:line="53" pos:column="38"/></operator> <literal type="number" pos:line="53" pos:column="39">0<pos:position pos:line="53" pos:column="40"/></literal></expr>)<pos:position pos:line="53" pos:column="41"/></condition><then pos:line="53" pos:column="41"> <block pos:line="53" pos:column="42">{
        <expr_stmt><expr><call><name pos:line="54" pos:column="9">ap_log_error<pos:position pos:line="54" pos:column="21"/></name><argument_list pos:line="54" pos:column="21">(<argument><expr><name pos:line="54" pos:column="22">APLOG_MARK<pos:position pos:line="54" pos:column="32"/></name></expr></argument>, <argument><expr><name pos:line="54" pos:column="34">APLOG_CRIT<pos:position pos:line="54" pos:column="44"/></name></expr></argument>, <argument><expr><call><name pos:line="54" pos:column="46">WSAGetLastError<pos:position pos:line="54" pos:column="61"/></name><argument_list pos:line="54" pos:column="61">()<pos:position pos:line="54" pos:column="63"/></argument_list></call></expr></argument>, <argument><expr><name pos:line="54" pos:column="65">sconf<pos:position pos:line="54" pos:column="70"/></name></expr></argument>,
                     <argument><expr><literal type="string" pos:line="55" pos:column="22">"make_secure_socket: for %s, WSAIoctl: "<pos:position pos:line="55" pos:column="62"/></literal>
                     <literal type="string" pos:line="56" pos:column="22">"(SO_SSL_SET_SERVER)"<pos:position pos:line="56" pos:column="43"/></literal></expr></argument>, <argument><expr><name pos:line="56" pos:column="45">addr<pos:position pos:line="56" pos:column="49"/></name></expr></argument>)<pos:position pos:line="56" pos:column="50"/></argument_list></call></expr>;<pos:position pos:line="56" pos:column="51"/></expr_stmt>
        <return pos:line="57" pos:column="9">return <expr><operator pos:line="57" pos:column="16">-<pos:position pos:line="57" pos:column="17"/></operator><literal type="number" pos:line="57" pos:column="17">1<pos:position pos:line="57" pos:column="18"/></literal></expr>;<pos:position pos:line="57" pos:column="19"/></return>
    }<pos:position pos:line="58" pos:column="6"/></block></then></if>

    <if pos:line="60" pos:column="5">if <condition pos:line="60" pos:column="8">(<expr><name pos:line="60" pos:column="9">mutual<pos:position pos:line="60" pos:column="15"/></name></expr>)<pos:position pos:line="60" pos:column="16"/></condition><then pos:line="60" pos:column="16"> <block pos:line="60" pos:column="17">{
        <expr_stmt><expr><name pos:line="61" pos:column="9">optParam<pos:position pos:line="61" pos:column="17"/></name> <operator pos:line="61" pos:column="18">=<pos:position pos:line="61" pos:column="19"/></operator> <literal type="number" pos:line="61" pos:column="20">0x07<pos:position pos:line="61" pos:column="24"/></literal></expr>;<pos:position pos:line="61" pos:column="25"/></expr_stmt>  <comment type="block" pos:line="61" pos:column="27">/* SO_SSL_AUTH_CLIENT */</comment>

        <if pos:line="63" pos:column="9">if<condition pos:line="63" pos:column="11">(<expr><call><name pos:line="63" pos:column="12">WSAIoctl<pos:position pos:line="63" pos:column="20"/></name><argument_list pos:line="63" pos:column="20">(<argument><expr><name pos:line="63" pos:column="21">s<pos:position pos:line="63" pos:column="22"/></name></expr></argument>, <argument><expr><name pos:line="63" pos:column="24">SO_SSL_SET_FLAGS<pos:position pos:line="63" pos:column="40"/></name></expr></argument>, <argument><expr><operator pos:line="63" pos:column="42">(<pos:position pos:line="63" pos:column="43"/></operator><name pos:line="63" pos:column="43">char<pos:position pos:line="63" pos:column="47"/></name><operator pos:line="63" pos:column="47">*<pos:position pos:line="63" pos:column="48"/></operator><operator pos:line="63" pos:column="48">)<pos:position pos:line="63" pos:column="49"/></operator><operator pos:line="63" pos:column="49">&amp;<pos:position pos:line="63" pos:column="54"/></operator><name pos:line="63" pos:column="50">optParam<pos:position pos:line="63" pos:column="58"/></name></expr></argument>,
            <argument><expr><sizeof pos:line="64" pos:column="13">sizeof<argument_list pos:line="64" pos:column="19">(<argument><expr><name pos:line="64" pos:column="20">optParam<pos:position pos:line="64" pos:column="28"/></name></expr></argument>)<pos:position pos:line="64" pos:column="29"/></argument_list></sizeof></expr></argument>, <argument><expr><name pos:line="64" pos:column="31">NULL<pos:position pos:line="64" pos:column="35"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="64" pos:column="37">0<pos:position pos:line="64" pos:column="38"/></literal></expr></argument>, <argument><expr><name pos:line="64" pos:column="40">NULL<pos:position pos:line="64" pos:column="44"/></name></expr></argument>, <argument><expr><name pos:line="64" pos:column="46">NULL<pos:position pos:line="64" pos:column="50"/></name></expr></argument>, <argument><expr><name pos:line="64" pos:column="52">NULL<pos:position pos:line="64" pos:column="56"/></name></expr></argument>)<pos:position pos:line="64" pos:column="57"/></argument_list></call></expr>)<pos:position pos:line="64" pos:column="58"/></condition><then pos:line="64" pos:column="58"> <block pos:line="64" pos:column="59">{
            <expr_stmt><expr><call><name pos:line="65" pos:column="13">ap_log_error<pos:position pos:line="65" pos:column="25"/></name><argument_list pos:line="65" pos:column="25">(<argument><expr><name pos:line="65" pos:column="26">APLOG_MARK<pos:position pos:line="65" pos:column="36"/></name></expr></argument>, <argument><expr><name pos:line="65" pos:column="38">APLOG_CRIT<pos:position pos:line="65" pos:column="48"/></name></expr></argument>, <argument><expr><call><name pos:line="65" pos:column="50">WSAGetLastError<pos:position pos:line="65" pos:column="65"/></name><argument_list pos:line="65" pos:column="65">()<pos:position pos:line="65" pos:column="67"/></argument_list></call></expr></argument>, <argument><expr><name pos:line="65" pos:column="69">sconf<pos:position pos:line="65" pos:column="74"/></name></expr></argument>,
                         <argument><expr><literal type="string" pos:line="66" pos:column="26">"make_secure_socket: for %s, WSAIoctl: "<pos:position pos:line="66" pos:column="66"/></literal>
                         <literal type="string" pos:line="67" pos:column="26">"(SO_SSL_SET_FLAGS)"<pos:position pos:line="67" pos:column="46"/></literal></expr></argument>, <argument><expr><name pos:line="67" pos:column="48">addr<pos:position pos:line="67" pos:column="52"/></name></expr></argument>)<pos:position pos:line="67" pos:column="53"/></argument_list></call></expr>;<pos:position pos:line="67" pos:column="54"/></expr_stmt>
            <return pos:line="68" pos:column="13">return <expr><operator pos:line="68" pos:column="20">-<pos:position pos:line="68" pos:column="21"/></operator><literal type="number" pos:line="68" pos:column="21">1<pos:position pos:line="68" pos:column="22"/></literal></expr>;<pos:position pos:line="68" pos:column="23"/></return>
        }<pos:position pos:line="69" pos:column="10"/></block></then></if>
    }<pos:position pos:line="70" pos:column="6"/></block></then></if>

    <expr_stmt><expr><name pos:line="72" pos:column="5">optParam<pos:position pos:line="72" pos:column="13"/></name> <operator pos:line="72" pos:column="14">=<pos:position pos:line="72" pos:column="15"/></operator> <name pos:line="72" pos:column="16">SO_TLS_UNCLEAN_SHUTDOWN<pos:position pos:line="72" pos:column="39"/></name></expr>;<pos:position pos:line="72" pos:column="40"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="73" pos:column="5">WSAIoctl<pos:position pos:line="73" pos:column="13"/></name><argument_list pos:line="73" pos:column="13">(<argument><expr><name pos:line="73" pos:column="14">s<pos:position pos:line="73" pos:column="15"/></name></expr></argument>, <argument><expr><name pos:line="73" pos:column="17">SO_SSL_SET_FLAGS<pos:position pos:line="73" pos:column="33"/></name></expr></argument>, <argument><expr><operator pos:line="73" pos:column="35">(<pos:position pos:line="73" pos:column="36"/></operator><name pos:line="73" pos:column="36">char<pos:position pos:line="73" pos:column="40"/></name> <operator pos:line="73" pos:column="41">*<pos:position pos:line="73" pos:column="42"/></operator><operator pos:line="73" pos:column="42">)<pos:position pos:line="73" pos:column="43"/></operator><operator pos:line="73" pos:column="43">&amp;<pos:position pos:line="73" pos:column="48"/></operator><name pos:line="73" pos:column="44">optParam<pos:position pos:line="73" pos:column="52"/></name></expr></argument>, <argument><expr><sizeof pos:line="73" pos:column="54">sizeof<argument_list pos:line="73" pos:column="60">(<argument><expr><name pos:line="73" pos:column="61">optParam<pos:position pos:line="73" pos:column="69"/></name></expr></argument>)<pos:position pos:line="73" pos:column="70"/></argument_list></sizeof></expr></argument>,
             <argument><expr><name pos:line="74" pos:column="14">NULL<pos:position pos:line="74" pos:column="18"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="74" pos:column="20">0<pos:position pos:line="74" pos:column="21"/></literal></expr></argument>, <argument><expr><name pos:line="74" pos:column="23">NULL<pos:position pos:line="74" pos:column="27"/></name></expr></argument>, <argument><expr><name pos:line="74" pos:column="29">NULL<pos:position pos:line="74" pos:column="33"/></name></expr></argument>, <argument><expr><name pos:line="74" pos:column="35">NULL<pos:position pos:line="74" pos:column="39"/></name></expr></argument>)<pos:position pos:line="74" pos:column="40"/></argument_list></call></expr>;<pos:position pos:line="74" pos:column="41"/></expr_stmt>

    <return pos:line="76" pos:column="5">return <expr><name pos:line="76" pos:column="12">s<pos:position pos:line="76" pos:column="13"/></name></expr>;<pos:position pos:line="76" pos:column="14"/></return>
}<pos:position pos:line="77" pos:column="2"/></block></function></unit>

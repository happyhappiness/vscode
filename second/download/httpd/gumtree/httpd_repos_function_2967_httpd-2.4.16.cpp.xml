<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/httpd/gumtree/httpd_repos_function_2967_httpd-2.4.16.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">apr_status_t<pos:position pos:line="1" pos:column="20"/></name></type> <name pos:line="1" pos:column="21">handle_response<pos:position pos:line="1" pos:column="36"/></name><parameter_list pos:line="1" pos:column="36">(<parameter><decl><type><specifier pos:line="1" pos:column="37">const<pos:position pos:line="1" pos:column="42"/></specifier> <name pos:line="1" pos:column="43">fcgi_provider_conf<pos:position pos:line="1" pos:column="61"/></name> <modifier pos:line="1" pos:column="62">*<pos:position pos:line="1" pos:column="63"/></modifier></type><name pos:line="1" pos:column="63">conf<pos:position pos:line="1" pos:column="67"/></name></decl></parameter>,
                                    <parameter><decl><type><name pos:line="2" pos:column="37">request_rec<pos:position pos:line="2" pos:column="48"/></name> <modifier pos:line="2" pos:column="49">*<pos:position pos:line="2" pos:column="50"/></modifier></type><name pos:line="2" pos:column="50">r<pos:position pos:line="2" pos:column="51"/></name></decl></parameter>, <parameter><decl><type><name pos:line="2" pos:column="53">apr_socket_t<pos:position pos:line="2" pos:column="65"/></name> <modifier pos:line="2" pos:column="66">*<pos:position pos:line="2" pos:column="67"/></modifier></type><name pos:line="2" pos:column="67">s<pos:position pos:line="2" pos:column="68"/></name></decl></parameter>,
                                    <parameter><decl><type><name pos:line="3" pos:column="37">apr_pool_t<pos:position pos:line="3" pos:column="47"/></name> <modifier pos:line="3" pos:column="48">*<pos:position pos:line="3" pos:column="49"/></modifier></type><name pos:line="3" pos:column="49">temp_pool<pos:position pos:line="3" pos:column="58"/></name></decl></parameter>,
                                    <parameter><decl><type><name pos:line="4" pos:column="37">apr_uint16_t<pos:position pos:line="4" pos:column="49"/></name></type> <name pos:line="4" pos:column="50">request_id<pos:position pos:line="4" pos:column="60"/></name></decl></parameter>,
                                    <parameter><decl><type><name pos:line="5" pos:column="37">char<pos:position pos:line="5" pos:column="41"/></name> <modifier pos:line="5" pos:column="42">*<pos:position pos:line="5" pos:column="43"/></modifier></type><name pos:line="5" pos:column="43">rspbuf<pos:position pos:line="5" pos:column="49"/></name></decl></parameter>,
                                    <parameter><decl><type><name pos:line="6" pos:column="37">apr_size_t<pos:position pos:line="6" pos:column="47"/></name> <modifier pos:line="6" pos:column="48">*<pos:position pos:line="6" pos:column="49"/></modifier></type><name pos:line="6" pos:column="49">rspbuflen<pos:position pos:line="6" pos:column="58"/></name></decl></parameter>)<pos:position pos:line="6" pos:column="59"/></parameter_list>
<block pos:line="7" pos:column="1">{
    <decl_stmt><decl><type><name pos:line="8" pos:column="5">apr_bucket<pos:position pos:line="8" pos:column="15"/></name> <modifier pos:line="8" pos:column="16">*<pos:position pos:line="8" pos:column="17"/></modifier></type><name pos:line="8" pos:column="17">b<pos:position pos:line="8" pos:column="18"/></name></decl>;<pos:position pos:line="8" pos:column="19"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="9" pos:column="5">apr_bucket_brigade<pos:position pos:line="9" pos:column="23"/></name> <modifier pos:line="9" pos:column="24">*<pos:position pos:line="9" pos:column="25"/></modifier></type><name pos:line="9" pos:column="25">ob<pos:position pos:line="9" pos:column="27"/></name></decl>;<pos:position pos:line="9" pos:column="28"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="10" pos:column="5">apr_size_t<pos:position pos:line="10" pos:column="15"/></name></type> <name pos:line="10" pos:column="16">orspbuflen<pos:position pos:line="10" pos:column="26"/></name> <init pos:line="10" pos:column="27">= <expr><literal type="number" pos:line="10" pos:column="29">0<pos:position pos:line="10" pos:column="30"/></literal></expr></init></decl>;<pos:position pos:line="10" pos:column="31"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="11" pos:column="5">apr_status_t<pos:position pos:line="11" pos:column="17"/></name></type> <name pos:line="11" pos:column="18">rv<pos:position pos:line="11" pos:column="20"/></name> <init pos:line="11" pos:column="21">= <expr><name pos:line="11" pos:column="23">APR_SUCCESS<pos:position pos:line="11" pos:column="34"/></name></expr></init></decl>;<pos:position pos:line="11" pos:column="35"/></decl_stmt>
    <decl_stmt><decl><type><specifier pos:line="12" pos:column="5">const<pos:position pos:line="12" pos:column="10"/></specifier> <name pos:line="12" pos:column="11">char<pos:position pos:line="12" pos:column="15"/></name> <modifier pos:line="12" pos:column="16">*<pos:position pos:line="12" pos:column="17"/></modifier></type><name pos:line="12" pos:column="17">fn<pos:position pos:line="12" pos:column="19"/></name> <init pos:line="12" pos:column="20">= <expr><literal type="string" pos:line="12" pos:column="22">"handle_response"<pos:position pos:line="12" pos:column="39"/></literal></expr></init></decl>;<pos:position pos:line="12" pos:column="40"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="13" pos:column="5">int<pos:position pos:line="13" pos:column="8"/></name></type> <name pos:line="13" pos:column="9">header_state<pos:position pos:line="13" pos:column="21"/></name> <init pos:line="13" pos:column="22">= <expr><name pos:line="13" pos:column="24">HDR_STATE_READING_HEADERS<pos:position pos:line="13" pos:column="49"/></name></expr></init></decl>;<pos:position pos:line="13" pos:column="50"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="14" pos:column="5">int<pos:position pos:line="14" pos:column="8"/></name></type> <name pos:line="14" pos:column="9">seen_end_of_headers<pos:position pos:line="14" pos:column="28"/></name> <init pos:line="14" pos:column="29">= <expr><literal type="number" pos:line="14" pos:column="31">0<pos:position pos:line="14" pos:column="32"/></literal></expr></init></decl>, <decl><type ref="prev"/><name pos:line="14" pos:column="34">done<pos:position pos:line="14" pos:column="38"/></name> <init pos:line="14" pos:column="39">= <expr><literal type="number" pos:line="14" pos:column="41">0<pos:position pos:line="14" pos:column="42"/></literal></expr></init></decl>;<pos:position pos:line="14" pos:column="43"/></decl_stmt>

    <if pos:line="16" pos:column="5">if <condition pos:line="16" pos:column="8">(<expr><name pos:line="16" pos:column="9">rspbuflen<pos:position pos:line="16" pos:column="18"/></name></expr>)<pos:position pos:line="16" pos:column="19"/></condition><then pos:line="16" pos:column="19"> <block pos:line="16" pos:column="20">{
        <expr_stmt><expr><name pos:line="17" pos:column="9">orspbuflen<pos:position pos:line="17" pos:column="19"/></name> <operator pos:line="17" pos:column="20">=<pos:position pos:line="17" pos:column="21"/></operator> <operator pos:line="17" pos:column="22">*<pos:position pos:line="17" pos:column="23"/></operator><name pos:line="17" pos:column="23">rspbuflen<pos:position pos:line="17" pos:column="32"/></name></expr>;<pos:position pos:line="17" pos:column="33"/></expr_stmt>
        <expr_stmt><expr><operator pos:line="18" pos:column="9">*<pos:position pos:line="18" pos:column="10"/></operator><name pos:line="18" pos:column="10">rspbuflen<pos:position pos:line="18" pos:column="19"/></name> <operator pos:line="18" pos:column="20">=<pos:position pos:line="18" pos:column="21"/></operator> <literal type="number" pos:line="18" pos:column="22">0<pos:position pos:line="18" pos:column="23"/></literal></expr>;<pos:position pos:line="18" pos:column="24"/></expr_stmt> <comment type="block" pos:line="18" pos:column="25">/* unless we actually read something */</comment>
    }<pos:position pos:line="19" pos:column="6"/></block></then></if>

    <expr_stmt><expr><name pos:line="21" pos:column="5">ob<pos:position pos:line="21" pos:column="7"/></name> <operator pos:line="21" pos:column="8">=<pos:position pos:line="21" pos:column="9"/></operator> <call><name pos:line="21" pos:column="10">apr_brigade_create<pos:position pos:line="21" pos:column="28"/></name><argument_list pos:line="21" pos:column="28">(<argument><expr><name><name pos:line="21" pos:column="29">r<pos:position pos:line="21" pos:column="30"/></name><operator pos:line="21" pos:column="30">-&gt;<pos:position pos:line="21" pos:column="35"/></operator><name pos:line="21" pos:column="32">pool<pos:position pos:line="21" pos:column="36"/></name></name></expr></argument>, <argument><expr><name><name pos:line="21" pos:column="38">r<pos:position pos:line="21" pos:column="39"/></name><operator pos:line="21" pos:column="39">-&gt;<pos:position pos:line="21" pos:column="44"/></operator><name pos:line="21" pos:column="41">connection<pos:position pos:line="21" pos:column="51"/></name><operator pos:line="21" pos:column="51">-&gt;<pos:position pos:line="21" pos:column="56"/></operator><name pos:line="21" pos:column="53">bucket_alloc<pos:position pos:line="21" pos:column="65"/></name></name></expr></argument>)<pos:position pos:line="21" pos:column="66"/></argument_list></call></expr>;<pos:position pos:line="21" pos:column="67"/></expr_stmt>

    <while pos:line="23" pos:column="5">while <condition pos:line="23" pos:column="11">(<expr><operator pos:line="23" pos:column="12">!<pos:position pos:line="23" pos:column="13"/></operator><name pos:line="23" pos:column="13">done<pos:position pos:line="23" pos:column="17"/></name> <operator pos:line="23" pos:column="18">&amp;&amp;<pos:position pos:line="23" pos:column="28"/></operator> <name pos:line="23" pos:column="21">rv<pos:position pos:line="23" pos:column="23"/></name> <operator pos:line="23" pos:column="24">==<pos:position pos:line="23" pos:column="26"/></operator> <name pos:line="23" pos:column="27">APR_SUCCESS<pos:position pos:line="23" pos:column="38"/></name></expr>)<pos:position pos:line="23" pos:column="39"/></condition> <block pos:line="23" pos:column="40">{ <comment type="block" pos:line="23" pos:column="42">/* Keep reading FastCGI records until
                                          * we get AP_FCGI_END_REQUEST (done)
                                          * or an error occurs.
                                          */</comment>
        <decl_stmt><decl><type><name pos:line="27" pos:column="9">apr_size_t<pos:position pos:line="27" pos:column="19"/></name></type> <name pos:line="27" pos:column="20">readbuflen<pos:position pos:line="27" pos:column="30"/></name></decl>;<pos:position pos:line="27" pos:column="31"/></decl_stmt>
        <decl_stmt><decl><type><name pos:line="28" pos:column="9">apr_uint16_t<pos:position pos:line="28" pos:column="21"/></name></type> <name pos:line="28" pos:column="22">clen<pos:position pos:line="28" pos:column="26"/></name></decl>;<pos:position pos:line="28" pos:column="27"/></decl_stmt>
        <decl_stmt><decl><type><name pos:line="29" pos:column="9">apr_uint16_t<pos:position pos:line="29" pos:column="21"/></name></type> <name pos:line="29" pos:column="22">rid<pos:position pos:line="29" pos:column="25"/></name></decl>;<pos:position pos:line="29" pos:column="26"/></decl_stmt>
        <decl_stmt><decl><type><name pos:line="30" pos:column="9">char<pos:position pos:line="30" pos:column="13"/></name></type> <name><name pos:line="30" pos:column="14">readbuf<pos:position pos:line="30" pos:column="21"/></name><index pos:line="30" pos:column="21">[<expr><name pos:line="30" pos:column="22">AP_IOBUFSIZE<pos:position pos:line="30" pos:column="34"/></name> <operator pos:line="30" pos:column="35">+<pos:position pos:line="30" pos:column="36"/></operator> <literal type="number" pos:line="30" pos:column="37">1<pos:position pos:line="30" pos:column="38"/></literal></expr>]<pos:position pos:line="30" pos:column="39"/></index></name></decl>;<pos:position pos:line="30" pos:column="40"/></decl_stmt>
        <decl_stmt><decl><type><name pos:line="31" pos:column="9">unsigned<pos:position pos:line="31" pos:column="17"/></name> <name pos:line="31" pos:column="18">char<pos:position pos:line="31" pos:column="22"/></name></type> <name><name pos:line="31" pos:column="23">farray<pos:position pos:line="31" pos:column="29"/></name><index pos:line="31" pos:column="29">[<expr><name pos:line="31" pos:column="30">AP_FCGI_HEADER_LEN<pos:position pos:line="31" pos:column="48"/></name></expr>]<pos:position pos:line="31" pos:column="49"/></index></name></decl>;<pos:position pos:line="31" pos:column="50"/></decl_stmt>
        <decl_stmt><decl><type><name pos:line="32" pos:column="9">unsigned<pos:position pos:line="32" pos:column="17"/></name> <name pos:line="32" pos:column="18">char<pos:position pos:line="32" pos:column="22"/></name></type> <name pos:line="32" pos:column="23">plen<pos:position pos:line="32" pos:column="27"/></name></decl>;<pos:position pos:line="32" pos:column="28"/></decl_stmt>
        <decl_stmt><decl><type><name pos:line="33" pos:column="9">unsigned<pos:position pos:line="33" pos:column="17"/></name> <name pos:line="33" pos:column="18">char<pos:position pos:line="33" pos:column="22"/></name></type> <name pos:line="33" pos:column="23">type<pos:position pos:line="33" pos:column="27"/></name></decl>;<pos:position pos:line="33" pos:column="28"/></decl_stmt>
        <decl_stmt><decl><type><name pos:line="34" pos:column="9">unsigned<pos:position pos:line="34" pos:column="17"/></name> <name pos:line="34" pos:column="18">char<pos:position pos:line="34" pos:column="22"/></name></type> <name pos:line="34" pos:column="23">version<pos:position pos:line="34" pos:column="30"/></name></decl>;<pos:position pos:line="34" pos:column="31"/></decl_stmt>

        <expr_stmt><expr><name pos:line="36" pos:column="9">rv<pos:position pos:line="36" pos:column="11"/></name> <operator pos:line="36" pos:column="12">=<pos:position pos:line="36" pos:column="13"/></operator> <call><name pos:line="36" pos:column="14">recv_data_full<pos:position pos:line="36" pos:column="28"/></name><argument_list pos:line="36" pos:column="28">(<argument><expr><name pos:line="36" pos:column="29">conf<pos:position pos:line="36" pos:column="33"/></name></expr></argument>, <argument><expr><name pos:line="36" pos:column="35">r<pos:position pos:line="36" pos:column="36"/></name></expr></argument>, <argument><expr><name pos:line="36" pos:column="38">s<pos:position pos:line="36" pos:column="39"/></name></expr></argument>, <argument><expr><operator pos:line="36" pos:column="41">(<pos:position pos:line="36" pos:column="42"/></operator><name pos:line="36" pos:column="42">char<pos:position pos:line="36" pos:column="46"/></name> <operator pos:line="36" pos:column="47">*<pos:position pos:line="36" pos:column="48"/></operator><operator pos:line="36" pos:column="48">)<pos:position pos:line="36" pos:column="49"/></operator><name pos:line="36" pos:column="49">farray<pos:position pos:line="36" pos:column="55"/></name></expr></argument>, <argument><expr><name pos:line="36" pos:column="57">AP_FCGI_HEADER_LEN<pos:position pos:line="36" pos:column="75"/></name></expr></argument>)<pos:position pos:line="36" pos:column="76"/></argument_list></call></expr>;<pos:position pos:line="36" pos:column="77"/></expr_stmt>
        <if pos:line="37" pos:column="9">if <condition pos:line="37" pos:column="12">(<expr><name pos:line="37" pos:column="13">rv<pos:position pos:line="37" pos:column="15"/></name> <operator pos:line="37" pos:column="16">!=<pos:position pos:line="37" pos:column="18"/></operator> <name pos:line="37" pos:column="19">APR_SUCCESS<pos:position pos:line="37" pos:column="30"/></name></expr>)<pos:position pos:line="37" pos:column="31"/></condition><then pos:line="37" pos:column="31"> <block pos:line="37" pos:column="32">{
            <expr_stmt><expr><call><name pos:line="38" pos:column="13">ap_log_rerror<pos:position pos:line="38" pos:column="26"/></name><argument_list pos:line="38" pos:column="26">(<argument><expr><name pos:line="38" pos:column="27">APLOG_MARK<pos:position pos:line="38" pos:column="37"/></name></expr></argument>, <argument><expr><name pos:line="38" pos:column="39">APLOG_ERR<pos:position pos:line="38" pos:column="48"/></name></expr></argument>, <argument><expr><name pos:line="38" pos:column="50">rv<pos:position pos:line="38" pos:column="52"/></name></expr></argument>, <argument><expr><name pos:line="38" pos:column="54">r<pos:position pos:line="38" pos:column="55"/></name></expr></argument>,
                          <argument><expr><call><name pos:line="39" pos:column="27">APLOGNO<pos:position pos:line="39" pos:column="34"/></name><argument_list pos:line="39" pos:column="34">(<argument><expr><literal type="number" pos:line="39" pos:column="35">02501<pos:position pos:line="39" pos:column="40"/></literal></expr></argument>)<pos:position pos:line="39" pos:column="41"/></argument_list></call> <literal type="string" pos:line="39" pos:column="42">"%s: Error occurred before reading "<pos:position pos:line="39" pos:column="78"/></literal>
                          <literal type="string" pos:line="40" pos:column="27">"entire header"<pos:position pos:line="40" pos:column="42"/></literal></expr></argument>, <argument><expr><name pos:line="40" pos:column="44">fn<pos:position pos:line="40" pos:column="46"/></name></expr></argument>)<pos:position pos:line="40" pos:column="47"/></argument_list></call></expr>;<pos:position pos:line="40" pos:column="48"/></expr_stmt>
            <break pos:line="41" pos:column="13">break;<pos:position pos:line="41" pos:column="19"/></break>
        }<pos:position pos:line="42" pos:column="10"/></block></then></if>

        <expr_stmt><expr><call><name pos:line="44" pos:column="9">ap_fcgi_header_fields_from_array<pos:position pos:line="44" pos:column="41"/></name><argument_list pos:line="44" pos:column="41">(<argument><expr><operator pos:line="44" pos:column="42">&amp;<pos:position pos:line="44" pos:column="47"/></operator><name pos:line="44" pos:column="43">version<pos:position pos:line="44" pos:column="50"/></name></expr></argument>, <argument><expr><operator pos:line="44" pos:column="52">&amp;<pos:position pos:line="44" pos:column="57"/></operator><name pos:line="44" pos:column="53">type<pos:position pos:line="44" pos:column="57"/></name></expr></argument>, <argument><expr><operator pos:line="44" pos:column="59">&amp;<pos:position pos:line="44" pos:column="64"/></operator><name pos:line="44" pos:column="60">rid<pos:position pos:line="44" pos:column="63"/></name></expr></argument>, <argument><expr><operator pos:line="44" pos:column="65">&amp;<pos:position pos:line="44" pos:column="70"/></operator><name pos:line="44" pos:column="66">clen<pos:position pos:line="44" pos:column="70"/></name></expr></argument>, <argument><expr><operator pos:line="44" pos:column="72">&amp;<pos:position pos:line="44" pos:column="77"/></operator><name pos:line="44" pos:column="73">plen<pos:position pos:line="44" pos:column="77"/></name></expr></argument>,
                                         <argument><expr><name pos:line="45" pos:column="42">farray<pos:position pos:line="45" pos:column="48"/></name></expr></argument>)<pos:position pos:line="45" pos:column="49"/></argument_list></call></expr>;<pos:position pos:line="45" pos:column="50"/></expr_stmt>

        <if pos:line="47" pos:column="9">if <condition pos:line="47" pos:column="12">(<expr><name pos:line="47" pos:column="13">version<pos:position pos:line="47" pos:column="20"/></name> <operator pos:line="47" pos:column="21">!=<pos:position pos:line="47" pos:column="23"/></operator> <name pos:line="47" pos:column="24">AP_FCGI_VERSION_1<pos:position pos:line="47" pos:column="41"/></name></expr>)<pos:position pos:line="47" pos:column="42"/></condition><then pos:line="47" pos:column="42"> <block pos:line="47" pos:column="43">{
            <expr_stmt><expr><call><name pos:line="48" pos:column="13">ap_log_rerror<pos:position pos:line="48" pos:column="26"/></name><argument_list pos:line="48" pos:column="26">(<argument><expr><name pos:line="48" pos:column="27">APLOG_MARK<pos:position pos:line="48" pos:column="37"/></name></expr></argument>, <argument><expr><name pos:line="48" pos:column="39">APLOG_ERR<pos:position pos:line="48" pos:column="48"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="48" pos:column="50">0<pos:position pos:line="48" pos:column="51"/></literal></expr></argument>, <argument><expr><name pos:line="48" pos:column="53">r<pos:position pos:line="48" pos:column="54"/></name></expr></argument>,
                          <argument><expr><call><name pos:line="49" pos:column="27">APLOGNO<pos:position pos:line="49" pos:column="34"/></name><argument_list pos:line="49" pos:column="34">(<argument><expr><literal type="number" pos:line="49" pos:column="35">02502<pos:position pos:line="49" pos:column="40"/></literal></expr></argument>)<pos:position pos:line="49" pos:column="41"/></argument_list></call> <literal type="string" pos:line="49" pos:column="42">"%s: Got bogus FastCGI header "<pos:position pos:line="49" pos:column="73"/></literal>
                          <literal type="string" pos:line="50" pos:column="27">"version %d"<pos:position pos:line="50" pos:column="39"/></literal></expr></argument>, <argument><expr><name pos:line="50" pos:column="41">fn<pos:position pos:line="50" pos:column="43"/></name></expr></argument>, <argument><expr><operator pos:line="50" pos:column="45">(<pos:position pos:line="50" pos:column="46"/></operator><name pos:line="50" pos:column="46">int<pos:position pos:line="50" pos:column="49"/></name><operator pos:line="50" pos:column="49">)<pos:position pos:line="50" pos:column="50"/></operator><name pos:line="50" pos:column="50">version<pos:position pos:line="50" pos:column="57"/></name></expr></argument>)<pos:position pos:line="50" pos:column="58"/></argument_list></call></expr>;<pos:position pos:line="50" pos:column="59"/></expr_stmt>
            <expr_stmt><expr><name pos:line="51" pos:column="13">rv<pos:position pos:line="51" pos:column="15"/></name> <operator pos:line="51" pos:column="16">=<pos:position pos:line="51" pos:column="17"/></operator> <name pos:line="51" pos:column="18">APR_EINVAL<pos:position pos:line="51" pos:column="28"/></name></expr>;<pos:position pos:line="51" pos:column="29"/></expr_stmt>
            <break pos:line="52" pos:column="13">break;<pos:position pos:line="52" pos:column="19"/></break>
        }<pos:position pos:line="53" pos:column="10"/></block></then></if>

        <if pos:line="55" pos:column="9">if <condition pos:line="55" pos:column="12">(<expr><name pos:line="55" pos:column="13">rid<pos:position pos:line="55" pos:column="16"/></name> <operator pos:line="55" pos:column="17">!=<pos:position pos:line="55" pos:column="19"/></operator> <name pos:line="55" pos:column="20">request_id<pos:position pos:line="55" pos:column="30"/></name></expr>)<pos:position pos:line="55" pos:column="31"/></condition><then pos:line="55" pos:column="31"> <block pos:line="55" pos:column="32">{
            <expr_stmt><expr><call><name pos:line="56" pos:column="13">ap_log_rerror<pos:position pos:line="56" pos:column="26"/></name><argument_list pos:line="56" pos:column="26">(<argument><expr><name pos:line="56" pos:column="27">APLOG_MARK<pos:position pos:line="56" pos:column="37"/></name></expr></argument>, <argument><expr><name pos:line="56" pos:column="39">APLOG_ERR<pos:position pos:line="56" pos:column="48"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="56" pos:column="50">0<pos:position pos:line="56" pos:column="51"/></literal></expr></argument>, <argument><expr><name pos:line="56" pos:column="53">r<pos:position pos:line="56" pos:column="54"/></name></expr></argument>,
                          <argument><expr><call><name pos:line="57" pos:column="27">APLOGNO<pos:position pos:line="57" pos:column="34"/></name><argument_list pos:line="57" pos:column="34">(<argument><expr><literal type="number" pos:line="57" pos:column="35">02503<pos:position pos:line="57" pos:column="40"/></literal></expr></argument>)<pos:position pos:line="57" pos:column="41"/></argument_list></call> <literal type="string" pos:line="57" pos:column="42">"%s: Got bogus FastCGI header "<pos:position pos:line="57" pos:column="73"/></literal>
                          <literal type="string" pos:line="58" pos:column="27">"request id %d, expected %d"<pos:position pos:line="58" pos:column="55"/></literal></expr></argument>,
                          <argument><expr><name pos:line="59" pos:column="27">fn<pos:position pos:line="59" pos:column="29"/></name></expr></argument>, <argument><expr><name pos:line="59" pos:column="31">rid<pos:position pos:line="59" pos:column="34"/></name></expr></argument>, <argument><expr><name pos:line="59" pos:column="36">request_id<pos:position pos:line="59" pos:column="46"/></name></expr></argument>)<pos:position pos:line="59" pos:column="47"/></argument_list></call></expr>;<pos:position pos:line="59" pos:column="48"/></expr_stmt>
            <expr_stmt><expr><name pos:line="60" pos:column="13">rv<pos:position pos:line="60" pos:column="15"/></name> <operator pos:line="60" pos:column="16">=<pos:position pos:line="60" pos:column="17"/></operator> <name pos:line="60" pos:column="18">APR_EINVAL<pos:position pos:line="60" pos:column="28"/></name></expr>;<pos:position pos:line="60" pos:column="29"/></expr_stmt>
            <break pos:line="61" pos:column="13">break;<pos:position pos:line="61" pos:column="19"/></break>
        }<pos:position pos:line="62" pos:column="10"/></block></then></if>

    <label><name pos:line="64" pos:column="5">recv_again<pos:position pos:line="64" pos:column="15"/></name>:<pos:position pos:line="64" pos:column="16"/></label> <comment type="block" pos:line="64" pos:column="17">/* if we need to keep reading more of a record's content */</comment>

        <if pos:line="66" pos:column="9">if <condition pos:line="66" pos:column="12">(<expr><name pos:line="66" pos:column="13">clen<pos:position pos:line="66" pos:column="17"/></name> <operator pos:line="66" pos:column="18">&gt;<pos:position pos:line="66" pos:column="22"/></operator> <sizeof pos:line="66" pos:column="20">sizeof<argument_list pos:line="66" pos:column="26">(<argument><expr><name pos:line="66" pos:column="27">readbuf<pos:position pos:line="66" pos:column="34"/></name></expr></argument>)<pos:position pos:line="66" pos:column="35"/></argument_list></sizeof> <operator pos:line="66" pos:column="36">-<pos:position pos:line="66" pos:column="37"/></operator> <literal type="number" pos:line="66" pos:column="38">1<pos:position pos:line="66" pos:column="39"/></literal></expr>)<pos:position pos:line="66" pos:column="40"/></condition><then pos:line="66" pos:column="40"> <block pos:line="66" pos:column="41">{
            <expr_stmt><expr><name pos:line="67" pos:column="13">readbuflen<pos:position pos:line="67" pos:column="23"/></name> <operator pos:line="67" pos:column="24">=<pos:position pos:line="67" pos:column="25"/></operator> <sizeof pos:line="67" pos:column="26">sizeof<argument_list pos:line="67" pos:column="32">(<argument><expr><name pos:line="67" pos:column="33">readbuf<pos:position pos:line="67" pos:column="40"/></name></expr></argument>)<pos:position pos:line="67" pos:column="41"/></argument_list></sizeof> <operator pos:line="67" pos:column="42">-<pos:position pos:line="67" pos:column="43"/></operator> <literal type="number" pos:line="67" pos:column="44">1<pos:position pos:line="67" pos:column="45"/></literal></expr>;<pos:position pos:line="67" pos:column="46"/></expr_stmt>
        }<pos:position pos:line="68" pos:column="10"/></block></then> <else pos:line="68" pos:column="11">else <block pos:line="68" pos:column="16">{
            <expr_stmt><expr><name pos:line="69" pos:column="13">readbuflen<pos:position pos:line="69" pos:column="23"/></name> <operator pos:line="69" pos:column="24">=<pos:position pos:line="69" pos:column="25"/></operator> <name pos:line="69" pos:column="26">clen<pos:position pos:line="69" pos:column="30"/></name></expr>;<pos:position pos:line="69" pos:column="31"/></expr_stmt>
        }<pos:position pos:line="70" pos:column="10"/></block></else></if>

        <comment type="block" pos:line="72" pos:column="9">/*
         * Now get the actual content of the record.
         */</comment>
        <if pos:line="75" pos:column="9">if <condition pos:line="75" pos:column="12">(<expr><name pos:line="75" pos:column="13">readbuflen<pos:position pos:line="75" pos:column="23"/></name> <operator pos:line="75" pos:column="24">!=<pos:position pos:line="75" pos:column="26"/></operator> <literal type="number" pos:line="75" pos:column="27">0<pos:position pos:line="75" pos:column="28"/></literal></expr>)<pos:position pos:line="75" pos:column="29"/></condition><then pos:line="75" pos:column="29"> <block pos:line="75" pos:column="30">{
            <expr_stmt><expr><name pos:line="76" pos:column="13">rv<pos:position pos:line="76" pos:column="15"/></name> <operator pos:line="76" pos:column="16">=<pos:position pos:line="76" pos:column="17"/></operator> <call><name pos:line="76" pos:column="18">recv_data<pos:position pos:line="76" pos:column="27"/></name><argument_list pos:line="76" pos:column="27">(<argument><expr><name pos:line="76" pos:column="28">conf<pos:position pos:line="76" pos:column="32"/></name></expr></argument>, <argument><expr><name pos:line="76" pos:column="34">r<pos:position pos:line="76" pos:column="35"/></name></expr></argument>, <argument><expr><name pos:line="76" pos:column="37">s<pos:position pos:line="76" pos:column="38"/></name></expr></argument>, <argument><expr><name pos:line="76" pos:column="40">readbuf<pos:position pos:line="76" pos:column="47"/></name></expr></argument>, <argument><expr><operator pos:line="76" pos:column="49">&amp;<pos:position pos:line="76" pos:column="54"/></operator><name pos:line="76" pos:column="50">readbuflen<pos:position pos:line="76" pos:column="60"/></name></expr></argument>)<pos:position pos:line="76" pos:column="61"/></argument_list></call></expr>;<pos:position pos:line="76" pos:column="62"/></expr_stmt>
            <if pos:line="77" pos:column="13">if <condition pos:line="77" pos:column="16">(<expr><name pos:line="77" pos:column="17">rv<pos:position pos:line="77" pos:column="19"/></name> <operator pos:line="77" pos:column="20">!=<pos:position pos:line="77" pos:column="22"/></operator> <name pos:line="77" pos:column="23">APR_SUCCESS<pos:position pos:line="77" pos:column="34"/></name></expr>)<pos:position pos:line="77" pos:column="35"/></condition><then pos:line="77" pos:column="35"> <block pos:line="77" pos:column="36">{
                <break pos:line="78" pos:column="17">break;<pos:position pos:line="78" pos:column="23"/></break>
            }<pos:position pos:line="79" pos:column="14"/></block></then></if>
            <expr_stmt><expr><name><name pos:line="80" pos:column="13">readbuf<pos:position pos:line="80" pos:column="20"/></name><index pos:line="80" pos:column="20">[<expr><name pos:line="80" pos:column="21">readbuflen<pos:position pos:line="80" pos:column="31"/></name></expr>]<pos:position pos:line="80" pos:column="32"/></index></name> <operator pos:line="80" pos:column="33">=<pos:position pos:line="80" pos:column="34"/></operator> <literal type="char" pos:line="80" pos:column="35">'\0'<pos:position pos:line="80" pos:column="39"/></literal></expr>;<pos:position pos:line="80" pos:column="40"/></expr_stmt>
        }<pos:position pos:line="81" pos:column="10"/></block></then></if>

        <switch pos:line="83" pos:column="9">switch <condition pos:line="83" pos:column="16">(<expr><name pos:line="83" pos:column="17">type<pos:position pos:line="83" pos:column="21"/></name></expr>)<pos:position pos:line="83" pos:column="22"/></condition> <block pos:line="83" pos:column="23">{
        <case pos:line="84" pos:column="9">case <expr><name pos:line="84" pos:column="14">AP_FCGI_STDOUT<pos:position pos:line="84" pos:column="28"/></name></expr>:<pos:position pos:line="84" pos:column="29"/></case> <comment type="block" pos:line="84" pos:column="30">/* Response headers and optional body */</comment>
            <if pos:line="85" pos:column="13">if <condition pos:line="85" pos:column="16">(<expr><name pos:line="85" pos:column="17">clen<pos:position pos:line="85" pos:column="21"/></name> <operator pos:line="85" pos:column="22">!=<pos:position pos:line="85" pos:column="24"/></operator> <literal type="number" pos:line="85" pos:column="25">0<pos:position pos:line="85" pos:column="26"/></literal></expr>)<pos:position pos:line="85" pos:column="27"/></condition><then pos:line="85" pos:column="27"> <block pos:line="85" pos:column="28">{
                <expr_stmt><expr><name pos:line="86" pos:column="17">b<pos:position pos:line="86" pos:column="18"/></name> <operator pos:line="86" pos:column="19">=<pos:position pos:line="86" pos:column="20"/></operator> <call><name pos:line="86" pos:column="21">apr_bucket_transient_create<pos:position pos:line="86" pos:column="48"/></name><argument_list pos:line="86" pos:column="48">(<argument><expr><name pos:line="86" pos:column="49">readbuf<pos:position pos:line="86" pos:column="56"/></name></expr></argument>,
                                                <argument><expr><name pos:line="87" pos:column="49">readbuflen<pos:position pos:line="87" pos:column="59"/></name></expr></argument>,
                                                <argument><expr><name><name pos:line="88" pos:column="49">r<pos:position pos:line="88" pos:column="50"/></name><operator pos:line="88" pos:column="50">-&gt;<pos:position pos:line="88" pos:column="55"/></operator><name pos:line="88" pos:column="52">connection<pos:position pos:line="88" pos:column="62"/></name><operator pos:line="88" pos:column="62">-&gt;<pos:position pos:line="88" pos:column="67"/></operator><name pos:line="88" pos:column="64">bucket_alloc<pos:position pos:line="88" pos:column="76"/></name></name></expr></argument>)<pos:position pos:line="88" pos:column="77"/></argument_list></call></expr>;<pos:position pos:line="88" pos:column="78"/></expr_stmt>

                <expr_stmt><expr><call><name pos:line="90" pos:column="17">APR_BRIGADE_INSERT_TAIL<pos:position pos:line="90" pos:column="40"/></name><argument_list pos:line="90" pos:column="40">(<argument><expr><name pos:line="90" pos:column="41">ob<pos:position pos:line="90" pos:column="43"/></name></expr></argument>, <argument><expr><name pos:line="90" pos:column="45">b<pos:position pos:line="90" pos:column="46"/></name></expr></argument>)<pos:position pos:line="90" pos:column="47"/></argument_list></call></expr>;<pos:position pos:line="90" pos:column="48"/></expr_stmt>

                <if pos:line="92" pos:column="17">if <condition pos:line="92" pos:column="20">(<expr><operator pos:line="92" pos:column="21">!<pos:position pos:line="92" pos:column="22"/></operator><name pos:line="92" pos:column="22">seen_end_of_headers<pos:position pos:line="92" pos:column="41"/></name></expr>)<pos:position pos:line="92" pos:column="42"/></condition><then pos:line="92" pos:column="42"> <block pos:line="92" pos:column="43">{
                    <decl_stmt><decl><type><name pos:line="93" pos:column="21">int<pos:position pos:line="93" pos:column="24"/></name></type> <name pos:line="93" pos:column="25">st<pos:position pos:line="93" pos:column="27"/></name> <init pos:line="93" pos:column="28">= <expr><call><name pos:line="93" pos:column="30">handle_headers<pos:position pos:line="93" pos:column="44"/></name><argument_list pos:line="93" pos:column="44">(<argument><expr><name pos:line="93" pos:column="45">r<pos:position pos:line="93" pos:column="46"/></name></expr></argument>, <argument><expr><operator pos:line="93" pos:column="48">&amp;<pos:position pos:line="93" pos:column="53"/></operator><name pos:line="93" pos:column="49">header_state<pos:position pos:line="93" pos:column="61"/></name></expr></argument>,
                                            <argument><expr><name pos:line="94" pos:column="45">readbuf<pos:position pos:line="94" pos:column="52"/></name></expr></argument>, <argument><expr><name pos:line="94" pos:column="54">readbuflen<pos:position pos:line="94" pos:column="64"/></name></expr></argument>)<pos:position pos:line="94" pos:column="65"/></argument_list></call></expr></init></decl>;<pos:position pos:line="94" pos:column="66"/></decl_stmt>

                    <if pos:line="96" pos:column="21">if <condition pos:line="96" pos:column="24">(<expr><name pos:line="96" pos:column="25">st<pos:position pos:line="96" pos:column="27"/></name> <operator pos:line="96" pos:column="28">==<pos:position pos:line="96" pos:column="30"/></operator> <literal type="number" pos:line="96" pos:column="31">1<pos:position pos:line="96" pos:column="32"/></literal></expr>)<pos:position pos:line="96" pos:column="33"/></condition><then pos:line="96" pos:column="33"> <block pos:line="96" pos:column="34">{
                        <decl_stmt><decl><type><name pos:line="97" pos:column="25">int<pos:position pos:line="97" pos:column="28"/></name></type> <name pos:line="97" pos:column="29">status<pos:position pos:line="97" pos:column="35"/></name></decl>;<pos:position pos:line="97" pos:column="36"/></decl_stmt>

                        <expr_stmt><expr><name pos:line="99" pos:column="25">seen_end_of_headers<pos:position pos:line="99" pos:column="44"/></name> <operator pos:line="99" pos:column="45">=<pos:position pos:line="99" pos:column="46"/></operator> <literal type="number" pos:line="99" pos:column="47">1<pos:position pos:line="99" pos:column="48"/></literal></expr>;<pos:position pos:line="99" pos:column="49"/></expr_stmt>

                        <expr_stmt><expr><name pos:line="101" pos:column="25">status<pos:position pos:line="101" pos:column="31"/></name> <operator pos:line="101" pos:column="32">=<pos:position pos:line="101" pos:column="33"/></operator>
                            <call><name pos:line="102" pos:column="29">ap_scan_script_header_err_brigade_ex<pos:position pos:line="102" pos:column="65"/></name><argument_list pos:line="102" pos:column="65">(<argument><expr><name pos:line="102" pos:column="66">r<pos:position pos:line="102" pos:column="67"/></name></expr></argument>, <argument><expr><name pos:line="102" pos:column="69">ob<pos:position pos:line="102" pos:column="71"/></name></expr></argument>,
                                                                 <argument><expr><name pos:line="103" pos:column="66">NULL<pos:position pos:line="103" pos:column="70"/></name></expr></argument>, 
                                                                 <argument><expr><name pos:line="104" pos:column="66">APLOG_MODULE_INDEX<pos:position pos:line="104" pos:column="84"/></name></expr></argument>)<pos:position pos:line="104" pos:column="85"/></argument_list></call></expr>;<pos:position pos:line="104" pos:column="86"/></expr_stmt>
                        <expr_stmt><expr><call><name pos:line="105" pos:column="25">ap_log_rerror<pos:position pos:line="105" pos:column="38"/></name><argument_list pos:line="105" pos:column="38">(<argument><expr><name pos:line="105" pos:column="39">APLOG_MARK<pos:position pos:line="105" pos:column="49"/></name></expr></argument>, <argument><expr><name pos:line="105" pos:column="51">APLOG_DEBUG<pos:position pos:line="105" pos:column="62"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="105" pos:column="64">0<pos:position pos:line="105" pos:column="65"/></literal></expr></argument>, <argument><expr><name pos:line="105" pos:column="67">r<pos:position pos:line="105" pos:column="68"/></name></expr></argument>,
                                      <argument><expr><call><name pos:line="106" pos:column="39">APLOGNO<pos:position pos:line="106" pos:column="46"/></name><argument_list pos:line="106" pos:column="46">(<argument><expr><literal type="number" pos:line="106" pos:column="47">02504<pos:position pos:line="106" pos:column="52"/></literal></expr></argument>)<pos:position pos:line="106" pos:column="53"/></argument_list></call> <literal type="string" pos:line="106" pos:column="54">"%s: script header "<pos:position pos:line="106" pos:column="74"/></literal>
                                      <literal type="string" pos:line="107" pos:column="39">"parsing -&gt; %d/%d"<pos:position pos:line="107" pos:column="60"/></literal></expr></argument>,
                                      <argument><expr><name pos:line="108" pos:column="39">fn<pos:position pos:line="108" pos:column="41"/></name></expr></argument>, <argument><expr><name pos:line="108" pos:column="43">status<pos:position pos:line="108" pos:column="49"/></name></expr></argument>, <argument><expr><name><name pos:line="108" pos:column="51">r<pos:position pos:line="108" pos:column="52"/></name><operator pos:line="108" pos:column="52">-&gt;<pos:position pos:line="108" pos:column="57"/></operator><name pos:line="108" pos:column="54">status<pos:position pos:line="108" pos:column="60"/></name></name></expr></argument>)<pos:position pos:line="108" pos:column="61"/></argument_list></call></expr>;<pos:position pos:line="108" pos:column="62"/></expr_stmt>

                        <if pos:line="110" pos:column="25">if <condition pos:line="110" pos:column="28">(<expr><name pos:line="110" pos:column="29">rspbuf<pos:position pos:line="110" pos:column="35"/></name></expr>)<pos:position pos:line="110" pos:column="36"/></condition><then pos:line="110" pos:column="36"> <block pos:line="110" pos:column="37">{ <comment type="block" pos:line="110" pos:column="39">/* caller wants to see response body,
                                       * if any
                                       */</comment>
                            <decl_stmt><decl><type><name pos:line="113" pos:column="29">apr_status_t<pos:position pos:line="113" pos:column="41"/></name></type> <name pos:line="113" pos:column="42">tmprv<pos:position pos:line="113" pos:column="47"/></name></decl>;<pos:position pos:line="113" pos:column="48"/></decl_stmt>

                            <if pos:line="115" pos:column="29">if <condition pos:line="115" pos:column="32">(<expr><name pos:line="115" pos:column="33">rspbuflen<pos:position pos:line="115" pos:column="42"/></name></expr>)<pos:position pos:line="115" pos:column="43"/></condition><then pos:line="115" pos:column="43"> <block pos:line="115" pos:column="44">{
                                <expr_stmt><expr><operator pos:line="116" pos:column="33">*<pos:position pos:line="116" pos:column="34"/></operator><name pos:line="116" pos:column="34">rspbuflen<pos:position pos:line="116" pos:column="43"/></name> <operator pos:line="116" pos:column="44">=<pos:position pos:line="116" pos:column="45"/></operator> <name pos:line="116" pos:column="46">orspbuflen<pos:position pos:line="116" pos:column="56"/></name></expr>;<pos:position pos:line="116" pos:column="57"/></expr_stmt>
                            }<pos:position pos:line="117" pos:column="30"/></block></then></if>
                            <expr_stmt><expr><name pos:line="118" pos:column="29">tmprv<pos:position pos:line="118" pos:column="34"/></name> <operator pos:line="118" pos:column="35">=<pos:position pos:line="118" pos:column="36"/></operator> <call><name pos:line="118" pos:column="37">apr_brigade_flatten<pos:position pos:line="118" pos:column="56"/></name><argument_list pos:line="118" pos:column="56">(<argument><expr><name pos:line="118" pos:column="57">ob<pos:position pos:line="118" pos:column="59"/></name></expr></argument>, <argument><expr><name pos:line="118" pos:column="61">rspbuf<pos:position pos:line="118" pos:column="67"/></name></expr></argument>, <argument><expr><name pos:line="118" pos:column="69">rspbuflen<pos:position pos:line="118" pos:column="78"/></name></expr></argument>)<pos:position pos:line="118" pos:column="79"/></argument_list></call></expr>;<pos:position pos:line="118" pos:column="80"/></expr_stmt>
                            <if pos:line="119" pos:column="29">if <condition pos:line="119" pos:column="32">(<expr><name pos:line="119" pos:column="33">tmprv<pos:position pos:line="119" pos:column="38"/></name> <operator pos:line="119" pos:column="39">!=<pos:position pos:line="119" pos:column="41"/></operator> <name pos:line="119" pos:column="42">APR_SUCCESS<pos:position pos:line="119" pos:column="53"/></name></expr>)<pos:position pos:line="119" pos:column="54"/></condition><then pos:line="119" pos:column="54"> <block pos:line="119" pos:column="55">{
                                <comment type="block" pos:line="120" pos:column="33">/* should not occur for these bucket types;
                                 * does not indicate overflow
                                 */</comment>
                                <expr_stmt><expr><call><name pos:line="123" pos:column="33">ap_log_rerror<pos:position pos:line="123" pos:column="46"/></name><argument_list pos:line="123" pos:column="46">(<argument><expr><name pos:line="123" pos:column="47">APLOG_MARK<pos:position pos:line="123" pos:column="57"/></name></expr></argument>, <argument><expr><name pos:line="123" pos:column="59">APLOG_ERR<pos:position pos:line="123" pos:column="68"/></name></expr></argument>, <argument><expr><name pos:line="123" pos:column="70">tmprv<pos:position pos:line="123" pos:column="75"/></name></expr></argument>, <argument><expr><name pos:line="123" pos:column="77">r<pos:position pos:line="123" pos:column="78"/></name></expr></argument>,
                                              <argument><expr><call><name pos:line="124" pos:column="47">APLOGNO<pos:position pos:line="124" pos:column="54"/></name><argument_list pos:line="124" pos:column="54">(<argument><expr><literal type="number" pos:line="124" pos:column="55">02505<pos:position pos:line="124" pos:column="60"/></literal></expr></argument>)<pos:position pos:line="124" pos:column="61"/></argument_list></call> <literal type="string" pos:line="124" pos:column="62">"%s: error "<pos:position pos:line="124" pos:column="74"/></literal>
                                              <literal type="string" pos:line="125" pos:column="47">"flattening response body"<pos:position pos:line="125" pos:column="73"/></literal></expr></argument>,
                                              <argument><expr><name pos:line="126" pos:column="47">fn<pos:position pos:line="126" pos:column="49"/></name></expr></argument>)<pos:position pos:line="126" pos:column="50"/></argument_list></call></expr>;<pos:position pos:line="126" pos:column="51"/></expr_stmt>
                            }<pos:position pos:line="127" pos:column="30"/></block></then></if>
                        }<pos:position pos:line="128" pos:column="26"/></block></then></if>

                        <if pos:line="130" pos:column="25">if <condition pos:line="130" pos:column="28">(<expr><name pos:line="130" pos:column="29">status<pos:position pos:line="130" pos:column="35"/></name> <operator pos:line="130" pos:column="36">!=<pos:position pos:line="130" pos:column="38"/></operator> <name pos:line="130" pos:column="39">OK<pos:position pos:line="130" pos:column="41"/></name></expr>)<pos:position pos:line="130" pos:column="42"/></condition><then pos:line="130" pos:column="42"> <block pos:line="130" pos:column="43">{
                            <expr_stmt><expr><name><name pos:line="131" pos:column="29">r<pos:position pos:line="131" pos:column="30"/></name><operator pos:line="131" pos:column="30">-&gt;<pos:position pos:line="131" pos:column="35"/></operator><name pos:line="131" pos:column="32">status<pos:position pos:line="131" pos:column="38"/></name></name> <operator pos:line="131" pos:column="39">=<pos:position pos:line="131" pos:column="40"/></operator> <name pos:line="131" pos:column="41">status<pos:position pos:line="131" pos:column="47"/></name></expr>;<pos:position pos:line="131" pos:column="48"/></expr_stmt>
                            <expr_stmt><expr><call><name pos:line="132" pos:column="29">ap_log_rerror<pos:position pos:line="132" pos:column="42"/></name><argument_list pos:line="132" pos:column="42">(<argument><expr><name pos:line="132" pos:column="43">APLOG_MARK<pos:position pos:line="132" pos:column="53"/></name></expr></argument>, <argument><expr><name pos:line="132" pos:column="55">APLOG_ERR<pos:position pos:line="132" pos:column="64"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="132" pos:column="66">0<pos:position pos:line="132" pos:column="67"/></literal></expr></argument>, <argument><expr><name pos:line="132" pos:column="69">r<pos:position pos:line="132" pos:column="70"/></name></expr></argument>,
                                          <argument><expr><call><name pos:line="133" pos:column="43">APLOGNO<pos:position pos:line="133" pos:column="50"/></name><argument_list pos:line="133" pos:column="50">(<argument><expr><literal type="number" pos:line="133" pos:column="51">02506<pos:position pos:line="133" pos:column="56"/></literal></expr></argument>)<pos:position pos:line="133" pos:column="57"/></argument_list></call> <literal type="string" pos:line="133" pos:column="58">"%s: Error parsing "<pos:position pos:line="133" pos:column="78"/></literal>
                                          <literal type="string" pos:line="134" pos:column="43">"script headers from %s"<pos:position pos:line="134" pos:column="67"/></literal></expr></argument>,
                                          <argument><expr><name pos:line="135" pos:column="43">fn<pos:position pos:line="135" pos:column="45"/></name></expr></argument>, <argument><expr><name><name pos:line="135" pos:column="47">conf<pos:position pos:line="135" pos:column="51"/></name><operator pos:line="135" pos:column="51">-&gt;<pos:position pos:line="135" pos:column="56"/></operator><name pos:line="135" pos:column="53">backend<pos:position pos:line="135" pos:column="60"/></name></name></expr></argument>)<pos:position pos:line="135" pos:column="61"/></argument_list></call></expr>;<pos:position pos:line="135" pos:column="62"/></expr_stmt>
                            <expr_stmt><expr><name pos:line="136" pos:column="29">rv<pos:position pos:line="136" pos:column="31"/></name> <operator pos:line="136" pos:column="32">=<pos:position pos:line="136" pos:column="33"/></operator> <name pos:line="136" pos:column="34">APR_EINVAL<pos:position pos:line="136" pos:column="44"/></name></expr>;<pos:position pos:line="136" pos:column="45"/></expr_stmt>
                            <break pos:line="137" pos:column="29">break;<pos:position pos:line="137" pos:column="35"/></break>
                        }<pos:position pos:line="138" pos:column="26"/></block></then></if>
                        <expr_stmt><expr><call><name pos:line="139" pos:column="25">apr_pool_clear<pos:position pos:line="139" pos:column="39"/></name><argument_list pos:line="139" pos:column="39">(<argument><expr><name pos:line="139" pos:column="40">temp_pool<pos:position pos:line="139" pos:column="49"/></name></expr></argument>)<pos:position pos:line="139" pos:column="50"/></argument_list></call></expr>;<pos:position pos:line="139" pos:column="51"/></expr_stmt>
                    }<pos:position pos:line="140" pos:column="22"/></block></then>
                    <else pos:line="141" pos:column="21">else <block pos:line="141" pos:column="26">{
                        <comment type="block" pos:line="142" pos:column="25">/* We're still looking for the end of the
                         * headers, so this part of the data will need
                         * to persist. */</comment>
                        <expr_stmt><expr><call><name pos:line="145" pos:column="25">apr_bucket_setaside<pos:position pos:line="145" pos:column="44"/></name><argument_list pos:line="145" pos:column="44">(<argument><expr><name pos:line="145" pos:column="45">b<pos:position pos:line="145" pos:column="46"/></name></expr></argument>, <argument><expr><name pos:line="145" pos:column="48">temp_pool<pos:position pos:line="145" pos:column="57"/></name></expr></argument>)<pos:position pos:line="145" pos:column="58"/></argument_list></call></expr>;<pos:position pos:line="145" pos:column="59"/></expr_stmt>
                    }<pos:position pos:line="146" pos:column="22"/></block></else></if>
                }<pos:position pos:line="147" pos:column="18"/></block></then></if>

                <comment type="block" pos:line="149" pos:column="17">/* If we didn't read all the data go back and get the
                 * rest of it. */</comment>
                <if pos:line="151" pos:column="17">if <condition pos:line="151" pos:column="20">(<expr><name pos:line="151" pos:column="21">clen<pos:position pos:line="151" pos:column="25"/></name> <operator pos:line="151" pos:column="26">&gt;<pos:position pos:line="151" pos:column="30"/></operator> <name pos:line="151" pos:column="28">readbuflen<pos:position pos:line="151" pos:column="38"/></name></expr>)<pos:position pos:line="151" pos:column="39"/></condition><then pos:line="151" pos:column="39"> <block pos:line="151" pos:column="40">{
                    <expr_stmt><expr><name pos:line="152" pos:column="21">clen<pos:position pos:line="152" pos:column="25"/></name> <operator pos:line="152" pos:column="26">-=<pos:position pos:line="152" pos:column="28"/></operator> <name pos:line="152" pos:column="29">readbuflen<pos:position pos:line="152" pos:column="39"/></name></expr>;<pos:position pos:line="152" pos:column="40"/></expr_stmt>
                    <goto pos:line="153" pos:column="21">goto <name pos:line="153" pos:column="26">recv_again<pos:position pos:line="153" pos:column="36"/></name>;<pos:position pos:line="153" pos:column="37"/></goto>
                }<pos:position pos:line="154" pos:column="18"/></block></then></if>
            }<pos:position pos:line="155" pos:column="14"/></block></then></if>
            <break pos:line="156" pos:column="13">break;<pos:position pos:line="156" pos:column="19"/></break>

        <case pos:line="158" pos:column="9">case <expr><name pos:line="158" pos:column="14">AP_FCGI_STDERR<pos:position pos:line="158" pos:column="28"/></name></expr>:<pos:position pos:line="158" pos:column="29"/></case> <comment type="block" pos:line="158" pos:column="30">/* Text to log */</comment>
            <if pos:line="159" pos:column="13">if <condition pos:line="159" pos:column="16">(<expr><name pos:line="159" pos:column="17">clen<pos:position pos:line="159" pos:column="21"/></name></expr>)<pos:position pos:line="159" pos:column="22"/></condition><then pos:line="159" pos:column="22"> <block pos:line="159" pos:column="23">{
                <expr_stmt><expr><call><name pos:line="160" pos:column="17">ap_log_rerror<pos:position pos:line="160" pos:column="30"/></name><argument_list pos:line="160" pos:column="30">(<argument><expr><name pos:line="160" pos:column="31">APLOG_MARK<pos:position pos:line="160" pos:column="41"/></name></expr></argument>, <argument><expr><name pos:line="160" pos:column="43">APLOG_WARNING<pos:position pos:line="160" pos:column="56"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="160" pos:column="58">0<pos:position pos:line="160" pos:column="59"/></literal></expr></argument>, <argument><expr><name pos:line="160" pos:column="61">r<pos:position pos:line="160" pos:column="62"/></name></expr></argument>,
                              <argument><expr><call><name pos:line="161" pos:column="31">APLOGNO<pos:position pos:line="161" pos:column="38"/></name><argument_list pos:line="161" pos:column="38">(<argument><expr><literal type="number" pos:line="161" pos:column="39">02507<pos:position pos:line="161" pos:column="44"/></literal></expr></argument>)<pos:position pos:line="161" pos:column="45"/></argument_list></call> <literal type="string" pos:line="161" pos:column="46">"%s: Logged from %s: '%s'"<pos:position pos:line="161" pos:column="72"/></literal></expr></argument>,
                              <argument><expr><name pos:line="162" pos:column="31">fn<pos:position pos:line="162" pos:column="33"/></name></expr></argument>, <argument><expr><name><name pos:line="162" pos:column="35">conf<pos:position pos:line="162" pos:column="39"/></name><operator pos:line="162" pos:column="39">-&gt;<pos:position pos:line="162" pos:column="44"/></operator><name pos:line="162" pos:column="41">backend<pos:position pos:line="162" pos:column="48"/></name></name></expr></argument>, <argument><expr><name pos:line="162" pos:column="50">readbuf<pos:position pos:line="162" pos:column="57"/></name></expr></argument>)<pos:position pos:line="162" pos:column="58"/></argument_list></call></expr>;<pos:position pos:line="162" pos:column="59"/></expr_stmt>
            }<pos:position pos:line="163" pos:column="14"/></block></then></if>

            <if pos:line="165" pos:column="13">if <condition pos:line="165" pos:column="16">(<expr><name pos:line="165" pos:column="17">clen<pos:position pos:line="165" pos:column="21"/></name> <operator pos:line="165" pos:column="22">&gt;<pos:position pos:line="165" pos:column="26"/></operator> <name pos:line="165" pos:column="24">readbuflen<pos:position pos:line="165" pos:column="34"/></name></expr>)<pos:position pos:line="165" pos:column="35"/></condition><then pos:line="165" pos:column="35"> <block pos:line="165" pos:column="36">{
                <expr_stmt><expr><name pos:line="166" pos:column="17">clen<pos:position pos:line="166" pos:column="21"/></name> <operator pos:line="166" pos:column="22">-=<pos:position pos:line="166" pos:column="24"/></operator> <name pos:line="166" pos:column="25">readbuflen<pos:position pos:line="166" pos:column="35"/></name></expr>;<pos:position pos:line="166" pos:column="36"/></expr_stmt>
                <goto pos:line="167" pos:column="17">goto <name pos:line="167" pos:column="22">recv_again<pos:position pos:line="167" pos:column="32"/></name>;<pos:position pos:line="167" pos:column="33"/></goto> <comment type="block" pos:line="167" pos:column="34">/* continue reading this record */</comment>
            }<pos:position pos:line="168" pos:column="14"/></block></then></if>
            <break pos:line="169" pos:column="13">break;<pos:position pos:line="169" pos:column="19"/></break>

        <case pos:line="171" pos:column="9">case <expr><name pos:line="171" pos:column="14">AP_FCGI_END_REQUEST<pos:position pos:line="171" pos:column="33"/></name></expr>:<pos:position pos:line="171" pos:column="34"/></case>
            <expr_stmt><expr><name pos:line="172" pos:column="13">done<pos:position pos:line="172" pos:column="17"/></name> <operator pos:line="172" pos:column="18">=<pos:position pos:line="172" pos:column="19"/></operator> <literal type="number" pos:line="172" pos:column="20">1<pos:position pos:line="172" pos:column="21"/></literal></expr>;<pos:position pos:line="172" pos:column="22"/></expr_stmt>
            <break pos:line="173" pos:column="13">break;<pos:position pos:line="173" pos:column="19"/></break>

        <default pos:line="175" pos:column="9">default:<pos:position pos:line="175" pos:column="17"/></default>
            <expr_stmt><expr><call><name pos:line="176" pos:column="13">ap_log_rerror<pos:position pos:line="176" pos:column="26"/></name><argument_list pos:line="176" pos:column="26">(<argument><expr><name pos:line="176" pos:column="27">APLOG_MARK<pos:position pos:line="176" pos:column="37"/></name></expr></argument>, <argument><expr><name pos:line="176" pos:column="39">APLOG_ERR<pos:position pos:line="176" pos:column="48"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="176" pos:column="50">0<pos:position pos:line="176" pos:column="51"/></literal></expr></argument>, <argument><expr><name pos:line="176" pos:column="53">r<pos:position pos:line="176" pos:column="54"/></name></expr></argument>,
                          <argument><expr><call><name pos:line="177" pos:column="27">APLOGNO<pos:position pos:line="177" pos:column="34"/></name><argument_list pos:line="177" pos:column="34">(<argument><expr><literal type="number" pos:line="177" pos:column="35">02508<pos:position pos:line="177" pos:column="40"/></literal></expr></argument>)<pos:position pos:line="177" pos:column="41"/></argument_list></call> <literal type="string" pos:line="177" pos:column="42">"%s: Got bogus FastCGI record type "<pos:position pos:line="177" pos:column="78"/></literal>
                          <literal type="string" pos:line="178" pos:column="27">"%d"<pos:position pos:line="178" pos:column="31"/></literal></expr></argument>, <argument><expr><name pos:line="178" pos:column="33">fn<pos:position pos:line="178" pos:column="35"/></name></expr></argument>, <argument><expr><name pos:line="178" pos:column="37">type<pos:position pos:line="178" pos:column="41"/></name></expr></argument>)<pos:position pos:line="178" pos:column="42"/></argument_list></call></expr>;<pos:position pos:line="178" pos:column="43"/></expr_stmt>
            <break pos:line="179" pos:column="13">break;<pos:position pos:line="179" pos:column="19"/></break>
        }<pos:position pos:line="180" pos:column="10"/></block></switch>
        <comment type="block" pos:line="181" pos:column="9">/* Leave on above switch's inner error. */</comment>
        <if pos:line="182" pos:column="9">if <condition pos:line="182" pos:column="12">(<expr><name pos:line="182" pos:column="13">rv<pos:position pos:line="182" pos:column="15"/></name> <operator pos:line="182" pos:column="16">!=<pos:position pos:line="182" pos:column="18"/></operator> <name pos:line="182" pos:column="19">APR_SUCCESS<pos:position pos:line="182" pos:column="30"/></name></expr>)<pos:position pos:line="182" pos:column="31"/></condition><then pos:line="182" pos:column="31"> <block pos:line="182" pos:column="32">{
            <break pos:line="183" pos:column="13">break;<pos:position pos:line="183" pos:column="19"/></break>
        }<pos:position pos:line="184" pos:column="10"/></block></then></if>

        <comment type="block" pos:line="186" pos:column="9">/*
         * Read/discard any trailing padding.
         */</comment>
        <if pos:line="189" pos:column="9">if <condition pos:line="189" pos:column="12">(<expr><name pos:line="189" pos:column="13">plen<pos:position pos:line="189" pos:column="17"/></name></expr>)<pos:position pos:line="189" pos:column="18"/></condition><then pos:line="189" pos:column="18"> <block pos:line="189" pos:column="19">{
            <expr_stmt><expr><name pos:line="190" pos:column="13">rv<pos:position pos:line="190" pos:column="15"/></name> <operator pos:line="190" pos:column="16">=<pos:position pos:line="190" pos:column="17"/></operator> <call><name pos:line="190" pos:column="18">recv_data_full<pos:position pos:line="190" pos:column="32"/></name><argument_list pos:line="190" pos:column="32">(<argument><expr><name pos:line="190" pos:column="33">conf<pos:position pos:line="190" pos:column="37"/></name></expr></argument>, <argument><expr><name pos:line="190" pos:column="39">r<pos:position pos:line="190" pos:column="40"/></name></expr></argument>, <argument><expr><name pos:line="190" pos:column="42">s<pos:position pos:line="190" pos:column="43"/></name></expr></argument>, <argument><expr><name pos:line="190" pos:column="45">readbuf<pos:position pos:line="190" pos:column="52"/></name></expr></argument>, <argument><expr><name pos:line="190" pos:column="54">plen<pos:position pos:line="190" pos:column="58"/></name></expr></argument>)<pos:position pos:line="190" pos:column="59"/></argument_list></call></expr>;<pos:position pos:line="190" pos:column="60"/></expr_stmt>
            <if pos:line="191" pos:column="13">if <condition pos:line="191" pos:column="16">(<expr><name pos:line="191" pos:column="17">rv<pos:position pos:line="191" pos:column="19"/></name> <operator pos:line="191" pos:column="20">!=<pos:position pos:line="191" pos:column="22"/></operator> <name pos:line="191" pos:column="23">APR_SUCCESS<pos:position pos:line="191" pos:column="34"/></name></expr>)<pos:position pos:line="191" pos:column="35"/></condition><then pos:line="191" pos:column="35"> <block pos:line="191" pos:column="36">{
                <expr_stmt><expr><call><name pos:line="192" pos:column="17">ap_log_rerror<pos:position pos:line="192" pos:column="30"/></name><argument_list pos:line="192" pos:column="30">(<argument><expr><name pos:line="192" pos:column="31">APLOG_MARK<pos:position pos:line="192" pos:column="41"/></name></expr></argument>, <argument><expr><name pos:line="192" pos:column="43">APLOG_ERR<pos:position pos:line="192" pos:column="52"/></name></expr></argument>, <argument><expr><name pos:line="192" pos:column="54">rv<pos:position pos:line="192" pos:column="56"/></name></expr></argument>, <argument><expr><name pos:line="192" pos:column="58">r<pos:position pos:line="192" pos:column="59"/></name></expr></argument>,
                              <argument><expr><call><name pos:line="193" pos:column="31">APLOGNO<pos:position pos:line="193" pos:column="38"/></name><argument_list pos:line="193" pos:column="38">(<argument><expr><literal type="number" pos:line="193" pos:column="39">02509<pos:position pos:line="193" pos:column="44"/></literal></expr></argument>)<pos:position pos:line="193" pos:column="45"/></argument_list></call> <literal type="string" pos:line="193" pos:column="46">"%s: Error occurred reading "<pos:position pos:line="193" pos:column="75"/></literal>
                              <literal type="string" pos:line="194" pos:column="31">"padding"<pos:position pos:line="194" pos:column="40"/></literal></expr></argument>,
                              <argument><expr><name pos:line="195" pos:column="31">fn<pos:position pos:line="195" pos:column="33"/></name></expr></argument>)<pos:position pos:line="195" pos:column="34"/></argument_list></call></expr>;<pos:position pos:line="195" pos:column="35"/></expr_stmt>
                <break pos:line="196" pos:column="17">break;<pos:position pos:line="196" pos:column="23"/></break>
            }<pos:position pos:line="197" pos:column="14"/></block></then></if>
        }<pos:position pos:line="198" pos:column="10"/></block></then></if>
    }<pos:position pos:line="199" pos:column="6"/></block></while>

    <expr_stmt><expr><call><name pos:line="201" pos:column="5">apr_brigade_cleanup<pos:position pos:line="201" pos:column="24"/></name><argument_list pos:line="201" pos:column="24">(<argument><expr><name pos:line="201" pos:column="25">ob<pos:position pos:line="201" pos:column="27"/></name></expr></argument>)<pos:position pos:line="201" pos:column="28"/></argument_list></call></expr>;<pos:position pos:line="201" pos:column="29"/></expr_stmt>

    <if pos:line="203" pos:column="5">if <condition pos:line="203" pos:column="8">(<expr><name pos:line="203" pos:column="9">rv<pos:position pos:line="203" pos:column="11"/></name> <operator pos:line="203" pos:column="12">==<pos:position pos:line="203" pos:column="14"/></operator> <name pos:line="203" pos:column="15">APR_SUCCESS<pos:position pos:line="203" pos:column="26"/></name> <operator pos:line="203" pos:column="27">&amp;&amp;<pos:position pos:line="203" pos:column="37"/></operator> <operator pos:line="203" pos:column="30">!<pos:position pos:line="203" pos:column="31"/></operator><name pos:line="203" pos:column="31">seen_end_of_headers<pos:position pos:line="203" pos:column="50"/></name></expr>)<pos:position pos:line="203" pos:column="51"/></condition><then pos:line="203" pos:column="51"> <block pos:line="203" pos:column="52">{
        <expr_stmt><expr><name pos:line="204" pos:column="9">rv<pos:position pos:line="204" pos:column="11"/></name> <operator pos:line="204" pos:column="12">=<pos:position pos:line="204" pos:column="13"/></operator> <name pos:line="204" pos:column="14">APR_EINVAL<pos:position pos:line="204" pos:column="24"/></name></expr>;<pos:position pos:line="204" pos:column="25"/></expr_stmt>
        <expr_stmt><expr><call><name pos:line="205" pos:column="9">ap_log_rerror<pos:position pos:line="205" pos:column="22"/></name><argument_list pos:line="205" pos:column="22">(<argument><expr><name pos:line="205" pos:column="23">APLOG_MARK<pos:position pos:line="205" pos:column="33"/></name></expr></argument>, <argument><expr><name pos:line="205" pos:column="35">APLOG_ERR<pos:position pos:line="205" pos:column="44"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="205" pos:column="46">0<pos:position pos:line="205" pos:column="47"/></literal></expr></argument>, <argument><expr><name pos:line="205" pos:column="49">r<pos:position pos:line="205" pos:column="50"/></name></expr></argument>,
                      <argument><expr><call><name pos:line="206" pos:column="23">APLOGNO<pos:position pos:line="206" pos:column="30"/></name><argument_list pos:line="206" pos:column="30">(<argument><expr><literal type="number" pos:line="206" pos:column="31">02510<pos:position pos:line="206" pos:column="36"/></literal></expr></argument>)<pos:position pos:line="206" pos:column="37"/></argument_list></call> <literal type="string" pos:line="206" pos:column="38">"%s: Never reached end of script headers"<pos:position pos:line="206" pos:column="79"/></literal></expr></argument>,
                      <argument><expr><name pos:line="207" pos:column="23">fn<pos:position pos:line="207" pos:column="25"/></name></expr></argument>)<pos:position pos:line="207" pos:column="26"/></argument_list></call></expr>;<pos:position pos:line="207" pos:column="27"/></expr_stmt>
    }<pos:position pos:line="208" pos:column="6"/></block></then></if>

    <return pos:line="210" pos:column="5">return <expr><name pos:line="210" pos:column="12">rv<pos:position pos:line="210" pos:column="14"/></name></expr>;<pos:position pos:line="210" pos:column="15"/></return>
}<pos:position pos:line="211" pos:column="2"/></block></function></unit>

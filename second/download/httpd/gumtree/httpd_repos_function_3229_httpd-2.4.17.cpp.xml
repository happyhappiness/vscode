<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/httpd/gumtree/httpd_repos_function_3229_httpd-2.4.17.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><specifier pos:line="1" pos:column="8">const<pos:position pos:line="1" pos:column="13"/></specifier> <name pos:line="1" pos:column="14">char<pos:position pos:line="1" pos:column="18"/></name> <modifier pos:line="1" pos:column="19">*<pos:position pos:line="1" pos:column="20"/></modifier></type><name pos:line="1" pos:column="20">set_qop<pos:position pos:line="1" pos:column="27"/></name><parameter_list pos:line="1" pos:column="27">(<parameter><decl><type><name pos:line="1" pos:column="28">cmd_parms<pos:position pos:line="1" pos:column="37"/></name> <modifier pos:line="1" pos:column="38">*<pos:position pos:line="1" pos:column="39"/></modifier></type><name pos:line="1" pos:column="39">cmd<pos:position pos:line="1" pos:column="42"/></name></decl></parameter>, <parameter><decl><type><name pos:line="1" pos:column="44">void<pos:position pos:line="1" pos:column="48"/></name> <modifier pos:line="1" pos:column="49">*<pos:position pos:line="1" pos:column="50"/></modifier></type><name pos:line="1" pos:column="50">config<pos:position pos:line="1" pos:column="56"/></name></decl></parameter>, <parameter><decl><type><specifier pos:line="1" pos:column="58">const<pos:position pos:line="1" pos:column="63"/></specifier> <name pos:line="1" pos:column="64">char<pos:position pos:line="1" pos:column="68"/></name> <modifier pos:line="1" pos:column="69">*<pos:position pos:line="1" pos:column="70"/></modifier></type><name pos:line="1" pos:column="70">op<pos:position pos:line="1" pos:column="72"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="73"/></parameter_list>
<block pos:line="2" pos:column="1">{
    <decl_stmt><decl><type><name pos:line="3" pos:column="5">digest_config_rec<pos:position pos:line="3" pos:column="22"/></name> <modifier pos:line="3" pos:column="23">*<pos:position pos:line="3" pos:column="24"/></modifier></type><name pos:line="3" pos:column="24">conf<pos:position pos:line="3" pos:column="28"/></name> <init pos:line="3" pos:column="29">= <expr><operator pos:line="3" pos:column="31">(<pos:position pos:line="3" pos:column="32"/></operator><name pos:line="3" pos:column="32">digest_config_rec<pos:position pos:line="3" pos:column="49"/></name> <operator pos:line="3" pos:column="50">*<pos:position pos:line="3" pos:column="51"/></operator><operator pos:line="3" pos:column="51">)<pos:position pos:line="3" pos:column="52"/></operator> <name pos:line="3" pos:column="53">config<pos:position pos:line="3" pos:column="59"/></name></expr></init></decl>;<pos:position pos:line="3" pos:column="60"/></decl_stmt>

    <if pos:line="5" pos:column="5">if <condition pos:line="5" pos:column="8">(<expr><operator pos:line="5" pos:column="9">!<pos:position pos:line="5" pos:column="10"/></operator><call><name pos:line="5" pos:column="10">strcasecmp<pos:position pos:line="5" pos:column="20"/></name><argument_list pos:line="5" pos:column="20">(<argument><expr><name pos:line="5" pos:column="21">op<pos:position pos:line="5" pos:column="23"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="5" pos:column="25">"none"<pos:position pos:line="5" pos:column="31"/></literal></expr></argument>)<pos:position pos:line="5" pos:column="32"/></argument_list></call></expr>)<pos:position pos:line="5" pos:column="33"/></condition><then pos:line="5" pos:column="33"> <block pos:line="5" pos:column="34">{
        <expr_stmt><expr><call><name pos:line="6" pos:column="9">apr_array_clear<pos:position pos:line="6" pos:column="24"/></name><argument_list pos:line="6" pos:column="24">(<argument><expr><name><name pos:line="6" pos:column="25">conf<pos:position pos:line="6" pos:column="29"/></name><operator pos:line="6" pos:column="29">-&gt;<pos:position pos:line="6" pos:column="34"/></operator><name pos:line="6" pos:column="31">qop_list<pos:position pos:line="6" pos:column="39"/></name></name></expr></argument>)<pos:position pos:line="6" pos:column="40"/></argument_list></call></expr>;<pos:position pos:line="6" pos:column="41"/></expr_stmt>
        <expr_stmt><expr><operator pos:line="7" pos:column="9">*<pos:position pos:line="7" pos:column="10"/></operator><operator pos:line="7" pos:column="10">(<pos:position pos:line="7" pos:column="11"/></operator><specifier pos:line="7" pos:column="11">const<pos:position pos:line="7" pos:column="16"/></specifier> <name pos:line="7" pos:column="17">char<pos:position pos:line="7" pos:column="21"/></name> <operator pos:line="7" pos:column="22">*<pos:position pos:line="7" pos:column="23"/></operator><operator pos:line="7" pos:column="23">*<pos:position pos:line="7" pos:column="24"/></operator><operator pos:line="7" pos:column="24">)<pos:position pos:line="7" pos:column="25"/></operator><call><name pos:line="7" pos:column="25">apr_array_push<pos:position pos:line="7" pos:column="39"/></name><argument_list pos:line="7" pos:column="39">(<argument><expr><name><name pos:line="7" pos:column="40">conf<pos:position pos:line="7" pos:column="44"/></name><operator pos:line="7" pos:column="44">-&gt;<pos:position pos:line="7" pos:column="49"/></operator><name pos:line="7" pos:column="46">qop_list<pos:position pos:line="7" pos:column="54"/></name></name></expr></argument>)<pos:position pos:line="7" pos:column="55"/></argument_list></call> <operator pos:line="7" pos:column="56">=<pos:position pos:line="7" pos:column="57"/></operator> <literal type="string" pos:line="7" pos:column="58">"none"<pos:position pos:line="7" pos:column="64"/></literal></expr>;<pos:position pos:line="7" pos:column="65"/></expr_stmt>
        <return pos:line="8" pos:column="9">return <expr><name pos:line="8" pos:column="16">NULL<pos:position pos:line="8" pos:column="20"/></name></expr>;<pos:position pos:line="8" pos:column="21"/></return>
    }<pos:position pos:line="9" pos:column="6"/></block></then></if>

    <if pos:line="11" pos:column="5">if <condition pos:line="11" pos:column="8">(<expr><operator pos:line="11" pos:column="9">!<pos:position pos:line="11" pos:column="10"/></operator><call><name pos:line="11" pos:column="10">strcasecmp<pos:position pos:line="11" pos:column="20"/></name><argument_list pos:line="11" pos:column="20">(<argument><expr><name pos:line="11" pos:column="21">op<pos:position pos:line="11" pos:column="23"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="11" pos:column="25">"auth-int"<pos:position pos:line="11" pos:column="35"/></literal></expr></argument>)<pos:position pos:line="11" pos:column="36"/></argument_list></call></expr>)<pos:position pos:line="11" pos:column="37"/></condition><then pos:line="11" pos:column="37"> <block pos:line="11" pos:column="38">{
        <return pos:line="12" pos:column="9">return <expr><literal type="string" pos:line="12" pos:column="16">"AuthDigestQop auth-int is not implemented"<pos:position pos:line="12" pos:column="59"/></literal></expr>;<pos:position pos:line="12" pos:column="60"/></return>
    }<pos:position pos:line="13" pos:column="6"/></block></then>
    <elseif pos:line="14" pos:column="5">else <if pos:line="14" pos:column="10">if <condition pos:line="14" pos:column="13">(<expr><call><name pos:line="14" pos:column="14">strcasecmp<pos:position pos:line="14" pos:column="24"/></name><argument_list pos:line="14" pos:column="24">(<argument><expr><name pos:line="14" pos:column="25">op<pos:position pos:line="14" pos:column="27"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="14" pos:column="29">"auth"<pos:position pos:line="14" pos:column="35"/></literal></expr></argument>)<pos:position pos:line="14" pos:column="36"/></argument_list></call></expr>)<pos:position pos:line="14" pos:column="37"/></condition><then pos:line="14" pos:column="37"> <block pos:line="14" pos:column="38">{
        <return pos:line="15" pos:column="9">return <expr><call><name pos:line="15" pos:column="16">apr_pstrcat<pos:position pos:line="15" pos:column="27"/></name><argument_list pos:line="15" pos:column="27">(<argument><expr><name><name pos:line="15" pos:column="28">cmd<pos:position pos:line="15" pos:column="31"/></name><operator pos:line="15" pos:column="31">-&gt;<pos:position pos:line="15" pos:column="36"/></operator><name pos:line="15" pos:column="33">pool<pos:position pos:line="15" pos:column="37"/></name></name></expr></argument>, <argument><expr><literal type="string" pos:line="15" pos:column="39">"Unrecognized qop: "<pos:position pos:line="15" pos:column="59"/></literal></expr></argument>, <argument><expr><name pos:line="15" pos:column="61">op<pos:position pos:line="15" pos:column="63"/></name></expr></argument>, <argument><expr><name pos:line="15" pos:column="65">NULL<pos:position pos:line="15" pos:column="69"/></name></expr></argument>)<pos:position pos:line="15" pos:column="70"/></argument_list></call></expr>;<pos:position pos:line="15" pos:column="71"/></return>
    }<pos:position pos:line="16" pos:column="6"/></block></then></if></elseif></if>

    <expr_stmt><expr><operator pos:line="18" pos:column="5">*<pos:position pos:line="18" pos:column="6"/></operator><operator pos:line="18" pos:column="6">(<pos:position pos:line="18" pos:column="7"/></operator><specifier pos:line="18" pos:column="7">const<pos:position pos:line="18" pos:column="12"/></specifier> <name pos:line="18" pos:column="13">char<pos:position pos:line="18" pos:column="17"/></name> <operator pos:line="18" pos:column="18">*<pos:position pos:line="18" pos:column="19"/></operator><operator pos:line="18" pos:column="19">*<pos:position pos:line="18" pos:column="20"/></operator><operator pos:line="18" pos:column="20">)<pos:position pos:line="18" pos:column="21"/></operator><call><name pos:line="18" pos:column="21">apr_array_push<pos:position pos:line="18" pos:column="35"/></name><argument_list pos:line="18" pos:column="35">(<argument><expr><name><name pos:line="18" pos:column="36">conf<pos:position pos:line="18" pos:column="40"/></name><operator pos:line="18" pos:column="40">-&gt;<pos:position pos:line="18" pos:column="45"/></operator><name pos:line="18" pos:column="42">qop_list<pos:position pos:line="18" pos:column="50"/></name></name></expr></argument>)<pos:position pos:line="18" pos:column="51"/></argument_list></call> <operator pos:line="18" pos:column="52">=<pos:position pos:line="18" pos:column="53"/></operator> <name pos:line="18" pos:column="54">op<pos:position pos:line="18" pos:column="56"/></name></expr>;<pos:position pos:line="18" pos:column="57"/></expr_stmt>

    <return pos:line="20" pos:column="5">return <expr><name pos:line="20" pos:column="12">NULL<pos:position pos:line="20" pos:column="16"/></name></expr>;<pos:position pos:line="20" pos:column="17"/></return>
}<pos:position pos:line="21" pos:column="2"/></block></function></unit>

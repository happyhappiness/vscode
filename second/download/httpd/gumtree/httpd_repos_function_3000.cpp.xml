<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/httpd/gumtree/httpd_repos_function_3000.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">apr_status_t<pos:position pos:line="1" pos:column="13"/></name></type> <name pos:line="1" pos:column="14">simple_core_init_once<pos:position pos:line="1" pos:column="35"/></name><parameter_list pos:line="1" pos:column="35">(<parameter><decl><type><name pos:line="1" pos:column="36">void<pos:position pos:line="1" pos:column="40"/></name></type></decl></parameter>)<pos:position pos:line="1" pos:column="41"/></parameter_list>
<block pos:line="2" pos:column="1">{
    <decl_stmt><decl><type><name pos:line="3" pos:column="5">apr_status_t<pos:position pos:line="3" pos:column="17"/></name></type> <name pos:line="3" pos:column="18">rv<pos:position pos:line="3" pos:column="20"/></name></decl>;<pos:position pos:line="3" pos:column="21"/></decl_stmt>
    <decl_stmt><decl><type><specifier pos:line="4" pos:column="5">const<pos:position pos:line="4" pos:column="10"/></specifier> <name pos:line="4" pos:column="11">char<pos:position pos:line="4" pos:column="15"/></name> <modifier pos:line="4" pos:column="16">*<pos:position pos:line="4" pos:column="17"/></modifier></type><name pos:line="4" pos:column="17">userdata_key<pos:position pos:line="4" pos:column="29"/></name> <init pos:line="4" pos:column="30">= <expr><literal type="string" pos:line="4" pos:column="32">"mpm_simple_module"<pos:position pos:line="4" pos:column="51"/></literal></expr></init></decl>;<pos:position pos:line="4" pos:column="52"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="5" pos:column="5">simple_core_t<pos:position pos:line="5" pos:column="18"/></name> <modifier pos:line="5" pos:column="19">*<pos:position pos:line="5" pos:column="20"/></modifier></type><name pos:line="5" pos:column="20">sc<pos:position pos:line="5" pos:column="22"/></name></decl>;<pos:position pos:line="5" pos:column="23"/></decl_stmt>

    <expr_stmt><expr><name pos:line="7" pos:column="5">g_simple_core<pos:position pos:line="7" pos:column="18"/></name> <operator pos:line="7" pos:column="19">=<pos:position pos:line="7" pos:column="20"/></operator> <call><name pos:line="7" pos:column="21">ap_retained_data_get<pos:position pos:line="7" pos:column="41"/></name><argument_list pos:line="7" pos:column="41">(<argument><expr><name pos:line="7" pos:column="42">userdata_key<pos:position pos:line="7" pos:column="54"/></name></expr></argument>)<pos:position pos:line="7" pos:column="55"/></argument_list></call></expr>;<pos:position pos:line="7" pos:column="56"/></expr_stmt>
    <if pos:line="8" pos:column="5">if <condition pos:line="8" pos:column="8">(<expr><name pos:line="8" pos:column="9">g_simple_core<pos:position pos:line="8" pos:column="22"/></name></expr>)<pos:position pos:line="8" pos:column="23"/></condition><then pos:line="8" pos:column="23"> <block pos:line="8" pos:column="24">{
        <return pos:line="9" pos:column="9">return <expr><name pos:line="9" pos:column="16">APR_SUCCESS<pos:position pos:line="9" pos:column="27"/></name></expr>;<pos:position pos:line="9" pos:column="28"/></return>
    }<pos:position pos:line="10" pos:column="6"/></block></then></if>
    
    <expr_stmt><expr><name pos:line="12" pos:column="5">sc<pos:position pos:line="12" pos:column="7"/></name> <operator pos:line="12" pos:column="8">=<pos:position pos:line="12" pos:column="9"/></operator> <name pos:line="12" pos:column="10">g_simple_core<pos:position pos:line="12" pos:column="23"/></name> <operator pos:line="12" pos:column="24">=<pos:position pos:line="12" pos:column="25"/></operator> <call><name pos:line="12" pos:column="26">ap_retained_data_create<pos:position pos:line="12" pos:column="49"/></name><argument_list pos:line="12" pos:column="49">(<argument><expr><name pos:line="12" pos:column="50">userdata_key<pos:position pos:line="12" pos:column="62"/></name></expr></argument>, <argument><expr><sizeof pos:line="12" pos:column="64">sizeof<argument_list pos:line="12" pos:column="70">(<argument><expr><operator pos:line="12" pos:column="71">*<pos:position pos:line="12" pos:column="72"/></operator><name pos:line="12" pos:column="72">g_simple_core<pos:position pos:line="12" pos:column="85"/></name></expr></argument>)<pos:position pos:line="12" pos:column="86"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="12" pos:column="87"/></argument_list></call></expr>;<pos:position pos:line="12" pos:column="88"/></expr_stmt>

    <expr_stmt><expr><call><name pos:line="14" pos:column="5">apr_pool_create<pos:position pos:line="14" pos:column="20"/></name><argument_list pos:line="14" pos:column="20">(<argument><expr><operator pos:line="14" pos:column="21">&amp;<pos:position pos:line="14" pos:column="26"/></operator><name><name pos:line="14" pos:column="22">sc<pos:position pos:line="14" pos:column="24"/></name><operator pos:line="14" pos:column="24">-&gt;<pos:position pos:line="14" pos:column="29"/></operator><name pos:line="14" pos:column="26">pool<pos:position pos:line="14" pos:column="30"/></name></name></expr></argument>, <argument><expr><name pos:line="14" pos:column="32">ap_pglobal<pos:position pos:line="14" pos:column="42"/></name></expr></argument>)<pos:position pos:line="14" pos:column="43"/></argument_list></call></expr>;<pos:position pos:line="14" pos:column="44"/></expr_stmt>

    <expr_stmt><expr><call><name pos:line="16" pos:column="5">apr_pool_tag<pos:position pos:line="16" pos:column="17"/></name><argument_list pos:line="16" pos:column="17">(<argument><expr><name><name pos:line="16" pos:column="18">sc<pos:position pos:line="16" pos:column="20"/></name><operator pos:line="16" pos:column="20">-&gt;<pos:position pos:line="16" pos:column="25"/></operator><name pos:line="16" pos:column="22">pool<pos:position pos:line="16" pos:column="26"/></name></name></expr></argument>, <argument><expr><literal type="string" pos:line="16" pos:column="28">"simple-mpm-core"<pos:position pos:line="16" pos:column="45"/></literal></expr></argument>)<pos:position pos:line="16" pos:column="46"/></argument_list></call></expr>;<pos:position pos:line="16" pos:column="47"/></expr_stmt>

    <expr_stmt><expr><name><name pos:line="18" pos:column="5">sc<pos:position pos:line="18" pos:column="7"/></name><operator pos:line="18" pos:column="7">-&gt;<pos:position pos:line="18" pos:column="12"/></operator><name pos:line="18" pos:column="9">mpm_state<pos:position pos:line="18" pos:column="18"/></name></name> <operator pos:line="18" pos:column="19">=<pos:position pos:line="18" pos:column="20"/></operator> <name pos:line="18" pos:column="21">AP_MPMQ_STARTING<pos:position pos:line="18" pos:column="37"/></name></expr>;<pos:position pos:line="18" pos:column="38"/></expr_stmt>
    <expr_stmt><expr><name><name pos:line="19" pos:column="5">sc<pos:position pos:line="19" pos:column="7"/></name><operator pos:line="19" pos:column="7">-&gt;<pos:position pos:line="19" pos:column="12"/></operator><name pos:line="19" pos:column="9">procmgr<pos:position pos:line="19" pos:column="16"/></name><operator pos:line="19" pos:column="16">.<pos:position pos:line="19" pos:column="17"/></operator><name pos:line="19" pos:column="17">proc_count<pos:position pos:line="19" pos:column="27"/></name></name> <operator pos:line="19" pos:column="28">=<pos:position pos:line="19" pos:column="29"/></operator> <name pos:line="19" pos:column="30">SIMPLE_DEF_PROC<pos:position pos:line="19" pos:column="45"/></name></expr>;<pos:position pos:line="19" pos:column="46"/></expr_stmt>
    <expr_stmt><expr><name><name pos:line="20" pos:column="5">sc<pos:position pos:line="20" pos:column="7"/></name><operator pos:line="20" pos:column="7">-&gt;<pos:position pos:line="20" pos:column="12"/></operator><name pos:line="20" pos:column="9">procmgr<pos:position pos:line="20" pos:column="16"/></name><operator pos:line="20" pos:column="16">.<pos:position pos:line="20" pos:column="17"/></operator><name pos:line="20" pos:column="17">thread_count<pos:position pos:line="20" pos:column="29"/></name></name> <operator pos:line="20" pos:column="30">=<pos:position pos:line="20" pos:column="31"/></operator> <name pos:line="20" pos:column="32">SIMPLE_DEF_THREADS<pos:position pos:line="20" pos:column="50"/></name></expr>;<pos:position pos:line="20" pos:column="51"/></expr_stmt>
    <expr_stmt><expr><name><name pos:line="21" pos:column="5">sc<pos:position pos:line="21" pos:column="7"/></name><operator pos:line="21" pos:column="7">-&gt;<pos:position pos:line="21" pos:column="12"/></operator><name pos:line="21" pos:column="9">procmgr<pos:position pos:line="21" pos:column="16"/></name><operator pos:line="21" pos:column="16">.<pos:position pos:line="21" pos:column="17"/></operator><name pos:line="21" pos:column="17">max_requests_per_child<pos:position pos:line="21" pos:column="39"/></name></name> <operator pos:line="21" pos:column="40">=<pos:position pos:line="21" pos:column="41"/></operator> <name pos:line="21" pos:column="42">DEFAULT_MAX_REQUESTS_PER_CHILD<pos:position pos:line="21" pos:column="72"/></name></expr>;<pos:position pos:line="21" pos:column="73"/></expr_stmt>

    <expr_stmt><expr><name><name pos:line="23" pos:column="5">sc<pos:position pos:line="23" pos:column="7"/></name><operator pos:line="23" pos:column="7">-&gt;<pos:position pos:line="23" pos:column="12"/></operator><name pos:line="23" pos:column="9">children<pos:position pos:line="23" pos:column="17"/></name></name> <operator pos:line="23" pos:column="18">=<pos:position pos:line="23" pos:column="19"/></operator> <call><name pos:line="23" pos:column="20">apr_hash_make<pos:position pos:line="23" pos:column="33"/></name><argument_list pos:line="23" pos:column="33">(<argument><expr><name><name pos:line="23" pos:column="34">sc<pos:position pos:line="23" pos:column="36"/></name><operator pos:line="23" pos:column="36">-&gt;<pos:position pos:line="23" pos:column="41"/></operator><name pos:line="23" pos:column="38">pool<pos:position pos:line="23" pos:column="42"/></name></name></expr></argument>)<pos:position pos:line="23" pos:column="43"/></argument_list></call></expr>;<pos:position pos:line="23" pos:column="44"/></expr_stmt>
    <comment type="block" pos:line="24" pos:column="5">/* TODO: configurable spawning mech */</comment>
    <expr_stmt><expr><name><name pos:line="25" pos:column="5">sc<pos:position pos:line="25" pos:column="7"/></name><operator pos:line="25" pos:column="7">-&gt;<pos:position pos:line="25" pos:column="12"/></operator><name pos:line="25" pos:column="9">spawn_via<pos:position pos:line="25" pos:column="18"/></name></name> <operator pos:line="25" pos:column="19">=<pos:position pos:line="25" pos:column="20"/></operator> <name pos:line="25" pos:column="21">SIMPLE_SPAWN_FORK<pos:position pos:line="25" pos:column="38"/></name></expr>;<pos:position pos:line="25" pos:column="39"/></expr_stmt>

    <expr_stmt><expr><call><name pos:line="27" pos:column="5">APR_RING_INIT<pos:position pos:line="27" pos:column="18"/></name><argument_list pos:line="27" pos:column="18">(<argument><expr><operator pos:line="27" pos:column="19">&amp;<pos:position pos:line="27" pos:column="24"/></operator><name><name pos:line="27" pos:column="20">sc<pos:position pos:line="27" pos:column="22"/></name><operator pos:line="27" pos:column="22">-&gt;<pos:position pos:line="27" pos:column="27"/></operator><name pos:line="27" pos:column="24">timer_ring<pos:position pos:line="27" pos:column="34"/></name></name></expr></argument>, <argument><expr><name pos:line="27" pos:column="36">simple_timer_t<pos:position pos:line="27" pos:column="50"/></name></expr></argument>, <argument><expr><name pos:line="27" pos:column="52">link<pos:position pos:line="27" pos:column="56"/></name></expr></argument>)<pos:position pos:line="27" pos:column="57"/></argument_list></call></expr>;<pos:position pos:line="27" pos:column="58"/></expr_stmt>

    <expr_stmt><expr><name pos:line="29" pos:column="5">rv<pos:position pos:line="29" pos:column="7"/></name> <operator pos:line="29" pos:column="8">=<pos:position pos:line="29" pos:column="9"/></operator> <call><name pos:line="29" pos:column="10">apr_thread_mutex_create<pos:position pos:line="29" pos:column="33"/></name><argument_list pos:line="29" pos:column="33">(<argument><expr><operator pos:line="29" pos:column="34">&amp;<pos:position pos:line="29" pos:column="39"/></operator><name><name pos:line="29" pos:column="35">sc<pos:position pos:line="29" pos:column="37"/></name><operator pos:line="29" pos:column="37">-&gt;<pos:position pos:line="29" pos:column="42"/></operator><name pos:line="29" pos:column="39">mtx<pos:position pos:line="29" pos:column="42"/></name></name></expr></argument>, <argument><expr><literal type="number" pos:line="29" pos:column="44">0<pos:position pos:line="29" pos:column="45"/></literal></expr></argument>, <argument><expr><name><name pos:line="29" pos:column="47">sc<pos:position pos:line="29" pos:column="49"/></name><operator pos:line="29" pos:column="49">-&gt;<pos:position pos:line="29" pos:column="54"/></operator><name pos:line="29" pos:column="51">pool<pos:position pos:line="29" pos:column="55"/></name></name></expr></argument>)<pos:position pos:line="29" pos:column="56"/></argument_list></call></expr>;<pos:position pos:line="29" pos:column="57"/></expr_stmt>

    <if pos:line="31" pos:column="5">if <condition pos:line="31" pos:column="8">(<expr><name pos:line="31" pos:column="9">rv<pos:position pos:line="31" pos:column="11"/></name></expr>)<pos:position pos:line="31" pos:column="12"/></condition><then pos:line="31" pos:column="12"> <block pos:line="31" pos:column="13">{
        <expr_stmt><expr><call><name pos:line="32" pos:column="9">ap_log_error<pos:position pos:line="32" pos:column="21"/></name><argument_list pos:line="32" pos:column="21">(<argument><expr><name pos:line="32" pos:column="22">APLOG_MARK<pos:position pos:line="32" pos:column="32"/></name></expr></argument>, <argument><expr><name pos:line="32" pos:column="34">APLOG_CRIT<pos:position pos:line="32" pos:column="44"/></name></expr></argument>, <argument><expr><name pos:line="32" pos:column="46">rv<pos:position pos:line="32" pos:column="48"/></name></expr></argument>, <argument><expr><name pos:line="32" pos:column="50">NULL<pos:position pos:line="32" pos:column="54"/></name></expr></argument>,
                     <argument><expr><literal type="string" pos:line="33" pos:column="22">"simple_core_init_once: apr_thread_mutex_create failed."<pos:position pos:line="33" pos:column="78"/></literal></expr></argument>)<pos:position pos:line="33" pos:column="79"/></argument_list></call></expr>;<pos:position pos:line="33" pos:column="80"/></expr_stmt>
        <return pos:line="34" pos:column="9">return <expr><name pos:line="34" pos:column="16">rv<pos:position pos:line="34" pos:column="18"/></name></expr>;<pos:position pos:line="34" pos:column="19"/></return>
    }<pos:position pos:line="35" pos:column="6"/></block></then></if>

    <return pos:line="37" pos:column="5">return <expr><name pos:line="37" pos:column="12">APR_SUCCESS<pos:position pos:line="37" pos:column="23"/></name></expr>;<pos:position pos:line="37" pos:column="24"/></return>
}<pos:position pos:line="38" pos:column="2"/></block></function></unit>

<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/httpd/gumtree/httpd_repos_function_1510_httpd-2.0.43.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">void<pos:position pos:line="1" pos:column="5"/></name></type> <name pos:line="1" pos:column="6">mod_auth_ldap_build_filter<pos:position pos:line="1" pos:column="32"/></name><parameter_list pos:line="1" pos:column="32">(<parameter><decl><type><name pos:line="1" pos:column="33">char<pos:position pos:line="1" pos:column="37"/></name> <modifier pos:line="1" pos:column="38">*<pos:position pos:line="1" pos:column="39"/></modifier></type><name pos:line="1" pos:column="39">filtbuf<pos:position pos:line="1" pos:column="46"/></name></decl></parameter>, 
                                <parameter><decl><type><name pos:line="2" pos:column="33">request_rec<pos:position pos:line="2" pos:column="44"/></name> <modifier pos:line="2" pos:column="45">*<pos:position pos:line="2" pos:column="46"/></modifier></type><name pos:line="2" pos:column="46">r<pos:position pos:line="2" pos:column="47"/></name></decl></parameter>, 
                                <parameter><decl><type><name pos:line="3" pos:column="33">mod_auth_ldap_config_t<pos:position pos:line="3" pos:column="55"/></name> <modifier pos:line="3" pos:column="56">*<pos:position pos:line="3" pos:column="57"/></modifier></type><name pos:line="3" pos:column="57">sec<pos:position pos:line="3" pos:column="60"/></name></decl></parameter>)<pos:position pos:line="3" pos:column="61"/></parameter_list>
<block pos:line="4" pos:column="1">{
    <decl_stmt><decl><type><name pos:line="5" pos:column="5">char<pos:position pos:line="5" pos:column="9"/></name> <modifier pos:line="5" pos:column="10">*<pos:position pos:line="5" pos:column="11"/></modifier></type><name pos:line="5" pos:column="11">p<pos:position pos:line="5" pos:column="12"/></name></decl>, <modifier pos:line="5" pos:column="14">*<pos:position pos:line="5" pos:column="15"/></modifier><decl><type ref="prev"/><name pos:line="5" pos:column="15">q<pos:position pos:line="5" pos:column="16"/></name></decl>, <modifier pos:line="5" pos:column="18">*<pos:position pos:line="5" pos:column="19"/></modifier><decl><type ref="prev"/><name pos:line="5" pos:column="19">filtbuf_end<pos:position pos:line="5" pos:column="30"/></name></decl>;<pos:position pos:line="5" pos:column="31"/></decl_stmt>
    <comment type="block" pos:line="6" pos:column="5">/* 
     * Create the first part of the filter, which consists of the 
     * config-supplied portions.
     */</comment>
    <expr_stmt><expr><call><name pos:line="10" pos:column="5">apr_snprintf<pos:position pos:line="10" pos:column="17"/></name><argument_list pos:line="10" pos:column="17">(<argument><expr><name pos:line="10" pos:column="18">filtbuf<pos:position pos:line="10" pos:column="25"/></name></expr></argument>, <argument><expr><name pos:line="10" pos:column="27">FILTER_LENGTH<pos:position pos:line="10" pos:column="40"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="10" pos:column="42">"(&amp;(%s)(%s="<pos:position pos:line="10" pos:column="58"/></literal></expr></argument>, <argument><expr><name><name pos:line="10" pos:column="56">sec<pos:position pos:line="10" pos:column="59"/></name><operator pos:line="10" pos:column="59">-&gt;<pos:position pos:line="10" pos:column="64"/></operator><name pos:line="10" pos:column="61">filter<pos:position pos:line="10" pos:column="67"/></name></name></expr></argument>, <argument><expr><name><name pos:line="10" pos:column="69">sec<pos:position pos:line="10" pos:column="72"/></name><operator pos:line="10" pos:column="72">-&gt;<pos:position pos:line="10" pos:column="77"/></operator><name pos:line="10" pos:column="74">attribute<pos:position pos:line="10" pos:column="83"/></name></name></expr></argument>)<pos:position pos:line="10" pos:column="84"/></argument_list></call></expr>;<pos:position pos:line="10" pos:column="85"/></expr_stmt>

    <comment type="block" pos:line="12" pos:column="5">/* 
     * Now add the client-supplied username to the filter, ensuring that any
     * LDAP filter metachars are escaped.
     */</comment>
    <expr_stmt><expr><name pos:line="16" pos:column="5">filtbuf_end<pos:position pos:line="16" pos:column="16"/></name> <operator pos:line="16" pos:column="17">=<pos:position pos:line="16" pos:column="18"/></operator> <name pos:line="16" pos:column="19">filtbuf<pos:position pos:line="16" pos:column="26"/></name> <operator pos:line="16" pos:column="27">+<pos:position pos:line="16" pos:column="28"/></operator> <name pos:line="16" pos:column="29">FILTER_LENGTH<pos:position pos:line="16" pos:column="42"/></name> <operator pos:line="16" pos:column="43">-<pos:position pos:line="16" pos:column="44"/></operator> <literal type="number" pos:line="16" pos:column="45">1<pos:position pos:line="16" pos:column="46"/></literal></expr>;<pos:position pos:line="16" pos:column="47"/></expr_stmt>
    <for pos:line="17" pos:column="5">for <control pos:line="17" pos:column="9">(<init><expr><name pos:line="17" pos:column="10">p<pos:position pos:line="17" pos:column="11"/></name> <operator pos:line="17" pos:column="12">=<pos:position pos:line="17" pos:column="13"/></operator> <name><name pos:line="17" pos:column="14">r<pos:position pos:line="17" pos:column="15"/></name><operator pos:line="17" pos:column="15">-&gt;<pos:position pos:line="17" pos:column="20"/></operator><name pos:line="17" pos:column="17">user<pos:position pos:line="17" pos:column="21"/></name></name></expr><operator pos:line="17" pos:column="21">,<pos:position pos:line="17" pos:column="22"/></operator> <expr><name pos:line="17" pos:column="23">q<pos:position pos:line="17" pos:column="24"/></name><operator pos:line="17" pos:column="24">=<pos:position pos:line="17" pos:column="25"/></operator><name pos:line="17" pos:column="25">filtbuf<pos:position pos:line="17" pos:column="32"/></name> <operator pos:line="17" pos:column="33">+<pos:position pos:line="17" pos:column="34"/></operator> <call><name pos:line="17" pos:column="35">strlen<pos:position pos:line="17" pos:column="41"/></name><argument_list pos:line="17" pos:column="41">(<argument><expr><name pos:line="17" pos:column="42">filtbuf<pos:position pos:line="17" pos:column="49"/></name></expr></argument>)<pos:position pos:line="17" pos:column="50"/></argument_list></call></expr>;<pos:position pos:line="17" pos:column="51"/></init>
         <condition><expr><operator pos:line="18" pos:column="10">*<pos:position pos:line="18" pos:column="11"/></operator><name pos:line="18" pos:column="11">p<pos:position pos:line="18" pos:column="12"/></name> <operator pos:line="18" pos:column="13">&amp;&amp;<pos:position pos:line="18" pos:column="23"/></operator> <name pos:line="18" pos:column="16">q<pos:position pos:line="18" pos:column="17"/></name> <operator pos:line="18" pos:column="18">&lt;<pos:position pos:line="18" pos:column="22"/></operator> <name pos:line="18" pos:column="20">filtbuf_end<pos:position pos:line="18" pos:column="31"/></name></expr>;<pos:position pos:line="18" pos:column="32"/></condition> <incr><expr><operator pos:line="18" pos:column="33">*<pos:position pos:line="18" pos:column="34"/></operator><name pos:line="18" pos:column="34">q<pos:position pos:line="18" pos:column="35"/></name><operator pos:line="18" pos:column="35">++<pos:position pos:line="18" pos:column="37"/></operator> <operator pos:line="18" pos:column="38">=<pos:position pos:line="18" pos:column="39"/></operator> <operator pos:line="18" pos:column="40">*<pos:position pos:line="18" pos:column="41"/></operator><name pos:line="18" pos:column="41">p<pos:position pos:line="18" pos:column="42"/></name><operator pos:line="18" pos:column="42">++<pos:position pos:line="18" pos:column="44"/></operator></expr></incr>)<pos:position pos:line="18" pos:column="45"/></control> <block pos:line="18" pos:column="46">{
        <if pos:line="19" pos:column="9">if <condition pos:line="19" pos:column="12">(<expr><call><name pos:line="19" pos:column="13">strchr<pos:position pos:line="19" pos:column="19"/></name><argument_list pos:line="19" pos:column="19">(<argument><expr><literal type="string" pos:line="19" pos:column="20">"*()\\"<pos:position pos:line="19" pos:column="27"/></literal></expr></argument>, <argument><expr><operator pos:line="19" pos:column="29">*<pos:position pos:line="19" pos:column="30"/></operator><name pos:line="19" pos:column="30">p<pos:position pos:line="19" pos:column="31"/></name></expr></argument>)<pos:position pos:line="19" pos:column="32"/></argument_list></call> <operator pos:line="19" pos:column="33">!=<pos:position pos:line="19" pos:column="35"/></operator> <name pos:line="19" pos:column="36">NULL<pos:position pos:line="19" pos:column="40"/></name></expr>)<pos:position pos:line="19" pos:column="41"/></condition><then pos:line="19" pos:column="41"> <block pos:line="19" pos:column="42">{
            <expr_stmt><expr><operator pos:line="20" pos:column="13">*<pos:position pos:line="20" pos:column="14"/></operator><name pos:line="20" pos:column="14">q<pos:position pos:line="20" pos:column="15"/></name><operator pos:line="20" pos:column="15">++<pos:position pos:line="20" pos:column="17"/></operator> <operator pos:line="20" pos:column="18">=<pos:position pos:line="20" pos:column="19"/></operator> <literal type="char" pos:line="20" pos:column="20">'\\'<pos:position pos:line="20" pos:column="24"/></literal></expr>;<pos:position pos:line="20" pos:column="25"/></expr_stmt>
            <if pos:line="21" pos:column="13">if <condition pos:line="21" pos:column="16">(<expr><name pos:line="21" pos:column="17">q<pos:position pos:line="21" pos:column="18"/></name> <operator pos:line="21" pos:column="19">&gt;=<pos:position pos:line="21" pos:column="24"/></operator> <name pos:line="21" pos:column="22">filtbuf_end<pos:position pos:line="21" pos:column="33"/></name></expr>)<pos:position pos:line="21" pos:column="34"/></condition><then pos:line="21" pos:column="34"> <block pos:line="21" pos:column="35">{
	        <break pos:line="22" pos:column="17">break;<pos:position pos:line="22" pos:column="23"/></break>
	    }<pos:position pos:line="23" pos:column="14"/></block></then></if>
        }<pos:position pos:line="24" pos:column="10"/></block></then></if>
    }<pos:position pos:line="25" pos:column="6"/></block></for>
    <expr_stmt><expr><operator pos:line="26" pos:column="5">*<pos:position pos:line="26" pos:column="6"/></operator><name pos:line="26" pos:column="6">q<pos:position pos:line="26" pos:column="7"/></name> <operator pos:line="26" pos:column="8">=<pos:position pos:line="26" pos:column="9"/></operator> <literal type="char" pos:line="26" pos:column="10">'\0'<pos:position pos:line="26" pos:column="14"/></literal></expr>;<pos:position pos:line="26" pos:column="15"/></expr_stmt>

    <comment type="block" pos:line="28" pos:column="5">/* 
     * Append the closing parens of the filter, unless doing so would 
     * overrun the buffer.
     */</comment>
    <if pos:line="32" pos:column="5">if <condition pos:line="32" pos:column="8">(<expr><name pos:line="32" pos:column="9">q<pos:position pos:line="32" pos:column="10"/></name> <operator pos:line="32" pos:column="11">+<pos:position pos:line="32" pos:column="12"/></operator> <literal type="number" pos:line="32" pos:column="13">2<pos:position pos:line="32" pos:column="14"/></literal> <operator pos:line="32" pos:column="15">&lt;=<pos:position pos:line="32" pos:column="20"/></operator> <name pos:line="32" pos:column="18">filtbuf_end<pos:position pos:line="32" pos:column="29"/></name></expr>)<pos:position pos:line="32" pos:column="30"/></condition><then pos:line="32" pos:column="30">
        <block type="pseudo"><expr_stmt><expr><call><name pos:line="33" pos:column="9">strcat<pos:position pos:line="33" pos:column="15"/></name><argument_list pos:line="33" pos:column="15">(<argument><expr><name pos:line="33" pos:column="16">filtbuf<pos:position pos:line="33" pos:column="23"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="33" pos:column="25">"))"<pos:position pos:line="33" pos:column="29"/></literal></expr></argument>)<pos:position pos:line="33" pos:column="30"/></argument_list></call></expr>;<pos:position pos:line="33" pos:column="31"/></expr_stmt></block></then></if>
}<pos:position pos:line="34" pos:column="2"/></block></function></unit>

<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/httpd/gumtree/httpd_repos_function_2860_httpd-2.4.12.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><specifier pos:line="1" pos:column="8">const<pos:position pos:line="1" pos:column="13"/></specifier> <name pos:line="1" pos:column="14">char<pos:position pos:line="1" pos:column="18"/></name> <modifier pos:line="1" pos:column="19">*<pos:position pos:line="1" pos:column="20"/></modifier></type><name pos:line="1" pos:column="20">authz_merge_sections<pos:position pos:line="1" pos:column="40"/></name><parameter_list pos:line="1" pos:column="40">(<parameter><decl><type><name pos:line="1" pos:column="41">cmd_parms<pos:position pos:line="1" pos:column="50"/></name> <modifier pos:line="1" pos:column="51">*<pos:position pos:line="1" pos:column="52"/></modifier></type><name pos:line="1" pos:column="52">cmd<pos:position pos:line="1" pos:column="55"/></name></decl></parameter>, <parameter><decl><type><name pos:line="1" pos:column="57">void<pos:position pos:line="1" pos:column="61"/></name> <modifier pos:line="1" pos:column="62">*<pos:position pos:line="1" pos:column="63"/></modifier></type><name pos:line="1" pos:column="63">mconfig<pos:position pos:line="1" pos:column="70"/></name></decl></parameter>,
                                        <parameter><decl><type><specifier pos:line="2" pos:column="41">const<pos:position pos:line="2" pos:column="46"/></specifier> <name pos:line="2" pos:column="47">char<pos:position pos:line="2" pos:column="51"/></name> <modifier pos:line="2" pos:column="52">*<pos:position pos:line="2" pos:column="53"/></modifier></type><name pos:line="2" pos:column="53">arg<pos:position pos:line="2" pos:column="56"/></name></decl></parameter>)<pos:position pos:line="2" pos:column="57"/></parameter_list>
<block pos:line="3" pos:column="1">{
    <decl_stmt><decl><type><name pos:line="4" pos:column="5">authz_core_dir_conf<pos:position pos:line="4" pos:column="24"/></name> <modifier pos:line="4" pos:column="25">*<pos:position pos:line="4" pos:column="26"/></modifier></type><name pos:line="4" pos:column="26">conf<pos:position pos:line="4" pos:column="30"/></name> <init pos:line="4" pos:column="31">= <expr><name pos:line="4" pos:column="33">mconfig<pos:position pos:line="4" pos:column="40"/></name></expr></init></decl>;<pos:position pos:line="4" pos:column="41"/></decl_stmt>

    <if pos:line="6" pos:column="5">if <condition pos:line="6" pos:column="8">(<expr><operator pos:line="6" pos:column="9">!<pos:position pos:line="6" pos:column="10"/></operator><call><name pos:line="6" pos:column="10">strcasecmp<pos:position pos:line="6" pos:column="20"/></name><argument_list pos:line="6" pos:column="20">(<argument><expr><name pos:line="6" pos:column="21">arg<pos:position pos:line="6" pos:column="24"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="6" pos:column="26">"Off"<pos:position pos:line="6" pos:column="31"/></literal></expr></argument>)<pos:position pos:line="6" pos:column="32"/></argument_list></call></expr>)<pos:position pos:line="6" pos:column="33"/></condition><then pos:line="6" pos:column="33"> <block pos:line="6" pos:column="34">{
        <expr_stmt><expr><name><name pos:line="7" pos:column="9">conf<pos:position pos:line="7" pos:column="13"/></name><operator pos:line="7" pos:column="13">-&gt;<pos:position pos:line="7" pos:column="18"/></operator><name pos:line="7" pos:column="15">op<pos:position pos:line="7" pos:column="17"/></name></name> <operator pos:line="7" pos:column="18">=<pos:position pos:line="7" pos:column="19"/></operator> <name pos:line="7" pos:column="20">AUTHZ_LOGIC_OFF<pos:position pos:line="7" pos:column="35"/></name></expr>;<pos:position pos:line="7" pos:column="36"/></expr_stmt>
    }<pos:position pos:line="8" pos:column="6"/></block></then>
    <elseif pos:line="9" pos:column="5">else <if pos:line="9" pos:column="10">if <condition pos:line="9" pos:column="13">(<expr><operator pos:line="9" pos:column="14">!<pos:position pos:line="9" pos:column="15"/></operator><call><name pos:line="9" pos:column="15">strcasecmp<pos:position pos:line="9" pos:column="25"/></name><argument_list pos:line="9" pos:column="25">(<argument><expr><name pos:line="9" pos:column="26">arg<pos:position pos:line="9" pos:column="29"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="9" pos:column="31">"And"<pos:position pos:line="9" pos:column="36"/></literal></expr></argument>)<pos:position pos:line="9" pos:column="37"/></argument_list></call></expr>)<pos:position pos:line="9" pos:column="38"/></condition><then pos:line="9" pos:column="38"> <block pos:line="9" pos:column="39">{
        <expr_stmt><expr><name><name pos:line="10" pos:column="9">conf<pos:position pos:line="10" pos:column="13"/></name><operator pos:line="10" pos:column="13">-&gt;<pos:position pos:line="10" pos:column="18"/></operator><name pos:line="10" pos:column="15">op<pos:position pos:line="10" pos:column="17"/></name></name> <operator pos:line="10" pos:column="18">=<pos:position pos:line="10" pos:column="19"/></operator> <name pos:line="10" pos:column="20">AUTHZ_LOGIC_AND<pos:position pos:line="10" pos:column="35"/></name></expr>;<pos:position pos:line="10" pos:column="36"/></expr_stmt>
    }<pos:position pos:line="11" pos:column="6"/></block></then></if></elseif>
    <elseif pos:line="12" pos:column="5">else <if pos:line="12" pos:column="10">if <condition pos:line="12" pos:column="13">(<expr><operator pos:line="12" pos:column="14">!<pos:position pos:line="12" pos:column="15"/></operator><call><name pos:line="12" pos:column="15">strcasecmp<pos:position pos:line="12" pos:column="25"/></name><argument_list pos:line="12" pos:column="25">(<argument><expr><name pos:line="12" pos:column="26">arg<pos:position pos:line="12" pos:column="29"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="12" pos:column="31">"Or"<pos:position pos:line="12" pos:column="35"/></literal></expr></argument>)<pos:position pos:line="12" pos:column="36"/></argument_list></call></expr>)<pos:position pos:line="12" pos:column="37"/></condition><then pos:line="12" pos:column="37"> <block pos:line="12" pos:column="38">{
        <expr_stmt><expr><name><name pos:line="13" pos:column="9">conf<pos:position pos:line="13" pos:column="13"/></name><operator pos:line="13" pos:column="13">-&gt;<pos:position pos:line="13" pos:column="18"/></operator><name pos:line="13" pos:column="15">op<pos:position pos:line="13" pos:column="17"/></name></name> <operator pos:line="13" pos:column="18">=<pos:position pos:line="13" pos:column="19"/></operator> <name pos:line="13" pos:column="20">AUTHZ_LOGIC_OR<pos:position pos:line="13" pos:column="34"/></name></expr>;<pos:position pos:line="13" pos:column="35"/></expr_stmt>
    }<pos:position pos:line="14" pos:column="6"/></block></then></if></elseif>
    <else pos:line="15" pos:column="5">else <block pos:line="15" pos:column="10">{
        <return pos:line="16" pos:column="9">return <expr><call><name pos:line="16" pos:column="16">apr_pstrcat<pos:position pos:line="16" pos:column="27"/></name><argument_list pos:line="16" pos:column="27">(<argument><expr><name><name pos:line="16" pos:column="28">cmd<pos:position pos:line="16" pos:column="31"/></name><operator pos:line="16" pos:column="31">-&gt;<pos:position pos:line="16" pos:column="36"/></operator><name pos:line="16" pos:column="33">pool<pos:position pos:line="16" pos:column="37"/></name></name></expr></argument>, <argument><expr><name><name pos:line="16" pos:column="39">cmd<pos:position pos:line="16" pos:column="42"/></name><operator pos:line="16" pos:column="42">-&gt;<pos:position pos:line="16" pos:column="47"/></operator><name pos:line="16" pos:column="44">cmd<pos:position pos:line="16" pos:column="47"/></name><operator pos:line="16" pos:column="47">-&gt;<pos:position pos:line="16" pos:column="52"/></operator><name pos:line="16" pos:column="49">name<pos:position pos:line="16" pos:column="53"/></name></name></expr></argument>, <argument><expr><literal type="string" pos:line="16" pos:column="55">" must be one of: "<pos:position pos:line="16" pos:column="74"/></literal>
                           <literal type="string" pos:line="17" pos:column="28">"Off | And | Or"<pos:position pos:line="17" pos:column="44"/></literal></expr></argument>, <argument><expr><name pos:line="17" pos:column="46">NULL<pos:position pos:line="17" pos:column="50"/></name></expr></argument>)<pos:position pos:line="17" pos:column="51"/></argument_list></call></expr>;<pos:position pos:line="17" pos:column="52"/></return>
    }<pos:position pos:line="18" pos:column="6"/></block></else></if>

    <return pos:line="20" pos:column="5">return <expr><name pos:line="20" pos:column="12">NULL<pos:position pos:line="20" pos:column="16"/></name></expr>;<pos:position pos:line="20" pos:column="17"/></return>
}<pos:position pos:line="21" pos:column="2"/></block></function></unit>

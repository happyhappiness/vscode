<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/httpd/gumtree/httpd_function_3056.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">char<pos:position pos:line="1" pos:column="12"/></name> <modifier pos:line="1" pos:column="13">*<pos:position pos:line="1" pos:column="14"/></modifier></type><name pos:line="1" pos:column="14">lookup_map_txtfile<pos:position pos:line="1" pos:column="32"/></name><parameter_list pos:line="1" pos:column="32">(<parameter><decl><type><name pos:line="1" pos:column="33">request_rec<pos:position pos:line="1" pos:column="44"/></name> <modifier pos:line="1" pos:column="45">*<pos:position pos:line="1" pos:column="46"/></modifier></type><name pos:line="1" pos:column="46">r<pos:position pos:line="1" pos:column="47"/></name></decl></parameter>, <parameter><decl><type><specifier pos:line="1" pos:column="49">const<pos:position pos:line="1" pos:column="54"/></specifier> <name pos:line="1" pos:column="55">char<pos:position pos:line="1" pos:column="59"/></name> <modifier pos:line="1" pos:column="60">*<pos:position pos:line="1" pos:column="61"/></modifier></type><name pos:line="1" pos:column="61">file<pos:position pos:line="1" pos:column="65"/></name></decl></parameter>, <parameter><decl><type><name pos:line="1" pos:column="67">char<pos:position pos:line="1" pos:column="71"/></name> <modifier pos:line="1" pos:column="72">*<pos:position pos:line="1" pos:column="73"/></modifier></type><name pos:line="1" pos:column="73">key<pos:position pos:line="1" pos:column="76"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="77"/></parameter_list>
<block pos:line="2" pos:column="1">{
    <decl_stmt><decl><type><name pos:line="3" pos:column="5">apr_file_t<pos:position pos:line="3" pos:column="15"/></name> <modifier pos:line="3" pos:column="16">*<pos:position pos:line="3" pos:column="17"/></modifier></type><name pos:line="3" pos:column="17">fp<pos:position pos:line="3" pos:column="19"/></name> <init pos:line="3" pos:column="20">= <expr><name pos:line="3" pos:column="22">NULL<pos:position pos:line="3" pos:column="26"/></name></expr></init></decl>;<pos:position pos:line="3" pos:column="27"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="4" pos:column="5">char<pos:position pos:line="4" pos:column="9"/></name></type> <name><name pos:line="4" pos:column="10">line<pos:position pos:line="4" pos:column="14"/></name><index pos:line="4" pos:column="14">[<expr><name pos:line="4" pos:column="15">REWRITE_MAX_TXT_MAP_LINE<pos:position pos:line="4" pos:column="39"/></name> <operator pos:line="4" pos:column="40">+<pos:position pos:line="4" pos:column="41"/></operator> <literal type="number" pos:line="4" pos:column="42">1<pos:position pos:line="4" pos:column="43"/></literal></expr>]<pos:position pos:line="4" pos:column="44"/></index></name></decl>;<pos:position pos:line="4" pos:column="45"/></decl_stmt> <comment type="block" pos:line="4" pos:column="46">/* +1 for \0 */</comment>
    <decl_stmt><decl><type><name pos:line="5" pos:column="5">char<pos:position pos:line="5" pos:column="9"/></name> <modifier pos:line="5" pos:column="10">*<pos:position pos:line="5" pos:column="11"/></modifier></type><name pos:line="5" pos:column="11">value<pos:position pos:line="5" pos:column="16"/></name></decl>, <modifier pos:line="5" pos:column="18">*<pos:position pos:line="5" pos:column="19"/></modifier><decl><type ref="prev"/><name pos:line="5" pos:column="19">keylast<pos:position pos:line="5" pos:column="26"/></name></decl>;<pos:position pos:line="5" pos:column="27"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="6" pos:column="5">apr_status_t<pos:position pos:line="6" pos:column="17"/></name></type> <name pos:line="6" pos:column="18">rv<pos:position pos:line="6" pos:column="20"/></name></decl>;<pos:position pos:line="6" pos:column="21"/></decl_stmt>

    <if pos:line="8" pos:column="5">if <condition pos:line="8" pos:column="8">(<expr><operator pos:line="8" pos:column="9">(<pos:position pos:line="8" pos:column="10"/></operator><name pos:line="8" pos:column="10">rv<pos:position pos:line="8" pos:column="12"/></name> <operator pos:line="8" pos:column="13">=<pos:position pos:line="8" pos:column="14"/></operator> <call><name pos:line="8" pos:column="15">apr_file_open<pos:position pos:line="8" pos:column="28"/></name><argument_list pos:line="8" pos:column="28">(<argument><expr><operator pos:line="8" pos:column="29">&amp;<pos:position pos:line="8" pos:column="34"/></operator><name pos:line="8" pos:column="30">fp<pos:position pos:line="8" pos:column="32"/></name></expr></argument>, <argument><expr><name pos:line="8" pos:column="34">file<pos:position pos:line="8" pos:column="38"/></name></expr></argument>, <argument><expr><name pos:line="8" pos:column="40">APR_READ<pos:position pos:line="8" pos:column="48"/></name><operator pos:line="8" pos:column="48">|<pos:position pos:line="8" pos:column="49"/></operator><name pos:line="8" pos:column="49">APR_BUFFERED<pos:position pos:line="8" pos:column="61"/></name></expr></argument>, <argument><expr><name pos:line="8" pos:column="63">APR_OS_DEFAULT<pos:position pos:line="8" pos:column="77"/></name></expr></argument>,
                            <argument><expr><name><name pos:line="9" pos:column="29">r<pos:position pos:line="9" pos:column="30"/></name><operator pos:line="9" pos:column="30">-&gt;<pos:position pos:line="9" pos:column="35"/></operator><name pos:line="9" pos:column="32">pool<pos:position pos:line="9" pos:column="36"/></name></name></expr></argument>)<pos:position pos:line="9" pos:column="37"/></argument_list></call><operator pos:line="9" pos:column="37">)<pos:position pos:line="9" pos:column="38"/></operator> <operator pos:line="9" pos:column="39">!=<pos:position pos:line="9" pos:column="41"/></operator> <name pos:line="9" pos:column="42">APR_SUCCESS<pos:position pos:line="9" pos:column="53"/></name></expr>)<pos:position pos:line="9" pos:column="54"/></condition><then pos:line="9" pos:column="54">
    <block pos:line="10" pos:column="5">{
        <expr_stmt><expr><call><name pos:line="11" pos:column="9">ap_log_rerror<pos:position pos:line="11" pos:column="22"/></name><argument_list pos:line="11" pos:column="22">(<argument><expr><name pos:line="11" pos:column="23">APLOG_MARK<pos:position pos:line="11" pos:column="33"/></name></expr></argument>, <argument><expr><name pos:line="11" pos:column="35">APLOG_ERR<pos:position pos:line="11" pos:column="44"/></name></expr></argument>, <argument><expr><name pos:line="11" pos:column="46">rv<pos:position pos:line="11" pos:column="48"/></name></expr></argument>, <argument><expr><name pos:line="11" pos:column="50">r<pos:position pos:line="11" pos:column="51"/></name></expr></argument>,
                      <argument><expr><literal type="string" pos:line="12" pos:column="23">"mod_rewrite: can't open text RewriteMap file %s"<pos:position pos:line="12" pos:column="72"/></literal></expr></argument>, <argument><expr><name pos:line="12" pos:column="74">file<pos:position pos:line="12" pos:column="78"/></name></expr></argument>)<pos:position pos:line="12" pos:column="79"/></argument_list></call></expr>;<pos:position pos:line="12" pos:column="80"/></expr_stmt>
        <return pos:line="13" pos:column="9">return <expr><name pos:line="13" pos:column="16">NULL<pos:position pos:line="13" pos:column="20"/></name></expr>;<pos:position pos:line="13" pos:column="21"/></return>
    }<pos:position pos:line="14" pos:column="6"/></block></then></if>

    <expr_stmt><expr><name pos:line="16" pos:column="5">keylast<pos:position pos:line="16" pos:column="12"/></name> <operator pos:line="16" pos:column="13">=<pos:position pos:line="16" pos:column="14"/></operator> <name pos:line="16" pos:column="15">key<pos:position pos:line="16" pos:column="18"/></name> <operator pos:line="16" pos:column="19">+<pos:position pos:line="16" pos:column="20"/></operator> <call><name pos:line="16" pos:column="21">strlen<pos:position pos:line="16" pos:column="27"/></name><argument_list pos:line="16" pos:column="27">(<argument><expr><name pos:line="16" pos:column="28">key<pos:position pos:line="16" pos:column="31"/></name></expr></argument>)<pos:position pos:line="16" pos:column="32"/></argument_list></call></expr>;<pos:position pos:line="16" pos:column="33"/></expr_stmt>
    <expr_stmt><expr><name pos:line="17" pos:column="5">value<pos:position pos:line="17" pos:column="10"/></name> <operator pos:line="17" pos:column="11">=<pos:position pos:line="17" pos:column="12"/></operator> <name pos:line="17" pos:column="13">NULL<pos:position pos:line="17" pos:column="17"/></name></expr>;<pos:position pos:line="17" pos:column="18"/></expr_stmt>
    <while pos:line="18" pos:column="5">while <condition pos:line="18" pos:column="11">(<expr><call><name pos:line="18" pos:column="12">apr_file_gets<pos:position pos:line="18" pos:column="25"/></name><argument_list pos:line="18" pos:column="25">(<argument><expr><name pos:line="18" pos:column="26">line<pos:position pos:line="18" pos:column="30"/></name></expr></argument>, <argument><expr><sizeof pos:line="18" pos:column="32">sizeof<argument_list pos:line="18" pos:column="38">(<argument><expr><name pos:line="18" pos:column="39">line<pos:position pos:line="18" pos:column="43"/></name></expr></argument>)<pos:position pos:line="18" pos:column="44"/></argument_list></sizeof></expr></argument>, <argument><expr><name pos:line="18" pos:column="46">fp<pos:position pos:line="18" pos:column="48"/></name></expr></argument>)<pos:position pos:line="18" pos:column="49"/></argument_list></call> <operator pos:line="18" pos:column="50">==<pos:position pos:line="18" pos:column="52"/></operator> <name pos:line="18" pos:column="53">APR_SUCCESS<pos:position pos:line="18" pos:column="64"/></name></expr>)<pos:position pos:line="18" pos:column="65"/></condition> <block pos:line="18" pos:column="66">{
        <decl_stmt><decl><type><name pos:line="19" pos:column="9">char<pos:position pos:line="19" pos:column="13"/></name> <modifier pos:line="19" pos:column="14">*<pos:position pos:line="19" pos:column="15"/></modifier></type><name pos:line="19" pos:column="15">p<pos:position pos:line="19" pos:column="16"/></name></decl>, <modifier pos:line="19" pos:column="18">*<pos:position pos:line="19" pos:column="19"/></modifier><decl><type ref="prev"/><name pos:line="19" pos:column="19">c<pos:position pos:line="19" pos:column="20"/></name></decl>;<pos:position pos:line="19" pos:column="21"/></decl_stmt>

        <comment type="block" pos:line="21" pos:column="9">/* ignore comments and lines starting with whitespaces */</comment>
        <if pos:line="22" pos:column="9">if <condition pos:line="22" pos:column="12">(<expr><operator pos:line="22" pos:column="13">*<pos:position pos:line="22" pos:column="14"/></operator><name pos:line="22" pos:column="14">line<pos:position pos:line="22" pos:column="18"/></name> <operator pos:line="22" pos:column="19">==<pos:position pos:line="22" pos:column="21"/></operator> <literal type="char" pos:line="22" pos:column="22">'#'<pos:position pos:line="22" pos:column="25"/></literal> <operator pos:line="22" pos:column="26">||<pos:position pos:line="22" pos:column="28"/></operator> <call><name pos:line="22" pos:column="29">apr_isspace<pos:position pos:line="22" pos:column="40"/></name><argument_list pos:line="22" pos:column="40">(<argument><expr><operator pos:line="22" pos:column="41">*<pos:position pos:line="22" pos:column="42"/></operator><name pos:line="22" pos:column="42">line<pos:position pos:line="22" pos:column="46"/></name></expr></argument>)<pos:position pos:line="22" pos:column="47"/></argument_list></call></expr>)<pos:position pos:line="22" pos:column="48"/></condition><then pos:line="22" pos:column="48"> <block pos:line="22" pos:column="49">{
            <continue pos:line="23" pos:column="13">continue;<pos:position pos:line="23" pos:column="22"/></continue>
        }<pos:position pos:line="24" pos:column="10"/></block></then></if>

        <expr_stmt><expr><name pos:line="26" pos:column="9">p<pos:position pos:line="26" pos:column="10"/></name> <operator pos:line="26" pos:column="11">=<pos:position pos:line="26" pos:column="12"/></operator> <name pos:line="26" pos:column="13">line<pos:position pos:line="26" pos:column="17"/></name></expr>;<pos:position pos:line="26" pos:column="18"/></expr_stmt>
        <expr_stmt><expr><name pos:line="27" pos:column="9">c<pos:position pos:line="27" pos:column="10"/></name> <operator pos:line="27" pos:column="11">=<pos:position pos:line="27" pos:column="12"/></operator> <name pos:line="27" pos:column="13">key<pos:position pos:line="27" pos:column="16"/></name></expr>;<pos:position pos:line="27" pos:column="17"/></expr_stmt>
        <while pos:line="28" pos:column="9">while <condition pos:line="28" pos:column="15">(<expr><name pos:line="28" pos:column="16">c<pos:position pos:line="28" pos:column="17"/></name> <operator pos:line="28" pos:column="18">&lt;<pos:position pos:line="28" pos:column="22"/></operator> <name pos:line="28" pos:column="20">keylast<pos:position pos:line="28" pos:column="27"/></name> <operator pos:line="28" pos:column="28">&amp;&amp;<pos:position pos:line="28" pos:column="38"/></operator> <operator pos:line="28" pos:column="31">*<pos:position pos:line="28" pos:column="32"/></operator><name pos:line="28" pos:column="32">p<pos:position pos:line="28" pos:column="33"/></name> <operator pos:line="28" pos:column="34">==<pos:position pos:line="28" pos:column="36"/></operator> <operator pos:line="28" pos:column="37">*<pos:position pos:line="28" pos:column="38"/></operator><name pos:line="28" pos:column="38">c<pos:position pos:line="28" pos:column="39"/></name> <operator pos:line="28" pos:column="40">&amp;&amp;<pos:position pos:line="28" pos:column="50"/></operator> <operator pos:line="28" pos:column="43">!<pos:position pos:line="28" pos:column="44"/></operator><call><name pos:line="28" pos:column="44">apr_isspace<pos:position pos:line="28" pos:column="55"/></name><argument_list pos:line="28" pos:column="55">(<argument><expr><operator pos:line="28" pos:column="56">*<pos:position pos:line="28" pos:column="57"/></operator><name pos:line="28" pos:column="57">p<pos:position pos:line="28" pos:column="58"/></name></expr></argument>)<pos:position pos:line="28" pos:column="59"/></argument_list></call></expr>)<pos:position pos:line="28" pos:column="60"/></condition> <block pos:line="28" pos:column="61">{
            <expr_stmt><expr><operator pos:line="29" pos:column="13">++<pos:position pos:line="29" pos:column="15"/></operator><name pos:line="29" pos:column="15">p<pos:position pos:line="29" pos:column="16"/></name></expr>;<pos:position pos:line="29" pos:column="17"/></expr_stmt>
            <expr_stmt><expr><operator pos:line="30" pos:column="13">++<pos:position pos:line="30" pos:column="15"/></operator><name pos:line="30" pos:column="15">c<pos:position pos:line="30" pos:column="16"/></name></expr>;<pos:position pos:line="30" pos:column="17"/></expr_stmt>
        }<pos:position pos:line="31" pos:column="10"/></block></while>

        <comment type="block" pos:line="33" pos:column="9">/* key doesn't match - ignore. */</comment>
        <if pos:line="34" pos:column="9">if <condition pos:line="34" pos:column="12">(<expr><name pos:line="34" pos:column="13">c<pos:position pos:line="34" pos:column="14"/></name> <operator pos:line="34" pos:column="15">!=<pos:position pos:line="34" pos:column="17"/></operator> <name pos:line="34" pos:column="18">keylast<pos:position pos:line="34" pos:column="25"/></name> <operator pos:line="34" pos:column="26">||<pos:position pos:line="34" pos:column="28"/></operator> <operator pos:line="34" pos:column="29">!<pos:position pos:line="34" pos:column="30"/></operator><call><name pos:line="34" pos:column="30">apr_isspace<pos:position pos:line="34" pos:column="41"/></name><argument_list pos:line="34" pos:column="41">(<argument><expr><operator pos:line="34" pos:column="42">*<pos:position pos:line="34" pos:column="43"/></operator><name pos:line="34" pos:column="43">p<pos:position pos:line="34" pos:column="44"/></name></expr></argument>)<pos:position pos:line="34" pos:column="45"/></argument_list></call></expr>)<pos:position pos:line="34" pos:column="46"/></condition><then pos:line="34" pos:column="46"> <block pos:line="34" pos:column="47">{
            <continue pos:line="35" pos:column="13">continue;<pos:position pos:line="35" pos:column="22"/></continue>
        }<pos:position pos:line="36" pos:column="10"/></block></then></if>

        <comment type="block" pos:line="38" pos:column="9">/* jump to the value */</comment>
        <while pos:line="39" pos:column="9">while <condition pos:line="39" pos:column="15">(<expr><operator pos:line="39" pos:column="16">*<pos:position pos:line="39" pos:column="17"/></operator><name pos:line="39" pos:column="17">p<pos:position pos:line="39" pos:column="18"/></name> <operator pos:line="39" pos:column="19">&amp;&amp;<pos:position pos:line="39" pos:column="29"/></operator> <call><name pos:line="39" pos:column="22">apr_isspace<pos:position pos:line="39" pos:column="33"/></name><argument_list pos:line="39" pos:column="33">(<argument><expr><operator pos:line="39" pos:column="34">*<pos:position pos:line="39" pos:column="35"/></operator><name pos:line="39" pos:column="35">p<pos:position pos:line="39" pos:column="36"/></name></expr></argument>)<pos:position pos:line="39" pos:column="37"/></argument_list></call></expr>)<pos:position pos:line="39" pos:column="38"/></condition> <block pos:line="39" pos:column="39">{
            <expr_stmt><expr><operator pos:line="40" pos:column="13">++<pos:position pos:line="40" pos:column="15"/></operator><name pos:line="40" pos:column="15">p<pos:position pos:line="40" pos:column="16"/></name></expr>;<pos:position pos:line="40" pos:column="17"/></expr_stmt>
        }<pos:position pos:line="41" pos:column="10"/></block></while>

        <comment type="block" pos:line="43" pos:column="9">/* no value? ignore */</comment>
        <if pos:line="44" pos:column="9">if <condition pos:line="44" pos:column="12">(<expr><operator pos:line="44" pos:column="13">!<pos:position pos:line="44" pos:column="14"/></operator><operator pos:line="44" pos:column="14">*<pos:position pos:line="44" pos:column="15"/></operator><name pos:line="44" pos:column="15">p<pos:position pos:line="44" pos:column="16"/></name></expr>)<pos:position pos:line="44" pos:column="17"/></condition><then pos:line="44" pos:column="17"> <block pos:line="44" pos:column="18">{
            <continue pos:line="45" pos:column="13">continue;<pos:position pos:line="45" pos:column="22"/></continue>
        }<pos:position pos:line="46" pos:column="10"/></block></then></if>

        <comment type="block" pos:line="48" pos:column="9">/* extract the value and return. */</comment>
        <expr_stmt><expr><name pos:line="49" pos:column="9">c<pos:position pos:line="49" pos:column="10"/></name> <operator pos:line="49" pos:column="11">=<pos:position pos:line="49" pos:column="12"/></operator> <name pos:line="49" pos:column="13">p<pos:position pos:line="49" pos:column="14"/></name></expr>;<pos:position pos:line="49" pos:column="15"/></expr_stmt>
        <while pos:line="50" pos:column="9">while <condition pos:line="50" pos:column="15">(<expr><operator pos:line="50" pos:column="16">*<pos:position pos:line="50" pos:column="17"/></operator><name pos:line="50" pos:column="17">p<pos:position pos:line="50" pos:column="18"/></name> <operator pos:line="50" pos:column="19">&amp;&amp;<pos:position pos:line="50" pos:column="29"/></operator> <operator pos:line="50" pos:column="22">!<pos:position pos:line="50" pos:column="23"/></operator><call><name pos:line="50" pos:column="23">apr_isspace<pos:position pos:line="50" pos:column="34"/></name><argument_list pos:line="50" pos:column="34">(<argument><expr><operator pos:line="50" pos:column="35">*<pos:position pos:line="50" pos:column="36"/></operator><name pos:line="50" pos:column="36">p<pos:position pos:line="50" pos:column="37"/></name></expr></argument>)<pos:position pos:line="50" pos:column="38"/></argument_list></call></expr>)<pos:position pos:line="50" pos:column="39"/></condition> <block pos:line="50" pos:column="40">{
            <expr_stmt><expr><operator pos:line="51" pos:column="13">++<pos:position pos:line="51" pos:column="15"/></operator><name pos:line="51" pos:column="15">p<pos:position pos:line="51" pos:column="16"/></name></expr>;<pos:position pos:line="51" pos:column="17"/></expr_stmt>
        }<pos:position pos:line="52" pos:column="10"/></block></while>
        <expr_stmt><expr><name pos:line="53" pos:column="9">value<pos:position pos:line="53" pos:column="14"/></name> <operator pos:line="53" pos:column="15">=<pos:position pos:line="53" pos:column="16"/></operator> <call><name pos:line="53" pos:column="17">apr_pstrmemdup<pos:position pos:line="53" pos:column="31"/></name><argument_list pos:line="53" pos:column="31">(<argument><expr><name><name pos:line="53" pos:column="32">r<pos:position pos:line="53" pos:column="33"/></name><operator pos:line="53" pos:column="33">-&gt;<pos:position pos:line="53" pos:column="38"/></operator><name pos:line="53" pos:column="35">pool<pos:position pos:line="53" pos:column="39"/></name></name></expr></argument>, <argument><expr><name pos:line="53" pos:column="41">c<pos:position pos:line="53" pos:column="42"/></name></expr></argument>, <argument><expr><name pos:line="53" pos:column="44">p<pos:position pos:line="53" pos:column="45"/></name> <operator pos:line="53" pos:column="46">-<pos:position pos:line="53" pos:column="47"/></operator> <name pos:line="53" pos:column="48">c<pos:position pos:line="53" pos:column="49"/></name></expr></argument>)<pos:position pos:line="53" pos:column="50"/></argument_list></call></expr>;<pos:position pos:line="53" pos:column="51"/></expr_stmt>
        <break pos:line="54" pos:column="9">break;<pos:position pos:line="54" pos:column="15"/></break>
    }<pos:position pos:line="55" pos:column="6"/></block></while>
    <expr_stmt><expr><call><name pos:line="56" pos:column="5">apr_file_close<pos:position pos:line="56" pos:column="19"/></name><argument_list pos:line="56" pos:column="19">(<argument><expr><name pos:line="56" pos:column="20">fp<pos:position pos:line="56" pos:column="22"/></name></expr></argument>)<pos:position pos:line="56" pos:column="23"/></argument_list></call></expr>;<pos:position pos:line="56" pos:column="24"/></expr_stmt>

    <return pos:line="58" pos:column="5">return <expr><name pos:line="58" pos:column="12">value<pos:position pos:line="58" pos:column="17"/></name></expr>;<pos:position pos:line="58" pos:column="18"/></return>
}<pos:position pos:line="59" pos:column="2"/></block></function></unit>

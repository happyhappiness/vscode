<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/httpd/gumtree/httpd_repos_function_2510_httpd-2.0.43.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">XML_Content<pos:position pos:line="1" pos:column="19"/></name> <modifier pos:line="1" pos:column="20">*<pos:position pos:line="1" pos:column="21"/></modifier></type>
<name pos:line="2" pos:column="1">build_model<pos:position pos:line="2" pos:column="12"/></name> <parameter_list pos:line="2" pos:column="13">(<parameter><decl><type><name pos:line="2" pos:column="14">XML_Parser<pos:position pos:line="2" pos:column="24"/></name></type> <name pos:line="2" pos:column="25">parser<pos:position pos:line="2" pos:column="31"/></name></decl></parameter>)<pos:position pos:line="2" pos:column="32"/></parameter_list>
<block pos:line="3" pos:column="1">{
  <decl_stmt><decl><type><name pos:line="4" pos:column="3">XML_Content<pos:position pos:line="4" pos:column="14"/></name> <modifier pos:line="4" pos:column="15">*<pos:position pos:line="4" pos:column="16"/></modifier></type><name pos:line="4" pos:column="16">ret<pos:position pos:line="4" pos:column="19"/></name></decl>;<pos:position pos:line="4" pos:column="20"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="5" pos:column="3">XML_Content<pos:position pos:line="5" pos:column="14"/></name> <modifier pos:line="5" pos:column="15">*<pos:position pos:line="5" pos:column="16"/></modifier></type><name pos:line="5" pos:column="16">cpos<pos:position pos:line="5" pos:column="20"/></name></decl>;<pos:position pos:line="5" pos:column="21"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="6" pos:column="3">char<pos:position pos:line="6" pos:column="7"/></name> <modifier pos:line="6" pos:column="8">*<pos:position pos:line="6" pos:column="9"/></modifier></type> <name pos:line="6" pos:column="10">str<pos:position pos:line="6" pos:column="13"/></name></decl>;<pos:position pos:line="6" pos:column="14"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="7" pos:column="3">int<pos:position pos:line="7" pos:column="6"/></name></type> <name pos:line="7" pos:column="7">allocsize<pos:position pos:line="7" pos:column="16"/></name> <init pos:line="7" pos:column="17">= <expr><name><name pos:line="7" pos:column="19">dtd<pos:position pos:line="7" pos:column="22"/></name><operator pos:line="7" pos:column="22">.<pos:position pos:line="7" pos:column="23"/></operator><name pos:line="7" pos:column="23">scaffCount<pos:position pos:line="7" pos:column="33"/></name></name> <operator pos:line="7" pos:column="34">*<pos:position pos:line="7" pos:column="35"/></operator> <sizeof pos:line="7" pos:column="36">sizeof<argument_list pos:line="7" pos:column="42">(<argument><expr><name pos:line="7" pos:column="43">XML_Content<pos:position pos:line="7" pos:column="54"/></name></expr></argument>)<pos:position pos:line="7" pos:column="55"/></argument_list></sizeof> <operator pos:line="7" pos:column="56">+<pos:position pos:line="7" pos:column="57"/></operator> <name><name pos:line="7" pos:column="58">dtd<pos:position pos:line="7" pos:column="61"/></name><operator pos:line="7" pos:column="61">.<pos:position pos:line="7" pos:column="62"/></operator><name pos:line="7" pos:column="62">contentStringLen<pos:position pos:line="7" pos:column="78"/></name></name></expr></init></decl>;<pos:position pos:line="7" pos:column="79"/></decl_stmt>
  
  <expr_stmt><expr><name pos:line="9" pos:column="3">ret<pos:position pos:line="9" pos:column="6"/></name> <operator pos:line="9" pos:column="7">=<pos:position pos:line="9" pos:column="8"/></operator> <call><name pos:line="9" pos:column="9">MALLOC<pos:position pos:line="9" pos:column="15"/></name><argument_list pos:line="9" pos:column="15">(<argument><expr><name pos:line="9" pos:column="16">allocsize<pos:position pos:line="9" pos:column="25"/></name></expr></argument>)<pos:position pos:line="9" pos:column="26"/></argument_list></call></expr>;<pos:position pos:line="9" pos:column="27"/></expr_stmt>
  <if pos:line="10" pos:column="3">if <condition pos:line="10" pos:column="6">(<expr><operator pos:line="10" pos:column="7">!<pos:position pos:line="10" pos:column="8"/></operator> <name pos:line="10" pos:column="9">ret<pos:position pos:line="10" pos:column="12"/></name></expr>)<pos:position pos:line="10" pos:column="13"/></condition><then pos:line="10" pos:column="13">
    <block type="pseudo"><return pos:line="11" pos:column="5">return <expr><literal type="number" pos:line="11" pos:column="12">0<pos:position pos:line="11" pos:column="13"/></literal></expr>;<pos:position pos:line="11" pos:column="14"/></return></block></then></if>

  <expr_stmt><expr><name pos:line="13" pos:column="3">str<pos:position pos:line="13" pos:column="6"/></name> <operator pos:line="13" pos:column="7">=<pos:position pos:line="13" pos:column="8"/></operator>  <operator pos:line="13" pos:column="10">(<pos:position pos:line="13" pos:column="11"/></operator><name pos:line="13" pos:column="11">char<pos:position pos:line="13" pos:column="15"/></name> <operator pos:line="13" pos:column="16">*<pos:position pos:line="13" pos:column="17"/></operator><operator pos:line="13" pos:column="17">)<pos:position pos:line="13" pos:column="18"/></operator> <operator pos:line="13" pos:column="19">(<pos:position pos:line="13" pos:column="20"/></operator><operator pos:line="13" pos:column="20">&amp;<pos:position pos:line="13" pos:column="25"/></operator><name><name pos:line="13" pos:column="21">ret<pos:position pos:line="13" pos:column="24"/></name><index pos:line="13" pos:column="24">[<expr><name><name pos:line="13" pos:column="25">dtd<pos:position pos:line="13" pos:column="28"/></name><operator pos:line="13" pos:column="28">.<pos:position pos:line="13" pos:column="29"/></operator><name pos:line="13" pos:column="29">scaffCount<pos:position pos:line="13" pos:column="39"/></name></name></expr>]<pos:position pos:line="13" pos:column="40"/></index></name><operator pos:line="13" pos:column="40">)<pos:position pos:line="13" pos:column="41"/></operator></expr>;<pos:position pos:line="13" pos:column="42"/></expr_stmt>
  <expr_stmt><expr><name pos:line="14" pos:column="3">cpos<pos:position pos:line="14" pos:column="7"/></name> <operator pos:line="14" pos:column="8">=<pos:position pos:line="14" pos:column="9"/></operator> <operator pos:line="14" pos:column="10">&amp;<pos:position pos:line="14" pos:column="15"/></operator><name><name pos:line="14" pos:column="11">ret<pos:position pos:line="14" pos:column="14"/></name><index pos:line="14" pos:column="14">[<expr><literal type="number" pos:line="14" pos:column="15">1<pos:position pos:line="14" pos:column="16"/></literal></expr>]<pos:position pos:line="14" pos:column="17"/></index></name></expr>;<pos:position pos:line="14" pos:column="18"/></expr_stmt>

  <expr_stmt><expr><call><name pos:line="16" pos:column="3">build_node<pos:position pos:line="16" pos:column="13"/></name><argument_list pos:line="16" pos:column="13">(<argument><expr><name pos:line="16" pos:column="14">parser<pos:position pos:line="16" pos:column="20"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="16" pos:column="22">0<pos:position pos:line="16" pos:column="23"/></literal></expr></argument>, <argument><expr><name pos:line="16" pos:column="25">ret<pos:position pos:line="16" pos:column="28"/></name></expr></argument>, <argument><expr><operator pos:line="16" pos:column="30">&amp;<pos:position pos:line="16" pos:column="35"/></operator><name pos:line="16" pos:column="31">cpos<pos:position pos:line="16" pos:column="35"/></name></expr></argument>, <argument><expr><operator pos:line="16" pos:column="37">&amp;<pos:position pos:line="16" pos:column="42"/></operator><name pos:line="16" pos:column="38">str<pos:position pos:line="16" pos:column="41"/></name></expr></argument>)<pos:position pos:line="16" pos:column="42"/></argument_list></call></expr>;<pos:position pos:line="16" pos:column="43"/></expr_stmt>
  <return pos:line="17" pos:column="3">return <expr><name pos:line="17" pos:column="10">ret<pos:position pos:line="17" pos:column="13"/></name></expr>;<pos:position pos:line="17" pos:column="14"/></return>
}<pos:position pos:line="18" pos:column="2"/></block></function></unit>

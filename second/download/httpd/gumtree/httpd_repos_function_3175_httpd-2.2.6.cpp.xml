<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/httpd/gumtree/httpd_repos_function_3175_httpd-2.2.6.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">apr_table_entry_t<pos:position pos:line="1" pos:column="25"/></name> <modifier pos:line="1" pos:column="26">*<pos:position pos:line="1" pos:column="27"/></modifier><modifier pos:line="1" pos:column="27">*<pos:position pos:line="1" pos:column="28"/></modifier></type><name pos:line="1" pos:column="28">table_mergesort<pos:position pos:line="1" pos:column="43"/></name><parameter_list pos:line="1" pos:column="43">(<parameter><decl><type><name pos:line="1" pos:column="44">apr_pool_t<pos:position pos:line="1" pos:column="54"/></name> <modifier pos:line="1" pos:column="55">*<pos:position pos:line="1" pos:column="56"/></modifier></type><name pos:line="1" pos:column="56">pool<pos:position pos:line="1" pos:column="60"/></name></decl></parameter>,
                                           <parameter><decl><type><name pos:line="2" pos:column="44">apr_table_entry_t<pos:position pos:line="2" pos:column="61"/></name> <modifier pos:line="2" pos:column="62">*<pos:position pos:line="2" pos:column="63"/></modifier><modifier pos:line="2" pos:column="63">*<pos:position pos:line="2" pos:column="64"/></modifier></type><name pos:line="2" pos:column="64">values<pos:position pos:line="2" pos:column="70"/></name></decl></parameter>, 
                                           <parameter><decl><type><name pos:line="3" pos:column="44">apr_size_t<pos:position pos:line="3" pos:column="54"/></name></type> <name pos:line="3" pos:column="55">n<pos:position pos:line="3" pos:column="56"/></name></decl></parameter>)<pos:position pos:line="3" pos:column="57"/></parameter_list>
<block pos:line="4" pos:column="1">{
    <comment type="block" pos:line="5" pos:column="5">/* Bottom-up mergesort, based on design in Sedgewick's "Algorithms
     * in C," chapter 8
     */</comment>
    <decl_stmt><decl><type><name pos:line="8" pos:column="5">apr_table_entry_t<pos:position pos:line="8" pos:column="22"/></name> <modifier pos:line="8" pos:column="23">*<pos:position pos:line="8" pos:column="24"/></modifier><modifier pos:line="8" pos:column="24">*<pos:position pos:line="8" pos:column="25"/></modifier></type><name pos:line="8" pos:column="25">values_tmp<pos:position pos:line="8" pos:column="35"/></name> <init pos:line="8" pos:column="36">=
        <expr><operator pos:line="9" pos:column="9">(<pos:position pos:line="9" pos:column="10"/></operator><name pos:line="9" pos:column="10">apr_table_entry_t<pos:position pos:line="9" pos:column="27"/></name> <operator pos:line="9" pos:column="28">*<pos:position pos:line="9" pos:column="29"/></operator><operator pos:line="9" pos:column="29">*<pos:position pos:line="9" pos:column="30"/></operator><operator pos:line="9" pos:column="30">)<pos:position pos:line="9" pos:column="31"/></operator><call><name pos:line="9" pos:column="31">apr_palloc<pos:position pos:line="9" pos:column="41"/></name><argument_list pos:line="9" pos:column="41">(<argument><expr><name pos:line="9" pos:column="42">pool<pos:position pos:line="9" pos:column="46"/></name></expr></argument>, <argument><expr><name pos:line="9" pos:column="48">n<pos:position pos:line="9" pos:column="49"/></name> <operator pos:line="9" pos:column="50">*<pos:position pos:line="9" pos:column="51"/></operator> <sizeof pos:line="9" pos:column="52">sizeof<argument_list pos:line="9" pos:column="58">(<argument><expr><name pos:line="9" pos:column="59">apr_table_entry_t<pos:position pos:line="9" pos:column="76"/></name><operator pos:line="9" pos:column="76">*<pos:position pos:line="9" pos:column="77"/></operator></expr></argument>)<pos:position pos:line="9" pos:column="78"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="9" pos:column="79"/></argument_list></call></expr></init></decl>;<pos:position pos:line="9" pos:column="80"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="10" pos:column="5">apr_size_t<pos:position pos:line="10" pos:column="15"/></name></type> <name pos:line="10" pos:column="16">i<pos:position pos:line="10" pos:column="17"/></name></decl>;<pos:position pos:line="10" pos:column="18"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="11" pos:column="5">apr_size_t<pos:position pos:line="11" pos:column="15"/></name></type> <name pos:line="11" pos:column="16">blocksize<pos:position pos:line="11" pos:column="25"/></name></decl>;<pos:position pos:line="11" pos:column="26"/></decl_stmt>

    <comment type="block" pos:line="13" pos:column="5">/* First pass: sort pairs of elements (blocksize=1) */</comment>
    <for pos:line="14" pos:column="5">for <control pos:line="14" pos:column="9">(<init><expr><name pos:line="14" pos:column="10">i<pos:position pos:line="14" pos:column="11"/></name> <operator pos:line="14" pos:column="12">=<pos:position pos:line="14" pos:column="13"/></operator> <literal type="number" pos:line="14" pos:column="14">0<pos:position pos:line="14" pos:column="15"/></literal></expr>;<pos:position pos:line="14" pos:column="16"/></init> <condition><expr><name pos:line="14" pos:column="17">i<pos:position pos:line="14" pos:column="18"/></name> <operator pos:line="14" pos:column="19">+<pos:position pos:line="14" pos:column="20"/></operator> <literal type="number" pos:line="14" pos:column="21">1<pos:position pos:line="14" pos:column="22"/></literal> <operator pos:line="14" pos:column="23">&lt;<pos:position pos:line="14" pos:column="27"/></operator> <name pos:line="14" pos:column="25">n<pos:position pos:line="14" pos:column="26"/></name></expr>;<pos:position pos:line="14" pos:column="27"/></condition> <incr><expr><name pos:line="14" pos:column="28">i<pos:position pos:line="14" pos:column="29"/></name> <operator pos:line="14" pos:column="30">+=<pos:position pos:line="14" pos:column="32"/></operator> <literal type="number" pos:line="14" pos:column="33">2<pos:position pos:line="14" pos:column="34"/></literal></expr></incr>)<pos:position pos:line="14" pos:column="35"/></control> <block pos:line="14" pos:column="36">{
        <if pos:line="15" pos:column="9">if <condition pos:line="15" pos:column="12">(<expr><call><name pos:line="15" pos:column="13">strcasecmp<pos:position pos:line="15" pos:column="23"/></name><argument_list pos:line="15" pos:column="23">(<argument><expr><name><name pos:line="15" pos:column="24">values<pos:position pos:line="15" pos:column="30"/></name><index pos:line="15" pos:column="30">[<expr><name pos:line="15" pos:column="31">i<pos:position pos:line="15" pos:column="32"/></name></expr>]<pos:position pos:line="15" pos:column="33"/></index></name><operator pos:line="15" pos:column="33">-&gt;<pos:position pos:line="15" pos:column="38"/></operator><name pos:line="15" pos:column="35">key<pos:position pos:line="15" pos:column="38"/></name></expr></argument>, <argument><expr><name><name pos:line="15" pos:column="40">values<pos:position pos:line="15" pos:column="46"/></name><index pos:line="15" pos:column="46">[<expr><name pos:line="15" pos:column="47">i<pos:position pos:line="15" pos:column="48"/></name> <operator pos:line="15" pos:column="49">+<pos:position pos:line="15" pos:column="50"/></operator> <literal type="number" pos:line="15" pos:column="51">1<pos:position pos:line="15" pos:column="52"/></literal></expr>]<pos:position pos:line="15" pos:column="53"/></index></name><operator pos:line="15" pos:column="53">-&gt;<pos:position pos:line="15" pos:column="58"/></operator><name pos:line="15" pos:column="55">key<pos:position pos:line="15" pos:column="58"/></name></expr></argument>)<pos:position pos:line="15" pos:column="59"/></argument_list></call> <operator pos:line="15" pos:column="60">&gt;<pos:position pos:line="15" pos:column="64"/></operator> <literal type="number" pos:line="15" pos:column="62">0<pos:position pos:line="15" pos:column="63"/></literal></expr>)<pos:position pos:line="15" pos:column="64"/></condition><then pos:line="15" pos:column="64"> <block pos:line="15" pos:column="65">{
            <decl_stmt><decl><type><name pos:line="16" pos:column="13">apr_table_entry_t<pos:position pos:line="16" pos:column="30"/></name> <modifier pos:line="16" pos:column="31">*<pos:position pos:line="16" pos:column="32"/></modifier></type><name pos:line="16" pos:column="32">swap<pos:position pos:line="16" pos:column="36"/></name> <init pos:line="16" pos:column="37">= <expr><name><name pos:line="16" pos:column="39">values<pos:position pos:line="16" pos:column="45"/></name><index pos:line="16" pos:column="45">[<expr><name pos:line="16" pos:column="46">i<pos:position pos:line="16" pos:column="47"/></name></expr>]<pos:position pos:line="16" pos:column="48"/></index></name></expr></init></decl>;<pos:position pos:line="16" pos:column="49"/></decl_stmt>
            <expr_stmt><expr><name><name pos:line="17" pos:column="13">values<pos:position pos:line="17" pos:column="19"/></name><index pos:line="17" pos:column="19">[<expr><name pos:line="17" pos:column="20">i<pos:position pos:line="17" pos:column="21"/></name></expr>]<pos:position pos:line="17" pos:column="22"/></index></name> <operator pos:line="17" pos:column="23">=<pos:position pos:line="17" pos:column="24"/></operator> <name><name pos:line="17" pos:column="25">values<pos:position pos:line="17" pos:column="31"/></name><index pos:line="17" pos:column="31">[<expr><name pos:line="17" pos:column="32">i<pos:position pos:line="17" pos:column="33"/></name> <operator pos:line="17" pos:column="34">+<pos:position pos:line="17" pos:column="35"/></operator> <literal type="number" pos:line="17" pos:column="36">1<pos:position pos:line="17" pos:column="37"/></literal></expr>]<pos:position pos:line="17" pos:column="38"/></index></name></expr>;<pos:position pos:line="17" pos:column="39"/></expr_stmt>
            <expr_stmt><expr><name><name pos:line="18" pos:column="13">values<pos:position pos:line="18" pos:column="19"/></name><index pos:line="18" pos:column="19">[<expr><name pos:line="18" pos:column="20">i<pos:position pos:line="18" pos:column="21"/></name> <operator pos:line="18" pos:column="22">+<pos:position pos:line="18" pos:column="23"/></operator> <literal type="number" pos:line="18" pos:column="24">1<pos:position pos:line="18" pos:column="25"/></literal></expr>]<pos:position pos:line="18" pos:column="26"/></index></name> <operator pos:line="18" pos:column="27">=<pos:position pos:line="18" pos:column="28"/></operator> <name pos:line="18" pos:column="29">swap<pos:position pos:line="18" pos:column="33"/></name></expr>;<pos:position pos:line="18" pos:column="34"/></expr_stmt>
        }<pos:position pos:line="19" pos:column="10"/></block></then></if>
    }<pos:position pos:line="20" pos:column="6"/></block></for>

    <comment type="block" pos:line="22" pos:column="5">/* Merge successively larger blocks */</comment>
    <expr_stmt><expr><name pos:line="23" pos:column="5">blocksize<pos:position pos:line="23" pos:column="14"/></name> <operator pos:line="23" pos:column="15">=<pos:position pos:line="23" pos:column="16"/></operator> <literal type="number" pos:line="23" pos:column="17">2<pos:position pos:line="23" pos:column="18"/></literal></expr>;<pos:position pos:line="23" pos:column="19"/></expr_stmt>
    <while pos:line="24" pos:column="5">while <condition pos:line="24" pos:column="11">(<expr><name pos:line="24" pos:column="12">blocksize<pos:position pos:line="24" pos:column="21"/></name> <operator pos:line="24" pos:column="22">&lt;<pos:position pos:line="24" pos:column="26"/></operator> <name pos:line="24" pos:column="24">n<pos:position pos:line="24" pos:column="25"/></name></expr>)<pos:position pos:line="24" pos:column="26"/></condition> <block pos:line="24" pos:column="27">{
        <decl_stmt><decl><type><name pos:line="25" pos:column="9">apr_table_entry_t<pos:position pos:line="25" pos:column="26"/></name> <modifier pos:line="25" pos:column="27">*<pos:position pos:line="25" pos:column="28"/></modifier><modifier pos:line="25" pos:column="28">*<pos:position pos:line="25" pos:column="29"/></modifier></type><name pos:line="25" pos:column="29">dst<pos:position pos:line="25" pos:column="32"/></name> <init pos:line="25" pos:column="33">= <expr><name pos:line="25" pos:column="35">values_tmp<pos:position pos:line="25" pos:column="45"/></name></expr></init></decl>;<pos:position pos:line="25" pos:column="46"/></decl_stmt>
        <decl_stmt><decl><type><name pos:line="26" pos:column="9">apr_size_t<pos:position pos:line="26" pos:column="19"/></name></type> <name pos:line="26" pos:column="20">next_start<pos:position pos:line="26" pos:column="30"/></name></decl>;<pos:position pos:line="26" pos:column="31"/></decl_stmt>
        <decl_stmt><decl><type><name pos:line="27" pos:column="9">apr_table_entry_t<pos:position pos:line="27" pos:column="26"/></name> <modifier pos:line="27" pos:column="27">*<pos:position pos:line="27" pos:column="28"/></modifier><modifier pos:line="27" pos:column="28">*<pos:position pos:line="27" pos:column="29"/></modifier></type><name pos:line="27" pos:column="29">swap<pos:position pos:line="27" pos:column="33"/></name></decl>;<pos:position pos:line="27" pos:column="34"/></decl_stmt>

        <comment type="block" pos:line="29" pos:column="9">/* Merge consecutive pairs blocks of the next blocksize.
         * Within a block, elements are in sorted order due to
         * the previous iteration.
         */</comment>
        <for pos:line="33" pos:column="9">for <control pos:line="33" pos:column="13">(<init><expr><name pos:line="33" pos:column="14">next_start<pos:position pos:line="33" pos:column="24"/></name> <operator pos:line="33" pos:column="25">=<pos:position pos:line="33" pos:column="26"/></operator> <literal type="number" pos:line="33" pos:column="27">0<pos:position pos:line="33" pos:column="28"/></literal></expr>;<pos:position pos:line="33" pos:column="29"/></init> <condition><expr><name pos:line="33" pos:column="30">next_start<pos:position pos:line="33" pos:column="40"/></name> <operator pos:line="33" pos:column="41">+<pos:position pos:line="33" pos:column="42"/></operator> <name pos:line="33" pos:column="43">blocksize<pos:position pos:line="33" pos:column="52"/></name> <operator pos:line="33" pos:column="53">&lt;<pos:position pos:line="33" pos:column="57"/></operator> <name pos:line="33" pos:column="55">n<pos:position pos:line="33" pos:column="56"/></name></expr>;<pos:position pos:line="33" pos:column="57"/></condition>
             <incr><expr><name pos:line="34" pos:column="14">next_start<pos:position pos:line="34" pos:column="24"/></name> <operator pos:line="34" pos:column="25">+=<pos:position pos:line="34" pos:column="27"/></operator> <operator pos:line="34" pos:column="28">(<pos:position pos:line="34" pos:column="29"/></operator><name pos:line="34" pos:column="29">blocksize<pos:position pos:line="34" pos:column="38"/></name> <operator pos:line="34" pos:column="39">+<pos:position pos:line="34" pos:column="40"/></operator> <name pos:line="34" pos:column="41">blocksize<pos:position pos:line="34" pos:column="50"/></name><operator pos:line="34" pos:column="50">)<pos:position pos:line="34" pos:column="51"/></operator></expr></incr>)<pos:position pos:line="34" pos:column="52"/></control> <block pos:line="34" pos:column="53">{

            <decl_stmt><decl><type><name pos:line="36" pos:column="13">apr_size_t<pos:position pos:line="36" pos:column="23"/></name></type> <name pos:line="36" pos:column="24">block1_start<pos:position pos:line="36" pos:column="36"/></name> <init pos:line="36" pos:column="37">= <expr><name pos:line="36" pos:column="39">next_start<pos:position pos:line="36" pos:column="49"/></name></expr></init></decl>;<pos:position pos:line="36" pos:column="50"/></decl_stmt>
            <decl_stmt><decl><type><name pos:line="37" pos:column="13">apr_size_t<pos:position pos:line="37" pos:column="23"/></name></type> <name pos:line="37" pos:column="24">block2_start<pos:position pos:line="37" pos:column="36"/></name> <init pos:line="37" pos:column="37">= <expr><name pos:line="37" pos:column="39">block1_start<pos:position pos:line="37" pos:column="51"/></name> <operator pos:line="37" pos:column="52">+<pos:position pos:line="37" pos:column="53"/></operator> <name pos:line="37" pos:column="54">blocksize<pos:position pos:line="37" pos:column="63"/></name></expr></init></decl>;<pos:position pos:line="37" pos:column="64"/></decl_stmt>
            <decl_stmt><decl><type><name pos:line="38" pos:column="13">apr_size_t<pos:position pos:line="38" pos:column="23"/></name></type> <name pos:line="38" pos:column="24">block1_end<pos:position pos:line="38" pos:column="34"/></name> <init pos:line="38" pos:column="35">= <expr><name pos:line="38" pos:column="37">block2_start<pos:position pos:line="38" pos:column="49"/></name></expr></init></decl>;<pos:position pos:line="38" pos:column="50"/></decl_stmt>
            <decl_stmt><decl><type><name pos:line="39" pos:column="13">apr_size_t<pos:position pos:line="39" pos:column="23"/></name></type> <name pos:line="39" pos:column="24">block2_end<pos:position pos:line="39" pos:column="34"/></name> <init pos:line="39" pos:column="35">= <expr><name pos:line="39" pos:column="37">block2_start<pos:position pos:line="39" pos:column="49"/></name> <operator pos:line="39" pos:column="50">+<pos:position pos:line="39" pos:column="51"/></operator> <name pos:line="39" pos:column="52">blocksize<pos:position pos:line="39" pos:column="61"/></name></expr></init></decl>;<pos:position pos:line="39" pos:column="62"/></decl_stmt>
            <if pos:line="40" pos:column="13">if <condition pos:line="40" pos:column="16">(<expr><name pos:line="40" pos:column="17">block2_end<pos:position pos:line="40" pos:column="27"/></name> <operator pos:line="40" pos:column="28">&gt;<pos:position pos:line="40" pos:column="32"/></operator> <name pos:line="40" pos:column="30">n<pos:position pos:line="40" pos:column="31"/></name></expr>)<pos:position pos:line="40" pos:column="32"/></condition><then pos:line="40" pos:column="32"> <block pos:line="40" pos:column="33">{
                <comment type="block" pos:line="41" pos:column="17">/* The last block may be smaller than blocksize */</comment>
                <expr_stmt><expr><name pos:line="42" pos:column="17">block2_end<pos:position pos:line="42" pos:column="27"/></name> <operator pos:line="42" pos:column="28">=<pos:position pos:line="42" pos:column="29"/></operator> <name pos:line="42" pos:column="30">n<pos:position pos:line="42" pos:column="31"/></name></expr>;<pos:position pos:line="42" pos:column="32"/></expr_stmt>
            }<pos:position pos:line="43" pos:column="14"/></block></then></if>
            <for pos:line="44" pos:column="13">for <control pos:line="44" pos:column="17">(<init pos:line="44" pos:column="18">;<pos:position pos:line="44" pos:column="19"/></init><condition pos:line="44" pos:column="19">;<pos:position pos:line="44" pos:column="20"/></condition><incr/>)<pos:position pos:line="44" pos:column="21"/></control> <block pos:line="44" pos:column="22">{

                <comment type="block" pos:line="46" pos:column="17">/* Merge the next two blocks:
                 * Pick the smaller of the next element from
                 * block 1 and the next element from block 2.
                 * Once either of the blocks is emptied, copy
                 * over all the remaining elements from the
                 * other block
                 */</comment>
                <if pos:line="53" pos:column="17">if <condition pos:line="53" pos:column="20">(<expr><name pos:line="53" pos:column="21">block1_start<pos:position pos:line="53" pos:column="33"/></name> <operator pos:line="53" pos:column="34">==<pos:position pos:line="53" pos:column="36"/></operator> <name pos:line="53" pos:column="37">block1_end<pos:position pos:line="53" pos:column="47"/></name></expr>)<pos:position pos:line="53" pos:column="48"/></condition><then pos:line="53" pos:column="48"> <block pos:line="53" pos:column="49">{
                    <for pos:line="54" pos:column="21">for <control pos:line="54" pos:column="25">(<init pos:line="54" pos:column="26">;<pos:position pos:line="54" pos:column="27"/></init> <condition><expr><name pos:line="54" pos:column="28">block2_start<pos:position pos:line="54" pos:column="40"/></name> <operator pos:line="54" pos:column="41">&lt;<pos:position pos:line="54" pos:column="45"/></operator> <name pos:line="54" pos:column="43">block2_end<pos:position pos:line="54" pos:column="53"/></name></expr>;<pos:position pos:line="54" pos:column="54"/></condition> <incr><expr><name pos:line="54" pos:column="55">block2_start<pos:position pos:line="54" pos:column="67"/></name><operator pos:line="54" pos:column="67">++<pos:position pos:line="54" pos:column="69"/></operator></expr></incr>)<pos:position pos:line="54" pos:column="70"/></control> <block pos:line="54" pos:column="71">{
                        <expr_stmt><expr><operator pos:line="55" pos:column="25">*<pos:position pos:line="55" pos:column="26"/></operator><name pos:line="55" pos:column="26">dst<pos:position pos:line="55" pos:column="29"/></name><operator pos:line="55" pos:column="29">++<pos:position pos:line="55" pos:column="31"/></operator> <operator pos:line="55" pos:column="32">=<pos:position pos:line="55" pos:column="33"/></operator> <name><name pos:line="55" pos:column="34">values<pos:position pos:line="55" pos:column="40"/></name><index pos:line="55" pos:column="40">[<expr><name pos:line="55" pos:column="41">block2_start<pos:position pos:line="55" pos:column="53"/></name></expr>]<pos:position pos:line="55" pos:column="54"/></index></name></expr>;<pos:position pos:line="55" pos:column="55"/></expr_stmt>
                    }<pos:position pos:line="56" pos:column="22"/></block></for>
                    <break pos:line="57" pos:column="21">break;<pos:position pos:line="57" pos:column="27"/></break>
                }<pos:position pos:line="58" pos:column="18"/></block></then>
                <elseif pos:line="59" pos:column="17">else <if pos:line="59" pos:column="22">if <condition pos:line="59" pos:column="25">(<expr><name pos:line="59" pos:column="26">block2_start<pos:position pos:line="59" pos:column="38"/></name> <operator pos:line="59" pos:column="39">==<pos:position pos:line="59" pos:column="41"/></operator> <name pos:line="59" pos:column="42">block2_end<pos:position pos:line="59" pos:column="52"/></name></expr>)<pos:position pos:line="59" pos:column="53"/></condition><then pos:line="59" pos:column="53"> <block pos:line="59" pos:column="54">{
                    <for pos:line="60" pos:column="21">for <control pos:line="60" pos:column="25">(<init pos:line="60" pos:column="26">;<pos:position pos:line="60" pos:column="27"/></init> <condition><expr><name pos:line="60" pos:column="28">block1_start<pos:position pos:line="60" pos:column="40"/></name> <operator pos:line="60" pos:column="41">&lt;<pos:position pos:line="60" pos:column="45"/></operator> <name pos:line="60" pos:column="43">block1_end<pos:position pos:line="60" pos:column="53"/></name></expr>;<pos:position pos:line="60" pos:column="54"/></condition> <incr><expr><name pos:line="60" pos:column="55">block1_start<pos:position pos:line="60" pos:column="67"/></name><operator pos:line="60" pos:column="67">++<pos:position pos:line="60" pos:column="69"/></operator></expr></incr>)<pos:position pos:line="60" pos:column="70"/></control> <block pos:line="60" pos:column="71">{
                        <expr_stmt><expr><operator pos:line="61" pos:column="25">*<pos:position pos:line="61" pos:column="26"/></operator><name pos:line="61" pos:column="26">dst<pos:position pos:line="61" pos:column="29"/></name><operator pos:line="61" pos:column="29">++<pos:position pos:line="61" pos:column="31"/></operator> <operator pos:line="61" pos:column="32">=<pos:position pos:line="61" pos:column="33"/></operator> <name><name pos:line="61" pos:column="34">values<pos:position pos:line="61" pos:column="40"/></name><index pos:line="61" pos:column="40">[<expr><name pos:line="61" pos:column="41">block1_start<pos:position pos:line="61" pos:column="53"/></name></expr>]<pos:position pos:line="61" pos:column="54"/></index></name></expr>;<pos:position pos:line="61" pos:column="55"/></expr_stmt>
                    }<pos:position pos:line="62" pos:column="22"/></block></for>
                    <break pos:line="63" pos:column="21">break;<pos:position pos:line="63" pos:column="27"/></break>
                }<pos:position pos:line="64" pos:column="18"/></block></then></if></elseif></if>
                <if pos:line="65" pos:column="17">if <condition pos:line="65" pos:column="20">(<expr><call><name pos:line="65" pos:column="21">strcasecmp<pos:position pos:line="65" pos:column="31"/></name><argument_list pos:line="65" pos:column="31">(<argument><expr><name><name pos:line="65" pos:column="32">values<pos:position pos:line="65" pos:column="38"/></name><index pos:line="65" pos:column="38">[<expr><name pos:line="65" pos:column="39">block1_start<pos:position pos:line="65" pos:column="51"/></name></expr>]<pos:position pos:line="65" pos:column="52"/></index></name><operator pos:line="65" pos:column="52">-&gt;<pos:position pos:line="65" pos:column="57"/></operator><name pos:line="65" pos:column="54">key<pos:position pos:line="65" pos:column="57"/></name></expr></argument>,
                               <argument><expr><name><name pos:line="66" pos:column="32">values<pos:position pos:line="66" pos:column="38"/></name><index pos:line="66" pos:column="38">[<expr><name pos:line="66" pos:column="39">block2_start<pos:position pos:line="66" pos:column="51"/></name></expr>]<pos:position pos:line="66" pos:column="52"/></index></name><operator pos:line="66" pos:column="52">-&gt;<pos:position pos:line="66" pos:column="57"/></operator><name pos:line="66" pos:column="54">key<pos:position pos:line="66" pos:column="57"/></name></expr></argument>)<pos:position pos:line="66" pos:column="58"/></argument_list></call> <operator pos:line="66" pos:column="59">&gt;<pos:position pos:line="66" pos:column="63"/></operator> <literal type="number" pos:line="66" pos:column="61">0<pos:position pos:line="66" pos:column="62"/></literal></expr>)<pos:position pos:line="66" pos:column="63"/></condition><then pos:line="66" pos:column="63"> <block pos:line="66" pos:column="64">{
                    <expr_stmt><expr><operator pos:line="67" pos:column="21">*<pos:position pos:line="67" pos:column="22"/></operator><name pos:line="67" pos:column="22">dst<pos:position pos:line="67" pos:column="25"/></name><operator pos:line="67" pos:column="25">++<pos:position pos:line="67" pos:column="27"/></operator> <operator pos:line="67" pos:column="28">=<pos:position pos:line="67" pos:column="29"/></operator> <name><name pos:line="67" pos:column="30">values<pos:position pos:line="67" pos:column="36"/></name><index pos:line="67" pos:column="36">[<expr><name pos:line="67" pos:column="37">block2_start<pos:position pos:line="67" pos:column="49"/></name><operator pos:line="67" pos:column="49">++<pos:position pos:line="67" pos:column="51"/></operator></expr>]<pos:position pos:line="67" pos:column="52"/></index></name></expr>;<pos:position pos:line="67" pos:column="53"/></expr_stmt>
                }<pos:position pos:line="68" pos:column="18"/></block></then>
                <else pos:line="69" pos:column="17">else <block pos:line="69" pos:column="22">{
                    <expr_stmt><expr><operator pos:line="70" pos:column="21">*<pos:position pos:line="70" pos:column="22"/></operator><name pos:line="70" pos:column="22">dst<pos:position pos:line="70" pos:column="25"/></name><operator pos:line="70" pos:column="25">++<pos:position pos:line="70" pos:column="27"/></operator> <operator pos:line="70" pos:column="28">=<pos:position pos:line="70" pos:column="29"/></operator> <name><name pos:line="70" pos:column="30">values<pos:position pos:line="70" pos:column="36"/></name><index pos:line="70" pos:column="36">[<expr><name pos:line="70" pos:column="37">block1_start<pos:position pos:line="70" pos:column="49"/></name><operator pos:line="70" pos:column="49">++<pos:position pos:line="70" pos:column="51"/></operator></expr>]<pos:position pos:line="70" pos:column="52"/></index></name></expr>;<pos:position pos:line="70" pos:column="53"/></expr_stmt>
                }<pos:position pos:line="71" pos:column="18"/></block></else></if>
            }<pos:position pos:line="72" pos:column="14"/></block></for>
        }<pos:position pos:line="73" pos:column="10"/></block></for>

        <comment type="block" pos:line="75" pos:column="9">/* If n is not a multiple of 2*blocksize, some elements
         * will be left over at the end of the array.
         */</comment>
        <for pos:line="78" pos:column="9">for <control pos:line="78" pos:column="13">(<init><expr><name pos:line="78" pos:column="14">i<pos:position pos:line="78" pos:column="15"/></name> <operator pos:line="78" pos:column="16">=<pos:position pos:line="78" pos:column="17"/></operator> <name pos:line="78" pos:column="18">dst<pos:position pos:line="78" pos:column="21"/></name> <operator pos:line="78" pos:column="22">-<pos:position pos:line="78" pos:column="23"/></operator> <name pos:line="78" pos:column="24">values_tmp<pos:position pos:line="78" pos:column="34"/></name></expr>;<pos:position pos:line="78" pos:column="35"/></init> <condition><expr><name pos:line="78" pos:column="36">i<pos:position pos:line="78" pos:column="37"/></name> <operator pos:line="78" pos:column="38">&lt;<pos:position pos:line="78" pos:column="42"/></operator> <name pos:line="78" pos:column="40">n<pos:position pos:line="78" pos:column="41"/></name></expr>;<pos:position pos:line="78" pos:column="42"/></condition> <incr><expr><name pos:line="78" pos:column="43">i<pos:position pos:line="78" pos:column="44"/></name><operator pos:line="78" pos:column="44">++<pos:position pos:line="78" pos:column="46"/></operator></expr></incr>)<pos:position pos:line="78" pos:column="47"/></control> <block pos:line="78" pos:column="48">{
            <expr_stmt><expr><name><name pos:line="79" pos:column="13">values_tmp<pos:position pos:line="79" pos:column="23"/></name><index pos:line="79" pos:column="23">[<expr><name pos:line="79" pos:column="24">i<pos:position pos:line="79" pos:column="25"/></name></expr>]<pos:position pos:line="79" pos:column="26"/></index></name> <operator pos:line="79" pos:column="27">=<pos:position pos:line="79" pos:column="28"/></operator> <name><name pos:line="79" pos:column="29">values<pos:position pos:line="79" pos:column="35"/></name><index pos:line="79" pos:column="35">[<expr><name pos:line="79" pos:column="36">i<pos:position pos:line="79" pos:column="37"/></name></expr>]<pos:position pos:line="79" pos:column="38"/></index></name></expr>;<pos:position pos:line="79" pos:column="39"/></expr_stmt>
        }<pos:position pos:line="80" pos:column="10"/></block></for>

        <comment type="block" pos:line="82" pos:column="9">/* The output array of this pass becomes the input
         * array of the next pass, and vice versa
         */</comment>
        <expr_stmt><expr><name pos:line="85" pos:column="9">swap<pos:position pos:line="85" pos:column="13"/></name> <operator pos:line="85" pos:column="14">=<pos:position pos:line="85" pos:column="15"/></operator> <name pos:line="85" pos:column="16">values_tmp<pos:position pos:line="85" pos:column="26"/></name></expr>;<pos:position pos:line="85" pos:column="27"/></expr_stmt>
        <expr_stmt><expr><name pos:line="86" pos:column="9">values_tmp<pos:position pos:line="86" pos:column="19"/></name> <operator pos:line="86" pos:column="20">=<pos:position pos:line="86" pos:column="21"/></operator> <name pos:line="86" pos:column="22">values<pos:position pos:line="86" pos:column="28"/></name></expr>;<pos:position pos:line="86" pos:column="29"/></expr_stmt>
        <expr_stmt><expr><name pos:line="87" pos:column="9">values<pos:position pos:line="87" pos:column="15"/></name> <operator pos:line="87" pos:column="16">=<pos:position pos:line="87" pos:column="17"/></operator> <name pos:line="87" pos:column="18">swap<pos:position pos:line="87" pos:column="22"/></name></expr>;<pos:position pos:line="87" pos:column="23"/></expr_stmt>

        <expr_stmt><expr><name pos:line="89" pos:column="9">blocksize<pos:position pos:line="89" pos:column="18"/></name> <operator pos:line="89" pos:column="19">+=<pos:position pos:line="89" pos:column="21"/></operator> <name pos:line="89" pos:column="22">blocksize<pos:position pos:line="89" pos:column="31"/></name></expr>;<pos:position pos:line="89" pos:column="32"/></expr_stmt>
    }<pos:position pos:line="90" pos:column="6"/></block></while>

    <return pos:line="92" pos:column="5">return <expr><name pos:line="92" pos:column="12">values<pos:position pos:line="92" pos:column="18"/></name></expr>;<pos:position pos:line="92" pos:column="19"/></return>
}<pos:position pos:line="93" pos:column="2"/></block></function></unit>

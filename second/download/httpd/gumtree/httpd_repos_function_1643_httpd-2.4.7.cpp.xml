<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/httpd/gumtree/httpd_repos_function_1643_httpd-2.4.7.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">char<pos:position pos:line="1" pos:column="12"/></name> <modifier pos:line="1" pos:column="13">*<pos:position pos:line="1" pos:column="14"/></modifier></type><name pos:line="1" pos:column="14">substitute<pos:position pos:line="1" pos:column="24"/></name><parameter_list pos:line="1" pos:column="24">(<parameter><decl><type><name pos:line="1" pos:column="25">char<pos:position pos:line="1" pos:column="29"/></name> <modifier pos:line="1" pos:column="30">*<pos:position pos:line="1" pos:column="31"/></modifier></type><name pos:line="1" pos:column="31">buf<pos:position pos:line="1" pos:column="34"/></name></decl></parameter>,
                        <parameter><decl><type><specifier pos:line="2" pos:column="25">const<pos:position pos:line="2" pos:column="30"/></specifier> <name pos:line="2" pos:column="31">int<pos:position pos:line="2" pos:column="34"/></name></type> <name pos:line="2" pos:column="35">bufsize<pos:position pos:line="2" pos:column="42"/></name></decl></parameter>,
                        <parameter><decl><type><specifier pos:line="3" pos:column="25">const<pos:position pos:line="3" pos:column="30"/></specifier> <name pos:line="3" pos:column="31">char<pos:position pos:line="3" pos:column="35"/></name> <modifier pos:line="3" pos:column="36">*<pos:position pos:line="3" pos:column="37"/></modifier></type><name pos:line="3" pos:column="37">name<pos:position pos:line="3" pos:column="41"/></name></decl></parameter>,
                        <parameter><decl><type><specifier pos:line="4" pos:column="25">const<pos:position pos:line="4" pos:column="30"/></specifier> <name pos:line="4" pos:column="31">char<pos:position pos:line="4" pos:column="35"/></name> <modifier pos:line="4" pos:column="36">*<pos:position pos:line="4" pos:column="37"/></modifier></type><name pos:line="4" pos:column="37">replacement<pos:position pos:line="4" pos:column="48"/></name></decl></parameter>, <parameter><decl><type><specifier pos:line="4" pos:column="50">const<pos:position pos:line="4" pos:column="55"/></specifier> <name pos:line="4" pos:column="56">int<pos:position pos:line="4" pos:column="59"/></name></type> <name pos:line="4" pos:column="60">do_esc<pos:position pos:line="4" pos:column="66"/></name></decl></parameter>)<pos:position pos:line="4" pos:column="67"/></parameter_list>
<block pos:line="5" pos:column="1">{
    <decl_stmt><decl><type><name pos:line="6" pos:column="5">int<pos:position pos:line="6" pos:column="8"/></name></type> <name pos:line="6" pos:column="9">lbuf<pos:position pos:line="6" pos:column="13"/></name> <init pos:line="6" pos:column="14">= <expr><call><name pos:line="6" pos:column="16">strlen<pos:position pos:line="6" pos:column="22"/></name><argument_list pos:line="6" pos:column="22">(<argument><expr><name pos:line="6" pos:column="23">buf<pos:position pos:line="6" pos:column="26"/></name></expr></argument>)<pos:position pos:line="6" pos:column="27"/></argument_list></call></expr></init></decl>,
        <decl><type ref="prev"/><name pos:line="7" pos:column="9">lname<pos:position pos:line="7" pos:column="14"/></name> <init pos:line="7" pos:column="15">= <expr><call><name pos:line="7" pos:column="17">strlen<pos:position pos:line="7" pos:column="23"/></name><argument_list pos:line="7" pos:column="23">(<argument><expr><name pos:line="7" pos:column="24">name<pos:position pos:line="7" pos:column="28"/></name></expr></argument>)<pos:position pos:line="7" pos:column="29"/></argument_list></call></expr></init></decl>,
        <decl><type ref="prev"/><name pos:line="8" pos:column="9">lrepl<pos:position pos:line="8" pos:column="14"/></name> <init pos:line="8" pos:column="15">= <expr><call><name pos:line="8" pos:column="17">strlen<pos:position pos:line="8" pos:column="23"/></name><argument_list pos:line="8" pos:column="23">(<argument><expr><name pos:line="8" pos:column="24">replacement<pos:position pos:line="8" pos:column="35"/></name></expr></argument>)<pos:position pos:line="8" pos:column="36"/></argument_list></call></expr></init></decl>,
        <decl><type ref="prev"/><name pos:line="9" pos:column="9">lsubs<pos:position pos:line="9" pos:column="14"/></name> <init pos:line="9" pos:column="15">= <expr><name pos:line="9" pos:column="17">lrepl<pos:position pos:line="9" pos:column="22"/></name> <operator pos:line="9" pos:column="23">+<pos:position pos:line="9" pos:column="24"/></operator>
        <operator pos:line="10" pos:column="9">(<pos:position pos:line="10" pos:column="10"/></operator><ternary><condition><expr><name pos:line="10" pos:column="10">do_esc<pos:position pos:line="10" pos:column="16"/></name></expr> ?<pos:position pos:line="10" pos:column="18"/></condition><then pos:line="10" pos:column="18"> <expr><operator pos:line="10" pos:column="19">(<pos:position pos:line="10" pos:column="20"/></operator><literal type="number" pos:line="10" pos:column="20">2<pos:position pos:line="10" pos:column="21"/></literal> <operator pos:line="10" pos:column="22">+<pos:position pos:line="10" pos:column="23"/></operator> <call><name pos:line="10" pos:column="24">number_of_escapes<pos:position pos:line="10" pos:column="41"/></name><argument_list pos:line="10" pos:column="41">(<argument><expr><name pos:line="10" pos:column="42">DELIM<pos:position pos:line="10" pos:column="47"/></name></expr></argument>, <argument><expr><name pos:line="10" pos:column="49">replacement<pos:position pos:line="10" pos:column="60"/></name></expr></argument>)<pos:position pos:line="10" pos:column="61"/></argument_list></call><operator pos:line="10" pos:column="61">)<pos:position pos:line="10" pos:column="62"/></operator></expr> <pos:position pos:line="10" pos:column="63"/></then><else pos:line="10" pos:column="63">: <expr><literal type="number" pos:line="10" pos:column="65">0<pos:position pos:line="10" pos:column="66"/></literal></expr></else></ternary><operator pos:line="10" pos:column="66">)<pos:position pos:line="10" pos:column="67"/></operator></expr></init></decl>,
        <decl><type ref="prev"/><name pos:line="11" pos:column="9">shift<pos:position pos:line="11" pos:column="14"/></name> <init pos:line="11" pos:column="15">= <expr><name pos:line="11" pos:column="17">lsubs<pos:position pos:line="11" pos:column="22"/></name> <operator pos:line="11" pos:column="23">-<pos:position pos:line="11" pos:column="24"/></operator> <name pos:line="11" pos:column="25">lname<pos:position pos:line="11" pos:column="30"/></name></expr></init></decl>, <decl><type ref="prev"/><name pos:line="11" pos:column="32">size<pos:position pos:line="11" pos:column="36"/></name> <init pos:line="11" pos:column="37">= <expr><name pos:line="11" pos:column="39">lbuf<pos:position pos:line="11" pos:column="43"/></name> <operator pos:line="11" pos:column="44">+<pos:position pos:line="11" pos:column="45"/></operator> <name pos:line="11" pos:column="46">shift<pos:position pos:line="11" pos:column="51"/></name></expr></init></decl>, <decl><type ref="prev"/><name pos:line="11" pos:column="53">i<pos:position pos:line="11" pos:column="54"/></name></decl>, <decl><type ref="prev"/><name pos:line="11" pos:column="56">j<pos:position pos:line="11" pos:column="57"/></name></decl>;<pos:position pos:line="11" pos:column="58"/></decl_stmt>

    <comment type="block" pos:line="13" pos:column="5">/* buf must starts with name */</comment>
    <expr_stmt><expr><call><name pos:line="14" pos:column="5">ap_assert<pos:position pos:line="14" pos:column="14"/></name><argument_list pos:line="14" pos:column="14">(<argument><expr><operator pos:line="14" pos:column="15">!<pos:position pos:line="14" pos:column="16"/></operator><call><name pos:line="14" pos:column="16">strncmp<pos:position pos:line="14" pos:column="23"/></name><argument_list pos:line="14" pos:column="23">(<argument><expr><name pos:line="14" pos:column="24">buf<pos:position pos:line="14" pos:column="27"/></name></expr></argument>, <argument><expr><name pos:line="14" pos:column="29">name<pos:position pos:line="14" pos:column="33"/></name></expr></argument>, <argument><expr><name pos:line="14" pos:column="35">lname<pos:position pos:line="14" pos:column="40"/></name></expr></argument>)<pos:position pos:line="14" pos:column="41"/></argument_list></call></expr></argument>)<pos:position pos:line="14" pos:column="42"/></argument_list></call></expr>;<pos:position pos:line="14" pos:column="43"/></expr_stmt>

    <comment type="block" pos:line="16" pos:column="5">/* hmmm??? */</comment>
    <if pos:line="17" pos:column="5">if <condition pos:line="17" pos:column="8">(<expr><operator pos:line="17" pos:column="9">!<pos:position pos:line="17" pos:column="10"/></operator><call><name pos:line="17" pos:column="10">strcmp<pos:position pos:line="17" pos:column="16"/></name><argument_list pos:line="17" pos:column="16">(<argument><expr><name pos:line="17" pos:column="17">name<pos:position pos:line="17" pos:column="21"/></name></expr></argument>, <argument><expr><name pos:line="17" pos:column="23">replacement<pos:position pos:line="17" pos:column="34"/></name></expr></argument>)<pos:position pos:line="17" pos:column="35"/></argument_list></call></expr>)<pos:position pos:line="17" pos:column="36"/></condition><then pos:line="17" pos:column="36">
        <block type="pseudo"><return pos:line="18" pos:column="9">return <expr><name pos:line="18" pos:column="16">NULL<pos:position pos:line="18" pos:column="20"/></name></expr>;<pos:position pos:line="18" pos:column="21"/></return></block></then></if>

    <expr_stmt><expr><call><name pos:line="20" pos:column="5">debug<pos:position pos:line="20" pos:column="10"/></name><argument_list pos:line="20" pos:column="10">(<argument><expr><call><name pos:line="20" pos:column="11">fprintf<pos:position pos:line="20" pos:column="18"/></name><argument_list pos:line="20" pos:column="18">(<argument><expr><name pos:line="20" pos:column="19">stderr<pos:position pos:line="20" pos:column="25"/></name></expr></argument>,
                  <argument><expr><literal type="string" pos:line="21" pos:column="19">"substitute(%s,%s,%s,%d,sh=%d,lbuf=%d,lrepl=%d,lsubs=%d)\n"<pos:position pos:line="21" pos:column="78"/></literal></expr></argument>,
                  <argument><expr><name pos:line="22" pos:column="19">buf<pos:position pos:line="22" pos:column="22"/></name></expr></argument>, <argument><expr><name pos:line="22" pos:column="24">name<pos:position pos:line="22" pos:column="28"/></name></expr></argument>, <argument><expr><name pos:line="22" pos:column="30">replacement<pos:position pos:line="22" pos:column="41"/></name></expr></argument>, <argument><expr><name pos:line="22" pos:column="43">do_esc<pos:position pos:line="22" pos:column="49"/></name></expr></argument>, <argument><expr><name pos:line="22" pos:column="51">shift<pos:position pos:line="22" pos:column="56"/></name></expr></argument>, <argument><expr><name pos:line="22" pos:column="58">lbuf<pos:position pos:line="22" pos:column="62"/></name></expr></argument>, <argument><expr><name pos:line="22" pos:column="64">lrepl<pos:position pos:line="22" pos:column="69"/></name></expr></argument>, <argument><expr><name pos:line="22" pos:column="71">lsubs<pos:position pos:line="22" pos:column="76"/></name></expr></argument>)<pos:position pos:line="22" pos:column="77"/></argument_list></call></expr></argument>)<pos:position pos:line="22" pos:column="78"/></argument_list></call></expr>;<pos:position pos:line="22" pos:column="79"/></expr_stmt>

    <if pos:line="24" pos:column="5">if <condition pos:line="24" pos:column="8">(<expr><name pos:line="24" pos:column="9">size<pos:position pos:line="24" pos:column="13"/></name> <operator pos:line="24" pos:column="14">&gt;=<pos:position pos:line="24" pos:column="19"/></operator> <name pos:line="24" pos:column="17">bufsize<pos:position pos:line="24" pos:column="24"/></name></expr>)<pos:position pos:line="24" pos:column="25"/></condition><then pos:line="24" pos:column="25"> <block pos:line="24" pos:column="26">{
        <comment type="block" pos:line="25" pos:column="9">/* could/should I reallocate? */</comment>
        <return pos:line="26" pos:column="9">return <expr><literal type="string" pos:line="26" pos:column="16">"cannot substitute, buffer size too small"<pos:position pos:line="26" pos:column="58"/></literal></expr>;<pos:position pos:line="26" pos:column="59"/></return>
    }<pos:position pos:line="27" pos:column="6"/></block></then></if>

    <comment type="block" pos:line="29" pos:column="5">/* cannot use strcpy as strings may overlap */</comment>
    <if pos:line="30" pos:column="5">if <condition pos:line="30" pos:column="8">(<expr><name pos:line="30" pos:column="9">shift<pos:position pos:line="30" pos:column="14"/></name> <operator pos:line="30" pos:column="15">!=<pos:position pos:line="30" pos:column="17"/></operator> <literal type="number" pos:line="30" pos:column="18">0<pos:position pos:line="30" pos:column="19"/></literal></expr>)<pos:position pos:line="30" pos:column="20"/></condition><then pos:line="30" pos:column="20"> <block pos:line="30" pos:column="21">{
        <expr_stmt><expr><call><name pos:line="31" pos:column="9">memmove<pos:position pos:line="31" pos:column="16"/></name><argument_list pos:line="31" pos:column="16">(<argument><expr><name pos:line="31" pos:column="17">buf<pos:position pos:line="31" pos:column="20"/></name> <operator pos:line="31" pos:column="21">+<pos:position pos:line="31" pos:column="22"/></operator> <name pos:line="31" pos:column="23">lname<pos:position pos:line="31" pos:column="28"/></name> <operator pos:line="31" pos:column="29">+<pos:position pos:line="31" pos:column="30"/></operator> <name pos:line="31" pos:column="31">shift<pos:position pos:line="31" pos:column="36"/></name></expr></argument>, <argument><expr><name pos:line="31" pos:column="38">buf<pos:position pos:line="31" pos:column="41"/></name> <operator pos:line="31" pos:column="42">+<pos:position pos:line="31" pos:column="43"/></operator> <name pos:line="31" pos:column="44">lname<pos:position pos:line="31" pos:column="49"/></name></expr></argument>, <argument><expr><name pos:line="31" pos:column="51">lbuf<pos:position pos:line="31" pos:column="55"/></name> <operator pos:line="31" pos:column="56">-<pos:position pos:line="31" pos:column="57"/></operator> <name pos:line="31" pos:column="58">lname<pos:position pos:line="31" pos:column="63"/></name> <operator pos:line="31" pos:column="64">+<pos:position pos:line="31" pos:column="65"/></operator> <literal type="number" pos:line="31" pos:column="66">1<pos:position pos:line="31" pos:column="67"/></literal></expr></argument>)<pos:position pos:line="31" pos:column="68"/></argument_list></call></expr>;<pos:position pos:line="31" pos:column="69"/></expr_stmt>
    }<pos:position pos:line="32" pos:column="6"/></block></then></if>

    <comment type="block" pos:line="34" pos:column="5">/* insert the replacement with escapes */</comment>
    <expr_stmt><expr><name pos:line="35" pos:column="5">j<pos:position pos:line="35" pos:column="6"/></name> <operator pos:line="35" pos:column="7">=<pos:position pos:line="35" pos:column="8"/></operator> <literal type="number" pos:line="35" pos:column="9">0<pos:position pos:line="35" pos:column="10"/></literal></expr>;<pos:position pos:line="35" pos:column="11"/></expr_stmt>
    <if pos:line="36" pos:column="5">if <condition pos:line="36" pos:column="8">(<expr><name pos:line="36" pos:column="9">do_esc<pos:position pos:line="36" pos:column="15"/></name></expr>)<pos:position pos:line="36" pos:column="16"/></condition><then pos:line="36" pos:column="16">
        <block type="pseudo"><expr_stmt><expr><name><name pos:line="37" pos:column="9">buf<pos:position pos:line="37" pos:column="12"/></name><index pos:line="37" pos:column="12">[<expr><name pos:line="37" pos:column="13">j<pos:position pos:line="37" pos:column="14"/></name><operator pos:line="37" pos:column="14">++<pos:position pos:line="37" pos:column="16"/></operator></expr>]<pos:position pos:line="37" pos:column="17"/></index></name> <operator pos:line="37" pos:column="18">=<pos:position pos:line="37" pos:column="19"/></operator> <name pos:line="37" pos:column="20">DELIM<pos:position pos:line="37" pos:column="25"/></name></expr>;<pos:position pos:line="37" pos:column="26"/></expr_stmt></block></then></if>
    <for pos:line="38" pos:column="5">for <control pos:line="38" pos:column="9">(<init><expr><name pos:line="38" pos:column="10">i<pos:position pos:line="38" pos:column="11"/></name> <operator pos:line="38" pos:column="12">=<pos:position pos:line="38" pos:column="13"/></operator> <literal type="number" pos:line="38" pos:column="14">0<pos:position pos:line="38" pos:column="15"/></literal></expr>;<pos:position pos:line="38" pos:column="16"/></init> <condition><expr><name pos:line="38" pos:column="17">i<pos:position pos:line="38" pos:column="18"/></name> <operator pos:line="38" pos:column="19">&lt;<pos:position pos:line="38" pos:column="23"/></operator> <name pos:line="38" pos:column="21">lrepl<pos:position pos:line="38" pos:column="26"/></name></expr>;<pos:position pos:line="38" pos:column="27"/></condition> <incr><expr><name pos:line="38" pos:column="28">i<pos:position pos:line="38" pos:column="29"/></name><operator pos:line="38" pos:column="29">++<pos:position pos:line="38" pos:column="31"/></operator></expr><operator pos:line="38" pos:column="31">,<pos:position pos:line="38" pos:column="32"/></operator> <expr><name pos:line="38" pos:column="33">j<pos:position pos:line="38" pos:column="34"/></name><operator pos:line="38" pos:column="34">++<pos:position pos:line="38" pos:column="36"/></operator></expr></incr>)<pos:position pos:line="38" pos:column="37"/></control> <block pos:line="38" pos:column="38">{
        <if pos:line="39" pos:column="9">if <condition pos:line="39" pos:column="12">(<expr><name pos:line="39" pos:column="13">do_esc<pos:position pos:line="39" pos:column="19"/></name> <operator pos:line="39" pos:column="20">&amp;&amp;<pos:position pos:line="39" pos:column="30"/></operator> <operator pos:line="39" pos:column="23">(<pos:position pos:line="39" pos:column="24"/></operator><name><name pos:line="39" pos:column="24">replacement<pos:position pos:line="39" pos:column="35"/></name><index pos:line="39" pos:column="35">[<expr><name pos:line="39" pos:column="36">i<pos:position pos:line="39" pos:column="37"/></name></expr>]<pos:position pos:line="39" pos:column="38"/></index></name> <operator pos:line="39" pos:column="39">==<pos:position pos:line="39" pos:column="41"/></operator> <name pos:line="39" pos:column="42">DELIM<pos:position pos:line="39" pos:column="47"/></name> <operator pos:line="39" pos:column="48">||<pos:position pos:line="39" pos:column="50"/></operator> <name><name pos:line="39" pos:column="51">replacement<pos:position pos:line="39" pos:column="62"/></name><index pos:line="39" pos:column="62">[<expr><name pos:line="39" pos:column="63">i<pos:position pos:line="39" pos:column="64"/></name></expr>]<pos:position pos:line="39" pos:column="65"/></index></name> <operator pos:line="39" pos:column="66">==<pos:position pos:line="39" pos:column="68"/></operator> <name pos:line="39" pos:column="69">ESCAPE<pos:position pos:line="39" pos:column="75"/></name><operator pos:line="39" pos:column="75">)<pos:position pos:line="39" pos:column="76"/></operator></expr>)<pos:position pos:line="39" pos:column="77"/></condition><then pos:line="39" pos:column="77">
            <block type="pseudo"><expr_stmt><expr><name><name pos:line="40" pos:column="13">buf<pos:position pos:line="40" pos:column="16"/></name><index pos:line="40" pos:column="16">[<expr><name pos:line="40" pos:column="17">j<pos:position pos:line="40" pos:column="18"/></name><operator pos:line="40" pos:column="18">++<pos:position pos:line="40" pos:column="20"/></operator></expr>]<pos:position pos:line="40" pos:column="21"/></index></name> <operator pos:line="40" pos:column="22">=<pos:position pos:line="40" pos:column="23"/></operator> <name pos:line="40" pos:column="24">ESCAPE<pos:position pos:line="40" pos:column="30"/></name></expr>;<pos:position pos:line="40" pos:column="31"/></expr_stmt></block></then></if>
        <expr_stmt><expr><name><name pos:line="41" pos:column="9">buf<pos:position pos:line="41" pos:column="12"/></name><index pos:line="41" pos:column="12">[<expr><name pos:line="41" pos:column="13">j<pos:position pos:line="41" pos:column="14"/></name></expr>]<pos:position pos:line="41" pos:column="15"/></index></name> <operator pos:line="41" pos:column="16">=<pos:position pos:line="41" pos:column="17"/></operator> <name><name pos:line="41" pos:column="18">replacement<pos:position pos:line="41" pos:column="29"/></name><index pos:line="41" pos:column="29">[<expr><name pos:line="41" pos:column="30">i<pos:position pos:line="41" pos:column="31"/></name></expr>]<pos:position pos:line="41" pos:column="32"/></index></name></expr>;<pos:position pos:line="41" pos:column="33"/></expr_stmt>
    }<pos:position pos:line="42" pos:column="6"/></block></for>
    <if pos:line="43" pos:column="5">if <condition pos:line="43" pos:column="8">(<expr><name pos:line="43" pos:column="9">do_esc<pos:position pos:line="43" pos:column="15"/></name></expr>)<pos:position pos:line="43" pos:column="16"/></condition><then pos:line="43" pos:column="16">
        <block type="pseudo"><expr_stmt><expr><name><name pos:line="44" pos:column="9">buf<pos:position pos:line="44" pos:column="12"/></name><index pos:line="44" pos:column="12">[<expr><name pos:line="44" pos:column="13">j<pos:position pos:line="44" pos:column="14"/></name><operator pos:line="44" pos:column="14">++<pos:position pos:line="44" pos:column="16"/></operator></expr>]<pos:position pos:line="44" pos:column="17"/></index></name> <operator pos:line="44" pos:column="18">=<pos:position pos:line="44" pos:column="19"/></operator> <name pos:line="44" pos:column="20">DELIM<pos:position pos:line="44" pos:column="25"/></name></expr>;<pos:position pos:line="44" pos:column="26"/></expr_stmt></block></then></if>

    <return pos:line="46" pos:column="5">return <expr><name pos:line="46" pos:column="12">NULL<pos:position pos:line="46" pos:column="16"/></name></expr>;<pos:position pos:line="46" pos:column="17"/></return>
}<pos:position pos:line="47" pos:column="2"/></block></function></unit>

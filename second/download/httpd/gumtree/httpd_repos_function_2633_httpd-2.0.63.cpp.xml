<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/httpd/gumtree/httpd_repos_function_2633_httpd-2.0.63.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">ENCODING<pos:position pos:line="1" pos:column="9"/></name> <modifier pos:line="1" pos:column="10">*<pos:position pos:line="1" pos:column="11"/></modifier></type>
<name pos:line="2" pos:column="1">XmlInitUnknownEncodingNS<pos:position pos:line="2" pos:column="25"/></name><parameter_list pos:line="2" pos:column="25">(<parameter><decl><type><name pos:line="2" pos:column="26">void<pos:position pos:line="2" pos:column="30"/></name> <modifier pos:line="2" pos:column="31">*<pos:position pos:line="2" pos:column="32"/></modifier></type><name pos:line="2" pos:column="32">mem<pos:position pos:line="2" pos:column="35"/></name></decl></parameter>,
		         <parameter><decl><type><name pos:line="3" pos:column="26">int<pos:position pos:line="3" pos:column="29"/></name> <modifier pos:line="3" pos:column="30">*<pos:position pos:line="3" pos:column="31"/></modifier></type><name pos:line="3" pos:column="31">table<pos:position pos:line="3" pos:column="36"/></name></decl></parameter>,
		         <parameter><function_decl><type><name pos:line="4" pos:column="26">int<pos:position pos:line="4" pos:column="29"/></name></type> (<modifier pos:line="4" pos:column="31">*<pos:position pos:line="4" pos:column="32"/></modifier><name pos:line="4" pos:column="32">convert<pos:position pos:line="4" pos:column="39"/></name>)<parameter_list pos:line="4" pos:column="40">(<parameter><decl><type><name pos:line="4" pos:column="41">void<pos:position pos:line="4" pos:column="45"/></name> <modifier pos:line="4" pos:column="46">*<pos:position pos:line="4" pos:column="47"/></modifier></type><name pos:line="4" pos:column="47">userData<pos:position pos:line="4" pos:column="55"/></name></decl></parameter>, <parameter><decl><type><specifier pos:line="4" pos:column="57">const<pos:position pos:line="4" pos:column="62"/></specifier> <name pos:line="4" pos:column="63">char<pos:position pos:line="4" pos:column="67"/></name> <modifier pos:line="4" pos:column="68">*<pos:position pos:line="4" pos:column="69"/></modifier></type><name pos:line="4" pos:column="69">p<pos:position pos:line="4" pos:column="70"/></name></decl></parameter>)<pos:position pos:line="4" pos:column="71"/></parameter_list></function_decl></parameter>,
		         <parameter><decl><type><name pos:line="5" pos:column="26">void<pos:position pos:line="5" pos:column="30"/></name> <modifier pos:line="5" pos:column="31">*<pos:position pos:line="5" pos:column="32"/></modifier></type><name pos:line="5" pos:column="32">userData<pos:position pos:line="5" pos:column="40"/></name></decl></parameter>)<pos:position pos:line="5" pos:column="41"/></parameter_list>
<block pos:line="6" pos:column="1">{
  <decl_stmt><decl><type><name pos:line="7" pos:column="3">ENCODING<pos:position pos:line="7" pos:column="11"/></name> <modifier pos:line="7" pos:column="12">*<pos:position pos:line="7" pos:column="13"/></modifier></type><name pos:line="7" pos:column="13">enc<pos:position pos:line="7" pos:column="16"/></name> <init pos:line="7" pos:column="17">= <expr><call><name pos:line="7" pos:column="19">XmlInitUnknownEncoding<pos:position pos:line="7" pos:column="41"/></name><argument_list pos:line="7" pos:column="41">(<argument><expr><name pos:line="7" pos:column="42">mem<pos:position pos:line="7" pos:column="45"/></name></expr></argument>, <argument><expr><name pos:line="7" pos:column="47">table<pos:position pos:line="7" pos:column="52"/></name></expr></argument>, <argument><expr><name pos:line="7" pos:column="54">convert<pos:position pos:line="7" pos:column="61"/></name></expr></argument>, <argument><expr><name pos:line="7" pos:column="63">userData<pos:position pos:line="7" pos:column="71"/></name></expr></argument>)<pos:position pos:line="7" pos:column="72"/></argument_list></call></expr></init></decl>;<pos:position pos:line="7" pos:column="73"/></decl_stmt>
  <if pos:line="8" pos:column="3">if <condition pos:line="8" pos:column="6">(<expr><name pos:line="8" pos:column="7">enc<pos:position pos:line="8" pos:column="10"/></name></expr>)<pos:position pos:line="8" pos:column="11"/></condition><then pos:line="8" pos:column="11">
    <block type="pseudo"><expr_stmt><expr><operator pos:line="9" pos:column="5">(<pos:position pos:line="9" pos:column="6"/></operator><operator pos:line="9" pos:column="6">(<pos:position pos:line="9" pos:column="7"/></operator>struct <name pos:line="9" pos:column="14">normal_encoding<pos:position pos:line="9" pos:column="29"/></name> <operator pos:line="9" pos:column="30">*<pos:position pos:line="9" pos:column="31"/></operator><operator pos:line="9" pos:column="31">)<pos:position pos:line="9" pos:column="32"/></operator><name pos:line="9" pos:column="32">enc<pos:position pos:line="9" pos:column="35"/></name><operator pos:line="9" pos:column="35">)<pos:position pos:line="9" pos:column="36"/></operator><operator pos:line="9" pos:column="36">-&gt;<pos:position pos:line="9" pos:column="41"/></operator><name><name pos:line="9" pos:column="38">type<pos:position pos:line="9" pos:column="42"/></name><index pos:line="9" pos:column="42">[<expr><name pos:line="9" pos:column="43">ASCII_COLON<pos:position pos:line="9" pos:column="54"/></name></expr>]<pos:position pos:line="9" pos:column="55"/></index></name> <operator pos:line="9" pos:column="56">=<pos:position pos:line="9" pos:column="57"/></operator> <name pos:line="9" pos:column="58">BT_COLON<pos:position pos:line="9" pos:column="66"/></name></expr>;<pos:position pos:line="9" pos:column="67"/></expr_stmt></block></then></if>
  <return pos:line="10" pos:column="3">return <expr><name pos:line="10" pos:column="10">enc<pos:position pos:line="10" pos:column="13"/></name></expr>;<pos:position pos:line="10" pos:column="14"/></return>
}<pos:position pos:line="11" pos:column="2"/></block></function></unit>

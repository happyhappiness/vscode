<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/httpd/gumtree/httpd_repos_function_2055_httpd-2.4.16.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">int<pos:position pos:line="1" pos:column="11"/></name></type> <name pos:line="1" pos:column="12">sc_for_req_header<pos:position pos:line="1" pos:column="29"/></name><parameter_list pos:line="1" pos:column="29">(<parameter><decl><type><specifier pos:line="1" pos:column="30">const<pos:position pos:line="1" pos:column="35"/></specifier> <name pos:line="1" pos:column="36">char<pos:position pos:line="1" pos:column="40"/></name> <modifier pos:line="1" pos:column="41">*<pos:position pos:line="1" pos:column="42"/></modifier></type><name pos:line="1" pos:column="42">header_name<pos:position pos:line="1" pos:column="53"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="54"/></parameter_list>
<block pos:line="2" pos:column="1">{
    <decl_stmt><decl><type><name pos:line="3" pos:column="5">char<pos:position pos:line="3" pos:column="9"/></name></type> <name><name pos:line="3" pos:column="10">header<pos:position pos:line="3" pos:column="16"/></name><index pos:line="3" pos:column="16">[<expr><literal type="number" pos:line="3" pos:column="17">16<pos:position pos:line="3" pos:column="19"/></literal></expr>]<pos:position pos:line="3" pos:column="20"/></index></name></decl>;<pos:position pos:line="3" pos:column="21"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="4" pos:column="5">apr_size_t<pos:position pos:line="4" pos:column="15"/></name></type> <name pos:line="4" pos:column="16">len<pos:position pos:line="4" pos:column="19"/></name> <init pos:line="4" pos:column="20">= <expr><call><name pos:line="4" pos:column="22">strlen<pos:position pos:line="4" pos:column="28"/></name><argument_list pos:line="4" pos:column="28">(<argument><expr><name pos:line="4" pos:column="29">header_name<pos:position pos:line="4" pos:column="40"/></name></expr></argument>)<pos:position pos:line="4" pos:column="41"/></argument_list></call></expr></init></decl>;<pos:position pos:line="4" pos:column="42"/></decl_stmt>
    <decl_stmt><decl><type><specifier pos:line="5" pos:column="5">const<pos:position pos:line="5" pos:column="10"/></specifier> <name pos:line="5" pos:column="11">char<pos:position pos:line="5" pos:column="15"/></name> <modifier pos:line="5" pos:column="16">*<pos:position pos:line="5" pos:column="17"/></modifier></type><name pos:line="5" pos:column="17">p<pos:position pos:line="5" pos:column="18"/></name> <init pos:line="5" pos:column="19">= <expr><name pos:line="5" pos:column="21">header_name<pos:position pos:line="5" pos:column="32"/></name></expr></init></decl>;<pos:position pos:line="5" pos:column="33"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="6" pos:column="5">int<pos:position pos:line="6" pos:column="8"/></name></type> <name pos:line="6" pos:column="9">i<pos:position pos:line="6" pos:column="10"/></name> <init pos:line="6" pos:column="11">= <expr><literal type="number" pos:line="6" pos:column="13">0<pos:position pos:line="6" pos:column="14"/></literal></expr></init></decl>;<pos:position pos:line="6" pos:column="15"/></decl_stmt>

    <comment type="block" pos:line="8" pos:column="5">/* ACCEPT-LANGUAGE is the longest header
     * that is of interest.
     */</comment>
    <if pos:line="11" pos:column="5">if <condition pos:line="11" pos:column="8">(<expr><name><name pos:line="11" pos:column="9">len<pos:position pos:line="11" pos:column="12"/></name> <argument_list type="generic" pos:line="11" pos:column="13">&lt; <argument><expr><literal type="number" pos:line="11" pos:column="15">4<pos:position pos:line="11" pos:column="16"/></literal> <operator pos:line="11" pos:column="17">||<pos:position pos:line="11" pos:column="19"/></operator> <name pos:line="11" pos:column="20">len<pos:position pos:line="11" pos:column="23"/></name></expr></argument> &gt;<pos:position pos:line="11" pos:column="28"/></argument_list></name> <literal type="number" pos:line="11" pos:column="26">15<pos:position pos:line="11" pos:column="28"/></literal></expr>)<pos:position pos:line="11" pos:column="29"/></condition><then pos:line="11" pos:column="29">
        <block type="pseudo"><return pos:line="12" pos:column="9">return <expr><name pos:line="12" pos:column="16">UNKNOWN_METHOD<pos:position pos:line="12" pos:column="30"/></name></expr>;<pos:position pos:line="12" pos:column="31"/></return></block></then></if>

    <while pos:line="14" pos:column="5">while <condition pos:line="14" pos:column="11">(<expr><operator pos:line="14" pos:column="12">*<pos:position pos:line="14" pos:column="13"/></operator><name pos:line="14" pos:column="13">p<pos:position pos:line="14" pos:column="14"/></name></expr>)<pos:position pos:line="14" pos:column="15"/></condition>
        <block type="pseudo"><expr_stmt><expr><name><name pos:line="15" pos:column="9">header<pos:position pos:line="15" pos:column="15"/></name><index pos:line="15" pos:column="15">[<expr><name pos:line="15" pos:column="16">i<pos:position pos:line="15" pos:column="17"/></name><operator pos:line="15" pos:column="17">++<pos:position pos:line="15" pos:column="19"/></operator></expr>]<pos:position pos:line="15" pos:column="20"/></index></name> <operator pos:line="15" pos:column="21">=<pos:position pos:line="15" pos:column="22"/></operator> <call><name pos:line="15" pos:column="23">apr_toupper<pos:position pos:line="15" pos:column="34"/></name><argument_list pos:line="15" pos:column="34">(<argument><expr><operator pos:line="15" pos:column="35">*<pos:position pos:line="15" pos:column="36"/></operator><name pos:line="15" pos:column="36">p<pos:position pos:line="15" pos:column="37"/></name><operator pos:line="15" pos:column="37">++<pos:position pos:line="15" pos:column="39"/></operator></expr></argument>)<pos:position pos:line="15" pos:column="40"/></argument_list></call></expr>;<pos:position pos:line="15" pos:column="41"/></expr_stmt></block></while>
    <expr_stmt><expr><name><name pos:line="16" pos:column="5">header<pos:position pos:line="16" pos:column="11"/></name><index pos:line="16" pos:column="11">[<expr><name pos:line="16" pos:column="12">i<pos:position pos:line="16" pos:column="13"/></name></expr>]<pos:position pos:line="16" pos:column="14"/></index></name> <operator pos:line="16" pos:column="15">=<pos:position pos:line="16" pos:column="16"/></operator> <literal type="char" pos:line="16" pos:column="17">'\0'<pos:position pos:line="16" pos:column="21"/></literal></expr>;<pos:position pos:line="16" pos:column="22"/></expr_stmt>
    <expr_stmt><expr><name pos:line="17" pos:column="5">p<pos:position pos:line="17" pos:column="6"/></name> <operator pos:line="17" pos:column="7">=<pos:position pos:line="17" pos:column="8"/></operator> <operator pos:line="17" pos:column="9">&amp;<pos:position pos:line="17" pos:column="14"/></operator><name><name pos:line="17" pos:column="10">header<pos:position pos:line="17" pos:column="16"/></name><index pos:line="17" pos:column="16">[<expr><literal type="number" pos:line="17" pos:column="17">1<pos:position pos:line="17" pos:column="18"/></literal></expr>]<pos:position pos:line="17" pos:column="19"/></index></name></expr>;<pos:position pos:line="17" pos:column="20"/></expr_stmt>

    <switch pos:line="19" pos:column="5">switch <condition pos:line="19" pos:column="12">(<expr><name><name pos:line="19" pos:column="13">header<pos:position pos:line="19" pos:column="19"/></name><index pos:line="19" pos:column="19">[<expr><literal type="number" pos:line="19" pos:column="20">0<pos:position pos:line="19" pos:column="21"/></literal></expr>]<pos:position pos:line="19" pos:column="22"/></index></name></expr>)<pos:position pos:line="19" pos:column="23"/></condition> <block pos:line="19" pos:column="24">{
        <case pos:line="20" pos:column="9">case <expr><literal type="char" pos:line="20" pos:column="14">'A'<pos:position pos:line="20" pos:column="17"/></literal></expr>:<pos:position pos:line="20" pos:column="18"/></case>
            <if pos:line="21" pos:column="13">if <condition pos:line="21" pos:column="16">(<expr><call><name pos:line="21" pos:column="17">memcmp<pos:position pos:line="21" pos:column="23"/></name><argument_list pos:line="21" pos:column="23">(<argument><expr><name pos:line="21" pos:column="24">p<pos:position pos:line="21" pos:column="25"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="21" pos:column="27">"CCEPT"<pos:position pos:line="21" pos:column="34"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="21" pos:column="36">5<pos:position pos:line="21" pos:column="37"/></literal></expr></argument>)<pos:position pos:line="21" pos:column="38"/></argument_list></call> <operator pos:line="21" pos:column="39">==<pos:position pos:line="21" pos:column="41"/></operator> <literal type="number" pos:line="21" pos:column="42">0<pos:position pos:line="21" pos:column="43"/></literal></expr>)<pos:position pos:line="21" pos:column="44"/></condition><then pos:line="21" pos:column="44"> <block pos:line="21" pos:column="45">{
                <if pos:line="22" pos:column="17">if <condition pos:line="22" pos:column="20">(<expr><operator pos:line="22" pos:column="21">!<pos:position pos:line="22" pos:column="22"/></operator><name><name pos:line="22" pos:column="22">header<pos:position pos:line="22" pos:column="28"/></name><index pos:line="22" pos:column="28">[<expr><literal type="number" pos:line="22" pos:column="29">6<pos:position pos:line="22" pos:column="30"/></literal></expr>]<pos:position pos:line="22" pos:column="31"/></index></name></expr>)<pos:position pos:line="22" pos:column="32"/></condition><then pos:line="22" pos:column="32">
                    <block type="pseudo"><return pos:line="23" pos:column="21">return <expr><name pos:line="23" pos:column="28">SC_ACCEPT<pos:position pos:line="23" pos:column="37"/></name></expr>;<pos:position pos:line="23" pos:column="38"/></return></block></then>
                <elseif pos:line="24" pos:column="17">else <if pos:line="24" pos:column="22">if <condition pos:line="24" pos:column="25">(<expr><name><name pos:line="24" pos:column="26">header<pos:position pos:line="24" pos:column="32"/></name><index pos:line="24" pos:column="32">[<expr><literal type="number" pos:line="24" pos:column="33">6<pos:position pos:line="24" pos:column="34"/></literal></expr>]<pos:position pos:line="24" pos:column="35"/></index></name> <operator pos:line="24" pos:column="36">==<pos:position pos:line="24" pos:column="38"/></operator> <literal type="char" pos:line="24" pos:column="39">'-'<pos:position pos:line="24" pos:column="42"/></literal></expr>)<pos:position pos:line="24" pos:column="43"/></condition><then pos:line="24" pos:column="43"> <block pos:line="24" pos:column="44">{
                    <expr_stmt><expr><name pos:line="25" pos:column="21">p<pos:position pos:line="25" pos:column="22"/></name> <operator pos:line="25" pos:column="23">+=<pos:position pos:line="25" pos:column="25"/></operator> <literal type="number" pos:line="25" pos:column="26">6<pos:position pos:line="25" pos:column="27"/></literal></expr>;<pos:position pos:line="25" pos:column="28"/></expr_stmt>
                    <if pos:line="26" pos:column="21">if <condition pos:line="26" pos:column="24">(<expr><call><name pos:line="26" pos:column="25">strcmp<pos:position pos:line="26" pos:column="31"/></name><argument_list pos:line="26" pos:column="31">(<argument><expr><name pos:line="26" pos:column="32">p<pos:position pos:line="26" pos:column="33"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="26" pos:column="35">"CHARSET"<pos:position pos:line="26" pos:column="44"/></literal></expr></argument>)<pos:position pos:line="26" pos:column="45"/></argument_list></call> <operator pos:line="26" pos:column="46">==<pos:position pos:line="26" pos:column="48"/></operator> <literal type="number" pos:line="26" pos:column="49">0<pos:position pos:line="26" pos:column="50"/></literal></expr>)<pos:position pos:line="26" pos:column="51"/></condition><then pos:line="26" pos:column="51">
                        <block type="pseudo"><return pos:line="27" pos:column="25">return <expr><name pos:line="27" pos:column="32">SC_ACCEPT_CHARSET<pos:position pos:line="27" pos:column="49"/></name></expr>;<pos:position pos:line="27" pos:column="50"/></return></block></then>
                    <elseif pos:line="28" pos:column="21">else <if pos:line="28" pos:column="26">if <condition pos:line="28" pos:column="29">(<expr><call><name pos:line="28" pos:column="30">strcmp<pos:position pos:line="28" pos:column="36"/></name><argument_list pos:line="28" pos:column="36">(<argument><expr><name pos:line="28" pos:column="37">p<pos:position pos:line="28" pos:column="38"/></name></expr></argument>,  <argument><expr><literal type="string" pos:line="28" pos:column="41">"ENCODING"<pos:position pos:line="28" pos:column="51"/></literal></expr></argument>)<pos:position pos:line="28" pos:column="52"/></argument_list></call> <operator pos:line="28" pos:column="53">==<pos:position pos:line="28" pos:column="55"/></operator> <literal type="number" pos:line="28" pos:column="56">0<pos:position pos:line="28" pos:column="57"/></literal></expr>)<pos:position pos:line="28" pos:column="58"/></condition><then pos:line="28" pos:column="58">
                        <block type="pseudo"><return pos:line="29" pos:column="25">return <expr><name pos:line="29" pos:column="32">SC_ACCEPT_ENCODING<pos:position pos:line="29" pos:column="50"/></name></expr>;<pos:position pos:line="29" pos:column="51"/></return></block></then></if></elseif>
                    <elseif pos:line="30" pos:column="21">else <if pos:line="30" pos:column="26">if <condition pos:line="30" pos:column="29">(<expr><call><name pos:line="30" pos:column="30">strcmp<pos:position pos:line="30" pos:column="36"/></name><argument_list pos:line="30" pos:column="36">(<argument><expr><name pos:line="30" pos:column="37">p<pos:position pos:line="30" pos:column="38"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="30" pos:column="40">"LANGUAGE"<pos:position pos:line="30" pos:column="50"/></literal></expr></argument>)<pos:position pos:line="30" pos:column="51"/></argument_list></call> <operator pos:line="30" pos:column="52">==<pos:position pos:line="30" pos:column="54"/></operator> <literal type="number" pos:line="30" pos:column="55">0<pos:position pos:line="30" pos:column="56"/></literal></expr>)<pos:position pos:line="30" pos:column="57"/></condition><then pos:line="30" pos:column="57">
                        <block type="pseudo"><return pos:line="31" pos:column="25">return <expr><name pos:line="31" pos:column="32">SC_ACCEPT_LANGUAGE<pos:position pos:line="31" pos:column="50"/></name></expr>;<pos:position pos:line="31" pos:column="51"/></return></block></then></if></elseif>
                    <else pos:line="32" pos:column="21">else
                        <block type="pseudo"><return pos:line="33" pos:column="25">return <expr><name pos:line="33" pos:column="32">UNKNOWN_METHOD<pos:position pos:line="33" pos:column="46"/></name></expr>;<pos:position pos:line="33" pos:column="47"/></return></block></else></if>
                }<pos:position pos:line="34" pos:column="18"/></block></then></if></elseif>
                <else pos:line="35" pos:column="17">else
                    <block type="pseudo"><return pos:line="36" pos:column="21">return <expr><name pos:line="36" pos:column="28">UNKNOWN_METHOD<pos:position pos:line="36" pos:column="42"/></name></expr>;<pos:position pos:line="36" pos:column="43"/></return></block></else></if>
            }<pos:position pos:line="37" pos:column="14"/></block></then>
            <elseif pos:line="38" pos:column="13">else <if pos:line="38" pos:column="18">if <condition pos:line="38" pos:column="21">(<expr><call><name pos:line="38" pos:column="22">strcmp<pos:position pos:line="38" pos:column="28"/></name><argument_list pos:line="38" pos:column="28">(<argument><expr><name pos:line="38" pos:column="29">p<pos:position pos:line="38" pos:column="30"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="38" pos:column="32">"UTHORIZATION"<pos:position pos:line="38" pos:column="46"/></literal></expr></argument>)<pos:position pos:line="38" pos:column="47"/></argument_list></call> <operator pos:line="38" pos:column="48">==<pos:position pos:line="38" pos:column="50"/></operator> <literal type="number" pos:line="38" pos:column="51">0<pos:position pos:line="38" pos:column="52"/></literal></expr>)<pos:position pos:line="38" pos:column="53"/></condition><then pos:line="38" pos:column="53">
                <block type="pseudo"><return pos:line="39" pos:column="17">return <expr><name pos:line="39" pos:column="24">SC_AUTHORIZATION<pos:position pos:line="39" pos:column="40"/></name></expr>;<pos:position pos:line="39" pos:column="41"/></return></block></then></if></elseif>
            <else pos:line="40" pos:column="13">else
                <block type="pseudo"><return pos:line="41" pos:column="17">return <expr><name pos:line="41" pos:column="24">UNKNOWN_METHOD<pos:position pos:line="41" pos:column="38"/></name></expr>;<pos:position pos:line="41" pos:column="39"/></return></block></else></if>
        <break pos:line="42" pos:column="9">break;<pos:position pos:line="42" pos:column="15"/></break>
        <case pos:line="43" pos:column="9">case <expr><literal type="char" pos:line="43" pos:column="14">'C'<pos:position pos:line="43" pos:column="17"/></literal></expr>:<pos:position pos:line="43" pos:column="18"/></case>
            <if pos:line="44" pos:column="13">if<condition pos:line="44" pos:column="15">(<expr><call><name pos:line="44" pos:column="16">strcmp<pos:position pos:line="44" pos:column="22"/></name><argument_list pos:line="44" pos:column="22">(<argument><expr><name pos:line="44" pos:column="23">p<pos:position pos:line="44" pos:column="24"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="44" pos:column="26">"OOKIE2"<pos:position pos:line="44" pos:column="34"/></literal></expr></argument>)<pos:position pos:line="44" pos:column="35"/></argument_list></call> <operator pos:line="44" pos:column="36">==<pos:position pos:line="44" pos:column="38"/></operator> <literal type="number" pos:line="44" pos:column="39">0<pos:position pos:line="44" pos:column="40"/></literal></expr>)<pos:position pos:line="44" pos:column="41"/></condition><then pos:line="44" pos:column="41">
                <block type="pseudo"><return pos:line="45" pos:column="17">return <expr><name pos:line="45" pos:column="24">SC_COOKIE2<pos:position pos:line="45" pos:column="34"/></name></expr>;<pos:position pos:line="45" pos:column="35"/></return></block></then>
            <elseif pos:line="46" pos:column="13">else <if pos:line="46" pos:column="18">if <condition pos:line="46" pos:column="21">(<expr><call><name pos:line="46" pos:column="22">strcmp<pos:position pos:line="46" pos:column="28"/></name><argument_list pos:line="46" pos:column="28">(<argument><expr><name pos:line="46" pos:column="29">p<pos:position pos:line="46" pos:column="30"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="46" pos:column="32">"OOKIE"<pos:position pos:line="46" pos:column="39"/></literal></expr></argument>)<pos:position pos:line="46" pos:column="40"/></argument_list></call> <operator pos:line="46" pos:column="41">==<pos:position pos:line="46" pos:column="43"/></operator> <literal type="number" pos:line="46" pos:column="44">0<pos:position pos:line="46" pos:column="45"/></literal></expr>)<pos:position pos:line="46" pos:column="46"/></condition><then pos:line="46" pos:column="46">
                <block type="pseudo"><return pos:line="47" pos:column="17">return <expr><name pos:line="47" pos:column="24">SC_COOKIE<pos:position pos:line="47" pos:column="33"/></name></expr>;<pos:position pos:line="47" pos:column="34"/></return></block></then></if></elseif>
            <elseif pos:line="48" pos:column="13">else <if pos:line="48" pos:column="18">if<condition pos:line="48" pos:column="20">(<expr><call><name pos:line="48" pos:column="21">strcmp<pos:position pos:line="48" pos:column="27"/></name><argument_list pos:line="48" pos:column="27">(<argument><expr><name pos:line="48" pos:column="28">p<pos:position pos:line="48" pos:column="29"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="48" pos:column="31">"ONNECTION"<pos:position pos:line="48" pos:column="42"/></literal></expr></argument>)<pos:position pos:line="48" pos:column="43"/></argument_list></call> <operator pos:line="48" pos:column="44">==<pos:position pos:line="48" pos:column="46"/></operator> <literal type="number" pos:line="48" pos:column="47">0<pos:position pos:line="48" pos:column="48"/></literal></expr>)<pos:position pos:line="48" pos:column="49"/></condition><then pos:line="48" pos:column="49">
                <block type="pseudo"><return pos:line="49" pos:column="17">return <expr><name pos:line="49" pos:column="24">SC_CONNECTION<pos:position pos:line="49" pos:column="37"/></name></expr>;<pos:position pos:line="49" pos:column="38"/></return></block></then></if></elseif>
            <elseif pos:line="50" pos:column="13">else <if pos:line="50" pos:column="18">if<condition pos:line="50" pos:column="20">(<expr><call><name pos:line="50" pos:column="21">strcmp<pos:position pos:line="50" pos:column="27"/></name><argument_list pos:line="50" pos:column="27">(<argument><expr><name pos:line="50" pos:column="28">p<pos:position pos:line="50" pos:column="29"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="50" pos:column="31">"ONTENT-TYPE"<pos:position pos:line="50" pos:column="44"/></literal></expr></argument>)<pos:position pos:line="50" pos:column="45"/></argument_list></call> <operator pos:line="50" pos:column="46">==<pos:position pos:line="50" pos:column="48"/></operator> <literal type="number" pos:line="50" pos:column="49">0<pos:position pos:line="50" pos:column="50"/></literal></expr>)<pos:position pos:line="50" pos:column="51"/></condition><then pos:line="50" pos:column="51">
                <block type="pseudo"><return pos:line="51" pos:column="17">return <expr><name pos:line="51" pos:column="24">SC_CONTENT_TYPE<pos:position pos:line="51" pos:column="39"/></name></expr>;<pos:position pos:line="51" pos:column="40"/></return></block></then></if></elseif>
            <elseif pos:line="52" pos:column="13">else <if pos:line="52" pos:column="18">if<condition pos:line="52" pos:column="20">(<expr><call><name pos:line="52" pos:column="21">strcmp<pos:position pos:line="52" pos:column="27"/></name><argument_list pos:line="52" pos:column="27">(<argument><expr><name pos:line="52" pos:column="28">p<pos:position pos:line="52" pos:column="29"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="52" pos:column="31">"ONTENT-LENGTH"<pos:position pos:line="52" pos:column="46"/></literal></expr></argument>)<pos:position pos:line="52" pos:column="47"/></argument_list></call> <operator pos:line="52" pos:column="48">==<pos:position pos:line="52" pos:column="50"/></operator> <literal type="number" pos:line="52" pos:column="51">0<pos:position pos:line="52" pos:column="52"/></literal></expr>)<pos:position pos:line="52" pos:column="53"/></condition><then pos:line="52" pos:column="53">
                <block type="pseudo"><return pos:line="53" pos:column="17">return <expr><name pos:line="53" pos:column="24">SC_CONTENT_LENGTH<pos:position pos:line="53" pos:column="41"/></name></expr>;<pos:position pos:line="53" pos:column="42"/></return></block></then></if></elseif>
            <else pos:line="54" pos:column="13">else
                <block type="pseudo"><return pos:line="55" pos:column="17">return <expr><name pos:line="55" pos:column="24">UNKNOWN_METHOD<pos:position pos:line="55" pos:column="38"/></name></expr>;<pos:position pos:line="55" pos:column="39"/></return></block></else></if>
        <break pos:line="56" pos:column="9">break;<pos:position pos:line="56" pos:column="15"/></break>
        <case pos:line="57" pos:column="9">case <expr><literal type="char" pos:line="57" pos:column="14">'H'<pos:position pos:line="57" pos:column="17"/></literal></expr>:<pos:position pos:line="57" pos:column="18"/></case>
            <if pos:line="58" pos:column="13">if<condition pos:line="58" pos:column="15">(<expr><call><name pos:line="58" pos:column="16">strcmp<pos:position pos:line="58" pos:column="22"/></name><argument_list pos:line="58" pos:column="22">(<argument><expr><name pos:line="58" pos:column="23">p<pos:position pos:line="58" pos:column="24"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="58" pos:column="26">"OST"<pos:position pos:line="58" pos:column="31"/></literal></expr></argument>)<pos:position pos:line="58" pos:column="32"/></argument_list></call> <operator pos:line="58" pos:column="33">==<pos:position pos:line="58" pos:column="35"/></operator> <literal type="number" pos:line="58" pos:column="36">0<pos:position pos:line="58" pos:column="37"/></literal></expr>)<pos:position pos:line="58" pos:column="38"/></condition><then pos:line="58" pos:column="38">
                <block type="pseudo"><return pos:line="59" pos:column="17">return <expr><name pos:line="59" pos:column="24">SC_HOST<pos:position pos:line="59" pos:column="31"/></name></expr>;<pos:position pos:line="59" pos:column="32"/></return></block></then>
            <else pos:line="60" pos:column="13">else
                <block type="pseudo"><return pos:line="61" pos:column="17">return <expr><name pos:line="61" pos:column="24">UNKNOWN_METHOD<pos:position pos:line="61" pos:column="38"/></name></expr>;<pos:position pos:line="61" pos:column="39"/></return></block></else></if>
        <break pos:line="62" pos:column="9">break;<pos:position pos:line="62" pos:column="15"/></break>
        <case pos:line="63" pos:column="9">case <expr><literal type="char" pos:line="63" pos:column="14">'P'<pos:position pos:line="63" pos:column="17"/></literal></expr>:<pos:position pos:line="63" pos:column="18"/></case>
            <if pos:line="64" pos:column="13">if<condition pos:line="64" pos:column="15">(<expr><call><name pos:line="64" pos:column="16">strcmp<pos:position pos:line="64" pos:column="22"/></name><argument_list pos:line="64" pos:column="22">(<argument><expr><name pos:line="64" pos:column="23">p<pos:position pos:line="64" pos:column="24"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="64" pos:column="26">"RAGMA"<pos:position pos:line="64" pos:column="33"/></literal></expr></argument>)<pos:position pos:line="64" pos:column="34"/></argument_list></call> <operator pos:line="64" pos:column="35">==<pos:position pos:line="64" pos:column="37"/></operator> <literal type="number" pos:line="64" pos:column="38">0<pos:position pos:line="64" pos:column="39"/></literal></expr>)<pos:position pos:line="64" pos:column="40"/></condition><then pos:line="64" pos:column="40">
                <block type="pseudo"><return pos:line="65" pos:column="17">return <expr><name pos:line="65" pos:column="24">SC_PRAGMA<pos:position pos:line="65" pos:column="33"/></name></expr>;<pos:position pos:line="65" pos:column="34"/></return></block></then>
            <else pos:line="66" pos:column="13">else
                <block type="pseudo"><return pos:line="67" pos:column="17">return <expr><name pos:line="67" pos:column="24">UNKNOWN_METHOD<pos:position pos:line="67" pos:column="38"/></name></expr>;<pos:position pos:line="67" pos:column="39"/></return></block></else></if>
        <break pos:line="68" pos:column="9">break;<pos:position pos:line="68" pos:column="15"/></break>
        <case pos:line="69" pos:column="9">case <expr><literal type="char" pos:line="69" pos:column="14">'R'<pos:position pos:line="69" pos:column="17"/></literal></expr>:<pos:position pos:line="69" pos:column="18"/></case>
            <if pos:line="70" pos:column="13">if<condition pos:line="70" pos:column="15">(<expr><call><name pos:line="70" pos:column="16">strcmp<pos:position pos:line="70" pos:column="22"/></name><argument_list pos:line="70" pos:column="22">(<argument><expr><name pos:line="70" pos:column="23">p<pos:position pos:line="70" pos:column="24"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="70" pos:column="26">"EFERER"<pos:position pos:line="70" pos:column="34"/></literal></expr></argument>)<pos:position pos:line="70" pos:column="35"/></argument_list></call> <operator pos:line="70" pos:column="36">==<pos:position pos:line="70" pos:column="38"/></operator> <literal type="number" pos:line="70" pos:column="39">0<pos:position pos:line="70" pos:column="40"/></literal></expr>)<pos:position pos:line="70" pos:column="41"/></condition><then pos:line="70" pos:column="41">
                <block type="pseudo"><return pos:line="71" pos:column="17">return <expr><name pos:line="71" pos:column="24">SC_REFERER<pos:position pos:line="71" pos:column="34"/></name></expr>;<pos:position pos:line="71" pos:column="35"/></return></block></then>
            <else pos:line="72" pos:column="13">else
                <block type="pseudo"><return pos:line="73" pos:column="17">return <expr><name pos:line="73" pos:column="24">UNKNOWN_METHOD<pos:position pos:line="73" pos:column="38"/></name></expr>;<pos:position pos:line="73" pos:column="39"/></return></block></else></if>
        <break pos:line="74" pos:column="9">break;<pos:position pos:line="74" pos:column="15"/></break>
        <case pos:line="75" pos:column="9">case <expr><literal type="char" pos:line="75" pos:column="14">'U'<pos:position pos:line="75" pos:column="17"/></literal></expr>:<pos:position pos:line="75" pos:column="18"/></case>
            <if pos:line="76" pos:column="13">if<condition pos:line="76" pos:column="15">(<expr><call><name pos:line="76" pos:column="16">strcmp<pos:position pos:line="76" pos:column="22"/></name><argument_list pos:line="76" pos:column="22">(<argument><expr><name pos:line="76" pos:column="23">p<pos:position pos:line="76" pos:column="24"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="76" pos:column="26">"SER-AGENT"<pos:position pos:line="76" pos:column="37"/></literal></expr></argument>)<pos:position pos:line="76" pos:column="38"/></argument_list></call> <operator pos:line="76" pos:column="39">==<pos:position pos:line="76" pos:column="41"/></operator> <literal type="number" pos:line="76" pos:column="42">0<pos:position pos:line="76" pos:column="43"/></literal></expr>)<pos:position pos:line="76" pos:column="44"/></condition><then pos:line="76" pos:column="44">
                <block type="pseudo"><return pos:line="77" pos:column="17">return <expr><name pos:line="77" pos:column="24">SC_USER_AGENT<pos:position pos:line="77" pos:column="37"/></name></expr>;<pos:position pos:line="77" pos:column="38"/></return></block></then>
            <else pos:line="78" pos:column="13">else
                <block type="pseudo"><return pos:line="79" pos:column="17">return <expr><name pos:line="79" pos:column="24">UNKNOWN_METHOD<pos:position pos:line="79" pos:column="38"/></name></expr>;<pos:position pos:line="79" pos:column="39"/></return></block></else></if>
        <break pos:line="80" pos:column="9">break;<pos:position pos:line="80" pos:column="15"/></break>
        <default pos:line="81" pos:column="9">default:<pos:position pos:line="81" pos:column="17"/></default>
            <return pos:line="82" pos:column="13">return <expr><name pos:line="82" pos:column="20">UNKNOWN_METHOD<pos:position pos:line="82" pos:column="34"/></name></expr>;<pos:position pos:line="82" pos:column="35"/></return>
    }<pos:position pos:line="83" pos:column="6"/></block></switch>

    <comment type="block" pos:line="85" pos:column="5">/* NOTREACHED */</comment>
}<pos:position pos:line="86" pos:column="2"/></block></function></unit>

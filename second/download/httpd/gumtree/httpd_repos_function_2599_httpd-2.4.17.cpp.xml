<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/httpd/gumtree/httpd_repos_function_2599_httpd-2.4.17.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">apr_status_t<pos:position pos:line="1" pos:column="13"/></name></type> <name pos:line="1" pos:column="14">sed_init_eval<pos:position pos:line="1" pos:column="27"/></name><parameter_list pos:line="1" pos:column="27">(<parameter><decl><type><name pos:line="1" pos:column="28">sed_eval_t<pos:position pos:line="1" pos:column="38"/></name> <modifier pos:line="1" pos:column="39">*<pos:position pos:line="1" pos:column="40"/></modifier></type><name pos:line="1" pos:column="40">eval<pos:position pos:line="1" pos:column="44"/></name></decl></parameter>, <parameter><decl><type><name pos:line="1" pos:column="46">sed_commands_t<pos:position pos:line="1" pos:column="60"/></name> <modifier pos:line="1" pos:column="61">*<pos:position pos:line="1" pos:column="62"/></modifier></type><name pos:line="1" pos:column="62">commands<pos:position pos:line="1" pos:column="70"/></name></decl></parameter>, <parameter><decl><type><name pos:line="1" pos:column="72">sed_err_fn_t<pos:position pos:line="1" pos:column="84"/></name> <modifier pos:line="1" pos:column="85">*<pos:position pos:line="1" pos:column="86"/></modifier></type><name pos:line="1" pos:column="86">errfn<pos:position pos:line="1" pos:column="91"/></name></decl></parameter>, <parameter><decl><type><name pos:line="1" pos:column="93">void<pos:position pos:line="1" pos:column="97"/></name> <modifier pos:line="1" pos:column="98">*<pos:position pos:line="1" pos:column="99"/></modifier></type><name pos:line="1" pos:column="99">data<pos:position pos:line="1" pos:column="103"/></name></decl></parameter>, <parameter><decl><type><name pos:line="1" pos:column="105">sed_write_fn_t<pos:position pos:line="1" pos:column="119"/></name> <modifier pos:line="1" pos:column="120">*<pos:position pos:line="1" pos:column="121"/></modifier></type><name pos:line="1" pos:column="121">writefn<pos:position pos:line="1" pos:column="128"/></name></decl></parameter>, <parameter><decl><type><name pos:line="1" pos:column="130">apr_pool_t<pos:position pos:line="1" pos:column="140"/></name><modifier pos:line="1" pos:column="140">*<pos:position pos:line="1" pos:column="141"/></modifier></type> <name pos:line="1" pos:column="142">p<pos:position pos:line="1" pos:column="143"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="144"/></parameter_list>
<block pos:line="2" pos:column="1">{
    <expr_stmt><expr><call><name pos:line="3" pos:column="5">memset<pos:position pos:line="3" pos:column="11"/></name><argument_list pos:line="3" pos:column="11">(<argument><expr><name pos:line="3" pos:column="12">eval<pos:position pos:line="3" pos:column="16"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="3" pos:column="18">0<pos:position pos:line="3" pos:column="19"/></literal></expr></argument>, <argument><expr><sizeof pos:line="3" pos:column="21">sizeof<argument_list pos:line="3" pos:column="27">(<argument><expr><operator pos:line="3" pos:column="28">*<pos:position pos:line="3" pos:column="29"/></operator><name pos:line="3" pos:column="29">eval<pos:position pos:line="3" pos:column="33"/></name></expr></argument>)<pos:position pos:line="3" pos:column="34"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="3" pos:column="35"/></argument_list></call></expr>;<pos:position pos:line="3" pos:column="36"/></expr_stmt>
    <expr_stmt><expr><name><name pos:line="4" pos:column="5">eval<pos:position pos:line="4" pos:column="9"/></name><operator pos:line="4" pos:column="9">-&gt;<pos:position pos:line="4" pos:column="14"/></operator><name pos:line="4" pos:column="11">pool<pos:position pos:line="4" pos:column="15"/></name></name> <operator pos:line="4" pos:column="16">=<pos:position pos:line="4" pos:column="17"/></operator> <name pos:line="4" pos:column="18">p<pos:position pos:line="4" pos:column="19"/></name></expr>;<pos:position pos:line="4" pos:column="20"/></expr_stmt>
    <expr_stmt><expr><name><name pos:line="5" pos:column="5">eval<pos:position pos:line="5" pos:column="9"/></name><operator pos:line="5" pos:column="9">-&gt;<pos:position pos:line="5" pos:column="14"/></operator><name pos:line="5" pos:column="11">writefn<pos:position pos:line="5" pos:column="18"/></name></name> <operator pos:line="5" pos:column="19">=<pos:position pos:line="5" pos:column="20"/></operator> <name pos:line="5" pos:column="21">writefn<pos:position pos:line="5" pos:column="28"/></name></expr>;<pos:position pos:line="5" pos:column="29"/></expr_stmt>
    <return pos:line="6" pos:column="5">return <expr><call><name pos:line="6" pos:column="12">sed_reset_eval<pos:position pos:line="6" pos:column="26"/></name><argument_list pos:line="6" pos:column="26">(<argument><expr><name pos:line="6" pos:column="27">eval<pos:position pos:line="6" pos:column="31"/></name></expr></argument>, <argument><expr><name pos:line="6" pos:column="33">commands<pos:position pos:line="6" pos:column="41"/></name></expr></argument>, <argument><expr><name pos:line="6" pos:column="43">errfn<pos:position pos:line="6" pos:column="48"/></name></expr></argument>, <argument><expr><name pos:line="6" pos:column="50">data<pos:position pos:line="6" pos:column="54"/></name></expr></argument>)<pos:position pos:line="6" pos:column="55"/></argument_list></call></expr>;<pos:position pos:line="6" pos:column="56"/></return>
}<pos:position pos:line="7" pos:column="2"/></block></function></unit>

<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/httpd/gumtree/httpd_repos_function_3294_httpd-2.4.6.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><specifier pos:line="1" pos:column="8">const<pos:position pos:line="1" pos:column="13"/></specifier> <name pos:line="1" pos:column="14">char<pos:position pos:line="1" pos:column="18"/></name> <modifier pos:line="1" pos:column="19">*<pos:position pos:line="1" pos:column="20"/></modifier></type><name pos:line="1" pos:column="20">start_ifdefine<pos:position pos:line="1" pos:column="34"/></name><parameter_list pos:line="1" pos:column="34">(<parameter><decl><type><name pos:line="1" pos:column="35">cmd_parms<pos:position pos:line="1" pos:column="44"/></name> <modifier pos:line="1" pos:column="45">*<pos:position pos:line="1" pos:column="46"/></modifier></type><name pos:line="1" pos:column="46">cmd<pos:position pos:line="1" pos:column="49"/></name></decl></parameter>, <parameter><decl><type><name pos:line="1" pos:column="51">void<pos:position pos:line="1" pos:column="55"/></name> <modifier pos:line="1" pos:column="56">*<pos:position pos:line="1" pos:column="57"/></modifier></type><name pos:line="1" pos:column="57">dummy<pos:position pos:line="1" pos:column="62"/></name></decl></parameter>, <parameter><decl><type><specifier pos:line="1" pos:column="64">const<pos:position pos:line="1" pos:column="69"/></specifier> <name pos:line="1" pos:column="70">char<pos:position pos:line="1" pos:column="74"/></name> <modifier pos:line="1" pos:column="75">*<pos:position pos:line="1" pos:column="76"/></modifier></type><name pos:line="1" pos:column="76">arg<pos:position pos:line="1" pos:column="79"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="80"/></parameter_list>
<block pos:line="2" pos:column="1">{
    <decl_stmt><decl><type><specifier pos:line="3" pos:column="5">const<pos:position pos:line="3" pos:column="10"/></specifier> <name pos:line="3" pos:column="11">char<pos:position pos:line="3" pos:column="15"/></name> <modifier pos:line="3" pos:column="16">*<pos:position pos:line="3" pos:column="17"/></modifier></type><name pos:line="3" pos:column="17">endp<pos:position pos:line="3" pos:column="21"/></name></decl>;<pos:position pos:line="3" pos:column="22"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="4" pos:column="5">int<pos:position pos:line="4" pos:column="8"/></name></type> <name pos:line="4" pos:column="9">defined<pos:position pos:line="4" pos:column="16"/></name></decl>;<pos:position pos:line="4" pos:column="17"/></decl_stmt>
    <expr_stmt><expr><name pos:line="5" pos:column="5">int<pos:position pos:line="5" pos:column="8"/></name> <operator pos:line="5" pos:column="9">not<pos:position pos:line="5" pos:column="12"/></operator> <operator pos:line="5" pos:column="13">=<pos:position pos:line="5" pos:column="14"/></operator> <literal type="number" pos:line="5" pos:column="15">0<pos:position pos:line="5" pos:column="16"/></literal></expr>;<pos:position pos:line="5" pos:column="17"/></expr_stmt>

    <expr_stmt><expr><name pos:line="7" pos:column="5">endp<pos:position pos:line="7" pos:column="9"/></name> <operator pos:line="7" pos:column="10">=<pos:position pos:line="7" pos:column="11"/></operator> <call><name pos:line="7" pos:column="12">ap_strrchr_c<pos:position pos:line="7" pos:column="24"/></name><argument_list pos:line="7" pos:column="24">(<argument><expr><name pos:line="7" pos:column="25">arg<pos:position pos:line="7" pos:column="28"/></name></expr></argument>, <argument><expr><literal type="char" pos:line="7" pos:column="30">'&gt;'<pos:position pos:line="7" pos:column="36"/></literal></expr></argument>)<pos:position pos:line="7" pos:column="34"/></argument_list></call></expr>;<pos:position pos:line="7" pos:column="35"/></expr_stmt>
    <if pos:line="8" pos:column="5">if <condition pos:line="8" pos:column="8">(<expr><name pos:line="8" pos:column="9">endp<pos:position pos:line="8" pos:column="13"/></name> <operator pos:line="8" pos:column="14">==<pos:position pos:line="8" pos:column="16"/></operator> <name pos:line="8" pos:column="17">NULL<pos:position pos:line="8" pos:column="21"/></name></expr>)<pos:position pos:line="8" pos:column="22"/></condition><then pos:line="8" pos:column="22"> <block pos:line="8" pos:column="23">{
        <return pos:line="9" pos:column="9">return <expr><call><name pos:line="9" pos:column="16">unclosed_directive<pos:position pos:line="9" pos:column="34"/></name><argument_list pos:line="9" pos:column="34">(<argument><expr><name pos:line="9" pos:column="35">cmd<pos:position pos:line="9" pos:column="38"/></name></expr></argument>)<pos:position pos:line="9" pos:column="39"/></argument_list></call></expr>;<pos:position pos:line="9" pos:column="40"/></return>
    }<pos:position pos:line="10" pos:column="6"/></block></then></if>

    <expr_stmt><expr><name pos:line="12" pos:column="5">arg<pos:position pos:line="12" pos:column="8"/></name> <operator pos:line="12" pos:column="9">=<pos:position pos:line="12" pos:column="10"/></operator> <call><name pos:line="12" pos:column="11">apr_pstrndup<pos:position pos:line="12" pos:column="23"/></name><argument_list pos:line="12" pos:column="23">(<argument><expr><name><name pos:line="12" pos:column="24">cmd<pos:position pos:line="12" pos:column="27"/></name><operator pos:line="12" pos:column="27">-&gt;<pos:position pos:line="12" pos:column="32"/></operator><name pos:line="12" pos:column="29">temp_pool<pos:position pos:line="12" pos:column="38"/></name></name></expr></argument>, <argument><expr><name pos:line="12" pos:column="40">arg<pos:position pos:line="12" pos:column="43"/></name></expr></argument>, <argument><expr><name pos:line="12" pos:column="45">endp<pos:position pos:line="12" pos:column="49"/></name> <operator pos:line="12" pos:column="50">-<pos:position pos:line="12" pos:column="51"/></operator> <name pos:line="12" pos:column="52">arg<pos:position pos:line="12" pos:column="55"/></name></expr></argument>)<pos:position pos:line="12" pos:column="56"/></argument_list></call></expr>;<pos:position pos:line="12" pos:column="57"/></expr_stmt>

    <if pos:line="14" pos:column="5">if <condition pos:line="14" pos:column="8">(<expr><name><name pos:line="14" pos:column="9">arg<pos:position pos:line="14" pos:column="12"/></name><index pos:line="14" pos:column="12">[<expr><literal type="number" pos:line="14" pos:column="13">0<pos:position pos:line="14" pos:column="14"/></literal></expr>]<pos:position pos:line="14" pos:column="15"/></index></name> <operator pos:line="14" pos:column="16">==<pos:position pos:line="14" pos:column="18"/></operator> <literal type="char" pos:line="14" pos:column="19">'!'<pos:position pos:line="14" pos:column="22"/></literal></expr>)<pos:position pos:line="14" pos:column="23"/></condition><then pos:line="14" pos:column="23"> <block pos:line="14" pos:column="24">{
        <expr_stmt><expr><operator pos:line="15" pos:column="9">not<pos:position pos:line="15" pos:column="12"/></operator> <operator pos:line="15" pos:column="13">=<pos:position pos:line="15" pos:column="14"/></operator> <literal type="number" pos:line="15" pos:column="15">1<pos:position pos:line="15" pos:column="16"/></literal></expr>;<pos:position pos:line="15" pos:column="17"/></expr_stmt>
        <expr_stmt><expr><name pos:line="16" pos:column="9">arg<pos:position pos:line="16" pos:column="12"/></name><operator pos:line="16" pos:column="12">++<pos:position pos:line="16" pos:column="14"/></operator></expr>;<pos:position pos:line="16" pos:column="15"/></expr_stmt>
    }<pos:position pos:line="17" pos:column="6"/></block></then></if>

    <if pos:line="19" pos:column="5">if <condition pos:line="19" pos:column="8">(<expr><operator pos:line="19" pos:column="9">!<pos:position pos:line="19" pos:column="10"/></operator><name><name pos:line="19" pos:column="10">arg<pos:position pos:line="19" pos:column="13"/></name><index pos:line="19" pos:column="13">[<expr><literal type="number" pos:line="19" pos:column="14">0<pos:position pos:line="19" pos:column="15"/></literal></expr>]<pos:position pos:line="19" pos:column="16"/></index></name></expr>)<pos:position pos:line="19" pos:column="17"/></condition><then pos:line="19" pos:column="17"> <block pos:line="19" pos:column="18">{
        <return pos:line="20" pos:column="9">return <expr><call><name pos:line="20" pos:column="16">missing_container_arg<pos:position pos:line="20" pos:column="37"/></name><argument_list pos:line="20" pos:column="37">(<argument><expr><name pos:line="20" pos:column="38">cmd<pos:position pos:line="20" pos:column="41"/></name></expr></argument>)<pos:position pos:line="20" pos:column="42"/></argument_list></call></expr>;<pos:position pos:line="20" pos:column="43"/></return>
    }<pos:position pos:line="21" pos:column="6"/></block></then></if>

    <expr_stmt><expr><name pos:line="23" pos:column="5">defined<pos:position pos:line="23" pos:column="12"/></name> <operator pos:line="23" pos:column="13">=<pos:position pos:line="23" pos:column="14"/></operator> <call><name pos:line="23" pos:column="15">ap_exists_config_define<pos:position pos:line="23" pos:column="38"/></name><argument_list pos:line="23" pos:column="38">(<argument><expr><name pos:line="23" pos:column="39">arg<pos:position pos:line="23" pos:column="42"/></name></expr></argument>)<pos:position pos:line="23" pos:column="43"/></argument_list></call></expr>;<pos:position pos:line="23" pos:column="44"/></expr_stmt>
    <if pos:line="24" pos:column="5">if <condition pos:line="24" pos:column="8">(<expr><operator pos:line="24" pos:column="9">(<pos:position pos:line="24" pos:column="10"/></operator><operator pos:line="24" pos:column="10">!<pos:position pos:line="24" pos:column="11"/></operator><operator pos:line="24" pos:column="11">not<pos:position pos:line="24" pos:column="14"/></operator> <operator pos:line="24" pos:column="15">&amp;&amp;<pos:position pos:line="24" pos:column="25"/></operator> <name pos:line="24" pos:column="18">defined<pos:position pos:line="24" pos:column="25"/></name><operator pos:line="24" pos:column="25">)<pos:position pos:line="24" pos:column="26"/></operator> <operator pos:line="24" pos:column="27">||<pos:position pos:line="24" pos:column="29"/></operator> <operator pos:line="24" pos:column="30">(<pos:position pos:line="24" pos:column="31"/></operator><operator pos:line="24" pos:column="31">not<pos:position pos:line="24" pos:column="34"/></operator> <operator pos:line="24" pos:column="35">&amp;&amp;<pos:position pos:line="24" pos:column="45"/></operator> <operator pos:line="24" pos:column="38">!<pos:position pos:line="24" pos:column="39"/></operator><name pos:line="24" pos:column="39">defined<pos:position pos:line="24" pos:column="46"/></name><operator pos:line="24" pos:column="46">)<pos:position pos:line="24" pos:column="47"/></operator></expr>)<pos:position pos:line="24" pos:column="48"/></condition><then pos:line="24" pos:column="48"> <block pos:line="24" pos:column="49">{
        <decl_stmt><decl><type><name pos:line="25" pos:column="9">ap_directive_t<pos:position pos:line="25" pos:column="23"/></name> <modifier pos:line="25" pos:column="24">*<pos:position pos:line="25" pos:column="25"/></modifier></type><name pos:line="25" pos:column="25">parent<pos:position pos:line="25" pos:column="31"/></name> <init pos:line="25" pos:column="32">= <expr><name pos:line="25" pos:column="34">NULL<pos:position pos:line="25" pos:column="38"/></name></expr></init></decl>;<pos:position pos:line="25" pos:column="39"/></decl_stmt>
        <decl_stmt><decl><type><name pos:line="26" pos:column="9">ap_directive_t<pos:position pos:line="26" pos:column="23"/></name> <modifier pos:line="26" pos:column="24">*<pos:position pos:line="26" pos:column="25"/></modifier></type><name pos:line="26" pos:column="25">current<pos:position pos:line="26" pos:column="32"/></name> <init pos:line="26" pos:column="33">= <expr><name pos:line="26" pos:column="35">NULL<pos:position pos:line="26" pos:column="39"/></name></expr></init></decl>;<pos:position pos:line="26" pos:column="40"/></decl_stmt>
        <decl_stmt><decl><type><specifier pos:line="27" pos:column="9">const<pos:position pos:line="27" pos:column="14"/></specifier> <name pos:line="27" pos:column="15">char<pos:position pos:line="27" pos:column="19"/></name> <modifier pos:line="27" pos:column="20">*<pos:position pos:line="27" pos:column="21"/></modifier></type><name pos:line="27" pos:column="21">retval<pos:position pos:line="27" pos:column="27"/></name></decl>;<pos:position pos:line="27" pos:column="28"/></decl_stmt>

        <expr_stmt><expr><name pos:line="29" pos:column="9">retval<pos:position pos:line="29" pos:column="15"/></name> <operator pos:line="29" pos:column="16">=<pos:position pos:line="29" pos:column="17"/></operator> <call><name pos:line="29" pos:column="18">ap_build_cont_config<pos:position pos:line="29" pos:column="38"/></name><argument_list pos:line="29" pos:column="38">(<argument><expr><name><name pos:line="29" pos:column="39">cmd<pos:position pos:line="29" pos:column="42"/></name><operator pos:line="29" pos:column="42">-&gt;<pos:position pos:line="29" pos:column="47"/></operator><name pos:line="29" pos:column="44">pool<pos:position pos:line="29" pos:column="48"/></name></name></expr></argument>, <argument><expr><name><name pos:line="29" pos:column="50">cmd<pos:position pos:line="29" pos:column="53"/></name><operator pos:line="29" pos:column="53">-&gt;<pos:position pos:line="29" pos:column="58"/></operator><name pos:line="29" pos:column="55">temp_pool<pos:position pos:line="29" pos:column="64"/></name></name></expr></argument>, <argument><expr><name pos:line="29" pos:column="66">cmd<pos:position pos:line="29" pos:column="69"/></name></expr></argument>,
                                      <argument><expr><operator pos:line="30" pos:column="39">&amp;<pos:position pos:line="30" pos:column="44"/></operator><name pos:line="30" pos:column="40">current<pos:position pos:line="30" pos:column="47"/></name></expr></argument>, <argument><expr><operator pos:line="30" pos:column="49">&amp;<pos:position pos:line="30" pos:column="54"/></operator><name pos:line="30" pos:column="50">parent<pos:position pos:line="30" pos:column="56"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="30" pos:column="58">"&lt;IfDefine"<pos:position pos:line="30" pos:column="72"/></literal></expr></argument>)<pos:position pos:line="30" pos:column="70"/></argument_list></call></expr>;<pos:position pos:line="30" pos:column="71"/></expr_stmt>
        <expr_stmt><expr><operator pos:line="31" pos:column="9">*<pos:position pos:line="31" pos:column="10"/></operator><operator pos:line="31" pos:column="10">(<pos:position pos:line="31" pos:column="11"/></operator><name pos:line="31" pos:column="11">ap_directive_t<pos:position pos:line="31" pos:column="25"/></name> <operator pos:line="31" pos:column="26">*<pos:position pos:line="31" pos:column="27"/></operator><operator pos:line="31" pos:column="27">*<pos:position pos:line="31" pos:column="28"/></operator><operator pos:line="31" pos:column="28">)<pos:position pos:line="31" pos:column="29"/></operator><name pos:line="31" pos:column="29">dummy<pos:position pos:line="31" pos:column="34"/></name> <operator pos:line="31" pos:column="35">=<pos:position pos:line="31" pos:column="36"/></operator> <name pos:line="31" pos:column="37">current<pos:position pos:line="31" pos:column="44"/></name></expr>;<pos:position pos:line="31" pos:column="45"/></expr_stmt>
        <return pos:line="32" pos:column="9">return <expr><name pos:line="32" pos:column="16">retval<pos:position pos:line="32" pos:column="22"/></name></expr>;<pos:position pos:line="32" pos:column="23"/></return>
    }<pos:position pos:line="33" pos:column="6"/></block></then>
    <else pos:line="34" pos:column="5">else <block pos:line="34" pos:column="10">{
        <expr_stmt><expr><operator pos:line="35" pos:column="9">*<pos:position pos:line="35" pos:column="10"/></operator><operator pos:line="35" pos:column="10">(<pos:position pos:line="35" pos:column="11"/></operator><name pos:line="35" pos:column="11">ap_directive_t<pos:position pos:line="35" pos:column="25"/></name> <operator pos:line="35" pos:column="26">*<pos:position pos:line="35" pos:column="27"/></operator><operator pos:line="35" pos:column="27">*<pos:position pos:line="35" pos:column="28"/></operator><operator pos:line="35" pos:column="28">)<pos:position pos:line="35" pos:column="29"/></operator><name pos:line="35" pos:column="29">dummy<pos:position pos:line="35" pos:column="34"/></name> <operator pos:line="35" pos:column="35">=<pos:position pos:line="35" pos:column="36"/></operator> <name pos:line="35" pos:column="37">NULL<pos:position pos:line="35" pos:column="41"/></name></expr>;<pos:position pos:line="35" pos:column="42"/></expr_stmt>
        <return pos:line="36" pos:column="9">return <expr><call><name pos:line="36" pos:column="16">ap_soak_end_container<pos:position pos:line="36" pos:column="37"/></name><argument_list pos:line="36" pos:column="37">(<argument><expr><name pos:line="36" pos:column="38">cmd<pos:position pos:line="36" pos:column="41"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="36" pos:column="43">"&lt;IfDefine"<pos:position pos:line="36" pos:column="57"/></literal></expr></argument>)<pos:position pos:line="36" pos:column="55"/></argument_list></call></expr>;<pos:position pos:line="36" pos:column="56"/></return>
    }<pos:position pos:line="37" pos:column="6"/></block></else></if>
}<pos:position pos:line="38" pos:column="2"/></block></function></unit>

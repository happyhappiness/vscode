<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/httpd/gumtree/httpd_function_4043.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">char<pos:position pos:line="1" pos:column="12"/></name> <modifier pos:line="1" pos:column="13">*<pos:position pos:line="1" pos:column="14"/></modifier></type><name pos:line="1" pos:column="14">rsl_strdup<pos:position pos:line="1" pos:column="24"/></name><parameter_list pos:line="1" pos:column="24">(<parameter><decl><type><name pos:line="1" pos:column="25">request_rec<pos:position pos:line="1" pos:column="36"/></name> <modifier pos:line="1" pos:column="37">*<pos:position pos:line="1" pos:column="38"/></modifier></type><name pos:line="1" pos:column="38">r<pos:position pos:line="1" pos:column="39"/></name></decl></parameter>, <parameter><decl><type><name pos:line="1" pos:column="41">int<pos:position pos:line="1" pos:column="44"/></name></type> <name pos:line="1" pos:column="45">start_frag<pos:position pos:line="1" pos:column="55"/></name></decl></parameter>, <parameter><decl><type><name pos:line="1" pos:column="57">int<pos:position pos:line="1" pos:column="60"/></name></type> <name pos:line="1" pos:column="61">start_pos<pos:position pos:line="1" pos:column="70"/></name></decl></parameter>, <parameter><decl><type><name pos:line="1" pos:column="72">int<pos:position pos:line="1" pos:column="75"/></name></type> <name pos:line="1" pos:column="76">len<pos:position pos:line="1" pos:column="79"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="80"/></parameter_list>
<block pos:line="2" pos:column="1">{
    <decl_stmt><decl><type><name pos:line="3" pos:column="5">char<pos:position pos:line="3" pos:column="9"/></name> <modifier pos:line="3" pos:column="10">*<pos:position pos:line="3" pos:column="11"/></modifier></type><name pos:line="3" pos:column="11">result<pos:position pos:line="3" pos:column="17"/></name></decl>;<pos:position pos:line="3" pos:column="18"/></decl_stmt>       <comment type="block" pos:line="3" pos:column="25">/* return value */</comment>
    <decl_stmt><decl><type><name pos:line="4" pos:column="5">int<pos:position pos:line="4" pos:column="8"/></name></type> <name pos:line="4" pos:column="9">cur_frag<pos:position pos:line="4" pos:column="17"/></name></decl>,       <comment type="block" pos:line="4" pos:column="25">/* current fragment number/counter */</comment>
        <decl><type ref="prev"/><name pos:line="5" pos:column="9">cur_pos<pos:position pos:line="5" pos:column="16"/></name></decl>,        <comment type="block" pos:line="5" pos:column="25">/* current position within fragment */</comment>
        <decl><type ref="prev"/><name pos:line="6" pos:column="9">res_pos<pos:position pos:line="6" pos:column="16"/></name></decl>;<pos:position pos:line="6" pos:column="17"/></decl_stmt>        <comment type="block" pos:line="6" pos:column="25">/* position in result string */</comment>
    <decl_stmt><decl><type><name pos:line="7" pos:column="5">magic_rsl<pos:position pos:line="7" pos:column="14"/></name> <modifier pos:line="7" pos:column="15">*<pos:position pos:line="7" pos:column="16"/></modifier></type><name pos:line="7" pos:column="16">frag<pos:position pos:line="7" pos:column="20"/></name></decl>;<pos:position pos:line="7" pos:column="21"/></decl_stmt>    <comment type="block" pos:line="7" pos:column="25">/* list-traversal pointer */</comment>
    <decl_stmt><decl><type><name pos:line="8" pos:column="5">magic_req_rec<pos:position pos:line="8" pos:column="18"/></name> <modifier pos:line="8" pos:column="19">*<pos:position pos:line="8" pos:column="20"/></modifier></type><name pos:line="8" pos:column="20">req_dat<pos:position pos:line="8" pos:column="27"/></name> <init pos:line="8" pos:column="28">= <expr><operator pos:line="8" pos:column="30">(<pos:position pos:line="8" pos:column="31"/></operator><name pos:line="8" pos:column="31">magic_req_rec<pos:position pos:line="8" pos:column="44"/></name> <operator pos:line="8" pos:column="45">*<pos:position pos:line="8" pos:column="46"/></operator><operator pos:line="8" pos:column="46">)<pos:position pos:line="8" pos:column="47"/></operator>
                    <call><name pos:line="9" pos:column="21">ap_get_module_config<pos:position pos:line="9" pos:column="41"/></name><argument_list pos:line="9" pos:column="41">(<argument><expr><name><name pos:line="9" pos:column="42">r<pos:position pos:line="9" pos:column="43"/></name><operator pos:line="9" pos:column="43">-&gt;<pos:position pos:line="9" pos:column="48"/></operator><name pos:line="9" pos:column="45">request_config<pos:position pos:line="9" pos:column="59"/></name></name></expr></argument>, <argument><expr><operator pos:line="9" pos:column="61">&amp;<pos:position pos:line="9" pos:column="66"/></operator><name pos:line="9" pos:column="62">mime_magic_module<pos:position pos:line="9" pos:column="79"/></name></expr></argument>)<pos:position pos:line="9" pos:column="80"/></argument_list></call></expr></init></decl>;<pos:position pos:line="9" pos:column="81"/></decl_stmt>

    <comment type="block" pos:line="11" pos:column="5">/* allocate the result string */</comment>
    <expr_stmt><expr><name pos:line="12" pos:column="5">result<pos:position pos:line="12" pos:column="11"/></name> <operator pos:line="12" pos:column="12">=<pos:position pos:line="12" pos:column="13"/></operator> <operator pos:line="12" pos:column="14">(<pos:position pos:line="12" pos:column="15"/></operator><name pos:line="12" pos:column="15">char<pos:position pos:line="12" pos:column="19"/></name> <operator pos:line="12" pos:column="20">*<pos:position pos:line="12" pos:column="21"/></operator><operator pos:line="12" pos:column="21">)<pos:position pos:line="12" pos:column="22"/></operator> <call><name pos:line="12" pos:column="23">apr_palloc<pos:position pos:line="12" pos:column="33"/></name><argument_list pos:line="12" pos:column="33">(<argument><expr><name><name pos:line="12" pos:column="34">r<pos:position pos:line="12" pos:column="35"/></name><operator pos:line="12" pos:column="35">-&gt;<pos:position pos:line="12" pos:column="40"/></operator><name pos:line="12" pos:column="37">pool<pos:position pos:line="12" pos:column="41"/></name></name></expr></argument>, <argument><expr><name pos:line="12" pos:column="43">len<pos:position pos:line="12" pos:column="46"/></name> <operator pos:line="12" pos:column="47">+<pos:position pos:line="12" pos:column="48"/></operator> <literal type="number" pos:line="12" pos:column="49">1<pos:position pos:line="12" pos:column="50"/></literal></expr></argument>)<pos:position pos:line="12" pos:column="51"/></argument_list></call></expr>;<pos:position pos:line="12" pos:column="52"/></expr_stmt>

    <comment type="block" pos:line="14" pos:column="5">/* loop through and collect the string */</comment>
    <expr_stmt><expr><name pos:line="15" pos:column="5">res_pos<pos:position pos:line="15" pos:column="12"/></name> <operator pos:line="15" pos:column="13">=<pos:position pos:line="15" pos:column="14"/></operator> <literal type="number" pos:line="15" pos:column="15">0<pos:position pos:line="15" pos:column="16"/></literal></expr>;<pos:position pos:line="15" pos:column="17"/></expr_stmt>
    <for pos:line="16" pos:column="5">for <control pos:line="16" pos:column="9">(<init><expr><name pos:line="16" pos:column="10">frag<pos:position pos:line="16" pos:column="14"/></name> <operator pos:line="16" pos:column="15">=<pos:position pos:line="16" pos:column="16"/></operator> <name><name pos:line="16" pos:column="17">req_dat<pos:position pos:line="16" pos:column="24"/></name><operator pos:line="16" pos:column="24">-&gt;<pos:position pos:line="16" pos:column="29"/></operator><name pos:line="16" pos:column="26">head<pos:position pos:line="16" pos:column="30"/></name></name></expr><operator pos:line="16" pos:column="30">,<pos:position pos:line="16" pos:column="31"/></operator> <expr><name pos:line="16" pos:column="32">cur_frag<pos:position pos:line="16" pos:column="40"/></name> <operator pos:line="16" pos:column="41">=<pos:position pos:line="16" pos:column="42"/></operator> <literal type="number" pos:line="16" pos:column="43">0<pos:position pos:line="16" pos:column="44"/></literal></expr>;<pos:position pos:line="16" pos:column="45"/></init>
         <condition><expr><name><name pos:line="17" pos:column="10">frag<pos:position pos:line="17" pos:column="14"/></name><operator pos:line="17" pos:column="14">-&gt;<pos:position pos:line="17" pos:column="19"/></operator><name pos:line="17" pos:column="16">next<pos:position pos:line="17" pos:column="20"/></name></name></expr>;<pos:position pos:line="17" pos:column="21"/></condition>
         <incr><expr><name pos:line="18" pos:column="10">frag<pos:position pos:line="18" pos:column="14"/></name> <operator pos:line="18" pos:column="15">=<pos:position pos:line="18" pos:column="16"/></operator> <name><name pos:line="18" pos:column="17">frag<pos:position pos:line="18" pos:column="21"/></name><operator pos:line="18" pos:column="21">-&gt;<pos:position pos:line="18" pos:column="26"/></operator><name pos:line="18" pos:column="23">next<pos:position pos:line="18" pos:column="27"/></name></name></expr><operator pos:line="18" pos:column="27">,<pos:position pos:line="18" pos:column="28"/></operator> <expr><name pos:line="18" pos:column="29">cur_frag<pos:position pos:line="18" pos:column="37"/></name><operator pos:line="18" pos:column="37">++<pos:position pos:line="18" pos:column="39"/></operator></expr></incr>)<pos:position pos:line="18" pos:column="40"/></control> <block pos:line="18" pos:column="41">{
        <comment type="block" pos:line="19" pos:column="9">/* loop to the first fragment */</comment>
        <if pos:line="20" pos:column="9">if <condition pos:line="20" pos:column="12">(<expr><name pos:line="20" pos:column="13">cur_frag<pos:position pos:line="20" pos:column="21"/></name> <operator pos:line="20" pos:column="22">&lt;<pos:position pos:line="20" pos:column="26"/></operator> <name pos:line="20" pos:column="24">start_frag<pos:position pos:line="20" pos:column="34"/></name></expr>)<pos:position pos:line="20" pos:column="35"/></condition><then pos:line="20" pos:column="35">
            <block type="pseudo"><continue pos:line="21" pos:column="13">continue;<pos:position pos:line="21" pos:column="22"/></continue></block></then></if>

        <comment type="block" pos:line="23" pos:column="9">/* loop through and collect chars */</comment>
        <for pos:line="24" pos:column="9">for <control pos:line="24" pos:column="13">(<init><expr><name pos:line="24" pos:column="14">cur_pos<pos:position pos:line="24" pos:column="21"/></name> <operator pos:line="24" pos:column="22">=<pos:position pos:line="24" pos:column="23"/></operator> <ternary><condition><expr><operator pos:line="24" pos:column="24">(<pos:position pos:line="24" pos:column="25"/></operator><name pos:line="24" pos:column="25">cur_frag<pos:position pos:line="24" pos:column="33"/></name> <operator pos:line="24" pos:column="34">==<pos:position pos:line="24" pos:column="36"/></operator> <name pos:line="24" pos:column="37">start_frag<pos:position pos:line="24" pos:column="47"/></name><operator pos:line="24" pos:column="47">)<pos:position pos:line="24" pos:column="48"/></operator></expr> ?<pos:position pos:line="24" pos:column="50"/></condition><then pos:line="24" pos:column="50"> <expr><name pos:line="24" pos:column="51">start_pos<pos:position pos:line="24" pos:column="60"/></name></expr> <pos:position pos:line="24" pos:column="61"/></then><else pos:line="24" pos:column="61">: <expr><literal type="number" pos:line="24" pos:column="63">0<pos:position pos:line="24" pos:column="64"/></literal></expr></else></ternary></expr>;<pos:position pos:line="24" pos:column="65"/></init>
             <condition><expr><name><name pos:line="25" pos:column="14">frag<pos:position pos:line="25" pos:column="18"/></name><operator pos:line="25" pos:column="18">-&gt;<pos:position pos:line="25" pos:column="23"/></operator><name pos:line="25" pos:column="20">str<pos:position pos:line="25" pos:column="23"/></name><index pos:line="25" pos:column="23">[<expr><name pos:line="25" pos:column="24">cur_pos<pos:position pos:line="25" pos:column="31"/></name></expr>]<pos:position pos:line="25" pos:column="32"/></index></name></expr>;<pos:position pos:line="25" pos:column="33"/></condition>
             <incr><expr><name pos:line="26" pos:column="14">cur_pos<pos:position pos:line="26" pos:column="21"/></name><operator pos:line="26" pos:column="21">++<pos:position pos:line="26" pos:column="23"/></operator></expr></incr>)<pos:position pos:line="26" pos:column="24"/></control> <block pos:line="26" pos:column="25">{
            <if pos:line="27" pos:column="13">if <condition pos:line="27" pos:column="16">(<expr><name pos:line="27" pos:column="17">cur_frag<pos:position pos:line="27" pos:column="25"/></name> <operator pos:line="27" pos:column="26">&gt;=<pos:position pos:line="27" pos:column="31"/></operator> <name pos:line="27" pos:column="29">start_frag<pos:position pos:line="27" pos:column="39"/></name>
                <operator pos:line="28" pos:column="17">&amp;&amp;<pos:position pos:line="28" pos:column="27"/></operator> <name pos:line="28" pos:column="20">cur_pos<pos:position pos:line="28" pos:column="27"/></name> <operator pos:line="28" pos:column="28">&gt;=<pos:position pos:line="28" pos:column="33"/></operator> <name pos:line="28" pos:column="31">start_pos<pos:position pos:line="28" pos:column="40"/></name>
                <operator pos:line="29" pos:column="17">&amp;&amp;<pos:position pos:line="29" pos:column="27"/></operator> <name pos:line="29" pos:column="20">res_pos<pos:position pos:line="29" pos:column="27"/></name> <operator pos:line="29" pos:column="28">&lt;=<pos:position pos:line="29" pos:column="33"/></operator> <name pos:line="29" pos:column="31">len<pos:position pos:line="29" pos:column="34"/></name></expr>)<pos:position pos:line="29" pos:column="35"/></condition><then pos:line="29" pos:column="35"> <block pos:line="29" pos:column="36">{
                <expr_stmt><expr><name><name pos:line="30" pos:column="17">result<pos:position pos:line="30" pos:column="23"/></name><index pos:line="30" pos:column="23">[<expr><name pos:line="30" pos:column="24">res_pos<pos:position pos:line="30" pos:column="31"/></name><operator pos:line="30" pos:column="31">++<pos:position pos:line="30" pos:column="33"/></operator></expr>]<pos:position pos:line="30" pos:column="34"/></index></name> <operator pos:line="30" pos:column="35">=<pos:position pos:line="30" pos:column="36"/></operator> <name><name pos:line="30" pos:column="37">frag<pos:position pos:line="30" pos:column="41"/></name><operator pos:line="30" pos:column="41">-&gt;<pos:position pos:line="30" pos:column="46"/></operator><name pos:line="30" pos:column="43">str<pos:position pos:line="30" pos:column="46"/></name><index pos:line="30" pos:column="46">[<expr><name pos:line="30" pos:column="47">cur_pos<pos:position pos:line="30" pos:column="54"/></name></expr>]<pos:position pos:line="30" pos:column="55"/></index></name></expr>;<pos:position pos:line="30" pos:column="56"/></expr_stmt>
                <if pos:line="31" pos:column="17">if <condition pos:line="31" pos:column="20">(<expr><name pos:line="31" pos:column="21">res_pos<pos:position pos:line="31" pos:column="28"/></name> <operator pos:line="31" pos:column="29">&gt;<pos:position pos:line="31" pos:column="33"/></operator> <name pos:line="31" pos:column="31">len<pos:position pos:line="31" pos:column="34"/></name></expr>)<pos:position pos:line="31" pos:column="35"/></condition><then pos:line="31" pos:column="35"> <block pos:line="31" pos:column="36">{
                    <break pos:line="32" pos:column="21">break;<pos:position pos:line="32" pos:column="27"/></break>
                }<pos:position pos:line="33" pos:column="18"/></block></then></if>
            }<pos:position pos:line="34" pos:column="14"/></block></then></if>
        }<pos:position pos:line="35" pos:column="10"/></block></for>
    }<pos:position pos:line="36" pos:column="6"/></block></for>

    <comment type="block" pos:line="38" pos:column="5">/* clean up and return */</comment>
    <expr_stmt><expr><name><name pos:line="39" pos:column="5">result<pos:position pos:line="39" pos:column="11"/></name><index pos:line="39" pos:column="11">[<expr><name pos:line="39" pos:column="12">res_pos<pos:position pos:line="39" pos:column="19"/></name></expr>]<pos:position pos:line="39" pos:column="20"/></index></name> <operator pos:line="39" pos:column="21">=<pos:position pos:line="39" pos:column="22"/></operator> <literal type="number" pos:line="39" pos:column="23">0<pos:position pos:line="39" pos:column="24"/></literal></expr>;<pos:position pos:line="39" pos:column="25"/></expr_stmt>
<cpp:if pos:line="40" pos:column="1">#<cpp:directive pos:line="40" pos:column="2">if<pos:position pos:line="40" pos:column="4"/></cpp:directive> <expr><name pos:line="40" pos:column="5">MIME_MAGIC_DEBUG<pos:position pos:line="40" pos:column="21"/></name></expr></cpp:if>
    <expr_stmt><expr><call><name pos:line="41" pos:column="5">ap_log_rerror<pos:position pos:line="41" pos:column="18"/></name><argument_list pos:line="41" pos:column="18">(<argument><expr><name pos:line="41" pos:column="19">APLOG_MARK<pos:position pos:line="41" pos:column="29"/></name></expr></argument>, <argument><expr><name pos:line="41" pos:column="31">APLOG_DEBUG<pos:position pos:line="41" pos:column="42"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="41" pos:column="44">0<pos:position pos:line="41" pos:column="45"/></literal></expr></argument>, <argument><expr><name pos:line="41" pos:column="47">r<pos:position pos:line="41" pos:column="48"/></name></expr></argument>,
             <argument><expr><name pos:line="42" pos:column="14">MODNAME<pos:position pos:line="42" pos:column="21"/></name> <literal type="string" pos:line="42" pos:column="22">": rsl_strdup() %d chars: %s"<pos:position pos:line="42" pos:column="51"/></literal></expr></argument>, <argument><expr><name pos:line="42" pos:column="53">res_pos<pos:position pos:line="42" pos:column="60"/></name> <operator pos:line="42" pos:column="61">-<pos:position pos:line="42" pos:column="62"/></operator> <literal type="number" pos:line="42" pos:column="63">1<pos:position pos:line="42" pos:column="64"/></literal></expr></argument>, <argument><expr><name pos:line="42" pos:column="66">result<pos:position pos:line="42" pos:column="72"/></name></expr></argument>)<pos:position pos:line="42" pos:column="73"/></argument_list></call></expr>;<pos:position pos:line="42" pos:column="74"/></expr_stmt>
<cpp:endif pos:line="43" pos:column="1">#<cpp:directive pos:line="43" pos:column="2">endif<pos:position pos:line="43" pos:column="7"/></cpp:directive></cpp:endif>
    <return pos:line="44" pos:column="5">return <expr><name pos:line="44" pos:column="12">result<pos:position pos:line="44" pos:column="18"/></name></expr>;<pos:position pos:line="44" pos:column="19"/></return>
}<pos:position pos:line="45" pos:column="2"/></block></function></unit>

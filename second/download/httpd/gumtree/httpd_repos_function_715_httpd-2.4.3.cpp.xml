<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/httpd/gumtree/httpd_repos_function_715_httpd-2.4.3.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">BOOL<pos:position pos:line="1" pos:column="5"/></name></type> <name pos:line="1" pos:column="6">SSL_X509_getIDs<pos:position pos:line="1" pos:column="21"/></name><parameter_list pos:line="1" pos:column="21">(<parameter><decl><type><name pos:line="1" pos:column="22">apr_pool_t<pos:position pos:line="1" pos:column="32"/></name> <modifier pos:line="1" pos:column="33">*<pos:position pos:line="1" pos:column="34"/></modifier></type><name pos:line="1" pos:column="34">p<pos:position pos:line="1" pos:column="35"/></name></decl></parameter>, <parameter><decl><type><name pos:line="1" pos:column="37">X509<pos:position pos:line="1" pos:column="41"/></name> <modifier pos:line="1" pos:column="42">*<pos:position pos:line="1" pos:column="43"/></modifier></type><name pos:line="1" pos:column="43">x509<pos:position pos:line="1" pos:column="47"/></name></decl></parameter>, <parameter><decl><type><name pos:line="1" pos:column="49">apr_array_header_t<pos:position pos:line="1" pos:column="67"/></name> <modifier pos:line="1" pos:column="68">*<pos:position pos:line="1" pos:column="69"/></modifier><modifier pos:line="1" pos:column="69">*<pos:position pos:line="1" pos:column="70"/></modifier></type><name pos:line="1" pos:column="70">ids<pos:position pos:line="1" pos:column="73"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="74"/></parameter_list>
<block pos:line="2" pos:column="1">{
    <expr_stmt><expr><call><name pos:line="3" pos:column="5">STACK_OF<pos:position pos:line="3" pos:column="13"/></name><argument_list pos:line="3" pos:column="13">(<argument><expr><name pos:line="3" pos:column="14">GENERAL_NAME<pos:position pos:line="3" pos:column="26"/></name></expr></argument>)<pos:position pos:line="3" pos:column="27"/></argument_list></call> <operator pos:line="3" pos:column="28">*<pos:position pos:line="3" pos:column="29"/></operator><name pos:line="3" pos:column="29">names<pos:position pos:line="3" pos:column="34"/></name></expr>;<pos:position pos:line="3" pos:column="35"/></expr_stmt>
    <decl_stmt><decl><type><name pos:line="4" pos:column="5">BIO<pos:position pos:line="4" pos:column="8"/></name> <modifier pos:line="4" pos:column="9">*<pos:position pos:line="4" pos:column="10"/></modifier></type><name pos:line="4" pos:column="10">bio<pos:position pos:line="4" pos:column="13"/></name></decl>;<pos:position pos:line="4" pos:column="14"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="5" pos:column="5">X509_NAME<pos:position pos:line="5" pos:column="14"/></name> <modifier pos:line="5" pos:column="15">*<pos:position pos:line="5" pos:column="16"/></modifier></type><name pos:line="5" pos:column="16">subj<pos:position pos:line="5" pos:column="20"/></name></decl>;<pos:position pos:line="5" pos:column="21"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="6" pos:column="5">char<pos:position pos:line="6" pos:column="9"/></name> <modifier pos:line="6" pos:column="10">*<pos:position pos:line="6" pos:column="11"/></modifier><modifier pos:line="6" pos:column="11">*<pos:position pos:line="6" pos:column="12"/></modifier></type><name pos:line="6" pos:column="12">cpp<pos:position pos:line="6" pos:column="15"/></name></decl>;<pos:position pos:line="6" pos:column="16"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="7" pos:column="5">int<pos:position pos:line="7" pos:column="8"/></name></type> <name pos:line="7" pos:column="9">i<pos:position pos:line="7" pos:column="10"/></name></decl>, <decl><type ref="prev"/><name pos:line="7" pos:column="12">n<pos:position pos:line="7" pos:column="13"/></name></decl>;<pos:position pos:line="7" pos:column="14"/></decl_stmt>

    <if pos:line="9" pos:column="5">if <condition pos:line="9" pos:column="8">(<expr><operator pos:line="9" pos:column="9">!<pos:position pos:line="9" pos:column="10"/></operator><name pos:line="9" pos:column="10">x509<pos:position pos:line="9" pos:column="14"/></name> <operator pos:line="9" pos:column="15">||<pos:position pos:line="9" pos:column="17"/></operator> <operator pos:line="9" pos:column="18">!<pos:position pos:line="9" pos:column="19"/></operator><operator pos:line="9" pos:column="19">(<pos:position pos:line="9" pos:column="20"/></operator><operator pos:line="9" pos:column="20">*<pos:position pos:line="9" pos:column="21"/></operator><name pos:line="9" pos:column="21">ids<pos:position pos:line="9" pos:column="24"/></name> <operator pos:line="9" pos:column="25">=<pos:position pos:line="9" pos:column="26"/></operator> <call><name pos:line="9" pos:column="27">apr_array_make<pos:position pos:line="9" pos:column="41"/></name><argument_list pos:line="9" pos:column="41">(<argument><expr><name pos:line="9" pos:column="42">p<pos:position pos:line="9" pos:column="43"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="9" pos:column="45">0<pos:position pos:line="9" pos:column="46"/></literal></expr></argument>, <argument><expr><sizeof pos:line="9" pos:column="48">sizeof<argument_list pos:line="9" pos:column="54">(<argument><expr><name pos:line="9" pos:column="55">char<pos:position pos:line="9" pos:column="59"/></name> <operator pos:line="9" pos:column="60">*<pos:position pos:line="9" pos:column="61"/></operator></expr></argument>)<pos:position pos:line="9" pos:column="62"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="9" pos:column="63"/></argument_list></call><operator pos:line="9" pos:column="63">)<pos:position pos:line="9" pos:column="64"/></operator></expr>)<pos:position pos:line="9" pos:column="65"/></condition><then pos:line="9" pos:column="65"> <block pos:line="9" pos:column="66">{
        <expr_stmt><expr><operator pos:line="10" pos:column="9">*<pos:position pos:line="10" pos:column="10"/></operator><name pos:line="10" pos:column="10">ids<pos:position pos:line="10" pos:column="13"/></name> <operator pos:line="10" pos:column="14">=<pos:position pos:line="10" pos:column="15"/></operator> <name pos:line="10" pos:column="16">NULL<pos:position pos:line="10" pos:column="20"/></name></expr>;<pos:position pos:line="10" pos:column="21"/></expr_stmt>
        <return pos:line="11" pos:column="9">return <expr><name pos:line="11" pos:column="16">FALSE<pos:position pos:line="11" pos:column="21"/></name></expr>;<pos:position pos:line="11" pos:column="22"/></return>
    }<pos:position pos:line="12" pos:column="6"/></block></then></if>

    <comment type="block" pos:line="14" pos:column="5">/* First, the DNS-IDs (dNSName entries in the subjectAltName extension) */</comment>
    <if pos:line="15" pos:column="5">if <condition pos:line="15" pos:column="8">(<expr><operator pos:line="15" pos:column="9">(<pos:position pos:line="15" pos:column="10"/></operator><name pos:line="15" pos:column="10">names<pos:position pos:line="15" pos:column="15"/></name> <operator pos:line="15" pos:column="16">=<pos:position pos:line="15" pos:column="17"/></operator> <call><name pos:line="15" pos:column="18">X509_get_ext_d2i<pos:position pos:line="15" pos:column="34"/></name><argument_list pos:line="15" pos:column="34">(<argument><expr><name pos:line="15" pos:column="35">x509<pos:position pos:line="15" pos:column="39"/></name></expr></argument>, <argument><expr><name pos:line="15" pos:column="41">NID_subject_alt_name<pos:position pos:line="15" pos:column="61"/></name></expr></argument>, <argument><expr><name pos:line="15" pos:column="63">NULL<pos:position pos:line="15" pos:column="67"/></name></expr></argument>, <argument><expr><name pos:line="15" pos:column="69">NULL<pos:position pos:line="15" pos:column="73"/></name></expr></argument>)<pos:position pos:line="15" pos:column="74"/></argument_list></call><operator pos:line="15" pos:column="74">)<pos:position pos:line="15" pos:column="75"/></operator> <operator pos:line="15" pos:column="76">&amp;&amp;<pos:position pos:line="15" pos:column="86"/></operator>
        <operator pos:line="16" pos:column="9">(<pos:position pos:line="16" pos:column="10"/></operator><name pos:line="16" pos:column="10">bio<pos:position pos:line="16" pos:column="13"/></name> <operator pos:line="16" pos:column="14">=<pos:position pos:line="16" pos:column="15"/></operator> <call><name pos:line="16" pos:column="16">BIO_new<pos:position pos:line="16" pos:column="23"/></name><argument_list pos:line="16" pos:column="23">(<argument><expr><call><name pos:line="16" pos:column="24">BIO_s_mem<pos:position pos:line="16" pos:column="33"/></name><argument_list pos:line="16" pos:column="33">()<pos:position pos:line="16" pos:column="35"/></argument_list></call></expr></argument>)<pos:position pos:line="16" pos:column="36"/></argument_list></call><operator pos:line="16" pos:column="36">)<pos:position pos:line="16" pos:column="37"/></operator></expr>)<pos:position pos:line="16" pos:column="38"/></condition><then pos:line="16" pos:column="38"> <block pos:line="16" pos:column="39">{
        <decl_stmt><decl><type><name pos:line="17" pos:column="9">GENERAL_NAME<pos:position pos:line="17" pos:column="21"/></name> <modifier pos:line="17" pos:column="22">*<pos:position pos:line="17" pos:column="23"/></modifier></type><name pos:line="17" pos:column="23">name<pos:position pos:line="17" pos:column="27"/></name></decl>;<pos:position pos:line="17" pos:column="28"/></decl_stmt>

        <for pos:line="19" pos:column="9">for <control pos:line="19" pos:column="13">(<init><expr><name pos:line="19" pos:column="14">i<pos:position pos:line="19" pos:column="15"/></name> <operator pos:line="19" pos:column="16">=<pos:position pos:line="19" pos:column="17"/></operator> <literal type="number" pos:line="19" pos:column="18">0<pos:position pos:line="19" pos:column="19"/></literal></expr>;<pos:position pos:line="19" pos:column="20"/></init> <condition><expr><name pos:line="19" pos:column="21">i<pos:position pos:line="19" pos:column="22"/></name> <operator pos:line="19" pos:column="23">&lt;<pos:position pos:line="19" pos:column="27"/></operator> <call><name pos:line="19" pos:column="25">sk_GENERAL_NAME_num<pos:position pos:line="19" pos:column="44"/></name><argument_list pos:line="19" pos:column="44">(<argument><expr><name pos:line="19" pos:column="45">names<pos:position pos:line="19" pos:column="50"/></name></expr></argument>)<pos:position pos:line="19" pos:column="51"/></argument_list></call></expr>;<pos:position pos:line="19" pos:column="52"/></condition> <incr><expr><name pos:line="19" pos:column="53">i<pos:position pos:line="19" pos:column="54"/></name><operator pos:line="19" pos:column="54">++<pos:position pos:line="19" pos:column="56"/></operator></expr></incr>)<pos:position pos:line="19" pos:column="57"/></control> <block pos:line="19" pos:column="58">{
            <expr_stmt><expr><name pos:line="20" pos:column="13">name<pos:position pos:line="20" pos:column="17"/></name> <operator pos:line="20" pos:column="18">=<pos:position pos:line="20" pos:column="19"/></operator> <call><name pos:line="20" pos:column="20">sk_GENERAL_NAME_value<pos:position pos:line="20" pos:column="41"/></name><argument_list pos:line="20" pos:column="41">(<argument><expr><name pos:line="20" pos:column="42">names<pos:position pos:line="20" pos:column="47"/></name></expr></argument>, <argument><expr><name pos:line="20" pos:column="49">i<pos:position pos:line="20" pos:column="50"/></name></expr></argument>)<pos:position pos:line="20" pos:column="51"/></argument_list></call></expr>;<pos:position pos:line="20" pos:column="52"/></expr_stmt>
            <if pos:line="21" pos:column="13">if <condition pos:line="21" pos:column="16">(<expr><name><name pos:line="21" pos:column="17">name<pos:position pos:line="21" pos:column="21"/></name><operator pos:line="21" pos:column="21">-&gt;<pos:position pos:line="21" pos:column="26"/></operator><name pos:line="21" pos:column="23">type<pos:position pos:line="21" pos:column="27"/></name></name> <operator pos:line="21" pos:column="28">==<pos:position pos:line="21" pos:column="30"/></operator> <name pos:line="21" pos:column="31">GEN_DNS<pos:position pos:line="21" pos:column="38"/></name></expr>)<pos:position pos:line="21" pos:column="39"/></condition><then pos:line="21" pos:column="39"> <block pos:line="21" pos:column="40">{
                <expr_stmt><expr><call><name pos:line="22" pos:column="17">ASN1_STRING_print_ex<pos:position pos:line="22" pos:column="37"/></name><argument_list pos:line="22" pos:column="37">(<argument><expr><name pos:line="22" pos:column="38">bio<pos:position pos:line="22" pos:column="41"/></name></expr></argument>, <argument><expr><name><name pos:line="22" pos:column="43">name<pos:position pos:line="22" pos:column="47"/></name><operator pos:line="22" pos:column="47">-&gt;<pos:position pos:line="22" pos:column="52"/></operator><name pos:line="22" pos:column="49">d<pos:position pos:line="22" pos:column="50"/></name><operator pos:line="22" pos:column="50">.<pos:position pos:line="22" pos:column="51"/></operator><name pos:line="22" pos:column="51">ia5<pos:position pos:line="22" pos:column="54"/></name></name></expr></argument>, <argument><expr><name pos:line="22" pos:column="56">ASN1_STRFLGS_ESC_CTRL<pos:position pos:line="22" pos:column="77"/></name><operator pos:line="22" pos:column="77">|<pos:position pos:line="22" pos:column="78"/></operator>
                                     <name pos:line="23" pos:column="38">ASN1_STRFLGS_UTF8_CONVERT<pos:position pos:line="23" pos:column="63"/></name></expr></argument>)<pos:position pos:line="23" pos:column="64"/></argument_list></call></expr>;<pos:position pos:line="23" pos:column="65"/></expr_stmt>
                <expr_stmt><expr><name pos:line="24" pos:column="17">n<pos:position pos:line="24" pos:column="18"/></name> <operator pos:line="24" pos:column="19">=<pos:position pos:line="24" pos:column="20"/></operator> <call><name pos:line="24" pos:column="21">BIO_pending<pos:position pos:line="24" pos:column="32"/></name><argument_list pos:line="24" pos:column="32">(<argument><expr><name pos:line="24" pos:column="33">bio<pos:position pos:line="24" pos:column="36"/></name></expr></argument>)<pos:position pos:line="24" pos:column="37"/></argument_list></call></expr>;<pos:position pos:line="24" pos:column="38"/></expr_stmt>
                <if pos:line="25" pos:column="17">if <condition pos:line="25" pos:column="20">(<expr><name pos:line="25" pos:column="21">n<pos:position pos:line="25" pos:column="22"/></name> <operator pos:line="25" pos:column="23">&gt;<pos:position pos:line="25" pos:column="27"/></operator> <literal type="number" pos:line="25" pos:column="25">0<pos:position pos:line="25" pos:column="26"/></literal></expr>)<pos:position pos:line="25" pos:column="27"/></condition><then pos:line="25" pos:column="27"> <block pos:line="25" pos:column="28">{
                    <expr_stmt><expr><name pos:line="26" pos:column="21">cpp<pos:position pos:line="26" pos:column="24"/></name> <operator pos:line="26" pos:column="25">=<pos:position pos:line="26" pos:column="26"/></operator> <operator pos:line="26" pos:column="27">(<pos:position pos:line="26" pos:column="28"/></operator><name pos:line="26" pos:column="28">char<pos:position pos:line="26" pos:column="32"/></name> <operator pos:line="26" pos:column="33">*<pos:position pos:line="26" pos:column="34"/></operator><operator pos:line="26" pos:column="34">*<pos:position pos:line="26" pos:column="35"/></operator><operator pos:line="26" pos:column="35">)<pos:position pos:line="26" pos:column="36"/></operator><call><name pos:line="26" pos:column="36">apr_array_push<pos:position pos:line="26" pos:column="50"/></name><argument_list pos:line="26" pos:column="50">(<argument><expr><operator pos:line="26" pos:column="51">*<pos:position pos:line="26" pos:column="52"/></operator><name pos:line="26" pos:column="52">ids<pos:position pos:line="26" pos:column="55"/></name></expr></argument>)<pos:position pos:line="26" pos:column="56"/></argument_list></call></expr>;<pos:position pos:line="26" pos:column="57"/></expr_stmt>
                    <expr_stmt><expr><operator pos:line="27" pos:column="21">*<pos:position pos:line="27" pos:column="22"/></operator><name pos:line="27" pos:column="22">cpp<pos:position pos:line="27" pos:column="25"/></name> <operator pos:line="27" pos:column="26">=<pos:position pos:line="27" pos:column="27"/></operator> <call><name pos:line="27" pos:column="28">apr_palloc<pos:position pos:line="27" pos:column="38"/></name><argument_list pos:line="27" pos:column="38">(<argument><expr><name pos:line="27" pos:column="39">p<pos:position pos:line="27" pos:column="40"/></name></expr></argument>, <argument><expr><name pos:line="27" pos:column="42">n<pos:position pos:line="27" pos:column="43"/></name><operator pos:line="27" pos:column="43">+<pos:position pos:line="27" pos:column="44"/></operator><literal type="number" pos:line="27" pos:column="44">1<pos:position pos:line="27" pos:column="45"/></literal></expr></argument>)<pos:position pos:line="27" pos:column="46"/></argument_list></call></expr>;<pos:position pos:line="27" pos:column="47"/></expr_stmt>
                    <expr_stmt><expr><name pos:line="28" pos:column="21">n<pos:position pos:line="28" pos:column="22"/></name> <operator pos:line="28" pos:column="23">=<pos:position pos:line="28" pos:column="24"/></operator> <call><name pos:line="28" pos:column="25">BIO_read<pos:position pos:line="28" pos:column="33"/></name><argument_list pos:line="28" pos:column="33">(<argument><expr><name pos:line="28" pos:column="34">bio<pos:position pos:line="28" pos:column="37"/></name></expr></argument>, <argument><expr><operator pos:line="28" pos:column="39">*<pos:position pos:line="28" pos:column="40"/></operator><name pos:line="28" pos:column="40">cpp<pos:position pos:line="28" pos:column="43"/></name></expr></argument>, <argument><expr><name pos:line="28" pos:column="45">n<pos:position pos:line="28" pos:column="46"/></name></expr></argument>)<pos:position pos:line="28" pos:column="47"/></argument_list></call></expr>;<pos:position pos:line="28" pos:column="48"/></expr_stmt>
                    <expr_stmt><expr><operator pos:line="29" pos:column="21">(<pos:position pos:line="29" pos:column="22"/></operator><operator pos:line="29" pos:column="22">*<pos:position pos:line="29" pos:column="23"/></operator><name pos:line="29" pos:column="23">cpp<pos:position pos:line="29" pos:column="26"/></name><operator pos:line="29" pos:column="26">)<pos:position pos:line="29" pos:column="27"/></operator><index pos:line="29" pos:column="27">[<expr><name pos:line="29" pos:column="28">n<pos:position pos:line="29" pos:column="29"/></name></expr>]<pos:position pos:line="29" pos:column="30"/></index> <operator pos:line="29" pos:column="31">=<pos:position pos:line="29" pos:column="32"/></operator> <name pos:line="29" pos:column="33">NUL<pos:position pos:line="29" pos:column="36"/></name></expr>;<pos:position pos:line="29" pos:column="37"/></expr_stmt>
                }<pos:position pos:line="30" pos:column="18"/></block></then></if>
            }<pos:position pos:line="31" pos:column="14"/></block></then></if>
        }<pos:position pos:line="32" pos:column="10"/></block></for>
        <expr_stmt><expr><call><name pos:line="33" pos:column="9">BIO_free<pos:position pos:line="33" pos:column="17"/></name><argument_list pos:line="33" pos:column="17">(<argument><expr><name pos:line="33" pos:column="18">bio<pos:position pos:line="33" pos:column="21"/></name></expr></argument>)<pos:position pos:line="33" pos:column="22"/></argument_list></call></expr>;<pos:position pos:line="33" pos:column="23"/></expr_stmt>
    }<pos:position pos:line="34" pos:column="6"/></block></then></if>

    <if pos:line="36" pos:column="5">if <condition pos:line="36" pos:column="8">(<expr><name pos:line="36" pos:column="9">names<pos:position pos:line="36" pos:column="14"/></name></expr>)<pos:position pos:line="36" pos:column="15"/></condition><then pos:line="36" pos:column="15">
        <block type="pseudo"><expr_stmt><expr><call><name pos:line="37" pos:column="9">sk_GENERAL_NAME_pop_free<pos:position pos:line="37" pos:column="33"/></name><argument_list pos:line="37" pos:column="33">(<argument><expr><name pos:line="37" pos:column="34">names<pos:position pos:line="37" pos:column="39"/></name></expr></argument>, <argument><expr><name pos:line="37" pos:column="41">GENERAL_NAME_free<pos:position pos:line="37" pos:column="58"/></name></expr></argument>)<pos:position pos:line="37" pos:column="59"/></argument_list></call></expr>;<pos:position pos:line="37" pos:column="60"/></expr_stmt></block></then></if>

    <comment type="block" pos:line="39" pos:column="5">/* Second, the CN-IDs (commonName attributes in the subject DN) */</comment>
    <expr_stmt><expr><name pos:line="40" pos:column="5">subj<pos:position pos:line="40" pos:column="9"/></name> <operator pos:line="40" pos:column="10">=<pos:position pos:line="40" pos:column="11"/></operator> <call><name pos:line="40" pos:column="12">X509_get_subject_name<pos:position pos:line="40" pos:column="33"/></name><argument_list pos:line="40" pos:column="33">(<argument><expr><name pos:line="40" pos:column="34">x509<pos:position pos:line="40" pos:column="38"/></name></expr></argument>)<pos:position pos:line="40" pos:column="39"/></argument_list></call></expr>;<pos:position pos:line="40" pos:column="40"/></expr_stmt>
    <expr_stmt><expr><name pos:line="41" pos:column="5">i<pos:position pos:line="41" pos:column="6"/></name> <operator pos:line="41" pos:column="7">=<pos:position pos:line="41" pos:column="8"/></operator> <operator pos:line="41" pos:column="9">-<pos:position pos:line="41" pos:column="10"/></operator><literal type="number" pos:line="41" pos:column="10">1<pos:position pos:line="41" pos:column="11"/></literal></expr>;<pos:position pos:line="41" pos:column="12"/></expr_stmt>
    <while pos:line="42" pos:column="5">while <condition pos:line="42" pos:column="11">(<expr><operator pos:line="42" pos:column="12">(<pos:position pos:line="42" pos:column="13"/></operator><name pos:line="42" pos:column="13">i<pos:position pos:line="42" pos:column="14"/></name> <operator pos:line="42" pos:column="15">=<pos:position pos:line="42" pos:column="16"/></operator> <call><name pos:line="42" pos:column="17">X509_NAME_get_index_by_NID<pos:position pos:line="42" pos:column="43"/></name><argument_list pos:line="42" pos:column="43">(<argument><expr><name pos:line="42" pos:column="44">subj<pos:position pos:line="42" pos:column="48"/></name></expr></argument>, <argument><expr><name pos:line="42" pos:column="50">NID_commonName<pos:position pos:line="42" pos:column="64"/></name></expr></argument>, <argument><expr><name pos:line="42" pos:column="66">i<pos:position pos:line="42" pos:column="67"/></name></expr></argument>)<pos:position pos:line="42" pos:column="68"/></argument_list></call><operator pos:line="42" pos:column="68">)<pos:position pos:line="42" pos:column="69"/></operator> <operator pos:line="42" pos:column="70">!=<pos:position pos:line="42" pos:column="72"/></operator> <operator pos:line="42" pos:column="73">-<pos:position pos:line="42" pos:column="74"/></operator><literal type="number" pos:line="42" pos:column="74">1<pos:position pos:line="42" pos:column="75"/></literal></expr>)<pos:position pos:line="42" pos:column="76"/></condition> <block pos:line="42" pos:column="77">{
        <expr_stmt><expr><name pos:line="43" pos:column="9">cpp<pos:position pos:line="43" pos:column="12"/></name> <operator pos:line="43" pos:column="13">=<pos:position pos:line="43" pos:column="14"/></operator> <operator pos:line="43" pos:column="15">(<pos:position pos:line="43" pos:column="16"/></operator><name pos:line="43" pos:column="16">char<pos:position pos:line="43" pos:column="20"/></name> <operator pos:line="43" pos:column="21">*<pos:position pos:line="43" pos:column="22"/></operator><operator pos:line="43" pos:column="22">*<pos:position pos:line="43" pos:column="23"/></operator><operator pos:line="43" pos:column="23">)<pos:position pos:line="43" pos:column="24"/></operator><call><name pos:line="43" pos:column="24">apr_array_push<pos:position pos:line="43" pos:column="38"/></name><argument_list pos:line="43" pos:column="38">(<argument><expr><operator pos:line="43" pos:column="39">*<pos:position pos:line="43" pos:column="40"/></operator><name pos:line="43" pos:column="40">ids<pos:position pos:line="43" pos:column="43"/></name></expr></argument>)<pos:position pos:line="43" pos:column="44"/></argument_list></call></expr>;<pos:position pos:line="43" pos:column="45"/></expr_stmt>
        <expr_stmt><expr><operator pos:line="44" pos:column="9">*<pos:position pos:line="44" pos:column="10"/></operator><name pos:line="44" pos:column="10">cpp<pos:position pos:line="44" pos:column="13"/></name> <operator pos:line="44" pos:column="14">=<pos:position pos:line="44" pos:column="15"/></operator> <call><name pos:line="44" pos:column="16">SSL_X509_NAME_ENTRY_to_string<pos:position pos:line="44" pos:column="45"/></name><argument_list pos:line="44" pos:column="45">(<argument><expr><name pos:line="44" pos:column="46">p<pos:position pos:line="44" pos:column="47"/></name></expr></argument>, <argument><expr><call><name pos:line="44" pos:column="49">X509_NAME_get_entry<pos:position pos:line="44" pos:column="68"/></name><argument_list pos:line="44" pos:column="68">(<argument><expr><name pos:line="44" pos:column="69">subj<pos:position pos:line="44" pos:column="73"/></name></expr></argument>, <argument><expr><name pos:line="44" pos:column="75">i<pos:position pos:line="44" pos:column="76"/></name></expr></argument>)<pos:position pos:line="44" pos:column="77"/></argument_list></call></expr></argument>)<pos:position pos:line="44" pos:column="78"/></argument_list></call></expr>;<pos:position pos:line="44" pos:column="79"/></expr_stmt>
    }<pos:position pos:line="45" pos:column="6"/></block></while>

    <return pos:line="47" pos:column="5">return <expr><ternary><condition><expr><call><name pos:line="47" pos:column="12">apr_is_empty_array<pos:position pos:line="47" pos:column="30"/></name><argument_list pos:line="47" pos:column="30">(<argument><expr><operator pos:line="47" pos:column="31">*<pos:position pos:line="47" pos:column="32"/></operator><name pos:line="47" pos:column="32">ids<pos:position pos:line="47" pos:column="35"/></name></expr></argument>)<pos:position pos:line="47" pos:column="36"/></argument_list></call></expr> ?<pos:position pos:line="47" pos:column="38"/></condition><then pos:line="47" pos:column="38"> <expr><name pos:line="47" pos:column="39">FALSE<pos:position pos:line="47" pos:column="44"/></name></expr> <pos:position pos:line="47" pos:column="45"/></then><else pos:line="47" pos:column="45">: <expr><name pos:line="47" pos:column="47">TRUE<pos:position pos:line="47" pos:column="51"/></name></expr></else></ternary></expr>;<pos:position pos:line="47" pos:column="52"/></return>
}<pos:position pos:line="48" pos:column="2"/></block></function></unit>
